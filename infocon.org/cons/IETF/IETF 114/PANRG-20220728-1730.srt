1
00:00:07,359 --> 00:00:10,359
hmm

2
00:00:35,280 --> 00:00:38,520
hi brian

3
00:00:46,590 --> 00:00:49,659
[Music]

4
00:00:56,239 --> 00:00:58,320
okay i think we can just give people a

5
00:00:58,320 --> 00:01:03,640
few more minutes to get back from lunch

6
00:01:25,759 --> 00:01:27,840
you

7
00:02:07,119 --> 00:02:09,360
okay i think we can

8
00:02:09,360 --> 00:02:12,319
do some slow start

9
00:02:12,319 --> 00:02:13,599
welcome to

10
00:02:13,599 --> 00:02:16,160
energy

11
00:02:16,319 --> 00:02:17,680
brian with us

12
00:02:17,680 --> 00:02:19,920
removed

13
00:02:19,920 --> 00:02:23,280
appreciated staying late

14
00:02:23,280 --> 00:02:26,000
okay so

15
00:02:26,000 --> 00:02:28,879
rtf note well

16
00:02:28,879 --> 00:02:31,360
please take a look if you have not seen

17
00:02:31,360 --> 00:02:33,680
it many times this week and if even if

18
00:02:33,680 --> 00:02:35,120
you did

19
00:02:35,120 --> 00:02:37,840
still take a look

20
00:02:40,239 --> 00:02:41,040
uh

21
00:02:41,040 --> 00:02:42,480
housekeeping

22
00:02:42,480 --> 00:02:46,319
uh please please scan this qr code so

23
00:02:46,319 --> 00:02:48,879
your name can appear as

24
00:02:48,879 --> 00:02:52,239
attendee uh if you want to ask the

25
00:02:52,239 --> 00:02:55,519
question i would appreciate if you use

26
00:02:55,519 --> 00:02:58,080
on-site to meet echo but there are not

27
00:02:58,080 --> 00:03:00,480
so many people today but still it does

28
00:03:00,480 --> 00:03:04,879
make chairs life easier if you use the

29
00:03:04,879 --> 00:03:07,200
application to join the queue so i can

30
00:03:07,200 --> 00:03:10,080
manage the view from one place

31
00:03:10,080 --> 00:03:11,200
and

32
00:03:11,200 --> 00:03:14,480
if you're participating remotely please

33
00:03:14,480 --> 00:03:18,159
keep your video off

34
00:03:18,159 --> 00:03:19,760
so

35
00:03:19,760 --> 00:03:22,800
again i was going to say please wear the

36
00:03:22,800 --> 00:03:25,519
mask but everyone is doing it already

37
00:03:25,519 --> 00:03:27,760
great

38
00:03:27,760 --> 00:03:30,080
yeah oh completely forgotten we need

39
00:03:30,080 --> 00:03:33,840
meanness taker

40
00:03:38,879 --> 00:03:41,518
come on

41
00:03:43,920 --> 00:03:45,920
i think we need to either like random

42
00:03:45,920 --> 00:03:48,239
number generator

43
00:03:48,239 --> 00:03:50,159
to randomly select people in the room

44
00:03:50,159 --> 00:03:53,599
come on i guess we really need this

45
00:03:58,560 --> 00:04:00,400
really thank you very much

46
00:04:00,400 --> 00:04:01,840
i'll buy you a drink

47
00:04:01,840 --> 00:04:04,239
after

48
00:04:05,200 --> 00:04:06,560
uh

49
00:04:06,560 --> 00:04:09,360
agenda i think i got the time wrong but

50
00:04:09,360 --> 00:04:10,799
so ignore the

51
00:04:10,799 --> 00:04:12,000
time slot

52
00:04:12,000 --> 00:04:15,200
time zones are hard for me so what we

53
00:04:15,200 --> 00:04:17,358
have today i'll be speaking for a few

54
00:04:17,358 --> 00:04:18,639
more minutes

55
00:04:18,639 --> 00:04:22,720
and then we gonna have quite a long

56
00:04:22,720 --> 00:04:25,840
interesting discussion about cyan

57
00:04:25,840 --> 00:04:29,040
and nicola going to talk about it and

58
00:04:29,040 --> 00:04:32,160
brian and i will keep the room in order

59
00:04:32,160 --> 00:04:34,880
and then we have two presentations each

60
00:04:34,880 --> 00:04:38,400
for 15 minutes one is overlay routing

61
00:04:38,400 --> 00:04:40,560
problem statement and the second one is

62
00:04:40,560 --> 00:04:42,800
separation of data path and data flow

63
00:04:42,800 --> 00:04:44,400
sub layer

64
00:04:44,400 --> 00:04:47,199
so any last minute agenda questions

65
00:04:47,199 --> 00:04:49,120
suggestions

66
00:04:49,120 --> 00:04:51,040
comments disagreements about what you're

67
00:04:51,040 --> 00:04:53,759
going to talk about

68
00:04:54,800 --> 00:04:55,680
okay

69
00:04:55,680 --> 00:04:58,400
looks like we all good

70
00:04:58,400 --> 00:05:01,520
so what's happened since vienna

71
00:05:01,520 --> 00:05:05,759
so we had an interim on san architecture

72
00:05:05,759 --> 00:05:08,160
there is a link to materials from the

73
00:05:08,160 --> 00:05:10,080
slide deck if you don't know where to

74
00:05:10,080 --> 00:05:14,000
find the interim materials

75
00:05:14,000 --> 00:05:15,039
and

76
00:05:15,039 --> 00:05:16,720
we

77
00:05:16,720 --> 00:05:17,919
passed the

78
00:05:17,919 --> 00:05:20,240
research group last call for pass

79
00:05:20,240 --> 00:05:22,639
properties but we're currently painting

80
00:05:22,639 --> 00:05:24,960
the updated version so i think even

81
00:05:24,960 --> 00:05:27,280
shepherd write up has been done

82
00:05:27,280 --> 00:05:29,680
as soon as uh rhiz

83
00:05:29,680 --> 00:05:31,440
submits the updated versions we're

84
00:05:31,440 --> 00:05:32,880
probably going to

85
00:05:32,880 --> 00:05:35,919
advance the document

86
00:05:35,919 --> 00:05:37,039
and

87
00:05:37,039 --> 00:05:40,479
that's all i have for brian any comments

88
00:05:40,479 --> 00:05:43,440
did i miss anything

89
00:05:49,280 --> 00:05:50,840
nope all

90
00:05:50,840 --> 00:05:56,080
good okay so then we move to

91
00:05:56,080 --> 00:05:59,120
san an you're going to share the slides

92
00:05:59,120 --> 00:06:02,880
or you want me to press prison

93
00:06:03,440 --> 00:06:04,840
oh beautiful

94
00:06:04,840 --> 00:06:08,319
look yeah i'm grinding you

95
00:06:08,319 --> 00:06:12,120
technology works

96
00:06:20,720 --> 00:06:23,199
all right i'll get started yes

97
00:06:23,199 --> 00:06:25,680
like stay close to the mic probably okay

98
00:06:25,680 --> 00:06:28,080
yeah all right so okay the slides are

99
00:06:28,080 --> 00:06:29,360
here good

100
00:06:29,360 --> 00:06:32,560
uh so first of all uh hi uh everyone my

101
00:06:32,560 --> 00:06:35,280
name is nicola from 88 zurich and today

102
00:06:35,280 --> 00:06:37,759
we will be looking at scion

103
00:06:37,759 --> 00:06:38,960
the next generation internet

104
00:06:38,960 --> 00:06:40,960
architecture specifically we'll be

105
00:06:40,960 --> 00:06:41,919
looking at

106
00:06:41,919 --> 00:06:44,560
a component analysis

107
00:06:44,560 --> 00:06:47,039
so before getting started i wanted to

108
00:06:47,039 --> 00:06:48,880
quickly touch on some background

109
00:06:48,880 --> 00:06:50,160
information

110
00:06:50,160 --> 00:06:52,639
we are not going to talk about how cyan

111
00:06:52,639 --> 00:06:54,479
works in details today

112
00:06:54,479 --> 00:06:56,639
we are not going to give an overview we

113
00:06:56,639 --> 00:06:59,440
have already done that before so if you

114
00:06:59,440 --> 00:07:01,360
want to know more about that please

115
00:07:01,360 --> 00:07:03,599
refer to the existing draft that we have

116
00:07:03,599 --> 00:07:06,400
been discussing at the interim meeting

117
00:07:06,400 --> 00:07:09,360
the draft is linked in the slide deck

118
00:07:09,360 --> 00:07:10,960
but i'll still give you a very quick

119
00:07:10,960 --> 00:07:13,758
overview about

120
00:07:13,919 --> 00:07:15,919
what scion does and what it is just in

121
00:07:15,919 --> 00:07:17,360
case you have

122
00:07:17,360 --> 00:07:19,039
not heard about it before it is a

123
00:07:19,039 --> 00:07:20,319
pathway

124
00:07:20,319 --> 00:07:23,759
internet architecture it is inter-domain

125
00:07:23,759 --> 00:07:25,759
and when designing it

126
00:07:25,759 --> 00:07:26,560
we

127
00:07:26,560 --> 00:07:28,880
focus on certain properties

128
00:07:28,880 --> 00:07:30,880
first of all availability and

129
00:07:30,880 --> 00:07:32,720
availability means

130
00:07:32,720 --> 00:07:35,199
not only availability in case a link

131
00:07:35,199 --> 00:07:38,240
fails but especially availability when

132
00:07:38,240 --> 00:07:40,400
there are adversaries in

133
00:07:40,400 --> 00:07:42,080
in some parts of your network and this

134
00:07:42,080 --> 00:07:44,560
is very important when you do

135
00:07:44,560 --> 00:07:46,639
build something that has to be deployed

136
00:07:46,639 --> 00:07:48,639
inter domain where there's different

137
00:07:48,639 --> 00:07:50,319
domains and

138
00:07:50,319 --> 00:07:53,120
not they they don't necessarily mutually

139
00:07:53,120 --> 00:07:55,199
trust each other

140
00:07:55,199 --> 00:07:56,800
security is also a very important

141
00:07:56,800 --> 00:07:59,039
component

142
00:07:59,039 --> 00:08:01,250
i'm talking about routing security so

143
00:08:01,250 --> 00:08:04,350
[Music]

144
00:08:04,400 --> 00:08:06,080
making sure that traffic cannot be

145
00:08:06,080 --> 00:08:07,440
redirected

146
00:08:07,440 --> 00:08:09,599
and ultimately scalability when it comes

147
00:08:09,599 --> 00:08:12,080
to being able to deploy scion on a large

148
00:08:12,080 --> 00:08:13,039
scale

149
00:08:13,039 --> 00:08:14,960
were all very important

150
00:08:14,960 --> 00:08:17,120
when designing the architecture so it

151
00:08:17,120 --> 00:08:19,520
started as a research project back in

152
00:08:19,520 --> 00:08:21,120
2009

153
00:08:21,120 --> 00:08:23,199
and the architecture somehow slipped out

154
00:08:23,199 --> 00:08:26,319
of the lab so today it is in production

155
00:08:26,319 --> 00:08:30,240
use by a few isps mostly in europe

156
00:08:30,240 --> 00:08:32,240
and specifically in switzerland the

157
00:08:32,240 --> 00:08:34,399
inter-banking network

158
00:08:34,399 --> 00:08:36,559
is now being migrated to zion so

159
00:08:36,559 --> 00:08:38,799
whenever you pay some money from one

160
00:08:38,799 --> 00:08:41,599
bank to the other then these banks

161
00:08:41,599 --> 00:08:42,719
have to

162
00:08:42,719 --> 00:08:45,200
send some bits to each other and this

163
00:08:45,200 --> 00:08:47,680
is being migrated to use zion

164
00:08:47,680 --> 00:08:49,760
that means that we have gained some

165
00:08:49,760 --> 00:08:52,320
deployment experience and there's also

166
00:08:52,320 --> 00:08:55,680
several uh implementations which is why

167
00:08:55,680 --> 00:08:56,399
uh

168
00:08:56,399 --> 00:08:58,480
oops i'm sorry

169
00:08:58,480 --> 00:09:00,880
why standardization is uh quite

170
00:09:00,880 --> 00:09:02,240
important right now and that's why we're

171
00:09:02,240 --> 00:09:03,680
having this um

172
00:09:03,680 --> 00:09:05,680
this discussion here

173
00:09:05,680 --> 00:09:08,800
so what happened so far let me just get

174
00:09:08,800 --> 00:09:11,040
to the right slide

175
00:09:11,040 --> 00:09:13,040
before getting to uh to the discussion i

176
00:09:13,040 --> 00:09:15,360
wanted to just remind uh of another

177
00:09:15,360 --> 00:09:17,120
property of scion and this is the

178
00:09:17,120 --> 00:09:19,600
property of isolation domains

179
00:09:19,600 --> 00:09:21,680
so in cyan autonomous systems are

180
00:09:21,680 --> 00:09:23,839
grouped into isolation domains and they

181
00:09:23,839 --> 00:09:27,360
are the big circles that you see in this

182
00:09:27,360 --> 00:09:29,440
in this drawing here and each node

183
00:09:29,440 --> 00:09:31,920
represents an autonomous system

184
00:09:31,920 --> 00:09:34,160
it is very important to remember

185
00:09:34,160 --> 00:09:36,560
this structure because each isolation

186
00:09:36,560 --> 00:09:38,320
domain has its own

187
00:09:38,320 --> 00:09:40,480
root of trust and this is independent

188
00:09:40,480 --> 00:09:42,800
from other isolation domain and this

189
00:09:42,800 --> 00:09:44,640
property is quite important to

190
00:09:44,640 --> 00:09:47,600
understand how the architecture works

191
00:09:47,600 --> 00:09:49,120
this is also important because of

192
00:09:49,120 --> 00:09:51,680
scalability because the routing process

193
00:09:51,680 --> 00:09:54,480
is somehow split into an intra isd and

194
00:09:54,480 --> 00:09:57,760
into an inter isd so just keep this in

195
00:09:57,760 --> 00:09:59,519
mind and we'll get back to this concept

196
00:09:59,519 --> 00:10:00,959
later

197
00:10:00,959 --> 00:10:02,560
what happened so far

198
00:10:02,560 --> 00:10:05,200
so we have been um discussing scion

199
00:10:05,200 --> 00:10:07,680
already at the itf 113 we had some

200
00:10:07,680 --> 00:10:09,279
discussions at the routing area open

201
00:10:09,279 --> 00:10:11,680
meeting we had a site meeting uh to

202
00:10:11,680 --> 00:10:14,000
brainstorm about possible next steps and

203
00:10:14,000 --> 00:10:15,519
so i wanted to thank the chairs of

204
00:10:15,519 --> 00:10:18,480
banerjee for actually giving us for now

205
00:10:18,480 --> 00:10:20,640
a home where to have discussions about

206
00:10:20,640 --> 00:10:22,079
the architecture

207
00:10:22,079 --> 00:10:24,959
so back in june we actually presented a

208
00:10:24,959 --> 00:10:27,120
first overview draft that describes the

209
00:10:27,120 --> 00:10:30,000
architecture from a high level

210
00:10:30,000 --> 00:10:32,079
and during that discussion there were

211
00:10:32,079 --> 00:10:34,959
quite a few uh questions about uh about

212
00:10:34,959 --> 00:10:37,120
zion and that's what we're going to try

213
00:10:37,120 --> 00:10:39,200
to look into today

214
00:10:39,200 --> 00:10:41,120
so the questions specifically were

215
00:10:41,120 --> 00:10:42,480
mostly about

216
00:10:42,480 --> 00:10:44,480
scion and its components

217
00:10:44,480 --> 00:10:47,040
scion is designed as a system so there's

218
00:10:47,040 --> 00:10:49,440
few components that interact among each

219
00:10:49,440 --> 00:10:51,120
other and there are quite a few

220
00:10:51,120 --> 00:10:53,920
questions about what each component does

221
00:10:53,920 --> 00:10:56,240
and what the dependencies are between

222
00:10:56,240 --> 00:10:57,920
those components

223
00:10:57,920 --> 00:10:59,519
there were also questions about what

224
00:10:59,519 --> 00:11:01,440
protocols are we used what protocols are

225
00:11:01,440 --> 00:11:04,000
not reused and eventually why

226
00:11:04,000 --> 00:11:06,720
so today we're gonna try to uh dig into

227
00:11:06,720 --> 00:11:08,079
these aspects

228
00:11:08,079 --> 00:11:10,560
we are not uh gonna be looking at the

229
00:11:10,560 --> 00:11:12,480
motivation i think in our last

230
00:11:12,480 --> 00:11:14,640
discussion there were some

231
00:11:14,640 --> 00:11:17,360
mentions of a gap analysis draft

232
00:11:17,360 --> 00:11:19,440
and in the end it seemed to me that it

233
00:11:19,440 --> 00:11:21,120
was more important to focus on the

234
00:11:21,120 --> 00:11:23,040
components rather than on the gap

235
00:11:23,040 --> 00:11:26,160
analysis so we will not be focusing on

236
00:11:26,160 --> 00:11:28,720
on the gap analysis today

237
00:11:28,720 --> 00:11:29,839
so i guess

238
00:11:29,839 --> 00:11:30,800
we can

239
00:11:30,800 --> 00:11:33,040
get started

240
00:11:33,040 --> 00:11:34,800
and we can start the discussion about

241
00:11:34,800 --> 00:11:35,920
components

242
00:11:35,920 --> 00:11:37,839
by the way if you have questions i think

243
00:11:37,839 --> 00:11:40,560
we have impul time later so

244
00:11:40,560 --> 00:11:41,920
if you can keep them for the end and

245
00:11:41,920 --> 00:11:43,760
then we can uh yeah we will have

246
00:11:43,760 --> 00:11:47,040
extensive time for for discussing that

247
00:11:47,040 --> 00:11:50,880
so when you want to send traffic on uh

248
00:11:50,880 --> 00:11:53,279
on scion well as an end host

249
00:11:53,279 --> 00:11:55,920
going bottom up you basically need to

250
00:11:55,920 --> 00:11:58,000
have a data plane that is doing pocket

251
00:11:58,000 --> 00:12:00,560
forwarding and scion is path aware

252
00:12:00,560 --> 00:12:02,399
meaning that cyan packets actually

253
00:12:02,399 --> 00:12:05,200
contain an as path inside the bucket

254
00:12:05,200 --> 00:12:06,320
header

255
00:12:06,320 --> 00:12:09,440
and the data plane is taking care of

256
00:12:09,440 --> 00:12:11,839
well

257
00:12:11,920 --> 00:12:13,680
getting this path and then doing the

258
00:12:13,680 --> 00:12:15,519
actual forwarding

259
00:12:15,519 --> 00:12:17,200
that means that the data plane has a

260
00:12:17,200 --> 00:12:19,920
dependency on something that has to

261
00:12:19,920 --> 00:12:22,880
provide these network paths and since

262
00:12:22,880 --> 00:12:25,120
ion is focused on security we want this

263
00:12:25,120 --> 00:12:27,040
network path to actually be

264
00:12:27,040 --> 00:12:28,959
authenticated and that's why we have a

265
00:12:28,959 --> 00:12:31,200
control plane in scion that is taking

266
00:12:31,200 --> 00:12:32,000
care

267
00:12:32,000 --> 00:12:34,320
of uh figuring out uh basically

268
00:12:34,320 --> 00:12:37,040
discovering routing information and

269
00:12:37,040 --> 00:12:39,839
disseminating it to the data plane

270
00:12:39,839 --> 00:12:41,920
in order to authenticate this network

271
00:12:41,920 --> 00:12:42,959
path

272
00:12:42,959 --> 00:12:45,040
it is important to have some

273
00:12:45,040 --> 00:12:47,440
cryptography that can basically do this

274
00:12:47,440 --> 00:12:48,880
authentication

275
00:12:48,880 --> 00:12:51,760
and this is why the control plane is

276
00:12:51,760 --> 00:12:53,680
actually relying on the cyan control

277
00:12:53,680 --> 00:12:55,120
plane pki

278
00:12:55,120 --> 00:12:57,760
to uh basically get certificates and

279
00:12:57,760 --> 00:13:00,399
authenticate um this information and

280
00:13:00,399 --> 00:13:03,360
scion has its own pki exactly because

281
00:13:03,360 --> 00:13:04,320
this

282
00:13:04,320 --> 00:13:06,720
this authentication process is based on

283
00:13:06,720 --> 00:13:09,120
the trust model that is provided by

284
00:13:09,120 --> 00:13:12,079
isolation domains the big circles here

285
00:13:12,079 --> 00:13:14,160
in

286
00:13:14,160 --> 00:13:16,240
in the drawing

287
00:13:16,240 --> 00:13:18,000
so let's start looking at the first

288
00:13:18,000 --> 00:13:21,519
component in more details let's go from

289
00:13:21,519 --> 00:13:23,519
top to bottom and let's look at

290
00:13:23,519 --> 00:13:26,320
the control plane

291
00:13:26,320 --> 00:13:28,160
when it comes to the control plane we

292
00:13:28,160 --> 00:13:30,560
mentioned how flexible trust is a very

293
00:13:30,560 --> 00:13:32,639
important property of cyan

294
00:13:32,639 --> 00:13:35,120
so we want each isolation domains to

295
00:13:35,120 --> 00:13:37,200
have its own roots of trust and this is

296
00:13:37,200 --> 00:13:40,000
what we call trust root configuration or

297
00:13:40,000 --> 00:13:41,040
trc

298
00:13:41,040 --> 00:13:42,880
that you see um

299
00:13:42,880 --> 00:13:44,720
in the drawing

300
00:13:44,720 --> 00:13:46,800
each ise has its own roots of trust and

301
00:13:46,800 --> 00:13:48,959
it is independent from other

302
00:13:48,959 --> 00:13:51,279
isds and this allows

303
00:13:51,279 --> 00:13:54,399
and hosts in scion to flexibly decide

304
00:13:54,399 --> 00:13:55,839
who they want to trust and who they

305
00:13:55,839 --> 00:13:58,399
don't want to trust so this feature for

306
00:13:58,399 --> 00:14:00,160
example is quite used in the banking

307
00:14:00,160 --> 00:14:03,360
network where basically

308
00:14:03,360 --> 00:14:05,279
banks can have communication among a

309
00:14:05,279 --> 00:14:08,800
subset of trusted parties

310
00:14:08,800 --> 00:14:11,120
and another very important property that

311
00:14:11,120 --> 00:14:13,279
we wanted to have in scion

312
00:14:13,279 --> 00:14:14,160
is to

313
00:14:14,160 --> 00:14:15,360
is to have

314
00:14:15,360 --> 00:14:17,519
to make sure that in case an entity is

315
00:14:17,519 --> 00:14:19,600
compromised then the security of the

316
00:14:19,600 --> 00:14:21,279
whole isolation domain cannot be

317
00:14:21,279 --> 00:14:24,240
compromised and this is why

318
00:14:24,240 --> 00:14:26,000
within the isolation domains there is

319
00:14:26,000 --> 00:14:28,560
actually a voting mechanism in the pki

320
00:14:28,560 --> 00:14:30,880
so that very important changes to the

321
00:14:30,880 --> 00:14:33,040
trust and to the certificates

322
00:14:33,040 --> 00:14:35,120
have to be carried out only if there is

323
00:14:35,120 --> 00:14:37,920
consensus and this not only prevents

324
00:14:37,920 --> 00:14:40,480
that a single compromise entity can

325
00:14:40,480 --> 00:14:42,399
somehow take over the whole isolation

326
00:14:42,399 --> 00:14:44,079
domain it also makes sure that

327
00:14:44,079 --> 00:14:46,480
governance is somehow multilateral and

328
00:14:46,480 --> 00:14:48,720
this is also something that we see works

329
00:14:48,720 --> 00:14:52,240
pretty well in in the finance network

330
00:14:52,240 --> 00:14:54,000
so when it comes to

331
00:14:54,000 --> 00:14:55,920
inputs and outputs when we look at this

332
00:14:55,920 --> 00:14:58,639
component well the pki is quite

333
00:14:58,639 --> 00:14:59,920
independent

334
00:14:59,920 --> 00:15:02,880
so there is only a minimal need of some

335
00:15:02,880 --> 00:15:05,120
initial bootstrapping information

336
00:15:05,120 --> 00:15:07,680
so autonomous systems have to initially

337
00:15:07,680 --> 00:15:09,680
let's say meet have a ceremony to

338
00:15:09,680 --> 00:15:11,920
prepare their initial certificates there

339
00:15:11,920 --> 00:15:14,079
needs to be time synchronization between

340
00:15:14,079 --> 00:15:16,079
autonomous systems so that certificates

341
00:15:16,079 --> 00:15:18,880
can be verified

342
00:15:18,880 --> 00:15:20,399
and besides that

343
00:15:20,399 --> 00:15:22,480
there is not really other strong

344
00:15:22,480 --> 00:15:24,800
dependencies when it comes to the

345
00:15:24,800 --> 00:15:27,680
to the pki and what the pki does to the

346
00:15:27,680 --> 00:15:30,720
whole architecture is that in the end it

347
00:15:30,720 --> 00:15:33,040
provides this trust policy expressed as

348
00:15:33,040 --> 00:15:35,600
a trc and then it also provides each

349
00:15:35,600 --> 00:15:38,160
cyan autonomous systems with a

350
00:15:38,160 --> 00:15:40,560
certificate an a certificate that then

351
00:15:40,560 --> 00:15:42,399
is used for

352
00:15:42,399 --> 00:15:44,480
for routing

353
00:15:44,480 --> 00:15:48,160
so moving on to the next component

354
00:15:48,160 --> 00:15:49,920
the control plane is the one that is

355
00:15:49,920 --> 00:15:51,839
actually doing the routing

356
00:15:51,839 --> 00:15:53,839
and if you think about it in terms of

357
00:15:53,839 --> 00:15:56,720
input outputs well the idea is that the

358
00:15:56,720 --> 00:15:58,399
control plane starts from

359
00:15:58,399 --> 00:16:00,240
unexplored topology

360
00:16:00,240 --> 00:16:02,560
uh it doesn't know anything about paths

361
00:16:02,560 --> 00:16:04,480
and the goal is that we want the control

362
00:16:04,480 --> 00:16:07,199
plane to be able to figure out network

363
00:16:07,199 --> 00:16:09,040
paths so we want the topology to be

364
00:16:09,040 --> 00:16:11,519
explored and we want this to be done

365
00:16:11,519 --> 00:16:14,320
securely so we want each

366
00:16:14,320 --> 00:16:16,480
let's say a path segment to be actually

367
00:16:16,480 --> 00:16:17,839
authenticated

368
00:16:17,839 --> 00:16:19,279
and that's why

369
00:16:19,279 --> 00:16:21,440
this component takes basically the

370
00:16:21,440 --> 00:16:24,639
certificates from the pki also as as an

371
00:16:24,639 --> 00:16:28,480
input and it relies on them for

372
00:16:28,480 --> 00:16:31,199
for authenticating path information

373
00:16:31,199 --> 00:16:33,440
so the control plane basically does this

374
00:16:33,440 --> 00:16:35,680
process that we call path exploration

375
00:16:35,680 --> 00:16:38,240
and in detail it is called beaconing so

376
00:16:38,240 --> 00:16:39,680
that's how

377
00:16:39,680 --> 00:16:40,720
it

378
00:16:40,720 --> 00:16:42,639
it explores the topology

379
00:16:42,639 --> 00:16:45,519
once this topology is explored these

380
00:16:45,519 --> 00:16:47,600
segments are actually made available by

381
00:16:47,600 --> 00:16:49,199
the control plane

382
00:16:49,199 --> 00:16:51,680
to end host so another function is to

383
00:16:51,680 --> 00:16:53,600
disseminate this routing information

384
00:16:53,600 --> 00:16:55,680
from the control plane within an

385
00:16:55,680 --> 00:16:57,680
autonomous system

386
00:16:57,680 --> 00:16:59,279
to end hosts that actually want to

387
00:16:59,279 --> 00:17:00,720
communicate

388
00:17:00,720 --> 00:17:02,720
there is authentication

389
00:17:02,720 --> 00:17:05,119
that means not only on pot segments but

390
00:17:05,119 --> 00:17:07,359
also on um

391
00:17:07,359 --> 00:17:09,679
control messages so that basically a

392
00:17:09,679 --> 00:17:11,919
scion host receiving a certain message

393
00:17:11,919 --> 00:17:14,959
can be sure that this was created by

394
00:17:14,959 --> 00:17:17,280
the entity that claimed to have created

395
00:17:17,280 --> 00:17:18,640
that

396
00:17:18,640 --> 00:17:21,919
that piece of control message

397
00:17:21,919 --> 00:17:24,000
in addition to this scion is multi-path

398
00:17:24,000 --> 00:17:26,000
and that means that the control plane

399
00:17:26,000 --> 00:17:28,319
has to be able to provide multiple paths

400
00:17:28,319 --> 00:17:31,200
to end hosts and we want this to happen

401
00:17:31,200 --> 00:17:34,000
also somehow scalably which is why we

402
00:17:34,000 --> 00:17:36,640
use this uh concept of isolation domains

403
00:17:36,640 --> 00:17:38,720
to split the routing process into an

404
00:17:38,720 --> 00:17:42,400
inter isd and intra isd and this two

405
00:17:42,400 --> 00:17:43,280
two

406
00:17:43,280 --> 00:17:45,440
level two tier hierarchy somehow helps

407
00:17:45,440 --> 00:17:48,240
with the scalability

408
00:17:48,240 --> 00:17:49,200
so

409
00:17:49,200 --> 00:17:52,160
as an output of the control plane we

410
00:17:52,160 --> 00:17:53,440
basically get

411
00:17:53,440 --> 00:17:55,200
this authenticated

412
00:17:55,200 --> 00:17:57,200
segments

413
00:17:57,200 --> 00:17:59,760
and these are really hoped by hope so

414
00:17:59,760 --> 00:18:02,640
per aes and interface and this is what

415
00:18:02,640 --> 00:18:05,200
in the end is made available to the data

416
00:18:05,200 --> 00:18:07,520
plane the data plane is the one that is

417
00:18:07,520 --> 00:18:09,120
doing the actual

418
00:18:09,120 --> 00:18:11,600
forwarding in scion so

419
00:18:11,600 --> 00:18:13,679
it takes these segments from the control

420
00:18:13,679 --> 00:18:14,880
plane

421
00:18:14,880 --> 00:18:17,360
it also relies on these authenticated

422
00:18:17,360 --> 00:18:19,760
control messages

423
00:18:19,760 --> 00:18:21,760
and what the data plane does in the end

424
00:18:21,760 --> 00:18:22,559
is

425
00:18:22,559 --> 00:18:23,840
to really

426
00:18:23,840 --> 00:18:26,640
create packets with a full

427
00:18:26,640 --> 00:18:29,200
path uh path inscribed in the header you

428
00:18:29,200 --> 00:18:30,799
can see this in

429
00:18:30,799 --> 00:18:32,559
in this little drawing here

430
00:18:32,559 --> 00:18:34,320
and this is what is actually used by

431
00:18:34,320 --> 00:18:37,840
scion routers then to do the forwarding

432
00:18:37,840 --> 00:18:40,080
as an input you can think of application

433
00:18:40,080 --> 00:18:42,720
requirements as being part of what is

434
00:18:42,720 --> 00:18:45,520
demanded to the control plane so

435
00:18:45,520 --> 00:18:46,799
if you have an application that is

436
00:18:46,799 --> 00:18:48,880
latency sensitive for example

437
00:18:48,880 --> 00:18:49,840
you can

438
00:18:49,840 --> 00:18:51,520
ask the science control plane give me a

439
00:18:51,520 --> 00:18:54,080
latency optimize path and

440
00:18:54,080 --> 00:18:56,720
well uh

441
00:18:56,720 --> 00:18:59,679
the data plane will basically um select

442
00:18:59,679 --> 00:19:01,200
a path that that can give you this

443
00:19:01,200 --> 00:19:03,440
property

444
00:19:03,440 --> 00:19:05,600
the fact that path is actually inscribed

445
00:19:05,600 --> 00:19:08,400
in packet headers is very interesting

446
00:19:08,400 --> 00:19:10,240
first of all because routers then become

447
00:19:10,240 --> 00:19:12,240
very simple they don't have forwarding

448
00:19:12,240 --> 00:19:14,960
tables so there is not really need for

449
00:19:14,960 --> 00:19:17,600
dedicated hardware

450
00:19:17,600 --> 00:19:19,679
but segments are authenticated at each

451
00:19:19,679 --> 00:19:22,559
hope uh in routers and this is actually

452
00:19:22,559 --> 00:19:23,679
happening

453
00:19:23,679 --> 00:19:26,880
with a very simple as operation

454
00:19:26,880 --> 00:19:27,679
so

455
00:19:27,679 --> 00:19:30,320
it is something that can be offloaded uh

456
00:19:30,320 --> 00:19:33,280
by any cpu which also makes scion

457
00:19:33,280 --> 00:19:36,400
routers very easy to deploy on any

458
00:19:36,400 --> 00:19:38,880
let's say commodity hardware so in our

459
00:19:38,880 --> 00:19:41,520
implementations i think we can run uh

460
00:19:41,520 --> 00:19:44,320
up to like some 100 gigs on a

461
00:19:44,320 --> 00:19:47,520
let's say commodity server

462
00:19:47,520 --> 00:19:49,760
and besides that one property of the

463
00:19:49,760 --> 00:19:51,360
data plane that was really part of the

464
00:19:51,360 --> 00:19:52,640
design

465
00:19:52,640 --> 00:19:55,600
is that cyan is only in inter domain so

466
00:19:55,600 --> 00:19:56,799
it only

467
00:19:56,799 --> 00:19:59,039
functions when packets go from one as to

468
00:19:59,039 --> 00:20:01,360
the other when it comes to inside an

469
00:20:01,360 --> 00:20:02,720
autonomous system

470
00:20:02,720 --> 00:20:05,360
cyan by design reuses what what is

471
00:20:05,360 --> 00:20:08,480
existing so that means that the existing

472
00:20:08,480 --> 00:20:10,880
both routing protocol and the existing

473
00:20:10,880 --> 00:20:12,960
forwarding plane can be reused so that

474
00:20:12,960 --> 00:20:15,919
could be let's say an mpls or

475
00:20:15,919 --> 00:20:19,200
an igp or segment routing

476
00:20:19,200 --> 00:20:20,960
and so in the end the data plane is what

477
00:20:20,960 --> 00:20:23,679
is uh providing this inter domain

478
00:20:23,679 --> 00:20:26,159
multi-path communication multi-path is

479
00:20:26,159 --> 00:20:28,880
also interesting for availability

480
00:20:28,880 --> 00:20:31,760
because and hosts have the ability to

481
00:20:31,760 --> 00:20:34,159
switch path in case something breaks and

482
00:20:34,159 --> 00:20:36,080
this is also important to keep in mind

483
00:20:36,080 --> 00:20:36,880
that

484
00:20:36,880 --> 00:20:38,960
selection in scion is really pushed to

485
00:20:38,960 --> 00:20:40,880
handholds which helps keeping the

486
00:20:40,880 --> 00:20:43,440
network and routers relatively

487
00:20:43,440 --> 00:20:44,720
simple

488
00:20:44,720 --> 00:20:46,320
another

489
00:20:46,320 --> 00:20:48,559
design property to keep in mind is that

490
00:20:48,559 --> 00:20:51,760
cyan uh splits uh basically locator and

491
00:20:51,760 --> 00:20:53,200
identifier

492
00:20:53,200 --> 00:20:55,120
uh when it comes to routing so routing

493
00:20:55,120 --> 00:20:58,799
happens based on these isd and is tuples

494
00:20:58,799 --> 00:20:59,520
and

495
00:20:59,520 --> 00:21:01,760
end hosts can be addressed with

496
00:21:01,760 --> 00:21:04,000
existing addressing schemes so existing

497
00:21:04,000 --> 00:21:06,000
deployments they use

498
00:21:06,000 --> 00:21:09,280
ipv6 or ipv4

499
00:21:09,280 --> 00:21:11,039
so i think that's that's it when it

500
00:21:11,039 --> 00:21:13,280
comes to the components in detail

501
00:21:13,280 --> 00:21:14,080
so

502
00:21:14,080 --> 00:21:17,120
to summarize uh we described how

503
00:21:17,120 --> 00:21:18,400
cyan

504
00:21:18,400 --> 00:21:20,240
relies on three fundamental core

505
00:21:20,240 --> 00:21:22,880
components for um for the architecture

506
00:21:22,880 --> 00:21:25,600
to function we have seen how the pki

507
00:21:25,600 --> 00:21:27,760
only requires some initial bootstrapping

508
00:21:27,760 --> 00:21:28,960
information

509
00:21:28,960 --> 00:21:30,559
and then it basically provides

510
00:21:30,559 --> 00:21:32,960
certificates and trust policies to the

511
00:21:32,960 --> 00:21:34,799
control plane

512
00:21:34,799 --> 00:21:37,039
the control plane is the one responsible

513
00:21:37,039 --> 00:21:37,840
for

514
00:21:37,840 --> 00:21:39,520
doing the actual routing which is

515
00:21:39,520 --> 00:21:42,000
basically

516
00:21:42,000 --> 00:21:43,919
discovering the topology and then making

517
00:21:43,919 --> 00:21:46,400
this routing information available to

518
00:21:46,400 --> 00:21:48,480
the data plane the data plane in the end

519
00:21:48,480 --> 00:21:50,559
is the one constructing end-to-end path

520
00:21:50,559 --> 00:21:53,039
and doing the actual forwarding which in

521
00:21:53,039 --> 00:21:55,039
the end gives you this inter-domain

522
00:21:55,039 --> 00:21:56,640
multi-path uh

523
00:21:56,640 --> 00:21:59,640
communication

524
00:21:59,760 --> 00:22:00,559
so

525
00:22:00,559 --> 00:22:03,200
just a sec

526
00:22:03,760 --> 00:22:06,080
so before wrapping up i wanted to

527
00:22:06,080 --> 00:22:08,240
briefly mention how cyan interacts with

528
00:22:08,240 --> 00:22:10,400
existing protocols

529
00:22:10,400 --> 00:22:13,120
when it comes to the control plane pki

530
00:22:13,120 --> 00:22:16,080
we mentioned before the truss model

531
00:22:16,080 --> 00:22:17,679
scion has these

532
00:22:17,679 --> 00:22:19,520
isolation domains and each one of them

533
00:22:19,520 --> 00:22:21,919
has its own roots of trust and this

534
00:22:21,919 --> 00:22:24,559
makes it somehow difficult to reuse

535
00:22:24,559 --> 00:22:26,960
existing pkis for example the web pki

536
00:22:26,960 --> 00:22:30,320
where all the root cas are item potent

537
00:22:30,320 --> 00:22:32,240
and this is very this is very different

538
00:22:32,240 --> 00:22:33,919
in zion and i think this is something

539
00:22:33,919 --> 00:22:36,400
that basically motivates our approach

540
00:22:36,400 --> 00:22:38,840
and adds this concept of multilateral

541
00:22:38,840 --> 00:22:41,679
governance on the implementation level

542
00:22:41,679 --> 00:22:43,840
uh well the pki reuses x-509

543
00:22:43,840 --> 00:22:45,760
certificates

544
00:22:45,760 --> 00:22:47,440
but of course then on top of it you have

545
00:22:47,440 --> 00:22:49,679
all this voting mechanism to let's say

546
00:22:49,679 --> 00:22:53,039
find contentions consensus among the

547
00:22:53,039 --> 00:22:55,280
uh autonomous systems are administering

548
00:22:55,280 --> 00:22:57,039
an isd and so on so that's what makes

549
00:22:57,039 --> 00:23:00,080
the control at the control plane pki

550
00:23:00,080 --> 00:23:02,159
a bit unique

551
00:23:02,159 --> 00:23:04,559
on the control and data plane we

552
00:23:04,559 --> 00:23:06,559
mentioned before that cyan reuses

553
00:23:06,559 --> 00:23:08,720
intradomain

554
00:23:08,720 --> 00:23:10,880
whatever is existing so both in terms of

555
00:23:10,880 --> 00:23:12,640
routing and in terms of forwarding and

556
00:23:12,640 --> 00:23:14,960
this was by design

557
00:23:14,960 --> 00:23:16,640
another

558
00:23:16,640 --> 00:23:18,320
let's say

559
00:23:18,320 --> 00:23:20,080
topic that is somehow close to scion is

560
00:23:20,080 --> 00:23:22,159
rpki and people might think okay they're

561
00:23:22,159 --> 00:23:24,240
trying to do the same thing but cyan

562
00:23:24,240 --> 00:23:25,919
does provide you authenticated path

563
00:23:25,919 --> 00:23:28,640
information but keep in mind i mentioned

564
00:23:28,640 --> 00:23:29,760
that

565
00:23:29,760 --> 00:23:32,320
n-host addressing is not really part of

566
00:23:32,320 --> 00:23:33,840
the core scion

567
00:23:33,840 --> 00:23:36,000
so that means that scion does not really

568
00:23:36,000 --> 00:23:39,039
have prefixes and there is not really a

569
00:23:39,039 --> 00:23:40,720
prefix

570
00:23:40,720 --> 00:23:42,400
let's say origin

571
00:23:42,400 --> 00:23:45,120
authentication in cyan which is why if

572
00:23:45,120 --> 00:23:47,200
you look at cyan transition mechanisms

573
00:23:47,200 --> 00:23:49,520
that are not part of this draft and this

574
00:23:49,520 --> 00:23:50,480
discussion

575
00:23:50,480 --> 00:23:52,720
but we do have some proposed transition

576
00:23:52,720 --> 00:23:55,200
mechanisms from let's say ip to scion

577
00:23:55,200 --> 00:23:56,799
and all those mechanisms they do

578
00:23:56,799 --> 00:23:59,520
actually build on top of rpki in order

579
00:23:59,520 --> 00:24:00,400
to do

580
00:24:00,400 --> 00:24:02,640
uh basically prefix origin at the

581
00:24:02,640 --> 00:24:04,640
station so i think the two technologies

582
00:24:04,640 --> 00:24:06,320
are somehow

583
00:24:06,320 --> 00:24:09,679
potentially uh complementary

584
00:24:09,679 --> 00:24:11,679
one reason for scion having its own

585
00:24:11,679 --> 00:24:13,840
control plane is that messages are all

586
00:24:13,840 --> 00:24:16,880
authenticated and this is something that

587
00:24:16,880 --> 00:24:19,200
i think we don't see in many protocols

588
00:24:19,200 --> 00:24:20,960
so we think this is something novel that

589
00:24:20,960 --> 00:24:22,559
cyan could

590
00:24:22,559 --> 00:24:23,440
also

591
00:24:23,440 --> 00:24:25,600
contribute

592
00:24:25,600 --> 00:24:26,559
and

593
00:24:26,559 --> 00:24:28,320
yeah when it comes to the data plane and

594
00:24:28,320 --> 00:24:31,120
host addresses are reused so

595
00:24:31,120 --> 00:24:33,039
there is not really

596
00:24:33,039 --> 00:24:34,480
need to change that there are some

597
00:24:34,480 --> 00:24:36,480
gateways that are needed in in case you

598
00:24:36,480 --> 00:24:38,400
have uh that's let's say coexistence

599
00:24:38,400 --> 00:24:42,159
between uh cyan and the existing word

600
00:24:42,159 --> 00:24:43,760
but we believe that in the end the

601
00:24:43,760 --> 00:24:45,120
amount of change

602
00:24:45,120 --> 00:24:48,639
needed to introduce cyan is

603
00:24:48,720 --> 00:24:50,320
is reasonable but at least you don't

604
00:24:50,320 --> 00:24:52,400
have to rip off all of your network in

605
00:24:52,400 --> 00:24:54,720
some way

606
00:24:54,720 --> 00:24:57,120
i would like to summarize basically we

607
00:24:57,120 --> 00:24:58,960
discussed how cyan has three main

608
00:24:58,960 --> 00:25:00,640
components this is really the bare

609
00:25:00,640 --> 00:25:03,520
minimum that you need to deploy cyan in

610
00:25:03,520 --> 00:25:06,080
your network data plane control plane

611
00:25:06,080 --> 00:25:09,039
and pki we have seen how the pki is the

612
00:25:09,039 --> 00:25:11,440
more let's say independent one in the

613
00:25:11,440 --> 00:25:13,279
sense that it does not really rely on

614
00:25:13,279 --> 00:25:15,440
any other components but then we have

615
00:25:15,440 --> 00:25:17,440
also seen how the data plane and control

616
00:25:17,440 --> 00:25:19,840
plane they uh let's say hierarchically

617
00:25:19,840 --> 00:25:22,159
rely on each other in order to provide

618
00:25:22,159 --> 00:25:24,880
certain properties

619
00:25:24,880 --> 00:25:26,799
so i think now we have quite some time

620
00:25:26,799 --> 00:25:29,840
for a discussion first of all uh there

621
00:25:29,840 --> 00:25:32,080
is our draft and keep in mind this is

622
00:25:32,080 --> 00:25:33,760
really a zero zero so it's something we

623
00:25:33,760 --> 00:25:35,039
try to

624
00:25:35,039 --> 00:25:36,799
put together rather quickly so we

625
00:25:36,799 --> 00:25:39,120
welcome your feedback on the draft we

626
00:25:39,120 --> 00:25:40,559
actually already

627
00:25:40,559 --> 00:25:42,559
got some some feedback so i wanted to

628
00:25:42,559 --> 00:25:44,640
thank the people that have been um

629
00:25:44,640 --> 00:25:46,799
reviewing that

630
00:25:46,799 --> 00:25:47,840
um

631
00:25:47,840 --> 00:25:50,400
i hope this helped to clarify uh what

632
00:25:50,400 --> 00:25:52,480
scion core components are and how they

633
00:25:52,480 --> 00:25:54,400
depend on each other i think we can go

634
00:25:54,400 --> 00:25:56,400
more into the details in some directions

635
00:25:56,400 --> 00:25:58,880
if you have specific questions

636
00:25:58,880 --> 00:26:00,799
i think

637
00:26:00,799 --> 00:26:03,679
the goal would be to pave the road for

638
00:26:03,679 --> 00:26:06,640
future work on on scion could be within

639
00:26:06,640 --> 00:26:09,440
the ertf eitf

640
00:26:09,440 --> 00:26:11,600
so we first of all want to advance the

641
00:26:11,600 --> 00:26:13,919
two existing drafts

642
00:26:13,919 --> 00:26:15,600
and hopefully make them of better

643
00:26:15,600 --> 00:26:18,080
quality but we also want to get started

644
00:26:18,080 --> 00:26:19,919
at some point with the initial science

645
00:26:19,919 --> 00:26:22,559
specification so the idea is really to

646
00:26:22,559 --> 00:26:25,120
document what exists already what is

647
00:26:25,120 --> 00:26:27,120
deployed today and we believe that doing

648
00:26:27,120 --> 00:26:30,000
that might also be a very good way to

649
00:26:30,000 --> 00:26:31,679
first lay down what we have today and

650
00:26:31,679 --> 00:26:34,480
then pave the road for uh later on uh

651
00:26:34,480 --> 00:26:36,080
eventually standardization so having

652
00:26:36,080 --> 00:26:38,159
more work and

653
00:26:38,159 --> 00:26:40,559
getting to work together on on this and

654
00:26:40,559 --> 00:26:43,120
this could be done here or well we don't

655
00:26:43,120 --> 00:26:44,320
know yet

656
00:26:44,320 --> 00:26:46,559
so thank you for your time and yeah i'm

657
00:26:46,559 --> 00:26:49,918
looking forward to to the

658
00:26:50,840 --> 00:26:53,440
discussion so nikola thank you very much

659
00:26:53,440 --> 00:26:55,440
um applause

660
00:26:55,440 --> 00:26:56,559
uh

661
00:26:56,559 --> 00:26:57,360
so

662
00:26:57,360 --> 00:27:00,080
uh i had one quick question with my rg

663
00:27:00,080 --> 00:27:02,000
chair hat on

664
00:27:02,000 --> 00:27:03,039
first

665
00:27:03,039 --> 00:27:06,080
um and then well get people time to get

666
00:27:06,080 --> 00:27:07,919
into the queues to ask questions i saw a

667
00:27:07,919 --> 00:27:09,919
couple in the in the jabber room that

668
00:27:09,919 --> 00:27:11,919
the zulu room that i'd like to see you

669
00:27:11,919 --> 00:27:13,600
know come up with the microphone

670
00:27:13,600 --> 00:27:17,120
um so you said you'd like to see

671
00:27:17,120 --> 00:27:18,559
or you'd like to advance the two

672
00:27:18,559 --> 00:27:20,960
existing drafts um are

673
00:27:20,960 --> 00:27:23,600
you talking about publishing those as rg

674
00:27:23,600 --> 00:27:25,600
drafts within panargy or just getting

675
00:27:25,600 --> 00:27:26,399
them

676
00:27:26,399 --> 00:27:29,200
like im improving their state

677
00:27:29,200 --> 00:27:33,120
right so for example i read the the um

678
00:27:33,120 --> 00:27:35,760
um decomposition draft

679
00:27:35,760 --> 00:27:38,080
uh i think that this presentation was a

680
00:27:38,080 --> 00:27:39,520
way better presentation of the

681
00:27:39,520 --> 00:27:40,880
decomposition than the decomposition

682
00:27:40,880 --> 00:27:43,039
draft was so there's like which is you

683
00:27:43,039 --> 00:27:44,240
know when we came into the interim

684
00:27:44,240 --> 00:27:46,720
that's what we said to to prioritize so

685
00:27:46,720 --> 00:27:49,120
well done um but are you looking to

686
00:27:49,120 --> 00:27:52,399
publish those as as rg drafts

687
00:27:52,399 --> 00:27:54,559
uh well first of all uh yes we had two

688
00:27:54,559 --> 00:27:58,000
more weeks to do some thinking uh

689
00:27:58,000 --> 00:27:59,600
this kind of exercise i think it was

690
00:27:59,600 --> 00:28:02,320
very helpful also for for us to do some

691
00:28:02,320 --> 00:28:04,320
thinking on components and

692
00:28:04,320 --> 00:28:05,760
we definitely had more time for the

693
00:28:05,760 --> 00:28:07,679
presentation so this extra two weeks we

694
00:28:07,679 --> 00:28:10,480
uh we did a lot of brainstorming so

695
00:28:10,480 --> 00:28:12,559
we'll definitely try to uh improve that

696
00:28:12,559 --> 00:28:14,159
draft

697
00:28:14,159 --> 00:28:15,840
um that the please take that as a

698
00:28:15,840 --> 00:28:17,520
compliment on the presentation not a

699
00:28:17,520 --> 00:28:19,520
complaint about the draft

700
00:28:19,520 --> 00:28:22,480
yeah yeah absolutely but um

701
00:28:22,480 --> 00:28:24,799
yeah we got some better ideas later on

702
00:28:24,799 --> 00:28:27,200
let's say after the draft submission

703
00:28:27,200 --> 00:28:28,720
deadline was closed

704
00:28:28,720 --> 00:28:30,480
um

705
00:28:30,480 --> 00:28:32,880
when it comes to improving that and so

706
00:28:32,880 --> 00:28:35,440
ideally it would be great if we could uh

707
00:28:35,440 --> 00:28:37,600
document the existing it could be within

708
00:28:37,600 --> 00:28:39,919
the research group um i think what we

709
00:28:39,919 --> 00:28:41,919
are looking for now is just to get some

710
00:28:41,919 --> 00:28:43,679
feedback from

711
00:28:43,679 --> 00:28:45,120
from the community

712
00:28:45,120 --> 00:28:46,480
um

713
00:28:46,480 --> 00:28:47,760
so definitely interaction with the

714
00:28:47,760 --> 00:28:49,679
research group would be i think positive

715
00:28:49,679 --> 00:28:52,399
for for now i'm not sure if we could

716
00:28:52,399 --> 00:28:53,919
get some of the drafts to have to be

717
00:28:53,919 --> 00:28:55,760
let's say an informational rfc or

718
00:28:55,760 --> 00:28:58,000
something like that but i think this

719
00:28:58,000 --> 00:29:01,679
would be clear over time

720
00:29:03,679 --> 00:29:05,279
thank you very much with that the queue

721
00:29:05,279 --> 00:29:10,120
is open for questions and discussions

722
00:29:12,960 --> 00:29:14,320
i'm going to call out eric klein because

723
00:29:14,320 --> 00:29:16,320
he had some very good questions but

724
00:29:16,320 --> 00:29:19,360
alvaro coming up first

725
00:29:20,000 --> 00:29:21,520
that's the thing

726
00:29:21,520 --> 00:29:24,799
uh hi alvaro futuroi technologies

727
00:29:24,799 --> 00:29:26,399
um

728
00:29:26,399 --> 00:29:28,720
so understand there are three components

729
00:29:28,720 --> 00:29:29,600
um

730
00:29:29,600 --> 00:29:30,720
how

731
00:29:30,720 --> 00:29:32,720
independent are they can i have the

732
00:29:32,720 --> 00:29:35,679
control plane but use a different

733
00:29:35,679 --> 00:29:38,640
pki or authentication mechanism

734
00:29:38,640 --> 00:29:40,960
once i resolve the routes in the control

735
00:29:40,960 --> 00:29:42,559
plane can i use

736
00:29:42,559 --> 00:29:44,320
a different data plane

737
00:29:44,320 --> 00:29:46,880
uh or or or do we need the three

738
00:29:46,880 --> 00:29:48,799
components and i know that the three

739
00:29:48,799 --> 00:29:51,360
components make up scion

740
00:29:51,360 --> 00:29:52,320
but

741
00:29:52,320 --> 00:29:54,320
if we needed to develop them or

742
00:29:54,320 --> 00:29:56,399
standardize them or or implement them or

743
00:29:56,399 --> 00:29:58,799
whatever independently

744
00:29:58,799 --> 00:30:00,000
uh you know what are the dependencies

745
00:30:00,000 --> 00:30:01,120
can can we

746
00:30:01,120 --> 00:30:03,200
if we finish the control plane work for

747
00:30:03,200 --> 00:30:05,679
example but we don't have the pki work

748
00:30:05,679 --> 00:30:08,159
does that mean we can't do anything or

749
00:30:08,159 --> 00:30:09,760
i'm just trying to figure out if there

750
00:30:09,760 --> 00:30:11,279
are alternatives

751
00:30:11,279 --> 00:30:13,440
or

752
00:30:14,080 --> 00:30:17,360
flexibility with the dependencies yeah

753
00:30:17,360 --> 00:30:18,240
so

754
00:30:18,240 --> 00:30:20,399
having the whole system or

755
00:30:20,399 --> 00:30:22,320
components working together i think

756
00:30:22,320 --> 00:30:24,399
helps you to achieve

757
00:30:24,399 --> 00:30:26,480
most of the properties you could i think

758
00:30:26,480 --> 00:30:27,919
you could use some of the components

759
00:30:27,919 --> 00:30:29,760
independently but you would lose some of

760
00:30:29,760 --> 00:30:31,679
the properties so i think i have some

761
00:30:31,679 --> 00:30:35,039
backup slides at the end about this

762
00:30:35,039 --> 00:30:39,360
okay yeah so it was kind of uh

763
00:30:40,880 --> 00:30:42,320
all right

764
00:30:42,320 --> 00:30:43,200
so

765
00:30:43,200 --> 00:30:45,279
i think it really depends on components

766
00:30:45,279 --> 00:30:46,640
so for example

767
00:30:46,640 --> 00:30:48,000
the pki

768
00:30:48,000 --> 00:30:49,840
i think the pki is the one that is a bit

769
00:30:49,840 --> 00:30:51,440
on the easier side because it does not

770
00:30:51,440 --> 00:30:54,399
really have uh external dependencies and

771
00:30:54,399 --> 00:30:56,399
all all that it does is that it provides

772
00:30:56,399 --> 00:30:58,960
you this per isd trust model where you

773
00:30:58,960 --> 00:31:00,320
have your own routes of trust you have

774
00:31:00,320 --> 00:31:02,240
the voting you have a way to update

775
00:31:02,240 --> 00:31:04,960
certificates over time and so this is

776
00:31:04,960 --> 00:31:06,799
used by the control plane but it could

777
00:31:06,799 --> 00:31:08,559
be used by

778
00:31:08,559 --> 00:31:09,679
um

779
00:31:09,679 --> 00:31:12,320
by other things so for example we have

780
00:31:12,320 --> 00:31:14,559
a scion extension

781
00:31:14,559 --> 00:31:16,880
that basically derives symmetric keys

782
00:31:16,880 --> 00:31:19,039
between any two autonomous systems in

783
00:31:19,039 --> 00:31:20,799
the architecture and the symmetric keys

784
00:31:20,799 --> 00:31:22,320
could be used for

785
00:31:22,320 --> 00:31:23,840
anything they could be used for

786
00:31:23,840 --> 00:31:25,120
encryption for

787
00:31:25,120 --> 00:31:27,840
authenticated uh authenticating

788
00:31:27,840 --> 00:31:31,039
certain messages so

789
00:31:31,039 --> 00:31:32,720
there is actually also a draft about

790
00:31:32,720 --> 00:31:34,720
that um by my colleague juan who is

791
00:31:34,720 --> 00:31:36,320
actually i think um

792
00:31:36,320 --> 00:31:38,320
also um

793
00:31:38,320 --> 00:31:40,080
in here in the call

794
00:31:40,080 --> 00:31:42,159
and so i think this could could serve

795
00:31:42,159 --> 00:31:44,240
some kind of purpose even if you have it

796
00:31:44,240 --> 00:31:45,440
um

797
00:31:45,440 --> 00:31:47,760
by itself

798
00:31:47,760 --> 00:31:50,640
when it comes to um the other components

799
00:31:50,640 --> 00:31:53,120
so i'm thinking for example the control

800
00:31:53,120 --> 00:31:54,640
plane

801
00:31:54,640 --> 00:31:57,840
well the way it works is that it relies

802
00:31:57,840 --> 00:32:00,320
on this concept of isolation domains for

803
00:32:00,320 --> 00:32:02,480
example for scalability because the

804
00:32:02,480 --> 00:32:04,399
routing process is somehow segmented

805
00:32:04,399 --> 00:32:07,200
into this intra and inter

806
00:32:07,200 --> 00:32:09,919
isd so it does need something that that

807
00:32:09,919 --> 00:32:11,760
mirrors this concept of

808
00:32:11,760 --> 00:32:13,919
of isolation domains but you could say

809
00:32:13,919 --> 00:32:16,480
okay i deploy a scion network as a giant

810
00:32:16,480 --> 00:32:18,720
single isolation domain

811
00:32:18,720 --> 00:32:20,880
i think you might bump into some

812
00:32:20,880 --> 00:32:23,279
scalability issues and you might bump

813
00:32:23,279 --> 00:32:25,279
into some governance issues because

814
00:32:25,279 --> 00:32:27,360
maybe instead of having this voting

815
00:32:27,360 --> 00:32:28,880
process

816
00:32:28,880 --> 00:32:30,960
that you have in the pki maybe you will

817
00:32:30,960 --> 00:32:33,679
have a single certificate authority

818
00:32:33,679 --> 00:32:35,679
that that in the end is in charge of

819
00:32:35,679 --> 00:32:37,279
administering the whole

820
00:32:37,279 --> 00:32:39,519
the keys for keys for the whole network

821
00:32:39,519 --> 00:32:41,440
so i think this could somehow work but i

822
00:32:41,440 --> 00:32:43,679
think it would lose some of the

823
00:32:43,679 --> 00:32:44,960
properties

824
00:32:44,960 --> 00:32:46,960
on the control plane but it does not

825
00:32:46,960 --> 00:32:50,559
exclude that somehow things could um

826
00:32:50,559 --> 00:32:52,080
could work by themselves but i think

827
00:32:52,080 --> 00:32:54,000
there would be more open questions about

828
00:32:54,000 --> 00:32:55,519
how to do this

829
00:32:55,519 --> 00:32:57,039
effectively

830
00:32:57,039 --> 00:33:00,559
when it comes to the data plane um

831
00:33:00,559 --> 00:33:02,720
so what the data plane needs in scion is

832
00:33:02,720 --> 00:33:04,880
basically this authenticated path

833
00:33:04,880 --> 00:33:06,799
segment

834
00:33:06,799 --> 00:33:08,960
and here

835
00:33:08,960 --> 00:33:10,559
one of the key things about scion is

836
00:33:10,559 --> 00:33:13,279
that you authenticate those segments uh

837
00:33:13,279 --> 00:33:15,679
with all this control plane and this pki

838
00:33:15,679 --> 00:33:17,360
and truss model and so on so if you were

839
00:33:17,360 --> 00:33:18,640
to deploy

840
00:33:18,640 --> 00:33:21,440
uh scion network um

841
00:33:21,440 --> 00:33:25,039
without the control or a plane or pki

842
00:33:25,039 --> 00:33:26,399
i think if you have something that can

843
00:33:26,399 --> 00:33:28,240
authenticate this segment i think you

844
00:33:28,240 --> 00:33:30,000
could somehow make it work

845
00:33:30,000 --> 00:33:31,679
but you would also lose some of the

846
00:33:31,679 --> 00:33:33,600
properties there so maybe you might end

847
00:33:33,600 --> 00:33:35,600
up with something just like uh

848
00:33:35,600 --> 00:33:37,760
maybe inter-domain segment routing with

849
00:33:37,760 --> 00:33:40,559
with authentication on top of segments

850
00:33:40,559 --> 00:33:42,159
which could still be in some way a

851
00:33:42,159 --> 00:33:44,480
contribution because i'm not an expert

852
00:33:44,480 --> 00:33:46,799
in segment routing but my understanding

853
00:33:46,799 --> 00:33:50,480
is that there is not really

854
00:33:50,480 --> 00:33:52,640
authentic authentication so far and

855
00:33:52,640 --> 00:33:54,399
segment routing for example is is meant

856
00:33:54,399 --> 00:33:56,960
to be deployed in a in a

857
00:33:56,960 --> 00:33:59,600
in a control environment in inside

858
00:33:59,600 --> 00:34:01,840
a domain a trusted domain

859
00:34:01,840 --> 00:34:04,240
so that could maybe help in some way but

860
00:34:04,240 --> 00:34:06,720
it would open more questions so i think

861
00:34:06,720 --> 00:34:10,159
overall the answer to your question is

862
00:34:10,159 --> 00:34:12,159
we could have some components working

863
00:34:12,159 --> 00:34:14,639
somehow independently they could

864
00:34:14,639 --> 00:34:16,480
give some benefit but it would be more

865
00:34:16,480 --> 00:34:18,719
limited than having the all all three of

866
00:34:18,719 --> 00:34:23,918
them um somehow working together

867
00:34:29,119 --> 00:34:31,839
uh eric eric since uh brian called me

868
00:34:31,839 --> 00:34:33,280
out brian do you want to jump ahead of

869
00:34:33,280 --> 00:34:35,599
me here or are you fine behind me yeah

870
00:34:35,599 --> 00:34:37,119
no go ahead i just had

871
00:34:37,119 --> 00:34:39,440
um nicola said something and it raised

872
00:34:39,440 --> 00:34:41,520
another question so i'll i'll bring that

873
00:34:41,520 --> 00:34:42,560
up

874
00:34:42,560 --> 00:34:44,239
later go ahead

875
00:34:44,239 --> 00:34:45,839
uh i'll just uh run through some of the

876
00:34:45,839 --> 00:34:47,199
questions that i was asking in the chat

877
00:34:47,199 --> 00:34:48,800
that juan was kindly providing some

878
00:34:48,800 --> 00:34:50,560
answers to and maybe you have some other

879
00:34:50,560 --> 00:34:52,639
i think the first thing i asked was um

880
00:34:52,639 --> 00:34:55,119
are existing deployments uh amenable to

881
00:34:55,119 --> 00:34:57,280
any changes that standardization might

882
00:34:57,280 --> 00:34:58,640
lead to if there's something backward

883
00:34:58,640 --> 00:35:00,160
and compatible

884
00:35:00,160 --> 00:35:01,040
is there going to be a bunch of people

885
00:35:01,040 --> 00:35:02,160
who are actually kind of like

886
00:35:02,160 --> 00:35:03,839
complaining that no no we can't change

887
00:35:03,839 --> 00:35:06,079
anything

888
00:35:06,079 --> 00:35:08,160
that is a very good question uh i'm

889
00:35:08,160 --> 00:35:09,440
personally not

890
00:35:09,440 --> 00:35:10,880
let's say in charge of those deployments

891
00:35:10,880 --> 00:35:13,520
so i i don't think i can

892
00:35:13,520 --> 00:35:15,760
answer that

893
00:35:15,760 --> 00:35:17,440
but since we have some deployment i

894
00:35:17,440 --> 00:35:19,119
think a key

895
00:35:19,119 --> 00:35:21,119
step towards standardization would be to

896
00:35:21,119 --> 00:35:23,440
first document what we have existing and

897
00:35:23,440 --> 00:35:25,680
what is somehow deployed today and then

898
00:35:25,680 --> 00:35:28,320
take it as a base for doing some more

899
00:35:28,320 --> 00:35:30,640
longer term standardization work whether

900
00:35:30,640 --> 00:35:33,440
they would be willing to change um

901
00:35:33,440 --> 00:35:35,599
yeah as i mentioned this is uh not

902
00:35:35,599 --> 00:35:37,520
something that i could um

903
00:35:37,520 --> 00:35:39,119
say or commit because there is i mean

904
00:35:39,119 --> 00:35:40,960
there's isps there's the banking

905
00:35:40,960 --> 00:35:42,160
ecosystem

906
00:35:42,160 --> 00:35:44,480
what i've heard um

907
00:35:44,480 --> 00:35:47,040
from the past is that uh if you compare

908
00:35:47,040 --> 00:35:49,280
scion today to the let's say very

909
00:35:49,280 --> 00:35:51,359
researchy scion that we had

910
00:35:51,359 --> 00:35:53,760
a few years ago already several things

911
00:35:53,760 --> 00:35:56,880
actually changed um change a bit even in

912
00:35:56,880 --> 00:35:59,680
let's say in in parts of the header and

913
00:35:59,680 --> 00:36:01,359
this is because with some deployment

914
00:36:01,359 --> 00:36:02,880
experience um

915
00:36:02,880 --> 00:36:04,320
people realize that some things that

916
00:36:04,320 --> 00:36:06,400
were initially designed they were they

917
00:36:06,400 --> 00:36:07,920
could be optimized so i think for

918
00:36:07,920 --> 00:36:09,920
example some header fields were

919
00:36:09,920 --> 00:36:11,520
swapped

920
00:36:11,520 --> 00:36:12,960
in position to make it a bit more

921
00:36:12,960 --> 00:36:15,280
efficient to uh to parse them on routers

922
00:36:15,280 --> 00:36:16,320
and so on

923
00:36:16,320 --> 00:36:18,560
so i think there is a margin but

924
00:36:18,560 --> 00:36:20,480
i'm not in control of those networks and

925
00:36:20,480 --> 00:36:22,960
uh oh sure this would be uh

926
00:36:22,960 --> 00:36:25,520
one's reply was that the isps many of

927
00:36:25,520 --> 00:36:26,960
them have been asking about a possible

928
00:36:26,960 --> 00:36:29,440
standard uh and it seems that there's

929
00:36:29,440 --> 00:36:30,720
reasonable belief that they would be

930
00:36:30,720 --> 00:36:32,880
happy to use a standard process that's

931
00:36:32,880 --> 00:36:34,800
what he said

932
00:36:34,800 --> 00:36:35,760
yeah

933
00:36:35,760 --> 00:36:37,119
i also asked if there was a life of a

934
00:36:37,119 --> 00:36:38,800
packet or even like a life of a socket

935
00:36:38,800 --> 00:36:41,119
kind of summary uh he pointed at some

936
00:36:41,119 --> 00:36:43,119
documentation and described some stuff

937
00:36:43,119 --> 00:36:45,280
in the chat

938
00:36:45,280 --> 00:36:47,119
including like a an initial phase of

939
00:36:47,119 --> 00:36:49,040
like getting getting the client actually

940
00:36:49,040 --> 00:36:50,720
gets all the paths itself and then

941
00:36:50,720 --> 00:36:53,440
chooses paths it wants to use

942
00:36:53,440 --> 00:36:55,920
how long does that usually take

943
00:36:55,920 --> 00:36:57,359
can that be pre

944
00:36:57,359 --> 00:36:59,359
can some how much like pre-computation

945
00:36:59,359 --> 00:37:00,800
or pre-caching can be

946
00:37:00,800 --> 00:37:01,599
yeah

947
00:37:01,599 --> 00:37:03,520
that's a good question um

948
00:37:03,520 --> 00:37:04,560
so

949
00:37:04,560 --> 00:37:06,640
i believe we do have a life of a so

950
00:37:06,640 --> 00:37:09,440
there is um a book that we have been

951
00:37:09,440 --> 00:37:10,880
working on in the past years that i

952
00:37:10,880 --> 00:37:12,400
think that is uh called the complete

953
00:37:12,400 --> 00:37:13,920
guide to science

954
00:37:13,920 --> 00:37:16,720
and in there there is a description of

955
00:37:16,720 --> 00:37:18,960
uh let's say a life of a packet if i'm

956
00:37:18,960 --> 00:37:21,119
not mistaken there is also one that we

957
00:37:21,119 --> 00:37:22,960
also have an older book from a few years

958
00:37:22,960 --> 00:37:25,040
ago that also has this chapter but as i

959
00:37:25,040 --> 00:37:26,640
mentioned few things changed so i would

960
00:37:26,640 --> 00:37:28,160
recommend to um

961
00:37:28,160 --> 00:37:31,359
i would point you to the latest version

962
00:37:31,359 --> 00:37:35,359
um when it comes to fetching paths um

963
00:37:35,359 --> 00:37:37,359
well so there has to be an initial pass

964
00:37:37,359 --> 00:37:39,359
lookup from end host to get these past

965
00:37:39,359 --> 00:37:40,400
segments

966
00:37:40,400 --> 00:37:42,400
uh these segments have a certain

967
00:37:42,400 --> 00:37:44,960
lifetime so they can actually be cached

968
00:37:44,960 --> 00:37:48,240
at different layers so

969
00:37:48,240 --> 00:37:50,320
the way it works i'm not gonna compare

970
00:37:50,320 --> 00:37:52,240
it directly to dns but you can think

971
00:37:52,240 --> 00:37:53,440
about it

972
00:37:53,440 --> 00:37:56,240
uh in terms of something similar to

973
00:37:56,240 --> 00:37:59,440
uh dns lookup sure so there is some

974
00:37:59,440 --> 00:38:01,839
initial extra latency of some

975
00:38:01,839 --> 00:38:04,400
milliseconds but it really depends on

976
00:38:04,400 --> 00:38:06,720
where you want to go and uh

977
00:38:06,720 --> 00:38:08,000
whether

978
00:38:08,000 --> 00:38:09,920
the the server you're actually asking

979
00:38:09,920 --> 00:38:11,440
for paths already has this path

980
00:38:11,440 --> 00:38:13,280
information because for example if you

981
00:38:13,280 --> 00:38:14,960
want to go from one isc to another one

982
00:38:14,960 --> 00:38:16,839
there has to be like

983
00:38:16,839 --> 00:38:19,599
uh i'll say recursive it is not exactly

984
00:38:19,599 --> 00:38:21,599
recursive but there has to be uh there

985
00:38:21,599 --> 00:38:23,920
have to be a bit more lookups but once

986
00:38:23,920 --> 00:38:26,560
the core has all those segments the next

987
00:38:26,560 --> 00:38:28,560
lookups they will not incur the same

988
00:38:28,560 --> 00:38:30,000
latency so

989
00:38:30,000 --> 00:38:32,480
the answer is it depends um but think

990
00:38:32,480 --> 00:38:36,320
about it as a the ns-ish um like um way

991
00:38:36,320 --> 00:38:37,920
there was there was some other uh stuff

992
00:38:37,920 --> 00:38:40,400
i asked about also about the um if the

993
00:38:40,400 --> 00:38:41,440
path

994
00:38:41,440 --> 00:38:43,440
if the path list is in every

995
00:38:43,440 --> 00:38:44,640
uh packet

996
00:38:44,640 --> 00:38:46,320
uh how big is the header and i think

997
00:38:46,320 --> 00:38:48,400
juan said there's like an extra 80 bytes

998
00:38:48,400 --> 00:38:51,920
over uh ipv4 header size yes which

999
00:38:51,920 --> 00:38:53,359
implies that there's a maximum path

1000
00:38:53,359 --> 00:38:55,520
length

1001
00:38:55,520 --> 00:38:58,240
uh maximum path length i'm um

1002
00:38:58,240 --> 00:39:00,000
i'm pretty sure there is one but i'm uh

1003
00:39:00,000 --> 00:39:01,440
i'm not recalling that i'm not sure

1004
00:39:01,440 --> 00:39:03,040
there's some colleagues that are in here

1005
00:39:03,040 --> 00:39:05,359
i'm not sure if they they remember that

1006
00:39:05,359 --> 00:39:06,960
what i know is that usually with each

1007
00:39:06,960 --> 00:39:09,119
path then you also get a path mtu that

1008
00:39:09,119 --> 00:39:11,119
of course depends on on the links that

1009
00:39:11,119 --> 00:39:12,720
you have along the path and on the path

1010
00:39:12,720 --> 00:39:14,400
header because of course the header

1011
00:39:14,400 --> 00:39:15,599
length is

1012
00:39:15,599 --> 00:39:18,800
uh variable variable um

1013
00:39:18,800 --> 00:39:20,560
and sorry what was your other question

1014
00:39:20,560 --> 00:39:22,079
when the question was how long what is

1015
00:39:22,079 --> 00:39:23,920
the max path length

1016
00:39:23,920 --> 00:39:25,359
and what happens to networks that are

1017
00:39:25,359 --> 00:39:27,440
outside of the math path max path length

1018
00:39:27,440 --> 00:39:29,599
i would have to um get back to you i'm

1019
00:39:29,599 --> 00:39:33,119
not sure if somebody else in uh

1020
00:39:33,280 --> 00:39:34,560
there are some some colleagues that are

1021
00:39:34,560 --> 00:39:36,560
remote and i'm not sure if they

1022
00:39:36,560 --> 00:39:38,000
they know about that but the path is

1023
00:39:38,000 --> 00:39:40,480
usually an as path so cyan paths are per

1024
00:39:40,480 --> 00:39:41,359
yes

1025
00:39:41,359 --> 00:39:43,119
so for each as you have incoming

1026
00:39:43,119 --> 00:39:45,920
interface outgoing interface and yes

1027
00:39:45,920 --> 00:39:48,400
so it is usually not something that you

1028
00:39:48,400 --> 00:39:51,040
would expect to be more than

1029
00:39:51,040 --> 00:39:52,560
i'm not sure

1030
00:39:52,560 --> 00:39:54,079
a certain number

1031
00:39:54,079 --> 00:39:57,040
of autonomous systems okay

1032
00:39:57,040 --> 00:39:58,640
yeah i clearly need to learn more but

1033
00:39:58,640 --> 00:40:01,839
thank you but yeah um

1034
00:40:09,359 --> 00:40:12,960
i think brian is in the queue or

1035
00:40:12,960 --> 00:40:15,440
yeah let me click the buttons

1036
00:40:15,440 --> 00:40:16,319
um

1037
00:40:16,319 --> 00:40:18,560
so uh i was looking at sort of like

1038
00:40:18,560 --> 00:40:20,079
these slides here the

1039
00:40:20,079 --> 00:40:22,800
can we use x alone can we use

1040
00:40:22,800 --> 00:40:26,160
like why alone can we use z alone um i

1041
00:40:26,160 --> 00:40:27,920
think that's one good way to to look at

1042
00:40:27,920 --> 00:40:30,720
these questions um

1043
00:40:30,720 --> 00:40:32,959
the

1044
00:40:33,040 --> 00:40:34,560
the other way to flip

1045
00:40:34,560 --> 00:40:36,400
it around would be to say hey can we

1046
00:40:36,400 --> 00:40:37,680
take

1047
00:40:37,680 --> 00:40:40,319
for any of these components

1048
00:40:40,319 --> 00:40:42,960
can we replace them with something

1049
00:40:42,960 --> 00:40:44,880
that is already in sort of like the itf

1050
00:40:44,880 --> 00:40:46,960
internet ecosystem or something very

1051
00:40:46,960 --> 00:40:49,280
much like it right like so

1052
00:40:49,280 --> 00:40:53,040
um for example uh i think you make a

1053
00:40:53,040 --> 00:40:54,800
pretty good case that the data plane on

1054
00:40:54,800 --> 00:40:56,640
its own is probably the least useful

1055
00:40:56,640 --> 00:40:59,119
thing and the pki on its own is the most

1056
00:40:59,119 --> 00:41:00,720
useful thing

1057
00:41:00,720 --> 00:41:02,160
um but

1058
00:41:02,160 --> 00:41:04,240
like what would it look like to for

1059
00:41:04,240 --> 00:41:07,440
example take um

1060
00:41:07,440 --> 00:41:08,400
the

1061
00:41:08,400 --> 00:41:10,240
cyan pki

1062
00:41:10,240 --> 00:41:11,520
um

1063
00:41:11,520 --> 00:41:12,560
some

1064
00:41:12,560 --> 00:41:14,640
representation of this ion control plane

1065
00:41:14,640 --> 00:41:15,920
like so that the path beaconing

1066
00:41:15,920 --> 00:41:18,000
mechanism right like so i assume you

1067
00:41:18,000 --> 00:41:19,440
bring that to the ietf and the first

1068
00:41:19,440 --> 00:41:20,720
thing we're going to do is change the

1069
00:41:20,720 --> 00:41:22,319
indian-ness of it right because it's

1070
00:41:22,319 --> 00:41:23,760
like you know

1071
00:41:23,760 --> 00:41:25,680
control um

1072
00:41:25,680 --> 00:41:27,359
change control lives at the ietf and

1073
00:41:27,359 --> 00:41:28,640
it's what we did to quick on the first

1074
00:41:28,640 --> 00:41:30,560
day um

1075
00:41:30,560 --> 00:41:32,800
the

1076
00:41:32,800 --> 00:41:34,880
but then like use some existing piece of

1077
00:41:34,880 --> 00:41:36,800
the ietf ecosystem for the data plane

1078
00:41:36,800 --> 00:41:38,079
right because i think i think you made a

1079
00:41:38,079 --> 00:41:39,200
pretty good case of the data plane on

1080
00:41:39,200 --> 00:41:40,640
its own is the least interesting thing

1081
00:41:40,640 --> 00:41:41,599
it's like

1082
00:41:41,599 --> 00:41:43,599
could we use yeah it looks a little bit

1083
00:41:43,599 --> 00:41:45,119
like lisp it looks a little bit like

1084
00:41:45,119 --> 00:41:46,480
segment routing

1085
00:41:46,480 --> 00:41:48,720
could we use

1086
00:41:48,720 --> 00:41:52,000
like the sr headers for the the intra

1087
00:41:52,000 --> 00:41:55,599
domain data plane but then like

1088
00:41:55,920 --> 00:41:57,760
connect

1089
00:41:57,760 --> 00:42:00,560
the control plane into like you use the

1090
00:42:00,560 --> 00:42:01,760
control plane to disseminate the path

1091
00:42:01,760 --> 00:42:02,880
information that then shows up in the

1092
00:42:02,880 --> 00:42:05,280
segment routing headers

1093
00:42:05,280 --> 00:42:07,200
for example right that's just that's the

1094
00:42:07,200 --> 00:42:08,800
that's the easiest way i could think to

1095
00:42:08,800 --> 00:42:10,240
sort of like say well we're not going to

1096
00:42:10,240 --> 00:42:11,599
boil the ocean at first and we're going

1097
00:42:11,599 --> 00:42:13,040
to reuse

1098
00:42:13,040 --> 00:42:15,280
something that exists and is implemented

1099
00:42:15,280 --> 00:42:17,040
and standardized in the itf but there

1100
00:42:17,040 --> 00:42:18,079
are other

1101
00:42:18,079 --> 00:42:19,280
you know there might be other ways that

1102
00:42:19,280 --> 00:42:22,240
you could could replace the data plan

1103
00:42:22,240 --> 00:42:23,839
did juan want to come in and answer that

1104
00:42:23,839 --> 00:42:25,280
question or did he have a different

1105
00:42:25,280 --> 00:42:27,599
question

1106
00:42:28,240 --> 00:42:30,960
um i have a different question okay cool

1107
00:42:30,960 --> 00:42:32,160
oh okay

1108
00:42:32,160 --> 00:42:33,200
so

1109
00:42:33,200 --> 00:42:35,760
going back to your your question um

1110
00:42:35,760 --> 00:42:37,760
whether we could use um an existing

1111
00:42:37,760 --> 00:42:40,480
protocol uh well i'll just start with

1112
00:42:40,480 --> 00:42:42,640
saying that i'm not a segment routing or

1113
00:42:42,640 --> 00:42:45,680
lisp experts so we have been looking at

1114
00:42:45,680 --> 00:42:47,359
how they work

1115
00:42:47,359 --> 00:42:50,079
but i think investigating how actually

1116
00:42:50,079 --> 00:42:52,079
the physical disease would require a bit

1117
00:42:52,079 --> 00:42:53,119
of

1118
00:42:53,119 --> 00:42:54,079
further

1119
00:42:54,079 --> 00:42:55,280
analysis

1120
00:42:55,280 --> 00:42:57,599
so i think i have a slide about just

1121
00:42:57,599 --> 00:43:00,240
comparing the

1122
00:43:00,319 --> 00:43:01,920
protocols but

1123
00:43:01,920 --> 00:43:04,720
my tool is stuck

1124
00:43:06,400 --> 00:43:08,560
well

1125
00:43:09,440 --> 00:43:11,520
just give me a second and i think we

1126
00:43:11,520 --> 00:43:13,839
will

1127
00:43:15,440 --> 00:43:18,000
so yeah we were mentioning for example

1128
00:43:18,000 --> 00:43:18,800
um

1129
00:43:18,800 --> 00:43:20,000
lisp

1130
00:43:20,000 --> 00:43:22,400
so when it comes to cyan versus lisp i

1131
00:43:22,400 --> 00:43:23,200
think

1132
00:43:23,200 --> 00:43:24,720
the idea of separating routing

1133
00:43:24,720 --> 00:43:27,359
identifiers and locators is somehow

1134
00:43:27,359 --> 00:43:29,440
common

1135
00:43:29,440 --> 00:43:30,720
and when you look at transition

1136
00:43:30,720 --> 00:43:33,200
mechanisms that we did not really get

1137
00:43:33,200 --> 00:43:34,640
into that much

1138
00:43:34,640 --> 00:43:37,200
i think there are some similarities in

1139
00:43:37,200 --> 00:43:39,520
the sense that lisp and cyan both have

1140
00:43:39,520 --> 00:43:41,280
let's say a

1141
00:43:41,280 --> 00:43:43,520
edge point that acts as a bridge between

1142
00:43:43,520 --> 00:43:44,400
um

1143
00:43:44,400 --> 00:43:46,560
between the list part or the scion part

1144
00:43:46,560 --> 00:43:49,359
and the regular and host ip part so in

1145
00:43:49,359 --> 00:43:51,520
scion this is called sig scion to ip

1146
00:43:51,520 --> 00:43:52,560
gateway

1147
00:43:52,560 --> 00:43:54,800
and in this uh well i i don't remember

1148
00:43:54,800 --> 00:43:56,480
how this is called but i think it is

1149
00:43:56,480 --> 00:43:58,160
like a lisp router or something that

1150
00:43:58,160 --> 00:44:01,520
does this um kind of encapsulation so i

1151
00:44:01,520 --> 00:44:03,440
think there are definitely

1152
00:44:03,440 --> 00:44:04,319
um

1153
00:44:04,319 --> 00:44:07,599
similar problems that um

1154
00:44:07,599 --> 00:44:09,440
that probably where we can probably find

1155
00:44:09,440 --> 00:44:11,040
some synergies

1156
00:44:11,040 --> 00:44:12,480
um

1157
00:44:12,480 --> 00:44:14,800
when it comes to to this concept but

1158
00:44:14,800 --> 00:44:17,359
lisp is only doing um

1159
00:44:17,359 --> 00:44:19,680
it's only uh having this uh let's say

1160
00:44:19,680 --> 00:44:22,000
two-tiered routing and there is not much

1161
00:44:22,000 --> 00:44:24,000
about multipath there is not much about

1162
00:44:24,000 --> 00:44:25,359
authentication

1163
00:44:25,359 --> 00:44:26,560
um

1164
00:44:26,560 --> 00:44:29,200
so i think the core focus of each one of

1165
00:44:29,200 --> 00:44:31,680
the two protocols is is very different

1166
00:44:31,680 --> 00:44:33,040
but

1167
00:44:33,040 --> 00:44:35,119
yeah i'm not sure how much they could be

1168
00:44:35,119 --> 00:44:36,960
potentially integrated but i definitely

1169
00:44:36,960 --> 00:44:39,359
think ideas maybe there could be some um

1170
00:44:39,359 --> 00:44:41,520
cross-pollination of ideas between

1171
00:44:41,520 --> 00:44:43,040
between the two especially when we look

1172
00:44:43,040 --> 00:44:45,359
at transition mechanisms which i think

1173
00:44:45,359 --> 00:44:46,720
is a discussion that we will have to

1174
00:44:46,720 --> 00:44:48,720
have we just did not um

1175
00:44:48,720 --> 00:44:51,040
have it at um yet here because we are

1176
00:44:51,040 --> 00:44:52,800
trying to now look at the let's say bare

1177
00:44:52,800 --> 00:44:56,319
minimum core components

1178
00:44:56,800 --> 00:44:59,680
when it comes to segment routing um

1179
00:44:59,680 --> 00:45:00,960
well

1180
00:45:00,960 --> 00:45:03,440
as i mentioned i'm no expert there but

1181
00:45:03,440 --> 00:45:05,359
the idea is that segment routing is

1182
00:45:05,359 --> 00:45:08,480
intra-domain and zion is inter-domain so

1183
00:45:08,480 --> 00:45:11,680
i think they could potentially

1184
00:45:11,680 --> 00:45:13,359
cooperate in some way where you use

1185
00:45:13,359 --> 00:45:15,359
segment routing inside an autonomous

1186
00:45:15,359 --> 00:45:17,119
system and cyan

1187
00:45:17,119 --> 00:45:19,520
inter a yes

1188
00:45:19,520 --> 00:45:21,359
let's see if that tool starts working

1189
00:45:21,359 --> 00:45:23,359
again

1190
00:45:23,359 --> 00:45:26,160
sorry about that

1191
00:45:27,760 --> 00:45:29,040
and okay

1192
00:45:29,040 --> 00:45:30,560
yeah

1193
00:45:30,560 --> 00:45:32,880
but besides that um i think the key

1194
00:45:32,880 --> 00:45:34,960
difference is really about uh trust and

1195
00:45:34,960 --> 00:45:36,319
the trust model

1196
00:45:36,319 --> 00:45:38,560
um segment routing does not really have

1197
00:45:38,560 --> 00:45:40,560
much

1198
00:45:40,560 --> 00:45:42,400
much about um

1199
00:45:42,400 --> 00:45:44,480
about working uh

1200
00:45:44,480 --> 00:45:46,880
between untrusted entities

1201
00:45:46,880 --> 00:45:48,720
so when it comes to your question could

1202
00:45:48,720 --> 00:45:50,640
we use one with the other i

1203
00:45:50,640 --> 00:45:52,079
i think there could be some synergies

1204
00:45:52,079 --> 00:45:54,079
but we we would have to do more thinking

1205
00:45:54,079 --> 00:45:56,560
about it of how this could in practice

1206
00:45:56,560 --> 00:45:58,960
work when it comes to the details

1207
00:45:58,960 --> 00:46:00,640
but definitely there's some there could

1208
00:46:00,640 --> 00:46:03,359
be potentially some little overlaps but

1209
00:46:03,359 --> 00:46:05,119
usually the scope is very different

1210
00:46:05,119 --> 00:46:07,040
because of the trust model because of

1211
00:46:07,040 --> 00:46:09,359
what the protocols do

1212
00:46:09,359 --> 00:46:10,400
and so on

1213
00:46:10,400 --> 00:46:11,839
so i know a lot less about segment

1214
00:46:11,839 --> 00:46:14,560
routing than i should um to be honest um

1215
00:46:14,560 --> 00:46:16,160
but like this slide is super interesting

1216
00:46:16,160 --> 00:46:17,040
to me

1217
00:46:17,040 --> 00:46:18,720
um because

1218
00:46:18,720 --> 00:46:20,800
we have a bunch of properties that we

1219
00:46:20,800 --> 00:46:22,720
want over on the left side

1220
00:46:22,720 --> 00:46:24,800
um that are missing from the right side

1221
00:46:24,800 --> 00:46:26,400
and it's like okay the paths are

1222
00:46:26,400 --> 00:46:27,920
authenticated that that path

1223
00:46:27,920 --> 00:46:29,760
authentication is basically coming from

1224
00:46:29,760 --> 00:46:31,200
the control plane

1225
00:46:31,200 --> 00:46:32,720
um and then there's sort of like some

1226
00:46:32,720 --> 00:46:35,119
encapsulation stuff which you know

1227
00:46:35,119 --> 00:46:36,400
the internet has made a tunnel so i

1228
00:46:36,400 --> 00:46:37,760
don't really care you know how many

1229
00:46:37,760 --> 00:46:39,520
different layers of of headers you have

1230
00:46:39,520 --> 00:46:40,560
to put on a thing in order to make it

1231
00:46:40,560 --> 00:46:41,359
work

1232
00:46:41,359 --> 00:46:44,319
but like is would there

1233
00:46:44,960 --> 00:46:46,560
it seems to me there might be some way

1234
00:46:46,560 --> 00:46:49,119
to take this

1235
00:46:49,119 --> 00:46:51,119
path authentication

1236
00:46:51,119 --> 00:46:52,800
and the ability to run an untrusted

1237
00:46:52,800 --> 00:46:54,400
domain from the control plane and

1238
00:46:54,400 --> 00:46:56,160
integrate it into something that looks

1239
00:46:56,160 --> 00:46:58,319
like set segment routing

1240
00:46:58,319 --> 00:47:00,079
for like the packets look like sr

1241
00:47:00,079 --> 00:47:02,560
packets and can be handled by devices

1242
00:47:02,560 --> 00:47:04,960
that can do segment routing

1243
00:47:04,960 --> 00:47:06,319
um

1244
00:47:06,319 --> 00:47:08,560
but you like i want to figure out if

1245
00:47:08,560 --> 00:47:09,680
there's a way to take things from the

1246
00:47:09,680 --> 00:47:11,359
left column of the slide and wedge them

1247
00:47:11,359 --> 00:47:12,640
into the right column of this slide does

1248
00:47:12,640 --> 00:47:14,800
that make any sense right like if you

1249
00:47:14,800 --> 00:47:16,160
get the if you get the path

1250
00:47:16,160 --> 00:47:18,319
authentication if you get sort of like

1251
00:47:18,319 --> 00:47:19,839
the tr the

1252
00:47:19,839 --> 00:47:21,920
the ability to do untrusted deployments

1253
00:47:21,920 --> 00:47:24,559
from the control plane could you dip

1254
00:47:24,559 --> 00:47:26,720
segment routing in that somehow and then

1255
00:47:26,720 --> 00:47:29,200
get the best of both worlds like

1256
00:47:29,200 --> 00:47:32,079
this is an in-kuwait idea i don't

1257
00:47:32,079 --> 00:47:33,359
i think we should probably take that

1258
00:47:33,359 --> 00:47:35,359
offline or to the list but but i like

1259
00:47:35,359 --> 00:47:38,000
this slide just sort of like

1260
00:47:38,000 --> 00:47:39,520
gave me an idea there

1261
00:47:39,520 --> 00:47:41,599
yes this is one of the slides that we uh

1262
00:47:41,599 --> 00:47:43,680
added after submitting the draft and uh

1263
00:47:43,680 --> 00:47:44,559
yeah

1264
00:47:44,559 --> 00:47:45,920
but it definitely needs some more

1265
00:47:45,920 --> 00:47:48,000
brainstorming so i would be happy to um

1266
00:47:48,000 --> 00:47:50,480
continue the discussion about this off

1267
00:47:50,480 --> 00:47:51,520
on the list

1268
00:47:51,520 --> 00:47:53,760
excellent i will stop talking with you

1269
00:47:53,760 --> 00:47:56,480
then thank you very much

1270
00:48:00,800 --> 00:48:03,599
juan i am

1271
00:48:05,680 --> 00:48:09,119
thanks jen um hi everyone just wanted to

1272
00:48:09,119 --> 00:48:11,119
go back to the question that eric had

1273
00:48:11,119 --> 00:48:13,119
about how happy would be

1274
00:48:13,119 --> 00:48:15,280
the stakeholders of this moment to

1275
00:48:15,280 --> 00:48:17,280
participate or even to

1276
00:48:17,280 --> 00:48:20,000
welcome a standard about like any of

1277
00:48:20,000 --> 00:48:21,599
these three components for china as a

1278
00:48:21,599 --> 00:48:23,200
whole so

1279
00:48:23,200 --> 00:48:25,760
i mean as as more and more entities are

1280
00:48:25,760 --> 00:48:28,400
joining the scion network they are using

1281
00:48:28,400 --> 00:48:31,040
money and and resources to participate

1282
00:48:31,040 --> 00:48:32,960
and it is for them quite dangerous to

1283
00:48:32,960 --> 00:48:35,760
just have one like single entity

1284
00:48:35,760 --> 00:48:37,760
managing everything so for them it's

1285
00:48:37,760 --> 00:48:39,839
quite critical to have

1286
00:48:39,839 --> 00:48:41,760
to actually have

1287
00:48:41,760 --> 00:48:44,160
a standardization process that everyone

1288
00:48:44,160 --> 00:48:46,640
agrees upon and that multiple

1289
00:48:46,640 --> 00:48:49,119
partners can can build routers and can

1290
00:48:49,119 --> 00:48:51,280
build all that knowledge as well so that

1291
00:48:51,280 --> 00:48:53,839
was just to build up on that

1292
00:48:53,839 --> 00:48:56,240
thank you

1293
00:49:01,760 --> 00:49:03,599
yeah it could have been um so indeed

1294
00:49:03,599 --> 00:49:05,200
thank you for this presentation this is

1295
00:49:05,200 --> 00:49:08,079
a really nice setup and and helps a lot

1296
00:49:08,079 --> 00:49:09,520
to understand the different components

1297
00:49:09,520 --> 00:49:10,800
and every and how everything fits

1298
00:49:10,800 --> 00:49:11,760
together

1299
00:49:11,760 --> 00:49:14,880
um and it did help me to understand uh

1300
00:49:14,880 --> 00:49:18,880
what's needed much better and um and i

1301
00:49:18,880 --> 00:49:20,720
think it has become clear to you maybe

1302
00:49:20,720 --> 00:49:22,079
in the meantime based on all the

1303
00:49:22,079 --> 00:49:23,520
questions discussion that we won't be

1304
00:49:23,520 --> 00:49:25,040
able to take like everything together

1305
00:49:25,040 --> 00:49:26,720
and do everything at once so we have to

1306
00:49:26,720 --> 00:49:28,480
go step by step

1307
00:49:28,480 --> 00:49:30,559
so i found most useful that you had on

1308
00:49:30,559 --> 00:49:32,559
all these slides you had this box called

1309
00:49:32,559 --> 00:49:34,720
functions and properties or actually i

1310
00:49:34,720 --> 00:49:35,920
didn't find it useful that is called

1311
00:49:35,920 --> 00:49:37,599
function properties but

1312
00:49:37,599 --> 00:49:38,880
because like these are two different

1313
00:49:38,880 --> 00:49:39,760
things

1314
00:49:39,760 --> 00:49:41,440
um but the function is the most

1315
00:49:41,440 --> 00:49:43,200
interesting part um that we can

1316
00:49:43,200 --> 00:49:45,359
standardize here right and so can you

1317
00:49:45,359 --> 00:49:48,559
maybe go back to slide number eight

1318
00:49:48,559 --> 00:49:49,359
if

1319
00:49:49,359 --> 00:49:53,119
give me a second it is a bit okay

1320
00:49:55,119 --> 00:49:57,520
yes so i think here the two the first

1321
00:49:57,520 --> 00:49:59,119
two things are actually functions and

1322
00:49:59,119 --> 00:50:01,040
the rest are properties yes so the

1323
00:50:01,040 --> 00:50:02,400
properties are more requirement for

1324
00:50:02,400 --> 00:50:03,920
protocol but the functions are something

1325
00:50:03,920 --> 00:50:05,760
that we want a protocol for

1326
00:50:05,760 --> 00:50:07,280
and maybe this is actually a very good

1327
00:50:07,280 --> 00:50:10,000
starting point here um because

1328
00:50:10,000 --> 00:50:11,440
and now you can correct me if i'm wrong

1329
00:50:11,440 --> 00:50:12,800
because i'm really not a rounding expert

1330
00:50:12,800 --> 00:50:13,760
at all

1331
00:50:13,760 --> 00:50:15,359
um but um

1332
00:50:15,359 --> 00:50:17,920
past exploration and dissemination is

1333
00:50:17,920 --> 00:50:19,119
something that we don't really have a

1334
00:50:19,119 --> 00:50:20,640
protocol for and that could also be

1335
00:50:20,640 --> 00:50:22,720
useful for a lot of other use cases and

1336
00:50:22,720 --> 00:50:25,119
protocols so maybe that's the first step

1337
00:50:25,119 --> 00:50:26,960
we can talk a little bit more about in

1338
00:50:26,960 --> 00:50:28,240
detail

1339
00:50:28,240 --> 00:50:30,000
oh yeah absolutely

1340
00:50:30,000 --> 00:50:31,440
so first thank you for the feedback i'm

1341
00:50:31,440 --> 00:50:33,599
happy that this helped um as i mentioned

1342
00:50:33,599 --> 00:50:35,599
this was also an exercise for ourselves

1343
00:50:35,599 --> 00:50:37,440
so there was a lot of thinking in the

1344
00:50:37,440 --> 00:50:40,240
background to try to get this

1345
00:50:40,240 --> 00:50:42,720
but i think definitely

1346
00:50:42,720 --> 00:50:45,040
also echoing what brian was mentioning i

1347
00:50:45,040 --> 00:50:47,599
think both the pki and the control plane

1348
00:50:47,599 --> 00:50:49,839
are probably the more interesting

1349
00:50:49,839 --> 00:50:52,000
components that i think would also bring

1350
00:50:52,000 --> 00:50:53,680
some

1351
00:50:53,680 --> 00:50:56,480
value around so um

1352
00:50:56,480 --> 00:50:58,000
thank you for your input i think we can

1353
00:50:58,000 --> 00:50:58,880
um

1354
00:50:58,880 --> 00:51:00,960
and it's understand to me that even

1355
00:51:00,960 --> 00:51:02,960
those two functions here are not

1356
00:51:02,960 --> 00:51:04,880
completely independent of the pki right

1357
00:51:04,880 --> 00:51:06,319
so like even if we start here we

1358
00:51:06,319 --> 00:51:07,760
probably there's something we need to

1359
00:51:07,760 --> 00:51:10,240
think about the pka so but like yeah we

1360
00:51:10,240 --> 00:51:12,000
need a starting point that's the point

1361
00:51:12,000 --> 00:51:12,880
yes

1362
00:51:12,880 --> 00:51:14,319
yeah and i think concretely the starting

1363
00:51:14,319 --> 00:51:16,559
point could be yeah either the pki or

1364
00:51:16,559 --> 00:51:19,839
the control plane or or roughly

1365
00:51:19,839 --> 00:51:21,440
uh yeah

1366
00:51:21,440 --> 00:51:23,760
i think there's already some

1367
00:51:23,760 --> 00:51:25,599
well i would not say consensus but some

1368
00:51:25,599 --> 00:51:27,520
some ideas that yeah the data plane

1369
00:51:27,520 --> 00:51:28,640
maybe

1370
00:51:28,640 --> 00:51:30,000
is uh

1371
00:51:30,000 --> 00:51:31,760
less less important for now so thank you

1372
00:51:31,760 --> 00:51:33,839
for your input

1373
00:51:33,839 --> 00:51:36,839
kenneth

1374
00:51:37,520 --> 00:51:40,079
i thanks uh ken calvert university of

1375
00:51:40,079 --> 00:51:41,760
kentucky um

1376
00:51:41,760 --> 00:51:43,760
i just want to say and i don't know as

1377
00:51:43,760 --> 00:51:45,680
much about segment routing as i should

1378
00:51:45,680 --> 00:51:48,800
either but i could swear that i saw

1379
00:51:48,800 --> 00:51:51,119
something

1380
00:51:51,119 --> 00:51:54,240
somewhere about extending segment

1381
00:51:54,240 --> 00:51:56,960
routing to the inner domain

1382
00:51:56,960 --> 00:51:59,119
area and i don't remember if it was a

1383
00:51:59,119 --> 00:52:00,640
draft or

1384
00:52:00,640 --> 00:52:02,480
something submitted to a conference or

1385
00:52:02,480 --> 00:52:03,520
what

1386
00:52:03,520 --> 00:52:06,319
but i would just observe that i think if

1387
00:52:06,319 --> 00:52:07,760
if you think about

1388
00:52:07,760 --> 00:52:10,240
that happening i i it's hard for me to

1389
00:52:10,240 --> 00:52:12,400
see how you would avoid ending up with

1390
00:52:12,400 --> 00:52:14,640
something that's the equivalent

1391
00:52:14,640 --> 00:52:17,119
of scion's isd

1392
00:52:17,119 --> 00:52:19,839
isolation domain in terms of the trust

1393
00:52:19,839 --> 00:52:20,880
structure

1394
00:52:20,880 --> 00:52:23,280
yeah i guess alvaro has an answer

1395
00:52:23,280 --> 00:52:26,319
right so um

1396
00:52:27,119 --> 00:52:28,640
there's all kinds of names for domains

1397
00:52:28,640 --> 00:52:30,079
right so in the segment routing

1398
00:52:30,079 --> 00:52:31,920
architecture talks about second routing

1399
00:52:31,920 --> 00:52:33,200
domain

1400
00:52:33,200 --> 00:52:35,520
uh a second round domain can be one that

1401
00:52:35,520 --> 00:52:38,240
has multiple ass

1402
00:52:38,240 --> 00:52:38,960
so

1403
00:52:38,960 --> 00:52:40,480
in traditionally we talk about multiple

1404
00:52:40,480 --> 00:52:42,319
lasers we say enter the main right

1405
00:52:42,319 --> 00:52:44,559
but there are networks that have the

1406
00:52:44,559 --> 00:52:46,880
operators that have multiple as's

1407
00:52:46,880 --> 00:52:48,480
and so their segment routing domain can

1408
00:52:48,480 --> 00:52:51,119
go across as boundaries

1409
00:52:51,119 --> 00:52:54,400
so yes segment routing can work across

1410
00:52:54,400 --> 00:52:56,160
as's

1411
00:52:56,160 --> 00:52:58,480
if we think about the

1412
00:52:58,480 --> 00:53:01,280
isolation domain that's similar to

1413
00:53:01,280 --> 00:53:03,680
you know one operator or one

1414
00:53:03,680 --> 00:53:06,079
administrative domain with multiple aces

1415
00:53:06,079 --> 00:53:08,720
inside so yeah that is possible to go

1416
00:53:08,720 --> 00:53:10,880
across um

1417
00:53:10,880 --> 00:53:13,040
across across domain owners

1418
00:53:13,040 --> 00:53:14,720
but i have a follow-up question about

1419
00:53:14,720 --> 00:53:16,480
that is um

1420
00:53:16,480 --> 00:53:18,400
are these asses assumed to be under the

1421
00:53:18,400 --> 00:53:20,960
same administrative entity because it is

1422
00:53:20,960 --> 00:53:22,480
correct that's what i said yeah because

1423
00:53:22,480 --> 00:53:25,520
the thing is in cyan within an isd

1424
00:53:25,520 --> 00:53:29,040
autonomous systems are at least a design

1425
00:53:29,040 --> 00:53:30,480
is thought in a way that autonomous

1426
00:53:30,480 --> 00:53:31,760
systems are

1427
00:53:31,760 --> 00:53:33,760
under uh they're basically different

1428
00:53:33,760 --> 00:53:36,000
administrative domains which is also why

1429
00:53:36,000 --> 00:53:37,920
you have the voting process in in the

1430
00:53:37,920 --> 00:53:39,280
pki because

1431
00:53:39,280 --> 00:53:41,760
well we assume that there is

1432
00:53:41,760 --> 00:53:44,880
some shared level of trust so asses

1433
00:53:44,880 --> 00:53:46,720
could be in the same jurisdiction or in

1434
00:53:46,720 --> 00:53:48,640
the same industry but they are not

1435
00:53:48,640 --> 00:53:50,319
necessarily absolutely the same

1436
00:53:50,319 --> 00:53:51,760
administrative domain so i think that

1437
00:53:51,760 --> 00:53:53,520
threat model behind it then it would be

1438
00:53:53,520 --> 00:53:54,960
a bit different from

1439
00:53:54,960 --> 00:53:56,880
um from the one that you have in segment

1440
00:53:56,880 --> 00:53:58,800
routing if you assume that all the yeses

1441
00:53:58,800 --> 00:54:01,119
are part of just like a gigantic

1442
00:54:01,119 --> 00:54:02,559
network it's different i was just saying

1443
00:54:02,559 --> 00:54:04,079
that yes

1444
00:54:04,079 --> 00:54:06,559
okay thank you

1445
00:54:08,319 --> 00:54:09,119
uh

1446
00:54:09,119 --> 00:54:10,640
media i still are you still in the

1447
00:54:10,640 --> 00:54:14,240
queuing okay i'll remove you

1448
00:54:14,319 --> 00:54:16,480
uh

1449
00:54:16,480 --> 00:54:19,200
well i do not see you on the queue so i

1450
00:54:19,200 --> 00:54:21,119
put myself in the queue to ask very very

1451
00:54:21,119 --> 00:54:24,160
stupid question so i assume this

1452
00:54:24,160 --> 00:54:27,119
requires the changes on the host

1453
00:54:27,119 --> 00:54:29,200
or some kind of

1454
00:54:29,200 --> 00:54:32,000
proxy sitting there right yes so

1455
00:54:32,000 --> 00:54:33,520
basically

1456
00:54:33,520 --> 00:54:35,359
does it like how does it work for a host

1457
00:54:35,359 --> 00:54:36,960
which might want to talk to some science

1458
00:54:36,960 --> 00:54:39,040
destinations or internet destinations

1459
00:54:39,040 --> 00:54:40,640
how does it

1460
00:54:40,640 --> 00:54:43,760
practically would work on a host yes um

1461
00:54:43,760 --> 00:54:45,680
thank you for the question uh i'll just

1462
00:54:45,680 --> 00:54:47,119
look here so

1463
00:54:47,119 --> 00:54:48,480
people can hear me

1464
00:54:48,480 --> 00:54:49,680
um

1465
00:54:49,680 --> 00:54:53,200
so yes this is uh correct so there is

1466
00:54:53,200 --> 00:54:56,079
roughly two ways to um

1467
00:54:56,079 --> 00:54:57,920
to communicate scion i think there is a

1468
00:54:57,920 --> 00:55:00,640
slide about deployment i purposely did

1469
00:55:00,640 --> 00:55:02,559
not want to talk about this because we

1470
00:55:02,559 --> 00:55:04,559
have several transition mechanisms

1471
00:55:04,559 --> 00:55:06,880
several proposed transition mechanisms

1472
00:55:06,880 --> 00:55:08,240
and i think all of them would require

1473
00:55:08,240 --> 00:55:09,920
their own discussion because it's quite

1474
00:55:09,920 --> 00:55:11,359
um it's quite big

1475
00:55:11,359 --> 00:55:12,160
but

1476
00:55:12,160 --> 00:55:13,760
in a nutshell

1477
00:55:13,760 --> 00:55:16,559
you basically either have a native scion

1478
00:55:16,559 --> 00:55:19,200
host that basically has

1479
00:55:19,200 --> 00:55:21,119
currently a piece of software that

1480
00:55:21,119 --> 00:55:24,000
supports uh doing this path lookup

1481
00:55:24,000 --> 00:55:25,760
and so on and can talk to other scion

1482
00:55:25,760 --> 00:55:26,960
hosts

1483
00:55:26,960 --> 00:55:29,200
or you have a gateway in the network so

1484
00:55:29,200 --> 00:55:32,000
this is what we call a cyan2ip gateway

1485
00:55:32,000 --> 00:55:35,280
and this is what is used in deployments

1486
00:55:35,280 --> 00:55:36,880
today so then there is a boundary

1487
00:55:36,880 --> 00:55:38,640
between the scion domain

1488
00:55:38,640 --> 00:55:41,440
um and uh the end host and of course all

1489
00:55:41,440 --> 00:55:43,280
the path policies and so on they're all

1490
00:55:43,280 --> 00:55:44,640
configured on

1491
00:55:44,640 --> 00:55:47,680
uh on this edge

1492
00:55:47,680 --> 00:55:50,480
device called the scion to ip gateway

1493
00:55:50,480 --> 00:55:52,340
so

1494
00:55:52,340 --> 00:55:54,640
[Music]

1495
00:55:54,640 --> 00:55:58,400
yeah there was a slide about it roughly

1496
00:55:58,400 --> 00:56:00,880
so yeah there is a little slide about it

1497
00:56:00,880 --> 00:56:02,160
there is this

1498
00:56:02,160 --> 00:56:04,319
basically purple device

1499
00:56:04,319 --> 00:56:06,640
and in existing deployments either it is

1500
00:56:06,640 --> 00:56:09,359
basically deployed on somewhere close to

1501
00:56:09,359 --> 00:56:11,440
the cpe at the customer side where

1502
00:56:11,440 --> 00:56:14,400
traffic is encapsulated encapsulated

1503
00:56:14,400 --> 00:56:16,880
or some isps in switzerland they started

1504
00:56:16,880 --> 00:56:19,040
offering like uh what we call a career

1505
00:56:19,040 --> 00:56:21,440
grade uh scientoip gateway where they

1506
00:56:21,440 --> 00:56:23,599
run this inside their core network and

1507
00:56:23,599 --> 00:56:25,119
when you wanna go to some destinations

1508
00:56:25,119 --> 00:56:26,799
that are behind scion then traffic ends

1509
00:56:26,799 --> 00:56:28,880
up on on this gateway and then it

1510
00:56:28,880 --> 00:56:31,359
continues over cyan besides that there

1511
00:56:31,359 --> 00:56:33,359
is some proposed transition mechanisms

1512
00:56:33,359 --> 00:56:35,200
that let's say aim at

1513
00:56:35,200 --> 00:56:37,200
coordinating this gateways on a large

1514
00:56:37,200 --> 00:56:39,839
scale but that's that's a whole

1515
00:56:39,839 --> 00:56:43,240
different discussion

1516
00:56:45,280 --> 00:56:48,160
so i don't

1517
00:56:48,160 --> 00:56:50,879
oh brian

1518
00:56:52,720 --> 00:56:54,160
i keep looking at these slides and then

1519
00:56:54,160 --> 00:56:55,359
like it's like wow this is a really

1520
00:56:55,359 --> 00:56:57,440
great slide i want to talk about it um

1521
00:56:57,440 --> 00:56:59,040
so

1522
00:56:59,040 --> 00:57:01,599
uh i really like this diagram uh thanks

1523
00:57:01,599 --> 00:57:04,720
for drawing it um it occurs to me

1524
00:57:04,720 --> 00:57:06,559
that one really interesting question

1525
00:57:06,559 --> 00:57:10,240
that we could ask is let's look at it at

1526
00:57:10,240 --> 00:57:13,359
deployments a and b here um first right

1527
00:57:13,359 --> 00:57:14,240
like

1528
00:57:14,240 --> 00:57:16,559
um you have a network and you put a

1529
00:57:16,559 --> 00:57:18,240
bunch of scion hosts on your network or

1530
00:57:18,240 --> 00:57:19,760
you have have hosts where you have like

1531
00:57:19,760 --> 00:57:21,280
a you know a dual stack thing so that

1532
00:57:21,280 --> 00:57:23,599
you can actually run cyan applications

1533
00:57:23,599 --> 00:57:25,200
versus

1534
00:57:25,200 --> 00:57:27,760
you have a network and you plop a sig on

1535
00:57:27,760 --> 00:57:29,599
your cpe and that sig is actually going

1536
00:57:29,599 --> 00:57:32,480
to be a relatively cheap thing right

1537
00:57:32,480 --> 00:57:34,400
because it's a scion router and zion

1538
00:57:34,400 --> 00:57:36,000
routers are relatively cheap right like

1539
00:57:36,000 --> 00:57:37,760
this is not there's not an enormous

1540
00:57:37,760 --> 00:57:39,280
investment that you have to make or not

1541
00:57:39,280 --> 00:57:40,640
a lot of forklifting that you have to do

1542
00:57:40,640 --> 00:57:42,880
to get deployment b to work it'd be

1543
00:57:42,880 --> 00:57:46,640
really interesting to see like

1544
00:57:47,440 --> 00:57:49,520
a lot of the sort of deployment of

1545
00:57:49,520 --> 00:57:50,799
things in the networking space look a

1546
00:57:50,799 --> 00:57:52,880
lot more like b than a right like

1547
00:57:52,880 --> 00:57:55,280
because you know deployment day requires

1548
00:57:55,280 --> 00:57:57,280
you to touch every endpoint and you have

1549
00:57:57,280 --> 00:57:58,799
to touch a lot of those endpoints before

1550
00:57:58,799 --> 00:58:01,440
you get the benefit of

1551
00:58:01,440 --> 00:58:03,599
what's going on in the endpoint whereas

1552
00:58:03,599 --> 00:58:05,040
you can get a lot of the benefits of

1553
00:58:05,040 --> 00:58:06,880
this not all of them right like so for

1554
00:58:06,880 --> 00:58:09,040
example if i'm you know if i'm sort of

1555
00:58:09,040 --> 00:58:10,640
like doing some sort of taps future

1556
00:58:10,640 --> 00:58:12,240
thing where i have

1557
00:58:12,240 --> 00:58:15,200
uh a um an application that really

1558
00:58:15,200 --> 00:58:17,280
actually does want to control network

1559
00:58:17,280 --> 00:58:19,280
access to the path for different um sort

1560
00:58:19,280 --> 00:58:21,440
of like differentiated services for for

1561
00:58:21,440 --> 00:58:23,359
different things then i really need you

1562
00:58:23,359 --> 00:58:24,240
know

1563
00:58:24,240 --> 00:58:25,760
since that's that's running on the

1564
00:58:25,760 --> 00:58:28,160
endpoint i really need that on a

1565
00:58:28,160 --> 00:58:29,920
what do i get if i just do b right like

1566
00:58:29,920 --> 00:58:32,079
if i just went and and like downloaded

1567
00:58:32,079 --> 00:58:33,599
sort of like you know the scion thing

1568
00:58:33,599 --> 00:58:36,880
onto my uh onto my my tourist omnia and

1569
00:58:36,880 --> 00:58:38,559
then like now i have scion at home what

1570
00:58:38,559 --> 00:58:40,400
do i get get from that i think that's

1571
00:58:40,400 --> 00:58:42,960
not a question to answer right now

1572
00:58:42,960 --> 00:58:45,280
necessarily but i think that would be a

1573
00:58:45,280 --> 00:58:47,040
good thing for that

1574
00:58:47,040 --> 00:58:48,559
like you you said a couple of times it's

1575
00:58:48,559 --> 00:58:49,359
like we're not going gonna get into that

1576
00:58:49,359 --> 00:58:51,280
because we have some some transition

1577
00:58:51,280 --> 00:58:52,559
mechanisms

1578
00:58:52,559 --> 00:58:54,960
uh i'd said in the interim uh sort of

1579
00:58:54,960 --> 00:58:56,799
both with my individual and my chair hat

1580
00:58:56,799 --> 00:58:58,640
on that like a

1581
00:58:58,640 --> 00:59:00,160
an exploration of those transition

1582
00:59:00,160 --> 00:59:02,640
mechanisms would be super interesting

1583
00:59:02,640 --> 00:59:04,559
for the ietf community in general

1584
00:59:04,559 --> 00:59:06,559
because it's like hey you've actually

1585
00:59:06,559 --> 00:59:08,480
deployed a future internet thing that

1586
00:59:08,480 --> 00:59:10,480
works with the present internet

1587
00:59:10,480 --> 00:59:12,880
transitions of this case are hard

1588
00:59:12,880 --> 00:59:14,480
you know what what are the what are sort

1589
00:59:14,480 --> 00:59:16,559
of the incremental benefits of of of

1590
00:59:16,559 --> 00:59:17,839
doing this i think this is like sort of

1591
00:59:17,839 --> 00:59:19,760
a work example of doing that sort of

1592
00:59:19,760 --> 00:59:20,640
thing

1593
00:59:20,640 --> 00:59:22,799
and like the question that i'd leave

1594
00:59:22,799 --> 00:59:24,240
with is

1595
00:59:24,240 --> 00:59:26,000
like okay we have this vision and we're

1596
00:59:26,000 --> 00:59:28,400
going to scionify the internet um if you

1597
00:59:28,400 --> 00:59:30,000
only get to deployments that look like

1598
00:59:30,000 --> 00:59:32,799
deployment b here how big of a win is

1599
00:59:32,799 --> 00:59:35,599
that right if you never get the rest of

1600
00:59:35,599 --> 00:59:36,400
of

1601
00:59:36,400 --> 00:59:38,079
like if you if you never have a you know

1602
00:59:38,079 --> 00:59:39,200
the vision never gets to the point where

1603
00:59:39,200 --> 00:59:40,400
you have a bunch of scion enabled

1604
00:59:40,400 --> 00:59:42,559
endpoints where you only really are

1605
00:59:42,559 --> 00:59:44,720
doing path selection

1606
00:59:44,720 --> 00:59:47,040
from the gateway right like so the past

1607
00:59:47,040 --> 00:59:48,240
selection

1608
00:59:48,240 --> 00:59:50,079
rules and policies become a thing that's

1609
00:59:50,079 --> 00:59:52,079
under the local network administrators

1610
00:59:52,079 --> 00:59:54,079
control kind of like in the present

1611
00:59:54,079 --> 00:59:55,680
internet as opposed to under the

1612
00:59:55,680 --> 00:59:58,079
endpoint is like

1613
00:59:58,079 --> 00:59:59,839
what do you get from there what is the

1614
00:59:59,839 --> 01:00:03,760
what is the if that's as far as it goes

1615
01:00:03,760 --> 01:00:05,200
what's the benefit because i think there

1616
01:00:05,200 --> 01:00:06,400
are i don't know what they are but i'd

1617
01:00:06,400 --> 01:00:09,040
really like to see that that sort of

1618
01:00:09,040 --> 01:00:11,520
explored in future work

1619
01:00:11,520 --> 01:00:13,280
yeah absolutely so

1620
01:00:13,280 --> 01:00:15,599
i think there were also some discussions

1621
01:00:15,599 --> 01:00:17,839
last time about documenting deployments

1622
01:00:17,839 --> 01:00:20,559
and transition mechanisms

1623
01:00:20,559 --> 01:00:22,480
to this point i think

1624
01:00:22,480 --> 01:00:24,319
two things

1625
01:00:24,319 --> 01:00:25,760
one of it is that

1626
01:00:25,760 --> 01:00:27,359
there is different transition mechanisms

1627
01:00:27,359 --> 01:00:29,920
with different maturity so designed to

1628
01:00:29,920 --> 01:00:31,839
ip gateway is the one that is used today

1629
01:00:31,839 --> 01:00:33,359
in production but there are some

1630
01:00:33,359 --> 01:00:35,520
research proposals um about other

1631
01:00:35,520 --> 01:00:37,440
transition mechanisms so for example i

1632
01:00:37,440 --> 01:00:39,520
think there is one that is

1633
01:00:39,520 --> 01:00:42,240
it will come out at usonic security in

1634
01:00:42,240 --> 01:00:44,559
well i'm not sure when it is but in a in

1635
01:00:44,559 --> 01:00:45,920
the next month

1636
01:00:45,920 --> 01:00:47,200
um

1637
01:00:47,200 --> 01:00:49,200
describing more of a back one approach

1638
01:00:49,200 --> 01:00:50,160
to that

1639
01:00:50,160 --> 01:00:52,240
um but of course these other ones are

1640
01:00:52,240 --> 01:00:53,760
more research and for the discussion of

1641
01:00:53,760 --> 01:00:56,559
today i think i wanted to focus more on

1642
01:00:56,559 --> 01:00:58,640
what is actually really uh deployed and

1643
01:00:58,640 --> 01:00:59,839
productive

1644
01:00:59,839 --> 01:01:01,520
um and that is the

1645
01:01:01,520 --> 01:01:03,760
stake that's that's cpe deployed to the

1646
01:01:03,760 --> 01:01:05,440
customer side or

1647
01:01:05,440 --> 01:01:07,839
that's basically yes that would be

1648
01:01:07,839 --> 01:01:09,200
roughly b

1649
01:01:09,200 --> 01:01:11,520
b and as well d

1650
01:01:11,520 --> 01:01:14,480
so both of them are are somehow deployed

1651
01:01:14,480 --> 01:01:16,400
when it comes to getting closer

1652
01:01:16,400 --> 01:01:18,000
yeah b is the most interesting for me

1653
01:01:18,000 --> 01:01:19,599
from like a from a

1654
01:01:19,599 --> 01:01:21,040
from a standardization standpoint

1655
01:01:21,040 --> 01:01:22,720
because it also gives you

1656
01:01:22,720 --> 01:01:24,559
a deployment and operations model that

1657
01:01:24,559 --> 01:01:25,839
isn't that far from the current

1658
01:01:25,839 --> 01:01:27,200
deployment and operations model right

1659
01:01:27,200 --> 01:01:28,960
like you have people who own local

1660
01:01:28,960 --> 01:01:30,960
networks and you're giving them

1661
01:01:30,960 --> 01:01:32,400
more

1662
01:01:32,400 --> 01:01:33,760
you know even more internet you're

1663
01:01:33,760 --> 01:01:35,040
giving them new things that they can do

1664
01:01:35,040 --> 01:01:36,640
that they couldn't do before it'd be

1665
01:01:36,640 --> 01:01:38,000
interesting to look at what those are

1666
01:01:38,000 --> 01:01:39,520
right as opposed to

1667
01:01:39,520 --> 01:01:42,000
you know a like getting to full native

1668
01:01:42,000 --> 01:01:43,920
song on everywhere you got to have the

1669
01:01:43,920 --> 01:01:45,280
browser vendors on board you've got the

1670
01:01:45,280 --> 01:01:47,040
os vendors on board you got to have like

1671
01:01:47,040 --> 01:01:49,040
you know you might need to do nick like

1672
01:01:49,040 --> 01:01:51,680
that's a much bigger left whereas b is

1673
01:01:51,680 --> 01:01:54,079
absolutely is yes seems much more doable

1674
01:01:54,079 --> 01:01:56,000
to me

1675
01:01:56,000 --> 01:01:58,000
so this is why uh the current

1676
01:01:58,000 --> 01:01:59,680
deployments they both they basically

1677
01:01:59,680 --> 01:02:01,599
follow b or d

1678
01:02:01,599 --> 01:02:04,000
and when it comes to benefits um well of

1679
01:02:04,000 --> 01:02:05,599
course you get full benefits if there's

1680
01:02:05,599 --> 01:02:07,599
two scion hosts or hosts behind a scion

1681
01:02:07,599 --> 01:02:09,599
gateway that talk to each other

1682
01:02:09,599 --> 01:02:11,520
which is why i think the early adopters

1683
01:02:11,520 --> 01:02:13,760
are these kind of ecosystem industries

1684
01:02:13,760 --> 01:02:15,280
like banking where you have lots of

1685
01:02:15,280 --> 01:02:17,039
actors that need to talk to each other

1686
01:02:17,039 --> 01:02:19,440
and they need to do it with some extra

1687
01:02:19,440 --> 01:02:21,680
reliability that they do not get over

1688
01:02:21,680 --> 01:02:22,960
the internet

1689
01:02:22,960 --> 01:02:24,000
so

1690
01:02:24,000 --> 01:02:25,920
when it comes to like the the business

1691
01:02:25,920 --> 01:02:27,200
or

1692
01:02:27,200 --> 01:02:29,599
let's say benefits of deploying scion

1693
01:02:29,599 --> 01:02:31,760
these ecosystems like finance or

1694
01:02:31,760 --> 01:02:34,240
transportation or healthcare i think in

1695
01:02:34,240 --> 01:02:35,839
there's now a poc

1696
01:02:35,839 --> 01:02:37,920
being run for adopting scion for

1697
01:02:37,920 --> 01:02:40,559
connecting healthcare institutions

1698
01:02:40,559 --> 01:02:42,799
in this in this kind of market i think

1699
01:02:42,799 --> 01:02:46,079
scion has a very interesting

1700
01:02:46,079 --> 01:02:48,079
positioning somehow or can provide some

1701
01:02:48,079 --> 01:02:50,000
interesting properties um when it comes

1702
01:02:50,000 --> 01:02:52,319
to the past awareness security and so on

1703
01:02:52,319 --> 01:02:53,920
so that would be i think the the first

1704
01:02:53,920 --> 01:02:56,400
step the more concrete use case the

1705
01:02:56,400 --> 01:02:58,160
other ones would be more uh of course

1706
01:02:58,160 --> 01:03:00,960
require more change and would

1707
01:03:00,960 --> 01:03:02,480
perhaps come later on

1708
01:03:02,480 --> 01:03:03,920
i hope that somehow answers your

1709
01:03:03,920 --> 01:03:07,760
question and it was um okay

1710
01:03:11,039 --> 01:03:12,880
juan

1711
01:03:12,880 --> 01:03:15,119
yeah sorry to bother again just just

1712
01:03:15,119 --> 01:03:17,440
wanted to to talk

1713
01:03:17,440 --> 01:03:19,280
exactly what what about what adrian was

1714
01:03:19,280 --> 01:03:21,920
asking what brian was asking um

1715
01:03:21,920 --> 01:03:22,640
i

1716
01:03:22,640 --> 01:03:24,160
we have to talk about this as well

1717
01:03:24,160 --> 01:03:26,720
definitely as nico said but uh we

1718
01:03:26,720 --> 01:03:30,480
believe that the scenario at a that will

1719
01:03:30,480 --> 01:03:32,400
that will never happen

1720
01:03:32,400 --> 01:03:34,799
so clarify that meaning that there is so

1721
01:03:34,799 --> 01:03:36,880
much existing software and so much

1722
01:03:36,880 --> 01:03:40,240
compatibility that we will i believe or

1723
01:03:40,240 --> 01:03:42,000
we believe that we will always have this

1724
01:03:42,000 --> 01:03:44,480
kind of gateways in the middle to allow

1725
01:03:44,480 --> 01:03:47,440
backwards compatibility for many i mean

1726
01:03:47,440 --> 01:03:49,760
for many many years possibly forever but

1727
01:03:49,760 --> 01:03:53,119
to be honest but also a mix between a

1728
01:03:53,119 --> 01:03:56,240
and b would be um would be very welcome

1729
01:03:56,240 --> 01:03:58,160
at the beginning everything is b and

1730
01:03:58,160 --> 01:04:00,079
then there are so many hosts that

1731
01:04:00,079 --> 01:04:02,000
understand scion and their applications

1732
01:04:02,000 --> 01:04:03,920
can take full advantage of the

1733
01:04:03,920 --> 01:04:06,480
multi-path and multiple properties like

1734
01:04:06,480 --> 01:04:07,839
also qas

1735
01:04:07,839 --> 01:04:10,400
and and so on because they see of course

1736
01:04:10,400 --> 01:04:12,960
the gateway has has limitations as brian

1737
01:04:12,960 --> 01:04:16,319
said it's only it will only do

1738
01:04:16,319 --> 01:04:18,960
its job up to the taste of those admins

1739
01:04:18,960 --> 01:04:20,799
so whatever flavors they want to use for

1740
01:04:20,799 --> 01:04:23,200
the pads and so on so that will not

1741
01:04:23,200 --> 01:04:25,520
that will not transpire to the host

1742
01:04:25,520 --> 01:04:27,599
applications directly

1743
01:04:27,599 --> 01:04:28,960
but yeah we definitely have to talk

1744
01:04:28,960 --> 01:04:33,079
about this yes thanks

1745
01:04:41,599 --> 01:04:43,520
so no more

1746
01:04:43,520 --> 01:04:44,640
questions

1747
01:04:44,640 --> 01:04:47,200
comments

1748
01:04:48,079 --> 01:04:52,079
maybe i'll i'll just try to wrap up um

1749
01:04:52,079 --> 01:04:53,440
in

1750
01:04:53,440 --> 01:04:55,280
just generally asking or

1751
01:04:55,280 --> 01:04:57,359
commenting like uh for next steps i

1752
01:04:57,359 --> 01:04:58,720
think we definitely got a lot of good

1753
01:04:58,720 --> 01:05:00,799
input um today so first thing so uh

1754
01:05:00,799 --> 01:05:03,119
thank you all for um your comments they

1755
01:05:03,119 --> 01:05:05,200
definitely help us to um

1756
01:05:05,200 --> 01:05:06,880
to do some more thinking about it and i

1757
01:05:06,880 --> 01:05:08,960
think that will also help us iterating

1758
01:05:08,960 --> 01:05:11,039
especially on

1759
01:05:11,039 --> 01:05:12,799
on the component analysis track so

1760
01:05:12,799 --> 01:05:15,200
expect to see an update

1761
01:05:15,200 --> 01:05:16,640
and

1762
01:05:16,640 --> 01:05:18,960
we'll be happy to discuss some of the

1763
01:05:18,960 --> 01:05:20,839
open points on on the

1764
01:05:20,839 --> 01:05:22,799
list um

1765
01:05:22,799 --> 01:05:25,200
when it comes to further next steps uh

1766
01:05:25,200 --> 01:05:27,520
yeah we were wondering if um perhaps

1767
01:05:27,520 --> 01:05:29,920
working on the specification

1768
01:05:29,920 --> 01:05:32,480
could be uh interesting as i mentioned

1769
01:05:32,480 --> 01:05:34,640
earlier it would be probably difficult

1770
01:05:34,640 --> 01:05:36,880
to reach

1771
01:05:36,880 --> 01:05:38,480
rough consensus right now and it would

1772
01:05:38,480 --> 01:05:40,400
be very beneficial for us to at least

1773
01:05:40,400 --> 01:05:42,319
document what we have

1774
01:05:42,319 --> 01:05:44,720
today in terms of deployment

1775
01:05:44,720 --> 01:05:46,799
so i was wondering if i'm not sure the

1776
01:05:46,799 --> 01:05:48,160
chairs or

1777
01:05:48,160 --> 01:05:51,039
the audience have um

1778
01:05:51,039 --> 01:05:53,359
opinion about that

1779
01:05:53,359 --> 01:05:56,400
uh or if not um yeah we will wrap up oh

1780
01:05:56,400 --> 01:05:58,559
i see brian is around

1781
01:05:58,559 --> 01:06:00,480
yeah so um

1782
01:06:00,480 --> 01:06:02,319
actually i wanted to ask a clarification

1783
01:06:02,319 --> 01:06:03,359
question on that well you're talking

1784
01:06:03,359 --> 01:06:05,920
about documenting the current deployment

1785
01:06:05,920 --> 01:06:06,880
um

1786
01:06:06,880 --> 01:06:08,000
this would be

1787
01:06:08,000 --> 01:06:10,880
the specification of what is is

1788
01:06:10,880 --> 01:06:13,280
currently deployed or a

1789
01:06:13,280 --> 01:06:15,280
deployment report like would it be a

1790
01:06:15,280 --> 01:06:16,720
specification that pro of the protocol

1791
01:06:16,720 --> 01:06:19,920
is currently deployed or would it be a

1792
01:06:19,920 --> 01:06:21,760
report on the properties of the

1793
01:06:21,760 --> 01:06:23,359
deployment this is currently deployed so

1794
01:06:23,359 --> 01:06:24,960
it makes sense like which which do you

1795
01:06:24,960 --> 01:06:27,760
which is more useful for you

1796
01:06:27,760 --> 01:06:30,079
i i was thinking so i think there is

1797
01:06:30,079 --> 01:06:31,440
different things this could definitely

1798
01:06:31,440 --> 01:06:34,160
be useful documenting the deployment

1799
01:06:34,160 --> 01:06:35,920
uh but i was also thinking somehow

1800
01:06:35,920 --> 01:06:38,240
having the the low level specification

1801
01:06:38,240 --> 01:06:40,400
of how things work today just to have it

1802
01:06:40,400 --> 01:06:42,079
as a starting point for starting to

1803
01:06:42,079 --> 01:06:43,680
discuss um

1804
01:06:43,680 --> 01:06:45,359
about what you know

1805
01:06:45,359 --> 01:06:47,520
each component i think so far we got the

1806
01:06:47,520 --> 01:06:49,440
direction that the control plane pki and

1807
01:06:49,440 --> 01:06:50,960
the control plane are more more

1808
01:06:50,960 --> 01:06:52,000
interesting

1809
01:06:52,000 --> 01:06:52,880
so

1810
01:06:52,880 --> 01:06:54,480
i was thinking more let's say in

1811
01:06:54,480 --> 01:06:56,480
starting to uh work on some of those

1812
01:06:56,480 --> 01:06:58,400
components or

1813
01:06:58,400 --> 01:07:00,160
start starting having a documentation

1814
01:07:00,160 --> 01:07:02,559
there but in parallel we could also um

1815
01:07:02,559 --> 01:07:04,880
yeah focus on uh deployments um all

1816
01:07:04,880 --> 01:07:06,880
right no no i just wanted to i was just

1817
01:07:06,880 --> 01:07:08,559
asking clarification impression for what

1818
01:07:08,559 --> 01:07:11,200
it was you were asking for yeah i like

1819
01:07:11,200 --> 01:07:12,960
uh i think that's definitely worth

1820
01:07:12,960 --> 01:07:14,400
writing down

1821
01:07:14,400 --> 01:07:16,799
um i

1822
01:07:16,799 --> 01:07:19,280
would want the research group to take a

1823
01:07:19,280 --> 01:07:21,039
look at that before we made a decision

1824
01:07:21,039 --> 01:07:23,440
as to whether we would adopt it as a

1825
01:07:23,440 --> 01:07:25,200
research group document for publications

1826
01:07:25,200 --> 01:07:27,280
rfc for this stream i think i think we

1827
01:07:27,280 --> 01:07:30,240
still kind of don't really know

1828
01:07:30,240 --> 01:07:32,480
how we want to break this work up and

1829
01:07:32,480 --> 01:07:34,960
bring it into the irtf and the ietf

1830
01:07:34,960 --> 01:07:36,319
right because i mean like if the goal is

1831
01:07:36,319 --> 01:07:37,599
standardizing some of these parts of

1832
01:07:37,599 --> 01:07:38,720
things

1833
01:07:38,720 --> 01:07:40,720
then you know step one is writing it

1834
01:07:40,720 --> 01:07:43,119
down in an id and you know maybe we have

1835
01:07:43,119 --> 01:07:45,039
a discussion about that and split those

1836
01:07:45,039 --> 01:07:46,400
documents up and some of them go to

1837
01:07:46,400 --> 01:07:47,760
other working groups or to their own

1838
01:07:47,760 --> 01:07:49,839
working group and some of them stay here

1839
01:07:49,839 --> 01:07:52,559
um yeah i think it's definitely worth

1840
01:07:52,559 --> 01:07:55,039
starting to write things down um

1841
01:07:55,039 --> 01:07:56,799
uh sort of in the id format because i

1842
01:07:56,799 --> 01:07:59,280
mean like once it's once it's there

1843
01:07:59,280 --> 01:08:00,079
it's

1844
01:08:00,079 --> 01:08:02,319
not very much work to like shuffle it

1845
01:08:02,319 --> 01:08:03,839
around right

1846
01:08:03,839 --> 01:08:06,160
yeah that's what i mentioned i i i meant

1847
01:08:06,160 --> 01:08:08,319
yeah

1848
01:08:08,640 --> 01:08:12,400
i could event again so i i similarly

1849
01:08:12,400 --> 01:08:13,920
got potentially confused by the term

1850
01:08:13,920 --> 01:08:15,920
specification here and so you have this

1851
01:08:15,920 --> 01:08:17,120
other draft which is describing the

1852
01:08:17,120 --> 01:08:18,560
whole architecture but you're you're

1853
01:08:18,560 --> 01:08:20,000
talking about writing wardraft so are

1854
01:08:20,000 --> 01:08:21,759
you talking about that right so i'm i'm

1855
01:08:21,759 --> 01:08:24,319
i was talking more about uh writing

1856
01:08:24,319 --> 01:08:26,799
other drafts uh with the like protocol

1857
01:08:26,799 --> 01:08:28,319
let's say specifications so just

1858
01:08:28,319 --> 01:08:30,158
documenting what we have today how it

1859
01:08:30,158 --> 01:08:32,000
works and you already said it now you

1860
01:08:32,000 --> 01:08:33,839
say multiple drafts right it's like it's

1861
01:08:33,839 --> 01:08:35,359
different components that probably go

1862
01:08:35,359 --> 01:08:37,120
into different documents right i mean i

1863
01:08:37,120 --> 01:08:39,120
think we have the three core components

1864
01:08:39,120 --> 01:08:40,799
and it would be i think it would be a

1865
01:08:40,799 --> 01:08:42,719
lot of material if we were to have

1866
01:08:42,719 --> 01:08:44,719
everything together so yeah i was

1867
01:08:44,719 --> 01:08:46,640
thinking about the three core components

1868
01:08:46,640 --> 01:08:49,679
the control data plane and pki

1869
01:08:49,679 --> 01:08:50,799
um

1870
01:08:50,799 --> 01:08:52,238
yeah i was basically referring to that

1871
01:08:52,238 --> 01:08:53,759
yeah okay

1872
01:08:53,759 --> 01:08:56,719
so specifications

1873
01:08:56,719 --> 01:08:58,238
yeah that's why i mentioned i mean in

1874
01:08:58,238 --> 01:09:01,040
the end uh it is very important also for

1875
01:09:01,040 --> 01:09:03,439
us to do thinking i think for uh for

1876
01:09:03,439 --> 01:09:05,040
people in the groups to do some further

1877
01:09:05,040 --> 01:09:06,560
thinking especially when we want to look

1878
01:09:06,560 --> 01:09:07,600
at

1879
01:09:07,600 --> 01:09:10,479
more technical uh

1880
01:09:10,479 --> 01:09:12,238
questions i think then we have to start

1881
01:09:12,238 --> 01:09:14,319
looking at more in-depth uh because now

1882
01:09:14,319 --> 01:09:15,839
we're really looking at let's say we had

1883
01:09:15,839 --> 01:09:17,040
an overview now we're looking at the

1884
01:09:17,040 --> 01:09:18,880
properties and sooner or later we'll

1885
01:09:18,880 --> 01:09:20,560
have to get to um

1886
01:09:20,560 --> 01:09:22,560
so the lower level bits and that way we

1887
01:09:22,560 --> 01:09:24,880
can also then think if we can

1888
01:09:24,880 --> 01:09:26,319
i don't know integrated with segment

1889
01:09:26,319 --> 01:09:27,600
routing or

1890
01:09:27,600 --> 01:09:29,279
um but i think it is important to have

1891
01:09:29,279 --> 01:09:31,439
this somewhere so i feel this is

1892
01:09:31,439 --> 01:09:33,120
probably would be a

1893
01:09:33,120 --> 01:09:34,960
meaningful next steps that that's why i

1894
01:09:34,960 --> 01:09:36,880
was um proposing that yeah definitely

1895
01:09:36,880 --> 01:09:38,640
agreeing i think the point i want to

1896
01:09:38,640 --> 01:09:41,040
make is already like try to think of

1897
01:09:41,040 --> 01:09:42,479
think how you can break this up into

1898
01:09:42,479 --> 01:09:44,238
smaller pieces so we can actually take

1899
01:09:44,238 --> 01:09:45,839
some of these pieces and start working

1900
01:09:45,839 --> 01:09:48,880
on them in the ietf um eventually rather

1901
01:09:48,880 --> 01:09:50,158
than putting everything into one big

1902
01:09:50,158 --> 01:09:52,080
document no yeah absolutely so it would

1903
01:09:52,080 --> 01:09:54,158
definitely be at least three

1904
01:09:54,158 --> 01:09:56,320
three documents for the core components

1905
01:09:56,320 --> 01:09:58,000
and then there's transition mechanisms

1906
01:09:58,000 --> 01:09:58,880
there's

1907
01:09:58,880 --> 01:10:01,280
we have a lot of work ahead um

1908
01:10:01,280 --> 01:10:03,120
but yeah the idea was to document it

1909
01:10:03,120 --> 01:10:05,040
first so i'm not sure if there could be

1910
01:10:05,040 --> 01:10:08,640
maybe even an informational document uh

1911
01:10:08,640 --> 01:10:09,840
uh

1912
01:10:09,840 --> 01:10:11,760
being worked on first uh

1913
01:10:11,760 --> 01:10:13,920
and then uh having something you should

1914
01:10:13,920 --> 01:10:15,520
just write it down and don't worry about

1915
01:10:15,520 --> 01:10:17,760
what we do with it later

1916
01:10:17,760 --> 01:10:19,520
okay that's clear we have some work to

1917
01:10:19,520 --> 01:10:21,679
do

1918
01:10:21,920 --> 01:10:24,000
so so as it turns out i put myself in

1919
01:10:24,000 --> 01:10:26,239
cue to agree with everything myria said

1920
01:10:26,239 --> 01:10:29,360
before she said it um

1921
01:10:29,600 --> 01:10:31,840
i think that's the way we need to go um

1922
01:10:31,840 --> 01:10:34,320
one thing that i noticed in

1923
01:10:34,320 --> 01:10:35,760
reading the draft

1924
01:10:35,760 --> 01:10:38,560
uh and then uh

1925
01:10:38,560 --> 01:10:40,000
looking through these these slides and

1926
01:10:40,000 --> 01:10:41,360
then just got this discussion at this

1927
01:10:41,360 --> 01:10:42,640
presentation

1928
01:10:42,640 --> 01:10:43,520
is

1929
01:10:43,520 --> 01:10:46,239
it really shows the the benefits of sort

1930
01:10:46,239 --> 01:10:47,760
of like you're thinking the scion team's

1931
01:10:47,760 --> 01:10:48,719
thinking

1932
01:10:48,719 --> 01:10:51,199
of getting into this decomposition right

1933
01:10:51,199 --> 01:10:53,280
like so actually sort of digging into it

1934
01:10:53,280 --> 01:10:54,960
i think has improved your concepts and

1935
01:10:54,960 --> 01:10:56,880
gotten us a lot closer to the goal of

1936
01:10:56,880 --> 01:10:58,400
figuring out what we're going to do in

1937
01:10:58,400 --> 01:10:59,520
the irtf and what we're going to do in

1938
01:10:59,520 --> 01:11:00,719
the ietf

1939
01:11:00,719 --> 01:11:01,679
and

1940
01:11:01,679 --> 01:11:03,360
i'm

1941
01:11:03,360 --> 01:11:06,320
convinced that as you do the detailed

1942
01:11:06,320 --> 01:11:07,840
decomposition of these things into these

1943
01:11:07,840 --> 01:11:09,679
three specifications that you're going

1944
01:11:09,679 --> 01:11:11,440
to have more benefits to the thinking

1945
01:11:11,440 --> 01:11:13,360
process of that i think that things are

1946
01:11:13,360 --> 01:11:14,640
going to fall out of this and it's going

1947
01:11:14,640 --> 01:11:16,400
to be like oh why didn't you this is

1948
01:11:16,400 --> 01:11:18,560
obvious this is the way to go i don't

1949
01:11:18,560 --> 01:11:19,840
know what that is yet because i haven't

1950
01:11:19,840 --> 01:11:22,000
read the drafts yet but yes yes you have

1951
01:11:22,000 --> 01:11:24,840
a lot of work ahead of you um

1952
01:11:24,840 --> 01:11:28,239
i commit to reading all of this stuff um

1953
01:11:28,239 --> 01:11:31,440
and uh and helping me make it better

1954
01:11:31,440 --> 01:11:32,640
um

1955
01:11:32,640 --> 01:11:34,719
and we should probably

1956
01:11:34,719 --> 01:11:37,280
after colin talk about next steps within

1957
01:11:37,280 --> 01:11:39,520
the rg chair hat back on

1958
01:11:39,520 --> 01:11:42,159
uh as to setting up um

1959
01:11:42,159 --> 01:11:44,560
a pace of interim meetings that will

1960
01:11:44,560 --> 01:11:46,159
make sure that we

1961
01:11:46,159 --> 01:11:49,040
you know keep the energy up on this uh

1962
01:11:49,040 --> 01:11:50,560
because i'm really excited to see how

1963
01:11:50,560 --> 01:11:52,719
well it's going and i think

1964
01:11:52,719 --> 01:11:54,159
you know if we get into a situation

1965
01:11:54,159 --> 01:11:55,360
where it's like okay well now we're not

1966
01:11:55,360 --> 01:11:56,640
going to think about this until london

1967
01:11:56,640 --> 01:11:59,600
then we're we're missing an opportunity

1968
01:11:59,600 --> 01:12:02,560
and brian i don't know in the chat uh

1969
01:12:02,560 --> 01:12:04,800
jeff mentioned that it might be an

1970
01:12:04,800 --> 01:12:08,080
option yeah of uh bringing it to routing

1971
01:12:08,080 --> 01:12:10,400
people yeah but having like

1972
01:12:10,400 --> 01:12:12,400
yeah that would be that would be yeah

1973
01:12:12,400 --> 01:12:13,840
that would be super cute i think i think

1974
01:12:13,840 --> 01:12:16,560
i want to write get at least the control

1975
01:12:16,560 --> 01:12:18,480
plane pki and the control plane

1976
01:12:18,480 --> 01:12:19,840
documents to the point where they're

1977
01:12:19,840 --> 01:12:21,920
readable before we do that because

1978
01:12:21,920 --> 01:12:23,440
because i i'd like the routing people to

1979
01:12:23,440 --> 01:12:25,440
throw arrows at the specifics as opposed

1980
01:12:25,440 --> 01:12:26,719
to the concepts

1981
01:12:26,719 --> 01:12:29,199
it seems like it would be more um

1982
01:12:29,199 --> 01:12:33,839
uh more beneficial to to talk details so

1983
01:12:34,560 --> 01:12:37,840
okay colin

1984
01:12:40,239 --> 01:12:42,800
hi uh i think brian and miria said a lot

1985
01:12:42,800 --> 01:12:44,719
of what i was going to say already uh i

1986
01:12:44,719 --> 01:12:46,480
think the the i think it's possibly

1987
01:12:46,480 --> 01:12:49,040
premature to think about

1988
01:12:49,040 --> 01:12:51,360
uh what are the next steps what's what's

1989
01:12:51,360 --> 01:12:53,280
going to be standardized and what isn't

1990
01:12:53,280 --> 01:12:54,640
i think

1991
01:12:54,640 --> 01:12:56,560
the the act of writing down the

1992
01:12:56,560 --> 01:12:58,320
specification here the act of

1993
01:12:58,320 --> 01:13:00,800
decomposing it and specifying it will i

1994
01:13:00,800 --> 01:13:04,400
think make it very clear what is

1995
01:13:04,400 --> 01:13:06,960
ready for standardization uh where the

1996
01:13:06,960 --> 01:13:09,360
open quest questions which uh perhaps

1997
01:13:09,360 --> 01:13:11,360
this group perhaps updates the irtf

1998
01:13:11,360 --> 01:13:13,280
could look at

1999
01:13:13,280 --> 01:13:15,679
and um

2000
01:13:15,679 --> 01:13:17,840
similarly i think someone mentioned the

2001
01:13:17,840 --> 01:13:20,239
independent stream in the chat i think

2002
01:13:20,239 --> 01:13:22,239
that that might be a venue for

2003
01:13:22,239 --> 01:13:24,480
publishing a snapshot of what you have

2004
01:13:24,480 --> 01:13:25,440
now

2005
01:13:25,440 --> 01:13:27,520
but again the main thing i think is to

2006
01:13:27,520 --> 01:13:29,120
start writing down

2007
01:13:29,120 --> 01:13:30,480
um

2008
01:13:30,480 --> 01:13:32,800
writing things down decomposing it

2009
01:13:32,800 --> 01:13:33,920
writing the

2010
01:13:33,920 --> 01:13:35,760
writing down what you can specify and

2011
01:13:35,760 --> 01:13:37,520
then separately writing down one of the

2012
01:13:37,520 --> 01:13:39,120
things where there are open questions as

2013
01:13:39,120 --> 01:13:41,360
you specify it and then over time i

2014
01:13:41,360 --> 01:13:42,719
think it will become very clear which

2015
01:13:42,719 --> 01:13:44,719
bits are research

2016
01:13:44,719 --> 01:13:45,920
your research on which bits are

2017
01:13:45,920 --> 01:13:48,640
standards ready

2018
01:13:49,120 --> 01:13:51,440
thank you

2019
01:13:51,440 --> 01:13:53,360
um yeah we'll definitely

2020
01:13:53,360 --> 01:13:55,280
keep writing for the let's say short

2021
01:13:55,280 --> 01:13:57,199
term in the foreseeable future

2022
01:13:57,199 --> 01:13:58,640
and i think this will help us move

2023
01:13:58,640 --> 01:14:01,640
forward

2024
01:14:02,560 --> 01:14:04,560
so i think we can take my last question

2025
01:14:04,560 --> 01:14:07,440
to the list but um

2026
01:14:07,440 --> 01:14:09,280
this is more of a

2027
01:14:09,280 --> 01:14:11,120
holiday

2028
01:14:11,120 --> 01:14:13,120
schedule question

2029
01:14:13,120 --> 01:14:14,960
if we were looking at the last couple of

2030
01:14:14,960 --> 01:14:17,120
weeks of september

2031
01:14:17,120 --> 01:14:18,159
um

2032
01:14:18,159 --> 01:14:20,000
for an interim or maybe the first week

2033
01:14:20,000 --> 01:14:21,840
of october is that going to give people

2034
01:14:21,840 --> 01:14:23,600
enough time to do anything or do we want

2035
01:14:23,600 --> 01:14:25,840
to do something that's maybe

2036
01:14:25,840 --> 01:14:28,320
um like because the the london meeting

2037
01:14:28,320 --> 01:14:29,440
is toward the beginning of november

2038
01:14:29,440 --> 01:14:31,280
right

2039
01:14:31,280 --> 01:14:34,320
yeah i think yeah

2040
01:14:34,400 --> 01:14:35,679
um

2041
01:14:35,679 --> 01:14:37,360
so like

2042
01:14:37,360 --> 01:14:38,719
i guess we could we could do something

2043
01:14:38,719 --> 01:14:40,800
anywhere from the from the sort of the

2044
01:14:40,800 --> 01:14:42,560
end of september to the middle of

2045
01:14:42,560 --> 01:14:45,520
october uh and the look on your face

2046
01:14:45,520 --> 01:14:47,520
um suggests to me that you're more

2047
01:14:47,520 --> 01:14:48,719
interested in toward the middle of

2048
01:14:48,719 --> 01:14:50,800
october than toward the end of september

2049
01:14:50,800 --> 01:14:53,920
yes okay yeah the thing is um yeah we

2050
01:14:53,920 --> 01:14:55,760
have to maybe we can talk talk offline

2051
01:14:55,760 --> 01:14:58,400
and see but uh yeah

2052
01:14:58,400 --> 01:14:59,199
yeah

2053
01:14:59,199 --> 01:15:01,120
i think me and uh yeah the other folks

2054
01:15:01,120 --> 01:15:03,040
that can do like really work on writing

2055
01:15:03,040 --> 01:15:04,640
we will be um

2056
01:15:04,640 --> 01:15:06,560
either busy or out for a while in

2057
01:15:06,560 --> 01:15:08,800
september so um

2058
01:15:08,800 --> 01:15:10,480
so yeah mid september late september

2059
01:15:10,480 --> 01:15:12,400
would be a bit um okay

2060
01:15:12,400 --> 01:15:13,440
tricky

2061
01:15:13,440 --> 01:15:15,679
cool all right that's good input i'll

2062
01:15:15,679 --> 01:15:17,280
i'll start the thread on the list from

2063
01:15:17,280 --> 01:15:19,519
that

2064
01:15:19,679 --> 01:15:21,440
thank you very much

2065
01:15:21,440 --> 01:15:24,800
okay thank you very much we do have a

2066
01:15:24,800 --> 01:15:26,159
little bit more time here is there

2067
01:15:26,159 --> 01:15:28,320
anything else that you want to know from

2068
01:15:28,320 --> 01:15:30,159
the people in this room today nicola is

2069
01:15:30,159 --> 01:15:32,559
there any

2070
01:15:33,040 --> 01:15:34,960
i think you got a lot so you know no is

2071
01:15:34,960 --> 01:15:36,480
a perfectly acceptable answer i think i

2072
01:15:36,480 --> 01:15:38,239
got a lot i'm still processing and we'll

2073
01:15:38,239 --> 01:15:41,440
be processing in the next few days um

2074
01:15:41,440 --> 01:15:44,239
so yeah i will also start writing uh

2075
01:15:44,239 --> 01:15:45,760
um we're

2076
01:15:45,760 --> 01:15:47,600
preparing towards uh writing down some

2077
01:15:47,600 --> 01:15:49,280
of the specifications while iterating on

2078
01:15:49,280 --> 01:15:50,560
the draft so i think this will be

2079
01:15:50,560 --> 01:15:52,640
definitely enough input and

2080
01:15:52,640 --> 01:15:54,080
yeah if we keep the momentum and keep

2081
01:15:54,080 --> 01:15:55,760
discussing and entering meetings or so

2082
01:15:55,760 --> 01:15:57,120
on i think this will

2083
01:15:57,120 --> 01:15:58,000
uh

2084
01:15:58,000 --> 01:16:00,320
bring us a long way forward so all right

2085
01:16:00,320 --> 01:16:01,840
i'm very happy and thank you all for

2086
01:16:01,840 --> 01:16:03,920
very much spending so much time on on

2087
01:16:03,920 --> 01:16:06,800
scion

2088
01:16:06,800 --> 01:16:09,120
thank you okay

2089
01:16:09,120 --> 01:16:11,199
so

2090
01:16:11,199 --> 01:16:14,400
now let's move to the next presentation

2091
01:16:14,400 --> 01:16:15,600
about

2092
01:16:15,600 --> 01:16:20,360
overlay routing problem

2093
01:16:26,000 --> 01:16:29,120
this is gong and i'm gonna present this

2094
01:16:29,120 --> 01:16:31,199
uh problem statement you want to present

2095
01:16:31,199 --> 01:16:32,320
yourself

2096
01:16:32,320 --> 01:16:35,040
or you want me to move okay

2097
01:16:35,040 --> 01:16:36,880
oh no you can't you can share the screen

2098
01:16:36,880 --> 01:16:39,600
actually it's not it's not a long slide

2099
01:16:39,600 --> 01:16:41,760
whatever yeah

2100
01:16:41,760 --> 01:16:44,320
okay then should i start

2101
01:16:44,320 --> 01:16:46,480
yeah please okay

2102
01:16:46,480 --> 01:16:48,880
okay good day uh my name is gongli and

2103
01:16:48,880 --> 01:16:52,080
i'm from huawei and it's my pleasure to

2104
01:16:52,080 --> 01:16:53,440
pre present

2105
01:16:53,440 --> 01:16:56,480
our uh problem statement of overlay

2106
01:16:56,480 --> 01:16:59,520
routing and in the internet application

2107
01:16:59,520 --> 01:17:01,679
and actually what we're gonna present is

2108
01:17:01,679 --> 01:17:02,800
a

2109
01:17:02,800 --> 01:17:04,320
complementary

2110
01:17:04,320 --> 01:17:07,120
part to actually what you discuss today

2111
01:17:07,120 --> 01:17:09,280
i think we can have good discussion

2112
01:17:09,280 --> 01:17:10,480
after that

2113
01:17:10,480 --> 01:17:13,040
next piece

2114
01:17:14,560 --> 01:17:17,120
okay as we can see actually internet is

2115
01:17:17,120 --> 01:17:20,239
uh incurring totally a new generation

2116
01:17:20,239 --> 01:17:22,880
from before we call mobile internet all

2117
01:17:22,880 --> 01:17:24,239
the way to the

2118
01:17:24,239 --> 01:17:26,880
uh immersive or

2119
01:17:26,880 --> 01:17:28,239
real-time and

2120
01:17:28,239 --> 01:17:30,640
interacting internet and for example the

2121
01:17:30,640 --> 01:17:32,560
real-time communication traffic actually

2122
01:17:32,560 --> 01:17:35,360
have have been growing uh almost three

2123
01:17:35,360 --> 01:17:37,040
thousand percent have since the core

2124
01:17:37,040 --> 01:17:38,560
weight and maybe it's gonna be more

2125
01:17:38,560 --> 01:17:42,000
right now and also the vr and er already

2126
01:17:42,000 --> 01:17:44,159
have expected a

2127
01:17:44,159 --> 01:17:47,440
huge annual growth in this decades and

2128
01:17:47,440 --> 01:17:49,840
also a very hot term like called

2129
01:17:49,840 --> 01:17:51,600
metroverse i think everybody already

2130
01:17:51,600 --> 01:17:53,679
heard that i think it's going to be one

2131
01:17:53,679 --> 01:17:55,199
of the ultimate

2132
01:17:55,199 --> 01:17:58,239
kind of scenarios in this immersive

2133
01:17:58,239 --> 01:17:59,440
internet

2134
01:17:59,440 --> 01:18:01,440
but in the meantime actually

2135
01:18:01,440 --> 01:18:04,080
uh this kind of development need much

2136
01:18:04,080 --> 01:18:06,960
higher and more strict

2137
01:18:06,960 --> 01:18:09,840
requirements about networking quality

2138
01:18:09,840 --> 01:18:12,880
and network transmission in terms in

2139
01:18:12,880 --> 01:18:16,320
terms of like latency uh throughput

2140
01:18:16,320 --> 01:18:18,880
packet loss and jig and so on

2141
01:18:18,880 --> 01:18:20,560
however actually there is a huge

2142
01:18:20,560 --> 01:18:21,920
tightening gap

2143
01:18:21,920 --> 01:18:23,280
in this

2144
01:18:23,280 --> 01:18:25,920
internet kind of application scenario

2145
01:18:25,920 --> 01:18:28,480
with what area and the public we will

2146
01:18:28,480 --> 01:18:30,480
say cross-domain networks

2147
01:18:30,480 --> 01:18:33,280
because first every traditional internet

2148
01:18:33,280 --> 01:18:36,159
is originally designed to just for

2149
01:18:36,159 --> 01:18:38,239
connectivity and the best effort

2150
01:18:38,239 --> 01:18:40,400
delivery and also the

2151
01:18:40,400 --> 01:18:42,800
inefficient i would say very inefficient

2152
01:18:42,800 --> 01:18:46,960
uh routing protocol the bgp actually is

2153
01:18:46,960 --> 01:18:48,480
basically um

2154
01:18:48,480 --> 01:18:51,600
the path is computed based on the

2155
01:18:51,600 --> 01:18:53,600
isp business

2156
01:18:53,600 --> 01:18:55,679
relationship instead of performance

2157
01:18:55,679 --> 01:18:56,960
actually there's no performance

2158
01:18:56,960 --> 01:19:00,239
guarantee and actually it is noted that

2159
01:19:00,239 --> 01:19:02,800
some a path between the locations within

2160
01:19:02,800 --> 01:19:05,280
asia actually will go will be routed

2161
01:19:05,280 --> 01:19:07,280
through some peering points all the way

2162
01:19:07,280 --> 01:19:10,239
to america there's a therefore um have

2163
01:19:10,239 --> 01:19:13,600
like extra latency uh greatly and also

2164
01:19:13,600 --> 01:19:15,520
some reason are the ones for example 5g

2165
01:19:15,520 --> 01:19:18,400
and sdn but they are all operating in a

2166
01:19:18,400 --> 01:19:20,159
single domain therefore you cannot do

2167
01:19:20,159 --> 01:19:22,400
this kind of end-to-end solution with

2168
01:19:22,400 --> 01:19:25,040
cross domain in the crosstalk networks

2169
01:19:25,040 --> 01:19:27,760
uh next please

2170
01:19:29,360 --> 01:19:32,239
and therefore actually recently and

2171
01:19:32,239 --> 01:19:34,440
i would say an old technology has been

2172
01:19:34,440 --> 01:19:37,440
revisited it's already networking and it

2173
01:19:37,440 --> 01:19:39,840
can provide better path selection in the

2174
01:19:39,840 --> 01:19:42,480
internet and right now i've seen i think

2175
01:19:42,480 --> 01:19:45,760
a lot big ott service providers already

2176
01:19:45,760 --> 01:19:47,920
deploy these kind of overlay networks

2177
01:19:47,920 --> 01:19:50,560
with their private infrastructure to

2178
01:19:50,560 --> 01:19:51,760
provide

2179
01:19:51,760 --> 01:19:54,400
better performance for dedicate their

2180
01:19:54,400 --> 01:19:56,719
their own service and in the oral

2181
01:19:56,719 --> 01:19:58,480
networking basically

2182
01:19:58,480 --> 01:20:01,360
multiple pops point of prices are

2183
01:20:01,360 --> 01:20:02,480
deployed

2184
01:20:02,480 --> 01:20:04,719
worldwide to relay the traffic

2185
01:20:04,719 --> 01:20:07,520
and also in the network there can be uh

2186
01:20:07,520 --> 01:20:09,679
private circuits or the public were

2187
01:20:09,679 --> 01:20:12,159
based on purely public internet

2188
01:20:12,159 --> 01:20:15,120
for example huawei deployed this kind of

2189
01:20:15,120 --> 01:20:18,239
over networking based on a hybrid mode

2190
01:20:18,239 --> 01:20:21,120
with private circuit and also public

2191
01:20:21,120 --> 01:20:23,600
internet and also for example akamai and

2192
01:20:23,600 --> 01:20:26,960
agro they deploy purely on

2193
01:20:26,960 --> 01:20:29,920
on the public internet and some big ott

2194
01:20:29,920 --> 01:20:31,520
actually they have their own backbone

2195
01:20:31,520 --> 01:20:33,840
network but conceptually there are also

2196
01:20:33,840 --> 01:20:35,920
some other networking

2197
01:20:35,920 --> 01:20:38,400
and basically in in the oral networks

2198
01:20:38,400 --> 01:20:41,600
and an endpoint can use already for the

2199
01:20:41,600 --> 01:20:42,480
path

2200
01:20:42,480 --> 01:20:44,960
and instead of the direct

2201
01:20:44,960 --> 01:20:47,440
internet pass to maybe for to achieve

2202
01:20:47,440 --> 01:20:50,000
like lower latency or bypassing some

2203
01:20:50,000 --> 01:20:51,520
congestion points

2204
01:20:51,520 --> 01:20:55,199
uh next next page piece

2205
01:20:57,360 --> 01:20:58,320
okay

2206
01:20:58,320 --> 01:21:00,480
and actually the the current overlay

2207
01:21:00,480 --> 01:21:03,040
routing part is can be shown as the

2208
01:21:03,040 --> 01:21:04,159
light figure

2209
01:21:04,159 --> 01:21:05,520
and uh

2210
01:21:05,520 --> 01:21:08,400
is computed conceptually logical uh

2211
01:21:08,400 --> 01:21:10,000
logically centralized

2212
01:21:10,000 --> 01:21:12,400
but actually the whole path can be

2213
01:21:12,400 --> 01:21:14,880
decomposed into two segments the first

2214
01:21:14,880 --> 01:21:16,560
one we call the access

2215
01:21:16,560 --> 01:21:19,360
from the source to the access point

2216
01:21:19,360 --> 01:21:21,280
where the ingress were the destination

2217
01:21:21,280 --> 01:21:23,040
to the egress point

2218
01:21:23,040 --> 01:21:26,719
and actually this part

2219
01:21:27,120 --> 01:21:29,280
the routing work basically is like the

2220
01:21:29,280 --> 01:21:31,679
access point selection process and the

2221
01:21:31,679 --> 01:21:33,360
source need to

2222
01:21:33,360 --> 01:21:35,440
uh get the address of the access

2223
01:21:35,440 --> 01:21:37,679
controller and ask the controller to

2224
01:21:37,679 --> 01:21:38,880
assign

2225
01:21:38,880 --> 01:21:40,239
the

2226
01:21:40,239 --> 01:21:42,560
access point either ingress or egress

2227
01:21:42,560 --> 01:21:44,880
based on some geography location or

2228
01:21:44,880 --> 01:21:46,000
latency

2229
01:21:46,000 --> 01:21:48,159
and inside the network we call the

2230
01:21:48,159 --> 01:21:50,719
backbone segment and the english segment

2231
01:21:50,719 --> 01:21:53,520
actually is only maybe composed with

2232
01:21:53,520 --> 01:21:54,960
like

2233
01:21:54,960 --> 01:21:58,000
hundreds or like pairs of nodes and

2234
01:21:58,000 --> 01:21:59,679
basically the controller can configure

2235
01:21:59,679 --> 01:22:02,000
the auction path in the backbone you can

2236
01:22:02,000 --> 01:22:05,040
find always find the option pass from

2237
01:22:05,040 --> 01:22:07,600
ingress all the way to the egress

2238
01:22:07,600 --> 01:22:10,560
however in this kind of diagram actually

2239
01:22:10,560 --> 01:22:13,520
there are three main problems we observe

2240
01:22:13,520 --> 01:22:16,320
uh the five the first one actually is

2241
01:22:16,320 --> 01:22:19,040
the local optimal is not always the

2242
01:22:19,040 --> 01:22:21,679
global optimal okay it's more like our

2243
01:22:21,679 --> 01:22:25,760
nitro subway system and even if you find

2244
01:22:25,760 --> 01:22:28,800
the closest or the best access point and

2245
01:22:28,800 --> 01:22:31,280
you'll find the best path within the

2246
01:22:31,280 --> 01:22:33,679
backbone but in the end-to-end

2247
01:22:33,679 --> 01:22:36,639
perspective it's not always optimal

2248
01:22:36,639 --> 01:22:38,639
and we do have a real example in the

2249
01:22:38,639 --> 01:22:41,199
figure for example if the user from the

2250
01:22:41,199 --> 01:22:43,760
zimbabwe wants to send traffic to

2251
01:22:43,760 --> 01:22:44,880
thailand

2252
01:22:44,880 --> 01:22:48,639
and one way is the black path actually

2253
01:22:48,639 --> 01:22:51,440
you find the closest ingress point and

2254
01:22:51,440 --> 01:22:52,480
which is

2255
01:22:52,480 --> 01:22:55,440
south africa and hong kong and you have

2256
01:22:55,440 --> 01:22:58,239
the the good path between them but the

2257
01:22:58,239 --> 01:23:02,000
whole latency is around 250 milliseconds

2258
01:23:02,000 --> 01:23:04,320
but instead you don't have to do this

2259
01:23:04,320 --> 01:23:05,280
you

2260
01:23:05,280 --> 01:23:07,360
want to achieve the global ultimate you

2261
01:23:07,360 --> 01:23:10,719
can the demo we can find a further

2262
01:23:10,719 --> 01:23:12,800
access point which is actually dubai

2263
01:23:12,800 --> 01:23:15,120
it's not shown here and it's in the

2264
01:23:15,120 --> 01:23:18,159
middle and also the thailand can also

2265
01:23:18,159 --> 01:23:20,880
access it to dubai and just one

2266
01:23:20,880 --> 01:23:23,280
point you can relate the traffic and the

2267
01:23:23,280 --> 01:23:24,719
total uh

2268
01:23:24,719 --> 01:23:28,080
latency is only 160 milliseconds

2269
01:23:28,080 --> 01:23:30,800
but this green path actually is

2270
01:23:30,800 --> 01:23:33,120
is not able to be found in the current

2271
01:23:33,120 --> 01:23:36,800
diagram or not mentioning to use that

2272
01:23:36,800 --> 01:23:38,960
and the second problem is about complex

2273
01:23:38,960 --> 01:23:42,560
signaling basically to uh in the current

2274
01:23:42,560 --> 01:23:44,639
uh framework

2275
01:23:44,639 --> 01:23:47,120
the source need to if you want to send

2276
01:23:47,120 --> 01:23:49,440
anything you first need to have the dns

2277
01:23:49,440 --> 01:23:51,840
request to get the address of the

2278
01:23:51,840 --> 01:23:54,239
destination and then if you want used

2279
01:23:54,239 --> 01:23:57,440
over the networking and you need to uh

2280
01:23:57,440 --> 01:23:59,360
get address over the access controller

2281
01:23:59,360 --> 01:24:00,960
and then you ask

2282
01:24:00,960 --> 01:24:03,600
access controller to the access point

2283
01:24:03,600 --> 01:24:05,120
and so many kind of like complex

2284
01:24:05,120 --> 01:24:06,320
signalling

2285
01:24:06,320 --> 01:24:08,320
and the third problem is basically the

2286
01:24:08,320 --> 01:24:10,480
motivation of the p energy basically

2287
01:24:10,480 --> 01:24:12,880
there's zero uh

2288
01:24:12,880 --> 01:24:14,880
information about the path at the end

2289
01:24:14,880 --> 01:24:17,679
point there is no pass on awareness

2290
01:24:17,679 --> 01:24:19,760
and if for example for different kind of

2291
01:24:19,760 --> 01:24:21,920
traffic sorry different kind of service

2292
01:24:21,920 --> 01:24:24,159
you cannot have the flexibility to

2293
01:24:24,159 --> 01:24:25,760
choose a path

2294
01:24:25,760 --> 01:24:29,320
next page please

2295
01:24:30,800 --> 01:24:32,960
okay then to address this uh problem

2296
01:24:32,960 --> 01:24:34,880
actually we propose some potential

2297
01:24:34,880 --> 01:24:37,199
extensions and actually there are in

2298
01:24:37,199 --> 01:24:40,800
three places the first one is about the

2299
01:24:40,800 --> 01:24:43,199
end to end joint pass computation

2300
01:24:43,199 --> 01:24:46,639
basically you can compute the entire

2301
01:24:46,639 --> 01:24:50,000
overlay path including both the access

2302
01:24:50,000 --> 01:24:51,520
segments and also the background

2303
01:24:51,520 --> 01:24:54,159
segments just to give the entire over

2304
01:24:54,159 --> 01:24:55,120
the path

2305
01:24:55,120 --> 01:24:58,400
and also this end-to-end controller can

2306
01:24:58,400 --> 01:24:59,199
be

2307
01:24:59,199 --> 01:25:01,199
can play as a

2308
01:25:01,199 --> 01:25:03,280
root dns server

2309
01:25:03,280 --> 01:25:04,159
okay

2310
01:25:04,159 --> 01:25:06,560
then therefore to configure the path you

2311
01:25:06,560 --> 01:25:10,880
can just use or reuse the dns tunnel

2312
01:25:10,880 --> 01:25:13,679
basically whenever the source i want to

2313
01:25:13,679 --> 01:25:15,600
send anything to the destination for

2314
01:25:15,600 --> 01:25:20,159
example uh the ietf website and you need

2315
01:25:20,159 --> 01:25:22,719
the address okay you need to query the

2316
01:25:22,719 --> 01:25:27,520
dns but in the meantime you can have the

2317
01:25:27,520 --> 01:25:29,840
overlay path request

2318
01:25:29,840 --> 01:25:32,560
together with the destination request

2319
01:25:32,560 --> 01:25:34,719
and just you just need one route and

2320
01:25:34,719 --> 01:25:36,000
again has

2321
01:25:36,000 --> 01:25:39,360
you know the dns a recursive kind of

2322
01:25:39,360 --> 01:25:42,159
query and it can return you

2323
01:25:42,159 --> 01:25:44,719
the address of the destination together

2324
01:25:44,719 --> 01:25:47,920
with the entire overall path

2325
01:25:47,920 --> 01:25:50,239
and uh and of course you need some

2326
01:25:50,239 --> 01:25:53,440
extent you communicate based on the edns

2327
01:25:53,440 --> 01:25:55,920
the extension of dns and maybe you need

2328
01:25:55,920 --> 01:25:57,440
a kind of new

2329
01:25:57,440 --> 01:26:01,199
uh option code for this kind of request

2330
01:26:01,199 --> 01:26:03,760
and the third extension actually is

2331
01:26:03,760 --> 01:26:07,280
whenever you have a dns response and you

2332
01:26:07,280 --> 01:26:10,080
already have a central path and here the

2333
01:26:10,080 --> 01:26:13,199
path can be can include for example the

2334
01:26:13,199 --> 01:26:15,600
the list of the pop

2335
01:26:15,600 --> 01:26:18,239
and also it can include some past

2336
01:26:18,239 --> 01:26:20,239
property information for example about

2337
01:26:20,239 --> 01:26:24,239
latency and bandwidth and you can choose

2338
01:26:24,239 --> 01:26:25,360
from

2339
01:26:25,360 --> 01:26:26,560
them

2340
01:26:26,560 --> 01:26:29,520
and based on based on the dns response

2341
01:26:29,520 --> 01:26:31,600
and then you can just use simply use

2342
01:26:31,600 --> 01:26:33,760
source routing or second routing i think

2343
01:26:33,760 --> 01:26:36,000
you already talked this a lot but

2344
01:26:36,000 --> 01:26:38,159
actually here the difference is

2345
01:26:38,159 --> 01:26:40,800
uh you just directly use segment source

2346
01:26:40,800 --> 01:26:41,760
routing

2347
01:26:41,760 --> 01:26:44,400
at the very first point

2348
01:26:44,400 --> 01:26:47,040
at the end point and uh encapsulate the

2349
01:26:47,040 --> 01:26:48,719
package for example if what you want to

2350
01:26:48,719 --> 01:26:49,679
use

2351
01:26:49,679 --> 01:26:52,960
path 1 3 4 5 you just give the list in

2352
01:26:52,960 --> 01:26:54,960
the packet header and the send to the

2353
01:26:54,960 --> 01:26:57,520
send to the network and also the all the

2354
01:26:57,520 --> 01:26:59,760
pop or the folding node doesn't need to

2355
01:26:59,760 --> 01:27:01,920
maintain the routing state

2356
01:27:01,920 --> 01:27:04,639
and it can for the traffic based on the

2357
01:27:04,639 --> 01:27:06,719
information in the header and all the

2358
01:27:06,719 --> 01:27:09,920
way to the destination

2359
01:27:09,920 --> 01:27:12,000
and uh basically that's our next page

2360
01:27:12,000 --> 01:27:14,239
piece

2361
01:27:14,239 --> 01:27:16,880
yeah this is just some uh first uh

2362
01:27:16,880 --> 01:27:19,679
thoughts and i think it can be very

2363
01:27:19,679 --> 01:27:21,120
complimentary

2364
01:27:21,120 --> 01:27:24,239
to the ic at one

2365
01:27:24,239 --> 01:27:25,040
work

2366
01:27:25,040 --> 01:27:27,120
and we are very

2367
01:27:27,120 --> 01:27:29,679
we'll be very happy to like collaborate

2368
01:27:29,679 --> 01:27:32,080
with everybody else to try to document

2369
01:27:32,080 --> 01:27:33,920
this problem state

2370
01:27:33,920 --> 01:27:38,159
and let's see how we can proceed

2371
01:27:38,159 --> 01:27:41,120
yeah that's all thank you

2372
01:27:42,960 --> 01:27:44,560
uh okay

2373
01:27:44,560 --> 01:27:50,199
any like comments from anyone

2374
01:28:01,520 --> 01:28:03,920
so

2375
01:28:05,679 --> 01:28:09,159
i am like

2376
01:28:14,000 --> 01:28:16,480
some i suggest

2377
01:28:16,480 --> 01:28:18,000
you ask for

2378
01:28:18,000 --> 01:28:20,159
any like feedback on the list

2379
01:28:20,159 --> 01:28:22,000
right because

2380
01:28:22,000 --> 01:28:25,199
well i guess not everyone on there

2381
01:28:25,199 --> 01:28:27,679
who is reading the mailing list is in

2382
01:28:27,679 --> 01:28:29,920
this room right now right so i do not

2383
01:28:29,920 --> 01:28:31,600
see anyone like rushing to the

2384
01:28:31,600 --> 01:28:33,440
microphone to

2385
01:28:33,440 --> 01:28:35,920
give any comments

2386
01:28:35,920 --> 01:28:39,520
so i suggest we just start with that

2387
01:28:39,520 --> 01:28:41,600
because i think the first thing we need

2388
01:28:41,600 --> 01:28:43,440
to

2389
01:28:43,440 --> 01:28:46,400
find out if there is any any interest

2390
01:28:46,400 --> 01:28:48,639
in the room to

2391
01:28:48,639 --> 01:28:52,080
like work on it right some

2392
01:28:52,400 --> 01:28:54,560
okay

2393
01:28:54,560 --> 01:28:57,800
okay cool

2394
01:28:59,440 --> 01:29:01,040
okay

2395
01:29:01,040 --> 01:29:02,159
and

2396
01:29:02,159 --> 01:29:03,440
we're going

2397
01:29:03,440 --> 01:29:07,520
ahead of time great so hiroshima

2398
01:29:07,520 --> 01:29:11,840
floor is yours i am

2399
01:29:12,480 --> 01:29:13,600
yeah

2400
01:29:13,600 --> 01:29:15,679
yes

2401
01:29:15,679 --> 01:29:18,000
okay

2402
01:29:19,520 --> 01:29:21,280
if you want here like i guess people

2403
01:29:21,280 --> 01:29:23,120
might hear you better if you do that but

2404
01:29:23,120 --> 01:29:24,800
it's like up to you

2405
01:29:24,800 --> 01:29:26,960
keep my face this

2406
01:29:26,960 --> 01:29:29,280
direction so um

2407
01:29:29,280 --> 01:29:30,159
can i

2408
01:29:30,159 --> 01:29:33,280
yeah yeah please please go ahead

2409
01:29:33,280 --> 01:29:35,440
okay so yeah good afternoon everyone i'm

2410
01:29:35,440 --> 01:29:37,679
chris kasaei uh from white project and

2411
01:29:37,679 --> 01:29:39,760
preferred networks um i'm going to talk

2412
01:29:39,760 --> 01:29:41,920
about the separation of data paths and

2413
01:29:41,920 --> 01:29:43,520
data flow suppliers in the transport

2414
01:29:43,520 --> 01:29:46,560
area this was originally indeed for

2415
01:29:46,560 --> 01:29:49,760
the tsb working group but i think this

2416
01:29:49,760 --> 01:29:52,000
kind of discussion should be here

2417
01:29:52,000 --> 01:29:52,880
because

2418
01:29:52,880 --> 01:29:56,800
this is related to past data paths so um

2419
01:29:56,800 --> 01:29:58,800
next next slide please

2420
01:29:58,800 --> 01:30:01,120
so this is the motivation as you know

2421
01:30:01,120 --> 01:30:04,159
the internet is uh oh really uh that is

2422
01:30:04,159 --> 01:30:07,840
right now and the um it was uh

2423
01:30:07,840 --> 01:30:10,080
yeah the principal of the internet was

2424
01:30:10,080 --> 01:30:12,239
the end to end

2425
01:30:12,239 --> 01:30:13,040
but

2426
01:30:13,040 --> 01:30:14,080
we have

2427
01:30:14,080 --> 01:30:17,120
more and more smaller network gears in

2428
01:30:17,120 --> 01:30:20,000
between the end host so for example we

2429
01:30:20,000 --> 01:30:23,520
have our qis middle box and then we now

2430
01:30:23,520 --> 01:30:25,280
have the new distributed computing

2431
01:30:25,280 --> 01:30:27,520
technologies such as the powersup model

2432
01:30:27,520 --> 01:30:30,239
machine machine communication and edge

2433
01:30:30,239 --> 01:30:32,400
computing and in network computing in

2434
01:30:32,400 --> 01:30:35,280
network computing is a little bit uh

2435
01:30:35,280 --> 01:30:39,520
difficult for me still but we have more

2436
01:30:39,520 --> 01:30:42,800
middle boxes in the network so i think

2437
01:30:42,800 --> 01:30:46,080
the end to end principle is now over so

2438
01:30:46,080 --> 01:30:49,199
we need to think about how to our

2439
01:30:49,199 --> 01:30:52,000
review how to design the in the future

2440
01:30:52,000 --> 01:30:54,400
internet so the

2441
01:30:54,400 --> 01:30:58,320
according to the rrc 1122 and 1123

2442
01:30:58,320 --> 01:31:00,800
do we have three layers and four layers

2443
01:31:00,800 --> 01:31:02,880
link layer internet layer transport

2444
01:31:02,880 --> 01:31:05,840
layer and the application layers and uh

2445
01:31:05,840 --> 01:31:07,360
yeah the link layer and the internal

2446
01:31:07,360 --> 01:31:09,600
area is okay so internet internet layer

2447
01:31:09,600 --> 01:31:12,239
provides the um entertain reachability

2448
01:31:12,239 --> 01:31:14,880
but the transport layer implements too

2449
01:31:14,880 --> 01:31:15,760
much

2450
01:31:15,760 --> 01:31:16,560
so

2451
01:31:16,560 --> 01:31:19,679
the next slide please so

2452
01:31:19,679 --> 01:31:21,040
no no problem

2453
01:31:21,040 --> 01:31:23,920
yep so the ip loading is a

2454
01:31:23,920 --> 01:31:25,199
based on the hub

2455
01:31:25,199 --> 01:31:28,000
hope i have a strong evolve or

2456
01:31:28,000 --> 01:31:31,120
nature with a single or multiple uh cues

2457
01:31:31,120 --> 01:31:33,600
in the router but transport layer some

2458
01:31:33,600 --> 01:31:35,679
of the functionality of the transport

2459
01:31:35,679 --> 01:31:38,480
layer end-to-end functionality so for

2460
01:31:38,480 --> 01:31:40,400
example reliable data communication the

2461
01:31:40,400 --> 01:31:43,440
transmission integrity check are

2462
01:31:43,440 --> 01:31:45,360
the end to end functionality so the

2463
01:31:45,360 --> 01:31:47,760
levelers do not need to do nothing so

2464
01:31:47,760 --> 01:31:51,679
data path is just a data path but there

2465
01:31:51,679 --> 01:31:54,639
yeah of course

2466
01:31:54,639 --> 01:31:56,080
in addition to the reliable data

2467
01:31:56,080 --> 01:31:58,159
communication flow control for deletive

2468
01:31:58,159 --> 01:32:01,920
buffer management is a dam performed by

2469
01:32:01,920 --> 01:32:03,600
the end host

2470
01:32:03,600 --> 01:32:05,679
and the transportation security is also

2471
01:32:05,679 --> 01:32:07,440
performed on the

2472
01:32:07,440 --> 01:32:10,639
endos however we have some stat

2473
01:32:10,639 --> 01:32:13,280
dependent function functionality so the

2474
01:32:13,280 --> 01:32:15,600
end host needs to know about the data

2475
01:32:15,600 --> 01:32:18,960
path so for example the we

2476
01:32:18,960 --> 01:32:22,239
when we perform the past empty discovery

2477
01:32:22,239 --> 01:32:24,880
we need information of the mtu on the

2478
01:32:24,880 --> 01:32:27,600
database that is that that is

2479
01:32:27,600 --> 01:32:29,280
accomplished with the

2480
01:32:29,280 --> 01:32:32,000
icmp now but we

2481
01:32:32,000 --> 01:32:34,639
uh sometimes we have many problems with

2482
01:32:34,639 --> 01:32:37,520
the possibility discovery so

2483
01:32:37,520 --> 01:32:39,040
so

2484
01:32:39,040 --> 01:32:41,440
and the congestion control is also

2485
01:32:41,440 --> 01:32:45,199
performed on the end host however the uh

2486
01:32:45,199 --> 01:32:46,800
congestion is

2487
01:32:46,800 --> 01:32:49,199
actually occurred on the routers or data

2488
01:32:49,199 --> 01:32:51,679
paths in between the levels

2489
01:32:51,679 --> 01:32:53,280
so

2490
01:32:53,280 --> 01:32:55,280
and the eachine

2491
01:32:55,280 --> 01:32:57,199
exclusive condition notification is

2492
01:32:57,199 --> 01:32:58,800
implemented in the

2493
01:32:58,800 --> 01:33:00,239
letter to

2494
01:33:00,239 --> 01:33:02,719
um notify the condition information to

2495
01:33:02,719 --> 01:33:04,560
the end host so some of the

2496
01:33:04,560 --> 01:33:06,719
functionalities on the transport layer

2497
01:33:06,719 --> 01:33:09,840
require the information of data paths

2498
01:33:09,840 --> 01:33:11,600
moreover

2499
01:33:11,600 --> 01:33:14,000
the several meter boxes

2500
01:33:14,000 --> 01:33:16,960
request to know the waypoint

2501
01:33:16,960 --> 01:33:17,840
and

2502
01:33:17,840 --> 01:33:20,080
this kind of meter boxes may have a

2503
01:33:20,080 --> 01:33:23,520
state of the data flow so

2504
01:33:23,520 --> 01:33:26,080
we need need to implement some kind of

2505
01:33:26,080 --> 01:33:27,280
the

2506
01:33:27,280 --> 01:33:30,159
waypoint aware routing technologies for

2507
01:33:30,159 --> 01:33:31,120
example

2508
01:33:31,120 --> 01:33:33,280
the firewalls are implemented at the

2509
01:33:33,280 --> 01:33:37,120
gateway or the transparent transparent

2510
01:33:37,120 --> 01:33:38,800
protein could be

2511
01:33:38,800 --> 01:33:41,520
implemented with the uh i mean deployed

2512
01:33:41,520 --> 01:33:42,480
with the

2513
01:33:42,480 --> 01:33:44,880
policy based routing so

2514
01:33:44,880 --> 01:33:46,719
the transport layer

2515
01:33:46,719 --> 01:33:49,840
needs to be aware of the data is for

2516
01:33:49,840 --> 01:33:51,600
some functionalities so next slide

2517
01:33:51,600 --> 01:33:53,840
please

2518
01:33:53,840 --> 01:33:54,800
so

2519
01:33:54,800 --> 01:33:55,920
and more

2520
01:33:55,920 --> 01:33:58,400
uh we have more password data

2521
01:33:58,400 --> 01:34:00,880
communication here so multiple has

2522
01:34:00,880 --> 01:34:04,320
multiple we have multiple protocols we

2523
01:34:04,320 --> 01:34:08,400
have http mptcp mp click mpdccp and so

2524
01:34:08,400 --> 01:34:11,440
on so that these protocols should be

2525
01:34:11,440 --> 01:34:12,880
passed away

2526
01:34:12,880 --> 01:34:15,600
so that we can use the

2527
01:34:15,600 --> 01:34:19,199
two two or more database efficiently

2528
01:34:19,199 --> 01:34:22,400
and the aqm is aware of database

2529
01:34:22,400 --> 01:34:25,040
actually it's aware of the two of the

2530
01:34:25,040 --> 01:34:29,280
database and in addition to this

2531
01:34:29,280 --> 01:34:31,360
we have more

2532
01:34:31,360 --> 01:34:34,159
emerging technologies such as the pub

2533
01:34:34,159 --> 01:34:36,400
mtm communication edge computing network

2534
01:34:36,400 --> 01:34:39,040
slicing and in network computing

2535
01:34:39,040 --> 01:34:39,920
so

2536
01:34:39,920 --> 01:34:42,159
this is achieved these

2537
01:34:42,159 --> 01:34:44,159
new technologies achieved with the

2538
01:34:44,159 --> 01:34:47,119
program network programmability so

2539
01:34:47,119 --> 01:34:48,080
the

2540
01:34:48,080 --> 01:34:49,119
the

2541
01:34:49,119 --> 01:34:51,440
infrastructure of the ip leveling

2542
01:34:51,440 --> 01:34:53,040
becomes more

2543
01:34:53,040 --> 01:34:57,760
smarter i mean so next slide please

2544
01:34:57,920 --> 01:35:00,639
so this is the this stress shows the

2545
01:35:00,639 --> 01:35:02,239
problems with the transfer current

2546
01:35:02,239 --> 01:35:04,960
transfer portrayal problem uh protocols

2547
01:35:04,960 --> 01:35:08,560
so the kind transport protocols are

2548
01:35:08,560 --> 01:35:11,280
tightly coupled design uh

2549
01:35:11,280 --> 01:35:14,000
so i mean so all components of the

2550
01:35:14,000 --> 01:35:15,840
transport layer functionality are

2551
01:35:15,840 --> 01:35:18,400
integrated to the one protocols

2552
01:35:18,400 --> 01:35:20,639
so for example click

2553
01:35:20,639 --> 01:35:22,960
that is a very good protocol but that

2554
01:35:22,960 --> 01:35:27,040
has a many functions in one protocol so

2555
01:35:27,040 --> 01:35:28,400
if we want to

2556
01:35:28,400 --> 01:35:30,560
make a mp quick

2557
01:35:30,560 --> 01:35:31,840
standardized

2558
01:35:31,840 --> 01:35:33,760
the we need uh some kind of the

2559
01:35:33,760 --> 01:35:36,400
reinvention for the click

2560
01:35:36,400 --> 01:35:40,159
although we have an mptcp or http

2561
01:35:40,159 --> 01:35:41,840
for the multiply

2562
01:35:41,840 --> 01:35:43,440
protocol

2563
01:35:43,440 --> 01:35:44,239
so

2564
01:35:44,239 --> 01:35:46,960
it is very difficult to develop

2565
01:35:46,960 --> 01:35:49,440
the new transport layer protocols so

2566
01:35:49,440 --> 01:35:51,199
quick is okay i think because that is a

2567
01:35:51,199 --> 01:35:53,840
test transport layer but if we need some

2568
01:35:53,840 --> 01:35:56,560
uh health or cooperation from the ip

2569
01:35:56,560 --> 01:35:59,920
layer for example if we have a ecn

2570
01:35:59,920 --> 01:36:01,520
for the congestion control that would be

2571
01:36:01,520 --> 01:36:02,400
better

2572
01:36:02,400 --> 01:36:05,280
but if we want to design such kind of a

2573
01:36:05,280 --> 01:36:06,560
feature

2574
01:36:06,560 --> 01:36:08,800
that cooperate with the ip layer and the

2575
01:36:08,800 --> 01:36:11,600
transporter layer i think we need to um

2576
01:36:11,600 --> 01:36:14,639
abstract the current transport layer

2577
01:36:14,639 --> 01:36:17,440
layer to in order to develop the both

2578
01:36:17,440 --> 01:36:19,360
epi-friendly and transport air friendly

2579
01:36:19,360 --> 01:36:21,040
network extensions

2580
01:36:21,040 --> 01:36:24,679
so next slide please

2581
01:36:25,600 --> 01:36:28,880
thank you so i have uh just reviewed the

2582
01:36:28,880 --> 01:36:31,760
transport layer functionality here so i

2583
01:36:31,760 --> 01:36:33,360
think we can

2584
01:36:33,360 --> 01:36:35,119
separate the transport layer

2585
01:36:35,119 --> 01:36:37,199
functionality into two separators two

2586
01:36:37,199 --> 01:36:39,520
functions are two

2587
01:36:39,520 --> 01:36:40,560
more

2588
01:36:40,560 --> 01:36:42,159
functionality

2589
01:36:42,159 --> 01:36:45,040
one data path and the other is data flow

2590
01:36:45,040 --> 01:36:49,280
so regarding the data path um that is uh

2591
01:36:49,280 --> 01:36:51,199
the state race or purpose state that

2592
01:36:51,199 --> 01:36:52,639
that handled

2593
01:36:52,639 --> 01:36:54,960
the purpose state or that is a state

2594
01:36:54,960 --> 01:36:58,080
status for the data flow that is uh

2595
01:36:58,080 --> 01:37:00,880
handling the pass-flow states so for the

2596
01:37:00,880 --> 01:37:03,280
database layer we have

2597
01:37:03,280 --> 01:37:05,360
our functions

2598
01:37:05,360 --> 01:37:08,000
as the trajectory or waypoint handling

2599
01:37:08,000 --> 01:37:10,000
bi-directional connection resource

2600
01:37:10,000 --> 01:37:12,320
monitoring for congestion control and

2601
01:37:12,320 --> 01:37:14,639
congestion control data from much much

2602
01:37:14,639 --> 01:37:16,000
bridging

2603
01:37:16,000 --> 01:37:18,239
this is the similar to

2604
01:37:18,239 --> 01:37:19,440
the quick

2605
01:37:19,440 --> 01:37:20,719
connection

2606
01:37:20,719 --> 01:37:23,360
so the quick connection can multiplex

2607
01:37:23,360 --> 01:37:25,840
the multiple date flows over the i mean

2608
01:37:25,840 --> 01:37:28,080
multiple streams on the one connection

2609
01:37:28,080 --> 01:37:30,719
so this is the similar to the quick idea

2610
01:37:30,719 --> 01:37:31,600
and the

2611
01:37:31,600 --> 01:37:33,440
database reflects one of the data

2612
01:37:33,440 --> 01:37:35,280
fracture

2613
01:37:35,280 --> 01:37:38,159
data function is the patent duplication

2614
01:37:38,159 --> 01:37:39,760
so i think there there was another

2615
01:37:39,760 --> 01:37:41,840
research group for watching grouper it

2616
01:37:41,840 --> 01:37:44,880
was talking about the fake on the

2617
01:37:44,880 --> 01:37:46,800
tcp protocol so i think that this kind

2618
01:37:46,800 --> 01:37:50,560
of the uh the duplication replication

2619
01:37:50,560 --> 01:37:54,639
could be a database functionality

2620
01:37:54,639 --> 01:37:56,560
on the other hand as for the uh

2621
01:37:56,560 --> 01:37:59,920
regarding the data flow the sub layer

2622
01:37:59,920 --> 01:38:02,800
the retransmission or flow control

2623
01:38:02,800 --> 01:38:04,639
that is for buffer management for the

2624
01:38:04,639 --> 01:38:06,480
received side and the flow

2625
01:38:06,480 --> 01:38:09,280
prioritization entertainment security

2626
01:38:09,280 --> 01:38:09,920
and

2627
01:38:09,920 --> 01:38:12,239
um inverse multiplexing for modbus

2628
01:38:12,239 --> 01:38:13,520
protocol uh

2629
01:38:13,520 --> 01:38:16,320
could be a data flow functionality so i

2630
01:38:16,320 --> 01:38:19,040
separate this functionality into two

2631
01:38:19,040 --> 01:38:22,159
so next slide please

2632
01:38:22,239 --> 01:38:25,679
so this is my proposal so for the future

2633
01:38:25,679 --> 01:38:28,239
development of the uh transport auto

2634
01:38:28,239 --> 01:38:31,920
protocols and as well as the ipl

2635
01:38:31,920 --> 01:38:35,360
extension to the ip so

2636
01:38:35,360 --> 01:38:38,400
um so this is the what i said in

2637
01:38:38,400 --> 01:38:40,239
previous slides so i don't think i need

2638
01:38:40,239 --> 01:38:43,760
to mention more but this kind of the uh

2639
01:38:43,760 --> 01:38:47,679
um layering so the database layer is

2640
01:38:47,679 --> 01:38:50,719
above beyond the ip layer and the data

2641
01:38:50,719 --> 01:38:52,320
flow layer is

2642
01:38:52,320 --> 01:38:54,880
above the uh database area so the data

2643
01:38:54,880 --> 01:38:58,480
path layer protocol can multiplex the

2644
01:38:58,480 --> 01:39:01,440
multiple data data flows already

2645
01:39:01,440 --> 01:39:02,960
connected

2646
01:39:02,960 --> 01:39:04,480
there could be a bi-directional

2647
01:39:04,480 --> 01:39:08,480
connection of a unidirectional one

2648
01:39:08,480 --> 01:39:10,719
so the data so data flows are

2649
01:39:10,719 --> 01:39:13,760
multiplexed over the data path that this

2650
01:39:13,760 --> 01:39:14,960
means that

2651
01:39:14,960 --> 01:39:18,080
so next slide please

2652
01:39:18,080 --> 01:39:19,040
so

2653
01:39:19,040 --> 01:39:21,679
um this is the uh one of the use cases i

2654
01:39:21,679 --> 01:39:23,840
i'm thinking about the main use cases

2655
01:39:23,840 --> 01:39:24,880
now

2656
01:39:24,880 --> 01:39:26,880
and i'm uh reviewing the other

2657
01:39:26,880 --> 01:39:28,000
transporter

2658
01:39:28,000 --> 01:39:31,360
protocols tcp quick http and so on but

2659
01:39:31,360 --> 01:39:33,440
this is the uh i i

2660
01:39:33,440 --> 01:39:35,840
have only uh i thought i

2661
01:39:35,840 --> 01:39:39,119
had only ten minutes so i picked up one

2662
01:39:39,119 --> 01:39:42,639
used case here so

2663
01:39:42,960 --> 01:39:44,080
recently

2664
01:39:44,080 --> 01:39:46,080
we have lots of machine tool machine

2665
01:39:46,080 --> 01:39:49,520
communication devices in iot

2666
01:39:49,520 --> 01:39:51,840
so if you're

2667
01:39:51,840 --> 01:39:54,159
downloading something in you i mean

2668
01:39:54,159 --> 01:39:56,400
human download something

2669
01:39:56,400 --> 01:39:58,560
you are aware of the some kind of the

2670
01:39:58,560 --> 01:40:00,239
network so

2671
01:40:00,239 --> 01:40:03,199
the best effort is working fine but for

2672
01:40:03,199 --> 01:40:05,440
the machines machine

2673
01:40:05,440 --> 01:40:08,480
don't think machines don't think so

2674
01:40:08,480 --> 01:40:10,400
they are trying to

2675
01:40:10,400 --> 01:40:11,520
send

2676
01:40:11,520 --> 01:40:14,800
a packet send a file as much as possible

2677
01:40:14,800 --> 01:40:17,679
at the maximum rate so if we use the

2678
01:40:17,679 --> 01:40:19,920
best effort model that may cause some

2679
01:40:19,920 --> 01:40:22,719
troubles in a standard problems

2680
01:40:22,719 --> 01:40:26,480
so if we can have some help

2681
01:40:26,480 --> 01:40:29,199
from the network side so if you can know

2682
01:40:29,199 --> 01:40:31,440
the congestion information or some kind

2683
01:40:31,440 --> 01:40:33,760
of priority information feedback from

2684
01:40:33,760 --> 01:40:34,719
the

2685
01:40:34,719 --> 01:40:38,639
network side we can coordinate arbitrate

2686
01:40:38,639 --> 01:40:40,480
the flow priority

2687
01:40:40,480 --> 01:40:42,320
flow priority

2688
01:40:42,320 --> 01:40:45,520
so if we have uh two kind two types two

2689
01:40:45,520 --> 01:40:48,159
priority data here uh high priority one

2690
01:40:48,159 --> 01:40:50,639
the low priority one low priority y is

2691
01:40:50,639 --> 01:40:52,719
just for archive and the high priority

2692
01:40:52,719 --> 01:40:56,480
one is for the data processing

2693
01:40:56,480 --> 01:40:57,440
and

2694
01:40:57,440 --> 01:41:00,080
we have if we have

2695
01:41:00,080 --> 01:41:03,040
the data transfer for the archive and if

2696
01:41:03,040 --> 01:41:05,199
we if the height priority data is

2697
01:41:05,199 --> 01:41:06,719
started after the

2698
01:41:06,719 --> 01:41:09,119
uh the the data transfer of the or

2699
01:41:09,119 --> 01:41:12,320
operator and then

2700
01:41:12,320 --> 01:41:13,040
the

2701
01:41:13,040 --> 01:41:16,480
this data path may have a congestion so

2702
01:41:16,480 --> 01:41:18,480
if we have the uh feedback from the

2703
01:41:18,480 --> 01:41:20,880
router uh on the for the from the

2704
01:41:20,880 --> 01:41:24,320
datapass layer uh the this uh low

2705
01:41:24,320 --> 01:41:26,960
priority date transmission could be

2706
01:41:26,960 --> 01:41:28,560
controlled i mean

2707
01:41:28,560 --> 01:41:31,920
arbitrate and the data more lower data

2708
01:41:31,920 --> 01:41:34,560
rate so that we can have a higher rate

2709
01:41:34,560 --> 01:41:37,040
for the higher priority data so this is

2710
01:41:37,040 --> 01:41:39,679
very similar to the ecm so for the this

2711
01:41:39,679 --> 01:41:42,400
use test the next slide please

2712
01:41:42,400 --> 01:41:43,679
so this is the

2713
01:41:43,679 --> 01:41:48,480
kind of pseudo um flow diagram so i

2714
01:41:48,480 --> 01:41:50,239
don't need to

2715
01:41:50,239 --> 01:41:51,119
say

2716
01:41:51,119 --> 01:41:53,199
anything more but this scenario could be

2717
01:41:53,199 --> 01:41:56,400
achieved with the tcp ecn and dhcp

2718
01:41:56,400 --> 01:42:00,239
but if we can have more sophisticated or

2719
01:42:00,239 --> 01:42:02,960
more extended information from the data

2720
01:42:02,960 --> 01:42:03,920
path

2721
01:42:03,920 --> 01:42:06,320
we could have a more

2722
01:42:06,320 --> 01:42:08,719
better

2723
01:42:08,719 --> 01:42:11,440
condition control algorithm or

2724
01:42:11,440 --> 01:42:13,920
certain things so the recently we have

2725
01:42:13,920 --> 01:42:16,080
the sum of our data center

2726
01:42:16,080 --> 01:42:18,719
uh transport layer protocol implement

2727
01:42:18,719 --> 01:42:21,440
the streaming telemetry to get the

2728
01:42:21,440 --> 01:42:24,320
more precise information on the buffer

2729
01:42:24,320 --> 01:42:26,639
on the data path so if we we're going to

2730
01:42:26,639 --> 01:42:29,040
use that such kind of information

2731
01:42:29,040 --> 01:42:31,199
i think the separation of the data from

2732
01:42:31,199 --> 01:42:34,000
the database is useful so next slide

2733
01:42:34,000 --> 01:42:36,080
please

2734
01:42:36,080 --> 01:42:39,280
so this is the last slide from me so

2735
01:42:39,280 --> 01:42:41,679
thank you for giving a time here

2736
01:42:41,679 --> 01:42:43,760
so the i think uh

2737
01:42:43,760 --> 01:42:46,800
this is very related to the uh past

2738
01:42:46,800 --> 01:42:50,080
priority here this is a uh related to

2739
01:42:50,080 --> 01:42:52,480
the uh data path so

2740
01:42:52,480 --> 01:42:54,080
so i wanna

2741
01:42:54,080 --> 01:42:56,320
get the feedback from you and i'm going

2742
01:42:56,320 --> 01:42:59,119
to continue the discussion on the uh

2743
01:42:59,119 --> 01:43:00,080
that

2744
01:43:00,080 --> 01:43:01,840
gap between the hubble hub and the

2745
01:43:01,840 --> 01:43:05,280
end-to-end uh mechanism between the uh

2746
01:43:05,280 --> 01:43:07,600
ip layer and the transport layer

2747
01:43:07,600 --> 01:43:08,960
and

2748
01:43:08,960 --> 01:43:10,560
from the people into database and data

2749
01:43:10,560 --> 01:43:12,080
flow

2750
01:43:12,080 --> 01:43:14,320
and i'm gonna i'm working on the

2751
01:43:14,320 --> 01:43:16,400
reviewing the existing uh transport

2752
01:43:16,400 --> 01:43:19,440
layer protocol functionality and uh so

2753
01:43:19,440 --> 01:43:22,000
the third item is the

2754
01:43:22,000 --> 01:43:25,199
what we want to ask you here

2755
01:43:25,199 --> 01:43:26,800
so i want to

2756
01:43:26,800 --> 01:43:30,080
um yeah as the internet is a kind of

2757
01:43:30,080 --> 01:43:32,880
that is right so but i don't want to

2758
01:43:32,880 --> 01:43:35,600
create a clean slate architecture

2759
01:43:35,600 --> 01:43:37,920
because the internet is a great

2760
01:43:37,920 --> 01:43:40,719
architecture but we need to fix or

2761
01:43:40,719 --> 01:43:44,400
modify some of that so i wanna uh

2762
01:43:44,400 --> 01:43:46,000
discuss you

2763
01:43:46,000 --> 01:43:48,880
uh discuss the architecture for new

2764
01:43:48,880 --> 01:43:50,480
communication model and distributed

2765
01:43:50,480 --> 01:43:51,920
computing

2766
01:43:51,920 --> 01:43:54,639
here so if you have any use cases that

2767
01:43:54,639 --> 01:43:55,600
could be

2768
01:43:55,600 --> 01:43:57,840
uh helpful um

2769
01:43:57,840 --> 01:44:00,320
with the separation

2770
01:44:00,320 --> 01:44:01,280
of the

2771
01:44:01,280 --> 01:44:03,760
database and data flow separators

2772
01:44:03,760 --> 01:44:08,400
i want to know those kind of use cases

2773
01:44:08,400 --> 01:44:11,040
so that is the i want to do

2774
01:44:11,040 --> 01:44:15,199
and as a protocol development i think uh

2775
01:44:15,199 --> 01:44:17,840
i need to review the existing existing

2776
01:44:17,840 --> 01:44:20,880
existing transport layer protocol but i

2777
01:44:20,880 --> 01:44:23,360
want to develop some kind of

2778
01:44:23,360 --> 01:44:25,360
uh example data path and data flow

2779
01:44:25,360 --> 01:44:26,639
protocol

2780
01:44:26,639 --> 01:44:28,880
using this architecture

2781
01:44:28,880 --> 01:44:32,000
so that is the my next steps and this

2782
01:44:32,000 --> 01:44:34,320
i want to get the feedback

2783
01:44:34,320 --> 01:44:35,440
on the

2784
01:44:35,440 --> 01:44:39,040
the architecture for future

2785
01:44:39,600 --> 01:44:42,320
data communication for better world so

2786
01:44:42,320 --> 01:44:44,000
thank you so

2787
01:44:44,000 --> 01:44:46,000
thank you very much

2788
01:44:46,000 --> 01:44:50,480
okay thank you i think we have

2789
01:44:50,480 --> 01:44:53,519
glory in the pew

2790
01:44:55,440 --> 01:44:57,760
yeah i'd just like to say thank you for

2791
01:44:57,760 --> 01:45:00,400
the clarity in your talk

2792
01:45:00,400 --> 01:45:02,719
that was really clear

2793
01:45:02,719 --> 01:45:06,080
what are your plans for the next europe

2794
01:45:06,080 --> 01:45:09,760
are you going to work on this more

2795
01:45:10,560 --> 01:45:11,440
um

2796
01:45:11,440 --> 01:45:14,960
yeah i i needed to um

2797
01:45:14,960 --> 01:45:17,440
work on this item in uh

2798
01:45:17,440 --> 01:45:19,600
the tsv working group so

2799
01:45:19,600 --> 01:45:23,440
that we can publish the uh new layering

2800
01:45:23,440 --> 01:45:24,560
model

2801
01:45:24,560 --> 01:45:26,800
but before doing that i think it is

2802
01:45:26,800 --> 01:45:31,040
better to discuss uh the uh the existing

2803
01:45:31,040 --> 01:45:34,400
uh protocol and future uh

2804
01:45:34,400 --> 01:45:37,679
potential models or potential um

2805
01:45:37,679 --> 01:45:41,119
use cases because the um

2806
01:45:41,119 --> 01:45:44,960
this is the uh not for the past i mean

2807
01:45:44,960 --> 01:45:48,400
this this is informational but uh

2808
01:45:48,400 --> 01:45:51,040
uh this will be

2809
01:45:51,040 --> 01:45:53,520
for future so i wanna

2810
01:45:53,520 --> 01:45:56,800
work on the uh historical review and the

2811
01:45:56,800 --> 01:46:00,480
future discussion here

2812
01:46:01,600 --> 01:46:03,199
i would love to see more of this

2813
01:46:03,199 --> 01:46:04,639
discussed in this

2814
01:46:04,639 --> 01:46:06,800
research group it's it was really good

2815
01:46:06,800 --> 01:46:09,600
thank you for your talk

2816
01:46:10,239 --> 01:46:13,799
hey brian

2817
01:46:13,920 --> 01:46:16,000
i am putting myself in the queue as an

2818
01:46:16,000 --> 01:46:18,960
individual uh second in gory um

2819
01:46:18,960 --> 01:46:21,679
this is a discussion that we've had at

2820
01:46:21,679 --> 01:46:23,840
various levels of clarity in the ietf

2821
01:46:23,840 --> 01:46:25,760
for a long time right like so trying to

2822
01:46:25,760 --> 01:46:26,880
figure out

2823
01:46:26,880 --> 01:46:28,320
kind of how to take these transport

2824
01:46:28,320 --> 01:46:30,000
layer functionalities and make it work

2825
01:46:30,000 --> 01:46:31,600
in a cooperative way and the network

2826
01:46:31,600 --> 01:46:33,040
that we have

2827
01:46:33,040 --> 01:46:34,159
um

2828
01:46:34,159 --> 01:46:36,960
and i i really like the clear like this

2829
01:46:36,960 --> 01:46:38,320
this framing of this is a really

2830
01:46:38,320 --> 01:46:39,600
interesting way to take it so thank you

2831
01:46:39,600 --> 01:46:41,440
very much for the presentation

2832
01:46:41,440 --> 01:46:43,840
um i think

2833
01:46:43,840 --> 01:46:45,679
um

2834
01:46:45,679 --> 01:46:48,719
one question i would ask is so like that

2835
01:46:48,719 --> 01:46:51,199
uh speaking as a proponent of the the

2836
01:46:51,199 --> 01:46:53,199
long dead plus buff

2837
01:46:53,199 --> 01:46:55,440
um which was a previous attempt at

2838
01:46:55,440 --> 01:46:56,960
having this discussion i think about

2839
01:46:56,960 --> 01:46:58,800
five six years ago

2840
01:46:58,800 --> 01:47:00,000
um

2841
01:47:00,000 --> 01:47:03,840
i'd ask if you have seen uh the rfcs

2842
01:47:03,840 --> 01:47:06,560
that came out of the ib stack evolution

2843
01:47:06,560 --> 01:47:09,920
program on path cooperation and wire

2844
01:47:09,920 --> 01:47:12,800
images um i can i can follow up with you

2845
01:47:12,800 --> 01:47:14,080
offline about that there's like a couple

2846
01:47:14,080 --> 01:47:15,920
of things that that i think might

2847
01:47:15,920 --> 01:47:16,960
actually

2848
01:47:16,960 --> 01:47:17,920
um

2849
01:47:17,920 --> 01:47:19,199
help you with the framing of the

2850
01:47:19,199 --> 01:47:22,159
historical uh the historical discussion

2851
01:47:22,159 --> 01:47:24,239
as individuals so no chair hat on i also

2852
01:47:24,239 --> 01:47:26,960
think that sort of um

2853
01:47:26,960 --> 01:47:28,239
we've done a good service to the

2854
01:47:28,239 --> 01:47:30,000
community as this research group when

2855
01:47:30,000 --> 01:47:31,679
we've looked at sort of like the history

2856
01:47:31,679 --> 01:47:32,560
of

2857
01:47:32,560 --> 01:47:34,480
of interaction between the transport

2858
01:47:34,480 --> 01:47:36,080
protocol or the transport layer and the

2859
01:47:36,080 --> 01:47:37,760
rest of the network so so spencer's

2860
01:47:37,760 --> 01:47:40,400
draft uh this this work looks like it's

2861
01:47:40,400 --> 01:47:42,639
very much in the same lines as that so

2862
01:47:42,639 --> 01:47:44,320
so i would love to see this discussion

2863
01:47:44,320 --> 01:47:45,199
um

2864
01:47:45,199 --> 01:47:46,320
uh

2865
01:47:46,320 --> 01:47:49,679
uh continue in paneragy as well um

2866
01:47:49,679 --> 01:47:51,119
so thank you again

2867
01:47:51,119 --> 01:47:53,360
yeah thank you so i think that this or

2868
01:47:53,360 --> 01:47:56,239
work is also related to the uh this

2869
01:47:56,239 --> 01:47:59,920
morning discussion in the edm uh yeah

2870
01:47:59,920 --> 01:48:01,119
that is a

2871
01:48:01,119 --> 01:48:04,000
i'm not sure what that's what what what

2872
01:48:04,000 --> 01:48:06,239
that what stands for but uh electronic

2873
01:48:06,239 --> 01:48:07,520
dance music

2874
01:48:07,520 --> 01:48:08,880
yeah yeah

2875
01:48:08,880 --> 01:48:10,320
so i think that that is

2876
01:48:10,320 --> 01:48:11,679
also related

2877
01:48:11,679 --> 01:48:15,440
right evolutionary under me

2878
01:48:15,440 --> 01:48:17,600
something

2879
01:48:17,600 --> 01:48:19,280
uh evolution deployability and

2880
01:48:19,280 --> 01:48:21,440
maintainability yes

2881
01:48:21,440 --> 01:48:23,760
but the joke is electronic dance music

2882
01:48:23,760 --> 01:48:25,440
so yep

2883
01:48:25,440 --> 01:48:27,040
thank you

2884
01:48:27,040 --> 01:48:28,719
thank you i'm going to continue this

2885
01:48:28,719 --> 01:48:31,840
work so i want to send the email after

2886
01:48:31,840 --> 01:48:33,760
this session so please give your

2887
01:48:33,760 --> 01:48:36,639
feedback uh from this

2888
01:48:36,639 --> 01:48:39,119
research group so that i can work on the

2889
01:48:39,119 --> 01:48:42,239
uh this work more more harder

2890
01:48:42,239 --> 01:48:45,280
and i want to discuss

2891
01:48:45,280 --> 01:48:48,320
these kind of things

2892
01:48:48,320 --> 01:48:50,639
among the or this research group and

2893
01:48:50,639 --> 01:48:53,280
among the itf community i think so

2894
01:48:53,280 --> 01:48:54,239
please

2895
01:48:54,239 --> 01:48:56,159
give your feedback

2896
01:48:56,159 --> 01:48:58,960
i want i want that

2897
01:48:58,960 --> 01:49:00,239
we still have a little bit of time does

2898
01:49:00,239 --> 01:49:02,400
anyone else anyone else in the room or

2899
01:49:02,400 --> 01:49:04,639
or in medeco want to come up and and

2900
01:49:04,639 --> 01:49:08,159
give some feedback not on the list

2901
01:49:09,840 --> 01:49:11,600
going once going twice cool we'll take

2902
01:49:11,600 --> 01:49:13,199
it to the list thanks again thank you

2903
01:49:13,199 --> 01:49:15,599
very much thank you okay thank you

2904
01:49:15,599 --> 01:49:18,320
everyone thanks for taking notes

2905
01:49:18,320 --> 01:49:19,840
appreciate it

2906
01:49:19,840 --> 01:49:22,880
okay so it looks like we have some

2907
01:49:22,880 --> 01:49:25,520
action items and some reading to do it

2908
01:49:25,520 --> 01:49:26,840
so see

2909
01:49:26,840 --> 01:49:30,480
you london or actually on the sign

2910
01:49:30,480 --> 01:49:34,879
interim sometime in october

2911
01:49:34,960 --> 01:49:39,800
and we can get like 11 minutes back

2912
01:50:14,239 --> 01:50:17,239
uh

2913
01:50:27,920 --> 01:50:30,000
you

