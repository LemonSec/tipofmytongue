1
00:00:05,580 --> 00:00:07,700
thank you

2
00:00:11,340 --> 00:00:12,660
[Music]

3
00:00:12,660 --> 00:00:15,660
hello

4
00:00:19,680 --> 00:00:23,400
so this is a chingu and the CDP sign is

5
00:00:23,400 --> 00:00:27,000
Mohammed we are outer co-chair and so

6
00:00:27,000 --> 00:00:30,119
this is also Auto working with setting

7
00:00:30,119 --> 00:00:32,219
welcome to Philadelphia

8
00:00:32,219 --> 00:00:35,960
and for people in a room actually if you

9
00:00:35,960 --> 00:00:38,879
don't speak actually please keep your

10
00:00:38,879 --> 00:00:42,960
mask and if you uh you make a comments

11
00:00:42,960 --> 00:00:44,879
and make a presentation you can take a

12
00:00:44,879 --> 00:00:47,239
mask off

13
00:00:49,800 --> 00:00:51,120
not aware

14
00:00:51,120 --> 00:00:53,399
probably you already know this if you're

15
00:00:53,399 --> 00:00:55,559
not familiar please contact with Coach

16
00:00:55,559 --> 00:01:01,160
our connected with the chair and our ad

17
00:01:04,559 --> 00:01:09,299
F conduct guidelines and please focus on

18
00:01:09,299 --> 00:01:12,000
techno discussion with show your respect

19
00:01:12,000 --> 00:01:14,960
to your colleaguers

20
00:01:16,080 --> 00:01:18,960
IPR disk career if you have any IPR

21
00:01:18,960 --> 00:01:23,179
please follow ITF goals

22
00:01:24,540 --> 00:01:27,540
at a minute trivia so note that this

23
00:01:27,540 --> 00:01:29,880
session will be recorded and we will use

24
00:01:29,880 --> 00:01:33,479
midi Echo for queue control if you are

25
00:01:33,479 --> 00:01:36,299
remote participant please join the queue

26
00:01:36,299 --> 00:01:37,939
by Race

27
00:01:37,939 --> 00:01:42,299
by press wrist and abandon and

28
00:01:42,299 --> 00:01:46,740
leave the queue by a double click

29
00:01:46,740 --> 00:01:48,720
and uh

30
00:01:48,720 --> 00:01:50,520
when you make a comment please speak

31
00:01:50,520 --> 00:01:51,659
your name

32
00:01:51,659 --> 00:01:53,280
and

33
00:01:53,280 --> 00:01:55,439
for Blue Shield we have electrical blue

34
00:01:55,439 --> 00:01:57,659
sheet and it will automatically

35
00:01:57,659 --> 00:01:59,880
record your attendance

36
00:01:59,880 --> 00:02:01,439
and

37
00:02:01,439 --> 00:02:03,259
and for chapter

38
00:02:03,259 --> 00:02:08,399
and Note Taker and we already have Jody

39
00:02:08,399 --> 00:02:11,459
and Richard to volunteer yeah so thanks

40
00:02:11,459 --> 00:02:15,360
for your taking notes

41
00:02:15,360 --> 00:02:18,840
and so the slides we already uploaded

42
00:02:18,840 --> 00:02:23,000
this take a look at that

43
00:02:24,180 --> 00:02:26,940
so working remotely so just remind

44
00:02:26,940 --> 00:02:30,120
actually all our discussion actually you

45
00:02:30,120 --> 00:02:31,620
know most work has been done on

46
00:02:31,620 --> 00:02:33,720
amenities please make a good user

47
00:02:33,720 --> 00:02:35,120
maniness

48
00:02:35,120 --> 00:02:37,379
we also can schedule some interview

49
00:02:37,379 --> 00:02:40,140
meeting if needed and we we actually

50
00:02:40,140 --> 00:02:44,400
have Auto working in meeting and uh you

51
00:02:44,400 --> 00:02:50,000
you use ITI working group WebEx resource

52
00:02:51,840 --> 00:02:55,319
so this is our meeting agenda we propose

53
00:02:55,319 --> 00:02:57,560
for today's discussion the first is

54
00:02:57,560 --> 00:02:59,760
session introduction and working group

55
00:02:59,760 --> 00:03:01,140
status update

56
00:03:01,140 --> 00:03:03,480
and uh and then we are focused on

57
00:03:03,480 --> 00:03:06,900
Charter item we have two uh important

58
00:03:06,900 --> 00:03:08,940
China items the first one is all the OM

59
00:03:08,940 --> 00:03:10,140
support

60
00:03:10,140 --> 00:03:12,239
and the second is auto over new

61
00:03:12,239 --> 00:03:18,060
transport for Auto uh om supporter will

62
00:03:18,060 --> 00:03:20,340
focus on the status update and resolve

63
00:03:20,340 --> 00:03:21,780
the pending issue

64
00:03:21,780 --> 00:03:25,920
and we receive a lot of comments before

65
00:03:25,920 --> 00:03:28,200
this meeting actually hopefully we can

66
00:03:28,200 --> 00:03:29,819
have good discussion on this topic

67
00:03:29,819 --> 00:03:33,299
second Auto over new transport we

68
00:03:33,299 --> 00:03:35,400
actually as a chair we request the

69
00:03:35,400 --> 00:03:39,299
review from our other area and we got a

70
00:03:39,299 --> 00:03:43,400
lot of quite good quality comments so

71
00:03:43,400 --> 00:03:46,680
we will you know take more iteration we

72
00:03:46,680 --> 00:03:49,680
hope Also may pay more attention to this

73
00:03:49,680 --> 00:03:52,739
Auto new transport actually engage with

74
00:03:52,739 --> 00:03:54,260
the

75
00:03:54,260 --> 00:03:57,959
expert from the art area and to get this

76
00:03:57,959 --> 00:04:00,000
worker because our Mindstorm actually

77
00:04:00,000 --> 00:04:02,580
just remind actually is said on

78
00:04:02,580 --> 00:04:05,040
September

79
00:04:05,040 --> 00:04:07,799
uh we also will discuss the department

80
00:04:07,799 --> 00:04:11,220
experience of data actually uh

81
00:04:11,220 --> 00:04:14,879
we actually continued our hexon this is

82
00:04:14,879 --> 00:04:17,820
our second hackson made by Jody and also

83
00:04:17,820 --> 00:04:20,779
we have some other people like

84
00:04:20,779 --> 00:04:24,120
and and also Louis actually gave some

85
00:04:24,120 --> 00:04:26,759
update for what they are doing and so

86
00:04:26,759 --> 00:04:29,460
we'll have joined the presentation for

87
00:04:29,460 --> 00:04:33,120
this deployment experience update

88
00:04:33,120 --> 00:04:36,479
if we have time we will you know discuss

89
00:04:36,479 --> 00:04:39,720
no chatter item uh both Works actually

90
00:04:39,720 --> 00:04:42,900
relate to the computer aware networking

91
00:04:42,900 --> 00:04:46,139
and the the first one is considered Auto

92
00:04:46,139 --> 00:04:48,180
as the network exposure function

93
00:04:48,180 --> 00:04:50,400
actually we have three relevant chapter

94
00:04:50,400 --> 00:04:53,100
the first two actually are existing jump

95
00:04:53,100 --> 00:04:54,840
the chance to get updated before the

96
00:04:54,840 --> 00:04:55,560
meeting

97
00:04:55,560 --> 00:04:59,040
the last chapter uh discuss Auto Service

98
00:04:59,040 --> 00:05:02,160
function this is the new chapter so Luis

99
00:05:02,160 --> 00:05:04,979
will give the update for the kernel

100
00:05:04,979 --> 00:05:05,940
status

101
00:05:05,940 --> 00:05:10,160
in addition we have another draft

102
00:05:10,160 --> 00:05:12,660
architecture of computing Hardware

103
00:05:12,660 --> 00:05:15,479
Optical networker and also this chapter

104
00:05:15,479 --> 00:05:19,259
related to the Lewis worker maybe we can

105
00:05:19,259 --> 00:05:23,360
have someone discussion on this so since

106
00:05:23,360 --> 00:05:26,520
we represent this topic

107
00:05:26,520 --> 00:05:33,020
and uh so any agenda bash for this

108
00:05:34,740 --> 00:05:37,740
I see now so we move

109
00:05:37,740 --> 00:05:38,900
forward

110
00:05:38,900 --> 00:05:44,220
so uh document update actually uh

111
00:05:44,220 --> 00:05:48,120
so first a new app say and we since last

112
00:05:48,120 --> 00:05:51,180
it meeting actually we make a lot of

113
00:05:51,180 --> 00:05:53,039
progress actually we have three

114
00:05:53,039 --> 00:05:55,620
obviously get it delivered the first two

115
00:05:55,620 --> 00:05:58,500
actually are existing working group

116
00:05:58,500 --> 00:06:02,220
documents and unified property and a CDI

117
00:06:02,220 --> 00:06:03,800
requested routing

118
00:06:03,800 --> 00:06:07,199
the last one actually the RC will coming

119
00:06:07,199 --> 00:06:13,080
and which is uh just before this before

120
00:06:13,080 --> 00:06:15,180
last 19 meeting is still individually

121
00:06:15,180 --> 00:06:18,319
but after uh

122
00:06:18,319 --> 00:06:21,180
after last itm meeting actually we can

123
00:06:21,180 --> 00:06:24,000
make a huge progress actually we already

124
00:06:24,000 --> 00:06:26,639
move this individual chapter to working

125
00:06:26,639 --> 00:06:29,039
good jobs and also now move to the rcq

126
00:06:29,039 --> 00:06:31,860
and get published so this shows 3D

127
00:06:31,860 --> 00:06:35,699
progress on this work and uh second

128
00:06:35,699 --> 00:06:37,919
actually after edited we still have two

129
00:06:37,919 --> 00:06:40,560
uh working groups after actually waiting

130
00:06:40,560 --> 00:06:43,860
for be delivered actually I hope the

131
00:06:43,860 --> 00:06:45,960
author can you know engage with outside

132
00:06:45,960 --> 00:06:49,620
Editor to address editorial comments and

133
00:06:49,620 --> 00:06:51,840
move these two worker forward

134
00:06:51,840 --> 00:06:54,300
and working Google draft and since not

135
00:06:54,300 --> 00:06:58,759
the IEP meeting we adopted two draft and

136
00:06:58,759 --> 00:07:02,520
om and a new transport so this will be

137
00:07:02,520 --> 00:07:04,979
focused on today's discussion and we

138
00:07:04,979 --> 00:07:07,979
rather actually this has been discussed

139
00:07:07,979 --> 00:07:09,539
in last night meeting already get it

140
00:07:09,539 --> 00:07:11,780
verified

141
00:07:14,220 --> 00:07:16,620
so this is the current Milestone status

142
00:07:16,620 --> 00:07:17,840
update

143
00:07:17,840 --> 00:07:22,199
uh you can see actually we uh already

144
00:07:22,199 --> 00:07:25,139
delivered the one of our Milestone

145
00:07:25,139 --> 00:07:28,259
coaster mode to for public application

146
00:07:28,259 --> 00:07:31,800
so we get this Milestone conclude and we

147
00:07:31,800 --> 00:07:34,380
still have three uh you know ongoing

148
00:07:34,380 --> 00:07:37,560
Milestone actually so please bear in

149
00:07:37,560 --> 00:07:39,780
mind in the the time frame for this

150
00:07:39,780 --> 00:07:41,580
issue work especially pay more attention

151
00:07:41,580 --> 00:07:44,099
to the auto new chance for this we need

152
00:07:44,099 --> 00:07:46,319
to engage more with experts from the

153
00:07:46,319 --> 00:07:48,900
other area

154
00:07:48,900 --> 00:07:50,410
okay

155
00:07:50,410 --> 00:07:50,940
[Music]

156
00:07:50,940 --> 00:07:52,940
um

157
00:07:54,240 --> 00:07:59,780
gems uh gems you can speak

158
00:08:04,740 --> 00:08:10,220
we have gems in the queue can you speak

159
00:08:17,220 --> 00:08:18,479
no

160
00:08:18,479 --> 00:08:20,360
okay

161
00:08:20,360 --> 00:08:24,560
yeah that's a continue

162
00:08:25,440 --> 00:08:28,440
uh for external review actually just we

163
00:08:28,440 --> 00:08:30,120
mentioned actually we already received

164
00:08:30,120 --> 00:08:33,719
our early review and get some comments

165
00:08:33,719 --> 00:08:37,320
from hdb working group like Mike and so

166
00:08:37,320 --> 00:08:40,860
thanks to uh Mike and Martin and also

167
00:08:40,860 --> 00:08:43,679
Spence actually give a very valuable

168
00:08:43,679 --> 00:08:46,320
review so please focus on this external

169
00:08:46,320 --> 00:08:49,500
review and

170
00:08:52,920 --> 00:08:55,100
so I also want to mention actually

171
00:08:55,100 --> 00:08:59,060
we have Auto working meeting to discuss

172
00:08:59,060 --> 00:09:01,200
cellular information exposure actually

173
00:09:01,200 --> 00:09:03,420
two relevant workers why his movie the

174
00:09:03,420 --> 00:09:07,080
second is the pbecc and not only uh

175
00:09:07,080 --> 00:09:09,060
testing people are interested in this

176
00:09:09,060 --> 00:09:10,560
kind of topic we also see actually

177
00:09:10,560 --> 00:09:13,980
Alibaba and Princeton uh actually they

178
00:09:13,980 --> 00:09:17,160
published a lot of relevant paper and so

179
00:09:17,160 --> 00:09:20,779
we schedule meeting to discuss with this

180
00:09:20,779 --> 00:09:23,100
experts and research actually for

181
00:09:23,100 --> 00:09:26,120
example uh

182
00:09:29,000 --> 00:09:32,720
actually also Professor Jennifer and to

183
00:09:32,720 --> 00:09:37,320
uh energy also developed some of uh open

184
00:09:37,320 --> 00:09:39,500
source tools so these are very helpful

185
00:09:39,500 --> 00:09:41,700
to you know

186
00:09:41,700 --> 00:09:42,420
um

187
00:09:42,420 --> 00:09:44,220
adjust some of issue in cellular

188
00:09:44,220 --> 00:09:45,779
information exposure

189
00:09:45,779 --> 00:09:47,459
and also

190
00:09:47,459 --> 00:09:48,019
um

191
00:09:48,019 --> 00:09:51,120
actually also share some experience on

192
00:09:51,120 --> 00:09:54,300
cellular information aggregation and so

193
00:09:54,300 --> 00:09:56,220
the before this meeting they actually

194
00:09:56,220 --> 00:09:59,240
post a new version and

195
00:09:59,240 --> 00:10:02,940
and adjust some comments

196
00:10:02,940 --> 00:10:05,220
based on some discussion in the interim

197
00:10:05,220 --> 00:10:06,899
weekly meeting

198
00:10:06,899 --> 00:10:09,660
and also monthly from Tess from Alibaba

199
00:10:09,660 --> 00:10:11,760
actually share his paper this paper

200
00:10:11,760 --> 00:10:13,920
already get adopted by its sitcom and

201
00:10:13,920 --> 00:10:16,519
which is focused on inter AP solution

202
00:10:16,519 --> 00:10:21,480
and so we actually agree actually we

203
00:10:21,480 --> 00:10:23,160
should you know for the next step which

204
00:10:23,160 --> 00:10:24,600
will come up with the framework to

205
00:10:24,600 --> 00:10:27,180
investigate water setting information to

206
00:10:27,180 --> 00:10:28,980
connect how to transport connect

207
00:10:28,980 --> 00:10:31,260
information to the application how to

208
00:10:31,260 --> 00:10:34,320
react to that information hopefully we

209
00:10:34,320 --> 00:10:35,940
can more make more progress after this

210
00:10:35,940 --> 00:10:39,440
meeting on this topic

211
00:10:39,779 --> 00:10:42,660
last one actually we do actually do a

212
00:10:42,660 --> 00:10:45,120
lot of effort to sort of socialize the

213
00:10:45,120 --> 00:10:46,760
author actually

214
00:10:46,760 --> 00:10:50,160
in this meeting and Luis will you know

215
00:10:50,160 --> 00:10:53,399
give a presentation in many office to

216
00:10:53,399 --> 00:10:56,220
introduce their Syrian practice

217
00:10:56,220 --> 00:10:58,800
integration with Auto and also actually

218
00:10:58,800 --> 00:11:03,480
I will discuss the auto introduction in

219
00:11:03,480 --> 00:11:06,420
obst working group and we already get a

220
00:11:06,420 --> 00:11:09,060
time slot on this and in addition

221
00:11:09,060 --> 00:11:12,779
actually we share and work with auto

222
00:11:12,779 --> 00:11:15,600
design team member problems actually to

223
00:11:15,600 --> 00:11:18,360
work on some paper which targeted iepf

224
00:11:18,360 --> 00:11:21,839
book and IP Journal and we will you know

225
00:11:21,839 --> 00:11:23,579
keep on to cooking this idea to

226
00:11:23,579 --> 00:11:26,399
hopefully we can make more progress

227
00:11:26,399 --> 00:11:29,100
so that's it

228
00:11:29,100 --> 00:11:32,339
and uh I think we can go to the poster

229
00:11:32,339 --> 00:11:35,060
presenter

230
00:11:35,519 --> 00:11:38,420
uh

231
00:11:40,380 --> 00:11:44,120
yes Auto om yeah

232
00:11:47,660 --> 00:11:51,139
so Jason is not here and we will ask

233
00:11:51,139 --> 00:11:53,399
Maddie actually to give a presentation

234
00:11:53,399 --> 00:11:55,019
so

235
00:11:55,019 --> 00:11:59,480
maybe come to the mic

236
00:12:10,139 --> 00:12:13,680
hello everybody I'm Matty I'm here on

237
00:12:13,680 --> 00:12:17,880
behalf of the authors of onm module for

238
00:12:17,880 --> 00:12:20,579
also uh they shouldn't be here they

239
00:12:20,579 --> 00:12:22,920
couldn't be here uh in person so I'm

240
00:12:22,920 --> 00:12:24,720
doing the presentation on behalf of them

241
00:12:24,720 --> 00:12:26,940
but the discussion will be guided by

242
00:12:26,940 --> 00:12:30,480
Jensen uh which is in the uh virtual

243
00:12:30,480 --> 00:12:34,620
room and the the reason that I'm

244
00:12:34,620 --> 00:12:36,720
actually focusing on this point because

245
00:12:36,720 --> 00:12:41,339
it's it's the this uh presentation is uh

246
00:12:41,339 --> 00:12:44,519
intended to be to start a large part of

247
00:12:44,519 --> 00:12:47,639
discussions on onm uh because uh we

248
00:12:47,639 --> 00:12:52,820
intend to uh decrease uh increase the

249
00:12:52,820 --> 00:12:55,980
range of the range that it actually

250
00:12:55,980 --> 00:12:59,040
covers in uh into different in different

251
00:12:59,040 --> 00:13:00,860
parts that they will talk about

252
00:13:00,860 --> 00:13:04,620
uh so oi name stands for operation

253
00:13:04,620 --> 00:13:07,579
administs

254
00:13:09,480 --> 00:13:11,220
well I name stands for operation

255
00:13:11,220 --> 00:13:12,899
Administration maintenance and

256
00:13:12,899 --> 00:13:16,079
management of also protocol uh so in

257
00:13:16,079 --> 00:13:18,660
this slide you can see the latest link

258
00:13:18,660 --> 00:13:20,639
to the latest version in data tracker

259
00:13:20,639 --> 00:13:23,700
and also in GitHub uh which is good

260
00:13:23,700 --> 00:13:25,800
because a lot of discussions are going

261
00:13:25,800 --> 00:13:27,740
on uh in in

262
00:13:27,740 --> 00:13:33,180
iitfwgi uh uh also WG GitHub and also

263
00:13:33,180 --> 00:13:36,660
the definition of yank module

264
00:13:36,660 --> 00:13:37,820
yeah

265
00:13:37,820 --> 00:13:41,699
uh so after it 113 the group has

266
00:13:41,699 --> 00:13:44,279
received uh many reviews and addressed a

267
00:13:44,279 --> 00:13:46,680
lot of them uh so we have received five

268
00:13:46,680 --> 00:13:48,839
reviews from working in working group

269
00:13:48,839 --> 00:13:50,940
mailing list and we have an ongoing

270
00:13:50,940 --> 00:13:53,220
discussion with uh net mode working

271
00:13:53,220 --> 00:13:55,740
group and also we had five discussions

272
00:13:55,740 --> 00:13:58,199
on GitHub and we achieved two milestones

273
00:13:58,199 --> 00:14:00,779
for rnm and this the first one is a

274
00:14:00,779 --> 00:14:03,779
document adaptation and uh the second

275
00:14:03,779 --> 00:14:07,139
one is that in hackathon of 114 uh we

276
00:14:07,139 --> 00:14:09,660
have implemented the concepts that are

277
00:14:09,660 --> 00:14:14,880
parts of onm uh for also which are given

278
00:14:14,880 --> 00:14:18,199
in the GitHub link

279
00:14:18,540 --> 00:14:21,480
okay so in this slide you can see a data

280
00:14:21,480 --> 00:14:23,760
model overview of the gang modules that

281
00:14:23,760 --> 00:14:26,699
we have uh included in the draft and

282
00:14:26,699 --> 00:14:28,740
also in the Implement implementation so

283
00:14:28,740 --> 00:14:31,139
we have the server management uh

284
00:14:31,139 --> 00:14:33,180
information resource manager performance

285
00:14:33,180 --> 00:14:35,579
Monitor and logging and fault manager

286
00:14:35,579 --> 00:14:39,060
and we have also data sources inside yet

287
00:14:39,060 --> 00:14:41,639
uh we have color code that uh the parts

288
00:14:41,639 --> 00:14:44,399
that are outside the scope of 1M but

289
00:14:44,399 --> 00:14:46,620
inside the scope of Auto and also the

290
00:14:46,620 --> 00:14:48,899
parts that are even outside the school

291
00:14:48,899 --> 00:14:50,940
of also which is like the data sources

292
00:14:50,940 --> 00:14:53,420
that are interacting with Source board

293
00:14:53,420 --> 00:14:55,740
sourcebond apis with data source

294
00:14:55,740 --> 00:15:00,199
listeners uh so

295
00:15:01,440 --> 00:15:04,620
uh so in uh this presentation uh we

296
00:15:04,620 --> 00:15:07,199
mainly want to all discuss six main

297
00:15:07,199 --> 00:15:09,540
questions and ask our comments about

298
00:15:09,540 --> 00:15:13,440
them and to further uh improve one and

299
00:15:13,440 --> 00:15:16,500
for the next ITF meeting so the first

300
00:15:16,500 --> 00:15:18,540
three one I have raised within the

301
00:15:18,540 --> 00:15:20,940
working group mailing list uh question

302
00:15:20,940 --> 00:15:23,279
four and five have been discussed

303
00:15:23,279 --> 00:15:26,459
internally in uh Auto working group and

304
00:15:26,459 --> 00:15:28,980
the last question uh is not have been

305
00:15:28,980 --> 00:15:30,720
discussed yet was it but it is an

306
00:15:30,720 --> 00:15:32,519
important question that Jensen himself

307
00:15:32,519 --> 00:15:35,399
will talk about and we will divide a

308
00:15:35,399 --> 00:15:38,040
large portion of this meeting to decide

309
00:15:38,040 --> 00:15:42,199
over that uh certainly

310
00:15:42,420 --> 00:15:46,079
uh so the first question is how to uh

311
00:15:46,079 --> 00:15:49,620
deploy data types in Auto related uh Ina

312
00:15:49,620 --> 00:15:52,320
Registries and we have two proposed

313
00:15:52,320 --> 00:15:54,839
model for that each with uh its own pros

314
00:15:54,839 --> 00:15:55,860
and cons

315
00:15:55,860 --> 00:15:58,399
the first one is to Define enumeration

316
00:15:58,399 --> 00:16:02,339
uh in Ina also types and it has a pro

317
00:16:02,339 --> 00:16:04,139
because it's guarantee consistency

318
00:16:04,139 --> 00:16:07,800
between uh different types but it it has

319
00:16:07,800 --> 00:16:11,820
a con uh as a major consideration for us

320
00:16:11,820 --> 00:16:16,620
and uh because it's hard to extend to uh

321
00:16:16,620 --> 00:16:19,860
new data types for experimental drafts

322
00:16:19,860 --> 00:16:22,860
and also it requires I need to have

323
00:16:22,860 --> 00:16:25,139
younger skulls to be uh to interpret

324
00:16:25,139 --> 00:16:28,980
these data types so

325
00:16:29,120 --> 00:16:32,699
uh the second uh proposition is to use

326
00:16:32,699 --> 00:16:36,300
identities in ITF also Yang module and

327
00:16:36,300 --> 00:16:38,579
it has a pro because it's easily

328
00:16:38,579 --> 00:16:42,300
sensible to a new extendable to new data

329
00:16:42,300 --> 00:16:45,180
types but the con is uh it has it lacks

330
00:16:45,180 --> 00:16:48,180
the control uh for consistency and may

331
00:16:48,180 --> 00:16:50,839
results in uh challenging

332
00:16:50,839 --> 00:16:55,560
interoperability between uh variables uh

333
00:16:55,560 --> 00:16:58,680
so we are considering which one uh

334
00:16:58,680 --> 00:17:02,040
should we go go on with uh between these

335
00:17:02,040 --> 00:17:03,959
two the first one uh was to use

336
00:17:03,959 --> 00:17:06,119
enumeration and second one is to use

337
00:17:06,119 --> 00:17:09,419
identities in uh the image

338
00:17:09,419 --> 00:17:13,859
the second question uh is uh um the

339
00:17:13,859 --> 00:17:16,319
server the server level management by

340
00:17:16,319 --> 00:17:19,679
inspired by rescamp uh we added uh

341
00:17:19,679 --> 00:17:21,419
several lists and accomplished servant

342
00:17:21,419 --> 00:17:24,359
listed uh listen stack uh which is

343
00:17:24,359 --> 00:17:28,199
configurable in the data Yang module uh

344
00:17:28,199 --> 00:17:30,900
but the the remaining question here is

345
00:17:30,900 --> 00:17:32,820
that uh whether we should include

346
00:17:32,820 --> 00:17:35,100
configuration parameters of lower level

347
00:17:35,100 --> 00:17:37,980
underlying protocols in that two or not

348
00:17:37,980 --> 00:17:40,799
for example a lower level HTTP

349
00:17:40,799 --> 00:17:43,140
configurations like uh cache control or

350
00:17:43,140 --> 00:17:46,320
retry after Etc uh so that's the main

351
00:17:46,320 --> 00:17:49,320
question uh for this uh second subject

352
00:17:49,320 --> 00:17:51,720
server level management whether or not

353
00:17:51,720 --> 00:17:56,539
to include a lower level configurations

354
00:17:58,700 --> 00:18:01,679
uh the third question that we try to

355
00:18:01,679 --> 00:18:03,299
answer is logging and fault management

356
00:18:03,299 --> 00:18:06,840
So currently in Yang module uh we have

357
00:18:06,840 --> 00:18:09,000
defined uh success failure cons for

358
00:18:09,000 --> 00:18:11,520
requests and responses uh but the

359
00:18:11,520 --> 00:18:15,900
reviewers have proposed uh three more uh

360
00:18:15,900 --> 00:18:20,220
lagging criteria that we will add uh in

361
00:18:20,220 --> 00:18:23,280
the uh in the revision of the draft uh

362
00:18:23,280 --> 00:18:25,260
the second one is Success failure

363
00:18:25,260 --> 00:18:27,419
records for the configuration updates

364
00:18:27,419 --> 00:18:32,400
themselves uh the second one is uh

365
00:18:32,400 --> 00:18:35,460
records for which configuration types is

366
00:18:35,460 --> 00:18:38,760
the dying module uh of supporting and we

367
00:18:38,760 --> 00:18:40,919
were wondering if kanyang module uh

368
00:18:40,919 --> 00:18:43,260
model provide this parameter itself or

369
00:18:43,260 --> 00:18:44,120
not

370
00:18:44,120 --> 00:18:45,660
and

371
00:18:45,660 --> 00:18:47,520
um this the last one is the census

372
00:18:47,520 --> 00:18:49,620
update of the connections to data

373
00:18:49,620 --> 00:18:52,380
sources that also server is supporting

374
00:18:52,380 --> 00:18:56,280
and we're looking forward to getting to

375
00:18:56,280 --> 00:18:58,860
get more Stacks uh more suggested useful

376
00:18:58,860 --> 00:19:01,080
metrics in the comments discussions or

377
00:19:01,080 --> 00:19:03,840
in the experience and of real in the

378
00:19:03,840 --> 00:19:05,640
experiments experiments of real

379
00:19:05,640 --> 00:19:08,360
deployments

380
00:19:10,980 --> 00:19:14,820
uh the question for uh is that so far we

381
00:19:14,820 --> 00:19:18,120
only have worked for server-side onm uh

382
00:19:18,120 --> 00:19:21,600
but the client side also needs and a

383
00:19:21,600 --> 00:19:23,460
module to be comfortable configurable

384
00:19:23,460 --> 00:19:26,400
for example in these two domain uh the

385
00:19:26,400 --> 00:19:30,120
first one is that uh how to uh how to

386
00:19:30,120 --> 00:19:32,340
configure uh

387
00:19:32,340 --> 00:19:34,980
uh the way that it also client is

388
00:19:34,980 --> 00:19:37,740
accessing auto services for example the

389
00:19:37,740 --> 00:19:40,559
URI uh their resource IDs and the

390
00:19:40,559 --> 00:19:42,600
parameters that of the alto client

391
00:19:42,600 --> 00:19:45,600
should use to be able to query out a

392
00:19:45,600 --> 00:19:50,940
server and uh the second one is uh data

393
00:19:50,940 --> 00:19:52,679
model for transport mechanism control

394
00:19:52,679 --> 00:19:54,320
with that

395
00:19:54,320 --> 00:19:58,020
to which we will uh come back later but

396
00:19:58,020 --> 00:20:01,320
there are the three main uh ways data

397
00:20:01,320 --> 00:20:03,780
polling uh pops up or on-demand query

398
00:20:03,780 --> 00:20:05,960
which are very different from each other

399
00:20:05,960 --> 00:20:09,600
and uh so for this one the main question

400
00:20:09,600 --> 00:20:13,380
that we want to ask comments for uh is

401
00:20:13,380 --> 00:20:15,600
that whether we should add a new top

402
00:20:15,600 --> 00:20:19,200
level container for also a client uh or

403
00:20:19,200 --> 00:20:23,159
list or add a or whether to add a new

404
00:20:23,159 --> 00:20:25,740
data source type for auto server and

405
00:20:25,740 --> 00:20:28,260
consider also client as an also data

406
00:20:28,260 --> 00:20:31,559
source listener uh so is there very

407
00:20:31,559 --> 00:20:32,640
different

408
00:20:32,640 --> 00:20:36,659
and oh we just wanted to ask comments

409
00:20:36,659 --> 00:20:38,760
like if anybody in the queue has a

410
00:20:38,760 --> 00:20:40,919
suggestion or in the room we'll be happy

411
00:20:40,919 --> 00:20:44,179
to discuss in this session

412
00:20:47,640 --> 00:20:52,380
okay uh uh the uh the uh the next major

413
00:20:52,380 --> 00:20:54,720
question that we want to answer is a

414
00:20:54,720 --> 00:20:57,419
server to server communication so we

415
00:20:57,419 --> 00:20:59,400
have introduced multi-dominant settings

416
00:20:59,400 --> 00:21:02,039
for Auto in two major drafts the first

417
00:21:02,039 --> 00:21:04,679
one is for use cases and the second bar

418
00:21:04,679 --> 00:21:07,919
for uh second one is for analytics uh

419
00:21:07,919 --> 00:21:09,960
the link of these two drafts are given

420
00:21:09,960 --> 00:21:13,440
this slide that you can refer to uh but

421
00:21:13,440 --> 00:21:17,340
we have face uh in in the in um in the

422
00:21:17,340 --> 00:21:19,980
work for uh through the work for this uh

423
00:21:19,980 --> 00:21:22,740
ITF meeting we have phase two main uh

424
00:21:22,740 --> 00:21:25,500
question uh the first one is that auto

425
00:21:25,500 --> 00:21:27,840
server needs sometimes need to be a data

426
00:21:27,840 --> 00:21:29,640
source for another Auto server to

427
00:21:29,640 --> 00:21:32,520
provide it for uh Network information so

428
00:21:32,520 --> 00:21:34,500
we have two design options here the

429
00:21:34,500 --> 00:21:37,200
first one is to collect data uh using

430
00:21:37,200 --> 00:21:40,679
Auto directly for in which an auto

431
00:21:40,679 --> 00:21:42,659
server can act like autoclient for

432
00:21:42,659 --> 00:21:45,900
another Auto server uh and that may need

433
00:21:45,900 --> 00:21:48,299
extensions to also and the second design

434
00:21:48,299 --> 00:21:51,240
option is to use other software Source

435
00:21:51,240 --> 00:21:53,400
spawn protocols to expose databases of

436
00:21:53,400 --> 00:21:56,460
Auto servers between uh multiple Auto

437
00:21:56,460 --> 00:21:58,620
servers and for which we have no

438
00:21:58,620 --> 00:22:02,700
standards so far and need to decide for

439
00:22:02,700 --> 00:22:04,500
that to better be a standard or not a

440
00:22:04,500 --> 00:22:07,260
standard or not and the second main

441
00:22:07,260 --> 00:22:09,840
question here in server to several

442
00:22:09,840 --> 00:22:11,520
multi-dom incoming Communications

443
00:22:11,520 --> 00:22:14,159
between Auto server is cross custom in

444
00:22:14,159 --> 00:22:16,620
past discovery which is a question that

445
00:22:16,620 --> 00:22:20,100
we have reached to uh in the hackathon

446
00:22:20,100 --> 00:22:22,080
and in the deployment so it's a real

447
00:22:22,080 --> 00:22:25,620
question and uh is that not no no none

448
00:22:25,620 --> 00:22:27,240
of the existing Auto Services can

449
00:22:27,240 --> 00:22:29,340
provide information for across domain

450
00:22:29,340 --> 00:22:32,520
pass Discovery and we actually require

451
00:22:32,520 --> 00:22:35,220
some mechanisms to look up to increase

452
00:22:35,220 --> 00:22:38,340
and increase sport of interdominals and

453
00:22:38,340 --> 00:22:40,679
in different administrative damage to

454
00:22:40,679 --> 00:22:43,880
track back the roads between multiple uh

455
00:22:43,880 --> 00:22:46,200
administrative domains so these are the

456
00:22:46,200 --> 00:22:48,539
two questions that we see can seek

457
00:22:48,539 --> 00:22:49,860
answers for

458
00:22:49,860 --> 00:22:52,879
can you go through

459
00:22:54,419 --> 00:22:55,679
uh

460
00:22:55,679 --> 00:22:57,900
uh the question uh the last question

461
00:22:57,900 --> 00:23:00,059
that we are cons that we're seeking

462
00:23:00,059 --> 00:23:03,059
answer to Is like uh the one that we

463
00:23:03,059 --> 00:23:05,580
have not uh we don't have an answer for

464
00:23:05,580 --> 00:23:08,580
yet and we want to ask for like most of

465
00:23:08,580 --> 00:23:12,000
the comments on this part uh so is like

466
00:23:12,000 --> 00:23:14,400
how to unify the the different data

467
00:23:14,400 --> 00:23:17,659
sources uh in Yang data model and

468
00:23:17,659 --> 00:23:20,280
configuration so we we need a different

469
00:23:20,280 --> 00:23:24,780
data uh models for different uh means

470
00:23:24,780 --> 00:23:27,179
actually the first one is for example

471
00:23:27,179 --> 00:23:29,460
for Source One protocol stack parameters

472
00:23:29,460 --> 00:23:32,220
like URLs or protocol versioning or

473
00:23:32,220 --> 00:23:34,200
authentication settings that that I

474
00:23:34,200 --> 00:23:36,419
previously talked about uh the second

475
00:23:36,419 --> 00:23:38,400
one is to set the query parameters the

476
00:23:38,400 --> 00:23:39,559
query

477
00:23:39,559 --> 00:23:42,480
expressions and the last one which is

478
00:23:42,480 --> 00:23:44,460
like the most conflicting one is the

479
00:23:44,460 --> 00:23:46,860
data collection mechanism parameters uh

480
00:23:46,860 --> 00:23:48,840
when when uh the clients have the

481
00:23:48,840 --> 00:23:51,000
ability to particularly pulling the auto

482
00:23:51,000 --> 00:23:53,640
server or use pop sub mechanisms or on

483
00:23:53,640 --> 00:23:57,659
demand uh querying so for this one uh

484
00:23:57,659 --> 00:23:59,940
Jensen will continue the discussion so

485
00:23:59,940 --> 00:24:02,580
Jensen if you are in the room go ahead

486
00:24:02,580 --> 00:24:04,760
please

487
00:24:07,320 --> 00:24:09,419
you can go ahead

488
00:24:09,419 --> 00:24:11,960
hello

489
00:24:15,059 --> 00:24:19,260
thank Clarity to uh yeah so for this

490
00:24:19,260 --> 00:24:22,919
question actually uh

491
00:24:22,919 --> 00:24:25,679
you're saying in the current document uh

492
00:24:25,679 --> 00:24:28,740
we do introduce these three uh panel

493
00:24:28,740 --> 00:24:31,620
parameters for each data.platformer

494
00:24:31,620 --> 00:24:33,779
configured uh

495
00:24:33,779 --> 00:24:37,440
uh by the current uh

496
00:24:37,440 --> 00:24:40,620
data model in the in the document on a

497
00:24:40,620 --> 00:24:44,100
different two maximum

498
00:24:44,100 --> 00:24:46,919
to track the data why is that it can do

499
00:24:46,919 --> 00:24:49,679
the periodical polling and otherwise the

500
00:24:49,679 --> 00:24:53,340
captcha but in our uh

501
00:24:53,340 --> 00:24:58,919
a current in the real development so so

502
00:24:58,919 --> 00:25:02,640
with some information resource may need

503
00:25:02,640 --> 00:25:05,279
to do the on-demand query for the data

504
00:25:05,279 --> 00:25:07,620
scientists so once the data translation

505
00:25:07,620 --> 00:25:11,700
to uh automatically update the data

506
00:25:11,700 --> 00:25:14,159
broker so the algorithm plugin and they

507
00:25:14,159 --> 00:25:17,360
want to have some direct

508
00:25:17,360 --> 00:25:20,760
upside to the data cell so

509
00:25:20,760 --> 00:25:25,520
uh whether it's supposed to add a new uh

510
00:25:25,520 --> 00:25:28,500
parameter selecting type because they

511
00:25:28,500 --> 00:25:30,059
are demand that means the algorithms

512
00:25:30,059 --> 00:25:33,419
likely don't need to exactly uh

513
00:25:33,419 --> 00:25:35,820
the internal data broker in the

514
00:25:35,820 --> 00:25:39,720
Auto server inside but just to translate

515
00:25:39,720 --> 00:25:43,520
the completioner to the direct query

516
00:25:43,520 --> 00:25:45,720
to the data cell

517
00:25:45,720 --> 00:25:48,900
but this Russian uh

518
00:25:48,900 --> 00:25:52,500
complexity about how to do the night in

519
00:25:52,500 --> 00:25:53,880
between the

520
00:25:53,880 --> 00:25:56,220
uh data programming and data structure

521
00:25:56,220 --> 00:25:58,799
and the the raw data collected from the

522
00:25:58,799 --> 00:26:02,480
the sub distance so this is still open

523
00:26:02,480 --> 00:26:05,760
cutting we want to reset some feedback

524
00:26:05,760 --> 00:26:06,679
from

525
00:26:06,679 --> 00:26:09,980
some other

526
00:26:10,500 --> 00:26:14,159
members may have some uh their own

527
00:26:14,159 --> 00:26:16,799
requirements on the real department for

528
00:26:16,799 --> 00:26:19,140
how to handle this

529
00:26:19,140 --> 00:26:21,380
yes

530
00:26:21,380 --> 00:26:24,440
all right

531
00:26:26,100 --> 00:26:27,600
thank you

532
00:26:27,600 --> 00:26:30,659
so any comments from the people in the

533
00:26:30,659 --> 00:26:33,380
queue or in the room

534
00:26:34,380 --> 00:26:37,080
you can go from

535
00:26:37,080 --> 00:26:41,520
uh so the next steps uh for also oingm

536
00:26:41,520 --> 00:26:44,940
uh would be that uh authors will make

537
00:26:44,940 --> 00:26:47,400
decisions about question one to question

538
00:26:47,400 --> 00:26:50,760
three uh that we discussed about as soon

539
00:26:50,760 --> 00:26:53,580
as possible and we'll submit a new new

540
00:26:53,580 --> 00:26:56,460
version of the NM document

541
00:26:56,460 --> 00:26:58,919
uh

542
00:26:58,919 --> 00:27:03,299
you can call so I think like okay so uh

543
00:27:03,299 --> 00:27:06,059
and also uh we will continue to collect

544
00:27:06,059 --> 00:27:08,039
feedbacks uh for questions four to

545
00:27:08,039 --> 00:27:11,880
question six uh and also we will test uh

546
00:27:11,880 --> 00:27:14,100
the Yang model in real implementation so

547
00:27:14,100 --> 00:27:17,400
to give you like mallow Stones uh the

548
00:27:17,400 --> 00:27:19,679
first one is that we will reach

549
00:27:19,679 --> 00:27:21,720
agreements on question one to question

550
00:27:21,720 --> 00:27:24,240
six and we'll completely revise the

551
00:27:24,240 --> 00:27:27,539
document before next iitf meeting and

552
00:27:27,539 --> 00:27:29,700
the second one is that we want to push

553
00:27:29,700 --> 00:27:33,480
also or a m Yang model uh deployment in

554
00:27:33,480 --> 00:27:35,460
the current deployment of Alto that we

555
00:27:35,460 --> 00:27:39,120
have in Opel also GitHub uh page and

556
00:27:39,120 --> 00:27:43,158
before March 23.

557
00:27:43,200 --> 00:27:45,480
thank you

558
00:27:45,480 --> 00:27:47,880
uh Martin Duke Google uh can you go back

559
00:27:47,880 --> 00:27:52,700
to slide five or question five pardon me

560
00:27:52,919 --> 00:27:55,080
so um

561
00:27:55,080 --> 00:27:57,539
why would you not just use the existing

562
00:27:57,539 --> 00:27:59,159
altar protocol

563
00:27:59,159 --> 00:28:01,320
design like why not do what are the

564
00:28:01,320 --> 00:28:04,020
drawbacks using design option one

565
00:28:04,020 --> 00:28:05,640
oh

566
00:28:05,640 --> 00:28:08,460
so Jensen can you go on like to answer

567
00:28:08,460 --> 00:28:10,940
your description

568
00:28:11,360 --> 00:28:14,220
uh are you online actually we don't have

569
00:28:14,220 --> 00:28:17,159
any uh documents uh

570
00:28:17,159 --> 00:28:22,279
specify how to handle the

571
00:28:30,720 --> 00:28:32,279
um you're fading out there well I mean

572
00:28:32,279 --> 00:28:33,960
so like

573
00:28:33,960 --> 00:28:36,720
logically if you have an auto server and

574
00:28:36,720 --> 00:28:37,980
you want to get the configuration of

575
00:28:37,980 --> 00:28:40,200
that Alpha server you ought to be able

576
00:28:40,200 --> 00:28:41,360
to use Alto

577
00:28:41,360 --> 00:28:43,860
and it has the advantage of not having

578
00:28:43,860 --> 00:28:46,620
like more extensions

579
00:28:46,620 --> 00:28:48,659
um like I I don't see why you would need

580
00:28:48,659 --> 00:28:50,580
an extension to do that necessarily

581
00:28:50,580 --> 00:28:53,460
but um like I would

582
00:28:53,460 --> 00:28:55,500
without looking details like

583
00:28:55,500 --> 00:28:57,120
architecturally that would be way way

584
00:28:57,120 --> 00:28:58,860
cleaner than like doing a whole nother

585
00:28:58,860 --> 00:29:02,159
design in my opinion

586
00:29:02,159 --> 00:29:05,960
thanks okay so

587
00:29:10,080 --> 00:29:12,360
uh yeah yeah I think that's I I think

588
00:29:12,360 --> 00:29:14,340
the comments made by marketing is very

589
00:29:14,340 --> 00:29:16,980
very good uh the only uh small case

590
00:29:16,980 --> 00:29:18,840
which may be the question to Jensen

591
00:29:18,840 --> 00:29:20,880
because you guys uncut you guys did the

592
00:29:20,880 --> 00:29:23,640
hacker sound uh just like a few days ago

593
00:29:23,640 --> 00:29:27,120
and it was multi-domain so therefore

594
00:29:27,120 --> 00:29:31,440
if you do multi uh domain discover using

595
00:29:31,440 --> 00:29:33,659
Auto I think you are missing the egress

596
00:29:33,659 --> 00:29:35,820
point which may I may not be interesting

597
00:29:35,820 --> 00:29:38,700
to the client would that really be an

598
00:29:38,700 --> 00:29:40,500
example where you might be one way is

599
00:29:40,500 --> 00:29:41,880
like marketing side which is just extend

600
00:29:41,880 --> 00:29:43,860
the auto product a lot itself a little

601
00:29:43,860 --> 00:29:45,659
bit which is very clean by itself or

602
00:29:45,659 --> 00:29:47,159
maybe you're really invaded some other

603
00:29:47,159 --> 00:29:51,000
cases maybe there's it's easier uh for

604
00:29:51,000 --> 00:29:52,980
auto servers to reach agreement because

605
00:29:52,980 --> 00:29:54,960
they are essentially Enterprise uh

606
00:29:54,960 --> 00:29:56,760
essentially to Enterprise agreement and

607
00:29:56,760 --> 00:29:59,220
then a consumer to Enterprise and even

608
00:29:59,220 --> 00:30:00,659
for that case maybe the issue can be

609
00:30:00,659 --> 00:30:02,460
solved by some kind of authentication or

610
00:30:02,460 --> 00:30:03,960
authorization

611
00:30:03,960 --> 00:30:05,159
hmm

612
00:30:05,159 --> 00:30:08,399
uh so I think recharge Richard brought

613
00:30:08,399 --> 00:30:12,299
up a good point uh dangerous point is uh

614
00:30:12,299 --> 00:30:14,399
the point that we have reached on uh the

615
00:30:14,399 --> 00:30:16,740
when we were implementing the uh code

616
00:30:16,740 --> 00:30:19,620
base for the hackathon uh so that's

617
00:30:19,620 --> 00:30:21,480
that's the point that clients might not

618
00:30:21,480 --> 00:30:24,899
be interested to find out about so uh

619
00:30:24,899 --> 00:30:27,000
but Martin's Point also makes sense to

620
00:30:27,000 --> 00:30:30,360
me because uh if we we should uh we

621
00:30:30,360 --> 00:30:32,820
should consider some extensions in also

622
00:30:32,820 --> 00:30:36,000
itself that enables uh the transfers of

623
00:30:36,000 --> 00:30:37,580
this kind of information

624
00:30:37,580 --> 00:30:41,399
uh but also recharge haven't had another

625
00:30:41,399 --> 00:30:43,740
point that I have not answer to your

626
00:30:43,740 --> 00:30:46,440
answer for that yet uh that might be

627
00:30:46,440 --> 00:30:48,840
like some sort of communications that

628
00:30:48,840 --> 00:30:51,179
between Enterprises make sense uh

629
00:30:51,179 --> 00:30:54,260
between some sort of uh specific uh

630
00:30:54,260 --> 00:30:57,120
authentication or handshake or something

631
00:30:57,120 --> 00:30:59,580
like that and client does not have

632
00:30:59,580 --> 00:31:01,860
access to that level of information so I

633
00:31:01,860 --> 00:31:03,779
think that's what would be or the main

634
00:31:03,779 --> 00:31:05,820
difference between these two uh

635
00:31:05,820 --> 00:31:09,059
interfaces but if we if we realize that

636
00:31:09,059 --> 00:31:11,580
we can handle that we can handle this

637
00:31:11,580 --> 00:31:13,799
concern uh without adding another level

638
00:31:13,799 --> 00:31:15,659
of complexity to the protocol we

639
00:31:15,659 --> 00:31:17,460
definitely will go with design option

640
00:31:17,460 --> 00:31:20,720
one with some extensions

641
00:31:21,659 --> 00:31:24,059
well I'm sorry I'm you know I'm starting

642
00:31:24,059 --> 00:31:27,799
to fully process this slide so

643
00:31:28,320 --> 00:31:30,419
this whole discussion is this like

644
00:31:30,419 --> 00:31:33,779
relevant only if I like there's also and

645
00:31:33,779 --> 00:31:35,580
it's currently do the currently adopted

646
00:31:35,580 --> 00:31:37,440
documents in Alto

647
00:31:37,440 --> 00:31:40,799
allow us to do the multi-domain use case

648
00:31:40,799 --> 00:31:44,580
okay so this doesn't this doesn't assume

649
00:31:44,580 --> 00:31:46,440
that these other documents

650
00:31:46,440 --> 00:31:48,960
um go anywhere

651
00:31:48,960 --> 00:31:52,200
I'm sorry Danny these two multi-domain

652
00:31:52,200 --> 00:31:54,779
dot drafts okay

653
00:31:54,779 --> 00:31:56,840
yeah yeah

654
00:31:57,120 --> 00:31:58,980
all right well I mean

655
00:31:58,980 --> 00:32:01,140
so so if we support the multi-domain use

656
00:32:01,140 --> 00:32:03,720
case today then there must be some sort

657
00:32:03,720 --> 00:32:05,820
of service Discovery mechanism right

658
00:32:05,820 --> 00:32:08,159
across domains so like presumably that

659
00:32:08,159 --> 00:32:10,440
would solve the problem

660
00:32:10,440 --> 00:32:13,700
okay thanks

661
00:32:20,399 --> 00:32:22,860
any other comments about questions six

662
00:32:22,860 --> 00:32:25,140
specifically because one of the most

663
00:32:25,140 --> 00:32:26,940
complex complex question that we are

664
00:32:26,940 --> 00:32:31,220
seeking answer to search yeah

665
00:32:33,360 --> 00:32:36,918
so these are

666
00:32:37,380 --> 00:32:43,260
this one no the previous one uh so this

667
00:32:43,260 --> 00:32:45,360
uh this question is one of the major

668
00:32:45,360 --> 00:32:48,120
concerns of doubters so I'm bringing

669
00:32:48,120 --> 00:32:54,059
that that around on their behalf so

670
00:32:54,059 --> 00:32:56,159
so I'm sorry like I

671
00:32:56,159 --> 00:32:58,860
I I was reading the slide and you maybe

672
00:32:58,860 --> 00:33:00,360
you said it but like what is the actual

673
00:33:00,360 --> 00:33:03,360
question on this slide

674
00:33:03,360 --> 00:33:07,340
so Jason can you clarify that

675
00:33:09,120 --> 00:33:11,399
yeah we want to uh

676
00:33:11,399 --> 00:33:13,980
say some uh experiment about how to

677
00:33:13,980 --> 00:33:15,840
handle the

678
00:33:15,840 --> 00:33:18,678
uh

679
00:33:18,899 --> 00:33:21,299
the the connection between the algorithm

680
00:33:21,299 --> 00:33:25,260
uh plugin uh so which is generally the

681
00:33:25,260 --> 00:33:28,080
also information and

682
00:33:28,080 --> 00:33:31,340
the data circulation

683
00:33:31,340 --> 00:33:35,340
uh so far have two approaches why is

684
00:33:35,340 --> 00:33:38,760
that the auto server can build the

685
00:33:38,760 --> 00:33:40,919
internal data broker to sell the network

686
00:33:40,919 --> 00:33:44,640
information from the uh

687
00:33:44,640 --> 00:33:47,700
the data collected from the data file

688
00:33:47,700 --> 00:33:50,720
and the auto the algorithm plugin will

689
00:33:50,720 --> 00:33:54,480
use the information stored in the

690
00:33:54,480 --> 00:33:56,700
internal data broker to compute the

691
00:33:56,700 --> 00:33:58,080
information results

692
00:33:58,080 --> 00:34:00,779
and another approach is that the the

693
00:34:00,779 --> 00:34:04,620
auto plugin comes directly curated

694
00:34:04,620 --> 00:34:07,140
the data service

695
00:34:07,140 --> 00:34:08,780
and

696
00:34:08,780 --> 00:34:10,879
not

697
00:34:10,879 --> 00:34:14,820
to use any data broker so that's the two

698
00:34:14,820 --> 00:34:16,260
approach you can

699
00:34:16,260 --> 00:34:21,780
can happen uh in different cases but in

700
00:34:21,780 --> 00:34:24,780
the same system actually it's hard to

701
00:34:24,780 --> 00:34:28,379
find the current approach to Define what

702
00:34:28,379 --> 00:34:30,599
should be the model to

703
00:34:30,599 --> 00:34:33,320
handle this

704
00:34:36,139 --> 00:34:39,659
yeah Richard so my overall reaction

705
00:34:39,659 --> 00:34:42,300
would be this looks like a very complex

706
00:34:42,300 --> 00:34:44,579
issue right there are so many different

707
00:34:44,579 --> 00:34:46,379
data sources

708
00:34:46,379 --> 00:34:48,359
are you really sure you want to attack

709
00:34:48,359 --> 00:34:50,159
this issue

710
00:34:50,159 --> 00:34:53,579
uh or maybe for to really make a

711
00:34:53,579 --> 00:34:56,280
progress this one can be next round

712
00:34:56,280 --> 00:34:57,740
because

713
00:34:57,740 --> 00:35:01,260
that's also an option so so that they

714
00:35:01,260 --> 00:35:03,060
can mention that it's not in the school

715
00:35:03,060 --> 00:35:04,740
about this argument but in the real

716
00:35:04,740 --> 00:35:09,119
Department that that is yeah

717
00:35:09,119 --> 00:35:10,500
for example you're really talking about

718
00:35:10,500 --> 00:35:13,440
quite Advanced uh data sources and just

719
00:35:13,440 --> 00:35:14,940
like a few days ago maybe three or four

720
00:35:14,940 --> 00:35:17,700
days ago and Marty and I we were talking

721
00:35:17,700 --> 00:35:21,119
to qingok and who is architect of esnet

722
00:35:21,119 --> 00:35:23,520
we were asking diploma how to deploy an

723
00:35:23,520 --> 00:35:25,200
auto actually his suggestion will be can

724
00:35:25,200 --> 00:35:27,260
I just send you a file every few minutes

725
00:35:27,260 --> 00:35:29,640
and then you just read it from a file

726
00:35:29,640 --> 00:35:31,740
and format we can agree on then you lock

727
00:35:31,740 --> 00:35:33,839
you load into your own server would that

728
00:35:33,839 --> 00:35:35,700
be simple so

729
00:35:35,700 --> 00:35:37,440
there are a lot of different data

730
00:35:37,440 --> 00:35:38,880
sources do you really want to visit my

731
00:35:38,880 --> 00:35:41,700
question is you mentioned uh servers I

732
00:35:41,700 --> 00:35:43,440
think uh for the hackathon you really

733
00:35:43,440 --> 00:35:46,079
have all kinds of issues I think also

734
00:35:46,079 --> 00:35:48,900
for the uh 113 hacksaw and I think we're

735
00:35:48,900 --> 00:35:50,280
using G2 Mini net that's a different

736
00:35:50,280 --> 00:35:52,140
format and now you talk about all

737
00:35:52,140 --> 00:35:54,480
different so it's quite large so that's

738
00:35:54,480 --> 00:35:57,119
my main concern so I think

739
00:35:57,119 --> 00:35:59,040
refrigerator's comments is like quite uh

740
00:35:59,040 --> 00:36:01,700
relevant here sorry but for 20 seconds

741
00:36:01,700 --> 00:36:05,099
uh so we can decide to delegate uh

742
00:36:05,099 --> 00:36:07,980
discussing this question for further

743
00:36:07,980 --> 00:36:11,839
Improvement after IDF like 115 and uh

744
00:36:11,839 --> 00:36:14,700
consent uh focus on like addressing

745
00:36:14,700 --> 00:36:18,119
question one two five before uh tackling

746
00:36:18,119 --> 00:36:20,099
this problem so that might be a question

747
00:36:20,099 --> 00:36:22,380
but I don't know if you have realized uh

748
00:36:22,380 --> 00:36:24,480
Jensen's comments or not I think he

749
00:36:24,480 --> 00:36:26,280
thinks that in deployments it would be

750
00:36:26,280 --> 00:36:28,820
relevant

751
00:36:30,119 --> 00:36:32,400
yeah Martin Duke again

752
00:36:32,400 --> 00:36:34,460
um

753
00:36:37,260 --> 00:36:38,820
like this

754
00:36:38,820 --> 00:36:40,800
this data source thing

755
00:36:40,800 --> 00:36:42,060
um

756
00:36:42,060 --> 00:36:45,119
I mean we don't Define any of the data

757
00:36:45,119 --> 00:36:48,839
source apis right okay yeah and like

758
00:36:48,839 --> 00:36:50,339
I don't know this idea of data Brokers

759
00:36:50,339 --> 00:36:52,859
and I mean Alto is supposed to be a data

760
00:36:52,859 --> 00:36:55,140
source like a server itself right and

761
00:36:55,140 --> 00:36:56,520
there's just this proprietary thing

762
00:36:56,520 --> 00:36:58,920
where you're just Gathering

763
00:36:58,920 --> 00:37:01,140
stuff from around the network and like

764
00:37:01,140 --> 00:37:02,880
proposing like a broker that is

765
00:37:02,880 --> 00:37:04,320
collecting the data then Distributing it

766
00:37:04,320 --> 00:37:06,000
to Alto it's like that's the that's the

767
00:37:06,000 --> 00:37:07,380
alto server so you're like inventing a

768
00:37:07,380 --> 00:37:10,380
new Alto to speed Alto which just to

769
00:37:10,380 --> 00:37:12,000
zoom out and again I'm not you know a

770
00:37:12,000 --> 00:37:14,940
practitioner that seems like very

771
00:37:14,940 --> 00:37:16,440
I think you're creating abstraction to

772
00:37:16,440 --> 00:37:18,599
make this problem practical tractable

773
00:37:18,599 --> 00:37:23,160
that is not um does not sound very

774
00:37:23,160 --> 00:37:28,440
um realistic I guess and like maybe

775
00:37:28,440 --> 00:37:30,060
there may be interesting work in like

776
00:37:30,060 --> 00:37:32,640
defining like apis for data collection

777
00:37:32,640 --> 00:37:35,579
but um you would have to get a lot of

778
00:37:35,579 --> 00:37:37,920
devices to subscribe to that and I don't

779
00:37:37,920 --> 00:37:40,200
that seems like a big scope increase

780
00:37:40,200 --> 00:37:43,440
that we shouldn't get into thanks

781
00:37:43,440 --> 00:37:45,619
foreign

782
00:37:47,900 --> 00:37:51,300
yeah I I fully agree with someone here I

783
00:37:51,300 --> 00:37:54,420
think I think that uh going through the

784
00:37:54,420 --> 00:37:55,260
uh

785
00:37:55,260 --> 00:37:57,599
southbound interfaces is something

786
00:37:57,599 --> 00:37:59,880
that's I mean Alto is about exposing

787
00:37:59,880 --> 00:38:02,400
data not about collecting data so what

788
00:38:02,400 --> 00:38:03,780
do you how do you collect data I mean

789
00:38:03,780 --> 00:38:05,040
it's quite important for the

790
00:38:05,040 --> 00:38:07,920
implementation and making decisions on

791
00:38:07,920 --> 00:38:09,599
the implementation on the design for

792
00:38:09,599 --> 00:38:12,359
sure but making it part of Standards

793
00:38:12,359 --> 00:38:13,980
probably will be a little bit over

794
00:38:13,980 --> 00:38:15,540
standardizing and this is something

795
00:38:15,540 --> 00:38:16,859
that's

796
00:38:16,859 --> 00:38:20,400
give me the you know

797
00:38:20,400 --> 00:38:22,800
so if you don't have any more questions

798
00:38:22,800 --> 00:38:24,780
I can wrap up the comments that were

799
00:38:24,780 --> 00:38:26,940
very useful interesting comments made by

800
00:38:26,940 --> 00:38:30,119
Diego and Martin I also Richard uh so I

801
00:38:30,119 --> 00:38:32,400
think Jensen answer to this question for

802
00:38:32,400 --> 00:38:35,640
you is that uh Martin and Martin Diego

803
00:38:35,640 --> 00:38:37,320
said that in terms of his

804
00:38:37,320 --> 00:38:39,540
standardization it's out of the scope of

805
00:38:39,540 --> 00:38:43,020
Auto as data aggregation protocol uh but

806
00:38:43,020 --> 00:38:45,000
in terms of implementation we can decide

807
00:38:45,000 --> 00:38:48,180
later so all in all after Richard Martin

808
00:38:48,180 --> 00:38:50,460
and Diego's comments I think like we

809
00:38:50,460 --> 00:38:52,260
should focus on question one to question

810
00:38:52,260 --> 00:38:55,800
five for this standardization and Tackle

811
00:38:55,800 --> 00:38:57,599
question six only in the implementation

812
00:38:57,599 --> 00:38:58,920
afterward

813
00:38:58,920 --> 00:39:01,560
thank you everybody for listening I

814
00:39:01,560 --> 00:39:03,540
think like we are reaching uh the end of

815
00:39:03,540 --> 00:39:05,700
time for this presentation so if you

816
00:39:05,700 --> 00:39:07,440
have any more comments we would be happy

817
00:39:07,440 --> 00:39:10,680
to have you in the queue for the last

818
00:39:10,680 --> 00:39:12,800
minute and also we will appreciate

819
00:39:12,800 --> 00:39:15,780
discussions going on the working group

820
00:39:15,780 --> 00:39:18,119
mailing list so please attend the

821
00:39:18,119 --> 00:39:20,460
mailing base and please write your

822
00:39:20,460 --> 00:39:22,320
comments for us in the mailing list is

823
00:39:22,320 --> 00:39:23,579
that possible

824
00:39:23,579 --> 00:39:24,960
thank you

825
00:39:24,960 --> 00:39:26,900
okay thank you Martin

826
00:39:26,900 --> 00:39:29,579
thank you Madi and thank you Jason

827
00:39:29,579 --> 00:39:30,720
actually

828
00:39:30,720 --> 00:39:33,540
we can keep on discussion question on

829
00:39:33,540 --> 00:39:35,640
the list and properties some of the

830
00:39:35,640 --> 00:39:38,339
questions yes thank you next is about

831
00:39:38,339 --> 00:39:40,260
the auto new transport

832
00:39:40,260 --> 00:39:42,980
richer

833
00:39:52,200 --> 00:39:54,960
okay so I'm going to go over the output

834
00:39:54,960 --> 00:39:58,940
transport next slide please

835
00:39:59,579 --> 00:40:01,619
okay so here is outline about things

836
00:40:01,619 --> 00:40:04,079
which I want to cover and first one is I

837
00:40:04,079 --> 00:40:05,579
really want to show some connectivities

838
00:40:05,579 --> 00:40:07,380
what we are doing and so therefore

839
00:40:07,380 --> 00:40:09,480
people get a sense about where the

840
00:40:09,480 --> 00:40:11,280
modifications come from and where it

841
00:40:11,280 --> 00:40:13,800
should come from and then for people who

842
00:40:13,800 --> 00:40:15,660
are new we do have a bunch of new people

843
00:40:15,660 --> 00:40:17,220
who are who are not familiar with

844
00:40:17,220 --> 00:40:18,660
transport protocol so I'm going to give

845
00:40:18,660 --> 00:40:20,640
a very high level very quick like 12-3

846
00:40:20,640 --> 00:40:22,260
minutes overview about what's going on

847
00:40:22,260 --> 00:40:23,880
about new transport because that's

848
00:40:23,880 --> 00:40:25,920
imported on your protocol

849
00:40:25,920 --> 00:40:27,660
and I'll highlight a little bit like

850
00:40:27,660 --> 00:40:30,300
like a meter changes from last ietf and

851
00:40:30,300 --> 00:40:32,220
then to the current version and then I

852
00:40:32,220 --> 00:40:33,660
want to spend all the majority of the

853
00:40:33,660 --> 00:40:35,579
time in real time to really talk about

854
00:40:35,579 --> 00:40:37,440
discussions and very many issues to to

855
00:40:37,440 --> 00:40:38,880
be decided to really focus on

856
00:40:38,880 --> 00:40:40,740
engineering side to really make all the

857
00:40:40,740 --> 00:40:43,680
decisions and so on next slide please

858
00:40:43,680 --> 00:40:45,780
so first a bunch of all this happened

859
00:40:45,780 --> 00:40:47,520
and slightly initially it's a little bit

860
00:40:47,520 --> 00:40:50,099
slow and and now we're we're moving

861
00:40:50,099 --> 00:40:52,319
quite like uh active or not hopefully

862
00:40:52,319 --> 00:40:53,640
we'll really try to maintain our

863
00:40:53,640 --> 00:40:55,980
momentum and so on so initially the

864
00:40:55,980 --> 00:40:57,960
document was adopted as a working group

865
00:40:57,960 --> 00:41:01,680
document on June 22nd and then we we did

866
00:41:01,680 --> 00:41:03,300
a bunch of reviews thank you so much for

867
00:41:03,300 --> 00:41:05,579
a lot of reviewers and Luis Sabine and

868
00:41:05,579 --> 00:41:07,440
Jordy and a lot of reviewers and from

869
00:41:07,440 --> 00:41:09,000
all the group so give a lot of reviews

870
00:41:09,000 --> 00:41:11,579
and we finalize our submit a new version

871
00:41:11,579 --> 00:41:14,040
on July 10th ultralight events elabores

872
00:41:14,040 --> 00:41:16,800
basically between uh right before the uh

873
00:41:16,800 --> 00:41:18,180
deadline

874
00:41:18,180 --> 00:41:20,400
and now the major issue as you'll see

875
00:41:20,400 --> 00:41:21,780
shortly which that's why I want to give

876
00:41:21,780 --> 00:41:23,700
you a little pointer would be there are

877
00:41:23,700 --> 00:41:26,400
some very excellent accent uh HTTP

878
00:41:26,400 --> 00:41:28,440
expert reviews so they are from Martin

879
00:41:28,440 --> 00:41:31,560
Thompson and they're from uh Spencer and

880
00:41:31,560 --> 00:41:33,300
also from Martin Nottingham they're very

881
00:41:33,300 --> 00:41:34,680
nice reviews and if you're interested in

882
00:41:34,680 --> 00:41:36,480
reading some of some of the discussions

883
00:41:36,480 --> 00:41:38,940
or reviews and here are the links and

884
00:41:38,940 --> 00:41:40,380
there are also some ongoing discussions

885
00:41:40,380 --> 00:41:42,119
slightly because hackathon delay a

886
00:41:42,119 --> 00:41:43,140
little bit and now we're resuming

887
00:41:43,140 --> 00:41:44,640
hopefully we can have all the

888
00:41:44,640 --> 00:41:46,380
discussions involved so next slide

889
00:41:46,380 --> 00:41:47,940
please

890
00:41:47,940 --> 00:41:50,579
okay so the religious review a little

891
00:41:50,579 --> 00:41:52,440
bit what we're doing in terms of all the

892
00:41:52,440 --> 00:41:53,460
requirements so therefore we can all

893
00:41:53,460 --> 00:41:55,440
refresh our memory because we are we're

894
00:41:55,440 --> 00:41:57,000
not designing a new transport protocol

895
00:41:57,000 --> 00:41:58,920
or new other protocol really but not

896
00:41:58,920 --> 00:42:00,780
possible it's a design is let's really

897
00:42:00,780 --> 00:42:02,940
make sure that's impossible follow all

898
00:42:02,940 --> 00:42:04,619
existing designs and by now using

899
00:42:04,619 --> 00:42:06,000
essentially a new transform mechanism

900
00:42:06,000 --> 00:42:09,480
HTTP 203 so therefore here is bunch of

901
00:42:09,480 --> 00:42:10,920
requirements with Central that's a

902
00:42:10,920 --> 00:42:12,960
constraining our design space and we're

903
00:42:12,960 --> 00:42:14,760
not supposed to really inventing any any

904
00:42:14,760 --> 00:42:16,920
new things whenever possible so

905
00:42:16,920 --> 00:42:18,180
basically number one is like really

906
00:42:18,180 --> 00:42:20,099
follow the base protocol possible so

907
00:42:20,099 --> 00:42:22,020
therefore r0 is request all of the

908
00:42:22,020 --> 00:42:23,579
resources possible I can see that that

909
00:42:23,579 --> 00:42:25,380
wouldn't have some kind of fundamental

910
00:42:25,380 --> 00:42:27,300
constraint on the way with designers in

911
00:42:27,300 --> 00:42:29,220
your neurotransport or Auto product code

912
00:42:29,220 --> 00:42:31,319
and then I call the media base obvious

913
00:42:31,319 --> 00:42:33,599
one is auto SSE which is somehow old

914
00:42:33,599 --> 00:42:35,220
technology and Service Center event

915
00:42:35,220 --> 00:42:37,260
which we borrowed initially started from

916
00:42:37,260 --> 00:42:39,480
Windy room which is a wonderful designer

917
00:42:39,480 --> 00:42:41,280
and then with Central there's SSC

918
00:42:41,280 --> 00:42:43,859
protocol therefore for uh required

919
00:42:43,859 --> 00:42:45,480
inherited from over there because we're

920
00:42:45,480 --> 00:42:47,220
going to replace SSE because quite a few

921
00:42:47,220 --> 00:42:48,660
people Mission assets is very important

922
00:42:48,660 --> 00:42:50,700
so therefore this protocol is certainly

923
00:42:50,700 --> 00:42:52,380
trying to replace the functions of SSE

924
00:42:52,380 --> 00:42:54,060
so therefore you must be able to request

925
00:42:54,060 --> 00:42:56,099
an increment updates you must be able to

926
00:42:56,099 --> 00:42:58,020
stop income updates and you must really

927
00:42:58,020 --> 00:42:59,460
the server can tell the client okay I'm

928
00:42:59,460 --> 00:43:01,140
starting or I'm stopping so if I keep

929
00:43:01,140 --> 00:43:03,060
the signaling and then the server can

930
00:43:03,060 --> 00:43:04,319
all have all kind of Freedom really

931
00:43:04,319 --> 00:43:06,060
choosing uh the content type which you

932
00:43:06,060 --> 00:43:07,740
can say later or the major implication

933
00:43:07,740 --> 00:43:09,260
and also why I will read the design

934
00:43:09,260 --> 00:43:11,339
we're not going to revisit this point

935
00:43:11,339 --> 00:43:13,140
and they're already determined in the

936
00:43:13,140 --> 00:43:16,079
early design with obviously 88.95

937
00:43:16,079 --> 00:43:18,240
and then we want essentially record as a

938
00:43:18,240 --> 00:43:20,040
major decision and people can discuss

939
00:43:20,040 --> 00:43:21,839
after that would be I want to refresh

940
00:43:21,839 --> 00:43:23,520
memory a little bit for people and the

941
00:43:23,520 --> 00:43:25,140
decision is we're still following the

942
00:43:25,140 --> 00:43:27,900
HTTP request for API actually that's a

943
00:43:27,900 --> 00:43:29,339
somehow this requirement actually really

944
00:43:29,339 --> 00:43:31,859
bites why because you can really use

945
00:43:31,859 --> 00:43:34,200
HTTP 2 2 to do a lot of things but if

946
00:43:34,200 --> 00:43:35,640
you really want to follow the rest for

947
00:43:35,640 --> 00:43:38,220
API philosophy and activities will come

948
00:43:38,220 --> 00:43:39,720
in really bites and you know says that

949
00:43:39,720 --> 00:43:40,980
with the concerned the way we design

950
00:43:40,980 --> 00:43:42,420
things I want a little bit with these

951
00:43:42,420 --> 00:43:44,339
costs that of course allow flexibility

952
00:43:44,339 --> 00:43:47,400
of deployment next slide please

953
00:43:47,400 --> 00:43:49,380
to refresh the memory a little bit so

954
00:43:49,380 --> 00:43:51,060
here is the new design in the protocol

955
00:43:51,060 --> 00:43:52,920
and you have not read the document it is

956
00:43:52,920 --> 00:43:54,660
becoming a little bit longer now so let

957
00:43:54,660 --> 00:43:56,099
me just summarize very quickly and

958
00:43:56,099 --> 00:43:57,300
structure and then we can go through the

959
00:43:57,300 --> 00:43:59,040
discussions and so on so the basic

960
00:43:59,040 --> 00:44:00,359
design is very simple you have Auto

961
00:44:00,359 --> 00:44:02,280
server over there and you have all the

962
00:44:02,280 --> 00:44:04,200
auto information resources quite a lot

963
00:44:04,200 --> 00:44:05,760
to know and without like all kind of

964
00:44:05,760 --> 00:44:08,220
information resources cost map Network

965
00:44:08,220 --> 00:44:11,880
map and endpoint properties and pass

966
00:44:11,880 --> 00:44:13,560
factors how start will be used at one

967
00:44:13,560 --> 00:44:14,640
way another way

968
00:44:14,640 --> 00:44:16,740
I know what we do is we introduce a

969
00:44:16,740 --> 00:44:18,540
concept called a transport Cube you can

970
00:44:18,540 --> 00:44:20,520
see over there and the transporter queue

971
00:44:20,520 --> 00:44:21,839
is Central to have two components and

972
00:44:21,839 --> 00:44:24,720
one is called increment rblq and the one

973
00:44:24,720 --> 00:44:28,859
called receiver set RS and Q uq and then

974
00:44:28,859 --> 00:44:30,599
essentially user will be connected to

975
00:44:30,599 --> 00:44:32,640
the update queue and also if you want to

976
00:44:32,640 --> 00:44:34,740
receive update you become part of

977
00:44:34,740 --> 00:44:37,380
receiver set and for single user for

978
00:44:37,380 --> 00:44:39,660
example over here is column 2 and you

979
00:44:39,660 --> 00:44:42,000
use a single HTTP 2 of 3 Connection and

980
00:44:42,000 --> 00:44:43,440
to really get updates from multiple

981
00:44:43,440 --> 00:44:45,060
update queues so therefore that's really

982
00:44:45,060 --> 00:44:47,280
the overall design architecture borrowed

983
00:44:47,280 --> 00:44:49,740
a lot from early design so for that's

984
00:44:49,740 --> 00:44:51,780
the basic structure and the design is

985
00:44:51,780 --> 00:44:54,119
Clan can pull items from rbiet queue and

986
00:44:54,119 --> 00:44:55,980
also the server can push into it at

987
00:44:55,980 --> 00:44:57,599
least in terms of latency or equivalent

988
00:44:57,599 --> 00:44:59,460
opportunity you can see there's some

989
00:44:59,460 --> 00:45:01,140
like things one finalized next slide

990
00:45:01,140 --> 00:45:02,940
please

991
00:45:02,940 --> 00:45:05,339
so here is a set of all the major

992
00:45:05,339 --> 00:45:06,720
changes I'm not going to bore you with

993
00:45:06,720 --> 00:45:08,280
all the details probably they don't make

994
00:45:08,280 --> 00:45:10,380
much sense at all and I need a lot of

995
00:45:10,380 --> 00:45:12,300
things but overall you can see that

996
00:45:12,300 --> 00:45:13,859
there are a lot of changes and basically

997
00:45:13,859 --> 00:45:16,079
left hand side is early before the ietf

998
00:45:16,079 --> 00:45:18,240
113 right about 13 and here's 100

999
00:45:18,240 --> 00:45:20,579
changes so therefore really separate

1000
00:45:20,579 --> 00:45:22,140
into different sections and make

1001
00:45:22,140 --> 00:45:23,640
everything as concrete as detailed as

1002
00:45:23,640 --> 00:45:25,560
possible so a lot of very detailed

1003
00:45:25,560 --> 00:45:28,200
updates and so on so so those are a lot

1004
00:45:28,200 --> 00:45:30,000
of suspect details just basically that's

1005
00:45:30,000 --> 00:45:31,859
a major progress especially all the

1006
00:45:31,859 --> 00:45:33,660
details according to the discussion of

1007
00:45:33,660 --> 00:45:37,560
itf13 and so on next slide please

1008
00:45:37,560 --> 00:45:40,260
so now that's really the design issues

1009
00:45:40,260 --> 00:45:41,760
which one engage because that's the

1010
00:45:41,760 --> 00:45:43,740
purpose of face-to-face meeting and

1011
00:45:43,740 --> 00:45:45,180
that's really make all the media

1012
00:45:45,180 --> 00:45:47,280
decisions so the decision isn't

1013
00:45:47,280 --> 00:45:49,680
triggered by very excellent comments and

1014
00:45:49,680 --> 00:45:51,960
discussions from actuality Experts of

1015
00:45:51,960 --> 00:45:53,160
course because a working group of

1016
00:45:53,160 --> 00:45:54,780
reviews already also addressed and then

1017
00:45:54,780 --> 00:45:56,760
we got the three excellent reviews sort

1018
00:45:56,760 --> 00:45:58,079
of one front address there are issues

1019
00:45:58,079 --> 00:46:00,300
and discussion and so on so the main

1020
00:46:00,300 --> 00:46:01,740
point I want to get people to talk about

1021
00:46:01,740 --> 00:46:03,240
is the phone and if you worry about oh

1022
00:46:03,240 --> 00:46:04,859
all your discussion would involve a

1023
00:46:04,859 --> 00:46:07,200
major uh restructure of the whole

1024
00:46:07,200 --> 00:46:09,480
document oh no actually we're not the

1025
00:46:09,480 --> 00:46:10,980
main thing actually is the main women

1026
00:46:10,980 --> 00:46:12,480
issues from Jesus Culture which is

1027
00:46:12,480 --> 00:46:15,540
excellent essentially two issues one is

1028
00:46:15,540 --> 00:46:18,180
concurrency control unwind semantics of

1029
00:46:18,180 --> 00:46:19,560
the transport the good thing actually

1030
00:46:19,560 --> 00:46:21,420
the good news is they may represent

1031
00:46:21,420 --> 00:46:23,280
generic concept for HTTP 3D design

1032
00:46:23,280 --> 00:46:24,839
actually which suddenly realize if for

1033
00:46:24,839 --> 00:46:26,579
people who follow the email it's not

1034
00:46:26,579 --> 00:46:28,859
likely Auto specific somehow it really

1035
00:46:28,859 --> 00:46:30,599
represents some kind of genetic concept

1036
00:46:30,599 --> 00:46:32,280
but we want to really get engineering

1037
00:46:32,280 --> 00:46:34,560
done as fast as possible and like I

1038
00:46:34,560 --> 00:46:35,940
mentioned is ripping issues does not

1039
00:46:35,940 --> 00:46:38,220
look like really about meter changes and

1040
00:46:38,220 --> 00:46:40,440
mostly actually very minor changes but

1041
00:46:40,440 --> 00:46:42,180
very important so therefore we want the

1042
00:46:42,180 --> 00:46:43,500
working group to have very careful

1043
00:46:43,500 --> 00:46:45,660
decision and discussion and then we can

1044
00:46:45,660 --> 00:46:46,980
finalize a lot of things and then we can

1045
00:46:46,980 --> 00:46:48,660
make a very good progress next slide

1046
00:46:48,660 --> 00:46:50,520
please

1047
00:46:50,520 --> 00:46:52,680
so now let's really talk about the first

1048
00:46:52,680 --> 00:46:54,240
thing we want a working group to make a

1049
00:46:54,240 --> 00:46:56,579
decision and to really present the

1050
00:46:56,579 --> 00:46:58,980
issues clearly that's a very quickly

1051
00:46:58,980 --> 00:47:01,140
reveal a basic concept so therefore very

1052
00:47:01,140 --> 00:47:02,460
quickly let's review it then we can

1053
00:47:02,460 --> 00:47:04,380
really discuss so what are the basic

1054
00:47:04,380 --> 00:47:05,819
issues here remember the main thing

1055
00:47:05,819 --> 00:47:07,380
about Neutron to our protocol our main

1056
00:47:07,380 --> 00:47:09,060
thing about actually using interview 203

1057
00:47:09,060 --> 00:47:12,119
or SSE is to do very low latency and

1058
00:47:12,119 --> 00:47:13,859
very low overhead push of Information

1059
00:47:13,859 --> 00:47:16,380
Network information to the client like

1060
00:47:16,380 --> 00:47:18,000
current design in the current document

1061
00:47:18,000 --> 00:47:19,920
essentially has two mechanisms so let me

1062
00:47:19,920 --> 00:47:21,180
review very quickly so look what we can

1063
00:47:21,180 --> 00:47:24,000
discuss one is client pool I know one is

1064
00:47:24,000 --> 00:47:26,339
a server push the clan pool actor model

1065
00:47:26,339 --> 00:47:28,079
is a very simple card mechanism so

1066
00:47:28,079 --> 00:47:29,700
basically the client just sent a request

1067
00:47:29,700 --> 00:47:31,500
for example and if you look at your

1068
00:47:31,500 --> 00:47:33,599
right hand side and that's essentially

1069
00:47:33,599 --> 00:47:36,660
the transport q r q standards and for

1070
00:47:36,660 --> 00:47:38,220
you to update you give a second number

1071
00:47:38,220 --> 00:47:39,960
and with the media type and will also

1072
00:47:39,960 --> 00:47:41,220
give you a tag about what information

1073
00:47:41,220 --> 00:47:42,420
really is

1074
00:47:42,420 --> 00:47:45,180
another clan and you use the same HTTP 2

1075
00:47:45,180 --> 00:47:47,579
or 3 Connection can issue a get request

1076
00:47:47,579 --> 00:47:50,460
for example see get and specify the the

1077
00:47:50,460 --> 00:47:52,079
secret number and then we'll get the

1078
00:47:52,079 --> 00:47:54,720
content very simple one so that's a

1079
00:47:54,720 --> 00:47:56,880
decline pool next slide please just

1080
00:47:56,880 --> 00:47:58,500
refresh your memory

1081
00:47:58,500 --> 00:48:00,900
and then here is the ability of server

1082
00:48:00,900 --> 00:48:03,059
push which is also well designed and so

1083
00:48:03,059 --> 00:48:04,500
let's say what it really is and then

1084
00:48:04,500 --> 00:48:06,359
what it will encounter so here is

1085
00:48:06,359 --> 00:48:07,680
approach is very simple for people who

1086
00:48:07,680 --> 00:48:09,960
are familiar with gdp2 it's using server

1087
00:48:09,960 --> 00:48:12,000
approach promise

1088
00:48:12,000 --> 00:48:13,980
so basically for example if I'm a server

1089
00:48:13,980 --> 00:48:15,780
and I want to put a new content for

1090
00:48:15,780 --> 00:48:18,300
example I'll send a push promise uh

1091
00:48:18,300 --> 00:48:20,880
stream for example a prime stream number

1092
00:48:20,880 --> 00:48:22,680
four you can see on your right hand side

1093
00:48:22,680 --> 00:48:25,140
and I pretended because the semantics

1094
00:48:25,140 --> 00:48:26,880
hdv2 really is that's why we want to

1095
00:48:26,880 --> 00:48:28,800
follow is you send again request and

1096
00:48:28,800 --> 00:48:30,780
pretend you send a virtual uh request

1097
00:48:30,780 --> 00:48:32,160
you want to get the client and supposed

1098
00:48:32,160 --> 00:48:34,760
to want to do it get and then for the

1099
00:48:34,760 --> 00:48:38,099
second number or 101 and a silver direct

1100
00:48:38,099 --> 00:48:40,140
list and the content from a server to

1101
00:48:40,140 --> 00:48:41,520
the client so that's a server portion

1102
00:48:41,520 --> 00:48:42,839
instead of conceptual agent like

1103
00:48:42,839 --> 00:48:45,480
representing a potentially uh Clan pool

1104
00:48:45,480 --> 00:48:47,220
so those are the basic concepts we're

1105
00:48:47,220 --> 00:48:49,440
doing next slides please

1106
00:48:49,440 --> 00:48:51,960
now that's the interesting part so now

1107
00:48:51,960 --> 00:48:53,819
it turns out after the very very

1108
00:48:53,819 --> 00:48:56,220
increasing discussion in the discussion

1109
00:48:56,220 --> 00:48:58,200
from Market Nottingham and is from

1110
00:48:58,200 --> 00:49:00,660
review is the question is if that's what

1111
00:49:00,660 --> 00:49:02,819
you really want in terms of Clan pool

1112
00:49:02,819 --> 00:49:05,339
and given that for hb2 for example the

1113
00:49:05,339 --> 00:49:08,460
load the the client overhead may not be

1114
00:49:08,460 --> 00:49:10,859
as a big why don't you introduce Clan

1115
00:49:10,859 --> 00:49:12,960
long pool as a way to solve the issue

1116
00:49:12,960 --> 00:49:14,640
that's a very interesting discussion and

1117
00:49:14,640 --> 00:49:15,960
very quickly in the comments so

1118
00:49:15,960 --> 00:49:18,119
therefore basically here is one proposal

1119
00:49:18,119 --> 00:49:19,800
and what exactly how to get to work of

1120
00:49:19,800 --> 00:49:21,059
course the email discussion did not go

1121
00:49:21,059 --> 00:49:22,559
to technical details and here's the

1122
00:49:22,559 --> 00:49:25,079
engineer let's see how it really works

1123
00:49:25,079 --> 00:49:26,700
so the discussion point is very simple

1124
00:49:26,700 --> 00:49:28,200
uh on your on your right hand side

1125
00:49:28,200 --> 00:49:29,640
essentially it's transported q and

1126
00:49:29,640 --> 00:49:31,859
student number 10112103

1127
00:49:31,859 --> 00:49:34,079
but what if you want to get a long pole

1128
00:49:34,079 --> 00:49:36,240
use HTTP 2 and how to really get do that

1129
00:49:36,240 --> 00:49:39,119
is very simple is the client can issue a

1130
00:49:39,119 --> 00:49:41,040
gather request from the client to the

1131
00:49:41,040 --> 00:49:43,619
server and what one request essentially

1132
00:49:43,619 --> 00:49:44,940
the next secret number which we're

1133
00:49:44,940 --> 00:49:46,380
building already so therefore you say

1134
00:49:46,380 --> 00:49:48,300
hey I'm going to get 104. basically you

1135
00:49:48,300 --> 00:49:49,680
always have a hanging or essential

1136
00:49:49,680 --> 00:49:51,599
outstanding request for next one so

1137
00:49:51,599 --> 00:49:53,040
therefore this can be sent without all

1138
00:49:53,040 --> 00:49:54,960
the TCP handshake and overhead

1139
00:49:54,960 --> 00:49:56,819
understand using the single connection

1140
00:49:56,819 --> 00:49:59,880
itself then you implement the whole uh

1141
00:49:59,880 --> 00:50:01,920
Clan pool so therefore that's one

1142
00:50:01,920 --> 00:50:03,780
feature which we're discussing and we

1143
00:50:03,780 --> 00:50:06,180
liked it a lot during our internal

1144
00:50:06,180 --> 00:50:07,800
weekly meetings basically the only

1145
00:50:07,800 --> 00:50:09,300
change is very small we probably add a

1146
00:50:09,300 --> 00:50:11,400
paragraph say okay and for clan pull and

1147
00:50:11,400 --> 00:50:13,319
use a card use for the current Clan per

1148
00:50:13,319 --> 00:50:15,059
model and that's really allowed

1149
00:50:15,059 --> 00:50:17,040
currently you only can request which is

1150
00:50:17,040 --> 00:50:18,720
a single number already in the transport

1151
00:50:18,720 --> 00:50:20,760
queue and now we should allow you can

1152
00:50:20,760 --> 00:50:22,260
allow the current one with second number

1153
00:50:22,260 --> 00:50:24,420
plus one then that becomes essentially

1154
00:50:24,420 --> 00:50:26,700
they they allow on tool so that's the

1155
00:50:26,700 --> 00:50:28,920
design Decision One any support should I

1156
00:50:28,920 --> 00:50:30,420
stop here to discuss or actually just

1157
00:50:30,420 --> 00:50:33,680
mobile inside back

1158
00:50:40,819 --> 00:50:43,140
so that's the one proposal we want to

1159
00:50:43,140 --> 00:50:44,819
adopt it but we want to get feedback

1160
00:50:44,819 --> 00:50:46,079
from working group very simple

1161
00:50:46,079 --> 00:50:48,240
technology change very elegant but let's

1162
00:50:48,240 --> 00:50:50,280
say if we were missing and something or

1163
00:50:50,280 --> 00:50:53,160
somewhere next slide please

1164
00:50:53,160 --> 00:50:54,900
next one which is also very interesting

1165
00:50:54,900 --> 00:50:57,119
and also came out essentially from HTTP

1166
00:50:57,119 --> 00:50:58,800
review which we really liked and but

1167
00:50:58,800 --> 00:51:00,660
this one is slightly more conceptual and

1168
00:51:00,660 --> 00:51:02,099
actually the change is very interesting

1169
00:51:02,099 --> 00:51:04,440
but actually we need a really working

1170
00:51:04,440 --> 00:51:07,380
group and also all our expert to discuss

1171
00:51:07,380 --> 00:51:09,900
so here is the basic proposal about how

1172
00:51:09,900 --> 00:51:12,000
to do it so the proposal is very simple

1173
00:51:12,000 --> 00:51:14,339
and very elegant and English follows it

1174
00:51:14,339 --> 00:51:15,660
for example remember early part we

1175
00:51:15,660 --> 00:51:17,640
talked about the club The Promise

1176
00:51:17,640 --> 00:51:19,859
approach promise approach of using a

1177
00:51:19,859 --> 00:51:21,000
server push

1178
00:51:21,000 --> 00:51:23,460
one very simple way is reverse the

1179
00:51:23,460 --> 00:51:25,500
thinking the process for example the

1180
00:51:25,500 --> 00:51:27,300
client around the push for example 101

1181
00:51:27,300 --> 00:51:28,619
and the client right now the current

1182
00:51:28,619 --> 00:51:30,480
model is This Server will send a project

1183
00:51:30,480 --> 00:51:33,300
promise approach stream 4 and and using

1184
00:51:33,300 --> 00:51:34,920
the get method and for second number of

1185
00:51:34,920 --> 00:51:37,800
101 101 on the right hand side

1186
00:51:37,800 --> 00:51:40,079
one possibility is sweetly conceptual

1187
00:51:40,079 --> 00:51:41,700
model said okay I'm not really server

1188
00:51:41,700 --> 00:51:43,440
pretending unless you send me a request

1189
00:51:43,440 --> 00:51:46,020
why don't I just really put a content to

1190
00:51:46,020 --> 00:51:47,760
you

1191
00:51:47,760 --> 00:51:50,460
so therefore you get rid of the promise

1192
00:51:50,460 --> 00:51:52,440
and essentially you make a frame into a

1193
00:51:52,440 --> 00:51:54,720
put frame and put a method you turn the

1194
00:51:54,720 --> 00:51:56,400
method into put and now you give a

1195
00:51:56,400 --> 00:51:59,520
second number you just write into it

1196
00:51:59,520 --> 00:52:01,380
so therefore that's one way of because

1197
00:52:01,380 --> 00:52:02,880
why I think there's some like basically

1198
00:52:02,880 --> 00:52:04,500
there are some discussions at least from

1199
00:52:04,500 --> 00:52:06,119
the HTTP review is there's some

1200
00:52:06,119 --> 00:52:08,160
pushbacks to think about like a server

1201
00:52:08,160 --> 00:52:09,480
push which actually interestingly

1202
00:52:09,480 --> 00:52:11,700
Implement themselves in HTTP 203 and as

1203
00:52:11,700 --> 00:52:13,559
approach Prime is but somehow considered

1204
00:52:13,559 --> 00:52:15,660
as like anti-patent and so therefore

1205
00:52:15,660 --> 00:52:16,920
there's some pushback about the like

1206
00:52:16,920 --> 00:52:18,599
push but this one with more standard

1207
00:52:18,599 --> 00:52:20,280
there's no push promise everything just

1208
00:52:20,280 --> 00:52:23,280
become a standard HTTP methods verbs and

1209
00:52:23,280 --> 00:52:25,740
put and so therefore it's very nice and

1210
00:52:25,740 --> 00:52:27,660
what additional benefit is it with this

1211
00:52:27,660 --> 00:52:29,220
one and actually can get rid of one

1212
00:52:29,220 --> 00:52:31,079
awkward which we have in the current for

1213
00:52:31,079 --> 00:52:33,000
example if people read the document very

1214
00:52:33,000 --> 00:52:35,160
carefully we have one place specific

1215
00:52:35,160 --> 00:52:36,960
value and for the current implementation

1216
00:52:36,960 --> 00:52:39,660
design and the server the client must

1217
00:52:39,660 --> 00:52:41,700
not cancel the promise because why if

1218
00:52:41,700 --> 00:52:44,280
you push a promise and then because all

1219
00:52:44,280 --> 00:52:45,540
the dependencies there's all the

1220
00:52:45,540 --> 00:52:47,339
dependencies if we cancel it's very hard

1221
00:52:47,339 --> 00:52:48,960
to really synchronize the state but if

1222
00:52:48,960 --> 00:52:51,599
we allow the server to put you look the

1223
00:52:51,599 --> 00:52:53,819
the clan cannot really like a cancel put

1224
00:52:53,819 --> 00:52:56,280
sorry for what about about awkwardness

1225
00:52:56,280 --> 00:52:58,020
of course semantics now really is

1226
00:52:58,020 --> 00:53:00,480
suddenly the concept becomes somehow

1227
00:53:00,480 --> 00:53:02,700
used to be like a server where the lotto

1228
00:53:02,700 --> 00:53:04,020
server would have all the network State

1229
00:53:04,020 --> 00:53:05,579
and essentially like pushing the

1230
00:53:05,579 --> 00:53:08,040
information into the clan as a cache but

1231
00:53:08,040 --> 00:53:09,900
now if you do put conceptually it's now

1232
00:53:09,900 --> 00:53:11,640
client conceptual becomes essentially a

1233
00:53:11,640 --> 00:53:13,200
stateful machine I mean in other states

1234
00:53:13,200 --> 00:53:15,420
so for people who are like a purely you

1235
00:53:15,420 --> 00:53:17,880
know stateful design and HTTP may be

1236
00:53:17,880 --> 00:53:20,339
resentful so far we like this one but we

1237
00:53:20,339 --> 00:53:21,780
won't have a lot of discussion on this

1238
00:53:21,780 --> 00:53:23,400
one so that's the second issue next

1239
00:53:23,400 --> 00:53:24,960
slide excuse so opportunity we're just

1240
00:53:24,960 --> 00:53:26,880
finish all issues

1241
00:53:26,880 --> 00:53:28,680
next one which also actually came out

1242
00:53:28,680 --> 00:53:31,319
from review and from all three reviewers

1243
00:53:31,319 --> 00:53:35,040
and Mark and Martin Thompson and Spencer

1244
00:53:35,040 --> 00:53:36,839
talking so basically that's the third

1245
00:53:36,839 --> 00:53:39,839
issue basically is day one is discussion

1246
00:53:39,839 --> 00:53:41,579
is can you environment what are we

1247
00:53:41,579 --> 00:53:43,200
interpreted is can you just make a late

1248
00:53:43,200 --> 00:53:46,140
GP to spec as little as possible idea

1249
00:53:46,140 --> 00:53:47,760
will be specified nothing

1250
00:53:47,760 --> 00:53:49,859
but here is a concept issue which we

1251
00:53:49,859 --> 00:53:51,480
encounter and that's actually also a

1252
00:53:51,480 --> 00:53:53,040
genetic issue let me clarify the issue

1253
00:53:53,040 --> 00:53:54,599
very clearly and we want to see which

1254
00:53:54,599 --> 00:53:56,220
one so we'll give three proposals and

1255
00:53:56,220 --> 00:53:57,300
we'll see which one are the working

1256
00:53:57,300 --> 00:53:59,339
group likes so we can make a decision so

1257
00:53:59,339 --> 00:54:00,900
what exactly the issue oh why even

1258
00:54:00,900 --> 00:54:03,200
generic issue

1259
00:54:03,200 --> 00:54:06,000
or a specific issue here is look at the

1260
00:54:06,000 --> 00:54:08,040
auto on on your right hand side upper

1261
00:54:08,040 --> 00:54:11,160
right corner and R1 is a network map you

1262
00:54:11,160 --> 00:54:13,800
send an abstraction of network and then

1263
00:54:13,800 --> 00:54:15,180
you give your equipment the push update

1264
00:54:15,180 --> 00:54:17,339
for example Network map one you send a

1265
00:54:17,339 --> 00:54:19,380
patch one sort of for a darker patch a

1266
00:54:19,380 --> 00:54:21,059
Json pad for example change the map a

1267
00:54:21,059 --> 00:54:22,020
little bit

1268
00:54:22,020 --> 00:54:23,819
and then you have a customer one which

1269
00:54:23,819 --> 00:54:25,559
is a user Network map one as reference

1270
00:54:25,559 --> 00:54:27,359
because as we designed the topology and

1271
00:54:27,359 --> 00:54:29,160
the customer defining our cars and

1272
00:54:29,160 --> 00:54:31,740
essentially depends on R1 and then you

1273
00:54:31,740 --> 00:54:35,640
have R4 and which is a essentially is a

1274
00:54:35,640 --> 00:54:38,040
new custom map and which is based on a

1275
00:54:38,040 --> 00:54:39,900
new updated Network map you might move

1276
00:54:39,900 --> 00:54:41,280
one IP address from location one

1277
00:54:41,280 --> 00:54:42,900
location two and now you're also

1278
00:54:42,900 --> 00:54:44,460
therefore change the average you change

1279
00:54:44,460 --> 00:54:47,160
also the the the cards for example in

1280
00:54:47,160 --> 00:54:48,420
the custom map one so therefore become

1281
00:54:48,420 --> 00:54:50,040
such a dependent graph so overall

1282
00:54:50,040 --> 00:54:52,140
accurate is a DAC what do we call Direct

1283
00:54:52,140 --> 00:54:54,359
e600 graph of dependency of all the

1284
00:54:54,359 --> 00:54:56,220
resources or pushing or sending from

1285
00:54:56,220 --> 00:54:58,020
from the server to the cloud you know

1286
00:54:58,020 --> 00:55:00,420
pushing or supposedly

1287
00:55:00,420 --> 00:55:02,700
so you know most ideal case and if the

1288
00:55:02,700 --> 00:55:04,799
requirement is hey if you want this Auto

1289
00:55:04,799 --> 00:55:06,599
you guys I should specify nothing so

1290
00:55:06,599 --> 00:55:08,579
therefore you just just send all the

1291
00:55:08,579 --> 00:55:10,200
informations ask a server to send from

1292
00:55:10,200 --> 00:55:11,700
from a server to the client that's easy

1293
00:55:11,700 --> 00:55:13,260
to specify nothing approach engineer

1294
00:55:13,260 --> 00:55:15,180
approach so conceptually to send all of

1295
00:55:15,180 --> 00:55:17,339
our resources and put it into HTTP 2

1296
00:55:17,339 --> 00:55:19,740
servers uh cache or using socket API or

1297
00:55:19,740 --> 00:55:21,720
whatever and then they just send all of

1298
00:55:21,720 --> 00:55:23,099
so that's design number one basically

1299
00:55:23,099 --> 00:55:25,559
Auto specifies nothing and you map each

1300
00:55:25,559 --> 00:55:28,260
RI into independent stream and HTTP just

1301
00:55:28,260 --> 00:55:30,660
out of scheduling the main issue is we

1302
00:55:30,660 --> 00:55:32,220
might potentially lose a little

1303
00:55:32,220 --> 00:55:33,960
substantial performance gain or using

1304
00:55:33,960 --> 00:55:35,819
hp2 why

1305
00:55:35,819 --> 00:55:38,400
we gave all of our resources to the HTTP

1306
00:55:38,400 --> 00:55:40,980
layer as the server and because the

1307
00:55:40,980 --> 00:55:42,960
server doesn't understand about anything

1308
00:55:42,960 --> 00:55:45,180
about application semantics so for the

1309
00:55:45,180 --> 00:55:46,500
server Management schedule let me send

1310
00:55:46,500 --> 00:55:48,180
rfo first because they're all in the

1311
00:55:48,180 --> 00:55:49,859
buffers in your own like objects and let

1312
00:55:49,859 --> 00:55:52,440
me send our phone first then R3 R2 R1

1313
00:55:52,440 --> 00:55:54,540
then essentially the application cannot

1314
00:55:54,540 --> 00:55:56,760
process anything in the buffer all R4 R2

1315
00:55:56,760 --> 00:55:59,099
R3 R1 onto everything you received and

1316
00:55:59,099 --> 00:56:00,420
then process so therefore you lose

1317
00:56:00,420 --> 00:56:02,460
essential to gain of this essentially a

1318
00:56:02,460 --> 00:56:04,559
dependency so that's the issue number

1319
00:56:04,559 --> 00:56:06,119
one we did not like that one early

1320
00:56:06,119 --> 00:56:08,099
design therefore we went down to design

1321
00:56:08,099 --> 00:56:10,380
two but of course the issue is we're not

1322
00:56:10,380 --> 00:56:12,299
specifying nothing we might introduce a

1323
00:56:12,299 --> 00:56:14,220
maybe over specification and so on so

1324
00:56:14,220 --> 00:56:16,319
let's discuss a little bit in current

1325
00:56:16,319 --> 00:56:18,240
design 2 is a form it also has an issue

1326
00:56:18,240 --> 00:56:19,559
it's not perfect but we are talking

1327
00:56:19,559 --> 00:56:21,180
about engineer we're not trying to get

1328
00:56:21,180 --> 00:56:22,260
everything perfect we want to get a

1329
00:56:22,260 --> 00:56:25,079
working version so in design two is the

1330
00:56:25,079 --> 00:56:26,819
current drops specify that server

1331
00:56:26,819 --> 00:56:28,680
submissive HP is transport or the server

1332
00:56:28,680 --> 00:56:30,720
in a dag order

1333
00:56:30,720 --> 00:56:32,819
so for example if you're the server and

1334
00:56:32,819 --> 00:56:34,200
auto server you're sending the

1335
00:56:34,200 --> 00:56:35,880
information ask HTTP 2 to transport for

1336
00:56:35,880 --> 00:56:37,920
you and you first really should submit

1337
00:56:37,920 --> 00:56:39,720
anyone which has no dependency R1 for

1338
00:56:39,720 --> 00:56:43,578
example you just specify send to it

1339
00:56:44,359 --> 00:56:46,980
is finished so now on the one without

1340
00:56:46,980 --> 00:56:49,380
dependencies R2 and A3 R3 you can send

1341
00:56:49,380 --> 00:56:51,900
R2 and R3 and then you wait until the

1342
00:56:51,900 --> 00:56:54,000
analyst said okay it's transported and

1343
00:56:54,000 --> 00:56:55,619
now you send R4

1344
00:56:55,619 --> 00:56:57,240
so therefore essentially you would

1345
00:56:57,240 --> 00:56:58,859
really be allowed somehow they're

1346
00:56:58,859 --> 00:57:00,240
transport in the given order of course

1347
00:57:00,240 --> 00:57:01,680
if by the way we mentioned this one even

1348
00:57:01,680 --> 00:57:04,140
in this one even now you send in a given

1349
00:57:04,140 --> 00:57:05,579
order or actually receiver's item I

1350
00:57:05,579 --> 00:57:07,440
might also have a semantics maybe the

1351
00:57:07,440 --> 00:57:10,260
HTTP client uh buffer size that might

1352
00:57:10,260 --> 00:57:12,599
still buffer R1 R2 R3 and not delivering

1353
00:57:12,599 --> 00:57:14,040
Apple layer you know right away they

1354
00:57:14,040 --> 00:57:15,480
might be still actually delay but we

1355
00:57:15,480 --> 00:57:16,980
think this is slightly better of course

1356
00:57:16,980 --> 00:57:18,240
the issue about this one is also

1357
00:57:18,240 --> 00:57:19,799
potential issue remember this

1358
00:57:19,799 --> 00:57:21,599
long-running connections and the TCP

1359
00:57:21,599 --> 00:57:23,280
window size that might be big I have a

1360
00:57:23,280 --> 00:57:24,839
sliding window of transform might be

1361
00:57:24,839 --> 00:57:26,940
large enough to understand R1 R2 R3 R4

1362
00:57:26,940 --> 00:57:28,380
in a single shot because they're so big

1363
00:57:28,380 --> 00:57:29,940
you sound like a big buffer but now

1364
00:57:29,940 --> 00:57:31,200
we're sending essential we introduce

1365
00:57:31,200 --> 00:57:32,280
round trip delay there's no perfect

1366
00:57:32,280 --> 00:57:35,460
solution okay these are R3 design three

1367
00:57:35,460 --> 00:57:37,140
is I could indicate dependencies oh

1368
00:57:37,140 --> 00:57:39,180
those resources are really dependent but

1369
00:57:39,180 --> 00:57:40,859
that one probably involves modification

1370
00:57:40,859 --> 00:57:43,200
of HTTP 3 semantics or two cement sort

1371
00:57:43,200 --> 00:57:44,940
of or not targeting this one but we want

1372
00:57:44,940 --> 00:57:47,880
to work and make decision one or two we

1373
00:57:47,880 --> 00:57:50,359
recommended two but we'll see what the

1374
00:57:50,359 --> 00:57:52,559
recommendation really is

1375
00:57:52,559 --> 00:57:54,780
next slide excuse maybe how how am I

1376
00:57:54,780 --> 00:57:56,520
doing timing am I too slow or you know

1377
00:57:56,520 --> 00:57:59,700
you have the timer oh oh good great yeah

1378
00:57:59,700 --> 00:58:02,220
I do have time great wonderful wonderful

1379
00:58:02,220 --> 00:58:05,220
so three and is how to well to specify

1380
00:58:05,220 --> 00:58:06,720
the settings that's also an issue which

1381
00:58:06,720 --> 00:58:08,520
we encountered and then a wonderful the

1382
00:58:08,520 --> 00:58:11,099
Ponder by uh by Samantha which is very

1383
00:58:11,099 --> 00:58:12,960
good uh Point as well so that's the

1384
00:58:12,960 --> 00:58:14,640
issue we encounter so let's see if

1385
00:58:14,640 --> 00:58:16,859
there's any suggestion or feedback from

1386
00:58:16,859 --> 00:58:18,980
working group

1387
00:58:18,980 --> 00:58:21,180
essentially so we want to control a

1388
00:58:21,180 --> 00:58:22,619
little bit of crack essentially the

1389
00:58:22,619 --> 00:58:25,440
specifications for example right now in

1390
00:58:25,440 --> 00:58:27,359
a current draft we specify that the the

1391
00:58:27,359 --> 00:58:30,059
client Mass being about the server to

1392
00:58:30,059 --> 00:58:32,400
say hey the server Porsche is Singapore

1393
00:58:32,400 --> 00:58:34,859
so reported to be self-consistent we

1394
00:58:34,859 --> 00:58:36,480
also want to allow This Server and

1395
00:58:36,480 --> 00:58:37,740
client really like a limited

1396
00:58:37,740 --> 00:58:38,940
concurrencies because therefore you're

1397
00:58:38,940 --> 00:58:40,619
not you're not going to overwhelm a very

1398
00:58:40,619 --> 00:58:43,619
slow Auto client but unfortunately we

1399
00:58:43,619 --> 00:58:45,359
realize and also a very nicely nicely

1400
00:58:45,359 --> 00:58:47,579
upon out by Spencer and is that actually

1401
00:58:47,579 --> 00:58:49,859
this specification scheme is changed in

1402
00:58:49,859 --> 00:58:51,900
http 3.

1403
00:58:51,900 --> 00:58:54,180
so basically what happens is a second

1404
00:58:54,180 --> 00:58:55,740
year of approach now essentially it's

1405
00:58:55,740 --> 00:58:57,540
kind of now is removed if you specify

1406
00:58:57,540 --> 00:58:59,520
actually it's an even error so therefore

1407
00:58:59,520 --> 00:59:01,079
you really should use like a Mac Max

1408
00:59:01,079 --> 00:59:03,380
push ID frame with complete information

1409
00:59:03,380 --> 00:59:06,299
and maximum currency and also change and

1410
00:59:06,299 --> 00:59:08,220
so therefore there's essentially two and

1411
00:59:08,220 --> 00:59:09,900
three are found on two design

1412
00:59:09,900 --> 00:59:12,240
so how to handle this issue why yes

1413
00:59:12,240 --> 00:59:13,500
which is remodeling we don't even

1414
00:59:13,500 --> 00:59:15,299
specify anymore we just say okay let's

1415
00:59:15,299 --> 00:59:17,400
operational and you guys should handle

1416
00:59:17,400 --> 00:59:18,839
the when you when you configure your own

1417
00:59:18,839 --> 00:59:20,520
servers and make sure you compute them

1418
00:59:20,520 --> 00:59:21,780
all properly so therefore outstanding

1419
00:59:21,780 --> 00:59:23,400
the right away store for independent of

1420
00:59:23,400 --> 00:59:26,579
uh gp2 or GB3 the second one which is

1421
00:59:26,579 --> 00:59:28,380
best about requirement UMass the center

1422
00:59:28,380 --> 00:59:30,480
of sending about push and you must

1423
00:59:30,480 --> 00:59:32,460
sample for example control this one but

1424
00:59:32,460 --> 00:59:34,140
how to really do it will become generic

1425
00:59:34,140 --> 00:59:36,000
and then essentially they deploy that's

1426
00:59:36,000 --> 00:59:37,799
why relative with OEM when you're going

1427
00:59:37,799 --> 00:59:38,880
and really send those information

1428
00:59:38,880 --> 00:59:41,040
relevant let me uh you know in the crack

1429
00:59:41,040 --> 00:59:44,000
away sort of foreign

1430
00:59:45,079 --> 00:59:47,579
working group so that's the next one

1431
00:59:47,579 --> 00:59:50,180
next slide please

1432
00:59:50,180 --> 00:59:53,040
so last one and next one I can might be

1433
00:59:53,040 --> 00:59:55,440
tricky or maybe hard or maybe easy so

1434
00:59:55,440 --> 00:59:57,480
here is what the question really is

1435
00:59:57,480 --> 00:59:59,880
so initially we use the other examples

1436
00:59:59,880 --> 01:00:02,940
were written in ATP 1.1 format very

1437
01:00:02,940 --> 01:00:04,859
standard ever so familiar with it then

1438
01:00:04,859 --> 01:00:06,900
we got the feedback that okay actually I

1439
01:00:06,900 --> 01:00:09,480
really do e32 can you guys now in random

1440
01:00:09,480 --> 01:00:11,280
format in hpv2 for example that's the

1441
01:00:11,280 --> 01:00:13,380
right hand side format in the middle I

1442
01:00:13,380 --> 01:00:14,760
think for some versions actually we have

1443
01:00:14,760 --> 01:00:17,400
both 1.1 1.2 then every example would

1444
01:00:17,400 --> 01:00:18,960
have two formats to become very messy

1445
01:00:18,960 --> 01:00:21,000
eventually will end up with a two

1446
01:00:21,000 --> 01:00:22,859
basically we wrote all of them with two

1447
01:00:22,859 --> 01:00:23,940
sort of four we give some kind of

1448
01:00:23,940 --> 01:00:26,040
comment said okay send this stream using

1449
01:00:26,040 --> 01:00:28,079
prime stream number four and for example

1450
01:00:28,079 --> 01:00:30,720
with your ready settings examples and

1451
01:00:30,720 --> 01:00:32,520
also like some like pseudo instructions

1452
01:00:32,520 --> 01:00:34,200
to really see how the information should

1453
01:00:34,200 --> 01:00:36,240
be set as example

1454
01:00:36,240 --> 01:00:38,280
but it's a wonderful sky guide from Mark

1455
01:00:38,280 --> 01:00:39,960
is actually recommended written using

1456
01:00:39,960 --> 01:00:42,000
1.1 so therefore should we just roll

1457
01:00:42,000 --> 01:00:44,700
back the all examples using 1.1 but

1458
01:00:44,700 --> 01:00:45,960
adding some kind of pseudo like

1459
01:00:45,960 --> 01:00:47,880
annotation to indicate what kind of

1460
01:00:47,880 --> 01:00:49,680
information or not so therefore we

1461
01:00:49,680 --> 01:00:50,940
really need some kind of guidance and

1462
01:00:50,940 --> 01:00:52,260
therefore we don't want to go back and

1463
01:00:52,260 --> 01:00:54,540
forth we just won't finalize next slice

1464
01:00:54,540 --> 01:00:56,339
peace

1465
01:00:56,339 --> 01:00:58,380
so the last one is the media type and we

1466
01:00:58,380 --> 01:00:59,819
really need finalize the media type I

1467
01:00:59,819 --> 01:01:01,559
think so at this point it's possible

1468
01:01:01,559 --> 01:01:03,420
this also will point out by by Spencer

1469
01:01:03,420 --> 01:01:05,280
so therefore we can finalize this uh

1470
01:01:05,280 --> 01:01:06,780
media type which actually we have an

1471
01:01:06,780 --> 01:01:08,220
internal version already but we want to

1472
01:01:08,220 --> 01:01:09,480
wait a little bit until everything is

1473
01:01:09,480 --> 01:01:11,579
final our email attempt is format input

1474
01:01:11,579 --> 01:01:13,799
which should be relatively quick and but

1475
01:01:13,799 --> 01:01:15,299
if people have any comments and we're

1476
01:01:15,299 --> 01:01:16,500
more than happy to really go back or

1477
01:01:16,500 --> 01:01:17,520
otherwise we're going to use traditional

1478
01:01:17,520 --> 01:01:20,040
RFC at 7 to 85 format

1479
01:01:20,040 --> 01:01:22,940
last slice please

1480
01:01:23,099 --> 01:01:25,319
next slide

1481
01:01:25,319 --> 01:01:27,420
okay

1482
01:01:27,420 --> 01:01:30,480
okay so here is a list of all the

1483
01:01:30,480 --> 01:01:33,180
questions and now our listening to all

1484
01:01:33,180 --> 01:01:34,799
the comments and all the feedback from

1485
01:01:34,799 --> 01:01:36,480
all accounts hopefully we put all there

1486
01:01:36,480 --> 01:01:38,460
and we won't get people to tell us what

1487
01:01:38,460 --> 01:01:41,760
you feel strongly to go ahead okay okay

1488
01:01:41,760 --> 01:01:43,380
uh Martin Duke Google

1489
01:01:43,380 --> 01:01:45,540
um so one minor thing can you go to

1490
01:01:45,540 --> 01:01:48,839
discuss three please sorry

1491
01:01:48,839 --> 01:01:50,599
must be three

1492
01:01:50,599 --> 01:01:54,180
so like I'm in favor of you know saying

1493
01:01:54,180 --> 01:01:56,819
what you mean in documents and not yeah

1494
01:01:56,819 --> 01:01:58,380
so I don't know how long it takes you to

1495
01:01:58,380 --> 01:01:59,760
find a slide but whether like to say

1496
01:01:59,760 --> 01:02:01,319
something I say yes say something don't

1497
01:02:01,319 --> 01:02:03,599
just like ignore it assume people do the

1498
01:02:03,599 --> 01:02:05,880
right thing discuss three get over shot

1499
01:02:05,880 --> 01:02:07,559
right next one

1500
01:02:07,559 --> 01:02:11,940
right uh no no okay anyway forget it so

1501
01:02:11,940 --> 01:02:14,220
write something down like you could just

1502
01:02:14,220 --> 01:02:16,920
write for hp2 and hp3 or you could have

1503
01:02:16,920 --> 01:02:18,240
a generic requirement I would have a

1504
01:02:18,240 --> 01:02:20,640
requirement that you know I would not

1505
01:02:20,640 --> 01:02:22,140
just say configure your thing properly

1506
01:02:22,140 --> 01:02:23,780
because that doesn't mean anything to

1507
01:02:23,780 --> 01:02:25,619
implementers so it is an option too

1508
01:02:25,619 --> 01:02:28,200
essentially yes okay and but without go

1509
01:02:28,200 --> 01:02:30,660
to details of HTTP 2 do this way through

1510
01:02:30,660 --> 01:02:32,099
to another which is a asset requirement

1511
01:02:32,099 --> 01:02:33,420
yeah I mean I would just say like make

1512
01:02:33,420 --> 01:02:35,400
sure you can send enough pushes and make

1513
01:02:35,400 --> 01:02:36,960
sure you can send push assuming you're

1514
01:02:36,960 --> 01:02:39,180
using push and and uh you know make sure

1515
01:02:39,180 --> 01:02:40,380
you have

1516
01:02:40,380 --> 01:02:42,599
um enough streams okay whatever the

1517
01:02:42,599 --> 01:02:44,819
requirement is okay sounds good so like

1518
01:02:44,819 --> 01:02:46,140
to zoom out well okay actually there's

1519
01:02:46,140 --> 01:02:48,599
one clarifying question so

1520
01:02:48,599 --> 01:02:51,119
are you now considering not using push

1521
01:02:51,119 --> 01:02:52,079
at all

1522
01:02:52,079 --> 01:02:54,539
uh that's not a discussion so can you go

1523
01:02:54,539 --> 01:02:57,240
to discussion maybe go to yeah there was

1524
01:02:57,240 --> 01:02:59,220
a bunch okay so they're in very so so

1525
01:02:59,220 --> 01:03:01,020
there were like five

1526
01:03:01,020 --> 01:03:02,520
they were like four design Ops four

1527
01:03:02,520 --> 01:03:04,980
designers for how to do SOC yeah okay

1528
01:03:04,980 --> 01:03:07,920
and one of them is push and none of them

1529
01:03:07,920 --> 01:03:09,660
are sorry one second just one second

1530
01:03:09,660 --> 01:03:11,880
okay make it easy

1531
01:03:11,880 --> 01:03:14,579
uh oh next slide

1532
01:03:14,579 --> 01:03:16,920
okay so basically it is

1533
01:03:16,920 --> 01:03:18,720
Clan pool already who can support it

1534
01:03:18,720 --> 01:03:21,539
right and silver push we can replace

1535
01:03:21,539 --> 01:03:25,319
with sober pot okay I'll keep both of

1536
01:03:25,319 --> 01:03:26,819
course that's a problem these two are

1537
01:03:26,819 --> 01:03:29,460
mutually so you can say if you don't

1538
01:03:29,460 --> 01:03:31,079
keep this one

1539
01:03:31,079 --> 01:03:34,319
uh move so okay it has mine and uh so

1540
01:03:34,319 --> 01:03:36,240
basically if we change into server put

1541
01:03:36,240 --> 01:03:38,280
and get rid of so push completely okay

1542
01:03:38,280 --> 01:03:43,160
so server put exists in one one right

1543
01:03:43,160 --> 01:03:45,599
server put already existing in one point

1544
01:03:45,599 --> 01:03:48,240
okay all right essentially get rid of uh

1545
01:03:48,240 --> 01:03:50,819
push promise right okay so this is this

1546
01:03:50,819 --> 01:03:52,020
is interesting

1547
01:03:52,020 --> 01:03:54,359
um you got you got the best possible

1548
01:03:54,359 --> 01:03:56,220
reviewers from the HTTP group so that

1549
01:03:56,220 --> 01:04:00,240
was exciting to me exactly exactly um

1550
01:04:00,240 --> 01:04:02,039
so um like

1551
01:04:02,039 --> 01:04:05,400
I want to zoom out on this draft like

1552
01:04:05,400 --> 01:04:06,420
um

1553
01:04:06,420 --> 01:04:08,160
so first of all

1554
01:04:08,160 --> 01:04:11,220
okay so number one

1555
01:04:11,220 --> 01:04:13,559
um the naive way I think as Martin

1556
01:04:13,559 --> 01:04:15,839
Thompson put in his review the naive way

1557
01:04:15,839 --> 01:04:19,619
to do Alto or HTTP 2 is just take the

1558
01:04:19,619 --> 01:04:22,020
requests sure and put them in streams

1559
01:04:22,020 --> 01:04:25,559
like that all the like 7285 also put

1560
01:04:25,559 --> 01:04:27,059
them in streams and you're done right

1561
01:04:27,059 --> 01:04:29,039
including SSC all that there's nothing

1562
01:04:29,039 --> 01:04:31,440
there's nothing wrong with that correct

1563
01:04:31,440 --> 01:04:33,480
so that's related three right basically

1564
01:04:33,480 --> 01:04:35,839
oh no two I think some kind of like a

1565
01:04:35,839 --> 01:04:38,280
uh yeah to basic ordering construct

1566
01:04:38,280 --> 01:04:40,859
right so about these type things so I

1567
01:04:40,859 --> 01:04:42,480
mean I don't want like we have a

1568
01:04:42,480 --> 01:04:44,579
deliverable I don't want to like

1569
01:04:44,579 --> 01:04:47,339
get Tunnel Vision on deliverable if the

1570
01:04:47,339 --> 01:04:49,859
answer is that just like not having an

1571
01:04:49,859 --> 01:04:51,780
HTTP 2 document is the right answer

1572
01:04:51,780 --> 01:04:54,480
because you you just you just take like

1573
01:04:54,480 --> 01:04:56,579
any almost any of many other HP

1574
01:04:56,579 --> 01:04:58,619
applications you just take one one you

1575
01:04:58,619 --> 01:05:00,059
rip it out you put it in two and it

1576
01:05:00,059 --> 01:05:01,440
works and it works better because it

1577
01:05:01,440 --> 01:05:02,880
work you might because performance in

1578
01:05:02,880 --> 01:05:04,740
some cases yes you're right

1579
01:05:04,740 --> 01:05:07,140
um and I I think

1580
01:05:07,140 --> 01:05:08,579
I think it's always important to

1581
01:05:08,579 --> 01:05:10,319
Benchmark whatever we're doing against

1582
01:05:10,319 --> 01:05:13,440
doing that sure what I am

1583
01:05:13,440 --> 01:05:15,480
and this this is a terrible thing to say

1584
01:05:15,480 --> 01:05:16,859
because it's potentially like really

1585
01:05:16,859 --> 01:05:18,359
changing Liverpool

1586
01:05:18,359 --> 01:05:21,780
but what I feel like happened uh if I'm

1587
01:05:21,780 --> 01:05:24,859
understanding correctly is the HTTP

1588
01:05:24,859 --> 01:05:27,480
experts essentially redesigned SSC for

1589
01:05:27,480 --> 01:05:29,339
us yes

1590
01:05:29,339 --> 01:05:33,000
um in a in a version agnostic way that

1591
01:05:33,000 --> 01:05:35,400
maybe was better

1592
01:05:35,400 --> 01:05:37,500
um okay and

1593
01:05:37,500 --> 01:05:38,339
foreign

1594
01:05:38,339 --> 01:05:41,520
if that is the case

1595
01:05:41,520 --> 01:05:43,140
um

1596
01:05:43,140 --> 01:05:45,660
I I like I you know I've been thinking

1597
01:05:45,660 --> 01:05:46,920
about this for 10 minutes so this is

1598
01:05:46,920 --> 01:05:48,660
this is maybe a crazy idea but it's like

1599
01:05:48,660 --> 01:05:51,359
the right answer to do 88.95 this

1600
01:05:51,359 --> 01:05:52,799
and

1601
01:05:52,799 --> 01:05:57,180
not have an H2 and 3 document

1602
01:05:57,180 --> 01:05:59,359
um

1603
01:06:04,500 --> 01:06:07,020
because it sounds to me like

1604
01:06:07,020 --> 01:06:10,020
if we just do the

1605
01:06:10,020 --> 01:06:12,059
well I don't know I mean I don't know if

1606
01:06:12,059 --> 01:06:13,380
you've implemented anything or you're

1607
01:06:13,380 --> 01:06:15,299
still like struggling with the design

1608
01:06:15,299 --> 01:06:17,520
here we we current implement it I think

1609
01:06:17,520 --> 01:06:18,660
I mentioned a little bit actually it was

1610
01:06:18,660 --> 01:06:20,039
on a server approach because as it was

1611
01:06:20,039 --> 01:06:22,260
the key feature of a push and now of

1612
01:06:22,260 --> 01:06:23,520
course we got a footage back which is

1613
01:06:23,520 --> 01:06:25,440
very soon very only a few days ago yeah

1614
01:06:25,440 --> 01:06:27,359
well not approach basically suggestion

1615
01:06:27,359 --> 01:06:29,039
which is a wonderful suggestion we never

1616
01:06:29,039 --> 01:06:30,299
thought that was possibility to reverse

1617
01:06:30,299 --> 01:06:31,920
it of course there's conceptual issues

1618
01:06:31,920 --> 01:06:34,859
yes some people you know always they can

1619
01:06:34,859 --> 01:06:37,200
get like a philosophy code no that's not

1620
01:06:37,200 --> 01:06:39,059
the right philosophy even though syntax

1621
01:06:39,059 --> 01:06:40,920
is simple it's equivalent about

1622
01:06:40,920 --> 01:06:43,619
philosophy is different so therefore uh

1623
01:06:43,619 --> 01:06:45,839
well but where do engineering as long as

1624
01:06:45,839 --> 01:06:48,720
we and like and you know if if any of

1625
01:06:48,720 --> 01:06:50,579
the suggestions I have turn out to make

1626
01:06:50,579 --> 01:06:52,140
sense like I'm happy to push back the

1627
01:06:52,140 --> 01:06:56,460
Milestone deadline sure um but uh I mean

1628
01:06:56,460 --> 01:06:58,640
like

1629
01:06:59,480 --> 01:07:01,440
caramels don't actually still approach

1630
01:07:01,440 --> 01:07:02,460
it's easier because that's already

1631
01:07:02,460 --> 01:07:03,680
awesome

1632
01:07:03,680 --> 01:07:05,700
switch to like a silver Puck because

1633
01:07:05,700 --> 01:07:06,900
that's philosophically different

1634
01:07:06,900 --> 01:07:08,220
concepts so I guess what I'm saying is

1635
01:07:08,220 --> 01:07:10,260
like some data would be useful here I

1636
01:07:10,260 --> 01:07:12,599
mean I I think

1637
01:07:12,599 --> 01:07:15,960
we have like you could take vanilla 7285

1638
01:07:15,960 --> 01:07:17,240
plus SSE

1639
01:07:17,240 --> 01:07:20,280
and just put it in hp2 implementation

1640
01:07:20,280 --> 01:07:22,980
with no like special anything sure and

1641
01:07:22,980 --> 01:07:24,420
like you're gonna get some performance

1642
01:07:24,420 --> 01:07:26,400
yeah less serialization basically

1643
01:07:26,400 --> 01:07:27,480
performance will be a horrible

1644
01:07:27,480 --> 01:07:28,859
potentially for example you can see that

1645
01:07:28,859 --> 01:07:30,660
well the most streams you have and I can

1646
01:07:30,660 --> 01:07:31,920
control cases that make it look really

1647
01:07:31,920 --> 01:07:34,740
bad okay serialize okay fair enough all

1648
01:07:34,740 --> 01:07:35,940
right

1649
01:07:35,940 --> 01:07:36,960
um

1650
01:07:36,960 --> 01:07:39,539
like conversely you could do push which

1651
01:07:39,539 --> 01:07:41,819
I guess you have code for and see that

1652
01:07:41,819 --> 01:07:43,859
there's an improvement versus just just

1653
01:07:43,859 --> 01:07:47,339
using HTTP 2 by itself right sure yeah

1654
01:07:47,339 --> 01:07:48,859
um

1655
01:07:48,859 --> 01:07:51,420
Clan pool only

1656
01:07:51,420 --> 01:07:52,440
right

1657
01:07:52,440 --> 01:07:53,819
um because basically essentially we have

1658
01:07:53,819 --> 01:07:56,180
model is Clan pool only so the push only

1659
01:07:56,180 --> 01:07:59,640
and uh long po definitely long Implement

1660
01:07:59,640 --> 01:08:01,559
I think that's a very very elegant very

1661
01:08:01,559 --> 01:08:04,859
minor change the major concept uh debate

1662
01:08:04,859 --> 01:08:06,839
is do we really switch the model from

1663
01:08:06,839 --> 01:08:10,380
the server pushing and the essential

1664
01:08:10,380 --> 01:08:12,900
virtually putting uh for the clan or so

1665
01:08:12,900 --> 01:08:14,400
just putting the content into the client

1666
01:08:14,400 --> 01:08:18,179
would you would you consider 88.95 to be

1667
01:08:18,179 --> 01:08:21,060
client pull is that inaccurate 835 and

1668
01:08:21,060 --> 01:08:24,420
then I'm sorry 88.95 the SSC dot is that

1669
01:08:24,420 --> 01:08:25,698
client poll

1670
01:08:25,698 --> 01:08:29,520
it's super push it's server but using

1671
01:08:29,520 --> 01:08:31,380
sscu which is a method of all kinds of

1672
01:08:31,380 --> 01:08:32,279
Transport because that's the only

1673
01:08:32,279 --> 01:08:33,719
mechanism available so actually

1674
01:08:33,719 --> 01:08:36,120
conceptual it is super push not a client

1675
01:08:36,120 --> 01:08:39,899
not it's it's a silver push not a server

1676
01:08:39,899 --> 01:08:43,020
put okay so I mean this I whoever's the

1677
01:08:43,020 --> 01:08:45,238
note taker is you're gonna kill me so

1678
01:08:45,238 --> 01:08:47,158
I'm gonna I'm gonna like think about

1679
01:08:47,158 --> 01:08:50,040
stop diving into this but I would like

1680
01:08:50,040 --> 01:08:51,420
you to think about

1681
01:08:51,420 --> 01:08:52,799
um

1682
01:08:52,799 --> 01:08:54,479
I would like to Free Yourself of what

1683
01:08:54,479 --> 01:08:56,339
you're to do for a minute sure

1684
01:08:56,339 --> 01:08:59,640
think about like what what are we trying

1685
01:08:59,640 --> 01:09:02,600
to solve like is it is it best

1686
01:09:02,600 --> 01:09:07,560
positioned in terms of HTTP versions or

1687
01:09:07,560 --> 01:09:11,759
a new mode that like replaces 88.95 or

1688
01:09:11,759 --> 01:09:14,460
supplements 88.95

1689
01:09:14,460 --> 01:09:16,859
um and and like so that's like through

1690
01:09:16,859 --> 01:09:19,920
some thinking and two like

1691
01:09:19,920 --> 01:09:22,140
given that you have some code and I know

1692
01:09:22,140 --> 01:09:24,779
there's not infinite um software

1693
01:09:24,779 --> 01:09:27,179
resources but but certainly like some

1694
01:09:27,179 --> 01:09:29,880
experimentation yeah that's possible we

1695
01:09:29,880 --> 01:09:31,979
do have several push yeah and but sort

1696
01:09:31,979 --> 01:09:34,020
of put it conceptually but the good

1697
01:09:34,020 --> 01:09:35,520
thing if it doesn't stand there to

1698
01:09:35,520 --> 01:09:37,259
client software like a library it'll be

1699
01:09:37,259 --> 01:09:38,460
slightly harder because typically

1700
01:09:38,460 --> 01:09:40,380
clients are not really ready to to be

1701
01:09:40,380 --> 01:09:42,120
written into a typically read the cache

1702
01:09:42,120 --> 01:09:43,799
they're not like a writable cache mostly

1703
01:09:43,799 --> 01:09:45,719
just write it only once but now put some

1704
01:09:45,719 --> 01:09:47,158
conceptually it's more like a more like

1705
01:09:47,158 --> 01:09:50,339
a data store so okay so so I like that's

1706
01:09:50,339 --> 01:09:51,479
my advice

1707
01:09:51,479 --> 01:09:53,939
um to do those two things

1708
01:09:53,939 --> 01:09:56,880
um and uh like I'm my thoughts are

1709
01:09:56,880 --> 01:09:58,260
fragmented so I'm not going to continue

1710
01:09:58,260 --> 01:10:00,840
to shade up here but if you'd like to

1711
01:10:00,840 --> 01:10:03,000
huddle offline uh right after this maybe

1712
01:10:03,000 --> 01:10:04,320
we can yeah we should talk about talk

1713
01:10:04,320 --> 01:10:05,520
through a little bit more okay thank you

1714
01:10:05,520 --> 01:10:07,199
and of course also discussion too which

1715
01:10:07,199 --> 01:10:09,719
is no discussion sorry uh I'm sorry yeah

1716
01:10:09,719 --> 01:10:12,540
1.2 here too yeah it's also relevant

1717
01:10:12,540 --> 01:10:14,219
about how much to specify if you look at

1718
01:10:14,219 --> 01:10:15,659
all the discussions or discussion about

1719
01:10:15,659 --> 01:10:17,280
don't stress anything or maybe there's

1720
01:10:17,280 --> 01:10:19,080
you can say the case because generally

1721
01:10:19,080 --> 01:10:20,219
were solving a case which actually

1722
01:10:20,219 --> 01:10:22,260
generic HTTP 203 case which is how to

1723
01:10:22,260 --> 01:10:24,300
handle multiple dependency and how to

1724
01:10:24,300 --> 01:10:25,920
give instructions from the to the

1725
01:10:25,920 --> 01:10:28,520
transport leader

1726
01:10:29,400 --> 01:10:32,500
[Music]

1727
01:10:33,500 --> 01:10:35,880
if we have any suggestions even to that

1728
01:10:35,880 --> 01:10:37,380
piece of work because he can see that

1729
01:10:37,380 --> 01:10:39,420
essentially there's a common common like

1730
01:10:39,420 --> 01:10:42,659
abstract behind it yeah yeah so I mean I

1731
01:10:42,659 --> 01:10:43,560
think you

1732
01:10:43,560 --> 01:10:45,600
've really hit the jackpot with who

1733
01:10:45,600 --> 01:10:46,739
you're talking to about this yeah yeah

1734
01:10:46,739 --> 01:10:50,100
and I I would never dream of second

1735
01:10:50,100 --> 01:10:52,080
guessing Mark Nottingham about HTTP or

1736
01:10:52,080 --> 01:10:54,120
Martin Thompson sure yeah but um yeah

1737
01:10:54,120 --> 01:10:55,980
let's let's talk after and see what the

1738
01:10:55,980 --> 01:10:58,260
right thing to do with this is uh

1739
01:10:58,260 --> 01:10:59,940
like I said if we need to change the

1740
01:10:59,940 --> 01:11:01,800
charter we could change a charter sure

1741
01:11:01,800 --> 01:11:03,120
um because I think we've got a lot of

1742
01:11:03,120 --> 01:11:04,199
great Insight we didn't have when we

1743
01:11:04,199 --> 01:11:05,880
charted at this yeah well thank you and

1744
01:11:05,880 --> 01:11:07,380
thanks for working quickly on this thank

1745
01:11:07,380 --> 01:11:12,300
you so I'll just uh thank you Richard

1746
01:11:12,300 --> 01:11:14,040
please go to discussion let's move to

1747
01:11:14,040 --> 01:11:17,840
the next topic Jody

1748
01:11:23,640 --> 01:11:25,940
okay

1749
01:11:34,860 --> 01:11:38,059
okay take the floor

1750
01:11:38,520 --> 01:11:42,300
so hi I'm Jordy Rogers welcome and I'm

1751
01:11:42,300 --> 01:11:44,280
going to be talking about auto code

1752
01:11:44,280 --> 01:11:45,960
bases and deployment uh this is actually

1753
01:11:45,960 --> 01:11:48,840
a presentation actually

1754
01:11:48,840 --> 01:11:50,820
several of us that we're going to be

1755
01:11:50,820 --> 01:11:52,260
talking about this

1756
01:11:52,260 --> 01:11:53,820
um so I'm going to be calling out for

1757
01:11:53,820 --> 01:11:55,199
more people I guess

1758
01:11:55,199 --> 01:11:56,580
to join me

1759
01:11:56,580 --> 01:11:57,420
um

1760
01:11:57,420 --> 01:11:59,840
next yeah

1761
01:12:00,000 --> 01:12:00,840
um

1762
01:12:00,840 --> 01:12:03,239
yeah I'm gonna just uh at a very high

1763
01:12:03,239 --> 01:12:05,460
level just recap on the on the code base

1764
01:12:05,460 --> 01:12:08,460
architecture uh just very fast on

1765
01:12:08,460 --> 01:12:10,620
project management and approach when and

1766
01:12:10,620 --> 01:12:13,020
then jump into deployments

1767
01:12:13,020 --> 01:12:14,880
um and then probably we're probably

1768
01:12:14,880 --> 01:12:16,199
going to skip the hackathon because that

1769
01:12:16,199 --> 01:12:18,540
was presented actually Sunday uh so you

1770
01:12:18,540 --> 01:12:20,040
have the the YouTube video if you want

1771
01:12:20,040 --> 01:12:23,840
to look at that but yeah going next

1772
01:12:25,820 --> 01:12:29,299
yeah so next

1773
01:12:31,260 --> 01:12:33,900
yeah so uh yeah this is uh summary of

1774
01:12:33,900 --> 01:12:35,340
the charter you all know about it the

1775
01:12:35,340 --> 01:12:36,900
history of Alto starting from

1776
01:12:36,900 --> 01:12:39,960
peer-to-peer then cdns and recently and

1777
01:12:39,960 --> 01:12:42,900
sort of uh going into this new uh

1778
01:12:42,900 --> 01:12:44,820
applications uh a lot of discussions is

1779
01:12:44,820 --> 01:12:46,440
this is not in real in the charter but

1780
01:12:46,440 --> 01:12:48,179
there are a lot of discussions about you

1781
01:12:48,179 --> 01:12:52,080
know uh using Alto right Computing 5G uh

1782
01:12:52,080 --> 01:12:55,020
seller and others uh and um you know

1783
01:12:55,020 --> 01:12:57,840
participation from multiple vendors and

1784
01:12:57,840 --> 01:13:01,580
and so on so next

1785
01:13:01,679 --> 01:13:05,580
yeah so this is 70 7285 the traditional

1786
01:13:05,580 --> 01:13:07,440
architecture and that you actually want

1787
01:13:07,440 --> 01:13:09,020
to go next here

1788
01:13:09,020 --> 01:13:12,840
next next couple more so yeah that's how

1789
01:13:12,840 --> 01:13:15,840
we map it basically uh so there's a note

1790
01:13:15,840 --> 01:13:17,760
one API Southern API the standard

1791
01:13:17,760 --> 01:13:19,620
focuses uh on the Northbound API

1792
01:13:19,620 --> 01:13:21,060
primarily there was just a discussion

1793
01:13:21,060 --> 01:13:23,179
about the software API and not over

1794
01:13:23,179 --> 01:13:25,140
standardized in that part

1795
01:13:25,140 --> 01:13:28,380
um but yeah that's how we use Envision

1796
01:13:28,380 --> 01:13:32,580
um the deployment of the code base uh on

1797
01:13:32,580 --> 01:13:34,880
the Northbound you have applications

1798
01:13:34,880 --> 01:13:36,960
across the board

1799
01:13:36,960 --> 01:13:40,080
um from traditional cdns but also

1800
01:13:40,080 --> 01:13:43,800
science traffic moving global data sets

1801
01:13:43,800 --> 01:13:46,679
large-scale data sets globally with the

1802
01:13:46,679 --> 01:13:48,060
science networks and and then the edge

1803
01:13:48,060 --> 01:13:49,219
Cloud

1804
01:13:49,219 --> 01:13:52,380
applications I mean the reality in iot

1805
01:13:52,380 --> 01:13:54,300
The Meta versus one and then the

1806
01:13:54,300 --> 01:13:57,600
southbound again uh the um across the

1807
01:13:57,600 --> 01:13:59,340
board you know going from data centers

1808
01:13:59,340 --> 01:14:00,900
so all the way to the edge as well and

1809
01:14:00,900 --> 01:14:02,520
the back hall

1810
01:14:02,520 --> 01:14:05,900
um so moving on next hmm

1811
01:14:05,900 --> 01:14:08,760
yeah just next uh you know this is uh

1812
01:14:08,760 --> 01:14:10,920
pretty much what we discussed in the

1813
01:14:10,920 --> 01:14:12,659
last ATF so I'm going to just uh cruise

1814
01:14:12,659 --> 01:14:15,000
through these I guess very fast but we

1815
01:14:15,000 --> 01:14:17,880
have um an approach whereby we are

1816
01:14:17,880 --> 01:14:20,280
leveraging the hackathons as checkpoints

1817
01:14:20,280 --> 01:14:22,860
and Muslims to progress so uh you saw

1818
01:14:22,860 --> 01:14:24,360
that over the weekend

1819
01:14:24,360 --> 01:14:27,780
um uh the team delivered a demo of um

1820
01:14:27,780 --> 01:14:30,659
integration of Alto with um uh science

1821
01:14:30,659 --> 01:14:33,600
networks uh FPS Russian

1822
01:14:33,600 --> 01:14:38,400
um and also uh multipath quick and and

1823
01:14:38,400 --> 01:14:42,060
ptcp uh by Z Yang as well

1824
01:14:42,060 --> 01:14:44,699
um yeah so moving on next

1825
01:14:44,699 --> 01:14:46,739
if you're interested uh we you know we

1826
01:14:46,739 --> 01:14:50,100
use um scrum to manage the project and

1827
01:14:50,100 --> 01:14:51,360
uh you know we have the dashboards

1828
01:14:51,360 --> 01:14:53,820
available everything is under GitHub uh

1829
01:14:53,820 --> 01:14:55,199
it's openly available so anyone can

1830
01:14:55,199 --> 01:14:57,420
check anytime so there's a dashboard for

1831
01:14:57,420 --> 01:14:59,520
the hackathon 114th and in general

1832
01:14:59,520 --> 01:15:01,020
dashboard for the overall progress

1833
01:15:01,020 --> 01:15:03,780
progress of um open Alton

1834
01:15:03,780 --> 01:15:06,739
moving on next

1835
01:15:06,900 --> 01:15:11,239
yeah that's just the dashboard next

1836
01:15:11,239 --> 01:15:14,460
and just uh jumping into the topic of

1837
01:15:14,460 --> 01:15:16,020
this conversation as well so the auto

1838
01:15:16,020 --> 01:15:19,580
deployments uh if you want to go next

1839
01:15:19,580 --> 01:15:22,920
yeah the the first part is uh what was

1840
01:15:22,920 --> 01:15:24,659
uh this uh what's been discussed in the

1841
01:15:24,659 --> 01:15:26,159
past the current implementations there's

1842
01:15:26,159 --> 01:15:29,400
a Wiki available uh there's the Comcast

1843
01:15:29,400 --> 01:15:31,679
bannocks and telefonica previous

1844
01:15:31,679 --> 01:15:35,580
deployments um and then we have a bunch

1845
01:15:35,580 --> 01:15:37,320
of new deployments uh work in progress

1846
01:15:37,320 --> 01:15:39,239
that we're going to be discussing right

1847
01:15:39,239 --> 01:15:41,880
now I guess in this conversation and and

1848
01:15:41,880 --> 01:15:43,500
ongoing

1849
01:15:43,500 --> 01:15:45,179
um so the Pacific Pacific research

1850
01:15:45,179 --> 01:15:46,739
platform

1851
01:15:46,739 --> 01:15:50,960
um in in California uh then CERN

1852
01:15:50,960 --> 01:15:54,900
in Europe are really a global network uh

1853
01:15:54,900 --> 01:15:57,420
UCSD the 5G deployment and the quick

1854
01:15:57,420 --> 01:15:59,760
mptcp and then the edge cloud and

1855
01:15:59,760 --> 01:16:02,040
science networks in general so moving on

1856
01:16:02,040 --> 01:16:04,460
to next

1857
01:16:06,480 --> 01:16:09,620
um can you go back

1858
01:16:09,659 --> 01:16:12,900
what's what do you mean there's an MP

1859
01:16:12,900 --> 01:16:15,300
quick mptcp deployment

1860
01:16:15,300 --> 01:16:18,300
well I'm gonna have ziang discuss that

1861
01:16:18,300 --> 01:16:20,040
again okay yeah

1862
01:16:20,040 --> 01:16:21,420
all right yes

1863
01:16:21,420 --> 01:16:22,860
um now it's a good question some of

1864
01:16:22,860 --> 01:16:26,400
these uh yeah that yeah let's answer the

1865
01:16:26,400 --> 01:16:27,840
question some of these are just the work

1866
01:16:27,840 --> 01:16:29,159
in progress they may not actually be

1867
01:16:29,159 --> 01:16:31,140
deployments it was

1868
01:16:31,140 --> 01:16:33,540
um so that it might be abusing a little

1869
01:16:33,540 --> 01:16:36,000
bit the term terminology but yeah yeah

1870
01:16:36,000 --> 01:16:39,260
so um

1871
01:16:41,179 --> 01:16:44,960
yeah next one

1872
01:16:45,300 --> 01:16:46,679
so

1873
01:16:46,679 --> 01:16:48,719
um so Richard actually you want to take

1874
01:16:48,719 --> 01:16:51,260
this one I think there's

1875
01:16:51,260 --> 01:16:52,800
yeah

1876
01:16:52,800 --> 01:16:55,580
double switch

1877
01:17:01,440 --> 01:17:02,719
okay

1878
01:17:02,719 --> 01:17:07,820
yeah so this is a basic basically a

1879
01:17:07,820 --> 01:17:10,320
deployment or essential implementation

1880
01:17:10,320 --> 01:17:13,920
that we're working with the uh quite a

1881
01:17:13,920 --> 01:17:17,300
lot of people I think some people saw

1882
01:17:17,300 --> 01:17:20,460
okay yeah so for people who uh follow

1883
01:17:20,460 --> 01:17:22,620
Auto mini list and so this is really is

1884
01:17:22,620 --> 01:17:24,900
a collaboration between

1885
01:17:24,900 --> 01:17:27,659
this Auto working group and also a

1886
01:17:27,659 --> 01:17:29,040
central discern team a certain team

1887
01:17:29,040 --> 01:17:31,020
includes uh several two teams actually

1888
01:17:31,020 --> 01:17:33,360
is quite a lot of him it's rather

1889
01:17:33,360 --> 01:17:37,080
complex so one team CERN is uh a certain

1890
01:17:37,080 --> 01:17:38,760
team is a high I think probably you guys

1891
01:17:38,760 --> 01:17:40,620
saw the email Auto billion list has a

1892
01:17:40,620 --> 01:17:43,199
project lead of the FPS project which is

1893
01:17:43,199 --> 01:17:44,820
essentially all the data in certainly

1894
01:17:44,820 --> 01:17:47,699
submitted to API system FPS will do all

1895
01:17:47,699 --> 01:17:50,219
the scheduling and also see Murray also

1896
01:17:50,219 --> 01:17:51,900
part of system improv stock his email as

1897
01:17:51,900 --> 01:17:53,699
well and this case the operating manager

1898
01:17:53,699 --> 01:17:55,679
so therefore that's one part of so the

1899
01:17:55,679 --> 01:17:57,600
question and of course the other part I

1900
01:17:57,600 --> 01:17:59,159
think involving in terms of people would

1901
01:17:59,159 --> 01:18:01,860
be the rules is on top of FTS so

1902
01:18:01,860 --> 01:18:03,659
basically will select which sources to

1903
01:18:03,659 --> 01:18:05,880
really transmit and FTS will collect all

1904
01:18:05,880 --> 01:18:07,860
the transmission I requests and then try

1905
01:18:07,860 --> 01:18:10,020
to schedule an email right away so for

1906
01:18:10,020 --> 01:18:12,540
this one in particular uh basically is

1907
01:18:12,540 --> 01:18:14,940
the main feature is a major missing part

1908
01:18:14,940 --> 01:18:16,980
about FTS of all Lucerne is you cannot

1909
01:18:16,980 --> 01:18:19,260
really control the the bandwidth usage

1910
01:18:19,260 --> 01:18:21,900
on every single link so therefore the

1911
01:18:21,900 --> 01:18:25,140
main main new use case of Auto here your

1912
01:18:25,140 --> 01:18:26,640
typical Auto will really consider with

1913
01:18:26,640 --> 01:18:28,260
like a source selection or peer

1914
01:18:28,260 --> 01:18:30,060
selection and so on actually here for

1915
01:18:30,060 --> 01:18:31,199
this particular use case which they

1916
01:18:31,199 --> 01:18:33,239
found to be very exciting uh for the

1917
01:18:33,239 --> 01:18:34,320
CERN is

1918
01:18:34,320 --> 01:18:37,080
you basically insert the data transfer

1919
01:18:37,080 --> 01:18:38,520
as you have Source you have destination

1920
01:18:38,520 --> 01:18:40,980
and you send it you send the data so

1921
01:18:40,980 --> 01:18:43,380
here is we use Auto really map The

1922
01:18:43,380 --> 01:18:45,120
Source destination basically to for

1923
01:18:45,120 --> 01:18:47,100
example dtn's data transfer node I'm

1924
01:18:47,100 --> 01:18:48,540
mapping into the freezer codings using

1925
01:18:48,540 --> 01:18:50,100
Auto using its own cost map and pass

1926
01:18:50,100 --> 01:18:51,840
Vector for mapping in the physical links

1927
01:18:51,840 --> 01:18:53,699
you use then application in the stock we

1928
01:18:53,699 --> 01:18:54,960
are running app layer you can really

1929
01:18:54,960 --> 01:18:57,300
click on usage all the transfers of all

1930
01:18:57,300 --> 01:18:59,820
like upper layer links and then you

1931
01:18:59,820 --> 01:19:01,739
compute a total user every protocol they

1932
01:19:01,739 --> 01:19:04,380
do the app the optimization control of

1933
01:19:04,380 --> 01:19:06,480
every 30 seconds or one minute then Auto

1934
01:19:06,480 --> 01:19:07,679
will tell you how much you're using on

1935
01:19:07,679 --> 01:19:09,420
every single physical link and then

1936
01:19:09,420 --> 01:19:11,000
essentially you can really convert into

1937
01:19:11,000 --> 01:19:13,440
uh for example you say hey I want to

1938
01:19:13,440 --> 01:19:15,239
make sure I'm not using this link and

1939
01:19:15,239 --> 01:19:18,179
model for example 10 gig or for example

1940
01:19:18,179 --> 01:19:20,159
the two links or for this organization

1941
01:19:20,159 --> 01:19:22,199
for these two experiments CMS or for

1942
01:19:22,199 --> 01:19:24,780
example whatever experiment and resource

1943
01:19:24,780 --> 01:19:25,860
should be one over two sort of for

1944
01:19:25,860 --> 01:19:27,420
basically that's FTS a specified

1945
01:19:27,420 --> 01:19:28,920
resource control go

1946
01:19:28,920 --> 01:19:31,020
and then we implemented this or the

1947
01:19:31,020 --> 01:19:32,280
algorithm essentially using Auto

1948
01:19:32,280 --> 01:19:35,400
information is mapping as a as a

1949
01:19:35,400 --> 01:19:37,320
constraint and then we Implement four

1950
01:19:37,320 --> 01:19:38,820
zero other gradient algorithm which is

1951
01:19:38,820 --> 01:19:40,380
actually quite exciting and I think we

1952
01:19:40,380 --> 01:19:42,300
did a demo over there then also a

1953
01:19:42,300 --> 01:19:43,920
composition framework to go from now not

1954
01:19:43,920 --> 01:19:45,420
only is there other but also first order

1955
01:19:45,420 --> 01:19:48,060
and the first order actually is the uh

1956
01:19:48,060 --> 01:19:50,880
is is uh George's work or bottleneck of

1957
01:19:50,880 --> 01:19:52,440
course right now it's a moment and the

1958
01:19:52,440 --> 01:19:54,239
opponent structure is now in in the

1959
01:19:54,239 --> 01:19:55,679
scope of Charter so we're most we're

1960
01:19:55,679 --> 01:19:57,300
focusing on first is really getting the

1961
01:19:57,300 --> 01:19:58,880
information control which is quite a new

1962
01:19:58,880 --> 01:20:01,860
interesting case we're hoping to you

1963
01:20:01,860 --> 01:20:03,840
guys probably saw the email on auto

1964
01:20:03,840 --> 01:20:06,000
meaning list so the goal is really get

1965
01:20:06,000 --> 01:20:07,679
the production and I think meeting is

1966
01:20:07,679 --> 01:20:09,300
from from both me high and also from

1967
01:20:09,300 --> 01:20:11,639
Mario so it's really getting the the

1968
01:20:11,639 --> 01:20:13,679
production data and and see how far we

1969
01:20:13,679 --> 01:20:15,120
can push

1970
01:20:15,120 --> 01:20:20,120
so um is this a

1971
01:20:20,120 --> 01:20:22,320
is this informing a network management

1972
01:20:22,320 --> 01:20:24,719
tool that's in repositioning the network

1973
01:20:24,719 --> 01:20:26,520
based on this data or is this a client

1974
01:20:26,520 --> 01:20:28,080
oriented

1975
01:20:28,080 --> 01:20:32,219
uh service so they uh I don't know what

1976
01:20:32,219 --> 01:20:34,560
means a clan also basically the workflow

1977
01:20:34,560 --> 01:20:36,480
is falling uh ft has to actually

1978
01:20:36,480 --> 01:20:39,120
centralize control logical centralized

1979
01:20:39,120 --> 01:20:41,159
of course uh if you want to read a

1980
01:20:41,159 --> 01:20:42,179
separate you might be about separately

1981
01:20:42,179 --> 01:20:43,560
so basically there's a synchronized

1982
01:20:43,560 --> 01:20:44,580
controller

1983
01:20:44,580 --> 01:20:48,000
running a holster basically you might be

1984
01:20:48,000 --> 01:20:50,340
a multiple and each one actually would

1985
01:20:50,340 --> 01:20:52,560
have huge database to get all the

1986
01:20:52,560 --> 01:20:54,360
transfer requests from across all the

1987
01:20:54,360 --> 01:20:57,120
data okay and this guy would essentially

1988
01:20:57,120 --> 01:20:59,400
become Auto Clan to really get the data

1989
01:20:59,400 --> 01:21:02,340
from yes net from all the networks to

1990
01:21:02,340 --> 01:21:04,320
really map from for example I'm sending

1991
01:21:04,320 --> 01:21:06,840
data from MIT to contact I'm sending

1992
01:21:06,840 --> 01:21:09,960
data from a Stanford to Sir sort of for

1993
01:21:09,960 --> 01:21:12,120
your map into the physical links and

1994
01:21:12,120 --> 01:21:14,460
then this query by a query of a client

1995
01:21:14,460 --> 01:21:16,020
and then this is server Central

1996
01:21:16,020 --> 01:21:17,639
dialogical server we'll do the

1997
01:21:17,639 --> 01:21:18,719
optimization and do the constraint

1998
01:21:18,719 --> 01:21:20,159
itself

1999
01:21:20,159 --> 01:21:22,139
so I don't know if that's it probably

2000
01:21:22,139 --> 01:21:23,880
that's problem that's a silver based

2001
01:21:23,880 --> 01:21:25,560
approach a lot of color centralized of

2002
01:21:25,560 --> 01:21:26,699
course they're all kind of make a

2003
01:21:26,699 --> 01:21:28,380
scalables separate into different like

2004
01:21:28,380 --> 01:21:30,480
partitions and so on but overall this is

2005
01:21:30,480 --> 01:21:32,520
like a logical as server control but

2006
01:21:32,520 --> 01:21:35,580
only using Auto client

2007
01:21:35,580 --> 01:21:38,880
okay so the the network management the

2008
01:21:38,880 --> 01:21:42,000
optimizer is acting as an auto client to

2009
01:21:42,000 --> 01:21:43,679
extract the information okay and

2010
01:21:43,679 --> 01:21:45,960
optimize every 30 seconds or one minute

2011
01:21:45,960 --> 01:21:49,820
that's a production code okay

2012
01:21:50,040 --> 01:21:52,679
all right so it so so the the user of

2013
01:21:52,679 --> 01:21:54,900
Alto is like the network manager itself

2014
01:21:54,900 --> 01:21:57,420
it is not the it is not like some person

2015
01:21:57,420 --> 01:22:00,420
trying to download data uh for initially

2016
01:22:00,420 --> 01:22:02,280
right now we're really using some like a

2017
01:22:02,280 --> 01:22:04,739
data and uh we had a discussion with

2018
01:22:04,739 --> 01:22:06,120
Qing and I think we're also going to

2019
01:22:06,120 --> 01:22:07,739
have a very quick meeting with India

2020
01:22:07,739 --> 01:22:10,320
manga who is the director of the esnet

2021
01:22:10,320 --> 01:22:12,060
which is the US part of this

2022
01:22:12,060 --> 01:22:14,460
infrastructure and initially that's why

2023
01:22:14,460 --> 01:22:15,780
I asked a question that initial the

2024
01:22:15,780 --> 01:22:17,580
actor teen suggestion from last week is

2025
01:22:17,580 --> 01:22:19,199
can I just give you a file and then

2026
01:22:19,199 --> 01:22:20,820
that's your data source you just load

2027
01:22:20,820 --> 01:22:22,980
the auto server and then send to it yeah

2028
01:22:22,980 --> 01:22:25,440
okay thanks

2029
01:22:25,440 --> 01:22:28,920
okay uh thanks Richard uh moving on to

2030
01:22:28,920 --> 01:22:30,179
next one

2031
01:22:30,179 --> 01:22:32,280
yeah we can actually move on to the next

2032
01:22:32,280 --> 01:22:34,080
one so um

2033
01:22:34,080 --> 01:22:36,000
and yeah we're gonna move to the next

2034
01:22:36,000 --> 01:22:37,199
one so there's a

2035
01:22:37,199 --> 01:22:39,060
a paper that's uh going to be published

2036
01:22:39,060 --> 01:22:41,400
at sitcom Knight on on this deployment

2037
01:22:41,400 --> 01:22:43,139
as well

2038
01:22:43,139 --> 01:22:45,780
um and uh we'll put another demo in the

2039
01:22:45,780 --> 01:22:47,580
next hackathon 114 that will continue to

2040
01:22:47,580 --> 01:22:49,560
progress in that deployment

2041
01:22:49,560 --> 01:22:51,120
um yeah the next one is actually now the

2042
01:22:51,120 --> 01:22:53,960
California deployment service

2043
01:22:55,920 --> 01:22:58,800
hello this is another Circle what will

2044
01:22:58,800 --> 01:23:00,840
be presented on Friday in the media

2045
01:23:00,840 --> 01:23:03,239
operations working group so it's the the

2046
01:23:03,239 --> 01:23:05,880
integration of the uh Alto in the

2047
01:23:05,880 --> 01:23:07,260
telephonica network in order to expose

2048
01:23:07,260 --> 01:23:08,880
the capabilities to the telephonic acid

2049
01:23:08,880 --> 01:23:11,120
again

2050
01:23:12,080 --> 01:23:14,219
so it would be the client of the

2051
01:23:14,219 --> 01:23:15,960
information that will be provided by by

2052
01:23:15,960 --> 01:23:17,940
the auto server in essentially

2053
01:23:17,940 --> 01:23:19,020
collecting the information from the

2054
01:23:19,020 --> 01:23:20,280
telephonica network

2055
01:23:20,280 --> 01:23:22,739
so what we you can see here a very basic

2056
01:23:22,739 --> 01:23:24,600
example this was some some tests in the

2057
01:23:24,600 --> 01:23:26,340
lab so we are now in the in the process

2058
01:23:26,340 --> 01:23:28,860
of uh moving this into the production

2059
01:23:28,860 --> 01:23:31,020
Network I will show later so essentially

2060
01:23:31,020 --> 01:23:33,900
here what we identify is we are assigned

2061
01:23:33,900 --> 01:23:36,540
pids for the streamer the cdns streamers

2062
01:23:36,540 --> 01:23:39,780
and also we have pids for um identity

2063
01:23:39,780 --> 01:23:41,400
final connecting let's say the

2064
01:23:41,400 --> 01:23:42,659
preferences of the customers of

2065
01:23:42,659 --> 01:23:44,960
telephonica networks in the different

2066
01:23:44,960 --> 01:23:47,400
Central offices in the different pops

2067
01:23:47,400 --> 01:23:51,000
right so the request routing logic of

2068
01:23:51,000 --> 01:23:53,699
the telephonica CDN takes into account a

2069
01:23:53,699 --> 01:23:56,040
number of of inputs you know the

2070
01:23:56,040 --> 01:23:58,260
streamer State Tools the load level and

2071
01:23:58,260 --> 01:24:00,239
so always from the perspective of the

2072
01:24:00,239 --> 01:24:02,400
CDN so this is the idea is to complement

2073
01:24:02,400 --> 01:24:03,900
this with the perspective of the network

2074
01:24:03,900 --> 01:24:06,960
the where the the customers are in

2075
01:24:06,960 --> 01:24:08,940
principle so in such a way that we can

2076
01:24:08,940 --> 01:24:10,380
determine what would be the number of

2077
01:24:10,380 --> 01:24:12,120
hops right now with the capabilities of

2078
01:24:12,120 --> 01:24:14,280
telephonic of Alto that we are playing

2079
01:24:14,280 --> 01:24:17,159
with right now simply the number of hops

2080
01:24:17,159 --> 01:24:18,960
from the streamers the idea would be to

2081
01:24:18,960 --> 01:24:20,820
enrich that information with performance

2082
01:24:20,820 --> 01:24:22,260
metrics and all the capabilities that

2083
01:24:22,260 --> 01:24:24,300
are being developed in Alto in general

2084
01:24:24,300 --> 01:24:26,340
right so essentially the point is with

2085
01:24:26,340 --> 01:24:28,500
this information the telephonic acidien

2086
01:24:28,500 --> 01:24:31,679
will consume the the topological

2087
01:24:31,679 --> 01:24:33,900
information identifying where what are

2088
01:24:33,900 --> 01:24:35,219
the practices of the customer and then

2089
01:24:35,219 --> 01:24:38,100
taking decisions not only based on the

2090
01:24:38,100 --> 01:24:40,739
uh servers of the CDN stream and

2091
01:24:40,739 --> 01:24:42,600
information but also on the network

2092
01:24:42,600 --> 01:24:44,520
information itself for taking the best

2093
01:24:44,520 --> 01:24:46,500
decision at the time of delivering the

2094
01:24:46,500 --> 01:24:49,500
content next please

2095
01:24:49,500 --> 01:24:51,000
so this is the process that we are

2096
01:24:51,000 --> 01:24:53,040
following we have started with uh some

2097
01:24:53,040 --> 01:24:55,980
uh I mean really playing with Alto in

2098
01:24:55,980 --> 01:24:58,080
the in the technology lab so essentially

2099
01:24:58,080 --> 01:25:00,179
very basic setups I will detail later on

2100
01:25:00,179 --> 01:25:02,100
as well so very simplistic Network just

2101
01:25:02,100 --> 01:25:03,840
for understanding the capabilities and

2102
01:25:03,840 --> 01:25:06,300
the feasibility and viability of this

2103
01:25:06,300 --> 01:25:07,920
approach then we move to the

2104
01:25:07,920 --> 01:25:10,380
pre-production lab facing a real

2105
01:25:10,380 --> 01:25:12,000
configuration of the network and the

2106
01:25:12,000 --> 01:25:14,219
complexities that I will detail and the

2107
01:25:14,219 --> 01:25:15,860
point where we are now is just

2108
01:25:15,860 --> 01:25:18,360
previously to introducing into the

2109
01:25:18,360 --> 01:25:20,100
production Network so we are fighting

2110
01:25:20,100 --> 01:25:22,340
with all the rules about security

2111
01:25:22,340 --> 01:25:25,260
hardening the server and so on so far so

2112
01:25:25,260 --> 01:25:27,719
the idea or the expectation that we have

2113
01:25:27,719 --> 01:25:30,360
is to during this summer to go into

2114
01:25:30,360 --> 01:25:33,420
production and I hope to be able to

2115
01:25:33,420 --> 01:25:35,580
report in in next ATF the results that

2116
01:25:35,580 --> 01:25:38,219
we can collect it's important to uh I

2117
01:25:38,219 --> 01:25:39,719
mean in in all the pre-production lab

2118
01:25:39,719 --> 01:25:42,179
and so we are playing with the real

2119
01:25:42,179 --> 01:25:44,760
configurations but we don't have the the

2120
01:25:44,760 --> 01:25:46,560
good insight about the scalability and

2121
01:25:46,560 --> 01:25:48,239
so so once we move to into the

2122
01:25:48,239 --> 01:25:51,000
production level we will get more starts

2123
01:25:51,000 --> 01:25:52,880
and more information that we would like

2124
01:25:52,880 --> 01:25:55,739
to share with all of you just to I mean

2125
01:25:55,739 --> 01:25:58,320
to see what is a a real deployment just

2126
01:25:58,320 --> 01:26:01,199
for you to to understand what we we are

2127
01:26:01,199 --> 01:26:03,120
talking about the real deployment this

2128
01:26:03,120 --> 01:26:04,100
would be

2129
01:26:04,100 --> 01:26:07,320
maybe the idea will be for for alto to

2130
01:26:07,320 --> 01:26:10,080
handle around 3000 routers or something

2131
01:26:10,080 --> 01:26:11,760
like that simple production we are

2132
01:26:11,760 --> 01:26:14,100
talking about 40 routers something like

2133
01:26:14,100 --> 01:26:16,380
this so the the

2134
01:26:16,380 --> 01:26:19,440
the the next step is basically to

2135
01:26:19,440 --> 01:26:21,780
understand the scalability and and all

2136
01:26:21,780 --> 01:26:22,800
this stuff

2137
01:26:22,800 --> 01:26:25,020
and next please

2138
01:26:25,020 --> 01:26:27,300
so this has the very last slide I would

2139
01:26:27,300 --> 01:26:28,920
like just to comment where what was

2140
01:26:28,920 --> 01:26:30,780
somehow the the technical problems that

2141
01:26:30,780 --> 01:26:33,239
we faced and somehow they yeah the the

2142
01:26:33,239 --> 01:26:36,199
different engineering

2143
01:26:36,199 --> 01:26:38,280
fights that we have with the with this

2144
01:26:38,280 --> 01:26:40,679
deployment in the technology lab test

2145
01:26:40,679 --> 01:26:43,440
essentially we started with a Ultra

2146
01:26:43,440 --> 01:26:46,620
module in open daylight we need to adapt

2147
01:26:46,620 --> 01:26:50,880
that because open daylight module was

2148
01:26:50,880 --> 01:26:52,920
based on nldp so there was some

2149
01:26:52,920 --> 01:26:54,719
transition to start collecting

2150
01:26:54,719 --> 01:26:57,000
information from from bgp

2151
01:26:57,000 --> 01:26:59,940
we in the technology lab we Face a mono

2152
01:26:59,940 --> 01:27:01,739
vendor router scenario with virtualized

2153
01:27:01,739 --> 01:27:04,679
routers so something somehow a lab

2154
01:27:04,679 --> 01:27:07,020
environment for sure simplistic network

2155
01:27:07,020 --> 01:27:09,780
configuration with just single IDP ospf

2156
01:27:09,780 --> 01:27:11,340
in this case single autonomous system

2157
01:27:11,340 --> 01:27:13,380
and simple metrics like the hop count

2158
01:27:13,380 --> 01:27:16,560
right and uh Alto was connected

2159
01:27:16,560 --> 01:27:18,840
essentially to one to some of the

2160
01:27:18,840 --> 01:27:20,760
routers acting as rock reflectors so

2161
01:27:20,760 --> 01:27:21,540
very

2162
01:27:21,540 --> 01:27:23,699
um constrained environment then we moved

2163
01:27:23,699 --> 01:27:26,100
to the production environment

2164
01:27:26,100 --> 01:27:29,219
we migrated from the a bdp module from

2165
01:27:29,219 --> 01:27:32,820
odl to the xrpgp we started finding

2166
01:27:32,820 --> 01:27:35,219
issues in in xvp we write a number of

2167
01:27:35,219 --> 01:27:36,780
tickets that have been already solved

2168
01:27:36,780 --> 01:27:39,320
especially for bepls so

2169
01:27:39,320 --> 01:27:42,360
I mentioned later okay in this

2170
01:27:42,360 --> 01:27:44,040
pre-production environment we started

2171
01:27:44,040 --> 01:27:45,659
playing with multivendor environments

2172
01:27:45,659 --> 01:27:48,480
multivender our routers physical routers

2173
01:27:48,480 --> 01:27:50,159
you know so moving from the vehicle to

2174
01:27:50,159 --> 01:27:52,739
the physical dedicated Alto server and

2175
01:27:52,739 --> 01:27:54,420
also facing the complexity of the real

2176
01:27:54,420 --> 01:27:56,219
Network for the particular affiliate of

2177
01:27:56,219 --> 01:27:57,840
telefonica where we are doing this this

2178
01:27:57,840 --> 01:28:00,300
test there is a this is a network that

2179
01:28:00,300 --> 01:28:02,100
has a multiple private autonomous

2180
01:28:02,100 --> 01:28:04,199
systems and also for sure public thermal

2181
01:28:04,199 --> 01:28:06,780
system they also is a network that is

2182
01:28:06,780 --> 01:28:09,060
not a Contin IP continuous and mpls

2183
01:28:09,060 --> 01:28:11,280
Continuum so facing different issues in

2184
01:28:11,280 --> 01:28:13,980
this respect also combining ospf and

2185
01:28:13,980 --> 01:28:16,860
Isis and and we just have to also to

2186
01:28:16,860 --> 01:28:18,360
take into account most of the

2187
01:28:18,360 --> 01:28:21,000
sophisticated metrics in igp so not only

2188
01:28:21,000 --> 01:28:24,179
the a number of hops but essentially the

2189
01:28:24,179 --> 01:28:26,040
metric that has been defined in the igp

2190
01:28:26,040 --> 01:28:28,440
for taking for building the cost map and

2191
01:28:28,440 --> 01:28:31,139
the Lego map and then also connecting to

2192
01:28:31,139 --> 01:28:34,080
different reflectors one for bgp

2193
01:28:34,080 --> 01:28:36,120
sessions in order to collect the IP

2194
01:28:36,120 --> 01:28:37,679
prefixes of the different customers in

2195
01:28:37,679 --> 01:28:39,960
the different pops of telefonica and

2196
01:28:39,960 --> 01:28:42,840
another reflector for a bgpls in order

2197
01:28:42,840 --> 01:28:44,940
to retrieve the topology and be able to

2198
01:28:44,940 --> 01:28:46,920
build the network map

2199
01:28:46,920 --> 01:28:49,860
okay so the the very last steps is the

2200
01:28:49,860 --> 01:28:51,120
integration with the production Network

2201
01:28:51,120 --> 01:28:53,940
so we are now in in the process of being

2202
01:28:53,940 --> 01:28:55,739
adapted to the production processes and

2203
01:28:55,739 --> 01:28:58,739
rules the security the addressing the

2204
01:28:58,739 --> 01:29:00,600
internal routing of the network all this

2205
01:29:00,600 --> 01:29:02,400
stuff that you can imagine so hard and

2206
01:29:02,400 --> 01:29:03,540
in all the environment in order to

2207
01:29:03,540 --> 01:29:06,139
protect from external attacks

2208
01:29:06,139 --> 01:29:08,880
the point now in the production Network

2209
01:29:08,880 --> 01:29:11,219
in the in the routing part is that the

2210
01:29:11,219 --> 01:29:13,800
activation of bepls is limited so we

2211
01:29:13,800 --> 01:29:15,239
will start with a region of the network

2212
01:29:15,239 --> 01:29:17,340
and then we will start progressively

2213
01:29:17,340 --> 01:29:19,080
activating the apls in the rest of the

2214
01:29:19,080 --> 01:29:20,159
network in such a way that we can

2215
01:29:20,159 --> 01:29:22,320
incorporate all the information step by

2216
01:29:22,320 --> 01:29:24,420
step and then also helping us to

2217
01:29:24,420 --> 01:29:26,840
understand the scalability

2218
01:29:26,840 --> 01:29:30,420
aspects and so and well we will coexist

2219
01:29:30,420 --> 01:29:31,860
with many other services for sure and

2220
01:29:31,860 --> 01:29:34,739
the expected deployment is the completed

2221
01:29:34,739 --> 01:29:36,780
the department for Q3 so we're trying to

2222
01:29:36,780 --> 01:29:40,500
to get the to bring here in idf115 the

2223
01:29:40,500 --> 01:29:42,659
results for all of you that's all from

2224
01:29:42,659 --> 01:29:44,960
this I think

2225
01:29:44,960 --> 01:29:47,580
just one location for you for the what

2226
01:29:47,580 --> 01:29:49,380
you have presented so far so yes thank

2227
01:29:49,380 --> 01:29:50,880
you for sharing this interesting data

2228
01:29:50,880 --> 01:29:52,320
which is really showing that there's

2229
01:29:52,320 --> 01:29:54,120
something which is really concrete and

2230
01:29:54,120 --> 01:29:55,380
really happening with the with the

2231
01:29:55,380 --> 01:29:57,659
protocol so I really invite the others

2232
01:29:57,659 --> 01:29:59,699
who has experience with the the protocol

2233
01:29:59,699 --> 01:30:02,340
to share with that so I understand that

2234
01:30:02,340 --> 01:30:03,600
you have I would say some of the issues

2235
01:30:03,600 --> 01:30:04,920
for the integration and so on which is

2236
01:30:04,920 --> 01:30:07,620
just I would say as expected so if we

2237
01:30:07,620 --> 01:30:09,719
just focus on the pure

2238
01:30:09,719 --> 01:30:12,060
Alto I would say specification and so on

2239
01:30:12,060 --> 01:30:14,580
did you encounter so far I would say

2240
01:30:14,580 --> 01:30:16,500
animation part or something that needs

2241
01:30:16,500 --> 01:30:18,659
to be clarified in the specification

2242
01:30:18,659 --> 01:30:20,639
itself that need to be more input from

2243
01:30:20,639 --> 01:30:22,980
the working group or it's just business

2244
01:30:22,980 --> 01:30:24,739
as usual business

2245
01:30:24,739 --> 01:30:27,179
as usual so the most problematic thing

2246
01:30:27,179 --> 01:30:30,239
was to to parse the information from the

2247
01:30:30,239 --> 01:30:33,540
products of SPF Isis and and so so no

2248
01:30:33,540 --> 01:30:36,780
special issue with the the the fact of

2249
01:30:36,780 --> 01:30:38,219
building an hour map and the Cosmetics

2250
01:30:38,219 --> 01:30:39,719
was more or less a straightforward it

2251
01:30:39,719 --> 01:30:40,980
was basically the passing of the

2252
01:30:40,980 --> 01:30:43,380
protocols and trying to to expose

2253
01:30:43,380 --> 01:30:44,639
they'll say the information of the

2254
01:30:44,639 --> 01:30:46,860
network to be digested by Alto once this

2255
01:30:46,860 --> 01:30:49,980
was solved the process of Alto was

2256
01:30:49,980 --> 01:30:51,480
straightforward yeah and for the

2257
01:30:51,480 --> 01:30:53,280
performance perspective for example how

2258
01:30:53,280 --> 01:30:55,980
Alto is behaving how the request and

2259
01:30:55,980 --> 01:30:57,500
there's is there any I would say

2260
01:30:57,500 --> 01:31:00,000
shortcoming the way the operation of the

2261
01:31:00,000 --> 01:31:01,380
protocol is currently designed is there

2262
01:31:01,380 --> 01:31:02,880
something for example enhancement that

2263
01:31:02,880 --> 01:31:04,860
we can consider in the future I think

2264
01:31:04,860 --> 01:31:06,120
actually it's important this is for me

2265
01:31:06,120 --> 01:31:08,100
the the key part that we need to focus

2266
01:31:08,100 --> 01:31:09,659
on and if you have input that will

2267
01:31:09,659 --> 01:31:12,300
really appreciate it by now not in

2268
01:31:12,300 --> 01:31:14,040
anything special so take into account

2269
01:31:14,040 --> 01:31:17,040
that we or we are in pre-production we

2270
01:31:17,040 --> 01:31:18,300
are leaving the production from moving

2271
01:31:18,300 --> 01:31:19,739
to production I'm sure that in the

2272
01:31:19,739 --> 01:31:21,300
production we will face more

2273
01:31:21,300 --> 01:31:23,040
complexities because the network will be

2274
01:31:23,040 --> 01:31:25,560
huge by now we are dealing with uh four

2275
01:31:25,560 --> 01:31:28,460
30 40 routers is something visible

2276
01:31:28,460 --> 01:31:31,400
regarding

2277
01:31:31,400 --> 01:31:34,560
stations or considerations for alto yeah

2278
01:31:34,560 --> 01:31:36,120
I think that the next step would be to

2279
01:31:36,120 --> 01:31:37,679
include performance metrics on top of

2280
01:31:37,679 --> 01:31:39,300
the picture so not only taking into

2281
01:31:39,300 --> 01:31:40,860
account the Hops not only taking into

2282
01:31:40,860 --> 01:31:42,420
account the ADP metrics but also taking

2283
01:31:42,420 --> 01:31:44,280
the account the the situation of the

2284
01:31:44,280 --> 01:31:46,020
network in such a way that the selection

2285
01:31:46,020 --> 01:31:48,480
of the streamer could be richer in the

2286
01:31:48,480 --> 01:31:51,000
sense of not only considering the path I

2287
01:31:51,000 --> 01:31:52,679
mean the length of the path but also the

2288
01:31:52,679 --> 01:31:54,120
characteristics of the path so this is

2289
01:31:54,120 --> 01:31:55,679
the next step we have a number of use

2290
01:31:55,679 --> 01:31:58,380
cases here on mine probably is soon for

2291
01:31:58,380 --> 01:32:01,800
for this talking uh yeah so we are

2292
01:32:01,800 --> 01:32:03,300
concentrating on the deployment but the

2293
01:32:03,300 --> 01:32:04,739
idea will be to enrich the decisions at

2294
01:32:04,739 --> 01:32:06,659
the end okay and one last one last

2295
01:32:06,659 --> 01:32:08,820
question on this one um about the the

2296
01:32:08,820 --> 01:32:10,380
bootstrap in a different regression I

2297
01:32:10,380 --> 01:32:12,300
would say how you are automating the way

2298
01:32:12,300 --> 01:32:14,100
the the various engines are currently

2299
01:32:14,100 --> 01:32:16,500
running do you have but now it's

2300
01:32:16,500 --> 01:32:18,500
something manual is I mean we need to

2301
01:32:18,500 --> 01:32:24,719
somehow we are in in a phase of uh how

2302
01:32:24,719 --> 01:32:27,840
to say uh being sure that this is we are

2303
01:32:27,840 --> 01:32:29,100
sure that this is the way to follow but

2304
01:32:29,100 --> 01:32:30,900
the next step will be to integrate this

2305
01:32:30,900 --> 01:32:33,120
with the logic of the CDN so automatic

2306
01:32:33,120 --> 01:32:34,860
automating all of this from the CDM

2307
01:32:34,860 --> 01:32:37,380
perspective so essentially that we can

2308
01:32:37,380 --> 01:32:39,179
um retrieve the automatically and

2309
01:32:39,179 --> 01:32:41,219
frequently and so the the information

2310
01:32:41,219 --> 01:32:43,500
for that so for rental to the network no

2311
01:32:43,500 --> 01:32:48,239
we don't expect special things it would

2312
01:32:48,239 --> 01:32:50,520
be more from the client for the the tcd

2313
01:32:50,520 --> 01:32:53,100
and the refrigerant towards to automate

2314
01:32:53,100 --> 01:32:54,780
all the process to select the streamers

2315
01:32:54,780 --> 01:32:56,820
and so on okay thank you thank you Luis

2316
01:32:56,820 --> 01:32:59,159
thank you

2317
01:32:59,159 --> 01:33:00,440
okay

2318
01:33:00,440 --> 01:33:03,239
I think we need to yeah I know we hit

2319
01:33:03,239 --> 01:33:04,980
the timeline right for this one

2320
01:33:04,980 --> 01:33:07,139
so for next one actually do you want to

2321
01:33:07,139 --> 01:33:10,500
see young or you want it so um I was

2322
01:33:10,500 --> 01:33:11,639
going to talk a little bit about the the

2323
01:33:11,639 --> 01:33:16,380
BRP uh deployment okay so um just real

2324
01:33:16,380 --> 01:33:18,420
quick uh so the next one

2325
01:33:18,420 --> 01:33:20,540
um

2326
01:33:21,860 --> 01:33:24,060
yeah just to put things a little bit in

2327
01:33:24,060 --> 01:33:25,620
perspective so I really should talk

2328
01:33:25,620 --> 01:33:27,120
about

2329
01:33:27,120 --> 01:33:30,860
um your CERN which is the problem of the

2330
01:33:30,860 --> 01:33:33,060
large-scale data transfers from from

2331
01:33:33,060 --> 01:33:36,719
CERN to Global globally uh to scientists

2332
01:33:36,719 --> 01:33:39,120
are uh and research labs

2333
01:33:39,120 --> 01:33:42,239
uh run the around the world

2334
01:33:42,239 --> 01:33:43,560
um now we're also looking at another

2335
01:33:43,560 --> 01:33:45,060
deployment at the Pacific research

2336
01:33:45,060 --> 01:33:46,620
platform

2337
01:33:46,620 --> 01:33:47,580
um

2338
01:33:47,580 --> 01:33:49,980
um right here but in general the idea is

2339
01:33:49,980 --> 01:33:53,280
that um there is a interest in in

2340
01:33:53,280 --> 01:33:55,860
expanding through science networks so

2341
01:33:55,860 --> 01:33:58,920
um we're also collaborating with esnet

2342
01:33:58,920 --> 01:34:01,199
um also in the PRP deployment and as

2343
01:34:01,199 --> 01:34:02,820
Richard mentioned uh we're meeting with

2344
01:34:02,820 --> 01:34:04,679
uh indoor manga

2345
01:34:04,679 --> 01:34:07,139
um executive director of the esnet uh to

2346
01:34:07,139 --> 01:34:08,580
discuss discuss these deployments this

2347
01:34:08,580 --> 01:34:11,100
is a family of um of science networks

2348
01:34:11,100 --> 01:34:13,980
that um their architecture is shared so

2349
01:34:13,980 --> 01:34:16,080
if we deploy I'll turn and show value

2350
01:34:16,080 --> 01:34:19,440
then it can be deployed um in in the

2351
01:34:19,440 --> 01:34:21,540
rest of the networks as well so that's

2352
01:34:21,540 --> 01:34:23,520
an approach and the potential

2353
01:34:23,520 --> 01:34:25,260
um upside here

2354
01:34:25,260 --> 01:34:28,139
um so next one just real quick on this

2355
01:34:28,139 --> 01:34:31,020
um the prps what this networks are doing

2356
01:34:31,020 --> 01:34:32,460
also they are extending to the edge so

2357
01:34:32,460 --> 01:34:34,620
they actually extending the networks

2358
01:34:34,620 --> 01:34:36,480
onto the 5G domain and building the edge

2359
01:34:36,480 --> 01:34:37,739
Cloud as well whether it's the

2360
01:34:37,739 --> 01:34:40,980
department of energy es9 Network you

2361
01:34:40,980 --> 01:34:43,260
know building sensors and collecting

2362
01:34:43,260 --> 01:34:44,820
that through Wireless and then building

2363
01:34:44,820 --> 01:34:49,020
the the 5G Edge Cloud

2364
01:34:49,020 --> 01:34:51,780
um and an example is a PRP that's um

2365
01:34:51,780 --> 01:34:55,440
building a 5G uh Edge Cloud I do CSD and

2366
01:34:55,440 --> 01:34:58,199
other other universities and NYU and

2367
01:34:58,199 --> 01:35:00,420
other universities in the US as well and

2368
01:35:00,420 --> 01:35:02,219
so they're looking at applications like

2369
01:35:02,219 --> 01:35:04,080
the Holodeck

2370
01:35:04,080 --> 01:35:08,100
um vehicle networks and um and

2371
01:35:08,100 --> 01:35:09,900
um in general you know the metaverse or

2372
01:35:09,900 --> 01:35:11,820
augmented reality

2373
01:35:11,820 --> 01:35:13,980
um and so in this project uh you know

2374
01:35:13,980 --> 01:35:15,719
there's an ecosystem of collaborators

2375
01:35:15,719 --> 01:35:17,940
coming in this Caltech

2376
01:35:17,940 --> 01:35:19,699
um esnet

2377
01:35:19,699 --> 01:35:23,520
and and PRP and others and and quagmas

2378
01:35:23,520 --> 01:35:25,739
actually involved here as well and so

2379
01:35:25,739 --> 01:35:27,900
moving on the next one

2380
01:35:27,900 --> 01:35:29,900
um

2381
01:35:30,060 --> 01:35:32,520
yeah and this is about closing the loop

2382
01:35:32,520 --> 01:35:34,080
here building what we call sort of the

2383
01:35:34,080 --> 01:35:36,659
edge Loop so from a network you have

2384
01:35:36,659 --> 01:35:38,280
first visibility then you apply

2385
01:35:38,280 --> 01:35:40,080
intelligence and then control back to

2386
01:35:40,080 --> 01:35:41,880
the network and this orchestration as

2387
01:35:41,880 --> 01:35:44,520
well we believe that Alto is um uh you

2388
01:35:44,520 --> 01:35:46,020
know suitable for for visibility and

2389
01:35:46,020 --> 01:35:48,480
that's um the the deployment here the

2390
01:35:48,480 --> 01:35:51,360
PRP and basically it's building this

2391
01:35:51,360 --> 01:35:54,540
architecture and has Alto as the element

2392
01:35:54,540 --> 01:35:58,500
to enable this visibility here in the

2393
01:35:58,500 --> 01:36:00,480
intelligence uh we're looking at um

2394
01:36:00,480 --> 01:36:02,280
putting bottlenecker structure analysis

2395
01:36:02,280 --> 01:36:04,739
basically to be able to make optimize uh

2396
01:36:04,739 --> 01:36:07,080
decisions whether it's routing or rate

2397
01:36:07,080 --> 01:36:09,840
limiting or service placement and then

2398
01:36:09,840 --> 01:36:10,980
controllability could include

2399
01:36:10,980 --> 01:36:12,840
Technologies like segment routing

2400
01:36:12,840 --> 01:36:15,780
in order to help steer the flows so

2401
01:36:15,780 --> 01:36:18,480
moving on to the next one

2402
01:36:18,480 --> 01:36:20,460
um yeah and so that's just then the next

2403
01:36:20,460 --> 01:36:22,320
one I don't know if we have uh yeah for

2404
01:36:22,320 --> 01:36:26,460
ZN to make some yeah maybe we can just a

2405
01:36:26,460 --> 01:36:27,600
note on the PRP we're going to be

2406
01:36:27,600 --> 01:36:29,580
putting a demo in the next hackathon

2407
01:36:29,580 --> 01:36:32,040
that's the goal for for that deployment

2408
01:36:32,040 --> 01:36:35,520
and also at SC 22 also in November in

2409
01:36:35,520 --> 01:36:37,699
Dallas

2410
01:36:41,780 --> 01:36:44,699
available yeah all right so young are

2411
01:36:44,699 --> 01:36:46,619
you online do you want to present have a

2412
01:36:46,619 --> 01:36:49,460
quick maybe two minutes

2413
01:36:49,460 --> 01:36:53,840
okay I will I will introduce my project

2414
01:36:53,840 --> 01:37:00,139
uh we know in the defunter mode uh SDA

2415
01:37:00,139 --> 01:37:04,500
controller only select one path every

2416
01:37:04,500 --> 01:37:11,699
time for MP quick at the MP TCP uh there

2417
01:37:11,699 --> 01:37:16,340
are lots of past uh not working in the

2418
01:37:16,340 --> 01:37:22,560
SDA so my idea is the people or the past

2419
01:37:22,560 --> 01:37:26,820
working uh by uh

2420
01:37:26,820 --> 01:37:32,659
by algo so my uh serve is

2421
01:37:32,659 --> 01:37:38,060
correct Network detours and the

2422
01:37:38,060 --> 01:37:43,340
eo2 climate is the controller in SDA

2423
01:37:43,340 --> 01:37:46,520
and I

2424
01:37:46,520 --> 01:37:50,880
allocated mptcp and or MP quicker

2425
01:37:50,880 --> 01:37:53,239
package to suitable

2426
01:37:53,239 --> 01:37:58,040
paths so I

2427
01:38:00,050 --> 01:38:03,169
[Music]

2428
01:38:11,840 --> 01:38:14,340
next page

2429
01:38:14,340 --> 01:38:19,100
yeah so the result is is that

2430
01:38:19,100 --> 01:38:22,760
the root is our

2431
01:38:22,760 --> 01:38:28,199
mptcp and MP3 is higher uh that without

2432
01:38:28,199 --> 01:38:32,280
eo2 it especially in per

2433
01:38:32,280 --> 01:38:35,159
um Network we can see from the picture

2434
01:38:35,159 --> 01:38:37,400
uh lost right

2435
01:38:37,400 --> 01:38:39,960
higher uh

2436
01:38:39,960 --> 01:38:42,119
to

2437
01:38:42,119 --> 01:38:46,020
the throughput is defined

2438
01:38:46,020 --> 01:38:49,920
now thank you

2439
01:38:49,920 --> 01:38:52,940
okay thank you

2440
01:38:54,119 --> 01:38:57,239
and then you have the idea we can take

2441
01:38:57,239 --> 01:38:59,580
this offline I guess this is YouTube

2442
01:38:59,580 --> 01:39:01,800
recording you can access and uh the

2443
01:39:01,800 --> 01:39:03,420
slide decks from yesterday actually from

2444
01:39:03,420 --> 01:39:06,239
Sunday so I think this concludes this um

2445
01:39:06,239 --> 01:39:10,260
yeah talk thanks thank you so next we

2446
01:39:10,260 --> 01:39:11,820
will have Luis

2447
01:39:11,820 --> 01:39:15,019
to give representation

2448
01:39:23,159 --> 01:39:25,380
thank you

2449
01:39:25,380 --> 01:39:27,139
foreign

2450
01:39:27,139 --> 01:39:30,840
yes this presentation is I will cover

2451
01:39:30,840 --> 01:39:33,119
three drafts the idea the overall idea

2452
01:39:33,119 --> 01:39:35,040
the working idea is to consider Alto as

2453
01:39:35,040 --> 01:39:36,960
a network special function for for ATF

2454
01:39:36,960 --> 01:39:39,239
Technologies and we will cover the data

2455
01:39:39,239 --> 01:39:41,940
that you can then see listed there and I

2456
01:39:41,940 --> 01:39:44,520
will do on behalf of my co-authors Danny

2457
01:39:44,520 --> 01:39:47,280
Christian Serene and anshu Fang next

2458
01:39:47,280 --> 01:39:48,360
please

2459
01:39:48,360 --> 01:39:49,800
so in order to present a relationship

2460
01:39:49,800 --> 01:39:53,219
among these routes uh the the working

2461
01:39:53,219 --> 01:39:55,199
one will be the the one which is

2462
01:39:55,199 --> 01:39:57,179
entitled IDF and our special function so

2463
01:39:57,179 --> 01:40:00,600
the idea is to to consider Alto as

2464
01:40:00,600 --> 01:40:03,480
playing this role or the the special

2465
01:40:03,480 --> 01:40:05,639
function that is able to expose

2466
01:40:05,639 --> 01:40:07,380
capabilities to the network 2

2467
01:40:07,380 --> 01:40:09,300
applications external or internal

2468
01:40:09,300 --> 01:40:11,219
applications such a way that can consume

2469
01:40:11,219 --> 01:40:14,100
what the uh what the network can provide

2470
01:40:14,100 --> 01:40:16,020
what kind of information can provide the

2471
01:40:16,020 --> 01:40:18,179
network here we have the two examples

2472
01:40:18,179 --> 01:40:19,860
that are the other two drafts involved

2473
01:40:19,860 --> 01:40:22,139
that will be many others right one

2474
01:40:22,139 --> 01:40:23,340
example could be for instance to

2475
01:40:23,340 --> 01:40:25,560
determine the more convenient compute

2476
01:40:25,560 --> 01:40:28,260
environment for instantiating any kind

2477
01:40:28,260 --> 01:40:29,820
of application functions or whatever

2478
01:40:29,820 --> 01:40:32,699
this is covered by the service edge the

2479
01:40:32,699 --> 01:40:35,460
draft so essentially thinking on

2480
01:40:35,460 --> 01:40:38,340
exposing compute capabilities CPU RAM

2481
01:40:38,340 --> 01:40:41,460
storage and so on so far the other draft

2482
01:40:41,460 --> 01:40:44,040
and the one entitles every functions

2483
01:40:44,040 --> 01:40:45,780
follow the same approach but with the

2484
01:40:45,780 --> 01:40:49,080
idea of exposing where service functions

2485
01:40:49,080 --> 01:40:50,940
are and also the characteristics to

2486
01:40:50,940 --> 01:40:53,100
reach those service functions here we

2487
01:40:53,100 --> 01:40:54,840
can consider isolated service functions

2488
01:40:54,840 --> 01:40:56,460
or we could consider even service

2489
01:40:56,460 --> 01:40:58,260
function chains so it's such a way the

2490
01:40:58,260 --> 01:40:59,880
idea would be the objective again would

2491
01:40:59,880 --> 01:41:03,480
be to to characterize the path to reach

2492
01:41:03,480 --> 01:41:06,420
these functions or to compose let's say

2493
01:41:06,420 --> 01:41:08,400
the service chain among those functions

2494
01:41:08,400 --> 01:41:11,699
in the others there are uh what I

2495
01:41:11,699 --> 01:41:13,800
recommend specifically on on the net

2496
01:41:13,800 --> 01:41:16,500
side so we will start with an F the

2497
01:41:16,500 --> 01:41:18,360
working document then following by the

2498
01:41:18,360 --> 01:41:19,860
service edge these two have been already

2499
01:41:19,860 --> 01:41:21,780
presented in the past and I will focus

2500
01:41:21,780 --> 01:41:23,400
later on a little bit more on the on the

2501
01:41:23,400 --> 01:41:24,780
latest one the service function which is

2502
01:41:24,780 --> 01:41:28,320
the new for for to be presented here so

2503
01:41:28,320 --> 01:41:30,300
in the IDF number expression function

2504
01:41:30,300 --> 01:41:32,760
the current version is zero one this is

2505
01:41:32,760 --> 01:41:34,800
a the intention again is to align this

2506
01:41:34,800 --> 01:41:36,840
with the current industrial trend of

2507
01:41:36,840 --> 01:41:39,000
Network application integration

2508
01:41:39,000 --> 01:41:41,760
and there are initiative similar

2509
01:41:41,760 --> 01:41:43,980
initiatives in other seos and here we

2510
01:41:43,980 --> 01:41:45,480
can consider for instance the three Epp

2511
01:41:45,480 --> 01:41:46,980
Network expansion function that's on how

2512
01:41:46,980 --> 01:41:49,320
is the inspiration of this work also

2513
01:41:49,320 --> 01:41:52,440
that the Mec apis the all-runner rig the

2514
01:41:52,440 --> 01:41:54,119
Linux camera initiative that is very

2515
01:41:54,119 --> 01:41:56,100
recent with the idea also of offering

2516
01:41:56,100 --> 01:41:59,580
apis to request and consume capabilities

2517
01:41:59,580 --> 01:42:01,980
of the network and so on so far so again

2518
01:42:01,980 --> 01:42:03,900
the problem statement is very easy you

2519
01:42:03,900 --> 01:42:05,280
know the networks are becoming

2520
01:42:05,280 --> 01:42:06,540
consumable about application and

2521
01:42:06,540 --> 01:42:09,119
services so let's consider Alto as the

2522
01:42:09,119 --> 01:42:11,159
entry point for that there's exposure

2523
01:42:11,159 --> 01:42:12,320
capabilities

2524
01:42:12,320 --> 01:42:14,820
in which respect to IDF Network

2525
01:42:14,820 --> 01:42:16,920
Technologies so the final objective is

2526
01:42:16,920 --> 01:42:19,560
that the applications can make informed

2527
01:42:19,560 --> 01:42:21,900
decisions taking into account the the

2528
01:42:21,900 --> 01:42:23,460
network information so no blind

2529
01:42:23,460 --> 01:42:26,760
decisions has to be asked today so as

2530
01:42:26,760 --> 01:42:28,500
the applications are inferring or are

2531
01:42:28,500 --> 01:42:29,639
guessing characteristics of the

2532
01:42:29,639 --> 01:42:31,619
algorithm so the idea will be okay let's

2533
01:42:31,619 --> 01:42:33,360
ask the network and the network will

2534
01:42:33,360 --> 01:42:35,219
provide this information in such a way

2535
01:42:35,219 --> 01:42:37,760
that I can

2536
01:42:38,119 --> 01:42:41,460
and informed decision and then improve

2537
01:42:41,460 --> 01:42:43,080
the quality of experience and so on so

2538
01:42:43,080 --> 01:42:44,159
far

2539
01:42:44,159 --> 01:42:47,639
so uh in this route this is a as I said

2540
01:42:47,639 --> 01:42:49,080
before it's a kind of overarching draft

2541
01:42:49,080 --> 01:42:50,880
so trying to expose what would be the

2542
01:42:50,880 --> 01:42:52,679
different kind of capabilities to be

2543
01:42:52,679 --> 01:42:54,540
exposed we are considering by now

2544
01:42:54,540 --> 01:42:56,219
existing capabilities for sure the

2545
01:42:56,219 --> 01:42:58,139
topology and the cost the cost map and

2546
01:42:58,139 --> 01:43:00,420
so this is somehow the the the the

2547
01:43:00,420 --> 01:43:03,960
initial capabilities of Alto but also

2548
01:43:03,960 --> 01:43:05,460
the performance metrics the semantic

2549
01:43:05,460 --> 01:43:06,780
view that can be provided by the path

2550
01:43:06,780 --> 01:43:08,880
better and so on so far and also we

2551
01:43:08,880 --> 01:43:12,000
include in this proposed uh also some

2552
01:43:12,000 --> 01:43:14,040
other proposals as the service edge the

2553
01:43:14,040 --> 01:43:16,380
service functions the abstraction of

2554
01:43:16,380 --> 01:43:17,880
underlay for the overlay and this will

2555
01:43:17,880 --> 01:43:19,860
work for the cellular for the CDN for

2556
01:43:19,860 --> 01:43:22,260
sd1 and so and some other situations

2557
01:43:22,260 --> 01:43:24,659
that will emerge are emerging in the in

2558
01:43:24,659 --> 01:43:26,880
the in the industry like the the

2559
01:43:26,880 --> 01:43:28,860
emergence or the appearance of the

2560
01:43:28,860 --> 01:43:30,600
dynamic IP pools because of the fat of

2561
01:43:30,600 --> 01:43:31,980
separating the control plane and the

2562
01:43:31,980 --> 01:43:33,960
user plane both in the mobile part but

2563
01:43:33,960 --> 01:43:36,179
also in the fixed part with the BNG the

2564
01:43:36,179 --> 01:43:38,520
segregation the coops approach so the

2565
01:43:38,520 --> 01:43:40,980
updated updates in version zero one for

2566
01:43:40,980 --> 01:43:43,260
this specifically has been the content

2567
01:43:43,260 --> 01:43:45,360
about service functions this detail in

2568
01:43:45,360 --> 01:43:47,159
the draft that I will comment later and

2569
01:43:47,159 --> 01:43:48,960
also security aspects that were not

2570
01:43:48,960 --> 01:43:50,760
present in the previous version

2571
01:43:50,760 --> 01:43:52,860
so next one please

2572
01:43:52,860 --> 01:43:54,600
so this is the

2573
01:43:54,600 --> 01:43:56,820
the draft of the whole service edge the

2574
01:43:56,820 --> 01:43:58,860
current version is zero five and this

2575
01:43:58,860 --> 01:44:02,639
activity or this this draft so how is

2576
01:44:02,639 --> 01:44:04,080
related with the computer World

2577
01:44:04,080 --> 01:44:05,820
networking discussion that is happening

2578
01:44:05,820 --> 01:44:09,239
in in the routine working group area but

2579
01:44:09,239 --> 01:44:11,639
from the in the case of Alto Alto can

2580
01:44:11,639 --> 01:44:14,639
provide here is an anov path solution so

2581
01:44:14,639 --> 01:44:16,500
a direct working group area is working

2582
01:44:16,500 --> 01:44:19,020
in an on-pass solution here we are

2583
01:44:19,020 --> 01:44:20,760
addressing the same program space but

2584
01:44:20,760 --> 01:44:22,199
with a different perspective with a

2585
01:44:22,199 --> 01:44:24,560
different approach

2586
01:44:24,560 --> 01:44:27,900
is also clear there are multiple and

2587
01:44:27,900 --> 01:44:29,460
heterogeneous data centers being

2588
01:44:29,460 --> 01:44:31,320
deployed across the networks so there

2589
01:44:31,320 --> 01:44:33,360
are compute capabilities in terms of CPU

2590
01:44:33,360 --> 01:44:35,639
storage pan with memory and so in

2591
01:44:35,639 --> 01:44:37,619
different points of the network so the

2592
01:44:37,619 --> 01:44:39,659
the objective here would be to expose

2593
01:44:39,659 --> 01:44:41,100
all of this together with the

2594
01:44:41,100 --> 01:44:42,719
topological information of the network

2595
01:44:42,719 --> 01:44:44,760
and in the future with the performance

2596
01:44:44,760 --> 01:44:48,000
metrics and so on and so forth uh the

2597
01:44:48,000 --> 01:44:49,500
the purpose of this will be that the

2598
01:44:49,500 --> 01:44:50,760
applications that can consume this

2599
01:44:50,760 --> 01:44:52,800
information can instantiate the

2600
01:44:52,800 --> 01:44:54,920
applications of the or of the service

2601
01:44:54,920 --> 01:44:57,600
with informed information about the

2602
01:44:57,600 --> 01:44:59,159
resources that are available but also

2603
01:44:59,159 --> 01:45:01,020
the characteristics of the path to reach

2604
01:45:01,020 --> 01:45:03,840
those compute capabilities across the

2605
01:45:03,840 --> 01:45:06,119
network right so

2606
01:45:06,119 --> 01:45:07,860
um the solution is to Liberation Alto

2607
01:45:07,860 --> 01:45:09,300
for aggregating all that information and

2608
01:45:09,300 --> 01:45:10,800
for exposing this information to the

2609
01:45:10,800 --> 01:45:13,500
external applications again once more

2610
01:45:13,500 --> 01:45:14,940
time in such a way that the application

2611
01:45:14,940 --> 01:45:16,800
can do an informed decision no guessing

2612
01:45:16,800 --> 01:45:18,300
about the characteristics of the of the

2613
01:45:18,300 --> 01:45:19,980
network but just collecting the real

2614
01:45:19,980 --> 01:45:22,260
information from the network the updates

2615
01:45:22,260 --> 01:45:24,119
that have been provided in version zero

2616
01:45:24,119 --> 01:45:26,699
five uh we described potential stations

2617
01:45:26,699 --> 01:45:28,800
for Pat battery unified and unified

2618
01:45:28,800 --> 01:45:30,480
properties so the idea is to leverage on

2619
01:45:30,480 --> 01:45:33,000
the existing work and and maintain that

2620
01:45:33,000 --> 01:45:35,280
existing work to cover uh what could be

2621
01:45:35,280 --> 01:45:37,679
the information related to the Computing

2622
01:45:37,679 --> 01:45:41,340
uh environments okay and we also provide

2623
01:45:41,340 --> 01:45:43,800
example queries provided for a filter

2624
01:45:43,800 --> 01:45:46,560
entity property map we've also providing

2625
01:45:46,560 --> 01:45:49,020
some examples and so on so moving to the

2626
01:45:49,020 --> 01:45:51,540
and I will detail a little bit more this

2627
01:45:51,540 --> 01:45:53,460
last draft this is about service

2628
01:45:53,460 --> 01:45:54,840
functions so the problem statement

2629
01:45:54,840 --> 01:45:57,960
essentially is that nowadays

2630
01:45:57,960 --> 01:45:59,820
the services are formed by a

2631
01:45:59,820 --> 01:46:01,560
concatenation of service function so

2632
01:46:01,560 --> 01:46:04,260
this service function changes right so

2633
01:46:04,260 --> 01:46:05,639
we have a connected graph of service

2634
01:46:05,639 --> 01:46:08,219
functions but by now we don't have a

2635
01:46:08,219 --> 01:46:09,900
combined information between the

2636
01:46:09,900 --> 01:46:12,000
functions the this service chain plus

2637
01:46:12,000 --> 01:46:15,239
the characteristics that uh that connect

2638
01:46:15,239 --> 01:46:17,400
these different service functions so the

2639
01:46:17,400 --> 01:46:20,460
characteristics of the of the chain so

2640
01:46:20,460 --> 01:46:22,199
there is typically more than one

2641
01:46:22,199 --> 01:46:23,820
instance of a service function in the

2642
01:46:23,820 --> 01:46:25,800
network so there is a problem about what

2643
01:46:25,800 --> 01:46:27,960
service service function instance to

2644
01:46:27,960 --> 01:46:31,020
select individually or to form a chain

2645
01:46:31,020 --> 01:46:33,659
to form a graph so at the end the

2646
01:46:33,659 --> 01:46:36,060
purpose of all of this is to help on the

2647
01:46:36,060 --> 01:46:37,739
service realization by selecting the

2648
01:46:37,739 --> 01:46:40,560
most suitable service instance or

2649
01:46:40,560 --> 01:46:42,420
instances depending if we are addressing

2650
01:46:42,420 --> 01:46:44,100
just one single function or a chain or

2651
01:46:44,100 --> 01:46:46,860
service functions so at the end the the

2652
01:46:46,860 --> 01:46:49,139
purpose of this is to characterize the

2653
01:46:49,139 --> 01:46:50,400
path to reach a particular service

2654
01:46:50,400 --> 01:46:52,380
function instance or

2655
01:46:52,380 --> 01:46:54,300
a type of service function so we could

2656
01:46:54,300 --> 01:46:56,100
have several instances of the same type

2657
01:46:56,100 --> 01:46:58,320
so we can try to determine what would be

2658
01:46:58,320 --> 01:46:59,580
the better characteristics in the

2659
01:46:59,580 --> 01:47:01,679
network for reaching the one of the

2660
01:47:01,679 --> 01:47:04,080
instances and also to characterize the

2661
01:47:04,080 --> 01:47:05,340
path among a sequence of service

2662
01:47:05,340 --> 01:47:07,679
functions again I mean the characterize

2663
01:47:07,679 --> 01:47:09,780
the path in a service function chain

2664
01:47:09,780 --> 01:47:11,820
next please

2665
01:47:11,820 --> 01:47:13,320
so the kind of information of interest

2666
01:47:13,320 --> 01:47:15,960
that a client could consume would be the

2667
01:47:15,960 --> 01:47:18,840
the well here at least I will comment

2668
01:47:18,840 --> 01:47:20,719
some of them

2669
01:47:20,719 --> 01:47:23,400
I mean from an endpoint to an instance

2670
01:47:23,400 --> 01:47:25,800
of a service function type

2671
01:47:25,800 --> 01:47:27,659
the same but characteristics for an

2672
01:47:27,659 --> 01:47:29,400
endpoint to a specific instance of a

2673
01:47:29,400 --> 01:47:31,139
service function type all about

2674
01:47:31,139 --> 01:47:33,840
characteristics with for a given chain

2675
01:47:33,840 --> 01:47:37,260
or for a bit or at the time of composing

2676
01:47:37,260 --> 01:47:39,000
a service from one service function to

2677
01:47:39,000 --> 01:47:41,040
another function and so on so far I will

2678
01:47:41,040 --> 01:47:43,560
not uh waste more time on this so there

2679
01:47:43,560 --> 01:47:46,440
are several cases that could be favored

2680
01:47:46,440 --> 01:47:49,080
let's say for a com complementing the

2681
01:47:49,080 --> 01:47:50,219
information with the network information

2682
01:47:50,219 --> 01:47:53,520
in place next please

2683
01:47:53,520 --> 01:47:55,320
so the the kind of solution will be

2684
01:47:55,320 --> 01:47:58,440
similar the the picture is similar to

2685
01:47:58,440 --> 01:47:59,639
the to the case of This research

2686
01:47:59,639 --> 01:48:01,679
essentially to combine and to complement

2687
01:48:01,679 --> 01:48:04,500
to use the alto server to integrate the

2688
01:48:04,500 --> 01:48:06,659
information of the service functions and

2689
01:48:06,659 --> 01:48:09,119
integrate all of this with the political

2690
01:48:09,119 --> 01:48:12,119
information retrieved by bgp via PLS and

2691
01:48:12,119 --> 01:48:16,020
and so on as we saw before so um

2692
01:48:16,020 --> 01:48:18,540
we are proposing here in in this draft a

2693
01:48:18,540 --> 01:48:20,040
number of extensions extensions to

2694
01:48:20,040 --> 01:48:21,420
enable the alto clients to request

2695
01:48:21,420 --> 01:48:23,280
information of the inter of Interest the

2696
01:48:23,280 --> 01:48:25,020
the kind of information that we show in

2697
01:48:25,020 --> 01:48:27,239
the previous slide and also extensions

2698
01:48:27,239 --> 01:48:29,340
to collect and combine both the service

2699
01:48:29,340 --> 01:48:31,560
function and the network information all

2700
01:48:31,560 --> 01:48:34,500
together for enriching the the decision

2701
01:48:34,500 --> 01:48:37,260
of the sales function chain there are

2702
01:48:37,260 --> 01:48:39,659
extensions uh or we do foresee

2703
01:48:39,659 --> 01:48:41,900
extensions that could involve

2704
01:48:41,900 --> 01:48:44,580
augmentations of the path vector and the

2705
01:48:44,580 --> 01:48:46,440
unified property draft so we will

2706
01:48:46,440 --> 01:48:48,780
leverage on existing work for this and

2707
01:48:48,780 --> 01:48:50,760
just to remark that there is a clear

2708
01:48:50,760 --> 01:48:52,800
link with related activities in ATF like

2709
01:48:52,800 --> 01:48:55,020
the service function chain activity the

2710
01:48:55,020 --> 01:48:56,639
service programming with semen routing

2711
01:48:56,639 --> 01:48:58,460
in a spring working group or the service

2712
01:48:58,460 --> 01:49:01,739
functionality topology on this so

2713
01:49:01,739 --> 01:49:04,440
um we see clearly this link with this

2714
01:49:04,440 --> 01:49:06,840
work in ATF but also there is a clear

2715
01:49:06,840 --> 01:49:08,940
link with activities outside ITF as

2716
01:49:08,940 --> 01:49:11,880
would be the only about virtual Network

2717
01:49:11,880 --> 01:49:15,000
function graphs in Etsy NFP

2718
01:49:15,000 --> 01:49:18,440
and next please

2719
01:49:18,540 --> 01:49:20,699
so just just for finishing the next

2720
01:49:20,699 --> 01:49:23,400
steps so clearly this is a our idea is

2721
01:49:23,400 --> 01:49:26,540
to work on these different aspects

2722
01:49:26,540 --> 01:49:29,099
for the future Authority Sheltering so

2723
01:49:29,099 --> 01:49:31,980
we we have cleared this this is

2724
01:49:31,980 --> 01:49:34,199
for future chartering so we want to

2725
01:49:34,199 --> 01:49:36,380
provide all uh all this work for

2726
01:49:36,380 --> 01:49:38,340
directing let's say the future

2727
01:49:38,340 --> 01:49:41,099
and it is in in this direction so our

2728
01:49:41,099 --> 01:49:44,099
idea is to complement uh also this other

2729
01:49:44,099 --> 01:49:46,619
work in other working groups from ITF so

2730
01:49:46,619 --> 01:49:49,560
helping on the automation of the service

2731
01:49:49,560 --> 01:49:51,659
functions so that the sensation of the

2732
01:49:51,659 --> 01:49:53,820
of the instance of the satisfactions and

2733
01:49:53,820 --> 01:49:55,800
so on so far so we see this as a

2734
01:49:55,800 --> 01:49:57,300
complement of uh which is already

2735
01:49:57,300 --> 01:49:59,340
another in other working groups and our

2736
01:49:59,340 --> 01:50:01,080
idea is to prepare updated versions of

2737
01:50:01,080 --> 01:50:03,300
the all the documents for its 115 and

2738
01:50:03,300 --> 01:50:04,739
for sure comment some feedback is more

2739
01:50:04,739 --> 01:50:06,960
than welcome so hunting

2740
01:50:06,960 --> 01:50:08,760
all right Martin Duke Google again I'm

2741
01:50:08,760 --> 01:50:09,840
not going to bother with the queue

2742
01:50:09,840 --> 01:50:12,540
because yeah that's nobody

2743
01:50:12,540 --> 01:50:13,199
um

2744
01:50:13,199 --> 01:50:15,599
uh I was very excited to see on like one

2745
01:50:15,599 --> 01:50:17,639
of those slides that um

2746
01:50:17,639 --> 01:50:19,739
like you think there's something worth

2747
01:50:19,739 --> 01:50:23,159
doing without any extensions

2748
01:50:23,159 --> 01:50:25,080
um I think that was actually going to be

2749
01:50:25,080 --> 01:50:26,820
my question having reviewed this Draft

2750
01:50:26,820 --> 01:50:28,619
before the meeting

2751
01:50:28,619 --> 01:50:30,719
um because

2752
01:50:30,719 --> 01:50:33,480
uh to me like I think the hump is just

2753
01:50:33,480 --> 01:50:36,360
to get adoption of this thing

2754
01:50:36,360 --> 01:50:39,000
um of of Alto and out you know deployed

2755
01:50:39,000 --> 01:50:40,739
and servers real servicing clients out

2756
01:50:40,739 --> 01:50:41,940
there and then we can talk about

2757
01:50:41,940 --> 01:50:44,760
extensions um you know at this point

2758
01:50:44,760 --> 01:50:46,619
like doing extensions is the hope that

2759
01:50:46,619 --> 01:50:49,020
somebody will adopt the use case is is

2760
01:50:49,020 --> 01:50:51,780
where we've failed a bunch of times and

2761
01:50:51,780 --> 01:50:53,040
I think this is

2762
01:50:53,040 --> 01:50:54,900
this is very promising in that respect

2763
01:50:54,900 --> 01:50:58,380
so um I I uh good luck to you to get

2764
01:50:58,380 --> 01:51:00,540
this this out there and I think if this

2765
01:51:00,540 --> 01:51:03,119
does get out there and deployed then any

2766
01:51:03,119 --> 01:51:04,800
extensions that that use case might need

2767
01:51:04,800 --> 01:51:07,080
would in my mind move very close to the

2768
01:51:07,080 --> 01:51:08,460
front of the line for re-chattering

2769
01:51:08,460 --> 01:51:11,960
thanks thank you

2770
01:51:14,880 --> 01:51:17,880
that

2771
01:51:24,840 --> 01:51:27,179
from my memories of what the guys in

2772
01:51:27,179 --> 01:51:28,679
CERN and in general in the academic

2773
01:51:28,679 --> 01:51:31,440
networks are doing this sfc case will be

2774
01:51:31,440 --> 01:51:33,000
of interest to them as well because

2775
01:51:33,000 --> 01:51:35,580
precisely they one of the things that

2776
01:51:35,580 --> 01:51:37,560
they were interested in to do some kind

2777
01:51:37,560 --> 01:51:38,780
of

2778
01:51:38,780 --> 01:51:41,940
messaging of the data before it arrived

2779
01:51:41,940 --> 01:51:44,580
the final so so probably this could be

2780
01:51:44,580 --> 01:51:46,619
something that we should offer to them

2781
01:51:46,619 --> 01:51:49,739
as well not only for the uh it's simply

2782
01:51:49,739 --> 01:51:51,560
anything that came to my mind

2783
01:51:51,560 --> 01:51:56,219
nothing but do a thing okay thank you

2784
01:51:56,219 --> 01:51:57,420
okay

2785
01:51:57,420 --> 01:52:01,260
thanks Luis so we have time so let's

2786
01:52:01,260 --> 01:52:03,599
move to the next one actually we only

2787
01:52:03,599 --> 01:52:06,179
have five minutes and

2788
01:52:06,179 --> 01:52:10,020
so who okay

2789
01:52:13,739 --> 01:52:16,820
who will take over

2790
01:52:16,980 --> 01:52:20,119
the last stop okay

2791
01:52:32,460 --> 01:52:34,260
so

2792
01:52:34,260 --> 01:52:36,239
loosen

2793
01:52:36,239 --> 01:52:39,060
do you want to present this

2794
01:52:39,060 --> 01:52:40,199
a

2795
01:52:40,199 --> 01:52:43,219
hello everyone

2796
01:52:45,060 --> 01:52:48,900
okay okay I will quickly uh hello

2797
01:52:48,900 --> 01:52:51,719
everyone next I will introduce the jobs

2798
01:52:51,719 --> 01:52:54,840
called the architecture of computing

2799
01:52:54,840 --> 01:52:58,580
power Optical Network

2800
01:53:00,860 --> 01:53:04,099
motivation with the rapid

2801
01:53:04,099 --> 01:53:07,920
popularity and application of cloud

2802
01:53:07,920 --> 01:53:10,619
computing artificial intelligence and

2803
01:53:10,619 --> 01:53:13,920
other technologies will cause the total

2804
01:53:13,920 --> 01:53:17,040
amount of data has increased its

2805
01:53:17,040 --> 01:53:20,960
possibly and the demand for data storage

2806
01:53:20,960 --> 01:53:24,060
Computing and transmission has increased

2807
01:53:24,060 --> 01:53:27,719
significantly therefore the processing

2808
01:53:27,719 --> 01:53:30,800
of this

2809
01:53:32,540 --> 01:53:36,199
computing power to support

2810
01:53:36,199 --> 01:53:41,040
therefore with the advantage of ultra

2811
01:53:41,040 --> 01:53:42,860
large

2812
01:53:42,860 --> 01:53:45,500
capacity

2813
01:53:45,500 --> 01:53:49,340
capacity or Ultra long distance low

2814
01:53:49,340 --> 01:53:52,520
latency and flexible

2815
01:53:52,520 --> 01:53:56,480
scheduling of the optical network of

2816
01:53:56,480 --> 01:53:59,780
products are what provide a weather

2817
01:53:59,780 --> 01:54:03,800
coverage for example and efficiency

2818
01:54:03,800 --> 01:54:06,800
Super Capacity

2819
01:54:06,800 --> 01:54:11,480
guarantee for computing resource

2820
01:54:11,599 --> 01:54:13,280
this

2821
01:54:13,280 --> 01:54:16,280
this

2822
01:54:16,940 --> 01:54:21,139
Computing related network with the

2823
01:54:21,139 --> 01:54:26,179
optical Network to release the

2824
01:54:26,179 --> 01:54:31,040
calcability linkage between the next one

2825
01:54:31,040 --> 01:54:34,860
use use case one network resource

2826
01:54:34,860 --> 01:54:38,760
requirement the age

2827
01:54:38,760 --> 01:54:41,659
the age Network

2828
01:54:41,659 --> 01:54:45,020
management lawyer receive information

2829
01:54:45,020 --> 01:54:48,320
from the client

2830
01:54:48,320 --> 01:54:52,020
obtains currently a commit user

2831
01:54:52,020 --> 01:54:56,000
information and provides it to the cloud

2832
01:54:56,000 --> 01:54:57,800
management

2833
01:54:57,800 --> 01:55:03,119
platform for Network resource the cloud

2834
01:55:03,119 --> 01:55:06,719
management platform obtains regular

2835
01:55:06,719 --> 01:55:10,260
information about applications and the

2836
01:55:10,260 --> 01:55:11,580
networks

2837
01:55:11,580 --> 01:55:15,960
uh the act the architecture of computing

2838
01:55:15,960 --> 01:55:19,619
power Optical network is shown in the

2839
01:55:19,619 --> 01:55:23,060
following falling feature

2840
01:55:23,060 --> 01:55:27,199
it equals Cloud management

2841
01:55:27,199 --> 01:55:29,780
platform or

2842
01:55:29,780 --> 01:55:34,580
computing power okay orchestration

2843
01:55:34,580 --> 01:55:37,320
Computing resource computing power

2844
01:55:37,320 --> 01:55:42,139
scheduling called the network management

2845
01:55:42,139 --> 01:55:46,860
Age Management platform age computing

2846
01:55:46,860 --> 01:55:48,980
power

2847
01:55:48,980 --> 01:55:52,560
orchestrian Computing resource computing

2848
01:55:52,560 --> 01:55:56,219
power routine and forwarding each

2849
01:55:56,219 --> 01:55:58,099
Network management

2850
01:55:58,099 --> 01:56:01,739
next I will introduce the functions of

2851
01:56:01,739 --> 01:56:03,800
each

2852
01:56:03,800 --> 01:56:08,040
component module the act the

2853
01:56:08,040 --> 01:56:10,380
architecture

2854
01:56:10,380 --> 01:56:11,340
uh

2855
01:56:11,340 --> 01:56:13,400
uh

2856
01:56:13,400 --> 01:56:17,580
Age Management platform receive

2857
01:56:17,580 --> 01:56:19,080
application

2858
01:56:19,080 --> 01:56:23,780
a requirements from Euler's

2859
01:56:24,119 --> 01:56:27,500
very well

2860
01:56:28,699 --> 01:56:32,880
in the units for what the promise it was

2861
01:56:32,880 --> 01:56:35,219
about the management plan from age

2862
01:56:35,219 --> 01:56:37,820
Network management reports Network

2863
01:56:37,820 --> 01:56:41,219
information and the community computing

2864
01:56:41,219 --> 01:56:44,420
power scheduling information

2865
01:56:44,420 --> 01:56:48,239
Cloud management platform

2866
01:56:48,239 --> 01:56:51,060
its function includes

2867
01:56:51,060 --> 01:56:55,020
report the network information to the

2868
01:56:55,020 --> 01:56:58,619
computing power scheduling lawyer inform

2869
01:56:58,619 --> 01:57:01,739
the computing power serves and

2870
01:57:01,739 --> 01:57:05,900
perceives the community empowers

2871
01:57:05,900 --> 01:57:10,040
statements through the computing power

2872
01:57:10,040 --> 01:57:13,980
scaling lawyer generates the computing

2873
01:57:13,980 --> 01:57:16,980
power route and more enter the route in

2874
01:57:16,980 --> 01:57:18,380
real time

2875
01:57:18,380 --> 01:57:22,920
since the the generation computing power

2876
01:57:22,920 --> 01:57:25,560
Arrangement information to Cloud Network

2877
01:57:25,560 --> 01:57:29,239
management Cloud Network management

2878
01:57:29,239 --> 01:57:32,280
distribute the receive the computing

2879
01:57:32,280 --> 01:57:34,739
power Arrangement information to each

2880
01:57:34,739 --> 01:57:39,060
Network management thank you

2881
01:57:39,060 --> 01:57:41,300
foreign

2882
01:57:43,890 --> 01:57:46,919
[Music]

2883
01:57:52,580 --> 01:57:56,880
for this topic so so let's uh actually

2884
01:57:56,880 --> 01:58:00,840
we wrap up for today's discussion uh

2885
01:58:00,840 --> 01:58:04,260
actually uh this time and we both attend

2886
01:58:04,260 --> 01:58:06,719
in person so it's a yeah it's good good

2887
01:58:06,719 --> 01:58:08,639
time actually we get together hopeful

2888
01:58:08,639 --> 01:58:11,219
everybody uh you know we can have more

2889
01:58:11,219 --> 01:58:13,679
people to attend in person in London

2890
01:58:13,679 --> 01:58:17,219
media so so in say you in London meeting

2891
01:58:17,219 --> 01:58:20,219
so and and uh Martin do you have

2892
01:58:20,219 --> 01:58:21,840
anything to happen

2893
01:58:21,840 --> 01:58:25,159
okay thank you thank you

