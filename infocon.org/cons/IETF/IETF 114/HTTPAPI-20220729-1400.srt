1
00:00:04,980 --> 00:00:07,700
foreign

2
00:00:51,780 --> 00:00:54,320
foreign

3
00:01:07,500 --> 00:01:10,460
sure no I

4
00:01:11,040 --> 00:01:13,200
it's only 10 hours of blind

5
00:01:13,200 --> 00:01:14,820
really

6
00:01:14,820 --> 00:01:18,080
nine ten yeah

7
00:01:19,619 --> 00:01:21,060
and also

8
00:01:21,060 --> 00:01:23,360
it's Japan

9
00:01:23,360 --> 00:01:26,100
[Music]

10
00:01:26,100 --> 00:01:28,939
which is cool

11
00:01:45,000 --> 00:01:47,159
yeah that's what I meant about hearts

12
00:01:47,159 --> 00:01:49,619
yeah it's kind of all traffic is

13
00:01:49,619 --> 00:01:50,700
expensive right now

14
00:01:50,700 --> 00:01:53,280
yeah but the

15
00:01:53,280 --> 00:01:55,200
Japan yeah like you said getting into

16
00:01:55,200 --> 00:01:58,700
Japan might be a problem

17
00:02:03,719 --> 00:02:07,158
how long did it take you to get here

18
00:02:07,380 --> 00:02:09,919
awake

19
00:02:11,760 --> 00:02:15,260
with your paddle boat

20
00:02:18,420 --> 00:02:20,899
eternal life

21
00:02:23,459 --> 00:02:28,099
I was I was in London last week so okay

22
00:02:29,400 --> 00:02:35,900
that took 30 hours 30 35 yes

23
00:02:36,319 --> 00:02:39,959
I don't know too many

24
00:02:39,959 --> 00:02:42,480
Boston and Japan is easy there's lots of

25
00:02:42,480 --> 00:02:43,860
direct flights

26
00:02:43,860 --> 00:02:45,780
well there used to be lots of direct

27
00:02:45,780 --> 00:02:48,480
flights it used to be a 767

28
00:02:48,480 --> 00:02:50,519
11 hours

29
00:02:50,519 --> 00:02:54,680
but who knows what they're doing now

30
00:02:58,560 --> 00:03:00,959
I will move the mic closer how is that

31
00:03:00,959 --> 00:03:03,319
any better

32
00:03:11,040 --> 00:03:13,980
all right uh people have stopped coming

33
00:03:13,980 --> 00:03:17,220
in let's get started share pre-looking

34
00:03:17,220 --> 00:03:19,580
slides

35
00:03:23,819 --> 00:03:27,599
all right uh welcome to the penultimate

36
00:03:27,599 --> 00:03:29,760
session of ietf 114

37
00:03:29,760 --> 00:03:32,760
an ultimate is one of my favorite words

38
00:03:32,760 --> 00:03:35,220
when my wife says did you take the last

39
00:03:35,220 --> 00:03:36,299
donut

40
00:03:36,299 --> 00:03:38,220
and say no I took the penultimate one

41
00:03:38,220 --> 00:03:41,519
there's one left for you anyhow

42
00:03:41,519 --> 00:03:43,440
um if you haven't already signed in via

43
00:03:43,440 --> 00:03:46,739
the medeco thing please do so

44
00:03:46,739 --> 00:03:48,239
obviously

45
00:03:48,239 --> 00:03:51,060
um here Daryl is remote As is Mark

46
00:03:51,060 --> 00:03:54,120
Nottingham can people on remote hear me

47
00:03:54,120 --> 00:03:56,239
better

48
00:03:59,159 --> 00:04:01,799
I can hear you fine but I wasn't having

49
00:04:01,799 --> 00:04:02,939
a problem before

50
00:04:02,939 --> 00:04:06,200
right okay

51
00:04:09,420 --> 00:04:11,640
this is the note well

52
00:04:11,640 --> 00:04:13,319
um if you haven't seen it before it's

53
00:04:13,319 --> 00:04:14,879
because you've been late to all of the

54
00:04:14,879 --> 00:04:17,040
other meetings or your eyes weren't open

55
00:04:17,040 --> 00:04:18,540
yet

56
00:04:18,540 --> 00:04:22,460
be good to each other don't hide patents

57
00:04:22,460 --> 00:04:27,120
uh we have a process we have a process

58
00:04:27,120 --> 00:04:29,520
someone so

59
00:04:29,520 --> 00:04:31,800
uh meeting tips everyone should know

60
00:04:31,800 --> 00:04:35,160
this by now also uh sign in Via meet

61
00:04:35,160 --> 00:04:38,340
Echo if you're in the room there is a

62
00:04:38,340 --> 00:04:40,380
take the mobile phone

63
00:04:40,380 --> 00:04:42,960
app starting the QR code that's on the

64
00:04:42,960 --> 00:04:44,759
back halfway through the room or outside

65
00:04:44,759 --> 00:04:46,759
the room

66
00:04:46,759 --> 00:04:49,080
if you're remote please keep your audio

67
00:04:49,080 --> 00:04:53,160
and video off until you're speaking

68
00:04:53,160 --> 00:04:56,100
uh and it's too late to go out and buy a

69
00:04:56,100 --> 00:04:59,660
headset now but next time

70
00:05:00,960 --> 00:05:04,020
uh we have an agenda it was posted

71
00:05:04,020 --> 00:05:06,360
in the data tracker

72
00:05:06,360 --> 00:05:09,000
uh media you know again if you're just

73
00:05:09,000 --> 00:05:10,440
learning this stuff now it's probably

74
00:05:10,440 --> 00:05:12,479
too late so just watch and raise your

75
00:05:12,479 --> 00:05:15,258
hand if you want to talk

76
00:05:15,479 --> 00:05:16,500
okay

77
00:05:16,500 --> 00:05:19,440
we need somebody to take notes

78
00:05:19,440 --> 00:05:21,780
thank you Martin

79
00:05:21,780 --> 00:05:23,220
um yeah okay we don't have to explain

80
00:05:23,220 --> 00:05:25,680
how to take notes Martin's an expert

81
00:05:25,680 --> 00:05:28,639
foreign

82
00:05:29,660 --> 00:05:33,060
next topic is agenda bashing I think

83
00:05:33,060 --> 00:05:36,960
we're going to be done early so I don't

84
00:05:36,960 --> 00:05:38,280
think we need to shuffle the agenda

85
00:05:38,280 --> 00:05:40,860
around it's and if there's other topics

86
00:05:40,860 --> 00:05:42,360
that come up under the any other

87
00:05:42,360 --> 00:05:43,860
business at the end

88
00:05:43,860 --> 00:05:45,539
I do think we'll have time to do that

89
00:05:45,539 --> 00:05:47,820
but does anyone have any concerns about

90
00:05:47,820 --> 00:05:50,539
the agenda

91
00:05:53,699 --> 00:05:56,580
okay

92
00:05:56,580 --> 00:05:59,960
Roberto are you ready

93
00:06:02,060 --> 00:06:04,080
hi everybody

94
00:06:04,080 --> 00:06:07,219
can you hear me

95
00:06:09,600 --> 00:06:12,660
thanks yep

96
00:06:12,660 --> 00:06:14,699
um I can hit the next button or we can

97
00:06:14,699 --> 00:06:17,699
Pest Control to you whichever you prefer

98
00:06:17,699 --> 00:06:20,479
no it

99
00:06:28,080 --> 00:06:30,240
so okay

100
00:06:30,240 --> 00:06:34,440
everybody Rec limit header is almost

101
00:06:34,440 --> 00:06:39,360
complete as we editor think please move

102
00:06:39,360 --> 00:06:41,539
on

103
00:06:42,720 --> 00:06:45,720
the goal for this draft is to

104
00:06:45,720 --> 00:06:48,000
communicate service limits so clients

105
00:06:48,000 --> 00:06:50,639
can stop before being traveled out

106
00:06:50,639 --> 00:06:52,160
and

107
00:06:52,160 --> 00:06:55,039
the basic

108
00:06:55,039 --> 00:06:59,099
goal was to align all the original

109
00:06:59,099 --> 00:07:02,060
existing fields and stop headers

110
00:07:02,060 --> 00:07:04,860
proliferation so we didn't want to

111
00:07:04,860 --> 00:07:07,160
invent a new way of doing

112
00:07:07,160 --> 00:07:12,539
just to consolidate the

113
00:07:12,539 --> 00:07:17,220
shape in which something already happens

114
00:07:17,220 --> 00:07:20,840
and we added another field to express

115
00:07:20,840 --> 00:07:23,280
limiting policy

116
00:07:23,280 --> 00:07:25,940
move on

117
00:07:30,080 --> 00:07:34,319
so on the left you can see what's

118
00:07:34,319 --> 00:07:36,120
currently

119
00:07:36,120 --> 00:07:40,380
on on the web and underwriting three new

120
00:07:40,380 --> 00:07:43,520
fields uh

121
00:07:43,520 --> 00:07:48,419
that we have in in our case

122
00:07:48,419 --> 00:07:50,539
with the

123
00:07:50,539 --> 00:07:55,740
additional field with the policy and

124
00:07:55,740 --> 00:07:59,280
that is instead of structured field with

125
00:07:59,280 --> 00:08:02,359
many items

126
00:08:04,319 --> 00:08:05,520
next

127
00:08:05,520 --> 00:08:09,479
this is the shape of the actual field I

128
00:08:09,479 --> 00:08:13,639
think you already know that

129
00:08:16,259 --> 00:08:18,379
next

130
00:08:18,379 --> 00:08:22,740
and let's go to what the technical

131
00:08:22,740 --> 00:08:24,680
choices is to

132
00:08:24,680 --> 00:08:27,840
implement design a design similar to

133
00:08:27,840 --> 00:08:31,259
reply after and using structural fields

134
00:08:31,259 --> 00:08:32,599
and we don't want to mention

135
00:08:32,599 --> 00:08:34,740
infrastructural concept

136
00:08:34,740 --> 00:08:37,760
like connection because you don't know

137
00:08:37,760 --> 00:08:41,099
how intermediaries implement this kind

138
00:08:41,099 --> 00:08:43,080
of infrastructures

139
00:08:43,080 --> 00:08:47,100
so maybe you can have every Clinic

140
00:08:47,100 --> 00:08:52,519
Fields but connection can be

141
00:08:52,519 --> 00:08:56,100
aggregated multiplexed by intermeasuring

142
00:08:56,100 --> 00:08:58,740
so you could not rely on the concept of

143
00:08:58,740 --> 00:09:00,560
connection of connection using

144
00:09:00,560 --> 00:09:02,880
replanting tools

145
00:09:02,880 --> 00:09:05,540
next

146
00:09:07,040 --> 00:09:10,800
we added privacy configurations and we

147
00:09:10,800 --> 00:09:13,380
got a lot of more a lot of interesting

148
00:09:13,380 --> 00:09:17,220
in their fields thanks to uh especially

149
00:09:17,220 --> 00:09:20,040
Mark Nottingham and to all the folks

150
00:09:20,040 --> 00:09:25,640
that supported this specification in the

151
00:09:26,240 --> 00:09:29,519
integration period next

152
00:09:29,519 --> 00:09:31,580
and so

153
00:09:31,580 --> 00:09:35,940
we are currently two open issues the

154
00:09:35,940 --> 00:09:40,620
first one is not to allow rate limiting

155
00:09:40,620 --> 00:09:43,980
fields on trailers because no one uses

156
00:09:43,980 --> 00:09:47,399
them and it's way too complex to Define

157
00:09:47,399 --> 00:09:50,459
all this Behavior the idea is that if

158
00:09:50,459 --> 00:09:53,519
tomorrow through someone wants to extend

159
00:09:53,519 --> 00:09:57,080
rate limits to

160
00:09:57,080 --> 00:10:01,380
trailers is welcome to do it

161
00:10:01,380 --> 00:10:03,000
and then

162
00:10:03,000 --> 00:10:05,820
did

163
00:10:05,820 --> 00:10:09,839
only step between us and the the last

164
00:10:09,839 --> 00:10:10,680
call

165
00:10:10,680 --> 00:10:14,360
is that the con The Proposal

166
00:10:14,360 --> 00:10:17,880
of combining all fields in a one

167
00:10:17,880 --> 00:10:20,040
structured field

168
00:10:20,040 --> 00:10:22,760
next

169
00:10:23,480 --> 00:10:25,040
well

170
00:10:25,040 --> 00:10:27,980
we have been asked to do it

171
00:10:27,980 --> 00:10:32,339
and we tried uh to accommodate this

172
00:10:32,339 --> 00:10:36,959
request there is a long maybe merrily

173
00:10:36,959 --> 00:10:40,380
spread but me and Alex finally decided

174
00:10:40,380 --> 00:10:42,779
not to support this change

175
00:10:42,779 --> 00:10:45,600
this is because

176
00:10:45,600 --> 00:10:48,680
almost all platform and middleware

177
00:10:48,680 --> 00:10:52,440
decided to use in time and it this

178
00:10:52,440 --> 00:10:54,860
practice as more than 10 years

179
00:10:54,860 --> 00:10:58,980
to use separate integer valid fields

180
00:10:58,980 --> 00:11:01,980
so there is no operational experience

181
00:11:01,980 --> 00:11:04,200
in providing and consuming this

182
00:11:04,200 --> 00:11:05,300
information

183
00:11:05,300 --> 00:11:07,040
in

184
00:11:07,040 --> 00:11:10,940
in Combined form

185
00:11:10,940 --> 00:11:14,399
when we try to combine information in

186
00:11:14,399 --> 00:11:16,519
one single field

187
00:11:16,519 --> 00:11:19,980
uh we were asked to separate them

188
00:11:19,980 --> 00:11:21,440
because

189
00:11:21,440 --> 00:11:24,540
implementers found that confusing

190
00:11:24,540 --> 00:11:29,519
and an important thing for what's the

191
00:11:29,519 --> 00:11:32,519
current AP ecosystem the structural

192
00:11:32,519 --> 00:11:35,959
field parts are not available

193
00:11:39,420 --> 00:11:42,240
[Music]

194
00:11:42,240 --> 00:11:45,600
and in general we do not advise a

195
00:11:45,600 --> 00:11:48,600
processing number item structure field

196
00:11:48,600 --> 00:11:50,040
with reg X

197
00:11:50,040 --> 00:11:55,339
so we try to accommodate this requests

198
00:11:55,339 --> 00:11:58,620
but the current API the system current

199
00:11:58,620 --> 00:12:01,500
implementer current consumers and

200
00:12:01,500 --> 00:12:04,440
current products

201
00:12:04,440 --> 00:12:05,720
um

202
00:12:05,720 --> 00:12:11,100
do not support while this kind of change

203
00:12:11,100 --> 00:12:12,600
so

204
00:12:12,600 --> 00:12:13,440
um

205
00:12:13,440 --> 00:12:19,339
my our opinion is and is to be

206
00:12:19,339 --> 00:12:22,200
consistent with the original goal of

207
00:12:22,200 --> 00:12:25,220
this specification and try to

208
00:12:25,220 --> 00:12:29,519
consolidate a long-standing practice

209
00:12:29,519 --> 00:12:34,019
to provide something that must value for

210
00:12:34,019 --> 00:12:37,200
current implementer

211
00:12:37,200 --> 00:12:39,000
I think that

212
00:12:39,000 --> 00:12:40,860
in

213
00:12:40,860 --> 00:12:43,200
in the future

214
00:12:43,200 --> 00:12:45,019
if

215
00:12:45,019 --> 00:12:47,060
the current

216
00:12:47,060 --> 00:12:50,660
ecosystem changes

217
00:12:50,660 --> 00:12:54,360
we could be open to make a new

218
00:12:54,360 --> 00:12:57,120
specification for rate limiting fields

219
00:12:57,120 --> 00:13:01,560
and providing a way of combining the

220
00:13:01,560 --> 00:13:05,300
information but in this case

221
00:13:05,300 --> 00:13:11,220
we think that the the result would just

222
00:13:11,220 --> 00:13:15,560
be to have another

223
00:13:15,560 --> 00:13:17,120
standard

224
00:13:17,120 --> 00:13:19,560
that nobody uses

225
00:13:19,560 --> 00:13:23,639
so the first goal for us is to

226
00:13:23,639 --> 00:13:25,860
consolidate the current ecosystem around

227
00:13:25,860 --> 00:13:27,480
the specification

228
00:13:27,480 --> 00:13:29,220
in the future

229
00:13:29,220 --> 00:13:34,079
is implemented field that there is

230
00:13:34,079 --> 00:13:35,160
um

231
00:13:35,160 --> 00:13:38,399
some operational experience and provide

232
00:13:38,399 --> 00:13:39,500
feedback

233
00:13:39,500 --> 00:13:44,040
a positive feedback on a combining the

234
00:13:44,040 --> 00:13:45,300
field

235
00:13:45,300 --> 00:13:49,440
we can make a red limit big Maybe

236
00:13:49,440 --> 00:13:52,199
but currently I think this is not an

237
00:13:52,199 --> 00:13:56,880
option we want to gather and join all

238
00:13:56,880 --> 00:13:59,940
the implementers existing implementers

239
00:13:59,940 --> 00:14:01,740
under one

240
00:14:01,740 --> 00:14:04,019
in the future one will

241
00:14:04,019 --> 00:14:08,940
have these one Consolidated community on

242
00:14:08,940 --> 00:14:12,899
rate limiting field if the implementers

243
00:14:12,899 --> 00:14:16,620
feel or if the work group things that

244
00:14:16,620 --> 00:14:19,399
the ecosystem is ready for an updated

245
00:14:19,399 --> 00:14:22,019
specification we will have a

246
00:14:22,019 --> 00:14:25,019
Consolidated group of implementers of

247
00:14:25,019 --> 00:14:28,260
this specification of this pack and we

248
00:14:28,260 --> 00:14:31,079
can move the Consolidated Community to a

249
00:14:31,079 --> 00:14:35,359
new uh improved Maybe

250
00:14:36,120 --> 00:14:42,180
field but today we think it will just be

251
00:14:42,180 --> 00:14:44,579
confusing so

252
00:14:44,579 --> 00:14:45,440
um

253
00:14:45,440 --> 00:14:49,220
net but I think

254
00:14:49,380 --> 00:14:52,160
um and finished

255
00:14:52,380 --> 00:14:54,779
all right let's take some time and

256
00:14:54,779 --> 00:14:56,519
discuss this issue because in the chat

257
00:14:56,519 --> 00:14:58,380
it's there's some

258
00:14:58,380 --> 00:15:02,420
contention so Mark you want to go

259
00:15:08,940 --> 00:15:10,680
good morning

260
00:15:10,680 --> 00:15:13,740
it seems to be working I don't know

261
00:15:13,740 --> 00:15:14,459
um

262
00:15:14,459 --> 00:15:17,339
so

263
00:15:17,339 --> 00:15:20,579
Roberto I understand your your arguments

264
00:15:20,579 --> 00:15:21,600
here

265
00:15:21,600 --> 00:15:25,980
but it's just not appropriate to have

266
00:15:25,980 --> 00:15:29,579
you know make a decision that is made on

267
00:15:29,579 --> 00:15:33,060
arguments or or on data that is not

268
00:15:33,060 --> 00:15:34,500
brought to the working group by the

269
00:15:34,500 --> 00:15:36,720
people making the arguments

270
00:15:36,720 --> 00:15:39,779
um that makes me really uncomfortable

271
00:15:39,779 --> 00:15:41,160
um I think we need to have a discussion

272
00:15:41,160 --> 00:15:43,800
as a working group and talk about the

273
00:15:43,800 --> 00:15:46,320
pros and cons and make a decision as a

274
00:15:46,320 --> 00:15:47,639
working group not just have the editors

275
00:15:47,639 --> 00:15:48,839
say well we've talked to a bunch of

276
00:15:48,839 --> 00:15:51,120
people and we think that it should be

277
00:15:51,120 --> 00:15:52,980
this therefore we made this decision so

278
00:15:52,980 --> 00:15:56,600
so let's do that please okay

279
00:15:58,800 --> 00:16:02,519
uh Martha sure I don't want to overstep

280
00:16:02,519 --> 00:16:05,100
the

281
00:16:05,100 --> 00:16:08,279
freedom of decision of the working group

282
00:16:08,279 --> 00:16:11,279
clearly

283
00:16:12,480 --> 00:16:15,600
on the other side we have been asked to

284
00:16:15,600 --> 00:16:18,240
investigate

285
00:16:18,240 --> 00:16:21,899
try to accommodate and we did it and

286
00:16:21,899 --> 00:16:24,540
honestly the result

287
00:16:24,540 --> 00:16:28,980
we had was this one so

288
00:16:28,980 --> 00:16:30,480
um

289
00:16:30,480 --> 00:16:31,500
um

290
00:16:31,500 --> 00:16:35,220
they surely the work group is is free to

291
00:16:35,220 --> 00:16:36,680
do

292
00:16:36,680 --> 00:16:41,160
and to I mean uh propose another

293
00:16:41,160 --> 00:16:46,139
solution but we did our homework

294
00:16:46,139 --> 00:16:50,519
um this was the result so I

295
00:16:50,519 --> 00:16:51,980
I

296
00:16:51,980 --> 00:16:53,880
just done

297
00:16:53,880 --> 00:16:57,839
don't want to uh

298
00:16:57,839 --> 00:17:00,800
I just wanted to clarify that

299
00:17:00,800 --> 00:17:03,360
we tried to accommodate

300
00:17:03,360 --> 00:17:07,079
this requests and

301
00:17:07,079 --> 00:17:10,500
and we think that in the future we have

302
00:17:10,500 --> 00:17:13,199
no objection to

303
00:17:13,199 --> 00:17:16,740
to move that uh to to

304
00:17:16,740 --> 00:17:17,699
um

305
00:17:17,699 --> 00:17:20,880
to a structured field what I I am not

306
00:17:20,880 --> 00:17:23,939
sure that is the right thing to do

307
00:17:23,939 --> 00:17:26,520
is just to

308
00:17:26,520 --> 00:17:30,900
to have structured Fields as a goal

309
00:17:30,900 --> 00:17:33,480
in my opinion structural field is not a

310
00:17:33,480 --> 00:17:35,400
goal per se

311
00:17:35,400 --> 00:17:39,120
okay to go here to uh for the original

312
00:17:39,120 --> 00:17:42,000
goal for this specification

313
00:17:42,000 --> 00:17:45,600
is to consolidate a standard and about

314
00:17:45,600 --> 00:17:49,740
political proliferation the the it is

315
00:17:49,740 --> 00:17:50,900
not to

316
00:17:50,900 --> 00:17:53,880
force anyone to adopt structural field

317
00:17:53,880 --> 00:17:57,000
even because we don't have the faults in

318
00:17:57,000 --> 00:17:58,260
this case

319
00:17:58,260 --> 00:18:01,980
for uh pushing structural fields in an

320
00:18:01,980 --> 00:18:05,780
ecosystem that is currently

321
00:18:05,780 --> 00:18:08,690
not uh

322
00:18:08,690 --> 00:18:10,440
[Music]

323
00:18:10,440 --> 00:18:13,020
not really for that because we don't

324
00:18:13,020 --> 00:18:14,340
have products

325
00:18:14,340 --> 00:18:17,580
so I think we we can separate the

326
00:18:17,580 --> 00:18:19,160
structured fields

327
00:18:19,160 --> 00:18:20,960
we

328
00:18:20,960 --> 00:18:23,900
have the absorbed the side

329
00:18:23,900 --> 00:18:25,919
absolutely not

330
00:18:25,919 --> 00:18:29,760
but we have been asked to to investigate

331
00:18:29,760 --> 00:18:31,520
and we did it

332
00:18:31,520 --> 00:18:36,799
so we wanted uh if there is some I mean

333
00:18:36,799 --> 00:18:41,460
some other ideas to me it's fine but I

334
00:18:41,460 --> 00:18:43,440
think it should be basically based on

335
00:18:43,440 --> 00:18:48,660
some data or some feedback not just on

336
00:18:48,660 --> 00:18:52,640
um legitimate thoughts

337
00:18:52,640 --> 00:18:55,440
so so Martin's in the queue maybe we'll

338
00:18:55,440 --> 00:18:56,820
let Mark Martin

339
00:18:56,820 --> 00:18:59,418
go ahead

340
00:19:02,520 --> 00:19:04,320
I think I just broke a chair

341
00:19:04,320 --> 00:19:05,039
um

342
00:19:05,039 --> 00:19:07,380
so

343
00:19:07,380 --> 00:19:09,179
I think I want to concentrate on what

344
00:19:09,179 --> 00:19:13,080
the what the the real arguments are here

345
00:19:13,080 --> 00:19:14,940
um I think

346
00:19:14,940 --> 00:19:18,179
I think Roberto hold the mic yeah I've

347
00:19:18,179 --> 00:19:20,920
got everything in my hands

348
00:19:20,920 --> 00:19:24,029
[Music]

349
00:19:25,020 --> 00:19:26,880
is anyone yeah okay

350
00:19:26,880 --> 00:19:29,820
um so I want to I want to focus on the

351
00:19:29,820 --> 00:19:32,400
goal here which is to express this

352
00:19:32,400 --> 00:19:34,260
information in a way that the people can

353
00:19:34,260 --> 00:19:35,940
use and I think that this debate about

354
00:19:35,940 --> 00:19:37,679
structured Fields is

355
00:19:37,679 --> 00:19:40,200
really the the nub of it

356
00:19:40,200 --> 00:19:42,120
I

357
00:19:42,120 --> 00:19:45,240
I honestly find the the spelling of this

358
00:19:45,240 --> 00:19:46,980
information across three fields to be a

359
00:19:46,980 --> 00:19:49,200
little odd

360
00:19:49,200 --> 00:19:49,919
um

361
00:19:49,919 --> 00:19:51,840
but

362
00:19:51,840 --> 00:19:54,600
there are there are aspects of that that

363
00:19:54,600 --> 00:19:57,299
make me think that maybe under certain

364
00:19:57,299 --> 00:19:59,100
circumstances the

365
00:19:59,100 --> 00:20:01,860
having separate Fields could be somewhat

366
00:20:01,860 --> 00:20:04,020
advantageous

367
00:20:04,020 --> 00:20:06,360
in the sense that there's um

368
00:20:06,360 --> 00:20:09,360
this this reset field for instance uh is

369
00:20:09,360 --> 00:20:11,100
is stable where the where the other ones

370
00:20:11,100 --> 00:20:13,500
might not be on on a per request basis

371
00:20:13,500 --> 00:20:16,260
so I'd rather concentrate on those sorts

372
00:20:16,260 --> 00:20:18,960
of arguments than than

373
00:20:18,960 --> 00:20:20,100
these

374
00:20:20,100 --> 00:20:21,840
um

375
00:20:21,840 --> 00:20:23,400
like Mark I'm a little uncomfortable

376
00:20:23,400 --> 00:20:25,740
with the the way the

377
00:20:25,740 --> 00:20:29,700
this is being being argued and seemingly

378
00:20:29,700 --> 00:20:31,460
decided I think this is

379
00:20:31,460 --> 00:20:34,679
at some level the editors work for the

380
00:20:34,679 --> 00:20:36,600
working group and

381
00:20:36,600 --> 00:20:38,700
um need to need to try to capture the

382
00:20:38,700 --> 00:20:41,640
the decisions that are made here

383
00:20:41,640 --> 00:20:43,260
unfortunately there's not a lot of

384
00:20:43,260 --> 00:20:45,840
people here who are contributing to this

385
00:20:45,840 --> 00:20:47,280
discussion so

386
00:20:47,280 --> 00:20:49,980
uh that that does make it quite kind of

387
00:20:49,980 --> 00:20:52,220
difficult

388
00:20:54,000 --> 00:20:57,440
it's going to be hard

389
00:21:00,000 --> 00:21:02,100
[Music]

390
00:21:02,100 --> 00:21:03,840
I hate taking them out yeah

391
00:21:03,840 --> 00:21:09,429
[Music]

392
00:21:11,460 --> 00:21:14,880
okay uh anyone else on this topic I

393
00:21:14,880 --> 00:21:16,140
think it's certainly something we have

394
00:21:16,140 --> 00:21:19,200
to bring to the list and discuss

395
00:21:19,200 --> 00:21:23,480
all right uh Roberto

396
00:21:23,480 --> 00:21:28,700
Julian destroying thecube yes go ahead

397
00:21:31,380 --> 00:21:32,460
hello

398
00:21:32,460 --> 00:21:33,299
um

399
00:21:33,299 --> 00:21:35,580
so uh I think it would be really

400
00:21:35,580 --> 00:21:38,220
interesting to understand what kind of

401
00:21:38,220 --> 00:21:42,080
support in things like ngienics and

402
00:21:42,080 --> 00:21:46,679
httpd actually is needed because

403
00:21:46,679 --> 00:21:47,400
um

404
00:21:47,400 --> 00:21:50,400
I mean if there was a actual

405
00:21:50,400 --> 00:21:53,880
ticket I could look at for for functions

406
00:21:53,880 --> 00:21:59,840
for httpd I could get people to

407
00:22:00,299 --> 00:22:02,280
consider actually adding that support

408
00:22:02,280 --> 00:22:05,039
but just saying it's not there without

409
00:22:05,039 --> 00:22:07,860
saying what's actually needed because I

410
00:22:07,860 --> 00:22:10,459
think a bit

411
00:22:17,580 --> 00:22:21,299
so what is the actual API or tool

412
00:22:21,299 --> 00:22:23,340
support that would be needed to make

413
00:22:23,340 --> 00:22:28,699
structured Fields uh acceptable here

414
00:22:36,720 --> 00:22:39,020
foreign

415
00:22:42,020 --> 00:22:43,799
we'll take

416
00:22:43,799 --> 00:22:45,960
two votes

417
00:22:45,960 --> 00:22:47,460
um first is

418
00:22:47,460 --> 00:22:49,919
do you have an opinion

419
00:22:49,919 --> 00:22:52,380
raise your hand if you do

420
00:22:52,380 --> 00:22:54,419
have an opinion on this

421
00:22:54,419 --> 00:22:58,039
and then we'll ask what the opinion is

422
00:23:04,440 --> 00:23:06,720
and this is not

423
00:23:06,720 --> 00:23:09,120
the whole structured Fields discussion

424
00:23:09,120 --> 00:23:11,760
this is three headers versus one header

425
00:23:11,760 --> 00:23:15,559
pull request 65.

426
00:23:35,159 --> 00:23:37,880
all right

427
00:23:39,539 --> 00:23:43,220
I'll close the vote in a few seconds

428
00:23:49,919 --> 00:23:53,400
so for the benefit of the recording

429
00:23:53,400 --> 00:23:55,799
which doesn't count this uh 17 people

430
00:23:55,799 --> 00:23:58,320
participated 11 said they have an

431
00:23:58,320 --> 00:23:59,640
opinion

432
00:23:59,640 --> 00:24:01,140
um and seven

433
00:24:01,140 --> 00:24:03,960
have no opinion this is out of roughly

434
00:24:03,960 --> 00:24:06,919
40 participants

435
00:24:06,960 --> 00:24:08,279
so

436
00:24:08,279 --> 00:24:10,380
in the session

437
00:24:10,380 --> 00:24:13,820
and now we'll have another one

438
00:24:14,100 --> 00:24:15,659
um

439
00:24:15,659 --> 00:24:17,520
it doesn't have to be just the 11 people

440
00:24:17,520 --> 00:24:19,559
who said they have an opinion three

441
00:24:19,559 --> 00:24:22,700
three headers or one

442
00:24:24,320 --> 00:24:27,840
three ah good point yes let's just skip

443
00:24:27,840 --> 00:24:30,080
that

444
00:24:38,539 --> 00:24:41,840
there we go

445
00:24:42,539 --> 00:24:44,820
so raise your hand basically if you

446
00:24:44,820 --> 00:24:46,679
support the editor's decision to have

447
00:24:46,679 --> 00:24:49,500
three headers and do not raise your hand

448
00:24:49,500 --> 00:24:52,380
if you prefer to see it merged into a

449
00:24:52,380 --> 00:24:54,919
single header

450
00:25:17,340 --> 00:25:20,000
good

451
00:25:21,419 --> 00:25:24,600
a couple more seconds please raise or

452
00:25:24,600 --> 00:25:29,120
not raise your hand is you are willing

453
00:25:37,140 --> 00:25:41,580
all right uh so 13 participants

454
00:25:41,580 --> 00:25:44,000
uh seven

455
00:25:44,000 --> 00:25:46,559
raised six nine

456
00:25:46,559 --> 00:25:48,840
so

457
00:25:48,840 --> 00:25:51,360
we clearly do not have consensus yet

458
00:25:51,360 --> 00:25:53,539
even rough consensus

459
00:25:53,539 --> 00:25:56,520
in spite of that Martin is word smithing

460
00:25:56,520 --> 00:25:58,020
the field names

461
00:25:58,020 --> 00:26:01,639
to be even more terse

462
00:26:04,740 --> 00:26:06,059
yep

463
00:26:06,059 --> 00:26:08,279
we're fat please

464
00:26:08,279 --> 00:26:10,080
quick question I I don't have an opinion

465
00:26:10,080 --> 00:26:13,440
here just want to understand like for

466
00:26:13,440 --> 00:26:16,020
the people that proposing that we merge

467
00:26:16,020 --> 00:26:18,120
this what's the rationale what's the

468
00:26:18,120 --> 00:26:21,020
reason behind that

469
00:26:36,559 --> 00:26:40,919
and the races on Martin you can go first

470
00:26:40,919 --> 00:26:44,480
okay Mark go ahead

471
00:26:48,840 --> 00:26:52,559
yeah is it working it's working yet okay

472
00:26:52,559 --> 00:26:53,220
um

473
00:26:53,220 --> 00:26:56,279
I I I'll let Martin give his opinion but

474
00:26:56,279 --> 00:26:58,860
for me it is

475
00:26:58,860 --> 00:27:01,799
there's an aesthetic aspect to it

476
00:27:01,799 --> 00:27:04,620
um there's a uh kind of a you know don't

477
00:27:04,620 --> 00:27:06,480
repeat yourself it's it's the having

478
00:27:06,480 --> 00:27:09,059
three headers is very repetitive there's

479
00:27:09,059 --> 00:27:10,559
questions about you know how they

480
00:27:10,559 --> 00:27:13,320
interact and and generally in HTTP we

481
00:27:13,320 --> 00:27:16,020
have you know we don't spread things

482
00:27:16,020 --> 00:27:17,700
across multiple headers unless there's a

483
00:27:17,700 --> 00:27:19,260
good reason for it and there are

484
00:27:19,260 --> 00:27:20,460
sometimes good reasons for it but I

485
00:27:20,460 --> 00:27:25,039
don't see any here I think the the most

486
00:27:25,100 --> 00:27:27,840
probably the biggest reason though is is

487
00:27:27,840 --> 00:27:29,159
that if we're going to specify these as

488
00:27:29,159 --> 00:27:31,679
structured Fields but make them look

489
00:27:31,679 --> 00:27:33,779
like they're just simple integers and

490
00:27:33,779 --> 00:27:35,880
simple you know so that and and really

491
00:27:35,880 --> 00:27:37,919
the draft currently downplays the fact

492
00:27:37,919 --> 00:27:39,299
that they're structured fields and this

493
00:27:39,299 --> 00:27:41,760
was discussed quite a bit in the issue

494
00:27:41,760 --> 00:27:43,679
um it's a bit of an attractive nuisance

495
00:27:43,679 --> 00:27:45,000
and that people will say oh look it's

496
00:27:45,000 --> 00:27:46,919
just an integer I'll just parse it as an

497
00:27:46,919 --> 00:27:49,500
integer and that'll break if people ever

498
00:27:49,500 --> 00:27:51,659
had an extension or a parameter to it

499
00:27:51,659 --> 00:27:54,899
for example and so it's it's you know

500
00:27:54,899 --> 00:27:56,820
it's kind of like leaving something

501
00:27:56,820 --> 00:27:58,200
around that people can hurt themselves

502
00:27:58,200 --> 00:28:00,659
with if you're not careful and and so if

503
00:28:00,659 --> 00:28:02,039
if you don't want it to be a structured

504
00:28:02,039 --> 00:28:03,120
field if you don't want people to use

505
00:28:03,120 --> 00:28:05,159
structured Fields parsers that's fine

506
00:28:05,159 --> 00:28:06,539
but don't specify it as a structured

507
00:28:06,539 --> 00:28:08,820
field and if you're not going to specify

508
00:28:08,820 --> 00:28:11,059
this instruction field I think the

509
00:28:11,059 --> 00:28:13,860
expectation in the ITF is is that you

510
00:28:13,860 --> 00:28:16,740
will specify parsing materialization to

511
00:28:16,740 --> 00:28:18,600
at least as as high a level as

512
00:28:18,600 --> 00:28:21,179
structured Fields does so if if you know

513
00:28:21,179 --> 00:28:23,700
that to me I think is is the path you'd

514
00:28:23,700 --> 00:28:24,840
take if you want this to be three

515
00:28:24,840 --> 00:28:27,360
headers is say okay it you know you you

516
00:28:27,360 --> 00:28:29,220
specify a parsing in the serialization

517
00:28:29,220 --> 00:28:32,340
algorithm for each one that's bespoke

518
00:28:32,340 --> 00:28:34,080
um but there's not a great reason to do

519
00:28:34,080 --> 00:28:36,000
that because we already have these

520
00:28:36,000 --> 00:28:38,520
algorithms defined you know that I don't

521
00:28:38,520 --> 00:28:41,760
see a strong argument to go off and have

522
00:28:41,760 --> 00:28:43,140
bespoke bars and gothens for these

523
00:28:43,140 --> 00:28:45,120
headers and and

524
00:28:45,120 --> 00:28:47,820
I don't find the the arguments for

525
00:28:47,820 --> 00:28:49,020
putting them into three headers

526
00:28:49,020 --> 00:28:50,399
convincing it all

527
00:28:50,399 --> 00:28:52,679
um I just don't

528
00:28:52,679 --> 00:28:55,760
Martin you go

529
00:28:57,840 --> 00:29:00,179
that was a lot I'm I'm hoping to capture

530
00:29:00,179 --> 00:29:01,500
all of it

531
00:29:01,500 --> 00:29:03,360
um so I I agree with everything Mark

532
00:29:03,360 --> 00:29:07,740
said I also think that in this case this

533
00:29:07,740 --> 00:29:09,539
can be a lot more efficient

534
00:29:09,539 --> 00:29:11,880
and uh simpler

535
00:29:11,880 --> 00:29:14,039
in in the sense that it is an atomic

536
00:29:14,039 --> 00:29:15,779
unit at the point that you have

537
00:29:15,779 --> 00:29:17,419
everything together

538
00:29:17,419 --> 00:29:19,020
and

539
00:29:19,020 --> 00:29:21,179
um splitting across multiple multiple

540
00:29:21,179 --> 00:29:23,159
Fields means that you you need to go

541
00:29:23,159 --> 00:29:25,020
looking at multiple places for the for

542
00:29:25,020 --> 00:29:26,640
the information I

543
00:29:26,640 --> 00:29:28,440
personally think that this is much

544
00:29:28,440 --> 00:29:31,620
easier to to process from a um a

545
00:29:31,620 --> 00:29:34,440
usability perspective having had to do

546
00:29:34,440 --> 00:29:38,159
that on the GitHub apis uh

547
00:29:38,159 --> 00:29:39,720
this would this would have been better

548
00:29:39,720 --> 00:29:42,740
than what they have

549
00:29:48,140 --> 00:29:51,240
any other discussion on this issue which

550
00:29:51,240 --> 00:29:52,020
is

551
00:29:52,020 --> 00:29:54,539
clearly open in the working group hasn't

552
00:29:54,539 --> 00:29:57,860
has not decided yet

553
00:29:58,080 --> 00:30:00,480
a lot of comments speaking is an

554
00:30:00,480 --> 00:30:03,419
individual one of my concerns about rate

555
00:30:03,419 --> 00:30:06,840
limiting editors always has been the

556
00:30:06,840 --> 00:30:09,840
practice is to re once you support

557
00:30:09,840 --> 00:30:12,299
returning these rate limiting headers

558
00:30:12,299 --> 00:30:14,279
you return them basically on every

559
00:30:14,279 --> 00:30:15,899
response

560
00:30:15,899 --> 00:30:17,700
and

561
00:30:17,700 --> 00:30:20,059
um I think

562
00:30:20,059 --> 00:30:24,360
there there's a burden on the client and

563
00:30:24,360 --> 00:30:26,100
the burden on the network to transfer

564
00:30:26,100 --> 00:30:28,260
those things on every single response

565
00:30:28,260 --> 00:30:32,100
and the simpler that we can make this

566
00:30:32,100 --> 00:30:35,220
um from a processing perspective uh on

567
00:30:35,220 --> 00:30:37,140
the client side the better and having

568
00:30:37,140 --> 00:30:40,740
just one header to parse uh I think is

569
00:30:40,740 --> 00:30:44,659
is easier and simpler

570
00:30:50,940 --> 00:30:52,820
okay I

571
00:30:52,820 --> 00:30:56,760
the the argument excuse me here is that

572
00:30:56,760 --> 00:30:58,559
a

573
00:30:58,559 --> 00:31:03,000
I think that if if it would be simpler

574
00:31:03,000 --> 00:31:05,460
and easier

575
00:31:05,460 --> 00:31:08,340
somebody else who would have done it

576
00:31:08,340 --> 00:31:10,440
in the sense that

577
00:31:10,440 --> 00:31:11,220
um

578
00:31:11,220 --> 00:31:15,140
the the actual uh

579
00:31:15,240 --> 00:31:18,360
what's trade implementation

580
00:31:18,360 --> 00:31:21,620
provide free Fields so

581
00:31:21,620 --> 00:31:26,539
this happens uh independently on what we

582
00:31:26,539 --> 00:31:31,679
may argue about what's more efficient

583
00:31:31,679 --> 00:31:34,919
because implemented to do it in in

584
00:31:34,919 --> 00:31:39,179
another way maybe everybody is wrong and

585
00:31:39,179 --> 00:31:43,260
they didn't do their due diligence in

586
00:31:43,260 --> 00:31:46,799
the funding uh their way of implementing

587
00:31:46,799 --> 00:31:48,080
fields

588
00:31:48,080 --> 00:31:50,039
but

589
00:31:50,039 --> 00:31:53,760
I think that let's Branch said in the

590
00:31:53,760 --> 00:31:54,600
last

591
00:31:54,600 --> 00:31:59,820
meeting that there is value in what

592
00:31:59,820 --> 00:32:00,860
um

593
00:32:00,860 --> 00:32:05,460
community of implementers do and this is

594
00:32:05,460 --> 00:32:12,480
done in from more than 10 years so again

595
00:32:12,600 --> 00:32:16,260
um I I would like that the argument for

596
00:32:16,260 --> 00:32:19,500
combining Fields were substantiated in

597
00:32:19,500 --> 00:32:20,340
some

598
00:32:20,340 --> 00:32:23,039
Implement your community in some

599
00:32:23,039 --> 00:32:24,320
implementation

600
00:32:24,320 --> 00:32:28,500
where for example uh Google and Facebook

601
00:32:28,500 --> 00:32:31,679
says okay within the idea it's a more

602
00:32:31,679 --> 00:32:34,799
convenient to combine

603
00:32:34,799 --> 00:32:36,919
all the fields

604
00:32:36,919 --> 00:32:40,860
so we changed the way and we think that

605
00:32:40,860 --> 00:32:43,740
other implementers just like data banks

606
00:32:43,740 --> 00:32:46,140
people and are doing it in the wrong way

607
00:32:46,140 --> 00:32:49,140
you're in the last efficient way but

608
00:32:49,140 --> 00:32:53,840
actually we do not have the

609
00:32:54,559 --> 00:32:57,779
we do not well I do not have the force

610
00:32:57,779 --> 00:33:00,720
of foreseeing the deployment of uh

611
00:33:00,720 --> 00:33:03,799
single fields you know what ecosystem

612
00:33:03,799 --> 00:33:08,519
and test and provide a study uh to

613
00:33:08,519 --> 00:33:12,179
demonstrate on real data that one single

614
00:33:12,179 --> 00:33:13,980
field is better

615
00:33:13,980 --> 00:33:15,600
than

616
00:33:15,600 --> 00:33:15,840
um

617
00:33:15,840 --> 00:33:18,899
[Music]

618
00:33:18,899 --> 00:33:20,460
so

619
00:33:20,460 --> 00:33:23,960
I think that uh

620
00:33:23,960 --> 00:33:28,679
following the the common practice is a

621
00:33:28,679 --> 00:33:29,700
value

622
00:33:29,700 --> 00:33:33,720
because it's a long-standing practice

623
00:33:33,720 --> 00:33:36,539
and the goal for this specification was

624
00:33:36,539 --> 00:33:39,419
not inventing a new way

625
00:33:39,419 --> 00:33:42,419
of doing things but to provide a common

626
00:33:42,419 --> 00:33:45,419
ground for different implementers of the

627
00:33:45,419 --> 00:33:47,600
same

628
00:33:53,399 --> 00:33:55,820
in the same

629
00:33:55,820 --> 00:33:58,860
on the same ground I mean on the same

630
00:33:58,860 --> 00:34:01,399
specification

631
00:34:09,839 --> 00:34:12,780
question for you Roberto from a client's

632
00:34:12,780 --> 00:34:16,940
perspective is it possible for

633
00:34:16,940 --> 00:34:20,339
implementers to use these fields in

634
00:34:20,339 --> 00:34:22,619
isolation

635
00:34:22,619 --> 00:34:25,139
for example like is the remaining value

636
00:34:25,139 --> 00:34:27,179
of any use to me without reading the

637
00:34:27,179 --> 00:34:29,359
limit

638
00:34:33,480 --> 00:34:37,800
you can probably just use

639
00:34:37,800 --> 00:34:38,839
um

640
00:34:38,839 --> 00:34:41,940
remaining and reset values

641
00:34:41,940 --> 00:34:45,000
to shape

642
00:34:45,000 --> 00:34:48,480
to shape your policy but

643
00:34:48,480 --> 00:34:49,040
um

644
00:34:49,040 --> 00:34:51,960
in in my experience

645
00:34:51,960 --> 00:34:55,560
with the implementers I know

646
00:34:55,560 --> 00:34:57,260
um

647
00:34:57,260 --> 00:35:01,680
those values are used in different ways

648
00:35:01,680 --> 00:35:07,380
depending on the kind of uh interaction

649
00:35:07,380 --> 00:35:11,579
so in some cases

650
00:35:11,579 --> 00:35:12,440
um

651
00:35:12,440 --> 00:35:18,140
they they use uh even even the policy

652
00:35:18,140 --> 00:35:21,359
indeed even the policy value to to make

653
00:35:21,359 --> 00:35:24,380
photograph for example

654
00:35:24,380 --> 00:35:29,280
uh in other they consider that uh

655
00:35:29,280 --> 00:35:32,040
requests can be multiplexed

656
00:35:32,040 --> 00:35:34,920
so they

657
00:35:34,920 --> 00:35:39,060
assign each uh a couple of triple of

658
00:35:39,060 --> 00:35:43,619
fields to different users from the a

659
00:35:43,619 --> 00:35:44,900
single client

660
00:35:44,900 --> 00:35:49,140
the goal really is here to standardize

661
00:35:49,140 --> 00:35:53,220
the semantic of fields not to define a

662
00:35:53,220 --> 00:35:58,260
way a stringent way of how using them

663
00:35:58,260 --> 00:36:01,859
because the way that clients and server

664
00:36:01,859 --> 00:36:05,760
can shape their traffic

665
00:36:05,760 --> 00:36:06,480
um

666
00:36:06,480 --> 00:36:08,280
can be different

667
00:36:08,280 --> 00:36:10,380
actually

668
00:36:10,380 --> 00:36:13,079
and for example I saw

669
00:36:13,079 --> 00:36:14,300
um

670
00:36:14,300 --> 00:36:17,720
one of the questions from Mark

671
00:36:17,720 --> 00:36:21,079
it is possible that the intermediary

672
00:36:21,079 --> 00:36:24,780
process those fields and changes them

673
00:36:24,780 --> 00:36:28,260
if it's if this is eternal to one

674
00:36:28,260 --> 00:36:30,480
infrastructure

675
00:36:30,480 --> 00:36:33,540
so yes there is the possibility that one

676
00:36:33,540 --> 00:36:37,579
gateway to received some fields and

677
00:36:37,579 --> 00:36:42,500
lowers them for example depending on the

678
00:36:42,500 --> 00:36:45,599
how many services this Gateway is

679
00:36:45,599 --> 00:36:46,920
services

680
00:36:46,920 --> 00:36:49,920
so the possible the possibility to

681
00:36:49,920 --> 00:36:53,339
mangle these fields is different uh both

682
00:36:53,339 --> 00:36:56,640
internally one is a structure and on the

683
00:36:56,640 --> 00:36:58,560
web

684
00:36:58,560 --> 00:37:01,740
and in case for example an intermedia is

685
00:37:01,740 --> 00:37:06,000
processing those fields the the uh

686
00:37:06,000 --> 00:37:09,599
the fact that there are no

687
00:37:09,599 --> 00:37:13,160
um libraries inside of this

688
00:37:13,160 --> 00:37:16,980
process them easily they were just one

689
00:37:16,980 --> 00:37:18,560
skills combined

690
00:37:18,560 --> 00:37:22,460
it's not triggered

691
00:37:27,599 --> 00:37:30,119
all right we're going to close the queue

692
00:37:30,119 --> 00:37:31,859
on this obviously we have to have

693
00:37:31,859 --> 00:37:34,200
discussion on the mailing list

694
00:37:34,200 --> 00:37:35,000
um

695
00:37:35,000 --> 00:37:37,740
encourage please people who were

696
00:37:37,740 --> 00:37:39,359
involved in the API community that

697
00:37:39,359 --> 00:37:41,460
aren't commenting to either comment in

698
00:37:41,460 --> 00:37:43,500
the pull request remember the working

699
00:37:43,500 --> 00:37:45,660
group decided to use GitHub

700
00:37:45,660 --> 00:37:49,260
and and or the mailing list

701
00:37:49,260 --> 00:37:51,900
um let's figure out

702
00:37:51,900 --> 00:37:53,820
as Spencer would say let's make good

703
00:37:53,820 --> 00:37:56,160
decisions so

704
00:37:56,160 --> 00:37:58,740
uh Roberto

705
00:37:58,740 --> 00:38:01,380
move on to your FAQ

706
00:38:01,380 --> 00:38:05,640
yeah that's well you are already I think

707
00:38:05,640 --> 00:38:09,599
it's the fourth time well it's a couple

708
00:38:09,599 --> 00:38:12,060
of years that those this back is

709
00:38:12,060 --> 00:38:14,640
lingering around but I

710
00:38:14,640 --> 00:38:18,300
I think we are we are done with this

711
00:38:18,300 --> 00:38:21,500
um with this presentation

712
00:38:28,700 --> 00:38:31,380
thank you Roberto

713
00:38:31,380 --> 00:38:35,400
and so do we want to move on to the

714
00:38:35,400 --> 00:38:37,740
media types presentation

715
00:38:37,740 --> 00:38:40,279
sure

716
00:38:44,880 --> 00:38:47,359
next

717
00:38:47,460 --> 00:38:50,880
so we are trying to register some media

718
00:38:50,880 --> 00:38:53,599
types to

719
00:38:53,599 --> 00:38:55,740
increase interoperability when

720
00:38:55,740 --> 00:38:58,200
processing API specifications such as

721
00:38:58,200 --> 00:39:00,480
open API and leverage content

722
00:39:00,480 --> 00:39:03,140
negotiation

723
00:39:03,619 --> 00:39:07,380
of the goal of this specification is not

724
00:39:07,380 --> 00:39:09,660
to disrupt current implementation and

725
00:39:09,660 --> 00:39:11,700
restart the engaged communities such as

726
00:39:11,700 --> 00:39:15,480
yaml business schema of an API and just

727
00:39:15,480 --> 00:39:18,320
next

728
00:39:22,040 --> 00:39:24,119
schema for example have not been

729
00:39:24,119 --> 00:39:27,060
registered and this uh makes content

730
00:39:27,060 --> 00:39:29,599
negotiation for this kind of document

731
00:39:29,599 --> 00:39:32,880
non-interoperable and moreover yaml does

732
00:39:32,880 --> 00:39:34,320
not have interoperability and security

733
00:39:34,320 --> 00:39:36,240
consideration

734
00:39:36,240 --> 00:39:38,839
next

735
00:39:40,680 --> 00:39:43,680
we have different uh goals for this

736
00:39:43,680 --> 00:39:45,020
specification

737
00:39:45,020 --> 00:39:50,339
but the just the yaml D was moved to the

738
00:39:50,339 --> 00:39:53,280
w3c world group that is working on Json

739
00:39:53,280 --> 00:39:54,480
ID

740
00:39:54,480 --> 00:39:57,780
so Cara for this presentation we just

741
00:39:57,780 --> 00:40:00,420
focused on yaml and plus Yama structure

742
00:40:00,420 --> 00:40:02,579
syntax suffix because there are nothing

743
00:40:02,579 --> 00:40:05,280
API engagement schema we still have a

744
00:40:05,280 --> 00:40:09,079
lot of work to do next

745
00:40:12,240 --> 00:40:15,599
we have the other things we focused the

746
00:40:15,599 --> 00:40:16,920
the yaml

747
00:40:16,920 --> 00:40:21,960
in another draft and uh we almost

748
00:40:21,960 --> 00:40:25,140
completed the Yemen data registration

749
00:40:25,140 --> 00:40:27,119
with security until probability

750
00:40:27,119 --> 00:40:29,900
configuration fragment identifier

751
00:40:29,900 --> 00:40:33,720
multi-documented yam of streams and a

752
00:40:33,720 --> 00:40:35,720
strength and con

753
00:40:35,720 --> 00:40:39,359
efforts with Yama community

754
00:40:39,359 --> 00:40:43,079
for rest apis I said before there is

755
00:40:43,079 --> 00:40:46,099
still other work to do

756
00:40:46,200 --> 00:40:48,980
next

757
00:40:50,240 --> 00:40:55,380
I think that the document is uh ready

758
00:40:55,380 --> 00:40:59,359
for our group class code we have a uh

759
00:40:59,359 --> 00:41:03,119
just some fields that we can discuss the

760
00:41:03,119 --> 00:41:06,079
first one is the more controversial

761
00:41:06,079 --> 00:41:10,260
the is about the

762
00:41:10,260 --> 00:41:14,460
plus yaml meditate to use the same yaml

763
00:41:14,460 --> 00:41:16,319
uh

764
00:41:16,319 --> 00:41:19,319
fragment identifier

765
00:41:19,319 --> 00:41:23,520
then there is um suggestion we can take

766
00:41:23,520 --> 00:41:25,800
it or not to reference Unicode security

767
00:41:25,800 --> 00:41:27,480
configuration

768
00:41:27,480 --> 00:41:30,780
for yaml but I think this is very

769
00:41:30,780 --> 00:41:35,000
similar to what could happen in Jason

770
00:41:35,099 --> 00:41:36,540
um

771
00:41:36,540 --> 00:41:39,079
happy to get feedback on that

772
00:41:39,079 --> 00:41:46,440
and this the issue 59 uh the yaml LD

773
00:41:46,440 --> 00:41:48,060
media type

774
00:41:48,060 --> 00:41:48,780
um

775
00:41:48,780 --> 00:41:52,920
asked us for a normative conversion uh

776
00:41:52,920 --> 00:41:56,880
algorithms for from Yama to Jason

777
00:41:56,880 --> 00:41:58,800
um well we have to engage with media

778
00:41:58,800 --> 00:42:03,740
targets many English clearly next

779
00:42:05,099 --> 00:42:08,520
so this is one of the points should

780
00:42:08,520 --> 00:42:12,900
every uh plastic yaml media type use the

781
00:42:12,900 --> 00:42:15,420
same fragmented identifier

782
00:42:15,420 --> 00:42:18,319
of application yaml

783
00:42:18,319 --> 00:42:21,319
the

784
00:42:21,319 --> 00:42:25,020
yes Alexa we will register the placental

785
00:42:25,020 --> 00:42:28,020
suffix to together with yaml

786
00:42:28,020 --> 00:42:30,420
so the proponents

787
00:42:30,420 --> 00:42:33,359
um says that structured syntax facets

788
00:42:33,359 --> 00:42:35,640
are a way to implement list of

789
00:42:35,640 --> 00:42:38,160
substitution principles so if something

790
00:42:38,160 --> 00:42:40,760
is valid for application yaml

791
00:42:40,760 --> 00:42:43,640
it should be valid

792
00:42:43,640 --> 00:42:48,220
for any plasma media type

793
00:42:48,220 --> 00:42:48,420
[Music]

794
00:42:48,420 --> 00:42:50,420
um

795
00:42:50,460 --> 00:42:53,819
we think that this can affect future

796
00:42:53,819 --> 00:42:57,300
media types for example a Json schema

797
00:42:57,300 --> 00:43:00,560
Plus yaml or link linked data plus yaml

798
00:43:00,560 --> 00:43:04,859
already uh well for General schema they

799
00:43:04,859 --> 00:43:07,020
already defined

800
00:43:07,020 --> 00:43:10,680
um a fragment identifier certification

801
00:43:10,680 --> 00:43:14,660
so if they were forced to use the same

802
00:43:14,660 --> 00:43:17,599
application yaml fragmented amplifier

803
00:43:17,599 --> 00:43:20,760
this means that the

804
00:43:20,760 --> 00:43:22,079
um

805
00:43:22,079 --> 00:43:26,099
it will be impossible to use

806
00:43:26,099 --> 00:43:27,359
um

807
00:43:27,359 --> 00:43:31,200
to register schema plus yaml using the

808
00:43:31,200 --> 00:43:33,660
same fragment identifiers Json schema

809
00:43:33,660 --> 00:43:36,060
plus Json

810
00:43:36,060 --> 00:43:41,160
and this for us is a showstopper

811
00:43:41,160 --> 00:43:44,400
because we really want that since

812
00:43:44,400 --> 00:43:46,500
they're they're already

813
00:43:46,500 --> 00:43:47,160
um

814
00:43:47,160 --> 00:43:50,160
usage on the internet for plus yaml

815
00:43:50,160 --> 00:43:51,960
media types even if they are not

816
00:43:51,960 --> 00:43:53,280
registered

817
00:43:53,280 --> 00:43:56,460
we do not want to break this

818
00:43:56,460 --> 00:43:59,099
implementations

819
00:43:59,099 --> 00:44:04,020
moreover the 6838

820
00:44:04,920 --> 00:44:07,380
it does not require that plus yaml and

821
00:44:07,380 --> 00:44:10,619
yamo have to have the same fragment

822
00:44:10,619 --> 00:44:13,140
identifier so since this is not a

823
00:44:13,140 --> 00:44:14,940
requirement

824
00:44:14,940 --> 00:44:17,040
I think that

825
00:44:17,040 --> 00:44:20,760
I would favor these

826
00:44:20,760 --> 00:44:24,420
the ability for new implementation to to

827
00:44:24,420 --> 00:44:26,099
use yaml

828
00:44:26,099 --> 00:44:29,700
to extend the syntax with with respect

829
00:44:29,700 --> 00:44:33,180
to Define different media types

830
00:44:33,180 --> 00:44:34,500
the

831
00:44:34,500 --> 00:44:37,800
or to have inconsistent implementation

832
00:44:37,800 --> 00:44:40,380
between something plus Json and

833
00:44:40,380 --> 00:44:43,680
something plus yaml but we are open to

834
00:44:43,680 --> 00:44:45,300
suggestions here

835
00:44:45,300 --> 00:44:49,319
could I ask a question Rebecca yes I'm

836
00:44:49,319 --> 00:44:50,819
not sure I don't know that I've seen

837
00:44:50,819 --> 00:44:54,480
this on the the the spec and but I sorry

838
00:44:54,480 --> 00:44:57,240
in the discussion and I did see it the

839
00:44:57,240 --> 00:44:59,280
the this conversation about

840
00:44:59,280 --> 00:45:02,280
if you use plus yaml you have to support

841
00:45:02,280 --> 00:45:07,440
the native uh is this this SSS fragment

842
00:45:07,440 --> 00:45:09,900
ID and

843
00:45:09,900 --> 00:45:12,200
um the one

844
00:45:12,200 --> 00:45:17,160
mitigator to that might be for example

845
00:45:17,160 --> 00:45:20,640
um open API Plus yaml

846
00:45:20,640 --> 00:45:24,480
open api's use of yaml is limited

847
00:45:24,480 --> 00:45:29,220
to what yaml calls Json schema not to be

848
00:45:29,220 --> 00:45:30,839
confused with the thing that is called

849
00:45:30,839 --> 00:45:33,780
Json schema yaml has this other concept

850
00:45:33,780 --> 00:45:36,359
that says you can only use the con the

851
00:45:36,359 --> 00:45:38,099
things in yaml

852
00:45:38,099 --> 00:45:42,119
that will round trip to Jason now my

853
00:45:42,119 --> 00:45:44,520
question my question is is does that

854
00:45:44,520 --> 00:45:46,680
prohibit using anchors because if that

855
00:45:46,680 --> 00:45:48,780
prohibits using anchors

856
00:45:48,780 --> 00:45:50,940
then you won't be able to use that

857
00:45:50,940 --> 00:45:52,020
native

858
00:45:52,020 --> 00:45:55,319
yaml fragment ID

859
00:45:55,319 --> 00:45:58,040
well um

860
00:46:00,650 --> 00:46:03,709
[Music]

861
00:46:05,940 --> 00:46:10,339
is not really compatible with Jason

862
00:46:10,619 --> 00:46:16,460
because it supports for example plus if

863
00:46:17,819 --> 00:46:20,900
and then

864
00:46:21,060 --> 00:46:25,020
I'm not supported they're using Json

865
00:46:25,020 --> 00:46:28,859
okay but that feels like just an error

866
00:46:28,859 --> 00:46:31,920
in the yaml spec the intent of the Json

867
00:46:31,920 --> 00:46:36,000
schema is to be fully round triple

868
00:46:36,000 --> 00:46:38,880
so the fact that there happens to be an

869
00:46:38,880 --> 00:46:41,339
error there doesn't negate that fact

870
00:46:41,339 --> 00:46:42,839
right

871
00:46:42,839 --> 00:46:47,220
yeah uh well I I am not sure that

872
00:46:47,220 --> 00:46:50,579
probably this was an an error in the in

873
00:46:50,579 --> 00:46:53,280
the gamma specification or maybe that

874
00:46:53,280 --> 00:46:57,300
they just use the JavaScript way

875
00:46:57,300 --> 00:46:58,700
of

876
00:46:58,700 --> 00:47:03,180
uh of using Json

877
00:47:03,180 --> 00:47:04,800
I mean probably JavaScript

878
00:47:04,800 --> 00:47:08,520
implementation supports that field while

879
00:47:08,520 --> 00:47:12,300
Json doesn't

880
00:47:14,839 --> 00:47:18,800
the point is that you can

881
00:47:18,800 --> 00:47:23,099
use Define a fragment identifier in open

882
00:47:23,099 --> 00:47:24,599
API

883
00:47:24,599 --> 00:47:27,599
foreign

884
00:47:31,640 --> 00:47:34,619
the Json pointer one or the native yaml

885
00:47:34,619 --> 00:47:35,880
one

886
00:47:35,880 --> 00:47:40,440
the the native yaml one supports Json

887
00:47:40,440 --> 00:47:45,540
pointers one it starts with slush

888
00:47:45,540 --> 00:47:46,920
right

889
00:47:46,920 --> 00:47:49,760
okay right so

890
00:47:49,760 --> 00:47:51,740
you can

891
00:47:51,740 --> 00:47:56,059
you can say for example that

892
00:47:56,059 --> 00:48:00,839
in this way if we do not uh

893
00:48:00,839 --> 00:48:05,339
in France that

894
00:48:05,339 --> 00:48:05,940
um

895
00:48:05,940 --> 00:48:10,020
open API must use application yarn

896
00:48:10,020 --> 00:48:12,900
structured syntax suffix

897
00:48:12,900 --> 00:48:16,040
we can say that open API

898
00:48:16,040 --> 00:48:19,339
defines its own

899
00:48:19,339 --> 00:48:23,280
fragmented identifier Json pointer

900
00:48:23,280 --> 00:48:27,180
and then open API Plus yaml or plus Json

901
00:48:27,180 --> 00:48:31,380
is free to decide its own

902
00:48:31,380 --> 00:48:35,160
fragment identifier Urban is

903
00:48:35,160 --> 00:48:39,480
it can be different from the one that is

904
00:48:39,480 --> 00:48:42,540
defined in application yaml

905
00:48:42,540 --> 00:48:45,480
since the content type or the media type

906
00:48:45,480 --> 00:48:49,619
of this file is not just the yaml

907
00:48:49,619 --> 00:48:53,280
application yaml but if open API plus

908
00:48:53,280 --> 00:48:56,280
emo it is a different media term

909
00:48:56,280 --> 00:48:59,880
that can have potentially that can

910
00:48:59,880 --> 00:49:01,920
potentially have e

911
00:49:01,920 --> 00:49:05,280
different behavior from this just yeah

912
00:49:05,280 --> 00:49:09,780
application yaml and as a matter of fact

913
00:49:09,780 --> 00:49:12,599
structural syntax

914
00:49:12,599 --> 00:49:15,200
allows to Define

915
00:49:15,200 --> 00:49:19,520
its own fragment identifier

916
00:49:20,819 --> 00:49:25,020
okay the point is that we should be

917
00:49:25,020 --> 00:49:27,920
careful here just because we are not

918
00:49:27,920 --> 00:49:31,619
defining a specification in Greenfield

919
00:49:31,619 --> 00:49:34,740
there are implementation

920
00:49:34,740 --> 00:49:35,520
um

921
00:49:35,520 --> 00:49:40,400
I think that we should be careful in not

922
00:49:40,400 --> 00:49:43,079
hindering the ability to to use

923
00:49:43,079 --> 00:49:48,079
something like Yama or Kenneth

924
00:49:48,180 --> 00:49:53,180
because they people already uses it

925
00:49:53,220 --> 00:49:55,920
that sounds that we should write

926
00:49:55,920 --> 00:49:58,500
something that is that matches the

927
00:49:58,500 --> 00:50:00,900
current implementation

928
00:50:00,900 --> 00:50:04,859
in other cases if we were to write a new

929
00:50:04,859 --> 00:50:07,859
specification

930
00:50:09,300 --> 00:50:11,220
I think that

931
00:50:11,220 --> 00:50:13,619
we were free to Define whatever we think

932
00:50:13,619 --> 00:50:15,839
appropriate

933
00:50:15,839 --> 00:50:18,720
in this case we should be

934
00:50:18,720 --> 00:50:21,440
a mediator from different communities

935
00:50:21,440 --> 00:50:24,599
just came out an API yaml communities

936
00:50:24,599 --> 00:50:28,819
sure they've read it they implement it

937
00:50:29,940 --> 00:50:31,520
so

938
00:50:31,520 --> 00:50:36,859
happy to to listen to your opinion here

939
00:50:40,980 --> 00:50:44,420
but I think your last Point uh about RCA

940
00:50:44,420 --> 00:50:48,300
6838 is probably the the strongest item

941
00:50:48,300 --> 00:50:50,520
there so what do you need to be able to

942
00:50:50,520 --> 00:50:53,099
close this issue

943
00:50:53,099 --> 00:50:54,240
uh

944
00:50:54,240 --> 00:50:57,100
agreement for uh

945
00:50:57,100 --> 00:50:59,579
[Music]

946
00:50:59,579 --> 00:51:03,480
the community thinks that uh we do not

947
00:51:03,480 --> 00:51:06,540
need to Define uh structured syntax

948
00:51:06,540 --> 00:51:08,780
suffix

949
00:51:08,780 --> 00:51:12,020
and just

950
00:51:13,339 --> 00:51:15,960
currently we just take that if you want

951
00:51:15,960 --> 00:51:18,420
to use application yaml you should

952
00:51:18,420 --> 00:51:21,900
explicitly explicitly write it down

953
00:51:21,900 --> 00:51:26,400
so if you use if you would tomorrow we

954
00:51:26,400 --> 00:51:29,040
Define open API Plus yaml

955
00:51:29,040 --> 00:51:32,000
if we want to use the full-fledged

956
00:51:32,000 --> 00:51:34,319
application yammo we should write it

957
00:51:34,319 --> 00:51:36,980
down so

958
00:51:37,230 --> 00:51:40,640
[Music]

959
00:51:40,640 --> 00:51:43,400
if we don't want it

960
00:51:43,400 --> 00:51:47,940
uh we can do we can write our or use our

961
00:51:47,940 --> 00:51:50,160
current current specification that

962
00:51:50,160 --> 00:51:52,740
already exist as far as I know in open

963
00:51:52,740 --> 00:51:55,740
API Roberto Roberto can I interrupt yeah

964
00:51:55,740 --> 00:51:57,960
sure I am completely incapable of

965
00:51:57,960 --> 00:52:00,000
following what you're saying here can

966
00:52:00,000 --> 00:52:01,980
you write down something for the notes

967
00:52:01,980 --> 00:52:04,160
please

968
00:52:04,280 --> 00:52:07,140
I've been really struggling to

969
00:52:07,140 --> 00:52:09,480
pause what you've been saying and I'm

970
00:52:09,480 --> 00:52:11,400
I'm mostly following along

971
00:52:11,400 --> 00:52:13,200
but that last little bit I completely

972
00:52:13,200 --> 00:52:14,640
lost you

973
00:52:14,640 --> 00:52:17,220
yeah could I could I have an attempt to

974
00:52:17,220 --> 00:52:21,420
paragraph paraphrasing sure

975
00:52:21,420 --> 00:52:23,359
um

976
00:52:23,359 --> 00:52:26,400
there is

977
00:52:26,400 --> 00:52:29,040
a mechanism that applications like yaml

978
00:52:29,040 --> 00:52:33,960
uses has available for fragmented

979
00:52:33,960 --> 00:52:35,579
identifiers that uses its native

980
00:52:35,579 --> 00:52:39,300
anchoring type support

981
00:52:39,300 --> 00:52:40,280
um

982
00:52:40,280 --> 00:52:44,520
existing media types or existing formats

983
00:52:44,520 --> 00:52:49,140
like open API and Json schema when when

984
00:52:49,140 --> 00:52:52,380
they use yaml as their format tend to

985
00:52:52,380 --> 00:52:54,660
use Json pointer

986
00:52:54,660 --> 00:52:57,420
as and basically

987
00:52:57,420 --> 00:52:59,579
squint and look at the yaml document as

988
00:52:59,579 --> 00:53:03,119
if it is a Json document and use that to

989
00:53:03,119 --> 00:53:04,800
reference elements

990
00:53:04,800 --> 00:53:07,200
in the

991
00:53:07,200 --> 00:53:10,700
um in the document and because

992
00:53:10,700 --> 00:53:15,720
they are only using yaml sufficiently

993
00:53:15,720 --> 00:53:18,300
to describe a Json document they don't

994
00:53:18,300 --> 00:53:20,819
use any of the fancy features of yaml

995
00:53:20,819 --> 00:53:22,140
and therefore Json pointers are

996
00:53:22,140 --> 00:53:23,579
sufficient

997
00:53:23,579 --> 00:53:25,140
the

998
00:53:25,140 --> 00:53:27,780
suggestion that Roberto is saying is

999
00:53:27,780 --> 00:53:31,380
just because application yet slash yaml

1000
00:53:31,380 --> 00:53:34,920
uses this fancy format it doesn't mean

1001
00:53:34,920 --> 00:53:36,660
that

1002
00:53:36,660 --> 00:53:39,720
uh plus the animals have to do it if

1003
00:53:39,720 --> 00:53:41,760
they want to support

1004
00:53:41,760 --> 00:53:44,280
this fragment identifier with the

1005
00:53:44,280 --> 00:53:45,720
anchors

1006
00:53:45,720 --> 00:53:48,180
then they can explicitly say in their

1007
00:53:48,180 --> 00:53:50,400
media type registration

1008
00:53:50,400 --> 00:53:52,920
that they

1009
00:53:52,920 --> 00:53:56,460
support the format the fragment

1010
00:53:56,460 --> 00:53:59,700
identifier that uses anchors

1011
00:53:59,700 --> 00:54:02,960
did that help at all

1012
00:54:03,960 --> 00:54:07,520
that was immensely helpful thank you

1013
00:54:09,180 --> 00:54:12,059
and I think because this what you're

1014
00:54:12,059 --> 00:54:15,960
saying Roberto that 868 38

1015
00:54:15,960 --> 00:54:18,420
doesn't require that they need to have

1016
00:54:18,420 --> 00:54:21,660
the same fragment ID then I think being

1017
00:54:21,660 --> 00:54:23,280
explicit

1018
00:54:23,280 --> 00:54:26,760
in uh media type registrations as to

1019
00:54:26,760 --> 00:54:29,520
which ones which fragment identifiers

1020
00:54:29,520 --> 00:54:31,800
are supported

1021
00:54:31,800 --> 00:54:35,819
um is seems to me like a

1022
00:54:35,819 --> 00:54:38,760
a very valuable solution and solves the

1023
00:54:38,760 --> 00:54:40,020
problem

1024
00:54:40,020 --> 00:54:42,500
mark

1025
00:54:51,299 --> 00:54:54,299
working is it working it's working

1026
00:54:54,299 --> 00:54:55,260
um

1027
00:54:55,260 --> 00:54:58,799
yeah usually the pattern is to have uh

1028
00:54:58,799 --> 00:55:01,099
uh you know the the

1029
00:55:01,099 --> 00:55:05,700
default be the uh you know the the

1030
00:55:05,700 --> 00:55:08,280
common the application slash yaml in

1031
00:55:08,280 --> 00:55:10,799
this case uh uh fragment identify our

1032
00:55:10,799 --> 00:55:13,799
syntax so that registrations with the

1033
00:55:13,799 --> 00:55:16,440
plus CML or whatever it's going to be uh

1034
00:55:16,440 --> 00:55:18,839
uh do the right thing that if if the

1035
00:55:18,839 --> 00:55:21,540
people forget or they're lazy or you

1036
00:55:21,540 --> 00:55:23,400
know whatever that they there is still a

1037
00:55:23,400 --> 00:55:24,900
fragment identifier syntax that is

1038
00:55:24,900 --> 00:55:26,400
sensible for that

1039
00:55:26,400 --> 00:55:30,059
uh uh format available but they can opt

1040
00:55:30,059 --> 00:55:31,680
out of it

1041
00:55:31,680 --> 00:55:33,359
um so that that's without knowing too

1042
00:55:33,359 --> 00:55:34,740
much about the specifics here I have no

1043
00:55:34,740 --> 00:55:37,500
idea what SS says is for example but uh

1044
00:55:37,500 --> 00:55:39,000
that's the general pattern that I've

1045
00:55:39,000 --> 00:55:42,020
seen in the past I think

1046
00:55:42,119 --> 00:55:44,660
foreign

1047
00:55:51,059 --> 00:55:53,160
I don't even think it's worth having to

1048
00:55:53,160 --> 00:55:56,700
hum on this there's still some we still

1049
00:55:56,700 --> 00:55:59,640
need to have some discussion on the list

1050
00:55:59,640 --> 00:56:01,220
so

1051
00:56:01,220 --> 00:56:04,559
let's and Daryl is nodding so let's move

1052
00:56:04,559 --> 00:56:08,420
on to the next slide Roberto

1053
00:56:11,460 --> 00:56:16,619
sure okay this is coming from The Young

1054
00:56:16,619 --> 00:56:20,339
LSD War groups in WCC

1055
00:56:20,339 --> 00:56:23,058
the

1056
00:56:23,280 --> 00:56:26,700
they wanted to have a normative way of

1057
00:56:26,700 --> 00:56:29,819
converting DML to Jason when it is

1058
00:56:29,819 --> 00:56:31,280
possible

1059
00:56:31,280 --> 00:56:34,040
I think it's a hard stuff

1060
00:56:34,040 --> 00:56:37,500
and probably we could in which a

1061
00:56:37,500 --> 00:56:40,520
normative considerations

1062
00:56:40,559 --> 00:56:41,480
um

1063
00:56:41,480 --> 00:56:43,260
excuse me the interoperability

1064
00:56:43,260 --> 00:56:45,740
considerations

1065
00:56:45,740 --> 00:56:49,859
to defer this to the gamma specification

1066
00:56:49,859 --> 00:56:52,160
or we can

1067
00:56:52,160 --> 00:56:57,180
uh we can Define another draft

1068
00:56:57,180 --> 00:56:59,819
either under the ITF or other

1069
00:56:59,819 --> 00:57:03,180
organizational umbrella but I don't know

1070
00:57:03,180 --> 00:57:05,400
maybe you think that it's

1071
00:57:05,400 --> 00:57:08,099
something we must have a way for

1072
00:57:08,099 --> 00:57:10,440
conducting gamma to Jaden in this

1073
00:57:10,440 --> 00:57:13,619
specification or not

1074
00:57:13,619 --> 00:57:17,640
the point to me is that I wanted to

1075
00:57:17,640 --> 00:57:20,940
release this specification as soon as

1076
00:57:20,940 --> 00:57:22,140
possible

1077
00:57:22,140 --> 00:57:24,660
because we needed to continue the work

1078
00:57:24,660 --> 00:57:26,280
for open API

1079
00:57:26,280 --> 00:57:29,160
so I want to work with the open API

1080
00:57:29,160 --> 00:57:31,380
specification on something that is that

1081
00:57:31,380 --> 00:57:33,920
has some ground

1082
00:57:44,460 --> 00:57:46,920
I I will just comment I'm not sure I'm

1083
00:57:46,920 --> 00:57:49,020
allowed to voice an opinion here but as

1084
00:57:49,020 --> 00:57:51,960
an individual uh I would defer this to

1085
00:57:51,960 --> 00:57:55,160
the yaml swag the ammo spec is attempted

1086
00:57:55,160 --> 00:57:59,579
to define a way to limit yaml usage that

1087
00:57:59,579 --> 00:58:01,980
was compatible with Json schema if

1088
00:58:01,980 --> 00:58:03,780
you're saying that there's holes in

1089
00:58:03,780 --> 00:58:04,980
there

1090
00:58:04,980 --> 00:58:08,640
um let's go let's go ask them to

1091
00:58:08,640 --> 00:58:12,140
um close those holes

1092
00:58:13,319 --> 00:58:18,119
I think if we try to define a conversion

1093
00:58:18,119 --> 00:58:19,440
someone

1094
00:58:19,440 --> 00:58:21,720
it's not in our Charter and we'd have to

1095
00:58:21,720 --> 00:58:24,180
confirm with the area director that they

1096
00:58:24,180 --> 00:58:28,220
really would let us want us to do that

1097
00:58:38,880 --> 00:58:42,260
okay let's continue

1098
00:58:46,740 --> 00:58:49,640
thank you

1099
00:58:49,920 --> 00:58:51,480
cheers do we have a resolution on that

1100
00:58:51,480 --> 00:58:53,040
one

1101
00:58:53,040 --> 00:58:55,740
uh do you have a relationship on this PR

1102
00:58:55,740 --> 00:58:57,720
well we know that

1103
00:58:57,720 --> 00:58:59,040
uh

1104
00:58:59,040 --> 00:59:02,460
uh I think the answer is no okay if the

1105
00:59:02,460 --> 00:59:04,920
author if there are people who really

1106
00:59:04,920 --> 00:59:06,839
I'll put it this way if there are people

1107
00:59:06,839 --> 00:59:08,520
who really think this working group

1108
00:59:08,520 --> 00:59:12,059
should address 59

1109
00:59:12,059 --> 00:59:14,819
um please bring it to the list and

1110
00:59:14,819 --> 00:59:16,859
we can discuss it but right as of right

1111
00:59:16,859 --> 00:59:19,140
now I'm fairly positive it's outside the

1112
00:59:19,140 --> 00:59:21,420
scope of our Charter yeah I totally

1113
00:59:21,420 --> 00:59:24,359
agree this this seems like a massive

1114
00:59:24,359 --> 00:59:27,119
mistake for a media type registration to

1115
00:59:27,119 --> 00:59:30,079
start defining this stuff

1116
00:59:34,619 --> 00:59:37,200
okay we're you can

1117
00:59:37,200 --> 00:59:39,180
feel strongly about opening up the

1118
00:59:39,180 --> 00:59:40,740
charter question you can just close this

1119
00:59:40,740 --> 00:59:44,720
PR and say it's out of scope

1120
00:59:50,280 --> 00:59:53,460
all right uh Daryl you want to go

1121
00:59:53,460 --> 00:59:54,900
through the the board

1122
00:59:54,900 --> 00:59:56,520
sure

1123
00:59:56,520 --> 00:59:59,400
um so to address

1124
00:59:59,400 --> 01:00:03,359
uh the other working group documents I'm

1125
01:00:03,359 --> 01:00:07,260
going to share my screen

1126
01:00:07,260 --> 01:00:09,720
once I remember where the button is

1127
01:00:09,720 --> 01:00:12,200
there it is

1128
01:00:16,500 --> 01:00:19,079
Martin I think this last two Cup last

1129
01:00:19,079 --> 01:00:20,520
two discussions weren't quite what you

1130
01:00:20,520 --> 01:00:21,960
thought you were signing up for so thank

1131
01:00:21,960 --> 01:00:24,140
you

1132
01:00:26,339 --> 01:00:27,799
um

1133
01:00:27,799 --> 01:00:33,720
and uh so before we get into these items

1134
01:00:33,720 --> 01:00:36,059
the one item one

1135
01:00:36,059 --> 01:00:39,599
um document that is not on this list uh

1136
01:00:39,599 --> 01:00:41,700
because there are no open issues would

1137
01:00:41,700 --> 01:00:47,160
be 7807 Biz uh which has gone through

1138
01:00:47,160 --> 01:00:50,760
working group last call now I think the

1139
01:00:50,760 --> 01:00:55,440
only open question on that to mark would

1140
01:00:55,440 --> 01:01:00,410
be do we need a new rev of

1141
01:01:00,410 --> 01:01:00,780
[Music]

1142
01:01:00,780 --> 01:01:02,220
um

1143
01:01:02,220 --> 01:01:05,359
the document

1144
01:01:05,760 --> 01:01:06,780
um

1145
01:01:06,780 --> 01:01:09,119
I'll have to go and check that we do

1146
01:01:09,119 --> 01:01:11,880
have uh finally a pull request much

1147
01:01:11,880 --> 01:01:15,599
belated for a Json LD context as an

1148
01:01:15,599 --> 01:01:18,900
appendix but there's been a fairly uh

1149
01:01:18,900 --> 01:01:21,559
robust discussion on the details of that

1150
01:01:21,559 --> 01:01:23,880
and it it doesn't look like it's

1151
01:01:23,880 --> 01:01:26,339
actually been resolved yet

1152
01:01:26,339 --> 01:01:27,079
um

1153
01:01:27,079 --> 01:01:30,359
I don't know enough about Jason LD to

1154
01:01:30,359 --> 01:01:32,520
comment whether it's good or not so as

1155
01:01:32,520 --> 01:01:34,220
an editor I

1156
01:01:34,220 --> 01:01:36,420
I'm a little concerned about

1157
01:01:36,420 --> 01:01:39,780
incorporating it without wider review

1158
01:01:39,780 --> 01:01:40,920
um

1159
01:01:40,920 --> 01:01:42,780
and I'm still not sure that it's

1160
01:01:42,780 --> 01:01:44,280
actually necessary to put it in the

1161
01:01:44,280 --> 01:01:46,020
specification

1162
01:01:46,020 --> 01:01:47,940
uh

1163
01:01:47,940 --> 01:01:49,740
but people seem to some people seem to

1164
01:01:49,740 --> 01:01:51,480
want it so

1165
01:01:51,480 --> 01:01:55,380
as a non-normative thing

1166
01:01:55,380 --> 01:01:56,579
any

1167
01:01:56,579 --> 01:01:59,780
guidance from the chairs

1168
01:02:02,640 --> 01:02:05,700
um I guess my question would be why why

1169
01:02:05,700 --> 01:02:09,900
if Jason LD want to do a flavor of HTTP

1170
01:02:09,900 --> 01:02:13,740
problem why does it need to go into the

1171
01:02:13,740 --> 01:02:17,538
HTTP problem specification

1172
01:02:18,140 --> 01:02:20,819
my understanding is is that this is

1173
01:02:20,819 --> 01:02:23,579
basically a mapping of

1174
01:02:23,579 --> 01:02:26,520
uh uh the the data structure in a

1175
01:02:26,520 --> 01:02:29,460
problem detail to something that looks

1176
01:02:29,460 --> 01:02:31,859
like you know that is compatible with or

1177
01:02:31,859 --> 01:02:34,920
understandable by Jason Aldi although I

1178
01:02:34,920 --> 01:02:37,079
wonder about extension members and how

1179
01:02:37,079 --> 01:02:38,280
they'll be handled

1180
01:02:38,280 --> 01:02:39,960
but

1181
01:02:39,960 --> 01:02:42,599
yeah I wouldn't it be in a completely

1182
01:02:42,599 --> 01:02:44,280
separate document that just references

1183
01:02:44,280 --> 01:02:46,440
7807 biz

1184
01:02:46,440 --> 01:02:48,000
that

1185
01:02:48,000 --> 01:02:52,319
to me yeah I wonder that

1186
01:02:52,319 --> 01:02:54,000
and I haven't had a good answer as to

1187
01:02:54,000 --> 01:02:56,760
why it needs to be in this pack

1188
01:02:56,760 --> 01:03:00,380
Eric has joined the queue Eric

1189
01:03:02,099 --> 01:03:04,319
um yeah can you hear me

1190
01:03:04,319 --> 01:03:07,559
yes yes okay great hi everybody my name

1191
01:03:07,559 --> 01:03:08,520
is Eric

1192
01:03:08,520 --> 01:03:11,460
um yeah so it's not so much about Jason

1193
01:03:11,460 --> 01:03:14,280
LD right in the end Jason hell he is a

1194
01:03:14,280 --> 01:03:16,680
mapping mechanism into interpret Jason

1195
01:03:16,680 --> 01:03:19,319
as RDA

1196
01:03:19,319 --> 01:03:21,180
um and I think that's where the problem

1197
01:03:21,180 --> 01:03:24,839
is because if you if you specify the

1198
01:03:24,839 --> 01:03:26,579
mapping into RAF

1199
01:03:26,579 --> 01:03:29,520
you have to settle on

1200
01:03:29,520 --> 01:03:31,980
an rdf vocabulary right because

1201
01:03:31,980 --> 01:03:33,720
essentially that's what you will

1202
01:03:33,720 --> 01:03:37,559
standardize the RDS vocabulary that the

1203
01:03:37,559 --> 01:03:39,380
Json gets mapped to

1204
01:03:39,380 --> 01:03:42,839
and I think this is why it's

1205
01:03:42,839 --> 01:03:46,559
so hard for the commenters to come up

1206
01:03:46,559 --> 01:03:49,140
with something because just

1207
01:03:49,140 --> 01:03:52,200
just putting in some Json LD mapping so

1208
01:03:52,200 --> 01:03:54,839
to speak is not good enough because well

1209
01:03:54,839 --> 01:03:58,260
you can use Json LD for any Json that's

1210
01:03:58,260 --> 01:03:59,760
not the point

1211
01:03:59,760 --> 01:04:00,780
um

1212
01:04:00,780 --> 01:04:04,200
the point would be to say this

1213
01:04:04,200 --> 01:04:07,260
should be mapped to this rdf vocabulary

1214
01:04:07,260 --> 01:04:09,839
and then everybody agrees on okay and

1215
01:04:09,839 --> 01:04:12,599
RDS then what

1216
01:04:12,599 --> 01:04:15,839
78 or 7 Days looks like and and I think

1217
01:04:15,839 --> 01:04:17,039
this is also because we had those

1218
01:04:17,039 --> 01:04:19,079
discussions in those last open issue

1219
01:04:19,079 --> 01:04:22,380
right around well what terms should we

1220
01:04:22,380 --> 01:04:24,960
actually use and personally I don't

1221
01:04:24,960 --> 01:04:26,760
think that this is going to be resolved

1222
01:04:26,760 --> 01:04:28,500
anytime soon because in the end that

1223
01:04:28,500 --> 01:04:30,000
would be a discussion in the rdf

1224
01:04:30,000 --> 01:04:31,140
community

1225
01:04:31,140 --> 01:04:33,900
how they want to define those

1226
01:04:33,900 --> 01:04:36,180
standardized vocabularies and I'm not

1227
01:04:36,180 --> 01:04:39,599
sure that this community will be able to

1228
01:04:39,599 --> 01:04:41,480
come up with an answer in the next

1229
01:04:41,480 --> 01:04:43,799
couple of weeks

1230
01:04:43,799 --> 01:04:45,240
four months

1231
01:04:45,240 --> 01:04:47,760
I'll thank you that's that's actually

1232
01:04:47,760 --> 01:04:49,619
really helpful Eric

1233
01:04:49,619 --> 01:04:50,280
um

1234
01:04:50,280 --> 01:04:53,400
it makes me more concerned because we're

1235
01:04:53,400 --> 01:04:55,579
going to put this in an immutable RFC

1236
01:04:55,579 --> 01:04:58,440
and I I have less confidence that what

1237
01:04:58,440 --> 01:04:59,760
we put in there is going to be the right

1238
01:04:59,760 --> 01:05:01,140
thing

1239
01:05:01,140 --> 01:05:03,059
so yes I agree

1240
01:05:03,059 --> 01:05:04,319
okay

1241
01:05:04,319 --> 01:05:06,000
thank you that that's actually very

1242
01:05:06,000 --> 01:05:08,400
helpful then uh so I think we'll we'll

1243
01:05:08,400 --> 01:05:10,380
close that one down a little gracefully

1244
01:05:10,380 --> 01:05:12,299
and uh I'll check I think we probably do

1245
01:05:12,299 --> 01:05:14,160
need to have another uh draft issued and

1246
01:05:14,160 --> 01:05:15,359
then we'll uh

1247
01:05:15,359 --> 01:05:17,400
go ahead and progress the document if

1248
01:05:17,400 --> 01:05:20,359
the chairs think it's ready

1249
01:05:21,059 --> 01:05:22,799
sure yeah

1250
01:05:22,799 --> 01:05:23,520
um

1251
01:05:23,520 --> 01:05:25,319
unless there's anyone who does anyone in

1252
01:05:25,319 --> 01:05:27,539
the room feels or online feel strongly

1253
01:05:27,539 --> 01:05:30,059
about Jason Aldi and

1254
01:05:30,059 --> 01:05:35,240
now therefore rdf being included

1255
01:05:36,539 --> 01:05:39,000
great okay Mark you have consensus go

1256
01:05:39,000 --> 01:05:39,900
for it

1257
01:05:39,900 --> 01:05:41,160
thanks

1258
01:05:41,160 --> 01:05:42,599
excellent

1259
01:05:42,599 --> 01:05:46,559
okay so moving on to uh deprecation

1260
01:05:46,559 --> 01:05:49,559
headers so I think Eric you're back up

1261
01:05:49,559 --> 01:05:51,539
um there's a couple of issues that are

1262
01:05:51,539 --> 01:05:54,720
minor document update required

1263
01:05:54,720 --> 01:05:58,200
um there's one that is in discussion and

1264
01:05:58,200 --> 01:06:00,420
there was it was just waiting for a

1265
01:06:00,420 --> 01:06:02,220
comment from Julian

1266
01:06:02,220 --> 01:06:06,720
uh with regards to redirecting uh but

1267
01:06:06,720 --> 01:06:09,839
the big issue is what started how does

1268
01:06:09,839 --> 01:06:11,700
the conversation is use structured

1269
01:06:11,700 --> 01:06:14,640
fields and turned into hey how do why

1270
01:06:14,640 --> 01:06:16,140
don't we just completely redesign this

1271
01:06:16,140 --> 01:06:18,720
API this HTTP header to a completely

1272
01:06:18,720 --> 01:06:21,660
different thing so um

1273
01:06:21,660 --> 01:06:24,000
Eric do you want to just give us what

1274
01:06:24,000 --> 01:06:27,420
the current state is there and or Mark

1275
01:06:27,420 --> 01:06:30,799
do you want to jump in ahead of time

1276
01:06:32,579 --> 01:06:36,020
oh I go for

1277
01:06:36,180 --> 01:06:39,420
um it was a long discussion

1278
01:06:39,420 --> 01:06:40,079
um

1279
01:06:40,079 --> 01:06:43,260
in in the GitHub issue and I don't want

1280
01:06:43,260 --> 01:06:46,020
to kind of rehash the whole thing I

1281
01:06:46,020 --> 01:06:47,880
think what we what we have ahead of us

1282
01:06:47,880 --> 01:06:49,740
now right and that it's great that we

1283
01:06:49,740 --> 01:06:51,359
have this meeting so that maybe we could

1284
01:06:51,359 --> 01:06:53,880
also have like

1285
01:06:53,880 --> 01:06:56,579
like a pole around that because I I

1286
01:06:56,579 --> 01:06:58,260
really would like to know what people

1287
01:06:58,260 --> 01:06:59,640
are thinking so

1288
01:06:59,640 --> 01:07:03,059
so the draft as it is now has been

1289
01:07:03,059 --> 01:07:05,819
written kind of to be in line with the

1290
01:07:05,819 --> 01:07:08,280
the sunset header field which is has

1291
01:07:08,280 --> 01:07:10,380
been an RFC for a little while

1292
01:07:10,380 --> 01:07:12,660
and um and that that was kind of the

1293
01:07:12,660 --> 01:07:15,420
motivation to have something similar for

1294
01:07:15,420 --> 01:07:18,000
deprecation and it also uses

1295
01:07:18,000 --> 01:07:21,599
the same syntax right and then a little

1296
01:07:21,599 --> 01:07:24,660
while ago there was an issue proposing

1297
01:07:24,660 --> 01:07:27,299
that instead of using that syntax which

1298
01:07:27,299 --> 01:07:29,760
may not be great going forward because

1299
01:07:29,760 --> 01:07:32,819
it's harder to parse than some other

1300
01:07:32,819 --> 01:07:34,640
syntax we could switch

1301
01:07:34,640 --> 01:07:37,740
to structured Fields here there are

1302
01:07:37,740 --> 01:07:40,799
again and and use structured Fields

1303
01:07:40,799 --> 01:07:43,079
instead

1304
01:07:43,079 --> 01:07:43,680
um

1305
01:07:43,680 --> 01:07:46,559
my feeling was that

1306
01:07:46,559 --> 01:07:48,960
it would be better even though I agree

1307
01:07:48,960 --> 01:07:51,599
that the structure field way is better

1308
01:07:51,599 --> 01:07:54,839
in a vacuum but since deprecation and

1309
01:07:54,839 --> 01:07:58,440
sunset are pretty closely related my my

1310
01:07:58,440 --> 01:08:00,780
takeaway was I think it's better if

1311
01:08:00,780 --> 01:08:02,880
those two Fields work the same way and

1312
01:08:02,880 --> 01:08:04,579
use the same syntax

1313
01:08:04,579 --> 01:08:07,579
so this is kind of where the first

1314
01:08:07,579 --> 01:08:11,760
decision would need to be made so right

1315
01:08:11,760 --> 01:08:16,259
now the draft still is using the the

1316
01:08:16,259 --> 01:08:19,799
sunset syntax which is the the iso date

1317
01:08:19,799 --> 01:08:24,120
format and um and in that issue that

1318
01:08:24,120 --> 01:08:27,120
Daryl I think is showing here there's a

1319
01:08:27,120 --> 01:08:28,380
long if you're interested right you can

1320
01:08:28,380 --> 01:08:30,120
look it up but it's it's a long

1321
01:08:30,120 --> 01:08:32,279
discussion and then at the end of the

1322
01:08:32,279 --> 01:08:34,500
discussion right we also get and there

1323
01:08:34,500 --> 01:08:36,839
was a I think there was an idea that

1324
01:08:36,839 --> 01:08:39,299
kind of at the same time Roberto and

1325
01:08:39,299 --> 01:08:42,600
Mark had and I I like that idea um

1326
01:08:42,600 --> 01:08:44,759
but I'll get to the catch

1327
01:08:44,759 --> 01:08:46,679
um the idea would be to say well what

1328
01:08:46,679 --> 01:08:48,479
about having

1329
01:08:48,479 --> 01:08:50,698
like a generic header for life cycle

1330
01:08:50,698 --> 01:08:52,020
information

1331
01:08:52,020 --> 01:08:54,899
which would be able to express Sunset

1332
01:08:54,899 --> 01:08:56,819
and deprecation

1333
01:08:56,819 --> 01:08:59,100
and maybe other life cycle stages as

1334
01:08:59,100 --> 01:09:02,939
well saying like this is experimental or

1335
01:09:02,939 --> 01:09:06,120
possibly other life cycle stages you

1336
01:09:06,120 --> 01:09:08,698
could distinguish four apis and then

1337
01:09:08,698 --> 01:09:10,500
that header would just be called

1338
01:09:10,500 --> 01:09:12,479
something like life cycle

1339
01:09:12,479 --> 01:09:15,899
and it could have different time stamps

1340
01:09:15,899 --> 01:09:18,658
in it and it could always use structure

1341
01:09:18,658 --> 01:09:21,600
fields or anyway always the same syntax

1342
01:09:21,600 --> 01:09:23,880
and that would make it easier to have

1343
01:09:23,880 --> 01:09:26,158
one place where the life cycle info is

1344
01:09:26,158 --> 01:09:27,540
going

1345
01:09:27,540 --> 01:09:31,020
um so I kind of like that idea what I

1346
01:09:31,020 --> 01:09:32,939
don't like is that this would basically

1347
01:09:32,939 --> 01:09:35,100
mean to start from scratch

1348
01:09:35,100 --> 01:09:35,759
um

1349
01:09:35,759 --> 01:09:37,679
so

1350
01:09:37,679 --> 01:09:40,259
that I think in my mind is the downside

1351
01:09:40,259 --> 01:09:42,238
and I think there also were some people

1352
01:09:42,238 --> 01:09:44,839
uh voicing

1353
01:09:44,839 --> 01:09:47,520
concerns that well how many other life

1354
01:09:47,520 --> 01:09:50,158
cycle stages are there do we really like

1355
01:09:50,158 --> 01:09:52,738
a kind of a more complicated header to

1356
01:09:52,738 --> 01:09:54,480
begin with wouldn't it be good enough to

1357
01:09:54,480 --> 01:09:57,060
have Sunset and interpretation so

1358
01:09:57,060 --> 01:09:59,040
so what I would like to do if that's

1359
01:09:59,040 --> 01:10:00,120
possible

1360
01:10:00,120 --> 01:10:03,659
um would be to maybe have people

1361
01:10:03,659 --> 01:10:07,440
um voicing their opinion between

1362
01:10:07,440 --> 01:10:10,260
what is more desirable syntactic

1363
01:10:10,260 --> 01:10:13,380
compatibility to the sunset header that

1364
01:10:13,380 --> 01:10:16,280
is already in RFC

1365
01:10:16,280 --> 01:10:19,620
or being compliant with structured

1366
01:10:19,620 --> 01:10:22,940
fields which is kind of a more

1367
01:10:22,940 --> 01:10:25,580
forward-oriented way of

1368
01:10:25,580 --> 01:10:28,199
representing data information but it

1369
01:10:28,199 --> 01:10:30,239
would not be competitive but Sunset so

1370
01:10:30,239 --> 01:10:32,159
that would be the first poll I think

1371
01:10:32,159 --> 01:10:33,659
that would be interesting to see what

1372
01:10:33,659 --> 01:10:35,219
people are thinking and then the second

1373
01:10:35,219 --> 01:10:37,739
one would be what about just ditching

1374
01:10:37,739 --> 01:10:39,780
the whole idea of having a separate

1375
01:10:39,780 --> 01:10:43,620
Sunset and deplocation header field

1376
01:10:43,620 --> 01:10:47,219
and creating a new draft about life

1377
01:10:47,219 --> 01:10:49,440
cycle info which probably would obso

1378
01:10:49,440 --> 01:10:53,400
lead the sunset RFC but that would be a

1379
01:10:53,400 --> 01:10:55,440
lot of work and I'm sure that we take

1380
01:10:55,440 --> 01:10:58,199
another at least year or two right as we

1381
01:10:58,199 --> 01:10:59,520
all know these things don't move too

1382
01:10:59,520 --> 01:11:02,040
fast so that's my concern and I think I

1383
01:11:02,040 --> 01:11:05,520
I have heard people saying hey when are

1384
01:11:05,520 --> 01:11:07,080
you finished with deprecation so I think

1385
01:11:07,080 --> 01:11:08,460
would be good to actually have something

1386
01:11:08,460 --> 01:11:09,480
out there

1387
01:11:09,480 --> 01:11:12,000
but um there is this idea that we could

1388
01:11:12,000 --> 01:11:13,500
also do something that is a little bit

1389
01:11:13,500 --> 01:11:16,440
more forward-looked okay that's it thank

1390
01:11:16,440 --> 01:11:18,860
you very much

1391
01:11:21,900 --> 01:11:23,159
all right

1392
01:11:23,159 --> 01:11:26,400
waiting for Daryl to get back online

1393
01:11:26,400 --> 01:11:28,860
there he is all right just lost

1394
01:11:28,860 --> 01:11:33,739
connection I am back uh Mark you're up

1395
01:11:37,560 --> 01:11:39,780
if we see you

1396
01:11:39,780 --> 01:11:42,120
okay we can hear you

1397
01:11:42,120 --> 01:11:43,460
um

1398
01:11:43,460 --> 01:11:46,199
uh separate from this whether or not

1399
01:11:46,199 --> 01:11:48,540
it's a structured field or not uh I find

1400
01:11:48,540 --> 01:11:51,600
the idea of a life cycle header really

1401
01:11:51,600 --> 01:11:53,159
intriguing

1402
01:11:53,159 --> 01:11:55,679
um I think it it would be really nice to

1403
01:11:55,679 --> 01:11:57,300
have one place you can go and look and

1404
01:11:57,300 --> 01:12:00,179
find about you know the the status of

1405
01:12:00,179 --> 01:12:02,280
the API you're interacting with and and

1406
01:12:02,280 --> 01:12:04,739
where it is in its life cycle

1407
01:12:04,739 --> 01:12:05,460
um

1408
01:12:05,460 --> 01:12:07,500
so that that to me seems like really

1409
01:12:07,500 --> 01:12:08,820
nice rather than having it spread across

1410
01:12:08,820 --> 01:12:10,679
multiple headers

1411
01:12:10,679 --> 01:12:13,620
I don't think that that it would take a

1412
01:12:13,620 --> 01:12:16,199
long time to make this change

1413
01:12:16,199 --> 01:12:18,780
it's just syntactic it's just shuffling

1414
01:12:18,780 --> 01:12:20,460
some text around

1415
01:12:20,460 --> 01:12:23,280
um we do this all the time the ITF the

1416
01:12:23,280 --> 01:12:26,520
hard part is is the concepts and and the

1417
01:12:26,520 --> 01:12:29,280
semantics the easy syntaxes

1418
01:12:29,280 --> 01:12:31,440
always fluid

1419
01:12:31,440 --> 01:12:34,380
so I think we could do this in just a

1420
01:12:34,380 --> 01:12:37,020
pretty quick PR

1421
01:12:37,020 --> 01:12:40,140
um so yeah I'd I'd like to see things go

1422
01:12:40,140 --> 01:12:42,239
in that direction just from a

1423
01:12:42,239 --> 01:12:44,360
I don't know it seems intriguing to me

1424
01:12:44,360 --> 01:12:47,159
uh regarding the structured field stuff

1425
01:12:47,159 --> 01:12:51,060
uh I would I think I and a lot of other

1426
01:12:51,060 --> 01:12:53,580
folks would like to see

1427
01:12:53,580 --> 01:12:55,440
headers being adopted in structured

1428
01:12:55,440 --> 01:12:57,719
Fields wherever possible

1429
01:12:57,719 --> 01:13:00,300
um I think there's kind of a growing

1430
01:13:00,300 --> 01:13:01,620
number of people who have a Prejudice

1431
01:13:01,620 --> 01:13:03,420
that if if something isn't a structured

1432
01:13:03,420 --> 01:13:04,260
field there should be a really good

1433
01:13:04,260 --> 01:13:05,880
reason

1434
01:13:05,880 --> 01:13:06,659
um

1435
01:13:06,659 --> 01:13:09,960
but uh if if you know the reason is

1436
01:13:09,960 --> 01:13:11,940
compatibility with Sunset and we decided

1437
01:13:11,940 --> 01:13:13,679
to go that way then

1438
01:13:13,679 --> 01:13:15,300
fine

1439
01:13:15,300 --> 01:13:16,140
um

1440
01:13:16,140 --> 01:13:17,880
what I'm more interested in getting

1441
01:13:17,880 --> 01:13:19,440
feedback from this working group is is

1442
01:13:19,440 --> 01:13:21,659
and I'm now going to hijack this session

1443
01:13:21,659 --> 01:13:24,060
thank you very much uh in the HTTP

1444
01:13:24,060 --> 01:13:25,860
working group we're talking about adding

1445
01:13:25,860 --> 01:13:28,679
a date type to structured Fields as part

1446
01:13:28,679 --> 01:13:31,920
of the retrofit draft and uh they're you

1447
01:13:31,920 --> 01:13:34,260
know we we're at this decision point

1448
01:13:34,260 --> 01:13:37,500
because retrofit ads uh structured

1449
01:13:37,500 --> 01:13:39,300
equivalence to the date header and the

1450
01:13:39,300 --> 01:13:40,500
expires header and the last modified

1451
01:13:40,500 --> 01:13:42,719
header which are all dates so now is the

1452
01:13:42,719 --> 01:13:44,640
opportunity to introduce the date type

1453
01:13:44,640 --> 01:13:47,100
if we're ever going to do that

1454
01:13:47,100 --> 01:13:47,699
um

1455
01:13:47,699 --> 01:13:51,600
and and so you know the the HTTP 1.1

1456
01:13:51,600 --> 01:13:54,120
serialization of it could look like an

1457
01:13:54,120 --> 01:13:55,739
ISO date you know where the net sign at

1458
01:13:55,739 --> 01:13:58,140
the front as discussed in the pr or it

1459
01:13:58,140 --> 01:14:00,120
could be an at sign with just an integer

1460
01:14:00,120 --> 01:14:02,640
after it representing an Epoch uh uh you

1461
01:14:02,640 --> 01:14:06,000
know second since January 1st 1970.

1462
01:14:06,000 --> 01:14:06,659
um

1463
01:14:06,659 --> 01:14:09,960
and what I'm asking for here is feedback

1464
01:14:09,960 --> 01:14:12,120
on you know

1465
01:14:12,120 --> 01:14:15,060
if we defined a date type in in

1466
01:14:15,060 --> 01:14:17,219
structured Fields would that make it

1467
01:14:17,219 --> 01:14:19,500
more interesting to use structured

1468
01:14:19,500 --> 01:14:21,780
fields for for you know cases like

1469
01:14:21,780 --> 01:14:23,880
deprecation and other things in this

1470
01:14:23,880 --> 01:14:25,320
working group

1471
01:14:25,320 --> 01:14:27,900
um so far the discussion in the HP

1472
01:14:27,900 --> 01:14:30,659
working group I I'm I my reading of it

1473
01:14:30,659 --> 01:14:32,100
is is that people

1474
01:14:32,100 --> 01:14:33,900
think that the textual representation

1475
01:14:33,900 --> 01:14:36,300
should probably just be the at symbol is

1476
01:14:36,300 --> 01:14:38,880
the sigil to denote that it's a date and

1477
01:14:38,880 --> 01:14:40,920
then an integer after it which is not as

1478
01:14:40,920 --> 01:14:43,440
human friendly but it's easier to parse

1479
01:14:43,440 --> 01:14:46,199
and serialize and a tool can reliably

1480
01:14:46,199 --> 01:14:48,659
recognize that thing to present it in a

1481
01:14:48,659 --> 01:14:51,239
human friendly fashion if need be

1482
01:14:51,239 --> 01:14:52,560
um so any kind of feedback that people

1483
01:14:52,560 --> 01:14:54,540
had would be super super helpful and if

1484
01:14:54,540 --> 01:14:56,580
people here don't want to use it if they

1485
01:14:56,580 --> 01:14:58,679
that that's not interesting uh in

1486
01:14:58,679 --> 01:15:00,360
whatever form that's good information to

1487
01:15:00,360 --> 01:15:02,820
take back to the HP working group too so

1488
01:15:02,820 --> 01:15:05,340
I'm done hijacking sorry please return

1489
01:15:05,340 --> 01:15:08,300
to your normal flight

1490
01:15:09,060 --> 01:15:12,140
Eric go ahead

1491
01:15:13,080 --> 01:15:15,239
um yeah I think it would be very very

1492
01:15:15,239 --> 01:15:17,580
useful to have that I think we also part

1493
01:15:17,580 --> 01:15:19,260
of a long threat in that discussion

1494
01:15:19,260 --> 01:15:21,000
about replication was the same kind of

1495
01:15:21,000 --> 01:15:23,159
thing like that is there even a concept

1496
01:15:23,159 --> 01:15:25,920
of a date time date card and it's and

1497
01:15:25,920 --> 01:15:27,719
it's not so so I think having that time

1498
01:15:27,719 --> 01:15:31,100
would be very useful I

1499
01:15:31,260 --> 01:15:33,179
think for doesn't matter whether we use

1500
01:15:33,179 --> 01:15:34,920
it for the application or life cycle we

1501
01:15:34,920 --> 01:15:36,840
I would say we would definitely use it

1502
01:15:36,840 --> 01:15:38,880
if we go the life cycle path but

1503
01:15:38,880 --> 01:15:41,340
regardless of that I think even other

1504
01:15:41,340 --> 01:15:44,640
header Fields it's highly likely that

1505
01:15:44,640 --> 01:15:48,120
they will use some kind of daytime

1506
01:15:48,120 --> 01:15:50,520
information and if that is something

1507
01:15:50,520 --> 01:15:52,440
that you can

1508
01:15:52,440 --> 01:15:55,199
specifically Define and say this this is

1509
01:15:55,199 --> 01:15:57,000
not just string it's actually a date

1510
01:15:57,000 --> 01:15:59,600
time I think

1511
01:16:10,739 --> 01:16:13,340
Eric do you want to call

1512
01:16:13,340 --> 01:16:15,900
jumping topics

1513
01:16:15,900 --> 01:16:18,900
um because Julian commented uh in reply

1514
01:16:18,900 --> 01:16:21,120
to you in the chat

1515
01:16:21,120 --> 01:16:23,040
um suggesting that we could just start

1516
01:16:23,040 --> 01:16:26,100
with Sunset and deprecation and deal

1517
01:16:26,100 --> 01:16:28,199
with extensibility at a later point in

1518
01:16:28,199 --> 01:16:29,219
time

1519
01:16:29,219 --> 01:16:32,280
would that mitigate your concerns about

1520
01:16:32,280 --> 01:16:36,719
the time it would take to introduce a

1521
01:16:36,719 --> 01:16:41,060
registry and so forth for extensibility

1522
01:16:43,140 --> 01:16:46,800
oops some

1523
01:16:46,800 --> 01:16:49,140
my audio on sorry

1524
01:16:49,140 --> 01:16:51,659
yes okay

1525
01:16:51,659 --> 01:16:53,640
um

1526
01:16:53,640 --> 01:16:56,760
I think if if

1527
01:16:56,760 --> 01:16:58,920
to go the life cycle route I think it

1528
01:16:58,920 --> 01:17:00,960
would make sense to really design it in

1529
01:17:00,960 --> 01:17:03,960
a way that it is extensible and and if

1530
01:17:03,960 --> 01:17:06,480
we want to make it extensible we need to

1531
01:17:06,480 --> 01:17:08,219
come up with some extensibility model

1532
01:17:08,219 --> 01:17:10,679
and it probably will be some kind of

1533
01:17:10,679 --> 01:17:13,620
registered date thing and I I don't

1534
01:17:13,620 --> 01:17:15,900
think we can wiggle our way up to that

1535
01:17:15,900 --> 01:17:17,460
point I mean either we say this should

1536
01:17:17,460 --> 01:17:18,719
be future proof then we have to think

1537
01:17:18,719 --> 01:17:20,520
about how we want to make a future for

1538
01:17:20,520 --> 01:17:23,100
you if now we just say there can only be

1539
01:17:23,100 --> 01:17:26,280
two Fields then I would say why even

1540
01:17:26,280 --> 01:17:28,800
make the change just stick with sunset

1541
01:17:28,800 --> 01:17:31,560
that's there and and to finish the

1542
01:17:31,560 --> 01:17:33,540
application and if we have it it's

1543
01:17:33,540 --> 01:17:36,840
sitting there you could just

1544
01:17:36,840 --> 01:17:39,719
um I misspoke

1545
01:17:39,719 --> 01:17:43,020
Jillian was suggesting having a an

1546
01:17:43,020 --> 01:17:46,520
extensibility mechanism

1547
01:17:49,860 --> 01:17:52,400
three

1548
01:17:56,880 --> 01:17:58,380
mark

1549
01:17:58,380 --> 01:18:00,000
okay

1550
01:18:00,000 --> 01:18:03,120
um I'm gonna disagree with Eric there I

1551
01:18:03,120 --> 01:18:04,679
think it would be super super easy

1552
01:18:04,679 --> 01:18:06,540
because if it's defined as a structured

1553
01:18:06,540 --> 01:18:08,400
field then it's going to be either a

1554
01:18:08,400 --> 01:18:09,600
list or a dictionary and that is

1555
01:18:09,600 --> 01:18:11,699
naturally extensible and you don't need

1556
01:18:11,699 --> 01:18:13,320
to registry all you do is is that the

1557
01:18:13,320 --> 01:18:14,400
next time you want to add one of these

1558
01:18:14,400 --> 01:18:17,760
things you have another uh uh

1559
01:18:17,760 --> 01:18:20,040
uh RFC that Updates this one and it adds

1560
01:18:20,040 --> 01:18:22,880
a new value that is the simplest

1561
01:18:22,880 --> 01:18:25,140
extensibility model the ITF and we do it

1562
01:18:25,140 --> 01:18:27,360
all the time uh you only need a registry

1563
01:18:27,360 --> 01:18:29,120
when you need uncoordinated

1564
01:18:29,120 --> 01:18:31,080
extensibility and I don't think that's

1565
01:18:31,080 --> 01:18:32,760
the case here I think we'd want to come

1566
01:18:32,760 --> 01:18:34,320
to consensus the next time that we

1567
01:18:34,320 --> 01:18:36,659
Define something so it's super super

1568
01:18:36,659 --> 01:18:39,320
easy

1569
01:18:42,080 --> 01:18:48,260
super easy in ift ITF ietf terms

1570
01:18:52,080 --> 01:18:52,880
um

1571
01:18:52,880 --> 01:18:56,300
here let me add myself to the queue uh

1572
01:18:56,300 --> 01:18:59,219
one comment Mark about the dates going

1573
01:18:59,219 --> 01:19:02,520
back to the date think you say integer

1574
01:19:02,520 --> 01:19:04,739
plus epoch

1575
01:19:04,739 --> 01:19:06,239
um I

1576
01:19:06,239 --> 01:19:09,360
have experienced working with teams

1577
01:19:09,360 --> 01:19:12,060
where they've said they've used integer

1578
01:19:12,060 --> 01:19:14,219
fields and then there's the question of

1579
01:19:14,219 --> 01:19:16,980
well what is your origin time for the

1580
01:19:16,980 --> 01:19:19,560
epoch and my understanding is there are

1581
01:19:19,560 --> 01:19:22,320
different origin times floating around

1582
01:19:22,320 --> 01:19:24,600
for Epoch now maybe that's just because

1583
01:19:24,600 --> 01:19:25,560
I

1584
01:19:25,560 --> 01:19:27,659
spend too much time in a Microsoft world

1585
01:19:27,659 --> 01:19:31,020
but is it

1586
01:19:31,020 --> 01:19:34,140
is that a problem that other people have

1587
01:19:34,140 --> 01:19:35,159
seen

1588
01:19:35,159 --> 01:19:38,640
that what is the epoch origin you said

1589
01:19:38,640 --> 01:19:42,440
1970 but I've heard other dates

1590
01:19:42,719 --> 01:19:46,520
just specify it

1591
01:19:48,560 --> 01:19:50,940
yeah it's not in the message though

1592
01:19:50,940 --> 01:19:52,320
right

1593
01:19:52,320 --> 01:19:53,820
no

1594
01:19:53,820 --> 01:19:56,960
but it's in the semantics

1595
01:20:04,500 --> 01:20:07,159
foreign

1596
01:20:08,460 --> 01:20:11,219
Eric you uh you suggested you would be

1597
01:20:11,219 --> 01:20:13,199
interested in a poll

1598
01:20:13,199 --> 01:20:16,320
uh with regards to interest in the life

1599
01:20:16,320 --> 01:20:18,060
cycle

1600
01:20:18,060 --> 01:20:20,040
um Bridge

1601
01:20:20,040 --> 01:20:22,980
do you want to do that

1602
01:20:22,980 --> 01:20:25,500
uh sure how do you want to phrase the

1603
01:20:25,500 --> 01:20:27,679
question

1604
01:20:29,520 --> 01:20:31,460
um

1605
01:20:31,460 --> 01:20:33,659
votes for

1606
01:20:33,659 --> 01:20:36,719
go ahead yeah so my recommendations

1607
01:20:36,719 --> 01:20:40,860
first ask should we just move on with

1608
01:20:40,860 --> 01:20:43,560
deportation as we have it because it's

1609
01:20:43,560 --> 01:20:45,840
finished pretty much

1610
01:20:45,840 --> 01:20:48,600
um so we we could just have it if we

1611
01:20:48,600 --> 01:20:49,980
want to have it

1612
01:20:49,980 --> 01:20:51,420
um

1613
01:20:51,420 --> 01:20:54,239
and would that be good or not

1614
01:20:54,239 --> 01:20:57,000
um just finishing the application in one

1615
01:20:57,000 --> 01:20:59,460
way or the other and then the second

1616
01:20:59,460 --> 01:21:02,820
question would be for those who um

1617
01:21:02,820 --> 01:21:06,179
sorry I misspelled so the first question

1618
01:21:06,179 --> 01:21:09,120
is so should deprecation be

1619
01:21:09,120 --> 01:21:12,120
syntactically aligned with sunset or

1620
01:21:12,120 --> 01:21:13,440
should it be

1621
01:21:13,440 --> 01:21:15,600
something else

1622
01:21:15,600 --> 01:21:18,540
um that is supported by a structured

1623
01:21:18,540 --> 01:21:20,040
field so that would be the first

1624
01:21:20,040 --> 01:21:22,199
question

1625
01:21:22,199 --> 01:21:24,179
assuming that we keep deprecation

1626
01:21:24,179 --> 01:21:25,800
separate

1627
01:21:25,800 --> 01:21:27,780
um I think it would be interesting to

1628
01:21:27,780 --> 01:21:29,520
figure out and the second then would be

1629
01:21:29,520 --> 01:21:33,380
or should we

1630
01:21:34,139 --> 01:21:36,239
stop this idea of having a separate

1631
01:21:36,239 --> 01:21:38,940
application header and instead

1632
01:21:38,940 --> 01:21:42,020
suit for like this unified life cycle

1633
01:21:42,020 --> 01:21:45,900
header field that can have multiple

1634
01:21:45,900 --> 01:21:49,679
um of those life cycle stages in it and

1635
01:21:49,679 --> 01:21:51,420
we would just start maybe with sunset

1636
01:21:51,420 --> 01:21:55,040
interpretation as a starter set

1637
01:22:05,100 --> 01:22:07,280
doesn't look like we'll get to a

1638
01:22:07,280 --> 01:22:11,540
statistically relevant result here

1639
01:22:16,460 --> 01:22:20,639
or I could say twice as many wanted that

1640
01:22:20,639 --> 01:22:22,820
way

1641
01:22:24,480 --> 01:22:27,120
I I think we're seeing a bias for the uh

1642
01:22:27,120 --> 01:22:30,559
for an answer on the second question

1643
01:22:30,600 --> 01:22:34,219
that is that is very well uh possible

1644
01:22:34,219 --> 01:22:38,060
let's try the other question

1645
01:22:42,840 --> 01:22:47,300
upper right corner of the bar graph yep

1646
01:23:03,960 --> 01:23:06,900
let's see if I

1647
01:23:06,900 --> 01:23:09,259
get

1648
01:23:34,500 --> 01:23:36,420
I probably should have said replacement

1649
01:23:36,420 --> 01:23:40,280
as opposed to alternative

1650
01:23:53,360 --> 01:23:57,020
okay we look fairly stable at 12

1651
01:23:57,020 --> 01:24:00,120
participants nine saying yes we should

1652
01:24:00,120 --> 01:24:02,580
explore the use of life cycle as a

1653
01:24:02,580 --> 01:24:04,679
alternative to Sunset and deprecation

1654
01:24:04,679 --> 01:24:06,480
Fields with three

1655
01:24:06,480 --> 01:24:10,759
saying not raising their hand

1656
01:24:11,340 --> 01:24:12,900
so

1657
01:24:12,900 --> 01:24:14,719
there is

1658
01:24:14,719 --> 01:24:17,580
enthusiasm for that proposal I don't

1659
01:24:17,580 --> 01:24:22,639
know does that count as consensus rich

1660
01:24:23,580 --> 01:24:25,320
it's gonna have to be confirmed on the

1661
01:24:25,320 --> 01:24:26,880
list not because there's not a lot of

1662
01:24:26,880 --> 01:24:30,800
people voting yeah yeah

1663
01:24:33,719 --> 01:24:38,179
um Julian's in the queue go ahead Julian

1664
01:24:42,420 --> 01:24:45,179
hello

1665
01:24:45,179 --> 01:24:46,260
hello

1666
01:24:46,260 --> 01:24:47,940
okay

1667
01:24:47,940 --> 01:24:48,540
um

1668
01:24:48,540 --> 01:24:51,659
the note that Mark were very unhappy

1669
01:24:51,659 --> 01:24:53,580
about the first question maybe they

1670
01:24:53,580 --> 01:24:57,239
should explain that themselves

1671
01:24:57,239 --> 01:25:00,360
um the question that I have is if we are

1672
01:25:00,360 --> 01:25:02,580
concerned about consistency between

1673
01:25:02,580 --> 01:25:05,639
these two header fields we actually have

1674
01:25:05,639 --> 01:25:09,360
any data about the adoption of Sunset

1675
01:25:09,360 --> 01:25:13,620
and how many people have actually for

1676
01:25:13,620 --> 01:25:17,239
that I put the reviews

1677
01:25:17,280 --> 01:25:20,360
just asking

1678
01:25:27,060 --> 01:25:30,239
so maybe I can jump in here so it's it's

1679
01:25:30,239 --> 01:25:31,860
not a scientific poll

1680
01:25:31,860 --> 01:25:34,199
um I've seen sunset being recommended in

1681
01:25:34,199 --> 01:25:37,020
some API guidelines here and there

1682
01:25:37,020 --> 01:25:38,219
um

1683
01:25:38,219 --> 01:25:40,320
it's not that everybody uses it but it's

1684
01:25:40,320 --> 01:25:42,300
something that I've seen a doctor at

1685
01:25:42,300 --> 01:25:45,060
least in some cases I have received a

1686
01:25:45,060 --> 01:25:47,280
few not many but a few questions around

1687
01:25:47,280 --> 01:25:49,679
deprecation asking hey when is this

1688
01:25:49,679 --> 01:25:51,600
ready we would like to make that part of

1689
01:25:51,600 --> 01:25:54,239
our guidelines so we're not sure if we

1690
01:25:54,239 --> 01:25:56,340
should reference it because it's just a

1691
01:25:56,340 --> 01:25:57,480
graph

1692
01:25:57,480 --> 01:26:00,000
um so I would say at least there's

1693
01:26:00,000 --> 01:26:01,500
interest

1694
01:26:01,500 --> 01:26:04,380
um I don't know how much adoption of

1695
01:26:04,380 --> 01:26:06,000
sunset is out there I think for the

1696
01:26:06,000 --> 01:26:07,380
application there's probably none

1697
01:26:07,380 --> 01:26:08,580
because

1698
01:26:08,580 --> 01:26:11,280
it only has been floating around in the

1699
01:26:11,280 --> 01:26:13,500
craft and maybe people don't feel

1700
01:26:13,500 --> 01:26:14,520
confident

1701
01:26:14,520 --> 01:26:17,520
um enough but for Sunset there is some

1702
01:26:17,520 --> 01:26:21,620
adults that's that's the only thing

1703
01:26:27,540 --> 01:26:31,400
oh and Microsoft is doing it okay

1704
01:26:31,440 --> 01:26:34,759
that's always good to know

1705
01:26:40,920 --> 01:26:42,360
okay

1706
01:26:42,360 --> 01:26:43,199
um

1707
01:26:43,199 --> 01:26:44,699
I

1708
01:26:44,699 --> 01:26:47,460
you have you've heard feedback from the

1709
01:26:47,460 --> 01:26:50,820
people who are present in this room Eric

1710
01:26:50,820 --> 01:26:51,840
um

1711
01:26:51,840 --> 01:26:53,820
I think as rich said it would be good to

1712
01:26:53,820 --> 01:26:59,040
take this to the list and get a broader

1713
01:26:59,040 --> 01:27:03,719
um sense of interest in creating a

1714
01:27:03,719 --> 01:27:06,540
Consolidated lifecycle Adder

1715
01:27:06,540 --> 01:27:09,420
um you might find that the interest for

1716
01:27:09,420 --> 01:27:12,659
it is significantly more

1717
01:27:12,659 --> 01:27:15,799
uh for that

1718
01:27:19,620 --> 01:27:22,560
okay I'll do that um at least I'll ask

1719
01:27:22,560 --> 01:27:24,420
and then I see it I have to I have to

1720
01:27:24,420 --> 01:27:26,280
admit right I put a lot of effort into

1721
01:27:26,280 --> 01:27:29,040
that application thing it's kind of sad

1722
01:27:29,040 --> 01:27:32,040
to see you then I'm I'm not quite buying

1723
01:27:32,040 --> 01:27:34,139
marks thing that it's just a simple

1724
01:27:34,139 --> 01:27:36,540
little edit um but anyway that's not a

1725
01:27:36,540 --> 01:27:39,060
discussion we have to have now but um

1726
01:27:39,060 --> 01:27:41,280
okay that's fine uh at least I'll write

1727
01:27:41,280 --> 01:27:42,920
a little note today

1728
01:27:42,920 --> 01:27:47,340
and we can see what that needs to do and

1729
01:27:47,340 --> 01:27:48,719
just to confirm Julian's asking

1730
01:27:48,719 --> 01:27:51,239
currently in the spec it's an ISO day

1731
01:27:51,239 --> 01:27:54,420
right not an HTTP date

1732
01:27:54,420 --> 01:27:57,300
yes currently it's the same as Sunset

1733
01:27:57,300 --> 01:27:59,580
because there was the original idea that

1734
01:27:59,580 --> 01:28:01,679
both would use the same syntax and

1735
01:28:01,679 --> 01:28:03,960
that's the current status but there is

1736
01:28:03,960 --> 01:28:06,780
this open issue that I think was raised

1737
01:28:06,780 --> 01:28:08,900
by

1738
01:28:11,340 --> 01:28:14,040
Mark okay cool well thank you for uh all

1739
01:28:14,040 --> 01:28:15,239
that information on the deprecation

1740
01:28:15,239 --> 01:28:18,540
header and it's been a good conversation

1741
01:28:18,540 --> 01:28:21,380
foreign

1742
01:28:21,380 --> 01:28:25,440
moving on to item potency I don't

1743
01:28:25,440 --> 01:28:27,420
believe

1744
01:28:27,420 --> 01:28:29,760
Sanjay is

1745
01:28:29,760 --> 01:28:32,219
here so unfortunately Eric you you are

1746
01:28:32,219 --> 01:28:35,219
the you were the sole person in the room

1747
01:28:35,219 --> 01:28:38,159
uh attached to this specification I

1748
01:28:38,159 --> 01:28:41,760
believe uh from what I've seen uh most

1749
01:28:41,760 --> 01:28:45,060
of these updates are fairly minor

1750
01:28:45,060 --> 01:28:46,980
um do you have an idea as to anything

1751
01:28:46,980 --> 01:28:50,760
that is blocking uh these changes from

1752
01:28:50,760 --> 01:28:53,520
going into the spec and was being able

1753
01:28:53,520 --> 01:28:56,820
to move towards last call

1754
01:28:56,820 --> 01:28:57,960
um

1755
01:28:57,960 --> 01:28:59,940
to be honest I haven't looked at this

1756
01:28:59,940 --> 01:29:01,560
one in a while

1757
01:29:01,560 --> 01:29:02,940
um

1758
01:29:02,940 --> 01:29:05,940
it's true there are no formal blockers

1759
01:29:05,940 --> 01:29:08,340
in there

1760
01:29:08,340 --> 01:29:09,179
um

1761
01:29:09,179 --> 01:29:12,360
but yeah I can't tell it's I I don't

1762
01:29:12,360 --> 01:29:14,820
think that it's ready for last call I

1763
01:29:14,820 --> 01:29:17,400
think it would probably take a little

1764
01:29:17,400 --> 01:29:19,460
bit of effort to kind of

1765
01:29:19,460 --> 01:29:22,260
re-read through it and see where we are

1766
01:29:22,260 --> 01:29:24,000
but um

1767
01:29:24,000 --> 01:29:27,120
okay I I I can reach out to Sanjay

1768
01:29:27,120 --> 01:29:29,699
because I know it was expired last in

1769
01:29:29,699 --> 01:29:32,760
ietf 113 and it did get

1770
01:29:32,760 --> 01:29:35,159
um updated

1771
01:29:35,159 --> 01:29:36,300
um

1772
01:29:36,300 --> 01:29:39,000
so yeah but I think mostly

1773
01:29:39,000 --> 01:29:41,040
mostly I think you know just to have a

1774
01:29:41,040 --> 01:29:44,760
like a non-expired person pretty much

1775
01:29:44,760 --> 01:29:46,800
okay

1776
01:29:46,800 --> 01:29:51,139
um I I I'll I'll talk with Sanjay

1777
01:29:51,300 --> 01:29:54,239
and sorry to go back to an issue that I

1778
01:29:54,239 --> 01:29:57,120
maybe I confused Julian is saying Sunset

1779
01:29:57,120 --> 01:29:58,980
uses HTTP date

1780
01:29:58,980 --> 01:30:01,380
is that correct

1781
01:30:01,380 --> 01:30:04,679
I thought it used ISO

1782
01:30:04,679 --> 01:30:07,500
I think that's insane pretty much

1783
01:30:07,500 --> 01:30:11,300
no it is no

1784
01:30:14,400 --> 01:30:18,380
idea so when we say HTTP date we mean

1785
01:30:18,380 --> 01:30:22,380
the bizarre syntax that's used in the

1786
01:30:22,380 --> 01:30:23,699
date header field

1787
01:30:23,699 --> 01:30:26,040
and the iso ones the

1788
01:30:26,040 --> 01:30:28,679
you know year Dash month Dash day that

1789
01:30:28,679 --> 01:30:30,719
you're using in in the draft

1790
01:30:30,719 --> 01:30:33,179
the other one's like Wednesday blah blah

1791
01:30:33,179 --> 01:30:34,980
blah

1792
01:30:34,980 --> 01:30:39,060
yeah it is not best practice

1793
01:30:39,060 --> 01:30:41,159
it's Wednesday blah blah blah I think

1794
01:30:41,159 --> 01:30:44,699
because that's what um Sunset is doing

1795
01:30:44,699 --> 01:30:48,239
right so that's not ISO

1796
01:30:48,239 --> 01:30:50,900
okay in that case it's not using ISO

1797
01:30:50,900 --> 01:30:54,540
okay Julia

1798
01:30:54,540 --> 01:30:57,300
yeah okay so um

1799
01:30:57,300 --> 01:31:00,540
in which case although I would prefer to

1800
01:31:00,540 --> 01:31:02,400
have ISO everywhere

1801
01:31:02,400 --> 01:31:04,800
um the fact that they use the same

1802
01:31:04,800 --> 01:31:08,219
format as HTTP date

1803
01:31:08,219 --> 01:31:12,360
is of course a good reason for keeping

1804
01:31:12,360 --> 01:31:15,360
the consistency because although it's a

1805
01:31:15,360 --> 01:31:18,179
very broken and bad format that at least

1806
01:31:18,179 --> 01:31:19,679
has

1807
01:31:19,679 --> 01:31:21,480
browser sorry

1808
01:31:21,480 --> 01:31:24,620
I was up everywhere

1809
01:31:27,719 --> 01:31:30,900
so we the current state is

1810
01:31:30,900 --> 01:31:33,420
we are not inventing a new

1811
01:31:33,420 --> 01:31:36,480
data presentation

1812
01:31:36,480 --> 01:31:41,659
we keep the HTTP one date youth values

1813
01:31:41,659 --> 01:31:45,000
which I think

1814
01:31:45,000 --> 01:31:50,659
is the deepest thing to do right now

1815
01:31:51,480 --> 01:31:54,960
okay so so if I think what you're saying

1816
01:31:54,960 --> 01:31:57,120
is if there is a decision to stay with

1817
01:31:57,120 --> 01:31:59,639
the two separate headers then you agree

1818
01:31:59,639 --> 01:32:01,860
with Eric that consistency between the

1819
01:32:01,860 --> 01:32:05,639
two headers is uh is

1820
01:32:05,639 --> 01:32:07,500
good and we should not actually

1821
01:32:07,500 --> 01:32:09,659
introduce an ISO format

1822
01:32:09,659 --> 01:32:12,540
okay so so I think

1823
01:32:12,540 --> 01:32:15,120
if without construction here and the

1824
01:32:15,120 --> 01:32:16,500
current state of things is the right

1825
01:32:16,500 --> 01:32:18,980
state

1826
01:32:20,880 --> 01:32:24,380
okay thank you

1827
01:32:25,620 --> 01:32:28,040
okay

1828
01:32:35,840 --> 01:32:40,020
which is linked template and of course

1829
01:32:40,020 --> 01:32:42,659
Mark has his structured field

1830
01:32:42,659 --> 01:32:45,300
uh thing are there any reasons why you

1831
01:32:45,300 --> 01:32:46,679
wouldn't go with a structured field

1832
01:32:46,679 --> 01:32:48,960
there mark

1833
01:32:48,960 --> 01:32:51,360
um you know they're the same

1834
01:32:51,360 --> 01:32:53,880
discussions about consistency

1835
01:32:53,880 --> 01:32:57,300
um I personally think that it's not that

1836
01:32:57,300 --> 01:32:58,800
big of a deal if this small

1837
01:32:58,800 --> 01:33:01,139
inconsistencies

1838
01:33:01,139 --> 01:33:04,219
um especially because uh we noticed in

1839
01:33:04,219 --> 01:33:07,620
uh the retrofit draft we're defining a

1840
01:33:07,620 --> 01:33:09,060
structured version of the link header

1841
01:33:09,060 --> 01:33:10,739
and so we can just reuse that syntax and

1842
01:33:10,739 --> 01:33:13,620
so that's very nice and straightforward

1843
01:33:13,620 --> 01:33:16,080
so I'll probably do a PR for this and to

1844
01:33:16,080 --> 01:33:17,520
have folks have a look at it and we'll

1845
01:33:17,520 --> 01:33:19,560
see how it goes

1846
01:33:19,560 --> 01:33:21,540
um that and I think someone raised an

1847
01:33:21,540 --> 01:33:22,980
issue yes should should the anchor

1848
01:33:22,980 --> 01:33:25,500
parameter also allow URI template which

1849
01:33:25,500 --> 01:33:26,639
is an interesting thing is I need to

1850
01:33:26,639 --> 01:33:28,320
think about it a bit more

1851
01:33:28,320 --> 01:33:29,280
um but

1852
01:33:29,280 --> 01:33:31,679
seems reasonable

1853
01:33:31,679 --> 01:33:34,560
I I will say this idea of being able to

1854
01:33:34,560 --> 01:33:37,139
define a linked template that can work

1855
01:33:37,139 --> 01:33:40,020
for collections of things has been an

1856
01:33:40,020 --> 01:33:42,179
issue that has come up quite a bit in

1857
01:33:42,179 --> 01:33:45,860
the past in the open API world

1858
01:33:46,679 --> 01:33:48,239
cool

1859
01:33:48,239 --> 01:33:49,620
okay

1860
01:33:49,620 --> 01:33:51,540
so um

1861
01:33:51,540 --> 01:33:53,880
the other documents are the media types

1862
01:33:53,880 --> 01:33:55,500
and rate limit headers but we have

1863
01:33:55,500 --> 01:33:57,840
already covered those unless Roberto you

1864
01:33:57,840 --> 01:34:00,719
have any other issues here that you

1865
01:34:00,719 --> 01:34:04,760
wanted to bring up I'm assuming not

1866
01:34:06,840 --> 01:34:10,040
no I think not

1867
01:34:10,199 --> 01:34:11,719
excellent

1868
01:34:11,719 --> 01:34:16,400
which then I believe brings us to oh

1869
01:34:16,400 --> 01:34:18,600
just a

1870
01:34:18,600 --> 01:34:20,460
Martin

1871
01:34:20,460 --> 01:34:25,080
um do you have any updates on your

1872
01:34:25,080 --> 01:34:28,080
Explorations around the date header and

1873
01:34:28,080 --> 01:34:29,400
where that might live

1874
01:34:29,400 --> 01:34:32,340
yeah so um we had some discussions in

1875
01:34:32,340 --> 01:34:34,620
the Ohio walking group uh earlier this

1876
01:34:34,620 --> 01:34:35,400
week

1877
01:34:35,400 --> 01:34:37,380
and we essentially concluded to take the

1878
01:34:37,380 --> 01:34:39,420
the pieces of this work that are

1879
01:34:39,420 --> 01:34:41,820
relevant to that and and take it there

1880
01:34:41,820 --> 01:34:45,000
and and probably I'll abandon doing

1881
01:34:45,000 --> 01:34:48,600
anything more generic so I mean there's

1882
01:34:48,600 --> 01:34:49,679
some stuff in there that's interesting

1883
01:34:49,679 --> 01:34:51,060
but I don't think it's really worth

1884
01:34:51,060 --> 01:34:53,600
pursuing

1885
01:34:56,580 --> 01:34:59,940
thank you and Eric just brought up an

1886
01:34:59,940 --> 01:35:01,560
excellent point

1887
01:35:01,560 --> 01:35:04,619
that we should mention the fact that uh

1888
01:35:04,619 --> 01:35:07,320
the link set document has now been

1889
01:35:07,320 --> 01:35:08,400
published

1890
01:35:08,400 --> 01:35:10,380
and I'm sorry Eric I did not bring

1891
01:35:10,380 --> 01:35:13,139
cheesy fireworks but

1892
01:35:13,139 --> 01:35:14,940
it is very exciting to see the first

1893
01:35:14,940 --> 01:35:18,420
document from this group go go all the

1894
01:35:18,420 --> 01:35:21,139
way through the process

1895
01:35:21,780 --> 01:35:24,300
yes congratulations to the authors and

1896
01:35:24,300 --> 01:35:26,880
and also working group comments so

1897
01:35:26,880 --> 01:35:30,480
hopefully the first of several I won't

1898
01:35:30,480 --> 01:35:33,678
say many let's say several

1899
01:35:37,080 --> 01:35:40,739
all right uh okay so with that uh any

1900
01:35:40,739 --> 01:35:42,119
other business that people want to bring

1901
01:35:42,119 --> 01:35:44,960
up to the working group

1902
01:35:50,100 --> 01:35:52,560
all right thank you everyone for your

1903
01:35:52,560 --> 01:35:56,520
participation uh this

1904
01:35:56,520 --> 01:36:00,420
uh with the end of our ietf 114 meeting

1905
01:36:00,420 --> 01:36:03,179
hope to see many of you in London on the

1906
01:36:03,179 --> 01:36:06,119
mailing list in the PRS on video

1907
01:36:06,119 --> 01:36:10,699
take care travel safely thank you

1908
01:36:11,460 --> 01:36:14,179
thank you

1909
01:36:14,219 --> 01:36:16,440
go grab a last cookie

1910
01:36:16,440 --> 01:36:19,638
if you're in here

1911
01:36:20,280 --> 01:36:22,320
my mouse is now captured in the screen

1912
01:36:22,320 --> 01:36:24,960
share so I can't do anything how do I

1913
01:36:24,960 --> 01:36:26,520
get it out

1914
01:36:26,520 --> 01:36:29,280
just close the tab

1915
01:36:29,280 --> 01:36:32,940
I can't get out of this

1916
01:36:32,940 --> 01:36:37,280
yeah the screen share to do anything

1917
01:36:38,280 --> 01:36:41,340
ah there we go I don't know what I did

1918
01:36:41,340 --> 01:36:43,880
thanks everybody

1919
01:36:52,139 --> 01:36:54,260
um

1920
01:37:15,659 --> 01:37:17,659
um

