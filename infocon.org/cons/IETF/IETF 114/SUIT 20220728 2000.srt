1
00:00:04,960 --> 00:00:06,799
this meeting usually rule of thumb is

2
00:00:06,799 --> 00:00:08,880
working group documents beat documents

3
00:00:08,880 --> 00:00:10,559
that are not working group documents and

4
00:00:10,559 --> 00:00:11,679
so

5
00:00:11,679 --> 00:00:13,599
uh we let the working of documents

6
00:00:13,599 --> 00:00:14,960
expand time

7
00:00:14,960 --> 00:00:16,400
and don't call time because we usually

8
00:00:16,400 --> 00:00:17,920
have a bunch of individual documents now

9
00:00:17,920 --> 00:00:19,039
that most of our documents are working

10
00:00:19,039 --> 00:00:20,400
group documents we can't follow that

11
00:00:20,400 --> 00:00:22,880
right now well well we can but it won't

12
00:00:22,880 --> 00:00:24,240
help exactly

13
00:00:24,240 --> 00:00:25,519
all right there's four o'clock so we

14
00:00:25,519 --> 00:00:27,439
should start okay let's go ahead and get

15
00:00:27,439 --> 00:00:28,800
going

16
00:00:28,800 --> 00:00:34,320
welcome to suit at ietf 114.

17
00:00:34,800 --> 00:00:36,800
by thursday you probably know the note

18
00:00:36,800 --> 00:00:39,280
well already but this is the

19
00:00:39,280 --> 00:00:41,600
rights privileges and responsibilities

20
00:00:41,600 --> 00:00:42,840
as

21
00:00:42,840 --> 00:00:45,760
participants please follow the

22
00:00:45,760 --> 00:00:48,160
code of conduct and treat each other

23
00:00:48,160 --> 00:00:50,879
with respect in addition

24
00:00:50,879 --> 00:00:52,800
you need to wear a mask in this room

25
00:00:52,800 --> 00:00:55,360
unless you're on the

26
00:00:55,360 --> 00:00:57,840
pink axe

27
00:00:57,840 --> 00:01:01,359
by the presenters mike

28
00:01:01,359 --> 00:01:04,000
and uh we just did the administrative

29
00:01:04,000 --> 00:01:06,400
tasks so i'm going to skip that

30
00:01:06,400 --> 00:01:08,320
so the agenda we have a long agenda

31
00:01:08,320 --> 00:01:09,360
today

32
00:01:09,360 --> 00:01:11,200
for um

33
00:01:11,200 --> 00:01:12,880
it seemed like two weeks ago we were not

34
00:01:12,880 --> 00:01:14,960
gonna have any presentations and now we

35
00:01:14,960 --> 00:01:16,400
have nine

36
00:01:16,400 --> 00:01:17,759
um

37
00:01:17,759 --> 00:01:20,400
so this is the uh

38
00:01:20,400 --> 00:01:22,960
first page of the draft agenda and

39
00:01:22,960 --> 00:01:26,320
here's the second page

40
00:01:26,320 --> 00:01:28,560
any bashes to that agenda it's the same

41
00:01:28,560 --> 00:01:31,360
one that's posted

42
00:01:32,400 --> 00:01:34,880
okay with no bashes we'll get into the

43
00:01:34,880 --> 00:01:38,280
first one

44
00:01:42,640 --> 00:01:46,079
it's the hackathon reporter okay yeah

45
00:01:49,759 --> 00:01:51,520
all right sue taco thumb report is this

46
00:01:51,520 --> 00:01:53,040
thing on otherwise hand me the white can

47
00:01:53,040 --> 00:01:55,840
you hear anything no

48
00:01:56,079 --> 00:01:57,840
switch the switch

49
00:01:57,840 --> 00:01:59,280
is on all right

50
00:01:59,280 --> 00:02:01,040
one two three now it's on all right

51
00:02:01,040 --> 00:02:03,520
great all right hackathon report uh we

52
00:02:03,520 --> 00:02:06,479
had a combined cose suit t hackathon

53
00:02:06,479 --> 00:02:07,840
table with a bunch of participants

54
00:02:07,840 --> 00:02:09,520
listed there i'm going to go through

55
00:02:09,520 --> 00:02:11,520
that go through this uh pretty quickly

56
00:02:11,520 --> 00:02:13,360
until we get to the two issues to report

57
00:02:13,360 --> 00:02:16,400
on go ahead next slide

58
00:02:16,800 --> 00:02:18,160
there was a bunch of issues that were

59
00:02:18,160 --> 00:02:20,000
filed during the hackathon

60
00:02:20,000 --> 00:02:21,680
the whole set on the top i am not going

61
00:02:21,680 --> 00:02:23,040
to talk about because they're trivial

62
00:02:23,040 --> 00:02:24,560
grammar stuff and are pressed for time

63
00:02:24,560 --> 00:02:26,560
so only mention the bottom two

64
00:02:26,560 --> 00:02:28,080
uh the bottom two have a slide on each

65
00:02:28,080 --> 00:02:29,920
of them so that means only real two

66
00:02:29,920 --> 00:02:32,239
slides of content so first one so if you

67
00:02:32,239 --> 00:02:33,680
have issues go and read through those

68
00:02:33,680 --> 00:02:35,360
all right first question that we had at

69
00:02:35,360 --> 00:02:37,519
the at the tpackathon was

70
00:02:37,519 --> 00:02:39,920
um it came up as far as teep trying to

71
00:02:39,920 --> 00:02:42,319
implement the suit manifest okay so the

72
00:02:42,319 --> 00:02:45,040
eat profile previously used uh software

73
00:02:45,040 --> 00:02:46,879
name and software version claims but we

74
00:02:46,879 --> 00:02:48,400
observed that those were meant for human

75
00:02:48,400 --> 00:02:50,319
readable strings okay they were not

76
00:02:50,319 --> 00:02:52,560
necessarily machine readable so for

77
00:02:52,560 --> 00:02:54,000
example there was nothing to prevent

78
00:02:54,000 --> 00:02:56,560
somebody from patching a binary and then

79
00:02:56,560 --> 00:02:58,400
just not updating the human readable

80
00:02:58,400 --> 00:02:59,760
string right so it wasn't you know

81
00:02:59,760 --> 00:03:01,280
cryptographically you know bound to

82
00:03:01,280 --> 00:03:02,720
anything so that's the wrong thing and

83
00:03:02,720 --> 00:03:03,920
so lauren said you probably want to use

84
00:03:03,920 --> 00:03:05,280
the manifest claim so that's what we did

85
00:03:05,280 --> 00:03:07,040
in in t okay

86
00:03:07,040 --> 00:03:08,560
the only issue with that is that

87
00:03:08,560 --> 00:03:12,000
currently the manifests claim requires a

88
00:03:12,000 --> 00:03:14,560
full suit manifest right so manifest

89
00:03:14,560 --> 00:03:17,280
format allows you to have a suit

90
00:03:17,280 --> 00:03:19,360
envelope and we said we would like to be

91
00:03:19,360 --> 00:03:20,239
able to do that without having the

92
00:03:20,239 --> 00:03:22,000
entire suit manifest and is there a way

93
00:03:22,000 --> 00:03:23,599
to do that that was the question raised

94
00:03:23,599 --> 00:03:25,120
and we filed this issue for that for

95
00:03:25,120 --> 00:03:26,959
that it says okay for the manifest

96
00:03:26,959 --> 00:03:29,120
format we've got a content type as long

97
00:03:29,120 --> 00:03:30,239
as you have something to fill into a

98
00:03:30,239 --> 00:03:31,760
content type that means it's a reference

99
00:03:31,760 --> 00:03:33,120
you could do it even without a suit

100
00:03:33,120 --> 00:03:34,239
envelope right you could use something

101
00:03:34,239 --> 00:03:36,000
other than the suit envelope so example

102
00:03:36,000 --> 00:03:37,840
during the hackathon here was a proposal

103
00:03:37,840 --> 00:03:40,000
that was submitted as a per request to

104
00:03:40,000 --> 00:03:41,280
say okay

105
00:03:41,280 --> 00:03:42,959
alternate version the manifest body is

106
00:03:42,959 --> 00:03:44,239
not a suit envelope it's a suit

107
00:03:44,239 --> 00:03:46,239
reference which has like a uri and a

108
00:03:46,239 --> 00:03:48,400
manifest sequence number and brennan was

109
00:03:48,400 --> 00:03:49,920
online we went back and forth and said

110
00:03:49,920 --> 00:03:51,920
this kind of thing might make sense okay

111
00:03:51,920 --> 00:03:54,000
and so right now the proposal is to

112
00:03:54,000 --> 00:03:55,840
maybe add this to the update management

113
00:03:55,840 --> 00:03:58,720
which is on the agenda later

114
00:03:58,720 --> 00:04:00,959
and of course this would require a co-op

115
00:04:00,959 --> 00:04:02,879
content format value to mean that's the

116
00:04:02,879 --> 00:04:05,280
format

117
00:04:05,439 --> 00:04:06,400
second

118
00:04:06,400 --> 00:04:07,920
issue that came up

119
00:04:07,920 --> 00:04:09,280
and so by the way if we want to defer

120
00:04:09,280 --> 00:04:11,920
discussion on that to the update update

121
00:04:11,920 --> 00:04:13,360
management document we could do that but

122
00:04:13,360 --> 00:04:15,280
that was one thing we followed one issue

123
00:04:15,280 --> 00:04:16,798
that we ran into when implementing and

124
00:04:16,798 --> 00:04:18,320
so we filed the issue

125
00:04:18,320 --> 00:04:19,918
and say we should really discuss a part

126
00:04:19,918 --> 00:04:21,600
of that document

127
00:04:21,600 --> 00:04:23,759
second issue that we ran into

128
00:04:23,759 --> 00:04:26,160
was uh having a suit parameter for the

129
00:04:26,160 --> 00:04:29,120
manifest sequence number so the t query

130
00:04:29,120 --> 00:04:31,280
response has now

131
00:04:31,280 --> 00:04:32,880
and this is now in draft 10 has system

132
00:04:32,880 --> 00:04:34,400
property claims

133
00:04:34,400 --> 00:04:35,919
although in teep there was a question

134
00:04:35,919 --> 00:04:37,199
about whether this is right but this is

135
00:04:37,199 --> 00:04:39,120
what draft 10 says

136
00:04:39,120 --> 00:04:41,919
and so in the suit report and now in the

137
00:04:41,919 --> 00:04:44,400
deep query response you can have this

138
00:04:44,400 --> 00:04:46,080
little blob of suit

139
00:04:46,080 --> 00:04:47,759
system property claims which has a suit

140
00:04:47,759 --> 00:04:49,360
component identifier

141
00:04:49,360 --> 00:04:51,600
and one or more suit parameters

142
00:04:51,600 --> 00:04:54,960
and this parameter is defined in

143
00:04:54,960 --> 00:04:56,479
in one of the documents that covers

144
00:04:56,479 --> 00:04:59,440
things like image digest size and so on

145
00:04:59,440 --> 00:05:00,479
but there's nothing that has the

146
00:05:00,479 --> 00:05:02,880
manifest sequence number to put in there

147
00:05:02,880 --> 00:05:04,479
right so the manifest document allows

148
00:05:04,479 --> 00:05:05,680
you to have suit manifest suit

149
00:05:05,680 --> 00:05:06,960
parameters

150
00:05:06,960 --> 00:05:08,479
the i think it's the update management

151
00:05:08,479 --> 00:05:10,160
one that augments that with additional

152
00:05:10,160 --> 00:05:12,639
suit mana suit parameters and this is

153
00:05:12,639 --> 00:05:15,120
just saying hey let's add yet another

154
00:05:15,120 --> 00:05:17,120
suit uh parameter that's possible here

155
00:05:17,120 --> 00:05:18,479
and put that into the extensions

156
00:05:18,479 --> 00:05:20,639
document just like we've put you know

157
00:05:20,639 --> 00:05:23,039
image digest and so on into there and so

158
00:05:23,039 --> 00:05:25,520
that's the proposal here

159
00:05:25,520 --> 00:05:26,880
option number one is to make that be

160
00:05:26,880 --> 00:05:28,400
type specific

161
00:05:28,400 --> 00:05:30,160
option number two is to make it be not

162
00:05:30,160 --> 00:05:33,600
be specific so that other protocols if

163
00:05:33,600 --> 00:05:35,120
they have the same problem could reuse

164
00:05:35,120 --> 00:05:36,320
option two

165
00:05:36,320 --> 00:05:38,320
so my personal preference is option two

166
00:05:38,320 --> 00:05:39,759
which means that would go into like the

167
00:05:39,759 --> 00:05:41,600
update management document but the point

168
00:05:41,600 --> 00:05:43,360
is the hackathon report is we ran into

169
00:05:43,360 --> 00:05:45,759
this we need some solution to it uh hey

170
00:05:45,759 --> 00:05:47,520
teep you should weigh in or sorry suit

171
00:05:47,520 --> 00:05:49,039
you should weigh in so the deep

172
00:05:49,039 --> 00:05:50,720
implementers know how to implement the

173
00:05:50,720 --> 00:05:52,400
suit manifest

174
00:05:52,400 --> 00:05:54,000
that is the set of technical issues that

175
00:05:54,000 --> 00:05:55,520
we ran into at the at the hackathon

176
00:05:55,520 --> 00:05:56,720
otherwise

177
00:05:56,720 --> 00:05:58,479
all was good

178
00:05:58,479 --> 00:06:00,719
okay

179
00:06:01,120 --> 00:06:03,919
go ahead brendan

180
00:06:05,120 --> 00:06:07,360
so the suit report has an explicit

181
00:06:07,360 --> 00:06:09,919
solution for this um it does have an

182
00:06:09,919 --> 00:06:12,560
unambiguous manifest reference in it the

183
00:06:12,560 --> 00:06:14,560
problem that you're encountering comes

184
00:06:14,560 --> 00:06:17,280
purely from taking the system property

185
00:06:17,280 --> 00:06:20,560
claims out of the suit report so i'm not

186
00:06:20,560 --> 00:06:22,319
sure that this is the issue you think it

187
00:06:22,319 --> 00:06:25,680
is i would argue in fact that the answer

188
00:06:25,680 --> 00:06:28,880
is to use a suit report

189
00:06:30,960 --> 00:06:32,560
yep so

190
00:06:32,560 --> 00:06:33,919
this isn't the word this isn't the

191
00:06:33,919 --> 00:06:35,919
discussion on the draft um so i won't

192
00:06:35,919 --> 00:06:38,400
respond i'll just say uh my report is at

193
00:06:38,400 --> 00:06:40,000
the hackathon the issue was raised and

194
00:06:40,000 --> 00:06:41,840
we need to come up with something and in

195
00:06:41,840 --> 00:06:44,080
your presentation brendan um and in the

196
00:06:44,080 --> 00:06:45,440
teep working group we discussed this

197
00:06:45,440 --> 00:06:46,880
briefly where you made the same comment

198
00:06:46,880 --> 00:06:49,120
and so you might be right the point is

199
00:06:49,120 --> 00:06:50,400
just i'm reporting that we had this

200
00:06:50,400 --> 00:06:52,319
discussion and you can report on the

201
00:06:52,319 --> 00:06:54,319
answer thank you

202
00:06:54,319 --> 00:06:57,319
thomas

203
00:07:06,240 --> 00:07:08,800
if you go back one slide um

204
00:07:08,800 --> 00:07:12,000
on the on the previous issue

205
00:07:14,840 --> 00:07:18,000
um yeah it's how do you

206
00:07:18,000 --> 00:07:19,520
give me an example on how this would

207
00:07:19,520 --> 00:07:21,919
then actually look like in in

208
00:07:21,919 --> 00:07:23,919
in deep

209
00:07:23,919 --> 00:07:24,960
in

210
00:07:24,960 --> 00:07:28,880
teep or eat did you say in

211
00:07:29,919 --> 00:07:32,319
it would obviously be the eat in the in

212
00:07:32,319 --> 00:07:34,880
the deep message but uh yeah yeah

213
00:07:34,880 --> 00:07:37,120
yeah so this is okay so um you have a

214
00:07:37,120 --> 00:07:39,680
tee the te boots up and i'll use an

215
00:07:39,680 --> 00:07:41,440
arm-based example right for my arm

216
00:07:41,440 --> 00:07:42,800
colleagues here

217
00:07:42,800 --> 00:07:47,599
let's say you have um tf-a version xyz

218
00:07:47,599 --> 00:07:48,400
okay

219
00:07:48,400 --> 00:07:51,840
and so you boot up and you send off an

220
00:07:51,840 --> 00:07:53,520
eat that goes off and the eat has

221
00:07:53,520 --> 00:07:55,199
multiple layers maybe one for the one

222
00:07:55,199 --> 00:07:57,039
for the trust zone hardware right one

223
00:07:57,039 --> 00:07:59,280
for the chip right one for one little

224
00:07:59,280 --> 00:08:01,680
piece of information about tf-a piece of

225
00:08:01,680 --> 00:08:03,120
information about opti and a piece of

226
00:08:03,120 --> 00:08:05,120
information about the the teep agent ta

227
00:08:05,120 --> 00:08:06,639
okay so that's what comes into your eat

228
00:08:06,639 --> 00:08:08,080
and that that however you encode that

229
00:08:08,080 --> 00:08:09,840
into each right

230
00:08:09,840 --> 00:08:12,560
in that okay you need to specify because

231
00:08:12,560 --> 00:08:14,160
now you have a piece of hardware and you

232
00:08:14,160 --> 00:08:15,599
have three components right in that

233
00:08:15,599 --> 00:08:17,440
chain right you have tf2sa you have opti

234
00:08:17,440 --> 00:08:19,520
and you have the the type agent

235
00:08:19,520 --> 00:08:20,879
and so each of those could have a suit

236
00:08:20,879 --> 00:08:22,319
manifest

237
00:08:22,319 --> 00:08:23,840
and so as part of your token you want to

238
00:08:23,840 --> 00:08:25,759
say here was the you know

239
00:08:25,759 --> 00:08:28,319
image digest or the manifest version

240
00:08:28,319 --> 00:08:30,479
number or whatever okay for each one of

241
00:08:30,479 --> 00:08:31,759
those layers and then i will send that

242
00:08:31,759 --> 00:08:33,279
off to the verifier

243
00:08:33,279 --> 00:08:34,399
and then i can say oh yeah all those

244
00:08:34,399 --> 00:08:36,399
things match you're good okay so how do

245
00:08:36,399 --> 00:08:37,839
you encode that and that's what this is

246
00:08:37,839 --> 00:08:38,799
talking about because you want to put

247
00:08:38,799 --> 00:08:40,719
the entire manifest into there you want

248
00:08:40,719 --> 00:08:42,159
a reference to it that's what this issue

249
00:08:42,159 --> 00:08:43,760
is is what's the easiest most efficient

250
00:08:43,760 --> 00:08:46,320
way to do that and so here in this

251
00:08:46,320 --> 00:08:48,000
example it's using the suit manifest

252
00:08:48,000 --> 00:08:50,480
number not the digest why because you

253
00:08:50,480 --> 00:08:52,080
can look up one from the other

254
00:08:52,080 --> 00:08:55,040
and so the policy on the verifier side

255
00:08:55,040 --> 00:08:57,279
to say is it good or not you would be

256
00:08:57,279 --> 00:08:59,120
allowed to have a policy that says suit

257
00:08:59,120 --> 00:09:00,959
manifest sequence number greater than or

258
00:09:00,959 --> 00:09:02,320
equal to five

259
00:09:02,320 --> 00:09:04,480
rather than saying digest is one of the

260
00:09:04,480 --> 00:09:06,160
following three things right the version

261
00:09:06,160 --> 00:09:07,760
five manifest the version six manifest

262
00:09:07,760 --> 00:09:09,440
the version seven manifest it's a little

263
00:09:09,440 --> 00:09:10,800
bit easier to deal with on the human

264
00:09:10,800 --> 00:09:12,959
authoring side and look up side but you

265
00:09:12,959 --> 00:09:14,320
can get one from the other and so that's

266
00:09:14,320 --> 00:09:16,160
why suit manifest number is slightly

267
00:09:16,160 --> 00:09:18,720
better than a suit digest right here

268
00:09:18,720 --> 00:09:19,680
okay

269
00:09:19,680 --> 00:09:23,839
thanks a lot that's really hard

270
00:09:24,080 --> 00:09:27,080
empty

271
00:09:50,240 --> 00:09:52,720
okay brendan would you come

272
00:09:52,720 --> 00:09:57,279
present uh on suit manifest 18.

273
00:09:57,519 --> 00:10:01,640
all right oh it's dark in here

274
00:10:04,320 --> 00:10:07,760
okay uh next slide please

275
00:10:09,279 --> 00:10:10,959
i was thinking right

276
00:10:10,959 --> 00:10:12,000
you want it

277
00:10:12,000 --> 00:10:17,880
oh uh yeah i could do that yep got it

278
00:10:18,160 --> 00:10:19,440
uh so

279
00:10:19,440 --> 00:10:21,839
largely this is editorial changes um

280
00:10:21,839 --> 00:10:24,560
there there hasn't really been uh much

281
00:10:24,560 --> 00:10:28,320
in terms of uh churn in the spec um

282
00:10:28,320 --> 00:10:30,800
really what we've done is just made a

283
00:10:30,800 --> 00:10:32,480
few of these editorial changes that i've

284
00:10:32,480 --> 00:10:34,240
got listed here

285
00:10:34,240 --> 00:10:35,920
since as you point out we are short for

286
00:10:35,920 --> 00:10:38,399
time i won't go through them um

287
00:10:38,399 --> 00:10:40,560
they are all in the github so that's

288
00:10:40,560 --> 00:10:42,240
relatively easy to track

289
00:10:42,240 --> 00:10:45,360
now there is one structural change and

290
00:10:45,360 --> 00:10:48,560
the structural change here is that i've

291
00:10:48,560 --> 00:10:50,399
added a reference to an algorithm

292
00:10:50,399 --> 00:10:53,440
profile document and uh unfortunately

293
00:10:53,440 --> 00:10:56,320
it's the if time permits document i'm

294
00:10:56,320 --> 00:10:58,880
i'm hoping that we can get past the uh

295
00:10:58,880 --> 00:11:00,959
the if time permits and get to talk to

296
00:11:00,959 --> 00:11:01,600
it

297
00:11:01,600 --> 00:11:02,959
talk about it because i think it's

298
00:11:02,959 --> 00:11:04,640
probably the most important thing we'll

299
00:11:04,640 --> 00:11:06,160
discuss today

300
00:11:06,160 --> 00:11:08,160
um

301
00:11:08,160 --> 00:11:11,040
there are there's also one technical

302
00:11:11,040 --> 00:11:14,480
change now this technical change was not

303
00:11:14,480 --> 00:11:18,320
taken lightly i really tried not to

304
00:11:18,320 --> 00:11:21,120
change the ordering of the keys in the

305
00:11:21,120 --> 00:11:23,600
suit manifest however one of our

306
00:11:23,600 --> 00:11:25,839
implementers was

307
00:11:25,839 --> 00:11:29,360
very vocal about making sure that the

308
00:11:29,360 --> 00:11:32,240
ordering in the cddl was precisely

309
00:11:32,240 --> 00:11:35,839
matched to the ordering of the canonical

310
00:11:35,839 --> 00:11:38,399
seaborn encoding and i do appreciate

311
00:11:38,399 --> 00:11:40,000
that concern

312
00:11:40,000 --> 00:11:44,640
um so what i did was to look back at

313
00:11:44,640 --> 00:11:48,160
exactly what requirements we had and why

314
00:11:48,160 --> 00:11:50,160
we would choose to order things in a

315
00:11:50,160 --> 00:11:52,880
particular way and so the rationale for

316
00:11:52,880 --> 00:11:55,600
ordering here is that recipient

317
00:11:55,600 --> 00:11:57,279
necessary

318
00:11:57,279 --> 00:12:00,079
parameters should become before the ones

319
00:12:00,079 --> 00:12:02,720
that are not necessary to the recipient

320
00:12:02,720 --> 00:12:03,839
and

321
00:12:03,839 --> 00:12:06,800
unseverable members should come before

322
00:12:06,800 --> 00:12:08,800
ones that are severable

323
00:12:08,800 --> 00:12:09,680
so

324
00:12:09,680 --> 00:12:12,720
uh noting that i'm not aware of any

325
00:12:12,720 --> 00:12:15,519
unseverable recipient unnecessary

326
00:12:15,519 --> 00:12:16,880
metadata

327
00:12:16,880 --> 00:12:19,279
with the possible exception of the

328
00:12:19,279 --> 00:12:20,959
canonical uri

329
00:12:20,959 --> 00:12:24,320
uh which i have moved to the front the

330
00:12:24,320 --> 00:12:27,120
first element um i would say that that

331
00:12:27,120 --> 00:12:30,000
third one doesn't actually exist

332
00:12:30,000 --> 00:12:32,639
and the result of that is that we have

333
00:12:32,639 --> 00:12:35,440
unseverable before severable and

334
00:12:35,440 --> 00:12:37,920
recipient necessary before recipient

335
00:12:37,920 --> 00:12:40,399
unnecessary and that required reordering

336
00:12:40,399 --> 00:12:43,040
a few of the keys so since some of the

337
00:12:43,040 --> 00:12:45,920
keys were being reordered i uh attempted

338
00:12:45,920 --> 00:12:48,480
to space out the remaining ones to allow

339
00:12:48,480 --> 00:12:49,920
us to

340
00:12:49,920 --> 00:12:52,000
hopefully grow in whichever

341
00:12:52,000 --> 00:12:53,680
direction is needed

342
00:12:53,680 --> 00:12:55,600
um so that's for the reason for the key

343
00:12:55,600 --> 00:12:56,639
changes

344
00:12:56,639 --> 00:12:59,760
um it is a breaking change but it was

345
00:12:59,760 --> 00:13:02,560
really not undertaken lightly and

346
00:13:02,560 --> 00:13:04,880
um my my big concern is that there

347
00:13:04,880 --> 00:13:07,200
wasn't much input on the list except

348
00:13:07,200 --> 00:13:10,639
from a single implementer so um i really

349
00:13:10,639 --> 00:13:12,320
would appreciate feedback from other

350
00:13:12,320 --> 00:13:15,279
implementers on this topic but i think

351
00:13:15,279 --> 00:13:17,279
that if we're willing to accept the

352
00:13:17,279 --> 00:13:19,360
breaking ordering change

353
00:13:19,360 --> 00:13:21,519
it is probably a better result in the

354
00:13:21,519 --> 00:13:23,760
end

355
00:13:24,480 --> 00:13:26,959
so brandon my interpretation was people

356
00:13:26,959 --> 00:13:28,560
just want it done

357
00:13:28,560 --> 00:13:30,079
yeah probably

358
00:13:30,079 --> 00:13:33,319
fair enough

359
00:13:34,720 --> 00:13:37,519
um so those are the actual key changes

360
00:13:37,519 --> 00:13:38,399
um

361
00:13:38,399 --> 00:13:43,040
i i it's yeah numbers um

362
00:13:43,040 --> 00:13:45,199
let's move on

363
00:13:45,199 --> 00:13:47,839
so we have some open issues um

364
00:13:47,839 --> 00:13:49,199
and we've already heard about one of

365
00:13:49,199 --> 00:13:50,880
them how do you reference a manifest in

366
00:13:50,880 --> 00:13:51,760
eat

367
00:13:51,760 --> 00:13:54,079
um we've got a few ayana feedback

368
00:13:54,079 --> 00:13:55,600
elements and to do's from the early

369
00:13:55,600 --> 00:13:58,399
review so those are all relatively

370
00:13:58,399 --> 00:13:59,519
straightforward none of them are

371
00:13:59,519 --> 00:14:00,720
breaking none of them are cause for

372
00:14:00,720 --> 00:14:02,240
concern they're just editorial we'll get

373
00:14:02,240 --> 00:14:03,600
those sorted out

374
00:14:03,600 --> 00:14:07,120
um there are a few cddl nits but i hope

375
00:14:07,120 --> 00:14:09,519
that that's all sorted out with uh in

376
00:14:09,519 --> 00:14:10,880
short order here

377
00:14:10,880 --> 00:14:14,480
and um there was an error in some of the

378
00:14:14,480 --> 00:14:16,399
text example this is all stuff that i

379
00:14:16,399 --> 00:14:18,959
think uh dave already referenced in his

380
00:14:18,959 --> 00:14:20,639
hackathon report

381
00:14:20,639 --> 00:14:22,480
um but the real question there is of

382
00:14:22,480 --> 00:14:24,959
course is how do we reference a manifest

383
00:14:24,959 --> 00:14:27,680
in eat and um that's not strictly a

384
00:14:27,680 --> 00:14:30,240
manifest question so maybe we can just

385
00:14:30,240 --> 00:14:32,480
ignore that at the moment

386
00:14:32,480 --> 00:14:34,000
and and that's it that's what i've got

387
00:14:34,000 --> 00:14:36,320
for the manifest so i i guess the

388
00:14:36,320 --> 00:14:37,839
question i have is

389
00:14:37,839 --> 00:14:40,320
are there any other sort of uh working

390
00:14:40,320 --> 00:14:42,399
group last call type review elements

391
00:14:42,399 --> 00:14:46,399
that we need in here now

392
00:14:47,279 --> 00:14:48,959
dave failure and i agree that both of

393
00:14:48,959 --> 00:14:50,079
the ones that i mentioned at the end of

394
00:14:50,079 --> 00:14:51,839
the hackathon report can be done outside

395
00:14:51,839 --> 00:14:54,079
of the suit manifest document itself as

396
00:14:54,079 --> 00:14:55,680
long as the cdl is fixed up to have

397
00:14:55,680 --> 00:14:57,760
sockets right meaning the dollar signs

398
00:14:57,760 --> 00:14:58,959
are there that's part of the medial

399
00:14:58,959 --> 00:15:00,560
fixes then everything else can be done

400
00:15:00,560 --> 00:15:01,760
in a different document like update

401
00:15:01,760 --> 00:15:03,120
management for example so i think the

402
00:15:03,120 --> 00:15:04,480
suit manifest we can be done within

403
00:15:04,480 --> 00:15:05,839
short order because everything is just

404
00:15:05,839 --> 00:15:08,079
trivial you know cdd offices

405
00:15:08,079 --> 00:15:10,399
excellent

406
00:15:10,800 --> 00:15:13,199
uh well that's it so unless there's any

407
00:15:13,199 --> 00:15:16,319
questions we can move on

408
00:15:24,720 --> 00:15:26,240
what's the timeline for posting the

409
00:15:26,240 --> 00:15:28,399
fixes to the cdl when would we get a new

410
00:15:28,399 --> 00:15:31,680
uh update i said shoot manifesto uh

411
00:15:31,680 --> 00:15:33,680
early next week i should hope

412
00:15:33,680 --> 00:15:35,680
okay thank you

413
00:15:35,680 --> 00:15:38,880
minute taker is taking that down

414
00:15:38,880 --> 00:15:40,959
the

415
00:15:41,759 --> 00:15:44,639
okay uh multiple trust domains

416
00:15:44,639 --> 00:15:46,079
this is only two slides so i'm going to

417
00:15:46,079 --> 00:15:49,279
let you advance this one russ

418
00:15:50,240 --> 00:15:53,040
okay we have a few open issues um yeah

419
00:15:53,040 --> 00:15:54,399
there's a key conflict because i

420
00:15:54,399 --> 00:15:55,759
reordered the numbers in the suit

421
00:15:55,759 --> 00:15:58,880
manifest um it hasn't had its update yet

422
00:15:58,880 --> 00:16:01,519
so that's all that's going on there um

423
00:16:01,519 --> 00:16:05,040
after the discussion in the teap uh

424
00:16:05,040 --> 00:16:07,759
working group earlier today i think that

425
00:16:07,759 --> 00:16:11,279
it is now clear to me that we do need an

426
00:16:11,279 --> 00:16:14,079
uninstall command sequence

427
00:16:14,079 --> 00:16:15,680
i don't think there's any getting away

428
00:16:15,680 --> 00:16:17,199
from that i think that's what it has to

429
00:16:17,199 --> 00:16:18,079
be

430
00:16:18,079 --> 00:16:20,880
now because of what that is it has to be

431
00:16:20,880 --> 00:16:23,279
added to the unseverable manifest

432
00:16:23,279 --> 00:16:25,040
members that's all that can be done

433
00:16:25,040 --> 00:16:27,040
that's where it lives um so that's going

434
00:16:27,040 --> 00:16:29,839
to need to be an update but again this

435
00:16:29,839 --> 00:16:31,600
is an update to the trust domain

436
00:16:31,600 --> 00:16:33,759
document i think that's it

437
00:16:33,759 --> 00:16:36,240
i don't believe any other commands are

438
00:16:36,240 --> 00:16:38,240
necessary i think unlink on its own is

439
00:16:38,240 --> 00:16:40,079
good enough um

440
00:16:40,079 --> 00:16:42,480
the only thing that i'm concerned about

441
00:16:42,480 --> 00:16:45,680
here is whether uh two generations of

442
00:16:45,680 --> 00:16:48,079
the same manifest that both attempt to

443
00:16:48,079 --> 00:16:49,680
unlink a

444
00:16:49,680 --> 00:16:51,600
component would cause the reference

445
00:16:51,600 --> 00:16:54,000
count to be decremented twice and i

446
00:16:54,000 --> 00:16:55,680
don't know exactly what text we should

447
00:16:55,680 --> 00:17:00,439
propose to prevent that situation

448
00:17:04,400 --> 00:17:05,599
um

449
00:17:05,599 --> 00:17:07,039
so that's

450
00:17:07,039 --> 00:17:08,400
i don't know if there are any other open

451
00:17:08,400 --> 00:17:11,280
questions on this uh but that is the

452
00:17:11,280 --> 00:17:15,280
current status of the draft

453
00:17:16,480 --> 00:17:18,799
nope i think that's a good summary

454
00:17:18,799 --> 00:17:21,039
okay

455
00:17:23,839 --> 00:17:27,359
oh we're just flying through here

456
00:17:29,440 --> 00:17:30,480
okay

457
00:17:30,480 --> 00:17:33,760
again two slides next slide please

458
00:17:33,760 --> 00:17:34,880
um

459
00:17:34,880 --> 00:17:36,799
yeah there's very little to say about

460
00:17:36,799 --> 00:17:39,200
this one um it's definitely not a

461
00:17:39,200 --> 00:17:40,640
complete list of update management

462
00:17:40,640 --> 00:17:43,280
actions i'm fairly confident of that i

463
00:17:43,280 --> 00:17:44,799
think this is something where we can

464
00:17:44,799 --> 00:17:47,440
expect the registration list to grow and

465
00:17:47,440 --> 00:17:49,679
that that is sort of uh the reason we

466
00:17:49,679 --> 00:17:51,360
have an iana registry because it won't

467
00:17:51,360 --> 00:17:52,480
be complete

468
00:17:52,480 --> 00:17:53,440
um

469
00:17:53,440 --> 00:17:55,280
and beyond that

470
00:17:55,280 --> 00:17:57,679
i'm not sure um i have a question here

471
00:17:57,679 --> 00:17:59,520
about whether you should be able to use

472
00:17:59,520 --> 00:18:01,760
a manifest sequence number in a version

473
00:18:01,760 --> 00:18:04,640
comparison within a manifest that was

474
00:18:04,640 --> 00:18:06,559
probably because i misinterpreted the

475
00:18:06,559 --> 00:18:09,520
question that dave was asking me before

476
00:18:09,520 --> 00:18:11,360
and uh thought that he wanted a

477
00:18:11,360 --> 00:18:13,360
parameter in the the

478
00:18:13,360 --> 00:18:15,440
suit parameters specifically to be able

479
00:18:15,440 --> 00:18:17,840
to use it in manifest sequences well

480
00:18:17,840 --> 00:18:20,240
that appears not in fact to be the case

481
00:18:20,240 --> 00:18:23,679
so um maybe we can just strike that one

482
00:18:23,679 --> 00:18:25,360
so i don't think there are any open

483
00:18:25,360 --> 00:18:26,400
issues

484
00:18:26,400 --> 00:18:29,720
as a result

485
00:18:29,919 --> 00:18:31,840
yeah this is dave's favorite i think the

486
00:18:31,840 --> 00:18:33,200
two

487
00:18:33,200 --> 00:18:34,559
issues that i covered at the end of the

488
00:18:34,559 --> 00:18:36,720
hackathon report if there's any changes

489
00:18:36,720 --> 00:18:39,120
to be made this is i oh sorry one of

490
00:18:39,120 --> 00:18:40,480
them was the trust domains document

491
00:18:40,480 --> 00:18:42,160
right another one wasn't here so if we

492
00:18:42,160 --> 00:18:43,520
agreed to do something there then this

493
00:18:43,520 --> 00:18:44,640
is the document that it would be done

494
00:18:44,640 --> 00:18:46,080
and so i would put on a list of open

495
00:18:46,080 --> 00:18:47,919
issues there even if brennan

496
00:18:47,919 --> 00:18:49,760
might be an open issue so

497
00:18:49,760 --> 00:18:51,840
okay fair enough

498
00:18:51,840 --> 00:18:53,200
just until we confirm that we have

499
00:18:53,200 --> 00:18:54,559
consensus that your answer should be

500
00:18:54,559 --> 00:18:56,799
sufficient for cases because i i think

501
00:18:56,799 --> 00:18:58,559
we suggested that if there was a change

502
00:18:58,559 --> 00:18:59,679
this is the document that would be in

503
00:18:59,679 --> 00:19:01,360
the context of so one touchdown okay

504
00:19:01,360 --> 00:19:05,719
fair enough yep that makes sense

505
00:19:10,960 --> 00:19:12,640
last call for questions on this one from

506
00:19:12,640 --> 00:19:13,520
the room

507
00:19:13,520 --> 00:19:16,520
online

508
00:19:29,840 --> 00:19:32,799
i'll talk anyway regardless

509
00:19:32,799 --> 00:19:35,039
go ahead and go go on yes that's it so

510
00:19:35,039 --> 00:19:36,320
the main issue with the firmware

511
00:19:36,320 --> 00:19:37,440
encryption

512
00:19:37,440 --> 00:19:38,720
draft

513
00:19:38,720 --> 00:19:40,000
was the

514
00:19:40,000 --> 00:19:41,919
this instance of the practical thing

515
00:19:41,919 --> 00:19:44,400
from mcu boot where the flash image

516
00:19:44,400 --> 00:19:46,960
needs to be updated in pieces

517
00:19:46,960 --> 00:19:50,080
and it kind of precludes the use of aad

518
00:19:50,080 --> 00:19:53,039
and so um there's more explanation in

519
00:19:53,039 --> 00:19:54,160
here about

520
00:19:54,160 --> 00:19:55,919
effectively we have to be able to to

521
00:19:55,919 --> 00:19:58,080
recover from a power loss during the

522
00:19:58,080 --> 00:20:00,240
middle of an upgrade and it requires us

523
00:20:00,240 --> 00:20:01,520
to be able to do the encryption and

524
00:20:01,520 --> 00:20:03,120
decryption in pieces go ahead and go to

525
00:20:03,120 --> 00:20:06,439
the next slide

526
00:20:07,679 --> 00:20:09,679
um and go ahead you can go ahead and go

527
00:20:09,679 --> 00:20:12,240
on oh

528
00:20:14,159 --> 00:20:16,960
um so that this is just a summary of the

529
00:20:16,960 --> 00:20:17,840
the

530
00:20:17,840 --> 00:20:20,320
the issues behind that

531
00:20:20,320 --> 00:20:23,679
basically we use a aes counter mode

532
00:20:23,679 --> 00:20:25,440
you can also use cbc for this this is

533
00:20:25,440 --> 00:20:26,640
written into the

534
00:20:26,640 --> 00:20:30,159
i believe it's nine of the draft

535
00:20:30,159 --> 00:20:32,400
this always requires something else to

536
00:20:32,400 --> 00:20:34,320
verify the integrity of the image and

537
00:20:34,320 --> 00:20:35,679
what we do

538
00:20:35,679 --> 00:20:37,600
so it's written that something such as a

539
00:20:37,600 --> 00:20:39,840
signature verification has to happen of

540
00:20:39,840 --> 00:20:42,320
the image

541
00:20:46,400 --> 00:20:48,080
so there was discussion during the coz

542
00:20:48,080 --> 00:20:51,039
of work the coza meeting to allow

543
00:20:51,039 --> 00:20:53,280
unauthenticated encryption

544
00:20:53,280 --> 00:20:54,640
um

545
00:20:54,640 --> 00:20:56,240
i guess depending on how that actually

546
00:20:56,240 --> 00:20:58,320
ends up getting worded will determine

547
00:20:58,320 --> 00:20:59,840
what

548
00:20:59,840 --> 00:21:01,840
we're allowed here

549
00:21:01,840 --> 00:21:04,559
currently it's worded in our draft that

550
00:21:04,559 --> 00:21:07,760
these are only to be used for suit

551
00:21:07,760 --> 00:21:09,360
for this

552
00:21:09,360 --> 00:21:12,240
and that should be it

553
00:21:12,400 --> 00:21:15,120
during the discussion with jose it's

554
00:21:15,120 --> 00:21:16,960
clear that the

555
00:21:16,960 --> 00:21:19,200
we don't need the integrity provided by

556
00:21:19,200 --> 00:21:22,640
the aead because there's a signature

557
00:21:22,640 --> 00:21:24,640
so allowing the

558
00:21:24,640 --> 00:21:26,640
blocks to be handled independently is

559
00:21:26,640 --> 00:21:28,400
okay as long as you

560
00:21:28,400 --> 00:21:29,440
validate

561
00:21:29,440 --> 00:21:31,120
the signature

562
00:21:31,120 --> 00:21:32,000
um

563
00:21:32,000 --> 00:21:35,120
so this external to the encryption

564
00:21:35,120 --> 00:21:37,440
integrity mechanism makes the system

565
00:21:37,440 --> 00:21:38,799
okay

566
00:21:38,799 --> 00:21:41,919
but the way the uh instructions are

567
00:21:41,919 --> 00:21:43,679
written in cosa

568
00:21:43,679 --> 00:21:46,080
it says the algorithm identifier is the

569
00:21:46,080 --> 00:21:49,600
algorithm identifier of an aead so we

570
00:21:49,600 --> 00:21:52,080
gotta say write a document says why it's

571
00:21:52,080 --> 00:21:53,039
okay

572
00:21:53,039 --> 00:21:56,240
in this particular context get the

573
00:21:56,240 --> 00:21:58,799
code points registered for aes

574
00:21:58,799 --> 00:22:01,280
counter aes cbc

575
00:22:01,280 --> 00:22:02,400
and then

576
00:22:02,400 --> 00:22:04,640
if cosi adopts it we're done we have an

577
00:22:04,640 --> 00:22:06,880
answer if they reject it then we have a

578
00:22:06,880 --> 00:22:08,880
different problem

579
00:22:08,880 --> 00:22:12,080
make sense

580
00:22:12,080 --> 00:22:14,400
as far as we know that's the only open

581
00:22:14,400 --> 00:22:17,760
issue with firmware encryption

582
00:22:18,960 --> 00:22:22,000
well there's no slides

583
00:22:22,000 --> 00:22:25,640
that's the end of the slides

584
00:22:32,000 --> 00:22:35,200
did you submit two

585
00:22:36,080 --> 00:22:38,840
um so there was i added

586
00:22:38,840 --> 00:22:41,600
um it doesn't matter so uh

587
00:22:41,600 --> 00:22:42,640
i

588
00:22:42,640 --> 00:22:46,000
i added the pointer to the github repo

589
00:22:46,000 --> 00:22:48,480
of the document and where i

590
00:22:48,480 --> 00:22:50,400
um

591
00:22:50,400 --> 00:22:51,280
yeah

592
00:22:51,280 --> 00:22:52,240
i

593
00:22:52,240 --> 00:22:55,200
clicked the wrong one

594
00:22:55,200 --> 00:22:56,480
and um

595
00:22:56,480 --> 00:22:57,440
so that

596
00:22:57,440 --> 00:22:59,600
the newer slide only contains pointers

597
00:22:59,600 --> 00:23:02,000
to the github repository on three issues

598
00:23:02,000 --> 00:23:03,280
that were

599
00:23:03,280 --> 00:23:05,440
uh brought up by marco i think marco is

600
00:23:05,440 --> 00:23:06,060
here yep

601
00:23:06,060 --> 00:23:07,360
[Music]

602
00:23:07,360 --> 00:23:09,840
actually two by marco and one

603
00:23:09,840 --> 00:23:12,080
um

604
00:23:12,080 --> 00:23:15,600
and one other i think he was

605
00:23:15,760 --> 00:23:18,400
again ken ken proposed uh not this one

606
00:23:18,400 --> 00:23:20,799
other issue in the during the hackathon

607
00:23:20,799 --> 00:23:23,120
so to do um

608
00:23:23,120 --> 00:23:25,760
just to to shortly summarize

609
00:23:25,760 --> 00:23:28,320
um marco suggested to look into the

610
00:23:28,320 --> 00:23:30,640
counter signatures for the

611
00:23:30,640 --> 00:23:33,360
wrapper that we provide uh outside the

612
00:23:33,360 --> 00:23:35,039
encryption so we first do the encryption

613
00:23:35,039 --> 00:23:38,799
then we apply that the signature

614
00:23:39,120 --> 00:23:40,559
and

615
00:23:40,559 --> 00:23:42,799
there if we use the counter signature

616
00:23:42,799 --> 00:23:44,240
mechanism which is currently being

617
00:23:44,240 --> 00:23:46,480
finalized in the course working group

618
00:23:46,480 --> 00:23:49,440
we could shave off a few bytes

619
00:23:49,440 --> 00:23:51,440
so that's something we should be looking

620
00:23:51,440 --> 00:23:53,520
into because it's just the signature

621
00:23:53,520 --> 00:23:55,279
just goes into

622
00:23:55,279 --> 00:23:56,640
another header

623
00:23:56,640 --> 00:23:59,520
uh parameter rather than having

624
00:23:59,520 --> 00:24:01,840
um an entire cosi

625
00:24:01,840 --> 00:24:04,799
sine one wrapper around it which i think

626
00:24:04,799 --> 00:24:07,520
has has a lot of benefits

627
00:24:07,520 --> 00:24:08,400
um

628
00:24:08,400 --> 00:24:09,760
the other one

629
00:24:09,760 --> 00:24:11,679
was about the wording refinement of the

630
00:24:11,679 --> 00:24:14,240
wording that we have in there on the use

631
00:24:14,240 --> 00:24:16,240
of the keck verification which was the

632
00:24:16,240 --> 00:24:18,720
mitigation to deal and thank you

633
00:24:18,720 --> 00:24:21,039
which was the mitigation

634
00:24:21,039 --> 00:24:22,799
to deal with

635
00:24:22,799 --> 00:24:25,279
potential battery exhaustion

636
00:24:25,279 --> 00:24:28,240
and so um since we use

637
00:24:28,240 --> 00:24:29,120
um

638
00:24:29,120 --> 00:24:32,080
the keck with oil with a nons with oil

639
00:24:32,080 --> 00:24:33,039
zeroes

640
00:24:33,039 --> 00:24:34,799
we should not for this for this

641
00:24:34,799 --> 00:24:37,679
verification step we should not then use

642
00:24:37,679 --> 00:24:40,320
a kick for uh

643
00:24:40,320 --> 00:24:42,320
encrypting anything afterwards with the

644
00:24:42,320 --> 00:24:44,000
same value because we would be reusing

645
00:24:44,000 --> 00:24:46,559
it i think we need to be explicit maybe

646
00:24:46,559 --> 00:24:49,120
obvious too many uh but uh i think we

647
00:24:49,120 --> 00:24:51,600
should be crystal clear there

648
00:24:51,600 --> 00:24:53,279
and on the

649
00:24:53,279 --> 00:24:55,200
on the hackathon

650
00:24:55,200 --> 00:24:57,440
it's safe yeah um

651
00:24:57,440 --> 00:25:00,480
and ken maybe you can explain your last

652
00:25:00,480 --> 00:25:02,960
item um i know you

653
00:25:02,960 --> 00:25:04,720
you created the br and so on maybe you

654
00:25:04,720 --> 00:25:07,520
can briefly summarize on the issue that

655
00:25:07,520 --> 00:25:11,200
you filed for the encryption document

656
00:25:11,200 --> 00:25:14,960
sorry to put you on the spot here like

657
00:25:18,480 --> 00:25:22,400
i think the suit encryption info was uh

658
00:25:22,400 --> 00:25:24,320
in the

659
00:25:24,320 --> 00:25:27,679
former suit manifest original

660
00:25:27,679 --> 00:25:30,080
code document that brendan

661
00:25:30,080 --> 00:25:32,159
uh moved

662
00:25:32,159 --> 00:25:35,600
i think brendan removed uh from the core

663
00:25:35,600 --> 00:25:38,720
document of sued manifest and now it's a

664
00:25:38,720 --> 00:25:39,600
in the

665
00:25:39,600 --> 00:25:41,679
pharma encryption

666
00:25:41,679 --> 00:25:43,840
uh document and

667
00:25:43,840 --> 00:25:44,960
uh

668
00:25:44,960 --> 00:25:48,000
i pointed that uh

669
00:25:48,000 --> 00:25:51,360
it uh i think i i i think uh it should

670
00:25:51,360 --> 00:25:52,159
be

671
00:25:52,159 --> 00:25:55,840
a reasonable position uh in this suit

672
00:25:55,840 --> 00:25:59,279
directive set parameter

673
00:25:59,279 --> 00:26:00,559
i think

674
00:26:00,559 --> 00:26:02,000
so

675
00:26:02,000 --> 00:26:05,240
that's all

676
00:26:11,039 --> 00:26:13,200
yeah so um and

677
00:26:13,200 --> 00:26:15,279
what is also missing and i think we are

678
00:26:15,279 --> 00:26:17,760
getting close like the these issues um

679
00:26:17,760 --> 00:26:19,520
should be resolved fairly quickly the

680
00:26:19,520 --> 00:26:20,640
first one and

681
00:26:20,640 --> 00:26:22,960
uh definitely the second one with a

682
00:26:22,960 --> 00:26:24,640
little bit of uh

683
00:26:24,640 --> 00:26:26,960
um re-reading and and looking into the

684
00:26:26,960 --> 00:26:28,480
counter signatures

685
00:26:28,480 --> 00:26:31,200
uh and also what ken just said

686
00:26:31,200 --> 00:26:32,640
um

687
00:26:32,640 --> 00:26:34,080
probably what we'll be holding up is the

688
00:26:34,080 --> 00:26:35,679
former issue that we just talked about

689
00:26:35,679 --> 00:26:38,159
which is uh kind of unfortunate but it

690
00:26:38,159 --> 00:26:39,840
is what it is

691
00:26:39,840 --> 00:26:41,600
um

692
00:26:41,600 --> 00:26:43,520
and also there's the

693
00:26:43,520 --> 00:26:45,840
since we're using two

694
00:26:45,840 --> 00:26:48,400
uh key exchange mechanism in here the

695
00:26:48,400 --> 00:26:51,039
eas key wrap and also hbke we have this

696
00:26:51,039 --> 00:26:54,159
dependency with the hbke document

697
00:26:54,159 --> 00:26:55,840
in the courtesy working group and while

698
00:26:55,840 --> 00:26:57,679
it's advancing

699
00:26:57,679 --> 00:26:59,360
it

700
00:26:59,360 --> 00:27:01,840
there's a continuous update or

701
00:27:01,840 --> 00:27:03,440
synchronization needed between those two

702
00:27:03,440 --> 00:27:05,200
documents with regarding to the example

703
00:27:05,200 --> 00:27:06,720
and the complete example is currently

704
00:27:06,720 --> 00:27:08,799
not in a document it

705
00:27:08,799 --> 00:27:10,640
which is also something that's needed so

706
00:27:10,640 --> 00:27:12,960
it kind of gets

707
00:27:12,960 --> 00:27:14,799
delayed because of the completion of the

708
00:27:14,799 --> 00:27:17,279
other work and the dependency so that's

709
00:27:17,279 --> 00:27:18,480
uh

710
00:27:18,480 --> 00:27:21,600
yeah but i think that reconfirms that it

711
00:27:21,600 --> 00:27:23,600
was some right decision to move that out

712
00:27:23,600 --> 00:27:25,840
of the in the main specification to

713
00:27:25,840 --> 00:27:28,240
advance the main manifest document

714
00:27:28,240 --> 00:27:31,440
faster than this extension right

715
00:27:31,440 --> 00:27:34,440
brandon

716
00:27:38,799 --> 00:27:41,440
uh yeah i just had a question about the

717
00:27:41,440 --> 00:27:44,799
uh plan to register aes ctr

718
00:27:44,799 --> 00:27:47,520
and whether the intent was to register

719
00:27:47,520 --> 00:27:49,840
that as a deprecated algorithm from the

720
00:27:49,840 --> 00:27:52,240
get-go

721
00:27:52,799 --> 00:27:55,360
yeah that's what the cose working group

722
00:27:55,360 --> 00:27:57,840
chair recommended and

723
00:27:57,840 --> 00:28:00,080
the point is we need a code point

724
00:28:00,080 --> 00:28:03,919
and yeah we'll we'll just have to uh

725
00:28:03,919 --> 00:28:06,880
read the politics

726
00:28:06,880 --> 00:28:08,320
yeah it's it's

727
00:28:08,320 --> 00:28:11,120
i i totally appreciate that i'm and and

728
00:28:11,120 --> 00:28:12,640
i also see where they're coming from on

729
00:28:12,640 --> 00:28:15,039
that end that you really want to avoid

730
00:28:15,039 --> 00:28:16,880
having

731
00:28:16,880 --> 00:28:19,080
a lot of people using this for

732
00:28:19,080 --> 00:28:22,240
non-firmware update use cases um i do

733
00:28:22,240 --> 00:28:24,960
wonder though if cozy is in general

734
00:28:24,960 --> 00:28:26,480
missing a streaming decryption

735
00:28:26,480 --> 00:28:28,880
capability and that's something that

736
00:28:28,880 --> 00:28:31,840
they need to address

737
00:28:33,360 --> 00:28:34,480
uh

738
00:28:34,480 --> 00:28:36,559
well we think so otherwise we wouldn't

739
00:28:36,559 --> 00:28:38,240
be willing to write that other document

740
00:28:38,240 --> 00:28:40,799
to get those good points

741
00:28:40,799 --> 00:28:42,320
but they

742
00:28:42,320 --> 00:28:44,399
the thing with streaming is you do want

743
00:28:44,399 --> 00:28:47,360
integrity on the chunks of the stream

744
00:28:47,360 --> 00:28:48,159
and

745
00:28:48,159 --> 00:28:50,159
not clear how that would work

746
00:28:50,159 --> 00:28:51,520
just yet

747
00:28:51,520 --> 00:28:56,039
and not one we're gonna solve for them

748
00:28:58,000 --> 00:28:59,200
good

749
00:28:59,200 --> 00:29:01,600
thank you

750
00:29:08,559 --> 00:29:12,039
super poor

751
00:29:14,480 --> 00:29:18,399
super reports is next so back to brandon

752
00:29:20,480 --> 00:29:22,480
all right i've got three slides for this

753
00:29:22,480 --> 00:29:25,480
one

754
00:29:27,120 --> 00:29:29,520
all right so there there's really not a

755
00:29:29,520 --> 00:29:31,520
huge change to the document this time

756
00:29:31,520 --> 00:29:34,159
around um essentially what i've done is

757
00:29:34,159 --> 00:29:36,480
i've added a big text section that

758
00:29:36,480 --> 00:29:39,600
explains why and how you might choose to

759
00:29:39,600 --> 00:29:41,600
use a suit report as attestation

760
00:29:41,600 --> 00:29:42,720
evidence

761
00:29:42,720 --> 00:29:44,240
now this has been something that i've

762
00:29:44,240 --> 00:29:46,399
talked about with uh with hank a fair

763
00:29:46,399 --> 00:29:49,840
bit actually and uh essentially the idea

764
00:29:49,840 --> 00:29:53,279
behind this is that a verifier may well

765
00:29:53,279 --> 00:29:56,240
be equipped to evaluate a suit report

766
00:29:56,240 --> 00:29:58,240
and i'm not talking about the proper the

767
00:29:58,240 --> 00:30:00,559
system property claims i'm talking about

768
00:30:00,559 --> 00:30:01,919
the full

769
00:30:01,919 --> 00:30:03,600
set of suit records

770
00:30:03,600 --> 00:30:06,799
and that would allow it to reconstruct

771
00:30:06,799 --> 00:30:08,559
the state of the device

772
00:30:08,559 --> 00:30:10,399
which gives it all the information it

773
00:30:10,399 --> 00:30:12,880
needs for attestation evidence and so

774
00:30:12,880 --> 00:30:15,520
the idea here is that a properly

775
00:30:15,520 --> 00:30:18,399
constructed verifier has the ability to

776
00:30:18,399 --> 00:30:21,440
take a suit report and turn it into

777
00:30:21,440 --> 00:30:24,480
whatever other evidence it needs it can

778
00:30:24,480 --> 00:30:27,760
then to construct a more standard suit

779
00:30:27,760 --> 00:30:29,200
or

780
00:30:29,200 --> 00:30:31,279
attestation result

781
00:30:31,279 --> 00:30:33,120
out of that document

782
00:30:33,120 --> 00:30:36,159
and so this is the essentially the idea

783
00:30:36,159 --> 00:30:38,000
and there's a few justifications for why

784
00:30:38,000 --> 00:30:40,080
you might want to do this uh one of them

785
00:30:40,080 --> 00:30:42,720
is that then your device can have

786
00:30:42,720 --> 00:30:44,960
just an append only log of what the

787
00:30:44,960 --> 00:30:47,360
manifest processor did and that becomes

788
00:30:47,360 --> 00:30:50,399
enough for your attestation evidence i

789
00:30:50,399 --> 00:30:52,080
think that's a really powerful thing for

790
00:30:52,080 --> 00:30:54,080
a very constrained node

791
00:30:54,080 --> 00:30:54,960
um

792
00:30:54,960 --> 00:30:57,039
so so that's that's sort of the summary

793
00:30:57,039 --> 00:30:59,039
i've put a block of text in which

794
00:30:59,039 --> 00:31:01,519
explains all of that um that's the big

795
00:31:01,519 --> 00:31:04,399
change

796
00:31:04,399 --> 00:31:08,159
and in terms of open issues there is

797
00:31:08,159 --> 00:31:10,960
uh one issue as far as i'm concerned and

798
00:31:10,960 --> 00:31:14,720
that is that we have two different logs

799
00:31:14,720 --> 00:31:18,399
we've got one for debug type things and

800
00:31:18,399 --> 00:31:20,320
one for evidence the the one for

801
00:31:20,320 --> 00:31:22,159
evidence is the system property claims

802
00:31:22,159 --> 00:31:24,240
that dave wants to use and here i'm

803
00:31:24,240 --> 00:31:26,880
about to suggest that we get rid of it

804
00:31:26,880 --> 00:31:28,870
the idea being that

805
00:31:28,870 --> 00:31:31,360
[Laughter]

806
00:31:31,360 --> 00:31:34,880
that this merged log that you get at the

807
00:31:34,880 --> 00:31:36,799
end is better for embedded devices

808
00:31:36,799 --> 00:31:38,960
because they only have to

809
00:31:38,960 --> 00:31:41,919
append elements to a single buffer and

810
00:31:41,919 --> 00:31:44,480
so that makes it really easy for them um

811
00:31:44,480 --> 00:31:46,880
now as i say here this is a simple

812
00:31:46,880 --> 00:31:48,960
change but it desperately needs feedback

813
00:31:48,960 --> 00:31:51,039
especially if teeps about to start using

814
00:31:51,039 --> 00:31:53,840
the part i want to delete um then we

815
00:31:53,840 --> 00:31:55,679
definitely need to talk about exactly

816
00:31:55,679 --> 00:31:59,480
how this all fits together

817
00:32:00,799 --> 00:32:02,480
so i'm going to put myself in queue here

818
00:32:02,480 --> 00:32:04,960
um there's that i don't yet have an

819
00:32:04,960 --> 00:32:06,159
opinion on that one you can think about

820
00:32:06,159 --> 00:32:08,399
it more um but uh the other issue that

821
00:32:08,399 --> 00:32:10,880
came up that was reported in the team

822
00:32:10,880 --> 00:32:12,799
working group was a question

823
00:32:12,799 --> 00:32:16,000
um and the context is the question that

824
00:32:16,000 --> 00:32:18,720
was raised there is um what's the right

825
00:32:18,720 --> 00:32:20,320
recommendation for how to encrypt suit

826
00:32:20,320 --> 00:32:21,600
reports if there happened to be any

827
00:32:21,600 --> 00:32:23,200
sense of information in it

828
00:32:23,200 --> 00:32:25,679
and so i just observed that the entire

829
00:32:25,679 --> 00:32:27,919
security consideration section of this

830
00:32:27,919 --> 00:32:29,679
reports document right now

831
00:32:29,679 --> 00:32:31,840
is uh two sentences

832
00:32:31,840 --> 00:32:33,919
and perhaps it should say more than that

833
00:32:33,919 --> 00:32:36,159
um

834
00:32:36,320 --> 00:32:37,919
the only reference is it should either

835
00:32:37,919 --> 00:32:39,679
be carried over a secure transport or

836
00:32:39,679 --> 00:32:41,440
assigned or both but doesn't say what

837
00:32:41,440 --> 00:32:42,720
secure transport doesn't have any

838
00:32:42,720 --> 00:32:44,159
considerations about you know encryption

839
00:32:44,159 --> 00:32:46,240
or whatever so at least that's an

840
00:32:46,240 --> 00:32:50,080
editorial um uh issue to be uh addressed

841
00:32:50,080 --> 00:32:52,080
if not an actual technical issue if it

842
00:32:52,080 --> 00:32:54,720
really is to say you must use if you

843
00:32:54,720 --> 00:32:56,399
care about encryption

844
00:32:56,399 --> 00:32:58,000
then or you know sensitive information

845
00:32:58,000 --> 00:32:59,600
and suit report then either put it in a

846
00:32:59,600 --> 00:33:01,840
secure transport or leave it out of the

847
00:33:01,840 --> 00:33:03,440
report right then at least that would be

848
00:33:03,440 --> 00:33:05,360
something if we want to have a mechanism

849
00:33:05,360 --> 00:33:07,200
to do encryption at the superport layer

850
00:33:07,200 --> 00:33:08,320
in the future

851
00:33:08,320 --> 00:33:09,600
so you get that vetting extension

852
00:33:09,600 --> 00:33:12,000
whatever my point is the security

853
00:33:12,000 --> 00:33:13,360
consideration the section should

854
00:33:13,360 --> 00:33:14,799
actually say something

855
00:33:14,799 --> 00:33:16,240
yeah

856
00:33:16,240 --> 00:33:18,559
no no that that's fair um

857
00:33:18,559 --> 00:33:20,720
that that element of the draft is

858
00:33:20,720 --> 00:33:24,159
definitely lacking so let's let's um

859
00:33:24,159 --> 00:33:26,240
let's see if we can get that fixed for

860
00:33:26,240 --> 00:33:27,840
the next one

861
00:33:27,840 --> 00:33:30,559
sounds good thanks

862
00:33:31,120 --> 00:33:32,960
i'd be tempted to ask you put a threat

863
00:33:32,960 --> 00:33:35,600
model in there

864
00:33:37,600 --> 00:33:39,440
karma brendan

865
00:33:39,440 --> 00:33:41,440
well i mean to say

866
00:33:41,440 --> 00:33:42,559
who's

867
00:33:42,559 --> 00:33:44,310
it's just coming back to me you know

868
00:33:44,310 --> 00:33:49,240
[Laughter]

869
00:33:50,559 --> 00:33:51,679
for those who don't know we're laughing

870
00:33:51,679 --> 00:33:54,320
about brendan was active in previous uh

871
00:33:54,320 --> 00:33:55,840
meetings this week about asking people

872
00:33:55,840 --> 00:33:58,080
to have threat models and so

873
00:33:58,080 --> 00:34:00,080
hey what's a security document with no

874
00:34:00,080 --> 00:34:02,720
threat model

875
00:34:03,840 --> 00:34:05,519
speaking of which here's a security

876
00:34:05,519 --> 00:34:07,600
document

877
00:34:07,600 --> 00:34:09,359
here's a security document it has no

878
00:34:09,359 --> 00:34:11,040
threat model if you want the threat

879
00:34:11,040 --> 00:34:12,719
model you'll have to show up to the iot

880
00:34:12,719 --> 00:34:13,599
ops

881
00:34:13,599 --> 00:34:15,440
meeting

882
00:34:15,440 --> 00:34:17,199
at least ensue we did do a good job of

883
00:34:17,199 --> 00:34:18,399
having a full threat model in the

884
00:34:18,399 --> 00:34:19,839
information model document and so the

885
00:34:19,839 --> 00:34:21,199
manifest has a full correct model but

886
00:34:21,199 --> 00:34:22,159
now that we're talking about suit

887
00:34:22,159 --> 00:34:22,800
reports

888
00:34:22,800 --> 00:34:27,630
[Laughter]

889
00:34:27,918 --> 00:34:30,399
okay on to mud i think

890
00:34:30,399 --> 00:34:32,879
yeah so this this is really just an

891
00:34:32,879 --> 00:34:35,440
update and this is a very simple

892
00:34:35,440 --> 00:34:38,480
extension to suit the idea is that you

893
00:34:38,480 --> 00:34:41,199
have a mechanism to carry either a mud

894
00:34:41,199 --> 00:34:42,239
file

895
00:34:42,239 --> 00:34:43,280
or

896
00:34:43,280 --> 00:34:46,960
both mud uris and mud signer public keys

897
00:34:46,960 --> 00:34:50,399
the idea behind this is that it replaces

898
00:34:50,399 --> 00:34:53,040
the conventional approach to deliver mud

899
00:34:53,040 --> 00:34:56,560
information from a mud capable device to

900
00:34:56,560 --> 00:34:58,640
a

901
00:34:58,640 --> 00:35:01,280
what's the word a mud

902
00:35:01,280 --> 00:35:03,760
a mud manager i think it's a mud manager

903
00:35:03,760 --> 00:35:06,800
um and it replaces that with the update

904
00:35:06,800 --> 00:35:09,040
pipeline so the idea here is that your

905
00:35:09,040 --> 00:35:10,880
network infrastructure is supposed to

906
00:35:10,880 --> 00:35:13,359
receive a copy of the manifest before it

907
00:35:13,359 --> 00:35:15,440
gets pushed out to your device that

908
00:35:15,440 --> 00:35:17,280
means that before the device ever

909
00:35:17,280 --> 00:35:19,520
connects to the network the network

910
00:35:19,520 --> 00:35:21,920
infrastructure already knows what its

911
00:35:21,920 --> 00:35:24,160
new mud file is going to be

912
00:35:24,160 --> 00:35:26,000
because it's either fetched it remotely

913
00:35:26,000 --> 00:35:26,720
or

914
00:35:26,720 --> 00:35:29,280
decoded it out of the manifest obviously

915
00:35:29,280 --> 00:35:31,200
this is a severable element because the

916
00:35:31,200 --> 00:35:33,040
device itself does not need this

917
00:35:33,040 --> 00:35:34,320
information

918
00:35:34,320 --> 00:35:35,359
um

919
00:35:35,359 --> 00:35:38,160
it has a lot of benefits it's uh similar

920
00:35:38,160 --> 00:35:40,560
to device certificate binding but has

921
00:35:40,560 --> 00:35:42,960
the advantage that individual device

922
00:35:42,960 --> 00:35:45,839
certificates do not need anything about

923
00:35:45,839 --> 00:35:48,720
this information instead all of that is

924
00:35:48,720 --> 00:35:50,320
delivered to the network infrastructure

925
00:35:50,320 --> 00:35:51,520
in a much

926
00:35:51,520 --> 00:35:53,760
more compact form

927
00:35:53,760 --> 00:35:56,800
what this does give you is

928
00:35:56,800 --> 00:35:59,040
the requirement that you either do some

929
00:35:59,040 --> 00:36:01,440
kind of device fingerprinting or at a

930
00:36:01,440 --> 00:36:03,839
station in the network now of course my

931
00:36:03,839 --> 00:36:05,680
uh personal preference on this is for

932
00:36:05,680 --> 00:36:08,160
attestation uh if you attest your

933
00:36:08,160 --> 00:36:09,440
manifest

934
00:36:09,440 --> 00:36:10,320
then

935
00:36:10,320 --> 00:36:12,160
your network infrastructure should be

936
00:36:12,160 --> 00:36:15,040
able to determine uh which mud file

937
00:36:15,040 --> 00:36:16,880
applies to your device and which

938
00:36:16,880 --> 00:36:18,800
software and that gives you a really

939
00:36:18,800 --> 00:36:21,760
good combination of knowing exactly the

940
00:36:21,760 --> 00:36:25,200
pairs of software and mud files that are

941
00:36:25,200 --> 00:36:28,640
active for any given device

942
00:36:30,160 --> 00:36:32,240
um it's going to be referenced by the

943
00:36:32,240 --> 00:36:34,960
iot nets document that's going tomorrow

944
00:36:34,960 --> 00:36:37,359
in the iot ops working group

945
00:36:37,359 --> 00:36:39,839
i'm i'm not aware of any open issues on

946
00:36:39,839 --> 00:36:40,640
this

947
00:36:40,640 --> 00:36:42,640
um it's a

948
00:36:42,640 --> 00:36:44,800
literally a two point a three point

949
00:36:44,800 --> 00:36:47,200
extension to the manifest it does does

950
00:36:47,200 --> 00:36:49,839
very little it says very little and i

951
00:36:49,839 --> 00:36:54,040
don't know what else we need in it

952
00:36:54,320 --> 00:36:57,119
maybe a review by elliot

953
00:36:57,119 --> 00:36:59,599
there you go

954
00:36:59,839 --> 00:37:02,000
um

955
00:37:02,000 --> 00:37:05,839
i'd like to see the suite of traditional

956
00:37:05,839 --> 00:37:08,960
long worked on

957
00:37:15,119 --> 00:37:16,720
so we'll just

958
00:37:16,720 --> 00:37:18,400
i think we should probably just park

959
00:37:18,400 --> 00:37:20,240
this one until we clear the queue out a

960
00:37:20,240 --> 00:37:22,320
little bit i'm not expecting a lot of

961
00:37:22,320 --> 00:37:24,320
updates to it because it's just it's so

962
00:37:24,320 --> 00:37:26,800
trivial

963
00:37:26,880 --> 00:37:28,480
that pressure in our queue to make sure

964
00:37:28,480 --> 00:37:31,640
that the metronome

965
00:37:37,760 --> 00:37:40,560
and the last one is mti

966
00:37:40,560 --> 00:37:41,599
all right this is this is the

967
00:37:41,599 --> 00:37:44,160
controversial one

968
00:37:44,160 --> 00:37:45,839
um you'll you'll notice that i've got

969
00:37:45,839 --> 00:37:49,280
two titles here uh there's there's zero

970
00:37:49,280 --> 00:37:51,839
because i filed the wrong one um and

971
00:37:51,839 --> 00:37:53,440
before the draft deadline sorry about

972
00:37:53,440 --> 00:37:55,520
that then there's zero one it's got a

973
00:37:55,520 --> 00:37:57,119
much better structure if you're going to

974
00:37:57,119 --> 00:38:00,240
read them please read the second one

975
00:38:00,240 --> 00:38:02,640
um

976
00:38:03,040 --> 00:38:05,839
so

977
00:38:06,240 --> 00:38:08,800
there we go

978
00:38:08,800 --> 00:38:11,760
so the idea behind this is that we want

979
00:38:11,760 --> 00:38:14,160
to ensure interoperability between

980
00:38:14,160 --> 00:38:19,200
devices and the systems that manage them

981
00:38:19,200 --> 00:38:22,880
and we want to do this with as little uh

982
00:38:22,880 --> 00:38:25,119
as little m cross n problem as we can

983
00:38:25,119 --> 00:38:26,640
get

984
00:38:26,640 --> 00:38:30,000
um but this is an asymmetric problem

985
00:38:30,000 --> 00:38:31,599
uh devices

986
00:38:31,599 --> 00:38:33,920
can only be expected to implement a

987
00:38:33,920 --> 00:38:36,400
single crypto suite you might get lucky

988
00:38:36,400 --> 00:38:38,160
and have to

989
00:38:38,160 --> 00:38:39,040
uh

990
00:38:39,040 --> 00:38:40,800
that being the case

991
00:38:40,800 --> 00:38:44,000
the burden really falls on authors

992
00:38:44,000 --> 00:38:47,280
and management systems to handle

993
00:38:47,280 --> 00:38:49,119
multiple crypto suites so that they can

994
00:38:49,119 --> 00:38:51,680
support the devices they manage

995
00:38:51,680 --> 00:38:53,839
um

996
00:38:53,839 --> 00:38:57,200
having mandatory to implement algorithms

997
00:38:57,200 --> 00:38:59,920
may be problematic for some recipients

998
00:38:59,920 --> 00:39:02,560
so this is going to be a challenge for

999
00:39:02,560 --> 00:39:05,839
us and i think that it's real oh i

1000
00:39:05,839 --> 00:39:08,640
should mention we don't do constrained

1001
00:39:08,640 --> 00:39:12,000
to constrained right you don't in suit

1002
00:39:12,000 --> 00:39:13,760
that you don't have a situation where

1003
00:39:13,760 --> 00:39:15,760
you have two constrained nodes that are

1004
00:39:15,760 --> 00:39:19,040
talking to each other you always have a

1005
00:39:19,040 --> 00:39:21,599
relatively capable system talking to a

1006
00:39:21,599 --> 00:39:24,240
constrained system so this is a

1007
00:39:24,240 --> 00:39:26,079
different problem than most of the

1008
00:39:26,079 --> 00:39:29,839
interrupt problems that we run into

1009
00:39:30,960 --> 00:39:33,680
recipients if they don't have the

1010
00:39:33,680 --> 00:39:34,960
the the

1011
00:39:34,960 --> 00:39:37,440
crypto system they want available will

1012
00:39:37,440 --> 00:39:40,000
simply not comply with the mtis i think

1013
00:39:40,000 --> 00:39:42,240
it's pretty clear that uh and and i've

1014
00:39:42,240 --> 00:39:44,400
had feedback from some implementers that

1015
00:39:44,400 --> 00:39:47,280
say essentially if you make an algorithm

1016
00:39:47,280 --> 00:39:50,480
i don't want mandatory to implement i

1017
00:39:50,480 --> 00:39:52,320
might still use your standard but i

1018
00:39:52,320 --> 00:39:54,720
won't comply with the mti

1019
00:39:54,720 --> 00:39:56,960
um so i think that there's a danger

1020
00:39:56,960 --> 00:40:00,160
there that if we push too hard on mtis

1021
00:40:00,160 --> 00:40:01,680
we're going to end up with just

1022
00:40:01,680 --> 00:40:04,879
non-compliant devices

1023
00:40:05,599 --> 00:40:07,280
uh i suppose that's a good reason for

1024
00:40:07,280 --> 00:40:08,720
separating this out of the manifest

1025
00:40:08,720 --> 00:40:10,640
draft in itself at least then they can

1026
00:40:10,640 --> 00:40:12,240
comply with that draft but not with this

1027
00:40:12,240 --> 00:40:14,479
one

1028
00:40:15,839 --> 00:40:17,520
so then the question is if we're going

1029
00:40:17,520 --> 00:40:20,079
to do mandatory to implement suites what

1030
00:40:20,079 --> 00:40:21,280
should we do

1031
00:40:21,280 --> 00:40:22,079
well

1032
00:40:22,079 --> 00:40:24,319
if we do symmetric it's relatively

1033
00:40:24,319 --> 00:40:26,319
straightforward we mostly know what to

1034
00:40:26,319 --> 00:40:28,160
do with that but

1035
00:40:28,160 --> 00:40:30,079
it the key and tag distribution is a

1036
00:40:30,079 --> 00:40:32,000
real pain it's not a nice way of doing

1037
00:40:32,000 --> 00:40:34,480
things we really don't want to advertise

1038
00:40:34,480 --> 00:40:36,800
this as the way to solve the problem

1039
00:40:36,800 --> 00:40:38,640
um for asymmetric

1040
00:40:38,640 --> 00:40:41,119
the classical implement implementations

1041
00:40:41,119 --> 00:40:43,359
at least the signature is small

1042
00:40:43,359 --> 00:40:45,760
um a hash based is quite large and has a

1043
00:40:45,760 --> 00:40:47,839
stateful private key which is not a

1044
00:40:47,839 --> 00:40:49,920
thing to recommend it

1045
00:40:49,920 --> 00:40:51,440
and it may be difficult to justify in

1046
00:40:51,440 --> 00:40:53,920
some applications particularly if you're

1047
00:40:53,920 --> 00:40:56,880
demanding an hsm because i'm not aware

1048
00:40:56,880 --> 00:40:59,359
of any that support it yet

1049
00:40:59,359 --> 00:41:01,280
um

1050
00:41:01,280 --> 00:41:03,119
there are other options that are coming

1051
00:41:03,119 --> 00:41:04,480
but they're not standardized yet the

1052
00:41:04,480 --> 00:41:06,000
winners are announced but the standards

1053
00:41:06,000 --> 00:41:07,760
haven't arrived

1054
00:41:07,760 --> 00:41:09,520
so no matter what we do this is

1055
00:41:09,520 --> 00:41:12,800
obviously a moving target

1056
00:41:14,240 --> 00:41:15,280
uh

1057
00:41:15,280 --> 00:41:17,119
so for key distribution which is the

1058
00:41:17,119 --> 00:41:19,119
other side and this will play it more

1059
00:41:19,119 --> 00:41:20,400
into the

1060
00:41:20,400 --> 00:41:21,520
um

1061
00:41:21,520 --> 00:41:24,079
the firmware encryption side of the the

1062
00:41:24,079 --> 00:41:27,119
work and there are symmetric solutions

1063
00:41:27,119 --> 00:41:30,000
and most of them will involve you know

1064
00:41:30,000 --> 00:41:32,560
using a single shared secret and then

1065
00:41:32,560 --> 00:41:35,440
deriving from it and there's classical

1066
00:41:35,440 --> 00:41:38,640
asymmetric and this is well known might

1067
00:41:38,640 --> 00:41:40,240
become broken

1068
00:41:40,240 --> 00:41:43,359
um we have pqc asymmetric coming but

1069
00:41:43,359 --> 00:41:45,839
there are no standardized pqc h or

1070
00:41:45,839 --> 00:41:49,119
symmetric algorithms as of yet uh there

1071
00:41:49,119 --> 00:41:52,079
are winners announced so obviously that

1072
00:41:52,079 --> 00:41:54,800
side of things we probably can't do in

1073
00:41:54,800 --> 00:41:58,319
an mti draft today again this is a

1074
00:41:58,319 --> 00:42:01,119
moving target

1075
00:42:01,440 --> 00:42:04,480
so what should we do um i have a

1076
00:42:04,480 --> 00:42:06,720
proposal and this is very much a straw

1077
00:42:06,720 --> 00:42:09,119
man i very much think this is going to

1078
00:42:09,119 --> 00:42:11,680
need changes and that i i would very

1079
00:42:11,680 --> 00:42:13,920
much welcome input on this

1080
00:42:13,920 --> 00:42:17,440
the proposal is that for symmetric we

1081
00:42:17,440 --> 00:42:18,800
well i mean that one's obvious we don't

1082
00:42:18,800 --> 00:42:21,520
need to go into it too much um i note

1083
00:42:21,520 --> 00:42:24,240
here just quickly that i've got aead

1084
00:42:24,240 --> 00:42:26,079
written for each of the encryption

1085
00:42:26,079 --> 00:42:28,079
algorithms that's because those are the

1086
00:42:28,079 --> 00:42:30,480
only currently standardized options

1087
00:42:30,480 --> 00:42:33,280
um i'm betting that that part is the

1088
00:42:33,280 --> 00:42:35,119
going to be the first one to change and

1089
00:42:35,119 --> 00:42:38,079
end up as aesctr or something equivalent

1090
00:42:38,079 --> 00:42:39,760
instead

1091
00:42:39,760 --> 00:42:40,880
um

1092
00:42:40,880 --> 00:42:44,079
so then the next stage of this is uh

1093
00:42:44,079 --> 00:42:46,880
authentication well for symmetric yeah

1094
00:42:46,880 --> 00:42:48,400
again we know what to do with that so

1095
00:42:48,400 --> 00:42:50,319
for classical asymmetric i've proposed

1096
00:42:50,319 --> 00:42:51,839
es256

1097
00:42:51,839 --> 00:42:55,200
um for key exchange hpke which i

1098
00:42:55,200 --> 00:42:57,839
realized is you know both key exchange

1099
00:42:57,839 --> 00:42:59,760
and encryption but never mind

1100
00:42:59,760 --> 00:43:00,960
um

1101
00:43:00,960 --> 00:43:02,319
and for

1102
00:43:02,319 --> 00:43:05,119
for pqc what i'm proposing is a hybrid

1103
00:43:05,119 --> 00:43:08,000
mode where the authentication

1104
00:43:08,000 --> 00:43:11,839
is uh is hss lms but the key exchange is

1105
00:43:11,839 --> 00:43:15,119
classical hpke i don't think we really

1106
00:43:15,119 --> 00:43:18,960
have a better option than that today

1107
00:43:19,760 --> 00:43:22,400
so brandon this is russ um

1108
00:43:22,400 --> 00:43:24,160
i think in

1109
00:43:24,160 --> 00:43:26,079
light of what we've been learning in

1110
00:43:26,079 --> 00:43:27,280
jose

1111
00:43:27,280 --> 00:43:28,640
um

1112
00:43:28,640 --> 00:43:30,000
hpke

1113
00:43:30,000 --> 00:43:31,200
uh

1114
00:43:31,200 --> 00:43:33,760
led to some confusion

1115
00:43:33,760 --> 00:43:37,119
what honest uh what our document is is a

1116
00:43:37,119 --> 00:43:40,880
way to get with cozy structures the same

1117
00:43:40,880 --> 00:43:43,040
properties that they can take

1118
00:43:43,040 --> 00:43:44,160
okay

1119
00:43:44,160 --> 00:43:47,920
but it is not exactly

1120
00:43:48,000 --> 00:43:49,920
in the sense that

1121
00:43:49,920 --> 00:43:50,880
um

1122
00:43:50,880 --> 00:43:53,599
if you took an hbke library you'd have

1123
00:43:53,599 --> 00:43:54,640
to

1124
00:43:54,640 --> 00:43:56,480
pull it all apart though the ins and

1125
00:43:56,480 --> 00:43:58,480
outs all apart right

1126
00:43:58,480 --> 00:44:01,200
and so it's pretty close to es256 in the

1127
00:44:01,200 --> 00:44:01,920
end

1128
00:44:01,920 --> 00:44:03,440
you just sorry uh

1129
00:44:03,440 --> 00:44:06,880
jose hpke or something like that right

1130
00:44:06,880 --> 00:44:09,599
um i think that's what that's really my

1131
00:44:09,599 --> 00:44:11,280
only uh

1132
00:44:11,280 --> 00:44:13,839
suggestion for clarity because

1133
00:44:13,839 --> 00:44:17,599
i know at least one person didn't get it

1134
00:44:17,599 --> 00:44:19,920
fair enough yeah so i mean that's that's

1135
00:44:19,920 --> 00:44:22,240
a good update for the draft to mention

1136
00:44:22,240 --> 00:44:24,000
that

1137
00:44:24,000 --> 00:44:25,440
um

1138
00:44:25,440 --> 00:44:27,200
so there's a lot of other favorite

1139
00:44:27,200 --> 00:44:29,119
algorithms some of them are definitely

1140
00:44:29,119 --> 00:44:32,720
favorites in the iot space um and my

1141
00:44:32,720 --> 00:44:34,640
answer to that is

1142
00:44:34,640 --> 00:44:36,800
there are going to be an implementers

1143
00:44:36,800 --> 00:44:39,119
who demand fips algorithms

1144
00:44:39,119 --> 00:44:42,160
we should not deny them an mti fips

1145
00:44:42,160 --> 00:44:45,040
algorithm that would be a mistake

1146
00:44:45,040 --> 00:44:46,800
um so

1147
00:44:46,800 --> 00:44:49,839
i've listed three and they're all fips

1148
00:44:49,839 --> 00:44:51,520
the question is

1149
00:44:51,520 --> 00:44:52,560
um

1150
00:44:52,560 --> 00:44:56,319
do we need something else that isn't

1151
00:44:56,319 --> 00:44:57,920
fips that

1152
00:44:57,920 --> 00:45:01,440
allows you know pick your favorite um

1153
00:45:01,440 --> 00:45:02,640
algorithm

1154
00:45:02,640 --> 00:45:03,760
uh

1155
00:45:03,760 --> 00:45:06,400
i'm have very mixed feelings about this

1156
00:45:06,400 --> 00:45:10,160
as i suspect you know many people do uh

1157
00:45:10,160 --> 00:45:13,280
the list will end up being very long if

1158
00:45:13,280 --> 00:45:15,680
we keep going down this road and so then

1159
00:45:15,680 --> 00:45:19,119
this question is um the the reasoning

1160
00:45:19,119 --> 00:45:20,880
for the ones i've picked

1161
00:45:20,880 --> 00:45:24,800
is that people are going to demand fips

1162
00:45:24,800 --> 00:45:26,880
um and that that's not an unreasonable

1163
00:45:26,880 --> 00:45:28,160
demand

1164
00:45:28,160 --> 00:45:31,040
if we want to pick another one i could

1165
00:45:31,040 --> 00:45:33,599
see an argument for that but i think

1166
00:45:33,599 --> 00:45:35,520
that beyond that it's going to start to

1167
00:45:35,520 --> 00:45:38,480
snowball too much

1168
00:45:41,839 --> 00:45:44,160
dave filler as with the

1169
00:45:44,160 --> 00:45:48,960
t protocol um document editor hat on

1170
00:45:48,960 --> 00:45:50,160
um

1171
00:45:50,160 --> 00:45:52,079
one of the use cases of suit is of

1172
00:45:52,079 --> 00:45:53,520
course antique

1173
00:45:53,520 --> 00:45:55,839
and when doing both them in constrained

1174
00:45:55,839 --> 00:45:56,800
nodes

1175
00:45:56,800 --> 00:45:58,880
it sure would be nice if you had common

1176
00:45:58,880 --> 00:46:00,720
requirements on what the algorithms are

1177
00:46:00,720 --> 00:46:02,640
for the same purpose

1178
00:46:02,640 --> 00:46:04,160
the type document says something right

1179
00:46:04,160 --> 00:46:06,079
now which could also be changed and so

1180
00:46:06,079 --> 00:46:09,040
my point is the mti is here and the mti

1181
00:46:09,040 --> 00:46:10,240
is in suit i would like them to be

1182
00:46:10,240 --> 00:46:11,440
consistent but i don't have a strong

1183
00:46:11,440 --> 00:46:13,119
opinion what they are but the cheap

1184
00:46:13,119 --> 00:46:15,040
protocol document says right now and

1185
00:46:15,040 --> 00:46:16,640
similar constraints as brendan said to

1186
00:46:16,640 --> 00:46:18,160
everybody else right you have one side

1187
00:46:18,160 --> 00:46:20,160
that is not constrained and the side

1188
00:46:20,160 --> 00:46:21,599
that is constrained that happens to

1189
00:46:21,599 --> 00:46:23,920
match exactly the uh constraints that

1190
00:46:23,920 --> 00:46:25,599
the case is in suit right the

1191
00:46:25,599 --> 00:46:26,560
constrained side is still the

1192
00:46:26,560 --> 00:46:28,480
constrained side in both cases

1193
00:46:28,480 --> 00:46:30,400
what it says right now in the document

1194
00:46:30,400 --> 00:46:32,560
is that the constrained node

1195
00:46:32,560 --> 00:46:34,800
which is the consumer of information

1196
00:46:34,800 --> 00:46:36,720
can pick either

1197
00:46:36,720 --> 00:46:40,160
es 256 or eddsa

1198
00:46:40,160 --> 00:46:43,599
and the unconstrained side must do both

1199
00:46:43,599 --> 00:46:45,119
okay that's what it says right now what

1200
00:46:45,119 --> 00:46:46,560
it should say is an interesting question

1201
00:46:46,560 --> 00:46:47,920
my point is we should keep alignment

1202
00:46:47,920 --> 00:46:49,680
there but i bring this up because you

1203
00:46:49,680 --> 00:46:51,920
say what about ed dsa

1204
00:46:51,920 --> 00:46:53,599
and t would say well if you're going to

1205
00:46:53,599 --> 00:46:55,680
do eddsa and then you probably want the

1206
00:46:55,680 --> 00:46:57,040
same thing in suit not two different

1207
00:46:57,040 --> 00:46:58,880
things right so you can only do one

1208
00:46:58,880 --> 00:47:00,960
library in your tiny constrained device

1209
00:47:00,960 --> 00:47:02,560
right so that was nice yes

1210
00:47:02,560 --> 00:47:05,119
so dave this is dave waltermeier um

1211
00:47:05,119 --> 00:47:06,960
if if the goal is to keep them in

1212
00:47:06,960 --> 00:47:09,119
alignment how do we ensure long-term

1213
00:47:09,119 --> 00:47:10,720
alignment between

1214
00:47:10,720 --> 00:47:12,640
the two efforts

1215
00:47:12,640 --> 00:47:15,040
uh are we talking about maybe

1216
00:47:15,040 --> 00:47:17,280
having a common registry or something

1217
00:47:17,280 --> 00:47:19,040
like that that could be shared between

1218
00:47:19,040 --> 00:47:21,520
the efforts

1219
00:47:21,839 --> 00:47:23,839
uh dave they are there are common

1220
00:47:23,839 --> 00:47:25,839
registries because they're all coset

1221
00:47:25,839 --> 00:47:29,200
algorithms but we don't have a required

1222
00:47:29,200 --> 00:47:31,280
for use in teeth required for use in

1223
00:47:31,280 --> 00:47:33,200
suits

1224
00:47:33,200 --> 00:47:34,720
right well i guess what i was thinking

1225
00:47:34,720 --> 00:47:36,640
is maybe a registry could define those

1226
00:47:36,640 --> 00:47:38,160
requirements

1227
00:47:38,160 --> 00:47:40,319
i i was thinking that maybe what teep

1228
00:47:40,319 --> 00:47:43,040
needs to do is depend on this document

1229
00:47:43,040 --> 00:47:44,400
yeah

1230
00:47:44,400 --> 00:47:46,079
it does now

1231
00:47:46,079 --> 00:47:48,480
funny you should mention that

1232
00:47:48,480 --> 00:47:50,720
i just posted draft 10 so the cheap

1233
00:47:50,720 --> 00:47:52,079
meeting was earlier today and we walked

1234
00:47:52,079 --> 00:47:53,920
through all the issues and t as well as

1235
00:47:53,920 --> 00:47:55,839
a couple of open issues right but all

1236
00:47:55,839 --> 00:47:58,160
the issues that i said here in github um

1237
00:47:58,160 --> 00:48:00,240
are now posted in draft 10 which came

1238
00:48:00,240 --> 00:48:01,760
out this afternoon right it matches

1239
00:48:01,760 --> 00:48:04,640
exactly the github copy as of um this

1240
00:48:04,640 --> 00:48:06,960
morning and the end of the hackathon

1241
00:48:06,960 --> 00:48:08,800
and that one does take a dependency on

1242
00:48:08,800 --> 00:48:10,559
the firmware encryption document you'll

1243
00:48:10,559 --> 00:48:12,400
see that in the uh right now it's an

1244
00:48:12,400 --> 00:48:14,000
informative reference

1245
00:48:14,000 --> 00:48:15,920
um just due to how it's worded right it

1246
00:48:15,920 --> 00:48:17,119
could become normative i think right now

1247
00:48:17,119 --> 00:48:19,040
it's informative uh but to dave walter

1248
00:48:19,040 --> 00:48:20,800
meyer's question i want to give an

1249
00:48:20,800 --> 00:48:24,000
analogy to what we do for eat

1250
00:48:24,000 --> 00:48:26,800
um in the eat in the rats working group

1251
00:48:26,800 --> 00:48:29,680
the eat document says you can define a

1252
00:48:29,680 --> 00:48:31,040
profile

1253
00:48:31,040 --> 00:48:32,160
and it's going to use the word profile

1254
00:48:32,160 --> 00:48:33,280
i'm not saying how to use your profile

1255
00:48:33,280 --> 00:48:35,359
or whatever it says in use case what's

1256
00:48:35,359 --> 00:48:36,960
mandatory to implement is not in the

1257
00:48:36,960 --> 00:48:39,119
body of the document it's in the

1258
00:48:39,119 --> 00:48:40,960
specific use case right so what you

1259
00:48:40,960 --> 00:48:44,000
could say is that it's teeps job to

1260
00:48:44,000 --> 00:48:45,839
specify what the mandatory to implement

1261
00:48:45,839 --> 00:48:48,400
cases when using suit in a teep case now

1262
00:48:48,400 --> 00:48:50,640
the disadvantage of that is that we

1263
00:48:50,640 --> 00:48:53,119
would love suit to say i have a suit

1264
00:48:53,119 --> 00:48:55,359
manifest signer and processor that can

1265
00:48:55,359 --> 00:48:57,200
be used for both teep and other cases

1266
00:48:57,200 --> 00:48:59,280
that's the reason to not do that and so

1267
00:48:59,280 --> 00:49:00,960
i just want to throw out both the pros

1268
00:49:00,960 --> 00:49:03,839
and the cons of that project

1269
00:49:03,839 --> 00:49:07,280
so the approach of leaving it to profile

1270
00:49:07,280 --> 00:49:09,280
is similar to what was done on the

1271
00:49:09,280 --> 00:49:10,480
t-test

1272
00:49:10,480 --> 00:49:13,200
with certificate

1273
00:49:14,319 --> 00:49:16,079
we knew certificates were going to be

1274
00:49:16,079 --> 00:49:17,680
used in all kinds of different

1275
00:49:17,680 --> 00:49:21,920
applications i suspect pls s mine

1276
00:49:21,920 --> 00:49:23,760
so on and

1277
00:49:23,760 --> 00:49:24,960
so we said

1278
00:49:24,960 --> 00:49:27,200
picking a mandatory to implement for pkx

1279
00:49:27,200 --> 00:49:30,559
may not be a good choice for those so we

1280
00:49:30,559 --> 00:49:32,079
left it to

1281
00:49:32,079 --> 00:49:33,920
tls and

1282
00:49:33,920 --> 00:49:36,480
ipsec and s mine predicted mandatory

1283
00:49:36,480 --> 00:49:39,119
implement and that kind of feels like

1284
00:49:39,119 --> 00:49:42,480
we're in a similar situation

1285
00:49:43,520 --> 00:49:46,000
thank you again so i i like one of the

1286
00:49:46,000 --> 00:49:48,160
things that brendan uh said earlier

1287
00:49:48,160 --> 00:49:50,000
which does align with how teep does it

1288
00:49:50,000 --> 00:49:50,960
which is

1289
00:49:50,960 --> 00:49:53,520
if you say that the non-constrained side

1290
00:49:53,520 --> 00:49:55,440
has to implement both of them in order

1291
00:49:55,440 --> 00:49:58,000
to let the constrained side pick one you

1292
00:49:58,000 --> 00:49:59,599
can do the same thing for how you do

1293
00:49:59,599 --> 00:50:01,599
profiles right the non-constrained side

1294
00:50:01,599 --> 00:50:03,200
can implement multiple profiles and it

1295
00:50:03,200 --> 00:50:05,280
must do all of them right and the

1296
00:50:05,280 --> 00:50:07,680
constrained node supports often just a

1297
00:50:07,680 --> 00:50:09,040
single profile that's using it for a

1298
00:50:09,040 --> 00:50:11,119
single use case right and so as long as

1299
00:50:11,119 --> 00:50:14,079
you principal around the mtis is to say

1300
00:50:14,079 --> 00:50:16,079
each use case defines its mtis and your

1301
00:50:16,079 --> 00:50:18,800
principle is that say the suit manifest

1302
00:50:18,800 --> 00:50:20,720
generator if it's going to have a tool

1303
00:50:20,720 --> 00:50:22,800
or a repository for doing both of those

1304
00:50:22,800 --> 00:50:24,640
it supports a set of huge cases and it

1305
00:50:24,640 --> 00:50:26,319
supports all the mtis for all the use

1306
00:50:26,319 --> 00:50:28,800
cases it wants to be used for

1307
00:50:28,800 --> 00:50:31,599
but uh so so ross here you're implying

1308
00:50:31,599 --> 00:50:32,400
that

1309
00:50:32,400 --> 00:50:34,720
shouldn't define any mti and that these

1310
00:50:34,720 --> 00:50:36,240
other use cases

1311
00:50:36,240 --> 00:50:38,960
should um

1312
00:50:38,960 --> 00:50:41,200
yes i think that is the way out of the

1313
00:50:41,200 --> 00:50:42,720
spot

1314
00:50:42,720 --> 00:50:46,079
but i think i'm going to disagree

1315
00:50:46,079 --> 00:50:48,880
i was just about to go there brendan

1316
00:50:48,880 --> 00:50:50,880
i'd say the suit should just find the

1317
00:50:50,880 --> 00:50:53,200
constrained node

1318
00:50:53,200 --> 00:50:56,319
firmware update use case

1319
00:50:56,319 --> 00:50:58,559
and then right rest up because

1320
00:50:58,559 --> 00:51:01,040
represents its own use case

1321
00:51:01,040 --> 00:51:03,280
that that was brendan's point is he's

1322
00:51:03,280 --> 00:51:07,800
saying but the suit is a profile

1323
00:51:11,040 --> 00:51:13,920
no great answer uh i i think one other

1324
00:51:13,920 --> 00:51:16,000
things that uh i think you mentioned on

1325
00:51:16,000 --> 00:51:17,599
the previous slide which is this is a

1326
00:51:17,599 --> 00:51:19,520
moving target okay so i think that's

1327
00:51:19,520 --> 00:51:21,760
exactly a good reason why we split out

1328
00:51:21,760 --> 00:51:23,920
the mti discussion out of the main

1329
00:51:23,920 --> 00:51:25,040
document

1330
00:51:25,040 --> 00:51:28,160
so that um as the set of mtis change

1331
00:51:28,160 --> 00:51:29,440
which you know 10 years from now the set

1332
00:51:29,440 --> 00:51:30,640
of mpis is probably going to be

1333
00:51:30,640 --> 00:51:31,760
different from what they are right now

1334
00:51:31,760 --> 00:51:33,359
because your point of view is about the

1335
00:51:33,359 --> 00:51:34,720
you know hopefully by then we'll have

1336
00:51:34,720 --> 00:51:36,800
pqc standards right so you can actually

1337
00:51:36,800 --> 00:51:39,040
reference that have different apis right

1338
00:51:39,040 --> 00:51:41,040
and so that means that the ideal case is

1339
00:51:41,040 --> 00:51:42,960
we don't need to obsolete or even update

1340
00:51:42,960 --> 00:51:44,800
the suit manifest document right we

1341
00:51:44,800 --> 00:51:46,400
would obsolete

1342
00:51:46,400 --> 00:51:48,240
the document with the current mpis not

1343
00:51:48,240 --> 00:51:49,680
update but actually obsolete it with a

1344
00:51:49,680 --> 00:51:51,680
new set of mpi so that's the good reason

1345
00:51:51,680 --> 00:51:54,319
to separate things

1346
00:51:56,480 --> 00:51:59,119
so i i'm going to say this i have almost

1347
00:51:59,119 --> 00:52:01,440
definitely made wrong choices in this

1348
00:52:01,440 --> 00:52:04,000
document this was explicitly intended to

1349
00:52:04,000 --> 00:52:07,280
be a straw man please go bash it um

1350
00:52:07,280 --> 00:52:08,800
it uh

1351
00:52:08,800 --> 00:52:11,520
it's it's almost certainly wrong but it

1352
00:52:11,520 --> 00:52:14,480
was the the best shot at the minimum set

1353
00:52:14,480 --> 00:52:16,960
i could think of that would

1354
00:52:16,960 --> 00:52:19,920
suit the use cases i can see today

1355
00:52:19,920 --> 00:52:20,880
um

1356
00:52:20,880 --> 00:52:22,720
i as

1357
00:52:22,720 --> 00:52:24,960
i'm well aware that riot

1358
00:52:24,960 --> 00:52:27,520
disagrees with me and their default

1359
00:52:27,520 --> 00:52:30,400
signature algorithm is eddsa

1360
00:52:30,400 --> 00:52:33,440
and as a result i wonder if we're going

1361
00:52:33,440 --> 00:52:35,280
to wind up with four

1362
00:52:35,280 --> 00:52:38,079
um options in the very in very short

1363
00:52:38,079 --> 00:52:39,839
order as soon as they start editing this

1364
00:52:39,839 --> 00:52:42,160
document with me um

1365
00:52:42,160 --> 00:52:44,720
but uh that that was as far as i got

1366
00:52:44,720 --> 00:52:46,640
today and the reasoning again was

1367
00:52:46,640 --> 00:52:49,040
because of fips

1368
00:52:49,040 --> 00:52:51,440
lawrence

1369
00:52:52,960 --> 00:52:54,400
yeah i don't know if you've looked at

1370
00:52:54,400 --> 00:52:57,200
the latest eat draft but it has the

1371
00:52:57,200 --> 00:52:59,599
definition of a profile in it

1372
00:52:59,599 --> 00:53:03,359
but it's not mandatory to implement

1373
00:53:03,359 --> 00:53:05,040
so there's a definition there but it's

1374
00:53:05,040 --> 00:53:06,640
not mandatory and i was i don't know

1375
00:53:06,640 --> 00:53:09,359
what you think of that as a solution

1376
00:53:09,359 --> 00:53:12,720
oh yeah sorry it's kind of short here um

1377
00:53:12,720 --> 00:53:15,359
so the the latest eat has a definition

1378
00:53:15,359 --> 00:53:17,680
of a profile which includes the crypto

1379
00:53:17,680 --> 00:53:19,440
algorithms for eat

1380
00:53:19,440 --> 00:53:20,480
um

1381
00:53:20,480 --> 00:53:22,640
but it is not mandatory to implement so

1382
00:53:22,640 --> 00:53:24,960
it's just a definition of a profile

1383
00:53:24,960 --> 00:53:26,880
that you can so you can reference if you

1384
00:53:26,880 --> 00:53:28,480
want to and say for you know for this

1385
00:53:28,480 --> 00:53:30,000
kind of device

1386
00:53:30,000 --> 00:53:32,240
use we're using this profile so they're

1387
00:53:32,240 --> 00:53:34,640
not mandatory to implement they're just

1388
00:53:34,640 --> 00:53:38,880
uh you know a palette of of profiles

1389
00:53:38,880 --> 00:53:42,920
or this is the start of a ballot

1390
00:53:46,800 --> 00:53:47,599
uh

1391
00:53:47,599 --> 00:53:49,440
okay um

1392
00:53:49,440 --> 00:53:51,599
i think we really need to take this

1393
00:53:51,599 --> 00:53:54,720
topic to the list

1394
00:53:54,839 --> 00:53:58,079
um that input from riot earlier than

1395
00:53:58,079 --> 00:54:01,359
later would be very helpful

1396
00:54:01,359 --> 00:54:02,960
yeah i guess my question is whether the

1397
00:54:02,960 --> 00:54:06,640
working group wants to adopt this work

1398
00:54:07,280 --> 00:54:09,599
okay let's ask the question does anyone

1399
00:54:09,599 --> 00:54:11,359
have a problem adopting it in its

1400
00:54:11,359 --> 00:54:13,119
current state knowing that we're going

1401
00:54:13,119 --> 00:54:16,240
to continue to work on it

1402
00:54:18,480 --> 00:54:22,319
okay we'll take that to the list too

1403
00:54:23,359 --> 00:54:25,119
dave waltermark since you're not

1404
00:54:25,119 --> 00:54:26,640
traveling could you do the call for a

1405
00:54:26,640 --> 00:54:27,839
thought

1406
00:54:27,839 --> 00:54:29,280
i just want to report out in case the

1407
00:54:29,280 --> 00:54:30,960
camera is not there there was nobody in

1408
00:54:30,960 --> 00:54:32,720
the room that uh said that they had any

1409
00:54:32,720 --> 00:54:36,000
issues or no hands raised so

1410
00:54:36,640 --> 00:54:38,079
and there were no hands raised by

1411
00:54:38,079 --> 00:54:40,960
anybody virtually

1412
00:54:42,319 --> 00:54:44,240
yeah i'll park that

1413
00:54:44,240 --> 00:54:46,640
thank you dave

1414
00:54:46,640 --> 00:54:48,640
uh given that we have uh just five

1415
00:54:48,640 --> 00:54:50,640
minutes left um

1416
00:54:50,640 --> 00:54:52,799
we can either go back and talk about the

1417
00:54:52,799 --> 00:54:54,880
hackathon things that they've skipped

1418
00:54:54,880 --> 00:54:56,880
because we didn't think we'd get done

1419
00:54:56,880 --> 00:54:59,680
or we could then

1420
00:55:02,319 --> 00:55:04,240
i would find it useful if brandon is

1421
00:55:04,240 --> 00:55:05,839
still around to spend you know two

1422
00:55:05,839 --> 00:55:08,240
minutes back on the two hackathon issues

1423
00:55:08,240 --> 00:55:10,720
to see if we can find a way forward

1424
00:55:10,720 --> 00:55:13,040
uh given that the actual wasteboard was

1425
00:55:13,040 --> 00:55:14,640
not to point the package on reports one

1426
00:55:14,640 --> 00:55:16,319
pack of dog report would say we raise an

1427
00:55:16,319 --> 00:55:18,000
issue

1428
00:55:18,000 --> 00:55:19,440
all right so if you just go to the last

1429
00:55:19,440 --> 00:55:21,200
two slides there

1430
00:55:21,200 --> 00:55:22,400
the first one

1431
00:55:22,400 --> 00:55:23,520
um

1432
00:55:23,520 --> 00:55:25,520
so uh let's see if you can get any if we

1433
00:55:25,520 --> 00:55:27,839
can get any direction here right so this

1434
00:55:27,839 --> 00:55:30,240
one that the green part here is what the

1435
00:55:30,240 --> 00:55:32,640
each spec says okay

1436
00:55:32,640 --> 00:55:36,880
which um anything that has its own uh

1437
00:55:36,880 --> 00:55:37,760
uh

1438
00:55:37,760 --> 00:55:39,920
content type

1439
00:55:39,920 --> 00:55:42,480
your own co-op content format value that

1440
00:55:42,480 --> 00:55:44,400
you can plug into here

1441
00:55:44,400 --> 00:55:46,880
and so the proposal in the hackathon was

1442
00:55:46,880 --> 00:55:49,280
to say we create another co-op content

1443
00:55:49,280 --> 00:55:51,200
format value

1444
00:55:51,200 --> 00:55:53,839
which can specify i have a way of

1445
00:55:53,839 --> 00:55:55,920
referencing a particular suit manifest

1446
00:55:55,920 --> 00:55:57,440
and verse number

1447
00:55:57,440 --> 00:55:58,960
and if that's a good idea then which

1448
00:55:58,960 --> 00:56:00,400
draft would that go in that's the

1449
00:56:00,400 --> 00:56:01,760
question

1450
00:56:01,760 --> 00:56:04,079
so i i think i've mentioned previously

1451
00:56:04,079 --> 00:56:06,319
that um my preference for in these

1452
00:56:06,319 --> 00:56:08,960
situations is to use the

1453
00:56:08,960 --> 00:56:11,920
uh the digest of the manifest um i

1454
00:56:11,920 --> 00:56:14,799
understand that you like uh the ability

1455
00:56:14,799 --> 00:56:17,440
to do broad version comparisons simply

1456
00:56:17,440 --> 00:56:20,880
so i i take that point um

1457
00:56:20,880 --> 00:56:21,680
that

1458
00:56:21,680 --> 00:56:23,680
other than that i

1459
00:56:23,680 --> 00:56:26,160
yeah i mean this is fine i would i guess

1460
00:56:26,160 --> 00:56:29,040
my my question would be how would you

1461
00:56:29,040 --> 00:56:32,960
feel about making the sequence number

1462
00:56:32,960 --> 00:56:37,040
um either or with the digest

1463
00:56:37,040 --> 00:56:38,079
i

1464
00:56:38,079 --> 00:56:40,240
personally would not have any objections

1465
00:56:40,240 --> 00:56:41,760
the question is who gets to decide to

1466
00:56:41,760 --> 00:56:44,000
either or

1467
00:56:44,000 --> 00:56:47,440
and because as long as say an an author

1468
00:56:47,440 --> 00:56:49,119
of a

1469
00:56:49,119 --> 00:56:51,920
verifier can say we really like doing

1470
00:56:51,920 --> 00:56:54,640
manifest sequence numbers or whatever it

1471
00:56:54,640 --> 00:56:56,160
says it gives who gets to decide the

1472
00:56:56,160 --> 00:56:57,520
order right it's really the real

1473
00:56:57,520 --> 00:56:58,480
question

1474
00:56:58,480 --> 00:57:00,640
yeah so so who gets to decide is always

1475
00:57:00,640 --> 00:57:02,799
the constrained node right it's always

1476
00:57:02,799 --> 00:57:04,640
the same as the mentor of the each which

1477
00:57:04,640 --> 00:57:06,799
in this case is the the the device the

1478
00:57:06,799 --> 00:57:09,440
deep agent

1479
00:57:10,880 --> 00:57:12,640
there so i

1480
00:57:12,640 --> 00:57:14,799
she's speaking as an individual

1481
00:57:14,799 --> 00:57:16,640
i would not have any problem with that

1482
00:57:16,640 --> 00:57:18,799
um i

1483
00:57:18,799 --> 00:57:20,640
in a constrained node fewer options is

1484
00:57:20,640 --> 00:57:22,079
better

1485
00:57:22,079 --> 00:57:23,920
and so that was the disadvantage of say

1486
00:57:23,920 --> 00:57:25,920
if you say or as long as the implementer

1487
00:57:25,920 --> 00:57:27,359
gets to pick and only implement one of

1488
00:57:27,359 --> 00:57:29,119
those two in the constrained node then

1489
00:57:29,119 --> 00:57:30,799
that resolves that concern

1490
00:57:30,799 --> 00:57:31,760
exactly

1491
00:57:31,760 --> 00:57:33,760
if if we go forward with this and the

1492
00:57:33,760 --> 00:57:35,440
question is which draft does it belong

1493
00:57:35,440 --> 00:57:36,319
in

1494
00:57:36,319 --> 00:57:38,720
and my personal preference would be the

1495
00:57:38,720 --> 00:57:40,960
suit update management draft but i'm not

1496
00:57:40,960 --> 00:57:42,079
interested

1497
00:57:42,079 --> 00:57:44,240
i would have said suit report

1498
00:57:44,240 --> 00:57:45,839
i would be fine with that too but my

1499
00:57:45,839 --> 00:57:47,359
question is this is the super group

1500
00:57:47,359 --> 00:57:48,720
which document do we think is the right

1501
00:57:48,720 --> 00:57:50,640
one is it a suit document

1502
00:57:50,640 --> 00:57:52,880
and if it's a suit document which one

1503
00:57:52,880 --> 00:57:54,559
you see what i would do with this is i

1504
00:57:54,559 --> 00:57:56,480
would embed it into the suit report

1505
00:57:56,480 --> 00:57:58,240
because the state report already has

1506
00:57:58,240 --> 00:58:01,040
those two elements of information in it

1507
00:58:01,040 --> 00:58:02,559
and so what it would do is simply

1508
00:58:02,559 --> 00:58:04,079
aggregate the two of them together and

1509
00:58:04,079 --> 00:58:06,559
call them a suit reference

1510
00:58:06,559 --> 00:58:09,559
okay

1511
00:58:12,799 --> 00:58:14,960
um i have a question independent of uh

1512
00:58:14,960 --> 00:58:17,040
this one more sort of logistical

1513
00:58:17,040 --> 00:58:20,000
question or process question

1514
00:58:20,000 --> 00:58:21,599
when um brendan said he's going to

1515
00:58:21,599 --> 00:58:23,280
update the manifest with the content he

1516
00:58:23,280 --> 00:58:25,119
already had in which he talked about it

1517
00:58:25,119 --> 00:58:27,440
um that's fantastic uh

1518
00:58:27,440 --> 00:58:28,400
then

1519
00:58:28,400 --> 00:58:31,119
the next step is with that triggered in

1520
00:58:31,119 --> 00:58:32,640
the working group last call of that

1521
00:58:32,640 --> 00:58:34,400
document or how would we proceed

1522
00:58:34,400 --> 00:58:35,920
specifically now we have the summer

1523
00:58:35,920 --> 00:58:38,480
months uh august some people are away

1524
00:58:38,480 --> 00:58:41,200
and so on so how do we make sure that we

1525
00:58:41,200 --> 00:58:43,280
um sort of like get those document out

1526
00:58:43,280 --> 00:58:45,040
there so we can actually use them also

1527
00:58:45,040 --> 00:58:47,040
in

1528
00:58:47,040 --> 00:58:49,440
last call

1529
00:58:49,440 --> 00:58:51,920
okay right you missed that and that the

1530
00:58:51,920 --> 00:58:55,440
comments is what led to the breakup

1531
00:58:55,440 --> 00:58:56,720
right

1532
00:58:56,720 --> 00:58:59,520
and that's true yeah i would think that

1533
00:58:59,520 --> 00:59:01,200
coming out of the

1534
00:59:01,200 --> 00:59:02,559
next version

1535
00:59:02,559 --> 00:59:04,799
they

1536
00:59:05,359 --> 00:59:06,640
that all of your comments have been

1537
00:59:06,640 --> 00:59:08,160
resolved and no new problems were

1538
00:59:08,160 --> 00:59:09,440
interviewed

1539
00:59:09,440 --> 00:59:10,240
okay

1540
00:59:10,240 --> 00:59:12,160
very short you know

1541
00:59:12,160 --> 00:59:14,399
okay

1542
00:59:14,880 --> 00:59:16,960
that's my my view of it okay that's good

1543
00:59:16,960 --> 00:59:18,319
to hear i think that's right i think

1544
00:59:18,319 --> 00:59:19,440
that the principle we're trying to

1545
00:59:19,440 --> 00:59:22,160
follow is if you raise a new comment

1546
00:59:22,160 --> 00:59:23,520
uh on something that hasn't been

1547
00:59:23,520 --> 00:59:25,440
addressed then uh we would look to see

1548
00:59:25,440 --> 00:59:27,760
is that piece severable out of the main

1549
00:59:27,760 --> 00:59:29,280
document into an extension so that we

1550
00:59:29,280 --> 00:59:30,880
can keep doing that to let the rest go

1551
00:59:30,880 --> 00:59:33,040
forward and we hope that the answer is

1552
00:59:33,040 --> 00:59:35,440
always uh there exists no unseparable

1553
00:59:35,440 --> 00:59:37,520
pieces

1554
00:59:37,520 --> 00:59:38,319
sorry

1555
00:59:38,319 --> 00:59:42,400
to reuse brendan's several coins term

1556
00:59:42,799 --> 00:59:43,839
out of time so i don't know if we have

1557
00:59:43,839 --> 00:59:46,160
time to cover the last slide so here no

1558
00:59:46,160 --> 00:59:47,760
objection to putting into a suit report

1559
00:59:47,760 --> 00:59:50,880
as you propose as you discussed there

1560
00:59:50,880 --> 00:59:52,720
excellent

1561
00:59:52,720 --> 00:59:54,240
and

1562
00:59:54,240 --> 00:59:57,920
we'll take the second one to the list

1563
00:59:57,920 --> 00:59:59,359
thank you all i'm surprised we got

1564
00:59:59,359 --> 01:00:01,200
through this much today appreciate your

1565
01:00:01,200 --> 01:00:03,919
attentiveness

1566
01:00:04,240 --> 01:00:07,558
thanks everyone

1567
01:00:27,599 --> 01:00:31,480
sometimes the uh

