1
00:00:12,400 --> 00:00:15,400
um

2
00:00:42,239 --> 00:00:44,980
here

3
00:00:44,980 --> 00:00:48,330
[Music]

4
00:00:52,719 --> 00:00:54,719
okay

5
00:00:54,719 --> 00:00:57,840
let's get started hello this is six-man

6
00:00:57,840 --> 00:00:59,280
working group

7
00:00:59,280 --> 00:01:01,359
just to check in i see familiar faces

8
00:01:01,359 --> 00:01:02,480
but

9
00:01:02,480 --> 00:01:05,438
just in case if you're in the wrong room

10
00:01:05,438 --> 00:01:08,080
so we have two hours today

11
00:01:08,080 --> 00:01:11,360
we have bulb remote me here and only

12
00:01:11,360 --> 00:01:14,159
very very remote so he could not even

13
00:01:14,159 --> 00:01:16,640
join us

14
00:01:16,640 --> 00:01:19,840
so note well

15
00:01:19,840 --> 00:01:21,920
please take a few seconds to read it if

16
00:01:21,920 --> 00:01:22,799
you

17
00:01:22,799 --> 00:01:25,680
if it's the first time you see it

18
00:01:25,680 --> 00:01:28,320
or maybe if it even if you see it before

19
00:01:28,320 --> 00:01:30,159
it's like airlines right they always ask

20
00:01:30,159 --> 00:01:31,439
you to

21
00:01:31,439 --> 00:01:33,600
check the safety card even if you're a

22
00:01:33,600 --> 00:01:36,320
freaking flyer

23
00:01:36,960 --> 00:01:40,079
so housekeeping

24
00:01:40,079 --> 00:01:42,240
i was going to say please very much but

25
00:01:42,240 --> 00:01:43,280
everyone

26
00:01:43,280 --> 00:01:45,040
do an attenuation

27
00:01:45,040 --> 00:01:46,320
great

28
00:01:46,320 --> 00:01:48,079
so uh

29
00:01:48,079 --> 00:01:50,479
please if you're joining the queue being

30
00:01:50,479 --> 00:01:52,799
in the room please still use on-site

31
00:01:52,799 --> 00:01:55,680
tool because it would make my life

32
00:01:55,680 --> 00:01:57,600
much much easier in terms of cue

33
00:01:57,600 --> 00:01:59,600
management

34
00:01:59,600 --> 00:02:00,560
and

35
00:02:00,560 --> 00:02:03,280
state your name at the microphone

36
00:02:03,280 --> 00:02:05,200
david who is taking minutes will greatly

37
00:02:05,200 --> 00:02:07,759
appreciate that

38
00:02:07,759 --> 00:02:10,239
try to leave the view when done

39
00:02:10,239 --> 00:02:12,319
i personally keep forgetting that but

40
00:02:12,319 --> 00:02:13,280
still

41
00:02:13,280 --> 00:02:15,920
and remote participants please

42
00:02:15,920 --> 00:02:18,640
keep your video and audio off until you

43
00:02:18,640 --> 00:02:19,920
start speaking

44
00:02:19,920 --> 00:02:23,840
and then please use headset

45
00:02:23,840 --> 00:02:26,879
uh so

46
00:02:27,920 --> 00:02:29,760
and we also

47
00:02:29,760 --> 00:02:31,840
if i can just add one thing the chat

48
00:02:31,840 --> 00:02:34,840
seems to not be working

49
00:02:34,840 --> 00:02:38,640
so yeah yes yeah seri confirmed looks

50
00:02:38,640 --> 00:02:40,879
like individual messages work in the me

51
00:02:40,879 --> 00:02:42,800
take a chat but you cannot send messages

52
00:02:42,800 --> 00:02:44,720
to the group chat

53
00:02:44,720 --> 00:02:46,000
thanks bob

54
00:02:46,000 --> 00:02:47,040
so

55
00:02:47,040 --> 00:02:49,280
here is a link to the agenda

56
00:02:49,280 --> 00:02:52,239
which has all other useful links there

57
00:02:52,239 --> 00:02:54,319
like to the slides meeting materials

58
00:02:54,319 --> 00:02:56,879
chat and so on

59
00:02:56,879 --> 00:03:00,800
uh so agenda busy one today so we have

60
00:03:00,800 --> 00:03:03,040
approximately 65 minutes for working

61
00:03:03,040 --> 00:03:04,400
group documents

62
00:03:04,400 --> 00:03:07,440
we have four drafts

63
00:03:07,440 --> 00:03:09,680
then we are going to spend another

64
00:03:09,680 --> 00:03:13,200
45 minutes on individual documents

65
00:03:13,200 --> 00:03:14,080
and

66
00:03:14,080 --> 00:03:16,000
we also have some

67
00:03:16,000 --> 00:03:17,760
time permitting

68
00:03:17,760 --> 00:03:20,000
with no time allocated but i don't know

69
00:03:20,000 --> 00:03:21,840
maybe we can done with our working group

70
00:03:21,840 --> 00:03:24,159
business so quickly so we can

71
00:03:24,159 --> 00:03:25,760
have some

72
00:03:25,760 --> 00:03:26,959
backup

73
00:03:26,959 --> 00:03:28,879
presentations

74
00:03:28,879 --> 00:03:31,200
yeah we seriously we got like about

75
00:03:31,200 --> 00:03:33,760
hour and a half more

76
00:03:33,760 --> 00:03:37,360
requests that we can accommodate

77
00:03:37,360 --> 00:03:39,760
so what's happened since we met last

78
00:03:39,760 --> 00:03:40,879
time

79
00:03:40,879 --> 00:03:42,959
we published an rfc

80
00:03:42,959 --> 00:03:47,519
on i am in segment routing

81
00:03:48,159 --> 00:03:51,440
minimum pass mtu hope by hope option is

82
00:03:51,440 --> 00:03:55,359
an rfc editor skill

83
00:03:57,120 --> 00:03:58,640
we have

84
00:03:58,640 --> 00:03:59,599
about

85
00:03:59,599 --> 00:04:02,080
one tricky document and i'll

86
00:04:02,080 --> 00:04:04,239
uh have another slide just for that

87
00:04:04,239 --> 00:04:05,599
about uh

88
00:04:05,599 --> 00:04:09,040
alternate marking method and there is a

89
00:04:09,040 --> 00:04:10,640
document which makes me feel guilty

90
00:04:10,640 --> 00:04:12,000
because i'm still working on the

91
00:04:12,000 --> 00:04:15,840
write-up it's a

92
00:04:16,160 --> 00:04:18,720
six eight seventy four bits

93
00:04:18,720 --> 00:04:21,600
so it's hopefully will be out for

94
00:04:21,600 --> 00:04:25,759
ad review later this week

95
00:04:26,000 --> 00:04:27,600
and yeah and as

96
00:04:27,600 --> 00:04:29,840
i said we have five working group

97
00:04:29,840 --> 00:04:31,919
documents four of them will be presented

98
00:04:31,919 --> 00:04:33,040
today

99
00:04:33,040 --> 00:04:34,320
and

100
00:04:34,320 --> 00:04:37,440
one which is actually dangerously close

101
00:04:37,440 --> 00:04:40,479
to get expired but i have not heard from

102
00:04:40,479 --> 00:04:43,440
authors here

103
00:04:43,520 --> 00:04:44,240
so

104
00:04:44,240 --> 00:04:47,759
the last of the chair slide if you

105
00:04:47,759 --> 00:04:49,600
didn't pay attention to the mailing list

106
00:04:49,600 --> 00:04:50,960
we had a

107
00:04:50,960 --> 00:04:53,759
interesting case when a document was

108
00:04:53,759 --> 00:04:55,840
adopted by the working group went

109
00:04:55,840 --> 00:04:58,240
through the working group last call and

110
00:04:58,240 --> 00:05:00,639
the etf last call

111
00:05:00,639 --> 00:05:01,840
and

112
00:05:01,840 --> 00:05:03,919
was reviewed by asg

113
00:05:03,919 --> 00:05:07,120
but then quite late an apr disclosure

114
00:05:07,120 --> 00:05:10,240
was made by one of the authors and some

115
00:05:10,240 --> 00:05:11,840
requests were made some comments were

116
00:05:11,840 --> 00:05:14,479
made about shall we consider it as a

117
00:05:14,479 --> 00:05:16,880
significant change to the document or at

118
00:05:16,880 --> 00:05:18,960
least something which working group

119
00:05:18,960 --> 00:05:22,000
needs to be aware of and decide

120
00:05:22,000 --> 00:05:24,880
if we still have consensus on proceeding

121
00:05:24,880 --> 00:05:26,400
with the document

122
00:05:26,400 --> 00:05:29,520
so altmark document was returned to the

123
00:05:29,520 --> 00:05:33,120
working group in the beginning of july

124
00:05:33,120 --> 00:05:34,720
and

125
00:05:34,720 --> 00:05:36,960
the chairs believe that there is still

126
00:05:36,960 --> 00:05:39,360
consensus few comments were made

127
00:05:39,360 --> 00:05:41,600
but it looks like there is no

128
00:05:41,600 --> 00:05:43,680
violent disagreement on proceeding with

129
00:05:43,680 --> 00:05:45,039
the document

130
00:05:45,039 --> 00:05:46,320
so

131
00:05:46,320 --> 00:05:49,039
just today after some delay yeah i

132
00:05:49,039 --> 00:05:51,120
updated the thread so i think we're good

133
00:05:51,120 --> 00:05:54,240
to proceed with that one but to the all

134
00:05:54,240 --> 00:05:55,919
authors please if you have an ipr

135
00:05:55,919 --> 00:05:58,400
disclosure it will really appreciate if

136
00:05:58,400 --> 00:05:59,759
it's done

137
00:05:59,759 --> 00:06:01,919
before the document is out of the

138
00:06:01,919 --> 00:06:03,600
working group

139
00:06:03,600 --> 00:06:07,280
so i think that all the chair slides any

140
00:06:07,280 --> 00:06:09,840
like last minute comments to the agenda

141
00:06:09,840 --> 00:06:12,080
or

142
00:06:12,319 --> 00:06:15,280
nothing great so i guess our first

143
00:06:15,280 --> 00:06:17,120
presentation today

144
00:06:17,120 --> 00:06:22,160
is suresh who is the segment identifiers

145
00:06:22,160 --> 00:06:25,520
i am going to

146
00:06:26,880 --> 00:06:29,880
share

147
00:06:30,120 --> 00:06:33,920
[Music]

148
00:06:38,160 --> 00:06:41,600
thank you jen next slide yeah thank you

149
00:06:41,600 --> 00:06:42,400
it's

150
00:06:42,400 --> 00:06:45,600
my really my only slide really but uh

151
00:06:45,600 --> 00:06:48,080
i'll try to keep this very short so this

152
00:06:48,080 --> 00:06:50,240
draft has been adopted like at the last

153
00:06:50,240 --> 00:06:51,840
itf meeting and confirmed on the list

154
00:06:51,840 --> 00:06:53,039
after

155
00:06:53,039 --> 00:06:55,120
and there were a bunch of comments so

156
00:06:55,120 --> 00:06:57,280
some of them just editorial there's also

157
00:06:57,280 --> 00:06:59,280
some substantive comments

158
00:06:59,280 --> 00:07:01,199
and they've all been

159
00:07:01,199 --> 00:07:03,919
addressed in the zero one draft

160
00:07:03,919 --> 00:07:06,400
so one key thing that came up was like a

161
00:07:06,400 --> 00:07:08,240
slight worrying confusion in the iona

162
00:07:08,240 --> 00:07:10,400
consideration section so i had used the

163
00:07:10,400 --> 00:07:11,280
word

164
00:07:11,280 --> 00:07:13,919
global unicast right and people

165
00:07:13,919 --> 00:07:17,039
kind of some of the like rirs were like

166
00:07:17,039 --> 00:07:19,280
bit confused that this is going into

167
00:07:19,280 --> 00:07:21,120
territory that the rars like kind of

168
00:07:21,120 --> 00:07:23,360
like allocate from so kind of reverted

169
00:07:23,360 --> 00:07:24,720
the whole thing to say this is not

170
00:07:24,720 --> 00:07:25,840
coming from

171
00:07:25,840 --> 00:07:28,080
the rir allocatable space but instead it

172
00:07:28,080 --> 00:07:29,840
comes from the ietf resource space right

173
00:07:29,840 --> 00:07:31,919
like so that's like one major thing and

174
00:07:31,919 --> 00:07:33,919
thanks jen judge michaelson and ted who

175
00:07:33,919 --> 00:07:34,880
kind of

176
00:07:34,880 --> 00:07:36,479
i tried on this so i can come up with

177
00:07:36,479 --> 00:07:38,240
the like right change there it's very

178
00:07:38,240 --> 00:07:39,840
small change but it's very important

179
00:07:39,840 --> 00:07:41,440
because it clarifies

180
00:07:41,440 --> 00:07:42,800
where the space comes out of and then we

181
00:07:42,800 --> 00:07:45,440
can define the properties of the space

182
00:07:45,440 --> 00:07:47,680
and another thing is like from darren's

183
00:07:47,680 --> 00:07:49,520
because i was talking about stuff

184
00:07:49,520 --> 00:07:52,879
changing on the fly right on in transit

185
00:07:52,879 --> 00:07:55,039
and one key

186
00:07:55,039 --> 00:07:57,199
thing was like it only changes at what

187
00:07:57,199 --> 00:07:58,479
could be a segment endpoint so it

188
00:07:58,479 --> 00:07:59,759
doesn't change

189
00:07:59,759 --> 00:08:01,599
uh really nearly at any transit point so

190
00:08:01,599 --> 00:08:03,360
i think that's something it has a little

191
00:08:03,360 --> 00:08:04,879
bit of loose wording on my part and

192
00:08:04,879 --> 00:08:06,560
darren pointed that out so that's fixed

193
00:08:06,560 --> 00:08:07,759
as well

194
00:08:07,759 --> 00:08:09,680
and the last thing is like either you

195
00:08:09,680 --> 00:08:11,039
can think of it as one point or two

196
00:08:11,039 --> 00:08:13,840
points but it came from brian right like

197
00:08:13,840 --> 00:08:15,840
so and this whole thing started like

198
00:08:15,840 --> 00:08:18,800
thanks to eric and joel it started with

199
00:08:18,800 --> 00:08:21,280
like a request coming from spring to six

200
00:08:21,280 --> 00:08:23,840
man right saying hey write up like this

201
00:08:23,840 --> 00:08:26,160
thing and so we've done that and as a

202
00:08:26,160 --> 00:08:28,080
result of writing this stuff up there's

203
00:08:28,080 --> 00:08:29,120
some

204
00:08:29,120 --> 00:08:30,879
actions that need to be performed in

205
00:08:30,879 --> 00:08:32,640
spring at some future point

206
00:08:32,640 --> 00:08:34,320
so we need to kind of close the loop on

207
00:08:34,320 --> 00:08:36,320
this tell spring that hey you asked us

208
00:08:36,320 --> 00:08:37,519
to do this

209
00:08:37,519 --> 00:08:39,440
we've done it and by the way there's

210
00:08:39,440 --> 00:08:41,200
also other stuff for you to do right as

211
00:08:41,200 --> 00:08:43,120
a result of this but that's something we

212
00:08:43,120 --> 00:08:44,399
probably need to craft an official

213
00:08:44,399 --> 00:08:46,640
message like jen bob and oolani comes

214
00:08:46,640 --> 00:08:47,360
back

215
00:08:47,360 --> 00:08:49,680
to get that message out to spring to

216
00:08:49,680 --> 00:08:51,839
kind of close the loop on this

217
00:08:51,839 --> 00:08:52,800
um

218
00:08:52,800 --> 00:08:54,399
that's pretty much what's in there so

219
00:08:54,399 --> 00:08:57,200
there's like no pending comments on this

220
00:08:57,200 --> 00:08:59,680
so if you have any comments like please

221
00:08:59,680 --> 00:09:01,600
feel free to bring them up here

222
00:09:01,600 --> 00:09:03,519
or on the mailing list after

223
00:09:03,519 --> 00:09:05,839
and i'll be like very very quick to kind

224
00:09:05,839 --> 00:09:08,240
of make the changes that is required and

225
00:09:08,240 --> 00:09:09,920
let's go forward with it so next slide

226
00:09:09,920 --> 00:09:12,079
jen

227
00:09:14,880 --> 00:09:17,120
yep so um

228
00:09:17,120 --> 00:09:18,880
if like you know something

229
00:09:18,880 --> 00:09:20,560
um is going to hold unless something

230
00:09:20,560 --> 00:09:22,080
holds it up like it'll be i think the

231
00:09:22,080 --> 00:09:23,600
document is ready for working with last

232
00:09:23,600 --> 00:09:26,000
call so i would officially request the

233
00:09:26,000 --> 00:09:27,279
chairs to

234
00:09:27,279 --> 00:09:29,279
um go for like working group last call

235
00:09:29,279 --> 00:09:31,519
on this pending some hold down timer

236
00:09:31,519 --> 00:09:32,880
after the meeting

237
00:09:32,880 --> 00:09:34,480
and also to

238
00:09:34,480 --> 00:09:36,240
um write up something towards the spring

239
00:09:36,240 --> 00:09:38,160
working group i know joel is here

240
00:09:38,160 --> 00:09:40,080
and jim is here as well so like but to

241
00:09:40,080 --> 00:09:42,000
write something up officially towards

242
00:09:42,000 --> 00:09:44,000
spring to say like hey we've done this

243
00:09:44,000 --> 00:09:45,760
please look at it and they can follow

244
00:09:45,760 --> 00:09:47,760
the mail to the group and go from there

245
00:09:47,760 --> 00:09:49,519
thank you

246
00:09:49,519 --> 00:09:51,839
yeah any comments

247
00:09:51,839 --> 00:09:54,640
questions

248
00:09:57,680 --> 00:10:02,120
silence sounds like consensus

249
00:10:11,360 --> 00:10:15,120
the case of the battery dead mic

250
00:10:16,160 --> 00:10:19,360
it was just off yeah uh airplane so i

251
00:10:19,360 --> 00:10:22,160
guess i was gonna try to channel andrew

252
00:10:22,160 --> 00:10:24,240
who's not here and ask about whether or

253
00:10:24,240 --> 00:10:25,440
not the

254
00:10:25,440 --> 00:10:27,040
uh what people think about the

255
00:10:27,040 --> 00:10:29,680
slash 16 being a must not

256
00:10:29,680 --> 00:10:33,319
in the in the dfc

257
00:10:33,760 --> 00:10:34,480
uh

258
00:10:34,480 --> 00:10:35,600
okay so

259
00:10:35,600 --> 00:10:37,519
if you look at the draft today right so

260
00:10:37,519 --> 00:10:39,360
the idea is like so one of the actions

261
00:10:39,360 --> 00:10:41,279
that's for spring so if you can go back

262
00:10:41,279 --> 00:10:43,680
to the previous slide right is to

263
00:10:43,680 --> 00:10:45,360
do the um

264
00:10:45,360 --> 00:10:47,200
operational guidelines for the 16 as

265
00:10:47,200 --> 00:10:48,959
well right like that like spring needs

266
00:10:48,959 --> 00:10:50,240
to develop so

267
00:10:50,240 --> 00:10:51,519
the idea would be

268
00:10:51,519 --> 00:10:53,120
some operators who are deploying this

269
00:10:53,120 --> 00:10:55,120
would write that up and i'm perfectly

270
00:10:55,120 --> 00:10:57,040
fine with that right but that's i think

271
00:10:57,040 --> 00:10:58,160
um

272
00:10:58,160 --> 00:10:59,760
that would be a fine thing to write

273
00:10:59,760 --> 00:11:00,959
somewhere right

274
00:11:00,959 --> 00:11:02,240
does that belong in this document i

275
00:11:02,240 --> 00:11:03,920
don't know right like that's um i think

276
00:11:03,920 --> 00:11:05,440
it's open to discussion so if you want

277
00:11:05,440 --> 00:11:08,240
to put that in here that's fine and if

278
00:11:08,240 --> 00:11:09,440
it's going to go into an operational

279
00:11:09,440 --> 00:11:11,279
guideline document that's fine too right

280
00:11:11,279 --> 00:11:13,519
because the goal is for somebody to be

281
00:11:13,519 --> 00:11:16,320
able to filter it right like so um and

282
00:11:16,320 --> 00:11:17,440
if you need like a stronger

283
00:11:17,440 --> 00:11:19,279
recommendation somewhere that's fine

284
00:11:19,279 --> 00:11:22,000
and like yeah so it's andros like puts

285
00:11:22,000 --> 00:11:23,519
that up i think we can certainly work on

286
00:11:23,519 --> 00:11:25,760
where we need to put it in so maybe we

287
00:11:25,760 --> 00:11:27,360
just put that in the communication with

288
00:11:27,360 --> 00:11:30,800
spring okay yeah thanks

289
00:11:30,959 --> 00:11:33,760
okay so thank you fresh i think we'll

290
00:11:33,760 --> 00:11:36,160
issue the last call

291
00:11:36,160 --> 00:11:38,320
after this meeting

292
00:11:38,320 --> 00:11:40,399
so sometime probably early next week

293
00:11:40,399 --> 00:11:42,880
maybe this week yeah and yeah well

294
00:11:42,880 --> 00:11:44,720
not this week like i know you're like

295
00:11:44,720 --> 00:11:47,440
stressed so next week is good

296
00:11:47,440 --> 00:11:49,040
thank you thanks john thanks

297
00:11:49,040 --> 00:11:51,040
thanks

298
00:11:51,040 --> 00:11:52,000
okay

299
00:11:52,000 --> 00:11:56,000
and the next presentation is hope i hope

300
00:11:56,000 --> 00:11:58,720
processing procedures

301
00:11:58,720 --> 00:12:01,360
i'm i'm going to share the slides so you

302
00:12:01,360 --> 00:12:04,639
want me to present

303
00:12:07,120 --> 00:12:09,200
hi um

304
00:12:09,200 --> 00:12:10,480
i get up

305
00:12:10,480 --> 00:12:12,480
here we go

306
00:12:12,480 --> 00:12:15,480
what

307
00:12:24,880 --> 00:12:27,880
okay

308
00:12:36,390 --> 00:12:40,010
[Music]

309
00:12:45,040 --> 00:12:45,839
hi

310
00:12:45,839 --> 00:12:48,959
so um this talk is traditionally done by

311
00:12:48,959 --> 00:12:53,040
bob and i as we move between a square on

312
00:12:53,040 --> 00:12:55,040
the ground and the itf both was the

313
00:12:55,040 --> 00:12:56,560
remote this time

314
00:12:56,560 --> 00:12:59,440
so we'll do our best to be brief but

315
00:12:59,440 --> 00:13:01,600
we'd like to tell you about the updates

316
00:13:01,600 --> 00:13:03,600
we've done to the hot buy options

317
00:13:03,600 --> 00:13:07,240
processing procedures

318
00:13:07,440 --> 00:13:11,200
bob will chip in as he needs to

319
00:13:11,920 --> 00:13:14,480
so um

320
00:13:14,480 --> 00:13:16,160
the previous version was working group

321
00:13:16,160 --> 00:13:18,560
zero zero and we were working our way

322
00:13:18,560 --> 00:13:21,600
through a large number of adoption

323
00:13:21,600 --> 00:13:25,279
questions comments and other feedback

324
00:13:25,279 --> 00:13:27,519
and we made a number of updates that are

325
00:13:27,519 --> 00:13:30,720
present in the zero one draft

326
00:13:30,720 --> 00:13:33,360
we added text to section one

327
00:13:33,360 --> 00:13:35,760
to make the focus clear

328
00:13:35,760 --> 00:13:37,360
we're setting a minimum bound in this

329
00:13:37,360 --> 00:13:39,760
document for what we hope to see

330
00:13:39,760 --> 00:13:42,320
actually deployed in equipment what we

331
00:13:42,320 --> 00:13:44,560
hope to see the end systems being able

332
00:13:44,560 --> 00:13:46,240
to use across

333
00:13:46,240 --> 00:13:48,560
an ipv6 path

334
00:13:48,560 --> 00:13:50,560
and this doesn't

335
00:13:50,560 --> 00:13:52,800
necessarily control anything about what

336
00:13:52,800 --> 00:13:56,240
you might do more than the minimum

337
00:13:56,240 --> 00:14:00,399
we added text to section four

338
00:14:00,560 --> 00:14:02,240
we said that some options will be

339
00:14:02,240 --> 00:14:04,959
supported internet wide and others might

340
00:14:04,959 --> 00:14:08,000
not be in limited domains

341
00:14:08,000 --> 00:14:10,000
we added some references

342
00:14:10,000 --> 00:14:12,800
and clarified the h.200 comments fixed

343
00:14:12,800 --> 00:14:14,079
the typo

344
00:14:14,079 --> 00:14:16,720
and then importantly change the

345
00:14:16,720 --> 00:14:18,320
should not

346
00:14:18,320 --> 00:14:20,079
from a must not

347
00:14:20,079 --> 00:14:23,040
and if you really cared about issue 21

348
00:14:23,040 --> 00:14:25,040
you will realize that that is what

349
00:14:25,040 --> 00:14:27,120
people were asking for where we did the

350
00:14:27,120 --> 00:14:28,880
working group adoption

351
00:14:28,880 --> 00:14:31,680
so i think

352
00:14:31,680 --> 00:14:33,600
that that is the summary of what we

353
00:14:33,600 --> 00:14:36,000
changed is that okay bob

354
00:14:36,000 --> 00:14:38,399
uh yes

355
00:14:38,399 --> 00:14:40,160
so i guess the other thing we should say

356
00:14:40,160 --> 00:14:42,880
is we have an issue tracker it's the

357
00:14:42,880 --> 00:14:44,720
six six-man tracker

358
00:14:44,720 --> 00:14:46,959
and we're trying to recall issues for

359
00:14:46,959 --> 00:14:48,480
this draft

360
00:14:48,480 --> 00:14:50,480
in that issue tracker

361
00:14:50,480 --> 00:14:52,959
there were 21 issues when we started

362
00:14:52,959 --> 00:14:55,120
this from the adoption call which is a

363
00:14:55,120 --> 00:14:59,279
very healthy group of issues to address

364
00:14:59,279 --> 00:15:01,360
there are currently nine open issues so

365
00:15:01,360 --> 00:15:04,639
i'll talk through those

366
00:15:05,040 --> 00:15:07,199
the nine open issues actually relate to

367
00:15:07,199 --> 00:15:10,000
fewer than nine points

368
00:15:10,000 --> 00:15:12,560
and this is our summary

369
00:15:12,560 --> 00:15:15,519
the the first one is what status will

370
00:15:15,519 --> 00:15:17,279
this

371
00:15:17,279 --> 00:15:19,199
internet draft have when it's published

372
00:15:19,199 --> 00:15:21,680
as an rfc

373
00:15:21,680 --> 00:15:22,480
i

374
00:15:22,480 --> 00:15:24,160
probably was difficult to judge that at

375
00:15:24,160 --> 00:15:26,720
the beginning now it's maturing you

376
00:15:26,720 --> 00:15:28,639
might want to try and help us figure

377
00:15:28,639 --> 00:15:29,680
this out

378
00:15:29,680 --> 00:15:31,839
should it be a bcp should it do

379
00:15:31,839 --> 00:15:33,360
requirements

380
00:15:33,360 --> 00:15:36,240
or simply be informational

381
00:15:36,240 --> 00:15:38,240
might be good as a bcp perhaps i don't

382
00:15:38,240 --> 00:15:40,320
know and please tell us because we

383
00:15:40,320 --> 00:15:44,000
really would like to know what is best

384
00:15:44,639 --> 00:15:47,839
um issues 9 and 15 relate to router

385
00:15:47,839 --> 00:15:50,560
alert or the router alert option

386
00:15:50,560 --> 00:15:52,560
which was mentioned a number of times it

387
00:15:52,560 --> 00:15:54,639
is a hotbar hop option

388
00:15:54,639 --> 00:15:56,880
and we're expecting this to be titled by

389
00:15:56,880 --> 00:15:59,199
another it's that draft

390
00:15:59,199 --> 00:16:01,199
in six months so

391
00:16:01,199 --> 00:16:03,199
hopefully we can clear this issue by

392
00:16:03,199 --> 00:16:04,800
saying another draft we'll talk about

393
00:16:04,800 --> 00:16:07,040
this

394
00:16:07,519 --> 00:16:09,680
now the most exciting thing of all what

395
00:16:09,680 --> 00:16:12,480
do we call it when a router processes

396
00:16:12,480 --> 00:16:13,680
a

397
00:16:13,680 --> 00:16:15,360
hot bypop option

398
00:16:15,360 --> 00:16:17,759
as part of its forwarding

399
00:16:17,759 --> 00:16:20,000
it could be processed maybe in software

400
00:16:20,000 --> 00:16:22,560
it could be processed in an asic

401
00:16:22,560 --> 00:16:24,720
it could be processed in some offload or

402
00:16:24,720 --> 00:16:26,720
machine engine

403
00:16:26,720 --> 00:16:28,880
we previously called this slow path and

404
00:16:28,880 --> 00:16:30,399
fast path

405
00:16:30,399 --> 00:16:32,240
people hated that because they said it

406
00:16:32,240 --> 00:16:34,560
referred to a router design rather than

407
00:16:34,560 --> 00:16:38,240
a a way of processing so we now talk

408
00:16:38,240 --> 00:16:40,399
about processing extension headers

409
00:16:40,399 --> 00:16:42,880
particularly hot by hop headers at full

410
00:16:42,880 --> 00:16:45,600
processing speed

411
00:16:45,600 --> 00:16:46,959
we think that

412
00:16:46,959 --> 00:16:49,440
resolves the issue of talking about slow

413
00:16:49,440 --> 00:16:52,079
path and fast path

414
00:16:52,079 --> 00:16:54,160
but to believe we solved it you'd have

415
00:16:54,160 --> 00:16:56,000
to read the text and tell us that you

416
00:16:56,000 --> 00:16:58,959
like what we've written

417
00:16:59,600 --> 00:17:02,880
um i'll talk briefly about number eight

418
00:17:02,880 --> 00:17:04,880
which is lack of graceful handling of

419
00:17:04,880 --> 00:17:07,359
malformed extension headers

420
00:17:07,359 --> 00:17:09,760
we think this is a security issue we'd

421
00:17:09,760 --> 00:17:11,520
like to add some text and security

422
00:17:11,520 --> 00:17:13,439
considerations for this

423
00:17:13,439 --> 00:17:15,599
if you care about malformed extension

424
00:17:15,599 --> 00:17:18,799
headers please help us write that text

425
00:17:18,799 --> 00:17:20,480
we think it's more or less the same as

426
00:17:20,480 --> 00:17:23,039
any other malformed header

427
00:17:23,039 --> 00:17:26,079
and if you write bad router chord then

428
00:17:26,079 --> 00:17:27,679
your rotators will either crash or

429
00:17:27,679 --> 00:17:29,840
behave badly if you write good writer

430
00:17:29,840 --> 00:17:32,000
chord and protect the code that you

431
00:17:32,000 --> 00:17:34,000
don't have a problem

432
00:17:34,000 --> 00:17:35,679
doesn't seem like something new for hot

433
00:17:35,679 --> 00:17:38,480
by hop options

434
00:17:38,960 --> 00:17:43,200
um rsc 9098 talks about processing the

435
00:17:43,200 --> 00:17:45,760
payloads of ipv6 packets as you forward

436
00:17:45,760 --> 00:17:47,280
them

437
00:17:47,280 --> 00:17:49,840
and again if you're interested in this

438
00:17:49,840 --> 00:17:51,679
topic and think there's good text on

439
00:17:51,679 --> 00:17:53,679
that please tell us

440
00:17:53,679 --> 00:17:55,600
doesn't particularly relate to hotbackup

441
00:17:55,600 --> 00:17:56,880
options

442
00:17:56,880 --> 00:17:58,320
and it may perhaps be something to

443
00:17:58,320 --> 00:18:00,559
mention in security considerations since

444
00:18:00,559 --> 00:18:02,480
this is commonly done by firewalls and

445
00:18:02,480 --> 00:18:05,360
other middle boxes

446
00:18:06,000 --> 00:18:08,000
uh we don't have any asic experience

447
00:18:08,000 --> 00:18:09,840
well i don't i don't think bob has

448
00:18:09,840 --> 00:18:12,559
either so if you know about what asics

449
00:18:12,559 --> 00:18:14,960
are actually deployed in new equipment

450
00:18:14,960 --> 00:18:17,440
and want to talk to us please do we

451
00:18:17,440 --> 00:18:19,200
would love to hear you we will be

452
00:18:19,200 --> 00:18:21,200
influenced by people who tell us that

453
00:18:21,200 --> 00:18:23,039
they are deploying things at scale that

454
00:18:23,039 --> 00:18:26,240
do things that need things to happen so

455
00:18:26,240 --> 00:18:28,400
talk to us please if you're thinking

456
00:18:28,400 --> 00:18:30,400
about having extension header support

457
00:18:30,400 --> 00:18:32,799
for hot options we'd love to hear from

458
00:18:32,799 --> 00:18:34,640
you

459
00:18:34,640 --> 00:18:36,240
and the last one was a comment i don't

460
00:18:36,240 --> 00:18:37,840
know what to do with so we will leave

461
00:18:37,840 --> 00:18:40,240
that on the screen as well as issue

462
00:18:40,240 --> 00:18:43,039
number two

463
00:18:43,039 --> 00:18:44,400
so

464
00:18:44,400 --> 00:18:46,400
that was my quick tour

465
00:18:46,400 --> 00:18:48,480
and we really do want people to read the

466
00:18:48,480 --> 00:18:50,480
document so

467
00:18:50,480 --> 00:18:52,400
the first thing we'd like you to look at

468
00:18:52,400 --> 00:18:54,400
is whether we have eliminated the

469
00:18:54,400 --> 00:18:57,360
definition of fast path and slow path i

470
00:18:57,360 --> 00:18:59,360
replaced it by something useful talking

471
00:18:59,360 --> 00:19:02,000
about full forwarding rate

472
00:19:02,000 --> 00:19:04,240
please read the draft we think this

473
00:19:04,240 --> 00:19:06,080
issue is solved we'd love to hear

474
00:19:06,080 --> 00:19:07,919
people's feedback about whether we've

475
00:19:07,919 --> 00:19:11,280
got good language here

476
00:19:11,280 --> 00:19:14,879
or suggestions of something better

477
00:19:16,480 --> 00:19:18,640
i talked about this i think it's a

478
00:19:18,640 --> 00:19:21,200
security consideration if you agree

479
00:19:21,200 --> 00:19:22,880
please tell me if you disagree please

480
00:19:22,880 --> 00:19:25,440
tell us bob

481
00:19:25,840 --> 00:19:28,720
we talked about this

482
00:19:28,720 --> 00:19:30,240
we don't see this as a particular issue

483
00:19:30,240 --> 00:19:33,200
if you think it is please talk to us

484
00:19:33,200 --> 00:19:36,160
so what are the next steps well

485
00:19:36,160 --> 00:19:37,840
if we've actually resolved the issues

486
00:19:37,840 --> 00:19:40,480
we've talked about then our document is

487
00:19:40,480 --> 00:19:42,960
either ready to decide it's standard

488
00:19:42,960 --> 00:19:45,440
status and publish as a buyer working

489
00:19:45,440 --> 00:19:47,600
group last call or it's time for people

490
00:19:47,600 --> 00:19:49,200
to tell us that there are more issues

491
00:19:49,200 --> 00:19:50,160
with it

492
00:19:50,160 --> 00:19:51,919
either way we're looking for reviews of

493
00:19:51,919 --> 00:19:55,039
our document to revise our id

494
00:19:55,039 --> 00:19:57,280
and i think that's our slide deck any

495
00:19:57,280 --> 00:20:00,840
comments or questions

496
00:20:13,280 --> 00:20:15,600
um i haven't looked at the document for

497
00:20:15,600 --> 00:20:18,080
the last something you know months but

498
00:20:18,080 --> 00:20:20,880
if you need a review i can volunteer to

499
00:20:20,880 --> 00:20:22,880
do a you know another review of the

500
00:20:22,880 --> 00:20:24,960
document

501
00:20:24,960 --> 00:20:27,200
well if you anyone offers to review that

502
00:20:27,200 --> 00:20:29,200
would be great and fernando you asked

503
00:20:29,200 --> 00:20:30,880
some of the questions i've just put up

504
00:20:30,880 --> 00:20:32,960
so yes please give us feedback on

505
00:20:32,960 --> 00:20:34,559
whether we're making progress and

506
00:20:34,559 --> 00:20:36,880
suggest more text for the pieces we need

507
00:20:36,880 --> 00:20:38,799
to solve wonderful

508
00:20:38,799 --> 00:20:41,679
yeah i think um i would add particularly

509
00:20:41,679 --> 00:20:43,679
you know if you see an issue in this

510
00:20:43,679 --> 00:20:46,240
document please suggest text how to

511
00:20:46,240 --> 00:20:50,159
resolve it that's very helpful to us

512
00:20:53,600 --> 00:20:55,919
okay so yeah

513
00:20:55,919 --> 00:20:57,120
please

514
00:20:57,120 --> 00:20:59,840
read the draft i think we

515
00:20:59,840 --> 00:21:01,919
should have some discussion on the list

516
00:21:01,919 --> 00:21:02,799
and

517
00:21:02,799 --> 00:21:05,120
yeah based on that then

518
00:21:05,120 --> 00:21:07,200
decide after closing those issues here

519
00:21:07,200 --> 00:21:08,000
we can

520
00:21:08,000 --> 00:21:11,039
discuss the last call so any more last

521
00:21:11,039 --> 00:21:14,559
minute comments questions

522
00:21:14,559 --> 00:21:17,120
ah we're doing well today

523
00:21:17,120 --> 00:21:18,559
hello

524
00:21:18,559 --> 00:21:21,200
thank you okay

525
00:21:22,960 --> 00:21:25,760
thank you gori okay the next

526
00:21:25,760 --> 00:21:30,280
presentation is fernando

527
00:21:30,880 --> 00:21:33,039
improvement to stateless of the

528
00:21:33,039 --> 00:21:34,960
configuration

529
00:21:34,960 --> 00:21:36,480
okay

530
00:21:36,480 --> 00:21:39,039
can you show the slide from there

531
00:21:39,039 --> 00:21:41,360
uh okay yeah if you want me to yeah sure

532
00:21:41,360 --> 00:21:45,799
i'll share the slides just a second

533
00:21:48,960 --> 00:21:51,919
okay so hi all this is uh fernando bond

534
00:21:51,919 --> 00:21:53,760
i'll be doing the presentation on the

535
00:21:53,760 --> 00:21:56,159
document improving the robustness of

536
00:21:56,159 --> 00:21:58,080
stateless address auto configuration to

537
00:21:58,080 --> 00:22:00,080
flash renumbering events

538
00:22:00,080 --> 00:22:00,960
uh

539
00:22:00,960 --> 00:22:03,840
next slide please

540
00:22:04,880 --> 00:22:07,360
so super you know short uh background

541
00:22:07,360 --> 00:22:09,120
essentially this is a topic that we have

542
00:22:09,120 --> 00:22:10,960
been working on for you know a couple of

543
00:22:10,960 --> 00:22:13,840
years now um

544
00:22:13,840 --> 00:22:15,840
there are a few documents that some of

545
00:22:15,840 --> 00:22:18,080
these work was has been carried out in

546
00:22:18,080 --> 00:22:21,039
you know in the b6 group so we have rfc

547
00:22:21,039 --> 00:22:23,120
8978

548
00:22:23,120 --> 00:22:25,280
uh which is essentially the problem

549
00:22:25,280 --> 00:22:27,760
statement document

550
00:22:27,760 --> 00:22:31,919
then we also produce rfc 1996

551
00:22:31,919 --> 00:22:34,080
which is recommendations for customer

552
00:22:34,080 --> 00:22:35,840
edge routers

553
00:22:35,840 --> 00:22:38,320
and finally this is you know the last

554
00:22:38,320 --> 00:22:40,320
remaining item this document that i'll

555
00:22:40,320 --> 00:22:42,400
be presenting today which is protocol

556
00:22:42,400 --> 00:22:44,640
improvements to actually you know

557
00:22:44,640 --> 00:22:47,120
improve the the handling of uh flash

558
00:22:47,120 --> 00:22:48,720
renumbering events

559
00:22:48,720 --> 00:22:51,679
uh next slide

560
00:22:52,880 --> 00:22:54,400
okay so

561
00:22:54,400 --> 00:22:55,200
uh

562
00:22:55,200 --> 00:22:57,120
a few comments about the progress on on

563
00:22:57,120 --> 00:22:59,120
this idea so essentially what we have

564
00:22:59,120 --> 00:23:01,760
been doing is uh you know incorporate

565
00:23:01,760 --> 00:23:03,840
the contents of the uh individual

566
00:23:03,840 --> 00:23:05,039
submission

567
00:23:05,039 --> 00:23:08,320
uh first comment is that i recently last

568
00:23:08,320 --> 00:23:10,720
month or so called the six month working

569
00:23:10,720 --> 00:23:13,280
group about two specific items

570
00:23:13,280 --> 00:23:15,760
um we have received some comments on

571
00:23:15,760 --> 00:23:18,240
those but if for some reason you have

572
00:23:18,240 --> 00:23:20,080
missed them please you know feel free i

573
00:23:20,080 --> 00:23:22,000
will send an email to the mailing list

574
00:23:22,000 --> 00:23:24,320
to you know to highlight the the threads

575
00:23:24,320 --> 00:23:26,000
so if you have comments on those two

576
00:23:26,000 --> 00:23:28,880
topics uh please do send your comments

577
00:23:28,880 --> 00:23:31,520
um so that we can address them uh you

578
00:23:31,520 --> 00:23:33,840
know when we produce the the resultant

579
00:23:33,840 --> 00:23:35,520
text for the document

580
00:23:35,520 --> 00:23:38,799
and there was only a single um

581
00:23:38,799 --> 00:23:42,159
you know topic or issue to to address

582
00:23:42,159 --> 00:23:44,480
which was the uh that of incorporating

583
00:23:44,480 --> 00:23:48,159
the algorithm to uh with heuristics to

584
00:23:48,159 --> 00:23:50,799
deprecate stale information

585
00:23:50,799 --> 00:23:51,679
uh

586
00:23:51,679 --> 00:23:55,279
what we have done uh is to produce a

587
00:23:55,279 --> 00:23:59,279
i would say a simpler and more robust uh

588
00:23:59,279 --> 00:24:01,919
algorithm uh from what we had in the

589
00:24:01,919 --> 00:24:04,480
individual submission and you know the

590
00:24:04,480 --> 00:24:06,400
goal of this presentation is essentially

591
00:24:06,400 --> 00:24:07,200
to

592
00:24:07,200 --> 00:24:09,279
uh to describe the you know the

593
00:24:09,279 --> 00:24:12,159
algorithm uh you know from a conceptual

594
00:24:12,159 --> 00:24:14,240
level and you know afterwards i'll be

595
00:24:14,240 --> 00:24:16,320
sending the draft text to the mailing

596
00:24:16,320 --> 00:24:18,640
list for you specific review of of the

597
00:24:18,640 --> 00:24:20,400
text okay

598
00:24:20,400 --> 00:24:23,200
next slide please

599
00:24:24,000 --> 00:24:25,919
so what's the idea and actually this

600
00:24:25,919 --> 00:24:28,400
like this slide makes it look like more

601
00:24:28,400 --> 00:24:30,320
complex than it actually so what's the

602
00:24:30,320 --> 00:24:33,600
basic idea of this algorithm the the

603
00:24:33,600 --> 00:24:36,080
improved algorithm that we have produced

604
00:24:36,080 --> 00:24:38,400
so the idea is super simple

605
00:24:38,400 --> 00:24:43,200
um if your host receives an array that

606
00:24:43,200 --> 00:24:45,760
uh contains missing information so it's

607
00:24:45,760 --> 00:24:47,840
lacking information that was received

608
00:24:47,840 --> 00:24:51,679
beforehand what we want to do is to uh

609
00:24:51,679 --> 00:24:52,720
pull

610
00:24:52,720 --> 00:24:53,520
the

611
00:24:53,520 --> 00:24:56,240
corresponding router with a unicast

612
00:24:56,240 --> 00:24:58,720
router solicitation to double check if

613
00:24:58,720 --> 00:25:01,600
the information is there or not okay

614
00:25:01,600 --> 00:25:03,760
then based on the result of that we can

615
00:25:03,760 --> 00:25:05,360
decide whether you know yeah the

616
00:25:05,360 --> 00:25:07,120
information was there and we can you

617
00:25:07,120 --> 00:25:09,360
know keep the information or actually no

618
00:25:09,360 --> 00:25:11,600
the information has become stale so we

619
00:25:11,600 --> 00:25:14,640
should you know get rid of it um this

620
00:25:14,640 --> 00:25:16,320
slide just makes the you know the

621
00:25:16,320 --> 00:25:19,200
process or or the algorithm more uh it

622
00:25:19,200 --> 00:25:21,840
just addresses details so we start at

623
00:25:21,840 --> 00:25:25,120
the beginning when an array is received

624
00:25:25,120 --> 00:25:26,480
okay

625
00:25:26,480 --> 00:25:28,400
we are considering arrays that are

626
00:25:28,400 --> 00:25:30,559
missing information that have been

627
00:25:30,559 --> 00:25:32,720
previously received from this router

628
00:25:32,720 --> 00:25:35,679
okay so if we have one of those cases

629
00:25:35,679 --> 00:25:37,440
then we will wait for some time this

630
00:25:37,440 --> 00:25:39,120
would be like a couple of seconds

631
00:25:39,120 --> 00:25:41,279
because it could be in theory doesn't

632
00:25:41,279 --> 00:25:42,960
happen in practice but could happen in

633
00:25:42,960 --> 00:25:45,760
theory that the router is splitting the

634
00:25:45,760 --> 00:25:48,480
um slack information into multiple

635
00:25:48,480 --> 00:25:50,320
packets so we will wait for some time

636
00:25:50,320 --> 00:25:51,279
here

637
00:25:51,279 --> 00:25:54,240
then if that information is not hasn't

638
00:25:54,240 --> 00:25:56,400
been received what we do is just wait a

639
00:25:56,400 --> 00:25:58,320
random small random period of time

640
00:25:58,320 --> 00:26:00,799
that's just to avoid a lot of host on

641
00:26:00,799 --> 00:26:02,640
the same network to pull the router at

642
00:26:02,640 --> 00:26:05,120
the same time that's the the random way

643
00:26:05,120 --> 00:26:06,960
that we have there and then what we do

644
00:26:06,960 --> 00:26:09,679
is essentially just pull the local

645
00:26:09,679 --> 00:26:10,400
router

646
00:26:10,400 --> 00:26:13,039
with a unicast router solicitation

647
00:26:13,039 --> 00:26:14,960
what we do what we do by default in the

648
00:26:14,960 --> 00:26:17,760
algorithm is just pull once but it's you

649
00:26:17,760 --> 00:26:19,679
know up to the implementation you could

650
00:26:19,679 --> 00:26:22,159
you know pull pull multiple times send

651
00:26:22,159 --> 00:26:24,159
an arrays you know if you don't get what

652
00:26:24,159 --> 00:26:26,400
you want you pull again and so on

653
00:26:26,400 --> 00:26:29,440
if when we get to the arrays rs

654
00:26:29,440 --> 00:26:32,159
rs proof timeout here you know by the

655
00:26:32,159 --> 00:26:34,159
end of the yellow graphic

656
00:26:34,159 --> 00:26:36,640
we haven't received the missing

657
00:26:36,640 --> 00:26:38,640
information from the router

658
00:26:38,640 --> 00:26:40,720
so that means that the information has

659
00:26:40,720 --> 00:26:42,880
become stale okay and what we do is

660
00:26:42,880 --> 00:26:48,000
essentially uh remove that uh stale data

661
00:26:48,000 --> 00:26:50,240
so in the next slides what i have is

662
00:26:50,240 --> 00:26:52,720
essentially like uh you know the same

663
00:26:52,720 --> 00:26:55,279
graphic but an analysis of your typical

664
00:26:55,279 --> 00:26:58,000
scenarios so next slide please

665
00:26:58,000 --> 00:27:00,640
so this is the most usual case you know

666
00:27:00,640 --> 00:27:03,279
nothing bad is going on so we just

667
00:27:03,279 --> 00:27:05,440
receive an array with all the same

668
00:27:05,440 --> 00:27:08,000
information that we had received before

669
00:27:08,000 --> 00:27:10,000
okay everything's okay there's nothing

670
00:27:10,000 --> 00:27:12,159
to do there's no missing information

671
00:27:12,159 --> 00:27:14,240
nothing to trigger there all information

672
00:27:14,240 --> 00:27:15,279
is fresh

673
00:27:15,279 --> 00:27:17,840
next slide

674
00:27:18,559 --> 00:27:21,360
then we have the case of fresh data but

675
00:27:21,360 --> 00:27:23,919
with the corner case theoretical corner

676
00:27:23,919 --> 00:27:27,200
case where the router splits the slack

677
00:27:27,200 --> 00:27:29,919
information into multiple packets again

678
00:27:29,919 --> 00:27:31,520
i've never seen that and i don't know

679
00:27:31,520 --> 00:27:33,600
anyone that has seen this in practice

680
00:27:33,600 --> 00:27:35,840
but in theory the specs

681
00:27:35,840 --> 00:27:38,480
allow it so what we have is we receive

682
00:27:38,480 --> 00:27:40,480
an array the first one

683
00:27:40,480 --> 00:27:41,360
okay

684
00:27:41,360 --> 00:27:43,440
that doesn't contain all the information

685
00:27:43,440 --> 00:27:45,039
that we have previously received from

686
00:27:45,039 --> 00:27:46,960
this router okay

687
00:27:46,960 --> 00:27:49,039
so we wait for some we enter this

688
00:27:49,039 --> 00:27:51,039
algorithm and the algorithm says okay

689
00:27:51,039 --> 00:27:53,760
before you not pull the router before

690
00:27:53,760 --> 00:27:56,240
trying to pull the router just wait for

691
00:27:56,240 --> 00:27:58,080
some time because the information might

692
00:27:58,080 --> 00:28:01,279
arrive in a separate array so we wait

693
00:28:01,279 --> 00:28:04,000
for some time and we indeed receive the

694
00:28:04,000 --> 00:28:07,120
array with the missing data okay so

695
00:28:07,120 --> 00:28:09,360
again all the information is fresh

696
00:28:09,360 --> 00:28:11,440
there's nothing to do about it we are

697
00:28:11,440 --> 00:28:12,320
okay

698
00:28:12,320 --> 00:28:13,440
that's why we have the you know the

699
00:28:13,440 --> 00:28:15,360
green stuff in there

700
00:28:15,360 --> 00:28:18,240
next slide please

701
00:28:19,360 --> 00:28:22,399
we have another this is again corner

702
00:28:22,399 --> 00:28:24,720
case we are just trying to be super

703
00:28:24,720 --> 00:28:27,520
robust we have again the corner case

704
00:28:27,520 --> 00:28:28,960
where we have

705
00:28:28,960 --> 00:28:30,960
a router that is

706
00:28:30,960 --> 00:28:33,840
spreading the slack information into

707
00:28:33,840 --> 00:28:36,559
multiple arrays and there's also packet

708
00:28:36,559 --> 00:28:38,960
loss okay so

709
00:28:38,960 --> 00:28:41,279
some of those arrays with partial

710
00:28:41,279 --> 00:28:43,279
information might be lost

711
00:28:43,279 --> 00:28:44,960
so we start here

712
00:28:44,960 --> 00:28:47,600
uh with an array that contains partial

713
00:28:47,600 --> 00:28:49,039
information

714
00:28:49,039 --> 00:28:49,760
and

715
00:28:49,760 --> 00:28:51,520
when we receive that array we say okay

716
00:28:51,520 --> 00:28:53,520
well partial information we need to

717
00:28:53,520 --> 00:28:54,880
double check if the rest of the

718
00:28:54,880 --> 00:28:56,880
information is there or not

719
00:28:56,880 --> 00:28:59,120
we wait for some time we wait for the

720
00:28:59,120 --> 00:29:00,480
missing data

721
00:29:00,480 --> 00:29:02,799
but one of the other arrays just got

722
00:29:02,799 --> 00:29:05,600
lost okay so what we do is we do a

723
00:29:05,600 --> 00:29:07,840
random wait this is just a few seconds

724
00:29:07,840 --> 00:29:10,000
random value of a few seconds and then

725
00:29:10,000 --> 00:29:13,360
we decide to prove the router with a

726
00:29:13,360 --> 00:29:16,000
unicast router solicitation this is when

727
00:29:16,000 --> 00:29:18,000
we enter the you know yellow stuff in

728
00:29:18,000 --> 00:29:20,559
here so we send the proof to the router

729
00:29:20,559 --> 00:29:22,320
the router responds

730
00:29:22,320 --> 00:29:23,919
and we do receive the missing

731
00:29:23,919 --> 00:29:26,159
information so all the information has

732
00:29:26,159 --> 00:29:28,240
been refreshed

733
00:29:28,240 --> 00:29:30,399
nothing else to do we are okay we

734
00:29:30,399 --> 00:29:32,480
entered the green stuff again

735
00:29:32,480 --> 00:29:33,200
and

736
00:29:33,200 --> 00:29:36,320
last slide the next slide sorry

737
00:29:36,320 --> 00:29:38,960
well next slide is exactly the same so

738
00:29:38,960 --> 00:29:40,960
we receive an array with partial

739
00:29:40,960 --> 00:29:43,279
information we wait some time to receive

740
00:29:43,279 --> 00:29:45,520
the missing data we don't receive it so

741
00:29:45,520 --> 00:29:47,600
we say okay time to pull the router to

742
00:29:47,600 --> 00:29:50,000
see if the information is there we do

743
00:29:50,000 --> 00:29:53,679
pull the router but we never receive

744
00:29:53,679 --> 00:29:55,919
that missing information

745
00:29:55,919 --> 00:29:58,159
so after pulling the router in our case

746
00:29:58,159 --> 00:30:00,960
we pull the rotor just once a single rs

747
00:30:00,960 --> 00:30:03,520
but it's you know it's it's configurable

748
00:30:03,520 --> 00:30:05,600
you could you know

749
00:30:05,600 --> 00:30:08,000
request that host pulls the rotor more

750
00:30:08,000 --> 00:30:09,360
than once

751
00:30:09,360 --> 00:30:12,159
once we get the response from the router

752
00:30:12,159 --> 00:30:14,159
from the advertising router if the

753
00:30:14,159 --> 00:30:16,720
information is not there we say okay we

754
00:30:16,720 --> 00:30:18,559
hadn't received the information before

755
00:30:18,559 --> 00:30:21,760
we pulled the router the router is still

756
00:30:21,760 --> 00:30:24,240
not sending that information we consider

757
00:30:24,240 --> 00:30:27,360
the information has become stale so we

758
00:30:27,360 --> 00:30:29,200
we disassociate

759
00:30:29,200 --> 00:30:33,679
that information with the router okay

760
00:30:33,679 --> 00:30:37,480
uh next slide

761
00:30:38,960 --> 00:30:43,120
so that's the algorithm uh it uh it's uh

762
00:30:43,120 --> 00:30:44,159
it's uh

763
00:30:44,159 --> 00:30:46,080
it's simpler and improve over the

764
00:30:46,080 --> 00:30:47,919
version that we had for at least two

765
00:30:47,919 --> 00:30:50,640
reasons two reasons first one is that in

766
00:30:50,640 --> 00:30:53,120
the previous algorithm we were

767
00:30:53,120 --> 00:30:55,200
you know we had to modify uh you know

768
00:30:55,200 --> 00:30:57,919
the timers for example of the options

769
00:30:57,919 --> 00:30:59,279
which that made the you know the

770
00:30:59,279 --> 00:31:02,159
algorithm more complex that's one thing

771
00:31:02,159 --> 00:31:03,440
and the second thing is that the

772
00:31:03,440 --> 00:31:05,360
principle here is super simple if

773
00:31:05,360 --> 00:31:07,279
there's information that is missing what

774
00:31:07,279 --> 00:31:10,480
we do we send uh we pull the router with

775
00:31:10,480 --> 00:31:13,120
a unicast rotor solicitation and wait

776
00:31:13,120 --> 00:31:14,880
what comes back if the information

777
00:31:14,880 --> 00:31:17,039
doesn't come back well it's not there

778
00:31:17,039 --> 00:31:20,080
and so the principle is is simple

779
00:31:20,080 --> 00:31:22,480
and obviously more robust than the

780
00:31:22,480 --> 00:31:24,159
previous algorithm

781
00:31:24,159 --> 00:31:26,080
so we will send the you know the text

782
00:31:26,080 --> 00:31:28,159
for the you know for the you know the

783
00:31:28,159 --> 00:31:30,159
the algorithm to the main list for

784
00:31:30,159 --> 00:31:32,080
review but i'm i'm wondering if there

785
00:31:32,080 --> 00:31:34,080
are any you know comments or questions

786
00:31:34,080 --> 00:31:36,480
about it

787
00:31:44,840 --> 00:31:46,799
yep tommaso piccolo university of

788
00:31:46,799 --> 00:31:49,600
florence just a quick question

789
00:31:49,600 --> 00:31:51,840
uh what if

790
00:31:51,840 --> 00:31:53,360
the

791
00:31:53,360 --> 00:31:55,840
information keep being sent and behind

792
00:31:55,840 --> 00:31:57,200
lost

793
00:31:57,200 --> 00:31:59,200
uh i mean

794
00:31:59,200 --> 00:32:02,399
suppose that super corner k is of a

795
00:32:02,399 --> 00:32:04,399
router that sends the

796
00:32:04,399 --> 00:32:05,679
array with

797
00:32:05,679 --> 00:32:08,159
two or more packets and

798
00:32:08,159 --> 00:32:10,880
it keeps sending the information upon a

799
00:32:10,880 --> 00:32:13,279
ruler solicitation unicast

800
00:32:13,279 --> 00:32:16,880
and it keeps being lost sometimes i

801
00:32:16,880 --> 00:32:19,919
think that we need a number of retries

802
00:32:19,919 --> 00:32:22,080
time after which it is

803
00:32:22,080 --> 00:32:23,519
given up

804
00:32:23,519 --> 00:32:26,000
uh altogether

805
00:32:26,000 --> 00:32:28,240
yeah so the algorithm does consider you

806
00:32:28,240 --> 00:32:30,320
know that of the number of probes to be

807
00:32:30,320 --> 00:32:31,840
configurable

808
00:32:31,840 --> 00:32:33,679
so i would say that you know slack

809
00:32:33,679 --> 00:32:36,320
anyway assumes that you know uh if off

810
00:32:36,320 --> 00:32:38,240
the top of my head like you know three

811
00:32:38,240 --> 00:32:40,880
retransmissions and you know if

812
00:32:40,880 --> 00:32:43,039
after you retransmit three times things

813
00:32:43,039 --> 00:32:46,240
don't work well slug will break anyway

814
00:32:46,240 --> 00:32:49,279
uh but so if we wanted to fail on the

815
00:32:49,279 --> 00:32:50,960
safe side we could you know instead of

816
00:32:50,960 --> 00:32:52,720
defaulting to a single proof we could

817
00:32:52,720 --> 00:32:54,880
def we could default to three that's

818
00:32:54,880 --> 00:32:56,880
that's in the document already it's just

819
00:32:56,880 --> 00:32:57,679
you know

820
00:32:57,679 --> 00:32:59,360
changing the default value from one

821
00:32:59,360 --> 00:33:02,000
which is what we have right now to three

822
00:33:02,000 --> 00:33:04,960
but it's a valid point

823
00:33:07,519 --> 00:33:09,919
tim winners qa cafe my question would be

824
00:33:09,919 --> 00:33:11,519
do you want to send a

825
00:33:11,519 --> 00:33:13,519
the multicast ra out at the very end

826
00:33:13,519 --> 00:33:15,760
before you get rid of the info to make

827
00:33:15,760 --> 00:33:17,279
sure there's nobody out there that might

828
00:33:17,279 --> 00:33:18,399
have the

829
00:33:18,399 --> 00:33:19,760
no router out there that might answer

830
00:33:19,760 --> 00:33:20,799
you

831
00:33:20,799 --> 00:33:23,200
uh no because you do this on a pair

832
00:33:23,200 --> 00:33:25,279
router basis so thinking from a

833
00:33:25,279 --> 00:33:28,080
multi-router multi-prefix uh point of

834
00:33:28,080 --> 00:33:30,640
view what you do is you don't remove the

835
00:33:30,640 --> 00:33:32,760
information altogether but you

836
00:33:32,760 --> 00:33:35,760
disassociate that information with the

837
00:33:35,760 --> 00:33:36,640
that

838
00:33:36,640 --> 00:33:39,360
specific advertising router if there's

839
00:33:39,360 --> 00:33:41,120
any other system that you know is

840
00:33:41,120 --> 00:33:43,279
advertising the same information it's

841
00:33:43,279 --> 00:33:45,600
okay so you will keep that other part

842
00:33:45,600 --> 00:33:47,919
it's just disassociating the information

843
00:33:47,919 --> 00:33:49,600
with that particular router the only

844
00:33:49,600 --> 00:33:51,679
case in which you end up completely

845
00:33:51,679 --> 00:33:54,720
removing the information if there was a

846
00:33:54,720 --> 00:33:56,720
single router advertising the

847
00:33:56,720 --> 00:33:58,480
information

848
00:33:58,480 --> 00:33:59,919
yeah i guess the only case there i guess

849
00:33:59,919 --> 00:34:03,279
would be failover okay

850
00:34:04,080 --> 00:34:06,799
i actually yeah

851
00:34:06,799 --> 00:34:07,919
no heads

852
00:34:07,919 --> 00:34:11,839
just dragging cover just curious yes so

853
00:34:11,839 --> 00:34:14,960
i also was going to ask was timmy asked

854
00:34:14,960 --> 00:34:16,079
about

855
00:34:16,079 --> 00:34:19,839
sending maybe all routers

856
00:34:19,839 --> 00:34:22,399
not unicast because it might be a corner

857
00:34:22,399 --> 00:34:24,560
case when you link local address of one

858
00:34:24,560 --> 00:34:26,639
of the routers changed but the

859
00:34:26,639 --> 00:34:28,079
information

860
00:34:28,079 --> 00:34:30,480
pios advertised by the trouser is still

861
00:34:30,480 --> 00:34:32,960
the same

862
00:34:33,040 --> 00:34:35,199
so in this case i guess you don't you

863
00:34:35,199 --> 00:34:37,040
would not see it

864
00:34:37,040 --> 00:34:38,960
yet for example maybe you haven't

865
00:34:38,960 --> 00:34:41,440
received an array from that router

866
00:34:41,440 --> 00:34:44,159
but you would not ask as a trouter at

867
00:34:44,159 --> 00:34:45,679
all right

868
00:34:45,679 --> 00:34:48,239
but my expect my at least my expectation

869
00:34:48,239 --> 00:34:50,079
would be that uh you know when and that

870
00:34:50,079 --> 00:34:53,679
is according to 4861 that if you know

871
00:34:53,679 --> 00:34:54,800
the the

872
00:34:54,800 --> 00:34:56,960
router for example change the address

873
00:34:56,960 --> 00:34:58,960
and it becomes a you know an advert

874
00:34:58,960 --> 00:35:01,839
advertising router it will multicast the

875
00:35:01,839 --> 00:35:03,440
information and actually a couple of

876
00:35:03,440 --> 00:35:05,599
times from you know as soon as it you

877
00:35:05,599 --> 00:35:07,359
know joins the network so you should

878
00:35:07,359 --> 00:35:10,480
have received that information too

879
00:35:10,480 --> 00:35:12,079
okay but it's something that we could do

880
00:35:12,079 --> 00:35:14,320
anyway i i don't mind you know doing

881
00:35:14,320 --> 00:35:15,599
that

882
00:35:15,599 --> 00:35:17,440
i don't mind

883
00:35:17,440 --> 00:35:20,560
okay and the second question i'm just

884
00:35:20,560 --> 00:35:21,920
curious so

885
00:35:21,920 --> 00:35:24,640
uh remind me when you say you remove

886
00:35:24,640 --> 00:35:26,640
this the associate

887
00:35:26,640 --> 00:35:29,359
outdated information you mean make the

888
00:35:29,359 --> 00:35:33,040
address invalid or duplicated

889
00:35:33,040 --> 00:35:35,839
so in this case what we do is uh first

890
00:35:35,839 --> 00:35:38,560
of all we we don't say we eliminate the

891
00:35:38,560 --> 00:35:41,359
information so what we say is we don't

892
00:35:41,359 --> 00:35:44,240
consider that this information has been

893
00:35:44,240 --> 00:35:46,880
advertised by that particular router now

894
00:35:46,880 --> 00:35:48,720
assuming that a single router was

895
00:35:48,720 --> 00:35:50,640
advertising the information to you know

896
00:35:50,640 --> 00:35:53,920
to go back to your case what we do is we

897
00:35:53,920 --> 00:35:57,040
would end up removing the addresses okay

898
00:35:57,040 --> 00:35:59,920
because we are proving the router okay

899
00:35:59,920 --> 00:36:02,480
so it's not that just we missed we are

900
00:36:02,480 --> 00:36:04,160
proving the router the router is

901
00:36:04,160 --> 00:36:06,240
responding and the router is not

902
00:36:06,240 --> 00:36:09,200
advertising the prefix anymore

903
00:36:09,200 --> 00:36:12,000
okay so any existing sessions which are

904
00:36:12,000 --> 00:36:14,240
happening between devices

905
00:36:14,240 --> 00:36:17,280
on the same link using that address will

906
00:36:17,280 --> 00:36:20,000
be disconnected right

907
00:36:20,000 --> 00:36:22,640
if that is the only router alberta's

908
00:36:22,640 --> 00:36:26,160
advertising the prefix yes

909
00:36:26,160 --> 00:36:28,160
like can you i'm just curious if there's

910
00:36:28,160 --> 00:36:30,960
any strong reason to do that because if

911
00:36:30,960 --> 00:36:32,480
you have like sessions between two

912
00:36:32,480 --> 00:36:34,560
devices on the same link

913
00:36:34,560 --> 00:36:36,320
you're basically breaking it while the

914
00:36:36,320 --> 00:36:40,040
session could have survived

915
00:36:40,880 --> 00:36:43,359
yes but i would say that that is a side

916
00:36:43,359 --> 00:36:45,920
effect when you are using uh essentially

917
00:36:45,920 --> 00:36:48,960
uh provider dependent prefixes for local

918
00:36:48,960 --> 00:36:50,720
connections so

919
00:36:50,720 --> 00:36:51,920
uh

920
00:36:51,920 --> 00:36:54,320
i would say that's that's the case uh

921
00:36:54,320 --> 00:36:56,560
and the reason for which we

922
00:36:56,560 --> 00:36:58,480
uh it's a valid point to you know to

923
00:36:58,480 --> 00:37:00,800
re-evaluate uh the reason for which we

924
00:37:00,800 --> 00:37:02,640
are uh we

925
00:37:02,640 --> 00:37:06,079
suggest to remove the addresses is that

926
00:37:06,079 --> 00:37:08,000
the router is responding so it's not

927
00:37:08,000 --> 00:37:09,839
that it's dead

928
00:37:09,839 --> 00:37:11,760
it's responding and not sending the

929
00:37:11,760 --> 00:37:14,320
prefix anymore so otherwise you would be

930
00:37:14,320 --> 00:37:16,079
dragging information that has become

931
00:37:16,079 --> 00:37:17,760
stale it's not that the you know there's

932
00:37:17,760 --> 00:37:19,280
a transient problem with the router that

933
00:37:19,280 --> 00:37:21,280
is not responding it's responding and

934
00:37:21,280 --> 00:37:23,280
not advertising the prefix

935
00:37:23,280 --> 00:37:25,200
cool it's a very last question so you

936
00:37:25,200 --> 00:37:28,160
not responding means there is no pio or

937
00:37:28,160 --> 00:37:30,480
pio with preferred lifetime available

938
00:37:30,480 --> 00:37:32,160
zero preferred lifetime zero more

939
00:37:32,160 --> 00:37:33,920
interest in corner case

940
00:37:33,920 --> 00:37:36,400
it means the router is responding so

941
00:37:36,400 --> 00:37:38,800
it's it is sending an array

942
00:37:38,800 --> 00:37:42,079
but it's not including the pio that has

943
00:37:42,079 --> 00:37:44,720
that had previously been advertised

944
00:37:44,720 --> 00:37:46,720
okay so which is the case

945
00:37:46,720 --> 00:37:48,720
so like preferred lifetime zero in that

946
00:37:48,720 --> 00:37:51,520
pio will be still counted as advertised

947
00:37:51,520 --> 00:37:53,040
just curious

948
00:37:53,040 --> 00:37:54,400
er yes

949
00:37:54,400 --> 00:37:57,280
okay thank you yes

950
00:37:58,560 --> 00:38:00,320
bob

951
00:38:00,320 --> 00:38:01,680
you were in the queue now oh you

952
00:38:01,680 --> 00:38:04,640
disappeared

953
00:38:04,640 --> 00:38:07,040
yeah i was just going to ask that um

954
00:38:07,040 --> 00:38:08,320
bison

955
00:38:08,320 --> 00:38:11,200
i think we asked fernando that um he

956
00:38:11,200 --> 00:38:13,200
said you've never seen a case of a

957
00:38:13,200 --> 00:38:14,320
router

958
00:38:14,320 --> 00:38:17,280
splitting information over two ras so i

959
00:38:17,280 --> 00:38:20,000
based on that i wonder if it's necessary

960
00:38:20,000 --> 00:38:22,720
or how useful it is to have the

961
00:38:22,720 --> 00:38:24,880
case you know to include that in this

962
00:38:24,880 --> 00:38:27,200
document

963
00:38:27,200 --> 00:38:29,280
so it is included so we haven't seen

964
00:38:29,280 --> 00:38:31,520
that case in practice but still the

965
00:38:31,520 --> 00:38:32,560
algorithm

966
00:38:32,560 --> 00:38:34,560
accommodates that case

967
00:38:34,560 --> 00:38:37,119
so the algorithm is robust in that case

968
00:38:37,119 --> 00:38:39,839
so we don't react right away when you

969
00:38:39,839 --> 00:38:41,280
receive an array with partial

970
00:38:41,280 --> 00:38:44,160
information but actually wait for other

971
00:38:44,160 --> 00:38:46,160
possible arrays containing the missing

972
00:38:46,160 --> 00:38:47,839
information to arrive

973
00:38:47,839 --> 00:38:48,800
okay

974
00:38:48,800 --> 00:38:51,200
thank you

975
00:38:53,839 --> 00:38:55,040
okay

976
00:38:55,040 --> 00:38:57,760
no i'd send the the the draft text for

977
00:38:57,760 --> 00:39:00,079
the for the algorithm on on the list

978
00:39:00,079 --> 00:39:01,760
that you know in this slides we cover

979
00:39:01,760 --> 00:39:03,839
the you know the the let's say the the

980
00:39:03,839 --> 00:39:06,079
concept of the algorithm i will send the

981
00:39:06,079 --> 00:39:08,079
text so that you know folks can look

982
00:39:08,079 --> 00:39:11,680
into more detail and provide feedback

983
00:39:14,880 --> 00:39:16,960
yes so i assume this is like section 4.5

984
00:39:16,960 --> 00:39:19,200
that says tbd

985
00:39:19,200 --> 00:39:21,920
yeah yeah um

986
00:39:21,920 --> 00:39:24,640
can i ask whether your proposed text is

987
00:39:24,640 --> 00:39:26,880
largely narrative or will it be framed

988
00:39:26,880 --> 00:39:29,280
in the in in the

989
00:39:29,280 --> 00:39:30,960
will it be framed as a state machine

990
00:39:30,960 --> 00:39:31,920
particularly the state machine that

991
00:39:31,920 --> 00:39:34,160
needs to be implemented to keep this

992
00:39:34,160 --> 00:39:35,599
yeah yeah

993
00:39:35,599 --> 00:39:37,440
i can i have the text already i can send

994
00:39:37,440 --> 00:39:39,599
it right away

995
00:39:39,599 --> 00:39:41,040
i was just going to express a personal

996
00:39:41,040 --> 00:39:42,320
preference i don't know about anybody

997
00:39:42,320 --> 00:39:44,720
else but a personal preference for like

998
00:39:44,720 --> 00:39:47,119
describing a state machine operation

999
00:39:47,119 --> 00:39:49,119
okay

1000
00:39:49,119 --> 00:39:52,720
i think it'll be yeah thank you

1001
00:39:54,079 --> 00:39:55,599
okay

1002
00:39:55,599 --> 00:39:58,480
any more questions

1003
00:39:58,720 --> 00:40:00,880
okay good thank you fernando looking

1004
00:40:00,880 --> 00:40:03,760
forward to seeing updated version

1005
00:40:03,760 --> 00:40:06,240
and the next presentation is

1006
00:40:06,240 --> 00:40:08,079
covering

1007
00:40:08,079 --> 00:40:11,599
vtp information and extension headers

1008
00:40:11,599 --> 00:40:14,319
okay you don't uh would you are going to

1009
00:40:14,319 --> 00:40:15,599
share the slides so you like me to

1010
00:40:15,599 --> 00:40:18,000
present

1011
00:40:23,280 --> 00:40:26,240
uh you want me to share my

1012
00:40:26,240 --> 00:40:27,599
desktop uh

1013
00:40:27,599 --> 00:40:29,760
from this like you you can request

1014
00:40:29,760 --> 00:40:32,000
sharing slides so i can do that for you

1015
00:40:32,000 --> 00:40:34,240
and you'll just ask me to

1016
00:40:34,240 --> 00:40:36,079
move forward okay so maybe you can help

1017
00:40:36,079 --> 00:40:39,760
to share it okay

1018
00:40:39,760 --> 00:40:42,079
thank you

1019
00:40:48,319 --> 00:40:50,560
yeah okay

1020
00:40:50,560 --> 00:40:53,200
so uh hello everyone uh this is

1021
00:40:53,200 --> 00:40:55,520
from huawei and i'm going to give an

1022
00:40:55,520 --> 00:40:58,319
update about this uh draft on carrying

1023
00:40:58,319 --> 00:41:00,480
the waiting information in the ipv56

1024
00:41:00,480 --> 00:41:02,319
extension header

1025
00:41:02,319 --> 00:41:05,119
on behalf of these co-authors

1026
00:41:05,119 --> 00:41:08,319
okay next slide please

1027
00:41:09,839 --> 00:41:12,000
so here are some backgrounds and the

1028
00:41:12,000 --> 00:41:14,800
current status of this draft

1029
00:41:14,800 --> 00:41:17,920
basically this document introduced a new

1030
00:41:17,920 --> 00:41:20,079
harbor hub option to carry with

1031
00:41:20,079 --> 00:41:22,960
information in ipv6 package

1032
00:41:22,960 --> 00:41:25,440
it is used by the transient nodes on the

1033
00:41:25,440 --> 00:41:27,680
path to steered package to the set of

1034
00:41:27,680 --> 00:41:32,078
natural resources allocated to vtn

1035
00:41:32,240 --> 00:41:35,200
we received comments uh during and after

1036
00:41:35,200 --> 00:41:38,240
the adoption call and this shows that

1037
00:41:38,240 --> 00:41:40,240
there is interest to make this option

1038
00:41:40,240 --> 00:41:42,480
generic and more flexible

1039
00:41:42,480 --> 00:41:43,200
so

1040
00:41:43,200 --> 00:41:45,280
in the last item meeting the authors

1041
00:41:45,280 --> 00:41:47,920
presented some considerations about the

1042
00:41:47,920 --> 00:41:51,040
extensibility of this fitting option

1043
00:41:51,040 --> 00:41:52,800
both in the semantics and also the

1044
00:41:52,800 --> 00:41:54,400
format

1045
00:41:54,400 --> 00:41:57,920
so in this zero one version uh it

1046
00:41:57,920 --> 00:42:00,720
reflects the update to the format of the

1047
00:42:00,720 --> 00:42:02,480
vtn option

1048
00:42:02,480 --> 00:42:03,760
while the generalization of the

1049
00:42:03,760 --> 00:42:05,200
semantics may need some further

1050
00:42:05,200 --> 00:42:07,440
discussion in the working group

1051
00:42:07,440 --> 00:42:08,240
okay

1052
00:42:08,240 --> 00:42:11,118
next slide please

1053
00:42:13,040 --> 00:42:15,520
here we show the updated

1054
00:42:15,520 --> 00:42:19,520
beta option format basically it

1055
00:42:19,520 --> 00:42:22,079
consists of the option type

1056
00:42:22,079 --> 00:42:24,880
option data lens and the flags field the

1057
00:42:24,880 --> 00:42:27,119
result reserved field and between

1058
00:42:27,119 --> 00:42:30,160
resource id field

1059
00:42:30,160 --> 00:42:32,000
in the option type field

1060
00:42:32,000 --> 00:42:34,079
the first two bits are set to zero so

1061
00:42:34,079 --> 00:42:36,240
that it is uh

1062
00:42:36,240 --> 00:42:39,200
ignored when it is not recognized

1063
00:42:39,200 --> 00:42:42,800
in the packet forwarding and it is not

1064
00:42:42,800 --> 00:42:45,280
uh should not be changed in the in the

1065
00:42:45,280 --> 00:42:47,200
packet forwarding

1066
00:42:47,200 --> 00:42:50,000
um the option data length is set to

1067
00:42:50,000 --> 00:42:51,680
eight and

1068
00:42:51,680 --> 00:42:53,359
it reflects the length of the data

1069
00:42:53,359 --> 00:42:54,560
fields

1070
00:42:54,560 --> 00:42:57,599
here we introduce a flux field and one

1071
00:42:57,599 --> 00:42:59,680
flag is defined in this version it's

1072
00:42:59,680 --> 00:43:02,000
called a strict match which means that

1073
00:43:02,000 --> 00:43:03,760
when the packet

1074
00:43:03,760 --> 00:43:06,400
has its f s flat set

1075
00:43:06,400 --> 00:43:10,160
it must match with uh the vtn

1076
00:43:10,160 --> 00:43:13,119
uh a resource id which is configured on

1077
00:43:13,119 --> 00:43:15,040
the outgoing interface for target

1078
00:43:15,040 --> 00:43:16,800
forwarding otherwise it package should

1079
00:43:16,800 --> 00:43:18,000
be dropped

1080
00:43:18,000 --> 00:43:21,040
and if the s flag is uh set to zero it

1081
00:43:21,040 --> 00:43:23,040
means that when if there's no matching

1082
00:43:23,040 --> 00:43:25,280
of the vtn resource id and outgoing

1083
00:43:25,280 --> 00:43:27,520
interface the packet will be forwarded

1084
00:43:27,520 --> 00:43:29,680
using the default set of resource on the

1085
00:43:29,680 --> 00:43:31,440
interface

1086
00:43:31,440 --> 00:43:33,839
uh the reserve field is

1087
00:43:33,839 --> 00:43:36,000
live for the future extensions to this

1088
00:43:36,000 --> 00:43:37,040
option

1089
00:43:37,040 --> 00:43:40,800
and the video resource id is for octet

1090
00:43:40,800 --> 00:43:42,640
identifier of the set of resources

1091
00:43:42,640 --> 00:43:44,720
allocated to over here

1092
00:43:44,720 --> 00:43:47,520
so with this format we

1093
00:43:47,520 --> 00:43:49,839
kept the updating option with a fixed

1094
00:43:49,839 --> 00:43:52,160
lens and also lift rooms for the future

1095
00:43:52,160 --> 00:43:54,640
extensions

1096
00:43:54,640 --> 00:43:57,759
okay next page please

1097
00:44:01,520 --> 00:44:03,920
okay here are some other updates in the

1098
00:44:03,920 --> 00:44:05,680
zero one version

1099
00:44:05,680 --> 00:44:06,480
first

1100
00:44:06,480 --> 00:44:08,880
we clarify that waiting option can be

1101
00:44:08,880 --> 00:44:10,960
used for network slicing and could also

1102
00:44:10,960 --> 00:44:13,680
be used for other application scenarios

1103
00:44:13,680 --> 00:44:16,319
and in the context of network slicing

1104
00:44:16,319 --> 00:44:17,119
the

1105
00:44:17,119 --> 00:44:19,200
vta and nrp

1106
00:44:19,200 --> 00:44:20,640
the network resource partition are

1107
00:44:20,640 --> 00:44:23,440
similar concepts

1108
00:44:23,440 --> 00:44:25,920
it also clarifies that the relationship

1109
00:44:25,920 --> 00:44:28,319
with the 5g network slice identifier

1110
00:44:28,319 --> 00:44:31,760
which is ias ssai

1111
00:44:31,760 --> 00:44:33,680
basically in the five general slice

1112
00:44:33,680 --> 00:44:36,000
scenarios there may be the mapping

1113
00:44:36,000 --> 00:44:38,960
relationship between the ssar and the

1114
00:44:38,960 --> 00:44:40,800
vtn

1115
00:44:40,800 --> 00:44:42,720
uh we also update the forwarding

1116
00:44:42,720 --> 00:44:46,079
behaviors which takes the s-flag

1117
00:44:46,079 --> 00:44:47,520
the value of the s-flag into

1118
00:44:47,520 --> 00:44:49,280
consideration

1119
00:44:49,280 --> 00:44:51,520
there are also some editorial changes in

1120
00:44:51,520 --> 00:44:53,760
this uh version

1121
00:44:53,760 --> 00:44:57,359
okay next page please

1122
00:44:57,359 --> 00:45:00,160
okay here are the next steps uh we would

1123
00:45:00,160 --> 00:45:01,680
like to collect the further feedback

1124
00:45:01,680 --> 00:45:03,200
from the working group

1125
00:45:03,200 --> 00:45:05,680
and if there's interest we could

1126
00:45:05,680 --> 00:45:07,599
continue to have the further discussion

1127
00:45:07,599 --> 00:45:10,800
about the semantics generalization

1128
00:45:10,800 --> 00:45:12,560
then we will update the document

1129
00:45:12,560 --> 00:45:14,400
accordingly based on the comments and

1130
00:45:14,400 --> 00:45:15,520
feedbacks

1131
00:45:15,520 --> 00:45:18,520
thanks

1132
00:45:30,160 --> 00:45:33,200
no specific hat

1133
00:45:33,200 --> 00:45:34,079
again

1134
00:45:34,079 --> 00:45:36,079
i keep repeating myself on this specific

1135
00:45:36,079 --> 00:45:39,359
draft but having a fixed length option

1136
00:45:39,359 --> 00:45:42,240
for just a single use case is a kind of

1137
00:45:42,240 --> 00:45:44,720
a waste of the code space i would prefer

1138
00:45:44,720 --> 00:45:47,839
very much to get a variable length color

1139
00:45:47,839 --> 00:45:50,000
thing that could be applied to many many

1140
00:45:50,000 --> 00:45:52,560
use cases

1141
00:45:53,839 --> 00:45:55,920
yes that's for your

1142
00:45:55,920 --> 00:45:58,880
comments i will notice your suggestion

1143
00:45:58,880 --> 00:46:00,880
about a variable lens

1144
00:46:00,880 --> 00:46:03,760
well we also see that in the harbor hub

1145
00:46:03,760 --> 00:46:05,760
processing draft

1146
00:46:05,760 --> 00:46:08,079
it

1147
00:46:08,240 --> 00:46:11,040
recommends or it

1148
00:46:11,040 --> 00:46:13,680
the rule in that draft is that

1149
00:46:13,680 --> 00:46:16,720
we should use as fixed lens options for

1150
00:46:16,720 --> 00:46:17,920
hubba hub

1151
00:46:17,920 --> 00:46:18,880
header

1152
00:46:18,880 --> 00:46:21,599
so maybe we need to consider whether we

1153
00:46:21,599 --> 00:46:23,839
need to align with the rules in that

1154
00:46:23,839 --> 00:46:26,839
document

1155
00:46:28,240 --> 00:46:30,319
but i agree we need to make it uh

1156
00:46:30,319 --> 00:46:31,680
extensible

1157
00:46:31,680 --> 00:46:34,240
that's why we introduce some new fields

1158
00:46:34,240 --> 00:46:35,599
and

1159
00:46:35,599 --> 00:46:36,480
maybe

1160
00:46:36,480 --> 00:46:39,040
i'm not limited to the

1161
00:46:39,040 --> 00:46:41,520
natural slicing use case

1162
00:46:41,520 --> 00:46:44,560
that is uh for sure

1163
00:46:46,960 --> 00:46:49,040
thank you joe

1164
00:46:49,040 --> 00:46:51,760
joel halpern with erickson

1165
00:46:51,760 --> 00:46:54,720
um i think that your intention in the

1166
00:46:54,720 --> 00:46:57,760
wording was to meet some requirements

1167
00:46:57,760 --> 00:46:59,520
that you and i have discussed and the

1168
00:46:59,520 --> 00:47:02,560
working group has discussed in the past

1169
00:47:02,560 --> 00:47:04,240
but the wording left me a little

1170
00:47:04,240 --> 00:47:06,800
confused you sometimes talk about this

1171
00:47:06,800 --> 00:47:09,359
field as a vtn id

1172
00:47:09,359 --> 00:47:12,240
you sometimes talk about it as a vtn

1173
00:47:12,240 --> 00:47:14,160
resource id

1174
00:47:14,160 --> 00:47:17,119
i hope it's the resource id i.e it's an

1175
00:47:17,119 --> 00:47:19,839
aggregate that can be that represents a

1176
00:47:19,839 --> 00:47:21,760
resource allocation

1177
00:47:21,760 --> 00:47:23,680
to meet some set of

1178
00:47:23,680 --> 00:47:24,720
traffic

1179
00:47:24,720 --> 00:47:26,720
which may be a collection of vtns or

1180
00:47:26,720 --> 00:47:28,559
whatever

1181
00:47:28,559 --> 00:47:30,800
at which point the other thing is then i

1182
00:47:30,800 --> 00:47:32,880
think that means the same thing as the

1183
00:47:32,880 --> 00:47:36,160
nrp the network resource partition

1184
00:47:36,160 --> 00:47:38,559
that's discussed in teas and we should

1185
00:47:38,559 --> 00:47:41,119
make clear the relationship

1186
00:47:41,119 --> 00:47:43,040
and that's the really important part we

1187
00:47:43,040 --> 00:47:44,720
should make it clear what we're

1188
00:47:44,720 --> 00:47:49,359
representing whatever it is please

1189
00:47:49,359 --> 00:47:50,800
yeah

1190
00:47:50,800 --> 00:47:52,640
it says for a comment so

1191
00:47:52,640 --> 00:47:54,240
yeah i agree that

1192
00:47:54,240 --> 00:47:55,839
we have been discussed about the

1193
00:47:55,839 --> 00:47:57,839
semantics of this uh

1194
00:47:57,839 --> 00:48:01,200
id and i we have made it made it clear

1195
00:48:01,200 --> 00:48:03,839
that it is the resource id within

1196
00:48:03,839 --> 00:48:06,480
resource id or we may call it

1197
00:48:06,480 --> 00:48:08,000
an rpid

1198
00:48:08,000 --> 00:48:11,040
for in the context of slicing

1199
00:48:11,040 --> 00:48:12,160
um but

1200
00:48:12,160 --> 00:48:14,800
you may also know that there's the

1201
00:48:14,800 --> 00:48:16,800
suggestion about the generalization of

1202
00:48:16,800 --> 00:48:18,000
this uh

1203
00:48:18,000 --> 00:48:21,280
semantics of this option or the id so

1204
00:48:21,280 --> 00:48:23,119
may we may

1205
00:48:23,119 --> 00:48:25,839
we are open to some further

1206
00:48:25,839 --> 00:48:27,920
comments about the generalization and

1207
00:48:27,920 --> 00:48:29,760
maybe it is not reflected in this

1208
00:48:29,760 --> 00:48:32,160
current version but still using the

1209
00:48:32,160 --> 00:48:34,640
media resource id here

1210
00:48:34,640 --> 00:48:35,520
but

1211
00:48:35,520 --> 00:48:38,240
let me consider whether there's other

1212
00:48:38,240 --> 00:48:40,559
suggestions to make it

1213
00:48:40,559 --> 00:48:44,559
more generic in this semantics

1214
00:48:45,359 --> 00:48:48,359
thanks

1215
00:48:49,520 --> 00:48:51,520
okay i

1216
00:48:51,520 --> 00:48:54,880
do not see anyone else in the queue so

1217
00:48:54,880 --> 00:48:57,359
thank you

1218
00:48:57,520 --> 00:49:00,079
yeah i guess we shall expect a updated

1219
00:49:00,079 --> 00:49:03,119
draft based on the comments you received

1220
00:49:03,119 --> 00:49:05,920
today and on the list right

1221
00:49:05,920 --> 00:49:09,280
okay now we are moving to the individual

1222
00:49:09,280 --> 00:49:11,680
drafts on the agenda

1223
00:49:11,680 --> 00:49:13,680
slightly ahead of time great so we might

1224
00:49:13,680 --> 00:49:16,720
have more time for discussion for them

1225
00:49:16,720 --> 00:49:20,480
so i'm going to share the slides for

1226
00:49:20,480 --> 00:49:23,440
i see pv6 extensions for i am

1227
00:49:23,440 --> 00:49:25,370
discovering

1228
00:49:25,370 --> 00:49:28,719
[Music]

1229
00:49:34,050 --> 00:49:35,839
[Music]

1230
00:49:35,839 --> 00:49:39,040
okay okay thank you so i mean your floor

1231
00:49:39,040 --> 00:49:41,200
is yours

1232
00:49:41,200 --> 00:49:42,079
okay

1233
00:49:42,079 --> 00:49:44,559
uh hello everyone uh this is xiaomi from

1234
00:49:44,559 --> 00:49:46,480
zte speaking

1235
00:49:46,480 --> 00:49:49,839
this presentation is on icmp v6

1236
00:49:49,839 --> 00:49:51,839
echo request reply

1237
00:49:51,839 --> 00:49:55,520
for enabled in-situ om capabilities

1238
00:49:55,520 --> 00:49:58,720
this is the second time i presented

1239
00:49:58,720 --> 00:50:00,160
nexus line

1240
00:50:00,160 --> 00:50:02,480
please

1241
00:50:03,760 --> 00:50:06,640
this is the recap of this draft

1242
00:50:06,640 --> 00:50:10,319
this chapter defines icmp v6 extensions

1243
00:50:10,319 --> 00:50:13,680
to achieve iom capabilities discovery

1244
00:50:13,680 --> 00:50:16,240
in ipv6 networks

1245
00:50:16,240 --> 00:50:19,200
this chapter is a campaigning document

1246
00:50:19,200 --> 00:50:20,640
of

1247
00:50:20,640 --> 00:50:25,440
draft itf ibpm iom comp state

1248
00:50:25,440 --> 00:50:28,119
this draft defines two new

1249
00:50:28,119 --> 00:50:31,200
icmpb6 messages

1250
00:50:31,200 --> 00:50:34,880
called iom echo request and iom echo

1251
00:50:34,880 --> 00:50:36,640
reply

1252
00:50:36,640 --> 00:50:40,319
for icmp v6 iom anchor reply

1253
00:50:40,319 --> 00:50:45,040
six iom capabilities objects are defined

1254
00:50:45,040 --> 00:50:47,839
there i am pre allocated tracing

1255
00:50:47,839 --> 00:50:50,240
capabilities object

1256
00:50:50,240 --> 00:50:52,880
iom incremental tracing capabilities

1257
00:50:52,880 --> 00:50:54,559
object

1258
00:50:54,559 --> 00:50:58,880
iom approval transit capabilities object

1259
00:50:58,880 --> 00:51:02,480
i am edge to edge capability subject

1260
00:51:02,480 --> 00:51:05,599
i am dx capabilities object

1261
00:51:05,599 --> 00:51:09,119
and i am end of the main object

1262
00:51:09,119 --> 00:51:12,000
next slide please

1263
00:51:14,000 --> 00:51:15,760
this slide

1264
00:51:15,760 --> 00:51:18,400
shows the status of the

1265
00:51:18,400 --> 00:51:22,800
draft idf rbpm iom comp state

1266
00:51:22,800 --> 00:51:25,359
this ippm document defines the general

1267
00:51:25,359 --> 00:51:26,640
method

1268
00:51:26,640 --> 00:51:30,000
of iom capabilities discovery

1269
00:51:30,000 --> 00:51:33,280
allowing the i am encapsulating node

1270
00:51:33,280 --> 00:51:35,520
to discover

1271
00:51:35,520 --> 00:51:39,200
the enabled iom capabilities of each iom

1272
00:51:39,200 --> 00:51:41,040
transit and

1273
00:51:41,040 --> 00:51:43,520
encapsulating node

1274
00:51:43,520 --> 00:51:45,440
along the transport path

1275
00:51:45,440 --> 00:51:48,480
of irm data packet

1276
00:51:48,480 --> 00:51:50,400
this draft has passed the working group

1277
00:51:50,400 --> 00:51:53,119
last call in ibpm working group

1278
00:51:53,119 --> 00:51:55,119
and is currently with

1279
00:51:55,119 --> 00:51:57,839
transport ad

1280
00:51:57,839 --> 00:52:00,880
the general method defined in

1281
00:52:00,880 --> 00:52:02,640
that ibpm

1282
00:52:02,640 --> 00:52:07,359
document can be applied in ipv6

1283
00:52:07,359 --> 00:52:08,960
mpls

1284
00:52:08,960 --> 00:52:10,559
ssc and

1285
00:52:10,559 --> 00:52:13,359
vr environments

1286
00:52:13,359 --> 00:52:17,000
next slide please

1287
00:52:18,400 --> 00:52:21,359
uh the zero zero version of this job too

1288
00:52:21,359 --> 00:52:24,720
was presented at itaf112

1289
00:52:24,720 --> 00:52:28,559
uh some good discussions happened there

1290
00:52:28,559 --> 00:52:32,800
here with just a few updates since then

1291
00:52:32,800 --> 00:52:34,000
firstly

1292
00:52:34,000 --> 00:52:38,079
one more example where two namespace ids

1293
00:52:38,079 --> 00:52:41,119
are deployed was added

1294
00:52:41,119 --> 00:52:44,000
secondly the encodings of iom echo

1295
00:52:44,000 --> 00:52:46,240
replies examples

1296
00:52:46,240 --> 00:52:47,839
were updated

1297
00:52:47,839 --> 00:52:51,920
to align with the ippm document

1298
00:52:51,920 --> 00:52:53,520
thirdly

1299
00:52:53,520 --> 00:52:55,839
some editorial changes were made and the

1300
00:52:55,839 --> 00:52:58,880
needs were fixed

1301
00:52:59,040 --> 00:53:02,400
note that one more need to in figure

1302
00:53:02,400 --> 00:53:03,359
six

1303
00:53:03,359 --> 00:53:05,520
will be fixed the next revision of this

1304
00:53:05,520 --> 00:53:06,960
chart

1305
00:53:06,960 --> 00:53:10,599
next slide please

1306
00:53:14,640 --> 00:53:17,359
next step and also

1307
00:53:17,359 --> 00:53:19,839
ask the six-man working group to

1308
00:53:19,839 --> 00:53:23,520
consider adoption of this job

1309
00:53:23,920 --> 00:53:27,160
thank you

1310
00:53:28,800 --> 00:53:30,319
okay

1311
00:53:30,319 --> 00:53:34,960
comments questions suggestions

1312
00:53:38,000 --> 00:53:40,960
this room is very quiet today in the in

1313
00:53:40,960 --> 00:53:42,720
the chat eric

1314
00:53:42,720 --> 00:53:43,760
um

1315
00:53:43,760 --> 00:53:46,640
asked whether noted information queries

1316
00:53:46,640 --> 00:53:49,520
could be used

1317
00:53:49,599 --> 00:53:52,920
for this

1318
00:54:07,200 --> 00:54:09,680
uh irrigating cisco know hat and thank

1319
00:54:09,680 --> 00:54:12,000
you both for point printing the point

1320
00:54:12,000 --> 00:54:13,920
i'm a little bit annoyed by using an

1321
00:54:13,920 --> 00:54:16,480
echo request reply for such

1322
00:54:16,480 --> 00:54:18,800
information there is an experimental

1323
00:54:18,800 --> 00:54:21,359
though information note query

1324
00:54:21,359 --> 00:54:23,520
and i would kind of prefer and find it

1325
00:54:23,520 --> 00:54:27,040
more logical to define a new icmp

1326
00:54:27,040 --> 00:54:29,119
code or type and never know which one it

1327
00:54:29,119 --> 00:54:30,319
to be used

1328
00:54:30,319 --> 00:54:33,759
for this rather than eco

1329
00:54:34,400 --> 00:54:35,920
so

1330
00:54:35,920 --> 00:54:39,920
they asked me to compare the icmp basics

1331
00:54:39,920 --> 00:54:40,960
and

1332
00:54:40,960 --> 00:54:44,240
know the information queries

1333
00:54:44,480 --> 00:54:45,440
i uh

1334
00:54:45,440 --> 00:54:48,799
is this your intention

1335
00:54:50,960 --> 00:54:52,720
i would prefer to use something else

1336
00:54:52,720 --> 00:54:55,040
than an echo request reply to convey

1337
00:54:55,040 --> 00:54:58,160
this kind of information

1338
00:54:58,559 --> 00:55:01,359
but in rbpm document we have defined

1339
00:55:01,359 --> 00:55:02,799
that we

1340
00:55:02,799 --> 00:55:05,599
need to use echo requested apply

1341
00:55:05,599 --> 00:55:09,520
to convey the iom capabilities

1342
00:55:10,960 --> 00:55:12,880
okay anyway let's continue over email

1343
00:55:12,880 --> 00:55:13,760
maybe

1344
00:55:13,760 --> 00:55:15,359
yeah yeah i think it's because your

1345
00:55:15,359 --> 00:55:17,440
audio might not be working very well

1346
00:55:17,440 --> 00:55:19,680
yeah so let's take it but

1347
00:55:19,680 --> 00:55:21,359
yeah but i think yeah

1348
00:55:21,359 --> 00:55:23,760
i i think i tend to agree with eric i

1349
00:55:23,760 --> 00:55:25,920
think it's this definitely worth looking

1350
00:55:25,920 --> 00:55:28,079
at because that's that's a

1351
00:55:28,079 --> 00:55:30,640
structure that could be used for other

1352
00:55:30,640 --> 00:55:35,720
kinds of queries including this one

1353
00:55:37,359 --> 00:55:40,400
okay we can discuss it here

1354
00:55:40,400 --> 00:55:42,799
by email further good thank you very

1355
00:55:42,799 --> 00:55:45,040
good

1356
00:55:46,240 --> 00:55:47,440
okay

1357
00:55:47,440 --> 00:55:49,839
thank you

1358
00:55:50,240 --> 00:55:51,599
so

1359
00:55:51,599 --> 00:55:54,720
erica i'll delete you from the queue

1360
00:55:54,720 --> 00:55:56,400
yeah finally i just

1361
00:55:56,400 --> 00:55:57,839
wanted to make sure you don't have more

1362
00:55:57,839 --> 00:55:58,880
questions

1363
00:55:58,880 --> 00:55:59,920
okay

1364
00:55:59,920 --> 00:56:03,119
so next one

1365
00:56:03,119 --> 00:56:05,040
okay i'll share the next set of slides

1366
00:56:05,040 --> 00:56:07,440
for you so

1367
00:56:07,440 --> 00:56:09,680
ah it is

1368
00:56:09,680 --> 00:56:11,919
um

1369
00:56:14,839 --> 00:56:18,720
okay okay thank you again

1370
00:56:18,720 --> 00:56:21,440
hello everyone for me again

1371
00:56:21,440 --> 00:56:24,559
this presentation is on b6 upper layer

1372
00:56:24,559 --> 00:56:26,319
checkpoint

1373
00:56:26,319 --> 00:56:28,240
this is the zero zero version individual

1374
00:56:28,240 --> 00:56:29,680
draft

1375
00:56:29,680 --> 00:56:32,558
that's a small piece

1376
00:56:36,000 --> 00:56:38,400
this is the problem statement of this

1377
00:56:38,400 --> 00:56:39,839
chart

1378
00:56:39,839 --> 00:56:41,920
in srv6

1379
00:56:41,920 --> 00:56:45,200
when the last seat is a compressed one

1380
00:56:45,200 --> 00:56:47,040
the upper layer checks some computation

1381
00:56:47,040 --> 00:56:48,240
rule

1382
00:56:48,240 --> 00:56:51,680
defining rfc8200

1383
00:56:51,680 --> 00:56:54,400
doesn't apply anymore

1384
00:56:54,400 --> 00:56:57,200
here we provide two examples

1385
00:56:57,200 --> 00:57:00,960
when obviously 8200 doesn't apply

1386
00:57:00,960 --> 00:57:03,839
the first example is the next cc the

1387
00:57:03,839 --> 00:57:04,880
flavor

1388
00:57:04,880 --> 00:57:07,440
of compressed seed

1389
00:57:07,440 --> 00:57:09,760
multiple seeds may be carried in the

1390
00:57:09,760 --> 00:57:12,480
ipv6 destination address

1391
00:57:12,480 --> 00:57:14,799
at the same time

1392
00:57:14,799 --> 00:57:17,520
second example is the replace sea seed

1393
00:57:17,520 --> 00:57:20,640
flavor of compressed seed

1394
00:57:20,640 --> 00:57:23,520
the last element of the rooting header

1395
00:57:23,520 --> 00:57:26,400
may be not a

1396
00:57:26,520 --> 00:57:29,040
128-bit address

1397
00:57:29,040 --> 00:57:30,880
as a 16-bit

1398
00:57:30,880 --> 00:57:34,880
or 32-bit compressed seat

1399
00:57:34,880 --> 00:57:38,200
next slide

1400
00:57:40,480 --> 00:57:43,040
this slide demonstrates the

1401
00:57:43,040 --> 00:57:46,400
proposed solution in this chart

1402
00:57:46,400 --> 00:57:48,880
firstly it keeps

1403
00:57:48,880 --> 00:57:52,880
rc 8200 as is

1404
00:57:52,880 --> 00:57:54,559
secondly it

1405
00:57:54,559 --> 00:57:56,160
inserts

1406
00:57:56,160 --> 00:57:57,240
a

1407
00:57:57,240 --> 00:57:59,599
128-bit address

1408
00:57:59,599 --> 00:58:02,000
of the final destination

1409
00:58:02,000 --> 00:58:04,799
into the last seat

1410
00:58:04,799 --> 00:58:07,520
using a new srg flag

1411
00:58:07,520 --> 00:58:10,960
to indicate the insertion

1412
00:58:10,960 --> 00:58:12,400
thirdly

1413
00:58:12,400 --> 00:58:14,960
the pseudo code on processing the new

1414
00:58:14,960 --> 00:58:17,440
defined srtc flag

1415
00:58:17,440 --> 00:58:20,240
is copied here

1416
00:58:20,240 --> 00:58:23,119
please review the pseudo code after the

1417
00:58:23,119 --> 00:58:26,160
meet thank you

1418
00:58:29,520 --> 00:58:31,680
during the discussions on and off the

1419
00:58:31,680 --> 00:58:33,839
main list that

1420
00:58:33,839 --> 00:58:37,760
other proposed solutions were raised

1421
00:58:37,760 --> 00:58:40,240
the first one is to standardize that the

1422
00:58:40,240 --> 00:58:44,160
last proceed must be uncompressed

1423
00:58:44,160 --> 00:58:45,960
and then keep

1424
00:58:45,960 --> 00:58:49,200
rbc8200 as is

1425
00:58:49,200 --> 00:58:52,000
the second one is to require that the

1426
00:58:52,000 --> 00:58:54,160
originating mode

1427
00:58:54,160 --> 00:58:57,200
when the last cd is compressed

1428
00:58:57,200 --> 00:58:58,720
decompress it

1429
00:58:58,720 --> 00:59:01,839
and put the resulting ipv6 designation

1430
00:59:01,839 --> 00:59:03,040
address

1431
00:59:03,040 --> 00:59:05,200
into the pseudo header

1432
00:59:05,200 --> 00:59:09,200
for upper layer checksum computation

1433
00:59:09,200 --> 00:59:11,000
and then update of

1434
00:59:11,000 --> 00:59:14,400
c8200 accordingly

1435
00:59:14,400 --> 00:59:17,799
next time

1436
00:59:19,920 --> 00:59:22,640
next steps for this job to

1437
00:59:22,640 --> 00:59:24,960
the authors ask for more review and

1438
00:59:24,960 --> 00:59:26,079
comments

1439
00:59:26,079 --> 00:59:28,720
and expect it to converge on one

1440
00:59:28,720 --> 00:59:30,799
solution

1441
00:59:30,799 --> 00:59:33,839
that's all thank you

1442
00:59:34,640 --> 00:59:38,000
uh darren is in the queue

1443
00:59:40,640 --> 00:59:43,520
yeah darren duke cisco systems uh the sr

1444
00:59:43,520 --> 00:59:46,079
source knows the destination

1445
00:59:46,079 --> 00:59:47,680
whether it's compressed or uncompressed

1446
00:59:47,680 --> 00:59:49,680
doesn't matter by the time the packet

1447
00:59:49,680 --> 00:59:51,040
reaches the destination node the

1448
00:59:51,040 --> 00:59:52,319
destination address is in the

1449
00:59:52,319 --> 00:59:54,480
destination address field and is used

1450
00:59:54,480 --> 00:59:56,319
for upper header upper layer header

1451
00:59:56,319 --> 00:59:58,400
check some calculation i don't think

1452
00:59:58,400 --> 00:59:59,280
that is

1453
00:59:59,280 --> 01:00:01,839
there's any need for this draft

1454
01:00:01,839 --> 01:00:04,640
it works as is

1455
01:00:05,119 --> 01:00:06,319
uh

1456
01:00:06,319 --> 01:00:08,480
you know uh this job to

1457
01:00:08,480 --> 01:00:10,400
in this job to

1458
01:00:10,400 --> 01:00:13,359
we have the problem statement

1459
01:00:13,359 --> 01:00:14,960
now that's

1460
01:00:14,960 --> 01:00:18,960
mainly because in rbc 8200

1461
01:00:18,960 --> 01:00:22,160
uh it's assumed that the last seat

1462
01:00:22,160 --> 01:00:23,520
is a

1463
01:00:23,520 --> 01:00:25,760
180

1464
01:00:25,760 --> 01:00:27,760
uh

1465
01:00:27,760 --> 01:00:30,559
bit ipv6 address

1466
01:00:30,559 --> 01:00:33,119
so at the originating node

1467
01:00:33,119 --> 01:00:35,200
we need to have

1468
01:00:35,200 --> 01:00:37,839
that kind of last seat

1469
01:00:37,839 --> 01:00:39,599
otherwise

1470
01:00:39,599 --> 01:00:40,400
the

1471
01:00:40,400 --> 01:00:44,160
checksum calculate calculation is not

1472
01:00:44,160 --> 01:00:46,079
applied

1473
01:00:46,079 --> 01:00:51,200
uh it's not aligned with rc 80 200.

1474
01:00:51,200 --> 01:00:52,480
yeah i know i'll say i think that

1475
01:00:52,480 --> 01:00:56,400
problem statement is wrong

1476
01:00:56,400 --> 01:00:58,480
there and maybe if you can put your

1477
01:00:58,480 --> 01:01:00,240
comments on the list

1478
01:01:00,240 --> 01:01:02,079
yeah so we can painting discussion on

1479
01:01:02,079 --> 01:01:04,720
the list on this

1480
01:01:04,720 --> 01:01:08,000
yes thank you terry

1481
01:01:09,200 --> 01:01:12,480
okay uh

1482
01:01:14,799 --> 01:01:15,839
no more

1483
01:01:15,839 --> 01:01:18,319
comments or questions so we

1484
01:01:18,319 --> 01:01:20,960
then move to the next draft

1485
01:01:20,960 --> 01:01:22,640
paulo are you in the room

1486
01:01:22,640 --> 01:01:25,839
ah right

1487
01:01:35,040 --> 01:01:39,319
we switch to somebody in presence

1488
01:01:46,319 --> 01:01:48,880
and i'm presenting on behalf of my

1489
01:01:48,880 --> 01:01:50,799
co-author edward which i guess is

1490
01:01:50,799 --> 01:01:53,359
connected remotely so just to give you

1491
01:01:53,359 --> 01:01:55,280
the background for

1492
01:01:55,280 --> 01:01:56,559
this draft

1493
01:01:56,559 --> 01:01:59,839
we developed some time in analysis on

1494
01:01:59,839 --> 01:02:02,160
neighbor discovery protocols

1495
01:02:02,160 --> 01:02:05,599
and the role of nd to keep with

1496
01:02:05,599 --> 01:02:08,079
to handle let's say the

1497
01:02:08,079 --> 01:02:09,760
prefix robustness

1498
01:02:09,760 --> 01:02:10,799
cases

1499
01:02:10,799 --> 01:02:11,920
um

1500
01:02:11,920 --> 01:02:14,160
we decide then to let's say now around

1501
01:02:14,160 --> 01:02:16,559
the scope of that old draft and move to

1502
01:02:16,559 --> 01:02:19,359
this one which is basically

1503
01:02:19,359 --> 01:02:21,920
the role of neighbor discovery in

1504
01:02:21,920 --> 01:02:23,440
multi-homing

1505
01:02:23,440 --> 01:02:26,079
multi-prefix networks

1506
01:02:26,079 --> 01:02:28,559
next slide please

1507
01:02:28,559 --> 01:02:30,319
well there is no need to discuss what

1508
01:02:30,319 --> 01:02:31,119
the

1509
01:02:31,119 --> 01:02:33,520
multi-homie multi prefix network is a

1510
01:02:33,520 --> 01:02:35,599
there is one example here in the picture

1511
01:02:35,599 --> 01:02:37,200
you see basically

1512
01:02:37,200 --> 01:02:38,720
um

1513
01:02:38,720 --> 01:02:42,400
something that sometimes is used for

1514
01:02:42,400 --> 01:02:45,359
small offices home offices i would say

1515
01:02:45,359 --> 01:02:48,000
this is specifically useful for and say

1516
01:02:48,000 --> 01:02:50,079
smaller medium enterprises

1517
01:02:50,079 --> 01:02:52,720
you have for example two routers two c

1518
01:02:52,720 --> 01:02:55,039
is connected to two different providers

1519
01:02:55,039 --> 01:02:57,599
the reason for that is to let's say

1520
01:02:57,599 --> 01:03:00,799
provide resilience or let's say support

1521
01:03:00,799 --> 01:03:02,400
load balancing or whatever other

1522
01:03:02,400 --> 01:03:04,240
applications that are useful for an

1523
01:03:04,240 --> 01:03:05,920
enterprise

1524
01:03:05,920 --> 01:03:08,319
the topology the architecture of the

1525
01:03:08,319 --> 01:03:11,440
internal network may be quite complex so

1526
01:03:11,440 --> 01:03:13,839
this is to say the main reason

1527
01:03:13,839 --> 01:03:16,640
there is a lot of literature that has

1528
01:03:16,640 --> 01:03:20,160
already described these cases so how to

1529
01:03:20,160 --> 01:03:21,839
let's say deal with the different

1530
01:03:21,839 --> 01:03:24,240
connectivity

1531
01:03:24,240 --> 01:03:26,480
cases or the lack of connectivity

1532
01:03:26,480 --> 01:03:28,240
because of faults

1533
01:03:28,240 --> 01:03:30,960
you see some example there cytopology

1534
01:03:30,960 --> 01:03:32,039
discussed in

1535
01:03:32,039 --> 01:03:33,839
7157

1536
01:03:33,839 --> 01:03:35,359
which is the

1537
01:03:35,359 --> 01:03:37,440
i would say the original

1538
01:03:37,440 --> 01:03:41,839
rfc to discuss multi-homing without net

1539
01:03:41,839 --> 01:03:45,599
there is the 86 17 a 78 which is the

1540
01:03:45,599 --> 01:03:47,760
full analysis on the requirements and

1541
01:03:47,760 --> 01:03:49,440
solutions for

1542
01:03:49,440 --> 01:03:51,200
the usage of

1543
01:03:51,200 --> 01:03:52,960
multi-home multi-graphics networks

1544
01:03:52,960 --> 01:03:55,839
especially for enterprises

1545
01:03:55,839 --> 01:03:57,520
let's say that to grant connectivity

1546
01:03:57,520 --> 01:03:59,599
there we have to

1547
01:03:59,599 --> 01:04:02,559
solve a few issues i would say so we

1548
01:04:02,559 --> 01:04:05,119
have to solve a few problems

1549
01:04:05,119 --> 01:04:08,240
you see they are listed here

1550
01:04:08,240 --> 01:04:10,400
choose the right source address

1551
01:04:10,400 --> 01:04:12,640
choose the right next hope and then

1552
01:04:12,640 --> 01:04:14,319
there is also a third problem which is

1553
01:04:14,319 --> 01:04:17,440
not addressed by our draft but that is

1554
01:04:17,440 --> 01:04:19,920
let's say how to provide cognitive to

1555
01:04:19,920 --> 01:04:23,839
guide connectivity to steer the packets

1556
01:04:23,839 --> 01:04:25,680
across a

1557
01:04:25,680 --> 01:04:29,039
let's say complex topology using source

1558
01:04:29,039 --> 01:04:32,319
addressing source routing

1559
01:04:32,319 --> 01:04:33,680
again if you look at the available

1560
01:04:33,680 --> 01:04:36,319
literature the cases for that are almost

1561
01:04:36,319 --> 01:04:38,079
solved i would say

1562
01:04:38,079 --> 01:04:40,640
there are problems still to be addressed

1563
01:04:40,640 --> 01:04:43,599
but let's say most of the

1564
01:04:43,599 --> 01:04:46,640
mechanisms have been

1565
01:04:46,640 --> 01:04:47,920
addressed

1566
01:04:47,920 --> 01:04:50,240
you see for example 80 28 and again

1567
01:04:50,240 --> 01:04:53,039
86.78

1568
01:04:53,039 --> 01:04:55,359
now for the open cases so we have

1569
01:04:55,359 --> 01:04:57,599
focused our analysis on the role of

1570
01:04:57,599 --> 01:04:59,520
neighbor discovery so

1571
01:04:59,520 --> 01:05:00,799
once again

1572
01:05:00,799 --> 01:05:01,680
uh

1573
01:05:01,680 --> 01:05:03,400
4861

1574
01:05:03,400 --> 01:05:06,640
4862 and the default address selection

1575
01:05:06,640 --> 01:05:08,559
because the mechanism to decide the

1576
01:05:08,559 --> 01:05:10,880
source address and the next

1577
01:05:10,880 --> 01:05:15,240
hope is defined by 6724

1578
01:05:18,319 --> 01:05:20,960
so we have identified two scenarios and

1579
01:05:20,960 --> 01:05:23,200
i'm sorry maybe the terms we have used

1580
01:05:23,200 --> 01:05:24,559
are not probably

1581
01:05:24,559 --> 01:05:25,440
uh

1582
01:05:25,440 --> 01:05:28,240
so widely adopted but let's say

1583
01:05:28,240 --> 01:05:30,480
first scenario is probably the most

1584
01:05:30,480 --> 01:05:31,520
common

1585
01:05:31,520 --> 01:05:32,480
we have

1586
01:05:32,480 --> 01:05:33,520
called it

1587
01:05:33,520 --> 01:05:36,640
equal prefixes so we have two routers we

1588
01:05:36,640 --> 01:05:38,000
can decide

1589
01:05:38,000 --> 01:05:39,920
which one to use depending on the

1590
01:05:39,920 --> 01:05:42,240
specific application so basically if i

1591
01:05:42,240 --> 01:05:44,960
want to to reach a destination on

1592
01:05:44,960 --> 01:05:47,359
internet i can use for example router a

1593
01:05:47,359 --> 01:05:49,440
or router b depending on the addressing

1594
01:05:49,440 --> 01:05:51,920
plan or let's say on the requirements of

1595
01:05:51,920 --> 01:05:53,680
my application

1596
01:05:53,680 --> 01:05:54,960
[Music]

1597
01:05:54,960 --> 01:05:57,520
basically the mechanisms are defined in

1598
01:05:57,520 --> 01:06:01,119
7624 rule 4 rule

1599
01:06:01,119 --> 01:06:05,920
sorry rule 5 or the optional 5.5

1600
01:06:05,920 --> 01:06:08,400
you can also apply the conditional

1601
01:06:08,400 --> 01:06:11,200
appeals for deciding

1602
01:06:11,200 --> 01:06:14,480
um how to if they select the source

1603
01:06:14,480 --> 01:06:15,839
address and

1604
01:06:15,839 --> 01:06:18,240
that they decide okay this is the next

1605
01:06:18,240 --> 01:06:20,720
stop i want to let's say to use for

1606
01:06:20,720 --> 01:06:23,119
connecting to the destination

1607
01:06:23,119 --> 01:06:25,359
okay this is it

1608
01:06:25,359 --> 01:06:28,000
but there is another scenario and

1609
01:06:28,000 --> 01:06:29,760
probably we

1610
01:06:29,760 --> 01:06:32,079
focused on the second one which is the

1611
01:06:32,079 --> 01:06:34,720
one that we called we named

1612
01:06:34,720 --> 01:06:37,200
non-equal prefixes

1613
01:06:37,200 --> 01:06:39,359
uh why that for example because there is

1614
01:06:39,359 --> 01:06:40,799
a special

1615
01:06:40,799 --> 01:06:43,599
case a special requirement to steer the

1616
01:06:43,599 --> 01:06:47,039
traffic for example to a dedicated site

1617
01:06:47,039 --> 01:06:47,920
so

1618
01:06:47,920 --> 01:06:50,720
typically simple wallet garden

1619
01:06:50,720 --> 01:06:52,000
um

1620
01:06:52,000 --> 01:06:54,880
other case well uh we want to steer the

1621
01:06:54,880 --> 01:06:57,119
the packet to reach

1622
01:06:57,119 --> 01:06:59,280
a certain destination through a certain

1623
01:06:59,280 --> 01:07:02,400
gateway because of specific requirements

1624
01:07:02,400 --> 01:07:04,480
for example the

1625
01:07:04,480 --> 01:07:07,520
packet loss or latency provided by one

1626
01:07:07,520 --> 01:07:10,480
of the upstream providers

1627
01:07:10,480 --> 01:07:11,839
how to deal with that in the

1628
01:07:11,839 --> 01:07:15,839
multi-homing multi-prefix case well

1629
01:07:15,839 --> 01:07:18,960
based on our analysis the only solution

1630
01:07:18,960 --> 01:07:21,119
available today is defined here so we

1631
01:07:21,119 --> 01:07:22,559
have to apply

1632
01:07:22,559 --> 01:07:25,839
routing information options and

1633
01:07:25,839 --> 01:07:29,280
let's say some something that could

1634
01:07:29,280 --> 01:07:30,640
change the

1635
01:07:30,640 --> 01:07:34,000
default policy table for example through

1636
01:07:34,000 --> 01:07:38,799
dhcp v6 which is defined by rfc 1778

1637
01:07:38,799 --> 01:07:41,599
to our knowledge this is not so widely

1638
01:07:41,599 --> 01:07:42,720
adopted

1639
01:07:42,720 --> 01:07:43,440
so

1640
01:07:43,440 --> 01:07:46,559
that could create some cases so how to

1641
01:07:46,559 --> 01:07:48,960
solve this issue and we can move to the

1642
01:07:48,960 --> 01:07:50,960
next slide please

1643
01:07:50,960 --> 01:07:53,200
okay

1644
01:07:53,280 --> 01:07:55,200
we have identified

1645
01:07:55,200 --> 01:07:56,880
one potential

1646
01:07:56,880 --> 01:07:59,039
solution but there is probably one

1647
01:07:59,039 --> 01:08:02,079
caveat so one one thing that we

1648
01:08:02,079 --> 01:08:04,240
should pay attention to and i'm pretty

1649
01:08:04,240 --> 01:08:06,319
sure that could also

1650
01:08:06,319 --> 01:08:09,359
raise some concern or some criticism so

1651
01:08:09,359 --> 01:08:10,640
for example

1652
01:08:10,640 --> 01:08:13,039
the idea is that in the

1653
01:08:13,039 --> 01:08:16,319
source address in the the in the

1654
01:08:16,319 --> 01:08:18,799
in the process to decide which is the

1655
01:08:18,799 --> 01:08:21,520
source address to be used by a host

1656
01:08:21,520 --> 01:08:22,319
and

1657
01:08:22,319 --> 01:08:25,198
which is the next op we need to let's

1658
01:08:25,198 --> 01:08:27,520
say to select to reach a certain

1659
01:08:27,520 --> 01:08:30,080
destination well we have to define that

1660
01:08:30,080 --> 01:08:32,799
source address selection comes first

1661
01:08:32,799 --> 01:08:35,759
um i think this

1662
01:08:35,759 --> 01:08:36,719
uh

1663
01:08:36,719 --> 01:08:39,040
could be also taken for granted but

1664
01:08:39,040 --> 01:08:41,040
actually this is not the case so if you

1665
01:08:41,040 --> 01:08:44,719
read across the available uh literature

1666
01:08:44,719 --> 01:08:47,120
this is not always the case there are

1667
01:08:47,120 --> 01:08:47,920
um

1668
01:08:47,920 --> 01:08:50,238
points in indiff scattered across the

1669
01:08:50,238 --> 01:08:54,000
different rfcs where you see that next

1670
01:08:54,000 --> 01:08:55,359
op selection

1671
01:08:55,359 --> 01:08:57,040
comes before

1672
01:08:57,040 --> 01:08:59,759
source address selection

1673
01:08:59,759 --> 01:09:01,839
clearly we are open as i said to

1674
01:09:01,839 --> 01:09:04,560
comments and criticism to this point

1675
01:09:04,560 --> 01:09:06,560
but if we

1676
01:09:06,560 --> 01:09:10,000
let's say take this uh this path so

1677
01:09:10,000 --> 01:09:12,158
we decided source address comes first

1678
01:09:12,158 --> 01:09:14,719
and then we select the next stop

1679
01:09:14,719 --> 01:09:17,600
then we have the possibility to open

1680
01:09:17,600 --> 01:09:20,880
let's say many more

1681
01:09:20,880 --> 01:09:22,399
cases or

1682
01:09:22,399 --> 01:09:24,960
mechanisms to solve

1683
01:09:24,960 --> 01:09:27,920
the connectivity aspect when we are in

1684
01:09:27,920 --> 01:09:29,359
presence of

1685
01:09:29,359 --> 01:09:32,399
specific cases as the world garden or as

1686
01:09:32,399 --> 01:09:34,719
we said before the idea of choosing a

1687
01:09:34,719 --> 01:09:37,520
specific path because of

1688
01:09:37,520 --> 01:09:39,839
let's say application requirements

1689
01:09:39,839 --> 01:09:42,399
next slide

1690
01:09:44,238 --> 01:09:45,839
then we have also to take into

1691
01:09:45,839 --> 01:09:47,839
consideration what happens when we have

1692
01:09:47,839 --> 01:09:49,920
failures so when we lose connectivity

1693
01:09:49,920 --> 01:09:52,640
for example in that case

1694
01:09:52,640 --> 01:09:54,000
let's say to

1695
01:09:54,000 --> 01:09:56,080
to give a solution which is applicable

1696
01:09:56,080 --> 01:09:58,480
to the selection of

1697
01:09:58,480 --> 01:10:01,440
the right source address so to drive the

1698
01:10:01,440 --> 01:10:02,719
traffic through

1699
01:10:02,719 --> 01:10:04,800
let's say the network to reach

1700
01:10:04,800 --> 01:10:06,480
the world and garden

1701
01:10:06,480 --> 01:10:08,560
and to cope with the loss of

1702
01:10:08,560 --> 01:10:11,280
connectivity we are proposing our draft

1703
01:10:11,280 --> 01:10:13,760
some modifications that we believe are

1704
01:10:13,760 --> 01:10:15,280
not so

1705
01:10:15,280 --> 01:10:18,239
let's say impactful on the

1706
01:10:18,239 --> 01:10:21,120
existing rfcs that you see listed here

1707
01:10:21,120 --> 01:10:23,360
so basically the idea is that

1708
01:10:23,360 --> 01:10:25,440
clearly we have to

1709
01:10:25,440 --> 01:10:27,679
to agree upon the fact that

1710
01:10:27,679 --> 01:10:30,880
source address is selected first then we

1711
01:10:30,880 --> 01:10:33,120
move to the selection of the next stop

1712
01:10:33,120 --> 01:10:36,320
this is point number one

1713
01:10:36,320 --> 01:10:38,960
then we can apply something which has

1714
01:10:38,960 --> 01:10:41,120
been already described as i said in

1715
01:10:41,120 --> 01:10:43,679
different rfcs that makes sense in

1716
01:10:43,679 --> 01:10:45,600
dealing with this aspect connected to

1717
01:10:45,600 --> 01:10:48,400
multi-homing multi-projects so clearly

1718
01:10:48,400 --> 01:10:50,640
select a next hope

1719
01:10:50,640 --> 01:10:51,600
um

1720
01:10:51,600 --> 01:10:53,760
that has already announced this source

1721
01:10:53,760 --> 01:10:56,880
let's say the prefix

1722
01:10:56,880 --> 01:10:59,840
to which my source address belongs to

1723
01:10:59,840 --> 01:11:01,199
um

1724
01:11:01,199 --> 01:11:02,000
then

1725
01:11:02,000 --> 01:11:04,640
dealing with the deprecation of the

1726
01:11:04,640 --> 01:11:07,440
prefix information options according to

1727
01:11:07,440 --> 01:11:10,000
the specific case so if we lose for

1728
01:11:10,000 --> 01:11:13,440
example the source prefix accordingly we

1729
01:11:13,440 --> 01:11:16,480
have to inform the internal network that

1730
01:11:16,480 --> 01:11:19,440
something is happening

1731
01:11:19,440 --> 01:11:21,920
touch also some other

1732
01:11:21,920 --> 01:11:23,280
let's say

1733
01:11:23,280 --> 01:11:26,080
rfcs according to the mechanism that we

1734
01:11:26,080 --> 01:11:27,840
are going to define

1735
01:11:27,840 --> 01:11:30,239
basically the idea is that

1736
01:11:30,239 --> 01:11:33,040
for multi-homing multi prefix

1737
01:11:33,040 --> 01:11:35,920
in ipv4 there is a solution which is

1738
01:11:35,920 --> 01:11:38,159
typically based on private addressing

1739
01:11:38,159 --> 01:11:39,600
and net

1740
01:11:39,600 --> 01:11:42,239
and we'd like to also

1741
01:11:42,239 --> 01:11:43,280
find

1742
01:11:43,280 --> 01:11:46,800
a solution to the same issue when ibv6

1743
01:11:46,800 --> 01:11:48,960
is used

1744
01:11:48,960 --> 01:11:50,880
so that we can move to the next slide

1745
01:11:50,880 --> 01:11:52,800
please

1746
01:11:52,800 --> 01:11:54,960
and they said so we are open to any

1747
01:11:54,960 --> 01:11:56,640
comments uh

1748
01:11:56,640 --> 01:11:58,719
feedback even criticism we are very

1749
01:11:58,719 --> 01:11:59,840
happy to

1750
01:11:59,840 --> 01:12:02,239
let's say to listen you

1751
01:12:02,239 --> 01:12:02,560
um

1752
01:12:02,560 --> 01:12:04,000
[Music]

1753
01:12:04,000 --> 01:12:06,880
by the way the analysis open so this is

1754
01:12:06,880 --> 01:12:08,560
version 0 so

1755
01:12:08,560 --> 01:12:11,520
anyone interested could join and

1756
01:12:11,520 --> 01:12:13,679
be also called or

1757
01:12:13,679 --> 01:12:15,920
with us thank you

1758
01:12:15,920 --> 01:12:17,600
any questions

1759
01:12:17,600 --> 01:12:20,239
yes david

1760
01:12:20,239 --> 01:12:21,679
david lampotter

1761
01:12:21,679 --> 01:12:22,480
so

1762
01:12:22,480 --> 01:12:23,520
um

1763
01:12:23,520 --> 01:12:25,679
considering that link local addresses

1764
01:12:25,679 --> 01:12:29,520
are essentially free and abundant um

1765
01:12:29,520 --> 01:12:32,080
i don't see any need to change the

1766
01:12:32,080 --> 01:12:34,159
source address selection

1767
01:12:34,159 --> 01:12:35,120
order

1768
01:12:35,120 --> 01:12:37,520
to select a source address before the

1769
01:12:37,520 --> 01:12:39,520
next stop because

1770
01:12:39,520 --> 01:12:41,440
anything that can be achieved by doing

1771
01:12:41,440 --> 01:12:43,760
that can also be achieved by simply

1772
01:12:43,760 --> 01:12:44,719
adding

1773
01:12:44,719 --> 01:12:47,520
a new link local address on the router

1774
01:12:47,520 --> 01:12:49,520
and choosing that as a next stop and

1775
01:12:49,520 --> 01:12:51,040
then choosing the source address to

1776
01:12:51,040 --> 01:12:53,760
match that so that seems to be a much

1777
01:12:53,760 --> 01:12:56,239
simpler approach

1778
01:12:56,239 --> 01:12:57,040
okay

1779
01:12:57,040 --> 01:12:58,560
so as i said

1780
01:12:58,560 --> 01:13:00,640
i don't expect that everybody agrees of

1781
01:13:00,640 --> 01:13:02,960
course

1782
01:13:03,360 --> 01:13:05,679
let's discuss it

1783
01:13:05,679 --> 01:13:07,120
if you are interested we can have an

1784
01:13:07,120 --> 01:13:09,199
exchange and see why we are proposing

1785
01:13:09,199 --> 01:13:10,640
that

1786
01:13:10,640 --> 01:13:13,040
sorry i'm keeping it simple but just for

1787
01:13:13,040 --> 01:13:14,640
the sake of saving time for other

1788
01:13:14,640 --> 01:13:16,320
questions

1789
01:13:16,320 --> 01:13:19,199
uh eric klein uh no hats i mean i i

1790
01:13:19,199 --> 01:13:21,600
absolutely agree if you have 8801 and

1791
01:13:21,600 --> 01:13:24,960
you generate per per pbd link local

1792
01:13:24,960 --> 01:13:26,320
addresses to announce them you don't

1793
01:13:26,320 --> 01:13:29,760
have any problems here you do have a a

1794
01:13:29,760 --> 01:13:33,440
implement implementation of 8801 is

1795
01:13:33,440 --> 01:13:35,040
you know i don't want to say complex or

1796
01:13:35,040 --> 01:13:36,080
non-trivial but there's a lot to

1797
01:13:36,080 --> 01:13:37,280
consider there and some of those

1798
01:13:37,280 --> 01:13:38,719
considerations are

1799
01:13:38,719 --> 01:13:40,000
some of the things that i saw on the

1800
01:13:40,000 --> 01:13:41,600
slides

1801
01:13:41,600 --> 01:13:43,120
so if you wanted to write a document

1802
01:13:43,120 --> 01:13:45,040
that was maybe more in the style of all

1803
01:13:45,040 --> 01:13:46,560
of the ink that was spilt in the miff

1804
01:13:46,560 --> 01:13:47,679
working group

1805
01:13:47,679 --> 01:13:49,440
that might be helpful for people who

1806
01:13:49,440 --> 01:13:53,280
want to do 8801 but i think 8801 plus

1807
01:13:53,280 --> 01:13:56,719
uh per pvd like local addresses and like

1808
01:13:56,719 --> 01:14:01,719
this is so it's it's done okay

1809
01:14:02,400 --> 01:14:05,040
fernando

1810
01:14:07,760 --> 01:14:09,840
a couple of comments

1811
01:14:09,840 --> 01:14:12,159
now one meta comment is that you know i

1812
01:14:12,159 --> 01:14:13,280
see that

1813
01:14:13,280 --> 01:14:16,560
this document and you know also the the

1814
01:14:16,560 --> 01:14:18,800
previous um document that you had out

1815
01:14:18,800 --> 01:14:19,920
there on

1816
01:14:19,920 --> 01:14:21,520
on prefixes

1817
01:14:21,520 --> 01:14:24,000
uh has a lot of overlap

1818
01:14:24,000 --> 01:14:25,440
with uh

1819
01:14:25,440 --> 01:14:26,320
you know

1820
01:14:26,320 --> 01:14:29,520
work that this very same working group

1821
01:14:29,520 --> 01:14:31,679
is carrying out with a working group

1822
01:14:31,679 --> 01:14:32,960
document

1823
01:14:32,960 --> 01:14:33,840
so

1824
01:14:33,840 --> 01:14:34,719
um

1825
01:14:34,719 --> 01:14:36,640
the work on you know the

1826
01:14:36,640 --> 01:14:40,320
let's say um prefixes that become stale

1827
01:14:40,320 --> 01:14:42,159
is work that has been going on for you

1828
01:14:42,159 --> 01:14:43,840
know about two years a lot of it

1829
01:14:43,840 --> 01:14:45,840
happened in basic shops there's a

1830
01:14:45,840 --> 01:14:48,800
remaining bit in six months which is the

1831
01:14:48,800 --> 01:14:50,800
document that i presented before so what

1832
01:14:50,800 --> 01:14:52,239
i would expect

1833
01:14:52,239 --> 01:14:54,640
is that the associated work with you

1834
01:14:54,640 --> 01:14:56,719
know stale prefixes is you know done in

1835
01:14:56,719 --> 01:14:59,760
that context otherwise it's like redoing

1836
01:14:59,760 --> 01:15:01,600
stuff that the working group is already

1837
01:15:01,600 --> 01:15:04,080
doing in an individual submission

1838
01:15:04,080 --> 01:15:07,040
uh so that's that's one of my comments

1839
01:15:07,040 --> 01:15:09,199
uh the other comment that i have you

1840
01:15:09,199 --> 01:15:10,880
know i i went through the document

1841
01:15:10,880 --> 01:15:13,440
yesterday and i see that this document

1842
01:15:13,440 --> 01:15:15,199
is um

1843
01:15:15,199 --> 01:15:17,440
i don't know if it's mixing things that

1844
01:15:17,440 --> 01:15:19,679
are like you know a topic on their own

1845
01:15:19,679 --> 01:15:22,000
or that is trying to do too much into

1846
01:15:22,000 --> 01:15:24,239
the same document for example i read

1847
01:15:24,239 --> 01:15:26,480
parts where there are discussion about

1848
01:15:26,480 --> 01:15:29,360
the properties of ipv6 addresses like

1849
01:15:29,360 --> 01:15:31,440
you know what are ula is useful for

1850
01:15:31,440 --> 01:15:34,080
that's a topic on its own okay

1851
01:15:34,080 --> 01:15:36,320
uh more than you know a couple of

1852
01:15:36,320 --> 01:15:39,199
paragraphs as part of of this document

1853
01:15:39,199 --> 01:15:41,120
there are other areas where you know the

1854
01:15:41,120 --> 01:15:44,080
document uh you know tries to analyze

1855
01:15:44,080 --> 01:15:45,600
scenarios for which there are

1856
01:15:45,600 --> 01:15:48,159
operational workarounds that's probably

1857
01:15:48,159 --> 01:15:51,280
more for a document for basic shops that

1858
01:15:51,280 --> 01:15:54,320
for six months i would expect

1859
01:15:54,320 --> 01:15:57,199
uh same for you know analyzing gaps

1860
01:15:57,199 --> 01:15:58,880
where there are scenarios that you want

1861
01:15:58,880 --> 01:16:01,040
to support but there's you know nothing

1862
01:16:01,040 --> 01:16:02,560
there to support them probably what

1863
01:16:02,560 --> 01:16:05,120
you'd expect there is a b you know if

1864
01:16:05,120 --> 01:16:07,199
anything a basic subs

1865
01:16:07,199 --> 01:16:09,440
you know document that analyzes the

1866
01:16:09,440 --> 01:16:11,199
cases that you want to you know to

1867
01:16:11,199 --> 01:16:14,080
address analyze the gaps and then do the

1868
01:16:14,080 --> 01:16:16,800
standards uh work

1869
01:16:16,800 --> 01:16:19,440
and then um you know that might require

1870
01:16:19,440 --> 01:16:22,000
a you know a reread on my side but you

1871
01:16:22,000 --> 01:16:25,360
know i i got the impression that

1872
01:16:25,360 --> 01:16:28,480
uh more than uh trying to you know

1873
01:16:28,480 --> 01:16:32,080
tackle the you know the problem in um

1874
01:16:32,080 --> 01:16:34,400
you know in a in a generic way

1875
01:16:34,400 --> 01:16:37,280
there's a lot of analysis of um you know

1876
01:16:37,280 --> 01:16:39,600
super specific scenarios

1877
01:16:39,600 --> 01:16:40,719
uh

1878
01:16:40,719 --> 01:16:43,120
again i might need to read the document

1879
01:16:43,120 --> 01:16:45,920
but i got the impression that uh

1880
01:16:45,920 --> 01:16:48,640
there's a lot of energy being put on

1881
01:16:48,640 --> 01:16:52,400
specific you know cases uh as opposed to

1882
01:16:52,400 --> 01:16:54,400
you know trying to see the broader you

1883
01:16:54,400 --> 01:16:56,640
know picture and figure what's what's

1884
01:16:56,640 --> 01:17:00,199
missing here

1885
01:17:02,000 --> 01:17:04,239
okay thank you but let's say that

1886
01:17:04,239 --> 01:17:06,080
as i said this is version

1887
01:17:06,080 --> 01:17:06,880
so

1888
01:17:06,880 --> 01:17:08,719
could i try to answer this

1889
01:17:08,719 --> 01:17:11,360
because uh for overlap um

1890
01:17:11,360 --> 01:17:13,040
i don't agree because for overlap we

1891
01:17:13,040 --> 01:17:15,199
have really deleted everything which was

1892
01:17:15,199 --> 01:17:16,640
really overlapping the previous draft

1893
01:17:16,640 --> 01:17:18,159
yeah previous draft force it was a big

1894
01:17:18,159 --> 01:17:20,480
overlap your idea but this one we have

1895
01:17:20,480 --> 01:17:22,080
deleted everything which overlapped they

1896
01:17:22,080 --> 01:17:23,679
believe this one is just about

1897
01:17:23,679 --> 01:17:25,440
multi-home multi graphics which is

1898
01:17:25,440 --> 01:17:27,679
specific topic for the reason overlap i

1899
01:17:27,679 --> 01:17:28,880
would not agree

1900
01:17:28,880 --> 01:17:30,400
for mixing things

1901
01:17:30,400 --> 01:17:32,320
maybe yes maybe we need to think more

1902
01:17:32,320 --> 01:17:34,800
about uh your comment that it's mixing

1903
01:17:34,800 --> 01:17:37,199
things it's very complex yeah probably

1904
01:17:37,199 --> 01:17:38,480
probably you're right thanks for your

1905
01:17:38,480 --> 01:17:40,080
comment we'll think about it and

1906
01:17:40,080 --> 01:17:42,400
especially with your comment about ula

1907
01:17:42,400 --> 01:17:44,480
that maybe your late discussion could be

1908
01:17:44,480 --> 01:17:46,080
deleted from here we'll think about it

1909
01:17:46,080 --> 01:17:48,159
maybe maybe maybe really your discussion

1910
01:17:48,159 --> 01:17:49,840
could be deleted from this therefore

1911
01:17:49,840 --> 01:17:52,000
thanks for feedback we think we'll think

1912
01:17:52,000 --> 01:17:54,480
about it

1913
01:17:54,880 --> 01:17:57,120
thank you

1914
01:17:57,199 --> 01:18:00,000
and for eric for eric for eric

1915
01:18:00,000 --> 01:18:02,560
question could i try to answer because

1916
01:18:02,560 --> 01:18:05,679
uh i still believe that rfc 8801

1917
01:18:05,679 --> 01:18:08,080
uh is not enough uh because if we will

1918
01:18:08,080 --> 01:18:10,480
choose not properly initially next cop

1919
01:18:10,480 --> 01:18:14,000
then it would be too late to apply 8800

1920
01:18:14,000 --> 01:18:15,840
we will take it to offline i will

1921
01:18:15,840 --> 01:18:17,840
prepare a long more or less long message

1922
01:18:17,840 --> 01:18:19,840
to the alias and i will try to to

1923
01:18:19,840 --> 01:18:23,679
explain why 8801 is useful only after

1924
01:18:23,679 --> 01:18:27,719
the source address is chosen

1925
01:18:28,239 --> 01:18:31,199
uh genuine cover no hats

1926
01:18:31,199 --> 01:18:33,600
uh i'd like i'd like to second comment

1927
01:18:33,600 --> 01:18:36,880
eric made about pvd because actually itf

1928
01:18:36,880 --> 01:18:38,800
has been trying to solve this whole

1929
01:18:38,800 --> 01:18:41,840
problem for a while i remember we have a

1930
01:18:41,840 --> 01:18:44,960
lot of discussions i remember atf 2016

1931
01:18:44,960 --> 01:18:46,880
and berlin when i saw this discussion

1932
01:18:46,880 --> 01:18:48,239
started right

1933
01:18:48,239 --> 01:18:50,560
and even then it was like

1934
01:18:50,560 --> 01:18:53,040
uh dvd seemed to be like a proper way of

1935
01:18:53,040 --> 01:18:55,840
doing this so maybe if you think for

1936
01:18:55,840 --> 01:18:58,400
some reason mpvd doesn't solve your

1937
01:18:58,400 --> 01:19:00,960
problem the document needs to have

1938
01:19:00,960 --> 01:19:02,880
better problem statement

1939
01:19:02,880 --> 01:19:06,560
explaining why exactly mpvd does not do

1940
01:19:06,560 --> 01:19:07,520
because

1941
01:19:07,520 --> 01:19:09,679
i honestly i rather and i'm still

1942
01:19:09,679 --> 01:19:12,880
confused why you cannot use mpvd and how

1943
01:19:12,880 --> 01:19:15,280
basically switching the order of

1944
01:19:15,280 --> 01:19:16,480
changing

1945
01:19:16,480 --> 01:19:18,640
address selection would help you in this

1946
01:19:18,640 --> 01:19:21,280
particular case right

1947
01:19:21,280 --> 01:19:22,960
uh

1948
01:19:22,960 --> 01:19:25,440
so yeah

1949
01:19:25,679 --> 01:19:28,159
pvd is good enough after the proper

1950
01:19:28,159 --> 01:19:30,560
source address is chosen after this pvd

1951
01:19:30,560 --> 01:19:32,640
is good enough no no problem it's

1952
01:19:32,640 --> 01:19:35,520
compatible to pvd but pvd itself is not

1953
01:19:35,520 --> 01:19:37,679
enough initially we should properly

1954
01:19:37,679 --> 01:19:40,159
choose source address okay we will try

1955
01:19:40,159 --> 01:19:42,400
to explain it in different way and maybe

1956
01:19:42,400 --> 01:19:44,080
longer and okay we'll think how to

1957
01:19:44,080 --> 01:19:45,760
explain it properly why pdg is not

1958
01:19:45,760 --> 01:19:47,199
enough

1959
01:19:47,199 --> 01:19:49,600
yeah so uh edward yeah suggest maybe

1960
01:19:49,600 --> 01:19:51,840
just have a section in the beginning

1961
01:19:51,840 --> 01:19:53,679
saying this is what's going to happen

1962
01:19:53,679 --> 01:19:54,960
with mpvd

1963
01:19:54,960 --> 01:19:57,440
right and this is why it's bad

1964
01:19:57,440 --> 01:19:59,760
and this is a problem with causing and

1965
01:19:59,760 --> 01:20:03,360
how we need a new solution which we do

1966
01:20:03,360 --> 01:20:05,280
what we'd like to achieve right because

1967
01:20:05,280 --> 01:20:06,960
it looks like i'm not the only one

1968
01:20:06,960 --> 01:20:09,520
confused so probably yeah we need to

1969
01:20:09,520 --> 01:20:11,040
clarify

1970
01:20:11,040 --> 01:20:12,719
and as we said already on previous

1971
01:20:12,719 --> 01:20:15,360
previous slide pvd is compatible if we

1972
01:20:15,360 --> 01:20:16,719
will properly choose source address

1973
01:20:16,719 --> 01:20:18,560
first then pvd's compatible previous

1974
01:20:18,560 --> 01:20:20,400
previous slide

1975
01:20:20,400 --> 01:20:21,840
among

1976
01:20:21,840 --> 01:20:24,000
a list of algorithms algorithm which is

1977
01:20:24,000 --> 01:20:27,360
possible to use a previous slide

1978
01:20:27,360 --> 01:20:28,560
pvd is

1979
01:20:28,560 --> 01:20:30,800
applicable it's not a problem to use pvd

1980
01:20:30,800 --> 01:20:33,280
but initially we should choose properly

1981
01:20:33,280 --> 01:20:34,639
source address

1982
01:20:34,639 --> 01:20:37,040
okay we will try to explain it better

1983
01:20:37,040 --> 01:20:39,600
yeah thank you

1984
01:20:40,159 --> 01:20:41,920
thank you

1985
01:20:41,920 --> 01:20:44,000
okay

1986
01:20:44,000 --> 01:20:47,000
uh

1987
01:20:48,770 --> 01:20:51,199
[Music]

1988
01:20:51,199 --> 01:20:57,040
okay cj light a door this floor is yours

1989
01:20:57,040 --> 01:20:59,679
okay this particular slide deck is a

1990
01:20:59,679 --> 01:21:00,960
small one

1991
01:21:00,960 --> 01:21:01,920
um

1992
01:21:01,920 --> 01:21:04,560
go next slide please

1993
01:21:04,560 --> 01:21:06,639
uh of course we know we discussed many

1994
01:21:06,639 --> 01:21:08,719
times already on the alias that there is

1995
01:21:08,719 --> 01:21:10,719
a security problem that any anybody

1996
01:21:10,719 --> 01:21:13,440
could impersonate any other node on the

1997
01:21:13,440 --> 01:21:15,840
link because anybody could claim that

1998
01:21:15,840 --> 01:21:18,800
particular mach ip relationship is his

1999
01:21:18,800 --> 01:21:20,800
his mark and

2000
01:21:20,800 --> 01:21:23,120
in such a way could poison the cash for

2001
01:21:23,120 --> 01:21:24,800
other note especially for router is

2002
01:21:24,800 --> 01:21:28,159
dangerous in d trust model has a general

2003
01:21:28,159 --> 01:21:30,560
discussion how to do this uh in my

2004
01:21:30,560 --> 01:21:32,639
particular draft i have referenced here

2005
01:21:32,639 --> 01:21:34,400
we i have a more detailed really

2006
01:21:34,400 --> 01:21:36,080
detailed discussion how to really poison

2007
01:21:36,080 --> 01:21:38,639
the cache for other node but okay it

2008
01:21:38,639 --> 01:21:40,000
doesn't matter because of course

2009
01:21:40,000 --> 01:21:41,840
everybody understand that if there is no

2010
01:21:41,840 --> 01:21:43,600
encryption then it's possible to

2011
01:21:43,600 --> 01:21:45,679
impersonate other node okay it's a

2012
01:21:45,679 --> 01:21:46,719
problem

2013
01:21:46,719 --> 01:21:48,960
initially it was uh

2014
01:21:48,960 --> 01:21:51,920
believed that ap sec will help help but

2015
01:21:51,920 --> 01:21:54,320
then it has been understood okay

2016
01:21:54,320 --> 01:21:56,560
some for some reasons as a challenge not

2017
01:21:56,560 --> 01:21:59,840
suitable okay fine then uh sand and cga

2018
01:21:59,840 --> 01:22:02,320
has been prepared and it's it's a good

2019
01:22:02,320 --> 01:22:04,400
strong encryption no problem but okay

2020
01:22:04,400 --> 01:22:07,679
nobody accept it again uh and uh i have

2021
01:22:07,679 --> 01:22:10,480
an opinion that ipsec and cga sent has

2022
01:22:10,480 --> 01:22:12,239
not been accepted because it's a key

2023
01:22:12,239 --> 01:22:14,639
management challenge it's

2024
01:22:14,639 --> 01:22:16,400
public key infrastructure management key

2025
01:22:16,400 --> 01:22:18,639
management is a big challenge which is

2026
01:22:18,639 --> 01:22:20,320
of course if you have it it's it's

2027
01:22:20,320 --> 01:22:22,800
excellent but if you don't have it then

2028
01:22:22,800 --> 01:22:25,040
it's not applicable and especially one

2029
01:22:25,040 --> 01:22:27,520
comment about cj initial cga that

2030
01:22:27,520 --> 01:22:29,440
initial cj was not as a separate

2031
01:22:29,440 --> 01:22:31,040
solution it was not possible to use it

2032
01:22:31,040 --> 01:22:32,880
as a separate solution it was a part of

2033
01:22:32,880 --> 01:22:36,560
send it was dependent on send and uh

2034
01:22:36,560 --> 01:22:38,560
just one reminder that initially cj and

2035
01:22:38,560 --> 01:22:41,120
send together uh they they connect

2036
01:22:41,120 --> 01:22:44,080
public key to ip address okay okay

2037
01:22:44,080 --> 01:22:46,719
interface identifier but it's ap address

2038
01:22:46,719 --> 01:22:48,480
uh it was connection within public key

2039
01:22:48,480 --> 01:22:50,719
it was not it was not connection like in

2040
01:22:50,719 --> 01:22:52,800
uh ng protocol between mac address and

2041
01:22:52,800 --> 01:22:55,600
ap address uh what is possible to do

2042
01:22:55,600 --> 01:22:58,880
it's possible to to use the same

2043
01:22:58,880 --> 01:23:00,719
algorithm with the same mechanism which

2044
01:23:00,719 --> 01:23:03,199
has been used in cga but uh it's

2045
01:23:03,199 --> 01:23:06,080
possible to connect mac to ip the

2046
01:23:06,080 --> 01:23:08,239
primary function of nd protocol mac ap

2047
01:23:08,239 --> 01:23:10,320
connection and if

2048
01:23:10,320 --> 01:23:13,280
we will connect mac to ap by this simple

2049
01:23:13,280 --> 01:23:14,320
cga

2050
01:23:14,320 --> 01:23:16,159
even a little bit simplified because in

2051
01:23:16,159 --> 01:23:18,159
this particular document cga is a little

2052
01:23:18,159 --> 01:23:20,000
bit simple simplified for that reason

2053
01:23:20,000 --> 01:23:22,000
it's called cj light but it's in

2054
01:23:22,000 --> 01:23:24,159
principle it's it's the same cga it's

2055
01:23:24,159 --> 01:23:25,760
the same algorithm which is used in

2056
01:23:25,760 --> 01:23:28,480
bitcoin in blockchain and in cga it's

2057
01:23:28,480 --> 01:23:29,920
it's again the same

2058
01:23:29,920 --> 01:23:31,760
and then uh the

2059
01:23:31,760 --> 01:23:33,440
security of ap would be equal to

2060
01:23:33,440 --> 01:23:35,040
security of mac address and mac address

2061
01:23:35,040 --> 01:23:37,199
security is good for some particular

2062
01:23:37,199 --> 01:23:40,159
technology it's good for dot one uh dot

2063
01:23:40,159 --> 01:23:42,800
one x it is good for wi-fi because we

2064
01:23:42,800 --> 01:23:45,440
have encryption and if mac is protected

2065
01:23:45,440 --> 01:23:47,840
by by some layer two technology then ap

2066
01:23:47,840 --> 01:23:49,520
would be the same protected because ap

2067
01:23:49,520 --> 01:23:50,880
would be connected

2068
01:23:50,880 --> 01:23:53,600
by effectively in very secure way

2069
01:23:53,600 --> 01:23:55,360
connected to mac

2070
01:23:55,360 --> 01:23:56,880
to mac address

2071
01:23:56,880 --> 01:23:59,600
next slide please

2072
01:24:01,120 --> 01:24:03,280
how to do it is exactly the same like it

2073
01:24:03,280 --> 01:24:04,960
was for

2074
01:24:04,960 --> 01:24:06,880
very similar very similar not exactly

2075
01:24:06,880 --> 01:24:08,320
the same but very similar like it was

2076
01:24:08,320 --> 01:24:10,880
for cga initially we prepared some block

2077
01:24:10,880 --> 01:24:13,199
of information with uh some some

2078
01:24:13,199 --> 01:24:15,600
information like network name or time

2079
01:24:15,600 --> 01:24:17,600
unknowns or whatever which is needed

2080
01:24:17,600 --> 01:24:19,679
primarily to you know for temporary

2081
01:24:19,679 --> 01:24:22,239
addresses for uh different stable

2082
01:24:22,239 --> 01:24:24,400
addresses for different uh interfaces

2083
01:24:24,400 --> 01:24:25,360
it's uh

2084
01:24:25,360 --> 01:24:28,480
is to to to to be compatible to all

2085
01:24:28,480 --> 01:24:29,360
other

2086
01:24:29,360 --> 01:24:31,760
things which we have for address and

2087
01:24:31,760 --> 01:24:33,840
then we do hash

2088
01:24:33,840 --> 01:24:36,400
connect prefix and mark do hash again

2089
01:24:36,400 --> 01:24:38,320
and after double of hash we are trying

2090
01:24:38,320 --> 01:24:39,440
to

2091
01:24:39,440 --> 01:24:42,000
find uh the hash which will

2092
01:24:42,000 --> 01:24:44,639
will have some number of leading zeros

2093
01:24:44,639 --> 01:24:46,880
uh the draft itself has a discussion how

2094
01:24:46,880 --> 01:24:48,719
many leading zeros is possible and how

2095
01:24:48,719 --> 01:24:51,600
many many leading zeros is more or less

2096
01:24:51,600 --> 01:24:53,760
good security and how and

2097
01:24:53,760 --> 01:24:56,400
it's it's a discussion is more accurate

2098
01:24:56,400 --> 01:24:57,600
in the draft

2099
01:24:57,600 --> 01:24:59,520
how to properly choose number of leading

2100
01:24:59,520 --> 01:25:02,080
zeros but uh if it's not enough then we

2101
01:25:02,080 --> 01:25:05,280
do mining we we change not so change

2102
01:25:05,280 --> 01:25:07,440
something in the initial information and

2103
01:25:07,440 --> 01:25:09,600
loop again and do it again and again and

2104
01:25:09,600 --> 01:25:10,719
it's

2105
01:25:10,719 --> 01:25:12,080
mining but

2106
01:25:12,080 --> 01:25:14,080
if you would like to s

2107
01:25:14,080 --> 01:25:16,560
simple security uh not very strong

2108
01:25:16,560 --> 01:25:18,560
security that mining could be very fast

2109
01:25:18,560 --> 01:25:21,120
it's even possible for iot devices it's

2110
01:25:21,120 --> 01:25:22,800
it's explained in the draft that it's

2111
01:25:22,800 --> 01:25:25,679
possible even for such low compu

2112
01:25:25,679 --> 01:25:28,719
computing power like iot devices

2113
01:25:28,719 --> 01:25:30,239
if you would like something strong which

2114
01:25:30,239 --> 01:25:31,840
would be really protected okay you could

2115
01:25:31,840 --> 01:25:34,320
do mining long or you could use uh

2116
01:25:34,320 --> 01:25:37,280
strong machine even not the node itself

2117
01:25:37,280 --> 01:25:39,360
but you could use some some offline

2118
01:25:39,360 --> 01:25:40,400
computation

2119
01:25:40,400 --> 01:25:42,239
and then you will get some number of

2120
01:25:42,239 --> 01:25:44,880
leading zeros uh the trailing uh beats

2121
01:25:44,880 --> 01:25:48,000
could be used for interface identifier

2122
01:25:48,000 --> 01:25:51,040
uh you could ask question eric

2123
01:25:51,040 --> 01:25:53,280
yeah erin cisco and

2124
01:25:53,280 --> 01:25:55,920
in this case knowledge again

2125
01:25:55,920 --> 01:25:58,080
we are linking again the interface id to

2126
01:25:58,080 --> 01:26:01,120
the mac address are we back to eu64

2127
01:26:01,120 --> 01:26:04,080
problem and lack of privacy

2128
01:26:04,080 --> 01:26:05,760
no no no no because look on this

2129
01:26:05,760 --> 01:26:07,520
particular page it's good that you asked

2130
01:26:07,520 --> 01:26:10,000
right now because look on the upper side

2131
01:26:10,000 --> 01:26:11,520
of the slide you see

2132
01:26:11,520 --> 01:26:13,440
the block which has inside collision

2133
01:26:13,440 --> 01:26:16,080
count net name time nons other

2134
01:26:16,080 --> 01:26:18,400
information if you will put here and

2135
01:26:18,400 --> 01:26:20,000
definitely you will put here enough

2136
01:26:20,000 --> 01:26:21,440
information then

2137
01:26:21,440 --> 01:26:25,760
you will get different of course uh um

2138
01:26:25,760 --> 01:26:28,639
interface identifier for your different

2139
01:26:28,639 --> 01:26:30,880
uh logical interface for your difficult

2140
01:26:30,880 --> 01:26:32,800
physical interface no no we will not

2141
01:26:32,800 --> 01:26:35,040
break anything i have analyzed carefully

2142
01:26:35,040 --> 01:26:37,520
temporary addresses stable addresses

2143
01:26:37,520 --> 01:26:39,840
which are different uh for different

2144
01:26:39,840 --> 01:26:41,920
logical interfaces or different network

2145
01:26:41,920 --> 01:26:43,679
names are still possible it's not a

2146
01:26:43,679 --> 01:26:46,400
problem because it's uh initially you

2147
01:26:46,400 --> 01:26:47,840
will you you will choose different

2148
01:26:47,840 --> 01:26:49,360
information for generation of such

2149
01:26:49,360 --> 01:26:51,760
addresses no problem okay

2150
01:26:51,760 --> 01:26:54,400
thank you eduard another questions now

2151
01:26:54,400 --> 01:26:56,000
maybe you're aware that there is a

2152
01:26:56,000 --> 01:26:58,239
modernist working group then i put my

2153
01:26:58,239 --> 01:27:01,360
ada on again which is about randomized

2154
01:27:01,360 --> 01:27:04,239
and changing mac address

2155
01:27:04,239 --> 01:27:06,880
so typically we will change the mac

2156
01:27:06,880 --> 01:27:09,600
address and as far as i know windows 10

2157
01:27:09,600 --> 01:27:10,480
is

2158
01:27:10,480 --> 01:27:12,159
tend to change the mac address quite

2159
01:27:12,159 --> 01:27:15,599
often during a day even

2160
01:27:16,480 --> 01:27:18,639
okay but it would be like temporary

2161
01:27:18,639 --> 01:27:21,760
addresses if you will choose a low level

2162
01:27:21,760 --> 01:27:23,920
of securities small number of leading

2163
01:27:23,920 --> 01:27:27,360
zeros then generation of new new ip

2164
01:27:27,360 --> 01:27:28,480
address

2165
01:27:28,480 --> 01:27:30,960
new interface identifier would be easy

2166
01:27:30,960 --> 01:27:32,719
and would be fast but yeah it would be

2167
01:27:32,719 --> 01:27:35,280
additional burden uh uh because it's

2168
01:27:35,280 --> 01:27:37,440
additional mining but uh

2169
01:27:37,440 --> 01:27:40,400
it depends uh how difficult um you will

2170
01:27:40,400 --> 01:27:42,639
choose security level how how difficult

2171
01:27:42,639 --> 01:27:44,560
how many number of leading zeros you

2172
01:27:44,560 --> 01:27:46,719
will choose if you will choose a small

2173
01:27:46,719 --> 01:27:48,560
number of leading zeros okay it's not a

2174
01:27:48,560 --> 01:27:50,080
problem

2175
01:27:50,080 --> 01:27:51,520
okay but it's worth mentioning in the

2176
01:27:51,520 --> 01:27:53,040
draft most probably

2177
01:27:53,040 --> 01:27:54,159
yeah it's a good comment it's a good

2178
01:27:54,159 --> 01:27:55,600
comment here thank you

2179
01:27:55,600 --> 01:27:57,760
go next slide please

2180
01:27:57,760 --> 01:28:00,080
for legal host it would be extremely

2181
01:28:00,080 --> 01:28:01,760
easy to

2182
01:28:01,760 --> 01:28:04,239
check that some particular marked ip

2183
01:28:04,239 --> 01:28:06,880
relationship is legal because just one

2184
01:28:06,880 --> 01:28:09,360
hash just one hash based on public

2185
01:28:09,360 --> 01:28:11,840
information and any other host will

2186
01:28:11,840 --> 01:28:14,320
check that okay this combination is

2187
01:28:14,320 --> 01:28:15,199
legal

2188
01:28:15,199 --> 01:28:16,880
go next

2189
01:28:16,880 --> 01:28:19,520
if bad guy will try to break this the

2190
01:28:19,520 --> 01:28:22,159
bad guy what that guy needs the bad guy

2191
01:28:22,159 --> 01:28:25,600
needs uh the same interface identifier

2192
01:28:25,600 --> 01:28:28,239
but for different mac address it means

2193
01:28:28,239 --> 01:28:30,639
he will change something in the source

2194
01:28:30,639 --> 01:28:32,560
initial information then what he need to

2195
01:28:32,560 --> 01:28:35,040
do he need to do mining but in his case

2196
01:28:35,040 --> 01:28:37,120
mining would be much much more difficult

2197
01:28:37,120 --> 01:28:38,800
because in addition to some number of

2198
01:28:38,800 --> 01:28:40,400
leading zeros

2199
01:28:40,400 --> 01:28:43,120
he will need additionally 60 trailing

2200
01:28:43,120 --> 01:28:45,360
particular bits 60 bits at the end

2201
01:28:45,360 --> 01:28:48,000
should be exactly a particular uh

2202
01:28:48,000 --> 01:28:50,480
interface identifier it means that 2

2203
01:28:50,480 --> 01:28:54,480
powered by 60 more hashes it's extremely

2204
01:28:54,480 --> 01:28:56,800
strong additional protection it's again

2205
01:28:56,800 --> 01:28:58,960
analyzed in the draft how strong it is

2206
01:28:58,960 --> 01:29:01,199
and how it's comparable to bitcoin for

2207
01:29:01,199 --> 01:29:03,280
example how fast whole bitcoin network

2208
01:29:03,280 --> 01:29:05,360
could crash this for example how much

2209
01:29:05,360 --> 01:29:08,400
time will be needed okay go next

2210
01:29:08,400 --> 01:29:12,080
uh uh there is a little bit information

2211
01:29:12,080 --> 01:29:13,679
which could be should be distributed

2212
01:29:13,679 --> 01:29:16,560
public information uh one is uh hash

2213
01:29:16,560 --> 01:29:19,440
type and for hash type i'm trying to use

2214
01:29:19,440 --> 01:29:22,719
already defined option uh 39 uh not to

2215
01:29:22,719 --> 01:29:24,480
invent something new of course it's

2216
01:29:24,480 --> 01:29:26,159
possible to invent something new if you

2217
01:29:26,159 --> 01:29:28,639
believe it's it's it's useful but uh my

2218
01:29:28,639 --> 01:29:30,239
initial assumption not to invent

2219
01:29:30,239 --> 01:29:31,360
something new

2220
01:29:31,360 --> 01:29:33,280
uh and additionally

2221
01:29:33,280 --> 01:29:35,920
i need digestive id information which i

2222
01:29:35,920 --> 01:29:39,120
i i am proposing to as a new option is a

2223
01:29:39,120 --> 01:29:43,120
new one additional option go next

2224
01:29:43,120 --> 01:29:47,520
i have analyzed more or less all other

2225
01:29:47,520 --> 01:29:50,800
extensions for nd which we have like

2226
01:29:50,800 --> 01:29:54,880
optimistic nd like uh grant like

2227
01:29:54,880 --> 01:29:57,360
indie proxy like all type of addresses

2228
01:29:57,360 --> 01:29:58,639
and looks like it's compatible to

2229
01:29:58,639 --> 01:30:00,560
everything except a few restrictions

2230
01:30:00,560 --> 01:30:02,719
which is put on this particular slide

2231
01:30:02,719 --> 01:30:04,800
the one restriction because everybody is

2232
01:30:04,800 --> 01:30:06,560
equal in this ecosystem

2233
01:30:06,560 --> 01:30:09,600
uh nobody could be restricted who is

2234
01:30:09,600 --> 01:30:11,520
router who is not router everybody is

2235
01:30:11,520 --> 01:30:14,080
equal and for that reason uh uh it does

2236
01:30:14,080 --> 01:30:16,960
not preclude anybody to claim that he is

2237
01:30:16,960 --> 01:30:19,760
router therefore a regard or a

2238
01:30:19,760 --> 01:30:21,440
is is still needed it's it's not it's

2239
01:30:21,440 --> 01:30:23,520
not a protection against

2240
01:30:23,520 --> 01:30:24,960
route or fake

2241
01:30:24,960 --> 01:30:27,600
it's okay one a comment another comment

2242
01:30:27,600 --> 01:30:28,880
of course is not protection again

2243
01:30:28,880 --> 01:30:30,639
against dosto dudos because anybody

2244
01:30:30,639 --> 01:30:33,600
could generate many uh legal legal

2245
01:30:33,600 --> 01:30:36,480
appealed ap and addresses and then spam

2246
01:30:36,480 --> 01:30:38,400
everybody okay it's ddos is not

2247
01:30:38,400 --> 01:30:40,800
protected of course and there is one

2248
01:30:40,800 --> 01:30:43,040
real case which is really uh could

2249
01:30:43,040 --> 01:30:46,400
happen if a particular legal host is

2250
01:30:46,400 --> 01:30:48,880
disconnected his mark and his ap is not

2251
01:30:48,880 --> 01:30:51,840
available then uh anybody else could try

2252
01:30:51,840 --> 01:30:55,120
to use his mac and his ap address uh and

2253
01:30:55,120 --> 01:30:58,400
if um the low level infrastructure level

2254
01:30:58,400 --> 01:31:01,040
two infrastructure will accept his mac

2255
01:31:01,040 --> 01:31:03,040
address without authentication or with

2256
01:31:03,040 --> 01:31:04,960
maybe breach

2257
01:31:04,960 --> 01:31:06,960
some some problem with uh of

2258
01:31:06,960 --> 01:31:09,760
authentication exists then because he

2259
01:31:09,760 --> 01:31:11,920
will claim the mark and mark is not

2260
01:31:11,920 --> 01:31:13,679
available he will claim ap address

2261
01:31:13,679 --> 01:31:15,360
because he ip address is connected just

2262
01:31:15,360 --> 01:31:17,920
connected to mac and if anybody it's low

2263
01:31:17,920 --> 01:31:20,239
probability because uh server probably

2264
01:31:20,239 --> 01:31:22,639
is always available but for client uh we

2265
01:31:22,639 --> 01:31:25,199
don't so much care that's it okay

2266
01:31:25,199 --> 01:31:28,919
fernando yeah question

2267
01:31:30,560 --> 01:31:33,199
um the goal of this proposal is to

2268
01:31:33,199 --> 01:31:36,560
prevent ip address impersonation or or

2269
01:31:36,560 --> 01:31:39,840
what is specifically

2270
01:31:40,400 --> 01:31:43,040
yes yes

2271
01:31:43,040 --> 01:31:45,280
because now the guy who

2272
01:31:45,280 --> 01:31:48,320
the the pair the pair marked to ip

2273
01:31:48,320 --> 01:31:49,920
address this pair

2274
01:31:49,920 --> 01:31:52,639
could not be claimed by anybody else

2275
01:31:52,639 --> 01:31:54,560
nobody else is capable to say okay this

2276
01:31:54,560 --> 01:31:57,120
particular ap address is mine i have

2277
01:31:57,120 --> 01:32:00,000
different mac mac to ip will be street

2278
01:32:00,000 --> 01:32:02,800
strictly connected uh by cryptographies

2279
01:32:02,800 --> 01:32:04,719
it would not possible to break this

2280
01:32:04,719 --> 01:32:06,400
particular

2281
01:32:06,400 --> 01:32:08,719
connection

2282
01:32:08,719 --> 01:32:10,960
but then you mentioned that for example

2283
01:32:10,960 --> 01:32:14,400
this will obviously not you know uh uh

2284
01:32:14,400 --> 01:32:16,159
so so what are the attacks that you have

2285
01:32:16,159 --> 01:32:17,600
in mind because you are saying that you

2286
01:32:17,600 --> 01:32:19,360
know this will not protect against you

2287
01:32:19,360 --> 01:32:22,159
know uh for example a node claiming raw

2288
01:32:22,159 --> 01:32:23,920
generation

2289
01:32:23,920 --> 01:32:26,639
to slide two

2290
01:32:26,639 --> 01:32:28,239
slide two

2291
01:32:28,239 --> 01:32:29,040
yeah

2292
01:32:29,040 --> 01:32:29,920
two

2293
01:32:29,920 --> 01:32:32,159
on the slide two on the left side we

2294
01:32:32,159 --> 01:32:34,639
have a discussion section 4.1 from

2295
01:32:34,639 --> 01:32:37,920
antitrust model and in my draft i have

2296
01:32:37,920 --> 01:32:39,600
more detailed discussion how to

2297
01:32:39,600 --> 01:32:42,159
particular uh poison the cache for any

2298
01:32:42,159 --> 01:32:44,880
other node and this is against this this

2299
01:32:44,880 --> 01:32:47,120
is against poisoning of the cache of

2300
01:32:47,120 --> 01:32:48,880
other node because on the other node we

2301
01:32:48,880 --> 01:32:51,520
could claim uh that this particular ip

2302
01:32:51,520 --> 01:32:52,639
address is

2303
01:32:52,639 --> 01:32:54,480
connected to different mark and then

2304
01:32:54,480 --> 01:32:58,559
would be middle men in the middle attack

2305
01:32:59,120 --> 01:33:02,000
yeah so in general you know the idea of

2306
01:33:02,000 --> 01:33:04,560
tying identifiers um you know from

2307
01:33:04,560 --> 01:33:07,040
different layers uh together has

2308
01:33:07,040 --> 01:33:10,159
generally proved to bring problems you

2309
01:33:10,159 --> 01:33:12,960
know unless you really need that

2310
01:33:12,960 --> 01:33:14,960
so it's entangled things that they don't

2311
01:33:14,960 --> 01:33:17,199
really need to be entangled if you want

2312
01:33:17,199 --> 01:33:18,960
to you know

2313
01:33:18,960 --> 01:33:20,800
in a way you know when we moved away

2314
01:33:20,800 --> 01:33:23,120
from eui 64 it had to do with that like

2315
01:33:23,120 --> 01:33:25,199
two identifiers from different layers

2316
01:33:25,199 --> 01:33:27,360
tied together that they shouldn't

2317
01:33:27,360 --> 01:33:30,320
that aside you know if in the same way

2318
01:33:30,320 --> 01:33:32,960
you need are a guard anyway why would

2319
01:33:32,960 --> 01:33:36,080
you uh for example bother implementing

2320
01:33:36,080 --> 01:33:37,679
this as opposed to

2321
01:33:37,679 --> 01:33:40,800
using nd inspection for example part of

2322
01:33:40,800 --> 01:33:43,520
first hop security

2323
01:33:43,520 --> 01:33:45,199
um ndx

2324
01:33:45,199 --> 01:33:47,920
inspection like savvy for example is

2325
01:33:47,920 --> 01:33:51,360
good yeah but but it's supported just by

2326
01:33:51,360 --> 01:33:53,040
a couple of switches i mean just one

2327
01:33:53,040 --> 01:33:55,360
vendor couple of switches it's it has a

2328
01:33:55,360 --> 01:33:58,639
really low acceptance by the market

2329
01:33:58,639 --> 01:34:00,480
yeah but you need a regard anyway

2330
01:34:00,480 --> 01:34:01,679
because you know

2331
01:34:01,679 --> 01:34:04,000
in that case i i could you know as an

2332
01:34:04,000 --> 01:34:06,159
article spoofer router so if you don't

2333
01:34:06,159 --> 01:34:08,320
have a guard i can attack you anyway so

2334
01:34:08,320 --> 01:34:12,480
no no a regard is very simple uh it's uh

2335
01:34:12,480 --> 01:34:14,639
it's not so complex like uh

2336
01:34:14,639 --> 01:34:15,679
you'll do

2337
01:34:15,679 --> 01:34:17,920
of course if you will do nd snooping in

2338
01:34:17,920 --> 01:34:19,760
this looping full and disturbing like

2339
01:34:19,760 --> 01:34:22,159
saudi uh of course uh then you could

2340
01:34:22,159 --> 01:34:23,440
trace who is

2341
01:34:23,440 --> 01:34:24,880
who is connected to which particular

2342
01:34:24,880 --> 01:34:26,639
port and uh you could you could keep

2343
01:34:26,639 --> 01:34:28,960
security uh but arrayguard is much

2344
01:34:28,960 --> 01:34:31,920
simpler i mean uh regard you typically

2345
01:34:31,920 --> 01:34:34,080
point one point and say okay on this one

2346
01:34:34,080 --> 01:34:36,080
port check that the icmp does not have

2347
01:34:36,080 --> 01:34:38,800
array and that's it uh it's it's very

2348
01:34:38,800 --> 01:34:41,360
simple every switch supported but not

2349
01:34:41,360 --> 01:34:43,520
every switch support in this snooping

2350
01:34:43,520 --> 01:34:45,199
and for that reason this particular

2351
01:34:45,199 --> 01:34:47,760
indeed rust model section 4.1 is still

2352
01:34:47,760 --> 01:34:50,480
not protected

2353
01:34:52,480 --> 01:34:54,799
okay

2354
01:34:56,560 --> 01:34:58,639
the big principal difference here is

2355
01:34:58,639 --> 01:34:59,760
only one

2356
01:34:59,760 --> 01:35:02,560
initially cga and send where connecting

2357
01:35:02,560 --> 01:35:03,679
public key

2358
01:35:03,679 --> 01:35:06,719
to uh ip address here is connection

2359
01:35:06,719 --> 01:35:08,560
marked to ap address and for that reason

2360
01:35:08,560 --> 01:35:10,000
there is no need for public key

2361
01:35:10,000 --> 01:35:11,600
infrastructure there is no need for key

2362
01:35:11,600 --> 01:35:13,199
management and for that reason

2363
01:35:13,199 --> 01:35:15,199
acceptance probability by the by the

2364
01:35:15,199 --> 01:35:18,480
market is much higher

2365
01:35:21,199 --> 01:35:24,839
that's it for my side

2366
01:35:28,639 --> 01:35:32,000
okay uh actually

2367
01:35:32,000 --> 01:35:34,320
uh i put myself in the queue

2368
01:35:34,320 --> 01:35:37,280
uh jalenkova now heads

2369
01:35:37,280 --> 01:35:39,199
i'm not actually exactly clear why

2370
01:35:39,199 --> 01:35:41,440
you're saying it's only for disconnected

2371
01:35:41,440 --> 01:35:43,760
node an attack could happen what would

2372
01:35:43,760 --> 01:35:46,880
prevent an attacker to claim

2373
01:35:46,880 --> 01:35:50,239
mac address and ipv6 address while mold

2374
01:35:50,239 --> 01:35:51,760
is still connected

2375
01:35:51,760 --> 01:35:53,600
because if

2376
01:35:53,600 --> 01:35:55,840
it's partially true but okay if if

2377
01:35:55,840 --> 01:35:58,080
particular layer two infrastructure has

2378
01:35:58,080 --> 01:36:00,400
two nodes which claim the same mac

2379
01:36:00,400 --> 01:36:01,440
address

2380
01:36:01,440 --> 01:36:03,679
would be flapping and in this flapping

2381
01:36:03,679 --> 01:36:05,040
of course you could catch some some

2382
01:36:05,040 --> 01:36:07,920
packets in this particular flapping but

2383
01:36:07,920 --> 01:36:10,239
it's a layer two problem if you have in

2384
01:36:10,239 --> 01:36:12,400
some particular layer to the main domain

2385
01:36:12,400 --> 01:36:13,119
uh

2386
01:36:13,119 --> 01:36:14,960
it's it's not normal situation anyway

2387
01:36:14,960 --> 01:36:17,840
for layer two if two addresses connected

2388
01:36:17,840 --> 01:36:19,679
to one layer to infrastructure for that

2389
01:36:19,679 --> 01:36:24,400
reason uh it's its problem anyway

2390
01:36:24,400 --> 01:36:26,080
so basically you're saying you would be

2391
01:36:26,080 --> 01:36:28,719
you would rely on monitoring and

2392
01:36:28,719 --> 01:36:30,560
alerting in this case to the techno

2393
01:36:30,560 --> 01:36:32,400
attack but it's not actually prevented

2394
01:36:32,400 --> 01:36:33,760
right

2395
01:36:33,760 --> 01:36:35,360
um

2396
01:36:35,360 --> 01:36:37,360
you could say this way yeah but

2397
01:36:37,360 --> 01:36:39,280
maybe not just this way because

2398
01:36:39,280 --> 01:36:40,400
um

2399
01:36:40,400 --> 01:36:42,400
additionally it's flapping i mean

2400
01:36:42,400 --> 01:36:44,560
interface mac address and interface

2401
01:36:44,560 --> 01:36:46,719
would be up and down up and down because

2402
01:36:46,719 --> 01:36:48,480
uh mac address would be duplicated

2403
01:36:48,480 --> 01:36:51,360
duplicate mac address will not permit

2404
01:36:51,360 --> 01:36:53,440
the host to operate anyway the host

2405
01:36:53,440 --> 01:36:56,320
probably uh will call support and ask

2406
01:36:56,320 --> 01:37:00,559
for support because he could not work

2407
01:37:00,800 --> 01:37:03,520
well i guess in many cases scenario is

2408
01:37:03,520 --> 01:37:05,920
stolen addresses also can be detected by

2409
01:37:05,920 --> 01:37:08,400
monitoring and complaints yeah but i

2410
01:37:08,400 --> 01:37:09,360
guess

2411
01:37:09,360 --> 01:37:11,040
uh we are talking about preventing the

2412
01:37:11,040 --> 01:37:13,760
attack instead of like reaction to it so

2413
01:37:13,760 --> 01:37:16,719
actually my second question is

2414
01:37:16,719 --> 01:37:19,360
if your hosts are kind of in untrusted

2415
01:37:19,360 --> 01:37:21,840
domain and you don't trust them wouldn't

2416
01:37:21,840 --> 01:37:24,159
it be better just perform where to

2417
01:37:24,159 --> 01:37:26,639
isolation and

2418
01:37:26,639 --> 01:37:28,719
solve this problem

2419
01:37:28,719 --> 01:37:31,040
forever but if your whole succession is

2420
01:37:31,040 --> 01:37:32,719
the same broadcast they're kind of in

2421
01:37:32,719 --> 01:37:35,199
the same trust zone from security

2422
01:37:35,199 --> 01:37:37,679
perspective so i'm not sure how big the

2423
01:37:37,679 --> 01:37:39,199
problem was actually in

2424
01:37:39,199 --> 01:37:41,760
like real life

2425
01:37:41,760 --> 01:37:44,159
in majority of cases in the real life

2426
01:37:44,159 --> 01:37:46,560
wi-fi for example or azernet switching

2427
01:37:46,560 --> 01:37:48,719
infrastructure data center

2428
01:37:48,719 --> 01:37:51,040
enterprise whatever we typically don't

2429
01:37:51,040 --> 01:37:53,679
have isolation on at layer 2 typically

2430
01:37:53,679 --> 01:37:56,320
1v1 for example everybody could connect

2431
01:37:56,320 --> 01:37:58,880
to everybody um

2432
01:37:58,880 --> 01:38:01,119
i'm not sure how many probably very

2433
01:38:01,119 --> 01:38:03,920
small number of uh cases we have in the

2434
01:38:03,920 --> 01:38:05,199
world that people

2435
01:38:05,199 --> 01:38:07,360
really implement something like private

2436
01:38:07,360 --> 01:38:09,760
vlan for example or filtering on on

2437
01:38:09,760 --> 01:38:12,080
wi-fi yeah it's possible it's possible

2438
01:38:12,080 --> 01:38:16,000
to restrict that only um wi-fi station

2439
01:38:16,000 --> 01:38:18,239
could uh go only to uplink it's not

2440
01:38:18,239 --> 01:38:20,960
possible to uh to send pocket from

2441
01:38:20,960 --> 01:38:22,960
one wi-fi station to another wi-fi

2442
01:38:22,960 --> 01:38:24,400
station it's possible it's possible to

2443
01:38:24,400 --> 01:38:26,480
do filtering but typically it is not

2444
01:38:26,480 --> 01:38:28,639
done typically uh especially in data

2445
01:38:28,639 --> 01:38:30,800
center but in enterprise networks

2446
01:38:30,800 --> 01:38:32,320
typically it's possible

2447
01:38:32,320 --> 01:38:34,320
inside one view and everybody connect

2448
01:38:34,320 --> 01:38:36,719
everybody

2449
01:38:38,000 --> 01:38:42,400
okay uh thank you so any other comments

2450
01:38:42,400 --> 01:38:44,800
from the room or from remote

2451
01:38:44,800 --> 01:38:47,520
participants

2452
01:38:48,719 --> 01:38:51,440
okay so i guess we shall continue that

2453
01:38:51,440 --> 01:38:54,480
discussion on the list

2454
01:38:54,480 --> 01:38:56,840
and thank you

2455
01:38:56,840 --> 01:38:59,920
edward you

2456
01:38:59,920 --> 01:39:02,639
okay the next presentation

2457
01:39:02,639 --> 01:39:05,040
is expert of

2458
01:39:05,040 --> 01:39:09,040
segment writing information in 86. okay

2459
01:39:09,040 --> 01:39:10,840
let me get the

2460
01:39:10,840 --> 01:39:13,360
slides perfect

2461
01:39:13,360 --> 01:39:16,480
good afternoon everybody

2462
01:39:18,080 --> 01:39:20,560
thomascraft swisscom on behalf of the

2463
01:39:20,560 --> 01:39:22,960
outdoors

2464
01:39:23,119 --> 01:39:25,920
this is about enabling insight in srvs6

2465
01:39:25,920 --> 01:39:28,159
forwarding plane by adding segment

2466
01:39:28,159 --> 01:39:31,040
routing dimensions in ipfix thomas may i

2467
01:39:31,040 --> 01:39:32,719
ask you to be close to the mic or just

2468
01:39:32,719 --> 01:39:35,360
hold it because i suspect people remote

2469
01:39:35,360 --> 01:39:37,280
might when you turn around

2470
01:39:37,280 --> 01:39:39,600
people might hear you okay thanks a lot

2471
01:39:39,600 --> 01:39:42,480
next slide please

2472
01:39:42,800 --> 01:39:44,480
so uh

2473
01:39:44,480 --> 01:39:46,480
speaking as a network operator and

2474
01:39:46,480 --> 01:39:48,560
looking back from a migration between

2475
01:39:48,560 --> 01:39:51,040
mpls and then pssr

2476
01:39:51,040 --> 01:39:54,159
we we know that data plane visibility is

2477
01:39:54,159 --> 01:39:56,800
very important during migration

2478
01:39:56,800 --> 01:39:57,679
and

2479
01:39:57,679 --> 01:40:00,560
currently it's missing in srv6 and we're

2480
01:40:00,560 --> 01:40:03,760
trying to address that in this document

2481
01:40:03,760 --> 01:40:06,960
we want to see as a network operator

2482
01:40:06,960 --> 01:40:09,679
how much traffic and if traffic is being

2483
01:40:09,679 --> 01:40:12,639
forwarded or dropped towards a segment

2484
01:40:12,639 --> 01:40:14,320
identifier

2485
01:40:14,320 --> 01:40:16,800
we understood that currently srv6 is

2486
01:40:16,800 --> 01:40:18,480
already being deployed by network

2487
01:40:18,480 --> 01:40:20,880
operators and also the first

2488
01:40:20,880 --> 01:40:21,760
ones

2489
01:40:21,760 --> 01:40:24,239
started to do migrations from mpls to

2490
01:40:24,239 --> 01:40:26,639
srv6

2491
01:40:26,639 --> 01:40:27,920
the main

2492
01:40:27,920 --> 01:40:30,159
data is coming from the

2493
01:40:30,159 --> 01:40:32,080
segment routing header which is defined

2494
01:40:32,080 --> 01:40:36,080
in section 2 of rfc 8754.

2495
01:40:36,080 --> 01:40:38,800
slide please

2496
01:40:38,960 --> 01:40:41,280
so the elements coming from the sra

2497
01:40:41,280 --> 01:40:43,840
chatter are for instance the segments

2498
01:40:43,840 --> 01:40:46,320
left field the the tag field and the

2499
01:40:46,320 --> 01:40:47,840
flex field

2500
01:40:47,840 --> 01:40:50,159
while other informations for instance

2501
01:40:50,159 --> 01:40:54,159
the srh active segment ipv6 type is

2502
01:40:54,159 --> 01:40:56,320
basically describing from which routing

2503
01:40:56,320 --> 01:40:59,119
protocol the active segment is coming

2504
01:40:59,119 --> 01:41:00,080
from

2505
01:41:00,080 --> 01:41:03,199
while the srh segment locate the length

2506
01:41:03,199 --> 01:41:06,080
and the srh segment endpoint behavior

2507
01:41:06,080 --> 01:41:08,400
also are information

2508
01:41:08,400 --> 01:41:11,119
coming from the the control plane

2509
01:41:11,119 --> 01:41:13,840
basically describing uh the

2510
01:41:13,840 --> 01:41:15,360
additionally that

2511
01:41:15,360 --> 01:41:19,040
the segment routing the srv6 dimensions

2512
01:41:19,040 --> 01:41:21,760
next slide please

2513
01:41:21,760 --> 01:41:24,159
there are different ways how to expose

2514
01:41:24,159 --> 01:41:26,400
the the segment lists

2515
01:41:26,400 --> 01:41:29,440
one is by doing the decomposition on the

2516
01:41:29,440 --> 01:41:31,920
the network node with the srh segment

2517
01:41:31,920 --> 01:41:36,239
ipv6 basic list and sfh segment

2518
01:41:36,239 --> 01:41:38,000
ipv6

2519
01:41:38,000 --> 01:41:40,080
while the other possibility is to

2520
01:41:40,080 --> 01:41:42,639
maintain uh the the

2521
01:41:42,639 --> 01:41:45,440
the seat list completely and expose it

2522
01:41:45,440 --> 01:41:48,719
in one element in the srh segment ipv6

2523
01:41:48,719 --> 01:41:51,600
list section while the last possibility

2524
01:41:51,600 --> 01:41:54,719
is actually to expose the entire

2525
01:41:54,719 --> 01:41:59,040
sfh header in the srh section ipv6

2526
01:41:59,040 --> 01:42:01,520
depending uh which

2527
01:42:01,520 --> 01:42:03,600
solution is being chosen there are

2528
01:42:03,600 --> 01:42:05,920
different implications especially in

2529
01:42:05,920 --> 01:42:08,000
terms of uh scalability which are

2530
01:42:08,000 --> 01:42:09,440
described in the operational

2531
01:42:09,440 --> 01:42:12,320
consideration section

2532
01:42:12,320 --> 01:42:14,639
next slide please

2533
01:42:14,639 --> 01:42:16,320
uh this draft was already being

2534
01:42:16,320 --> 01:42:19,679
presented at itf 113 to spring and ops

2535
01:42:19,679 --> 01:42:23,440
awg we received various feedbacks uh we

2536
01:42:23,440 --> 01:42:25,840
all addressed already all open issues

2537
01:42:25,840 --> 01:42:28,400
and also double checked the ir

2538
01:42:28,400 --> 01:42:32,159
consideration section with ipfix doctors

2539
01:42:32,159 --> 01:42:34,800
we added a request also uh in the

2540
01:42:34,800 --> 01:42:37,600
operational consideration section uh a

2541
01:42:37,600 --> 01:42:40,800
section how to decompose uh the segment

2542
01:42:40,800 --> 01:42:42,960
list uh

2543
01:42:42,960 --> 01:42:45,440
when compressed cities uh

2544
01:42:45,440 --> 01:42:48,480
is being used and we added therefore the

2545
01:42:48,480 --> 01:42:51,280
sh segment locator length and the srh

2546
01:42:51,280 --> 01:42:54,400
segment endpoint behavior in the draft

2547
01:42:54,400 --> 01:42:57,119
we aligned the naming uh for of the

2548
01:42:57,119 --> 01:42:59,119
ipfix entities

2549
01:42:59,119 --> 01:43:02,000
uh from the rfc 1712

2550
01:43:02,000 --> 01:43:06,239
updated the srh flex ipv6 registry

2551
01:43:06,239 --> 01:43:09,360
and com have now in the

2552
01:43:09,360 --> 01:43:12,480
addendum section examples for

2553
01:43:12,480 --> 01:43:14,560
all the different data template option

2554
01:43:14,560 --> 01:43:17,360
tablets and data records

2555
01:43:17,360 --> 01:43:19,199
next slide please

2556
01:43:19,199 --> 01:43:22,000
so the next step is

2557
01:43:22,000 --> 01:43:23,840
we have currently two major vendors

2558
01:43:23,840 --> 01:43:25,760
which uh validate the technical

2559
01:43:25,760 --> 01:43:27,679
feasibility and working on

2560
01:43:27,679 --> 01:43:29,440
implementations

2561
01:43:29,440 --> 01:43:32,400
insert university in lyon is working on

2562
01:43:32,400 --> 01:43:35,119
earning open source code in vpp

2563
01:43:35,119 --> 01:43:38,080
we will be able to show that at idf 115

2564
01:43:38,080 --> 01:43:39,679
hackathon

2565
01:43:39,679 --> 01:43:41,760
we others believe that the document

2566
01:43:41,760 --> 01:43:42,639
should

2567
01:43:42,639 --> 01:43:45,360
progress quickly through itf to avoid

2568
01:43:45,360 --> 01:43:47,440
private enterprise code points being

2569
01:43:47,440 --> 01:43:50,480
used in srv6 deployments and therefore

2570
01:43:50,480 --> 01:43:54,639
requested at itf 113 at oops awg

2571
01:43:54,639 --> 01:43:56,800
adoption

2572
01:43:56,800 --> 01:44:01,880
looking forward for comments feedback

2573
01:44:07,119 --> 01:44:09,599
anyone

2574
01:44:09,760 --> 01:44:11,280
oh

2575
01:44:11,280 --> 01:44:14,719
eric you like to say something

2576
01:44:16,880 --> 01:44:18,719
i guess i just wanted to ask to be clear

2577
01:44:18,719 --> 01:44:21,679
you're not proposing any changes to 85

2578
01:44:21,679 --> 01:44:23,199
87 54.

2579
01:44:23,199 --> 01:44:24,960
correct there are no changes we are

2580
01:44:24,960 --> 01:44:28,159
proposing changes to action to rfc 1711

2581
01:44:28,159 --> 01:44:31,119
which is ipv6

2582
01:44:32,480 --> 01:44:35,280
okay so i see no comments here and i

2583
01:44:35,280 --> 01:44:37,600
guess just for information right so no

2584
01:44:37,600 --> 01:44:39,679
action requested from this group except

2585
01:44:39,679 --> 01:44:40,480
for

2586
01:44:40,480 --> 01:44:41,920
i guess review comments will be

2587
01:44:41,920 --> 01:44:44,239
appreciated if you are interested

2588
01:44:44,239 --> 01:44:46,840
okay thank you very much

2589
01:44:46,840 --> 01:44:50,880
okay and apology identifiers in

2590
01:44:50,880 --> 01:44:53,760
extension header

2591
01:44:55,300 --> 01:44:58,449
[Music]

2592
01:45:00,239 --> 01:45:02,800
hello can you hear me

2593
01:45:02,800 --> 01:45:04,159
yes we

2594
01:45:04,159 --> 01:45:06,719
can hear you i'm just i'm starting

2595
01:45:06,719 --> 01:45:08,080
sharing your

2596
01:45:08,080 --> 01:45:11,080
slides

2597
01:45:19,600 --> 01:45:21,600
okay

2598
01:45:21,600 --> 01:45:22,480
uh

2599
01:45:22,480 --> 01:45:25,520
this document is about carry corporate

2600
01:45:25,520 --> 01:45:31,040
to identify in ibv6 extension header

2601
01:45:31,040 --> 01:45:34,080
next page please

2602
01:45:36,400 --> 01:45:38,480
amity and flash echo

2603
01:45:38,480 --> 01:45:41,760
can generate multiplayer loading plays

2604
01:45:41,760 --> 01:45:43,280
currently

2605
01:45:43,280 --> 01:45:46,480
to distinguish different looting planes

2606
01:45:46,480 --> 01:45:48,560
empty and flare goals

2607
01:45:48,560 --> 01:45:51,199
are mainly identified using different

2608
01:45:51,199 --> 01:45:54,080
iph in that packet

2609
01:45:54,080 --> 01:45:57,280
we need to plan different ipad chassis

2610
01:45:57,280 --> 01:46:00,880
for each mt and flash lego

2611
01:46:00,880 --> 01:46:03,360
which increases the network development

2612
01:46:03,360 --> 01:46:05,280
complexity

2613
01:46:05,280 --> 01:46:08,320
the igp protocol needs to advise more

2614
01:46:08,320 --> 01:46:11,920
ips gses which also brings capability

2615
01:46:11,920 --> 01:46:13,760
problems

2616
01:46:13,760 --> 01:46:16,639
the application of network slicing

2617
01:46:16,639 --> 01:46:18,480
also increases

2618
01:46:18,480 --> 01:46:19,679
the number

2619
01:46:19,679 --> 01:46:23,520
of empty and fresh eggs in the network

2620
01:46:23,520 --> 01:46:26,639
which increases the impact on the

2621
01:46:26,639 --> 01:46:28,560
network

2622
01:46:28,560 --> 01:46:30,719
because an interface may belong to

2623
01:46:30,719 --> 01:46:34,000
multi-play enmity of less lego this

2624
01:46:34,000 --> 01:46:36,239
problem cannot be slowed

2625
01:46:36,239 --> 01:46:37,600
slowed by

2626
01:46:37,600 --> 01:46:39,840
associate associating separate

2627
01:46:39,840 --> 01:46:41,520
interfaces

2628
01:46:41,520 --> 01:46:44,639
with different mt and threshers

2629
01:46:44,639 --> 01:46:47,360
this document introduced introduces a

2630
01:46:47,360 --> 01:46:49,360
general approach

2631
01:46:49,360 --> 01:46:50,639
to oral

2632
01:46:50,639 --> 01:46:53,360
prolonged different empty of life cycles

2633
01:46:53,360 --> 01:46:55,840
to share ips chassis

2634
01:46:55,840 --> 01:46:58,480
a new hobart hub option

2635
01:46:58,480 --> 01:47:02,080
of ibv6 extensions header is defined to

2636
01:47:02,080 --> 01:47:04,719
carry certain identifier

2637
01:47:04,719 --> 01:47:07,119
which is used to identify the following

2638
01:47:07,119 --> 01:47:09,119
table instance

2639
01:47:09,119 --> 01:47:13,840
grade created for mt of las ego

2640
01:47:13,840 --> 01:47:16,800
next page please

2641
01:47:19,199 --> 01:47:22,800
this is example for publish identify

2642
01:47:22,800 --> 01:47:24,320
in this scenario

2643
01:47:24,320 --> 01:47:26,320
links which different

2644
01:47:26,320 --> 01:47:30,400
colors belong to different flash angles

2645
01:47:30,400 --> 01:47:34,159
green for flight center 128 blue 4 flags

2646
01:47:34,159 --> 01:47:34,840
of

2647
01:47:34,840 --> 01:47:40,040
129 led for flash of 130

2648
01:47:40,159 --> 01:47:42,719
all flash circles share the same node

2649
01:47:42,719 --> 01:47:44,719
ipfcs

2650
01:47:44,719 --> 01:47:46,960
for each flash angle each node

2651
01:47:46,960 --> 01:47:51,199
calculations at an spf2 independently

2652
01:47:51,199 --> 01:47:53,760
and generates an independent

2653
01:47:53,760 --> 01:47:56,320
leave of feed

2654
01:47:56,320 --> 01:47:59,880
let's pay please

2655
01:48:04,320 --> 01:48:07,440
this document introduced a new hobbyhop

2656
01:48:07,440 --> 01:48:08,400
option

2657
01:48:08,400 --> 01:48:12,320
which carries top publish identify

2658
01:48:12,320 --> 01:48:15,360
each top each topic identifies mapping

2659
01:48:15,360 --> 01:48:16,840
to a folding

2660
01:48:16,840 --> 01:48:20,880
table top bridge identifier is inca

2661
01:48:20,880 --> 01:48:22,719
in case in case field

2662
01:48:22,719 --> 01:48:24,800
on the head header node

2663
01:48:24,800 --> 01:48:27,199
the mid node makes the folding table

2664
01:48:27,199 --> 01:48:28,480
selection

2665
01:48:28,480 --> 01:48:30,320
based on the forward

2666
01:48:30,320 --> 01:48:33,119
based on the topic

2667
01:48:33,119 --> 01:48:34,800
in capsule

2668
01:48:34,800 --> 01:48:38,239
this look then look up the folding table

2669
01:48:38,239 --> 01:48:41,440
and send the package

2670
01:48:42,159 --> 01:48:45,799
next page please

2671
01:48:48,560 --> 01:48:50,480
any comments are welcome

2672
01:48:50,480 --> 01:48:52,799
thank you

2673
01:48:57,840 --> 01:48:59,679
peter

2674
01:48:59,679 --> 01:49:03,199
you're first in the queue i guess

2675
01:49:05,360 --> 01:49:08,719
speed option cisco so

2676
01:49:08,719 --> 01:49:11,679
when we designed the flexalgo technology

2677
01:49:11,679 --> 01:49:14,800
as such one of the strong requirements

2678
01:49:14,800 --> 01:49:15,679
was

2679
01:49:15,679 --> 01:49:18,800
not to require any specific data

2680
01:49:18,800 --> 01:49:20,719
in the packet

2681
01:49:20,719 --> 01:49:22,639
we tied the flex algo with the

2682
01:49:22,639 --> 01:49:24,560
forwarding construct in a packet which

2683
01:49:24,560 --> 01:49:27,440
is either srm pls label or an ip address

2684
01:49:27,440 --> 01:49:31,040
itself which is the srv6 case or ipl go

2685
01:49:31,040 --> 01:49:32,080
case

2686
01:49:32,080 --> 01:49:34,560
so what you are trying to do here goes

2687
01:49:34,560 --> 01:49:36,320
completely opposite what we are trying

2688
01:49:36,320 --> 01:49:38,239
to do with the flex algo

2689
01:49:38,239 --> 01:49:40,320
and a bit of a history here

2690
01:49:40,320 --> 01:49:42,239
an mtr has been tried and failed

2691
01:49:42,239 --> 01:49:44,400
miserably because of the need to

2692
01:49:44,400 --> 01:49:47,040
classify the packet on every hop this is

2693
01:49:47,040 --> 01:49:48,880
exactly what you are doing i'm not sure

2694
01:49:48,880 --> 01:49:53,400
this is a good idea thank you

2695
01:49:57,360 --> 01:49:59,760
everything cisco no specific hat i

2696
01:49:59,760 --> 01:50:01,520
simply repeat what i said for the

2697
01:50:01,520 --> 01:50:04,080
previous draft with the vtn id

2698
01:50:04,080 --> 01:50:06,800
i don't mind don't discuss the flex i go

2699
01:50:06,800 --> 01:50:08,560
thing right because i'm not an expert

2700
01:50:08,560 --> 01:50:11,199
there but having a way to mark or color

2701
01:50:11,199 --> 01:50:13,119
the packet is interesting for sure but

2702
01:50:13,119 --> 01:50:16,159
make it generic not one per protocol

2703
01:50:16,159 --> 01:50:19,320
thank you

2704
01:50:24,880 --> 01:50:27,199
all right suresh krishnan so just a

2705
01:50:27,199 --> 01:50:28,960
question so is this the host putting in

2706
01:50:28,960 --> 01:50:31,360
the information for the routers to look

2707
01:50:31,360 --> 01:50:35,400
up on what routing table

2708
01:50:46,880 --> 01:50:49,360
yeah the question was who's putting in

2709
01:50:49,360 --> 01:50:51,440
this empty info who's like putting in

2710
01:50:51,440 --> 01:50:53,599
the hubba hub option in there is it the

2711
01:50:53,599 --> 01:50:56,239
host that is initiating the packet

2712
01:50:56,239 --> 01:50:58,719
uh uh yeah sorry thanks for your

2713
01:50:58,719 --> 01:51:00,719
question in fact this is the ingress

2714
01:51:00,719 --> 01:51:04,560
router of this the uh of this the

2715
01:51:04,560 --> 01:51:08,560
uh i'm charles uh uh of the tunnel i

2716
01:51:08,560 --> 01:51:11,679
mean the ingress router encapsulated the

2717
01:51:11,679 --> 01:51:14,320
uh topology information in the

2718
01:51:14,320 --> 01:51:16,400
forwarding data plane

2719
01:51:16,400 --> 01:51:18,320
not the host

2720
01:51:18,320 --> 01:51:20,239
okay so i think like there's something

2721
01:51:20,239 --> 01:51:21,679
that you probably need to do a little

2722
01:51:21,679 --> 01:51:24,159
bit more like the security stuff in here

2723
01:51:24,159 --> 01:51:26,000
the properties of this is like very

2724
01:51:26,000 --> 01:51:28,480
scary that you determine like you know

2725
01:51:28,480 --> 01:51:30,159
how the router looks it up so probably

2726
01:51:30,159 --> 01:51:32,480
you need to spend a little bit more time

2727
01:51:32,480 --> 01:51:34,880
on the security properties of this um

2728
01:51:34,880 --> 01:51:37,119
before it goes forward but i do

2729
01:51:37,119 --> 01:51:38,639
uh if the

2730
01:51:38,639 --> 01:51:41,119
people like you know peter was here

2731
01:51:41,119 --> 01:51:43,119
uh if this is something that's not

2732
01:51:43,119 --> 01:51:45,599
signed off by the eventual consumer of

2733
01:51:45,599 --> 01:51:47,360
this we need to discuss that first thank

2734
01:51:47,360 --> 01:51:48,400
you

2735
01:51:48,400 --> 01:51:50,638
okay

2736
01:51:51,840 --> 01:51:52,800
okay

2737
01:51:52,800 --> 01:51:55,679
jen being your next in the queue

2738
01:51:55,679 --> 01:51:58,639
okay uh to me from huawei i would like

2739
01:51:58,639 --> 01:52:00,560
to add some this to the comments

2740
01:52:00,560 --> 01:52:02,400
regarding the

2741
01:52:02,400 --> 01:52:05,119
erica and peter's the

2742
01:52:05,119 --> 01:52:06,080
comments

2743
01:52:06,080 --> 01:52:09,679
the first one i mean the peter's the

2744
01:52:09,679 --> 01:52:13,360
opinion in fact this is explained in the

2745
01:52:13,360 --> 01:52:15,679
in the slides because according to the

2746
01:52:15,679 --> 01:52:16,800
current

2747
01:52:16,800 --> 01:52:21,679
uh design of the flesh echo it needed to

2748
01:52:21,679 --> 01:52:23,360
need a more

2749
01:52:23,360 --> 01:52:26,480
ip address for the different

2750
01:52:26,480 --> 01:52:30,400
topology so that it will consume more ip

2751
01:52:30,400 --> 01:52:31,679
addresses

2752
01:52:31,679 --> 01:52:34,480
so here we introduce a new method can

2753
01:52:34,480 --> 01:52:37,840
share this the ip address and also take

2754
01:52:37,840 --> 01:52:41,360
the advantage of the ipv6 to encapsulate

2755
01:52:41,360 --> 01:52:44,719
the support id to identify

2756
01:52:44,719 --> 01:52:48,639
so this is just the solutions uh

2757
01:52:48,639 --> 01:52:49,760
concept

2758
01:52:49,760 --> 01:52:52,159
a second one regarding the eric's

2759
01:52:52,159 --> 01:52:54,159
concept i uh

2760
01:52:54,159 --> 01:52:57,040
comment i i agree with this one in fact

2761
01:52:57,040 --> 01:52:59,599
in the network in the teas working group

2762
01:52:59,599 --> 01:53:00,960
we propose

2763
01:53:00,960 --> 01:53:04,480
uh one draft generalized ietf network

2764
01:53:04,480 --> 01:53:05,679
slicing

2765
01:53:05,679 --> 01:53:08,719
we are discussing about if the

2766
01:53:08,719 --> 01:53:11,520
waiting resource id is can be

2767
01:53:11,520 --> 01:53:15,199
generalized to represent the topology or

2768
01:53:15,199 --> 01:53:16,080
not

2769
01:53:16,080 --> 01:53:19,199
yeah we will ask this the comment

2770
01:53:19,199 --> 01:53:21,919
okay that's all

2771
01:53:24,080 --> 01:53:27,040
joel halpern erickson i'm

2772
01:53:27,040 --> 01:53:28,400
i'm sorry but

2773
01:53:28,400 --> 01:53:30,560
this doesn't add up

2774
01:53:30,560 --> 01:53:33,280
the fundamental problem you stated was

2775
01:53:33,280 --> 01:53:35,760
well we need a different ip address for

2776
01:53:35,760 --> 01:53:37,360
each topology the endnote is

2777
01:53:37,360 --> 01:53:39,040
participating in

2778
01:53:39,040 --> 01:53:41,040
from where i sit that's a benefit not a

2779
01:53:41,040 --> 01:53:44,719
drawback this is ipv6 we're not short of

2780
01:53:44,719 --> 01:53:47,360
endnote ids

2781
01:53:47,360 --> 01:53:48,719
bob laughs

2782
01:53:48,719 --> 01:53:50,800
this is it works

2783
01:53:50,800 --> 01:53:53,520
whereas you want to introduce a new

2784
01:53:53,520 --> 01:53:55,840
extension header that we have to take

2785
01:53:55,840 --> 01:53:58,960
into account in forwarding at every hop

2786
01:53:58,960 --> 01:54:01,280
this is a very difficult problem

2787
01:54:01,280 --> 01:54:07,639
solution to a non-problem please don't

2788
01:54:18,400 --> 01:54:22,000
i'm sorry maybe i missed something but

2789
01:54:22,000 --> 01:54:24,960
if remember correctly an option either

2790
01:54:24,960 --> 01:54:27,679
can an extension here cannot be added by

2791
01:54:27,679 --> 01:54:28,800
a router

2792
01:54:28,800 --> 01:54:32,800
can be modified by router but not added

2793
01:54:32,800 --> 01:54:36,000
i don't know maybe i missed the refugee

2794
01:54:36,000 --> 01:54:38,080
okay to me because you know in the

2795
01:54:38,080 --> 01:54:40,159
router because the packet will

2796
01:54:40,159 --> 01:54:42,560
encapsulate the tunnel header we

2797
01:54:42,560 --> 01:54:45,520
encapsulate the tunnel header we can add

2798
01:54:45,520 --> 01:54:48,800
this the information uh with the with

2799
01:54:48,800 --> 01:54:51,599
the topology uh add the party

2800
01:54:51,599 --> 01:54:54,400
information with the new tunnel header i

2801
01:54:54,400 --> 01:54:55,760
think that's

2802
01:54:55,760 --> 01:55:00,080
that's a different from the host process

2803
01:55:00,159 --> 01:55:04,080
i will try to read your rfc and see if i

2804
01:55:04,080 --> 01:55:06,480
see any

2805
01:55:06,480 --> 01:55:09,199
anything that i missed thank you

2806
01:55:09,199 --> 01:55:11,519
okay

2807
01:55:13,119 --> 01:55:15,119
uh actually i allowed myself to the

2808
01:55:15,119 --> 01:55:16,159
queue

2809
01:55:16,159 --> 01:55:18,320
no heads but i actually agree with eric

2810
01:55:18,320 --> 01:55:20,960
that we kind of see a lot of

2811
01:55:20,960 --> 01:55:22,719
different drafts

2812
01:55:22,719 --> 01:55:24,560
probably which suggesting different

2813
01:55:24,560 --> 01:55:27,119
kinds of identifications related to

2814
01:55:27,119 --> 01:55:28,800
network slicing

2815
01:55:28,800 --> 01:55:31,360
apn and so on and i'm

2816
01:55:31,360 --> 01:55:33,520
not an expert in the area but i think it

2817
01:55:33,520 --> 01:55:35,280
would be a good idea to consider yeah

2818
01:55:35,280 --> 01:55:36,320
having

2819
01:55:36,320 --> 01:55:37,599
one

2820
01:55:37,599 --> 01:55:39,679
thing which can be reused instead of

2821
01:55:39,679 --> 01:55:41,440
standardizing five million different

2822
01:55:41,440 --> 01:55:42,639
options

2823
01:55:42,639 --> 01:55:45,440
it's not like commenting to you but i

2824
01:55:45,440 --> 01:55:47,280
think people like

2825
01:55:47,280 --> 01:55:50,320
maybe we either here or in some other

2826
01:55:50,320 --> 01:55:52,719
working group need to consider how to

2827
01:55:52,719 --> 01:55:55,599
solve this problem once and for all

2828
01:55:55,599 --> 01:55:56,960
and i see eric is looking to the

2829
01:55:56,960 --> 01:55:59,119
microphone

2830
01:55:59,119 --> 01:56:00,480
uh yeah i was just going to say i sent

2831
01:56:00,480 --> 01:56:03,840
email to the responsibility for tease

2832
01:56:03,840 --> 01:56:05,119
uh about

2833
01:56:05,119 --> 01:56:06,800
uh the status of the network slice

2834
01:56:06,800 --> 01:56:08,080
document there

2835
01:56:08,080 --> 01:56:09,599
it would be uh

2836
01:56:09,599 --> 01:56:11,119
in hopes that we could eventually get a

2837
01:56:11,119 --> 01:56:13,280
conversation um about

2838
01:56:13,280 --> 01:56:14,880
network resource partition identifiers

2839
01:56:14,880 --> 01:56:16,800
and all these other sort of identifiers

2840
01:56:16,800 --> 01:56:18,880
it it's not clear how many of these we

2841
01:56:18,880 --> 01:56:20,320
actually need

2842
01:56:20,320 --> 01:56:21,920
and uh but we haven't uh we haven't

2843
01:56:21,920 --> 01:56:23,520
closed on that conversation yet but if

2844
01:56:23,520 --> 01:56:24,960
uh

2845
01:56:24,960 --> 01:56:26,960
six managers could always send a liaison

2846
01:56:26,960 --> 01:56:29,360
statement to the tease chairs

2847
01:56:29,360 --> 01:56:32,239
and ask about those kind of things

2848
01:56:32,239 --> 01:56:34,719
cool thank you eric

2849
01:56:34,719 --> 01:56:38,480
okay we have four minutes

2850
01:56:38,480 --> 01:56:39,840
so

2851
01:56:39,840 --> 01:56:40,110
i'm

2852
01:56:40,110 --> 01:56:41,599
[Music]

2853
01:56:41,599 --> 01:56:44,000
gentlemen do you reckon you can give us

2854
01:56:44,000 --> 01:56:47,119
overview of generalized channels in four

2855
01:56:47,119 --> 01:56:48,480
minutes

2856
01:56:48,480 --> 01:56:51,599
yeah yes i'm okay

2857
01:56:51,599 --> 01:56:53,040
very quickly

2858
01:56:53,040 --> 01:56:57,000
sharing the slide then

2859
01:56:58,239 --> 01:57:01,199
okay so this is jamin from huawei on my

2860
01:57:01,199 --> 01:57:04,080
presentation user generalize the ipv6

2861
01:57:04,080 --> 01:57:07,840
tunnel okay next page

2862
01:57:09,119 --> 01:57:11,280
okay so here we

2863
01:57:11,280 --> 01:57:13,119
propose this the

2864
01:57:13,119 --> 01:57:15,119
challenge because we know now we have

2865
01:57:15,119 --> 01:57:17,760
the many types of the ip tunnels such

2866
01:57:17,760 --> 01:57:19,840
like the gre tunnels

2867
01:57:19,840 --> 01:57:23,440
vxlan tunnels and also have many

2868
01:57:23,440 --> 01:57:26,159
variants of these ipa tunnels all these

2869
01:57:26,159 --> 01:57:29,280
tunnels have this the format with

2870
01:57:29,280 --> 01:57:33,119
ipsos address and ip designation address

2871
01:57:33,119 --> 01:57:36,000
so at the same time we now we also have

2872
01:57:36,000 --> 01:57:37,599
many new features

2873
01:57:37,599 --> 01:57:41,360
even this has been uh proposed by gene

2874
01:57:41,360 --> 01:57:44,000
uh in the previous comments we know now

2875
01:57:44,000 --> 01:57:47,199
we have this the network slicing and we

2876
01:57:47,199 --> 01:57:50,080
have this epm we have this the alternate

2877
01:57:50,080 --> 01:57:51,679
marking we had the

2878
01:57:51,679 --> 01:57:54,960
iom all these new features we need the

2879
01:57:54,960 --> 01:57:57,360
new encapsulation and this the new

2880
01:57:57,360 --> 01:58:00,159
calculation has been defined and being

2881
01:58:00,159 --> 01:58:04,080
defined for the ipv6 encapsulation so

2882
01:58:04,080 --> 01:58:06,560
now we have this is the challenge to how

2883
01:58:06,560 --> 01:58:07,360
we

2884
01:58:07,360 --> 01:58:09,679
define these the encapsulations for

2885
01:58:09,679 --> 01:58:12,400
these ip tunnels so this has the

2886
01:58:12,400 --> 01:58:16,480
challenges okay next page

2887
01:58:18,159 --> 01:58:20,639
okay so here propose is a challenger so

2888
01:58:20,639 --> 01:58:23,520
that's the first one if we define this

2889
01:58:23,520 --> 01:58:26,239
the new features encapsulations for all

2890
01:58:26,239 --> 01:58:29,239
these ip tunnels we have the huge

2891
01:58:29,239 --> 01:58:31,000
standardization

2892
01:58:31,000 --> 01:58:34,000
standardization work and the second one

2893
01:58:34,000 --> 01:58:36,639
is difficult to keep the consistency

2894
01:58:36,639 --> 01:58:39,360
between the ipv4 and the ipv6 because

2895
01:58:39,360 --> 01:58:41,679
the user has been recommended the new

2896
01:58:41,679 --> 01:58:44,719
work is to be done based on the ipv4

2897
01:58:44,719 --> 01:58:46,480
ipv6

2898
01:58:46,480 --> 01:58:48,719
third one i mean there's some this is

2899
01:58:48,719 --> 01:58:50,639
the function redundant because for

2900
01:58:50,639 --> 01:58:54,320
example ip if we use the ipv6 for the

2901
01:58:54,320 --> 01:58:58,560
ipvc for this ip tunnel so that's the

2902
01:58:58,560 --> 01:59:02,239
ipv6 flow label can be used for ecmp but

2903
01:59:02,239 --> 01:59:05,760
you'll notice in history the ipa tunnels

2904
01:59:05,760 --> 01:59:09,520
some ip tunnels take use the ip udp port

2905
01:59:09,520 --> 01:59:12,880
number for the ecmp so there's the

2906
01:59:12,880 --> 01:59:16,560
repeat repeated functionality in the sim

2907
01:59:16,560 --> 01:59:18,880
uh there is a tunnel header

2908
01:59:18,880 --> 01:59:20,320
so there's a

2909
01:59:20,320 --> 01:59:22,560
the last one so that's a weaker

2910
01:59:22,560 --> 01:59:24,960
difficulty to extend based on the

2911
01:59:24,960 --> 01:59:28,320
existing format because some

2912
01:59:28,320 --> 01:59:31,280
ip tunnel has their own header for

2913
01:59:31,280 --> 01:59:34,719
example vxlr and gre but we also have

2914
01:59:34,719 --> 01:59:37,119
some these tunnels such as the ipuip

2915
01:59:37,119 --> 01:59:38,080
they also

2916
01:59:38,080 --> 01:59:40,639
know their own header so that is

2917
01:59:40,639 --> 01:59:44,080
difficult to has unified there is the

2918
01:59:44,080 --> 01:59:46,960
extension if they need to support the

2919
01:59:46,960 --> 01:59:51,119
new features so we next page

2920
01:59:51,119 --> 01:59:53,679
uh sorry we have just one minute so can

2921
01:59:53,679 --> 01:59:55,599
you just quickly summarize

2922
01:59:55,599 --> 01:59:58,560
oh yes so here we just we have proposed

2923
01:59:58,560 --> 02:00:02,000
this generalized the ipv6 tunnel header

2924
02:00:02,000 --> 02:00:04,800
so we think that for all these ip

2925
02:00:04,800 --> 02:00:06,239
tunnels we

2926
02:00:06,239 --> 02:00:07,520
you have

2927
02:00:07,520 --> 02:00:09,920
generalized the ipvc

2928
02:00:09,920 --> 02:00:11,599
ipv6

2929
02:00:11,599 --> 02:00:14,960
tunnel header that means the ipv6 header

2930
02:00:14,960 --> 02:00:17,280
and all these the new features and all

2931
02:00:17,280 --> 02:00:18,159
the

2932
02:00:18,159 --> 02:00:21,440
existing ip tunnels functionality can be

2933
02:00:21,440 --> 02:00:24,080
encapsulated in the ipv6 extension

2934
02:00:24,080 --> 02:00:26,800
header so means there's no need

2935
02:00:26,800 --> 02:00:30,000
necessary to defend the new features for

2936
02:00:30,000 --> 02:00:33,280
all these ip tunnels that's the concept

2937
02:00:33,280 --> 02:00:35,679
okay that's all

2938
02:00:35,679 --> 02:00:37,280
okay thank you i don't think you have

2939
02:00:37,280 --> 02:00:39,360
any time for this question but i guess

2940
02:00:39,360 --> 02:00:41,280
the draft is in the writing working

2941
02:00:41,280 --> 02:00:42,800
group as well right

2942
02:00:42,800 --> 02:00:44,000
so

2943
02:00:44,000 --> 02:00:44,960
okay

2944
02:00:44,960 --> 02:00:47,679
thank you very much everyone

2945
02:00:47,679 --> 02:00:51,360
see ya in london

2946
02:00:52,000 --> 02:00:54,880
please read the drafts please comment on

2947
02:00:54,880 --> 02:00:56,320
them

2948
02:00:56,320 --> 02:00:59,599
okay yes thank you all very much

2949
02:00:59,599 --> 02:01:00,719
okay

2950
02:01:00,719 --> 02:01:05,960
okay thank you thank you bob okay bye

2951
02:01:09,199 --> 02:01:12,440
thank you

2952
02:01:35,920 --> 02:01:38,920
um

