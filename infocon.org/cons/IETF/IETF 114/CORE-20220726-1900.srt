1
00:00:28,480 --> 00:00:31,480
nice

2
00:00:52,399 --> 00:00:55,399
from

3
00:01:09,760 --> 00:01:12,920
he's like

4
00:01:35,439 --> 00:01:37,360
okay we can start the meeting and

5
00:01:37,360 --> 00:01:39,600
welcome everyone to the session of the

6
00:01:39,600 --> 00:01:41,759
co-working group with atf 114

7
00:01:41,759 --> 00:01:43,680
and marco tyleka my co-chairs are jaime

8
00:01:43,680 --> 00:01:47,200
jimenez and karsten bormann

9
00:01:48,320 --> 00:01:50,240
and of course we've seen people

10
00:01:50,240 --> 00:01:51,280
in the audience that have read the

11
00:01:51,280 --> 00:01:53,280
documents in the channel today we make

12
00:01:53,280 --> 00:01:56,240
use good use of our time to discuss open

13
00:01:56,240 --> 00:01:58,719
issues and progress to work uh in a

14
00:01:58,719 --> 00:01:59,920
working group

15
00:01:59,920 --> 00:02:01,360
uh blue sheets are collected

16
00:02:01,360 --> 00:02:04,079
automatically uh please if you attend on

17
00:02:04,079 --> 00:02:05,840
site in fact

18
00:02:05,840 --> 00:02:07,759
access the meeting through

19
00:02:07,759 --> 00:02:10,800
miteiko on the live version

20
00:02:10,800 --> 00:02:12,800
the chairs will take care of looking at

21
00:02:12,800 --> 00:02:14,000
the chat

22
00:02:14,000 --> 00:02:15,200
we have

23
00:02:15,200 --> 00:02:18,080
evo and matthias the volunteer to take

24
00:02:18,080 --> 00:02:21,200
minutes thank you very much anyone

25
00:02:21,200 --> 00:02:24,238
is welcome to help them

26
00:02:24,959 --> 00:02:27,360
and christian thanks

27
00:02:27,360 --> 00:02:29,360
this is an official itf meeting so as

28
00:02:29,360 --> 00:02:31,280
usual then not well

29
00:02:31,280 --> 00:02:32,319
applies

30
00:02:32,319 --> 00:02:35,040
we've been recorded and this is not just

31
00:02:35,040 --> 00:02:37,280
about ipr patterns and so on it's also

32
00:02:37,280 --> 00:02:39,920
and especially about our conducts so be

33
00:02:39,920 --> 00:02:42,000
nice and professional

34
00:02:42,000 --> 00:02:43,280
with each other

35
00:02:43,280 --> 00:02:45,599
uh also for the participants inside

36
00:02:45,599 --> 00:02:48,640
please ensure to keep the mask on all

37
00:02:48,640 --> 00:02:50,560
the time also when you go uh to the

38
00:02:50,560 --> 00:02:52,879
floor mike to give a comment ask a

39
00:02:52,879 --> 00:02:53,760
question

40
00:02:53,760 --> 00:02:56,560
and so on thanks

41
00:02:58,000 --> 00:03:00,480
a few practicalities

42
00:03:00,480 --> 00:03:03,280
again keep in mind to join through the

43
00:03:03,280 --> 00:03:06,159
on-site tool of miteko for the on-site

44
00:03:06,159 --> 00:03:07,599
participants

45
00:03:07,599 --> 00:03:10,000
um if you want to go to the mic to ask a

46
00:03:10,000 --> 00:03:12,800
question please join the queue first uh

47
00:03:12,800 --> 00:03:15,680
on metecolite and then go onto the mic

48
00:03:15,680 --> 00:03:18,239
and then leave the queue when you come

49
00:03:18,239 --> 00:03:21,040
back to your seat

50
00:03:23,840 --> 00:03:24,720
okay

51
00:03:24,720 --> 00:03:26,959
this is the agenda for for today it's

52
00:03:26,959 --> 00:03:29,200
pretty packed so please do your best to

53
00:03:29,200 --> 00:03:31,040
stay on time and the chairs will will

54
00:03:31,040 --> 00:03:33,599
guide you through um about that

55
00:03:33,599 --> 00:03:35,920
uh we start with the two rule 80

56
00:03:35,920 --> 00:03:39,280
document and href and coral

57
00:03:39,280 --> 00:03:42,000
then we cover two documents related to

58
00:03:42,000 --> 00:03:44,239
group communication as a group comfort

59
00:03:44,239 --> 00:03:45,599
co-op as such

60
00:03:45,599 --> 00:03:47,760
and multicast notifications

61
00:03:47,760 --> 00:03:50,159
um then we have two documents related to

62
00:03:50,159 --> 00:03:52,400
uh all score the profiling available for

63
00:03:52,400 --> 00:03:54,959
oscore and the key update for score

64
00:03:54,959 --> 00:03:56,560
and then

65
00:03:56,560 --> 00:03:57,840
we have a number of non-working group

66
00:03:57,840 --> 00:03:58,959
documents

67
00:03:58,959 --> 00:04:01,120
meaning dns over co-op performance

68
00:04:01,120 --> 00:04:02,400
measurement

69
00:04:02,400 --> 00:04:04,319
and copper gut

70
00:04:04,319 --> 00:04:06,319
for ble

71
00:04:06,319 --> 00:04:08,720
does anyone have any comment or want to

72
00:04:08,720 --> 00:04:12,920
bash this agenda in any sense

73
00:04:14,959 --> 00:04:17,120
kirsten

74
00:04:17,120 --> 00:04:19,279
yeah i just wanted to point out if we do

75
00:04:19,279 --> 00:04:21,199
have time at the end we could

76
00:04:21,199 --> 00:04:23,520
briefly talk about something that came

77
00:04:23,520 --> 00:04:25,520
up during the anima meeting

78
00:04:25,520 --> 00:04:27,600
on monday

79
00:04:27,600 --> 00:04:30,880
the co-op s plus jpy

80
00:04:30,880 --> 00:04:33,120
uh uri scheme

81
00:04:33,120 --> 00:04:36,479
uh let's see if we have time for that

82
00:04:36,639 --> 00:04:39,199
okay with five minutes work in the end

83
00:04:39,199 --> 00:04:41,440
from the flex time

84
00:04:41,440 --> 00:04:42,960
i think so

85
00:04:42,960 --> 00:04:44,160
let's try that

86
00:04:44,160 --> 00:04:46,479
thanks

87
00:04:47,440 --> 00:04:48,639
okay

88
00:04:48,639 --> 00:04:50,479
so let's get into the uh working group

89
00:04:50,479 --> 00:04:51,840
and documents those updates from the

90
00:04:51,840 --> 00:04:54,080
chairs

91
00:04:54,080 --> 00:04:56,400
so since the uh vienna meeting in march

92
00:04:56,400 --> 00:04:58,720
we actually had um three documents

93
00:04:58,720 --> 00:05:00,240
published as

94
00:05:00,240 --> 00:05:03,199
rfc uh so many congratulations to the

95
00:05:03,199 --> 00:05:04,960
authors the working group and everyone

96
00:05:04,960 --> 00:05:06,639
that helped out with that

97
00:05:06,639 --> 00:05:08,720
uh they are in order

98
00:05:08,720 --> 00:05:10,240
i think strictly in chronological order

99
00:05:10,240 --> 00:05:11,759
of publication the

100
00:05:11,759 --> 00:05:14,160
resource directory was indeed an

101
00:05:14,160 --> 00:05:15,280
achievement

102
00:05:15,280 --> 00:05:18,800
uh 9176

103
00:05:18,800 --> 00:05:21,680
um sentimental data ct

104
00:05:21,680 --> 00:05:24,680
9193

105
00:05:25,919 --> 00:05:26,800
and

106
00:05:26,800 --> 00:05:29,520
young seabor one of the four uh corcom

107
00:05:29,520 --> 00:05:33,440
cluster documents now rfc 9254

108
00:05:33,440 --> 00:05:35,520
congratulations again

109
00:05:35,520 --> 00:05:37,600
carsten

110
00:05:37,600 --> 00:05:39,280
yeah so um

111
00:05:39,280 --> 00:05:40,080
i

112
00:05:40,080 --> 00:05:42,320
think uh the the two of you weren't

113
00:05:42,320 --> 00:05:44,479
there when this work

114
00:05:44,479 --> 00:05:47,199
was started at least on uh the resource

115
00:05:47,199 --> 00:05:49,120
directory and on

116
00:05:49,120 --> 00:05:51,600
uh yang ziba so maybe i should just

117
00:05:51,600 --> 00:05:52,800
quickly

118
00:05:52,800 --> 00:05:55,840
uh remember people what this was about

119
00:05:55,840 --> 00:05:57,039
um

120
00:05:57,039 --> 00:06:01,440
excuse me i need to reconfigure my audio

121
00:06:01,919 --> 00:06:05,840
ah that should work better um

122
00:06:05,840 --> 00:06:07,680
the resource directory was started in

123
00:06:07,680 --> 00:06:10,240
2011

124
00:06:10,240 --> 00:06:11,600
from a

125
00:06:11,600 --> 00:06:14,080
contribution by zac shelby

126
00:06:14,080 --> 00:06:16,720
out of the eu product uh project that

127
00:06:16,720 --> 00:06:20,960
that i for already forget the name for

128
00:06:20,960 --> 00:06:22,800
but that actually created the the

129
00:06:22,800 --> 00:06:25,039
company sensing note

130
00:06:25,039 --> 00:06:28,000
and uh yeah it took us a while to to

131
00:06:28,000 --> 00:06:29,600
finish

132
00:06:29,600 --> 00:06:30,639
this

133
00:06:30,639 --> 00:06:31,680
and

134
00:06:31,680 --> 00:06:34,240
92 54

135
00:06:34,240 --> 00:06:38,199
was started in 2013

136
00:06:38,240 --> 00:06:40,720
uh by peter wenderstuck

137
00:06:40,720 --> 00:06:42,319
and

138
00:06:42,319 --> 00:06:43,919
then

139
00:06:43,919 --> 00:06:46,400
that's

140
00:06:46,840 --> 00:06:50,400
came and added restcon for that because

141
00:06:50,400 --> 00:06:53,199
peter really wanted to do this with snmp

142
00:06:53,199 --> 00:06:54,400
at first

143
00:06:54,400 --> 00:06:56,160
then there were discussions whether we

144
00:06:56,160 --> 00:06:57,919
would need to start a new working group

145
00:06:57,919 --> 00:06:59,360
for this

146
00:06:59,360 --> 00:07:01,039
then we had the discussions about

147
00:07:01,039 --> 00:07:04,080
whether to do hashing uh to create the

148
00:07:04,080 --> 00:07:06,560
identifiers and at some point uh

149
00:07:06,560 --> 00:07:09,440
michelle villette and alex uh

150
00:07:09,440 --> 00:07:12,160
pilaf joined and came up with something

151
00:07:12,160 --> 00:07:14,000
they called cool

152
00:07:14,000 --> 00:07:16,160
so some of the people in the room are a

153
00:07:16,160 --> 00:07:18,479
member of a telegram list called cool

154
00:07:18,479 --> 00:07:21,280
that's the origin of that telegram

155
00:07:21,280 --> 00:07:22,560
uh list

156
00:07:22,560 --> 00:07:25,520
um and um yeah so we got lots of help

157
00:07:25,520 --> 00:07:27,360
from andy biermann and and young

158
00:07:27,360 --> 00:07:29,840
schweinweider uh we invented the

159
00:07:29,840 --> 00:07:32,160
differential coding

160
00:07:32,160 --> 00:07:35,120
then we had several submissions in 2016

161
00:07:35,120 --> 00:07:37,759
that explained the best way to register

162
00:07:37,759 --> 00:07:41,599
these sits would be using blockchain

163
00:07:41,599 --> 00:07:44,319
michelle actually wrote code for for p

164
00:07:44,319 --> 00:07:47,039
yang to support the the sids

165
00:07:47,039 --> 00:07:50,639
and in april 2016 we actually adopted

166
00:07:50,639 --> 00:07:52,639
the the draft

167
00:07:52,639 --> 00:07:54,479
and

168
00:07:54,479 --> 00:07:56,400
then

169
00:07:56,400 --> 00:07:59,759
yang 1.1 was published so our

170
00:07:59,759 --> 00:08:02,160
basis actually changed and we had to

171
00:08:02,160 --> 00:08:04,000
react to that and

172
00:08:04,000 --> 00:08:05,919
yeah it took another four years until we

173
00:08:05,919 --> 00:08:07,680
finally made it to work new blast call

174
00:08:07,680 --> 00:08:09,039
in 2020

175
00:08:09,039 --> 00:08:11,599
and then we had the pandemic disruption

176
00:08:11,599 --> 00:08:13,280
so it took us

177
00:08:13,280 --> 00:08:15,520
to july to have a second working group

178
00:08:15,520 --> 00:08:19,120
last call february 2021 to have an itf

179
00:08:19,120 --> 00:08:20,319
last call

180
00:08:20,319 --> 00:08:23,759
and then we had to to uncouple the

181
00:08:23,759 --> 00:08:26,960
drafts to get at least one to advance

182
00:08:26,960 --> 00:08:28,560
and in april

183
00:08:28,560 --> 00:08:31,039
young sibo was approved and now it was

184
00:08:31,039 --> 00:08:32,640
just a little

185
00:08:32,640 --> 00:08:35,279
bit of auth 48 before we finally got it

186
00:08:35,279 --> 00:08:36,399
published

187
00:08:36,399 --> 00:08:39,760
in in july so just as a reminder how

188
00:08:39,760 --> 00:08:41,200
these things

189
00:08:41,200 --> 00:08:43,200
work so if you want to congratulate

190
00:08:43,200 --> 00:08:44,320
anyone

191
00:08:44,320 --> 00:08:46,320
do congratulate peter

192
00:08:46,320 --> 00:08:48,800
and all the other people who made this

193
00:08:48,800 --> 00:08:49,839
stuff

194
00:08:49,839 --> 00:08:53,880
happen it's been a long time

195
00:08:55,680 --> 00:08:58,319
thanks a lot

196
00:09:00,160 --> 00:09:02,080
yeah by the way i i know that you're

197
00:09:02,080 --> 00:09:04,000
cause of all these three rfc discussions

198
00:09:04,000 --> 00:09:05,680
so

199
00:09:05,680 --> 00:09:07,519
but i think you played a major role

200
00:09:07,519 --> 00:09:09,120
indeed

201
00:09:09,120 --> 00:09:11,920
in many senses

202
00:09:12,640 --> 00:09:15,600
okay uh moving forward with the update

203
00:09:15,600 --> 00:09:16,480
uh

204
00:09:16,480 --> 00:09:18,480
we also have another document and not

205
00:09:18,480 --> 00:09:20,480
published that yet right now in the

206
00:09:20,480 --> 00:09:23,680
document queue in the rfc rescue and

207
00:09:23,680 --> 00:09:25,440
this is indeed an achievement

208
00:09:25,440 --> 00:09:27,839
considering what has happened in the

209
00:09:27,839 --> 00:09:30,160
last few months following

210
00:09:30,160 --> 00:09:32,080
the vienna meeting during which the

211
00:09:32,080 --> 00:09:34,560
document was still dormant and then was

212
00:09:34,560 --> 00:09:36,880
resurrected in april for a rush to

213
00:09:36,880 --> 00:09:39,120
completing it due to the urgency

214
00:09:39,120 --> 00:09:42,720
um in in 3gpp and the result was great

215
00:09:42,720 --> 00:09:43,680
i think

216
00:09:43,680 --> 00:09:44,880
thanks again for all those who

217
00:09:44,880 --> 00:09:48,680
contributed that too

218
00:09:50,320 --> 00:09:53,200
and then in ist processing we have um

219
00:09:53,200 --> 00:09:55,839
another of the qualcomm cluster uh

220
00:09:55,839 --> 00:09:57,839
documents uh corseed there was a

221
00:09:57,839 --> 00:10:00,640
resubmission uh earlier today uh of

222
00:10:00,640 --> 00:10:02,839
version 19 following

223
00:10:02,839 --> 00:10:06,240
discussions uh among the cultures as 180

224
00:10:06,240 --> 00:10:08,240
customers to say something

225
00:10:08,240 --> 00:10:09,519
yeah just

226
00:10:09,519 --> 00:10:12,000
this document is officially out of the

227
00:10:12,000 --> 00:10:13,600
hands of the

228
00:10:13,600 --> 00:10:15,760
working group but the the feedback we

229
00:10:15,760 --> 00:10:17,279
got

230
00:10:17,279 --> 00:10:20,240
from the isg was pretty substantial so

231
00:10:20,240 --> 00:10:22,720
there will be substantial changes

232
00:10:22,720 --> 00:10:25,519
uh to the document and uh it's important

233
00:10:25,519 --> 00:10:27,120
that the working group actually pays

234
00:10:27,120 --> 00:10:28,320
attention

235
00:10:28,320 --> 00:10:29,839
uh to this so

236
00:10:29,839 --> 00:10:33,519
formally this will probably

237
00:10:33,519 --> 00:10:37,839
take the form of second ietf last call

238
00:10:37,839 --> 00:10:40,079
but that's for the isg to decide i don't

239
00:10:40,079 --> 00:10:41,600
know

240
00:10:41,600 --> 00:10:43,360
that

241
00:10:43,360 --> 00:10:45,519
but

242
00:10:45,680 --> 00:10:46,399
yeah

243
00:10:46,399 --> 00:10:48,240
please follow the github repository

244
00:10:48,240 --> 00:10:49,760
which by the way is the yang ziba

245
00:10:49,760 --> 00:10:51,120
repository

246
00:10:51,120 --> 00:10:54,160
uh for historical uh reasons

247
00:10:54,160 --> 00:10:56,480
and uh there are two pull requests in

248
00:10:56,480 --> 00:10:59,040
there right now uh one is mainly

249
00:10:59,040 --> 00:11:01,839
editorial but it's a long per request

250
00:11:01,839 --> 00:11:04,720
and the other one is very short but it's

251
00:11:04,720 --> 00:11:06,000
technical

252
00:11:06,000 --> 00:11:08,399
and we want to merge these two pull

253
00:11:08,399 --> 00:11:09,760
requests

254
00:11:09,760 --> 00:11:11,360
and

255
00:11:11,360 --> 00:11:14,160
get feedback on on this 19 and and

256
00:11:14,160 --> 00:11:17,519
submit the dash 20 to finally lift the

257
00:11:17,519 --> 00:11:21,360
discuss that that is open here

258
00:11:22,640 --> 00:11:24,800
thank you

259
00:11:24,800 --> 00:11:26,399
yeah we have also a number of documents

260
00:11:26,399 --> 00:11:28,640
in post-working group plus call meaning

261
00:11:28,640 --> 00:11:30,640
the other two kirchhoff documents uh

262
00:11:30,640 --> 00:11:32,959
combining a library that uh just have to

263
00:11:32,959 --> 00:11:35,200
wait for corsair to be completed before

264
00:11:35,200 --> 00:11:36,480
uh

265
00:11:36,480 --> 00:11:38,000
being brought up on service to work on

266
00:11:38,000 --> 00:11:40,000
them and then we have the ripple score

267
00:11:40,000 --> 00:11:42,800
document which is currently in shepherd

268
00:11:42,800 --> 00:11:45,199
write up

269
00:11:46,959 --> 00:11:48,640
we also wanted to mention

270
00:11:48,640 --> 00:11:50,079
other documents that are not in the

271
00:11:50,079 --> 00:11:52,079
agenda for today there are two have been

272
00:11:52,079 --> 00:11:53,200
recently

273
00:11:53,200 --> 00:11:54,480
adopted

274
00:11:54,480 --> 00:11:56,320
attacks on co-op and transport

275
00:11:56,320 --> 00:11:58,079
indication for which there was also a

276
00:11:58,079 --> 00:12:00,160
recent uh resubmission with a little

277
00:12:00,160 --> 00:12:02,560
update so the version one

278
00:12:02,560 --> 00:12:05,519
and then we have another one uh

279
00:12:05,519 --> 00:12:07,519
pending workforce adoption group com

280
00:12:07,519 --> 00:12:08,959
proxy uh

281
00:12:08,959 --> 00:12:11,200
carson is fine for you you can take this

282
00:12:11,200 --> 00:12:13,440
one

283
00:12:20,240 --> 00:12:22,399
uh yeah now if i were

284
00:12:22,399 --> 00:12:25,360
remembering what this was about

285
00:12:25,360 --> 00:12:27,040
um

286
00:12:27,040 --> 00:12:29,120
sorry

287
00:12:29,120 --> 00:12:31,760
it was presented um again at an interim

288
00:12:31,760 --> 00:12:34,320
meeting um in may uh basically

289
00:12:34,320 --> 00:12:39,160
requesting for adoption yeah and and we

290
00:12:39,200 --> 00:12:41,200
yeah we made a resolution there and i

291
00:12:41,200 --> 00:12:42,880
probably should repeat that resolution

292
00:12:42,880 --> 00:12:44,320
here but uh

293
00:12:44,320 --> 00:12:46,560
i i must admit i don't remember what

294
00:12:46,560 --> 00:12:49,040
that was

295
00:12:50,240 --> 00:12:53,839
too many balls in there i'm sorry

296
00:12:54,399 --> 00:12:56,399
well uh trying to remember the means for

297
00:12:56,399 --> 00:12:58,639
me that there seemed to be interest and

298
00:12:58,639 --> 00:13:00,320
energy to work on it but then it was up

299
00:13:00,320 --> 00:13:02,720
to the chairs too uh to consider a call

300
00:13:02,720 --> 00:13:05,040
for adoption that yeah since then hasn't

301
00:13:05,040 --> 00:13:07,839
started

302
00:13:08,320 --> 00:13:10,560
okay so maybe you can say something at

303
00:13:10,560 --> 00:13:12,959
the end of the meeting so i refresh my

304
00:13:12,959 --> 00:13:13,920
memory

305
00:13:13,920 --> 00:13:16,399
i'm sorry

306
00:13:16,399 --> 00:13:19,560
all right

307
00:13:20,480 --> 00:13:22,800
uh and we have a few more uh individual

308
00:13:22,800 --> 00:13:24,480
documents around there are four that

309
00:13:24,480 --> 00:13:26,720
have been um are submitted with some um

310
00:13:26,720 --> 00:13:29,360
updates uh meaning restoring cash

311
00:13:29,360 --> 00:13:31,760
ability score protected responses and

312
00:13:31,760 --> 00:13:33,440
using all score

313
00:13:33,440 --> 00:13:35,600
um also with proxies possible with

314
00:13:35,600 --> 00:13:37,519
multiple layer protections

315
00:13:37,519 --> 00:13:39,199
extensions for the resource directory

316
00:13:39,199 --> 00:13:40,079
and

317
00:13:40,079 --> 00:13:43,279
everything on co-op as kitchen sync

318
00:13:43,279 --> 00:13:46,800
we also have around two new submissions

319
00:13:46,800 --> 00:13:49,600
core parameterized content format was

320
00:13:49,600 --> 00:13:51,199
presented at the recent inter meeting

321
00:13:51,199 --> 00:13:52,720
also

322
00:13:52,720 --> 00:13:55,519
and then a new co-op option uh for

323
00:13:55,519 --> 00:13:58,560
early data usage of tls or dtls 1.3

324
00:13:58,560 --> 00:14:00,560
equivalent to the corresponding http

325
00:14:00,560 --> 00:14:02,959
header basically

326
00:14:02,959 --> 00:14:05,040
and so we encourage you to read through

327
00:14:05,040 --> 00:14:06,320
these documents that couldn't make it

328
00:14:06,320 --> 00:14:09,680
for today's agenda

329
00:14:12,399 --> 00:14:14,240
okay that concludes the introductive

330
00:14:14,240 --> 00:14:17,920
part and we can actually start with one

331
00:14:17,920 --> 00:14:19,519
minute of advantage

332
00:14:19,519 --> 00:14:20,800
with the first

333
00:14:20,800 --> 00:14:22,720
actual item on the agenda href and

334
00:14:22,720 --> 00:14:25,959
that's carsten

335
00:14:38,160 --> 00:14:40,000
okay so this is

336
00:14:40,000 --> 00:14:42,800
mainly a report we don't really have

337
00:14:42,800 --> 00:14:45,279
time to discuss this and

338
00:14:45,279 --> 00:14:47,120
i think this is really the stuff of

339
00:14:47,120 --> 00:14:48,959
which interim

340
00:14:48,959 --> 00:14:50,160
meetings

341
00:14:50,160 --> 00:14:53,760
uh are made so just as a reminder

342
00:14:53,760 --> 00:14:56,000
cris are concise

343
00:14:56,000 --> 00:14:59,440
resource identifiers they are the the

344
00:14:59,440 --> 00:15:02,000
concise equivalent of uris and ui

345
00:15:02,000 --> 00:15:03,440
references

346
00:15:03,440 --> 00:15:05,680
and essentially what we did is we looked

347
00:15:05,680 --> 00:15:08,639
at uris extracted the generic data model

348
00:15:08,639 --> 00:15:10,480
that your eyes have

349
00:15:10,480 --> 00:15:11,440
and

350
00:15:11,440 --> 00:15:13,760
made a structured representation

351
00:15:13,760 --> 00:15:16,240
um of that

352
00:15:16,240 --> 00:15:17,120
um

353
00:15:17,120 --> 00:15:18,480
so the the

354
00:15:18,480 --> 00:15:20,800
current status of this is

355
00:15:20,800 --> 00:15:23,199
there hasn't been an update of the draft

356
00:15:23,199 --> 00:15:26,160
because we are essentially

357
00:15:26,160 --> 00:15:28,240
done

358
00:15:28,240 --> 00:15:31,199
we are finding occasional little nits

359
00:15:31,199 --> 00:15:33,120
that we have to fix

360
00:15:33,120 --> 00:15:35,839
but most of the work at the moment is on

361
00:15:35,839 --> 00:15:38,320
test vectors and implementations so we

362
00:15:38,320 --> 00:15:40,560
want to make sure that our various

363
00:15:40,560 --> 00:15:43,519
implementations actually work with the

364
00:15:43,519 --> 00:15:46,079
uri implementations that we find on our

365
00:15:46,079 --> 00:15:47,199
platforms

366
00:15:47,199 --> 00:15:49,759
and it turns out if you want to do

367
00:15:49,759 --> 00:15:52,160
something that uses the the entire

368
00:15:52,160 --> 00:15:53,199
envelope

369
00:15:53,199 --> 00:15:56,240
of of the uri data model you are

370
00:15:56,240 --> 00:15:58,160
fighting with your platform and that's

371
00:15:58,160 --> 00:16:00,880
something that we have found out

372
00:16:00,880 --> 00:16:02,639
so we have much less of a problem with

373
00:16:02,639 --> 00:16:04,800
actually doing the cri part

374
00:16:04,800 --> 00:16:05,519
but

375
00:16:05,519 --> 00:16:07,759
doing the the uri

376
00:16:07,759 --> 00:16:11,120
part in the bi-directional translation

377
00:16:11,120 --> 00:16:14,079
uh so there there have been two pr's

378
00:16:14,079 --> 00:16:16,480
lately which are in on github but not

379
00:16:16,480 --> 00:16:18,959
yet in the internet draft

380
00:16:18,959 --> 00:16:19,839
a

381
00:16:19,839 --> 00:16:22,000
short lamentation about percent encoded

382
00:16:22,000 --> 00:16:23,759
text because

383
00:16:23,759 --> 00:16:26,880
that really is a syntactic feature of of

384
00:16:26,880 --> 00:16:29,839
your eyes and doesn't fit at all to the

385
00:16:29,839 --> 00:16:31,279
semantic

386
00:16:31,279 --> 00:16:34,480
structure of cris so they are best

387
00:16:34,480 --> 00:16:37,120
avoided but if you want to

388
00:16:37,120 --> 00:16:39,759
be able to write a translator that

389
00:16:39,759 --> 00:16:43,040
works for any uri you have to include

390
00:16:43,040 --> 00:16:43,920
that

391
00:16:43,920 --> 00:16:46,000
and the other observation was that we

392
00:16:46,000 --> 00:16:48,399
forgot to put in a rule

393
00:16:48,399 --> 00:16:52,800
to prefix a relative uri by dot slash

394
00:16:52,800 --> 00:16:55,600
if the first path segment in the

395
00:16:55,600 --> 00:16:58,639
relative uri contains a colon because

396
00:16:58,639 --> 00:17:00,560
that colon will look like

397
00:17:00,560 --> 00:17:03,440
uh the whole thing starts with a scheme

398
00:17:03,440 --> 00:17:05,039
so you have to prefix that with dot

399
00:17:05,039 --> 00:17:07,520
slash to make sure

400
00:17:07,520 --> 00:17:08,640
it's

401
00:17:08,640 --> 00:17:11,359
recognized as a

402
00:17:11,359 --> 00:17:12,720
relative ui

403
00:17:12,720 --> 00:17:16,880
so that's on on github

404
00:17:16,959 --> 00:17:19,839
already uh what is on github as an issue

405
00:17:19,839 --> 00:17:21,039
right now

406
00:17:21,039 --> 00:17:23,919
is the question what do we do with the

407
00:17:23,919 --> 00:17:26,880
uri foo colon

408
00:17:26,880 --> 00:17:30,240
um so the uri foo colon

409
00:17:30,240 --> 00:17:33,760
is could be um

410
00:17:33,760 --> 00:17:36,559
a uri for the scheme foo that does not

411
00:17:36,559 --> 00:17:39,919
have an authority but has uh

412
00:17:39,919 --> 00:17:42,480
zero or more path segments so it could

413
00:17:42,480 --> 00:17:45,840
be full colon slash bar slash

414
00:17:45,840 --> 00:17:49,679
but we have zero of these segments so um

415
00:17:49,679 --> 00:17:52,720
in this case the representation would be

416
00:17:52,720 --> 00:17:55,520
the scheme foo and a null and the null

417
00:17:55,520 --> 00:17:57,840
can be taken away so it really is just

418
00:17:57,840 --> 00:17:59,120
an array with a

419
00:17:59,120 --> 00:18:01,120
scheme so this this fits with what you

420
00:18:01,120 --> 00:18:02,400
actually see

421
00:18:02,400 --> 00:18:04,320
but it also could be

422
00:18:04,320 --> 00:18:07,679
a full colon opaque something like a

423
00:18:07,679 --> 00:18:08,720
metoo

424
00:18:08,720 --> 00:18:09,440
uh

425
00:18:09,440 --> 00:18:10,480
url

426
00:18:10,480 --> 00:18:12,320
uh major ui

427
00:18:12,320 --> 00:18:13,280
and

428
00:18:13,280 --> 00:18:15,919
that actually would have exactly

429
00:18:15,919 --> 00:18:18,960
um the the same ui syntax but a

430
00:18:18,960 --> 00:18:20,720
different ci

431
00:18:20,720 --> 00:18:22,720
uh representation

432
00:18:22,720 --> 00:18:25,120
um so uh we

433
00:18:25,120 --> 00:18:27,840
need to decide which of these two we

434
00:18:27,840 --> 00:18:29,440
don't support

435
00:18:29,440 --> 00:18:32,559
and this presenter is leaning to

436
00:18:32,559 --> 00:18:36,400
uh say we support the zero segment

437
00:18:36,400 --> 00:18:38,799
uh path based

438
00:18:38,799 --> 00:18:42,720
uri but not the zero length opaque ui

439
00:18:42,720 --> 00:18:44,799
and one reason for that is that i have

440
00:18:44,799 --> 00:18:47,120
never seen a zero length opaque

441
00:18:47,120 --> 00:18:48,799
ui and

442
00:18:48,799 --> 00:18:50,240
i don't know how to do the proper

443
00:18:50,240 --> 00:18:52,640
research to to actually

444
00:18:52,640 --> 00:18:54,840
verify

445
00:18:54,840 --> 00:18:57,600
that uh but i i think it's relatively

446
00:18:57,600 --> 00:18:59,600
unlikely that somebody just wants to use

447
00:18:59,600 --> 00:19:01,600
a ui scheme and nothing

448
00:19:01,600 --> 00:19:03,360
after that um

449
00:19:03,360 --> 00:19:04,640
but allow

450
00:19:04,640 --> 00:19:07,919
opaque uh stuff after that as well

451
00:19:07,919 --> 00:19:09,120
so that's

452
00:19:09,120 --> 00:19:11,679
the decision where we could flip a coin

453
00:19:11,679 --> 00:19:14,960
um probably because the practical effect

454
00:19:14,960 --> 00:19:17,679
uh will be minimal but for consistency i

455
00:19:17,679 --> 00:19:18,960
would go for

456
00:19:18,960 --> 00:19:20,880
uh number one

457
00:19:20,880 --> 00:19:24,000
so if anybody in the audience has ever

458
00:19:24,000 --> 00:19:24,880
seen

459
00:19:24,880 --> 00:19:25,840
such

460
00:19:25,840 --> 00:19:28,799
a uri and has an opinion on that

461
00:19:28,799 --> 00:19:31,280
uh please send email to the list or

462
00:19:31,280 --> 00:19:32,960
speak up now

463
00:19:32,960 --> 00:19:35,280
so we can get some some help in making

464
00:19:35,280 --> 00:19:38,440
that decision

465
00:19:39,600 --> 00:19:41,280
uh sorry cars then there's a comment

466
00:19:41,280 --> 00:19:44,799
from brendan on the chat

467
00:19:48,480 --> 00:19:52,520
that is your eyes or urls

468
00:19:53,520 --> 00:19:56,799
um hi brendan moran here since the the

469
00:19:56,799 --> 00:19:58,880
questions coming up at the mic i figured

470
00:19:58,880 --> 00:20:00,880
i might as well do it myself

471
00:20:00,880 --> 00:20:01,760
um

472
00:20:01,760 --> 00:20:05,280
the the the slides thus far i haven't

473
00:20:05,280 --> 00:20:07,440
been able to tell whether we're

474
00:20:07,440 --> 00:20:10,400
discussing urls

475
00:20:10,400 --> 00:20:13,600
uris including urns or something else

476
00:20:13,600 --> 00:20:18,159
entirely um i can see one obviously is a

477
00:20:18,159 --> 00:20:20,640
url that one's clear

478
00:20:20,640 --> 00:20:24,240
um two looks to me a lot like urn

479
00:20:24,240 --> 00:20:26,159
um but you're calling it opaque stuff

480
00:20:26,159 --> 00:20:28,320
and your ends are not opaque so i'd like

481
00:20:28,320 --> 00:20:30,799
to be absolutely clear whether things

482
00:20:30,799 --> 00:20:33,360
like urns are in scope here

483
00:20:33,360 --> 00:20:36,159
okay the terminology in this space is

484
00:20:36,159 --> 00:20:38,559
completely confusing so

485
00:20:38,559 --> 00:20:40,559
there is itf terminology and there is

486
00:20:40,559 --> 00:20:43,760
what wg terminology and what we call

487
00:20:43,760 --> 00:20:47,840
uris are called urls in what wg and in

488
00:20:47,840 --> 00:20:48,720
other

489
00:20:48,720 --> 00:20:51,840
uh daily vernacular so please excuse if

490
00:20:51,840 --> 00:20:54,960
i'm not always clarifying this very well

491
00:20:54,960 --> 00:20:56,799
but these are all this is about your

492
00:20:56,799 --> 00:20:59,600
eyes so cries are supposed to cover your

493
00:20:59,600 --> 00:21:03,200
eyes and actually iris as as well

494
00:21:03,200 --> 00:21:06,400
because but not url

495
00:21:06,400 --> 00:21:09,039
well uris is the overall term that

496
00:21:09,039 --> 00:21:10,320
includes

497
00:21:10,320 --> 00:21:13,120
urls and even urns

498
00:21:13,120 --> 00:21:16,480
okay so cris are supposed to produce

499
00:21:16,480 --> 00:21:18,000
like i don't know what you would call it

500
00:21:18,000 --> 00:21:21,440
a crn um

501
00:21:21,520 --> 00:21:25,120
well um they're all tries and uh

502
00:21:25,120 --> 00:21:27,360
actually a uhn and that's another

503
00:21:27,360 --> 00:21:28,400
problem

504
00:21:28,400 --> 00:21:31,120
there is um

505
00:21:31,120 --> 00:21:34,000
uri scheme called urn

506
00:21:34,000 --> 00:21:36,559
and half of the people who say you are n

507
00:21:36,559 --> 00:21:41,120
mean a uri that uses the uh scheme qrn

508
00:21:41,120 --> 00:21:42,880
and the other half

509
00:21:42,880 --> 00:21:44,480
means the the

510
00:21:44,480 --> 00:21:46,640
foo colon opaque stuff that is number

511
00:21:46,640 --> 00:21:48,799
two on this slide

512
00:21:48,799 --> 00:21:51,520
and uh for uhn of course opaque stuff is

513
00:21:51,520 --> 00:21:53,600
the the registry

514
00:21:53,600 --> 00:21:56,480
uh and and uh all that structure uh

515
00:21:56,480 --> 00:21:59,360
behind that but it's not a hierarchical

516
00:21:59,360 --> 00:22:02,159
uh ur i like what is number one on my

517
00:22:02,159 --> 00:22:04,400
slide which is by the way not a url

518
00:22:04,400 --> 00:22:07,360
because it doesn't have an authority

519
00:22:07,360 --> 00:22:09,840
um so oh fair enough

520
00:22:09,840 --> 00:22:13,760
different again so that's really not

521
00:22:13,760 --> 00:22:16,400
helping very much to try to use these

522
00:22:16,400 --> 00:22:17,600
these terms

523
00:22:17,600 --> 00:22:21,039
you best think about uris with certain

524
00:22:21,039 --> 00:22:22,240
specific

525
00:22:22,240 --> 00:22:24,159
properties like having an authority

526
00:22:24,159 --> 00:22:27,919
having a segmented path and all that

527
00:22:27,919 --> 00:22:31,039
yeah okay thank you

528
00:22:35,600 --> 00:22:38,400
good i have two minutes left so please

529
00:22:38,400 --> 00:22:39,679
send

530
00:22:39,679 --> 00:22:42,320
things to the list that you think about

531
00:22:42,320 --> 00:22:43,919
these things

532
00:22:43,919 --> 00:22:46,880
let me just quickly talk about curries

533
00:22:46,880 --> 00:22:49,200
we talked extensively about curry's at

534
00:22:49,200 --> 00:22:50,640
an interim

535
00:22:50,640 --> 00:22:52,960
six weeks ago

536
00:22:52,960 --> 00:22:55,679
and i just want to report

537
00:22:55,679 --> 00:22:56,880
from that

538
00:22:56,880 --> 00:22:59,280
essentially curries are an opportunity

539
00:22:59,280 --> 00:23:01,360
it's not something that that we need to

540
00:23:01,360 --> 00:23:04,480
do but uh when we do this we might as

541
00:23:04,480 --> 00:23:07,280
well make sure that we handle curry's

542
00:23:07,280 --> 00:23:09,840
queries are a way to to

543
00:23:09,840 --> 00:23:12,880
do some lexical compression of your eyes

544
00:23:12,880 --> 00:23:15,520
that also looks good on a whiteboard

545
00:23:15,520 --> 00:23:18,559
so it's used by by a lot of formats that

546
00:23:18,559 --> 00:23:20,080
that need to look good

547
00:23:20,080 --> 00:23:21,440
on a whiteboard

548
00:23:21,440 --> 00:23:25,200
and um curries are a compression scheme

549
00:23:25,200 --> 00:23:28,240
that is based on uri syntax

550
00:23:28,240 --> 00:23:30,720
so there is no relationship between

551
00:23:30,720 --> 00:23:34,000
queries and the structure of a uri you

552
00:23:34,000 --> 00:23:35,600
can just cut up

553
00:23:35,600 --> 00:23:37,600
your eye anywhere and and put the

554
00:23:37,600 --> 00:23:39,600
different parts into different places

555
00:23:39,600 --> 00:23:40,720
that that

556
00:23:40,720 --> 00:23:42,559
amount to a curry

557
00:23:42,559 --> 00:23:44,400
so um

558
00:23:44,400 --> 00:23:47,360
that was really hard to support

559
00:23:47,360 --> 00:23:49,360
um the the mechanism that would best

560
00:23:49,360 --> 00:23:52,320
support this is sibo pact and sibo pack

561
00:23:52,320 --> 00:23:54,320
now has function tags

562
00:23:54,320 --> 00:23:56,960
that can be used for reconstructing a

563
00:23:56,960 --> 00:23:58,720
uri out of a

564
00:23:58,720 --> 00:24:00,880
query so we are kind of in a position to

565
00:24:00,880 --> 00:24:02,559
do this

566
00:24:02,559 --> 00:24:04,559
now even though it's way more

567
00:24:04,559 --> 00:24:06,400
complicated than the other things that

568
00:24:06,400 --> 00:24:08,000
sibo effect does

569
00:24:08,000 --> 00:24:09,200
uh for us

570
00:24:09,200 --> 00:24:11,840
uh but in the the interim i talked about

571
00:24:11,840 --> 00:24:14,799
we decided to do this in a separate uh

572
00:24:14,799 --> 00:24:17,360
specification and we didn't quite decide

573
00:24:17,360 --> 00:24:19,279
whether this needs to be done in coral

574
00:24:19,279 --> 00:24:21,679
or in a separate document we still can

575
00:24:21,679 --> 00:24:25,279
do that we need to start writing uh that

576
00:24:25,279 --> 00:24:27,840
uh document and we need to start uh

577
00:24:27,840 --> 00:24:30,880
which of the the potential carriers we

578
00:24:30,880 --> 00:24:33,840
actually support so two of the ones on

579
00:24:33,840 --> 00:24:36,959
this slide are uh

580
00:24:37,200 --> 00:24:40,159
in strikeout uh font because they are

581
00:24:40,159 --> 00:24:42,880
probably not easy to support while the

582
00:24:42,880 --> 00:24:44,840
other four probably are

583
00:24:44,840 --> 00:24:48,000
so let's talk about that

584
00:24:48,000 --> 00:24:50,559
but the the point is that whatever we

585
00:24:50,559 --> 00:24:54,000
come up here and and define as a

586
00:24:54,000 --> 00:24:54,960
better

587
00:24:54,960 --> 00:24:56,080
uh

588
00:24:56,080 --> 00:24:59,200
carry or a concise uh

589
00:24:59,200 --> 00:25:00,799
compact

590
00:25:00,799 --> 00:25:03,360
cri or whatever

591
00:25:03,360 --> 00:25:05,840
it doesn't have to to

592
00:25:05,840 --> 00:25:08,320
cover the entire carry

593
00:25:08,320 --> 00:25:09,520
space

594
00:25:09,520 --> 00:25:11,679
so in summary the the plan is to

595
00:25:11,679 --> 00:25:14,000
complete the test vector implementation

596
00:25:14,000 --> 00:25:14,880
work

597
00:25:14,880 --> 00:25:17,360
decide the full thing

598
00:25:17,360 --> 00:25:18,159
and

599
00:25:18,159 --> 00:25:20,799
do the working plus call with

600
00:25:20,799 --> 00:25:22,400
the next

601
00:25:22,400 --> 00:25:24,000
version of this

602
00:25:24,000 --> 00:25:25,200
document

603
00:25:25,200 --> 00:25:30,320
and in parallel start work on on a

604
00:25:30,320 --> 00:25:31,919
cri curry

605
00:25:31,919 --> 00:25:34,960
kind of thing that would fit into

606
00:25:34,960 --> 00:25:37,120
sibor's super packed

607
00:25:37,120 --> 00:25:39,200
framework and would fit together

608
00:25:39,200 --> 00:25:41,039
semantically with what we have done on

609
00:25:41,039 --> 00:25:43,520
the ci side

610
00:25:43,520 --> 00:25:45,120
and now we have zero minutes for

611
00:25:45,120 --> 00:25:47,918
discussion i think

612
00:25:48,480 --> 00:25:50,480
thank you very much just a question when

613
00:25:50,480 --> 00:25:52,799
do you expect the next submission more

614
00:25:52,799 --> 00:25:54,480
or less

615
00:25:54,480 --> 00:25:56,880
that depends a bit on how many other

616
00:25:56,880 --> 00:25:59,760
bugs we find in our implementations

617
00:25:59,760 --> 00:26:03,200
but we are down to a small number now so

618
00:26:03,200 --> 00:26:05,840
uh i would think this is not months but

619
00:26:05,840 --> 00:26:08,158
weeks

620
00:26:08,840 --> 00:26:12,880
okay great looking forward

621
00:26:12,880 --> 00:26:13,840
any

622
00:26:13,840 --> 00:26:18,080
last quick question for kirsten anyone

623
00:26:19,440 --> 00:26:22,720
you know thanks again kirsten and

624
00:26:22,720 --> 00:26:24,880
next item is coral

625
00:26:24,880 --> 00:26:28,520
presented by christian

626
00:26:35,660 --> 00:26:38,809
[Applause]

627
00:26:40,159 --> 00:26:42,640
hello so this is the

628
00:26:42,640 --> 00:26:46,000
next part coming from we now have uh

629
00:26:46,000 --> 00:26:47,600
cries

630
00:26:47,600 --> 00:26:48,559
uh

631
00:26:48,559 --> 00:26:51,840
now that we have a way of expressing

632
00:26:51,840 --> 00:26:55,039
your eyes well in a compact and

633
00:26:55,039 --> 00:26:58,240
embedded friendly way we can use this to

634
00:26:58,240 --> 00:26:59,360
build

635
00:26:59,360 --> 00:27:01,200
structured documents that talk about

636
00:27:01,200 --> 00:27:02,640
resources

637
00:27:02,640 --> 00:27:04,720
um i'd like for today i'd like to pick

638
00:27:04,720 --> 00:27:07,520
up a few um of the of the open issues

639
00:27:07,520 --> 00:27:09,520
and outgoing things um that are around

640
00:27:09,520 --> 00:27:10,880
in coral

641
00:27:10,880 --> 00:27:12,720
for that i'll

642
00:27:12,720 --> 00:27:13,840
briefly

643
00:27:13,840 --> 00:27:15,600
for everyone who is not familiar with

644
00:27:15,600 --> 00:27:18,159
coral so far i'll just summarize very

645
00:27:18,159 --> 00:27:21,039
quickly um this is a way of

646
00:27:21,039 --> 00:27:23,039
tell of making statements about

647
00:27:23,039 --> 00:27:26,000
resources similar to 6690

648
00:27:26,000 --> 00:27:28,799
um but with the extended options to have

649
00:27:28,799 --> 00:27:31,440
really real structured data in there um

650
00:27:31,440 --> 00:27:34,720
to build larger trees of data and to

651
00:27:34,720 --> 00:27:38,960
better guide interactions by using forms

652
00:27:38,960 --> 00:27:40,640
properties that are relevant for today

653
00:27:40,640 --> 00:27:42,640
are that this is in its structure

654
00:27:42,640 --> 00:27:44,880
similar to our in the information model

655
00:27:44,880 --> 00:27:47,039
that is behind it similar to rdf so we

656
00:27:47,039 --> 00:27:49,120
have statements that

657
00:27:49,120 --> 00:27:51,039
link one resource

658
00:27:51,039 --> 00:27:52,640
or one uri

659
00:27:52,640 --> 00:27:54,159
through some predicate that is also

660
00:27:54,159 --> 00:27:55,919
expressed in a uri

661
00:27:55,919 --> 00:27:58,720
with an object that is either

662
00:27:58,720 --> 00:28:00,480
another uri

663
00:28:00,480 --> 00:28:03,360
or a literal if you look at this example

664
00:28:03,360 --> 00:28:04,880
statement my temperature resource

665
00:28:04,880 --> 00:28:07,360
supports the serious transfer pattern um

666
00:28:07,360 --> 00:28:10,000
you'll see that in uh

667
00:28:10,000 --> 00:28:12,480
the so neither of these is what it looks

668
00:28:12,480 --> 00:28:14,480
like in sibor obviously

669
00:28:14,480 --> 00:28:17,360
um but this is a more of a diagnostic uh

670
00:28:17,360 --> 00:28:19,840
notation here and you'll see that often

671
00:28:19,840 --> 00:28:22,320
here in the slides i'll be using the

672
00:28:22,320 --> 00:28:24,240
very queries that carson just talked

673
00:28:24,240 --> 00:28:26,880
about because full your eyes behind

674
00:28:26,880 --> 00:28:28,799
those are lengthy but if it says core

675
00:28:28,799 --> 00:28:30,559
colon here this probably means something

676
00:28:30,559 --> 00:28:33,440
like http colon slash slash

677
00:28:33,440 --> 00:28:35,919
ayanna.org slash registry slash

678
00:28:35,919 --> 00:28:40,480
something that leads into into core

679
00:28:41,840 --> 00:28:42,960
um

680
00:28:42,960 --> 00:28:45,279
two a few things were changed recently

681
00:28:45,279 --> 00:28:48,000
and one of those is that literals are

682
00:28:48,000 --> 00:28:50,480
now much simpler so if you've been to

683
00:28:50,480 --> 00:28:52,399
the to the interims there has been

684
00:28:52,399 --> 00:28:53,919
discussion on

685
00:28:53,919 --> 00:28:56,159
what identity means if literals can

686
00:28:56,159 --> 00:28:58,320
still have properties

687
00:28:58,320 --> 00:29:00,559
the the current direction in which coral

688
00:29:00,559 --> 00:29:02,960
is going and this is already part of the

689
00:29:02,960 --> 00:29:04,320
latest

690
00:29:04,320 --> 00:29:06,880
draft is that we do not need properties

691
00:29:06,880 --> 00:29:10,080
of literatures because we can use uh

692
00:29:10,080 --> 00:29:10,960
things

693
00:29:10,960 --> 00:29:12,720
uh we can use the expressiveness of

694
00:29:12,720 --> 00:29:14,720
zebra tech so for example

695
00:29:14,720 --> 00:29:16,640
in earlier versions of coral

696
00:29:16,640 --> 00:29:17,840
a lot of

697
00:29:17,840 --> 00:29:20,640
um a typical metadata on the literal was

698
00:29:20,640 --> 00:29:22,640
the language or the text direction this

699
00:29:22,640 --> 00:29:25,440
is no now all uh covered in sibor tags

700
00:29:25,440 --> 00:29:27,039
thanks to uh

701
00:29:27,039 --> 00:29:29,679
also thanks to carson uh for

702
00:29:29,679 --> 00:29:32,000
covering that inside problem details

703
00:29:32,000 --> 00:29:33,760
because this is now where the relevant

704
00:29:33,760 --> 00:29:35,679
zebra tag that we'll be using

705
00:29:35,679 --> 00:29:38,399
is defined

706
00:29:39,840 --> 00:29:43,039
what is um what is the longer um what is

707
00:29:43,039 --> 00:29:46,159
also ongoing and is in part part of the

708
00:29:46,159 --> 00:29:49,200
current document but not in in full is

709
00:29:49,200 --> 00:29:52,240
how we use siebel pact now in order to

710
00:29:52,240 --> 00:29:54,720
express all of these statements clearly

711
00:29:54,720 --> 00:29:56,640
so uh concisely

712
00:29:56,640 --> 00:29:58,880
so what you see here is an example

713
00:29:58,880 --> 00:30:00,799
translated from

714
00:30:00,799 --> 00:30:03,520
uh from the proposal on the pubset

715
00:30:03,520 --> 00:30:05,039
broker

716
00:30:05,039 --> 00:30:08,640
and everything that is a query here in

717
00:30:08,640 --> 00:30:11,060
in this diagnostic notation would in a

718
00:30:11,060 --> 00:30:12,159
[Music]

719
00:30:12,159 --> 00:30:13,120
um

720
00:30:13,120 --> 00:30:15,440
in a binary representation be expressed

721
00:30:15,440 --> 00:30:17,279
through zebra packed

722
00:30:17,279 --> 00:30:19,039
now this is also this is a part that's

723
00:30:19,039 --> 00:30:20,159
already

724
00:30:20,159 --> 00:30:21,200
in

725
00:30:21,200 --> 00:30:22,640
in the document

726
00:30:22,640 --> 00:30:24,559
it says we're using zebra packed and no

727
00:30:24,559 --> 00:30:27,760
custom mechanism anymore

728
00:30:27,840 --> 00:30:29,919
frankly i think that that simple pact

729
00:30:29,919 --> 00:30:32,799
was re from a not very old idea uh

730
00:30:32,799 --> 00:30:34,960
reuptaken partially because it is really

731
00:30:34,960 --> 00:30:37,840
useful here

732
00:30:38,799 --> 00:30:40,559
what is not yet in the document but

733
00:30:40,559 --> 00:30:42,960
being planned for the next update is how

734
00:30:42,960 --> 00:30:45,520
we do set up this um how we to set up

735
00:30:45,520 --> 00:30:47,360
this dictionary so some of those

736
00:30:47,360 --> 00:30:50,720
statements would probably would ideally

737
00:30:50,720 --> 00:30:52,799
be loaded with a document type so when

738
00:30:52,799 --> 00:30:55,279
you receive a choral document

739
00:30:55,279 --> 00:30:57,120
um then there is already a dictionary

740
00:30:57,120 --> 00:30:58,880
set up that says that we can use all

741
00:30:58,880 --> 00:31:00,000
these chord

742
00:31:00,000 --> 00:31:03,200
terms so the title statement

743
00:31:03,200 --> 00:31:04,480
could be

744
00:31:04,480 --> 00:31:06,960
in in seaboard diagnostic notation could

745
00:31:06,960 --> 00:31:09,039
be as in the second line here

746
00:31:09,039 --> 00:31:10,480
and have the whole

747
00:31:10,480 --> 00:31:14,000
http iana.org something slash core slash

748
00:31:14,000 --> 00:31:16,240
title compressed down into those two

749
00:31:16,240 --> 00:31:17,120
bytes

750
00:31:17,120 --> 00:31:18,960
of a

751
00:31:18,960 --> 00:31:22,000
version packed tag

752
00:31:22,320 --> 00:31:25,200
extending this to

753
00:31:25,200 --> 00:31:28,480
to cover a larger variety of

754
00:31:28,480 --> 00:31:30,640
subtype of

755
00:31:30,640 --> 00:31:34,399
of problem spaces this can be applied to

756
00:31:34,399 --> 00:31:37,120
is um not

757
00:31:37,120 --> 00:31:39,440
quite trivial because um

758
00:31:39,440 --> 00:31:41,919
if we only set up one dictionary then

759
00:31:41,919 --> 00:31:44,080
this would mean that we have to register

760
00:31:44,080 --> 00:31:46,799
every term in the dictionary

761
00:31:46,799 --> 00:31:47,679
and

762
00:31:47,679 --> 00:31:49,760
the plan that i pl that i'd like to go

763
00:31:49,760 --> 00:31:52,559
with here is to allow setting up

764
00:31:52,559 --> 00:31:54,320
additional dictionaries using a

765
00:31:54,320 --> 00:31:55,840
mechanism very similar to what is

766
00:31:55,840 --> 00:31:59,039
already in sibo pact by stating that

767
00:31:59,039 --> 00:32:01,039
we are loading a particular number of

768
00:32:01,039 --> 00:32:03,440
terms from a well-known additional

769
00:32:03,440 --> 00:32:05,760
dictionary this this means that we don't

770
00:32:05,760 --> 00:32:07,760
have to lug around the weight

771
00:32:07,760 --> 00:32:11,039
of those so um if i said dictionary um

772
00:32:11,039 --> 00:32:11,919
earlier

773
00:32:11,919 --> 00:32:14,720
my apologies i meant tables terminology

774
00:32:14,720 --> 00:32:16,960
has changed here

775
00:32:16,960 --> 00:32:18,399
that means that we don't have to lug

776
00:32:18,399 --> 00:32:20,320
around the weight of having those tables

777
00:32:20,320 --> 00:32:23,039
we don't have to let our numbers

778
00:32:23,039 --> 00:32:25,360
grow incredibly large because we have so

779
00:32:25,360 --> 00:32:27,039
many

780
00:32:27,039 --> 00:32:28,960
entries in the table but we can use them

781
00:32:28,960 --> 00:32:31,519
selectively and by utilizing

782
00:32:31,519 --> 00:32:34,559
um well-known

783
00:32:34,559 --> 00:32:37,120
table tables we can also express this

784
00:32:37,120 --> 00:32:39,600
selection concisely as is shown here in

785
00:32:39,600 --> 00:32:42,399
the fifth line again using just a few

786
00:32:42,399 --> 00:32:45,519
bytes to select that

787
00:32:45,519 --> 00:32:49,120
to select that table that set of tables

788
00:32:49,120 --> 00:32:51,600
if an application really goes outside of

789
00:32:51,600 --> 00:32:53,760
the scope of what is known

790
00:32:53,760 --> 00:32:56,960
to be a round core then they can still

791
00:32:56,960 --> 00:32:57,840
ex

792
00:32:57,840 --> 00:33:01,200
load those by identifiers named

793
00:33:01,200 --> 00:33:04,240
named through a uri

794
00:33:05,440 --> 00:33:07,279
another item that is actually being

795
00:33:07,279 --> 00:33:09,519
worked on is the security model

796
00:33:09,519 --> 00:33:12,080
um coral will definitely need something

797
00:33:12,080 --> 00:33:13,840
some we need to say something about

798
00:33:13,840 --> 00:33:16,799
security but we plan not to

799
00:33:16,799 --> 00:33:18,399
um not to

800
00:33:18,399 --> 00:33:21,840
redu reduce redo things that are already

801
00:33:21,840 --> 00:33:25,120
described in security models such as ace

802
00:33:25,120 --> 00:33:26,720
but what coral

803
00:33:26,720 --> 00:33:30,080
will provide is for application authors

804
00:33:30,080 --> 00:33:33,919
a way of expressing what the application

805
00:33:33,919 --> 00:33:35,679
needs from the

806
00:33:35,679 --> 00:33:37,519
what the application needs the coral

807
00:33:37,519 --> 00:33:40,080
agent like this like a browser to

808
00:33:40,080 --> 00:33:43,679
enforce and for the choral agent

809
00:33:43,679 --> 00:33:47,200
there will be rules that say how those

810
00:33:47,200 --> 00:33:49,120
how those statements from the

811
00:33:49,120 --> 00:33:52,399
application are applied and what they

812
00:33:52,399 --> 00:33:55,279
mean in the context of loading for

813
00:33:55,279 --> 00:33:57,679
example a document with a dictionary

814
00:33:57,679 --> 00:34:00,080
that is externally referenced because in

815
00:34:00,080 --> 00:34:02,640
essence every piece of information that

816
00:34:02,640 --> 00:34:05,120
goes into assembling

817
00:34:05,120 --> 00:34:08,800
an action from a document will depend

818
00:34:08,800 --> 00:34:11,520
and security wise depend on the

819
00:34:11,520 --> 00:34:14,079
integrity of all the resources that go

820
00:34:14,079 --> 00:34:17,359
into making that statement

821
00:34:19,520 --> 00:34:21,760
so these are um these are the errors

822
00:34:21,760 --> 00:34:24,159
that are being worked on um

823
00:34:24,159 --> 00:34:26,560
next steps that are that will be taken

824
00:34:26,560 --> 00:34:29,679
up is that the binary serialization will

825
00:34:29,679 --> 00:34:31,280
need to be revisited but in order to do

826
00:34:31,280 --> 00:34:33,359
that and this is part of what i'm asking

827
00:34:33,359 --> 00:34:35,520
the group for input

828
00:34:35,520 --> 00:34:36,800
is that

829
00:34:36,800 --> 00:34:38,719
in order to evaluate that we'll need

830
00:34:38,719 --> 00:34:40,639
real world examples so whatever you

831
00:34:40,639 --> 00:34:42,800
would like to use this with

832
00:34:42,800 --> 00:34:44,800
um please let us know please send

833
00:34:44,800 --> 00:34:46,560
example documents that we can then

834
00:34:46,560 --> 00:34:48,960
translate and based on that decide what

835
00:34:48,960 --> 00:34:52,079
good just choices for the serialization

836
00:34:52,079 --> 00:34:53,040
will be

837
00:34:53,040 --> 00:34:54,960
problem details is

838
00:34:54,960 --> 00:34:58,320
something that will go in here

839
00:34:58,480 --> 00:35:01,839
um a non-next step in a sense is the

840
00:35:01,839 --> 00:35:05,040
topic of pruries patches and provenance

841
00:35:05,040 --> 00:35:07,280
as much as i'd like to have those around

842
00:35:07,280 --> 00:35:09,359
at some point i don't think that these

843
00:35:09,359 --> 00:35:12,000
are good items for the first version so

844
00:35:12,000 --> 00:35:14,000
i think we while we should keep them in

845
00:35:14,000 --> 00:35:14,880
mind

846
00:35:14,880 --> 00:35:17,280
i wouldn't want to have them around

847
00:35:17,280 --> 00:35:18,960
in an initial version because i think it

848
00:35:18,960 --> 00:35:21,520
will slow things down too much

849
00:35:21,520 --> 00:35:24,000
and i think i'm just on time to ask for

850
00:35:24,000 --> 00:35:25,280
the working group for comments and

851
00:35:25,280 --> 00:35:27,359
questions and for whether this is

852
00:35:27,359 --> 00:35:29,280
direction that we should follow before

853
00:35:29,280 --> 00:35:32,400
time's running out thank you

854
00:35:32,880 --> 00:35:34,560
thank you christian

855
00:35:34,560 --> 00:35:38,560
any comment question anyone

856
00:35:41,200 --> 00:35:42,720
i don't think we chat no one in the

857
00:35:42,720 --> 00:35:45,119
queue i have a question just to be sure

858
00:35:45,119 --> 00:35:46,640
you understand correctly so i suppose in

859
00:35:46,640 --> 00:35:48,160
the short term you want to focus mostly

860
00:35:48,160 --> 00:35:50,320
on the items you had in slides six and

861
00:35:50,320 --> 00:35:51,599
seven

862
00:35:51,599 --> 00:35:53,760
while possibly working in parallel but

863
00:35:53,760 --> 00:35:56,000
in a at a slower pace

864
00:35:56,000 --> 00:35:58,800
on the items on slide eight

865
00:35:58,800 --> 00:36:01,520
correct yes six six and seven are are

866
00:36:01,520 --> 00:36:04,640
ongoing items and items in slide eight

867
00:36:04,640 --> 00:36:07,359
are being started and are held back by

868
00:36:07,359 --> 00:36:09,440
the lack of examples

869
00:36:09,440 --> 00:36:12,000
um but both yes both will be addressed

870
00:36:12,000 --> 00:36:14,160
in parallel

871
00:36:14,160 --> 00:36:17,040
sounds great thanks

872
00:36:19,200 --> 00:36:22,960
no one in the queue nothing in the chat

873
00:36:22,960 --> 00:36:24,079
okay

874
00:36:24,079 --> 00:36:26,079
you know we can move to the next one

875
00:36:26,079 --> 00:36:27,839
yeah i'm it's great if you control that

876
00:36:27,839 --> 00:36:30,078
thanks

877
00:36:32,130 --> 00:36:34,960
[Music]

878
00:36:34,960 --> 00:36:36,720
okay this is marco i'm presenting as an

879
00:36:36,720 --> 00:36:39,359
individual this is an update of the

880
00:36:39,359 --> 00:36:41,040
group convince document

881
00:36:41,040 --> 00:36:43,839
next slide please

882
00:36:45,839 --> 00:36:47,040
thanks

883
00:36:47,040 --> 00:36:49,680
so in vienna we presented version six

884
00:36:49,680 --> 00:36:52,079
and after that the document entered a

885
00:36:52,079 --> 00:36:55,440
working row plus call we received uh

886
00:36:55,440 --> 00:36:57,359
quite a lot of comments uh all very

887
00:36:57,359 --> 00:36:58,960
useful thank you very much

888
00:36:58,960 --> 00:36:59,839
uh

889
00:36:59,839 --> 00:37:01,920
most of them were from uh reviews from

890
00:37:01,920 --> 00:37:03,839
from kirsten um

891
00:37:03,839 --> 00:37:05,440
well a summary of the review was

892
00:37:05,440 --> 00:37:07,280
actually posted on the list but then the

893
00:37:07,280 --> 00:37:09,359
authors got a lot of

894
00:37:09,359 --> 00:37:12,320
detailed comments uh to address in fact

895
00:37:12,320 --> 00:37:14,480
there were also more more replies from

896
00:37:14,480 --> 00:37:16,160
john shallow basically concurring with

897
00:37:16,160 --> 00:37:18,400
karsten and pointing also to lib co-op

898
00:37:18,400 --> 00:37:20,320
as an implementation that

899
00:37:20,320 --> 00:37:22,560
also supports group communication uh

900
00:37:22,560 --> 00:37:24,160
rick are confirming that the document is

901
00:37:24,160 --> 00:37:27,280
good and john matson started um a pr on

902
00:37:27,280 --> 00:37:29,520
the github so far only with editorial

903
00:37:29,520 --> 00:37:31,599
fixes that we already adopted in the

904
00:37:31,599 --> 00:37:33,920
latest version but i'm aware that more

905
00:37:33,920 --> 00:37:36,960
comments um are coming there

906
00:37:36,960 --> 00:37:40,160
uh next slide please

907
00:37:41,040 --> 00:37:43,280
uh so for the cutoff we submitted the

908
00:37:43,280 --> 00:37:45,920
the latest version seven uh to the best

909
00:37:45,920 --> 00:37:47,760
of our knowledge it is addressing all

910
00:37:47,760 --> 00:37:48,960
the received working groups called

911
00:37:48,960 --> 00:37:51,920
comments um i just summarized the main

912
00:37:51,920 --> 00:37:54,160
updates here um we have revised and

913
00:37:54,160 --> 00:37:56,720
extended the the list of

914
00:37:56,720 --> 00:37:59,040
updates or actions that this document

915
00:37:59,040 --> 00:38:01,119
produces on other documents especially

916
00:38:01,119 --> 00:38:03,359
the absolution of 7390

917
00:38:03,359 --> 00:38:04,960
and the update of

918
00:38:04,960 --> 00:38:07,520
7252

919
00:38:07,520 --> 00:38:09,599
we also had a figure providing an

920
00:38:09,599 --> 00:38:12,160
example on an example of how you can

921
00:38:12,160 --> 00:38:14,880
combine the different types of groups

922
00:38:14,880 --> 00:38:16,720
meaning co-op application and security

923
00:38:16,720 --> 00:38:17,599
groups

924
00:38:17,599 --> 00:38:20,320
we were just requested to build a

925
00:38:20,320 --> 00:38:22,480
real-life storyline around that examples

926
00:38:22,480 --> 00:38:24,800
and we did that considering a building

927
00:38:24,800 --> 00:38:27,599
automation use case to make it

928
00:38:27,599 --> 00:38:29,680
felt more real

929
00:38:29,680 --> 00:38:32,240
next slide please

930
00:38:32,240 --> 00:38:34,000
uh yeah there was quite a lot of work to

931
00:38:34,000 --> 00:38:36,240
do also on improving uh content related

932
00:38:36,240 --> 00:38:38,640
to uh the the naming of the different

933
00:38:38,640 --> 00:38:41,200
group types and as to co-op groups we

934
00:38:41,200 --> 00:38:43,599
highlighted also with examples that

935
00:38:43,599 --> 00:38:45,680
it is possible to name a cop group in

936
00:38:45,680 --> 00:38:47,440
different

937
00:38:47,440 --> 00:38:49,200
in different ways

938
00:38:49,200 --> 00:38:51,200
playing around with aliasing based on

939
00:38:51,200 --> 00:38:52,240
the

940
00:38:52,240 --> 00:38:53,760
on the subcomponents of the authority

941
00:38:53,760 --> 00:38:56,400
component of the group uri

942
00:38:56,400 --> 00:38:59,280
and then we we used to have a lot

943
00:38:59,280 --> 00:39:01,839
of examples in the document body showing

944
00:39:01,839 --> 00:39:04,079
how you can name in different ways

945
00:39:04,079 --> 00:39:06,720
application groups and how you can

946
00:39:06,720 --> 00:39:08,640
discovery groups of different types

947
00:39:08,640 --> 00:39:10,880
actually at the origin server

948
00:39:10,880 --> 00:39:13,760
so we moved all those examples

949
00:39:13,760 --> 00:39:16,640
with the necessary editorial adjustments

950
00:39:16,640 --> 00:39:18,800
um out of the document body and and to

951
00:39:18,800 --> 00:39:21,119
appendices and that i think improves

952
00:39:21,119 --> 00:39:23,599
readability quite a lot

953
00:39:23,599 --> 00:39:25,440
also as to security groups we clarify

954
00:39:25,440 --> 00:39:28,800
that well yes they have names uh as

955
00:39:28,800 --> 00:39:31,040
invariant identifiers but they are not

956
00:39:31,040 --> 00:39:34,160
exactly used in the protocol defined

957
00:39:34,160 --> 00:39:36,480
in this document or in the actual

958
00:39:36,480 --> 00:39:38,160
co-op group messages

959
00:39:38,160 --> 00:39:39,440
exchanged

960
00:39:39,440 --> 00:39:41,599
they are useful in in other protocol and

961
00:39:41,599 --> 00:39:43,119
mechanisms defined

962
00:39:43,119 --> 00:39:45,680
in other documents especially in ace

963
00:39:45,680 --> 00:39:46,480
as

964
00:39:46,480 --> 00:39:48,800
supporting uh security for group

965
00:39:48,800 --> 00:39:49,920
communication

966
00:39:49,920 --> 00:39:51,440
and since we had the opportunity we also

967
00:39:51,440 --> 00:39:54,000
clarified that it's a bad idea to use no

968
00:39:54,000 --> 00:39:57,280
sec or its variance lowercase uppercase

969
00:39:57,280 --> 00:39:59,760
as a name of a security group because

970
00:39:59,760 --> 00:40:01,599
well you'll be very misleading if it's

971
00:40:01,599 --> 00:40:03,599
an actual security group while if you

972
00:40:03,599 --> 00:40:05,760
use the nosek mode without security that

973
00:40:05,760 --> 00:40:08,960
just no security group adult name

974
00:40:08,960 --> 00:40:10,800
uh next slide please

975
00:40:10,800 --> 00:40:14,319
thanks uh and more was done also um on

976
00:40:14,319 --> 00:40:17,760
proxies uh this was also mostly uh from

977
00:40:17,760 --> 00:40:20,400
from comments from kirsten uh we better

978
00:40:20,400 --> 00:40:23,040
clarify the limitations and issues that

979
00:40:23,040 --> 00:40:24,640
you have in general if you introduce a

980
00:40:24,640 --> 00:40:26,960
proxy in this kind of setup and again

981
00:40:26,960 --> 00:40:28,079
that they are

982
00:40:28,079 --> 00:40:29,599
possible for the rest by using the

983
00:40:29,599 --> 00:40:32,079
method in the group proxy document that

984
00:40:32,079 --> 00:40:34,400
by the way defines also how you can deal

985
00:40:34,400 --> 00:40:35,760
with

986
00:40:35,760 --> 00:40:37,280
these issues where you consider

987
00:40:37,280 --> 00:40:39,599
specifically an http to co-op

988
00:40:39,599 --> 00:40:40,800
proxy

989
00:40:40,800 --> 00:40:43,119
and we also clarify a bit of terminology

990
00:40:43,119 --> 00:40:44,560
related to this

991
00:40:44,560 --> 00:40:45,760
and

992
00:40:45,760 --> 00:40:48,000
we also describe what happens in the

993
00:40:48,000 --> 00:40:49,200
case where

994
00:40:49,200 --> 00:40:51,440
the client sends a group request for

995
00:40:51,440 --> 00:40:53,520
instance over ip multicast to be

996
00:40:53,520 --> 00:40:56,400
received by multiple proxies at once uh

997
00:40:56,400 --> 00:40:58,000
each of which in turn forwards the

998
00:40:58,000 --> 00:40:58,960
request

999
00:40:58,960 --> 00:41:01,280
um to the group observer

1000
00:41:01,280 --> 00:41:03,440
uh discussing separately the case with

1001
00:41:03,440 --> 00:41:06,800
and without security um it was also

1002
00:41:06,800 --> 00:41:09,359
noted by kirsten that we were a bit too

1003
00:41:09,359 --> 00:41:11,440
strict in saying that

1004
00:41:11,440 --> 00:41:13,440
group communication cannot happen with

1005
00:41:13,440 --> 00:41:16,640
reliable transport uh where multicast

1006
00:41:16,640 --> 00:41:18,000
cannot happen

1007
00:41:18,000 --> 00:41:20,160
but we were already discussing a case uh

1008
00:41:20,160 --> 00:41:21,920
when using blockwise

1009
00:41:21,920 --> 00:41:24,480
uh where a first group request can be

1010
00:41:24,480 --> 00:41:26,560
sent over multicast with the blockchain

1011
00:41:26,560 --> 00:41:28,880
option and then the following requests

1012
00:41:28,880 --> 00:41:31,200
to request the following blocks from the

1013
00:41:31,200 --> 00:41:33,200
origin servers can be sent

1014
00:41:33,200 --> 00:41:34,960
individually via unicast to each of

1015
00:41:34,960 --> 00:41:37,200
those servers and well those unicast

1016
00:41:37,200 --> 00:41:40,160
requests can in principle use um

1017
00:41:40,160 --> 00:41:43,119
reliable transports and this kind of

1018
00:41:43,119 --> 00:41:44,960
transport switching

1019
00:41:44,960 --> 00:41:46,960
within the transfer of the same body can

1020
00:41:46,960 --> 00:41:48,960
also be facilitated

1021
00:41:48,960 --> 00:41:50,480
by means of the work

1022
00:41:50,480 --> 00:41:51,920
in the core transport indication

1023
00:41:51,920 --> 00:41:53,280
document

1024
00:41:53,280 --> 00:41:55,119
and there was also a revision about the

1025
00:41:55,119 --> 00:41:56,720
interworking with other protocols

1026
00:41:56,720 --> 00:41:58,880
especially related to

1027
00:41:58,880 --> 00:42:01,920
multicast routing and referring to uh

1028
00:42:01,920 --> 00:42:03,280
most recent

1029
00:42:03,280 --> 00:42:06,640
itf documents especially in six though

1030
00:42:06,640 --> 00:42:08,160
next slide please

1031
00:42:08,160 --> 00:42:11,280
and finally to wrap up on the updates uh

1032
00:42:11,280 --> 00:42:14,720
we revised again the phrasing around the

1033
00:42:14,720 --> 00:42:17,200
use of the nausic mode trying to be

1034
00:42:17,200 --> 00:42:19,760
uniform and assertive

1035
00:42:19,760 --> 00:42:21,839
all over the document

1036
00:42:21,839 --> 00:42:23,680
the nalsec mode where no security is

1037
00:42:23,680 --> 00:42:26,480
used is highly discouraged it's not

1038
00:42:26,480 --> 00:42:29,280
recommended there are a few exceptions

1039
00:42:29,280 --> 00:42:31,359
mentioned up front like

1040
00:42:31,359 --> 00:42:33,839
early discovery of devices or services

1041
00:42:33,839 --> 00:42:34,800
before

1042
00:42:34,800 --> 00:42:36,480
you can do anything better so you

1043
00:42:36,480 --> 00:42:38,560
basically you have another choice

1044
00:42:38,560 --> 00:42:40,640
uh but still even so you need to have

1045
00:42:40,640 --> 00:42:42,720
very well understood the security

1046
00:42:42,720 --> 00:42:45,200
implications of this editorially we are

1047
00:42:45,200 --> 00:42:47,200
also using that without quotes now just

1048
00:42:47,200 --> 00:42:50,000
like rfc 7252 does

1049
00:42:50,000 --> 00:42:51,839
and we have also revised the number of

1050
00:42:51,839 --> 00:42:54,560
security considerations related to

1051
00:42:54,560 --> 00:42:56,640
properties of purpose core

1052
00:42:56,640 --> 00:42:59,520
possible fragmentation issues in in 601

1053
00:42:59,520 --> 00:43:02,160
and and purposive monitoring uh

1054
00:43:02,160 --> 00:43:04,240
especially highlighting highlighting how

1055
00:43:04,240 --> 00:43:06,240
that makes a difference in group

1056
00:43:06,240 --> 00:43:08,000
communication

1057
00:43:08,000 --> 00:43:10,000
plus of course an overall editorial

1058
00:43:10,000 --> 00:43:12,880
revision of the whole document

1059
00:43:12,880 --> 00:43:16,560
uh thanks uh yeah to wrap up uh this

1060
00:43:16,560 --> 00:43:18,400
last version addresses all the comments

1061
00:43:18,400 --> 00:43:21,520
we got uh so far but we expect at least

1062
00:43:21,520 --> 00:43:23,839
uh one more version to be submitted

1063
00:43:23,839 --> 00:43:26,480
because we expect a follow-up from from

1064
00:43:26,480 --> 00:43:27,599
kirsten

1065
00:43:27,599 --> 00:43:30,079
uh with counter comments on how we

1066
00:43:30,079 --> 00:43:32,640
addressed his review and yeah i i know

1067
00:43:32,640 --> 00:43:34,960
that that john will follow up also with

1068
00:43:34,960 --> 00:43:38,079
uh more comments on spr and who knows

1069
00:43:38,079 --> 00:43:40,640
maybe more can come but yeah we expect

1070
00:43:40,640 --> 00:43:42,800
at least one more version and hopefully

1071
00:43:42,800 --> 00:43:44,960
that can be um a final one really

1072
00:43:44,960 --> 00:43:46,800
incorporating all comments in a stable

1073
00:43:46,800 --> 00:43:47,599
way

1074
00:43:47,599 --> 00:43:49,680
and finally i just wanted to give a

1075
00:43:49,680 --> 00:43:51,200
reminder that francesc at some point

1076
00:43:51,200 --> 00:43:53,920
recommended that when it is ready uh

1077
00:43:53,920 --> 00:43:56,000
this document would be better um sent to

1078
00:43:56,000 --> 00:43:58,960
the isg together with other two

1079
00:43:58,960 --> 00:44:01,599
related documents at the same time

1080
00:44:01,599 --> 00:44:03,200
one is gripple score now in shepherd

1081
00:44:03,200 --> 00:44:05,760
right up another one isn't a document in

1082
00:44:05,760 --> 00:44:08,480
ace describing how to provide keys for

1083
00:44:08,480 --> 00:44:10,240
group of call

1084
00:44:10,240 --> 00:44:11,920
and actually that line in the slide is

1085
00:44:11,920 --> 00:44:13,839
not correct anymore i i've just found

1086
00:44:13,839 --> 00:44:16,000
out that a few hours ago the document

1087
00:44:16,000 --> 00:44:17,119
moved to

1088
00:44:17,119 --> 00:44:19,440
waiting for shepard right up

1089
00:44:19,440 --> 00:44:21,440
doesn't change the fact that

1090
00:44:21,440 --> 00:44:24,079
i was expecting a few more comments uh

1091
00:44:24,079 --> 00:44:25,839
coming to address and i have also in the

1092
00:44:25,839 --> 00:44:26,800
queue

1093
00:44:26,800 --> 00:44:29,119
um some more points to add

1094
00:44:29,119 --> 00:44:31,040
in this very document and in another

1095
00:44:31,040 --> 00:44:32,800
related one

1096
00:44:32,800 --> 00:44:35,280
but i discussed uh this part already

1097
00:44:35,280 --> 00:44:36,480
also with

1098
00:44:36,480 --> 00:44:38,560
daniel and his co-chair he definitely

1099
00:44:38,560 --> 00:44:41,839
agrees with the need of thinking about

1100
00:44:41,839 --> 00:44:43,680
a single bundle to be submitted to the

1101
00:44:43,680 --> 00:44:46,160
isg

1102
00:44:46,160 --> 00:44:48,400
so this is the status and that was my

1103
00:44:48,400 --> 00:44:49,599
last slide

1104
00:44:49,599 --> 00:44:52,800
any question comment

1105
00:44:58,800 --> 00:45:00,079
christian

1106
00:45:00,079 --> 00:45:01,599
christian um

1107
00:45:01,599 --> 00:45:02,960
i was a bit one

1108
00:45:02,960 --> 00:45:06,480
when when you mention that um the the

1109
00:45:06,480 --> 00:45:08,079
the way that

1110
00:45:08,079 --> 00:45:09,440
um

1111
00:45:09,440 --> 00:45:10,480
block one

1112
00:45:10,480 --> 00:45:12,800
second and and later blocks are pulled

1113
00:45:12,800 --> 00:45:15,680
out that those happen with unicast i

1114
00:45:15,680 --> 00:45:18,400
suppose this is based on the

1115
00:45:18,400 --> 00:45:21,200
statement in 7959 that says that

1116
00:45:21,200 --> 00:45:23,760
this is how it works um was there any

1117
00:45:23,760 --> 00:45:26,560
evaluation on whether um getting a

1118
00:45:26,560 --> 00:45:28,560
response getting the later blocks with a

1119
00:45:28,560 --> 00:45:31,280
multicast as well so just a get with the

1120
00:45:31,280 --> 00:45:32,880
block 2 option

1121
00:45:32,880 --> 00:45:36,160
um would make sense because the 7959

1122
00:45:36,160 --> 00:45:38,079
says that other uses of block options

1123
00:45:38,079 --> 00:45:41,680
with multicast are fulfill the study

1124
00:45:41,680 --> 00:45:43,599
and now that multi

1125
00:45:43,599 --> 00:45:45,359
now that the group communication is

1126
00:45:45,359 --> 00:45:49,200
revised this might be a good point

1127
00:45:49,200 --> 00:45:52,720
yes and to clarify the the the switch to

1128
00:45:52,720 --> 00:45:54,640
unicast for the following blocks was

1129
00:45:54,640 --> 00:45:56,640
already in the draft for a while

1130
00:45:56,640 --> 00:45:58,960
was what carson noted was that well at

1131
00:45:58,960 --> 00:46:00,720
that point the switch can also include

1132
00:46:00,720 --> 00:46:02,240
switching to a reliable transport

1133
00:46:02,240 --> 00:46:04,640
altogether

1134
00:46:04,640 --> 00:46:06,960
i see

1135
00:46:07,359 --> 00:46:10,598
thank you

1136
00:46:14,720 --> 00:46:17,040
okay if there's nothing more and knowing

1137
00:46:17,040 --> 00:46:19,200
that we should expect the next version

1138
00:46:19,200 --> 00:46:22,439
thank you

1139
00:46:31,040 --> 00:46:33,839
the next one is christian again with

1140
00:46:33,839 --> 00:46:37,720
observe multicast notifications

1141
00:46:43,520 --> 00:46:46,560
you're muted christian

1142
00:46:47,359 --> 00:46:50,319
just trying to find the right

1143
00:46:55,599 --> 00:46:56,960
uh buttons we stay with the topic of

1144
00:46:56,960 --> 00:46:58,800
multicast

1145
00:46:58,800 --> 00:47:02,480
and so for um original co-op um as well

1146
00:47:02,480 --> 00:47:03,920
as the

1147
00:47:03,920 --> 00:47:05,599
uh the updates that are that were

1148
00:47:05,599 --> 00:47:08,800
presented right now only describes how

1149
00:47:08,800 --> 00:47:11,920
multicast is set how multicast packets

1150
00:47:11,920 --> 00:47:14,240
are used to send requests

1151
00:47:14,240 --> 00:47:16,319
and responses that are sent to many

1152
00:47:16,319 --> 00:47:17,440
clients

1153
00:47:17,440 --> 00:47:19,280
were so far not described

1154
00:47:19,280 --> 00:47:21,280
this is what observed multicast

1155
00:47:21,280 --> 00:47:23,280
notification does

1156
00:47:23,280 --> 00:47:26,079
it allows sending responses to a group

1157
00:47:26,079 --> 00:47:26,800
of

1158
00:47:26,800 --> 00:47:29,520
um to a group of clients whose token

1159
00:47:29,520 --> 00:47:32,720
space is managed by the server as a

1160
00:47:32,720 --> 00:47:35,839
steward of of that multicast address

1161
00:47:35,839 --> 00:47:38,640
this was envisioned as part

1162
00:47:38,640 --> 00:47:41,280
as part of discussions

1163
00:47:41,280 --> 00:47:43,680
around pubs the pubs model which is why

1164
00:47:43,680 --> 00:47:46,640
the the illustration here

1165
00:47:46,640 --> 00:47:48,880
shows this as a broker finding out the

1166
00:47:48,880 --> 00:47:51,359
responses but is really applicable to

1167
00:47:51,359 --> 00:47:54,079
all kinds of of observation situations

1168
00:47:54,079 --> 00:47:57,760
in which a large number of devices in a

1169
00:47:57,760 --> 00:47:59,040
network

1170
00:47:59,040 --> 00:48:01,040
that supports multicast well is

1171
00:48:01,040 --> 00:48:04,400
observing a single resource

1172
00:48:04,400 --> 00:48:06,880
as with all modern multicast components

1173
00:48:06,880 --> 00:48:09,040
uh this is supported by grouposcore in

1174
00:48:09,040 --> 00:48:11,520
only to get uh actual actual

1175
00:48:11,520 --> 00:48:13,040
cryptographic protection of requested

1176
00:48:13,040 --> 00:48:14,559
responses

1177
00:48:14,559 --> 00:48:17,119
responses mainly here

1178
00:48:17,119 --> 00:48:19,040
since this was last um presented at the

1179
00:48:19,040 --> 00:48:22,000
eye at the at the last session

1180
00:48:22,000 --> 00:48:24,240
um we've made a few updates um in

1181
00:48:24,240 --> 00:48:27,760
particular we are now elaborating on

1182
00:48:27,760 --> 00:48:30,400
how a client can obtain

1183
00:48:30,400 --> 00:48:32,720
the necessary configuration information

1184
00:48:32,720 --> 00:48:34,960
that is what is the precise request on

1185
00:48:34,960 --> 00:48:37,680
which token was it sent uh

1186
00:48:37,680 --> 00:48:39,760
at which multicast addresses

1187
00:48:39,760 --> 00:48:41,920
from which multicast to which multicast

1188
00:48:41,920 --> 00:48:43,920
address is the

1189
00:48:43,920 --> 00:48:46,880
response being sent etc

1190
00:48:46,880 --> 00:48:48,960
that the client can not only obtain

1191
00:48:48,960 --> 00:48:51,119
these from trying to set up an

1192
00:48:51,119 --> 00:48:53,119
observation but also through other means

1193
00:48:53,119 --> 00:48:55,440
because in a sense it is just a piece of

1194
00:48:55,440 --> 00:48:57,760
information about a state of the server

1195
00:48:57,760 --> 00:48:59,359
that is around

1196
00:48:59,359 --> 00:49:01,520
um a typical way of obtaining that

1197
00:49:01,520 --> 00:49:04,079
information is because it is part of a

1198
00:49:04,079 --> 00:49:05,599
pub sub discovery

1199
00:49:05,599 --> 00:49:07,359
step

1200
00:49:07,359 --> 00:49:09,440
the current document also not not only

1201
00:49:09,440 --> 00:49:11,359
describes that this is possible but also

1202
00:49:11,359 --> 00:49:13,040
what this means for the server because

1203
00:49:13,040 --> 00:49:14,880
if the server is not handing out that

1204
00:49:14,880 --> 00:49:17,359
information on a short term basis but as

1205
00:49:17,359 --> 00:49:19,119
a general statement that means that it

1206
00:49:19,119 --> 00:49:20,880
must have the request

1207
00:49:20,880 --> 00:49:22,720
already running and must be sending out

1208
00:49:22,720 --> 00:49:25,280
multicast notifications for as long as

1209
00:49:25,280 --> 00:49:27,200
that information is around

1210
00:49:27,200 --> 00:49:28,720
which still doesn't freed

1211
00:49:28,720 --> 00:49:30,400
from looking at

1212
00:49:30,400 --> 00:49:32,640
whether it is necessary

1213
00:49:32,640 --> 00:49:35,119
uh to still send it up so that to still

1214
00:49:35,119 --> 00:49:38,400
send these notifications

1215
00:49:38,400 --> 00:49:40,720
but it has to keep track it has to keep

1216
00:49:40,720 --> 00:49:43,200
track of both the number of participants

1217
00:49:43,200 --> 00:49:45,359
and whether it has that statement still

1218
00:49:45,359 --> 00:49:46,880
in a valid form

1219
00:49:46,880 --> 00:49:49,680
somewhere around

1220
00:49:50,400 --> 00:49:53,520
a few updates were just editorial being

1221
00:49:53,520 --> 00:49:54,480
that

1222
00:49:54,480 --> 00:49:57,040
terminology was adjusted or changed

1223
00:49:57,040 --> 00:49:59,920
but there were also um conceptual new

1224
00:49:59,920 --> 00:50:01,119
input like

1225
00:50:01,119 --> 00:50:02,960
or at least

1226
00:50:02,960 --> 00:50:04,880
yeah there was there was a lot of new

1227
00:50:04,880 --> 00:50:06,319
text for example

1228
00:50:06,319 --> 00:50:08,000
um all those prerequisites that are

1229
00:50:08,000 --> 00:50:10,960
listed in the introduction that are um

1230
00:50:10,960 --> 00:50:12,400
we have to have a

1231
00:50:12,400 --> 00:50:14,240
multicast address that is managed and we

1232
00:50:14,240 --> 00:50:15,920
have to be on a network et cetera are

1233
00:50:15,920 --> 00:50:19,040
now listed explicitly

1234
00:50:19,040 --> 00:50:21,200
this also takes input from reviews that

1235
00:50:21,200 --> 00:50:23,599
we've received on some prerequisites

1236
00:50:23,599 --> 00:50:25,440
where we were previously a bit sloppy

1237
00:50:25,440 --> 00:50:28,160
about describing them

1238
00:50:28,160 --> 00:50:30,720
another new section also based on input

1239
00:50:30,720 --> 00:50:33,440
from previous reviews now

1240
00:50:33,440 --> 00:50:35,520
lists the various modes in which this

1241
00:50:35,520 --> 00:50:36,800
can be

1242
00:50:36,800 --> 00:50:38,559
used because we do have a lot of

1243
00:50:38,559 --> 00:50:41,760
examples and the document was previously

1244
00:50:41,760 --> 00:50:42,720
a bit

1245
00:50:42,720 --> 00:50:44,400
confusing as to

1246
00:50:44,400 --> 00:50:46,240
which configuration is now being used so

1247
00:50:46,240 --> 00:50:48,640
for example if there is groupos code

1248
00:50:48,640 --> 00:50:50,160
being used if there are deterministic

1249
00:50:50,160 --> 00:50:52,880
requests being used all these change

1250
00:50:52,880 --> 00:50:56,319
subtle details of um

1251
00:50:56,319 --> 00:50:57,119
of

1252
00:50:57,119 --> 00:50:59,920
what of what this means for the for the

1253
00:50:59,920 --> 00:51:02,319
precise packets that are being

1254
00:51:02,319 --> 00:51:04,880
exchanged

1255
00:51:04,960 --> 00:51:07,599
a current point that that that we would

1256
00:51:07,599 --> 00:51:09,760
like to change in a future version

1257
00:51:09,760 --> 00:51:11,359
is the handling of deterministic

1258
00:51:11,359 --> 00:51:14,000
requests because so far uh we haven't

1259
00:51:14,000 --> 00:51:16,720
been fully clear on

1260
00:51:16,720 --> 00:51:18,960
what it means for uh

1261
00:51:18,960 --> 00:51:20,400
for a deterministic client to be in a

1262
00:51:20,400 --> 00:51:23,200
group on

1263
00:51:23,200 --> 00:51:26,240
with respect to whether clients are

1264
00:51:26,240 --> 00:51:28,319
required to implement deterministic

1265
00:51:28,319 --> 00:51:29,359
requests

1266
00:51:29,359 --> 00:51:31,280
the proposal now uh previously this

1267
00:51:31,280 --> 00:51:32,480
meant that

1268
00:51:32,480 --> 00:51:36,880
a server could need to run both the

1269
00:51:36,880 --> 00:51:39,200
two notifications one was deterministic

1270
00:51:39,200 --> 00:51:42,000
request and one was a regular request

1271
00:51:42,000 --> 00:51:44,319
created by the server itself

1272
00:51:44,319 --> 00:51:47,040
the proposal now is to just say that

1273
00:51:47,040 --> 00:51:49,040
given that already there's so much

1274
00:51:49,040 --> 00:51:50,640
pre-configuration

1275
00:51:50,640 --> 00:51:54,480
required for this all anyway

1276
00:51:54,480 --> 00:51:54,760
um

1277
00:51:54,760 --> 00:51:55,839
[Music]

1278
00:51:55,839 --> 00:51:59,040
that it makes sense to just state that

1279
00:51:59,040 --> 00:52:02,640
the group has or does uh has or has no

1280
00:52:02,640 --> 00:52:04,319
support for deterministic requests and

1281
00:52:04,319 --> 00:52:05,520
if there's

1282
00:52:05,520 --> 00:52:08,160
if there are deterministic requests

1283
00:52:08,160 --> 00:52:09,920
being used then the clients have to

1284
00:52:09,920 --> 00:52:11,440
support these and the server doesn't

1285
00:52:11,440 --> 00:52:13,200
have to run to parallel

1286
00:52:13,200 --> 00:52:16,839
observations for the different kinds of

1287
00:52:16,839 --> 00:52:19,520
clients this should be a reasonable

1288
00:52:19,520 --> 00:52:22,160
implication

1289
00:52:22,160 --> 00:52:24,079
another change that is coming up and

1290
00:52:24,079 --> 00:52:26,640
there's already a part of a draft branch

1291
00:52:26,640 --> 00:52:28,880
but not um but not yet ready to be

1292
00:52:28,880 --> 00:52:30,800
merged is that

1293
00:52:30,800 --> 00:52:32,400
we have a lot of information

1294
00:52:32,400 --> 00:52:35,119
in the phantom requests and in the in

1295
00:52:35,119 --> 00:52:36,640
the informative response or in the

1296
00:52:36,640 --> 00:52:38,319
informative responses

1297
00:52:38,319 --> 00:52:42,400
that relate to addresses of co-op um

1298
00:52:42,400 --> 00:52:44,480
addresses of core endpoints

1299
00:52:44,480 --> 00:52:48,319
and given that uh now uh cris are

1300
00:52:48,319 --> 00:52:50,480
becoming stable enough to reuse them in

1301
00:52:50,480 --> 00:52:51,760
this document

1302
00:52:51,760 --> 00:52:53,359
we are slowly switching all these

1303
00:52:53,359 --> 00:52:57,440
occurrences over to just using cris so

1304
00:52:57,440 --> 00:53:00,319
instead of using our own list of what

1305
00:53:00,319 --> 00:53:03,119
what if what protocols are around that

1306
00:53:03,119 --> 00:53:04,640
support multicast

1307
00:53:04,640 --> 00:53:07,520
we just use the schemes that are part of

1308
00:53:07,520 --> 00:53:09,440
the cri

1309
00:53:09,440 --> 00:53:11,040
um that other part of that are

1310
00:53:11,040 --> 00:53:13,440
registered as part of cri and those that

1311
00:53:13,440 --> 00:53:15,119
can do multicast

1312
00:53:15,119 --> 00:53:17,200
are usable

1313
00:53:17,200 --> 00:53:18,480
in this place

1314
00:53:18,480 --> 00:53:21,359
this is also lined with work on on prop

1315
00:53:21,359 --> 00:53:23,200
on proxies

1316
00:53:23,200 --> 00:53:26,240
that has a similar field that previously

1317
00:53:26,240 --> 00:53:28,640
listed both the protocol and the ip

1318
00:53:28,640 --> 00:53:30,319
address and now just

1319
00:53:30,319 --> 00:53:33,119
list the cri

1320
00:53:33,760 --> 00:53:35,839
and so in in in practice this means that

1321
00:53:35,839 --> 00:53:38,640
just a number of fields are renamed

1322
00:53:38,640 --> 00:53:40,880
and that information moves a bit between

1323
00:53:40,880 --> 00:53:42,400
fields that are now

1324
00:53:42,400 --> 00:53:44,800
grouped together or i'll split up

1325
00:53:44,800 --> 00:53:46,000
between

1326
00:53:46,000 --> 00:53:49,200
split up from what used to be

1327
00:53:49,200 --> 00:53:51,839
b1 field

1328
00:53:52,960 --> 00:53:54,720
yeah that being said we've also

1329
00:53:54,720 --> 00:53:57,760
processed a review from from ayana um

1330
00:53:57,760 --> 00:54:00,000
some of which does not fully apply

1331
00:54:00,000 --> 00:54:02,960
anymore because it is related to how we

1332
00:54:02,960 --> 00:54:04,640
defined

1333
00:54:04,640 --> 00:54:06,880
um how we previously defined those

1334
00:54:06,880 --> 00:54:09,440
transports which is now using using cris

1335
00:54:09,440 --> 00:54:12,480
or we will now be using cris

1336
00:54:12,480 --> 00:54:14,880
but the rest of the review is still very

1337
00:54:14,880 --> 00:54:17,920
valuable and will be part of the next

1338
00:54:17,920 --> 00:54:20,880
of the next iteration

1339
00:54:21,760 --> 00:54:24,319
i think that's largely it from me and i

1340
00:54:24,319 --> 00:54:26,400
think i've made a good time so thanks

1341
00:54:26,400 --> 00:54:28,800
for uh thanks for your attention

1342
00:54:28,800 --> 00:54:32,640
and do you have questions comments

1343
00:54:36,240 --> 00:54:39,479
thank you

1344
00:54:42,799 --> 00:54:46,319
anyone for a common question

1345
00:54:49,119 --> 00:54:50,720
hi christian one question

1346
00:54:50,720 --> 00:54:52,480
how do you think this draft could affect

1347
00:54:52,480 --> 00:54:54,799
the pops up the existing pops up draft

1348
00:54:54,799 --> 00:54:56,319
on the pubs of work in general made your

1349
00:54:56,319 --> 00:54:58,640
modifications minor what do you think um

1350
00:54:58,640 --> 00:55:01,359
it does not i don't think that this will

1351
00:55:01,359 --> 00:55:04,799
influence pops up in in any way in that

1352
00:55:04,799 --> 00:55:07,119
a pops up broker can still be set up as

1353
00:55:07,119 --> 00:55:08,960
it as it always was

1354
00:55:08,960 --> 00:55:11,280
it just has an additional option of

1355
00:55:11,280 --> 00:55:13,359
using this feature

1356
00:55:13,359 --> 00:55:15,599
um and using it through a lot of places

1357
00:55:15,599 --> 00:55:17,359
so it will it would

1358
00:55:17,359 --> 00:55:19,040
um

1359
00:55:19,040 --> 00:55:21,119
ex it would advertise additional

1360
00:55:21,119 --> 00:55:24,000
information about the resource

1361
00:55:24,000 --> 00:55:25,599
um but

1362
00:55:25,599 --> 00:55:28,319
the basic pops up would not change and

1363
00:55:28,319 --> 00:55:30,640
this is purely opt-in for applications

1364
00:55:30,640 --> 00:55:32,799
so

1365
00:55:32,960 --> 00:55:36,960
it it just it just matches well

1366
00:55:40,040 --> 00:55:42,079
[Music]

1367
00:55:42,079 --> 00:55:42,960
okay

1368
00:55:42,960 --> 00:55:46,680
more questions comments

1369
00:55:48,000 --> 00:55:50,400
you know thank you again

1370
00:55:50,400 --> 00:55:52,960
thank you very perfectly back on time

1371
00:55:52,960 --> 00:55:54,240
uh

1372
00:55:54,240 --> 00:55:56,240
so now it's ricard's turn

1373
00:55:56,240 --> 00:55:58,160
with two documents in a row starting

1374
00:55:58,160 --> 00:56:00,400
with uh profiling add-on for co-op

1375
00:56:00,400 --> 00:56:03,400
underscore

1376
00:56:03,680 --> 00:56:06,799
yes let me share the

1377
00:56:07,599 --> 00:56:10,160
slides

1378
00:56:13,760 --> 00:56:17,799
start to find it in the list

1379
00:56:21,280 --> 00:56:23,599
okay

1380
00:56:26,240 --> 00:56:29,040
right so yes hello everyone

1381
00:56:29,040 --> 00:56:30,640
i will be presenting updates on this

1382
00:56:30,640 --> 00:56:33,040
draft profiling profiling ad doc for

1383
00:56:33,040 --> 00:56:35,920
co-op score

1384
00:56:36,079 --> 00:56:38,720
and i'll jump right in so

1385
00:56:38,720 --> 00:56:41,599
just to go over a recap about what this

1386
00:56:41,599 --> 00:56:43,920
document is about

1387
00:56:43,920 --> 00:56:46,480
so first of all edoc that is a

1388
00:56:46,480 --> 00:56:49,359
lightweight authenticated key exchange

1389
00:56:49,359 --> 00:56:50,880
being developed in the lake working

1390
00:56:50,880 --> 00:56:51,839
group

1391
00:56:51,839 --> 00:56:54,160
and one of its main uses

1392
00:56:54,160 --> 00:56:56,640
is to establish a score security context

1393
00:56:56,640 --> 00:56:59,119
between two peers

1394
00:56:59,119 --> 00:57:01,440
typically when you run that doctor

1395
00:57:01,440 --> 00:57:03,280
you need two round trips before you can

1396
00:57:03,280 --> 00:57:05,680
actually start using os core

1397
00:57:05,680 --> 00:57:08,079
and the point and the the scope of this

1398
00:57:08,079 --> 00:57:10,880
document is

1399
00:57:11,520 --> 00:57:13,760
the main focus is how can you achieve an

1400
00:57:13,760 --> 00:57:15,280
optimization

1401
00:57:15,280 --> 00:57:17,839
where you actually combine

1402
00:57:17,839 --> 00:57:19,920
the third adult message with your actual

1403
00:57:19,920 --> 00:57:22,240
first oscar request as you can see in

1404
00:57:22,240 --> 00:57:25,280
the blue box there to the right

1405
00:57:25,280 --> 00:57:27,520
um so it's essentially defining an

1406
00:57:27,520 --> 00:57:30,640
optimized workflow for edoc

1407
00:57:30,640 --> 00:57:32,640
when transported over co-op with the

1408
00:57:32,640 --> 00:57:37,119
intent to to use it for os core

1409
00:57:37,119 --> 00:57:37,770
and

1410
00:57:37,770 --> 00:57:39,119
[Music]

1411
00:57:39,119 --> 00:57:41,520
it defines um

1412
00:57:41,520 --> 00:57:44,319
some uh all score specific processing of

1413
00:57:44,319 --> 00:57:46,000
adobe messengers

1414
00:57:46,000 --> 00:57:49,119
and it also extends this add-on

1415
00:57:49,119 --> 00:57:51,920
application profile that has a number of

1416
00:57:51,920 --> 00:57:54,960
let's say configuration settings

1417
00:57:54,960 --> 00:57:56,319
related to that

1418
00:57:56,319 --> 00:57:58,480
execution to take place

1419
00:57:58,480 --> 00:58:01,359
and in the document we also define

1420
00:58:01,359 --> 00:58:04,000
parameters related to web linking for

1421
00:58:04,000 --> 00:58:06,880
discovery of adult resources and their

1422
00:58:06,880 --> 00:58:08,880
application profiles

1423
00:58:08,880 --> 00:58:13,440
uh so yeah overall the scope is um

1424
00:58:13,440 --> 00:58:16,079
transported over co-op um

1425
00:58:16,079 --> 00:58:18,079
and the main item here again is this

1426
00:58:18,079 --> 00:58:22,799
optimized workflow to reduce the actual

1427
00:58:22,799 --> 00:58:24,559
amount of round trips before you can

1428
00:58:24,559 --> 00:58:26,400
start using oscore

1429
00:58:26,400 --> 00:58:29,119
communication

1430
00:58:29,839 --> 00:58:31,839
and uh yeah to go over some of the

1431
00:58:31,839 --> 00:58:33,040
updates then

1432
00:58:33,040 --> 00:58:36,079
since itf 113

1433
00:58:36,079 --> 00:58:37,760
some of these things were presented

1434
00:58:37,760 --> 00:58:39,760
already at the core interim

1435
00:58:39,760 --> 00:58:41,280
during april

1436
00:58:41,280 --> 00:58:42,480
and

1437
00:58:42,480 --> 00:58:44,720
the updates now in these slides are

1438
00:58:44,720 --> 00:58:46,960
because of changes that happened in that

1439
00:58:46,960 --> 00:58:51,040
book draft which is now in version 15

1440
00:58:51,040 --> 00:58:53,359
right

1441
00:58:53,359 --> 00:58:55,440
so the first point is that

1442
00:58:55,440 --> 00:58:57,040
there's no more special conversion of

1443
00:58:57,040 --> 00:58:58,960
identifiers needed

1444
00:58:58,960 --> 00:59:00,559
and

1445
00:59:00,559 --> 00:59:01,760
instead

1446
00:59:01,760 --> 00:59:04,640
there's a simple identity relation

1447
00:59:04,640 --> 00:59:06,880
where before you need a more elaborate

1448
00:59:06,880 --> 00:59:08,960
way to convert from all score to adult

1449
00:59:08,960 --> 00:59:10,559
identifiers which is now no longer

1450
00:59:10,559 --> 00:59:13,280
needed because of the changes in network

1451
00:59:13,280 --> 00:59:15,200
so that could be simplified

1452
00:59:15,200 --> 00:59:19,359
and another point that was changed is

1453
00:59:19,359 --> 00:59:21,599
that the text and examples now reflect

1454
00:59:21,599 --> 00:59:24,160
usage of the new content formats

1455
00:59:24,160 --> 00:59:26,559
so you have this application

1456
00:59:26,559 --> 00:59:28,000
synthetic

1457
00:59:28,000 --> 00:59:30,240
or sec and application and dot class c

1458
00:59:30,240 --> 00:59:32,319
per sec

1459
00:59:32,319 --> 00:59:34,240
and

1460
00:59:34,240 --> 00:59:36,480
but the actual combined edo classic

1461
00:59:36,480 --> 00:59:39,200
request still has an unnamed media type

1462
00:59:39,200 --> 00:59:41,440
uh some other things small changes

1463
00:59:41,440 --> 00:59:43,280
updating of the terminology and the

1464
00:59:43,280 --> 00:59:44,880
replica applicability statement was

1465
00:59:44,880 --> 00:59:47,920
renamed to that application profile

1466
00:59:47,920 --> 00:59:50,400
uh more things uh

1467
00:59:50,400 --> 00:59:54,799
yes some rephrasing here changing a um

1468
00:59:54,799 --> 00:59:57,839
i must i must not to should not based on

1469
00:59:57,839 --> 01:00:00,400
feedback during the core interim that

1470
01:00:00,400 --> 01:00:02,640
was in relation to let's call good

1471
01:00:02,640 --> 01:00:06,558
behavior expected from the client

1472
01:00:06,640 --> 01:00:08,880
otherwise the

1473
01:00:08,880 --> 01:00:11,200
processing of added messages was revised

1474
01:00:11,200 --> 01:00:12,880
and simplified

1475
01:00:12,880 --> 01:00:14,799
um

1476
01:00:14,799 --> 01:00:17,440
when it comes to how you select your own

1477
01:00:17,440 --> 01:00:20,720
endoconnection identifier which then is

1478
01:00:20,720 --> 01:00:23,359
practically offered as uh score your own

1479
01:00:23,359 --> 01:00:26,559
oscar recipient id that you will receive

1480
01:00:26,559 --> 01:00:28,480
for oscar communication

1481
01:00:28,480 --> 01:00:29,440
uh

1482
01:00:29,440 --> 01:00:31,599
also consistency checks on incoming

1483
01:00:31,599 --> 01:00:33,839
documents yes was revised

1484
01:00:33,839 --> 01:00:34,720
and

1485
01:00:34,720 --> 01:00:36,160
things are now also consistent with

1486
01:00:36,160 --> 01:00:39,119
requirements from section 33 of uh

1487
01:00:39,119 --> 01:00:42,760
rfc 8613.

1488
01:00:42,960 --> 01:00:46,400
to yet continued updates

1489
01:00:46,400 --> 01:00:49,760
the consistency uh

1490
01:00:49,760 --> 01:00:51,760
and the text about edit application

1491
01:00:51,760 --> 01:00:54,960
profiles templates was simplified again

1492
01:00:54,960 --> 01:00:56,640
no need to say anything about diesel

1493
01:00:56,640 --> 01:00:59,200
squad dock identifier conversion before

1494
01:00:59,200 --> 01:01:00,799
there were parameters in there about

1495
01:01:00,799 --> 01:01:02,400
like which conversion method do you want

1496
01:01:02,400 --> 01:01:04,799
to use that's no longer needed

1497
01:01:04,799 --> 01:01:06,319
um

1498
01:01:06,319 --> 01:01:08,180
and then it's about

1499
01:01:08,180 --> 01:01:09,599
[Music]

1500
01:01:09,599 --> 01:01:12,319
signaling like if you support the other

1501
01:01:12,319 --> 01:01:15,520
cluster request the application profile

1502
01:01:15,520 --> 01:01:17,520
should signal that support

1503
01:01:17,520 --> 01:01:20,400
and you then cannot signal to use

1504
01:01:20,400 --> 01:01:22,480
another message for because you can some

1505
01:01:22,480 --> 01:01:24,960
compatible use another message for

1506
01:01:24,960 --> 01:01:27,359
together with this optimization

1507
01:01:27,359 --> 01:01:29,839
um yeah the web linking port was also

1508
01:01:29,839 --> 01:01:31,040
revised

1509
01:01:31,040 --> 01:01:34,480
uh removing the target attribute related

1510
01:01:34,480 --> 01:01:36,799
to the conversion of identifiers

1511
01:01:36,799 --> 01:01:39,760
and also admitting multiple instances of

1512
01:01:39,760 --> 01:01:40,799
ed

1513
01:01:40,799 --> 01:01:43,440
target attribute

1514
01:01:43,440 --> 01:01:44,160
uh

1515
01:01:44,160 --> 01:01:46,160
to support uh

1516
01:01:46,160 --> 01:01:47,839
basically because you you haven't can

1517
01:01:47,839 --> 01:01:49,839
you have an ead in

1518
01:01:49,839 --> 01:01:51,760
in each of the doc messages right so you

1519
01:01:51,760 --> 01:01:55,119
can have an ed 182 d3 etc depending on

1520
01:01:55,119 --> 01:01:57,680
which other message you're talking about

1521
01:01:57,680 --> 01:01:59,760
um yeah some security considerations

1522
01:01:59,760 --> 01:02:02,319
were added like you could uh for

1523
01:02:02,319 --> 01:02:04,960
instance uh this planning attack if you

1524
01:02:04,960 --> 01:02:06,319
want to flood this or without the

1525
01:02:06,319 --> 01:02:07,920
crossover combined request that's

1526
01:02:07,920 --> 01:02:09,839
actually not the security problem

1527
01:02:09,839 --> 01:02:11,680
because the server does not process the

1528
01:02:11,680 --> 01:02:14,000
same electricity multiple times

1529
01:02:14,000 --> 01:02:16,240
and server performance replay checks on

1530
01:02:16,240 --> 01:02:17,680
those core protected application

1531
01:02:17,680 --> 01:02:19,680
requests so this kind of flooding will

1532
01:02:19,680 --> 01:02:21,200
not

1533
01:02:21,200 --> 01:02:22,319
give you any

1534
01:02:22,319 --> 01:02:25,119
practical attack

1535
01:02:25,119 --> 01:02:26,559
then we have some considerations on

1536
01:02:26,559 --> 01:02:29,039
block wise

1537
01:02:29,039 --> 01:02:31,119
so the question is when can the

1538
01:02:31,119 --> 01:02:34,559
endocrine request get too big because of

1539
01:02:34,559 --> 01:02:36,079
ed doc

1540
01:02:36,079 --> 01:02:37,920
so that essentially you're forced to use

1541
01:02:37,920 --> 01:02:39,599
block-wise

1542
01:02:39,599 --> 01:02:40,480
well

1543
01:02:40,480 --> 01:02:41,280
one

1544
01:02:41,280 --> 01:02:43,280
such occasion is if you have a very

1545
01:02:43,280 --> 01:02:46,000
large id credit like a big certificate

1546
01:02:46,000 --> 01:02:46,799
chain

1547
01:02:46,799 --> 01:02:50,000
or if you have large items in the ead

1548
01:02:50,000 --> 01:02:51,119
in adt

1549
01:02:51,119 --> 01:02:53,520
specifically like just a big big amount

1550
01:02:53,520 --> 01:02:54,960
of data there

1551
01:02:54,960 --> 01:02:56,400
um

1552
01:02:56,400 --> 01:02:57,599
then

1553
01:02:57,599 --> 01:02:59,599
we covered the

1554
01:02:59,599 --> 01:03:01,599
basically client processing

1555
01:03:01,599 --> 01:03:03,920
to say that

1556
01:03:03,920 --> 01:03:05,440
well to clarify that only the first

1557
01:03:05,440 --> 01:03:07,839
inner block actually conveys endocrine

1558
01:03:07,839 --> 01:03:10,240
and the other option

1559
01:03:10,240 --> 01:03:13,599
and if this endoplasmic request exceeds

1560
01:03:13,599 --> 01:03:14,640
the max

1561
01:03:14,640 --> 01:03:16,640
max unfragmented size you should stop

1562
01:03:16,640 --> 01:03:18,319
but this maximum fragmented size is a

1563
01:03:18,319 --> 01:03:20,480
parameter defined in those score rfc

1564
01:03:20,480 --> 01:03:23,200
uh to provide particular attacks

1565
01:03:23,200 --> 01:03:26,799
uh like for instance a proxy injecting

1566
01:03:26,799 --> 01:03:29,520
blocks in the middle of a block wise

1567
01:03:29,520 --> 01:03:31,760
um so that's for security reasons that

1568
01:03:31,760 --> 01:03:33,039
should be obeyed

1569
01:03:33,039 --> 01:03:35,599
uh also server processing yeah that's

1570
01:03:35,599 --> 01:03:37,559
just the rfc

1571
01:03:37,559 --> 01:03:40,480
7959 and 8613

1572
01:03:40,480 --> 01:03:43,520
uh we have new section six guidelines on

1573
01:03:43,520 --> 01:03:45,680
not using clockwise or using clockwise

1574
01:03:45,680 --> 01:03:47,200
together with the other crossover

1575
01:03:47,200 --> 01:03:49,599
request so when should you use it

1576
01:03:49,599 --> 01:03:51,920
um so the client might use inner

1577
01:03:51,920 --> 01:03:54,960
clockwise but in this section we assume

1578
01:03:54,960 --> 01:03:57,440
that it's actually not using outer block

1579
01:03:57,440 --> 01:03:59,920
wise because typically

1580
01:03:59,920 --> 01:04:02,720
a client wouldn't take the

1581
01:04:02,720 --> 01:04:04,400
initiatives used out of block-wise there

1582
01:04:04,400 --> 01:04:07,520
will be something approximate

1583
01:04:07,920 --> 01:04:08,799
so

1584
01:04:08,799 --> 01:04:11,280
it's possible to fragment application

1585
01:04:11,280 --> 01:04:13,599
data you wish to send but not the actual

1586
01:04:13,599 --> 01:04:17,280
whole adult class oscar request

1587
01:04:17,280 --> 01:04:19,039
continuing on

1588
01:04:19,039 --> 01:04:21,760
more about the block wise and optimized

1589
01:04:21,760 --> 01:04:23,280
workflow so

1590
01:04:23,280 --> 01:04:24,480
basically

1591
01:04:24,480 --> 01:04:25,920
there's a limit here which is the

1592
01:04:25,920 --> 01:04:28,799
practical maximum size to exceed before

1593
01:04:28,799 --> 01:04:29,920
you

1594
01:04:29,920 --> 01:04:32,480
you should use clockwise

1595
01:04:32,480 --> 01:04:34,240
so there's a lot of

1596
01:04:34,240 --> 01:04:35,599
logic here

1597
01:04:35,599 --> 01:04:38,160
to follow and considerations on what you

1598
01:04:38,160 --> 01:04:39,200
should do

1599
01:04:39,200 --> 01:04:41,200
but basically depending on certain

1600
01:04:41,200 --> 01:04:42,559
parameters

1601
01:04:42,559 --> 01:04:44,400
it may or may not be okay to send those

1602
01:04:44,400 --> 01:04:46,799
core plus add a request

1603
01:04:46,799 --> 01:04:47,839
um

1604
01:04:47,839 --> 01:04:49,039
so

1605
01:04:49,039 --> 01:04:51,480
if the end of data is below this limit

1606
01:04:51,480 --> 01:04:52,839
[Music]

1607
01:04:52,839 --> 01:04:56,079
um if block-wise is not used

1608
01:04:56,079 --> 01:04:57,119
uh

1609
01:04:57,119 --> 01:04:59,119
then that means the application data

1610
01:04:59,119 --> 01:05:01,440
plus the analog data is below the limit

1611
01:05:01,440 --> 01:05:04,640
and if blockers is used that's when uh

1612
01:05:04,640 --> 01:05:07,280
one block plus the add-on data is below

1613
01:05:07,280 --> 01:05:10,079
the limit so i'm a bit long time so i

1614
01:05:10,079 --> 01:05:11,760
probably don't have time to go into

1615
01:05:11,760 --> 01:05:14,079
deals and all these considerations but

1616
01:05:14,079 --> 01:05:16,079
check that section in the draft and it

1617
01:05:16,079 --> 01:05:18,720
goes into a lot more details on these uh

1618
01:05:18,720 --> 01:05:21,359
aspects there's also some corner cases

1619
01:05:21,359 --> 01:05:23,280
and kind of trade-offs when

1620
01:05:23,280 --> 01:05:25,200
um

1621
01:05:25,200 --> 01:05:27,359
you actually

1622
01:05:27,359 --> 01:05:29,039
you you basically you end up having to

1623
01:05:29,039 --> 01:05:30,880
use block price just because of that the

1624
01:05:30,880 --> 01:05:33,359
plus also request yes because the fact

1625
01:05:33,359 --> 01:05:34,960
that you're combining that into a single

1626
01:05:34,960 --> 01:05:38,640
request and we concluded basically that

1627
01:05:38,640 --> 01:05:40,400
the optimized workflow

1628
01:05:40,400 --> 01:05:40,720
uh

1629
01:05:40,720 --> 01:05:41,839
[Music]

1630
01:05:41,839 --> 01:05:42,880
can be

1631
01:05:42,880 --> 01:05:46,240
no worse than the original one

1632
01:05:46,240 --> 01:05:50,160
but it could also be um

1633
01:05:50,160 --> 01:05:52,640
basically that uh in this case in some

1634
01:05:52,640 --> 01:05:55,280
cases you should actually not consider

1635
01:05:55,280 --> 01:05:57,119
using um

1636
01:05:57,119 --> 01:05:59,760
their adolescent request if using it

1637
01:05:59,760 --> 01:06:01,359
means that you end up having such a big

1638
01:06:01,359 --> 01:06:02,559
request that you're forced to use

1639
01:06:02,559 --> 01:06:04,400
clockwise but again check the section in

1640
01:06:04,400 --> 01:06:06,000
the draft for more considerations on

1641
01:06:06,000 --> 01:06:06,880
this

1642
01:06:06,880 --> 01:06:09,599
going into some next steps well we want

1643
01:06:09,599 --> 01:06:11,920
to add more security considerations so

1644
01:06:11,920 --> 01:06:13,599
about when you should use the other

1645
01:06:13,599 --> 01:06:16,000
cluster combined request

1646
01:06:16,000 --> 01:06:17,200
and the

1647
01:06:17,200 --> 01:06:18,400
relation to

1648
01:06:18,400 --> 01:06:20,720
access control enforcement

1649
01:06:20,720 --> 01:06:23,280
and we do have running code on this

1650
01:06:23,280 --> 01:06:25,680
based on eclipse california and aligned

1651
01:06:25,680 --> 01:06:28,160
with endoc version 15 of course

1652
01:06:28,160 --> 01:06:29,280
implementing endocrine and this

1653
01:06:29,280 --> 01:06:31,599
optimization

1654
01:06:31,599 --> 01:06:33,760
to do is renew this order registration

1655
01:06:33,760 --> 01:06:35,359
we did after the option and that the

1656
01:06:35,359 --> 01:06:37,359
option signals usage of this optimized

1657
01:06:37,359 --> 01:06:38,640
request

1658
01:06:38,640 --> 01:06:39,760
uh

1659
01:06:39,760 --> 01:06:42,400
and if there are no big issues we do

1660
01:06:42,400 --> 01:06:45,359
feel that the next version may indeed be

1661
01:06:45,359 --> 01:06:48,400
good for a working group last call

1662
01:06:48,400 --> 01:06:50,480
and it may here be good to sync with the

1663
01:06:50,480 --> 01:06:52,880
leg working group and basically take it

1664
01:06:52,880 --> 01:06:54,720
in parallel with the working group class

1665
01:06:54,720 --> 01:06:57,599
call of duty makes sense because these

1666
01:06:57,599 --> 01:07:00,799
documents are very much interconnected

1667
01:07:00,799 --> 01:07:03,200
and again yeah any comments or reviews

1668
01:07:03,200 --> 01:07:05,280
are very welcome

1669
01:07:05,280 --> 01:07:07,280
on this document

1670
01:07:07,280 --> 01:07:09,680
thank you

1671
01:07:11,119 --> 01:07:13,200
thank you rickard we are slightly over

1672
01:07:13,200 --> 01:07:15,599
time there may be time for one question

1673
01:07:15,599 --> 01:07:19,440
or comment maybe anyone

1674
01:07:20,880 --> 01:07:24,400
i see christian saying yeah

1675
01:07:25,039 --> 01:07:26,559
casting

1676
01:07:26,559 --> 01:07:29,359
yeah i just wanted to to make the point

1677
01:07:29,359 --> 01:07:31,440
that we we have to be a little bit

1678
01:07:31,440 --> 01:07:32,799
careful

1679
01:07:32,799 --> 01:07:36,480
about uh not stuffing our specifications

1680
01:07:36,480 --> 01:07:37,280
with

1681
01:07:37,280 --> 01:07:39,920
uh too much informational

1682
01:07:39,920 --> 01:07:40,839
uh

1683
01:07:40,839 --> 01:07:43,920
content um there are many reasons why we

1684
01:07:43,920 --> 01:07:46,480
don't want to do that uh one is that we

1685
01:07:46,480 --> 01:07:48,960
are essentially dosing isg

1686
01:07:48,960 --> 01:07:52,559
um but uh also um people who look at

1687
01:07:52,559 --> 01:07:54,400
this specification and see oh my god

1688
01:07:54,400 --> 01:07:57,599
that's 28 pages do i have to implement

1689
01:07:57,599 --> 01:07:58,720
all that

1690
01:07:58,720 --> 01:07:59,520
um

1691
01:07:59,520 --> 01:08:02,319
might think this is a complicated

1692
01:08:02,319 --> 01:08:04,559
document to implement well actually it's

1693
01:08:04,559 --> 01:08:07,359
not very complicated so

1694
01:08:07,359 --> 01:08:11,200
i'm wondering whether we have a good way

1695
01:08:11,200 --> 01:08:13,119
to to put things like these

1696
01:08:13,119 --> 01:08:14,720
considerations

1697
01:08:14,720 --> 01:08:17,679
um is is it actually an improvement

1698
01:08:17,679 --> 01:08:20,319
um to to use this or not

1699
01:08:20,319 --> 01:08:23,439
uh into a separate

1700
01:08:23,439 --> 01:08:24,960
place so we can

1701
01:08:24,960 --> 01:08:28,319
clearly separate the standard strike

1702
01:08:28,319 --> 01:08:31,040
part which which actually is

1703
01:08:31,040 --> 01:08:32,399
relatively

1704
01:08:32,399 --> 01:08:33,920
simple

1705
01:08:33,920 --> 01:08:36,479
from the how do i use this in the best

1706
01:08:36,479 --> 01:08:39,198
way possible informational

1707
01:08:39,198 --> 01:08:40,399
content

1708
01:08:40,399 --> 01:08:42,640
so i'm not saying that this draft is is

1709
01:08:42,640 --> 01:08:44,560
the one where we

1710
01:08:44,560 --> 01:08:47,198
absolutely have to do this now

1711
01:08:47,198 --> 01:08:49,279
but that struck me as just another

1712
01:08:49,279 --> 01:08:51,198
example where we are

1713
01:08:51,198 --> 01:08:53,759
getting into this uh

1714
01:08:53,759 --> 01:08:57,040
trap of providing too much informational

1715
01:08:57,040 --> 01:08:59,600
uh content or where we may be getting

1716
01:08:59,600 --> 01:09:01,439
into this trap of providing too much

1717
01:09:01,439 --> 01:09:03,759
information and content so i just wanted

1718
01:09:03,759 --> 01:09:05,120
to to

1719
01:09:05,120 --> 01:09:08,080
set this this flag here that

1720
01:09:08,080 --> 01:09:10,319
we should be thinking about that i don't

1721
01:09:10,319 --> 01:09:12,000
want a response

1722
01:09:12,000 --> 01:09:14,479
right now but when you work on this

1723
01:09:14,479 --> 01:09:15,679
document

1724
01:09:15,679 --> 01:09:17,520
uh think about is is there maybe

1725
01:09:17,520 --> 01:09:19,439
something that could be exported into an

1726
01:09:19,439 --> 01:09:20,880
informational

1727
01:09:20,880 --> 01:09:22,960
document meaningfully

1728
01:09:22,960 --> 01:09:25,679
um so the the actual specification stays

1729
01:09:25,679 --> 01:09:28,000
crisp

1730
01:09:28,238 --> 01:09:29,759
okay i see what you're saying right so

1731
01:09:29,759 --> 01:09:31,759
to consider it that

1732
01:09:31,759 --> 01:09:34,080
we don't have a too wide scope and too

1733
01:09:34,080 --> 01:09:36,000
much content possibly some things could

1734
01:09:36,000 --> 01:09:38,719
be extracted

1735
01:09:38,719 --> 01:09:40,399
to a different document or i don't know

1736
01:09:40,399 --> 01:09:42,399
the appendix as an appendix or something

1737
01:09:42,399 --> 01:09:43,759
yeah

1738
01:09:43,759 --> 01:09:46,640
yeah appendix is certainly one way

1739
01:09:46,640 --> 01:09:48,560
the the informational

1740
01:09:48,560 --> 01:09:50,479
documents

1741
01:09:50,479 --> 01:09:52,799
cause about one-third of the isg

1742
01:09:52,799 --> 01:09:54,960
overhead of a standard strike

1743
01:09:54,960 --> 01:09:57,040
document so putting stuff into an

1744
01:09:57,040 --> 01:09:59,840
informational document is an effective

1745
01:09:59,840 --> 01:10:03,520
way of both reducing the the

1746
01:10:03,520 --> 01:10:06,159
appearance of this being a complicated

1747
01:10:06,159 --> 01:10:08,960
document moving things into the appendix

1748
01:10:08,960 --> 01:10:10,800
if you label it as non-normative then

1749
01:10:10,800 --> 01:10:12,800
maybe some reviewers won't

1750
01:10:12,800 --> 01:10:14,880
read it which may be

1751
01:10:14,880 --> 01:10:16,880
also another way to reduce

1752
01:10:16,880 --> 01:10:19,679
uh the load but still when the people

1753
01:10:19,679 --> 01:10:21,520
first look at the document they see this

1754
01:10:21,520 --> 01:10:24,159
has 28 pages and they won't see that

1755
01:10:24,159 --> 01:10:26,239
that only 10 of those are in the body at

1756
01:10:26,239 --> 01:10:28,560
18 are the in the appendix

1757
01:10:28,560 --> 01:10:30,960
so actually splitting documents

1758
01:10:30,960 --> 01:10:33,199
may be something that we

1759
01:10:33,199 --> 01:10:34,800
may want to do

1760
01:10:34,800 --> 01:10:37,040
a little bit more than we have been

1761
01:10:37,040 --> 01:10:39,440
doing and by the way once you have an

1762
01:10:39,440 --> 01:10:41,520
informational document

1763
01:10:41,520 --> 01:10:44,159
this can also be used as a little bit of

1764
01:10:44,159 --> 01:10:47,120
a road map so you explain how the

1765
01:10:47,120 --> 01:10:48,960
normative documents

1766
01:10:48,960 --> 01:10:51,040
that are being created here actually fit

1767
01:10:51,040 --> 01:10:52,640
together

1768
01:10:52,640 --> 01:10:54,800
and it can be on a different timeline so

1769
01:10:54,800 --> 01:10:57,199
there are many many benefits

1770
01:10:57,199 --> 01:10:59,040
that can be had from this but also of

1771
01:10:59,040 --> 01:11:00,400
course it makes the management of those

1772
01:11:00,400 --> 01:11:02,000
documents a little bit

1773
01:11:02,000 --> 01:11:06,400
more complicated during creating them

1774
01:11:06,719 --> 01:11:08,480
thanks for the thanks for the feedback

1775
01:11:08,480 --> 01:11:10,718
yeah

1776
01:11:11,600 --> 01:11:13,360
and i saw by the way christian had a

1777
01:11:13,360 --> 01:11:15,840
point also agreeing on uh syncing with

1778
01:11:15,840 --> 01:11:20,080
lake uh as a comment in the uh chat yeah

1779
01:11:20,080 --> 01:11:21,520
yeah about that just to be sure to

1780
01:11:21,520 --> 01:11:23,600
understand christian you you would

1781
01:11:23,600 --> 01:11:27,840
prefer this document to follow up after

1782
01:11:27,840 --> 01:11:29,520
edoc right

1783
01:11:29,520 --> 01:11:32,719
i i think i could only make a reasonable

1784
01:11:32,719 --> 01:11:34,640
working group last call document on this

1785
01:11:34,640 --> 01:11:35,679
document

1786
01:11:35,679 --> 01:11:38,480
if ad hoc is also in

1787
01:11:38,480 --> 01:11:42,159
around working group last call stage

1788
01:11:42,159 --> 01:11:44,400
okay one possibility was to have them in

1789
01:11:44,400 --> 01:11:46,640
parallel working robust call in fact but

1790
01:11:46,640 --> 01:11:48,719
but your comment sounds like uh you'd

1791
01:11:48,719 --> 01:11:51,440
prefer to have them strictly one first

1792
01:11:51,440 --> 01:11:52,800
and then you know it doesn't have to be

1793
01:11:52,800 --> 01:11:55,040
strictly in sequence maybe my comment

1794
01:11:55,040 --> 01:11:58,159
was phrased lovely just parallel would

1795
01:11:58,159 --> 01:11:59,679
be great green sync

1796
01:11:59,679 --> 01:12:02,000
thanks

1797
01:12:03,199 --> 01:12:04,239
okay

1798
01:12:04,239 --> 01:12:06,239
in the interest of time business just

1799
01:12:06,239 --> 01:12:09,760
continue with the next slide set

1800
01:12:09,760 --> 01:12:14,640
yes indeed i'll change text then

1801
01:12:18,800 --> 01:12:21,440
yes i proceed right away

1802
01:12:21,440 --> 01:12:22,640
so

1803
01:12:22,640 --> 01:12:25,199
now i will continue on this draft key

1804
01:12:25,199 --> 01:12:27,679
update for oscore

1805
01:12:27,679 --> 01:12:32,239
which we named kudos as a short title

1806
01:12:32,239 --> 01:12:34,480
and

1807
01:12:34,480 --> 01:12:36,719
yeah so again just

1808
01:12:36,719 --> 01:12:39,679
a kind of a content recap an overview of

1809
01:12:39,679 --> 01:12:41,440
this document

1810
01:12:41,440 --> 01:12:42,320
so

1811
01:12:42,320 --> 01:12:46,239
it essentially has two main parts

1812
01:12:46,960 --> 01:12:50,560
one part is about a way that has been

1813
01:12:50,560 --> 01:12:52,400
defined uh

1814
01:12:52,400 --> 01:12:55,360
to provide a lightweight way to perform

1815
01:12:55,360 --> 01:12:57,199
key update for score

1816
01:12:57,199 --> 01:12:59,360
and that's what we call kudos and this

1817
01:12:59,360 --> 01:13:01,760
is loosely inspired in the appendix p2

1818
01:13:01,760 --> 01:13:04,719
procedure already defined for all score

1819
01:13:04,719 --> 01:13:06,880
and where the goal is essential to renew

1820
01:13:06,880 --> 01:13:08,560
your master seeker the master assault

1821
01:13:08,560 --> 01:13:10,320
which in turn makes you derive new

1822
01:13:10,320 --> 01:13:12,320
sender and recipient keys

1823
01:13:12,320 --> 01:13:14,560
and this procedure can also achieve

1824
01:13:14,560 --> 01:13:17,120
perfect forward secrecy and

1825
01:13:17,120 --> 01:13:19,360
at me uh various reasons why you would

1826
01:13:19,360 --> 01:13:23,120
like to re-key but uh one particular

1827
01:13:23,120 --> 01:13:25,920
reason that this draft covers is

1828
01:13:25,920 --> 01:13:26,880
uh

1829
01:13:26,880 --> 01:13:29,280
that you may reach limits in how many

1830
01:13:29,280 --> 01:13:31,760
times you have used your keys for

1831
01:13:31,760 --> 01:13:34,159
encryption or decryption

1832
01:13:34,159 --> 01:13:35,920
because there is a para there's actually

1833
01:13:35,920 --> 01:13:39,679
work going on in c4d where they have

1834
01:13:39,679 --> 01:13:42,719
the terminal defines some usage limits

1835
01:13:42,719 --> 01:13:45,760
for aad algorithms so essentially

1836
01:13:45,760 --> 01:13:48,000
you need to follow certain rules on how

1837
01:13:48,000 --> 01:13:50,000
many times you encrypt or how many times

1838
01:13:50,000 --> 01:13:51,199
you failed

1839
01:13:51,199 --> 01:13:54,239
fail i decryption with your keys

1840
01:13:54,239 --> 01:13:55,920
before you have to rekey and if you do

1841
01:13:55,920 --> 01:13:57,920
not rekey

1842
01:13:57,920 --> 01:13:59,760
and have this excessive use of the same

1843
01:13:59,760 --> 01:14:01,760
key can enable breaking the security

1844
01:14:01,760 --> 01:14:04,640
properties of some aed algorithms uh so

1845
01:14:04,640 --> 01:14:06,400
the second part is about these limits

1846
01:14:06,400 --> 01:14:08,320
but the focus on today will be the kudos

1847
01:14:08,320 --> 01:14:12,080
part and the key update procedure

1848
01:14:12,159 --> 01:14:14,719
the limit sport has has not had any uh

1849
01:14:14,719 --> 01:14:16,719
major updates

1850
01:14:16,719 --> 01:14:18,320
recently

1851
01:14:18,320 --> 01:14:19,199
um

1852
01:14:19,199 --> 01:14:21,920
so again uh an overview of this key

1853
01:14:21,920 --> 01:14:23,760
update procedure is basically a message

1854
01:14:23,760 --> 01:14:24,880
exchange

1855
01:14:24,880 --> 01:14:27,360
you have a client and server

1856
01:14:27,360 --> 01:14:29,280
let's say the client is initiated or you

1857
01:14:29,280 --> 01:14:31,679
exchange a number of messages as you see

1858
01:14:31,679 --> 01:14:33,199
on the right hand side

1859
01:14:33,199 --> 01:14:35,199
the key thing here is you want to

1860
01:14:35,199 --> 01:14:37,440
actually exchange nonsense and using

1861
01:14:37,440 --> 01:14:40,800
those dances you want to derive new or

1862
01:14:40,800 --> 01:14:43,360
score security contexts on both pairs

1863
01:14:43,360 --> 01:14:45,600
using announces as input

1864
01:14:45,600 --> 01:14:47,280
and

1865
01:14:47,280 --> 01:14:49,360
we define this update ctx function

1866
01:14:49,360 --> 01:14:51,600
basically that takes the announcers and

1867
01:14:51,600 --> 01:14:53,600
the old security context and produces a

1868
01:14:53,600 --> 01:14:55,520
new security context

1869
01:14:55,520 --> 01:14:59,840
we also extended the os core option

1870
01:15:00,320 --> 01:15:03,360
so to have a bit that indicates the

1871
01:15:03,360 --> 01:15:05,679
presence of this

1872
01:15:05,679 --> 01:15:07,520
nonce parameter

1873
01:15:07,520 --> 01:15:10,560
and an x byte that signifies both the

1874
01:15:10,560 --> 01:15:12,159
length of the nouns

1875
01:15:12,159 --> 01:15:15,120
but also some additional signaling flags

1876
01:15:15,120 --> 01:15:18,400
which i will come back to later

1877
01:15:18,400 --> 01:15:20,719
and we got some comments from ayanna

1878
01:15:20,719 --> 01:15:22,159
about

1879
01:15:22,159 --> 01:15:24,960
if in particular like notes on the

1880
01:15:24,960 --> 01:15:27,760
language if this bit 1 and 15 can be

1881
01:15:27,760 --> 01:15:31,199
once yes then 15 suggested but we do

1882
01:15:31,199 --> 01:15:33,840
actually need them before exactly 1 and

1883
01:15:33,840 --> 01:15:35,520
15.

1884
01:15:35,520 --> 01:15:37,280
and by the way these nuns were

1885
01:15:37,280 --> 01:15:39,840
previously called id detail we now

1886
01:15:39,840 --> 01:15:42,719
simply just call it nuns

1887
01:15:42,719 --> 01:15:44,480
so that

1888
01:15:44,480 --> 01:15:46,080
field in those corruption is simply

1889
01:15:46,080 --> 01:15:48,880
called nuns now

1890
01:15:49,360 --> 01:15:50,320
and

1891
01:15:50,320 --> 01:15:51,760
yeah now i'll go over some of the

1892
01:15:51,760 --> 01:15:53,520
updates that when we've done practically

1893
01:15:53,520 --> 01:15:55,440
to draft since the last uh

1894
01:15:55,440 --> 01:15:56,640
meeting

1895
01:15:56,640 --> 01:15:59,120
and uh one thing we did here is we

1896
01:15:59,120 --> 01:16:01,199
defined or rather

1897
01:16:01,199 --> 01:16:04,320
uh revised and moved

1898
01:16:04,320 --> 01:16:07,440
uh text about an alternative kudos mode

1899
01:16:07,440 --> 01:16:08,880
that does not

1900
01:16:08,880 --> 01:16:11,120
provide forward secrecy

1901
01:16:11,120 --> 01:16:12,239
um

1902
01:16:12,239 --> 01:16:15,040
to the main body of the draft

1903
01:16:15,040 --> 01:16:18,480
uh so the whole idea here is that you

1904
01:16:18,480 --> 01:16:21,040
need a way to do stateless key updates

1905
01:16:21,040 --> 01:16:22,800
because some devices may not be able to

1906
01:16:22,800 --> 01:16:23,679
store

1907
01:16:23,679 --> 01:16:26,320
uh information to persistent memory

1908
01:16:26,320 --> 01:16:28,800
and the method the the main method of

1909
01:16:28,800 --> 01:16:31,199
kudos the main mode we have defined

1910
01:16:31,199 --> 01:16:32,719
really requires that you're able to

1911
01:16:32,719 --> 01:16:35,360
store information to retrieve it back

1912
01:16:35,360 --> 01:16:37,760
after you're rebooted

1913
01:16:37,760 --> 01:16:40,080
and if you cannot do that you couldn't

1914
01:16:40,080 --> 01:16:42,000
use that main mode so we

1915
01:16:42,000 --> 01:16:44,000
because of that we define this mode that

1916
01:16:44,000 --> 01:16:46,719
doesn't have uh forward secrecy

1917
01:16:46,719 --> 01:16:48,800
but then uh the benefit is that it's

1918
01:16:48,800 --> 01:16:49,840
stateless

1919
01:16:49,840 --> 01:16:51,840
and these devices that cannot store the

1920
01:16:51,840 --> 01:16:54,960
persistent memory can still use it and

1921
01:16:54,960 --> 01:16:55,840
well

1922
01:16:55,840 --> 01:16:57,760
there's then the need for a way to

1923
01:16:57,760 --> 01:16:59,040
signal this

1924
01:16:59,040 --> 01:17:01,520
and the way we define that is we defined

1925
01:17:01,520 --> 01:17:02,880
a bit p

1926
01:17:02,880 --> 01:17:05,280
that we placed in this x byte in those

1927
01:17:05,280 --> 01:17:07,040
corruptions so again the x byte

1928
01:17:07,040 --> 01:17:09,440
signifies the length of the nonce and

1929
01:17:09,440 --> 01:17:11,440
some of the signaling bits

1930
01:17:11,440 --> 01:17:14,480
and well the p is zero

1931
01:17:14,480 --> 01:17:16,000
the sender indicates that it wants to

1932
01:17:16,000 --> 01:17:18,640
run kudos in the forward secrecy mode

1933
01:17:18,640 --> 01:17:21,679
the normal original mode if you set p1

1934
01:17:21,679 --> 01:17:24,719
you wish to use the no fs mode

1935
01:17:24,719 --> 01:17:27,840
and basically both pairs need to agree

1936
01:17:27,840 --> 01:17:30,800
here so that both need to set p to 0 or

1937
01:17:30,800 --> 01:17:32,080
p to 1

1938
01:17:32,080 --> 01:17:35,679
in their respective request response

1939
01:17:35,679 --> 01:17:37,760
to align and agree to use a particular

1940
01:17:37,760 --> 01:17:39,600
mode

1941
01:17:39,600 --> 01:17:41,679
and if they don't agree there is a

1942
01:17:41,679 --> 01:17:44,400
possibility for a negotiation to

1943
01:17:44,400 --> 01:17:47,280
downgrade to the capability of the

1944
01:17:47,280 --> 01:17:49,520
device that has the least capability so

1945
01:17:49,520 --> 01:17:51,120
that you can still agree and actually be

1946
01:17:51,120 --> 01:17:52,880
able to run kudos

1947
01:17:52,880 --> 01:17:54,080
and

1948
01:17:54,080 --> 01:17:55,520
when you're using the forward secrecy

1949
01:17:55,520 --> 01:17:57,120
mode

1950
01:17:57,120 --> 01:17:58,400
basically your

1951
01:17:58,400 --> 01:18:00,880
security context uh

1952
01:18:00,880 --> 01:18:02,560
that used to drive a new security

1953
01:18:02,560 --> 01:18:04,400
context is just the latest security

1954
01:18:04,400 --> 01:18:06,960
context that you have stored

1955
01:18:06,960 --> 01:18:08,640
and

1956
01:18:08,640 --> 01:18:10,800
it's also a key point here that if you

1957
01:18:10,800 --> 01:18:12,560
are capable of storing to disk and if

1958
01:18:12,560 --> 01:18:13,920
you're capable to use the forward

1959
01:18:13,920 --> 01:18:18,080
secrecy mode you must use that mode

1960
01:18:19,440 --> 01:18:21,760
the uh no fs mode is a fallback if you

1961
01:18:21,760 --> 01:18:23,040
absolutely cannot use that or if the

1962
01:18:23,040 --> 01:18:25,040
other pair cannot use the fs mode so

1963
01:18:25,040 --> 01:18:27,280
when you're using the no ifs mode

1964
01:18:27,280 --> 01:18:29,199
again you sacrifice for secrecy because

1965
01:18:29,199 --> 01:18:30,719
one player cannot write to persistent

1966
01:18:30,719 --> 01:18:31,760
memory

1967
01:18:31,760 --> 01:18:33,520
and the the difference here is that

1968
01:18:33,520 --> 01:18:35,520
before you run kudos you the key

1969
01:18:35,520 --> 01:18:37,199
material you can see there isn't your

1970
01:18:37,199 --> 01:18:39,040
latest key material you consider your

1971
01:18:39,040 --> 01:18:41,679
bootstrap key material which is what you

1972
01:18:41,679 --> 01:18:43,360
were pre-provisioned with during

1973
01:18:43,360 --> 01:18:46,080
manufacturing or commissioning or

1974
01:18:46,080 --> 01:18:49,600
recommissioning so that's like a fixed

1975
01:18:49,600 --> 01:18:52,080
key material that that you you have

1976
01:18:52,080 --> 01:18:54,239
stored down and you can still remember

1977
01:18:54,239 --> 01:18:57,040
that even though not being able to write

1978
01:18:57,040 --> 01:18:58,400
to persistent memory since that's

1979
01:18:58,400 --> 01:19:01,280
something hardcoded on usa device

1980
01:19:01,280 --> 01:19:02,560
um

1981
01:19:02,560 --> 01:19:05,440
so again this is agree downgrading if

1982
01:19:05,440 --> 01:19:08,400
the initiator sets p to zero the

1983
01:19:08,400 --> 01:19:10,800
responder may not be able to

1984
01:19:10,800 --> 01:19:12,400
you know follow up on that because it

1985
01:19:12,400 --> 01:19:14,800
cannot actually use the

1986
01:19:14,800 --> 01:19:19,280
fs mode in such case the server can

1987
01:19:19,280 --> 01:19:20,400
respond

1988
01:19:20,400 --> 01:19:23,120
with an error response setting p21 to

1989
01:19:23,120 --> 01:19:26,400
indicate no i want to use the no fs mode

1990
01:19:26,400 --> 01:19:28,719
or if it's a client that's a responder

1991
01:19:28,719 --> 01:19:30,719
you send a request with p21 but

1992
01:19:30,719 --> 01:19:32,800
essentially you use this pb2 to signal

1993
01:19:32,800 --> 01:19:34,560
to each other and agree on which mode to

1994
01:19:34,560 --> 01:19:35,440
use

1995
01:19:35,440 --> 01:19:36,880
but if both

1996
01:19:36,880 --> 01:19:38,480
devices are capable of using forward

1997
01:19:38,480 --> 01:19:41,759
series they must do so

1998
01:19:43,199 --> 01:19:45,440
continuing on so another thing we moved

1999
01:19:45,440 --> 01:19:47,120
up was the text about preserving

2000
01:19:47,120 --> 01:19:50,000
observations

2001
01:19:50,000 --> 01:19:52,880
so this was also a text in an appendix

2002
01:19:52,880 --> 01:19:54,800
and basically we identified the problem

2003
01:19:54,800 --> 01:19:55,840
here that

2004
01:19:55,840 --> 01:19:59,760
there is this risk of um

2005
01:19:59,760 --> 01:20:01,360
to

2006
01:20:01,360 --> 01:20:03,520
basically this is a scenario a client

2007
01:20:03,520 --> 01:20:06,159
can start an observation observation one

2008
01:20:06,159 --> 01:20:08,719
by sending a request with the request

2009
01:20:08,719 --> 01:20:10,480
partially x

2010
01:20:10,480 --> 01:20:13,360
after that the peers run kudos receptors

2011
01:20:13,360 --> 01:20:16,400
and sequence numbers back to zero

2012
01:20:16,400 --> 01:20:18,239
and later while this observation one is

2013
01:20:18,239 --> 01:20:20,480
still ongoing the client will send a new

2014
01:20:20,480 --> 01:20:22,560
request request to

2015
01:20:22,560 --> 01:20:25,040
also it requests partial avx

2016
01:20:25,040 --> 01:20:25,920
um

2017
01:20:25,920 --> 01:20:27,199
and the problem is that basically you

2018
01:20:27,199 --> 01:20:29,760
have two kind of ongoing in in progress

2019
01:20:29,760 --> 01:20:32,239
requests with the same partial iv and

2020
01:20:32,239 --> 01:20:35,679
this gives you a problem that

2021
01:20:35,679 --> 01:20:38,320
responses or notifications by the server

2022
01:20:38,320 --> 01:20:40,239
will cryptographically match both

2023
01:20:40,239 --> 01:20:42,639
request one and request two

2024
01:20:42,639 --> 01:20:43,760
so

2025
01:20:43,760 --> 01:20:45,360
what you need to be careful about

2026
01:20:45,360 --> 01:20:48,480
basically is that do not reuse the same

2027
01:20:48,480 --> 01:20:50,639
partial iv right because like the thing

2028
01:20:50,639 --> 01:20:52,480
is after you run kudos you reset your

2029
01:20:52,480 --> 01:20:55,520
partially back to zero so you cannot

2030
01:20:55,520 --> 01:20:57,360
reuse the same partial v that you

2031
01:20:57,360 --> 01:20:59,040
already are using for an ongoing

2032
01:20:59,040 --> 01:21:01,679
observation and to solve this we device

2033
01:21:01,679 --> 01:21:03,360
this long jumping solution and

2034
01:21:03,360 --> 01:21:05,679
essentially what that means is that

2035
01:21:05,679 --> 01:21:07,679
after kudos has been run

2036
01:21:07,679 --> 01:21:12,000
you jump your partial iv forward

2037
01:21:12,000 --> 01:21:14,960
to the value of the highest

2038
01:21:14,960 --> 01:21:18,480
rec piv among ongoing observations

2039
01:21:18,480 --> 01:21:21,280
uh with your client plus one

2040
01:21:21,280 --> 01:21:23,600
so it's just jump over

2041
01:21:23,600 --> 01:21:25,040
the highest partial maybe that's already

2042
01:21:25,040 --> 01:21:26,880
in use for an observation to avoid this

2043
01:21:26,880 --> 01:21:30,080
accidental partially reusage

2044
01:21:30,080 --> 01:21:31,679
um

2045
01:21:31,679 --> 01:21:32,560
and

2046
01:21:32,560 --> 01:21:34,000
that is basically that i mean that's of

2047
01:21:34,000 --> 01:21:35,760
course if you if you wish to preserve

2048
01:21:35,760 --> 01:21:37,040
observations

2049
01:21:37,040 --> 01:21:40,080
um so to be able to

2050
01:21:40,080 --> 01:21:41,520
signal if you wish to preserve

2051
01:21:41,520 --> 01:21:43,679
observations we divide

2052
01:21:43,679 --> 01:21:45,840
defined one more bit

2053
01:21:45,840 --> 01:21:49,120
uh which is this b bit um

2054
01:21:49,120 --> 01:21:50,639
again it's in the x byte of those

2055
01:21:50,639 --> 01:21:51,760
corruption

2056
01:21:51,760 --> 01:21:54,239
and if the b bit is set to zero

2057
01:21:54,239 --> 01:21:56,080
you're saying that you're wishing to

2058
01:21:56,080 --> 01:21:58,080
cancel all common observations if the

2059
01:21:58,080 --> 01:22:00,480
bit is set to one you wish to keep all

2060
01:22:00,480 --> 01:22:02,480
common observations and this is an all

2061
01:22:02,480 --> 01:22:04,960
or nothing approach both players have to

2062
01:22:04,960 --> 01:22:07,679
agree and set the beat

2063
01:22:07,679 --> 01:22:09,440
to one to

2064
01:22:09,440 --> 01:22:11,600
decide to keep them if one or both of

2065
01:22:11,600 --> 01:22:13,360
the periods set to be to zero the

2066
01:22:13,360 --> 01:22:15,520
observations will not be kept

2067
01:22:15,520 --> 01:22:16,960
and again it's a key point here you

2068
01:22:16,960 --> 01:22:19,199
cannot just if you wish to keep

2069
01:22:19,199 --> 01:22:20,800
observations you cannot just like

2070
01:22:20,800 --> 01:22:22,719
silently forget observations you must

2071
01:22:22,719 --> 01:22:25,360
explicitly use cancellation requests

2072
01:22:25,360 --> 01:22:27,920
and um only purged observations if you

2073
01:22:27,920 --> 01:22:29,040
get a

2074
01:22:29,040 --> 01:22:30,560
cancellation confirmation from the

2075
01:22:30,560 --> 01:22:32,480
server because otherwise if you just

2076
01:22:32,480 --> 01:22:34,560
forget observations you may again run

2077
01:22:34,560 --> 01:22:36,159
into this problem of

2078
01:22:36,159 --> 01:22:38,400
accidentally using a partial av that is

2079
01:22:38,400 --> 01:22:39,520
in use

2080
01:22:39,520 --> 01:22:42,159
uh for an observation on the server side

2081
01:22:42,159 --> 01:22:43,520
um

2082
01:22:43,520 --> 01:22:45,360
and uh one thing that was pointing out

2083
01:22:45,360 --> 01:22:46,960
there is that

2084
01:22:46,960 --> 01:22:49,840
if uh two players actually don't want to

2085
01:22:49,840 --> 01:22:52,560
run kudos in the for sake of key update

2086
01:22:52,560 --> 01:22:55,760
they may wish to use kudos just for a

2087
01:22:55,760 --> 01:22:57,840
way to quickly cancel all ongoing

2088
01:22:57,840 --> 01:23:01,199
observations with other peers

2089
01:23:02,560 --> 01:23:04,960
uh yeah so another part was about the

2090
01:23:04,960 --> 01:23:07,199
updating center recipient ids

2091
01:23:07,199 --> 01:23:10,000
uh this was basically triggered by some

2092
01:23:10,000 --> 01:23:12,320
discussion on the mailing list and an

2093
01:23:12,320 --> 01:23:15,520
issue in the os core uh

2094
01:23:15,520 --> 01:23:18,000
draft guitar well oscar rfc guitar

2095
01:23:18,000 --> 01:23:19,120
basically

2096
01:23:19,120 --> 01:23:22,480
and the intent is that due to privacy

2097
01:23:22,480 --> 01:23:25,679
reasons you may actually want to switch

2098
01:23:25,679 --> 01:23:26,639
uh

2099
01:23:26,639 --> 01:23:28,560
identifiers for instance just after

2100
01:23:28,560 --> 01:23:31,280
having run edward to prevent

2101
01:23:31,280 --> 01:23:32,800
like if you if basically if you switch

2102
01:23:32,800 --> 01:23:34,560
network for instance you may not want to

2103
01:23:34,560 --> 01:23:35,600
be

2104
01:23:35,600 --> 01:23:37,199
that an attacker can correlate your

2105
01:23:37,199 --> 01:23:39,040
identity through this id

2106
01:23:39,040 --> 01:23:40,800
between the old and new network you

2107
01:23:40,800 --> 01:23:42,239
switch to

2108
01:23:42,239 --> 01:23:43,600
um

2109
01:23:43,600 --> 01:23:45,840
and yeah this procedure can be run

2110
01:23:45,840 --> 01:23:50,159
standalone or part of acute execution

2111
01:23:50,159 --> 01:23:51,840
yeah this has also been moved up from

2112
01:23:51,840 --> 01:23:53,520
appendix to the main body and it has a

2113
01:23:53,520 --> 01:23:55,280
number of properties here basically we

2114
01:23:55,280 --> 01:23:56,800
define a new option

2115
01:23:56,800 --> 01:23:58,400
where you indicate your new decide

2116
01:23:58,400 --> 01:23:59,840
recipient id

2117
01:23:59,840 --> 01:24:01,600
and that's a classy option so it's also

2118
01:24:01,600 --> 01:24:04,400
encrypted and

2119
01:24:04,400 --> 01:24:06,639
using oscar then

2120
01:24:06,639 --> 01:24:08,480
um and there are some considerations on

2121
01:24:08,480 --> 01:24:09,679
when you

2122
01:24:09,679 --> 01:24:10,960
when and

2123
01:24:10,960 --> 01:24:12,320
when you should use this and when you

2124
01:24:12,320 --> 01:24:14,080
should not use this

2125
01:24:14,080 --> 01:24:15,600
and some things you should be careful

2126
01:24:15,600 --> 01:24:17,679
about in terms of remembering all the

2127
01:24:17,679 --> 01:24:21,040
used recipient ids

2128
01:24:21,360 --> 01:24:23,199
some more updates well this is kind of

2129
01:24:23,199 --> 01:24:24,800
going over the signaling bits right so

2130
01:24:24,800 --> 01:24:26,480
we define now the signaling bits are

2131
01:24:26,480 --> 01:24:28,960
placed in this x byte so we have the

2132
01:24:28,960 --> 01:24:30,880
four least significant bits there that

2133
01:24:30,880 --> 01:24:33,440
define the length of the nuns minus one

2134
01:24:33,440 --> 01:24:36,719
we have the normal forward secrecy p bit

2135
01:24:36,719 --> 01:24:37,840
and then we have the preserve

2136
01:24:37,840 --> 01:24:39,760
observations b bit

2137
01:24:39,760 --> 01:24:40,880
and

2138
01:24:40,880 --> 01:24:43,840
with two of the bits still absorbed and

2139
01:24:43,840 --> 01:24:46,239
i mean one point here was to place these

2140
01:24:46,239 --> 01:24:48,159
bits in the x byte and then what we did

2141
01:24:48,159 --> 01:24:50,639
is we defined the update ctx function to

2142
01:24:50,639 --> 01:24:53,440
take not only the nouns but x bytes also

2143
01:24:53,440 --> 01:24:55,840
as input so because these are now

2144
01:24:55,840 --> 01:24:58,639
involved in the key duration they end up

2145
01:24:58,639 --> 01:25:00,480
being integrity protected which is a

2146
01:25:00,480 --> 01:25:01,600
very nice

2147
01:25:01,600 --> 01:25:04,080
property

2148
01:25:04,239 --> 01:25:06,719
and for the actual update ctx basically

2149
01:25:06,719 --> 01:25:08,159
there's two like

2150
01:25:08,159 --> 01:25:10,719
internal paths it can take

2151
01:25:10,719 --> 01:25:13,840
one is if your original context was was

2152
01:25:13,840 --> 01:25:16,560
uh derived using ad hoc you used edo key

2153
01:25:16,560 --> 01:25:18,639
update to drive

2154
01:25:18,639 --> 01:25:20,159
your new context

2155
01:25:20,159 --> 01:25:22,560
uh with advanced as input and x quite a

2156
01:25:22,560 --> 01:25:23,520
simple

2157
01:25:23,520 --> 01:25:24,960
the other method is let's say you didn't

2158
01:25:24,960 --> 01:25:27,360
use addok at all well then you use a

2159
01:25:27,360 --> 01:25:29,679
simple hkdf expand

2160
01:25:29,679 --> 01:25:31,520
to derive the key information for the

2161
01:25:31,520 --> 01:25:34,639
new context so this kind of allows you

2162
01:25:34,639 --> 01:25:37,120
to use the nice educate if that's

2163
01:25:37,120 --> 01:25:38,719
available to you but if you didn't use

2164
01:25:38,719 --> 01:25:41,040
edok you're still good to go and can use

2165
01:25:41,040 --> 01:25:42,719
the other method

2166
01:25:42,719 --> 01:25:44,880
uh or when yeah when using method one we

2167
01:25:44,880 --> 01:25:47,440
have now aligned the text so it's uh up

2168
01:25:47,440 --> 01:25:49,120
to date with uh

2169
01:25:49,120 --> 01:25:52,239
edoki update which uh takes uh silver by

2170
01:25:52,239 --> 01:25:55,199
string as input basically and we also

2171
01:25:55,199 --> 01:25:57,280
define some rules on when you can like

2172
01:25:57,280 --> 01:26:00,400
overwrite your prk out and prk exporter

2173
01:26:00,400 --> 01:26:03,120
keys which are keys uh

2174
01:26:03,120 --> 01:26:05,280
edo keys that you use for deriving the

2175
01:26:05,280 --> 01:26:09,040
final key material massive secret master

2176
01:26:09,040 --> 01:26:10,560
um

2177
01:26:10,560 --> 01:26:12,560
yeah so this is a bit more details on

2178
01:26:12,560 --> 01:26:15,040
the update ctx basically we needed to

2179
01:26:15,040 --> 01:26:17,679
kind of define a way to handle x

2180
01:26:17,679 --> 01:26:19,600
values and the nonsense

2181
01:26:19,600 --> 01:26:22,239
so here in this figure x1 and x2 are the

2182
01:26:22,239 --> 01:26:24,960
row values of the x bytes and n1 and m2

2183
01:26:24,960 --> 01:26:27,199
are the row values of the nonsense

2184
01:26:27,199 --> 01:26:28,960
so we have this like

2185
01:26:28,960 --> 01:26:32,080
way of blending x and n

2186
01:26:32,080 --> 01:26:33,760
x and n values

2187
01:26:33,760 --> 01:26:36,560
into just standalone x and then

2188
01:26:36,560 --> 01:26:38,320
parameters so you can see here in case

2189
01:26:38,320 --> 01:26:41,199
of message one x is simply x one and n

2190
01:26:41,199 --> 01:26:42,719
is n one

2191
01:26:42,719 --> 01:26:44,480
but in message two you have a bit more

2192
01:26:44,480 --> 01:26:46,880
complicated construction you have a

2193
01:26:46,880 --> 01:26:49,440
wrapping zebra wrapping of x one supply

2194
01:26:49,440 --> 01:26:51,199
string concatenated we see the wrapping

2195
01:26:51,199 --> 01:26:53,280
of x2 is a byte string

2196
01:26:53,280 --> 01:26:55,199
that's x and n is constructed in a

2197
01:26:55,199 --> 01:26:57,040
similar way i mean the point is that we

2198
01:26:57,040 --> 01:26:58,480
want to do this wrapping because we want

2199
01:26:58,480 --> 01:26:59,760
to

2200
01:26:59,760 --> 01:27:01,679
maintain and keep the

2201
01:27:01,679 --> 01:27:04,560
length information about the nonsense

2202
01:27:04,560 --> 01:27:05,920
uh

2203
01:27:05,920 --> 01:27:07,840
in the concatenation so there's no risk

2204
01:27:07,840 --> 01:27:09,280
of this kind of attack where you just

2205
01:27:09,280 --> 01:27:12,639
have two concatenated byte uh

2206
01:27:12,639 --> 01:27:15,040
robot arrays where possibly an attacker

2207
01:27:15,040 --> 01:27:15,920
could

2208
01:27:15,920 --> 01:27:18,639
try to splice to do some attack where

2209
01:27:18,639 --> 01:27:20,960
like the concatenation ends up being the

2210
01:27:20,960 --> 01:27:22,080
same

2211
01:27:22,080 --> 01:27:24,480
so in in other contexts it was pointed

2212
01:27:24,480 --> 01:27:26,320
out that it's important to keep the

2213
01:27:26,320 --> 01:27:27,520
length

2214
01:27:27,520 --> 01:27:29,360
and their zebra is very useful because

2215
01:27:29,360 --> 01:27:31,600
it has the length in the hand the right

2216
01:27:31,600 --> 01:27:33,840
and then we actually invoked update ctx

2217
01:27:33,840 --> 01:27:37,199
with this x and uh values and we thin

2218
01:27:37,199 --> 01:27:39,120
update ctx we do some more wrapping

2219
01:27:39,120 --> 01:27:40,800
because one key property we want to

2220
01:27:40,800 --> 01:27:43,760
achieve here is that educate should be

2221
01:27:43,760 --> 01:27:47,679
taking a zebra byte string as input

2222
01:27:47,679 --> 01:27:50,320
and lots of feedback on this uh from

2223
01:27:50,320 --> 01:27:52,800
charleston with some suggestions

2224
01:27:52,800 --> 01:27:54,800
but that's really the

2225
01:27:54,800 --> 01:27:56,400
reason we designed it like this we won't

2226
01:27:56,400 --> 01:27:58,800
have a key update to take a um

2227
01:27:58,800 --> 01:28:00,639
to take a sip or by string as input

2228
01:28:00,639 --> 01:28:02,639
because that's how it's designed in that

2229
01:28:02,639 --> 01:28:04,560
draft

2230
01:28:04,560 --> 01:28:06,159
yep open points i'll go through this a

2231
01:28:06,159 --> 01:28:08,000
bit quick so there are a number of

2232
01:28:08,000 --> 01:28:09,520
issues on the github prep but we'll go

2233
01:28:09,520 --> 01:28:11,679
through those and fix

2234
01:28:11,679 --> 01:28:13,600
and take care of those

2235
01:28:13,600 --> 01:28:15,679
we are proposing here to split up the

2236
01:28:15,679 --> 01:28:17,840
ctx into two actual separate functions

2237
01:28:17,840 --> 01:28:19,520
because like i said it basically has two

2238
01:28:19,520 --> 01:28:22,000
internal methods method one relying on

2239
01:28:22,000 --> 01:28:23,600
that dock and method two relying on an

2240
01:28:23,600 --> 01:28:26,880
hqda hkdf-based approach

2241
01:28:26,880 --> 01:28:30,000
and and we also want to have a signaling

2242
01:28:30,000 --> 01:28:32,400
way so you can signal to use the method

2243
01:28:32,400 --> 01:28:34,560
too because what if your context was

2244
01:28:34,560 --> 01:28:36,880
defined and derived using edoc but for

2245
01:28:36,880 --> 01:28:38,400
some reason your addox session is not

2246
01:28:38,400 --> 01:28:40,000
around anymore

2247
01:28:40,000 --> 01:28:41,440
so you cannot use that

2248
01:28:41,440 --> 01:28:43,440
key update practically well then in that

2249
01:28:43,440 --> 01:28:45,040
case you would like to fall back to the

2250
01:28:45,040 --> 01:28:46,159
hkdf

2251
01:28:46,159 --> 01:28:48,239
way and we need some signaling for that

2252
01:28:48,239 --> 01:28:49,840
and one easy way to signal is just add

2253
01:28:49,840 --> 01:28:52,480
one more beat in the x pipe to

2254
01:28:52,480 --> 01:28:54,800
be able to signal this and we also want

2255
01:28:54,800 --> 01:28:56,400
to produce an implementation

2256
01:28:56,400 --> 01:28:58,960
of this based on those coryova

2257
01:28:58,960 --> 01:29:00,560
california implementation we already

2258
01:29:00,560 --> 01:29:01,280
have

2259
01:29:01,280 --> 01:29:03,360
and of course yeah comments feedback

2260
01:29:03,360 --> 01:29:04,510
very welcome

2261
01:29:04,510 --> 01:29:05,600
[Music]

2262
01:29:05,600 --> 01:29:09,600
anything you have to to mention

2263
01:29:09,600 --> 01:29:12,239
yes thank you

2264
01:29:12,960 --> 01:29:16,000
thank you christian

2265
01:29:16,000 --> 01:29:19,520
if fall back to this method 2 is

2266
01:29:19,520 --> 01:29:22,320
something that can just be started by

2267
01:29:22,320 --> 01:29:24,400
one party

2268
01:29:24,400 --> 01:29:27,360
do does the mechanism lose any relevant

2269
01:29:27,360 --> 01:29:29,600
properties because if it doesn't uh why

2270
01:29:29,600 --> 01:29:32,800
do method one after all

2271
01:29:33,120 --> 01:29:34,239
um

2272
01:29:34,239 --> 01:29:36,239
well we would like to

2273
01:29:36,239 --> 01:29:37,520
follow sure

2274
01:29:37,520 --> 01:29:39,920
but we would like to run use method one

2275
01:29:39,920 --> 01:29:42,560
if possible if you can use the key

2276
01:29:42,560 --> 01:29:43,920
update we would like to take advantage

2277
01:29:43,920 --> 01:29:45,600
of that if possible

2278
01:29:45,600 --> 01:29:47,199
um

2279
01:29:47,199 --> 01:29:49,360
and i would say that the this signaling

2280
01:29:49,360 --> 01:29:51,280
on the fallback that signaling could be

2281
01:29:51,280 --> 01:29:54,080
done by either party because

2282
01:29:54,080 --> 01:29:55,760
it could be that the initiator has its

2283
01:29:55,760 --> 01:29:58,320
education still and wants to use better

2284
01:29:58,320 --> 01:30:00,480
one but the responder can't or it could

2285
01:30:00,480 --> 01:30:02,320
be the opposite so both have it has to

2286
01:30:02,320 --> 01:30:04,239
be kind of a mutual bi-directional

2287
01:30:04,239 --> 01:30:06,239
signaling the both have to agree to be

2288
01:30:06,239 --> 01:30:07,679
able to use metal one because if one

2289
01:30:07,679 --> 01:30:09,600
can't use method one they both have to

2290
01:30:09,600 --> 01:30:11,679
fall documented but but is anything

2291
01:30:11,679 --> 01:30:13,040
valuable

2292
01:30:13,040 --> 01:30:16,960
what is actually lost when falling back

2293
01:30:18,560 --> 01:30:20,239
you you basically think like what what

2294
01:30:20,239 --> 01:30:21,360
is the

2295
01:30:21,360 --> 01:30:23,040
the which properties

2296
01:30:23,040 --> 01:30:26,880
does this lose any valuable properties

2297
01:30:27,360 --> 01:30:29,199
comparing method to the metabolism yeah

2298
01:30:29,199 --> 01:30:31,520
that's uh that's um

2299
01:30:31,520 --> 01:30:33,360
that's a good question it's basically

2300
01:30:33,360 --> 01:30:34,400
like they have the key update and the

2301
01:30:34,400 --> 01:30:36,400
hkdf-based way they're they ask the

2302
01:30:36,400 --> 01:30:38,239
security they may have the same security

2303
01:30:38,239 --> 01:30:40,880
properties regardless that's your point

2304
01:30:40,880 --> 01:30:43,120
as if i understand it correctly

2305
01:30:43,120 --> 01:30:44,000
um

2306
01:30:44,000 --> 01:30:45,520
that's the question yes that's the

2307
01:30:45,520 --> 01:30:47,600
question yeah that's uh that's a good

2308
01:30:47,600 --> 01:30:51,920
point if if there is a um

2309
01:30:52,080 --> 01:30:53,760
a concrete

2310
01:30:53,760 --> 01:30:55,760
a security property that metal one has

2311
01:30:55,760 --> 01:30:58,239
that meta2 does not have i cannot answer

2312
01:30:58,239 --> 01:31:00,159
that right now without thinking more

2313
01:31:00,159 --> 01:31:03,480
about it

2314
01:31:11,440 --> 01:31:13,120
i'm just thinking about i mean in the

2315
01:31:13,120 --> 01:31:17,520
spirit of carson's comment here on on uh

2316
01:31:17,520 --> 01:31:19,199
size of

2317
01:31:19,199 --> 01:31:22,000
drafts is it possible to split out some

2318
01:31:22,000 --> 01:31:23,840
parts in separate

2319
01:31:23,840 --> 01:31:26,880
drafts i was thinking about it changing

2320
01:31:26,880 --> 01:31:28,960
recipient ids

2321
01:31:28,960 --> 01:31:31,120
could that be a separate

2322
01:31:31,120 --> 01:31:34,480
separate draft wrapped yeah

2323
01:31:34,480 --> 01:31:36,400
i mean i would say it could because

2324
01:31:36,400 --> 01:31:38,159
practically i mean this is a standalone

2325
01:31:38,159 --> 01:31:40,960
procedure you can understand alone

2326
01:31:40,960 --> 01:31:42,239
um

2327
01:31:42,239 --> 01:31:44,400
without kudos but you can also run it

2328
01:31:44,400 --> 01:31:47,280
embedded in accuracy execution so it it

2329
01:31:47,280 --> 01:31:48,480
could be if

2330
01:31:48,480 --> 01:31:50,239
if that that it could be a way to go i

2331
01:31:50,239 --> 01:31:51,760
mean yes to split this out into a

2332
01:31:51,760 --> 01:31:54,320
separate document it would be

2333
01:31:54,320 --> 01:31:56,080
that would be feasible

2334
01:31:56,080 --> 01:31:57,679
and what about the key limits and the

2335
01:31:57,679 --> 01:32:00,639
kudos protocols

2336
01:32:00,639 --> 01:32:02,960
i mean

2337
01:32:02,960 --> 01:32:05,360
yeah i mean i think i would say same

2338
01:32:05,360 --> 01:32:08,080
story fundamentally they could

2339
01:32:08,080 --> 01:32:10,320
practically be you could have one draft

2340
01:32:10,320 --> 01:32:12,080
that's about kudos to one that is about

2341
01:32:12,080 --> 01:32:14,000
the limits relating to score that that

2342
01:32:14,000 --> 01:32:17,760
could be like that for sure um

2343
01:32:18,239 --> 01:32:20,320
i think it grew out like this through

2344
01:32:20,320 --> 01:32:22,480
due to earlier discussions and feedback

2345
01:32:22,480 --> 01:32:24,639
it it ended up being disrejoined in the

2346
01:32:24,639 --> 01:32:26,880
same document and they are related

2347
01:32:26,880 --> 01:32:28,480
relevant in the sense that okay one

2348
01:32:28,480 --> 01:32:30,239
reason to do key update is because

2349
01:32:30,239 --> 01:32:33,199
reaching the limits but fundamentally

2350
01:32:33,199 --> 01:32:36,159
if the desire is to have a

2351
01:32:36,159 --> 01:32:38,639
like more but smaller drafts

2352
01:32:38,639 --> 01:32:40,639
yes i believe they could be it could be

2353
01:32:40,639 --> 01:32:42,800
split yes

2354
01:32:42,800 --> 01:32:45,520
okay thank you

2355
01:32:46,080 --> 01:32:48,960
thank you uh rickard and all your

2356
01:32:48,960 --> 01:32:50,560
comments we're gonna need to move on

2357
01:32:50,560 --> 01:32:52,400
we're 12 minutes late

2358
01:32:52,400 --> 01:32:54,239
please follow up presenters try to save

2359
01:32:54,239 --> 01:32:56,159
one or two minutes if not more from your

2360
01:32:56,159 --> 01:32:59,120
presentation thank you

2361
01:33:05,199 --> 01:33:08,360
hi martinez

2362
01:33:15,120 --> 01:33:18,120
um

2363
01:33:23,040 --> 01:33:26,239
martina you're muted i think

2364
01:33:26,639 --> 01:33:27,520
sorry

2365
01:33:27,520 --> 01:33:29,360
can you hear me now

2366
01:33:29,360 --> 01:33:30,400
yes

2367
01:33:30,400 --> 01:33:33,120
great okay i tried to make its quick air

2368
01:33:33,120 --> 01:33:34,400
then

2369
01:33:34,400 --> 01:33:37,679
um so uh yeah i want to talk about dns

2370
01:33:37,679 --> 01:33:40,320
over co-op uh so

2371
01:33:40,320 --> 01:33:41,840
i give a quick introduction for those

2372
01:33:41,840 --> 01:33:43,600
who weren't here the last few meetings

2373
01:33:43,600 --> 01:33:46,800
and give you the changes since the

2374
01:33:46,800 --> 01:33:49,920
last interim i attended and then go a

2375
01:33:49,920 --> 01:33:51,760
little bit into some discussions around

2376
01:33:51,760 --> 01:33:54,719
dns push and co-op observe which came up

2377
01:33:54,719 --> 01:33:55,760
after

2378
01:33:55,760 --> 01:33:57,920
we pushed the current release the

2379
01:33:57,920 --> 01:34:00,639
current version of the of the draft

2380
01:34:00,639 --> 01:34:04,239
um and yeah the basically we want to

2381
01:34:04,239 --> 01:34:06,400
save dns requests from iot devices

2382
01:34:06,400 --> 01:34:08,480
against each dropbox so the typical

2383
01:34:08,480 --> 01:34:10,480
solution for that is to encrypt the name

2384
01:34:10,480 --> 01:34:12,480
resolution

2385
01:34:12,480 --> 01:34:14,719
and our proposal for that and other

2386
01:34:14,719 --> 01:34:16,880
approaches don't work

2387
01:34:16,880 --> 01:34:19,840
in the iot scenarios we are looking at

2388
01:34:19,840 --> 01:34:23,120
is to use dns over corp which is able to

2389
01:34:23,120 --> 01:34:24,880
encrypt the communication either via

2390
01:34:24,880 --> 01:34:27,440
dtls or oscar and we also have

2391
01:34:27,440 --> 01:34:29,440
additional advantages

2392
01:34:29,440 --> 01:34:32,080
to um

2393
01:34:32,080 --> 01:34:34,320
like blockbuster message trends where to

2394
01:34:34,320 --> 01:34:36,159
overcome past mdu problems which you

2395
01:34:36,159 --> 01:34:39,120
encounter for example with dns over dtls

2396
01:34:39,120 --> 01:34:40,960
and we can also share system movements

2397
01:34:40,960 --> 01:34:43,440
with co-op since we can use the same

2398
01:34:43,440 --> 01:34:45,280
socket and buffers and also reuse the

2399
01:34:45,280 --> 01:34:48,800
co-op retransmission mechanism

2400
01:34:50,880 --> 01:34:53,920
since last interim and last draft

2401
01:34:53,920 --> 01:34:56,239
version i presented here we

2402
01:34:56,239 --> 01:34:58,080
made the

2403
01:34:58,080 --> 01:35:00,719
we made basically some ranges to reduce

2404
01:35:00,719 --> 01:35:02,960
restatements on core behavior among

2405
01:35:02,960 --> 01:35:04,480
other things we

2406
01:35:04,480 --> 01:35:06,239
try to be more precise when a

2407
01:35:06,239 --> 01:35:10,000
confirmable message should be used

2408
01:35:10,000 --> 01:35:12,719
we cleaned up the our paragraph on error

2409
01:35:12,719 --> 01:35:14,880
behavior we moved

2410
01:35:14,880 --> 01:35:16,239
we removed the block-wise

2411
01:35:16,239 --> 01:35:18,480
recommendations completely because they

2412
01:35:18,480 --> 01:35:21,280
basically represented what co-op

2413
01:35:21,280 --> 01:35:23,199
request

2414
01:35:23,199 --> 01:35:25,520
rfc is telling you about

2415
01:35:25,520 --> 01:35:28,000
we removed the sentence that states that

2416
01:35:28,000 --> 01:35:30,960
fetch is sent to server uri

2417
01:35:30,960 --> 01:35:33,840
and we removed the configurations on

2418
01:35:33,840 --> 01:35:36,080
proxies

2419
01:35:36,080 --> 01:35:38,719
on caching especially we provided an

2420
01:35:38,719 --> 01:35:41,360
algorithm to

2421
01:35:41,360 --> 01:35:44,239
synchronize up the co-op max h and dns

2422
01:35:44,239 --> 01:35:48,480
ttl so that not some

2423
01:35:48,480 --> 01:35:49,600
timed out

2424
01:35:49,600 --> 01:35:52,000
dns records are lying around in some

2425
01:35:52,000 --> 01:35:53,760
co-op cache somewhere

2426
01:35:53,760 --> 01:35:56,880
and we remove the e-tec considerations

2427
01:35:56,880 --> 01:35:59,199
since that also just restated core

2428
01:35:59,199 --> 01:36:00,800
behavior

2429
01:36:00,800 --> 01:36:02,080
um

2430
01:36:02,080 --> 01:36:04,719
then we did some kuby buns

2431
01:36:04,719 --> 01:36:07,360
we recommended oscar usage and

2432
01:36:07,360 --> 01:36:10,000
basically just stated okay use score if

2433
01:36:10,000 --> 01:36:12,239
you want to use dns over co-op but you

2434
01:36:12,239 --> 01:36:14,080
don't have to

2435
01:36:14,080 --> 01:36:15,840
and we drafted out

2436
01:36:15,840 --> 01:36:18,480
already the observed usage but as i

2437
01:36:18,480 --> 01:36:20,560
already said in the beginning this still

2438
01:36:20,560 --> 01:36:22,960
needs some work

2439
01:36:22,960 --> 01:36:27,040
and uh we removed the tv duns on

2440
01:36:27,040 --> 01:36:29,520
issue four which was about uh

2441
01:36:29,520 --> 01:36:32,000
having some repetitions in the dns

2442
01:36:32,000 --> 01:36:34,560
format uh

2443
01:36:34,560 --> 01:36:37,440
which uh we want to in some at some

2444
01:36:37,440 --> 01:36:39,119
point uh

2445
01:36:39,119 --> 01:36:41,840
go put into a separate draft

2446
01:36:41,840 --> 01:36:44,560
for a compressed content format which

2447
01:36:44,560 --> 01:36:46,800
probably will be sibo based

2448
01:36:46,800 --> 01:36:49,760
um and yeah and

2449
01:36:49,760 --> 01:36:50,639
left

2450
01:36:50,639 --> 01:36:53,199
to be done maybe we can just discuss

2451
01:36:53,199 --> 01:36:56,400
this here also is the jana consideration

2452
01:36:56,400 --> 01:36:58,800
uh where we didn't pick an id for the

2453
01:36:58,800 --> 01:37:00,800
application dns message content format

2454
01:37:00,800 --> 01:37:01,679
yes

2455
01:37:01,679 --> 01:37:05,920
uh the main reason is uh because the up

2456
01:37:05,920 --> 01:37:07,840
probably with dms some nice numbers we

2457
01:37:07,840 --> 01:37:09,600
want to use and i wanted to maybe

2458
01:37:09,600 --> 01:37:12,480
discuss this first

2459
01:37:13,040 --> 01:37:14,480
and so

2460
01:37:14,480 --> 01:37:16,719
after all that

2461
01:37:16,719 --> 01:37:19,520
i go into the dns push and how to

2462
01:37:19,520 --> 01:37:22,480
implement this with co-op observe

2463
01:37:22,480 --> 01:37:24,719
so first a brief primer on how dns push

2464
01:37:24,719 --> 01:37:27,410
notifications work according to rc8765

2465
01:37:27,410 --> 01:37:29,199
[Music]

2466
01:37:29,199 --> 01:37:33,280
they are based on the waitful operations

2467
01:37:33,280 --> 01:37:35,760
and i can basically very

2468
01:37:35,760 --> 01:37:37,520
organize with the query response

2469
01:37:37,520 --> 01:37:41,600
paradigm so you send the dso stateful

2470
01:37:41,600 --> 01:37:43,760
operation with a subscribe

2471
01:37:43,760 --> 01:37:44,639
uh

2472
01:37:44,639 --> 01:37:48,800
message in encapsulated for a certain

2473
01:37:48,800 --> 01:37:50,560
record you want to query

2474
01:37:50,560 --> 01:37:51,440
uh

2475
01:37:51,440 --> 01:37:53,760
that then is uh

2476
01:37:53,760 --> 01:37:55,440
for that then you can get an basically a

2477
01:37:55,440 --> 01:37:56,880
subscribe ack

2478
01:37:56,880 --> 01:37:57,920
and then

2479
01:37:57,920 --> 01:38:00,639
the resolver can start to push also with

2480
01:38:00,639 --> 01:38:03,119
dso messages

2481
01:38:03,119 --> 01:38:06,639
if there is an update to the record

2482
01:38:06,639 --> 01:38:07,760
and

2483
01:38:07,760 --> 01:38:10,239
also you can unsubscribe via

2484
01:38:10,239 --> 01:38:11,520
a dsl

2485
01:38:11,520 --> 01:38:14,239
dsl option

2486
01:38:15,440 --> 01:38:19,280
so uh the problem with that is that with

2487
01:38:19,280 --> 01:38:21,600
uh that the rc

2488
01:38:21,600 --> 01:38:24,560
eight seven six four five basically just

2489
01:38:24,560 --> 01:38:27,600
states that we require dns over tls for

2490
01:38:27,600 --> 01:38:29,600
that and

2491
01:38:29,600 --> 01:38:31,440
there's basically a must to that and we

2492
01:38:31,440 --> 01:38:33,360
also need additional state information

2493
01:38:33,360 --> 01:38:34,239
so

2494
01:38:34,239 --> 01:38:36,960
to not uh

2495
01:38:36,960 --> 01:38:39,199
soften this requirement and also to make

2496
01:38:39,199 --> 01:38:40,880
the implementation on the client side

2497
01:38:40,880 --> 01:38:43,119
simpler is to use

2498
01:38:43,119 --> 01:38:45,600
rather use co-op observe as a signal to

2499
01:38:45,600 --> 01:38:48,400
use subspace instead of a query at the

2500
01:38:48,400 --> 01:38:50,080
doc server

2501
01:38:50,080 --> 01:38:51,760
which would look a little bit like this

2502
01:38:51,760 --> 01:38:54,239
but we have it just a normal fetch with

2503
01:38:54,239 --> 01:38:57,679
a normal dns query encapsulated

2504
01:38:57,679 --> 01:39:00,400
within an observe option that the doc

2505
01:39:00,400 --> 01:39:02,880
server takes to do the subscribe that we

2506
01:39:02,880 --> 01:39:04,400
saw before

2507
01:39:04,400 --> 01:39:06,080
and then when there is a

2508
01:39:06,080 --> 01:39:08,480
when there is a push the

2509
01:39:08,480 --> 01:39:10,000
observed response

2510
01:39:10,000 --> 01:39:12,000
basically also comes and there's an

2511
01:39:12,000 --> 01:39:14,320
observed notification

2512
01:39:14,320 --> 01:39:17,199
oh there's a little arrow but

2513
01:39:17,199 --> 01:39:19,360
i leave that to the reader

2514
01:39:19,360 --> 01:39:22,719
um and for unsubscribing just also a

2515
01:39:22,719 --> 01:39:25,199
normal unsubscribe with fetch or like

2516
01:39:25,199 --> 01:39:27,760
when there's coming a reset back from

2517
01:39:27,760 --> 01:39:28,639
the

2518
01:39:28,639 --> 01:39:31,040
client

2519
01:39:31,119 --> 01:39:31,920
so

2520
01:39:31,920 --> 01:39:34,480
as an example there could be

2521
01:39:34,480 --> 01:39:37,360
i put that on the mailing list

2522
01:39:37,360 --> 01:39:38,239
maybe

2523
01:39:38,239 --> 01:39:40,639
some comments there could also be given

2524
01:39:40,639 --> 01:39:44,159
basically i i worked out how dns uh

2525
01:39:44,159 --> 01:39:46,960
service discovery could work when using

2526
01:39:46,960 --> 01:39:48,800
uh doc

2527
01:39:48,800 --> 01:39:51,440
and basically if you would just ask for

2528
01:39:51,440 --> 01:39:53,840
a powerpoint of your co-op services in a

2529
01:39:53,840 --> 01:39:55,119
network

2530
01:39:55,119 --> 01:39:57,520
and then get respond back and this would

2531
01:39:57,520 --> 01:39:58,639
be the

2532
01:39:58,639 --> 01:40:01,280
push and if there are new services

2533
01:40:01,280 --> 01:40:02,400
joining

2534
01:40:02,400 --> 01:40:06,719
those this list would be just updated

2535
01:40:06,880 --> 01:40:10,400
so um yeah that's basically it for

2536
01:40:10,400 --> 01:40:12,400
my part at least what i

2537
01:40:12,400 --> 01:40:14,320
uh drafted out so

2538
01:40:14,320 --> 01:40:16,800
if there are any questions or comments

2539
01:40:16,800 --> 01:40:20,000
you're welcome to give them now

2540
01:40:21,679 --> 01:40:24,159
thank you martinez any comment question

2541
01:40:24,159 --> 01:40:26,638
anyone

2542
01:40:29,920 --> 01:40:31,280
none in the queue in the chat in the

2543
01:40:31,280 --> 01:40:32,880
room

2544
01:40:32,880 --> 01:40:34,719
so yeah this draft has been received

2545
01:40:34,719 --> 01:40:36,639
pretty well as so far especially the the

2546
01:40:36,639 --> 01:40:38,560
previous idea of meeting with also a few

2547
01:40:38,560 --> 01:40:40,239
people supporting

2548
01:40:40,239 --> 01:40:43,199
uh the work and committing to review so

2549
01:40:43,199 --> 01:40:45,119
the chairs believe the obvious next step

2550
01:40:45,119 --> 01:40:46,000
is

2551
01:40:46,000 --> 01:40:48,639
starting a call for adoption on this

2552
01:40:48,639 --> 01:40:50,320
is there any comment on this any

2553
01:40:50,320 --> 01:40:52,799
objection

2554
01:40:54,560 --> 01:40:56,320
then we'll start an option called the

2555
01:40:56,320 --> 01:40:58,400
mini mist

2556
01:40:58,400 --> 01:40:59,360
okay

2557
01:40:59,360 --> 01:41:01,600
thank you very much martina

2558
01:41:01,600 --> 01:41:05,719
thank you also for saving time

2559
01:41:15,920 --> 01:41:18,880
next presentation is giuseppe

2560
01:41:18,880 --> 01:41:22,239
performance measurement for co-op

2561
01:41:22,239 --> 01:41:24,960
hello everybody can you hear me

2562
01:41:24,960 --> 01:41:26,800
yes we can here to see you hi

2563
01:41:26,800 --> 01:41:30,280
okay hello

2564
01:41:32,000 --> 01:41:35,600
uh i will share the slide uh

2565
01:41:35,600 --> 01:41:37,920
it's the second from top

2566
01:41:37,920 --> 01:41:40,159
uh second left

2567
01:41:40,159 --> 01:41:42,960
second from left icon on top to request

2568
01:41:42,960 --> 01:41:45,760
sharing the slides

2569
01:41:48,480 --> 01:41:50,638
no

2570
01:41:53,840 --> 01:41:55,920
yes and if you can please speak a bit

2571
01:41:55,920 --> 01:41:58,719
closer to the mic

2572
01:41:59,440 --> 01:42:01,839
okay

2573
01:42:06,000 --> 01:42:08,480
okay i guess you can see the slide now

2574
01:42:08,480 --> 01:42:11,760
so uh okay let's start so yeah this is

2575
01:42:11,760 --> 01:42:14,880
an update about the co-op performance

2576
01:42:14,880 --> 01:42:17,679
measurement option so this is the 0-2

2577
01:42:17,679 --> 01:42:20,080
version

2578
01:42:21,119 --> 01:42:22,800
and i'm presenting on the alpha of the

2579
01:42:22,800 --> 01:42:25,920
quarter so yeah just a few words about

2580
01:42:25,920 --> 01:42:27,600
the motivation this is not the first

2581
01:42:27,600 --> 01:42:31,840
time that we presented this work um

2582
01:42:31,840 --> 01:42:34,800
so we also presented at last at the

2583
01:42:34,800 --> 01:42:37,040
interim meeting in march

2584
01:42:37,040 --> 01:42:38,800
so the motivation is to find the

2585
01:42:38,800 --> 01:42:41,280
mechanism to measure the performance in

2586
01:42:41,280 --> 01:42:43,920
code to meet the operational

2587
01:42:43,920 --> 01:42:46,080
requirements and of course since we are

2588
01:42:46,080 --> 01:42:48,239
talking about constrained environment we

2589
01:42:48,239 --> 01:42:49,119
need

2590
01:42:49,119 --> 01:42:52,000
a simplified simple mechanism for for

2591
01:42:52,000 --> 01:42:54,480
network diagnostic

2592
01:42:54,480 --> 01:42:57,360
since it is resource consuming to read

2593
01:42:57,360 --> 01:42:59,600
id sequence numbers

2594
01:42:59,600 --> 01:43:01,440
store time stamps

2595
01:43:01,440 --> 01:43:03,119
for constraint nodes of course the

2596
01:43:03,119 --> 01:43:05,679
methodology needs to be

2597
01:43:05,679 --> 01:43:08,000
straightforward and simple to be

2598
01:43:08,000 --> 01:43:11,000
implemented

2599
01:43:13,199 --> 01:43:15,760
regarding the changes from the 0-1

2600
01:43:15,760 --> 01:43:17,440
version

2601
01:43:17,440 --> 01:43:19,600
it's it's important to clarify that most

2602
01:43:19,600 --> 01:43:21,199
of the changes are to others the

2603
01:43:21,199 --> 01:43:23,199
comments and the inputs received during

2604
01:43:23,199 --> 01:43:25,119
the last entry meeting from carsten

2605
01:43:25,119 --> 01:43:27,520
chris and marco

2606
01:43:27,520 --> 01:43:29,840
in particular then i want to highlight

2607
01:43:29,840 --> 01:43:32,320
the main points and the main changes we

2608
01:43:32,320 --> 01:43:35,040
apply to the to the latest version

2609
01:43:35,040 --> 01:43:35,920
so

2610
01:43:35,920 --> 01:43:38,480
first of all we clarified that the co-op

2611
01:43:38,480 --> 01:43:40,400
option is

2612
01:43:40,400 --> 01:43:42,800
of course selective safe to forward and

2613
01:43:42,800 --> 01:43:46,239
it's not to be included in the cache key

2614
01:43:46,239 --> 01:43:47,040
so

2615
01:43:47,040 --> 01:43:50,000
then we specify the detailed scenarios

2616
01:43:50,000 --> 01:43:51,760
and the use cases

2617
01:43:51,760 --> 01:43:54,639
in particular we

2618
01:43:55,199 --> 01:43:59,040
described the use of non-proxy endpoints

2619
01:43:59,040 --> 01:44:00,000
or

2620
01:44:00,000 --> 01:44:03,040
the application in case of collaborating

2621
01:44:03,040 --> 01:44:06,000
proxies or non-collaborating proxies and

2622
01:44:06,000 --> 01:44:08,400
also we described the

2623
01:44:08,400 --> 01:44:11,760
application in case of oscar

2624
01:44:11,760 --> 01:44:14,480
then we also included a new subsection a

2625
01:44:14,480 --> 01:44:16,000
new section on management and

2626
01:44:16,000 --> 01:44:18,400
configuration aspects even if these

2627
01:44:18,400 --> 01:44:19,520
aspects

2628
01:44:19,520 --> 01:44:23,520
are not fully in scope of our data

2629
01:44:23,520 --> 01:44:25,040
and then we also improve the security

2630
01:44:25,040 --> 01:44:26,960
considerations part

2631
01:44:26,960 --> 01:44:30,080
uh by adding the

2632
01:44:30,080 --> 01:44:31,040
new

2633
01:44:31,040 --> 01:44:35,840
consideration on gtls underscore as well

2634
01:44:39,600 --> 01:44:40,320
the

2635
01:44:40,320 --> 01:44:42,719
the methodologies that

2636
01:44:42,719 --> 01:44:44,560
are used by

2637
01:44:44,560 --> 01:44:45,920
this mean

2638
01:44:45,920 --> 01:44:47,840
the option that is introducing this

2639
01:44:47,840 --> 01:44:49,280
draft

2640
01:44:49,280 --> 01:44:51,840
are not a new methodology but they are

2641
01:44:51,840 --> 01:44:54,719
already defined in ippm working group

2642
01:44:54,719 --> 01:44:56,719
there is a diagraph the working group

2643
01:44:56,719 --> 01:44:58,320
plus call

2644
01:44:58,320 --> 01:45:01,440
that is called explicit flow measurement

2645
01:45:01,440 --> 01:45:03,760
and these techniques employ a few

2646
01:45:03,760 --> 01:45:05,600
marking beads inside the other of the

2647
01:45:05,600 --> 01:45:09,040
packet for los angeles

2648
01:45:09,119 --> 01:45:11,600
in particular there is the spin bit idea

2649
01:45:11,600 --> 01:45:14,480
to create the square wave signia

2650
01:45:14,480 --> 01:45:17,040
using a bit the length of this square

2651
01:45:17,040 --> 01:45:20,000
wave signal is equal to rtt

2652
01:45:20,000 --> 01:45:21,760
and it is optional in the quick

2653
01:45:21,760 --> 01:45:23,520
specification

2654
01:45:23,520 --> 01:45:25,600
while the square bit

2655
01:45:25,600 --> 01:45:28,880
creates square waves of very low line so

2656
01:45:28,880 --> 01:45:30,960
for example 64

2657
01:45:30,960 --> 01:45:33,119
64 packets

2658
01:45:33,119 --> 01:45:35,119
and this can be used for packet loss

2659
01:45:35,119 --> 01:45:37,440
measurement

2660
01:45:37,440 --> 01:45:40,880
these are the two basic mechanisms that

2661
01:45:40,880 --> 01:45:44,920
are also defined in sdpm

2662
01:45:45,679 --> 01:45:47,360
so the

2663
01:45:47,360 --> 01:45:50,480
the goal of this draft is to

2664
01:45:50,480 --> 01:45:53,920
apply these methodologies to a new co-op

2665
01:45:53,920 --> 01:45:55,840
option

2666
01:45:55,840 --> 01:45:58,639
i cannot speak

2667
01:45:58,639 --> 01:46:00,800
a new co-op option carrying these

2668
01:46:00,800 --> 01:46:03,199
performance measurement leads

2669
01:46:03,199 --> 01:46:05,040
in particular the draft defined two

2670
01:46:05,040 --> 01:46:06,639
different pattern

2671
01:46:06,639 --> 01:46:10,159
if we use the square bit or the this and

2672
01:46:10,159 --> 01:46:13,040
the spin bit together or if you use a

2673
01:46:13,040 --> 01:46:15,840
sort of combined square bit

2674
01:46:15,840 --> 01:46:18,480
which reinforce the square bit with also

2675
01:46:18,480 --> 01:46:20,960
delay information in order to measure

2676
01:46:20,960 --> 01:46:23,760
everything with just one bit

2677
01:46:23,760 --> 01:46:26,480
and we also extend the possibility to

2678
01:46:26,480 --> 01:46:28,320
have the

2679
01:46:28,320 --> 01:46:31,040
the option with also other event beats

2680
01:46:31,040 --> 01:46:32,960
that can be used

2681
01:46:32,960 --> 01:46:33,840
for

2682
01:46:33,840 --> 01:46:38,000
signaling the proxy or the gateway that

2683
01:46:38,000 --> 01:46:40,239
maybe do not have the capability to

2684
01:46:40,239 --> 01:46:43,040
apply the algorithm for split and square

2685
01:46:43,040 --> 01:46:45,520
bit can read these event bits to

2686
01:46:45,520 --> 01:46:47,600
understand the different levels of

2687
01:46:47,600 --> 01:46:52,760
thresholds and so on for delay and loss

2688
01:46:54,400 --> 01:46:56,400
okay now um

2689
01:46:56,400 --> 01:46:58,400
i want to describe of course the the

2690
01:46:58,400 --> 01:47:00,560
addition one of the main additions that

2691
01:47:00,560 --> 01:47:01,520
we

2692
01:47:01,520 --> 01:47:03,600
we did in the last in the latest version

2693
01:47:03,600 --> 01:47:04,960
about the

2694
01:47:04,960 --> 01:47:07,600
details of the

2695
01:47:07,600 --> 01:47:09,679
scenarios and use cases

2696
01:47:09,679 --> 01:47:12,000
so the main usage of this option is for

2697
01:47:12,000 --> 01:47:13,600
end-to-end measurement

2698
01:47:13,600 --> 01:47:16,480
but split measurements are also loud

2699
01:47:16,480 --> 01:47:18,320
and this is an important point because

2700
01:47:18,320 --> 01:47:21,280
the intermediaries and numpad observer

2701
01:47:21,280 --> 01:47:23,440
can do the measurement as well and they

2702
01:47:23,440 --> 01:47:24,719
can be

2703
01:47:24,719 --> 01:47:27,199
a network function on probes that can

2704
01:47:27,199 --> 01:47:30,800
act as an important server or gateway or

2705
01:47:30,800 --> 01:47:32,080
proxies

2706
01:47:32,080 --> 01:47:35,119
that are tasked by cop client to perform

2707
01:47:35,119 --> 01:47:38,000
a request from their br

2708
01:47:38,000 --> 01:47:40,080
as i said there are different cases the

2709
01:47:40,080 --> 01:47:42,560
non-proxy endpoints the collaborating or

2710
01:47:42,560 --> 01:47:46,400
non-collaborating proxies and your score

2711
01:47:46,400 --> 01:47:49,440
in case of non-proxy and points

2712
01:47:49,440 --> 01:47:51,840
uh the co-op the cop option can be

2713
01:47:51,840 --> 01:47:54,000
applied end-to-end between client and

2714
01:47:54,000 --> 01:47:54,960
server

2715
01:47:54,960 --> 01:47:57,280
since it is elected it can be simply

2716
01:47:57,280 --> 01:48:00,320
ignored by an endpoint that does not is

2717
01:48:00,320 --> 01:48:03,600
not configured to handle this option

2718
01:48:03,600 --> 01:48:06,000
the the enable measurements are

2719
01:48:06,000 --> 01:48:08,000
end-to-end of course between client

2720
01:48:08,000 --> 01:48:09,119
server

2721
01:48:09,119 --> 01:48:10,560
home parts

2722
01:48:10,560 --> 01:48:13,520
uh botup strip and downstream on the

2723
01:48:13,520 --> 01:48:14,719
observer

2724
01:48:14,719 --> 01:48:17,440
and also intra domain because if you are

2725
01:48:17,440 --> 01:48:20,400
more if you have more than on

2726
01:48:20,400 --> 01:48:24,239
one observer that can be the borders of

2727
01:48:24,239 --> 01:48:25,440
a domain

2728
01:48:25,440 --> 01:48:27,440
they can also do the measurement between

2729
01:48:27,440 --> 01:48:30,639
two observers so you can have a sort of

2730
01:48:30,639 --> 01:48:34,159
intra domain on path measurement

2731
01:48:34,159 --> 01:48:36,000
all these measurements are defined in

2732
01:48:36,000 --> 01:48:38,239
the fppm draft so

2733
01:48:38,239 --> 01:48:42,000
are not new let's say for this

2734
01:48:42,080 --> 01:48:44,800
for this option for this environment

2735
01:48:44,800 --> 01:48:46,239
then we have a scenario with

2736
01:48:46,239 --> 01:48:49,440
collaborating or non-collaborating toxic

2737
01:48:49,440 --> 01:48:52,320
in this case

2738
01:48:52,480 --> 01:48:55,440
the the option can be applied

2739
01:48:55,440 --> 01:48:58,159
end-to-end between client and server or

2740
01:48:58,159 --> 01:49:01,199
also between proxies so if clients and

2741
01:49:01,199 --> 01:49:04,239
server are not configured to

2742
01:49:04,239 --> 01:49:06,080
to make the measurement maybe the

2743
01:49:06,080 --> 01:49:08,800
proxies can do and they can

2744
01:49:08,800 --> 01:49:10,400
apply the option

2745
01:49:10,400 --> 01:49:12,320
and in particular in case of

2746
01:49:12,320 --> 01:49:14,719
non-collaborating practicing since this

2747
01:49:14,719 --> 01:49:17,920
option is safe to forward

2748
01:49:17,920 --> 01:49:19,679
it is of course it is safe for

2749
01:49:19,679 --> 01:49:22,960
forwarding by this proxies

2750
01:49:22,960 --> 01:49:26,560
the enabled measurements can be also

2751
01:49:26,560 --> 01:49:28,400
can be different

2752
01:49:28,400 --> 01:49:30,159
depending on

2753
01:49:30,159 --> 01:49:32,880
the case of collaborating proxima or

2754
01:49:32,880 --> 01:49:35,520
non-collaborating proxies

2755
01:49:35,520 --> 01:49:37,520
uh in case of collaborating process of

2756
01:49:37,520 --> 01:49:39,760
course the measurement can be end-to-end

2757
01:49:39,760 --> 01:49:43,040
and on path the intradomain as

2758
01:49:43,040 --> 01:49:45,760
the case of non-proximity endpoints

2759
01:49:45,760 --> 01:49:49,920
while in case of non-collaborating proxy

2760
01:49:50,080 --> 01:49:52,639
they can also be end-to-end and on path

2761
01:49:52,639 --> 01:49:55,520
and intra-domain but cannot be between

2762
01:49:55,520 --> 01:49:59,280
proxies and also the proxy cannot act as

2763
01:49:59,280 --> 01:50:02,159
an unpopped observer

2764
01:50:02,159 --> 01:50:03,199
the

2765
01:50:03,199 --> 01:50:05,440
the final case is the

2766
01:50:05,440 --> 01:50:07,520
application with oscar

2767
01:50:07,520 --> 01:50:10,159
in this case of course if the crop up

2768
01:50:10,159 --> 01:50:13,040
option is sent as an outer option it

2769
01:50:13,040 --> 01:50:15,040
allows bottom to end a non-part

2770
01:50:15,040 --> 01:50:17,360
measurement otherwise only end-to-end

2771
01:50:17,360 --> 01:50:20,080
can be allowed

2772
01:50:20,800 --> 01:50:23,520
yeah final slide so

2773
01:50:23,520 --> 01:50:25,760
yeah this draft as i also mentioned

2774
01:50:25,760 --> 01:50:28,639
before is based on these methodologies

2775
01:50:28,639 --> 01:50:31,599
that are also optional in um in the

2776
01:50:31,599 --> 01:50:34,480
quick the specification and also

2777
01:50:34,480 --> 01:50:35,360
in

2778
01:50:35,360 --> 01:50:40,239
another c that is also applied to ipv6

2779
01:50:40,239 --> 01:50:42,880
so it aims to meet the limited resources

2780
01:50:42,880 --> 01:50:44,800
of constrained environment since the

2781
01:50:44,800 --> 01:50:47,360
mechanisms are quite simple

2782
01:50:47,360 --> 01:50:50,080
so we believe that at some point maybe

2783
01:50:50,080 --> 01:50:50,880
uh

2784
01:50:50,880 --> 01:50:53,679
core working loop can consider to adopt

2785
01:50:53,679 --> 01:50:54,560
this

2786
01:50:54,560 --> 01:50:56,880
this work for performance

2787
01:50:56,880 --> 01:50:58,880
but of course for now we welcome

2788
01:50:58,880 --> 01:51:00,960
questions comments and

2789
01:51:00,960 --> 01:51:04,159
also cooperation on this work

2790
01:51:04,159 --> 01:51:07,400
thank you

2791
01:51:08,159 --> 01:51:09,280
thank you

2792
01:51:09,280 --> 01:51:11,280
unfortunately there is no much time for

2793
01:51:11,280 --> 01:51:12,880
discussion just please pay attention to

2794
01:51:12,880 --> 01:51:15,280
the comments uh in the chat from uh on

2795
01:51:15,280 --> 01:51:17,599
carson and christian

2796
01:51:17,599 --> 01:51:19,920
um yeah i also wanted to add a high

2797
01:51:19,920 --> 01:51:21,440
level comment um

2798
01:51:21,440 --> 01:51:23,440
i was doing the draft and i still have

2799
01:51:23,440 --> 01:51:26,000
quite a harsh time in navigating the the

2800
01:51:26,000 --> 01:51:28,080
many alternatives that are possible to

2801
01:51:28,080 --> 01:51:29,199
use

2802
01:51:29,199 --> 01:51:30,960
the way you can combine them

2803
01:51:30,960 --> 01:51:33,599
and which limitations possibly or

2804
01:51:33,599 --> 01:51:35,280
drawbacks you have depending on which

2805
01:51:35,280 --> 01:51:37,360
combination you go for

2806
01:51:37,360 --> 01:51:38,639
so i think especially the central

2807
01:51:38,639 --> 01:51:40,800
sections of the draft should be yeah

2808
01:51:40,800 --> 01:51:42,080
revised to

2809
01:51:42,080 --> 01:51:43,920
to highlight the limitations of the

2810
01:51:43,920 --> 01:51:45,920
different alternatives presented in a

2811
01:51:45,920 --> 01:51:48,639
very systematic way

2812
01:51:48,639 --> 01:51:51,119
but to further help i plan to send out a

2813
01:51:51,119 --> 01:51:52,800
review

2814
01:51:52,800 --> 01:51:54,639
to the list after the summer break of

2815
01:51:54,639 --> 01:51:57,440
this document where i i will also raise

2816
01:51:57,440 --> 01:51:58,880
these points

2817
01:51:58,880 --> 01:52:01,679
yeah i will try my best consider that

2818
01:52:01,679 --> 01:52:04,400
regarding the limitation

2819
01:52:04,400 --> 01:52:06,719
there is the draft in ippm that i

2820
01:52:06,719 --> 01:52:09,920
reference and in that draft there are a

2821
01:52:09,920 --> 01:52:12,719
lot of description of all the possible

2822
01:52:12,719 --> 01:52:15,119
measurement and the

2823
01:52:15,119 --> 01:52:17,679
and also the limitations so

2824
01:52:17,679 --> 01:52:20,480
maybe i can

2825
01:52:20,480 --> 01:52:23,040
refer add more reference so the reader

2826
01:52:23,040 --> 01:52:23,920
can

2827
01:52:23,920 --> 01:52:26,960
can go to the ippm drop if you want to

2828
01:52:26,960 --> 01:52:28,800
go deep to the

2829
01:52:28,800 --> 01:52:30,880
to limit to understand the limitation

2830
01:52:30,880 --> 01:52:32,719
and the trade-offs of different

2831
01:52:32,719 --> 01:52:34,080
solutions

2832
01:52:34,080 --> 01:52:36,480
i will i will i will improve on that

2833
01:52:36,480 --> 01:52:39,119
thank you for the interview

2834
01:52:39,119 --> 01:52:41,119
okay again i'll come back with a review

2835
01:52:41,119 --> 01:52:43,520
anyway and yeah i encourage folks to

2836
01:52:43,520 --> 01:52:45,360
read the document and also comment on

2837
01:52:45,360 --> 01:52:46,639
the list

2838
01:52:46,639 --> 01:52:48,960
quick question what is the target

2839
01:52:48,960 --> 01:52:52,000
status of this document

2840
01:52:52,000 --> 01:52:54,159
is this going to be a standard or the

2841
01:52:54,159 --> 01:52:55,440
informational document or an

2842
01:52:55,440 --> 01:52:56,800
experimental

2843
01:52:56,800 --> 01:52:59,119
document

2844
01:52:59,119 --> 01:53:00,159
uh

2845
01:53:00,159 --> 01:53:02,560
i guess since yeah for now it is a

2846
01:53:02,560 --> 01:53:05,040
standard because yeah we are asking for

2847
01:53:05,040 --> 01:53:06,960
a new option

2848
01:53:06,960 --> 01:53:09,119
so i guess they

2849
01:53:09,119 --> 01:53:10,719
should be

2850
01:53:10,719 --> 01:53:14,560
standard but if maybe if we want to

2851
01:53:14,560 --> 01:53:16,880
i don't know what is the procedure for

2852
01:53:16,880 --> 01:53:20,400
defining a new option in the car

2853
01:53:20,400 --> 01:53:22,480
but you just register one

2854
01:53:22,480 --> 01:53:25,599
um so this this could be a registration

2855
01:53:25,599 --> 01:53:27,360
that you make

2856
01:53:27,360 --> 01:53:28,400
uh

2857
01:53:28,400 --> 01:53:31,520
we have uh space for for

2858
01:53:31,520 --> 01:53:34,400
um expert review so i'm not saying that

2859
01:53:34,400 --> 01:53:35,920
this is what we should do i'm just

2860
01:53:35,920 --> 01:53:39,199
saying that's the gamut of potential

2861
01:53:39,199 --> 01:53:41,440
outcomes that we have and an

2862
01:53:41,440 --> 01:53:43,119
experimental protocol for instance would

2863
01:53:43,119 --> 01:53:44,320
also be

2864
01:53:44,320 --> 01:53:47,280
um a possible outcome so i think we

2865
01:53:47,280 --> 01:53:49,280
should have a discussion on the

2866
01:53:49,280 --> 01:53:50,400
list

2867
01:53:50,400 --> 01:53:53,040
because for me if you look at the chat

2868
01:53:53,040 --> 01:53:54,719
there's also the question how much of

2869
01:53:54,719 --> 01:53:57,040
this is an interoperability

2870
01:53:57,040 --> 01:53:59,599
requirement and how much is just

2871
01:53:59,599 --> 01:54:02,719
informational content about how you best

2872
01:54:02,719 --> 01:54:04,080
use this

2873
01:54:04,080 --> 01:54:05,679
so let's have that discussion on the

2874
01:54:05,679 --> 01:54:06,800
list

2875
01:54:06,800 --> 01:54:10,880
of course okay okay thank you

2876
01:54:11,040 --> 01:54:13,760
thanks thanks a lot

2877
01:54:13,760 --> 01:54:15,920
so let's move to the next and last item

2878
01:54:15,920 --> 01:54:17,920
christian

2879
01:54:17,920 --> 01:54:20,239
yeah take your time of course it's great

2880
01:54:20,239 --> 01:54:21,599
if you can spare some minutes in the

2881
01:54:21,599 --> 01:54:24,880
interest of the final recap

2882
01:54:27,070 --> 01:54:30,259
[Applause]

2883
01:54:35,040 --> 01:54:37,440
so what i'd like to present here is how

2884
01:54:37,440 --> 01:54:40,400
we could transport co-op or gut

2885
01:54:40,400 --> 01:54:43,119
and i will digress uh at the end a bit

2886
01:54:43,119 --> 01:54:45,199
into the transport indication draft

2887
01:54:45,199 --> 01:54:46,960
which is not really on the agenda for

2888
01:54:46,960 --> 01:54:48,159
today but

2889
01:54:48,159 --> 01:54:50,159
it is something that that interacts a

2890
01:54:50,159 --> 01:54:53,920
lot uh with this document

2891
01:54:54,639 --> 01:54:56,159
now um

2892
01:54:56,159 --> 01:54:57,040
i

2893
01:54:57,040 --> 01:54:58,320
i've um

2894
01:54:58,320 --> 01:55:00,960
the original design for transport for

2895
01:55:00,960 --> 01:55:04,080
co-op or get which is co-op over the get

2896
01:55:04,080 --> 01:55:05,679
protocol that is part of bluetooth low

2897
01:55:05,679 --> 01:55:07,679
energy so basically it's co-op over

2898
01:55:07,679 --> 01:55:09,440
political low energy

2899
01:55:09,440 --> 01:55:12,719
um comes from 2020 uh when also an

2900
01:55:12,719 --> 01:55:14,320
itf-109

2901
01:55:14,320 --> 01:55:15,679
i've

2902
01:55:15,679 --> 01:55:17,599
i've described this briefly to the

2903
01:55:17,599 --> 01:55:19,679
working group and proposed it for the

2904
01:55:19,679 --> 01:55:21,599
experimental track

2905
01:55:21,599 --> 01:55:22,679
in the course of

2906
01:55:22,679 --> 01:55:26,560
2021 not 2001

2907
01:55:26,880 --> 01:55:30,239
i've worked more on transport indication

2908
01:55:30,239 --> 01:55:33,520
which provides a lot of background for

2909
01:55:33,520 --> 01:55:35,920
co over gut because cover for cat would

2910
01:55:35,920 --> 01:55:38,239
register a new co-op scheme

2911
01:55:38,239 --> 01:55:40,159
and there is the

2912
01:55:40,159 --> 01:55:40,490
um

2913
01:55:40,490 --> 01:55:43,040
[Music]

2914
01:55:43,040 --> 01:55:45,599
there is this this open item of

2915
01:55:45,599 --> 01:55:47,840
finishing that

2916
01:55:47,840 --> 01:55:50,560
making something usable

2917
01:55:50,560 --> 01:55:53,280
with respect to protocol negotiation

2918
01:55:53,280 --> 01:55:55,440
before we register any additional

2919
01:55:55,440 --> 01:55:57,199
schemes

2920
01:55:57,199 --> 01:55:58,239
now this

2921
01:55:58,239 --> 01:56:01,760
in early 2022 um some industry interest

2922
01:56:01,760 --> 01:56:04,239
has sparked up on on that topic and

2923
01:56:04,239 --> 01:56:07,040
there are now uh people from both assa

2924
01:56:07,040 --> 01:56:09,920
abloy and edf that are interested in

2925
01:56:09,920 --> 01:56:12,320
furthering the specification using it uh

2926
01:56:12,320 --> 01:56:13,760
for example

2927
01:56:13,760 --> 01:56:16,159
in combination with the ace framework

2928
01:56:16,159 --> 01:56:20,000
so um they and i have started um

2929
01:56:20,000 --> 01:56:21,840
filling uh filling out some gaps in the

2930
01:56:21,840 --> 01:56:24,560
specification uh which i'll come to in

2931
01:56:24,560 --> 01:56:26,639
the next slide and here i'm giving the

2932
01:56:26,639 --> 01:56:29,199
status update of this on this

2933
01:56:29,199 --> 01:56:31,040
so what is um

2934
01:56:31,040 --> 01:56:33,119
what has happened in the document

2935
01:56:33,119 --> 01:56:34,960
already in the version that i've

2936
01:56:34,960 --> 01:56:36,880
uploaded before the cutoff

2937
01:56:36,880 --> 01:56:39,280
is that it is now more explicit in

2938
01:56:39,280 --> 01:56:41,360
differentiating this

2939
01:56:41,360 --> 01:56:43,920
from other from from alternatives that

2940
01:56:43,920 --> 01:56:47,199
are around in particular um pick um

2941
01:56:47,199 --> 01:56:50,080
choosing to go directly over gut

2942
01:56:50,080 --> 01:56:53,840
versus uh choosing to go over the ipsp

2943
01:56:53,840 --> 01:56:55,040
profile

2944
01:56:55,040 --> 01:56:57,760
on ble which exists and is established

2945
01:56:57,760 --> 01:57:01,440
um is something that is

2946
01:57:01,440 --> 01:57:04,480
um limited to a particular choice or a

2947
01:57:04,480 --> 01:57:06,960
particular to that is shaped by

2948
01:57:06,960 --> 01:57:08,560
limitations of particular environments

2949
01:57:08,560 --> 01:57:10,719
so when you're in when you're operating

2950
01:57:10,719 --> 01:57:13,360
a cell phone you do not have the option

2951
01:57:13,360 --> 01:57:16,080
uh to even reach the com the necessary

2952
01:57:16,080 --> 01:57:18,239
components in the bluetooth stack to

2953
01:57:18,239 --> 01:57:22,159
implement uh six lupon over ble or ipsp

2954
01:57:22,159 --> 01:57:24,960
you're limited to basically taking gut

2955
01:57:24,960 --> 01:57:27,199
everything else is not as easily

2956
01:57:27,199 --> 01:57:29,199
accessible as as get

2957
01:57:29,199 --> 01:57:30,000
from

2958
01:57:30,000 --> 01:57:31,119
um

2959
01:57:31,119 --> 01:57:33,119
from an application implementation point

2960
01:57:33,119 --> 01:57:34,000
of view

2961
01:57:34,000 --> 01:57:36,080
there is one alternative that is also

2962
01:57:36,080 --> 01:57:37,679
being considered that is the golden gate

2963
01:57:37,679 --> 01:57:39,360
approach that fitbit presented some time

2964
01:57:39,360 --> 01:57:41,920
ago which is taking the accessible

2965
01:57:41,920 --> 01:57:44,400
components up to get and then building

2966
01:57:44,400 --> 01:57:46,960
an ip transport on top of this

2967
01:57:46,960 --> 01:57:48,880
but given that in practice this would

2968
01:57:48,880 --> 01:57:50,960
mean that applications are starting to

2969
01:57:50,960 --> 01:57:53,840
implement an ip and a udp stack

2970
01:57:53,840 --> 01:57:55,599
and given that this is introducing a lot

2971
01:57:55,599 --> 01:57:57,440
of overhead i think it is not the right

2972
01:57:57,440 --> 01:57:59,520
approach for for this partic for the

2973
01:57:59,520 --> 01:58:01,440
particular use cases

2974
01:58:01,440 --> 01:58:03,280
that we are looking at here that is

2975
01:58:03,280 --> 01:58:06,159
getting from your end user device into a

2976
01:58:06,159 --> 01:58:07,920
cob-enabled device

2977
01:58:07,920 --> 01:58:10,000
even though they are not on the same

2978
01:58:10,000 --> 01:58:12,000
kind of even though they don't have a

2979
01:58:12,000 --> 01:58:13,840
routed network between them

2980
01:58:13,840 --> 01:58:16,960
and even though you can't just join this

2981
01:58:16,960 --> 01:58:18,480
yearly network

2982
01:58:18,480 --> 01:58:21,839
from the from the phone

2983
01:58:23,040 --> 01:58:25,040
things that are happening

2984
01:58:25,040 --> 01:58:27,360
as part of uh that are ongoing and that

2985
01:58:27,360 --> 01:58:29,599
are not part of the document yet

2986
01:58:29,599 --> 01:58:32,000
are about fixing limitations so the

2987
01:58:32,000 --> 01:58:33,920
original draft was intentionally very

2988
01:58:33,920 --> 01:58:36,320
limited um there were no concurrent

2989
01:58:36,320 --> 01:58:38,080
requests there was only one role

2990
01:58:38,080 --> 01:58:40,080
described of what was the servant who

2991
01:58:40,080 --> 01:58:41,520
was declined

2992
01:58:41,520 --> 01:58:43,040
there were not even tokens in there

2993
01:58:43,040 --> 01:58:45,760
because the original idea was that

2994
01:58:45,760 --> 01:58:47,280
there are different characteristics in

2995
01:58:47,280 --> 01:58:48,480
in

2996
01:58:48,480 --> 01:58:51,040
in get so maybe you these could be

2997
01:58:51,040 --> 01:58:53,920
exploited to not even send a token at

2998
01:58:53,920 --> 01:58:54,719
all

2999
01:58:54,719 --> 01:58:56,639
around

3000
01:58:56,639 --> 01:58:58,320
some of these um

3001
01:58:58,320 --> 01:59:01,280
turned out to not work exactly that way

3002
01:59:01,280 --> 01:59:03,440
so these are being reshaped now some of

3003
01:59:03,440 --> 01:59:05,599
the assumptions didn't hold

3004
01:59:05,599 --> 01:59:08,400
and some changes are just necessary to

3005
01:59:08,400 --> 01:59:11,840
for example get bi-directional transport

3006
01:59:11,840 --> 01:59:14,320
the reason we can't just take plain

3007
01:59:14,320 --> 01:59:17,119
cobalt gdp and pack it into get is that

3008
01:59:17,119 --> 01:59:18,880
it has vastly different properties from

3009
01:59:18,880 --> 01:59:20,080
the

3010
01:59:20,080 --> 01:59:21,040
from the

3011
01:59:21,040 --> 01:59:24,320
udp layer that is underlying code so

3012
01:59:24,320 --> 01:59:25,679
compared to that for example we have

3013
01:59:25,679 --> 01:59:27,679
complete ordering

3014
01:59:27,679 --> 01:59:30,080
reads and writes are never reordered by

3015
01:59:30,080 --> 01:59:31,920
the network

3016
01:59:31,920 --> 01:59:34,000
but then again the reliability this

3017
01:59:34,000 --> 01:59:36,480
provides is highly asymmetric so this

3018
01:59:36,480 --> 01:59:37,440
needs

3019
01:59:37,440 --> 01:59:39,440
this needs a few changes but i won't go

3020
01:59:39,440 --> 01:59:41,119
into details of those changes because

3021
01:59:41,119 --> 01:59:43,679
they are essentially something that um

3022
01:59:43,679 --> 01:59:45,520
that is being hashed out with people

3023
01:59:45,520 --> 01:59:47,440
that are experts in

3024
01:59:47,440 --> 01:59:49,119
budget low energy

3025
01:59:49,119 --> 01:59:51,440
um and outside of the scope for

3026
01:59:51,440 --> 01:59:53,280
of this working group's expertise what

3027
01:59:53,280 --> 01:59:55,440
is very much inside the scope

3028
01:59:55,440 --> 01:59:58,560
is uh speak is at how things would be

3029
01:59:58,560 --> 02:00:00,080
addressed so the

3030
02:00:00,080 --> 02:00:02,320
natural choice here is to have a new

3031
02:00:02,320 --> 02:00:03,280
scheme

3032
02:00:03,280 --> 02:00:06,159
and put bluetooth mac addresses in there

3033
02:00:06,159 --> 02:00:08,000
um the hard thing is that we don't

3034
02:00:08,000 --> 02:00:09,760
always have these mac addresses visible

3035
02:00:09,760 --> 02:00:10,639
at all

3036
02:00:10,639 --> 02:00:12,639
for example because different platforms

3037
02:00:12,639 --> 02:00:15,520
has different takes on what it means to

3038
02:00:15,520 --> 02:00:18,800
not uh to preserve the user's privacy

3039
02:00:18,800 --> 02:00:21,440
so in essence we are down to

3040
02:00:21,440 --> 02:00:22,800
the platform will provide some

3041
02:00:22,800 --> 02:00:24,080
identifier

3042
02:00:24,080 --> 02:00:26,080
and that identifier might only be

3043
02:00:26,080 --> 02:00:29,199
meaningful to a partic um

3044
02:00:29,199 --> 02:00:31,520
to on that particular host and while

3045
02:00:31,520 --> 02:00:33,040
this sounds strange for your eye it's

3046
02:00:33,040 --> 02:00:34,719
not completely unheard of because we are

3047
02:00:34,719 --> 02:00:36,719
in the very same situation whenever we

3048
02:00:36,719 --> 02:00:38,560
have linked local addresses

3049
02:00:38,560 --> 02:00:41,440
um their uri form also also only makes

3050
02:00:41,440 --> 02:00:44,080
sense on that particular host and is not

3051
02:00:44,080 --> 02:00:46,719
usable across the network

3052
02:00:46,719 --> 02:00:48,960
but the bigger question this sparks is

3053
02:00:48,960 --> 02:00:51,599
when do we actually need those addresses

3054
02:00:51,599 --> 02:00:54,239
because sure if we had a mac address we

3055
02:00:54,239 --> 02:00:55,440
might um

3056
02:00:55,440 --> 02:00:57,599
try to get some

3057
02:00:57,599 --> 02:01:01,040
routing via proxies in there but that's

3058
02:01:01,040 --> 02:01:02,880
not what typically happens what

3059
02:01:02,880 --> 02:01:05,199
typically happens are two scenarios one

3060
02:01:05,199 --> 02:01:07,199
is that the device

3061
02:01:07,199 --> 02:01:09,840
is sending a request out through

3062
02:01:09,840 --> 02:01:10,719
the

3063
02:01:10,719 --> 02:01:13,679
typical case the the end user's phone up

3064
02:01:13,679 --> 02:01:15,920
to some service and in that case the

3065
02:01:15,920 --> 02:01:18,320
phone acts as a proxy and the request

3066
02:01:18,320 --> 02:01:21,040
goes uses forward proxying to some

3067
02:01:21,040 --> 02:01:23,440
address that is not even core plus bl uh

3068
02:01:23,440 --> 02:01:25,840
core plus gat but something completely

3069
02:01:25,840 --> 02:01:27,840
different like code plus tcp

3070
02:01:27,840 --> 02:01:31,040
and translated by the proxy on the phone

3071
02:01:31,040 --> 02:01:32,480
and the

3072
02:01:32,480 --> 02:01:34,800
address of the device never gets into

3073
02:01:34,800 --> 02:01:37,040
the whole game and the other scenario

3074
02:01:37,040 --> 02:01:39,520
that we often see is that the device

3075
02:01:39,520 --> 02:01:42,320
registers itself at some service that is

3076
02:01:42,320 --> 02:01:44,320
like operates like a resource directory

3077
02:01:44,320 --> 02:01:45,760
for example in lightweight m2m this is

3078
02:01:45,760 --> 02:01:47,119
what happens

3079
02:01:47,119 --> 02:01:49,679
and only when you start thinking about

3080
02:01:49,679 --> 02:01:52,880
more niche use cases like

3081
02:01:52,880 --> 02:01:55,599
after having registered still doing p2p

3082
02:01:55,599 --> 02:01:58,800
contact then you start to think about

3083
02:01:58,800 --> 02:02:02,480
what scheme can be used here

3084
02:02:02,480 --> 02:02:04,880
i think that this um these

3085
02:02:04,880 --> 02:02:07,440
considerations for what addresses we can

3086
02:02:07,440 --> 02:02:09,520
use for the

3087
02:02:09,520 --> 02:02:11,199
um

3088
02:02:11,199 --> 02:02:12,719
for for

3089
02:02:12,719 --> 02:02:14,960
and when we actually need them should

3090
02:02:14,960 --> 02:02:16,639
shape the direction which transport

3091
02:02:16,639 --> 02:02:20,000
indication is going that is

3092
02:02:20,000 --> 02:02:21,440
that nodes

3093
02:02:21,440 --> 02:02:23,280
whose local addresses are not

3094
02:02:23,280 --> 02:02:25,679
particularly meaningful might not only

3095
02:02:25,679 --> 02:02:27,040
want to

3096
02:02:27,040 --> 02:02:28,800
use a particular endpoint identifier

3097
02:02:28,800 --> 02:02:30,800
when registering at a resource directory

3098
02:02:30,800 --> 02:02:32,880
but start using

3099
02:02:32,880 --> 02:02:35,119
whatever their a more semantic

3100
02:02:35,119 --> 02:02:37,520
identifier is in the first place and

3101
02:02:37,520 --> 02:02:39,360
just of proxying through these and

3102
02:02:39,360 --> 02:02:41,199
transport indication is document that

3103
02:02:41,199 --> 02:02:43,119
provides all the building blocks to make

3104
02:02:43,119 --> 02:02:44,080
this

3105
02:02:44,080 --> 02:02:45,280
um

3106
02:02:45,280 --> 02:02:49,760
to make this um this practically usable

3107
02:02:49,760 --> 02:02:51,840
but i think this

3108
02:02:51,840 --> 02:02:53,040
should be

3109
02:02:53,040 --> 02:02:56,800
not only part of the result of of me

3110
02:02:56,800 --> 02:02:59,360
applying the particular problem but the

3111
02:02:59,360 --> 02:03:01,760
particular solutions to that problem but

3112
02:03:01,760 --> 02:03:03,520
part of a larger process in which we

3113
02:03:03,520 --> 02:03:06,400
re-evaluate how we do addressing in a

3114
02:03:06,400 --> 02:03:08,320
non-traditional setup thanks carson

3115
02:03:08,320 --> 02:03:11,199
that's a great keyword here and i think

3116
02:03:11,199 --> 02:03:13,119
it also highlights out

3117
02:03:13,119 --> 02:03:14,960
highlights the the troubles this is

3118
02:03:14,960 --> 02:03:17,199
having because this is not how we've

3119
02:03:17,199 --> 02:03:19,520
been doing things before

3120
02:03:19,520 --> 02:03:22,560
um but then again maybe we just hit what

3121
02:03:22,560 --> 02:03:23,760
we are doing

3122
02:03:23,760 --> 02:03:25,920
in things like approximate resource

3123
02:03:25,920 --> 02:03:28,480
directory

3124
02:03:28,480 --> 02:03:31,119
going forward with cope of agat

3125
02:03:31,119 --> 02:03:33,360
i'll be

3126
02:03:33,360 --> 02:03:35,920
working on this on the on the details of

3127
02:03:35,920 --> 02:03:37,920
how is this transported over

3128
02:03:37,920 --> 02:03:40,400
over over the cat side

3129
02:03:40,400 --> 02:03:41,440
um

3130
02:03:41,440 --> 02:03:43,840
but i'll need input from this working

3131
02:03:43,840 --> 02:03:47,119
group as but um as to how this would

3132
02:03:47,119 --> 02:03:49,280
interact with addressing

3133
02:03:49,280 --> 02:03:52,480
um also to not only to for this document

3134
02:03:52,480 --> 02:03:54,719
but also to further transport indication

3135
02:03:54,719 --> 02:03:56,800
and last but not least um

3136
02:03:56,800 --> 02:03:57,920
this

3137
02:03:57,920 --> 02:04:00,079
might be a candidate for a standard

3138
02:04:00,079 --> 02:04:02,719
track document now given the way uh

3139
02:04:02,719 --> 02:04:05,119
people want to use it

3140
02:04:05,119 --> 02:04:07,440
and for and this too means that we

3141
02:04:07,440 --> 02:04:09,760
should have more of the discussion on

3142
02:04:09,760 --> 02:04:12,159
this here and not just

3143
02:04:12,159 --> 02:04:15,360
um working on this document alone

3144
02:04:15,360 --> 02:04:17,760
thanks comments questions

3145
02:04:17,760 --> 02:04:19,440
i think we're a bit over time but if we

3146
02:04:19,440 --> 02:04:21,119
can go five minutes over time there

3147
02:04:21,119 --> 02:04:25,480
might still be room for a question

3148
02:04:25,679 --> 02:04:27,199
and you're probably going to close the

3149
02:04:27,199 --> 02:04:29,280
room in a few minutes

3150
02:04:29,280 --> 02:04:30,079
less

3151
02:04:30,079 --> 02:04:32,559
cars then

3152
02:04:32,639 --> 02:04:36,079
yeah i just wanted to to say a plus one

3153
02:04:36,079 --> 02:04:39,079
but i also wanted to create a local

3154
02:04:39,079 --> 02:04:40,800
discontinuity in the space-time

3155
02:04:40,800 --> 02:04:44,719
continuum so we can continue talking for

3156
02:04:44,719 --> 02:04:46,000
a couple more

3157
02:04:46,000 --> 02:04:48,079
uh minutes uh

3158
02:04:48,079 --> 02:04:50,800
so a few people are have to go that's

3159
02:04:50,800 --> 02:04:53,119
unfortunate but

3160
02:04:53,119 --> 02:04:56,079
yeah so um i i use this this name

3161
02:04:56,079 --> 02:04:58,159
non-traditional addresses here just to

3162
02:04:58,159 --> 02:05:00,960
point out that this may actually be the

3163
02:05:00,960 --> 02:05:02,159
interesting

3164
02:05:02,159 --> 02:05:03,920
uh question

3165
02:05:03,920 --> 02:05:05,440
uh how do we

3166
02:05:05,440 --> 02:05:08,000
work in environment so we don't where we

3167
02:05:08,000 --> 02:05:09,679
cannot make the same

3168
02:05:09,679 --> 02:05:12,159
assumptions about addresses of course

3169
02:05:12,159 --> 02:05:14,800
nets already provide one such

3170
02:05:14,800 --> 02:05:17,280
environment but we pretty much know how

3171
02:05:17,280 --> 02:05:20,159
to manage those but these addresses are

3172
02:05:20,159 --> 02:05:21,199
weird

3173
02:05:21,199 --> 02:05:23,520
uh and and we want to understand how to

3174
02:05:23,520 --> 02:05:26,320
use them in places like like directories

3175
02:05:26,320 --> 02:05:27,920
and proxies

3176
02:05:27,920 --> 02:05:30,960
um and so on

3177
02:05:30,960 --> 02:05:34,239
so yeah let's let's do that

3178
02:05:34,239 --> 02:05:36,079
thank you

3179
02:05:36,079 --> 02:05:37,679
and as mentioned in the chat let's bring

3180
02:05:37,679 --> 02:05:40,800
this to an entry meeting

3181
02:05:42,800 --> 02:05:45,360
until then it's good if people read the

3182
02:05:45,360 --> 02:05:46,719
documents and comment on the list of

3183
02:05:46,719 --> 02:05:47,599
course

3184
02:05:47,599 --> 02:05:50,320
we need that too

3185
02:05:50,639 --> 02:05:53,360
okay we are at the aob five minutes late

3186
02:05:53,360 --> 02:05:54,400
uh

3187
02:05:54,400 --> 02:05:56,480
carson you still want to very quickly

3188
02:05:56,480 --> 02:05:58,960
mention that item you had

3189
02:05:58,960 --> 02:06:02,079
yeah so i looked at the the core group

3190
02:06:02,079 --> 02:06:03,520
com proxy

3191
02:06:03,520 --> 02:06:04,400
thing

3192
02:06:04,400 --> 02:06:07,760
and actually i had it on my to-do list

3193
02:06:07,760 --> 02:06:11,280
in line 175

3194
02:06:11,280 --> 02:06:13,440
and i definitely will get to this but

3195
02:06:13,440 --> 02:06:15,599
maybe not next week

3196
02:06:15,599 --> 02:06:18,960
um so yes the the idea is that that

3197
02:06:18,960 --> 02:06:22,239
jaime and i have to come to an opinion

3198
02:06:22,239 --> 02:06:25,040
on on what we're going to do there next

3199
02:06:25,040 --> 02:06:27,840
but definitely this is a document that

3200
02:06:27,840 --> 02:06:30,480
merits the attention

3201
02:06:30,480 --> 02:06:32,880
so expect to hear from the chairs about

3202
02:06:32,880 --> 02:06:34,480
that soon

3203
02:06:34,480 --> 02:06:38,239
um the the corp s plus jp y

3204
02:06:38,239 --> 02:06:40,639
thing i wanted to mention

3205
02:06:40,639 --> 02:06:43,360
um in the anime meeting it turned out

3206
02:06:43,360 --> 02:06:46,159
they want to use resource discovery

3207
02:06:46,159 --> 02:06:48,239
for a resource

3208
02:06:48,239 --> 02:06:52,079
that is not your grandfather's core s

3209
02:06:52,079 --> 02:06:54,800
resource but they have a special

3210
02:06:54,800 --> 02:06:57,040
tunneling protocol

3211
02:06:57,040 --> 02:06:59,040
installed there

3212
02:06:59,040 --> 02:07:02,639
and our knee jerk reaction to to

3213
02:07:02,639 --> 02:07:05,280
changing anything in the transport uh of

3214
02:07:05,280 --> 02:07:08,560
course is to add a plus transport

3215
02:07:08,560 --> 02:07:11,520
uh to the ui scheme and we should check

3216
02:07:11,520 --> 02:07:14,159
whether that is actually what we

3217
02:07:14,159 --> 02:07:16,480
want to to

3218
02:07:16,480 --> 02:07:17,599
suggest

3219
02:07:17,599 --> 02:07:19,679
to the animal working group to to handle

3220
02:07:19,679 --> 02:07:23,280
this because right now the the

3221
02:07:23,280 --> 02:07:25,119
resource type registration they are

3222
02:07:25,119 --> 02:07:27,040
making is a little bit icky because they

3223
02:07:27,040 --> 02:07:29,280
are advertising a resource that doesn't

3224
02:07:29,280 --> 02:07:31,599
exist

3225
02:07:31,599 --> 02:07:33,199
and marco you wanted to say something

3226
02:07:33,199 --> 02:07:35,440
about the interim schedule

3227
02:07:35,440 --> 02:07:37,679
right the very last bit we still have to

3228
02:07:37,679 --> 02:07:40,400
confirm with the seaboard shares but we

3229
02:07:40,400 --> 02:07:42,800
plan to resume with interim meetings for

3230
02:07:42,800 --> 02:07:43,760
core

3231
02:07:43,760 --> 02:07:46,719
at the end of august on august 31

3232
02:07:46,719 --> 02:07:48,079
31

3233
02:07:48,079 --> 02:07:51,960
we'll confirm it to the list

3234
02:07:55,360 --> 02:07:57,599
and that's it any very final comments

3235
02:07:57,599 --> 02:08:00,480
remarks anyone

3236
02:08:01,520 --> 02:08:03,599
and then thank you for your time and

3237
02:08:03,599 --> 02:08:05,760
extra time keep up the good work enjoy

3238
02:08:05,760 --> 02:08:07,520
the rest of the week talk to you at the

3239
02:08:07,520 --> 02:08:08,639
internet

3240
02:08:08,639 --> 02:08:10,400
thank you all

3241
02:08:10,400 --> 02:08:12,960
thank you

3242
02:08:12,960 --> 02:08:15,960
bye

3243
02:08:40,159 --> 02:08:43,879
it's almost like that

