1
00:00:05,839 --> 00:00:07,759
be with myself

2
00:00:07,759 --> 00:00:10,240
okay thank you

3
00:00:10,240 --> 00:00:12,240
okay folks

4
00:00:12,240 --> 00:00:14,240
it's ten o'clock

5
00:00:14,240 --> 00:00:15,920
i see there are people standing up in

6
00:00:15,920 --> 00:00:16,960
the back

7
00:00:16,960 --> 00:00:18,560
if you all please sit down and we can

8
00:00:18,560 --> 00:00:21,799
get started

9
00:00:34,399 --> 00:00:36,559
okay thank you all if someone in the

10
00:00:36,559 --> 00:00:38,559
back could close the door

11
00:00:38,559 --> 00:00:40,320
that would cut down on the noise from

12
00:00:40,320 --> 00:00:43,879
the hallway please

13
00:00:46,559 --> 00:00:49,360
okay very good so i'm andy malice i'm

14
00:00:49,360 --> 00:00:52,320
chairing this session which is the joint

15
00:00:52,320 --> 00:00:56,320
pals mpls and detonate session

16
00:00:56,320 --> 00:00:57,760
and i'll be talking more about what

17
00:00:57,760 --> 00:01:00,960
we're doing here i'm being ably assisted

18
00:01:00,960 --> 00:01:04,400
today by tariq saad who's sitting up at

19
00:01:04,400 --> 00:01:07,439
the front table uh he he's able to take

20
00:01:07,439 --> 00:01:10,000
over if anything bad happens to my

21
00:01:10,000 --> 00:01:14,080
internet connection here at home um also

22
00:01:14,080 --> 00:01:17,439
i'm assisted by dave cinecrop dave's is

23
00:01:17,439 --> 00:01:20,720
taking the the minutes for today and in

24
00:01:20,720 --> 00:01:23,280
fact if if any of you would like to help

25
00:01:23,280 --> 00:01:24,840
take minutes that would be greatly

26
00:01:24,840 --> 00:01:27,119
appreciated all you have to do is go to

27
00:01:27,119 --> 00:01:30,400
the ietf agenda page and in the line for

28
00:01:30,400 --> 00:01:33,600
pals one of the icons in the right says

29
00:01:33,600 --> 00:01:36,000
notes for note taker if you just click

30
00:01:36,000 --> 00:01:37,920
on that that brings up the note taking

31
00:01:37,920 --> 00:01:40,400
tool and you'll notice that dave has

32
00:01:40,400 --> 00:01:42,159
already populated that with today's

33
00:01:42,159 --> 00:01:45,040
agenda and he's just adding notes after

34
00:01:45,040 --> 00:01:47,920
each item in the agenda as they as they

35
00:01:47,920 --> 00:01:49,600
come up in the meeting and you're all

36
00:01:49,600 --> 00:01:53,200
free to take notes there as well it's a

37
00:01:53,200 --> 00:01:55,759
cooperative effort and i think and i

38
00:01:55,759 --> 00:01:59,759
think everybody who helps on that

39
00:02:00,240 --> 00:02:01,840
oh yes and of course this session is

40
00:02:01,840 --> 00:02:05,360
being recorded um as are all ietf

41
00:02:05,360 --> 00:02:07,680
sessions i'm sure you've all seen the

42
00:02:07,680 --> 00:02:09,520
note well already so i don't have to

43
00:02:09,520 --> 00:02:11,680
spend very much time on it it's the

44
00:02:11,680 --> 00:02:13,840
second day of the ietf and it hasn't

45
00:02:13,840 --> 00:02:16,000
changed since the previous ietf

46
00:02:16,000 --> 00:02:18,239
meetings either

47
00:02:18,239 --> 00:02:21,040
here are some meeting tips um just

48
00:02:21,040 --> 00:02:23,760
because this is a hybrid meeting so we

49
00:02:23,760 --> 00:02:25,599
have some notes here for the in-person

50
00:02:25,599 --> 00:02:27,920
participants for those of you who are

51
00:02:27,920 --> 00:02:30,319
sitting in the room uh please make sure

52
00:02:30,319 --> 00:02:32,959
that you sign into this session using

53
00:02:32,959 --> 00:02:35,280
meet echo light and if you take a look

54
00:02:35,280 --> 00:02:38,480
at the little diagram on the slide it

55
00:02:38,480 --> 00:02:40,319
shows you the icons that are to the

56
00:02:40,319 --> 00:02:42,560
right of the pals session what you want

57
00:02:42,560 --> 00:02:45,280
to do is you want to click on the meet

58
00:02:45,280 --> 00:02:47,440
echo light which is an icon that looks

59
00:02:47,440 --> 00:02:49,440
like a phone

60
00:02:49,440 --> 00:02:52,400
um and that will bring you up and you

61
00:02:52,400 --> 00:02:55,280
need to use that in order to be able to

62
00:02:55,280 --> 00:02:57,120
get into the queue you will not be

63
00:02:57,120 --> 00:02:59,360
recognized if you just stand at the

64
00:02:59,360 --> 00:03:01,599
microphone you actually have to get into

65
00:03:01,599 --> 00:03:03,519
the queue so i can see and manage the

66
00:03:03,519 --> 00:03:05,840
queue from here at home

67
00:03:05,840 --> 00:03:08,319
and i would also like to note that i

68
00:03:08,319 --> 00:03:10,640
have the ability to give you the if

69
00:03:10,640 --> 00:03:12,800
you're a speaker i have the ability to

70
00:03:12,800 --> 00:03:15,200
give you control of the slides and you

71
00:03:15,200 --> 00:03:17,920
can use that application to take control

72
00:03:17,920 --> 00:03:19,920
the slides to move them back and forth

73
00:03:19,920 --> 00:03:22,400
so if you're speaking and you would like

74
00:03:22,400 --> 00:03:25,280
control just ask and i'll be able to

75
00:03:25,280 --> 00:03:27,120
hand off

76
00:03:27,120 --> 00:03:29,760
control to you

77
00:03:29,760 --> 00:03:32,480
also i would like to point out that you

78
00:03:32,480 --> 00:03:34,799
that for those you who are in the in the

79
00:03:34,799 --> 00:03:37,599
room please keep your mask on in fact

80
00:03:37,599 --> 00:03:40,720
not just please it's required that you

81
00:03:40,720 --> 00:03:42,879
keep your masks on and it says on the

82
00:03:42,879 --> 00:03:45,120
slide unless actively speaking well i've

83
00:03:45,120 --> 00:03:47,360
been told that with the microphones that

84
00:03:47,360 --> 00:03:49,360
we have here at the hotel they actually

85
00:03:49,360 --> 00:03:51,280
pick you up very well even if you're

86
00:03:51,280 --> 00:03:52,400
masked

87
00:03:52,400 --> 00:03:53,840
as long as you speak right into the

88
00:03:53,840 --> 00:03:55,599
microphone so you'll so you'll probably

89
00:03:55,599 --> 00:03:59,280
find that you do not need to unmask

90
00:03:59,280 --> 00:04:01,519
when you speak at the mic as well for

91
00:04:01,519 --> 00:04:03,920
those of you who are at home like i am

92
00:04:03,920 --> 00:04:05,680
please make sure your audio and video

93
00:04:05,680 --> 00:04:07,760
are off unless you are actively cheering

94
00:04:07,760 --> 00:04:11,519
as i am or you're doing a presentation

95
00:04:11,519 --> 00:04:14,400
um and please use a headset if you have

96
00:04:14,400 --> 00:04:17,918
it although um i did a mic check with

97
00:04:17,918 --> 00:04:19,358
christian earlier i was able to hear

98
00:04:19,358 --> 00:04:22,000
christian just fine so share good shape

99
00:04:22,000 --> 00:04:24,320
christian

100
00:04:25,199 --> 00:04:26,880
next so the purpose of this meeting this

101
00:04:26,880 --> 00:04:30,080
is a joint session for the pals mpls and

102
00:04:30,080 --> 00:04:32,560
networking groups it's focused on the

103
00:04:32,560 --> 00:04:35,440
work of the joint open design team uh

104
00:04:35,440 --> 00:04:37,919
for the mpls network action indicators

105
00:04:37,919 --> 00:04:41,040
and mpls and slurry data this is a work

106
00:04:41,040 --> 00:04:43,680
that's been going on for just about a

107
00:04:43,680 --> 00:04:46,720
year now i think and uh and it's been

108
00:04:46,720 --> 00:04:51,360
extremely active and uh while all of the

109
00:04:51,360 --> 00:04:53,680
active activity happens

110
00:04:53,680 --> 00:04:56,800
by email on the mpls email list

111
00:04:56,800 --> 00:04:59,600
we've been doing joint sessions for pals

112
00:04:59,600 --> 00:05:02,479
mpls and detonate while we're actively

113
00:05:02,479 --> 00:05:04,880
actually at the ietf meetings so the

114
00:05:04,880 --> 00:05:07,759
overview of today's agenda is we have

115
00:05:07,759 --> 00:05:10,160
one item actually for the pals working

116
00:05:10,160 --> 00:05:12,080
group because the you know pals this is

117
00:05:12,080 --> 00:05:14,160
the only meeting for pals and we have

118
00:05:14,160 --> 00:05:16,800
one item of work for pals which is

119
00:05:16,800 --> 00:05:19,759
private line emulation and signaling um

120
00:05:19,759 --> 00:05:21,680
then we're going to have tariq give us

121
00:05:21,680 --> 00:05:24,000
an open design team report to give us

122
00:05:24,000 --> 00:05:25,840
the status of where the work currently

123
00:05:25,840 --> 00:05:28,000
stands in the open design team then

124
00:05:28,000 --> 00:05:29,280
we're going to have

125
00:05:29,280 --> 00:05:31,919
a bunch of drafts for the op for the

126
00:05:31,919 --> 00:05:35,600
joint design team on mnia and mad

127
00:05:35,600 --> 00:05:38,800
requirements m a headers uh the post

128
00:05:38,800 --> 00:05:40,960
stack header extension and special

129
00:05:40,960 --> 00:05:43,520
purpose label for forwarding actions uh

130
00:05:43,520 --> 00:05:45,520
note that the open design teamwork is

131
00:05:45,520 --> 00:05:48,639
continuing it is not completed and open

132
00:05:48,639 --> 00:05:52,800
calls will continue post ihtf 114

133
00:05:52,800 --> 00:05:55,280
all those calls are announced on the

134
00:05:55,280 --> 00:05:59,039
on the mpls email list

135
00:05:59,840 --> 00:06:01,360
so if you want to participate you really

136
00:06:01,360 --> 00:06:04,160
need to be on the mpls email list so

137
00:06:04,160 --> 00:06:06,479
this is the more detailed agenda

138
00:06:06,479 --> 00:06:08,880
um actually um i'm not going to go into

139
00:06:08,880 --> 00:06:11,360
this in great detail because it's

140
00:06:11,360 --> 00:06:14,880
available online it's also available in

141
00:06:14,880 --> 00:06:16,960
the note taker tool so if you just open

142
00:06:16,960 --> 00:06:18,960
up to the note taker page you'll be able

143
00:06:18,960 --> 00:06:20,400
to see this as well

144
00:06:20,400 --> 00:06:22,240
so um so

145
00:06:22,240 --> 00:06:23,520
i'm not going to keep this open right

146
00:06:23,520 --> 00:06:25,840
here

147
00:06:26,800 --> 00:06:29,360
uh we do have some online resources that

148
00:06:29,360 --> 00:06:32,319
are helpful uh both today and ongoing

149
00:06:32,319 --> 00:06:34,160
yeah you here's the pointer to today's

150
00:06:34,160 --> 00:06:35,600
agenda

151
00:06:35,600 --> 00:06:38,240
the note-taking tool um known

152
00:06:38,240 --> 00:06:40,720
alternatively as ether pad code imd and

153
00:06:40,720 --> 00:06:43,440
hedge doc it's that url right there

154
00:06:43,440 --> 00:06:46,240
that's the same url you get if you go to

155
00:06:46,240 --> 00:06:49,520
it from the ietf agenda page

156
00:06:49,520 --> 00:06:52,080
we're on jabber as well the

157
00:06:52,080 --> 00:06:55,199
jabber is integrated with uh with meat

158
00:06:55,199 --> 00:06:58,800
echo so if you use the meat echo note

159
00:06:58,800 --> 00:07:01,599
window that's exactly the same as having

160
00:07:01,599 --> 00:07:04,240
your jabber application open

161
00:07:04,240 --> 00:07:07,520
and we should note that this is the last

162
00:07:07,520 --> 00:07:09,210
meeting in which we will be

163
00:07:09,210 --> 00:07:10,479
[Music]

164
00:07:10,479 --> 00:07:12,560
using jabber

165
00:07:12,560 --> 00:07:15,280
and we're transitioning to a new tool

166
00:07:15,280 --> 00:07:17,680
called zulip which will be taking

167
00:07:17,680 --> 00:07:20,639
jabber's place at ietf115

168
00:07:20,639 --> 00:07:24,000
so you should download the zulip app for

169
00:07:24,000 --> 00:07:25,280
your phones

170
00:07:25,280 --> 00:07:26,880
and and

171
00:07:26,880 --> 00:07:29,280
get acquainted with zulip for

172
00:07:29,280 --> 00:07:31,840
for the next ietf meeting

173
00:07:31,840 --> 00:07:34,720
there is a wiki for the mpls open design

174
00:07:34,720 --> 00:07:37,680
team it's at that url right there and

175
00:07:37,680 --> 00:07:40,080
the wiki is where we announce all the

176
00:07:40,080 --> 00:07:41,280
agendas

177
00:07:41,280 --> 00:07:44,720
for the open design team calls all the

178
00:07:44,720 --> 00:07:46,720
ongoing work is documented there so if

179
00:07:46,720 --> 00:07:50,160
you want to participate you should be

180
00:07:50,160 --> 00:07:52,560
keeping track of the contents of of the

181
00:07:52,560 --> 00:07:54,960
wiki and finally while we're here in the

182
00:07:54,960 --> 00:07:56,800
room in the meeting if you have any

183
00:07:56,800 --> 00:07:59,680
issues with meat echo the meeting audio

184
00:07:59,680 --> 00:08:01,919
the thermostats in the room anything

185
00:08:01,919 --> 00:08:03,360
like that

186
00:08:03,360 --> 00:08:06,479
send an email to support ietf.org

187
00:08:06,479 --> 00:08:08,560
they are keeping on top of that in real

188
00:08:08,560 --> 00:08:10,800
time and they will help you out

189
00:08:10,800 --> 00:08:12,800
and finally there's also a meat echo

190
00:08:12,800 --> 00:08:15,759
technician who is monitoring the session

191
00:08:15,759 --> 00:08:17,919
so if there are any meat echo

192
00:08:17,919 --> 00:08:19,759
issues that come up we can get right in

193
00:08:19,759 --> 00:08:22,720
touch with the medical guys as well

194
00:08:22,720 --> 00:08:25,520
and that's my final slide so i'm going

195
00:08:25,520 --> 00:08:28,160
to close this deck and move on to

196
00:08:28,160 --> 00:08:30,160
christian let me open that deck right

197
00:08:30,160 --> 00:08:31,120
there

198
00:08:31,120 --> 00:08:33,919
wait one second

199
00:08:38,559 --> 00:08:41,200
okay and christian would you like me to

200
00:08:41,200 --> 00:08:42,719
move the slides or would you like me to

201
00:08:42,719 --> 00:08:44,640
hand it off to you

202
00:08:44,640 --> 00:08:46,399
um you can if you can move the slides

203
00:08:46,399 --> 00:08:48,720
that would be great okay very good i'm

204
00:08:48,720 --> 00:08:50,560
just going to turn off my audio and

205
00:08:50,560 --> 00:08:53,560
video

206
00:08:54,240 --> 00:08:55,600
uh

207
00:08:55,600 --> 00:08:59,200
and i'll be handing that over to you

208
00:08:59,200 --> 00:09:02,000
okay thanks andy thanks everybody uh

209
00:09:02,000 --> 00:09:04,240
appreciate the time uh it's an honor to

210
00:09:04,240 --> 00:09:06,800
have the first slot in this session

211
00:09:06,800 --> 00:09:09,120
um i would like to introduce to the pals

212
00:09:09,120 --> 00:09:11,040
group the concept of private line

213
00:09:11,040 --> 00:09:12,320
emulation

214
00:09:12,320 --> 00:09:15,040
uh it has been you know i presented that

215
00:09:15,040 --> 00:09:18,000
already at itf 108 back then at the best

216
00:09:18,000 --> 00:09:20,959
working group uh and my purpose here

217
00:09:20,959 --> 00:09:22,560
would be to introduce you to the concept

218
00:09:22,560 --> 00:09:24,720
as well as give an update on the

219
00:09:24,720 --> 00:09:26,800
the the progress we made uh

220
00:09:26,800 --> 00:09:28,240
through the last couple you know

221
00:09:28,240 --> 00:09:30,240
actually one and a half years roughly

222
00:09:30,240 --> 00:09:33,440
you can can go to the next slide

223
00:09:33,440 --> 00:09:37,360
some of you may wonder why such a pals

224
00:09:37,360 --> 00:09:41,040
ish draft and a very tdm centric draft

225
00:09:41,040 --> 00:09:42,640
and uh you know there is something

226
00:09:42,640 --> 00:09:44,240
happening uh

227
00:09:44,240 --> 00:09:45,200
at the

228
00:09:45,200 --> 00:09:47,839
lower layer of the transport uh and what

229
00:09:47,839 --> 00:09:49,600
is actually happening is that packet

230
00:09:49,600 --> 00:09:50,720
switching

231
00:09:50,720 --> 00:09:52,640
through the innovation in silicon is

232
00:09:52,640 --> 00:09:55,279
becoming the most cost effective way to

233
00:09:55,279 --> 00:09:57,600
switch information at the electrical

234
00:09:57,600 --> 00:10:00,480
level what also is happening is that

235
00:10:00,480 --> 00:10:01,680
dwm

236
00:10:01,680 --> 00:10:03,600
and coherent transmission technology is

237
00:10:03,600 --> 00:10:05,920
moving in in the form of pluggables into

238
00:10:05,920 --> 00:10:07,200
routers

239
00:10:07,200 --> 00:10:09,680
and that kind of begs the question

240
00:10:09,680 --> 00:10:11,920
does it make sense and this is really at

241
00:10:11,920 --> 00:10:14,560
the lower transport level it's not at

242
00:10:14,560 --> 00:10:15,279
the

243
00:10:15,279 --> 00:10:17,040
um you know i guess routing control

244
00:10:17,040 --> 00:10:18,560
plane and service level right it's more

245
00:10:18,560 --> 00:10:19,440
on the

246
00:10:19,440 --> 00:10:21,360
more boring side of the house of the

247
00:10:21,360 --> 00:10:24,640
network you know do we really need a tdm

248
00:10:24,640 --> 00:10:26,640
switching layer and predominantly that

249
00:10:26,640 --> 00:10:29,920
is today otn uh um

250
00:10:29,920 --> 00:10:31,920
or can they actually get rid of it and

251
00:10:31,920 --> 00:10:34,399
really let everything be packet switched

252
00:10:34,399 --> 00:10:35,920
or routed

253
00:10:35,920 --> 00:10:38,079
and when we do that of course that

254
00:10:38,079 --> 00:10:40,160
you know begs the question uh as a

255
00:10:40,160 --> 00:10:42,560
follow-up what do we do with our

256
00:10:42,560 --> 00:10:45,120
tdm switch services or also known as

257
00:10:45,120 --> 00:10:46,800
private lines let me go to the next

258
00:10:46,800 --> 00:10:48,160
slide

259
00:10:48,160 --> 00:10:49,440
um

260
00:10:49,440 --> 00:10:50,959
you know a lot of things can be done

261
00:10:50,959 --> 00:10:52,800
with pseudobuyers right and ethernet's

262
00:10:52,800 --> 00:10:55,440
utilizing evp and vpws is doing a great

263
00:10:55,440 --> 00:10:56,560
job right

264
00:10:56,560 --> 00:10:58,959
um the first draft part of

265
00:10:58,959 --> 00:11:01,360
the session is you know

266
00:11:01,360 --> 00:11:02,560
called uh

267
00:11:02,560 --> 00:11:05,040
you know ple or private languation and

268
00:11:05,040 --> 00:11:07,680
is about the data plane and it address

269
00:11:07,680 --> 00:11:09,680
it is addressing the the gap that we

270
00:11:09,680 --> 00:11:10,720
have

271
00:11:10,720 --> 00:11:13,760
that we cannot act at the bit level and

272
00:11:13,760 --> 00:11:16,720
be more transparent maybe because i want

273
00:11:16,720 --> 00:11:18,160
to

274
00:11:18,160 --> 00:11:19,600
be completely transparent for ethernet

275
00:11:19,600 --> 00:11:21,839
to also support synchro's ethernet for

276
00:11:21,839 --> 00:11:23,680
some special cases or maybe i want to

277
00:11:23,680 --> 00:11:25,519
carry fiber channel and non-ethernet

278
00:11:25,519 --> 00:11:27,279
technology

279
00:11:27,279 --> 00:11:29,680
and this draft is uh somewhat taking

280
00:11:29,680 --> 00:11:32,079
what has been done in the past with rfc

281
00:11:32,079 --> 00:11:34,079
four five five three and four structure

282
00:11:34,079 --> 00:11:37,279
agnostic transport over uh packet and is

283
00:11:37,279 --> 00:11:39,440
adopting or let's say widening the scope

284
00:11:39,440 --> 00:11:41,600
to higher speed interfaces like 10 gt

285
00:11:41,600 --> 00:11:44,079
100 kg fiber channel of various rates or

286
00:11:44,079 --> 00:11:47,200
even otn or sonic sdh

287
00:11:47,200 --> 00:11:48,399
um

288
00:11:48,399 --> 00:11:50,639
again the underlay is mpls but also

289
00:11:50,639 --> 00:11:53,760
these days you know srv6 is a is a

290
00:11:53,760 --> 00:11:57,200
a suitable underlay the second draft i

291
00:11:57,200 --> 00:11:59,360
want to put your attention to is

292
00:11:59,360 --> 00:12:02,320
essentially adding the signaling pieces

293
00:12:02,320 --> 00:12:04,720
uh into the mix and here because

294
00:12:04,720 --> 00:12:08,800
nowadays uh you know evpn and evpn vpws

295
00:12:08,800 --> 00:12:11,360
um is a more modern way of signaling

296
00:12:11,360 --> 00:12:13,680
pseudo-wires the idea is to have

297
00:12:13,680 --> 00:12:16,480
extensions to signal

298
00:12:16,480 --> 00:12:18,800
those tdm into or this interface

299
00:12:18,800 --> 00:12:20,880
specific attributes

300
00:12:20,880 --> 00:12:24,040
next slide

301
00:12:24,720 --> 00:12:26,800
now from a data plane perspective uh

302
00:12:26,800 --> 00:12:29,920
it's really you know uh a evolution of

303
00:12:29,920 --> 00:12:32,639
what has been on the setup right and uh

304
00:12:32,639 --> 00:12:34,560
what we are defining is two

305
00:12:34,560 --> 00:12:36,839
encapsulation of three encapsulation

306
00:12:36,839 --> 00:12:39,600
types which which are

307
00:12:39,600 --> 00:12:42,720
largely agnostic to any kind of

308
00:12:42,720 --> 00:12:44,399
you know information that's in the

309
00:12:44,399 --> 00:12:45,920
signal

310
00:12:45,920 --> 00:12:49,200
but due to the um let's say to a more

311
00:12:49,200 --> 00:12:51,440
optimized implementation for for

312
00:12:51,440 --> 00:12:53,920
carrying odu or carrying

313
00:12:53,920 --> 00:12:56,320
very high capacity 200 giga 400 gig

314
00:12:56,320 --> 00:12:57,680
interfaces

315
00:12:57,680 --> 00:13:00,000
uh we have defined some

316
00:13:00,000 --> 00:13:02,720
some alignment where in the otn case we

317
00:13:02,720 --> 00:13:05,440
do a od uk frame alignment and for the

318
00:13:05,440 --> 00:13:08,639
uh 200 gb and 400 gig we're aligning

319
00:13:08,639 --> 00:13:11,279
with the 10 28 bit blocks that have been

320
00:13:11,279 --> 00:13:13,760
defined for those ethernet technologies

321
00:13:13,760 --> 00:13:16,079
for the rest the proposal is really to

322
00:13:16,079 --> 00:13:17,839
keep things the way they are right we

323
00:13:17,839 --> 00:13:20,560
have an rtp header with sequencing

324
00:13:20,560 --> 00:13:22,959
and rtp timestamps we have a control

325
00:13:22,959 --> 00:13:26,800
with l and r bit um so pretty much you

326
00:13:26,800 --> 00:13:28,880
know kind of what we what we have done

327
00:13:28,880 --> 00:13:31,760
before but essentially broadening the

328
00:13:31,760 --> 00:13:34,000
scope of setup which really was focused

329
00:13:34,000 --> 00:13:38,160
around t1 e1s and the likes

330
00:13:38,160 --> 00:13:40,560
next slide

331
00:13:40,560 --> 00:13:43,040
on the control plane side um

332
00:13:43,040 --> 00:13:45,360
we are taking with the second draft

333
00:13:45,360 --> 00:13:46,800
let's say

334
00:13:46,800 --> 00:13:49,360
what has been done in the past and again

335
00:13:49,360 --> 00:13:52,079
expanding the the scope and adding a few

336
00:13:52,079 --> 00:13:55,839
bits and pieces in terms of tlvs to uh

337
00:13:55,839 --> 00:13:58,399
to signal the specifics of those new

338
00:13:58,399 --> 00:14:00,000
interface types that are now being

339
00:14:00,000 --> 00:14:01,680
emulated

340
00:14:01,680 --> 00:14:04,399
but to a large extent you know the i

341
00:14:04,399 --> 00:14:06,320
would say the approach is identical and

342
00:14:06,320 --> 00:14:08,079
what we are proposing is essentially to

343
00:14:08,079 --> 00:14:11,440
adopt bgp uh instead of ldp

344
00:14:11,440 --> 00:14:14,000
next slide

345
00:14:14,320 --> 00:14:15,600
um

346
00:14:15,600 --> 00:14:18,320
so so much for the introduction um as i

347
00:14:18,320 --> 00:14:20,560
said i'm uh i presented already iitf

348
00:14:20,560 --> 00:14:23,760
108. uh since then we had uh quite a bit

349
00:14:23,760 --> 00:14:25,120
of progress

350
00:14:25,120 --> 00:14:26,480
even though i have to say that the

351
00:14:26,480 --> 00:14:29,120
technology may not be in fashion right

352
00:14:29,120 --> 00:14:32,000
um but we have um you know strong

353
00:14:32,000 --> 00:14:34,320
interest from operators like verizon

354
00:14:34,320 --> 00:14:35,839
deutsche telekom

355
00:14:35,839 --> 00:14:37,279
and also

356
00:14:37,279 --> 00:14:40,160
sienna and silence have joined us and

357
00:14:40,160 --> 00:14:42,720
through that and various feedback we got

358
00:14:42,720 --> 00:14:44,959
from the folks mentioned here

359
00:14:44,959 --> 00:14:48,079
we added quite a few of changes in the

360
00:14:48,079 --> 00:14:49,680
past and i'm not going through one by

361
00:14:49,680 --> 00:14:52,240
one but essentially some of the

362
00:14:52,240 --> 00:14:54,480
editorial changes as well as well as we

363
00:14:54,480 --> 00:14:56,240
got some agreement on what a default

364
00:14:56,240 --> 00:14:58,639
payload size could be and and things of

365
00:14:58,639 --> 00:14:59,920
that nature

366
00:14:59,920 --> 00:15:02,479
next slide

367
00:15:03,120 --> 00:15:05,600
um we also got some more recent feedback

368
00:15:05,600 --> 00:15:07,279
again thank you for everybody who's

369
00:15:07,279 --> 00:15:10,079
providing input and more recently we

370
00:15:10,079 --> 00:15:13,360
added the 10 28 bit block alignment for

371
00:15:13,360 --> 00:15:15,920
supporting uh very high capacity 200 gig

372
00:15:15,920 --> 00:15:18,000
and 400 kg this is probably a little bit

373
00:15:18,000 --> 00:15:20,639
more futuristic but as

374
00:15:20,639 --> 00:15:23,519
networks may maybe build based on 800

375
00:15:23,519 --> 00:15:25,120
gig and maybe

376
00:15:25,120 --> 00:15:28,000
1.6 terabit ethernet interfaces uh you

377
00:15:28,000 --> 00:15:29,360
know this is something that will be

378
00:15:29,360 --> 00:15:31,680
asked by the market as well

379
00:15:31,680 --> 00:15:33,600
and last but not least uh

380
00:15:33,600 --> 00:15:35,360
from the feedback

381
00:15:35,360 --> 00:15:37,199
the conclusion was that this really is

382
00:15:37,199 --> 00:15:39,040
something that should be addressed to

383
00:15:39,040 --> 00:15:42,480
pals i renamed the draft and presenting

384
00:15:42,480 --> 00:15:44,160
it also here now

385
00:15:44,160 --> 00:15:46,639
next slide

386
00:15:47,040 --> 00:15:50,160
so this is actually all i have um

387
00:15:50,160 --> 00:15:51,440
hopefully this gave you a good

388
00:15:51,440 --> 00:15:53,360
introduction we would appreciate more

389
00:15:53,360 --> 00:15:56,160
more feedback and input

390
00:15:56,160 --> 00:15:58,880
we have been um actively talking from

391
00:15:58,880 --> 00:16:00,880
cisco side to a lot of customers and we

392
00:16:00,880 --> 00:16:03,759
have shown we have seen great interest

393
00:16:03,759 --> 00:16:04,639
so

394
00:16:04,639 --> 00:16:07,120
we really believe that this

395
00:16:07,120 --> 00:16:08,800
is something that

396
00:16:08,800 --> 00:16:12,320
is of interest not only uh you know is

397
00:16:12,320 --> 00:16:15,040
of interest for everybody uh and uh we

398
00:16:15,040 --> 00:16:18,560
would recommend or ask for uh input and

399
00:16:18,560 --> 00:16:20,959
feedback and potentially um adopt the

400
00:16:20,959 --> 00:16:23,680
draft and make this a workshop document

401
00:16:23,680 --> 00:16:26,720
so we can progress and make the

402
00:16:26,720 --> 00:16:30,079
the document complete um and finally an

403
00:16:30,079 --> 00:16:31,519
rfc

404
00:16:31,519 --> 00:16:33,040
last but not least i think recently

405
00:16:33,040 --> 00:16:34,800
there was a discussion about

406
00:16:34,800 --> 00:16:37,519
pseudo-wires and ldp and s-segment

407
00:16:37,519 --> 00:16:38,720
routing

408
00:16:38,720 --> 00:16:40,720
and uh i was wondering that potentially

409
00:16:40,720 --> 00:16:43,279
the signaling draft which hasn't you

410
00:16:43,279 --> 00:16:44,320
know had

411
00:16:44,320 --> 00:16:47,199
too much of progress yet could be a

412
00:16:47,199 --> 00:16:50,000
potential solution uh to to address some

413
00:16:50,000 --> 00:16:51,519
of the topics that have been discussed

414
00:16:51,519 --> 00:16:53,279
there

415
00:16:53,279 --> 00:16:55,279
and would like to to get your feedback

416
00:16:55,279 --> 00:16:57,199
on that one and with that thank you very

417
00:16:57,199 --> 00:16:59,439
much

418
00:16:59,680 --> 00:17:00,720
okay

419
00:17:00,720 --> 00:17:03,759
thank you very much christian um do we

420
00:17:03,759 --> 00:17:05,599
do we have any questions for christian

421
00:17:05,599 --> 00:17:10,000
before we move on to the joint meeting

422
00:17:12,799 --> 00:17:15,359
and i'm not seeing any questions

423
00:17:15,359 --> 00:17:16,640
so

424
00:17:16,640 --> 00:17:18,400
thank you very much christian

425
00:17:18,400 --> 00:17:20,880
and i'm going to move on to two week

426
00:17:20,880 --> 00:17:23,280
slides

427
00:17:29,440 --> 00:17:32,320
thank you andy and will you give me the

428
00:17:32,320 --> 00:17:34,960
control to flip yes

429
00:17:34,960 --> 00:17:37,039
thank you

430
00:17:37,039 --> 00:17:39,520
you should have control now

431
00:17:39,520 --> 00:17:42,640
i see it thanks perfect

432
00:17:42,640 --> 00:17:46,320
so my name is tariq saad and uh i was

433
00:17:46,320 --> 00:17:49,600
delegated to give a report on the mpls

434
00:17:49,600 --> 00:17:51,360
network's action

435
00:17:51,360 --> 00:17:54,160
network actions activities and

436
00:17:54,160 --> 00:17:56,160
a status update on

437
00:17:56,160 --> 00:17:58,960
the work that the design team has been

438
00:17:58,960 --> 00:18:01,360
engaged with as well as the working

439
00:18:01,360 --> 00:18:03,678
group

440
00:18:03,760 --> 00:18:07,440
so let me proceed before i do that um

441
00:18:07,440 --> 00:18:11,039
i'm happy to take uh questions on this

442
00:18:11,039 --> 00:18:12,960
but if it is of

443
00:18:12,960 --> 00:18:15,039
nature the debatable nature or

444
00:18:15,039 --> 00:18:18,000
controversial uh there is a uh there's a

445
00:18:18,000 --> 00:18:20,160
slot that we left open towards the end

446
00:18:20,160 --> 00:18:21,360
of the session

447
00:18:21,360 --> 00:18:23,840
uh feel free to bring it up uh at that

448
00:18:23,840 --> 00:18:26,080
time but if it's a quick uh status

449
00:18:26,080 --> 00:18:29,840
update question i'm happy to take it

450
00:18:32,880 --> 00:18:36,160
a bit a bit of overview on the m a open

451
00:18:36,160 --> 00:18:38,400
design team

452
00:18:38,400 --> 00:18:40,400
that was initiated by the npls working

453
00:18:40,400 --> 00:18:41,840
group

454
00:18:41,840 --> 00:18:44,640
it's currently a joint activity

455
00:18:44,640 --> 00:18:45,919
between

456
00:18:45,919 --> 00:18:48,320
three working groups mpls pals and debt

457
00:18:48,320 --> 00:18:49,679
net

458
00:18:49,679 --> 00:18:51,760
the chairs from the three working groups

459
00:18:51,760 --> 00:18:54,480
coordinate agendas and decisions

460
00:18:54,480 --> 00:18:58,000
and they do meet periodically uh

461
00:18:58,000 --> 00:19:00,640
the open design team meeting happens

462
00:19:00,640 --> 00:19:03,919
every week on thursday 11 a.m eastern

463
00:19:03,919 --> 00:19:04,960
time

464
00:19:04,960 --> 00:19:06,000
uh

465
00:19:06,000 --> 00:19:08,160
as i mentioned the chairs are meeting

466
00:19:08,160 --> 00:19:10,400
also uh weekly

467
00:19:10,400 --> 00:19:11,520
um

468
00:19:11,520 --> 00:19:14,000
and it happens on tuesday

469
00:19:14,000 --> 00:19:16,160
we have good participation from the

470
00:19:16,160 --> 00:19:18,400
working groups and um

471
00:19:18,400 --> 00:19:20,480
usually we see around 15 to 20

472
00:19:20,480 --> 00:19:22,799
participants every week

473
00:19:22,799 --> 00:19:26,799
there was a a review of uh documents

474
00:19:26,799 --> 00:19:27,840
that were

475
00:19:27,840 --> 00:19:28,880
active

476
00:19:28,880 --> 00:19:29,679
uh

477
00:19:29,679 --> 00:19:32,160
actively produced by the design team and

478
00:19:32,160 --> 00:19:33,360
members

479
00:19:33,360 --> 00:19:36,160
and the taxonomy of uh

480
00:19:36,160 --> 00:19:39,360
or the report was left on the wiki

481
00:19:39,360 --> 00:19:42,320
uh so people want to check that

482
00:19:42,320 --> 00:19:43,840
we're leaving a

483
00:19:43,840 --> 00:19:46,320
link to it

484
00:19:46,320 --> 00:19:47,600
um

485
00:19:47,600 --> 00:19:50,559
i'm i'm okay to take questions now

486
00:19:50,559 --> 00:19:51,440
or

487
00:19:51,440 --> 00:19:53,679
um yeah so i see someone raising their

488
00:19:53,679 --> 00:19:56,559
hands and let me ask andy do you want

489
00:19:56,559 --> 00:20:00,400
to take questions now or uh

490
00:20:00,400 --> 00:20:03,280
i'm i'm okay by myself yeah

491
00:20:03,280 --> 00:20:05,120
if they're quick absolutely

492
00:20:05,120 --> 00:20:06,400
uh

493
00:20:06,400 --> 00:20:08,240
why don't you go ahead

494
00:20:08,240 --> 00:20:10,799
john don

495
00:20:19,120 --> 00:20:22,960
um could it be by mistake

496
00:20:22,960 --> 00:20:27,039
it could be juan dong are you there

497
00:20:29,120 --> 00:20:31,120
okay your hand came out okay

498
00:20:31,120 --> 00:20:34,080
so okay so you could drop the hand yeah

499
00:20:34,080 --> 00:20:35,679
okay

500
00:20:35,679 --> 00:20:37,280
i will

501
00:20:37,280 --> 00:20:39,760
i will proceed then um

502
00:20:39,760 --> 00:20:42,240
in terms of updates since last time we

503
00:20:42,240 --> 00:20:45,039
met so this is the third report indeed

504
00:20:45,039 --> 00:20:47,600
that we are producing to the

505
00:20:47,600 --> 00:20:50,159
the working group um

506
00:20:50,159 --> 00:20:51,600
and

507
00:20:51,600 --> 00:20:54,080
the updates this time include some

508
00:20:54,080 --> 00:20:57,200
working group documents that got adopted

509
00:20:57,200 --> 00:21:00,159
uh let me go through them and review the

510
00:21:00,159 --> 00:21:03,440
status of each uh so there was the use

511
00:21:03,440 --> 00:21:06,080
cases for mpls network action indicators

512
00:21:06,080 --> 00:21:06,799
and

513
00:21:06,799 --> 00:21:08,240
pls sincerity

514
00:21:08,240 --> 00:21:09,760
data

515
00:21:09,760 --> 00:21:12,799
this uh this document got adopted by the

516
00:21:12,799 --> 00:21:14,000
working group

517
00:21:14,000 --> 00:21:16,880
uh in may 2022

518
00:21:16,880 --> 00:21:18,000
recently

519
00:21:18,000 --> 00:21:20,080
and the working group and the design

520
00:21:20,080 --> 00:21:23,200
team continues to refine existing use

521
00:21:23,200 --> 00:21:26,000
cases as well as identifying new use

522
00:21:26,000 --> 00:21:29,440
cases and adding them to the document

523
00:21:29,440 --> 00:21:31,600
we have the second document which

524
00:21:31,600 --> 00:21:33,440
tackles the requirements for mpls

525
00:21:33,440 --> 00:21:35,120
network actions

526
00:21:35,120 --> 00:21:37,200
and mpls ancillary data

527
00:21:37,200 --> 00:21:41,039
uh this document also got adopted in may

528
00:21:41,039 --> 00:21:42,640
2022

529
00:21:42,640 --> 00:21:45,280
and the working group and the design

530
00:21:45,280 --> 00:21:49,120
team are regularly uh refining this

531
00:21:49,120 --> 00:21:52,559
uh the requirements in the document and

532
00:21:52,559 --> 00:21:54,960
this usually happens either on the email

533
00:21:54,960 --> 00:21:56,240
list or

534
00:21:56,240 --> 00:21:59,840
during the weekly meeting

535
00:22:01,600 --> 00:22:03,120
um

536
00:22:03,120 --> 00:22:05,440
yeah the numbering changed for some

537
00:22:05,440 --> 00:22:08,000
reason this should be number three

538
00:22:08,000 --> 00:22:10,320
uh

539
00:22:10,480 --> 00:22:13,679
oh one second maybe i

540
00:22:13,679 --> 00:22:15,200
yeah number three

541
00:22:15,200 --> 00:22:18,159
uh that's what i was expecting uh the

542
00:22:18,159 --> 00:22:19,919
third document that

543
00:22:19,919 --> 00:22:22,880
the the design team tackled was the

544
00:22:22,880 --> 00:22:26,480
framework for mpls network actions and

545
00:22:26,480 --> 00:22:29,760
this document got recently adopted um

546
00:22:29,760 --> 00:22:31,919
the name still hasn't changed but we're

547
00:22:31,919 --> 00:22:35,679
expecting it to change anytime

548
00:22:35,679 --> 00:22:38,080
but indeed the working group has decided

549
00:22:38,080 --> 00:22:40,720
to adopt this document during the

550
00:22:40,720 --> 00:22:42,880
adoption poll there were

551
00:22:42,880 --> 00:22:45,679
a multiple of points raised

552
00:22:45,679 --> 00:22:48,720
and that incited the chairs to

553
00:22:48,720 --> 00:22:50,960
initiate a poll we will talk a little

554
00:22:50,960 --> 00:22:54,000
bit about it on subsequent slides

555
00:22:54,000 --> 00:22:55,039
but

556
00:22:55,039 --> 00:22:58,320
we successfully concluded the poll and

557
00:22:58,320 --> 00:23:03,200
the document was adopted on july 13th

558
00:23:03,440 --> 00:23:05,600
as i mentioned the authors are

559
00:23:05,600 --> 00:23:08,960
expected to publish a new revision that

560
00:23:08,960 --> 00:23:12,080
includes the name change

561
00:23:16,000 --> 00:23:19,200
uh so the the second update i will go

562
00:23:19,200 --> 00:23:21,360
through is the the polls that i was

563
00:23:21,360 --> 00:23:22,960
talking about that

564
00:23:22,960 --> 00:23:25,600
uh the chairs decided to initiate uh to

565
00:23:25,600 --> 00:23:27,120
tackle some

566
00:23:27,120 --> 00:23:29,840
of the comments raised during the m a

567
00:23:29,840 --> 00:23:32,720
framework draft uh adoption poll

568
00:23:32,720 --> 00:23:33,919
um

569
00:23:33,919 --> 00:23:37,520
so we tried actually as a design team as

570
00:23:37,520 --> 00:23:39,600
well as the working group we tried to

571
00:23:39,600 --> 00:23:41,200
converge on

572
00:23:41,200 --> 00:23:43,679
some of the common streets how to tackle

573
00:23:43,679 --> 00:23:44,640
them

574
00:23:44,640 --> 00:23:46,799
during the weekly design team meeting

575
00:23:46,799 --> 00:23:47,760
but

576
00:23:47,760 --> 00:23:50,720
unfortunately that did not conclude so

577
00:23:50,720 --> 00:23:53,840
that the open design team chairs decided

578
00:23:53,840 --> 00:23:56,720
to craft two polls uh and

579
00:23:56,720 --> 00:23:58,960
and send it to the email list of the

580
00:23:58,960 --> 00:24:00,480
npls working group

581
00:24:00,480 --> 00:24:03,039
in order to see you know a convergence

582
00:24:03,039 --> 00:24:04,799
and move forward

583
00:24:04,799 --> 00:24:07,440
so the polls were left open for almost

584
00:24:07,440 --> 00:24:09,600
three weeks uh to gather as many

585
00:24:09,600 --> 00:24:11,520
feedback as possible

586
00:24:11,520 --> 00:24:15,039
and uh subsequently the chairs decided

587
00:24:15,039 --> 00:24:17,760
uh or concluded and shared the results

588
00:24:17,760 --> 00:24:20,480
of the polls

589
00:24:23,039 --> 00:24:25,200
we will go through the results and of

590
00:24:25,200 --> 00:24:27,360
the consensus call

591
00:24:27,360 --> 00:24:29,840
on this slide and the subsequent slide

592
00:24:29,840 --> 00:24:33,279
the first poll that happened uh

593
00:24:33,279 --> 00:24:34,960
was

594
00:24:34,960 --> 00:24:36,559
to make sure that the framework is

595
00:24:36,559 --> 00:24:38,799
solution independent which makes sense

596
00:24:38,799 --> 00:24:39,840
but

597
00:24:39,840 --> 00:24:41,010
um

598
00:24:41,010 --> 00:24:43,200
[Music]

599
00:24:43,200 --> 00:24:46,799
so 80 is not so 80 means ancillary data

600
00:24:46,799 --> 00:24:49,360
here and not the area director so we

601
00:24:49,360 --> 00:24:52,880
want to make sure that the framework

602
00:24:52,880 --> 00:24:55,520
can convey the ancillary data inside the

603
00:24:55,520 --> 00:24:57,360
packet

604
00:24:57,360 --> 00:24:58,159
in

605
00:24:58,159 --> 00:24:59,520
in either

606
00:24:59,520 --> 00:25:01,520
multiple places as well as can be

607
00:25:01,520 --> 00:25:03,919
signaled in the control plane

608
00:25:03,919 --> 00:25:04,960
um

609
00:25:04,960 --> 00:25:07,440
an m a packet may carry the ancillary

610
00:25:07,440 --> 00:25:09,840
data in one or both places

611
00:25:09,840 --> 00:25:13,520
including inside the mpls stack or after

612
00:25:13,520 --> 00:25:15,520
the empire stack

613
00:25:15,520 --> 00:25:17,440
the conclusion on this poll was to

614
00:25:17,440 --> 00:25:19,679
support this position

615
00:25:19,679 --> 00:25:22,000
and

616
00:25:22,720 --> 00:25:25,200
we we had a recommendation for any

617
00:25:25,200 --> 00:25:27,039
solution draft

618
00:25:27,039 --> 00:25:28,559
such that if they

619
00:25:28,559 --> 00:25:31,120
choose the in-stack

620
00:25:31,120 --> 00:25:32,559
they choose the n-stack to carry

621
00:25:32,559 --> 00:25:35,039
ancillary data so isd stands for

622
00:25:35,039 --> 00:25:37,120
in-stack data

623
00:25:37,120 --> 00:25:39,440
if if the solution is choosing that it

624
00:25:39,440 --> 00:25:42,000
provides the motivation behind choosing

625
00:25:42,000 --> 00:25:43,760
this versus

626
00:25:43,760 --> 00:25:46,720
choosing post stack

627
00:25:46,720 --> 00:25:49,120
so the solution had to

628
00:25:49,120 --> 00:25:51,200
include additional motivation

629
00:25:51,200 --> 00:25:55,559
for selecting in-stack data

630
00:25:57,120 --> 00:25:59,520
the second poll uh

631
00:25:59,520 --> 00:26:01,279
was a call to converge on whether to

632
00:26:01,279 --> 00:26:02,559
repurpose

633
00:26:02,559 --> 00:26:05,840
the existing any existing uh spl

634
00:26:05,840 --> 00:26:09,120
for m a um

635
00:26:09,120 --> 00:26:11,360
action data indicator

636
00:26:11,360 --> 00:26:14,640
for example an spl that was thoroughly

637
00:26:14,640 --> 00:26:16,000
researched was

638
00:26:16,000 --> 00:26:18,960
the entropy label indicator

639
00:26:18,960 --> 00:26:21,279
or whether we should allocate a new spl

640
00:26:21,279 --> 00:26:22,960
for this purpose

641
00:26:22,960 --> 00:26:28,000
um so the conclusion on this poll was um

642
00:26:28,000 --> 00:26:29,679
you know the responses showed that we

643
00:26:29,679 --> 00:26:31,840
have a strong consensus

644
00:26:31,840 --> 00:26:32,799
um

645
00:26:32,799 --> 00:26:34,240
that

646
00:26:34,240 --> 00:26:38,240
we want to allocate a new spl for m and

647
00:26:38,240 --> 00:26:39,679
no need to

648
00:26:39,679 --> 00:26:43,039
repurpose any existing spl for this

649
00:26:43,039 --> 00:26:44,480
purpose

650
00:26:44,480 --> 00:26:47,039
we also concluded that any other

651
00:26:47,039 --> 00:26:50,799
application other meaning none m a

652
00:26:50,799 --> 00:26:53,200
application that per that proposes to

653
00:26:53,200 --> 00:26:55,919
repurpose any existing spl

654
00:26:55,919 --> 00:26:57,840
will need to go through the normal

655
00:26:57,840 --> 00:27:00,480
working group process if they wish to do

656
00:27:00,480 --> 00:27:01,520
so

657
00:27:01,520 --> 00:27:02,960
so

658
00:27:02,960 --> 00:27:05,679
we do have a proposal and we we're going

659
00:27:05,679 --> 00:27:08,080
to go through that towards the end

660
00:27:08,080 --> 00:27:10,400
uh the last slide

661
00:27:10,400 --> 00:27:13,360
but this is the conclusion on this

662
00:27:13,360 --> 00:27:15,678
poll

663
00:27:19,600 --> 00:27:22,000
in terms of next steps uh the open

664
00:27:22,000 --> 00:27:24,799
design team that is tackling m a

665
00:27:24,799 --> 00:27:28,000
still is meeting uh weekly and uh they

666
00:27:28,000 --> 00:27:29,520
have uh

667
00:27:29,520 --> 00:27:30,640
um

668
00:27:30,640 --> 00:27:32,880
they have a lot still to do in terms of

669
00:27:32,880 --> 00:27:35,440
defining the solution

670
00:27:35,440 --> 00:27:39,039
we have tackled the base

671
00:27:39,039 --> 00:27:41,360
base or building blocks

672
00:27:41,360 --> 00:27:43,919
and produced multiple

673
00:27:43,919 --> 00:27:45,360
documents on that

674
00:27:45,360 --> 00:27:48,880
and the design team shares

675
00:27:48,880 --> 00:27:50,000
thought that

676
00:27:50,000 --> 00:27:52,399
it is time now to concentrate or

677
00:27:52,399 --> 00:27:54,159
redirect efforts

678
00:27:54,159 --> 00:27:55,840
towards the solution

679
00:27:55,840 --> 00:27:58,399
definition

680
00:27:58,720 --> 00:28:01,520
so i i mentioned there is a

681
00:28:01,520 --> 00:28:04,159
review of documents that tackle or that

682
00:28:04,159 --> 00:28:06,320
the proposed different solutions

683
00:28:06,320 --> 00:28:09,679
and um you know um we went over that

684
00:28:09,679 --> 00:28:13,279
last time and we met in the design team

685
00:28:13,279 --> 00:28:14,960
and we

686
00:28:14,960 --> 00:28:17,120
we thought that there is resemblance in

687
00:28:17,120 --> 00:28:19,600
terms of some proposals

688
00:28:19,600 --> 00:28:22,399
and uh the chairs are encouraging

689
00:28:22,399 --> 00:28:25,279
um authors of such solutions that look

690
00:28:25,279 --> 00:28:29,039
alike to collaborate uh together

691
00:28:29,039 --> 00:28:30,080
and

692
00:28:30,080 --> 00:28:32,080
you know report back in the weekly

693
00:28:32,080 --> 00:28:34,640
design team on the progress of

694
00:28:34,640 --> 00:28:36,559
alignment

695
00:28:36,559 --> 00:28:39,360
we are expecting a report

696
00:28:39,360 --> 00:28:41,760
from the solutions authors to come back

697
00:28:41,760 --> 00:28:42,840
post

698
00:28:42,840 --> 00:28:44,399
ietf114

699
00:28:44,399 --> 00:28:46,880
so that will be presented in

700
00:28:46,880 --> 00:28:50,480
a meeting that the design team

701
00:28:50,720 --> 00:28:54,360
meets on thursday

702
00:28:59,279 --> 00:29:01,760
so i did mention that there was a call

703
00:29:01,760 --> 00:29:05,679
uh or a poll to conclude on the reuse of

704
00:29:05,679 --> 00:29:08,000
a special purpose or repurposing of

705
00:29:08,000 --> 00:29:09,760
special purpose labels for different

706
00:29:09,760 --> 00:29:11,279
applications

707
00:29:11,279 --> 00:29:13,360
other than other than what it was meant

708
00:29:13,360 --> 00:29:14,159
to

709
00:29:14,159 --> 00:29:16,640
um

710
00:29:18,080 --> 00:29:21,200
so we did um we did agree as a working

711
00:29:21,200 --> 00:29:24,000
group as well as a design team that

712
00:29:24,000 --> 00:29:27,760
it will not be part of the m a work

713
00:29:27,760 --> 00:29:30,080
um

714
00:29:30,080 --> 00:29:32,000
we do have a draft

715
00:29:32,000 --> 00:29:34,000
that is proposing

716
00:29:34,000 --> 00:29:35,679
the use of

717
00:29:35,679 --> 00:29:38,240
entropy label indicator to

718
00:29:38,240 --> 00:29:39,760
indicate

719
00:29:39,760 --> 00:29:42,880
a slice id presence and any other and

720
00:29:42,880 --> 00:29:44,240
some other

721
00:29:44,240 --> 00:29:46,799
actions as well um

722
00:29:46,799 --> 00:29:49,760
there were other drafts that um that

723
00:29:49,760 --> 00:29:52,159
highlighted that such reuse

724
00:29:52,159 --> 00:29:53,600
is dangerous

725
00:29:53,600 --> 00:29:56,320
um we are i'm leaving both drafts here

726
00:29:56,320 --> 00:29:57,279
for

727
00:29:57,279 --> 00:29:58,559
um

728
00:29:58,559 --> 00:30:00,480
for people to check

729
00:30:00,480 --> 00:30:04,000
um but uh the conclusion here is

730
00:30:04,000 --> 00:30:05,840
is that we will leave the working group

731
00:30:05,840 --> 00:30:06,799
process

732
00:30:06,799 --> 00:30:10,399
to drive the progress on such a proposal

733
00:30:10,399 --> 00:30:12,960
so if if we see that

734
00:30:12,960 --> 00:30:15,200
we will go through the regular rough

735
00:30:15,200 --> 00:30:18,399
consensus to see if such a proposal

736
00:30:18,399 --> 00:30:22,279
can progress or not

737
00:30:22,320 --> 00:30:23,120
so

738
00:30:23,120 --> 00:30:26,480
this was my last slide um on the

739
00:30:26,480 --> 00:30:29,520
activities as well as the status update

740
00:30:29,520 --> 00:30:33,039
of the design team i hope i kept

741
00:30:33,039 --> 00:30:34,480
um

742
00:30:34,480 --> 00:30:36,480
honesty here

743
00:30:36,480 --> 00:30:37,440
um

744
00:30:37,440 --> 00:30:38,320
but

745
00:30:38,320 --> 00:30:40,399
if anyone else from the design team

746
00:30:40,399 --> 00:30:41,840
wants to add

747
00:30:41,840 --> 00:30:44,799
or update any of what i mentioned feel

748
00:30:44,799 --> 00:30:47,120
free

749
00:30:49,120 --> 00:30:51,679
i don't see any hands being raised so

750
00:30:51,679 --> 00:30:53,919
thank you very much tariq and we're

751
00:30:53,919 --> 00:30:57,039
going to move on to matthew now um who's

752
00:30:57,039 --> 00:31:00,559
going to present the requirements draft

753
00:31:00,559 --> 00:31:03,360
thanks sandy um if you if you just wait

754
00:31:03,360 --> 00:31:07,360
one second let me get your slides up

755
00:31:08,880 --> 00:31:11,600
i'm happy for you to advance the slides

756
00:31:11,600 --> 00:31:13,360
okay very good that's the next question

757
00:31:13,360 --> 00:31:16,080
i was going to ask

758
00:31:17,039 --> 00:31:19,440
you very much

759
00:31:19,440 --> 00:31:21,679
so this is uh just a

760
00:31:21,679 --> 00:31:23,679
short overview of where we are with the

761
00:31:23,679 --> 00:31:26,080
requirements for the requirements draft

762
00:31:26,080 --> 00:31:28,559
for mpls network action indicators and

763
00:31:28,559 --> 00:31:30,080
ancillary data

764
00:31:30,080 --> 00:31:32,399
and since the last ietf john drake has

765
00:31:32,399 --> 00:31:34,720
has joined the the author list and and

766
00:31:34,720 --> 00:31:36,720
helped us a lot with this draft so

767
00:31:36,720 --> 00:31:38,559
thanks john

768
00:31:38,559 --> 00:31:41,279
and next slide

769
00:31:43,200 --> 00:31:45,519
so so this document captures or is

770
00:31:45,519 --> 00:31:47,360
intended to capture the key requirements

771
00:31:47,360 --> 00:31:49,600
for mpls network actions

772
00:31:49,600 --> 00:31:51,600
um that affect forwarding or other

773
00:31:51,600 --> 00:31:55,600
processing of the mpls packets including

774
00:31:55,600 --> 00:31:57,440
uh requirements on network action stub

775
00:31:57,440 --> 00:31:59,679
stack indicators so that's

776
00:31:59,679 --> 00:32:02,240
that's referred to as the the m a label

777
00:32:02,240 --> 00:32:04,320
or the special purpose label that's used

778
00:32:04,320 --> 00:32:06,240
to indicate um

779
00:32:06,240 --> 00:32:08,399
a set of network actions um

780
00:32:08,399 --> 00:32:11,440
the mps network actions themselves um or

781
00:32:11,440 --> 00:32:13,760
indicators themselves and any ancillary

782
00:32:13,760 --> 00:32:15,760
data required to perform

783
00:32:15,760 --> 00:32:17,440
the indicated action

784
00:32:17,440 --> 00:32:20,000
and and this is a product of

785
00:32:20,000 --> 00:32:23,440
as you um of the mpls open design team

786
00:32:23,440 --> 00:32:26,000
and um the the requirements are largely

787
00:32:26,000 --> 00:32:29,279
driven from a number of proposals for

788
00:32:29,279 --> 00:32:31,279
additions to the mpls label stack to

789
00:32:31,279 --> 00:32:32,640
allow

790
00:32:32,640 --> 00:32:34,480
decisions about actions based on on

791
00:32:34,480 --> 00:32:36,799
application data

792
00:32:36,799 --> 00:32:38,640
and just to clarify these requirements

793
00:32:38,640 --> 00:32:41,039
are on protocol design so they're on

794
00:32:41,039 --> 00:32:42,880
on the design of the

795
00:32:42,880 --> 00:32:44,640
protocols that come out of this work not

796
00:32:44,640 --> 00:32:45,440
on

797
00:32:45,440 --> 00:32:47,519
implementations

798
00:32:47,519 --> 00:32:50,159
next slide

799
00:32:55,440 --> 00:32:57,600
so

800
00:32:57,600 --> 00:32:59,200
in in may i think we went through an

801
00:32:59,200 --> 00:33:01,039
adoption process um there was an

802
00:33:01,039 --> 00:33:03,120
individual draft um

803
00:33:03,120 --> 00:33:05,519
which had reached version four um and we

804
00:33:05,519 --> 00:33:07,600
had around 30 comments which were made

805
00:33:07,600 --> 00:33:09,279
on which were made on the list and were

806
00:33:09,279 --> 00:33:12,000
collate collated by lower

807
00:33:12,000 --> 00:33:15,440
and uh the process we took was to

808
00:33:15,440 --> 00:33:17,279
essentially adopt the the document

809
00:33:17,279 --> 00:33:19,120
wholesale but add the

810
00:33:19,120 --> 00:33:21,519
in that first new version add those

811
00:33:21,519 --> 00:33:24,320
comments to an appendix a which is the

812
00:33:24,320 --> 00:33:25,679
working group adoption comments because

813
00:33:25,679 --> 00:33:28,159
there are quite a lot of comments um so

814
00:33:28,159 --> 00:33:29,919
you'll see in the draft there's there's

815
00:33:29,919 --> 00:33:32,480
still an appendix containing um

816
00:33:32,480 --> 00:33:35,360
the the comments and uh some responses

817
00:33:35,360 --> 00:33:36,880
to the comments

818
00:33:36,880 --> 00:33:40,080
and we we uh published the draft as the

819
00:33:40,080 --> 00:33:43,519
working group drafters um mpls miad m a

820
00:33:43,519 --> 00:33:46,080
requirement zero and then subsequently

821
00:33:46,080 --> 00:33:48,080
corrected the name to

822
00:33:48,080 --> 00:33:49,559
the m a

823
00:33:49,559 --> 00:33:53,200
requirements um

824
00:33:53,200 --> 00:33:57,039
that addresses we hope um the comments

825
00:33:57,039 --> 00:33:59,200
in in the uh in the working group

826
00:33:59,200 --> 00:34:02,320
adoption and on the subsequent meeting

827
00:34:02,320 --> 00:34:03,519
discussion

828
00:34:03,519 --> 00:34:06,080
um and and in the subsequent revisions

829
00:34:06,080 --> 00:34:08,399
so we intend to remove appendix eight

830
00:34:08,399 --> 00:34:10,879
shortly

831
00:34:10,879 --> 00:34:13,440
next slide

832
00:34:13,520 --> 00:34:16,000
so the main changes um we align the

833
00:34:16,000 --> 00:34:19,839
terminology with um the framework draft

834
00:34:19,839 --> 00:34:21,760
um so essentially what we what we've

835
00:34:21,760 --> 00:34:23,599
done between these two documents is that

836
00:34:23,599 --> 00:34:25,119
we have a core set of terminology

837
00:34:25,119 --> 00:34:26,639
defined in the

838
00:34:26,639 --> 00:34:28,800
in the requirements draft um

839
00:34:28,800 --> 00:34:31,280
and then the framework is is kind of a

840
00:34:31,280 --> 00:34:33,520
superset of that with any new

841
00:34:33,520 --> 00:34:35,199
terminology that's required outside of

842
00:34:35,199 --> 00:34:36,879
the requirements to describe things in

843
00:34:36,879 --> 00:34:39,440
the framework

844
00:34:39,520 --> 00:34:42,560
we've refocused the draft around

845
00:34:42,560 --> 00:34:44,719
network actions instead of

846
00:34:44,719 --> 00:34:47,599
indicators for ancillary data

847
00:34:47,599 --> 00:34:49,918
so we removed ancillary data indicator

848
00:34:49,918 --> 00:34:51,599
and replaced it with network action

849
00:34:51,599 --> 00:34:53,839
indicator

850
00:34:53,839 --> 00:34:56,159
we added a clarification of in stack

851
00:34:56,159 --> 00:34:59,119
versus post stack requirements

852
00:34:59,119 --> 00:35:01,599
that was as a result of the consensus

853
00:35:01,599 --> 00:35:05,359
call that eric discussed earlier

854
00:35:05,359 --> 00:35:06,800
so we say we have a requirement that

855
00:35:06,800 --> 00:35:08,240
addresses the fact that in-stack

856
00:35:08,240 --> 00:35:09,760
ancillary data requires strong

857
00:35:09,760 --> 00:35:11,839
justification

858
00:35:11,839 --> 00:35:13,359
um

859
00:35:13,359 --> 00:35:15,200
we made the distinction between a

860
00:35:15,200 --> 00:35:17,680
network action stub stack indicator

861
00:35:17,680 --> 00:35:19,359
which is

862
00:35:19,359 --> 00:35:22,079
the the m a label in the framework

863
00:35:22,079 --> 00:35:25,119
and a network action indicator itself

864
00:35:25,119 --> 00:35:27,680
um and this kind of distinction allows

865
00:35:27,680 --> 00:35:30,560
the network action indicator and or the

866
00:35:30,560 --> 00:35:32,480
ancillary data to be in stack or post

867
00:35:32,480 --> 00:35:34,800
stack

868
00:35:35,680 --> 00:35:37,839
um we also also clarified that a

869
00:35:37,839 --> 00:35:38,800
solution

870
00:35:38,800 --> 00:35:41,040
solution specs must support or may

871
00:35:41,040 --> 00:35:43,200
support user defined actions so it may

872
00:35:43,200 --> 00:35:45,440
support user defined actions

873
00:35:45,440 --> 00:35:47,440
and if they do they must explicitly

874
00:35:47,440 --> 00:35:49,760
reserve a user-defined range in their

875
00:35:49,760 --> 00:35:51,359
iana policy

876
00:35:51,359 --> 00:35:54,480
for any registry that they defined

877
00:35:54,480 --> 00:35:56,880
and we also reorganize the requirements

878
00:35:56,880 --> 00:36:01,520
into appropriate sections around the

879
00:36:01,520 --> 00:36:03,839
network action sub stack indicator the

880
00:36:03,839 --> 00:36:06,000
network action indicators and the

881
00:36:06,000 --> 00:36:08,000
ancillary data

882
00:36:08,000 --> 00:36:11,359
and also a set of generic requirements

883
00:36:11,359 --> 00:36:14,400
uh next slide

884
00:36:14,640 --> 00:36:16,079
so the the structure that's changed

885
00:36:16,079 --> 00:36:18,000
since the last ietf is is the

886
00:36:18,000 --> 00:36:20,079
terminology um

887
00:36:20,079 --> 00:36:22,079
which contains new terms needed to

888
00:36:22,079 --> 00:36:24,800
define new objects in mpls a set of

889
00:36:24,800 --> 00:36:26,960
generic or general requirements which is

890
00:36:26,960 --> 00:36:28,320
a set of design principles that

891
00:36:28,320 --> 00:36:30,000
underline this work

892
00:36:30,000 --> 00:36:31,920
um requirements on the network action

893
00:36:31,920 --> 00:36:33,680
indicator sub stack

894
00:36:33,680 --> 00:36:35,839
um requirements on the net action

895
00:36:35,839 --> 00:36:38,320
indicators requirements on ancillary

896
00:36:38,320 --> 00:36:40,480
data and the appendix containing the

897
00:36:40,480 --> 00:36:42,079
working group adoption comments which we

898
00:36:42,079 --> 00:36:45,119
intend to remove shortly

899
00:36:45,119 --> 00:36:47,440
next slide

900
00:36:47,440 --> 00:36:49,520
so the next steps so we've we've gone

901
00:36:49,520 --> 00:36:51,040
through many revisions several revisions

902
00:36:51,040 --> 00:36:52,560
of this draft we've reviewed them line

903
00:36:52,560 --> 00:36:55,440
by line in the mpls open design team

904
00:36:55,440 --> 00:36:58,320
we're now on version two of the

905
00:36:58,320 --> 00:37:00,000
working group document

906
00:37:00,000 --> 00:37:00,960
um

907
00:37:00,960 --> 00:37:03,119
the append as i mentioned the appendix

908
00:37:03,119 --> 00:37:05,680
will be removed in the next revision

909
00:37:05,680 --> 00:37:08,079
um we really appreciate further review

910
00:37:08,079 --> 00:37:10,560
and comments posted to the mpls list or

911
00:37:10,560 --> 00:37:13,280
brought up in the mpls open design team

912
00:37:13,280 --> 00:37:15,280
meetings um but the authors believe the

913
00:37:15,280 --> 00:37:16,960
draft is getting pretty mature now and

914
00:37:16,960 --> 00:37:19,520
we hope that from a quality perspective

915
00:37:19,520 --> 00:37:20,720
it's close to

916
00:37:20,720 --> 00:37:22,079
what you would expect from a working

917
00:37:22,079 --> 00:37:25,200
group last school document

918
00:37:25,839 --> 00:37:27,440
uh thank you

919
00:37:27,440 --> 00:37:30,400
okay thank you very much

920
00:37:30,400 --> 00:37:32,240
thank you matthew are there any

921
00:37:32,240 --> 00:37:34,720
questions for clarification for matthew

922
00:37:34,720 --> 00:37:37,680
and and i do want to remind people that

923
00:37:37,680 --> 00:37:41,359
we have about 40 minutes reserved for

924
00:37:41,359 --> 00:37:42,240
open

925
00:37:42,240 --> 00:37:43,839
discussion following all the

926
00:37:43,839 --> 00:37:46,160
presentations so if we want to have any

927
00:37:46,160 --> 00:37:47,839
extended

928
00:37:47,839 --> 00:37:50,160
discussion we can have it then and i see

929
00:37:50,160 --> 00:37:52,800
that lowe has his hand up so lower go

930
00:37:52,800 --> 00:37:55,119
ahead

931
00:37:56,400 --> 00:37:58,560
a question for matthew

932
00:37:58,560 --> 00:38:00,640
what i didn't really follow what you

933
00:38:00,640 --> 00:38:03,359
said about

934
00:38:03,359 --> 00:38:06,480
uh ayan already stressed for

935
00:38:06,480 --> 00:38:09,599
user-defined actions

936
00:38:09,599 --> 00:38:11,280
uh

937
00:38:11,280 --> 00:38:12,560
i think

938
00:38:12,560 --> 00:38:15,280
user-defined actions smile allocate

939
00:38:15,280 --> 00:38:16,800
whatever they want

940
00:38:16,800 --> 00:38:19,599
in diana and that's of the problem the

941
00:38:19,599 --> 00:38:21,680
problem is that the probably in the

942
00:38:21,680 --> 00:38:24,400
standards part of the registry

943
00:38:24,400 --> 00:38:28,079
need some code points to be used for the

944
00:38:28,079 --> 00:38:29,920
user defined actions

945
00:38:29,920 --> 00:38:31,760
isn't that correct

946
00:38:31,760 --> 00:38:33,520
yeah that's that's what that's what i

947
00:38:33,520 --> 00:38:35,760
said um i didn't i don't mean that we i

948
00:38:35,760 --> 00:38:37,839
don't mean that we you allocate an

949
00:38:37,839 --> 00:38:40,240
individual code point for an individual

950
00:38:40,240 --> 00:38:42,640
uh user-defined action i mean you you

951
00:38:42,640 --> 00:38:46,640
reserve a range for user-defined actions

952
00:38:46,640 --> 00:38:48,960
okay thanks

953
00:38:48,960 --> 00:38:50,720
and tony is next

954
00:38:50,720 --> 00:38:52,240
tony go ahead

955
00:38:52,240 --> 00:38:53,760
matthew when can we expect the next

956
00:38:53,760 --> 00:38:55,119
update

957
00:38:55,119 --> 00:38:56,560
um well actually i just posted one on

958
00:38:56,560 --> 00:38:58,240
monday which is version two which is the

959
00:38:58,240 --> 00:38:59,680
one um

960
00:38:59,680 --> 00:39:02,400
i i referred to here i apologize it just

961
00:39:02,400 --> 00:39:05,599
missed the the cutoff um so i i posted

962
00:39:05,599 --> 00:39:08,079
it as soon as as it opened again on on

963
00:39:08,079 --> 00:39:10,240
over the weekend

964
00:39:10,240 --> 00:39:13,240
um

965
00:39:14,800 --> 00:39:17,760
okay well thank you very much matthew

966
00:39:17,760 --> 00:39:21,359
and we're going we're going on next to

967
00:39:21,359 --> 00:39:23,520
jags who's going to be talking about the

968
00:39:23,520 --> 00:39:26,000
m a header if you give me one second i

969
00:39:26,000 --> 00:39:29,839
will put his slides up

970
00:39:39,520 --> 00:39:40,839
okay

971
00:39:40,839 --> 00:39:44,079
jegs yes and would you like me to

972
00:39:44,079 --> 00:39:45,680
control the slides or would you rather

973
00:39:45,680 --> 00:39:47,359
do it yourself uh could you please

974
00:39:47,359 --> 00:39:49,760
control my slides that'd be awesome

975
00:39:49,760 --> 00:39:51,760
okay i'll do it

976
00:39:51,760 --> 00:39:52,800
thank you

977
00:39:52,800 --> 00:39:54,839
yeah so hi my name

978
00:39:54,839 --> 00:39:58,240
is ball x so i'm going to present uh

979
00:39:58,240 --> 00:40:00,720
the presenter draft

980
00:40:00,720 --> 00:40:03,280
jags mpls mna header on behalf of our

981
00:40:03,280 --> 00:40:04,240
authors

982
00:40:04,240 --> 00:40:05,920
uh mr jags

983
00:40:05,920 --> 00:40:07,440
if i can interrupt you just for one

984
00:40:07,440 --> 00:40:09,280
second you have a lot of background

985
00:40:09,280 --> 00:40:10,560
noise where you are i don't know if

986
00:40:10,560 --> 00:40:12,000
there's anything that they can do about

987
00:40:12,000 --> 00:40:12,880
that

988
00:40:12,880 --> 00:40:15,680
uh just a minute

989
00:40:18,480 --> 00:40:19,920
is okay now

990
00:40:19,920 --> 00:40:24,800
much much better thank you much better

991
00:40:24,800 --> 00:40:28,400
yeah uh coming to the next slide please

992
00:40:30,160 --> 00:40:32,079
okay so these are the observations i'm

993
00:40:32,079 --> 00:40:34,000
using in the slides as well as in the

994
00:40:34,000 --> 00:40:36,160
rafter so i just want to put it here so

995
00:40:36,160 --> 00:40:38,800
that you can have a quick reference

996
00:40:38,800 --> 00:40:41,599
next slides please

997
00:40:46,560 --> 00:40:49,280
yeah so as part of this presentation uh

998
00:40:49,280 --> 00:40:51,359
this is my agenda which i'm going to

999
00:40:51,359 --> 00:40:53,839
discuss today uh the first will be the

1000
00:40:53,839 --> 00:40:55,920
scope of our draft and then we're going

1001
00:40:55,920 --> 00:40:57,599
to discuss on the high level solution

1002
00:40:57,599 --> 00:41:00,000
what we took uh to achieve the

1003
00:41:00,000 --> 00:41:02,160
uh and then next one is the

1004
00:41:02,160 --> 00:41:04,960
network action indicator

1005
00:41:04,960 --> 00:41:05,680
and

1006
00:41:05,680 --> 00:41:07,599
then like uh i'm going to discuss on the

1007
00:41:07,599 --> 00:41:09,760
in stack network action encoding format

1008
00:41:09,760 --> 00:41:12,079
different formats um and the

1009
00:41:12,079 --> 00:41:13,839
corresponding examples

1010
00:41:13,839 --> 00:41:16,720
and the next one is the uh backward

1011
00:41:16,720 --> 00:41:19,520
compatibility uh how we're gonna achieve

1012
00:41:19,520 --> 00:41:21,839
with our solution and the advantages of

1013
00:41:21,839 --> 00:41:24,400
our solution and finally uh

1014
00:41:24,400 --> 00:41:26,400
the next steps uh what what we want to

1015
00:41:26,400 --> 00:41:28,720
do uh with our draft

1016
00:41:28,720 --> 00:41:31,200
uh next slide please

1017
00:41:31,200 --> 00:41:33,280
uh as a part of the scope right so like

1018
00:41:33,280 --> 00:41:34,480
um

1019
00:41:34,480 --> 00:41:36,560
we are providing a solution for uh in

1020
00:41:36,560 --> 00:41:39,520
stack and postdoc mna encoding format

1021
00:41:39,520 --> 00:41:42,240
based on the uh m a requirements uh

1022
00:41:42,240 --> 00:41:44,160
according to the draft mentioned here

1023
00:41:44,160 --> 00:41:47,359
aligning with our mna framework uh which

1024
00:41:47,359 --> 00:41:48,960
is mentioned here

1025
00:41:48,960 --> 00:41:52,000
uh next slide please

1026
00:41:52,000 --> 00:41:53,599
okay it's part of the high level

1027
00:41:53,599 --> 00:41:55,040
solution this is a high level solution

1028
00:41:55,040 --> 00:41:56,800
which we took to uh

1029
00:41:56,800 --> 00:41:57,760
come up with a

1030
00:41:57,760 --> 00:42:00,640
solution for m a uh header encoding uh

1031
00:42:00,640 --> 00:42:03,280
to extend uh to action the existing mpls

1032
00:42:03,280 --> 00:42:04,880
header for uh

1033
00:42:04,880 --> 00:42:07,040
mna so we need the two main things the

1034
00:42:07,040 --> 00:42:09,599
first one is the mpls network uh action

1035
00:42:09,599 --> 00:42:12,000
indicators so the top level uh we want

1036
00:42:12,000 --> 00:42:13,760
to have a label to indicate the presence

1037
00:42:13,760 --> 00:42:16,319
of uh network uh action sub stack and

1038
00:42:16,319 --> 00:42:17,839
the next one is the a little bit more

1039
00:42:17,839 --> 00:42:18,960
granular

1040
00:42:18,960 --> 00:42:21,119
so we provide the slab flags to indicate

1041
00:42:21,119 --> 00:42:23,520
the presence of in stack and post

1042
00:42:23,520 --> 00:42:25,440
network actions

1043
00:42:25,440 --> 00:42:27,520
the secondly like

1044
00:42:27,520 --> 00:42:29,520
apart from the network action indicator

1045
00:42:29,520 --> 00:42:30,400
we need

1046
00:42:30,400 --> 00:42:33,839
we need to encode the network action um

1047
00:42:33,839 --> 00:42:35,839
encoding so we can we should come up

1048
00:42:35,839 --> 00:42:37,680
with a format so there's a format

1049
00:42:37,680 --> 00:42:40,319
actually like which describes how the uh

1050
00:42:40,319 --> 00:42:42,640
in stack and post network actions are

1051
00:42:42,640 --> 00:42:44,400
going to be uh encoded

1052
00:42:44,400 --> 00:42:47,520
uh next slide please

1053
00:42:47,839 --> 00:42:50,319
okay so let's go deep dive into the uh

1054
00:42:50,319 --> 00:42:52,400
network action presence indicator as i

1055
00:42:52,400 --> 00:42:54,160
told you like at the top level uh we

1056
00:42:54,160 --> 00:42:56,079
have this network action sub stack

1057
00:42:56,079 --> 00:42:59,440
indicator see a new bspl uh will be

1058
00:42:59,440 --> 00:43:02,800
allocated by iron for this purpose as um

1059
00:43:02,800 --> 00:43:07,440
so this bspls tc and ttl material field

1060
00:43:07,440 --> 00:43:09,359
will not be repurposed

1061
00:43:09,359 --> 00:43:10,560
and then uh

1062
00:43:10,560 --> 00:43:12,880
and then used for any encoding uh to

1063
00:43:12,880 --> 00:43:15,280
maintain the uh backward compatibility

1064
00:43:15,280 --> 00:43:16,319
um

1065
00:43:16,319 --> 00:43:18,480
so uh apart from this uh we we're going

1066
00:43:18,480 --> 00:43:22,160
to encode some flags in the next lse uh

1067
00:43:22,160 --> 00:43:25,520
uh lse so which which is going to have

1068
00:43:25,520 --> 00:43:28,240
granular indicators like in stack

1069
00:43:28,240 --> 00:43:30,319
network action presence indicator so

1070
00:43:30,319 --> 00:43:32,400
this indicates the presence of the

1071
00:43:32,400 --> 00:43:34,400
instax network action that are encoded

1072
00:43:34,400 --> 00:43:36,240
in the packet as shown as shown in the

1073
00:43:36,240 --> 00:43:37,760
figure one

1074
00:43:37,760 --> 00:43:40,160
um the instruct network actions uh can

1075
00:43:40,160 --> 00:43:42,560
be uh two types like one is the flag

1076
00:43:42,560 --> 00:43:44,000
based uh that doesn't require any

1077
00:43:44,000 --> 00:43:46,880
ancillary data and another uh another

1078
00:43:46,880 --> 00:43:48,400
one is uh

1079
00:43:48,400 --> 00:43:49,119
the

1080
00:43:49,119 --> 00:43:51,280
network action that requires an

1081
00:43:51,280 --> 00:43:53,440
ancillary data so we call it as an uh

1082
00:43:53,440 --> 00:43:55,040
opcode based uh that requires a

1083
00:43:55,040 --> 00:43:58,480
necessary data so the next the second uh

1084
00:43:58,480 --> 00:44:00,720
indicator the main indicator is the post

1085
00:44:00,720 --> 00:44:03,119
stack indicator uh so this indicates the

1086
00:44:03,119 --> 00:44:05,680
presence of the uh post uh network

1087
00:44:05,680 --> 00:44:07,760
actions that are encoded in the packet

1088
00:44:07,760 --> 00:44:10,560
so um so by using this indicator so we

1089
00:44:10,560 --> 00:44:13,520
can identify we can we can encode

1090
00:44:13,520 --> 00:44:15,920
both the stack and

1091
00:44:15,920 --> 00:44:18,400
post stack data simultaneously using the

1092
00:44:18,400 --> 00:44:19,359
same

1093
00:44:19,359 --> 00:44:20,720
nasi uh

1094
00:44:20,720 --> 00:44:24,399
header uh next slide please

1095
00:44:26,480 --> 00:44:27,680
so uh

1096
00:44:27,680 --> 00:44:29,599
as i told you before like um uh the

1097
00:44:29,599 --> 00:44:31,760
first one is the flag based uh in stack

1098
00:44:31,760 --> 00:44:34,720
uh mpls network action encoding so this

1099
00:44:34,720 --> 00:44:36,960
is this this is the india network action

1100
00:44:36,960 --> 00:44:39,040
which doesn't need any angular data to

1101
00:44:39,040 --> 00:44:40,079
process the

1102
00:44:40,079 --> 00:44:42,480
specific network actions so uh here

1103
00:44:42,480 --> 00:44:44,560
actually like um uh there are two parts

1104
00:44:44,560 --> 00:44:46,880
one is the uh in stack network action

1105
00:44:46,880 --> 00:44:49,839
header so these are the flags and

1106
00:44:49,839 --> 00:44:51,839
some couple of values which uh which

1107
00:44:51,839 --> 00:44:54,880
would which would help us to

1108
00:44:55,040 --> 00:44:56,560
encode the uh

1109
00:44:56,560 --> 00:44:59,599
the these stack uh network uh actions so

1110
00:44:59,599 --> 00:45:01,839
the ini is the field you know like uh

1111
00:45:01,839 --> 00:45:03,040
which

1112
00:45:03,040 --> 00:45:04,480
is a detailed field which indicates the

1113
00:45:04,480 --> 00:45:06,560
presence of the in stack uh

1114
00:45:06,560 --> 00:45:09,040
mpls network action and then the il is

1115
00:45:09,040 --> 00:45:10,480
the instructor data length it's a three

1116
00:45:10,480 --> 00:45:11,599
bit uh

1117
00:45:11,599 --> 00:45:15,040
value in the ttl field uh this uh this

1118
00:45:15,040 --> 00:45:16,800
this indicates the total length of the

1119
00:45:16,800 --> 00:45:19,599
in stack header encoded by the specific

1120
00:45:19,599 --> 00:45:21,760
nasi indicator so the length is

1121
00:45:21,760 --> 00:45:24,160
represented in the in terms of units

1122
00:45:24,160 --> 00:45:26,240
in the unit of word

1123
00:45:26,240 --> 00:45:28,079
this does not include the

1124
00:45:28,079 --> 00:45:29,200
the header

1125
00:45:29,200 --> 00:45:31,760
or the header word and the last uh last

1126
00:45:31,760 --> 00:45:33,040
one i want to

1127
00:45:33,040 --> 00:45:35,920
tell you that is uh ine it's an in stack

1128
00:45:35,920 --> 00:45:39,440
uh na extension uh indicator so in in uh

1129
00:45:39,440 --> 00:45:41,599
currently uh we can encode you know like

1130
00:45:41,599 --> 00:45:42,960
maximum of uh

1131
00:45:42,960 --> 00:45:45,760
um eight additional seven additional uh

1132
00:45:45,760 --> 00:45:48,880
words apart from the base uh header so

1133
00:45:48,880 --> 00:45:50,640
if you want to extend more than seven in

1134
00:45:50,640 --> 00:45:52,880
the future then this flag would be used

1135
00:45:52,880 --> 00:45:54,800
to extend uh the

1136
00:45:54,800 --> 00:45:56,400
sub stack as well

1137
00:45:56,400 --> 00:45:58,000
um so

1138
00:45:58,000 --> 00:45:59,359
the second part of the second part is

1139
00:45:59,359 --> 00:46:01,760
the flag based uh in stack uh network

1140
00:46:01,760 --> 00:46:04,560
action encoding format so here actually

1141
00:46:04,560 --> 00:46:05,520
like um

1142
00:46:05,520 --> 00:46:08,079
we have a flag based nai so this is

1143
00:46:08,079 --> 00:46:13,040
actually uh the 19-bit field in the uh

1144
00:46:13,040 --> 00:46:15,520
label field and the msp will must be

1145
00:46:15,520 --> 00:46:18,400
always set to one to uh prevent aliasing

1146
00:46:18,400 --> 00:46:24,000
from the uh spls um and the and this uh

1147
00:46:24,000 --> 00:46:26,880
each each and every bit field

1148
00:46:26,880 --> 00:46:29,119
will be uh assigned by ayana for a

1149
00:46:29,119 --> 00:46:31,680
specific application so if application a

1150
00:46:31,680 --> 00:46:33,520
wants an um uh

1151
00:46:33,520 --> 00:46:35,200
uh flag based indicator so then they

1152
00:46:35,200 --> 00:46:37,359
could they could request for ion number

1153
00:46:37,359 --> 00:46:38,800
and then big position and then they

1154
00:46:38,800 --> 00:46:41,119
could use that so that that's gonna

1155
00:46:41,119 --> 00:46:43,040
dictate uh what the network action for

1156
00:46:43,040 --> 00:46:43,760
that

1157
00:46:43,760 --> 00:46:45,760
has to be done

1158
00:46:45,760 --> 00:46:47,760
and there is an e bit uh which which is

1159
00:46:47,760 --> 00:46:49,680
going to indicate that any any one of

1160
00:46:49,680 --> 00:46:53,200
the flag based uh indicator is uh uh hub

1161
00:46:53,200 --> 00:46:55,200
by hop um or

1162
00:46:55,200 --> 00:46:57,760
at the um or it is end to end so if you

1163
00:46:57,760 --> 00:47:00,160
say like any one of the uh flat flag is

1164
00:47:00,160 --> 00:47:03,200
the uh by hop then hop i hope uh uh that

1165
00:47:03,200 --> 00:47:05,440
this e field will be zero else actually

1166
00:47:05,440 --> 00:47:07,839
the uh e field will be one

1167
00:47:07,839 --> 00:47:09,920
uh so there's another field is like uh

1168
00:47:09,920 --> 00:47:12,240
and the tc field will be repurposed to

1169
00:47:12,240 --> 00:47:14,079
use uh to add

1170
00:47:14,079 --> 00:47:15,839
additional data length uh this is

1171
00:47:15,839 --> 00:47:17,839
actually two bit field uh in the ttl to

1172
00:47:17,839 --> 00:47:19,359
indicate the length of the additional

1173
00:47:19,359 --> 00:47:21,520
word that that are encoded to carry the

1174
00:47:21,520 --> 00:47:23,760
additional flag based uh network

1175
00:47:23,760 --> 00:47:25,599
indicator for example currently like we

1176
00:47:25,599 --> 00:47:27,440
can encode a 19

1177
00:47:27,440 --> 00:47:30,319
19 offset fields here so if you say like

1178
00:47:30,319 --> 00:47:32,480
uh the 20th application is coming and

1179
00:47:32,480 --> 00:47:35,200
requesting for additional for a foreign

1180
00:47:35,200 --> 00:47:37,839
flag based indicator then the then the

1181
00:47:37,839 --> 00:47:40,319
adl will be set to uh one so that

1182
00:47:40,319 --> 00:47:44,160
we can add another lse to encode the uh

1183
00:47:44,160 --> 00:47:46,319
the flat best indicator

1184
00:47:46,319 --> 00:47:49,040
next slide please

1185
00:47:50,160 --> 00:47:52,160
so this is the second part of the uh in

1186
00:47:52,160 --> 00:47:54,480
stack uh network action the encoding so

1187
00:47:54,480 --> 00:47:56,319
this is actually opcode based so this is

1188
00:47:56,319 --> 00:47:58,559
the kind of uh network action that needs

1189
00:47:58,559 --> 00:48:00,880
an accelerated data to uh process the

1190
00:48:00,880 --> 00:48:02,240
network actions

1191
00:48:02,240 --> 00:48:04,160
um so here um

1192
00:48:04,160 --> 00:48:04,839
the

1193
00:48:04,839 --> 00:48:08,000
the third word is going to describe like

1194
00:48:08,000 --> 00:48:09,680
what is the uh

1195
00:48:09,680 --> 00:48:11,920
op code and accelerate data and some of

1196
00:48:11,920 --> 00:48:13,200
the informations i'm going to describe

1197
00:48:13,200 --> 00:48:15,520
now so um in this uh in this in this

1198
00:48:15,520 --> 00:48:17,839
upward approach like uh upcode approach

1199
00:48:17,839 --> 00:48:20,400
is basically a kind of a tlv format

1200
00:48:20,400 --> 00:48:22,079
which is successfully used in many

1201
00:48:22,079 --> 00:48:24,400
protocols today and many asics are

1202
00:48:24,400 --> 00:48:27,119
supporting today so here the uh the is

1203
00:48:27,119 --> 00:48:30,319
in nai up code is the eight bit field uh

1204
00:48:30,319 --> 00:48:32,640
this indicates the instax uh network app

1205
00:48:32,640 --> 00:48:33,440
uh

1206
00:48:33,440 --> 00:48:35,839
action uh opcode that

1207
00:48:35,839 --> 00:48:37,440
that should be assigned by

1208
00:48:37,440 --> 00:48:39,680
uh the info for a specific application

1209
00:48:39,680 --> 00:48:41,359
the characteristics of the upgrade must

1210
00:48:41,359 --> 00:48:44,079
be defined while the solution is uh

1211
00:48:44,079 --> 00:48:46,319
developed and requested for the value

1212
00:48:46,319 --> 00:48:49,599
from the inr the ancillary field are you

1213
00:48:49,599 --> 00:48:52,640
know like the uh is 20 bits in total uh

1214
00:48:52,640 --> 00:48:54,559
12 bits from the uh

1215
00:48:54,559 --> 00:48:56,240
from the label field and the eight bits

1216
00:48:56,240 --> 00:48:59,440
from the ttl field will be used for uh

1217
00:48:59,440 --> 00:49:01,280
to encode the uh

1218
00:49:01,280 --> 00:49:03,440
data corresponding to the sub code

1219
00:49:03,440 --> 00:49:06,000
and the adl uh is the additional data

1220
00:49:06,000 --> 00:49:07,839
length and some of the applications uh

1221
00:49:07,839 --> 00:49:10,079
might need to encode more than 40 bits

1222
00:49:10,079 --> 00:49:11,680
of data in the answer

1223
00:49:11,680 --> 00:49:13,280
the ancillary field so those

1224
00:49:13,280 --> 00:49:15,599
applications can use this field to

1225
00:49:15,599 --> 00:49:18,000
extend their uh encoding of ancillary

1226
00:49:18,000 --> 00:49:19,200
data

1227
00:49:19,200 --> 00:49:21,920
and uh the last one is the ebit so this

1228
00:49:21,920 --> 00:49:23,839
is actually a end-to-end processing bit

1229
00:49:23,839 --> 00:49:27,119
the same as the above um so if if it is

1230
00:49:27,119 --> 00:49:29,839
uh if this specific op code has to be

1231
00:49:29,839 --> 00:49:31,280
processed

1232
00:49:31,280 --> 00:49:33,119
or by hop then this field should be set

1233
00:49:33,119 --> 00:49:36,160
to zero else this will be set to one

1234
00:49:36,160 --> 00:49:39,680
can at least move the next slide please

1235
00:49:39,839 --> 00:49:41,680
okay so now let's see uh some of the

1236
00:49:41,680 --> 00:49:44,160
examples so so that you know you'll have

1237
00:49:44,160 --> 00:49:46,400
some idea like how this encoding is

1238
00:49:46,400 --> 00:49:48,319
going to work so this for the example

1239
00:49:48,319 --> 00:49:52,880
one is uh the pure flag flag based uh

1240
00:49:52,880 --> 00:49:56,319
mpls network uh action uh where the uh

1241
00:49:56,319 --> 00:49:58,720
where actually i'm encoding and um

1242
00:49:58,720 --> 00:50:00,800
bit flag bit flag position of one the

1243
00:50:00,800 --> 00:50:04,000
application uh big question one uh is is

1244
00:50:04,000 --> 00:50:06,800
going to send uh it's an uh it it wants

1245
00:50:06,800 --> 00:50:08,720
it uh network actions to be

1246
00:50:08,720 --> 00:50:10,559
uh processed in um

1247
00:50:10,559 --> 00:50:13,359
on the different nodes uh

1248
00:50:13,359 --> 00:50:15,760
so here so here actually the adl field

1249
00:50:15,760 --> 00:50:17,920
will be zero because um uh we are not

1250
00:50:17,920 --> 00:50:20,400
adding any additional uh word apart from

1251
00:50:20,400 --> 00:50:22,800
the uh general general control encoding

1252
00:50:22,800 --> 00:50:26,319
flags um and the end in the end as i

1253
00:50:26,319 --> 00:50:28,160
told you before the ebit is going to be

1254
00:50:28,160 --> 00:50:30,720
set based on the uh um whether the

1255
00:50:30,720 --> 00:50:32,480
processing is going to be uh

1256
00:50:32,480 --> 00:50:34,640
for this oneness end to end or it's uh

1257
00:50:34,640 --> 00:50:36,000
hop by hop

1258
00:50:36,000 --> 00:50:39,119
uh next slide please

1259
00:50:39,119 --> 00:50:41,440
so this is the case you know like um i

1260
00:50:41,440 --> 00:50:43,680
um my uh i have uh

1261
00:50:43,680 --> 00:50:45,920
i have two applications uh needs to

1262
00:50:45,920 --> 00:50:49,280
encode their flag based nis uh the um

1263
00:50:49,280 --> 00:50:51,119
um the first application is uh having

1264
00:50:51,119 --> 00:50:52,559
the bit push and one and second

1265
00:50:52,559 --> 00:50:54,640
application is having the bit portion 20

1266
00:50:54,640 --> 00:50:57,280
right so the uh the the application 20

1267
00:50:57,280 --> 00:50:58,800
cannot uh

1268
00:50:58,800 --> 00:51:01,359
encode their uh big position in the uh

1269
00:51:01,359 --> 00:51:02,559
in the first

1270
00:51:02,559 --> 00:51:05,200
flag based ni so they need to uh use the

1271
00:51:05,200 --> 00:51:07,280
second second word to

1272
00:51:07,280 --> 00:51:10,079
encode the um encode the uh

1273
00:51:10,079 --> 00:51:13,520
uh bit 20. um so uh since actually we're

1274
00:51:13,520 --> 00:51:16,319
adding one more uh word to that uh the

1275
00:51:16,319 --> 00:51:18,800
adl field is going to be set to one so

1276
00:51:18,800 --> 00:51:22,559
this this will help us the uh help the

1277
00:51:22,559 --> 00:51:25,760
the hardware to identify that

1278
00:51:25,760 --> 00:51:28,559
the flag based

1279
00:51:28,559 --> 00:51:30,319
fields are know like uh is going to have

1280
00:51:30,319 --> 00:51:32,160
additional word and then uh it can

1281
00:51:32,160 --> 00:51:34,319
process easily so it'll be like a more

1282
00:51:34,319 --> 00:51:39,040
hardware friendly uh next slide please

1283
00:51:39,040 --> 00:51:40,960
okay so there's a third example where

1284
00:51:40,960 --> 00:51:43,119
actually like um uh we are going to

1285
00:51:43,119 --> 00:51:44,319
encode the

1286
00:51:44,319 --> 00:51:46,800
plain op code based uh we don't have any

1287
00:51:46,800 --> 00:51:49,440
flag based here so here uh in the

1288
00:51:49,440 --> 00:51:51,839
example like we are encoding the

1289
00:51:51,839 --> 00:51:54,720
opcode value 10 that is the application

1290
00:51:54,720 --> 00:51:57,440
which has been assigned up code value 10

1291
00:51:57,440 --> 00:51:59,040
is going to carry its corresponding

1292
00:51:59,040 --> 00:52:01,680
axillary data with it so that all the

1293
00:52:01,680 --> 00:52:03,760
all the nodes can process their network

1294
00:52:03,760 --> 00:52:06,160
actions correspondingly um here actually

1295
00:52:06,160 --> 00:52:08,400
like since the application 10

1296
00:52:08,400 --> 00:52:10,720
application of code 10 doesn't need a

1297
00:52:10,720 --> 00:52:13,359
angular data more than 20 bits

1298
00:52:13,359 --> 00:52:15,040
the adl field

1299
00:52:15,040 --> 00:52:16,880
is set to zero

1300
00:52:16,880 --> 00:52:19,200
so that indicates that uh uh you know

1301
00:52:19,200 --> 00:52:20,319
like uh

1302
00:52:20,319 --> 00:52:22,720
the up code type 10

1303
00:52:22,720 --> 00:52:25,280
has the angular answer data

1304
00:52:25,280 --> 00:52:28,160
which is within the 20 bits offset

1305
00:52:28,160 --> 00:52:30,880
um next slide please

1306
00:52:30,880 --> 00:52:33,599
the fourth example is the case where uh

1307
00:52:33,599 --> 00:52:35,920
um the

1308
00:52:35,920 --> 00:52:37,599
the up the uh

1309
00:52:37,599 --> 00:52:41,280
um network action is needs and uh data

1310
00:52:41,280 --> 00:52:43,440
but uh which it needs more than 20 bits

1311
00:52:43,440 --> 00:52:45,839
of data needs to be encoded so in this

1312
00:52:45,839 --> 00:52:47,599
case actually like since it needs some

1313
00:52:47,599 --> 00:52:50,400
more than 20 bit of data so we need to

1314
00:52:50,400 --> 00:52:53,119
spill into the next word so

1315
00:52:53,119 --> 00:52:55,280
so the adl the additional data length

1316
00:52:55,280 --> 00:52:57,200
value will be set to one so this will

1317
00:52:57,200 --> 00:53:01,280
indicate the hardware that uh the uh the

1318
00:53:01,280 --> 00:53:04,000
upgrade upgrade 12 uh corresponding

1319
00:53:04,000 --> 00:53:05,520
informations are relying in the next

1320
00:53:05,520 --> 00:53:07,200
word as well so it can take those

1321
00:53:07,200 --> 00:53:08,319
buffers and then process it

1322
00:53:08,319 --> 00:53:10,240
correspondingly so this this gives a

1323
00:53:10,240 --> 00:53:13,599
more flexibility and asic

1324
00:53:13,599 --> 00:53:15,760
to uh process it um

1325
00:53:15,760 --> 00:53:19,040
in an easy manner uh and also like uh um

1326
00:53:19,040 --> 00:53:22,640
for um in in some cases right uh um

1327
00:53:22,640 --> 00:53:24,319
the midnotes may not implement a

1328
00:53:24,319 --> 00:53:28,240
specific uh op code so uh if if they if

1329
00:53:28,240 --> 00:53:30,079
they if they don't uh

1330
00:53:30,079 --> 00:53:32,079
implement those specific op quotes then

1331
00:53:32,079 --> 00:53:34,559
actually they can uh skip those uh of

1332
00:53:34,559 --> 00:53:36,000
course and then go to the next uh next

1333
00:53:36,000 --> 00:53:38,480
top code right so for that uh this field

1334
00:53:38,480 --> 00:53:40,880
could be uh very well used by the sxm so

1335
00:53:40,880 --> 00:53:43,119
for example like if uh 12 is not uh

1336
00:53:43,119 --> 00:53:45,920
supported by a mid note so he knows that

1337
00:53:45,920 --> 00:53:49,520
uh um with the adl field uh one so it

1338
00:53:49,520 --> 00:53:52,000
knows that uh the the two word has not

1339
00:53:52,000 --> 00:53:53,440
been used and then you can skip to the

1340
00:53:53,440 --> 00:53:55,839
third one and then start processing the

1341
00:53:55,839 --> 00:53:56,880
next

1342
00:53:56,880 --> 00:53:59,760
next stop code available in the uh stack

1343
00:53:59,760 --> 00:54:01,359
so that that's what actually could be

1344
00:54:01,359 --> 00:54:05,599
very very very helpful in skipping the

1345
00:54:05,599 --> 00:54:08,160
the unknown up codes and processing the

1346
00:54:08,160 --> 00:54:11,119
data um similarly like uh e e will be

1347
00:54:11,119 --> 00:54:13,599
set based on the uh you know like um end

1348
00:54:13,599 --> 00:54:15,200
to end processing or hop i hop uh

1349
00:54:15,200 --> 00:54:18,640
processing uh next slide please

1350
00:54:18,640 --> 00:54:19,920
okay so here actually this is the

1351
00:54:19,920 --> 00:54:22,079
example where uh

1352
00:54:22,079 --> 00:54:24,400
the packet is carrying both the flag

1353
00:54:24,400 --> 00:54:27,200
based and upgrade based um the flag base

1354
00:54:27,200 --> 00:54:30,000
here is carrying the uh the offset one

1355
00:54:30,000 --> 00:54:33,839
uh for the flag based and um up code 10

1356
00:54:33,839 --> 00:54:36,000
with angular data which is less than uh

1357
00:54:36,000 --> 00:54:37,680
or equal to 20

1358
00:54:37,680 --> 00:54:40,000
20 bits has been carried here and that's

1359
00:54:40,000 --> 00:54:41,680
what you can see here so the essence

1360
00:54:41,680 --> 00:54:43,440
actually does not crossing their limit

1361
00:54:43,440 --> 00:54:45,839
uh the adl is zero for the both the

1362
00:54:45,839 --> 00:54:47,520
cases

1363
00:54:47,520 --> 00:54:50,240
next slide please

1364
00:54:50,720 --> 00:54:53,119
so this is actually like some um it's a

1365
00:54:53,119 --> 00:54:55,760
multiple uh op code based and uh flag

1366
00:54:55,760 --> 00:54:57,520
based uh informations are carried in

1367
00:54:57,520 --> 00:55:00,480
this uh packet so here uh if you see the

1368
00:55:00,480 --> 00:55:02,720
uh blackberry flag based

1369
00:55:02,720 --> 00:55:05,359
nai we have uh offset one and four has

1370
00:55:05,359 --> 00:55:06,400
been carried

1371
00:55:06,400 --> 00:55:08,799
um as well as uh if you see the uh

1372
00:55:08,799 --> 00:55:11,200
opcode um if you see the upcoder based

1373
00:55:11,200 --> 00:55:12,000
uh

1374
00:55:12,000 --> 00:55:13,839
uh nis we have we are carrying upgrade

1375
00:55:13,839 --> 00:55:17,119
10 and 20. uh and then like um when we

1376
00:55:17,119 --> 00:55:20,240
see the length i l field right since

1377
00:55:20,240 --> 00:55:22,079
actually like uh apart from the general

1378
00:55:22,079 --> 00:55:24,319
header encoding so we are adding a two

1379
00:55:24,319 --> 00:55:26,559
more word that's the reason i i l equal

1380
00:55:26,559 --> 00:55:29,760
to two uh is set there so that will tell

1381
00:55:29,760 --> 00:55:32,000
the uh asic that you know like it is it

1382
00:55:32,000 --> 00:55:34,799
is encoding uh this my number of bytes

1383
00:55:34,799 --> 00:55:37,680
uh next slide please

1384
00:55:37,680 --> 00:55:39,520
okay so the this is the backward

1385
00:55:39,520 --> 00:55:41,839
compatibility you know like uh um how

1386
00:55:41,839 --> 00:55:45,040
the solution adopted and then what we

1387
00:55:45,040 --> 00:55:48,640
thought about it um so when we uh uh

1388
00:55:48,640 --> 00:55:50,480
when we introduce this mna and then if

1389
00:55:50,480 --> 00:55:52,720
the when the header no at the head node

1390
00:55:52,720 --> 00:55:55,359
uh needs to encode this mna into the

1391
00:55:55,359 --> 00:55:57,599
mpls stack then it should uh it should

1392
00:55:57,599 --> 00:55:59,119
it should depend on the

1393
00:55:59,119 --> 00:56:01,040
mma capability so the control plane

1394
00:56:01,040 --> 00:56:03,200
needs to uh inform about the semantic

1395
00:56:03,200 --> 00:56:05,119
capability of the end node that needs to

1396
00:56:05,119 --> 00:56:08,160
be that needs to process the uh m m so

1397
00:56:08,160 --> 00:56:09,839
in worst case you know like if you say

1398
00:56:09,839 --> 00:56:10,799
like uh

1399
00:56:10,799 --> 00:56:12,960
there's some change in the topology and

1400
00:56:12,960 --> 00:56:14,640
that's it

1401
00:56:14,640 --> 00:56:17,119
in that case right so uh even though the

1402
00:56:17,119 --> 00:56:19,839
the end node is not uh aware of this mna

1403
00:56:19,839 --> 00:56:23,599
capability since we are using the spl uh

1404
00:56:23,599 --> 00:56:24,559
uh

1405
00:56:24,559 --> 00:56:26,960
uh this packet uh since our spl is not

1406
00:56:26,960 --> 00:56:30,000
is not able to process by the specific

1407
00:56:30,000 --> 00:56:32,079
node the specific packet will be dropped

1408
00:56:32,079 --> 00:56:33,520
in this case

1409
00:56:33,520 --> 00:56:35,359
uh these the second

1410
00:56:35,359 --> 00:56:38,079
comparability is like ecmp uh

1411
00:56:38,079 --> 00:56:42,480
icmp behavior um for here actually like

1412
00:56:42,480 --> 00:56:44,240
the the labels in the label stack does

1413
00:56:44,240 --> 00:56:45,599
not change uh

1414
00:56:45,599 --> 00:56:48,640
for uh for a flow so um so like you know

1415
00:56:48,640 --> 00:56:50,880
like uh the ecmp is going to remain same

1416
00:56:50,880 --> 00:56:52,720
for that specific flow so we are not

1417
00:56:52,720 --> 00:56:55,680
disturbing the uh acmp flow as such

1418
00:56:55,680 --> 00:56:57,359
um

1419
00:56:57,359 --> 00:56:59,599
uh third one is like you know like uh so

1420
00:56:59,599 --> 00:57:02,319
in our design we make sure that uh um

1421
00:57:02,319 --> 00:57:04,480
any of the mid notes or legacy notes you

1422
00:57:04,480 --> 00:57:06,720
know like it doesn't uh interpret our

1423
00:57:06,720 --> 00:57:08,000
data

1424
00:57:08,000 --> 00:57:10,559
for an um

1425
00:57:10,559 --> 00:57:12,960
base spl uh spls which we already

1426
00:57:12,960 --> 00:57:14,319
defined

1427
00:57:14,319 --> 00:57:15,280
um

1428
00:57:15,280 --> 00:57:18,799
the fourth one is the uh the the uh

1429
00:57:18,799 --> 00:57:21,040
the ultimate node uh uh with the

1430
00:57:21,040 --> 00:57:24,400
detailed propagation um behavior does

1431
00:57:24,400 --> 00:57:26,720
not corrupt the m a stack uh that's the

1432
00:57:26,720 --> 00:57:28,400
reason no like we skipped

1433
00:57:28,400 --> 00:57:30,160
encoding the information in the top

1434
00:57:30,160 --> 00:57:31,359
level um

1435
00:57:31,359 --> 00:57:34,160
uh in the in the in the um

1436
00:57:34,160 --> 00:57:37,119
in the bspls ttc tdl field and then we

1437
00:57:37,119 --> 00:57:39,040
used the next

1438
00:57:39,040 --> 00:57:42,319
next uh word to encode the uh

1439
00:57:42,319 --> 00:57:45,839
um those um common flags encoding flags

1440
00:57:45,839 --> 00:57:46,880
uh

1441
00:57:46,880 --> 00:57:48,799
for the mna

1442
00:57:48,799 --> 00:57:51,599
uh the last one is um

1443
00:57:51,599 --> 00:57:54,960
since actually like we have opcode-based

1444
00:57:54,960 --> 00:57:58,079
offsets to place our postac data

1445
00:57:58,079 --> 00:58:00,640
wherever we like so this can coexist

1446
00:58:00,640 --> 00:58:02,960
with any existing uh

1447
00:58:02,960 --> 00:58:06,640
dash or any other architectures we have

1448
00:58:06,640 --> 00:58:11,440
um next jags we're well past time so

1449
00:58:11,440 --> 00:58:14,640
can you skip to the conclusion

1450
00:58:14,640 --> 00:58:16,240
yeah i'll just quickly show the next

1451
00:58:16,240 --> 00:58:18,960
line and that is my last play okay very

1452
00:58:18,960 --> 00:58:19,920
good

1453
00:58:19,920 --> 00:58:23,760
yeah and it also uh one second i i see

1454
00:58:23,760 --> 00:58:26,079
that greg and tariq have their hands up

1455
00:58:26,079 --> 00:58:28,880
um because we're past time on this talk

1456
00:58:28,880 --> 00:58:30,319
i'd like to

1457
00:58:30,319 --> 00:58:33,760
reserve your comments for the general

1458
00:58:33,760 --> 00:58:37,839
discussion time if that's fine so just

1459
00:58:37,839 --> 00:58:39,920
keep them in mind and and uh come back

1460
00:58:39,920 --> 00:58:41,200
then thank you

1461
00:58:41,200 --> 00:58:42,559
okay jags

1462
00:58:42,559 --> 00:58:44,559
yeah sure uh so yeah so this is the main

1463
00:58:44,559 --> 00:58:46,559
advantage i just i want to highlight you

1464
00:58:46,559 --> 00:58:47,839
know like uh

1465
00:58:47,839 --> 00:58:50,799
our uh our architecture is more flexible

1466
00:58:50,799 --> 00:58:52,720
since it's upcode based it can be placed

1467
00:58:52,720 --> 00:58:55,119
anywhere in the stack and the next one

1468
00:58:55,119 --> 00:58:58,240
is the mnen coding is extensible since

1469
00:58:58,240 --> 00:59:00,079
it's opcode like you know we have a

1470
00:59:00,079 --> 00:59:02,319
flash to extend the up codes even in the

1471
00:59:02,319 --> 00:59:04,640
future um the the fourth point is very

1472
00:59:04,640 --> 00:59:06,559
very important for our our case because

1473
00:59:06,559 --> 00:59:09,040
uh this is actually uh hardware password

1474
00:59:09,040 --> 00:59:11,359
friendly the length field of m a

1475
00:59:11,359 --> 00:59:13,920
substract allows to uh easily uh skip

1476
00:59:13,920 --> 00:59:15,920
the sub stack as i described before

1477
00:59:15,920 --> 00:59:18,880
um and network action opcode uh the

1478
00:59:18,880 --> 00:59:20,640
answer data and the scope and length

1479
00:59:20,640 --> 00:59:22,160
right so the ttl

1480
00:59:22,160 --> 00:59:24,720
tlb kind of format has been encoded here

1481
00:59:24,720 --> 00:59:26,640
so this is this is easy for the hardware

1482
00:59:26,640 --> 00:59:28,400
to process the data and then they can

1483
00:59:28,400 --> 00:59:30,640
use the existing uh parser

1484
00:59:30,640 --> 00:59:33,040
to parts of data um

1485
00:59:33,040 --> 00:59:34,880
and the next one is that the msd

1486
00:59:34,880 --> 00:59:37,280
efficiency

1487
00:59:37,280 --> 00:59:38,000
so

1488
00:59:38,000 --> 00:59:39,920
since actually we encode all these

1489
00:59:39,920 --> 00:59:40,880
flags

1490
00:59:40,880 --> 00:59:42,799
so the msd

1491
00:59:42,799 --> 00:59:45,040
is sufficiently used

1492
00:59:45,040 --> 00:59:47,040
the backward compatibility with the

1493
00:59:47,040 --> 00:59:49,359
existing network we make sure that uh

1494
00:59:49,359 --> 00:59:51,440
it's not disturbed and the last one is

1495
00:59:51,440 --> 00:59:53,920
uh it's uh ecp friendly so even actually

1496
00:59:53,920 --> 00:59:55,680
like if any anybody wants to encode the

1497
00:59:55,680 --> 00:59:58,559
data which needs to be changed even even

1498
00:59:58,559 --> 01:00:00,720
for the same flow that could happen uh

1499
01:00:00,720 --> 01:00:02,400
by changing by changing the information

1500
01:00:02,400 --> 01:00:04,319
in the uh dtl field

1501
01:00:04,319 --> 01:00:08,400
um yeah next please that's my last play

1502
01:00:08,799 --> 01:00:11,760
yeah thanks uh thank you very much and

1503
01:00:11,760 --> 01:00:14,000
welcome my review comments and feedbacks

1504
01:00:14,000 --> 01:00:15,760
there are strong interests for from

1505
01:00:15,760 --> 01:00:17,280
multiple vendors and operators on the

1506
01:00:17,280 --> 01:00:20,480
solution and we request uh mpls working

1507
01:00:20,480 --> 01:00:22,400
report option thank you

1508
01:00:22,400 --> 01:00:24,880
okay so thank you very much jax and i'm

1509
01:00:24,880 --> 01:00:28,559
going to move on to um how you wait one

1510
01:00:28,559 --> 01:00:32,240
second let me get how you slides

1511
01:00:40,880 --> 01:00:42,640
okay how are you

1512
01:00:42,640 --> 01:00:43,760
clear

1513
01:00:43,760 --> 01:00:46,400
yep we can hear you great um would would

1514
01:00:46,400 --> 01:00:48,319
you would you like me to move the slides

1515
01:00:48,319 --> 01:00:50,640
or would you rather do it yourself

1516
01:00:50,640 --> 01:00:53,119
uh yeah maybe you can

1517
01:00:53,119 --> 01:00:54,480
okay

1518
01:00:54,480 --> 01:00:57,440
okay i'll take care of it thanks

1519
01:00:57,440 --> 01:00:59,200
yeah it's extraordinary i'm i'm the

1520
01:00:59,200 --> 01:01:02,000
first on-site presenter um good to see

1521
01:01:02,000 --> 01:01:03,440
everybody

1522
01:01:03,440 --> 01:01:04,400
again

1523
01:01:04,400 --> 01:01:06,000
uh today i'm going to

1524
01:01:06,000 --> 01:01:09,200
give you a quick review

1525
01:01:09,200 --> 01:01:11,359
about update of our npr's extension

1526
01:01:11,359 --> 01:01:15,759
header draft next slide please

1527
01:01:16,880 --> 01:01:19,680
yeah we published the initial version in

1528
01:01:19,680 --> 01:01:22,640
2018 and since then it has been evolved

1529
01:01:22,640 --> 01:01:24,880
to version zero seven today

1530
01:01:24,880 --> 01:01:26,880
is uh uh

1531
01:01:26,880 --> 01:01:29,680
based on the numerous discussions in the

1532
01:01:29,680 --> 01:01:31,680
open design team

1533
01:01:31,680 --> 01:01:32,480
and

1534
01:01:32,480 --> 01:01:35,359
now the title is a change to ips post

1535
01:01:35,359 --> 01:01:37,920
stack extension header to reflect or

1536
01:01:37,920 --> 01:01:41,200
focus on in this draft is only on how we

1537
01:01:41,200 --> 01:01:42,480
encode the

1538
01:01:42,480 --> 01:01:45,119
uh mps network actions

1539
01:01:45,119 --> 01:01:46,480
after the

1540
01:01:46,480 --> 01:01:48,559
label stack

1541
01:01:48,559 --> 01:01:49,680
and

1542
01:01:49,680 --> 01:01:53,520
also we in this new version we align the

1543
01:01:53,520 --> 01:01:55,200
terms with

1544
01:01:55,200 --> 01:01:57,520
what's defined specified in the mlna

1545
01:01:57,520 --> 01:02:00,160
requirements and framework documents and

1546
01:02:00,160 --> 01:02:02,559
we also add several new authors

1547
01:02:02,559 --> 01:02:05,799
next slides

1548
01:02:07,200 --> 01:02:10,000
yeah first a quick recap about what mpls

1549
01:02:10,000 --> 01:02:11,839
extension header is about

1550
01:02:11,839 --> 01:02:12,559
uh

1551
01:02:12,559 --> 01:02:15,200
obviously we will need some indicators

1552
01:02:15,200 --> 01:02:18,319
in the label stack to tell us we have

1553
01:02:18,319 --> 01:02:20,960
extension headers after the label stack

1554
01:02:20,960 --> 01:02:23,440
but how it's defined is out of scope of

1555
01:02:23,440 --> 01:02:25,920
this document in this document we only

1556
01:02:25,920 --> 01:02:28,880
specify how the extension header itself

1557
01:02:28,880 --> 01:02:31,599
is encoded after the label stack

1558
01:02:31,599 --> 01:02:33,440
as you can see in this

1559
01:02:33,440 --> 01:02:34,480
figure

1560
01:02:34,480 --> 01:02:36,079
up to the label stack

1561
01:02:36,079 --> 01:02:38,799
we will first have a header of extension

1562
01:02:38,799 --> 01:02:41,760
header which is basically a summary of

1563
01:02:41,760 --> 01:02:43,440
what's what follows

1564
01:02:43,440 --> 01:02:45,760
it tells you how many header extension

1565
01:02:45,760 --> 01:02:47,440
headers you will have

1566
01:02:47,440 --> 01:02:49,359
what's the total length of that

1567
01:02:49,359 --> 01:02:51,440
and it also provides the information

1568
01:02:51,440 --> 01:02:53,760
about the original high upper layer

1569
01:02:53,760 --> 01:02:55,280
protocol type

1570
01:02:55,280 --> 01:02:58,480
so this is will be useful to tell you uh

1571
01:02:58,480 --> 01:03:00,640
with the original protocol layer 4

1572
01:03:00,640 --> 01:03:02,880
protocols in the packet

1573
01:03:02,880 --> 01:03:04,880
and also it's tell you what's the next

1574
01:03:04,880 --> 01:03:06,799
headers type

1575
01:03:06,799 --> 01:03:10,079
and after uh this uh summary you will

1576
01:03:10,079 --> 01:03:11,039
see a

1577
01:03:11,039 --> 01:03:13,760
set of standard containers

1578
01:03:13,760 --> 01:03:18,400
uh each of them is a extension header

1579
01:03:18,400 --> 01:03:20,079
which will

1580
01:03:20,079 --> 01:03:21,359
contain a

1581
01:03:21,359 --> 01:03:22,960
specific network

1582
01:03:22,960 --> 01:03:24,319
action

1583
01:03:24,319 --> 01:03:27,520
and each container has a standard

1584
01:03:27,520 --> 01:03:29,440
starting with a standard

1585
01:03:29,440 --> 01:03:30,400
words

1586
01:03:30,400 --> 01:03:31,839
tell you the

1587
01:03:31,839 --> 01:03:34,319
next headers type and the current

1588
01:03:34,319 --> 01:03:36,240
headers lens

1589
01:03:36,240 --> 01:03:38,799
this is a very similar to

1590
01:03:38,799 --> 01:03:40,880
ipv6 extension header if you are

1591
01:03:40,880 --> 01:03:43,599
familiar familiar with that

1592
01:03:43,599 --> 01:03:45,680
uh so with this arrangement we will

1593
01:03:45,680 --> 01:03:48,319
support up to 15 extension headers in a

1594
01:03:48,319 --> 01:03:50,160
single package

1595
01:03:50,160 --> 01:03:51,760
and then

1596
01:03:51,760 --> 01:03:53,200
if we

1597
01:03:53,200 --> 01:03:55,039
based on the length arrangement we can

1598
01:03:55,039 --> 01:03:57,920
support uh the maximum length of all the

1599
01:03:57,920 --> 01:04:00,960
extent headers can be up to 1k bytes in

1600
01:04:00,960 --> 01:04:02,720
the single packet

1601
01:04:02,720 --> 01:04:05,839
and we do allow uh you only have this

1602
01:04:05,839 --> 01:04:08,079
header of exchange header but followed

1603
01:04:08,079 --> 01:04:10,160
by zero extent headers

1604
01:04:10,160 --> 01:04:11,599
so this uh

1605
01:04:11,599 --> 01:04:14,720
can be used to indicate the type of

1606
01:04:14,720 --> 01:04:16,559
upper layer protocol

1607
01:04:16,559 --> 01:04:19,359
and also it supports the potential use

1608
01:04:19,359 --> 01:04:20,240
of

1609
01:04:20,240 --> 01:04:22,559
add and remove exchange headers on the

1610
01:04:22,559 --> 01:04:23,760
path

1611
01:04:23,760 --> 01:04:27,319
next slides please

1612
01:04:30,880 --> 01:04:31,920
so

1613
01:04:31,920 --> 01:04:35,039
we define several new next header types

1614
01:04:35,039 --> 01:04:37,839
in this document

1615
01:04:37,839 --> 01:04:40,079
first we want to share the code point

1616
01:04:40,079 --> 01:04:42,480
with ip protocol numbers which means we

1617
01:04:42,480 --> 01:04:45,039
will apply i need to

1618
01:04:45,039 --> 01:04:46,400
apply new

1619
01:04:46,400 --> 01:04:49,200
protocol numbers from the same

1620
01:04:49,200 --> 01:04:51,039
same registry

1621
01:04:51,039 --> 01:04:53,119
and the new type defined in this

1622
01:04:53,119 --> 01:04:55,839
document is of the first one is a num

1623
01:04:55,839 --> 01:04:59,520
which means no uh next extent header and

1624
01:04:59,520 --> 01:05:02,720
the payload uh after this extent header

1625
01:05:02,720 --> 01:05:04,640
this is the last one

1626
01:05:04,640 --> 01:05:07,119
so this can be used for special packages

1627
01:05:07,119 --> 01:05:09,200
such as the probing package

1628
01:05:09,200 --> 01:05:11,359
the second type is unknown

1629
01:05:11,359 --> 01:05:13,920
which means this this can only be used

1630
01:05:13,920 --> 01:05:15,839
in elasticstation header

1631
01:05:15,839 --> 01:05:17,760
which basically tell you okay what's a

1632
01:05:17,760 --> 01:05:19,839
payload type is we don't know

1633
01:05:19,839 --> 01:05:21,680
this is a compatible with the current

1634
01:05:21,680 --> 01:05:24,079
practice in ips

1635
01:05:24,079 --> 01:05:28,160
and the next type is a mpls means

1636
01:05:28,160 --> 01:05:30,640
another nps label stack follows its

1637
01:05:30,640 --> 01:05:32,400
current extension header

1638
01:05:32,400 --> 01:05:34,240
this is a very useful for the

1639
01:05:34,240 --> 01:05:36,400
hierarchical use cases

1640
01:05:36,400 --> 01:05:39,359
in which you have a multi level of

1641
01:05:39,359 --> 01:05:42,480
manufacturable stack

1642
01:05:43,440 --> 01:05:44,640
and

1643
01:05:44,640 --> 01:05:47,039
all the extension headers can be skipped

1644
01:05:47,039 --> 01:05:49,680
in one step because we know

1645
01:05:49,680 --> 01:05:52,799
the overall size of these headers

1646
01:05:52,799 --> 01:05:55,839
so it allows us to quickly access the

1647
01:05:55,839 --> 01:05:59,279
original up layer protocol

1648
01:05:59,440 --> 01:06:01,520
and also we

1649
01:06:01,520 --> 01:06:04,480
explicitly support two type of extension

1650
01:06:04,480 --> 01:06:05,599
headers

1651
01:06:05,599 --> 01:06:08,880
end-to-end tab and help help type

1652
01:06:08,880 --> 01:06:11,599
and we require the end-to-end type

1653
01:06:11,599 --> 01:06:15,200
exchange headers must be located

1654
01:06:15,200 --> 01:06:18,799
before the uh oh a bit below the hop by

1655
01:06:18,799 --> 01:06:21,599
hop because hope high hop would not need

1656
01:06:21,599 --> 01:06:22,480
to be

1657
01:06:22,480 --> 01:06:24,640
processed every hop

1658
01:06:24,640 --> 01:06:27,920
so uh you you have to put a hph

1659
01:06:27,920 --> 01:06:30,880
type first and followed by uh and then

1660
01:06:30,880 --> 01:06:32,720
after that you will have the end to end

1661
01:06:32,720 --> 01:06:35,440
type so this can help

1662
01:06:35,440 --> 01:06:36,480
us to

1663
01:06:36,480 --> 01:06:39,039
optimize the performance

1664
01:06:39,039 --> 01:06:41,039
and

1665
01:06:41,039 --> 01:06:43,280
you can see each extension header is

1666
01:06:43,280 --> 01:06:44,720
just a stand

1667
01:06:44,720 --> 01:06:46,720
standard container

1668
01:06:46,720 --> 01:06:48,000
and

1669
01:06:48,000 --> 01:06:50,319
it allows to freely define

1670
01:06:50,319 --> 01:06:51,599
newer

1671
01:06:51,599 --> 01:06:54,319
applications in the future to put it in

1672
01:06:54,319 --> 01:06:55,200
the

1673
01:06:55,200 --> 01:06:56,799
extension header

1674
01:06:56,799 --> 01:07:00,440
next slides please

1675
01:07:00,480 --> 01:07:02,960
and we have several other companion

1676
01:07:02,960 --> 01:07:05,680
documents uh with this one

1677
01:07:05,680 --> 01:07:07,520
the first one is uh

1678
01:07:07,520 --> 01:07:11,039
actually a summary of a possible method

1679
01:07:11,039 --> 01:07:15,119
for the exchange header indicator

1680
01:07:15,119 --> 01:07:16,720
but

1681
01:07:16,720 --> 01:07:19,119
we we don't want progress this

1682
01:07:19,119 --> 01:07:21,200
document further

1683
01:07:21,200 --> 01:07:24,240
we will retire it once a standard method

1684
01:07:24,240 --> 01:07:25,599
is chosen

1685
01:07:25,599 --> 01:07:28,000
by the working group

1686
01:07:28,000 --> 01:07:31,039
but you can take a look at that and it

1687
01:07:31,039 --> 01:07:34,240
basically covers every possibilities we

1688
01:07:34,240 --> 01:07:37,200
have discussed up to now

1689
01:07:37,200 --> 01:07:39,760
and the second document is called npr's

1690
01:07:39,760 --> 01:07:42,240
extension header architecture

1691
01:07:42,240 --> 01:07:43,599
this is

1692
01:07:43,599 --> 01:07:45,599
not a network action architecture is

1693
01:07:45,599 --> 01:07:48,319
actually about the

1694
01:07:48,319 --> 01:07:49,359
network

1695
01:07:49,359 --> 01:07:52,160
the the network architecture to operate

1696
01:07:52,160 --> 01:07:53,280
this uh

1697
01:07:53,280 --> 01:07:55,520
mps extension header

1698
01:07:55,520 --> 01:07:56,400
for example

1699
01:07:56,400 --> 01:07:59,200
it describes several terms

1700
01:07:59,200 --> 01:08:02,160
like the extension header pass

1701
01:08:02,160 --> 01:08:03,920
was this relationship with a little

1702
01:08:03,920 --> 01:08:05,680
switching pass

1703
01:08:05,680 --> 01:08:07,920
and we will have extension header

1704
01:08:07,920 --> 01:08:10,880
capable and incapable nodes and how we

1705
01:08:10,880 --> 01:08:12,000
will

1706
01:08:12,000 --> 01:08:14,240
announce such capabilities in the

1707
01:08:14,240 --> 01:08:16,560
network

1708
01:08:16,560 --> 01:08:19,439
such concept is actually is common also

1709
01:08:19,439 --> 01:08:21,839
to the in in stack

1710
01:08:21,839 --> 01:08:23,679
network action

1711
01:08:23,679 --> 01:08:26,080
and therefore it's possible to involve

1712
01:08:26,080 --> 01:08:28,479
this document

1713
01:08:28,479 --> 01:08:29,600
for the

1714
01:08:29,600 --> 01:08:32,000
a network architecture because uh we

1715
01:08:32,000 --> 01:08:33,679
think the concepts are covered in this

1716
01:08:33,679 --> 01:08:36,719
document so very useful there

1717
01:08:36,719 --> 01:08:39,439
the last complaining document is about

1718
01:08:39,439 --> 01:08:41,679
mps extension header label stack

1719
01:08:41,679 --> 01:08:43,120
operations

1720
01:08:43,120 --> 01:08:45,120
uh it's a kind of uh

1721
01:08:45,120 --> 01:08:48,000
optimized performance optimization

1722
01:08:48,000 --> 01:08:49,839
document

1723
01:08:49,839 --> 01:08:52,640
basically uh since the

1724
01:08:52,640 --> 01:08:54,158
label

1725
01:08:54,158 --> 01:08:56,640
sensor action itself can be deeply

1726
01:08:56,640 --> 01:08:58,799
embedded in the package

1727
01:08:58,799 --> 01:09:01,759
then if we uh we can based on the top

1728
01:09:01,759 --> 01:09:03,920
label we can uh tell

1729
01:09:03,920 --> 01:09:05,920
there is some

1730
01:09:05,920 --> 01:09:08,399
actions in the package that will be

1731
01:09:08,399 --> 01:09:11,279
useful help the node to

1732
01:09:11,279 --> 01:09:12,319
to

1733
01:09:12,319 --> 01:09:15,759
decide if we want to examine the

1734
01:09:15,759 --> 01:09:18,000
label stack folder or not

1735
01:09:18,000 --> 01:09:18,880
so

1736
01:09:18,880 --> 01:09:21,839
the idea of that you can use some

1737
01:09:21,839 --> 01:09:23,759
extension header uh

1738
01:09:23,759 --> 01:09:26,479
uh forward eq equipment class label uh

1739
01:09:26,479 --> 01:09:29,839
effect label uh to indicate that uh if

1740
01:09:29,839 --> 01:09:30,880
one node

1741
01:09:30,880 --> 01:09:33,839
actually uh figure out there are some

1742
01:09:33,839 --> 01:09:37,679
there is such action labels on or not in

1743
01:09:37,679 --> 01:09:39,120
the package

1744
01:09:39,120 --> 01:09:40,158
so

1745
01:09:40,158 --> 01:09:42,640
similarly this concept is also

1746
01:09:42,640 --> 01:09:45,759
applicable to the instax

1747
01:09:45,759 --> 01:09:47,279
network action

1748
01:09:47,279 --> 01:09:48,640
so

1749
01:09:48,640 --> 01:09:50,799
it's possible to involve it to be a

1750
01:09:50,799 --> 01:09:52,880
generic method for

1751
01:09:52,880 --> 01:09:56,080
nps networking as well

1752
01:09:56,080 --> 01:09:58,640
next slides

1753
01:09:59,520 --> 01:10:02,400
so this document is already pretty

1754
01:10:02,400 --> 01:10:04,960
mature after uh many

1755
01:10:04,960 --> 01:10:08,480
repeat different regions so therefore we

1756
01:10:08,480 --> 01:10:10,560
also request the working group to adopt

1757
01:10:10,560 --> 01:10:11,920
this as a

1758
01:10:11,920 --> 01:10:14,800
solution for supporting postdeck network

1759
01:10:14,800 --> 01:10:17,360
actions in mpis

1760
01:10:17,360 --> 01:10:18,960
and uh

1761
01:10:18,960 --> 01:10:20,640
um

1762
01:10:20,640 --> 01:10:21,679
well

1763
01:10:21,679 --> 01:10:23,760
also uh we

1764
01:10:23,760 --> 01:10:24,800
we will

1765
01:10:24,800 --> 01:10:27,600
uh next step uh the key work is to

1766
01:10:27,600 --> 01:10:30,320
determine actually what's the extension

1767
01:10:30,320 --> 01:10:32,239
header indicator

1768
01:10:32,239 --> 01:10:35,520
uh scheme we will we need to make that

1769
01:10:35,520 --> 01:10:37,600
coherent with uh

1770
01:10:37,600 --> 01:10:39,840
also the indicator for in in stack

1771
01:10:39,840 --> 01:10:42,000
network actions

1772
01:10:42,000 --> 01:10:44,080
and also as the next network we will

1773
01:10:44,080 --> 01:10:46,560
expand the scope of other exchange

1774
01:10:46,560 --> 01:10:49,440
header companion document to make it uh

1775
01:10:49,440 --> 01:10:50,800
suitable for

1776
01:10:50,800 --> 01:10:51,600
the

1777
01:10:51,600 --> 01:10:52,480
uh

1778
01:10:52,480 --> 01:10:54,000
mna work

1779
01:10:54,000 --> 01:10:55,199
thank you

1780
01:10:55,199 --> 01:10:57,920
okay thank you very much greg mursky has

1781
01:10:57,920 --> 01:11:00,719
his hand up uh so

1782
01:11:00,719 --> 01:11:03,600
greg what's your question

1783
01:11:05,040 --> 01:11:06,320
um

1784
01:11:06,320 --> 01:11:08,000
gregorsky erickson

1785
01:11:08,000 --> 01:11:10,960
so um a little bit confused with the

1786
01:11:10,960 --> 01:11:14,159
order of your next next steps

1787
01:11:14,159 --> 01:11:18,320
because it appears that you are

1788
01:11:18,320 --> 01:11:19,840
proposing

1789
01:11:19,840 --> 01:11:22,800
adopting this document as a partial

1790
01:11:22,800 --> 01:11:24,960
solution to

1791
01:11:24,960 --> 01:11:27,040
mma requirements

1792
01:11:27,040 --> 01:11:29,040
yes

1793
01:11:29,040 --> 01:11:30,080
but

1794
01:11:30,080 --> 01:11:32,000
it seems that

1795
01:11:32,000 --> 01:11:36,320
as is this document does not address all

1796
01:11:36,320 --> 01:11:38,960
m a requirement documents which adopted

1797
01:11:38,960 --> 01:11:41,600
by the working group

1798
01:11:41,600 --> 01:11:42,719
yeah

1799
01:11:42,719 --> 01:11:44,400
this is a this document is about the

1800
01:11:44,400 --> 01:11:46,719
post that encoding and i think this is

1801
01:11:46,719 --> 01:11:48,320
an independent part

1802
01:11:48,320 --> 01:11:49,199
uh

1803
01:11:49,199 --> 01:11:51,679
which can be developed in parallel with

1804
01:11:51,679 --> 01:11:52,480
a

1805
01:11:52,480 --> 01:11:54,400
insect um

1806
01:11:54,400 --> 01:11:57,120
with the indicator and also the instead

1807
01:11:57,120 --> 01:12:01,280
action um i i think it will be

1808
01:12:01,280 --> 01:12:02,080
more

1809
01:12:02,080 --> 01:12:03,679
helpful

1810
01:12:03,679 --> 01:12:08,080
to discuss the solution that addresses

1811
01:12:08,080 --> 01:12:10,800
all requirements that adopted by the

1812
01:12:10,800 --> 01:12:13,920
working group not a partial solution

1813
01:12:13,920 --> 01:12:16,320
thank you

1814
01:12:17,360 --> 01:12:19,440
okay

1815
01:12:19,440 --> 01:12:21,920
thank you very much how you and we're

1816
01:12:21,920 --> 01:12:25,520
going to now move on to karidi

1817
01:12:25,520 --> 01:12:28,000
and karidi is going to be our last set

1818
01:12:28,000 --> 01:12:31,360
of formal slides and following kiriti we

1819
01:12:31,360 --> 01:12:34,560
will have time for open discussion uh

1820
01:12:34,560 --> 01:12:38,480
let me just load coity slides here

1821
01:12:42,640 --> 01:12:44,320
okay and greedy would you like me to

1822
01:12:44,320 --> 01:12:46,239
move the slides for you

1823
01:12:46,239 --> 01:12:47,520
yes please

1824
01:12:47,520 --> 01:12:49,520
okay very good and if he'd stand closer

1825
01:12:49,520 --> 01:12:51,840
to the mic

1826
01:12:54,159 --> 01:12:56,239
doing my checkbook

1827
01:12:56,239 --> 01:12:58,239
yes okay thank you

1828
01:12:58,239 --> 01:13:00,560
okay yeah thanks um

1829
01:13:00,560 --> 01:13:03,600
so if you just stop on this slide

1830
01:13:03,600 --> 01:13:05,120
i'm presenting

1831
01:13:05,120 --> 01:13:07,760
i did make a big mistake of not

1832
01:13:07,760 --> 01:13:09,760
adding tony

1833
01:13:09,760 --> 01:13:11,920
tony's name to the author list he did

1834
01:13:11,920 --> 01:13:14,960
help a lot so mia copper

1835
01:13:14,960 --> 01:13:18,440
next slide please

1836
01:13:19,760 --> 01:13:20,480
so

1837
01:13:20,480 --> 01:13:23,199
as i mentioned tony did help uh

1838
01:13:23,199 --> 01:13:25,520
you know restructure this and took part

1839
01:13:25,520 --> 01:13:28,320
in a lot of discussions both internally

1840
01:13:28,320 --> 01:13:32,560
as well as in the open design team and

1841
01:13:32,560 --> 01:13:35,600
he is fairly active there his

1842
01:13:35,600 --> 01:13:38,640
co-author on several drafts there

1843
01:13:38,640 --> 01:13:40,960
next

1844
01:13:43,280 --> 01:13:44,560
so

1845
01:13:44,560 --> 01:13:46,960
as i said we've had many discussions on

1846
01:13:46,960 --> 01:13:48,159
this draft

1847
01:13:48,159 --> 01:13:52,239
within juniper between us and folks in

1848
01:13:52,239 --> 01:13:53,690
broadcom

1849
01:13:53,690 --> 01:13:54,800
[Music]

1850
01:13:54,800 --> 01:13:56,239
we made a few

1851
01:13:56,239 --> 01:13:58,159
pretty big changes

1852
01:13:58,159 --> 01:14:01,280
in this last revision that we think will

1853
01:14:01,280 --> 01:14:03,520
really help make this easier to

1854
01:14:03,520 --> 01:14:06,239
implement on both our own chips as well

1855
01:14:06,239 --> 01:14:08,000
as on broadcast

1856
01:14:08,000 --> 01:14:11,040
so the big big change is um

1857
01:14:11,040 --> 01:14:13,600
to replace a continuation bit with

1858
01:14:13,600 --> 01:14:16,400
length fields and i'll get into that in

1859
01:14:16,400 --> 01:14:17,840
a second

1860
01:14:17,840 --> 01:14:19,600
um but the

1861
01:14:19,600 --> 01:14:21,679
the upshot of this is we're fairly

1862
01:14:21,679 --> 01:14:23,760
confident that this can be implemented

1863
01:14:23,760 --> 01:14:25,120
efficiently

1864
01:14:25,120 --> 01:14:28,719
and in fact that's where we'll go next

1865
01:14:28,719 --> 01:14:31,280
next slide

1866
01:14:32,239 --> 01:14:34,400
so the big change that we have

1867
01:14:34,400 --> 01:14:36,000
we would have we just have these things

1868
01:14:36,000 --> 01:14:37,679
called continuation fields or

1869
01:14:37,679 --> 01:14:39,440
continuation bits

1870
01:14:39,440 --> 01:14:41,600
and essentially a continuation bit will

1871
01:14:41,600 --> 01:14:44,560
tell you when a particular block ends so

1872
01:14:44,560 --> 01:14:47,520
the whole fai block at some point has to

1873
01:14:47,520 --> 01:14:48,320
end

1874
01:14:48,320 --> 01:14:50,800
so if the fai and i'm going to call it

1875
01:14:50,800 --> 01:14:52,320
fai for now but we should probably

1876
01:14:52,320 --> 01:14:54,800
change the terminology

1877
01:14:54,800 --> 01:14:56,640
so if the special purpose labels saying

1878
01:14:56,640 --> 01:14:59,360
that there's forwarding actions here

1879
01:14:59,360 --> 01:15:00,800
comes to the top of the stack you want

1880
01:15:00,800 --> 01:15:02,400
to remove the whole block

1881
01:15:02,400 --> 01:15:05,120
so to know where the block goes

1882
01:15:05,120 --> 01:15:08,560
we'll use in continuation bits

1883
01:15:08,560 --> 01:15:10,560
but feedback from the

1884
01:15:10,560 --> 01:15:12,000
broadcom folks

1885
01:15:12,000 --> 01:15:13,600
says that it's much easier to have a

1886
01:15:13,600 --> 01:15:16,159
length field up free up front and then

1887
01:15:16,159 --> 01:15:19,120
you say oh this whole block is 10 words

1888
01:15:19,120 --> 01:15:20,640
just take the 10 words and throw them

1889
01:15:20,640 --> 01:15:22,320
out

1890
01:15:22,320 --> 01:15:24,800
so we moved from having continuation

1891
01:15:24,800 --> 01:15:25,840
bits

1892
01:15:25,840 --> 01:15:27,920
for uh the whole

1893
01:15:27,920 --> 01:15:29,440
fai block

1894
01:15:29,440 --> 01:15:30,719
for the

1895
01:15:30,719 --> 01:15:33,280
standard in-stack data and for the user

1896
01:15:33,280 --> 01:15:36,080
in stack data user-defined exact data so

1897
01:15:36,080 --> 01:15:40,239
we moved everything to length fields

1898
01:15:40,239 --> 01:15:42,159
there's not a huge difference in terms

1899
01:15:42,159 --> 01:15:44,480
of overall

1900
01:15:44,480 --> 01:15:46,960
number of bits needed to encode all this

1901
01:15:46,960 --> 01:15:48,560
but the length fields allow for much

1902
01:15:48,560 --> 01:15:50,239
easier processing

1903
01:15:50,239 --> 01:15:53,360
so that's one big change that we made

1904
01:15:53,360 --> 01:15:55,920
next slide

1905
01:15:56,960 --> 01:15:59,199
um also from the point of view of the

1906
01:15:59,199 --> 01:16:01,440
draft itself there have been a lot of

1907
01:16:01,440 --> 01:16:03,679
improvements in readability

1908
01:16:03,679 --> 01:16:06,400
and so for example separating the

1909
01:16:06,400 --> 01:16:09,760
description of the label stack entry

1910
01:16:09,760 --> 01:16:11,840
which has all the flags but the flag

1911
01:16:11,840 --> 01:16:14,239
definitions are in a different section

1912
01:16:14,239 --> 01:16:16,480
so it reads better

1913
01:16:16,480 --> 01:16:18,960
um so so those are the two big changes

1914
01:16:18,960 --> 01:16:20,640
between the previous version and this

1915
01:16:20,640 --> 01:16:22,000
version

1916
01:16:22,000 --> 01:16:24,320
um at this point we're just you know

1917
01:16:24,320 --> 01:16:26,480
twitting bits so we think that we're

1918
01:16:26,480 --> 01:16:29,120
really close in terms of a technical

1919
01:16:29,120 --> 01:16:30,719
solution

1920
01:16:30,719 --> 01:16:33,280
next slide

1921
01:16:33,600 --> 01:16:36,000
so um we think that the draft is ready

1922
01:16:36,000 --> 01:16:37,760
for working group adoption

1923
01:16:37,760 --> 01:16:39,520
we've been discussing this for over a

1924
01:16:39,520 --> 01:16:40,960
year at this point

1925
01:16:40,960 --> 01:16:43,920
um internally we've done a lot of

1926
01:16:43,920 --> 01:16:46,880
fine tuning and so um

1927
01:16:46,880 --> 01:16:48,719
so we think it's ready

1928
01:16:48,719 --> 01:16:50,640
in addition we would like to start doing

1929
01:16:50,640 --> 01:16:52,480
some prototypes of this

1930
01:16:52,480 --> 01:16:55,199
um both on our chips and also you know

1931
01:16:55,199 --> 01:16:57,520
hopefully the broadcom folks will do

1932
01:16:57,520 --> 01:16:59,280
some on their chips

1933
01:16:59,280 --> 01:17:00,960
and each of us has multiple types of

1934
01:17:00,960 --> 01:17:03,679
chips so we can

1935
01:17:03,679 --> 01:17:06,640
get a sense of how it is how easy or how

1936
01:17:06,640 --> 01:17:08,960
hard it is to implement this

1937
01:17:08,960 --> 01:17:11,520
on a variety of chip types

1938
01:17:11,520 --> 01:17:13,280
to do that it would be nice to have an

1939
01:17:13,280 --> 01:17:15,280
early allocation of a

1940
01:17:15,280 --> 01:17:18,080
bspl for fai

1941
01:17:18,080 --> 01:17:19,440
um so

1942
01:17:19,440 --> 01:17:21,520
i don't know how these

1943
01:17:21,520 --> 01:17:23,440
um

1944
01:17:23,440 --> 01:17:24,960
i don't know how to draw a dependency

1945
01:17:24,960 --> 01:17:26,400
diagram between

1946
01:17:26,400 --> 01:17:28,320
the three requests here

1947
01:17:28,320 --> 01:17:29,840
but we'll let the working group cheers

1948
01:17:29,840 --> 01:17:32,000
work that out

1949
01:17:32,000 --> 01:17:34,480
questions

1950
01:17:36,640 --> 01:17:40,080
do i hear someone say ship it

1951
01:17:43,679 --> 01:17:47,280
no questions all right thank you

1952
01:17:48,320 --> 01:17:50,800
great thank you very much

1953
01:17:50,800 --> 01:17:52,640
i guess

1954
01:17:52,640 --> 01:17:54,080
or two

1955
01:17:54,080 --> 01:17:57,080
um

1956
01:17:58,880 --> 01:18:01,360
go for it

1957
01:18:09,360 --> 01:18:12,360
okay

1958
01:18:17,360 --> 01:18:18,400
sure

1959
01:18:18,400 --> 01:18:21,760
probably not changing anything

1960
01:18:21,760 --> 01:18:24,719
technologically it's just a an update so

1961
01:18:24,719 --> 01:18:26,800
you get to the point where it's easy to

1962
01:18:26,800 --> 01:18:29,360
read the document side by side

1963
01:18:29,360 --> 01:18:32,000
okay i agree

1964
01:18:32,000 --> 01:18:33,520
and then

1965
01:18:33,520 --> 01:18:37,360
when i look at this document i find it

1966
01:18:37,360 --> 01:18:40,960
fairly complete on

1967
01:18:40,960 --> 01:18:43,199
uh isd

1968
01:18:43,199 --> 01:18:46,800
but it's much weaker on psd are you do

1969
01:18:46,800 --> 01:18:48,960
you agree on that

1970
01:18:48,960 --> 01:18:52,400
or is it intended

1971
01:18:52,719 --> 01:18:54,560
so could you repeat that it's fairly

1972
01:18:54,560 --> 01:18:58,960
complete on isd the the isd yeah yes

1973
01:18:58,960 --> 01:19:01,040
yeah yeah you get the pretty good

1974
01:19:01,040 --> 01:19:03,280
treatment of isd

1975
01:19:03,280 --> 01:19:04,880
you don't agree on everything but i

1976
01:19:04,880 --> 01:19:06,960
understand what you're saying but i

1977
01:19:06,960 --> 01:19:09,600
think they're missing parts on the psd

1978
01:19:09,600 --> 01:19:11,040
side

1979
01:19:11,040 --> 01:19:12,960
agreed um so

1980
01:19:12,960 --> 01:19:15,199
that was actually the intention this

1981
01:19:15,199 --> 01:19:18,880
draft primarily focus on the isd part

1982
01:19:18,880 --> 01:19:20,239
and it

1983
01:19:20,239 --> 01:19:21,600
points to

1984
01:19:21,600 --> 01:19:23,760
uh jeffrey's document

1985
01:19:23,760 --> 01:19:26,080
uh and i think jeffrey and

1986
01:19:26,080 --> 01:19:28,239
how you have combined

1987
01:19:28,239 --> 01:19:30,080
so it's sort of like you have an ic

1988
01:19:30,080 --> 01:19:32,320
document this is the ifc document and

1989
01:19:32,320 --> 01:19:33,760
then you have another document that's

1990
01:19:33,760 --> 01:19:35,520
the pse document

1991
01:19:35,520 --> 01:19:37,920
and that's the one that how you and

1992
01:19:37,920 --> 01:19:39,520
jeffrey are writing

1993
01:19:39,520 --> 01:19:41,840
so yeah that is the intention

1994
01:19:41,840 --> 01:19:43,600
i think that's fine

1995
01:19:43,600 --> 01:19:46,400
but i also think you need to say it

1996
01:19:46,400 --> 01:19:48,400
okay pointless pointless point is

1997
01:19:48,400 --> 01:19:49,600
pointless

1998
01:19:49,600 --> 01:19:51,600
probably all of those documents need to

1999
01:19:51,600 --> 01:19:54,320
point to each other

2000
01:19:54,320 --> 01:19:56,799
okay um

2001
01:19:57,280 --> 01:19:59,360
no that makes sense you'll do that

2002
01:19:59,360 --> 01:20:01,600
okay thanks so align the terminology put

2003
01:20:01,600 --> 01:20:05,800
pointers for psd okay

2004
01:20:06,639 --> 01:20:10,320
is next in the queue tweet go ahead

2005
01:20:10,320 --> 01:20:12,400
thank you kiriti uh

2006
01:20:12,400 --> 01:20:13,280
um

2007
01:20:13,280 --> 01:20:14,000
i

2008
01:20:14,000 --> 01:20:16,480
i'm a co-author but i can't help that

2009
01:20:16,480 --> 01:20:19,679
there are some resemblance in terms of

2010
01:20:19,679 --> 01:20:22,320
handling in-stack actions

2011
01:20:22,320 --> 01:20:23,280
uh

2012
01:20:23,280 --> 01:20:25,440
in this solution as well as in the

2013
01:20:25,440 --> 01:20:28,560
solution that jax presented earlier

2014
01:20:28,560 --> 01:20:29,360
um

2015
01:20:29,360 --> 01:20:30,800
so my question

2016
01:20:30,800 --> 01:20:34,960
now as a open design team co-chair

2017
01:20:34,960 --> 01:20:36,880
um

2018
01:20:36,880 --> 01:20:39,760
there is a and we're trying to incite uh

2019
01:20:39,760 --> 01:20:41,760
you know alignment between the different

2020
01:20:41,760 --> 01:20:42,800
solutions

2021
01:20:42,800 --> 01:20:44,840
so are there plans to

2022
01:20:44,840 --> 01:20:47,280
uh you know

2023
01:20:47,280 --> 01:20:49,199
see if you can converse with the other

2024
01:20:49,199 --> 01:20:51,120
solution

2025
01:20:51,120 --> 01:20:54,480
i have to discuss with my co-authors but

2026
01:20:54,480 --> 01:20:55,760
i think the

2027
01:20:55,760 --> 01:20:59,760
while the intent of the draft is similar

2028
01:20:59,760 --> 01:21:01,600
in that they

2029
01:21:01,600 --> 01:21:04,960
want to encode multiple actions and

2030
01:21:04,960 --> 01:21:07,280
include data with the actions

2031
01:21:07,280 --> 01:21:09,520
the formats are very different

2032
01:21:09,520 --> 01:21:12,800
so at this point what i would like to do

2033
01:21:12,800 --> 01:21:15,840
is to implement what we have here and

2034
01:21:15,840 --> 01:21:17,040
get some

2035
01:21:17,040 --> 01:21:19,280
feedback from what does it actually take

2036
01:21:19,280 --> 01:21:21,440
to implement this on different kinds of

2037
01:21:21,440 --> 01:21:22,880
hardware

2038
01:21:22,880 --> 01:21:26,120
and um yeah and then if my courses say

2039
01:21:26,120 --> 01:21:27,280
[Music]

2040
01:21:27,280 --> 01:21:29,600
you know there is some some scope for

2041
01:21:29,600 --> 01:21:31,679
alignment i'm happy to think about it

2042
01:21:31,679 --> 01:21:33,840
but right now that's not where my focus

2043
01:21:33,840 --> 01:21:36,000
is

2044
01:21:37,679 --> 01:21:40,800
but it's a good question

2045
01:21:41,440 --> 01:21:44,000
okay and lower has his hand back up

2046
01:21:44,000 --> 01:21:47,199
uh so great when you said uh

2047
01:21:47,199 --> 01:21:50,080
implement are you meaning

2048
01:21:50,080 --> 01:21:53,679
some type of alpha implementation for

2049
01:21:53,679 --> 01:21:55,280
for tests or something or are you

2050
01:21:55,280 --> 01:21:57,199
actually going for

2051
01:21:57,199 --> 01:22:00,320
a full product code

2052
01:22:00,320 --> 01:22:02,960
um more like alpha more you know

2053
01:22:02,960 --> 01:22:05,760
internal implementation you know

2054
01:22:05,760 --> 01:22:07,600
yeah

2055
01:22:07,600 --> 01:22:09,199
so that

2056
01:22:09,199 --> 01:22:11,920
i'm not i'm not saying we should do it

2057
01:22:11,920 --> 01:22:14,400
but actually if we decide to do it to

2058
01:22:14,400 --> 01:22:17,120
one of the solutions you probably should

2059
01:22:17,120 --> 01:22:19,600
sponsor it for all of them and then make

2060
01:22:19,600 --> 01:22:21,600
comparisons

2061
01:22:21,600 --> 01:22:24,400
um yeah i don't have cycles for all that

2062
01:22:24,400 --> 01:22:27,600
i hope i have cycles to do this one

2063
01:22:27,600 --> 01:22:30,960
i know but

2064
01:22:33,199 --> 01:22:36,000
maybe talk to grammy

2065
01:22:36,000 --> 01:22:38,480
yeah so if others i won't want to

2066
01:22:38,480 --> 01:22:40,960
implement theirs and then we can have

2067
01:22:40,960 --> 01:22:44,560
some standards or not standards but some

2068
01:22:44,560 --> 01:22:46,800
metrics by which we compare solutions

2069
01:22:46,800 --> 01:22:49,120
that would be i think very helpful

2070
01:22:49,120 --> 01:22:50,639
but from from

2071
01:22:50,639 --> 01:22:53,280
our point of view we just want to see

2072
01:22:53,280 --> 01:22:55,440
did we specify this well you know for

2073
01:22:55,440 --> 01:22:58,639
example continuation bits versus sizes

2074
01:22:58,639 --> 01:23:00,639
which works out better how does the

2075
01:23:00,639 --> 01:23:02,719
hardware respond to all this how many

2076
01:23:02,719 --> 01:23:04,719
cycles does it take

2077
01:23:04,719 --> 01:23:05,520
so

2078
01:23:05,520 --> 01:23:07,520
we have our hands for just doing hours

2079
01:23:07,520 --> 01:23:09,040
because we're going to try to do it on

2080
01:23:09,040 --> 01:23:12,639
four different types of tips

2081
01:23:13,920 --> 01:23:17,520
questions okay how are you okay

2082
01:23:18,239 --> 01:23:20,880
how you go ahead

2083
01:23:20,880 --> 01:23:23,520
yeah this is not question uh but just a

2084
01:23:23,520 --> 01:23:25,920
comment i i think it's a very good idea

2085
01:23:25,920 --> 01:23:28,880
to actually uh compare uh the different

2086
01:23:28,880 --> 01:23:31,840
solution proposals from the

2087
01:23:31,840 --> 01:23:33,679
different perspective

2088
01:23:33,679 --> 01:23:36,320
like the overheads the performance

2089
01:23:36,320 --> 01:23:37,760
but in this sense

2090
01:23:37,760 --> 01:23:40,080
in this design i think performance is a

2091
01:23:40,080 --> 01:23:42,880
very critical so we have to do it

2092
01:23:42,880 --> 01:23:45,199
carefully and

2093
01:23:45,199 --> 01:23:49,280
on one side we can ask more asic experts

2094
01:23:49,280 --> 01:23:51,840
to join the work to evaluate scheme

2095
01:23:51,840 --> 01:23:54,080
and meanwhile we can also do the some

2096
01:23:54,080 --> 01:23:57,280
kind of software based evaluation as it

2097
01:23:57,280 --> 01:23:58,239
also

2098
01:23:58,239 --> 01:24:01,440
can be do very quick and uh

2099
01:24:01,440 --> 01:24:04,639
give us a sense of what's uh of

2100
01:24:04,639 --> 01:24:06,320
performance uh

2101
01:24:06,320 --> 01:24:08,800
actually uh what's the most uh

2102
01:24:08,800 --> 01:24:11,760
uh uh influence uh part of the to the

2103
01:24:11,760 --> 01:24:14,560
performance yeah so um

2104
01:24:14,560 --> 01:24:16,480
you have a good point but we're going to

2105
01:24:16,480 --> 01:24:18,159
take it in steps

2106
01:24:18,159 --> 01:24:20,800
so the first thing is is the proposal

2107
01:24:20,800 --> 01:24:22,080
that we have

2108
01:24:22,080 --> 01:24:24,639
implementable reasonably

2109
01:24:24,639 --> 01:24:27,199
the second step is oh here's our

2110
01:24:27,199 --> 01:24:29,040
proposal here's the metrics from our

2111
01:24:29,040 --> 01:24:31,679
proposal if someone else were to do a

2112
01:24:31,679 --> 01:24:34,400
different proposal then we can we agree

2113
01:24:34,400 --> 01:24:36,480
on the metrics then we can compare them

2114
01:24:36,480 --> 01:24:38,480
but we want to start with something

2115
01:24:38,480 --> 01:24:40,480
right so we'll start with

2116
01:24:40,480 --> 01:24:42,480
this proposal but but you're right

2117
01:24:42,480 --> 01:24:44,880
eventually we can get there and say

2118
01:24:44,880 --> 01:24:46,880
here's some common metrics

2119
01:24:46,880 --> 01:24:48,000
and let's compare different

2120
01:24:48,000 --> 01:24:50,639
implementations yeah so so basically

2121
01:24:50,639 --> 01:24:53,040
there are several different

2122
01:24:53,040 --> 01:24:56,840
type of ideas one is using the

2123
01:24:56,840 --> 01:24:57,920
catalog uh

2124
01:24:57,920 --> 01:25:00,560
followed by the action itself and just

2125
01:25:00,560 --> 01:25:04,239
to use a conventional uh chain uh leg uh

2126
01:25:04,239 --> 01:25:07,199
structure right and it's some other even

2127
01:25:07,199 --> 01:25:10,400
combined the two together so i i think

2128
01:25:10,400 --> 01:25:13,600
there's a great imp implication on the

2129
01:25:13,600 --> 01:25:16,400
uh on the performance issue so it's a

2130
01:25:16,400 --> 01:25:18,400
very uh critical to

2131
01:25:18,400 --> 01:25:19,679
access it

2132
01:25:19,679 --> 01:25:21,760
but travel walk around right so we want

2133
01:25:21,760 --> 01:25:23,600
to crawl and then we'll walk and then we

2134
01:25:23,600 --> 01:25:25,280
can maybe run

2135
01:25:25,280 --> 01:25:27,840
right yeah thank you

2136
01:25:27,840 --> 01:25:32,480
okay and whim is next in the queue

2137
01:25:36,320 --> 01:25:38,000
it's not necessarily a question to

2138
01:25:38,000 --> 01:25:40,800
kiriti but it's more of a working group

2139
01:25:40,800 --> 01:25:42,239
question is like

2140
01:25:42,239 --> 01:25:44,400
i think for a psd we somehow are

2141
01:25:44,400 --> 01:25:47,280
converging uh somehow as in a single

2142
01:25:47,280 --> 01:25:49,679
document with what why buu is presenting

2143
01:25:49,679 --> 01:25:50,560
right

2144
01:25:50,560 --> 01:25:53,120
at the feeling for isd we have to

2145
01:25:53,120 --> 01:25:55,600
probably competing uh solutions i have

2146
01:25:55,600 --> 01:25:57,679
the feeling that you want to continue

2147
01:25:57,679 --> 01:26:01,280
with your thing from i what i was trying

2148
01:26:01,280 --> 01:26:04,080
to get to as more as a working group

2149
01:26:04,080 --> 01:26:05,360
question is

2150
01:26:05,360 --> 01:26:06,800
i'm hoping

2151
01:26:06,800 --> 01:26:09,120
to converge to one solution because this

2152
01:26:09,120 --> 01:26:11,280
is data plane and i think we should try

2153
01:26:11,280 --> 01:26:12,639
to

2154
01:26:12,639 --> 01:26:14,960
converts to to one thing so

2155
01:26:14,960 --> 01:26:17,120
my question is more i first of all is

2156
01:26:17,120 --> 01:26:18,080
that

2157
01:26:18,080 --> 01:26:20,719
uh aligned within the working group as

2158
01:26:20,719 --> 01:26:22,719
an objective because if you focus on

2159
01:26:22,719 --> 01:26:24,159
your thing

2160
01:26:24,159 --> 01:26:26,719
and someone else focus on his thing then

2161
01:26:26,719 --> 01:26:28,960
we have like uh

2162
01:26:28,960 --> 01:26:31,199
how do we converge on on getting towards

2163
01:26:31,199 --> 01:26:34,320
a single most optimal solution to

2164
01:26:34,320 --> 01:26:36,159
implement which works on i would say

2165
01:26:36,159 --> 01:26:38,239
most hardware

2166
01:26:38,239 --> 01:26:40,639
yeah so from my point of view i just

2167
01:26:40,639 --> 01:26:43,040
want to know if this particular

2168
01:26:43,040 --> 01:26:46,320
approach works is sufficient and so on

2169
01:26:46,320 --> 01:26:47,360
and so

2170
01:26:47,360 --> 01:26:50,320
you know independent of itf we want to

2171
01:26:50,320 --> 01:26:52,000
do the implementation

2172
01:26:52,000 --> 01:26:53,679
and take back learnings and then bring

2173
01:26:53,679 --> 01:26:55,520
it back to the drop and so on

2174
01:26:55,520 --> 01:26:57,360
um the convergence point is really

2175
01:26:57,360 --> 01:26:58,880
important and that's a working group

2176
01:26:58,880 --> 01:27:01,520
thing and so it would help if for

2177
01:27:01,520 --> 01:27:02,639
example

2178
01:27:02,639 --> 01:27:04,719
the alternative solution did a similar

2179
01:27:04,719 --> 01:27:07,040
thing and then we could compare them you

2180
01:27:07,040 --> 01:27:08,320
know across

2181
01:27:08,320 --> 01:27:09,600
some metrics i don't know what the

2182
01:27:09,600 --> 01:27:10,960
metrics would be

2183
01:27:10,960 --> 01:27:13,199
like uh you know

2184
01:27:13,199 --> 01:27:14,880
number of cycles it takes or something

2185
01:27:14,880 --> 01:27:16,800
but if you want to do something that's

2186
01:27:16,800 --> 01:27:18,480
independent of hardware

2187
01:27:18,480 --> 01:27:20,239
but meaningful from the point of view of

2188
01:27:20,239 --> 01:27:21,440
forwarding

2189
01:27:21,440 --> 01:27:23,040
and then we can make i think more

2190
01:27:23,040 --> 01:27:25,280
rational decisions about should we go

2191
01:27:25,280 --> 01:27:27,120
forward with this or with that or are

2192
01:27:27,120 --> 01:27:29,199
there ways to convert them

2193
01:27:29,199 --> 01:27:31,120
because ultimately for a data plane

2194
01:27:31,120 --> 01:27:32,880
solution we don't want to

2195
01:27:32,880 --> 01:27:33,840
yeah

2196
01:27:33,840 --> 01:27:35,840
the question is mainly how do we do that

2197
01:27:35,840 --> 01:27:37,120
somehow yeah

2198
01:27:37,120 --> 01:27:39,440
all right that's why um the working

2199
01:27:39,440 --> 01:27:42,638
group gets a big props

2200
01:27:45,199 --> 01:27:46,400
okay

2201
01:27:46,400 --> 01:27:49,440
lower is next in the queue lower yeah

2202
01:27:49,440 --> 01:27:52,480
yeah i kind of

2203
01:27:52,480 --> 01:27:54,800
i can't answer

2204
01:27:54,800 --> 01:27:57,600
what the working groups

2205
01:27:57,600 --> 01:27:59,840
take on this is just now we need to

2206
01:27:59,840 --> 01:28:02,239
discuss it a bit

2207
01:28:02,239 --> 01:28:03,600
but

2208
01:28:03,600 --> 01:28:06,000
i'm pretty much on the same page as uh

2209
01:28:06,000 --> 01:28:08,239
as we miss

2210
01:28:08,239 --> 01:28:10,800
we should take

2211
01:28:10,800 --> 01:28:12,400
decisions

2212
01:28:12,400 --> 01:28:14,400
that relates to

2213
01:28:14,400 --> 01:28:16,719
the standard based on

2214
01:28:16,719 --> 01:28:18,159
how we best

2215
01:28:18,159 --> 01:28:22,080
actually re reach to a

2216
01:28:22,159 --> 01:28:24,719
implementable and

2217
01:28:24,719 --> 01:28:26,000
compatible

2218
01:28:26,000 --> 01:28:28,639
solution so i don't i don't think there

2219
01:28:28,639 --> 01:28:31,040
is any

2220
01:28:31,679 --> 01:28:33,760
kind of differences about that i can

2221
01:28:33,760 --> 01:28:35,840
understand that some companies want to

2222
01:28:35,840 --> 01:28:38,719
go ahead and pro

2223
01:28:38,719 --> 01:28:40,639
try to test their own

2224
01:28:40,639 --> 01:28:42,159
solution

2225
01:28:42,159 --> 01:28:44,480
in their own environment but eventually

2226
01:28:44,480 --> 01:28:47,120
they have to come come out and actually

2227
01:28:47,120 --> 01:28:50,239
participate in the

2228
01:28:50,239 --> 01:28:51,120
what

2229
01:28:51,120 --> 01:28:53,360
the iitf or the mpls working group are

2230
01:28:53,360 --> 01:28:54,320
doing

2231
01:28:54,320 --> 01:28:57,840
yes of course and you know like i said

2232
01:28:57,840 --> 01:29:00,320
we had a lot of internal discussions and

2233
01:29:00,320 --> 01:29:02,480
some of the decisions that we made

2234
01:29:02,480 --> 01:29:04,320
we want to validate that did we take the

2235
01:29:04,320 --> 01:29:06,719
right uh answer to it

2236
01:29:06,719 --> 01:29:08,960
and so i mean this will be valuable

2237
01:29:08,960 --> 01:29:10,560
feedback to the

2238
01:29:10,560 --> 01:29:12,239
working group as well as for ourselves

2239
01:29:12,239 --> 01:29:14,320
and our implementation

2240
01:29:14,320 --> 01:29:16,960
so it's it's also been a while since we

2241
01:29:16,960 --> 01:29:19,440
started this work so you know we want to

2242
01:29:19,440 --> 01:29:22,239
just move forward but we will bring back

2243
01:29:22,239 --> 01:29:24,719
things to the working group uh

2244
01:29:24,719 --> 01:29:27,520
implementation reports um again if you

2245
01:29:27,520 --> 01:29:29,600
can agree on some metrics

2246
01:29:29,600 --> 01:29:32,080
we can say where we score on those

2247
01:29:32,080 --> 01:29:35,840
and that would be sort of the idea

2248
01:29:36,400 --> 01:29:39,600
okay and

2249
01:29:39,600 --> 01:29:40,560
turk

2250
01:29:40,560 --> 01:29:42,480
europe

2251
01:29:42,480 --> 01:29:45,440
on the same topic and again as a coach

2252
01:29:45,440 --> 01:29:46,320
here

2253
01:29:46,320 --> 01:29:47,360
um

2254
01:29:47,360 --> 01:29:49,840
i i totally understand

2255
01:29:49,840 --> 01:29:52,480
where you're coming from kriti and

2256
01:29:52,480 --> 01:29:54,560
and there might be valid reasons for

2257
01:29:54,560 --> 01:29:56,719
diverging

2258
01:29:56,719 --> 01:29:59,120
the only thing i'm going to highlight is

2259
01:29:59,120 --> 01:30:00,719
we owe the

2260
01:30:00,719 --> 01:30:03,120
design team as well as the working group

2261
01:30:03,120 --> 01:30:05,520
a report of

2262
01:30:05,520 --> 01:30:08,560
the reasons why we cannot converge

2263
01:30:08,560 --> 01:30:12,159
and and i understand your uh your stand

2264
01:30:12,159 --> 01:30:14,000
yeah so i don't even want to jump to

2265
01:30:14,000 --> 01:30:16,480
that i want to start with a report of

2266
01:30:16,480 --> 01:30:19,280
how this particular implementation

2267
01:30:19,280 --> 01:30:22,080
worked out and what we learned from it

2268
01:30:22,080 --> 01:30:24,000
and then we can talk about

2269
01:30:24,000 --> 01:30:24,880
where

2270
01:30:24,880 --> 01:30:27,199
converge i mean they can happen in

2271
01:30:27,199 --> 01:30:28,880
parallel but i think doing the

2272
01:30:28,880 --> 01:30:30,560
implementation would

2273
01:30:30,560 --> 01:30:32,480
shed a lot of light but i think in

2274
01:30:32,480 --> 01:30:34,400
parallel we should discuss

2275
01:30:34,400 --> 01:30:36,080
are they pointed with which we can

2276
01:30:36,080 --> 01:30:37,840
converge are the points that are pretty

2277
01:30:37,840 --> 01:30:39,120
incompatible

2278
01:30:39,120 --> 01:30:40,639
um what would the shape of the final

2279
01:30:40,639 --> 01:30:43,600
solution look like

2280
01:30:43,760 --> 01:30:45,520
again i'd have to discuss with my

2281
01:30:45,520 --> 01:30:47,600
co-authors but you know i'm open to

2282
01:30:47,600 --> 01:30:49,840
those

2283
01:30:52,960 --> 01:30:55,040
okay and

2284
01:30:55,040 --> 01:30:56,000
uh

2285
01:30:56,000 --> 01:30:57,520
you have to get into the queue if you

2286
01:30:57,520 --> 01:30:59,440
want to speak yeah i am having trouble

2287
01:30:59,440 --> 01:31:02,080
uh dialing into the medical that's right

2288
01:31:02,080 --> 01:31:03,040
okay

2289
01:31:03,040 --> 01:31:05,920
okay go ahead if if you allow me

2290
01:31:05,920 --> 01:31:07,920
yeah please thank you

2291
01:31:07,920 --> 01:31:10,320
identify yourself in that case

2292
01:31:10,320 --> 01:31:11,520
what

2293
01:31:11,520 --> 01:31:14,880
what has been done in passing suspicion

2294
01:31:14,880 --> 01:31:18,320
yeah is zafar ali um

2295
01:31:18,320 --> 01:31:20,639
what has been done in past in cases like

2296
01:31:20,639 --> 01:31:22,400
this like we mentioned this is data

2297
01:31:22,400 --> 01:31:24,880
plane um so we have to be extremely

2298
01:31:24,880 --> 01:31:25,920
careful in

2299
01:31:25,920 --> 01:31:28,320
in moving forward with solution

2300
01:31:28,320 --> 01:31:30,480
is to define metric

2301
01:31:30,480 --> 01:31:32,400
that can compare

2302
01:31:32,400 --> 01:31:34,800
solutions that can give feedback to the

2303
01:31:34,800 --> 01:31:37,280
working group in terms of what is what

2304
01:31:37,280 --> 01:31:38,719
solution works better what works

2305
01:31:38,719 --> 01:31:40,239
whatever involved

2306
01:31:40,239 --> 01:31:41,920
and that has been approached i've been

2307
01:31:41,920 --> 01:31:45,040
taking many times by many working groups

2308
01:31:45,040 --> 01:31:47,280
in making decisions like this

2309
01:31:47,280 --> 01:31:49,040
so you probably missed it when i said we

2310
01:31:49,040 --> 01:31:52,159
wanted to find metrics but yeah yeah so

2311
01:31:52,159 --> 01:31:54,000
i think i mean

2312
01:31:54,000 --> 01:31:56,159
we do want to find matrix to compare the

2313
01:31:56,159 --> 01:32:00,000
solution and move forward thank you

2314
01:32:01,520 --> 01:32:02,800
greedy

2315
01:32:02,800 --> 01:32:04,159
thank you

2316
01:32:04,159 --> 01:32:06,400
sweetie before you sit down

2317
01:32:06,400 --> 01:32:08,159
i want to point out that you you still

2318
01:32:08,159 --> 01:32:10,960
have three slides in your deck

2319
01:32:10,960 --> 01:32:12,800
okay um

2320
01:32:12,800 --> 01:32:14,960
oh this is the nfr

2321
01:32:14,960 --> 01:32:16,560
yes exactly

2322
01:32:16,560 --> 01:32:19,679
okay sorry next slide please

2323
01:32:19,679 --> 01:32:23,639
um this is going to be quick um the nffr

2324
01:32:23,639 --> 01:32:25,360
nffrr

2325
01:32:25,360 --> 01:32:28,000
draft was a standalone graph saying i

2326
01:32:28,000 --> 01:32:29,280
want a new

2327
01:32:29,280 --> 01:32:32,000
um code point a new special purpose

2328
01:32:32,000 --> 01:32:34,560
label and we've changed it and said we

2329
01:32:34,560 --> 01:32:37,040
just want a bit or whatever it turns out

2330
01:32:37,040 --> 01:32:38,560
to be an action

2331
01:32:38,560 --> 01:32:40,320
uh

2332
01:32:40,320 --> 01:32:42,799
in

2333
01:32:42,880 --> 01:32:45,600
the m a uh document

2334
01:32:45,600 --> 01:32:48,800
uh so we've gone from asking for a

2335
01:32:48,800 --> 01:32:51,679
uh based special purpose label to an

2336
01:32:51,679 --> 01:32:54,159
action bit so that we can actually tell

2337
01:32:54,159 --> 01:32:56,400
a router please don't do for the past

2338
01:32:56,400 --> 01:32:58,080
few hours

2339
01:32:58,080 --> 01:32:59,920
and the second part so if you go to the

2340
01:32:59,920 --> 01:33:02,400
next slide

2341
01:33:02,719 --> 01:33:05,280
um so in the beginning we had a lot of

2342
01:33:05,280 --> 01:33:07,360
discussion we've incorporated all the

2343
01:33:07,360 --> 01:33:08,400
feedback

2344
01:33:08,400 --> 01:33:10,320
uh we bought we got brought down with

2345
01:33:10,320 --> 01:33:11,280
this whole

2346
01:33:11,280 --> 01:33:14,080
uh you know based special purpose labels

2347
01:33:14,080 --> 01:33:16,080
and whether we have our own standalone

2348
01:33:16,080 --> 01:33:18,000
or whether we incorporated something

2349
01:33:18,000 --> 01:33:18,800
else

2350
01:33:18,800 --> 01:33:21,679
so this is no longer an issue

2351
01:33:21,679 --> 01:33:24,000
next slide

2352
01:33:24,000 --> 01:33:26,960
so as we do

2353
01:33:28,800 --> 01:33:30,800
so the problem is acknowledge people

2354
01:33:30,800 --> 01:33:32,880
basically say we need to

2355
01:33:32,880 --> 01:33:35,040
move forward with this or or this is a

2356
01:33:35,040 --> 01:33:37,199
useful thing to move forward with

2357
01:33:37,199 --> 01:33:39,120
no other alternatives have been proposed

2358
01:33:39,120 --> 01:33:40,800
there were some

2359
01:33:40,800 --> 01:33:43,040
feedback we incorporated that

2360
01:33:43,040 --> 01:33:44,560
so we think this is ready for working

2361
01:33:44,560 --> 01:33:46,000
group adoption

2362
01:33:46,000 --> 01:33:48,960
and uh we will consider this as part of

2363
01:33:48,960 --> 01:33:52,480
the prototype for the previous document

2364
01:33:52,480 --> 01:33:53,840
so

2365
01:33:53,840 --> 01:33:58,080
when we prototype the fai uh document

2366
01:33:58,080 --> 01:34:00,400
one of the things there is a no for the

2367
01:34:00,400 --> 01:34:01,920
fast field output

2368
01:34:01,920 --> 01:34:05,360
and we will implement that

2369
01:34:05,360 --> 01:34:06,639
okay

2370
01:34:06,639 --> 01:34:09,840
there's a question from kitan

2371
01:34:09,840 --> 01:34:12,800
yeah hi ketan talaliker

2372
01:34:12,800 --> 01:34:15,360
uh about this problem acknowledge and

2373
01:34:15,360 --> 01:34:18,719
solution acceptable i think uh there are

2374
01:34:18,719 --> 01:34:21,360
control plane uh based uh

2375
01:34:21,360 --> 01:34:22,480
solutions

2376
01:34:22,480 --> 01:34:24,880
at least for some of the use cases

2377
01:34:24,880 --> 01:34:25,760
uh

2378
01:34:25,760 --> 01:34:26,880
which

2379
01:34:26,880 --> 01:34:28,800
i have started a mail thread and maybe

2380
01:34:28,800 --> 01:34:31,040
we can discuss further

2381
01:34:31,040 --> 01:34:33,440
so i i believe uh

2382
01:34:33,440 --> 01:34:35,199
we should discuss that and probably also

2383
01:34:35,199 --> 01:34:36,880
consult best

2384
01:34:36,880 --> 01:34:38,960
uh you know where the evpn work is

2385
01:34:38,960 --> 01:34:40,800
happening uh there's a control plane

2386
01:34:40,800 --> 01:34:42,159
solution there

2387
01:34:42,159 --> 01:34:45,119
and maybe same for uh perhaps spring at

2388
01:34:45,119 --> 01:34:47,040
least those are the two that i'm

2389
01:34:47,040 --> 01:34:48,320
aware of

2390
01:34:48,320 --> 01:34:49,360
and

2391
01:34:49,360 --> 01:34:51,600
yeah maybe we can follow continue on the

2392
01:34:51,600 --> 01:34:52,719
thread

2393
01:34:52,719 --> 01:34:54,639
we can definitely follow on the mailing

2394
01:34:54,639 --> 01:34:56,000
list

2395
01:34:56,000 --> 01:34:58,080
when who the co-author also has a

2396
01:34:58,080 --> 01:35:00,400
comment i mean the the goal here was a

2397
01:35:00,400 --> 01:35:02,320
data plane solution but when if you have

2398
01:35:02,320 --> 01:35:04,320
a common piece

2399
01:35:04,320 --> 01:35:06,639
um

2400
01:35:09,920 --> 01:35:10,960
so um

2401
01:35:10,960 --> 01:35:13,440
when is going to respond as a co-author

2402
01:35:13,440 --> 01:35:16,800
but yeah how you can come

2403
01:35:16,800 --> 01:35:17,679
i

2404
01:35:17,679 --> 01:35:20,960
yeah hi this is one from juniper i aware

2405
01:35:20,960 --> 01:35:24,239
recently um last two years ago there was

2406
01:35:24,239 --> 01:35:27,040
another proposal for

2407
01:35:27,040 --> 01:35:29,679
address this uh solution we

2408
01:35:29,679 --> 01:35:32,639
when this draft was uh first published

2409
01:35:32,639 --> 01:35:34,880
we mentioned uh

2410
01:35:34,880 --> 01:35:36,000
in the

2411
01:35:36,000 --> 01:35:37,360
in the talk

2412
01:35:37,360 --> 01:35:38,239
why

2413
01:35:38,239 --> 01:35:41,280
this solution we feel is better because

2414
01:35:41,280 --> 01:35:44,080
it's more scalable

2415
01:35:44,080 --> 01:35:46,880
from evpn perspective there is a

2416
01:35:46,880 --> 01:35:49,920
different type of service and

2417
01:35:49,920 --> 01:35:51,520
this solution

2418
01:35:51,520 --> 01:35:55,280
will apply to different type of service

2419
01:35:55,280 --> 01:35:57,760
then aware bundle service especially in

2420
01:35:57,760 --> 01:36:00,560
particular if you have a 4kb then so

2421
01:36:00,560 --> 01:36:02,080
this solution

2422
01:36:02,080 --> 01:36:03,119
just

2423
01:36:03,119 --> 01:36:05,440
one label will address

2424
01:36:05,440 --> 01:36:08,560
all those issues for the looping

2425
01:36:08,560 --> 01:36:10,880
in the fr case

2426
01:36:10,880 --> 01:36:13,760
in addition the same solution also

2427
01:36:13,760 --> 01:36:17,119
applied for layer 3 vpn or other use

2428
01:36:17,119 --> 01:36:18,159
cases

2429
01:36:18,159 --> 01:36:19,280
we feel

2430
01:36:19,280 --> 01:36:22,400
just so one solution not only

2431
01:36:22,400 --> 01:36:24,719
applied to different type of evpn

2432
01:36:24,719 --> 01:36:27,520
service and also to different other type

2433
01:36:27,520 --> 01:36:29,760
of service so that's the really the

2434
01:36:29,760 --> 01:36:31,119
benefit for

2435
01:36:31,119 --> 01:36:33,040
this solution it's simple

2436
01:36:33,040 --> 01:36:33,840
and

2437
01:36:33,840 --> 01:36:38,199
that's yeah yeah thank you

2438
01:36:40,639 --> 01:36:43,119
what she said

2439
01:36:43,119 --> 01:36:45,760
yeah i i understood what uh

2440
01:36:45,760 --> 01:36:48,400
what was said and uh i think uh it's

2441
01:36:48,400 --> 01:36:51,040
best we discuss this and i would suggest

2442
01:36:51,040 --> 01:36:53,280
maybe including the best working group

2443
01:36:53,280 --> 01:36:54,400
perhaps

2444
01:36:54,400 --> 01:36:56,719
uh because uh

2445
01:36:56,719 --> 01:36:59,040
it's yeah i i i'm not saying that the

2446
01:36:59,040 --> 01:37:01,679
best uh the individual draft is let's

2447
01:37:01,679 --> 01:37:04,159
say all complete and all good and ready

2448
01:37:04,159 --> 01:37:07,199
perhaps you know it can be improved so

2449
01:37:07,199 --> 01:37:10,400
yeah we can continue the discussion

2450
01:37:10,400 --> 01:37:11,360
okay

2451
01:37:11,360 --> 01:37:13,920
thank you okay yeah okay i think this is

2452
01:37:13,920 --> 01:37:16,560
a uh interesting use case because it has

2453
01:37:16,560 --> 01:37:19,119
some unique uh features we need to

2454
01:37:19,119 --> 01:37:22,080
consider in our mna discussion

2455
01:37:22,080 --> 01:37:24,239
uh because in my understanding this

2456
01:37:24,239 --> 01:37:27,119
action is actually applied on the

2457
01:37:27,119 --> 01:37:28,320
inserted

2458
01:37:28,320 --> 01:37:31,600
on the uh following mps label switching

2459
01:37:31,600 --> 01:37:34,560
paths it's not starting from the edge

2460
01:37:34,560 --> 01:37:37,280
so if you allow such kind of

2461
01:37:37,280 --> 01:37:40,560
actions it implies in our requirement we

2462
01:37:40,560 --> 01:37:43,360
do allow to insert or remove some

2463
01:37:43,360 --> 01:37:46,320
certain actions on the following paths

2464
01:37:46,320 --> 01:37:48,639
so

2465
01:37:48,639 --> 01:37:50,480
my personal opinion is we should allow

2466
01:37:50,480 --> 01:37:52,800
such kind of behavior this will make our

2467
01:37:52,800 --> 01:37:55,600
this uh mma more flexible

2468
01:37:55,600 --> 01:37:57,679
but i don't think it's a currently

2469
01:37:57,679 --> 01:37:59,920
reflecting the requirement or

2470
01:37:59,920 --> 01:38:02,400
architecture documents so we should

2471
01:38:02,400 --> 01:38:06,000
discuss that further okay

2472
01:38:08,719 --> 01:38:09,600
okay

2473
01:38:09,600 --> 01:38:10,880
any other

2474
01:38:10,880 --> 01:38:13,520
discussion of kuwaiti's dress

2475
01:38:13,520 --> 01:38:17,560
yes greg go ahead

2476
01:38:19,360 --> 01:38:22,159
hi rick ruxin i i just wanted to remind

2477
01:38:22,159 --> 01:38:25,440
that uh no forr is a part of the use

2478
01:38:25,440 --> 01:38:26,400
cases

2479
01:38:26,400 --> 01:38:28,800
document adopted by the working group

2480
01:38:28,800 --> 01:38:32,159
thank you thank you

2481
01:38:35,600 --> 01:38:38,639
okay uh how you i saw your name flash

2482
01:38:38,639 --> 01:38:39,920
for a moment

2483
01:38:39,920 --> 01:38:40,880
and then

2484
01:38:40,880 --> 01:38:43,199
then um

2485
01:38:43,199 --> 01:38:45,040
go down so

2486
01:38:45,040 --> 01:38:48,080
i think you're probably okay

2487
01:38:48,880 --> 01:38:51,199
okay very good so i think you're all set

2488
01:38:51,199 --> 01:38:52,880
karini thank you very much

2489
01:38:52,880 --> 01:38:54,560
thank you

2490
01:38:54,560 --> 01:38:55,679
now from

2491
01:38:55,679 --> 01:38:57,679
from this point on um

2492
01:38:57,679 --> 01:39:01,280
let me close kuwaiti's slide

2493
01:39:02,239 --> 01:39:05,679
and turn my own camera on

2494
01:39:05,679 --> 01:39:08,880
okay great so from this point on we have

2495
01:39:08,880 --> 01:39:11,920
open discussion time so if there's

2496
01:39:11,920 --> 01:39:13,920
anything that anyone would like to bring

2497
01:39:13,920 --> 01:39:16,800
up um regarding anything that's been

2498
01:39:16,800 --> 01:39:18,960
discussed or anything else that's going

2499
01:39:18,960 --> 01:39:22,080
on with the open design team now is your

2500
01:39:22,080 --> 01:39:23,679
chance

2501
01:39:23,679 --> 01:39:26,400
either remotely or in the room i would

2502
01:39:26,400 --> 01:39:29,360
like to remind you if you're in the room

2503
01:39:29,360 --> 01:39:32,080
don't just walk up to the mic please use

2504
01:39:32,080 --> 01:39:33,520
the um

2505
01:39:33,520 --> 01:39:36,320
the tool to get into the queue so we can

2506
01:39:36,320 --> 01:39:41,040
manage it correctly tariq you're next

2507
01:39:41,040 --> 01:39:44,639
uh tarik saad and my question was to

2508
01:39:44,639 --> 01:39:47,040
dragon

2509
01:39:47,520 --> 01:39:50,239
i i don't know if the plan was to

2510
01:39:50,239 --> 01:39:52,000
bring back slides but

2511
01:39:52,000 --> 01:39:53,679
i don't need that

2512
01:39:53,679 --> 01:39:55,520
they presented

2513
01:39:55,520 --> 01:39:59,920
ini and ine to indicate

2514
01:39:59,920 --> 01:40:02,639
actions in the stack and

2515
01:40:02,639 --> 01:40:04,080
post the stack

2516
01:40:04,080 --> 01:40:06,719
my question is about the order of

2517
01:40:06,719 --> 01:40:08,880
invocation of actions

2518
01:40:08,880 --> 01:40:12,400
are we dictating that in-stack

2519
01:40:12,400 --> 01:40:14,719
actions should be before post-stack

2520
01:40:14,719 --> 01:40:19,280
actions as well as within in stack

2521
01:40:19,280 --> 01:40:20,719
how is the order

2522
01:40:20,719 --> 01:40:23,199
dictated or is it not dependent on the

2523
01:40:23,199 --> 01:40:25,679
order um you know what's your thought on

2524
01:40:25,679 --> 01:40:27,520
that

2525
01:40:27,520 --> 01:40:30,159
jegs can you answer that please

2526
01:40:30,159 --> 01:40:32,080
oh yeah

2527
01:40:32,080 --> 01:40:33,600
could you guys hear me

2528
01:40:33,600 --> 01:40:36,239
yes absolutely

2529
01:40:36,239 --> 01:40:37,679
okay

2530
01:40:37,679 --> 01:40:39,360
so if you ask i'll just repeat the

2531
01:40:39,360 --> 01:40:40,960
question so that uh i understood your

2532
01:40:40,960 --> 01:40:44,560
question so we have a ini and pni so

2533
01:40:44,560 --> 01:40:46,159
you're asking that ini is for the

2534
01:40:46,159 --> 01:40:48,080
instructor indicator and the pns for the

2535
01:40:48,080 --> 01:40:50,080
post stack indicator so asking like

2536
01:40:50,080 --> 01:40:52,400
which one whether in stack or post stack

2537
01:40:52,400 --> 01:40:55,119
is going to be the first

2538
01:40:55,360 --> 01:40:57,760
yeah if there are multiple actions one

2539
01:40:57,760 --> 01:41:00,880
some in the stack some host the stack

2540
01:41:00,880 --> 01:41:03,840
how is the order dictated uh yeah that's

2541
01:41:03,840 --> 01:41:04,719
it

2542
01:41:04,719 --> 01:41:07,199
okay so um

2543
01:41:07,199 --> 01:41:10,080
uh the order actually like uh um in the

2544
01:41:10,080 --> 01:41:11,360
order like what we encode that's why you

2545
01:41:11,360 --> 01:41:15,280
said it's more flexible like you know

2546
01:41:15,280 --> 01:41:16,400
the

2547
01:41:16,400 --> 01:41:18,960
application uh up code 10 and

2548
01:41:18,960 --> 01:41:20,880
application 20 right so the 20 can come

2549
01:41:20,880 --> 01:41:23,440
first and then can come second so it's

2550
01:41:23,440 --> 01:41:24,880
more flexible like it's whatever the

2551
01:41:24,880 --> 01:41:27,280
hidden things that the order should be

2552
01:41:27,280 --> 01:41:30,080
it can encode uh that way

2553
01:41:30,080 --> 01:41:32,880
in the instax data wise right so

2554
01:41:32,880 --> 01:41:35,199
instagram is supposed to post track data

2555
01:41:35,199 --> 01:41:37,520
so uh that actually like uh we haven't

2556
01:41:37,520 --> 01:41:40,159
covered it uh probably we can uh talk to

2557
01:41:40,159 --> 01:41:41,760
um

2558
01:41:41,760 --> 01:41:43,360
hawaii

2559
01:41:43,360 --> 01:41:44,880
who are you

2560
01:41:44,880 --> 01:41:47,199
so uh who's our you know like post stack

2561
01:41:47,199 --> 01:41:49,520
uh encoding partner so we can discuss

2562
01:41:49,520 --> 01:41:51,440
with them and then we can

2563
01:41:51,440 --> 01:41:54,000
come with that

2564
01:41:54,080 --> 01:41:55,760
okay thank you looking forward to the

2565
01:41:55,760 --> 01:41:57,600
resolution sure

2566
01:41:57,600 --> 01:41:59,440
sure

2567
01:41:59,440 --> 01:42:00,800
okay greg

2568
01:42:00,800 --> 01:42:03,280
you're next

2569
01:42:06,560 --> 01:42:08,239
great go ahead

2570
01:42:08,239 --> 01:42:11,239
greg

2571
01:42:14,239 --> 01:42:16,560
greg nursky erickson so uh my question

2572
01:42:16,560 --> 01:42:19,040
to kiribi um

2573
01:42:19,040 --> 01:42:22,719
so am i understanding correct that um

2574
01:42:22,719 --> 01:42:24,960
you

2575
01:42:25,760 --> 01:42:28,639
intend uh to to

2576
01:42:28,639 --> 01:42:30,800
cooperate with how you

2577
01:42:30,800 --> 01:42:33,520
for the post-tech data

2578
01:42:33,520 --> 01:42:36,080
encoding

2579
01:42:44,480 --> 01:42:48,000
yes indeed um so the idea would be um i

2580
01:42:48,000 --> 01:42:50,880
mean our implementation will focus on

2581
01:42:50,880 --> 01:42:53,199
the in-stack piece and you know i have a

2582
01:42:53,199 --> 01:42:56,159
bit here and can i parse it and can i

2583
01:42:56,159 --> 01:42:59,119
get the associated data not for nffrr

2584
01:42:59,119 --> 01:43:01,199
but maybe for the

2585
01:43:01,199 --> 01:43:03,440
slice id and so on but there will be a

2586
01:43:03,440 --> 01:43:06,159
bit that says there is postac data and

2587
01:43:06,159 --> 01:43:08,400
then we'll see what it takes to

2588
01:43:08,400 --> 01:43:11,600
implement to to reach the post act data

2589
01:43:11,600 --> 01:43:13,440
but the post stack data format will be

2590
01:43:13,440 --> 01:43:17,678
what's defined by how you and jeffrey

2591
01:43:18,159 --> 01:43:20,080
so i think we can keep them relatively

2592
01:43:20,080 --> 01:43:21,040
apart

2593
01:43:21,040 --> 01:43:22,880
but at some point we'll see if they were

2594
01:43:22,880 --> 01:43:25,520
together okay so um

2595
01:43:25,520 --> 01:43:28,000
that means that you support the idea

2596
01:43:28,000 --> 01:43:28,880
that

2597
01:43:28,880 --> 01:43:31,840
uh encoding of instant data and poster

2598
01:43:31,840 --> 01:43:33,840
data will be different using different

2599
01:43:33,840 --> 01:43:35,679
encoding

2600
01:43:35,679 --> 01:43:37,679
yeah

2601
01:43:37,679 --> 01:43:40,400
okay interesting thanks

2602
01:43:40,400 --> 01:43:43,199
so the in stack data you're working with

2603
01:43:43,199 --> 01:43:45,679
32 bits 31 bits

2604
01:43:45,679 --> 01:43:47,520
and you know so you

2605
01:43:47,520 --> 01:43:48,960
you probably applied different

2606
01:43:48,960 --> 01:43:50,560
techniques and try to do things in a

2607
01:43:50,560 --> 01:43:52,560
much more compressed way

2608
01:43:52,560 --> 01:43:53,920
you might say i don't want to have a

2609
01:43:53,920 --> 01:43:55,840
length field that's all implicitly

2610
01:43:55,840 --> 01:43:58,719
either it's zero or four bytes

2611
01:43:58,719 --> 01:44:00,400
whereas in post stack data i think you

2612
01:44:00,400 --> 01:44:03,119
have more space you're not constrained

2613
01:44:03,119 --> 01:44:04,960
so you don't have to work in the same

2614
01:44:04,960 --> 01:44:09,760
format that's at least my thinking now

2615
01:44:09,760 --> 01:44:14,000
okay let's discuss it thank you

2616
01:44:14,480 --> 01:44:17,280
okay jirong is next

2617
01:44:17,280 --> 01:44:20,280
she

2618
01:44:26,560 --> 01:44:29,199
are you there yes we can hear you

2619
01:44:29,199 --> 01:44:31,199
ah okay so

2620
01:44:31,199 --> 01:44:33,360
my first comment is about the postdeck

2621
01:44:33,360 --> 01:44:36,880
data i think according to the previous

2622
01:44:36,880 --> 01:44:37,760
poll

2623
01:44:37,760 --> 01:44:38,880
result

2624
01:44:38,880 --> 01:44:41,840
it shows that the psd is a necessary

2625
01:44:41,840 --> 01:44:44,719
component of the mna framework and

2626
01:44:44,719 --> 01:44:45,840
resolution

2627
01:44:45,840 --> 01:44:48,400
and from the today's discussion it is

2628
01:44:48,400 --> 01:44:50,320
clear that we are

2629
01:44:50,320 --> 01:44:52,719
converging on the single solution for

2630
01:44:52,719 --> 01:44:55,040
the psd encoding

2631
01:44:55,040 --> 01:44:58,719
so that maybe it is a

2632
01:44:58,719 --> 01:45:01,440
a good thing to move forward post that

2633
01:45:01,440 --> 01:45:04,320
data encoding first

2634
01:45:04,320 --> 01:45:08,559
the second thing is about the isd

2635
01:45:09,440 --> 01:45:11,199
according to the poll again we think

2636
01:45:11,199 --> 01:45:14,000
that it shows that people agree that isd

2637
01:45:14,000 --> 01:45:15,199
may be used

2638
01:45:15,199 --> 01:45:19,199
well there's also some concerns about

2639
01:45:19,280 --> 01:45:21,040
to suggest to minimize the use of the

2640
01:45:21,040 --> 01:45:22,159
isd

2641
01:45:22,159 --> 01:45:23,440
so

2642
01:45:23,440 --> 01:45:25,199
it seems that

2643
01:45:25,199 --> 01:45:28,159
it would be better to define isd as an

2644
01:45:28,159 --> 01:45:32,239
optional component so that we can allow

2645
01:45:32,239 --> 01:45:35,840
a mechanism to carry the indicator plus

2646
01:45:35,840 --> 01:45:38,080
the psd only

2647
01:45:38,080 --> 01:45:40,480
and the second thing is uh if we want to

2648
01:45:40,480 --> 01:45:43,760
minimize the use of isd as it seems the

2649
01:45:43,760 --> 01:45:47,040
length of the isd should be constrained

2650
01:45:47,040 --> 01:45:49,920
and the format should be easy to pass

2651
01:45:49,920 --> 01:45:52,560
because uh we have seen the proposals to

2652
01:45:52,560 --> 01:45:54,800
carry the isd

2653
01:45:54,800 --> 01:45:58,480
multiple times in the level stat also we

2654
01:45:58,480 --> 01:45:59,760
also unders

2655
01:45:59,760 --> 01:46:01,280
the first thing is we may need to

2656
01:46:01,280 --> 01:46:03,679
consider the possible changes to the

2657
01:46:03,679 --> 01:46:06,400
label stack operation introduced by the

2658
01:46:06,400 --> 01:46:07,760
isd

2659
01:46:07,760 --> 01:46:10,320
so these are the some concerns about isd

2660
01:46:10,320 --> 01:46:11,280
design

2661
01:46:11,280 --> 01:46:14,239
and following these considerations

2662
01:46:14,239 --> 01:46:16,800
we have just just submitted a new draft

2663
01:46:16,800 --> 01:46:19,679
on the encapsulation this week i will

2664
01:46:19,679 --> 01:46:23,040
post it to the chat okay thanks

2665
01:46:23,040 --> 01:46:24,719
okay thanks

2666
01:46:24,719 --> 01:46:27,119
laura

2667
01:46:27,119 --> 01:46:29,679
i have something i have haven't talked

2668
01:46:29,679 --> 01:46:32,239
about before

2669
01:46:32,239 --> 01:46:34,400
but it was brought up

2670
01:46:34,400 --> 01:46:37,199
discussing order

2671
01:46:37,199 --> 01:46:39,440
among actions

2672
01:46:39,440 --> 01:46:43,520
here so it's a small comment

2673
01:46:43,520 --> 01:46:45,440
do we actually

2674
01:46:45,440 --> 01:46:46,480
think

2675
01:46:46,480 --> 01:46:48,719
that

2676
01:46:48,719 --> 01:46:51,199
if you look at psd for example we can

2677
01:46:51,199 --> 01:46:52,719
actually

2678
01:46:52,719 --> 01:46:54,639
take them in the order they are

2679
01:46:54,639 --> 01:46:56,560
specified

2680
01:46:56,560 --> 01:46:58,400
uh

2681
01:46:58,400 --> 01:47:01,840
and then just go through the entire

2682
01:47:01,840 --> 01:47:03,600
entire chain

2683
01:47:03,600 --> 01:47:07,679
or is it like depending on

2684
01:47:07,679 --> 01:47:11,600
act uh which actions we have

2685
01:47:11,600 --> 01:47:12,400
uh

2686
01:47:12,400 --> 01:47:16,159
the order could be be different

2687
01:47:16,159 --> 01:47:18,080
i don't know if i'm not clear but i'm

2688
01:47:18,080 --> 01:47:20,000
what i fear is that

2689
01:47:20,000 --> 01:47:21,199
the order

2690
01:47:21,199 --> 01:47:23,520
between if we define

2691
01:47:23,520 --> 01:47:26,239
five different actions

2692
01:47:26,239 --> 01:47:29,840
so we do one first and then we skip two

2693
01:47:29,840 --> 01:47:33,280
do three and skip skip to five

2694
01:47:33,280 --> 01:47:36,800
but if we actually decide to do number

2695
01:47:36,800 --> 01:47:38,719
four

2696
01:47:38,719 --> 01:47:41,119
it might be necessary to actually do

2697
01:47:41,119 --> 01:47:43,119
that

2698
01:47:43,119 --> 01:47:45,760
in that chain before number three

2699
01:47:45,760 --> 01:47:49,880
so how do we handle this

2700
01:47:53,640 --> 01:47:57,090
[Laughter]

2701
01:47:59,840 --> 01:48:00,960
um

2702
01:48:00,960 --> 01:48:02,960
my question now is on terminology of the

2703
01:48:02,960 --> 01:48:05,760
framework draft but coincidentally it's

2704
01:48:05,760 --> 01:48:08,560
related to what law is asking

2705
01:48:08,560 --> 01:48:10,239
there is a term we introduced in the

2706
01:48:10,239 --> 01:48:12,480
frame framework is

2707
01:48:12,480 --> 01:48:15,760
network action sub stack

2708
01:48:15,760 --> 01:48:18,320
you know it gives the illusion is it's a

2709
01:48:18,320 --> 01:48:21,360
stack and there is an order of uh how we

2710
01:48:21,360 --> 01:48:23,600
push to the stack and then pop

2711
01:48:23,600 --> 01:48:25,679
or if we want to do popping i'm not sure

2712
01:48:25,679 --> 01:48:28,320
if we are going to allow popping of an

2713
01:48:28,320 --> 01:48:30,960
action from the sub stack

2714
01:48:30,960 --> 01:48:32,880
so that would be one

2715
01:48:32,880 --> 01:48:34,560
thing to clarify

2716
01:48:34,560 --> 01:48:35,440
uh

2717
01:48:35,440 --> 01:48:37,360
and the stack is you know it has an

2718
01:48:37,360 --> 01:48:38,560
order

2719
01:48:38,560 --> 01:48:41,280
uh in nature like a nature of stack it's

2720
01:48:41,280 --> 01:48:43,280
like there's an order of who pushed

2721
01:48:43,280 --> 01:48:47,040
first and where that entry sits so

2722
01:48:47,040 --> 01:48:49,600
with that uh you know placing the order

2723
01:48:49,600 --> 01:48:51,520
of the stack be the order of invocation

2724
01:48:51,520 --> 01:48:54,080
of the action

2725
01:48:55,280 --> 01:48:57,360
okay uh

2726
01:48:57,360 --> 01:48:58,880
tony you're next

2727
01:48:58,880 --> 01:49:00,480
no i have a comment

2728
01:49:00,480 --> 01:49:01,760
okay

2729
01:49:01,760 --> 01:49:03,040
go ahead

2730
01:49:03,040 --> 01:49:05,119
tarek that means that you can only do

2731
01:49:05,119 --> 01:49:06,480
that

2732
01:49:06,480 --> 01:49:10,080
for a homo enu set of actions either psd

2733
01:49:10,080 --> 01:49:11,440
or isd

2734
01:49:11,440 --> 01:49:15,239
you can't mix them

2735
01:49:16,560 --> 01:49:19,760
at least if we can clarify within isd

2736
01:49:19,760 --> 01:49:23,040
because the framework draft talks about

2737
01:49:23,040 --> 01:49:23,840
uh

2738
01:49:23,840 --> 01:49:26,159
sub stack or action network action sub

2739
01:49:26,159 --> 01:49:28,320
stack

2740
01:49:28,320 --> 01:49:30,639
yep

2741
01:49:34,320 --> 01:49:36,159
okay so

2742
01:49:36,159 --> 01:49:39,280
so the solution has its out

2743
01:49:39,280 --> 01:49:42,239
basically a solution has to define what

2744
01:49:42,239 --> 01:49:44,400
the order of operations for the network

2745
01:49:44,400 --> 01:49:45,920
actions are

2746
01:49:45,920 --> 01:49:48,880
now that could be anything deterministic

2747
01:49:48,880 --> 01:49:51,119
you can go according to code point

2748
01:49:51,119 --> 01:49:52,400
numbers

2749
01:49:52,400 --> 01:49:54,800
you could go top to bottom left to right

2750
01:49:54,800 --> 01:49:57,840
you could go right to left bottom to top

2751
01:49:57,840 --> 01:49:59,679
whatever you want to do as long as it's

2752
01:49:59,679 --> 01:50:02,159
deterministic and of course it has to be

2753
01:50:02,159 --> 01:50:05,920
specified in the solution document

2754
01:50:06,719 --> 01:50:08,880
and you could do a

2755
01:50:08,880 --> 01:50:12,320
create your own list and do it that way

2756
01:50:12,320 --> 01:50:13,760
you could do that too

2757
01:50:13,760 --> 01:50:16,159
it just needs to be specified

2758
01:50:16,159 --> 01:50:16,880
so

2759
01:50:16,880 --> 01:50:19,119
could there be in that list could that

2760
01:50:19,119 --> 01:50:22,840
be a mix of psd and isd

2761
01:50:22,840 --> 01:50:24,639
related

2762
01:50:24,639 --> 01:50:26,880
action action indicators

2763
01:50:26,880 --> 01:50:28,480
it can be anything as long as it's

2764
01:50:28,480 --> 01:50:32,638
documented okay you told me

2765
01:50:34,080 --> 01:50:36,400
okay

2766
01:50:36,639 --> 01:50:39,360
how you go ahead okay yeah i i think uh

2767
01:50:39,360 --> 01:50:42,560
for psd the only requirement we

2768
01:50:42,560 --> 01:50:44,960
suggest is to put the hope by hope type

2769
01:50:44,960 --> 01:50:47,920
before the end to end type because uh in

2770
01:50:47,920 --> 01:50:51,040
on the past past note you you never need

2771
01:50:51,040 --> 01:50:52,880
to look beyond the

2772
01:50:52,880 --> 01:50:54,639
uh hope i hope

2773
01:50:54,639 --> 01:50:57,119
extension headers so that's the obvious

2774
01:50:57,119 --> 01:50:59,360
optimization other than that i don't

2775
01:50:59,360 --> 01:51:02,880
think we should dictate any order of

2776
01:51:02,880 --> 01:51:05,679
execution because that totally depends

2777
01:51:05,679 --> 01:51:07,599
how you implement that

2778
01:51:07,599 --> 01:51:10,320
in many uh platforms i i know that

2779
01:51:10,320 --> 01:51:11,280
actually

2780
01:51:11,280 --> 01:51:14,960
they do the header parts uh up front and

2781
01:51:14,960 --> 01:51:17,760
then uh in actual uh factory uh for a

2782
01:51:17,760 --> 01:51:20,639
processing pipeline they decide uh which

2783
01:51:20,639 --> 01:51:23,360
which one to actually execute first with

2784
01:51:23,360 --> 01:51:26,159
the order of execution so in that sense

2785
01:51:26,159 --> 01:51:26,880
we

2786
01:51:26,880 --> 01:51:29,679
uh we shouldn't dictate the order of

2787
01:51:29,679 --> 01:51:31,520
actions

2788
01:51:31,520 --> 01:51:33,599
that's my comments

2789
01:51:33,599 --> 01:51:35,679
okay thank you

2790
01:51:35,679 --> 01:51:39,760
john you're up next i'm john drake

2791
01:51:39,760 --> 01:51:40,960
i'm going to say

2792
01:51:40,960 --> 01:51:43,520
following up on what uh tony said uh

2793
01:51:43,520 --> 01:51:46,719
it's also possible to define a

2794
01:51:46,719 --> 01:51:48,880
composite network action

2795
01:51:48,880 --> 01:51:50,880
which is a set of individual network

2796
01:51:50,880 --> 01:51:54,239
actions in a specific order

2797
01:51:57,440 --> 01:51:59,760
okay that was quick

2798
01:51:59,760 --> 01:52:02,760
zeon

2799
01:52:06,960 --> 01:52:08,880
yes

2800
01:52:08,880 --> 01:52:12,480
yeah i'm here in person

2801
01:52:13,360 --> 01:52:15,440
i had a quick question

2802
01:52:15,440 --> 01:52:17,920
if there's a case where you had both in

2803
01:52:17,920 --> 01:52:20,639
stack and post stack i guess in parallel

2804
01:52:20,639 --> 01:52:22,800
would there be um

2805
01:52:22,800 --> 01:52:26,239
any performance issues with and probably

2806
01:52:26,239 --> 01:52:28,239
order of operations kind of what we're

2807
01:52:28,239 --> 01:52:30,560
talking about with the mna actions

2808
01:52:30,560 --> 01:52:31,920
of

2809
01:52:31,920 --> 01:52:34,800
you know processing post stack

2810
01:52:34,800 --> 01:52:36,639
first and then

2811
01:52:36,639 --> 01:52:39,199
and then in stack or maybe not doing

2812
01:52:39,199 --> 01:52:41,520
both in parallel because that seems like

2813
01:52:41,520 --> 01:52:44,159
there may be uh performance

2814
01:52:44,159 --> 01:52:45,840
issues related to that

2815
01:52:45,840 --> 01:52:48,080
thank you

2816
01:52:48,080 --> 01:52:50,880
was that question um aimed to anybody in

2817
01:52:50,880 --> 01:52:53,040
particular

2818
01:52:53,040 --> 01:52:55,440
i i just it was for anybody who could

2819
01:52:55,440 --> 01:52:57,119
answer i just a question that i thought

2820
01:52:57,119 --> 01:52:59,840
of how how would that work and would

2821
01:52:59,840 --> 01:53:01,599
would would there be an order of

2822
01:53:01,599 --> 01:53:03,520
operation if you're

2823
01:53:03,520 --> 01:53:05,760
processing pull stack and then you also

2824
01:53:05,760 --> 01:53:07,679
had in-stack data first would you want

2825
01:53:07,679 --> 01:53:08,719
to

2826
01:53:08,719 --> 01:53:11,199
process in-stack first before post-stack

2827
01:53:11,199 --> 01:53:13,360
or vice versa to me it seems like you

2828
01:53:13,360 --> 01:53:14,639
would probably want to

2829
01:53:14,639 --> 01:53:16,719
do the top of the stack in stack first

2830
01:53:16,719 --> 01:53:19,199
and then post stack but that just as

2831
01:53:19,199 --> 01:53:21,360
regarding performance i guess and what

2832
01:53:21,360 --> 01:53:23,440
would be the best way to do that as far

2833
01:53:23,440 --> 01:53:24,960
as performance

2834
01:53:24,960 --> 01:53:27,280
creedy would you like to answer that i

2835
01:53:27,280 --> 01:53:28,960
see you standing there

2836
01:53:28,960 --> 01:53:31,119
all right

2837
01:53:31,360 --> 01:53:32,320
um

2838
01:53:32,320 --> 01:53:36,639
yes so the the idea of in stack data is

2839
01:53:36,639 --> 01:53:38,320
it should be the stuff that is more

2840
01:53:38,320 --> 01:53:39,440
critical

2841
01:53:39,440 --> 01:53:41,199
and because it's more critical you want

2842
01:53:41,199 --> 01:53:44,000
to put it closer to the top of stack

2843
01:53:44,000 --> 01:53:46,719
you know cause a lower penalty or impose

2844
01:53:46,719 --> 01:53:48,560
a lower penalty on getting to it and

2845
01:53:48,560 --> 01:53:50,960
doing things so there's this implicit

2846
01:53:50,960 --> 01:53:52,000
thing that

2847
01:53:52,000 --> 01:53:54,880
anything that you put in stack is more

2848
01:53:54,880 --> 01:53:56,159
urgent

2849
01:53:56,159 --> 01:53:58,880
and then the post stack staff also has x

2850
01:53:58,880 --> 01:54:01,119
and the additional thing that

2851
01:54:01,119 --> 01:54:02,880
um there will be some things that are

2852
01:54:02,880 --> 01:54:04,239
hop by hop

2853
01:54:04,239 --> 01:54:06,480
and some things that are end to end so

2854
01:54:06,480 --> 01:54:07,760
post stack

2855
01:54:07,760 --> 01:54:09,360
you would never put something that's in

2856
01:54:09,360 --> 01:54:11,599
stack which is end to end that would be

2857
01:54:11,599 --> 01:54:13,760
a waste of in stack space

2858
01:54:13,760 --> 01:54:16,400
so so that's kind of the answer to your

2859
01:54:16,400 --> 01:54:17,840
question again

2860
01:54:17,840 --> 01:54:18,639
that

2861
01:54:18,639 --> 01:54:21,760
in stack data will generally be

2862
01:54:21,760 --> 01:54:22,400
more

2863
01:54:22,400 --> 01:54:25,920
urgent and stuff you want to do first

2864
01:54:25,920 --> 01:54:28,800
post-stack data will be generally

2865
01:54:28,800 --> 01:54:30,639
stuff that you

2866
01:54:30,639 --> 01:54:32,719
is more optional and some of it will

2867
01:54:32,719 --> 01:54:35,760
definitely be pushed only to further end

2868
01:54:35,760 --> 01:54:37,840
so it's not the hop by harvest end to

2869
01:54:37,840 --> 01:54:38,880
end

2870
01:54:38,880 --> 01:54:40,400
that's my view

2871
01:54:40,400 --> 01:54:43,040
great thank you now we have five minutes

2872
01:54:43,040 --> 01:54:44,639
left in the session

2873
01:54:44,639 --> 01:54:45,599
and

2874
01:54:45,599 --> 01:54:47,520
meet echo is

2875
01:54:47,520 --> 01:54:49,599
is pretty strict about meetings ending

2876
01:54:49,599 --> 01:54:53,199
on time so um i've locked the queue with

2877
01:54:53,199 --> 01:54:55,840
two people left um rock cash and then

2878
01:54:55,840 --> 01:54:57,040
how you

2879
01:54:57,040 --> 01:54:59,760
so rakesh go ahead

2880
01:54:59,760 --> 01:55:01,119
hi uh

2881
01:55:01,119 --> 01:55:03,040
from cisco system so

2882
01:55:03,040 --> 01:55:05,119
just to answer that question on the

2883
01:55:05,119 --> 01:55:07,199
order in which the

2884
01:55:07,199 --> 01:55:09,679
network action to be executed the jack

2885
01:55:09,679 --> 01:55:11,920
strap has a very good solution for it

2886
01:55:11,920 --> 01:55:13,679
which is opcode base

2887
01:55:13,679 --> 01:55:16,480
and the end cap node can

2888
01:55:16,480 --> 01:55:19,119
add the of course in a certain order

2889
01:55:19,119 --> 01:55:21,599
uh it can be 24 and 10 or whatever order

2890
01:55:21,599 --> 01:55:23,760
that end cap note desires the midpoint

2891
01:55:23,760 --> 01:55:25,840
to perform the action

2892
01:55:25,840 --> 01:55:27,840
that's one good feature about it the

2893
01:55:27,840 --> 01:55:29,520
second thing is that

2894
01:55:29,520 --> 01:55:32,159
an awkward itself can be defined as a

2895
01:55:32,159 --> 01:55:33,760
series of flags

2896
01:55:33,760 --> 01:55:35,599
and it has a meaning that it needs to be

2897
01:55:35,599 --> 01:55:37,440
executed in this order

2898
01:55:37,440 --> 01:55:39,760
so that also allows us to do the

2899
01:55:39,760 --> 01:55:41,599
operations at midpoint without any

2900
01:55:41,599 --> 01:55:44,000
ambiguity in a certain order so there is

2901
01:55:44,000 --> 01:55:47,040
a lot of flexibility in the draft to

2902
01:55:47,040 --> 01:55:50,000
help with this situation thanks

2903
01:55:50,000 --> 01:55:53,440
okay and how are you

2904
01:55:54,880 --> 01:55:58,080
yeah i i don't think the urgency is a

2905
01:55:58,080 --> 01:56:00,639
criteria to put it in stack or post

2906
01:56:00,639 --> 01:56:01,440
stack

2907
01:56:01,440 --> 01:56:04,239
because obviously some actions will

2908
01:56:04,239 --> 01:56:06,800
require a large header overhead you

2909
01:56:06,800 --> 01:56:10,000
simply cannot put it in stack

2910
01:56:10,000 --> 01:56:12,719
because a size too big to put in the

2911
01:56:12,719 --> 01:56:13,599
stack

2912
01:56:13,599 --> 01:56:16,239
you have to put in post stack so but it

2913
01:56:16,239 --> 01:56:18,800
might be very uh important to for that

2914
01:56:18,800 --> 01:56:20,960
action so uh

2915
01:56:20,960 --> 01:56:23,440
and also from the hardware design

2916
01:56:23,440 --> 01:56:25,679
perspective you know if you do the

2917
01:56:25,679 --> 01:56:28,639
parsing first and do the processing

2918
01:56:28,639 --> 01:56:31,280
later actually it really doesn't matter

2919
01:56:31,280 --> 01:56:33,040
if we put earlier in the package or

2920
01:56:33,040 --> 01:56:35,840
later in the package so it it's totally

2921
01:56:35,840 --> 01:56:38,560
up to the implementer to decide which

2922
01:56:38,560 --> 01:56:41,760
action you will execute first so the

2923
01:56:41,760 --> 01:56:44,560
urgency is no to criteria here

2924
01:56:44,560 --> 01:56:47,520
okay thank you and

2925
01:56:47,520 --> 01:56:48,560
tarek

2926
01:56:48,560 --> 01:56:50,800
can you close this out

2927
01:56:50,800 --> 01:56:52,880
sorry i didn't realize if if the queue

2928
01:56:52,880 --> 01:56:55,280
was closed or not

2929
01:56:55,280 --> 01:56:57,920
was it closed after me on before me

2930
01:56:57,920 --> 01:56:59,440
it's closed now

2931
01:56:59,440 --> 01:57:01,440
okay so you'll ask

2932
01:57:01,440 --> 01:57:03,520
okay um

2933
01:57:03,520 --> 01:57:05,119
okay uh

2934
01:57:05,119 --> 01:57:07,280
i was gonna ask a question

2935
01:57:07,280 --> 01:57:10,400
oh my goodness um

2936
01:57:10,400 --> 01:57:13,199
i forgot anyways i'm sorry i'll i'll

2937
01:57:13,199 --> 01:57:15,520
back out let go you can take it to the

2938
01:57:15,520 --> 01:57:17,599
list please

2939
01:57:17,599 --> 01:57:20,800
okay and with that i would like to close

2940
01:57:20,800 --> 01:57:25,040
today's um pals mpls and detonate joint

2941
01:57:25,040 --> 01:57:27,280
session i'd like to thank everyone who

2942
01:57:27,280 --> 01:57:30,000
participated both remote and

2943
01:57:30,000 --> 01:57:31,280
in person

2944
01:57:31,280 --> 01:57:35,840
and we will see you all at iatf 115.

2945
01:57:35,840 --> 01:57:39,400
thank you very much

2946
01:57:58,400 --> 01:58:01,400
huh

2947
01:58:20,320 --> 01:58:23,320
hello

2948
01:58:42,320 --> 01:58:43,720
i know

2949
01:58:43,720 --> 01:58:46,819
[Music]

2950
01:58:54,239 --> 01:58:57,400
my neighbors

