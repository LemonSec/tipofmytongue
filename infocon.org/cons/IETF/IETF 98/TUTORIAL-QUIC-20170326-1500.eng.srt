1
00:00:13,340 --> 00:01:19,130
<font color="#CCCCCC">hang</font><font color="#E5E5E5"> on sir</font><font color="#CCCCCC"> no it's not that it's it's</font>

2
00:00:21,090 --> 00:01:19,130
usually they<font color="#CCCCCC"> have</font><font color="#E5E5E5"> it you know me well</font>

3
00:01:27,740 --> 00:01:30,740
<font color="#E5E5E5">yeah</font>

4
00:01:30,760 --> 00:02:12,100
I tried<font color="#E5E5E5"> the Euston</font><font color="#CCCCCC"> Oh</font><font color="#E5E5E5"> under scan</font><font color="#CCCCCC"> it</font>

5
00:02:09,369 --> 00:02:30,280
changes<font color="#CCCCCC"> that as addiction</font><font color="#E5E5E5"> doesn't</font><font color="#CCCCCC"> change</font>

6
00:02:12,100 --> 00:02:31,720
the size<font color="#E5E5E5"> of the display</font><font color="#CCCCCC"> it's probably</font>

7
00:02:30,280 --> 00:02:34,840
<font color="#E5E5E5">close some of these windows just to be</font>

8
00:02:31,720 --> 00:02:37,320
safe have them projected<font color="#E5E5E5"> Blake</font>

9
00:02:34,840 --> 00:02:37,320
everywhere

10
00:03:00,760 --> 00:03:23,600
yeah it's coming<font color="#E5E5E5"> back up now</font><font color="#CCCCCC"> yeah I</font><font color="#E5E5E5"> mean</font>

11
00:03:16,130 --> 00:03:26,350
at this point it's<font color="#E5E5E5"> year three</font><font color="#CCCCCC"> so it's</font>

12
00:03:23,600 --> 00:03:26,350
<font color="#CCCCCC">showing</font><font color="#E5E5E5"> up completely</font>

13
00:04:14,210 --> 00:04:21,450
let's get<font color="#E5E5E5"> started</font>

14
00:04:17,180 --> 00:04:23,700
my name is<font color="#CCCCCC"> Jenna anger and and if</font>

15
00:04:21,450 --> 00:04:26,849
everybody could find a seat<font color="#E5E5E5"> quickly</font><font color="#CCCCCC"> we</font>

16
00:04:23,700 --> 00:04:30,750
are<font color="#E5E5E5"> already late which is not a very</font>

17
00:04:26,850 --> 00:04:35,690
good<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> given</font><font color="#E5E5E5"> that I have like 75</font>

18
00:04:30,750 --> 00:04:35,690
slides<font color="#CCCCCC"> I don't I'm kidding</font>

19
00:04:35,930 --> 00:04:42,360
so this is a quick tutorial and

20
00:04:40,430 --> 00:04:43,590
basically to give you<font color="#E5E5E5"> an overview of</font>

21
00:04:42,360 --> 00:04:49,680
what's going<font color="#CCCCCC"> on</font><font color="#E5E5E5"> and quick and if</font><font color="#CCCCCC"> you've</font>

22
00:04:43,590 --> 00:04:51,390
heard of quake<font color="#CCCCCC"> and so on</font><font color="#E5E5E5"> I'll well I</font>

23
00:04:49,680 --> 00:04:54,990
just<font color="#E5E5E5"> started so here's what you can</font>

24
00:04:51,390 --> 00:04:57,330
<font color="#CCCCCC">expect</font><font color="#E5E5E5"> over the</font><font color="#CCCCCC"> next hour a brief</font>

25
00:04:54,990 --> 00:04:59,850
<font color="#E5E5E5">history of quick what the motivations</font>

26
00:04:57,330 --> 00:05:02,280
were what drove us<font color="#CCCCCC"> to actually build</font>

27
00:04:59,850 --> 00:05:05,970
quick<font color="#E5E5E5"> and</font><font color="#CCCCCC"> work on standardizing</font>

28
00:05:02,280 --> 00:05:07,830
<font color="#E5E5E5">something like quick</font><font color="#CCCCCC"> a high-level</font>

29
00:05:05,970 --> 00:05:10,770
overview<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the work that's</font><font color="#CCCCCC"> going on</font><font color="#E5E5E5"> in</font>

30
00:05:07,830 --> 00:05:14,219
the working group where the<font color="#E5E5E5"> working</font>

31
00:05:10,770 --> 00:05:17,940
group<font color="#E5E5E5"> is today and you should find this</font>

32
00:05:14,220 --> 00:05:19,830
tutorial useful if<font color="#CCCCCC"> http/2 and quick are</font>

33
00:05:17,940 --> 00:05:21,660
buzzwords<font color="#CCCCCC"> you</font><font color="#E5E5E5"> heard them</font>

34
00:05:19,830 --> 00:05:25,320
<font color="#E5E5E5">you seen them but you don't know what</font>

35
00:05:21,660 --> 00:05:30,030
they<font color="#E5E5E5"> are if he can break</font><font color="#CCCCCC"> BGP but he</font>

36
00:05:25,320 --> 00:05:31,740
think of<font color="#E5E5E5"> TCS that's for fluffy people if</font>

37
00:05:30,030 --> 00:05:33,210
you can write an app in 15 minutes a

38
00:05:31,740 --> 00:05:35,640
mobile app<font color="#E5E5E5"> I couldn't do it to save my</font>

39
00:05:33,210 --> 00:05:39,859
life<font color="#E5E5E5"> but you've never seen a TCP dump</font>

40
00:05:35,640 --> 00:05:43,169
trace then this presentation is<font color="#E5E5E5"> for you</font>

41
00:05:39,860 --> 00:05:46,380
<font color="#CCCCCC">just bear in mind to the other people</font>

42
00:05:43,169 --> 00:05:47,880
<font color="#CCCCCC">who already know what</font><font color="#E5E5E5"> quickest this is</font>

43
00:05:46,380 --> 00:05:50,760
not a working<font color="#E5E5E5"> group meeting please don't</font>

44
00:05:47,880 --> 00:05:53,040
turn it into one if you're already

45
00:05:50,760 --> 00:05:54,450
participating in quick work please<font color="#E5E5E5"> feel</font>

46
00:05:53,040 --> 00:05:55,979
free to offer clarifications at any

47
00:05:54,450 --> 00:05:57,270
point in time<font color="#E5E5E5"> and this was true for</font>

48
00:05:55,979 --> 00:06:00,360
<font color="#CCCCCC">everybody in general feel free to</font>

49
00:05:57,270 --> 00:06:02,070
interrupt me<font color="#E5E5E5"> but if I need to go on to</font>

50
00:06:00,360 --> 00:06:05,940
the<font color="#E5E5E5"> end of the presentation I will say</font>

51
00:06:02,070 --> 00:06:07,430
so<font color="#E5E5E5"> there are no questions</font><font color="#CCCCCC"> for people who</font>

52
00:06:05,940 --> 00:06:08,550
are already participating in quick work

53
00:06:07,430 --> 00:06:10,020
sorry

54
00:06:08,550 --> 00:06:12,090
<font color="#CCCCCC">senior questions</font><font color="#E5E5E5"> for the</font><font color="#CCCCCC"> working group</font>

55
00:06:10,020 --> 00:06:14,729
meeting and you probably<font color="#E5E5E5"> rather</font><font color="#CCCCCC"> be</font>

56
00:06:12,090 --> 00:06:19,310
staring<font color="#E5E5E5"> at a</font><font color="#CCCCCC"> laptop screen</font><font color="#E5E5E5"> anyways so</font>

57
00:06:14,729 --> 00:06:23,450
with that let's get going

58
00:06:19,310 --> 00:06:25,250
what's quick<font color="#CCCCCC"> a very brief history</font><font color="#E5E5E5"> of</font>

59
00:06:23,450 --> 00:06:27,020
quick cause you might have heard of

60
00:06:25,250 --> 00:06:28,700
quick as this thing from<font color="#CCCCCC"> Google as this</font>

61
00:06:27,020 --> 00:06:30,940
thing that's a working<font color="#CCCCCC"> group</font><font color="#E5E5E5"> and you are</font>

62
00:06:28,700 --> 00:06:34,070
<font color="#E5E5E5">completely confused exactly what it is</font>

63
00:06:30,940 --> 00:06:37,640
<font color="#E5E5E5">it was an experimental protocol it's</font>

64
00:06:34,070 --> 00:06:42,070
been deployed<font color="#E5E5E5"> by Google</font><font color="#CCCCCC"> and it started</font>

65
00:06:37,640 --> 00:06:44,690
<font color="#E5E5E5">in 2014</font><font color="#CCCCCC"> the department</font><font color="#E5E5E5"> of quick</font><font color="#CCCCCC"> this was</font>

66
00:06:42,070 --> 00:06:47,900
this has been quite widely deployed

67
00:06:44,690 --> 00:06:49,670
<font color="#E5E5E5">between</font><font color="#CCCCCC"> Google's services and</font><font color="#E5E5E5"> chrome and</font>

68
00:06:47,900 --> 00:06:54,020
other<font color="#E5E5E5"> mobile applications such as</font>

69
00:06:49,670 --> 00:06:57,680
YouTube app<font color="#E5E5E5"> and search Google</font><font color="#CCCCCC"> search</font>

70
00:06:54,020 --> 00:06:59,510
<font color="#CCCCCC">happened so on this basically was</font>

71
00:06:57,680 --> 00:07:02,210
deployed widely<font color="#E5E5E5"> because it improved</font>

72
00:06:59,510 --> 00:07:04,099
<font color="#E5E5E5">basically a page load latency for us it</font>

73
00:07:02,210 --> 00:07:06,020
improved search latency for<font color="#E5E5E5"> us and</font><font color="#CCCCCC"> it</font>

74
00:07:04,100 --> 00:07:07,940
improved with your<font color="#E5E5E5"> e buffer</font><font color="#CCCCCC"> rate among</font>

75
00:07:06,020 --> 00:07:10,219
other things<font color="#E5E5E5"> for YouTube so there are a</font>

76
00:07:07,940 --> 00:07:11,870
lot<font color="#CCCCCC"> of benefits</font><font color="#E5E5E5"> that we saw from having</font>

77
00:07:10,220 --> 00:07:14,990
this experimental protocol so we

78
00:07:11,870 --> 00:07:16,160
deployed it<font color="#CCCCCC"> widely</font><font color="#E5E5E5"> and it's what we</font>

79
00:07:14,990 --> 00:07:19,160
would consider a<font color="#E5E5E5"> successful experiment</font>

80
00:07:16,160 --> 00:07:21,800
<font color="#E5E5E5">today</font><font color="#CCCCCC"> to the</font><font color="#E5E5E5"> extent that we've deployed</font>

81
00:07:19,160 --> 00:07:25,640
it<font color="#E5E5E5"> it's it's about 35% of Google's</font>

82
00:07:21,800 --> 00:07:28,010
egress traffic is quick which by<font color="#E5E5E5"> sand</font>

83
00:07:25,640 --> 00:07:30,580
<font color="#E5E5E5">wines estimates is about 7%</font><font color="#CCCCCC"> of all</font>

84
00:07:28,010 --> 00:07:30,580
Internet traffic

85
00:07:30,940 --> 00:07:37,370
<font color="#CCCCCC">Akamai</font><font color="#E5E5E5"> is deployment started in 2016</font>

86
00:07:34,360 --> 00:07:40,520
Akamai<font color="#CCCCCC"> is has deployed quick and is</font>

87
00:07:37,370 --> 00:07:44,500
offering<font color="#E5E5E5"> it as a thing that</font><font color="#CCCCCC"> their</font>

88
00:07:40,520 --> 00:07:46,669
customers can<font color="#CCCCCC"> opt in can choose to</font><font color="#E5E5E5"> use</font>

89
00:07:44,500 --> 00:07:51,010
the working group for quick was formed

90
00:07:46,670 --> 00:07:55,550
in the IDF in 2016 last October and the

91
00:07:51,010 --> 00:07:56,960
after the Berlin IDF and<font color="#CCCCCC"> the goal of the</font>

92
00:07:55,550 --> 00:07:58,610
working group is<font color="#E5E5E5"> to modularize and</font>

93
00:07:56,960 --> 00:08:00,739
sanitize<font color="#CCCCCC"> quicken parts quick awesome</font>

94
00:07:58,610 --> 00:08:02,210
experiment it was<font color="#E5E5E5"> built as like one big</font>

95
00:08:00,740 --> 00:08:03,710
monolithic<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> you'll understand these</font>

96
00:08:02,210 --> 00:08:06,979
things<font color="#E5E5E5"> as we</font><font color="#CCCCCC"> go through</font><font color="#E5E5E5"> I'm just</font><font color="#CCCCCC"> giving</font>

97
00:08:03,710 --> 00:08:10,640
you<font color="#CCCCCC"> a rough quick high</font><font color="#E5E5E5"> order history of</font>

98
00:08:06,980 --> 00:08:13,040
what's happened so<font color="#CCCCCC"> far and the working</font>

99
00:08:10,640 --> 00:08:18,200
groups goal is to use HTTP as the

100
00:08:13,040 --> 00:08:20,720
initial application for<font color="#CCCCCC"> for quick before</font>

101
00:08:18,200 --> 00:08:23,930
I move on<font color="#E5E5E5"> just just so I know who my</font>

102
00:08:20,720 --> 00:08:26,660
audience is here how many<font color="#E5E5E5"> of you are not</font>

103
00:08:23,930 --> 00:08:27,710
<font color="#E5E5E5">familiar with what quick does how many</font>

104
00:08:26,660 --> 00:08:32,110
<font color="#CCCCCC">of you how many</font><font color="#E5E5E5"> of you would consider</font>

105
00:08:27,710 --> 00:08:32,110
yourselves<font color="#E5E5E5"> newbies too quick</font>

106
00:08:33,080 --> 00:08:43,050
excellent let's talk<font color="#E5E5E5"> us for you the</font>

107
00:08:36,390 --> 00:08:45,569
others I don't<font color="#CCCCCC"> care about so let's start</font>

108
00:08:43,049 --> 00:08:48,030
with what<font color="#CCCCCC"> http/2 is before we</font><font color="#E5E5E5"> actually</font>

109
00:08:45,570 --> 00:08:50,430
<font color="#E5E5E5">get</font><font color="#CCCCCC"> into what quick is and actually</font>

110
00:08:48,030 --> 00:08:51,630
before<font color="#E5E5E5"> we talk</font><font color="#CCCCCC"> about what http/2 is we</font>

111
00:08:50,430 --> 00:08:53,459
need to understand what a web<font color="#E5E5E5"> page looks</font>

112
00:08:51,630 --> 00:08:55,590
<font color="#E5E5E5">like because</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> going through a brief</font>

113
00:08:53,460 --> 00:08:58,530
history of HTTP first before<font color="#E5E5E5"> you get</font><font color="#CCCCCC"> too</font>

114
00:08:55,590 --> 00:09:00,240
quick itself<font color="#CCCCCC"> so what does a web</font><font color="#E5E5E5"> page</font>

115
00:08:58,530 --> 00:09:01,949
look like well it looks like this

116
00:09:00,240 --> 00:09:05,070
<font color="#E5E5E5">there's the IDF web page it has</font><font color="#CCCCCC"> a bunch</font>

117
00:09:01,950 --> 00:09:07,260
<font color="#E5E5E5">of objects scripts various things that</font>

118
00:09:05,070 --> 00:09:12,930
<font color="#E5E5E5">you're familiar with lots of things</font>

119
00:09:07,260 --> 00:09:15,780
essentially make up a<font color="#E5E5E5"> web page so how</font>

120
00:09:12,930 --> 00:09:18,270
does HTTP one do this<font color="#E5E5E5"> how does HTTP how</font>

121
00:09:15,780 --> 00:09:19,890
do you use HTTP<font color="#CCCCCC"> 1 how</font><font color="#E5E5E5"> does HTTP one</font>

122
00:09:18,270 --> 00:09:23,370
transfer by<font color="#E5E5E5"> its how does</font><font color="#CCCCCC"> HD won't dance</font>

123
00:09:19,890 --> 00:09:27,030
with<font color="#E5E5E5"> these objects between a client and</font>

124
00:09:23,370 --> 00:09:28,530
a server<font color="#E5E5E5"> well first you need connection</font>

125
00:09:27,030 --> 00:09:31,620
setup<font color="#CCCCCC"> between the client and the server</font>

126
00:09:28,530 --> 00:09:34,230
<font color="#CCCCCC">what do</font><font color="#E5E5E5"> I mean the connection setup it's</font>

127
00:09:31,620 --> 00:09:38,220
a one round<font color="#E5E5E5"> trip one round</font><font color="#CCCCCC"> trip to set</font>

128
00:09:34,230 --> 00:09:40,380
up a TCP<font color="#CCCCCC"> connection and about two round</font>

129
00:09:38,220 --> 00:09:45,240
trips to set up<font color="#E5E5E5"> a TLS if you're</font><font color="#CCCCCC"> doing</font>

130
00:09:40,380 --> 00:09:47,490
<font color="#CCCCCC">1.2 then a 1.2 connection and before you</font>

131
00:09:45,240 --> 00:09:49,140
- yes we'll talk about TCP fast open<font color="#E5E5E5"> and</font>

132
00:09:47,490 --> 00:09:52,830
we'll talk about<font color="#E5E5E5"> years 1.3 but not yet</font>

133
00:09:49,140 --> 00:09:54,150
<font color="#CCCCCC">we'll get</font><font color="#E5E5E5"> there slowly so it</font><font color="#CCCCCC"> takes a</font>

134
00:09:52,830 --> 00:09:57,540
<font color="#E5E5E5">fair amount of time to actually set up</font>

135
00:09:54,150 --> 00:09:59,220
an HTTP<font color="#CCCCCC"> connection or a TLS over TCP</font>

136
00:09:57,540 --> 00:10:02,099
connection before<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> even transfer</font>

137
00:09:59,220 --> 00:10:03,870
these objects down from the server<font color="#E5E5E5"> to</font>

138
00:10:02,100 --> 00:10:07,290
<font color="#E5E5E5">the client</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> question transfer these</font>

139
00:10:03,870 --> 00:10:10,200
objects<font color="#E5E5E5"> down after the set up HTTP</font>

140
00:10:07,290 --> 00:10:16,079
requests<font color="#E5E5E5"> and responses flow over this</font>

141
00:10:10,200 --> 00:10:18,570
connection<font color="#E5E5E5"> that's been set up going</font>

142
00:10:16,080 --> 00:10:20,100
further yes<font color="#E5E5E5"> what it looks like roughly</font>

143
00:10:18,570 --> 00:10:24,440
let's say there are<font color="#E5E5E5"> these three objects</font>

144
00:10:20,100 --> 00:10:24,440
<font color="#E5E5E5">that we saw on the IETF</font><font color="#CCCCCC"> web site and</font>

145
00:10:24,470 --> 00:10:27,720
excuse me

146
00:10:25,740 --> 00:10:29,280
and the web<font color="#E5E5E5"> server has these three</font>

147
00:10:27,720 --> 00:10:30,720
objects you<font color="#CCCCCC"> have a</font><font color="#E5E5E5"> client that's</font><font color="#CCCCCC"> a</font>

148
00:10:29,280 --> 00:10:32,790
browser and we just went<font color="#CCCCCC"> through this</font>

149
00:10:30,720 --> 00:10:35,760
three round-trips of setting up a TLS

150
00:10:32,790 --> 00:10:37,079
over TCP connection<font color="#E5E5E5"> and now</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> are</font>

151
00:10:35,760 --> 00:10:39,600
<font color="#CCCCCC">talking to the web server but</font><font color="#E5E5E5"> we don't</font>

152
00:10:37,080 --> 00:10:43,440
have<font color="#E5E5E5"> the objects yet so the current</font>

153
00:10:39,600 --> 00:10:45,840
first sends a request<font color="#CCCCCC"> over the TCP</font>

154
00:10:43,440 --> 00:10:49,350
connection and fetches the<font color="#E5E5E5"> first object</font>

155
00:10:45,840 --> 00:10:50,880
from the server then sends<font color="#E5E5E5"> a second</font>

156
00:10:49,350 --> 00:10:53,460
<font color="#E5E5E5">request and fetches</font><font color="#CCCCCC"> the second object</font>

157
00:10:50,880 --> 00:10:54,960
<font color="#E5E5E5">from the server and then since the third</font>

158
00:10:53,460 --> 00:10:58,230
request and fetches<font color="#CCCCCC"> a</font><font color="#E5E5E5"> third object</font><font color="#CCCCCC"> from</font>

159
00:10:54,960 --> 00:11:00,300
the server this<font color="#CCCCCC"> is all</font><font color="#E5E5E5"> wonderful</font><font color="#CCCCCC"> so we</font>

160
00:10:58,230 --> 00:11:03,620
have the web page<font color="#E5E5E5"> and it shows up and</font>

161
00:11:00,300 --> 00:11:09,170
it's great can<font color="#E5E5E5"> we</font><font color="#CCCCCC"> do better</font>

162
00:11:03,620 --> 00:11:10,920
any ideas I'm sure you read something

163
00:11:09,170 --> 00:11:13,110
what<font color="#E5E5E5"> could you do to make this better</font>

164
00:11:10,920 --> 00:11:17,000
<font color="#CCCCCC">come on tell me</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> right answer cuz we</font>

165
00:11:13,110 --> 00:11:21,000
have it what's it

166
00:11:17,000 --> 00:11:22,350
let's pipeline them<font color="#E5E5E5"> excellent idea as it</font>

167
00:11:21,000 --> 00:11:26,730
turns<font color="#E5E5E5"> out that</font><font color="#CCCCCC"> doesn't get deployed</font><font color="#E5E5E5"> very</font>

168
00:11:22,350 --> 00:11:28,740
<font color="#E5E5E5">well what else can we do use them in</font>

169
00:11:26,730 --> 00:11:29,400
parallel<font color="#E5E5E5"> excellent why didn't we</font><font color="#CCCCCC"> think</font>

170
00:11:28,740 --> 00:11:30,720
of that<font color="#E5E5E5"> before</font>

171
00:11:29,400 --> 00:11:32,579
<font color="#CCCCCC">well as it turns out we'd have thought</font>

172
00:11:30,720 --> 00:11:35,370
<font color="#E5E5E5">about third one before and that's</font>

173
00:11:32,580 --> 00:11:36,779
roughly<font color="#E5E5E5"> what</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> do how do you deal the</font>

174
00:11:35,370 --> 00:11:39,330
<font color="#E5E5E5">problem here of course is that as you're</font>

175
00:11:36,779 --> 00:11:40,890
sending objects one after the other<font color="#E5E5E5"> the</font>

176
00:11:39,330 --> 00:11:42,420
second object<font color="#E5E5E5"> shows up only after the</font>

177
00:11:40,890 --> 00:11:44,850
first object<font color="#E5E5E5"> is completely transferred</font>

178
00:11:42,420 --> 00:11:46,829
<font color="#CCCCCC">well that's not fun</font><font color="#E5E5E5"> what if you want to</font>

179
00:11:44,850 --> 00:11:48,900
see the fifth picture<font color="#CCCCCC"> on a you</font><font color="#E5E5E5"> know a</font>

180
00:11:46,830 --> 00:11:50,400
page of thumbnails<font color="#CCCCCC"> yet wait for the</font>

181
00:11:48,900 --> 00:11:53,910
first<font color="#E5E5E5"> four to load and that's really not</font>

182
00:11:50,400 --> 00:11:55,829
fun<font color="#CCCCCC"> so ideally you want to basically be</font>

183
00:11:53,910 --> 00:11:57,870
<font color="#CCCCCC">able to see them</font><font color="#E5E5E5"> roughly in parallel</font>

184
00:11:55,830 --> 00:12:01,950
because<font color="#CCCCCC"> a webpage has</font><font color="#E5E5E5"> a whole bunch of</font>

185
00:11:57,870 --> 00:12:03,900
<font color="#E5E5E5">different objects</font><font color="#CCCCCC"> and that's what we</font>

186
00:12:01,950 --> 00:12:05,910
ended<font color="#CCCCCC"> up doing</font><font color="#E5E5E5"> this was a hack</font>

187
00:12:03,900 --> 00:12:08,370
what was the hack<font color="#E5E5E5"> well the client wants</font>

188
00:12:05,910 --> 00:12:10,980
to request the<font color="#E5E5E5"> first object so it says</font>

189
00:12:08,370 --> 00:12:14,220
hey<font color="#E5E5E5"> web server</font><font color="#CCCCCC"> here's a TCP connection</font>

190
00:12:10,980 --> 00:12:18,480
<font color="#CCCCCC">and now please send</font><font color="#E5E5E5"> me the first object</font>

191
00:12:14,220 --> 00:12:21,540
over<font color="#E5E5E5"> this connection and the client says</font>

192
00:12:18,480 --> 00:12:24,630
<font color="#E5E5E5">oh</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> I'm a client I would like this</font>

193
00:12:21,540 --> 00:12:27,000
other object<font color="#E5E5E5"> from you</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> a new TCP</font>

194
00:12:24,630 --> 00:12:29,040
connection<font color="#E5E5E5"> and that's the same thing for</font>

195
00:12:27,000 --> 00:12:30,930
all objects<font color="#E5E5E5"> does not do the same thing</font>

196
00:12:29,040 --> 00:12:34,760
for all objects in this example it does

197
00:12:30,930 --> 00:12:37,979
<font color="#E5E5E5">and it fetches all of them they come</font>

198
00:12:34,760 --> 00:12:39,780
relatively slowly they come slower<font color="#E5E5E5"> then</font>

199
00:12:37,980 --> 00:12:43,279
they would each one of them would have

200
00:12:39,780 --> 00:12:45,120
in the<font color="#E5E5E5"> first case but they all show up</font>

201
00:12:43,279 --> 00:12:47,180
anybody see any problems<font color="#E5E5E5"> with this</font>

202
00:12:45,120 --> 00:12:47,180
approach

203
00:12:50,120 --> 00:12:57,350
say that again<font color="#E5E5E5"> too many sessions</font><font color="#CCCCCC"> what</font>

204
00:12:53,870 --> 00:12:59,089
does that mean time<font color="#E5E5E5"> so you need</font><font color="#CCCCCC"> to setup</font>

205
00:12:57,350 --> 00:13:01,730
<font color="#E5E5E5">each of these connections</font><font color="#CCCCCC"> has to get</font><font color="#E5E5E5"> set</font>

206
00:12:59,089 --> 00:13:05,540
<font color="#E5E5E5">up separately and in the</font><font color="#CCCCCC"> internet</font><font color="#E5E5E5"> where</font>

207
00:13:01,730 --> 00:13:08,689
<font color="#E5E5E5">we</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> loss is king</font><font color="#CCCCCC"> it can be a pretty</font>

208
00:13:05,540 --> 00:13:10,120
painful affair<font color="#CCCCCC"> what else</font><font color="#E5E5E5"> just one more</font>

209
00:13:08,689 --> 00:13:21,620
<font color="#E5E5E5">thing</font>

210
00:13:10,120 --> 00:13:22,759
<font color="#E5E5E5">say it again what kind so it's the</font>

211
00:13:21,620 --> 00:13:24,350
connection establishment there's<font color="#CCCCCC"> another</font>

212
00:13:22,759 --> 00:13:25,730
<font color="#E5E5E5">one there's a socket overhead at the</font>

213
00:13:24,350 --> 00:13:28,930
server the<font color="#E5E5E5"> server is running</font><font color="#CCCCCC"> out of</font>

214
00:13:25,730 --> 00:13:34,360
sockets<font color="#E5E5E5"> much faster right</font>

215
00:13:28,930 --> 00:13:34,359
each of these connections<font color="#E5E5E5"> consumes space</font>

216
00:13:34,990 --> 00:13:41,720
<font color="#E5E5E5">there's a third as does this one general</font>

217
00:13:38,509 --> 00:13:43,490
<font color="#CCCCCC">thing which is there you have</font><font color="#E5E5E5"> three TCP</font>

218
00:13:41,720 --> 00:13:45,879
connections now which are competing<font color="#CCCCCC"> with</font>

219
00:13:43,490 --> 00:13:48,740
each<font color="#E5E5E5"> other in the network for</font><font color="#CCCCCC"> bandwidth</font>

220
00:13:45,879 --> 00:13:51,800
that makes it<font color="#CCCCCC"> also</font><font color="#E5E5E5"> troubling we'd</font>

221
00:13:48,740 --> 00:13:52,999
ideally like to<font color="#E5E5E5"> not do this right</font><font color="#CCCCCC"> but we</font>

222
00:13:51,800 --> 00:13:56,569
didn't have a better way to do this<font color="#CCCCCC"> for</font>

223
00:13:52,999 --> 00:13:58,999
a<font color="#CCCCCC"> very long time</font><font color="#E5E5E5"> what maybe we didn't</font>

224
00:13:56,569 --> 00:14:00,259
care that much<font color="#CCCCCC"> but we definitely didn't</font>

225
00:13:58,999 --> 00:14:03,470
<font color="#CCCCCC">have a better</font><font color="#E5E5E5"> way to do this for quite</font><font color="#CCCCCC"> a</font>

226
00:14:00,259 --> 00:14:05,179
long time<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is still better</font><font color="#CCCCCC"> so this</font>

227
00:14:03,470 --> 00:14:07,399
is what a lot<font color="#CCCCCC"> of browsers even now do</font>

228
00:14:05,179 --> 00:14:09,769
<font color="#E5E5E5">then you go to an HTTP one one side and</font>

229
00:14:07,399 --> 00:14:10,939
you might see<font color="#E5E5E5"> recommendations on various</font>

230
00:14:09,769 --> 00:14:12,350
websites that say if you want<font color="#E5E5E5"> to</font>

231
00:14:10,939 --> 00:14:13,370
increase<font color="#CCCCCC"> your speed increase the number</font>

232
00:14:12,350 --> 00:14:19,009
of<font color="#E5E5E5"> connections that you are allowed to</font>

233
00:14:13,370 --> 00:14:24,860
<font color="#CCCCCC">use 200 bad idea don't do that better</font>

234
00:14:19,009 --> 00:14:26,809
idea<font color="#E5E5E5"> use HTTP</font><font color="#CCCCCC"> - what does HTTP do do</font>

235
00:14:24,860 --> 00:14:28,459
well it tries to<font color="#E5E5E5"> deal with the same</font>

236
00:14:26,809 --> 00:14:31,160
<font color="#E5E5E5">head-of-line blocking problem but in a</font>

237
00:14:28,459 --> 00:14:33,079
<font color="#CCCCCC">different</font><font color="#E5E5E5"> way so</font><font color="#CCCCCC"> here's what it does the</font>

238
00:14:31,160 --> 00:14:36,559
time wants<font color="#E5E5E5"> to send a request for one of</font>

239
00:14:33,079 --> 00:14:39,829
these<font color="#E5E5E5"> objects and it creates what</font><font color="#CCCCCC"> will</font>

240
00:14:36,559 --> 00:14:41,449
<font color="#E5E5E5">call an HTTP to stream not</font><font color="#CCCCCC"> Wilco that's</font>

241
00:14:39,829 --> 00:14:46,878
what they should actually be<font color="#CCCCCC"> working</font>

242
00:14:41,449 --> 00:14:47,959
group calls and that's a stream<font color="#E5E5E5"> the idea</font>

243
00:14:46,879 --> 00:14:51,709
of a stream will become clear in<font color="#CCCCCC"> a</font>

244
00:14:47,959 --> 00:14:53,779
moment<font color="#E5E5E5"> similarly it wants to request the</font>

245
00:14:51,709 --> 00:14:58,128
other<font color="#E5E5E5"> two objects as well it requests</font>

246
00:14:53,779 --> 00:15:00,429
them over to other HTTP streams<font color="#E5E5E5"> all of</font>

247
00:14:58,129 --> 00:15:03,410
these streams get mapped<font color="#CCCCCC"> to the same</font>

248
00:15:00,429 --> 00:15:05,689
<font color="#E5E5E5">connection meaning that the browser</font>

249
00:15:03,410 --> 00:15:09,110
here or the<font color="#CCCCCC"> http/2 part</font><font color="#E5E5E5"> of the browser</font>

250
00:15:05,690 --> 00:15:13,250
<font color="#E5E5E5">is multiplexing pieces of a request and</font>

251
00:15:09,110 --> 00:15:14,990
<font color="#E5E5E5">a response</font><font color="#CCCCCC"> over the same connection so</font>

252
00:15:13,250 --> 00:15:16,910
the server sends them<font color="#E5E5E5"> out and we get</font>

253
00:15:14,990 --> 00:15:20,689
them again<font color="#E5E5E5"> slightly slower than</font><font color="#CCCCCC"> if you</font>

254
00:15:16,910 --> 00:15:22,399
<font color="#CCCCCC">would have gotten any one of</font><font color="#E5E5E5"> them but</font>

255
00:15:20,689 --> 00:15:24,560
<font color="#CCCCCC">you</font><font color="#E5E5E5"> get them in parallel and they go</font>

256
00:15:22,399 --> 00:15:27,199
over<font color="#E5E5E5"> one TCP connection thereby avoiding</font>

257
00:15:24,560 --> 00:15:29,540
a lot<font color="#E5E5E5"> of the overhead that we talked</font>

258
00:15:27,199 --> 00:15:32,149
about<font color="#E5E5E5"> in the previous case this is all</font>

259
00:15:29,540 --> 00:15:33,189
fine<font color="#CCCCCC"> and dandy this</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> awesome</font>

260
00:15:32,149 --> 00:15:44,560
<font color="#CCCCCC">right</font>

261
00:15:33,189 --> 00:15:50,649
can<font color="#E5E5E5"> we do better anybody hello</font>

262
00:15:44,560 --> 00:15:52,699
am I the<font color="#E5E5E5"> only one here apparently so</font>

263
00:15:50,649 --> 00:15:57,920
don't set up the<font color="#CCCCCC"> connection in the first</font>

264
00:15:52,699 --> 00:15:59,870
place you yes<font color="#E5E5E5"> you well you won't get the</font>

265
00:15:57,920 --> 00:16:00,979
<font color="#E5E5E5">website you won't get the web page there</font>

266
00:15:59,870 --> 00:16:02,800
will<font color="#E5E5E5"> be a bit of a problem</font><font color="#CCCCCC"> here actually</font>

267
00:16:00,980 --> 00:16:04,879
<font color="#CCCCCC">trying to</font><font color="#E5E5E5"> get the</font><font color="#CCCCCC"> web page</font>

268
00:16:02,800 --> 00:16:11,060
come on I'm<font color="#CCCCCC"> not moving forward until I</font>

269
00:16:04,879 --> 00:16:13,670
get an<font color="#CCCCCC"> answer from this crowd SCTP</font>

270
00:16:11,060 --> 00:16:15,439
somebody said<font color="#CCCCCC"> s CBB</font><font color="#E5E5E5"> yes it would</font>

271
00:16:13,670 --> 00:16:17,930
actually<font color="#E5E5E5"> make</font><font color="#CCCCCC"> this better I don't know</font>

272
00:16:15,439 --> 00:16:23,930
who say the city<font color="#CCCCCC"> but</font><font color="#E5E5E5"> you may not want</font><font color="#CCCCCC"> to</font>

273
00:16:17,930 --> 00:16:26,000
identify<font color="#CCCCCC"> yourself it will</font><font color="#E5E5E5"> make</font><font color="#CCCCCC"> things</font>

274
00:16:23,930 --> 00:16:28,180
<font color="#E5E5E5">better indeed</font><font color="#CCCCCC"> why does</font><font color="#E5E5E5"> it make things</font>

275
00:16:26,000 --> 00:16:28,180
better

276
00:16:28,300 --> 00:16:32,709
<font color="#E5E5E5">why does the CDP make things better</font><font color="#CCCCCC"> a</font>

277
00:16:32,800 --> 00:16:36,709
<font color="#CCCCCC">sessional a</font><font color="#E5E5E5"> about what does it</font><font color="#CCCCCC"> do</font>

278
00:16:34,790 --> 00:16:42,589
it's not<font color="#CCCCCC"> session layer it's a transport</font>

279
00:16:36,709 --> 00:16:46,579
<font color="#CCCCCC">protocol</font><font color="#E5E5E5"> come on</font><font color="#CCCCCC"> congestion control mic</font>

280
00:16:42,589 --> 00:16:49,699
go on congestion control knows about the

281
00:16:46,579 --> 00:16:51,859
streams yes the transport knows about

282
00:16:49,699 --> 00:16:53,059
the streams<font color="#E5E5E5"> the transport knows that</font>

283
00:16:51,860 --> 00:16:55,430
there<font color="#E5E5E5"> are three different objects going</font>

284
00:16:53,059 --> 00:16:57,829
<font color="#E5E5E5">over this connection the TCP that's the</font>

285
00:16:55,430 --> 00:16:59,628
problem<font color="#E5E5E5"> in the in this case you still</font>

286
00:16:57,829 --> 00:17:01,550
have<font color="#E5E5E5"> head of line blocking where does</font>

287
00:16:59,629 --> 00:17:03,230
the head of line blocking show up well

288
00:17:01,550 --> 00:17:06,438
this<font color="#E5E5E5"> this</font><font color="#CCCCCC"> gray line that you see up here</font>

289
00:17:03,230 --> 00:17:09,589
<font color="#E5E5E5">that's basically a byte stream so all</font>

290
00:17:06,439 --> 00:17:11,510
the multiplexing happened above<font color="#E5E5E5"> PCB in</font>

291
00:17:09,589 --> 00:17:14,658
TCP<font color="#CCCCCC"> TC because I don't notice</font><font color="#E5E5E5"> any me</font>

292
00:17:11,510 --> 00:17:16,250
<font color="#E5E5E5">it's just</font><font color="#CCCCCC"> a bunch</font><font color="#E5E5E5"> of bytes and TCP will</font>

293
00:17:14,659 --> 00:17:17,270
make sure to<font color="#CCCCCC"> get them all</font><font color="#E5E5E5"> the lower to</font>

294
00:17:16,250 --> 00:17:22,190
the other side<font color="#E5E5E5"> in</font>

295
00:17:17,270 --> 00:17:23,510
perfect<font color="#E5E5E5"> order but we want parallelism we</font>

296
00:17:22,190 --> 00:17:27,080
don't want perfect<font color="#E5E5E5"> order across all of</font>

297
00:17:23,510 --> 00:17:28,400
<font color="#E5E5E5">these objects he doesn't know that there</font>

298
00:17:27,079 --> 00:17:31,929
are many objects<font color="#E5E5E5"> going on it's it's</font>

299
00:17:28,400 --> 00:17:34,310
going through<font color="#E5E5E5"> this connection</font><font color="#CCCCCC"> SCTP does</font>

300
00:17:31,930 --> 00:17:38,510
but we are not here to talk<font color="#CCCCCC"> about a</font><font color="#E5E5E5"> CTP</font>

301
00:17:34,310 --> 00:17:39,790
<font color="#E5E5E5">we can have that fight later that is I</font>

302
00:17:38,510 --> 00:17:42,950
do have<font color="#E5E5E5"> actually have a slide about</font>

303
00:17:39,790 --> 00:17:44,450
something like<font color="#E5E5E5"> that later</font><font color="#CCCCCC"> so but the</font>

304
00:17:42,950 --> 00:17:46,040
idea is<font color="#CCCCCC"> exactly the same the problem</font>

305
00:17:44,450 --> 00:17:47,420
here is that the transport<font color="#E5E5E5"> does not know</font>

306
00:17:46,040 --> 00:17:49,700
<font color="#E5E5E5">about streams</font><font color="#CCCCCC"> does not know</font><font color="#E5E5E5"> about</font>

307
00:17:47,420 --> 00:17:52,760
<font color="#E5E5E5">parallelism</font><font color="#CCCCCC"> doesn't do anything to give</font>

308
00:17:49,700 --> 00:17:54,770
you<font color="#E5E5E5"> parallelism</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> how does HTTP over</font>

309
00:17:52,760 --> 00:17:57,800
quick work quick solves all of<font color="#E5E5E5"> your</font>

310
00:17:54,770 --> 00:18:02,030
problems<font color="#E5E5E5"> we can shut down the IETF after</font>

311
00:17:57,800 --> 00:18:06,430
this so how do we set up connections in

312
00:18:02,030 --> 00:18:09,200
quick<font color="#CCCCCC"> but it's quick haha</font>

313
00:18:06,430 --> 00:18:10,310
zero<font color="#E5E5E5"> round trips to a known server if</font>

314
00:18:09,200 --> 00:18:11,600
<font color="#E5E5E5">you're talking to</font><font color="#CCCCCC"> a server that you've</font>

315
00:18:10,310 --> 00:18:14,000
already talked to<font color="#E5E5E5"> if a client's speaking</font>

316
00:18:11,600 --> 00:18:15,889
if kind<font color="#CCCCCC"> is writing to a server that</font><font color="#E5E5E5"> has</font>

317
00:18:14,000 --> 00:18:17,330
spoken with<font color="#E5E5E5"> in the past it takes exactly</font>

318
00:18:15,890 --> 00:18:20,060
<font color="#E5E5E5">zero round trips to set up a connection</font>

319
00:18:17,330 --> 00:18:21,679
<font color="#CCCCCC">that's like magic how can you set up</font><font color="#E5E5E5"> a</font>

320
00:18:20,060 --> 00:18:24,139
<font color="#CCCCCC">connection in</font><font color="#E5E5E5"> zero round trips well you</font>

321
00:18:21,680 --> 00:18:26,570
can't you send a connection handshake

322
00:18:24,140 --> 00:18:28,220
packet and you<font color="#CCCCCC"> can immediately send data</font>

323
00:18:26,570 --> 00:18:31,250
after it what it means is that you don't

324
00:18:28,220 --> 00:18:34,580
<font color="#CCCCCC">have</font><font color="#E5E5E5"> to wait</font><font color="#CCCCCC"> for the server to respond</font>

325
00:18:31,250 --> 00:18:37,220
to you<font color="#E5E5E5"> you can expect that</font><font color="#CCCCCC"> the server</font>

326
00:18:34,580 --> 00:18:39,679
will finish its handshake as soon as it

327
00:18:37,220 --> 00:18:42,740
receives<font color="#E5E5E5"> this packet from</font><font color="#CCCCCC"> the point and</font>

328
00:18:39,680 --> 00:18:46,340
if it<font color="#CCCCCC"> doesn't then you</font><font color="#E5E5E5"> still have a one</font>

329
00:18:42,740 --> 00:18:49,550
<font color="#E5E5E5">count up for work where if your keys are</font>

330
00:18:46,340 --> 00:18:52,790
<font color="#E5E5E5">not new then or then</font><font color="#CCCCCC"> you have to go</font>

331
00:18:49,550 --> 00:18:53,899
<font color="#E5E5E5">through a little</font><font color="#CCCCCC"> bit of work</font><font color="#E5E5E5"> I'm not</font>

332
00:18:52,790 --> 00:18:55,460
<font color="#CCCCCC">going to go</font><font color="#E5E5E5"> into the details of these</font>

333
00:18:53,900 --> 00:18:57,110
things by the<font color="#E5E5E5"> way into the details or</font>

334
00:18:55,460 --> 00:19:00,110
<font color="#E5E5E5">the handshake itself works cause that</font>

335
00:18:57,110 --> 00:19:03,050
would take me<font color="#CCCCCC"> while</font><font color="#E5E5E5"> longer and I'm not</font>

336
00:19:00,110 --> 00:19:04,580
going to do<font color="#E5E5E5"> that here</font><font color="#CCCCCC"> and by the</font><font color="#E5E5E5"> way if</font>

337
00:19:03,050 --> 00:19:09,139
you want to<font color="#E5E5E5"> know about that ask for a</font>

338
00:19:04,580 --> 00:19:11,330
TLS<font color="#E5E5E5"> 1.3 tutorial please</font><font color="#CCCCCC"> if version</font>

339
00:19:09,140 --> 00:19:12,740
negotiation is needed then we take up to

340
00:19:11,330 --> 00:19:14,659
two<font color="#E5E5E5"> round trips but these are the</font>

341
00:19:12,740 --> 00:19:17,030
uncommon<font color="#E5E5E5"> cases and the most common case</font>

342
00:19:14,660 --> 00:19:18,920
<font color="#E5E5E5">is expected to be the</font><font color="#CCCCCC"> 0</font><font color="#E5E5E5"> round trip case</font>

343
00:19:17,030 --> 00:19:20,360
because when you go<font color="#CCCCCC"> to a website when</font>

344
00:19:18,920 --> 00:19:22,790
you<font color="#E5E5E5"> go to a server and request a</font>

345
00:19:20,360 --> 00:19:25,070
resource<font color="#E5E5E5"> it's very likely they're going</font>

346
00:19:22,790 --> 00:19:26,540
<font color="#CCCCCC">to go back</font><font color="#E5E5E5"> to the same server and a</font>

347
00:19:25,070 --> 00:19:30,389
request on the<font color="#E5E5E5"> resources it's</font><font color="#CCCCCC"> just</font>

348
00:19:26,540 --> 00:19:33,120
simply locality<font color="#E5E5E5"> and that's very common</font>

349
00:19:30,390 --> 00:19:37,280
and yet<font color="#E5E5E5"> I haven't yet forgotten about TF</font>

350
00:19:33,120 --> 00:19:40,800
41.3<font color="#E5E5E5"> we'll talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> that in a bit</font>

351
00:19:37,280 --> 00:19:44,460
<font color="#E5E5E5">after</font><font color="#CCCCCC"> setup</font><font color="#E5E5E5"> HTTP requests and responses</font>

352
00:19:40,800 --> 00:19:46,470
flow over a quick connection<font color="#CCCCCC"> so a quick</font>

353
00:19:44,460 --> 00:19:50,820
connection happens much faster than TLS

354
00:19:46,470 --> 00:19:55,980
1.2<font color="#CCCCCC"> over plain old TCP</font><font color="#E5E5E5"> and that's one of</font>

355
00:19:50,820 --> 00:19:59,580
<font color="#CCCCCC">the big benefits of quick so how does</font>

356
00:19:55,980 --> 00:20:01,230
this<font color="#E5E5E5"> look</font><font color="#CCCCCC"> in in practice this</font><font color="#E5E5E5"> is what</font>

357
00:19:59,580 --> 00:20:03,330
<font color="#E5E5E5">you expect to see you have a quick</font>

358
00:20:01,230 --> 00:20:06,890
<font color="#E5E5E5">connection between the two endpoints and</font>

359
00:20:03,330 --> 00:20:10,439
there are objects<font color="#E5E5E5"> at the</font><font color="#CCCCCC"> webserver</font><font color="#E5E5E5"> again</font>

360
00:20:06,890 --> 00:20:15,090
<font color="#E5E5E5">the client</font><font color="#CCCCCC"> request makes the request</font>

361
00:20:10,440 --> 00:20:17,820
<font color="#CCCCCC">over one HTTP to stream which now maps</font>

362
00:20:15,090 --> 00:20:20,970
to two quick streams<font color="#E5E5E5"> the details of this</font>

363
00:20:17,820 --> 00:20:22,620
<font color="#E5E5E5">I will not go into why but Mike is in</font>

364
00:20:20,970 --> 00:20:25,250
the<font color="#E5E5E5"> back so find him after</font><font color="#CCCCCC"> this if you</font>

365
00:20:22,620 --> 00:20:25,250
<font color="#E5E5E5">want to know why</font>

366
00:20:25,310 --> 00:20:28,770
Mike raise your hand there you<font color="#E5E5E5"> go that's</font>

367
00:20:28,260 --> 00:20:30,060
my question

368
00:20:28,770 --> 00:20:33,480
he's the<font color="#E5E5E5"> editor of the HTTP mapping</font>

369
00:20:30,060 --> 00:20:35,250
draft<font color="#E5E5E5"> and he's he's the</font><font color="#CCCCCC"> reason</font><font color="#E5E5E5"> the world</font>

370
00:20:33,480 --> 00:20:41,370
looks<font color="#CCCCCC"> like this so you can blame him</font><font color="#E5E5E5"> for</font>

371
00:20:35,250 --> 00:20:43,740
<font color="#E5E5E5">it so we have two quick streams that I</font>

372
00:20:41,370 --> 00:20:45,090
used per HTTP stream in short one of<font color="#CCCCCC"> the</font>

373
00:20:43,740 --> 00:20:46,830
<font color="#E5E5E5">streams is used for headers the other</font>

374
00:20:45,090 --> 00:20:52,260
stream is<font color="#E5E5E5"> used for body which is</font>

375
00:20:46,830 --> 00:20:55,260
fantastic<font color="#CCCCCC"> so that's an HTTP</font><font color="#E5E5E5"> to stream</font>

376
00:20:52,260 --> 00:20:57,030
<font color="#E5E5E5">that's a quick stream and that's what</font>

377
00:20:55,260 --> 00:20:57,240
happens with<font color="#E5E5E5"> quick this</font><font color="#CCCCCC"> is what happens</font>

378
00:20:57,030 --> 00:20:59,550
here

379
00:20:57,240 --> 00:21:02,070
similarly the client sends requests from

380
00:20:59,550 --> 00:21:03,290
other<font color="#E5E5E5"> objects and they end up on other</font>

381
00:21:02,070 --> 00:21:05,669
quick streams

382
00:21:03,290 --> 00:21:07,740
what is it quick stream<font color="#CCCCCC"> your</font><font color="#E5E5E5"> maybe you</font>

383
00:21:05,670 --> 00:21:09,180
understand now<font color="#E5E5E5"> roughly what an HDD</font>

384
00:21:07,740 --> 00:21:12,630
stream is like I told you need should<font color="#E5E5E5"> be</font>

385
00:21:09,180 --> 00:21:15,420
<font color="#E5E5E5">to stream is where HTTP to multiplexes</font>

386
00:21:12,630 --> 00:21:17,700
things above<font color="#E5E5E5"> into the things below in</font>

387
00:21:15,420 --> 00:21:19,950
<font color="#E5E5E5">this case it's slightly different HTTP</font>

388
00:21:17,700 --> 00:21:21,570
<font color="#CCCCCC">to knows about quick streams below so it</font>

389
00:21:19,950 --> 00:21:23,850
takes<font color="#E5E5E5"> the request from about the</font>

390
00:21:21,570 --> 00:21:26,159
response from<font color="#E5E5E5"> above and ships it through</font>

391
00:21:23,850 --> 00:21:26,730
<font color="#E5E5E5">multiple streams below so what does</font>

392
00:21:26,160 --> 00:21:29,790
<font color="#CCCCCC">quake do</font>

393
00:21:26,730 --> 00:21:31,590
<font color="#CCCCCC">well it</font><font color="#E5E5E5"> takes those and multiplexes them</font>

394
00:21:29,790 --> 00:21:35,490
over the connection<font color="#E5E5E5"> that has to the</font>

395
00:21:31,590 --> 00:21:38,939
<font color="#E5E5E5">other side so this</font><font color="#CCCCCC"> is what you have</font><font color="#E5E5E5"> you</font>

396
00:21:35,490 --> 00:21:40,440
have<font color="#CCCCCC"> a multiplexed transport quick is a</font>

397
00:21:38,940 --> 00:21:43,200
multiplex transport<font color="#E5E5E5"> it multiplex</font><font color="#CCCCCC"> is</font>

398
00:21:40,440 --> 00:21:44,160
multiple streams over<font color="#CCCCCC"> a single</font><font color="#E5E5E5"> transport</font>

399
00:21:43,200 --> 00:21:47,220
connection which means

400
00:21:44,160 --> 00:21:49,710
one connection<font color="#CCCCCC"> setup</font><font color="#E5E5E5"> it means one loss</font>

401
00:21:47,220 --> 00:21:53,580
recovery context it means<font color="#E5E5E5"> one condition</font>

402
00:21:49,710 --> 00:21:54,960
control context it means we can do

403
00:21:53,580 --> 00:21:57,449
priorities if you wanted to do

404
00:21:54,960 --> 00:21:58,920
priorities across<font color="#E5E5E5"> multiple objects so</font>

405
00:21:57,450 --> 00:22:00,810
it's<font color="#CCCCCC"> very</font><font color="#E5E5E5"> exciting</font><font color="#CCCCCC"> so a lot of</font>

406
00:21:58,920 --> 00:22:03,420
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> things that we can do and at</font>

407
00:22:00,810 --> 00:22:08,300
<font color="#E5E5E5">the</font><font color="#CCCCCC"> IDF</font><font color="#E5E5E5"> we love doing more things so</font>

408
00:22:03,420 --> 00:22:11,670
there we go<font color="#E5E5E5"> that's what</font><font color="#CCCCCC"> pic does and</font>

409
00:22:08,300 --> 00:22:15,930
again<font color="#CCCCCC"> the objects</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> received in this</font>

410
00:22:11,670 --> 00:22:16,650
manner<font color="#E5E5E5"> so going back just a bit</font><font color="#CCCCCC"> I told</font>

411
00:22:15,930 --> 00:22:18,300
you<font color="#E5E5E5"> that this was there was an</font>

412
00:22:16,650 --> 00:22:20,250
experiment at Google and then there's

413
00:22:18,300 --> 00:22:22,379
<font color="#CCCCCC">IDF quick so I want to</font><font color="#E5E5E5"> clarify exactly</font>

414
00:22:20,250 --> 00:22:24,360
<font color="#E5E5E5">what</font><font color="#CCCCCC"> the differences there was an</font>

415
00:22:22,380 --> 00:22:27,330
experiment that<font color="#CCCCCC"> still is an experiment</font>

416
00:22:24,360 --> 00:22:30,060
<font color="#CCCCCC">that's deployed and this is what it</font>

417
00:22:27,330 --> 00:22:33,000
looks like<font color="#CCCCCC"> so Google didn't experiment</font>

418
00:22:30,060 --> 00:22:35,929
built a protocol<font color="#E5E5E5"> and we called it quick</font>

419
00:22:33,000 --> 00:22:40,050
<font color="#CCCCCC">and this is what it roughly looked like</font>

420
00:22:35,930 --> 00:22:43,680
it BCD<font color="#E5E5E5"> maps to the standard HTTP stack</font>

421
00:22:40,050 --> 00:22:45,690
in this manner<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it runs over UDP</font><font color="#CCCCCC"> as</font>

422
00:22:43,680 --> 00:22:47,460
you<font color="#E5E5E5"> can see here the protocol was built</font>

423
00:22:45,690 --> 00:22:52,350
to run<font color="#E5E5E5"> over UDP I'll talk about that</font>

424
00:22:47,460 --> 00:22:55,680
<font color="#E5E5E5">later in</font><font color="#CCCCCC"> the presentation and HTTP</font><font color="#E5E5E5"> maps</font>

425
00:22:52,350 --> 00:22:59,340
<font color="#CCCCCC">onto</font><font color="#E5E5E5"> quick we had our own mapping that</font>

426
00:22:55,680 --> 00:23:01,710
was fairly simplistic<font color="#CCCCCC"> and it's getting</font>

427
00:22:59,340 --> 00:23:05,189
much more sophisticated<font color="#E5E5E5"> now as we are</font>

428
00:23:01,710 --> 00:23:08,340
going<font color="#E5E5E5"> through ITF working group work and</font>

429
00:23:05,190 --> 00:23:11,430
we used our<font color="#CCCCCC"> own home-grown</font><font color="#E5E5E5"> our own</font>

430
00:23:08,340 --> 00:23:13,169
little proprietary quick crypto<font color="#E5E5E5"> for</font>

431
00:23:11,430 --> 00:23:16,470
doing the handshake<font color="#E5E5E5"> for doing the rapid</font>

432
00:23:13,170 --> 00:23:20,730
<font color="#CCCCCC">0 oddity connection</font><font color="#E5E5E5"> setup so this was a</font>

433
00:23:16,470 --> 00:23:22,200
an encrypted transport in the experiment

434
00:23:20,730 --> 00:23:24,830
<font color="#E5E5E5">and we liked it as an encrypted</font>

435
00:23:22,200 --> 00:23:28,890
transport<font color="#E5E5E5"> but it used a proprietary</font>

436
00:23:24,830 --> 00:23:32,010
<font color="#E5E5E5">handshake mechanism since then we've had</font>

437
00:23:28,890 --> 00:23:34,350
TLS 1.3 but I'll get that<font color="#E5E5E5"> in a moment</font>

438
00:23:32,010 --> 00:23:37,110
so what's a quick working group doing

439
00:23:34,350 --> 00:23:40,469
<font color="#E5E5E5">like I said here's what old Google quick</font>

440
00:23:37,110 --> 00:23:42,689
<font color="#E5E5E5">looked like of course crypto was</font>

441
00:23:40,470 --> 00:23:43,800
<font color="#E5E5E5">proprietary so we want to get rid of</font>

442
00:23:42,690 --> 00:23:46,220
that<font color="#E5E5E5"> and you want to do a whole</font><font color="#CCCCCC"> bunch</font><font color="#E5E5E5"> of</font>

443
00:23:43,800 --> 00:23:49,590
other<font color="#CCCCCC"> things at the</font><font color="#E5E5E5"> IDF with it but</font>

444
00:23:46,220 --> 00:23:51,450
first<font color="#E5E5E5"> we didn't want</font><font color="#CCCCCC"> quick crypto or not</font>

445
00:23:49,590 --> 00:23:53,760
<font color="#CCCCCC">we didn't want we</font><font color="#E5E5E5"> decided not to have</font>

446
00:23:51,450 --> 00:23:55,380
quick crypto in here and just leaving<font color="#CCCCCC"> it</font>

447
00:23:53,760 --> 00:23:57,090
like that would<font color="#CCCCCC"> make it an unencrypted</font>

448
00:23:55,380 --> 00:23:57,990
transport<font color="#E5E5E5"> and it would make a lot</font><font color="#CCCCCC"> of</font>

449
00:23:57,090 --> 00:24:06,740
<font color="#CCCCCC">people very very</font>

450
00:23:57,990 --> 00:24:09,240
grumpy so we decided<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use TLS 1.3</font>

451
00:24:06,740 --> 00:24:11,970
which was developed after quick crypto

452
00:24:09,240 --> 00:24:14,280
<font color="#CCCCCC">but it gives you</font><font color="#E5E5E5"> the same</font><font color="#CCCCCC"> benefits as</font>

453
00:24:11,970 --> 00:24:17,220
<font color="#E5E5E5">quick</font><font color="#CCCCCC"> rip door meaning it</font><font color="#E5E5E5"> gives you</font><font color="#CCCCCC"> 0</font>

454
00:24:14,280 --> 00:24:20,760
<font color="#CCCCCC">RTD handshake latency this is the brand</font>

455
00:24:17,220 --> 00:24:23,190
new<font color="#E5E5E5"> hotness</font><font color="#CCCCCC"> in TLS by the way so if</font><font color="#E5E5E5"> you</font>

456
00:24:20,760 --> 00:24:25,920
want<font color="#CCCCCC"> 0 oddity handshakes used</font><font color="#E5E5E5"> here is</font>

457
00:24:23,190 --> 00:24:27,600
1.3 and the reason<font color="#E5E5E5"> that it's embedded</font>

458
00:24:25,920 --> 00:24:30,480
inside quick<font color="#E5E5E5"> is because</font><font color="#CCCCCC"> we're actually</font>

459
00:24:27,600 --> 00:24:35,550
<font color="#E5E5E5">doing some careful work and you again</font>

460
00:24:30,480 --> 00:24:37,890
<font color="#E5E5E5">remember we want parallelism</font><font color="#CCCCCC"> pls usually</font>

461
00:24:35,550 --> 00:24:40,139
sits on<font color="#E5E5E5"> top</font><font color="#CCCCCC"> of TCP</font><font color="#E5E5E5"> which means it's used</font>

462
00:24:37,890 --> 00:24:42,929
to a stream of bytes underneath it and

463
00:24:40,140 --> 00:24:45,630
it offers roughly that<font color="#E5E5E5"> above it so you</font>

464
00:24:42,929 --> 00:24:48,360
do some work to make<font color="#CCCCCC"> sure that</font><font color="#E5E5E5"> TLS</font>

465
00:24:45,630 --> 00:24:50,340
framing<font color="#E5E5E5"> you know falls within quick</font>

466
00:24:48,360 --> 00:24:53,040
packet boundaries and that when one

467
00:24:50,340 --> 00:24:55,879
packet is lost<font color="#CCCCCC"> that</font><font color="#E5E5E5"> other stream data</font>

468
00:24:53,040 --> 00:24:58,710
can still be decrypted and delivered<font color="#E5E5E5"> so</font>

469
00:24:55,880 --> 00:25:00,780
<font color="#CCCCCC">pls 1.3 here is</font><font color="#E5E5E5"> really not sitting under</font>

470
00:24:58,710 --> 00:25:03,570
quick<font color="#E5E5E5"> it's actually being integrated</font>

471
00:25:00,780 --> 00:25:06,090
<font color="#E5E5E5">with quick it's sitting around quick</font><font color="#CCCCCC"> oh</font>

472
00:25:03,570 --> 00:25:07,820
sorry<font color="#E5E5E5"> quick is sitting around it meaning</font>

473
00:25:06,090 --> 00:25:12,120
<font color="#E5E5E5">that the TLS handshake actually happens</font>

474
00:25:07,820 --> 00:25:13,770
<font color="#E5E5E5">inside</font><font color="#CCCCCC"> of a quick stream so it's</font><font color="#E5E5E5"> we are</font>

475
00:25:12,120 --> 00:25:19,199
still carrying<font color="#CCCCCC"> the s handshake</font><font color="#E5E5E5"> instead</font>

476
00:25:13,770 --> 00:25:21,540
of<font color="#CCCCCC"> wake packets so the working group</font><font color="#E5E5E5"> is</font>

477
00:25:19,200 --> 00:25:26,670
<font color="#CCCCCC">doing a ton of work and I'll talk about</font>

478
00:25:21,540 --> 00:25:28,920
that<font color="#E5E5E5"> later</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the presentation the goal</font>

479
00:25:26,670 --> 00:25:30,360
<font color="#E5E5E5">for us is</font><font color="#CCCCCC"> to have</font><font color="#E5E5E5"> that that's the first</font>

480
00:25:28,920 --> 00:25:32,309
goal the<font color="#E5E5E5"> first goal</font><font color="#CCCCCC"> should have an HTTP</font>

481
00:25:30,360 --> 00:25:35,699
mapping on top of quick and make it work

482
00:25:32,309 --> 00:25:37,620
with tears 1.3 going forward the idea is

483
00:25:35,700 --> 00:25:39,240
that<font color="#E5E5E5"> once we have</font><font color="#CCCCCC"> finished this you'll</font>

484
00:25:37,620 --> 00:25:41,820
<font color="#E5E5E5">have a protocol</font><font color="#CCCCCC"> that's modularized</font>

485
00:25:39,240 --> 00:25:44,370
enough that we could with you know

486
00:25:41,820 --> 00:25:46,980
relatively little friction<font color="#CCCCCC"> to</font><font color="#E5E5E5"> place the</font>

487
00:25:44,370 --> 00:25:50,449
handshake from TLS 1.3 to a new<font color="#E5E5E5"> once a</font>

488
00:25:46,980 --> 00:25:55,440
TLS<font color="#E5E5E5"> 1.4 or god forbid pls 2.0 because</font>

489
00:25:50,450 --> 00:25:57,809
that's never happening<font color="#CCCCCC"> and you could</font>

490
00:25:55,440 --> 00:26:00,650
replace<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know HTTP with like WebRTC</font>

491
00:25:57,809 --> 00:26:02,210
<font color="#CCCCCC">and so on</font>

492
00:26:00,650 --> 00:26:04,490
that's the

493
00:26:02,210 --> 00:26:06,170
<font color="#E5E5E5">a goal of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> working group itself once</font>

494
00:26:04,490 --> 00:26:10,760
you finished the work this<font color="#E5E5E5"> is what we</font>

495
00:26:06,170 --> 00:26:12,530
expect the output<font color="#E5E5E5"> to be maybe some of</font>

496
00:26:10,760 --> 00:26:15,879
the sounds familiar<font color="#CCCCCC"> and I've mentioned</font>

497
00:26:12,530 --> 00:26:19,100
<font color="#E5E5E5">some of it I mentioned some ideas that</font>

498
00:26:15,880 --> 00:26:21,320
<font color="#E5E5E5">you might know like a CD be like</font>

499
00:26:19,100 --> 00:26:22,669
multi-streaming<font color="#CCCCCC"> make other things yes</font>

500
00:26:21,320 --> 00:26:25,250
<font color="#CCCCCC">you're just be</font><font color="#E5E5E5"> playing some</font><font color="#CCCCCC"> of the</font>

501
00:26:22,670 --> 00:26:26,480
<font color="#E5E5E5">greatest hits that we already see the</font>

502
00:26:25,250 --> 00:26:27,860
difference is<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> trying to</font><font color="#E5E5E5"> make</font>

503
00:26:26,480 --> 00:26:30,410
it deplorable<font color="#CCCCCC"> and we're</font><font color="#E5E5E5"> trying to</font>

504
00:26:27,860 --> 00:26:33,979
integrate it with<font color="#CCCCCC"> the needs of today</font>

505
00:26:30,410 --> 00:26:35,630
so yes the ideas you see come back<font color="#E5E5E5"> this</font>

506
00:26:33,980 --> 00:26:40,310
<font color="#E5E5E5">by the way is not limited to quick it's</font>

507
00:26:35,630 --> 00:26:42,350
all of<font color="#E5E5E5"> computer science</font><font color="#CCCCCC"> we love to</font>

508
00:26:40,310 --> 00:26:44,389
replay ideas<font color="#E5E5E5"> and you're doing exactly</font>

509
00:26:42,350 --> 00:26:46,010
<font color="#E5E5E5">that but you're adding something new</font>

510
00:26:44,390 --> 00:26:47,150
hopefully<font color="#CCCCCC"> if you're adding a bunch of</font>

511
00:26:46,010 --> 00:26:49,070
new features and<font color="#CCCCCC"> a bunch of new things</font>

512
00:26:47,150 --> 00:26:51,440
<font color="#E5E5E5">which have never been done before</font>

513
00:26:49,070 --> 00:26:53,300
<font color="#E5E5E5">0r TD for example with the crypto</font>

514
00:26:51,440 --> 00:26:55,160
handshake<font color="#CCCCCC"> has</font><font color="#E5E5E5"> never been done before</font><font color="#CCCCCC"> so</font>

515
00:26:53,300 --> 00:26:58,190
<font color="#CCCCCC">we</font><font color="#E5E5E5"> feel</font><font color="#CCCCCC"> like you're always on thin ice</font>

516
00:26:55,160 --> 00:27:02,210
when you're doing that<font color="#E5E5E5"> so there's a lot</font>

517
00:26:58,190 --> 00:27:04,400
<font color="#CCCCCC">of new exciting things</font><font color="#E5E5E5"> as well so some</font>

518
00:27:02,210 --> 00:27:06,470
of the work that<font color="#CCCCCC"> U is quite relevant and</font>

519
00:27:04,400 --> 00:27:08,570
very<font color="#E5E5E5"> related to</font><font color="#CCCCCC"> what you've seen so far</font>

520
00:27:06,470 --> 00:27:11,330
<font color="#E5E5E5">of course like I</font><font color="#CCCCCC"> said</font><font color="#E5E5E5"> to us</font><font color="#CCCCCC"> 1.3 is being</font>

521
00:27:08,570 --> 00:27:13,580
used<font color="#CCCCCC"> you not</font><font color="#E5E5E5"> going quick so it was a</font>

522
00:27:11,330 --> 00:27:16,010
quick crypto used to be the<font color="#CCCCCC"> thing that</font>

523
00:27:13,580 --> 00:27:18,340
<font color="#CCCCCC">had Co RTT but now we have the</font><font color="#E5E5E5"> other 7.3</font>

524
00:27:16,010 --> 00:27:21,170
and that's what<font color="#E5E5E5"> we are planning to use</font>

525
00:27:18,340 --> 00:27:23,899
TCP<font color="#E5E5E5"> fast open or if you want if you go</font>

526
00:27:21,170 --> 00:27:26,240
for the back<font color="#E5E5E5"> if you used to work on</font>

527
00:27:23,900 --> 00:27:28,010
<font color="#E5E5E5">those green things called terminals you</font>

528
00:27:26,240 --> 00:27:29,680
might remember<font color="#CCCCCC"> T TCP how many people</font>

529
00:27:28,010 --> 00:27:32,690
here<font color="#E5E5E5"> actually remember etcb</font>

530
00:27:29,680 --> 00:27:36,440
<font color="#CCCCCC">all right</font><font color="#E5E5E5"> excellent</font>

531
00:27:32,690 --> 00:27:38,960
so<font color="#E5E5E5"> TCP fast open was recycled</font><font color="#CCCCCC"> from TDC B</font>

532
00:27:36,440 --> 00:27:41,330
and of course we will keep using<font color="#E5E5E5"> the</font>

533
00:27:38,960 --> 00:27:46,070
same ideas<font color="#E5E5E5"> these are</font><font color="#CCCCCC"> very happy to steal</font>

534
00:27:41,330 --> 00:27:48,830
ideas<font color="#CCCCCC"> TCP fast open is allows you</font><font color="#E5E5E5"> to get</font>

535
00:27:46,070 --> 00:27:50,960
TCP<font color="#E5E5E5"> connections set up in zero</font><font color="#CCCCCC"> rtd</font><font color="#E5E5E5"> so</font>

536
00:27:48,830 --> 00:27:53,480
you might ask well<font color="#E5E5E5"> if you have TCP fast</font>

537
00:27:50,960 --> 00:27:57,260
open<font color="#E5E5E5"> and you have TLS 1.3 can't you get</font>

538
00:27:53,480 --> 00:27:59,900
connection<font color="#CCCCCC"> set up in zero or DT with PCP</font>

539
00:27:57,260 --> 00:28:02,480
and TLS<font color="#CCCCCC"> and</font><font color="#E5E5E5"> yes you can the problem</font>

540
00:27:59,900 --> 00:28:04,760
<font color="#E5E5E5">again is in deployability</font><font color="#CCCCCC"> basically</font>

541
00:28:02,480 --> 00:28:07,310
first<font color="#CCCCCC"> open</font><font color="#E5E5E5"> is still after seven years</font>

542
00:28:04,760 --> 00:28:08,360
<font color="#E5E5E5">trying to get deployed and it's a hard</font>

543
00:28:07,310 --> 00:28:09,740
problem<font color="#E5E5E5"> because you need to change</font>

544
00:28:08,360 --> 00:28:12,020
<font color="#CCCCCC">client-side operating systems for</font>

545
00:28:09,740 --> 00:28:13,460
changing TCP and you need to change

546
00:28:12,020 --> 00:28:14,960
<font color="#CCCCCC">metal</font><font color="#E5E5E5"> boxes or at least make sure that</font>

547
00:28:13,460 --> 00:28:18,710
middle boxes work

548
00:28:14,960 --> 00:28:20,779
with this modification<font color="#E5E5E5"> in TCB and it's</font>

549
00:28:18,710 --> 00:28:23,809
also limited<font color="#CCCCCC"> to</font><font color="#E5E5E5"> one packet on</font><font color="#CCCCCC"> the</font>

550
00:28:20,779 --> 00:28:26,480
<font color="#CCCCCC">client-server</font><font color="#E5E5E5"> direction another ideas</font>

551
00:28:23,809 --> 00:28:29,360
like<font color="#E5E5E5"> TCP session which predates</font><font color="#CCCCCC"> SC DB</font>

552
00:28:26,480 --> 00:28:31,580
which which predates<font color="#E5E5E5"> SST all of these</font>

553
00:28:29,360 --> 00:28:33,709
talk about<font color="#E5E5E5"> multi streaming</font><font color="#CCCCCC"> as a</font><font color="#E5E5E5"> brand</font>

554
00:28:31,580 --> 00:28:35,870
<font color="#E5E5E5">new idea</font><font color="#CCCCCC"> it never was a</font><font color="#E5E5E5"> brand</font><font color="#CCCCCC"> new idea</font>

555
00:28:33,710 --> 00:28:37,340
<font color="#CCCCCC">parallelism has been there if</font>

556
00:28:35,870 --> 00:28:40,340
parallelism<font color="#E5E5E5"> is an idea</font><font color="#CCCCCC"> that's as</font><font color="#E5E5E5"> old as</font>

557
00:28:37,340 --> 00:28:42,168
<font color="#E5E5E5">the hills and</font><font color="#CCCCCC"> there bunch</font><font color="#E5E5E5"> of shared</font>

558
00:28:40,340 --> 00:28:44,029
ideas with all of<font color="#E5E5E5"> these old protocols</font>

559
00:28:42,169 --> 00:28:45,740
<font color="#E5E5E5">and we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> very happy to steal all</font><font color="#CCCCCC"> of</font>

560
00:28:44,029 --> 00:28:48,020
those<font color="#CCCCCC"> ideas</font><font color="#E5E5E5"> and if you have more ideas</font>

561
00:28:45,740 --> 00:28:49,100
<font color="#CCCCCC">we're happy to steal them as well there</font>

562
00:28:48,020 --> 00:28:50,750
are<font color="#CCCCCC"> some subtle differences from these</font>

563
00:28:49,100 --> 00:28:52,129
protocols<font color="#CCCCCC"> I'm not going</font><font color="#E5E5E5"> to go into them</font>

564
00:28:50,750 --> 00:29:00,559
here<font color="#E5E5E5"> but I'm happy to</font><font color="#CCCCCC"> answer them during</font>

565
00:28:52,130 --> 00:29:05,000
<font color="#E5E5E5">the Q&A session</font><font color="#CCCCCC"> so here are</font><font color="#E5E5E5"> the broad</font>

566
00:29:00,559 --> 00:29:07,520
design aspirations<font color="#E5E5E5"> that</font><font color="#CCCCCC"> quake has the</font>

567
00:29:05,000 --> 00:29:09,559
probability<font color="#CCCCCC"> is critical we want quick to</font>

568
00:29:07,520 --> 00:29:13,970
work on today's<font color="#CCCCCC"> internet not on some</font>

569
00:29:09,559 --> 00:29:15,408
future<font color="#E5E5E5"> ipv6 internet it has to work on</font>

570
00:29:13,970 --> 00:29:16,700
<font color="#E5E5E5">the IP for internet which is riddled</font>

571
00:29:15,409 --> 00:29:18,649
with the middle boxes and<font color="#CCCCCC"> everything</font>

572
00:29:16,700 --> 00:29:20,539
else<font color="#E5E5E5"> it has to work on currently</font>

573
00:29:18,649 --> 00:29:22,399
<font color="#E5E5E5">deployed client operating systems if it</font>

574
00:29:20,539 --> 00:29:24,919
<font color="#E5E5E5">doesn't then nobody's gonna implement it</font>

575
00:29:22,399 --> 00:29:27,049
and that's<font color="#E5E5E5"> something that we've seen in</font>

576
00:29:24,919 --> 00:29:29,929
the past<font color="#E5E5E5"> with the</font><font color="#CCCCCC"> CDT we had a lot I</font>

577
00:29:27,049 --> 00:29:31,340
worked on a CDP for<font color="#E5E5E5"> six years so there</font>

578
00:29:29,929 --> 00:29:35,990
was a lot of work in just<font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to</font>

579
00:29:31,340 --> 00:29:38,990
<font color="#E5E5E5">convince folks</font><font color="#CCCCCC"> Microsoft deploy</font><font color="#E5E5E5"> SC DB</font>

580
00:29:35,990 --> 00:29:41,149
this was work<font color="#E5E5E5"> and it's it you have to</font>

581
00:29:38,990 --> 00:29:43,549
answer well can<font color="#E5E5E5"> you deploy this today</font>

582
00:29:41,149 --> 00:29:46,010
and the answers well no cause middle box

583
00:29:43,549 --> 00:29:47,840
won't<font color="#E5E5E5"> allow a CDP through and then the</font>

584
00:29:46,010 --> 00:29:50,299
answer is then why should<font color="#CCCCCC"> we implement</font>

585
00:29:47,840 --> 00:29:53,299
<font color="#CCCCCC">it if it doesn't</font><font color="#E5E5E5"> work until implemented</font>

586
00:29:50,299 --> 00:29:54,529
middle boxes<font color="#E5E5E5"> won't change themselves</font><font color="#CCCCCC"> so</font>

587
00:29:53,299 --> 00:29:57,559
you have this vicious cycle<font color="#CCCCCC"> of you know</font>

588
00:29:54,529 --> 00:29:59,450
just<font color="#CCCCCC"> not going anywhere</font><font color="#E5E5E5"> so that</font><font color="#CCCCCC"> is</font>

589
00:29:57,559 --> 00:30:02,480
important we<font color="#E5E5E5"> want to be deployed along</font>

590
00:29:59,450 --> 00:30:03,710
<font color="#CCCCCC">the</font><font color="#E5E5E5"> today's</font><font color="#CCCCCC"> Internet which</font><font color="#E5E5E5"> is why we</font>

591
00:30:02,480 --> 00:30:04,010
have UDP but<font color="#E5E5E5"> I'll talk about that in a</font>

592
00:30:03,710 --> 00:30:07,029
moment

593
00:30:04,010 --> 00:30:10,669
<font color="#E5E5E5">and we want to be able to evolve because</font>

594
00:30:07,029 --> 00:30:13,490
today's<font color="#CCCCCC"> internet is obviously not going</font>

595
00:30:10,669 --> 00:30:15,049
<font color="#E5E5E5">to be tomorrow's internet and we might</font>

596
00:30:13,490 --> 00:30:16,490
<font color="#E5E5E5">have different needs matter different</font>

597
00:30:15,049 --> 00:30:20,690
applications we want<font color="#CCCCCC"> the transport</font>

598
00:30:16,490 --> 00:30:21,919
<font color="#E5E5E5">protocol to adapt to evolve we might</font>

599
00:30:20,690 --> 00:30:23,270
want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> call this</font><font color="#CCCCCC"> DITA</font>

600
00:30:21,919 --> 00:30:24,980
I had an<font color="#CCCCCC"> idea</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> what calling it the</font>

601
00:30:23,270 --> 00:30:26,539
transport protocol<font color="#CCCCCC"> cuz you know once</font><font color="#E5E5E5"> you</font>

602
00:30:24,980 --> 00:30:28,070
have<font color="#E5E5E5"> versioning and say I have a</font>

603
00:30:26,539 --> 00:30:29,690
<font color="#E5E5E5">volubility</font><font color="#CCCCCC"> in here then</font>

604
00:30:28,070 --> 00:30:31,700
<font color="#E5E5E5">new transport looks like a new version</font>

605
00:30:29,690 --> 00:30:35,540
<font color="#E5E5E5">of this</font><font color="#CCCCCC"> old transport</font><font color="#E5E5E5"> so you could</font><font color="#CCCCCC"> think</font>

606
00:30:31,700 --> 00:30:37,850
<font color="#E5E5E5">of it this way no latency connection</font>

607
00:30:35,540 --> 00:30:41,690
establishment was critical<font color="#E5E5E5"> cause again</font>

608
00:30:37,850 --> 00:30:44,060
that<font color="#CCCCCC"> pages are very latency sensitive</font><font color="#E5E5E5"> as</font>

609
00:30:41,690 --> 00:30:45,530
an<font color="#E5E5E5"> application the web itself has gotten</font>

610
00:30:44,060 --> 00:30:47,480
<font color="#CCCCCC">better latency sensitive</font><font color="#E5E5E5"> over the past</font>

611
00:30:45,530 --> 00:30:48,379
decade or so so it's<font color="#CCCCCC"> really important</font><font color="#E5E5E5"> to</font>

612
00:30:47,480 --> 00:30:49,420
have low latency<font color="#CCCCCC"> connection</font>

613
00:30:48,380 --> 00:30:51,580
establishment

614
00:30:49,420 --> 00:30:53,570
multi-streaming<font color="#E5E5E5"> we've talked about that</font>

615
00:30:51,580 --> 00:30:55,250
<font color="#CCCCCC">in addition we wanted to have better</font>

616
00:30:53,570 --> 00:30:58,310
loss recovery<font color="#E5E5E5"> and more flexible</font>

617
00:30:55,250 --> 00:31:00,650
congestion control so<font color="#E5E5E5"> TCP lost curry has</font>

618
00:30:58,310 --> 00:31:03,139
been for a long<font color="#E5E5E5"> time</font><font color="#CCCCCC"> just riddled</font><font color="#E5E5E5"> with</font>

619
00:31:00,650 --> 00:31:07,970
<font color="#E5E5E5">complexity because of some early design</font>

620
00:31:03,140 --> 00:31:10,430
<font color="#CCCCCC">that was early design components that</font>

621
00:31:07,970 --> 00:31:13,580
were<font color="#CCCCCC"> in</font><font color="#E5E5E5"> DCP and you can overcome them</font>

622
00:31:10,430 --> 00:31:16,370
but it takes a<font color="#E5E5E5"> while to get there we had</font>

623
00:31:13,580 --> 00:31:20,090
the<font color="#E5E5E5"> opportunity to design this from</font>

624
00:31:16,370 --> 00:31:23,750
<font color="#CCCCCC">scratch and so we have lost</font><font color="#E5E5E5"> recovery</font>

625
00:31:20,090 --> 00:31:25,970
that<font color="#E5E5E5"> is just fundamentally has more</font>

626
00:31:23,750 --> 00:31:30,920
signaling and what to do better<font color="#E5E5E5"> under a</font>

627
00:31:25,970 --> 00:31:33,350
larger set<font color="#CCCCCC"> of scenarios</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> we want to</font>

628
00:31:30,920 --> 00:31:41,510
be able<font color="#E5E5E5"> to have flexible condition</font>

629
00:31:33,350 --> 00:31:43,219
control UDP also has<font color="#E5E5E5"> does everybody here</font>

630
00:31:41,510 --> 00:31:46,580
know what<font color="#CCCCCC"> the knight rebinding issue is</font>

631
00:31:43,220 --> 00:31:49,670
I'll very briefly summarize it<font color="#CCCCCC"> for TCP</font>

632
00:31:46,580 --> 00:31:51,320
connections<font color="#E5E5E5"> it's easy to see that when a</font>

633
00:31:49,670 --> 00:31:53,030
TCP<font color="#CCCCCC"> connection goes through a NAT donor</font>

634
00:31:51,320 --> 00:31:54,560
<font color="#E5E5E5">has to</font><font color="#CCCCCC"> maintain a binding for the</font>

635
00:31:53,030 --> 00:31:56,600
connection<font color="#E5E5E5"> that's coming into the night</font>

636
00:31:54,560 --> 00:31:58,370
and<font color="#E5E5E5"> leaving than that for TCP</font>

637
00:31:56,600 --> 00:32:00,409
connections you usually see<font color="#CCCCCC"> the fin or</font>

638
00:31:58,370 --> 00:32:01,790
something like<font color="#CCCCCC"> that or a reset packet</font>

639
00:32:00,410 --> 00:32:03,890
<font color="#E5E5E5">that tells</font><font color="#CCCCCC"> the rat oh this collection is</font>

640
00:32:01,790 --> 00:32:06,290
gone<font color="#E5E5E5"> so you can discard</font><font color="#CCCCCC"> State for this</font>

641
00:32:03,890 --> 00:32:08,990
<font color="#CCCCCC">connection if state is discard</font><font color="#E5E5E5"> for the</font>

642
00:32:06,290 --> 00:32:10,700
connection<font color="#E5E5E5"> before that happens the TCP</font>

643
00:32:08,990 --> 00:32:14,180
connection will stop<font color="#E5E5E5"> working after</font><font color="#CCCCCC"> that</font>

644
00:32:10,700 --> 00:32:16,550
<font color="#E5E5E5">point the same problem exists for quick</font>

645
00:32:14,180 --> 00:32:18,950
<font color="#CCCCCC">accept</font><font color="#E5E5E5"> Nats have no idea that this is</font>

646
00:32:16,550 --> 00:32:21,950
<font color="#CCCCCC">quick they just see it as UDP they are</font>

647
00:32:18,950 --> 00:32:23,570
not expecting a fin bit or a reset bit

648
00:32:21,950 --> 00:32:26,270
to be received

649
00:32:23,570 --> 00:32:29,179
so today's<font color="#CCCCCC"> internet in</font><font color="#E5E5E5"> general has a</font>

650
00:32:26,270 --> 00:32:32,330
unique shorter UDP<font color="#E5E5E5"> time</font><font color="#CCCCCC"> out in Nats than</font>

651
00:32:29,180 --> 00:32:34,520
for TCB<font color="#E5E5E5"> so we needed to</font><font color="#CCCCCC"> have some</font>

652
00:32:32,330 --> 00:32:37,340
resilience to<font color="#CCCCCC"> NAT rebinding which is</font>

653
00:32:34,520 --> 00:32:39,530
that<font color="#CCCCCC"> when you mid connection a new</font>

654
00:32:37,340 --> 00:32:41,860
<font color="#E5E5E5">packet might end up getting bound to a</font>

655
00:32:39,530 --> 00:32:44,350
new port which will<font color="#E5E5E5"> arrive at the</font>

656
00:32:41,860 --> 00:32:47,229
as a completely different<font color="#CCCCCC"> photo poem</font><font color="#E5E5E5"> and</font>

657
00:32:44,350 --> 00:32:48,610
the server has<font color="#CCCCCC"> to deal with it and know</font>

658
00:32:47,230 --> 00:32:51,399
<font color="#CCCCCC">that</font><font color="#E5E5E5"> this belongs to the same connection</font>

659
00:32:48,610 --> 00:32:54,370
<font color="#E5E5E5">so quick uses an explicit connection</font>

660
00:32:51,399 --> 00:32:57,580
identifier<font color="#E5E5E5"> that's in the packet and that</font>

661
00:32:54,370 --> 00:32:58,809
the server uses to collate packets that

662
00:32:57,580 --> 00:33:04,418
belong to<font color="#E5E5E5"> the same connection</font>

663
00:32:58,809 --> 00:33:06,580
irrespective of<font color="#CCCCCC"> for</font><font color="#E5E5E5"> people multiple is</font>

664
00:33:04,419 --> 00:33:08,049
something that's on<font color="#CCCCCC"> a</font><font color="#E5E5E5"> radar it's in the</font>

665
00:33:06,580 --> 00:33:09,970
Charter<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the working group to work on</font>

666
00:33:08,049 --> 00:33:11,980
<font color="#E5E5E5">but it's going to</font><font color="#CCCCCC"> happen later</font>

667
00:33:09,970 --> 00:33:16,389
once<font color="#CCCCCC"> we've resolved some of the more</font>

668
00:33:11,980 --> 00:33:18,820
burning issues that we need to<font color="#CCCCCC"> do so</font>

669
00:33:16,389 --> 00:33:21,309
just<font color="#E5E5E5"> on a couple of these points I'll go</font>

670
00:33:18,820 --> 00:33:22,928
into<font color="#E5E5E5"> just a little bit more detail</font><font color="#CCCCCC"> the</font>

671
00:33:21,309 --> 00:33:25,570
<font color="#E5E5E5">probability in evolvability how do we</font>

672
00:33:22,929 --> 00:33:28,029
how do we satisfy this constraint<font color="#E5E5E5"> or</font>

673
00:33:25,570 --> 00:33:31,870
this design aspiration the first thing

674
00:33:28,029 --> 00:33:34,120
that<font color="#CCCCCC"> pic does is we will use UDP as a</font>

675
00:33:31,870 --> 00:33:37,029
substrate everything<font color="#E5E5E5"> I'm talking about</font>

676
00:33:34,120 --> 00:33:38,469
<font color="#E5E5E5">by the way here is quick as we are</font>

677
00:33:37,029 --> 00:33:40,480
working on it in the<font color="#E5E5E5"> working group as I</font>

678
00:33:38,470 --> 00:33:43,360
mentioned to you<font color="#E5E5E5"> the working group uses</font>

679
00:33:40,480 --> 00:33:44,649
<font color="#E5E5E5">things that the experiment</font><font color="#CCCCCC"> inform</font><font color="#E5E5E5"> but</font>

680
00:33:43,360 --> 00:33:46,529
the working<font color="#E5E5E5"> group is</font><font color="#CCCCCC"> moving much further</font>

681
00:33:44,649 --> 00:33:48,428
with it

682
00:33:46,529 --> 00:33:50,830
this enables deployment through

683
00:33:48,429 --> 00:33:52,419
<font color="#CCCCCC">middleboxes and it allows us to do user</font>

684
00:33:50,830 --> 00:33:54,220
space implementations<font color="#E5E5E5"> meaning that we do</font>

685
00:33:52,419 --> 00:33:58,029
not<font color="#E5E5E5"> have to wait for client operating</font>

686
00:33:54,220 --> 00:34:01,419
systems to you know get upgraded and and

687
00:33:58,029 --> 00:34:04,480
that happens at a very<font color="#E5E5E5"> slow clip virtual</font>

688
00:34:01,419 --> 00:34:05,679
negotiation allows<font color="#E5E5E5"> evolvability none of</font>

689
00:34:04,480 --> 00:34:08,050
the transports that we've seen so<font color="#CCCCCC"> far</font>

690
00:34:05,679 --> 00:34:10,869
have versioning in them this<font color="#CCCCCC"> is an odd</font>

691
00:34:08,050 --> 00:34:13,149
thing<font color="#E5E5E5"> because almost everything</font><font color="#CCCCCC"> else</font>

692
00:34:10,869 --> 00:34:13,960
does have versioning in it but

693
00:34:13,149 --> 00:34:16,899
transports don't

694
00:34:13,960 --> 00:34:20,320
<font color="#CCCCCC">so which negotiation allows</font><font color="#E5E5E5"> us to evolve</font>

695
00:34:16,899 --> 00:34:24,730
the wire format of the protocol going

696
00:34:20,320 --> 00:34:27,970
forward and to make<font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that metal</font>

697
00:34:24,730 --> 00:34:29,889
boxes don't<font color="#E5E5E5"> ossify the bits that</font><font color="#CCCCCC"> we are</font>

698
00:34:27,969 --> 00:34:32,739
sending on the wire<font color="#CCCCCC"> today</font><font color="#E5E5E5"> allows us</font>

699
00:34:29,889 --> 00:34:35,589
which allow us<font color="#CCCCCC"> to change our wire format</font>

700
00:34:32,739 --> 00:34:38,138
going into the<font color="#E5E5E5"> future we encrypt most of</font>

701
00:34:35,589 --> 00:34:40,089
the<font color="#E5E5E5"> quick packet and we</font><font color="#CCCCCC"> authenticate all</font>

702
00:34:38,139 --> 00:34:43,119
<font color="#E5E5E5">the it's all the headers are fully</font>

703
00:34:40,089 --> 00:34:45,399
authenticated<font color="#E5E5E5"> and some of them are</font>

704
00:34:43,119 --> 00:34:47,560
visible<font color="#CCCCCC"> but others are not so that</font>

705
00:34:45,399 --> 00:34:49,560
<font color="#E5E5E5">little box</font><font color="#CCCCCC"> is con</font><font color="#E5E5E5"> tam per them there</font><font color="#CCCCCC"> are</font>

706
00:34:47,560 --> 00:34:53,918
the whole packet is tamper resistant

707
00:34:49,560 --> 00:34:57,389
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is again to help us retain</font><font color="#CCCCCC"> quicks</font>

708
00:34:53,918 --> 00:34:57,388
<font color="#E5E5E5">evolvability going into the future</font>

709
00:34:58,410 --> 00:35:03,390
but it also the<font color="#CCCCCC"> funnels network</font>

710
00:35:00,520 --> 00:35:05,470
operators cosmetic operators are our

711
00:35:03,390 --> 00:35:08,710
<font color="#CCCCCC">metal operators in the room would you</font>

712
00:35:05,470 --> 00:35:10,689
<font color="#E5E5E5">like to identify</font><font color="#CCCCCC"> yourself there you go</font>

713
00:35:08,710 --> 00:35:11,950
yeah<font color="#E5E5E5"> no no I'm not asking you you know</font>

714
00:35:10,690 --> 00:35:14,080
<font color="#CCCCCC">yes thank you</font>

715
00:35:11,950 --> 00:35:16,779
this is a problem<font color="#CCCCCC"> for network operators</font>

716
00:35:14,080 --> 00:35:18,970
because<font color="#CCCCCC"> they</font><font color="#E5E5E5"> used to seeing TCP they</font>

717
00:35:16,780 --> 00:35:22,240
used to seeing all<font color="#E5E5E5"> the</font><font color="#CCCCCC"> bits that</font><font color="#E5E5E5"> are on</font>

718
00:35:18,970 --> 00:35:23,350
the DCP header<font color="#E5E5E5"> and quick says well</font>

719
00:35:22,240 --> 00:35:25,450
you're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> show you anything</font><font color="#CCCCCC"> right</font>

720
00:35:23,350 --> 00:35:28,480
<font color="#CCCCCC">this is only for the</font><font color="#E5E5E5"> endpoints to see</font>

721
00:35:25,450 --> 00:35:30,399
<font color="#E5E5E5">and that's a real problem</font><font color="#CCCCCC"> so we need to</font>

722
00:35:28,480 --> 00:35:33,160
now<font color="#CCCCCC"> sit down</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> do the hard job of</font>

723
00:35:30,400 --> 00:35:36,820
<font color="#CCCCCC">identifying which bits are necessary</font>

724
00:35:33,160 --> 00:35:38,230
<font color="#E5E5E5">which bits have you know become used</font>

725
00:35:36,820 --> 00:35:41,880
over time<font color="#E5E5E5"> simply because they were</font>

726
00:35:38,230 --> 00:35:45,250
<font color="#E5E5E5">visible at the time and are you know for</font>

727
00:35:41,880 --> 00:35:47,320
just<font color="#E5E5E5"> craft and that's a hard</font>

728
00:35:45,250 --> 00:35:49,620
<font color="#CCCCCC">conversation to</font><font color="#E5E5E5"> have because it's hard</font>

729
00:35:47,320 --> 00:35:51,970
<font color="#CCCCCC">to find the core of what's necessary and</font>

730
00:35:49,620 --> 00:35:55,270
it's hard<font color="#E5E5E5"> to determine how much</font><font color="#CCCCCC"> prior</font>

731
00:35:51,970 --> 00:35:58,060
you<font color="#E5E5E5"> know how much whatever we expose</font>

732
00:35:55,270 --> 00:35:59,680
that<font color="#E5E5E5"> in mind to the network</font><font color="#CCCCCC"> we'll have</font>

733
00:35:58,060 --> 00:36:01,570
to assume<font color="#E5E5E5"> gets ossified going into the</font>

734
00:35:59,680 --> 00:36:04,359
future<font color="#CCCCCC"> so we sort</font><font color="#E5E5E5"> of have to figure</font><font color="#CCCCCC"> out</font>

735
00:36:01,570 --> 00:36:07,480
how to<font color="#CCCCCC"> enable ossification in a way that</font>

736
00:36:04,360 --> 00:36:11,490
allows quick to evolve<font color="#E5E5E5"> while getting</font>

737
00:36:07,480 --> 00:36:11,490
ossified in some pieces<font color="#E5E5E5"> yeah listen</font>

738
00:36:11,940 --> 00:36:19,690
that's correct it's happening there are

739
00:36:17,980 --> 00:36:21,790
some headers that<font color="#E5E5E5"> are exposed in the</font>

740
00:36:19,690 --> 00:36:23,800
current<font color="#CCCCCC"> Google deployment that's going</font>

741
00:36:21,790 --> 00:36:26,230
to change<font color="#CCCCCC"> completely</font><font color="#E5E5E5"> because that's an</font>

742
00:36:23,800 --> 00:36:27,700
experimental<font color="#E5E5E5"> protocol anyways I'll talk</font>

743
00:36:26,230 --> 00:36:30,850
<font color="#CCCCCC">about actually</font><font color="#E5E5E5"> exactly what's going to</font>

744
00:36:27,700 --> 00:36:38,620
change<font color="#E5E5E5"> in the header but yeah this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> an</font>

745
00:36:30,850 --> 00:36:41,470
ongoing conversation that's well it's

746
00:36:38,620 --> 00:36:43,210
possible<font color="#CCCCCC"> for the current</font><font color="#E5E5E5"> quake the</font>

747
00:36:41,470 --> 00:36:45,339
current quake is not your future quake

748
00:36:43,210 --> 00:36:46,870
<font color="#E5E5E5">the most important thing is that it</font><font color="#CCCCCC"> has</font>

749
00:36:45,340 --> 00:36:49,450
to be done in a<font color="#E5E5E5"> manner that's sensible</font>

750
00:36:46,870 --> 00:36:50,740
<font color="#E5E5E5">to do the versions</font><font color="#CCCCCC"> that we use right</font><font color="#E5E5E5"> now</font>

751
00:36:49,450 --> 00:36:52,359
<font color="#E5E5E5">the quick version that you see on the</font>

752
00:36:50,740 --> 00:36:54,759
wire is different<font color="#CCCCCC"> from the quick</font>

753
00:36:52,360 --> 00:36:56,770
versions you see in the future<font color="#CCCCCC"> and as I</font>

754
00:36:54,760 --> 00:36:59,410
said<font color="#CCCCCC"> the packet header</font><font color="#E5E5E5"> format is also</font>

755
00:36:56,770 --> 00:37:00,610
changing dramatically so the connection

756
00:36:59,410 --> 00:37:03,430
ID won't be in the<font color="#E5E5E5"> same place</font><font color="#CCCCCC"> for</font>

757
00:37:00,610 --> 00:37:04,900
<font color="#E5E5E5">instance like I said I'll talk about the</font>

758
00:37:03,430 --> 00:37:07,450
header<font color="#CCCCCC"> actually in a little bit of</font>

759
00:37:04,900 --> 00:37:09,690
detail after this but yeah this<font color="#E5E5E5"> is</font>

760
00:37:07,450 --> 00:37:12,808
ongoing work this is why the

761
00:37:09,690 --> 00:37:16,579
working group is so critical for sort<font color="#E5E5E5"> of</font>

762
00:37:12,809 --> 00:37:16,579
the long-term<font color="#CCCCCC"> success of this protocol</font>

763
00:37:17,030 --> 00:37:21,809
[Music]

764
00:37:18,319 --> 00:37:24,329
so exactly<font color="#CCCCCC"> the question</font><font color="#E5E5E5"> I'm going to</font>

765
00:37:21,809 --> 00:37:26,640
show<font color="#E5E5E5"> you very</font><font color="#CCCCCC"> briefly what a quick</font>

766
00:37:24,329 --> 00:37:31,500
packet<font color="#E5E5E5"> used to look</font><font color="#CCCCCC"> like or what</font><font color="#E5E5E5"> it</font>

767
00:37:26,640 --> 00:37:35,819
<font color="#E5E5E5">looks like in be consensus well right</font>

768
00:37:31,500 --> 00:37:37,920
<font color="#E5E5E5">now we have a proposed had a change we</font>

769
00:37:35,819 --> 00:37:39,119
still don't have consensus<font color="#E5E5E5"> on that</font><font color="#CCCCCC"> but</font>

770
00:37:37,920 --> 00:37:40,440
I'm<font color="#E5E5E5"> going to show you both of those to</font>

771
00:37:39,119 --> 00:37:44,520
give you a sense<font color="#CCCCCC"> for what this actually</font>

772
00:37:40,440 --> 00:37:46,140
<font color="#CCCCCC">looks like on</font><font color="#E5E5E5"> the wire</font><font color="#CCCCCC"> so quick has what</font>

773
00:37:44,520 --> 00:37:47,460
<font color="#E5E5E5">we called regular packets these are the</font>

774
00:37:46,140 --> 00:37:49,980
common package that you see the data

775
00:37:47,460 --> 00:37:51,960
carrying packets<font color="#E5E5E5"> and they have flags</font>

776
00:37:49,980 --> 00:37:53,430
<font color="#CCCCCC">they have a connection ID</font><font color="#E5E5E5"> that you</font><font color="#CCCCCC"> use</font>

777
00:37:51,960 --> 00:37:55,230
fighting<font color="#CCCCCC"> to find a</font><font color="#E5E5E5"> connection</font><font color="#CCCCCC"> it's</font>

778
00:37:53,430 --> 00:37:57,240
<font color="#E5E5E5">optional by the way because if you</font>

779
00:37:55,230 --> 00:37:58,559
either endpoint can negotiate and say

780
00:37:57,240 --> 00:38:02,328
well you don't need<font color="#E5E5E5"> to send</font><font color="#CCCCCC"> a connection</font>

781
00:37:58,559 --> 00:38:04,349
ID<font color="#CCCCCC"> because you're</font><font color="#E5E5E5"> 40</font><font color="#CCCCCC"> plus enough for me</font>

782
00:38:02,329 --> 00:38:06,299
which is<font color="#E5E5E5"> common by the way in the server</font>

783
00:38:04,349 --> 00:38:07,920
to client<font color="#E5E5E5"> direction right because the</font>

784
00:38:06,299 --> 00:38:09,990
server<font color="#E5E5E5"> declined direction you're always</font>

785
00:38:07,920 --> 00:38:13,200
receiving packets and on the port that

786
00:38:09,990 --> 00:38:14,700
is<font color="#E5E5E5"> sending requests wrong version number</font>

787
00:38:13,200 --> 00:38:16,319
<font color="#CCCCCC">is optional</font><font color="#E5E5E5"> in here but it's present in</font>

788
00:38:14,700 --> 00:38:19,710
<font color="#E5E5E5">this format</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> there's a packet number</font>

789
00:38:16,319 --> 00:38:20,430
<font color="#CCCCCC">which is synonymous with</font><font color="#E5E5E5"> the sequence</font>

790
00:38:19,710 --> 00:38:22,260
number in TCP

791
00:38:20,430 --> 00:38:25,379
but<font color="#E5E5E5"> different and I'll talk about the</font>

792
00:38:22,260 --> 00:38:27,240
difference in<font color="#E5E5E5"> a in a bit and then</font>

793
00:38:25,380 --> 00:38:29,970
there's the encrypted<font color="#E5E5E5"> preload this is</font>

794
00:38:27,240 --> 00:38:32,220
quick frames<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the entire payload</font>

795
00:38:29,970 --> 00:38:35,520
<font color="#E5E5E5">of quick when I say the paper this</font><font color="#CCCCCC"> is</font>

796
00:38:32,220 --> 00:38:37,589
not just user payload<font color="#E5E5E5"> this is quick</font>

797
00:38:35,520 --> 00:38:40,319
frame headers as well so what are<font color="#E5E5E5"> quick</font>

798
00:38:37,589 --> 00:38:42,089
frames<font color="#E5E5E5"> well this is all the</font><font color="#CCCCCC"> signalling</font><font color="#E5E5E5"> a</font>

799
00:38:40,319 --> 00:38:44,549
lot of the<font color="#CCCCCC"> signaling that</font><font color="#E5E5E5"> quick does to</font>

800
00:38:42,089 --> 00:38:45,119
its peer the<font color="#CCCCCC"> quick</font><font color="#E5E5E5"> endpoints do with</font>

801
00:38:44,549 --> 00:38:48,720
each other

802
00:38:45,119 --> 00:38:50,880
happens via frames<font color="#E5E5E5"> so you have AK frames</font>

803
00:38:48,720 --> 00:38:53,308
<font color="#E5E5E5">instead of AK packets</font><font color="#CCCCCC"> or you know an act</font>

804
00:38:50,880 --> 00:38:55,470
bit in the in the header we have an AK

805
00:38:53,309 --> 00:38:57,150
frame that can give you a lot<font color="#CCCCCC"> more</font>

806
00:38:55,470 --> 00:38:58,680
detail about<font color="#E5E5E5"> what all is being</font>

807
00:38:57,150 --> 00:39:00,480
acknowledged how long it's been since

808
00:38:58,680 --> 00:39:02,848
<font color="#CCCCCC">those packets</font><font color="#E5E5E5"> were received and so on</font>

809
00:39:00,480 --> 00:39:04,890
then<font color="#CCCCCC"> you can do flow control in</font><font color="#E5E5E5"> here</font>

810
00:39:02,849 --> 00:39:06,779
which<font color="#CCCCCC"> is the window update frame in the</font>

811
00:39:04,890 --> 00:39:09,328
stream frame which actually carries user

812
00:39:06,779 --> 00:39:12,180
payload as we saw earlier<font color="#CCCCCC"> quick carries</font>

813
00:39:09,329 --> 00:39:15,089
user data in streams<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> exactly</font>

814
00:39:12,180 --> 00:39:17,399
where it shows<font color="#CCCCCC"> up on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> wire now all</font><font color="#E5E5E5"> of</font>

815
00:39:15,089 --> 00:39:18,950
this is<font color="#E5E5E5"> encrypted right so the nobody</font>

816
00:39:17,400 --> 00:39:21,460
else<font color="#E5E5E5"> can see this but for</font><font color="#CCCCCC"> the endpoints</font>

817
00:39:18,950 --> 00:39:23,470
<font color="#E5E5E5">at the moment</font>

818
00:39:21,460 --> 00:39:26,650
stuff in the orange can be seen but not

819
00:39:23,470 --> 00:39:28,930
<font color="#E5E5E5">tampered on the network these are</font>

820
00:39:26,650 --> 00:39:31,540
<font color="#E5E5E5">regular packets however there are other</font>

821
00:39:28,930 --> 00:39:33,430
packets which are unencrypted<font color="#CCCCCC"> there's</font>

822
00:39:31,540 --> 00:39:34,900
<font color="#E5E5E5">virtual negotiation</font><font color="#CCCCCC"> because well we</font>

823
00:39:33,430 --> 00:39:36,730
<font color="#E5E5E5">don't even know the version</font><font color="#CCCCCC"> we are</font>

824
00:39:34,900 --> 00:39:39,700
speaking<font color="#E5E5E5"> yet obviously we can't have a</font>

825
00:39:36,730 --> 00:39:42,100
shared key yet<font color="#E5E5E5"> so</font><font color="#CCCCCC"> was your negotiation</font>

826
00:39:39,700 --> 00:39:47,379
looks something like that<font color="#CCCCCC"> and</font><font color="#E5E5E5"> there's a</font>

827
00:39:42,100 --> 00:39:49,210
publicly<font color="#CCCCCC"> set packet which is in the like</font>

828
00:39:47,380 --> 00:39:53,020
I said<font color="#E5E5E5"> in version</font><font color="#CCCCCC"> 0-1 of the draft</font>

829
00:39:49,210 --> 00:39:54,790
<font color="#E5E5E5">specifically is an unencrypted packet so</font>

830
00:39:53,020 --> 00:39:58,300
this is a packet that<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> send to</font>

831
00:39:54,790 --> 00:40:01,600
<font color="#E5E5E5">reset a connection there are</font><font color="#CCCCCC"> a number of</font>

832
00:39:58,300 --> 00:40:03,100
<font color="#E5E5E5">problems with these header formats part</font>

833
00:40:01,600 --> 00:40:05,410
<font color="#CCCCCC">of it is that</font><font color="#E5E5E5"> there are a</font><font color="#CCCCCC"> number of</font>

834
00:40:03,100 --> 00:40:07,089
packet types that are going<font color="#E5E5E5"> on here and</font>

835
00:40:05,410 --> 00:40:09,490
it's<font color="#E5E5E5"> hard to figure out</font><font color="#CCCCCC"> exactly</font><font color="#E5E5E5"> what a</font>

836
00:40:07,090 --> 00:40:11,710
quick packet looks like from the

837
00:40:09,490 --> 00:40:14,229
plethora of options<font color="#E5E5E5"> that you</font><font color="#CCCCCC"> have in</font>

838
00:40:11,710 --> 00:40:17,890
this<font color="#E5E5E5"> space</font><font color="#CCCCCC"> so there's a proposed change</font>

839
00:40:14,230 --> 00:40:19,750
<font color="#E5E5E5">to the headers to the packet itself that</font>

840
00:40:17,890 --> 00:40:22,330
allows<font color="#CCCCCC"> us to</font><font color="#E5E5E5"> somehow try to</font><font color="#CCCCCC"> sort</font>

841
00:40:19,750 --> 00:40:24,640
streamline this<font color="#E5E5E5"> so there's long header</font>

842
00:40:22,330 --> 00:40:28,029
packets which<font color="#CCCCCC"> have which start with</font><font color="#E5E5E5"> the</font>

843
00:40:24,640 --> 00:40:29,890
bit<font color="#E5E5E5"> 1 and then there's a packet type in</font>

844
00:40:28,030 --> 00:40:31,300
there which tells<font color="#E5E5E5"> you what type of</font>

845
00:40:29,890 --> 00:40:32,589
<font color="#E5E5E5">packet it is it could be</font><font color="#CCCCCC"> a version</font>

846
00:40:31,300 --> 00:40:36,100
negotiation packet it could be a

847
00:40:32,590 --> 00:40:38,640
publicly<font color="#E5E5E5"> set packet it could be or a</font>

848
00:40:36,100 --> 00:40:42,790
regular<font color="#E5E5E5"> 0 RTD packet a handshake packet</font>

849
00:40:38,640 --> 00:40:43,450
<font color="#E5E5E5">it has it's always has a 64 bit</font>

850
00:40:42,790 --> 00:40:46,360
connection ID

851
00:40:43,450 --> 00:40:49,509
it has a 32 bit packet number<font color="#CCCCCC"> a 32 bit</font>

852
00:40:46,360 --> 00:40:52,750
version number<font color="#CCCCCC"> and it has a payload</font>

853
00:40:49,510 --> 00:40:55,000
which is type<font color="#CCCCCC"> dependant</font><font color="#E5E5E5"> and may or may</font>

854
00:40:52,750 --> 00:40:57,400
<font color="#CCCCCC">not be</font><font color="#E5E5E5"> encrypted depending upon exactly</font>

855
00:40:55,000 --> 00:40:58,810
<font color="#E5E5E5">what type of packet is is for example a</font>

856
00:40:57,400 --> 00:41:01,330
version ago she ation packet is<font color="#CCCCCC"> not</font>

857
00:40:58,810 --> 00:41:06,070
encrypted<font color="#E5E5E5"> again for the same</font><font color="#CCCCCC"> reason we</font>

858
00:41:01,330 --> 00:41:07,720
<font color="#E5E5E5">haven't quite negotiated a key yet</font><font color="#CCCCCC"> but</font>

859
00:41:06,070 --> 00:41:09,070
there are other<font color="#E5E5E5"> payloads that we won't</font>

860
00:41:07,720 --> 00:41:11,230
<font color="#E5E5E5">encrypt it we want other and other</font>

861
00:41:09,070 --> 00:41:13,330
things<font color="#E5E5E5"> like a public reset to actually</font>

862
00:41:11,230 --> 00:41:16,930
<font color="#E5E5E5">be encrypted or actually have a proof of</font>

863
00:41:13,330 --> 00:41:19,180
some sort from the<font color="#E5E5E5"> peer and that's going</font>

864
00:41:16,930 --> 00:41:22,180
to<font color="#E5E5E5"> show</font><font color="#CCCCCC"> up here the type of proof itself</font>

865
00:41:19,180 --> 00:41:24,129
it's<font color="#CCCCCC"> TBB</font><font color="#E5E5E5"> but all of this</font><font color="#CCCCCC"> is work that's</font>

866
00:41:22,180 --> 00:41:25,390
<font color="#CCCCCC">ongoing as</font><font color="#E5E5E5"> I'm saying this is proposed</font>

867
00:41:24,130 --> 00:41:26,890
we are<font color="#CCCCCC"> going to actually</font><font color="#E5E5E5"> have a</font>

868
00:41:25,390 --> 00:41:31,839
consensus call<font color="#E5E5E5"> on this in the working</font>

869
00:41:26,890 --> 00:41:33,220
group<font color="#E5E5E5"> this week for the common case</font>

870
00:41:31,840 --> 00:41:34,780
where you have a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> data that's</font>

871
00:41:33,220 --> 00:41:35,109
<font color="#CCCCCC">going back and forth once you establish</font>

872
00:41:34,780 --> 00:41:36,670
the

873
00:41:35,109 --> 00:41:39,160
once you've done<font color="#E5E5E5"> finished the handshake</font>

874
00:41:36,670 --> 00:41:40,930
and everything<font color="#CCCCCC"> else</font><font color="#E5E5E5"> there are</font><font color="#CCCCCC"> the short</font>

875
00:41:39,160 --> 00:41:43,149
header packets<font color="#CCCCCC"> I'm not</font><font color="#E5E5E5"> gonna go with the</font>

876
00:41:40,930 --> 00:41:45,249
details but<font color="#CCCCCC"> basically it's a shorter</font>

877
00:41:43,150 --> 00:41:48,130
tighter version of the packet<font color="#E5E5E5"> header in</font>

878
00:41:45,249 --> 00:41:53,288
<font color="#E5E5E5">the best case</font><font color="#CCCCCC"> you can have this be</font>

879
00:41:48,130 --> 00:41:54,969
exactly<font color="#CCCCCC"> two bytes</font><font color="#E5E5E5"> which is quite nice</font><font color="#CCCCCC"> a</font>

880
00:41:53,289 --> 00:41:56,529
packet header of<font color="#E5E5E5"> two bytes that's</font>

881
00:41:54,969 --> 00:41:58,839
<font color="#E5E5E5">awesome</font>

882
00:41:56,529 --> 00:42:02,680
<font color="#E5E5E5">or three bytes in the</font><font color="#CCCCCC"> common case that's</font>

883
00:41:58,839 --> 00:42:05,469
<font color="#E5E5E5">what we expect to</font><font color="#CCCCCC"> see and this will</font>

884
00:42:02,680 --> 00:42:07,239
always<font color="#E5E5E5"> have an encrypted payload so</font>

885
00:42:05,469 --> 00:42:09,400
these are proposed<font color="#E5E5E5"> and not gonna go over</font>

886
00:42:07,239 --> 00:42:11,380
you<font color="#E5E5E5"> know a lot more detail because this</font>

887
00:42:09,400 --> 00:42:13,959
is this<font color="#E5E5E5"> might change as we go forward</font>

888
00:42:11,380 --> 00:42:15,459
<font color="#E5E5E5">but I wanted to show you what head is</font>

889
00:42:13,959 --> 00:42:18,368
what the packet looks like in the type

890
00:42:15,459 --> 00:42:19,629
of work<font color="#E5E5E5"> that's going on in the the depth</font>

891
00:42:18,369 --> 00:42:23,140
of the work that's<font color="#E5E5E5"> going on the working</font>

892
00:42:19,630 --> 00:42:25,479
group<font color="#CCCCCC"> on condition control and loss</font>

893
00:42:23,140 --> 00:42:28,359
recovery<font color="#CCCCCC"> I mentioned earlier that we are</font>

894
00:42:25,479 --> 00:42:31,379
trying<font color="#CCCCCC"> to make this better</font><font color="#E5E5E5"> in quick we</font>

895
00:42:28,359 --> 00:42:33,279
incorporate<font color="#CCCCCC"> ECB best practices</font><font color="#E5E5E5"> and</font>

896
00:42:31,380 --> 00:42:37,180
because we can design<font color="#E5E5E5"> this from scratch</font>

897
00:42:33,279 --> 00:42:39,489
<font color="#CCCCCC">we've</font><font color="#E5E5E5"> decided to use</font><font color="#CCCCCC"> new packet numbers</font>

898
00:42:37,180 --> 00:42:41,198
for retransmissions than four original

899
00:42:39,489 --> 00:42:41,979
transmissions<font color="#E5E5E5"> how many of you are</font>

900
00:42:41,199 --> 00:42:46,299
familiar<font color="#E5E5E5"> with the retransmission</font>

901
00:42:41,979 --> 00:42:48,038
ambiguity problem<font color="#CCCCCC"> in DCD fair number of</font>

902
00:42:46,299 --> 00:42:50,799
here the others please ask<font color="#CCCCCC"> your</font>

903
00:42:48,039 --> 00:42:53,739
neighbors well the problem in<font color="#CCCCCC"> DCT is</font>

904
00:42:50,799 --> 00:42:56,229
<font color="#E5E5E5">that you that a sender when it receives</font>

905
00:42:53,739 --> 00:42:58,239
an acknowledgment for<font color="#CCCCCC"> a packet which it</font>

906
00:42:56,229 --> 00:43:00,489
has retransmitted in the past let's<font color="#CCCCCC"> say</font>

907
00:42:58,239 --> 00:43:02,650
a sender<font color="#CCCCCC"> since back at</font><font color="#E5E5E5"> number 10 later</font>

908
00:43:00,489 --> 00:43:04,029
on retransmitted it sends it again as

909
00:43:02,650 --> 00:43:06,160
packet<font color="#E5E5E5"> number 10</font><font color="#CCCCCC"> all with sequence</font>

910
00:43:04,029 --> 00:43:08,559
number 10 we<font color="#E5E5E5"> have to</font><font color="#CCCCCC"> seize an</font><font color="#E5E5E5"> AK for 10</font>

911
00:43:06,160 --> 00:43:10,660
it<font color="#E5E5E5"> doesn't know which of the two packets</font>

912
00:43:08,559 --> 00:43:12,910
<font color="#CCCCCC">it is for we've worked on this for a</font>

913
00:43:10,660 --> 00:43:14,499
<font color="#E5E5E5">long time and we've you know tried</font><font color="#CCCCCC"> to we</font>

914
00:43:12,910 --> 00:43:17,170
have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> number of proposals that make</font>

915
00:43:14,499 --> 00:43:21,339
retransmission<font color="#CCCCCC"> I'm going to go away</font><font color="#E5E5E5"> but</font>

916
00:43:17,170 --> 00:43:22,900
it's a<font color="#E5E5E5"> problem that came because</font><font color="#CCCCCC"> we did</font>

917
00:43:21,339 --> 00:43:24,729
<font color="#CCCCCC">not</font><font color="#E5E5E5"> have different packet numbers for</font>

918
00:43:22,900 --> 00:43:27,729
these<font color="#E5E5E5"> different packets quick allows you</font>

919
00:43:24,729 --> 00:43:29,379
to do this we not allows you to quickly

920
00:43:27,729 --> 00:43:30,459
<font color="#CCCCCC">acquires here to do</font><font color="#E5E5E5"> this and by</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> way</font>

921
00:43:29,380 --> 00:43:34,089
the packet<font color="#CCCCCC"> number is</font><font color="#E5E5E5"> also used for</font>

922
00:43:30,459 --> 00:43:35,379
<font color="#E5E5E5">crypto so there's there's a lot of sort</font>

923
00:43:34,089 --> 00:43:37,569
of integration<font color="#E5E5E5"> of functionality between</font>

924
00:43:35,380 --> 00:43:39,699
<font color="#E5E5E5">the crypto and the transport and it's</font>

925
00:43:37,569 --> 00:43:41,699
not separated as well which allows<font color="#CCCCCC"> for</font>

926
00:43:39,699 --> 00:43:44,739
lots of efficiencies<font color="#CCCCCC"> to come out</font><font color="#E5E5E5"> of this</font>

927
00:43:41,699 --> 00:43:46,779
quick<font color="#E5E5E5"> also has a more verbose</font><font color="#CCCCCC"> ACK and it</font>

928
00:43:44,739 --> 00:43:48,549
specifically lays out packet received

929
00:43:46,779 --> 00:43:50,650
times<font color="#E5E5E5"> allowing</font><font color="#CCCCCC"> is</font>

930
00:43:48,549 --> 00:43:55,869
that receives<font color="#CCCCCC"> a knack for</font><font color="#E5E5E5"> a packet</font><font color="#CCCCCC"> to do</font>

931
00:43:50,650 --> 00:43:57,279
more precise<font color="#E5E5E5"> RTD computations so what's</font>

932
00:43:55,869 --> 00:43:58,929
the working group up to<font color="#E5E5E5"> as a</font><font color="#CCCCCC"> boundary</font>

933
00:43:57,279 --> 00:44:01,269
<font color="#CCCCCC">point out one example of what we were</font>

934
00:43:58,929 --> 00:44:02,890
doing<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the working group</font><font color="#CCCCCC"> but broadly</font>

935
00:44:01,269 --> 00:44:04,660
<font color="#E5E5E5">it's really taking an experimental</font>

936
00:44:02,890 --> 00:44:08,229
protocol and turning it into like a

937
00:44:04,660 --> 00:44:10,269
professional<font color="#CCCCCC"> it's making it capable</font><font color="#E5E5E5"> of</font>

938
00:44:08,229 --> 00:44:11,769
handling<font color="#E5E5E5"> all the corner cases that</font>

939
00:44:10,269 --> 00:44:17,379
nobody had thought about before

940
00:44:11,769 --> 00:44:19,118
it's a makeover<font color="#CCCCCC"> it's quite a deep change</font>

941
00:44:17,380 --> 00:44:23,319
number of<font color="#E5E5E5"> changes that are</font><font color="#CCCCCC"> happening to</font>

942
00:44:19,119 --> 00:44:24,279
the protocol so the bottom group<font color="#E5E5E5"> is</font>

943
00:44:23,319 --> 00:44:26,859
figure out<font color="#E5E5E5"> how to map you should</font><font color="#CCCCCC"> be</font>

944
00:44:24,279 --> 00:44:29,589
cleanly<font color="#CCCCCC"> too quick how to use</font><font color="#E5E5E5"> tiers 1.3</font>

945
00:44:26,859 --> 00:44:31,089
with quake<font color="#E5E5E5"> number of open questions that</font>

946
00:44:29,589 --> 00:44:32,589
are unresolved yet like I said publicly

947
00:44:31,089 --> 00:44:36,189
said proof we still don't have

948
00:44:32,589 --> 00:44:38,349
resolution on<font color="#CCCCCC"> that and how to make</font><font color="#E5E5E5"> quick</font>

949
00:44:36,189 --> 00:44:39,549
work for normal HTTP applications that's

950
00:44:38,349 --> 00:44:41,949
not work that<font color="#CCCCCC"> we are doing immediately</font>

951
00:44:39,549 --> 00:44:43,660
<font color="#E5E5E5">but that's certainly something that we</font>

952
00:44:41,949 --> 00:44:46,239
all<font color="#E5E5E5"> have in the back of our minds as</font><font color="#CCCCCC"> we</font>

953
00:44:43,660 --> 00:44:49,899
make design decisions<font color="#E5E5E5"> in the working</font>

954
00:44:46,239 --> 00:44:52,869
group<font color="#CCCCCC"> so is this just</font><font color="#E5E5E5"> google's quick no</font>

955
00:44:49,900 --> 00:44:54,819
it's not<font color="#CCCCCC"> I want to be very</font><font color="#E5E5E5"> clear that</font>

956
00:44:52,869 --> 00:44:57,329
<font color="#CCCCCC">Google's quick was the</font><font color="#E5E5E5"> experimental</font>

957
00:44:54,819 --> 00:44:59,739
protocol and the quick working group

958
00:44:57,329 --> 00:45:01,660
used the experiment as a starting point

959
00:44:59,739 --> 00:45:05,349
<font color="#CCCCCC">all the work</font><font color="#E5E5E5"> that's going on is fairly</font>

960
00:45:01,660 --> 00:45:09,399
fundamental<font color="#E5E5E5"> to how quick works and how</font>

961
00:45:05,349 --> 00:45:12,759
we<font color="#CCCCCC"> think</font><font color="#E5E5E5"> of quick and the current IETF</font>

962
00:45:09,400 --> 00:45:14,529
spec is already<font color="#E5E5E5"> it's zero zero</font><font color="#CCCCCC"> two right</font>

963
00:45:12,759 --> 00:45:15,640
now<font color="#E5E5E5"> but it's already miles away from</font>

964
00:45:14,529 --> 00:45:19,479
<font color="#E5E5E5">where we started</font>

965
00:45:15,640 --> 00:45:21,368
six<font color="#E5E5E5"> five months ago so it's a fantastic</font>

966
00:45:19,479 --> 00:45:23,439
<font color="#CCCCCC">example</font><font color="#E5E5E5"> but the whole</font><font color="#CCCCCC"> process</font><font color="#E5E5E5"> was a</font>

967
00:45:21,369 --> 00:45:26,049
<font color="#CCCCCC">fantasy example of running</font><font color="#E5E5E5"> code and</font>

968
00:45:23,439 --> 00:45:27,339
forming protocol design<font color="#E5E5E5"> we started off</font>

969
00:45:26,049 --> 00:45:29,410
with the protocol<font color="#CCCCCC"> an experimental one</font>

970
00:45:27,339 --> 00:45:35,130
<font color="#E5E5E5">that was in there was done done by</font>

971
00:45:29,410 --> 00:45:37,299
<font color="#CCCCCC">Google</font><font color="#E5E5E5"> and all the results drove the the</font>

972
00:45:35,130 --> 00:45:38,739
drove a lot<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the design decisions that</font>

973
00:45:37,299 --> 00:45:40,779
<font color="#CCCCCC">have happened</font><font color="#E5E5E5"> in the IETF world and</font>

974
00:45:38,739 --> 00:45:42,249
anything<font color="#CCCCCC"> that we do now in the idea if</font>

975
00:45:40,779 --> 00:45:44,349
you<font color="#CCCCCC"> have questions about something</font><font color="#E5E5E5"> that</font>

976
00:45:42,249 --> 00:45:46,089
<font color="#E5E5E5">we don't</font><font color="#CCCCCC"> know which one's going</font><font color="#E5E5E5"> to do</font>

977
00:45:44,349 --> 00:45:49,599
well we can<font color="#CCCCCC"> immediate take it back</font>

978
00:45:46,089 --> 00:45:54,219
ported<font color="#CCCCCC"> to</font><font color="#E5E5E5"> Google's quick and see how the</font>

979
00:45:49,599 --> 00:45:57,459
performance<font color="#E5E5E5"> how performance</font><font color="#CCCCCC"> which one</font><font color="#E5E5E5"> is</font>

980
00:45:54,219 --> 00:46:00,920
more performant<font color="#CCCCCC"> that allows us to make</font>

981
00:45:57,459 --> 00:46:04,830
<font color="#CCCCCC">decisions going forward as well so</font>

982
00:46:00,920 --> 00:46:06,750
the goal is<font color="#CCCCCC"> for everybody do</font><font color="#E5E5E5"> use the the</font>

983
00:46:04,830 --> 00:46:10,770
<font color="#E5E5E5">version of quake that comes out as</font>

984
00:46:06,750 --> 00:46:12,330
standardized with the<font color="#E5E5E5"> IDF</font><font color="#CCCCCC"> there are two</font>

985
00:46:10,770 --> 00:46:13,710
quick implementations at the moment

986
00:46:12,330 --> 00:46:16,980
<font color="#E5E5E5">neither</font><font color="#CCCCCC"> of them speak</font>

987
00:46:13,710 --> 00:46:21,000
the IDF version of quick<font color="#E5E5E5"> yet these both</font>

988
00:46:16,980 --> 00:46:23,730
speak<font color="#CCCCCC"> Google's versions of quick</font><font color="#E5E5E5"> they're</font>

989
00:46:21,000 --> 00:46:25,620
available and there are debugging tools

990
00:46:23,730 --> 00:46:27,240
<font color="#E5E5E5">the most important one will say is</font>

991
00:46:25,620 --> 00:46:29,670
<font color="#CCCCCC">chrome let internal so if you have a</font>

992
00:46:27,240 --> 00:46:32,520
chance<font color="#E5E5E5"> go to Chrome colon slash slash</font>

993
00:46:29,670 --> 00:46:34,230
<font color="#E5E5E5">net - internals and you will see quick</font>

994
00:46:32,520 --> 00:46:36,630
<font color="#E5E5E5">as one</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> items</font><font color="#CCCCCC"> then you can click</font>

995
00:46:34,230 --> 00:46:38,940
on<font color="#E5E5E5"> it</font><font color="#CCCCCC"> and you can see all the quick</font>

996
00:46:36,630 --> 00:46:41,280
sessions that<font color="#CCCCCC"> you have established to</font>

997
00:46:38,940 --> 00:46:42,900
various<font color="#CCCCCC"> servers that</font><font color="#E5E5E5"> speak quick</font><font color="#CCCCCC"> so</font>

998
00:46:41,280 --> 00:46:44,490
you're<font color="#E5E5E5"> speaking to Akamai you might be</font>

999
00:46:42,900 --> 00:46:49,140
you<font color="#CCCCCC"> might see quick if you're speaking</font>

1000
00:46:44,490 --> 00:46:57,959
<font color="#E5E5E5">to Google you will see quick and that's</font>

1001
00:46:49,140 --> 00:47:03,950
I think it<font color="#CCCCCC"> 14 minutes for questions</font>

1002
00:46:57,960 --> 00:47:06,270
<font color="#E5E5E5">awesome</font><font color="#CCCCCC"> hahahaha</font>

1003
00:47:03,950 --> 00:47:12,779
like you said quick<font color="#CCCCCC"> questions</font><font color="#E5E5E5"> so I have</font>

1004
00:47:06,270 --> 00:47:28,350
to do<font color="#E5E5E5"> that sorry go on</font><font color="#CCCCCC"> down keep on</font><font color="#E5E5E5"> with</font>

1005
00:47:12,780 --> 00:47:33,030
the<font color="#E5E5E5"> team yes</font><font color="#CCCCCC"> again the wood number give</font>

1006
00:47:28,350 --> 00:47:35,970
me share that's a high<font color="#E5E5E5"> order actually I</font>

1007
00:47:33,030 --> 00:47:37,740
might actually refer you to the<font color="#CCCCCC"> from</font>

1008
00:47:35,970 --> 00:47:39,359
yeah so if<font color="#E5E5E5"> you want to look up</font><font color="#CCCCCC"> the</font>

1009
00:47:37,740 --> 00:47:41,580
<font color="#E5E5E5">presentation be good so we had a number</font>

1010
00:47:39,360 --> 00:47:46,430
<font color="#CCCCCC">of detailed numbers in in the</font>

1011
00:47:41,580 --> 00:47:57,480
presentations from the<font color="#CCCCCC"> bar buff in 2015</font>

1012
00:47:46,430 --> 00:48:00,390
<font color="#E5E5E5">summer in Prague so</font><font color="#CCCCCC"> the numbers from</font><font color="#E5E5E5"> the</font>

1013
00:47:57,480 --> 00:48:02,670
bars from<font color="#CCCCCC"> the buff in Berlin last</font><font color="#E5E5E5"> year</font>

1014
00:48:00,390 --> 00:48:03,870
that should show you some again I can

1015
00:48:02,670 --> 00:48:06,360
give you some numbers again these are

1016
00:48:03,870 --> 00:48:07,859
not universally these are our<font color="#E5E5E5"> numbers</font>

1017
00:48:06,360 --> 00:48:09,630
right so the numbers will be<font color="#CCCCCC"> different</font>

1018
00:48:07,860 --> 00:48:11,310
for others which is partly why<font color="#CCCCCC"> we</font><font color="#E5E5E5"> want</font>

1019
00:48:09,630 --> 00:48:14,150
<font color="#CCCCCC">to see other people to</font><font color="#E5E5E5"> work we can see</font>

1020
00:48:11,310 --> 00:48:17,540
how well it<font color="#CCCCCC"> works</font><font color="#E5E5E5"> but we saw</font>

1021
00:48:14,150 --> 00:48:24,350
rebuff aerates for video playback<font color="#E5E5E5"> reduce</font>

1022
00:48:17,540 --> 00:48:27,020
by about<font color="#CCCCCC"> 20%</font><font color="#E5E5E5"> when we by 20% by</font><font color="#CCCCCC"> 20% in</font>

1023
00:48:24,350 --> 00:48:30,350
<font color="#E5E5E5">greater than 20% but yeah and and this</font>

1024
00:48:27,020 --> 00:48:32,030
was we saw this the the benefit was more

1025
00:48:30,350 --> 00:48:33,440
the this is<font color="#E5E5E5"> actually important so I'll</font>

1026
00:48:32,030 --> 00:48:36,230
just take a moment<font color="#CCCCCC"> before I dig in</font>

1027
00:48:33,440 --> 00:48:39,650
question<font color="#CCCCCC"> the benefit was higher the</font>

1028
00:48:36,230 --> 00:48:41,000
<font color="#E5E5E5">worse the network was so</font><font color="#CCCCCC"> when you went</font>

1029
00:48:39,650 --> 00:48:42,980
when<font color="#CCCCCC"> you looked at</font><font color="#E5E5E5"> benefits and say</font>

1030
00:48:41,000 --> 00:48:47,210
India for example<font color="#CCCCCC"> or Brazil where the</font>

1031
00:48:42,980 --> 00:48:49,460
networks are crappy<font color="#CCCCCC"> we saw more benefits</font>

1032
00:48:47,210 --> 00:48:51,590
<font color="#CCCCCC">with quick the difference between quick</font>

1033
00:48:49,460 --> 00:48:53,960
and easy<font color="#CCCCCC"> CBO</font><font color="#E5E5E5"> is higher than in the US</font>

1034
00:48:51,590 --> 00:48:56,300
for example which again<font color="#E5E5E5"> tells you that</font>

1035
00:48:53,960 --> 00:48:57,710
<font color="#E5E5E5">quick is not you know it's not icing on</font>

1036
00:48:56,300 --> 00:49:00,680
the cake it's actually fundamentally

1037
00:48:57,710 --> 00:49:05,870
changing and it's making HTTP work well

1038
00:49:00,680 --> 00:49:08,180
for crappy networks<font color="#CCCCCC"> just working yeah</font>

1039
00:49:05,870 --> 00:49:10,549
<font color="#E5E5E5">your audience again</font><font color="#CCCCCC"> great</font><font color="#E5E5E5"> work</font>

1040
00:49:08,180 --> 00:49:12,680
I have a question regards<font color="#E5E5E5"> any</font><font color="#CCCCCC"> cast</font><font color="#E5E5E5"> IP</font>

1041
00:49:10,550 --> 00:49:14,660
<font color="#E5E5E5">any guess you got self probably on</font><font color="#CCCCCC"> CD</font>

1042
00:49:12,680 --> 00:49:16,069
<font color="#E5E5E5">ends as well so can you Tommy I think</font>

1043
00:49:14,660 --> 00:49:19,009
<font color="#CCCCCC">that was a lot of customers</font><font color="#E5E5E5"> in the</font>

1044
00:49:16,070 --> 00:49:21,980
design<font color="#E5E5E5"> right just</font><font color="#CCCCCC"> Park</font><font color="#E5E5E5"> speak closer to</font>

1045
00:49:19,010 --> 00:49:24,530
the mic<font color="#CCCCCC"> yeah so my question is quick is</font>

1046
00:49:21,980 --> 00:49:26,240
also designed<font color="#E5E5E5"> to operate with</font><font color="#CCCCCC"> any cast</font>

1047
00:49:24,530 --> 00:49:27,920
networks right<font color="#E5E5E5"> so can you</font><font color="#CCCCCC"> talk a little</font>

1048
00:49:26,240 --> 00:49:29,750
<font color="#E5E5E5">bit</font><font color="#CCCCCC"> about that</font><font color="#E5E5E5"> there's not very much</font>

1049
00:49:27,920 --> 00:49:31,370
that<font color="#E5E5E5"> you need to a special</font><font color="#CCCCCC"> cooperate in</font>

1050
00:49:29,750 --> 00:49:34,460
<font color="#E5E5E5">any</font><font color="#CCCCCC"> guest</font><font color="#E5E5E5"> network as long as you're</font>

1051
00:49:31,370 --> 00:49:38,120
getting<font color="#CCCCCC"> router to the same server</font><font color="#E5E5E5"> yeah</font>

1052
00:49:34,460 --> 00:49:42,350
<font color="#CCCCCC">ok ok the IP address points you to a</font>

1053
00:49:38,120 --> 00:49:44,690
server if the client moves<font color="#E5E5E5"> changes IP</font>

1054
00:49:42,350 --> 00:49:46,460
addresses<font color="#E5E5E5"> or so on and ends</font><font color="#CCCCCC"> up going</font><font color="#E5E5E5"> to</font>

1055
00:49:44,690 --> 00:49:49,070
<font color="#E5E5E5">a different</font><font color="#CCCCCC"> server because of it yeah</font>

1056
00:49:46,460 --> 00:49:50,750
that's<font color="#E5E5E5"> it</font><font color="#CCCCCC"> that's an issue ok and what</font>

1057
00:49:49,070 --> 00:49:52,700
about<font color="#E5E5E5"> DDoS attacks like amplification</font>

1058
00:49:50,750 --> 00:49:55,330
attacks<font color="#E5E5E5"> is this listen to</font><font color="#CCCCCC"> that like</font>

1059
00:49:52,700 --> 00:49:57,770
<font color="#E5E5E5">could we explore it for amplification</font>

1060
00:49:55,330 --> 00:49:59,660
<font color="#CCCCCC">well</font><font color="#E5E5E5"> you tried really hard not to allow</font>

1061
00:49:57,770 --> 00:50:01,670
for that<font color="#CCCCCC"> to</font><font color="#E5E5E5"> happen in general there are</font>

1062
00:49:59,660 --> 00:50:03,589
<font color="#E5E5E5">rules around how many packets can</font><font color="#CCCCCC"> be</font>

1063
00:50:01,670 --> 00:50:06,350
sent<font color="#E5E5E5"> in the first round trip for example</font>

1064
00:50:03,590 --> 00:50:07,880
you would have the same<font color="#CCCCCC"> I think you have</font>

1065
00:50:06,350 --> 00:50:10,370
the I<font color="#CCCCCC"> don't think you have any new DDoS</font>

1066
00:50:07,880 --> 00:50:13,220
implications for using quick<font color="#E5E5E5"> as far as I</font>

1067
00:50:10,370 --> 00:50:15,460
can tell<font color="#E5E5E5"> I look to some other people in</font>

1068
00:50:13,220 --> 00:50:17,689
the room<font color="#CCCCCC"> to verify that</font><font color="#E5E5E5"> that's the case</font>

1069
00:50:15,460 --> 00:50:21,640
<font color="#CCCCCC">thanks</font><font color="#E5E5E5"> but yes I believe that's the case</font>

1070
00:50:17,690 --> 00:50:23,780
I probably<font color="#E5E5E5"> some some great tutorial um</font>

1071
00:50:21,640 --> 00:50:26,240
since you're building a new transport

1072
00:50:23,780 --> 00:50:27,109
protocol why build<font color="#E5E5E5"> it on UDP at all why</font>

1073
00:50:26,240 --> 00:50:30,738
not<font color="#CCCCCC"> just start from</font>

1074
00:50:27,109 --> 00:50:34,038
ground<font color="#E5E5E5"> floor you said great tutorial</font>

1075
00:50:30,739 --> 00:50:37,099
<font color="#E5E5E5">when we stick with</font><font color="#CCCCCC"> that theme</font><font color="#E5E5E5"> let's talk</font>

1076
00:50:34,039 --> 00:50:39,559
more about how<font color="#CCCCCC"> awesome this</font><font color="#E5E5E5"> was because</font>

1077
00:50:37,099 --> 00:50:42,319
<font color="#E5E5E5">of what I said deployability you can't</font>

1078
00:50:39,559 --> 00:50:45,220
deploy anything that's not that's not

1079
00:50:42,319 --> 00:50:47,569
UDP or TCP on the<font color="#E5E5E5"> Internet today</font>

1080
00:50:45,220 --> 00:50:49,700
we've tried<font color="#E5E5E5"> this with the CDP</font><font color="#CCCCCC"> and we</font>

1081
00:50:47,569 --> 00:50:51,079
failed<font color="#E5E5E5"> and we certainly did not want</font><font color="#CCCCCC"> to</font>

1082
00:50:49,700 --> 00:50:53,660
wait for all<font color="#CCCCCC"> that in years before this</font>

1083
00:50:51,079 --> 00:50:55,130
<font color="#CCCCCC">got out there</font><font color="#E5E5E5"> if there could be a day</font><font color="#CCCCCC"> in</font>

1084
00:50:53,660 --> 00:50:57,558
the<font color="#E5E5E5"> future when we</font><font color="#CCCCCC"> can actually</font><font color="#E5E5E5"> make</font>

1085
00:50:55,130 --> 00:50:59,539
this natively available over IP<font color="#E5E5E5"> and it</font>

1086
00:50:57,559 --> 00:51:03,489
would be<font color="#CCCCCC"> trivial to</font><font color="#E5E5E5"> take quick and dump</font>

1087
00:50:59,539 --> 00:51:03,489
it on top of IP directly at that<font color="#E5E5E5"> point</font>

1088
00:51:04,269 --> 00:51:16,279
thank you can I ask a question of slide

1089
00:51:08,390 --> 00:51:18,890
number<font color="#CCCCCC"> 11 oh boy yeah so you know just</font>

1090
00:51:16,279 --> 00:51:21,380
<font color="#E5E5E5">maybe a very basic question</font><font color="#CCCCCC"> you said</font>

1091
00:51:18,890 --> 00:51:23,210
<font color="#CCCCCC">about</font><font color="#E5E5E5"> that oh you know you want to</font>

1092
00:51:21,380 --> 00:51:25,819
stream everything<font color="#E5E5E5"> on the quick with one</font>

1093
00:51:23,210 --> 00:51:28,069
request right<font color="#E5E5E5"> how did the</font><font color="#CCCCCC"> client and the</font>

1094
00:51:25,819 --> 00:51:30,079
<font color="#E5E5E5">first-level know how many</font><font color="#CCCCCC"> object are</font>

1095
00:51:28,069 --> 00:51:33,440
<font color="#E5E5E5">there and uh it's all</font><font color="#CCCCCC"> requests it's</font>

1096
00:51:30,079 --> 00:51:36,499
<font color="#E5E5E5">multiple requests each request goes over</font>

1097
00:51:33,440 --> 00:51:40,400
a stream right all of them go<font color="#E5E5E5"> all</font>

1098
00:51:36,499 --> 00:51:43,038
requests go over their<font color="#CCCCCC"> own stream</font><font color="#E5E5E5"> but</font>

1099
00:51:40,400 --> 00:51:44,630
they all go over<font color="#E5E5E5"> the same connection the</font>

1100
00:51:43,039 --> 00:51:46,819
client can send<font color="#CCCCCC"> the request as it does</font>

1101
00:51:44,630 --> 00:51:49,039
always whenever<font color="#E5E5E5"> it has a request</font><font color="#CCCCCC"> it</font>

1102
00:51:46,819 --> 00:51:51,259
<font color="#E5E5E5">sends it the</font><font color="#CCCCCC"> request</font><font color="#E5E5E5"> that it sends end</font>

1103
00:51:49,039 --> 00:51:53,390
up becoming<font color="#E5E5E5"> a stream or a couple of</font>

1104
00:51:51,259 --> 00:51:57,170
streams in this case inside of the same

1105
00:51:53,390 --> 00:51:58,670
quick connection<font color="#CCCCCC"> okay no I'm just trying</font>

1106
00:51:57,170 --> 00:52:00,289
<font color="#E5E5E5">to understand that three objects are</font>

1107
00:51:58,670 --> 00:52:01,579
<font color="#E5E5E5">there right that's right if client</font>

1108
00:52:00,289 --> 00:52:03,499
didn't connect to the server in the

1109
00:52:01,579 --> 00:52:05,960
first place<font color="#CCCCCC"> yeah no idea</font><font color="#E5E5E5"> that how many</font>

1110
00:52:03,499 --> 00:52:07,519
<font color="#E5E5E5">objects are there</font><font color="#CCCCCC"> ah sure</font><font color="#E5E5E5"> so the client</font>

1111
00:52:05,960 --> 00:52:11,569
does connect<font color="#E5E5E5"> to the server and sends a</font>

1112
00:52:07,519 --> 00:52:14,988
request first let's say get<font color="#CCCCCC"> / well you</font>

1113
00:52:11,569 --> 00:52:17,680
you you you have to ask<font color="#E5E5E5"> you always send</font>

1114
00:52:14,989 --> 00:52:19,970
HTTP<font color="#CCCCCC"> requests</font><font color="#E5E5E5"> first to the server right</font>

1115
00:52:17,680 --> 00:52:21,470
<font color="#E5E5E5">so you when you have a TCP</font><font color="#CCCCCC"> connection</font>

1116
00:52:19,970 --> 00:52:24,049
what happens you<font color="#E5E5E5"> set up a TCP connection</font>

1117
00:52:21,470 --> 00:52:27,200
<font color="#CCCCCC">and then</font><font color="#E5E5E5"> the client sends a get request</font>

1118
00:52:24,049 --> 00:52:29,538
and<font color="#CCCCCC"> that goes out and</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> get a response</font>

1119
00:52:27,200 --> 00:52:31,700
back<font color="#CCCCCC"> you look at the embedded</font><font color="#E5E5E5"> links the</font>

1120
00:52:29,539 --> 00:52:34,549
embedded request objects and you ask for

1121
00:52:31,700 --> 00:52:36,489
<font color="#E5E5E5">all</font><font color="#CCCCCC"> of the same thing</font><font color="#E5E5E5"> except each one of</font>

1122
00:52:34,549 --> 00:52:39,849
<font color="#E5E5E5">those requests is going over a stream</font>

1123
00:52:36,489 --> 00:52:39,849
<font color="#E5E5E5">inside of quick</font>

1124
00:52:42,630 --> 00:52:46,530
I get<font color="#E5E5E5"> asked two questions one hopefully</font>

1125
00:52:44,940 --> 00:52:49,050
with a quick<font color="#CCCCCC"> answer and</font><font color="#E5E5E5"> then a second</font>

1126
00:52:46,530 --> 00:52:54,420
one<font color="#E5E5E5"> what was wrong with their CTP over</font>

1127
00:52:49,050 --> 00:52:56,430
UDP<font color="#E5E5E5"> few things the</font><font color="#CCCCCC"> first thing</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font>

1128
00:52:54,420 --> 00:52:59,490
in the<font color="#E5E5E5"> handshake is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> completely</font>

1129
00:52:56,430 --> 00:53:02,279
different beast<font color="#CCCCCC"> the second thing is that</font>

1130
00:52:59,490 --> 00:53:04,859
<font color="#E5E5E5">it wasn't optimized for for web</font>

1131
00:53:02,280 --> 00:53:06,180
transactions and for from<font color="#E5E5E5"> opera in the</font>

1132
00:53:04,860 --> 00:53:07,710
third and the<font color="#E5E5E5"> most important thing is</font>

1133
00:53:06,180 --> 00:53:09,390
<font color="#CCCCCC">that it wasn't integrated with the</font>

1134
00:53:07,710 --> 00:53:10,980
security protocol<font color="#CCCCCC"> the</font><font color="#E5E5E5"> only way you could</font>

1135
00:53:09,390 --> 00:53:14,549
<font color="#E5E5E5">do that would be sort of</font><font color="#CCCCCC"> like taking a</font>

1136
00:53:10,980 --> 00:53:16,290
CD be taking D TLS or TLS and figuring

1137
00:53:14,550 --> 00:53:18,330
<font color="#CCCCCC">on</font><font color="#E5E5E5"> how</font><font color="#CCCCCC"> to smush them</font><font color="#E5E5E5"> together and now</font>

1138
00:53:16,290 --> 00:53:20,130
trying<font color="#CCCCCC"> to</font><font color="#E5E5E5"> write code</font><font color="#CCCCCC"> or trying to you</font>

1139
00:53:18,330 --> 00:53:22,740
know take pieces of<font color="#E5E5E5"> software and making</font>

1140
00:53:20,130 --> 00:53:24,270
<font color="#E5E5E5">them work like</font><font color="#CCCCCC"> that is hell so this is</font>

1141
00:53:22,740 --> 00:53:27,209
basically designed<font color="#E5E5E5"> from the ground up</font>

1142
00:53:24,270 --> 00:53:29,130
<font color="#CCCCCC">that has very clear requirements</font><font color="#E5E5E5"> instead</font>

1143
00:53:27,210 --> 00:53:30,510
of<font color="#E5E5E5"> trying to retrofit</font><font color="#CCCCCC"> something okay</font><font color="#E5E5E5"> and</font>

1144
00:53:29,130 --> 00:53:33,750
we thought it was<font color="#E5E5E5"> worth</font><font color="#CCCCCC"> doing that a</font>

1145
00:53:30,510 --> 00:53:35,100
second<font color="#E5E5E5"> question have you</font><font color="#CCCCCC"> anayia</font><font color="#E5E5E5"> probably</font>

1146
00:53:33,750 --> 00:53:36,420
<font color="#CCCCCC">gonna say</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> outer scope for the</font>

1147
00:53:35,100 --> 00:53:39,330
current work<font color="#CCCCCC"> in the working group but</font>

1148
00:53:36,420 --> 00:53:41,310
one<font color="#CCCCCC"> of the things</font><font color="#E5E5E5"> I'd</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> Ted of</font><font color="#CCCCCC"> SCTP</font>

1149
00:53:39,330 --> 00:53:43,350
and was kind<font color="#E5E5E5"> of trying</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> look to reuse</font>

1150
00:53:41,310 --> 00:53:45,509
myself was the partial reliability

1151
00:53:43,350 --> 00:53:47,310
functionality<font color="#E5E5E5"> is that on your roadmap</font>

1152
00:53:45,510 --> 00:53:49,200
origin that the back<font color="#E5E5E5"> of people's minds</font>

1153
00:53:47,310 --> 00:53:50,430
<font color="#E5E5E5">it is in the back of people's minds</font><font color="#CCCCCC"> okay</font>

1154
00:53:49,200 --> 00:53:52,350
that's exactly<font color="#CCCCCC"> where</font><font color="#E5E5E5"> it is at the moment</font>

1155
00:53:50,430 --> 00:53:54,080
it's it's<font color="#E5E5E5"> definitely something</font><font color="#CCCCCC"> that</font>

1156
00:53:52,350 --> 00:53:57,060
they'll want<font color="#CCCCCC"> to address when you</font><font color="#E5E5E5"> go past</font>

1157
00:53:54,080 --> 00:53:58,380
<font color="#E5E5E5">HTTP yeah at the moment</font><font color="#CCCCCC"> again the goal</font>

1158
00:53:57,060 --> 00:54:00,029
<font color="#CCCCCC">is to you know try to build something</font>

1159
00:53:58,380 --> 00:54:01,470
<font color="#E5E5E5">that works why should he be and then</font>

1160
00:54:00,030 --> 00:54:04,020
once you've<font color="#CCCCCC"> done that when you get</font><font color="#E5E5E5"> to</font>

1161
00:54:01,470 --> 00:54:06,660
<font color="#CCCCCC">like video all about</font><font color="#E5E5E5"> TC but yes that's</font>

1162
00:54:04,020 --> 00:54:11,250
absolutely<font color="#E5E5E5"> on everybody's mind and we we</font>

1163
00:54:06,660 --> 00:54:12,720
would want<font color="#E5E5E5"> to get that at some point so</font>

1164
00:54:11,250 --> 00:54:15,060
this<font color="#E5E5E5"> is not actually</font><font color="#CCCCCC"> a question it's a</font>

1165
00:54:12,720 --> 00:54:17,009
favor request of all of you all<font color="#E5E5E5"> so I'm</font>

1166
00:54:15,060 --> 00:54:18,900
part of the<font color="#E5E5E5"> edgy team that's</font><font color="#CCCCCC"> responsible</font>

1167
00:54:17,010 --> 00:54:20,610
for<font color="#E5E5E5"> these and there's a survey</font>

1168
00:54:18,900 --> 00:54:22,230
associated with this<font color="#E5E5E5"> and the link to the</font>

1169
00:54:20,610 --> 00:54:24,150
survey didn't make it in<font color="#E5E5E5"> here this is</font><font color="#CCCCCC"> a</font>

1170
00:54:22,230 --> 00:54:26,430
fabulous tutorial we<font color="#E5E5E5"> would really help</font>

1171
00:54:24,150 --> 00:54:28,890
it would<font color="#E5E5E5"> help us with</font><font color="#CCCCCC"> planning purposes</font>

1172
00:54:26,430 --> 00:54:31,410
<font color="#E5E5E5">for people to respond to the survey</font><font color="#CCCCCC"> and</font>

1173
00:54:28,890 --> 00:54:33,089
I'll get the link sent out and<font color="#E5E5E5"> also to</font>

1174
00:54:31,410 --> 00:54:34,440
send<font color="#E5E5E5"> in suggestions about future topics</font>

1175
00:54:33,090 --> 00:54:36,120
that you<font color="#E5E5E5"> would want I</font><font color="#CCCCCC"> think we had a</font>

1176
00:54:34,440 --> 00:54:38,340
<font color="#CCCCCC">really good one on dns privacy last time</font>

1177
00:54:36,120 --> 00:54:39,630
and this one has been<font color="#E5E5E5"> superb so thank</font>

1178
00:54:38,340 --> 00:54:42,210
<font color="#E5E5E5">you thank</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> Karen and there's also</font>

1179
00:54:39,630 --> 00:54:44,910
<font color="#CCCCCC">question of if if you want to do like a</font>

1180
00:54:42,210 --> 00:54:48,720
more in-depth one<font color="#E5E5E5"> on quick sort of going</font>

1181
00:54:44,910 --> 00:54:50,339
<font color="#CCCCCC">to the innards a bit more right</font><font color="#E5E5E5"> one of</font>

1182
00:54:48,720 --> 00:54:51,750
the conversation points we had was what

1183
00:54:50,340 --> 00:54:53,010
should this be a<font color="#E5E5E5"> one-hour tutorial or a</font>

1184
00:54:51,750 --> 00:54:53,850
two-hour tutorial should it have two

1185
00:54:53,010 --> 00:54:55,020
parts

1186
00:54:53,850 --> 00:54:56,520
these are all the kinds of<font color="#E5E5E5"> things that</font>

1187
00:54:55,020 --> 00:54:58,170
<font color="#E5E5E5">you could actually give us feedback on</font>

1188
00:54:56,520 --> 00:55:00,540
on a survey<font color="#CCCCCC"> yeah if you'd like more</font>

1189
00:54:58,170 --> 00:55:04,290
depth in another<font color="#E5E5E5"> tutorial</font><font color="#CCCCCC"> next time then</font>

1190
00:55:00,540 --> 00:55:06,810
<font color="#E5E5E5">ask</font><font color="#CCCCCC"> corrector I</font><font color="#E5E5E5"> know</font><font color="#CCCCCC"> TCP used to be</font>

1191
00:55:04,290 --> 00:55:13,080
<font color="#E5E5E5">losing the path MTU discovery mechanism</font>

1192
00:55:06,810 --> 00:55:14,370
is any mechanism UDP<font color="#CCCCCC"> no pets</font><font color="#E5E5E5"> we don't</font>

1193
00:55:13,080 --> 00:55:16,590
have any mechanism at the moment we use

1194
00:55:14,370 --> 00:55:19,710
of we did we did work on<font color="#E5E5E5"> sort</font><font color="#CCCCCC"> of</font>

1195
00:55:16,590 --> 00:55:22,320
measuring what empty<font color="#E5E5E5"> use work</font><font color="#CCCCCC"> test and</font>

1196
00:55:19,710 --> 00:55:24,390
we have a<font color="#E5E5E5"> chart somewhere which I'm</font>

1197
00:55:22,320 --> 00:55:25,770
<font color="#CCCCCC">happy</font><font color="#E5E5E5"> to present</font><font color="#CCCCCC"> I've been looking for a</font>

1198
00:55:24,390 --> 00:55:27,900
venue<font color="#E5E5E5"> to present some of the experiments</font>

1199
00:55:25,770 --> 00:55:30,000
that<font color="#E5E5E5"> we're on the</font><font color="#CCCCCC"> date</font><font color="#E5E5E5"> of some of them</font>

1200
00:55:27,900 --> 00:55:32,400
are present<font color="#E5E5E5"> in the buff slides but this</font>

1201
00:55:30,000 --> 00:55:36,610
one isn't<font color="#E5E5E5"> but yeah</font><font color="#CCCCCC"> we chose a</font><font color="#E5E5E5"> fixed size</font>

1202
00:55:32,400 --> 00:55:38,420
based on<font color="#E5E5E5"> what we saw what did you mean</font>

1203
00:55:36,610 --> 00:55:42,540
[Music]

1204
00:55:38,420 --> 00:55:44,820
before<font color="#E5E5E5"> ends up being</font><font color="#CCCCCC"> right around</font><font color="#E5E5E5"> 1400</font>

1205
00:55:42,540 --> 00:55:47,570
<font color="#E5E5E5">in like eight bytes</font><font color="#CCCCCC"> err yeah it's just</font>

1206
00:55:44,820 --> 00:55:51,360
around<font color="#E5E5E5"> 1,400 bytes</font><font color="#CCCCCC"> when is the</font><font color="#E5E5E5"> IP error</font>

1207
00:55:47,570 --> 00:55:53,010
still the<font color="#CCCCCC"> proposal better than TCP</font><font color="#E5E5E5"> say</font>

1208
00:55:51,360 --> 00:55:54,960
that<font color="#E5E5E5"> again performance are still better</font>

1209
00:55:53,010 --> 00:55:56,430
than<font color="#E5E5E5"> normal yeah I mean we have it</font>

1210
00:55:54,960 --> 00:55:58,530
deployed and performance is still<font color="#E5E5E5"> better</font>

1211
00:55:56,430 --> 00:56:01,589
now<font color="#CCCCCC"> I mean if the reason is because</font>

1212
00:55:58,530 --> 00:56:03,120
again<font color="#CCCCCC"> the point is</font><font color="#E5E5E5"> that we we one of the</font>

1213
00:56:01,590 --> 00:56:05,040
short<font color="#CCCCCC"> things is to bear in mind is that</font>

1214
00:56:03,120 --> 00:56:08,040
the<font color="#E5E5E5"> experiment as I told you that we</font>

1215
00:56:05,040 --> 00:56:11,070
have deployed<font color="#CCCCCC"> in</font><font color="#E5E5E5"> Chrome for for Google</font>

1216
00:56:08,040 --> 00:56:14,130
services<font color="#CCCCCC"> tries to use quick and erases</font>

1217
00:56:11,070 --> 00:56:16,140
it against<font color="#CCCCCC"> PCP</font><font color="#E5E5E5"> so if you're using a very</font>

1218
00:56:14,130 --> 00:56:18,540
large<font color="#CCCCCC"> unto you the first packet is</font>

1219
00:56:16,140 --> 00:56:19,529
padded<font color="#CCCCCC"> to be maximum packet size</font><font color="#E5E5E5"> and it</font>

1220
00:56:18,540 --> 00:56:21,690
doesn't get through the network gets

1221
00:56:19,530 --> 00:56:24,780
<font color="#CCCCCC">dropped</font><font color="#E5E5E5"> and Chrome's quietly false</font><font color="#CCCCCC"> to</font>

1222
00:56:21,690 --> 00:56:25,890
falls over to<font color="#CCCCCC"> DCP</font><font color="#E5E5E5"> and uses</font><font color="#CCCCCC"> that so</font><font color="#E5E5E5"> so</font>

1223
00:56:24,780 --> 00:56:29,310
I'm still<font color="#CCCCCC"> using the best of</font><font color="#E5E5E5"> both worlds</font>

1224
00:56:25,890 --> 00:56:31,950
<font color="#CCCCCC">one</font><font color="#E5E5E5"> addition is</font><font color="#CCCCCC"> that it is based on our</font>

1225
00:56:29,310 --> 00:56:35,130
anecdotal<font color="#E5E5E5"> experience</font><font color="#CCCCCC"> once you're in the</font>

1226
00:56:31,950 --> 00:56:36,720
<font color="#CCCCCC">1,400 to 1,500 byte range the network is</font>

1227
00:56:35,130 --> 00:56:38,430
no longer limited<font color="#E5E5E5"> by the number</font><font color="#CCCCCC"> of</font>

1228
00:56:36,720 --> 00:56:40,339
packets sent it can send but actually

1229
00:56:38,430 --> 00:56:42,990
<font color="#E5E5E5">about the number of bytes in the packets</font>

1230
00:56:40,340 --> 00:56:46,110
<font color="#CCCCCC">so except</font><font color="#E5E5E5"> for some minor extra like IP</font>

1231
00:56:42,990 --> 00:56:47,910
et cetera<font color="#E5E5E5"> percentage-wise overhead the</font>

1232
00:56:46,110 --> 00:56:50,850
cost of sending like a 14<font color="#E5E5E5"> error by</font>

1233
00:56:47,910 --> 00:56:52,920
packet versus a 1500 byte<font color="#E5E5E5"> is incredibly</font>

1234
00:56:50,850 --> 00:56:55,080
small and<font color="#E5E5E5"> at</font><font color="#CCCCCC"> least at</font><font color="#E5E5E5"> Google we'd</font>

1235
00:56:52,920 --> 00:56:56,460
actually I think downsize the packets<font color="#E5E5E5"> to</font>

1236
00:56:55,080 --> 00:57:00,120
some slightly<font color="#E5E5E5"> smaller number anyway</font>

1237
00:56:56,460 --> 00:57:01,560
because fragmentation ends up being more

1238
00:57:00,120 --> 00:57:05,190
of a hassle than<font color="#E5E5E5"> that's that it's worth</font>

1239
00:57:01,560 --> 00:57:06,900
you in for TCP yeah yeah<font color="#E5E5E5"> it was</font><font color="#CCCCCC"> the fact</font>

1240
00:57:05,190 --> 00:57:07,650
that<font color="#E5E5E5"> you could back up a</font><font color="#CCCCCC"> few more bits</font>

1241
00:57:06,900 --> 00:57:12,930
but it doesn't

1242
00:57:07,650 --> 00:57:14,520
matter that much<font color="#CCCCCC"> thank you Chile one</font><font color="#E5E5E5"> of</font>

1243
00:57:12,930 --> 00:57:18,029
the design aspirations that was

1244
00:57:14,520 --> 00:57:20,540
<font color="#CCCCCC">mentioned</font><font color="#E5E5E5"> was about</font><font color="#CCCCCC"> nad rebinding so how</font>

1245
00:57:18,030 --> 00:57:23,940
is<font color="#E5E5E5"> it covered how is it taken care of</font>

1246
00:57:20,540 --> 00:57:27,090
<font color="#E5E5E5">taking</font><font color="#CCCCCC"> care of how so so Natura binding</font>

1247
00:57:23,940 --> 00:57:30,120
effects<font color="#CCCCCC"> endpoints that</font><font color="#E5E5E5"> look at the IP</font><font color="#CCCCCC"> n</font>

1248
00:57:27,090 --> 00:57:31,890
port<font color="#E5E5E5"> could determine to identify can</font>

1249
00:57:30,120 --> 00:57:34,950
actually look at the<font color="#E5E5E5"> four table in quick</font>

1250
00:57:31,890 --> 00:57:37,319
<font color="#E5E5E5">you would use the connection ID which is</font>

1251
00:57:34,950 --> 00:57:38,790
<font color="#E5E5E5">in the quick header even of the</font><font color="#CCCCCC"> forty</font>

1252
00:57:37,320 --> 00:57:40,530
bill changes you<font color="#E5E5E5"> can use the connection</font>

1253
00:57:38,790 --> 00:57:47,100
ID to<font color="#CCCCCC"> identify the corruption that's</font><font color="#E5E5E5"> how</font>

1254
00:57:40,530 --> 00:57:58,620
it works<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> it I'm sure we have</font><font color="#E5E5E5"> time</font>

1255
00:57:47,100 --> 00:57:59,490
left demo<font color="#E5E5E5"> time to do a demo</font><font color="#CCCCCC"> of natural</font>

1256
00:57:58,620 --> 00:58:09,600
yeah<font color="#E5E5E5"> yeah gopher</font>

1257
00:57:59,490 --> 00:58:11,160
I can<font color="#E5E5E5"> point</font><font color="#CCCCCC"> to things</font><font color="#E5E5E5"> from here so if</font>

1258
00:58:09,600 --> 00:58:12,690
you go<font color="#CCCCCC"> to Chrome colon slash slash</font><font color="#E5E5E5"> net</font>

1259
00:58:11,160 --> 00:58:16,319
internals you'll see on the left<font color="#CCCCCC"> side</font>

1260
00:58:12,690 --> 00:58:18,180
<font color="#E5E5E5">quick and HTTP</font><font color="#CCCCCC"> doodoo but there it is</font>

1261
00:58:16,320 --> 00:58:20,430
<font color="#CCCCCC">those are three quick connections that</font>

1262
00:58:18,180 --> 00:58:22,919
are using quick version<font color="#E5E5E5"> 35 and this is</font>

1263
00:58:20,430 --> 00:58:25,410
<font color="#CCCCCC">Google's quick</font><font color="#E5E5E5"> version 35 Q 0 3 5</font>

1264
00:58:22,920 --> 00:58:31,290
specifically and if you it shows a bunch

1265
00:58:25,410 --> 00:58:39,990
<font color="#E5E5E5">of things</font><font color="#CCCCCC"> that and then you can</font><font color="#E5E5E5"> go</font>

1266
00:58:31,290 --> 00:58:43,050
<font color="#CCCCCC">through the connection ID okay yeah so I</font>

1267
00:58:39,990 --> 00:58:45,270
<font color="#E5E5E5">can look at all the sessions that John's</font>

1268
00:58:43,050 --> 00:58:46,770
<font color="#CCCCCC">computer has been doing to Google since</font>

1269
00:58:45,270 --> 00:58:50,070
I started doing<font color="#E5E5E5"> this actually let me go</font>

1270
00:58:46,770 --> 00:58:54,350
to like youtube.com<font color="#E5E5E5"> that opens like</font><font color="#CCCCCC"> a</font>

1271
00:58:50,070 --> 00:58:54,350
billion connections<font color="#CCCCCC"> there we go</font>

1272
00:58:57,450 --> 00:59:03,689
you<font color="#E5E5E5"> can see my e Mia so you can see the</font>

1273
00:59:00,900 --> 00:59:05,190
full handshake with the cert<font color="#CCCCCC"> you can see</font>

1274
00:59:03,690 --> 00:59:06,740
how long everything<font color="#E5E5E5"> takes you can see</font>

1275
00:59:05,190 --> 00:59:08,910
every<font color="#CCCCCC"> single packet</font><font color="#E5E5E5"> that's going by</font>

1276
00:59:06,740 --> 00:59:10,560
probably one the<font color="#E5E5E5"> more interesting thing</font>

1277
00:59:08,910 --> 00:59:13,069
is is that you can see the handshake

1278
00:59:10,560 --> 00:59:14,940
process<font color="#E5E5E5"> so this is the crypto reject</font>

1279
00:59:13,070 --> 00:59:17,370
with all the fields that<font color="#E5E5E5"> are available</font>

1280
00:59:14,940 --> 00:59:21,410
<font color="#E5E5E5">in it like this is an indication that</font>

1281
00:59:17,370 --> 00:59:25,170
we're offering<font color="#E5E5E5"> a s GCM and</font><font color="#CCCCCC"> cha-cha 20 is</font>

1282
00:59:21,410 --> 00:59:28,589
<font color="#E5E5E5">cyphers case we're checking</font><font color="#CCCCCC"> cg</font>

1283
00:59:25,170 --> 00:59:31,140
compliance<font color="#CCCCCC"> i you get an idea</font><font color="#E5E5E5"> of what's</font>

1284
00:59:28,589 --> 00:59:32,220
in the acknowledgement frame to stop

1285
00:59:31,140 --> 00:59:36,328
waiting for<font color="#E5E5E5"> him which is actually going</font>

1286
00:59:32,220 --> 00:59:38,308
away<font color="#E5E5E5"> so you so you know basically</font><font color="#CCCCCC"> this</font>

1287
00:59:36,329 --> 00:59:40,049
breaks down<font color="#CCCCCC"> every single</font><font color="#E5E5E5"> frame that's</font>

1288
00:59:38,309 --> 00:59:42,479
inside every<font color="#E5E5E5"> single packet as it's being</font>

1289
00:59:40,049 --> 00:59:45,210
sent or received<font color="#E5E5E5"> it's like a very</font>

1290
00:59:42,479 --> 00:59:46,680
detailed wire<font color="#CCCCCC"> shock trace yeah but at</font>

1291
00:59:45,210 --> 00:59:48,630
the client and the reason you can do

1292
00:59:46,680 --> 00:59:50,489
this on the other<font color="#E5E5E5"> client is again it's</font>

1293
00:59:48,630 --> 00:59:51,930
encrypted<font color="#E5E5E5"> people but it does not</font>

1294
00:59:50,489 --> 00:59:56,130
<font color="#E5E5E5">actually expose any</font><font color="#CCCCCC"> payload information</font>

1295
00:59:51,930 --> 00:59:57,509
<font color="#CCCCCC">so this does not mean bills won't show</font>

1296
00:59:56,130 --> 00:59:59,039
you paid of information<font color="#E5E5E5"> but even the</font>

1297
00:59:57,509 --> 01:00:00,809
<font color="#CCCCCC">flame headers such</font><font color="#E5E5E5"> as the</font><font color="#CCCCCC"> act fame and</font>

1298
00:59:59,039 --> 01:00:02,069
so on and so forth are<font color="#E5E5E5"> all encrypted</font><font color="#CCCCCC"> you</font>

1299
01:00:00,809 --> 01:00:05,190
couldn't see them<font color="#E5E5E5"> without having the</font>

1300
01:00:02,069 --> 01:00:07,558
decryption key for my point is<font color="#E5E5E5"> just</font>

1301
01:00:05,190 --> 01:00:09,690
<font color="#CCCCCC">gonna be from a PII perspective it does</font>

1302
01:00:07,559 --> 01:00:11,940
show<font color="#E5E5E5"> the entire URL but it does not show</font>

1303
01:00:09,690 --> 01:00:13,619
any of<font color="#E5E5E5"> your cookies or any of the</font>

1304
01:00:11,940 --> 01:00:15,539
payload being going<font color="#E5E5E5"> back and forth and</font>

1305
01:00:13,619 --> 01:00:16,979
so if you were<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to use this for</font>

1306
01:00:15,539 --> 01:00:19,799
debugging<font color="#CCCCCC"> purposes it definitely has a</font>

1307
01:00:16,979 --> 01:00:22,348
lot much lower sensitivity<font color="#E5E5E5"> than like a</font>

1308
01:00:19,799 --> 01:00:23,999
full unencrypted<font color="#CCCCCC"> T speed oh yeah</font><font color="#E5E5E5"> that's</font>

1309
01:00:22,349 --> 01:00:25,950
actually really important because we all

1310
01:00:23,999 --> 01:00:27,269
<font color="#E5E5E5">that we get you know the port support</font>

1311
01:00:25,950 --> 01:00:29,339
quick not working well in some

1312
01:00:27,269 --> 01:00:30,959
situations all the<font color="#E5E5E5"> time</font><font color="#CCCCCC"> not all the time</font>

1313
01:00:29,339 --> 01:00:33,509
<font color="#E5E5E5">I'm sorry</font><font color="#CCCCCC"> I shouldn't say</font><font color="#E5E5E5"> that we get it</font>

1314
01:00:30,960 --> 01:00:35,549
like once in<font color="#E5E5E5"> six months that's</font><font color="#CCCCCC"> it's</font>

1315
01:00:33,509 --> 01:00:37,259
infrequent<font color="#E5E5E5"> but when we do get it we ask</font>

1316
01:00:35,549 --> 01:00:38,969
people to send<font color="#E5E5E5"> us in editorials because</font>

1317
01:00:37,259 --> 01:00:41,369
you can you can store this and send it

1318
01:00:38,969 --> 01:00:44,009
off<font color="#E5E5E5"> and this does not</font><font color="#CCCCCC"> have any PII in it</font>

1319
01:00:41,369 --> 01:00:45,690
at all so you can if you are debugging

1320
01:00:44,009 --> 01:00:47,460
<font color="#E5E5E5">your client if</font><font color="#CCCCCC"> you're debugging a</font>

1321
01:00:45,690 --> 01:00:48,839
<font color="#CCCCCC">client's connection you can</font><font color="#E5E5E5"> immediately</font>

1322
01:00:47,460 --> 01:00:50,099
look<font color="#E5E5E5"> at this will ask them to</font><font color="#CCCCCC"> ship you</font>

1323
01:00:48,839 --> 01:00:51,538
this and you can<font color="#E5E5E5"> look at the details of</font>

1324
01:00:50,099 --> 01:00:57,029
what's happening in the<font color="#E5E5E5"> connection or</font>

1325
01:00:51,539 --> 01:00:59,819
you can ship it<font color="#E5E5E5"> to us so that's all</font>

1326
01:00:57,029 --> 01:01:00,890
folks<font color="#E5E5E5"> thank you so much for I don't know</font>

1327
01:00:59,819 --> 01:01:05,659
sorry<font color="#CCCCCC"> Rox</font>

1328
01:01:00,890 --> 01:01:05,658
[Applause]

1329
01:01:35,640 --> 01:01:37,700
you

