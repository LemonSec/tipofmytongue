1
00:00:10,030 --> 00:00:14,329
good day everyone you found yourself in

2
00:00:12,560 --> 00:00:16,490
the token binding<font color="#E5E5E5"> work group if you</font>

3
00:00:14,330 --> 00:00:18,380
believe that you have boarded the wrong

4
00:00:16,490 --> 00:00:22,369
working group meeting please make your

5
00:00:18,380 --> 00:00:24,890
way to the exit now the work the blue

6
00:00:22,369 --> 00:00:28,220
sheets are being circulated everyone

7
00:00:24,890 --> 00:00:32,290
should sign them and up on the<font color="#E5E5E5"> screen we</font>

8
00:00:28,220 --> 00:00:32,290
have<font color="#E5E5E5"> the note well please note it well</font>

9
00:00:38,410 --> 00:00:48,349
and we have an agenda so we're proposing

10
00:00:45,379 --> 00:00:53,718
to<font color="#E5E5E5"> go off over the work work last call</font>

11
00:00:48,350 --> 00:00:57,949
issues review<font color="#CCCCCC"> the token bound TLS 1.3</font>

12
00:00:53,719 --> 00:01:03,530
draft on 0 RT t look at<font color="#E5E5E5"> the reverse</font>

13
00:00:57,949 --> 00:01:07,400
proxies draft and spend no time on the

14
00:01:03,530 --> 00:01:08,840
attestation draft other than to remind

15
00:01:07,400 --> 00:01:13,460
you that<font color="#CCCCCC"> it does</font><font color="#E5E5E5"> exist then you should</font>

16
00:01:08,840 --> 00:01:15,860
read<font color="#CCCCCC"> it so let's get started with</font><font color="#E5E5E5"> the</font>

17
00:01:13,460 --> 00:01:17,210
last call issues once there's somebody

18
00:01:15,860 --> 00:01:23,930
that<font color="#E5E5E5"> wants to add something to the</font>

19
00:01:17,210 --> 00:01:26,809
agenda hearing none let's proceed so<font color="#CCCCCC"> um</font>

20
00:01:23,930 --> 00:01:29,330
the way we thought we'd do this is to

21
00:01:26,810 --> 00:01:31,190
get and the people have been active

22
00:01:29,330 --> 00:01:33,320
contributors please discussion to<font color="#E5E5E5"> take</font>

23
00:01:31,190 --> 00:01:35,179
an active part today and see if we can

24
00:01:33,320 --> 00:01:38,210
<font color="#CCCCCC">work</font><font color="#E5E5E5"> out as much as as much as possible</font>

25
00:01:35,180 --> 00:01:41,330
<font color="#CCCCCC">of these issues</font><font color="#E5E5E5"> on the there are no</font>

26
00:01:38,210 --> 00:01:43,220
slides for the court documents at for

27
00:01:41,330 --> 00:01:44,840
good reason we don't<font color="#E5E5E5"> have a lot of stuff</font>

28
00:01:43,220 --> 00:01:47,810
to<font color="#CCCCCC"> cover</font><font color="#E5E5E5"> other than this space the</font>

29
00:01:44,840 --> 00:01:51,140
festive face-to-face discussion these

30
00:01:47,810 --> 00:01:53,450
are the issues that chairs could beam

31
00:01:51,140 --> 00:01:56,540
from the discussion then that may not be

32
00:01:53,450 --> 00:01:57,890
a complete list I'm hope I mean I'm sort

33
00:01:56,540 --> 00:02:00,320
of assuming that it's not going to turn

34
00:01:57,890 --> 00:02:03,440
out<font color="#CCCCCC"> to be a complete this but it's it's</font>

35
00:02:00,320 --> 00:02:06,199
a starting point um there is sort of

36
00:02:03,440 --> 00:02:10,310
there's been like two main sets of

37
00:02:06,200 --> 00:02:13,820
issues other than the editorial issues

38
00:02:10,310 --> 00:02:16,069
and the editorial stuff we propose not

39
00:02:13,820 --> 00:02:18,108
to cover at all

40
00:02:16,069 --> 00:02:21,078
we can we<font color="#E5E5E5"> can deal with</font><font color="#CCCCCC"> that on</font><font color="#E5E5E5"> the list</font>

41
00:02:18,109 --> 00:02:26,480
and deal with it<font color="#E5E5E5"> as normal as</font><font color="#CCCCCC"> fallacious</font>

42
00:02:21,079 --> 00:02:28,219
there's mint or two mains<font color="#E5E5E5"> or well sets</font>

43
00:02:26,480 --> 00:02:30,230
of issues one of them has to do with

44
00:02:28,219 --> 00:02:32,870
security for the considerations there

45
00:02:30,230 --> 00:02:36,679
hasn't<font color="#CCCCCC"> been a lot</font><font color="#E5E5E5"> of support for from</font>

46
00:02:32,870 --> 00:02:40,219
making the change that Denise proposed

47
00:02:36,680 --> 00:02:41,930
around how to determine essentially a

48
00:02:40,219 --> 00:02:43,849
terminal in the area issue around

49
00:02:41,930 --> 00:02:46,459
security considerations and we<font color="#E5E5E5"> propose</font>

50
00:02:43,849 --> 00:02:48,828
actually leave it as as is so that make

51
00:02:46,459 --> 00:02:51,379
no change the document<font color="#E5E5E5"> and that leads</font>

52
00:02:48,829 --> 00:02:53,209
Morton Thompson's review and I think

53
00:02:51,379 --> 00:02:55,219
Morton gets up to the market area

54
00:02:53,209 --> 00:02:57,919
exactly the right time so not insulting

55
00:02:55,219 --> 00:02:59,959
I put this<font color="#CCCCCC"> on the</font><font color="#E5E5E5"> list because another</font>

56
00:02:57,919 --> 00:03:01,819
thing discussed yeah we've already dealt

57
00:02:59,959 --> 00:03:06,049
with them I am expected to raise him in

58
00:03:01,819 --> 00:03:09,230
<font color="#E5E5E5">this room the the third one was new</font>

59
00:03:06,049 --> 00:03:13,000
though um and<font color="#CCCCCC"> that's the last one yes</font>

60
00:03:09,230 --> 00:03:15,078
yes yeah exactly and whether<font color="#CCCCCC"> you know if</font>

61
00:03:13,000 --> 00:03:18,169
some of these don't need any<font color="#E5E5E5"> more</font>

62
00:03:15,079 --> 00:03:20,299
discussion that's fine um but you know

63
00:03:18,169 --> 00:03:22,069
we want<font color="#E5E5E5"> to put them up here so everybody</font>

64
00:03:20,299 --> 00:03:25,609
can get those sort of a finally go at

65
00:03:22,069 --> 00:03:26,929
them hi Eric rajala speaking is about to

66
00:03:25,609 --> 00:03:30,919
be a<font color="#E5E5E5"> person who has to approve this</font>

67
00:03:26,930 --> 00:03:34,040
document on so<font color="#CCCCCC"> with respect to Danny's</font>

68
00:03:30,919 --> 00:03:35,840
point on it be great if the cherish

69
00:03:34,040 --> 00:03:37,340
could run through the process carefully

70
00:03:35,840 --> 00:03:40,040
so that you can tell me<font color="#CCCCCC"> that there's</font>

71
00:03:37,340 --> 00:03:41,780
consensus not to do this um and you've

72
00:03:40,040 --> 00:03:43,790
considered it rather than just sort of

73
00:03:41,780 --> 00:03:46,009
leader pass the silence because that way

74
00:03:43,790 --> 00:03:49,728
you all right that's a<font color="#E5E5E5"> fair point we</font>

75
00:03:46,009 --> 00:03:52,790
<font color="#E5E5E5">actually did ask a question on the list</font>

76
00:03:49,729 --> 00:03:58,340
whether there was support for making the

77
00:03:52,790 --> 00:03:59,900
change<font color="#E5E5E5"> and there wasn't right we can yes</font>

78
00:03:58,340 --> 00:04:01,790
we can absolutely sort of wrap that up

79
00:03:59,900 --> 00:04:03,650
without harming the<font color="#E5E5E5"> room so I'd</font><font color="#CCCCCC"> like to</font>

80
00:04:01,790 --> 00:04:06,290
ask the question whether<font color="#E5E5E5"> there for</font>

81
00:04:03,650 --> 00:04:09,079
anybody who supports<font color="#E5E5E5"> making the change</font>

82
00:04:06,290 --> 00:04:12,159
of terminology suggested by Denise to

83
00:04:09,079 --> 00:04:12,159
please come<font color="#CCCCCC"> now</font>

84
00:04:15,420 --> 00:04:20,969
and for anybody who support who thinks

85
00:04:18,418 --> 00:04:26,490
we should<font color="#CCCCCC"> leave the text as is to please</font>

86
00:04:20,970 --> 00:04:29,160
come now all right to me that sounds

87
00:04:26,490 --> 00:04:31,230
<font color="#CCCCCC">like pretty clear consensus and since we</font>

88
00:04:29,160 --> 00:04:34,340
sort<font color="#E5E5E5"> of pre confirm this on the list I</font>

89
00:04:31,230 --> 00:04:41,790
think we'll sort of call this right now

90
00:04:34,340 --> 00:04:44,820
all right thank<font color="#CCCCCC"> Eric um and I guess the</font>

91
00:04:41,790 --> 00:04:53,220
floor is open please settle these issues

92
00:04:44,820 --> 00:04:59,669
now this is why we're here in in physic

93
00:04:53,220 --> 00:05:02,550
with physical presence<font color="#CCCCCC"> okay let's</font><font color="#E5E5E5"> start</font>

94
00:04:59,669 --> 00:05:04,109
off<font color="#CCCCCC"> with the</font><font color="#E5E5E5"> first issue people is there</font>

95
00:05:02,550 --> 00:05:09,830
anybody who wants<font color="#CCCCCC"> to make the</font><font color="#E5E5E5"> argument</font>

96
00:05:04,110 --> 00:05:09,830
that the<font color="#CCCCCC"> TLS extensions aren't justified</font>

97
00:05:16,729 --> 00:05:24,750
<font color="#E5E5E5">okay so in that case we</font><font color="#CCCCCC"> can just sort of</font>

98
00:05:21,690 --> 00:05:26,940
do a the same sort of the same hum

99
00:05:24,750 --> 00:05:29,340
around these issues what do you think

100
00:05:26,940 --> 00:05:40,400
that's you like would you like us to do

101
00:05:29,340 --> 00:05:44,460
that Martin<font color="#E5E5E5"> okay so so the question is</font>

102
00:05:40,400 --> 00:05:48,479
<font color="#E5E5E5">should we the question is to</font><font color="#CCCCCC"> believe the</font>

103
00:05:44,460 --> 00:05:51,270
<font color="#E5E5E5">text as is or you know propose a change</font>

104
00:05:48,479 --> 00:05:54,719
work towards they change eliminating the

105
00:05:51,270 --> 00:05:56,609
use of TLS extensions right so if you

106
00:05:54,720 --> 00:06:04,470
believe that<font color="#CCCCCC"> the text is good enough as</font>

107
00:05:56,610 --> 00:06:07,410
is come now right if you believe that

108
00:06:04,470 --> 00:06:09,240
work should be put into the draft to

109
00:06:07,410 --> 00:06:16,139
eliminate towards eliminating TLS

110
00:06:09,240 --> 00:06:19,200
extensions um now right and the<font color="#CCCCCC"> the</font>

111
00:06:16,139 --> 00:06:20,729
third question if<font color="#E5E5E5"> you if you don't sort</font>

112
00:06:19,200 --> 00:06:22,590
of this doesn't make<font color="#CCCCCC"> sense if the</font>

113
00:06:20,729 --> 00:06:24,359
question doesn't make sense to<font color="#CCCCCC"> you</font><font color="#E5E5E5"> or if</font>

114
00:06:22,590 --> 00:06:27,650
you need more information to answer this

115
00:06:24,360 --> 00:06:27,650
question please come<font color="#CCCCCC"> now</font>

116
00:06:28,009 --> 00:06:33,339
<font color="#E5E5E5">alright that seems like pretty</font><font color="#CCCCCC"> clear</font>

117
00:06:29,839 --> 00:06:37,369
<font color="#CCCCCC">conseils</font><font color="#E5E5E5"> this to be that</font><font color="#CCCCCC"> baby text as is</font>

118
00:06:33,339 --> 00:06:40,550
do you want to you know maybe<font color="#E5E5E5"> we can get</font>

119
00:06:37,369 --> 00:06:42,110
some takers on the last one which is<font color="#E5E5E5"> I</font>

120
00:06:40,550 --> 00:06:45,680
guess<font color="#E5E5E5"> the most recent one to come up and</font>

121
00:06:42,110 --> 00:06:50,240
that is the signatures on referred token

122
00:06:45,680 --> 00:06:53,899
bindings do we need them as we<font color="#E5E5E5"> currently</font>

123
00:06:50,240 --> 00:06:58,009
have in the spec or<font color="#E5E5E5"> could we drop them</font>

124
00:06:53,899 --> 00:07:01,520
for some sense of simplicity does

125
00:06:58,009 --> 00:07:03,710
anybody want to talk well do any of the

126
00:07:01,520 --> 00:07:07,639
current authors want to give us a brief

127
00:07:03,710 --> 00:07:09,859
explanation of why we think why it was

128
00:07:07,639 --> 00:07:12,289
thought to be important to sign both the

129
00:07:09,860 --> 00:07:16,870
provided and the referred token binding

130
00:07:12,289 --> 00:07:16,870
well in the in the pink box

131
00:07:24,130 --> 00:07:34,610
hi I'm jerk I'm in the pink box so the

132
00:07:31,370 --> 00:07:38,450
idea was so the referring provider

133
00:07:34,610 --> 00:07:42,500
bindings are there in a situation where

134
00:07:38,450 --> 00:07:44,630
the client<font color="#E5E5E5"> is basically</font><font color="#CCCCCC"> asked to go to</font>

135
00:07:42,500 --> 00:07:48,730
an identity provider and<font color="#CCCCCC"> the identity</font>

136
00:07:44,630 --> 00:07:52,250
<font color="#E5E5E5">provider then issues a some sort</font><font color="#CCCCCC"> of</font>

137
00:07:48,730 --> 00:07:56,090
assertion or identity token or something

138
00:07:52,250 --> 00:07:59,090
like that that<font color="#E5E5E5"> is that the client isn't</font>

139
00:07:56,090 --> 00:08:02,960
supposed to hand to a relying party and

140
00:07:59,090 --> 00:08:05,869
the identity<font color="#E5E5E5"> token assertion is supposed</font>

141
00:08:02,960 --> 00:08:12,049
to be bound to a key that the client

142
00:08:05,870 --> 00:08:13,610
controls and the key is presumably

143
00:08:12,050 --> 00:08:15,650
something that the client doesn't

144
00:08:13,610 --> 00:08:18,050
normally use with the identity provider

145
00:08:15,650 --> 00:08:21,620
because the client will use different

146
00:08:18,050 --> 00:08:23,960
keys for different websites so<font color="#E5E5E5"> normally</font>

147
00:08:21,620 --> 00:08:25,880
the identity provider wouldn't know what

148
00:08:23,960 --> 00:08:28,430
the key pairs that the client uses with

149
00:08:25,880 --> 00:08:30,290
the relying party but there<font color="#E5E5E5"> are</font>

150
00:08:28,430 --> 00:08:32,630
provisions in the spec that<font color="#E5E5E5"> sort of make</font>

151
00:08:30,290 --> 00:08:36,050
exceptions to this rule and allow the

152
00:08:32,630 --> 00:08:38,419
client to show the key pair that it's

153
00:08:36,049 --> 00:08:40,880
that it's normally using with relying

154
00:08:38,419 --> 00:08:42,319
party to the<font color="#E5E5E5"> identity provider so here</font>

155
00:08:40,880 --> 00:08:44,450
this is the keeper that i'm using with

156
00:08:42,320 --> 00:08:47,060
the relying party can<font color="#E5E5E5"> you place min</font>

157
00:08:44,450 --> 00:08:48,560
please mint me a credential that is

158
00:08:47,060 --> 00:08:53,410
bound to that key pair because<font color="#CCCCCC"> I'm going</font>

159
00:08:48,560 --> 00:08:55,880
to use it with your life party and the

160
00:08:53,410 --> 00:08:58,490
presumably it's doing<font color="#CCCCCC"> that while</font>

161
00:08:55,880 --> 00:09:01,790
strongly authenticating to the identity

162
00:08:58,490 --> 00:09:04,400
provider while sending a cookie or<font color="#CCCCCC"> a</font>

163
00:09:01,790 --> 00:09:06,380
<font color="#CCCCCC">rolloff token or something to the</font>

164
00:09:04,400 --> 00:09:08,300
<font color="#E5E5E5">identity provider saying hi</font><font color="#CCCCCC"> I'm the</font>

165
00:09:06,380 --> 00:09:12,470
client that<font color="#CCCCCC"> you already know I want you</font>

166
00:09:08,300 --> 00:09:13,849
to mint me and credential for thee for

167
00:09:12,470 --> 00:09:19,310
this other side that I'm about to go to

168
00:09:13,850 --> 00:09:20,330
<font color="#CCCCCC">poker night</font><font color="#E5E5E5"> party and 22 strongly a</font>

169
00:09:19,310 --> 00:09:23,270
chanukah to the identity provider

170
00:09:20,330 --> 00:09:24,770
there's this the provided token mining

171
00:09:23,270 --> 00:09:26,660
in there whether where the client<font color="#E5E5E5"> can</font>

172
00:09:24,770 --> 00:09:28,730
say look I am the client that<font color="#CCCCCC"> you</font>

173
00:09:26,660 --> 00:09:30,770
already know he is proof that I'm in

174
00:09:28,730 --> 00:09:32,450
possession of this keep hair and he is

175
00:09:30,770 --> 00:09:34,970
also my cookie that is bound to that key

176
00:09:32,450 --> 00:09:35,990
so<font color="#CCCCCC"> you know who I am can you now please</font>

177
00:09:34,970 --> 00:09:37,580
mint me this

178
00:09:35,990 --> 00:09:40,459
that I'm going<font color="#E5E5E5"> to use with the riverline</font>

179
00:09:37,580 --> 00:09:43,310
party and to get to the sort<font color="#E5E5E5"> of an</font>

180
00:09:40,459 --> 00:09:45,349
equivalent level of security between the

181
00:09:43,310 --> 00:09:50,239
client and the relying party we wanted

182
00:09:45,350 --> 00:09:51,980
<font color="#E5E5E5">to make</font><font color="#CCCCCC"> sure that at that point we can</font>

183
00:09:50,240 --> 00:09:54,230
be sure<font color="#CCCCCC"> that the client</font><font color="#E5E5E5"> really is in</font>

184
00:09:51,980 --> 00:09:55,490
possession of that key pair because it's

185
00:09:54,230 --> 00:09:57,649
<font color="#E5E5E5">going to be a different key pair from</font>

186
00:09:55,490 --> 00:10:00,010
the one that the client uses to

187
00:09:57,649 --> 00:10:03,700
authenticate to the identity<font color="#E5E5E5"> provider</font>

188
00:10:00,010 --> 00:10:06,589
and in particular if you think about

189
00:10:03,700 --> 00:10:09,320
scenarios like web browsers or something

190
00:10:06,589 --> 00:10:11,600
clients can sometimes be tricked to send

191
00:10:09,320 --> 00:10:13,730
stuff to servers that they don't

192
00:10:11,600 --> 00:10:17,120
necessarily<font color="#CCCCCC"> have much control about with</font>

193
00:10:13,730 --> 00:10:19,570
redirects and so forth while we<font color="#E5E5E5"> have</font>

194
00:10:17,120 --> 00:10:22,370
lots of provisions in place in the spec

195
00:10:19,570 --> 00:10:24,970
you know prefixing the header with<font color="#CCCCCC"> sec</font>

196
00:10:22,370 --> 00:10:28,790
<font color="#E5E5E5">dash and so forth to try to make that</font>

197
00:10:24,970 --> 00:10:32,660
impossible we don't<font color="#E5E5E5"> always know exactly</font>

198
00:10:28,790 --> 00:10:34,069
<font color="#E5E5E5">what kind</font><font color="#CCCCCC"> of environment the the token</font>

199
00:10:32,660 --> 00:10:35,930
mining will be deployed in whether it's

200
00:10:34,070 --> 00:10:37,700
really going to be a web browser whether

201
00:10:35,930 --> 00:10:39,709
it's really going to be in sec free

202
00:10:37,700 --> 00:10:42,730
fixed header and so forth so to make

203
00:10:39,709 --> 00:10:46,609
<font color="#CCCCCC">sure that clients can be tricked into</font>

204
00:10:42,730 --> 00:10:49,149
sending mentioning a key that they don't

205
00:10:46,610 --> 00:10:52,579
<font color="#E5E5E5">really control in this in this message</font>

206
00:10:49,149 --> 00:10:55,370
we thought it<font color="#E5E5E5"> would be prudent to at</font>

207
00:10:52,579 --> 00:10:57,439
this particular<font color="#E5E5E5"> layer also make the</font>

208
00:10:55,370 --> 00:11:00,829
client actually proof that they possess

209
00:10:57,440 --> 00:11:02,810
the ski so we don't have to worry about

210
00:11:00,829 --> 00:11:08,930
other mechanisms sitting on top that try

211
00:11:02,810 --> 00:11:11,300
to prevent the same thing so someone

212
00:11:08,930 --> 00:11:13,399
Thompson I think I think that's a that's

213
00:11:11,300 --> 00:11:14,959
the<font color="#E5E5E5"> why that I was looking for but</font>

214
00:11:13,399 --> 00:11:16,430
there's<font color="#E5E5E5"> another design that achieves the</font>

215
00:11:14,959 --> 00:11:20,649
same goal with only one signature and

216
00:11:16,430 --> 00:11:22,849
that is used that the key that you have

217
00:11:20,649 --> 00:11:25,160
that you're<font color="#E5E5E5"> using with that site that</font>

218
00:11:22,850 --> 00:11:27,079
you can you the token binding you're

219
00:11:25,160 --> 00:11:31,370
using with that site any you include

220
00:11:27,079 --> 00:11:34,430
under a signature on that key the record

221
00:11:31,370 --> 00:11:38,480
<font color="#CCCCCC">talking binding ID that would achieve</font>

222
00:11:34,430 --> 00:11:41,300
the same goal right so we used to have

223
00:11:38,480 --> 00:11:44,120
an earlier design where we where the key

224
00:11:41,300 --> 00:11:47,829
<font color="#CCCCCC">so it sort of cross certify each other</font>

225
00:11:44,120 --> 00:11:50,140
is I remember<font color="#CCCCCC"> that yeah yeah there's no</font>

226
00:11:47,829 --> 00:11:52,459
there's no

227
00:11:50,140 --> 00:11:54,500
that the attack that<font color="#E5E5E5"> you're looking to</font>

228
00:11:52,460 --> 00:11:58,130
to avoid is whether the client is

229
00:11:54,500 --> 00:12:00,170
effectively duped into performing what's

230
00:11:58,130 --> 00:12:03,620
effectively an unknown a monkey share

231
00:12:00,170 --> 00:12:06,229
where it says please please bind the

232
00:12:03,620 --> 00:12:11,720
following key that<font color="#CCCCCC"> the client doesn't</font>

233
00:12:06,230 --> 00:12:13,220
control to this and as long as the

234
00:12:11,720 --> 00:12:15,770
client is the one generating this

235
00:12:13,220 --> 00:12:18,440
message and<font color="#E5E5E5"> we can make that we can</font>

236
00:12:15,770 --> 00:12:20,630
<font color="#CCCCCC">guarantee that and you can do</font><font color="#E5E5E5"> that with</font>

237
00:12:18,440 --> 00:12:23,210
a single signature which is you have a

238
00:12:20,630 --> 00:12:26,000
referred token binding which is a token

239
00:12:23,210 --> 00:12:30,910
binding for the token binding ID of the

240
00:12:26,000 --> 00:12:33,740
client that it's using this origin which

241
00:12:30,910 --> 00:12:35,329
encloses<font color="#E5E5E5"> the same signature also covers</font>

242
00:12:33,740 --> 00:12:39,010
the token binding idea for the other

243
00:12:35,330 --> 00:12:39,010
origin then you have a<font color="#E5E5E5"> single signature</font>

244
00:12:39,730 --> 00:12:49,850
right if if you can<font color="#CCCCCC"> be sure that</font><font color="#E5E5E5"> the</font>

245
00:12:43,550 --> 00:12:51,979
client can't be ah tricked into the<font color="#CCCCCC"> do</font>

246
00:12:49,850 --> 00:12:54,800
<font color="#CCCCCC">things the same of the same applies yeah</font>

247
00:12:51,980 --> 00:12:58,010
yeah yeah well presumably the client

248
00:12:54,800 --> 00:13:00,349
would know that it's<font color="#E5E5E5"> doing this and have</font>

249
00:12:58,010 --> 00:13:02,120
<font color="#E5E5E5">written the referred token binding does</font>

250
00:13:00,350 --> 00:13:04,700
exactly this right so when you<font color="#E5E5E5"> have the</font>

251
00:13:02,120 --> 00:13:07,700
referred token binding<font color="#E5E5E5"> Heather in the</font>

252
00:13:04,700 --> 00:13:10,330
redirect you're effectively tricking the

253
00:13:07,700 --> 00:13:13,790
client into sending this information so

254
00:13:10,330 --> 00:13:16,400
it's all automated yeah it's entirely

255
00:13:13,790 --> 00:13:20,420
possible so there<font color="#E5E5E5"> is a security</font>

256
00:13:16,400 --> 00:13:22,340
difference between the two yes it the

257
00:13:20,420 --> 00:13:24,500
way that we have it<font color="#CCCCCC"> now you can't trick</font>

258
00:13:22,340 --> 00:13:25,910
the client into signing a token binding

259
00:13:24,500 --> 00:13:27,470
that it doesn't actually have the

260
00:13:25,910 --> 00:13:30,589
private key for because it doesn't have

261
00:13:27,470 --> 00:13:33,860
the private key for it in your proposal

262
00:13:30,590 --> 00:13:36,200
right<font color="#CCCCCC"> messe Miller but in principle if</font>

263
00:13:33,860 --> 00:13:41,030
you could<font color="#CCCCCC"> trick</font><font color="#E5E5E5"> the client into signing</font>

264
00:13:36,200 --> 00:13:42,920
provided data then it would<font color="#CCCCCC"> be they the</font>

265
00:13:41,030 --> 00:13:44,510
server that receives the provided coke

266
00:13:42,920 --> 00:13:46,760
invited<font color="#CCCCCC"> wouldn't be able</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> tell the</font>

267
00:13:44,510 --> 00:13:49,100
difference Jacqueline relative i find

268
00:13:46,760 --> 00:13:51,050
that relatively convincing and I'm kind

269
00:13:49,100 --> 00:13:53,840
of willing to step back on<font color="#E5E5E5"> this</font><font color="#CCCCCC"> one but</font>

270
00:13:51,050 --> 00:13:55,189
I would ask that you<font color="#CCCCCC"> write down that</font>

271
00:13:53,840 --> 00:13:57,170
because that's<font color="#E5E5E5"> not in the draft at the</font>

272
00:13:55,190 --> 00:14:00,470
moment there's a long explanation of why

273
00:13:57,170 --> 00:14:01,819
you have this and the conclusion from

274
00:14:00,470 --> 00:14:03,009
that is that<font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> need the</font>

275
00:14:01,820 --> 00:14:05,809
signature

276
00:14:03,009 --> 00:14:07,430
right the actual<font color="#E5E5E5"> text that goes through</font>

277
00:14:05,809 --> 00:14:09,079
and there's quite a lengthy section

278
00:14:07,430 --> 00:14:11,300
explaining why<font color="#E5E5E5"> you have the two things</font>

279
00:14:09,079 --> 00:14:13,430
in the referring and and the attack but

280
00:14:11,300 --> 00:14:15,979
the particular<font color="#CCCCCC"> tack that attacked that</font>

281
00:14:13,430 --> 00:14:17,748
<font color="#E5E5E5">you're talking about but my conclusion</font>

282
00:14:15,980 --> 00:14:23,149
from reading that was that you don't

283
00:14:17,749 --> 00:14:24,920
<font color="#E5E5E5">need the signature you have to be have</font>

284
00:14:23,149 --> 00:14:26,389
to describe<font color="#E5E5E5"> this other attack that</font>

285
00:14:24,920 --> 00:14:28,878
you're<font color="#E5E5E5"> talking about which is where the</font>

286
00:14:26,389 --> 00:14:31,309
client<font color="#E5E5E5"> is due to some way into signing</font>

287
00:14:28,879 --> 00:14:33,679
something that it doesn't own so to

288
00:14:31,309 --> 00:14:36,920
somebody else want it put the counter

289
00:14:33,679 --> 00:14:41,059
position because but otherwise<font color="#E5E5E5"> I can</font>

290
00:14:36,920 --> 00:14:43,009
make a<font color="#E5E5E5"> couple of other points sort of in</font>

291
00:14:41,059 --> 00:14:44,779
favor of Martin's argument even though<font color="#E5E5E5"> i</font>

292
00:14:43,009 --> 00:14:48,230
<font color="#E5E5E5">don't personally agree with it</font><font color="#CCCCCC"> i we may</font>

293
00:14:44,779 --> 00:14:53,869
as<font color="#CCCCCC"> well get them out on the table bring</font>

294
00:14:48,230 --> 00:15:00,829
them up later so<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the problem that</font>

295
00:14:53,869 --> 00:15:03,829
we<font color="#E5E5E5"> have with the two signatures the</font>

296
00:15:00,829 --> 00:15:08,209
current state is that<font color="#CCCCCC"> there is an edge</font>

297
00:15:03,829 --> 00:15:10,609
case where the relying party uses

298
00:15:08,209 --> 00:15:13,369
different crypto algorithms that aren't

299
00:15:10,610 --> 00:15:16,910
understood by the server so in principle

300
00:15:13,370 --> 00:15:20,389
you could have a referred token binding

301
00:15:16,910 --> 00:15:23,059
browser supports both algorithms and the

302
00:15:20,389 --> 00:15:25,519
server supports algorithm a client

303
00:15:23,059 --> 00:15:27,230
supports algorithm B and the server

304
00:15:25,519 --> 00:15:29,749
won't<font color="#E5E5E5"> be able to actually understand</font>

305
00:15:27,230 --> 00:15:31,939
that referred token binding that

306
00:15:29,749 --> 00:15:35,899
wouldn't<font color="#E5E5E5"> happen in under</font><font color="#CCCCCC"> the case of</font>

307
00:15:31,939 --> 00:15:40,009
Martin's one signature over both token

308
00:15:35,899 --> 00:15:42,199
binding<font color="#E5E5E5"> IDs but on the</font><font color="#CCCCCC"> other hand the</font>

309
00:15:40,009 --> 00:15:43,879
<font color="#E5E5E5">argument is that if you actually are</font>

310
00:15:42,199 --> 00:15:46,069
doing Federation between two parties

311
00:15:43,879 --> 00:15:48,110
actually coordinating what algorithms

312
00:15:46,069 --> 00:15:56,839
you're supporting is it<font color="#E5E5E5"> actually the end</font>

313
00:15:48,110 --> 00:15:59,329
of the world so<font color="#CCCCCC"> where knowing having two</font>

314
00:15:56,839 --> 00:16:01,999
signatures creates some additional

315
00:15:59,329 --> 00:16:05,329
deployment complexity because you could

316
00:16:01,999 --> 00:16:07,670
have algorithm mismatches is really the

317
00:16:05,329 --> 00:16:10,339
<font color="#CCCCCC">most compelling argument for not signing</font>

318
00:16:07,670 --> 00:16:12,998
the second one or signing it with with

319
00:16:10,339 --> 00:16:12,999
<font color="#CCCCCC">the same key</font>

320
00:16:13,820 --> 00:16:20,780
so under a cup of<font color="#E5E5E5"> Microsoft my argument</font>

321
00:16:18,380 --> 00:16:25,460
against<font color="#E5E5E5"> this is that in practice if you</font>

322
00:16:20,780 --> 00:16:27,829
have you<font color="#E5E5E5"> know</font><font color="#CCCCCC"> rps</font><font color="#E5E5E5"> and idps then the it</font>

323
00:16:25,460 --> 00:16:30,620
is reasonable to expect that I dp's you

324
00:16:27,830 --> 00:16:31,910
know that I<font color="#E5E5E5"> DP and he is our peace you</font>

325
00:16:30,620 --> 00:16:33,350
know<font color="#E5E5E5"> that that relate to him actually</font>

326
00:16:31,910 --> 00:16:35,000
<font color="#CCCCCC">have a communication</font><font color="#E5E5E5"> channel between</font>

327
00:16:33,350 --> 00:16:36,950
them and that<font color="#E5E5E5"> they actually</font><font color="#CCCCCC"> you know</font>

328
00:16:35,000 --> 00:16:38,510
coordinate deployment of the token

329
00:16:36,950 --> 00:16:40,790
binding parameters I think that's a

330
00:16:38,510 --> 00:16:43,550
reasonable thing to expect from them and

331
00:16:40,790 --> 00:16:45,140
my other argument against eliminating

332
00:16:43,550 --> 00:16:47,089
<font color="#E5E5E5">the signature on the referred bindings</font>

333
00:16:45,140 --> 00:16:49,220
is that you know today when we look at

334
00:16:47,090 --> 00:16:51,140
the actual redirect mechanism that<font color="#CCCCCC"> we're</font>

335
00:16:49,220 --> 00:16:53,000
currently<font color="#E5E5E5"> defined we can maybe convince</font>

336
00:16:51,140 --> 00:16:57,020
ourselves that there is no way to dupe

337
00:16:53,000 --> 00:16:58,670
the client into into into sending a

338
00:16:57,020 --> 00:17:01,250
referred binding to a key that the

339
00:16:58,670 --> 00:17:03,349
client<font color="#CCCCCC"> does not control but from the</font>

340
00:17:01,250 --> 00:17:05,060
protocol perspective I<font color="#CCCCCC"> would like</font><font color="#E5E5E5"> the</font>

341
00:17:03,350 --> 00:17:08,240
token binding a movement implementation

342
00:17:05,060 --> 00:17:11,359
to be independent kind of the details of

343
00:17:08,240 --> 00:17:14,870
the Federation mechanism so the you know

344
00:17:11,359 --> 00:17:16,790
so when we have new Federation mechanism

345
00:17:14,869 --> 00:17:20,179
in<font color="#CCCCCC"> the future we don't have to you know</font>

346
00:17:16,790 --> 00:17:22,040
to go back and validate that that again

347
00:17:20,180 --> 00:17:25,610
the client cannot be duped into signing

348
00:17:22,040 --> 00:17:30,530
into sending a referred binding<font color="#E5E5E5"> that the</font>

349
00:17:25,609 --> 00:17:32,899
client<font color="#E5E5E5"> is not support</font><font color="#CCCCCC"> benkei dark I just</font>

350
00:17:30,530 --> 00:17:34,639
<font color="#E5E5E5">want a second</font><font color="#CCCCCC"> martin and say please add</font>

351
00:17:32,900 --> 00:17:36,290
some text<font color="#CCCCCC"> to the document</font><font color="#E5E5E5"> that says</font>

352
00:17:34,640 --> 00:17:38,270
you're making the client actually

353
00:17:36,290 --> 00:17:39,770
produce the signature means that it's

354
00:17:38,270 --> 00:17:42,280
not going to<font color="#E5E5E5"> sign something for the key</font>

355
00:17:39,770 --> 00:17:42,280
it doesn't have

356
00:17:47,120 --> 00:17:53,580
so do the do the authors have any

357
00:17:51,360 --> 00:17:56,070
<font color="#E5E5E5">particular objection to adding such</font>

358
00:17:53,580 --> 00:18:04,050
explanation given that you probably

359
00:17:56,070 --> 00:18:07,950
thought<font color="#CCCCCC"> it was self-evident</font><font color="#E5E5E5"> okay the</font>

360
00:18:04,050 --> 00:18:10,560
issue is already filed hi I'm<font color="#CCCCCC"> Darrell</font>

361
00:18:07,950 --> 00:18:12,650
Piper<font color="#E5E5E5"> sort of from deck I think I'm</font>

362
00:18:10,560 --> 00:18:15,659
following<font color="#CCCCCC"> a microsoft guy I was told</font>

363
00:18:12,650 --> 00:18:17,220
this sounds you know<font color="#E5E5E5"> you can tell a lot</font>

364
00:18:15,660 --> 00:18:19,100
about working groups are the kind<font color="#E5E5E5"> of</font>

365
00:18:17,220 --> 00:18:21,510
languages they use the domain-specific

366
00:18:19,100 --> 00:18:24,570
languages they're inventing the terms

367
00:18:21,510 --> 00:18:27,660
they if I feel a need to redefine for

368
00:18:24,570 --> 00:18:29,909
example tells you a lot I'm hearing

369
00:18:27,660 --> 00:18:31,920
language that sounds a lot like the

370
00:18:29,910 --> 00:18:37,380
language that was used once upon a time

371
00:18:31,920 --> 00:18:40,890
in gssapi to bind tokens securely with

372
00:18:37,380 --> 00:18:43,290
things like a cryptographic algorithm

373
00:18:40,890 --> 00:18:45,930
independent protocols and assertions

374
00:18:43,290 --> 00:18:47,940
into the API about what levels of

375
00:18:45,930 --> 00:18:50,340
protection you<font color="#E5E5E5"> want these bound tokens</font>

376
00:18:47,940 --> 00:18:52,560
to carrot and I brought<font color="#E5E5E5"> up Microsoft</font>

377
00:18:50,340 --> 00:18:55,820
because I know they have it and I know I

378
00:18:52,560 --> 00:18:57,780
used it in there Ike to authenticate

379
00:18:55,820 --> 00:19:01,439
cross-realm authenticate domain

380
00:18:57,780 --> 00:19:04,170
controllers Brent e5 and I'm just

381
00:19:01,440 --> 00:19:07,440
<font color="#E5E5E5">wondering why this working group seems</font>

382
00:19:04,170 --> 00:19:09,300
to be reinventing the wheel I was told

383
00:19:07,440 --> 00:19:10,740
it I was cautioned that<font color="#CCCCCC"> i would mind</font>

384
00:19:09,300 --> 00:19:13,530
<font color="#CCCCCC">pissed people off and</font><font color="#E5E5E5"> that's certainly</font>

385
00:19:10,740 --> 00:19:15,690
not my intent here this room obviously

386
00:19:13,530 --> 00:19:18,660
<font color="#CCCCCC">kind of forward people writing drafts</font>

387
00:19:15,690 --> 00:19:20,250
which I love to see I just<font color="#E5E5E5"> that someone</font>

388
00:19:18,660 --> 00:19:22,350
<font color="#E5E5E5">will don't understand what's being done</font>

389
00:19:20,250 --> 00:19:25,320
here I know I hope<font color="#E5E5E5"> someone can explain</font>

390
00:19:22,350 --> 00:19:27,270
it Oh take<font color="#E5E5E5"> a thought but saying that I</font>

391
00:19:25,320 --> 00:19:30,990
think<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is more about there is a</font>

392
00:19:27,270 --> 00:19:34,110
cultural there's certainly<font color="#E5E5E5"> about</font>

393
00:19:30,990 --> 00:19:39,330
cultural<font color="#E5E5E5"> inheritance from of</font><font color="#CCCCCC"> camera</font>

394
00:19:34,110 --> 00:19:42,750
bindings but it used to be cool to<font color="#CCCCCC"> this</font>

395
00:19:39,330 --> 00:19:44,550
well done duplication of effort then k

396
00:19:42,750 --> 00:19:46,650
<font color="#E5E5E5">doc again just a clarifying question</font>

397
00:19:44,550 --> 00:19:49,399
about the previous comment so when

398
00:19:46,650 --> 00:19:51,240
you're talking about the gssapi and the

399
00:19:49,400 --> 00:19:53,790
quality<font color="#E5E5E5"> protection</font><font color="#CCCCCC"> are you actually</font>

400
00:19:51,240 --> 00:19:56,070
explicitly talking about the GSS quality

401
00:19:53,790 --> 00:19:58,500
protection values mostly been deprecated

402
00:19:56,070 --> 00:20:00,800
in the current usage are you talking

403
00:19:58,500 --> 00:20:00,800
about something

404
00:20:06,330 --> 00:20:13,590
Oh first off I should<font color="#E5E5E5"> admit I'm over in</font>

405
00:20:11,789 --> 00:20:16,620
my head here I<font color="#E5E5E5"> haven't been to an ITF in</font>

406
00:20:13,590 --> 00:20:19,139
10 years I've been retired I'm<font color="#E5E5E5"> just here</font>

407
00:20:16,620 --> 00:20:22,229
um I don't know<font color="#E5E5E5"> what's happened to</font>

408
00:20:19,140 --> 00:20:24,120
gssapi in kiddin I haven't<font color="#E5E5E5"> been</font>

409
00:20:22,230 --> 00:20:35,250
following them either I will<font color="#E5E5E5"> start</font>

410
00:20:24,120 --> 00:20:36,719
following them all right um I don't<font color="#E5E5E5"> know</font>

411
00:20:35,250 --> 00:20:38,880
if anybody wants to comment on that

412
00:20:36,720 --> 00:20:40,380
<font color="#E5E5E5">again I sighs as i said i don't think</font>

413
00:20:38,880 --> 00:20:43,970
there is duplication of effort<font color="#E5E5E5"> i think</font>

414
00:20:40,380 --> 00:20:49,610
there's more so there's it there's um

415
00:20:43,970 --> 00:20:49,610
yes that's the word on the people um

416
00:20:51,679 --> 00:20:58,830
good answer<font color="#CCCCCC"> i like it but it seems like</font>

417
00:20:55,080 --> 00:21:00,990
<font color="#CCCCCC">i don't be nice you're violating the</font>

418
00:20:58,830 --> 00:21:04,649
golden rule of trusted systems design

419
00:21:00,990 --> 00:21:07,500
keep the TCB small so they're in simple

420
00:21:04,649 --> 00:21:09,178
so that you can understand it right and

421
00:21:07,500 --> 00:21:10,860
it turns out that people haven't been

422
00:21:09,179 --> 00:21:13,529
implement or there hasn't been a lot of

423
00:21:10,860 --> 00:21:16,649
support for implementing gssapi for the

424
00:21:13,529 --> 00:21:19,169
HTTP layer unfortunately or 4 12<font color="#CCCCCC"> there's</font>

425
00:21:16,649 --> 00:21:20,879
general desire by anyone all of you guys

426
00:21:19,169 --> 00:21:23,100
you<font color="#E5E5E5"> think everything should run user</font>

427
00:21:20,880 --> 00:21:26,820
mode in the browser seems misdirected

428
00:21:23,100 --> 00:21:28,740
<font color="#E5E5E5">most of it but that's premise of this</font>

429
00:21:26,820 --> 00:21:31,168
working with business old<font color="#E5E5E5"> hope including</font>

430
00:21:28,740 --> 00:21:33,720
the scope of what the<font color="#E5E5E5"> platforms we</font>

431
00:21:31,169 --> 00:21:36,570
<font color="#E5E5E5">actually have so I guess what I'm</font><font color="#CCCCCC"> trying</font>

432
00:21:33,720 --> 00:21:38,970
to say is by<font color="#CCCCCC"> just inventing yet another</font>

433
00:21:36,570 --> 00:21:42,059
protocol yet another way to do it yet

434
00:21:38,970 --> 00:21:44,279
another thing we've made<font color="#E5E5E5"> it very</font>

435
00:21:42,059 --> 00:21:46,230
confusing for people to go to the

436
00:21:44,279 --> 00:21:50,940
Chinese menu and figure out how<font color="#CCCCCC"> to build</font>

437
00:21:46,230 --> 00:21:53,880
secure systems so when you just do

438
00:21:50,940 --> 00:21:57,120
another one<font color="#E5E5E5"> I assuming you get it right</font>

439
00:21:53,880 --> 00:22:00,389
in its secure it's just confusing<font color="#CCCCCC"> Oh</font>

440
00:21:57,120 --> 00:22:02,939
what I mean I this<font color="#CCCCCC"> is an interesting</font>

441
00:22:00,389 --> 00:22:04,889
discussion it might be it probably would

442
00:22:02,940 --> 00:22:07,919
have been more valuable during the both

443
00:22:04,889 --> 00:22:10,139
when this working group was formed then

444
00:22:07,919 --> 00:22:16,559
when we're almost off now okay fair

445
00:22:10,139 --> 00:22:18,779
enough so um<font color="#E5E5E5"> Martin did you want to say</font>

446
00:22:16,559 --> 00:22:19,680
anything about the ET le plus one issue

447
00:22:18,779 --> 00:22:21,930
or

448
00:22:19,680 --> 00:22:23,670
is that another okay<font color="#CCCCCC"> look so I'm just</font>

449
00:22:21,930 --> 00:22:25,740
going<font color="#E5E5E5"> to do a pro forma jamon that this</font>

450
00:22:23,670 --> 00:22:28,380
may make sure that nobody else who sort

451
00:22:25,740 --> 00:22:32,640
<font color="#E5E5E5">of thinks that actually that is really</font>

452
00:22:28,380 --> 00:22:34,770
important so the the Mortons common

453
00:22:32,640 --> 00:22:37,380
balls I guess correct me if I'm wrong

454
00:22:34,770 --> 00:22:40,710
that<font color="#E5E5E5"> you know the it seems sort of</font>

455
00:22:37,380 --> 00:22:44,580
seemed like a problem that we're baking

456
00:22:40,710 --> 00:22:49,770
etle if not one into the HTTP spec and

457
00:22:44,580 --> 00:22:51,360
it because what and the question is

458
00:22:49,770 --> 00:22:53,340
whether whether the working group should

459
00:22:51,360 --> 00:22:56,909
actually try<font color="#E5E5E5"> to eliminate that</font>

460
00:22:53,340 --> 00:23:00,659
dependency from the from<font color="#CCCCCC"> the</font>

461
00:22:56,910 --> 00:23:04,830
specification so I'm just going to<font color="#E5E5E5"> ask</font>

462
00:23:00,660 --> 00:23:06,420
for a harm of people who believe Martin

463
00:23:04,830 --> 00:23:09,960
is correct<font color="#E5E5E5"> and we should actually try to</font>

464
00:23:06,420 --> 00:23:11,670
do work towards eliminating a dependency

465
00:23:09,960 --> 00:23:17,480
on ETA because one<font color="#CCCCCC"> when the</font>

466
00:23:11,670 --> 00:23:22,350
specifications please come<font color="#CCCCCC"> now all right</font>

467
00:23:17,480 --> 00:23:23,910
simmer of the right to your XID and what

468
00:23:22,350 --> 00:23:25,439
was there a proposal for some other

469
00:23:23,910 --> 00:23:27,720
thing or is this just a question about

470
00:23:25,440 --> 00:23:34,350
whether or no<font color="#CCCCCC"> saoirse one right ed</font>

471
00:23:27,720 --> 00:23:36,060
exactly<font color="#CCCCCC"> evil there was no so some mutton</font>

472
00:23:34,350 --> 00:23:38,399
Thompson I think I suggested that you

473
00:23:36,060 --> 00:23:42,780
could<font color="#E5E5E5"> find these</font><font color="#CCCCCC"> two an origin scope</font>

474
00:23:38,400 --> 00:23:47,130
scope to an origin which is host sorry

475
00:23:42,780 --> 00:23:49,320
scheme host port alright so the avian

476
00:23:47,130 --> 00:23:51,810
and buff so so the appropriate ham would

477
00:23:49,320 --> 00:23:54,510
be<font color="#CCCCCC"> the halls for support for moving</font>

478
00:23:51,810 --> 00:23:56,639
towards scoping to origin rather than

479
00:23:54,510 --> 00:23:59,580
scoping to eat a late no that'll be<font color="#CCCCCC"> a</font>

480
00:23:56,640 --> 00:24:03,480
reasonable question to ask<font color="#CCCCCC"> okay like all</font>

481
00:23:59,580 --> 00:24:11,580
right so rephrase so um if you believe

482
00:24:03,480 --> 00:24:13,560
that marking we should<font color="#E5E5E5"> find out whether</font>

483
00:24:11,580 --> 00:24:17,550
<font color="#E5E5E5">or not people actually understand what</font>

484
00:24:13,560 --> 00:24:20,310
<font color="#CCCCCC">the two options mean before we well I</font>

485
00:24:17,550 --> 00:24:23,360
think one<font color="#CCCCCC"> often that I was going</font><font color="#E5E5E5"> to hum</font>

486
00:24:20,310 --> 00:24:28,620
for is sort of leave the text assets

487
00:24:23,360 --> 00:24:30,689
right and the other<font color="#E5E5E5"> is no work towards</font>

488
00:24:28,620 --> 00:24:32,870
<font color="#CCCCCC">origin scoping all the negativity puff</font>

489
00:24:30,690 --> 00:24:32,870
monsters

490
00:24:33,210 --> 00:24:42,430
hi Jeff Hodges um so this<font color="#E5E5E5"> is in regards</font>

491
00:24:38,560 --> 00:24:47,560
to the HTTPS token bargain bindings that

492
00:24:42,430 --> 00:24:51,240
right yeah that's correct I wanted yeah

493
00:24:47,560 --> 00:24:51,240
that could get that in the record<font color="#E5E5E5"> okay</font>

494
00:24:52,410 --> 00:24:59,530
what does suspects<font color="#E5E5E5"> say now the spec says</font>

495
00:24:55,240 --> 00:25:04,120
now that that you should I believe scope

496
00:24:59,530 --> 00:25:08,649
<font color="#CCCCCC">the scope you're bound your token</font>

497
00:25:04,120 --> 00:25:13,449
binding keys to<font color="#CCCCCC"> etl d plus one in order</font>

498
00:25:08,650 --> 00:25:16,450
to<font color="#E5E5E5"> match the binding the scoping of</font>

499
00:25:13,450 --> 00:25:23,620
cookies which is by default and it

500
00:25:16,450 --> 00:25:28,090
references RFC 6260 65-62<font color="#CCCCCC"> 60 to 65 I get</font>

501
00:25:23,620 --> 00:25:30,489
<font color="#E5E5E5">that bathroom just a slight</font>

502
00:25:28,090 --> 00:25:33,040
clarification under a<font color="#E5E5E5"> puff of Microsoft</font>

503
00:25:30,490 --> 00:25:34,930
up there are two levels of things that

504
00:25:33,040 --> 00:25:37,810
the specs say the protocol spec says

505
00:25:34,930 --> 00:25:40,660
that the the token binding keys should

506
00:25:37,810 --> 00:25:44,139
be scoped no larger than the the scope

507
00:25:40,660 --> 00:25:46,480
of the tokens in the application

508
00:25:44,140 --> 00:25:48,550
protocol and then the HTTPS token

509
00:25:46,480 --> 00:25:54,250
binding spec says that the scope is et

510
00:25:48,550 --> 00:25:57,490
al<font color="#E5E5E5"> D plus 1 right am i understanding of</font>

511
00:25:54,250 --> 00:25:59,740
your your question / proposal<font color="#CCCCCC"> Martin is</font>

512
00:25:57,490 --> 00:26:02,380
that you suggested this be moved to

513
00:25:59,740 --> 00:26:05,640
scoping at origin is that the<font color="#CCCCCC"> vitae take</font>

514
00:26:02,380 --> 00:26:07,780
as long as I correct yeah<font color="#E5E5E5"> I tmartn not</font>

515
00:26:05,640 --> 00:26:10,750
just to be<font color="#CCCCCC"> a little bit</font><font color="#E5E5E5"> clear the</font>

516
00:26:07,780 --> 00:26:12,520
current text is slightly more

517
00:26:10,750 --> 00:26:15,220
<font color="#E5E5E5">complicated and that has one case that</font>

518
00:26:12,520 --> 00:26:16,900
<font color="#CCCCCC">is must be et al v plus one and</font><font color="#E5E5E5"> then</font>

519
00:26:15,220 --> 00:26:23,560
there's another case that should be ET

520
00:26:16,900 --> 00:26:25,390
le<font color="#CCCCCC"> D plus 1 so it's four pairs for first</font>

521
00:26:23,560 --> 00:26:27,129
party in Federation use cases to find in

522
00:26:25,390 --> 00:26:30,520
<font color="#CCCCCC">this specification and used for binding</font>

523
00:26:27,130 --> 00:26:32,260
HTTP cookies is must and then if you

524
00:26:30,520 --> 00:26:34,720
want to find other things<font color="#E5E5E5"> like</font><font color="#CCCCCC"> Oh auth</font>

525
00:26:32,260 --> 00:26:37,980
tokens or open ID connect ID tokens

526
00:26:34,720 --> 00:26:37,980
that's the should

527
00:26:40,560 --> 00:26:45,340
so Martin Thompson since you have the

528
00:26:42,790 --> 00:26:48,790
text in front of you<font color="#E5E5E5"> then does that</font>

529
00:26:45,340 --> 00:26:50,889
allow you<font color="#E5E5E5"> to go wider in scope what does</font>

530
00:26:48,790 --> 00:26:53,379
<font color="#CCCCCC">it</font><font color="#E5E5E5"> say that you might want to that's the</font>

531
00:26:50,890 --> 00:26:55,960
<font color="#E5E5E5">map I mean it should their suggest that</font>

532
00:26:53,380 --> 00:26:58,030
you could choose to ignore that<font color="#E5E5E5"> rule and</font>

533
00:26:55,960 --> 00:27:01,330
do something<font color="#E5E5E5"> else in which case does</font>

534
00:26:58,030 --> 00:27:03,580
<font color="#E5E5E5">that mean that you could do wider scope</font>

535
00:27:01,330 --> 00:27:08,710
tokens are going to give the same ID to

536
00:27:03,580 --> 00:27:10,570
every single site on the<font color="#CCCCCC"> Internet so</font>

537
00:27:08,710 --> 00:27:15,730
that's permitted by the spec okay that's

538
00:27:10,570 --> 00:27:17,620
that's a no from me so so what I'm

539
00:27:15,730 --> 00:27:19,360
looking for is it is it<font color="#E5E5E5"> is a maximum</font>

540
00:27:17,620 --> 00:27:22,929
size of scope to be very clearly

541
00:27:19,360 --> 00:27:24,850
delineated I understand that<font color="#E5E5E5"> before when</font>

542
00:27:22,930 --> 00:27:26,950
we discuss this the working group had

543
00:27:24,850 --> 00:27:30,969
consensus that it would be etl<font color="#CCCCCC"> D plus</font><font color="#E5E5E5"> 1</font>

544
00:27:26,950 --> 00:27:38,650
<font color="#E5E5E5">as a maximum and if we're not there now</font>

545
00:27:30,970 --> 00:27:41,380
worshiping Shirley's fix that Brian

546
00:27:38,650 --> 00:27:46,770
Campbell paying it so the etl D plus 1

547
00:27:41,380 --> 00:27:49,810
is is a must<font color="#E5E5E5"> Maxim for web browsers be I</font>

548
00:27:46,770 --> 00:27:51,820
would it's come up a few times<font color="#E5E5E5"> on the</font>

549
00:27:49,810 --> 00:27:55,659
wording is very confusing but the intent

550
00:27:51,820 --> 00:27:58,030
as I understand it is that<font color="#CCCCCC"> a broader</font>

551
00:27:55,660 --> 00:28:01,060
scoping is permitted for other

552
00:27:58,030 --> 00:28:03,520
applications which use<font color="#E5E5E5"> HTTPS such as Oh</font>

553
00:28:01,060 --> 00:28:06,010
off oh that how<font color="#CCCCCC"> that shakes out is still</font>

554
00:28:03,520 --> 00:28:08,230
a little unclear<font color="#CCCCCC"> that that's the intent</font>

555
00:28:06,010 --> 00:28:09,850
to allow that the touch could maybe be

556
00:28:08,230 --> 00:28:12,250
improved yeah there's actually another

557
00:28:09,850 --> 00:28:14,409
part that I can read you Daphne<font color="#E5E5E5"> ha which</font>

558
00:28:12,250 --> 00:28:16,630
says that applications other than web

559
00:28:14,410 --> 00:28:24,550
browsers it may use different key<font color="#CCCCCC"> pair</font>

560
00:28:16,630 --> 00:28:26,110
<font color="#CCCCCC">scoping rules sorry the intent and I do</font>

561
00:28:24,550 --> 00:28:28,000
think<font color="#CCCCCC"> that text is pretty clear about</font>

562
00:28:26,110 --> 00:28:30,550
this is that that for web browsers

563
00:28:28,000 --> 00:28:32,140
standard web browsers<font color="#E5E5E5"> it's etl</font><font color="#CCCCCC"> d+ long</font>

564
00:28:30,550 --> 00:28:33,760
period it can never go broader than that

565
00:28:32,140 --> 00:28:38,080
and certainly that's<font color="#CCCCCC"> housed them</font>

566
00:28:33,760 --> 00:28:39,820
implemented<font color="#E5E5E5"> I think and drape ahold</font>

567
00:28:38,080 --> 00:28:42,010
<font color="#E5E5E5">microsoft just confirming that this this</font>

568
00:28:39,820 --> 00:28:44,169
is indeed the case so so<font color="#CCCCCC"> originally we</font>

569
00:28:42,010 --> 00:28:46,300
were going to say it's must you know

570
00:28:44,170 --> 00:28:48,220
that this is the scope and you cannot be

571
00:28:46,300 --> 00:28:49,750
broader than that and then the point was

572
00:28:48,220 --> 00:28:51,430
brought up that in some application

573
00:28:49,750 --> 00:28:53,309
domains there is inherent knowledge in

574
00:28:51,430 --> 00:28:56,159
the client of certain domains

575
00:28:53,309 --> 00:28:58,110
should be you know the<font color="#CCCCCC"> unlink ability</font>

576
00:28:56,159 --> 00:28:59,700
problem does not apply in some domains

577
00:28:58,110 --> 00:29:12,899
basically that's why we kinda made it

578
00:28:59,700 --> 00:29:15,029
issued yeah hi Jeff Hodges um one could

579
00:29:12,899 --> 00:29:20,549
argue that we may want to document

580
00:29:15,029 --> 00:29:22,919
design<font color="#E5E5E5"> rationale on this point so Martin</font>

581
00:29:20,549 --> 00:29:24,600
let me ask you<font color="#E5E5E5"> this if you do believe</font>

582
00:29:22,919 --> 00:29:29,580
that there is language to<font color="#E5E5E5"> be clarified</font>

583
00:29:24,600 --> 00:29:33,029
<font color="#E5E5E5">such that your your sort of issue</font><font color="#CCCCCC"> um you</font>

584
00:29:29,580 --> 00:29:34,949
disappear effectively disappears or or

585
00:29:33,029 --> 00:29:37,499
is there is there some way<font color="#CCCCCC"> for you to</font>

586
00:29:34,950 --> 00:29:40,230
sort of formulate your your issue in a

587
00:29:37,499 --> 00:29:43,080
and the complex<font color="#CCCCCC"> logistic after many</font>

588
00:29:40,230 --> 00:29:45,450
<font color="#CCCCCC">concentric so not insulting the reason I</font>

589
00:29:43,080 --> 00:29:48,119
<font color="#E5E5E5">raised this issue is it's an</font>

590
00:29:45,450 --> 00:29:49,710
architectural one where we<font color="#CCCCCC"> are</font>

591
00:29:48,119 --> 00:29:53,820
continuing to build things on top of

592
00:29:49,710 --> 00:29:55,799
cookies that a terrible I mean cookies

593
00:29:53,820 --> 00:29:59,269
are terrible and now this is another

594
00:29:55,799 --> 00:30:01,889
thing that will will span origins

595
00:29:59,269 --> 00:30:04,860
undermine the origin isolation that we

596
00:30:01,889 --> 00:30:06,990
have allow for all<font color="#E5E5E5"> sorts of interesting</font>

597
00:30:04,860 --> 00:30:09,600
corner cases and we have to<font color="#E5E5E5"> continue to</font>

598
00:30:06,990 --> 00:30:11,490
maintain things like the public suffix

599
00:30:09,600 --> 00:30:13,439
list and all sorts of other mechanisms

600
00:30:11,490 --> 00:30:15,619
that we use to actually determine what a

601
00:30:13,440 --> 00:30:19,980
tid til the plus one actually is very

602
00:30:15,619 --> 00:30:22,820
poorly defined by the way and very hard

603
00:30:19,980 --> 00:30:25,889
to it's a it's a huge maintenance hazard

604
00:30:22,820 --> 00:30:27,450
so my preference would be that all new

605
00:30:25,889 --> 00:30:28,529
specifications actually used origin

606
00:30:27,450 --> 00:30:29,879
because we actually understand what that

607
00:30:28,529 --> 00:30:32,610
means it aligns with the security

608
00:30:29,879 --> 00:30:35,189
boundaries on the web and it's<font color="#E5E5E5"> pretty</font>

609
00:30:32,610 --> 00:30:36,899
straightforward but<font color="#E5E5E5"> I understand that we</font>

610
00:30:35,190 --> 00:30:39,690
<font color="#CCCCCC">have cookies here and</font><font color="#E5E5E5"> will actually</font><font color="#CCCCCC"> want</font>

611
00:30:36,899 --> 00:30:40,949
<font color="#CCCCCC">to protect cookies so I appreciate the</font>

612
00:30:39,690 --> 00:30:43,080
position that people are taken on<font color="#E5E5E5"> this</font>

613
00:30:40,950 --> 00:30:44,789
one it's just<font color="#E5E5E5"> that I wanted</font><font color="#CCCCCC"> to make sure</font>

614
00:30:43,080 --> 00:30:46,168
that<font color="#CCCCCC"> we had a discussion about</font><font color="#E5E5E5"> it and we</font>

615
00:30:44,789 --> 00:30:48,480
had a discussion about<font color="#E5E5E5"> it I think that's</font>

616
00:30:46,169 --> 00:30:50,159
and when water bears consensus so that's

617
00:30:48,480 --> 00:30:53,100
one one possible outcome of this

618
00:30:50,159 --> 00:30:54,690
actually<font color="#E5E5E5"> clarifies on language I if</font>

619
00:30:53,100 --> 00:30:57,570
there is a national language that<font color="#E5E5E5"> could</font>

620
00:30:54,690 --> 00:31:00,179
be i think that actually doing is<font color="#CCCCCC"> jeff</font>

621
00:30:57,570 --> 00:31:02,990
suggested and saying we're doing this we

622
00:31:00,179 --> 00:31:06,720
understand that is bad but its necessary

623
00:31:02,990 --> 00:31:08,760
to to protect<font color="#E5E5E5"> cookies</font>

624
00:31:06,720 --> 00:31:11,400
because cookies are bad and maybe<font color="#E5E5E5"> this</font>

625
00:31:08,760 --> 00:31:12,299
might cook is somewhat less bad<font color="#CCCCCC"> it's</font>

626
00:31:11,400 --> 00:31:16,080
probably<font color="#CCCCCC"> something that</font><font color="#E5E5E5"> would be</font>

627
00:31:12,299 --> 00:31:17,789
reasonable to put in a document and fix

628
00:31:16,080 --> 00:31:20,610
the<font color="#E5E5E5"> should can at the</font><font color="#CCCCCC"> same time I</font>

629
00:31:17,789 --> 00:31:22,320
suggest<font color="#CCCCCC"> that you and your marking that</font>

630
00:31:20,610 --> 00:31:23,399
you sort<font color="#E5E5E5"> of city you'd go off and a</font>

631
00:31:22,320 --> 00:31:25,710
harder then come back<font color="#CCCCCC"> with a pull</font>

632
00:31:23,400 --> 00:31:30,600
request against the<font color="#E5E5E5"> suit of those back</font>

633
00:31:25,710 --> 00:31:32,820
to the SUV<font color="#E5E5E5"> aspect yeah very very clearly</font>

634
00:31:30,600 --> 00:31:36,000
i mean the the core specification is

635
00:31:32,820 --> 00:31:38,520
very precise on this one and what Andre

636
00:31:36,000 --> 00:31:41,070
said earlier is fine it was the HTTP

637
00:31:38,520 --> 00:31:46,350
aspect that it needs<font color="#CCCCCC"> the small toy</font><font color="#E5E5E5"> right</font>

638
00:31:41,070 --> 00:31:50,158
so so just to clarify the notion browser

639
00:31:46,350 --> 00:31:54,030
use of token binding with<font color="#E5E5E5"> HTTPS where</font>

640
00:31:50,159 --> 00:31:57,600
your binding it to a token which is used

641
00:31:54,030 --> 00:32:00,780
across multiple endpoints in the case

642
00:31:57,600 --> 00:32:02,610
where you were you using HTTPS and and

643
00:32:00,780 --> 00:32:03,809
as you're driving it through an API and

644
00:32:02,610 --> 00:32:05,129
you're not<font color="#E5E5E5"> operating inside a web</font>

645
00:32:03,809 --> 00:32:07,950
browser and your understand who you're

646
00:32:05,130 --> 00:32:10,470
talking to and you want to maintain some

647
00:32:07,950 --> 00:32:12,289
<font color="#E5E5E5">some sort of consistent identity because</font>

648
00:32:10,470 --> 00:32:14,970
you have a token that's shared across

649
00:32:12,289 --> 00:32:16,169
disparate set of servers then fine do

650
00:32:14,970 --> 00:32:17,490
whatever you want to do and I<font color="#CCCCCC"> think the</font>

651
00:32:16,169 --> 00:32:20,970
specification is pretty clear on that

652
00:32:17,490 --> 00:32:22,470
one<font color="#E5E5E5"> not retain the maii that the</font><font color="#CCCCCC"> Prime</font>

653
00:32:20,970 --> 00:32:24,570
is talking about<font color="#E5E5E5"> and then it's</font><font color="#CCCCCC"> gone</font>

654
00:32:22,470 --> 00:32:26,730
right so you're not objecting to that

655
00:32:24,570 --> 00:32:29,370
should but you want to make sure<font color="#CCCCCC"> that in</font>

656
00:32:26,730 --> 00:32:31,919
the web browser case that the scoping is

657
00:32:29,370 --> 00:32:34,500
no broader than<font color="#E5E5E5"> EPL be +1 right right</font>

658
00:32:31,919 --> 00:32:37,799
side<font color="#E5E5E5"> I think that we're all clear on</font>

659
00:32:34,500 --> 00:32:39,539
that just and properly explained<font color="#E5E5E5"> I think</font>

660
00:32:37,799 --> 00:32:41,129
<font color="#E5E5E5">that is is the reason because I think</font>

661
00:32:39,539 --> 00:32:44,220
<font color="#E5E5E5">one of the things that browsers may</font>

662
00:32:41,130 --> 00:32:45,390
ultimately do here is play with<font color="#CCCCCC"> the</font>

663
00:32:44,220 --> 00:32:48,059
scoping rules of cookies<font color="#E5E5E5"> and</font>

664
00:32:45,390 --> 00:32:49,890
understanding that this the scoping

665
00:32:48,059 --> 00:32:51,809
rules here I meant to align with the

666
00:32:49,890 --> 00:32:53,429
scoping rules of cookies means that when

667
00:32:51,809 --> 00:32:55,620
they play<font color="#E5E5E5"> with cookies they should also</font>

668
00:32:53,429 --> 00:32:59,850
be playing with the scoping rules of

669
00:32:55,620 --> 00:33:02,370
these tokens so ideally<font color="#CCCCCC"> if you fill</font><font color="#E5E5E5"> the</font>

670
00:32:59,850 --> 00:33:06,270
cookie more narrowly the token binding

671
00:33:02,370 --> 00:33:07,590
ought to be scope as narrowly and it so

672
00:33:06,270 --> 00:33:10,610
happens that we do these sorts of things

673
00:33:07,590 --> 00:33:12,360
on a regular basis now and so

674
00:33:10,610 --> 00:33:15,270
understanding that would be very<font color="#CCCCCC"> helpful</font>

675
00:33:12,360 --> 00:33:19,740
right I don't<font color="#CCCCCC"> think that's powerful</font>

676
00:33:15,270 --> 00:33:20,590
version i am<font color="#E5E5E5"> very helpful thank you with</font>

677
00:33:19,740 --> 00:33:23,110
that I think<font color="#E5E5E5"> we are</font>

678
00:33:20,590 --> 00:33:27,158
poster what we identified as the list of

679
00:33:23,110 --> 00:33:30,879
issues just<font color="#E5E5E5"> before you what why do you</font>

680
00:33:27,159 --> 00:33:34,029
<font color="#E5E5E5">get to them like um or I just</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to</font>

681
00:33:30,880 --> 00:33:36,250
ask if anybody has to identify anything

682
00:33:34,029 --> 00:33:39,400
else in the law school review that you

683
00:33:36,250 --> 00:33:44,590
believe we haven't covered other than

684
00:33:39,400 --> 00:33:46,840
editorial issues yeah raise it<font color="#CCCCCC"> a little</font>

685
00:33:44,590 --> 00:33:50,559
while ago about the ramifications of

686
00:33:46,840 --> 00:33:52,709
allowing for longer EK m values which

687
00:33:50,559 --> 00:33:56,260
generated a little bit of discussion

688
00:33:52,710 --> 00:33:58,059
<font color="#CCCCCC">that felt like maybe it was tending</font>

689
00:33:56,260 --> 00:34:00,940
towards no let's go back to<font color="#E5E5E5"> just having</font>

690
00:33:58,059 --> 00:34:02,620
<font color="#E5E5E5">a fixed 32 x 80 km that's signed over</font>

691
00:34:00,940 --> 00:34:05,529
all the<font color="#CCCCCC"> time but kind</font><font color="#E5E5E5"> of it's sort of</font>

692
00:34:02,620 --> 00:34:10,000
trailed off and wasn't um didn't come to

693
00:34:05,529 --> 00:34:12,909
any clear consensus of those aware of so

694
00:34:10,000 --> 00:34:18,760
<font color="#CCCCCC">i I'd love</font><font color="#E5E5E5"> to get to an answer one way</font>

695
00:34:12,909 --> 00:34:22,000
or the other or not and drape over

696
00:34:18,760 --> 00:34:24,940
<font color="#E5E5E5">Microsoft so I would just like to to try</font>

697
00:34:22,000 --> 00:34:27,129
<font color="#E5E5E5">to explain the issue again over km right</font>

698
00:34:24,940 --> 00:34:29,020
in the history of that so originally in

699
00:34:27,129 --> 00:34:31,239
our token bindings<font color="#E5E5E5"> pack we said that the</font>

700
00:34:29,020 --> 00:34:33,339
<font color="#CCCCCC">ekm will always be 32 bytes for token</font>

701
00:34:31,239 --> 00:34:34,779
binding protocol version<font color="#E5E5E5"> one you know</font>

702
00:34:33,339 --> 00:34:36,219
one once you<font color="#CCCCCC"> have a new version you</font>

703
00:34:34,780 --> 00:34:38,649
could have a different<font color="#CCCCCC"> 2 km but</font>

704
00:34:36,219 --> 00:34:40,118
<font color="#E5E5E5">basically it was fixed then an argument</font>

705
00:34:38,649 --> 00:34:42,368
was brought up<font color="#CCCCCC"> in this working group</font>

706
00:34:40,119 --> 00:34:44,849
saying that you know why don't we make

707
00:34:42,369 --> 00:34:47,919
the length of the km dependent on the

708
00:34:44,849 --> 00:34:50,889
type of the token binding key right so

709
00:34:47,918 --> 00:34:52,540
if you if you add a new algorithm and

710
00:34:50,889 --> 00:34:56,379
using the shelter in for example<font color="#CCCCCC"> in your</font>

711
00:34:52,540 --> 00:34:59,320
signature scheme then you can use a m EK

712
00:34:56,379 --> 00:35:01,720
m of a different length that was that

713
00:34:59,320 --> 00:35:03,160
<font color="#CCCCCC">was</font><font color="#E5E5E5"> the argument and we did that we said</font>

714
00:35:01,720 --> 00:35:04,990
that you know for<font color="#E5E5E5"> further currently</font>

715
00:35:03,160 --> 00:35:07,779
defined token binding key types we will

716
00:35:04,990 --> 00:35:09,459
be using 32 by<font color="#E5E5E5"> tpms in the future this</font>

717
00:35:07,780 --> 00:35:12,849
may change with a new definition of<font color="#E5E5E5"> the</font>

718
00:35:09,460 --> 00:35:15,369
token vanity type now it is<font color="#E5E5E5"> a valid</font>

719
00:35:12,849 --> 00:35:17,290
point that this creates issues for

720
00:35:15,369 --> 00:35:22,510
example when there is a tale as

721
00:35:17,290 --> 00:35:26,259
Terminator which basically forwards the

722
00:35:22,510 --> 00:35:29,109
token binding message and the EK m to

723
00:35:26,260 --> 00:35:31,510
some back-end server for verification in

724
00:35:29,109 --> 00:35:34,020
this case you<font color="#CCCCCC"> know the without knowing</font>

725
00:35:31,510 --> 00:35:35,850
without the TLS terminator

726
00:35:34,020 --> 00:35:37,800
<font color="#CCCCCC">doing all the possible to combining key</font>

727
00:35:35,850 --> 00:35:39,870
types they don't necessarily have the

728
00:35:37,800 --> 00:35:42,600
ability to generate all the necessary

729
00:35:39,870 --> 00:35:44,910
KMS to be forwarded to the<font color="#CCCCCC"> backend</font>

730
00:35:42,600 --> 00:35:46,770
server for variation so so there is this

731
00:35:44,910 --> 00:35:48,240
this little<font color="#CCCCCC"> bit of a corner case but</font>

732
00:35:46,770 --> 00:35:51,690
it's an<font color="#CCCCCC"> interesting kind of issue to</font>

733
00:35:48,240 --> 00:35:53,430
discuss and you know in principally in

734
00:35:51,690 --> 00:35:55,680
principle our choices are to go back to

735
00:35:53,430 --> 00:35:58,140
say you know<font color="#E5E5E5"> the token binding 10 you</font>

736
00:35:55,680 --> 00:36:00,060
always have a third to buy tqm ekm and

737
00:35:58,140 --> 00:36:01,940
if you want<font color="#E5E5E5"> something else you know then</font>

738
00:36:00,060 --> 00:36:05,120
you need a new token by an inversion or

739
00:36:01,940 --> 00:36:08,580
we can say<font color="#CCCCCC"> that for example you know the</font>

740
00:36:05,120 --> 00:36:10,500
dtls Terminator is going to generate the

741
00:36:08,580 --> 00:36:12,420
key<font color="#E5E5E5"> ends of various lengths and put them</font>

742
00:36:10,500 --> 00:36:14,190
all in that message<font color="#CCCCCC"> that is getting</font>

743
00:36:12,420 --> 00:36:18,630
forwarded to the backend<font color="#CCCCCC"> server for</font>

744
00:36:14,190 --> 00:36:20,040
verification so I therapist<font color="#E5E5E5"> roller so I</font>

745
00:36:18,630 --> 00:36:21,690
apologize<font color="#E5E5E5"> for having this the</font>

746
00:36:20,040 --> 00:36:24,390
conversation earlier but why would you

747
00:36:21,690 --> 00:36:31,140
<font color="#CCCCCC">want a longer ekm for some others energy</font>

748
00:36:24,390 --> 00:36:33,180
scheme more bits basically<font color="#E5E5E5"> but the the</font>

749
00:36:31,140 --> 00:36:35,660
<font color="#CCCCCC">argument was that the signature schemes</font>

750
00:36:33,180 --> 00:36:37,649
to find now have a strength that's

751
00:36:35,660 --> 00:36:39,299
somewhat equivalent to being able to

752
00:36:37,650 --> 00:36:43,160
sign over 32 bits and that there might

753
00:36:39,300 --> 00:36:45,930
be one in<font color="#E5E5E5"> the future that in order to</font>

754
00:36:43,160 --> 00:36:49,350
bytes not bits that practically the same

755
00:36:45,930 --> 00:36:51,359
right<font color="#E5E5E5"> um there might be a signature</font>

756
00:36:49,350 --> 00:36:54,240
scheme defined as a key parameter type

757
00:36:51,360 --> 00:36:56,730
in the future that that needs a longer

758
00:36:54,240 --> 00:36:59,390
input into this what's being signed over

759
00:36:56,730 --> 00:37:02,280
in order to achieve its full strength

760
00:36:59,390 --> 00:37:03,509
and I I was actually the one<font color="#E5E5E5"> that made</font>

761
00:37:02,280 --> 00:37:05,580
the argument and so although there was

762
00:37:03,510 --> 00:37:07,890
less of<font color="#CCCCCC"> an argument in more of</font><font color="#E5E5E5"> it should</font>

763
00:37:05,580 --> 00:37:09,990
we maybe consider this um and that I

764
00:37:07,890 --> 00:37:14,400
<font color="#E5E5E5">think we're practically speaking there's</font>

765
00:37:09,990 --> 00:37:16,229
there's not there aren't algorithms

766
00:37:14,400 --> 00:37:18,780
known or likely to be<font color="#CCCCCC"> adopted here that</font>

767
00:37:16,230 --> 00:37:20,910
require that um so we are I<font color="#E5E5E5"> think the</font>

768
00:37:18,780 --> 00:37:23,160
discussion<font color="#E5E5E5"> on the list was that the next</font>

769
00:37:20,910 --> 00:37:25,490
round<font color="#E5E5E5"> of algorithms would be perfectly</font>

770
00:37:23,160 --> 00:37:28,740
well matched with the 32 bike yeah

771
00:37:25,490 --> 00:37:33,479
that's amore Masterson at some point

772
00:37:28,740 --> 00:37:36,470
beyond the next round of algorithms you

773
00:37:33,480 --> 00:37:40,110
might want hypothetically want a larger

774
00:37:36,470 --> 00:37:42,419
ekm but that seemed in the discussion<font color="#E5E5E5"> on</font>

775
00:37:40,110 --> 00:37:47,880
the list to<font color="#CCCCCC"> be fair I pathetically</font>

776
00:37:42,420 --> 00:37:49,079
extremely hypothetical yeah yeah I'm sky

777
00:37:47,880 --> 00:37:53,279
draw that point it's worth noting that

778
00:37:49,079 --> 00:37:54,660
beast in TLS the the underlying entropy

779
00:37:53,279 --> 00:37:57,200
is tied to the strike that the hash

780
00:37:54,660 --> 00:37:59,910
function<font color="#CCCCCC"> which are using for HK DF so</font>

781
00:37:57,200 --> 00:38:01,828
unless you're also using Shaw 3d for you

782
00:37:59,910 --> 00:38:07,980
you have 3g gets really but bites

783
00:38:01,829 --> 00:38:09,299
whatever on and on so um I'm gonna wear

784
00:38:07,980 --> 00:38:11,309
of any reason why you need<font color="#CCCCCC"> to go larger</font>

785
00:38:09,299 --> 00:38:12,839
than that um if you did you have to tie

786
00:38:11,309 --> 00:38:15,720
it to a<font color="#E5E5E5"> bigger function which tells you</font>

787
00:38:12,839 --> 00:38:19,828
the maximum is<font color="#E5E5E5"> 48</font><font color="#CCCCCC"> our tests on an infra</font>

788
00:38:15,720 --> 00:38:21,990
current version to tell us it is a

789
00:38:19,829 --> 00:38:24,329
decipher sweep but the<font color="#CCCCCC"> but the largest</font>

790
00:38:21,990 --> 00:38:26,250
efforts we currently defined has shot 34

791
00:38:24,329 --> 00:38:28,710
so the biggest<font color="#E5E5E5"> possible and every block</font>

792
00:38:26,250 --> 00:38:32,569
you have and of course<font color="#CCCCCC"> then of course</font>

793
00:38:28,710 --> 00:38:32,569
you also have to be using what I guess

794
00:38:32,779 --> 00:38:36,480
efforts of Mad Max<font color="#CCCCCC"> if it's a match the</font>

795
00:38:34,829 --> 00:38:38,519
secret to<font color="#CCCCCC"> master the security level I</font>

796
00:38:36,480 --> 00:38:41,309
<font color="#E5E5E5">mean do the problem is it like the look</font>

797
00:38:38,519 --> 00:38:44,729
that you have to be<font color="#E5E5E5"> using I mean no</font>

798
00:38:41,309 --> 00:38:47,009
you'd be using on your curve p you

799
00:38:44,730 --> 00:38:49,170
know nine nine hundred or something

800
00:38:47,009 --> 00:38:51,480
because 521 is a fat<font color="#CCCCCC"> w 256-bit that's</font>

801
00:38:49,170 --> 00:38:54,509
right right so as I<font color="#E5E5E5"> said the next round</font>

802
00:38:51,480 --> 00:38:56,549
of algorithms is appropriately<font color="#E5E5E5"> Nash</font><font color="#CCCCCC"> too</font>

803
00:38:54,509 --> 00:38:57,750
yeah I I'm just I'm trying<font color="#CCCCCC"> to think of</font>

804
00:38:56,549 --> 00:38:58,890
any situation where you actually have

805
00:38:57,750 --> 00:39:04,230
more<font color="#E5E5E5"> than turn a few Z's pits and</font>

806
00:38:58,890 --> 00:39:05,670
strength floating around here by the

807
00:39:04,230 --> 00:39:08,160
time we actually have to worry about

808
00:39:05,670 --> 00:39:09,539
that<font color="#E5E5E5"> it's the quantum cryptography that</font>

809
00:39:08,160 --> 00:39:13,680
will have already<font color="#CCCCCC"> bitten s in the ass</font>

810
00:39:09,539 --> 00:39:15,779
you know in all likelihood so so mum

811
00:39:13,680 --> 00:39:19,410
Thompson I have a suggestion here echo

812
00:39:15,779 --> 00:39:21,420
mentioned it<font color="#CCCCCC"> um we can make the EK m as</font>

813
00:39:19,410 --> 00:39:25,308
long as the output<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the hash</font><font color="#CCCCCC"> function</font>

814
00:39:21,420 --> 00:39:28,619
that's the Taylor's paraffin hash and

815
00:39:25,309 --> 00:39:30,119
you avoid<font color="#CCCCCC"> the problem if you have the</font>

816
00:39:28,619 --> 00:39:32,130
entropy then you get the entropy that

817
00:39:30,119 --> 00:39:33,720
you have and if you<font color="#E5E5E5"> don't have the</font>

818
00:39:32,130 --> 00:39:35,730
entropy then you don't get pretty<font color="#E5E5E5"> much</font>

819
00:39:33,720 --> 00:39:39,950
more entropy and then you're in the

820
00:39:35,730 --> 00:39:44,460
situation where you want to go to pee

821
00:39:39,950 --> 00:39:49,288
1342 which is an awesome prime by the

822
00:39:44,460 --> 00:39:52,009
way because<font color="#CCCCCC"> I just made it up then you</font>

823
00:39:49,289 --> 00:39:56,420
then you have to pick a<font color="#E5E5E5"> site this week</font>

824
00:39:52,009 --> 00:40:01,460
that is actually yeah the best prime

825
00:39:56,420 --> 00:40:02,359
unlike to the five 21-1

826
00:40:01,460 --> 00:40:05,839
have to pick<font color="#E5E5E5"> a side this week that</font>

827
00:40:02,359 --> 00:40:07,130
matches the strength of the thing that

828
00:40:05,839 --> 00:40:11,779
you're<font color="#CCCCCC"> looking for and then then we</font><font color="#E5E5E5"> have</font>

829
00:40:07,130 --> 00:40:13,250
a hopefully forward safe way of<font color="#E5E5E5"> dealing</font>

830
00:40:11,780 --> 00:40:15,980
<font color="#CCCCCC">with this one and</font><font color="#E5E5E5"> then we can sort of</font>

831
00:40:13,250 --> 00:40:17,270
just not worry about<font color="#E5E5E5"> having to issue a</font>

832
00:40:15,980 --> 00:40:24,440
new version in their circumstance

833
00:40:17,270 --> 00:40:26,180
hopefully actively bad idea not an

834
00:40:24,440 --> 00:40:28,400
implausibly bad idea sounds like the

835
00:40:26,180 --> 00:40:35,868
best endorsement for any of<font color="#CCCCCC"> my ideas</font>

836
00:40:28,400 --> 00:40:37,400
ever had them mainly google so the<font color="#CCCCCC"> TLS</font>

837
00:40:35,869 --> 00:40:39,530
<font color="#CCCCCC">Terminator</font><font color="#E5E5E5"> is now forwarding on the</font>

838
00:40:37,400 --> 00:40:50,869
cipher suite it used to the back end so

839
00:40:39,530 --> 00:40:57,800
in those furnace so does anyone<font color="#E5E5E5"> want to</font>

840
00:40:50,869 --> 00:40:59,570
express what the consequence would be so

841
00:40:57,800 --> 00:41:00,710
so to be clear that<font color="#CCCCCC"> the consequence of</font>

842
00:40:59,570 --> 00:41:04,190
this change for people who are

843
00:41:00,710 --> 00:41:06,980
negotiating a yes GCM with<font color="#E5E5E5"> charge of 56</font>

844
00:41:04,190 --> 00:41:10,190
is nothing and for<font color="#E5E5E5"> those people</font><font color="#CCCCCC"> who</font>

845
00:41:06,980 --> 00:41:13,580
<font color="#CCCCCC">happen to be</font><font color="#E5E5E5"> using AES 256 with the</font>

846
00:41:10,190 --> 00:41:15,290
shell 380 fours and all that and I<font color="#E5E5E5"> think</font>

847
00:41:13,580 --> 00:41:16,520
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> probably one of the only and</font>

848
00:41:15,290 --> 00:41:19,580
<font color="#E5E5E5">psycho suites that we</font><font color="#CCCCCC"> actually have</font>

849
00:41:16,520 --> 00:41:21,589
that's got the wider hash those<font color="#E5E5E5"> people</font>

850
00:41:19,580 --> 00:41:23,060
would<font color="#E5E5E5"> be affected that would be using a</font>

851
00:41:21,589 --> 00:41:25,670
larger he came and so it would be

852
00:41:23,060 --> 00:41:29,830
incompatible so<font color="#E5E5E5"> people are routinely</font>

853
00:41:25,670 --> 00:41:29,830
negotiating those things it would break

854
00:41:30,609 --> 00:41:35,690
that is that is a problem that may need

855
00:41:33,530 --> 00:41:38,780
it I don't know what you<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> do</font>

856
00:41:35,690 --> 00:41:44,599
about<font color="#E5E5E5"> it but I mean you</font><font color="#CCCCCC"> could pick a new</font>

857
00:41:38,780 --> 00:41:47,260
extension<font color="#CCCCCC"> number and reverb or Microsoft</font>

858
00:41:44,599 --> 00:41:51,440
so this does not sound like a bad idea

859
00:41:47,260 --> 00:41:53,510
there are few a lot exactly there are a

860
00:41:51,440 --> 00:41:56,480
few potential like implications from

861
00:41:53,510 --> 00:41:58,250
this right so one implication is it

862
00:41:56,480 --> 00:42:02,290
would mean that the the token binding

863
00:41:58,250 --> 00:42:04,520
protocol<font color="#E5E5E5"> specification has this you know</font>

864
00:42:02,290 --> 00:42:06,290
<font color="#E5E5E5">it means that</font><font color="#CCCCCC"> you know whoever</font>

865
00:42:04,520 --> 00:42:07,880
implements this make if you did this

866
00:42:06,290 --> 00:42:10,880
change right whoever implements needs to

867
00:42:07,880 --> 00:42:13,190
figure out what cipher suite was

868
00:42:10,880 --> 00:42:15,079
negotiated right and request an ATM of

869
00:42:13,190 --> 00:42:18,650
that length

870
00:42:15,079 --> 00:42:21,109
that's that's an extra<font color="#E5E5E5"> kind of question</font>

871
00:42:18,650 --> 00:42:22,549
for<font color="#E5E5E5"> Lee for the</font><font color="#CCCCCC"> TLS layer I think</font><font color="#E5E5E5"> that</font>

872
00:42:21,109 --> 00:42:26,049
most the less implementation support

873
00:42:22,549 --> 00:42:31,700
this so it<font color="#E5E5E5"> can be done in principle</font>

874
00:42:26,049 --> 00:42:33,229
another thing is<font color="#CCCCCC"> that yeah</font><font color="#E5E5E5"> I guess we</font>

875
00:42:31,700 --> 00:42:35,180
could do I think it's a possible

876
00:42:33,229 --> 00:42:37,640
solution yeah just a just a process

877
00:42:35,180 --> 00:42:39,950
thing I you know the chairs sort of do

878
00:42:37,640 --> 00:42:42,828
it get a quick coupler and we both feel

879
00:42:39,950 --> 00:42:46,569
<font color="#CCCCCC">that if we</font><font color="#E5E5E5"> do this it's sort of a it's</font>

880
00:42:42,829 --> 00:42:50,479
it's more than just clarification and

881
00:42:46,569 --> 00:42:53,029
and you know an editorial and that would

882
00:42:50,479 --> 00:42:54,828
<font color="#CCCCCC">probably require us to do a quick but</font>

883
00:42:53,029 --> 00:42:56,690
still another love working with law

884
00:42:54,829 --> 00:43:01,729
school make sure everybody think it's

885
00:42:56,690 --> 00:43:03,920
worth<font color="#E5E5E5"> it because good really know yeah</font>

886
00:43:01,729 --> 00:43:05,569
you absolutely do a one week or if

887
00:43:03,920 --> 00:43:08,180
that's cold but still you know we're

888
00:43:05,569 --> 00:43:14,109
<font color="#E5E5E5">gonna we're gonna do that don't intend</font>

889
00:43:08,180 --> 00:43:17,058
to just actually<font color="#E5E5E5"> get it for free it not</font>

890
00:43:14,109 --> 00:43:18,979
been kada<font color="#CCCCCC"> canyon just noting that this</font>

891
00:43:17,059 --> 00:43:20,299
idea<font color="#E5E5E5"> generally seems reasonable as we</font>

892
00:43:18,979 --> 00:43:22,129
bring it up right now in the abstract

893
00:43:20,299 --> 00:43:23,959
and<font color="#CCCCCC"> the only concern I would have that's</font>

894
00:43:22,130 --> 00:43:25,969
<font color="#E5E5E5">not obvious right in the room is</font><font color="#CCCCCC"> just as</font>

895
00:43:23,959 --> 00:43:27,680
Andre sort of talking about how is the

896
00:43:25,969 --> 00:43:29,930
plumbing in a work to actually get<font color="#CCCCCC"> the</font>

897
00:43:27,680 --> 00:43:31,489
information to<font color="#E5E5E5"> where it needs to be so</font>

898
00:43:29,930 --> 00:43:34,910
<font color="#CCCCCC">hopefully someone will think about that</font>

899
00:43:31,489 --> 00:43:36,890
harder in the next day or two yep you

900
00:43:34,910 --> 00:43:39,799
know Adam it's<font color="#E5E5E5"> on the cue enough that up</font>

901
00:43:36,890 --> 00:43:41,469
I'm is gonna oh I<font color="#E5E5E5"> just wanted to stand</font>

902
00:43:39,799 --> 00:43:43,880
up and<font color="#E5E5E5"> say I think it's a bad idea</font>

903
00:43:41,469 --> 00:43:45,799
because someone should stand<font color="#E5E5E5"> up and say</font>

904
00:43:43,880 --> 00:43:48,709
its excess complexity for no particular

905
00:43:45,799 --> 00:43:52,059
reason because 256 bits even if you're

906
00:43:48,709 --> 00:43:54,319
<font color="#E5E5E5">worried about collisions like 128 bits</font>

907
00:43:52,059 --> 00:43:57,219
<font color="#E5E5E5">228 different connections necessary</font>

908
00:43:54,319 --> 00:44:02,509
<font color="#CCCCCC">generated collision in</font><font color="#E5E5E5"> this space I</font>

909
00:43:57,219 --> 00:44:04,459
would say keep<font color="#E5E5E5"> it simple for it's worth</font>

910
00:44:02,509 --> 00:44:05,900
I agree that<font color="#E5E5E5"> them I mean I'm not</font><font color="#CCCCCC"> going</font>

911
00:44:04,459 --> 00:44:12,640
<font color="#CCCCCC">to like pitch a fit here but i agree</font>

912
00:44:05,900 --> 00:44:14,989
<font color="#CCCCCC">adam second or third dog agree mother</font>

913
00:44:12,640 --> 00:44:16,549
<font color="#E5E5E5">andre before microsoft i also think it</font>

914
00:44:14,989 --> 00:44:23,089
would be easier<font color="#CCCCCC"> to just you know go back</font>

915
00:44:16,549 --> 00:44:26,329
to saying 32 bytes and that's it or<font color="#E5E5E5"> i</font>

916
00:44:23,089 --> 00:44:28,610
guess the other thing<font color="#E5E5E5"> would be to keep</font>

917
00:44:26,329 --> 00:44:31,160
it the way it is but<font color="#E5E5E5"> just</font><font color="#CCCCCC"> tell me</font>

918
00:44:28,610 --> 00:44:35,450
rhythms to keep using 32 bits and then

919
00:44:31,160 --> 00:44:39,200
<font color="#CCCCCC">work you can have whatever outcome you</font>

920
00:44:35,450 --> 00:44:42,220
want but it's<font color="#CCCCCC"> at 32 bit EK m high so i</font>

921
00:44:39,200 --> 00:44:47,600
think we should<font color="#CCCCCC"> do</font><font color="#E5E5E5"> it a few hums here</font>

922
00:44:42,220 --> 00:44:49,100
let's see do a storm an humblest and

923
00:44:47,600 --> 00:44:50,870
then<font color="#E5E5E5"> people can complain about that and</font>

924
00:44:49,100 --> 00:44:55,460
then we can do the actual home so the

925
00:44:50,870 --> 00:44:58,730
one question would be if<font color="#E5E5E5"> you support</font>

926
00:44:55,460 --> 00:45:03,670
going<font color="#E5E5E5"> back</font><font color="#CCCCCC"> to 32-bit date pecans right</font>

927
00:44:58,730 --> 00:45:03,670
now that's one change the other change

928
00:45:03,940 --> 00:45:09,440
for this version absolutely we're we're

929
00:45:07,280 --> 00:45:11,270
<font color="#CCCCCC">not committing any you</font><font color="#E5E5E5"> know future</font>

930
00:45:09,440 --> 00:45:13,850
versions of the protocol right to

931
00:45:11,270 --> 00:45:17,240
anything and you're allowed to change<font color="#CCCCCC"> hi</font>

932
00:45:13,850 --> 00:45:20,960
<font color="#CCCCCC">test text with the you know the right</font>

933
00:45:17,240 --> 00:45:23,689
amount of arguing so the the other

934
00:45:20,960 --> 00:45:25,520
approach would be to you know make no

935
00:45:23,690 --> 00:45:27,440
change and clarify that if you actually

936
00:45:25,520 --> 00:45:30,490
run into this problem you'd have to

937
00:45:27,440 --> 00:45:33,260
change retrospect that's another option

938
00:45:30,490 --> 00:45:36,080
and the third option is to make it<font color="#CCCCCC"> the</font>

939
00:45:33,260 --> 00:45:38,300
size of the hash<font color="#CCCCCC"> function and so that's</font>

940
00:45:36,080 --> 00:45:41,960
a breaking change but<font color="#CCCCCC"> he'll that's the</font>

941
00:45:38,300 --> 00:45:43,850
third option right anybody anybody think

942
00:45:41,960 --> 00:45:49,430
of other options other questions we

943
00:45:43,850 --> 00:45:50,600
should ask<font color="#CCCCCC"> Steve I'm sure you're going</font>

944
00:45:49,430 --> 00:45:54,620
<font color="#E5E5E5">to do it anyway but maybe don't ask</font>

945
00:45:50,600 --> 00:45:57,740
about 32 bits<font color="#E5E5E5"> but 32 bytes yeah it's</font>

946
00:45:54,620 --> 00:46:03,560
it's now it's it's it's now a<font color="#E5E5E5"> Freudian</font>

947
00:45:57,740 --> 00:46:08,270
thing all right<font color="#CCCCCC"> okay so let's start with</font>

948
00:46:03,560 --> 00:46:14,240
go back to 32 580 km if you support

949
00:46:08,270 --> 00:46:17,090
<font color="#E5E5E5">making that change please hum now</font><font color="#CCCCCC"> all</font>

950
00:46:14,240 --> 00:46:18,939
<font color="#CCCCCC">right next question it is</font><font color="#E5E5E5"> support making</font>

951
00:46:17,090 --> 00:46:21,800
<font color="#E5E5E5">no change other than a clarification</font>

952
00:46:18,940 --> 00:46:23,420
saying that this sort<font color="#E5E5E5"> of is something</font>

953
00:46:21,800 --> 00:46:26,360
you will need to the protocol<font color="#E5E5E5"> no need to</font>

954
00:46:23,420 --> 00:46:33,370
revisit if it if it becomes necessary in

955
00:46:26,360 --> 00:46:37,060
the<font color="#E5E5E5"> future</font><font color="#CCCCCC"> please hum now all right and</font>

956
00:46:33,370 --> 00:46:39,910
third option make the breaking change to

957
00:46:37,060 --> 00:46:44,730
make the size of the<font color="#CCCCCC"> e km dependent on</font>

958
00:46:39,910 --> 00:46:47,680
the size of the hash function<font color="#CCCCCC"> is um now</font>

959
00:46:44,730 --> 00:46:53,650
all right it's pretty<font color="#E5E5E5"> clear consensus to</font>

960
00:46:47,680 --> 00:46:58,540
go back to 32 bit EK m all right but<font color="#CCCCCC"> if</font>

961
00:46:53,650 --> 00:47:02,530
<font color="#E5E5E5">you</font><font color="#CCCCCC"> find bite so this is</font><font color="#E5E5E5"> my way this is</font>

962
00:46:58,540 --> 00:47:10,120
now I this is a brilliant thing it will

963
00:47:02,530 --> 00:47:14,050
never go away<font color="#CCCCCC"> alright alright does</font>

964
00:47:10,120 --> 00:47:18,220
anybody have issues other issues that

965
00:47:14,050 --> 00:47:21,670
<font color="#CCCCCC">they want to bring</font><font color="#E5E5E5"> it clarification on</font>

966
00:47:18,220 --> 00:47:23,410
that the only thing there's to change

967
00:47:21,670 --> 00:47:26,320
based on what I<font color="#CCCCCC"> just looked at is to</font>

968
00:47:23,410 --> 00:47:28,990
delete a sentence that<font color="#CCCCCC"> find delete one</font>

969
00:47:26,320 --> 00:47:36,760
sentence that is arguably non-normative

970
00:47:28,990 --> 00:47:39,189
anyways I don't<font color="#E5E5E5"> think we're saying that</font>

971
00:47:36,760 --> 00:47:42,280
that change requires another last call

972
00:47:39,190 --> 00:47:47,950
it would have been the changing it to

973
00:47:42,280 --> 00:47:52,930
match the<font color="#E5E5E5"> prf yeah</font><font color="#CCCCCC"> alright so anybody</font>

974
00:47:47,950 --> 00:47:58,810
else<font color="#CCCCCC"> nope um issues</font><font color="#E5E5E5"> that we hope to</font>

975
00:47:52,930 --> 00:48:00,910
bring<font color="#E5E5E5"> up that they is remembered or not</font>

976
00:47:58,810 --> 00:48:05,020
seeing anybody rush for the mics and<font color="#E5E5E5"> I</font>

977
00:48:00,910 --> 00:48:08,770
think in that case we're ready to do the

978
00:48:05,020 --> 00:48:10,960
following if the<font color="#E5E5E5"> authors could ship</font>

979
00:48:08,770 --> 00:48:13,900
another edition of<font color="#CCCCCC"> their document with</font>

980
00:48:10,960 --> 00:48:16,540
all of these issues<font color="#E5E5E5"> addressed including</font>

981
00:48:13,900 --> 00:48:19,240
editorial<font color="#CCCCCC"> myths that we have discussed</font>

982
00:48:16,540 --> 00:48:25,050
on the list<font color="#E5E5E5"> at that point will shape it</font>

983
00:48:19,240 --> 00:48:25,049
upstairs and hope for the best<font color="#CCCCCC"> alright</font>

984
00:48:25,590 --> 00:48:28,590
agenda

985
00:48:32,400 --> 00:48:41,250
yeah well no we will already be back

986
00:48:36,400 --> 00:48:46,030
<font color="#E5E5E5">there so we got two items on our agenda</font>

987
00:48:41,250 --> 00:48:50,020
left one is<font color="#E5E5E5"> the 0 RT and nick nick is in</font>

988
00:48:46,030 --> 00:48:52,770
the room yes let's<font color="#E5E5E5"> see if I</font><font color="#CCCCCC"> can dig up</font>

989
00:48:50,020 --> 00:48:52,770
those slides

990
00:49:07,310 --> 00:49:10,450
that looks<font color="#E5E5E5"> like</font><font color="#CCCCCC"> it</font>

991
00:49:12,429 --> 00:49:19,699
<font color="#CCCCCC">okay so I'm going to</font><font color="#E5E5E5"> review the changes</font>

992
00:49:16,279 --> 00:49:21,559
in this draft from the 0 0 of<font color="#E5E5E5"> F version</font>

993
00:49:19,699 --> 00:49:23,689
and there are also some discussion

994
00:49:21,559 --> 00:49:27,259
points raised on the mailing list to

995
00:49:23,689 --> 00:49:28,699
cover so<font color="#E5E5E5"> I added some more language to</font>

996
00:49:27,259 --> 00:49:32,569
the security considerations about the

997
00:49:28,699 --> 00:49:35,079
proof of possession or lack thereof and

998
00:49:32,569 --> 00:49:37,609
I'll go<font color="#CCCCCC"> into more details of</font><font color="#E5E5E5"> what that</font>

999
00:49:35,079 --> 00:49:41,029
what we do or don't get with the proof

1000
00:49:37,609 --> 00:49:45,469
of possession with<font color="#CCCCCC"> 02 Tito binding also</font>

1001
00:49:41,029 --> 00:49:47,809
i changed<font color="#E5E5E5"> the client to switch from 0</font>

1002
00:49:45,469 --> 00:49:50,749
rst exporter to the normal exporter

1003
00:49:47,809 --> 00:49:55,149
during the connection<font color="#CCCCCC"> to satisfy</font><font color="#E5E5E5"> some</font>

1004
00:49:50,749 --> 00:49:58,999
concerns about using 0<font color="#E5E5E5"> TT exporter and</font>

1005
00:49:55,149 --> 00:50:00,919
also clarified that when we use the<font color="#CCCCCC"> rhd</font>

1006
00:49:58,999 --> 00:50:02,988
exporter there is a token binding

1007
00:50:00,919 --> 00:50:05,658
extension with that it's just an

1008
00:50:02,989 --> 00:50:07,759
indicator extensions your length data to

1009
00:50:05,659 --> 00:50:10,459
indicate to the server which exporter is

1010
00:50:07,759 --> 00:50:12,769
being used so<font color="#CCCCCC"> that the server does not</font>

1011
00:50:10,459 --> 00:50:16,969
have to do a trial verification of that

1012
00:50:12,769 --> 00:50:19,488
signature so on to the next slide<font color="#E5E5E5"> this</font>

1013
00:50:16,969 --> 00:50:22,849
is an overview<font color="#CCCCCC"> of what a client malware</font>

1014
00:50:19,489 --> 00:50:24,439
attack could look like in TV proto so

1015
00:50:22,849 --> 00:50:27,409
you have the attacker on the left here

1016
00:50:24,439 --> 00:50:30,288
does that LS connection to a server the

1017
00:50:27,409 --> 00:50:32,749
attacker uses their access to<font color="#E5E5E5"> the client</font>

1018
00:50:30,289 --> 00:50:37,069
machine in the center to generate a

1019
00:50:32,749 --> 00:50:41,328
signature of that EK m and then sends

1020
00:50:37,069 --> 00:50:43,759
<font color="#CCCCCC">that the token binding with that</font>

1021
00:50:41,329 --> 00:50:45,619
signature over the connection from the

1022
00:50:43,759 --> 00:50:47,419
attacker to the server with the bound

1023
00:50:45,619 --> 00:50:49,489
token stolen from the client<font color="#E5E5E5"> the key</font>

1024
00:50:47,419 --> 00:50:51,138
<font color="#E5E5E5">point here is that once the connection</font>

1025
00:50:49,489 --> 00:50:53,209
<font color="#E5E5E5">between the attacker and the client has</font>

1026
00:50:51,139 --> 00:50:56,929
been severed the attacker cannot create

1027
00:50:53,209 --> 00:50:58,489
<font color="#CCCCCC">any new connections to the server so at</font>

1028
00:50:56,929 --> 00:51:02,329
the approval of possession in normal

1029
00:50:58,489 --> 00:51:04,849
token binding is that the whoever sent

1030
00:51:02,329 --> 00:51:06,229
the token binding message had possession

1031
00:51:04,849 --> 00:51:07,969
of the private key was able to do

1032
00:51:06,229 --> 00:51:10,519
private key operation at the time<font color="#E5E5E5"> the</font>

1033
00:51:07,969 --> 00:51:13,849
connection was<font color="#E5E5E5"> established so the next</font>

1034
00:51:10,519 --> 00:51:18,109
slide this is what it looks like in<font color="#CCCCCC"> zero</font>

1035
00:51:13,849 --> 00:51:20,389
<font color="#CCCCCC">RTT the attacker can make several TLS</font>

1036
00:51:18,109 --> 00:51:21,739
connections to the server and<font color="#E5E5E5"> get new</font>

1037
00:51:20,389 --> 00:51:24,950
section tickets that can be<font color="#E5E5E5"> used for</font>

1038
00:51:21,739 --> 00:51:30,020
<font color="#E5E5E5">zero RTT then</font>

1039
00:51:24,950 --> 00:51:32,240
and forward requests to<font color="#E5E5E5"> the client and</font>

1040
00:51:30,020 --> 00:51:34,190
generate token binding signatures for

1041
00:51:32,240 --> 00:51:36,410
future connections using this new

1042
00:51:34,190 --> 00:51:39,500
session ticket at a later point in time

1043
00:51:36,410 --> 00:51:41,210
the attacker can now send initiated to

1044
00:51:39,500 --> 00:51:44,270
<font color="#E5E5E5">the US connection as the</font><font color="#CCCCCC"> rxt connection</font>

1045
00:51:41,210 --> 00:51:46,849
<font color="#E5E5E5">and</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> really data include the token</font>

1046
00:51:44,270 --> 00:51:49,220
binding signature over the early

1047
00:51:46,849 --> 00:51:51,170
<font color="#E5E5E5">exporter and all this can be pre</font>

1048
00:51:49,220 --> 00:51:54,649
<font color="#E5E5E5">computed without any input from the</font>

1049
00:51:51,170 --> 00:51:56,060
<font color="#E5E5E5">server so this is why sometimes learning</font>

1050
00:51:54,650 --> 00:51:58,730
is there is a lack of proof of

1051
00:51:56,060 --> 00:52:00,349
possession because<font color="#CCCCCC"> after the attacker</font>

1052
00:51:58,730 --> 00:52:01,910
loses access to the client machine as

1053
00:52:00,349 --> 00:52:03,230
long<font color="#CCCCCC"> as it has a new session ticket i</font>

1054
00:52:01,910 --> 00:52:07,040
was still valid<font color="#E5E5E5"> and went</font><font color="#CCCCCC"> through</font><font color="#E5E5E5"> the</font>

1055
00:52:03,230 --> 00:52:09,170
stamps previously it can<font color="#CCCCCC"> that send a</font>

1056
00:52:07,040 --> 00:52:11,720
token binding signature that is<font color="#CCCCCC"> still</font>

1057
00:52:09,170 --> 00:52:14,240
valid by about<font color="#E5E5E5"> I mean it server can</font>

1058
00:52:11,720 --> 00:52:21,618
verify<font color="#E5E5E5"> it so there's this sort of</font>

1059
00:52:14,240 --> 00:52:24,049
lifetime concern of up to seven days and

1060
00:52:21,619 --> 00:52:25,730
next slide this is just<font color="#E5E5E5"> outlining a</font>

1061
00:52:24,050 --> 00:52:27,530
different possible attack that can be

1062
00:52:25,730 --> 00:52:29,420
done we still have these seven day or

1063
00:52:27,530 --> 00:52:32,030
new session ticket lifetime concern here

1064
00:52:29,420 --> 00:52:35,900
in this case it is the attack are

1065
00:52:32,030 --> 00:52:38,329
actually replaying the token binding

1066
00:52:35,900 --> 00:52:40,670
message and client hello from a previous

1067
00:52:38,329 --> 00:52:44,720
connection in practice this one is

1068
00:52:40,670 --> 00:52:47,359
<font color="#CCCCCC">probably less likely to be workable just</font>

1069
00:52:44,720 --> 00:52:50,810
because it needs to replay that<font color="#E5E5E5"> exact</font>

1070
00:52:47,359 --> 00:52:52,069
message and the server is hopefully

1071
00:52:50,810 --> 00:52:57,578
going to enforce some amount of<font color="#E5E5E5"> life</font>

1072
00:52:52,069 --> 00:53:04,490
<font color="#E5E5E5">time on the ticket age which will be a</font>

1073
00:52:57,579 --> 00:53:06,829
shorter<font color="#E5E5E5"> time period so that's sort of</font>

1074
00:53:04,490 --> 00:53:10,189
the overview on the sort<font color="#E5E5E5"> of proof of</font>

1075
00:53:06,829 --> 00:53:12,760
possession concerns on here<font color="#E5E5E5"> I think even</font>

1076
00:53:10,190 --> 00:53:15,800
with the sort<font color="#E5E5E5"> of seven day time frame</font>

1077
00:53:12,760 --> 00:53:18,950
this sort of form of token binding<font color="#E5E5E5"> that</font>

1078
00:53:15,800 --> 00:53:21,170
has these security concerns is still

1079
00:53:18,950 --> 00:53:23,000
something that<font color="#E5E5E5"> is valuable it is</font>

1080
00:53:21,170 --> 00:53:27,109
especially valuable on<font color="#CCCCCC"> the use cases</font>

1081
00:53:23,000 --> 00:53:28,790
where to<font color="#CCCCCC"> client malware is not in front</font>

1082
00:53:27,109 --> 00:53:31,880
model that's being considered for

1083
00:53:28,790 --> 00:53:33,290
example protecting OAuth tokens from XSS

1084
00:53:31,880 --> 00:53:36,530
there's no client malware involved in

1085
00:53:33,290 --> 00:53:38,840
there so<font color="#CCCCCC"> only the zero RTT replay case</font>

1086
00:53:36,530 --> 00:53:43,400
that is covered<font color="#E5E5E5"> in the TLS 13 spec</font>

1087
00:53:38,840 --> 00:53:45,500
is a concern and<font color="#E5E5E5"> past that as your oxy</font>

1088
00:53:43,400 --> 00:53:55,550
token binding is through the similar

1089
00:53:45,500 --> 00:53:57,320
security so next slide so in terms of

1090
00:53:55,550 --> 00:53:59,570
which exporter to use their<font color="#E5E5E5"> served in</font>

1091
00:53:57,320 --> 00:54:01,610
three ideas flooded out the original

1092
00:53:59,570 --> 00:54:06,820
<font color="#E5E5E5">proposed idea was always used 0</font><font color="#CCCCCC"> RTT</font>

1093
00:54:01,610 --> 00:54:10,520
exporter another idea was require that

1094
00:54:06,820 --> 00:54:14,780
at the zero HT exporter is only used<font color="#E5E5E5"> in</font>

1095
00:54:10,520 --> 00:54:18,230
early data in practice this is not

1096
00:54:14,780 --> 00:54:20,000
really implementable basically it when a

1097
00:54:18,230 --> 00:54:21,830
client starts preparing a request

1098
00:54:20,000 --> 00:54:23,180
there's going<font color="#E5E5E5"> to be some time</font><font color="#CCCCCC"> delta</font>

1099
00:54:21,830 --> 00:54:25,100
between when it starts<font color="#E5E5E5"> repairing that</font>

1100
00:54:23,180 --> 00:54:28,040
request to when it sends it<font color="#E5E5E5"> on the wire</font>

1101
00:54:25,100 --> 00:54:30,830
and sort<font color="#E5E5E5"> of in the diagram I've sketched</font>

1102
00:54:28,040 --> 00:54:32,630
out here for<font color="#CCCCCC"> request</font><font color="#E5E5E5"> see it starts</font>

1103
00:54:30,830 --> 00:54:35,150
preparing that request before the early

1104
00:54:32,630 --> 00:54:37,730
exporter or before the normal exporter

1105
00:54:35,150 --> 00:54:39,290
is available but then sends it after

1106
00:54:37,730 --> 00:54:42,260
that's available so having this hard

1107
00:54:39,290 --> 00:54:45,650
limit adds a lot<font color="#E5E5E5"> of complexity to the</font>

1108
00:54:42,260 --> 00:54:48,800
server the<font color="#CCCCCC"> bed this also creates issues</font>

1109
00:54:45,650 --> 00:54:50,450
with a fragmentation of TLS stat could

1110
00:54:48,800 --> 00:54:52,280
decide that it needs to fragment of

1111
00:54:50,450 --> 00:54:54,589
requests for whatever reason could be

1112
00:54:52,280 --> 00:54:58,640
something related to the<font color="#CCCCCC"> one n</font><font color="#E5E5E5"> minus 1</font>

1113
00:54:54,590 --> 00:55:00,380
split for<font color="#CCCCCC"> CBC IV randomization or it</font>

1114
00:54:58,640 --> 00:55:02,500
could exceed the maximum to us record

1115
00:55:00,380 --> 00:55:04,130
<font color="#E5E5E5">size if it's a large post request</font>

1116
00:55:02,500 --> 00:55:06,650
there's several<font color="#E5E5E5"> reasons that</font>

1117
00:55:04,130 --> 00:55:08,630
fragmentation could cause an issue here

1118
00:55:06,650 --> 00:55:10,940
and then if the token binding message

1119
00:55:08,630 --> 00:55:13,130
<font color="#E5E5E5">gets political cross records and pre and</font>

1120
00:55:10,940 --> 00:55:14,920
post handshake then<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> think anyone</font>

1121
00:55:13,130 --> 00:55:17,630
has any explanation for that means so

1122
00:55:14,920 --> 00:55:19,130
this mechanism for having the client

1123
00:55:17,630 --> 00:55:21,800
change the exporter as soon as possible

1124
00:55:19,130 --> 00:55:23,690
<font color="#E5E5E5">I think is more reasonable as soon as</font>

1125
00:55:21,800 --> 00:55:26,270
possible is kind of vague language but

1126
00:55:23,690 --> 00:55:27,920
essentially what<font color="#E5E5E5"> I mean here is a client</font>

1127
00:55:26,270 --> 00:55:30,860
sends some requests maybe sends it with

1128
00:55:27,920 --> 00:55:32,780
the early exporter the server doesn't

1129
00:55:30,860 --> 00:55:33,890
like that it used the early exporter for

1130
00:55:32,780 --> 00:55:36,110
what every incident says this is not

1131
00:55:33,890 --> 00:55:38,750
<font color="#E5E5E5">secure enough for me I want to</font><font color="#CCCCCC"> see this</font>

1132
00:55:36,110 --> 00:55:40,820
with the normal exporter and sends back

1133
00:55:38,750 --> 00:55:42,950
a response that<font color="#E5E5E5"> says please try again</font>

1134
00:55:40,820 --> 00:55:44,330
with<font color="#E5E5E5"> the full exporter by the time the</font>

1135
00:55:42,950 --> 00:55:45,770
<font color="#E5E5E5">client receives that response from the</font>

1136
00:55:44,330 --> 00:55:47,569
server the handshake will be far enough

1137
00:55:45,770 --> 00:55:49,220
that that exporter is there and then the

1138
00:55:47,570 --> 00:55:51,700
client<font color="#CCCCCC"> can try</font><font color="#E5E5E5"> again with</font><font color="#CCCCCC"> the full</font>

1139
00:55:49,220 --> 00:55:51,700
exporter

1140
00:55:56,240 --> 00:56:01,620
I'm sorry Adam<font color="#CCCCCC"> a goo what is that signal</font>

1141
00:55:59,820 --> 00:56:05,730
to say please try again with<font color="#E5E5E5"> the book</font>

1142
00:56:01,620 --> 00:56:07,170
yes that's a<font color="#E5E5E5"> good point so tell</font><font color="#CCCCCC"> us 1.3</font>

1143
00:56:05,730 --> 00:56:09,090
doesn't have any<font color="#E5E5E5"> mechanism say I didn't</font>

1144
00:56:07,170 --> 00:56:11,550
like<font color="#E5E5E5"> what you sent an early data after</font>

1145
00:56:09,090 --> 00:56:12,720
it has<font color="#E5E5E5"> accepted the early data so this</font>

1146
00:56:11,550 --> 00:56:17,360
would have<font color="#CCCCCC"> to be an application-specific</font>

1147
00:56:12,720 --> 00:56:21,109
<font color="#E5E5E5">signal for HTTP this signal could</font><font color="#CCCCCC"> be a</font>

1148
00:56:17,360 --> 00:56:24,900
307 redirect to keep the method the same

1149
00:56:21,110 --> 00:56:26,610
and redirect to the same<font color="#CCCCCC"> location with</font>

1150
00:56:24,900 --> 00:56:30,660
possibly<font color="#E5E5E5"> an added query parameter to say</font>

1151
00:56:26,610 --> 00:56:32,070
that it performed this redirect so such

1152
00:56:30,660 --> 00:56:37,279
a mechanism could be hacked together

1153
00:56:32,070 --> 00:56:37,280
it's<font color="#CCCCCC"> not the most</font><font color="#E5E5E5"> elegant of mechanisms</font>

1154
00:56:48,450 --> 00:56:55,040
suppose anger yeah um so why<font color="#E5E5E5"> is this</font>

1155
00:56:51,450 --> 00:56:57,990
<font color="#E5E5E5">different from for instance</font><font color="#CCCCCC"> a server</font>

1156
00:56:55,040 --> 00:57:00,630
allowing a 0<font color="#E5E5E5"> RT exporter for some amount</font>

1157
00:56:57,990 --> 00:57:04,020
of time and then and then expiring<font color="#E5E5E5"> that</font>

1158
00:57:00,630 --> 00:57:05,520
later this is basically the<font color="#CCCCCC"> same thing</font><font color="#E5E5E5"> I</font>

1159
00:57:04,020 --> 00:57:08,640
said<font color="#CCCCCC"> this is sort of codifying the</font>

1160
00:57:05,520 --> 00:57:11,190
client rules of when to switch there

1161
00:57:08,640 --> 00:57:13,049
isn't a sort of<font color="#CCCCCC"> time-based thing on here</font>

1162
00:57:11,190 --> 00:57:15,570
nor is there a ratchet mechanism

1163
00:57:13,050 --> 00:57:18,359
explicitly indicated so one could

1164
00:57:15,570 --> 00:57:21,420
imagine that the timing<font color="#CCCCCC"> of two requests</font>

1165
00:57:18,359 --> 00:57:22,650
is that the client starts both of those

1166
00:57:21,420 --> 00:57:24,329
requests at the same time and<font color="#E5E5E5"> then it</font>

1167
00:57:22,650 --> 00:57:26,910
flips the order in which it sends them

1168
00:57:24,329 --> 00:57:28,920
on the wire and ends up sending one with

1169
00:57:26,910 --> 00:57:31,290
the early exporter right after one with

1170
00:57:28,920 --> 00:57:33,270
the full exporter so<font color="#E5E5E5"> okay I'm</font><font color="#CCCCCC"> just</font>

1171
00:57:31,290 --> 00:57:35,279
suggesting on the server side you you

1172
00:57:33,270 --> 00:57:37,530
allow both for some amount<font color="#E5E5E5"> of time and</font>

1173
00:57:35,280 --> 00:57:40,980
you say like<font color="#E5E5E5"> like hey this is possible</font>

1174
00:57:37,530 --> 00:57:42,450
that one request was sent over 0 rd

1175
00:57:40,980 --> 00:57:45,119
another one was sent over one hour duty

1176
00:57:42,450 --> 00:57:47,970
just to close to each other with

1177
00:57:45,119 --> 00:57:49,560
exporter but then later you<font color="#E5E5E5"> you wrapped</font>

1178
00:57:47,970 --> 00:57:51,810
it on the server<font color="#E5E5E5"> side like after</font><font color="#CCCCCC"> a</font>

1179
00:57:49,560 --> 00:57:53,220
certain amount of<font color="#E5E5E5"> time yeah that sounds</font>

1180
00:57:51,810 --> 00:57:56,099
<font color="#CCCCCC">like it</font><font color="#E5E5E5"> could be a reasonable thing for</font>

1181
00:57:53,220 --> 00:57:58,799
a server implementation to do I don't

1182
00:57:56,099 --> 00:58:00,630
have any sort of our duels of the server

1183
00:57:58,800 --> 00:58:04,109
can be guaranteed at this point in time

1184
00:58:00,630 --> 00:58:07,400
<font color="#E5E5E5">that it is safe to do that but in</font>

1185
00:58:04,109 --> 00:58:07,400
practice I would probably<font color="#CCCCCC"> work out fine</font>

1186
00:58:10,420 --> 00:58:19,100
so what is<font color="#E5E5E5"> the</font><font color="#CCCCCC"> security consequence of</font>

1187
00:58:15,100 --> 00:58:22,339
accepting that request with the early

1188
00:58:19,100 --> 00:58:24,319
exporter in the token binding in the say

1189
00:58:22,340 --> 00:58:27,920
an access token that's going to give

1190
00:58:24,320 --> 00:58:30,080
that that requests their access<font color="#CCCCCC"> to some</font>

1191
00:58:27,920 --> 00:58:32,270
information under the early exporter or

1192
00:58:30,080 --> 00:58:33,890
are you proposing that that if that

1193
00:58:32,270 --> 00:58:36,820
request just be thrown away because it

1194
00:58:33,890 --> 00:58:39,589
doesn't meet<font color="#CCCCCC"> desert security requirement</font>

1195
00:58:36,820 --> 00:58:40,880
so I think<font color="#E5E5E5"> I heard two questions in</font>

1196
00:58:39,590 --> 00:58:44,450
there what is like sort of these

1197
00:58:40,880 --> 00:58:47,090
security difference if the server

1198
00:58:44,450 --> 00:58:51,529
accepts token with the early exporter

1199
00:58:47,090 --> 00:58:53,030
and then the second one<font color="#E5E5E5"> is what should</font>

1200
00:58:51,530 --> 00:58:54,320
the server do if it receives a request

1201
00:58:53,030 --> 00:59:00,200
with you really expert if it doesn't

1202
00:58:54,320 --> 00:59:06,440
like it well yeah I guess<font color="#E5E5E5"> if it doesn't</font>

1203
00:59:00,200 --> 00:59:07,790
like it if<font color="#E5E5E5"> it I guess we would have to</font>

1204
00:59:06,440 --> 00:59:11,900
explain that<font color="#E5E5E5"> there are different</font>

1205
00:59:07,790 --> 00:59:15,800
security properties of these<font color="#CCCCCC"> mysterio I</font>

1206
00:59:11,900 --> 00:59:18,290
key requests to whatever's being the

1207
00:59:15,800 --> 00:59:22,760
resource server or authorization server

1208
00:59:18,290 --> 00:59:24,410
or client sounds like so first the

1209
00:59:22,760 --> 00:59:25,820
question is what is the<font color="#CCCCCC"> different is</font>

1210
00:59:24,410 --> 00:59:28,040
there a meaningful difference in the

1211
00:59:25,820 --> 00:59:31,640
security properties that would cause one

1212
00:59:28,040 --> 00:59:35,270
to be<font color="#E5E5E5"> vulnerable to meaningful attacks</font>

1213
00:59:31,640 --> 00:59:36,740
by accepting<font color="#CCCCCC"> the 0 RT t day so I think</font>

1214
00:59:35,270 --> 00:59:39,230
that and that first<font color="#E5E5E5"> question I think</font>

1215
00:59:36,740 --> 00:59:41,629
<font color="#E5E5E5">it's back to the proof of possession</font>

1216
00:59:39,230 --> 00:59:44,500
concerns on the previous slide which is

1217
00:59:41,630 --> 00:59:50,300
that if<font color="#CCCCCC"> the server is concerned about</font>

1218
00:59:44,500 --> 00:59:53,660
client malware attack or is trying<font color="#CCCCCC"> to</font>

1219
00:59:50,300 --> 00:59:58,660
<font color="#CCCCCC">think if the 0 RTT replay from TLS 1.3</font>

1220
00:59:53,660 --> 01:00:00,618
is potentially a concern yeah then and

1221
00:59:58,660 --> 01:00:02,118
that would be<font color="#E5E5E5"> reason</font><font color="#CCCCCC"> why the server</font>

1222
01:00:00,619 --> 01:00:04,630
might decide that it doesn't like it

1223
01:00:02,119 --> 01:00:10,910
because that the proof of possession is

1224
01:00:04,630 --> 01:00:13,310
weaker that was so the API from the TLS

1225
01:00:10,910 --> 01:00:15,589
from the token binding stack would have

1226
01:00:13,310 --> 01:00:20,299
to expose for<font color="#E5E5E5"> the application that this</font>

1227
01:00:15,590 --> 01:00:24,670
was a<font color="#E5E5E5"> zero</font><font color="#CCCCCC"> RTT token bound token token</font>

1228
01:00:20,300 --> 01:00:24,670
ID and good luck<font color="#CCCCCC"> with it</font>

1229
01:00:26,410 --> 01:00:35,359
<font color="#E5E5E5">that could be an option for server so</font>

1230
01:00:32,750 --> 01:00:38,150
under a pop of<font color="#E5E5E5"> Microsoft so on the first</font>

1231
01:00:35,359 --> 01:00:41,509
question<font color="#E5E5E5"> I do think</font><font color="#CCCCCC"> that the token</font>

1232
01:00:38,150 --> 01:00:43,910
binding with zero<font color="#CCCCCC"> RTT creates replayable</font>

1233
01:00:41,510 --> 01:00:45,680
tokens in a way right so they can be

1234
01:00:43,910 --> 01:00:48,680
either replayed directly with the same

1235
01:00:45,680 --> 01:00:50,240
message or as you know showing again in

1236
01:00:48,680 --> 01:00:51,950
the attacks so all of those attacks with

1237
01:00:50,240 --> 01:00:55,129
token replay become possible if you<font color="#E5E5E5"> do</font>

1238
01:00:51,950 --> 01:00:56,660
0dt so<font color="#E5E5E5"> I do believe that it it involves</font>

1239
01:00:55,130 --> 01:00:58,670
the degradation of security in the way

1240
01:00:56,660 --> 01:01:00,440
and it takes away some of the guarantees

1241
01:00:58,670 --> 01:01:03,940
of the token binding protocol that we

1242
01:01:00,440 --> 01:01:08,119
have my second point is that trying<font color="#E5E5E5"> to</font>

1243
01:01:03,940 --> 01:01:10,190
ratchet up from the early ekm to the

1244
01:01:08,119 --> 01:01:12,859
appropriate IAM<font color="#CCCCCC"> with proper proof of</font>

1245
01:01:10,190 --> 01:01:15,079
possession is a pretty<font color="#CCCCCC"> complicated</font>

1246
01:01:12,859 --> 01:01:17,000
mechanism is currently defined but<font color="#CCCCCC"> i</font>

1247
01:01:15,079 --> 01:01:21,079
also<font color="#CCCCCC"> think that you</font><font color="#E5E5E5"> know once the server</font>

1248
01:01:17,000 --> 01:01:23,960
<font color="#E5E5E5">has accepted a weakly bound token from 0</font>

1249
01:01:21,079 --> 01:01:26,119
TT the course is kind of out of the barn

1250
01:01:23,960 --> 01:01:28,369
so trying<font color="#CCCCCC"> to secure it after that is a</font>

1251
01:01:26,119 --> 01:01:31,280
little bit so I'm just<font color="#E5E5E5"> not convinced</font>

1252
01:01:28,369 --> 01:01:34,250
that the complexity is worth it<font color="#CCCCCC"> okay</font>

1253
01:01:31,280 --> 01:01:36,200
like either you accept 0t token binding

1254
01:01:34,250 --> 01:01:39,410
and you are willing to<font color="#E5E5E5"> deal with it you</font>

1255
01:01:36,200 --> 01:01:41,569
know<font color="#CCCCCC"> or you don't this is where I'm</font>

1256
01:01:39,410 --> 01:01:44,089
living if you go to<font color="#CCCCCC"> the next slide I can</font>

1257
01:01:41,569 --> 01:01:46,250
make an argument for why the change to

1258
01:01:44,089 --> 01:01:47,630
the draft of switching exporter's should

1259
01:01:46,250 --> 01:01:54,710
actually just stay where we were earlier

1260
01:01:47,630 --> 01:01:57,470
if always using the<font color="#CCCCCC"> rxt</font><font color="#E5E5E5"> exporter so the</font>

1261
01:01:54,710 --> 01:02:02,059
argument is roughly as follows that if a

1262
01:01:57,470 --> 01:02:03,980
server is accepting token<font color="#CCCCCC"> by name is</font>

1263
01:02:02,059 --> 01:02:06,230
York City on<font color="#E5E5E5"> the same connection then it</font>

1264
01:02:03,980 --> 01:02:07,760
is<font color="#E5E5E5"> fine with the security properties the</font>

1265
01:02:06,230 --> 01:02:14,150
<font color="#CCCCCC">CRCT exporter for at least some of the</font>

1266
01:02:07,760 --> 01:02:17,359
requests<font color="#CCCCCC"> that server can process and if</font>

1267
01:02:14,150 --> 01:02:21,589
the server receives these that same

1268
01:02:17,359 --> 01:02:23,480
request post handshake I it can<font color="#E5E5E5"> benefit</font>

1269
01:02:21,589 --> 01:02:25,520
<font color="#CCCCCC">it's fine what if it still gets York</font>

1270
01:02:23,480 --> 01:02:27,020
City exporter with that because<font color="#E5E5E5"> it was</font>

1271
01:02:25,520 --> 01:02:29,390
fine receiving a pre handshake with the

1272
01:02:27,020 --> 01:02:32,180
0 st exporter so that request can have<font color="#E5E5E5"> 0</font>

1273
01:02:29,390 --> 01:02:34,578
<font color="#E5E5E5">should be expert at any point and then</font>

1274
01:02:32,180 --> 01:02:36,930
the next<font color="#E5E5E5"> part of this argument is that a</font>

1275
01:02:34,579 --> 01:02:38,790
TLS 1.3 server cannot

1276
01:02:36,930 --> 01:02:40,919
<font color="#E5E5E5">reject early data based on the contents</font>

1277
01:02:38,790 --> 01:02:42,450
of the early data it needs to decide

1278
01:02:40,920 --> 01:02:43,710
whether to accept that before looking at

1279
01:02:42,450 --> 01:02:46,890
<font color="#E5E5E5">it otherwise there can be a deadlock</font>

1280
01:02:43,710 --> 01:02:48,630
scenario in<font color="#CCCCCC"> the handshake so the server</font>

1281
01:02:46,890 --> 01:02:50,819
in deciding i'm going to accept some

1282
01:02:48,630 --> 01:02:52,559
early data basically saying i am<font color="#E5E5E5"> going</font>

1283
01:02:50,819 --> 01:02:54,329
to accept all hourly data<font color="#E5E5E5"> i'll accept</font>

1284
01:02:52,559 --> 01:02:57,210
any requests that i receive in early

1285
01:02:54,329 --> 01:03:00,359
data and then via the previous steps

1286
01:02:57,210 --> 01:03:04,260
we're fine taking the early exporter

1287
01:03:00,359 --> 01:03:05,940
with it Benkei duck well now that<font color="#CCCCCC"> you</font>

1288
01:03:04,260 --> 01:03:07,920
went through this slide it seems like a

1289
01:03:05,940 --> 01:03:10,349
fine opportunity for me to say<font color="#CCCCCC"> that at</font>

1290
01:03:07,920 --> 01:03:13,140
least for me having<font color="#E5E5E5"> seen this slide</font>

1291
01:03:10,349 --> 01:03:15,390
that's<font color="#E5E5E5"> sort of saying it's an argument</font>

1292
01:03:13,140 --> 01:03:17,549
for<font color="#E5E5E5"> the server to not accept 0 RG t data</font>

1293
01:03:15,390 --> 01:03:20,879
at all but<font color="#E5E5E5"> that's not</font><font color="#CCCCCC"> actually what</font><font color="#E5E5E5"> I</font>

1294
01:03:17,550 --> 01:03:24,480
got here to say which<font color="#CCCCCC"> is more along</font>

1295
01:03:20,880 --> 01:03:27,809
lines of with the 0 TT data there's sort

1296
01:03:24,480 --> 01:03:30,260
of two general cases that could be

1297
01:03:27,809 --> 01:03:33,240
considered and one of them is in like a

1298
01:03:30,260 --> 01:03:35,460
well-behaved client that's using PS KS

1299
01:03:33,240 --> 01:03:36,990
from session<font color="#E5E5E5"> tickets and it's only using</font>

1300
01:03:35,460 --> 01:03:39,900
<font color="#E5E5E5">the session ticket once and it's amazing</font>

1301
01:03:36,990 --> 01:03:43,618
client hello<font color="#CCCCCC"> ones and in that</font><font color="#E5E5E5"> sort of</font>

1302
01:03:39,900 --> 01:03:46,740
case when you<font color="#E5E5E5"> do actually</font><font color="#CCCCCC"> go through and</font>

1303
01:03:43,619 --> 01:03:50,640
complete the full TLS handshake that

1304
01:03:46,740 --> 01:03:53,368
sort of retro actively confirms the zero

1305
01:03:50,640 --> 01:03:54,598
RTT data because<font color="#CCCCCC"> the client is well</font>

1306
01:03:53,369 --> 01:03:58,589
<font color="#CCCCCC">behaved is something going to send it</font>

1307
01:03:54,599 --> 01:04:01,170
once I'm so epic<font color="#E5E5E5"> okay I thought that I</font>

1308
01:03:58,589 --> 01:04:03,420
got<font color="#CCCCCC"> up here and I've done</font><font color="#E5E5E5"> bedroom and</font>

1309
01:04:01,170 --> 01:04:04,740
then the other other cases sort of when

1310
01:04:03,420 --> 01:04:06,930
the client is not<font color="#E5E5E5"> well behaves or when</font>

1311
01:04:04,740 --> 01:04:08,520
using an external psk and you really

1312
01:04:06,930 --> 01:04:12,029
don't have any sort<font color="#E5E5E5"> of guarantee about</font>

1313
01:04:08,520 --> 01:04:14,490
that at all and I'm not<font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> we're</font>

1314
01:04:12,030 --> 01:04:16,170
really thinking about that<font color="#E5E5E5"> this case for</font>

1315
01:04:14,490 --> 01:04:17,339
all of the discussions were having and

1316
01:04:16,170 --> 01:04:19,829
certainly<font color="#CCCCCC"> through some of the text in</font>

1317
01:04:17,339 --> 01:04:22,470
the document sure I've definitely been

1318
01:04:19,829 --> 01:04:24,119
ignoring these here PS<font color="#E5E5E5"> k it's a curious</font>

1319
01:04:22,470 --> 01:04:25,109
here to tell me why I'm wrong well or

1320
01:04:24,119 --> 01:04:28,079
you<font color="#CCCCCC"> could tell me a lot wrong so you</font>

1321
01:04:25,109 --> 01:04:29,609
going<font color="#E5E5E5"> to stand there so um my</font>

1322
01:04:28,079 --> 01:04:32,670
understanding security property<font color="#E5E5E5"> you were</font>

1323
01:04:29,609 --> 01:04:34,890
attempting to<font color="#CCCCCC"> obtain is that I can't</font>

1324
01:04:32,670 --> 01:04:37,770
bootstrap temporary access to the token

1325
01:04:34,890 --> 01:04:39,390
Detroit to the team the signing<font color="#E5E5E5"> key on</font>

1326
01:04:37,770 --> 01:04:41,940
the clients device into permanent into a

1327
01:04:39,390 --> 01:04:43,259
permanent for truth right that's these

1328
01:04:41,940 --> 01:04:44,819
part of the<font color="#CCCCCC"> principal's eyes I</font>

1329
01:04:43,260 --> 01:04:46,380
temporarily controlled the clients

1330
01:04:44,819 --> 01:04:48,359
device and I<font color="#E5E5E5"> signed a bunch of</font><font color="#CCCCCC"> crap and</font>

1331
01:04:46,380 --> 01:04:49,829
then like then I lose access right and

1332
01:04:48,359 --> 01:04:52,049
so the

1333
01:04:49,829 --> 01:04:54,359
on<font color="#E5E5E5"> there what the problem is the reason</font>

1334
01:04:52,049 --> 01:04:55,799
it doesn't retro actively bless<font color="#CCCCCC"> the CRCT</font>

1335
01:04:54,359 --> 01:04:57,450
<font color="#CCCCCC">data is that the cinema is that</font>

1336
01:04:55,799 --> 01:04:59,640
ordinarily thus ensuring cut includes

1337
01:04:57,450 --> 01:05:01,618
the servers and you replay knots and now

1338
01:04:59,640 --> 01:05:03,118
this does not as the mere fact so<font color="#E5E5E5"> I can</font>

1339
01:05:01,619 --> 01:05:05,219
basically makes me a token as I want and

1340
01:05:03,119 --> 01:05:06,930
<font color="#E5E5E5">like and then because I because I</font>

1341
01:05:05,219 --> 01:05:11,729
complete the handshake with the server

1342
01:05:06,930 --> 01:05:12,808
on the on it's<font color="#E5E5E5"> only the TLS eng replay</font>

1343
01:05:11,729 --> 01:05:14,368
you have<font color="#E5E5E5"> it's not that it's not the</font>

1344
01:05:12,809 --> 01:05:17,400
injury play from<font color="#CCCCCC"> the tip from the token</font>

1345
01:05:14,369 --> 01:05:19,769
<font color="#CCCCCC">bite his signature and so in or so so</font>

1346
01:05:17,400 --> 01:05:21,329
that<font color="#CCCCCC"> I got</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> I was gonna</font><font color="#E5E5E5"> say what you</font>

1347
01:05:19,769 --> 01:05:22,589
said and then I realized halfway through

1348
01:05:21,329 --> 01:05:24,209
that I think it's not true because

1349
01:05:22,589 --> 01:05:26,069
because there's one or two Tito

1350
01:05:24,209 --> 01:05:28,200
combining covers covers that server in

1351
01:05:26,069 --> 01:05:29,249
as you can<font color="#CCCCCC"> hear like</font><font color="#E5E5E5"> that level even</font>

1352
01:05:28,200 --> 01:05:31,859
<font color="#E5E5E5">though you don't even though the teeth</font>

1353
01:05:29,249 --> 01:05:34,890
though<font color="#E5E5E5"> you're right to</font><font color="#CCCCCC"> say that on the</font>

1354
01:05:31,859 --> 01:05:36,630
<font color="#CCCCCC">arm for</font><font color="#E5E5E5"> the TLS data alone the one or gt</font>

1355
01:05:34,890 --> 01:05:38,940
handshake does can resurrect retract if

1356
01:05:36,630 --> 01:05:41,130
you confirmed on replay so I think Ben

1357
01:05:38,940 --> 01:05:43,019
is correct in that completing the telus

1358
01:05:41,130 --> 01:05:44,789
1.3 handshake retro actively blesses the

1359
01:05:43,019 --> 01:05:47,399
application data yes but it does not

1360
01:05:44,789 --> 01:05:49,440
retro actively bless the exporter

1361
01:05:47,400 --> 01:05:51,539
signature used for<font color="#CCCCCC"> took that's what I</font>

1362
01:05:49,440 --> 01:05:54,930
was<font color="#CCCCCC"> trying to say yes I think I agree</font>

1363
01:05:51,539 --> 01:05:56,670
with<font color="#E5E5E5"> you and so then the only potential</font>

1364
01:05:54,930 --> 01:05:59,940
chance of protection that<font color="#E5E5E5"> you have is</font>

1365
01:05:56,670 --> 01:06:02,339
the reuse of the ticket because<font color="#E5E5E5"> when the</font>

1366
01:05:59,940 --> 01:06:03,569
bad actor has actress access to the key

1367
01:06:02,339 --> 01:06:07,558
material and<font color="#E5E5E5"> it's signing all this</font>

1368
01:06:03,569 --> 01:06:11,099
random stuff so even<font color="#E5E5E5"> auntie replay on</font>

1369
01:06:07,559 --> 01:06:13,979
that doesn't help so the scenario on

1370
01:06:11,099 --> 01:06:15,719
slide for it shows that the attacker

1371
01:06:13,979 --> 01:06:18,180
generates<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> only session tickets to</font>

1372
01:06:15,719 --> 01:06:22,259
use so it's never replaying a new

1373
01:06:18,180 --> 01:06:23,788
session ticket it is just yet using the

1374
01:06:22,259 --> 01:06:26,099
on<font color="#E5E5E5"> ones that it's generated using the</font>

1375
01:06:23,789 --> 01:06:28,709
client as an Oracle to sign to use after

1376
01:06:26,099 --> 01:06:29,880
the fact yeah i mean my impression is

1377
01:06:28,709 --> 01:06:31,469
essentially no matter what cryptographic

1378
01:06:29,880 --> 01:06:33,180
on start to use and what's it includes

1379
01:06:31,469 --> 01:06:34,769
data from the server or you have some

1380
01:06:33,180 --> 01:06:37,469
<font color="#E5E5E5">other strong and reply you can solve</font>

1381
01:06:34,769 --> 01:06:40,618
<font color="#E5E5E5">this problem yeah I think we're sort of</font>

1382
01:06:37,469 --> 01:06:41,849
stuck with at this sort of seven day or

1383
01:06:40,619 --> 01:06:45,930
whatever<font color="#E5E5E5"> the age of the new session</font>

1384
01:06:41,849 --> 01:06:52,019
ticket time window is for the approval

1385
01:06:45,930 --> 01:06:53,669
possession for the ZX TK<font color="#CCCCCC"> Andre Pavel</font>

1386
01:06:52,019 --> 01:06:55,680
Microsoft which brings me to the second

1387
01:06:53,670 --> 01:06:57,989
to my second point<font color="#E5E5E5"> that I wanted to</font>

1388
01:06:55,680 --> 01:06:59,549
<font color="#E5E5E5">point out which</font><font color="#CCCCCC"> is you know if we are if</font>

1389
01:06:57,989 --> 01:07:01,849
the working group is willing to<font color="#E5E5E5"> consider</font>

1390
01:06:59,549 --> 01:07:03,240
using cocaine binding in 0 TT with all

1391
01:07:01,849 --> 01:07:06,270
with all the

1392
01:07:03,240 --> 01:07:08,279
with described so far<font color="#E5E5E5"> I would like</font><font color="#CCCCCC"> to</font>

1393
01:07:06,270 --> 01:07:11,720
<font color="#E5E5E5">have a mechanism for the client and the</font>

1394
01:07:08,280 --> 01:07:15,510
server independently to to have a way to

1395
01:07:11,720 --> 01:07:17,700
avoid<font color="#E5E5E5"> doing this so like if so that I</font>

1396
01:07:15,510 --> 01:07:21,390
can build<font color="#E5E5E5"> a client that never does 0 to</font>

1397
01:07:17,700 --> 01:07:22,919
see<font color="#E5E5E5"> token binding but still can do 0dt</font>

1398
01:07:21,390 --> 01:07:25,170
with some servers and tow combining with

1399
01:07:22,920 --> 01:07:26,670
some servers that's<font color="#CCCCCC"> basically</font><font color="#E5E5E5"> something</font>

1400
01:07:25,170 --> 01:07:29,600
we need to design into the solution if

1401
01:07:26,670 --> 01:07:33,150
we are to to go ahead<font color="#E5E5E5"> with this yeah so</font>

1402
01:07:29,600 --> 01:07:34,950
the i think i had mentioned this on the

1403
01:07:33,150 --> 01:07:38,490
mailing list an<font color="#E5E5E5"> original proposal for</font>

1404
01:07:34,950 --> 01:07:41,069
doing this is that<font color="#E5E5E5"> basically in terms of</font>

1405
01:07:38,490 --> 01:07:43,770
how the processing rules work for the

1406
01:07:41,070 --> 01:07:48,840
token binding extension on 0 RT t would

1407
01:07:43,770 --> 01:07:51,780
be that if a client it does not want<font color="#E5E5E5"> to</font>

1408
01:07:48,840 --> 01:07:55,290
do a combination<font color="#CCCCCC"> crst</font><font color="#E5E5E5"> in token binding</font>

1409
01:07:51,780 --> 01:07:56,460
if it has 0 xt a new session ticket that

1410
01:07:55,290 --> 01:07:58,470
it could use first<font color="#E5E5E5"> sort of that's tanto</font>

1411
01:07:56,460 --> 01:08:00,360
<font color="#E5E5E5">combining with and passed it doesn't do</font>

1412
01:07:58,470 --> 01:08:04,040
<font color="#E5E5E5">z rh t and that's fine the sort of</font>

1413
01:08:00,360 --> 01:08:07,020
complication gets into a server that

1414
01:08:04,040 --> 01:08:09,000
does 0 RT doesn't do token binding and

1415
01:08:07,020 --> 01:08:10,800
now is doing both and looks like ever

1416
01:08:09,000 --> 01:08:12,090
has a question another question but a

1417
01:08:10,800 --> 01:08:13,350
suggestion and we<font color="#E5E5E5"> went to all the</font>

1418
01:08:12,090 --> 01:08:14,790
trouble of minting all these extension

1419
01:08:13,350 --> 01:08:16,620
points in the new session ticket and

1420
01:08:14,790 --> 01:08:18,420
when you<font color="#CCCCCC"> could</font><font color="#E5E5E5"> simply made a section</font>

1421
01:08:16,620 --> 01:08:24,240
point that said<font color="#CCCCCC"> I will do is your</font><font color="#E5E5E5"> GTO</font>

1422
01:08:18,420 --> 01:08:29,970
combining sit ops you in and rather than

1423
01:08:24,240 --> 01:08:31,679
<font color="#E5E5E5">out yeah is so putting that extension in</font>

1424
01:08:29,970 --> 01:08:34,710
the new session taken from the server

1425
01:08:31,680 --> 01:08:36,600
allows the server to and do sort of

1426
01:08:34,710 --> 01:08:38,819
either type of<font color="#E5E5E5"> mining or</font><font color="#CCCCCC"> crst but not</font>

1427
01:08:36,600 --> 01:08:40,890
both I don't<font color="#CCCCCC"> think this helps in the</font>

1428
01:08:38,819 --> 01:08:43,529
<font color="#E5E5E5">case of a server that is willing</font><font color="#CCCCCC"> to do</font>

1429
01:08:40,890 --> 01:08:48,870
both but a client that<font color="#E5E5E5"> is not one no no</font>

1430
01:08:43,529 --> 01:08:50,220
<font color="#E5E5E5">so sorry so I was on just so you think</font>

1431
01:08:48,870 --> 01:08:52,589
about the second I<font color="#CCCCCC"> think I think you</font>

1432
01:08:50,220 --> 01:08:53,580
probably may need both but i<font color="#E5E5E5"> think is i</font>

1433
01:08:52,589 --> 01:08:55,559
understand<font color="#E5E5E5"> it the</font><font color="#CCCCCC"> server's willing to</font>

1434
01:08:53,580 --> 01:08:58,170
say so<font color="#E5E5E5"> you don't want this over to be</font>

1435
01:08:55,560 --> 01:08:59,279
able<font color="#E5E5E5"> to say that i will do that i</font><font color="#CCCCCC"> will</font>

1436
01:08:58,170 --> 01:09:02,700
do is are too deep<font color="#E5E5E5"> i don't want to talk</font>

1437
01:08:59,279 --> 01:09:05,130
about even 0 TT<font color="#E5E5E5"> so right now if we want</font>

1438
01:09:02,700 --> 01:09:08,068
a server to do either type of my new or

1439
01:09:05,130 --> 01:09:11,609
z RX t but not both it can do that very

1440
01:09:08,069 --> 01:09:13,560
easily by looking at the client hello it

1441
01:09:11,609 --> 01:09:15,440
sees both extensions and picks which

1442
01:09:13,560 --> 01:09:18,969
everyone at once and all thrown together

1443
01:09:15,439 --> 01:09:21,919
the complication though is a client that

1444
01:09:18,969 --> 01:09:23,569
wants to support<font color="#CCCCCC"> 0r TT with servers that</font>

1445
01:09:21,920 --> 01:09:25,880
do not do token binding and token

1446
01:09:23,569 --> 01:09:28,400
binding with servers that do support it

1447
01:09:25,880 --> 01:09:30,859
but still interoperate with a server

1448
01:09:28,399 --> 01:09:35,479
that<font color="#CCCCCC"> supports what I'm proposing without</font>

1449
01:09:30,859 --> 01:09:41,299
having to do this spec and that would

1450
01:09:35,479 --> 01:09:43,189
rely on the server implementing some

1451
01:09:41,299 --> 01:09:45,019
parts of negotiation correctly which for

1452
01:09:43,189 --> 01:09:47,509
a client to rely<font color="#CCCCCC"> on that sounds a little</font>

1453
01:09:45,020 --> 01:09:51,380
washy I think a better mechanism would

1454
01:09:47,509 --> 01:09:53,750
be to propose another TLS extension just

1455
01:09:51,380 --> 01:09:56,090
an indicator extension that says the

1456
01:09:53,750 --> 01:09:58,460
client says I support doing<font color="#CCCCCC"> a token</font>

1457
01:09:56,090 --> 01:10:01,640
binding<font color="#E5E5E5"> over 0 RT t and server echoes</font>

1458
01:09:58,460 --> 01:10:03,710
that back if it supports it and sounds

1459
01:10:01,640 --> 01:10:05,480
like<font color="#E5E5E5"> something that could also be put in</font>

1460
01:10:03,710 --> 01:10:07,190
the new session ticket maybe just as a

1461
01:10:05,480 --> 01:10:08,419
reminder yeah that's what I thought<font color="#E5E5E5"> that</font>

1462
01:10:07,190 --> 01:10:10,309
carousing was that you have a new

1463
01:10:08,420 --> 01:10:13,070
extension<font color="#CCCCCC"> that says I'm willing to do 0r</font>

1464
01:10:10,310 --> 01:10:14,810
TT with token binding together and it

1465
01:10:13,070 --> 01:10:16,820
goes in the client hello or<font color="#CCCCCC"> and/or the</font>

1466
01:10:14,810 --> 01:10:20,120
new session ticket depending<font color="#CCCCCC"> on</font><font color="#E5E5E5"> your</font>

1467
01:10:16,820 --> 01:10:24,559
which party supports it ok so the<font color="#E5E5E5"> case</font>

1468
01:10:20,120 --> 01:10:26,330
to think through is a client has a new

1469
01:10:24,560 --> 01:10:29,480
session ticket from a server<font color="#E5E5E5"> that is</font>

1470
01:10:26,330 --> 01:10:31,550
valid for 0 TT but at that time that

1471
01:10:29,480 --> 01:10:35,120
sort of<font color="#E5E5E5"> Naruto combining and now wants</font>

1472
01:10:31,550 --> 01:10:36,440
<font color="#CCCCCC">to do token binding</font><font color="#E5E5E5"> right now the server</font>

1473
01:10:35,120 --> 01:10:38,059
supports tow combining and it wants to

1474
01:10:36,440 --> 01:10:39,679
not do with it so if<font color="#E5E5E5"> this flag isn't</font>

1475
01:10:38,060 --> 01:10:42,080
there in the new session ticket the

1476
01:10:39,680 --> 01:10:43,699
client is<font color="#E5E5E5"> still safe to put token</font>

1477
01:10:42,080 --> 01:10:45,800
binding in its client hello and because

1478
01:10:43,699 --> 01:10:47,809
<font color="#CCCCCC">that extension ism in the new session</font>

1479
01:10:45,800 --> 01:10:49,250
ticket the server will not assume that

1480
01:10:47,810 --> 01:10:51,320
it's doing<font color="#E5E5E5"> this newfangled thing and it</font>

1481
01:10:49,250 --> 01:10:52,730
will assume<font color="#CCCCCC"> that it's</font><font color="#E5E5E5"> just you</font><font color="#CCCCCC"> know the</font>

1482
01:10:51,320 --> 01:10:54,469
<font color="#E5E5E5">idea this seems intricate enough which</font>

1483
01:10:52,730 --> 01:10:58,580
is it down with a piece of paper<font color="#CCCCCC"> or</font>

1484
01:10:54,469 --> 01:11:00,770
<font color="#CCCCCC">funny girls yeah I just</font><font color="#E5E5E5"> wanted to say</font><font color="#CCCCCC"> I</font>

1485
01:10:58,580 --> 01:11:04,580
would really like it if this world and

1486
01:11:00,770 --> 01:11:07,040
not yep that is<font color="#E5E5E5"> certainly my attention</font>

1487
01:11:04,580 --> 01:11:10,580
to make this combination via opt-in for

1488
01:11:07,040 --> 01:11:12,560
both of them so yes i will continue

1489
01:11:10,580 --> 01:11:17,180
their offline here or on the mailing

1490
01:11:12,560 --> 01:11:23,810
list or both with those details<font color="#CCCCCC"> that</font><font color="#E5E5E5"> i</font>

1491
01:11:17,180 --> 01:11:26,480
think<font color="#E5E5E5"> i have two more slides on yeah so</font>

1492
01:11:23,810 --> 01:11:28,890
in the spec right now is this replay

1493
01:11:26,480 --> 01:11:32,759
protection to us extension sort of the

1494
01:11:28,890 --> 01:11:34,470
let's<font color="#E5E5E5"> make sure that a server won't</font>

1495
01:11:32,760 --> 01:11:37,170
accept the same new session ticket twice

1496
01:11:34,470 --> 01:11:39,750
<font color="#CCCCCC">I think based on the</font><font color="#E5E5E5"> discussion</font><font color="#CCCCCC"> of the</font>

1497
01:11:37,170 --> 01:11:41,640
threat model and the attacks that<font color="#E5E5E5"> an</font>

1498
01:11:39,750 --> 01:11:43,410
attacker can do that don't involve

1499
01:11:41,640 --> 01:11:45,270
actually playing a new session ticket I

1500
01:11:43,410 --> 01:11:53,510
don't<font color="#E5E5E5"> think this is useful so I'd</font><font color="#CCCCCC"> like</font>

1501
01:11:45,270 --> 01:11:58,350
to remove this yes please do so yeah um

1502
01:11:53,510 --> 01:11:59,640
the attacks that<font color="#E5E5E5"> you described we defend</font>

1503
01:11:58,350 --> 01:12:01,830
against them however we defend against

1504
01:11:59,640 --> 01:12:04,020
them and we don't<font color="#E5E5E5"> need to do any extra</font>

1505
01:12:01,830 --> 01:12:05,820
signaling in order to do most of those

1506
01:12:04,020 --> 01:12:08,070
things<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can either signaling you can</font>

1507
01:12:05,820 --> 01:12:12,480
stuff things in session tickets and

1508
01:12:08,070 --> 01:12:13,860
other<font color="#CCCCCC"> Dallas's</font><font color="#E5E5E5"> ok so i think this</font>

1509
01:12:12,480 --> 01:12:21,299
extension will<font color="#CCCCCC"> be gone on the next draft</font>

1510
01:12:13,860 --> 01:12:25,080
<font color="#CCCCCC">look slide</font><font color="#E5E5E5"> looks like so upcoming</font>

1511
01:12:21,300 --> 01:12:27,680
changes um so this first bullet point

1512
01:12:25,080 --> 01:12:32,400
was fixing up some language around

1513
01:12:27,680 --> 01:12:35,220
changing exporter's sounds like based on

1514
01:12:32,400 --> 01:12:37,259
<font color="#CCCCCC">i like to get a</font><font color="#E5E5E5"> better sense of the</font>

1515
01:12:35,220 --> 01:12:38,850
<font color="#E5E5E5">consensus of should we stick with</font>

1516
01:12:37,260 --> 01:12:40,560
switching exporter's in which case this

1517
01:12:38,850 --> 01:12:44,390
is a language<font color="#E5E5E5"> fix since</font><font color="#CCCCCC"> i got the lingo</font>

1518
01:12:40,560 --> 01:12:54,080
drawn or should we just go<font color="#CCCCCC"> back to</font><font color="#E5E5E5"> doing</font>

1519
01:12:44,390 --> 01:12:57,260
0hd exporter for the whole time and oh

1520
01:12:54,080 --> 01:13:01,769
yeah and<font color="#E5E5E5"> then the other one was</font>

1521
01:12:57,260 --> 01:13:03,600
clarifying about what basically the

1522
01:13:01,770 --> 01:13:06,080
process signals are in 0 xt for<font color="#E5E5E5"> that</font>

1523
01:13:03,600 --> 01:13:06,080
took money extortion

1524
01:13:12,480 --> 01:13:18,219
yeah I was blessed like you wanted the

1525
01:13:15,070 --> 01:13:20,769
pole yeah so for the first point about

1526
01:13:18,220 --> 01:13:22,780
sort of either sticking with the early

1527
01:13:20,770 --> 01:13:24,670
exporter for the whole connection<font color="#E5E5E5"> versus</font>

1528
01:13:22,780 --> 01:13:26,080
switching the exporter hope you nice<font color="#CCCCCC"> to</font>

1529
01:13:24,670 --> 01:13:31,240
hold the room<font color="#E5E5E5"> and also leave an option</font>

1530
01:13:26,080 --> 01:13:34,140
of let's think about this more<font color="#CCCCCC"> okay so</font>

1531
01:13:31,240 --> 01:13:37,360
there will be<font color="#E5E5E5"> two options one is</font>

1532
01:13:34,140 --> 01:13:38,890
changing the<font color="#CCCCCC"> air sorry could I just add</font>

1533
01:13:37,360 --> 01:13:42,339
many Google I just button before we do

1534
01:13:38,890 --> 01:13:44,710
the pole you had a point where you said

1535
01:13:42,340 --> 01:13:46,570
well the server might want to send<font color="#E5E5E5"> a 300</font>

1536
01:13:44,710 --> 01:13:48,400
something<font color="#E5E5E5"> to say please try again with</font>

1537
01:13:46,570 --> 01:13:52,150
<font color="#E5E5E5">the full exporter and then you had the</font>

1538
01:13:48,400 --> 01:13:54,790
slide arguing y0r TT exporter was fine

1539
01:13:52,150 --> 01:13:57,429
<font color="#E5E5E5">forever yeah that can that argument</font>

1540
01:13:54,790 --> 01:13:58,600
didn't convince<font color="#E5E5E5"> me that no the case</font>

1541
01:13:57,430 --> 01:14:01,870
where the<font color="#E5E5E5"> server might wonderful</font>

1542
01:13:58,600 --> 01:14:04,300
exporter is invalid did you expect this

1543
01:14:01,870 --> 01:14:08,349
argument to destroy that<font color="#E5E5E5"> previous</font>

1544
01:14:04,300 --> 01:14:10,870
suggestion I yeah so this I<font color="#E5E5E5"> suppose all</font>

1545
01:14:08,350 --> 01:14:12,940
of this<font color="#E5E5E5"> argument I destroys the thing</font>

1546
01:14:10,870 --> 01:14:18,220
about a server sending a 307 to say

1547
01:14:12,940 --> 01:14:21,339
please<font color="#E5E5E5"> a fall exporter II I think what</font>

1548
01:14:18,220 --> 01:14:25,330
it can and this argument is not sort of

1549
01:14:21,340 --> 01:14:29,980
destroy the 307 argument this argument

1550
01:14:25,330 --> 01:14:31,960
<font color="#E5E5E5">is sort of looking at this ignoring what</font>

1551
01:14:29,980 --> 01:14:34,629
the application protocol is and assuming

1552
01:14:31,960 --> 01:14:36,370
<font color="#CCCCCC">that TLS gives us no mechanism for a</font>

1553
01:14:34,630 --> 01:14:40,120
server after accepting early data to

1554
01:14:36,370 --> 01:14:42,730
basically reject the early data<font color="#E5E5E5"> yeah the</font>

1555
01:14:40,120 --> 01:14:46,030
307 argument is an argument that says

1556
01:14:42,730 --> 01:14:49,690
with HTTP we do have this mechanism to

1557
01:14:46,030 --> 01:14:52,630
sort of rejecting basket for your

1558
01:14:49,690 --> 01:14:55,089
response later so there's always<font color="#E5E5E5"> a</font>

1559
01:14:52,630 --> 01:14:57,820
danger<font color="#CCCCCC"> of building complexity out of the</font>

1560
01:14:55,090 --> 01:14:59,920
fear that somebody may need<font color="#E5E5E5"> something do</font>

1561
01:14:57,820 --> 01:15:02,049
we have concrete cases I'm<font color="#E5E5E5"> looking sort</font>

1562
01:14:59,920 --> 01:15:06,010
of a Dirk<font color="#E5E5E5"> and maybe somewhere cloud</font>

1563
01:15:02,050 --> 01:15:07,420
<font color="#E5E5E5">flurry there do we have concrete cases</font>

1564
01:15:06,010 --> 01:15:09,670
where servers would one<font color="#CCCCCC"> to three hundred</font>

1565
01:15:07,420 --> 01:15:12,180
requests if they got it on a zero<font color="#CCCCCC"> RTT</font>

1566
01:15:09,670 --> 01:15:12,180
exporter

1567
01:15:17,589 --> 01:15:23,780
all right thank<font color="#CCCCCC"> you and a I think some</font>

1568
01:15:22,519 --> 01:15:25,729
of that might be not knowing the answer

1569
01:15:23,780 --> 01:15:27,938
which is<font color="#E5E5E5"> why I</font><font color="#CCCCCC"> think having a third</font>

1570
01:15:25,729 --> 01:15:33,619
option of let's think about this more

1571
01:15:27,939 --> 01:15:36,439
sounds reasonable for the pole I just

1572
01:15:33,619 --> 01:15:41,148
had a quick question about the intuition

1573
01:15:36,439 --> 01:15:44,119
behind the client malware model where so

1574
01:15:41,149 --> 01:15:46,159
is the idea there that your token key

1575
01:15:44,119 --> 01:15:47,869
would be<font color="#E5E5E5"> in a place on the client</font>

1576
01:15:46,159 --> 01:15:51,679
machine that's not accessible by malware

1577
01:15:47,869 --> 01:15:54,679
but does have<font color="#E5E5E5"> an API to sign with it yes</font>

1578
01:15:51,679 --> 01:15:56,929
so<font color="#CCCCCC"> the idea is that the key on the</font>

1579
01:15:54,679 --> 01:15:58,579
malware might be like sort<font color="#E5E5E5"> of backed by</font>

1580
01:15:56,929 --> 01:16:01,429
some hardware module ever but there is

1581
01:15:58,579 --> 01:16:03,438
<font color="#E5E5E5">some API for signing it that the browser</font>

1582
01:16:01,429 --> 01:16:05,179
or whatever client software has access

1583
01:16:03,439 --> 01:16:07,010
to which the client malware can run at

1584
01:16:05,179 --> 01:16:09,320
<font color="#E5E5E5">same privileges as that software so</font>

1585
01:16:07,010 --> 01:16:11,300
similarly has access to do signing

1586
01:16:09,320 --> 01:16:13,249
operations with private and this is the

1587
01:16:11,300 --> 01:16:16,129
model that browsers are using to

1588
01:16:13,249 --> 01:16:19,550
implement this I think it depends on<font color="#E5E5E5"> who</font>

1589
01:16:16,129 --> 01:16:21,108
you ask andreypopov<font color="#CCCCCC"> microsoft defend</font>

1590
01:16:19,550 --> 01:16:24,919
definitely<font color="#E5E5E5"> this depends on who you ask</font>

1591
01:16:21,109 --> 01:16:26,570
in IE and age we use stronger

1592
01:16:24,919 --> 01:16:29,329
protections for the token binding key

1593
01:16:26,570 --> 01:16:30,709
then for the cookies so malware that can

1594
01:16:29,329 --> 01:16:33,499
access the cookies cannot necessarily

1595
01:16:30,709 --> 01:16:37,039
get that since<font color="#CCCCCC"> the token by ninky so</font>

1596
01:16:33,499 --> 01:16:38,570
within but but they do have access<font color="#CCCCCC"> to</font>

1597
01:16:37,039 --> 01:16:41,780
sign because the application you know

1598
01:16:38,570 --> 01:16:46,369
process is supposed to sign so yep the

1599
01:16:41,780 --> 01:16:48,199
sort<font color="#E5E5E5"> of a chrome view of that is that</font>

1600
01:16:46,369 --> 01:16:49,759
like if<font color="#CCCCCC"> you have malware that can really</font>

1601
01:16:48,199 --> 01:16:51,978
cut these ominously<font color="#CCCCCC"> can read the token</font>

1602
01:16:49,760 --> 01:16:54,729
binding keys on disk and we're not

1603
01:16:51,979 --> 01:16:57,469
really trying to protect against that um

1604
01:16:54,729 --> 01:16:59,689
<font color="#E5E5E5">it's about I endure I just wanted to ask</font>

1605
01:16:57,469 --> 01:17:01,729
for<font color="#CCCCCC"> a quick clarification by always</font>

1606
01:16:59,689 --> 01:17:03,530
<font color="#CCCCCC">using the or gate</font><font color="#E5E5E5"> supported you mean by</font>

1607
01:17:01,729 --> 01:17:04,820
that<font color="#E5E5E5"> even if you have access to the</font><font color="#CCCCCC"> one</font>

1608
01:17:03,530 --> 01:17:07,159
<font color="#CCCCCC">arc you get supportive you will use the</font>

1609
01:17:04,820 --> 01:17:10,969
architects<font color="#CCCCCC"> porter yes so I mean on a</font>

1610
01:17:07,159 --> 01:17:12,799
connection where 0 RT t data is accepted

1611
01:17:10,969 --> 01:17:15,019
by the server and token binding is

1612
01:17:12,800 --> 01:17:16,879
negotiated 0hd expert it will be used

1613
01:17:15,019 --> 01:17:18,979
for<font color="#E5E5E5"> the whole connection if CR HT data</font>

1614
01:17:16,879 --> 01:17:21,260
is rejected on<font color="#CCCCCC"> the connection</font><font color="#E5E5E5"> or not</font>

1615
01:17:18,979 --> 01:17:23,300
attempted at all then we'd still use the

1616
01:17:21,260 --> 01:17:25,189
normal exporter so my<font color="#CCCCCC"> question is</font><font color="#E5E5E5"> that</font>

1617
01:17:23,300 --> 01:17:27,530
<font color="#CCCCCC">uh why isn't there a third option which</font>

1618
01:17:25,189 --> 01:17:29,359
is that you if you have access to one

1619
01:17:27,530 --> 01:17:30,179
RDX or use the one hour to get exported

1620
01:17:29,359 --> 01:17:34,260
access<font color="#E5E5E5"> is</font>

1621
01:17:30,180 --> 01:17:37,050
00 but the server can choose how long it

1622
01:17:34,260 --> 01:17:38,460
is actually valid for like the 0 RT to

1623
01:17:37,050 --> 01:17:40,230
explore to how long<font color="#E5E5E5"> is valid for so for</font>

1624
01:17:38,460 --> 01:17:43,230
<font color="#E5E5E5">example instead of signing 307 the</font>

1625
01:17:40,230 --> 01:17:44,700
<font color="#CCCCCC">server could implicitly use its RTP</font>

1626
01:17:43,230 --> 01:17:47,910
calculation estimate to say like hey I

1627
01:17:44,700 --> 01:17:49,650
expected one our TV this would have this

1628
01:17:47,910 --> 01:17:52,380
should have come in the<font color="#CCCCCC"> monarchy</font>

1629
01:17:49,650 --> 01:17:54,929
<font color="#CCCCCC">exported requester come in by now that</font>

1630
01:17:52,380 --> 01:17:58,050
sounds<font color="#CCCCCC"> very similar to the current</font>

1631
01:17:54,930 --> 01:18:00,060
language of switching exporter's it adds

1632
01:17:58,050 --> 01:18:01,980
a complication of<font color="#CCCCCC"> these servers now I</font>

1633
01:18:00,060 --> 01:18:04,740
<font color="#E5E5E5">think sending some signal to the client</font>

1634
01:18:01,980 --> 01:18:07,769
that says it<font color="#E5E5E5"> only is one RCT exporter</font>

1635
01:18:04,740 --> 01:18:10,320
from here on out it it does allow the

1636
01:18:07,770 --> 01:18:11,820
server to know I'm not suggesting an

1637
01:18:10,320 --> 01:18:15,269
explicit signal at all I'm suggesting

1638
01:18:11,820 --> 01:18:18,870
just that the server ratchets tries zio

1639
01:18:15,270 --> 01:18:20,460
<font color="#CCCCCC">RT one Arkady both on HTTP message that</font>

1640
01:18:18,870 --> 01:18:22,290
it gets so it tries to validate against

1641
01:18:20,460 --> 01:18:24,840
the<font color="#CCCCCC"> order today exporter</font><font color="#E5E5E5"> as a valued one</font>

1642
01:18:22,290 --> 01:18:26,460
RT exporter and then after some amount

1643
01:18:24,840 --> 01:18:28,140
of<font color="#E5E5E5"> time it says like sorry there where</font>

1644
01:18:26,460 --> 01:18:30,840
<font color="#CCCCCC">did they export not valid anymore like</font>

1645
01:18:28,140 --> 01:18:32,880
go<font color="#CCCCCC"> away like if there's narrow it sends</font>

1646
01:18:30,840 --> 01:18:35,280
a 307 which it can do anywhere doesn't

1647
01:18:32,880 --> 01:18:39,420
need like token binding support for that

1648
01:18:35,280 --> 01:18:43,830
um so it can it has it has this you can

1649
01:18:39,420 --> 01:18:45,810
do this<font color="#E5E5E5"> in any case yeah I think that's</font>

1650
01:18:43,830 --> 01:18:48,330
roughly what we have here it I don't

1651
01:18:45,810 --> 01:18:50,520
know if we would need extra language to

1652
01:18:48,330 --> 01:18:51,750
say that a server can do that eh I think

1653
01:18:50,520 --> 01:18:58,200
that's sort<font color="#E5E5E5"> of in these</font><font color="#CCCCCC"> forum adds</font>

1654
01:18:51,750 --> 01:19:01,920
complexity space or it yeah I'm saying

1655
01:18:58,200 --> 01:19:04,019
that<font color="#E5E5E5"> like well it's not it's an argument</font>

1656
01:19:01,920 --> 01:19:06,840
against saying that always do<font color="#E5E5E5"> 0r XD</font>

1657
01:19:04,020 --> 01:19:09,750
exporter it doesn't like that's a third

1658
01:19:06,840 --> 01:19:14,220
option right so if Okafor humming on a

1659
01:19:09,750 --> 01:19:17,070
fourth option<font color="#E5E5E5"> sorry I mean uh if we're</font>

1660
01:19:14,220 --> 01:19:18,720
humming on options and why<font color="#E5E5E5"> isn't that an</font>

1661
01:19:17,070 --> 01:19:20,759
option to choose from hey I think<font color="#CCCCCC"> that</font>

1662
01:19:18,720 --> 01:19:22,650
<font color="#E5E5E5">option is sufficiently similar to the</font>

1663
01:19:20,760 --> 01:19:26,460
existing object work we're going<font color="#E5E5E5"> to run</font>

1664
01:19:22,650 --> 01:19:28,710
out of time for Brian so I<font color="#CCCCCC"> think that we</font>

1665
01:19:26,460 --> 01:19:30,720
<font color="#CCCCCC">proved that we don't actually</font><font color="#E5E5E5"> have any</font>

1666
01:19:28,710 --> 01:19:32,490
kind<font color="#E5E5E5"> of consensus</font><font color="#CCCCCC"> okay further</font>

1667
01:19:30,720 --> 01:19:36,000
conversation about this on<font color="#CCCCCC"> the list</font>

1668
01:19:32,490 --> 01:19:40,139
would be useful because as<font color="#E5E5E5"> I had a sense</font>

1669
01:19:36,000 --> 01:19:42,600
not everybody is it I don't know that<font color="#E5E5E5"> we</font>

1670
01:19:40,140 --> 01:19:43,830
<font color="#E5E5E5">can actually formulate binary binary</font>

1671
01:19:42,600 --> 01:19:47,120
things on

1672
01:19:43,830 --> 01:19:49,320
the first one about cooking a quarter

1673
01:19:47,120 --> 01:19:53,160
there another one that he wanted us to

1674
01:19:49,320 --> 01:19:57,150
be there was another one on the last

1675
01:19:53,160 --> 01:19:58,920
slide slide 9 and this was clarifying

1676
01:19:57,150 --> 01:20:01,559
language around negotiation so I<font color="#CCCCCC"> think</font>

1677
01:19:58,920 --> 01:20:02,730
<font color="#E5E5E5">that's just an editorial point and can</font>

1678
01:20:01,560 --> 01:20:06,780
<font color="#CCCCCC">you do that</font><font color="#E5E5E5"> on the list thank you very</font>

1679
01:20:02,730 --> 01:20:11,610
much<font color="#CCCCCC"> okay thank you and our next</font><font color="#E5E5E5"> guest</font>

1680
01:20:06,780 --> 01:20:14,340
participant will be at the marquee spot

1681
01:20:11,610 --> 01:20:19,639
<font color="#E5E5E5">on last with</font><font color="#CCCCCC"> 10 months you know you</font>

1682
01:20:14,340 --> 01:20:19,640
shouldn't mark the spot mean

1683
01:20:45,790 --> 01:20:54,699
right

1684
01:20:47,800 --> 01:21:13,409
all right uh yeah that's yeah the wrong

1685
01:20:54,699 --> 01:21:19,860
songs yeah pretty steady six lights<font color="#E5E5E5"> yeah</font>

1686
01:21:13,409 --> 01:21:19,860
<font color="#E5E5E5">I think</font>

1687
01:21:35,119 --> 01:21:41,119
you can or just bring your laptop off

1688
01:21:39,439 --> 01:21:47,959
the<font color="#E5E5E5"> wolf plugging and we're running</font>

1689
01:21:41,119 --> 01:22:02,478
<font color="#E5E5E5">short on time this you have a video</font>

1690
01:21:47,959 --> 01:22:04,999
adapter<font color="#CCCCCC"> i have an hdmi cable the baby</font>

1691
01:22:02,479 --> 01:22:07,689
thing<font color="#CCCCCC"> is you but</font><font color="#E5E5E5"> if somebody has like</font>

1692
01:22:04,999 --> 01:22:16,429
you needed to some peanuts reply that

1693
01:22:07,689 --> 01:22:19,719
<font color="#E5E5E5">displayport to begin you slippery here</font>

1694
01:22:16,429 --> 01:22:19,719
Brian plugin

1695
01:22:32,090 --> 01:22:37,889
<font color="#E5E5E5">kagu where we are</font><font color="#CCCCCC"> H</font><font color="#E5E5E5"> tiesto combining and</font>

1696
01:22:35,639 --> 01:22:39,809
feel terminating reverse proxies<font color="#E5E5E5"> I'll go</font>

1697
01:22:37,889 --> 01:22:41,579
to Mexico so the problem here problem

1698
01:22:39,809 --> 01:22:44,190
statement is a lot of HTTP is

1699
01:22:41,579 --> 01:22:55,769
applications are I need to read my own

1700
01:22:44,190 --> 01:22:57,750
notes you go back oftentimes

1701
01:22:55,770 --> 01:22:59,400
applications are deployed behind some

1702
01:22:57,750 --> 01:23:02,579
kind of reverse proxy<font color="#E5E5E5"> that actually does</font>

1703
01:22:59,400 --> 01:23:04,530
the<font color="#E5E5E5"> TLS termination um for these</font>

1704
01:23:02,579 --> 01:23:05,519
applications actually do all the kinds

1705
01:23:04,530 --> 01:23:07,559
of things you'd want to do with<font color="#CCCCCC"> tow</font>

1706
01:23:05,520 --> 01:23:09,690
combining something needs to be passed

1707
01:23:07,559 --> 01:23:11,880
from the front end terminating TLS to

1708
01:23:09,690 --> 01:23:14,610
the back end in the general case anyway

1709
01:23:11,880 --> 01:23:15,900
there's a few things<font color="#E5E5E5"> you could you could</font>

1710
01:23:14,610 --> 01:23:17,159
do differently but sort of<font color="#E5E5E5"> the general</font>

1711
01:23:15,900 --> 01:23:19,860
case of supporting this you need<font color="#E5E5E5"> to pass</font>

1712
01:23:17,159 --> 01:23:21,690
some information between the two um and

1713
01:23:19,860 --> 01:23:23,400
in the absence of some standardized or

1714
01:23:21,690 --> 01:23:25,230
documented way of doing<font color="#CCCCCC"> this everybody's</font>

1715
01:23:23,400 --> 01:23:27,780
going<font color="#CCCCCC"> to do it differently this is bad</font>

1716
01:23:25,230 --> 01:23:29,039
<font color="#E5E5E5">for an operability for security and you</font>

1717
01:23:27,780 --> 01:23:30,780
know<font color="#E5E5E5"> opportunity to get things wrong</font>

1718
01:23:29,039 --> 01:23:34,619
just as an example of it recently

1719
01:23:30,780 --> 01:23:36,509
working on client mutual client TLS

1720
01:23:34,619 --> 01:23:37,889
authentication and passing that<font color="#E5E5E5"> between</font>

1721
01:23:36,510 --> 01:23:40,280
front and a back any component and

1722
01:23:37,889 --> 01:23:42,480
everyone does it differently um and now

1723
01:23:40,280 --> 01:23:43,409
we've been<font color="#CCCCCC"> pulling in one product and</font>

1724
01:23:42,480 --> 01:23:44,610
our other product has to do it

1725
01:23:43,409 --> 01:23:45,598
differently than that one to match up

1726
01:23:44,610 --> 01:23:46,650
with the way the first<font color="#E5E5E5"> one did it</font>

1727
01:23:45,599 --> 01:23:49,020
<font color="#E5E5E5">because it was based on a de facto</font>

1728
01:23:46,650 --> 01:23:50,699
implementation of how<font color="#CCCCCC"> Apache did it and</font>

1729
01:23:49,020 --> 01:23:52,409
it's just it's a mess and<font color="#E5E5E5"> I'm looking to</font>

1730
01:23:50,699 --> 01:23:53,460
<font color="#E5E5E5">avoid that</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of mess for these kinds</font>

1731
01:23:52,409 --> 01:23:56,400
of things going<font color="#E5E5E5"> forward with tow</font>

1732
01:23:53,460 --> 01:24:02,250
combining however that may be and so

1733
01:23:56,400 --> 01:24:04,320
next slide please um in<font color="#E5E5E5"> so we got to a</font>

1734
01:24:02,250 --> 01:24:06,119
consensus to work on the problem that

1735
01:24:04,320 --> 01:24:07,590
<font color="#E5E5E5">was as far as we got um because I didn't</font>

1736
01:24:06,119 --> 01:24:10,848
have<font color="#CCCCCC"> a draft</font><font color="#E5E5E5"> or anything but I took</font><font color="#CCCCCC"> that</font>

1737
01:24:07,590 --> 01:24:14,489
and ran with it I wrote up a 0-0 draft

1738
01:24:10,849 --> 01:24:16,739
and basically how this works is there's

1739
01:24:14,489 --> 01:24:18,780
a new HTTP header introduced that's to

1740
01:24:16,739 --> 01:24:20,549
be passed between the reverse proxy and

1741
01:24:18,780 --> 01:24:23,489
the<font color="#CCCCCC"> backend</font><font color="#E5E5E5"> application called token</font>

1742
01:24:20,550 --> 01:24:25,500
binding context it's a base64 URL

1743
01:24:23,489 --> 01:24:28,199
encoded bite sequence and basically that

1744
01:24:25,500 --> 01:24:30,000
byte sequence<font color="#E5E5E5"> is a concatenation of the</font>

1745
01:24:28,199 --> 01:24:32,280
token binding protocol protocol version

1746
01:24:30,000 --> 01:24:33,869
that was negotiated the token binding

1747
01:24:32,280 --> 01:24:36,269
key parameters that was negotiated<font color="#CCCCCC"> which</font>

1748
01:24:33,869 --> 01:24:38,429
<font color="#CCCCCC">is</font><font color="#E5E5E5"> just one bite and the km value on</font>

1749
01:24:36,270 --> 01:24:40,590
this is a<font color="#E5E5E5"> sufficient amount of</font>

1750
01:24:38,429 --> 01:24:43,170
information for<font color="#E5E5E5"> the back end application</font>

1751
01:24:40,590 --> 01:24:47,130
actually validate the

1752
01:24:43,170 --> 01:24:48,390
so combining and the token binding

1753
01:24:47,130 --> 01:24:50,300
header the<font color="#CCCCCC"> sacto combining header</font>

1754
01:24:48,390 --> 01:24:52,710
including that's provided and referred

1755
01:24:50,300 --> 01:24:54,300
it requires some level of trust between

1756
01:24:52,710 --> 01:24:56,670
the reverse proxy in the back end

1757
01:24:54,300 --> 01:24:58,020
application um that they're<font color="#E5E5E5"> not sending</font>

1758
01:24:56,670 --> 01:24:59,969
it to the wrong people are accepting<font color="#E5E5E5"> the</font>

1759
01:24:58,020 --> 01:25:01,590
inbound from somebody else and the

1760
01:24:59,969 --> 01:25:03,090
reverse proxy also needs to sanitize

1761
01:25:01,590 --> 01:25:05,130
this header so it can't be just pooped

1762
01:25:03,090 --> 01:25:08,190
and sent through from the from you know

1763
01:25:05,130 --> 01:25:10,230
the<font color="#E5E5E5"> actual original client quick example</font>

1764
01:25:08,190 --> 01:25:11,790
it looks like that you break it out

1765
01:25:10,230 --> 01:25:13,739
you've got<font color="#E5E5E5"> the you know the version</font>

1766
01:25:11,790 --> 01:25:17,850
their draft 13 this came from a live

1767
01:25:13,739 --> 01:25:21,989
example 2 is the UC PSAP 256 and<font color="#E5E5E5"> then</font>

1768
01:25:17,850 --> 01:25:24,210
the<font color="#CCCCCC"> ECAM follows that arm next</font><font color="#E5E5E5"> please</font>

1769
01:25:21,989 --> 01:25:26,669
and so in real life someone actually

1770
01:25:24,210 --> 01:25:28,050
implemented this already they have it

1771
01:25:26,670 --> 01:25:30,239
shown up here<font color="#E5E5E5"> the bottom one is the</font>

1772
01:25:28,050 --> 01:25:34,320
token binding context this is a mod

1773
01:25:30,239 --> 01:25:37,320
token binding<font color="#CCCCCC"> plug-in for Apache by a</font>

1774
01:25:34,320 --> 01:25:39,150
former colleague of mine Hans I think he

1775
01:25:37,320 --> 01:25:42,960
<font color="#E5E5E5">is on the line so Thank You Hans he's</font>

1776
01:25:39,150 --> 01:25:47,610
got it working um which is nice it's not

1777
01:25:42,960 --> 01:25:49,860
too difficult next slide<font color="#E5E5E5"> please um but</font>

1778
01:25:47,610 --> 01:25:51,389
he and some others recently<font color="#E5E5E5"> have raised</font>

1779
01:25:49,860 --> 01:25:54,809
some questions<font color="#E5E5E5"> about whether this is</font>

1780
01:25:51,390 --> 01:25:56,580
<font color="#E5E5E5">really the right approach and my my goal</font>

1781
01:25:54,810 --> 01:25:58,080
really is just how kind of one way of

1782
01:25:56,580 --> 01:25:59,580
doing it<font color="#E5E5E5"> I'm not married to one or the</font>

1783
01:25:58,080 --> 01:26:03,059
other but but there's kind of two

1784
01:25:59,580 --> 01:26:04,260
general ways to tackle this one is the

1785
01:26:03,060 --> 01:26:06,390
current one where the backend

1786
01:26:04,260 --> 01:26:09,030
application validates the<font color="#E5E5E5"> tow combining</font>

1787
01:26:06,390 --> 01:26:10,830
message itself and it does this by being

1788
01:26:09,030 --> 01:26:13,199
provided this additional data context

1789
01:26:10,830 --> 01:26:16,710
from the front end<font color="#E5E5E5"> on this keeps that</font>

1790
01:26:13,199 --> 01:26:18,660
took<font color="#CCCCCC"> a TTR</font><font color="#E5E5E5"> p the TLS terminated reverse</font>

1791
01:26:16,710 --> 01:26:20,820
proxy velit of<font color="#CCCCCC"> Li</font><font color="#E5E5E5"> lightweight it doesn't</font>

1792
01:26:18,660 --> 01:26:22,469
have<font color="#CCCCCC"> to do any extra graphic work on the</font>

1793
01:26:20,820 --> 01:26:24,679
token binding header it doesn't have to

1794
01:26:22,469 --> 01:26:28,469
parse the HTTP header pull it apart

1795
01:26:24,679 --> 01:26:31,050
which is I think a goal that many have

1796
01:26:28,469 --> 01:26:32,699
stated either explicitly or implicitly

1797
01:26:31,050 --> 01:26:35,160
for this is to keep that layer as light

1798
01:26:32,699 --> 01:26:38,089
as possible I think it even one<font color="#E5E5E5"> point</font>

1799
01:26:35,160 --> 01:26:42,300
<font color="#CCCCCC">durkee said that</font><font color="#E5E5E5"> Google's implementation</font>

1800
01:26:38,090 --> 01:26:45,000
does validate the the<font color="#E5E5E5"> tow combining at</font>

1801
01:26:42,300 --> 01:26:46,830
the front end and<font color="#CCCCCC"> that in retrospect you</font>

1802
01:26:45,000 --> 01:26:51,810
might consider doing<font color="#E5E5E5"> that different is</font>

1803
01:26:46,830 --> 01:26:54,030
that still true yeah maybe<font color="#CCCCCC"> okay so that</font>

1804
01:26:51,810 --> 01:26:55,260
that's the kind of the main main goal

1805
01:26:54,030 --> 01:26:56,639
here<font color="#E5E5E5"> um it does</font>

1806
01:26:55,260 --> 01:27:00,270
<font color="#CCCCCC">introduce</font><font color="#E5E5E5"> maybe some problems</font>

1807
01:26:56,640 --> 01:27:01,890
reconciling and updating supported he

1808
01:27:00,270 --> 01:27:04,610
parameter types if you have a lot of

1809
01:27:01,890 --> 01:27:07,500
different<font color="#CCCCCC"> applications</font><font color="#E5E5E5"> behind one</font>

1810
01:27:04,610 --> 01:27:09,240
reverse proxy and you want to add a new

1811
01:27:07,500 --> 01:27:10,800
<font color="#E5E5E5">key parameter type all those different</font>

1812
01:27:09,240 --> 01:27:12,269
applications have to be able<font color="#E5E5E5"> to support</font>

1813
01:27:10,800 --> 01:27:14,280
<font color="#E5E5E5">it in order to make this</font><font color="#CCCCCC"> work it</font><font color="#E5E5E5"> might</font>

1814
01:27:12,270 --> 01:27:16,890
make that both the management of it and

1815
01:27:14,280 --> 01:27:19,530
rolling out new ones rather difficult it

1816
01:27:16,890 --> 01:27:21,420
also potentially is you know what feels

1817
01:27:19,530 --> 01:27:22,559
like a lot of redundancy in trying to

1818
01:27:21,420 --> 01:27:24,750
make all these different back-end

1819
01:27:22,560 --> 01:27:26,040
applications capable of processing and

1820
01:27:24,750 --> 01:27:29,130
validating the token by name header

1821
01:27:26,040 --> 01:27:32,340
which is arguably a a little bit

1822
01:27:29,130 --> 01:27:33,870
difficult um the alternative approach at

1823
01:27:32,340 --> 01:27:35,910
some level would be<font color="#E5E5E5"> to have the reverse</font>

1824
01:27:33,870 --> 01:27:39,090
proxy validate the token binding and

1825
01:27:35,910 --> 01:27:41,010
pass back some information<font color="#CCCCCC"> about it</font>

1826
01:27:39,090 --> 01:27:42,810
either the token binding IDs itself the

1827
01:27:41,010 --> 01:27:43,950
whole message maybe the hash of<font color="#CCCCCC"> the</font>

1828
01:27:42,810 --> 01:27:45,120
message i'm not sure exactly<font color="#CCCCCC"> but</font>

1829
01:27:43,950 --> 01:27:47,460
something basically where the work

1830
01:27:45,120 --> 01:27:49,230
happens on the front end and some sort

1831
01:27:47,460 --> 01:27:50,880
of digested version of the hook and

1832
01:27:49,230 --> 01:27:54,059
bindings get past back to<font color="#E5E5E5"> the back end</font>

1833
01:27:50,880 --> 01:27:56,460
um this is way simpler for applications

1834
01:27:54,060 --> 01:27:58,320
I think it's a lot easier to deal with

1835
01:27:56,460 --> 01:27:59,850
<font color="#E5E5E5">the support key parameter types because</font>

1836
01:27:58,320 --> 01:28:01,440
they're all isolated at the front layer

1837
01:27:59,850 --> 01:28:03,840
you can upgrade<font color="#CCCCCC"> that everything works</font>

1838
01:28:01,440 --> 01:28:06,660
you<font color="#CCCCCC"> just pack so combining back to the</font>

1839
01:28:03,840 --> 01:28:09,780
to the<font color="#E5E5E5"> back end the downside of it is</font>

1840
01:28:06,660 --> 01:28:12,900
it's definitely less light on the token

1841
01:28:09,780 --> 01:28:17,030
up too many<font color="#CCCCCC"> teas excuse me the TLS</font>

1842
01:28:12,900 --> 01:28:19,110
terminating reverse proxy arm and that

1843
01:28:17,030 --> 01:28:20,969
that violates a goal<font color="#E5E5E5"> that at least some</font>

1844
01:28:19,110 --> 01:28:23,549
have definitely said they're interested

1845
01:28:20,970 --> 01:28:25,800
in and I've had some people go so far as

1846
01:28:23,550 --> 01:28:29,490
to say that the draft should describe

1847
01:28:25,800 --> 01:28:31,170
how to do both<font color="#E5E5E5"> um which i would</font><font color="#CCCCCC"> really</font>

1848
01:28:29,490 --> 01:28:32,790
prefer to have just a single way of

1849
01:28:31,170 --> 01:28:35,070
doing it whatever<font color="#CCCCCC"> it</font><font color="#E5E5E5"> is rather than both</font>

1850
01:28:32,790 --> 01:28:38,610
but it's been thrown<font color="#E5E5E5"> out there as a</font>

1851
01:28:35,070 --> 01:28:41,009
compromise of sorts so<font color="#E5E5E5"> um the current</font>

1852
01:28:38,610 --> 01:28:43,440
draft is the the first<font color="#CCCCCC"> approach that the</font>

1853
01:28:41,010 --> 01:28:45,920
second one I think is totally valid

1854
01:28:43,440 --> 01:28:51,000
there's trade-offs between the two um

1855
01:28:45,920 --> 01:28:54,000
yeah is it is now a good time yeah hey

1856
01:28:51,000 --> 01:28:56,250
pachuco Google I wanted us to radiate

1857
01:28:54,000 --> 01:28:58,950
what you just said<font color="#CCCCCC"> that the second</font>

1858
01:28:56,250 --> 01:29:01,590
<font color="#CCCCCC">approach is much cleaner</font><font color="#E5E5E5"> application and</font>

1859
01:28:58,950 --> 01:29:04,110
the fish<font color="#CCCCCC"> shouldn't push the complex</font>

1860
01:29:01,590 --> 01:29:06,270
logic of verification of top and binding

1861
01:29:04,110 --> 01:29:08,610
to each application and just keep it at

1862
01:29:06,270 --> 01:29:10,469
the<font color="#E5E5E5"> top see okay</font>

1863
01:29:08,610 --> 01:29:12,869
so we're going<font color="#E5E5E5"> to we're running out of</font>

1864
01:29:10,469 --> 01:29:16,760
<font color="#CCCCCC">time so we'll cut the line what could</font>

1865
01:29:12,869 --> 01:29:21,059
<font color="#E5E5E5">you say just before after coming yeah</font>

1866
01:29:16,760 --> 01:29:23,580
hey just just before Tony yeah we could

1867
01:29:21,060 --> 01:29:26,280
come on that they just after Tony but

1868
01:29:23,580 --> 01:29:29,820
was that<font color="#CCCCCC"> your last life not quite but um</font>

1869
01:29:26,280 --> 01:29:32,790
so I'm not particularly fussed about

1870
01:29:29,820 --> 01:29:34,530
whether<font color="#E5E5E5"> or not who does the parsing and</font>

1871
01:29:32,790 --> 01:29:37,440
validation but I am fost about the fact

1872
01:29:34,530 --> 01:29:40,110
that if the<font color="#CCCCCC"> the proxy fails the</font>

1873
01:29:37,440 --> 01:29:43,080
striptease properly and<font color="#CCCCCC"> um you have a</font>

1874
01:29:40,110 --> 01:29:45,089
really serious problem and so on as I

1875
01:29:43,080 --> 01:29:46,650
said an email i really be nice if the

1876
01:29:45,090 --> 01:29:48,929
proxy give you some cryptographic<font color="#E5E5E5"> Mecca</font>

1877
01:29:46,650 --> 01:29:51,388
is some<font color="#CCCCCC"> secretory binding did this value</font>

1878
01:29:48,929 --> 01:29:52,560
so that you can sit the client could not

1879
01:29:51,389 --> 01:29:54,420
generate a value which would pass

1880
01:29:52,560 --> 01:29:59,429
through<font color="#E5E5E5"> the proxy and be acceptable with</font>

1881
01:29:54,420 --> 01:30:02,369
application<font color="#CCCCCC"> max signature X or X door</font>

1882
01:29:59,429 --> 01:30:04,949
with a random with random value stop in

1883
01:30:02,369 --> 01:30:06,630
a random value you something your points

1884
01:30:04,949 --> 01:30:08,040
were actually on<font color="#E5E5E5"> the next okay who's to</font>

1885
01:30:06,630 --> 01:30:12,179
raise discussion I'd I'm not sure gonna

1886
01:30:08,040 --> 01:30:16,080
<font color="#E5E5E5">have time I don't think we go yeah I</font>

1887
01:30:12,179 --> 01:30:19,290
agree we don't<font color="#E5E5E5"> have time so the Justin</font>

1888
01:30:16,080 --> 01:30:21,570
richer and so I'm in favor of the first

1889
01:30:19,290 --> 01:30:22,949
approach of sort of doing<font color="#E5E5E5"> the</font>

1890
01:30:21,570 --> 01:30:24,150
calculation and passing it back to the

1891
01:30:22,949 --> 01:30:27,530
applications because that allows the

1892
01:30:24,150 --> 01:30:29,400
applications to do sort<font color="#E5E5E5"> of the full</font>

1893
01:30:27,530 --> 01:30:30,389
processing of these<font color="#E5E5E5"> things and figuring</font>

1894
01:30:29,400 --> 01:30:31,799
out<font color="#E5E5E5"> what they want to do with</font><font color="#CCCCCC"> that</font>

1895
01:30:30,389 --> 01:30:33,000
information<font color="#CCCCCC"> whatnot and I would also</font>

1896
01:30:31,800 --> 01:30:35,090
like to point out<font color="#E5E5E5"> that this does not</font>

1897
01:30:33,000 --> 01:30:38,880
<font color="#E5E5E5">preclude the gateway from also doing</font>

1898
01:30:35,090 --> 01:30:40,650
validation of the of the TLS toe

1899
01:30:38,880 --> 01:30:42,119
combining if it wants<font color="#CCCCCC"> to dig into the</font>

1900
01:30:40,650 --> 01:30:45,059
messages and all of that<font color="#E5E5E5"> stuff as well</font>

1901
01:30:42,119 --> 01:30:49,080
the question then is what can it then

1902
01:30:45,060 --> 01:30:51,420
pass back<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> backend system to say</font>

1903
01:30:49,080 --> 01:30:54,420
that yes I also did this and this is

1904
01:30:51,420 --> 01:30:59,250
<font color="#E5E5E5">where I think that what was just brought</font>

1905
01:30:54,420 --> 01:31:03,060
up is a by<font color="#E5E5E5"> Eric was a really good point</font>

1906
01:30:59,250 --> 01:31:05,850
that if the<font color="#CCCCCC"> Gateway if the Terminator is</font>

1907
01:31:03,060 --> 01:31:08,820
doing something<font color="#E5E5E5"> then the client sitting</font>

1908
01:31:05,850 --> 01:31:10,320
behind it should have some indication

1909
01:31:08,820 --> 01:31:12,000
that that really did come from<font color="#E5E5E5"> the</font>

1910
01:31:10,320 --> 01:31:14,009
Terminator we see the exact same problem

1911
01:31:12,000 --> 01:31:16,320
at the application layer with API

1912
01:31:14,010 --> 01:31:17,670
gateways and all sorts of other messy

1913
01:31:16,320 --> 01:31:19,199
things that people aren't you're

1914
01:31:17,670 --> 01:31:20,310
<font color="#E5E5E5">absolutely right in your intro people</font>

1915
01:31:19,199 --> 01:31:22,239
are going to deploy these things anyway

1916
01:31:20,310 --> 01:31:24,369
so we<font color="#E5E5E5"> should get</font>

1917
01:31:22,239 --> 01:31:26,259
the tools to do this correctly so I

1918
01:31:24,369 --> 01:31:29,380
would like to<font color="#E5E5E5"> see something that mixes</font>

1919
01:31:26,260 --> 01:31:32,170
in keying material from the gateway or

1920
01:31:29,380 --> 01:31:34,630
something like that in generating this

1921
01:31:32,170 --> 01:31:35,949
to prevent injection attacks and lots of

1922
01:31:34,630 --> 01:31:39,730
other things<font color="#E5E5E5"> that we're already seeing</font>

1923
01:31:35,949 --> 01:31:42,190
in other similar spaces so the injection

1924
01:31:39,730 --> 01:31:43,598
attack though is mitigated by sanitizing

1925
01:31:42,190 --> 01:31:45,489
the headers and while there are other

1926
01:31:43,599 --> 01:31:47,260
ways of dealing with it if they're

1927
01:31:45,489 --> 01:31:50,348
properly done it's done if there's other

1928
01:31:47,260 --> 01:31:53,289
ways again with the<font color="#E5E5E5"> I</font><font color="#CCCCCC"> introduce guys at</font>

1929
01:31:50,349 --> 01:31:56,380
a time<font color="#CCCCCC"> and so Tony last word and</font><font color="#E5E5E5"> then I</font>

1930
01:31:53,289 --> 01:31:58,889
suggest you use the you know fine time

1931
01:31:56,380 --> 01:32:01,570
go in a huddle somewhere and their

1932
01:31:58,889 --> 01:32:04,389
respective out Tony nedelin we've

1933
01:32:01,570 --> 01:32:08,110
implemented this different ways within

1934
01:32:04,389 --> 01:32:10,530
Microsoft and one of the issues that we

1935
01:32:08,110 --> 01:32:13,420
<font color="#CCCCCC">have is this doesn't work on untrusted</font>

1936
01:32:10,530 --> 01:32:16,719
endpoints very well at all so that's

1937
01:32:13,420 --> 01:32:18,639
accuse case that just this thing<font color="#E5E5E5"> doesn't</font>

1938
01:32:16,719 --> 01:32:21,070
work we're also not seeing any real need

1939
01:32:18,639 --> 01:32:23,289
for the interoperability aspects of of

1940
01:32:21,070 --> 01:32:26,530
this mainly what we're doing is talking

1941
01:32:23,289 --> 01:32:28,150
to<font color="#CCCCCC"> her own back ends and we want to be</font>

1942
01:32:26,530 --> 01:32:30,280
able to do what<font color="#CCCCCC"> we want to do our own</font>

1943
01:32:28,150 --> 01:32:32,440
way and sometimes we have validation on

1944
01:32:30,280 --> 01:32:34,920
either side of this thing<font color="#E5E5E5"> so we're not</font>

1945
01:32:32,440 --> 01:32:38,259
we don't want to be<font color="#E5E5E5"> locked into this</font>

1946
01:32:34,920 --> 01:32:39,639
<font color="#E5E5E5">particular situation here yet so can you</font>

1947
01:32:38,260 --> 01:32:43,869
mark Tony down as against

1948
01:32:39,639 --> 01:32:46,300
interoperability<font color="#E5E5E5"> all right that's it for</font>

1949
01:32:43,869 --> 01:32:48,848
<font color="#E5E5E5">today come thanks everyone for coming up</font>

1950
01:32:46,300 --> 01:32:50,320
<font color="#CCCCCC">syros</font><font color="#E5E5E5"> next time obviously it does this</font>

1951
01:32:48,849 --> 01:32:52,449
doesn't lock you into anything this<font color="#CCCCCC"> is</font>

1952
01:32:50,320 --> 01:32:53,860
about you know open source and better

1953
01:32:52,449 --> 01:32:55,719
products and<font color="#E5E5E5"> Owen hood so they can</font>

1954
01:32:53,860 --> 01:32:58,420
hurdle together<font color="#CCCCCC"> here's right yeah</font>

1955
01:32:55,719 --> 01:33:01,840
possibly I think so yeah oh and by the

1956
01:32:58,420 --> 01:33:04,090
way it was a chair screw up his mic like

1957
01:33:01,840 --> 01:33:07,059
I don't<font color="#CCCCCC"> care</font><font color="#E5E5E5"> I was gonna go to curdle</font>

1958
01:33:04,090 --> 01:33:09,999
but yeah you know<font color="#CCCCCC"> Kathy moving over to</font>

1959
01:33:07,059 --> 01:33:12,750
me anyway but so you get stick me with

1960
01:33:09,999 --> 01:33:17,429
that case I'll yes<font color="#E5E5E5"> thank you</font>

1961
01:33:12,750 --> 01:33:21,990
I think critically and early and finally

1962
01:33:17,430 --> 01:33:24,410
conquered all on my own fire when you

1963
01:33:21,990 --> 01:33:24,410
cook it out

1964
01:33:30,580 --> 01:33:32,640
you

