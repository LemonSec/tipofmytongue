1
00:00:23,439 --> 00:00:26,160
can y'all hear me

2
00:00:28,800 --> 00:00:31,840
hear you we can hear you ned okay great

3
00:00:31,840 --> 00:00:34,160
i'm gonna uh

4
00:00:34,160 --> 00:00:35,920
let's dive into this so welcome

5
00:00:35,920 --> 00:00:38,480
everybody to the rats working group

6
00:00:38,480 --> 00:00:40,079
meeting

7
00:00:40,079 --> 00:00:43,280
the session is being recorded um

8
00:00:43,280 --> 00:00:45,680
let me uh go through a little bit of the

9
00:00:45,680 --> 00:00:47,520
note well overview just for all so we're

10
00:00:47,520 --> 00:00:48,960
all on the same page

11
00:00:48,960 --> 00:00:50,559
um

12
00:00:50,559 --> 00:00:52,079
it's uh

13
00:00:52,079 --> 00:00:54,480
uh participation in itf you agree to the

14
00:00:54,480 --> 00:00:57,600
following ietf processes and policies

15
00:00:57,600 --> 00:01:01,920
uh any anyone that's aware of uh

16
00:01:01,920 --> 00:01:03,440
uh oitf

17
00:01:03,440 --> 00:01:05,119
contributions that are covered by

18
00:01:05,119 --> 00:01:06,960
patents or patent applications there you

19
00:01:06,960 --> 00:01:08,960
have a duty to disclose that

20
00:01:08,960 --> 00:01:11,200
as a participant in the uh

21
00:01:11,200 --> 00:01:13,520
or an attendee to the ietf activity you

22
00:01:13,520 --> 00:01:14,880
acknowledge that

23
00:01:14,880 --> 00:01:16,880
written audio video and photographic

24
00:01:16,880 --> 00:01:18,960
records of the meeting may be made

25
00:01:18,960 --> 00:01:20,799
public personal information that you

26
00:01:20,799 --> 00:01:22,400
provide to ietf will be handled in

27
00:01:22,400 --> 00:01:26,000
accordance with ietf privacy statement

28
00:01:26,000 --> 00:01:27,759
as a participant and attendee you agree

29
00:01:27,759 --> 00:01:31,200
to work respectfully with others

30
00:01:34,159 --> 00:01:37,840
and a few notes for a meeting tips just

31
00:01:37,840 --> 00:01:40,400
make sure your audit your video is off

32
00:01:40,400 --> 00:01:43,360
unless you're sharing the presentation

33
00:01:43,360 --> 00:01:46,240
mute your microphone using

34
00:01:46,240 --> 00:01:49,200
unless you're speaking use a headset

35
00:01:49,200 --> 00:01:51,600
strongly recommended

36
00:01:51,600 --> 00:01:53,280
a session blue sheet is automatically

37
00:01:53,280 --> 00:01:55,439
generated based on the ietf data tracker

38
00:01:55,439 --> 00:01:57,040
logins

39
00:01:57,040 --> 00:01:58,960
chat rooms and media echo are connected

40
00:01:58,960 --> 00:02:01,119
to the jabra chat rooms on ietf data

41
00:02:01,119 --> 00:02:02,640
tracker

42
00:02:02,640 --> 00:02:05,119
and there's more information there as

43
00:02:05,119 --> 00:02:06,880
well

44
00:02:06,880 --> 00:02:09,520
just a quick review of the code conduct

45
00:02:09,520 --> 00:02:14,800
right itf participants are expected to

46
00:02:14,800 --> 00:02:16,879
respect and

47
00:02:16,879 --> 00:02:19,280
courteously and be courageous to their

48
00:02:19,280 --> 00:02:21,840
colleagues at all

49
00:02:21,840 --> 00:02:23,040
have

50
00:02:23,040 --> 00:02:24,000
ex

51
00:02:24,000 --> 00:02:25,280
participants are expected to have

52
00:02:25,280 --> 00:02:28,000
impersonal discussion participants

53
00:02:28,000 --> 00:02:30,080
devise solutions for the global internet

54
00:02:30,080 --> 00:02:32,319
and meet the needs of diverse technical

55
00:02:32,319 --> 00:02:34,160
and operational environments

56
00:02:34,160 --> 00:02:35,760
participants are prepared to contribute

57
00:02:35,760 --> 00:02:39,679
to the ongoing work of the of the group

58
00:02:40,959 --> 00:02:42,400
the uh

59
00:02:42,400 --> 00:02:44,720
uh it's an information sheet all all

60
00:02:44,720 --> 00:02:46,560
folks are are

61
00:02:46,560 --> 00:02:48,879
available have that available uh thanks

62
00:02:48,879 --> 00:02:52,959
to thomas fasadi and michael richardson

63
00:02:52,959 --> 00:02:53,840
for

64
00:02:53,840 --> 00:02:55,920
volunteering to scribe

65
00:02:55,920 --> 00:02:58,159
and take notes for this meeting

66
00:02:58,159 --> 00:03:00,800
i will say michael uh you're up

67
00:03:00,800 --> 00:03:02,959
your first speaker and so we'll need

68
00:03:02,959 --> 00:03:04,400
someone else to volunteer

69
00:03:04,400 --> 00:03:06,959
at least during that first

70
00:03:06,959 --> 00:03:09,680
talk so if somebody could

71
00:03:09,680 --> 00:03:12,879
could do that that would be great

72
00:03:13,760 --> 00:03:15,280
and then we're going to jump into our

73
00:03:15,280 --> 00:03:18,280
agenda

74
00:03:20,080 --> 00:03:23,760
so uh we have a full day today so

75
00:03:23,760 --> 00:03:27,360
please be uh you know sensitive to time

76
00:03:27,360 --> 00:03:28,400
uh

77
00:03:28,400 --> 00:03:29,680
the a lot of time for the various

78
00:03:29,680 --> 00:03:31,519
speakers and

79
00:03:31,519 --> 00:03:33,519
we'll try to try to fit it all in so

80
00:03:33,519 --> 00:03:35,280
first up is

81
00:03:35,280 --> 00:03:37,280
a rat's architecture overview with

82
00:03:37,280 --> 00:03:40,159
michael richardson

83
00:03:40,480 --> 00:03:42,879
and i can i believe i have those slides

84
00:03:42,879 --> 00:03:44,720
here

85
00:03:44,720 --> 00:03:47,760
so michael

86
00:03:47,760 --> 00:03:51,280
okay you're going to project them

87
00:03:51,280 --> 00:03:52,720
well there's really only one slide

88
00:03:52,720 --> 00:03:54,959
there's really no change since april

89
00:03:54,959 --> 00:03:57,200
uh we've been waiting for the shepherd

90
00:03:57,200 --> 00:03:59,439
write-up uh to finish and we're waiting

91
00:03:59,439 --> 00:04:02,640
for the isg reviews just to start

92
00:04:02,640 --> 00:04:06,560
um and the design team hasn't met since

93
00:04:06,560 --> 00:04:08,640
april um

94
00:04:08,640 --> 00:04:11,840
uh anticipated uh multiple times that we

95
00:04:11,840 --> 00:04:14,159
would have to restart when we got uh

96
00:04:14,159 --> 00:04:16,079
area director reviews

97
00:04:16,079 --> 00:04:17,839
um

98
00:04:17,839 --> 00:04:21,040
but uh we haven't gotten there and we're

99
00:04:21,040 --> 00:04:22,479
not sure why

100
00:04:22,479 --> 00:04:25,440
we haven't gotten there um

101
00:04:25,440 --> 00:04:28,479
and i guess there's another new ipr

102
00:04:28,479 --> 00:04:30,320
claim that has been the chairs have

103
00:04:30,320 --> 00:04:32,800
posted about um

104
00:04:32,800 --> 00:04:35,280
and i have no particular opinion about

105
00:04:35,280 --> 00:04:36,000
it

106
00:04:36,000 --> 00:04:38,639
um and so it's really just discussion of

107
00:04:38,639 --> 00:04:41,120
what it is we're waiting for and uh

108
00:04:41,120 --> 00:04:42,400
what's going on

109
00:04:42,400 --> 00:04:43,759
um

110
00:04:43,759 --> 00:04:47,280
and that's about it

111
00:04:47,280 --> 00:04:50,560
go ahead kathleen good morning so

112
00:04:50,560 --> 00:04:54,800
when as shepherd i did the call for ipr

113
00:04:54,800 --> 00:04:58,160
i did receive a message um that we need

114
00:04:58,160 --> 00:05:00,560
to wait until around december

115
00:05:00,560 --> 00:05:02,479
and so

116
00:05:02,479 --> 00:05:04,800
that's what happened and now we have the

117
00:05:04,800 --> 00:05:06,320
ipr claim

118
00:05:06,320 --> 00:05:08,160
from intel that the working group has to

119
00:05:08,160 --> 00:05:11,520
decide what their decisions are

120
00:05:11,520 --> 00:05:13,520
as to you know what we do on that go

121
00:05:13,520 --> 00:05:16,720
forward so that that was the hold up

122
00:05:16,720 --> 00:05:17,680
and so

123
00:05:17,680 --> 00:05:19,600
um that that person

124
00:05:19,600 --> 00:05:21,280
didn't send it out to the group they

125
00:05:21,280 --> 00:05:23,440
sent it individually it wasn't really my

126
00:05:23,440 --> 00:05:25,039
place to put that out to the group it

127
00:05:25,039 --> 00:05:27,440
was that person's place right so that

128
00:05:27,440 --> 00:05:30,080
was the hold up

129
00:05:30,479 --> 00:05:31,440
okay

130
00:05:31,440 --> 00:05:33,759
i apologize but it was out of control

131
00:05:33,759 --> 00:05:35,600
because that's you know ipr stuff we

132
00:05:35,600 --> 00:05:39,280
have to um we have to address

133
00:05:39,280 --> 00:05:41,199
okay uh it would have been great for the

134
00:05:41,199 --> 00:05:42,560
group to know that we have to wait to

135
00:05:42,560 --> 00:05:44,400
december even if uh

136
00:05:44,400 --> 00:05:46,400
we didn't know why um that would have

137
00:05:46,400 --> 00:05:47,600
been wonderful

138
00:05:47,600 --> 00:05:48,560
um

139
00:05:48,560 --> 00:05:49,199
do

140
00:05:49,199 --> 00:05:50,960
is there still some additional area

141
00:05:50,960 --> 00:05:52,800
reviews that we should have been getting

142
00:05:52,800 --> 00:05:55,680
at this point though

143
00:05:56,319 --> 00:05:59,199
the area reviews kick in once it goes

144
00:05:59,199 --> 00:06:02,960
into the adq because that's how the um

145
00:06:02,960 --> 00:06:05,120
the various people like tarot who does

146
00:06:05,120 --> 00:06:07,919
the section reviews knows where to kick

147
00:06:07,919 --> 00:06:09,360
it off so

148
00:06:09,360 --> 00:06:12,080
so it held it up

149
00:06:12,080 --> 00:06:13,919
and i'm sorry i didn't feel it was my

150
00:06:13,919 --> 00:06:15,600
place to disclose other people's

151
00:06:15,600 --> 00:06:18,319
information or to put some vague message

152
00:06:18,319 --> 00:06:20,160
out on the list that would force their

153
00:06:20,160 --> 00:06:22,400
hand to say something

154
00:06:22,400 --> 00:06:24,479
so it's just you know

155
00:06:24,479 --> 00:06:25,600
in terms of

156
00:06:25,600 --> 00:06:28,000
maintaining proper behavior and

157
00:06:28,000 --> 00:06:29,919
not creating problems

158
00:06:29,919 --> 00:06:33,919
i chose not to say something on the list

159
00:06:42,880 --> 00:06:44,880
yeah so someone else has got some stuff

160
00:06:44,880 --> 00:06:46,639
on the list here so let's uh move are

161
00:06:46,639 --> 00:06:49,680
you done with that part kathleen

162
00:06:49,680 --> 00:06:51,039
uh yes i just want to get the

163
00:06:51,039 --> 00:06:53,759
explanation for your your statement as

164
00:06:53,759 --> 00:06:56,080
to why there was a delay

165
00:06:56,080 --> 00:06:57,199
okay

166
00:06:57,199 --> 00:07:00,199
roman

167
00:07:03,039 --> 00:07:04,639
good morning and good afternoon good

168
00:07:04,639 --> 00:07:06,800
evening kind of everyone uh yeah i just

169
00:07:06,800 --> 00:07:09,199
wanted to comment on a couple things so

170
00:07:09,199 --> 00:07:11,680
so uh nancy just put out something on

171
00:07:11,680 --> 00:07:13,440
the mailing list i think yesterday or

172
00:07:13,440 --> 00:07:16,319
the day before about uh the ipr stuff

173
00:07:16,319 --> 00:07:17,680
and just to explain kind of how to

174
00:07:17,680 --> 00:07:18,880
handle that

175
00:07:18,880 --> 00:07:21,199
yeah we definitely have consensus to

176
00:07:21,199 --> 00:07:23,280
proceed with that document but since we

177
00:07:23,280 --> 00:07:25,680
got the new information on with kind of

178
00:07:25,680 --> 00:07:27,599
the ipr i just want to make it clear

179
00:07:27,599 --> 00:07:30,240
about what needs to happen so what the

180
00:07:30,240 --> 00:07:32,960
working group needs to do is decide hey

181
00:07:32,960 --> 00:07:35,440
we have some ipr claims this may or may

182
00:07:35,440 --> 00:07:37,360
not change what we do with the document

183
00:07:37,360 --> 00:07:40,479
but we need to positively confirm that

184
00:07:40,479 --> 00:07:42,639
we want to proceed kind of forward with

185
00:07:42,639 --> 00:07:44,560
the information we have so what would be

186
00:07:44,560 --> 00:07:47,680
great on the mailing list uh is not to

187
00:07:47,680 --> 00:07:49,919
debate what the nature of kind of the

188
00:07:49,919 --> 00:07:52,560
ipr claim is it's to kind of talk about

189
00:07:52,560 --> 00:07:54,319
what is a working group we want to do

190
00:07:54,319 --> 00:07:56,879
with that document relative to that ipr

191
00:07:56,879 --> 00:07:59,440
claim thanks

192
00:07:59,440 --> 00:08:02,560
so um do we have are all of the claims

193
00:08:02,560 --> 00:08:04,160
actually now submitted or are we still

194
00:08:04,160 --> 00:08:05,599
waiting to december for additional

195
00:08:05,599 --> 00:08:08,159
information

196
00:08:09,280 --> 00:08:12,319
uh i need to help answering that

197
00:08:12,319 --> 00:08:14,720
question i believe that there is

198
00:08:14,720 --> 00:08:16,960
something more coming in and we should

199
00:08:16,960 --> 00:08:18,879
definitely kind of characterize and have

200
00:08:18,879 --> 00:08:22,960
that conversation on the mailing list

201
00:08:24,560 --> 00:08:27,680
so uh this is ned i believe that the

202
00:08:27,680 --> 00:08:31,520
status is that the for the the ipr that

203
00:08:31,520 --> 00:08:33,839
intel is aware of they've contributed

204
00:08:33,839 --> 00:08:35,679
that according to the disclosure

205
00:08:35,679 --> 00:08:36,880
agreement

206
00:08:36,880 --> 00:08:41,039
uh which includes what the terms are

207
00:08:41,039 --> 00:08:42,159
the

208
00:08:42,159 --> 00:08:43,279
the

209
00:08:43,279 --> 00:08:44,720
uh

210
00:08:44,720 --> 00:08:47,040
there was a request that was

211
00:08:47,040 --> 00:08:49,920
made by someone on the list

212
00:08:49,920 --> 00:08:51,279
directly to me

213
00:08:51,279 --> 00:08:52,320
to

214
00:08:52,320 --> 00:08:54,880
identify to to be able to go to the

215
00:08:54,880 --> 00:08:57,680
patent office directory and view the

216
00:08:57,680 --> 00:08:59,600
work in progress

217
00:08:59,600 --> 00:09:01,760
uh they were not able to find it in that

218
00:09:01,760 --> 00:09:03,120
directory

219
00:09:03,120 --> 00:09:05,519
and the reason is because the

220
00:09:05,519 --> 00:09:08,320
uh patent office has not made it public

221
00:09:08,320 --> 00:09:10,160
and the patent office has said they will

222
00:09:10,160 --> 00:09:13,600
make it public in december

223
00:09:13,680 --> 00:09:16,320
okay i understand

224
00:09:16,320 --> 00:09:18,160
there's usually some delay for that

225
00:09:18,160 --> 00:09:19,680
before it shows up in

226
00:09:19,680 --> 00:09:21,360
other places like

227
00:09:21,360 --> 00:09:23,040
google i mean

228
00:09:23,040 --> 00:09:23,839
but

229
00:09:23,839 --> 00:09:25,760
that's the easiest way to place to find

230
00:09:25,760 --> 00:09:28,560
it when that happens

231
00:09:29,680 --> 00:09:32,000
hank

232
00:09:33,920 --> 00:09:35,519
so hi everybody

233
00:09:35,519 --> 00:09:36,880
um

234
00:09:36,880 --> 00:09:39,120
so whatever here now is

235
00:09:39,120 --> 00:09:41,760
independent of content of

236
00:09:41,760 --> 00:09:44,320
ipr claims the working group should

237
00:09:44,320 --> 00:09:46,480
agree how to move forward i read from

238
00:09:46,480 --> 00:09:48,959
the shepherd document and i absolutely

239
00:09:48,959 --> 00:09:52,080
agree with that we want to move forward

240
00:09:52,080 --> 00:09:54,320
so what's the vehicle we are using here

241
00:09:54,320 --> 00:09:55,200
now

242
00:09:55,200 --> 00:09:58,720
is someone initiating a call for

243
00:09:58,720 --> 00:10:00,800
do we want to move forward and everybody

244
00:10:00,800 --> 00:10:03,040
is like yeah we want to do that and then

245
00:10:03,040 --> 00:10:05,120
we just barge ahead until we hit the

246
00:10:05,120 --> 00:10:06,959
road block that is

247
00:10:06,959 --> 00:10:09,600
then maybe coming in december or are we

248
00:10:09,600 --> 00:10:11,600
just staying dormant

249
00:10:11,600 --> 00:10:14,240
until december i'm unclear on this i

250
00:10:14,240 --> 00:10:18,120
would like to have some guidance

251
00:10:20,640 --> 00:10:22,880
i would say that if you can make an a

252
00:10:22,880 --> 00:10:24,720
form an opinion without having read the

253
00:10:24,720 --> 00:10:25,760
patent

254
00:10:25,760 --> 00:10:28,560
that our app patent application that you

255
00:10:28,560 --> 00:10:30,160
could express a view

256
00:10:30,160 --> 00:10:32,079
um it may be that you're never going to

257
00:10:32,079 --> 00:10:33,600
read the patent because many of us are

258
00:10:33,600 --> 00:10:36,079
advised not to um

259
00:10:36,079 --> 00:10:38,880
and so all that matters are the terms

260
00:10:38,880 --> 00:10:40,399
so i would say we don't have to remain

261
00:10:40,399 --> 00:10:42,959
dormant but we don't have to that we

262
00:10:42,959 --> 00:10:45,120
probably can't finish our we can't form

263
00:10:45,120 --> 00:10:47,839
a conclusion until uh other people who

264
00:10:47,839 --> 00:10:51,040
do wish to read it are able to read it

265
00:10:51,040 --> 00:10:53,519
okay just a very uninformed and

266
00:10:53,519 --> 00:10:55,760
individual opinion here i think the

267
00:10:55,760 --> 00:10:58,640
claim is about section 3 and 3.1

268
00:10:58,640 --> 00:11:01,839
and i have no idea how that should work

269
00:11:01,839 --> 00:11:05,040
so i am a little bit uh on the side of

270
00:11:05,040 --> 00:11:07,120
yeah let's just proceed with that

271
00:11:07,120 --> 00:11:10,959
and see how that is tied uh some ipa i

272
00:11:10,959 --> 00:11:13,440
should be tied into that i i'm not sure

273
00:11:13,440 --> 00:11:18,480
that's a relevant blocker to be honest

274
00:11:18,480 --> 00:11:20,000
i guess it applies to the layered

275
00:11:20,000 --> 00:11:21,839
attestation more than anything else is

276
00:11:21,839 --> 00:11:23,440
what i think but uh i don't know because

277
00:11:23,440 --> 00:11:26,480
i haven't we don't know what the uh

278
00:11:26,480 --> 00:11:27,760
content is

279
00:11:27,760 --> 00:11:30,079
dave

280
00:11:32,000 --> 00:11:34,720
you guys hear me okay

281
00:11:34,720 --> 00:11:37,680
yeah um so yeah i think we should uh

282
00:11:37,680 --> 00:11:40,399
proceed i mean i had hypotheses about

283
00:11:40,399 --> 00:11:43,920
what uh one or more patents might apply

284
00:11:43,920 --> 00:11:47,200
to uh whether my hypothesis is right or

285
00:11:47,200 --> 00:11:49,760
wrong is um

286
00:11:49,760 --> 00:11:51,680
not the main point but for example if

287
00:11:51,680 --> 00:11:53,920
there were patents on say the com i

288
00:11:53,920 --> 00:11:55,600
think there's two of them right um now

289
00:11:55,600 --> 00:11:57,920
the you know total uh let's say that

290
00:11:57,920 --> 00:11:59,760
there was one on you know the composite

291
00:11:59,760 --> 00:12:01,680
device section let's say that there was

292
00:12:01,680 --> 00:12:03,279
one on you know direct anonymous

293
00:12:03,279 --> 00:12:05,920
attestation um even if there was one on

294
00:12:05,920 --> 00:12:07,200
layered at that station which would be

295
00:12:07,200 --> 00:12:08,880
the hardest because that's part of a tcg

296
00:12:08,880 --> 00:12:11,600
standard but maybe but my point is this

297
00:12:11,600 --> 00:12:13,360
is an architecture document this is not

298
00:12:13,360 --> 00:12:15,279
one that one claims compliance to in an

299
00:12:15,279 --> 00:12:17,120
implementation per se right you do that

300
00:12:17,120 --> 00:12:19,519
to you know eat and other documents and

301
00:12:19,519 --> 00:12:21,279
the architecture document covers

302
00:12:21,279 --> 00:12:23,120
multiple different ways of doing things

303
00:12:23,120 --> 00:12:25,920
so like composite device is not you know

304
00:12:25,920 --> 00:12:27,920
mandatory uh direct anonymous

305
00:12:27,920 --> 00:12:29,839
attestation is not mandatory even if an

306
00:12:29,839 --> 00:12:31,360
architecture document could be mandatory

307
00:12:31,360 --> 00:12:33,760
the point isn't that all of rats fits

308
00:12:33,760 --> 00:12:35,279
under this particular category there's

309
00:12:35,279 --> 00:12:37,120
multiple uh the point of the

310
00:12:37,120 --> 00:12:40,480
architecture was to say that hey

311
00:12:40,480 --> 00:12:43,440
oh we lost you dave

312
00:12:43,440 --> 00:12:45,519
you went mute rationale for saying i

313
00:12:45,519 --> 00:12:48,800
think they should go forward because um

314
00:12:48,800 --> 00:12:51,040
i think that it is very unlikely that

315
00:12:51,040 --> 00:12:52,560
any patent could cover the entire

316
00:12:52,560 --> 00:12:54,399
document you could always find some way

317
00:12:54,399 --> 00:12:56,480
of implementing a coin a document that

318
00:12:56,480 --> 00:12:58,800
would um uh

319
00:12:58,800 --> 00:13:00,079
limit the applicability of any

320
00:13:00,079 --> 00:13:02,079
particular patent i am not a lawyer but

321
00:13:02,079 --> 00:13:03,680
i'm saying based on the things you know

322
00:13:03,680 --> 00:13:05,200
that i've seen so far of applying to

323
00:13:05,200 --> 00:13:07,279
specific sections i don't think that

324
00:13:07,279 --> 00:13:08,800
should block the entire document just

325
00:13:08,800 --> 00:13:10,639
because one section that would be

326
00:13:10,639 --> 00:13:12,480
narrower would

327
00:13:12,480 --> 00:13:14,560
but again i can't comment on the

328
00:13:14,560 --> 00:13:16,720
specific patents but just the general

329
00:13:16,720 --> 00:13:19,440
rule that says okay if any patent covers

330
00:13:19,440 --> 00:13:20,720
one way of doing things and there's

331
00:13:20,720 --> 00:13:22,160
other multiple ways of doing things

332
00:13:22,160 --> 00:13:23,680
that's one reason why i should go for it

333
00:13:23,680 --> 00:13:25,360
anyway and the other reason i should go

334
00:13:25,360 --> 00:13:27,839
forward anyway is because this is a it's

335
00:13:27,839 --> 00:13:29,360
not something you claim compliance to

336
00:13:29,360 --> 00:13:30,639
per se so

337
00:13:30,639 --> 00:13:32,399
thanks

338
00:13:32,399 --> 00:13:35,800
that's my opinion

339
00:13:37,360 --> 00:13:40,160
i would agree with you um roman go ahead

340
00:13:40,160 --> 00:13:41,839
yeah hi just to repeat what i put in

341
00:13:41,839 --> 00:13:43,519
chat i mean i i want to make sure there

342
00:13:43,519 --> 00:13:45,440
is an ambiguity on how we're supposed to

343
00:13:45,440 --> 00:13:47,120
handle this in terms of the process so

344
00:13:47,120 --> 00:13:48,639
we have something on the mailing list

345
00:13:48,639 --> 00:13:51,040
saying hey we have these ipr claims we

346
00:13:51,040 --> 00:13:52,800
need positive confirmation kind of from

347
00:13:52,800 --> 00:13:54,720
the working group so feedback here is

348
00:13:54,720 --> 00:13:57,120
kind of great what we're going to do is

349
00:13:57,120 --> 00:13:59,760
request for folks to comment on the

350
00:13:59,760 --> 00:14:01,440
comfort level or discomfort on the

351
00:14:01,440 --> 00:14:03,199
mailing list and then we will adjudicate

352
00:14:03,199 --> 00:14:04,880
that almost in the same way we would

353
00:14:04,880 --> 00:14:06,399
adjudicate kind of a working group kind

354
00:14:06,399 --> 00:14:09,120
of last call sense of feedback about how

355
00:14:09,120 --> 00:14:11,680
how to proceed

356
00:14:13,040 --> 00:14:15,120
harness is on the queue

357
00:14:15,120 --> 00:14:17,760
one minute left

358
00:14:17,760 --> 00:14:20,160
wrap it up hannes

359
00:14:20,160 --> 00:14:22,959
tell us like it is

360
00:14:23,519 --> 00:14:25,120
can you guys hear me

361
00:14:25,120 --> 00:14:26,160
yeah

362
00:14:26,160 --> 00:14:26,880
yeah

363
00:14:26,880 --> 00:14:28,560
um

364
00:14:28,560 --> 00:14:30,880
so i was a little bit uh surprised by

365
00:14:30,880 --> 00:14:32,079
this um

366
00:14:32,079 --> 00:14:34,560
by this development uh particularly

367
00:14:34,560 --> 00:14:36,639
because uh we have made a lot of

368
00:14:36,639 --> 00:14:39,040
investment in in the at the station

369
00:14:39,040 --> 00:14:41,360
technology and obviously with uh

370
00:14:41,360 --> 00:14:44,800
our contributions to open source and

371
00:14:44,800 --> 00:14:46,800
we were hoping that many of the

372
00:14:46,800 --> 00:14:48,959
developers open source developers um

373
00:14:48,959 --> 00:14:52,000
either directly through our code or

374
00:14:52,000 --> 00:14:54,079
indirectly through other libraries

375
00:14:54,079 --> 00:14:56,000
utilize this

376
00:14:56,000 --> 00:14:58,560
and every time there is uh

377
00:14:58,560 --> 00:15:01,120
sort of patent claims on documents uh it

378
00:15:01,120 --> 00:15:03,839
scares off uh developers unfortunately

379
00:15:03,839 --> 00:15:06,320
um they are not going to make an

380
00:15:06,320 --> 00:15:08,079
assessment of the patents because that's

381
00:15:08,079 --> 00:15:11,600
typically something um they cannot do

382
00:15:11,600 --> 00:15:14,000
and and in our case uh

383
00:15:14,000 --> 00:15:15,199
we are

384
00:15:15,199 --> 00:15:16,800
uh are not allowed to look at those

385
00:15:16,800 --> 00:15:19,040
patent claims uh or to make any judgment

386
00:15:19,040 --> 00:15:20,079
about it

387
00:15:20,079 --> 00:15:22,079
um so so that

388
00:15:22,079 --> 00:15:25,519
looks pretty bad for uh the work we've

389
00:15:25,519 --> 00:15:27,680
been contributing to overall

390
00:15:27,680 --> 00:15:29,600
um that's my first remark the second

391
00:15:29,600 --> 00:15:31,519
remark is about the timing and and the

392
00:15:31,519 --> 00:15:34,320
way the procedural aspect of it

393
00:15:34,320 --> 00:15:35,440
um

394
00:15:35,440 --> 00:15:38,399
it it it doesn't look um give a

395
00:15:38,399 --> 00:15:41,040
or shine a great light on

396
00:15:41,040 --> 00:15:43,360
on the work in the group when uh

397
00:15:43,360 --> 00:15:45,360
the co-chair and who happens to be

398
00:15:45,360 --> 00:15:46,880
document also

399
00:15:46,880 --> 00:15:48,720
um then very late in the process

400
00:15:48,720 --> 00:15:51,839
contributes a patent um delays the work

401
00:15:51,839 --> 00:15:55,279
uh further it's it's just um

402
00:15:55,279 --> 00:15:56,959
it's just not

403
00:15:56,959 --> 00:16:00,079
how things should be done in my opinion

404
00:16:00,079 --> 00:16:00,959
um

405
00:16:00,959 --> 00:16:02,720
and i wonder whether this uh

406
00:16:02,720 --> 00:16:04,639
whether we should just take this as an

407
00:16:04,639 --> 00:16:06,560
example of not publishing the document

408
00:16:06,560 --> 00:16:09,360
at all on preventing further harm

409
00:16:09,360 --> 00:16:12,639
to the industry in that case

410
00:16:12,720 --> 00:16:15,440
that's my view

411
00:16:16,240 --> 00:16:17,600
okay

412
00:16:17,600 --> 00:16:19,199
thanks for

413
00:16:19,199 --> 00:16:20,880
sharing your view

414
00:16:20,880 --> 00:16:22,560
we are out of time

415
00:16:22,560 --> 00:16:23,839
for this topic

416
00:16:23,839 --> 00:16:26,639
we can bring it up again on friday there

417
00:16:26,639 --> 00:16:30,000
uh there's some open mic time

418
00:16:31,199 --> 00:16:34,160
so we're gonna move to the next topic

419
00:16:34,160 --> 00:16:36,240
this is attestation event stream

420
00:16:36,240 --> 00:16:40,240
subscription uh eric voigt

421
00:16:45,519 --> 00:16:48,240
hello can you hear

422
00:16:48,839 --> 00:16:51,279
me you hear me guys

423
00:16:51,279 --> 00:16:52,240
yep

424
00:16:52,240 --> 00:16:54,320
all right i can hear you

425
00:16:54,320 --> 00:16:56,000
this is gonna be a short update uh

426
00:16:56,000 --> 00:16:58,240
because we did get this adopted by the

427
00:16:58,240 --> 00:17:00,800
working group since the last iepf

428
00:17:00,800 --> 00:17:02,639
um i will because it's gonna take a very

429
00:17:02,639 --> 00:17:05,199
short update i just add one claim that i

430
00:17:05,199 --> 00:17:07,599
put in the note i don't think patents

431
00:17:07,599 --> 00:17:11,039
themselves are bad i think it's the ipr

432
00:17:11,039 --> 00:17:13,199
claims actually can protect from other

433
00:17:13,199 --> 00:17:15,679
people down the road but we want to make

434
00:17:15,679 --> 00:17:17,199
sure of course is that there's nothing

435
00:17:17,199 --> 00:17:19,839
that's going to apply

436
00:17:20,720 --> 00:17:23,359
royalty-wise so just to answer at least

437
00:17:23,359 --> 00:17:25,280
with a few of my minutes

438
00:17:25,280 --> 00:17:26,640
hannah's claim i don't think it's

439
00:17:26,640 --> 00:17:28,000
actually i think i think patents can be

440
00:17:28,000 --> 00:17:30,400
good as long as it's royalty-free

441
00:17:30,400 --> 00:17:32,240
right so jumping onto event stream

442
00:17:32,240 --> 00:17:34,640
subscription as i mentioned we now have

443
00:17:34,640 --> 00:17:38,559
a a in ietf draft zero zero

444
00:17:38,559 --> 00:17:40,799
uh there's a slide which we've been

445
00:17:40,799 --> 00:17:43,520
presenting ever since the first uh rats

446
00:17:43,520 --> 00:17:45,440
group that shows a relationship of many

447
00:17:45,440 --> 00:17:47,600
of the giraffes together

448
00:17:47,600 --> 00:17:48,720
the

449
00:17:48,720 --> 00:17:51,679
subscription itself is dependent on the

450
00:17:51,679 --> 00:17:54,720
chara draft which is now an a.d review

451
00:17:54,720 --> 00:17:56,000
and roman we're done most of the

452
00:17:56,000 --> 00:17:58,000
comments uh and replying to them that

453
00:17:58,000 --> 00:18:00,400
should be coming to you in a day or so

454
00:18:00,400 --> 00:18:03,280
and that's an ad review as is the basic

455
00:18:03,280 --> 00:18:04,960
attestation

456
00:18:04,960 --> 00:18:08,400
draft for routers uh which guy is

457
00:18:08,400 --> 00:18:10,000
spearheading and that's also an ad

458
00:18:10,000 --> 00:18:10,960
review

459
00:18:10,960 --> 00:18:12,640
and you know the working group last

460
00:18:12,640 --> 00:18:15,039
calls we're just discussing is complete

461
00:18:15,039 --> 00:18:16,960
so we now have a just adopted

462
00:18:16,960 --> 00:18:18,720
subscription draft with a lot of

463
00:18:18,720 --> 00:18:20,880
dependencies that go through

464
00:18:20,880 --> 00:18:22,960
a number of drafts

465
00:18:22,960 --> 00:18:26,360
okay next slide

466
00:18:28,000 --> 00:18:32,799
um basically the idea here is that the

467
00:18:32,799 --> 00:18:36,320
subscriber to a router or switch or some

468
00:18:36,320 --> 00:18:38,799
piece of network equipment will go ahead

469
00:18:38,799 --> 00:18:40,240
and use a

470
00:18:40,240 --> 00:18:45,679
rpc to say subscribe to the device and

471
00:18:45,679 --> 00:18:47,440
go ahead and give me

472
00:18:47,440 --> 00:18:50,320
pcr quotes from that device

473
00:18:50,320 --> 00:18:51,520
over time

474
00:18:51,520 --> 00:18:54,240
either periodically or let's say

475
00:18:54,240 --> 00:18:56,400
whenever something changes

476
00:18:56,400 --> 00:18:57,600
on the

477
00:18:57,600 --> 00:19:00,400
pcrs and that's really the the magic of

478
00:19:00,400 --> 00:19:02,880
this draft is that it's difficult to

479
00:19:02,880 --> 00:19:04,640
maintain freshness

480
00:19:04,640 --> 00:19:06,960
of quotes if you're not continually

481
00:19:06,960 --> 00:19:09,679
sending a

482
00:19:09,679 --> 00:19:12,720
a not a new nonce every time let's say

483
00:19:12,720 --> 00:19:15,679
values in the pcrs change within the t

484
00:19:15,679 --> 00:19:19,039
within the secure chip on the router

485
00:19:19,039 --> 00:19:20,000
and

486
00:19:20,000 --> 00:19:22,400
the center of the draft really is around

487
00:19:22,400 --> 00:19:24,160
mechanisms to ensure that there's

488
00:19:24,160 --> 00:19:26,240
freshness being maintained

489
00:19:26,240 --> 00:19:28,640
on each of the subsequent quotes

490
00:19:28,640 --> 00:19:30,240
from the very first quote that's

491
00:19:30,240 --> 00:19:32,640
delivered that identifies the values of

492
00:19:32,640 --> 00:19:33,919
the pcr

493
00:19:33,919 --> 00:19:35,679
and there's a number of mechanisms do

494
00:19:35,679 --> 00:19:36,480
that

495
00:19:36,480 --> 00:19:38,480
the draft describes those

496
00:19:38,480 --> 00:19:40,960
next slide

497
00:19:42,320 --> 00:19:43,600
now without going through all the

498
00:19:43,600 --> 00:19:45,280
specifics because you can read them

499
00:19:45,280 --> 00:19:46,799
there's a number of things in the

500
00:19:46,799 --> 00:19:48,880
document and i encourage you to read

501
00:19:48,880 --> 00:19:51,600
them as we progress it includes things

502
00:19:51,600 --> 00:19:52,400
like

503
00:19:52,400 --> 00:19:55,360
sequence diagrams ways of measuring

504
00:19:55,360 --> 00:19:56,799
freshness

505
00:19:56,799 --> 00:19:58,400
looking at event stream to make sure

506
00:19:58,400 --> 00:20:01,120
that we're able to get the

507
00:20:01,120 --> 00:20:02,640
signed quotes

508
00:20:02,640 --> 00:20:05,039
from the pcrs as well as the raw data

509
00:20:05,039 --> 00:20:06,880
that went into the pcrs in terms of

510
00:20:06,880 --> 00:20:08,720
events that are recorded

511
00:20:08,720 --> 00:20:10,880
in the tpms

512
00:20:10,880 --> 00:20:13,039
and then talks about other things such

513
00:20:13,039 --> 00:20:14,240
as

514
00:20:14,240 --> 00:20:16,640
filtering the events at the attester

515
00:20:16,640 --> 00:20:18,480
doing a replay of those events so you

516
00:20:18,480 --> 00:20:20,720
can reconstruct things later

517
00:20:20,720 --> 00:20:23,679
and configuring the the stream so you

518
00:20:23,679 --> 00:20:25,360
only send those events that you care

519
00:20:25,360 --> 00:20:26,720
about to minimize the amount of

520
00:20:26,720 --> 00:20:28,799
information on the other side

521
00:20:28,799 --> 00:20:29,919
so

522
00:20:29,919 --> 00:20:30,799
our

523
00:20:30,799 --> 00:20:33,760
plans in the coming weeks and months

524
00:20:33,760 --> 00:20:35,760
are to

525
00:20:35,760 --> 00:20:38,960
respond to any changes if any on the

526
00:20:38,960 --> 00:20:41,120
yang model upon which is a dependent

527
00:20:41,120 --> 00:20:43,280
because chara model is going to have

528
00:20:43,280 --> 00:20:45,039
some very minor tweaks

529
00:20:45,039 --> 00:20:46,799
you know maybe nothing that even impacts

530
00:20:46,799 --> 00:20:49,200
this draft and then once the chair gets

531
00:20:49,200 --> 00:20:52,480
through the ad review and the isg

532
00:20:52,480 --> 00:20:54,240
then you know see if there's any changes

533
00:20:54,240 --> 00:20:58,240
there then progress the itf uh part of

534
00:20:58,240 --> 00:20:59,840
that into the

535
00:20:59,840 --> 00:21:01,280
into the

536
00:21:01,280 --> 00:21:04,000
rest of the process that being that once

537
00:21:04,000 --> 00:21:05,760
the ietf model for shower is done we can

538
00:21:05,760 --> 00:21:07,679
go ahead and do yang doctor reviews and

539
00:21:07,679 --> 00:21:09,039
other things

540
00:21:09,039 --> 00:21:11,679
for the yang model for the subscription

541
00:21:11,679 --> 00:21:12,720
draft

542
00:21:12,720 --> 00:21:15,280
and then add anything else that's needed

543
00:21:15,280 --> 00:21:17,200
and so that's pretty much it

544
00:21:17,200 --> 00:21:18,320
we're just going to continue through the

545
00:21:18,320 --> 00:21:21,760
process thanks for your adoption

546
00:21:23,760 --> 00:21:25,840
okay

547
00:21:25,840 --> 00:21:29,280
so we're one minute overtime

548
00:21:29,280 --> 00:21:31,600
there's no questions or feedback we will

549
00:21:31,600 --> 00:21:34,559
move to the next topic

550
00:21:38,080 --> 00:21:38,960
okay

551
00:21:38,960 --> 00:21:41,679
so the next topic is a seaboard tag for

552
00:21:41,679 --> 00:21:44,480
unprotected cwt claim sets carson

553
00:21:44,480 --> 00:21:46,880
boarman

554
00:21:50,640 --> 00:21:53,039
yeah hi you are showing the slides

555
00:21:53,039 --> 00:21:54,159
i am

556
00:21:54,159 --> 00:21:54,960
good

557
00:21:54,960 --> 00:21:55,919
um

558
00:21:55,919 --> 00:21:57,600
so

559
00:21:57,600 --> 00:21:59,600
we wanted to quickly talk about

560
00:21:59,600 --> 00:22:02,240
uccs next slide

561
00:22:02,240 --> 00:22:04,480
um

562
00:22:06,640 --> 00:22:07,679
so

563
00:22:07,679 --> 00:22:09,600
this probably should thank thank you

564
00:22:09,600 --> 00:22:10,960
this probably should

565
00:22:10,960 --> 00:22:16,080
be known to most people so cwt

566
00:22:16,080 --> 00:22:19,679
is a cozy envelope around

567
00:22:19,679 --> 00:22:22,799
a cwt claims set

568
00:22:22,799 --> 00:22:25,440
and it's defined as a sibo data

569
00:22:25,440 --> 00:22:27,840
structure with a tag

570
00:22:27,840 --> 00:22:30,799
that you can but need not use depending

571
00:22:30,799 --> 00:22:32,240
on on whether

572
00:22:32,240 --> 00:22:35,520
it's clear from the context that this

573
00:22:35,520 --> 00:22:37,840
tag applies

574
00:22:37,840 --> 00:22:38,960
and

575
00:22:38,960 --> 00:22:42,159
the ccs actually is uh

576
00:22:42,159 --> 00:22:43,600
quite similar

577
00:22:43,600 --> 00:22:46,720
uh but but not entirely the same

578
00:22:46,720 --> 00:22:50,159
as a jwt claim set so it's a

579
00:22:50,159 --> 00:22:52,240
map a video set

580
00:22:52,240 --> 00:22:55,679
of something that i called claims uh in

581
00:22:55,679 --> 00:22:57,200
in

582
00:22:57,200 --> 00:23:00,000
jwt and which we also call claims that

583
00:23:00,000 --> 00:23:02,240
way but actually all these claims

584
00:23:02,240 --> 00:23:03,440
together

585
00:23:03,440 --> 00:23:04,480
form

586
00:23:04,480 --> 00:23:06,559
uh the the predicate part of an

587
00:23:06,559 --> 00:23:08,320
assertion

588
00:23:08,320 --> 00:23:09,679
and

589
00:23:09,679 --> 00:23:10,720
this is

590
00:23:10,720 --> 00:23:12,640
very useful and it can be used to to

591
00:23:12,640 --> 00:23:15,360
make all kinds of signed assertions and

592
00:23:15,360 --> 00:23:16,400
so on

593
00:23:16,400 --> 00:23:18,080
and what has

594
00:23:18,080 --> 00:23:21,200
turned out is that sometimes

595
00:23:21,200 --> 00:23:22,640
it's actually

596
00:23:22,640 --> 00:23:25,120
possible to do the same thing

597
00:23:25,120 --> 00:23:27,760
with some other form of protection for

598
00:23:27,760 --> 00:23:30,240
instance a secure channel

599
00:23:30,240 --> 00:23:33,200
that makes clear who is making that

600
00:23:33,200 --> 00:23:34,960
particular

601
00:23:34,960 --> 00:23:36,400
assertion

602
00:23:36,400 --> 00:23:39,440
so in in those specific environments you

603
00:23:39,440 --> 00:23:42,720
can use an unprotected cwt claim set the

604
00:23:42,720 --> 00:23:45,120
same data structure but without an

605
00:23:45,120 --> 00:23:47,200
envelope because the the function of the

606
00:23:47,200 --> 00:23:48,400
envelope is

607
00:23:48,400 --> 00:23:50,880
taken over by some other

608
00:23:50,880 --> 00:23:52,240
thing

609
00:23:52,240 --> 00:23:55,840
that is protecting this uh uccs

610
00:23:55,840 --> 00:23:58,159
and therefore it seems like a good idea

611
00:23:58,159 --> 00:24:02,159
to to have a tag for just the the naked

612
00:24:02,159 --> 00:24:04,559
ccs itself of course you cannot say

613
00:24:04,559 --> 00:24:08,879
naked so we say unprotected next slide

614
00:24:09,600 --> 00:24:11,120
um

615
00:24:11,120 --> 00:24:14,799
we actually don't have anything

616
00:24:14,799 --> 00:24:17,600
normative to say

617
00:24:17,600 --> 00:24:18,640
because

618
00:24:18,640 --> 00:24:20,799
essentially we are just defining a tag

619
00:24:20,799 --> 00:24:22,480
for a data structure that is already

620
00:24:22,480 --> 00:24:24,960
defined in 83 92.

621
00:24:24,960 --> 00:24:25,919
um

622
00:24:25,919 --> 00:24:28,400
so why do we write a document now the

623
00:24:28,400 --> 00:24:29,919
reason is that

624
00:24:29,919 --> 00:24:31,520
it's really

625
00:24:31,520 --> 00:24:34,559
too easy to confuse the uccs with the

626
00:24:34,559 --> 00:24:36,320
cwt and that

627
00:24:36,320 --> 00:24:38,799
is a criticism that has

628
00:24:38,799 --> 00:24:40,799
repeatedly been made so it

629
00:24:40,799 --> 00:24:43,279
seems really important to point out how

630
00:24:43,279 --> 00:24:46,159
the uccs is just the predicate inside

631
00:24:46,159 --> 00:24:47,120
the

632
00:24:47,120 --> 00:24:48,799
cwt

633
00:24:48,799 --> 00:24:51,760
but not the entire assertion so it

634
00:24:51,760 --> 00:24:54,480
becomes an insertion by embedding it in

635
00:24:54,480 --> 00:24:56,400
some

636
00:24:56,400 --> 00:24:59,440
envelope that provides a signature or

637
00:24:59,440 --> 00:25:00,960
some other

638
00:25:00,960 --> 00:25:03,520
form of

639
00:25:03,520 --> 00:25:06,559
yeah turning it into an assertion

640
00:25:06,559 --> 00:25:08,240
and the other reason why it's probably a

641
00:25:08,240 --> 00:25:11,200
good idea to write this up is that those

642
00:25:11,200 --> 00:25:13,120
security considerations

643
00:25:13,120 --> 00:25:15,679
actually get very specific in the reds

644
00:25:15,679 --> 00:25:17,600
context

645
00:25:17,600 --> 00:25:20,960
so it makes sense to write up how ucs's

646
00:25:20,960 --> 00:25:23,840
uccs would be used in the reds

647
00:25:23,840 --> 00:25:25,120
situation

648
00:25:25,120 --> 00:25:26,000
and

649
00:25:26,000 --> 00:25:28,799
specifically what are the requirements

650
00:25:28,799 --> 00:25:30,960
that reds would have

651
00:25:30,960 --> 00:25:32,960
on a secure

652
00:25:32,960 --> 00:25:34,240
channel

653
00:25:34,240 --> 00:25:36,799
next slide

654
00:25:39,039 --> 00:25:40,240
so

655
00:25:40,240 --> 00:25:42,640
yeah writing a document always provides

656
00:25:42,640 --> 00:25:44,640
some some opportunity to do little

657
00:25:44,640 --> 00:25:46,559
things at the side

658
00:25:46,559 --> 00:25:49,360
and uh one thing that came up but but

659
00:25:49,360 --> 00:25:51,600
hasn't been incorporated in the latest

660
00:25:51,600 --> 00:25:53,600
draft there is just a branch on the the

661
00:25:53,600 --> 00:25:54,880
repo

662
00:25:54,880 --> 00:25:57,440
for that we could actually provide a cda

663
00:25:57,440 --> 00:26:01,440
specification for the cwe claim set

664
00:26:01,440 --> 00:26:05,039
the the cwt rfc predates the completion

665
00:26:05,039 --> 00:26:08,240
of the cddl rfc so at the time it

666
00:26:08,240 --> 00:26:10,960
requires some some special dance

667
00:26:10,960 --> 00:26:14,320
uh to have cddl in in a normative

668
00:26:14,320 --> 00:26:16,000
document

669
00:26:16,000 --> 00:26:19,600
and we could fill in that gap now which

670
00:26:19,600 --> 00:26:22,000
would make it easier to use cwt in

671
00:26:22,000 --> 00:26:25,120
general not just uccs

672
00:26:25,120 --> 00:26:28,240
so this is one thing that that

673
00:26:28,240 --> 00:26:30,159
we are proposing but

674
00:26:30,159 --> 00:26:32,880
that that we might still agree not to do

675
00:26:32,880 --> 00:26:35,039
then we would just do another document

676
00:26:35,039 --> 00:26:36,799
and have to find a home for that and

677
00:26:36,799 --> 00:26:37,760
that's it's

678
00:26:37,760 --> 00:26:40,480
lots of overhead for for very little

679
00:26:40,480 --> 00:26:42,640
gain

680
00:26:42,640 --> 00:26:44,640
the other

681
00:26:44,640 --> 00:26:46,720
suggestion that has been made is that we

682
00:26:46,720 --> 00:26:49,200
could use as use this as an opportunity

683
00:26:49,200 --> 00:26:50,559
to

684
00:26:50,559 --> 00:26:54,000
do a grand unification between jwt and

685
00:26:54,000 --> 00:26:55,840
and cwt

686
00:26:55,840 --> 00:26:58,640
and um yeah um

687
00:26:58,640 --> 00:26:59,760
this is

688
00:26:59,760 --> 00:27:02,159
probably not what we want to do

689
00:27:02,159 --> 00:27:05,440
and uh i mean even if we do

690
00:27:05,440 --> 00:27:08,799
start such a grand unification project

691
00:27:08,799 --> 00:27:10,799
we probably don't want to put it into

692
00:27:10,799 --> 00:27:13,440
this document because the timelines are

693
00:27:13,440 --> 00:27:14,640
very different

694
00:27:14,640 --> 00:27:17,200
next slide

695
00:27:17,679 --> 00:27:19,679
so where are we

696
00:27:19,679 --> 00:27:21,520
we

697
00:27:21,520 --> 00:27:23,279
still have to accept or reject the idea

698
00:27:23,279 --> 00:27:26,640
to end the ctd specification

699
00:27:26,640 --> 00:27:30,080
we also have a review from thomas fasati

700
00:27:30,080 --> 00:27:32,880
with lots of great editorial suggestions

701
00:27:32,880 --> 00:27:35,600
that we want to include

702
00:27:35,600 --> 00:27:38,240
so that there's a little bit more work

703
00:27:38,240 --> 00:27:40,559
needed that hasn't happened

704
00:27:40,559 --> 00:27:43,039
yet and the plan is to submit a new

705
00:27:43,039 --> 00:27:45,279
version with or without the cddl and

706
00:27:45,279 --> 00:27:46,960
with that editing

707
00:27:46,960 --> 00:27:49,760
and working group plus call that

708
00:27:49,760 --> 00:27:52,760
questions

709
00:28:04,000 --> 00:28:06,799
thanks on thecube

710
00:28:09,520 --> 00:28:11,360
click all the buttons okay i clicked all

711
00:28:11,360 --> 00:28:12,960
the buttons thank you

712
00:28:12,960 --> 00:28:17,120
so yeah thanks carson for that uh

713
00:28:17,200 --> 00:28:19,200
presentation of the state of the affairs

714
00:28:19,200 --> 00:28:21,679
i think uh we are

715
00:28:21,679 --> 00:28:24,320
really okay on the uh

716
00:28:24,320 --> 00:28:26,799
the scoping here today

717
00:28:26,799 --> 00:28:28,799
that has been discussed uh multiple

718
00:28:28,799 --> 00:28:31,200
times already and i think everybody got

719
00:28:31,200 --> 00:28:33,120
somehow used

720
00:28:33,120 --> 00:28:35,080
to the idea that

721
00:28:35,080 --> 00:28:38,320
uccs's are context specific and i'm

722
00:28:38,320 --> 00:28:40,240
happy to see this in rats

723
00:28:40,240 --> 00:28:41,600
as a first

724
00:28:41,600 --> 00:28:45,840
iteration first of all and then um i i

725
00:28:45,840 --> 00:28:49,039
think that uh yeah we really have to get

726
00:28:49,039 --> 00:28:53,360
our uh backlog of uh comments uh done

727
00:28:53,360 --> 00:28:55,760
and and thomas already uh i think

728
00:28:55,760 --> 00:28:58,480
unfortunately for him is aware of that

729
00:28:58,480 --> 00:29:00,080
so i think

730
00:29:00,080 --> 00:29:02,080
it will be done in the next uh course of

731
00:29:02,080 --> 00:29:04,240
the next weeks in in contrast to our

732
00:29:04,240 --> 00:29:07,120
typical pace and so what i'm

733
00:29:07,120 --> 00:29:08,279
i'm

734
00:29:08,279 --> 00:29:10,480
unfortunate here is yeah we will do the

735
00:29:10,480 --> 00:29:11,600
update

736
00:29:11,600 --> 00:29:13,600
and and please stay tuned because that

737
00:29:13,600 --> 00:29:15,919
could be the uh

738
00:29:15,919 --> 00:29:18,720
id that will have a working goobras call

739
00:29:18,720 --> 00:29:21,039
thank you

740
00:29:24,399 --> 00:29:27,840
lawrence is on the queue

741
00:29:30,399 --> 00:29:33,120
yeah hello

742
00:29:33,120 --> 00:29:35,200
um i just uh

743
00:29:35,200 --> 00:29:36,640
the um

744
00:29:36,640 --> 00:29:38,960
my present presentation that's coming up

745
00:29:38,960 --> 00:29:41,440
next has a whole bunch of stuff in

746
00:29:41,440 --> 00:29:43,760
relation to that so

747
00:29:43,760 --> 00:29:46,159
that's all i wanted to say is there's i

748
00:29:46,159 --> 00:29:48,320
have a lot more comments coming coming

749
00:29:48,320 --> 00:29:50,559
soon

750
00:29:53,279 --> 00:29:56,399
anybody else on the queue

751
00:29:58,320 --> 00:30:00,720
all right so uh looks like we're done

752
00:30:00,720 --> 00:30:03,520
with that topic

753
00:30:04,399 --> 00:30:07,840
next is the ndds station token r11

754
00:30:07,840 --> 00:30:11,840
changes this is lawrence fund blade

755
00:30:13,039 --> 00:30:14,559
lawrence you're up

756
00:30:14,559 --> 00:30:16,480
yup all right

757
00:30:16,480 --> 00:30:19,120
next slide

758
00:30:19,919 --> 00:30:22,080
so uh i'm uh

759
00:30:22,080 --> 00:30:26,080
commenting uh here now about um

760
00:30:26,080 --> 00:30:27,679
the uh

761
00:30:27,679 --> 00:30:30,799
uh dash 11 version of eat that was

762
00:30:30,799 --> 00:30:31,840
released

763
00:30:31,840 --> 00:30:34,799
like a two weeks ago it's a pretty large

764
00:30:34,799 --> 00:30:37,840
set of changes

765
00:30:38,080 --> 00:30:40,640
this slide here shows the

766
00:30:40,640 --> 00:30:43,679
planned contents of an eat just the kind

767
00:30:43,679 --> 00:30:44,399
of

768
00:30:44,399 --> 00:30:47,440
just the areas where the claims are

769
00:30:47,440 --> 00:30:48,799
different different areas for different

770
00:30:48,799 --> 00:30:50,000
claims

771
00:30:50,000 --> 00:30:51,760
i'm kind of pointing out down at the

772
00:30:51,760 --> 00:30:53,679
bottom

773
00:30:53,679 --> 00:30:55,520
is a little different than before and

774
00:30:55,520 --> 00:30:56,960
that

775
00:30:56,960 --> 00:30:59,919
yellow box down at the bottom is claims

776
00:30:59,919 --> 00:31:01,600
that are suitable for attestation

777
00:31:01,600 --> 00:31:02,799
results

778
00:31:02,799 --> 00:31:04,880
so one of them is the dloa which i

779
00:31:04,880 --> 00:31:06,320
presented

780
00:31:06,320 --> 00:31:09,760
at the last meeting and then um

781
00:31:09,760 --> 00:31:12,080
there is verification results and then

782
00:31:12,080 --> 00:31:13,279
over uh

783
00:31:13,279 --> 00:31:15,600
overall verification results and

784
00:31:15,600 --> 00:31:18,000
software measurement results are also

785
00:31:18,000 --> 00:31:19,360
claims

786
00:31:19,360 --> 00:31:21,519
the overall verification results is not

787
00:31:21,519 --> 00:31:24,880
in the dash 11 draft

788
00:31:25,440 --> 00:31:28,000
next slide

789
00:31:31,200 --> 00:31:33,600
so

790
00:31:33,600 --> 00:31:35,919
waiting for next there we go so you can

791
00:31:35,919 --> 00:31:38,399
see the blue arrows are indicating where

792
00:31:38,399 --> 00:31:41,440
work was done in the on the dash 11

793
00:31:41,440 --> 00:31:45,120
draft so a fair number of areas

794
00:31:45,120 --> 00:31:47,360
personally i think all of this is ready

795
00:31:47,360 --> 00:31:50,159
for last call so um the only things that

796
00:31:50,159 --> 00:31:53,519
are this this shows a little bit of uh

797
00:31:53,519 --> 00:31:55,600
um

798
00:31:55,600 --> 00:31:57,679
a couple areas where maybe there's some

799
00:31:57,679 --> 00:31:59,120
comments about whether it's ready for

800
00:31:59,120 --> 00:32:00,399
last call or not

801
00:32:00,399 --> 00:32:02,559
but personally i think that it is all

802
00:32:02,559 --> 00:32:04,720
ready for last call

803
00:32:04,720 --> 00:32:07,200
so i'm going to go through

804
00:32:07,200 --> 00:32:11,720
yeah let's go to the next slide

805
00:32:15,679 --> 00:32:19,360
so uh one of the uh this this is a slide

806
00:32:19,360 --> 00:32:21,760
i've been presenting for a while of that

807
00:32:21,760 --> 00:32:24,399
work was needed to unify terminology

808
00:32:24,399 --> 00:32:29,360
with the rats architecture and um

809
00:32:29,360 --> 00:32:31,760
remove a lot of the text that that's uh

810
00:32:31,760 --> 00:32:33,679
that was there before there was rats

811
00:32:33,679 --> 00:32:36,080
architecture some of that text is is

812
00:32:36,080 --> 00:32:40,639
like three years old so that's all done

813
00:32:41,600 --> 00:32:44,399
we rely on uh rats and cwt rats

814
00:32:44,399 --> 00:32:46,159
architecture at cwt for verification

815
00:32:46,159 --> 00:32:48,000
procedures so that was removed there's a

816
00:32:48,000 --> 00:32:49,519
lot more examples

817
00:32:49,519 --> 00:32:51,120
so that's a big chunk of work that's

818
00:32:51,120 --> 00:32:54,559
done uh next slide

819
00:32:55,679 --> 00:32:57,840
so kind of this is the kind of the the

820
00:32:57,840 --> 00:33:00,399
uh laundry list of um uh changes that

821
00:33:00,399 --> 00:33:02,399
were done in uh

822
00:33:02,399 --> 00:33:04,559
the dash 11 draft i'm going to kind of

823
00:33:04,559 --> 00:33:06,559
go through and speak to them

824
00:33:06,559 --> 00:33:08,720
uh one by one i don't have details on

825
00:33:08,720 --> 00:33:09,840
each one

826
00:33:09,840 --> 00:33:13,360
but i don't think that's necessary

827
00:33:13,360 --> 00:33:16,399
so first of all um the the technology is

828
00:33:16,399 --> 00:33:18,960
now or the terminology is now consistent

829
00:33:18,960 --> 00:33:21,600
with the rats architecture and cwt and

830
00:33:21,600 --> 00:33:23,840
jwt

831
00:33:23,840 --> 00:33:26,399
documents

832
00:33:26,720 --> 00:33:29,039
i removed the operating model

833
00:33:29,039 --> 00:33:32,000
procedures and that now

834
00:33:32,000 --> 00:33:34,000
there's a reliance on the rats

835
00:33:34,000 --> 00:33:36,960
architecture cwt and jwt

836
00:33:36,960 --> 00:33:41,039
documents for the operating procedures

837
00:33:41,760 --> 00:33:44,720
i added a claim as for a simple software

838
00:33:44,720 --> 00:33:47,519
name and software version

839
00:33:47,519 --> 00:33:49,600
as an alternative to having a coast

840
00:33:49,600 --> 00:33:53,519
width to describe the software um

841
00:33:53,519 --> 00:33:55,679
coast woods have the

842
00:33:55,679 --> 00:33:57,919
are fairly large and complicated when

843
00:33:57,919 --> 00:34:00,640
you just want a software name uh or in

844
00:34:00,640 --> 00:34:03,760
software version and cos widths are not

845
00:34:03,760 --> 00:34:05,600
available in json

846
00:34:05,600 --> 00:34:06,480
so

847
00:34:06,480 --> 00:34:08,719
that's why that's there

848
00:34:08,719 --> 00:34:11,280
uh there's the dloa's claim that was

849
00:34:11,280 --> 00:34:13,520
presented uh last meeting so that's all

850
00:34:13,520 --> 00:34:16,560
in their detail um there is a

851
00:34:16,560 --> 00:34:18,960
software software results claim so this

852
00:34:18,960 --> 00:34:21,199
claim is you know the

853
00:34:21,199 --> 00:34:22,639
um

854
00:34:22,639 --> 00:34:25,839
description of the uh

855
00:34:25,839 --> 00:34:27,839
for for attestation results that

856
00:34:27,839 --> 00:34:29,359
describes the

857
00:34:29,359 --> 00:34:31,359
results of

858
00:34:31,359 --> 00:34:34,480
comparing a software measurement

859
00:34:34,480 --> 00:34:37,918
to the expected values

860
00:34:39,918 --> 00:34:41,520
that was i believe discussed last

861
00:34:41,520 --> 00:34:43,280
meeting as well

862
00:34:43,280 --> 00:34:45,918
but wasn't in the document

863
00:34:45,918 --> 00:34:47,119
so now the

864
00:34:47,119 --> 00:34:51,520
the oem id claim uh was improved um

865
00:34:51,520 --> 00:34:54,159
it's clarified that it's only for uh

866
00:34:54,159 --> 00:34:56,079
hardware it's it wasn't clear that

867
00:34:56,079 --> 00:34:58,079
that's what was the case

868
00:34:58,079 --> 00:35:02,480
um it allows uh use of uh the pen the

869
00:35:02,480 --> 00:35:04,880
private

870
00:35:05,920 --> 00:35:08,480
private enterprise enterprise number

871
00:35:08,480 --> 00:35:12,240
also allows a randomly generated

872
00:35:12,400 --> 00:35:14,880
oem id claim

873
00:35:14,880 --> 00:35:16,720
which could be which can be a hash of

874
00:35:16,720 --> 00:35:19,280
something else so

875
00:35:19,280 --> 00:35:20,800
uh then there's a

876
00:35:20,800 --> 00:35:22,800
a lot more examples the lamp examples

877
00:35:22,800 --> 00:35:25,119
are all filled in in uh

878
00:35:25,119 --> 00:35:26,160
in

879
00:35:26,160 --> 00:35:27,599
detail

880
00:35:27,599 --> 00:35:30,240
there are several coast coswood examples

881
00:35:30,240 --> 00:35:31,280
in there

882
00:35:31,280 --> 00:35:33,119
there they

883
00:35:33,119 --> 00:35:36,000
they verify against most of them verify

884
00:35:36,000 --> 00:35:39,040
against the coast with cddl so that the

885
00:35:39,040 --> 00:35:42,160
whole document builds

886
00:35:42,240 --> 00:35:43,119
where

887
00:35:43,119 --> 00:35:46,160
the examples in diag format are

888
00:35:46,160 --> 00:35:48,880
verified against the

889
00:35:48,880 --> 00:35:51,520
cddl in the document and cddl pulled in

890
00:35:51,520 --> 00:35:54,960
from coswood and suit

891
00:35:55,359 --> 00:35:59,040
there's also example of a a

892
00:35:59,040 --> 00:36:00,320
measurement

893
00:36:00,320 --> 00:36:01,280
and

894
00:36:01,280 --> 00:36:02,880
a

895
00:36:02,880 --> 00:36:04,960
detached bundle which i'm going to talk

896
00:36:04,960 --> 00:36:05,920
about

897
00:36:05,920 --> 00:36:08,640
in a slider to here

898
00:36:08,640 --> 00:36:11,119
okay so now

899
00:36:11,119 --> 00:36:15,040
uh um has cddl in there now for a claim

900
00:36:15,040 --> 00:36:16,960
set um

901
00:36:16,960 --> 00:36:19,200
this was the the same as the claims that

902
00:36:19,200 --> 00:36:22,640
that karsten was was talking about um

903
00:36:22,640 --> 00:36:25,040
i'm going to go into detail on that in

904
00:36:25,040 --> 00:36:27,839
following slides

905
00:36:27,839 --> 00:36:31,280
it defines a ujcs

906
00:36:31,280 --> 00:36:34,800
the json equivalent of a uccs

907
00:36:34,800 --> 00:36:36,800
this is what carson thought we should

908
00:36:36,800 --> 00:36:38,320
not define

909
00:36:38,320 --> 00:36:40,720
i put it in the document to have a clear

910
00:36:40,720 --> 00:36:42,720
articulation of it

911
00:36:42,720 --> 00:36:44,400
uh

912
00:36:44,400 --> 00:36:46,880
so um

913
00:36:46,880 --> 00:36:47,920
um

914
00:36:47,920 --> 00:36:50,000
so i i actually

915
00:36:50,000 --> 00:36:52,400
i see you you see the comments here

916
00:36:52,400 --> 00:36:53,440
i'd actually

917
00:36:53,440 --> 00:36:55,280
appreciate it if you guys uh let me

918
00:36:55,280 --> 00:36:57,200
finish and go through a lot of this

919
00:36:57,200 --> 00:36:59,839
before you jump to conclusions and

920
00:36:59,839 --> 00:37:00,960
things

921
00:37:00,960 --> 00:37:02,720
um uh

922
00:37:02,720 --> 00:37:04,800
that would be uh i think that would be

923
00:37:04,800 --> 00:37:06,560
really helpful to see what what i

924
00:37:06,560 --> 00:37:08,000
actually have to say about this before

925
00:37:08,000 --> 00:37:09,760
you are

926
00:37:09,760 --> 00:37:11,440
going there

927
00:37:11,440 --> 00:37:13,680
um

928
00:37:14,480 --> 00:37:16,720
so

929
00:37:18,400 --> 00:37:20,079
there are a bunch of clarifications and

930
00:37:20,079 --> 00:37:21,599
improvements on

931
00:37:21,599 --> 00:37:24,880
nesting of one eat inside another

932
00:37:24,880 --> 00:37:28,480
that and the the work on

933
00:37:28,480 --> 00:37:30,320
detached bundles

934
00:37:30,320 --> 00:37:33,119
actually drove me to a lot of the

935
00:37:33,119 --> 00:37:36,480
structuring of the cdl to get that all

936
00:37:36,480 --> 00:37:37,520
to work

937
00:37:37,520 --> 00:37:40,640
and to validate so it's it's to me it's

938
00:37:40,640 --> 00:37:42,720
kind of a

939
00:37:42,720 --> 00:37:43,520
uh

940
00:37:43,520 --> 00:37:45,520
you know it's a real nice goal here to

941
00:37:45,520 --> 00:37:47,200
be able to

942
00:37:47,200 --> 00:37:50,320
write the cdl uh for the whole

943
00:37:50,320 --> 00:37:52,000
specification and then have it

944
00:37:52,000 --> 00:37:54,480
automatically verify against the the

945
00:37:54,480 --> 00:37:56,720
diagnostic example so that really kind

946
00:37:56,720 --> 00:37:58,560
of proves out both the

947
00:37:58,560 --> 00:38:00,400
the examples and

948
00:38:00,400 --> 00:38:03,200
the cdl in the document

949
00:38:03,200 --> 00:38:06,240
okay next slide

950
00:38:11,280 --> 00:38:12,880
so

951
00:38:12,880 --> 00:38:14,480
those are the slides we had i don't know

952
00:38:14,480 --> 00:38:17,119
if there are questions or comments we

953
00:38:17,119 --> 00:38:18,720
want to talk about hang on what happened

954
00:38:18,720 --> 00:38:20,800
to the dev slide

955
00:38:20,800 --> 00:38:23,280
that's in the next uh that's in the next

956
00:38:23,280 --> 00:38:24,800
batch if you want to jump to that we can

957
00:38:24,800 --> 00:38:25,920
do that

958
00:38:25,920 --> 00:38:28,960
yeah i've been yeah okay i said many

959
00:38:28,960 --> 00:38:30,839
times many times that's where i wanted

960
00:38:30,839 --> 00:38:34,160
it oh okay yeah i know that yeah this is

961
00:38:34,160 --> 00:38:36,160
yeah because so okay so this is the dev

962
00:38:36,160 --> 00:38:38,160
slide so this is still part of the the

963
00:38:38,160 --> 00:38:41,119
uh dash 11 changes

964
00:38:41,119 --> 00:38:44,720
um and so i'm still in my first block of

965
00:38:44,720 --> 00:38:48,240
of work here um

966
00:38:48,240 --> 00:38:51,599
okay uh so at the tax to eat bundle um

967
00:38:51,599 --> 00:38:53,760
the basic i'm only going to introduce

968
00:38:53,760 --> 00:38:56,240
the topic here briefly um just to get

969
00:38:56,240 --> 00:38:58,079
you so everybody kind of has some idea

970
00:38:58,079 --> 00:39:00,079
that it exists i don't want to have a

971
00:39:00,079 --> 00:39:01,680
long discussion about it i don't think

972
00:39:01,680 --> 00:39:03,200
there's time for it

973
00:39:03,200 --> 00:39:05,520
um

974
00:39:07,119 --> 00:39:08,720
the um

975
00:39:08,720 --> 00:39:10,240
so on the the

976
00:39:10,240 --> 00:39:12,400
the picture on the

977
00:39:12,400 --> 00:39:13,599
left

978
00:39:13,599 --> 00:39:14,720
shows

979
00:39:14,720 --> 00:39:16,320
and eat which is

980
00:39:16,320 --> 00:39:18,480
you know a uh

981
00:39:18,480 --> 00:39:19,440
some

982
00:39:19,440 --> 00:39:22,480
claims it claims that uh as carson i

983
00:39:22,480 --> 00:39:25,839
believe says a ccs

984
00:39:25,839 --> 00:39:29,280
if it's cbor format

985
00:39:29,280 --> 00:39:31,200
which has the cose headers the coset

986
00:39:31,200 --> 00:39:33,599
payload and a cose signature

987
00:39:33,599 --> 00:39:35,599
so then if you look at the kosai payload

988
00:39:35,599 --> 00:39:39,040
there's the claim of ueid and nonce

989
00:39:39,040 --> 00:39:42,640
and then there are sub modules in the

990
00:39:42,640 --> 00:39:44,720
there's a sub module section and one of

991
00:39:44,720 --> 00:39:47,440
the sub sub modules is named xxx and it

992
00:39:47,440 --> 00:39:49,920
has a software name and software version

993
00:39:49,920 --> 00:39:52,079
so what's what

994
00:39:52,079 --> 00:39:54,720
detached here is that you can take the

995
00:39:54,720 --> 00:39:56,960
uh the claim set

996
00:39:56,960 --> 00:40:00,000
for xxx the sub module which is

997
00:40:00,000 --> 00:40:02,880
basically a ccs or

998
00:40:02,880 --> 00:40:05,040
a

999
00:40:05,359 --> 00:40:06,640
seaboard map

1000
00:40:06,640 --> 00:40:07,839
that

1001
00:40:07,839 --> 00:40:10,880
has the two claims and detach it so it

1002
00:40:10,880 --> 00:40:14,319
goes outside of the eat

1003
00:40:14,319 --> 00:40:17,119
and in this particular uh

1004
00:40:17,119 --> 00:40:18,800
and then what goes in the sub module

1005
00:40:18,800 --> 00:40:22,839
section is a digest of that or a hash of

1006
00:40:22,839 --> 00:40:26,880
that that claims that so you're

1007
00:40:26,880 --> 00:40:28,640
in in detaching your you know you're

1008
00:40:28,640 --> 00:40:32,720
able to take the claim set and um

1009
00:40:33,040 --> 00:40:35,040
transmit it uh

1010
00:40:35,040 --> 00:40:37,839
outside of the heat um

1011
00:40:37,839 --> 00:40:40,880
in a uh

1012
00:40:44,720 --> 00:40:47,599
some other some other way so um there is

1013
00:40:47,599 --> 00:40:48,560
uh

1014
00:40:48,560 --> 00:40:51,839
the the detached bundle is a way to take

1015
00:40:51,839 --> 00:40:55,359
the the eat and the detached claims and

1016
00:40:55,359 --> 00:40:56,560
send it

1017
00:40:56,560 --> 00:40:58,240
together you do not have to send it

1018
00:40:58,240 --> 00:40:59,839
together

1019
00:40:59,839 --> 00:41:00,960
um

1020
00:41:00,960 --> 00:41:02,240
but

1021
00:41:02,240 --> 00:41:04,319
to find a way to send it together

1022
00:41:04,319 --> 00:41:08,560
so the reason why you might do this

1023
00:41:08,640 --> 00:41:10,879
is

1024
00:41:11,440 --> 00:41:13,920
it allows you to build

1025
00:41:13,920 --> 00:41:15,200
a

1026
00:41:15,200 --> 00:41:18,319
smaller a tester

1027
00:41:18,640 --> 00:41:21,200
that um basically can be kind of a like

1028
00:41:21,200 --> 00:41:23,680
an attestation hardware block

1029
00:41:23,680 --> 00:41:26,079
where the claims are

1030
00:41:26,079 --> 00:41:28,560
built outside of the attestation block

1031
00:41:28,560 --> 00:41:30,560
and then the claims that can be the hash

1032
00:41:30,560 --> 00:41:32,319
of a claim set can be fed into the

1033
00:41:32,319 --> 00:41:34,720
attestation hardware block

1034
00:41:34,720 --> 00:41:37,119
through something like a pcr that a tpm

1035
00:41:37,119 --> 00:41:38,800
has

1036
00:41:38,800 --> 00:41:41,040
um

1037
00:41:42,079 --> 00:41:44,640
basically when i when i you know for for

1038
00:41:44,640 --> 00:41:47,359
a long time i've thought that

1039
00:41:47,359 --> 00:41:50,880
it would be a good thing to have a

1040
00:41:50,880 --> 00:41:52,640
to be able to build such a hardware

1041
00:41:52,640 --> 00:41:55,359
attestation block that does eat

1042
00:41:55,359 --> 00:41:59,359
um uh any format so um

1043
00:41:59,359 --> 00:42:02,960
this is the the way to do that so i uh i

1044
00:42:02,960 --> 00:42:04,319
don't want to spend a huge amount of

1045
00:42:04,319 --> 00:42:05,839
time having the discussion on that right

1046
00:42:05,839 --> 00:42:07,599
now i didn't there wasn't really time in

1047
00:42:07,599 --> 00:42:09,839
the agenda for that so um and this is

1048
00:42:09,839 --> 00:42:11,839
not my top priority to get through that

1049
00:42:11,839 --> 00:42:13,440
it's more the the

1050
00:42:13,440 --> 00:42:15,599
cw jwt

1051
00:42:15,599 --> 00:42:17,119
issue discussion is more important to me

1052
00:42:17,119 --> 00:42:18,480
here so

1053
00:42:18,480 --> 00:42:20,960
so that's uh detached each bundle so you

1054
00:42:20,960 --> 00:42:24,000
can go look at that in the um

1055
00:42:24,000 --> 00:42:26,960
in the latest draft

1056
00:42:26,960 --> 00:42:28,079
um

1057
00:42:28,079 --> 00:42:33,440
uh so uh that is it for my first uh part

1058
00:42:33,440 --> 00:42:36,240
um so i think we can move on

1059
00:42:36,240 --> 00:42:39,520
to the next part here okay so the next

1060
00:42:39,520 --> 00:42:41,200
topic is

1061
00:42:41,200 --> 00:42:43,760
eat topics in general so we can move to

1062
00:42:43,760 --> 00:42:44,800
that

1063
00:42:44,800 --> 00:42:46,160
if you like

1064
00:42:46,160 --> 00:42:49,200
there is one person hold on um

1065
00:42:49,200 --> 00:42:51,200
i see dave thaler on the queue i didn't

1066
00:42:51,200 --> 00:42:54,720
know david you had a question

1067
00:42:54,960 --> 00:42:57,599
we have two minutes left on this slot so

1068
00:42:57,599 --> 00:42:59,200
yeah

1069
00:42:59,200 --> 00:43:01,359
i do have a question but you're free to

1070
00:43:01,359 --> 00:43:02,800
tell me if you'll cover it later but i

1071
00:43:02,800 --> 00:43:05,839
suspect not because uh uh my comment is

1072
00:43:05,839 --> 00:43:07,680
so first of all uh i want to say i like

1073
00:43:07,680 --> 00:43:09,760
what you did with the sub mod stuff so i

1074
00:43:09,760 --> 00:43:12,240
think that's very useful thank you um

1075
00:43:12,240 --> 00:43:14,480
the comment that i had was you know you

1076
00:43:14,480 --> 00:43:16,079
had the slide that had all the green

1077
00:43:16,079 --> 00:43:18,000
stuff saying ready for last call so i'll

1078
00:43:18,000 --> 00:43:20,319
uh repeat my comment now along with a

1079
00:43:20,319 --> 00:43:21,440
thank you for another change that you

1080
00:43:21,440 --> 00:43:24,720
made um i think the document is ready

1081
00:43:24,720 --> 00:43:27,440
when it this is a personal opinion when

1082
00:43:27,440 --> 00:43:29,760
it also meets the teep requirements

1083
00:43:29,760 --> 00:43:31,119
and since i've mentioned this at the

1084
00:43:31,119 --> 00:43:32,640
last two ietf meetings i'll mention it

1085
00:43:32,640 --> 00:43:35,599
again that the teep architecture had uh

1086
00:43:35,599 --> 00:43:37,680
five requirements for things that were

1087
00:43:37,680 --> 00:43:39,599
not in the old eat spec

1088
00:43:39,599 --> 00:43:42,560
um i and i had asked can we merge those

1089
00:43:42,560 --> 00:43:44,400
into the main document and out of the

1090
00:43:44,400 --> 00:43:47,119
general section of hank's draft suit

1091
00:43:47,119 --> 00:43:48,800
rats claims because they're not specific

1092
00:43:48,800 --> 00:43:49,599
to

1093
00:43:49,599 --> 00:43:52,160
teep or suit they're just general things

1094
00:43:52,160 --> 00:43:54,079
one of those was version and so you

1095
00:43:54,079 --> 00:43:55,680
mentioned you added software versions

1096
00:43:55,680 --> 00:43:57,200
now you have both software version and

1097
00:43:57,200 --> 00:43:59,280
hardware version just a separate claims

1098
00:43:59,280 --> 00:44:01,520
and so i think that one is now checked

1099
00:44:01,520 --> 00:44:03,200
so thank you for adding that i think

1100
00:44:03,200 --> 00:44:04,640
that checks off that and i think that

1101
00:44:04,640 --> 00:44:07,359
obsoletes what hank you had in the uh in

1102
00:44:07,359 --> 00:44:10,240
the version claim there there's uh four

1103
00:44:10,240 --> 00:44:12,079
other ones that i have not seen in there

1104
00:44:12,079 --> 00:44:15,280
and so uh my question is and you may not

1105
00:44:15,280 --> 00:44:16,960
have an answer right now is is there

1106
00:44:16,960 --> 00:44:18,560
already some other way to do those or do

1107
00:44:18,560 --> 00:44:20,160
you plan on adding those because i think

1108
00:44:20,160 --> 00:44:21,839
that's what would block going to rfc in

1109
00:44:21,839 --> 00:44:24,480
my opinion those were device identifier

1110
00:44:24,480 --> 00:44:26,160
vendor identifier class identifier and

1111
00:44:26,160 --> 00:44:28,640
component identifier and hank's document

1112
00:44:28,640 --> 00:44:30,640
and t the t protocol is referencing

1113
00:44:30,640 --> 00:44:32,800
those right now as well as referencing

1114
00:44:32,800 --> 00:44:34,480
version but i'm happy to update that to

1115
00:44:34,480 --> 00:44:35,920
point the software version now that you

1116
00:44:35,920 --> 00:44:38,000
have that in there so

1117
00:44:38,000 --> 00:44:41,520
yeah um so uh i wrote some emails about

1118
00:44:41,520 --> 00:44:44,560
that um i had some comments about

1119
00:44:44,560 --> 00:44:46,319
that and i

1120
00:44:46,319 --> 00:44:47,599
uh

1121
00:44:47,599 --> 00:44:50,000
i don't remember what i wrote right now

1122
00:44:50,000 --> 00:44:54,480
in detail um i know um i i thought some

1123
00:44:54,480 --> 00:44:57,440
of them were very much suit specific and

1124
00:44:57,440 --> 00:45:00,720
not lined up with uh um

1125
00:45:00,720 --> 00:45:03,599
general stuff and e those four are ones

1126
00:45:03,599 --> 00:45:05,200
that are not suit specific there's other

1127
00:45:05,200 --> 00:45:06,880
ones that are but those four are ones

1128
00:45:06,880 --> 00:45:08,800
that we'd all argued including on the

1129
00:45:08,800 --> 00:45:10,640
list discussion a year ago that none of

1130
00:45:10,640 --> 00:45:12,160
those are suit specific

1131
00:45:12,160 --> 00:45:14,079
well there's other ones that aren't

1132
00:45:14,079 --> 00:45:15,440
sure

1133
00:45:15,440 --> 00:45:18,240
the the detailed discussion um of some

1134
00:45:18,240 --> 00:45:19,760
of those those things i i think we need

1135
00:45:19,760 --> 00:45:22,000
to go back to that discussion and and

1136
00:45:22,000 --> 00:45:23,599
so just look at that that i don't think

1137
00:45:23,599 --> 00:45:25,280
it's ready for last call in my personal

1138
00:45:25,280 --> 00:45:27,119
opinion until those four are either in

1139
00:45:27,119 --> 00:45:28,400
there or until there's an argument that

1140
00:45:28,400 --> 00:45:29,440
says there's already something in there

1141
00:45:29,440 --> 00:45:30,800
that covers those four requirements so

1142
00:45:30,800 --> 00:45:32,720
that's my opinion so and i see hank is

1143
00:45:32,720 --> 00:45:34,400
in queue so he has a different opinion

1144
00:45:34,400 --> 00:45:36,560
so

1145
00:45:38,400 --> 00:45:39,920
i think

1146
00:45:39,920 --> 00:45:40,800
yeah

1147
00:45:40,800 --> 00:45:41,839
it's also

1148
00:45:41,839 --> 00:45:44,720
probably not different

1149
00:45:44,720 --> 00:45:47,200
but uh um the these these kinds of

1150
00:45:47,200 --> 00:45:49,520
identifiers and identities

1151
00:45:49,520 --> 00:45:52,079
uh we are dealing with in in that's like

1152
00:45:52,079 --> 00:45:54,480
of course on multiple um conceptual

1153
00:45:54,480 --> 00:45:57,119
messages and one of these is uh

1154
00:45:57,119 --> 00:45:58,720
the reference integrity manifest the

1155
00:45:58,720 --> 00:46:01,280
concise one so

1156
00:46:01,280 --> 00:46:03,760
i think we can borrow

1157
00:46:03,760 --> 00:46:05,760
semantics from there

1158
00:46:05,760 --> 00:46:08,079
what i really like to have is to us

1159
00:46:08,079 --> 00:46:10,720
don't see that semantics change anymore

1160
00:46:10,720 --> 00:46:12,160
because we

1161
00:46:12,160 --> 00:46:13,680
took like a year

1162
00:46:13,680 --> 00:46:14,720
with

1163
00:46:14,720 --> 00:46:17,119
several um let's call them harvard of

1164
00:46:17,119 --> 00:46:20,240
trust stakeholders to to get them right

1165
00:46:20,240 --> 00:46:23,200
and so uh so if you want to borrow them

1166
00:46:23,200 --> 00:46:25,280
um maybe that's not for the current eat

1167
00:46:25,280 --> 00:46:28,720
it but but we can we can of course i

1168
00:46:28,720 --> 00:46:29,680
think

1169
00:46:29,680 --> 00:46:33,040
uh either includes uh a notion that and

1170
00:46:33,040 --> 00:46:35,200
these can be these claims for each

1171
00:46:35,200 --> 00:46:36,079
please

1172
00:46:36,079 --> 00:46:39,280
add them to cwt registry or

1173
00:46:39,280 --> 00:46:41,359
do another id that says okay and these

1174
00:46:41,359 --> 00:46:44,319
are about identities of various things

1175
00:46:44,319 --> 00:46:46,560
and now we have this id that ties us all

1176
00:46:46,560 --> 00:46:48,480
together so so again i wouldn't want to

1177
00:46:48,480 --> 00:46:50,800
stop each progression here but i want to

1178
00:46:50,800 --> 00:46:52,000
say

1179
00:46:52,000 --> 00:46:53,680
that we have

1180
00:46:53,680 --> 00:46:55,920
several identity related claims that i

1181
00:46:55,920 --> 00:46:58,160
think that working out quite well

1182
00:46:58,160 --> 00:47:02,000
um and we're happy to have

1183
00:47:02,000 --> 00:47:04,560
yeah my my request here really is for

1184
00:47:04,560 --> 00:47:06,640
engagement um that i think that's the

1185
00:47:06,640 --> 00:47:08,079
most important thing

1186
00:47:08,079 --> 00:47:08,960
um

1187
00:47:08,960 --> 00:47:10,480
uh i feel like i

1188
00:47:10,480 --> 00:47:12,480
haven't had comments about a lot of the

1189
00:47:12,480 --> 00:47:13,599
stuff and

1190
00:47:13,599 --> 00:47:16,240
people haven't read them or or or

1191
00:47:16,240 --> 00:47:17,599
and stuff so

1192
00:47:17,599 --> 00:47:21,200
um please like gary said file issues um

1193
00:47:21,200 --> 00:47:23,680
and follow follow up with the comments i

1194
00:47:23,680 --> 00:47:26,400
mean that's that's what i i think is

1195
00:47:26,400 --> 00:47:29,200
really important here

1196
00:47:29,200 --> 00:47:31,040
yeah the the thing is that that we are

1197
00:47:31,040 --> 00:47:32,800
not working on each here we are working

1198
00:47:32,800 --> 00:47:34,559
on the other side of the things that's

1199
00:47:34,559 --> 00:47:36,160
coming from supply chain and

1200
00:47:36,160 --> 00:47:39,280
endorsements and such so so uh

1201
00:47:39,280 --> 00:47:42,240
yeah our direct need is not to fire a

1202
00:47:42,240 --> 00:47:44,079
issue on it

1203
00:47:44,079 --> 00:47:47,119
um but but maybe we should align anyway

1204
00:47:47,119 --> 00:47:50,000
so so the synchronization is i think key

1205
00:47:50,000 --> 00:47:52,720
but i would not put honors on one of the

1206
00:47:52,720 --> 00:47:53,920
parties to

1207
00:47:53,920 --> 00:47:57,359
to to to jump into the pool of the other

1208
00:47:57,359 --> 00:48:00,640
uh so so maybe we should join

1209
00:48:00,640 --> 00:48:03,440
and and and some some design meetings

1210
00:48:03,440 --> 00:48:05,760
here i think

1211
00:48:05,760 --> 00:48:08,400
i think we're we're out of time on this

1212
00:48:08,400 --> 00:48:11,200
discussion if we have time during open

1213
00:48:11,200 --> 00:48:13,119
make we can continue that discussion

1214
00:48:13,119 --> 00:48:14,160
there

1215
00:48:14,160 --> 00:48:16,559
but i think we need to move forward

1216
00:48:16,559 --> 00:48:19,559
yeah

1217
00:48:20,559 --> 00:48:24,480
so next topic is also lawrence

1218
00:48:25,520 --> 00:48:26,960
all right so i'm going to talk about

1219
00:48:26,960 --> 00:48:29,200
these three things here uh cddl for a

1220
00:48:29,200 --> 00:48:30,720
claim set

1221
00:48:30,720 --> 00:48:33,760
that is for both stibor and jason

1222
00:48:33,760 --> 00:48:36,800
for on talk about ujcs

1223
00:48:36,800 --> 00:48:40,400
and talk about nesting eats

1224
00:48:40,720 --> 00:48:42,480
next slide

1225
00:48:42,480 --> 00:48:44,240
so

1226
00:48:44,240 --> 00:48:46,160
i believe there is quite general

1227
00:48:46,160 --> 00:48:49,119
agreement that cdl can be used to define

1228
00:48:49,119 --> 00:48:51,200
stuff that is both

1229
00:48:51,200 --> 00:48:54,240
to encode in both jason and cyborg

1230
00:48:54,240 --> 00:48:56,880
appendix e says how to do it i see lots

1231
00:48:56,880 --> 00:48:58,559
of other protocol defining drafts doing

1232
00:48:58,559 --> 00:48:59,520
it now

1233
00:48:59,520 --> 00:49:01,440
there was an email discussion

1234
00:49:01,440 --> 00:49:05,680
and there was consensus on that

1235
00:49:07,200 --> 00:49:09,280
i see

1236
00:49:09,280 --> 00:49:11,280
seabor and jason will coexist for a

1237
00:49:11,280 --> 00:49:13,520
really long time i mean seabor has the

1238
00:49:13,520 --> 00:49:15,359
the compactness that jason doesn't have

1239
00:49:15,359 --> 00:49:16,720
and jason is

1240
00:49:16,720 --> 00:49:19,359
you know used very very broadly in back

1241
00:49:19,359 --> 00:49:21,599
ends

1242
00:49:21,599 --> 00:49:24,079
next slide

1243
00:49:24,960 --> 00:49:27,440
so we

1244
00:49:27,520 --> 00:49:31,079
have um

1245
00:49:31,119 --> 00:49:33,760
i mean my sense is that there is

1246
00:49:33,760 --> 00:49:36,880
agreement that um uh eat

1247
00:49:36,880 --> 00:49:40,880
and all the eat claims are to be in

1248
00:49:40,880 --> 00:49:44,800
both seaboard format and json format so

1249
00:49:44,800 --> 00:49:48,319
eat is either a cwt or a gwt

1250
00:49:48,319 --> 00:49:49,520
my understanding is that there's

1251
00:49:49,520 --> 00:49:52,240
consensus on that

1252
00:49:52,240 --> 00:49:53,680
and

1253
00:49:53,680 --> 00:49:56,000
that that's what's been in the document

1254
00:49:56,000 --> 00:49:57,440
for

1255
00:49:57,440 --> 00:50:00,079
a long long time now a couple of years

1256
00:50:00,079 --> 00:50:02,880
there's been no objections to to that

1257
00:50:02,880 --> 00:50:04,640
and it's kind of been the the way of

1258
00:50:04,640 --> 00:50:05,760
proceeding

1259
00:50:05,760 --> 00:50:08,880
um uh karsten

1260
00:50:11,119 --> 00:50:14,000
yeah um i i just wanted to point out the

1261
00:50:14,000 --> 00:50:15,760
difference between what what other

1262
00:50:15,760 --> 00:50:18,079
documents that define both

1263
00:50:18,079 --> 00:50:20,720
sibo and and json representations of the

1264
00:50:20,720 --> 00:50:22,640
thing same thing

1265
00:50:22,640 --> 00:50:23,520
do

1266
00:50:23,520 --> 00:50:26,319
and what what you're trying to do here

1267
00:50:26,319 --> 00:50:27,359
um

1268
00:50:27,359 --> 00:50:30,400
cwt was never designed to be a mirror of

1269
00:50:30,400 --> 00:50:32,480
jwt

1270
00:50:32,480 --> 00:50:36,319
so these are two different standards

1271
00:50:36,319 --> 00:50:39,359
where crut just was able to borrow a lot

1272
00:50:39,359 --> 00:50:41,920
of stuff which is nice to to get the

1273
00:50:41,920 --> 00:50:44,160
thing kick-started

1274
00:50:44,160 --> 00:50:47,200
but there are also things that are cwt

1275
00:50:47,200 --> 00:50:48,640
specific

1276
00:50:48,640 --> 00:50:49,920
and

1277
00:50:49,920 --> 00:50:51,200
it will

1278
00:50:51,200 --> 00:50:54,160
in general not be possible to have the

1279
00:50:54,160 --> 00:50:57,520
same city for everything that is in cwt

1280
00:50:57,520 --> 00:51:00,400
and everything in jerusalem because they

1281
00:51:00,400 --> 00:51:02,000
are not the same thing

1282
00:51:02,000 --> 00:51:03,119
and

1283
00:51:03,119 --> 00:51:04,319
so

1284
00:51:04,319 --> 00:51:05,359
i think

1285
00:51:05,359 --> 00:51:08,400
we need a slightly different approach to

1286
00:51:08,400 --> 00:51:10,880
to solving the formal description issue

1287
00:51:10,880 --> 00:51:14,160
for cw3t and jwt

1288
00:51:14,160 --> 00:51:17,040
and i would love to find find a good way

1289
00:51:17,040 --> 00:51:19,599
to do that but we first have to give up

1290
00:51:19,599 --> 00:51:23,119
on the premise that these two are just

1291
00:51:23,119 --> 00:51:26,960
interchangeable literally they aren't

1292
00:51:30,000 --> 00:51:32,079
so um

1293
00:51:32,079 --> 00:51:34,800
i'm i'm looking for

1294
00:51:34,800 --> 00:51:37,119
i mean i

1295
00:51:37,119 --> 00:51:38,880
again i can understand

1296
00:51:38,880 --> 00:51:40,079
to some degree what you're saying i

1297
00:51:40,079 --> 00:51:42,559
don't know exactly uh what you're seeing

1298
00:51:42,559 --> 00:51:44,880
as the difference here um but i i

1299
00:51:44,880 --> 00:51:46,319
understand that um

1300
00:51:46,319 --> 00:51:48,800
i'm kind of looking for a solution to be

1301
00:51:48,800 --> 00:51:49,680
able to

1302
00:51:49,680 --> 00:51:51,119
do what

1303
00:51:51,119 --> 00:51:53,359
i thought we were agreed on doing and

1304
00:51:53,359 --> 00:51:55,920
eat where uh eat

1305
00:51:55,920 --> 00:51:57,680
was both

1306
00:51:57,680 --> 00:52:00,640
could be either a cwd or a jwt

1307
00:52:00,640 --> 00:52:03,920
so i'm open to solutions here um uh on

1308
00:52:03,920 --> 00:52:06,480
how to do this uh

1309
00:52:06,480 --> 00:52:08,800
other than what i've what i've done so i

1310
00:52:08,800 --> 00:52:10,559
put you know there's a bunch of stuff in

1311
00:52:10,559 --> 00:52:13,040
in in the dash 11 draft there was stuff

1312
00:52:13,040 --> 00:52:14,880
in the dash tender after the dash 9

1313
00:52:14,880 --> 00:52:17,200
draft for all of this before

1314
00:52:17,200 --> 00:52:18,960
the stuff in the dash 11 draft is much

1315
00:52:18,960 --> 00:52:20,079
improved

1316
00:52:20,079 --> 00:52:21,359
um and

1317
00:52:21,359 --> 00:52:22,640
it's

1318
00:52:22,640 --> 00:52:24,240
working with validation in a lot of good

1319
00:52:24,240 --> 00:52:25,839
ways um so

1320
00:52:25,839 --> 00:52:30,720
so i'm going to continue on on here and

1321
00:52:30,960 --> 00:52:32,720
because because some of the some of what

1322
00:52:32,720 --> 00:52:34,559
i'm doing here is kind of problem

1323
00:52:34,559 --> 00:52:37,200
statement and describing a solution that

1324
00:52:37,200 --> 00:52:39,119
i i've come up with

1325
00:52:39,119 --> 00:52:40,319
um

1326
00:52:40,319 --> 00:52:42,640
and then let's see um

1327
00:52:42,640 --> 00:52:44,839
what comes out of

1328
00:52:44,839 --> 00:52:47,839
that so um

1329
00:52:47,839 --> 00:52:49,280
uh

1330
00:52:49,280 --> 00:52:51,150
it claims that um uh

1331
00:52:51,150 --> 00:52:52,640
[Music]

1332
00:52:52,640 --> 00:52:54,319
i mean that's the sort of the core of

1333
00:52:54,319 --> 00:52:56,800
the uccs carson referred to this as a

1334
00:52:56,800 --> 00:52:58,160
ccs

1335
00:52:58,160 --> 00:53:01,520
um so i have defined cdl for a claim set

1336
00:53:01,520 --> 00:53:03,760
and i'll show it in a few slides so a

1337
00:53:03,760 --> 00:53:05,920
claim set is basically a group of label

1338
00:53:05,920 --> 00:53:08,319
value pairs that that it you know

1339
00:53:08,319 --> 00:53:10,240
pertain to a device a subsystem a

1340
00:53:10,240 --> 00:53:12,800
transaction a result something right

1341
00:53:12,800 --> 00:53:15,760
um both cwt and jwt

1342
00:53:15,760 --> 00:53:17,520
revolve around the claims that they're

1343
00:53:17,520 --> 00:53:18,720
both

1344
00:53:18,720 --> 00:53:20,000
groups or

1345
00:53:20,000 --> 00:53:21,920
a label value paris preston referred to

1346
00:53:21,920 --> 00:53:24,000
that as an assertion

1347
00:53:24,000 --> 00:53:24,800
um

1348
00:53:24,800 --> 00:53:27,599
so a claim is that is it's a convenient

1349
00:53:27,599 --> 00:53:29,520
unit of conveyance between roles and

1350
00:53:29,520 --> 00:53:31,359
actors and if you have some things to

1351
00:53:31,359 --> 00:53:33,680
say between this role and that role

1352
00:53:33,680 --> 00:53:36,319
um putting in a claim set uh

1353
00:53:36,319 --> 00:53:39,040
works pretty well

1354
00:53:40,480 --> 00:53:42,720
the other way to look at it is that it

1355
00:53:42,720 --> 00:53:43,839
is a

1356
00:53:43,839 --> 00:53:46,160
really useful structure to sign and or

1357
00:53:46,160 --> 00:53:48,480
encrypt so the you know the payload for

1358
00:53:48,480 --> 00:53:50,400
cose or jose so

1359
00:53:50,400 --> 00:53:53,760
um so this this part seems uh largely in

1360
00:53:53,760 --> 00:53:55,359
common between

1361
00:53:55,359 --> 00:53:57,359
cwt and jwt

1362
00:53:57,359 --> 00:53:59,839
so um

1363
00:53:59,839 --> 00:54:02,640
seems very useful to have cddl for

1364
00:54:02,640 --> 00:54:05,440
a claim set

1365
00:54:06,880 --> 00:54:08,079
that

1366
00:54:08,079 --> 00:54:10,960
and that seems like that can mostly work

1367
00:54:10,960 --> 00:54:14,400
for both uh uh seabor and jason the the

1368
00:54:14,400 --> 00:54:17,040
definition the cdl for claims that is

1369
00:54:17,040 --> 00:54:18,880
the same in

1370
00:54:18,880 --> 00:54:21,200
uh sea war and jason

1371
00:54:21,200 --> 00:54:24,079
i'll get to that in more detail

1372
00:54:24,079 --> 00:54:25,839
so then you go off and define all the

1373
00:54:25,839 --> 00:54:28,240
individual claims in cdl and they just

1374
00:54:28,240 --> 00:54:30,319
plug right into

1375
00:54:30,319 --> 00:54:31,920
actually using a

1376
00:54:31,920 --> 00:54:35,119
cdl socket they plug right into

1377
00:54:35,119 --> 00:54:36,480
the claim set

1378
00:54:36,480 --> 00:54:40,400
cdl structure um

1379
00:54:40,400 --> 00:54:42,160
so then so that's when you're

1380
00:54:42,160 --> 00:54:43,920
constructing claims you write them in

1381
00:54:43,920 --> 00:54:46,240
the cdl to plug into the claim set

1382
00:54:46,240 --> 00:54:47,119
structure

1383
00:54:47,119 --> 00:54:48,640
when you

1384
00:54:48,640 --> 00:54:50,640
want to have a pro when you're you're

1385
00:54:50,640 --> 00:54:53,599
designing a protocol that needs to have

1386
00:54:53,599 --> 00:54:56,240
a claim set in it then you just refer to

1387
00:54:56,240 --> 00:54:58,880
uh claim set and uh

1388
00:54:58,880 --> 00:55:01,040
that you can just use all the off off

1389
00:55:01,040 --> 00:55:02,960
the shelf

1390
00:55:02,960 --> 00:55:04,799
use that use that off the shelf and you

1391
00:55:04,799 --> 00:55:06,319
know even not any station product close

1392
00:55:06,319 --> 00:55:08,720
to this could do this and then

1393
00:55:08,720 --> 00:55:10,880
you're you're just writing cdl once for

1394
00:55:10,880 --> 00:55:14,079
jason or cbor

1395
00:55:14,720 --> 00:55:16,640
uh so um

1396
00:55:16,640 --> 00:55:17,599
uh

1397
00:55:17,599 --> 00:55:19,440
karsten go ahead

1398
00:55:19,440 --> 00:55:20,640
yeah

1399
00:55:20,640 --> 00:55:24,799
i agree that when you design new claims

1400
00:55:24,799 --> 00:55:29,119
that are designed to be both in

1401
00:55:29,119 --> 00:55:32,640
jwt and cwt

1402
00:55:32,640 --> 00:55:35,680
it's certainly a relief to to only have

1403
00:55:35,680 --> 00:55:37,520
to write the city there once

1404
00:55:37,520 --> 00:55:39,520
uh so i think that that's a good thing

1405
00:55:39,520 --> 00:55:42,319
and and developing some some

1406
00:55:42,319 --> 00:55:43,839
standards

1407
00:55:43,839 --> 00:55:46,400
convention agreed way to to write the

1408
00:55:46,400 --> 00:55:49,200
city is definitely a good idea so i'm

1409
00:55:49,200 --> 00:55:51,680
with you on that i'm just not sure that

1410
00:55:51,680 --> 00:55:54,480
we we can retroactively apply

1411
00:55:54,480 --> 00:55:56,160
this to

1412
00:55:56,160 --> 00:55:59,520
things that are already out there

1413
00:55:59,599 --> 00:56:02,839
yeah okay

1414
00:56:03,040 --> 00:56:06,160
um so uh

1415
00:56:06,240 --> 00:56:08,559
then uh

1416
00:56:08,559 --> 00:56:11,920
with with um sub mods uh

1417
00:56:11,920 --> 00:56:14,319
and you know nested tokens it became

1418
00:56:14,319 --> 00:56:17,839
interesting to

1419
00:56:17,920 --> 00:56:20,799
nest one claim set in in another

1420
00:56:20,799 --> 00:56:22,240
so

1421
00:56:22,240 --> 00:56:25,040
having the you know to write the cddl

1422
00:56:25,040 --> 00:56:27,760
for that uh

1423
00:56:27,760 --> 00:56:31,359
i mean i needed to have the the cdl for

1424
00:56:31,359 --> 00:56:33,119
a claim set

1425
00:56:33,119 --> 00:56:33,920
um

1426
00:56:33,920 --> 00:56:35,520
and i'm going to i'm going to tell you

1427
00:56:35,520 --> 00:56:37,839
why i even want to put seaboard claim

1428
00:56:37,839 --> 00:56:40,000
sets inside json claim sets and vice

1429
00:56:40,000 --> 00:56:42,480
versa

1430
00:56:42,960 --> 00:56:45,839
next slide please

1431
00:56:48,799 --> 00:56:51,359
okay so here's the uh the cdl for a

1432
00:56:51,359 --> 00:56:52,559
claim set

1433
00:56:52,559 --> 00:56:53,520
um

1434
00:56:53,520 --> 00:56:55,760
the really the important important

1435
00:56:55,760 --> 00:56:58,480
important part is the first line there

1436
00:56:58,480 --> 00:57:01,040
so a claim set is a map

1437
00:57:01,040 --> 00:57:02,960
or the first entry in that in that map

1438
00:57:02,960 --> 00:57:04,799
is a plug

1439
00:57:04,799 --> 00:57:06,640
claim set claims

1440
00:57:06,640 --> 00:57:10,319
where you plug more claims in so then

1441
00:57:10,319 --> 00:57:12,640
and the the second line there the with

1442
00:57:12,640 --> 00:57:16,319
the uh dot feature control that's uh

1443
00:57:16,319 --> 00:57:17,440
a uh

1444
00:57:17,440 --> 00:57:19,359
kind of a catch-all to make sure that

1445
00:57:19,359 --> 00:57:21,839
anything that is not defined

1446
00:57:21,839 --> 00:57:25,200
uh in the in the socket um uh is in the

1447
00:57:25,200 --> 00:57:27,359
right format with the label

1448
00:57:27,359 --> 00:57:30,319
but your primary thing is the

1449
00:57:30,319 --> 00:57:33,760
the cdl for uh claim set claims so

1450
00:57:33,760 --> 00:57:35,760
then what you do is when you define a

1451
00:57:35,760 --> 00:57:38,400
claim in this case i'm i'm

1452
00:57:38,400 --> 00:57:40,720
giving an example of the the subject

1453
00:57:40,720 --> 00:57:42,880
claim from

1454
00:57:42,880 --> 00:57:45,119
both

1455
00:57:45,520 --> 00:57:47,440
cwt and jwt

1456
00:57:47,440 --> 00:57:50,240
which is just a text field

1457
00:57:50,240 --> 00:57:52,000
you write that

1458
00:57:52,000 --> 00:57:53,599
line in the second box there where you

1459
00:57:53,599 --> 00:57:56,960
say slash equals

1460
00:57:56,960 --> 00:57:58,079
label

1461
00:57:58,079 --> 00:58:01,200
equals greater than text

1462
00:58:01,200 --> 00:58:05,279
so that's that's the definition of a

1463
00:58:06,160 --> 00:58:09,280
of a claim so if you're off

1464
00:58:09,280 --> 00:58:12,400
inventing claims and um you know some

1465
00:58:12,400 --> 00:58:13,839
other document

1466
00:58:13,839 --> 00:58:16,000
in suit or something like that you're

1467
00:58:16,000 --> 00:58:17,040
basically

1468
00:58:17,040 --> 00:58:18,720
writing things that plug into that

1469
00:58:18,720 --> 00:58:21,520
socket that look like that

1470
00:58:21,520 --> 00:58:25,599
and then because uh labels are integers

1471
00:58:25,599 --> 00:58:27,680
in seaward or you really want them to be

1472
00:58:27,680 --> 00:58:30,079
and that's kind of the point you wind up

1473
00:58:30,079 --> 00:58:32,160
with

1474
00:58:32,160 --> 00:58:34,240
assigning the label twice

1475
00:58:34,240 --> 00:58:36,000
you can actually assign it with a slash

1476
00:58:36,000 --> 00:58:37,280
equals as well

1477
00:58:37,280 --> 00:58:38,960
so the label can be either

1478
00:58:38,960 --> 00:58:41,040
the the integer or the text string and

1479
00:58:41,040 --> 00:58:43,200
json

1480
00:58:43,200 --> 00:58:44,079
um

1481
00:58:44,079 --> 00:58:46,640
next slide

1482
00:58:47,839 --> 00:58:50,720
so here's the

1483
00:58:50,799 --> 00:58:55,200
cddl for the seven claims in cwt and jwt

1484
00:58:55,200 --> 00:58:59,520
the one place you there is an issue

1485
00:59:00,799 --> 00:59:02,880
is that

1486
00:59:02,880 --> 00:59:07,119
the cti jti uh claim um

1487
00:59:07,119 --> 00:59:09,119
in its text in

1488
00:59:09,119 --> 00:59:10,799
jwt and

1489
00:59:10,799 --> 00:59:13,520
bytes and binary in cwt so this is

1490
00:59:13,520 --> 00:59:15,440
definitely an issue

1491
00:59:15,440 --> 00:59:16,400
um

1492
00:59:16,400 --> 00:59:18,640
between the two um i don't have a

1493
00:59:18,640 --> 00:59:20,960
solution for it um

1494
00:59:20,960 --> 00:59:22,960
it's also an issue

1495
00:59:22,960 --> 00:59:25,599
generally where um

1496
00:59:25,599 --> 00:59:29,119
you know a claim in cbor is bytes um by

1497
00:59:29,119 --> 00:59:32,000
string and it needs to be base 64

1498
00:59:32,000 --> 00:59:34,240
encoded in

1499
00:59:34,240 --> 00:59:36,480
json um

1500
00:59:36,480 --> 00:59:38,400
and this this comes up yeah you know as

1501
00:59:38,400 --> 00:59:41,599
an issue with the cdl validation tool so

1502
00:59:41,599 --> 00:59:43,520
kind of been skipping around that one

1503
00:59:43,520 --> 00:59:45,520
but that that's an issue i was kind of

1504
00:59:45,520 --> 00:59:47,839
looking for some solution to it

1505
00:59:47,839 --> 00:59:51,520
um so uh next slide

1506
00:59:52,240 --> 00:59:54,480
there's uh hanks on the cube by the way

1507
00:59:54,480 --> 00:59:57,839
okay sorry i keep switching between the

1508
00:59:57,839 --> 01:00:00,000
yeah go ahead actually that's just going

1509
01:00:00,000 --> 01:00:02,160
in line sorry for interrupting so so

1510
01:00:02,160 --> 01:00:03,760
yeah but you're bringing up the good

1511
01:00:03,760 --> 01:00:05,760
arguments here so uh

1512
01:00:05,760 --> 01:00:08,000
i would also not have a good solution

1513
01:00:08,000 --> 01:00:10,000
how to deal with bytes and if you're

1514
01:00:10,000 --> 01:00:12,839
going to into the tech space

1515
01:00:12,839 --> 01:00:16,960
um that that seems to me that

1516
01:00:16,960 --> 01:00:18,480
yeah

1517
01:00:18,480 --> 01:00:20,240
as i see what the super said there might

1518
01:00:20,240 --> 01:00:22,480
be a predominant

1519
01:00:22,480 --> 01:00:24,240
way to express this and then you

1520
01:00:24,240 --> 01:00:26,839
transcode it down to

1521
01:00:26,839 --> 01:00:28,640
jason

1522
01:00:28,640 --> 01:00:30,799
it could be possible but yeah but that's

1523
01:00:30,799 --> 01:00:32,480
not talking about this so yeah but sorry

1524
01:00:32,480 --> 01:00:34,319
sorry for being in line so just please

1525
01:00:34,319 --> 01:00:35,599
continue

1526
01:00:35,599 --> 01:00:37,359
yeah

1527
01:00:37,359 --> 01:00:39,200
um

1528
01:00:39,200 --> 01:00:41,599
so then

1529
01:00:41,599 --> 01:00:43,040
now that we

1530
01:00:43,040 --> 01:00:44,960
now that there is i mean this is the cdl

1531
01:00:44,960 --> 01:00:47,040
this is all taken directly from from the

1532
01:00:47,040 --> 01:00:49,599
dash 11 draft

1533
01:00:49,599 --> 01:00:53,440
now that we have a cdl for a claim set

1534
01:00:53,440 --> 01:00:56,559
we can write the cddl for uccs

1535
01:00:56,559 --> 01:00:57,680
and that's

1536
01:00:57,680 --> 01:00:59,599
really really simple

1537
01:00:59,599 --> 01:01:01,839
uccs is either tagged or run tagged if

1538
01:01:01,839 --> 01:01:04,720
it's untagged it's just a claim set if

1539
01:01:04,720 --> 01:01:06,559
it's tagged it's a claim set with a tag

1540
01:01:06,559 --> 01:01:08,880
so i believe that lines up

1541
01:01:08,880 --> 01:01:11,599
similar to what carson presented

1542
01:01:11,599 --> 01:01:14,400
uh next slide

1543
01:01:15,920 --> 01:01:16,799
um

1544
01:01:16,799 --> 01:01:17,599
in

1545
01:01:17,599 --> 01:01:19,599
uh

1546
01:01:19,599 --> 01:01:22,799
for uh ujcs um the

1547
01:01:22,799 --> 01:01:25,280
uh you know the

1548
01:01:25,280 --> 01:01:27,350
kind of equivalent of uh

1549
01:01:27,350 --> 01:01:28,880
[Music]

1550
01:01:28,880 --> 01:01:30,640
of the uccs

1551
01:01:30,640 --> 01:01:33,200
there's no tagging in jason so all you

1552
01:01:33,200 --> 01:01:34,799
do is write

1553
01:01:34,799 --> 01:01:38,799
a ugcs message is just a claim set

1554
01:01:38,799 --> 01:01:40,160
so

1555
01:01:40,160 --> 01:01:43,200
this is in the dash 11 draft as it is

1556
01:01:43,200 --> 01:01:45,440
right now

1557
01:01:45,440 --> 01:01:47,359
so the definition and there's a

1558
01:01:47,359 --> 01:01:50,480
definition and description of a ujcs

1559
01:01:50,480 --> 01:01:52,400
in the dash 11 draft there's a section

1560
01:01:52,400 --> 01:01:55,280
for it um

1561
01:01:56,160 --> 01:01:58,640
and i'm going to go in into a little

1562
01:01:58,640 --> 01:02:01,920
more detail on why i thought we needed

1563
01:02:01,920 --> 01:02:04,079
it

1564
01:02:05,039 --> 01:02:08,240
and um but i i don't feel like it has to

1565
01:02:08,240 --> 01:02:10,400
stay in the e document

1566
01:02:10,400 --> 01:02:11,680
um you know we're kind of trying to

1567
01:02:11,680 --> 01:02:13,599
figure out a solution to fit this all

1568
01:02:13,599 --> 01:02:15,119
together here so

1569
01:02:15,119 --> 01:02:16,240
um i

1570
01:02:16,240 --> 01:02:18,000
i put this stuff all together in the e

1571
01:02:18,000 --> 01:02:19,839
document so we would have something to

1572
01:02:19,839 --> 01:02:22,400
look at and work on that was all written

1573
01:02:22,400 --> 01:02:25,440
written down in one place

1574
01:02:25,440 --> 01:02:27,920
next slide

1575
01:02:31,920 --> 01:02:33,119
okay so

1576
01:02:33,119 --> 01:02:37,280
here's why i think uh ujcs is important

1577
01:02:37,280 --> 01:02:38,160
so

1578
01:02:38,160 --> 01:02:40,399
um

1579
01:02:40,480 --> 01:02:43,359
jason is far more widely used in seabor

1580
01:02:43,359 --> 01:02:47,200
if uccs is important why isn't ujcs

1581
01:02:47,200 --> 01:02:49,839
important

1582
01:02:49,920 --> 01:02:51,359
i mean we're taking the trouble to

1583
01:02:51,359 --> 01:02:53,599
define uccs why aren't we taking the

1584
01:02:53,599 --> 01:02:57,440
trouble to find to define ujcs

1585
01:02:57,440 --> 01:02:58,480
um

1586
01:02:58,480 --> 01:03:03,200
and you know today uh backends use

1587
01:03:03,200 --> 01:03:05,920
json in a huge way

1588
01:03:05,920 --> 01:03:08,319
they have many mechanisms in place for

1589
01:03:08,319 --> 01:03:10,240
integrity integrity authenticity and

1590
01:03:10,240 --> 01:03:12,880
privacy usually tls

1591
01:03:12,880 --> 01:03:14,480
no one is feeling like they have to use

1592
01:03:14,480 --> 01:03:15,890
jwts

1593
01:03:15,890 --> 01:03:17,119
[Music]

1594
01:03:17,119 --> 01:03:19,200
in the back end as far as i know they're

1595
01:03:19,200 --> 01:03:20,240
not

1596
01:03:20,240 --> 01:03:23,359
that widely deployed

1597
01:03:24,960 --> 01:03:26,799
jwt has

1598
01:03:26,799 --> 01:03:28,160
this

1599
01:03:28,160 --> 01:03:30,400
kind of null cipher thing that you can

1600
01:03:30,400 --> 01:03:33,039
do um

1601
01:03:33,039 --> 01:03:36,400
to uh to have a

1602
01:03:36,400 --> 01:03:39,440
kind of the equivalent of a ujcs but

1603
01:03:39,440 --> 01:03:40,559
it's

1604
01:03:40,559 --> 01:03:41,839
um

1605
01:03:41,839 --> 01:03:43,280
kind of lar

1606
01:03:43,280 --> 01:03:44,960
a bit large and awkward basically you

1607
01:03:44,960 --> 01:03:47,920
have to construct a a jose message with

1608
01:03:47,920 --> 01:03:49,760
algorithm equals null

1609
01:03:49,760 --> 01:03:52,640
um so it seems kind of like why would

1610
01:03:52,640 --> 01:03:54,160
you do that

1611
01:03:54,160 --> 01:03:55,839
i mean i think the reason they did it is

1612
01:03:55,839 --> 01:03:59,680
because um we're trying to be explicit

1613
01:03:59,680 --> 01:04:01,280
that this uh

1614
01:04:01,280 --> 01:04:03,599
this thing is not uh signed and secured

1615
01:04:03,599 --> 01:04:05,359
so you should know that um and you

1616
01:04:05,359 --> 01:04:06,559
should know you're doing something

1617
01:04:06,559 --> 01:04:09,039
that's not signed into outside insecure

1618
01:04:09,039 --> 01:04:10,880
maybe it's the

1619
01:04:10,880 --> 01:04:13,760
sort of the the spiritual equivalent of

1620
01:04:13,760 --> 01:04:16,559
all the security considerations that are

1621
01:04:16,559 --> 01:04:17,680
in

1622
01:04:17,680 --> 01:04:20,000
uh uccs

1623
01:04:20,000 --> 01:04:22,960
but i mean to me um that uh

1624
01:04:22,960 --> 01:04:24,960
is sort of an

1625
01:04:24,960 --> 01:04:28,640
unnecessary and awkward overhead

1626
01:04:29,119 --> 01:04:30,880
um

1627
01:04:30,880 --> 01:04:32,079
so um

1628
01:04:32,079 --> 01:04:33,839
you know attestation results i think is

1629
01:04:33,839 --> 01:04:36,000
something that we're uh

1630
01:04:36,000 --> 01:04:38,559
from the verifier to the to the rp

1631
01:04:38,559 --> 01:04:41,280
is usually uh you know b2b kind of back

1632
01:04:41,280 --> 01:04:43,359
end stuff so here jason's highly

1633
01:04:43,359 --> 01:04:46,079
appropriate um and

1634
01:04:46,079 --> 01:04:48,160
people probably look at us funny if if

1635
01:04:48,160 --> 01:04:50,000
we were saying you should use seabor

1636
01:04:50,000 --> 01:04:51,440
there

1637
01:04:51,440 --> 01:04:52,839
so

1638
01:04:52,839 --> 01:04:59,920
uh that seems like a place where ujcs is

1639
01:04:59,920 --> 01:05:01,680
useful and

1640
01:05:01,680 --> 01:05:04,880
where we would want to be using ujcs

1641
01:05:04,880 --> 01:05:08,119
next slide

1642
01:05:10,480 --> 01:05:11,760
um

1643
01:05:11,760 --> 01:05:15,680
so uh maybe some people have uh have uh

1644
01:05:15,680 --> 01:05:17,280
disagree about the first point about it

1645
01:05:17,280 --> 01:05:19,280
not being much work

1646
01:05:19,280 --> 01:05:20,240
but

1647
01:05:20,240 --> 01:05:23,440
it didn't seem too much work to me um

1648
01:05:23,440 --> 01:05:25,440
i'm certainly not talking about going

1649
01:05:25,440 --> 01:05:28,000
back through all the the entire

1650
01:05:28,000 --> 01:05:31,839
cwt and jw registries and like you know

1651
01:05:31,839 --> 01:05:33,200
making them all

1652
01:05:33,200 --> 01:05:35,359
retroactive and

1653
01:05:35,359 --> 01:05:37,839
cdl for them and all that so

1654
01:05:37,839 --> 01:05:39,039
uh

1655
01:05:39,039 --> 01:05:41,280
just mainly the seven claims that both

1656
01:05:41,280 --> 01:05:43,839
cwt and jwt have

1657
01:05:43,839 --> 01:05:46,160
um writing just writing cddl for those

1658
01:05:46,160 --> 01:05:47,920
because some of those are definitely

1659
01:05:47,920 --> 01:05:50,079
reused in uh hate

1660
01:05:50,079 --> 01:05:52,720
i mean we could even not write the cdl

1661
01:05:52,720 --> 01:05:54,720
for some of those what's what's really

1662
01:05:54,720 --> 01:05:57,119
important is that the the central uh

1663
01:05:57,119 --> 01:05:59,200
claims that document

1664
01:05:59,200 --> 01:06:01,359
um and then you know if you're if you're

1665
01:06:01,359 --> 01:06:03,599
writing a ujcs document i think the

1666
01:06:03,599 --> 01:06:05,440
security considerations from uccs would

1667
01:06:05,440 --> 01:06:08,640
be exactly the same

1668
01:06:08,880 --> 01:06:11,119
okay

1669
01:06:11,760 --> 01:06:12,720
next

1670
01:06:12,720 --> 01:06:15,720
slide

1671
01:06:18,000 --> 01:06:22,400
um so uh it it seems awkward to have a

1672
01:06:22,400 --> 01:06:25,760
uccs without ujcs um

1673
01:06:25,760 --> 01:06:29,280
seems like there will be some

1674
01:06:31,039 --> 01:06:32,400
you know you'll be

1675
01:06:32,400 --> 01:06:34,880
going uh you know re-encoding uh claim

1676
01:06:34,880 --> 01:06:37,680
sets uh sometimes um between seaport and

1677
01:06:37,680 --> 01:06:39,359
jason i mean i'm working on a tool that

1678
01:06:39,359 --> 01:06:41,200
does that um

1679
01:06:41,200 --> 01:06:43,359
uh it makes uh all the nesting

1680
01:06:43,359 --> 01:06:45,520
constructs in eat

1681
01:06:45,520 --> 01:06:47,440
the sub modules and the detached claims

1682
01:06:47,440 --> 01:06:49,760
that's more complex

1683
01:06:49,760 --> 01:06:51,599
today people send json maps of label

1684
01:06:51,599 --> 01:06:55,440
value pairs all all the time without jwt

1685
01:06:55,440 --> 01:06:56,319
i

1686
01:06:56,319 --> 01:07:00,480
don't see a logical reason why

1687
01:07:00,480 --> 01:07:01,359
a

1688
01:07:01,359 --> 01:07:02,960
seaboard claims that can be set in the

1689
01:07:02,960 --> 01:07:05,440
clear and adjacent claims that must have

1690
01:07:05,440 --> 01:07:07,280
you know can't be must must have that

1691
01:07:07,280 --> 01:07:11,280
jwt alg none construct

1692
01:07:12,640 --> 01:07:15,839
okay uh next slide

1693
01:07:19,520 --> 01:07:22,400
all right so um now this is

1694
01:07:22,400 --> 01:07:23,760
getting to

1695
01:07:23,760 --> 01:07:27,680
uh some of the reasons why um

1696
01:07:27,680 --> 01:07:30,079
i got to to this in the

1697
01:07:30,079 --> 01:07:31,599
the design work

1698
01:07:31,599 --> 01:07:34,559
um so why do you nest seaborn coded

1699
01:07:34,559 --> 01:07:37,440
tokens in json encoded tokens and vice

1700
01:07:37,440 --> 01:07:38,559
versa

1701
01:07:38,559 --> 01:07:40,319
why do you do that the answer is com

1702
01:07:40,319 --> 01:07:43,119
composite devices and the testers

1703
01:07:43,119 --> 01:07:45,280
um so you're going to have i mean in

1704
01:07:45,280 --> 01:07:47,599
that there's there's the the diagram

1705
01:07:47,599 --> 01:07:50,400
from the rats architecture document

1706
01:07:50,400 --> 01:07:51,839
there um

1707
01:07:51,839 --> 01:07:53,760
so you're going to have the testers

1708
01:07:53,760 --> 01:07:55,280
feeding

1709
01:07:55,280 --> 01:07:57,839
tokens

1710
01:07:58,000 --> 01:08:00,319
into other attesters so you can see a

1711
01:08:00,319 --> 01:08:04,160
tester b and a tester c are feeding uh

1712
01:08:04,160 --> 01:08:07,520
you know fully full signed

1713
01:08:07,760 --> 01:08:12,319
attestation evidence into a tester a

1714
01:08:12,559 --> 01:08:13,359
now

1715
01:08:13,359 --> 01:08:17,679
you might be assembling a a device

1716
01:08:17,679 --> 01:08:21,198
like a car or a phone or

1717
01:08:21,198 --> 01:08:23,040
maybe a whole nuclear power plant or

1718
01:08:23,040 --> 01:08:25,120
something like that where you have

1719
01:08:25,120 --> 01:08:27,439
you're getting uh devices from lots of

1720
01:08:27,439 --> 01:08:29,120
different vendors and

1721
01:08:29,120 --> 01:08:30,399
you want to

1722
01:08:30,399 --> 01:08:33,120
aggregate them all

1723
01:08:33,120 --> 01:08:37,479
next slide please go back

1724
01:08:38,000 --> 01:08:43,120
can you thank you um uh so um

1725
01:08:43,120 --> 01:08:45,040
you're gonna you're gonna be getting

1726
01:08:45,040 --> 01:08:46,640
devices off the shelf that happened to

1727
01:08:46,640 --> 01:08:48,560
have a testers and they

1728
01:08:48,560 --> 01:08:51,439
are not as necessarily all going to use

1729
01:08:51,439 --> 01:08:55,040
cbor or not all use json and you don't

1730
01:08:55,040 --> 01:08:56,000
want to

1731
01:08:56,000 --> 01:08:58,000
when you're you know building a

1732
01:08:58,000 --> 01:09:00,319
composite device you and that that you

1733
01:09:00,319 --> 01:09:01,439
want

1734
01:09:01,439 --> 01:09:02,719
at a station

1735
01:09:02,719 --> 01:09:04,479
for the whole device made up of all the

1736
01:09:04,479 --> 01:09:06,799
different uh components you don't want

1737
01:09:06,799 --> 01:09:09,198
to have to say well i can't use that

1738
01:09:09,198 --> 01:09:12,000
that device because it's a json

1739
01:09:12,000 --> 01:09:14,399
a tester and i'm only using c4 you

1740
01:09:14,399 --> 01:09:16,560
really don't want that

1741
01:09:16,560 --> 01:09:17,340
so

1742
01:09:17,340 --> 01:09:19,040
[Music]

1743
01:09:19,040 --> 01:09:21,198
you

1744
01:09:21,198 --> 01:09:23,279
that put push puts us to the point where

1745
01:09:23,279 --> 01:09:25,600
you need to put cwts inside gwts and

1746
01:09:25,600 --> 01:09:27,920
gwts inside cwds so you've got to do

1747
01:09:27,920 --> 01:09:29,040
that so

1748
01:09:29,040 --> 01:09:29,839
um

1749
01:09:29,839 --> 01:09:32,000
there's also the scenario where all the

1750
01:09:32,000 --> 01:09:35,040
composite evidence

1751
01:09:35,359 --> 01:09:38,640
might not be signed so you

1752
01:09:38,640 --> 01:09:40,880
might be putting the the output of a

1753
01:09:40,880 --> 01:09:43,279
tester b might be a uccs and that might

1754
01:09:43,279 --> 01:09:45,198
be okay for that particular architecture

1755
01:09:45,198 --> 01:09:46,719
because of the way

1756
01:09:46,719 --> 01:09:48,880
those devices are put together and it's

1757
01:09:48,880 --> 01:09:50,799
understood that you know chester b is

1758
01:09:50,799 --> 01:09:52,238
producing

1759
01:09:52,238 --> 01:09:54,719
um some uh some

1760
01:09:54,719 --> 01:09:56,400
i mean actually the whole

1761
01:09:56,400 --> 01:09:57,520
in in this

1762
01:09:57,520 --> 01:09:58,640
diagram

1763
01:09:58,640 --> 01:10:01,120
tester a b and c could all be um

1764
01:10:01,120 --> 01:10:03,679
producing tokens that are not signed

1765
01:10:03,679 --> 01:10:06,320
because you're relying on tls

1766
01:10:06,320 --> 01:10:07,760
to for the

1767
01:10:07,760 --> 01:10:11,280
verification to go to the verifier

1768
01:10:11,280 --> 01:10:13,440
so

1769
01:10:14,880 --> 01:10:17,360
that's why that seems like you need the

1770
01:10:17,360 --> 01:10:18,960
mixed um

1771
01:10:18,960 --> 01:10:23,360
now one of the things i uh

1772
01:10:23,679 --> 01:10:26,000
clarified in the dash 11

1773
01:10:26,000 --> 01:10:28,239
draft was that

1774
01:10:28,239 --> 01:10:30,880
this this mixed encoding the only place

1775
01:10:30,880 --> 01:10:32,480
that's allowed is when you're putting

1776
01:10:32,480 --> 01:10:34,880
one token inside another you can't like

1777
01:10:34,880 --> 01:10:36,239
you know have a

1778
01:10:36,239 --> 01:10:38,400
uh a few claims and json and a few

1779
01:10:38,400 --> 01:10:40,800
claims in cbor i mean the whole token

1780
01:10:40,800 --> 01:10:42,719
has to be either siebel or jason it's

1781
01:10:42,719 --> 01:10:44,480
just when you're nesting tokens that you

1782
01:10:44,480 --> 01:10:46,960
can go switch between

1783
01:10:46,960 --> 01:10:49,199
seabor and jason

1784
01:10:49,199 --> 01:10:51,759
next slide

1785
01:10:56,840 --> 01:11:00,880
so here's the summary of the

1786
01:11:00,880 --> 01:11:01,760
um

1787
01:11:01,760 --> 01:11:04,640
all the the six token formats um

1788
01:11:04,640 --> 01:11:06,800
so there are

1789
01:11:06,800 --> 01:11:10,159
um sign tokens in seaborne json there

1790
01:11:10,159 --> 01:11:12,320
are unsigned tokens in seaport and jason

1791
01:11:12,320 --> 01:11:14,800
and there are devs that are in seaboard

1792
01:11:14,800 --> 01:11:15,920
adjacent

1793
01:11:15,920 --> 01:11:16,880
so

1794
01:11:16,880 --> 01:11:19,280
you get you get the fan out of six

1795
01:11:19,280 --> 01:11:22,080
different token formats and any one of

1796
01:11:22,080 --> 01:11:24,320
these tokens can be put inside

1797
01:11:24,320 --> 01:11:26,960
the other uh one of these tokens because

1798
01:11:26,960 --> 01:11:30,640
you want the full flexibility of to

1799
01:11:30,640 --> 01:11:32,719
put stuff in so

1800
01:11:32,719 --> 01:11:33,600
um

1801
01:11:33,600 --> 01:11:36,880
the way the dash 11 draft handles

1802
01:11:36,880 --> 01:11:41,600
this is that it uses seaboard tags

1803
01:11:41,600 --> 01:11:44,960
uh so a sub module that is a nested

1804
01:11:44,960 --> 01:11:48,159
token has a seaboard a seabor tag or is

1805
01:11:48,159 --> 01:11:50,400
a seabor tag that says which it is

1806
01:11:50,400 --> 01:11:52,080
whether it's a

1807
01:11:52,080 --> 01:11:54,159
cwt jwt

1808
01:11:54,159 --> 01:11:55,520
and so on

1809
01:11:55,520 --> 01:11:56,719
um

1810
01:11:56,719 --> 01:11:59,360
if it's a

1811
01:11:59,360 --> 01:12:02,080
if it's a json format token you know how

1812
01:12:02,080 --> 01:12:03,520
do you

1813
01:12:03,520 --> 01:12:05,840
put

1814
01:12:06,640 --> 01:12:08,400
how do you do that in jason because

1815
01:12:08,400 --> 01:12:11,520
jason doesn't have tags um so i came up

1816
01:12:11,520 --> 01:12:15,040
with this this structure the the cd cdl

1817
01:12:15,040 --> 01:12:16,640
of which is there which is basically

1818
01:12:16,640 --> 01:12:18,960
just an array of two things

1819
01:12:18,960 --> 01:12:23,120
a type string and the actual token

1820
01:12:23,120 --> 01:12:24,080
so

1821
01:12:24,080 --> 01:12:26,239
trying to be as simple as possible um

1822
01:12:26,239 --> 01:12:29,280
and also trying to be uh

1823
01:12:29,280 --> 01:12:31,280
make use of seaport tags and like you

1824
01:12:31,280 --> 01:12:33,120
could do this simple tagging thing in

1825
01:12:33,120 --> 01:12:34,960
cbor as well but i decided to use

1826
01:12:34,960 --> 01:12:38,320
seaport tags that seemed more natural so

1827
01:12:38,320 --> 01:12:41,840
than to use the same structure in both

1828
01:12:41,840 --> 01:12:42,640
so

1829
01:12:42,640 --> 01:12:45,280
this nested token

1830
01:12:45,280 --> 01:12:48,080
is different in

1831
01:12:48,080 --> 01:12:51,280
json and in seaport

1832
01:12:51,280 --> 01:12:52,400
um

1833
01:12:52,400 --> 01:12:55,040
i think i'm getting towards the end here

1834
01:12:55,040 --> 01:12:57,520
um next slide

1835
01:12:57,520 --> 01:12:59,360
yeah okay so that was it go back you can

1836
01:12:59,360 --> 01:13:01,199
go back um

1837
01:13:01,199 --> 01:13:04,000
so

1838
01:13:04,000 --> 01:13:05,920
in order to construct cdl for all of

1839
01:13:05,920 --> 01:13:07,520
these things which i've

1840
01:13:07,520 --> 01:13:10,320
and and examples and verify all of them

1841
01:13:10,320 --> 01:13:12,000
i had to have

1842
01:13:12,000 --> 01:13:14,000
um a

1843
01:13:14,000 --> 01:13:17,760
that definition of claim

1844
01:13:17,760 --> 01:13:21,840
um that works in both jason and

1845
01:13:21,840 --> 01:13:24,640
sabor so

1846
01:13:24,640 --> 01:13:26,560
i mean there's a consistent hole there

1847
01:13:26,560 --> 01:13:27,920
in the the

1848
01:13:27,920 --> 01:13:30,239
in the dash 11 draft where all of this

1849
01:13:30,239 --> 01:13:33,280
stuff is is working

1850
01:13:33,520 --> 01:13:37,760
most of it is working against the

1851
01:13:39,120 --> 01:13:42,320
working against the examples

1852
01:13:43,440 --> 01:13:44,320
so

1853
01:13:44,320 --> 01:13:45,520
i guess

1854
01:13:45,520 --> 01:13:47,440
now is probably the time for a

1855
01:13:47,440 --> 01:13:49,920
discussion until we're out of time i'm

1856
01:13:49,920 --> 01:13:52,800
sure there's a lot of comments on um

1857
01:13:52,800 --> 01:13:54,800
we have two more minutes

1858
01:13:54,800 --> 01:13:56,480
for this topic

1859
01:13:56,480 --> 01:13:57,760
there's a couple of minutes for this

1860
01:13:57,760 --> 01:13:59,760
topic and then we'll have five minutes

1861
01:13:59,760 --> 01:14:00,800
for

1862
01:14:00,800 --> 01:14:02,640
uh to cover

1863
01:14:02,640 --> 01:14:04,800
uh last call

1864
01:14:04,800 --> 01:14:07,360
you know issues

1865
01:14:07,360 --> 01:14:09,520
okay

1866
01:14:09,520 --> 01:14:13,480
i don't see anybody in the queue

1867
01:14:16,560 --> 01:14:18,080
karsten's on the gear

1868
01:14:18,080 --> 01:14:20,239
yeah

1869
01:14:20,640 --> 01:14:24,080
yeah i just uh sent a couple comments

1870
01:14:24,080 --> 01:14:24,800
to

1871
01:14:24,800 --> 01:14:26,159
the

1872
01:14:26,159 --> 01:14:29,040
jabba to the message queue

1873
01:14:29,040 --> 01:14:30,159
um

1874
01:14:30,159 --> 01:14:31,920
i think what what you're doing here is

1875
01:14:31,920 --> 01:14:34,000
some some pretty interesting

1876
01:14:34,000 --> 01:14:36,000
um

1877
01:14:36,000 --> 01:14:38,199
on the

1878
01:14:38,199 --> 01:14:43,040
cw20 and jwt world that i think

1879
01:14:43,040 --> 01:14:44,239
requires

1880
01:14:44,239 --> 01:14:47,760
semantics and not just the syntax how to

1881
01:14:47,760 --> 01:14:50,320
carry these things around

1882
01:14:50,320 --> 01:14:52,000
so it's for instance not quite clear

1883
01:14:52,000 --> 01:14:55,040
what what the claims within

1884
01:14:55,040 --> 01:14:58,400
such a detached thing or nested thing

1885
01:14:58,400 --> 01:15:00,480
have to do with the claims in in the

1886
01:15:00,480 --> 01:15:01,600
main

1887
01:15:01,600 --> 01:15:04,000
uh cwt

1888
01:15:04,000 --> 01:15:05,440
and um

1889
01:15:05,440 --> 01:15:07,520
i think it would be a good idea to to

1890
01:15:07,520 --> 01:15:09,040
understand

1891
01:15:09,040 --> 01:15:09,920
this

1892
01:15:09,920 --> 01:15:11,760
[Music]

1893
01:15:11,760 --> 01:15:13,760
this processing

1894
01:15:13,760 --> 01:15:15,840
a little bit better

1895
01:15:15,840 --> 01:15:17,199
and

1896
01:15:17,199 --> 01:15:18,719
i think it should not be a problem to

1897
01:15:18,719 --> 01:15:20,080
actually

1898
01:15:20,080 --> 01:15:22,800
put a signed message

1899
01:15:22,800 --> 01:15:25,600
inside a claim set because in in that

1900
01:15:25,600 --> 01:15:27,440
case it's clear what what is being

1901
01:15:27,440 --> 01:15:30,239
signed and it's also pretty clear that

1902
01:15:30,239 --> 01:15:31,280
um

1903
01:15:31,280 --> 01:15:33,600
the the signature

1904
01:15:33,600 --> 01:15:36,880
of the nested thing is not influencing

1905
01:15:36,880 --> 01:15:40,880
uh any individual claims in the

1906
01:15:40,880 --> 01:15:42,080
outer

1907
01:15:42,080 --> 01:15:45,440
claim set but i think putting

1908
01:15:45,440 --> 01:15:48,320
information in there that is

1909
01:15:48,320 --> 01:15:49,520
nested

1910
01:15:49,520 --> 01:15:52,719
and even of a different format than the

1911
01:15:52,719 --> 01:15:55,440
the main claim said that that is more

1912
01:15:55,440 --> 01:15:59,040
complicated than then may appear on on a

1913
01:15:59,040 --> 01:16:00,239
first look

1914
01:16:00,239 --> 01:16:02,800
so i i would be a little hesitant to say

1915
01:16:02,800 --> 01:16:05,520
we already understand what that means

1916
01:16:05,520 --> 01:16:06,480
um

1917
01:16:06,480 --> 01:16:08,800
tons of different claims can be defined

1918
01:16:08,800 --> 01:16:10,480
and these claims interact with other

1919
01:16:10,480 --> 01:16:12,640
claims and come up with

1920
01:16:12,640 --> 01:16:15,040
unfortunately relatively complicated uh

1921
01:16:15,040 --> 01:16:17,760
combined semantics what we call feature

1922
01:16:17,760 --> 01:16:20,960
interaction in istn 25 years ago is

1923
01:16:20,960 --> 01:16:22,880
unfortunately coming up here

1924
01:16:22,880 --> 01:16:24,960
again so you really need to understand

1925
01:16:24,960 --> 01:16:26,719
how these things work together when they

1926
01:16:26,719 --> 01:16:28,320
suddenly are hidden away

1927
01:16:28,320 --> 01:16:30,159
in a hash that you may not even be able

1928
01:16:30,159 --> 01:16:31,280
to

1929
01:16:31,280 --> 01:16:34,400
resolve at the time when you check the

1930
01:16:34,400 --> 01:16:35,920
main

1931
01:16:35,920 --> 01:16:38,800
claim set so all i'm trying to say is

1932
01:16:38,800 --> 01:16:41,520
this needs some some significant

1933
01:16:41,520 --> 01:16:43,120
analysis

1934
01:16:43,120 --> 01:16:45,280
before we really understand what what is

1935
01:16:45,280 --> 01:16:46,800
being designed

1936
01:16:46,800 --> 01:16:49,520
here and i'm all in favor of doing that

1937
01:16:49,520 --> 01:16:52,080
analysis

1938
01:16:52,320 --> 01:16:54,000
yeah so

1939
01:16:54,000 --> 01:16:55,679
let's separate the semantics from the

1940
01:16:55,679 --> 01:16:56,880
syntax

1941
01:16:56,880 --> 01:17:01,120
um i mean the semantics of a

1942
01:17:01,120 --> 01:17:03,679
sub module and a nested token i mean

1943
01:17:03,679 --> 01:17:07,040
that those those are

1944
01:17:07,040 --> 01:17:09,360
you know

1945
01:17:10,080 --> 01:17:12,080
that issue has been there since uh you

1946
01:17:12,080 --> 01:17:14,159
know day one with sub modules and it

1947
01:17:14,159 --> 01:17:17,840
that issue is there uh whether we

1948
01:17:17,840 --> 01:17:19,760
combine you know do both jason and

1949
01:17:19,760 --> 01:17:21,600
seaport or not

1950
01:17:21,600 --> 01:17:24,400
um so and i mean and then there's some

1951
01:17:24,400 --> 01:17:26,080
discussion in the draft and there's

1952
01:17:26,080 --> 01:17:27,760
about that and there's there have been

1953
01:17:27,760 --> 01:17:30,080
discussions about that so i mean uh

1954
01:17:30,080 --> 01:17:31,600
personally i thought that was a settled

1955
01:17:31,600 --> 01:17:34,000
issue because it it has been there for

1956
01:17:34,000 --> 01:17:35,600
years um

1957
01:17:35,600 --> 01:17:37,120
uh what is

1958
01:17:37,120 --> 01:17:40,159
uh at issue here for me is how to do

1959
01:17:40,159 --> 01:17:41,360
you know

1960
01:17:41,360 --> 01:17:43,120
how to do the keyboard inside the json

1961
01:17:43,120 --> 01:17:45,120
and the jason inside highlight this

1962
01:17:45,120 --> 01:17:46,640
yeah and then the jason said the

1963
01:17:46,640 --> 01:17:48,159
snowboard how to how that how to do it

1964
01:17:48,159 --> 01:17:52,000
syntactically and how to do it with cedl

1965
01:17:52,000 --> 01:17:54,480
um hank

1966
01:17:54,480 --> 01:17:57,840
yeah hi uh lawrence um yes i'm i'm a

1967
01:17:57,840 --> 01:18:00,480
little bit yeah sorry to say that i

1968
01:18:00,480 --> 01:18:02,560
think we should some to do some divide

1969
01:18:02,560 --> 01:18:05,840
and conquer here i don't see the uh

1970
01:18:05,840 --> 01:18:07,640
uh

1971
01:18:07,640 --> 01:18:11,040
ujcs and uccs converging anytime soon

1972
01:18:11,040 --> 01:18:12,800
because it's not a central problem it's

1973
01:18:12,800 --> 01:18:13,520
a

1974
01:18:13,520 --> 01:18:16,159
it's a it's a process procedural problem

1975
01:18:16,159 --> 01:18:18,080
and a semantic problem

1976
01:18:18,080 --> 01:18:20,800
and and i really want to have it

1977
01:18:20,800 --> 01:18:22,080
done

1978
01:18:22,080 --> 01:18:24,560
like seriously and then another pose of

1979
01:18:24,560 --> 01:18:26,239
doing that to doing that work but i

1980
01:18:26,239 --> 01:18:27,600
would like to

1981
01:18:27,600 --> 01:18:29,360
cut it out

1982
01:18:29,360 --> 01:18:31,360
and do it in a different

1983
01:18:31,360 --> 01:18:33,280
place to be honest so that's just me

1984
01:18:33,280 --> 01:18:36,960
maybe but um if we are starting to to

1985
01:18:36,960 --> 01:18:38,719
trying to solve this here in this

1986
01:18:38,719 --> 01:18:42,480
document this will take

1987
01:18:42,480 --> 01:18:46,560
more than a year i am afraid so um

1988
01:18:46,560 --> 01:18:48,239
so so i'm not against

1989
01:18:48,239 --> 01:18:50,960
tackling the problem actually i actually

1990
01:18:50,960 --> 01:18:52,000
want to

1991
01:18:52,000 --> 01:18:53,280
have a

1992
01:18:53,280 --> 01:18:56,239
solution that makes

1993
01:18:56,239 --> 01:18:58,640
merges the rams of of people

1994
01:18:58,640 --> 01:19:00,560
reading and working with

1995
01:19:00,560 --> 01:19:03,360
something json an everyday basis but in

1996
01:19:03,360 --> 01:19:05,040
the end what they really want is to have

1997
01:19:05,040 --> 01:19:06,080
something

1998
01:19:06,080 --> 01:19:09,520
useful and and and scalable and similar

1999
01:19:09,520 --> 01:19:11,440
and it should be somehow feeling like

2000
01:19:11,440 --> 01:19:13,199
the same thing but

2001
01:19:13,199 --> 01:19:15,120
but i don't know if this idea is the

2002
01:19:15,120 --> 01:19:18,000
right place for it first of all

2003
01:19:18,000 --> 01:19:21,040
but i'm i'm i'm really really interested

2004
01:19:21,040 --> 01:19:22,880
in solving a problem

2005
01:19:22,880 --> 01:19:25,440
afterwards

2006
01:19:25,760 --> 01:19:26,640
so

2007
01:19:26,640 --> 01:19:28,800
i mean this this is all because of sub

2008
01:19:28,800 --> 01:19:30,480
modules and sub modules are pretty

2009
01:19:30,480 --> 01:19:32,400
important part of each

2010
01:19:32,400 --> 01:19:34,000
yeah and then stay there they're

2011
01:19:34,000 --> 01:19:36,239
encoding stay within coding stay with

2012
01:19:36,239 --> 01:19:39,040
one encoding and then later on

2013
01:19:39,040 --> 01:19:40,239
enable

2014
01:19:40,239 --> 01:19:42,640
nesting of different encodings and

2015
01:19:42,640 --> 01:19:44,800
semantics of the encodings and the

2016
01:19:44,800 --> 01:19:46,960
caveats that we inherit there

2017
01:19:46,960 --> 01:19:48,159
later on

2018
01:19:48,159 --> 01:19:51,600
right so so no note also that

2019
01:19:51,600 --> 01:19:52,800
in

2020
01:19:52,800 --> 01:19:54,480
some of the claims

2021
01:19:54,480 --> 01:19:57,679
uh like the manifests claim and the

2022
01:19:57,679 --> 01:19:59,199
measurements claim

2023
01:19:59,199 --> 01:20:01,679
um that allows other formats that are

2024
01:20:01,679 --> 01:20:04,800
pluggable so you can do co-switch suit

2025
01:20:04,800 --> 01:20:06,960
and and a switch

2026
01:20:06,960 --> 01:20:09,840
um so you can put like an xml document

2027
01:20:09,840 --> 01:20:12,080
inside a any token

2028
01:20:12,080 --> 01:20:14,800
that's and and we have to do that server

2029
01:20:14,800 --> 01:20:18,239
as a value that is agnostic to the cwt

2030
01:20:18,239 --> 01:20:19,280
ram

2031
01:20:19,280 --> 01:20:21,520
at the very least or it's a it's a co

2032
01:20:21,520 --> 01:20:23,040
suite and then you can you can

2033
01:20:23,040 --> 01:20:25,199
understand the uh the structure because

2034
01:20:25,199 --> 01:20:26,639
you're doing the same

2035
01:20:26,639 --> 01:20:28,400
encoding but but i think you're you're

2036
01:20:28,400 --> 01:20:31,120
comparing apples and origins sorry

2037
01:20:31,120 --> 01:20:33,760
yeah no maybe maybe here right so yeah

2038
01:20:33,760 --> 01:20:35,040
we're gonna you know we're gonna have a

2039
01:20:35,040 --> 01:20:36,800
conversation on uh

2040
01:20:36,800 --> 01:20:38,639
last call issues

2041
01:20:38,639 --> 01:20:40,159
this sort of feels like it's the last

2042
01:20:40,159 --> 01:20:42,080
call conversation

2043
01:20:42,080 --> 01:20:43,840
do you wanna yeah

2044
01:20:43,840 --> 01:20:47,199
move to the next uh segment

2045
01:20:47,199 --> 01:20:49,520
yeah i wanna one one other comment here

2046
01:20:49,520 --> 01:20:50,800
um uh

2047
01:20:50,800 --> 01:20:51,520
is

2048
01:20:51,520 --> 01:20:53,600
i mean i i hope everybody can see how i

2049
01:20:53,600 --> 01:20:56,480
got to where i got to and um you know if

2050
01:20:56,480 --> 01:20:58,320
we're gonna try and trim and and

2051
01:20:58,320 --> 01:21:00,719
sidestep this issue

2052
01:21:00,719 --> 01:21:02,800
maybe we figure out which what what do

2053
01:21:02,800 --> 01:21:04,719
we do and do we give up on the maybe we

2054
01:21:04,719 --> 01:21:07,280
give up on the on the json part um

2055
01:21:07,280 --> 01:21:09,120
i'd rather give up on that than the

2056
01:21:09,120 --> 01:21:12,400
other than the the sub modules part um

2057
01:21:12,400 --> 01:21:14,800
and then i also would really like to

2058
01:21:14,800 --> 01:21:17,679
hear um uh

2059
01:21:17,679 --> 01:21:19,920
what the issues are that are so

2060
01:21:19,920 --> 01:21:22,560
difficult here at least uh write an

2061
01:21:22,560 --> 01:21:24,560
email and get and give me some idea here

2062
01:21:24,560 --> 01:21:27,120
um i mean i know of a few issues but

2063
01:21:27,120 --> 01:21:29,280
uh you know hank and carson have both

2064
01:21:29,280 --> 01:21:32,000
spoke about uh that these these issues

2065
01:21:32,000 --> 01:21:34,400
are quite large and i'm not sure i see

2066
01:21:34,400 --> 01:21:36,000
that and i think it would be really

2067
01:21:36,000 --> 01:21:38,480
helpful for the group to understand

2068
01:21:38,480 --> 01:21:41,040
um uh what those issues are okay thank

2069
01:21:41,040 --> 01:21:43,360
you thank you

2070
01:21:43,360 --> 01:21:45,600
so gary you're up next we're gonna

2071
01:21:45,600 --> 01:21:49,199
review uh eat open issues

2072
01:21:49,280 --> 01:21:53,280
um i hope everybody can hear me

2073
01:21:53,360 --> 01:21:54,960
so this will be brief i know we've been

2074
01:21:54,960 --> 01:21:56,560
discussing a little while and this will

2075
01:21:56,560 --> 01:21:59,040
not include uh if this is not include

2076
01:21:59,040 --> 01:22:01,760
the previous discussion on uh

2077
01:22:01,760 --> 01:22:04,400
some modules uccs etc

2078
01:22:04,400 --> 01:22:06,880
so let's move on

2079
01:22:06,880 --> 01:22:09,440
to the next slide please

2080
01:22:09,440 --> 01:22:12,800
okay um as per ietf one one one i had

2081
01:22:12,800 --> 01:22:15,679
submitted um i submitted materials

2082
01:22:15,679 --> 01:22:17,679
that uh it

2083
01:22:17,679 --> 01:22:19,120
to as part of that meeting i didn't get

2084
01:22:19,120 --> 01:22:20,800
a chance to present so i had to post

2085
01:22:20,800 --> 01:22:21,920
those

2086
01:22:21,920 --> 01:22:24,400
uh after the after meeting but i at that

2087
01:22:24,400 --> 01:22:26,400
time i said i would be

2088
01:22:26,400 --> 01:22:28,320
classifying issues in github

2089
01:22:28,320 --> 01:22:30,960
repo as last call blocking

2090
01:22:30,960 --> 01:22:34,639
um so far i have not found

2091
01:22:34,639 --> 01:22:37,920
i only we have only one issue unresolved

2092
01:22:37,920 --> 01:22:40,080
that's currently last call blocking and

2093
01:22:40,080 --> 01:22:42,960
i don't believe that that should be a uh

2094
01:22:42,960 --> 01:22:44,320
that should prevent us from going to

2095
01:22:44,320 --> 01:22:45,679
last call

2096
01:22:45,679 --> 01:22:47,120
now that's leaving aside any of the

2097
01:22:47,120 --> 01:22:48,719
discussion that's happening on the chat

2098
01:22:48,719 --> 01:22:50,840
window or in the uh

2099
01:22:50,840 --> 01:22:54,639
or prior in the prior half hour of

2100
01:22:54,639 --> 01:22:56,800
discussions so far

2101
01:22:56,800 --> 01:22:59,280
let's move on

2102
01:22:59,280 --> 01:23:01,199
to the next slide thanks

2103
01:23:01,199 --> 01:23:02,880
the last issue is a rather old one as

2104
01:23:02,880 --> 01:23:04,560
you can see from the number

2105
01:23:04,560 --> 01:23:06,960
it's 15. uh it is

2106
01:23:06,960 --> 01:23:08,960
so broad that i'm not sure i can close

2107
01:23:08,960 --> 01:23:10,639
it in good faith

2108
01:23:10,639 --> 01:23:12,400
at the same time there's been no

2109
01:23:12,400 --> 01:23:14,080
activity on it it's just a general

2110
01:23:14,080 --> 01:23:16,800
comment on should must consistency

2111
01:23:16,800 --> 01:23:18,480
um

2112
01:23:18,480 --> 01:23:21,280
i do think we can close this issue um

2113
01:23:21,280 --> 01:23:23,440
mainly because i think it will cut

2114
01:23:23,440 --> 01:23:25,440
mainly because i think it's just too uh

2115
01:23:25,440 --> 01:23:27,199
it's just too difficult to resolve and i

2116
01:23:27,199 --> 01:23:28,400
expect

2117
01:23:28,400 --> 01:23:30,080
during the uh during the course of

2118
01:23:30,080 --> 01:23:32,320
resolving last call comments this

2119
01:23:32,320 --> 01:23:34,080
this will come up again should must

2120
01:23:34,080 --> 01:23:35,440
consistency

2121
01:23:35,440 --> 01:23:37,040
and um

2122
01:23:37,040 --> 01:23:38,960
so i i

2123
01:23:38,960 --> 01:23:40,719
and by the way just an overall comment i

2124
01:23:40,719 --> 01:23:43,440
view last call as the first step towards

2125
01:23:43,440 --> 01:23:46,400
our eduard's long process to rfc not the

2126
01:23:46,400 --> 01:23:49,600
last step and i'm expecting to in

2127
01:23:49,600 --> 01:23:51,120
expecting the document

2128
01:23:51,120 --> 01:23:54,239
to undergo several revisions as we uh

2129
01:23:54,239 --> 01:23:56,159
as we resolve not only working group

2130
01:23:56,159 --> 01:23:58,480
last call comments but ad comments as

2131
01:23:58,480 --> 01:24:02,400
well as a broader review ayanna iesg

2132
01:24:02,400 --> 01:24:04,400
etc so uh

2133
01:24:04,400 --> 01:24:07,199
so i think uh some some uh some people

2134
01:24:07,199 --> 01:24:08,960
may be in the impression that last call

2135
01:24:08,960 --> 01:24:09,840
is a

2136
01:24:09,840 --> 01:24:12,159
is is a last step

2137
01:24:12,159 --> 01:24:16,639
it is maybe the first small step towards

2138
01:24:16,639 --> 01:24:18,000
to start

2139
01:24:18,000 --> 01:24:20,560
to towards the last step but it's really

2140
01:24:20,560 --> 01:24:24,480
far from the last step in my opinion

2141
01:24:24,480 --> 01:24:26,719
okay let's move on

2142
01:24:26,719 --> 01:24:28,560
and i understand the time so i'm gonna

2143
01:24:28,560 --> 01:24:31,520
go quick okay there were two issues when

2144
01:24:31,520 --> 01:24:33,280
i submitted this deck

2145
01:24:33,280 --> 01:24:35,840
that were current were unclassified one

2146
01:24:35,840 --> 01:24:38,239
was a general issue to fill in list for

2147
01:24:38,239 --> 01:24:40,239
the iana uh

2148
01:24:40,239 --> 01:24:43,120
for for all the to be registered claims

2149
01:24:43,120 --> 01:24:44,560
i don't believe this should be last call

2150
01:24:44,560 --> 01:24:45,760
blocking

2151
01:24:45,760 --> 01:24:48,000
um i've actually submitted a formal

2152
01:24:48,000 --> 01:24:51,120
request for the cwt claims review

2153
01:24:51,120 --> 01:24:52,960
for an expert review

2154
01:24:52,960 --> 01:24:56,080
on the claims that have been identified

2155
01:24:56,080 --> 01:24:58,159
in the each spec i haven't heard any

2156
01:24:58,159 --> 01:25:01,360
response on that yet ella but um

2157
01:25:01,360 --> 01:25:04,000
but uh i expect that that's in the queue

2158
01:25:04,000 --> 01:25:06,239
for cwt claims that's your

2159
01:25:06,239 --> 01:25:07,920
expert review

2160
01:25:07,920 --> 01:25:11,040
um then the final one was uh say the sub

2161
01:25:11,040 --> 01:25:13,120
modules related to it related to target

2162
01:25:13,120 --> 01:25:14,880
environments

2163
01:25:14,880 --> 01:25:16,639
actually i don't believe we should

2164
01:25:16,639 --> 01:25:18,480
resolve that either prior to last call

2165
01:25:18,480 --> 01:25:20,239
because i would like the i would like to

2166
01:25:20,239 --> 01:25:23,679
see what the rats architecture uh

2167
01:25:23,679 --> 01:25:25,520
experts when they do actually review

2168
01:25:25,520 --> 01:25:28,960
this document as part of the last call

2169
01:25:28,960 --> 01:25:30,480
actually say about the concept of

2170
01:25:30,480 --> 01:25:33,199
submodules

2171
01:25:34,400 --> 01:25:38,679
so let's move on to the last slide

2172
01:25:40,320 --> 01:25:42,559
okay

2173
01:25:42,639 --> 01:25:45,199
yeah okay so um

2174
01:25:45,199 --> 01:25:46,639
just to be clear

2175
01:25:46,639 --> 01:25:48,400
i think there is some

2176
01:25:48,400 --> 01:25:50,400
discussion in the chat window

2177
01:25:50,400 --> 01:25:53,040
we've already been you know at least

2178
01:25:53,040 --> 01:25:54,960
i've been under the impression that uh

2179
01:25:54,960 --> 01:25:56,159
the github

2180
01:25:56,159 --> 01:25:58,960
the github repo is where we file issues

2181
01:25:58,960 --> 01:26:01,120
um it is sometimes a little difficult

2182
01:26:01,120 --> 01:26:03,280
for me personally to track issues on the

2183
01:26:03,280 --> 01:26:05,520
mailing list

2184
01:26:05,520 --> 01:26:07,120
so i

2185
01:26:07,120 --> 01:26:09,120
i'm not a you know i'm not saying we

2186
01:26:09,120 --> 01:26:11,760
close out the issues now but i think uh

2187
01:26:11,760 --> 01:26:13,040
i think

2188
01:26:13,040 --> 01:26:15,199
i think um what i would recommend to the

2189
01:26:15,199 --> 01:26:17,600
working group to think about is

2190
01:26:17,600 --> 01:26:20,400
if there is a claim that uh that that

2191
01:26:20,400 --> 01:26:22,400
needs that you they feel needs to be

2192
01:26:22,400 --> 01:26:24,000
added to this fact first review the spec

2193
01:26:24,000 --> 01:26:25,440
to see if an existing claim that's

2194
01:26:25,440 --> 01:26:26,719
already described

2195
01:26:26,719 --> 01:26:28,960
does not meet the yeast case

2196
01:26:28,960 --> 01:26:31,679
second consider whether the uh

2197
01:26:31,679 --> 01:26:32,800
whether

2198
01:26:32,800 --> 01:26:35,199
whether it makes more sense as a profile

2199
01:26:35,199 --> 01:26:36,960
and each does have the concept of

2200
01:26:36,960 --> 01:26:38,159
profiles

2201
01:26:38,159 --> 01:26:40,239
so um

2202
01:26:40,239 --> 01:26:41,760
so there are so

2203
01:26:41,760 --> 01:26:44,000
so the you and that would actually mean

2204
01:26:44,000 --> 01:26:45,520
that you can actually

2205
01:26:45,520 --> 01:26:49,360
bring in a suitable claim set uh for for

2206
01:26:49,360 --> 01:26:51,760
your particular use case even after it

2207
01:26:51,760 --> 01:26:53,920
goes to rfc

2208
01:26:53,920 --> 01:26:56,080
that's all i have thank you

2209
01:26:56,080 --> 01:26:57,920
thank you

2210
01:26:57,920 --> 01:27:00,159
so we do have some time to

2211
01:27:00,159 --> 01:27:01,440
discuss

2212
01:27:01,440 --> 01:27:05,199
readiness for last call and

2213
01:27:05,199 --> 01:27:07,040
so there was some

2214
01:27:07,040 --> 01:27:10,000
some chat on the list of people

2215
01:27:10,000 --> 01:27:12,320
expressing opinions that they think it's

2216
01:27:12,320 --> 01:27:13,520
ready

2217
01:27:13,520 --> 01:27:15,440
uh from the perspective of the group

2218
01:27:15,440 --> 01:27:17,520
that's here today

2219
01:27:17,520 --> 01:27:18,560
we get

2220
01:27:18,560 --> 01:27:20,560
get a

2221
01:27:20,560 --> 01:27:22,880
sense for who who is uh

2222
01:27:22,880 --> 01:27:25,840
thinks it's ready to go

2223
01:27:29,520 --> 01:27:32,480
maybe we'll use the show of hands tool

2224
01:27:32,480 --> 01:27:34,080
well

2225
01:27:34,080 --> 01:27:35,360
so ned

2226
01:27:35,360 --> 01:27:37,280
are you asking the question or you want

2227
01:27:37,280 --> 01:27:39,280
to have the discussion first i want to

2228
01:27:39,280 --> 01:27:41,600
have the discussion yeah yeah so you

2229
01:27:41,600 --> 01:27:44,840
have two people on the queue

2230
01:27:44,840 --> 01:27:48,800
yep dave taylor

2231
01:27:49,600 --> 01:27:51,520
all right and uh again you guys hear me

2232
01:27:51,520 --> 01:27:52,719
okay i know i glitched for a second

2233
01:27:52,719 --> 01:27:54,560
there everybody over here okay

2234
01:27:54,560 --> 01:27:55,679
yeah yeah

2235
01:27:55,679 --> 01:27:58,320
okay cool uh yeah and thanks uh gary and

2236
01:27:58,320 --> 01:28:00,080
and lawrence for your comments uh i

2237
01:28:00,080 --> 01:28:02,000
appreciate them uh and i'm probably not

2238
01:28:02,000 --> 01:28:02,880
going to say what you think i'm going to

2239
01:28:02,880 --> 01:28:04,239
say but i'm going to say that see a

2240
01:28:04,239 --> 01:28:05,679
couple of potential ways forward that i

2241
01:28:05,679 --> 01:28:06,800
would like to hear the working group's

2242
01:28:06,800 --> 01:28:09,120
opinion on uh this is specifically on

2243
01:28:09,120 --> 01:28:11,280
the the cheap question i raised

2244
01:28:11,280 --> 01:28:12,960
i think we had the discussion before

2245
01:28:12,960 --> 01:28:14,320
that for the class of things we're

2246
01:28:14,320 --> 01:28:16,320
talking about a profile is not really

2247
01:28:16,320 --> 01:28:17,920
what we're talking about for this class

2248
01:28:17,920 --> 01:28:19,199
of stuff there's a separate things that

2249
01:28:19,199 --> 01:28:21,360
we're already having a profile for but

2250
01:28:21,360 --> 01:28:23,040
out of the otherwise there's at least

2251
01:28:23,040 --> 01:28:24,639
three potential ways forward just

2252
01:28:24,639 --> 01:28:26,000
summarizing things that have come up in

2253
01:28:26,000 --> 01:28:28,320
the chat one is to say uh well we could

2254
01:28:28,320 --> 01:28:30,560
have a separate document okay

2255
01:28:30,560 --> 01:28:33,040
that ex that adds some additional

2256
01:28:33,040 --> 01:28:35,280
general non-profile specific things to

2257
01:28:35,280 --> 01:28:36,800
to eat and you really have to have the

2258
01:28:36,800 --> 01:28:38,400
eat document and this other document we

2259
01:28:38,400 --> 01:28:40,480
gotta wait for before uh you can

2260
01:28:40,480 --> 01:28:41,920
actually do an implementation in certain

2261
01:28:41,920 --> 01:28:43,120
contexts that would need the claims that

2262
01:28:43,120 --> 01:28:44,320
are in that one okay so that's one

2263
01:28:44,320 --> 01:28:46,080
possible way forward that's just a

2264
01:28:46,080 --> 01:28:47,520
separate document

2265
01:28:47,520 --> 01:28:50,400
another way that we could do things is

2266
01:28:50,400 --> 01:28:53,920
to say uh any comments here is done as

2267
01:28:53,920 --> 01:28:55,600
part of last call meaning you just

2268
01:28:55,600 --> 01:28:56,800
issued the last call on the current

2269
01:28:56,800 --> 01:28:58,320
version and you treat this stuff in

2270
01:28:58,320 --> 01:28:59,840
which case we might have to do a second

2271
01:28:59,840 --> 01:29:01,679
round of review and stuff and gary kind

2272
01:29:01,679 --> 01:29:03,040
of mentioned this one which i agree with

2273
01:29:03,040 --> 01:29:04,880
your comments carrie that says you know

2274
01:29:04,880 --> 01:29:06,239
uh you might have multiple rounds of

2275
01:29:06,239 --> 01:29:07,840
review right last call is the beginning

2276
01:29:07,840 --> 01:29:09,600
not the end right plus one to all of

2277
01:29:09,600 --> 01:29:11,440
that and so that's one way of doing it

2278
01:29:11,440 --> 01:29:12,800
in that sense you know nothing's really

2279
01:29:12,800 --> 01:29:14,239
last call blocking but there are times

2280
01:29:14,239 --> 01:29:16,480
that working groups do multiple do last

2281
01:29:16,480 --> 01:29:19,360
call multiple times okay and so um i

2282
01:29:19,360 --> 01:29:20,639
don't like having to do it multiple

2283
01:29:20,639 --> 01:29:22,320
times if you can avoid that and so i'm

2284
01:29:22,320 --> 01:29:24,239
trying to minimize work but uh that is a

2285
01:29:24,239 --> 01:29:27,280
possibility and then the third one uh

2286
01:29:27,280 --> 01:29:29,440
lawrence or somebody one of you two had

2287
01:29:29,440 --> 01:29:30,719
said okay it's possible if there were

2288
01:29:30,719 --> 01:29:32,239
non-controversial stuff to add that in

2289
01:29:32,239 --> 01:29:33,760
there and then start working your last

2290
01:29:33,760 --> 01:29:37,120
call um my preferences for that one if

2291
01:29:37,120 --> 01:29:39,360
we can do that and that's just because i

2292
01:29:39,360 --> 01:29:41,120
would like stuff to be reviewed all at

2293
01:29:41,120 --> 01:29:42,719
the same time rather than doing multiple

2294
01:29:42,719 --> 01:29:44,880
rounds of reviews and so that's why my

2295
01:29:44,880 --> 01:29:47,360
preference is to treat it as if you can

2296
01:29:47,360 --> 01:29:52,159
do it dash 12 add in uh the uh four

2297
01:29:52,159 --> 01:29:54,560
little sections out of uh draft perk

2298
01:29:54,560 --> 01:29:56,000
holes uh if you think that those are

2299
01:29:56,000 --> 01:29:57,920
non-controversial and lawrence i did see

2300
01:29:57,920 --> 01:29:59,360
that you said within the next day or two

2301
01:29:59,360 --> 01:30:01,199
you do an evaluation that would be fine

2302
01:30:01,199 --> 01:30:03,280
with me to defer the decision until uh

2303
01:30:03,280 --> 01:30:04,880
and then talk about it the next

2304
01:30:04,880 --> 01:30:06,400
next rats meeting if you've had a chance

2305
01:30:06,400 --> 01:30:08,080
to do that during the week so that would

2306
01:30:08,080 --> 01:30:09,600
be lovely but either any of those three

2307
01:30:09,600 --> 01:30:11,280
possibilities i would say would be

2308
01:30:11,280 --> 01:30:13,199
possible ways for and i would not object

2309
01:30:13,199 --> 01:30:15,040
to any of those just my preference is to

2310
01:30:15,040 --> 01:30:16,320
do it as part of the first working your

2311
01:30:16,320 --> 01:30:18,840
blast console thank

2312
01:30:18,840 --> 01:30:22,719
you hank is on the queue

2313
01:30:24,400 --> 01:30:26,400
so thanks dave so first of all any

2314
01:30:26,400 --> 01:30:28,480
decisions here should maybe if there's

2315
01:30:28,480 --> 01:30:30,719
only a few days of more input to make a

2316
01:30:30,719 --> 01:30:33,440
decision i think that is fine of course

2317
01:30:33,440 --> 01:30:35,360
especially in the course of the itf

2318
01:30:35,360 --> 01:30:38,159
meeting here right now um

2319
01:30:38,159 --> 01:30:41,679
having said that i do not see a easy

2320
01:30:41,679 --> 01:30:45,440
solution to resolving anything uh in in

2321
01:30:45,440 --> 01:30:46,880
a blob as

2322
01:30:46,880 --> 01:30:50,239
i think was your um preference so

2323
01:30:50,239 --> 01:30:52,719
unfortunately i have to say

2324
01:30:52,719 --> 01:30:53,520
uh

2325
01:30:53,520 --> 01:30:56,320
let's get the cbo based stuff that was

2326
01:30:56,320 --> 01:30:59,840
the initial cwt space out now

2327
01:30:59,840 --> 01:31:04,480
maybe anchor some preliminary

2328
01:31:04,480 --> 01:31:07,040
sockets in the document to enable

2329
01:31:07,040 --> 01:31:10,880
the next document and do it in parallel

2330
01:31:10,880 --> 01:31:12,320
that's me

2331
01:31:12,320 --> 01:31:16,480
just one opinion i i see the point of of

2332
01:31:16,480 --> 01:31:18,800
resolving this all at once

2333
01:31:18,800 --> 01:31:21,199
makes a better document i i really see

2334
01:31:21,199 --> 01:31:22,000
that

2335
01:31:22,000 --> 01:31:23,120
um

2336
01:31:23,120 --> 01:31:25,040
unfortunately i don't think this is will

2337
01:31:25,040 --> 01:31:27,760
be done until the end of next year to be

2338
01:31:27,760 --> 01:31:30,760
honest

2339
01:31:32,239 --> 01:31:35,040
curious on thank you

2340
01:31:38,639 --> 01:31:40,880
yes thank you um

2341
01:31:40,880 --> 01:31:42,880
yeah i guess

2342
01:31:42,880 --> 01:31:44,800
one general comment uh following up on

2343
01:31:44,800 --> 01:31:47,600
dave's uh dave's um

2344
01:31:47,600 --> 01:31:50,239
we can go through at least on the tt

2345
01:31:50,239 --> 01:31:51,120
items

2346
01:31:51,120 --> 01:31:53,440
and before you know

2347
01:31:53,440 --> 01:31:54,719
hopefully me and lawrence can turn this

2348
01:31:54,719 --> 01:31:56,159
around with the next day or so and we

2349
01:31:56,159 --> 01:31:57,280
can uh

2350
01:31:57,280 --> 01:31:59,280
and we can even put out you know

2351
01:31:59,280 --> 01:32:02,400
a version 12 before the friday meeting i

2352
01:32:02,400 --> 01:32:04,400
believe i believe the uh

2353
01:32:04,400 --> 01:32:07,040
submit tool should be open again today i

2354
01:32:07,040 --> 01:32:08,480
guess uh

2355
01:32:08,480 --> 01:32:11,679
going back on what hank said though on

2356
01:32:11,679 --> 01:32:14,159
the general uh

2357
01:32:14,159 --> 01:32:17,120
cddl versus uh

2358
01:32:17,120 --> 01:32:20,400
versus uh jot representation well uh

2359
01:32:20,400 --> 01:32:23,280
unsigned uh unsigned uh

2360
01:32:23,280 --> 01:32:25,840
json claim representation that wants to

2361
01:32:25,840 --> 01:32:28,000
discuss

2362
01:32:28,000 --> 01:32:30,159
would it be possible hank in your

2363
01:32:30,159 --> 01:32:31,360
opinion to

2364
01:32:31,360 --> 01:32:32,719
actually

2365
01:32:32,719 --> 01:32:34,480
to actually if you think it's going to

2366
01:32:34,480 --> 01:32:37,120
take a minimum of a year

2367
01:32:37,120 --> 01:32:39,679
to actually

2368
01:32:39,679 --> 01:32:42,080
potentially take e to rfc

2369
01:32:42,080 --> 01:32:44,320
but then have a follow-up document that

2370
01:32:44,320 --> 01:32:46,800
builds off of each that could that would

2371
01:32:46,800 --> 01:32:48,400
also be it's uh it'd be its own

2372
01:32:48,400 --> 01:32:50,560
standards track um

2373
01:32:50,560 --> 01:32:54,000
which we do all the time updates rfc xxx

2374
01:32:54,000 --> 01:32:56,159
for instance exactly yeah yeah i think

2375
01:32:56,159 --> 01:32:58,320
this is consecutive

2376
01:32:58,320 --> 01:33:01,360
i think eid is our our

2377
01:33:01,360 --> 01:33:02,560
basis

2378
01:33:02,560 --> 01:33:04,639
and and from there we can we can build a

2379
01:33:04,639 --> 01:33:05,679
lot of

2380
01:33:05,679 --> 01:33:08,639
rather cool things i think from it

2381
01:33:08,639 --> 01:33:11,280
and and and i think we should not stop

2382
01:33:11,280 --> 01:33:14,400
um following the route uh

2383
01:33:14,400 --> 01:33:16,639
or the trail that lawrence is blazing

2384
01:33:16,639 --> 01:33:18,400
here um

2385
01:33:18,400 --> 01:33:20,880
but but i think we should should cut it

2386
01:33:20,880 --> 01:33:22,400
at some point because we are really

2387
01:33:22,400 --> 01:33:25,040
waiting for this and and i like i like

2388
01:33:25,040 --> 01:33:27,199
to see a good transformation i like to

2389
01:33:27,199 --> 01:33:29,679
see a mapping of semantics i'd like to

2390
01:33:29,679 --> 01:33:32,239
see a matching of semantics to current

2391
01:33:32,239 --> 01:33:34,320
solutions with maybe some frosting on it

2392
01:33:34,320 --> 01:33:37,760
so it's intuitive all of that

2393
01:33:37,760 --> 01:33:40,159
but um yeah i i think this will take

2394
01:33:40,159 --> 01:33:41,120
time

2395
01:33:41,120 --> 01:33:43,600
and and yeah but i really i really think

2396
01:33:43,600 --> 01:33:44,800
this is uh

2397
01:33:44,800 --> 01:33:49,639
we can build the basis and add on

2398
01:33:50,159 --> 01:33:51,520
thank you that's that answers my

2399
01:33:51,520 --> 01:33:53,840
question

2400
01:33:54,239 --> 01:33:56,320
okay so i thought i heard

2401
01:33:56,320 --> 01:33:57,679
some

2402
01:33:57,679 --> 01:33:58,880
interest in

2403
01:33:58,880 --> 01:34:02,880
a version 12 before friday

2404
01:34:02,880 --> 01:34:05,760
does that imply that we would continue

2405
01:34:05,760 --> 01:34:09,520
the last call discussion on friday

2406
01:34:10,719 --> 01:34:13,120
can we do that sorry to sort of jump in

2407
01:34:13,120 --> 01:34:16,560
the queue we can well can we

2408
01:34:16,560 --> 01:34:18,719
yeah go ahead and then i'll ask the

2409
01:34:18,719 --> 01:34:19,760
question

2410
01:34:19,760 --> 01:34:21,120
i usually say we

2411
01:34:21,120 --> 01:34:22,960
we we can do what we want to do as the

2412
01:34:22,960 --> 01:34:25,120
group

2413
01:34:25,120 --> 01:34:26,560
but

2414
01:34:26,560 --> 01:34:28,639
maybe you can jump in nancy

2415
01:34:28,639 --> 01:34:31,440
yeah my clarification question gary is

2416
01:34:31,440 --> 01:34:34,560
um you're volunteering to to rev

2417
01:34:34,560 --> 01:34:37,679
version 12 to address some of the the

2418
01:34:37,679 --> 01:34:39,440
teep suit stuff

2419
01:34:39,440 --> 01:34:42,560
but to hank's comment of calling out the

2420
01:34:42,560 --> 01:34:45,040
cd this

2421
01:34:45,040 --> 01:34:48,239
that i can't speak sorry um would you be

2422
01:34:48,239 --> 01:34:50,159
able to address that also with the

2423
01:34:50,159 --> 01:34:52,480
version

2424
01:34:58,639 --> 01:35:02,320
to do what hank is asking uh

2425
01:35:02,320 --> 01:35:04,639
basically turn the document into a c bar

2426
01:35:04,639 --> 01:35:07,040
only document uh remove all the json

2427
01:35:07,040 --> 01:35:08,480
stuff out of it i think that's what i

2428
01:35:08,480 --> 01:35:10,880
understand that that seems

2429
01:35:10,880 --> 01:35:13,040
not possible by friday and i don't know

2430
01:35:13,040 --> 01:35:14,960
that there's even consensus that that's

2431
01:35:14,960 --> 01:35:17,679
what we should do

2432
01:35:18,960 --> 01:35:20,320
he's the only one saying that at this

2433
01:35:20,320 --> 01:35:22,880
point right

2434
01:35:27,679 --> 01:35:29,040
hank

2435
01:35:29,040 --> 01:35:31,760
you're in the queue

2436
01:35:32,639 --> 01:35:35,679
not uh lower my hands um i'm apologize

2437
01:35:35,679 --> 01:35:37,119
and then yes the the

2438
01:35:37,119 --> 01:35:37,840
the

2439
01:35:37,840 --> 01:35:38,800
lawrence

2440
01:35:38,800 --> 01:35:41,199
that is not the thing for friday i think

2441
01:35:41,199 --> 01:35:45,119
that the friday ask was the cheap claims

2442
01:35:45,119 --> 01:35:46,960
that the dave highlighted and then not

2443
01:35:46,960 --> 01:35:48,320
not the jason

2444
01:35:48,320 --> 01:35:50,800
uh uh just just being clear

2445
01:35:50,800 --> 01:35:53,440
yeah just being clear that's all okay

2446
01:35:53,440 --> 01:35:55,440
and thank you for clarifying

2447
01:35:55,440 --> 01:35:56,480
yeah

2448
01:35:56,480 --> 01:35:58,718
okay

2449
01:36:03,440 --> 01:36:05,360
okay so um

2450
01:36:05,360 --> 01:36:06,960
sounded like

2451
01:36:06,960 --> 01:36:07,840
uh

2452
01:36:07,840 --> 01:36:10,080
there was some consensus for that dave's

2453
01:36:10,080 --> 01:36:11,600
in the queue

2454
01:36:11,600 --> 01:36:13,840
i just want to say on that nesting point

2455
01:36:13,840 --> 01:36:16,800
uh separately i think the teep use cases

2456
01:36:16,800 --> 01:36:18,639
do require the ability to do nesting

2457
01:36:18,639 --> 01:36:21,199
although teep is only using seabor uh

2458
01:36:21,199 --> 01:36:23,119
independent of the cheap stuff my

2459
01:36:23,119 --> 01:36:24,400
preference is probably for the same

2460
01:36:24,400 --> 01:36:26,639
reasons as florence mentioned

2461
01:36:26,639 --> 01:36:28,719
to keep the json stuff in the existing

2462
01:36:28,719 --> 01:36:30,560
document i think there are use cases for

2463
01:36:30,560 --> 01:36:32,719
json and so i would

2464
01:36:32,719 --> 01:36:35,199
rather do minimal changes and try to get

2465
01:36:35,199 --> 01:36:37,679
the document out sooner even if that

2466
01:36:37,679 --> 01:36:40,159
means that uh you know json nesting or

2467
01:36:40,159 --> 01:36:41,440
something like that was in a separate

2468
01:36:41,440 --> 01:36:43,600
document uh and i say that because i

2469
01:36:43,600 --> 01:36:44,800
don't think anything is currently

2470
01:36:44,800 --> 01:36:45,920
blocked on it but i think it's an

2471
01:36:45,920 --> 01:36:48,480
important use case and i don't think

2472
01:36:48,480 --> 01:36:50,840
it's worth major

2473
01:36:50,840 --> 01:36:53,920
um changes to the document that might be

2474
01:36:53,920 --> 01:36:56,159
destabilizing which is what i got the

2475
01:36:56,159 --> 01:36:57,360
impression from lawrence that it might

2476
01:36:57,360 --> 01:36:59,520
be destabilizing and so we could pull it

2477
01:36:59,520 --> 01:37:00,480
all out there but if it's going to

2478
01:37:00,480 --> 01:37:02,320
destabilize the document or whatever

2479
01:37:02,320 --> 01:37:03,520
then i'd prefer keeping it in there

2480
01:37:03,520 --> 01:37:05,119
that's my preference but again keep us

2481
01:37:05,119 --> 01:37:08,239
blocked on having nesting in a seabor

2482
01:37:08,239 --> 01:37:09,760
which it already supports in fact the

2483
01:37:09,760 --> 01:37:11,760
new way of doing nesting is even better

2484
01:37:11,760 --> 01:37:12,800
um

2485
01:37:12,800 --> 01:37:15,119
thank you

2486
01:37:15,119 --> 01:37:17,760
so just jumping quickly in here so now

2487
01:37:17,760 --> 01:37:20,639
we have the uh choice between

2488
01:37:20,639 --> 01:37:22,960
um

2489
01:37:23,600 --> 01:37:26,480
delaying it to be honest sorry

2490
01:37:26,480 --> 01:37:28,719
and therefore not satisfying t or

2491
01:37:28,719 --> 01:37:32,080
satisfying t by uh

2492
01:37:32,080 --> 01:37:35,199
not delaying it so so i this is a

2493
01:37:35,199 --> 01:37:37,840
conundrum so i i

2494
01:37:37,840 --> 01:37:40,000
i i would not

2495
01:37:40,000 --> 01:37:41,760
understand how to choose between these

2496
01:37:41,760 --> 01:37:44,080
options

2497
01:37:45,760 --> 01:37:47,040
well perhaps

2498
01:37:47,040 --> 01:37:50,000
issuing on the rev 12

2499
01:37:50,000 --> 01:37:52,159
um issuing a working group last call

2500
01:37:52,159 --> 01:37:55,040
will force that issue

2501
01:37:55,040 --> 01:37:57,840
to accelerate

2502
01:37:59,920 --> 01:38:04,080
yeah i mean my gut reaction to address

2503
01:38:04,080 --> 01:38:06,560
hank's comments and karsten carson's

2504
01:38:06,560 --> 01:38:08,080
comments is

2505
01:38:08,080 --> 01:38:10,560
all the jason stuff has to go it it's

2506
01:38:10,560 --> 01:38:14,280
just a seabor document

2507
01:38:17,360 --> 01:38:20,159
and and we'll do a json document later

2508
01:38:20,159 --> 01:38:22,159
uh that'll be a a second thing that when

2509
01:38:22,159 --> 01:38:24,320
we when we learn how to

2510
01:38:24,320 --> 01:38:26,000
uh to

2511
01:38:26,000 --> 01:38:27,520
you know kind of

2512
01:38:27,520 --> 01:38:29,520
work through the issues but i i again i

2513
01:38:29,520 --> 01:38:31,760
think

2514
01:38:31,760 --> 01:38:33,440
i would like to hear much more

2515
01:38:33,440 --> 01:38:35,760
specifically from carsten and hank what

2516
01:38:35,760 --> 01:38:37,760
they think the issues are what's really

2517
01:38:37,760 --> 01:38:41,840
wrong with the the document as is

2518
01:38:43,040 --> 01:38:45,679
okay but um lawrence

2519
01:38:45,679 --> 01:38:48,000
that should not preclude us from from

2520
01:38:48,000 --> 01:38:49,760
you moving forward

2521
01:38:49,760 --> 01:38:52,719
with the group consensus of

2522
01:38:52,719 --> 01:38:54,719
doing the update

2523
01:38:54,719 --> 01:38:56,400
and then starting to

2524
01:38:56,400 --> 01:38:59,040
come like for the dash yeah for a a dash

2525
01:38:59,040 --> 01:39:01,040
12 i'll certainly add the

2526
01:39:01,040 --> 01:39:03,199
you know you know add to figure out what

2527
01:39:03,199 --> 01:39:05,679
the claims are that the dave wants and

2528
01:39:05,679 --> 01:39:07,920
add them if if they're if it's

2529
01:39:07,920 --> 01:39:09,440
straightforward i'll certainly take care

2530
01:39:09,440 --> 01:39:11,440
of that by friday and if there is

2531
01:39:11,440 --> 01:39:14,080
consensus by friday that uh

2532
01:39:14,080 --> 01:39:15,600
you know to go to last call and move

2533
01:39:15,600 --> 01:39:17,119
forward with the

2534
01:39:17,119 --> 01:39:18,800
all the nesting and all the json and all

2535
01:39:18,800 --> 01:39:21,920
the sea war um that's fine um

2536
01:39:21,920 --> 01:39:24,000
but i what i think i'm hearing from from

2537
01:39:24,000 --> 01:39:27,920
hank and carson is that

2538
01:39:27,920 --> 01:39:28,960
the

2539
01:39:28,960 --> 01:39:30,719
all the nesting and all the seaboard and

2540
01:39:30,719 --> 01:39:34,159
all the cdl and all the json is is maybe

2541
01:39:34,159 --> 01:39:37,599
not suitable for last call so

2542
01:39:39,199 --> 01:39:41,199
so i i heard that there was work to be

2543
01:39:41,199 --> 01:39:42,880
done

2544
01:39:42,880 --> 01:39:45,119
but that it didn't it wasn't last call

2545
01:39:45,119 --> 01:39:48,960
blocking as it relates to json

2546
01:39:52,800 --> 01:39:55,199
well i mean carsten is saying it'll take

2547
01:39:55,199 --> 01:39:57,360
a year to solve all that

2548
01:39:57,360 --> 01:40:00,320
hank and karsten are saying

2549
01:40:00,880 --> 01:40:04,000
i have a general problem

2550
01:40:04,000 --> 01:40:06,880
with uh standards that

2551
01:40:06,880 --> 01:40:10,639
start out by fragmenting themselves

2552
01:40:10,639 --> 01:40:15,760
in a false sense of trying to

2553
01:40:15,760 --> 01:40:17,440
appease certain

2554
01:40:17,440 --> 01:40:18,719
user groups

2555
01:40:18,719 --> 01:40:21,679
but that's unrelated to the question of

2556
01:40:21,679 --> 01:40:24,480
can we get the semantics

2557
01:40:24,480 --> 01:40:27,280
of of all these these things working

2558
01:40:27,280 --> 01:40:29,040
together right

2559
01:40:29,040 --> 01:40:30,719
i think we can get these semantics right

2560
01:40:30,719 --> 01:40:32,960
it might take a little bit of time

2561
01:40:32,960 --> 01:40:33,840
um

2562
01:40:33,840 --> 01:40:35,920
i'm just not sure it should be done in

2563
01:40:35,920 --> 01:40:37,520
this document because

2564
01:40:37,520 --> 01:40:39,280
it actually

2565
01:40:39,280 --> 01:40:41,280
would

2566
01:40:41,280 --> 01:40:44,239
continue on the development of cwt and

2567
01:40:44,239 --> 01:40:45,520
jwt

2568
01:40:45,520 --> 01:40:47,440
beyond what

2569
01:40:47,440 --> 01:40:50,159
the scope of it is

2570
01:40:50,159 --> 01:40:52,639
okay so

2571
01:40:52,639 --> 01:40:55,119
in in the interest of time

2572
01:40:55,119 --> 01:40:58,719
um cabo i hear what you're saying um

2573
01:40:58,719 --> 01:41:01,280
but i'm i'm trying to move forward and

2574
01:41:01,280 --> 01:41:03,520
and how would we get

2575
01:41:03,520 --> 01:41:06,239
to to publish if you will so

2576
01:41:06,239 --> 01:41:09,280
um gearing lawrence if you can rev to a

2577
01:41:09,280 --> 01:41:11,280
version 12

2578
01:41:11,280 --> 01:41:13,520
announce it to the mail list and then

2579
01:41:13,520 --> 01:41:15,920
for the participants

2580
01:41:15,920 --> 01:41:20,080
um we can certainly put a a call of are

2581
01:41:20,080 --> 01:41:23,119
we ready to do a working group last call

2582
01:41:23,119 --> 01:41:25,840
um we've already clarified so

2583
01:41:25,840 --> 01:41:28,880
uh dave thanks for for putting in

2584
01:41:28,880 --> 01:41:30,800
your expectation of what should be on

2585
01:41:30,800 --> 01:41:32,800
the eat draft

2586
01:41:32,800 --> 01:41:35,760
but i would encourage and solicit

2587
01:41:35,760 --> 01:41:38,719
everybody else to do the same thing of

2588
01:41:38,719 --> 01:41:41,199
if there are things missing or things

2589
01:41:41,199 --> 01:41:43,199
that need to be addressed for us to get

2590
01:41:43,199 --> 01:41:45,199
to working group last call

2591
01:41:45,199 --> 01:41:47,199
that we start putting them

2592
01:41:47,199 --> 01:41:48,639
both on the mail list but more

2593
01:41:48,639 --> 01:41:50,800
importantly as the authors are tracking

2594
01:41:50,800 --> 01:41:52,239
it on github

2595
01:41:52,239 --> 01:41:54,639
to start putting them and documenting

2596
01:41:54,639 --> 01:41:58,199
them on github

2597
01:42:02,159 --> 01:42:04,320
okay so uh

2598
01:42:04,320 --> 01:42:06,239
should we move on

2599
01:42:06,239 --> 01:42:08,400
yeah

2600
01:42:08,400 --> 01:42:11,040
next up is attestation results for

2601
01:42:11,040 --> 01:42:14,159
secure interactions eric voight

2602
01:42:14,159 --> 01:42:17,920
yes you bring up the slides

2603
01:42:18,080 --> 01:42:19,840
this first slide is just highlighting

2604
01:42:19,840 --> 01:42:22,960
that there's three drafts that last time

2605
01:42:22,960 --> 01:42:24,800
we want to discuss as a group has

2606
01:42:24,800 --> 01:42:26,639
potential overlap this discussion is

2607
01:42:26,639 --> 01:42:28,719
going to be happening later so let's

2608
01:42:28,719 --> 01:42:31,679
jump past this slide

2609
01:42:36,080 --> 01:42:38,320
what we have is at the station results

2610
01:42:38,320 --> 01:42:40,239
for secure interactions and we have

2611
01:42:40,239 --> 01:42:42,159
version two and you can see the set of

2612
01:42:42,159 --> 01:42:43,760
authors who've been

2613
01:42:43,760 --> 01:42:45,840
contributing as well as getting uh

2614
01:42:45,840 --> 01:42:47,760
suggestions from other people on the

2615
01:42:47,760 --> 01:42:51,040
call here next slide

2616
01:42:51,920 --> 01:42:53,920
the big change that occurred from last

2617
01:42:53,920 --> 01:42:56,480
draft is really a split

2618
01:42:56,480 --> 01:42:59,360
of the draft into two parts

2619
01:42:59,360 --> 01:43:01,760
and this was requested in the comments

2620
01:43:01,760 --> 01:43:03,679
of itf 11.

2621
01:43:03,679 --> 01:43:05,760
the comments were let's put the document

2622
01:43:05,760 --> 01:43:08,080
in between the information elements that

2623
01:43:08,080 --> 01:43:10,480
include the attestation results

2624
01:43:10,480 --> 01:43:12,560
and then into end-to-end implementation

2625
01:43:12,560 --> 01:43:15,520
options such as background check or

2626
01:43:15,520 --> 01:43:17,840
the augmented evidence so we now have a

2627
01:43:17,840 --> 01:43:20,960
document which really focuses

2628
01:43:20,960 --> 01:43:24,480
on those two different areas

2629
01:43:24,480 --> 01:43:26,639
there are a couple implementations of

2630
01:43:26,639 --> 01:43:28,159
the overall

2631
01:43:28,159 --> 01:43:30,960
types of attestation results information

2632
01:43:30,960 --> 01:43:32,159
elements that we're going to be talking

2633
01:43:32,159 --> 01:43:33,040
about

2634
01:43:33,040 --> 01:43:35,119
and after at the end of the presentation

2635
01:43:35,119 --> 01:43:36,560
we're going to be hopefully

2636
01:43:36,560 --> 01:43:38,320
asking for working group adoption of

2637
01:43:38,320 --> 01:43:40,080
this draft after we get through the

2638
01:43:40,080 --> 01:43:42,000
intersections with the other drafts next

2639
01:43:42,000 --> 01:43:44,320
slide

2640
01:43:46,639 --> 01:43:48,320
just briefly

2641
01:43:48,320 --> 01:43:50,960
the drive behind this draft is that

2642
01:43:50,960 --> 01:43:52,320
there's many kind of a testing

2643
01:43:52,320 --> 01:43:54,400
environments out there and the relying

2644
01:43:54,400 --> 01:43:56,320
party can't support an infinite number

2645
01:43:56,320 --> 01:43:59,119
of permutations and what kind of claims

2646
01:43:59,119 --> 01:44:00,639
are going to be coming in

2647
01:44:00,639 --> 01:44:04,320
about a verifier saying hey this is what

2648
01:44:04,320 --> 01:44:06,639
i think about the tester so we got to

2649
01:44:06,639 --> 01:44:08,639
make sure that we have some

2650
01:44:08,639 --> 01:44:11,040
commonality in the kind of information

2651
01:44:11,040 --> 01:44:13,840
that's coming into the relying party

2652
01:44:13,840 --> 01:44:16,080
and we need shared definitions next

2653
01:44:16,080 --> 01:44:18,400
slide

2654
01:44:18,400 --> 01:44:20,560
the shared definitions really have to be

2655
01:44:20,560 --> 01:44:23,040
that the tester and the verifier have

2656
01:44:23,040 --> 01:44:25,840
the right information elements that are

2657
01:44:25,840 --> 01:44:27,199
documented

2658
01:44:27,199 --> 01:44:28,400
and

2659
01:44:28,400 --> 01:44:30,639
defining just a small subset of

2660
01:44:30,639 --> 01:44:33,600
information elements is part one

2661
01:44:33,600 --> 01:44:36,560
of what this document includes

2662
01:44:36,560 --> 01:44:39,040
next slide

2663
01:44:40,560 --> 01:44:43,040
the simplification of the draft is that

2664
01:44:43,040 --> 01:44:44,239
we took

2665
01:44:44,239 --> 01:44:45,760
all the

2666
01:44:45,760 --> 01:44:48,000
claims that we had

2667
01:44:48,000 --> 01:44:49,280
previously

2668
01:44:49,280 --> 01:44:51,600
and instead of having boolean like

2669
01:44:51,600 --> 01:44:53,360
either the executables fail the

2670
01:44:53,360 --> 01:44:55,040
executables are approved

2671
01:44:55,040 --> 01:44:57,119
instead we have things like ah there's

2672
01:44:57,119 --> 01:44:59,040
executables and there's a

2673
01:44:59,040 --> 01:45:01,360
there's a

2674
01:45:01,360 --> 01:45:03,920
claim about let's say executables do we

2675
01:45:03,920 --> 01:45:05,840
have the right binaries the right

2676
01:45:05,840 --> 01:45:07,520
runtime files the right time scripts

2677
01:45:07,520 --> 01:45:09,679
loaded and so getting a general claim

2678
01:45:09,679 --> 01:45:12,239
about executables or hardware

2679
01:45:12,239 --> 01:45:14,800
or the file system or the config this is

2680
01:45:14,800 --> 01:45:16,639
the kind of information that is in this

2681
01:45:16,639 --> 01:45:19,360
draft coming up with a minimum set at

2682
01:45:19,360 --> 01:45:21,199
this point of eight things around

2683
01:45:21,199 --> 01:45:24,000
identity integrity and confidentiality

2684
01:45:24,000 --> 01:45:26,880
of the information that is asserted by

2685
01:45:26,880 --> 01:45:27,920
the

2686
01:45:27,920 --> 01:45:30,960
um by the verifier in regards to the

2687
01:45:30,960 --> 01:45:32,719
attester

2688
01:45:32,719 --> 01:45:35,440
and so that's a key there and then the

2689
01:45:35,440 --> 01:45:37,199
other part of the big change along that

2690
01:45:37,199 --> 01:45:39,759
next slide

2691
01:45:41,920 --> 01:45:44,639
is that we instead of having boolean now

2692
01:45:44,639 --> 01:45:46,159
have a

2693
01:45:46,159 --> 01:45:48,400
unsigned signed integer

2694
01:45:48,400 --> 01:45:50,239
and that sign integer

2695
01:45:50,239 --> 01:45:51,119
uh

2696
01:45:51,119 --> 01:45:53,520
provides information saying that there's

2697
01:45:53,520 --> 01:45:55,040
affirmation

2698
01:45:55,040 --> 01:45:56,840
about the

2699
01:45:56,840 --> 01:45:59,199
claim uh warning about the claim or

2700
01:45:59,199 --> 01:46:01,600
contradiction a contra indication about

2701
01:46:01,600 --> 01:46:02,639
the claim

2702
01:46:02,639 --> 01:46:04,560
so there's standardized

2703
01:46:04,560 --> 01:46:08,320
results about what was found out about a

2704
01:46:08,320 --> 01:46:10,159
particular aspect for example the

2705
01:46:10,159 --> 01:46:12,639
executables we could have a green or

2706
01:46:12,639 --> 01:46:15,600
firming value that only genuine's

2707
01:46:15,600 --> 01:46:18,880
genuine files and executables are

2708
01:46:18,880 --> 01:46:19,920
included

2709
01:46:19,920 --> 01:46:22,000
whereas if we don't find that and we

2710
01:46:22,000 --> 01:46:25,679
find a file or an executable that has

2711
01:46:25,679 --> 01:46:28,480
been loaded that we know is not good we

2712
01:46:28,480 --> 01:46:30,239
could send a

2713
01:46:30,239 --> 01:46:32,320
or assign a

2714
01:46:32,320 --> 01:46:35,280
result to that to that executable's

2715
01:46:35,280 --> 01:46:36,159
claim

2716
01:46:36,159 --> 01:46:38,080
that is contrary interdicted for example

2717
01:46:38,080 --> 01:46:39,600
we know that there are files are not

2718
01:46:39,600 --> 01:46:41,440
good in there

2719
01:46:41,440 --> 01:46:44,159
so the the key here obviously is that we

2720
01:46:44,159 --> 01:46:47,840
have tiers of values that simplifies

2721
01:46:47,840 --> 01:46:49,199
things to relying party because the

2722
01:46:49,199 --> 01:46:50,960
relying party can either code against

2723
01:46:50,960 --> 01:46:52,320
the specific

2724
01:46:52,320 --> 01:46:55,040
number in the claim or against ranges in

2725
01:46:55,040 --> 01:46:56,719
the claim if they just want to say i'll

2726
01:46:56,719 --> 01:46:58,320
accept any

2727
01:46:58,320 --> 01:46:59,119
uh

2728
01:46:59,119 --> 01:47:01,760
claims or any claims that are currently

2729
01:47:01,760 --> 01:47:05,040
affirming i will go ahead and deny

2730
01:47:05,040 --> 01:47:07,600
any uh connecting to any device that has

2731
01:47:07,600 --> 01:47:09,920
contra indicated claims

2732
01:47:09,920 --> 01:47:12,239
so the beauty of this particular way of

2733
01:47:12,239 --> 01:47:14,480
encoding is that the relying party can

2734
01:47:14,480 --> 01:47:16,960
either code against generalities or

2735
01:47:16,960 --> 01:47:19,119
specifics

2736
01:47:19,119 --> 01:47:22,280
next slide

2737
01:47:23,040 --> 01:47:25,760
and uh we have looked at these claims

2738
01:47:25,760 --> 01:47:28,320
against multiple types of hardware

2739
01:47:28,320 --> 01:47:30,960
technologies including

2740
01:47:30,960 --> 01:47:32,719
different kinds of of confidential

2741
01:47:32,719 --> 01:47:36,400
compute hardware as well as tpms

2742
01:47:36,400 --> 01:47:38,960
next slide

2743
01:47:39,760 --> 01:47:41,840
so last thing about the part one it's

2744
01:47:41,840 --> 01:47:44,000
important to remember that just because

2745
01:47:44,000 --> 01:47:47,199
you say that something is

2746
01:47:47,199 --> 01:47:49,920
affirmed or contraindicated doesn't mean

2747
01:47:49,920 --> 01:47:52,800
the relying party has to accept it

2748
01:47:52,800 --> 01:47:55,679
this is just the normalization of what's

2749
01:47:55,679 --> 01:47:57,920
being asserted from a claim you might

2750
01:47:57,920 --> 01:48:01,520
say oh i trust a lot more a

2751
01:48:01,520 --> 01:48:03,760
confidential compute environment such as

2752
01:48:03,760 --> 01:48:07,280
sgx or trust zone rather than a tpm for

2753
01:48:07,280 --> 01:48:09,520
an equivalent claim so it's important

2754
01:48:09,520 --> 01:48:11,760
that when you identify the value of a

2755
01:48:11,760 --> 01:48:13,440
claim it's considered

2756
01:48:13,440 --> 01:48:15,520
in the kind of environment

2757
01:48:15,520 --> 01:48:17,840
that was possible to

2758
01:48:17,840 --> 01:48:19,440
make such a claim so you have to

2759
01:48:19,440 --> 01:48:21,440
understand not just the claim but the

2760
01:48:21,440 --> 01:48:24,080
hardware source for what could be

2761
01:48:24,080 --> 01:48:27,199
concluded about that claim

2762
01:48:27,199 --> 01:48:30,400
all right next next slide

2763
01:48:30,639 --> 01:48:32,320
so that was the part about breaking

2764
01:48:32,320 --> 01:48:34,320
things down into various claims there's

2765
01:48:34,320 --> 01:48:36,960
also a second section and that second

2766
01:48:36,960 --> 01:48:39,280
section talks about how to take the

2767
01:48:39,280 --> 01:48:41,040
claims that are shown in green in the

2768
01:48:41,040 --> 01:48:42,000
middle

2769
01:48:42,000 --> 01:48:44,239
match it with freshness indicators from

2770
01:48:44,239 --> 01:48:47,360
the draft architecture as well as

2771
01:48:47,360 --> 01:48:49,760
verifiable identities such as chip

2772
01:48:49,760 --> 01:48:51,760
vendors or

2773
01:48:51,760 --> 01:48:54,000
development environments or target

2774
01:48:54,000 --> 01:48:55,760
environments that say here the is the

2775
01:48:55,760 --> 01:48:56,960
code build

2776
01:48:56,960 --> 01:48:58,560
and it's really the combination of

2777
01:48:58,560 --> 01:49:00,400
freshness trustworthiness claims and

2778
01:49:00,400 --> 01:49:01,440
identity

2779
01:49:01,440 --> 01:49:03,679
which are what would be combined

2780
01:49:03,679 --> 01:49:04,800
together

2781
01:49:04,800 --> 01:49:06,560
into uh something that would be

2782
01:49:06,560 --> 01:49:09,600
evaluated at the relying party

2783
01:49:09,600 --> 01:49:12,400
and that's the second part of the draft

2784
01:49:12,400 --> 01:49:15,839
uh next slide

2785
01:49:16,320 --> 01:49:18,159
and that second part of the draft

2786
01:49:18,159 --> 01:49:21,040
matches to uh a

2787
01:49:21,040 --> 01:49:24,560
call flow in the uh architecture draft

2788
01:49:24,560 --> 01:49:26,320
which uses the times and the rest of the

2789
01:49:26,320 --> 01:49:28,880
things so that the relying party and

2790
01:49:28,880 --> 01:49:30,800
effectively the verifier b at the far

2791
01:49:30,800 --> 01:49:31,599
end

2792
01:49:31,599 --> 01:49:33,840
can go ahead and evaluate the

2793
01:49:33,840 --> 01:49:36,480
information bundle to make a decision on

2794
01:49:36,480 --> 01:49:39,119
whether to start a secure interaction

2795
01:49:39,119 --> 01:49:40,639
between the

2796
01:49:40,639 --> 01:49:42,800
a tester and the

2797
01:49:42,800 --> 01:49:45,840
uh relying party

2798
01:49:45,840 --> 01:49:48,239
right next slide

2799
01:49:48,239 --> 01:49:50,639
i think that might be it yes summary

2800
01:49:50,639 --> 01:49:52,159
so we've gone through and broken the

2801
01:49:52,159 --> 01:49:54,400
document into two parts the information

2802
01:49:54,400 --> 01:49:56,400
elements for attestation results

2803
01:49:56,400 --> 01:49:57,679
summaries

2804
01:49:57,679 --> 01:49:59,199
uh we have end

2805
01:49:59,199 --> 01:50:01,599
and implementation options and there's

2806
01:50:01,599 --> 01:50:03,199
at least a couple implementations out

2807
01:50:03,199 --> 01:50:04,960
there including a trusted path routing

2808
01:50:04,960 --> 01:50:06,960
that we'll talk about second

2809
01:50:06,960 --> 01:50:08,719
and that we're hoping that we can get a

2810
01:50:08,719 --> 01:50:11,440
discussion on working group adoption

2811
01:50:11,440 --> 01:50:13,679
so the um

2812
01:50:13,679 --> 01:50:16,239
the uh this is where we are right now uh

2813
01:50:16,239 --> 01:50:18,000
questions thoughts

2814
01:50:18,000 --> 01:50:21,639
gary's on the queue

2815
01:50:25,040 --> 01:50:25,840
yes

2816
01:50:25,840 --> 01:50:28,480
uh thanks eric for the uh

2817
01:50:28,480 --> 01:50:30,639
the draft and the uh

2818
01:50:30,639 --> 01:50:32,880
the explanation sorry i'm having trouble

2819
01:50:32,880 --> 01:50:34,400
getting my camera on

2820
01:50:34,400 --> 01:50:35,360
um

2821
01:50:35,360 --> 01:50:37,119
so i uh

2822
01:50:37,119 --> 01:50:38,480
i've read through the trustworthiness

2823
01:50:38,480 --> 01:50:40,400
claims section a few times and one of

2824
01:50:40,400 --> 01:50:41,760
the things that i

2825
01:50:41,760 --> 01:50:44,560
don't that in my impression reading it

2826
01:50:44,560 --> 01:50:46,159
is that

2827
01:50:46,159 --> 01:50:48,480
although the claim values are defined

2828
01:50:48,480 --> 01:50:50,960
the criteria that the verifier use in

2829
01:50:50,960 --> 01:50:53,440
determining those claim values are not

2830
01:50:53,440 --> 01:50:55,679
and therefore interoperability is going

2831
01:50:55,679 --> 01:50:57,280
to be a

2832
01:50:57,280 --> 01:51:00,000
very difficult issue like i'll give a uh

2833
01:51:00,000 --> 01:51:01,360
let me see if i can give a concrete

2834
01:51:01,360 --> 01:51:03,599
example like take for instance

2835
01:51:03,599 --> 01:51:06,000
an attestation result or sorry an

2836
01:51:06,000 --> 01:51:08,159
attestation is provided in the form of a

2837
01:51:08,159 --> 01:51:09,520
token maybe

2838
01:51:09,520 --> 01:51:11,440
that says the firmware running on the

2839
01:51:11,440 --> 01:51:13,920
device is that version x

2840
01:51:13,920 --> 01:51:16,560
that's and that's not the tip

2841
01:51:16,560 --> 01:51:18,960
one verifier may actually be it may

2842
01:51:18,960 --> 01:51:21,599
actually uh lower the trustworthiness of

2843
01:51:21,599 --> 01:51:23,599
the device based on that

2844
01:51:23,599 --> 01:51:25,520
because it's not running at the tip

2845
01:51:25,520 --> 01:51:28,080
another verifier may know what is at the

2846
01:51:28,080 --> 01:51:30,239
tip and they view that that uh it may

2847
01:51:30,239 --> 01:51:32,560
view that the the additional changes in

2848
01:51:32,560 --> 01:51:35,119
the fir in the later version firmware

2849
01:51:35,119 --> 01:51:36,159
are not

2850
01:51:36,159 --> 01:51:38,960
sufficiently consequential to affect the

2851
01:51:38,960 --> 01:51:41,599
security state of the device and may not

2852
01:51:41,599 --> 01:51:44,000
uh impact the trustworthiness claim

2853
01:51:44,000 --> 01:51:45,520
accordingly

2854
01:51:45,520 --> 01:51:46,800
so

2855
01:51:46,800 --> 01:51:49,119
i'm wondering if we can i'm wondering if

2856
01:51:49,119 --> 01:51:52,239
we can't really define how the verifier

2857
01:51:52,239 --> 01:51:54,159
is actually you it is actually

2858
01:51:54,159 --> 01:51:55,360
determining

2859
01:51:55,360 --> 01:51:57,760
the values on the trustworthiness claims

2860
01:51:57,760 --> 01:51:59,520
can we ever really come up with the

2861
01:51:59,520 --> 01:52:01,760
interoperable specification from that

2862
01:52:01,760 --> 01:52:03,280
perspective at least

2863
01:52:03,280 --> 01:52:05,760
at least that's useful

2864
01:52:05,760 --> 01:52:06,800
okay

2865
01:52:06,800 --> 01:52:09,599
now good question we certainly have had

2866
01:52:09,599 --> 01:52:11,760
discussions in the past at least uh in

2867
01:52:11,760 --> 01:52:14,320
the verifiers i've worked with on this

2868
01:52:14,320 --> 01:52:16,480
in the end the verifiers like to compete

2869
01:52:16,480 --> 01:52:19,199
based on how good they can do something

2870
01:52:19,199 --> 01:52:20,880
some verifiers will say here are the

2871
01:52:20,880 --> 01:52:24,400
rules of which i'm going to process um

2872
01:52:24,400 --> 01:52:27,119
a conclusion others might say i'm not

2873
01:52:27,119 --> 01:52:28,880
going to actually discuss how i look at

2874
01:52:28,880 --> 01:52:30,560
the evidence in order to generate the

2875
01:52:30,560 --> 01:52:33,040
conclusion it's up to the verifier to

2876
01:52:33,040 --> 01:52:35,679
determine what level of exposure they're

2877
01:52:35,679 --> 01:52:38,320
going to do in identifying the rules for

2878
01:52:38,320 --> 01:52:40,080
processing there's actually a good

2879
01:52:40,080 --> 01:52:42,239
reason for this a lot of the people

2880
01:52:42,239 --> 01:52:43,599
don't want to

2881
01:52:43,599 --> 01:52:47,199
show what their issues are in terms of

2882
01:52:47,199 --> 01:52:48,800
what they see as vulnerabilities so

2883
01:52:48,800 --> 01:52:50,719
people don't start to design

2884
01:52:50,719 --> 01:52:53,679
to their attacks to pass the test

2885
01:52:53,679 --> 01:52:56,719
so instead of saying here is the

2886
01:52:56,719 --> 01:52:58,560
exact

2887
01:52:58,560 --> 01:53:02,480
equation to have the result instead

2888
01:53:02,480 --> 01:53:04,639
they're saying you know this is what i'm

2889
01:53:04,639 --> 01:53:06,239
willing to release this is what i'm not

2890
01:53:06,239 --> 01:53:08,960
willing to release the goal to meet this

2891
01:53:08,960 --> 01:53:12,400
standard is not a rule but a definition

2892
01:53:12,400 --> 01:53:14,800
of a particular claim and it's up to the

2893
01:53:14,800 --> 01:53:16,960
relying party to determine

2894
01:53:16,960 --> 01:53:19,760
whether you know they uh accept the

2895
01:53:19,760 --> 01:53:21,840
assertions that are made

2896
01:53:21,840 --> 01:53:24,400
at the standard level by the verifier

2897
01:53:24,400 --> 01:53:27,440
against those claims there's a bunch of

2898
01:53:27,440 --> 01:53:29,040
other things that can go along in that

2899
01:53:29,040 --> 01:53:30,080
but um

2900
01:53:30,080 --> 01:53:32,960
in the end uh you know the the rules for

2901
01:53:32,960 --> 01:53:35,840
calculation are not always formulaic

2902
01:53:35,840 --> 01:53:37,199
especially when you have a huge amount

2903
01:53:37,199 --> 01:53:39,599
of evidence and we have to generalize

2904
01:53:39,599 --> 01:53:41,840
some of the values across different

2905
01:53:41,840 --> 01:53:44,320
types of technologies we have many types

2906
01:53:44,320 --> 01:53:46,080
of technologies and trying to say how to

2907
01:53:46,080 --> 01:53:48,800
calculate a constant value across them

2908
01:53:48,800 --> 01:53:52,800
will not always be something will be

2909
01:53:52,800 --> 01:53:57,040
that uh formally defined in an equation

2910
01:53:57,040 --> 01:53:59,040
so we're over time

2911
01:53:59,040 --> 01:53:59,840
uh

2912
01:53:59,840 --> 01:54:02,080
can we address the next topic in two

2913
01:54:02,080 --> 01:54:04,400
minutes

2914
01:54:04,400 --> 01:54:06,080
which is

2915
01:54:06,080 --> 01:54:07,760
trusted path routing yeah that'll be a

2916
01:54:07,760 --> 01:54:09,040
real quick one

2917
01:54:09,040 --> 01:54:11,280
okay

2918
01:54:12,080 --> 01:54:14,000
all right trusted path routing uh we

2919
01:54:14,000 --> 01:54:16,320
have the same authors from last time

2920
01:54:16,320 --> 01:54:18,880
it really is an instance of the

2921
01:54:18,880 --> 01:54:21,760
attestation results draft

2922
01:54:21,760 --> 01:54:24,560
can go to the next slide

2923
01:54:26,080 --> 01:54:27,440
and what happens is you take the

2924
01:54:27,440 --> 01:54:29,679
appraisal policy for attestation results

2925
01:54:29,679 --> 01:54:31,760
and we take the new definitions

2926
01:54:31,760 --> 01:54:34,560
from the attestation results draft and

2927
01:54:34,560 --> 01:54:36,560
we build a topology across a set of

2928
01:54:36,560 --> 01:54:39,280
routers that is able to bypass routers

2929
01:54:39,280 --> 01:54:42,320
that don't have the

2930
01:54:42,320 --> 01:54:44,560
the trustworthiness claims as expected

2931
01:54:44,560 --> 01:54:47,040
next slide

2932
01:54:48,320 --> 01:54:51,920
this just talks about uh the means of

2933
01:54:51,920 --> 01:54:54,400
evaluating the

2934
01:54:54,400 --> 01:54:56,159
information coming from one

2935
01:54:56,159 --> 01:54:57,760
device to another

2936
01:54:57,760 --> 01:54:59,360
and there was a question on the mailing

2937
01:54:59,360 --> 01:55:00,880
list can we do this with eat can we do

2938
01:55:00,880 --> 01:55:02,320
this with yang how's this going to be

2939
01:55:02,320 --> 01:55:03,360
encoded

2940
01:55:03,360 --> 01:55:05,199
really the trustworthiness

2941
01:55:05,199 --> 01:55:06,719
path routing and the trustworthy path

2942
01:55:06,719 --> 01:55:09,040
rallying draft talks about how to parse

2943
01:55:09,040 --> 01:55:10,639
specific fields

2944
01:55:10,639 --> 01:55:15,040
and in various encodings next slide

2945
01:55:17,199 --> 01:55:18,400
and so the only thing that's really

2946
01:55:18,400 --> 01:55:20,320
changed in the draft is that we match to

2947
01:55:20,320 --> 01:55:22,320
the attestation results and i think

2948
01:55:22,320 --> 01:55:24,719
that's it

2949
01:55:26,800 --> 01:55:28,400
okay so we're just going ahead and keep

2950
01:55:28,400 --> 01:55:31,840
on uh defining and no need to

2951
01:55:31,840 --> 01:55:33,840
adopt this until we get a decision on

2952
01:55:33,840 --> 01:55:35,840
the attestation results okay that's it

2953
01:55:35,840 --> 01:55:38,080
oh okay thank you

2954
01:55:38,080 --> 01:55:40,800
so next up is scalable remote

2955
01:55:40,800 --> 01:55:42,719
attestation for system containers and

2956
01:55:42,719 --> 01:55:47,080
applications catholic moriarty

2957
01:55:49,199 --> 01:55:51,520
good morning uh next slide please i'm

2958
01:55:51,520 --> 01:55:53,360
going to provide an overview i've done

2959
01:55:53,360 --> 01:55:54,960
this before but it seems there's

2960
01:55:54,960 --> 01:55:56,239
confusion

2961
01:55:56,239 --> 01:55:58,320
on the draft

2962
01:55:58,320 --> 01:56:00,400
however the explanation that went out

2963
01:56:00,400 --> 01:56:02,960
but there's no overlap but it uses e is

2964
01:56:02,960 --> 01:56:05,199
a correct summary

2965
01:56:05,199 --> 01:56:08,320
essentially this is to provide a way to

2966
01:56:08,320 --> 01:56:09,599
scale

2967
01:56:09,599 --> 01:56:12,719
bringing local attestations to a remote

2968
01:56:12,719 --> 01:56:15,280
a single remote attestation

2969
01:56:15,280 --> 01:56:17,520
and so

2970
01:56:17,520 --> 01:56:19,119
and part of this is thinking about the

2971
01:56:19,119 --> 01:56:20,880
posture assessment use case and what's

2972
01:56:20,880 --> 01:56:22,880
working what's not working

2973
01:56:22,880 --> 01:56:23,760
with

2974
01:56:23,760 --> 01:56:26,560
current posture assessment techniques

2975
01:56:26,560 --> 01:56:29,119
it requires a lot of customization

2976
01:56:29,119 --> 01:56:30,320
on

2977
01:56:30,320 --> 01:56:32,719
the part of every single organization

2978
01:56:32,719 --> 01:56:34,239
and while the standards are there and

2979
01:56:34,239 --> 01:56:35,360
they work

2980
01:56:35,360 --> 01:56:37,920
that has been a barrier um you know even

2981
01:56:37,920 --> 01:56:39,520
though lots of vendors have implemented

2982
01:56:39,520 --> 01:56:40,800
it because people don't have the

2983
01:56:40,800 --> 01:56:42,480
expertise to deploy

2984
01:56:42,480 --> 01:56:44,719
or have a person responsible for that

2985
01:56:44,719 --> 01:56:46,560
level of detail

2986
01:56:46,560 --> 01:56:48,639
now what we've seen with trusted boot

2987
01:56:48,639 --> 01:56:51,520
process is that vendors a number of them

2988
01:56:51,520 --> 01:56:53,920
have been able to

2989
01:56:53,920 --> 01:56:56,159
demonstrate a trusted boot process that

2990
01:56:56,159 --> 01:56:58,800
relies on a series of trusted or

2991
01:56:58,800 --> 01:57:01,840
attestations working out or resetting a

2992
01:57:01,840 --> 01:57:04,239
process if it doesn't work out

2993
01:57:04,239 --> 01:57:05,840
and then

2994
01:57:05,840 --> 01:57:07,679
you know the system is brought up as as

2995
01:57:07,679 --> 01:57:11,040
being trusted and it even can provide

2996
01:57:11,040 --> 01:57:13,760
an assurance to the

2997
01:57:13,760 --> 01:57:16,320
hardware that's expected on a system now

2998
01:57:16,320 --> 01:57:20,080
and so these are aligned to nist sp 800

2999
01:57:20,080 --> 01:57:23,199
193 so the firmware resiliency

3000
01:57:23,199 --> 01:57:24,800
specification

3001
01:57:24,800 --> 01:57:27,040
and then it's further instantiated in

3002
01:57:27,040 --> 01:57:29,840
tcg's reference integrity measurements

3003
01:57:29,840 --> 01:57:32,880
documents next slide please

3004
01:57:32,880 --> 01:57:35,040
so

3005
01:57:35,119 --> 01:57:36,159
that

3006
01:57:36,159 --> 01:57:39,040
would constitute a set right all of the

3007
01:57:39,040 --> 01:57:41,440
policies or measurements

3008
01:57:41,440 --> 01:57:43,520
um and and you might break it down in

3009
01:57:43,520 --> 01:57:44,880
different ways you might have multiple

3010
01:57:44,880 --> 01:57:47,599
sets represent the document but having

3011
01:57:47,599 --> 01:57:49,360
this

3012
01:57:49,360 --> 01:57:50,639
um

3013
01:57:50,639 --> 01:57:51,679
having this

3014
01:57:51,679 --> 01:57:53,040
guiding

3015
01:57:53,040 --> 01:57:55,599
way to take a set of what's been done

3016
01:57:55,599 --> 01:57:58,480
locally and report it remotely could

3017
01:57:58,480 --> 01:58:00,719
help us better scale what the posture

3018
01:58:00,719 --> 01:58:03,520
assessment looks like from a system

3019
01:58:03,520 --> 01:58:05,599
gathering that information and the

3020
01:58:05,599 --> 01:58:06,960
reason is that you're not going to want

3021
01:58:06,960 --> 01:58:09,040
to send every single attestation across

3022
01:58:09,040 --> 01:58:11,360
the wire because then it would just be

3023
01:58:11,360 --> 01:58:13,920
too much data but we have logs and we

3024
01:58:13,920 --> 01:58:16,320
have evidence when these attestations

3025
01:58:16,320 --> 01:58:18,960
happen locally so the idea is really

3026
01:58:18,960 --> 01:58:21,440
very simple let's group them up provide

3027
01:58:21,440 --> 01:58:23,440
a way to label what that group looks

3028
01:58:23,440 --> 01:58:25,679
like and then be able to send it to a

3029
01:58:25,679 --> 01:58:28,400
remote repository whatever that is

3030
01:58:28,400 --> 01:58:30,880
and so this draft

3031
01:58:30,880 --> 01:58:33,840
sets up a

3032
01:58:33,840 --> 01:58:36,159
so that we could define what those sets

3033
01:58:36,159 --> 01:58:37,840
look like so that we have

3034
01:58:37,840 --> 01:58:40,000
interoperability across the wire and we

3035
01:58:40,000 --> 01:58:41,840
understand when a set is attested

3036
01:58:41,840 --> 01:58:43,760
locally what does that mean

3037
01:58:43,760 --> 01:58:46,639
to the remote entity and it you know it

3038
01:58:46,639 --> 01:58:49,599
obviously uses eat um

3039
01:58:49,599 --> 01:58:51,119
it would

3040
01:58:51,119 --> 01:58:53,599
leverage uh you know assurance of what's

3041
01:58:53,599 --> 01:58:55,599
coming from that host and how that was

3042
01:58:55,599 --> 01:58:56,719
provided

3043
01:58:56,719 --> 01:58:59,679
but would be essentially just grouping

3044
01:58:59,679 --> 01:59:01,920
those sets so that we could better scale

3045
01:59:01,920 --> 01:59:03,760
posture assessment where it's possible

3046
01:59:03,760 --> 01:59:05,840
and it might not be possible to do

3047
01:59:05,840 --> 01:59:07,760
attestations for every bit of posture

3048
01:59:07,760 --> 01:59:10,639
assessment but if we could do a lot more

3049
01:59:10,639 --> 01:59:12,639
via this technique that puts the onus on

3050
01:59:12,639 --> 01:59:16,159
the vendor to create the set of what's

3051
01:59:16,159 --> 01:59:17,920
expected

3052
01:59:17,920 --> 01:59:20,159
and then have remediation capabilities

3053
01:59:20,159 --> 01:59:21,679
where possible

3054
01:59:21,679 --> 01:59:23,599
then this is going to help all of those

3055
01:59:23,599 --> 01:59:26,000
end entities that cannot hire somebody

3056
01:59:26,000 --> 01:59:27,920
we have a 3.5

3057
01:59:27,920 --> 01:59:30,719
million person deficit globally and

3058
01:59:30,719 --> 01:59:32,320
there's lots of organizations like ones

3059
01:59:32,320 --> 01:59:34,000
that we support uh at center for

3060
01:59:34,000 --> 01:59:35,679
internet security

3061
01:59:35,679 --> 01:59:37,040
at the state local tribal and

3062
01:59:37,040 --> 01:59:39,360
territorial networks and that's just an

3063
01:59:39,360 --> 01:59:41,360
example because there's lots of small

3064
01:59:41,360 --> 01:59:45,119
organizations that cannot hire resources

3065
01:59:45,119 --> 01:59:47,679
for functions like this so if this were

3066
01:59:47,679 --> 01:59:50,239
to be provided by the vendor this gets

3067
01:59:50,239 --> 01:59:52,880
us closer to not just built-in security

3068
01:59:52,880 --> 01:59:54,880
and provided built-in security but then

3069
01:59:54,880 --> 01:59:59,639
ongoing assurance to that expectation

3070
02:00:00,560 --> 02:00:02,880
um

3071
02:00:03,040 --> 02:00:04,880
and so you could use whatever format you

3072
02:00:04,880 --> 02:00:06,080
need and it would be sent to a

3073
02:00:06,080 --> 02:00:08,159
repository and it would just match up

3074
02:00:08,159 --> 02:00:10,239
what is that set and

3075
02:00:10,239 --> 02:00:12,719
and how that is uh registered next slide

3076
02:00:12,719 --> 02:00:14,960
please

3077
02:00:16,239 --> 02:00:18,719
so we're we're over time

3078
02:00:18,719 --> 02:00:20,880
okay i think that explains it well

3079
02:00:20,880 --> 02:00:21,920
enough

3080
02:00:21,920 --> 02:00:23,920
um if there's any questions i'd be happy

3081
02:00:23,920 --> 02:00:26,560
to take them i guess at the next session

3082
02:00:26,560 --> 02:00:27,440
yep

3083
02:00:27,440 --> 02:00:29,280
and please read the draft

3084
02:00:29,280 --> 02:00:32,639
it's short and simple

3085
02:00:33,440 --> 02:00:35,199
thank you

3086
02:00:35,199 --> 02:00:37,280
and i think that concludes our session

3087
02:00:37,280 --> 02:00:41,840
for today next session is on friday

3088
02:00:43,199 --> 02:00:45,599
check the agenda to get the actual time

3089
02:00:45,599 --> 02:00:48,880
zone that works for you

3090
02:00:48,880 --> 02:00:51,040
thank you

3091
02:00:51,040 --> 02:00:55,480
until friday everyone thanks

3092
02:01:25,119 --> 02:01:28,119
so

3093
02:02:36,000 --> 02:02:38,080
you

