1
00:00:26,640 --> 00:00:29,279
good afternoon good evening wherever you

2
00:00:29,279 --> 00:00:30,720
are

3
00:00:30,720 --> 00:00:32,000
this is

4
00:00:32,000 --> 00:00:34,960
the netcom working group 112 virtual

5
00:00:34,960 --> 00:00:37,280
meeting

6
00:00:40,239 --> 00:00:43,600
um can't you want to go ahead and

7
00:00:43,600 --> 00:00:45,760
actually enable the notepad if it has

8
00:00:45,760 --> 00:00:48,960
not yeah i'm looking at it right now

9
00:00:48,960 --> 00:00:51,200
okay

10
00:00:52,480 --> 00:00:53,600
all right

11
00:00:53,600 --> 00:00:56,600
um

12
00:01:00,480 --> 00:01:03,440
by participating in the itf you agree to

13
00:01:03,440 --> 00:01:04,479
follow

14
00:01:04,479 --> 00:01:05,280
the

15
00:01:05,280 --> 00:01:08,320
following itf processes and policies if

16
00:01:08,320 --> 00:01:10,479
you are not familiar with them

17
00:01:10,479 --> 00:01:15,119
please do familiarize yourself with them

18
00:01:18,320 --> 00:01:20,960
well you are here in this meet echo

19
00:01:20,960 --> 00:01:23,520
session so you don't need the link um

20
00:01:23,520 --> 00:01:26,320
watch the chat window

21
00:01:26,320 --> 00:01:27,119
for

22
00:01:27,119 --> 00:01:29,520
comments and i believe it can be made a

23
00:01:29,520 --> 00:01:33,920
separate window if you want

24
00:01:34,479 --> 00:01:37,360
we have one r uh we requested for one

25
00:01:37,360 --> 00:01:41,360
hour a slot for the netcat agenda

26
00:01:41,360 --> 00:01:43,600
um we will try to stick to the time

27
00:01:43,600 --> 00:01:45,920
that's allocated for each speaker

28
00:01:45,920 --> 00:01:47,520
um as

29
00:01:47,520 --> 00:01:49,280
pretty much

30
00:01:49,280 --> 00:01:50,799
tight on time

31
00:01:50,799 --> 00:01:52,560
there will be a countdown timer at the

32
00:01:52,560 --> 00:01:55,119
bottom of the screen to help

33
00:01:55,119 --> 00:01:57,119
guide the speakers

34
00:01:57,119 --> 00:01:59,200
try to stick to that time

35
00:01:59,200 --> 00:02:01,200
we don't hope to have to cut off the

36
00:02:01,200 --> 00:02:05,439
microphone in case we run out of time

37
00:02:05,680 --> 00:02:09,280
the as usual remember to cue yourself

38
00:02:09,280 --> 00:02:11,520
in medical by

39
00:02:11,520 --> 00:02:13,520
uh clicking on the

40
00:02:13,520 --> 00:02:16,239
hand symbol

41
00:02:16,239 --> 00:02:21,200
and to speak remember to unmute yourself

42
00:02:21,200 --> 00:02:22,959
you know at the end do remember to

43
00:02:22,959 --> 00:02:26,319
remove yourself from the queue

44
00:02:26,319 --> 00:02:27,760
and

45
00:02:27,760 --> 00:02:29,280
we should have a

46
00:02:29,280 --> 00:02:30,800
kodi md

47
00:02:30,800 --> 00:02:33,760
window up ready for anyone

48
00:02:33,760 --> 00:02:36,160
to put in their notes actually do help

49
00:02:36,160 --> 00:02:37,680
us

50
00:02:37,680 --> 00:02:39,680
i think

51
00:02:39,680 --> 00:02:40,879
yeah i'm just gonna say i think it is

52
00:02:40,879 --> 00:02:43,120
set up right now if you go to the

53
00:02:43,120 --> 00:02:45,680
in the top menu note taking tool click

54
00:02:45,680 --> 00:02:48,720
there should see it initialized

55
00:02:48,720 --> 00:02:52,080
okay thanks again

56
00:02:52,560 --> 00:02:54,560
all right

57
00:02:54,560 --> 00:02:56,800
we are going to ask the presenters to do

58
00:02:56,800 --> 00:02:59,760
their present their own slides so um it

59
00:02:59,760 --> 00:03:02,800
should go relatively smoothly but this

60
00:03:02,800 --> 00:03:05,840
is new for everyone

61
00:03:06,720 --> 00:03:08,560
so where are we with this

62
00:03:08,560 --> 00:03:10,879
chartered list of workgroup items uh the

63
00:03:10,879 --> 00:03:13,920
young push notification capabilities is

64
00:03:13,920 --> 00:03:16,800
of course past i say review it's in the

65
00:03:16,800 --> 00:03:20,640
rfc editor queue at this point

66
00:03:21,120 --> 00:03:22,800
kent will talk about

67
00:03:22,800 --> 00:03:24,879
his suite of drafts the clients are the

68
00:03:24,879 --> 00:03:28,239
suite of trials in the next slide

69
00:03:28,239 --> 00:03:29,120
the

70
00:03:29,120 --> 00:03:32,400
https notification draft

71
00:03:32,400 --> 00:03:33,200
uh

72
00:03:33,200 --> 00:03:35,680
kent and i being the authors on it

73
00:03:35,680 --> 00:03:37,920
believe have addressed all the open

74
00:03:37,920 --> 00:03:39,440
issues

75
00:03:39,440 --> 00:03:42,480
and we believe

76
00:03:42,480 --> 00:03:46,679
it's ready for publication

77
00:03:47,360 --> 00:03:48,400
um

78
00:03:48,400 --> 00:03:49,599
rob

79
00:03:49,599 --> 00:03:52,879
did you want to

80
00:03:52,879 --> 00:03:56,959
go ahead and okay let me grant you

81
00:03:56,959 --> 00:03:57,680
i

82
00:03:57,680 --> 00:04:00,640
think i can just i don't

83
00:04:00,640 --> 00:04:02,480
can you hear me

84
00:04:02,480 --> 00:04:03,360
yes

85
00:04:03,360 --> 00:04:04,400
yes uh

86
00:04:04,400 --> 00:04:06,159
yes thank you for this i'm sorry i think

87
00:04:06,159 --> 00:04:08,879
that's that's good um one question to

88
00:04:08,879 --> 00:04:11,840
the working group is it be if anyone is

89
00:04:11,840 --> 00:04:13,120
offering to

90
00:04:13,120 --> 00:04:14,879
be the document shepard for this

91
00:04:14,879 --> 00:04:16,639
document that would be appreciated and i

92
00:04:16,639 --> 00:04:18,399
can go around asking but if anyone would

93
00:04:18,399 --> 00:04:20,320
like to do that and then that would be

94
00:04:20,320 --> 00:04:21,680
helpful for me

95
00:04:21,680 --> 00:04:24,639
and they can do so

96
00:04:25,199 --> 00:04:28,560
okay so drop me an email if you're

97
00:04:28,560 --> 00:04:31,280
interested thanks

98
00:04:32,560 --> 00:04:33,680
all right

99
00:04:33,680 --> 00:04:36,080
thanks rob

100
00:04:36,080 --> 00:04:39,840
the yang push notification messages uh

101
00:04:39,840 --> 00:04:43,040
expired today um we

102
00:04:43,040 --> 00:04:44,400
i know that this

103
00:04:44,400 --> 00:04:47,600
draft has been on hold waiting for https

104
00:04:47,600 --> 00:04:49,040
notification

105
00:04:49,040 --> 00:04:50,639
to get done

106
00:04:50,639 --> 00:04:52,160
now that is done

107
00:04:52,160 --> 00:04:54,960
um we would ask the authors if they're

108
00:04:54,960 --> 00:04:57,919
here otherwise offline

109
00:04:57,919 --> 00:05:01,120
to revive the draft and

110
00:05:01,120 --> 00:05:03,280
post an update and proceed with trying

111
00:05:03,280 --> 00:05:06,638
to finalize the draft

112
00:05:07,759 --> 00:05:10,639
the udp native draft is a work in

113
00:05:10,639 --> 00:05:13,120
progress and is going to be discussed in

114
00:05:13,120 --> 00:05:16,479
this meeting today

115
00:05:16,479 --> 00:05:18,800
um

116
00:05:20,000 --> 00:05:23,039
can't any comments um

117
00:05:23,039 --> 00:05:25,360
oh sorry we let's move to distributed

118
00:05:25,360 --> 00:05:27,280
note of draft and maybe we can come back

119
00:05:27,280 --> 00:05:29,520
to if anyone has any comments

120
00:05:29,520 --> 00:05:32,560
the distributed noted draft is a

121
00:05:32,560 --> 00:05:35,120
workgroup document

122
00:05:35,120 --> 00:05:37,280
it expires soon if it hasn't already

123
00:05:37,280 --> 00:05:39,120
expired

124
00:05:39,120 --> 00:05:40,800
um

125
00:05:40,800 --> 00:05:43,199
the authors i don't know what the plan

126
00:05:43,199 --> 00:05:46,240
is as from the authors do they plan to

127
00:05:46,240 --> 00:05:48,800
continue working on it um

128
00:05:48,800 --> 00:05:50,840
if they

129
00:05:50,840 --> 00:05:52,479
bring

130
00:05:52,479 --> 00:05:54,000
they will

131
00:05:54,000 --> 00:05:55,840
i think that they would like to bring

132
00:05:55,840 --> 00:05:58,560
the discussion back on the mailing list

133
00:05:58,560 --> 00:06:00,880
and make progress on the draft so we

134
00:06:00,880 --> 00:06:04,080
hope to see some activity

135
00:06:04,080 --> 00:06:08,319
the sctp csr draft is um i believe i saw

136
00:06:08,319 --> 00:06:11,600
a post today from kent um

137
00:06:11,600 --> 00:06:15,039
and you just updated and addressed

138
00:06:15,039 --> 00:06:18,319
um some comments

139
00:06:18,319 --> 00:06:19,199
correct

140
00:06:19,199 --> 00:06:22,479
a um a duplicate paragraph i had had to

141
00:06:22,479 --> 00:06:24,240
be removed so i just removed that

142
00:06:24,240 --> 00:06:26,160
paragraph and reposted it

143
00:06:26,160 --> 00:06:29,680
at this point it should be ready for up

144
00:06:30,880 --> 00:06:33,280
all right

145
00:06:33,520 --> 00:06:35,840
uh so again do you want to go ahead and

146
00:06:35,840 --> 00:06:36,720
um

147
00:06:36,720 --> 00:06:38,000
sorry rob

148
00:06:38,000 --> 00:06:40,240
go ahead ron uh yes so i think this is

149
00:06:40,240 --> 00:06:42,639
done so i will send this on

150
00:06:42,639 --> 00:06:47,000
for itaf lascal thanks

151
00:06:48,240 --> 00:06:49,360
all right

152
00:06:49,360 --> 00:06:52,400
oh it do you can't

153
00:06:52,560 --> 00:06:54,400
right okay for the client service suite

154
00:06:54,400 --> 00:06:57,520
of drafts uh so first and foremost

155
00:06:57,520 --> 00:07:00,319
we've completed the last call on the

156
00:07:00,319 --> 00:07:02,930
entire suite of drafts

157
00:07:02,930 --> 00:07:05,280
[Music]

158
00:07:05,280 --> 00:07:07,280
the last two netconf client server and

159
00:07:07,280 --> 00:07:08,880
rest comp client server

160
00:07:08,880 --> 00:07:10,880
last calls i think we

161
00:07:10,880 --> 00:07:13,680
declared completion on about two or

162
00:07:13,680 --> 00:07:15,599
three weeks ago

163
00:07:15,599 --> 00:07:18,240
after soliciting feedback and not

164
00:07:18,240 --> 00:07:20,400
receiving any objections we've decided

165
00:07:20,400 --> 00:07:23,679
to move forward with process

166
00:07:24,720 --> 00:07:26,720
and then but there are

167
00:07:26,720 --> 00:07:28,160
some

168
00:07:28,160 --> 00:07:29,759
issues pending

169
00:07:29,759 --> 00:07:31,680
and on the right hand side there's it's

170
00:07:31,680 --> 00:07:33,280
two are listed but actually there's a

171
00:07:33,280 --> 00:07:35,520
third as well i need to speak to

172
00:07:35,520 --> 00:07:36,720
um

173
00:07:36,720 --> 00:07:40,240
so firstly you may recall in the tls

174
00:07:40,240 --> 00:07:41,759
client server draft

175
00:07:41,759 --> 00:07:44,639
there's an open pending issue that came

176
00:07:44,639 --> 00:07:46,560
out of the last call for

177
00:07:46,560 --> 00:07:49,520
how to support uh raw public keys and

178
00:07:49,520 --> 00:07:54,560
pre-shared keys for tls 1.3

179
00:07:54,560 --> 00:07:57,039
pom pets raised the issue and

180
00:07:57,039 --> 00:07:59,520
hank dirk schaff was going to help

181
00:07:59,520 --> 00:08:01,680
resolve the issue but we've yet to

182
00:08:01,680 --> 00:08:03,440
actually resolve the issue so that's

183
00:08:03,440 --> 00:08:06,479
remains pending open item

184
00:08:06,479 --> 00:08:08,400
secondly

185
00:08:08,400 --> 00:08:10,639
in the both the key store and trust

186
00:08:10,639 --> 00:08:14,800
store drafts uh i i think it's incumbent

187
00:08:14,800 --> 00:08:17,199
upon us to ensure that the language

188
00:08:17,199 --> 00:08:18,080
there

189
00:08:18,080 --> 00:08:21,440
does not preclude the ability to use the

190
00:08:21,440 --> 00:08:24,160
system-defined configuration work

191
00:08:24,160 --> 00:08:26,560
that the netmod working group is um

192
00:08:26,560 --> 00:08:28,080
engaging in

193
00:08:28,080 --> 00:08:30,639
that uh currently these built-in keys

194
00:08:30,639 --> 00:08:32,479
that there's discussion about how they

195
00:08:32,479 --> 00:08:34,320
show up and operational and maybe they

196
00:08:34,320 --> 00:08:36,159
need to be copied into

197
00:08:36,159 --> 00:08:37,440
running

198
00:08:37,440 --> 00:08:40,399
but um we want to ensure that you know

199
00:08:40,399 --> 00:08:43,360
uh if the system work goes forward that

200
00:08:43,360 --> 00:08:44,560
you know those

201
00:08:44,560 --> 00:08:46,880
keys could alternatively are actually

202
00:08:46,880 --> 00:08:49,200
preferably show up in

203
00:08:49,200 --> 00:08:51,279
the system data store

204
00:08:51,279 --> 00:08:54,160
so just want to uh go over the language

205
00:08:54,160 --> 00:08:55,920
there and make sure there's no or it

206
00:08:55,920 --> 00:08:58,480
doesn't preclude that ability

207
00:08:58,480 --> 00:08:59,760
and then the third item that's not

208
00:08:59,760 --> 00:09:00,959
listed

209
00:09:00,959 --> 00:09:04,080
is that there was a liaison request

210
00:09:04,080 --> 00:09:06,720
from ieee

211
00:09:06,720 --> 00:09:09,360
on the key store draft

212
00:09:09,360 --> 00:09:12,240
and kind of related to the same point

213
00:09:12,240 --> 00:09:13,440
about um

214
00:09:13,440 --> 00:09:15,040
built-in keys

215
00:09:15,040 --> 00:09:17,519
and the copying them to

216
00:09:17,519 --> 00:09:18,640
running

217
00:09:18,640 --> 00:09:21,839
and they had some concerns for well

218
00:09:21,839 --> 00:09:23,680
you're not really supposed to be copying

219
00:09:23,680 --> 00:09:25,120
private keys

220
00:09:25,120 --> 00:09:27,519
to running and in fact the

221
00:09:27,519 --> 00:09:31,360
they claim ieee 802.1 ar

222
00:09:31,360 --> 00:09:33,279
spec

223
00:09:33,279 --> 00:09:35,440
says you're not allowed to do that

224
00:09:35,440 --> 00:09:36,480
and

225
00:09:36,480 --> 00:09:38,800
so i think actually this is just a

226
00:09:38,800 --> 00:09:40,240
misunderstanding

227
00:09:40,240 --> 00:09:41,200
because

228
00:09:41,200 --> 00:09:43,440
you know there's the actual

229
00:09:43,440 --> 00:09:44,720
key data

230
00:09:44,720 --> 00:09:47,279
and then there's sort of the yang node

231
00:09:47,279 --> 00:09:49,839
that is the parent node of the key data

232
00:09:49,839 --> 00:09:51,200
it's really just the yang node that

233
00:09:51,200 --> 00:09:53,200
needs to be copied into running i don't

234
00:09:53,200 --> 00:09:55,920
think that subtlety was uh clear enough

235
00:09:55,920 --> 00:09:57,519
to them and we just need to follow up

236
00:09:57,519 --> 00:10:00,480
with that liaison request and i think

237
00:10:00,480 --> 00:10:02,880
rob was going to

238
00:10:02,880 --> 00:10:05,040
suggest having a meeting of some sort

239
00:10:05,040 --> 00:10:06,880
go ahead rob

240
00:10:06,880 --> 00:10:09,440
uh yes so i've had a a bit of an

241
00:10:09,440 --> 00:10:10,880
exchange with

242
00:10:10,880 --> 00:10:13,279
glenn parsons the attitude at one

243
00:10:13,279 --> 00:10:15,600
um working chair uh and i think we'll

244
00:10:15,600 --> 00:10:18,240
set up a meeting between you and the

245
00:10:18,240 --> 00:10:20,560
person raising this issue

246
00:10:20,560 --> 00:10:22,320
myself and glenn and see if we can

247
00:10:22,320 --> 00:10:24,320
informally work out the right solution

248
00:10:24,320 --> 00:10:26,640
and then also determine whether any sort

249
00:10:26,640 --> 00:10:29,519
of liaison back to is required or not so

250
00:10:29,519 --> 00:10:30,880
the next step is for me to set up that

251
00:10:30,880 --> 00:10:33,200
meeting

252
00:10:33,200 --> 00:10:35,200
perfect and that's it for me

253
00:10:35,200 --> 00:10:37,519
thanks

254
00:10:40,480 --> 00:10:42,720
the agenda for today

255
00:10:42,720 --> 00:10:44,959
consists of one chartered item and

256
00:10:44,959 --> 00:10:47,839
that's the udp based transport

257
00:10:47,839 --> 00:10:51,200
a configured subscription

258
00:10:51,680 --> 00:10:54,240
on the non-chartered item list we have

259
00:10:54,240 --> 00:10:55,920
three drafts

260
00:10:55,920 --> 00:10:57,279
um

261
00:10:57,279 --> 00:11:00,240
thereafter subscription i think that's

262
00:11:00,240 --> 00:11:01,839
has been presented before but i guess

263
00:11:01,839 --> 00:11:04,000
we'll see an update

264
00:11:04,000 --> 00:11:05,519
um we have seen quite a bit of

265
00:11:05,519 --> 00:11:08,079
discussion on the transaction id so ian

266
00:11:08,079 --> 00:11:10,000
is coming back

267
00:11:10,000 --> 00:11:12,399
having updated the draft

268
00:11:12,399 --> 00:11:14,560
and i believe uh the list pagination

269
00:11:14,560 --> 00:11:16,480
draft has also been

270
00:11:16,480 --> 00:11:19,120
presented before

271
00:11:19,120 --> 00:11:22,000
all right that's as far as the

272
00:11:22,000 --> 00:11:24,720
chair slides are concerned any comments

273
00:11:24,720 --> 00:11:27,360
or questions before we jump into the

274
00:11:27,360 --> 00:11:29,839
agenda

275
00:11:37,839 --> 00:11:39,680
all right yeah this can't i have a

276
00:11:39,680 --> 00:11:41,040
comment

277
00:11:41,040 --> 00:11:44,079
which is just basically uh to all

278
00:11:44,079 --> 00:11:48,000
authors um to please try to be proactive

279
00:11:48,000 --> 00:11:48,880
about

280
00:11:48,880 --> 00:11:51,519
bringing discussions to the mailing list

281
00:11:51,519 --> 00:11:53,440
um you know

282
00:11:53,440 --> 00:11:55,279
you know any issues that you're working

283
00:11:55,279 --> 00:11:58,320
through um internally

284
00:11:58,320 --> 00:11:59,279
you know

285
00:11:59,279 --> 00:12:00,880
ask the working

286
00:12:00,880 --> 00:12:03,200
group for their opinion as well

287
00:12:03,200 --> 00:12:05,440
it's that's the ietf process and how we

288
00:12:05,440 --> 00:12:06,240
do

289
00:12:06,240 --> 00:12:07,680
consensus

290
00:12:07,680 --> 00:12:11,839
documents so thank you

291
00:12:14,560 --> 00:12:17,440
all right so we have

292
00:12:17,440 --> 00:12:18,399
um

293
00:12:18,399 --> 00:12:20,480
the first draft which is the udp note of

294
00:12:20,480 --> 00:12:22,160
trap

295
00:12:22,160 --> 00:12:25,200
and i believe who's presenting it by the

296
00:12:25,200 --> 00:12:28,160
way okay alex is okay

297
00:12:28,160 --> 00:12:31,519
will we grant you the permission

298
00:12:31,519 --> 00:12:34,920
can go ahead

299
00:12:39,680 --> 00:12:42,560
um so hello to everyone

300
00:12:42,560 --> 00:12:45,680
this is alex presenting a short update

301
00:12:45,680 --> 00:12:49,200
on the last udp native

302
00:12:49,200 --> 00:12:50,639
dash o for

303
00:12:50,639 --> 00:12:53,639
draft

304
00:12:55,680 --> 00:12:59,040
so on the agenda today i'm gonna present

305
00:12:59,040 --> 00:13:01,200
the different

306
00:13:01,200 --> 00:13:02,800
changes with it

307
00:13:02,800 --> 00:13:05,279
between the dash of three and the show

308
00:13:05,279 --> 00:13:07,440
for draft

309
00:13:07,440 --> 00:13:09,920
the received comments

310
00:13:09,920 --> 00:13:13,360
we received so far on the mailing list

311
00:13:13,360 --> 00:13:16,720
and finally start a discussion if this

312
00:13:16,720 --> 00:13:21,279
draft is stable enough to be last cold

313
00:13:22,959 --> 00:13:24,000
so

314
00:13:24,000 --> 00:13:29,200
the changes we did on this draft

315
00:13:29,200 --> 00:13:31,680
the first one is

316
00:13:31,680 --> 00:13:34,720
regarding the encoding types

317
00:13:34,720 --> 00:13:38,560
we reserved the zero value as requested

318
00:13:38,560 --> 00:13:39,920
on the mailing list

319
00:13:39,920 --> 00:13:42,639
and move sieber to the bottom

320
00:13:42,639 --> 00:13:44,560
to comply with the existing

321
00:13:44,560 --> 00:13:46,160
implementations

322
00:13:46,160 --> 00:13:49,839
of json udp notif

323
00:13:50,880 --> 00:13:53,839
the second one is

324
00:13:53,839 --> 00:13:58,160
regarding the tls on the last etf

325
00:13:58,160 --> 00:13:59,120
we

326
00:13:59,120 --> 00:14:00,639
submitted

327
00:14:00,639 --> 00:14:04,959
at the last moment a dtls version of

328
00:14:04,959 --> 00:14:07,519
utp native

329
00:14:07,519 --> 00:14:09,519
we were asked

330
00:14:09,519 --> 00:14:12,399
on the mailing list that both drafts

331
00:14:12,399 --> 00:14:16,480
should be merged so we did that uh on

332
00:14:16,480 --> 00:14:18,399
this draft um

333
00:14:18,399 --> 00:14:23,199
there was uh just explained uh on that

334
00:14:23,199 --> 00:14:27,360
there were we we have to use dtls 1.3 to

335
00:14:27,360 --> 00:14:30,720
secure the utb notif message we explain

336
00:14:30,720 --> 00:14:33,839
the life cycle of this usage and then

337
00:14:33,839 --> 00:14:36,399
that the udp notif message should be

338
00:14:36,399 --> 00:14:39,040
sent as application data of the dtls

339
00:14:39,040 --> 00:14:41,360
layer

340
00:14:41,519 --> 00:14:42,959
we added

341
00:14:42,959 --> 00:14:46,399
just this draft as a new section of utp

342
00:14:46,399 --> 00:14:48,800
notif

343
00:14:49,040 --> 00:14:50,399
and then

344
00:14:50,399 --> 00:14:54,560
finally on the ayana section we demanded

345
00:14:54,560 --> 00:14:57,120
the creation of two pull requests

346
00:14:57,120 --> 00:14:59,519
one for the encoding types and another

347
00:14:59,519 --> 00:15:00,720
one for the

348
00:15:00,720 --> 00:15:03,519
option types

349
00:15:04,720 --> 00:15:08,880
so that's just changes so far

350
00:15:09,920 --> 00:15:11,600
the comments

351
00:15:11,600 --> 00:15:13,120
so thank you

352
00:15:13,120 --> 00:15:17,519
andy biermann for your feedback

353
00:15:18,079 --> 00:15:20,880
we were requested to add

354
00:15:20,880 --> 00:15:22,880
the reference

355
00:15:22,880 --> 00:15:25,920
of the rfcs of the encoding types this

356
00:15:25,920 --> 00:15:28,160
one cbor and xml

357
00:15:28,160 --> 00:15:29,920
so we will do that

358
00:15:29,920 --> 00:15:32,240
there is still a discussion about which

359
00:15:32,240 --> 00:15:36,000
where version should be used

360
00:15:36,000 --> 00:15:37,680
of sibor

361
00:15:37,680 --> 00:15:41,759
the rfc one or the draft one

362
00:15:41,759 --> 00:15:42,720
and

363
00:15:42,720 --> 00:15:45,440
this morning i guess i

364
00:15:45,440 --> 00:15:48,079
i received also a

365
00:15:48,079 --> 00:15:51,440
feedback from maish so thank you

366
00:15:51,440 --> 00:15:54,399
and yes we will address

367
00:15:54,399 --> 00:15:58,880
this this feedback soon as possible

368
00:16:02,320 --> 00:16:04,880
and then

369
00:16:05,440 --> 00:16:06,720
for

370
00:16:06,720 --> 00:16:10,000
from our side we consider that that our

371
00:16:10,000 --> 00:16:13,040
draft is uh begin to start

372
00:16:13,040 --> 00:16:16,720
we begin to be uh stable enough um

373
00:16:16,720 --> 00:16:18,079
so

374
00:16:18,079 --> 00:16:21,199
maybe uh we it should be sooner less

375
00:16:21,199 --> 00:16:23,279
called but

376
00:16:23,279 --> 00:16:26,399
we let the work working group chairs

377
00:16:26,399 --> 00:16:29,120
decide that

378
00:16:31,759 --> 00:16:32,800
um

379
00:16:32,800 --> 00:16:34,160
yeah go ahead

380
00:16:34,160 --> 00:16:36,399
rope

381
00:16:36,399 --> 00:16:40,079
um so so one sort of question of concern

382
00:16:40,079 --> 00:16:41,680
so i um

383
00:16:41,680 --> 00:16:43,440
i raised this draft or what has been

384
00:16:43,440 --> 00:16:45,680
done with the security ids today i

385
00:16:45,680 --> 00:16:47,440
should have asked them previously

386
00:16:47,440 --> 00:16:51,040
they have some concern about standards

387
00:16:51,040 --> 00:16:52,720
track document

388
00:16:52,720 --> 00:16:53,600
um

389
00:16:53,600 --> 00:16:55,959
basically sending data over an

390
00:16:55,959 --> 00:16:58,000
unencrypted channel

391
00:16:58,000 --> 00:16:59,120
so

392
00:16:59,120 --> 00:17:00,000
um

393
00:17:00,000 --> 00:17:01,600
so something that

394
00:17:01,600 --> 00:17:03,279
that we need to work out whether they

395
00:17:03,279 --> 00:17:04,880
will allow standards track document to

396
00:17:04,880 --> 00:17:06,400
do that and the information document

397
00:17:06,400 --> 00:17:08,959
would be okay but the concern is is it

398
00:17:08,959 --> 00:17:11,039
over is ever it being a standard track

399
00:17:11,039 --> 00:17:12,880
document so that's something that we

400
00:17:12,880 --> 00:17:14,720
need to resolve

401
00:17:14,720 --> 00:17:16,959
um we could potentially try getting a

402
00:17:16,959 --> 00:17:17,679
sec

403
00:17:17,679 --> 00:17:19,359
dir review

404
00:17:19,359 --> 00:17:21,199
or the other choice might be to see if

405
00:17:21,199 --> 00:17:23,599
we can catch one of the security ids in

406
00:17:23,599 --> 00:17:26,079
gather dot town this week uh just chat

407
00:17:26,079 --> 00:17:27,599
over this but i think that's an issue

408
00:17:27,599 --> 00:17:28,799
that

409
00:17:28,799 --> 00:17:30,640
ideally we resolve that in a working

410
00:17:30,640 --> 00:17:31,520
group

411
00:17:31,520 --> 00:17:32,799
um

412
00:17:32,799 --> 00:17:34,960
before last call if we could and the

413
00:17:34,960 --> 00:17:36,480
other one to be aware of i know some

414
00:17:36,480 --> 00:17:37,919
text about this in the document is at

415
00:17:37,919 --> 00:17:38,960
the same time asked that question i got

416
00:17:38,960 --> 00:17:40,799
some feedback again we need to check

417
00:17:40,799 --> 00:17:43,200
that we cover the sort of transport

418
00:17:43,200 --> 00:17:45,520
requirements

419
00:17:45,520 --> 00:17:47,120
in terms of

420
00:17:47,120 --> 00:17:48,320
handling congestion things like that i

421
00:17:48,320 --> 00:17:49,280
know there's some text into that

422
00:17:49,280 --> 00:17:51,200
document but we just need to make sure

423
00:17:51,200 --> 00:17:53,120
that we're quite careful that that's

424
00:17:53,120 --> 00:17:55,520
covered as well

425
00:17:55,520 --> 00:17:58,520
okay

426
00:18:00,320 --> 00:18:02,160
so rob uh just to that point yeah i

427
00:18:02,160 --> 00:18:04,799
think um syncing up with this

428
00:18:04,799 --> 00:18:07,520
or ad would be great

429
00:18:07,520 --> 00:18:08,559
um

430
00:18:08,559 --> 00:18:12,000
i do actually have some empathy for uh

431
00:18:12,000 --> 00:18:16,400
wanting to support native udp

432
00:18:16,400 --> 00:18:17,760
because

433
00:18:17,760 --> 00:18:19,440
i think the use case scenario is

434
00:18:19,440 --> 00:18:21,520
actually for a

435
00:18:21,520 --> 00:18:22,960
private network

436
00:18:22,960 --> 00:18:25,120
consolidator it could be

437
00:18:25,120 --> 00:18:27,760
inside like literally in the same rack

438
00:18:27,760 --> 00:18:30,320
as where the uh

439
00:18:30,320 --> 00:18:33,520
log generator is located and um for you

440
00:18:33,520 --> 00:18:35,280
know so you don't want the overhead of

441
00:18:35,280 --> 00:18:36,640
cryptography

442
00:18:36,640 --> 00:18:39,760
but um you know i think so that's that

443
00:18:39,760 --> 00:18:41,760
and then also

444
00:18:41,760 --> 00:18:43,120
notably that

445
00:18:43,120 --> 00:18:44,720
we're not actually defining the protocol

446
00:18:44,720 --> 00:18:46,320
we're just simply configuring or

447
00:18:46,320 --> 00:18:47,440
enabling

448
00:18:47,440 --> 00:18:49,360
said existing protocols to be configured

449
00:18:49,360 --> 00:18:50,320
so these are things that can be

450
00:18:50,320 --> 00:18:55,159
discussed with the sector or app

451
00:18:56,080 --> 00:18:58,320
okay

452
00:18:58,320 --> 00:19:00,000
and then just just one other comment

453
00:19:00,000 --> 00:19:02,000
actually is if there's anyone can join

454
00:19:02,000 --> 00:19:02,799
the

455
00:19:02,799 --> 00:19:04,880
um the note taking that would be really

456
00:19:04,880 --> 00:19:07,200
appreciated so

457
00:19:07,200 --> 00:19:08,640
if people could also help contribute to

458
00:19:08,640 --> 00:19:11,840
the notes that would be helpful

459
00:19:16,720 --> 00:19:19,360
go ahead bear

460
00:19:19,840 --> 00:19:21,360
yes thank you

461
00:19:21,360 --> 00:19:23,280
regarding the security support are you

462
00:19:23,280 --> 00:19:24,559
saying that

463
00:19:24,559 --> 00:19:27,120
now that the dtls section is in

464
00:19:27,120 --> 00:19:28,080
so

465
00:19:28,080 --> 00:19:32,400
sending uh udp messages encrypt

466
00:19:32,400 --> 00:19:33,600
in the clear

467
00:19:33,600 --> 00:19:35,840
is an option but

468
00:19:35,840 --> 00:19:37,600
the rfc would

469
00:19:37,600 --> 00:19:40,480
is defining dtls report as well so

470
00:19:40,480 --> 00:19:43,919
is this not good enough and also with

471
00:19:43,919 --> 00:19:46,720
respect joining i think kent on this

472
00:19:46,720 --> 00:19:48,640
with respect to

473
00:19:48,640 --> 00:19:50,080
the deployment

474
00:19:50,080 --> 00:19:52,160
considerations that we have and if we

475
00:19:52,160 --> 00:19:55,360
review the rfc on udp applications

476
00:19:55,360 --> 00:19:56,320
we are

477
00:19:56,320 --> 00:19:58,400
clearly in the field where i mean

478
00:19:58,400 --> 00:20:00,640
sending messages in the clear would be

479
00:20:00,640 --> 00:20:02,240
should be tolerable

480
00:20:02,240 --> 00:20:04,159
do you think that there will be an issue

481
00:20:04,159 --> 00:20:06,080
with that type of positioning of the

482
00:20:06,080 --> 00:20:08,320
draft with respect to security

483
00:20:08,320 --> 00:20:09,840
considerations

484
00:20:09,840 --> 00:20:12,720
or don't you think personally that

485
00:20:12,720 --> 00:20:14,640
this is good enough

486
00:20:14,640 --> 00:20:17,360
um so so to answer that question is the

487
00:20:17,360 --> 00:20:19,520
answer is i i don't know because it's

488
00:20:19,520 --> 00:20:21,200
not it's not my decision as such i

489
00:20:21,200 --> 00:20:23,600
certainly have sympathy with the

490
00:20:23,600 --> 00:20:24,880
uh the way that both you and ken

491
00:20:24,880 --> 00:20:26,720
characterize this that that the network

492
00:20:26,720 --> 00:20:28,480
is meant to be secure in that regards

493
00:20:28,480 --> 00:20:30,400
and management network and hence that

494
00:20:30,400 --> 00:20:32,559
should that should be sufficient i don't

495
00:20:32,559 --> 00:20:34,960
know whether that would be good enough

496
00:20:34,960 --> 00:20:37,039
for the security ids or not it really

497
00:20:37,039 --> 00:20:38,400
needs to be

498
00:20:38,400 --> 00:20:39,520
um

499
00:20:39,520 --> 00:20:41,039
or in the security area i think it's

500
00:20:41,039 --> 00:20:42,480
probably better at putting it we need to

501
00:20:42,480 --> 00:20:44,000
actually check with them

502
00:20:44,000 --> 00:20:45,280
and have a conversation with them and

503
00:20:45,280 --> 00:20:47,440
they may we put sufficient mitigate

504
00:20:47,440 --> 00:20:49,360
mitigations in that may be good enough i

505
00:20:49,360 --> 00:20:51,679
don't know uh but it may be there they

506
00:20:51,679 --> 00:20:53,600
just say no they don't regard the

507
00:20:53,600 --> 00:20:56,880
overhead of encrypting this is

508
00:20:56,880 --> 00:20:59,280
um is high enough to justify not always

509
00:20:59,280 --> 00:21:00,720
encrypting it but i don't i don't know

510
00:21:00,720 --> 00:21:03,760
how to ask them okay

511
00:21:03,760 --> 00:21:05,200
there are a lot of protocols where we

512
00:21:05,200 --> 00:21:06,559
will we would need to redo that

513
00:21:06,559 --> 00:21:08,799
discussion then but okay okay

514
00:21:08,799 --> 00:21:10,720
with respect to congestion i think it's

515
00:21:10,720 --> 00:21:12,799
covered in the draft so on your comment

516
00:21:12,799 --> 00:21:14,480
with respect to use of udp and

517
00:21:14,480 --> 00:21:16,400
congestion in the network

518
00:21:16,400 --> 00:21:18,960
uh when we discuss the applicability and

519
00:21:18,960 --> 00:21:20,320
the consoles that you have when you're

520
00:21:20,320 --> 00:21:23,039
designing a udp application i think it's

521
00:21:23,039 --> 00:21:25,280
covered but uh i mean we can have this

522
00:21:25,280 --> 00:21:26,960
discussion offline if

523
00:21:26,960 --> 00:21:29,440
you want if it's not good enough we can

524
00:21:29,440 --> 00:21:32,320
work on this on this description more

525
00:21:32,320 --> 00:21:34,559
thanks

526
00:21:35,039 --> 00:21:37,520
all right so i had actually uh one

527
00:21:37,520 --> 00:21:39,440
comment and one question or i'm trying

528
00:21:39,440 --> 00:21:41,360
to answer one of the questions i think

529
00:21:41,360 --> 00:21:43,440
that was asked on the mailing list i

530
00:21:43,440 --> 00:21:46,640
believe that the draft talks about

531
00:21:46,640 --> 00:21:48,799
you know a transmission timer not a

532
00:21:48,799 --> 00:21:50,720
retransmission time but a transmission

533
00:21:50,720 --> 00:21:53,280
timeout value to be said

534
00:21:53,280 --> 00:21:56,320
at which point um

535
00:21:56,320 --> 00:21:59,600
you know there's no attempt to try to

536
00:21:59,600 --> 00:22:00,880
but

537
00:22:00,880 --> 00:22:03,440
there's no um

538
00:22:03,440 --> 00:22:06,400
configuration in the yang model for

539
00:22:06,400 --> 00:22:08,000
actually configuring the transmission

540
00:22:08,000 --> 00:22:10,640
timeout so i don't know if the intention

541
00:22:10,640 --> 00:22:13,039
is to keep that timer or not keep that

542
00:22:13,039 --> 00:22:15,520
diamond

543
00:22:16,480 --> 00:22:18,000
so that is one of the

544
00:22:18,000 --> 00:22:20,320
questions

545
00:22:20,320 --> 00:22:22,720
um the other is that

546
00:22:22,720 --> 00:22:24,840
is there

547
00:22:24,840 --> 00:22:28,720
a request for a one loan udp

548
00:22:28,720 --> 00:22:29,919
port

549
00:22:29,919 --> 00:22:32,240
in the draft because i i don't remember

550
00:22:32,240 --> 00:22:34,000
seeing it in there in a section maybe i

551
00:22:34,000 --> 00:22:36,480
missed it

552
00:22:37,840 --> 00:22:38,840
right

553
00:22:38,840 --> 00:22:41,440
there yeah so with respect to the

554
00:22:41,440 --> 00:22:42,640
timeout

555
00:22:42,640 --> 00:22:44,159
i'm scratching my head a bit but it

556
00:22:44,159 --> 00:22:46,559
might be for the retention time when you

557
00:22:46,559 --> 00:22:48,320
use segmentation

558
00:22:48,320 --> 00:22:50,080
oh yeah maybe

559
00:22:50,080 --> 00:22:51,919
we may want okay okay if it's that then

560
00:22:51,919 --> 00:22:54,400
yeah we may want to have it configured

561
00:22:54,400 --> 00:22:56,480
i'm not sure people are going to care

562
00:22:56,480 --> 00:22:58,400
much changing this with respect to the

563
00:22:58,400 --> 00:23:00,799
default value that would be provided by

564
00:23:00,799 --> 00:23:02,240
vendors

565
00:23:02,240 --> 00:23:02,650
um

566
00:23:02,650 --> 00:23:04,720
[Music]

567
00:23:04,720 --> 00:23:06,720
yeah and

568
00:23:06,720 --> 00:23:08,400
sorry i forgot your last question your

569
00:23:08,400 --> 00:23:10,000
second question what was it you just

570
00:23:10,000 --> 00:23:11,840
didn't even know that was the

571
00:23:11,840 --> 00:23:15,120
well-known udp port oh yeah this

572
00:23:15,120 --> 00:23:16,799
i think it was there in the past and we

573
00:23:16,799 --> 00:23:18,799
removed it because no one cares

574
00:23:18,799 --> 00:23:19,760
so

575
00:23:19,760 --> 00:23:22,799
we decided to not i mean to let this go

576
00:23:22,799 --> 00:23:24,960
through configuration and that would be

577
00:23:24,960 --> 00:23:27,039
it anyway

578
00:23:27,039 --> 00:23:30,640
okay and also it does not make too much

579
00:23:30,640 --> 00:23:33,280
sense because you are going to you know

580
00:23:33,280 --> 00:23:35,360
open multiple ports on the collection

581
00:23:35,360 --> 00:23:38,000
side maybe on on the same machine but on

582
00:23:38,000 --> 00:23:39,679
different ports to do some load sharing

583
00:23:39,679 --> 00:23:41,120
exterior so you're going to end up

584
00:23:41,120 --> 00:23:43,039
configuring it and changing this anyway

585
00:23:43,039 --> 00:23:45,840
so having a single default value does

586
00:23:45,840 --> 00:23:47,600
not make too much sense when we look at

587
00:23:47,600 --> 00:23:49,760
the big picture of the deployment so in

588
00:23:49,760 --> 00:23:52,000
my opinion it's not really needed and no

589
00:23:52,000 --> 00:23:53,919
one was carrying so i think we removed

590
00:23:53,919 --> 00:23:55,360
it

591
00:23:55,360 --> 00:23:57,678
okay

592
00:23:58,720 --> 00:24:01,039
okay thank you uh we need to we're just

593
00:24:01,039 --> 00:24:02,320
a little bit over we should move on to

594
00:24:02,320 --> 00:24:06,158
the next presentation all right okay

595
00:24:12,640 --> 00:24:13,020
and

596
00:24:13,020 --> 00:24:15,440
[Music]

597
00:24:15,440 --> 00:24:19,200
excellent i saw kefang

598
00:24:24,799 --> 00:24:26,080
yes

599
00:24:26,080 --> 00:24:30,000
okay so on behalf of the authors uh

600
00:24:30,000 --> 00:24:32,880
i'm here to present the adaptive

601
00:24:32,880 --> 00:24:36,799
subscription to young notification draft

602
00:24:36,799 --> 00:24:39,679
i believe that this work has already

603
00:24:39,679 --> 00:24:41,679
been presented for

604
00:24:41,679 --> 00:24:44,799
several times an adaptive subscription

605
00:24:44,799 --> 00:24:45,679
can

606
00:24:45,679 --> 00:24:48,400
fit in the scenario with massive debt

607
00:24:48,400 --> 00:24:51,440
collection and processing with expensive

608
00:24:51,440 --> 00:24:53,440
data management cost

609
00:24:53,440 --> 00:24:56,159
usually the higher frequency debt

610
00:24:56,159 --> 00:24:58,400
collection leads to more resource

611
00:24:58,400 --> 00:24:59,679
consumption

612
00:24:59,679 --> 00:25:02,480
while low frequency data collection may

613
00:25:02,480 --> 00:25:05,600
lead to insufficient data for photo

614
00:25:05,600 --> 00:25:07,600
localization

615
00:25:07,600 --> 00:25:10,960
there is an example given in the draft

616
00:25:10,960 --> 00:25:13,360
in a wireless network

617
00:25:13,360 --> 00:25:16,240
performance monitoring case

618
00:25:16,240 --> 00:25:18,320
when the signal stress

619
00:25:18,320 --> 00:25:21,039
falls below or configure the threshold

620
00:25:21,039 --> 00:25:23,679
the notification can be streamed at a

621
00:25:23,679 --> 00:25:26,640
higher rate for trap shooting

622
00:25:26,640 --> 00:25:30,000
via the when the signal strength crosses

623
00:25:30,000 --> 00:25:33,360
that threshold the notification can be

624
00:25:33,360 --> 00:25:35,760
streamed at a lower rate

625
00:25:35,760 --> 00:25:38,320
so our proposal is to

626
00:25:38,320 --> 00:25:41,360
enable the client to configure an

627
00:25:41,360 --> 00:25:44,159
adaptive subscription of that policy

628
00:25:44,159 --> 00:25:46,799
which contains a condition and allows

629
00:25:46,799 --> 00:25:50,240
the server to switch to different period

630
00:25:50,240 --> 00:25:53,200
intervals based on the condition and the

631
00:25:53,200 --> 00:25:56,159
condition is expressed using a standard

632
00:25:56,159 --> 00:25:59,039
expat evaluation criteria

633
00:25:59,039 --> 00:26:02,880
but in last itf meeting there is one

634
00:26:02,880 --> 00:26:06,480
issue i i think is read it was read by

635
00:26:06,480 --> 00:26:08,840
rob which is about

636
00:26:08,840 --> 00:26:14,399
the arbitrary x-path complexity

637
00:26:14,720 --> 00:26:17,440
since the condition expression requires

638
00:26:17,440 --> 00:26:20,559
x-path evaluation this mind

639
00:26:20,559 --> 00:26:23,840
complexity yes but we all know that

640
00:26:23,840 --> 00:26:25,760
young push also needs to configure

641
00:26:25,760 --> 00:26:29,039
selection filter to identify a targeted

642
00:26:29,039 --> 00:26:30,640
node or subtree

643
00:26:30,640 --> 00:26:33,039
and it's it is a similar selection

644
00:26:33,039 --> 00:26:36,400
filter used by adaptive subscription

645
00:26:36,400 --> 00:26:39,120
and a new section was added in the

646
00:26:39,120 --> 00:26:42,159
update to discuss arbitrary expat

647
00:26:42,159 --> 00:26:43,600
complexity

648
00:26:43,600 --> 00:26:46,799
and and there are four points given as a

649
00:26:46,799 --> 00:26:49,279
reminder that although they have already

650
00:26:49,279 --> 00:26:52,640
been well supported by expats to serve

651
00:26:52,640 --> 00:26:55,440
the following design choices should be

652
00:26:55,440 --> 00:26:58,080
very careful to make and they may add

653
00:26:58,080 --> 00:27:01,600
extra complexity for implementation

654
00:27:01,600 --> 00:27:04,559
first is to support x-path evaluation

655
00:27:04,559 --> 00:27:07,760
criteria against every data

656
00:27:07,760 --> 00:27:09,279
that objects

657
00:27:09,279 --> 00:27:12,240
and the second is to support any

658
00:27:12,240 --> 00:27:15,440
data and any type of node set

659
00:27:15,440 --> 00:27:18,799
in the expat evaluation criteria

660
00:27:18,799 --> 00:27:20,399
the third is to

661
00:27:20,399 --> 00:27:23,520
support both objects to be compared in

662
00:27:23,520 --> 00:27:26,640
the x-pass evaluation criteria and note

663
00:27:26,640 --> 00:27:29,919
sets and the last one is both objects to

664
00:27:29,919 --> 00:27:34,399
be compared are in different data types

665
00:27:34,399 --> 00:27:35,600
and then

666
00:27:35,600 --> 00:27:39,600
also to try to reduce the complexities

667
00:27:39,600 --> 00:27:42,640
of this arbitrary express evaluation

668
00:27:42,640 --> 00:27:45,840
we give the following design principles

669
00:27:45,840 --> 00:27:47,440
recommendation

670
00:27:47,440 --> 00:27:48,399
first

671
00:27:48,399 --> 00:27:51,279
expat evaluation criteria against

672
00:27:51,279 --> 00:27:54,640
minimum set of debt objects in the data

673
00:27:54,640 --> 00:27:56,159
model

674
00:27:56,159 --> 00:27:58,880
and these minimum set of dead objects

675
00:27:58,880 --> 00:28:01,440
could be advertised using the

676
00:28:01,440 --> 00:28:05,279
notification capability model defined in

677
00:28:05,279 --> 00:28:07,039
ongoing work

678
00:28:07,039 --> 00:28:09,360
and second it should be

679
00:28:09,360 --> 00:28:12,399
integer best filter which represents

680
00:28:12,399 --> 00:28:14,799
signed and unsigned integers of

681
00:28:14,799 --> 00:28:16,480
different sizes

682
00:28:16,480 --> 00:28:19,120
and last one is about compared objects

683
00:28:19,120 --> 00:28:20,799
requirements

684
00:28:20,799 --> 00:28:23,360
we recommend that it should be an

685
00:28:23,360 --> 00:28:26,399
one-to-one numeric comparison if an

686
00:28:26,399 --> 00:28:29,279
object to be compared in the expat

687
00:28:29,279 --> 00:28:30,480
expression

688
00:28:30,480 --> 00:28:32,960
should be a leaf data node and the other

689
00:28:32,960 --> 00:28:36,159
object to be compared is expected to be

690
00:28:36,159 --> 00:28:38,159
an integer

691
00:28:38,159 --> 00:28:39,440
so under the

692
00:28:39,440 --> 00:28:41,760
result of the x path expression is

693
00:28:41,760 --> 00:28:45,520
converted to a boring value

694
00:28:45,520 --> 00:28:47,440
yeah

695
00:28:47,440 --> 00:28:50,480
so i i think this is the end of my

696
00:28:50,480 --> 00:28:53,039
presentation so let me just stop here

697
00:28:53,039 --> 00:28:56,000
and see if there's any other comments

698
00:28:56,000 --> 00:28:59,840
and questions about this

699
00:29:01,039 --> 00:29:03,840
yeah rob please go ahead

700
00:29:03,840 --> 00:29:06,320
uh thank you could you um go back a

701
00:29:06,320 --> 00:29:08,880
slide please so so thank you i saw that

702
00:29:08,880 --> 00:29:11,279
you'd sent me a summary of the text that

703
00:29:11,279 --> 00:29:13,279
you proposed on changing this and i i

704
00:29:13,279 --> 00:29:15,039
think that that's on the right tracks i

705
00:29:15,039 --> 00:29:16,559
had intended to send some comments back

706
00:29:16,559 --> 00:29:19,200
today i've run out of time um i think

707
00:29:19,200 --> 00:29:21,360
that the description about why it's

708
00:29:21,360 --> 00:29:23,200
complex i think that can be probably

709
00:29:23,200 --> 00:29:25,440
condensed down but in terms of your

710
00:29:25,440 --> 00:29:27,520
solution i think that seems reasonable

711
00:29:27,520 --> 00:29:29,200
as in i quite like the idea of being

712
00:29:29,200 --> 00:29:31,200
able to advertise the set of objects

713
00:29:31,200 --> 00:29:33,200
you're allowed to perform this on

714
00:29:33,200 --> 00:29:35,360
um through the capabilities draft i

715
00:29:35,360 --> 00:29:37,200
think restricting

716
00:29:37,200 --> 00:29:39,440
uh it to like interject integer based

717
00:29:39,440 --> 00:29:40,399
filtering

718
00:29:40,399 --> 00:29:42,799
and simplified uh comparison again i

719
00:29:42,799 --> 00:29:45,440
think that makes sense i don't i don't

720
00:29:45,440 --> 00:29:48,080
object to allowing implementations to

721
00:29:48,080 --> 00:29:50,080
support a more complex filter i think

722
00:29:50,080 --> 00:29:52,799
the key for me is that it would be good

723
00:29:52,799 --> 00:29:55,120
um if at least every implementation had

724
00:29:55,120 --> 00:29:55,919
to

725
00:29:55,919 --> 00:29:58,720
at least support these basic filters

726
00:29:58,720 --> 00:30:00,320
because those

727
00:30:00,320 --> 00:30:02,159
my concern is about

728
00:30:02,159 --> 00:30:04,799
running a generic xpath evaluation

729
00:30:04,799 --> 00:30:06,080
engine

730
00:30:06,080 --> 00:30:08,559
repeatedly that may be too expensive so

731
00:30:08,559 --> 00:30:10,480
so i think that that makes sense and

732
00:30:10,480 --> 00:30:12,399
then one other thing i would add is that

733
00:30:12,399 --> 00:30:13,840
it would be useful to have a

734
00:30:13,840 --> 00:30:15,440
well-defined

735
00:30:15,440 --> 00:30:18,559
error code or error to be returned on if

736
00:30:18,559 --> 00:30:20,880
you do allow more complex

737
00:30:20,880 --> 00:30:23,039
um

738
00:30:23,039 --> 00:30:25,440
uh queries so they have an error code to

739
00:30:25,440 --> 00:30:27,679
say uh when it's when the comparison put

740
00:30:27,679 --> 00:30:29,520
in to say no this is too complex i can't

741
00:30:29,520 --> 00:30:31,440
handle this

742
00:30:31,440 --> 00:30:34,320
yeah okay thank you yeah i think it

743
00:30:34,320 --> 00:30:36,559
makes sense yes

744
00:30:36,559 --> 00:30:38,799
okay

745
00:30:41,120 --> 00:30:44,000
all right i was on the other uh window

746
00:30:44,000 --> 00:30:45,600
typing notes

747
00:30:45,600 --> 00:30:48,720
and so the the concern for arbitrary

748
00:30:48,720 --> 00:30:50,480
complexity and xpath

749
00:30:50,480 --> 00:30:53,840
may also be appearing in the list

750
00:30:53,840 --> 00:30:55,840
pagination

751
00:30:55,840 --> 00:30:57,840
work that's going to be presented later

752
00:30:57,840 --> 00:30:58,720
in this

753
00:30:58,720 --> 00:31:00,159
session

754
00:31:00,159 --> 00:31:01,440
and there

755
00:31:01,440 --> 00:31:03,360
there's a concern for you know if you

756
00:31:03,360 --> 00:31:05,679
have these arbitrary expressions

757
00:31:05,679 --> 00:31:08,720
and you're mapping to a backend database

758
00:31:08,720 --> 00:31:11,200
uh how can you do that for you know some

759
00:31:11,200 --> 00:31:12,880
databases aren't that

760
00:31:12,880 --> 00:31:16,320
rich in their query language syntax

761
00:31:16,320 --> 00:31:17,519
and so

762
00:31:17,519 --> 00:31:19,120
uh i think it's one thing to say there

763
00:31:19,120 --> 00:31:21,039
needs to be a minimum set and then may

764
00:31:21,039 --> 00:31:23,519
there may be more complexity but how

765
00:31:23,519 --> 00:31:25,360
does the client know what extra

766
00:31:25,360 --> 00:31:28,559
complexity is supported by the server

767
00:31:28,559 --> 00:31:32,159
and so then we may need to have uh some

768
00:31:32,159 --> 00:31:34,880
ability to enumerate or or somehow

769
00:31:34,880 --> 00:31:38,080
otherwise enable the server to advertise

770
00:31:38,080 --> 00:31:40,720
what all the extra uh expressions that

771
00:31:40,720 --> 00:31:42,080
they're supporting

772
00:31:42,080 --> 00:31:45,519
and so i see that desire may be showing

773
00:31:45,519 --> 00:31:48,320
up here in this work and also in the

774
00:31:48,320 --> 00:31:51,439
list pagination work

775
00:31:52,799 --> 00:31:56,760
yeah okay thank you

776
00:32:03,440 --> 00:32:04,399
i guess

777
00:32:04,399 --> 00:32:06,399
we can move to the next deck

778
00:32:06,399 --> 00:32:08,480
yeah i think so and also uh while we're

779
00:32:08,480 --> 00:32:11,200
moving to the next deck uh in yon europe

780
00:32:11,200 --> 00:32:11,919
uh

781
00:32:11,919 --> 00:32:14,799
the previous presentation on the udp

782
00:32:14,799 --> 00:32:15,840
native

783
00:32:15,840 --> 00:32:18,240
alex was that you speaking or was it

784
00:32:18,240 --> 00:32:20,960
pierre speaking

785
00:32:23,039 --> 00:32:25,039
it was alex speaking during the draft

786
00:32:25,039 --> 00:32:27,039
and then i answered and it was

787
00:32:27,039 --> 00:32:29,200
answering the questions after

788
00:32:29,200 --> 00:32:32,399
okay great thank you

789
00:32:40,960 --> 00:32:43,200
go ahead jan thank you

790
00:32:43,200 --> 00:32:45,279
so this is the second presentation of

791
00:32:45,279 --> 00:32:47,440
this netcom transaction id work that

792
00:32:47,440 --> 00:32:50,320
started a year ago

793
00:32:50,320 --> 00:32:52,480
and basically it's about the mechanism

794
00:32:52,480 --> 00:32:54,559
that reduces traffic and work and

795
00:32:54,559 --> 00:32:56,640
decreases reliability

796
00:32:56,640 --> 00:32:59,039
when it comes to

797
00:32:59,039 --> 00:33:01,840
getting and editing configuration on the

798
00:33:01,840 --> 00:33:04,158
server

799
00:33:07,600 --> 00:33:10,640
so i presented the initial work at itf

800
00:33:10,640 --> 00:33:12,320
109 a year ago

801
00:33:12,320 --> 00:33:15,039
and since then

802
00:33:15,039 --> 00:33:16,559
i've made some

803
00:33:16,559 --> 00:33:18,320
investigations of how much impact this

804
00:33:18,320 --> 00:33:19,919
would have in the sort of real world

805
00:33:19,919 --> 00:33:23,120
network and we've made some changes

806
00:33:23,120 --> 00:33:26,559
going from double o to zero one

807
00:33:26,559 --> 00:33:28,960
and uh just to recapitulate very quickly

808
00:33:28,960 --> 00:33:29,760
uh

809
00:33:29,760 --> 00:33:31,679
i took a

810
00:33:31,679 --> 00:33:33,440
real world application but running in

811
00:33:33,440 --> 00:33:35,120
the lab so it was not actually a real

812
00:33:35,120 --> 00:33:37,039
world in the true sense of an operator

813
00:33:37,039 --> 00:33:38,799
running something but it was running in

814
00:33:38,799 --> 00:33:40,720
a lab and it's a real world application

815
00:33:40,720 --> 00:33:43,120
and analyze the traffic in that

816
00:33:43,120 --> 00:33:45,600
situation with this application running

817
00:33:45,600 --> 00:33:47,039
and one

818
00:33:47,039 --> 00:33:48,159
um

819
00:33:48,159 --> 00:33:49,519
i browse

820
00:33:49,519 --> 00:33:52,080
eyebrow razer that a lot of people

821
00:33:52,080 --> 00:33:53,840
reacted to was that 91 percent of the

822
00:33:53,840 --> 00:33:55,840
traffic was actually in young 1-0 hello

823
00:33:55,840 --> 00:33:57,519
messages

824
00:33:57,519 --> 00:33:59,840
um so that's something for

825
00:33:59,840 --> 00:34:01,519
for implementers to watch out for to

826
00:34:01,519 --> 00:34:04,000
move to yang 1.1 to get rid of that

827
00:34:04,000 --> 00:34:05,279
but

828
00:34:05,279 --> 00:34:06,799
simulating or

829
00:34:06,799 --> 00:34:08,800
calculating what sort of savings would

830
00:34:08,800 --> 00:34:10,719
have with this draft

831
00:34:10,719 --> 00:34:13,599
uh i could see that we went we would go

832
00:34:13,599 --> 00:34:16,800
down from 569 to 378 round trips for

833
00:34:16,800 --> 00:34:18,320
this particular application running for

834
00:34:18,320 --> 00:34:19,599
three hours

835
00:34:19,599 --> 00:34:20,960
and

836
00:34:20,960 --> 00:34:22,239
almost half

837
00:34:22,239 --> 00:34:24,079
the amount of configuration data being

838
00:34:24,079 --> 00:34:25,839
exchanged

839
00:34:25,839 --> 00:34:27,760
uh so i think there is some value to

840
00:34:27,760 --> 00:34:29,359
this but actually the real value that i

841
00:34:29,359 --> 00:34:31,119
see in this work is not so much to

842
00:34:31,119 --> 00:34:32,960
reduce strong trips or number of bytes

843
00:34:32,960 --> 00:34:34,960
being sent between client and server but

844
00:34:34,960 --> 00:34:37,679
it is the reliability that a

845
00:34:37,679 --> 00:34:39,760
set of clients can work reliably towards

846
00:34:39,760 --> 00:34:41,760
a set of servers and not clobber each

847
00:34:41,760 --> 00:34:43,199
other

848
00:34:43,199 --> 00:34:44,960
so that's really the the main point here

849
00:34:44,960 --> 00:34:47,599
and the reduced traffic is a kind of

850
00:34:47,599 --> 00:34:49,679
nice bonus

851
00:34:49,679 --> 00:34:50,639
so what

852
00:34:50,639 --> 00:34:53,760
i did from double o to zero one uh okay

853
00:34:53,760 --> 00:34:55,918
i clarified things based on feedback on

854
00:34:55,918 --> 00:34:57,440
the list

855
00:34:57,440 --> 00:35:00,000
i separated out the e-tag specifics into

856
00:35:00,000 --> 00:35:02,079
so it's very clearly in some parts and

857
00:35:02,079 --> 00:35:04,160
non-e tag the general mechanism is

858
00:35:04,160 --> 00:35:06,160
described in separate parts

859
00:35:06,160 --> 00:35:08,240
i changed a few names based on feedback

860
00:35:08,240 --> 00:35:10,800
from from the list

861
00:35:10,800 --> 00:35:13,359
there was a slight harmonization between

862
00:35:13,359 --> 00:35:16,880
the mechanisms that we had with names of

863
00:35:16,880 --> 00:35:20,800
transaction ids with rfc 7232 and 8040

864
00:35:20,800 --> 00:35:22,480
there was almost the same before but now

865
00:35:22,480 --> 00:35:26,000
it's it's more exactly the same

866
00:35:26,240 --> 00:35:28,480
there was a lot of discussion between

867
00:35:28,480 --> 00:35:30,960
when it comes to who should set

868
00:35:30,960 --> 00:35:33,680
transaction ids should transaction ids

869
00:35:33,680 --> 00:35:35,280
be set by the server

870
00:35:35,280 --> 00:35:38,160
or could they also be set by the client

871
00:35:38,160 --> 00:35:39,760
and since there was so much controversy

872
00:35:39,760 --> 00:35:42,079
about that i completely removed the

873
00:35:42,079 --> 00:35:45,200
option for clients to set it i still

874
00:35:45,200 --> 00:35:46,560
think that's a good idea and i'll make a

875
00:35:46,560 --> 00:35:50,000
case for that in a few minutes

876
00:35:50,000 --> 00:35:51,599
uh

877
00:35:51,599 --> 00:35:53,440
because i removed that i had to add some

878
00:35:53,440 --> 00:35:55,200
other i had to adjust the mechanism a

879
00:35:55,200 --> 00:35:58,759
little bit so that's

880
00:35:58,880 --> 00:36:00,240
transaction that this could be returned

881
00:36:00,240 --> 00:36:02,960
in a different way

882
00:36:02,960 --> 00:36:03,760
so

883
00:36:03,760 --> 00:36:07,320
moving on here

884
00:36:20,800 --> 00:36:24,040
this point

885
00:36:31,440 --> 00:36:34,880
okay i'm gonna try to

886
00:36:35,200 --> 00:36:38,598
text him

887
00:37:02,800 --> 00:37:04,400
okay so

888
00:37:04,400 --> 00:37:06,240
i think he's going to try to adjust and

889
00:37:06,240 --> 00:37:09,479
come back

890
00:37:12,560 --> 00:37:14,320
can you hear me now

891
00:37:14,320 --> 00:37:15,599
yes

892
00:37:15,599 --> 00:37:17,119
okay i don't know what happened there

893
00:37:17,119 --> 00:37:19,440
and

894
00:37:19,839 --> 00:37:21,520
i just closed and opened the mic again

895
00:37:21,520 --> 00:37:24,560
so how far did you hear

896
00:37:24,800 --> 00:37:27,280
uh i think you just started on this

897
00:37:27,280 --> 00:37:29,200
particular slide all right very good

898
00:37:29,200 --> 00:37:30,320
thanks

899
00:37:30,320 --> 00:37:31,760
so uh

900
00:37:31,760 --> 00:37:34,079
here are the open questions and

901
00:37:34,079 --> 00:37:36,079
i'll quickly go through each one of them

902
00:37:36,079 --> 00:37:38,640
and explain uh what we have chosen to

903
00:37:38,640 --> 00:37:40,880
imp to write in the draft

904
00:37:40,880 --> 00:37:42,480
these are all the alternatives that were

905
00:37:42,480 --> 00:37:44,640
raised on the list

906
00:37:44,640 --> 00:37:47,119
so for the e-tags

907
00:37:47,119 --> 00:37:49,200
we have now adjusted the e-tag

908
00:37:49,200 --> 00:37:51,680
assignments the transaction id values to

909
00:37:51,680 --> 00:37:54,160
match exactly what it says in in rest

910
00:37:54,160 --> 00:37:55,560
cons and

911
00:37:55,560 --> 00:37:57,119
72-32

912
00:37:57,119 --> 00:37:58,640
it was almost the same before but now

913
00:37:58,640 --> 00:38:00,560
it's more exactly but other alternatives

914
00:38:00,560 --> 00:38:02,560
were also suggested

915
00:38:02,560 --> 00:38:04,880
but that's what the draft says now

916
00:38:04,880 --> 00:38:06,800
and there's no particular text in the

917
00:38:06,800 --> 00:38:08,800
draft when it comes to how you format

918
00:38:08,800 --> 00:38:11,040
these strings it's left as a sort of

919
00:38:11,040 --> 00:38:13,599
open-ended string there are some rules

920
00:38:13,599 --> 00:38:16,960
as according to 8040.

921
00:38:16,960 --> 00:38:19,440
there is no support for time stamps

922
00:38:19,440 --> 00:38:21,119
that's a mechanism that exists in red

923
00:38:21,119 --> 00:38:22,880
just confident have transaction ids

924
00:38:22,880 --> 00:38:24,720
there you can use

925
00:38:24,720 --> 00:38:27,119
timestamps but for a number of reasons

926
00:38:27,119 --> 00:38:30,160
uh that i will not go into today i

927
00:38:30,160 --> 00:38:33,359
i skip that and only this transaction ie

928
00:38:33,359 --> 00:38:35,760
tag style transaction ids are supported

929
00:38:35,760 --> 00:38:38,400
in this draft

930
00:38:39,119 --> 00:38:40,160
uh

931
00:38:40,160 --> 00:38:42,240
we have this question that i mentioned

932
00:38:42,240 --> 00:38:44,560
earlier

933
00:38:44,839 --> 00:38:47,680
that's is it allowed for a client to say

934
00:38:47,680 --> 00:38:49,599
i want you to use this particular

935
00:38:49,599 --> 00:38:51,920
transaction id when it sends in an edit

936
00:38:51,920 --> 00:38:54,320
config to a server

937
00:38:54,320 --> 00:38:56,480
and right now there's no text about that

938
00:38:56,480 --> 00:38:58,560
at all in this draft but i'll come back

939
00:38:58,560 --> 00:39:00,320
to that in a minute and explain why i

940
00:39:00,320 --> 00:39:02,480
think that's a good idea

941
00:39:02,480 --> 00:39:05,440
similarly there's uh some people ask

942
00:39:05,440 --> 00:39:06,560
that maybe

943
00:39:06,560 --> 00:39:08,240
even if we don't assign

944
00:39:08,240 --> 00:39:10,640
e-tags this way maybe we could allow

945
00:39:10,640 --> 00:39:13,040
clients to send in a free-form string to

946
00:39:13,040 --> 00:39:15,040
associate with each transaction because

947
00:39:15,040 --> 00:39:17,280
then you can send in things like

948
00:39:17,280 --> 00:39:19,200
who was doing this why it was done which

949
00:39:19,200 --> 00:39:21,119
custom it belongs to internal order

950
00:39:21,119 --> 00:39:23,280
numbers and whatnot if you have if you

951
00:39:23,280 --> 00:39:25,839
can put comments on there so you can use

952
00:39:25,839 --> 00:39:27,599
the transaction

953
00:39:27,599 --> 00:39:29,040
you can add transaction metadata

954
00:39:29,040 --> 00:39:31,440
basically

955
00:39:31,760 --> 00:39:34,079
but right now there's not no such

956
00:39:34,079 --> 00:39:37,280
language in the draft at all

957
00:39:39,119 --> 00:39:40,720
and then we have a question about

958
00:39:40,720 --> 00:39:42,960
granularity so when you

959
00:39:42,960 --> 00:39:45,280
maintain this transaction id for for

960
00:39:45,280 --> 00:39:46,960
data storage do you do that only for the

961
00:39:46,960 --> 00:39:48,800
data store as a whole

962
00:39:48,800 --> 00:39:51,359
or can the server implementers pick some

963
00:39:51,359 --> 00:39:53,520
more containers and list elements around

964
00:39:53,520 --> 00:39:54,800
in the data model where they think it

965
00:39:54,800 --> 00:39:56,880
makes sense and maintain transaction

966
00:39:56,880 --> 00:39:58,960
dates for them as well

967
00:39:58,960 --> 00:40:01,359
or could server implementers pick any

968
00:40:01,359 --> 00:40:02,960
element not just containers and list

969
00:40:02,960 --> 00:40:05,280
elements but sort of every any leaf they

970
00:40:05,280 --> 00:40:06,960
like and whatever they think makes sense

971
00:40:06,960 --> 00:40:09,200
at all

972
00:40:09,200 --> 00:40:10,560
or even

973
00:40:10,560 --> 00:40:12,160
should it be the clients that decides

974
00:40:12,160 --> 00:40:13,440
which elements that we maintain

975
00:40:13,440 --> 00:40:15,359
transaction ids for dynamically in

976
00:40:15,359 --> 00:40:17,680
runtime

977
00:40:17,680 --> 00:40:19,280
right now the the

978
00:40:19,280 --> 00:40:21,599
draft explains how this is done when it

979
00:40:21,599 --> 00:40:23,920
comes to the data stores and some

980
00:40:23,920 --> 00:40:26,160
containers and list elements as picked

981
00:40:26,160 --> 00:40:29,839
by the server implementer

982
00:40:32,720 --> 00:40:34,880
some other open questions where

983
00:40:34,880 --> 00:40:37,359
we could think about new development is

984
00:40:37,359 --> 00:40:39,839
to indicate

985
00:40:39,920 --> 00:40:40,880
which

986
00:40:40,880 --> 00:40:43,359
elements in this in the yang model that

987
00:40:43,359 --> 00:40:44,640
have

988
00:40:44,640 --> 00:40:46,720
transaction ids associated with them

989
00:40:46,720 --> 00:40:49,920
by using system capabilities

990
00:40:49,920 --> 00:40:51,520
as we just talked about in

991
00:40:51,520 --> 00:40:53,359
the previous presentation here

992
00:40:53,359 --> 00:40:54,720
there's of course

993
00:40:54,720 --> 00:40:56,079
a lot of config false data being

994
00:40:56,079 --> 00:40:59,440
requested by clients as well and by

995
00:40:59,440 --> 00:41:02,960
using transaction id sim type of

996
00:41:02,960 --> 00:41:05,040
metadata you could actually probably

997
00:41:05,040 --> 00:41:06,800
reduce the amount of data being

998
00:41:06,800 --> 00:41:08,400
transported for conflict false data as

999
00:41:08,400 --> 00:41:09,200
well

1000
00:41:09,200 --> 00:41:11,200
quite dramatically or maybe with similar

1001
00:41:11,200 --> 00:41:12,720
numbers as you saw in the in the

1002
00:41:12,720 --> 00:41:14,560
beginning here

1003
00:41:14,560 --> 00:41:17,119
but that is not included at this time

1004
00:41:17,119 --> 00:41:19,599
and we could possibly eliminate

1005
00:41:19,599 --> 00:41:22,480
some use cases where you use locking if

1006
00:41:22,480 --> 00:41:24,800
you add e-tags for commit and a few

1007
00:41:24,800 --> 00:41:26,480
other operations as well

1008
00:41:26,480 --> 00:41:27,599
so that could be an interesting

1009
00:41:27,599 --> 00:41:29,359
development but it's not in there right

1010
00:41:29,359 --> 00:41:30,480
now

1011
00:41:30,480 --> 00:41:32,319
and let me just use the last two minutes

1012
00:41:32,319 --> 00:41:34,880
to try to explain the case for why it

1013
00:41:34,880 --> 00:41:36,800
might make sense to

1014
00:41:36,800 --> 00:41:39,200
let clients assign the transaction ids

1015
00:41:39,200 --> 00:41:41,359
when they're sending edit confidence

1016
00:41:41,359 --> 00:41:43,920
so here on the left you see

1017
00:41:43,920 --> 00:41:46,160
a client that's sending an edit config

1018
00:41:46,160 --> 00:41:48,000
with some blah blah blah going over to

1019
00:41:48,000 --> 00:41:50,480
the server and the server then returns

1020
00:41:50,480 --> 00:41:52,400
if it's using this transaction id thing

1021
00:41:52,400 --> 00:41:54,640
it's returning okay and also adding a

1022
00:41:54,640 --> 00:41:56,880
sort of transaction id said yeah

1023
00:41:56,880 --> 00:41:58,640
i know and we call all these things that

1024
00:41:58,640 --> 00:41:59,720
change now

1025
00:41:59,720 --> 00:42:02,480
ab5636 and so on

1026
00:42:02,480 --> 00:42:05,119
and the only difference uh if the client

1027
00:42:05,119 --> 00:42:06,880
assigns the transaction id is that you

1028
00:42:06,880 --> 00:42:09,040
add one more element in the edit config

1029
00:42:09,040 --> 00:42:11,200
optionally for the client yeah i want to

1030
00:42:11,200 --> 00:42:14,480
call this thing 47 390 and then the

1031
00:42:14,480 --> 00:42:17,440
server returns 47 390 at the end

1032
00:42:17,440 --> 00:42:19,280
so it's very

1033
00:42:19,280 --> 00:42:21,359
easy to implement this otherwise the

1034
00:42:21,359 --> 00:42:22,960
server would have to come up with this

1035
00:42:22,960 --> 00:42:24,720
sort of random value now it doesn't even

1036
00:42:24,720 --> 00:42:26,079
have to use the random function anymore

1037
00:42:26,079 --> 00:42:27,680
because it just gets disserved from the

1038
00:42:27,680 --> 00:42:29,520
client i want you to call this this and

1039
00:42:29,520 --> 00:42:31,200
that's what it gets back

1040
00:42:31,200 --> 00:42:34,560
so it's very easy to implement

1041
00:42:35,839 --> 00:42:38,160
and

1042
00:42:38,240 --> 00:42:40,400
i claim that this

1043
00:42:40,400 --> 00:42:42,960
allowing the client to send this value

1044
00:42:42,960 --> 00:42:45,200
is a high value thing because if here on

1045
00:42:45,200 --> 00:42:46,640
the left if you don't allow the client

1046
00:42:46,640 --> 00:42:49,040
to do that it computes a transaction

1047
00:42:49,040 --> 00:42:51,040
sends a few edit configs to the number

1048
00:42:51,040 --> 00:42:52,960
of servers and they respond in their

1049
00:42:52,960 --> 00:42:55,359
time and the server the client has to

1050
00:42:55,359 --> 00:42:57,359
wait for the slowest of them to

1051
00:42:57,359 --> 00:42:59,359
respond before it knows the transaction

1052
00:42:59,359 --> 00:43:01,200
id and can update this database with

1053
00:43:01,200 --> 00:43:03,119
what's happened then it can start

1054
00:43:03,119 --> 00:43:05,280
computing the next transaction

1055
00:43:05,280 --> 00:43:07,839
sending out a few more edit configs wait

1056
00:43:07,839 --> 00:43:09,760
for all of the responses

1057
00:43:09,760 --> 00:43:11,599
to update the database and so on so keep

1058
00:43:11,599 --> 00:43:13,680
track of what's going on

1059
00:43:13,680 --> 00:43:15,760
whereas on the right side here

1060
00:43:15,760 --> 00:43:18,079
if you uh you compute the current

1061
00:43:18,079 --> 00:43:20,480
control transaction and it sends out

1062
00:43:20,480 --> 00:43:22,240
this edit configs

1063
00:43:22,240 --> 00:43:24,480
it already specifies which transaction

1064
00:43:24,480 --> 00:43:26,400
ids things should have so the database

1065
00:43:26,400 --> 00:43:28,079
it has locally here is already up to

1066
00:43:28,079 --> 00:43:30,800
date with what's going on and then the

1067
00:43:30,800 --> 00:43:33,040
service can respond in their time

1068
00:43:33,040 --> 00:43:35,040
and we are already on to the next thing

1069
00:43:35,040 --> 00:43:36,960
and computers it

1070
00:43:36,960 --> 00:43:39,599
increases the performance quite a bit

1071
00:43:39,599 --> 00:43:40,960
and of course this this would be an

1072
00:43:40,960 --> 00:43:42,720
optional feature so i don't think all

1073
00:43:42,720 --> 00:43:44,560
servers or so all clients and servers

1074
00:43:44,560 --> 00:43:45,920
would have to implement this but for

1075
00:43:45,920 --> 00:43:46,960
those that

1076
00:43:46,960 --> 00:43:48,560
participate in high performance

1077
00:43:48,560 --> 00:43:51,119
scenarios this could be interesting

1078
00:43:51,119 --> 00:43:53,040
and i think i'm just on time going to

1079
00:43:53,040 --> 00:43:56,240
the last slide which is saying

1080
00:43:56,240 --> 00:43:58,480
are we happy with

1081
00:43:58,480 --> 00:44:00,000
these open questions following the way

1082
00:44:00,000 --> 00:44:01,920
they put them here or do we want to have

1083
00:44:01,920 --> 00:44:03,599
more discussion on the list or maybe

1084
00:44:03,599 --> 00:44:06,079
even an interim

1085
00:44:06,079 --> 00:44:09,319
thank you

1086
00:44:10,160 --> 00:44:11,200
um

1087
00:44:11,200 --> 00:44:14,400
so this is kent uh chair i i think uh

1088
00:44:14,400 --> 00:44:16,960
you had some open issues and there's no

1089
00:44:16,960 --> 00:44:19,200
time for discussion i know we're on a

1090
00:44:19,200 --> 00:44:22,160
tight schedule here with the uh interims

1091
00:44:22,160 --> 00:44:23,760
i do think we should take items to the

1092
00:44:23,760 --> 00:44:26,560
list so for each of your open issues

1093
00:44:26,560 --> 00:44:27,520
please

1094
00:44:27,520 --> 00:44:29,920
start a thread a separate thread

1095
00:44:29,920 --> 00:44:32,560
and those can be discussed there thank

1096
00:44:32,560 --> 00:44:33,520
you

1097
00:44:33,520 --> 00:44:36,520
okay

1098
00:44:37,200 --> 00:44:39,599
so actually i'm going to forego my q and

1099
00:44:39,599 --> 00:44:40,800
let me

1100
00:44:40,800 --> 00:44:43,280
go ahead

1101
00:44:44,800 --> 00:44:47,359
so i'll be quick canon and so basically

1102
00:44:47,359 --> 00:44:49,520
i really support engine id

1103
00:44:49,520 --> 00:44:53,040
being suited by the client

1104
00:44:53,040 --> 00:44:55,520
or at least having a way to to label

1105
00:44:55,520 --> 00:44:57,839
transaction because if we put in there

1106
00:44:57,839 --> 00:44:59,760
the service request id coming from the

1107
00:44:59,760 --> 00:45:02,400
orchestrator and it has great value in

1108
00:45:02,400 --> 00:45:05,040
case we could uh we have multiple client

1109
00:45:05,040 --> 00:45:06,319
configuring

1110
00:45:06,319 --> 00:45:08,640
a server and we do we could do a look up

1111
00:45:08,640 --> 00:45:10,800
there see exactly what was changed for

1112
00:45:10,800 --> 00:45:12,000
in time

1113
00:45:12,000 --> 00:45:13,599
so i'll expand on the list because it

1114
00:45:13,599 --> 00:45:16,400
was a long time

1115
00:45:17,520 --> 00:45:20,079
thanks man

1116
00:45:20,319 --> 00:45:22,720
all right since we are on the we left

1117
00:45:22,720 --> 00:45:26,240
with only 15 minutes maybe

1118
00:45:26,240 --> 00:45:29,280
we should move to the next deck

1119
00:45:29,280 --> 00:45:31,359
and chin yeah while we're bringing that

1120
00:45:31,359 --> 00:45:34,560
up uh i guess jen's presenting and then

1121
00:45:34,560 --> 00:45:36,480
while i do also i think there's value

1122
00:45:36,480 --> 00:45:37,920
there we just need to discuss the best

1123
00:45:37,920 --> 00:45:40,720
way to introduce it

1124
00:45:41,440 --> 00:45:42,480
hello

1125
00:45:42,480 --> 00:45:44,240
can you hear me yeah go ahead jen

1126
00:45:44,240 --> 00:45:46,880
see your slides in here go ahead

1127
00:45:46,880 --> 00:45:47,760
yeah

1128
00:45:47,760 --> 00:45:49,119
uh

1129
00:45:49,119 --> 00:45:51,359
hello everyone my name is ching so i'm

1130
00:45:51,359 --> 00:45:53,599
here to present the list of designation

1131
00:45:53,599 --> 00:45:56,079
mechanisms for nanocomp and rest conf we

1132
00:45:56,079 --> 00:45:58,000
have three dropped

1133
00:45:58,000 --> 00:46:00,160
and the name we here are also we

1134
00:46:00,160 --> 00:46:02,160
actually set up design team for this

1135
00:46:02,160 --> 00:46:04,480
next

1136
00:46:09,520 --> 00:46:11,119
oh

1137
00:46:11,119 --> 00:46:13,680
oh sorry i i forgot yeah

1138
00:46:13,680 --> 00:46:14,880
yeah

1139
00:46:14,880 --> 00:46:17,680
let's yeah just recap a little bit uh

1140
00:46:17,680 --> 00:46:19,920
motivation so why we want to do this

1141
00:46:19,920 --> 00:46:20,880
actually

1142
00:46:20,880 --> 00:46:23,359
uh actually when you retrieve 90 number

1143
00:46:23,359 --> 00:46:25,440
the entry from list and leave list

1144
00:46:25,440 --> 00:46:26,800
actually

1145
00:46:26,800 --> 00:46:29,040
you may actually uh

1146
00:46:29,040 --> 00:46:31,680
don't have a very user-friendly client

1147
00:46:31,680 --> 00:46:34,640
interface actually for a client that may

1148
00:46:34,640 --> 00:46:37,680
take quite a long time to retrieve these

1149
00:46:37,680 --> 00:46:39,040
lists so

1150
00:46:39,040 --> 00:46:40,480
we'll introduce

1151
00:46:40,480 --> 00:46:42,480
quite a lot of latency and also

1152
00:46:42,480 --> 00:46:45,839
economy consume a lot of resources so

1153
00:46:45,839 --> 00:46:48,240
our idea is to try to leverage the

1154
00:46:48,240 --> 00:46:50,720
server-side processing

1155
00:46:50,720 --> 00:46:52,960
combined with some

1156
00:46:52,960 --> 00:46:55,359
back-end storage system

1157
00:46:55,359 --> 00:46:57,200
and for example

1158
00:46:57,200 --> 00:46:59,760
index mechanism allow you to allocate

1159
00:46:59,760 --> 00:47:01,280
the data

1160
00:47:01,280 --> 00:47:04,880
without need to uh search

1161
00:47:04,880 --> 00:47:09,200
all the row in the database table so we

1162
00:47:09,200 --> 00:47:11,920
tried to borrow this concept and

1163
00:47:11,920 --> 00:47:14,800
and use in this list and leave list

1164
00:47:14,800 --> 00:47:15,920
retriever

1165
00:47:15,920 --> 00:47:18,480
so this job has already been presented

1166
00:47:18,480 --> 00:47:20,720
in iet 109

1167
00:47:20,720 --> 00:47:23,440
and we got quite a lot of discussion on

1168
00:47:23,440 --> 00:47:26,079
rescon for connection problem this

1169
00:47:26,079 --> 00:47:27,119
actually

1170
00:47:27,119 --> 00:47:29,280
we have a job that we call the resconf

1171
00:47:29,280 --> 00:47:30,400
connection

1172
00:47:30,400 --> 00:47:33,040
which get expired so we

1173
00:47:33,040 --> 00:47:34,400
actually

1174
00:47:34,400 --> 00:47:37,359
use these as basis to come up with this

1175
00:47:37,359 --> 00:47:39,440
idea yeah

1176
00:47:39,440 --> 00:47:41,040
and

1177
00:47:41,040 --> 00:47:44,079
so before we uh discuss this pagination

1178
00:47:44,079 --> 00:47:47,440
we actually have three key uh acronyms

1179
00:47:47,440 --> 00:47:50,160
first is pagination really it is a

1180
00:47:50,160 --> 00:47:52,480
standard mechanism to control the

1181
00:47:52,480 --> 00:47:55,200
filtering sorting retrieve the entry and

1182
00:47:55,200 --> 00:47:57,200
of less than a lift list

1183
00:47:57,200 --> 00:48:00,079
and also we have two uh acronym we call

1184
00:48:00,079 --> 00:48:00,800
the

1185
00:48:00,800 --> 00:48:03,680
list pagination net conf and this page

1186
00:48:03,680 --> 00:48:06,480
nation for rescon which focuses on

1187
00:48:06,480 --> 00:48:08,079
product extension to support this

1188
00:48:08,079 --> 00:48:10,720
pagination

1189
00:48:10,880 --> 00:48:11,760
and

1190
00:48:11,760 --> 00:48:14,160
so what do we

1191
00:48:14,160 --> 00:48:15,640
do actually since

1192
00:48:15,640 --> 00:48:19,040
iet109 actually we up one of the

1193
00:48:19,040 --> 00:48:21,040
this pagination draft

1194
00:48:21,040 --> 00:48:23,440
from the other two

1195
00:48:23,440 --> 00:48:25,280
one is focused on nanocock the other

1196
00:48:25,280 --> 00:48:27,520
focus on redskonf and

1197
00:48:27,520 --> 00:48:30,079
we rename the cong and escape

1198
00:48:30,079 --> 00:48:32,240
parameter into the limit and offset

1199
00:48:32,240 --> 00:48:34,720
because we borrow the concept of secure

1200
00:48:34,720 --> 00:48:37,760
language from the backhand database

1201
00:48:37,760 --> 00:48:40,480
so they use nimit and offset and that's

1202
00:48:40,480 --> 00:48:41,440
why we

1203
00:48:41,440 --> 00:48:43,200
switch to these two

1204
00:48:43,200 --> 00:48:46,800
terminology and we also define uh

1205
00:48:46,800 --> 00:48:49,200
you know uh for list pagination define

1206
00:48:49,200 --> 00:48:51,599
the five query parameter which will be

1207
00:48:51,599 --> 00:48:54,000
discussed in detail in the later slides

1208
00:48:54,000 --> 00:48:55,119
and also

1209
00:48:55,119 --> 00:48:57,680
for decision list pagination we also

1210
00:48:57,680 --> 00:48:59,920
introduce one query parameter we call

1211
00:48:59,920 --> 00:49:03,200
the sublist limit and

1212
00:49:03,200 --> 00:49:06,160
also we actually extend the server

1213
00:49:06,160 --> 00:49:07,920
capability extension

1214
00:49:07,920 --> 00:49:10,800
and to

1215
00:49:10,880 --> 00:49:12,800
actually define the per

1216
00:49:12,800 --> 00:49:14,319
node tags

1217
00:49:14,319 --> 00:49:16,480
and in addition we actually

1218
00:49:16,480 --> 00:49:19,680
uh in appendix we uh define uh the

1219
00:49:19,680 --> 00:49:21,920
example young data model dataset and

1220
00:49:21,920 --> 00:49:23,760
query which will be reused by the

1221
00:49:23,760 --> 00:49:27,599
nanocon draft and the restaurant job

1222
00:49:28,160 --> 00:49:29,119
and

1223
00:49:29,119 --> 00:49:31,359
so the other two dropped the first

1224
00:49:31,359 --> 00:49:34,960
net conf and we already um you know

1225
00:49:34,960 --> 00:49:37,599
posed this chart and we made it up data

1226
00:49:37,599 --> 00:49:40,480
so uh the main change actually is we

1227
00:49:40,480 --> 00:49:42,880
change a new rpc to

1228
00:49:42,880 --> 00:49:43,680
uh

1229
00:49:43,680 --> 00:49:45,280
augmenting uh

1230
00:49:45,280 --> 00:49:49,119
three out net rpc one is net conf

1231
00:49:49,119 --> 00:49:51,680
and also we have get config and

1232
00:49:51,680 --> 00:49:54,319
uh get and get config and get data

1233
00:49:54,319 --> 00:49:56,640
the second change we actually

1234
00:49:56,640 --> 00:49:59,920
try to reuse the grouping defined in

1235
00:49:59,920 --> 00:50:02,880
this pagination job and

1236
00:50:02,880 --> 00:50:06,079
in in this netcod job and also we

1237
00:50:06,079 --> 00:50:08,000
actually provide the example to show how

1238
00:50:08,000 --> 00:50:09,280
how it works

1239
00:50:09,280 --> 00:50:12,400
and for rest confer and we

1240
00:50:12,400 --> 00:50:15,599
actually update the rfc 8040 and align

1241
00:50:15,599 --> 00:50:17,520
query parameter

1242
00:50:17,520 --> 00:50:19,119
for rest confirm

1243
00:50:19,119 --> 00:50:22,160
and we also uh declare

1244
00:50:22,160 --> 00:50:24,480
list and leave list as a valid resource

1245
00:50:24,480 --> 00:50:27,040
target forget and optionally we can

1246
00:50:27,040 --> 00:50:29,040
support delete operation

1247
00:50:29,040 --> 00:50:31,359
based the discussion with design team

1248
00:50:31,359 --> 00:50:32,319
member

1249
00:50:32,319 --> 00:50:34,800
and we think for young model we we don't

1250
00:50:34,800 --> 00:50:37,200
think it is value we don't see any

1251
00:50:37,200 --> 00:50:39,200
parameter is really needed in this model

1252
00:50:39,200 --> 00:50:42,079
so we remove this yar model for this

1253
00:50:42,079 --> 00:50:45,280
pagination rascal

1254
00:50:45,599 --> 00:50:48,319
and so let's uh

1255
00:50:48,319 --> 00:50:50,000
drill down a little bit

1256
00:50:50,000 --> 00:50:52,839
into this this pagination

1257
00:50:52,839 --> 00:50:56,240
draft and we actually defined uh

1258
00:50:56,240 --> 00:50:57,440
uh

1259
00:50:57,440 --> 00:50:59,359
actually uh

1260
00:50:59,359 --> 00:51:02,000
several uh query parameter the first is

1261
00:51:02,000 --> 00:51:05,920
where and the second is sold by and

1262
00:51:05,920 --> 00:51:07,359
where actually

1263
00:51:07,359 --> 00:51:10,319
actually ken already mentioned we

1264
00:51:10,319 --> 00:51:12,079
do support this kind of filter

1265
00:51:12,079 --> 00:51:13,200
expression

1266
00:51:13,200 --> 00:51:15,200
and uh we

1267
00:51:15,200 --> 00:51:17,920
provide example for this and for sold by

1268
00:51:17,920 --> 00:51:19,599
very similar to the order by actually

1269
00:51:19,599 --> 00:51:21,760
the by default if sort of is not set

1270
00:51:21,760 --> 00:51:22,800
actually will

1271
00:51:22,800 --> 00:51:25,440
you know fall back to the uh

1272
00:51:25,440 --> 00:51:28,079
order by and direction we support the

1273
00:51:28,079 --> 00:51:29,599
forward

1274
00:51:29,599 --> 00:51:30,480
and

1275
00:51:30,480 --> 00:51:33,359
backward direction of the results to be

1276
00:51:33,359 --> 00:51:34,319
returned

1277
00:51:34,319 --> 00:51:36,800
and also key parameter is offset and

1278
00:51:36,800 --> 00:51:39,440
limit and which actually apply to the

1279
00:51:39,440 --> 00:51:40,960
list and leave list

1280
00:51:40,960 --> 00:51:43,200
and it could be returned the number of

1281
00:51:43,200 --> 00:51:44,480
entry to be

1282
00:51:44,480 --> 00:51:46,400
skipped or the number of entry to be

1283
00:51:46,400 --> 00:51:47,440
returned

1284
00:51:47,440 --> 00:51:49,599
and we also

1285
00:51:49,599 --> 00:51:51,520
uh sample is the

1286
00:51:51,520 --> 00:51:54,319
limit parameter which only apply to the

1287
00:51:54,319 --> 00:51:56,559
dissident list and leave list

1288
00:51:56,559 --> 00:51:58,800
and we also set the processing order the

1289
00:51:58,800 --> 00:51:59,920
first

1290
00:51:59,920 --> 00:52:02,480
high priority order is where and then

1291
00:52:02,480 --> 00:52:04,800
it's sold by interaction offset and

1292
00:52:04,800 --> 00:52:05,920
limit

1293
00:52:05,920 --> 00:52:06,960
and uh

1294
00:52:06,960 --> 00:52:09,280
in this chapter we also introduce a

1295
00:52:09,280 --> 00:52:11,280
metadata attribute we'll call the

1296
00:52:11,280 --> 00:52:14,079
remaining and remaining parameter can

1297
00:52:14,079 --> 00:52:16,960
use together with a limit query or

1298
00:52:16,960 --> 00:52:20,559
separate list limit query and it can be

1299
00:52:20,559 --> 00:52:23,280
used to return the number of entry

1300
00:52:23,280 --> 00:52:26,160
not included due to the limit or sub

1301
00:52:26,160 --> 00:52:30,480
limit sublist limit operation

1302
00:52:31,520 --> 00:52:34,000
and here is we show the example how

1303
00:52:34,000 --> 00:52:35,200
these uh

1304
00:52:35,200 --> 00:52:37,280
combination six query parameters can be

1305
00:52:37,280 --> 00:52:40,480
used in the request and response message

1306
00:52:40,480 --> 00:52:42,880
to guide the whole list and leave list

1307
00:52:42,880 --> 00:52:44,960
should be returned so you can see this

1308
00:52:44,960 --> 00:52:48,240
example and we actually use the where

1309
00:52:48,240 --> 00:52:50,720
sort by and direction and offset and

1310
00:52:50,720 --> 00:52:51,680
limit

1311
00:52:51,680 --> 00:52:53,920
another example has already documented

1312
00:52:53,920 --> 00:52:56,160
in appendix so

1313
00:52:56,160 --> 00:52:58,400
3.7

1314
00:52:58,400 --> 00:53:01,760
and even in time limit i will

1315
00:53:01,760 --> 00:53:04,160
skip this

1316
00:53:04,160 --> 00:53:07,599
and you know in addition we introduce

1317
00:53:07,599 --> 00:53:09,280
another example to

1318
00:53:09,280 --> 00:53:10,079
uh

1319
00:53:10,079 --> 00:53:13,200
to to to discuss how remaining is used

1320
00:53:13,200 --> 00:53:16,640
in uh in the requested response actually

1321
00:53:16,640 --> 00:53:18,319
these remaining

1322
00:53:18,319 --> 00:53:20,880
actually uh can be applied to the

1323
00:53:20,880 --> 00:53:23,680
dissident list and levelist so we gave

1324
00:53:23,680 --> 00:53:25,200
two examples

1325
00:53:25,200 --> 00:53:27,440
the difference is that the target node

1326
00:53:27,440 --> 00:53:28,400
is different

1327
00:53:28,400 --> 00:53:29,599
one is

1328
00:53:29,599 --> 00:53:31,359
just applied to the

1329
00:53:31,359 --> 00:53:33,520
one data node we call

1330
00:53:33,520 --> 00:53:37,200
the member who name is alice

1331
00:53:37,200 --> 00:53:40,319
the second the target node actually is a

1332
00:53:40,319 --> 00:53:43,040
data store it is a intended data store

1333
00:53:43,040 --> 00:53:45,839
so response will be different

1334
00:53:45,839 --> 00:53:48,640
actually we provide the data set and

1335
00:53:48,640 --> 00:53:50,720
you you can use these

1336
00:53:50,720 --> 00:53:55,480
remaining to get a different result

1337
00:53:56,160 --> 00:53:57,200
and

1338
00:53:57,200 --> 00:53:59,599
so we also introduced a

1339
00:53:59,599 --> 00:54:01,040
serverless pagination capability

1340
00:54:01,040 --> 00:54:02,720
discovery

1341
00:54:02,720 --> 00:54:04,559
this is really actually

1342
00:54:04,559 --> 00:54:07,440
built on top of the server capability

1343
00:54:07,440 --> 00:54:10,240
draft actually we augment from system

1344
00:54:10,240 --> 00:54:14,640
capability with a two key parameters

1345
00:54:14,640 --> 00:54:16,079
we call the constraint parameter the

1346
00:54:16,079 --> 00:54:18,160
first one indicates which

1347
00:54:18,160 --> 00:54:20,800
config force list or leaflet

1348
00:54:20,800 --> 00:54:23,280
node are concentrated it will apply to

1349
00:54:23,280 --> 00:54:24,640
the parent node

1350
00:54:24,640 --> 00:54:26,640
and the second is indexed

1351
00:54:26,640 --> 00:54:28,720
you know this actually applies to the

1352
00:54:28,720 --> 00:54:30,400
child node

1353
00:54:30,400 --> 00:54:32,800
child node actually which

1354
00:54:32,800 --> 00:54:34,800
will show actually which node may be

1355
00:54:34,800 --> 00:54:37,760
used in a where and sort by expression

1356
00:54:37,760 --> 00:54:40,960
and we also allow some future extension

1357
00:54:40,960 --> 00:54:43,200
uh here we give the example you may not

1358
00:54:43,200 --> 00:54:44,240
support

1359
00:54:44,240 --> 00:54:45,280
100

1360
00:54:45,280 --> 00:54:48,880
x pass 1.0 for example you support some

1361
00:54:48,880 --> 00:54:51,599
of the expanse function for some other

1362
00:54:51,599 --> 00:54:53,920
experts for you don't support so we can

1363
00:54:53,920 --> 00:54:56,160
allow such an extension because

1364
00:54:56,160 --> 00:54:58,559
for back-end uh

1365
00:54:58,559 --> 00:55:01,200
database system they may

1366
00:55:01,200 --> 00:55:02,880
have different capabilities so we should

1367
00:55:02,880 --> 00:55:04,000
allow

1368
00:55:04,000 --> 00:55:04,839
such

1369
00:55:04,839 --> 00:55:07,440
a very

1370
00:55:07,440 --> 00:55:10,640
variety difference

1371
00:55:11,599 --> 00:55:14,880
and the second is the net conf draft and

1372
00:55:14,880 --> 00:55:16,799
the the you can see

1373
00:55:16,799 --> 00:55:18,640
the overview this model structure

1374
00:55:18,640 --> 00:55:21,359
actually we augment the three netcom rpc

1375
00:55:21,359 --> 00:55:22,319
statement

1376
00:55:22,319 --> 00:55:25,839
get get config get data so you can see

1377
00:55:25,839 --> 00:55:28,000
the parameter uh you know

1378
00:55:28,000 --> 00:55:28,799
uh

1379
00:55:28,799 --> 00:55:30,960
actually align with the list pagination

1380
00:55:30,960 --> 00:55:32,000
shaft

1381
00:55:32,000 --> 00:55:32,880
and

1382
00:55:32,880 --> 00:55:35,119
on the same

1383
00:55:35,119 --> 00:55:37,280
query parameter and also the same the

1384
00:55:37,280 --> 00:55:39,119
type data type uh

1385
00:55:39,119 --> 00:55:44,160
i applied to different uh rpc statements

1386
00:55:44,720 --> 00:55:46,079
and then we also

1387
00:55:46,079 --> 00:55:48,559
gave an example to show how this

1388
00:55:48,559 --> 00:55:50,640
parameter can be used in the

1389
00:55:50,640 --> 00:55:54,558
request and response message pair

1390
00:55:55,599 --> 00:55:59,599
and the second one is rescon for draft

1391
00:55:59,599 --> 00:56:02,000
for restconf actually we really actually

1392
00:56:02,000 --> 00:56:06,160
try to update rfc 8040. the first

1393
00:56:06,160 --> 00:56:08,079
product chain will introduce we add a

1394
00:56:08,079 --> 00:56:10,319
list and leave list as a valid resource

1395
00:56:10,319 --> 00:56:13,839
target for the get and delete operation

1396
00:56:13,839 --> 00:56:15,520
and we also

1397
00:56:15,520 --> 00:56:17,119
try to

1398
00:56:17,119 --> 00:56:18,480
apply it to

1399
00:56:18,480 --> 00:56:19,520
the

1400
00:56:19,520 --> 00:56:21,680
related http method

1401
00:56:21,680 --> 00:56:23,760
for the get and ahead

1402
00:56:23,760 --> 00:56:24,960
and

1403
00:56:24,960 --> 00:56:27,359
second actually we add a new media type

1404
00:56:27,359 --> 00:56:31,359
application young data xml list and for

1405
00:56:31,359 --> 00:56:33,280
application young data json actually we

1406
00:56:33,280 --> 00:56:34,799
try to reuse

1407
00:56:34,799 --> 00:56:35,680
uh

1408
00:56:35,680 --> 00:56:38,640
the one defined in obviously uh 80 40 we

1409
00:56:38,640 --> 00:56:41,040
don't need to you know reven reinvent

1410
00:56:41,040 --> 00:56:43,520
the wheels the third

1411
00:56:43,520 --> 00:56:45,440
product extension we introduce is we add

1412
00:56:45,440 --> 00:56:46,319
a six

1413
00:56:46,319 --> 00:56:48,000
new query parameter

1414
00:56:48,000 --> 00:56:51,280
and uh we also you know give example how

1415
00:56:51,280 --> 00:56:54,079
uh this uh can be applied to the delete

1416
00:56:54,079 --> 00:56:56,000
operation for the list

1417
00:56:56,000 --> 00:56:57,200
so this uh

1418
00:56:57,200 --> 00:56:58,720
example already documented in the

1419
00:56:58,720 --> 00:57:00,000
appendix

1420
00:57:00,000 --> 00:57:02,880
3.2

1421
00:57:02,880 --> 00:57:06,000
so we we do have two open issue we like

1422
00:57:06,000 --> 00:57:08,240
to solicit some feedback

1423
00:57:08,240 --> 00:57:11,599
the first one is about cursor support

1424
00:57:11,599 --> 00:57:13,920
actually we uh

1425
00:57:13,920 --> 00:57:16,880
our pagination id actually uh the key

1426
00:57:16,880 --> 00:57:18,160
parameter is

1427
00:57:18,160 --> 00:57:20,000
offset and limit actually we usually

1428
00:57:20,000 --> 00:57:22,799
would call it as offset based pagination

1429
00:57:22,799 --> 00:57:24,400
but in some cases

1430
00:57:24,400 --> 00:57:25,440
you

1431
00:57:25,440 --> 00:57:27,760
you may need to consider whether we need

1432
00:57:27,760 --> 00:57:29,920
to support cursor-based pagination so

1433
00:57:29,920 --> 00:57:31,920
what is the pace uh

1434
00:57:31,920 --> 00:57:34,480
cursor-based pagination so it really

1435
00:57:34,480 --> 00:57:36,559
enables the paging to continue over the

1436
00:57:36,559 --> 00:57:39,280
snapshot despite the dataset changing

1437
00:57:39,280 --> 00:57:42,319
for example you add one more entry or

1438
00:57:42,319 --> 00:57:44,720
you may delete one more entry

1439
00:57:44,720 --> 00:57:47,040
for the client actually

1440
00:57:47,040 --> 00:57:48,240
you may

1441
00:57:48,240 --> 00:57:49,440
don't know

1442
00:57:49,440 --> 00:57:51,359
whether the list gets changed so you can

1443
00:57:51,359 --> 00:57:53,520
assume that the client

1444
00:57:53,520 --> 00:57:54,799
uh you know

1445
00:57:54,799 --> 00:57:56,240
uh

1446
00:57:56,240 --> 00:57:57,760
so the client actually make assumption

1447
00:57:57,760 --> 00:58:00,000
actually that this doesn't make a change

1448
00:58:00,000 --> 00:58:02,319
uh but for for server

1449
00:58:02,319 --> 00:58:03,040
if

1450
00:58:03,040 --> 00:58:05,839
without uh cursor support actually in

1451
00:58:05,839 --> 00:58:08,720
some cases so we may have some

1452
00:58:08,720 --> 00:58:09,920
you know uh

1453
00:58:09,920 --> 00:58:12,559
corner case it may re return the larger

1454
00:58:12,559 --> 00:58:14,880
remaining value than the previous

1455
00:58:14,880 --> 00:58:16,559
fetch

1456
00:58:16,559 --> 00:58:17,920
so

1457
00:58:17,920 --> 00:58:20,880
one example you may refashion the paging

1458
00:58:20,880 --> 00:58:23,280
in a time series log

1459
00:58:23,280 --> 00:58:25,839
the log can be you know grow

1460
00:58:25,839 --> 00:58:27,920
too large actually uh can be append at

1461
00:58:27,920 --> 00:58:29,200
the end and

1462
00:58:29,200 --> 00:58:31,760
so this will

1463
00:58:31,760 --> 00:58:33,920
face these kind of cases

1464
00:58:33,920 --> 00:58:34,799
and

1465
00:58:34,799 --> 00:58:37,599
so for config actually actually many

1466
00:58:37,599 --> 00:58:42,079
systems have a internal radar writer uh

1467
00:58:42,079 --> 00:58:44,079
mixer

1468
00:58:44,079 --> 00:58:47,280
exclusive actually so the cursor

1469
00:58:47,280 --> 00:58:48,160
in

1470
00:58:48,160 --> 00:58:50,559
based on our design design team

1471
00:58:50,559 --> 00:58:53,440
discussion seems maybe not needed

1472
00:58:53,440 --> 00:58:56,160
so we also have some mechanism to try to

1473
00:58:56,160 --> 00:58:58,000
address this for example we have

1474
00:58:58,000 --> 00:59:00,079
an entity tag timestamp

1475
00:59:00,079 --> 00:59:02,640
this can be used to detect the dynamic

1476
00:59:02,640 --> 00:59:05,599
disk change now also we have some error

1477
00:59:05,599 --> 00:59:07,839
code messaging this error code message

1478
00:59:07,839 --> 00:59:09,599
can be used to indicate the end of the

1479
00:59:09,599 --> 00:59:10,720
list

1480
00:59:10,720 --> 00:59:11,680
so

1481
00:59:11,680 --> 00:59:12,799
we

1482
00:59:12,799 --> 00:59:15,760
think uh we seem similar we think

1483
00:59:15,760 --> 00:59:18,559
we lack a companion use case for this

1484
00:59:18,559 --> 00:59:20,240
if someone

1485
00:59:20,240 --> 00:59:21,280
have

1486
00:59:21,280 --> 00:59:23,760
some concrete use cases please let us

1487
00:59:23,760 --> 00:59:25,839
know and we will see

1488
00:59:25,839 --> 00:59:28,240
how to support this cursor in the list

1489
00:59:28,240 --> 00:59:30,240
pagination job

1490
00:59:30,240 --> 00:59:32,799
and the second one is about the

1491
00:59:32,799 --> 00:59:35,760
remaining an annotation so

1492
00:59:35,760 --> 00:59:38,319
uh the remaining is used to return the

1493
00:59:38,319 --> 00:59:40,319
number of the elements not including the

1494
00:59:40,319 --> 00:59:44,160
result set actually the kernel draft uh

1495
00:59:44,160 --> 00:59:47,119
states that if no elements were removed

1496
00:59:47,119 --> 00:59:50,000
this annotation must not appear

1497
00:59:50,000 --> 00:59:50,720
but

1498
00:59:50,720 --> 00:59:51,920
it

1499
00:59:51,920 --> 00:59:54,640
uses the minimum value 0 to represent

1500
00:59:54,640 --> 00:59:57,119
the arnold

1501
00:59:57,119 --> 00:59:59,599
actually based on discussion

1502
00:59:59,599 --> 01:00:00,480
some of

1503
01:00:00,480 --> 01:00:03,200
one of the proposal is whether we can

1504
01:00:03,200 --> 01:00:06,480
use zero to represent normal entry but

1505
01:00:06,480 --> 01:00:08,400
for unknown maybe

1506
01:00:08,400 --> 01:00:10,319
means not return the remaining

1507
01:00:10,319 --> 01:00:11,599
annotation

1508
01:00:11,599 --> 01:00:16,319
so for this we haven't reached agreement

1509
01:00:16,319 --> 01:00:18,559
among the design team member so we like

1510
01:00:18,559 --> 01:00:21,440
to hear your comments on this

1511
01:00:21,440 --> 01:00:24,240
so that's it

1512
01:00:24,240 --> 01:00:26,079
jim we are actually completely out of

1513
01:00:26,079 --> 01:00:27,119
time

1514
01:00:27,119 --> 01:00:30,079
so now you might want to take both these

1515
01:00:30,079 --> 01:00:33,040
open issues to the mailing list

1516
01:00:33,040 --> 01:00:34,559
add to okay

1517
01:00:34,559 --> 01:00:37,359
in discussion there

1518
01:00:37,359 --> 01:00:39,599
okay just want to quickly mention we

1519
01:00:39,599 --> 01:00:41,280
have invitation

1520
01:00:41,280 --> 01:00:45,200
one from ken the other from off yeah

1521
01:00:45,200 --> 01:00:47,440
thank you okay

1522
01:00:47,440 --> 01:00:48,240
yeah

1523
01:00:48,240 --> 01:00:49,839
please take it to the list and thanks

1524
01:00:49,839 --> 01:00:53,359
everyone for attending the meeting

1525
01:00:53,359 --> 01:00:57,319
see you on the mail and thank you

1526
01:02:05,200 --> 01:02:06,559
i'm sorry i'm not sure if i was on meet

1527
01:02:06,559 --> 01:02:08,400
or not

1528
01:02:08,400 --> 01:02:09,920
i was saying all the authors could

1529
01:02:09,920 --> 01:02:11,280
please take their open issues to the

1530
01:02:11,280 --> 01:02:14,640
list and uh and then for everyone uh

1531
01:02:14,640 --> 01:02:16,160
thank you for the discussion and we'll

1532
01:02:16,160 --> 01:02:18,559
continue the discussion on the list uh

1533
01:02:18,559 --> 01:02:23,240
please have a good rest of the day bye

