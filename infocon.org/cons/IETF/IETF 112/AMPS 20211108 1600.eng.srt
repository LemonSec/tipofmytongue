1
00:00:05,759 --> 00:00:08,160
michael

2
00:00:10,160 --> 00:00:13,360
uh yes i posted them do you not see them

3
00:00:13,360 --> 00:00:15,360
i i just i hadn't had a chance to look i

4
00:00:15,360 --> 00:00:17,279
just wasn't sure you

5
00:00:17,279 --> 00:00:18,880
on the same time zone as me might not

6
00:00:18,880 --> 00:00:22,240
have seen them either

7
00:00:22,400 --> 00:00:25,599
i saw them during the first session

8
00:00:25,599 --> 00:00:30,119
i think it posted them

9
00:00:39,840 --> 00:00:42,399
okay let's go ahead and get started

10
00:00:42,399 --> 00:00:46,239
by my clock we're at the top of the hour

11
00:00:46,239 --> 00:00:47,680
so uh

12
00:00:47,680 --> 00:00:50,079
welcome to lamps

13
00:00:50,079 --> 00:00:52,960
this uh is the

14
00:00:52,960 --> 00:00:56,000
last session for today uh at the virtual

15
00:00:56,000 --> 00:00:59,440
itf meeting

16
00:00:59,440 --> 00:01:01,839
and

17
00:01:03,039 --> 00:01:05,600
remind you of the note well these are

18
00:01:05,600 --> 00:01:08,560
your obligations if you want to

19
00:01:08,560 --> 00:01:09,840
contribute

20
00:01:09,840 --> 00:01:12,159
please make sure that you've reviewed

21
00:01:12,159 --> 00:01:14,240
this

22
00:01:14,240 --> 00:01:17,040
and i want to highlight on the next

23
00:01:17,040 --> 00:01:21,840
slide the bcp54 the code of conduct

24
00:01:21,840 --> 00:01:23,759
remember that

25
00:01:23,759 --> 00:01:25,920
we're here to

26
00:01:25,920 --> 00:01:27,600
work on

27
00:01:27,600 --> 00:01:30,079
standards for the global internet that

28
00:01:30,079 --> 00:01:32,159
means a diverse technical and

29
00:01:32,159 --> 00:01:35,360
environment and operational environment

30
00:01:35,360 --> 00:01:37,600
and we're going to do that

31
00:01:37,600 --> 00:01:40,720
being courteous and respectful to

32
00:01:40,720 --> 00:01:42,240
each other

33
00:01:42,240 --> 00:01:44,079
we're going to have impersonal as

34
00:01:44,079 --> 00:01:45,600
opposed to

35
00:01:45,600 --> 00:01:47,920
bullying or attacking

36
00:01:47,920 --> 00:01:49,920
attacks

37
00:01:49,920 --> 00:01:53,040
rather focus on the technical issues

38
00:01:53,040 --> 00:01:55,520
and please be prepared to contribute to

39
00:01:55,520 --> 00:01:58,560
the ongoing work of the group so that we

40
00:01:58,560 --> 00:02:02,799
can reach consensus and get done

41
00:02:02,960 --> 00:02:05,920
so the agenda for today um

42
00:02:05,920 --> 00:02:06,640
is

43
00:02:06,640 --> 00:02:08,399
pretty full

44
00:02:08,399 --> 00:02:12,319
um so let's make sure that we

45
00:02:13,760 --> 00:02:16,000
be concise where and

46
00:02:16,000 --> 00:02:18,560
focused

47
00:02:18,879 --> 00:02:20,959
this is the first slide of the agenda

48
00:02:20,959 --> 00:02:23,680
here's the second one

49
00:02:23,680 --> 00:02:25,760
so the first question is are there any

50
00:02:25,760 --> 00:02:28,799
agenda bashes

51
00:02:34,319 --> 00:02:35,519
okay

52
00:02:35,519 --> 00:02:37,840
hearing none um

53
00:02:37,840 --> 00:02:39,200
we'll

54
00:02:39,200 --> 00:02:42,400
turn to the status of the documents that

55
00:02:42,400 --> 00:02:43,200
are

56
00:02:43,200 --> 00:02:46,480
uh with the rc editor or the isg the

57
00:02:46,480 --> 00:02:48,640
first one is

58
00:02:48,640 --> 00:02:50,160
lamps

59
00:02:50,160 --> 00:02:54,080
rfc 7299 update this is in the rfc

60
00:02:54,080 --> 00:02:55,680
editors queue

61
00:02:55,680 --> 00:02:58,319
there's uh really nothing to report here

62
00:02:58,319 --> 00:03:00,319
therefore no slides

63
00:03:00,319 --> 00:03:01,120
the

64
00:03:01,120 --> 00:03:02,319
um

65
00:03:02,319 --> 00:03:05,159
it is really just registering two object

66
00:03:05,159 --> 00:03:06,800
identifiers

67
00:03:06,800 --> 00:03:07,760
and

68
00:03:07,760 --> 00:03:10,640
uh by the way that has already happened

69
00:03:10,640 --> 00:03:12,800
ayanna assigned them

70
00:03:12,800 --> 00:03:14,959
and um

71
00:03:14,959 --> 00:03:17,200
pointing to this document that is in the

72
00:03:17,200 --> 00:03:19,519
rc editor's queue so we'll probably see

73
00:03:19,519 --> 00:03:21,360
an rfc out of that

74
00:03:21,360 --> 00:03:24,480
in a month or so

75
00:03:24,480 --> 00:03:27,519
we're now ready to go to the cmp

76
00:03:27,519 --> 00:03:30,319
algorithms update and i think hendrick

77
00:03:30,319 --> 00:03:32,640
if you'd come to the mic i'll

78
00:03:32,640 --> 00:03:35,760
share the slides

79
00:03:35,760 --> 00:03:37,680
hi everybody

80
00:03:37,680 --> 00:03:41,760
so this is the cnp

81
00:03:42,400 --> 00:03:46,879
rfcs or 2b rfcs

82
00:03:46,879 --> 00:03:49,360
i splitted my slide deck into two

83
00:03:49,360 --> 00:03:51,519
because this

84
00:03:51,519 --> 00:03:54,159
draft is already

85
00:03:54,159 --> 00:03:59,480
advanced little bit so next slide please

86
00:04:01,280 --> 00:04:04,319
what happened since last itf we fixed

87
00:04:04,319 --> 00:04:05,519
some

88
00:04:05,519 --> 00:04:07,519
minor formatting nets

89
00:04:07,519 --> 00:04:10,400
the document proceeds to working group

90
00:04:10,400 --> 00:04:12,720
last call

91
00:04:12,720 --> 00:04:15,040
rus provided

92
00:04:15,040 --> 00:04:17,440
his feedback and

93
00:04:17,440 --> 00:04:19,279
also roman

94
00:04:19,279 --> 00:04:23,040
provided an area director review thanks

95
00:04:23,040 --> 00:04:24,400
to that

96
00:04:24,400 --> 00:04:28,400
i think we discussed or tackled most of

97
00:04:28,400 --> 00:04:32,560
the comments from roman on the list

98
00:04:32,560 --> 00:04:37,840
i will have some slides on section 7

99
00:04:38,080 --> 00:04:38,960
which

100
00:04:38,960 --> 00:04:41,520
may need some some little more

101
00:04:41,520 --> 00:04:45,440
discussion next slide please

102
00:04:46,000 --> 00:04:49,120
so section 7 what is it about the

103
00:04:49,120 --> 00:04:52,479
introduction to section 7 provides some

104
00:04:52,479 --> 00:04:53,919
general

105
00:04:53,919 --> 00:04:55,360
guidelines

106
00:04:55,360 --> 00:04:58,160
for implementers on how to

107
00:04:58,160 --> 00:05:02,240
choose a set of algorithms

108
00:05:02,479 --> 00:05:05,120
we advance the text a little bit and on

109
00:05:05,120 --> 00:05:08,160
the next slides i will propose also

110
00:05:08,160 --> 00:05:10,400
an additional table

111
00:05:10,400 --> 00:05:11,520
to

112
00:05:11,520 --> 00:05:12,479
yeah

113
00:05:12,479 --> 00:05:14,320
explain what an

114
00:05:14,320 --> 00:05:18,080
balanced set of algorithms would be

115
00:05:18,080 --> 00:05:20,400
section 7.1

116
00:05:20,400 --> 00:05:25,600
updates rfc 4210 appendix d2

117
00:05:25,600 --> 00:05:28,000
which is an

118
00:05:28,000 --> 00:05:30,880
algorithm's use profile with a set of

119
00:05:30,880 --> 00:05:34,080
mandatory to implement algorithms

120
00:05:34,080 --> 00:05:35,919
for the

121
00:05:35,919 --> 00:05:39,919
pki management operations

122
00:05:39,919 --> 00:05:43,919
specified in appendix d and e of rfc

123
00:05:43,919 --> 00:05:45,759
4210

124
00:05:45,759 --> 00:05:46,720
these

125
00:05:46,720 --> 00:05:50,880
pki management operations focus on

126
00:05:50,880 --> 00:05:52,400
managing

127
00:05:52,400 --> 00:05:54,560
person certificates

128
00:05:54,560 --> 00:05:57,280
that was the main focus back in that

129
00:05:57,280 --> 00:06:00,400
time for example the initialization

130
00:06:00,400 --> 00:06:03,600
request requests for a signature

131
00:06:03,600 --> 00:06:05,280
certificate and an encryption

132
00:06:05,280 --> 00:06:06,960
certificate where the encryption

133
00:06:06,960 --> 00:06:08,479
certificate

134
00:06:08,479 --> 00:06:10,080
could

135
00:06:10,080 --> 00:06:13,039
be supported with a centrally generated

136
00:06:13,039 --> 00:06:14,479
private key

137
00:06:14,479 --> 00:06:18,160
and these profiles use encrypted value

138
00:06:18,160 --> 00:06:19,440
even though

139
00:06:19,440 --> 00:06:21,840
we

140
00:06:22,400 --> 00:06:26,479
proposed to switch to envelope data for

141
00:06:26,479 --> 00:06:30,720
providing centrally generated keys

142
00:06:30,720 --> 00:06:33,840
we thought that for these profiles for

143
00:06:33,840 --> 00:06:37,440
backward compatibility it it it is

144
00:06:37,440 --> 00:06:39,520
okay to stick to

145
00:06:39,520 --> 00:06:41,600
encrypted value here

146
00:06:41,600 --> 00:06:42,960
um

147
00:06:42,960 --> 00:06:46,639
and therefore the section 7.1

148
00:06:46,639 --> 00:06:50,720
uses the algorithm identifiers also used

149
00:06:50,720 --> 00:06:54,160
in these appendixes

150
00:06:54,160 --> 00:06:56,639
and are also focusing on

151
00:06:56,639 --> 00:06:58,000
usage with

152
00:06:58,000 --> 00:07:00,840
encrypted value as one

153
00:07:00,840 --> 00:07:05,359
types section 7.2

154
00:07:05,599 --> 00:07:10,770
uses our lists the algorithm identifiers

155
00:07:10,770 --> 00:07:13,830
[Music]

156
00:07:15,120 --> 00:07:18,240
provided or are introduced in lightwide

157
00:07:18,240 --> 00:07:21,440
cmp profile lightweight cmp profile

158
00:07:21,440 --> 00:07:23,280
utilizes

159
00:07:23,280 --> 00:07:25,759
envelope data for

160
00:07:25,759 --> 00:07:28,960
transferring centrally generated keys

161
00:07:28,960 --> 00:07:30,639
and

162
00:07:30,639 --> 00:07:34,240
section 7.4 does not specify any

163
00:07:34,240 --> 00:07:35,759
mandatory

164
00:07:35,759 --> 00:07:37,440
algorithm sets

165
00:07:37,440 --> 00:07:38,240
but

166
00:07:38,240 --> 00:07:39,199
just

167
00:07:39,199 --> 00:07:42,400
explains for which algorithm

168
00:07:42,400 --> 00:07:46,240
identifiers which kind of algorithms

169
00:07:46,240 --> 00:07:48,639
from this document could be used that

170
00:07:48,639 --> 00:07:49,840
was

171
00:07:49,840 --> 00:07:54,719
kind of decision we took last itf

172
00:07:55,840 --> 00:07:58,160
having that said

173
00:07:58,160 --> 00:08:02,479
for this introduction next slide please

174
00:08:02,960 --> 00:08:04,800
ah sorry

175
00:08:04,800 --> 00:08:06,800
one step back in

176
00:08:06,800 --> 00:08:09,520
rfc 4210

177
00:08:09,520 --> 00:08:13,440
appendix d2 in this mandatory in this

178
00:08:13,440 --> 00:08:15,599
algorithm use set for

179
00:08:15,599 --> 00:08:17,919
from rfc 4210

180
00:08:17,919 --> 00:08:21,360
some outdated algorithms are listed

181
00:08:21,360 --> 00:08:23,039
and

182
00:08:23,039 --> 00:08:25,759
in section 7.1

183
00:08:25,759 --> 00:08:27,120
we

184
00:08:27,120 --> 00:08:30,240
will we propose to deprecate

185
00:08:30,240 --> 00:08:34,880
use of some of these algorithms

186
00:08:35,039 --> 00:08:39,200
specified in in 4210

187
00:08:39,200 --> 00:08:42,080
especially md5 and char-1

188
00:08:42,080 --> 00:08:44,399
should be deprecated

189
00:08:44,399 --> 00:08:46,640
dsa

190
00:08:46,640 --> 00:08:50,000
i think is not really a good choice

191
00:08:50,000 --> 00:08:51,839
if you look for interoperable

192
00:08:51,839 --> 00:08:53,360
implementations

193
00:08:53,360 --> 00:08:56,720
that is also something said in

194
00:08:56,720 --> 00:08:58,360
sp

195
00:08:58,360 --> 00:09:01,120
800-57 part 3.

196
00:09:01,120 --> 00:09:04,160
therefore we would also propose to to

197
00:09:04,160 --> 00:09:07,120
deprecate that

198
00:09:07,440 --> 00:09:12,160
rsc rc5 and cast 128

199
00:09:12,160 --> 00:09:15,200
should also be deprecated from our point

200
00:09:15,200 --> 00:09:18,480
of view as well as triple des even

201
00:09:18,480 --> 00:09:19,440
though

202
00:09:19,440 --> 00:09:21,600
usage with three keys

203
00:09:21,600 --> 00:09:24,640
it is already deprecated as of

204
00:09:24,640 --> 00:09:27,720
nist sp 800

205
00:09:27,720 --> 00:09:31,120
131 a

206
00:09:31,920 --> 00:09:35,519
with regard to password-based max

207
00:09:35,519 --> 00:09:39,519
we do not deprecate it as it is

208
00:09:39,519 --> 00:09:42,000
yes specifically

209
00:09:42,000 --> 00:09:47,360
introduced in crmf and used in cmp

210
00:09:47,360 --> 00:09:49,519
quite widely

211
00:09:49,519 --> 00:09:52,959
and we just introduced

212
00:09:52,959 --> 00:09:56,560
this year an alternative pb mach 1

213
00:09:56,560 --> 00:09:58,320
in the update

214
00:09:58,320 --> 00:10:00,880
rus provided to crmf

215
00:10:00,880 --> 00:10:03,519
and therefore we

216
00:10:03,519 --> 00:10:05,120
keep it or

217
00:10:05,120 --> 00:10:07,600
propose to keep it as an option

218
00:10:07,600 --> 00:10:10,399
but state that it is recommended to use

219
00:10:10,399 --> 00:10:13,360
pbmek1

220
00:10:13,760 --> 00:10:15,120
are there

221
00:10:15,120 --> 00:10:16,800
any comments on

222
00:10:16,800 --> 00:10:18,640
on this

223
00:10:18,640 --> 00:10:23,279
slide on deprecating algorithms

224
00:10:27,839 --> 00:10:30,800
yeah sean please

225
00:10:30,800 --> 00:10:34,079
great good job let's do it

226
00:10:34,079 --> 00:10:36,000
okay

227
00:10:36,000 --> 00:10:38,320
thanks

228
00:10:38,720 --> 00:10:42,720
okay and next slide please

229
00:10:44,880 --> 00:10:47,920
this is the in the updated introduction

230
00:10:47,920 --> 00:10:50,079
um of section seven

231
00:10:50,079 --> 00:10:51,750
so roman um

232
00:10:51,750 --> 00:10:53,120
[Music]

233
00:10:53,120 --> 00:10:56,240
um commented that the

234
00:10:56,240 --> 00:10:59,200
current section seven introduction was

235
00:10:59,200 --> 00:11:00,959
too brief and not

236
00:11:00,959 --> 00:11:03,839
clear enough we worked on that

237
00:11:03,839 --> 00:11:05,120
and

238
00:11:05,120 --> 00:11:08,560
i even provided some some further update

239
00:11:08,560 --> 00:11:09,519
so

240
00:11:09,519 --> 00:11:12,480
in this introduction we said okay the

241
00:11:12,480 --> 00:11:14,800
first

242
00:11:15,519 --> 00:11:17,760
yeah first argument for

243
00:11:17,760 --> 00:11:20,240
for cryptographic strength is

244
00:11:20,240 --> 00:11:22,480
the algorithm and

245
00:11:22,480 --> 00:11:25,200
key size or key strengths of the keys

246
00:11:25,200 --> 00:11:28,079
and certificates that are to be managed

247
00:11:28,079 --> 00:11:30,959
using cmp

248
00:11:31,360 --> 00:11:34,720
and all other algorithms used

249
00:11:34,720 --> 00:11:37,440
in this pki management operation should

250
00:11:37,440 --> 00:11:39,440
be at least as strong

251
00:11:39,440 --> 00:11:43,200
as those keys that are managed

252
00:11:43,200 --> 00:11:45,920
finally of course the algorithm set is

253
00:11:45,920 --> 00:11:48,880
as strong or as weak as the weakest

254
00:11:48,880 --> 00:11:50,480
algorithm

255
00:11:50,480 --> 00:11:52,079
in in a set of

256
00:11:52,079 --> 00:11:54,240
different algorithms

257
00:11:54,240 --> 00:11:58,160
then the message protection consists of

258
00:11:58,160 --> 00:12:01,360
three different parts so

259
00:12:01,360 --> 00:12:04,000
typically cmp protection is either mac

260
00:12:04,000 --> 00:12:06,160
based or signature based

261
00:12:06,160 --> 00:12:08,120
therefore the

262
00:12:08,120 --> 00:12:09,440
[Music]

263
00:12:09,440 --> 00:12:10,399
entropy

264
00:12:10,399 --> 00:12:12,720
of the shared secret information of

265
00:12:12,720 --> 00:12:14,959
course is quite crucial

266
00:12:14,959 --> 00:12:18,720
but also the key and algorithms used for

267
00:12:18,720 --> 00:12:22,160
signature based protection

268
00:12:22,160 --> 00:12:25,279
if central key generation is used then

269
00:12:25,279 --> 00:12:26,880
of course the protection of the

270
00:12:26,880 --> 00:12:29,519
centrally generated keys

271
00:12:29,519 --> 00:12:31,600
is crucial

272
00:12:31,600 --> 00:12:32,639
and

273
00:12:32,639 --> 00:12:34,800
therefore on the one hand the key

274
00:12:34,800 --> 00:12:37,040
management technique

275
00:12:37,040 --> 00:12:38,720
and on the other hand

276
00:12:38,720 --> 00:12:41,760
the symmetric encryption of a content

277
00:12:41,760 --> 00:12:44,320
encryption key or of the private key

278
00:12:44,320 --> 00:12:47,360
is is crucial

279
00:12:47,360 --> 00:12:49,200
but finally to

280
00:12:49,200 --> 00:12:50,959
to avoid

281
00:12:50,959 --> 00:12:54,079
to to over consume resources of the

282
00:12:54,079 --> 00:12:56,719
devices

283
00:12:57,120 --> 00:13:00,079
it is recommended to

284
00:13:00,079 --> 00:13:02,399
make use of an algorithm set that is

285
00:13:02,399 --> 00:13:04,079
kind of balanced

286
00:13:04,079 --> 00:13:06,720
and examples for this

287
00:13:06,720 --> 00:13:08,420
i would like to

288
00:13:08,420 --> 00:13:09,839
[Music]

289
00:13:09,839 --> 00:13:13,120
provide on or give an example on how to

290
00:13:13,120 --> 00:13:17,519
provide this on the next slide please

291
00:13:17,839 --> 00:13:19,040
so this is

292
00:13:19,040 --> 00:13:23,200
a approach we discussed in the group of

293
00:13:23,200 --> 00:13:25,519
editors

294
00:13:25,519 --> 00:13:28,160
this focuses on the bits of security in

295
00:13:28,160 --> 00:13:29,680
the first column

296
00:13:29,680 --> 00:13:30,959
and then

297
00:13:30,959 --> 00:13:31,760
the

298
00:13:31,760 --> 00:13:35,440
key size or algorithm of the

299
00:13:35,440 --> 00:13:38,480
keys to be managed

300
00:13:38,480 --> 00:13:40,399
in the next column there is cmp

301
00:13:40,399 --> 00:13:43,760
protection which is indicated with these

302
00:13:43,760 --> 00:13:44,560
two

303
00:13:44,560 --> 00:13:48,199
algorithm identifiers

304
00:13:48,240 --> 00:13:51,040
the next which is typically

305
00:13:51,040 --> 00:13:55,519
signature based or mac based protection

306
00:13:55,519 --> 00:13:59,680
the next two columns focus just on

307
00:13:59,680 --> 00:14:01,680
central key generation

308
00:14:01,680 --> 00:14:03,920
where we have one column on key

309
00:14:03,920 --> 00:14:06,160
management techniques and one column of

310
00:14:06,160 --> 00:14:08,240
key on key wrapping and symmetric

311
00:14:08,240 --> 00:14:10,800
encryption

312
00:14:14,839 --> 00:14:18,399
so this could be one

313
00:14:18,399 --> 00:14:21,519
um table to add to section seven

314
00:14:21,519 --> 00:14:22,880
introduction

315
00:14:22,880 --> 00:14:24,160
which

316
00:14:24,160 --> 00:14:26,590
kind of points out what um

317
00:14:26,590 --> 00:14:27,839
[Music]

318
00:14:27,839 --> 00:14:31,040
balanced set of algorithms could mean

319
00:14:31,040 --> 00:14:33,040
with regard to cmp

320
00:14:33,040 --> 00:14:35,519
usage

321
00:14:36,639 --> 00:14:39,600
next slide please

322
00:14:41,040 --> 00:14:45,120
this is an alternative proposal

323
00:14:45,120 --> 00:14:48,399
looks a little bit leaner maybe is not

324
00:14:48,399 --> 00:14:49,839
fully

325
00:14:49,839 --> 00:14:51,760
complete but

326
00:14:51,760 --> 00:14:54,720
this does not focus on

327
00:14:54,720 --> 00:14:57,680
on the parts of cmp pki management

328
00:14:57,680 --> 00:14:59,920
operations but on

329
00:14:59,920 --> 00:15:02,880
kind of algorithm types

330
00:15:02,880 --> 00:15:04,639
and

331
00:15:04,639 --> 00:15:05,839
therefore

332
00:15:05,839 --> 00:15:08,639
would need to be

333
00:15:08,639 --> 00:15:10,800
kind of

334
00:15:10,800 --> 00:15:13,839
yeah applied on cmp

335
00:15:13,839 --> 00:15:16,800
a usage then

336
00:15:16,959 --> 00:15:19,680
so the question from the authors would

337
00:15:19,680 --> 00:15:21,920
be

338
00:15:21,920 --> 00:15:24,399
what does a group think about adding

339
00:15:24,399 --> 00:15:28,079
such a table to section 7

340
00:15:28,079 --> 00:15:29,120
and

341
00:15:29,120 --> 00:15:30,480
which

342
00:15:30,480 --> 00:15:34,240
table would be preferred

343
00:15:37,120 --> 00:15:41,519
roman proposes to take both

344
00:15:41,519 --> 00:15:44,800
we could do that of course

345
00:15:45,360 --> 00:15:49,279
well i think the table is helpful

346
00:15:49,839 --> 00:15:51,600
i think the one that

347
00:15:51,600 --> 00:15:54,800
fits best in ascii art is the one that

348
00:15:54,800 --> 00:15:58,560
makes the most sense but

349
00:15:59,040 --> 00:16:01,680
that that's uh that will be especially i

350
00:16:01,680 --> 00:16:04,320
leave it to the editors

351
00:16:04,320 --> 00:16:07,320
exactly

352
00:16:11,680 --> 00:16:14,480
roman says use svg

353
00:16:14,480 --> 00:16:16,160
yes

354
00:16:16,160 --> 00:16:17,120
but

355
00:16:17,120 --> 00:16:19,600
yeah you still have to end up creating

356
00:16:19,600 --> 00:16:22,480
an ascii version at some point uh

357
00:16:22,480 --> 00:16:24,800
sean then deb

358
00:16:24,800 --> 00:16:26,399
yeah hi i just wanted to echo what russ

359
00:16:26,399 --> 00:16:28,160
said i think it's a good idea to to put

360
00:16:28,160 --> 00:16:29,600
this in i think this is an entirely sane

361
00:16:29,600 --> 00:16:31,040
approach to kind of

362
00:16:31,040 --> 00:16:32,720
make it matchy-matchy to line up the

363
00:16:32,720 --> 00:16:35,199
bits of security with the algorithm so i

364
00:16:35,199 --> 00:16:37,519
i to which one you should include i'll

365
00:16:37,519 --> 00:16:40,079
leave that to you

366
00:16:41,120 --> 00:16:43,199
okay thanks

367
00:16:43,199 --> 00:16:45,040
so unless you can reference something

368
00:16:45,040 --> 00:16:47,519
that already has it already laid out in

369
00:16:47,519 --> 00:16:49,040
a nice table like that i don't know

370
00:16:49,040 --> 00:16:50,720
whether nist has anything like that i

371
00:16:50,720 --> 00:16:52,160
don't know whether you have access to

372
00:16:52,160 --> 00:16:53,759
anything like that

373
00:16:53,759 --> 00:16:57,040
we have references to to nist

374
00:16:57,040 --> 00:16:58,399
and to

375
00:16:58,399 --> 00:16:59,519
ecrypt

376
00:16:59,519 --> 00:17:00,720
which which

377
00:17:00,720 --> 00:17:04,160
has some input which we already used

378
00:17:04,160 --> 00:17:08,160
there is also some similar approach for

379
00:17:08,160 --> 00:17:09,520
i think

380
00:17:09,520 --> 00:17:14,559
using names named curves with x509

381
00:17:14,640 --> 00:17:17,280
which we also use but

382
00:17:17,280 --> 00:17:19,839
there are some more algorithms

383
00:17:19,839 --> 00:17:20,720
we

384
00:17:20,720 --> 00:17:23,760
yeah we actually didn't find a proper

385
00:17:23,760 --> 00:17:25,439
complete source

386
00:17:25,439 --> 00:17:28,720
for such information

387
00:17:31,360 --> 00:17:33,440
okay i'm hearing that everybody thinks

388
00:17:33,440 --> 00:17:36,320
the table is a good idea and that

389
00:17:36,320 --> 00:17:38,080
they leave it to the editors to figure

390
00:17:38,080 --> 00:17:40,879
out how to do it

391
00:17:41,919 --> 00:17:43,440
okay

392
00:17:43,440 --> 00:17:45,760
thanks then

393
00:17:45,760 --> 00:17:48,640
we will go ahead and i would propose an

394
00:17:48,640 --> 00:17:49,600
update

395
00:17:49,600 --> 00:17:53,440
or submit an update of cmp algorithms

396
00:17:53,440 --> 00:17:56,160
yeah hopefully by end of this week

397
00:17:56,160 --> 00:18:00,160
incorporating the changes the proposed

398
00:18:00,160 --> 00:18:01,360
tables

399
00:18:01,360 --> 00:18:05,200
and would be happy to to get feedback

400
00:18:05,200 --> 00:18:06,240
um

401
00:18:06,240 --> 00:18:08,080
yeah also on the tables if there is

402
00:18:08,080 --> 00:18:09,600
something

403
00:18:09,600 --> 00:18:11,280
we did not

404
00:18:11,280 --> 00:18:12,799
catch

405
00:18:12,799 --> 00:18:16,480
or specify correctly

406
00:18:17,840 --> 00:18:20,080
okay

407
00:18:22,160 --> 00:18:24,880
and this is it

408
00:18:24,960 --> 00:18:27,520
or maybe there is one next slide i don't

409
00:18:27,520 --> 00:18:29,360
know was that something no i think that

410
00:18:29,360 --> 00:18:31,200
was it okay

411
00:18:31,200 --> 00:18:33,440
thanks

412
00:18:33,440 --> 00:18:36,160
okay dkg is there anything to say about

413
00:18:36,160 --> 00:18:39,160
samples

414
00:18:44,240 --> 00:18:46,720
go ahead

415
00:18:51,600 --> 00:18:52,880
can you hear me

416
00:18:52,880 --> 00:18:54,400
yes

417
00:18:54,400 --> 00:18:58,559
great um there's been a review uh just

418
00:18:58,559 --> 00:18:59,760
this past week

419
00:18:59,760 --> 00:19:02,080
um from the area directors which

420
00:19:02,080 --> 00:19:04,080
identified a few minor textual changes

421
00:19:04,080 --> 00:19:05,919
i'm actually um

422
00:19:05,919 --> 00:19:08,000
about to reply to that on list

423
00:19:08,000 --> 00:19:10,400
uh i don't see any

424
00:19:10,400 --> 00:19:12,160
um

425
00:19:12,160 --> 00:19:14,080
any concerns but the i think that i

426
00:19:14,080 --> 00:19:16,480
think it's moving forward in the

427
00:19:16,480 --> 00:19:20,000
larger review space now

428
00:19:23,440 --> 00:19:26,480
okay roman go ahead

429
00:19:26,640 --> 00:19:28,559
i've clarified the document's in really

430
00:19:28,559 --> 00:19:30,320
good shape it's actually an itf last

431
00:19:30,320 --> 00:19:32,879
call already

432
00:19:35,039 --> 00:19:36,840
okay very

433
00:19:36,840 --> 00:19:40,000
good all right so i i saw that there was

434
00:19:40,000 --> 00:19:42,559
one uh

435
00:19:42,559 --> 00:19:44,480
i don't know error or something in one

436
00:19:44,480 --> 00:19:47,600
of the formatting but uh

437
00:19:47,600 --> 00:19:48,880
good just good to hear that we're

438
00:19:48,880 --> 00:19:52,640
getting more eyes on it

439
00:19:52,640 --> 00:19:55,280
okay so the next thing on the agenda is

440
00:19:55,280 --> 00:19:57,440
the cmp updates

441
00:19:57,440 --> 00:19:59,120
and the

442
00:19:59,120 --> 00:20:01,360
single slide deck for that and the

443
00:20:01,360 --> 00:20:04,918
lightweight profile

444
00:20:09,679 --> 00:20:11,919
okay hendrick you're back

445
00:20:11,919 --> 00:20:14,000
so here i am

446
00:20:14,000 --> 00:20:16,640
so this is a slide deck on cmp updates

447
00:20:16,640 --> 00:20:18,880
and lightweight profile next slide

448
00:20:18,880 --> 00:20:21,840
please

449
00:20:22,720 --> 00:20:25,679
so what happened since last itf on cmp

450
00:20:25,679 --> 00:20:26,720
updates

451
00:20:26,720 --> 00:20:27,679
so

452
00:20:27,679 --> 00:20:28,960
thanks to

453
00:20:28,960 --> 00:20:30,960
john gray's um

454
00:20:30,960 --> 00:20:32,720
yeah

455
00:20:32,720 --> 00:20:35,760
intense review and very valuable

456
00:20:35,760 --> 00:20:38,559
comments and good discussions

457
00:20:38,559 --> 00:20:40,480
uh in the last weeks

458
00:20:40,480 --> 00:20:41,360
we

459
00:20:41,360 --> 00:20:44,640
yeah added into the list of of authors

460
00:20:44,640 --> 00:20:47,280
so thanks to john

461
00:20:47,280 --> 00:20:49,760
we fixed erratas

462
00:20:49,760 --> 00:20:50,559
on

463
00:20:50,559 --> 00:20:52,080
4210

464
00:20:52,080 --> 00:20:55,840
which were on in in the backlog

465
00:20:55,840 --> 00:20:57,919
and yeah

466
00:20:57,919 --> 00:21:01,679
mainly minor editorial nets

467
00:21:01,679 --> 00:21:04,400
we moved as discussed the

468
00:21:04,400 --> 00:21:06,640
hash elks field in the third conf

469
00:21:06,640 --> 00:21:10,400
message to the end of the structure

470
00:21:10,799 --> 00:21:12,720
we

471
00:21:12,720 --> 00:21:14,720
added a new

472
00:21:14,720 --> 00:21:17,600
crl update retrieved retrieval support

473
00:21:17,600 --> 00:21:19,200
message

474
00:21:19,200 --> 00:21:23,520
to cmp update so introduced a new

475
00:21:23,520 --> 00:21:26,960
general message type finally

476
00:21:26,960 --> 00:21:27,919
and

477
00:21:27,919 --> 00:21:29,280
due to

478
00:21:29,280 --> 00:21:30,480
this

479
00:21:30,480 --> 00:21:33,200
containing

480
00:21:33,679 --> 00:21:36,400
the relevant input in the request

481
00:21:36,400 --> 00:21:38,640
message we also changed

482
00:21:38,640 --> 00:21:41,200
the root ca third

483
00:21:41,200 --> 00:21:42,240
message

484
00:21:42,240 --> 00:21:43,600
where we

485
00:21:43,600 --> 00:21:45,120
as of

486
00:21:45,120 --> 00:21:49,120
yeah then back then we contained the or

487
00:21:49,120 --> 00:21:50,720
transferred

488
00:21:50,720 --> 00:21:54,159
the old root ca certificate where we

489
00:21:54,159 --> 00:21:56,159
request an update for in the general

490
00:21:56,159 --> 00:21:57,600
info field

491
00:21:57,600 --> 00:22:00,320
and we switch this to

492
00:22:00,320 --> 00:22:03,120
transfer it in the request message

493
00:22:03,120 --> 00:22:06,879
in the body of the request message

494
00:22:08,159 --> 00:22:12,640
we extended as so as introduced or

495
00:22:12,640 --> 00:22:15,600
asked last itf

496
00:22:15,600 --> 00:22:17,280
we wanted to

497
00:22:17,280 --> 00:22:20,080
extend the polling mechanism

498
00:22:20,080 --> 00:22:23,760
in cmp currently 4210

499
00:22:23,760 --> 00:22:24,799
offers

500
00:22:24,799 --> 00:22:28,000
polling only for enrollment messages

501
00:22:28,000 --> 00:22:29,679
and we

502
00:22:29,679 --> 00:22:32,880
had the the requirement to provide also

503
00:22:32,880 --> 00:22:33,919
kind of

504
00:22:33,919 --> 00:22:35,679
handle delays

505
00:22:35,679 --> 00:22:38,240
for all kind of messages

506
00:22:38,240 --> 00:22:40,320
and

507
00:22:40,320 --> 00:22:42,640
last itf we

508
00:22:42,640 --> 00:22:43,760
sketched

509
00:22:43,760 --> 00:22:45,280
one approach

510
00:22:45,280 --> 00:22:46,559
and

511
00:22:46,559 --> 00:22:48,159
we worked on that

512
00:22:48,159 --> 00:22:52,400
also with discussion um with with john

513
00:22:52,400 --> 00:22:55,679
and proposed um

514
00:22:55,679 --> 00:22:58,400
yeah an update on extension of the

515
00:22:58,400 --> 00:23:01,360
existing polling mechanism i will give

516
00:23:01,360 --> 00:23:05,199
details on the next slide on that

517
00:23:05,679 --> 00:23:08,640
so we updated the version handling

518
00:23:08,640 --> 00:23:11,280
we shifted some security considerations

519
00:23:11,280 --> 00:23:11,520
to

520
00:23:11,520 --> 00:23:13,440
[Music]

521
00:23:13,440 --> 00:23:17,679
from lightweight profile to cmp updates

522
00:23:17,679 --> 00:23:21,200
we yeah edited some nets in the asm1

523
00:23:21,200 --> 00:23:23,600
module and we

524
00:23:23,600 --> 00:23:25,200
switched from

525
00:23:25,200 --> 00:23:28,000
or re reword it from

526
00:23:28,000 --> 00:23:30,400
transport to transfer

527
00:23:30,400 --> 00:23:32,000
mainly in

528
00:23:32,000 --> 00:23:33,280
the

529
00:23:33,280 --> 00:23:37,039
the section 7 section 6

530
00:23:37,039 --> 00:23:40,000
as this is more appropriate

531
00:23:40,000 --> 00:23:44,400
when talking about http or co-op

532
00:23:44,400 --> 00:23:47,279
next slide please

533
00:23:48,000 --> 00:23:48,799
so

534
00:23:48,799 --> 00:23:51,600
what else is to do

535
00:23:51,600 --> 00:23:53,840
in cmp updates

536
00:23:53,840 --> 00:23:57,679
we need to register oids for the new crl

537
00:23:57,679 --> 00:23:59,600
update retrieval

538
00:23:59,600 --> 00:24:00,960
and as

539
00:24:00,960 --> 00:24:02,799
we

540
00:24:02,799 --> 00:24:07,279
changed the root ca third update

541
00:24:07,279 --> 00:24:11,760
mechanism we would like to to reorder

542
00:24:11,760 --> 00:24:13,200
some of the

543
00:24:13,200 --> 00:24:16,400
pre-registered oids but i don't know

544
00:24:16,400 --> 00:24:19,200
whether this is is possible if not

545
00:24:19,200 --> 00:24:22,080
of course we can can stick to the to the

546
00:24:22,080 --> 00:24:25,360
ordering as of today but maybe rust we

547
00:24:25,360 --> 00:24:26,799
can

548
00:24:26,799 --> 00:24:29,039
what do you mean by reorder change the

549
00:24:29,039 --> 00:24:31,520
values

550
00:24:31,520 --> 00:24:33,600
yeah we have i think

551
00:24:33,600 --> 00:24:36,799
six oids registered already

552
00:24:36,799 --> 00:24:39,760
and we would kind of

553
00:24:39,760 --> 00:24:41,600
rename one

554
00:24:41,600 --> 00:24:42,960
and

555
00:24:42,960 --> 00:24:45,600
place it in a

556
00:24:45,600 --> 00:24:47,279
switch the places

557
00:24:47,279 --> 00:24:49,520
with off two

558
00:24:49,520 --> 00:24:51,760
but i can mean yeah but what you mean by

559
00:24:51,760 --> 00:24:54,159
switch the places if you mean where they

560
00:24:54,159 --> 00:24:57,039
appear in the asn1 module

561
00:24:57,039 --> 00:24:59,039
that is fine

562
00:24:59,039 --> 00:25:01,360
uh change the the

563
00:25:01,360 --> 00:25:04,080
the bits that appear on the wire i would

564
00:25:04,080 --> 00:25:05,520
object

565
00:25:05,520 --> 00:25:07,840
okay

566
00:25:08,720 --> 00:25:12,640
i understood so okay we

567
00:25:12,640 --> 00:25:16,400
we put this um our proposal for the the

568
00:25:16,400 --> 00:25:19,200
ordering of the oids in the

569
00:25:19,200 --> 00:25:21,600
in the draft but um

570
00:25:21,600 --> 00:25:24,960
if you say changing the values um

571
00:25:24,960 --> 00:25:27,919
is no good a good idea then we can can

572
00:25:27,919 --> 00:25:31,120
stick to what we have

573
00:25:34,080 --> 00:25:35,679
the point of getting the early

574
00:25:35,679 --> 00:25:38,880
assignments was to not change the price

575
00:25:38,880 --> 00:25:41,039
yeah exactly okay

576
00:25:41,039 --> 00:25:42,720
uh i don't want to

577
00:25:42,720 --> 00:25:45,600
dwell on that but

578
00:25:45,600 --> 00:25:47,679
we have a lot of

579
00:25:47,679 --> 00:25:50,159
stuff to go through here

580
00:25:50,159 --> 00:25:54,520
okay so next slide please

581
00:25:56,080 --> 00:25:58,240
lightweight cmp profile what happened

582
00:25:58,240 --> 00:26:01,840
since last itf so mainly we

583
00:26:01,840 --> 00:26:02,220
um

584
00:26:02,220 --> 00:26:03,679
[Music]

585
00:26:03,679 --> 00:26:06,080
specified all that what

586
00:26:06,080 --> 00:26:09,200
we prepared in cmp updates

587
00:26:09,200 --> 00:26:13,039
in more details and profiled in the

588
00:26:13,039 --> 00:26:15,279
lightweight cmp profile

589
00:26:15,279 --> 00:26:16,960
we also added

590
00:26:16,960 --> 00:26:22,240
references to to sntp csr and brisky ae

591
00:26:22,240 --> 00:26:24,480
to the lightwide profile to the

592
00:26:24,480 --> 00:26:27,360
introduction main mainly

593
00:26:27,360 --> 00:26:28,240
we

594
00:26:28,240 --> 00:26:29,840
updated

595
00:26:29,840 --> 00:26:30,640
this

596
00:26:30,640 --> 00:26:34,320
root ca3 update retrieval

597
00:26:34,320 --> 00:26:36,400
mechanism

598
00:26:36,400 --> 00:26:40,080
we simplified at one place the

599
00:26:40,080 --> 00:26:42,640
sender recipient non-handling together

600
00:26:42,640 --> 00:26:46,960
with delayed delivery so with polling

601
00:26:47,039 --> 00:26:48,960
we

602
00:26:48,960 --> 00:26:51,360
added this new support message on crl

603
00:26:51,360 --> 00:26:54,320
update retrieval

604
00:26:54,559 --> 00:26:55,360
we

605
00:26:55,360 --> 00:26:58,240
generalized this delayed enrollment to a

606
00:26:58,240 --> 00:27:00,799
delayed delivery for all kind of

607
00:27:00,799 --> 00:27:02,799
messages and also

608
00:27:02,799 --> 00:27:05,760
updated with this regard the end entity

609
00:27:05,760 --> 00:27:08,559
state machine

610
00:27:09,039 --> 00:27:12,000
we updated

611
00:27:12,000 --> 00:27:14,640
section 6

612
00:27:14,640 --> 00:27:17,440
a little bit with regard to

613
00:27:17,440 --> 00:27:21,360
delayed message transferal and also with

614
00:27:21,360 --> 00:27:23,279
the wording topic

615
00:27:23,279 --> 00:27:26,080
switching from transport to transfer

616
00:27:26,080 --> 00:27:28,000
where appropriate

617
00:27:28,000 --> 00:27:30,640
we moved some security considerations as

618
00:27:30,640 --> 00:27:31,440
set

619
00:27:31,440 --> 00:27:33,600
and we edited some

620
00:27:33,600 --> 00:27:36,480
yeah minor topics

621
00:27:36,480 --> 00:27:37,279
like

622
00:27:37,279 --> 00:27:39,360
capitalizing pki

623
00:27:39,360 --> 00:27:43,600
never mind um next slide please

624
00:27:43,840 --> 00:27:46,320
this is the approach we

625
00:27:46,320 --> 00:27:51,120
specify in the current draft cmp updates

626
00:27:51,120 --> 00:27:52,000
and

627
00:27:52,000 --> 00:27:53,760
in more detail than the lightweight

628
00:27:53,760 --> 00:27:55,120
profile

629
00:27:55,120 --> 00:27:57,440
on the left hand side you see how

630
00:27:57,440 --> 00:27:59,440
polling works today

631
00:27:59,440 --> 00:28:03,120
just for enrollment messages ircr

632
00:28:03,120 --> 00:28:04,880
and kur

633
00:28:04,880 --> 00:28:07,840
and on the right hand side

634
00:28:07,840 --> 00:28:11,200
the updated version it also works for

635
00:28:11,200 --> 00:28:13,919
the other message types used in the

636
00:28:13,919 --> 00:28:15,840
lightwhite

637
00:28:15,840 --> 00:28:18,080
the mechanism is for

638
00:28:18,080 --> 00:28:20,480
in an ipcpup

639
00:28:20,480 --> 00:28:23,840
message we can have a weighting status

640
00:28:23,840 --> 00:28:25,919
in the certificate response

641
00:28:25,919 --> 00:28:27,440
body

642
00:28:27,440 --> 00:28:30,240
we do not have this in other types of

643
00:28:30,240 --> 00:28:33,120
messages but we could send instead an

644
00:28:33,120 --> 00:28:34,399
error message

645
00:28:34,399 --> 00:28:38,480
which can transfer a status weighting

646
00:28:38,480 --> 00:28:41,120
doing so

647
00:28:41,120 --> 00:28:42,320
the

648
00:28:42,320 --> 00:28:45,360
polling would be initiated for the

649
00:28:45,360 --> 00:28:47,919
non-enrollment kind of messages with

650
00:28:47,919 --> 00:28:50,399
this error message containing status

651
00:28:50,399 --> 00:28:51,919
weighting

652
00:28:51,919 --> 00:28:55,120
and then the polling mechanism kind of

653
00:28:55,120 --> 00:28:57,760
goes as usual

654
00:28:57,760 --> 00:28:58,399
for

655
00:28:58,399 --> 00:29:01,520
enrollment the certificate request id in

656
00:29:01,520 --> 00:29:04,799
the poll message is the one of the

657
00:29:04,799 --> 00:29:07,600
certificate request of course

658
00:29:07,600 --> 00:29:11,919
for all other messages it's a minus one

659
00:29:11,919 --> 00:29:15,520
as paul certificate request id

660
00:29:15,520 --> 00:29:19,520
which is also um available today

661
00:29:19,520 --> 00:29:22,880
for for those cases where no

662
00:29:22,880 --> 00:29:25,840
certificate request

663
00:29:25,840 --> 00:29:28,640
is available in the request message

664
00:29:28,640 --> 00:29:33,120
and then the polling mechanism goes as

665
00:29:33,120 --> 00:29:35,679
currently also as usual

666
00:29:35,679 --> 00:29:39,600
no further changes needed so the

667
00:29:39,600 --> 00:29:43,360
only thing we added mainly is to

668
00:29:43,360 --> 00:29:45,760
introduce the error message with status

669
00:29:45,760 --> 00:29:48,720
waiting to initiate polling for

670
00:29:48,720 --> 00:29:52,159
non-enrollment messages

671
00:29:52,720 --> 00:29:56,159
any comments on this

672
00:30:00,559 --> 00:30:02,559
seems okay to me

673
00:30:02,559 --> 00:30:06,360
the next slide please

674
00:30:08,159 --> 00:30:10,720
this is mainly what was discussed on the

675
00:30:10,720 --> 00:30:14,640
mailing list so um introduction of two

676
00:30:14,640 --> 00:30:17,039
new general message types

677
00:30:17,039 --> 00:30:20,840
um one the request message providing

678
00:30:20,840 --> 00:30:25,440
um a status of a crl

679
00:30:25,440 --> 00:30:27,679
which contains an

680
00:30:27,679 --> 00:30:29,840
or less a pointer to source

681
00:30:29,840 --> 00:30:32,399
and a timestamp

682
00:30:32,399 --> 00:30:34,480
of the crl

683
00:30:34,480 --> 00:30:38,080
and in the response message then

684
00:30:38,080 --> 00:30:41,279
an updated crl or no update if there is

685
00:30:41,279 --> 00:30:42,159
no

686
00:30:42,159 --> 00:30:47,200
more current more recent crl available

687
00:30:48,640 --> 00:30:51,840
next slide please

688
00:30:53,440 --> 00:30:55,760
what needs to be done

689
00:30:55,760 --> 00:30:56,880
from

690
00:30:56,880 --> 00:30:58,559
the text is

691
00:30:58,559 --> 00:31:00,240
kind of complete

692
00:31:00,240 --> 00:31:03,519
from one feedback from roman

693
00:31:03,519 --> 00:31:05,360
we need to do a

694
00:31:05,360 --> 00:31:07,840
minor or a little update in

695
00:31:07,840 --> 00:31:09,720
section

696
00:31:09,720 --> 00:31:12,960
4.1.6.1 which is

697
00:31:12,960 --> 00:31:14,640
the key agreement key management

698
00:31:14,640 --> 00:31:18,159
technique for centrally generated keys

699
00:31:18,159 --> 00:31:19,919
but that's it

700
00:31:19,919 --> 00:31:21,519
for the

701
00:31:21,519 --> 00:31:23,360
moment

702
00:31:23,360 --> 00:31:26,000
so this is it with a presentation any

703
00:31:26,000 --> 00:31:28,399
comments

704
00:31:30,720 --> 00:31:35,840
so my big question is does anyone um

705
00:31:35,840 --> 00:31:38,799
have concerns with going to working

706
00:31:38,799 --> 00:31:40,799
group last call

707
00:31:40,799 --> 00:31:42,480
when the author

708
00:31:42,480 --> 00:31:47,799
after the authors make the next update

709
00:31:54,480 --> 00:31:57,360
okay i'm not hearing anyone so uh let's

710
00:31:57,360 --> 00:32:00,320
plan to do that you guys make the the

711
00:32:00,320 --> 00:32:02,960
changes that you've talked about uh here

712
00:32:02,960 --> 00:32:05,760
on this slide and then we'll do

713
00:32:05,760 --> 00:32:06,720
uh

714
00:32:06,720 --> 00:32:07,890
the call do you

715
00:32:07,890 --> 00:32:09,279
[Music]

716
00:32:09,279 --> 00:32:11,519
have a preference for an order or do you

717
00:32:11,519 --> 00:32:12,840
want them to go

718
00:32:12,840 --> 00:32:16,720
together i think it's best to

719
00:32:16,720 --> 00:32:20,320
take cmp updates first

720
00:32:20,320 --> 00:32:22,960
finally this is the basis

721
00:32:22,960 --> 00:32:23,919
of

722
00:32:23,919 --> 00:32:26,000
syntax changes

723
00:32:26,000 --> 00:32:28,000
which is then used in the lightwide

724
00:32:28,000 --> 00:32:29,360
profile

725
00:32:29,360 --> 00:32:32,080
therefore i think this is the best order

726
00:32:32,080 --> 00:32:34,159
anyhow all three

727
00:32:34,159 --> 00:32:38,159
drafts kind of are interrelated

728
00:32:38,159 --> 00:32:41,039
so i would propose

729
00:32:41,039 --> 00:32:42,960
not publishing

730
00:32:42,960 --> 00:32:44,960
any of the three

731
00:32:44,960 --> 00:32:48,559
before review of all three is done

732
00:32:48,559 --> 00:32:51,440
just to be sure that if something pops

733
00:32:51,440 --> 00:32:52,960
up

734
00:32:52,960 --> 00:32:56,880
which has effect on the other drafts

735
00:32:56,880 --> 00:33:00,720
we did not publish too early

736
00:33:00,720 --> 00:33:04,080
okay that makes sense to me

737
00:33:05,919 --> 00:33:08,159
anyone else have comments on these two

738
00:33:08,159 --> 00:33:11,159
documents

739
00:33:16,640 --> 00:33:19,519
okay then we'll start uh the working

740
00:33:19,519 --> 00:33:21,840
group last call after you do one more

741
00:33:21,840 --> 00:33:23,360
update

742
00:33:23,360 --> 00:33:26,320
yeah thanks great

743
00:33:26,320 --> 00:33:27,600
and

744
00:33:27,600 --> 00:33:31,760
now we'll go on to the next presentation

745
00:33:32,080 --> 00:33:34,399
i think dkg is doing the

746
00:33:34,399 --> 00:33:39,320
uh speaking on the header protection

747
00:33:50,480 --> 00:33:53,120
i'm not seeing it

748
00:33:53,120 --> 00:33:56,439
why not

749
00:34:12,000 --> 00:34:14,399
i uploaded the slides but i don't see

750
00:34:14,399 --> 00:34:16,638
them

751
00:34:18,719 --> 00:34:23,799
let me uh do it this way then

752
00:34:41,440 --> 00:34:44,440
uh

753
00:35:09,920 --> 00:35:12,160
now

754
00:35:12,160 --> 00:35:14,160
okay go ahead

755
00:35:14,160 --> 00:35:18,000
hi folks um sorry for being offline for

756
00:35:18,000 --> 00:35:20,240
a second there um

757
00:35:20,240 --> 00:35:22,320
so the lamps email header protection

758
00:35:22,320 --> 00:35:26,000
document has been uh stalled uh next

759
00:35:26,000 --> 00:35:29,320
slide please

760
00:35:31,119 --> 00:35:32,800
um so

761
00:35:32,800 --> 00:35:34,800
uh recap for folks who haven't looked at

762
00:35:34,800 --> 00:35:36,079
this in a while

763
00:35:36,079 --> 00:35:38,480
um the draft specifies at least two

764
00:35:38,480 --> 00:35:40,560
major options um

765
00:35:40,560 --> 00:35:41,760
for how to

766
00:35:41,760 --> 00:35:45,359
protect headers in signed messages and

767
00:35:45,359 --> 00:35:47,119
encrypted messages

768
00:35:47,119 --> 00:35:49,280
and it's been unclear how we select from

769
00:35:49,280 --> 00:35:51,520
them about what guidance we give for

770
00:35:51,520 --> 00:35:54,320
generation for generating

771
00:35:54,320 --> 00:35:56,839
encrypted or signed

772
00:35:56,839 --> 00:36:00,240
messages um in the last round we propose

773
00:36:00,240 --> 00:36:02,960
a list of criteria about specific

774
00:36:02,960 --> 00:36:05,839
problems we might see um

775
00:36:05,839 --> 00:36:07,760
and uh we got

776
00:36:07,760 --> 00:36:10,880
basically no feedback

777
00:36:11,520 --> 00:36:15,280
so uh yeah so next slide please

778
00:36:15,280 --> 00:36:16,960
this presentation i basically just want

779
00:36:16,960 --> 00:36:19,520
to suggest a way to get unstuck

780
00:36:19,520 --> 00:36:20,480
um

781
00:36:20,480 --> 00:36:22,160
and see if folks have other suggestions

782
00:36:22,160 --> 00:36:24,480
for how we might get unstuck um i think

783
00:36:24,480 --> 00:36:26,000
one of the things that we've been seeing

784
00:36:26,000 --> 00:36:27,040
is that

785
00:36:27,040 --> 00:36:31,200
um of the proposals that are specified

786
00:36:31,200 --> 00:36:34,000
um any of them will work uh for new

787
00:36:34,000 --> 00:36:36,800
clients that all cooperate um and the

788
00:36:36,800 --> 00:36:38,640
concerns we've been stumbling over is

789
00:36:38,640 --> 00:36:41,280
what happens how protected messages are

790
00:36:41,280 --> 00:36:43,440
handled by legacy clients

791
00:36:43,440 --> 00:36:44,800
i see bernie in the cube bernie you want

792
00:36:44,800 --> 00:36:47,280
to jump up

793
00:36:51,520 --> 00:36:54,720
okay just spin on your knives yeah i

794
00:36:54,720 --> 00:36:57,520
pretty much agree with the statement

795
00:36:57,520 --> 00:36:59,520
uh daniel made

796
00:36:59,520 --> 00:37:01,359
and i've been thinking about the way

797
00:37:01,359 --> 00:37:03,520
forward which i would like to throw into

798
00:37:03,520 --> 00:37:05,760
this discussion not necessarily that i'm

799
00:37:05,760 --> 00:37:08,320
fully behind that but

800
00:37:08,320 --> 00:37:11,680
to summarize we have no clear we know in

801
00:37:11,680 --> 00:37:15,599
a way between the two between the legacy

802
00:37:15,599 --> 00:37:17,760
between the wrapped and injected

803
00:37:17,760 --> 00:37:19,760
message scheme

804
00:37:19,760 --> 00:37:22,400
there is sometimes the interrupt and

805
00:37:22,400 --> 00:37:24,640
sometimes they check that the scheme is

806
00:37:24,640 --> 00:37:25,680
better

807
00:37:25,680 --> 00:37:27,680
so to change the standard this is

808
00:37:27,680 --> 00:37:29,520
basically two weak argument if you

809
00:37:29,520 --> 00:37:31,119
change the standard two from wrapped to

810
00:37:31,119 --> 00:37:33,599
injected in more detailed if you have

811
00:37:33,599 --> 00:37:35,040
signed and encrypted the current

812
00:37:35,040 --> 00:37:37,839
standard dropped prevails

813
00:37:37,839 --> 00:37:39,440
it's

814
00:37:39,440 --> 00:37:43,040
overall better than injected

815
00:37:43,359 --> 00:37:45,280
and it's easily fixable because it's

816
00:37:45,280 --> 00:37:47,119
minor issues basically need to tell the

817
00:37:47,119 --> 00:37:49,599
clients to avoid that the use has to

818
00:37:49,599 --> 00:37:51,599
open an attachment

819
00:37:51,599 --> 00:37:53,920
designed only it looks a bit different

820
00:37:53,920 --> 00:37:56,240
there we make the difference between s

821
00:37:56,240 --> 00:37:58,960
mine capable and non-smart capable

822
00:37:58,960 --> 00:38:03,200
clients in s mime cables clients the two

823
00:38:03,200 --> 00:38:05,520
schemes they are more or less equal

824
00:38:05,520 --> 00:38:07,680
uh in one you have to open attachment in

825
00:38:07,680 --> 00:38:10,480
the autobahn uh is only protected it's

826
00:38:10,480 --> 00:38:12,880
only the unprotected subject shown in

827
00:38:12,880 --> 00:38:16,720
the injected so this is kind of

828
00:38:16,720 --> 00:38:18,720
balance i don't see any kind of

829
00:38:18,720 --> 00:38:20,320
prevailing in here

830
00:38:20,320 --> 00:38:22,960
for non-smine clients in case you have a

831
00:38:22,960 --> 00:38:24,640
client that doesn't understand any mess

832
00:38:24,640 --> 00:38:25,520
mime

833
00:38:25,520 --> 00:38:26,720
they are

834
00:38:26,720 --> 00:38:28,240
not only there and only in the

835
00:38:28,240 --> 00:38:30,400
multi-part scheme the injected message

836
00:38:30,400 --> 00:38:33,119
scheme has some advantage because you

837
00:38:33,119 --> 00:38:34,880
can make

838
00:38:34,880 --> 00:38:37,200
in this scheme you can make

839
00:38:37,200 --> 00:38:40,078
or reach more

840
00:38:41,119 --> 00:38:43,119
let's see more recipients that can

841
00:38:43,119 --> 00:38:45,359
actually see what you're right

842
00:38:45,359 --> 00:38:48,640
based on that i suggest to discuss about

843
00:38:48,640 --> 00:38:50,560
some compromise like which would

844
00:38:50,560 --> 00:38:52,880
basically be go on with the current

845
00:38:52,880 --> 00:38:54,720
standard which is wrapped

846
00:38:54,720 --> 00:38:56,960
not change anything here except

847
00:38:56,960 --> 00:38:59,520
clarifying and help

848
00:38:59,520 --> 00:39:02,400
fixing those clients that do

849
00:39:02,400 --> 00:39:05,119
require showing attachments

850
00:39:05,119 --> 00:39:07,520
however to help

851
00:39:07,520 --> 00:39:09,920
clients which i just described

852
00:39:09,920 --> 00:39:11,280
like legacy clients that don't

853
00:39:11,280 --> 00:39:15,119
understand mass mimes allow an option

854
00:39:15,119 --> 00:39:17,839
to use the injected message help scheme

855
00:39:17,839 --> 00:39:20,160
is multi-part signed

856
00:39:20,160 --> 00:39:22,880
for but this for sign only message

857
00:39:22,880 --> 00:39:24,720
only

858
00:39:24,720 --> 00:39:26,480
the default file would remain wrapped

859
00:39:26,480 --> 00:39:29,680
but for this case we would introduce the

860
00:39:29,680 --> 00:39:31,599
injected message head scheme

861
00:39:31,599 --> 00:39:33,280
i'm not sure that this got a bit clear

862
00:39:33,280 --> 00:39:35,520
but i think that could be a way out of

863
00:39:35,520 --> 00:39:37,520
this situation and

864
00:39:37,520 --> 00:39:41,400
hoping for comments here

865
00:39:43,920 --> 00:39:44,640
so

866
00:39:44,640 --> 00:39:46,880
uh thank you bernie that's a that's a

867
00:39:46,880 --> 00:39:48,240
useful suggestion it would be great to

868
00:39:48,240 --> 00:39:50,560
have that in in writing about what we

869
00:39:50,560 --> 00:39:52,079
specifically want

870
00:39:52,079 --> 00:39:54,000
um you know a proposal about how to move

871
00:39:54,000 --> 00:39:56,480
forward there um i i actually have a

872
00:39:56,480 --> 00:39:58,720
different set of uh

873
00:39:58,720 --> 00:40:00,960
so so my concern about

874
00:40:00,960 --> 00:40:01,920
um

875
00:40:01,920 --> 00:40:04,000
sticking with the standard as it's as

876
00:40:04,000 --> 00:40:05,440
written which is not currently

877
00:40:05,440 --> 00:40:07,280
implemented is that people have not been

878
00:40:07,280 --> 00:40:08,400
implementing it

879
00:40:08,400 --> 00:40:10,640
for some set of reasons and

880
00:40:10,640 --> 00:40:12,319
uh one of the reasons i think is that

881
00:40:12,319 --> 00:40:14,800
people are afraid of damaging how their

882
00:40:14,800 --> 00:40:17,440
messages show up on the other side so i

883
00:40:17,440 --> 00:40:19,040
wanted to propose a different in

884
00:40:19,040 --> 00:40:20,480
particular to legacy clients and when we

885
00:40:20,480 --> 00:40:22,560
say it's easy enough to fix

886
00:40:22,560 --> 00:40:25,040
i agree with you that i don't think it's

887
00:40:25,040 --> 00:40:26,720
actually these are hard problems to fix

888
00:40:26,720 --> 00:40:28,480
in male clients but we haven't seen

889
00:40:28,480 --> 00:40:29,760
folks fix them

890
00:40:29,760 --> 00:40:31,280
um and so just saying we just need to

891
00:40:31,280 --> 00:40:33,839
specify it better is is a troublesome so

892
00:40:33,839 --> 00:40:36,160
let me let me the slides actually have a

893
00:40:36,160 --> 00:40:37,920
separate proposal about how to evaluate

894
00:40:37,920 --> 00:40:38,880
these things that i think might be

895
00:40:38,880 --> 00:40:41,920
useful can we take the next um the next

896
00:40:41,920 --> 00:40:43,119
slide

897
00:40:43,119 --> 00:40:44,480
um

898
00:40:44,480 --> 00:40:46,079
and you know i'm hoping to hear some

899
00:40:46,079 --> 00:40:47,359
feedback from the rest of the working

900
00:40:47,359 --> 00:40:49,200
group about how we do this so this is a

901
00:40:49,200 --> 00:40:50,960
proposal this is my proposal for how we

902
00:40:50,960 --> 00:40:52,880
think about evaluating these

903
00:40:52,880 --> 00:40:54,640
um

904
00:40:54,640 --> 00:40:56,400
i think

905
00:40:56,400 --> 00:40:57,520
we could

906
00:40:57,520 --> 00:41:00,079
in this proposal

907
00:41:00,079 --> 00:41:03,040
aim for minimizing any change in

908
00:41:03,040 --> 00:41:05,680
experience for legacy clients is a

909
00:41:05,680 --> 00:41:07,359
legacy client shouldn't be able to

910
00:41:07,359 --> 00:41:09,599
really notice much of a difference

911
00:41:09,599 --> 00:41:10,880
between what they're doing right now

912
00:41:10,880 --> 00:41:12,720
with regular emails that have no header

913
00:41:12,720 --> 00:41:14,800
protection

914
00:41:14,800 --> 00:41:16,240
and emails that do have header

915
00:41:16,240 --> 00:41:17,760
protection so minimize the change in

916
00:41:17,760 --> 00:41:20,400
experience and that means also ignoring

917
00:41:20,400 --> 00:41:23,599
any security increase for legacy clients

918
00:41:23,599 --> 00:41:25,680
so if a legacy client

919
00:41:25,680 --> 00:41:27,440
could get a security increase by doing

920
00:41:27,440 --> 00:41:28,960
some additional

921
00:41:28,960 --> 00:41:30,960
you know with one of these schemes by

922
00:41:30,960 --> 00:41:33,359
doing some additional

923
00:41:33,359 --> 00:41:35,839
uh workarounds um

924
00:41:35,839 --> 00:41:37,119
or or

925
00:41:37,119 --> 00:41:37,920
uh

926
00:41:37,920 --> 00:41:39,359
you know interaction with the with the

927
00:41:39,359 --> 00:41:40,560
message

928
00:41:40,560 --> 00:41:41,920
and that gives you some sort of

929
00:41:41,920 --> 00:41:44,480
protections i'm i'm proposing here that

930
00:41:44,480 --> 00:41:46,640
we ignore security increases for legacy

931
00:41:46,640 --> 00:41:48,640
clients and let me if you go to the next

932
00:41:48,640 --> 00:41:50,400
slide let me explain why this is the

933
00:41:50,400 --> 00:41:51,760
proposal

934
00:41:51,760 --> 00:41:54,720
why i'm proposing this

935
00:41:55,760 --> 00:41:58,400
next slide

936
00:41:58,800 --> 00:42:00,800
can i drive the slides here there we go

937
00:42:00,800 --> 00:42:02,560
okay the rationale is

938
00:42:02,560 --> 00:42:05,359
um i want to incentivize

939
00:42:05,359 --> 00:42:07,839
clients to adopt this so we want to give

940
00:42:07,839 --> 00:42:09,839
clients that can adopt this a reason to

941
00:42:09,839 --> 00:42:12,160
adopt it that is give them the security

942
00:42:12,160 --> 00:42:14,839
benefit once they've adopted it

943
00:42:14,839 --> 00:42:19,520
um and uh and and hopefully this

944
00:42:19,520 --> 00:42:21,440
set of decisions will break us out of

945
00:42:21,440 --> 00:42:23,760
the existing log jam which is we have a

946
00:42:23,760 --> 00:42:26,319
specification nobody's implementing it

947
00:42:26,319 --> 00:42:27,200
um

948
00:42:27,200 --> 00:42:28,640
we're i think people are rightly

949
00:42:28,640 --> 00:42:31,280
concerned about what it will do

950
00:42:31,280 --> 00:42:33,520
and so if what we do is we say hey look

951
00:42:33,520 --> 00:42:35,599
if you adopt this your messages are

952
00:42:35,599 --> 00:42:37,040
going to get through just as likely as

953
00:42:37,040 --> 00:42:39,440
they are before

954
00:42:39,440 --> 00:42:41,680
and

955
00:42:41,920 --> 00:42:43,680
if you implement it on the receiving

956
00:42:43,680 --> 00:42:44,640
side

957
00:42:44,640 --> 00:42:46,640
um then you get additional your users

958
00:42:46,640 --> 00:42:48,960
get additional security benefits so it

959
00:42:48,960 --> 00:42:51,200
gives a clear incentive on both sides to

960
00:42:51,200 --> 00:42:52,319
adopt

961
00:42:52,319 --> 00:42:53,359
and hopefully that would break up the

962
00:42:53,359 --> 00:42:54,880
long term

963
00:42:54,880 --> 00:42:55,920
um

964
00:42:55,920 --> 00:42:59,680
so next slide please

965
00:42:59,680 --> 00:43:01,200
uh right so that's the that's my

966
00:43:01,200 --> 00:43:02,960
proposal um

967
00:43:02,960 --> 00:43:05,040
and we can run down what we think the

968
00:43:05,040 --> 00:43:06,800
outcome of that proposal would be i mean

969
00:43:06,800 --> 00:43:08,720
i have i have some guesses at it but i

970
00:43:08,720 --> 00:43:10,720
think it comes close to some of what

971
00:43:10,720 --> 00:43:13,200
bernie is proposing in terms of

972
00:43:13,200 --> 00:43:16,480
allowing different mechanisms

973
00:43:16,960 --> 00:43:19,520
so so

974
00:43:19,520 --> 00:43:22,640
i i think you're partly right but

975
00:43:22,640 --> 00:43:25,280
partly it's because the document

976
00:43:25,280 --> 00:43:27,200
contains two

977
00:43:27,200 --> 00:43:30,240
um approaches that we haven't sent a

978
00:43:30,240 --> 00:43:33,119
clear message to the community of what

979
00:43:33,119 --> 00:43:35,119
they should be implementing

980
00:43:35,119 --> 00:43:38,400
right so uh what i'm referring to is

981
00:43:38,400 --> 00:43:41,119
so bernie's bernie's claim earlier when

982
00:43:41,119 --> 00:43:43,119
what he just said was this doesn't

983
00:43:43,119 --> 00:43:45,040
warrant changing the standard right i

984
00:43:45,040 --> 00:43:46,720
think the document takes as a starting

985
00:43:46,720 --> 00:43:48,319
point the idea

986
00:43:48,319 --> 00:43:50,319
that um

987
00:43:50,319 --> 00:43:52,640
i'm forgetting now the number of s mine

988
00:43:52,640 --> 00:43:54,160
that said oh yeah here's how you protect

989
00:43:54,160 --> 00:43:56,400
headers you just wrap a message

990
00:43:56,400 --> 00:43:58,960
um that has been around for a long time

991
00:43:58,960 --> 00:44:00,560
even before this document was present

992
00:44:00,560 --> 00:44:03,440
and no one adopted it

993
00:44:03,440 --> 00:44:04,960
right people had the mechanism to do it

994
00:44:04,960 --> 00:44:08,400
and i think people were concerned about

995
00:44:08,400 --> 00:44:10,560
doing that um maybe they were just lazy

996
00:44:10,560 --> 00:44:11,760
maybe people don't care about the male

997
00:44:11,760 --> 00:44:13,440
user agents anymore in which case

998
00:44:13,440 --> 00:44:15,440
everything is hopeless

999
00:44:15,440 --> 00:44:17,280
uh but maybe they had good reason not to

1000
00:44:17,280 --> 00:44:19,599
adopt it and the the main reason i could

1001
00:44:19,599 --> 00:44:20,319
see

1002
00:44:20,319 --> 00:44:24,319
was the the effect on legacy clients

1003
00:44:25,119 --> 00:44:27,040
right well the previous one was

1004
00:44:27,040 --> 00:44:29,520
basically just

1005
00:44:29,520 --> 00:44:33,119
use uh rc 822 message

1006
00:44:33,119 --> 00:44:35,359
right encapsulate the whole thing

1007
00:44:35,359 --> 00:44:37,680
that's right and people didn't do that

1008
00:44:37,680 --> 00:44:39,119
right very few people

1009
00:44:39,119 --> 00:44:40,480
actually generate those

1010
00:44:40,480 --> 00:44:42,079
right and

1011
00:44:42,079 --> 00:44:44,480
it's i think it was the ui the fact that

1012
00:44:44,480 --> 00:44:46,960
it looks like a message inside a message

1013
00:44:46,960 --> 00:44:48,800
but that's

1014
00:44:48,800 --> 00:44:51,280
uh that's my guess i'm not an

1015
00:44:51,280 --> 00:44:53,119
implementer i'd love to hear from an

1016
00:44:53,119 --> 00:44:54,319
implementer

1017
00:44:54,319 --> 00:44:56,000
that that's my guess as well and that's

1018
00:44:56,000 --> 00:44:58,720
why i'm proposing that we can reduce

1019
00:44:58,720 --> 00:45:00,079
that fear

1020
00:45:00,079 --> 00:45:02,800
by picking a standard that will reduce

1021
00:45:02,800 --> 00:45:04,000
the

1022
00:45:04,000 --> 00:45:06,000
what happened like minimize any

1023
00:45:06,000 --> 00:45:08,000
experience for legacy clients in terms

1024
00:45:08,000 --> 00:45:10,079
of changes from a non-header protected

1025
00:45:10,079 --> 00:45:12,480
message

1026
00:45:12,800 --> 00:45:15,440
bernie right

1027
00:45:15,760 --> 00:45:18,480
um i'm not don't fully agree with the

1028
00:45:18,480 --> 00:45:22,000
conclusions here i think clicking

1029
00:45:22,000 --> 00:45:23,599
having a message in a message that you

1030
00:45:23,599 --> 00:45:25,200
can click and view

1031
00:45:25,200 --> 00:45:27,280
is not the issue having a message in a

1032
00:45:27,280 --> 00:45:29,359
message that you don't see like that you

1033
00:45:29,359 --> 00:45:31,280
just see gobbling garbage

1034
00:45:31,280 --> 00:45:33,440
i think this is the issue just to make

1035
00:45:33,440 --> 00:45:36,000
that clear

1036
00:45:37,280 --> 00:45:40,480
i think both of those are issues

1037
00:45:40,480 --> 00:45:42,880
michael

1038
00:45:42,960 --> 00:45:45,119
michael so we have existing

1039
00:45:45,119 --> 00:45:49,359
experience here uh with the uh rc 822

1040
00:45:49,359 --> 00:45:51,839
message wrapping that mailman does for

1041
00:45:51,839 --> 00:45:53,440
dmarc

1042
00:45:53,440 --> 00:45:54,319
right

1043
00:45:54,319 --> 00:45:56,319
um we've submitted this in the itf lists

1044
00:45:56,319 --> 00:45:58,560
and some other lists that i've run i've

1045
00:45:58,560 --> 00:45:59,599
done this

1046
00:45:59,599 --> 00:46:02,319
and universally um

1047
00:46:02,319 --> 00:46:03,920
it confuses

1048
00:46:03,920 --> 00:46:06,240
uh the less technical the user the more

1049
00:46:06,240 --> 00:46:08,560
they're confused by this

1050
00:46:08,560 --> 00:46:12,800
so that message attachment really is uh

1051
00:46:12,800 --> 00:46:15,440
this point a serious non-starter to me

1052
00:46:15,440 --> 00:46:17,760
for older older clients now if you're

1053
00:46:17,760 --> 00:46:19,119
going to tell me that that does not

1054
00:46:19,119 --> 00:46:21,440
apply to latest version of outlook then

1055
00:46:21,440 --> 00:46:23,359
i say go ahead let's do it

1056
00:46:23,359 --> 00:46:24,160
um

1057
00:46:24,160 --> 00:46:26,160
but it's primarily these most vulnerable

1058
00:46:26,160 --> 00:46:28,000
users that don't seem to understand

1059
00:46:28,000 --> 00:46:30,560
what's going on

1060
00:46:35,280 --> 00:46:37,040
we have any implementers who want to

1061
00:46:37,040 --> 00:46:39,440
share their experience

1062
00:46:39,440 --> 00:46:42,839
go ahead bernie

1063
00:46:43,040 --> 00:46:46,160
um what here is missing like

1064
00:46:46,160 --> 00:46:48,480
the what i said is that it's easily

1065
00:46:48,480 --> 00:46:51,520
fixable this message in message thing

1066
00:46:51,520 --> 00:46:53,040
and

1067
00:46:53,040 --> 00:46:55,200
if we give instructions how to fix that

1068
00:46:55,200 --> 00:46:57,440
i believe like microsoft outlook could

1069
00:46:57,440 --> 00:46:59,920
fix that and

1070
00:46:59,920 --> 00:47:01,680
then we have a big proportion of the

1071
00:47:01,680 --> 00:47:04,079
clients of the user base that has fixed

1072
00:47:04,079 --> 00:47:06,960
for this so this really easy thing and

1073
00:47:06,960 --> 00:47:08,800
if you do this auto scheme the injector

1074
00:47:08,800 --> 00:47:11,760
scheme it's more difficult to fix

1075
00:47:11,760 --> 00:47:14,000
or more difficult to implement because

1076
00:47:14,000 --> 00:47:15,839
the instructions are not anymore so

1077
00:47:15,839 --> 00:47:18,480
clear straightforward as for the wrap

1078
00:47:18,480 --> 00:47:21,920
scheme that is currently standardized

1079
00:47:21,920 --> 00:47:25,040
do we have a anyone from the outlook

1080
00:47:25,040 --> 00:47:27,599
team who has committed to fixing it i'm

1081
00:47:27,599 --> 00:47:29,680
concerned about um

1082
00:47:29,680 --> 00:47:31,440
really like claims are really easy to

1083
00:47:31,440 --> 00:47:32,880
fix coming from someone who's not

1084
00:47:32,880 --> 00:47:36,520
working on the client

1085
00:47:43,599 --> 00:47:46,079
i guess that means no

1086
00:47:46,079 --> 00:47:48,400
right so so that that

1087
00:47:48,400 --> 00:47:49,200
i mean

1088
00:47:49,200 --> 00:47:51,440
claims that things are easy to fix by

1089
00:47:51,440 --> 00:47:53,200
the implementer is different from claims

1090
00:47:53,200 --> 00:47:54,960
that are that that something like is

1091
00:47:54,960 --> 00:47:56,640
actually going to be fixed and

1092
00:47:56,640 --> 00:47:58,400
um

1093
00:47:58,400 --> 00:47:59,839
uh and i

1094
00:47:59,839 --> 00:48:02,240
i tend to agree with

1095
00:48:02,240 --> 00:48:05,440
michael's concern about um i think you

1096
00:48:05,440 --> 00:48:08,480
coined the term confuser there

1097
00:48:08,480 --> 00:48:11,920
but the confused user is a

1098
00:48:11,920 --> 00:48:15,599
is a risk that people are grappling with

1099
00:48:18,960 --> 00:48:22,319
so i i recognize that the that um one of

1100
00:48:22,319 --> 00:48:23,040
the

1101
00:48:23,040 --> 00:48:25,760
pieces that are in the current

1102
00:48:25,760 --> 00:48:28,160
so so let me let me let me just outline

1103
00:48:28,160 --> 00:48:29,599
um

1104
00:48:29,599 --> 00:48:33,280
a set of ideas that that come from the

1105
00:48:33,280 --> 00:48:36,480
um the proposal for how we might uh

1106
00:48:36,480 --> 00:48:38,640
try to break up the log jam here um it

1107
00:48:38,640 --> 00:48:40,720
looks like we don't have anything

1108
00:48:40,720 --> 00:48:41,520
that

1109
00:48:41,520 --> 00:48:43,280
um

1110
00:48:43,280 --> 00:48:45,760
really addresses the problem of

1111
00:48:45,760 --> 00:48:49,040
uh for encrypted messages with protected

1112
00:48:49,040 --> 00:48:51,040
headers that include confidential

1113
00:48:51,040 --> 00:48:52,480
subject lines

1114
00:48:52,480 --> 00:48:54,000
um

1115
00:48:54,000 --> 00:48:56,000
they end up with either an attached

1116
00:48:56,000 --> 00:48:57,119
message

1117
00:48:57,119 --> 00:49:00,400
or they end up the the legacy display

1118
00:49:00,400 --> 00:49:02,559
or the subject line is totally invisible

1119
00:49:02,559 --> 00:49:04,880
or the legacy display option

1120
00:49:04,880 --> 00:49:07,440
um doesn't render well on some

1121
00:49:07,440 --> 00:49:09,520
on some major clients in particular on

1122
00:49:09,520 --> 00:49:11,680
outlook so none of those proposals

1123
00:49:11,680 --> 00:49:13,040
actually seem to fix

1124
00:49:13,040 --> 00:49:14,160
um

1125
00:49:14,160 --> 00:49:15,839
seem to meet the goals

1126
00:49:15,839 --> 00:49:17,839
that we laid laid out

1127
00:49:17,839 --> 00:49:19,839
so you know there's anoth there's

1128
00:49:19,839 --> 00:49:21,920
another approach which we could do which

1129
00:49:21,920 --> 00:49:22,880
says

1130
00:49:22,880 --> 00:49:24,720
um we're going to solve the problem for

1131
00:49:24,720 --> 00:49:27,160
messages that are text

1132
00:49:27,160 --> 00:49:28,839
html

1133
00:49:28,839 --> 00:49:31,440
um where we don't introduce the legacy

1134
00:49:31,440 --> 00:49:34,720
display we use a wrap message um

1135
00:49:34,720 --> 00:49:36,480
approach uh sorry not a wrap message but

1136
00:49:36,480 --> 00:49:37,920
an injected headers approach so there's

1137
00:49:37,920 --> 00:49:40,800
no additional attachment and we say

1138
00:49:40,800 --> 00:49:43,839
that html generating male user agents

1139
00:49:43,839 --> 00:49:46,000
should include a div at the top of the

1140
00:49:46,000 --> 00:49:47,359
html

1141
00:49:47,359 --> 00:49:51,040
with a particular attribute

1142
00:49:51,200 --> 00:49:52,240
that

1143
00:49:52,240 --> 00:49:53,920
they put the

1144
00:49:53,920 --> 00:49:55,680
the

1145
00:49:55,680 --> 00:49:58,000
obscured headers in particular the

1146
00:49:58,000 --> 00:49:59,599
subject header in that obscured

1147
00:49:59,599 --> 00:50:00,720
attribute

1148
00:50:00,720 --> 00:50:02,079
and then a male user agent that's

1149
00:50:02,079 --> 00:50:04,880
capable of that that's compliant can

1150
00:50:04,880 --> 00:50:07,040
hide those divs

1151
00:50:07,040 --> 00:50:08,720
from that they can avoid rendering those

1152
00:50:08,720 --> 00:50:09,920
divs because they can identify them

1153
00:50:09,920 --> 00:50:11,359
correctly

1154
00:50:11,359 --> 00:50:14,640
there's no additional attachment

1155
00:50:14,640 --> 00:50:16,240
and people who are rendering the message

1156
00:50:16,240 --> 00:50:18,800
in html form who are in non-compliant

1157
00:50:18,800 --> 00:50:20,720
clients will actually see the subject in

1158
00:50:20,720 --> 00:50:23,520
the html rendering

1159
00:50:23,520 --> 00:50:26,640
so that seems to me to to give as close

1160
00:50:26,640 --> 00:50:30,000
as we can get to the um the the scheme

1161
00:50:30,000 --> 00:50:31,520
that's described here which would mean

1162
00:50:31,520 --> 00:50:33,920
dropping the legacy display proposal

1163
00:50:33,920 --> 00:50:35,200
um

1164
00:50:35,200 --> 00:50:35,920
and

1165
00:50:35,920 --> 00:50:36,960
uh

1166
00:50:36,960 --> 00:50:39,280
and and minimizing the amount of sort of

1167
00:50:39,280 --> 00:50:41,359
mime shenanigans that are going on so

1168
00:50:41,359 --> 00:50:43,200
i'm happy to write that up as a variant

1169
00:50:43,200 --> 00:50:45,839
of the draft and see what people think

1170
00:50:45,839 --> 00:50:47,440
but but it looks to me like that might

1171
00:50:47,440 --> 00:50:49,040
be something that would

1172
00:50:49,040 --> 00:50:50,400
that would break out

1173
00:50:50,400 --> 00:50:52,079
the log gem here right we could we could

1174
00:50:52,079 --> 00:50:53,680
set along wrapped

1175
00:50:53,680 --> 00:50:55,760
sorry injected headers

1176
00:50:55,760 --> 00:50:57,839
drop the legacy display proposal and

1177
00:50:57,839 --> 00:51:01,200
include this variant for the html

1178
00:51:01,200 --> 00:51:04,160
for html specific messages that would

1179
00:51:04,160 --> 00:51:06,640
degrade nicely

1180
00:51:06,640 --> 00:51:10,160
okay bernie then michael

1181
00:51:10,240 --> 00:51:13,280
so two things um i would again like say

1182
00:51:13,280 --> 00:51:16,880
confuse the user is in with any

1183
00:51:16,880 --> 00:51:18,720
proposal we use we are confusing the

1184
00:51:18,720 --> 00:51:20,319
user in some way

1185
00:51:20,319 --> 00:51:22,480
and the other thing is what you propose

1186
00:51:22,480 --> 00:51:24,160
i'm not quite sure i understood it

1187
00:51:24,160 --> 00:51:26,480
correctly but is this something pretty

1188
00:51:26,480 --> 00:51:29,760
close to what the pep has

1189
00:51:29,760 --> 00:51:32,319
implemented as a pep message for mart 1

1190
00:51:32,319 --> 00:51:35,040
basically just add on top of the text at

1191
00:51:35,040 --> 00:51:37,359
the subject line or on top of the html

1192
00:51:37,359 --> 00:51:38,880
right the subject line so that it's

1193
00:51:38,880 --> 00:51:41,599
visible by a legacy client

1194
00:51:41,599 --> 00:51:43,920
this question for clarification

1195
00:51:43,920 --> 00:51:45,760
yeah that's actually what i was inspired

1196
00:51:45,760 --> 00:51:48,559
by bernie was early workbench

1197
00:51:48,559 --> 00:51:52,079
okay then i understand thanks

1198
00:51:58,559 --> 00:52:00,880
so can i have um

1199
00:52:00,880 --> 00:52:03,200
um

1200
00:52:03,359 --> 00:52:07,359
this is the do nothing situation

1201
00:52:07,359 --> 00:52:10,160
does it result in the rap message is

1202
00:52:10,160 --> 00:52:12,960
that what i understand

1203
00:52:12,960 --> 00:52:16,000
the do nothing situation would be that

1204
00:52:16,000 --> 00:52:17,760
we keep the standards as they currently

1205
00:52:17,760 --> 00:52:19,040
are which says

1206
00:52:19,040 --> 00:52:20,960
uh use this wrapped message and no one

1207
00:52:20,960 --> 00:52:24,559
implements them as far as i can tell

1208
00:52:24,720 --> 00:52:26,559
which means we give up basically on

1209
00:52:26,559 --> 00:52:27,920
people actually protecting the headers

1210
00:52:27,920 --> 00:52:29,760
of their messages

1211
00:52:29,760 --> 00:52:31,599
so this the sorry i don't mean to do

1212
00:52:31,599 --> 00:52:34,079
nothing in terms of not protecting the

1213
00:52:34,079 --> 00:52:35,680
headers i meant

1214
00:52:35,680 --> 00:52:37,680
not not a con not doing anything to

1215
00:52:37,680 --> 00:52:40,960
accommodate legacy clients

1216
00:52:41,520 --> 00:52:42,319
um

1217
00:52:42,319 --> 00:52:43,839
if if we don't do anything to

1218
00:52:43,839 --> 00:52:45,359
accommodate legacy clients then any of

1219
00:52:45,359 --> 00:52:46,880
the proposals that are present in the

1220
00:52:46,880 --> 00:52:49,040
draft seem plausible but i think that

1221
00:52:49,040 --> 00:52:50,559
one of the reasons that we're that we're

1222
00:52:50,559 --> 00:52:51,920
struggling here

1223
00:52:51,920 --> 00:52:54,240
is because people are afraid to emit

1224
00:52:54,240 --> 00:52:56,000
messages because of their interactions

1225
00:52:56,000 --> 00:52:57,760
with legacy clients

1226
00:52:57,760 --> 00:52:59,280
so so just to be clear these are

1227
00:52:59,280 --> 00:53:02,240
encrypted messages not just signed ones

1228
00:53:02,240 --> 00:53:03,839
they're both

1229
00:53:03,839 --> 00:53:05,520
okay because we don't currently protect

1230
00:53:05,520 --> 00:53:06,880
headers from either signing or

1231
00:53:06,880 --> 00:53:07,839
encryption

1232
00:53:07,839 --> 00:53:09,680
encrypted messages typically have to go

1233
00:53:09,680 --> 00:53:11,520
to somebody who actually had you have

1234
00:53:11,520 --> 00:53:13,680
the identities for right or you can't

1235
00:53:13,680 --> 00:53:16,160
encrypt and so there's a possibility in

1236
00:53:16,160 --> 00:53:18,480
theory of some negotiation where signed

1237
00:53:18,480 --> 00:53:20,319
messages go to mailing lists in other

1238
00:53:20,319 --> 00:53:22,240
places and people that aren't ready and

1239
00:53:22,240 --> 00:53:23,760
so there's you know a different

1240
00:53:23,760 --> 00:53:25,760
different analysis that i think matters

1241
00:53:25,760 --> 00:53:29,359
and if you're signing it then you're not

1242
00:53:29,359 --> 00:53:31,359
you're not necessarily you're caring

1243
00:53:31,359 --> 00:53:33,920
about disclosing the subject line

1244
00:53:33,920 --> 00:53:35,920
because you that's right just signed it

1245
00:53:35,920 --> 00:53:39,520
okay you might be in care about um

1246
00:53:39,520 --> 00:53:41,760
um making an integral

1247
00:53:41,760 --> 00:53:42,800
okay

1248
00:53:42,800 --> 00:53:44,319
the meeting is on thursday not on

1249
00:53:44,319 --> 00:53:47,119
wednesday as someone fabricated um

1250
00:53:47,119 --> 00:53:50,240
and so maybe repeating it is more is is

1251
00:53:50,240 --> 00:53:52,000
sufficient that's that's that's enough

1252
00:53:52,000 --> 00:53:54,240
accommodation in the signing case

1253
00:53:54,240 --> 00:53:55,760
um and it sounds to me like we just

1254
00:53:55,760 --> 00:53:57,280
shouldn't do anything to accommodate

1255
00:53:57,280 --> 00:53:59,040
legacy clients in the encrypted case

1256
00:53:59,040 --> 00:54:02,800
that's that's sort of what i'm thinking

1257
00:54:03,680 --> 00:54:05,599
so the the

1258
00:54:05,599 --> 00:54:07,839
injected headers approach suggests that

1259
00:54:07,839 --> 00:54:11,440
we don't do anything to accommodate

1260
00:54:11,440 --> 00:54:13,040
legacy clients

1261
00:54:13,040 --> 00:54:16,079
and the result is that legacy clients

1262
00:54:16,079 --> 00:54:18,319
will

1263
00:54:18,319 --> 00:54:19,920
render the message as though it had no

1264
00:54:19,920 --> 00:54:21,119
subject

1265
00:54:21,119 --> 00:54:22,839
that's without the legacy display

1266
00:54:22,839 --> 00:54:24,960
section right the wrapped message

1267
00:54:24,960 --> 00:54:27,119
situation says we don't do anything to

1268
00:54:27,119 --> 00:54:28,559
accommodate legacy clients and the

1269
00:54:28,559 --> 00:54:31,119
result is an encapsulated message which

1270
00:54:31,119 --> 00:54:32,559
some clients will render one way or the

1271
00:54:32,559 --> 00:54:34,559
other and i'm a little bit reluctant to

1272
00:54:34,559 --> 00:54:35,359
say

1273
00:54:35,359 --> 00:54:38,319
screw all the legacy clients

1274
00:54:38,319 --> 00:54:39,920
if you're having trouble sending an

1275
00:54:39,920 --> 00:54:41,520
encrypted email to them

1276
00:54:41,520 --> 00:54:42,960
you just can't expect that to work at

1277
00:54:42,960 --> 00:54:44,240
all even though they're running a tool

1278
00:54:44,240 --> 00:54:46,720
that claims to be s mime compatible

1279
00:54:46,720 --> 00:54:48,240
because the user will end up with a new

1280
00:54:48,240 --> 00:54:50,160
with an encapsulated message and then

1281
00:54:50,160 --> 00:54:51,599
they have to do something to view that

1282
00:54:51,599 --> 00:54:52,400
message

1283
00:54:52,400 --> 00:54:54,319
and then when they reply to that encrypt

1284
00:54:54,319 --> 00:54:55,599
encapsulated message they're not

1285
00:54:55,599 --> 00:54:57,119
operating in an effective context there

1286
00:54:57,119 --> 00:54:58,799
are a bunch of situations there that

1287
00:54:58,799 --> 00:55:01,119
make me pretty nervous right if we say

1288
00:55:01,119 --> 00:55:02,960
here's how you generate a message and we

1289
00:55:02,960 --> 00:55:04,640
know that that's going to cause problems

1290
00:55:04,640 --> 00:55:07,200
and say encrypting replies

1291
00:55:07,200 --> 00:55:09,359
that strikes me as a as a pretty risky

1292
00:55:09,359 --> 00:55:10,799
gamble

1293
00:55:10,799 --> 00:55:13,680
i i i i'm gonna say that i

1294
00:55:13,680 --> 00:55:15,599
don't care that much about

1295
00:55:15,599 --> 00:55:17,200
legacy encrypting

1296
00:55:17,200 --> 00:55:20,400
clients because i they so rare at this

1297
00:55:20,400 --> 00:55:21,760
point alas

1298
00:55:21,760 --> 00:55:24,000
um and so let's just move forward on

1299
00:55:24,000 --> 00:55:26,319
that on the car but you're telling me

1300
00:55:26,319 --> 00:55:28,240
that in the sign case the user might

1301
00:55:28,240 --> 00:55:30,400
have an empty subject even if it's

1302
00:55:30,400 --> 00:55:32,240
signed no i'm not saying that in the

1303
00:55:32,240 --> 00:55:34,799
signed case

1304
00:55:35,440 --> 00:55:37,839
i really hate the encapsulated message

1305
00:55:37,839 --> 00:55:39,680
and in the sign case i really don't want

1306
00:55:39,680 --> 00:55:42,319
to do that and i am agnostic as an

1307
00:55:42,319 --> 00:55:44,480
encrypted case for whether or not it's

1308
00:55:44,480 --> 00:55:46,720
encapsulated or not

1309
00:55:46,720 --> 00:55:47,680
got it

1310
00:55:47,680 --> 00:55:50,960
thank you for registering that

1311
00:55:53,119 --> 00:55:55,680
that just like uh is pretty close to

1312
00:55:55,680 --> 00:55:57,839
what i proposed that we distinguish

1313
00:55:57,839 --> 00:56:00,400
between signed and encrypted and we

1314
00:56:00,400 --> 00:56:02,559
would allow something to make the signed

1315
00:56:02,559 --> 00:56:04,640
case legacy clients better and in the

1316
00:56:04,640 --> 00:56:06,480
encrypted we just go forward with the

1317
00:56:06,480 --> 00:56:08,400
much easier case as currently

1318
00:56:08,400 --> 00:56:12,920
standardized if understood correctly

1319
00:56:22,880 --> 00:56:25,680
okay what i think we need to do is see

1320
00:56:25,680 --> 00:56:28,000
this written up and

1321
00:56:28,000 --> 00:56:30,000
i think the easiest way to do that is

1322
00:56:30,000 --> 00:56:31,760
probably just to modify the header

1323
00:56:31,760 --> 00:56:35,200
protection draft to implement the

1324
00:56:35,200 --> 00:56:36,079
the

1325
00:56:36,079 --> 00:56:38,400
choice you're picking here and then we

1326
00:56:38,400 --> 00:56:40,799
can do a last call and see if we get

1327
00:56:40,799 --> 00:56:42,400
agreement

1328
00:56:42,400 --> 00:56:44,880
i did have a commitment from a manager

1329
00:56:44,880 --> 00:56:46,720
at microsoft that they would pay

1330
00:56:46,720 --> 00:56:48,960
attention to the last calls so

1331
00:56:48,960 --> 00:56:51,119
hopefully we'll get their feedback at

1332
00:56:51,119 --> 00:56:53,200
that point

1333
00:56:53,200 --> 00:56:55,439
okay

1334
00:56:56,960 --> 00:56:58,960
sorry go ahead bernie i was just i

1335
00:56:58,960 --> 00:57:01,599
wasn't clear if we have like a consensus

1336
00:57:01,599 --> 00:57:03,359
here already

1337
00:57:03,359 --> 00:57:05,280
i'm not too sure about this

1338
00:57:05,280 --> 00:57:07,440
i'm not either um and bernie maybe what

1339
00:57:07,440 --> 00:57:09,359
should happen is you and i and maybe

1340
00:57:09,359 --> 00:57:11,440
alexei if he's willing to join in

1341
00:57:11,440 --> 00:57:13,680
should have a meeting sometime next week

1342
00:57:13,680 --> 00:57:15,920
to to just

1343
00:57:15,920 --> 00:57:18,480
to look at some proposed changes and see

1344
00:57:18,480 --> 00:57:20,079
whether we can agree that those are

1345
00:57:20,079 --> 00:57:22,240
worth putting up as last call we won't

1346
00:57:22,240 --> 00:57:23,839
find out the consensus until we've given

1347
00:57:23,839 --> 00:57:25,280
a concrete

1348
00:57:25,280 --> 00:57:27,200
proposal i think to the group

1349
00:57:27,200 --> 00:57:30,319
i think that's the case

1350
00:57:33,440 --> 00:57:34,640
okay

1351
00:57:34,640 --> 00:57:36,480
dkg you want to say a few words about

1352
00:57:36,480 --> 00:57:38,079
mail guidance

1353
00:57:38,079 --> 00:57:40,079
the meeting's already half over so we

1354
00:57:40,079 --> 00:57:42,960
need to pick up the pace yep sorry

1355
00:57:42,960 --> 00:57:44,319
little to report on the end-to-end

1356
00:57:44,319 --> 00:57:46,400
encrypted uh mail guidance draft uh

1357
00:57:46,400 --> 00:57:48,000
there's a bunch of fixmes in the draft

1358
00:57:48,000 --> 00:57:50,720
i'd love to hear some suggestions um

1359
00:57:50,720 --> 00:57:52,880
from other implementers about things

1360
00:57:52,880 --> 00:57:54,559
that they've noticed or things that

1361
00:57:54,559 --> 00:57:55,760
they've read in the draft that they

1362
00:57:55,760 --> 00:57:57,760
think are wrong

1363
00:57:57,760 --> 00:57:59,440
we've been pretty much stalled since the

1364
00:57:59,440 --> 00:58:01,680
last ietf i hope to get it installed

1365
00:58:01,680 --> 00:58:04,640
participation would be great

1366
00:58:06,000 --> 00:58:07,280
okay thank you

1367
00:58:07,280 --> 00:58:10,079
uh so that's a plea for review

1368
00:58:10,079 --> 00:58:11,520
uh yes it is

1369
00:58:11,520 --> 00:58:13,280
okay and contributions

1370
00:58:13,280 --> 00:58:15,280
yep

1371
00:58:15,280 --> 00:58:19,559
all right sean i think you're next

1372
00:58:37,119 --> 00:58:40,640
hello um i want to start off with a uh

1373
00:58:40,640 --> 00:58:42,640
an apology for uh publishing this

1374
00:58:42,640 --> 00:58:45,119
document last night super late um but i

1375
00:58:45,119 --> 00:58:46,319
would like to thank you all for getting

1376
00:58:46,319 --> 00:58:48,559
up super early and reading it already

1377
00:58:48,559 --> 00:58:50,640
um i'd like to note that my co-authors

1378
00:58:50,640 --> 00:58:53,200
are actually online here they're here

1379
00:58:53,200 --> 00:58:54,640
and so they should feel free to jump in

1380
00:58:54,640 --> 00:58:56,319
if they have anything to add

1381
00:58:56,319 --> 00:58:58,319
um so this is just a kind of an update

1382
00:58:58,319 --> 00:59:00,000
of what what uh happened with our

1383
00:59:00,000 --> 00:59:02,400
document signing eku draft

1384
00:59:02,400 --> 00:59:05,440
next slide so basically what we've done

1385
00:59:05,440 --> 00:59:07,839
is we've made changes to the draft based

1386
00:59:07,839 --> 00:59:11,280
on um either direct or implied comments

1387
00:59:11,280 --> 00:59:13,599
that we received on the list um before

1388
00:59:13,599 --> 00:59:14,720
so the first thing we did was we

1389
00:59:14,720 --> 00:59:16,799
clarified what it what you know document

1390
00:59:16,799 --> 00:59:19,520
signing is um mostly to address the

1391
00:59:19,520 --> 00:59:20,880
concern that the definition wasn't

1392
00:59:20,880 --> 00:59:22,880
technical enough and it's basically just

1393
00:59:22,880 --> 00:59:25,440
adding more words around what it means

1394
00:59:25,440 --> 00:59:27,200
for uh you know the document is

1395
00:59:27,200 --> 00:59:28,640
digitally signed contents that are

1396
00:59:28,640 --> 00:59:31,040
consumed by humans you know that as

1397
00:59:31,040 --> 00:59:32,799
opposed to them being uh just processed

1398
00:59:32,799 --> 00:59:34,079
by machines

1399
00:59:34,079 --> 00:59:36,400
um we added a new section with uh lots

1400
00:59:36,400 --> 00:59:38,799
of new text to address concerns that the

1401
00:59:38,799 --> 00:59:41,040
handling process was undefined

1402
00:59:41,040 --> 00:59:43,280
and to address concerns that an eku as a

1403
00:59:43,280 --> 00:59:45,200
policy identifier was the was the way to

1404
00:59:45,200 --> 00:59:48,000
do it so um the way we did it was we

1405
00:59:48,000 --> 00:59:50,160
basically said um there's an example in

1406
00:59:50,160 --> 00:59:52,640
there for how to do it uh and it kind of

1407
00:59:52,640 --> 00:59:54,000
walks through how you would do it and

1408
00:59:54,000 --> 00:59:56,000
the example is based on

1409
00:59:56,000 --> 00:59:59,119
the the the um the rfc that russ wrote

1410
00:59:59,119 --> 01:00:01,200
which is how to um digitally signed

1411
01:00:01,200 --> 01:00:02,640
internet drafts

1412
01:00:02,640 --> 01:00:04,400
and so it kind of walks through the

1413
01:00:04,400 --> 01:00:05,920
you know what you would do it's 12

1414
01:00:05,920 --> 01:00:09,280
o'clock sorry about that and um the

1415
01:00:09,280 --> 01:00:13,040
the basic plan is that um you have the

1416
01:00:13,040 --> 01:00:15,040
the implementation examined the extended

1417
01:00:15,040 --> 01:00:16,880
key usage values if there's no

1418
01:00:16,880 --> 01:00:19,280
restrictions then you know it's happy

1419
01:00:19,280 --> 01:00:20,799
and it's happy to use it if there are

1420
01:00:20,799 --> 01:00:22,720
restrictions and it can block it now the

1421
01:00:22,720 --> 01:00:24,000
way you can implement that is with

1422
01:00:24,000 --> 01:00:26,160
something that's very similar to the

1423
01:00:26,160 --> 01:00:28,319
um you know certificate policies

1424
01:00:28,319 --> 01:00:29,920
constraints and name constraints stuff

1425
01:00:29,920 --> 01:00:33,920
with the excluded and permitted um eku's

1426
01:00:33,920 --> 01:00:36,160
um that an art relying party is

1427
01:00:36,160 --> 01:00:38,160
perfectly happy to implement

1428
01:00:38,160 --> 01:00:40,079
um to make decisions one way or the

1429
01:00:40,079 --> 01:00:40,960
other

1430
01:00:40,960 --> 01:00:42,640
um and then the last set of changes were

1431
01:00:42,640 --> 01:00:44,559
just to kind of add more text and

1432
01:00:44,559 --> 01:00:46,400
security considerations about cross

1433
01:00:46,400 --> 01:00:48,319
protocol attacks and to note that there

1434
01:00:48,319 --> 01:00:50,000
are really no privacy considerations

1435
01:00:50,000 --> 01:00:52,400
added as a result of this draft

1436
01:00:52,400 --> 01:00:54,799
um i know it's kind of quick but uh

1437
01:00:54,799 --> 01:00:56,480
that's basically it

1438
01:00:56,480 --> 01:00:58,079
and so the next steps is the working

1439
01:00:58,079 --> 01:01:00,480
group adoption call um we're getting

1440
01:01:00,480 --> 01:01:02,880
lots of great comments and so i snarkily

1441
01:01:02,880 --> 01:01:06,000
uh suggested to my uh co-authors that uh

1442
01:01:06,000 --> 01:01:07,359
if we keep going at this rate we won't

1443
01:01:07,359 --> 01:01:09,280
need a working group uh to adopt it

1444
01:01:09,280 --> 01:01:10,319
because we'll have all the comments

1445
01:01:10,319 --> 01:01:11,839
addressed and we can just go straight to

1446
01:01:11,839 --> 01:01:14,400
an ad to do it but um we are actually

1447
01:01:14,400 --> 01:01:16,160
asking for working group adoption

1448
01:01:16,160 --> 01:01:17,680
because we believe we've addressed all

1449
01:01:17,680 --> 01:01:21,200
the outstanding comments at this point

1450
01:01:21,280 --> 01:01:24,240
and it's a starting point so again if

1451
01:01:24,240 --> 01:01:25,520
there's things that we've got wrong

1452
01:01:25,520 --> 01:01:27,520
we're perfectly happy to you know hand

1453
01:01:27,520 --> 01:01:29,920
over editing and move forward so i guess

1454
01:01:29,920 --> 01:01:31,599
that's where we stand

1455
01:01:31,599 --> 01:01:32,799
thanks

1456
01:01:32,799 --> 01:01:34,880
does anyone um

1457
01:01:34,880 --> 01:01:38,799
who's here i noticed the most uh

1458
01:01:38,799 --> 01:01:40,799
vocal person against this document is

1459
01:01:40,799 --> 01:01:42,880
not here so we'll take it to the list

1460
01:01:42,880 --> 01:01:45,040
but does anyone who is here have

1461
01:01:45,040 --> 01:01:47,599
concerns

1462
01:01:51,440 --> 01:01:55,359
okay hearing none we will uh

1463
01:01:55,359 --> 01:01:57,359
revisit the call for adoption on the

1464
01:01:57,359 --> 01:01:58,240
list

1465
01:01:58,240 --> 01:01:59,680
yeah russ i just want to make sure that

1466
01:01:59,680 --> 01:02:01,280
you know we're not i'm not trying to

1467
01:02:01,280 --> 01:02:03,680
like run past ryan just because he's not

1468
01:02:03,680 --> 01:02:05,280
here so i appreciate you taking it back

1469
01:02:05,280 --> 01:02:07,839
to the list

1470
01:02:10,319 --> 01:02:12,319
okay

1471
01:02:12,319 --> 01:02:15,599
michael you're up next

1472
01:02:17,119 --> 01:02:18,319
i'm gonna

1473
01:02:18,319 --> 01:02:20,000
check my slides if i push the right

1474
01:02:20,000 --> 01:02:21,280
button here

1475
01:02:21,280 --> 01:02:24,240
you're doing it all right

1476
01:02:24,240 --> 01:02:25,920
yeah if i could find them

1477
01:02:25,920 --> 01:02:27,039
there they are

1478
01:02:27,039 --> 01:02:29,119
in front of my mouse instead of in my

1479
01:02:29,119 --> 01:02:31,520
head there we go

1480
01:02:31,520 --> 01:02:34,079
uh okay so this is about a new document

1481
01:02:34,079 --> 01:02:36,319
rfc

1482
01:02:36,319 --> 01:02:39,359
uh which is esp and this vfr attribute

1483
01:02:39,359 --> 01:02:41,760
part next uh slide

1484
01:02:41,760 --> 01:02:44,000
and we've collected uh three or four

1485
01:02:44,000 --> 01:02:46,480
offers um and i think maybe a couple

1486
01:02:46,480 --> 01:02:48,960
other people that have some opinions

1487
01:02:48,960 --> 01:02:51,760
um so the story so far um 1730 was

1488
01:02:51,760 --> 01:02:54,480
unclear about the csr attributes

1489
01:02:54,480 --> 01:02:57,760
um in the brewski and autonomic work in

1490
01:02:57,760 --> 01:02:59,760
anima we made some assumptions about how

1491
01:02:59,760 --> 01:03:02,640
they could be used and um to be fair uh

1492
01:03:02,640 --> 01:03:05,359
mack fritikin was an author of 7030 and

1493
01:03:05,359 --> 01:03:07,839
of eight 995 and he seemed to think that

1494
01:03:07,839 --> 01:03:09,599
we were doing it right when we designed

1495
01:03:09,599 --> 01:03:10,559
it so

1496
01:03:10,559 --> 01:03:12,480
um i think we had some reason to believe

1497
01:03:12,480 --> 01:03:14,079
we weren't wrong

1498
01:03:14,079 --> 01:03:16,400
um and then it was pointed out that it

1499
01:03:16,400 --> 01:03:18,480
belonged that it did not match the easn

1500
01:03:18,480 --> 01:03:19,440
one and

1501
01:03:19,440 --> 01:03:21,520
one was sufficiently complicated that

1502
01:03:21,520 --> 01:03:23,680
some people said they didn't they

1503
01:03:23,680 --> 01:03:26,240
wouldn't like partly in that list

1504
01:03:26,240 --> 01:03:28,839
um we had a virtual interim meeting

1505
01:03:28,839 --> 01:03:30,799
recordings you can go back and talk

1506
01:03:30,799 --> 01:03:33,680
about the relationship with the slide

1507
01:03:33,680 --> 01:03:34,480
and

1508
01:03:34,480 --> 01:03:37,039
we created the design team uh to do some

1509
01:03:37,039 --> 01:03:40,160
work next slide please

1510
01:03:40,319 --> 01:03:41,760
and this is really the short of the

1511
01:03:41,760 --> 01:03:44,079
proposal at this point um that's

1512
01:03:44,079 --> 01:03:47,200
actually not yet in the document um

1513
01:03:47,200 --> 01:03:50,960
there's been a long thread of muskin uh

1514
01:03:50,960 --> 01:03:52,160
among the

1515
01:03:52,160 --> 01:03:54,880
document authors which has not quite

1516
01:03:54,880 --> 01:03:58,400
made it to the mailing list for

1517
01:03:58,400 --> 01:04:00,880
i don't want to copy people's

1518
01:04:00,880 --> 01:04:03,119
private emails to the mailing list um

1519
01:04:03,119 --> 01:04:05,520
hoping that they will start again on a

1520
01:04:05,520 --> 01:04:06,480
list

1521
01:04:06,480 --> 01:04:10,240
um but the short of it seems to be that

1522
01:04:10,240 --> 01:04:11,760
one of the proposals is that we

1523
01:04:11,760 --> 01:04:13,200
essentially have

1524
01:04:13,200 --> 01:04:14,160
um

1525
01:04:14,160 --> 01:04:16,799
a very specific uh

1526
01:04:16,799 --> 01:04:18,400
uh

1527
01:04:18,400 --> 01:04:20,720
callouts for the values of a couple of

1528
01:04:20,720 --> 01:04:22,400
things that we need to do

1529
01:04:22,400 --> 01:04:23,599
and that

1530
01:04:23,599 --> 01:04:25,599
we're not going to basically allow any

1531
01:04:25,599 --> 01:04:28,319
arbitrary

1532
01:04:28,450 --> 01:04:30,160
[Music]

1533
01:04:30,160 --> 01:04:32,240
attributes and yes bob asks is that a

1534
01:04:32,240 --> 01:04:35,280
typo yeah it should be a generic name

1535
01:04:35,280 --> 01:04:38,400
so if it's a name then it can only be

1536
01:04:38,400 --> 01:04:40,960
a dn but a generic name can be subject

1537
01:04:40,960 --> 01:04:42,480
alt name as well which is really what

1538
01:04:42,480 --> 01:04:44,319
we're interested in doing

1539
01:04:44,319 --> 01:04:45,200
um

1540
01:04:45,200 --> 01:04:47,119
did i write generic okay so sorry it was

1541
01:04:47,119 --> 01:04:51,039
you know 11 30 last night at night um

1542
01:04:51,039 --> 01:04:53,119
and but that's what we have right now um

1543
01:04:53,119 --> 01:04:55,520
this document is not ready to be adopted

1544
01:04:55,520 --> 01:04:57,920
um it is very useful to discuss it on

1545
01:04:57,920 --> 01:04:59,839
the mailing list as to what the goals

1546
01:04:59,839 --> 01:05:02,880
are and what other people

1547
01:05:03,039 --> 01:05:05,280
might uh people other people might

1548
01:05:05,280 --> 01:05:06,799
expect or think that they want to do

1549
01:05:06,799 --> 01:05:10,000
with it um i don't i'm not sure that i

1550
01:05:10,000 --> 01:05:13,119
want to have a specific you know here's

1551
01:05:13,119 --> 01:05:15,119
the part that fixes my problem and

1552
01:05:15,119 --> 01:05:17,920
everything else is uh screw that i'm not

1553
01:05:17,920 --> 01:05:19,839
sure that i want to do that but maybe

1554
01:05:19,839 --> 01:05:21,760
that actually is the simplest uh

1555
01:05:21,760 --> 01:05:23,760
simplest way to do it it's the least

1556
01:05:23,760 --> 01:05:25,839
number of things we did conclude that we

1557
01:05:25,839 --> 01:05:27,520
did not want to break from being

1558
01:05:27,520 --> 01:05:29,920
backward compatible with what was there

1559
01:05:29,920 --> 01:05:33,119
um even though most of us the specific

1560
01:05:33,119 --> 01:05:37,280
use needs are in a somewhat greenfield

1561
01:05:37,280 --> 01:05:39,119
application so we probably could cope

1562
01:05:39,119 --> 01:05:40,640
with anything we liked we could even

1563
01:05:40,640 --> 01:05:42,880
cope with having a negotiation via mime

1564
01:05:42,880 --> 01:05:44,480
type if we needed to

1565
01:05:44,480 --> 01:05:47,200
um so i think those are all on the table

1566
01:05:47,200 --> 01:05:48,559
but it's not clear that we need to do

1567
01:05:48,559 --> 01:05:50,960
that and i think that's the last slide

1568
01:05:50,960 --> 01:05:52,720
next slide maybe

1569
01:05:52,720 --> 01:05:54,000
no

1570
01:05:54,000 --> 01:05:56,000
yeah that was a discussion

1571
01:05:56,000 --> 01:05:59,680
here's a squirrel eating tim hortons

1572
01:06:00,880 --> 01:06:02,640
sean

1573
01:06:02,640 --> 01:06:06,559
hey um sorry uh that this wasn't clear i

1574
01:06:06,559 --> 01:06:08,480
think uh maybe would have been better

1575
01:06:08,480 --> 01:06:09,680
back in the day if we had more people

1576
01:06:09,680 --> 01:06:11,359
review it um

1577
01:06:11,359 --> 01:06:13,440
i i guess i'm concerned that you would

1578
01:06:13,440 --> 01:06:15,359
just take the attribute and modify it i

1579
01:06:15,359 --> 01:06:16,839
think you'd need to define a new

1580
01:06:16,839 --> 01:06:19,839
attribute um okay yeah because it's just

1581
01:06:19,839 --> 01:06:21,119
i think

1582
01:06:21,119 --> 01:06:22,960
that was what was intended i think that

1583
01:06:22,960 --> 01:06:24,240
was intended that it would be a new

1584
01:06:24,240 --> 01:06:26,960
attribute yeah yeah and if you think

1585
01:06:26,960 --> 01:06:28,160
that there's a new attribute and you

1586
01:06:28,160 --> 01:06:29,920
want to have specific things to call out

1587
01:06:29,920 --> 01:06:31,200
because you need them

1588
01:06:31,200 --> 01:06:33,599
great we'll include them we can use some

1589
01:06:33,599 --> 01:06:35,920
fancier asn 1 stuff to allow it to be

1590
01:06:35,920 --> 01:06:39,119
extensible um so there's ways to do this

1591
01:06:39,119 --> 01:06:40,160
um

1592
01:06:40,160 --> 01:06:43,039
yeah so i my my attitude is feel free to

1593
01:06:43,039 --> 01:06:44,880
make the changes that you think are

1594
01:06:44,880 --> 01:06:46,240
necessary to get this to work with what

1595
01:06:46,240 --> 01:06:47,920
you need to do

1596
01:06:47,920 --> 01:06:49,520
i think the question is whether or not

1597
01:06:49,520 --> 01:06:51,200
we want to have you know a specific

1598
01:06:51,200 --> 01:06:52,799
thing that here's the name here's the

1599
01:06:52,799 --> 01:06:54,799
three values that people wanted to to

1600
01:06:54,799 --> 01:06:56,799
specify and if there are other

1601
01:06:56,799 --> 01:06:59,680
attributes then that's a future revision

1602
01:06:59,680 --> 01:07:01,599
uh right

1603
01:07:01,599 --> 01:07:04,319
versus being able to put any attribute

1604
01:07:04,319 --> 01:07:06,400
with any value in the in the in the

1605
01:07:06,400 --> 01:07:07,839
thing which is what i thought we were

1606
01:07:07,839 --> 01:07:09,280
going to wind up with in the first place

1607
01:07:09,280 --> 01:07:11,359
and as you say there's some asn 1 that

1608
01:07:11,359 --> 01:07:13,440
makes it all uh happy i just don't know

1609
01:07:13,440 --> 01:07:15,920
how to write it i mean yeah you could we

1610
01:07:15,920 --> 01:07:17,119
could we can find people to help with

1611
01:07:17,119 --> 01:07:19,200
that but uh including well i i think we

1612
01:07:19,200 --> 01:07:21,280
have enough enough people in the authors

1613
01:07:21,280 --> 01:07:22,240
they just

1614
01:07:22,240 --> 01:07:24,799
i don't think they're here dan's here um

1615
01:07:24,799 --> 01:07:28,640
i don't think david is here um and uh i

1616
01:07:28,640 --> 01:07:30,720
don't think the

1617
01:07:30,720 --> 01:07:31,599
other

1618
01:07:31,599 --> 01:07:33,680
author uh owen is not here because it's

1619
01:07:33,680 --> 01:07:35,200
middle of the night for him

1620
01:07:35,200 --> 01:07:38,240
another alternative uh is to define

1621
01:07:38,240 --> 01:07:40,640
those three things as attributes and

1622
01:07:40,640 --> 01:07:43,839
just stick them in

1623
01:07:44,160 --> 01:07:46,640
yeah oh as new attributes as new

1624
01:07:46,640 --> 01:07:48,400
attributes or look because there might i

1625
01:07:48,400 --> 01:07:50,400
didn't look real closely at the options

1626
01:07:50,400 --> 01:07:51,760
but that that some of those might

1627
01:07:51,760 --> 01:07:53,599
actually already be attributes buried

1628
01:07:53,599 --> 01:07:56,960
somewhere next murder

1629
01:07:58,640 --> 01:07:59,680
right

1630
01:07:59,680 --> 01:08:02,079
right and that's the part that that

1631
01:08:02,079 --> 01:08:04,559
where the existing asn one was

1632
01:08:04,559 --> 01:08:05,440
was

1633
01:08:05,440 --> 01:08:07,240
uh unclear to

1634
01:08:07,240 --> 01:08:10,000
non-non-experts we thought we could but

1635
01:08:10,000 --> 01:08:12,480
uh it turns out that there's no value

1636
01:08:12,480 --> 01:08:14,559
there isn't a value thing there but it

1637
01:08:14,559 --> 01:08:16,719
didn't stop me and several other people

1638
01:08:16,719 --> 01:08:17,520
from

1639
01:08:17,520 --> 01:08:20,799
uh putting a value in uh because asn was

1640
01:08:20,799 --> 01:08:22,238
self-describing and we thought we were

1641
01:08:22,238 --> 01:08:24,319
doing it according to the to what was

1642
01:08:24,319 --> 01:08:25,120
there

1643
01:08:25,120 --> 01:08:27,279
um and even interoperating you know

1644
01:08:27,279 --> 01:08:28,399
pretty much

1645
01:08:28,399 --> 01:08:30,319
as far as i remember uh we just like

1646
01:08:30,319 --> 01:08:31,759
yeah we did it the obvious way and the

1647
01:08:31,759 --> 01:08:33,120
other says well i did it the obvious way

1648
01:08:33,120 --> 01:08:34,719
and we did it the same way

1649
01:08:34,719 --> 01:08:35,439
so

1650
01:08:35,439 --> 01:08:36,640
we could just record that was

1651
01:08:36,640 --> 01:08:37,679
essentially what we thought we were

1652
01:08:37,679 --> 01:08:39,439
doing we're just going to record this

1653
01:08:39,439 --> 01:08:41,759
this uh extension or whatever you want

1654
01:08:41,759 --> 01:08:44,560
to call it nasa1 so that it's actually

1655
01:08:44,560 --> 01:08:46,560
clear that that's what we meant um and

1656
01:08:46,560 --> 01:08:48,399
then these somewhat other proposals are

1657
01:08:48,399 --> 01:08:51,679
are showing up anyway i'm hoping we'll

1658
01:08:51,679 --> 01:08:53,920
have that the authors will be less shy

1659
01:08:53,920 --> 01:08:57,040
about posting the mailing list um and we

1660
01:08:57,040 --> 01:08:58,960
can have a better conversation sean that

1661
01:08:58,960 --> 01:09:02,880
you can actually uh uh contribute to

1662
01:09:02,880 --> 01:09:05,839
so michael like seems to be like

1663
01:09:05,839 --> 01:09:07,359
you're

1664
01:09:07,359 --> 01:09:09,600
ready to do one more spin then a call

1665
01:09:09,600 --> 01:09:11,279
for adoption

1666
01:09:11,279 --> 01:09:12,880
yeah i think that's about right i think

1667
01:09:12,880 --> 01:09:15,198
uh um assuming that we can get people to

1668
01:09:15,198 --> 01:09:17,920
talk uh um that you know somewhere in

1669
01:09:17,920 --> 01:09:19,679
january i don't think this has to take

1670
01:09:19,679 --> 01:09:21,600
very long

1671
01:09:21,600 --> 01:09:24,880
no i should hope you're done in march

1672
01:09:24,880 --> 01:09:26,960
yeah

1673
01:09:26,960 --> 01:09:29,600
okay i'm done

1674
01:09:29,600 --> 01:09:32,759
all right

1675
01:09:46,319 --> 01:09:48,960
okay sean

1676
01:09:48,960 --> 01:09:51,359
come up again all right so this is a

1677
01:09:51,359 --> 01:09:53,040
document i guess

1678
01:09:53,040 --> 01:09:54,960
that i volunteered to write at the last

1679
01:09:54,960 --> 01:09:57,280
interim which was about how to put

1680
01:09:57,280 --> 01:09:58,320
nist's

1681
01:09:58,320 --> 01:09:59,199
um

1682
01:09:59,199 --> 01:10:00,840
pqc chem

1683
01:10:00,840 --> 01:10:04,800
algorithm in a certificate um again i

1684
01:10:04,800 --> 01:10:06,880
apologize for not getting this draft

1685
01:10:06,880 --> 01:10:08,400
posted the link there is to a github

1686
01:10:08,400 --> 01:10:11,280
repo i will have it posted shortly um

1687
01:10:11,280 --> 01:10:13,600
and since it's not yet in there i don't

1688
01:10:13,600 --> 01:10:15,120
have any ipr i'm not planning on

1689
01:10:15,120 --> 01:10:16,400
inserting anything et cetera et cetera

1690
01:10:16,400 --> 01:10:19,040
et cetera um so the ids contents pretty

1691
01:10:19,040 --> 01:10:21,280
straightforward i was looking around for

1692
01:10:21,280 --> 01:10:23,360
drafts to basically follow this

1693
01:10:23,360 --> 01:10:25,040
on which we've done a couple of these

1694
01:10:25,040 --> 01:10:27,600
and so i picked rc8410

1695
01:10:27,600 --> 01:10:29,320
um i think that's the right one for the

1696
01:10:29,320 --> 01:10:32,480
ed25519 stuff that drafted the kernel um

1697
01:10:32,480 --> 01:10:34,960
put the those the the safe curves into

1698
01:10:34,960 --> 01:10:36,480
curdle and i just basically followed the

1699
01:10:36,480 --> 01:10:39,920
format so the basic premise is um to put

1700
01:10:39,920 --> 01:10:43,199
the winners in there um they have an

1701
01:10:43,199 --> 01:10:45,280
algorithm identifier um

1702
01:10:45,280 --> 01:10:48,640
that with oids with no parameters um and

1703
01:10:48,640 --> 01:10:50,480
multiple algorithm identifiers per

1704
01:10:50,480 --> 01:10:52,719
algorithm to count for parameters

1705
01:10:52,719 --> 01:10:54,159
that's what i have in there now

1706
01:10:54,159 --> 01:10:56,239
alternatively we could just use the nist

1707
01:10:56,239 --> 01:10:59,360
specified oid and then have um another

1708
01:10:59,360 --> 01:11:01,600
oid for the parameters identify the

1709
01:11:01,600 --> 01:11:04,480
whatever the parameter choices are like

1710
01:11:04,480 --> 01:11:05,280
um

1711
01:11:05,280 --> 01:11:07,199
kyber has like two different or three

1712
01:11:07,199 --> 01:11:08,480
different sizes i guess there's some

1713
01:11:08,480 --> 01:11:10,239
others and people can tell me what those

1714
01:11:10,239 --> 01:11:11,120
would be

1715
01:11:11,120 --> 01:11:13,520
um then we have to say what uh other

1716
01:11:13,520 --> 01:11:15,440
bits and certificates would would matter

1717
01:11:15,440 --> 01:11:16,960
so the keys are the ones that come

1718
01:11:16,960 --> 01:11:18,000
to mind

1719
01:11:18,000 --> 01:11:19,360
obviously i think key agreement is the

1720
01:11:19,360 --> 01:11:22,159
one that we'd include um i put in cipher

1721
01:11:22,159 --> 01:11:24,239
only into cipher only as maze and then i

1722
01:11:24,239 --> 01:11:25,440
thought well i don't really know if you

1723
01:11:25,440 --> 01:11:27,040
do this but i put them in there anyways

1724
01:11:27,040 --> 01:11:29,840
just to have a think about it um then

1725
01:11:29,840 --> 01:11:31,440
the format for the subject public key

1726
01:11:31,440 --> 01:11:33,679
fields and then we went ahead and i

1727
01:11:33,679 --> 01:11:36,560
added one for a private key format um

1728
01:11:36,560 --> 01:11:37,840
just to be complete because i think

1729
01:11:37,840 --> 01:11:39,040
sometimes when we left it out in the

1730
01:11:39,040 --> 01:11:41,040
past it caused problems and obviously

1731
01:11:41,040 --> 01:11:42,800
we'd have an asm1 module to kind of wrap

1732
01:11:42,800 --> 01:11:44,960
this all together for reference purposes

1733
01:11:44,960 --> 01:11:48,560
for anybody that really wanted to use it

1734
01:11:50,080 --> 01:11:52,480
and that's really it

1735
01:11:52,480 --> 01:11:54,960
um and so i'm hoping so

1736
01:11:54,960 --> 01:11:57,120
i want to challenge your one assumption

1737
01:11:57,120 --> 01:12:00,480
here that is must be key agreement

1738
01:12:00,480 --> 01:12:04,320
didn't the rsa kem use key transport

1739
01:12:04,320 --> 01:12:06,320
oh jeepers you know what i forgot to

1740
01:12:06,320 --> 01:12:08,960
check on that

1741
01:12:08,960 --> 01:12:11,280
you might be right

1742
01:12:11,280 --> 01:12:12,560
i

1743
01:12:12,560 --> 01:12:15,040
i don't have it on my screen at the

1744
01:12:15,040 --> 01:12:16,800
moment but that's my

1745
01:12:16,800 --> 01:12:18,239
recollection

1746
01:12:18,239 --> 01:12:19,920
i was trying to find it before you

1747
01:12:19,920 --> 01:12:22,640
finished your presentation that

1748
01:12:22,640 --> 01:12:24,880
i didn't it's rfc

1749
01:12:24,880 --> 01:12:27,280
5990

1750
01:12:27,280 --> 01:12:29,679
and

1751
01:12:31,840 --> 01:12:35,800
it uses key and cipherman

1752
01:12:36,159 --> 01:12:37,280
i was

1753
01:12:37,280 --> 01:12:40,159
which is key transport

1754
01:12:40,159 --> 01:12:43,199
so i think that's the thing to debate

1755
01:12:43,199 --> 01:12:45,520
uh probably should go to the list

1756
01:12:45,520 --> 01:12:47,199
yeah absolutely

1757
01:12:47,199 --> 01:12:49,280
okay um but that's basically the idea so

1758
01:12:49,280 --> 01:12:51,679
the the option is the real i think the

1759
01:12:51,679 --> 01:12:53,920
points of discussion are how to to

1760
01:12:53,920 --> 01:12:55,840
specify this and i think you know

1761
01:12:55,840 --> 01:12:58,560
whether it's it's one oid

1762
01:12:58,560 --> 01:12:59,920
um

1763
01:12:59,920 --> 01:13:03,440
where the oid equals the parameters

1764
01:13:03,440 --> 01:13:05,760
or whether it's the oid for a generic

1765
01:13:05,760 --> 01:13:08,800
algorithm plus the the algorithm the

1766
01:13:08,800 --> 01:13:11,040
parameters being another oid is kind of

1767
01:13:11,040 --> 01:13:13,360
the the big discussion here yeah i think

1768
01:13:13,360 --> 01:13:14,480
i like the

1769
01:13:14,480 --> 01:13:17,120
i like the no parameters approach myself

1770
01:13:17,120 --> 01:13:20,400
uh mike you're in queue

1771
01:13:21,360 --> 01:13:22,719
um

1772
01:13:22,719 --> 01:13:25,440
yeah so um chems don't really fit

1773
01:13:25,440 --> 01:13:27,040
cleanly right there and they're a new

1774
01:13:27,040 --> 01:13:28,800
api they're not really a key agreement

1775
01:13:28,800 --> 01:13:30,719
they're not really a key exchange

1776
01:13:30,719 --> 01:13:32,480
um we're having the same i'm going to

1777
01:13:32,480 --> 01:13:35,760
present in a couple slides about

1778
01:13:35,760 --> 01:13:38,080
getting chems into cms for content

1779
01:13:38,080 --> 01:13:39,600
encryption we're having the same problem

1780
01:13:39,600 --> 01:13:42,080
here is is it is it a key agree is it is

1781
01:13:42,080 --> 01:13:43,760
it is it an exchange should it be its

1782
01:13:43,760 --> 01:13:45,600
own top level structure

1783
01:13:45,600 --> 01:13:47,840
uh so maybe this will dove like maybe

1784
01:13:47,840 --> 01:13:49,440
those two drafts sort of need to sync

1785
01:13:49,440 --> 01:13:50,400
and there's probably gonna be some

1786
01:13:50,400 --> 01:13:51,920
others that crop up

1787
01:13:51,920 --> 01:13:53,280
probably all need to choose a direction

1788
01:13:53,280 --> 01:13:55,360
and synchronize on it

1789
01:13:55,360 --> 01:13:57,679
absolutely i think um because your the

1790
01:13:57,679 --> 01:13:59,280
drop with multiple keys would include

1791
01:13:59,280 --> 01:14:00,880
the same things and you'd have to

1792
01:14:00,880 --> 01:14:02,159
indicate the

1793
01:14:02,159 --> 01:14:04,000
um the usages for those individual keys

1794
01:14:04,000 --> 01:14:06,000
we we basically have to agree because if

1795
01:14:06,000 --> 01:14:07,360
you pick one and

1796
01:14:07,360 --> 01:14:08,400
and you know

1797
01:14:08,400 --> 01:14:09,760
you have two drafts that pick different

1798
01:14:09,760 --> 01:14:11,280
things it's like it's like a foot gun

1799
01:14:11,280 --> 01:14:14,960
that we're firing off for fun

1800
01:14:14,960 --> 01:14:16,800
yeah

1801
01:14:16,800 --> 01:14:18,480
okay john

1802
01:14:18,480 --> 01:14:22,159
yeah how would this um how would this

1803
01:14:22,159 --> 01:14:23,920
relate to the

1804
01:14:23,920 --> 01:14:27,040
final new standards would this be

1805
01:14:27,040 --> 01:14:28,800
the plan to start working on this and

1806
01:14:28,800 --> 01:14:31,120
not publish before the final standards

1807
01:14:31,120 --> 01:14:32,800
is done or

1808
01:14:32,800 --> 01:14:34,320
would this be

1809
01:14:34,320 --> 01:14:37,040
temporary or ids and then if the final

1810
01:14:37,040 --> 01:14:39,360
standards are slightly different then

1811
01:14:39,360 --> 01:14:43,199
there would be new ids

1812
01:14:43,199 --> 01:14:44,719
would hold

1813
01:14:44,719 --> 01:14:46,800
sorry go ahead john no i wasn't gonna

1814
01:14:46,800 --> 01:14:48,080
say it was gonna hold i don't i don't

1815
01:14:48,080 --> 01:14:50,400
really want to pick any winners yet um

1816
01:14:50,400 --> 01:14:52,159
you actually look in the github repo it

1817
01:14:52,159 --> 01:14:54,159
says candidate one and candidate two so

1818
01:14:54,159 --> 01:14:55,600
i even put the names of the algorithms

1819
01:14:55,600 --> 01:14:56,560
in there because i don't want to be

1820
01:14:56,560 --> 01:14:59,360
perceived as picking a winner

1821
01:14:59,360 --> 01:15:01,840
no but it has been like i i guess the

1822
01:15:01,840 --> 01:15:04,880
winners will be picked in just a few

1823
01:15:04,880 --> 01:15:07,600
months if i understand in this schedule

1824
01:15:07,600 --> 01:15:11,600
but the final standards will take

1825
01:15:11,600 --> 01:15:14,239
two years or more

1826
01:15:14,239 --> 01:15:15,040
so

1827
01:15:15,040 --> 01:15:17,199
well i'm hoping what they'll do is what

1828
01:15:17,199 --> 01:15:20,000
i'm hoping they'll do is uh publish a

1829
01:15:20,000 --> 01:15:21,600
list of voids that'll go with that and

1830
01:15:21,600 --> 01:15:24,159
then we won't have to wait for two years

1831
01:15:24,159 --> 01:15:26,480
okay

1832
01:15:32,000 --> 01:15:33,440
okay

1833
01:15:33,440 --> 01:15:35,760
i think the way forward is shawn to

1834
01:15:35,760 --> 01:15:38,400
figure out this key agreement thing

1835
01:15:38,400 --> 01:15:41,920
then post another draft

1836
01:15:42,480 --> 01:15:44,640
and then we will

1837
01:15:44,640 --> 01:15:47,760
do a call for adoption

1838
01:15:48,719 --> 01:15:52,239
thank you for your time

1839
01:15:52,239 --> 01:15:54,639
okay

1840
01:15:57,920 --> 01:16:00,480
and by the way i have this red box here

1841
01:16:00,480 --> 01:16:02,800
so what we did is also extend the score

1842
01:16:02,800 --> 01:16:04,320
option

1843
01:16:04,320 --> 01:16:08,000
with a new blank bits and a field called

1844
01:16:08,000 --> 01:16:12,360
id detail where we practically

1845
01:16:27,600 --> 01:16:29,679
okay allie i think you're doing the

1846
01:16:29,679 --> 01:16:32,159
presenting no hi

1847
01:16:32,159 --> 01:16:33,600
can you hear me

1848
01:16:33,600 --> 01:16:36,239
hear you just fine all right great um

1849
01:16:36,239 --> 01:16:38,719
i'm ali um and i'm gonna just be talking

1850
01:16:38,719 --> 01:16:40,480
about joint work i'm doing with rebecca

1851
01:16:40,480 --> 01:16:42,880
and daphne who are also here today

1852
01:16:42,880 --> 01:16:44,719
uh just on like a general framework that

1853
01:16:44,719 --> 01:16:46,800
we're developing for a post-quantum

1854
01:16:46,800 --> 01:16:49,520
migration discussion so we're excited to

1855
01:16:49,520 --> 01:16:51,040
introduce these ideas and hear some

1856
01:16:51,040 --> 01:16:52,320
feedback

1857
01:16:52,320 --> 01:16:55,120
uh next slide

1858
01:16:55,679 --> 01:16:57,920
all right so um once the post quantum

1859
01:16:57,920 --> 01:17:00,000
key exchange and authentication

1860
01:17:00,000 --> 01:17:01,760
algorithms are selected and standardized

1861
01:17:01,760 --> 01:17:03,280
by nist

1862
01:17:03,280 --> 01:17:05,360
the adoption of these into quantum

1863
01:17:05,360 --> 01:17:08,480
resistant uh protocols really depend on

1864
01:17:08,480 --> 01:17:10,080
the progress that we make in integrating

1865
01:17:10,080 --> 01:17:12,719
these into protocol standards so we know

1866
01:17:12,719 --> 01:17:15,280
there was a lot of past work put into

1867
01:17:15,280 --> 01:17:18,480
building these in a crypto agile way so

1868
01:17:18,480 --> 01:17:20,480
you know it's important to maintain that

1869
01:17:20,480 --> 01:17:22,800
agility as we move forward and migrate

1870
01:17:22,800 --> 01:17:25,040
to post quantum framework

1871
01:17:25,040 --> 01:17:27,199
this idea has led to a lot of recent

1872
01:17:27,199 --> 01:17:29,679
focus on hybrid designs that use both

1873
01:17:29,679 --> 01:17:31,760
traditional and post quantum algorithms

1874
01:17:31,760 --> 01:17:32,880
together

1875
01:17:32,880 --> 01:17:35,199
and we understand that these designs are

1876
01:17:35,199 --> 01:17:37,440
useful for interoperability reasons or

1877
01:17:37,440 --> 01:17:39,679
just transitional purposes during the

1878
01:17:39,679 --> 01:17:42,880
migration but coming from nsa we feel

1879
01:17:42,880 --> 01:17:44,560
that hybrid is not necessary for

1880
01:17:44,560 --> 01:17:46,719
security since we fully trust the

1881
01:17:46,719 --> 01:17:49,040
vetting process of these algorithms um

1882
01:17:49,040 --> 01:17:50,400
and we've assessed the needs for

1883
01:17:50,400 --> 01:17:52,640
national security systems

1884
01:17:52,640 --> 01:17:54,239
and we really require a solution that

1885
01:17:54,239 --> 01:17:56,400
allows for a quick transition to just

1886
01:17:56,400 --> 01:17:58,880
post quantum protocols so we want to

1887
01:17:58,880 --> 01:18:00,800
focus on

1888
01:18:00,800 --> 01:18:02,800
post quantum only solutions as the end

1889
01:18:02,800 --> 01:18:04,880
goal of this migration so we view

1890
01:18:04,880 --> 01:18:07,280
transition as a hybrid that should or

1891
01:18:07,280 --> 01:18:10,560
sorry a hybrid as a transition

1892
01:18:10,560 --> 01:18:12,080
that should allow for an easy move

1893
01:18:12,080 --> 01:18:14,480
forward to strictly post quantum so a

1894
01:18:14,480 --> 01:18:16,640
lot of the work so far has focused on

1895
01:18:16,640 --> 01:18:18,400
using hybrid to ensure backwards

1896
01:18:18,400 --> 01:18:19,760
compatibility

1897
01:18:19,760 --> 01:18:22,400
um but we also want to

1898
01:18:22,400 --> 01:18:24,159
ensure that they allow for forward

1899
01:18:24,159 --> 01:18:27,120
compatibility and by that i mean

1900
01:18:27,120 --> 01:18:28,880
the ability for a hybrid system to

1901
01:18:28,880 --> 01:18:31,199
communicate with systems that prefer to

1902
01:18:31,199 --> 01:18:32,880
use strictly post quantum or next

1903
01:18:32,880 --> 01:18:35,840
generation algorithms so if the idea of

1904
01:18:35,840 --> 01:18:38,080
this forward compatibility is built into

1905
01:18:38,080 --> 01:18:40,239
the current designs then the transition

1906
01:18:40,239 --> 01:18:41,840
you won't need a further transition from

1907
01:18:41,840 --> 01:18:44,239
hybrid to strictly post quantum and this

1908
01:18:44,239 --> 01:18:46,320
way you not only ensure that your system

1909
01:18:46,320 --> 01:18:48,159
can interrupt with one that's fully post

1910
01:18:48,159 --> 01:18:50,000
quantum but you also build in the

1911
01:18:50,000 --> 01:18:52,159
capability for a protocol to be strictly

1912
01:18:52,159 --> 01:18:57,120
post quantum right away uh next slide

1913
01:18:57,120 --> 01:18:58,960
okay so here's just the general

1914
01:18:58,960 --> 01:19:00,880
definition of hybrid in a very broad

1915
01:19:00,880 --> 01:19:03,199
sense that we've seen basically the

1916
01:19:03,199 --> 01:19:05,120
security of a system is not compromised

1917
01:19:05,120 --> 01:19:06,880
as long as at least one of the component

1918
01:19:06,880 --> 01:19:08,640
algorithms is secure

1919
01:19:08,640 --> 01:19:10,480
and then there's several design choices

1920
01:19:10,480 --> 01:19:12,080
that go along with

1921
01:19:12,080 --> 01:19:14,800
looking at hybrid for this architecture

1922
01:19:14,800 --> 01:19:15,600
so

1923
01:19:15,600 --> 01:19:17,440
again we want to make sure that you can

1924
01:19:17,440 --> 01:19:19,920
interrupt with non-hybrid aware systems

1925
01:19:19,920 --> 01:19:21,520
so those that are using strictly

1926
01:19:21,520 --> 01:19:24,080
traditional algorithms and ones that are

1927
01:19:24,080 --> 01:19:26,400
using strictly pulse quantum algorithms

1928
01:19:26,400 --> 01:19:27,760
so that should both of those

1929
01:19:27,760 --> 01:19:29,679
capabilities should be there

1930
01:19:29,679 --> 01:19:31,920
if a design is backwards compatible you

1931
01:19:31,920 --> 01:19:33,520
could should be able to use almost the

1932
01:19:33,520 --> 01:19:35,040
same framework to make the design

1933
01:19:35,040 --> 01:19:37,440
forward compatible since in both cases

1934
01:19:37,440 --> 01:19:38,880
you're just telling the hybrid design

1935
01:19:38,880 --> 01:19:40,320
hey

1936
01:19:40,320 --> 01:19:42,960
only use one of these two algorithms

1937
01:19:42,960 --> 01:19:44,719
so if you design protocols to handle

1938
01:19:44,719 --> 01:19:47,360
forward compatibility now that minimizes

1939
01:19:47,360 --> 01:19:49,040
the changes that are necessary for

1940
01:19:49,040 --> 01:19:50,880
strictly post quantum solutions and

1941
01:19:50,880 --> 01:19:51,679
again

1942
01:19:51,679 --> 01:19:53,520
it avoids a further transition down the

1943
01:19:53,520 --> 01:19:55,920
road from hybrid to post quantum since

1944
01:19:55,920 --> 01:19:57,520
you've already built it in

1945
01:19:57,520 --> 01:19:59,280
uh and then we also want to make sure

1946
01:19:59,280 --> 01:20:00,320
things

1947
01:20:00,320 --> 01:20:02,800
like we don't want to have

1948
01:20:02,800 --> 01:20:05,199
these hybrid designs be prohibitively

1949
01:20:05,199 --> 01:20:07,280
expensive in terms of computational

1950
01:20:07,280 --> 01:20:08,480
performance

1951
01:20:08,480 --> 01:20:10,159
and then things like the time to

1952
01:20:10,159 --> 01:20:12,080
establish a connection between peers

1953
01:20:12,080 --> 01:20:15,280
should not increase exponentially either

1954
01:20:15,280 --> 01:20:16,719
so if you look at a few of the working

1955
01:20:16,719 --> 01:20:18,239
group drafts out there for hybrid

1956
01:20:18,239 --> 01:20:20,239
methods right now there's a ton of

1957
01:20:20,239 --> 01:20:22,000
different terminology being used to

1958
01:20:22,000 --> 01:20:24,320
describe these designs so we've seen

1959
01:20:24,320 --> 01:20:27,520
dual signatures or combined negotiation

1960
01:20:27,520 --> 01:20:30,000
algorithm pairs you know multiple key

1961
01:20:30,000 --> 01:20:31,520
shares things like that

1962
01:20:31,520 --> 01:20:33,520
but if you break it down

1963
01:20:33,520 --> 01:20:35,440
there's really mainly two approaches

1964
01:20:35,440 --> 01:20:37,120
that are gaining traction in the working

1965
01:20:37,120 --> 01:20:39,280
groups and these choices fall into one

1966
01:20:39,280 --> 01:20:40,639
of two camps

1967
01:20:40,639 --> 01:20:42,639
the idea of a non-composite design

1968
01:20:42,639 --> 01:20:45,760
choice and a composite design choice

1969
01:20:45,760 --> 01:20:48,239
next slide

1970
01:20:50,239 --> 01:20:53,040
okay so here's the definitions that we

1971
01:20:53,040 --> 01:20:55,360
are using for the idea of non-composite

1972
01:20:55,360 --> 01:20:57,280
and composite and this is really the

1973
01:20:57,280 --> 01:20:59,600
motivating factor of our talk today so

1974
01:20:59,600 --> 01:21:01,760
we feel it's really important to define

1975
01:21:01,760 --> 01:21:03,840
this framework within the general hybrid

1976
01:21:03,840 --> 01:21:05,840
umbrella as a way to invite a more

1977
01:21:05,840 --> 01:21:07,679
structured discussion about hybrid

1978
01:21:07,679 --> 01:21:09,520
designs that allow us to really make the

1979
01:21:09,520 --> 01:21:11,440
best decisions moving forward into a

1980
01:21:11,440 --> 01:21:12,719
post quantum

1981
01:21:12,719 --> 01:21:14,400
so on the left we have a composite

1982
01:21:14,400 --> 01:21:16,400
design which would be a solution in

1983
01:21:16,400 --> 01:21:18,480
which the traditional and post-quantum

1984
01:21:18,480 --> 01:21:21,120
algorithms function together as one

1985
01:21:21,120 --> 01:21:22,159
entity

1986
01:21:22,159 --> 01:21:24,480
so that would be for example negotiating

1987
01:21:24,480 --> 01:21:26,880
a traditional and pq algorithm together

1988
01:21:26,880 --> 01:21:29,120
as a pair that would be composite

1989
01:21:29,120 --> 01:21:30,960
and then in contrast to that we have

1990
01:21:30,960 --> 01:21:32,880
non-composite

1991
01:21:32,880 --> 01:21:35,040
a solution in which the traditional

1992
01:21:35,040 --> 01:21:36,800
impulse quantum algorithms function

1993
01:21:36,800 --> 01:21:39,520
discretely as individual entities so in

1994
01:21:39,520 --> 01:21:41,040
this case that would be like having two

1995
01:21:41,040 --> 01:21:44,080
separate certificates one post quantum

1996
01:21:44,080 --> 01:21:46,560
certificate and one traditional

1997
01:21:46,560 --> 01:21:47,280
so

1998
01:21:47,280 --> 01:21:48,480
these ideas show up in a lot of

1999
01:21:48,480 --> 01:21:50,239
different parts of a protocol though

2000
01:21:50,239 --> 01:21:51,600
they're not just exclusive to

2001
01:21:51,600 --> 01:21:53,679
certificates so it's important to sort

2002
01:21:53,679 --> 01:21:55,440
of introduce this framework in a more

2003
01:21:55,440 --> 01:21:57,120
general sense

2004
01:21:57,120 --> 01:21:59,520
but today we're going to talk about it

2005
01:21:59,520 --> 01:22:01,760
from the concept of authentication so

2006
01:22:01,760 --> 01:22:02,880
really how

2007
01:22:02,880 --> 01:22:05,440
a hybrid non-composite authentication

2008
01:22:05,440 --> 01:22:07,520
method would look

2009
01:22:07,520 --> 01:22:09,040
and we're working on writing a paper

2010
01:22:09,040 --> 01:22:11,600
detailing the specifics of this approach

2011
01:22:11,600 --> 01:22:13,280
and we may want to introduce it as an

2012
01:22:13,280 --> 01:22:15,440
informational draft to lamps if there's

2013
01:22:15,440 --> 01:22:17,199
interest

2014
01:22:17,199 --> 01:22:19,759
next slide

2015
01:22:20,400 --> 01:22:22,159
okay so here's the basic structure of

2016
01:22:22,159 --> 01:22:23,600
these two approaches

2017
01:22:23,600 --> 01:22:25,920
in contrast to the composite design a

2018
01:22:25,920 --> 01:22:27,840
non-composite authentication is one

2019
01:22:27,840 --> 01:22:29,840
where we have two separate certificates

2020
01:22:29,840 --> 01:22:32,159
so one traditional and one post quantum

2021
01:22:32,159 --> 01:22:33,679
and again we're looking at this under

2022
01:22:33,679 --> 01:22:35,199
the lens that this is solely for

2023
01:22:35,199 --> 01:22:37,040
transitional purposes

2024
01:22:37,040 --> 01:22:38,639
but given that lens we want to use this

2025
01:22:38,639 --> 01:22:39,920
structure to

2026
01:22:39,920 --> 01:22:42,639
allow this design to use a forward um

2027
01:22:42,639 --> 01:22:44,239
transition to strictly post quantum

2028
01:22:44,239 --> 01:22:45,600
authentication

2029
01:22:45,600 --> 01:22:47,360
so the biggest difference between these

2030
01:22:47,360 --> 01:22:49,440
two methods is really that most of the

2031
01:22:49,440 --> 01:22:51,679
work for non-composite is put into

2032
01:22:51,679 --> 01:22:53,679
updating the protocol to handle two

2033
01:22:53,679 --> 01:22:55,360
separate certificates instead of just

2034
01:22:55,360 --> 01:22:57,360
one so most of the work goes there

2035
01:22:57,360 --> 01:22:58,400
versus

2036
01:22:58,400 --> 01:23:00,639
the composite approach

2037
01:23:00,639 --> 01:23:03,360
however the structure for non-composite

2038
01:23:03,360 --> 01:23:05,600
of certificate signing and verification

2039
01:23:05,600 --> 01:23:07,840
doesn't change the protocol just needs

2040
01:23:07,840 --> 01:23:09,760
to adapt during the process twice once

2041
01:23:09,760 --> 01:23:12,159
with traditional and once with pq

2042
01:23:12,159 --> 01:23:13,760
so for the next two slides i'll go over

2043
01:23:13,760 --> 01:23:16,239
like the pros and cons of each design

2044
01:23:16,239 --> 01:23:17,920
in the context of our research of how

2045
01:23:17,920 --> 01:23:18,960
this would look in two different

2046
01:23:18,960 --> 01:23:23,040
protocols ikev2 and tls 1.3

2047
01:23:23,040 --> 01:23:25,600
next slide

2048
01:23:25,679 --> 01:23:28,880
okay so for composite authentication

2049
01:23:28,880 --> 01:23:30,239
for this slide we'll consider using a

2050
01:23:30,239 --> 01:23:32,320
composite signature and composite

2051
01:23:32,320 --> 01:23:34,960
certificate so as far as deciding which

2052
01:23:34,960 --> 01:23:37,040
algorithms to use a composite design can

2053
01:23:37,040 --> 01:23:38,719
really just build on the existing

2054
01:23:38,719 --> 01:23:40,800
structure of the protocol and avoid

2055
01:23:40,800 --> 01:23:42,960
having to introduce new protocol logic

2056
01:23:42,960 --> 01:23:45,760
here so for example in tls you can

2057
01:23:45,760 --> 01:23:47,760
negotiate the algorithms in a composite

2058
01:23:47,760 --> 01:23:48,560
way

2059
01:23:48,560 --> 01:23:50,960
the client can offer a list of pairs of

2060
01:23:50,960 --> 01:23:53,199
algorithms that it can support together

2061
01:23:53,199 --> 01:23:54,719
and that can be put right into the

2062
01:23:54,719 --> 01:23:56,960
existing signature algorithms extension

2063
01:23:56,960 --> 01:23:59,280
structure and this also builds in the

2064
01:23:59,280 --> 01:24:01,280
ability to match security levels between

2065
01:24:01,280 --> 01:24:03,199
algorithms if you're using both

2066
01:24:03,199 --> 01:24:05,280
simultaneously

2067
01:24:05,280 --> 01:24:07,920
however there's a few downsides so first

2068
01:24:07,920 --> 01:24:10,560
you'd have to define new composite voids

2069
01:24:10,560 --> 01:24:13,280
or or group identifiers to describe the

2070
01:24:13,280 --> 01:24:15,280
pairs of algorithms together so in

2071
01:24:15,280 --> 01:24:17,360
essence your protocol really has to

2072
01:24:17,360 --> 01:24:19,520
support three types of identifiers the

2073
01:24:19,520 --> 01:24:20,639
traditional

2074
01:24:20,639 --> 01:24:23,040
hybrid and the pulse quantum again

2075
01:24:23,040 --> 01:24:24,719
because we're thinking about this as the

2076
01:24:24,719 --> 01:24:26,880
most straightforward design that allows

2077
01:24:26,880 --> 01:24:28,480
for the protocol to be forward and

2078
01:24:28,480 --> 01:24:31,360
backwards compatible um the next point

2079
01:24:31,360 --> 01:24:33,600
we won't get into too much detail but uh

2080
01:24:33,600 --> 01:24:35,440
the validation process for composite

2081
01:24:35,440 --> 01:24:37,600
signatures is different from the

2082
01:24:37,600 --> 01:24:39,199
validation process for just a single

2083
01:24:39,199 --> 01:24:41,120
signature

2084
01:24:41,120 --> 01:24:42,800
um all right then there's some questions

2085
01:24:42,800 --> 01:24:45,280
regarding deprecation of algorithms so

2086
01:24:45,280 --> 01:24:47,760
what happens if one algorithm in my

2087
01:24:47,760 --> 01:24:50,320
composite gets deprecated since it's

2088
01:24:50,320 --> 01:24:52,320
composite you either need to revoke the

2089
01:24:52,320 --> 01:24:54,159
entire certificate or revoke the

2090
01:24:54,159 --> 01:24:56,480
deprecated algorithm and then this opens

2091
01:24:56,480 --> 01:24:58,320
up questions into how you handle root

2092
01:24:58,320 --> 01:25:01,040
certificate authorities and start chains

2093
01:25:01,040 --> 01:25:03,199
so like is the whole chain composite and

2094
01:25:03,199 --> 01:25:04,880
what happens if one gets deprecated

2095
01:25:04,880 --> 01:25:06,159
things like that

2096
01:25:06,159 --> 01:25:08,400
um the last point then is regarding the

2097
01:25:08,400 --> 01:25:10,000
transition to strictly post quantum

2098
01:25:10,000 --> 01:25:12,480
systems so if we move forward with

2099
01:25:12,480 --> 01:25:14,719
composite authentication it's not very

2100
01:25:14,719 --> 01:25:16,560
straightforward with regards to

2101
01:25:16,560 --> 01:25:18,560
backwards and forwards compatibility so

2102
01:25:18,560 --> 01:25:20,000
how do you drop one of the two

2103
01:25:20,000 --> 01:25:21,840
composites to

2104
01:25:21,840 --> 01:25:24,159
a non-hybrid aware system

2105
01:25:24,159 --> 01:25:25,760
and it's really important to maintain

2106
01:25:25,760 --> 01:25:27,520
that interoperability when we're going

2107
01:25:27,520 --> 01:25:29,520
to backwards and forwards to just pulse

2108
01:25:29,520 --> 01:25:30,960
quantum

2109
01:25:30,960 --> 01:25:33,120
so essentially the hybrid composite

2110
01:25:33,120 --> 01:25:35,520
approach requires implementations to

2111
01:25:35,520 --> 01:25:37,679
possibly face another entire transition

2112
01:25:37,679 --> 01:25:40,800
period from the hybrid period into just

2113
01:25:40,800 --> 01:25:42,239
the post quantum period and we'd really

2114
01:25:42,239 --> 01:25:44,239
like to avoid that and use

2115
01:25:44,239 --> 01:25:45,360
the

2116
01:25:45,360 --> 01:25:48,800
hybrid as the transition to post quantum

2117
01:25:48,800 --> 01:25:51,360
next slide

2118
01:25:51,520 --> 01:25:53,600
so then the opposite of that would be

2119
01:25:53,600 --> 01:25:55,199
the non-composite approach that we're

2120
01:25:55,199 --> 01:25:56,960
looking at so there's several

2121
01:25:56,960 --> 01:25:58,159
differences

2122
01:25:58,159 --> 01:26:00,480
here from composite so first the

2123
01:26:00,480 --> 01:26:02,239
computational process for validation

2124
01:26:02,239 --> 01:26:03,840
doesn't change you just have to do it

2125
01:26:03,840 --> 01:26:05,040
more than once

2126
01:26:05,040 --> 01:26:07,280
so this will probably work different for

2127
01:26:07,280 --> 01:26:08,800
comes and stuff but that would affect

2128
01:26:08,800 --> 01:26:12,080
the composite design as well um so this

2129
01:26:12,080 --> 01:26:13,679
does however result in logistical

2130
01:26:13,679 --> 01:26:16,239
changes at the protocol level so if you

2131
01:26:16,239 --> 01:26:18,480
think about it ipv2 you'd need like a

2132
01:26:18,480 --> 01:26:21,120
new node notify payload

2133
01:26:21,120 --> 01:26:23,760
to be defined in the i guess i init and

2134
01:26:23,760 --> 01:26:26,239
that would signify support for composite

2135
01:26:26,239 --> 01:26:28,320
authentication and then sending this

2136
01:26:28,320 --> 01:26:29,600
payload would indicate that your

2137
01:26:29,600 --> 01:26:31,760
implementation is going to support two

2138
01:26:31,760 --> 01:26:34,159
sets of cert requests and authentication

2139
01:26:34,159 --> 01:26:36,080
insert payloads where one would be for

2140
01:26:36,080 --> 01:26:38,000
the traditional algorithm and the other

2141
01:26:38,000 --> 01:26:39,280
one would be for the post quantum

2142
01:26:39,280 --> 01:26:40,880
algorithm

2143
01:26:40,880 --> 01:26:42,480
there's a similar story that happens for

2144
01:26:42,480 --> 01:26:45,920
changes required in tls 1.3 to implement

2145
01:26:45,920 --> 01:26:47,440
non-composite

2146
01:26:47,440 --> 01:26:49,679
however in the long run if the goal is a

2147
01:26:49,679 --> 01:26:52,000
jump forward to strictly post quantum

2148
01:26:52,000 --> 01:26:54,480
solutions making these logic changes now

2149
01:26:54,480 --> 01:26:56,400
allows them to be forward compatible and

2150
01:26:56,400 --> 01:26:58,320
strictly pulls quantum ready right away

2151
01:26:58,320 --> 01:27:01,440
without a further transition

2152
01:27:01,440 --> 01:27:03,360
using two separate certificates also

2153
01:27:03,360 --> 01:27:05,120
makes it quite easy to be compatible

2154
01:27:05,120 --> 01:27:07,520
with non-hybrid aware entities so the

2155
01:27:07,520 --> 01:27:09,520
same signature algorithm points are used

2156
01:27:09,520 --> 01:27:11,440
in a hybrid as they are for a

2157
01:27:11,440 --> 01:27:13,440
traditional system and a pulse quantum

2158
01:27:13,440 --> 01:27:14,880
system

2159
01:27:14,880 --> 01:27:17,440
and then if you have support for one or

2160
01:27:17,440 --> 01:27:19,280
the other the unsupported certificate

2161
01:27:19,280 --> 01:27:21,120
just won't be sent right

2162
01:27:21,120 --> 01:27:23,760
so for example in iv2 only one set of

2163
01:27:23,760 --> 01:27:25,840
cert requests or an off payloads will be

2164
01:27:25,840 --> 01:27:29,679
sent that indicates a non-hybrid status

2165
01:27:29,679 --> 01:27:31,120
for the client

2166
01:27:31,120 --> 01:27:33,120
so overall this design allows for

2167
01:27:33,120 --> 01:27:34,639
broader crypto agility since you're

2168
01:27:34,639 --> 01:27:36,000
really just using the same sets of

2169
01:27:36,000 --> 01:27:38,400
algorithms and no new set needs to get

2170
01:27:38,400 --> 01:27:39,600
introduced

2171
01:27:39,600 --> 01:27:40,400
um

2172
01:27:40,400 --> 01:27:41,760
also for search chains this is

2173
01:27:41,760 --> 01:27:44,159
straightforward so the non-composite

2174
01:27:44,159 --> 01:27:45,679
approach it's really just a matter of a

2175
01:27:45,679 --> 01:27:47,920
policy update to support more than one

2176
01:27:47,920 --> 01:27:49,600
because it'll use the same root

2177
01:27:49,600 --> 01:27:51,520
certificate authorities and the chains

2178
01:27:51,520 --> 01:27:53,920
are unchanged as well

2179
01:27:53,920 --> 01:27:56,719
all right next slide

2180
01:27:58,320 --> 01:27:59,840
uh yeah so we're really just looking to

2181
01:27:59,840 --> 01:28:02,159
get feedback for this on the list um

2182
01:28:02,159 --> 01:28:03,199
like i said we have sort of an

2183
01:28:03,199 --> 01:28:06,320
informational draft uh in the works that

2184
01:28:06,320 --> 01:28:08,719
gets into the gritty details of how this

2185
01:28:08,719 --> 01:28:10,560
non-composite authentication design

2186
01:28:10,560 --> 01:28:12,800
looks and then we have a more technical

2187
01:28:12,800 --> 01:28:14,560
report where we look at the details of

2188
01:28:14,560 --> 01:28:16,639
this in the lens of two different

2189
01:28:16,639 --> 01:28:18,320
protocols

2190
01:28:18,320 --> 01:28:19,600
but overall we really just want to

2191
01:28:19,600 --> 01:28:21,760
introduce this hybrid terminology of

2192
01:28:21,760 --> 01:28:24,719
composite and non-composite into lamps

2193
01:28:24,719 --> 01:28:27,120
and maybe into ietf as a whole to use

2194
01:28:27,120 --> 01:28:29,280
this as a framework for post quantum

2195
01:28:29,280 --> 01:28:31,520
migration

2196
01:28:31,520 --> 01:28:34,000
and that's all

2197
01:28:36,000 --> 01:28:39,520
okay uh dkg then joe salloway

2198
01:28:39,520 --> 01:28:40,960
hi there this is daniel kahn gilmore

2199
01:28:40,960 --> 01:28:42,400
from the aclu thanks for this

2200
01:28:42,400 --> 01:28:44,560
presentation uh it's really useful to

2201
01:28:44,560 --> 01:28:45,520
see the kind of framing that you're

2202
01:28:45,520 --> 01:28:47,440
talking about i wonder if you have any

2203
01:28:47,440 --> 01:28:50,320
thoughts about how this would map to

2204
01:28:50,320 --> 01:28:51,679
your analysis i feel like is very

2205
01:28:51,679 --> 01:28:54,000
specific to authentication here

2206
01:28:54,000 --> 01:28:55,040
and i wonder if you have any thoughts

2207
01:28:55,040 --> 01:28:56,960
about how this maps to key agreement or

2208
01:28:56,960 --> 01:28:59,360
encryption schemes

2209
01:28:59,360 --> 01:29:01,360
uh yeah i think that this framework of

2210
01:29:01,360 --> 01:29:02,880
composite and non-composite can

2211
01:29:02,880 --> 01:29:04,159
definitely be

2212
01:29:04,159 --> 01:29:07,600
used for um key exchange as well it's

2213
01:29:07,600 --> 01:29:09,679
not just for authentication

2214
01:29:09,679 --> 01:29:11,360
so i think in some of the working groups

2215
01:29:11,360 --> 01:29:12,800
like tls

2216
01:29:12,800 --> 01:29:14,320
their hybrid approach right now is a

2217
01:29:14,320 --> 01:29:16,400
composite using composite negotiation

2218
01:29:16,400 --> 01:29:18,400
for key exchange as well

2219
01:29:18,400 --> 01:29:19,840
but you could use this idea of

2220
01:29:19,840 --> 01:29:23,120
non-composite there too

2221
01:29:23,120 --> 01:29:25,120
sorry i don't think that tls is doing

2222
01:29:25,120 --> 01:29:27,120
key exchange right now tls is doing

2223
01:29:27,120 --> 01:29:29,040
authentication right these are

2224
01:29:29,040 --> 01:29:31,360
modern tls does signing

2225
01:29:31,360 --> 01:29:32,639
of the

2226
01:29:32,639 --> 01:29:36,639
separately diffie-hellman negotiated

2227
01:29:36,800 --> 01:29:39,040
key agreement oh yeah i was talking

2228
01:29:39,040 --> 01:29:41,520
about there's a hybrid draft in tls

2229
01:29:41,520 --> 01:29:44,480
that's uh looking at um

2230
01:29:44,480 --> 01:29:45,920
for post quantum migration how that

2231
01:29:45,920 --> 01:29:47,440
would work

2232
01:29:47,440 --> 01:29:49,120
of the but of the analysis that you

2233
01:29:49,120 --> 01:29:50,719
presented you seem to have a lot more

2234
01:29:50,719 --> 01:29:53,679
pros on the non-composite

2235
01:29:53,679 --> 01:29:55,520
than on the composite i'm wondering

2236
01:29:55,520 --> 01:29:58,000
whether that analysis applies to

2237
01:29:58,000 --> 01:29:59,360
whether you think that the analysis

2238
01:29:59,360 --> 01:30:01,360
you've presented here applies to key

2239
01:30:01,360 --> 01:30:03,040
agreement schemes in addition to

2240
01:30:03,040 --> 01:30:05,520
applying to authentication schemes

2241
01:30:05,520 --> 01:30:06,719
oh um

2242
01:30:06,719 --> 01:30:08,320
yeah so our

2243
01:30:08,320 --> 01:30:10,000
our pro con list is mostly looking

2244
01:30:10,000 --> 01:30:11,920
forward to

2245
01:30:11,920 --> 01:30:14,400
what structure would make it easier to

2246
01:30:14,400 --> 01:30:16,880
move to just a post quantum framework so

2247
01:30:16,880 --> 01:30:19,679
yes this does it was not you know just

2248
01:30:19,679 --> 01:30:21,600
authentication specific but we were

2249
01:30:21,600 --> 01:30:23,120
using that as a framework for today's

2250
01:30:23,120 --> 01:30:25,840
talk yeah

2251
01:30:27,679 --> 01:30:29,440
okay joe

2252
01:30:29,440 --> 01:30:32,320
oh yeah so a similar question to daniels

2253
01:30:32,320 --> 01:30:34,320
i think just to come i think it would be

2254
01:30:34,320 --> 01:30:36,560
useful to kind of go because i think

2255
01:30:36,560 --> 01:30:38,080
the key agreement

2256
01:30:38,080 --> 01:30:38,880
uh

2257
01:30:38,880 --> 01:30:40,320
hybrid structure is going to be a little

2258
01:30:40,320 --> 01:30:41,840
bit different than authentication

2259
01:30:41,840 --> 01:30:43,280
because at the end of the day i think

2260
01:30:43,280 --> 01:30:46,239
you need to end up with one key

2261
01:30:46,239 --> 01:30:48,960
or you know some some shared secret so i

2262
01:30:48,960 --> 01:30:50,880
think there's some differences so i

2263
01:30:50,880 --> 01:30:52,719
think it would be good to

2264
01:30:52,719 --> 01:30:54,239
if you think this is going to apply to

2265
01:30:54,239 --> 01:30:56,320
kieron agreement as well which makes

2266
01:30:56,320 --> 01:30:58,480
sense that it would uh but i think it

2267
01:30:58,480 --> 01:31:00,159
would be good to go through some of

2268
01:31:00,159 --> 01:31:02,880
those pros and cons lists and kind of

2269
01:31:02,880 --> 01:31:05,840
the analysis specifically

2270
01:31:05,840 --> 01:31:08,080
thanks

2271
01:31:08,800 --> 01:31:11,199
scott

2272
01:31:12,400 --> 01:31:14,400
i've already talked to the tls working

2273
01:31:14,400 --> 01:31:16,080
group of at least some some people in

2274
01:31:16,080 --> 01:31:18,880
there and they really uh

2275
01:31:18,880 --> 01:31:20,960
want to go with non-composites uh

2276
01:31:20,960 --> 01:31:24,480
signature certificate design because uh

2277
01:31:24,480 --> 01:31:25,840
basically if you

2278
01:31:25,840 --> 01:31:28,400
they don't want the bandwidth choose a

2279
01:31:28,400 --> 01:31:30,719
bandwidth for something for a legacy

2280
01:31:30,719 --> 01:31:33,760
client which doesn't need these huge

2281
01:31:33,760 --> 01:31:36,639
post quantum signatures public keys

2282
01:31:36,639 --> 01:31:38,000
uh the

2283
01:31:38,000 --> 01:31:40,960
what i'm taking but from that is

2284
01:31:40,960 --> 01:31:42,400
maybe this is not something that the

2285
01:31:42,400 --> 01:31:44,480
lamp should decide but it's really

2286
01:31:44,480 --> 01:31:45,840
something that the working groups need

2287
01:31:45,840 --> 01:31:49,120
to decide and lamps needs to

2288
01:31:49,120 --> 01:31:50,800
do

2289
01:31:50,800 --> 01:31:54,400
maybe needs both options out there

2290
01:31:56,719 --> 01:31:59,280
beginning to think that myself scott so

2291
01:31:59,280 --> 01:32:01,280
uh that we need to

2292
01:32:01,280 --> 01:32:05,120
give both tools to working groups uh to

2293
01:32:05,120 --> 01:32:06,239
implement

2294
01:32:06,239 --> 01:32:08,639
or to pick from in their protocol

2295
01:32:08,639 --> 01:32:09,920
environment

2296
01:32:09,920 --> 01:32:11,280
um

2297
01:32:11,280 --> 01:32:13,840
mike

2298
01:32:16,880 --> 01:32:19,920
a couple of comments uh first scott

2299
01:32:19,920 --> 01:32:21,520
so i've been

2300
01:32:21,520 --> 01:32:23,679
viewing the composite stuff as existing

2301
01:32:23,679 --> 01:32:25,679
within a multi-cert environment so i'm

2302
01:32:25,679 --> 01:32:27,280
imagining that you'll provision your tls

2303
01:32:27,280 --> 01:32:30,239
server with an rsa cert and separately

2304
01:32:30,239 --> 01:32:32,719
an rsa plus pq cert

2305
01:32:32,719 --> 01:32:34,560
is how i've been imagining this

2306
01:32:34,560 --> 01:32:36,400
composite would get used

2307
01:32:36,400 --> 01:32:38,000
and if you're already sending a pq

2308
01:32:38,000 --> 01:32:39,199
public key

2309
01:32:39,199 --> 01:32:41,199
slapping an rsa public key into the same

2310
01:32:41,199 --> 01:32:44,239
object for you know good measure is

2311
01:32:44,239 --> 01:32:46,719
nothing in terms of bytes on the wire

2312
01:32:46,719 --> 01:32:48,320
so i've i've i've actually been

2313
01:32:48,320 --> 01:32:49,679
imagining that

2314
01:32:49,679 --> 01:32:51,440
composite exists within a multicert

2315
01:32:51,440 --> 01:32:52,639
framework

2316
01:32:52,639 --> 01:32:54,480
for exactly the don't send it if you

2317
01:32:54,480 --> 01:32:55,600
don't need it

2318
01:32:55,600 --> 01:32:57,920
reason

2319
01:32:57,920 --> 01:32:59,920
um i don't know what if that's

2320
01:32:59,920 --> 01:33:01,679
commensurate with the discussions in tls

2321
01:33:01,679 --> 01:33:02,960
or not

2322
01:33:02,960 --> 01:33:04,239
um

2323
01:33:04,239 --> 01:33:06,000
second while i have the mic and i i'm

2324
01:33:06,000 --> 01:33:07,840
about to present right after this on

2325
01:33:07,840 --> 01:33:10,639
composite um but ali thank you so much

2326
01:33:10,639 --> 01:33:12,000
for this framework i think this is

2327
01:33:12,000 --> 01:33:13,199
really

2328
01:33:13,199 --> 01:33:15,120
really useful work

2329
01:33:15,120 --> 01:33:17,440
um comment i'll make so i think i've

2330
01:33:17,440 --> 01:33:19,600
speaking for myself not for all the

2331
01:33:19,600 --> 01:33:22,159
authors here but i think i fully agree

2332
01:33:22,159 --> 01:33:24,320
that for online negotiated protocols ike

2333
01:33:24,320 --> 01:33:26,320
tls i think i totally agree with your

2334
01:33:26,320 --> 01:33:28,239
analysis multi-cert gives more

2335
01:33:28,239 --> 01:33:31,120
negotiation flexibility yada yada i

2336
01:33:31,120 --> 01:33:32,480
think that's great

2337
01:33:32,480 --> 01:33:34,320
where we keep getting stuck in our own

2338
01:33:34,320 --> 01:33:36,480
internal design sessions is the offline

2339
01:33:36,480 --> 01:33:39,199
protocols code signing s mime

2340
01:33:39,199 --> 01:33:41,199
those type things where you're you're

2341
01:33:41,199 --> 01:33:43,280
signing objects or you're encrypting

2342
01:33:43,280 --> 01:33:44,639
payloads you're just firing them into

2343
01:33:44,639 --> 01:33:46,400
the void and you have no idea who's

2344
01:33:46,400 --> 01:33:48,159
going to pick them up

2345
01:33:48,159 --> 01:33:50,480
that's the cases where we we don't we

2346
01:33:50,480 --> 01:33:52,000
just haven't found a way to make

2347
01:33:52,000 --> 01:33:54,080
multi-cert click you know if you get an

2348
01:33:54,080 --> 01:33:56,239
exe and you're an exe running framework

2349
01:33:56,239 --> 01:33:57,520
and you're validating the signature on

2350
01:33:57,520 --> 01:33:59,600
that exe how do you know that there were

2351
01:33:59,600 --> 01:34:02,159
supposed to be two signatures on it

2352
01:34:02,159 --> 01:34:03,280
you know how do you how do you prevent

2353
01:34:03,280 --> 01:34:04,800
that stripping attack in a totally

2354
01:34:04,800 --> 01:34:07,440
offline non-negotiated so i would love

2355
01:34:07,440 --> 01:34:09,440
to see your framework also address

2356
01:34:09,440 --> 01:34:11,600
offline protocols

2357
01:34:11,600 --> 01:34:13,199
possibly completely separately from

2358
01:34:13,199 --> 01:34:16,239
online protocols

2359
01:34:16,719 --> 01:34:19,840
i think that's a good suggestion

2360
01:34:28,159 --> 01:34:30,159
so i was

2361
01:34:30,159 --> 01:34:31,760
commenting about eye version 2 i

2362
01:34:31,760 --> 01:34:34,320
question 2 is actually not defining at

2363
01:34:34,320 --> 01:34:36,159
all for authentication it's only doing

2364
01:34:36,159 --> 01:34:38,480
the agreement currently because we see

2365
01:34:38,480 --> 01:34:40,880
that the authentication is coming coming

2366
01:34:40,880 --> 01:34:43,119
from us to us from pkx or something like

2367
01:34:43,119 --> 01:34:44,960
that that we don't we just use the

2368
01:34:44,960 --> 01:34:46,239
certificate and hope that everything

2369
01:34:46,239 --> 01:34:47,199
works

2370
01:34:47,199 --> 01:34:49,040
but in our key agreement when we are

2371
01:34:49,040 --> 01:34:50,560
doing non-composite

2372
01:34:50,560 --> 01:34:53,199
method we do separate rounds and each of

2373
01:34:53,199 --> 01:34:54,800
the round is actually finished before

2374
01:34:54,800 --> 01:34:56,639
the next one starts and each of them

2375
01:34:56,639 --> 01:34:59,199
actually updates the keys that are used

2376
01:34:59,199 --> 01:35:01,360
for the future rounds

2377
01:35:01,360 --> 01:35:02,159
and

2378
01:35:02,159 --> 01:35:04,480
the first round is always going to be

2379
01:35:04,480 --> 01:35:06,880
traditional development and we are not

2380
01:35:06,880 --> 01:35:08,880
going to be go away from that

2381
01:35:08,880 --> 01:35:11,199
you know i don't think so and the reason

2382
01:35:11,199 --> 01:35:14,400
being that it actually provides us quite

2383
01:35:14,400 --> 01:35:16,480
good security in a way that we actually

2384
01:35:16,480 --> 01:35:18,320
know that the person we are talking at

2385
01:35:18,320 --> 01:35:21,440
at that point is going to stay safe

2386
01:35:21,440 --> 01:35:22,800
so it gives us

2387
01:35:22,800 --> 01:35:24,960
this kind of continuity

2388
01:35:24,960 --> 01:35:26,080
uh even

2389
01:35:26,080 --> 01:35:27,600
i don't think anybody is going to have

2390
01:35:27,600 --> 01:35:29,360
you know

2391
01:35:29,360 --> 01:35:31,920
a quantum computer that can break

2392
01:35:31,920 --> 01:35:34,800
tiffa helman in seconds

2393
01:35:34,800 --> 01:35:37,040
it would be required to be able to break

2394
01:35:37,040 --> 01:35:38,719
this kind of you know because three film

2395
01:35:38,719 --> 01:35:40,960
is only used to protect the next

2396
01:35:40,960 --> 01:35:42,880
10 messages or a couple of messages

2397
01:35:42,880 --> 01:35:45,280
after that

2398
01:35:45,440 --> 01:35:46,719
there is also

2399
01:35:46,719 --> 01:35:47,840
one of the things that we have been

2400
01:35:47,840 --> 01:35:49,199
seeing that people have been complaining

2401
01:35:49,199 --> 01:35:51,199
about because some of the

2402
01:35:51,199 --> 01:35:53,040
post quantum methods are

2403
01:35:53,040 --> 01:35:55,760
the keys are big and we don't want to do

2404
01:35:55,760 --> 01:35:57,920
that before the authentication or some

2405
01:35:57,920 --> 01:35:59,920
form of authentication

2406
01:35:59,920 --> 01:36:02,880
so we have also a way of doing

2407
01:36:02,880 --> 01:36:05,520
uh we do a couple of rounds you know we

2408
01:36:05,520 --> 01:36:07,280
might purely filament first then we

2409
01:36:07,280 --> 01:36:09,440
might do an authentication with

2410
01:36:09,440 --> 01:36:12,000
traditional you know some method of

2411
01:36:12,000 --> 01:36:14,239
doing out the case like a preset key

2412
01:36:14,239 --> 01:36:17,600
and then we could do some more you know

2413
01:36:17,600 --> 01:36:20,000
post quantum key exchange p agreement

2414
01:36:20,000 --> 01:36:22,880
methods to actually be written protected

2415
01:36:22,880 --> 01:36:25,360
by the authentication done by the preset

2416
01:36:25,360 --> 01:36:26,239
key

2417
01:36:26,239 --> 01:36:27,760
and the precinct key is actually post

2418
01:36:27,760 --> 01:36:30,320
component safe provided the preset key

2419
01:36:30,320 --> 01:36:34,639
comp is itself or ppk is uh strong

2420
01:36:34,639 --> 01:36:38,080
enough to be protected so so it's it's a

2421
01:36:38,080 --> 01:36:40,000
little bit different it's not completely

2422
01:36:40,000 --> 01:36:42,239
non-comp composite and we are never

2423
01:36:42,239 --> 01:36:43,199
actually

2424
01:36:43,199 --> 01:36:44,880
probably going away from the original

2425
01:36:44,880 --> 01:36:47,440
dfa helmet because that's so fast and it

2426
01:36:47,440 --> 01:36:49,360
only provides the security for the next

2427
01:36:49,360 --> 01:36:53,480
few exchanges after that

2428
01:36:57,679 --> 01:36:59,600
yeah i guess i'll just say that these

2429
01:36:59,600 --> 01:37:01,840
ideas definitely show up in different

2430
01:37:01,840 --> 01:37:04,719
areas of the protocol so it's not just

2431
01:37:04,719 --> 01:37:08,239
in authentication um and i know ike v2

2432
01:37:08,239 --> 01:37:09,600
has uh

2433
01:37:09,600 --> 01:37:12,000
you know specific things set up for the

2434
01:37:12,000 --> 01:37:13,520
intermediate exchange and things like

2435
01:37:13,520 --> 01:37:15,760
that to handle this um but i still think

2436
01:37:15,760 --> 01:37:17,600
it's a nice general framework to have

2437
01:37:17,600 --> 01:37:21,400
when discussing it

2438
01:37:28,480 --> 01:37:30,800
see that the queue is empty

2439
01:37:30,800 --> 01:37:34,639
allison and your co-authors thank you

2440
01:37:34,639 --> 01:37:36,960
i heard a lot of interest in the chat

2441
01:37:36,960 --> 01:37:38,880
for um

2442
01:37:38,880 --> 01:37:41,360
a paper so

2443
01:37:41,360 --> 01:37:44,000
i hope you will do that and uh i heard

2444
01:37:44,000 --> 01:37:46,080
suggestions that you had

2445
01:37:46,080 --> 01:37:48,880
a store and forward based

2446
01:37:48,880 --> 01:37:52,400
protocol to your analysis

2447
01:37:54,480 --> 01:37:58,239
okay so the last presentation

2448
01:37:58,239 --> 01:37:59,520
was the one that

2449
01:37:59,520 --> 01:38:00,560
mike

2450
01:38:00,560 --> 01:38:04,960
already alluded to on composite

2451
01:38:05,679 --> 01:38:07,280
and so might come

2452
01:38:07,280 --> 01:38:10,400
please come to the mic

2453
01:38:12,239 --> 01:38:14,560
hello

2454
01:38:14,560 --> 01:38:17,199
okay um aware that i'm the last thing in

2455
01:38:17,199 --> 01:38:19,600
the day i will try and move quickly i've

2456
01:38:19,600 --> 01:38:21,280
got a this is sort of a grab bag of

2457
01:38:21,280 --> 01:38:23,600
different stuff because i'm in we're

2458
01:38:23,600 --> 01:38:26,400
we're involved in probably six different

2459
01:38:26,400 --> 01:38:28,960
drafts at this point which i've now got

2460
01:38:28,960 --> 01:38:31,679
less than 20 minutes to power through so

2461
01:38:31,679 --> 01:38:34,400
uh go

2462
01:38:37,119 --> 01:38:38,639
next

2463
01:38:38,639 --> 01:38:39,360
so

2464
01:38:39,360 --> 01:38:41,679
sort of two different bags of topics

2465
01:38:41,679 --> 01:38:43,199
here one i'm going to throw a single

2466
01:38:43,199 --> 01:38:44,560
slide about the work that i've been

2467
01:38:44,560 --> 01:38:46,719
doing with the guys at crypto next so

2468
01:38:46,719 --> 01:38:47,840
that's

2469
01:38:47,840 --> 01:38:50,159
not composite at all that's just trying

2470
01:38:50,159 --> 01:38:52,239
to figure out how to

2471
01:38:52,239 --> 01:38:53,760
how to

2472
01:38:53,760 --> 01:38:55,840
how to do the pipe the plumbing work to

2473
01:38:55,840 --> 01:38:59,360
fit a chem into a cms content encryption

2474
01:38:59,360 --> 01:39:01,040
enveloped data

2475
01:39:01,040 --> 01:39:02,800
so i can just do a single slide update

2476
01:39:02,800 --> 01:39:04,080
on how that work is going since it

2477
01:39:04,080 --> 01:39:06,159
hasn't been to the mailing list yet

2478
01:39:06,159 --> 01:39:08,639
and then into the meat of composite

2479
01:39:08,639 --> 01:39:10,440
where we're at

2480
01:39:10,440 --> 01:39:13,280
updates um

2481
01:39:13,280 --> 01:39:15,760
ali ellison's presentation was a good

2482
01:39:15,760 --> 01:39:17,119
load of information so i'm curious to

2483
01:39:17,119 --> 01:39:19,199
see if any of this shakes out

2484
01:39:19,199 --> 01:39:21,679
becomes unnecessary wants to be re

2485
01:39:21,679 --> 01:39:24,000
rewritten given that analysis i think

2486
01:39:24,000 --> 01:39:26,320
it's you know we don't have any horses

2487
01:39:26,320 --> 01:39:27,440
in this race we just want to see the

2488
01:39:27,440 --> 01:39:29,760
technology move on so that's

2489
01:39:29,760 --> 01:39:31,760
amazing that nsa is stepping up to give

2490
01:39:31,760 --> 01:39:33,600
guidance here hopefully that will help

2491
01:39:33,600 --> 01:39:35,199
help to settle some of these design

2492
01:39:35,199 --> 01:39:36,719
decisions

2493
01:39:36,719 --> 01:39:37,679
okay

2494
01:39:37,679 --> 01:39:40,679
next

2495
01:39:40,880 --> 01:39:43,520
so uh this is a draft primarily authored

2496
01:39:43,520 --> 01:39:45,920
by ludovic pereira and julian pratt um

2497
01:39:45,920 --> 01:39:48,080
i'm they didn't sign up for a speaking

2498
01:39:48,080 --> 01:39:50,480
slot so i'm taking this for them

2499
01:39:50,480 --> 01:39:51,840
um

2500
01:39:51,840 --> 01:39:55,199
chems chems are a different

2501
01:39:55,199 --> 01:39:56,639
structure

2502
01:39:56,639 --> 01:39:59,199
structurally different from either a key

2503
01:39:59,199 --> 01:40:02,639
trans or a

2504
01:40:02,639 --> 01:40:04,000
key agree

2505
01:40:04,000 --> 01:40:06,480
it's i mean you can sort of convert one

2506
01:40:06,480 --> 01:40:08,159
into the others you can convert either a

2507
01:40:08,159 --> 01:40:11,040
key trans or a key agree into a chem

2508
01:40:11,040 --> 01:40:12,480
pretty straightforwardly but it's

2509
01:40:12,480 --> 01:40:14,800
slightly different api so it's

2510
01:40:14,800 --> 01:40:17,199
i like to think of a cam like a

2511
01:40:17,199 --> 01:40:19,119
diffie-hellman sort of key agreement but

2512
01:40:19,119 --> 01:40:20,560
there's only a single public key

2513
01:40:20,560 --> 01:40:23,360
involved so your your sender does not

2514
01:40:23,360 --> 01:40:25,119
have a public key only the recipient has

2515
01:40:25,119 --> 01:40:26,320
a public key

2516
01:40:26,320 --> 01:40:27,840
but otherwise it works the same way you

2517
01:40:27,840 --> 01:40:29,520
take the public key

2518
01:40:29,520 --> 01:40:32,960
a shared secret falls out

2519
01:40:32,960 --> 01:40:34,880
and decipher text falls out so you don't

2520
01:40:34,880 --> 01:40:37,119
get to choose the content encryption key

2521
01:40:37,119 --> 01:40:39,840
you're given a shared secret

2522
01:40:39,840 --> 01:40:41,840
which is a slightly different api so the

2523
01:40:41,840 --> 01:40:44,480
question here is how do we fit

2524
01:40:44,480 --> 01:40:46,880
that api in

2525
01:40:46,880 --> 01:40:49,040
and

2526
01:40:49,040 --> 01:40:51,360
one approach is to generalize what rsa

2527
01:40:51,360 --> 01:40:53,520
chem 5990 did

2528
01:40:53,520 --> 01:40:56,000
they decided to turn it into a key

2529
01:40:56,000 --> 01:40:58,960
trends and publish a key trends external

2530
01:40:58,960 --> 01:41:00,480
api

2531
01:41:00,480 --> 01:41:03,280
and that's the way

2532
01:41:03,280 --> 01:41:05,280
ludovic and julian's draft currently is

2533
01:41:05,280 --> 01:41:06,239
written

2534
01:41:06,239 --> 01:41:09,760
the other option although it's that's

2535
01:41:09,760 --> 01:41:11,520
the weirdity there is that you need an

2536
01:41:11,520 --> 01:41:13,360
algorithm id that says actually i'm not

2537
01:41:13,360 --> 01:41:15,440
a key trans i'm a chem and then you need

2538
01:41:15,440 --> 01:41:17,280
to see algorithm params which i think

2539
01:41:17,280 --> 01:41:19,600
has been hissed at already here you need

2540
01:41:19,600 --> 01:41:21,760
algorithm params on that dummy oid to

2541
01:41:21,760 --> 01:41:24,159
say actually i'm a chem and actually

2542
01:41:24,159 --> 01:41:26,239
here's my chem and here's my

2543
01:41:26,239 --> 01:41:29,520
kdf and here's my keywrap

2544
01:41:29,520 --> 01:41:31,199
which is

2545
01:41:31,199 --> 01:41:33,760
a little weird especially i know some

2546
01:41:33,760 --> 01:41:36,639
other rfcs reference you know

2547
01:41:36,639 --> 01:41:39,040
allowed encryption algorithms for cms

2548
01:41:39,040 --> 01:41:40,800
and so now you have a loud encryption

2549
01:41:40,800 --> 01:41:43,280
algorithm which is the generic chem

2550
01:41:43,280 --> 01:41:44,840
dummy

2551
01:41:44,840 --> 01:41:47,280
oid so it's

2552
01:41:47,280 --> 01:41:48,960
copying what rsa cam's done but it's a

2553
01:41:48,960 --> 01:41:51,520
little little weird in some places

2554
01:41:51,520 --> 01:41:53,679
other options are to use the other

2555
01:41:53,679 --> 01:41:56,080
recipient info which would have content

2556
01:41:56,080 --> 01:41:58,960
similar to one but probably semantically

2557
01:41:58,960 --> 01:42:01,119
clearer that this isn't actually a key

2558
01:42:01,119 --> 01:42:03,040
trends

2559
01:42:03,040 --> 01:42:05,280
the third option is we define a new top

2560
01:42:05,280 --> 01:42:07,520
level recipient info called chem

2561
01:42:07,520 --> 01:42:09,520
recipient info

2562
01:42:09,520 --> 01:42:12,639
that is basically the recipient info

2563
01:42:12,639 --> 01:42:16,000
as defined in 4210 as a choice of

2564
01:42:16,000 --> 01:42:17,760
key trans recipient info key agree

2565
01:42:17,760 --> 01:42:20,480
recipient info password keck other

2566
01:42:20,480 --> 01:42:22,560
we'd be adding a sixth element to that

2567
01:42:22,560 --> 01:42:24,239
list um

2568
01:42:24,239 --> 01:42:25,440
and so i think we'd have to look

2569
01:42:25,440 --> 01:42:27,520
carefully at whether that is a backwards

2570
01:42:27,520 --> 01:42:29,119
compatible change or whether that would

2571
01:42:29,119 --> 01:42:30,320
require a

2572
01:42:30,320 --> 01:42:32,639
bump a rev of the the version number of

2573
01:42:32,639 --> 01:42:34,239
cmp which i think is probably

2574
01:42:34,239 --> 01:42:36,800
unacceptable for a change this small

2575
01:42:36,800 --> 01:42:38,639
if we can safely add an element to that

2576
01:42:38,639 --> 01:42:40,159
choice list then that might be

2577
01:42:40,159 --> 01:42:43,119
preferable otherwise one or two or a

2578
01:42:43,119 --> 01:42:45,119
little clue g but probably more

2579
01:42:45,119 --> 01:42:46,960
backwards compatible

2580
01:42:46,960 --> 01:42:47,760
um

2581
01:42:47,760 --> 01:42:49,760
so russ i'm gonna

2582
01:42:49,760 --> 01:42:50,960
i don't know if we could take a straw

2583
01:42:50,960 --> 01:42:53,040
poll or a hum or something is the

2584
01:42:53,040 --> 01:42:55,119
question here is this a significant

2585
01:42:55,119 --> 01:42:57,600
enough design choice to be worth

2586
01:42:57,600 --> 01:42:59,520
a full-blown discussion on the list or

2587
01:42:59,520 --> 01:43:01,679
are these all sort of equivalent and we

2588
01:43:01,679 --> 01:43:03,679
should just write one up and submit it

2589
01:43:03,679 --> 01:43:05,040
as an oh

2590
01:43:05,040 --> 01:43:08,239
well i'd like to make a few observations

2591
01:43:08,239 --> 01:43:10,639
then if people want we can do a show of

2592
01:43:10,639 --> 01:43:14,000
uh a straw poll thing

2593
01:43:14,639 --> 01:43:16,800
the

2594
01:43:16,880 --> 01:43:20,000
observation i i would share is that

2595
01:43:20,000 --> 01:43:22,239
the biggest difference between

2596
01:43:22,239 --> 01:43:24,800
in the cms structuring between key

2597
01:43:24,800 --> 01:43:27,440
trends and key agree is the single

2598
01:43:27,440 --> 01:43:29,920
public year two public keys

2599
01:43:29,920 --> 01:43:33,600
and so given that the kems have one i

2600
01:43:33,600 --> 01:43:36,400
kind of lean naturally towards let's see

2601
01:43:36,400 --> 01:43:38,480
if we can use it

2602
01:43:38,480 --> 01:43:40,639
i don't think we end up necessarily with

2603
01:43:40,639 --> 01:43:45,600
parameters if we assign oids that say

2604
01:43:45,840 --> 01:43:48,719
use a particular kem with a particular

2605
01:43:48,719 --> 01:43:52,480
ke kdf with a particular wrap we end up

2606
01:43:52,480 --> 01:43:54,560
with a lot of oids that are very

2607
01:43:54,560 --> 01:43:55,920
specific

2608
01:43:55,920 --> 01:43:57,920
but no parameters

2609
01:43:57,920 --> 01:43:59,600
so

2610
01:43:59,600 --> 01:44:02,239
i don't think

2611
01:44:02,639 --> 01:44:05,840
picking at that level guarantees the

2612
01:44:05,840 --> 01:44:09,600
complicated parameter structure

2613
01:44:09,600 --> 01:44:11,920
those it's a trade-off

2614
01:44:11,920 --> 01:44:14,159
you can always enroll params into a

2615
01:44:14,159 --> 01:44:17,840
future exactly and and that's what i uh

2616
01:44:17,840 --> 01:44:20,080
that's what we've seen in the tls

2617
01:44:20,080 --> 01:44:22,880
environment them doing more and more

2618
01:44:22,880 --> 01:44:24,719
because

2619
01:44:24,719 --> 01:44:26,800
we want to avoid

2620
01:44:26,800 --> 01:44:30,800
strange parameter interactions

2621
01:44:32,080 --> 01:44:35,280
so does anybody disagree with that who

2622
01:44:35,280 --> 01:44:38,400
would like to come to the mic

2623
01:44:39,440 --> 01:44:40,639
so you're just to be clear you're

2624
01:44:40,639 --> 01:44:44,080
proposing that key trends with

2625
01:44:44,080 --> 01:44:45,840
unrolled oids

2626
01:44:45,840 --> 01:44:49,840
yes that's exactly what i'm proposing

2627
01:44:54,320 --> 01:44:57,679
your face says you're thinking

2628
01:45:01,679 --> 01:45:04,960
all sorry joe go ahead

2629
01:45:06,320 --> 01:45:08,239
she would be is

2630
01:45:08,239 --> 01:45:10,400
with with respect to calling this key

2631
01:45:10,400 --> 01:45:12,400
trans does that have any any

2632
01:45:12,400 --> 01:45:14,560
implications of like well ketrans i

2633
01:45:14,560 --> 01:45:16,880
usually think of i'm using the public

2634
01:45:16,880 --> 01:45:19,920
key to do encryption of some sort and

2635
01:45:19,920 --> 01:45:22,480
and on not all cams you're really doing

2636
01:45:22,480 --> 01:45:24,719
that does that have any implications

2637
01:45:24,719 --> 01:45:26,480
further down the line or is this just a

2638
01:45:26,480 --> 01:45:27,840
naming issue

2639
01:45:27,840 --> 01:45:29,520
um i think

2640
01:45:29,520 --> 01:45:31,600
i think the big implication is it has to

2641
01:45:31,600 --> 01:45:34,639
have one public key

2642
01:45:35,119 --> 01:45:37,920
can i can i take that russ sure so i've

2643
01:45:37,920 --> 01:45:40,320
got the core idea of this draft is sort

2644
01:45:40,320 --> 01:45:42,480
of sketched out on the side there so the

2645
01:45:42,480 --> 01:45:44,400
idea is you use the chem to derive a

2646
01:45:44,400 --> 01:45:46,159
shared secret you use the shared secret

2647
01:45:46,159 --> 01:45:49,040
to derive a kek you use the kek as an

2648
01:45:49,040 --> 01:45:51,440
aes key to wrap the cek

2649
01:45:51,440 --> 01:45:52,880
so

2650
01:45:52,880 --> 01:45:54,960
you are in fact encrypting

2651
01:45:54,960 --> 01:45:57,360
and i and we've because of that kdf

2652
01:45:57,360 --> 01:45:59,920
we've kdf out any particulars of the

2653
01:45:59,920 --> 01:46:01,679
chem you chose

2654
01:46:01,679 --> 01:46:04,639
so i do think it's actually fair to call

2655
01:46:04,639 --> 01:46:07,760
this construct on the side of key trans

2656
01:46:07,760 --> 01:46:09,600
question mark

2657
01:46:09,600 --> 01:46:11,360
hopes for agreement

2658
01:46:11,360 --> 01:46:13,600
so i agree i agree it's not key

2659
01:46:13,600 --> 01:46:16,159
agreement

2660
01:46:18,639 --> 01:46:20,320
did i say key trans

2661
01:46:20,320 --> 01:46:22,480
yes

2662
01:46:22,480 --> 01:46:24,480
but you asked for agreement with your

2663
01:46:24,480 --> 01:46:27,480
statement

2664
01:46:28,480 --> 01:46:31,280
john go ahead

2665
01:46:31,440 --> 01:46:32,719
i was just thinking because i've thought

2666
01:46:32,719 --> 01:46:34,719
of a lot about this too but

2667
01:46:34,719 --> 01:46:35,920
i like

2668
01:46:35,920 --> 01:46:38,159
clean implementations and the fact that

2669
01:46:38,159 --> 01:46:40,080
there's going to be a lot of can like

2670
01:46:40,080 --> 01:46:42,000
chem is happening a lot more right like

2671
01:46:42,000 --> 01:46:44,560
all the pq algorithms a lot of them are

2672
01:46:44,560 --> 01:46:47,760
are chems and you know rsa obviously has

2673
01:46:47,760 --> 01:46:50,320
a chem as well so does not having its

2674
01:46:50,320 --> 01:46:53,360
own recipient info kind of as

2675
01:46:53,360 --> 01:46:56,000
it kind of alludes it to its own family

2676
01:46:56,000 --> 01:46:58,320
of algorithms so i think in that way it

2677
01:46:58,320 --> 01:46:59,199
just

2678
01:46:59,199 --> 01:47:01,520
seems clear like semantically it seems

2679
01:47:01,520 --> 01:47:05,040
clear at least in my mind um so

2680
01:47:05,040 --> 01:47:06,960
yeah i know i know we can make it fit

2681
01:47:06,960 --> 01:47:09,280
into the the key trends and it has been

2682
01:47:09,280 --> 01:47:11,840
done but is there an

2683
01:47:11,840 --> 01:47:14,800
issue for semantics to to just not have

2684
01:47:14,800 --> 01:47:17,520
its own kim recipient info

2685
01:47:17,520 --> 01:47:20,800
or is it a big issue with you know

2686
01:47:20,800 --> 01:47:21,679
we think it would cause

2687
01:47:21,679 --> 01:47:23,360
incompatibilities if we were to add a

2688
01:47:23,360 --> 01:47:25,520
new recipient info type

2689
01:47:25,520 --> 01:47:26,880
so i guess that's that's where my

2690
01:47:26,880 --> 01:47:28,480
thinking is on that because it's

2691
01:47:28,480 --> 01:47:29,840
semantically

2692
01:47:29,840 --> 01:47:32,080
cleaner and

2693
01:47:32,080 --> 01:47:33,520
it seems to be

2694
01:47:33,520 --> 01:47:34,719
the way forward with these new

2695
01:47:34,719 --> 01:47:37,840
algorithms that are coming so

2696
01:47:44,800 --> 01:47:49,760
hi um yeah i also i i think that um

2697
01:47:49,760 --> 01:47:52,400
that the other recipient info direction

2698
01:47:52,400 --> 01:47:55,199
would be better like if we choose key

2699
01:47:55,199 --> 01:47:56,800
trans recipient info we're kind of

2700
01:47:56,800 --> 01:47:58,239
locking in that we don't have the

2701
01:47:58,239 --> 01:48:00,880
flexibility that key agree recipient

2702
01:48:00,880 --> 01:48:03,600
info had for uh including optional user

2703
01:48:03,600 --> 01:48:04,960
keying material

2704
01:48:04,960 --> 01:48:06,639
whereas if we

2705
01:48:06,639 --> 01:48:08,239
did allow

2706
01:48:08,239 --> 01:48:10,560
um have a new structure specified by

2707
01:48:10,560 --> 01:48:12,159
other recipient info we could add that

2708
01:48:12,159 --> 01:48:14,879
if we wanted it

2709
01:48:15,679 --> 01:48:19,040
that's a good point the the ukm field

2710
01:48:19,040 --> 01:48:22,159
uh go ahead sean

2711
01:48:23,920 --> 01:48:26,239
just not knowing the answer is this

2712
01:48:26,239 --> 01:48:27,760
leading us down the path of trying to

2713
01:48:27,760 --> 01:48:31,040
say uh to specify another key usage type

2714
01:48:31,040 --> 01:48:34,080
in x509

2715
01:48:34,639 --> 01:48:36,159
this is what i alluded to during your

2716
01:48:36,159 --> 01:48:37,840
presentation was the exercise

2717
01:48:37,840 --> 01:48:39,440
okay you were good so i did i did read

2718
01:48:39,440 --> 01:48:41,679
the tea leaves all right so i guess my

2719
01:48:41,679 --> 01:48:42,719
question is

2720
01:48:42,719 --> 01:48:44,880
how much of a absolute

2721
01:48:44,880 --> 01:48:46,480
pita is that going to be

2722
01:48:46,480 --> 01:48:48,880
uh and do we think there's any a chance

2723
01:48:48,880 --> 01:48:50,239
that that will get implemented in any

2724
01:48:50,239 --> 01:48:52,080
kind of timely fashion

2725
01:48:52,080 --> 01:48:55,040
by both um you know cas and relying

2726
01:48:55,040 --> 01:48:57,440
parties

2727
01:48:59,280 --> 01:49:02,480
i don't know that we need a different ku

2728
01:49:02,480 --> 01:49:04,560
but you know which ku we're going to

2729
01:49:04,560 --> 01:49:08,159
support here i think is relevant

2730
01:49:08,320 --> 01:49:09,360
all right

2731
01:49:09,360 --> 01:49:12,360
thanks

2732
01:49:15,280 --> 01:49:17,280
it's pretty clear to me this is a big

2733
01:49:17,280 --> 01:49:19,040
enough decision we should take it to the

2734
01:49:19,040 --> 01:49:21,599
list um i do think

2735
01:49:21,599 --> 01:49:25,040
opening cms which is a uh

2736
01:49:25,040 --> 01:49:26,480
full standard

2737
01:49:26,480 --> 01:49:28,480
does mean that we need to think

2738
01:49:28,480 --> 01:49:30,880
pretty hard before we do that but if

2739
01:49:30,880 --> 01:49:32,320
it's the right answer it's the right

2740
01:49:32,320 --> 01:49:34,480
answer and i hadn't thought about the

2741
01:49:34,480 --> 01:49:37,919
lack of the ukm field

2742
01:49:38,320 --> 01:49:41,119
right next slide i think

2743
01:49:41,119 --> 01:49:44,320
we've got about 10 minutes perfect

2744
01:49:44,320 --> 01:49:46,719
let's go

2745
01:49:51,920 --> 01:49:54,560
okay so the back half of my presentation

2746
01:49:54,560 --> 01:49:57,360
is basically this slide unrolled into

2747
01:49:57,360 --> 01:49:59,440
sections uh in the interest of time i

2748
01:49:59,440 --> 01:50:00,800
could probably do it all off this one

2749
01:50:00,800 --> 01:50:04,000
slide and leave the rest as an exercise

2750
01:50:04,000 --> 01:50:07,199
to the reader to go find my full slides

2751
01:50:07,199 --> 01:50:08,800
so this is just sort of an update on

2752
01:50:08,800 --> 01:50:10,560
where we are so we there's been a lot of

2753
01:50:10,560 --> 01:50:12,080
work done by

2754
01:50:12,080 --> 01:50:14,080
our author group here against these

2755
01:50:14,080 --> 01:50:16,000
lamps milestones that are probably still

2756
01:50:16,000 --> 01:50:18,080
sufficiently in the future that i don't

2757
01:50:18,080 --> 01:50:20,400
know that the working group is ready for

2758
01:50:20,400 --> 01:50:23,840
knitty details maybe question mark

2759
01:50:23,840 --> 01:50:26,560
so once again i'll present a landscape

2760
01:50:26,560 --> 01:50:27,760
um

2761
01:50:27,760 --> 01:50:29,760
i've structurally chosen to break the

2762
01:50:29,760 --> 01:50:33,679
dual composite hybrid stuff up by keys

2763
01:50:33,679 --> 01:50:36,400
inserts signatures and encryption i

2764
01:50:36,400 --> 01:50:38,480
think they are sort of structurally

2765
01:50:38,480 --> 01:50:40,639
separate

2766
01:50:40,639 --> 01:50:43,040
so in the keys inserts there's our two

2767
01:50:43,040 --> 01:50:44,639
drafts composite keys and explicit

2768
01:50:44,639 --> 01:50:47,840
composite keys i put a nod here to ali's

2769
01:50:47,840 --> 01:50:49,599
presentation because at time of writing

2770
01:50:49,599 --> 01:50:50,800
i wasn't sure if it was going to be a

2771
01:50:50,800 --> 01:50:55,199
concrete proposal or or a framework or

2772
01:50:55,199 --> 01:50:59,040
but i'm really not aware of any other

2773
01:50:59,040 --> 01:51:02,320
work in this sphere

2774
01:51:02,320 --> 01:51:05,199
at the interim it was suggested the

2775
01:51:05,199 --> 01:51:06,639
interim we had in september it was

2776
01:51:06,639 --> 01:51:08,239
suggested that

2777
01:51:08,239 --> 01:51:09,599
explicit if we are going to go with

2778
01:51:09,599 --> 01:51:12,080
composite public keys explicit

2779
01:51:12,080 --> 01:51:13,920
pairs of voids is preferable to a

2780
01:51:13,920 --> 01:51:15,840
generic container and that's

2781
01:51:15,840 --> 01:51:17,520
consistent with the

2782
01:51:17,520 --> 01:51:19,040
no params let's unroll everything

2783
01:51:19,040 --> 01:51:21,360
discussion here today so i think that's

2784
01:51:21,360 --> 01:51:22,960
well received so we'll probably end up

2785
01:51:22,960 --> 01:51:25,040
dropping the composite keys draft and go

2786
01:51:25,040 --> 01:51:27,199
with the explicit composite

2787
01:51:27,199 --> 01:51:29,840
the asn 1 is turning out to be a bit of

2788
01:51:29,840 --> 01:51:32,320
a bear we're trying to use the new

2789
01:51:32,320 --> 01:51:34,080
object class structure so you can just

2790
01:51:34,080 --> 01:51:35,440
factory out

2791
01:51:35,440 --> 01:51:38,400
pairs of voids super easily but we're

2792
01:51:38,400 --> 01:51:39,679
really struggling with some of the

2793
01:51:39,679 --> 01:51:42,400
details there

2794
01:51:43,199 --> 01:51:47,000
could you flip forward one

2795
01:51:49,599 --> 01:51:52,400
thank you um we have a plan to still

2796
01:51:52,400 --> 01:51:54,480
support generic so if you need something

2797
01:51:54,480 --> 01:51:57,119
that doesn't have an explicit oid

2798
01:51:57,119 --> 01:51:58,719
although maybe that's not a use case we

2799
01:51:58,719 --> 01:52:00,480
should care about but if that if that is

2800
01:52:00,480 --> 01:52:02,560
a use case you want to use a pair that

2801
01:52:02,560 --> 01:52:04,719
doesn't have a defined oid

2802
01:52:04,719 --> 01:52:08,080
we we could register an oid for pkne

2803
01:52:08,080 --> 01:52:09,840
with any which would still which would

2804
01:52:09,840 --> 01:52:12,400
be an explicit

2805
01:52:12,400 --> 01:52:14,400
pair

2806
01:52:14,400 --> 01:52:15,520
but

2807
01:52:15,520 --> 01:52:16,560
open

2808
01:52:16,560 --> 01:52:18,400
if that nomenclature makes any sense so

2809
01:52:18,400 --> 01:52:20,719
there's there is still possible to make

2810
01:52:20,719 --> 01:52:22,080
a generic

2811
01:52:22,080 --> 01:52:25,199
uh oid within the explicit framework

2812
01:52:25,199 --> 01:52:26,400
um

2813
01:52:26,400 --> 01:52:27,599
yeah the bottom half of the slide is

2814
01:52:27,599 --> 01:52:30,880
well covered by ellie's presentation

2815
01:52:30,880 --> 01:52:32,159
um

2816
01:52:32,159 --> 01:52:34,080
yeah don't do that all right

2817
01:52:34,080 --> 01:52:35,520
point taken

2818
01:52:35,520 --> 01:52:37,760
um

2819
01:52:39,119 --> 01:52:40,719
yeah well i guess we'll have to see how

2820
01:52:40,719 --> 01:52:42,719
much if there's interest in generic at

2821
01:52:42,719 --> 01:52:44,960
all or we think it's you know do people

2822
01:52:44,960 --> 01:52:46,719
need to go off-roading

2823
01:52:46,719 --> 01:52:48,400
outside of the established pair of

2824
01:52:48,400 --> 01:52:50,080
pairwise oids

2825
01:52:50,080 --> 01:52:52,000
you know do we need a generic at all or

2826
01:52:52,000 --> 01:52:54,800
is it fine to put up fences on that road

2827
01:52:54,800 --> 01:52:56,560
you must use the established pairs of

2828
01:52:56,560 --> 01:52:59,199
voids

2829
01:52:59,199 --> 01:53:02,400
any with foot gun yeah fair enough

2830
01:53:02,400 --> 01:53:06,880
okay um interest of time signatures

2831
01:53:06,880 --> 01:53:09,360
haven't really done any major work on

2832
01:53:09,360 --> 01:53:11,119
this in a while

2833
01:53:11,119 --> 01:53:13,760
i think it's sitting fairly mature

2834
01:53:13,760 --> 01:53:15,440
we do have some design decisions that

2835
01:53:15,440 --> 01:53:17,599
will bring up if and when the working

2836
01:53:17,599 --> 01:53:19,520
group adopts this but it hasn't really

2837
01:53:19,520 --> 01:53:20,800
been worth

2838
01:53:20,800 --> 01:53:23,199
chatter on the mail list yet

2839
01:53:23,199 --> 01:53:26,400
um we also can make this explicit

2840
01:53:26,400 --> 01:53:27,920
currently it's a generic structure we

2841
01:53:27,920 --> 01:53:29,599
can also come up with the sn1 modules

2842
01:53:29,599 --> 01:53:31,760
that allow you to define explicit pairs

2843
01:53:31,760 --> 01:53:35,440
of essays signature algorithms

2844
01:53:35,440 --> 01:53:38,000
i will point out that

2845
01:53:38,000 --> 01:53:40,960
if if we decide to go multi-cert

2846
01:53:40,960 --> 01:53:44,400
and we need a way to stuff a multi-cert

2847
01:53:44,400 --> 01:53:46,239
single signature so if you have multiple

2848
01:53:46,239 --> 01:53:48,159
certificates generating a single

2849
01:53:48,159 --> 01:53:49,520
signature

2850
01:53:49,520 --> 01:53:51,360
you're still going to need a container

2851
01:53:51,360 --> 01:53:53,119
of some format

2852
01:53:53,119 --> 01:53:56,480
and so we believe this work is still

2853
01:53:56,480 --> 01:53:59,920
relevant even in a multi-cert world

2854
01:53:59,920 --> 01:54:02,320
unless protocols really do want to

2855
01:54:02,320 --> 01:54:03,840
carry a second signature field

2856
01:54:03,840 --> 01:54:04,960
everywhere

2857
01:54:04,960 --> 01:54:07,599
so we again my choice to present this as

2858
01:54:07,599 --> 01:54:09,119
separate from the public keys is because

2859
01:54:09,119 --> 01:54:12,400
i think this survives a multi-cert draft

2860
01:54:12,400 --> 01:54:14,320
or is still useful in combat in

2861
01:54:14,320 --> 01:54:17,840
comparison with a multi-cert draft

2862
01:54:19,119 --> 01:54:20,880
mike i agree with you

2863
01:54:20,880 --> 01:54:25,119
in some environments but not cms

2864
01:54:25,119 --> 01:54:27,280
right because sine data allows multi

2865
01:54:27,280 --> 01:54:29,920
signatures

2866
01:54:30,880 --> 01:54:34,960
yeah that's a nuanced because sine data

2867
01:54:34,960 --> 01:54:38,159
sometimes implies that that's an or

2868
01:54:38,159 --> 01:54:39,840
relationship

2869
01:54:39,840 --> 01:54:42,320
there's there's already a document that

2870
01:54:42,320 --> 01:54:44,159
provides an attribute whether it's an

2871
01:54:44,159 --> 01:54:45,679
order and

2872
01:54:45,679 --> 01:54:49,040
that's right that's a yeah right

2873
01:54:49,040 --> 01:54:50,880
right okay so there is a mechanism we

2874
01:54:50,880 --> 01:54:52,880
could tie in to clear that ambiguity

2875
01:54:52,880 --> 01:54:55,119
okay

2876
01:54:56,480 --> 01:55:00,400
okay uh next

2877
01:55:00,480 --> 01:55:01,520
um

2878
01:55:01,520 --> 01:55:04,000
the font's a bit small here so uh the

2879
01:55:04,000 --> 01:55:05,199
last piece of work we've been doing this

2880
01:55:05,199 --> 01:55:07,119
is where we've done most of our work in

2881
01:55:07,119 --> 01:55:09,280
the last

2882
01:55:09,280 --> 01:55:11,920
six months is composite content

2883
01:55:11,920 --> 01:55:14,960
encryption for cms how do you how do you

2884
01:55:14,960 --> 01:55:16,639
say you come across come across a

2885
01:55:16,639 --> 01:55:20,000
recipient who has multiple public keys

2886
01:55:20,000 --> 01:55:21,280
again i don't particularly care whether

2887
01:55:21,280 --> 01:55:23,040
that's in a single cert or that's across

2888
01:55:23,040 --> 01:55:24,480
multiple certs but you have a recipient

2889
01:55:24,480 --> 01:55:26,000
who has who declares that if you're

2890
01:55:26,000 --> 01:55:27,280
going to encrypt for me i'd like you to

2891
01:55:27,280 --> 01:55:29,599
use multiple public keys to do it what

2892
01:55:29,599 --> 01:55:32,400
does that envelope data look like

2893
01:55:32,400 --> 01:55:34,639
we've put out an 0 this is i think we

2894
01:55:34,639 --> 01:55:36,560
proposed three completely different

2895
01:55:36,560 --> 01:55:38,560
mechanisms in that oo draft we're still

2896
01:55:38,560 --> 01:55:39,760
working on that quite heavily i think

2897
01:55:39,760 --> 01:55:41,840
we've found a way to combine all of them

2898
01:55:41,840 --> 01:55:43,679
nicely together into one

2899
01:55:43,679 --> 01:55:46,639
max single mechanism

2900
01:55:46,639 --> 01:55:48,960
we're debating here also the key trends

2901
01:55:48,960 --> 01:55:51,440
versus chem debate what is the external

2902
01:55:51,440 --> 01:55:54,639
interface that this should expose

2903
01:55:54,639 --> 01:55:57,840
this is probably going to couple into

2904
01:55:57,840 --> 01:56:00,239
ludovic's draft will probably make

2905
01:56:00,239 --> 01:56:02,880
composite encryption a expose a chem

2906
01:56:02,880 --> 01:56:04,480
type and then it'll fit into what

2907
01:56:04,480 --> 01:56:06,880
whatever ludovic comes up with

2908
01:56:06,880 --> 01:56:08,960
um although you could also imagine it

2909
01:56:08,960 --> 01:56:10,480
exposing a key trends and it can go

2910
01:56:10,480 --> 01:56:13,920
straight into key transverse up info

2911
01:56:13,920 --> 01:56:15,520
where all there's also debate over what

2912
01:56:15,520 --> 01:56:17,040
the underlying mechanism should be and

2913
01:56:17,040 --> 01:56:20,000
how that should function should it be

2914
01:56:20,000 --> 01:56:23,040
sort of based on a one-time pad xor for

2915
01:56:23,040 --> 01:56:25,040
wrapping the cek

2916
01:56:25,040 --> 01:56:28,080
or should we throw in an aes key keywrap

2917
01:56:28,080 --> 01:56:29,040
layer

2918
01:56:29,040 --> 01:56:30,000
uh

2919
01:56:30,000 --> 01:56:31,840
that decision sort of will dictate the

2920
01:56:31,840 --> 01:56:34,719
key trends versus chem decision

2921
01:56:34,719 --> 01:56:36,560
uh so this one's still

2922
01:56:36,560 --> 01:56:38,639
it's an oo but it's it's still and

2923
01:56:38,639 --> 01:56:39,920
there's still a lot of design decisions

2924
01:56:39,920 --> 01:56:42,719
to be made here

2925
01:56:42,719 --> 01:56:44,400
and that's the end of my slide deck with

2926
01:56:44,400 --> 01:56:46,320
a whopping four minutes for discussion

2927
01:56:46,320 --> 01:56:48,880
and wrap-up

2928
01:56:51,679 --> 01:56:55,199
anyone want to come to the bike

2929
01:56:55,679 --> 01:56:57,840
john

2930
01:56:58,239 --> 01:57:00,159
i'm just gonna add to what mike said he

2931
01:57:00,159 --> 01:57:03,199
mentioned the um the composite chem so

2932
01:57:03,199 --> 01:57:04,960
we're actually thinking about

2933
01:57:04,960 --> 01:57:05,760
um

2934
01:57:05,760 --> 01:57:08,400
creating a new draft just for composite

2935
01:57:08,400 --> 01:57:11,199
kim construction because we as part of

2936
01:57:11,199 --> 01:57:13,360
our debates for the um what he was just

2937
01:57:13,360 --> 01:57:15,440
talking about composite encryption

2938
01:57:15,440 --> 01:57:17,360
we came up with the idea that perhaps

2939
01:57:17,360 --> 01:57:19,360
it's just simpler to have a composite

2940
01:57:19,360 --> 01:57:21,040
construction and

2941
01:57:21,040 --> 01:57:23,679
then if if there was such a thing as

2942
01:57:23,679 --> 01:57:26,400
like a cam recipient info or just you

2943
01:57:26,400 --> 01:57:28,800
know a chem usage type it just fits in

2944
01:57:28,800 --> 01:57:31,840
there much better and it seems simpler

2945
01:57:31,840 --> 01:57:32,560
so

2946
01:57:32,560 --> 01:57:35,040
you might see us request um

2947
01:57:35,040 --> 01:57:36,960
you know a zero zero draft for a

2948
01:57:36,960 --> 01:57:38,480
composite kim

2949
01:57:38,480 --> 01:57:40,239
because i think it'll be a

2950
01:57:40,239 --> 01:57:42,159
yeah i think that's it's separate enough

2951
01:57:42,159 --> 01:57:44,480
that it would um be

2952
01:57:44,480 --> 01:57:46,560
worthy of its own draft so i just wanted

2953
01:57:46,560 --> 01:57:47,360
to

2954
01:57:47,360 --> 01:57:49,840
point that out i guess stated

2955
01:57:49,840 --> 01:57:52,880
i'm not scaring my

2956
01:57:53,520 --> 01:57:55,040
i guess this is stated differently what

2957
01:57:55,040 --> 01:57:57,119
john just said if

2958
01:57:57,119 --> 01:57:58,960
if the composite cam draft is already

2959
01:57:58,960 --> 01:58:01,280
going to define how you do the kdfing in

2960
01:58:01,280 --> 01:58:04,639
the aes wrapping then great we can just

2961
01:58:04,639 --> 01:58:07,840
provide the chem part

2962
01:58:12,719 --> 01:58:14,880
all right uh given that we're down to

2963
01:58:14,880 --> 01:58:17,360
two minutes

2964
01:58:17,360 --> 01:58:20,839
anything else

2965
01:58:26,880 --> 01:58:28,880
as always direction here would be lovely

2966
01:58:28,880 --> 01:58:30,560
i feel like we're trying to solve these

2967
01:58:30,560 --> 01:58:32,960
problems with very little input

2968
01:58:32,960 --> 01:58:34,880
yeah i think i think that you should

2969
01:58:34,880 --> 01:58:37,679
start a few threads uh

2970
01:58:37,679 --> 01:58:40,000
you know on the higher order

2971
01:58:40,000 --> 01:58:41,599
uh

2972
01:58:41,599 --> 01:58:43,520
design decisions and maybe see where

2973
01:58:43,520 --> 01:58:45,679
they take you

2974
01:58:45,679 --> 01:58:47,280
and then

2975
01:58:47,280 --> 01:58:49,520
we'll see where we when we get to a

2976
01:58:49,520 --> 01:58:51,280
point where we can adopt a document

2977
01:58:51,280 --> 01:58:53,520
after having a few of those design level

2978
01:58:53,520 --> 01:58:55,280
discussions

2979
01:58:55,280 --> 01:58:57,199
does that make sense

2980
01:58:57,199 --> 01:58:59,679
yeah and one one of those discussions is

2981
01:58:59,679 --> 01:59:01,440
the one you alluded to is any of this

2982
01:59:01,440 --> 01:59:04,480
work necessary do we have

2983
01:59:04,480 --> 01:59:06,800
use cases that we're going to want

2984
01:59:06,800 --> 01:59:08,639
composite and dual

2985
01:59:08,639 --> 01:59:11,119
atomic structures

2986
01:59:11,119 --> 01:59:12,239
exactly

2987
01:59:12,239 --> 01:59:13,840
is actually a question i don't know the

2988
01:59:13,840 --> 01:59:15,040
answer to

2989
01:59:15,040 --> 01:59:17,760
if if so we've got one but is anyone

2990
01:59:17,760 --> 01:59:20,000
going to use it

2991
01:59:20,000 --> 01:59:22,400
question

2992
01:59:24,080 --> 01:59:24,960
okay

2993
01:59:24,960 --> 01:59:27,199
well

2994
01:59:27,440 --> 01:59:29,599
so this has been a very interesting and

2995
01:59:29,599 --> 01:59:33,280
diverse session so thank you

2996
01:59:33,280 --> 01:59:35,840
all of the presenters and we made a

2997
01:59:35,840 --> 01:59:38,000
whole bunch of uh

2998
01:59:38,000 --> 01:59:39,440
action items

2999
01:59:39,440 --> 01:59:41,679
thank you deb for taking the minutes

3000
01:59:41,679 --> 01:59:43,520
appreciate it

3001
01:59:43,520 --> 01:59:44,639
and

3002
01:59:44,639 --> 01:59:46,480
so i think this is the last session of

3003
01:59:46,480 --> 01:59:47,679
the day

3004
01:59:47,679 --> 01:59:50,639
thank you all and

3005
01:59:50,639 --> 01:59:52,239
we'll see you next time and we'll see

3006
01:59:52,239 --> 01:59:54,880
you on the list we have a few things to

3007
01:59:54,880 --> 01:59:57,360
deal with

3008
01:59:57,360 --> 01:59:58,480
on the list

3009
01:59:58,480 --> 02:00:00,800
like the eku document

3010
02:00:00,800 --> 02:00:04,800
uh immediately so thank you

3011
02:00:05,280 --> 02:00:08,519
be well

3012
02:00:09,000 --> 02:00:12,260
[Music]

