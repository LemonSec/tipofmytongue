1
00:00:04,960 --> 00:00:08,240
surely that'd be kind of cool

2
00:00:08,240 --> 00:00:10,559
because we have the dots for

3
00:00:10,559 --> 00:00:12,320
roles in the ietf it'd be nice if we had

4
00:00:12,320 --> 00:00:14,160
some dots or at least some tags i can

5
00:00:14,160 --> 00:00:16,640
give roles in the working group

6
00:00:16,640 --> 00:00:18,960
i'll talk to you that goes

7
00:00:18,960 --> 00:00:21,920
it's worth asking for

8
00:00:29,119 --> 00:00:31,039
okay we're right at the start time i

9
00:00:31,039 --> 00:00:33,199
think

10
00:00:33,840 --> 00:00:37,960
let's see first presenter

11
00:00:53,039 --> 00:00:56,039
woman

12
00:00:58,160 --> 00:01:01,839
i don't see human here yet

13
00:01:05,438 --> 00:01:07,920
let's get a little bit

14
00:01:07,920 --> 00:01:11,720
tony kick when you're back

15
00:01:24,159 --> 00:01:26,000
if you're here under a different name or

16
00:01:26,000 --> 00:01:27,439
group or something

17
00:01:27,439 --> 00:01:28,799
just speak up so i know you're here we

18
00:01:28,799 --> 00:01:32,320
can think about getting rolling

19
00:01:32,320 --> 00:01:34,880
excuse me

20
00:01:38,560 --> 00:01:41,119
navarro i just uh replied your email

21
00:01:41,119 --> 00:01:42,640
we could talk about again the list in

22
00:01:42,640 --> 00:01:43,840
the uh

23
00:01:43,840 --> 00:01:46,240
in the room today if you want but

24
00:01:46,240 --> 00:01:49,439
i think it's pretty much all there

25
00:01:52,079 --> 00:01:57,240
thanks greg thank you

26
00:02:17,760 --> 00:02:19,680
okay tony's back

27
00:02:19,680 --> 00:02:20,840
still looking for

28
00:02:20,840 --> 00:02:24,160
human he's our first presenter after our

29
00:02:24,160 --> 00:02:25,920
status

30
00:02:25,920 --> 00:02:29,040
hi hi greg can you hear me oh oh yeah i

31
00:02:29,040 --> 00:02:32,000
hear you excellent thank you very much

32
00:02:32,000 --> 00:02:32,879
all right

33
00:02:32,879 --> 00:02:33,920
tony you see any other reason why we

34
00:02:33,920 --> 00:02:35,440
shouldn't get rolling

35
00:02:35,440 --> 00:02:37,840
hi everyone

36
00:02:37,920 --> 00:02:39,519
all right everybody

37
00:02:39,519 --> 00:02:40,800
uh

38
00:02:40,800 --> 00:02:42,720
what i've got is a question on process

39
00:02:42,720 --> 00:02:44,160
actually if you can give me uh some

40
00:02:44,160 --> 00:02:46,800
feedback alvaro on taking notes now i've

41
00:02:46,800 --> 00:02:49,120
got the the notepad thing up is the

42
00:02:49,120 --> 00:02:50,959
intent that people put their own stuff

43
00:02:50,959 --> 00:02:52,319
in there we have someone directed and

44
00:02:52,319 --> 00:02:53,920
everything's done at that tool

45
00:02:53,920 --> 00:02:56,560
that's with the intent with minutes

46
00:02:56,560 --> 00:02:58,959
no so ideally we would do the minutes

47
00:02:58,959 --> 00:03:00,400
the same way as before right you would

48
00:03:00,400 --> 00:03:01,840
have a minute taker

49
00:03:01,840 --> 00:03:03,680
yeah

50
00:03:03,680 --> 00:03:05,760
advantage of the shared minutes or the

51
00:03:05,760 --> 00:03:07,440
shared place there

52
00:03:07,440 --> 00:03:09,760
is that then i can go there for example

53
00:03:09,760 --> 00:03:10,959
and

54
00:03:10,959 --> 00:03:12,640
add the question that i asked or you

55
00:03:12,640 --> 00:03:14,720
know clarify something or spell my name

56
00:03:14,720 --> 00:03:16,800
correctly or you know whatever it is so

57
00:03:16,800 --> 00:03:18,000
there's the opportunity for other people

58
00:03:18,000 --> 00:03:19,120
to help

59
00:03:19,120 --> 00:03:21,120
but ideally there should be some

60
00:03:21,120 --> 00:03:22,480
responsibility for that but that that

61
00:03:22,480 --> 00:03:24,080
one person should be working on that doc

62
00:03:24,080 --> 00:03:25,519
as well

63
00:03:25,519 --> 00:03:27,040
right right right right ideally there

64
00:03:27,040 --> 00:03:28,560
will be something we did before just

65
00:03:28,560 --> 00:03:30,480
open up a text pad to write down stuff

66
00:03:30,480 --> 00:03:32,159
right

67
00:03:32,159 --> 00:03:33,040
so

68
00:03:33,040 --> 00:03:34,640
now we do it before we have no ticker

69
00:03:34,640 --> 00:03:36,080
but they do it there and everyone else

70
00:03:36,080 --> 00:03:37,840
can go in and make corrections or add

71
00:03:37,840 --> 00:03:39,440
their own questions okay

72
00:03:39,440 --> 00:03:41,040
so that means we need

73
00:03:41,040 --> 00:03:42,480
a minute taker

74
00:03:42,480 --> 00:03:44,239
a volunteer of some kind

75
00:03:44,239 --> 00:03:47,360
to throw something in i saw with the um

76
00:03:47,360 --> 00:03:49,840
other working group uh was that they

77
00:03:49,840 --> 00:03:52,080
actually also take the chat and they

78
00:03:52,080 --> 00:03:54,720
paste it uh after the

79
00:03:54,720 --> 00:03:57,840
uh minutes into this notepad stuff which

80
00:03:57,840 --> 00:03:59,519
i like a lot

81
00:03:59,519 --> 00:04:01,599
sure but that that means

82
00:04:01,599 --> 00:04:03,200
we only get the minutes

83
00:04:03,200 --> 00:04:05,760
from the notepad

84
00:04:05,760 --> 00:04:07,280
people still will be speaking someone

85
00:04:07,280 --> 00:04:08,400
still needs to type in there we still

86
00:04:08,400 --> 00:04:10,159
need a note taker yeah yeah of course of

87
00:04:10,159 --> 00:04:11,840
course so

88
00:04:11,840 --> 00:04:13,760
we still need a volunteer

89
00:04:13,760 --> 00:04:17,760
yeah shortcut to path and fame

90
00:04:20,320 --> 00:04:22,320
uh you guys are the toughest

91
00:04:22,320 --> 00:04:26,160
no one here wants to be famous people no

92
00:04:26,160 --> 00:04:29,320
no ambition

93
00:04:29,759 --> 00:04:31,759
going once

94
00:04:31,759 --> 00:04:34,479
going twice

95
00:04:34,960 --> 00:04:36,320
oh man

96
00:04:36,320 --> 00:04:38,560
all right i'll take a minute can you do

97
00:04:38,560 --> 00:04:40,080
it all right thank you tony at least now

98
00:04:40,080 --> 00:04:41,280
it's up in that dock now we'll know

99
00:04:41,280 --> 00:04:43,840
where they are

100
00:04:44,320 --> 00:04:46,800
excellent all right so welcome to beer

101
00:04:46,800 --> 00:04:48,479
welcome to uh well whatever time zone

102
00:04:48,479 --> 00:04:49,680
you're in and pretend that you're not

103
00:04:49,680 --> 00:04:50,800
there

104
00:04:50,800 --> 00:04:51,759
uh

105
00:04:51,759 --> 00:04:53,199
if you're in the wrong room stick around

106
00:04:53,199 --> 00:04:56,479
we have fun here

107
00:04:56,479 --> 00:04:59,280
no well note taken

108
00:04:59,280 --> 00:05:00,720
nods in the room

109
00:05:00,720 --> 00:05:03,120
i wish i could see you all

110
00:05:03,120 --> 00:05:05,360
i assume you've read this

111
00:05:05,360 --> 00:05:06,880
fair assumption

112
00:05:06,880 --> 00:05:08,160
thanks

113
00:05:08,160 --> 00:05:10,000
jabberman is collaborative so that's the

114
00:05:10,000 --> 00:05:11,919
the url right there i've got it up in a

115
00:05:11,919 --> 00:05:12,720
tab

116
00:05:12,720 --> 00:05:13,520
i

117
00:05:13,520 --> 00:05:15,840
recommend everyone do the same so that

118
00:05:15,840 --> 00:05:16,960
when you have

119
00:05:16,960 --> 00:05:18,240
questions you can either put them in

120
00:05:18,240 --> 00:05:19,440
there or you can make sure that they

121
00:05:19,440 --> 00:05:20,800
were

122
00:05:20,800 --> 00:05:22,240
entered correctly if you didn't do them

123
00:05:22,240 --> 00:05:25,120
yourself you know as uh avaro mentioned

124
00:05:25,120 --> 00:05:27,360
correct names spelling what have you

125
00:05:27,360 --> 00:05:29,680
but uh that that's a great way to ensure

126
00:05:29,680 --> 00:05:32,000
we have everything in one place from

127
00:05:32,000 --> 00:05:33,680
everyone who contributed

128
00:05:33,680 --> 00:05:35,759
so take that down bring up open a tab

129
00:05:35,759 --> 00:05:38,160
and get ready to have some fun uh what's

130
00:05:38,160 --> 00:05:41,440
the status with jabber then do we have

131
00:05:41,440 --> 00:05:44,320
i remember seeing

132
00:05:44,320 --> 00:05:45,919
yesterday

133
00:05:45,919 --> 00:05:47,039
there was a

134
00:05:47,039 --> 00:05:48,720
it was some sort of jabber button

135
00:05:48,720 --> 00:05:52,560
somewhere here i thought

136
00:05:52,560 --> 00:05:54,400
okay

137
00:05:54,400 --> 00:05:56,400
so the the

138
00:05:56,400 --> 00:05:57,360
chat

139
00:05:57,360 --> 00:05:58,960
that you see

140
00:05:58,960 --> 00:06:00,880
in miraco

141
00:06:00,880 --> 00:06:02,080
that is

142
00:06:02,080 --> 00:06:04,479
connected to jabber correct so you could

143
00:06:04,479 --> 00:06:06,560
be

144
00:06:10,319 --> 00:06:12,319
i was just saying there's also a new

145
00:06:12,319 --> 00:06:14,880
tool that the atf is using that is also

146
00:06:14,880 --> 00:06:17,199
at the very end solid

147
00:06:17,199 --> 00:06:20,319
bot i guess it's uh the new i am thing

148
00:06:20,319 --> 00:06:21,199
um

149
00:06:21,199 --> 00:06:23,919
if you guys know where the jabber

150
00:06:23,919 --> 00:06:25,759
logs are

151
00:06:25,759 --> 00:06:29,600
uh all of this goes into the log as well

152
00:06:30,880 --> 00:06:32,800
if you don't know like this okay

153
00:06:32,800 --> 00:06:35,039
the jabber what i didn't catch that

154
00:06:35,039 --> 00:06:36,960
the jabber logs

155
00:06:36,960 --> 00:06:39,199
so all the everything

156
00:06:39,199 --> 00:06:43,199
on the jabber is logged and saved

157
00:06:43,199 --> 00:06:44,000
okay

158
00:06:44,000 --> 00:06:46,400
and then that's what we we then import

159
00:06:46,400 --> 00:06:48,960
over into the hedge

160
00:06:48,960 --> 00:06:50,400
all right

161
00:06:50,400 --> 00:06:54,160
excellent okay um tony's got minutes i

162
00:06:54,160 --> 00:06:55,599
want you all feel really guilty about

163
00:06:55,599 --> 00:06:57,199
that

164
00:06:57,199 --> 00:06:58,479
i don't think that sunk in but it's

165
00:06:58,479 --> 00:07:01,039
worth a try

166
00:07:01,120 --> 00:07:03,120
and here's our agenda

167
00:07:03,120 --> 00:07:06,400
uh we made a lot of progress last

168
00:07:06,400 --> 00:07:08,560
meeting in terms of uh we have a bunch

169
00:07:08,560 --> 00:07:09,599
of stuff in these shepherds we have a

170
00:07:09,599 --> 00:07:12,160
bunch of stuff that needs uh

171
00:07:12,160 --> 00:07:14,080
adoption call we had some drafts

172
00:07:14,080 --> 00:07:17,639
actually make some progress

173
00:07:22,000 --> 00:07:24,319
to be completely frank it's been summer

174
00:07:24,319 --> 00:07:25,759
and i've been gone and i've been as

175
00:07:25,759 --> 00:07:28,479
offline as much as i possibly can so

176
00:07:28,479 --> 00:07:29,599
some things progressed some things

177
00:07:29,599 --> 00:07:32,080
didn't uh now it's cold and wet and i'm

178
00:07:32,080 --> 00:07:33,680
stuck inside and i think we'll be making

179
00:07:33,680 --> 00:07:36,240
some progress after this

180
00:07:36,240 --> 00:07:37,680
all right anything missing from this

181
00:07:37,680 --> 00:07:40,080
agenda

182
00:07:41,520 --> 00:07:43,680
all right human you up

183
00:07:43,680 --> 00:07:45,840
go ahead alvaro

184
00:07:45,840 --> 00:07:47,440
hey uh thanks i just wanted to say i

185
00:07:47,440 --> 00:07:48,400
don't think there's anything missing in

186
00:07:48,400 --> 00:07:50,479
the agenda but um

187
00:07:50,479 --> 00:07:51,759
what caught my attention and this is

188
00:07:51,759 --> 00:07:53,120
really for the whole working group not

189
00:07:53,120 --> 00:07:56,000
just to you know you greg or tony

190
00:07:56,000 --> 00:07:57,280
um

191
00:07:57,280 --> 00:07:58,479
we're not gonna have time right you know

192
00:07:58,479 --> 00:08:02,000
we have uh 40 minutes of if time permits

193
00:08:02,000 --> 00:08:03,680
and unless i shut up right now and

194
00:08:03,680 --> 00:08:06,800
everyone does it very fast

195
00:08:06,800 --> 00:08:08,240
um

196
00:08:08,240 --> 00:08:09,520
you know it seems that you know maybe we

197
00:08:09,520 --> 00:08:12,719
can have an interim at some point

198
00:08:13,840 --> 00:08:16,080
it seems that that everyone took the

199
00:08:16,080 --> 00:08:17,599
summer off

200
00:08:17,599 --> 00:08:20,720
because the list has been very quiet

201
00:08:20,720 --> 00:08:21,520
and

202
00:08:21,520 --> 00:08:24,479
you know we can't make progress

203
00:08:24,479 --> 00:08:26,160
with a 10-minute presentation every four

204
00:08:26,160 --> 00:08:27,280
months

205
00:08:27,280 --> 00:08:29,440
um if time permits right if i have

206
00:08:29,440 --> 00:08:30,800
enough time to do that

207
00:08:30,800 --> 00:08:32,880
so what i want to say is that you know

208
00:08:32,880 --> 00:08:33,919
it's up to

209
00:08:33,919 --> 00:08:35,440
all of us

210
00:08:35,440 --> 00:08:38,559
the authors and the chairs and

211
00:08:38,559 --> 00:08:39,919
people who are not authors who can

212
00:08:39,919 --> 00:08:41,279
review documents

213
00:08:41,279 --> 00:08:43,200
to make these things progress

214
00:08:43,200 --> 00:08:44,640
right because you know there's no way

215
00:08:44,640 --> 00:08:45,920
that in 10 minutes we're going to be

216
00:08:45,920 --> 00:08:48,720
able to get an update

217
00:08:48,720 --> 00:08:50,640
dig into the issues

218
00:08:50,640 --> 00:08:52,880
and resolve them here

219
00:08:52,880 --> 00:08:55,120
we have to go to the list right can i

220
00:08:55,120 --> 00:08:56,640
add to that complexity we don't even

221
00:08:56,640 --> 00:08:58,240
have time after this when we bs in the

222
00:08:58,240 --> 00:09:00,080
bar and do it as well

223
00:09:00,080 --> 00:09:01,440
right so it's currently worse than a

224
00:09:01,440 --> 00:09:02,880
normal meeting

225
00:09:02,880 --> 00:09:05,279
correct so we want to or we need to i

226
00:09:05,279 --> 00:09:07,519
think as a working group and to be a

227
00:09:07,519 --> 00:09:09,440
little bit more active uh you know for

228
00:09:09,440 --> 00:09:10,560
all of us

229
00:09:10,560 --> 00:09:12,399
uh to again you know

230
00:09:12,399 --> 00:09:14,399
sponsor or push

231
00:09:14,399 --> 00:09:16,480
uh discussions you know the draft

232
00:09:16,480 --> 00:09:18,720
authors and you guys chairs to to make

233
00:09:18,720 --> 00:09:20,399
sure that these questions happen

234
00:09:20,399 --> 00:09:22,000
uh and i said even for the people who

235
00:09:22,000 --> 00:09:24,320
are not authors we need you to review

236
00:09:24,320 --> 00:09:26,399
documents so that they are

237
00:09:26,399 --> 00:09:27,600
uh you know well understood and well

238
00:09:27,600 --> 00:09:28,720
reviewed by the time they get out of the

239
00:09:28,720 --> 00:09:29,839
working group

240
00:09:29,839 --> 00:09:32,080
so this is our

241
00:09:32,080 --> 00:09:33,839
this is our longer gap anyway so it

242
00:09:33,839 --> 00:09:36,240
makes sense um i think what i've done in

243
00:09:36,240 --> 00:09:37,440
the past in groups when we start getting

244
00:09:37,440 --> 00:09:38,720
wedged i think we did it here at beer as

245
00:09:38,720 --> 00:09:41,040
well like mid late january seems like a

246
00:09:41,040 --> 00:09:43,519
good target we get everyone to agree

247
00:09:43,519 --> 00:09:45,839
uh before they disappear on the holiday

248
00:09:45,839 --> 00:09:46,959
come back give them a few weeks get

249
00:09:46,959 --> 00:09:49,360
their heads together and then we can

250
00:09:49,360 --> 00:09:51,360
meet again and make some progress so

251
00:09:51,360 --> 00:09:52,720
we'll make a determination on the list

252
00:09:52,720 --> 00:09:54,320
as we see things move but that's a great

253
00:09:54,320 --> 00:09:57,519
suggestion of our appreciated

254
00:09:58,160 --> 00:09:59,120
i'm

255
00:09:59,120 --> 00:10:00,800
curious too well never mind we'll just

256
00:10:00,800 --> 00:10:03,120
move this we don't have to i'm so uh

257
00:10:03,120 --> 00:10:06,160
human are you you ready

258
00:10:07,680 --> 00:10:10,079
can you do the pre-loaded slide

259
00:10:10,079 --> 00:10:12,640
yeah if i can click on the unmuted i'm

260
00:10:12,640 --> 00:10:14,399
ready

261
00:10:14,399 --> 00:10:18,160
which i think i just did

262
00:10:18,160 --> 00:10:21,040
craig you had a question

263
00:10:22,079 --> 00:10:24,959
i wanted to ask about

264
00:10:24,959 --> 00:10:26,320
um

265
00:10:26,320 --> 00:10:30,079
in course of uh discussing um

266
00:10:30,079 --> 00:10:33,200
progress of uh path mtu discovery in

267
00:10:33,200 --> 00:10:34,399
beer

268
00:10:34,399 --> 00:10:35,760
um

269
00:10:35,760 --> 00:10:39,120
what i found is that um we're kind of

270
00:10:39,120 --> 00:10:41,519
stuck with the uh beer uh

271
00:10:41,519 --> 00:10:42,959
ping

272
00:10:42,959 --> 00:10:47,760
document uh i'm afraid it's uh expired

273
00:10:47,760 --> 00:10:52,240
so i would really appreciate the help of

274
00:10:52,240 --> 00:10:54,640
chairs and ad uh

275
00:10:54,640 --> 00:10:57,440
reaching out to the pen holder

276
00:10:57,440 --> 00:10:58,839
and asking

277
00:10:58,839 --> 00:11:00,640
um

278
00:11:00,640 --> 00:11:02,560
of status and

279
00:11:02,560 --> 00:11:04,720
if need some help

280
00:11:04,720 --> 00:11:06,079
if

281
00:11:06,079 --> 00:11:08,800
the pen holder needs help i can

282
00:11:08,800 --> 00:11:13,800
help and edit the document because

283
00:11:14,320 --> 00:11:16,880
to progress uh path into discovery and

284
00:11:16,880 --> 00:11:20,160
there uh we need to finish um

285
00:11:20,160 --> 00:11:22,240
uh the ping document or at least they

286
00:11:22,240 --> 00:11:23,600
need to get

287
00:11:23,600 --> 00:11:25,360
together

288
00:11:25,360 --> 00:11:28,000
so you're one of the authors aren't you

289
00:11:28,000 --> 00:11:31,200
yes i'm a coffer but i'm not pen holder

290
00:11:31,200 --> 00:11:33,200
okay well hopefully you guys are in

291
00:11:33,200 --> 00:11:34,640
communication as well i mean we can kick

292
00:11:34,640 --> 00:11:35,600
but uh

293
00:11:35,600 --> 00:11:37,519
you're entitled to as well

294
00:11:37,519 --> 00:11:39,920
yeah that's that's kind of

295
00:11:39,920 --> 00:11:41,440
not working

296
00:11:41,440 --> 00:11:43,200
okay need

297
00:11:43,200 --> 00:11:45,360
another boot or two all right well

298
00:11:45,360 --> 00:11:47,200
that's that's my intent

299
00:11:47,200 --> 00:11:49,279
after this meeting going through all the

300
00:11:49,279 --> 00:11:51,120
docs and see where they are sandy put

301
00:11:51,120 --> 00:11:52,880
together a fantastic list for us last

302
00:11:52,880 --> 00:11:54,880
time we moved some of that along and

303
00:11:54,880 --> 00:11:56,320
we'll just go from there probably get

304
00:11:56,320 --> 00:11:58,639
confirmed from the entire group

305
00:11:58,639 --> 00:12:00,160
on the list and where these docs are and

306
00:12:00,160 --> 00:12:01,600
we'll start moving this stuff because

307
00:12:01,600 --> 00:12:03,440
that we're going to need that anyway to

308
00:12:03,440 --> 00:12:05,200
kind of see what progress we make before

309
00:12:05,200 --> 00:12:07,040
we get to an interim to see you know

310
00:12:07,040 --> 00:12:09,040
what what extra things we need to do

311
00:12:09,040 --> 00:12:11,360
which ones we need to focus on uh

312
00:12:11,360 --> 00:12:12,560
et cetera

313
00:12:12,560 --> 00:12:14,880
so yeah i greatly appreciate humans uh

314
00:12:14,880 --> 00:12:16,560
volunteering uh

315
00:12:16,560 --> 00:12:19,120
uh to shepherd their uh path mtu

316
00:12:19,120 --> 00:12:20,240
discovery

317
00:12:20,240 --> 00:12:23,440
but uh yeah we'll we'll need to progress

318
00:12:23,440 --> 00:12:25,519
uh the ping too

319
00:12:25,519 --> 00:12:27,200
excellent

320
00:12:27,200 --> 00:12:29,680
thanks okay uh human were you waiting

321
00:12:29,680 --> 00:12:32,000
for me to authorize you to do something

322
00:12:32,000 --> 00:12:34,079
i just hit

323
00:12:34,079 --> 00:12:36,639
no i i send you folks a slide

324
00:12:36,639 --> 00:12:41,120
so i don't see them being shared on the

325
00:12:41,120 --> 00:12:43,360
or

326
00:12:43,360 --> 00:12:46,320
so i'll if i stop sharing slides

327
00:12:46,320 --> 00:12:47,920
i think that's a start you go up there

328
00:12:47,920 --> 00:12:49,279
and there's a share preloaded slide

329
00:12:49,279 --> 00:12:50,399
button

330
00:12:50,399 --> 00:12:53,120
oh oh okay now i need to get on another

331
00:12:53,120 --> 00:12:54,160
pc

332
00:12:54,160 --> 00:12:56,160
i thought i'd send this i

333
00:12:56,160 --> 00:12:57,760
i thought i sent this slide

334
00:12:57,760 --> 00:12:59,839
sandy yeah if you could share it i would

335
00:12:59,839 --> 00:13:01,920
really appreciate it okay so this is

336
00:13:01,920 --> 00:13:03,920
actually a pretty cool tool you hit this

337
00:13:03,920 --> 00:13:05,040
everything that's been pretty that's why

338
00:13:05,040 --> 00:13:06,320
i asked to get them all up ahead of time

339
00:13:06,320 --> 00:13:08,720
so we can just pop through this so i'll

340
00:13:08,720 --> 00:13:09,760
hit this

341
00:13:09,760 --> 00:13:12,480
i'll select your uh

342
00:13:12,480 --> 00:13:15,760
you beer mldp i'm going to go back over

343
00:13:15,760 --> 00:13:17,519
no yeah ledp excellent all right so that

344
00:13:17,519 --> 00:13:20,079
is on top of the queue on this dock boom

345
00:13:20,079 --> 00:13:21,600
and share

346
00:13:21,600 --> 00:13:24,880
and i'll step through them for you

347
00:13:25,279 --> 00:13:26,320
uh

348
00:13:26,320 --> 00:13:27,440
what did it do

349
00:13:27,440 --> 00:13:28,720
it

350
00:13:28,720 --> 00:13:31,600
stopped sharing okay i'll try it again

351
00:13:31,600 --> 00:13:32,839
uh

352
00:13:32,839 --> 00:13:34,959
mld share

353
00:13:34,959 --> 00:13:37,519
there it is wonderful perfect

354
00:13:37,519 --> 00:13:39,040
um so

355
00:13:39,040 --> 00:13:42,000
i think couple of ideas ago

356
00:13:42,000 --> 00:13:43,760
i went through this

357
00:13:43,760 --> 00:13:46,800
i think we asked for

358
00:13:46,800 --> 00:13:49,680
last call because we haven't got any uh

359
00:13:49,680 --> 00:13:52,000
comments or any uh

360
00:13:52,000 --> 00:13:54,160
questions on it uh we were hoping that

361
00:13:54,160 --> 00:13:56,240
the last call would start generating

362
00:13:56,240 --> 00:13:59,279
some comments questions on the draft um

363
00:13:59,279 --> 00:14:01,920
i personally didn't see

364
00:14:01,920 --> 00:14:04,880
the last call email going around so i

365
00:14:04,880 --> 00:14:06,079
thought maybe it's good to give

366
00:14:06,079 --> 00:14:08,399
everybody another

367
00:14:08,399 --> 00:14:09,600
you know

368
00:14:09,600 --> 00:14:11,680
refresher on what we are trying to do on

369
00:14:11,680 --> 00:14:13,440
this draft so if you could go to next

370
00:14:13,440 --> 00:14:14,839
slide

371
00:14:14,839 --> 00:14:17,600
please so this is uh this draft is

372
00:14:17,600 --> 00:14:19,040
really uh

373
00:14:19,040 --> 00:14:22,480
v2 of the pim signaling over beer we are

374
00:14:22,480 --> 00:14:24,320
trying to achieve the same thing with

375
00:14:24,320 --> 00:14:27,760
the mldp over pier the entire

376
00:14:27,760 --> 00:14:30,480
point of this draft is that if you do

377
00:14:30,480 --> 00:14:33,760
have a customer that or operator that

378
00:14:33,760 --> 00:14:35,760
wants to go from some of these legacy

379
00:14:35,760 --> 00:14:38,160
multicast protocols to the beer they

380
00:14:38,160 --> 00:14:40,720
probably want to upgrade some of their

381
00:14:40,720 --> 00:14:43,040
part of their networks one at a time

382
00:14:43,040 --> 00:14:45,440
usually they might start from the core

383
00:14:45,440 --> 00:14:47,920
or whichever part of the network it is

384
00:14:47,920 --> 00:14:48,720
and

385
00:14:48,720 --> 00:14:51,519
this draft will make it easier on them

386
00:14:51,519 --> 00:14:52,320
to

387
00:14:52,320 --> 00:14:54,560
upgrade a part of the network

388
00:14:54,560 --> 00:14:59,040
on the mld mldp network to beer without

389
00:14:59,040 --> 00:15:00,880
really changing the

390
00:15:00,880 --> 00:15:03,600
software on the routers that are doing

391
00:15:03,600 --> 00:15:05,279
mldp

392
00:15:05,279 --> 00:15:07,519
or really doing any excessive

393
00:15:07,519 --> 00:15:09,040
configurations

394
00:15:09,040 --> 00:15:11,120
on any of these routers that are doing

395
00:15:11,120 --> 00:15:13,360
mldp you just grab the portion of the

396
00:15:13,360 --> 00:15:15,199
network that you want to upgrade to beer

397
00:15:15,199 --> 00:15:17,040
you upgrade it to beer because of the

398
00:15:17,040 --> 00:15:18,320
the hardware

399
00:15:18,320 --> 00:15:20,000
support sphere and any portion of the

400
00:15:20,000 --> 00:15:21,440
network that doesn't support the

401
00:15:21,440 --> 00:15:23,440
hardware doesn't support

402
00:15:23,440 --> 00:15:25,279
or or the software for that matter

403
00:15:25,279 --> 00:15:27,279
doesn't support beer forwarding can a

404
00:15:27,279 --> 00:15:30,240
stay on mldp without any

405
00:15:30,240 --> 00:15:33,120
excessive software upgrades or any

406
00:15:33,120 --> 00:15:34,959
change in the topology of the network

407
00:15:34,959 --> 00:15:39,239
itself next slide please

408
00:15:42,399 --> 00:15:47,279
uh we were we are using rfc 7060 uh

409
00:15:47,279 --> 00:15:50,880
basically we are using tldp between the

410
00:15:50,880 --> 00:15:53,519
two beer edge routers

411
00:15:53,519 --> 00:15:57,519
to communicate the fake from one

412
00:15:57,519 --> 00:16:01,120
mldp domain to the next mldp domain

413
00:16:01,120 --> 00:16:04,160
so when the effect comes into the

414
00:16:04,160 --> 00:16:06,079
one of the edge router that is

415
00:16:06,079 --> 00:16:09,600
terminating the ldp signaling

416
00:16:09,600 --> 00:16:10,399
that

417
00:16:10,399 --> 00:16:14,000
beer edge router creates a targeted ldp

418
00:16:14,000 --> 00:16:17,600
multi-hop away to the another beer

419
00:16:17,600 --> 00:16:19,600
edge router which is the egress

420
00:16:19,600 --> 00:16:21,199
[Music]

421
00:16:21,199 --> 00:16:22,000
he

422
00:16:22,000 --> 00:16:24,079
even i forgot the terminology since it's

423
00:16:24,079 --> 00:16:26,399
been so long um it's a

424
00:16:26,399 --> 00:16:30,880
egress beer edge router so that becomes

425
00:16:32,040 --> 00:16:33,680
e-b-h-e-r-e-b-e-r i think that was the

426
00:16:33,680 --> 00:16:35,759
terminology we use

427
00:16:35,759 --> 00:16:36,880
and

428
00:16:36,880 --> 00:16:40,000
signals effect and

429
00:16:40,000 --> 00:16:42,399
then we push that fake into the mldp

430
00:16:42,399 --> 00:16:45,120
domain and based on that effect

431
00:16:45,120 --> 00:16:47,120
signaling beer can figure out who are

432
00:16:47,120 --> 00:16:48,399
the

433
00:16:48,399 --> 00:16:50,639
brp routers that

434
00:16:50,639 --> 00:16:53,040
mldp is terminating on and can set up

435
00:16:53,040 --> 00:16:55,600
the beer communications between the two

436
00:16:55,600 --> 00:16:57,199
edge drivers

437
00:16:57,199 --> 00:16:58,959
next

438
00:16:58,959 --> 00:17:01,599
slide please

439
00:17:02,160 --> 00:17:04,640
so as this fake signalings they come in

440
00:17:04,640 --> 00:17:05,760
from uh

441
00:17:05,760 --> 00:17:07,919
from down streams the

442
00:17:07,919 --> 00:17:08,720
uh

443
00:17:08,720 --> 00:17:10,480
i

444
00:17:10,480 --> 00:17:12,640
the ingress beer edge router if you will

445
00:17:12,640 --> 00:17:13,919
builds their

446
00:17:13,919 --> 00:17:16,000
uh the tree figures out who are the

447
00:17:16,000 --> 00:17:18,240
peers and it builds uh

448
00:17:18,240 --> 00:17:21,439
the beer the beer neighborship uh and

449
00:17:21,439 --> 00:17:23,679
actually when the packets come in the

450
00:17:23,679 --> 00:17:26,799
mldp packets they come in to the edge

451
00:17:26,799 --> 00:17:30,000
router we swap the label with the tldp

452
00:17:30,000 --> 00:17:34,000
label we uh we push on the beer header

453
00:17:34,000 --> 00:17:36,000
and we go down a stream to all these

454
00:17:36,000 --> 00:17:37,760
other b routers where

455
00:17:37,760 --> 00:17:40,240
that were actually signaling their

456
00:17:40,240 --> 00:17:43,520
interest into that effect and into that

457
00:17:43,520 --> 00:17:45,840
source of the multicast and that's

458
00:17:45,840 --> 00:17:47,679
basically how the data path starts

459
00:17:47,679 --> 00:17:50,240
working when we get to the downstream

460
00:17:50,240 --> 00:17:52,799
beer edge router we pop the beer header

461
00:17:52,799 --> 00:17:55,039
there is a protocol the b protocol which

462
00:17:55,039 --> 00:17:57,679
is the mpls and based on that we realize

463
00:17:57,679 --> 00:17:59,520
that there is a label that we need to

464
00:17:59,520 --> 00:18:00,480
swap

465
00:18:00,480 --> 00:18:01,520
within

466
00:18:01,520 --> 00:18:03,280
with the downstream

467
00:18:03,280 --> 00:18:04,720
mldp

468
00:18:04,720 --> 00:18:06,720
domain if you will and that's how the

469
00:18:06,720 --> 00:18:09,360
data path starts working

470
00:18:09,360 --> 00:18:12,918
nexus like please

471
00:18:14,960 --> 00:18:16,880
so this was a good refresher for myself

472
00:18:16,880 --> 00:18:19,760
too actually um so basically again

473
00:18:19,760 --> 00:18:21,919
you're looking for any comments any

474
00:18:21,919 --> 00:18:24,799
suggestions if yeah you know uh anybody

475
00:18:24,799 --> 00:18:26,799
in the working group feels that you know

476
00:18:26,799 --> 00:18:28,480
we need to beef up the

477
00:18:28,480 --> 00:18:30,799
the draft by all means you know come on

478
00:18:30,799 --> 00:18:33,919
the mailing list and let us know if not

479
00:18:33,919 --> 00:18:36,559
uh maybe we should do a last call and

480
00:18:36,559 --> 00:18:38,880
maybe that will trigger some extra

481
00:18:38,880 --> 00:18:40,000
discussions

482
00:18:40,000 --> 00:18:42,640
uh you know

483
00:18:42,640 --> 00:18:46,559
and that's all for me thanks

484
00:18:51,840 --> 00:18:54,840
questions

485
00:18:56,720 --> 00:19:00,160
you gotta turn your mic on

486
00:19:03,039 --> 00:19:05,840
um so this is lower uh

487
00:19:05,840 --> 00:19:08,080
one thing is

488
00:19:08,080 --> 00:19:11,520
uh you could send

489
00:19:11,520 --> 00:19:13,679
oh and you could send a email to the

490
00:19:13,679 --> 00:19:15,679
mpls working group and ask for comments

491
00:19:15,679 --> 00:19:17,440
also

492
00:19:17,440 --> 00:19:18,960
yeah i don't

493
00:19:18,960 --> 00:19:22,240
i had read the draft there are almost no

494
00:19:22,240 --> 00:19:24,400
changes at is significant

495
00:19:24,400 --> 00:19:25,600
for

496
00:19:25,600 --> 00:19:27,600
mldp but

497
00:19:27,600 --> 00:19:31,600
it might trigger some responses at least

498
00:19:31,600 --> 00:19:35,200
and the shares for beer

499
00:19:35,200 --> 00:19:38,080
i would like email to go to the mpls

500
00:19:38,080 --> 00:19:41,120
working group when you start the working

501
00:19:41,120 --> 00:19:44,080
group last call for this draft

502
00:19:44,080 --> 00:19:46,799
okay thanks

503
00:19:47,440 --> 00:19:52,400
uh in parallel you're asking in parallel

504
00:19:52,400 --> 00:19:53,280
oh

505
00:19:53,280 --> 00:19:55,120
when you start the working group last

506
00:19:55,120 --> 00:19:58,240
call you just send a mail

507
00:19:58,240 --> 00:20:00,960
uh to the mpls working group telling us

508
00:20:00,960 --> 00:20:03,120
that you have started the work in your

509
00:20:03,120 --> 00:20:05,200
last call yeah okay gotcha just just

510
00:20:05,200 --> 00:20:06,880
inform the list so they can jump in and

511
00:20:06,880 --> 00:20:08,320
take a look as well

512
00:20:08,320 --> 00:20:10,559
yeah and actually they should direct

513
00:20:10,559 --> 00:20:13,679
comments to the beer list

514
00:20:13,679 --> 00:20:15,600
not to the mpls

515
00:20:15,600 --> 00:20:16,400
yeah

516
00:20:16,400 --> 00:20:17,760
exactly as that's what i was saying as

517
00:20:17,760 --> 00:20:19,440
we was last call in our lit and our

518
00:20:19,440 --> 00:20:22,720
group uh comments should start there

519
00:20:22,720 --> 00:20:24,320
but i still it depends on the

520
00:20:24,320 --> 00:20:26,159
integration but oftentimes it then goes

521
00:20:26,159 --> 00:20:27,679
over to the chairs of the other group

522
00:20:27,679 --> 00:20:29,600
for approval as you know before you take

523
00:20:29,600 --> 00:20:31,039
it up to publication

524
00:20:31,039 --> 00:20:32,000
um

525
00:20:32,000 --> 00:20:35,440
but having early feedback

526
00:20:35,440 --> 00:20:36,960
at least one of you are subscribed to

527
00:20:36,960 --> 00:20:39,679
the mpls list just send the

528
00:20:39,679 --> 00:20:40,880
mail

529
00:20:40,880 --> 00:20:42,880
yeah absolutely all right thanks for

530
00:20:42,880 --> 00:20:44,559
that suggestion

531
00:20:44,559 --> 00:20:47,039
alvaro

532
00:20:47,360 --> 00:20:50,240
so you can just uh you know cc also

533
00:20:50,240 --> 00:20:52,559
on the last call also can you please uh

534
00:20:52,559 --> 00:20:54,159
copy bess

535
00:20:54,159 --> 00:20:56,159
just in case there's someone there that

536
00:20:56,159 --> 00:20:57,679
you know wants to take a look at this as

537
00:20:57,679 --> 00:20:58,400
well

538
00:20:58,400 --> 00:21:02,600
um i i have one question

539
00:21:02,799 --> 00:21:04,000
i was gonna say i have a question about

540
00:21:04,000 --> 00:21:05,919
the draft itself

541
00:21:05,919 --> 00:21:07,919
i haven't read it but it

542
00:21:07,919 --> 00:21:11,039
is marked as informational

543
00:21:11,039 --> 00:21:12,720
uh

544
00:21:12,720 --> 00:21:16,200
yeah thank you

545
00:21:18,640 --> 00:21:20,000
so i guess you're saying you're going to

546
00:21:20,000 --> 00:21:21,200
change that

547
00:21:21,200 --> 00:21:22,159
yeah

548
00:21:22,159 --> 00:21:24,880
my apologies uh yeah i think that might

549
00:21:24,880 --> 00:21:26,480
have been a copy-paste

550
00:21:26,480 --> 00:21:28,480
mistake i will change that upload it

551
00:21:28,480 --> 00:21:30,720
again yeah the other thing that i notice

552
00:21:30,720 --> 00:21:31,600
is that

553
00:21:31,600 --> 00:21:34,080
there are no normative references in the

554
00:21:34,080 --> 00:21:35,679
draft

555
00:21:35,679 --> 00:21:38,080
so uh please check that because i mean

556
00:21:38,080 --> 00:21:40,559
there should be no head references

557
00:21:40,559 --> 00:21:42,320
yes thank you

558
00:21:42,320 --> 00:21:45,280
i'll check that too thank you thanks

559
00:21:45,280 --> 00:21:47,760
yeah thanks a lot

560
00:21:47,760 --> 00:21:49,679
any more questions on the strap from

561
00:21:49,679 --> 00:21:52,240
prison

562
00:21:52,720 --> 00:21:56,559
three two one all right thanks no one

563
00:21:56,559 --> 00:21:59,840
uh next up

564
00:22:00,559 --> 00:22:01,840
we have

565
00:22:01,840 --> 00:22:04,080
the pce-based beer

566
00:22:04,080 --> 00:22:06,320
we see two presenters uh either one of

567
00:22:06,320 --> 00:22:08,960
you in the room

568
00:22:11,120 --> 00:22:13,520
all right grant pre-loaded slides there

569
00:22:13,520 --> 00:22:14,960
it is okay i didn't see that before you

570
00:22:14,960 --> 00:22:18,159
hit the button that makes sense

571
00:22:18,720 --> 00:22:22,400
hello everyone can you hear me

572
00:22:22,400 --> 00:22:23,200
yeah

573
00:22:23,200 --> 00:22:26,080
we hear ya

574
00:22:26,080 --> 00:22:28,399
okay

575
00:22:34,720 --> 00:22:38,360
all right we see the deck

576
00:22:45,600 --> 00:22:47,360
hello everyone

577
00:22:47,360 --> 00:22:51,039
yeah okay excellent i'll go go ahead hey

578
00:22:51,039 --> 00:22:53,600
i'm juan ali from china telecom i'm

579
00:22:53,600 --> 00:22:56,320
going to introduce our updates

580
00:22:56,320 --> 00:22:58,880
some comment some comments

581
00:22:58,880 --> 00:23:01,360
were made at the previous meeting

582
00:23:01,360 --> 00:23:02,960
including

583
00:23:02,960 --> 00:23:04,559
objects for mac

584
00:23:04,559 --> 00:23:06,799
formats

585
00:23:06,799 --> 00:23:08,400
dance and

586
00:23:08,400 --> 00:23:09,919
it is

587
00:23:09,919 --> 00:23:13,919
suggested to break this pce object

588
00:23:13,919 --> 00:23:16,159
pcp objective

589
00:23:16,159 --> 00:23:19,520
objectives down more

590
00:23:19,520 --> 00:23:23,520
in this update the overall process has

591
00:23:23,520 --> 00:23:26,880
not changed our main change from the

592
00:23:26,880 --> 00:23:29,520
previous version is to put some

593
00:23:29,520 --> 00:23:31,120
duplicate

594
00:23:31,120 --> 00:23:34,559
fields into tlvs increasing the

595
00:23:34,559 --> 00:23:36,400
extensibility

596
00:23:36,400 --> 00:23:40,720
of these pcp objects

597
00:23:42,640 --> 00:23:46,960
we defined 40 new tlvs namely

598
00:23:46,960 --> 00:23:50,080
multicaster source address address

599
00:23:50,080 --> 00:23:54,320
address tlv multicast group addressed

600
00:23:54,320 --> 00:23:56,880
here we will see

601
00:23:56,880 --> 00:23:58,080
we've here

602
00:23:58,080 --> 00:23:59,440
vp

603
00:23:59,440 --> 00:24:01,600
vpn information

604
00:24:01,600 --> 00:24:02,480
tl

605
00:24:02,480 --> 00:24:05,760
we and the beer information tlv

606
00:24:05,760 --> 00:24:07,600
among these tlvs

607
00:24:07,600 --> 00:24:10,880
vpn information tlv contains rd and the

608
00:24:10,880 --> 00:24:13,600
forwarding label the label lens can be

609
00:24:13,600 --> 00:24:15,520
set to zero

610
00:24:15,520 --> 00:24:17,760
fear information

611
00:24:17,760 --> 00:24:20,400
until we contains router

612
00:24:20,400 --> 00:24:22,960
identification information in beer to

613
00:24:22,960 --> 00:24:26,559
man or subdomain specifically subdomain

614
00:24:26,559 --> 00:24:31,960
id bf rid and bsl

615
00:24:32,880 --> 00:24:35,120
the multicast source registration

616
00:24:35,120 --> 00:24:39,520
objects can be used in both sphere and

617
00:24:39,520 --> 00:24:43,440
number scenarios in beer scenario it

618
00:24:43,440 --> 00:24:44,400
should

619
00:24:44,400 --> 00:24:47,360
include

620
00:24:47,360 --> 00:24:50,000
others ready always

621
00:24:50,000 --> 00:24:55,600
exclude multicast group address tlv

622
00:24:56,960 --> 00:25:00,080
multicast receiver information objects

623
00:25:00,080 --> 00:25:03,200
can be used in both

624
00:25:03,200 --> 00:25:06,240
beer and numbers scenario in beer

625
00:25:06,240 --> 00:25:08,480
scenario it should

626
00:25:08,480 --> 00:25:13,559
include all these 40 lvs

627
00:25:16,159 --> 00:25:18,960
forwarding indication objects

628
00:25:18,960 --> 00:25:21,400
contains peer forwarding information

629
00:25:21,400 --> 00:25:24,720
specifically subdomain id

630
00:25:24,720 --> 00:25:27,200
s i b sl and

631
00:25:27,200 --> 00:25:29,120
big string

632
00:25:29,120 --> 00:25:30,640
fi object

633
00:25:30,640 --> 00:25:33,760
does not need to carry beer information

634
00:25:33,760 --> 00:25:36,799
true and can only be used in beer

635
00:25:36,799 --> 00:25:38,240
scenario

636
00:25:38,240 --> 00:25:43,559
it should include others ratio always

637
00:25:44,559 --> 00:25:49,120
multicast receivers status objects

638
00:25:49,120 --> 00:25:52,559
does not to cut arrow vpn information

639
00:25:52,559 --> 00:25:54,880
tlv and appear

640
00:25:54,880 --> 00:25:57,679
we clear information here we

641
00:25:57,679 --> 00:26:00,320
can be used in both beer and non-beer

642
00:26:00,320 --> 00:26:03,440
scenario it should include multicast

643
00:26:03,440 --> 00:26:06,320
source address tlv and

644
00:26:06,320 --> 00:26:11,399
multicast group address tlv

645
00:26:11,679 --> 00:26:13,760
that's the main content of the

646
00:26:13,760 --> 00:26:15,440
instructor

647
00:26:15,440 --> 00:26:19,840
but in addition in last discussion

648
00:26:19,840 --> 00:26:24,480
tony mentioned the the flag in is

649
00:26:24,480 --> 00:26:29,279
general is not generic enough

650
00:26:29,279 --> 00:26:33,279
could it be more specific

651
00:26:33,840 --> 00:26:36,799
any comments on our work are welcomed

652
00:26:36,799 --> 00:26:39,840
thank you

653
00:26:44,640 --> 00:26:47,360
okay no queue then i comment as

654
00:26:47,360 --> 00:26:48,640
participants

655
00:26:48,640 --> 00:26:52,640
so read the draft with great interest um

656
00:26:52,640 --> 00:26:54,720
all cool um

657
00:26:54,720 --> 00:26:56,159
i think it should be

658
00:26:56,159 --> 00:26:59,760
more precisely named

659
00:26:59,760 --> 00:27:01,279
pce

660
00:27:01,279 --> 00:27:04,000
uh you know ip multicast

661
00:27:04,000 --> 00:27:06,880
beer overlay or something because it

662
00:27:06,880 --> 00:27:09,279
only does uh traditional ip multicast on

663
00:27:09,279 --> 00:27:11,600
top of beer but i mean that's cool

664
00:27:11,600 --> 00:27:14,720
um i have a specific question where i

665
00:27:14,720 --> 00:27:17,200
stumbled in the draft

666
00:27:17,200 --> 00:27:19,919
where you have this uh forwarding

667
00:27:19,919 --> 00:27:21,760
indication object

668
00:27:21,760 --> 00:27:23,919
and you're passing around the beer beat

669
00:27:23,919 --> 00:27:25,279
mask

670
00:27:25,279 --> 00:27:27,919
that's all cool but there is a bee bit

671
00:27:27,919 --> 00:27:30,320
which you can set and indicate known

672
00:27:30,320 --> 00:27:32,640
beer so that confused me why would you

673
00:27:32,640 --> 00:27:35,120
pass around the beer beat mask if it's

674
00:27:35,120 --> 00:27:37,760
not beer

675
00:27:40,000 --> 00:27:41,840
if you don't have it on from the top of

676
00:27:41,840 --> 00:27:43,360
your head then i just take it to the

677
00:27:43,360 --> 00:27:46,360
list

678
00:27:55,960 --> 00:27:59,069
[Music]

679
00:28:00,960 --> 00:28:03,279
use for the pure scenario

680
00:28:03,279 --> 00:28:05,840
uh kindly you know for the numbers in

681
00:28:05,840 --> 00:28:08,159
our way i think we should define the

682
00:28:08,159 --> 00:28:09,039
other

683
00:28:09,039 --> 00:28:13,360
uh our similar object to to

684
00:28:13,360 --> 00:28:14,960
project the

685
00:28:14,960 --> 00:28:17,919
the ir to

686
00:28:17,919 --> 00:28:21,279
how to for the how to reach the

687
00:28:21,279 --> 00:28:23,840
receiver

688
00:28:25,360 --> 00:28:27,360
still does not make sense to me why a

689
00:28:27,360 --> 00:28:29,200
beer beat mask will be passed around

690
00:28:29,200 --> 00:28:30,960
them but it's okay i'll take you to the

691
00:28:30,960 --> 00:28:31,840
list

692
00:28:31,840 --> 00:28:34,158
okay

693
00:28:38,880 --> 00:28:41,679
just just general comment um

694
00:28:41,679 --> 00:28:43,200
i'm happy to see this

695
00:28:43,200 --> 00:28:45,840
as one of the initial architects of beer

696
00:28:45,840 --> 00:28:47,919
even before the buff you know we were

697
00:28:47,919 --> 00:28:49,120
seeing all these scenarios and this is

698
00:28:49,120 --> 00:28:51,120
one that came out basically you know the

699
00:28:51,120 --> 00:28:52,880
signaling over the top

700
00:28:52,880 --> 00:28:54,240
and uh

701
00:28:54,240 --> 00:28:55,600
i guess the question i have going

702
00:28:55,600 --> 00:28:57,360
forward on this is do we want to make

703
00:28:57,360 --> 00:28:59,919
this the definitive document for

704
00:28:59,919 --> 00:29:02,080
all pce regarding beer or just this

705
00:29:02,080 --> 00:29:03,679
particular scenario and then just you

706
00:29:03,679 --> 00:29:05,200
know pick things up as they come down

707
00:29:05,200 --> 00:29:07,520
the road

708
00:29:08,159 --> 00:29:09,520
just general i'm not looking for an

709
00:29:09,520 --> 00:29:10,559
answer i'm just thinking something to

710
00:29:10,559 --> 00:29:12,000
think about we'll take that list as well

711
00:29:12,000 --> 00:29:14,720
as we move this thing along

712
00:29:14,720 --> 00:29:16,399
yeah i think it would be great if that

713
00:29:16,399 --> 00:29:18,080
will be kind of the container document

714
00:29:18,080 --> 00:29:21,679
for a pce-based architecture but

715
00:29:21,679 --> 00:29:23,840
ideally it would allow to do something

716
00:29:23,840 --> 00:29:26,399
else than just ip multicast

717
00:29:26,399 --> 00:29:29,760
yes that exactly

718
00:29:29,760 --> 00:29:31,840
so no just a hook to allow to

719
00:29:31,840 --> 00:29:33,600
differentiate and plug something in

720
00:29:33,600 --> 00:29:35,440
which is not based on ip multicast

721
00:29:35,440 --> 00:29:38,880
addresses will be you know an excellent

722
00:29:38,880 --> 00:29:41,360
extension i think and that would then

723
00:29:41,360 --> 00:29:43,200
basically be defined the architecture

724
00:29:43,200 --> 00:29:45,840
for pc beer you know over pc

725
00:29:45,840 --> 00:29:48,799
truth go ahead please

726
00:29:53,520 --> 00:29:54,960
can you guys hear me

727
00:29:54,960 --> 00:29:56,720
yeah go ahead

728
00:29:56,720 --> 00:29:59,600
yeah uh thank you guys

729
00:29:59,600 --> 00:30:02,240
uh the issue that i have is

730
00:30:02,240 --> 00:30:04,000
sorry

731
00:30:04,000 --> 00:30:06,480
question

732
00:30:07,279 --> 00:30:09,840
and you guys can continue

733
00:30:09,840 --> 00:30:13,200
i'm having some audio issues

734
00:30:13,200 --> 00:30:15,200
we hear you now

735
00:30:15,200 --> 00:30:18,000
oh he's gone all right

736
00:30:18,000 --> 00:30:20,880
try again a lot of feedback that's why

737
00:30:20,880 --> 00:30:22,640
that's why i was canceling so i know my

738
00:30:22,640 --> 00:30:24,159
voice is clear

739
00:30:24,159 --> 00:30:26,399
but a lot of feedback for me

740
00:30:26,399 --> 00:30:30,159
okay no problem thank you real list then

741
00:30:30,159 --> 00:30:34,200
all right any more questions

742
00:30:36,480 --> 00:30:38,799
all right next up

743
00:30:38,799 --> 00:30:42,559
jeffrey on slicing

744
00:30:48,000 --> 00:30:48,840
you're

745
00:30:48,840 --> 00:30:50,640
granted

746
00:30:50,640 --> 00:30:54,399
here it comes all right i'm off to mute

747
00:30:59,200 --> 00:31:01,919
okay um

748
00:31:01,919 --> 00:31:05,200
so this is about

749
00:31:05,200 --> 00:31:07,600
some thoughts on how to do a slicing and

750
00:31:07,600 --> 00:31:09,760
traffic differentiation

751
00:31:09,760 --> 00:31:10,880
in beer

752
00:31:10,880 --> 00:31:12,559
i'm presenting on behalf of the

753
00:31:12,559 --> 00:31:15,519
co-authors here uh jeffrey and tony

754
00:31:15,519 --> 00:31:17,039
next i please

755
00:31:17,039 --> 00:31:20,240
i sharing my sharing it myself or

756
00:31:20,240 --> 00:31:23,039
are you running

757
00:31:25,360 --> 00:31:29,879
looks like i need you to run the slide

758
00:31:39,840 --> 00:31:42,559
oh okay all right so the uh

759
00:31:42,559 --> 00:31:44,640
it's the arrow on the screen not the

760
00:31:44,640 --> 00:31:47,360
arrow on the keyboard okay

761
00:31:47,360 --> 00:31:49,918
so um

762
00:31:51,039 --> 00:31:53,679
can you hear me

763
00:31:54,960 --> 00:31:56,240
answering your questions on the slide

764
00:31:56,240 --> 00:31:58,000
but i realized i was in mute so you

765
00:31:58,000 --> 00:31:59,840
figured it out before i unmute it so go

766
00:31:59,840 --> 00:32:01,440
ahead you got it

767
00:32:01,440 --> 00:32:02,399
okay

768
00:32:02,399 --> 00:32:06,080
um so uh some slicing backgrounds um

769
00:32:06,080 --> 00:32:08,880
from the ietf network slices uh

770
00:32:08,880 --> 00:32:11,919
framework uh spec um

771
00:32:11,919 --> 00:32:15,279
ietf network slice is a basic logical

772
00:32:15,279 --> 00:32:17,200
network topology

773
00:32:17,200 --> 00:32:19,519
and traffic associated with

774
00:32:19,519 --> 00:32:22,960
with this slice is identified with a

775
00:32:22,960 --> 00:32:26,320
slicer identifier in the packet itself

776
00:32:26,320 --> 00:32:28,399
and then there is a

777
00:32:28,399 --> 00:32:30,799
extension to to that uh

778
00:32:30,799 --> 00:32:33,039
in this draft best bar

779
00:32:33,039 --> 00:32:36,080
uh where it introduces a concept called

780
00:32:36,080 --> 00:32:37,919
the slice aggregates

781
00:32:37,919 --> 00:32:41,200
which comprises uh one or more

782
00:32:41,200 --> 00:32:44,480
etf networks nice traffic streams now

783
00:32:44,480 --> 00:32:47,760
notice that here

784
00:32:50,159 --> 00:32:52,559
slice aggregate can be any of the

785
00:32:52,559 --> 00:32:53,600
following

786
00:32:53,600 --> 00:32:54,320
which

787
00:32:54,320 --> 00:32:56,880
including entire slice

788
00:32:56,880 --> 00:32:59,440
or a set of entire slices that share the

789
00:32:59,440 --> 00:33:00,480
same

790
00:33:00,480 --> 00:33:02,399
logical topology

791
00:33:02,399 --> 00:33:04,000
and

792
00:33:04,000 --> 00:33:04,799
or

793
00:33:04,799 --> 00:33:06,799
just some flows in a particular slice

794
00:33:06,799 --> 00:33:09,440
it's very flexible

795
00:33:09,440 --> 00:33:13,200
so and a slice aggregate will get uh

796
00:33:13,200 --> 00:33:15,120
uh um

797
00:33:15,120 --> 00:33:17,360
per harvey per hop or forwarding

798
00:33:17,360 --> 00:33:19,600
behavior specific to that slice

799
00:33:19,600 --> 00:33:20,720
aggregate

800
00:33:20,720 --> 00:33:23,360
which includes uh

801
00:33:23,360 --> 00:33:25,279
the next hop they use to reach the

802
00:33:25,279 --> 00:33:26,720
destination

803
00:33:26,720 --> 00:33:28,799
and some queuing

804
00:33:28,799 --> 00:33:30,240
treatments and

805
00:33:30,240 --> 00:33:32,799
other things

806
00:33:36,080 --> 00:33:38,960
and now some related beer background

807
00:33:38,960 --> 00:33:39,919
um

808
00:33:39,919 --> 00:33:42,159
so in beer

809
00:33:42,159 --> 00:33:44,880
you have one or more beer subdomains

810
00:33:44,880 --> 00:33:47,760
that map to a topology that's into one

811
00:33:47,760 --> 00:33:49,039
mapping

812
00:33:49,039 --> 00:33:51,840
and then each subdomain will have a

813
00:33:51,840 --> 00:33:53,039
corresponding

814
00:33:53,039 --> 00:33:54,399
birth

815
00:33:54,399 --> 00:33:55,360
beer

816
00:33:55,360 --> 00:33:57,760
or the routing the routing table useful

817
00:33:57,760 --> 00:33:59,840
for beer beer forwarding that's

818
00:33:59,840 --> 00:34:02,399
one-to-one mapping

819
00:34:02,399 --> 00:34:04,480
that

820
00:34:04,480 --> 00:34:07,200
birt is a calculated according to the

821
00:34:07,200 --> 00:34:11,040
topology that subdomain is um

822
00:34:11,040 --> 00:34:13,679
and then when you consider the b string

823
00:34:13,679 --> 00:34:15,679
lens and then when you need to use

824
00:34:15,679 --> 00:34:17,839
multiple sets because the number of

825
00:34:17,839 --> 00:34:21,520
bfers is greater than your b string lens

826
00:34:21,520 --> 00:34:24,000
then you you need to have multiple sets

827
00:34:24,000 --> 00:34:26,320
and there the uh

828
00:34:26,320 --> 00:34:29,520
each biff will correspond to that tuple

829
00:34:29,520 --> 00:34:33,119
sub domain b string lens and set id

830
00:34:33,119 --> 00:34:35,679
now each uh bift

831
00:34:35,679 --> 00:34:38,800
is uh uh identified with a uh by a

832
00:34:38,800 --> 00:34:42,079
opaque 20-bit number called beef id

833
00:34:42,079 --> 00:34:44,480
uh in a beer package which which could

834
00:34:44,480 --> 00:34:46,639
be a label or via

835
00:34:46,639 --> 00:34:49,040
just any other uh

836
00:34:49,040 --> 00:34:50,960
opaque number

837
00:34:50,960 --> 00:34:54,079
so um beer forwarding is based on biffs

838
00:34:54,079 --> 00:34:56,960
which is derived from the uh birds uh

839
00:34:56,960 --> 00:34:58,320
birt

840
00:34:58,320 --> 00:35:00,640
so you can say that the beer forwarding

841
00:35:00,640 --> 00:35:03,200
is based on the birt

842
00:35:03,200 --> 00:35:06,640
but the important thing to notice here

843
00:35:06,640 --> 00:35:07,920
is that

844
00:35:07,920 --> 00:35:10,079
for a particular subdomain

845
00:35:10,079 --> 00:35:12,400
all packets

846
00:35:12,400 --> 00:35:14,560
regardless of the flow

847
00:35:14,560 --> 00:35:17,440
all packets to a particular bfvr are

848
00:35:17,440 --> 00:35:20,800
forwarded to the same lexahab bfr or

849
00:35:20,800 --> 00:35:21,599
same

850
00:35:21,599 --> 00:35:24,640
set of ecmp necks or bfr according to

851
00:35:24,640 --> 00:35:27,598
wbrt

852
00:35:28,320 --> 00:35:30,480
so that birth would determine the next

853
00:35:30,480 --> 00:35:31,280
hop

854
00:35:31,280 --> 00:35:32,240
and then

855
00:35:32,240 --> 00:35:34,400
one after that

856
00:35:34,400 --> 00:35:36,160
you can use uh

857
00:35:36,160 --> 00:35:40,079
traffic class bits in the mpos label

858
00:35:40,079 --> 00:35:42,560
entry or using the dscp in the beer

859
00:35:42,560 --> 00:35:46,560
header to determine other behaviors

860
00:35:46,560 --> 00:35:49,200
like queuing

861
00:35:51,599 --> 00:35:54,640
so now how do we within that background

862
00:35:54,640 --> 00:35:56,640
how do we do slicing

863
00:35:56,640 --> 00:35:59,280
with beer um

864
00:35:59,280 --> 00:36:02,720
now we if a slice aggregates corresponds

865
00:36:02,720 --> 00:36:06,000
to a single slice or to a set of slices

866
00:36:06,000 --> 00:36:08,560
that share the same logical domain then

867
00:36:08,560 --> 00:36:11,200
there are two ways to do it one is that

868
00:36:11,200 --> 00:36:13,520
you map that sa

869
00:36:13,520 --> 00:36:15,760
to a subdomain

870
00:36:15,760 --> 00:36:18,240
um with that uh because the subdomain id

871
00:36:18,240 --> 00:36:20,320
is only eight bit so that means that you

872
00:36:20,320 --> 00:36:22,960
can only do 256

873
00:36:22,960 --> 00:36:24,880
essays

874
00:36:24,880 --> 00:36:27,760
now if you want to do more than that

875
00:36:27,760 --> 00:36:30,800
there is actually you can map

876
00:36:30,800 --> 00:36:32,000
sa

877
00:36:32,000 --> 00:36:34,400
slice aggregate to a

878
00:36:34,400 --> 00:36:36,560
birt directly

879
00:36:36,560 --> 00:36:37,920
now

880
00:36:37,920 --> 00:36:38,960
uh

881
00:36:38,960 --> 00:36:42,240
in the brt will map to the tuple

882
00:36:42,240 --> 00:36:44,880
subdomains uh coma sa

883
00:36:44,880 --> 00:36:46,400
instead of just mapping uh to a

884
00:36:46,400 --> 00:36:48,400
subdomain

885
00:36:48,400 --> 00:36:50,720
however when you know

886
00:36:50,720 --> 00:36:52,800
if you

887
00:36:52,800 --> 00:36:56,160
consider that birt is calculated on the

888
00:36:56,160 --> 00:36:58,079
topology

889
00:36:58,079 --> 00:36:59,839
and that sa

890
00:36:59,839 --> 00:37:03,359
is corresponding to a topology then

891
00:37:03,359 --> 00:37:07,040
and this extension of mapping a brrt to

892
00:37:07,040 --> 00:37:10,000
subdomains and comma sa is a reasonable

893
00:37:10,000 --> 00:37:13,839
extension in the vr architecture

894
00:37:13,839 --> 00:37:15,280
now when you

895
00:37:15,280 --> 00:37:16,720
when you uh

896
00:37:16,720 --> 00:37:18,720
use

897
00:37:18,720 --> 00:37:22,400
a wii u map sa to a birt directly that

898
00:37:22,400 --> 00:37:24,720
means that in theory

899
00:37:24,720 --> 00:37:26,320
you can support

900
00:37:26,320 --> 00:37:29,839
two to the the power of 20

901
00:37:29,839 --> 00:37:31,760
essays

902
00:37:31,760 --> 00:37:33,200
as long as your

903
00:37:33,200 --> 00:37:36,640
your device can hold that many entries

904
00:37:36,640 --> 00:37:38,240
so now

905
00:37:38,240 --> 00:37:41,839
mapping the uh sa directly to a

906
00:37:41,839 --> 00:37:44,560
birds instead the subdomain

907
00:37:44,560 --> 00:37:48,160
has is desired even when you

908
00:37:48,160 --> 00:37:52,480
have fewer than 256 essays because

909
00:37:52,480 --> 00:37:54,000
when you have uh

910
00:37:54,000 --> 00:37:55,920
fewer subdomains

911
00:37:55,920 --> 00:37:58,560
you you you don't need that many uh that

912
00:37:58,560 --> 00:38:00,720
much provision in related subdomains for

913
00:38:00,720 --> 00:38:03,359
example you need to you uh you do not

914
00:38:03,359 --> 00:38:05,359
need to assign bfr ids for each

915
00:38:05,359 --> 00:38:08,000
subdomain

916
00:38:09,359 --> 00:38:12,240
um to do that we need the corresponding

917
00:38:12,240 --> 00:38:15,680
igp or bgp signaling extensions

918
00:38:15,680 --> 00:38:17,599
i'm not covering that in in this

919
00:38:17,599 --> 00:38:20,480
presentation but it's

920
00:38:20,480 --> 00:38:23,599
talked about in the in the draft

921
00:38:23,599 --> 00:38:24,760
using the

922
00:38:24,760 --> 00:38:29,119
iss or ospf example

923
00:38:29,200 --> 00:38:30,839
now

924
00:38:30,839 --> 00:38:33,040
um the

925
00:38:33,040 --> 00:38:36,320
slice aggregation selector oh i i forgot

926
00:38:36,320 --> 00:38:38,880
about to mention that that that is the

927
00:38:38,880 --> 00:38:42,160
uh defined in the draft best bar

928
00:38:42,160 --> 00:38:42,960
uh

929
00:38:42,960 --> 00:38:45,839
spec um it's basically uh identifier in

930
00:38:45,839 --> 00:38:48,480
the package that identifies the

931
00:38:48,480 --> 00:38:51,440
slice aggregate now in this case

932
00:38:51,440 --> 00:38:52,640
the the

933
00:38:52,640 --> 00:38:54,640
slice selector will map to one of the

934
00:38:54,640 --> 00:38:57,520
beef ids

935
00:38:59,599 --> 00:39:03,119
now what if you need to a

936
00:39:03,119 --> 00:39:04,880
finer granularity for traffic

937
00:39:04,880 --> 00:39:07,520
differentiation where

938
00:39:07,520 --> 00:39:08,960
the sa

939
00:39:08,960 --> 00:39:09,839
is

940
00:39:09,839 --> 00:39:13,359
only for some flows in a slice

941
00:39:13,359 --> 00:39:14,640
in that case

942
00:39:14,640 --> 00:39:15,599
uh

943
00:39:15,599 --> 00:39:17,520
the slide selector slice aggregate

944
00:39:17,520 --> 00:39:20,880
selector selector won't map to the uh to

945
00:39:20,880 --> 00:39:21,920
some uh

946
00:39:21,920 --> 00:39:24,079
traffic class or dscp

947
00:39:24,079 --> 00:39:26,400
bits

948
00:39:26,560 --> 00:39:29,680
but if you that's not enough

949
00:39:29,680 --> 00:39:31,040
then um

950
00:39:31,040 --> 00:39:34,160
a beer extension header uh will need to

951
00:39:34,160 --> 00:39:38,079
be used um the proto uh code field in

952
00:39:38,079 --> 00:39:40,480
the beer header can indicate a beer

953
00:39:40,480 --> 00:39:43,119
extension header followed and one of the

954
00:39:43,119 --> 00:39:45,680
beer extension header will carry the

955
00:39:45,680 --> 00:39:47,680
slash selector

956
00:39:47,680 --> 00:39:51,440
to identify the slice aggregation

957
00:39:53,760 --> 00:39:56,480
so now a beer extension header it has

958
00:39:56,480 --> 00:39:58,240
never been uh

959
00:39:58,240 --> 00:40:00,480
discussed here in the beer working group

960
00:40:00,480 --> 00:40:02,079
itself

961
00:40:02,079 --> 00:40:04,800
that concept was

962
00:40:04,800 --> 00:40:06,960
introduced in the

963
00:40:06,960 --> 00:40:08,640
in this

964
00:40:08,640 --> 00:40:10,400
int area or function

965
00:40:10,400 --> 00:40:12,560
generic delivery functions i'll talk

966
00:40:12,560 --> 00:40:13,680
about it

967
00:40:13,680 --> 00:40:15,119
briefly here

968
00:40:15,119 --> 00:40:18,560
um it's still a developing idea uh

969
00:40:18,560 --> 00:40:20,480
for the purpose of uh

970
00:40:20,480 --> 00:40:22,400
doing genetic functions at different

971
00:40:22,400 --> 00:40:23,839
layers

972
00:40:23,839 --> 00:40:28,000
for example fragmentation reassembly and

973
00:40:28,000 --> 00:40:31,520
security features esp ah

974
00:40:31,520 --> 00:40:33,680
or in c2 oam

975
00:40:33,680 --> 00:40:34,720
and

976
00:40:34,720 --> 00:40:37,040
new use case here is a traffic

977
00:40:37,040 --> 00:40:38,640
differentiation

978
00:40:38,640 --> 00:40:40,560
we want to be able to do all these

979
00:40:40,560 --> 00:40:42,560
generic functions

980
00:40:42,560 --> 00:40:44,560
across different layers

981
00:40:44,560 --> 00:40:47,599
whether it's ipv6 or br or mpos or

982
00:40:47,599 --> 00:40:49,920
whatever

983
00:40:49,920 --> 00:40:52,960
we also try to align the mpos beer

984
00:40:52,960 --> 00:40:55,280
extension headers with ib extension

985
00:40:55,280 --> 00:40:57,839
header structure because the idea is

986
00:40:57,839 --> 00:41:00,480
that we want to uh to do this across

987
00:41:00,480 --> 00:41:02,800
different layers so it's better to to

988
00:41:02,800 --> 00:41:04,960
align those extension headers as much as

989
00:41:04,960 --> 00:41:07,119
possible

990
00:41:07,119 --> 00:41:07,839
so

991
00:41:07,839 --> 00:41:09,200
um

992
00:41:09,200 --> 00:41:10,079
the

993
00:41:10,079 --> 00:41:12,960
that draft has some uh um

994
00:41:12,960 --> 00:41:14,319
uh uh

995
00:41:14,319 --> 00:41:16,480
talks about the uh uh

996
00:41:16,480 --> 00:41:20,160
both mpos and uh beer extension header

997
00:41:20,160 --> 00:41:22,880
but that's just a container draft and

998
00:41:22,880 --> 00:41:26,160
the specific mpos extension header and

999
00:41:26,160 --> 00:41:28,160
the beer extension header will be

1000
00:41:28,160 --> 00:41:29,760
discussed in beer

1001
00:41:29,760 --> 00:41:31,839
it's just i have we have not officially

1002
00:41:31,839 --> 00:41:34,319
brought it here yet but this is uh like

1003
00:41:34,319 --> 00:41:37,920
a teaser here that's uh uh we will be

1004
00:41:37,920 --> 00:41:39,839
start talking about the

1005
00:41:39,839 --> 00:41:41,200
peer extension

1006
00:41:41,200 --> 00:41:43,598
header

1007
00:41:45,440 --> 00:41:49,119
so um yeah next steps uh we

1008
00:41:49,119 --> 00:41:52,720
we introduced this concept here and uh

1009
00:41:52,720 --> 00:41:56,240
um in the in the drafts we did provided

1010
00:41:56,240 --> 00:41:58,000
the signal name for

1011
00:41:58,000 --> 00:42:01,359
either iss or ospf and obvious uh we

1012
00:42:01,359 --> 00:42:03,119
will need to uh uh

1013
00:42:03,119 --> 00:42:04,319
uh

1014
00:42:04,319 --> 00:42:07,680
uh specify all those details for the

1015
00:42:07,680 --> 00:42:10,720
other signaling signaling protocols

1016
00:42:10,720 --> 00:42:12,240
and uh

1017
00:42:12,240 --> 00:42:16,079
more importantly uh um we we we will

1018
00:42:16,079 --> 00:42:17,760
want to start talk about beer extension

1019
00:42:17,760 --> 00:42:19,839
headers in beer working group

1020
00:42:19,839 --> 00:42:22,720
uh both for this uh purpose and for

1021
00:42:22,720 --> 00:42:24,240
other purposes

1022
00:42:24,240 --> 00:42:25,920
um

1023
00:42:25,920 --> 00:42:28,640
obviously we uh appreciate the comments

1024
00:42:28,640 --> 00:42:30,560
uh

1025
00:42:30,560 --> 00:42:33,040
on this

1026
00:42:33,440 --> 00:42:37,359
so that's the presentation

1027
00:42:41,040 --> 00:42:42,319
i'm open for

1028
00:42:42,319 --> 00:42:44,319
yeah question in the comments yeah i

1029
00:42:44,319 --> 00:42:45,599
guess

1030
00:42:45,599 --> 00:42:48,079
turles

1031
00:42:50,720 --> 00:42:53,920
so one of the cool things we can be

1032
00:42:53,920 --> 00:42:57,520
doing better um is is better

1033
00:42:57,520 --> 00:43:00,240
for example the um you know per flow

1034
00:43:00,240 --> 00:43:03,119
stateless qs which i was presenting in

1035
00:43:03,119 --> 00:43:05,359
tsn and and that uh sorry

1036
00:43:05,359 --> 00:43:07,760
that networking group um and i was

1037
00:43:07,760 --> 00:43:09,680
actually also explicitly referring to

1038
00:43:09,680 --> 00:43:11,280
the problem that we need extension

1039
00:43:11,280 --> 00:43:13,520
headers that support these these

1040
00:43:13,520 --> 00:43:15,200
mechanisms better and then it would be

1041
00:43:15,200 --> 00:43:16,720
great if we wouldn't have to reinvent

1042
00:43:16,720 --> 00:43:19,680
the wheel between mpls and ip and

1043
00:43:19,680 --> 00:43:21,920
obviously also a beer

1044
00:43:21,920 --> 00:43:23,839
for for these type of qs extension

1045
00:43:23,839 --> 00:43:26,560
headers so and beer specifically of

1046
00:43:26,560 --> 00:43:28,960
course is the um of course better even

1047
00:43:28,960 --> 00:43:32,560
with brte um the the technology to allow

1048
00:43:32,560 --> 00:43:34,720
the stateless multicast replication to

1049
00:43:34,720 --> 00:43:37,599
go along with the you know stateless qs

1050
00:43:37,599 --> 00:43:39,040
that would be driven by an extension

1051
00:43:39,040 --> 00:43:41,839
header

1052
00:43:42,000 --> 00:43:42,880
yeah

1053
00:43:42,880 --> 00:43:45,280
indeed uh that's that's the intention of

1054
00:43:45,280 --> 00:43:49,040
that generic delivery functions uh

1055
00:43:49,040 --> 00:43:51,040
drafts and the

1056
00:43:51,040 --> 00:43:53,200
better qs

1057
00:43:53,200 --> 00:43:55,040
across a treatment across different

1058
00:43:55,040 --> 00:43:58,560
layers that's one of the use cases here

1059
00:43:58,560 --> 00:44:00,160
yes and i think what we're missing out

1060
00:44:00,160 --> 00:44:01,839
and i think that's for us to go on

1061
00:44:01,839 --> 00:44:04,000
friday and see what happens with the

1062
00:44:04,000 --> 00:44:06,960
popeye hop header for ipv6 is uh

1063
00:44:06,960 --> 00:44:09,680
how we can um

1064
00:44:09,680 --> 00:44:11,680
try to see it you know how not only get

1065
00:44:11,680 --> 00:44:14,240
buy-in with the mpls design team but you

1066
00:44:14,240 --> 00:44:16,079
know come up with with a proposal that

1067
00:44:16,079 --> 00:44:18,160
also would be accepted by

1068
00:44:18,160 --> 00:44:20,560
six man six or whatever the the v6 side

1069
00:44:20,560 --> 00:44:23,560
is

1070
00:44:25,040 --> 00:44:26,560
i think you're you're you're your

1071
00:44:26,560 --> 00:44:29,599
proposal to to to the designed mpls

1072
00:44:29,599 --> 00:44:31,040
design he was

1073
00:44:31,040 --> 00:44:34,880
targeted to support that but you weren't

1074
00:44:34,880 --> 00:44:37,920
very happy to attack the uh vp6 side in

1075
00:44:37,920 --> 00:44:39,520
terms of trying to see whether they

1076
00:44:39,520 --> 00:44:42,160
actually move

1077
00:44:42,800 --> 00:44:43,920
yeah

1078
00:44:43,920 --> 00:44:44,960
yeah

1079
00:44:44,960 --> 00:44:46,079
all right

1080
00:44:46,079 --> 00:44:48,880
another mic question

1081
00:44:48,880 --> 00:44:51,920
yeah i think shay song is in the queue

1082
00:44:51,920 --> 00:44:54,160
song

1083
00:45:01,920 --> 00:45:03,119
i don't know if you're speaking we can't

1084
00:45:03,119 --> 00:45:04,400
hear you

1085
00:45:04,400 --> 00:45:06,960
she's on

1086
00:45:09,200 --> 00:45:12,160
can you check your mute

1087
00:45:16,240 --> 00:45:17,680
and

1088
00:45:17,680 --> 00:45:20,160
back again

1089
00:45:21,760 --> 00:45:25,040
ah sorry i will just go to the chat box

1090
00:45:25,040 --> 00:45:26,880
we hear you now

1091
00:45:26,880 --> 00:45:30,000
ah great uh jeffrey i remember there's a

1092
00:45:30,000 --> 00:45:32,319
document in your working group about the

1093
00:45:32,319 --> 00:45:34,319
flexagon for beer what is the

1094
00:45:34,319 --> 00:45:35,520
relationship

1095
00:45:35,520 --> 00:45:38,640
between these two documents

1096
00:45:38,640 --> 00:45:43,040
um i guess i will need to uh read that

1097
00:45:43,040 --> 00:45:45,520
document first i

1098
00:45:45,520 --> 00:45:48,240
i did not uh

1099
00:45:48,240 --> 00:45:49,520
uh

1100
00:45:49,520 --> 00:45:53,040
consider uh see the connection there but

1101
00:45:53,040 --> 00:45:55,040
now that you bring bring it up i will i

1102
00:45:55,040 --> 00:45:56,400
will go

1103
00:45:56,400 --> 00:45:58,800
read that drafts again and then see if

1104
00:45:58,800 --> 00:46:01,599
there is any connection

1105
00:46:01,599 --> 00:46:04,079
oh sure

1106
00:46:05,040 --> 00:46:07,040
human

1107
00:46:07,040 --> 00:46:08,000
yeah

1108
00:46:08,000 --> 00:46:10,160
on the same lines

1109
00:46:10,160 --> 00:46:11,040
this

1110
00:46:11,040 --> 00:46:14,000
ipa and and the flex algo stuff on on

1111
00:46:14,000 --> 00:46:16,160
the beer i thought we were trying to

1112
00:46:16,160 --> 00:46:19,440
solve the same type of uh

1113
00:46:19,440 --> 00:46:22,880
issue with them that you create

1114
00:46:22,880 --> 00:46:25,680
flex algo a slice if you will blue red

1115
00:46:25,680 --> 00:46:26,640
whatever

1116
00:46:26,640 --> 00:46:30,319
and each sub domain is being binded to

1117
00:46:30,319 --> 00:46:31,760
to that uh

1118
00:46:31,760 --> 00:46:33,119
slice

1119
00:46:33,119 --> 00:46:36,960
now honestly i haven't read this uh

1120
00:46:36,960 --> 00:46:40,720
uh this tease idf network slices like

1121
00:46:40,720 --> 00:46:42,800
i'm not even sure how they are trying to

1122
00:46:42,800 --> 00:46:44,720
identify as slice

1123
00:46:44,720 --> 00:46:47,440
like it might make sense in ipv6

1124
00:46:47,440 --> 00:46:49,839
but in the mpls world i i need to go to

1125
00:46:49,839 --> 00:46:51,839
read the draft but yeah just for the

1126
00:46:51,839 --> 00:46:53,599
working group uh

1127
00:46:53,599 --> 00:46:56,560
that ipa and and the flex algo stuff

1128
00:46:56,560 --> 00:46:58,960
that that i think that was the idea

1129
00:46:58,960 --> 00:47:01,119
behind it too

1130
00:47:01,119 --> 00:47:04,000
um the flex argon may be used

1131
00:47:04,000 --> 00:47:06,560
as a as a

1132
00:47:06,560 --> 00:47:09,440
the control plane signaling proctor for

1133
00:47:09,440 --> 00:47:11,920
uh to to cut uh

1134
00:47:11,920 --> 00:47:14,960
to define the topology i think right now

1135
00:47:14,960 --> 00:47:17,599
this draft mainly talks about so how

1136
00:47:17,599 --> 00:47:19,520
uh in the data plane

1137
00:47:19,520 --> 00:47:21,440
um

1138
00:47:21,440 --> 00:47:25,280
we can i would we can have slices

1139
00:47:25,280 --> 00:47:28,640
um but i i will yeah i will go go back

1140
00:47:28,640 --> 00:47:29,839
to that

1141
00:47:29,839 --> 00:47:32,240
uh flex algo draft and then

1142
00:47:32,240 --> 00:47:33,920
and ips the

1143
00:47:33,920 --> 00:47:38,440
bar stuff and to see the connections

1144
00:47:39,359 --> 00:47:40,800
all right sandy

1145
00:47:40,800 --> 00:47:43,280
good question

1146
00:47:47,839 --> 00:47:49,280
checking me

1147
00:47:49,280 --> 00:47:52,640
there we go we're here yep go ahead

1148
00:47:52,640 --> 00:47:55,920
okay i think it's an interesting topic

1149
00:47:55,920 --> 00:47:59,599
and i read the flex ego a beer draft and

1150
00:47:59,599 --> 00:48:04,000
this draft uh both and i think that the

1151
00:48:04,000 --> 00:48:07,119
flash eagle is aligned with the

1152
00:48:07,119 --> 00:48:12,079
subdomain so one flex eagle is

1153
00:48:12,319 --> 00:48:14,960
is equal to one supplement and this

1154
00:48:14,960 --> 00:48:17,119
structure is

1155
00:48:17,119 --> 00:48:19,760
is taking effect in the

1156
00:48:19,760 --> 00:48:21,680
subdomain so

1157
00:48:21,680 --> 00:48:23,440
i don't think it's

1158
00:48:23,440 --> 00:48:26,960
the tool is conflict if i understand

1159
00:48:26,960 --> 00:48:32,599
right oh that's my opinion thank you

1160
00:48:34,160 --> 00:48:36,879
any more questions

1161
00:48:39,119 --> 00:48:41,760
with jeffrey

1162
00:48:41,760 --> 00:48:44,559
okay thank you

1163
00:48:44,880 --> 00:48:46,079
okay

1164
00:48:46,079 --> 00:48:48,079
next up is torless you got the next two

1165
00:48:48,079 --> 00:48:50,079
prizos torrelis

1166
00:48:50,079 --> 00:48:51,440
so uh

1167
00:48:51,440 --> 00:48:53,040
i'll hopefully be able to grab those as

1168
00:48:53,040 --> 00:48:55,279
well

1169
00:49:00,839 --> 00:49:04,079
doraleous there we go

1170
00:49:04,079 --> 00:49:06,559
granting

1171
00:49:07,839 --> 00:49:10,400
okay

1172
00:49:11,280 --> 00:49:12,800
right so

1173
00:49:12,800 --> 00:49:15,440
reclaiming time for the working group so

1174
00:49:15,440 --> 00:49:18,400
there is no uh 11 unfortunately so we

1175
00:49:18,400 --> 00:49:20,720
got the complete isg review

1176
00:49:20,720 --> 00:49:23,280
at the end of august um one discussed

1177
00:49:23,280 --> 00:49:25,359
which is easily cleared there was a typo

1178
00:49:25,359 --> 00:49:26,800
into the field of code thanks uh

1179
00:49:26,800 --> 00:49:28,000
benjamin

1180
00:49:28,000 --> 00:49:30,400
and a long list of good comments from

1181
00:49:30,400 --> 00:49:32,880
eight reviewers and then unfortunately

1182
00:49:32,880 --> 00:49:35,119
um an unexpected busy september october

1183
00:49:35,119 --> 00:49:37,680
with conflicts like me being on nomcom

1184
00:49:37,680 --> 00:49:40,559
and uh you know see next slot um so i'm

1185
00:49:40,559 --> 00:49:42,720
i'm working through

1186
00:49:42,720 --> 00:49:44,480
the uh

1187
00:49:44,480 --> 00:49:46,960
11 as we're speaking and hope to have

1188
00:49:46,960 --> 00:49:50,400
them out soon um i i really want to take

1189
00:49:50,400 --> 00:49:52,559
the opportunity for the comments to you

1190
00:49:52,559 --> 00:49:54,880
know also improve the document there was

1191
00:49:54,880 --> 00:49:57,200
for example from benjamin this um

1192
00:49:57,200 --> 00:49:59,280
thing that he was always confused about

1193
00:49:59,280 --> 00:50:01,040
when we're talking about beer what was

1194
00:50:01,040 --> 00:50:02,960
meant so uh in terms of is it the

1195
00:50:02,960 --> 00:50:05,440
overall architecture that is inclusive

1196
00:50:05,440 --> 00:50:08,240
of brte or just the you know non-beer

1197
00:50:08,240 --> 00:50:11,680
tea as he proposed me to prefix it so

1198
00:50:11,680 --> 00:50:14,000
that that that reminded me of writing

1199
00:50:14,000 --> 00:50:17,599
text where i had to write ip unicast to

1200
00:50:17,599 --> 00:50:20,079
make it easier clear what i meant when

1201
00:50:20,079 --> 00:50:23,119
saying ip as opposed to ip multicast so

1202
00:50:23,119 --> 00:50:25,599
you know non-te beer yeah so that that

1203
00:50:25,599 --> 00:50:27,599
was the only kind of uh

1204
00:50:27,599 --> 00:50:30,079
thing i i wanted to mention from that um

1205
00:50:30,079 --> 00:50:31,599
all right so

1206
00:50:31,599 --> 00:50:33,680
um but yeah so it should

1207
00:50:33,680 --> 00:50:35,839
should easily proceed because it's all

1208
00:50:35,839 --> 00:50:38,960
comments and and the discuss is simple

1209
00:50:38,960 --> 00:50:41,440
okay next presentation stop sharing

1210
00:50:41,440 --> 00:50:45,200
slide and give me one more

1211
00:50:47,359 --> 00:50:49,119
okay

1212
00:50:49,119 --> 00:50:51,520
right

1213
00:50:52,079 --> 00:50:53,599
so right so

1214
00:50:53,599 --> 00:50:56,559
this is a mouthful kind of whitewriter

1215
00:50:56,559 --> 00:50:58,000
document if you can write everything

1216
00:50:58,000 --> 00:50:59,280
into the title

1217
00:50:59,280 --> 00:51:01,520
um carry a great minimalist multicast

1218
00:51:01,520 --> 00:51:04,000
using beer with recursive bitstring

1219
00:51:04,000 --> 00:51:06,960
structure addresses and this actually uh

1220
00:51:06,960 --> 00:51:10,160
based uh on the work um done by a team

1221
00:51:10,160 --> 00:51:13,359
of colleagues in uh beijing um and

1222
00:51:13,359 --> 00:51:15,119
you'll see immediately why they wanted

1223
00:51:15,119 --> 00:51:17,680
me to uh write the draft up for this

1224
00:51:17,680 --> 00:51:20,319
because it's really kind of brt next

1225
00:51:20,319 --> 00:51:22,640
generation and which of course leaves

1226
00:51:22,640 --> 00:51:24,640
the question you know what the heck is

1227
00:51:24,640 --> 00:51:26,240
wrong with brte

1228
00:51:26,240 --> 00:51:27,520
um and

1229
00:51:27,520 --> 00:51:29,280
beerte is in my opinion the best

1230
00:51:29,280 --> 00:51:32,000
forwarding solution for the target

1231
00:51:32,000 --> 00:51:34,559
constraints and the target constraints

1232
00:51:34,559 --> 00:51:36,640
where um that we obviously wanted to

1233
00:51:36,640 --> 00:51:39,760
have steering for a beer

1234
00:51:39,760 --> 00:51:41,839
and we didn't want to change the

1235
00:51:41,839 --> 00:51:44,079
forwarding plane at all so we ended up

1236
00:51:44,079 --> 00:51:47,119
for some particular options in beard te

1237
00:51:47,119 --> 00:51:47,839
to

1238
00:51:47,839 --> 00:51:51,280
have a very small

1239
00:51:51,280 --> 00:51:53,680
changes like you know the do not uh

1240
00:51:53,680 --> 00:51:57,119
clear bit or so but in the end uh it is

1241
00:51:57,119 --> 00:51:59,280
pretty much like the beer forwarding

1242
00:51:59,280 --> 00:52:01,920
plane um and and that was the goal and

1243
00:52:01,920 --> 00:52:03,839
that unfortunately as we've seen working

1244
00:52:03,839 --> 00:52:05,680
in the working group through um you know

1245
00:52:05,680 --> 00:52:07,920
all the comments and concerns about

1246
00:52:07,920 --> 00:52:11,440
scalability does uh lead us with a lot

1247
00:52:11,440 --> 00:52:14,960
of complexities in brt um so

1248
00:52:14,960 --> 00:52:16,000
um

1249
00:52:16,000 --> 00:52:18,160
the the fundamental reason is that we

1250
00:52:18,160 --> 00:52:20,720
have flat bit strings um uh in the

1251
00:52:20,720 --> 00:52:23,280
packets uh which can address only let's

1252
00:52:23,280 --> 00:52:27,359
say a total of 256 bits um and then part

1253
00:52:27,359 --> 00:52:29,520
of that is for um

1254
00:52:29,520 --> 00:52:32,480
you know bfers and part of that are for

1255
00:52:32,480 --> 00:52:34,800
you know adjacencies like links in the

1256
00:52:34,800 --> 00:52:37,920
topology uh to get across and and and

1257
00:52:37,920 --> 00:52:40,000
splitting up the topology so that you

1258
00:52:40,000 --> 00:52:42,640
fit the bits into this is a problem in

1259
00:52:42,640 --> 00:52:44,079
brte

1260
00:52:44,079 --> 00:52:46,559
makes a controller complex

1261
00:52:46,559 --> 00:52:49,280
makes it really important to save the

1262
00:52:49,280 --> 00:52:51,280
number of bits that you are doing

1263
00:52:51,280 --> 00:52:54,240
same issue exists to to some extent in

1264
00:52:54,240 --> 00:52:57,280
beer but less severe um so especially

1265
00:52:57,280 --> 00:53:00,160
for brte that that bit string is really

1266
00:53:00,160 --> 00:53:02,319
um something that makes the controller

1267
00:53:02,319 --> 00:53:04,079
plane difficult with all these options

1268
00:53:04,079 --> 00:53:06,800
that we have like you know uh ring bits

1269
00:53:06,800 --> 00:53:08,800
and point-to-point bits kind of you

1270
00:53:08,800 --> 00:53:10,079
don't see it in the forwarding plane

1271
00:53:10,079 --> 00:53:12,079
because that's simple but the controller

1272
00:53:12,079 --> 00:53:15,200
plane is is difficult

1273
00:53:15,200 --> 00:53:17,599
and then also you may end up requiring a

1274
00:53:17,599 --> 00:53:19,440
larger number of copies

1275
00:53:19,440 --> 00:53:20,880
because you need to split up the

1276
00:53:20,880 --> 00:53:23,599
topology cross more bit strings than you

1277
00:53:23,599 --> 00:53:25,119
actually would need

1278
00:53:25,119 --> 00:53:26,640
because you can't fit them all in a

1279
00:53:26,640 --> 00:53:28,800
single bit string so ultimately what we

1280
00:53:28,800 --> 00:53:31,280
have we have operational you know

1281
00:53:31,280 --> 00:53:32,960
both for the humans and the controller

1282
00:53:32,960 --> 00:53:35,359
software complexity less traffic

1283
00:53:35,359 --> 00:53:37,359
efficiency for forwarding plane

1284
00:53:37,359 --> 00:53:39,280
simplicity

1285
00:53:39,280 --> 00:53:40,079
so

1286
00:53:40,079 --> 00:53:42,400
which brings us to back to what what is

1287
00:53:42,400 --> 00:53:43,760
actually you know the vision that we

1288
00:53:43,760 --> 00:53:46,480
wanted to get with beer in my opinion um

1289
00:53:46,480 --> 00:53:49,200
and so this is what you know we gave you

1290
00:53:49,200 --> 00:53:50,319
know the

1291
00:53:50,319 --> 00:53:53,680
visionary uh name uh for the service

1292
00:53:53,680 --> 00:53:55,520
providers for the carriers right we want

1293
00:53:55,520 --> 00:53:57,839
to have really a minimal multicast

1294
00:53:57,839 --> 00:53:59,599
solution um

1295
00:53:59,599 --> 00:54:01,599
that really becomes simpler so

1296
00:54:01,599 --> 00:54:04,240
controller does help to simplify a lot

1297
00:54:04,240 --> 00:54:07,200
of things um and when we for example

1298
00:54:07,200 --> 00:54:09,760
also manage to eliminate the duplication

1299
00:54:09,760 --> 00:54:12,319
between beer and the flow overlay by

1300
00:54:12,319 --> 00:54:14,800
extending beer or the control plane all

1301
00:54:14,800 --> 00:54:17,200
the way into the centers and receivers

1302
00:54:17,200 --> 00:54:19,440
so that they don't have to bother about

1303
00:54:19,440 --> 00:54:21,680
ip multicast at all and the all the

1304
00:54:21,680 --> 00:54:24,000
overlay signaling they were fairly fine

1305
00:54:24,000 --> 00:54:25,920
on the controller plane i think we can

1306
00:54:25,920 --> 00:54:27,280
also afford

1307
00:54:27,280 --> 00:54:28,960
some more intelligent forwarding in the

1308
00:54:28,960 --> 00:54:31,280
forwarding plane and this is basically

1309
00:54:31,280 --> 00:54:34,000
what this draft is primarily about

1310
00:54:34,000 --> 00:54:37,200
because this is just the vision part um

1311
00:54:37,200 --> 00:54:39,760
and that is effectively um why the heck

1312
00:54:39,760 --> 00:54:42,559
can't we basically make uh the bit

1313
00:54:42,559 --> 00:54:46,240
string a structured uh

1314
00:54:46,720 --> 00:54:49,520
a data structure in which we effectively

1315
00:54:49,520 --> 00:54:51,440
replicate the distribution tree that we

1316
00:54:51,440 --> 00:54:53,520
want the packet to have right so if you

1317
00:54:53,520 --> 00:54:56,079
want to pack it uh to to be replicated

1318
00:54:56,079 --> 00:54:58,720
from r to one two three and to n and

1319
00:54:58,720 --> 00:55:01,119
then from one to you know

1320
00:55:01,119 --> 00:55:04,559
again some some number of bfrs well but

1321
00:55:04,559 --> 00:55:06,960
we can uh basically encode that in a

1322
00:55:06,960 --> 00:55:09,359
structure so and and that's shown here

1323
00:55:09,359 --> 00:55:11,760
you have a fixed field in the beginning

1324
00:55:11,760 --> 00:55:13,839
you have the bit string for the local

1325
00:55:13,839 --> 00:55:16,079
node that is processing the packet and

1326
00:55:16,079 --> 00:55:18,480
then you have a sequence of you know

1327
00:55:18,480 --> 00:55:21,359
what we call recursive units um

1328
00:55:21,359 --> 00:55:24,480
one each for um each bfr that you are

1329
00:55:24,480 --> 00:55:26,799
sending the packet to and of course uh

1330
00:55:26,799 --> 00:55:30,000
once that packet uh um is forwarded to

1331
00:55:30,000 --> 00:55:32,319
one of those bfrs

1332
00:55:32,319 --> 00:55:34,319
you are going to rewrite the address

1333
00:55:34,319 --> 00:55:36,079
you're pretty much extracting the

1334
00:55:36,079 --> 00:55:38,559
recursive unit for that neighbor from

1335
00:55:38,559 --> 00:55:40,480
the address and make that become the new

1336
00:55:40,480 --> 00:55:41,920
address and that's what you're sending

1337
00:55:41,920 --> 00:55:43,920
the neighbor so what the neighbor then

1338
00:55:43,920 --> 00:55:46,640
gets is effectively its recursive unit

1339
00:55:46,640 --> 00:55:48,880
which again has the bit string of where

1340
00:55:48,880 --> 00:55:50,880
it should replicate the packets to and

1341
00:55:50,880 --> 00:55:54,400
then um the um you know recursive units

1342
00:55:54,400 --> 00:55:57,200
for the you know further hops and so yes

1343
00:55:57,200 --> 00:55:59,599
there is some overhead for um you know

1344
00:55:59,599 --> 00:56:02,480
the structuring here right we basically

1345
00:56:02,480 --> 00:56:05,200
need to include some type of addressing

1346
00:56:05,200 --> 00:56:07,040
field that tells us how long the

1347
00:56:07,040 --> 00:56:10,319
recursive units are but that is pretty

1348
00:56:10,319 --> 00:56:12,960
much uh the only structural overhead the

1349
00:56:12,960 --> 00:56:15,280
rest is just bit strings so instead of

1350
00:56:15,280 --> 00:56:16,799
having a humongous bit string to

1351
00:56:16,799 --> 00:56:19,280
represent the whole topology we're only

1352
00:56:19,280 --> 00:56:22,000
uh requiring to include the bit strings

1353
00:56:22,000 --> 00:56:23,359
for the notes

1354
00:56:23,359 --> 00:56:26,559
that the packet actually is traversing

1355
00:56:26,559 --> 00:56:28,799
and so here in more detail to walk

1356
00:56:28,799 --> 00:56:31,520
through and there is one bug in the

1357
00:56:31,520 --> 00:56:33,839
picture which i've i fixed in the draft

1358
00:56:33,839 --> 00:56:35,440
so the draft has exactly the same

1359
00:56:35,440 --> 00:56:37,599
example um

1360
00:56:37,599 --> 00:56:40,799
and that exactly shows that uh in in all

1361
00:56:40,799 --> 00:56:43,040
the glorious detail so when the packet

1362
00:56:43,040 --> 00:56:45,520
ultimately gets to a client of course

1363
00:56:45,520 --> 00:56:47,680
for the clients you don't need another

1364
00:56:47,680 --> 00:56:50,319
recursive unit um so

1365
00:56:50,319 --> 00:56:54,160
there is a new flag then um in the bift

1366
00:56:54,160 --> 00:56:56,319
which basically says whether or not a

1367
00:56:56,319 --> 00:56:58,480
particular bit is to a bfr

1368
00:56:58,480 --> 00:57:01,440
or to you know punt up and center to

1369
00:57:01,440 --> 00:57:02,880
receiver

1370
00:57:02,880 --> 00:57:03,920
and

1371
00:57:03,920 --> 00:57:05,119
that is

1372
00:57:05,119 --> 00:57:07,200
then ultimately the only complexity to

1373
00:57:07,200 --> 00:57:09,839
work through so the draft has

1374
00:57:09,839 --> 00:57:10,960
of course

1375
00:57:10,960 --> 00:57:12,559
oh wait a second this is not the slide

1376
00:57:12,559 --> 00:57:14,799
yet um so let me summarize here on the

1377
00:57:14,799 --> 00:57:16,640
slide first the simplification

1378
00:57:16,640 --> 00:57:17,920
performance enhancement that we're

1379
00:57:17,920 --> 00:57:20,480
getting so obviously there we don't need

1380
00:57:20,480 --> 00:57:22,480
loop prevention through the clearing of

1381
00:57:22,480 --> 00:57:26,640
bits because by just extracting um the

1382
00:57:26,640 --> 00:57:28,960
recursive unit for the next next stop

1383
00:57:28,960 --> 00:57:30,160
we're kind of

1384
00:57:30,160 --> 00:57:32,400
achieving the same goal so that is that

1385
00:57:32,400 --> 00:57:34,720
is for free the loop prevention

1386
00:57:34,720 --> 00:57:36,880
we don't need to split up the topology

1387
00:57:36,880 --> 00:57:39,599
into different si or multiple sd bit

1388
00:57:39,599 --> 00:57:41,040
strings so

1389
00:57:41,040 --> 00:57:42,799
the amount of state that we need to

1390
00:57:42,799 --> 00:57:45,359
maintain on every bfr is minimal it's

1391
00:57:45,359 --> 00:57:48,720
just you know um one bift sized exactly

1392
00:57:48,720 --> 00:57:50,640
to the number of bits representing the

1393
00:57:50,640 --> 00:57:51,920
number of

1394
00:57:51,920 --> 00:57:54,240
you know links to neighbors or you know

1395
00:57:54,240 --> 00:57:56,240
if we want to have overlay of course uh

1396
00:57:56,240 --> 00:57:59,920
tunnels to remote neighbors um

1397
00:57:59,920 --> 00:58:02,000
there is no need for all the complicated

1398
00:58:02,000 --> 00:58:04,960
you know bit semantics to optimize and

1399
00:58:04,960 --> 00:58:07,119
limit the number of bits we have across

1400
00:58:07,119 --> 00:58:09,359
the whole topology and so this of course

1401
00:58:09,359 --> 00:58:11,440
is especially great for sparse

1402
00:58:11,440 --> 00:58:13,920
distributions meaning sparse multicast

1403
00:58:13,920 --> 00:58:15,440
trees and i think we know that most

1404
00:58:15,440 --> 00:58:17,760
multicast trees are sparse the network

1405
00:58:17,760 --> 00:58:19,599
is large but the number of receivers we

1406
00:58:19,599 --> 00:58:22,319
need they may be anywhere which is why

1407
00:58:22,319 --> 00:58:24,559
you know we have problems with the brte

1408
00:58:24,559 --> 00:58:25,920
but uh

1409
00:58:25,920 --> 00:58:28,000
they will be small so they'll very much

1410
00:58:28,000 --> 00:58:30,880
likely fit into a single uh you know

1411
00:58:30,880 --> 00:58:33,760
packet header of maybe up to 512 bits

1412
00:58:33,760 --> 00:58:35,760
and then if really the total number of

1413
00:58:35,760 --> 00:58:38,079
receivers gets larger then the

1414
00:58:38,079 --> 00:58:40,319
controller can very easily split up the

1415
00:58:40,319 --> 00:58:43,599
whole distribution tree into any subset

1416
00:58:43,599 --> 00:58:46,079
of receivers and build the distribution

1417
00:58:46,079 --> 00:58:48,880
tree for that because you know the there

1418
00:58:48,880 --> 00:58:51,359
is no further cut up of the uh

1419
00:58:51,359 --> 00:58:54,160
um bit into different silsds so those

1420
00:58:54,160 --> 00:58:55,760
are all the simplifications for the

1421
00:58:55,760 --> 00:58:57,280
controller plane that we get with this

1422
00:58:57,280 --> 00:58:59,599
so all the complexities that that we

1423
00:58:59,599 --> 00:59:01,520
hated when working through brte are gone

1424
00:59:01,520 --> 00:59:03,760
with that and now we have the the cost

1425
00:59:03,760 --> 00:59:05,280
of business of course in the forwarding

1426
00:59:05,280 --> 00:59:06,079
plane

1427
00:59:06,079 --> 00:59:09,119
um and so this is the pseudo code and um

1428
00:59:09,119 --> 00:59:10,799
so there is a little bit of you know

1429
00:59:10,799 --> 00:59:12,880
calculation in the beginning for the

1430
00:59:12,880 --> 00:59:14,400
packet but when you look on the right

1431
00:59:14,400 --> 00:59:16,960
hand side the replication then of course

1432
00:59:16,960 --> 00:59:17,839
the

1433
00:59:17,839 --> 00:59:20,559
only big complexity is

1434
00:59:20,559 --> 00:59:22,720
once you have calculated the offset and

1435
00:59:22,720 --> 00:59:24,720
length of the recursive unit for each

1436
00:59:24,720 --> 00:59:27,040
packet copy you need to do the rewrite

1437
00:59:27,040 --> 00:59:29,200
of the packet header

1438
00:59:29,200 --> 00:59:31,760
and extract that address field and make

1439
00:59:31,760 --> 00:59:34,000
that become the new destination address

1440
00:59:34,000 --> 00:59:36,960
field so um that that is exactly you

1441
00:59:36,960 --> 00:59:38,319
know i think four

1442
00:59:38,319 --> 00:59:40,000
four forwarding planes the interesting

1443
00:59:40,000 --> 00:59:42,640
question um you know is that uh already

1444
00:59:42,640 --> 00:59:45,200
now or at which point in time um and

1445
00:59:45,200 --> 00:59:46,640
what type of

1446
00:59:46,640 --> 00:59:49,119
you know routers would that be

1447
00:59:49,119 --> 00:59:50,960
sufficiently easily feasible to be

1448
00:59:50,960 --> 00:59:53,520
productizable

1449
00:59:53,520 --> 00:59:55,680
um other thoughts um so this is of

1450
00:59:55,680 --> 00:59:57,440
course a natural variable length address

1451
00:59:57,440 --> 01:00:00,640
structure for versus the um

1452
01:00:00,640 --> 01:00:03,359
naturally fixed size and beer and brte

1453
01:00:03,359 --> 01:00:05,680
but um

1454
01:00:05,680 --> 01:00:06,080
sorry

1455
01:00:06,080 --> 01:00:07,440
[Music]

1456
01:00:07,440 --> 01:00:08,559
shut up

1457
01:00:08,559 --> 01:00:10,400
okay um

1458
01:00:10,400 --> 01:00:12,640
so

1459
01:00:12,640 --> 01:00:14,559
yeah so i was talking about the the

1460
01:00:14,559 --> 01:00:16,559
forwarding complexity so i think one of

1461
01:00:16,559 --> 01:00:17,920
the interesting things to do and that

1462
01:00:17,920 --> 01:00:19,599
would of course be great for for for

1463
01:00:19,599 --> 01:00:21,920
researchers to also jump into that to do

1464
01:00:21,920 --> 01:00:24,400
really the uh um you know uh

1465
01:00:24,400 --> 01:00:27,280
simulation comparison of you know the

1466
01:00:27,280 --> 01:00:29,119
the number of bit strings we need the

1467
01:00:29,119 --> 01:00:32,160
size of bit strings and so on between um

1468
01:00:32,160 --> 01:00:36,240
beer brt and and and this rbs solution

1469
01:00:36,240 --> 01:00:38,400
um the packet encoding packet header of

1470
01:00:38,400 --> 01:00:40,160
course not purpose of this draft like

1471
01:00:40,160 --> 01:00:42,559
all our documents it could of course use

1472
01:00:42,559 --> 01:00:44,640
rfc 8296

1473
01:00:44,640 --> 01:00:47,520
and be considered yet another vift mode

1474
01:00:47,520 --> 01:00:50,799
right after we brte also includes the

1475
01:00:50,799 --> 01:00:54,160
notion that the ifts would need to be

1476
01:00:54,160 --> 01:00:56,400
you know set to a mode for brte

1477
01:00:56,400 --> 01:00:58,319
forwarding so it could be brbs or

1478
01:00:58,319 --> 01:01:00,240
whatever we want to call it uh but of

1479
01:01:00,240 --> 01:01:03,359
course that would be um wasting um

1480
01:01:03,359 --> 01:01:06,160
bandwidth because we would then use the

1481
01:01:06,160 --> 01:01:09,040
maximum bit string size um so i think

1482
01:01:09,040 --> 01:01:10,640
that's an interesting question but of

1483
01:01:10,640 --> 01:01:13,520
course using 82 96 would be the fastest

1484
01:01:13,520 --> 01:01:18,079
way um to to adopt something like this

1485
01:01:18,079 --> 01:01:19,920
and i think that's it thank you very

1486
01:01:19,920 --> 01:01:22,920
much

1487
01:01:31,119 --> 01:01:33,920
all right we're going up

1488
01:01:34,559 --> 01:01:36,160
jeffrey

1489
01:01:36,160 --> 01:01:37,599
yes so

1490
01:01:37,599 --> 01:01:41,599
let's say you have to reach 2000 uh edge

1491
01:01:41,599 --> 01:01:42,799
routers

1492
01:01:42,799 --> 01:01:46,000
how many bits would you need

1493
01:01:46,000 --> 01:01:48,000
right and i think the answer of course

1494
01:01:48,000 --> 01:01:51,440
so first of all um we we haven't um you

1495
01:01:51,440 --> 01:01:53,920
know decided on what the unit of

1496
01:01:53,920 --> 01:01:56,480
allocations in in the bid strings are so

1497
01:01:56,480 --> 01:01:59,280
there's a reference encoding option um

1498
01:01:59,280 --> 01:02:01,920
and of course depending on the packet

1499
01:02:01,920 --> 01:02:03,680
header that we're choosing we would we

1500
01:02:03,680 --> 01:02:06,160
would specify that um so here it's

1501
01:02:06,160 --> 01:02:09,760
assuming for um you know the ift's to be

1502
01:02:09,760 --> 01:02:12,160
every bit long so units of bits the

1503
01:02:12,160 --> 01:02:16,079
whole forwarding engine units of bits um

1504
01:02:16,079 --> 01:02:17,920
that would allow you to calculate that

1505
01:02:17,920 --> 01:02:20,480
and then the answer still depends on are

1506
01:02:20,480 --> 01:02:22,880
you going to go across 20 hops to the

1507
01:02:22,880 --> 01:02:25,280
receivers or through 10 hops

1508
01:02:25,280 --> 01:02:28,160
right so i would i would say that maybe

1509
01:02:28,160 --> 01:02:32,079
roughly roughly calculated if you um

1510
01:02:32,079 --> 01:02:35,119
have a 2000 receivers um

1511
01:02:35,119 --> 01:02:38,319
you could end up with as little as maybe

1512
01:02:38,319 --> 01:02:40,880
double the the number of total bits 4

1513
01:02:40,880 --> 01:02:43,039
000 bits and then you break it up into

1514
01:02:43,039 --> 01:02:45,200
the

1515
01:02:45,359 --> 01:02:47,520
number of packets that you need to make

1516
01:02:47,520 --> 01:02:50,079
each of the subtrees be sufficiently

1517
01:02:50,079 --> 01:02:52,960
small for whatever your maximum size is

1518
01:02:52,960 --> 01:02:54,880
right but exactly that that goes to the

1519
01:02:54,880 --> 01:02:56,880
you know simulation of you know give me

1520
01:02:56,880 --> 01:02:58,720
different topologies

1521
01:02:58,720 --> 01:03:01,039
and then let's calculate how many bits

1522
01:03:01,039 --> 01:03:04,400
of addressing we need for them

1523
01:03:04,400 --> 01:03:06,720
okay so basically at least the the the

1524
01:03:06,720 --> 01:03:09,359
number of bits uh number of uh uh

1525
01:03:09,359 --> 01:03:11,039
receivers

1526
01:03:11,039 --> 01:03:12,880
and then depending on how

1527
01:03:12,880 --> 01:03:14,240
how much

1528
01:03:14,240 --> 01:03:16,559
explicit control you need you need to

1529
01:03:16,559 --> 01:03:18,720
add more bits okay thank you yeah you

1530
01:03:18,720 --> 01:03:20,240
need more more bits but you don't have

1531
01:03:20,240 --> 01:03:23,200
the the problem in in brte that

1532
01:03:23,200 --> 01:03:25,760
you need to do a lot of design up front

1533
01:03:25,760 --> 01:03:27,570
right you simply you know um

1534
01:03:27,570 --> 01:03:28,720
[Music]

1535
01:03:28,720 --> 01:03:32,000
on every bfr you you simply have a bift

1536
01:03:32,000 --> 01:03:33,839
you have 100 interfaces you have 100

1537
01:03:33,839 --> 01:03:35,520
bits you have 10 interface you have 10

1538
01:03:35,520 --> 01:03:37,200
bits so

1539
01:03:37,200 --> 01:03:39,839
that is plain and simple and then the

1540
01:03:39,839 --> 01:03:42,240
controller ultimately just needs to

1541
01:03:42,240 --> 01:03:44,240
figure out into how many packets to

1542
01:03:44,240 --> 01:03:47,359
split it up um to send it right so there

1543
01:03:47,359 --> 01:03:49,039
is there is never the problem of getting

1544
01:03:49,039 --> 01:03:51,599
through any topology the larger you know

1545
01:03:51,599 --> 01:03:53,839
the the number of steering bits are the

1546
01:03:53,839 --> 01:03:55,440
the more overhead they do but that's the

1547
01:03:55,440 --> 01:03:57,280
cost of business of doing traffic

1548
01:03:57,280 --> 01:03:58,960
engineering right i mean the same thing

1549
01:03:58,960 --> 01:04:02,240
is true for segment routing of course

1550
01:04:02,240 --> 01:04:03,760
yep

1551
01:04:03,760 --> 01:04:05,599
thanks

1552
01:04:05,599 --> 01:04:07,119
all right tng

1553
01:04:07,119 --> 01:04:09,760
oh yes uh hey

1554
01:04:09,760 --> 01:04:13,359
toddlers i saw the similar session

1555
01:04:13,359 --> 01:04:14,559
has been

1556
01:04:14,559 --> 01:04:17,280
uh presented in another working group i

1557
01:04:17,280 --> 01:04:20,160
think the internet area working group

1558
01:04:20,160 --> 01:04:22,559
so this regarding some logistics things

1559
01:04:22,559 --> 01:04:24,559
did you get any feedback from that group

1560
01:04:24,559 --> 01:04:26,319
regarding your session yeah i'm trying

1561
01:04:26,319 --> 01:04:28,400
to remember this week was so busy and i

1562
01:04:28,400 --> 01:04:29,200
would

1563
01:04:29,200 --> 01:04:31,280
say i have to go back to the notes to

1564
01:04:31,280 --> 01:04:32,880
remember there was some feedback there

1565
01:04:32,880 --> 01:04:35,200
were some questions but

1566
01:04:35,200 --> 01:04:37,280
unfortunately yeah i forgot

1567
01:04:37,280 --> 01:04:38,960
where was the presenter but the typical

1568
01:04:38,960 --> 01:04:40,720
point was in the ind area there is a lot

1569
01:04:40,720 --> 01:04:42,880
of discussion about

1570
01:04:42,880 --> 01:04:44,799
variable length addressing and what

1571
01:04:44,799 --> 01:04:46,480
their benefit is

1572
01:04:46,480 --> 01:04:48,400
um and everybody is only talking about

1573
01:04:48,400 --> 01:04:51,359
unicast and so i was specifically going

1574
01:04:51,359 --> 01:04:53,599
there to say that we actually have the

1575
01:04:53,599 --> 01:04:56,160
best track record in the ietf of what we

1576
01:04:56,160 --> 01:04:58,000
can do more and better with addressing

1577
01:04:58,000 --> 01:04:59,440
even when it was fixed things right

1578
01:04:59,440 --> 01:05:01,359
remember all the things we did

1579
01:05:01,359 --> 01:05:03,839
in ipv6 with the addressing and you know

1580
01:05:03,839 --> 01:05:05,599
uh beer of course being cool new

1581
01:05:05,599 --> 01:05:07,760
semantic and this one um being a

1582
01:05:07,760 --> 01:05:10,720
proposal you know that expands uh beer

1583
01:05:10,720 --> 01:05:13,280
in a way that we can get more out of

1584
01:05:13,280 --> 01:05:15,680
variable addresses that was the purpose

1585
01:05:15,680 --> 01:05:18,160
of presenting to india

1586
01:05:18,160 --> 01:05:19,440
okay

1587
01:05:19,440 --> 01:05:20,839
thank you

1588
01:05:20,839 --> 01:05:24,319
thanks all right sandy

1589
01:05:26,960 --> 01:05:28,880
mute

1590
01:05:28,880 --> 01:05:29,839
hello

1591
01:05:29,839 --> 01:05:32,000
there we go here we are go ahead

1592
01:05:32,000 --> 01:05:33,520
i'd like to know

1593
01:05:33,520 --> 01:05:35,200
if the beats

1594
01:05:35,200 --> 01:05:37,039
has been worked in the bead string will

1595
01:05:37,039 --> 01:05:39,440
be cut

1596
01:05:39,920 --> 01:05:41,440
the question is

1597
01:05:41,440 --> 01:05:43,920
if yeah so so basically on every hop

1598
01:05:43,920 --> 01:05:46,000
you're extracting a recursive unit right

1599
01:05:46,000 --> 01:05:48,960
so every bit string in the structure is

1600
01:05:48,960 --> 01:05:51,440
only examined by one node and once it's

1601
01:05:51,440 --> 01:05:53,599
examined and acted upon it's not seen in

1602
01:05:53,599 --> 01:05:55,680
the address anymore because you're you

1603
01:05:55,680 --> 01:05:57,680
know you're uh removing all of that

1604
01:05:57,680 --> 01:05:59,440
before forwarding the packet to the next

1605
01:05:59,440 --> 01:06:01,599
node

1606
01:06:01,599 --> 01:06:05,160
so yeah

1607
01:06:05,200 --> 01:06:08,160
yes yes so it's like mpls yeah right you

1608
01:06:08,160 --> 01:06:11,039
consider it to be a bit string mpls type

1609
01:06:11,039 --> 01:06:13,039
of operation you're always discarding

1610
01:06:13,039 --> 01:06:16,640
what you've used popping it off

1611
01:06:16,640 --> 01:06:19,839
thank you

1612
01:06:20,240 --> 01:06:23,200
all right any more questions

1613
01:06:23,200 --> 01:06:26,640
tony yeah uh yeah coming from my side um

1614
01:06:26,640 --> 01:06:29,119
so first uh tallest

1615
01:06:29,119 --> 01:06:31,599
your draft names start to sound more and

1616
01:06:31,599 --> 01:06:34,480
more like folded proteins in biology you

1617
01:06:34,480 --> 01:06:37,599
know you better watch it

1618
01:06:37,680 --> 01:06:39,920
please help me tell me a better name

1619
01:06:39,920 --> 01:06:43,039
important the the draft name yes

1620
01:06:43,039 --> 01:06:46,240
yeah well um yeah so that's you know of

1621
01:06:46,240 --> 01:06:47,680
course is a joke

1622
01:06:47,680 --> 01:06:49,520
my question would be

1623
01:06:49,520 --> 01:06:50,559
um

1624
01:06:50,559 --> 01:06:52,480
if we even want to look at the adoption

1625
01:06:52,480 --> 01:06:55,119
of the staff is that calvary covered in

1626
01:06:55,119 --> 01:06:58,559
the charter by the brte moniker or is

1627
01:06:58,559 --> 01:07:01,280
something else completely

1628
01:07:01,280 --> 01:07:04,079
um i mean i'm sympathetic to mucking

1629
01:07:04,079 --> 01:07:05,280
around with this

1630
01:07:05,280 --> 01:07:08,480
big mess if it makes sense um

1631
01:07:08,480 --> 01:07:11,850
you know we just need some kind of um

1632
01:07:11,850 --> 01:07:13,200
[Music]

1633
01:07:13,200 --> 01:07:15,839
uh license you know to stretch this

1634
01:07:15,839 --> 01:07:18,480
story farther i have no answer it's just

1635
01:07:18,480 --> 01:07:21,119
more something that i put into the room

1636
01:07:21,119 --> 01:07:24,079
okay yeah one thing when when we do so

1637
01:07:24,079 --> 01:07:26,640
go through that you know let me know so

1638
01:07:26,640 --> 01:07:28,480
i can i can help because i have some

1639
01:07:28,480 --> 01:07:30,240
other working group where stuff has been

1640
01:07:30,240 --> 01:07:32,000
lying around with that question for four

1641
01:07:32,000 --> 01:07:34,480
years and they couldn't figure out

1642
01:07:34,480 --> 01:07:37,480
so

1643
01:07:45,119 --> 01:07:47,039
anything in there specifically that

1644
01:07:47,039 --> 01:07:49,839
talks or restricts

1645
01:07:49,839 --> 01:07:52,480
engineering

1646
01:07:54,160 --> 01:07:57,200
if i have to

1647
01:07:58,079 --> 01:08:00,480
on steroids so that it fits the because

1648
01:08:00,480 --> 01:08:02,240
i mean it's still you know all the

1649
01:08:02,240 --> 01:08:04,559
adjacencies all the the basic uh you

1650
01:08:04,559 --> 01:08:07,200
know um

1651
01:08:07,520 --> 01:08:10,240
the bift and what the bift does is a

1652
01:08:10,240 --> 01:08:13,359
simple subset um it's just that the

1653
01:08:13,359 --> 01:08:15,359
address itself is structured differently

1654
01:08:15,359 --> 01:08:18,080
so to to remove the the limitations so i

1655
01:08:18,080 --> 01:08:19,679
would certainly make the very strong

1656
01:08:19,679 --> 01:08:21,439
point that architecturally it's very

1657
01:08:21,439 --> 01:08:24,399
much derived from brt and learned from

1658
01:08:24,399 --> 01:08:27,040
the limitations we're getting by just

1659
01:08:27,040 --> 01:08:28,960
using the same address structure that we

1660
01:08:28,960 --> 01:08:31,520
did for for beer

1661
01:08:31,520 --> 01:08:32,719
i was going

1662
01:08:32,719 --> 01:08:35,679
i was going to say the joy the beer brt

1663
01:08:35,679 --> 01:08:38,000
plus

1664
01:08:42,640 --> 01:08:44,640
let me point out this is greg

1665
01:08:44,640 --> 01:08:47,120
speaking as chair looking at our charter

1666
01:08:47,120 --> 01:08:48,799
there's nothing in the charter that

1667
01:08:48,799 --> 01:08:51,279
mentions a specific draft or even a name

1668
01:08:51,279 --> 01:08:53,198
of any kind it does say in item eight

1669
01:08:53,198 --> 01:08:55,040
forwarding playing mechanisms for beer

1670
01:08:55,040 --> 01:08:56,719
traffic engineering

1671
01:08:56,719 --> 01:08:58,158
definition of how and new beer

1672
01:08:58,158 --> 01:09:00,158
forwarding plane structures can be used

1673
01:09:00,158 --> 01:09:02,479
to support engineered multicast trees

1674
01:09:02,479 --> 01:09:03,439
so

1675
01:09:03,439 --> 01:09:05,040
i mean the read on the charter from my

1676
01:09:05,040 --> 01:09:06,560
perspective would be yes this this is

1677
01:09:06,560 --> 01:09:09,279
completely encased in our uh in our

1678
01:09:09,279 --> 01:09:10,479
charter

1679
01:09:10,479 --> 01:09:13,920
okay you just let tallest lose

1680
01:09:13,920 --> 01:09:15,439
well it doesn't mean we adopt the draft

1681
01:09:15,439 --> 01:09:17,439
i'm not saying i'm not against i'm just

1682
01:09:17,439 --> 01:09:19,359
saying this work is within the scope of

1683
01:09:19,359 --> 01:09:21,279
our working group

1684
01:09:21,279 --> 01:09:23,120
if it's written that way seems to be

1685
01:09:23,120 --> 01:09:25,679
pretty clear but we have the license

1686
01:09:25,679 --> 01:09:27,520
we have the license

1687
01:09:27,520 --> 01:09:29,279
right

1688
01:09:29,279 --> 01:09:31,279
and i think also you know

1689
01:09:31,279 --> 01:09:33,439
working through brte which will be

1690
01:09:33,439 --> 01:09:36,319
finished yes very soon um we i think we

1691
01:09:36,319 --> 01:09:38,640
also identified the concerns with this

1692
01:09:38,640 --> 01:09:39,839
uh you know

1693
01:09:39,839 --> 01:09:40,719
uh

1694
01:09:40,719 --> 01:09:43,279
scale and topology engineering which the

1695
01:09:43,279 --> 01:09:45,040
draft so uh

1696
01:09:45,040 --> 01:09:47,759
largely now uh documents and so i think

1697
01:09:47,759 --> 01:09:50,399
that that also should serve as evidence

1698
01:09:50,399 --> 01:09:52,399
that uh something that get rid of that

1699
01:09:52,399 --> 01:09:57,360
problem um would be very useful

1700
01:09:59,280 --> 01:10:01,600
or at least improves it

1701
01:10:01,600 --> 01:10:03,679
yeah

1702
01:10:03,679 --> 01:10:06,800
all right any more questions

1703
01:10:07,600 --> 01:10:11,120
so i'm willing to put on 10 more minutes

1704
01:10:11,120 --> 01:10:14,000
we have uh

1705
01:10:14,000 --> 01:10:17,120
yes i've been going forward

1706
01:10:21,520 --> 01:10:23,920
go ahead

1707
01:10:28,159 --> 01:10:29,600
uh you're going to show it locally

1708
01:10:29,600 --> 01:10:31,280
within your own screen

1709
01:10:31,280 --> 01:10:33,360
oh yeah i can try i can try

1710
01:10:33,360 --> 01:10:34,560
my screen

1711
01:10:34,560 --> 01:10:36,880
okay

1712
01:10:42,239 --> 01:10:45,040
so can you see my slides

1713
01:10:45,040 --> 01:10:47,520
not yet but i'm i'm behind a

1714
01:10:47,520 --> 01:10:50,480
soup can and string

1715
01:10:54,239 --> 01:10:55,440
i'm still waiting

1716
01:10:55,440 --> 01:10:57,440
was uh was the embedded slide not

1717
01:10:57,440 --> 01:10:59,440
working for you

1718
01:10:59,440 --> 01:11:02,800
i don't know okay maybe you just uh uh

1719
01:11:02,800 --> 01:11:05,840
you you should slide maybe no if you if

1720
01:11:05,840 --> 01:11:08,640
you go up in the right below your name

1721
01:11:08,640 --> 01:11:10,960
the audio there's the hand the note the

1722
01:11:10,960 --> 01:11:13,760
screen the camera and the mic

1723
01:11:13,760 --> 01:11:15,360
second over from the left is share

1724
01:11:15,360 --> 01:11:17,199
pre-loaded slides that's the dock if you

1725
01:11:17,199 --> 01:11:19,920
click that you can select your deck

1726
01:11:19,920 --> 01:11:21,760
and show it directly without sharing

1727
01:11:21,760 --> 01:11:24,159
your screen

1728
01:11:24,159 --> 01:11:27,760
yeah clean that one

1729
01:11:27,760 --> 01:11:28,880
ice cream

1730
01:11:28,880 --> 01:11:30,480
share it so we don't lose time i have to

1731
01:11:30,480 --> 01:11:32,400
be going in 10 minutes

1732
01:11:32,400 --> 01:11:35,040
all right i i just unshared a screen

1733
01:11:35,040 --> 01:11:36,480
which wasn't coming up still trying to

1734
01:11:36,480 --> 01:11:39,000
get that doc

1735
01:11:39,000 --> 01:11:40,320
[Music]

1736
01:11:40,320 --> 01:11:42,480
when we do it for you

1737
01:11:42,480 --> 01:11:45,280
can you see it on a white coat

1738
01:11:45,280 --> 01:11:47,280
i don't see you you want me to share it

1739
01:11:47,280 --> 01:11:48,960
for you it's the question yeah yeah just

1740
01:11:48,960 --> 01:11:50,239
yourself on me

1741
01:11:50,239 --> 01:11:52,559
all right

1742
01:11:53,440 --> 01:11:55,199
and

1743
01:11:55,199 --> 01:11:58,239
there it is uh

1744
01:11:58,239 --> 01:12:01,840
which one there's chenbir uh the

1745
01:12:01,840 --> 01:12:07,800
te lan e p f r yes okay

1746
01:12:10,640 --> 01:12:13,199
is that it hello everyone yeah this is

1747
01:12:13,199 --> 01:12:15,520
uh today i'm going to talk about the bt

1748
01:12:15,520 --> 01:12:19,440
for broadcast link next next page

1749
01:12:20,719 --> 01:12:24,480
so there are issues in existing bit

1750
01:12:24,480 --> 01:12:27,678
with modcast links

1751
01:12:28,000 --> 01:12:31,520
english node on the mod cast link

1752
01:12:31,520 --> 01:12:33,920
may receive duplicate packages for

1753
01:12:33,920 --> 01:12:35,120
example

1754
01:12:35,120 --> 01:12:38,960
for te pass from node a to node a tran

1755
01:12:38,960 --> 01:12:40,719
and f

1756
01:12:40,719 --> 01:12:44,239
node english h on the broadcast link

1757
01:12:44,239 --> 01:12:45,760
will receive

1758
01:12:45,760 --> 01:12:48,960
two copies of the same package one from

1759
01:12:48,960 --> 01:12:52,480
node g the other from node c

1760
01:12:52,480 --> 01:12:55,120
so in this draft we propose to improve

1761
01:12:55,120 --> 01:12:56,719
the blt

1762
01:12:56,719 --> 01:12:57,600
for

1763
01:12:57,600 --> 01:13:00,239
broadcast link to resolve this issues

1764
01:13:00,239 --> 01:13:03,559
next page

1765
01:13:06,400 --> 01:13:08,400
we go back to two i may have questions

1766
01:13:08,400 --> 01:13:10,480
specifically about the problem statement

1767
01:13:10,480 --> 01:13:13,520
why would g and c both be forwarding

1768
01:13:13,520 --> 01:13:15,280
to on that broadcast line that seems

1769
01:13:15,280 --> 01:13:16,640
like the the

1770
01:13:16,640 --> 01:13:18,719
the mask has been

1771
01:13:18,719 --> 01:13:20,800
mis-structured

1772
01:13:20,800 --> 01:13:23,679
uh no it is not because mask

1773
01:13:23,679 --> 01:13:26,560
is disrupted so just follow the

1774
01:13:26,560 --> 01:13:27,840
procedure

1775
01:13:27,840 --> 01:13:29,920
for for the blte

1776
01:13:29,920 --> 01:13:31,199
and then

1777
01:13:31,199 --> 01:13:32,960
every node will receive

1778
01:13:32,960 --> 01:13:33,760
one

1779
01:13:33,760 --> 01:13:36,960
package from g and another package from

1780
01:13:36,960 --> 01:13:38,000
from c

1781
01:13:38,000 --> 01:13:40,640
in my draft i give more details

1782
01:13:40,640 --> 01:13:42,159
step by step

1783
01:13:42,159 --> 01:13:43,840
but it seems to me if i were sending a

1784
01:13:43,840 --> 01:13:45,920
packet with the brte header on it and

1785
01:13:45,920 --> 01:13:47,440
this is what my distribution was going

1786
01:13:47,440 --> 01:13:51,679
to be i would not need to include g

1787
01:13:51,679 --> 01:13:53,360
it would not need to be solved in order

1788
01:13:53,360 --> 01:13:55,120
to get to that distance

1789
01:13:55,120 --> 01:13:58,320
and then these were sent to c

1790
01:13:58,320 --> 01:14:00,640
yeah i understand but why why would you

1791
01:14:00,640 --> 01:14:04,640
set g in this topology

1792
01:14:05,679 --> 01:14:08,080
if c is capable of getting it there

1793
01:14:08,080 --> 01:14:09,760
you build your tree with your pc however

1794
01:14:09,760 --> 01:14:11,760
you've done it you build your mask and

1795
01:14:11,760 --> 01:14:13,840
if you included g in this there's been a

1796
01:14:13,840 --> 01:14:16,080
mistake there's no need necessarily is

1797
01:14:16,080 --> 01:14:17,440
there

1798
01:14:17,440 --> 01:14:21,199
told us do you want to quickly jump in

1799
01:14:21,760 --> 01:14:23,440
i mean i i i can imagine there's a

1800
01:14:23,440 --> 01:14:25,040
scenario where this problem exists i

1801
01:14:25,040 --> 01:14:26,840
just don't see where it is here that's

1802
01:14:26,840 --> 01:14:28,800
all

1803
01:14:28,800 --> 01:14:31,280
this this is more of a problem not with

1804
01:14:31,280 --> 01:14:33,520
it's with a pce that

1805
01:14:33,520 --> 01:14:37,280
made a mask that creates this condition

1806
01:14:41,040 --> 01:14:43,600
so i mean the duplicate packets would

1807
01:14:43,600 --> 01:14:44,960
only happen when you put more

1808
01:14:44,960 --> 01:14:47,040
adjacencies than one across the same

1809
01:14:47,040 --> 01:14:50,400
link so the controller has always the uh

1810
01:14:50,400 --> 01:14:51,600
the uh

1811
01:14:51,600 --> 01:14:55,120
the task to to avoid

1812
01:14:55,120 --> 01:14:55,760
yeah you that

1813
01:14:55,760 --> 01:14:56,960
here

1814
01:14:56,960 --> 01:14:59,280
here it's all unique anyhow right

1815
01:14:59,280 --> 01:15:00,719
here

1816
01:15:00,719 --> 01:15:04,480
so that is 15 right and then we have

1817
01:15:04,480 --> 01:15:08,080
another adjacency for 12. 12 is for the

1818
01:15:08,080 --> 01:15:11,840
for the distillation f right

1819
01:15:14,080 --> 01:15:17,280
yeah so don't include g

1820
01:15:17,280 --> 01:15:19,600
yet for for this one for

1821
01:15:19,600 --> 01:15:22,400
for destination f we don't include g but

1822
01:15:22,400 --> 01:15:25,679
when c distribute that one to f

1823
01:15:25,679 --> 01:15:28,080
because on the b

1824
01:15:28,080 --> 01:15:31,040
loader b will not remove the adjacency

1825
01:15:31,040 --> 01:15:32,400
15

1826
01:15:32,400 --> 01:15:34,320
for g because we're just

1827
01:15:34,320 --> 01:15:36,239
removed

1828
01:15:36,239 --> 01:15:39,520
taurus can you help

1829
01:15:39,520 --> 01:15:41,360
sorry i don't i i need to wrap my head

1830
01:15:41,360 --> 01:15:42,640
around a little bit more can we take it

1831
01:15:42,640 --> 01:15:46,400
to the list i mean yeah i think

1832
01:15:46,400 --> 01:15:48,800
you might drop that details

1833
01:15:48,800 --> 01:15:51,199
yeah go ahead then

1834
01:15:51,199 --> 01:15:54,320
oh i'm 14. there we go

1835
01:15:54,320 --> 01:15:56,159
you're here for

1836
01:15:56,159 --> 01:15:59,120
a mod cast connectometer for a market

1837
01:15:59,120 --> 01:16:02,080
for broca's link kinetic nodes so we

1838
01:16:02,080 --> 01:16:03,840
assume

1839
01:16:03,840 --> 01:16:05,679
these nodes are connected to a pursuit

1840
01:16:05,679 --> 01:16:08,320
node px

1841
01:16:08,320 --> 01:16:11,360
for a connection between a

1842
01:16:11,360 --> 01:16:12,880
procedure node

1843
01:16:12,880 --> 01:16:16,320
px and a real node

1844
01:16:16,320 --> 01:16:17,120
we

1845
01:16:17,120 --> 01:16:20,880
will assign two bit positions one for

1846
01:16:20,880 --> 01:16:22,960
nine connected adjacency

1847
01:16:22,960 --> 01:16:24,719
the other

1848
01:16:24,719 --> 01:16:26,239
for

1849
01:16:26,239 --> 01:16:27,600
forward connected electricity from

1850
01:16:27,600 --> 01:16:30,080
pursuit number to real note

1851
01:16:30,080 --> 01:16:32,960
so for line connected adjacency from a

1852
01:16:32,960 --> 01:16:36,239
real node to pursuit node

1853
01:16:36,239 --> 01:16:40,000
that the real node will act as a

1854
01:16:40,000 --> 01:16:42,159
proxy of

1855
01:16:42,159 --> 01:16:45,040
a prosciutto node so this is similar as

1856
01:16:45,040 --> 01:16:45,760
uh

1857
01:16:45,760 --> 01:16:49,560
ospf and iss

1858
01:16:50,560 --> 01:16:52,640
of saving time here right just to cut to

1859
01:16:52,640 --> 01:16:55,440
the chase um is is it the proposal to

1860
01:16:55,440 --> 01:16:57,120
have something like the beer packets be

1861
01:16:57,120 --> 01:17:00,880
layered to multicast across the uh um

1862
01:17:00,880 --> 01:17:03,600
that land

1863
01:17:03,600 --> 01:17:06,320
yeah this yesterday uh introduce a uh

1864
01:17:06,320 --> 01:17:08,000
a proxy those

1865
01:17:08,000 --> 01:17:10,640
so those the real node will connect to

1866
01:17:10,640 --> 01:17:11,440
the

1867
01:17:11,440 --> 01:17:12,960
projector node

1868
01:17:12,960 --> 01:17:16,159
so this is

1869
01:17:16,159 --> 01:17:17,760
are you going to have

1870
01:17:17,760 --> 01:17:19,920
uh packets being sent as layer 2

1871
01:17:19,920 --> 01:17:21,600
multicast so that they can reach

1872
01:17:21,600 --> 01:17:24,719
multiple bfrs on the same lan

1873
01:17:24,719 --> 01:17:27,360
no no no no no no no

1874
01:17:27,360 --> 01:17:30,320
so this one just the real note

1875
01:17:30,320 --> 01:17:33,520
will send the package to

1876
01:17:33,520 --> 01:17:36,640
pursuit notes max hope

1877
01:17:36,640 --> 01:17:38,960
so one implementation is that that the

1878
01:17:38,960 --> 01:17:40,719
real node

1879
01:17:40,719 --> 01:17:43,840
will fakely send the package to pursue

1880
01:17:43,840 --> 01:17:45,040
note is not

1881
01:17:45,040 --> 01:17:46,560
is not already sent

1882
01:17:46,560 --> 01:17:47,600
so just

1883
01:17:47,600 --> 01:17:48,960
and then

1884
01:17:48,960 --> 01:17:51,840
from there real note will

1885
01:17:51,840 --> 01:17:52,800
fake

1886
01:17:52,800 --> 01:17:55,520
or acting as a proxy of

1887
01:17:55,520 --> 01:17:57,040
consumer notes and then send the package

1888
01:17:57,040 --> 01:17:59,760
to the pursuit of the nightclub in fact

1889
01:17:59,760 --> 01:18:01,920
the one important notation is that real

1890
01:18:01,920 --> 01:18:04,719
load will have two fourteen tables y is

1891
01:18:04,719 --> 01:18:06,159
for main fourier table and the other

1892
01:18:06,159 --> 01:18:08,320
fourteen table is the four position node

1893
01:18:08,320 --> 01:18:09,440
when for the

1894
01:18:09,440 --> 01:18:12,480
non-connected adjacency real node will

1895
01:18:12,480 --> 01:18:14,320
get the

1896
01:18:14,320 --> 01:18:17,040
forwarding table for pursuit node and

1897
01:18:17,040 --> 01:18:18,000
then

1898
01:18:18,000 --> 01:18:20,960
send the package to personal desktop

1899
01:18:20,960 --> 01:18:22,719
that's the one implementation next page

1900
01:18:22,719 --> 01:18:24,800
next page gives more details how we

1901
01:18:24,800 --> 01:18:27,840
achieve this one

1902
01:18:31,280 --> 01:18:32,719
the next slide

1903
01:18:32,719 --> 01:18:34,000
yeah next life

1904
01:18:34,000 --> 01:18:35,199
okay okay

1905
01:18:35,199 --> 01:18:38,000
that's the one implementation so note c

1906
01:18:38,000 --> 01:18:40,239
will have a main folding table it's

1907
01:18:40,239 --> 01:18:42,000
normal for interval just contain nine

1908
01:18:42,000 --> 01:18:44,320
connected adjacencies from real node for

1909
01:18:44,320 --> 01:18:47,120
to the pursuit node and then

1910
01:18:47,120 --> 01:18:50,320
this node also have a four folding table

1911
01:18:50,320 --> 01:18:52,000
for the pursuit node

1912
01:18:52,000 --> 01:18:53,360
so this is a foreign table for

1913
01:18:53,360 --> 01:18:55,360
professional laser

1914
01:18:55,360 --> 01:18:57,600
for a container adjacency forward

1915
01:18:57,600 --> 01:18:59,280
connecting agency to the

1916
01:18:59,280 --> 01:19:01,280
presumably nice hope so that's for one

1917
01:19:01,280 --> 01:19:04,400
implementation next page

1918
01:19:06,640 --> 01:19:09,199
yeah this gives examples and then shows

1919
01:19:09,199 --> 01:19:11,760
that we improve the plt and then we will

1920
01:19:11,760 --> 01:19:13,280
now have

1921
01:19:13,280 --> 01:19:15,679
duplicate packages

1922
01:19:15,679 --> 01:19:18,159
next page

1923
01:19:18,320 --> 01:19:20,320
yeah that's all

1924
01:19:20,320 --> 01:19:22,640
for this one yes i i i have to look more

1925
01:19:22,640 --> 01:19:25,040
at the examples um there obviously is

1926
01:19:25,040 --> 01:19:29,280
the option in brte for an adjacency

1927
01:19:29,280 --> 01:19:31,360
or for a bit to have a a list of

1928
01:19:31,360 --> 01:19:33,679
adjacencies to which to replicate so

1929
01:19:33,679 --> 01:19:36,560
i'll have to really sit down and compare

1930
01:19:36,560 --> 01:19:38,400
whether what you're proposing cannot

1931
01:19:38,400 --> 01:19:40,239
equally be done with that existing

1932
01:19:40,239 --> 01:19:41,120
option

1933
01:19:41,120 --> 01:19:42,880
yes i guess yeah go ahead and then you

1934
01:19:42,880 --> 01:19:46,080
look at the draft ending have details

1935
01:19:46,080 --> 01:19:49,080
thanks

1936
01:19:50,960 --> 01:19:52,640
so right now i'm going to talk about uh

1937
01:19:52,640 --> 01:19:56,400
beer equal production next page

1938
01:19:57,120 --> 01:19:59,199
so uh in

1939
01:19:59,199 --> 01:20:01,760
appear protection improves page half of

1940
01:20:01,760 --> 01:20:02,840
the case

1941
01:20:02,840 --> 01:20:06,400
that node backup user node protect

1942
01:20:06,400 --> 01:20:09,360
primax node which you assume that

1943
01:20:09,360 --> 01:20:12,239
those nodes are sent there be a package

1944
01:20:12,239 --> 01:20:16,080
to the same as c receivers

1945
01:20:16,080 --> 01:20:17,280
so this

1946
01:20:17,280 --> 01:20:20,000
solution is tended to cover another case

1947
01:20:20,000 --> 01:20:21,440
which is case b

1948
01:20:21,440 --> 01:20:22,719
well

1949
01:20:22,719 --> 01:20:25,679
bicarbonate nodes per protects uh

1950
01:20:25,679 --> 01:20:28,480
primary nodes but

1951
01:20:28,480 --> 01:20:31,679
these two nodes will send

1952
01:20:31,679 --> 01:20:35,360
they'll be attached to different ce's

1953
01:20:35,360 --> 01:20:39,040
so this two case is indicated by flag so

1954
01:20:39,040 --> 01:20:41,520
as flag as equals to one means they will

1955
01:20:41,520 --> 01:20:44,239
send it to the same receiver which is a

1956
01:20:44,239 --> 01:20:47,600
case coupled in the previous version

1957
01:20:47,600 --> 01:20:50,480
s equals to zero means

1958
01:20:50,480 --> 01:20:53,440
two nodes was sent to the different

1959
01:20:53,440 --> 01:20:57,678
disease this is the new case next page

1960
01:20:59,520 --> 01:21:00,560
so

1961
01:21:00,560 --> 01:21:04,159
the solution for the case b

1962
01:21:04,159 --> 01:21:06,239
so it's working like this way

1963
01:21:06,239 --> 01:21:09,120
so e so

1964
01:21:09,360 --> 01:21:12,159
bicarb equals node protector primary

1965
01:21:12,159 --> 01:21:13,440
node

1966
01:21:13,440 --> 01:21:16,719
is configured with the flag indicates

1967
01:21:16,719 --> 01:21:18,960
whether these two nodes send that be a

1968
01:21:18,960 --> 01:21:21,280
package panel to the same receiver ces

1969
01:21:21,280 --> 01:21:24,639
or or different cs

1970
01:21:24,639 --> 01:21:27,520
flag equal to zero means that they send

1971
01:21:27,520 --> 01:21:29,280
it they are payable to the different

1972
01:21:29,280 --> 01:21:31,440
receiver ces

1973
01:21:31,440 --> 01:21:32,560
igp

1974
01:21:32,560 --> 01:21:35,440
will distribute this information

1975
01:21:35,440 --> 01:21:36,880
in the network

1976
01:21:36,880 --> 01:21:38,880
so after

1977
01:21:38,880 --> 01:21:41,520
a prr for example c

1978
01:21:41,520 --> 01:21:44,880
receives this information

1979
01:21:45,440 --> 01:21:46,159
c

1980
01:21:46,159 --> 01:21:49,040
will extend is a forwarding table to

1981
01:21:49,040 --> 01:21:52,239
contain a bicarbophone entry

1982
01:21:52,239 --> 01:21:54,159
for

1983
01:21:54,159 --> 01:21:58,320
e version of f which considers the flag

1984
01:21:58,320 --> 01:21:59,920
s

1985
01:21:59,920 --> 01:22:03,280
the bicarbonate equals node e

1986
01:22:03,280 --> 01:22:06,400
will create a multicast phonon table

1987
01:22:06,400 --> 01:22:08,800
for inverse node f

1988
01:22:08,800 --> 01:22:12,080
which contains for the behaviors of f

1989
01:22:12,080 --> 01:22:13,360
in addition

1990
01:22:13,360 --> 01:22:14,880
by cap

1991
01:22:14,880 --> 01:22:17,679
horizontal e will extend it is a normal

1992
01:22:17,679 --> 01:22:18,960
forwarding table

1993
01:22:18,960 --> 01:22:22,480
to contain a bicarbonate entry for f

1994
01:22:22,480 --> 01:22:25,760
with a pointer which pointing to

1995
01:22:25,760 --> 01:22:28,080
the multicast

1996
01:22:28,080 --> 01:22:29,360
feedback for f

1997
01:22:29,360 --> 01:22:30,159
when

1998
01:22:30,159 --> 01:22:32,080
flag equals to zero

1999
01:22:32,080 --> 01:22:34,239
so at this point

2000
01:22:34,239 --> 01:22:36,000
network is ready

2001
01:22:36,000 --> 01:22:41,040
to provide protections for iris note f

2002
01:22:41,040 --> 01:22:43,440
after f fails

2003
01:22:43,440 --> 01:22:44,960
both c

2004
01:22:44,960 --> 01:22:47,360
and u back up equals

2005
01:22:47,360 --> 01:22:48,880
e

2006
01:22:48,880 --> 01:22:50,400
have to

2007
01:22:50,400 --> 01:22:53,600
detect the failure of f

2008
01:22:53,600 --> 01:22:55,000
so after

2009
01:22:55,000 --> 01:22:57,440
detecting the value of f

2010
01:22:57,440 --> 01:22:58,639
notice c

2011
01:22:58,639 --> 01:23:01,679
we are using is bicarb entry

2012
01:23:01,679 --> 01:23:04,080
to forward the package with f as

2013
01:23:04,080 --> 01:23:06,880
destination to k

2014
01:23:06,880 --> 01:23:08,480
k is a

2015
01:23:08,480 --> 01:23:10,639
is l of a to f

2016
01:23:10,639 --> 01:23:13,840
k will submit this package to to e which

2017
01:23:13,840 --> 01:23:16,000
is backup equation node

2018
01:23:16,000 --> 01:23:19,199
after receiving this package with with f

2019
01:23:19,199 --> 01:23:21,840
as the destination

2020
01:23:21,840 --> 01:23:25,360
by cap us dot f we're using the backup

2021
01:23:25,360 --> 01:23:28,400
entry in its folding table

2022
01:23:28,400 --> 01:23:30,480
to

2023
01:23:30,480 --> 01:23:33,199
decalculate the calculated

2024
01:23:33,199 --> 01:23:35,839
the package

2025
01:23:36,000 --> 01:23:37,360
and then

2026
01:23:37,360 --> 01:23:40,080
using the forwarding table for f to

2027
01:23:40,080 --> 01:23:42,480
forward the payload of this package to

2028
01:23:42,480 --> 01:23:43,440
the same

2029
01:23:43,440 --> 01:23:46,400
receiver as

2030
01:23:46,400 --> 01:23:48,639
f sense

2031
01:23:48,639 --> 01:23:51,360
so next page

2032
01:23:54,320 --> 01:23:57,040
yeah that's roughly about it any comment

2033
01:23:57,040 --> 01:23:58,000
for this

2034
01:23:58,000 --> 01:24:00,320
dropped

2035
01:24:00,560 --> 01:24:03,840
jeffrey you get a question

2036
01:24:03,920 --> 01:24:06,800
so once you do the uh uh uh

2037
01:24:06,800 --> 01:24:08,080
okay uh

2038
01:24:08,080 --> 01:24:09,760
the case b

2039
01:24:09,760 --> 01:24:13,199
why do you still need case a

2040
01:24:14,400 --> 01:24:16,480
yeah that's a good question so uh

2041
01:24:16,480 --> 01:24:19,280
originally we have case a and then cover

2042
01:24:19,280 --> 01:24:22,080
most of the case or general cases i i

2043
01:24:22,080 --> 01:24:24,159
think some of people uh reach the

2044
01:24:24,159 --> 01:24:25,440
question

2045
01:24:25,440 --> 01:24:27,360
so in case that

2046
01:24:27,360 --> 01:24:28,320
if

2047
01:24:28,320 --> 01:24:31,760
two nodes send their bs payload to

2048
01:24:31,760 --> 01:24:34,400
different c's so we need to cover this

2049
01:24:34,400 --> 01:24:36,800
case so that's the

2050
01:24:36,800 --> 01:24:37,920
background

2051
01:24:37,920 --> 01:24:42,679
we propose this solution for case b

2052
01:24:44,560 --> 01:24:46,320
yeah you're all right if a customer

2053
01:24:46,320 --> 01:24:47,840
configured their network or planner that

2054
01:24:47,840 --> 01:24:49,760
log only have a case

2055
01:24:49,760 --> 01:24:51,840
where a then we're gonna get a case b

2056
01:24:51,840 --> 01:24:54,159
all right

2057
01:24:56,719 --> 01:24:59,840
all right more questions more questions

2058
01:25:00,639 --> 01:25:02,560
i have more one more answer

2059
01:25:02,560 --> 01:25:04,000
um

2060
01:25:04,000 --> 01:25:06,960
case a is simpler the solution for case

2061
01:25:06,960 --> 01:25:10,320
a is simpler and more robust therefore

2062
01:25:10,320 --> 01:25:12,960
that's a reason that's also a reason to

2063
01:25:12,960 --> 01:25:16,800
to to a differentiate between case a and

2064
01:25:16,800 --> 01:25:20,120
case b

2065
01:25:29,600 --> 01:25:31,360
all right any more questions we are past

2066
01:25:31,360 --> 01:25:33,440
our 20-minute push so we have to wrap

2067
01:25:33,440 --> 01:25:36,239
this up we have places to go

2068
01:25:36,239 --> 01:25:38,559
up

2069
01:25:38,719 --> 01:25:40,000
jeffrey did you just step down you're

2070
01:25:40,000 --> 01:25:40,880
done

2071
01:25:40,880 --> 01:25:42,960
are you joining the queue

2072
01:25:42,960 --> 01:25:44,960
all right i think we got a wrap

2073
01:25:44,960 --> 01:25:45,920
thanks

2074
01:25:45,920 --> 01:25:48,080
appreciate your time for extending the

2075
01:25:48,080 --> 01:25:49,760
session thank you thank you thanks for

2076
01:25:49,760 --> 01:25:51,679
your patience and uh we'll be following

2077
01:25:51,679 --> 01:25:55,760
up on the list with uh well quite a bit

2078
01:25:55,760 --> 01:25:58,560
you guys have a great rest of your week

2079
01:25:58,560 --> 01:26:00,239
yeah you too

2080
01:26:00,239 --> 01:26:03,239
cheers

2081
01:26:20,800 --> 01:26:21,840
another

2082
01:26:21,840 --> 01:26:24,840
this

2083
01:26:41,199 --> 01:26:43,280
you

