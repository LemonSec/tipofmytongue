1
00:00:10,719 --> 00:00:12,480
we still need

2
00:00:12,480 --> 00:00:14,000
minutes taker

3
00:00:14,000 --> 00:00:15,519
yeah

4
00:00:15,519 --> 00:00:17,119
that we delete

5
00:00:17,119 --> 00:00:18,880
yes

6
00:00:18,880 --> 00:00:20,720
okay but it's

7
00:00:20,720 --> 00:00:24,160
two o'clock now in finish time so

8
00:00:24,160 --> 00:00:28,080
12 in utc so we can start

9
00:00:28,080 --> 00:00:31,279
so this is ipsec maintenance extensions

10
00:00:31,279 --> 00:00:33,840
working group ipsec may first thing in

11
00:00:33,840 --> 00:00:38,480
litf 112 i'm terror kevin

12
00:00:38,480 --> 00:00:40,000
and

13
00:00:40,000 --> 00:00:42,079
co-author is your here and our

14
00:00:42,079 --> 00:00:46,879
responsibility is then who is here good

15
00:00:46,879 --> 00:00:48,320
okay

16
00:00:48,320 --> 00:00:50,399
so this is the note well

17
00:00:50,399 --> 00:00:52,320
and i guess you probably have seen it a

18
00:00:52,320 --> 00:00:55,600
couple of times already so

19
00:00:55,600 --> 00:00:59,440
let's go forward so we need some uh

20
00:00:59,440 --> 00:01:02,000
note takers preferably too i have

21
00:01:02,000 --> 00:01:05,199
already you know filled in the

22
00:01:05,199 --> 00:01:06,479
basic

23
00:01:06,479 --> 00:01:09,679
notes in the

24
00:01:10,320 --> 00:01:13,040
headstock or etherpad used to be eater

25
00:01:13,040 --> 00:01:15,119
but so you could go there and start

26
00:01:15,119 --> 00:01:17,439
just editing and adding what happens

27
00:01:17,439 --> 00:01:19,600
really in the discussion no need to take

28
00:01:19,600 --> 00:01:22,240
any of the presentations

29
00:01:22,240 --> 00:01:27,560
so anybody willing to be taking notes

30
00:01:36,000 --> 00:01:38,320
let me see if there is anybody

31
00:01:38,320 --> 00:01:40,000
suitable

32
00:01:40,000 --> 00:01:43,119
people to point at

33
00:01:50,960 --> 00:01:52,399
wow

34
00:01:52,399 --> 00:01:54,799
yeah i was just looking for him if he's

35
00:01:54,799 --> 00:01:55,140
there

36
00:01:55,140 --> 00:01:57,360
[Laughter]

37
00:01:57,360 --> 00:01:59,040
he knew that

38
00:01:59,040 --> 00:02:00,880
all right so thanks paul and if somebody

39
00:02:00,880 --> 00:02:02,799
can help because i guess paul is

40
00:02:02,799 --> 00:02:04,079
probably going to be talking at some

41
00:02:04,079 --> 00:02:06,880
point he usually is so

42
00:02:06,880 --> 00:02:08,800
helpful he's talking also it would be

43
00:02:08,800 --> 00:02:09,598
good

44
00:02:09,598 --> 00:02:11,120
i think the meter call link and the

45
00:02:11,120 --> 00:02:13,599
chopper link and notes links are still

46
00:02:13,599 --> 00:02:15,360
actually no the probably the notes links

47
00:02:15,360 --> 00:02:17,200
are probably wrong because it should be

48
00:02:17,200 --> 00:02:19,200
now in the

49
00:02:19,200 --> 00:02:22,560
notes df.org

50
00:02:25,840 --> 00:02:27,599
agreed to help

51
00:02:27,599 --> 00:02:29,440
good

52
00:02:29,440 --> 00:02:31,120
all right so let's

53
00:02:31,120 --> 00:02:33,360
go to the agenda so this is our agenda

54
00:02:33,360 --> 00:02:35,519
so five minutes for agenda bashing and

55
00:02:35,519 --> 00:02:38,720
and other things

56
00:02:38,720 --> 00:02:40,959
and there we then we have a 10 minutes

57
00:02:40,959 --> 00:02:44,080
for document status and that we have 20

58
00:02:44,080 --> 00:02:47,440
minutes or more for iptfs we now have

59
00:02:47,440 --> 00:02:49,280
enough time this time

60
00:02:49,280 --> 00:02:52,239
compared to last time so we

61
00:02:52,239 --> 00:02:54,720
we are going to be staying on that topic

62
00:02:54,720 --> 00:02:57,360
until we are done with it so we can get

63
00:02:57,360 --> 00:02:59,200
the documents out

64
00:02:59,200 --> 00:03:01,599
and then we have uh five or ten minutes

65
00:03:01,599 --> 00:03:03,519
about the quantum breast i question two

66
00:03:03,519 --> 00:03:05,920
and big keys and then we have two

67
00:03:05,920 --> 00:03:07,760
presentations from valerie which are

68
00:03:07,760 --> 00:03:08,879
actually

69
00:03:08,879 --> 00:03:10,720
most repeats from the previous ones the

70
00:03:10,720 --> 00:03:12,959
group key management using i question

71
00:03:12,959 --> 00:03:14,640
two and the announcing support for all

72
00:03:14,640 --> 00:03:16,879
indigenous in like version two

73
00:03:16,879 --> 00:03:19,120
and those both are r and charter and

74
00:03:19,120 --> 00:03:21,440
they are items that we haven't been

75
00:03:21,440 --> 00:03:24,000
uh discussing for some time and we

76
00:03:24,000 --> 00:03:26,560
should be getting working on those two

77
00:03:26,560 --> 00:03:29,840
any comments on that end up

78
00:03:30,319 --> 00:03:32,640
if not we go forward so

79
00:03:32,640 --> 00:03:35,440
the first one is the document status so

80
00:03:35,440 --> 00:03:38,480
we have one document ip version 2

81
00:03:38,480 --> 00:03:40,159
immediate that is intermediate that is

82
00:03:40,159 --> 00:03:42,959
now in the publication requested state

83
00:03:42,959 --> 00:03:45,519
waiting for the 80s to pick it up

84
00:03:45,519 --> 00:03:48,799
and then we have the iptfs

85
00:03:48,799 --> 00:03:49,840
group

86
00:03:49,840 --> 00:03:52,000
which hopefully

87
00:03:52,000 --> 00:03:55,120
uh go actually i think the first two

88
00:03:55,120 --> 00:03:56,799
name of the crafts are wrong because i

89
00:03:56,799 --> 00:04:00,959
think they are now ietf ipsec me

90
00:04:02,319 --> 00:04:04,000
redirections for those so this would

91
00:04:04,000 --> 00:04:05,580
work

92
00:04:05,580 --> 00:04:07,360
[Applause]

93
00:04:07,360 --> 00:04:09,200
those three first documents are should

94
00:04:09,200 --> 00:04:11,200
be ready to go to the publication

95
00:04:11,200 --> 00:04:13,360
requested almost immediately after this

96
00:04:13,360 --> 00:04:16,238
itf finishes or actually i think the

97
00:04:16,238 --> 00:04:18,560
young and big one still needs us

98
00:04:18,560 --> 00:04:21,040
several flight write-ups but

99
00:04:21,040 --> 00:04:23,120
for the iptfs main document should be

100
00:04:23,120 --> 00:04:26,000
ready immediately when we get this final

101
00:04:26,000 --> 00:04:28,240
issues resolved

102
00:04:28,240 --> 00:04:30,880
uh that we have a multiple key exchanges

103
00:04:30,880 --> 00:04:33,919
which i think should be ready also

104
00:04:33,919 --> 00:04:36,560
and uh algorithms acquisition one

105
00:04:36,560 --> 00:04:39,040
algorithms to historic is should be also

106
00:04:39,040 --> 00:04:41,360
getting ready and labeled ipsec paul was

107
00:04:41,360 --> 00:04:43,040
saying that he doesn't have any update

108
00:04:43,040 --> 00:04:46,160
for those he just needs to be doing some

109
00:04:46,160 --> 00:04:48,720
write up for the theme and look at get

110
00:04:48,720 --> 00:04:51,199
them ready going for then we had this i

111
00:04:51,199 --> 00:04:52,880
questioned 2

112
00:04:52,880 --> 00:04:55,360
gi question 2 version that is still

113
00:04:55,360 --> 00:04:57,040
waiting there to be

114
00:04:57,040 --> 00:04:58,479
you know

115
00:04:58,479 --> 00:05:00,639
uh

116
00:05:00,720 --> 00:05:02,800
to be

117
00:05:02,800 --> 00:05:04,560
needs more reviews let's put it this we

118
00:05:04,560 --> 00:05:08,080
have a discussion about that later

119
00:05:09,360 --> 00:05:12,560
and okay

120
00:05:12,639 --> 00:05:14,800
and then we have the

121
00:05:14,800 --> 00:05:15,600
okay

122
00:05:15,600 --> 00:05:17,280
valerie do you have something about that

123
00:05:17,280 --> 00:05:19,679
go ahead

124
00:05:22,080 --> 00:05:22,880
uh

125
00:05:22,880 --> 00:05:26,960
i just uh want to say that uh rfc

126
00:05:26,960 --> 00:05:29,280
22 uh

127
00:05:29,280 --> 00:05:32,080
sorry 82-29 b's uh

128
00:05:32,080 --> 00:05:34,560
seems to be ready for last call the last

129
00:05:34,560 --> 00:05:36,639
revision is

130
00:05:36,639 --> 00:05:39,680
didn't change anything and tommy and i

131
00:05:39,680 --> 00:05:42,320
think that the dropped is ready for last

132
00:05:42,320 --> 00:05:43,600
goal

133
00:05:43,600 --> 00:05:43,830
so

134
00:05:43,830 --> 00:05:44,960
[Music]

135
00:05:44,960 --> 00:05:48,719
it's quite stable in nature

136
00:05:49,680 --> 00:05:51,199
yeah my understanding is both of these

137
00:05:51,199 --> 00:05:53,520
are actually should be ready for

138
00:05:53,520 --> 00:05:55,039
you know

139
00:05:55,039 --> 00:05:57,120
to go to the

140
00:05:57,120 --> 00:05:59,199
out from the working group

141
00:05:59,199 --> 00:06:01,520
after the itf quite soon oh actually the

142
00:06:01,520 --> 00:06:03,360
idea version 2 probably needs more

143
00:06:03,360 --> 00:06:06,080
reviews still but anyway

144
00:06:06,080 --> 00:06:08,560
okay then we have uh

145
00:06:08,560 --> 00:06:10,000
oh actually i have the more more text

146
00:06:10,000 --> 00:06:11,919
about the group key management need more

147
00:06:11,919 --> 00:06:13,120
reviews

148
00:06:13,120 --> 00:06:14,160
the announcement supporter

149
00:06:14,160 --> 00:06:15,840
authentication animators in ikever's two

150
00:06:15,840 --> 00:06:17,600
we have a presentation about that and i

151
00:06:17,600 --> 00:06:19,440
think it should be ready for the working

152
00:06:19,440 --> 00:06:21,039
group adoption call because it's still

153
00:06:21,039 --> 00:06:23,280
not the working group document

154
00:06:23,280 --> 00:06:24,479
and

155
00:06:24,479 --> 00:06:27,400
as i said i think the rfc

156
00:06:27,400 --> 00:06:30,720
8229 is ready for the working group last

157
00:06:30,720 --> 00:06:32,960
call

158
00:06:33,840 --> 00:06:36,080
all right so

159
00:06:36,080 --> 00:06:37,360
anything else about the current

160
00:06:37,360 --> 00:06:38,639
documents

161
00:06:38,639 --> 00:06:42,319
we have we have couple of uh where is it

162
00:06:42,319 --> 00:06:44,080
here we have a couple of documents that

163
00:06:44,080 --> 00:06:46,160
are not the working group documents uh

164
00:06:46,160 --> 00:06:47,840
that are still in the list if they have

165
00:06:47,840 --> 00:06:49,680
compression and that kind of things but

166
00:06:49,680 --> 00:06:52,880
we haven't heard anything about those so

167
00:06:52,880 --> 00:06:54,800
uh

168
00:06:54,800 --> 00:06:56,880
so

169
00:06:56,880 --> 00:06:58,240
if there's

170
00:06:58,240 --> 00:07:00,400
people interested to get those one

171
00:07:00,400 --> 00:07:02,080
already they should be start discussing

172
00:07:02,080 --> 00:07:04,479
the working group list and and start

173
00:07:04,479 --> 00:07:08,159
processing progressing those

174
00:07:14,479 --> 00:07:18,400
oh somebody was asking to add ipsec like

175
00:07:18,400 --> 00:07:20,400
i don't remember what happened that

176
00:07:20,400 --> 00:07:22,960
thing last

177
00:07:24,160 --> 00:07:24,880
um

178
00:07:24,880 --> 00:07:28,080
so there's a question in the jab room

179
00:07:28,080 --> 00:07:29,840
if there are any plans to issue a

180
00:07:29,840 --> 00:07:32,000
working group call for adoption for

181
00:07:32,000 --> 00:07:37,120
draft btw additional visa can be hike

182
00:07:37,199 --> 00:07:39,919
yeah probably we should be doing that

183
00:07:39,919 --> 00:07:42,240
uh i think that's also ready so we

184
00:07:42,240 --> 00:07:44,240
should actually probably start that add

185
00:07:44,240 --> 00:07:46,720
that to the list and and add

186
00:07:46,720 --> 00:07:49,440
that and the uh

187
00:07:49,440 --> 00:07:50,240
uh

188
00:07:50,240 --> 00:07:51,919
announcing our supported altercation

189
00:07:51,919 --> 00:07:54,240
methods in ikers 2 to the working group

190
00:07:54,240 --> 00:07:57,240
adoptions

191
00:07:58,479 --> 00:07:59,759
and i don't think we actually need to

192
00:07:59,759 --> 00:08:01,520
work wait for the 80d discussion to

193
00:08:01,520 --> 00:08:03,199
adopt it as a working group document so

194
00:08:03,199 --> 00:08:06,800
we can actually go ahead with that

195
00:08:07,599 --> 00:08:09,360
all right so let's

196
00:08:09,360 --> 00:08:11,199
if there's nothing else i think we

197
00:08:11,199 --> 00:08:13,919
should start with an iptfs presentation

198
00:08:13,919 --> 00:08:16,000
i think christian if you start with on

199
00:08:16,000 --> 00:08:17,199
with

200
00:08:17,199 --> 00:08:18,879
your presentation first and i will jump

201
00:08:18,879 --> 00:08:21,360
in at one point uh to present the other

202
00:08:21,360 --> 00:08:25,240
things that i have there

203
00:08:26,400 --> 00:08:30,319
hi yeah that sounds good um

204
00:08:30,319 --> 00:08:32,000
okay the bars are moving so i think you

205
00:08:32,000 --> 00:08:34,719
guys can hear me

206
00:08:34,719 --> 00:08:37,599
uh all right so yeah um this is a

207
00:08:37,599 --> 00:08:41,360
presentation on the status of iptfs next

208
00:08:41,360 --> 00:08:43,279
slide please

209
00:08:43,279 --> 00:08:47,600
uh 2021 recap in february we did a we

210
00:08:47,600 --> 00:08:49,680
completed the working group last call

211
00:08:49,680 --> 00:08:50,560
um

212
00:08:50,560 --> 00:08:52,560
we received some post working class call

213
00:08:52,560 --> 00:08:54,720
comments uh we updated the document to

214
00:08:54,720 --> 00:08:55,760
o8

215
00:08:55,760 --> 00:08:57,839
this was from valerie wanting to change

216
00:08:57,839 --> 00:08:59,920
the language uh

217
00:08:59,920 --> 00:09:01,680
kind of like everywhere get to get away

218
00:09:01,680 --> 00:09:03,760
from iptfs and talk

219
00:09:03,760 --> 00:09:05,920
more to the um

220
00:09:05,920 --> 00:09:07,200
to you know to talk about the

221
00:09:07,200 --> 00:09:09,200
encapsulation as ag frag

222
00:09:09,200 --> 00:09:10,640
because it you know he felt it could be

223
00:09:10,640 --> 00:09:13,600
reused elsewhere um

224
00:09:13,600 --> 00:09:17,040
in april we submitted the draft uh

225
00:09:17,040 --> 00:09:18,399
write-up

226
00:09:18,399 --> 00:09:20,560
uh july we

227
00:09:20,560 --> 00:09:23,760
i did a update clarifying we had had one

228
00:09:23,760 --> 00:09:25,519
change earlier

229
00:09:25,519 --> 00:09:27,920
to talk about how

230
00:09:27,920 --> 00:09:30,720
the replay and reorder windows could be

231
00:09:30,720 --> 00:09:32,720
made the same because

232
00:09:32,720 --> 00:09:34,720
if your reorder window

233
00:09:34,720 --> 00:09:37,279
dropped packets who cares

234
00:09:37,279 --> 00:09:39,920
or or like vice versa but

235
00:09:39,920 --> 00:09:43,360
we needed to update that same text again

236
00:09:43,360 --> 00:09:46,240
because people might want larger um

237
00:09:46,240 --> 00:09:48,160
replay attack windows because they're

238
00:09:48,160 --> 00:09:51,040
very cheap right you can have 2k

239
00:09:51,040 --> 00:09:53,519
entries in there and it's not a lot of

240
00:09:53,519 --> 00:09:55,360
memory to keep track of that

241
00:09:55,360 --> 00:09:56,160
um

242
00:09:56,160 --> 00:09:57,920
but your reorder window generally you

243
00:09:57,920 --> 00:10:00,640
want to be small

244
00:10:00,640 --> 00:10:02,720
i think we've kind of reinforced that

245
00:10:02,720 --> 00:10:04,399
through multiple updates that the

246
00:10:04,399 --> 00:10:06,640
reorder window needs to be small

247
00:10:06,640 --> 00:10:07,920
um

248
00:10:07,920 --> 00:10:10,160
but yeah

249
00:10:10,160 --> 00:10:11,600
to the next

250
00:10:11,600 --> 00:10:14,480
bullet item in september we added and i

251
00:10:14,480 --> 00:10:16,800
i think this was probably the most

252
00:10:16,800 --> 00:10:19,120
important change in my opinion

253
00:10:19,120 --> 00:10:20,160
um

254
00:10:20,160 --> 00:10:22,399
we weren't you know we before we talked

255
00:10:22,399 --> 00:10:24,240
about uh you could you could use a drop

256
00:10:24,240 --> 00:10:27,920
timer if you wanted and based on um

257
00:10:27,920 --> 00:10:32,320
tarot's sort of analysis um

258
00:10:32,320 --> 00:10:33,680
you really don't want you know if you

259
00:10:33,680 --> 00:10:35,920
have a slow sending link even a medium

260
00:10:35,920 --> 00:10:38,079
sending a medium speed link or whatever

261
00:10:38,079 --> 00:10:39,680
if you have

262
00:10:39,680 --> 00:10:41,120
uh

263
00:10:41,120 --> 00:10:43,040
if you're just using the reorder window

264
00:10:43,040 --> 00:10:44,959
to drop packets

265
00:10:44,959 --> 00:10:47,600
uh then the sizer reorder window

266
00:10:47,600 --> 00:10:49,200
determines

267
00:10:49,200 --> 00:10:51,440
the amount of time that it takes to

268
00:10:51,440 --> 00:10:54,000
uh detect a lost packet so you know a

269
00:10:54,000 --> 00:10:55,839
lost packet could then

270
00:10:55,839 --> 00:10:57,839
incur a large delay

271
00:10:57,839 --> 00:11:00,640
in downstream packets um inner packet

272
00:11:00,640 --> 00:11:02,320
delivery

273
00:11:02,320 --> 00:11:03,200
so

274
00:11:03,200 --> 00:11:05,519
um

275
00:11:06,560 --> 00:11:08,880
so yeah so the drop time we ended we

276
00:11:08,880 --> 00:11:10,399
instead of saying talking about the drop

277
00:11:10,399 --> 00:11:13,279
timer hand waving at it we actually

278
00:11:13,279 --> 00:11:15,680
brought a mentioned it up front

279
00:11:15,680 --> 00:11:18,800
and furthermore recommended its use

280
00:11:18,800 --> 00:11:20,160
um

281
00:11:20,160 --> 00:11:21,440
you know

282
00:11:21,440 --> 00:11:23,440
this is it's important it's important to

283
00:11:23,440 --> 00:11:27,040
put a drop timer in um because it's it

284
00:11:27,040 --> 00:11:30,079
will then directly affect how long of a

285
00:11:30,079 --> 00:11:32,079
delay you're willing to take

286
00:11:32,079 --> 00:11:34,000
from a dropped packet

287
00:11:34,000 --> 00:11:35,440
um

288
00:11:35,440 --> 00:11:37,519
yeah and so that you know

289
00:11:37,519 --> 00:11:39,680
the the end result of this is that you

290
00:11:39,680 --> 00:11:42,240
just don't use reorder window as a way

291
00:11:42,240 --> 00:11:44,079
to detect packet loss you use a drop

292
00:11:44,079 --> 00:11:46,240
timer i you know i've implemented this

293
00:11:46,240 --> 00:11:47,120
and

294
00:11:47,120 --> 00:11:48,959
you don't actually have to use a timer

295
00:11:48,959 --> 00:11:51,200
right if you're using the you know the

296
00:11:51,200 --> 00:11:52,720
way the document talks about constant

297
00:11:52,720 --> 00:11:54,720
sun rate you can you could just have

298
00:11:54,720 --> 00:11:57,279
your drop timer be one packet gap

299
00:11:57,279 --> 00:11:58,160
right

300
00:11:58,160 --> 00:12:00,560
so you literally just you can have your

301
00:12:00,560 --> 00:12:02,720
window sitting there and if you get one

302
00:12:02,720 --> 00:12:05,200
out of order uh you consider any

303
00:12:05,200 --> 00:12:06,880
previous drop

304
00:12:06,880 --> 00:12:08,639
and that implements a drop timer of one

305
00:12:08,639 --> 00:12:11,120
gap interval so that's how we chose to

306
00:12:11,120 --> 00:12:12,800
implement it um but you can do it you

307
00:12:12,800 --> 00:12:15,839
can use a timer as well to do even uh

308
00:12:15,839 --> 00:12:17,839
shorter shorter delays

309
00:12:17,839 --> 00:12:20,720
i i felt like this was um

310
00:12:20,720 --> 00:12:22,480
what we needed to do i thought this

311
00:12:22,480 --> 00:12:24,639
handled everything um

312
00:12:24,639 --> 00:12:28,480
tarot didn't uh agree and um

313
00:12:28,480 --> 00:12:30,880
so we asked for an update uh eventually

314
00:12:30,880 --> 00:12:33,040
i just took a guess at what would uh

315
00:12:33,040 --> 00:12:35,360
sort of satisfy tarot i think i got

316
00:12:35,360 --> 00:12:40,000
close but i'm not no cigar um so 11 had

317
00:12:40,000 --> 00:12:42,639
a small well and i'll we'll highlight

318
00:12:42,639 --> 00:12:45,600
why in the next few slides um i put in

319
00:12:45,600 --> 00:12:48,000
some text which we'll go over

320
00:12:48,000 --> 00:12:50,480
and taro made a suggestion

321
00:12:50,480 --> 00:12:51,440
um

322
00:12:51,440 --> 00:12:53,760
changing a should in may

323
00:12:53,760 --> 00:12:55,680
and i think that's what this discussion

324
00:12:55,680 --> 00:12:57,519
is really going to be about um next

325
00:12:57,519 --> 00:13:00,079
slide please

326
00:13:01,200 --> 00:13:03,519
right so the last issue to resolve would

327
00:13:03,519 --> 00:13:06,959
be the difference between what's in 11

328
00:13:06,959 --> 00:13:08,320
um

329
00:13:08,320 --> 00:13:10,560
i mean we're happy to i'm happy to

330
00:13:10,560 --> 00:13:11,760
accept the

331
00:13:11,760 --> 00:13:14,560
the text as terrell put it with but i'd

332
00:13:14,560 --> 00:13:16,720
prefer to see it the should and maze

333
00:13:16,720 --> 00:13:18,959
change

334
00:13:18,959 --> 00:13:21,839
primarily to go back to what 11 says you

335
00:13:21,839 --> 00:13:24,399
know but using tarot's text

336
00:13:24,399 --> 00:13:26,320
it's a little bit more

337
00:13:26,320 --> 00:13:27,519
verbose

338
00:13:27,519 --> 00:13:29,040
and descriptive

339
00:13:29,040 --> 00:13:30,639
um

340
00:13:30,639 --> 00:13:33,120
so let's go to the next slide

341
00:13:33,120 --> 00:13:36,399
so in 11 this is the text we added um

342
00:13:36,399 --> 00:13:38,079
we say as an optimal optimization the

343
00:13:38,079 --> 00:13:40,560
receiver may transmit any fully formed

344
00:13:40,560 --> 00:13:42,160
inner packets

345
00:13:42,160 --> 00:13:44,160
uh prior to reordering the outer packets

346
00:13:44,160 --> 00:13:45,760
this just means that if i have a full

347
00:13:45,760 --> 00:13:48,320
packet no matter what order it comes in

348
00:13:48,320 --> 00:13:51,440
uh full inner packet i send it along

349
00:13:51,440 --> 00:13:53,360
we had this as a may

350
00:13:53,360 --> 00:13:55,199
so the next slide shows tarot's

351
00:13:55,199 --> 00:13:56,800
suggestion

352
00:13:56,800 --> 00:13:59,760
um this is the proposed text from tarot

353
00:13:59,760 --> 00:14:03,519
uh it starts off with that concept and

354
00:14:03,519 --> 00:14:06,000
it furthermore it's recommends it it

355
00:14:06,000 --> 00:14:08,639
says the receiver should process

356
00:14:08,639 --> 00:14:11,120
the payloads and send and as many

357
00:14:11,120 --> 00:14:13,760
incoming packets from it as possible

358
00:14:13,760 --> 00:14:15,600
um

359
00:14:15,600 --> 00:14:18,480
so in a perfect world where you don't

360
00:14:18,480 --> 00:14:21,199
have any any reordering or anything

361
00:14:21,199 --> 00:14:23,279
it looks the same

362
00:14:23,279 --> 00:14:25,120
that's one thing worth pointing out if

363
00:14:25,120 --> 00:14:27,279
we don't have reordering then both of

364
00:14:27,279 --> 00:14:29,279
these no matter what we pick it looks

365
00:14:29,279 --> 00:14:30,880
the same

366
00:14:30,880 --> 00:14:33,680
um but if we do have reordering

367
00:14:33,680 --> 00:14:35,760
then tarots will send

368
00:14:35,760 --> 00:14:38,240
some packets out of order to get them

369
00:14:38,240 --> 00:14:41,360
downstream faster

370
00:14:41,519 --> 00:14:42,639
and then

371
00:14:42,639 --> 00:14:44,720
taro i don't know what the next slide is

372
00:14:44,720 --> 00:14:46,560
do you want the

373
00:14:46,560 --> 00:14:48,560
yeah so let

374
00:14:48,560 --> 00:14:49,600
um

375
00:14:49,600 --> 00:14:51,440
yeah let's do your slides let's talk to

376
00:14:51,440 --> 00:14:52,880
your stuff

377
00:14:52,880 --> 00:14:55,040
all right

378
00:14:56,560 --> 00:14:58,800
yes here here's my so i made this kind

379
00:14:58,800 --> 00:15:01,040
of slide set to try to explain it a bit

380
00:15:01,040 --> 00:15:04,480
a bit better what this is and uh

381
00:15:04,480 --> 00:15:06,720
so

382
00:15:06,880 --> 00:15:09,760
so this is the original uh text or this

383
00:15:09,760 --> 00:15:11,440
the text actually

384
00:15:11,440 --> 00:15:13,199
uh this is the original text and one of

385
00:15:13,199 --> 00:15:14,720
the things their problem there is that

386
00:15:14,720 --> 00:15:16,639
there's a lot of places very attached

387
00:15:16,639 --> 00:15:17,920
way talking

388
00:15:17,920 --> 00:15:20,000
implying that you do like the last

389
00:15:20,000 --> 00:15:22,399
paragraph for example there was not

390
00:15:22,399 --> 00:15:24,720
clearly saying that it is true or may or

391
00:15:24,720 --> 00:15:27,040
what something and it was like uh not

392
00:15:27,040 --> 00:15:29,199
really going with the one where we say

393
00:15:29,199 --> 00:15:31,279
that of the optimal of optimization when

394
00:15:31,279 --> 00:15:33,199
you still say that we process the in

395
00:15:33,199 --> 00:15:34,800
order and in the inside that's why i

396
00:15:34,800 --> 00:15:36,480
wanted to rewrite most of these texts to

397
00:15:36,480 --> 00:15:37,360
be

398
00:15:37,360 --> 00:15:39,440
so that we actually have two different

399
00:15:39,440 --> 00:15:40,800
options

400
00:15:40,800 --> 00:15:41,680
so

401
00:15:41,680 --> 00:15:42,480
uh

402
00:15:42,480 --> 00:15:44,959
so like it says it implies it doesn't

403
00:15:44,959 --> 00:15:47,279
explicitly say it but it implies it in

404
00:15:47,279 --> 00:15:49,360
several places which was the

405
00:15:49,360 --> 00:15:52,240
original problem in the in the may or in

406
00:15:52,240 --> 00:15:54,240
the spring time was that i didn't really

407
00:15:54,240 --> 00:15:56,000
understand that but actually requiring

408
00:15:56,000 --> 00:15:57,040
that

409
00:15:57,040 --> 00:15:59,040
until when i finally understand that

410
00:15:59,040 --> 00:16:00,800
from the discussion with other people

411
00:16:00,800 --> 00:16:02,480
that actually does require that all the

412
00:16:02,480 --> 00:16:04,240
time and it takes this written in such

413
00:16:04,240 --> 00:16:05,680
way

414
00:16:05,680 --> 00:16:07,839
and and so so if you check out to check

415
00:16:07,839 --> 00:16:09,680
out the normal view normal flow when we

416
00:16:09,680 --> 00:16:11,839
have a pocket coming in so the o1 the

417
00:16:11,839 --> 00:16:14,320
blue one there is the

418
00:16:14,320 --> 00:16:16,160
this is like from the responder point of

419
00:16:16,160 --> 00:16:18,480
view so this all the whole text is in

420
00:16:18,480 --> 00:16:21,680
the responder uh uh you know processing

421
00:16:21,680 --> 00:16:24,240
time so we have one with this outer

422
00:16:24,240 --> 00:16:25,759
pocket which has

423
00:16:25,759 --> 00:16:27,839
two and half buckets in

424
00:16:27,839 --> 00:16:29,839
so when we get that one

425
00:16:29,839 --> 00:16:31,600
we can immediately send out the two

426
00:16:31,600 --> 00:16:33,759
inner packets that are complete

427
00:16:33,759 --> 00:16:35,519
we can't send of course the third one

428
00:16:35,519 --> 00:16:36,959
because that's not complete then we get

429
00:16:36,959 --> 00:16:39,839
the next frame and then we can

430
00:16:39,839 --> 00:16:42,079
send the third and fourth pocket out

431
00:16:42,079 --> 00:16:44,399
and and then we get the you know fourth

432
00:16:44,399 --> 00:16:46,880
third outer pocket we can again say that

433
00:16:46,880 --> 00:16:48,880
this is this is like what it happens so

434
00:16:48,880 --> 00:16:51,279
so it sends immediately completely fully

435
00:16:51,279 --> 00:16:52,800
packets out

436
00:16:52,800 --> 00:16:54,880
and this is fine everything works then

437
00:16:54,880 --> 00:16:56,639
we come to the if we have any kind of

438
00:16:56,639 --> 00:16:58,959
reordering happening there and now as

439
00:16:58,959 --> 00:17:00,639
it's in in order this is actually not

440
00:17:00,639 --> 00:17:02,800
the reorder isn't actually not that big

441
00:17:02,800 --> 00:17:06,160
issue so we have an og and oh

442
00:17:06,160 --> 00:17:09,520
two are changing places so we have an o3

443
00:17:09,520 --> 00:17:11,359
first and the o2

444
00:17:11,359 --> 00:17:13,679
in order we have to wait until we get to

445
00:17:13,679 --> 00:17:16,559
o2 and then we can process the

446
00:17:16,559 --> 00:17:19,039
inner three four and five

447
00:17:19,039 --> 00:17:21,280
we sent them all back to back

448
00:17:21,280 --> 00:17:24,079
when we finally get this o2

449
00:17:24,079 --> 00:17:27,119
if we do this in in immediate

450
00:17:27,119 --> 00:17:28,720
way

451
00:17:28,720 --> 00:17:31,440
immediately when we get this o3

452
00:17:31,440 --> 00:17:34,640
we can send the i5 out because it's it's

453
00:17:34,640 --> 00:17:37,840
already we have it completely

454
00:17:37,840 --> 00:17:40,880
and then when we get to o2 we send out

455
00:17:40,880 --> 00:17:41,600
the

456
00:17:41,600 --> 00:17:45,039
i3 and i4

457
00:17:45,200 --> 00:17:47,120
the difference there is mostly comes

458
00:17:47,120 --> 00:17:49,679
when when we have a lost pockets or if

459
00:17:49,679 --> 00:17:52,640
we have non-constant bit rate sending

460
00:17:52,640 --> 00:17:54,400
because as valerie was saying we

461
00:17:54,400 --> 00:17:56,080
actually want to be able to do this kind

462
00:17:56,080 --> 00:17:58,320
of things uh you know

463
00:17:58,320 --> 00:18:00,799
with non-constant bit rate and and the

464
00:18:00,799 --> 00:18:02,320
drop timer

465
00:18:02,320 --> 00:18:05,280
only starts when we get the o2

466
00:18:05,280 --> 00:18:07,840
so we when when we get this you know

467
00:18:07,840 --> 00:18:10,080
next bucket then we can start so if you

468
00:18:10,080 --> 00:18:12,080
have a lost pocket

469
00:18:12,080 --> 00:18:15,200
so we haven't lost frame here the o2 is

470
00:18:15,200 --> 00:18:16,160
lost

471
00:18:16,160 --> 00:18:17,360
okay

472
00:18:17,360 --> 00:18:19,679
if we do in order processing in o3 we

473
00:18:19,679 --> 00:18:22,559
notice that oh there is a you know frame

474
00:18:22,559 --> 00:18:24,080
missing

475
00:18:24,080 --> 00:18:24,960
we

476
00:18:24,960 --> 00:18:29,120
continue waiting for it in o4 we finally

477
00:18:29,120 --> 00:18:30,880
we realized that okay if we have a

478
00:18:30,880 --> 00:18:33,120
reorder winter of two or we have a drop

479
00:18:33,120 --> 00:18:35,360
timer of that long

480
00:18:35,360 --> 00:18:37,360
in o4 we actually realized that okay

481
00:18:37,360 --> 00:18:39,200
that was actually missing so we sent an

482
00:18:39,200 --> 00:18:40,480
o5

483
00:18:40,480 --> 00:18:42,960
inner five and six and so on out

484
00:18:42,960 --> 00:18:44,400
all the back to back

485
00:18:44,400 --> 00:18:48,240
uh the problem is that if the old tree

486
00:18:48,240 --> 00:18:51,520
doesn't if that comes much later like we

487
00:18:51,520 --> 00:18:54,640
are not sending contrast constant rate

488
00:18:54,640 --> 00:18:57,120
we are not really you know oh sorry

489
00:18:57,120 --> 00:18:59,280
actually oh four comes out

490
00:18:59,280 --> 00:19:01,840
so so it actually uh or if you have a

491
00:19:01,840 --> 00:19:04,240
longer like like we have here here is a

492
00:19:04,240 --> 00:19:05,760
longer if you have a replay window of

493
00:19:05,760 --> 00:19:07,600
reorder window of three

494
00:19:07,600 --> 00:19:10,799
we have to keep all of those uh o3 and

495
00:19:10,799 --> 00:19:13,840
o4 and o5 in memory until we get the

496
00:19:13,840 --> 00:19:16,880
enough or enough time from from last

497
00:19:16,880 --> 00:19:18,400
time

498
00:19:18,400 --> 00:19:19,600
and

499
00:19:19,600 --> 00:19:21,280
so we actually use much more memory and

500
00:19:21,280 --> 00:19:22,799
we cause delay

501
00:19:22,799 --> 00:19:26,160
and we have you know already lost frame

502
00:19:26,160 --> 00:19:28,160
so so it doesn't really

503
00:19:28,160 --> 00:19:30,080
yeah go ahead yeah i mean i wanted i

504
00:19:30,080 --> 00:19:31,360
wanted to let you go to the end but i

505
00:19:31,360 --> 00:19:33,039
have to point out that this is not

506
00:19:33,039 --> 00:19:35,280
considering a drop timer right we it's

507
00:19:35,280 --> 00:19:37,600
it's important no it's it's it's

508
00:19:37,600 --> 00:19:39,120
assuming that drop timer is actually

509
00:19:39,120 --> 00:19:41,280
larger than any of these

510
00:19:41,280 --> 00:19:43,679
i mean you're basically coming up if you

511
00:19:43,679 --> 00:19:45,520
if you're waiting for the reorder window

512
00:19:45,520 --> 00:19:48,480
to note o2 is not there that you can

513
00:19:48,480 --> 00:19:50,240
have this huge delay but that's why we

514
00:19:50,240 --> 00:19:51,679
put the recommendation for the drop

515
00:19:51,679 --> 00:19:53,280
timer yeah but

516
00:19:53,280 --> 00:19:55,200
the question there is what is suitable

517
00:19:55,200 --> 00:19:57,039
value for drop timer

518
00:19:57,039 --> 00:20:01,200
i have no idea oh three one packet gap

519
00:20:01,200 --> 00:20:03,360
but there is no packet caps if you if

520
00:20:03,360 --> 00:20:04,480
you are not if you are not using

521
00:20:04,480 --> 00:20:06,400
constant data rate what is the

522
00:20:06,400 --> 00:20:07,280
correct

523
00:20:07,280 --> 00:20:08,240
so

524
00:20:08,240 --> 00:20:10,320
yes in the text we say

525
00:20:10,320 --> 00:20:12,400
that that that i believe if not we

526
00:20:12,400 --> 00:20:13,760
should change the text but i believe the

527
00:20:13,760 --> 00:20:16,640
text says that the drop timer determines

528
00:20:16,640 --> 00:20:18,159
the delay

529
00:20:18,159 --> 00:20:20,240
right so whatever you're willing to

530
00:20:20,240 --> 00:20:22,960
accept as a delay

531
00:20:22,960 --> 00:20:25,039
that's the problem i have no idea what

532
00:20:25,039 --> 00:20:26,559
the delay i'm going to be accepting

533
00:20:26,559 --> 00:20:28,720
that's operational right i mean we don't

534
00:20:28,720 --> 00:20:30,799
you do you

535
00:20:30,799 --> 00:20:32,799
do you have so so what is your

536
00:20:32,799 --> 00:20:35,200
recommended drop timer timeout in your

537
00:20:35,200 --> 00:20:36,960
environment now

538
00:20:36,960 --> 00:20:39,120
how many milliseconds uh we use a

539
00:20:39,120 --> 00:20:42,240
constant send rate it's one packet gap

540
00:20:42,240 --> 00:20:45,039
and how much is one bucket cap it well

541
00:20:45,039 --> 00:20:46,559
that depends on how fast you make your

542
00:20:46,559 --> 00:20:49,280
tunnel right if it's a no but i i i mean

543
00:20:49,280 --> 00:20:51,679
i mean i want to have one size that one

544
00:20:51,679 --> 00:20:53,200
size does not fit all for the whole

545
00:20:53,200 --> 00:20:55,760
internet right if i have 100 if i have

546
00:20:55,760 --> 00:20:57,840
100 gig tunnel

547
00:20:57,840 --> 00:21:00,400
then one packet gap is tiny and that's

548
00:21:00,400 --> 00:21:02,320
still appropriate if i have a one

549
00:21:02,320 --> 00:21:06,400
megabyte tunnel then you know then a uh

550
00:21:06,400 --> 00:21:08,880
a hundred nanosecond gap you know is not

551
00:21:08,880 --> 00:21:11,440
appropriate for one megabyte uh one mega

552
00:21:11,440 --> 00:21:13,840
tunnel right the delay should be much

553
00:21:13,840 --> 00:21:15,919
bigger in our case it's exactly scales

554
00:21:15,919 --> 00:21:18,640
to one packet gap but you know people

555
00:21:18,640 --> 00:21:20,640
it determines you know that's a that's a

556
00:21:20,640 --> 00:21:22,960
knob and it's an obvious reason because

557
00:21:22,960 --> 00:21:23,760
it's

558
00:21:23,760 --> 00:21:26,880
my my understanding is that if you have

559
00:21:26,880 --> 00:21:27,679
an

560
00:21:27,679 --> 00:21:30,400
uh reordering happening

561
00:21:30,400 --> 00:21:33,039
real reordering that usually means that

562
00:21:33,039 --> 00:21:35,520
you have two parts

563
00:21:35,520 --> 00:21:37,919
that the network packets didn't take the

564
00:21:37,919 --> 00:21:40,400
same path if they take the same path

565
00:21:40,400 --> 00:21:42,720
there should be no reordering happening

566
00:21:42,720 --> 00:21:44,320
the only way you can actually have a you

567
00:21:44,320 --> 00:21:46,720
know reordering is when you have one

568
00:21:46,720 --> 00:21:48,799
pocket goes through different

569
00:21:48,799 --> 00:21:51,200
transit network than the other one

570
00:21:51,200 --> 00:21:52,960
and in that case

571
00:21:52,960 --> 00:21:54,159
the

572
00:21:54,159 --> 00:21:55,280
delay

573
00:21:55,280 --> 00:21:56,799
caused by that

574
00:21:56,799 --> 00:22:00,080
might be orders of magnitude bigger

575
00:22:00,080 --> 00:22:03,120
than what is uh you know your your you

576
00:22:03,120 --> 00:22:05,280
know 100 frames per second

577
00:22:05,280 --> 00:22:07,360
interval it might be like half a second

578
00:22:07,360 --> 00:22:10,159
or second instead of 10 milliseconds

579
00:22:10,159 --> 00:22:11,200
yes and

580
00:22:11,200 --> 00:22:13,520
and we speak to that in the later slides

581
00:22:13,520 --> 00:22:15,679
in the deck right but the re but that's

582
00:22:15,679 --> 00:22:16,960
why

583
00:22:16,960 --> 00:22:18,080
yes

584
00:22:18,080 --> 00:22:20,320
that's why you don't want reordering you

585
00:22:20,320 --> 00:22:21,919
don't put a single you know we've

586
00:22:21,919 --> 00:22:24,320
designed the internet routers i i'm a

587
00:22:24,320 --> 00:22:26,240
router guy right we've spent a huge

588
00:22:26,240 --> 00:22:28,559
amount of money research and whatnot i'm

589
00:22:28,559 --> 00:22:31,919
not reordering flows right because

590
00:22:31,919 --> 00:22:35,360
because tcp will not accept

591
00:22:35,360 --> 00:22:38,640
its packets where you have two three

592
00:22:38,640 --> 00:22:40,799
four five one

593
00:22:40,799 --> 00:22:43,440
six seven eight nine two no it does it

594
00:22:43,440 --> 00:22:45,679
it does it does it used to and it

595
00:22:45,679 --> 00:22:47,360
actually sends a selective action saying

596
00:22:47,360 --> 00:22:49,039
that one is missing

597
00:22:49,039 --> 00:22:51,600
if you if we i've got some read papers

598
00:22:51,600 --> 00:22:53,760
right tcp is not designed for that you

599
00:22:53,760 --> 00:22:56,080
want to crank down 100 gig tunnel to 24

600
00:22:56,080 --> 00:22:58,320
kilobit try that

601
00:22:58,320 --> 00:23:00,480
okay

602
00:23:03,520 --> 00:23:05,840
are you arguing are you arguing that we

603
00:23:05,840 --> 00:23:07,520
don't we haven't worked really hard in

604
00:23:07,520 --> 00:23:09,840
the internet to get rid of no that's

605
00:23:09,840 --> 00:23:11,840
that's why that's why we have that's why

606
00:23:11,840 --> 00:23:14,400
we are we are working very very fine

607
00:23:14,400 --> 00:23:17,120
with trying to get you know uh uh things

608
00:23:17,120 --> 00:23:19,280
like selective acts and so on working so

609
00:23:19,280 --> 00:23:21,280
in case that we actually

610
00:23:21,280 --> 00:23:23,039
for for the for the you know the

611
00:23:23,039 --> 00:23:25,600
responder point of view it's actually no

612
00:23:25,600 --> 00:23:27,679
difference whether actually one was

613
00:23:27,679 --> 00:23:30,240
re-transmitted or if one was actually

614
00:23:30,240 --> 00:23:31,039
you know

615
00:23:31,039 --> 00:23:33,039
uh just delayed because of the

616
00:23:33,039 --> 00:23:34,400
reordering

617
00:23:34,400 --> 00:23:36,480
so it actually said a half second you

618
00:23:36,480 --> 00:23:38,720
said a half second delay right i mean i

619
00:23:38,720 --> 00:23:41,039
i can't speak to that i you know half

620
00:23:41,039 --> 00:23:43,279
the second relays are very common for me

621
00:23:43,279 --> 00:23:45,440
at least you know in a single no no a

622
00:23:45,440 --> 00:23:47,440
half second reorder delay on a single

623
00:23:47,440 --> 00:23:49,200
flow

624
00:23:49,200 --> 00:23:51,279
no half a second delay for pockets uh

625
00:23:51,279 --> 00:23:53,760
randomly appearing actually one second

626
00:23:53,760 --> 00:23:57,039
delay for one link i invite in my in my

627
00:23:57,039 --> 00:23:58,000
house

628
00:23:58,000 --> 00:24:00,320
i see this very commonly that every

629
00:24:00,320 --> 00:24:02,480
every you know 10 seconds or something i

630
00:24:02,480 --> 00:24:05,440
haven't suddenly i have a one second

631
00:24:05,440 --> 00:24:08,799
longer delay on one bucket than than in

632
00:24:08,799 --> 00:24:11,279
in other packets and if i haven't if i

633
00:24:11,279 --> 00:24:13,679
have two if if i have two different uh

634
00:24:13,679 --> 00:24:15,520
links going out

635
00:24:15,520 --> 00:24:17,279
they are going to be using there's going

636
00:24:17,279 --> 00:24:19,919
to be one second or half a second of uh

637
00:24:19,919 --> 00:24:21,600
delay when will actually arrives if i

638
00:24:21,600 --> 00:24:23,600
would have multi holdings so you don't

639
00:24:23,600 --> 00:24:26,400
so you don't use five tuple to ecmp

640
00:24:26,400 --> 00:24:28,159
balance off those links you just

641
00:24:28,159 --> 00:24:31,760
randomly round robin your tcp across no

642
00:24:31,760 --> 00:24:32,880
as i say

643
00:24:32,880 --> 00:24:35,200
i i don't use that's one of the problems

644
00:24:35,200 --> 00:24:36,640
i i can't use the multiple homing

645
00:24:36,640 --> 00:24:38,799
because of the the leaks are different

646
00:24:38,799 --> 00:24:40,320
right that's what i'm saying people

647
00:24:40,320 --> 00:24:42,240
don't deploy those solutions right but

648
00:24:42,240 --> 00:24:44,799
you do you you you use them in case you

649
00:24:44,799 --> 00:24:46,400
have a backup leak

650
00:24:46,400 --> 00:24:48,480
okay but my point but anyway so that's

651
00:24:48,480 --> 00:24:50,159
something designed to get around this

652
00:24:50,159 --> 00:24:51,840
right we don't the internet is designed

653
00:24:51,840 --> 00:24:53,840
to not do this but but the difference is

654
00:24:53,840 --> 00:24:56,000
that if we actually you know don't use a

655
00:24:56,000 --> 00:24:57,760
drop driver but instead of when we

656
00:24:57,760 --> 00:24:59,360
actually have it you know when we

657
00:24:59,360 --> 00:25:02,159
received the all three packets

658
00:25:02,159 --> 00:25:04,400
and we we noticed that okay we have a

659
00:25:04,400 --> 00:25:05,360
fully

660
00:25:05,360 --> 00:25:08,480
full pocket of uh i5 there we can set it

661
00:25:08,480 --> 00:25:10,720
out immediately we only still need we

662
00:25:10,720 --> 00:25:12,640
need still need to you know

663
00:25:12,640 --> 00:25:15,520
buffer at the end of uh or beginning of

664
00:25:15,520 --> 00:25:16,799
the i3

665
00:25:16,799 --> 00:25:19,120
from the o1 because that's we haven't

666
00:25:19,120 --> 00:25:21,039
seen still seen that you know the end of

667
00:25:21,039 --> 00:25:22,720
the i3

668
00:25:22,720 --> 00:25:24,960
we have we seem to have missed it i4 of

669
00:25:24,960 --> 00:25:26,559
or whatever they're actually we don't

670
00:25:26,559 --> 00:25:27,919
know how many pockets we actually missed

671
00:25:27,919 --> 00:25:29,919
in the big beginning uh in the middle of

672
00:25:29,919 --> 00:25:31,120
o2

673
00:25:31,120 --> 00:25:33,600
but then when we get o4

674
00:25:33,600 --> 00:25:35,919
we see okay yes we can say and now if

675
00:25:35,919 --> 00:25:40,240
the o2 arrives like two seconds later

676
00:25:40,240 --> 00:25:43,440
we have only buffered the i3

677
00:25:43,440 --> 00:25:45,440
we have very limited limited buffers in

678
00:25:45,440 --> 00:25:46,960
the memory because we only have to

679
00:25:46,960 --> 00:25:49,679
buffer those fragments that are part of

680
00:25:49,679 --> 00:25:51,039
the missing

681
00:25:51,039 --> 00:25:51,919
frame

682
00:25:51,919 --> 00:25:54,080
we don't have to buffer everything we

683
00:25:54,080 --> 00:25:56,400
only have to buffer that one

684
00:25:56,400 --> 00:25:58,880
piece that was actually missing

685
00:25:58,880 --> 00:26:00,640
or or that the pieces of that pocket

686
00:26:00,640 --> 00:26:03,440
that is missing so we had you know for

687
00:26:03,440 --> 00:26:04,559
each

688
00:26:04,559 --> 00:26:06,080
frame that we are actually missing we

689
00:26:06,080 --> 00:26:07,520
actually only need to buffer a very

690
00:26:07,520 --> 00:26:10,559
small amount of time and we are not uh

691
00:26:10,559 --> 00:26:12,880
tied to the fact that oh we are sending

692
00:26:12,880 --> 00:26:14,880
constant fact of course that uh you know

693
00:26:14,880 --> 00:26:17,679
these because in some cases it actually

694
00:26:17,679 --> 00:26:19,279
yeah yeah we might still have to have a

695
00:26:19,279 --> 00:26:21,279
drop time timer and so on

696
00:26:21,279 --> 00:26:22,159
uh

697
00:26:22,159 --> 00:26:24,000
the other thing is that there is you

698
00:26:24,000 --> 00:26:26,080
know

699
00:26:26,080 --> 00:26:29,360
uh the ipsec does not

700
00:26:29,360 --> 00:26:32,080
provide in order delivery

701
00:26:32,080 --> 00:26:34,159
that's not guaranteed

702
00:26:34,159 --> 00:26:36,880
if we turn off ipsec

703
00:26:36,880 --> 00:26:39,039
in in for example in this reordering

704
00:26:39,039 --> 00:26:40,240
case

705
00:26:40,240 --> 00:26:42,559
we are going to get these packets in

706
00:26:42,559 --> 00:26:44,240
in wrong order

707
00:26:44,240 --> 00:26:46,480
if we have a reordering happening

708
00:26:46,480 --> 00:26:48,559
i don't think it's ipsec

709
00:26:48,559 --> 00:26:52,000
uh point of or oh sorry iptfs person of

710
00:26:52,000 --> 00:26:53,760
the ipsec should be fixing that

711
00:26:53,760 --> 00:26:56,720
reordering in general case if we have an

712
00:26:56,720 --> 00:26:59,360
ipsec without iptfs we can't fix the

713
00:26:59,360 --> 00:27:00,720
reordering because we don't know it

714
00:27:00,720 --> 00:27:01,679
happened

715
00:27:01,679 --> 00:27:03,760
we have no idea of knowing it whether it

716
00:27:03,760 --> 00:27:05,520
happened or not sequels numbers doesn't

717
00:27:05,520 --> 00:27:07,760
allow us to do that you know iptf has

718
00:27:07,760 --> 00:27:09,120
been defined so that the sequence

719
00:27:09,120 --> 00:27:11,279
numbers allows us to do that

720
00:27:11,279 --> 00:27:13,120
but that's a new service we are

721
00:27:13,120 --> 00:27:16,159
providing which is not part of the basic

722
00:27:16,159 --> 00:27:20,000
you know no ipsec case or it's not a

723
00:27:20,000 --> 00:27:23,760
case when you have an non iptfs

724
00:27:23,760 --> 00:27:25,679
so that's why i think it's important we

725
00:27:25,679 --> 00:27:27,200
don't actually

726
00:27:27,200 --> 00:27:31,279
uh try to fix something that wasn't

727
00:27:31,279 --> 00:27:34,399
problem before but ip ipsec also doesn't

728
00:27:34,399 --> 00:27:36,640
let you aggregate uh

729
00:27:36,640 --> 00:27:38,960
20 40 byte packets in a frame either

730
00:27:38,960 --> 00:27:40,640
right i mean we're bringing you we're

731
00:27:40,640 --> 00:27:42,799
bringing new technology here we are

732
00:27:42,799 --> 00:27:44,880
bringing it back but

733
00:27:44,880 --> 00:27:46,480
okay it's not just about reordering

734
00:27:46,480 --> 00:27:48,640
that's just falls out from it but part

735
00:27:48,640 --> 00:27:50,720
of this that appeals to people the

736
00:27:50,720 --> 00:27:52,159
reason valerie and other people are

737
00:27:52,159 --> 00:27:54,480
looking at this in a non-constant send

738
00:27:54,480 --> 00:27:57,200
rate is because it solves the mtu issue

739
00:27:57,200 --> 00:27:59,520
right yeah and part of that is is you

740
00:27:59,520 --> 00:28:01,200
know part it's just all part of a

741
00:28:01,200 --> 00:28:03,440
package the ordering drops out of that

742
00:28:03,440 --> 00:28:06,240
and as you said on slide 14 you

743
00:28:06,240 --> 00:28:07,520
i want to just point out when you were

744
00:28:07,520 --> 00:28:10,080
at slide 14 you said if we don't have a

745
00:28:10,080 --> 00:28:11,440
drop timer

746
00:28:11,440 --> 00:28:14,080
we are recommending a drop timer we are

747
00:28:14,080 --> 00:28:16,399
recommending it so it's it's so just

748
00:28:16,399 --> 00:28:18,799
keep that in mind you know as well

749
00:28:18,799 --> 00:28:20,480
about this i want everyone to think

750
00:28:20,480 --> 00:28:22,320
about the fact that a lot of the

751
00:28:22,320 --> 00:28:24,080
problems being described here have to do

752
00:28:24,080 --> 00:28:26,960
with using reorder window as a drop as a

753
00:28:26,960 --> 00:28:28,640
drop detection and we are not

754
00:28:28,640 --> 00:28:31,360
recommending that yeah so we probably

755
00:28:31,360 --> 00:28:33,039
recommended a solution to get away from

756
00:28:33,039 --> 00:28:35,440
this problem so so so you're effecting

757
00:28:35,440 --> 00:28:38,080
getting rid of the reordering window uh

758
00:28:38,080 --> 00:28:40,720
in in in number of pockets you are only

759
00:28:40,720 --> 00:28:43,840
using it as an you know number of uh

760
00:28:43,840 --> 00:28:46,480
timer but i saying that define your

761
00:28:46,480 --> 00:28:48,240
that's either this quote

762
00:28:48,240 --> 00:28:50,240
i'll tell you why we use it for exactly

763
00:28:50,240 --> 00:28:52,480
the case you talked about right when we

764
00:28:52,480 --> 00:28:54,399
when people want to use this

765
00:28:54,399 --> 00:28:56,880
for either you know well one line rate

766
00:28:56,880 --> 00:28:58,720
stuff right where there there is no

767
00:28:58,720 --> 00:29:00,799
packet gap or were they not doing

768
00:29:00,799 --> 00:29:02,480
constant sunbreak like people that want

769
00:29:02,480 --> 00:29:05,039
to use it just for mtu uh

770
00:29:05,039 --> 00:29:07,679
solutions right where packets come

771
00:29:07,679 --> 00:29:09,120
whenever they come

772
00:29:09,120 --> 00:29:10,480
right

773
00:29:10,480 --> 00:29:12,480
that's why the reorder window is useful

774
00:29:12,480 --> 00:29:14,080
there because you're willing to wait a

775
00:29:14,080 --> 00:29:16,240
little time to get out of order delivery

776
00:29:16,240 --> 00:29:17,520
right because i got pack it pack a

777
00:29:17,520 --> 00:29:19,840
packet and then a big pause those three

778
00:29:19,840 --> 00:29:22,080
packets might arrive out of order we a

779
00:29:22,080 --> 00:29:23,919
reorder window makes sense then which

780
00:29:23,919 --> 00:29:26,559
that reorder window will get it will it

781
00:29:26,559 --> 00:29:29,200
will put things in order before the drop

782
00:29:29,200 --> 00:29:30,799
timer hits because those packets are

783
00:29:30,799 --> 00:29:32,159
coming back to back they're just

784
00:29:32,159 --> 00:29:33,760
slightly reordered because they went out

785
00:29:33,760 --> 00:29:36,159
of you know whatever cues slightly

786
00:29:36,159 --> 00:29:38,559
behind each other so the the reorder

787
00:29:38,559 --> 00:29:40,159
window still makes sense but only in

788
00:29:40,159 --> 00:29:42,159
these cases where you know where the

789
00:29:42,159 --> 00:29:44,080
drop timer doesn't fire so when you're

790
00:29:44,080 --> 00:29:46,159
pointing out that oh well now you're

791
00:29:46,159 --> 00:29:48,320
just making the reorder window one slot

792
00:29:48,320 --> 00:29:50,799
right that's only a constant send rate

793
00:29:50,799 --> 00:29:53,039
right so for all these other use cases a

794
00:29:53,039 --> 00:29:54,799
drop timer with a reorder window still

795
00:29:54,799 --> 00:29:55,919
makes sense

796
00:29:55,919 --> 00:29:58,320
and it doesn't incur these problems yeah

797
00:29:58,320 --> 00:29:59,760
okay so there's other people in the

798
00:29:59,760 --> 00:30:02,159
queue let's uh allow them to go first

799
00:30:02,159 --> 00:30:04,320
let's let's join the discussion

800
00:30:04,320 --> 00:30:05,279
yeah

801
00:30:05,279 --> 00:30:07,039
okay so i was

802
00:30:07,039 --> 00:30:08,960
trying to take a few notes

803
00:30:08,960 --> 00:30:10,799
and

804
00:30:10,799 --> 00:30:12,480
there seems like there may be a couple

805
00:30:12,480 --> 00:30:14,320
of topics that we hopefully could

806
00:30:14,320 --> 00:30:16,240
disentangle

807
00:30:16,240 --> 00:30:18,080
and make sure we're not

808
00:30:18,080 --> 00:30:20,840
trying to over conflate too much

809
00:30:20,840 --> 00:30:24,799
so uh let's see christian of course was

810
00:30:24,799 --> 00:30:26,559
talking mostly about the environment

811
00:30:26,559 --> 00:30:28,559
where you are doing the constant send

812
00:30:28,559 --> 00:30:29,520
rate

813
00:30:29,520 --> 00:30:32,320
and so that your drop timer has a fairly

814
00:30:32,320 --> 00:30:34,480
natural setting in terms of one

815
00:30:34,480 --> 00:30:36,880
inter-packet window

816
00:30:36,880 --> 00:30:38,080
and i know that

817
00:30:38,080 --> 00:30:40,320
turo is at least partially considering

818
00:30:40,320 --> 00:30:42,159
the case where you're not at the

819
00:30:42,159 --> 00:30:44,960
constant bit rate and so you might not

820
00:30:44,960 --> 00:30:46,480
have this natural setting with the drop

821
00:30:46,480 --> 00:30:47,600
timer

822
00:30:47,600 --> 00:30:48,480
uh

823
00:30:48,480 --> 00:30:52,320
your first could still use one and the

824
00:30:52,320 --> 00:30:54,240
the right setting value for the drop

825
00:30:54,240 --> 00:30:56,240
timer is an operational parameter that

826
00:30:56,240 --> 00:30:57,919
you we may not have the right guidance

827
00:30:57,919 --> 00:30:59,120
for right now

828
00:30:59,120 --> 00:31:00,640
but we could still say that you would

829
00:31:00,640 --> 00:31:02,240
want to use one

830
00:31:02,240 --> 00:31:03,440
so i guess

831
00:31:03,440 --> 00:31:05,120
one thing i wanted to

832
00:31:05,120 --> 00:31:07,679
to jump in and sort of uh

833
00:31:07,679 --> 00:31:10,399
focus the discussion was to

834
00:31:10,399 --> 00:31:11,279
make sure that we were sort of

835
00:31:11,279 --> 00:31:14,159
considering both of those cases i think

836
00:31:14,159 --> 00:31:15,360
in the

837
00:31:15,360 --> 00:31:17,120
the stuff that happened after i joined

838
00:31:17,120 --> 00:31:18,640
the queue i think that was starting to

839
00:31:18,640 --> 00:31:19,440
happen

840
00:31:19,440 --> 00:31:20,880
that we're making sure we consider both

841
00:31:20,880 --> 00:31:23,679
the constant flow constant rate case and

842
00:31:23,679 --> 00:31:24,480
the

843
00:31:24,480 --> 00:31:26,640
the

844
00:31:26,799 --> 00:31:30,840
sort of more generic egg frag uscapes

845
00:31:30,840 --> 00:31:34,159
uh and

846
00:31:34,159 --> 00:31:35,760
let's see i think also christian you're

847
00:31:35,760 --> 00:31:37,679
doing a great job picking this up uh

848
00:31:37,679 --> 00:31:39,519
right before i jumped in

849
00:31:39,519 --> 00:31:41,440
to point out that uh

850
00:31:41,440 --> 00:31:42,559
you can have a little bit of a

851
00:31:42,559 --> 00:31:45,200
reordering window that performs sort of

852
00:31:45,200 --> 00:31:46,960
a separate function than the drop timer

853
00:31:46,960 --> 00:31:48,320
itself does

854
00:31:48,320 --> 00:31:50,240
and so i think i was just doing some

855
00:31:50,240 --> 00:31:51,679
notes as you finished up like we might

856
00:31:51,679 --> 00:31:53,760
have a very fairly small

857
00:31:53,760 --> 00:31:56,480
reorder window or rear time interval and

858
00:31:56,480 --> 00:31:58,000
then like the drop

859
00:31:58,000 --> 00:32:00,960
timer would be significantly bigger than

860
00:32:00,960 --> 00:32:02,240
that i guess

861
00:32:02,240 --> 00:32:03,919
and so you would still have the ability

862
00:32:03,919 --> 00:32:05,919
to do a little bit of uh

863
00:32:05,919 --> 00:32:08,000
reordering fix up

864
00:32:08,000 --> 00:32:10,399
before the uh the drop timer would kick

865
00:32:10,399 --> 00:32:12,240
in and that's that's what i heard you

866
00:32:12,240 --> 00:32:14,080
saying sing

867
00:32:14,080 --> 00:32:16,399
when you in fact you when you have the

868
00:32:16,399 --> 00:32:18,720
your reorder window can be uh big then

869
00:32:18,720 --> 00:32:20,240
because you're gonna you're not gonna

870
00:32:20,240 --> 00:32:22,960
wait because you drop right

871
00:32:22,960 --> 00:32:24,960
you drop on the timer so

872
00:32:24,960 --> 00:32:26,960
the reorder window then is just it's

873
00:32:26,960 --> 00:32:28,720
really just a function of

874
00:32:28,720 --> 00:32:30,799
how many packets you're willing to you

875
00:32:30,799 --> 00:32:32,880
know wait for but you're never waiting

876
00:32:32,880 --> 00:32:35,120
more than the drop timer so the drop

877
00:32:35,120 --> 00:32:36,799
timer is really the thing that's

878
00:32:36,799 --> 00:32:39,039
determining how the delay

879
00:32:39,039 --> 00:32:41,039
that's why i said if the text doesn't

880
00:32:41,039 --> 00:32:42,880
make that point

881
00:32:42,880 --> 00:32:44,799
we should make sure it does it

882
00:32:44,799 --> 00:32:47,039
it it it no it doesn't actually and one

883
00:32:47,039 --> 00:32:49,120
of the things that's actually is what my

884
00:32:49,120 --> 00:32:50,880
when i proposed in one of the earlier

885
00:32:50,880 --> 00:32:52,880
emails was the hybrid mode

886
00:32:52,880 --> 00:32:55,200
where where we actually so we have a

887
00:32:55,200 --> 00:32:57,919
certain value where we assume that we

888
00:32:57,919 --> 00:32:59,679
have a very short you know

889
00:32:59,679 --> 00:33:01,600
timer it's not a drop timer because drop

890
00:33:01,600 --> 00:33:03,360
timer is actually wrong term because we

891
00:33:03,360 --> 00:33:05,279
are not dropping the frame at that point

892
00:33:05,279 --> 00:33:07,840
we assume that the frame might have been

893
00:33:07,840 --> 00:33:10,158
dropped

894
00:33:16,080 --> 00:33:17,519
would actually imply that we had dropped

895
00:33:17,519 --> 00:33:18,960
all of the frames that were actually you

896
00:33:18,960 --> 00:33:20,240
know uh

897
00:33:20,240 --> 00:33:22,080
assuming to be dropped and forget

898
00:33:22,080 --> 00:33:23,679
everything from that we don't want to do

899
00:33:23,679 --> 00:33:26,480
that we want to just say okay after this

900
00:33:26,480 --> 00:33:28,240
time we assume it's the bracket first

901
00:33:28,240 --> 00:33:29,200
lost

902
00:33:29,200 --> 00:33:30,960
the lost time rejection could happen so

903
00:33:30,960 --> 00:33:32,320
we have a lost timer after this we

904
00:33:32,320 --> 00:33:34,480
assumed it was lost and we sent packets

905
00:33:34,480 --> 00:33:37,039
out immediately after that we can still

906
00:33:37,039 --> 00:33:38,880
have a much larger

907
00:33:38,880 --> 00:33:41,519
reorder window which actually means that

908
00:33:41,519 --> 00:33:43,840
we actually keep the you know parts of

909
00:33:43,840 --> 00:33:46,399
the o1 that hasn't been sent out like

910
00:33:46,399 --> 00:33:48,080
the e3

911
00:33:48,080 --> 00:33:49,679
we can keep that for you know much

912
00:33:49,679 --> 00:33:51,440
longer time because that's very short

913
00:33:51,440 --> 00:33:52,399
amount of

914
00:33:52,399 --> 00:33:55,440
small memory and then when we finally if

915
00:33:55,440 --> 00:33:58,240
we ever happen to get the o2

916
00:33:58,240 --> 00:34:00,320
then we can actually set it out out of

917
00:34:00,320 --> 00:34:02,559
order now because

918
00:34:02,559 --> 00:34:04,559
because it's outside the drop you know

919
00:34:04,559 --> 00:34:07,519
this lost timer but inside the

920
00:34:07,519 --> 00:34:09,679
re ordering window

921
00:34:09,679 --> 00:34:11,760
hey taro can we move to back to my

922
00:34:11,760 --> 00:34:13,918
slides because uh you know it i think

923
00:34:13,918 --> 00:34:15,679
where benjamin was going

924
00:34:15,679 --> 00:34:18,239
you know we have a solution here right

925
00:34:18,239 --> 00:34:21,280
which is uh oh backwards yeah back okay

926
00:34:21,280 --> 00:34:22,800
back

927
00:34:22,800 --> 00:34:24,960
back uh it's right here

928
00:34:24,960 --> 00:34:26,639
yeah

929
00:34:26,639 --> 00:34:29,199
this is what loop

930
00:34:29,199 --> 00:34:31,199
but but actually actually if ben wants

931
00:34:31,199 --> 00:34:33,280
to finish first or

932
00:34:33,280 --> 00:34:35,119
yeah but ben can you take a look at that

933
00:34:35,119 --> 00:34:37,440
because we think that we're close right

934
00:34:37,440 --> 00:34:39,599
so we think the resolution here is

935
00:34:39,599 --> 00:34:41,359
really just about where the shoulds and

936
00:34:41,359 --> 00:34:44,480
maze go ontario's text

937
00:34:44,480 --> 00:34:46,399
right and one of the things i wanted to

938
00:34:46,399 --> 00:34:48,480
say was that uh

939
00:34:48,480 --> 00:34:50,639
we have some good thoughts about this

940
00:34:50,639 --> 00:34:51,359
but

941
00:34:51,359 --> 00:34:53,199
it's also possible that people in the

942
00:34:53,199 --> 00:34:54,480
broader itf are going to have some

943
00:34:54,480 --> 00:34:56,800
thoughts on this and so maybe one option

944
00:34:56,800 --> 00:34:58,720
to keep in mind is like put a note in

945
00:34:58,720 --> 00:35:00,800
the document

946
00:35:00,800 --> 00:35:02,880
we had a long discussion about this

947
00:35:02,880 --> 00:35:04,640
we could go either way you know let's

948
00:35:04,640 --> 00:35:06,079
get some feedback as part of the last

949
00:35:06,079 --> 00:35:08,240
call we could you know for example

950
00:35:08,240 --> 00:35:10,800
specifically call it out to the um

951
00:35:10,800 --> 00:35:14,160
tsv area directorate review

952
00:35:14,160 --> 00:35:16,800
uh and say like

953
00:35:16,800 --> 00:35:19,760
we can as a working group

954
00:35:19,760 --> 00:35:24,000
reach you know a tentative conclusion or

955
00:35:24,000 --> 00:35:25,200
a set of

956
00:35:25,200 --> 00:35:27,280
just two things that we we could perhaps

957
00:35:27,280 --> 00:35:28,720
be happy with either of them and get

958
00:35:28,720 --> 00:35:30,640
more feedback uh later in the review

959
00:35:30,640 --> 00:35:31,760
process

960
00:35:31,760 --> 00:35:34,079
okay so the bottom point says like make

961
00:35:34,079 --> 00:35:36,000
them both maze in a configuration that

962
00:35:36,000 --> 00:35:38,160
we're not locked into either behavior

963
00:35:38,160 --> 00:35:40,079
i mean if we're gonna i i don't think we

964
00:35:40,079 --> 00:35:42,320
should hold it up for a big long you

965
00:35:42,320 --> 00:35:45,040
know if we we're not locking anybody's

966
00:35:45,040 --> 00:35:47,440
behavior out then i mean uh

967
00:35:47,440 --> 00:35:48,800
rather than just keep going through

968
00:35:48,800 --> 00:35:50,880
reviews and reviews let's just allow

969
00:35:50,880 --> 00:35:53,359
both behaviors and let the configuration

970
00:35:53,359 --> 00:35:56,000
stand and then you can have operational

971
00:35:56,000 --> 00:35:58,320
experience down the line right because

972
00:35:58,320 --> 00:36:00,240
people learn oh i you know you should

973
00:36:00,240 --> 00:36:01,440
really set it for this in this

974
00:36:01,440 --> 00:36:03,280
environment and you should set it there

975
00:36:03,280 --> 00:36:05,119
for that environment but we can't just

976
00:36:05,119 --> 00:36:07,520
wait you know the research is we can't

977
00:36:07,520 --> 00:36:08,880
just wait for a bunch of research to

978
00:36:08,880 --> 00:36:09,920
happen

979
00:36:09,920 --> 00:36:12,400
you know before we publish a working you

980
00:36:12,400 --> 00:36:14,079
know we have working solutions here

981
00:36:14,079 --> 00:36:15,920
let's get them out i mean that's how we

982
00:36:15,920 --> 00:36:17,839
do it in the routing area generally when

983
00:36:17,839 --> 00:36:19,599
we have two working solutions and we

984
00:36:19,599 --> 00:36:21,119
can't come to an agreement on which one

985
00:36:21,119 --> 00:36:23,280
is better we generally throw a

986
00:36:23,280 --> 00:36:25,040
configuration knob at it and say you

987
00:36:25,040 --> 00:36:27,760
know let let operational experience

988
00:36:27,760 --> 00:36:28,800
dictate

989
00:36:28,800 --> 00:36:30,480
the correct solution

990
00:36:30,480 --> 00:36:32,320
so i think that's what the second option

991
00:36:32,320 --> 00:36:34,000
there does

992
00:36:34,000 --> 00:36:35,839
it really doesn't lock us into anything

993
00:36:35,839 --> 00:36:38,640
right it allows both behaviors

994
00:36:38,640 --> 00:36:40,640
and it allows people to you know pick

995
00:36:40,640 --> 00:36:42,320
which one works seems to work best for

996
00:36:42,320 --> 00:36:45,040
them and eventually we might you know

997
00:36:45,040 --> 00:36:47,200
learn that hey this one is always the

998
00:36:47,200 --> 00:36:49,760
better one or 90 of the time this one's

999
00:36:49,760 --> 00:36:50,880
the better one

1000
00:36:50,880 --> 00:36:54,240
but um yeah i think that's what what

1001
00:36:54,240 --> 00:36:55,680
you're going for

1002
00:36:55,680 --> 00:36:57,680
then yeah i always feel a little bit

1003
00:36:57,680 --> 00:36:59,520
uncomfortable when i see drafts coming

1004
00:36:59,520 --> 00:37:01,200
through you know you mentioned the

1005
00:37:01,200 --> 00:37:02,960
routing area which does this a fair

1006
00:37:02,960 --> 00:37:04,240
amount

1007
00:37:04,240 --> 00:37:06,320
and you might personally prefer if we

1008
00:37:06,320 --> 00:37:07,440
could

1009
00:37:07,440 --> 00:37:09,119
pick a single solution that we know

1010
00:37:09,119 --> 00:37:10,800
we're happy with but i recognize that

1011
00:37:10,800 --> 00:37:13,119
sometimes we can't and i think

1012
00:37:13,119 --> 00:37:15,599
i can't remember actually any times

1013
00:37:15,599 --> 00:37:17,520
where something came in uh through the

1014
00:37:17,520 --> 00:37:20,240
isg review that had multiple options

1015
00:37:20,240 --> 00:37:22,079
and we were able to say no you don't

1016
00:37:22,079 --> 00:37:23,280
actually need all these options we

1017
00:37:23,280 --> 00:37:24,720
should cut it down

1018
00:37:24,720 --> 00:37:26,079
right it's a little bit impressive it's

1019
00:37:26,079 --> 00:37:29,760
like 640k is enough ram right i mean

1020
00:37:29,760 --> 00:37:31,280
if sometimes when you make a choice you

1021
00:37:31,280 --> 00:37:32,720
make the wrong choice

1022
00:37:32,720 --> 00:37:35,280
and then you're in trouble

1023
00:37:35,280 --> 00:37:37,280
ideally we could have guidance well in

1024
00:37:37,280 --> 00:37:39,520
this case in these cases you use

1025
00:37:39,520 --> 00:37:41,760
one configuration in those other cases

1026
00:37:41,760 --> 00:37:44,079
use the other configuration so i'd like

1027
00:37:44,079 --> 00:37:45,440
to reorder the

1028
00:37:45,440 --> 00:37:46,320
the

1029
00:37:46,320 --> 00:37:49,520
cube just because blue burgers text is

1030
00:37:49,520 --> 00:37:51,599
on screen so i'd like you to go before

1031
00:37:51,599 --> 00:37:52,720
valerie

1032
00:37:52,720 --> 00:37:54,640
yeah let's let's go ahead and do that i

1033
00:37:54,640 --> 00:37:56,640
will rejoin the queue and make a couple

1034
00:37:56,640 --> 00:37:58,640
points later

1035
00:37:58,640 --> 00:38:00,640
all right well uh thanks for letting me

1036
00:38:00,640 --> 00:38:02,720
uh go out of cue i would have been fine

1037
00:38:02,720 --> 00:38:05,200
sticking behind valerie but uh thanks i

1038
00:38:05,200 --> 00:38:06,720
i was actually going to go back to a

1039
00:38:06,720 --> 00:38:08,800
point that tarot made i think is really

1040
00:38:08,800 --> 00:38:10,160
the critical one

1041
00:38:10,160 --> 00:38:12,400
is that um

1042
00:38:12,400 --> 00:38:15,119
when these weird delays happen as he

1043
00:38:15,119 --> 00:38:16,720
talks about you know your experience at

1044
00:38:16,720 --> 00:38:20,000
the edge your protocols are built today

1045
00:38:20,000 --> 00:38:21,680
to recover from them

1046
00:38:21,680 --> 00:38:24,480
what they are not always built to do is

1047
00:38:24,480 --> 00:38:27,359
handle massively out of order packets

1048
00:38:27,359 --> 00:38:28,720
and i've seen

1049
00:38:28,720 --> 00:38:31,359
certain transport protocols that will

1050
00:38:31,359 --> 00:38:34,079
basically do a connection reset when

1051
00:38:34,079 --> 00:38:35,520
they get something that's too far out of

1052
00:38:35,520 --> 00:38:36,480
window

1053
00:38:36,480 --> 00:38:38,640
uh out too far delay sometimes they

1054
00:38:38,640 --> 00:38:40,240
think it's actually some form of delay

1055
00:38:40,240 --> 00:38:41,280
attack

1056
00:38:41,280 --> 00:38:42,240
um

1057
00:38:42,240 --> 00:38:43,920
and

1058
00:38:43,920 --> 00:38:45,440
so i think you know

1059
00:38:45,440 --> 00:38:47,920
going to a mechanism where we experience

1060
00:38:47,920 --> 00:38:50,800
it today is safe you know adding some

1061
00:38:50,800 --> 00:38:53,200
delay is something that the internet is

1062
00:38:53,200 --> 00:38:56,000
built on today so that's a safe approach

1063
00:38:56,000 --> 00:38:57,200
adding

1064
00:38:57,200 --> 00:39:00,079
amplifying reordering i think is a risky

1065
00:39:00,079 --> 00:39:03,200
approach for many transport protocols

1066
00:39:03,200 --> 00:39:06,160
and at least it requires some good uh

1067
00:39:06,160 --> 00:39:09,440
research exploration experimentation we

1068
00:39:09,440 --> 00:39:12,000
found one paper which talked about tcp

1069
00:39:12,000 --> 00:39:14,000
having a really hard time we get two out

1070
00:39:14,000 --> 00:39:14,960
of order

1071
00:39:14,960 --> 00:39:18,480
and the because we have an amplifying

1072
00:39:18,480 --> 00:39:19,520
effect

1073
00:39:19,520 --> 00:39:21,280
um with the reordering because we're

1074
00:39:21,280 --> 00:39:23,200
carrying multiple packets you know we

1075
00:39:23,200 --> 00:39:25,119
might end up with lots of acts out of

1076
00:39:25,119 --> 00:39:26,960
order you know a big chunk of acts or a

1077
00:39:26,960 --> 00:39:29,280
big chunk of small data out of order and

1078
00:39:29,280 --> 00:39:30,560
we just don't know what's going to

1079
00:39:30,560 --> 00:39:32,400
happen so

1080
00:39:32,400 --> 00:39:34,320
from my perspective it seems really

1081
00:39:34,320 --> 00:39:37,760
risky to recommend that as it should

1082
00:39:37,760 --> 00:39:40,240
and i think we have to allow for

1083
00:39:40,240 --> 00:39:43,280
the operational experience the market

1084
00:39:43,280 --> 00:39:47,119
experience uh before going to a should

1085
00:39:47,119 --> 00:39:48,079
for that

1086
00:39:48,079 --> 00:39:50,000
um which is why i said i was comfortable

1087
00:39:50,000 --> 00:39:51,760
with i could live with the maymay i'm

1088
00:39:51,760 --> 00:39:53,359
not saying i actually think there should

1089
00:39:53,359 --> 00:39:54,960
be should be the other way

1090
00:39:54,960 --> 00:39:57,280
but i can live with a name

1091
00:39:57,280 --> 00:39:59,680
so so you are actually assuming that we

1092
00:39:59,680 --> 00:40:02,720
have multiple pockets for the same flow

1093
00:40:02,720 --> 00:40:04,640
in same aggregate frame which i don't

1094
00:40:04,640 --> 00:40:06,880
think actually is going to happen

1095
00:40:06,880 --> 00:40:08,720
we are going to have multiple flows

1096
00:40:08,720 --> 00:40:10,400
there are there are different flows that

1097
00:40:10,400 --> 00:40:12,480
have because i mean if you have multiple

1098
00:40:12,480 --> 00:40:14,480
pockets they're in the same flow that

1099
00:40:14,480 --> 00:40:16,560
actually means that your send rate is

1100
00:40:16,560 --> 00:40:19,359
spits too small or somehow you are

1101
00:40:19,359 --> 00:40:21,040
sending because i mean in cases where

1102
00:40:21,040 --> 00:40:23,280
you actually have a transfer like in tcp

1103
00:40:23,280 --> 00:40:25,119
it's actually since full frame it says

1104
00:40:25,119 --> 00:40:27,359
big buckets when you are sending lots of

1105
00:40:27,359 --> 00:40:29,280
data and then you have a sending

1106
00:40:29,280 --> 00:40:31,680
back-to-back you know packets and they

1107
00:40:31,680 --> 00:40:34,000
are going to be in separate you know uh

1108
00:40:34,000 --> 00:40:36,480
aggregated frames

1109
00:40:36,480 --> 00:40:38,880
so in that case actually the reorder is

1110
00:40:38,880 --> 00:40:41,200
going to be only one fun frame i mean it

1111
00:40:41,200 --> 00:40:42,400
depends whether you're you know if

1112
00:40:42,400 --> 00:40:43,440
you're doing

1113
00:40:43,440 --> 00:40:45,839
it if you're thinking about a

1114
00:40:45,839 --> 00:40:47,280
um in the middle of the network you're

1115
00:40:47,280 --> 00:40:48,480
probably having we are in the middle of

1116
00:40:48,480 --> 00:40:49,760
the network we are in the middle of

1117
00:40:49,760 --> 00:40:51,119
networking about if you're thinking

1118
00:40:51,119 --> 00:40:53,680
about ipsec at the edge

1119
00:40:53,680 --> 00:40:55,680
it's not and it'll depend on a little

1120
00:40:55,680 --> 00:40:57,440
bit about what the flow of traffic is

1121
00:40:57,440 --> 00:40:58,640
whether you're doing an upload or

1122
00:40:58,640 --> 00:41:01,119
download right so it really depends on

1123
00:41:01,119 --> 00:41:04,079
where you're operating

1124
00:41:04,400 --> 00:41:07,440
ipsec is defined to really be this that

1125
00:41:07,440 --> 00:41:09,680
what we are really concentrating is that

1126
00:41:09,680 --> 00:41:11,200
you know security gateway to security

1127
00:41:11,200 --> 00:41:13,359
greatly connections uh i that's my

1128
00:41:13,359 --> 00:41:16,000
understanding for iptfs it's it's going

1129
00:41:16,000 --> 00:41:17,680
to be protecting

1130
00:41:17,680 --> 00:41:20,480
gateway to gateway connections i don't

1131
00:41:20,480 --> 00:41:22,560
think anybody is actually willing to be

1132
00:41:22,560 --> 00:41:24,800
their laptops having you know multi-key

1133
00:41:24,800 --> 00:41:26,000
copy the

1134
00:41:26,000 --> 00:41:28,240
constant

1135
00:41:28,240 --> 00:41:30,960
feed data from his point to the security

1136
00:41:30,960 --> 00:41:33,040
gateway of the office

1137
00:41:33,040 --> 00:41:34,800
i don't think that's actually my vpn

1138
00:41:34,800 --> 00:41:37,280
appliance lives in my basement and talks

1139
00:41:37,280 --> 00:41:40,480
to my office and does tfs

1140
00:41:40,480 --> 00:41:41,920
i mean i don't have a whole lot of flows

1141
00:41:41,920 --> 00:41:43,599
across there and it's still the that use

1142
00:41:43,599 --> 00:41:45,680
case that you just described

1143
00:41:45,680 --> 00:41:47,359
yeah but it is

1144
00:41:47,359 --> 00:41:50,880
looking at use cases from anything up to

1145
00:41:50,880 --> 00:41:53,920
uh uh you know tens of gig

1146
00:41:53,920 --> 00:41:55,760
down to down to

1147
00:41:55,760 --> 00:41:56,880
you know

1148
00:41:56,880 --> 00:41:59,040
basically office remote access now those

1149
00:41:59,040 --> 00:42:00,319
are those are sort of the cases that

1150
00:42:00,319 --> 00:42:02,240
we've been considering so the question

1151
00:42:02,240 --> 00:42:04,480
is why would the download or uplink or

1152
00:42:04,480 --> 00:42:07,119
whatever protocol would use

1153
00:42:07,119 --> 00:42:10,160
uh less than full frame packets uh when

1154
00:42:10,160 --> 00:42:11,920
you're sending lots of data

1155
00:42:11,920 --> 00:42:13,599
the constant send rate thing that we're

1156
00:42:13,599 --> 00:42:17,119
documenting right no no

1157
00:42:17,440 --> 00:42:19,920
we are talking about now data inside the

1158
00:42:19,920 --> 00:42:22,240
constant data uh constant aggregated

1159
00:42:22,240 --> 00:42:24,480
frames right so you were asked how you

1160
00:42:24,480 --> 00:42:26,800
might have multiple small packets how

1161
00:42:26,800 --> 00:42:28,480
you could have multiple small packets in

1162
00:42:28,480 --> 00:42:30,720
one outer packet that's how you're

1163
00:42:30,720 --> 00:42:34,160
waiting to send the outer packet

1164
00:42:34,319 --> 00:42:36,640
so yeah okay yeah true that's that but

1165
00:42:36,640 --> 00:42:38,480
uh yeah okay

1166
00:42:38,480 --> 00:42:40,160
so the the basic point i wanted to make

1167
00:42:40,160 --> 00:42:43,359
and i'll again get out of queue um is

1168
00:42:43,359 --> 00:42:47,839
that um the should the way you have it

1169
00:42:47,839 --> 00:42:50,000
is it makes a very strong assumption on

1170
00:42:50,000 --> 00:42:52,720
what applications can handle and i i'm

1171
00:42:52,720 --> 00:42:54,640
worried that you know you're going to

1172
00:42:54,640 --> 00:42:57,200
start breaking things if you say should

1173
00:42:57,200 --> 00:43:00,400
so i'm really uncomfortable with um

1174
00:43:00,400 --> 00:43:02,800
going down an approach that may yield a

1175
00:43:02,800 --> 00:43:04,560
non-functional solution and we just

1176
00:43:04,560 --> 00:43:05,760
don't know because we don't understand

1177
00:43:05,760 --> 00:43:07,760
the full scope of applications out there

1178
00:43:07,760 --> 00:43:10,319
so i think it is too risky to use the

1179
00:43:10,319 --> 00:43:12,160
should the way you have it phrase it you

1180
00:43:12,160 --> 00:43:13,440
know i would love this to be done with

1181
00:43:13,440 --> 00:43:14,640
this i mean we've been sitting a long

1182
00:43:14,640 --> 00:43:16,640
time trying to get this document out i

1183
00:43:16,640 --> 00:43:18,640
would love just to accept it but i think

1184
00:43:18,640 --> 00:43:20,640
it is too risky to take the approach

1185
00:43:20,640 --> 00:43:22,000
that you have

1186
00:43:22,000 --> 00:43:24,480
you're recommending

1187
00:43:24,480 --> 00:43:27,640
thank you

1188
00:43:28,160 --> 00:43:30,720
okay and now uh despite the reordering

1189
00:43:30,720 --> 00:43:33,920
we're going to process valerie's input

1190
00:43:33,920 --> 00:43:36,319
valerie

1191
00:43:36,640 --> 00:43:38,000
well

1192
00:43:38,000 --> 00:43:40,720
i have i want to bring attention to

1193
00:43:40,720 --> 00:43:43,920
one potential issue with uh um valerie

1194
00:43:43,920 --> 00:43:46,560
we can barely hear you so

1195
00:43:46,560 --> 00:43:48,400
something with the microphone

1196
00:43:48,400 --> 00:43:50,640
uh can you hear me

1197
00:43:50,640 --> 00:43:52,880
barely

1198
00:43:52,880 --> 00:43:54,560
i can speak loudly

1199
00:43:54,560 --> 00:43:58,000
so can you hear me now

1200
00:43:58,000 --> 00:43:58,960
okay

1201
00:43:58,960 --> 00:44:01,520
uh i just want to bring attention to one

1202
00:44:01,520 --> 00:44:04,560
potential issue probably it's obvious

1203
00:44:04,560 --> 00:44:07,119
but uh i think that it escaped from the

1204
00:44:07,119 --> 00:44:10,240
discussion antero can you please move to

1205
00:44:10,240 --> 00:44:12,879
your slides

1206
00:44:13,599 --> 00:44:15,680
and uh

1207
00:44:15,680 --> 00:44:16,960
okay next

1208
00:44:16,960 --> 00:44:18,240
next oh

1209
00:44:18,240 --> 00:44:20,640
this one okay previews

1210
00:44:20,640 --> 00:44:24,160
so uh you can see that if uh we keep an

1211
00:44:24,160 --> 00:44:25,920
order of packets

1212
00:44:25,920 --> 00:44:31,040
then uh packets uh i3 i4 i5 and 6i7 not

1213
00:44:31,040 --> 00:44:32,400
only delayed

1214
00:44:32,400 --> 00:44:34,880
they are all sent as a bunch

1215
00:44:34,880 --> 00:44:36,720
uh and

1216
00:44:36,720 --> 00:44:38,560
so this may

1217
00:44:38,560 --> 00:44:39,839
cause a

1218
00:44:39,839 --> 00:44:41,680
congestion

1219
00:44:41,680 --> 00:44:42,880
because

1220
00:44:42,880 --> 00:44:45,119
if

1221
00:44:45,200 --> 00:44:48,480
in in usual operation when there's no

1222
00:44:48,480 --> 00:44:49,440
delay

1223
00:44:49,440 --> 00:44:50,560
there is no

1224
00:44:50,560 --> 00:44:53,200
packet lost out of packet lost or

1225
00:44:53,200 --> 00:44:56,720
loading uh packets are sent internal

1226
00:44:56,720 --> 00:45:00,640
packets are sent uh with

1227
00:45:00,960 --> 00:45:02,000
pretty

1228
00:45:02,000 --> 00:45:03,599
pretty concentrate

1229
00:45:03,599 --> 00:45:06,800
but here we not only have a delay

1230
00:45:06,800 --> 00:45:10,400
uh but we also have a bunch of packets

1231
00:45:10,400 --> 00:45:12,240
sent at once

1232
00:45:12,240 --> 00:45:13,760
when they are assembling there or

1233
00:45:13,760 --> 00:45:15,200
scented ones

1234
00:45:15,200 --> 00:45:17,599
and this can this can cause and

1235
00:45:17,599 --> 00:45:19,440
congestion

1236
00:45:19,440 --> 00:45:21,760
uh it's probably a theoretical issue but

1237
00:45:21,760 --> 00:45:23,359
i think it's not

1238
00:45:23,359 --> 00:45:26,800
it must be counted

1239
00:45:26,800 --> 00:45:27,760
well

1240
00:45:27,760 --> 00:45:29,920
just want to bring attention to this i

1241
00:45:29,920 --> 00:45:32,160
think that's a valid comment valerie i i

1242
00:45:32,160 --> 00:45:33,599
you know i don't think there's like you

1243
00:45:33,599 --> 00:45:35,440
said it's a theoretical thing i think we

1244
00:45:35,440 --> 00:45:36,640
have to look at

1245
00:45:36,640 --> 00:45:38,319
and we'll get an operational experience

1246
00:45:38,319 --> 00:45:40,240
as we get it out there right like what

1247
00:45:40,240 --> 00:45:43,200
kind of burstiness does tfs cause right

1248
00:45:43,200 --> 00:45:44,800
because there's a certain amount of burs

1249
00:45:44,800 --> 00:45:46,960
if you do a constant sun rate and you're

1250
00:45:46,960 --> 00:45:49,440
aggregating a bunch of packets right

1251
00:45:49,440 --> 00:45:50,880
you're you're only getting the outer

1252
00:45:50,880 --> 00:45:52,960
packet on this at this constant rate but

1253
00:45:52,960 --> 00:45:55,280
then you get maybe five or ten packets

1254
00:45:55,280 --> 00:45:57,359
in a outer packet you send them all at

1255
00:45:57,359 --> 00:46:00,160
once right so we'll i think we just have

1256
00:46:00,160 --> 00:46:01,440
we haven't seen any problems with that

1257
00:46:01,440 --> 00:46:03,280
but you know we're not the internet

1258
00:46:03,280 --> 00:46:04,319
right so

1259
00:46:04,319 --> 00:46:05,839
once we get this out there we're going

1260
00:46:05,839 --> 00:46:07,920
to find out oh this doesn't work in

1261
00:46:07,920 --> 00:46:10,319
these scenarios or you've got to limit

1262
00:46:10,319 --> 00:46:12,640
things you know uh you can't you know

1263
00:46:12,640 --> 00:46:14,000
aggregate too much we don't we don't

1264
00:46:14,000 --> 00:46:16,000
know those things but yeah it's a i

1265
00:46:16,000 --> 00:46:17,520
think it's an interesting and important

1266
00:46:17,520 --> 00:46:18,800
observation

1267
00:46:18,800 --> 00:46:21,359
i just i think that uh

1268
00:46:21,359 --> 00:46:25,040
uh as ben suggested to to attract uh

1269
00:46:25,040 --> 00:46:27,520
transport area expat gsp review is a

1270
00:46:27,520 --> 00:46:30,319
good idea but i just want all this

1271
00:46:30,319 --> 00:46:33,119
consideration even if you choose may

1272
00:46:33,119 --> 00:46:34,560
for both

1273
00:46:34,560 --> 00:46:36,160
just an operational condition

1274
00:46:36,160 --> 00:46:38,160
operational uh

1275
00:46:38,160 --> 00:46:40,839
handle i think that all these

1276
00:46:40,839 --> 00:46:44,000
transport consideration should be

1277
00:46:44,000 --> 00:46:46,560
documented in the draft so what we'll

1278
00:46:46,560 --> 00:46:48,480
have if

1279
00:46:48,480 --> 00:46:50,640
uh we use this option

1280
00:46:50,640 --> 00:46:52,880
and what are adventures

1281
00:46:52,880 --> 00:46:55,280
disadvantages and what can happen at

1282
00:46:55,280 --> 00:46:57,040
least it should be documented that's my

1283
00:46:57,040 --> 00:46:58,560
opinion

1284
00:46:58,560 --> 00:47:00,880
yeah i i agree that you know we don't

1285
00:47:00,880 --> 00:47:03,040
we'd like to document things but

1286
00:47:03,040 --> 00:47:05,280
you're gonna quickly turn into we're not

1287
00:47:05,280 --> 00:47:07,760
the transport area this is an area of

1288
00:47:07,760 --> 00:47:11,200
study for them still right i mean we

1289
00:47:11,200 --> 00:47:13,359
don't want to overstep our boundaries

1290
00:47:13,359 --> 00:47:15,760
here and and try to like talk to things

1291
00:47:15,760 --> 00:47:17,520
we don't understand

1292
00:47:17,520 --> 00:47:19,680
right so saying like this is good for

1293
00:47:19,680 --> 00:47:21,920
this environment we don't know that

1294
00:47:21,920 --> 00:47:24,160
right like so i i think we could say

1295
00:47:24,160 --> 00:47:26,880
that you know tfs adds you know uh can

1296
00:47:26,880 --> 00:47:29,040
add bursting burstiness to it we could

1297
00:47:29,040 --> 00:47:33,359
add that you know that simple sentence

1298
00:47:34,559 --> 00:47:38,559
i want to move to my picture in my slide

1299
00:47:39,440 --> 00:47:41,520
i want to verify what various things so

1300
00:47:41,520 --> 00:47:43,280
barry you say you want to ask to

1301
00:47:43,280 --> 00:47:44,480
document

1302
00:47:44,480 --> 00:47:47,760
uh what is the not what are the effects

1303
00:47:47,760 --> 00:47:50,319
of having delays you want to say that

1304
00:47:50,319 --> 00:47:51,680
there is going to be delays there's

1305
00:47:51,680 --> 00:47:54,000
going to be burstiness or there is going

1306
00:47:54,000 --> 00:47:57,599
to be reordering in in in groups

1307
00:47:57,599 --> 00:47:59,599
you want all of that to be documented

1308
00:47:59,599 --> 00:48:01,359
you don't want to you know speculate

1309
00:48:01,359 --> 00:48:03,119
what it affects the protocols but you

1310
00:48:03,119 --> 00:48:05,119
want to have that documented so the

1311
00:48:05,119 --> 00:48:08,079
transport area can do that okay good and

1312
00:48:08,079 --> 00:48:10,160
i agree on that actually i don't think

1313
00:48:10,160 --> 00:48:12,240
we need i think that's a good i also

1314
00:48:12,240 --> 00:48:13,839
don't think this is a lot of verbiage we

1315
00:48:13,839 --> 00:48:15,599
need to add right we don't need a major

1316
00:48:15,599 --> 00:48:17,200
redesign here we just could we just need

1317
00:48:17,200 --> 00:48:19,040
to note in like the paragraphs you

1318
00:48:19,040 --> 00:48:21,440
suggested tara we can we can even say

1319
00:48:21,440 --> 00:48:23,280
this can result in this

1320
00:48:23,280 --> 00:48:25,040
you know it could you know like we'll

1321
00:48:25,040 --> 00:48:26,640
get to that site show that show mine

1322
00:48:26,640 --> 00:48:28,480
because uh uh that'll be something i

1323
00:48:28,480 --> 00:48:29,839
want to put in

1324
00:48:29,839 --> 00:48:32,240
um yeah and i think that's that's a good

1325
00:48:32,240 --> 00:48:34,959
point you had

1326
00:48:36,240 --> 00:48:37,760
we've heard a lot of things in the live

1327
00:48:37,760 --> 00:48:39,440
discussion here that you

1328
00:48:39,440 --> 00:48:41,599
would be nice to write down somewhere

1329
00:48:41,599 --> 00:48:43,599
but i think when we go and figure out

1330
00:48:43,599 --> 00:48:44,880
you know what actually needs to go in

1331
00:48:44,880 --> 00:48:47,119
this document versus what could maybe be

1332
00:48:47,119 --> 00:48:49,440
a separate draft that's just sort of

1333
00:48:49,440 --> 00:48:51,920
a almost a living document to to

1334
00:48:51,920 --> 00:48:54,319
incorporate the additional stuff that we

1335
00:48:54,319 --> 00:48:56,400
do we learn over time like i think we

1336
00:48:56,400 --> 00:48:58,400
should try to not put everything that we

1337
00:48:58,400 --> 00:49:00,960
talked about today into this document

1338
00:49:00,960 --> 00:49:03,760
i think christian and everybody

1339
00:49:03,760 --> 00:49:05,200
you point out there's a few things that

1340
00:49:05,200 --> 00:49:07,520
are probably pretty small that we can

1341
00:49:07,520 --> 00:49:09,760
put in this document and are worth doing

1342
00:49:09,760 --> 00:49:10,480
but

1343
00:49:10,480 --> 00:49:11,920
i think there's also a lot of other

1344
00:49:11,920 --> 00:49:13,920
things that we should write down

1345
00:49:13,920 --> 00:49:17,040
not in this document

1346
00:49:17,040 --> 00:49:19,040
uh yeah if you throw up the uh the

1347
00:49:19,040 --> 00:49:21,119
picture it talks to this lou mentioned

1348
00:49:21,119 --> 00:49:23,119
the amplification and and i want to show

1349
00:49:23,119 --> 00:49:24,480
that

1350
00:49:24,480 --> 00:49:26,000
uh because that that's what i would

1351
00:49:26,000 --> 00:49:28,000
probably put in the line

1352
00:49:28,000 --> 00:49:30,400
uh it's a little bit further down

1353
00:49:30,400 --> 00:49:33,280
i think slide nine maybe

1354
00:49:33,280 --> 00:49:36,000
yeah so this shows a picture of uh you

1355
00:49:36,000 --> 00:49:37,119
know

1356
00:49:37,119 --> 00:49:39,359
a lot of misorder i'm showing a picture

1357
00:49:39,359 --> 00:49:40,960
of here a common scenario right where

1358
00:49:40,960 --> 00:49:42,880
you get a mis-ordered packet

1359
00:49:42,880 --> 00:49:45,040
um but you know they're not

1360
00:49:45,040 --> 00:49:46,480
since we're not talking about constant

1361
00:49:46,480 --> 00:49:47,839
sun rate i wanted to highlight that the

1362
00:49:47,839 --> 00:49:49,920
miss ordering is often going to happen

1363
00:49:49,920 --> 00:49:52,559
you get one just before the other right

1364
00:49:52,559 --> 00:49:55,680
because it it just took a slightly it

1365
00:49:55,680 --> 00:49:58,400
paused in a queue or or whatever

1366
00:49:58,400 --> 00:50:00,480
i mean mostly we don't like you said

1367
00:50:00,480 --> 00:50:02,319
tarot this is a if this is a site to

1368
00:50:02,319 --> 00:50:04,640
cite any udp

1369
00:50:04,640 --> 00:50:06,640
we don't expect a lot of misordering

1370
00:50:06,640 --> 00:50:08,720
right but if we do see it i expect it's

1371
00:50:08,720 --> 00:50:10,319
going to be like this

1372
00:50:10,319 --> 00:50:13,440
and what can happen when you get this is

1373
00:50:13,440 --> 00:50:15,680
you know if you look at the out the top

1374
00:50:15,680 --> 00:50:17,839
of the diagram is just normal delivery

1375
00:50:17,839 --> 00:50:20,559
and it even shows somewhat of a

1376
00:50:20,559 --> 00:50:23,119
valerie's point of the burstiness right

1377
00:50:23,119 --> 00:50:24,720
of when you're aggregating that your

1378
00:50:24,720 --> 00:50:27,200
sense son the inners right one two three

1379
00:50:27,200 --> 00:50:29,839
four five six seven eight nine ten

1380
00:50:29,839 --> 00:50:30,640
um

1381
00:50:30,640 --> 00:50:32,559
when you get them miss ordered

1382
00:50:32,559 --> 00:50:34,319
you know we're getting the second one a

1383
00:50:34,319 --> 00:50:37,040
little bit before the first one

1384
00:50:37,040 --> 00:50:39,599
and what happens is that then we send

1385
00:50:39,599 --> 00:50:40,800
the first

1386
00:50:40,800 --> 00:50:42,640
we have six seven eight nine ten to send

1387
00:50:42,640 --> 00:50:44,000
so we send them

1388
00:50:44,000 --> 00:50:45,680
and then we have one two three four five

1389
00:50:45,680 --> 00:50:47,119
and we send those

1390
00:50:47,119 --> 00:50:48,960
right and this is what lou is talking

1391
00:50:48,960 --> 00:50:51,359
about where we're amplifying the out of

1392
00:50:51,359 --> 00:50:53,040
order delivery right we've only got a

1393
00:50:53,040 --> 00:50:55,280
one packet out of order on the tunnel

1394
00:50:55,280 --> 00:50:57,680
but we've made the user and what the

1395
00:50:57,680 --> 00:50:59,760
user sees at the end it's got five

1396
00:50:59,760 --> 00:51:01,680
packets this can start you know we're

1397
00:51:01,680 --> 00:51:03,440
worried that this could start really

1398
00:51:03,440 --> 00:51:04,720
triggering

1399
00:51:04,720 --> 00:51:07,280
you know tcp um you know gets outside of

1400
00:51:07,280 --> 00:51:09,280
the windows i mean who knows right these

1401
00:51:09,280 --> 00:51:11,520
are these transported questions when do

1402
00:51:11,520 --> 00:51:13,760
things break right and and this

1403
00:51:13,760 --> 00:51:17,359
amplification is scary to us

1404
00:51:19,200 --> 00:51:20,880
i make ours look nice because you know

1405
00:51:20,880 --> 00:51:22,960
in this particular case ours looks nice

1406
00:51:22,960 --> 00:51:25,200
because you know the delivery only adds

1407
00:51:25,200 --> 00:51:26,480
a small delay and you get all the

1408
00:51:26,480 --> 00:51:28,400
packets in order that's not going to be

1409
00:51:28,400 --> 00:51:29,920
every case i'm not trying to say you

1410
00:51:29,920 --> 00:51:31,680
know ours is the best look at how great

1411
00:51:31,680 --> 00:51:33,839
this diagram is but there are definitely

1412
00:51:33,839 --> 00:51:35,280
cases this is this is going to be a

1413
00:51:35,280 --> 00:51:36,480
common case

1414
00:51:36,480 --> 00:51:38,800
where the small delay is not a big deal

1415
00:51:38,800 --> 00:51:41,359
and tcp and whatnot can deal with it

1416
00:51:41,359 --> 00:51:44,319
um but you know transport protocols

1417
00:51:44,319 --> 00:51:45,920
might not be able in this case to deal

1418
00:51:45,920 --> 00:51:47,599
with the large amplification of

1419
00:51:47,599 --> 00:51:49,440
out-of-order delivery this is just one

1420
00:51:49,440 --> 00:51:51,599
case that i wanted to cover

1421
00:51:51,599 --> 00:51:53,839
and why we thought

1422
00:51:53,839 --> 00:51:55,599
that gets into the sort of there's many

1423
00:51:55,599 --> 00:51:57,200
different potential use cases for this

1424
00:51:57,200 --> 00:51:58,319
technology

1425
00:51:58,319 --> 00:52:01,359
some of them will involve um

1426
00:52:01,359 --> 00:52:04,559
only a handful of inner transport flows

1427
00:52:04,559 --> 00:52:06,480
being aggregated into the single outer

1428
00:52:06,480 --> 00:52:09,200
flow some of them will involve a huge

1429
00:52:09,200 --> 00:52:12,240
number of of interflows being aggregated

1430
00:52:12,240 --> 00:52:13,599
and so

1431
00:52:13,599 --> 00:52:15,200
trying to make an assumption about you

1432
00:52:15,200 --> 00:52:17,680
know are all of the inner packets going

1433
00:52:17,680 --> 00:52:19,280
to be from the same versus different

1434
00:52:19,280 --> 00:52:21,359
flows is probably not something that we

1435
00:52:21,359 --> 00:52:23,280
can make a guaranteed assumption about

1436
00:52:23,280 --> 00:52:24,240
here

1437
00:52:24,240 --> 00:52:25,920
and so that's sort of leaving me to

1438
00:52:25,920 --> 00:52:27,920
conclude that we kind of have to do the

1439
00:52:27,920 --> 00:52:29,359
may may

1440
00:52:29,359 --> 00:52:31,440
and and just add some additional text

1441
00:52:31,440 --> 00:52:33,920
about in certain circumstances

1442
00:52:33,920 --> 00:52:36,319
one versus the other might be preferred

1443
00:52:36,319 --> 00:52:37,920
uh we have some thoughts about this

1444
00:52:37,920 --> 00:52:40,160
right now you these are not the final

1445
00:52:40,160 --> 00:52:43,558
thoughts on that

1446
00:52:44,839 --> 00:52:47,359
um was there anyone else

1447
00:52:47,359 --> 00:52:49,440
in the queue i had one final

1448
00:52:49,440 --> 00:52:51,119
thought

1449
00:52:51,119 --> 00:52:52,000
um

1450
00:52:52,000 --> 00:52:53,520
so i guess one of the things i got up in

1451
00:52:53,520 --> 00:52:55,280
the queue to sort of mention very early

1452
00:52:55,280 --> 00:52:56,240
on

1453
00:52:56,240 --> 00:52:59,359
was that like if we think about a

1454
00:52:59,359 --> 00:53:01,839
traditional router and ip network it's

1455
00:53:01,839 --> 00:53:04,079
not looking at the flow it's not trying

1456
00:53:04,079 --> 00:53:06,000
to do any reordering here

1457
00:53:06,000 --> 00:53:07,599
and in some sense if we think of the

1458
00:53:07,599 --> 00:53:09,920
ipsec building block

1459
00:53:09,920 --> 00:53:12,720
as being vaguely analogous to that

1460
00:53:12,720 --> 00:53:16,160
my intuition would be that

1461
00:53:16,160 --> 00:53:18,720
this router-like thing should just take

1462
00:53:18,720 --> 00:53:20,640
what is given and send it on without

1463
00:53:20,640 --> 00:53:23,040
trying to store too much state

1464
00:53:23,040 --> 00:53:24,480
but then i think the discussion that

1465
00:53:24,480 --> 00:53:25,920
we've had

1466
00:53:25,920 --> 00:53:27,599
just right now during this meeting has

1467
00:53:27,599 --> 00:53:29,119
sort of community that's that's not

1468
00:53:29,119 --> 00:53:30,640
exactly

1469
00:53:30,640 --> 00:53:32,240
the case here

1470
00:53:32,240 --> 00:53:33,119
um

1471
00:53:33,119 --> 00:53:35,359
precisely because i think maybe lou was

1472
00:53:35,359 --> 00:53:37,200
the first one to bring this up

1473
00:53:37,200 --> 00:53:38,240
um

1474
00:53:38,240 --> 00:53:39,119
we

1475
00:53:39,119 --> 00:53:40,800
we're not just moving a single pack at a

1476
00:53:40,800 --> 00:53:42,319
time with the aggregation there's this

1477
00:53:42,319 --> 00:53:44,240
risk of amplification

1478
00:53:44,240 --> 00:53:45,839
and i think the the risk of

1479
00:53:45,839 --> 00:53:47,680
amplification

1480
00:53:47,680 --> 00:53:49,680
is sort of what's

1481
00:53:49,680 --> 00:53:51,040
convincing me

1482
00:53:51,040 --> 00:53:53,440
that um

1483
00:53:53,440 --> 00:53:55,440
that we do want to diverge from one

1484
00:53:55,440 --> 00:53:57,839
packet and send this output right when

1485
00:53:57,839 --> 00:54:00,319
we get it

1486
00:54:02,800 --> 00:54:04,880
i think that was all i had

1487
00:54:04,880 --> 00:54:08,000
queued up in my notes so

1488
00:54:08,000 --> 00:54:10,160
um

1489
00:54:10,160 --> 00:54:11,680
i guess the training i've said on the

1490
00:54:11,680 --> 00:54:13,200
slide before i don't know if it's

1491
00:54:13,200 --> 00:54:16,319
important to show at this point um

1492
00:54:16,319 --> 00:54:18,559
yeah i this was just me making the case

1493
00:54:18,559 --> 00:54:20,480
i kind of just made which is

1494
00:54:20,480 --> 00:54:21,680
i i think there's going to be a lot of

1495
00:54:21,680 --> 00:54:25,119
cases where things just work right um

1496
00:54:25,119 --> 00:54:27,119
but we don't have to dwell on this i

1497
00:54:27,119 --> 00:54:29,760
think we're getting to a

1498
00:54:29,760 --> 00:54:31,520
this this is the discussion i think we

1499
00:54:31,520 --> 00:54:33,599
needed to get to right or we need to

1500
00:54:33,599 --> 00:54:35,119
resolve so

1501
00:54:35,119 --> 00:54:36,240
um right

1502
00:54:36,240 --> 00:54:38,959
sort of summary

1503
00:54:39,040 --> 00:54:41,200
is that we should say we should say

1504
00:54:41,200 --> 00:54:42,640
for both of them

1505
00:54:42,640 --> 00:54:44,799
uh and we can put a little bit of text

1506
00:54:44,799 --> 00:54:46,720
in to

1507
00:54:46,720 --> 00:54:49,119
to try and cover some cases in which one

1508
00:54:49,119 --> 00:54:49,920
should

1509
00:54:49,920 --> 00:54:52,000
might make like others in which no

1510
00:54:52,000 --> 00:54:54,240
that's not doing the one right now right

1511
00:54:54,240 --> 00:54:55,680
yeah right

1512
00:54:55,680 --> 00:54:58,640
i i i i think i think having may may

1513
00:54:58,640 --> 00:55:00,319
actually is okay and i think what we

1514
00:55:00,319 --> 00:55:02,480
should be doing we should uh

1515
00:55:02,480 --> 00:55:04,960
rename the drop timer to lost timer

1516
00:55:04,960 --> 00:55:06,640
because and then we actually want to

1517
00:55:06,640 --> 00:55:08,559
define it in because i don't i think

1518
00:55:08,559 --> 00:55:10,000
we're actually missing the text saying

1519
00:55:10,000 --> 00:55:12,480
that uh

1520
00:55:12,640 --> 00:55:14,720
after the lost timer you are still not

1521
00:55:14,720 --> 00:55:16,319
throwing the packets away you just

1522
00:55:16,319 --> 00:55:18,559
assume that the previous bucket was lost

1523
00:55:18,559 --> 00:55:20,400
there was not a small reorder this is

1524
00:55:20,400 --> 00:55:22,720
like the hybrid mode i have in my when i

1525
00:55:22,720 --> 00:55:24,559
proposed three different you know one

1526
00:55:24,559 --> 00:55:26,559
was the in order one was mine and one

1527
00:55:26,559 --> 00:55:28,799
was the hybrid wherever actually you

1528
00:55:28,799 --> 00:55:30,720
know wait for the short time to see if

1529
00:55:30,720 --> 00:55:33,599
there's a you know just two packets in

1530
00:55:33,599 --> 00:55:36,319
out of order and then you know process

1531
00:55:36,319 --> 00:55:38,799
them in order and after a very short

1532
00:55:38,799 --> 00:55:40,799
time out you realize that okay

1533
00:55:40,799 --> 00:55:43,119
it was not just out of or very short out

1534
00:55:43,119 --> 00:55:45,599
of order it was probably lost packet so

1535
00:55:45,599 --> 00:55:48,400
we sent packets out in immediately

1536
00:55:48,400 --> 00:55:50,480
and at that case so so i think that's

1537
00:55:50,480 --> 00:55:52,400
what we probably need to do

1538
00:55:52,400 --> 00:55:54,480
yeah so that it does say in the drop

1539
00:55:54,480 --> 00:55:57,200
timer recommend it says um

1540
00:55:57,200 --> 00:55:58,880
only consider an outer packet loss when

1541
00:55:58,880 --> 00:56:00,240
the reorder window you know i mean it

1542
00:56:00,240 --> 00:56:01,920
does talk about it just considering that

1543
00:56:01,920 --> 00:56:03,119
packet lost

1544
00:56:03,119 --> 00:56:04,559
i think we might be covered there but

1545
00:56:04,559 --> 00:56:07,119
you know i i'm willing to call it a lost

1546
00:56:07,119 --> 00:56:09,599
timer if you want um yeah i i've lost a

1547
00:56:09,599 --> 00:56:11,839
pocket lost timer is better better name

1548
00:56:11,839 --> 00:56:13,599
than you know than to drop timer and i

1549
00:56:13,599 --> 00:56:15,440
think and actually the same thing can be

1550
00:56:15,440 --> 00:56:17,520
actually done actually it should be done

1551
00:56:17,520 --> 00:56:19,119
regardless of which format you are

1552
00:56:19,119 --> 00:56:21,440
actually using i think

1553
00:56:21,440 --> 00:56:23,119
whether you are thinking

1554
00:56:23,119 --> 00:56:24,000
actually

1555
00:56:24,000 --> 00:56:25,680
actually actually they actually come to

1556
00:56:25,680 --> 00:56:27,680
the one format if the you know lost

1557
00:56:27,680 --> 00:56:32,079
timer is uh you know short enough

1558
00:56:32,079 --> 00:56:34,559
yeah no okay so i'll change i'll change

1559
00:56:34,559 --> 00:56:36,720
drop to lost packet

1560
00:56:36,720 --> 00:56:39,200
um in the text and we'll change the two

1561
00:56:39,200 --> 00:56:41,040
reds to may

1562
00:56:41,040 --> 00:56:42,480
um

1563
00:56:42,480 --> 00:56:45,040
that last final crossout i think i made

1564
00:56:45,040 --> 00:56:46,799
by mistake in blue

1565
00:56:46,799 --> 00:56:50,240
we could say drop drop lost packet timer

1566
00:56:50,240 --> 00:56:53,599
or or um we can leave over your window

1567
00:56:53,599 --> 00:56:54,880
we can cross it out i don't know yeah

1568
00:56:54,880 --> 00:56:56,480
but then they won't

1569
00:56:56,480 --> 00:56:58,640
tell me what

1570
00:56:58,640 --> 00:57:00,559
based on valerie's comment about the

1571
00:57:00,559 --> 00:57:03,920
pertinent reorder application and delay

1572
00:57:03,920 --> 00:57:06,880
so i think we we add a sentence to each

1573
00:57:06,880 --> 00:57:09,200
one of these paragraphs describing the

1574
00:57:09,200 --> 00:57:11,280
oh you know um

1575
00:57:11,280 --> 00:57:13,440
for the first paragraph we can say

1576
00:57:13,440 --> 00:57:16,880
this method can can amplify out of order

1577
00:57:16,880 --> 00:57:19,040
um inner packet delivery and for the

1578
00:57:19,040 --> 00:57:21,280
second paragraph we say

1579
00:57:21,280 --> 00:57:24,240
this method can add

1580
00:57:24,240 --> 00:57:27,680
you know can add uh extra delay to in to

1581
00:57:27,680 --> 00:57:29,599
the inner packet delivery

1582
00:57:29,599 --> 00:57:32,079
uh adverseness must valerie's comment

1583
00:57:32,079 --> 00:57:34,240
also okay yeah burstiness and an extra

1584
00:57:34,240 --> 00:57:36,720
delay yeah okay

1585
00:57:36,720 --> 00:57:40,040
all right good

1586
00:57:42,079 --> 00:57:44,160
so those are those are like two three

1587
00:57:44,160 --> 00:57:46,400
minor uh pretty minor changes i think

1588
00:57:46,400 --> 00:57:48,799
and we make those and uh let's go to the

1589
00:57:48,799 --> 00:57:50,480
next slide line rumor is commenting that

1590
00:57:50,480 --> 00:57:55,079
the extra burst perfectly already there

1591
00:57:56,559 --> 00:58:00,000
so i i think we're at a resolution

1592
00:58:00,000 --> 00:58:01,839
um and i don't think we have any other

1593
00:58:01,839 --> 00:58:02,720
issues

1594
00:58:02,720 --> 00:58:05,520
does anybody disagree

1595
00:58:05,520 --> 00:58:09,040
now i think that's uh i i agree and uh

1596
00:58:09,040 --> 00:58:11,040
and you i assume you can get the new

1597
00:58:11,040 --> 00:58:13,119
draft out very soon

1598
00:58:13,119 --> 00:58:14,000
yeah

1599
00:58:14,000 --> 00:58:15,920
actually send center note centered you

1600
00:58:15,920 --> 00:58:19,040
know modified 2.5 to the list first

1601
00:58:19,040 --> 00:58:21,839
hopefully like as soon as possible and

1602
00:58:21,839 --> 00:58:23,599
then uh if there's no comments on that

1603
00:58:23,599 --> 00:58:25,040
then we can actually get in the draft so

1604
00:58:25,040 --> 00:58:25,839
we don't

1605
00:58:25,839 --> 00:58:26,640
and

1606
00:58:26,640 --> 00:58:28,079
then i want to

1607
00:58:28,079 --> 00:58:29,440
you know what drafts are cheap i'll just

1608
00:58:29,440 --> 00:58:31,760
publish the draft okay another one

1609
00:58:31,760 --> 00:58:34,839
no no that's fine if you don't cost

1610
00:58:34,839 --> 00:58:37,359
anything and then we actually need to

1611
00:58:37,359 --> 00:58:39,599
have a several pride up for the young

1612
00:58:39,599 --> 00:58:41,920
and uh amoeba i think also but i need to

1613
00:58:41,920 --> 00:58:44,000
comment on that

1614
00:58:44,000 --> 00:58:46,000
because i want to actually push them all

1615
00:58:46,000 --> 00:58:49,799
out at the same time

1616
00:58:50,240 --> 00:58:51,920
uh

1617
00:58:51,920 --> 00:58:54,559
okay yeah

1618
00:58:58,559 --> 00:59:00,799
all right i think is there anything else

1619
00:59:00,799 --> 00:59:03,960
on iptfs

1620
00:59:04,240 --> 00:59:06,960
just uh one thing that i think if we

1621
00:59:06,960 --> 00:59:10,000
do write about a drop timer or

1622
00:59:10,000 --> 00:59:12,720
delay time um packet loss time we need

1623
00:59:12,720 --> 00:59:15,520
to have some back last time or sorry and

1624
00:59:15,520 --> 00:59:17,599
yeah we need to have some recommendation

1625
00:59:17,599 --> 00:59:21,040
about how long it should be

1626
00:59:22,799 --> 00:59:24,799
we cannot we cannot make recommendations

1627
00:59:24,799 --> 00:59:27,280
based on we we have people that want to

1628
00:59:27,280 --> 00:59:30,000
do 100 gig link 100 gig console rate sun

1629
00:59:30,000 --> 00:59:32,319
links we have people that want to do

1630
00:59:32,319 --> 00:59:33,760
from their house

1631
00:59:33,760 --> 00:59:35,920
but actually yeah if we can we could

1632
00:59:35,920 --> 00:59:37,839
think about we can add you know say that

1633
00:59:37,839 --> 00:59:40,640
it's it's going to be on in the order of

1634
00:59:40,640 --> 00:59:45,598
uh expected uh pocket uh you know

1635
00:59:46,880 --> 00:59:49,680
rates uh that that would be the order of

1636
00:59:49,680 --> 00:59:50,799
it uh

1637
00:59:50,799 --> 00:59:52,319
especially if you assume that you can

1638
00:59:52,319 --> 00:59:54,319
actually allow the reordering of the

1639
00:59:54,319 --> 00:59:56,559
larger things you just assume that the

1640
00:59:56,559 --> 00:59:58,079
pocket was lost

1641
00:59:58,079 --> 01:00:00,240
or something like that i don't know okay

1642
01:00:00,240 --> 01:00:01,760
i think we're getting into areas that we

1643
01:00:01,760 --> 01:00:03,440
don't understand and we shouldn't go

1644
01:00:03,440 --> 01:00:05,040
there

1645
01:00:05,040 --> 01:00:06,319
i i just

1646
01:00:06,319 --> 01:00:08,240
we don't know what effect uh you know

1647
01:00:08,240 --> 01:00:10,799
that setting we're we're just taking a

1648
01:00:10,799 --> 01:00:15,400
swag at it right we're writing it

1649
01:00:20,319 --> 01:00:22,000
and we have a timer there that we have

1650
01:00:22,000 --> 01:00:24,400
no idea what the value is going to be

1651
01:00:24,400 --> 01:00:28,400
uh useful for that what value is

1652
01:00:31,599 --> 01:00:33,680
in the comments said that why don't we

1653
01:00:33,680 --> 01:00:35,920
just say that the lost timer should be

1654
01:00:35,920 --> 01:00:37,680
should correspond with the with the

1655
01:00:37,680 --> 01:00:40,240
tunnel with the expected tunnel rate it

1656
01:00:40,240 --> 01:00:41,520
should be

1657
01:00:41,520 --> 01:00:43,280
that that's that's the only thing that i

1658
01:00:43,280 --> 01:00:45,040
think you can actually say

1659
01:00:45,040 --> 01:00:46,799
okay

1660
01:00:46,799 --> 01:00:48,640
all right depending on whether we use a

1661
01:00:48,640 --> 01:00:50,880
concentrate or not it's either the

1662
01:00:50,880 --> 01:00:52,720
the concentrate of the tunnel or the

1663
01:00:52,720 --> 01:00:54,559
maximum rate of the tunnel well

1664
01:00:54,559 --> 01:00:56,480
proportionate to the tunnel rate

1665
01:00:56,480 --> 01:00:57,839
and then that doesn't you know that

1666
01:00:57,839 --> 01:00:59,839
doesn't you know it doesn't really lock

1667
01:00:59,839 --> 01:01:02,480
us in i think

1668
01:01:09,680 --> 01:01:11,599
but that's an informative statement it's

1669
01:01:11,599 --> 01:01:14,640
not there's no rfc 2119 language there

1670
01:01:14,640 --> 01:01:16,879
right

1671
01:01:17,280 --> 01:01:18,400
uh

1672
01:01:18,400 --> 01:01:20,240
right we shouldn't have showed or may or

1673
01:01:20,240 --> 01:01:22,319
you know no no we just have just you

1674
01:01:22,319 --> 01:01:24,319
know a comment or note or something like

1675
01:01:24,319 --> 01:01:26,240
that

1676
01:01:26,240 --> 01:01:29,280
yeah all right so if that's and you will

1677
01:01:29,280 --> 01:01:31,280
publish the new version of the craft and

1678
01:01:31,280 --> 01:01:34,000
we will tell you that okay send

1679
01:01:34,000 --> 01:01:35,440
okay i don't know if it's going to be

1680
01:01:35,440 --> 01:01:37,599
stefano it's going to be uh

1681
01:01:37,599 --> 01:01:38,640
the

1682
01:01:38,640 --> 01:01:40,799
who is going to be okay stephanie

1683
01:01:40,799 --> 01:01:43,599
is going to be presenting this okay

1684
01:01:43,599 --> 01:01:47,119
hi thanks so daniel is also with me

1685
01:01:47,119 --> 01:01:49,520
and daniel and i we started a male

1686
01:01:49,520 --> 01:01:50,640
threat

1687
01:01:50,640 --> 01:01:53,200
called coast cost efficient quantum

1688
01:01:53,200 --> 01:01:55,359
resistant dust protection

1689
01:01:55,359 --> 01:01:57,839
and just make sure this threat is with a

1690
01:01:57,839 --> 01:01:59,839
d at the end not with a t

1691
01:01:59,839 --> 01:02:02,000
so to

1692
01:02:02,000 --> 01:02:04,400
prevent any misconceptions

1693
01:02:04,400 --> 01:02:06,559
we do not claim at any point that we

1694
01:02:06,559 --> 01:02:08,559
shouldn't go for like intermediate or

1695
01:02:08,559 --> 01:02:11,119
the multiplication exchanges so this

1696
01:02:11,119 --> 01:02:13,920
does work we've also tested that with a

1697
01:02:13,920 --> 01:02:16,240
strong one in cyclone as well as with

1698
01:02:16,240 --> 01:02:17,680
valerie and his

1699
01:02:17,680 --> 01:02:20,559
implementation and of course it does

1700
01:02:20,559 --> 01:02:22,319
work but it is

1701
01:02:22,319 --> 01:02:24,640
a somewhat complex solution

1702
01:02:24,640 --> 01:02:25,920
and

1703
01:02:25,920 --> 01:02:29,039
you there are a few pitfalls you have to

1704
01:02:29,039 --> 01:02:30,960
take care of when implementing it and

1705
01:02:30,960 --> 01:02:32,480
using it

1706
01:02:32,480 --> 01:02:33,440
and

1707
01:02:33,440 --> 01:02:36,880
what we do claim in our main thread is

1708
01:02:36,880 --> 01:02:39,920
that we should have like a first barrier

1709
01:02:39,920 --> 01:02:42,640
that is quantum resistant in the iksa in

1710
01:02:42,640 --> 01:02:45,839
it for quite a few reasons first of all

1711
01:02:45,839 --> 01:02:47,440
there is not like

1712
01:02:47,440 --> 01:02:51,200
the one single quantum resistant

1713
01:02:51,200 --> 01:02:52,960
encryption scheme

1714
01:02:52,960 --> 01:02:55,359
that is actually really secure

1715
01:02:55,359 --> 01:02:56,559
so

1716
01:02:56,559 --> 01:02:59,760
not us speaking for a company not the

1717
01:02:59,760 --> 01:03:02,640
agencies no one is really sure which

1718
01:03:02,640 --> 01:03:05,440
quantum scheme to actually use

1719
01:03:05,440 --> 01:03:06,960
and

1720
01:03:06,960 --> 01:03:08,240
we have to

1721
01:03:08,240 --> 01:03:10,720
get around this at some point

1722
01:03:10,720 --> 01:03:12,160
so the current solution like

1723
01:03:12,160 --> 01:03:13,680
intermediate and the multiple key

1724
01:03:13,680 --> 01:03:15,039
exchanges is

1725
01:03:15,039 --> 01:03:17,440
to have it like in a hybrid way to use

1726
01:03:17,440 --> 01:03:18,480
several

1727
01:03:18,480 --> 01:03:20,160
schemes

1728
01:03:20,160 --> 01:03:22,480
in a hybrid method

1729
01:03:22,480 --> 01:03:24,960
and this does work you shouldn't go for

1730
01:03:24,960 --> 01:03:27,440
too many schemes at the same time in

1731
01:03:27,440 --> 01:03:30,960
practice but it does work still

1732
01:03:30,960 --> 01:03:33,920
we need some kind of fallback solution

1733
01:03:33,920 --> 01:03:36,960
because will there be one single

1734
01:03:36,960 --> 01:03:38,960
uh like lettuce-based scheme in the

1735
01:03:38,960 --> 01:03:41,280
future maybe maybe in five to ten years

1736
01:03:41,280 --> 01:03:43,520
we will have the confidence that a

1737
01:03:43,520 --> 01:03:45,520
single scheme is good enough for the

1738
01:03:45,520 --> 01:03:47,760
next few years for some parameter sets

1739
01:03:47,760 --> 01:03:50,400
but right now we still don't know

1740
01:03:50,400 --> 01:03:53,200
and iq ii is used in a lot of settings

1741
01:03:53,200 --> 01:03:54,880
and we do know about quite a few

1742
01:03:54,880 --> 01:03:57,280
settings that are in the governmental or

1743
01:03:57,280 --> 01:03:59,119
military context

1744
01:03:59,119 --> 01:04:00,160
and there

1745
01:04:00,160 --> 01:04:03,520
they want to have a very secure solution

1746
01:04:03,520 --> 01:04:05,520
and sometimes they have quite good

1747
01:04:05,520 --> 01:04:08,000
throughputs it's not always

1748
01:04:08,000 --> 01:04:09,920
that bad having

1749
01:04:09,920 --> 01:04:11,599
they don't have two lossy networks in

1750
01:04:11,599 --> 01:04:14,799
some cases and they basically want to

1751
01:04:14,799 --> 01:04:16,720
have mega lease because

1752
01:04:16,720 --> 01:04:19,200
mega lease is really big no one actually

1753
01:04:19,200 --> 01:04:21,520
wants to use us and you had to use it

1754
01:04:21,520 --> 01:04:23,119
but

1755
01:04:23,119 --> 01:04:26,480
it is like the security fallback to have

1756
01:04:26,480 --> 01:04:28,640
and you can use mega lease in this

1757
01:04:28,640 --> 01:04:29,839
context

1758
01:04:29,839 --> 01:04:33,039
the problem is like the 64k limit and

1759
01:04:33,039 --> 01:04:35,359
that's exactly why there is this

1760
01:04:35,359 --> 01:04:38,880
internet draft for this beyond 64k

1761
01:04:38,880 --> 01:04:41,359
and this is not only talking about

1762
01:04:41,359 --> 01:04:43,200
negalese in a

1763
01:04:43,200 --> 01:04:46,319
chem context but it's also talking about

1764
01:04:46,319 --> 01:04:48,640
signature certificates

1765
01:04:48,640 --> 01:04:50,240
for quite a few schemes if you want to

1766
01:04:50,240 --> 01:04:51,359
have like

1767
01:04:51,359 --> 01:04:53,680
a quantum resistance scheme for

1768
01:04:53,680 --> 01:04:55,839
authentication as well

1769
01:04:55,839 --> 01:04:57,200
and

1770
01:04:57,200 --> 01:05:00,559
there you get quite a lot of complex

1771
01:05:00,559 --> 01:05:03,680
state machines and it gets quite messy

1772
01:05:03,680 --> 01:05:05,200
and

1773
01:05:05,200 --> 01:05:08,160
there are really many uh denial of

1774
01:05:08,160 --> 01:05:09,839
service options you could have as an

1775
01:05:09,839 --> 01:05:12,640
attacker and one easy way to go about it

1776
01:05:12,640 --> 01:05:14,559
without doing uh

1777
01:05:14,559 --> 01:05:16,079
a lot of multiple key exchanges

1778
01:05:16,079 --> 01:05:19,359
beforehand is have like this very first

1779
01:05:19,359 --> 01:05:23,039
barrier so taking just one efficient

1780
01:05:23,039 --> 01:05:25,359
quantum resistance scheme included in i

1781
01:05:25,359 --> 01:05:28,240
guess in it we still don't know if this

1782
01:05:28,240 --> 01:05:29,680
single uh

1783
01:05:29,680 --> 01:05:31,520
scheme is like really secure for the

1784
01:05:31,520 --> 01:05:34,240
next five years we just can't say it

1785
01:05:34,240 --> 01:05:36,720
but it is an additional effort that an

1786
01:05:36,720 --> 01:05:39,119
attacker would have to do like in the

1787
01:05:39,119 --> 01:05:42,400
very first exchange of any data

1788
01:05:42,400 --> 01:05:45,039
so this might be quite a cost efficient

1789
01:05:45,039 --> 01:05:46,240
solution

1790
01:05:46,240 --> 01:05:47,119
and

1791
01:05:47,119 --> 01:05:48,160
it would

1792
01:05:48,160 --> 01:05:50,640
help for quite a few cases of denial of

1793
01:05:50,640 --> 01:05:53,920
service attacks as well and you might be

1794
01:05:53,920 --> 01:05:56,559
able to implement it

1795
01:05:56,559 --> 01:05:58,319
and also like implement like

1796
01:05:58,319 --> 01:06:00,480
intermediate and everything above it as

1797
01:06:00,480 --> 01:06:03,200
well so we've implemented it and we've

1798
01:06:03,200 --> 01:06:05,039
also done some measurements and i think

1799
01:06:05,039 --> 01:06:06,799
it has

1800
01:06:06,799 --> 01:06:07,760
a few

1801
01:06:07,760 --> 01:06:10,559
graphics to show

1802
01:06:12,000 --> 01:06:13,920
so okay

1803
01:06:13,920 --> 01:06:15,359
yes

1804
01:06:15,359 --> 01:06:16,720
um

1805
01:06:16,720 --> 01:06:19,720
exactly

1806
01:06:26,559 --> 01:06:29,280
we are not hearing you

1807
01:06:29,280 --> 01:06:33,839
we did hear you earlier but

1808
01:06:49,520 --> 01:06:52,559
we're just gonna switch places

1809
01:06:52,559 --> 01:06:53,520
all right

1810
01:06:53,520 --> 01:06:55,599
then we do it that way

1811
01:06:55,599 --> 01:06:57,119
um

1812
01:06:57,119 --> 01:06:58,559
we implemented

1813
01:06:58,559 --> 01:07:01,119
all the drafts actually

1814
01:07:01,119 --> 01:07:03,359
and

1815
01:07:03,440 --> 01:07:05,359
let's do that we implemented all the

1816
01:07:05,359 --> 01:07:08,079
drafts so our intermediate exchange the

1817
01:07:08,079 --> 01:07:11,359
follow-up exchanges and the beyond 64k

1818
01:07:11,359 --> 01:07:12,640
limit draft

1819
01:07:12,640 --> 01:07:14,799
and but not the current version but the

1820
01:07:14,799 --> 01:07:16,559
version before the current version uses

1821
01:07:16,559 --> 01:07:17,280
uh

1822
01:07:17,280 --> 01:07:20,160
mixed mode um so tcp for the handshake

1823
01:07:20,160 --> 01:07:21,119
and

1824
01:07:21,119 --> 01:07:23,039
udp for

1825
01:07:23,039 --> 01:07:25,760
for the actual payload data

1826
01:07:25,760 --> 01:07:27,440
what we do is

1827
01:07:27,440 --> 01:07:29,280
what we did is just the version before

1828
01:07:29,280 --> 01:07:31,839
we just use udp

1829
01:07:31,839 --> 01:07:34,319
and we tested it for

1830
01:07:34,319 --> 01:07:35,520
several

1831
01:07:35,520 --> 01:07:37,920
different network configurations so this

1832
01:07:37,920 --> 01:07:40,240
is what we see right now there we have

1833
01:07:40,240 --> 01:07:43,119
on the exact x-axis the error rate so

1834
01:07:43,119 --> 01:07:45,599
like the packet failure rate and percent

1835
01:07:45,599 --> 01:07:49,039
and on the y-axis we see the ever the

1836
01:07:49,039 --> 01:07:50,960
handshake duration for each network

1837
01:07:50,960 --> 01:07:53,680
configuration so like f each error rate

1838
01:07:53,680 --> 01:07:56,480
there were 100 100 measurements taken

1839
01:07:56,480 --> 01:07:57,359
and

1840
01:07:57,359 --> 01:07:59,440
the the underlying conditions were at

1841
01:07:59,440 --> 01:08:00,960
this point

1842
01:08:00,960 --> 01:08:05,200
100 milliseconds of a pretty constant um

1843
01:08:05,200 --> 01:08:09,520
latency and 100 megabyte

1844
01:08:09,520 --> 01:08:12,240
off of uh throughput so

1845
01:08:12,240 --> 01:08:13,119
um

1846
01:08:13,119 --> 01:08:15,119
it's like in german you would say like

1847
01:08:15,119 --> 01:08:17,040
an average um

1848
01:08:17,040 --> 01:08:19,439
usual household uh

1849
01:08:19,439 --> 01:08:21,439
connection

1850
01:08:21,439 --> 01:08:26,238
and there we see that as long as the

1851
01:08:26,238 --> 01:08:27,600
package

1852
01:08:27,600 --> 01:08:30,560
drop rate is not too high

1853
01:08:30,560 --> 01:08:34,238
um it's like around i'd say 10

1854
01:08:34,238 --> 01:08:36,000
10 seconds

1855
01:08:36,000 --> 01:08:39,120
until the essays are created

1856
01:08:39,120 --> 01:08:40,319
which

1857
01:08:40,319 --> 01:08:42,880
we deem actually pretty acceptable

1858
01:08:42,880 --> 01:08:46,319
for a solution that is for like sellers

1859
01:08:46,319 --> 01:08:48,399
with with especially high security

1860
01:08:48,399 --> 01:08:50,799
requirements where agencies say okay

1861
01:08:50,799 --> 01:08:52,960
these day this data has to be secure for

1862
01:08:52,960 --> 01:08:55,679
decades not just for like five years or

1863
01:08:55,679 --> 01:08:57,279
something like that

1864
01:08:57,279 --> 01:08:59,279
and um

1865
01:08:59,279 --> 01:09:02,319
for this i guess we think it's actually

1866
01:09:02,319 --> 01:09:05,439
a solution that is not too bad um

1867
01:09:05,439 --> 01:09:08,479
obviously if you want to connect a large

1868
01:09:08,479 --> 01:09:11,520
amount of um mobile clients working over

1869
01:09:11,520 --> 01:09:12,640
like uh

1870
01:09:12,640 --> 01:09:14,880
cell phone uh connections

1871
01:09:14,880 --> 01:09:16,479
uh you you come

1872
01:09:16,479 --> 01:09:18,839
you get into trouble that is that's

1873
01:09:18,839 --> 01:09:22,399
clear you also see it um we tested the

1874
01:09:22,399 --> 01:09:24,399
the same the same setup but instead of

1875
01:09:24,399 --> 01:09:26,719
100 megabit it was one megabit of

1876
01:09:26,719 --> 01:09:28,960
throughput so if you can show the next

1877
01:09:28,960 --> 01:09:30,399
slide please

1878
01:09:30,399 --> 01:09:32,560
and there we have a pretty clear

1879
01:09:32,560 --> 01:09:36,880
distinction so um we're pretty fast at

1880
01:09:36,880 --> 01:09:38,799
around 50 seconds

1881
01:09:38,799 --> 01:09:40,640
of handshake duration

1882
01:09:40,640 --> 01:09:44,319
or even more than when the package loss

1883
01:09:44,319 --> 01:09:45,520
goes up

1884
01:09:45,520 --> 01:09:48,238
and i don't think this so this shows

1885
01:09:48,238 --> 01:09:49,679
like

1886
01:09:49,679 --> 01:09:52,158
less reliable uh wireless networks

1887
01:09:52,158 --> 01:09:55,440
and i don't think this is a um

1888
01:09:55,440 --> 01:09:58,239
or just smaller um

1889
01:09:58,239 --> 01:10:00,320
red networks with less throughput and we

1890
01:10:00,320 --> 01:10:02,800
don't think for this use case this draft

1891
01:10:02,800 --> 01:10:04,480
is is fit

1892
01:10:04,480 --> 01:10:06,800
but already in the not mixed mode

1893
01:10:06,800 --> 01:10:09,199
versions on the old version it we think

1894
01:10:09,199 --> 01:10:11,840
it's quite acceptable to use it for

1895
01:10:11,840 --> 01:10:14,400
those special setups where the

1896
01:10:14,400 --> 01:10:16,080
huge amount of security long-term

1897
01:10:16,080 --> 01:10:19,199
security is required

1898
01:10:19,199 --> 01:10:20,560
yes um

1899
01:10:20,560 --> 01:10:22,800
still we thought i should talk about

1900
01:10:22,800 --> 01:10:25,679
where to use it because um a gateway

1901
01:10:25,679 --> 01:10:28,239
having to accept um like

1902
01:10:28,239 --> 01:10:30,640
several megabytes or 1.4 in the largest

1903
01:10:30,640 --> 01:10:33,199
configuration megabytes of data

1904
01:10:33,199 --> 01:10:35,280
from an unauthenticated peer

1905
01:10:35,280 --> 01:10:37,520
just opens up the attack vector of just

1906
01:10:37,520 --> 01:10:40,000
many peers sending sending these these

1907
01:10:40,000 --> 01:10:41,280
large

1908
01:10:41,280 --> 01:10:42,800
public keys

1909
01:10:42,800 --> 01:10:45,120
and thereby exhausting the memory of the

1910
01:10:45,120 --> 01:10:46,320
gateway

1911
01:10:46,320 --> 01:10:49,760
and so by this denying the service

1912
01:10:49,760 --> 01:10:52,400
and therefore has to be some protection

1913
01:10:52,400 --> 01:10:54,880
against this attack so we think

1914
01:10:54,880 --> 01:10:55,760
um

1915
01:10:55,760 --> 01:10:59,199
putting it behind authentication so

1916
01:10:59,199 --> 01:11:00,480
each

1917
01:11:00,480 --> 01:11:02,400
initiator has to authenticate itself

1918
01:11:02,400 --> 01:11:05,440
first and it's then able to

1919
01:11:05,440 --> 01:11:08,880
to send the the mcaleese key exchange

1920
01:11:08,880 --> 01:11:10,719
in our way we did this by immediately

1921
01:11:10,719 --> 01:11:13,120
re-keying and only allowing the uh

1922
01:11:13,120 --> 01:11:15,199
mcleans to be sent during

1923
01:11:15,199 --> 01:11:16,719
follow-up exchanges

1924
01:11:16,719 --> 01:11:18,080
but

1925
01:11:18,080 --> 01:11:19,679
as we talked

1926
01:11:19,679 --> 01:11:21,440
discussed already last time this has

1927
01:11:21,440 --> 01:11:24,840
some implications so um

1928
01:11:24,840 --> 01:11:25,840
yeah uh

1929
01:11:25,840 --> 01:11:27,840
it has to is it's a decision to be made

1930
01:11:27,840 --> 01:11:30,480
i think there are it's not one like

1931
01:11:30,480 --> 01:11:32,239
obviously right choice and all the

1932
01:11:32,239 --> 01:11:33,760
others are wrong but we should

1933
01:11:33,760 --> 01:11:35,840
definitely talk about it and definitely

1934
01:11:35,840 --> 01:11:38,000
in the context of this draft because

1935
01:11:38,000 --> 01:11:40,880
this draft is explicitly made for

1936
01:11:40,880 --> 01:11:44,560
um allowing mcaleese to be to be used

1937
01:11:44,560 --> 01:11:45,840
yes

1938
01:11:45,840 --> 01:11:49,760
that's actually what i wanted to say

1939
01:11:50,000 --> 01:11:51,679
is there any opinions about it i think

1940
01:11:51,679 --> 01:11:53,440
there was already a lot mentioned on the

1941
01:11:53,440 --> 01:11:54,800
mailing list

1942
01:11:54,800 --> 01:11:56,000
we'd be

1943
01:11:56,000 --> 01:11:59,440
i'd be happy to hear that now

1944
01:12:05,199 --> 01:12:08,759
go ahead valerie

1945
01:12:12,159 --> 01:12:14,159
so

1946
01:12:14,159 --> 01:12:15,199
first

1947
01:12:15,199 --> 01:12:18,480
i think that using uh udp they trusted

1948
01:12:18,480 --> 01:12:20,719
me very largely

1949
01:12:20,719 --> 01:12:23,920
as as it was in blue's version of the

1950
01:12:23,920 --> 01:12:25,679
n64 car

1951
01:12:25,679 --> 01:12:28,880
uh it's not a very good uh

1952
01:12:28,880 --> 01:12:31,440
idea that's why we introduced a mixed

1953
01:12:31,440 --> 01:12:32,880
transport mod

1954
01:12:32,880 --> 01:12:35,600
uh i think that it will solve a

1955
01:12:35,600 --> 01:12:39,840
reliability problem because i will well

1956
01:12:39,840 --> 01:12:41,760
your figures are very impressive but i

1957
01:12:41,760 --> 01:12:44,400
think if this is used for

1958
01:12:44,400 --> 01:12:45,520
uh ike

1959
01:12:45,520 --> 01:12:47,199
in this case uh

1960
01:12:47,199 --> 01:12:48,400
so this

1961
01:12:48,400 --> 01:12:52,000
this will be solved and what about the

1962
01:12:52,000 --> 01:12:53,679
solution you propose

1963
01:12:53,679 --> 01:12:56,000
to make some combined

1964
01:12:56,000 --> 01:12:59,440
combined key exchange that combines uh

1965
01:12:59,440 --> 01:13:01,600
difficult one with some

1966
01:13:01,600 --> 01:13:04,840
quest quantum

1967
01:13:07,199 --> 01:13:09,440
with some post-quantum uh alteration

1968
01:13:09,440 --> 01:13:12,320
with small public key i think it's it's

1969
01:13:12,320 --> 01:13:14,719
not a bad idea but

1970
01:13:14,719 --> 01:13:17,040
uh first of all

1971
01:13:17,040 --> 01:13:19,679
uh to the

1972
01:13:19,679 --> 01:13:22,000
multiple key drops because you can use

1973
01:13:22,000 --> 01:13:23,280
it uh

1974
01:13:23,280 --> 01:13:25,679
with or without it's just just well

1975
01:13:25,679 --> 01:13:28,400
multiple key drop makes one

1976
01:13:28,400 --> 01:13:31,760
change to the ip2

1977
01:13:31,760 --> 01:13:34,159
protocol it remains uh difficult on

1978
01:13:34,159 --> 01:13:36,719
group through generic key exchange

1979
01:13:36,719 --> 01:13:39,840
method and uh with this change you can

1980
01:13:39,840 --> 01:13:42,480
define a key exchange method as

1981
01:13:42,480 --> 01:13:44,560
as you want as combination of two key

1982
01:13:44,560 --> 01:13:46,640
exchanges so it's okay

1983
01:13:46,640 --> 01:13:48,560
and you can use it to with without

1984
01:13:48,560 --> 01:13:50,400
multiple key exchanges

1985
01:13:50,400 --> 01:13:53,440
and uh it's just a secondary work

1986
01:13:53,440 --> 01:13:57,280
what what makes me uh

1987
01:13:57,280 --> 01:13:59,360
what i don't like about it

1988
01:13:59,360 --> 01:14:01,679
is that

1989
01:14:01,679 --> 01:14:02,560
well

1990
01:14:02,560 --> 01:14:04,480
you pick you have

1991
01:14:04,480 --> 01:14:06,880
picked up a single

1992
01:14:06,880 --> 01:14:08,080
uh

1993
01:14:08,080 --> 01:14:09,679
classic

1994
01:14:09,679 --> 01:14:11,199
exchange

1995
01:14:11,199 --> 01:14:14,880
to 55 19 and the single post quantum key

1996
01:14:14,880 --> 01:14:16,320
exchange

1997
01:14:16,320 --> 01:14:18,880
well i think that it's okay

1998
01:14:18,880 --> 01:14:21,280
but not not in all environments there

1999
01:14:21,280 --> 01:14:23,280
are lots of environments that will

2000
01:14:23,280 --> 01:14:25,600
insist on using this particular

2001
01:14:25,600 --> 01:14:26,560
uh

2002
01:14:26,560 --> 01:14:28,960
quantum key exchange in this particular

2003
01:14:28,960 --> 01:14:32,320
uh classic exchange and and they they

2004
01:14:32,320 --> 01:14:33,600
won't be

2005
01:14:33,600 --> 01:14:35,760
those that you have selected so that's

2006
01:14:35,760 --> 01:14:38,320
why multiple pe will solve this problem

2007
01:14:38,320 --> 01:14:40,560
but combinations so you can achieve the

2008
01:14:40,560 --> 01:14:42,239
same result if you perform like i say

2009
01:14:42,239 --> 01:14:44,960
need with any classic exchange you want

2010
01:14:44,960 --> 01:14:48,320
and then follow with the uh

2011
01:14:48,320 --> 01:14:49,840
what quantity is change with small

2012
01:14:49,840 --> 01:14:52,960
public key and academic and

2013
01:14:52,960 --> 01:14:55,360
it will add you

2014
01:14:55,360 --> 01:14:57,920
uh one extra round cheap

2015
01:14:57,920 --> 01:15:00,640
uh comparing to your solution but uh

2016
01:15:00,640 --> 01:15:02,400
much more flexibility that is very

2017
01:15:02,400 --> 01:15:03,520
important for

2018
01:15:03,520 --> 01:15:05,600
for some environments

2019
01:15:05,600 --> 01:15:08,560
i totally agree um if i just um

2020
01:15:08,560 --> 01:15:12,320
can like directly uh answer to that um i

2021
01:15:12,320 --> 01:15:14,640
totally agree and i think for long term

2022
01:15:14,640 --> 01:15:17,520
um the greater flexibility of follow-up

2023
01:15:17,520 --> 01:15:19,840
exchange like the the um multiple key

2024
01:15:19,840 --> 01:15:21,600
exchanges and the intermedia

2025
01:15:21,600 --> 01:15:23,920
intermediate exchanges is definitely the

2026
01:15:23,920 --> 01:15:26,320
superior solution

2027
01:15:26,320 --> 01:15:28,239
still for

2028
01:15:28,239 --> 01:15:30,159
migration purposes

2029
01:15:30,159 --> 01:15:32,400
because the the intermediate exchange

2030
01:15:32,400 --> 01:15:35,040
does definitely add complexity

2031
01:15:35,040 --> 01:15:36,159
due to its

2032
01:15:36,159 --> 01:15:38,080
interconnectedness with authentication

2033
01:15:38,080 --> 01:15:40,640
and the way the signature has to be

2034
01:15:40,640 --> 01:15:43,040
calculated and

2035
01:15:43,040 --> 01:15:44,960
so currently we have to expect that

2036
01:15:44,960 --> 01:15:47,360
agencies already record uh

2037
01:15:47,360 --> 01:15:48,560
data to

2038
01:15:48,560 --> 01:15:51,199
be able to uh decrypt it when they have

2039
01:15:51,199 --> 01:15:53,760
a large quantum computer available later

2040
01:15:53,760 --> 01:15:56,159
on in whenever that may be

2041
01:15:56,159 --> 01:16:00,480
and so we should like start use using

2042
01:16:00,480 --> 01:16:02,239
post quantum cryptography better now

2043
01:16:02,239 --> 01:16:03,360
than than

2044
01:16:03,360 --> 01:16:05,199
in a few years

2045
01:16:05,199 --> 01:16:07,199
or a few months so

2046
01:16:07,199 --> 01:16:10,880
um the the easy solution of just adding

2047
01:16:10,880 --> 01:16:14,159
i don't know one to three um given fixed

2048
01:16:14,159 --> 01:16:15,760
combinations

2049
01:16:15,760 --> 01:16:18,080
that are like there's no big protocol

2050
01:16:18,080 --> 01:16:20,480
changes there's uh as you said it's it's

2051
01:16:20,480 --> 01:16:21,520
um

2052
01:16:21,520 --> 01:16:22,960
really low effort

2053
01:16:22,960 --> 01:16:23,840
um

2054
01:16:23,840 --> 01:16:24,640
and

2055
01:16:24,640 --> 01:16:26,400
the adoption of this for many

2056
01:16:26,400 --> 01:16:28,239
implementations should be should be

2057
01:16:28,239 --> 01:16:29,520
pretty quick

2058
01:16:29,520 --> 01:16:33,440
and uh then in in the to like

2059
01:16:33,440 --> 01:16:35,920
overcome the transition period until uh

2060
01:16:35,920 --> 01:16:37,520
the intermediate exchange and the

2061
01:16:37,520 --> 01:16:40,640
multiple key exchanges draft is uh has a

2062
01:16:40,640 --> 01:16:43,760
wide wide adopting like wide acceptance

2063
01:16:43,760 --> 01:16:46,080
yeah it's widely adopted by different

2064
01:16:46,080 --> 01:16:47,520
implementations

2065
01:16:47,520 --> 01:16:49,199
and um

2066
01:16:49,199 --> 01:16:51,360
so because otherwise we still have a gap

2067
01:16:51,360 --> 01:16:53,199
where we just use

2068
01:16:53,199 --> 01:16:54,640
as it is

2069
01:16:54,640 --> 01:16:57,040
as it is now just use uh classical key

2070
01:16:57,040 --> 01:16:58,080
exchanges

2071
01:16:58,080 --> 01:17:00,080
like tiffy helmand

2072
01:17:00,080 --> 01:17:02,159
i just want to point out that we will

2073
01:17:02,159 --> 01:17:04,320
already have an rfc

2074
01:17:04,320 --> 01:17:07,280
uh 8764

2075
01:17:07,280 --> 01:17:10,000
for using a mixing per shared key to

2076
01:17:10,000 --> 01:17:13,440
achieve both quantum security and it was

2077
01:17:13,440 --> 01:17:15,360
deliberately

2078
01:17:15,360 --> 01:17:18,080
chosen as a short-term solution before

2079
01:17:18,080 --> 01:17:20,960
post quantum key exchange

2080
01:17:20,960 --> 01:17:24,159
became mature so you can always use

2081
01:17:24,159 --> 01:17:26,880
this rfc and it has yes it has some

2082
01:17:26,880 --> 01:17:28,719
scalability problem there but it gives

2083
01:17:28,719 --> 01:17:29,600
you

2084
01:17:29,600 --> 01:17:32,400
the the whole protection from

2085
01:17:32,400 --> 01:17:34,400
uh quantum computers

2086
01:17:34,400 --> 01:17:35,440
so

2087
01:17:35,440 --> 01:17:36,400
and

2088
01:17:36,400 --> 01:17:38,560
well so i don't i don't mind if you

2089
01:17:38,560 --> 01:17:41,440
defined uh a combined key exchange as as

2090
01:17:41,440 --> 01:17:43,280
for me but i think that this is a

2091
01:17:43,280 --> 01:17:46,400
stronghold work so you can you can write

2092
01:17:46,400 --> 01:17:48,960
uh draft defining how how keys are

2093
01:17:48,960 --> 01:17:52,560
combined and uh for me just for me

2094
01:17:52,560 --> 01:17:54,239
for some

2095
01:17:54,239 --> 01:17:57,760
uh reasons of a great magicity i i think

2096
01:17:57,760 --> 01:18:00,480
that i'd avoid using some hashes and

2097
01:18:00,480 --> 01:18:04,000
just make a concatenation of public keys

2098
01:18:04,000 --> 01:18:06,719
because if you

2099
01:18:06,719 --> 01:18:08,560
stick with

2100
01:18:08,560 --> 01:18:10,159
a hash function

2101
01:18:10,159 --> 01:18:12,239
you will use it forever it's it's no

2102
01:18:12,239 --> 01:18:14,239
agility so you will change the whole

2103
01:18:14,239 --> 01:18:15,760
combined method

2104
01:18:15,760 --> 01:18:18,400
well if but it's in my opinion so it's

2105
01:18:18,400 --> 01:18:20,080
it's uh

2106
01:18:20,080 --> 01:18:22,400
security expense should analyze it

2107
01:18:22,400 --> 01:18:24,640
oh i think that is good

2108
01:18:24,640 --> 01:18:27,679
but so so uh the bottom line what i want

2109
01:18:27,679 --> 01:18:29,760
to say i think that uh it's not a bad

2110
01:18:29,760 --> 01:18:32,400
idea but it is not uh concerned with the

2111
01:18:32,400 --> 01:18:35,280
current efforts to make multiple key and

2112
01:18:35,280 --> 01:18:38,080
beyond 64. because i think they they

2113
01:18:38,080 --> 01:18:41,280
should be continued and to make

2114
01:18:41,280 --> 01:18:44,159
workable and yes

2115
01:18:44,159 --> 01:18:47,520
yes i think um they might be uh

2116
01:18:47,520 --> 01:18:48,480
like

2117
01:18:48,480 --> 01:18:51,360
if he is the beyond 64k draft and he put

2118
01:18:51,360 --> 01:18:54,719
the uh the the large key exchanges

2119
01:18:54,719 --> 01:18:58,000
behind authentication like we proposed

2120
01:18:58,000 --> 01:18:59,760
then you might run into the the

2121
01:18:59,760 --> 01:19:03,199
situation where you don't use a quantum

2122
01:19:03,199 --> 01:19:06,159
secure um key exchange before

2123
01:19:06,159 --> 01:19:07,760
authentication because

2124
01:19:07,760 --> 01:19:09,440
an administrator thinks well i use make

2125
01:19:09,440 --> 01:19:10,960
a list there's a secure enough there i

2126
01:19:10,960 --> 01:19:12,560
don't need another post quantum key

2127
01:19:12,560 --> 01:19:14,719
exchange and then they have

2128
01:19:14,719 --> 01:19:16,880
iksa in it with the classical key

2129
01:19:16,880 --> 01:19:19,280
exchange they have authentication and

2130
01:19:19,280 --> 01:19:21,440
then they re-key or whatever however

2131
01:19:21,440 --> 01:19:22,400
it's structured

2132
01:19:22,400 --> 01:19:25,840
and uh run the the mecalis key exchange

2133
01:19:25,840 --> 01:19:29,360
um a attacker who lively like in in real

2134
01:19:29,360 --> 01:19:32,000
time decrypts or breaks the first key

2135
01:19:32,000 --> 01:19:33,040
exchange

2136
01:19:33,040 --> 01:19:34,880
would obtain the the

2137
01:19:34,880 --> 01:19:37,520
shared secret and this would allow him

2138
01:19:37,520 --> 01:19:40,480
to or them to um

2139
01:19:40,480 --> 01:19:43,440
to manipu manipulate the

2140
01:19:43,440 --> 01:19:46,080
message authentication code of the

2141
01:19:46,080 --> 01:19:49,040
mcaleeski exchanges so establishing a

2142
01:19:49,040 --> 01:19:50,560
full man in the middle position before

2143
01:19:50,560 --> 01:19:53,120
the mcat key exchange is conducted

2144
01:19:53,120 --> 01:19:55,280
so

2145
01:19:55,520 --> 01:19:58,080
there would be another easy option to to

2146
01:19:58,080 --> 01:19:59,199
just

2147
01:19:59,199 --> 01:20:01,280
deny it deny that auction or to deny

2148
01:20:01,280 --> 01:20:02,480
this attack

2149
01:20:02,480 --> 01:20:06,480
without even requiring um

2150
01:20:06,719 --> 01:20:08,480
the multiple key exchange or the

2151
01:20:08,480 --> 01:20:10,320
intermediate exchanges which doesn't

2152
01:20:10,320 --> 01:20:11,600
mean um

2153
01:20:11,600 --> 01:20:13,600
you should not you like you should not

2154
01:20:13,600 --> 01:20:16,560
use it so you could still say you use

2155
01:20:16,560 --> 01:20:19,199
i can say in it with i don't know

2156
01:20:19,199 --> 01:20:21,199
classical tiffy hermann

2157
01:20:21,199 --> 01:20:23,440
and then use the first intermediate

2158
01:20:23,440 --> 01:20:25,760
exchange with some lattice-based scheme

2159
01:20:25,760 --> 01:20:27,280
and then you have authentication and

2160
01:20:27,280 --> 01:20:28,719
then you have uh

2161
01:20:28,719 --> 01:20:31,520
then you have your mcliskey exchange or

2162
01:20:31,520 --> 01:20:35,040
you just have you configure um

2163
01:20:35,040 --> 01:20:35,760
your

2164
01:20:35,760 --> 01:20:38,320
combined mechanism in iso in it with

2165
01:20:38,320 --> 01:20:41,760
ecdh and with some some small

2166
01:20:41,760 --> 01:20:43,600
letters based scheme

2167
01:20:43,600 --> 01:20:46,080
which at least prevents an attacker from

2168
01:20:46,080 --> 01:20:48,960
breaking the code life in real time then

2169
01:20:48,960 --> 01:20:50,239
you have authentication and then you

2170
01:20:50,239 --> 01:20:51,360
have

2171
01:20:51,360 --> 01:20:54,480
your meca lease scheme so um

2172
01:20:54,480 --> 01:20:56,639
in that situation it could be like

2173
01:20:56,639 --> 01:20:58,719
also come in handy but it's definitely

2174
01:20:58,719 --> 01:21:01,040
not a must so it's just a another

2175
01:21:01,040 --> 01:21:03,679
another um

2176
01:21:03,679 --> 01:21:06,159
thing to make it more easy and more the

2177
01:21:06,159 --> 01:21:08,800
transition more and more smoothly

2178
01:21:08,800 --> 01:21:10,880
all right you can also achieve this by

2179
01:21:10,880 --> 01:21:14,000
doing uh classical uh exchange that i

2180
01:21:14,000 --> 01:21:16,320
can say need then i can intermediate

2181
01:21:16,320 --> 01:21:19,040
with some small public key yes yes

2182
01:21:19,040 --> 01:21:21,360
then authenticate and then make a lease

2183
01:21:21,360 --> 01:21:23,599
yes

2184
01:21:24,320 --> 01:21:26,480
so it's as i said it's not a it's not a

2185
01:21:26,480 --> 01:21:28,639
definite must but it's i think it would

2186
01:21:28,639 --> 01:21:31,199
make all of these transition transition

2187
01:21:31,199 --> 01:21:33,440
periods more easy and as

2188
01:21:33,440 --> 01:21:34,239
i mean

2189
01:21:34,239 --> 01:21:36,639
as we we already agreed upon them it's

2190
01:21:36,639 --> 01:21:38,800
it's a nice addition and

2191
01:21:38,800 --> 01:21:40,239
which which

2192
01:21:40,239 --> 01:21:42,159
should make the transition periods

2193
01:21:42,159 --> 01:21:44,239
smoother and

2194
01:21:44,239 --> 01:21:45,920
on the long term the

2195
01:21:45,920 --> 01:21:47,840
the the the

2196
01:21:47,840 --> 01:21:50,000
solution which with more um

2197
01:21:50,000 --> 01:21:51,760
cryptographic agility which allows more

2198
01:21:51,760 --> 01:21:53,280
cryptocurrency

2199
01:21:53,280 --> 01:21:56,880
like uh the follow key exchange md the

2200
01:21:56,880 --> 01:21:59,360
multiple key exchanges

2201
01:21:59,360 --> 01:22:02,080
should be preferred

2202
01:22:09,199 --> 01:22:10,400
so i think it's it's like two

2203
01:22:10,400 --> 01:22:12,719
discussions one to introduce the the

2204
01:22:12,719 --> 01:22:14,400
small key exchanges

2205
01:22:14,400 --> 01:22:15,840
um the

2206
01:22:15,840 --> 01:22:18,480
excuse me uh the the uh classical

2207
01:22:18,480 --> 01:22:21,920
together with uh with one small um pc

2208
01:22:21,920 --> 01:22:24,480
algorithm hearing um

2209
01:22:24,480 --> 01:22:26,159
i guess in it

2210
01:22:26,159 --> 01:22:28,159
which would be like a separate track and

2211
01:22:28,159 --> 01:22:30,239
the other discussion is that we should

2212
01:22:30,239 --> 01:22:31,760
um

2213
01:22:31,760 --> 01:22:35,600
it focuses on the beyond 64k draft

2214
01:22:35,600 --> 01:22:37,760
sadly we don't have measurements for for

2215
01:22:37,760 --> 01:22:39,040
mixed mode

2216
01:22:39,040 --> 01:22:41,520
but what weather reset they are

2217
01:22:41,520 --> 01:22:43,440
we expect them to be significantly

2218
01:22:43,440 --> 01:22:45,440
better better on the

2219
01:22:45,440 --> 01:22:50,040
under unreliable network conditions

2220
01:22:52,480 --> 01:22:52,740
and

2221
01:22:52,740 --> 01:22:54,719
[Music]

2222
01:22:54,719 --> 01:22:56,960
um

2223
01:22:58,080 --> 01:23:01,360
but already now for for some uh network

2224
01:23:01,360 --> 01:23:04,320
environments it is a acceptable solution

2225
01:23:04,320 --> 01:23:07,040
but we think um the

2226
01:23:07,040 --> 01:23:10,080
mca lease uh mca lease

2227
01:23:10,080 --> 01:23:12,239
key exchanges or like all key exchanges

2228
01:23:12,239 --> 01:23:14,000
that are that large that they require

2229
01:23:14,000 --> 01:23:17,360
the beyond 64k draft should at least

2230
01:23:17,360 --> 01:23:20,239
be put after authentication to prevent

2231
01:23:20,239 --> 01:23:22,880
the this attack vector for dos attacks

2232
01:23:22,880 --> 01:23:24,239
or

2233
01:23:24,239 --> 01:23:29,080
especially memory exhaustion attacks

2234
01:23:35,600 --> 01:23:36,880
so

2235
01:23:36,880 --> 01:23:39,920
so i think the next one eq is scott or

2236
01:23:39,920 --> 01:23:41,760
there was somebody who just dropped out

2237
01:23:41,760 --> 01:23:43,679
but

2238
01:23:43,679 --> 01:23:45,840
uh i'm actually going to ask a question

2239
01:23:45,840 --> 01:23:48,320
not about the protocol but about your

2240
01:23:48,320 --> 01:23:49,840
assertion that

2241
01:23:49,840 --> 01:23:52,080
20 seconds of delay

2242
01:23:52,080 --> 01:23:54,639
is actually acceptable i assume you are

2243
01:23:54,639 --> 01:23:56,880
running this on a net

2244
01:23:56,880 --> 01:23:59,120
on a conf on a

2245
01:23:59,120 --> 01:24:02,320
a single connection between one gateway

2246
01:24:02,320 --> 01:24:04,480
to another gateway or one client to

2247
01:24:04,480 --> 01:24:06,000
another client

2248
01:24:06,000 --> 01:24:07,920
yes uh unfortunately

2249
01:24:07,920 --> 01:24:11,840
we that uh quite commonly we have a

2250
01:24:11,840 --> 01:24:14,960
single gateway talking to

2251
01:24:14,960 --> 01:24:17,040
dozens hundreds possibly even thousands

2252
01:24:17,040 --> 01:24:19,760
of clients and sometimes they all try to

2253
01:24:19,760 --> 01:24:22,320
to basically come in at this about the

2254
01:24:22,320 --> 01:24:24,560
same time

2255
01:24:24,560 --> 01:24:25,679
uh

2256
01:24:25,679 --> 01:24:27,840
how would this scenario how would your

2257
01:24:27,840 --> 01:24:31,840
protocol work in that scenario

2258
01:24:32,480 --> 01:24:35,040
um that is a good question actually uh

2259
01:24:35,040 --> 01:24:36,639
so the test environment is just two

2260
01:24:36,639 --> 01:24:39,360
gateways communicating over um

2261
01:24:39,360 --> 01:24:40,159
yeah

2262
01:24:40,159 --> 01:24:42,400
more or less depending on configuration

2263
01:24:42,400 --> 01:24:45,280
reliable channel um

2264
01:24:45,280 --> 01:24:47,520
obviously if you uh

2265
01:24:47,520 --> 01:24:49,600
but it's it's also confined to 100

2266
01:24:49,600 --> 01:24:50,800
megabits so

2267
01:24:50,800 --> 01:24:53,040
i guess if you have a central central

2268
01:24:53,040 --> 01:24:56,320
route like central gateway um it

2269
01:24:56,320 --> 01:24:58,000
will hopefully have more than 100

2270
01:24:58,000 --> 01:24:59,600
megabit of throughput

2271
01:24:59,600 --> 01:25:01,040
and um

2272
01:25:01,040 --> 01:25:02,159
just

2273
01:25:02,159 --> 01:25:04,800
be more capable than that otherwise um i

2274
01:25:04,800 --> 01:25:06,960
don't think it will be fit for for such

2275
01:25:06,960 --> 01:25:08,800
a scenario

2276
01:25:08,800 --> 01:25:10,719
and

2277
01:25:10,719 --> 01:25:12,000
yeah other

2278
01:25:12,000 --> 01:25:14,000
obviously also if you connect a lot of

2279
01:25:14,000 --> 01:25:16,639
uh a lot of a lot of client initiatives

2280
01:25:16,639 --> 01:25:18,719
initiators at the same time

2281
01:25:18,719 --> 01:25:20,000
and um

2282
01:25:20,000 --> 01:25:21,360
all of them

2283
01:25:21,360 --> 01:25:24,320
are sending or send such large

2284
01:25:24,320 --> 01:25:26,639
public keys you will run into problems

2285
01:25:26,639 --> 01:25:28,880
and the 10 seconds

2286
01:25:28,880 --> 01:25:31,600
we we have here in our measurements for

2287
01:25:31,600 --> 01:25:33,600
for

2288
01:25:33,600 --> 01:25:37,440
rather rather good network conditions

2289
01:25:37,440 --> 01:25:39,199
will be surpassed

2290
01:25:39,199 --> 01:25:40,880
this is

2291
01:25:40,880 --> 01:25:43,440
especially if you have a setup with

2292
01:25:43,440 --> 01:25:45,760
thousands of peers who all

2293
01:25:45,760 --> 01:25:48,320
try to connect at the same time

2294
01:25:48,320 --> 01:25:52,799
i hope you can hear me as well i just

2295
01:25:54,639 --> 01:25:57,760
about like really a lot of uh clients

2296
01:25:57,760 --> 01:26:00,080
talking to a single gateway

2297
01:26:00,080 --> 01:26:02,239
because what we're talking about is like

2298
01:26:02,239 --> 01:26:04,480
there's agencies there's military stuff

2299
01:26:04,480 --> 01:26:06,639
where you won't have this

2300
01:26:06,639 --> 01:26:08,800
three four maybe five connections to

2301
01:26:08,800 --> 01:26:10,639
other places

2302
01:26:10,639 --> 01:26:13,040
and those have to be really secure and

2303
01:26:13,040 --> 01:26:15,199
they expect us to use megalith something

2304
01:26:15,199 --> 01:26:17,600
that they really can rely on

2305
01:26:17,600 --> 01:26:19,920
but on the other side there might be

2306
01:26:19,920 --> 01:26:21,280
hundreds of other

2307
01:26:21,280 --> 01:26:24,480
clients but i don't think that any

2308
01:26:24,480 --> 01:26:26,400
mobile client will be able to use

2309
01:26:26,400 --> 01:26:28,400
megaliths anyway so

2310
01:26:28,400 --> 01:26:30,320
we have to use something else there

2311
01:26:30,320 --> 01:26:31,360
anyway

2312
01:26:31,360 --> 01:26:32,320
but

2313
01:26:32,320 --> 01:26:34,840
when you only talk about those very

2314
01:26:34,840 --> 01:26:37,120
specific uh lines

2315
01:26:37,120 --> 01:26:39,920
only thinking about like one con

2316
01:26:39,920 --> 01:26:42,400
location connected to the other location

2317
01:26:42,400 --> 01:26:46,080
it should still be okay with this delay

2318
01:26:46,080 --> 01:26:48,480
well like even if you have like 10 or 20

2319
01:26:48,480 --> 01:26:50,080
gateways

2320
01:26:50,080 --> 01:26:52,719
and each of them has more than

2321
01:26:52,719 --> 01:26:54,719
the 100 megabit throughput let's say

2322
01:26:54,719 --> 01:26:57,199
that's one gigabit of throughput

2323
01:26:57,199 --> 01:27:00,000
it's roughly the same same situation as

2324
01:27:00,000 --> 01:27:02,480
the one we measured

2325
01:27:02,480 --> 01:27:03,679
of course

2326
01:27:03,679 --> 01:27:06,320
real-time measurements with uh

2327
01:27:06,320 --> 01:27:08,400
real-world uh conditions would be even

2328
01:27:08,400 --> 01:27:10,239
more um

2329
01:27:10,239 --> 01:27:12,800
it would give even more insight but uh

2330
01:27:12,800 --> 01:27:14,400
for these network

2331
01:27:14,400 --> 01:27:16,840
confined

2332
01:27:16,840 --> 01:27:19,679
confined yeah variants of networking

2333
01:27:19,679 --> 01:27:21,600
conditions um this might be a good

2334
01:27:21,600 --> 01:27:24,159
solution it's definitely not a one one

2335
01:27:24,159 --> 01:27:26,159
size fits all um

2336
01:27:26,159 --> 01:27:29,440
draft and it was never intended to be

2337
01:27:29,440 --> 01:27:31,360
and we still don't have really like too

2338
01:27:31,360 --> 01:27:33,520
many test setups like what we can do

2339
01:27:33,520 --> 01:27:36,239
right now is like test within germany so

2340
01:27:36,239 --> 01:27:38,080
over the internet is quite okay because

2341
01:27:38,080 --> 01:27:39,679
we have some locations where we can test

2342
01:27:39,679 --> 01:27:40,480
it

2343
01:27:40,480 --> 01:27:43,760
but so far we weren't really able to

2344
01:27:43,760 --> 01:27:45,679
like test it worldwide that would be

2345
01:27:45,679 --> 01:27:48,000
something we want to do so

2346
01:27:48,000 --> 01:27:50,400
if anyone can help us out that would be

2347
01:27:50,400 --> 01:27:52,320
great anyway

2348
01:27:52,320 --> 01:27:55,759
so we might be able to get it

2349
01:27:56,800 --> 01:28:00,920
he's awesome thecube thank you

2350
01:28:07,600 --> 01:28:09,679
i just want to add that i also performed

2351
01:28:09,679 --> 01:28:13,199
some experiments with machinist

2352
01:28:17,360 --> 01:28:19,199
and with my result

2353
01:28:19,199 --> 01:28:23,519
well i didn't maintain i didn't have a

2354
01:28:23,679 --> 01:28:26,719
network that emulates packet loss it was

2355
01:28:26,719 --> 01:28:29,600
just a

2356
01:28:29,600 --> 01:28:31,679
100 megabit

2357
01:28:31,679 --> 01:28:34,480
test bed network and

2358
01:28:34,480 --> 01:28:36,080
pretty dated

2359
01:28:36,080 --> 01:28:37,360
uh

2360
01:28:37,360 --> 01:28:38,400
stopped

2361
01:28:38,400 --> 01:28:41,040
and it took about few seconds to perform

2362
01:28:41,040 --> 01:28:43,040
marcolis with this setup

2363
01:28:43,040 --> 01:28:45,440
well i didn't i don't have exact measure

2364
01:28:45,440 --> 01:28:48,080
but it's about two three seconds to make

2365
01:28:48,080 --> 01:28:49,490
a list to complete

2366
01:28:49,490 --> 01:28:51,120
[Music]

2367
01:28:51,120 --> 01:28:52,960
just

2368
01:28:52,960 --> 01:28:56,840
my experience with it

2369
01:28:58,960 --> 01:29:00,480
okay oh yeah

2370
01:29:00,480 --> 01:29:02,400
also just for

2371
01:29:02,400 --> 01:29:04,639
just one little note uh the graphic you

2372
01:29:04,639 --> 01:29:08,400
see there which is rather rather uh high

2373
01:29:08,400 --> 01:29:10,639
connection times or handshake completion

2374
01:29:10,639 --> 01:29:12,080
times is

2375
01:29:12,080 --> 01:29:13,600
with a net

2376
01:29:13,600 --> 01:29:15,840
throughput of one megabit so this is a

2377
01:29:15,840 --> 01:29:18,080
really really confined um

2378
01:29:18,080 --> 01:29:20,239
throughput and

2379
01:29:20,239 --> 01:29:21,920
so like not

2380
01:29:21,920 --> 01:29:24,560
what we would expect a um

2381
01:29:24,560 --> 01:29:26,400
scenario to have

2382
01:29:26,400 --> 01:29:28,400
but it shows that it's really

2383
01:29:28,400 --> 01:29:30,560
not the best scenario for for this this

2384
01:29:30,560 --> 01:29:31,679
draft

2385
01:29:31,679 --> 01:29:33,360
sorry

2386
01:29:33,360 --> 01:29:35,920
all right so i think we are should be

2387
01:29:35,920 --> 01:29:38,800
getting

2388
01:29:38,800 --> 01:29:40,719
can you hear me now actually

2389
01:29:40,719 --> 01:29:42,320
with my microphone okay okay you can

2390
01:29:42,320 --> 01:29:44,400
hear me but i can't see my

2391
01:29:44,400 --> 01:29:45,840
text there

2392
01:29:45,840 --> 01:29:48,000
but anyway so we should be going forward

2393
01:29:48,000 --> 01:29:50,080
to next presentation

2394
01:29:50,080 --> 01:29:51,440
which should be

2395
01:29:51,440 --> 01:29:54,719
valerie which should try to speak

2396
01:29:54,719 --> 01:29:56,639
up this time because there have been

2397
01:29:56,639 --> 01:29:58,800
people complaining that you are too uh

2398
01:29:58,800 --> 01:30:00,880
you are not uh

2399
01:30:00,880 --> 01:30:03,440
loud enough

2400
01:30:03,440 --> 01:30:04,880
all right let's just say when you want

2401
01:30:04,880 --> 01:30:07,920
to go to next slides and zone

2402
01:30:07,920 --> 01:30:08,639
so

2403
01:30:08,639 --> 01:30:11,360
can you hear me

2404
01:30:12,320 --> 01:30:15,280
am i loud enough

2405
01:30:17,040 --> 01:30:19,840
so it's grocery management using iq2 so

2406
01:30:19,840 --> 01:30:22,400
next please

2407
01:30:23,040 --> 01:30:24,960
uh the draft is about securing ip

2408
01:30:24,960 --> 01:30:27,199
multicast and uh

2409
01:30:27,199 --> 01:30:28,880
this is a brief

2410
01:30:28,880 --> 01:30:30,639
uh reminder of

2411
01:30:30,639 --> 01:30:32,320
what multicast

2412
01:30:32,320 --> 01:30:34,800
is and i think you all this know about

2413
01:30:34,800 --> 01:30:37,120
it so it contains at least one center

2414
01:30:37,120 --> 01:30:38,960
and and receivers

2415
01:30:38,960 --> 01:30:42,159
and the packet uh it takes advantage

2416
01:30:42,159 --> 01:30:44,320
advantage of multicast routing that

2417
01:30:44,320 --> 01:30:47,360
delivers packet to all and receivers

2418
01:30:47,360 --> 01:30:48,960
and

2419
01:30:48,960 --> 01:30:50,000
uh for

2420
01:30:50,000 --> 01:30:52,800
to secure this setup uh this requires

2421
01:30:52,800 --> 01:30:55,199
sender and receiver to chase it up uh

2422
01:30:55,199 --> 01:30:58,159
like say using the same keys

2423
01:30:58,159 --> 01:30:58,960
so

2424
01:30:58,960 --> 01:31:00,719
uh

2425
01:31:00,719 --> 01:31:02,960
there are two kind of

2426
01:31:02,960 --> 01:31:04,960
uh

2427
01:31:04,960 --> 01:31:07,360
costs in this setup it's

2428
01:31:07,360 --> 01:31:10,719
group key group controller k7 gc cars

2429
01:31:10,719 --> 01:31:12,159
and group members

2430
01:31:12,159 --> 01:31:14,639
so group control k7 is

2431
01:31:14,639 --> 01:31:17,679
responsible for

2432
01:31:17,679 --> 01:31:19,920
generating the shared key and for

2433
01:31:19,920 --> 01:31:22,239
delivering them to the

2434
01:31:22,239 --> 01:31:25,120
group members at the time at the time

2435
01:31:25,120 --> 01:31:28,080
the group members joined the group

2436
01:31:28,080 --> 01:31:29,280
so this

2437
01:31:29,280 --> 01:31:32,000
a unicast registration protocol that is

2438
01:31:32,000 --> 01:31:34,480
very similar to iq2

2439
01:31:34,480 --> 01:31:35,440
and

2440
01:31:35,440 --> 01:31:38,080
except that it is not created a child

2441
01:31:38,080 --> 01:31:39,840
assay instead it

2442
01:31:39,840 --> 01:31:41,440
ends up with

2443
01:31:41,440 --> 01:31:43,040
shared keys that are delivered from

2444
01:31:43,040 --> 01:31:45,360
controller to group members so there is

2445
01:31:45,360 --> 01:31:48,480
also a rekey protocol that can be

2446
01:31:48,480 --> 01:31:50,880
done either we are multicast or via

2447
01:31:50,880 --> 01:31:53,600
unicast depending on the

2448
01:31:53,600 --> 01:31:55,520
controller choice

2449
01:31:55,520 --> 01:31:58,960
so the next please

2450
01:31:58,960 --> 01:32:00,560
so uh

2451
01:32:00,560 --> 01:32:01,520
and

2452
01:32:01,520 --> 01:32:03,679
gi quit2 is

2453
01:32:03,679 --> 01:32:05,920
intended to be used in

2454
01:32:05,920 --> 01:32:10,080
ieee 802 15 9

2455
01:32:10,080 --> 01:32:13,280
as a key management protocol for uh

2456
01:32:13,280 --> 01:32:16,639
multicast so i think terra

2457
01:32:16,639 --> 01:32:20,320
may uh correct me this this is data from

2458
01:32:20,320 --> 01:32:22,400
from the previous presentation probably

2459
01:32:22,400 --> 01:32:24,840
something has been changed but

2460
01:32:24,840 --> 01:32:26,480
uh

2461
01:32:26,480 --> 01:32:29,480
draft zero five version of

2462
01:32:29,480 --> 01:32:32,880
std80259 standard specifies that gip2 is

2463
01:32:32,880 --> 01:32:35,679
used for group key distribution

2464
01:32:35,679 --> 01:32:39,320
so the next please

2465
01:32:40,239 --> 01:32:42,000
so which is the current the command

2466
01:32:42,000 --> 01:32:44,719
status of the draft

2467
01:32:44,719 --> 01:32:46,639
it has been in development for from for

2468
01:32:46,639 --> 01:32:48,400
many many years

2469
01:32:48,400 --> 01:32:51,040
and a few experimentation implementation

2470
01:32:51,040 --> 01:32:53,600
of early draft exist

2471
01:32:53,600 --> 01:32:56,159
and i'm not aware i don't know if there

2472
01:32:56,159 --> 01:32:58,000
is any implementation of the current

2473
01:32:58,000 --> 01:32:59,840
version of the drought

2474
01:32:59,840 --> 01:33:02,400
it has been adopted by a pesekomi

2475
01:33:02,400 --> 01:33:04,320
uh two years ago

2476
01:33:04,320 --> 01:33:06,880
and in

2477
01:33:06,880 --> 01:33:10,239
2020 it was a major rewrite

2478
01:33:10,239 --> 01:33:15,120
and uh since then on the mind update uh

2479
01:33:15,120 --> 01:33:16,960
were made and

2480
01:33:16,960 --> 01:33:18,159
the draft

2481
01:33:18,159 --> 01:33:21,360
well it's it's i think it's mature

2482
01:33:21,360 --> 01:33:22,560
enough

2483
01:33:22,560 --> 01:33:23,760
uh

2484
01:33:23,760 --> 01:33:25,760
but i think it definitely badly needs

2485
01:33:25,760 --> 01:33:27,040
the reviews

2486
01:33:27,040 --> 01:33:29,520
so for by much enough i i mean that

2487
01:33:29,520 --> 01:33:32,400
authors don't don't see anything that

2488
01:33:32,400 --> 01:33:34,880
can be that should be added to the to

2489
01:33:34,880 --> 01:33:37,280
this and anything that should be removed

2490
01:33:37,280 --> 01:33:40,239
from this but definitely it's only owl's

2491
01:33:40,239 --> 01:33:43,920
opinion and we badly need reviews

2492
01:33:43,920 --> 01:33:46,719
so next please

2493
01:33:47,280 --> 01:33:49,520
so this is a quick outline of what what

2494
01:33:49,520 --> 01:33:51,840
might the changes were made

2495
01:33:51,840 --> 01:33:55,120
and policy representation was changed

2496
01:33:55,120 --> 01:33:58,400
before it was iqv1 style mostly using

2497
01:33:58,400 --> 01:34:01,520
attributes and now it's more like ip2

2498
01:34:01,520 --> 01:34:04,080
using transforms and attributes and

2499
01:34:04,080 --> 01:34:06,480
attributes are used to

2500
01:34:06,480 --> 01:34:08,080
to represent

2501
01:34:08,080 --> 01:34:09,920
variables

2502
01:34:09,920 --> 01:34:12,320
that's in comparison with

2503
01:34:12,320 --> 01:34:14,960
enumeration

2504
01:34:15,920 --> 01:34:17,440
immigration

2505
01:34:17,440 --> 01:34:18,960
things like

2506
01:34:18,960 --> 01:34:21,679
transforms and and so on

2507
01:34:21,679 --> 01:34:25,520
so that's why formats of gsa and cadepo

2508
01:34:25,520 --> 01:34:26,719
has changed

2509
01:34:26,719 --> 01:34:27,600
and

2510
01:34:27,600 --> 01:34:29,600
group key representation

2511
01:34:29,600 --> 01:34:32,320
has been changed before the group key

2512
01:34:32,320 --> 01:34:35,600
were transferred clean clear inside key

2513
01:34:35,600 --> 01:34:37,760
distribution payload so like

2514
01:34:37,760 --> 01:34:40,400
implementation

2515
01:34:40,400 --> 01:34:41,199
can

2516
01:34:41,199 --> 01:34:42,239
look

2517
01:34:42,239 --> 01:34:45,440
can can see them and i think it's not

2518
01:34:45,440 --> 01:34:46,480
good

2519
01:34:46,480 --> 01:34:48,480
and it was changed so the old key

2520
01:34:48,480 --> 01:34:51,280
encrypted even inside uh

2521
01:34:51,280 --> 01:34:54,560
deep load either using a skt derived key

2522
01:34:54,560 --> 01:34:57,199
or using some keys some other key some

2523
01:34:57,199 --> 01:34:58,719
other group keys

2524
01:34:58,719 --> 01:34:59,760
and

2525
01:34:59,760 --> 01:35:01,040
this

2526
01:35:01,040 --> 01:35:02,800
allows us to have

2527
01:35:02,800 --> 01:35:06,080
low logical key hierarchy as integrated

2528
01:35:06,080 --> 01:35:09,920
part of giq 2 because before it was some

2529
01:35:09,920 --> 01:35:11,520
some

2530
01:35:11,520 --> 01:35:14,880
addition some extension of jiq ii

2531
01:35:14,880 --> 01:35:17,600
the next piece

2532
01:35:19,199 --> 01:35:20,080
so

2533
01:35:20,080 --> 01:35:22,639
we will write it i am consideration so

2534
01:35:22,639 --> 01:35:26,080
now it's it's more an extension to iq2

2535
01:35:26,080 --> 01:35:28,719
and not a separate protocol so we use

2536
01:35:28,719 --> 01:35:31,040
like two registries for new ways

2537
01:35:31,040 --> 01:35:32,639
we extend them

2538
01:35:32,639 --> 01:35:35,040
and a lot of clarification has been

2539
01:35:35,040 --> 01:35:36,159
added

2540
01:35:36,159 --> 01:35:37,760
uh

2541
01:35:37,760 --> 01:35:39,280
and

2542
01:35:39,280 --> 01:35:42,239
i won't list all of them but there are a

2543
01:35:42,239 --> 01:35:43,520
lot of them

2544
01:35:43,520 --> 01:35:46,239
and that's please

2545
01:35:47,040 --> 01:35:48,159
so

2546
01:35:48,159 --> 01:35:51,119
gsa below gsa bloat contains policy

2547
01:35:51,119 --> 01:35:53,440
necessary to participate in the group so

2548
01:35:53,440 --> 01:35:56,239
it contains a protocol

2549
01:35:56,239 --> 01:35:58,560
uh a traffic selector transforms

2550
01:35:58,560 --> 01:36:00,960
algorithm method using the policy and

2551
01:36:00,960 --> 01:36:03,199
attributes for variables that changes

2552
01:36:03,199 --> 01:36:05,920
over times like initial message id

2553
01:36:05,920 --> 01:36:09,199
and so on

2554
01:36:09,840 --> 01:36:12,719
reload format is now common for all uh

2555
01:36:12,719 --> 01:36:14,320
situation of

2556
01:36:14,320 --> 01:36:15,600
uh keck

2557
01:36:15,600 --> 01:36:17,440
check and

2558
01:36:17,440 --> 01:36:19,119
uh gap

2559
01:36:19,119 --> 01:36:21,119
and the gap the difference

2560
01:36:21,119 --> 01:36:23,679
of the gap is that

2561
01:36:23,679 --> 01:36:25,600
it distinguished by the

2562
01:36:25,600 --> 01:36:27,920
value of protocol that is zero

2563
01:36:27,920 --> 01:36:30,639
it's next please

2564
01:36:30,719 --> 01:36:32,960
kdp load contain scheme material

2565
01:36:32,960 --> 01:36:35,840
necessary for the policy in the gsa load

2566
01:36:35,840 --> 01:36:37,760
so it contains

2567
01:36:37,760 --> 01:36:40,800
one or more keys in encrypted form

2568
01:36:40,800 --> 01:36:42,480
there is a structure called the wrapped

2569
01:36:42,480 --> 01:36:43,360
key

2570
01:36:43,360 --> 01:36:46,400
and that contain contains a group key

2571
01:36:46,400 --> 01:36:49,679
that is encrypted with another key

2572
01:36:49,679 --> 01:36:52,719
and either it is skd derived key or

2573
01:36:52,719 --> 01:36:55,920
rather group key that's why we can

2574
01:36:55,920 --> 01:36:58,719
get a logical key hierarchy capability

2575
01:36:58,719 --> 01:37:01,760
and by making a logical link

2576
01:37:01,760 --> 01:37:04,480
of the keys inside kdp load that

2577
01:37:04,480 --> 01:37:06,400
encrypts one with the other

2578
01:37:06,400 --> 01:37:07,280
uh

2579
01:37:07,280 --> 01:37:10,480
back to the root key

2580
01:37:10,480 --> 01:37:12,080
and

2581
01:37:12,080 --> 01:37:12,960
well

2582
01:37:12,960 --> 01:37:15,520
next please

2583
01:37:16,400 --> 01:37:20,320
and idg plot contains uh

2584
01:37:20,320 --> 01:37:22,320
identifying the group that gm want to

2585
01:37:22,320 --> 01:37:23,199
join

2586
01:37:23,199 --> 01:37:24,800
there is no change

2587
01:37:24,800 --> 01:37:27,360
next please

2588
01:37:27,840 --> 01:37:30,960
so a few equity pilot are used

2589
01:37:30,960 --> 01:37:31,920
it's

2590
01:37:31,920 --> 01:37:36,159
sag that it has the same format as a sap

2591
01:37:36,159 --> 01:37:38,560
load but slightly different semantics

2592
01:37:38,560 --> 01:37:41,199
and delete below again it's it has the

2593
01:37:41,199 --> 01:37:43,119
same format and the same

2594
01:37:43,119 --> 01:37:45,199
reload number but the semantic is

2595
01:37:45,199 --> 01:37:46,880
slightly different because it is allowed

2596
01:37:46,880 --> 01:37:49,199
to delete all essays

2597
01:37:49,199 --> 01:37:53,119
not only a particular say

2598
01:37:53,119 --> 01:37:56,000
so next please

2599
01:37:56,480 --> 01:37:58,400
there are new notifications compared to

2600
01:37:58,400 --> 01:38:00,960
equity

2601
01:38:01,360 --> 01:38:03,840
it's some error notification like

2602
01:38:03,840 --> 01:38:05,920
invalid gram idea authorization failed

2603
01:38:05,920 --> 01:38:09,119
registration failed and a few status

2604
01:38:09,119 --> 01:38:11,679
notification and difficult notifications

2605
01:38:11,679 --> 01:38:13,760
that indicate that gm want to be a

2606
01:38:13,760 --> 01:38:15,600
center in the group

2607
01:38:15,600 --> 01:38:17,840
and

2608
01:38:18,000 --> 01:38:20,400
newly added with the zero one version

2609
01:38:20,400 --> 01:38:23,199
the keys needed notification that this

2610
01:38:23,199 --> 01:38:26,639
notification is used with ppk with when

2611
01:38:26,639 --> 01:38:29,199
ppk is used

2612
01:38:29,199 --> 01:38:33,760
uh because using ppk uh with gi quick 2

2613
01:38:33,760 --> 01:38:36,480
brings a lot of problems um

2614
01:38:36,480 --> 01:38:38,480
because we need

2615
01:38:38,480 --> 01:38:40,400
i can say to be

2616
01:38:40,400 --> 01:38:42,159
secure from the very beginning because

2617
01:38:42,159 --> 01:38:44,320
we we want to transfer sensitive

2618
01:38:44,320 --> 01:38:46,320
foundational weed

2619
01:38:46,320 --> 01:38:47,840
so

2620
01:38:47,840 --> 01:38:50,320
the approach that is

2621
01:38:50,320 --> 01:38:53,520
rc 87

2622
01:38:53,520 --> 01:38:55,840
64 is taken

2623
01:38:55,840 --> 01:38:58,159
when we create a childless psycho sales

2624
01:38:58,159 --> 01:39:00,400
and immediate clear key is not

2625
01:39:00,400 --> 01:39:03,119
going for jq 2 that's why there is a

2626
01:39:03,119 --> 01:39:05,520
very complex mechanism

2627
01:39:05,520 --> 01:39:08,639
and i also have a draft an alternative

2628
01:39:08,639 --> 01:39:10,000
weight for

2629
01:39:10,000 --> 01:39:11,119
eq

2630
01:39:11,119 --> 01:39:12,639
probably uh

2631
01:39:12,639 --> 01:39:14,880
for

2632
01:39:15,040 --> 01:39:16,960
what's quantum key security mixing the

2633
01:39:16,960 --> 01:39:19,520
shape key for quantum key security and i

2634
01:39:19,520 --> 01:39:20,800
think if

2635
01:39:20,800 --> 01:39:23,280
if we want to

2636
01:39:23,280 --> 01:39:24,560
make

2637
01:39:24,560 --> 01:39:26,400
uh this uh

2638
01:39:26,400 --> 01:39:28,639
uh rfc work for

2639
01:39:28,639 --> 01:39:29,920
jquery ii we should consider the

2640
01:39:29,920 --> 01:39:31,679
adoption of this draft

2641
01:39:31,679 --> 01:39:33,119
because it it

2642
01:39:33,119 --> 01:39:35,840
it signifi it uses i can't immediately

2643
01:39:35,840 --> 01:39:37,520
in insignificant

2644
01:39:37,520 --> 01:39:41,040
significantly uh simplifies

2645
01:39:41,040 --> 01:39:42,560
jqe2

2646
01:39:42,560 --> 01:39:44,480
for use with ppk

2647
01:39:44,480 --> 01:39:47,360
so the next please

2648
01:39:48,000 --> 01:39:50,239
and use transparent mod is reused with

2649
01:39:50,239 --> 01:39:53,520
slightly different semantics

2650
01:39:53,520 --> 01:39:56,080
next please

2651
01:39:57,040 --> 01:39:58,400
so

2652
01:39:58,400 --> 01:40:00,000
thank you very much

2653
01:40:00,000 --> 01:40:02,159
and this presentation is

2654
01:40:02,159 --> 01:40:04,560
a repeated presentation

2655
01:40:04,560 --> 01:40:05,600
and

2656
01:40:05,600 --> 01:40:06,840
we greatly need

2657
01:40:06,840 --> 01:40:08,560
reviews so

2658
01:40:08,560 --> 01:40:10,320
i don't know probably

2659
01:40:10,320 --> 01:40:13,600
was working group was called should be

2660
01:40:13,600 --> 01:40:16,159
issued so the people

2661
01:40:16,159 --> 01:40:17,280
start

2662
01:40:17,280 --> 01:40:20,920
reviewing this draft

2663
01:40:22,960 --> 01:40:25,360
because the draft is very complex

2664
01:40:25,360 --> 01:40:27,119
and it should be reviewed it should be

2665
01:40:27,119 --> 01:40:29,920
reviewed very softly okay so i have one

2666
01:40:29,920 --> 01:40:33,119
question do you do does the you know

2667
01:40:33,119 --> 01:40:35,840
system or or the draft already support

2668
01:40:35,840 --> 01:40:38,080
uh

2669
01:40:38,719 --> 01:40:41,520
uh this like intermediate and

2670
01:40:41,520 --> 01:40:44,000
or do you have a text for that

2671
01:40:44,000 --> 01:40:45,360
uh

2672
01:40:45,360 --> 01:40:47,360
i don't remember whether the text for

2673
01:40:47,360 --> 01:40:49,760
for that is in the draft but i think

2674
01:40:49,760 --> 01:40:50,400
that

2675
01:40:50,400 --> 01:40:52,159
i can intermediate can be used with this

2676
01:40:52,159 --> 01:40:54,239
draft there's no yeah my understanding

2677
01:40:54,239 --> 01:40:56,000
is that it will i think actually it

2678
01:40:56,000 --> 01:40:58,800
would be a good idea to add that in in

2679
01:40:58,800 --> 01:41:01,040
in there that's so that we actually

2680
01:41:01,040 --> 01:41:02,159
you know

2681
01:41:02,159 --> 01:41:03,600
have a clear text that you can actually

2682
01:41:03,600 --> 01:41:05,119
use this without intermediate but i

2683
01:41:05,119 --> 01:41:07,119
think we can actually even i think

2684
01:41:07,119 --> 01:41:09,119
that's a very small change that we can

2685
01:41:09,119 --> 01:41:10,800
actually because i think it works

2686
01:41:10,800 --> 01:41:13,119
without any changes it just needs to be

2687
01:41:13,119 --> 01:41:15,600
said that oh yeah you do that you know

2688
01:41:15,600 --> 01:41:16,960
like intermediate in the middle of

2689
01:41:16,960 --> 01:41:19,360
before that gsa out

2690
01:41:19,360 --> 01:41:21,440
and i think starting the working group

2691
01:41:21,440 --> 01:41:22,960
last call is probably the best way to

2692
01:41:22,960 --> 01:41:24,639
get you know reviews

2693
01:41:24,639 --> 01:41:26,159
unless somebody has any other comments

2694
01:41:26,159 --> 01:41:29,239
of this

2695
01:41:41,840 --> 01:41:43,600
i don't see any other comments so i

2696
01:41:43,600 --> 01:41:46,159
think we should be then starting with an

2697
01:41:46,159 --> 01:41:48,080
you know working group last call for

2698
01:41:48,080 --> 01:41:50,320
that

2699
01:41:51,119 --> 01:41:53,600
or just

2700
01:41:53,600 --> 01:41:56,239
no i guess nobody had any more comments

2701
01:41:56,239 --> 01:41:58,559
okay

2702
01:41:58,840 --> 01:42:01,360
so i will probably start a vertical

2703
01:42:01,360 --> 01:42:03,280
classical for that document then quite

2704
01:42:03,280 --> 01:42:05,280
soon

2705
01:42:05,280 --> 01:42:07,280
okay then we go to our next presentation

2706
01:42:07,280 --> 01:42:09,600
which is the announcing supported

2707
01:42:09,600 --> 01:42:14,159
authentication method for initial 2.

2708
01:42:14,159 --> 01:42:15,679
okay

2709
01:42:15,679 --> 01:42:17,920
this is also repeated uh presentation

2710
01:42:17,920 --> 01:42:19,360
it's not new

2711
01:42:19,360 --> 01:42:21,280
i just want to bring uh

2712
01:42:21,280 --> 01:42:23,199
your attention to the draft because it

2713
01:42:23,199 --> 01:42:25,840
is in the ipc commit chatter and i think

2714
01:42:25,840 --> 01:42:27,520
it is ready for adoption

2715
01:42:27,520 --> 01:42:30,400
so the next please

2716
01:42:32,320 --> 01:42:35,119
so uh unlike equity one authentication

2717
01:42:35,119 --> 01:42:37,679
method is on q2 is not negotiated so

2718
01:42:37,679 --> 01:42:40,000
each pa is free to use whichever method

2719
01:42:40,000 --> 01:42:43,280
is think is appropriate and generally it

2720
01:42:43,280 --> 01:42:45,199
works very well

2721
01:42:45,199 --> 01:42:46,000
but

2722
01:42:46,000 --> 01:42:48,400
in some situation when peers can use

2723
01:42:48,400 --> 01:42:51,199
cereal method to educate each other and

2724
01:42:51,199 --> 01:42:53,760
these methods are

2725
01:42:53,760 --> 01:42:54,840
are not

2726
01:42:54,840 --> 01:42:56,639
aligned

2727
01:42:56,639 --> 01:42:58,000
at 1pm

2728
01:42:58,000 --> 01:42:59,679
it is possible that initiator selects

2729
01:42:59,679 --> 01:43:01,440
authentication method are supported by

2730
01:43:01,440 --> 01:43:03,920
the respondent so it is also possible

2731
01:43:03,920 --> 01:43:06,000
for responding but less likely because

2732
01:43:06,000 --> 01:43:07,920
once uh initiate indicates which

2733
01:43:07,920 --> 01:43:10,239
authenticated authentication method it

2734
01:43:10,239 --> 01:43:13,280
uses a responder has more information to

2735
01:43:13,280 --> 01:43:15,199
to choose a proper one

2736
01:43:15,199 --> 01:43:18,080
so the next piece

2737
01:43:19,920 --> 01:43:21,520
so the problem the problem was first

2738
01:43:21,520 --> 01:43:23,920
encountered when rsi pss signature

2739
01:43:23,920 --> 01:43:25,920
formatted piece in like two

2740
01:43:25,920 --> 01:43:29,520
so new initiator tried to use rsi pss

2741
01:43:29,520 --> 01:43:31,360
while old responder didn't support it

2742
01:43:31,360 --> 01:43:33,440
send it authentication failed

2743
01:43:33,440 --> 01:43:36,560
and for initiators there is no clue

2744
01:43:36,560 --> 01:43:39,119
why authentication is failed

2745
01:43:39,119 --> 01:43:40,960
it's probably something wrong with

2746
01:43:40,960 --> 01:43:44,000
credentials or something else

2747
01:43:44,000 --> 01:43:45,760
so uh

2748
01:43:45,760 --> 01:43:48,400
if initiated new respondus capability

2749
01:43:48,400 --> 01:43:52,159
they would have chosen uh pixels

2750
01:43:52,159 --> 01:43:54,800
one and they say succeeded

2751
01:43:54,800 --> 01:43:57,679
so the next please

2752
01:43:59,600 --> 01:44:03,600
and so the problem is that ps

2753
01:44:03,600 --> 01:44:05,280
peers

2754
01:44:05,280 --> 01:44:07,360
have no explicit wave to indicate a

2755
01:44:07,360 --> 01:44:09,600
supported authentication method

2756
01:44:09,600 --> 01:44:10,960
there may be

2757
01:44:10,960 --> 01:44:14,000
some some indirect ways can be used like

2758
01:44:14,000 --> 01:44:16,320
a set request preload

2759
01:44:16,320 --> 01:44:19,600
but in general it is unreliable

2760
01:44:19,600 --> 01:44:20,719
and

2761
01:44:20,719 --> 01:44:23,119
i think that with new signature formats

2762
01:44:23,119 --> 01:44:25,199
and authentication method especially if

2763
01:44:25,199 --> 01:44:26,400
we

2764
01:44:26,400 --> 01:44:28,719
uh if you think of what quantum

2765
01:44:28,719 --> 01:44:31,600
authentication method and hybrid

2766
01:44:31,600 --> 01:44:32,880
ones

2767
01:44:32,880 --> 01:44:34,560
that only appear

2768
01:44:34,560 --> 01:44:36,560
the station of me selected may happen

2769
01:44:36,560 --> 01:44:40,480
more often so the next please

2770
01:44:40,480 --> 01:44:42,639
and propose solution

2771
01:44:42,639 --> 01:44:44,320
uh

2772
01:44:44,320 --> 01:44:46,000
we can add a new optional status

2773
01:44:46,000 --> 01:44:48,000
notification supported our method to

2774
01:44:48,000 --> 01:44:50,320
indicate so that each peer can indicate

2775
01:44:50,320 --> 01:44:52,560
a supported authentication method there

2776
01:44:52,560 --> 01:44:55,199
is not a negotiation unlike iq1 it's

2777
01:44:55,199 --> 01:44:56,960
only announcement

2778
01:44:56,960 --> 01:44:59,360
so each peer just announced which method

2779
01:44:59,360 --> 01:45:01,600
are supported so that the other peer can

2780
01:45:01,600 --> 01:45:03,440
select

2781
01:45:03,440 --> 01:45:05,920
one of supported authentication method

2782
01:45:05,920 --> 01:45:07,840
they can different

2783
01:45:07,840 --> 01:45:09,679
in different directions

2784
01:45:09,679 --> 01:45:12,639
uh as it is as as it can be now

2785
01:45:12,639 --> 01:45:14,560
so in this case it is not a negotiation

2786
01:45:14,560 --> 01:45:17,760
in negotiation it's only an announcement

2787
01:45:17,760 --> 01:45:19,360
and for certificate bridge

2788
01:45:19,360 --> 01:45:21,920
authentication we can add an ability for

2789
01:45:21,920 --> 01:45:23,760
peace to indicate

2790
01:45:23,760 --> 01:45:26,159
uh which sign algorithm can be used

2791
01:45:26,159 --> 01:45:27,760
which

2792
01:45:27,760 --> 01:45:30,400
which each certificate authority

2793
01:45:30,400 --> 01:45:32,880
certificate in the third track indicated

2794
01:45:32,880 --> 01:45:35,520
if the search request will load

2795
01:45:35,520 --> 01:45:36,480
and

2796
01:45:36,480 --> 01:45:38,400
we don't want creating new ionic

2797
01:45:38,400 --> 01:45:40,800
registries for this

2798
01:45:40,800 --> 01:45:44,360
so the next please

2799
01:45:45,119 --> 01:45:47,199
so the format of this new notification

2800
01:45:47,199 --> 01:45:48,719
is as follows

2801
01:45:48,719 --> 01:45:50,560
identification data consists of list of

2802
01:45:50,560 --> 01:45:53,440
supported methods which has uh three

2803
01:45:53,440 --> 01:45:56,320
possible formats to octets format

2804
01:45:56,320 --> 01:45:58,639
that only indicate uh

2805
01:45:58,639 --> 01:46:00,320
for the methods that are not linked to

2806
01:46:00,320 --> 01:46:03,360
subtract such requests below it like

2807
01:46:03,360 --> 01:46:06,480
uh pressured key or null authentication

2808
01:46:06,480 --> 01:46:08,000
three octet format that allows the

2809
01:46:08,000 --> 01:46:09,840
optional linking to search requests

2810
01:46:09,840 --> 01:46:12,159
below and multiple formats that also

2811
01:46:12,159 --> 01:46:13,920
indicates a particular algorithm

2812
01:46:13,920 --> 01:46:15,280
algorithm

2813
01:46:15,280 --> 01:46:19,600
by using sn1 algorithm identifier

2814
01:46:19,600 --> 01:46:21,199
and

2815
01:46:21,199 --> 01:46:23,040
the linking to say is done by specifying

2816
01:46:23,040 --> 01:46:25,520
the ordinal number of the

2817
01:46:25,520 --> 01:46:28,800
te who's inserted quest below

2818
01:46:28,800 --> 01:46:31,119
for for this particular method that is

2819
01:46:31,119 --> 01:46:32,400
announced

2820
01:46:32,400 --> 01:46:35,040
next please

2821
01:46:37,760 --> 01:46:40,800
so it's it's an example somehow it can

2822
01:46:40,800 --> 01:46:41,920
look like

2823
01:46:41,920 --> 01:46:45,600
so we can as you we can we have a search

2824
01:46:45,600 --> 01:46:48,800
request below with several cs

2825
01:46:48,800 --> 01:46:51,360
uh each with different algorithm and we

2826
01:46:51,360 --> 01:46:54,000
have supported our method notifications

2827
01:46:54,000 --> 01:46:55,040
that

2828
01:46:55,040 --> 01:46:55,920
link

2829
01:46:55,920 --> 01:46:56,960
uh

2830
01:46:56,960 --> 01:46:59,119
that indicates an

2831
01:46:59,119 --> 01:47:01,040
aggression identifier and link with

2832
01:47:01,040 --> 01:47:03,119
algorithmic and identifier with a

2833
01:47:03,119 --> 01:47:04,800
particular c

2834
01:47:04,800 --> 01:47:08,440
so the next please

2835
01:47:09,199 --> 01:47:11,920
so uh this notification can be used

2836
01:47:11,920 --> 01:47:13,440
either in

2837
01:47:13,440 --> 01:47:15,040
i can say need

2838
01:47:15,040 --> 01:47:15,840
and

2839
01:47:15,840 --> 01:47:19,199
for correspondent and

2840
01:47:19,280 --> 01:47:21,600
i cause

2841
01:47:21,600 --> 01:47:23,440
initiator or

2842
01:47:23,440 --> 01:47:26,080
next please

2843
01:47:27,520 --> 01:47:28,719
or

2844
01:47:28,719 --> 01:47:29,520
in

2845
01:47:29,520 --> 01:47:31,360
i can intermediate exchange

2846
01:47:31,360 --> 01:47:34,639
just to avoid fragmentation in this case

2847
01:47:34,639 --> 01:47:37,440
respond sends an empty supported house

2848
01:47:37,440 --> 01:47:39,920
method in aksa need just indicating that

2849
01:47:39,920 --> 01:47:41,040
the real

2850
01:47:41,040 --> 01:47:43,199
the the real uh

2851
01:47:43,199 --> 01:47:44,880
supported house myself notification

2852
01:47:44,880 --> 01:47:46,880
containing a real information will be

2853
01:47:46,880 --> 01:47:49,679
will be sent in in ike intermediate

2854
01:47:49,679 --> 01:47:51,600
and this can avoid a potential

2855
01:47:51,600 --> 01:47:54,000
fragmentation problem because

2856
01:47:54,000 --> 01:47:55,840
uh with this format supported house

2857
01:47:55,840 --> 01:47:58,239
method can grow

2858
01:47:58,239 --> 01:47:59,760
well

2859
01:47:59,760 --> 01:48:01,360
pretty pretty well

2860
01:48:01,360 --> 01:48:02,400
two to

2861
01:48:02,400 --> 01:48:04,639
tens or even 100

2862
01:48:04,639 --> 01:48:07,760
bytes and loans in length

2863
01:48:07,760 --> 01:48:10,639
so the next please

2864
01:48:12,239 --> 01:48:13,840
so

2865
01:48:13,840 --> 01:48:15,119
this is

2866
01:48:15,119 --> 01:48:17,360
all in the draft and

2867
01:48:17,360 --> 01:48:20,960
there are more details and please read

2868
01:48:20,960 --> 01:48:23,760
and well i think that the draft

2869
01:48:23,760 --> 01:48:26,960
is ready for adoption

2870
01:48:29,119 --> 01:48:32,759
so is it so

2871
01:48:42,400 --> 01:48:44,480
hello people can hear me

2872
01:48:44,480 --> 01:48:47,840
yes no i think so okay um so so my

2873
01:48:47,840 --> 01:48:49,679
question is that um there's a bit of

2874
01:48:49,679 --> 01:48:52,080
confusion i think between what is a

2875
01:48:52,080 --> 01:48:55,040
configured authentication method and

2876
01:48:55,040 --> 01:48:56,880
what is a supported authentication

2877
01:48:56,880 --> 01:48:57,920
method

2878
01:48:57,920 --> 01:49:01,440
because um if a responder supports rsa

2879
01:49:01,440 --> 01:49:02,719
pss

2880
01:49:02,719 --> 01:49:05,040
but it only has a connection configured

2881
01:49:05,040 --> 01:49:06,960
for pre-shared key

2882
01:49:06,960 --> 01:49:08,639
then that information is kind of useless

2883
01:49:08,639 --> 01:49:10,320
to the initiator right and so i'm really

2884
01:49:10,320 --> 01:49:12,000
confused what

2885
01:49:12,000 --> 01:49:14,480
so i can understand the initiator can

2886
01:49:14,480 --> 01:49:16,320
send what what is expecting to do

2887
01:49:16,320 --> 01:49:18,080
because it knows the authentication it

2888
01:49:18,080 --> 01:49:19,920
is going to do because it knows which

2889
01:49:19,920 --> 01:49:21,040
connection

2890
01:49:21,040 --> 01:49:22,480
it's trying to reach

2891
01:49:22,480 --> 01:49:24,000
but the responder might have multiple

2892
01:49:24,000 --> 01:49:25,679
connections configured with different

2893
01:49:25,679 --> 01:49:26,840
authentication

2894
01:49:26,840 --> 01:49:29,119
mechanisms and so i'm just trying to

2895
01:49:29,119 --> 01:49:32,000
clarify like are you only looking to

2896
01:49:32,000 --> 01:49:34,159
announce the supported authentication

2897
01:49:34,159 --> 01:49:36,320
methods as in the implemented ones and

2898
01:49:36,320 --> 01:49:40,000
not like the allowed ones because

2899
01:49:40,000 --> 01:49:41,920
there's some confusion for me there i

2900
01:49:41,920 --> 01:49:44,960
think i think it is allowed once but uh

2901
01:49:44,960 --> 01:49:48,960
if you can of course if you can uh

2902
01:49:48,960 --> 01:49:51,119
tell what is allowed for this particular

2903
01:49:51,119 --> 01:49:52,560
connection if this of course it is

2904
01:49:52,560 --> 01:49:55,199
allowed once not implemented

2905
01:49:55,199 --> 01:49:57,360
okay but so then the problem becomes on

2906
01:49:57,360 --> 01:50:00,080
the allowed side uh the responder has no

2907
01:50:00,080 --> 01:50:02,480
way to answer anything until it has

2908
01:50:02,480 --> 01:50:04,000
received the auth payload from the

2909
01:50:04,000 --> 01:50:05,360
initiator

2910
01:50:05,360 --> 01:50:07,199
because only then does it have the id

2911
01:50:07,199 --> 01:50:08,639
payload and only then does it know

2912
01:50:08,639 --> 01:50:10,800
what's configured for that specific peer

2913
01:50:10,800 --> 01:50:12,960
yes yes that's the problem

2914
01:50:12,960 --> 01:50:16,560
but still it saves it allows initiated

2915
01:50:16,560 --> 01:50:19,760
to properly decide to properly select

2916
01:50:19,760 --> 01:50:22,480
authentication method

2917
01:50:22,480 --> 01:50:24,159
but now you talk about supported not

2918
01:50:24,159 --> 01:50:25,280
configured

2919
01:50:25,280 --> 01:50:27,679
yes it is it is allowed for initiate and

2920
01:50:27,679 --> 01:50:30,400
supported for respondent

2921
01:50:30,400 --> 01:50:31,679
it's a

2922
01:50:31,679 --> 01:50:32,960
little mix

2923
01:50:32,960 --> 01:50:35,760
of this because well actually uh if

2924
01:50:35,760 --> 01:50:38,000
responder can guess for example from ap

2925
01:50:38,000 --> 01:50:40,159
address

2926
01:50:40,159 --> 01:50:41,840
then it is allowed

2927
01:50:41,840 --> 01:50:44,880
but if if it cannot guess then it is

2928
01:50:44,880 --> 01:50:47,119
supported

2929
01:50:47,119 --> 01:50:49,040
so yeah i don't know

2930
01:50:49,040 --> 01:50:51,199
it's a little confusing to me if if we

2931
01:50:51,199 --> 01:50:52,960
can do this or how much it actually

2932
01:50:52,960 --> 01:50:54,080
helps us

2933
01:50:54,080 --> 01:50:55,840
but i'll i'll reread the draft something

2934
01:50:55,840 --> 01:50:58,840
somewhere

2935
01:51:07,440 --> 01:51:09,440
is there any other comments on on this

2936
01:51:09,440 --> 01:51:11,839
draft

2937
01:51:12,000 --> 01:51:14,800
any comments about uh

2938
01:51:14,800 --> 01:51:17,040
note whether this document is ready for

2939
01:51:17,040 --> 01:51:19,679
working group adoption if

2940
01:51:19,679 --> 01:51:22,159
i i think it should be because i mean

2941
01:51:22,159 --> 01:51:23,760
it's it's a starting point for this

2942
01:51:23,760 --> 01:51:25,599
draft document that i think is in the

2943
01:51:25,599 --> 01:51:27,280
charter so we should be

2944
01:51:27,280 --> 01:51:28,880
making us a working group document and

2945
01:51:28,880 --> 01:51:33,719
then start processing it for one

2946
01:51:34,000 --> 01:51:36,719
seems to be of annoying that my

2947
01:51:36,719 --> 01:51:38,320
mid echo is always complaining that it

2948
01:51:38,320 --> 01:51:40,880
doesn't hear me at all and i don't see

2949
01:51:40,880 --> 01:51:43,040
any of my indications that i'm

2950
01:51:43,040 --> 01:51:45,199
speaking but everybody is acting like

2951
01:51:45,199 --> 01:51:48,239
i'm speaking so i assume they hear me i

2952
01:51:48,239 --> 01:51:50,799
can hear you

2953
01:51:52,480 --> 01:51:53,760
all right so

2954
01:51:53,760 --> 01:51:56,480
so if there's no other comments on this

2955
01:51:56,480 --> 01:51:58,560
on this topic i think we will then you

2956
01:51:58,560 --> 01:51:59,280
know

2957
01:51:59,280 --> 01:52:01,040
start a working group adoption call for

2958
01:52:01,040 --> 01:52:02,639
that or the christian do you have some

2959
01:52:02,639 --> 01:52:04,560
comments on this or something else no

2960
01:52:04,560 --> 01:52:05,520
okay

2961
01:52:05,520 --> 01:52:07,840
so

2962
01:52:08,159 --> 01:52:10,320
so i think that's for it then then we

2963
01:52:10,320 --> 01:52:13,040
have any other topics or valerie do you

2964
01:52:13,040 --> 01:52:16,840
have another other topics

2965
01:52:19,360 --> 01:52:21,840
well i want to bring attention to a few

2966
01:52:21,840 --> 01:52:24,080
drafts that are

2967
01:52:24,080 --> 01:52:27,040
also waiting for adoption

2968
01:52:27,040 --> 01:52:31,199
first first is a voice cookie processing

2969
01:52:31,199 --> 01:52:34,159
well we discussed it uh a few atf's ago

2970
01:52:34,159 --> 01:52:35,280
was a

2971
01:52:35,280 --> 01:52:37,199
i want to know whether there is any

2972
01:52:37,199 --> 01:52:40,480
interest in adopting this draft

2973
01:52:40,480 --> 01:52:43,040
and then uh another drug that is waiting

2974
01:52:43,040 --> 01:52:46,400
for adoption call is

2975
01:52:46,400 --> 01:52:49,360
alternative uh

2976
01:52:49,599 --> 01:52:52,000
mechanism for mixing pressured key that

2977
01:52:52,000 --> 01:52:55,280
i mentioned when i talked about jqe2

2978
01:52:55,280 --> 01:52:57,520
so if we

2979
01:52:57,520 --> 01:53:00,560
use ppk in jq2 i think that we should

2980
01:53:00,560 --> 01:53:03,760
seriously consider

2981
01:53:03,760 --> 01:53:05,520
adopting the draft because it solves a

2982
01:53:05,520 --> 01:53:08,239
lot of problems that that

2983
01:53:08,239 --> 01:53:10,960
well doing ppk in gik-2 is very

2984
01:53:10,960 --> 01:53:13,520
difficult it requires a lot of

2985
01:53:13,520 --> 01:53:15,679
additional round trips and unnecessary

2986
01:53:15,679 --> 01:53:17,040
delay of

2987
01:53:17,040 --> 01:53:18,400
say setup

2988
01:53:18,400 --> 01:53:20,560
because you need i can say to be secured

2989
01:53:20,560 --> 01:53:22,080
from the very beginning

2990
01:53:22,080 --> 01:53:24,639
so if you want to bpk to be coupled with

2991
01:53:24,639 --> 01:53:28,080
gip2s and we should consider this

2992
01:53:28,080 --> 01:53:29,599
alternative way

2993
01:53:29,599 --> 01:53:31,520
it is very simple you can it's only

2994
01:53:31,520 --> 01:53:33,199
seven pages long

2995
01:53:33,199 --> 01:53:34,000
and

2996
01:53:34,000 --> 01:53:36,400
i also think that draft beyond 64

2997
01:53:36,400 --> 01:53:37,760
kilobytes

2998
01:53:37,760 --> 01:53:39,920
is also

2999
01:53:39,920 --> 01:53:41,280
is worse to

3000
01:53:41,280 --> 01:53:43,119
adopted by this group

3001
01:53:43,119 --> 01:53:45,040
well

3002
01:53:45,040 --> 01:53:47,520
we've talked a lot about using michaelis

3003
01:53:47,520 --> 01:53:50,560
and all these mechanisms long

3004
01:53:50,560 --> 01:53:52,880
public keys and not only for exchange

3005
01:53:52,880 --> 01:53:55,599
method but for signature method two

3006
01:53:55,599 --> 01:53:58,320
and so i think that uh

3007
01:53:58,320 --> 01:54:00,560
well probably not immediately but i

3008
01:54:00,560 --> 01:54:02,400
think that we should consider adopting

3009
01:54:02,400 --> 01:54:04,159
this drought

3010
01:54:04,159 --> 01:54:04,960
so

3011
01:54:04,960 --> 01:54:07,599
that's what that's where my points thank

3012
01:54:07,599 --> 01:54:08,480
you

3013
01:54:08,480 --> 01:54:10,880
yeah i would propose you send an

3014
01:54:10,880 --> 01:54:12,800
email to the list on on each of these

3015
01:54:12,800 --> 01:54:15,440
specific crafts and uh ask for their

3016
01:54:15,440 --> 01:54:17,599
author people who if their people are

3017
01:54:17,599 --> 01:54:18,800
interested

3018
01:54:18,800 --> 01:54:19,599
uh

3019
01:54:19,599 --> 01:54:22,639
to comment on that and and and and so

3020
01:54:22,639 --> 01:54:25,119
forth or all people can actually we have

3021
01:54:25,119 --> 01:54:27,119
still five minutes actually probably do

3022
01:54:27,119 --> 01:54:29,760
that in email

3023
01:54:29,760 --> 01:54:32,080
all right so the next one is paul i

3024
01:54:32,080 --> 01:54:34,719
guess in the queue

3025
01:54:35,119 --> 01:54:36,960
i'm not sure how a raised christian but

3026
01:54:36,960 --> 01:54:38,239
um

3027
01:54:38,239 --> 01:54:40,400
there's another draft the multiple essay

3028
01:54:40,400 --> 01:54:43,360
ones where um we clarified some things

3029
01:54:43,360 --> 01:54:45,599
we add we asked some input from the

3030
01:54:45,599 --> 01:54:47,599
working group on a mailing list and we

3031
01:54:47,599 --> 01:54:49,280
did not hear any

3032
01:54:49,280 --> 01:54:51,119
objections to a proposal so we went

3033
01:54:51,119 --> 01:54:52,719
ahead and published a new version of the

3034
01:54:52,719 --> 01:54:55,119
draft that did not have qos in it

3035
01:54:55,119 --> 01:54:57,280
and that really simplifies the draft and

3036
01:54:57,280 --> 01:54:59,119
so i'm hoping that people can read it

3037
01:54:59,119 --> 01:55:00,960
and give comments on it because we have

3038
01:55:00,960 --> 01:55:03,599
implemented it and we really are looking

3039
01:55:03,599 --> 01:55:06,159
for getting our more than you know more

3040
01:55:06,159 --> 01:55:08,159
than three gigs per cpu uh

3041
01:55:08,159 --> 01:55:10,239
implementations out there so we have

3042
01:55:10,239 --> 01:55:11,920
implementations

3043
01:55:11,920 --> 01:55:14,000
um but we really want this document to

3044
01:55:14,000 --> 01:55:15,199
move forward

3045
01:55:15,199 --> 01:55:17,920
so wasn't there just before the society

3046
01:55:17,920 --> 01:55:19,760
have some comments about somebody saying

3047
01:55:19,760 --> 01:55:21,280
that they should be combined with other

3048
01:55:21,280 --> 01:55:24,239
draft or something like or

3049
01:55:24,239 --> 01:55:26,000
have this uh i think there was some

3050
01:55:26,000 --> 01:55:28,800
discussion at least

3051
01:55:28,960 --> 01:55:30,400
before the

3052
01:55:30,400 --> 01:55:32,719
itf or i don't know i might i might be

3053
01:55:32,719 --> 01:55:34,560
streamer

3054
01:55:34,560 --> 01:55:37,520
okay but anyway so let's bring that

3055
01:55:37,520 --> 01:55:39,199
let's keep that on the list and and

3056
01:55:39,199 --> 01:55:41,280
continue there and see if people are

3057
01:55:41,280 --> 01:55:43,520
interested

3058
01:55:43,520 --> 01:55:45,119
christian

3059
01:55:45,119 --> 01:55:47,760
i i will say paul um

3060
01:55:47,760 --> 01:55:50,560
we are interested in looking at tfs

3061
01:55:50,560 --> 01:55:52,960
stuff on uh in linux i don't know if

3062
01:55:52,960 --> 01:55:55,119
we're gonna get to it but if we do

3063
01:55:55,119 --> 01:55:57,280
i suspect we're gonna be looking at your

3064
01:55:57,280 --> 01:55:59,840
stuff as well

3065
01:55:59,840 --> 01:56:02,000
to get the higher rates

3066
01:56:02,000 --> 01:56:04,480
in any case i was just going to say um

3067
01:56:04,480 --> 01:56:07,119
the new iptfs draft is published and

3068
01:56:07,119 --> 01:56:09,119
posted um

3069
01:56:09,119 --> 01:56:10,800
we only have four minutes if we had like

3070
01:56:10,800 --> 01:56:12,159
20 minutes i was going to say i'll share

3071
01:56:12,159 --> 01:56:14,800
my screen we can go over the diff but

3072
01:56:14,800 --> 01:56:16,880
i think we're out of time for that

3073
01:56:16,880 --> 01:56:18,800
um i think i got all the points in there

3074
01:56:18,800 --> 01:56:21,040
though so people could take a quick look

3075
01:56:21,040 --> 01:56:22,639
that would be great

3076
01:56:22,639 --> 01:56:25,520
all right good that's perfect

3077
01:56:25,520 --> 01:56:26,480
all right

3078
01:56:26,480 --> 01:56:29,679
any other topics on this

3079
01:56:29,679 --> 01:56:33,280
okay my list of things that we should be

3080
01:56:33,280 --> 01:56:36,400
doing is to have an

3081
01:56:36,400 --> 01:56:38,480
working group last call for

3082
01:56:38,480 --> 01:56:40,080
gi question 2

3083
01:56:40,080 --> 01:56:43,520
to get more reviews on uh start the

3084
01:56:43,520 --> 01:56:46,320
publication of the iptfs trust when we

3085
01:56:46,320 --> 01:56:49,280
get this uh when we have you know

3086
01:56:49,280 --> 01:56:51,360
time to read the draft and verify that

3087
01:56:51,360 --> 01:56:52,400
it's

3088
01:56:52,400 --> 01:56:53,360
all there

3089
01:56:53,360 --> 01:56:55,119
and then probably start the working

3090
01:56:55,119 --> 01:56:58,400
group adoption course for draft be tv ad

3091
01:56:58,400 --> 01:57:01,119
ipsec ike for the

3092
01:57:01,119 --> 01:57:04,480
uh additional you know this uh this uh

3093
01:57:04,480 --> 01:57:06,000
dns stuff

3094
01:57:06,000 --> 01:57:08,320
and then we have the i question to out

3095
01:57:08,320 --> 01:57:10,639
announce

3096
01:57:10,639 --> 01:57:13,119
anything else that i'm missing

3097
01:57:13,119 --> 01:57:16,000
on my to-do list

3098
01:57:18,080 --> 01:57:20,639
i guess not so i think

3099
01:57:20,639 --> 01:57:23,119
and i don't expect anybody to have any

3100
01:57:23,119 --> 01:57:25,040
or does anybody have still on any other

3101
01:57:25,040 --> 01:57:27,599
business

3102
01:57:27,760 --> 01:57:31,199
if not i think we are then done

3103
01:57:31,199 --> 01:57:34,638
three minutes before time

3104
01:57:36,320 --> 01:57:39,520
excellent time management

3105
01:57:39,520 --> 01:57:41,360
yeah i was looking i like it somebody

3106
01:57:41,360 --> 01:57:43,119
every big bite ran out of time but we

3107
01:57:43,119 --> 01:57:45,679
did it all right okay thank you for

3108
01:57:45,679 --> 01:57:48,080
everybody

3109
01:57:48,239 --> 01:57:50,960
see you in the menu

3110
01:57:50,960 --> 01:57:52,400
hi

3111
01:57:52,400 --> 01:57:55,519
thanks everybody

3112
01:57:55,599 --> 01:57:58,599
bye

3113
01:58:10,480 --> 01:58:12,559
you

