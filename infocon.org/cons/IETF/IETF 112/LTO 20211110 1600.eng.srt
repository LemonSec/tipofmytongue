1
00:00:20,400 --> 00:00:23,600
okay uh let's get started

2
00:00:23,600 --> 00:00:26,160
this is a auto itfo

3
00:00:26,160 --> 00:00:29,279
one one two meeting virtual meeting

4
00:00:29,279 --> 00:00:31,519
my name is ching woo

5
00:00:31,519 --> 00:00:33,360
the first thing i want to mention is

6
00:00:33,360 --> 00:00:35,920
yeah my co-chair

7
00:00:35,920 --> 00:00:38,239
he got sick cannot make it but we are

8
00:00:38,239 --> 00:00:41,520
fortunate to have muhammad back there to

9
00:00:41,520 --> 00:00:43,760
be the acting chair

10
00:00:43,760 --> 00:00:45,920
chair so welcome

11
00:00:45,920 --> 00:00:46,800
matt

12
00:00:46,800 --> 00:00:50,239
to help moderate the discussion

13
00:00:50,239 --> 00:00:51,280
and

14
00:00:51,280 --> 00:00:52,719
so we

15
00:00:52,719 --> 00:00:55,520
we will have a

16
00:00:56,640 --> 00:00:58,800
actually code

17
00:00:58,800 --> 00:01:01,120
we have a hedge talker

18
00:01:01,120 --> 00:01:03,359
actually collaborative meeting taken to

19
00:01:03,359 --> 00:01:05,438
us and

20
00:01:05,438 --> 00:01:08,479
for a general and slides and you can get

21
00:01:08,479 --> 00:01:12,439
access to the link

22
00:01:12,799 --> 00:01:15,600
uh notewhere as euler

23
00:01:15,600 --> 00:01:18,799
node will tell us how itf uh is

24
00:01:18,799 --> 00:01:21,920
operating including idea process policy

25
00:01:21,920 --> 00:01:23,360
and rules

26
00:01:23,360 --> 00:01:25,040
and ipr

27
00:01:25,040 --> 00:01:27,040
and

28
00:01:27,040 --> 00:01:30,720
one thing i want to mention is our isg

29
00:01:30,720 --> 00:01:32,880
encourages all the working google chair

30
00:01:32,880 --> 00:01:34,479
to highlight

31
00:01:34,479 --> 00:01:35,680
the code

32
00:01:35,680 --> 00:01:36,960
conductor

33
00:01:36,960 --> 00:01:37,840
so

34
00:01:37,840 --> 00:01:40,400
for the code of conductor means you

35
00:01:40,400 --> 00:01:42,560
should be courtesy to the colleaguer

36
00:01:42,560 --> 00:01:44,159
focus on technical

37
00:01:44,159 --> 00:01:46,799
discussion for example topics we have a

38
00:01:46,799 --> 00:01:49,119
bunch of pcp if you are not a familiar

39
00:01:49,119 --> 00:01:52,759
please read it

40
00:01:54,079 --> 00:01:56,240
uh other minutes trivial

41
00:01:56,240 --> 00:01:57,360
so

42
00:01:57,360 --> 00:01:59,439
the session will be recorded

43
00:01:59,439 --> 00:02:02,159
uh so we'll use the media echo queue

44
00:02:02,159 --> 00:02:03,280
control

45
00:02:03,280 --> 00:02:04,640
if you uh

46
00:02:04,640 --> 00:02:07,200
want to speak please enter in uh into

47
00:02:07,200 --> 00:02:11,200
the queue by press the red handed button

48
00:02:11,200 --> 00:02:13,599
if you want to leave the queue

49
00:02:13,599 --> 00:02:16,000
please have a second click the wrist

50
00:02:16,000 --> 00:02:16,879
hand

51
00:02:16,879 --> 00:02:19,440
and before you speak please unmute

52
00:02:19,440 --> 00:02:20,800
yourself

53
00:02:20,800 --> 00:02:21,680
and

54
00:02:21,680 --> 00:02:23,680
after speaker please

55
00:02:23,680 --> 00:02:26,319
mute yourself uh

56
00:02:26,319 --> 00:02:27,040
for

57
00:02:27,040 --> 00:02:28,480
audience uh

58
00:02:28,480 --> 00:02:30,560
especially you

59
00:02:30,560 --> 00:02:33,360
can mute your video stream

60
00:02:33,360 --> 00:02:37,519
and we also have a jabber and it will be

61
00:02:37,519 --> 00:02:39,519
served as a slider

62
00:02:39,519 --> 00:02:40,400
uh

63
00:02:40,400 --> 00:02:41,680
comments

64
00:02:41,680 --> 00:02:43,280
and we'll keep track of the side

65
00:02:43,280 --> 00:02:45,120
comments and

66
00:02:45,120 --> 00:02:48,080
if you want to speak before the mic but

67
00:02:48,080 --> 00:02:51,280
you cannot make it please put at mica

68
00:02:51,280 --> 00:02:53,519
and we will forward the comments to the

69
00:02:53,519 --> 00:02:55,120
meeting room

70
00:02:55,120 --> 00:02:58,000
and the blue sheet we have electr

71
00:02:58,000 --> 00:03:00,720
electric blue sheet so your antennas

72
00:03:00,720 --> 00:03:03,599
will automatically record it

73
00:03:03,599 --> 00:03:06,080
and notes taking we

74
00:03:06,080 --> 00:03:07,840
have a kodi med

75
00:03:07,840 --> 00:03:10,959
code called md and the hedgehog talked

76
00:03:10,959 --> 00:03:12,640
to us and

77
00:03:12,640 --> 00:03:14,560
and i i think we

78
00:03:14,560 --> 00:03:16,800
already have agent and daniel have to

79
00:03:16,800 --> 00:03:20,879
take a minute if you want to

80
00:03:20,879 --> 00:03:23,200
add additional

81
00:03:23,200 --> 00:03:26,159
minutes feel free to do so

82
00:03:26,159 --> 00:03:29,159
and

83
00:03:32,319 --> 00:03:34,239
so this is a channel for today's

84
00:03:34,239 --> 00:03:36,799
discussion so the agenda is very tired

85
00:03:36,799 --> 00:03:39,280
uh first as a chair we will introduce

86
00:03:39,280 --> 00:03:42,239
the working status because we

87
00:03:42,239 --> 00:03:44,640
have our new channel get approved so

88
00:03:44,640 --> 00:03:47,440
thanks marking and and

89
00:03:47,440 --> 00:03:49,280
especially want to

90
00:03:49,280 --> 00:03:51,040
you know highlight the two working group

91
00:03:51,040 --> 00:03:51,840
uh

92
00:03:51,840 --> 00:03:53,519
document styles update because there's

93
00:03:53,519 --> 00:03:55,680
some open issues that need to be tracked

94
00:03:55,680 --> 00:03:57,519
we want to make sure all the comments

95
00:03:57,519 --> 00:03:58,799
are just

96
00:03:58,799 --> 00:04:00,560
and for today's discussion we'll focus

97
00:04:00,560 --> 00:04:02,720
on charter items we have two charter

98
00:04:02,720 --> 00:04:05,920
items the first one is auto om support

99
00:04:05,920 --> 00:04:08,159
and json will lead the discussion the

100
00:04:08,159 --> 00:04:10,080
second one is auto om

101
00:04:10,080 --> 00:04:11,920
over http 2

102
00:04:11,920 --> 00:04:15,839
and richard will lead the discussion

103
00:04:17,199 --> 00:04:18,959
and

104
00:04:18,959 --> 00:04:21,040
also we have a deployment experience

105
00:04:21,040 --> 00:04:24,160
update we receive two different updates

106
00:04:24,160 --> 00:04:27,360
one is from g2 the second is from flow

107
00:04:27,360 --> 00:04:28,479
director

108
00:04:28,479 --> 00:04:29,759
and uh

109
00:04:29,759 --> 00:04:30,720
we

110
00:04:30,720 --> 00:04:32,720
actually have already have a discussion

111
00:04:32,720 --> 00:04:33,600
with

112
00:04:33,600 --> 00:04:36,000
team so kait will introduce

113
00:04:36,000 --> 00:04:38,880
how g2 is integrated with auto the

114
00:04:38,880 --> 00:04:41,520
second is flow director the daniel will

115
00:04:41,520 --> 00:04:43,840
give update of flow director

116
00:04:43,840 --> 00:04:44,720
and

117
00:04:44,720 --> 00:04:46,479
hopefully this will be good input for

118
00:04:46,479 --> 00:04:47,360
auto

119
00:04:47,360 --> 00:04:48,880
deployment

120
00:04:48,880 --> 00:04:50,400
and

121
00:04:50,400 --> 00:04:53,120
after that we'll have

122
00:04:53,120 --> 00:04:56,560
three long chat items the first one

123
00:04:56,560 --> 00:05:01,039
is also as itf network exposure function

124
00:05:01,039 --> 00:05:03,280
the leader will be the lewis

125
00:05:03,280 --> 00:05:04,160
and

126
00:05:04,160 --> 00:05:05,759
the second

127
00:05:05,759 --> 00:05:08,720
is compute aware network use cases

128
00:05:08,720 --> 00:05:10,560
will invite the leopong to introduce

129
00:05:10,560 --> 00:05:11,360
these

130
00:05:11,360 --> 00:05:14,240
financial new diploma use cases

131
00:05:14,240 --> 00:05:15,919
the last one

132
00:05:15,919 --> 00:05:17,440
will invite

133
00:05:17,440 --> 00:05:20,320
uh leo zu jung from london university to

134
00:05:20,320 --> 00:05:21,600
introduce

135
00:05:21,600 --> 00:05:24,479
bandwidth exclamation on opennet

136
00:05:24,479 --> 00:05:25,840
lab

137
00:05:25,840 --> 00:05:27,759
after that we'll wrap up

138
00:05:27,759 --> 00:05:31,600
the discussion and agenda bash

139
00:05:34,639 --> 00:05:35,759
okay

140
00:05:35,759 --> 00:05:38,479
let's move on

141
00:05:38,479 --> 00:05:39,440
uh

142
00:05:39,440 --> 00:05:40,960
actually we

143
00:05:40,960 --> 00:05:44,240
uh we could work remotely we are already

144
00:05:44,240 --> 00:05:46,000
familiar with walker remotely but i want

145
00:05:46,000 --> 00:05:47,039
to mention

146
00:05:47,039 --> 00:05:48,800
highlighter three since the first we

147
00:05:48,800 --> 00:05:50,800
should utilize the meninist

148
00:05:50,800 --> 00:05:53,120
so usually the

149
00:05:53,120 --> 00:05:56,479
consensus is judged on the menu still we

150
00:05:56,479 --> 00:05:58,479
today we have important discussion in

151
00:05:58,479 --> 00:06:00,000
this meeting

152
00:06:00,000 --> 00:06:02,560
and we also have theoretical interim

153
00:06:02,560 --> 00:06:05,039
meeting and informal meeting

154
00:06:05,039 --> 00:06:08,240
and under early the working decision is

155
00:06:08,240 --> 00:06:10,800
made on the menu list so

156
00:06:10,800 --> 00:06:12,880
please uh

157
00:06:12,880 --> 00:06:14,560
actually

158
00:06:14,560 --> 00:06:15,520
start

159
00:06:15,520 --> 00:06:18,160
it's important to

160
00:06:18,160 --> 00:06:19,280
actually

161
00:06:19,280 --> 00:06:21,600
close down the topic and to show the the

162
00:06:21,600 --> 00:06:22,560
topic

163
00:06:22,560 --> 00:06:24,639
get it done and also it's important to

164
00:06:24,639 --> 00:06:26,080
start a new topic

165
00:06:26,080 --> 00:06:28,960
so if you have any new idea

166
00:06:28,960 --> 00:06:29,840
please

167
00:06:29,840 --> 00:06:32,319
publish your

168
00:06:32,319 --> 00:06:34,639
document and

169
00:06:34,639 --> 00:06:36,960
make an intro and a summary of what you

170
00:06:36,960 --> 00:06:39,520
do on the list and

171
00:06:39,520 --> 00:06:42,160
begin the discussion on the list

172
00:06:42,160 --> 00:06:43,280
and

173
00:06:43,280 --> 00:06:44,639
also for

174
00:06:44,639 --> 00:06:45,520
the

175
00:06:45,520 --> 00:06:46,960
next itv

176
00:06:46,960 --> 00:06:49,199
dave meeting probably

177
00:06:49,199 --> 00:06:52,720
we have hope can have a mixed meeting

178
00:06:52,720 --> 00:06:55,120
both online and in person but it hasn't

179
00:06:55,120 --> 00:06:57,520
been announced yet but

180
00:06:57,520 --> 00:07:00,000
let's stay tuned and

181
00:07:00,000 --> 00:07:01,199
last uh

182
00:07:01,199 --> 00:07:03,680
and we have a

183
00:07:03,680 --> 00:07:05,840
online meeting and also we have informal

184
00:07:05,840 --> 00:07:06,800
meeting

185
00:07:06,800 --> 00:07:09,680
uh if working google think we

186
00:07:09,680 --> 00:07:11,520
need to uh

187
00:07:11,520 --> 00:07:13,360
have these kind of results working with

188
00:07:13,360 --> 00:07:17,720
chair can arrange this kind of resource

189
00:07:20,080 --> 00:07:21,120
and

190
00:07:21,120 --> 00:07:23,680
so this is a

191
00:07:23,680 --> 00:07:24,880
auto working

192
00:07:24,880 --> 00:07:27,199
charter so we

193
00:07:27,199 --> 00:07:29,280
for this channel we actually

194
00:07:29,280 --> 00:07:31,759
have two important delivery one is auto

195
00:07:31,759 --> 00:07:33,840
om the second

196
00:07:33,840 --> 00:07:37,199
is auto new transport in addition we

197
00:07:37,199 --> 00:07:39,120
can cover uh

198
00:07:39,120 --> 00:07:41,599
the auto deployment update

199
00:07:41,599 --> 00:07:42,960
and

200
00:07:42,960 --> 00:07:45,199
so we uh

201
00:07:45,199 --> 00:07:47,520
we also can explore the use case and

202
00:07:47,520 --> 00:07:50,720
protocol uh maintenances so you can see

203
00:07:50,720 --> 00:07:52,960
we have three deliverable

204
00:07:52,960 --> 00:07:53,840
and

205
00:07:53,840 --> 00:07:55,919
so for the auto deployment challenge we

206
00:07:55,919 --> 00:07:57,840
have documented in the wikipedia or

207
00:07:57,840 --> 00:08:00,719
internet draft

208
00:08:01,520 --> 00:08:03,520
and we actually break down

209
00:08:03,520 --> 00:08:05,599
the chat item

210
00:08:05,599 --> 00:08:06,879
into

211
00:08:06,879 --> 00:08:08,720
several categories

212
00:08:08,720 --> 00:08:10,160
and

213
00:08:10,160 --> 00:08:11,840
you can see the first two actually we

214
00:08:11,840 --> 00:08:13,520
already have a relevant individual

215
00:08:13,520 --> 00:08:15,840
chapter so this will be

216
00:08:15,840 --> 00:08:18,400
our uh focus of this uh

217
00:08:18,400 --> 00:08:19,919
agenda discussion

218
00:08:19,919 --> 00:08:21,919
and we also have a

219
00:08:21,919 --> 00:08:22,879
a

220
00:08:22,879 --> 00:08:24,800
long channel item actually has a bunch

221
00:08:24,800 --> 00:08:25,840
of draft

222
00:08:25,840 --> 00:08:27,680
hopefully it will serve i could improve

223
00:08:27,680 --> 00:08:30,960
to the order different update

224
00:08:31,919 --> 00:08:33,839
and we also have information uh

225
00:08:33,839 --> 00:08:37,519
development tracking so

226
00:08:37,919 --> 00:08:40,320
you can see actually for clan we have

227
00:08:40,320 --> 00:08:42,080
two implementation server we have four

228
00:08:42,080 --> 00:08:43,839
implementation if you

229
00:08:43,839 --> 00:08:45,680
have been aware any new

230
00:08:45,680 --> 00:08:47,200
implementation

231
00:08:47,200 --> 00:08:49,920
please let us know and we'll update this

232
00:08:49,920 --> 00:08:52,479
week page

233
00:08:53,200 --> 00:08:56,160
and this document update we already have

234
00:08:56,160 --> 00:08:58,959
four working with draft uh actually

235
00:08:58,959 --> 00:09:02,800
ready for ietf isg telechat arrange it

236
00:09:02,800 --> 00:09:05,519
at the december 2.

237
00:09:05,519 --> 00:09:06,320
and

238
00:09:06,320 --> 00:09:08,720
so today we will discuss the two

239
00:09:08,720 --> 00:09:10,160
documents who

240
00:09:10,160 --> 00:09:13,200
which actually has some urban issue

241
00:09:13,200 --> 00:09:15,200
so

242
00:09:15,200 --> 00:09:17,600
that's it

243
00:09:18,720 --> 00:09:20,080
let's uh

244
00:09:20,080 --> 00:09:22,720
move to the first topic

245
00:09:22,720 --> 00:09:26,959
uh i think it is a gokai

246
00:09:29,839 --> 00:09:32,160
hello everyone uh this is guy uh so

247
00:09:32,160 --> 00:09:34,959
ching can you share my slide

248
00:09:34,959 --> 00:09:37,839
okay

249
00:09:47,519 --> 00:09:51,120
go ahead okay so uh this is a

250
00:09:51,120 --> 00:09:53,120
presentation about the open issues

251
00:09:53,120 --> 00:09:55,600
raised in the last core reviews for auto

252
00:09:55,600 --> 00:09:57,200
pass factory extension so next slide

253
00:09:57,200 --> 00:09:59,519
please

254
00:10:02,000 --> 00:10:05,360
and for uh jane art and art art uh let's

255
00:10:05,360 --> 00:10:07,920
go reviews we have uh

256
00:10:07,920 --> 00:10:09,680
both gives the

257
00:10:09,680 --> 00:10:12,000
uh some minor issues and for

258
00:10:12,000 --> 00:10:16,079
the reviews from ops dir we actually uh

259
00:10:16,079 --> 00:10:19,200
had not ready so uh so the main content

260
00:10:19,200 --> 00:10:21,279
of this prediction will be on the uh

261
00:10:21,279 --> 00:10:23,600
reviews for the obs dr so next time

262
00:10:23,600 --> 00:10:25,839
please

263
00:10:27,839 --> 00:10:31,040
and for uh art art and junior arts we

264
00:10:31,040 --> 00:10:34,880
actually uh most of the issues

265
00:10:35,200 --> 00:10:37,760
matter or need issues so

266
00:10:37,760 --> 00:10:39,680
from the other we have one issue is the

267
00:10:39,680 --> 00:10:41,279
use of current id

268
00:10:41,279 --> 00:10:44,240
uh does not conform to a previous rfcs

269
00:10:44,240 --> 00:10:46,959
and also the second issue is uh we need

270
00:10:46,959 --> 00:10:50,240
ipv examples for ipv6

271
00:10:50,240 --> 00:10:53,120
so next slide please

272
00:10:55,760 --> 00:10:58,640
and we have a major revision for the

273
00:10:58,640 --> 00:11:00,240
first issue basically the use of kind of

274
00:11:00,240 --> 00:11:03,360
ids in the last revision and we defined

275
00:11:03,360 --> 00:11:05,760
the format to be compatible with rc

276
00:11:05,760 --> 00:11:10,399
uh 2003 87 and

277
00:11:10,440 --> 00:11:13,279
532 and we also

278
00:11:13,279 --> 00:11:15,600
had revised the protocol specifications

279
00:11:15,600 --> 00:11:19,040
and examples to accommodate the changes

280
00:11:19,040 --> 00:11:21,120
for the use of content id so next time

281
00:11:21,120 --> 00:11:23,360
please

282
00:11:25,680 --> 00:11:27,360
and actually we

283
00:11:27,360 --> 00:11:30,160
most of the open issues comes from the

284
00:11:30,160 --> 00:11:32,079
review from ops there and

285
00:11:32,079 --> 00:11:34,959
we have classified them into four major

286
00:11:34,959 --> 00:11:36,720
issues the first is

287
00:11:36,720 --> 00:11:39,360
uh the reviewer asks for more use real

288
00:11:39,360 --> 00:11:42,480
use cases and examples to better

289
00:11:42,480 --> 00:11:45,519
clarify the extensions in a document and

290
00:11:45,519 --> 00:11:46,959
also

291
00:11:46,959 --> 00:11:48,560
there are some concerns about the

292
00:11:48,560 --> 00:11:51,279
clarity about the concept of extra

293
00:11:51,279 --> 00:11:54,000
natural element and then there are some

294
00:11:54,000 --> 00:11:57,279
terms that may not be very uh

295
00:11:57,279 --> 00:12:00,480
cleared then may uh trigger some like

296
00:12:00,480 --> 00:12:02,000
ambiguous meanings

297
00:12:02,000 --> 00:12:04,720
and the last is uh the reviewer asks for

298
00:12:04,720 --> 00:12:06,959
some examples that uh the past vector

299
00:12:06,959 --> 00:12:08,880
can be used in practice

300
00:12:08,880 --> 00:12:11,839
so let's please

301
00:12:12,399 --> 00:12:15,200
so this gives the uh

302
00:12:15,200 --> 00:12:17,519
review for the first issue so basically

303
00:12:17,519 --> 00:12:20,560
the reviewer is asked for uh

304
00:12:20,560 --> 00:12:22,480
argues that in the

305
00:12:22,480 --> 00:12:25,680
uh 17 version of pass vector

306
00:12:25,680 --> 00:12:27,519
and the use case section does not

307
00:12:27,519 --> 00:12:29,760
reflect real traffic steering

308
00:12:29,760 --> 00:12:32,079
objectives of existing systems

309
00:12:32,079 --> 00:12:34,720
such as the lhc project

310
00:12:34,720 --> 00:12:37,040
and also some specific examples of are

311
00:12:37,040 --> 00:12:40,000
needed to show real use cases

312
00:12:40,000 --> 00:12:42,560
and also some discussion and examples

313
00:12:42,560 --> 00:12:44,800
for identifying bottlenecks are needed

314
00:12:44,800 --> 00:12:47,680
so next time please

315
00:12:49,760 --> 00:12:52,720
and in the

316
00:12:52,720 --> 00:12:55,120
in our latest revision we actually uh

317
00:12:55,120 --> 00:12:57,680
have uh introduced more

318
00:12:57,680 --> 00:12:59,839
detailed uh

319
00:12:59,839 --> 00:13:02,720
examples about uh how this extension can

320
00:13:02,720 --> 00:13:06,160
be used in practice and the examples are

321
00:13:06,160 --> 00:13:08,639
extracted from uh

322
00:13:08,639 --> 00:13:10,240
existing systems

323
00:13:10,240 --> 00:13:12,959
that uh where we saw that where we

324
00:13:12,959 --> 00:13:15,200
believe that this extension can be used

325
00:13:15,200 --> 00:13:17,519
uh or be integrated into such these

326
00:13:17,519 --> 00:13:20,079
systems and uh for details about these

327
00:13:20,079 --> 00:13:23,120
examples uh please refer to the latest

328
00:13:23,120 --> 00:13:25,519
document

329
00:13:25,519 --> 00:13:28,399
so next slide piece

330
00:13:30,079 --> 00:13:31,279
and

331
00:13:31,279 --> 00:13:32,880
the the second

332
00:13:32,880 --> 00:13:34,959
issue

333
00:13:34,959 --> 00:13:37,760
oh implement

334
00:13:38,399 --> 00:13:40,800
and we also uh

335
00:13:40,800 --> 00:13:42,959
oh

336
00:13:42,959 --> 00:13:45,040
sorry i i don't see screen so well which

337
00:13:45,040 --> 00:13:47,279
side is this

338
00:13:47,279 --> 00:13:49,440
a page eight right

339
00:13:49,440 --> 00:13:51,760
yeah page oh okay

340
00:13:51,760 --> 00:13:54,720
uh and uh the second issue that some

341
00:13:54,720 --> 00:13:56,800
specific examples of anees are needed to

342
00:13:56,800 --> 00:13:59,120
show real use cases so

343
00:13:59,120 --> 00:14:00,720
we actually

344
00:14:00,720 --> 00:14:05,360
give the example for example how for the

345
00:14:05,360 --> 00:14:06,880
example for the use cases that we

346
00:14:06,880 --> 00:14:09,519
presented in the last slide we actually

347
00:14:09,519 --> 00:14:12,079
also list how the

348
00:14:12,079 --> 00:14:13,760
different network components will be

349
00:14:13,760 --> 00:14:16,959
considered as anes in a specific use

350
00:14:16,959 --> 00:14:19,360
case and we also refer to these use

351
00:14:19,360 --> 00:14:22,079
cases to their

352
00:14:22,079 --> 00:14:24,320
like research papers or

353
00:14:24,320 --> 00:14:26,959
other materials

354
00:14:26,959 --> 00:14:30,680
so next time please

355
00:14:32,399 --> 00:14:34,720
and to address the issue of uh

356
00:14:34,720 --> 00:14:36,720
identifying bottlenecks

357
00:14:36,720 --> 00:14:38,399
uh we actually

358
00:14:38,399 --> 00:14:39,519
uh

359
00:14:39,519 --> 00:14:41,440
first we point the

360
00:14:41,440 --> 00:14:44,560
array studies so the people so readers

361
00:14:44,560 --> 00:14:46,880
of the document can refer to these uh

362
00:14:46,880 --> 00:14:50,079
research papers to understand how uh the

363
00:14:50,079 --> 00:14:52,160
bottlenecks can be identified and we

364
00:14:52,160 --> 00:14:54,959
also uh put some use uh

365
00:14:54,959 --> 00:14:57,440
put some use uh actual concrete examples

366
00:14:57,440 --> 00:14:59,920
in the document to show how pass vector

367
00:14:59,920 --> 00:15:02,560
can help expose bottom information

368
00:15:02,560 --> 00:15:05,599
so next time please

369
00:15:10,720 --> 00:15:13,360
and for the second open issue basically

370
00:15:13,360 --> 00:15:15,360
uh the reviewer asks for clarification

371
00:15:15,360 --> 00:15:18,320
examples for abstract editor element so

372
00:15:18,320 --> 00:15:19,839
first we

373
00:15:19,839 --> 00:15:21,519
give you some examples in the use case

374
00:15:21,519 --> 00:15:23,120
section and also

375
00:15:23,120 --> 00:15:26,079
when we specify the meaning of action

376
00:15:26,079 --> 00:15:28,639
network element we put another example

377
00:15:28,639 --> 00:15:31,440
there to show that uh different uh

378
00:15:31,440 --> 00:15:33,519
objects if they have the same property

379
00:15:33,519 --> 00:15:35,360
then they will be triggered as like

380
00:15:35,360 --> 00:15:38,079
equivalent uh actual error elements to

381
00:15:38,079 --> 00:15:40,639
basically to give a better sense of how

382
00:15:40,639 --> 00:15:43,519
different neural components can be uh

383
00:15:43,519 --> 00:15:46,720
can be considered as those basically why

384
00:15:46,720 --> 00:15:49,120
we use the meaning of actual network

385
00:15:49,120 --> 00:15:51,199
element to basically show some

386
00:15:51,199 --> 00:15:52,000
uh

387
00:15:52,000 --> 00:15:54,480
common properties of different physical

388
00:15:54,480 --> 00:15:56,399
entities in the network

389
00:15:56,399 --> 00:15:59,279
so next slide please

390
00:16:07,120 --> 00:16:10,320
and for uh like some terminologies that

391
00:16:10,320 --> 00:16:13,040
uh the reviewers might uh

392
00:16:13,040 --> 00:16:15,839
might find ambiguous we actually

393
00:16:15,839 --> 00:16:18,639
revise these terms to avoid ambiguity

394
00:16:18,639 --> 00:16:21,199
for meaning

395
00:16:21,680 --> 00:16:22,399
so

396
00:16:22,399 --> 00:16:25,120
next slide please

397
00:16:35,360 --> 00:16:38,320
and for the last issue basically

398
00:16:38,320 --> 00:16:40,720
we need to give some pointers for how

399
00:16:40,720 --> 00:16:43,040
the clients can use this extension to

400
00:16:43,040 --> 00:16:44,800
orchestrate their traffic

401
00:16:44,800 --> 00:16:48,160
first we also give some

402
00:16:48,160 --> 00:16:50,320
examples and pointers when we

403
00:16:50,320 --> 00:16:53,360
demonstrate the use case and it is

404
00:16:53,360 --> 00:16:56,000
emphasized in the documents that auto is

405
00:16:56,000 --> 00:16:58,480
only used for information exposure and

406
00:16:58,480 --> 00:17:00,160
traffic steering is done by the

407
00:17:00,160 --> 00:17:02,560
application

408
00:17:02,560 --> 00:17:05,439
okay can you wrap up in one minute

409
00:17:05,439 --> 00:17:07,280
yeah sure basically i think the next

410
00:17:07,280 --> 00:17:10,400
page is basically a summary of uh

411
00:17:10,400 --> 00:17:12,240
well what we have done in the last

412
00:17:12,240 --> 00:17:14,240
revision so issues from the last call

413
00:17:14,240 --> 00:17:16,959
reviews are addressed as uh from my

414
00:17:16,959 --> 00:17:18,559
understanding and we are actually

415
00:17:18,559 --> 00:17:20,880
waiting for the reviewers feedback and

416
00:17:20,880 --> 00:17:23,039
uh it will be so we have one question

417
00:17:23,039 --> 00:17:25,039
for the working group is uh how do you

418
00:17:25,039 --> 00:17:26,319
suggest that we proceed with this

419
00:17:26,319 --> 00:17:28,799
document

420
00:17:29,679 --> 00:17:32,799
so actually marking up

421
00:17:32,799 --> 00:17:36,000
thanks um so to be clear all those diffs

422
00:17:36,000 --> 00:17:38,320
that you showed are present in the

423
00:17:38,320 --> 00:17:40,720
latest version of the draft

424
00:17:40,720 --> 00:17:43,200
yes yes uh i think these changes are

425
00:17:43,200 --> 00:17:47,200
already in the 19 version

426
00:17:47,200 --> 00:17:49,679
uh okay excellent version 19. this is

427
00:17:49,679 --> 00:17:51,679
the latest one okay good i just wanted

428
00:17:51,679 --> 00:17:55,120
to make sure that the iesg um has it

429
00:17:55,120 --> 00:17:56,080
um

430
00:17:56,080 --> 00:17:57,520
it would be it would certainly be nice

431
00:17:57,520 --> 00:17:59,600
if the last call reviewers responded to

432
00:17:59,600 --> 00:18:01,520
your changes but um i don't view that as

433
00:18:01,520 --> 00:18:02,640
necessary

434
00:18:02,640 --> 00:18:06,000
um the ads can

435
00:18:06,000 --> 00:18:08,320
the other ads can do what those

436
00:18:08,320 --> 00:18:10,160
can you know judge whether or not you've

437
00:18:10,160 --> 00:18:11,919
addressed this so i i think we're fine

438
00:18:11,919 --> 00:18:13,600
to proceed to the ballot which will

439
00:18:13,600 --> 00:18:15,200
happen

440
00:18:15,200 --> 00:18:16,720
yeah i see

441
00:18:16,720 --> 00:18:18,799
i mean by all means if you i believe you

442
00:18:18,799 --> 00:18:20,640
have already but email the reviewers and

443
00:18:20,640 --> 00:18:22,160
say hey we made these changes please

444
00:18:22,160 --> 00:18:24,640
look at them um but yeah i already send

445
00:18:24,640 --> 00:18:28,080
them the emails yeah but i didn't get it

446
00:18:28,080 --> 00:18:29,360
fair enough right but we're not going to

447
00:18:29,360 --> 00:18:30,880
block on last call reviewers being

448
00:18:30,880 --> 00:18:33,039
responsive thanks

449
00:18:33,039 --> 00:18:33,919
okay

450
00:18:33,919 --> 00:18:36,480
all right thank you

451
00:18:36,880 --> 00:18:38,880
okay yeah i think that's all for the

452
00:18:38,880 --> 00:18:39,760
talk

453
00:18:39,760 --> 00:18:41,039
thanks jim

454
00:18:41,039 --> 00:18:43,360
okay thank you let's move to the second

455
00:18:43,360 --> 00:18:45,280
topic richard

456
00:18:45,280 --> 00:18:48,160
so let me share your slides

457
00:18:48,160 --> 00:18:52,039
yeah thank you

458
00:19:01,120 --> 00:19:03,200
here you go

459
00:19:03,200 --> 00:19:04,000
okay

460
00:19:04,000 --> 00:19:05,679
can i start

461
00:19:05,679 --> 00:19:06,480
yes

462
00:19:06,480 --> 00:19:07,679
go ahead

463
00:19:07,679 --> 00:19:10,240
great yeah and uh for the performance

464
00:19:10,240 --> 00:19:14,480
metric uh uh document we received the

465
00:19:14,480 --> 00:19:18,400
uh gen art review from alvin davies very

466
00:19:18,400 --> 00:19:20,640
very nice review and then we also got

467
00:19:20,640 --> 00:19:22,480
the art out review from christian

468
00:19:22,480 --> 00:19:24,480
amstels and they are also very nice

469
00:19:24,480 --> 00:19:27,679
review the main changes was to uh

470
00:19:27,679 --> 00:19:30,240
address the uh reviews and there's one

471
00:19:30,240 --> 00:19:32,080
remaining thing which we have not really

472
00:19:32,080 --> 00:19:34,080
confirmed yet but i'll go over what it

473
00:19:34,080 --> 00:19:37,760
really is okay so next slides please

474
00:19:37,760 --> 00:19:40,400
so here the main thing we changed and to

475
00:19:40,400 --> 00:19:43,200
address the gen art and art art reviews

476
00:19:43,200 --> 00:19:44,400
basically we made the changes from

477
00:19:44,400 --> 00:19:47,440
version 17 to version 19 and

478
00:19:47,440 --> 00:19:49,760
would be number one is mostly clarify

479
00:19:49,760 --> 00:19:52,240
the definition of cosmetic string mostly

480
00:19:52,240 --> 00:19:55,200
came from the review from christian and

481
00:19:55,200 --> 00:19:57,440
also of course clarify the ina

482
00:19:57,440 --> 00:19:59,600
considerations from from ad from other

483
00:19:59,600 --> 00:20:02,559
reviewers as well and then the last one

484
00:20:02,559 --> 00:20:05,280
in terms high level structure is ongoing

485
00:20:05,280 --> 00:20:08,640
discussion with the uh the general

486
00:20:08,640 --> 00:20:09,679
review

487
00:20:09,679 --> 00:20:12,559
albing and mostly about is cos context

488
00:20:12,559 --> 00:20:15,039
parameters if you want to get a little

489
00:20:15,039 --> 00:20:18,400
remainder and the cost context parameter

490
00:20:18,400 --> 00:20:20,559
is on the lower right corner so that's

491
00:20:20,559 --> 00:20:22,320
one uh which we're still trying to

492
00:20:22,320 --> 00:20:24,640
really really reach the final the final

493
00:20:24,640 --> 00:20:27,760
decision with with uh alvin uh i'll go

494
00:20:27,760 --> 00:20:29,360
over a little details but that's those

495
00:20:29,360 --> 00:20:31,600
are high level changes we made so now

496
00:20:31,600 --> 00:20:34,559
let me first uh went over the first

497
00:20:34,559 --> 00:20:37,360
first change which is triggered by the

498
00:20:37,360 --> 00:20:40,320
review by christian and main issue here

499
00:20:40,320 --> 00:20:43,280
is he wanted to clarify the grammar so

500
00:20:43,280 --> 00:20:46,000
if you look at it and in the early in an

501
00:20:46,000 --> 00:20:48,720
earlier version we give a

502
00:20:48,720 --> 00:20:50,400
formal grammar which there's all these

503
00:20:50,400 --> 00:20:52,640
email changes of course pop pop game

504
00:20:52,640 --> 00:20:54,400
exchanges uh we use some kind like a

505
00:20:54,400 --> 00:20:56,159
grammar and then the discussion of

506
00:20:56,159 --> 00:20:58,799
suggestion eventually from a question is

507
00:20:58,799 --> 00:21:02,159
maybe just use some kind of english

508
00:21:02,159 --> 00:21:04,799
english description about what a

509
00:21:04,799 --> 00:21:07,120
cosmetic reading string really is and we

510
00:21:07,120 --> 00:21:09,440
agree with it because we looked at the

511
00:21:09,440 --> 00:21:11,440
authors looked at the

512
00:21:11,440 --> 00:21:13,760
multiple ways to specify the grammar and

513
00:21:13,760 --> 00:21:14,880
everyone looks like slightly more

514
00:21:14,880 --> 00:21:16,480
complex than necessary

515
00:21:16,480 --> 00:21:18,080
we're not really dealing with a very

516
00:21:18,080 --> 00:21:19,600
complex grammar which is dealing with

517
00:21:19,600 --> 00:21:22,159
what exactly the format of a cosmetic

518
00:21:22,159 --> 00:21:24,240
screen really is so eventually uh we

519
00:21:24,240 --> 00:21:26,240
adopted the paragraph which shown over

520
00:21:26,240 --> 00:21:29,280
here of course it is in a newest version

521
00:21:29,280 --> 00:21:31,840
so the definition basically is uh

522
00:21:31,840 --> 00:21:34,559
optional uh base metric identifier of

523
00:21:34,559 --> 00:21:35,919
course valuable everything in quotation

524
00:21:35,919 --> 00:21:37,280
means they are the

525
00:21:37,280 --> 00:21:39,039
real text and

526
00:21:39,039 --> 00:21:40,960
would be base a metric identifier

527
00:21:40,960 --> 00:21:42,960
followed by an optional statistical

528
00:21:42,960 --> 00:21:44,799
operator string that's a new term but of

529
00:21:44,799 --> 00:21:47,280
course only editor not content change

530
00:21:47,280 --> 00:21:49,440
and then i think uh their discussion

531
00:21:49,440 --> 00:21:51,840
about using dot uh call eventually

532
00:21:51,840 --> 00:21:54,320
decided to really adapt column because

533
00:21:54,320 --> 00:21:56,159
the the review set would be look you

534
00:21:56,159 --> 00:21:58,799
already have pr iv column and so why

535
00:21:58,799 --> 00:22:00,240
don't we use essentially my

536
00:22:00,240 --> 00:22:01,840
understanding our understanding is why

537
00:22:01,840 --> 00:22:02,960
didn't just do the same thing so

538
00:22:02,960 --> 00:22:04,559
therefore we adopted that small change

539
00:22:04,559 --> 00:22:05,440
from

540
00:22:05,440 --> 00:22:07,919
uh the previous version now become like

541
00:22:07,919 --> 00:22:09,360
a column so therefore if you set

542
00:22:09,360 --> 00:22:11,840
examples it becomes delay one way and

543
00:22:11,840 --> 00:22:15,039
delay one way column mean mean and delay

544
00:22:15,039 --> 00:22:18,320
one way percentile 99 so that's only

545
00:22:18,320 --> 00:22:21,760
one change and also the same

546
00:22:21,760 --> 00:22:23,840
review comment by a question

547
00:22:23,840 --> 00:22:26,480
is a discussion about what exactly how

548
00:22:26,480 --> 00:22:28,720
to specify which statistical operators

549
00:22:28,720 --> 00:22:32,080
you want to use for example what if

550
00:22:32,080 --> 00:22:34,080
it is a maximum reasonable bandwidth you

551
00:22:34,080 --> 00:22:36,159
already have a max and which one is a

552
00:22:36,159 --> 00:22:37,520
good

553
00:22:37,520 --> 00:22:40,159
metric so originally we recommended

554
00:22:40,159 --> 00:22:41,520
using pakistan

555
00:22:41,520 --> 00:22:43,600
and having these questions oh god too

556
00:22:43,600 --> 00:22:45,760
slow you have one minute

557
00:22:45,760 --> 00:22:47,600
oh one minute oh okay so basically i

558
00:22:47,600 --> 00:22:49,760
think in this one address i don't uh

559
00:22:49,760 --> 00:22:51,840
we're pretty happy about it so next next

560
00:22:51,840 --> 00:22:55,000
one please

561
00:22:55,039 --> 00:22:58,159
this one is the ina consideration and we

562
00:22:58,159 --> 00:23:00,159
add all these paragraphs an input we

563
00:23:00,159 --> 00:23:02,799
clarified from the review that for any

564
00:23:02,799 --> 00:23:05,919
new value or cosmetic and metric proper

565
00:23:05,919 --> 00:23:07,679
metrics you must include the three

566
00:23:07,679 --> 00:23:09,600
things identifier intended semantics

567
00:23:09,600 --> 00:23:11,200
security considerations and that part

568
00:23:11,200 --> 00:23:12,640
also address we think we're pretty happy

569
00:23:12,640 --> 00:23:16,240
about that please next one please

570
00:23:16,480 --> 00:23:19,039
so the only now or the only opening

571
00:23:19,039 --> 00:23:21,760
issue is how much information we want to

572
00:23:21,760 --> 00:23:24,240
really give to this uh uh the one the

573
00:23:24,240 --> 00:23:27,120
parameter field which is the the inlet

574
00:23:27,120 --> 00:23:28,960
right uh uh uh

575
00:23:28,960 --> 00:23:30,880
like a rectangle and

576
00:23:30,880 --> 00:23:32,559
the main issue i think i mean review

577
00:23:32,559 --> 00:23:35,120
comments and uh that one from general

578
00:23:35,120 --> 00:23:37,520
from from elwyn is

579
00:23:37,520 --> 00:23:39,440
how much do we want to make this one to

580
00:23:39,440 --> 00:23:41,600
be machine readable so therefore the

581
00:23:41,600 --> 00:23:43,600
current version is we're using json

582
00:23:43,600 --> 00:23:45,039
value and i think the working group

583
00:23:45,039 --> 00:23:46,480
early discussion was let's make it

584
00:23:46,480 --> 00:23:48,400
opaque but then the discussion from the

585
00:23:48,400 --> 00:23:50,559
reviewer is how much you want to make it

586
00:23:50,559 --> 00:23:51,840
to be machine readable i think that's

587
00:23:51,840 --> 00:23:53,120
the main issue

588
00:23:53,120 --> 00:23:55,600
we did talk about it and to really

589
00:23:55,600 --> 00:23:57,600
answer this question uh you we really

590
00:23:57,600 --> 00:23:59,440
have to ask ourselves what exactly why

591
00:23:59,440 --> 00:24:01,279
machine want to read about it and in

592
00:24:01,279 --> 00:24:02,880
which sense machine want to read instead

593
00:24:02,880 --> 00:24:04,799
developers would read about it

594
00:24:04,799 --> 00:24:07,279
and there's so therefore we talked about

595
00:24:07,279 --> 00:24:08,640
there are essentially two cases you

596
00:24:08,640 --> 00:24:10,480
might want to machine to be read number

597
00:24:10,480 --> 00:24:12,480
one is whenever you have for example

598
00:24:12,480 --> 00:24:14,320
look at the estimation the

599
00:24:14,320 --> 00:24:16,720
rightmost column and you might want to

600
00:24:16,720 --> 00:24:18,559
tell them which estimation also you use

601
00:24:18,559 --> 00:24:21,039
to estimate one-way delay and t-space

602
00:24:21,039 --> 00:24:22,480
report and so on

603
00:24:22,480 --> 00:24:25,039
for example later today you will see kai

604
00:24:25,039 --> 00:24:27,840
and and talk about the g2 work which

605
00:24:27,840 --> 00:24:29,840
uses maximum fairness which is a sitcom

606
00:24:29,840 --> 00:24:31,279
paper and i believe trying to be

607
00:24:31,279 --> 00:24:32,400
deployed in

608
00:24:32,400 --> 00:24:34,799
uh yes net and so on and of course also

609
00:24:34,799 --> 00:24:36,159
can be using for example in the

610
00:24:36,159 --> 00:24:38,159
conversion we talk about using profit so

611
00:24:38,159 --> 00:24:40,480
therefore one way is maybe really index

612
00:24:40,480 --> 00:24:43,039
to talk about uh it is which method you

613
00:24:43,039 --> 00:24:45,279
use the second way we identified and how

614
00:24:45,279 --> 00:24:46,960
much one making machine readable is

615
00:24:46,960 --> 00:24:48,480
maybe one keep some kind of detailed

616
00:24:48,480 --> 00:24:50,799
parameters for example when you are

617
00:24:50,799 --> 00:24:52,320
marrying for example lawsuit you're

618
00:24:52,320 --> 00:24:54,400
marrying every 10 milliseconds instead

619
00:24:54,400 --> 00:24:57,520
of every 100 milliseconds or averaging

620
00:24:57,520 --> 00:24:59,039
statistically of course i mean you were

621
00:24:59,039 --> 00:25:00,640
given long-term value but the

622
00:25:00,640 --> 00:25:02,159
measurement itself examples might come

623
00:25:02,159 --> 00:25:04,720
from so some parameters so overall

624
00:25:04,720 --> 00:25:06,559
thinking about this one we still believe

625
00:25:06,559 --> 00:25:08,640
a generic link parameter is probably the

626
00:25:08,640 --> 00:25:11,120
best way to go so therefore your

627
00:25:11,120 --> 00:25:13,440
application would be even okay and i get

628
00:25:13,440 --> 00:25:15,039
like for example what measures you are

629
00:25:15,039 --> 00:25:17,440
using and which are the parameters and

630
00:25:17,440 --> 00:25:19,520
we can get initial deployment

631
00:25:19,520 --> 00:25:20,640
and then if after we have some

632
00:25:20,640 --> 00:25:22,799
experiences we will work with eventually

633
00:25:22,799 --> 00:25:24,559
i think we can upload some of these work

634
00:25:24,559 --> 00:25:28,400
to this uh uh the bits of 79.71 and auto

635
00:25:28,400 --> 00:25:30,559
deployment so eventually if like some

636
00:25:30,559 --> 00:25:31,760
kind of very

637
00:25:31,760 --> 00:25:33,840
public way to

638
00:25:33,840 --> 00:25:35,360
specify those parameters can become

639
00:25:35,360 --> 00:25:38,000
public and we can we can make them into

640
00:25:38,000 --> 00:25:40,559
the deployment considerations instead of

641
00:25:40,559 --> 00:25:42,400
right now holding on this particular way

642
00:25:42,400 --> 00:25:43,840
because earlier working we did talk

643
00:25:43,840 --> 00:25:45,520
about this one for a long time so we're

644
00:25:45,520 --> 00:25:47,760
waiting for all of you right right

645
00:25:47,760 --> 00:25:50,000
yeah yeah we we were

646
00:25:50,000 --> 00:25:51,360
we're we're still waiting for the

647
00:25:51,360 --> 00:25:53,279
feedback from erwin and well i think

648
00:25:53,279 --> 00:25:54,960
we'll ping him again and we won't

649
00:25:54,960 --> 00:25:57,120
discuss hopefully we can reach consensus

650
00:25:57,120 --> 00:26:00,000
as soon as we can

651
00:26:00,720 --> 00:26:02,640
yeah that's a backup slide you can go

652
00:26:02,640 --> 00:26:03,600
back

653
00:26:03,600 --> 00:26:05,120
okay

654
00:26:05,120 --> 00:26:07,279
any comments from audience

655
00:26:07,279 --> 00:26:10,640
yeah mighty

656
00:26:10,640 --> 00:26:12,720
machine readable thing um you know we

657
00:26:12,720 --> 00:26:14,480
talked about this during the ad review

658
00:26:14,480 --> 00:26:16,880
prior to that and um

659
00:26:16,880 --> 00:26:18,720
ultimately yeah there's probably some

660
00:26:18,720 --> 00:26:21,279
value for debugging and i could imagine

661
00:26:21,279 --> 00:26:22,960
a particularly power user like looking

662
00:26:22,960 --> 00:26:25,279
at the stuff and deciding

663
00:26:25,279 --> 00:26:28,000
if an alto server was like good enough

664
00:26:28,000 --> 00:26:30,240
based on what the admins were but

665
00:26:30,240 --> 00:26:32,799
ultimately for this to be useful

666
00:26:32,799 --> 00:26:33,919
um

667
00:26:33,919 --> 00:26:35,679
at all you have to have like you have to

668
00:26:35,679 --> 00:26:37,520
write scripts that say ignore the

669
00:26:37,520 --> 00:26:40,159
results if like if i'm unsatisfied with

670
00:26:40,159 --> 00:26:42,559
the criteria so that implies

671
00:26:42,559 --> 00:26:44,080
you know a registry and all that so it

672
00:26:44,080 --> 00:26:45,600
doesn't have to happen in this in this

673
00:26:45,600 --> 00:26:47,440
document um it's a little late for that

674
00:26:47,440 --> 00:26:49,679
but ultimately yeah

675
00:26:49,679 --> 00:26:51,120
it doesn't have to be a long document or

676
00:26:51,120 --> 00:26:52,320
a bisp but just something saying

677
00:26:52,320 --> 00:26:55,120
defining your registry and then

678
00:26:55,120 --> 00:26:56,640
i think that's what this has to go for

679
00:26:56,640 --> 00:26:58,640
it to be worthwhile in the long run

680
00:26:58,640 --> 00:27:01,360
yes exactly

681
00:27:02,960 --> 00:27:04,640
so imagine the target gallery all the

682
00:27:04,640 --> 00:27:06,080
time i talked about already in my new

683
00:27:06,080 --> 00:27:07,440
latest version that's the only one

684
00:27:07,440 --> 00:27:08,960
where's your ongoing discussion but

685
00:27:08,960 --> 00:27:10,240
we're not making any changes on the

686
00:27:10,240 --> 00:27:12,640
target yet

687
00:27:13,440 --> 00:27:16,400
great okay

688
00:27:16,720 --> 00:27:20,080
okay let's move to the next topic i

689
00:27:20,080 --> 00:27:23,520
think it is jason

690
00:27:26,240 --> 00:27:28,480
okay

691
00:27:29,440 --> 00:27:31,360
do you want to share slide by yourself

692
00:27:31,360 --> 00:27:32,640
or

693
00:27:32,640 --> 00:27:35,640
okay

694
00:27:37,120 --> 00:27:38,640
uh let me

695
00:27:38,640 --> 00:27:41,039
slide

696
00:27:41,760 --> 00:27:45,679
two minute size you need to use like one

697
00:27:45,919 --> 00:27:48,880
okay

698
00:27:48,880 --> 00:27:51,120
so

699
00:27:52,000 --> 00:27:54,559
this is presentation for the new

700
00:27:54,559 --> 00:27:56,399
items about the

701
00:27:56,399 --> 00:27:58,240
the young design model for the

702
00:27:58,240 --> 00:28:00,840
auto oem

703
00:28:00,840 --> 00:28:03,440
and apparently still

704
00:28:03,440 --> 00:28:06,960
already work and we try to summarize the

705
00:28:06,960 --> 00:28:08,880
uh what the scope and

706
00:28:08,880 --> 00:28:11,200
the requirements for this work and we

707
00:28:11,200 --> 00:28:12,640
give some

708
00:28:12,640 --> 00:28:15,679
initial proposal for the current model

709
00:28:15,679 --> 00:28:17,679
and we have

710
00:28:17,679 --> 00:28:20,080
many open discussions in the mailing

711
00:28:20,080 --> 00:28:23,200
list in our previous meetings

712
00:28:23,200 --> 00:28:25,520
and

713
00:28:26,559 --> 00:28:28,640
the main goal for this work is we try to

714
00:28:28,640 --> 00:28:30,640
define the

715
00:28:30,640 --> 00:28:32,960
yandere model for the operation and the

716
00:28:32,960 --> 00:28:34,960
management purpose for the autofocus

717
00:28:34,960 --> 00:28:37,200
because this is the

718
00:28:37,200 --> 00:28:38,399
uh

719
00:28:38,399 --> 00:28:40,720
the blank part for the

720
00:28:40,720 --> 00:28:43,600
auto working group we already have some

721
00:28:43,600 --> 00:28:46,880
extensions for the realtor services but

722
00:28:46,880 --> 00:28:48,320
we don't have any

723
00:28:48,320 --> 00:28:50,480
uh standard for the operation and

724
00:28:50,480 --> 00:28:53,120
management purpose

725
00:28:53,120 --> 00:28:57,039
and the main reference we make this work

726
00:28:57,039 --> 00:29:00,640
based on the the rfc about the base

727
00:29:00,640 --> 00:29:02,559
protocols and

728
00:29:02,559 --> 00:29:04,799
the department considerations the latest

729
00:29:04,799 --> 00:29:07,120
version we already upload to the

730
00:29:07,120 --> 00:29:09,200
drivers but

731
00:29:09,200 --> 00:29:13,440
because we still have many discussion uh

732
00:29:13,440 --> 00:29:15,440
online so

733
00:29:15,440 --> 00:29:17,279
we have some quick iterations on the

734
00:29:17,279 --> 00:29:19,279
github so if you want to check the

735
00:29:19,279 --> 00:29:22,159
latest version you can go to github to

736
00:29:22,159 --> 00:29:25,120
check the latest one

737
00:29:25,279 --> 00:29:27,279
and

738
00:29:27,279 --> 00:29:28,640
this table will give the base

739
00:29:28,640 --> 00:29:32,320
requirements we summarize from the

740
00:29:32,320 --> 00:29:34,399
the base program rfc

741
00:29:34,399 --> 00:29:37,039
uh so we think uh

742
00:29:37,039 --> 00:29:39,360
this this summarize the

743
00:29:39,360 --> 00:29:41,600
outer page requirements

744
00:29:41,600 --> 00:29:42,799
like uh

745
00:29:42,799 --> 00:29:44,960
in this work we're trying to support the

746
00:29:44,960 --> 00:29:46,480
configuration for the

747
00:29:46,480 --> 00:29:48,559
auto server setup

748
00:29:48,559 --> 00:29:50,799
we define the management information

749
00:29:50,799 --> 00:29:52,240
base

750
00:29:52,240 --> 00:29:53,840
just for the communication for the data

751
00:29:53,840 --> 00:29:54,430
cells the

752
00:29:54,430 --> 00:29:55,840
[Music]

753
00:29:55,840 --> 00:29:57,279
information resource generation

754
00:29:57,279 --> 00:29:58,240
algorithm

755
00:29:58,240 --> 00:30:00,000
and the access control at the

756
00:30:00,000 --> 00:30:01,760
information resource level

757
00:30:01,760 --> 00:30:03,600
performance monitoring

758
00:30:03,600 --> 00:30:05,200
and

759
00:30:05,200 --> 00:30:07,039
some conversation for the security

760
00:30:07,039 --> 00:30:10,720
policy management

761
00:30:13,760 --> 00:30:16,720
but before we go into some details uh i

762
00:30:16,720 --> 00:30:18,799
want to make sure uh

763
00:30:18,799 --> 00:30:22,000
so i'll make clear what is the scope in

764
00:30:22,000 --> 00:30:22,960
uh

765
00:30:22,960 --> 00:30:25,919
about this work so

766
00:30:25,919 --> 00:30:27,279
i think uh

767
00:30:27,279 --> 00:30:29,760
in the scope of this document

768
00:30:29,760 --> 00:30:32,880
we should suppose we should define

769
00:30:32,880 --> 00:30:33,679
uh

770
00:30:33,679 --> 00:30:37,279
audit data model for the the auto server

771
00:30:37,279 --> 00:30:39,919
of the client operation and management

772
00:30:39,919 --> 00:30:42,960
it depends some data model for

773
00:30:42,960 --> 00:30:44,559
the functionality of

774
00:30:44,559 --> 00:30:46,320
capability configuration for the

775
00:30:46,320 --> 00:30:48,240
different auto services

776
00:30:48,240 --> 00:30:49,760
we also need to define the performance

777
00:30:49,760 --> 00:30:52,960
monitoring for the operation purpose but

778
00:30:52,960 --> 00:30:55,600
but it's not in the scope i also want to

779
00:30:55,600 --> 00:30:57,039
make it clear

780
00:30:57,039 --> 00:30:57,760
so

781
00:30:57,760 --> 00:31:00,000
in this work we're not trying to define

782
00:31:00,000 --> 00:31:02,640
any data models related to

783
00:31:02,640 --> 00:31:05,039
any specific implementation so for

784
00:31:05,039 --> 00:31:07,679
example a try not not trying to

785
00:31:07,679 --> 00:31:10,399
give any specific data factor

786
00:31:10,399 --> 00:31:11,360
uh

787
00:31:11,360 --> 00:31:14,159
about how to store or how to deliver any

788
00:31:14,159 --> 00:31:16,480
auto information resources like the

789
00:31:16,480 --> 00:31:18,320
network map because micro probably might

790
00:31:18,320 --> 00:31:20,960
find some other

791
00:31:20,960 --> 00:31:22,320
information resources to find the

792
00:31:22,320 --> 00:31:24,879
extensions

793
00:31:25,120 --> 00:31:27,039
also we're not trying to

794
00:31:27,039 --> 00:31:28,480
give any

795
00:31:28,480 --> 00:31:30,720
data model to define a specific

796
00:31:30,720 --> 00:31:33,120
algorithm

797
00:31:33,120 --> 00:31:34,640
about how to generate the auto

798
00:31:34,640 --> 00:31:37,519
information resolution

799
00:31:37,919 --> 00:31:39,679
also we are not trying to

800
00:31:39,679 --> 00:31:41,360
define any

801
00:31:41,360 --> 00:31:43,679
specific data structures about how to

802
00:31:43,679 --> 00:31:46,799
store the information class from the

803
00:31:46,799 --> 00:31:48,559
different data sources

804
00:31:48,559 --> 00:31:50,559
so i'm trying to make it clear this

805
00:31:50,559 --> 00:31:52,320
document

806
00:31:52,320 --> 00:31:55,279
at the beginning so

807
00:31:57,120 --> 00:31:59,279
now

808
00:31:59,679 --> 00:32:03,039
so based on the this based requirements

809
00:32:03,039 --> 00:32:04,480
uh

810
00:32:04,480 --> 00:32:06,640
make the objective in the document

811
00:32:06,640 --> 00:32:07,600
earlier

812
00:32:07,600 --> 00:32:08,960
uh

813
00:32:08,960 --> 00:32:11,360
so in this document we focus on the uh

814
00:32:11,360 --> 00:32:14,559
these four main objectives so we support

815
00:32:14,559 --> 00:32:16,080
the configuration for the auto server

816
00:32:16,080 --> 00:32:17,039
setup

817
00:32:17,039 --> 00:32:18,000
and

818
00:32:18,000 --> 00:32:21,919
provide the configurable data models for

819
00:32:22,320 --> 00:32:24,159
administrators to create update and

820
00:32:24,159 --> 00:32:27,840
remove the alt information resources

821
00:32:28,240 --> 00:32:29,679
for this part

822
00:32:29,679 --> 00:32:31,679
issues both the

823
00:32:31,679 --> 00:32:34,960
different types of digital sources

824
00:32:34,960 --> 00:32:36,960
it can allow the developers to argument

825
00:32:36,960 --> 00:32:40,720
the new apis we will not try to

826
00:32:40,720 --> 00:32:43,279
define any specific algorithm but we

827
00:32:43,279 --> 00:32:46,159
allow developed argument data model to

828
00:32:46,159 --> 00:32:48,799
start their own algorithm

829
00:32:48,799 --> 00:32:50,720
interface to

830
00:32:50,720 --> 00:32:53,519
generate the auto information cells

831
00:32:53,519 --> 00:32:55,120
and

832
00:32:55,120 --> 00:32:57,519
we also allow

833
00:32:57,519 --> 00:33:01,200
the the future new extensions

834
00:33:01,200 --> 00:33:03,679
uh kind extend this data model to

835
00:33:03,679 --> 00:33:05,840
support the new information resources in

836
00:33:05,840 --> 00:33:07,039
future

837
00:33:07,039 --> 00:33:10,039
and

838
00:33:10,799 --> 00:33:13,919
so this data model also includes some

839
00:33:13,919 --> 00:33:15,919
statistic information

840
00:33:15,919 --> 00:33:18,399
for the performance monitoring

841
00:33:18,399 --> 00:33:22,479
and the security policy part

842
00:33:23,519 --> 00:33:25,679
but uh the current version of this

843
00:33:25,679 --> 00:33:29,360
document only we only have the

844
00:33:29,360 --> 00:33:31,760
this our current progress we only focus

845
00:33:31,760 --> 00:33:33,039
on the

846
00:33:33,039 --> 00:33:35,760
the second and the third part of this

847
00:33:35,760 --> 00:33:38,960
article list

848
00:33:38,960 --> 00:33:42,000
so our current initial proposal focus on

849
00:33:42,000 --> 00:33:44,559
this toolbar

850
00:33:48,640 --> 00:33:49,519
so

851
00:33:49,519 --> 00:33:51,279
this is the current

852
00:33:51,279 --> 00:33:53,360
the initial proposal

853
00:33:53,360 --> 00:33:55,600
for

854
00:33:55,679 --> 00:33:58,320
how how the operator can use this data

855
00:33:58,320 --> 00:34:00,480
model to create an

856
00:34:00,480 --> 00:34:02,240
information result

857
00:34:02,240 --> 00:34:03,120
and

858
00:34:03,120 --> 00:34:06,678
the operator can

859
00:34:11,119 --> 00:34:11,760
model to

860
00:34:11,760 --> 00:34:14,159
[Music]

861
00:34:14,159 --> 00:34:17,119
specify a new uh information auto

862
00:34:17,119 --> 00:34:18,800
information results

863
00:34:18,800 --> 00:34:19,599
like

864
00:34:19,599 --> 00:34:21,199
it can

865
00:34:21,199 --> 00:34:24,480
define a new auto information results by

866
00:34:24,480 --> 00:34:26,719
specifying some common parameters like

867
00:34:26,719 --> 00:34:28,800
what's the resource id so let's type out

868
00:34:28,800 --> 00:34:31,280
this the ultimate information resource

869
00:34:31,280 --> 00:34:33,280
some

870
00:34:33,280 --> 00:34:35,918
based exact same code

871
00:34:35,918 --> 00:34:37,679
the dependency

872
00:34:37,679 --> 00:34:40,320
about this uh

873
00:34:40,320 --> 00:34:42,000
information results and some other

874
00:34:42,000 --> 00:34:44,320
informa also information results like

875
00:34:44,320 --> 00:34:47,599
the cosmetic dependency depend on

876
00:34:47,599 --> 00:34:49,599
another network map

877
00:34:49,599 --> 00:34:51,520
and also for the

878
00:34:51,520 --> 00:34:54,320
specific information source

879
00:34:54,320 --> 00:34:56,159
it can specify some resource-specific

880
00:34:56,159 --> 00:34:59,440
parameters and the main part is that

881
00:34:59,440 --> 00:35:02,000
you should specify

882
00:35:02,000 --> 00:35:04,720
some kind of creation algorithm and this

883
00:35:04,720 --> 00:35:06,480
creation movement

884
00:35:06,480 --> 00:35:08,160
is

885
00:35:08,160 --> 00:35:09,440
provided by

886
00:35:09,440 --> 00:35:11,280
some other developers it can augment

887
00:35:11,280 --> 00:35:12,720
this model

888
00:35:12,720 --> 00:35:17,599
like uh let's give an example like

889
00:35:17,599 --> 00:35:18,370
we use the

890
00:35:18,370 --> 00:35:19,599
[Music]

891
00:35:19,599 --> 00:35:23,440
layer 3 unicast class algorithm to

892
00:35:23,440 --> 00:35:26,000
generate

893
00:35:27,200 --> 00:35:30,560
a network map from some other

894
00:35:30,560 --> 00:35:33,359
data sources

895
00:35:34,160 --> 00:35:36,399
okay

896
00:35:38,320 --> 00:35:39,839
and

897
00:35:39,839 --> 00:35:42,000
the operator can import some different

898
00:35:42,000 --> 00:35:43,599
kinds of data sources

899
00:35:43,599 --> 00:35:44,400
from

900
00:35:44,400 --> 00:35:45,920
different particles

901
00:35:45,920 --> 00:35:48,720
the pgprs the authorized

902
00:35:48,720 --> 00:35:51,599
data the pce data and some other network

903
00:35:51,599 --> 00:35:52,960
management

904
00:35:52,960 --> 00:35:54,400
data

905
00:35:54,400 --> 00:35:57,119
and for the data source import

906
00:35:57,119 --> 00:36:01,119
uh the the operator can specify

907
00:36:01,119 --> 00:36:02,960
what's more to

908
00:36:02,960 --> 00:36:05,119
retrieve the data

909
00:36:05,119 --> 00:36:06,560
you can use the

910
00:36:06,560 --> 00:36:07,839
reactive

911
00:36:07,839 --> 00:36:10,000
approach like you can use some types of

912
00:36:10,000 --> 00:36:12,640
mechanism i will just use the

913
00:36:12,640 --> 00:36:14,400
proactive

914
00:36:14,400 --> 00:36:17,520
pulling mode to

915
00:36:17,599 --> 00:36:22,720
press practically to get the data and

916
00:36:23,200 --> 00:36:25,440
for the different

917
00:36:25,440 --> 00:36:28,240
there is a purpose that could

918
00:36:28,240 --> 00:36:30,079
uh

919
00:36:30,079 --> 00:36:31,839
if it's a uh

920
00:36:31,839 --> 00:36:34,240
date from the enterprise can use it

921
00:36:34,240 --> 00:36:36,880
maybe get from the young

922
00:36:36,880 --> 00:36:40,240
store and now it is a network management

923
00:36:40,240 --> 00:36:41,920
uh

924
00:36:41,920 --> 00:36:44,800
information it can data from the

925
00:36:44,800 --> 00:36:47,359
some other

926
00:36:47,359 --> 00:36:49,040
network management system like the

927
00:36:49,040 --> 00:36:52,240
promises and some other

928
00:36:52,240 --> 00:36:55,240
devices

929
00:36:59,040 --> 00:37:00,000
so

930
00:37:00,000 --> 00:37:02,560
for the algorithm uh we have some

931
00:37:02,560 --> 00:37:05,440
examples proposed by the different other

932
00:37:05,440 --> 00:37:06,960
individual

933
00:37:06,960 --> 00:37:08,640
stuff like

934
00:37:08,640 --> 00:37:10,240
so this one

935
00:37:10,240 --> 00:37:12,160
gives an example how to translate the

936
00:37:12,160 --> 00:37:16,078
advice server to the network map

937
00:37:16,160 --> 00:37:18,399
and

938
00:37:19,280 --> 00:37:20,880
i also have some

939
00:37:20,880 --> 00:37:23,680
use cases i could

940
00:37:23,680 --> 00:37:26,319
can translate

941
00:37:27,520 --> 00:37:28,960
some some

942
00:37:28,960 --> 00:37:33,280
data from the experiment to the smp

943
00:37:33,280 --> 00:37:35,680
devices to the

944
00:37:35,680 --> 00:37:38,240
property map

945
00:37:38,240 --> 00:37:40,799
and also

946
00:37:41,760 --> 00:37:44,640
we have have an example to translate the

947
00:37:44,640 --> 00:37:48,640
pcbrs information to

948
00:37:48,640 --> 00:37:51,839
the map and cosmetics create the

949
00:37:51,839 --> 00:37:55,839
reality auto information resources

950
00:37:58,000 --> 00:38:00,000
and for the statistic

951
00:38:00,000 --> 00:38:02,560
information

952
00:38:03,280 --> 00:38:04,800
in the

953
00:38:04,800 --> 00:38:08,640
deployment consideration uh i've said

954
00:38:08,640 --> 00:38:10,880
it suggests some it already suggests

955
00:38:10,880 --> 00:38:13,200
some memory information

956
00:38:13,200 --> 00:38:14,720
should be

957
00:38:14,720 --> 00:38:18,240
spoiled by the author cover like a

958
00:38:18,240 --> 00:38:20,160
it should support some application

959
00:38:20,160 --> 00:38:22,400
performance information and some system

960
00:38:22,400 --> 00:38:24,480
and service performance like the request

961
00:38:24,480 --> 00:38:26,640
response

962
00:38:26,640 --> 00:38:29,760
for each information resources and cpu

963
00:38:29,760 --> 00:38:31,760
memory addition

964
00:38:31,760 --> 00:38:34,079
they also map update the number of pds

965
00:38:34,079 --> 00:38:35,599
and some other

966
00:38:35,599 --> 00:38:38,400
like the automatic sizes but

967
00:38:38,400 --> 00:38:41,359
we also have some auto extension

968
00:38:41,359 --> 00:38:43,119
like the

969
00:38:43,119 --> 00:38:44,560
the coscanda

970
00:38:44,560 --> 00:38:46,400
the sse

971
00:38:46,400 --> 00:38:47,680
the

972
00:38:47,680 --> 00:38:50,400
unified properties

973
00:38:50,400 --> 00:38:53,599
so they all have the different

974
00:38:54,400 --> 00:38:56,480
membrane information

975
00:38:56,480 --> 00:38:57,920
also be useful

976
00:38:57,920 --> 00:39:01,440
to be collected by the auto server

977
00:39:01,440 --> 00:39:04,079
so this data model will cover of this

978
00:39:04,079 --> 00:39:06,560
information

979
00:39:11,119 --> 00:39:13,280
but

980
00:39:13,280 --> 00:39:15,839
uh where we still have some uh as a

981
00:39:15,839 --> 00:39:18,640
missing part uh not covered by the

982
00:39:18,640 --> 00:39:20,240
current model

983
00:39:20,240 --> 00:39:21,280
uh

984
00:39:21,280 --> 00:39:23,040
they will be considered in the future

985
00:39:23,040 --> 00:39:26,560
versions like the how to configure the

986
00:39:26,560 --> 00:39:28,240
the server libraries

987
00:39:28,240 --> 00:39:30,400
and how to support small uh

988
00:39:30,400 --> 00:39:33,119
the data source recruitment mechanism

989
00:39:33,119 --> 00:39:34,960
and some uh partial communication

990
00:39:34,960 --> 00:39:36,960
support

991
00:39:36,960 --> 00:39:39,119
and more options for the integrated

992
00:39:39,119 --> 00:39:41,599
policies also have some discussion on

993
00:39:41,599 --> 00:39:43,200
this verb

994
00:39:43,200 --> 00:39:45,119
and

995
00:39:45,119 --> 00:39:47,520
the data model for

996
00:39:47,520 --> 00:39:50,480
lifecycle management

997
00:39:52,000 --> 00:39:53,920
and following uh

998
00:39:53,920 --> 00:39:55,520
the first steps

999
00:39:55,520 --> 00:39:59,280
try to summarize some main uh

1000
00:39:59,839 --> 00:40:03,440
items uh the generates from the

1001
00:40:03,440 --> 00:40:06,079
the online automation is discussions

1002
00:40:06,079 --> 00:40:09,680
like uh the secretary proposed some

1003
00:40:09,680 --> 00:40:12,480
comments like does this document provide

1004
00:40:12,480 --> 00:40:14,880
any generic network models like the

1005
00:40:14,880 --> 00:40:16,400
dysonic

1006
00:40:16,400 --> 00:40:21,040
ici as well from google papers

1007
00:40:21,040 --> 00:40:23,520
we're trying to

1008
00:40:23,520 --> 00:40:25,760
actually the generate network model is

1009
00:40:25,760 --> 00:40:29,680
not in this gobot document but

1010
00:40:29,760 --> 00:40:31,359
we did try to

1011
00:40:31,359 --> 00:40:32,240
uh

1012
00:40:32,240 --> 00:40:34,400
define some common interfaces to connect

1013
00:40:34,400 --> 00:40:36,839
the auto information results to

1014
00:40:36,839 --> 00:40:39,680
other uh ultimate results and the

1015
00:40:39,680 --> 00:40:42,079
related data source so that we think

1016
00:40:42,079 --> 00:40:45,440
this can be useful for this document

1017
00:40:45,440 --> 00:40:47,119
and also

1018
00:40:47,119 --> 00:40:49,280
to

1019
00:40:49,280 --> 00:40:54,240
try to try to understand so how to

1020
00:40:54,960 --> 00:40:56,960
understand the head-based interface for

1021
00:40:56,960 --> 00:41:00,160
the information resource creation

1022
00:41:00,160 --> 00:41:03,040
so it's not make the decision uh

1023
00:41:03,040 --> 00:41:05,760
we use the internet based

1024
00:41:05,760 --> 00:41:07,839
in the security interface should be

1025
00:41:07,839 --> 00:41:10,160
intent based but

1026
00:41:10,160 --> 00:41:11,440
in this document

1027
00:41:11,440 --> 00:41:12,490
we try to make the

1028
00:41:12,490 --> 00:41:13,839
[Music]

1029
00:41:13,839 --> 00:41:14,720
in

1030
00:41:14,720 --> 00:41:16,400
this creation

1031
00:41:16,400 --> 00:41:17,920
interface be

1032
00:41:17,920 --> 00:41:19,359
reactive like

1033
00:41:19,359 --> 00:41:21,760
if the operator configures connection

1034
00:41:21,760 --> 00:41:24,400
between the information

1035
00:41:24,400 --> 00:41:25,599
resource

1036
00:41:25,599 --> 00:41:26,720
and uh

1037
00:41:26,720 --> 00:41:31,119
some data sources it's a tesla change

1038
00:41:31,119 --> 00:41:32,960
that means the

1039
00:41:32,960 --> 00:41:34,800
the created information results should

1040
00:41:34,800 --> 00:41:37,680
should be a mathematical aptitude

1041
00:41:37,680 --> 00:41:40,240
and also

1042
00:41:40,720 --> 00:41:42,960
because in the early version we separate

1043
00:41:42,960 --> 00:41:45,839
the data cells import to the

1044
00:41:45,839 --> 00:41:50,400
internal data cells and eternity cells

1045
00:41:51,680 --> 00:41:53,359
but in the latest version we remove this

1046
00:41:53,359 --> 00:41:54,400
part

1047
00:41:54,400 --> 00:41:56,640
we think we think they

1048
00:41:56,640 --> 00:41:59,279
we don't need to

1049
00:41:59,680 --> 00:42:01,680
differentiate the different types of the

1050
00:42:01,680 --> 00:42:03,680
resources we allow the developers to

1051
00:42:03,680 --> 00:42:05,760
argument the community model

1052
00:42:05,760 --> 00:42:07,599
for the testosterone

1053
00:42:07,599 --> 00:42:09,280
how to connect to the different specific

1054
00:42:09,280 --> 00:42:11,280
data source

1055
00:42:11,280 --> 00:42:13,200
also is we think this is the important

1056
00:42:13,200 --> 00:42:16,000
part

1057
00:42:16,000 --> 00:42:17,200
so

1058
00:42:17,200 --> 00:42:20,799
this is still i'm going to work

1059
00:42:20,960 --> 00:42:22,880
i also sent some

1060
00:42:22,880 --> 00:42:26,480
many english classes with uh

1061
00:42:26,480 --> 00:42:28,000
like

1062
00:42:28,000 --> 00:42:30,000
how to support the server discoveries

1063
00:42:30,000 --> 00:42:31,520
and

1064
00:42:31,520 --> 00:42:33,599
uh how to support the

1065
00:42:33,599 --> 00:42:35,119
livestream management and the

1066
00:42:35,119 --> 00:42:36,880
performance

1067
00:42:36,880 --> 00:42:39,119
ring

1068
00:42:40,960 --> 00:42:42,880
and how to integrate the

1069
00:42:42,880 --> 00:42:45,440
demon conduct data sources

1070
00:42:45,440 --> 00:42:46,880
this part

1071
00:42:46,880 --> 00:42:49,920
well i also have some

1072
00:42:49,920 --> 00:42:53,119
discussions in the mailing list

1073
00:42:53,920 --> 00:42:55,839
and finally

1074
00:42:55,839 --> 00:42:57,599
internally also have some discussions

1075
00:42:57,599 --> 00:42:59,839
about

1076
00:43:00,880 --> 00:43:03,119
how to

1077
00:43:03,119 --> 00:43:05,440
define the gene model for the

1078
00:43:05,440 --> 00:43:06,960
auto clients on the side because the

1079
00:43:06,960 --> 00:43:09,119
current the model only focuses on the

1080
00:43:09,119 --> 00:43:10,560
auto servers but

1081
00:43:10,560 --> 00:43:12,640
actually in the scope of auto client

1082
00:43:12,640 --> 00:43:15,119
conversions also in the

1083
00:43:15,119 --> 00:43:17,440
governance document

1084
00:43:17,440 --> 00:43:18,030
but

1085
00:43:18,030 --> 00:43:19,119
[Music]

1086
00:43:19,119 --> 00:43:21,680
in clarify

1087
00:43:21,680 --> 00:43:24,480
actually use cases who will use this

1088
00:43:24,480 --> 00:43:26,000
data model to categorize the auto

1089
00:43:26,000 --> 00:43:27,440
clients not uh

1090
00:43:27,440 --> 00:43:30,000
it's not useful for all the auto clients

1091
00:43:30,000 --> 00:43:32,160
but for some specific use cases like the

1092
00:43:32,160 --> 00:43:34,560
network application integration cases of

1093
00:43:34,560 --> 00:43:36,800
the multi-domain case

1094
00:43:36,800 --> 00:43:39,280
they may be useful

1095
00:43:39,280 --> 00:43:40,400
and

1096
00:43:40,400 --> 00:43:43,440
also for the security part and the

1097
00:43:43,440 --> 00:43:44,640
the

1098
00:43:44,640 --> 00:43:47,040
performance modern version

1099
00:43:47,040 --> 00:43:48,560
uh

1100
00:43:48,560 --> 00:43:50,079
you know and also give some comments

1101
00:43:50,079 --> 00:43:51,599
about

1102
00:43:51,599 --> 00:43:55,839
how to refine this currently this model

1103
00:43:57,359 --> 00:43:58,880
without thankful

1104
00:43:58,880 --> 00:44:00,960
the feedback from the

1105
00:44:00,960 --> 00:44:04,319
unlimitings and the mainly list

1106
00:44:04,319 --> 00:44:07,200
and if you have any

1107
00:44:07,200 --> 00:44:09,839
other feedback

1108
00:44:10,240 --> 00:44:12,480
let's welcome to email to the working

1109
00:44:12,480 --> 00:44:14,720
group and see there are others

1110
00:44:14,720 --> 00:44:16,480
and also you can you can open the issues

1111
00:44:16,480 --> 00:44:20,079
in the github lcd time to

1112
00:44:20,960 --> 00:44:22,640
reply to you

1113
00:44:22,640 --> 00:44:24,879
so

1114
00:44:26,319 --> 00:44:27,119
yeah

1115
00:44:27,119 --> 00:44:29,359
we're looking forward to reaching

1116
00:44:29,359 --> 00:44:31,839
out your feedback

1117
00:44:31,839 --> 00:44:34,240
okay thank you jason

1118
00:44:34,240 --> 00:44:37,040
and so thank you for chemist welcome

1119
00:44:37,040 --> 00:44:38,400
actually a good summary for the

1120
00:44:38,400 --> 00:44:40,240
discussion on the list and

1121
00:44:40,240 --> 00:44:41,440
offline

1122
00:44:41,440 --> 00:44:43,280
so i think uh

1123
00:44:43,280 --> 00:44:44,160
so

1124
00:44:44,160 --> 00:44:45,760
i think this work is very important

1125
00:44:45,760 --> 00:44:47,680
worker in the charter so which is the

1126
00:44:47,680 --> 00:44:48,640
missing

1127
00:44:48,640 --> 00:44:51,040
part in auto deployment rfc

1128
00:44:51,040 --> 00:44:53,760
so therefore this worker i think should

1129
00:44:53,760 --> 00:44:56,480
closely align with auto deployment rfc

1130
00:44:56,480 --> 00:44:59,920
and also other protocol worker so first

1131
00:44:59,920 --> 00:45:02,240
step for this work i i think we need

1132
00:45:02,240 --> 00:45:04,640
maker we need to make it clear what is

1133
00:45:04,640 --> 00:45:07,119
in the scope what is our scope

1134
00:45:07,119 --> 00:45:08,000
so

1135
00:45:08,000 --> 00:45:09,119
uh

1136
00:45:09,119 --> 00:45:11,599
so i think that there's three most

1137
00:45:11,599 --> 00:45:14,079
important part one is information source

1138
00:45:14,079 --> 00:45:16,400
management second is data connection

1139
00:45:16,400 --> 00:45:18,880
data source as served as infrastructure

1140
00:45:18,880 --> 00:45:21,359
monitoring so you already touch this but

1141
00:45:21,359 --> 00:45:23,680
i think this need to be

1142
00:45:23,680 --> 00:45:26,000
further cooked

1143
00:45:26,000 --> 00:45:28,880
so with this any other comments from

1144
00:45:28,880 --> 00:45:31,880
audience

1145
00:45:34,560 --> 00:45:37,839
richard go ahead

1146
00:45:40,240 --> 00:45:43,839
um martin first i'll hide first

1147
00:45:43,920 --> 00:45:45,440
i think

1148
00:45:45,440 --> 00:45:47,280
yeah you can be first

1149
00:45:47,280 --> 00:45:49,200
okay yeah just let me make sure follow

1150
00:45:49,200 --> 00:45:52,000
the cue very quick question uh one

1151
00:45:52,000 --> 00:45:54,400
complexity of uh outer server

1152
00:45:54,400 --> 00:45:56,720
configuration is the algorithm to

1153
00:45:56,720 --> 00:45:59,200
compute the network maps because that's

1154
00:45:59,200 --> 00:46:02,160
oftentimes a foundational service so

1155
00:46:02,160 --> 00:46:03,839
but oftentimes that will be very

1156
00:46:03,839 --> 00:46:05,280
algorithmic

1157
00:46:05,280 --> 00:46:07,200
not like declared using for example like

1158
00:46:07,200 --> 00:46:09,760
a young model so what's a long-term

1159
00:46:09,760 --> 00:46:11,040
solution for this one you want to

1160
00:46:11,040 --> 00:46:15,839
address in this effort om effort

1161
00:46:17,760 --> 00:46:20,079
some some can be declared for example

1162
00:46:20,079 --> 00:46:23,280
declare any network node is for example

1163
00:46:23,280 --> 00:46:26,079
every autonomous system is one or every

1164
00:46:26,079 --> 00:46:28,400
federation or for example if you model a

1165
00:46:28,400 --> 00:46:29,520
data center which is one thing i'm

1166
00:46:29,520 --> 00:46:30,560
considering

1167
00:46:30,560 --> 00:46:31,920
then that

1168
00:46:31,920 --> 00:46:33,760
potential can be

1169
00:46:33,760 --> 00:46:35,680
declarative but overall most will be

1170
00:46:35,680 --> 00:46:38,000
algorithmic so how

1171
00:46:38,000 --> 00:46:41,119
how do you plan to address this

1172
00:46:41,119 --> 00:46:43,359
uh i'm sure i

1173
00:46:43,359 --> 00:46:45,280
understand question credit

1174
00:46:45,280 --> 00:46:46,800
so but

1175
00:46:46,800 --> 00:46:49,200
we're not trying to yeah let me switch

1176
00:46:49,200 --> 00:46:51,200
to the

1177
00:46:51,200 --> 00:46:55,720
the page maybe page four

1178
00:46:57,359 --> 00:46:58,560
uh

1179
00:46:58,560 --> 00:47:00,319
so i'm i'm not sure if you are talking

1180
00:47:00,319 --> 00:47:01,440
about uh

1181
00:47:01,440 --> 00:47:03,920
so how to organize the

1182
00:47:03,920 --> 00:47:06,000
data to present the auto information

1183
00:47:06,000 --> 00:47:08,319
results because because uh

1184
00:47:08,319 --> 00:47:10,400
we only focus on how to

1185
00:47:10,400 --> 00:47:11,680
uh

1186
00:47:11,680 --> 00:47:13,359
give the interface to

1187
00:47:13,359 --> 00:47:16,240
create the transmission but

1188
00:47:16,240 --> 00:47:20,000
not how to store our delivery data

1189
00:47:20,000 --> 00:47:20,800
like

1190
00:47:20,800 --> 00:47:24,760
we mentioned the network map

1191
00:47:26,240 --> 00:47:28,400
i'm thinking of oh

1192
00:47:28,400 --> 00:47:31,440
you collect data but you need to specify

1193
00:47:31,440 --> 00:47:33,040
a way if you're doing a management and

1194
00:47:33,040 --> 00:47:36,319
probably you want to specify how these

1195
00:47:36,319 --> 00:47:39,119
multiple types of auto network maps can

1196
00:47:39,119 --> 00:47:41,599
be constructed so somehow the

1197
00:47:41,599 --> 00:47:43,599
in some way should be specified in some

1198
00:47:43,599 --> 00:47:45,760
way to make a good manager at the same

1199
00:47:45,760 --> 00:47:48,079
time specification can be very common

1200
00:47:48,079 --> 00:47:50,319
okay

1201
00:47:51,520 --> 00:47:53,440
yes you may maybe all right uh

1202
00:47:53,440 --> 00:47:55,680
[Music]

1203
00:47:55,680 --> 00:47:57,520
this part uh this is the missing part in

1204
00:47:57,520 --> 00:48:00,000
the current model but uh i'm not sure if

1205
00:48:00,000 --> 00:48:03,040
the data model should cover this part uh

1206
00:48:03,040 --> 00:48:04,400
because i think

1207
00:48:04,400 --> 00:48:07,200
it's more like the implantation

1208
00:48:07,200 --> 00:48:09,119
specific

1209
00:48:09,119 --> 00:48:11,440
like the yeah the oem system should

1210
00:48:11,440 --> 00:48:14,400
consider how to implant the

1211
00:48:14,400 --> 00:48:16,319
the data management if you collect the

1212
00:48:16,319 --> 00:48:19,280
data from data sources how to

1213
00:48:19,280 --> 00:48:21,760
store it and how to query

1214
00:48:21,760 --> 00:48:24,640
and translate to the

1215
00:48:24,640 --> 00:48:25,680
so

1216
00:48:25,680 --> 00:48:29,040
i suggest to take it to the list yeah so

1217
00:48:29,040 --> 00:48:30,480
martin

1218
00:48:30,480 --> 00:48:32,319
yeah just very briefly on the alto

1219
00:48:32,319 --> 00:48:34,160
client thing uh look i'm not an alter

1220
00:48:34,160 --> 00:48:35,680
protection practitioner so i don't have

1221
00:48:35,680 --> 00:48:37,760
the answers but um

1222
00:48:37,760 --> 00:48:40,079
uh i i just i just think that certainly

1223
00:48:40,079 --> 00:48:42,720
that's a good separation point and uh

1224
00:48:42,720 --> 00:48:43,680
you should really think i don't know

1225
00:48:43,680 --> 00:48:46,160
whether there's an actual use case uh

1226
00:48:46,160 --> 00:48:47,599
particularly when you're talking about

1227
00:48:47,599 --> 00:48:49,440
you know inter-domain stuff that isn't

1228
00:48:49,440 --> 00:48:51,599
even specked um

1229
00:48:51,599 --> 00:48:53,520
my my instinct is that that is that is

1230
00:48:53,520 --> 00:48:54,720
maybe not something worth putting the

1231
00:48:54,720 --> 00:48:56,000
effort into

1232
00:48:56,000 --> 00:48:58,319
thanks

1233
00:48:58,800 --> 00:49:00,480
okay

1234
00:49:00,480 --> 00:49:02,400
thank you so let's move to the next

1235
00:49:02,400 --> 00:49:04,319
topic richard

1236
00:49:04,319 --> 00:49:06,400
so given the time limit actually i want

1237
00:49:06,400 --> 00:49:07,280
to

1238
00:49:07,280 --> 00:49:08,720
ask you maybe you can limit your

1239
00:49:08,720 --> 00:49:10,559
presentation to 10 minutes

1240
00:49:10,559 --> 00:49:12,319
sure i will so just make sure you have

1241
00:49:12,319 --> 00:49:15,520
my latest slides right

1242
00:49:17,680 --> 00:49:20,240
oh wonderful yes just i made some edits

1243
00:49:20,240 --> 00:49:22,000
i don't want to

1244
00:49:22,000 --> 00:49:23,599
can i start

1245
00:49:23,599 --> 00:49:25,040
yes okay

1246
00:49:25,040 --> 00:49:28,000
so i'll talk about auto transport uh

1247
00:49:28,000 --> 00:49:30,400
that's a charter item and uh

1248
00:49:30,400 --> 00:49:32,480
right now there's a small team of people

1249
00:49:32,480 --> 00:49:34,160
uh roland

1250
00:49:34,160 --> 00:49:36,880
and danny and the check so we're working

1251
00:49:36,880 --> 00:49:38,800
together we're discussing about auto

1252
00:49:38,800 --> 00:49:40,960
transport of course the long-term goal

1253
00:49:40,960 --> 00:49:44,640
is to provide some kind of one whatever

1254
00:49:44,640 --> 00:49:47,040
to address the working group uh the

1255
00:49:47,040 --> 00:49:48,880
charter item which is auto transporting

1256
00:49:48,880 --> 00:49:51,440
new protocols but overall we actually

1257
00:49:51,440 --> 00:49:53,839
take a slightly broader uh

1258
00:49:53,839 --> 00:49:56,800
from a fundamental uh approach to design

1259
00:49:56,800 --> 00:49:58,640
the auto transport of course this is

1260
00:49:58,640 --> 00:50:00,720
only one one smaller team right now

1261
00:50:00,720 --> 00:50:02,240
other people are giving all the feedback

1262
00:50:02,240 --> 00:50:04,160
but currently that's a really like kind

1263
00:50:04,160 --> 00:50:06,640
of result from this uh uh

1264
00:50:06,640 --> 00:50:11,640
for four person team next slides please

1265
00:50:13,280 --> 00:50:14,720
so the high-level goal of to really

1266
00:50:14,720 --> 00:50:16,319
address this

1267
00:50:16,319 --> 00:50:18,559
working group charter item we decided to

1268
00:50:18,559 --> 00:50:20,240
actually do a slightly more systematic

1269
00:50:20,240 --> 00:50:22,000
approach we're not designing anything

1270
00:50:22,000 --> 00:50:23,440
new because before we really design

1271
00:50:23,440 --> 00:50:25,359
anything new we decided we should have

1272
00:50:25,359 --> 00:50:27,359
systematic approach of course long-term

1273
00:50:27,359 --> 00:50:29,280
goal or the the ultimate goal for

1274
00:50:29,280 --> 00:50:30,880
example by next year is really try to

1275
00:50:30,880 --> 00:50:32,720
push for the deployment not really

1276
00:50:32,720 --> 00:50:34,319
design something super fancy so we

1277
00:50:34,319 --> 00:50:36,000
should address real issues

1278
00:50:36,000 --> 00:50:39,119
therefore the auto transport uh conflict

1279
00:50:39,119 --> 00:50:40,720
we focus on

1280
00:50:40,720 --> 00:50:43,760
lately focus on the following four items

1281
00:50:43,760 --> 00:50:45,520
number one actually is analyze

1282
00:50:45,520 --> 00:50:47,200
systematic analyzer of the transport

1283
00:50:47,200 --> 00:50:48,960
workload if you want to talk about

1284
00:50:48,960 --> 00:50:50,640
transport you really understand what

1285
00:50:50,640 --> 00:50:52,480
services and what the requirements of

1286
00:50:52,480 --> 00:50:54,319
services we're dealing with before we

1287
00:50:54,319 --> 00:50:57,839
talk about we design a hb2 or h3

1288
00:50:57,839 --> 00:50:59,680
and then after we have the workload and

1289
00:50:59,680 --> 00:51:01,520
then we want to really very quickly

1290
00:51:01,520 --> 00:51:03,359
start to really set up the environment

1291
00:51:03,359 --> 00:51:05,040
and to evaluate the performance and

1292
00:51:05,040 --> 00:51:07,520
effectiveness of current auto transport

1293
00:51:07,520 --> 00:51:09,440
input on the biggest particle using http

1294
00:51:09,440 --> 00:51:13,520
1.1 one point x and then also rfc 8895

1295
00:51:13,520 --> 00:51:15,520
and auto sse therefore they want to

1296
00:51:15,520 --> 00:51:17,200
develop we want to benchmarking

1297
00:51:17,200 --> 00:51:19,680
understand where exactly the weak points

1298
00:51:19,680 --> 00:51:21,359
really are

1299
00:51:21,359 --> 00:51:23,520
and then we also get started to talk

1300
00:51:23,520 --> 00:51:26,160
about the design and benefits versus no

1301
00:51:26,160 --> 00:51:27,920
benefits of integrating the new

1302
00:51:27,920 --> 00:51:30,880
transport for example gb2 off three into

1303
00:51:30,880 --> 00:51:32,480
the auto transport so therefore we're

1304
00:51:32,480 --> 00:51:34,559
getting started which will we have some

1305
00:51:34,559 --> 00:51:36,319
initial efforts but that's actually a

1306
00:51:36,319 --> 00:51:38,400
part of the effort as well and then

1307
00:51:38,400 --> 00:51:40,400
finally of course this one is absolutely

1308
00:51:40,400 --> 00:51:42,240
not in the charter but we also think i

1309
00:51:42,240 --> 00:51:43,599
thought it'd be quite interesting that

1310
00:51:43,599 --> 00:51:45,599
when we are designing the new transport

1311
00:51:45,599 --> 00:51:48,160
using http 203 and also take a look at

1312
00:51:48,160 --> 00:51:48,880
the

1313
00:51:48,880 --> 00:51:50,640
transport or genetic transport of

1314
00:51:50,640 --> 00:51:51,599
network

1315
00:51:51,599 --> 00:51:53,440
information to application transport so

1316
00:51:53,440 --> 00:51:55,839
what exactly other transport are doing

1317
00:51:55,839 --> 00:51:57,599
so therefore make sure our design would

1318
00:51:57,599 --> 00:51:59,280
fit into the bigger picture or at least

1319
00:51:59,280 --> 00:52:01,040
be comparable and then we can use other

1320
00:52:01,040 --> 00:52:02,880
people design as well so therefore those

1321
00:52:02,880 --> 00:52:04,960
are for for high level goals we're

1322
00:52:04,960 --> 00:52:06,720
working on and now let me go to the

1323
00:52:06,720 --> 00:52:09,680
details for every single one of them

1324
00:52:09,680 --> 00:52:12,400
so this is the first line of work which

1325
00:52:12,400 --> 00:52:15,200
we did and lately i think after the

1326
00:52:15,200 --> 00:52:17,920
charter is approved so basically what we

1327
00:52:17,920 --> 00:52:20,720
did was uh we had this uh of course

1328
00:52:20,720 --> 00:52:22,319
there's a much longer version but here

1329
00:52:22,319 --> 00:52:23,680
is we don't want to make the slides to

1330
00:52:23,680 --> 00:52:25,200
be too busy to read

1331
00:52:25,200 --> 00:52:28,160
here we have we did a work of listing

1332
00:52:28,160 --> 00:52:30,640
all the major auto services for example

1333
00:52:30,640 --> 00:52:32,880
if you look at the live column the app

1334
00:52:32,880 --> 00:52:35,040
and the most column that's a list of all

1335
00:52:35,040 --> 00:52:38,000
the major auto services which we think

1336
00:52:38,000 --> 00:52:40,240
we are dealing with from beginning of

1337
00:52:40,240 --> 00:52:42,000
course you private information resource

1338
00:52:42,000 --> 00:52:44,000
directory and you have network map you

1339
00:52:44,000 --> 00:52:46,559
have a custom app and a future map

1340
00:52:46,559 --> 00:52:49,359
endpoint a property service and endpoint

1341
00:52:49,359 --> 00:52:51,760
cost service because calendar unified

1342
00:52:51,760 --> 00:52:53,760
properties perspective they're ongoing i

1343
00:52:53,760 --> 00:52:55,119
think they are

1344
00:52:55,119 --> 00:52:56,640
getting somehow

1345
00:52:56,640 --> 00:52:59,520
to any point and cdi capabilities and

1346
00:52:59,520 --> 00:53:01,520
footprints so those are the services the

1347
00:53:01,520 --> 00:53:03,760
second column gives us the design so

1348
00:53:03,760 --> 00:53:05,760
what kind of input we do and are they

1349
00:53:05,760 --> 00:53:08,400
really get service or post service and

1350
00:53:08,400 --> 00:53:12,000
if it is get a post uh service uh basis

1351
00:53:12,000 --> 00:53:14,079
design and what kind of input do we have

1352
00:53:14,079 --> 00:53:15,520
and what kind of output do we have so

1353
00:53:15,520 --> 00:53:17,599
what encoding it really is and so on so

1354
00:53:17,599 --> 00:53:20,079
therefore that is a second one we

1355
00:53:20,079 --> 00:53:21,040
analyze

1356
00:53:21,040 --> 00:53:22,720
and then we talk about cell phobia okay

1357
00:53:22,720 --> 00:53:24,400
what exactly is data structure because

1358
00:53:24,400 --> 00:53:26,640
oftentimes transport depends effectively

1359
00:53:26,640 --> 00:53:28,000
oftentimes depends heavily on the

1360
00:53:28,000 --> 00:53:30,559
dependency on the structure on a query

1361
00:53:30,559 --> 00:53:32,640
and so on so therefore because we

1362
00:53:32,640 --> 00:53:34,720
classified uh all these kind of

1363
00:53:34,720 --> 00:53:36,240
different services and what kind of

1364
00:53:36,240 --> 00:53:37,440
fundamental data structure you're using

1365
00:53:37,440 --> 00:53:38,720
for example

1366
00:53:38,720 --> 00:53:40,079
network map

1367
00:53:40,079 --> 00:53:41,599
well let's take a look at the cost map

1368
00:53:41,599 --> 00:53:44,880
the third third row it's a basic input

1369
00:53:44,880 --> 00:53:47,040
information structure and it's key by

1370
00:53:47,040 --> 00:53:48,319
the store fundamental but in an

1371
00:53:48,319 --> 00:53:50,319
increasingly that auto was designed and

1372
00:53:50,319 --> 00:53:51,839
based on the

1373
00:53:51,839 --> 00:53:54,319
historical design of rc7285

1374
00:53:54,319 --> 00:53:56,960
it is a three level of key value store

1375
00:53:56,960 --> 00:53:59,680
and you index from source network map to

1376
00:53:59,680 --> 00:54:02,079
the next to the destination and then

1377
00:54:02,079 --> 00:54:03,920
index into the values and this one will

1378
00:54:03,920 --> 00:54:05,280
be dependent on network maps so

1379
00:54:05,280 --> 00:54:07,760
therefore to be dependencies with other

1380
00:54:07,760 --> 00:54:09,280
information models so therefore how to

1381
00:54:09,280 --> 00:54:10,559
handle this

1382
00:54:10,559 --> 00:54:14,240
and then we analyze the scaling of the

1383
00:54:14,240 --> 00:54:15,520
uh

1384
00:54:15,520 --> 00:54:17,359
each information resources how much data

1385
00:54:17,359 --> 00:54:18,960
we're talking about for example here

1386
00:54:18,960 --> 00:54:20,480
let's look at the

1387
00:54:20,480 --> 00:54:21,839
even the simple one let's look at the

1388
00:54:21,839 --> 00:54:24,160
network map for example and we did some

1389
00:54:24,160 --> 00:54:26,240
analysis we said oh okay the size of

1390
00:54:26,240 --> 00:54:28,240
this one will be proportional to number

1391
00:54:28,240 --> 00:54:31,520
of cidr uh because that's where you

1392
00:54:31,520 --> 00:54:33,680
group a network and therefore we did

1393
00:54:33,680 --> 00:54:36,240
some initial analysis for example even

1394
00:54:36,240 --> 00:54:37,760
for a very simple one let's say for

1395
00:54:37,760 --> 00:54:39,119
example you want to model global

1396
00:54:39,119 --> 00:54:40,240
internet you want to really agree

1397
00:54:40,240 --> 00:54:42,319
everything together and if you don't do

1398
00:54:42,319 --> 00:54:44,640
for example aggregation and you want to

1399
00:54:44,640 --> 00:54:46,240
transport information then we're talking

1400
00:54:46,240 --> 00:54:47,640
about

1401
00:54:47,640 --> 00:54:50,480
866 that's actually which is

1402
00:54:50,480 --> 00:54:53,440
already 170 uh uh cidrs we're going to

1403
00:54:53,440 --> 00:54:55,839
transport for the global bgp prefixes so

1404
00:54:55,839 --> 00:54:56,960
therefore that's the size we're talking

1405
00:54:56,960 --> 00:55:01,280
about and about like a 900k or 800k of

1406
00:55:01,280 --> 00:55:03,280
addresses so it'll be huge if we want to

1407
00:55:03,280 --> 00:55:05,200
really address it in that way then we

1408
00:55:05,200 --> 00:55:08,480
analyze the transport and

1409
00:55:08,559 --> 00:55:10,480
oh for me yeah i i actually i don't have

1410
00:55:10,480 --> 00:55:12,240
a lot of slides so next one we talk

1411
00:55:12,240 --> 00:55:13,599
about what okay and what kind of

1412
00:55:13,599 --> 00:55:17,599
stability expectation oh can you go back

1413
00:55:17,599 --> 00:55:19,040
okay

1414
00:55:19,040 --> 00:55:20,160
i'm not done with the previous slides

1415
00:55:20,160 --> 00:55:22,319
yet because that's important so next one

1416
00:55:22,319 --> 00:55:23,920
we also start to really analyze the

1417
00:55:23,920 --> 00:55:25,760
stability expectation of all the

1418
00:55:25,760 --> 00:55:27,599
transport so for which one will be

1419
00:55:27,599 --> 00:55:29,599
stable we anticipate of course different

1420
00:55:29,599 --> 00:55:31,839
deployment can be different some one can

1421
00:55:31,839 --> 00:55:34,160
be dynamic and then we talk about if you

1422
00:55:34,160 --> 00:55:36,559
really do you really it's not stable and

1423
00:55:36,559 --> 00:55:37,920
what kind of incremental changes you

1424
00:55:37,920 --> 00:55:39,839
have for example red column showed the

1425
00:55:39,839 --> 00:55:41,440
potential operation when you support

1426
00:55:41,440 --> 00:55:43,520
because they have different implications

1427
00:55:43,520 --> 00:55:46,000
on on scheduling and also on the

1428
00:55:46,000 --> 00:55:47,760
capability of transport as well as on

1429
00:55:47,760 --> 00:55:51,520
efficiency okay next slides please

1430
00:55:52,960 --> 00:55:55,520
next please

1431
00:55:56,160 --> 00:55:56,960
okay

1432
00:55:56,960 --> 00:55:58,559
so giving us analysis of all the

1433
00:55:58,559 --> 00:56:00,720
services which is very nice and then

1434
00:56:00,720 --> 00:56:02,880
this is our current plan effort before

1435
00:56:02,880 --> 00:56:04,880
we really do the design we won't get

1436
00:56:04,880 --> 00:56:07,760
initial results so therefore uh

1437
00:56:07,760 --> 00:56:10,559
uh danny and i and and roland and

1438
00:56:10,559 --> 00:56:12,160
friendship will start to talk about it

1439
00:56:12,160 --> 00:56:14,400
so right now our decision is we're going

1440
00:56:14,400 --> 00:56:17,760
to first step actually is uh evaluate

1441
00:56:17,760 --> 00:56:19,839
the current transport efficiencies and

1442
00:56:19,839 --> 00:56:21,680
also provide initial like benchmarking

1443
00:56:21,680 --> 00:56:24,640
like token services or auto services so

1444
00:56:24,640 --> 00:56:26,720
therefore this moment uh it's very

1445
00:56:26,720 --> 00:56:29,599
generous binox is fully open to use its

1446
00:56:29,599 --> 00:56:31,599
infrastructure as evaluating environment

1447
00:56:31,599 --> 00:56:33,599
we can evaluate all kinds of transport

1448
00:56:33,599 --> 00:56:35,440
and the greater big network which is

1449
00:56:35,440 --> 00:56:38,240
like a quite large network covering uh

1450
00:56:38,240 --> 00:56:40,559
hong kong shenzhen about 13 cities and

1451
00:56:40,559 --> 00:56:42,720
also open to use its infrastructure to

1452
00:56:42,720 --> 00:56:44,799
evaluate all the transport and also as a

1453
00:56:44,799 --> 00:56:47,200
way to model their networks for example

1454
00:56:47,200 --> 00:56:49,280
then for the very basic one about

1455
00:56:49,280 --> 00:56:52,640
transport we right now decided to deploy

1456
00:56:52,640 --> 00:56:54,640
uh five benchmarking services you can

1457
00:56:54,640 --> 00:56:56,240
call like some kind like a auto

1458
00:56:56,240 --> 00:56:58,960
transport spec so for example we filter

1459
00:56:58,960 --> 00:57:01,119
the cost map and endpoint unified

1460
00:57:01,119 --> 00:57:03,359
property map and cdn node because there

1461
00:57:03,359 --> 00:57:05,280
are cd nodes inside the network and we

1462
00:57:05,280 --> 00:57:08,160
model them as well and then we do flow

1463
00:57:08,160 --> 00:57:09,440
detection

1464
00:57:09,440 --> 00:57:11,680
direction based on the flow director and

1465
00:57:11,680 --> 00:57:14,000
pointing to the cdn nodes and then we

1466
00:57:14,000 --> 00:57:16,559
also uh deployed the passive vector

1467
00:57:16,559 --> 00:57:18,880
providing available reservoir bandwidth

1468
00:57:18,880 --> 00:57:20,400
for for all the networks so therefore

1469
00:57:20,400 --> 00:57:21,599
actually we're really trying to use them

1470
00:57:21,599 --> 00:57:23,920
not only to do transport but also model

1471
00:57:23,920 --> 00:57:25,200
those networks by themselves in

1472
00:57:25,200 --> 00:57:26,960
particular agreed to be a network it is

1473
00:57:26,960 --> 00:57:28,720
a relatively larger network

1474
00:57:28,720 --> 00:57:30,240
and then we're going to evaluate the

1475
00:57:30,240 --> 00:57:31,440
transport

1476
00:57:31,440 --> 00:57:33,599
oh i have two minutes so transport one

1477
00:57:33,599 --> 00:57:35,839
is one point x of course keep alive and

1478
00:57:35,839 --> 00:57:37,520
two and three initial design and then we

1479
00:57:37,520 --> 00:57:39,839
call auto sse and then the right hand

1480
00:57:39,839 --> 00:57:42,000
side the last column is collecting

1481
00:57:42,000 --> 00:57:44,240
matrix for example what can metric one

1482
00:57:44,240 --> 00:57:45,920
collect i want see

1483
00:57:45,920 --> 00:57:47,200
sort of what we can compare with

1484
00:57:47,200 --> 00:57:50,879
different transport next slides please

1485
00:57:51,599 --> 00:57:54,240
so here is the initial design and

1486
00:57:54,240 --> 00:57:55,280
initial of course it's a really

1487
00:57:55,280 --> 00:57:57,200
benchmarking initial design i don't want

1488
00:57:57,200 --> 00:58:00,079
to say this is in any way or form uh uh

1489
00:58:00,079 --> 00:58:01,920
finalized design at all so therefore

1490
00:58:01,920 --> 00:58:03,920
where that's the initial design about uh

1491
00:58:03,920 --> 00:58:06,240
design auto transport using hb2 now

1492
00:58:06,240 --> 00:58:08,640
three and only two

1493
00:58:08,640 --> 00:58:12,079
so the left-hand side is the auto sse

1494
00:58:12,079 --> 00:58:13,839
which rfc8895

1495
00:58:13,839 --> 00:58:16,000
and initial current design is

1496
00:58:16,000 --> 00:58:18,160
based on that design but we want to move

1497
00:58:18,160 --> 00:58:20,480
this one into the right hand design

1498
00:58:20,480 --> 00:58:22,160
which also auto record right now we call

1499
00:58:22,160 --> 00:58:24,640
auto h2 and http 2. so therefore

1500
00:58:24,640 --> 00:58:25,839
basically moving a lot of control

1501
00:58:25,839 --> 00:58:28,880
channels and so on into the http

1502
00:58:28,880 --> 00:58:32,319
2 design next slides piece

1503
00:58:32,799 --> 00:58:36,400
so here is a list of requirements and

1504
00:58:36,400 --> 00:58:40,079
so basically we want to use the same uh

1505
00:58:40,079 --> 00:58:42,640
all the resources possible using this

1506
00:58:42,640 --> 00:58:44,799
design and you can do addition or

1507
00:58:44,799 --> 00:58:47,119
deletion and you can signal this start

1508
00:58:47,119 --> 00:58:48,960
or stop it's you know like what auto ssd

1509
00:58:48,960 --> 00:58:50,960
can provide already and of course very

1510
00:58:50,960 --> 00:58:52,480
important part actually challenging part

1511
00:58:52,480 --> 00:58:55,440
is r4 how to do incremental updates

1512
00:58:55,440 --> 00:58:57,359
and then we also talk about it yes if

1513
00:58:57,359 --> 00:59:00,079
we're doing http as the transport we

1514
00:59:00,079 --> 00:59:01,200
want to make sure we follow all the

1515
00:59:01,200 --> 00:59:05,720
semantics and so on next slides please

1516
00:59:06,079 --> 00:59:09,520
so here we main design issue is that

1517
00:59:09,520 --> 00:59:12,160
okay i'm running i only have 18 seconds

1518
00:59:12,160 --> 00:59:13,359
left

1519
00:59:13,359 --> 00:59:15,440
would be how do we really encode

1520
00:59:15,440 --> 00:59:17,680
incremental updates and because really

1521
00:59:17,680 --> 00:59:19,839
uh one very nice design for ssc from all

1522
00:59:19,839 --> 00:59:21,760
the features and so on is we allow you

1523
00:59:21,760 --> 00:59:23,359
to send all real information and you can

1524
00:59:23,359 --> 00:59:25,440
do json patch you can do json merge pack

1525
00:59:25,440 --> 00:59:27,280
it's very flexible but how do we really

1526
00:59:27,280 --> 00:59:29,119
encode it using uh

1527
00:59:29,119 --> 00:59:33,720
http 2 next slides please

1528
00:59:34,000 --> 00:59:34,960
oh

1529
00:59:34,960 --> 00:59:36,880
so that's the initial design so

1530
00:59:36,880 --> 00:59:38,640
therefore here is a list of initial

1531
00:59:38,640 --> 00:59:40,319
design and the initial design one is

1532
00:59:40,319 --> 00:59:42,480
incremental update stream is equal to

1533
00:59:42,480 --> 00:59:44,319
single http stream so therefore we do

1534
00:59:44,319 --> 00:59:46,480
essentially now we have a content

1535
00:59:46,480 --> 00:59:48,160
indication layer to encode what kind of

1536
00:59:48,160 --> 00:59:50,240
content type you really use it and so

1537
00:59:50,240 --> 00:59:51,760
therefore one way is use exactly auto

1538
00:59:51,760 --> 00:59:54,480
sse sort of reason possible or we can

1539
00:59:54,480 --> 00:59:56,799
design a very simple uh content layer

1540
00:59:56,799 --> 00:59:58,319
the second one of course i think that's

1541
00:59:58,319 --> 01:00:01,040
really one suggested in rfc 8895 section

1542
01:00:01,040 --> 01:00:04,559
3.3 is for every single update we open a

1543
01:00:04,559 --> 01:00:06,559
new gp2 stream and which one will be

1544
01:00:06,559 --> 01:00:08,160
good and so on but the major problem

1545
01:00:08,160 --> 01:00:10,079
here is we might be violating the

1546
01:00:10,079 --> 01:00:11,599
approach promise but overall i think

1547
01:00:11,599 --> 01:00:13,359
that's from hdb2 meaning they are really

1548
01:00:13,359 --> 01:00:14,960
not designed for portrait notification

1549
01:00:14,960 --> 01:00:16,400
or increment updates they're mostly

1550
01:00:16,400 --> 01:00:18,480
essential like prefetch designed for web

1551
01:00:18,480 --> 01:00:20,960
page prefetching of course we can talk

1552
01:00:20,960 --> 01:00:23,200
about option of http 2 extension next

1553
01:00:23,200 --> 01:00:25,439
slides

1554
01:00:26,839 --> 01:00:29,280
please yeah so this this one basically

1555
01:00:29,280 --> 01:00:31,119
says that's also the the space we're

1556
01:00:31,119 --> 01:00:33,200
serving in uh we will take a look at

1557
01:00:33,200 --> 01:00:34,960
that actually auto is one of the efforts

1558
01:00:34,960 --> 01:00:36,799
in ietf the sending network information

1559
01:00:36,799 --> 01:00:39,359
application and also itf has effort of

1560
01:00:39,359 --> 01:00:42,640
rfc 3168 to send easy end there's also

1561
01:00:42,640 --> 01:00:45,200
effort for example from 3gpp i want to

1562
01:00:45,200 --> 01:00:46,640
make sure our design will be compatible

1563
01:00:46,640 --> 01:00:48,880
or as much as much matching as possible

1564
01:00:48,880 --> 01:00:50,400
but that's of course the sidewalk we're

1565
01:00:50,400 --> 01:00:52,559
also focusing on early part i think

1566
01:00:52,559 --> 01:00:54,799
that's all and then i'm willing to take

1567
01:00:54,799 --> 01:00:57,839
questions as much as i can

1568
01:00:57,839 --> 01:00:59,359
okay thanks

1569
01:00:59,359 --> 01:01:01,280
richard martin

1570
01:01:01,280 --> 01:01:02,319
sure

1571
01:01:02,319 --> 01:01:04,640
yeah i i read the draft um

1572
01:01:04,640 --> 01:01:05,920
i was a little confused on where you

1573
01:01:05,920 --> 01:01:07,520
were going with it and which maybe is

1574
01:01:07,520 --> 01:01:09,280
appropriate for an initial shot so

1575
01:01:09,280 --> 01:01:12,480
thanks for that i i do um

1576
01:01:12,480 --> 01:01:14,160
uh well i was finally you know as an

1577
01:01:14,160 --> 01:01:17,680
introductions talk about um

1578
01:01:17,680 --> 01:01:19,280
multi-streaming headline blocking and

1579
01:01:19,280 --> 01:01:20,720
stuff like i

1580
01:01:20,720 --> 01:01:22,000
really we don't need to write a

1581
01:01:22,000 --> 01:01:25,040
specification for just taking existing

1582
01:01:25,040 --> 01:01:27,280
like 72-85 requests and responses and

1583
01:01:27,280 --> 01:01:28,559
putting them on

1584
01:01:28,559 --> 01:01:30,880
on multi-streaming um

1585
01:01:30,880 --> 01:01:32,079
i i

1586
01:01:32,079 --> 01:01:33,760
that's that that should not be a focus

1587
01:01:33,760 --> 01:01:35,599
of the spec i think we need to look at

1588
01:01:35,599 --> 01:01:37,520
um

1589
01:01:37,520 --> 01:01:39,280
things where you'd actually modify the

1590
01:01:39,280 --> 01:01:41,280
mechanisms

1591
01:01:41,280 --> 01:01:43,040
and and you know you alluded to that

1592
01:01:43,040 --> 01:01:46,240
with like the push versus sse um

1593
01:01:46,240 --> 01:01:48,559
and by the way as a comment like h3 is

1594
01:01:48,559 --> 01:01:51,200
push twos that that that should be

1595
01:01:51,200 --> 01:01:52,880
you don't need to treat hd as a separate

1596
01:01:52,880 --> 01:01:54,559
thing the only mechanism i could think

1597
01:01:54,559 --> 01:01:57,119
of that isn't there is priorities

1598
01:01:57,119 --> 01:01:58,640
um i don't know if you would want to

1599
01:01:58,640 --> 01:02:00,160
leverage priorities but

1600
01:02:00,160 --> 01:02:02,240
um we do we do for example they have

1601
01:02:02,240 --> 01:02:04,160
dependencies and we won't even use all

1602
01:02:04,160 --> 01:02:06,079
the dependencies for example we need to

1603
01:02:06,079 --> 01:02:08,160
reset allocation exclusive new stream

1604
01:02:08,160 --> 01:02:10,240
and so on so therefore we want actually

1605
01:02:10,240 --> 01:02:12,000
we do one because like a class map and

1606
01:02:12,000 --> 01:02:13,839
network need to depend on so the

1607
01:02:13,839 --> 01:02:15,440
allocation you want to give resources

1608
01:02:15,440 --> 01:02:17,520
that dependencies you want send send

1609
01:02:17,520 --> 01:02:19,760
updates to network map before this map

1610
01:02:19,760 --> 01:02:21,200
otherwise it's just increasing the

1611
01:02:21,200 --> 01:02:22,480
property yeah

1612
01:02:22,480 --> 01:02:23,359
it sounds really going the right

1613
01:02:23,359 --> 01:02:24,480
direction i just want to steer you away

1614
01:02:24,480 --> 01:02:26,480
from writing a lot of text about you

1615
01:02:26,480 --> 01:02:28,640
know just taking 7285 request response

1616
01:02:28,640 --> 01:02:30,480
and putting it on h2 because that should

1617
01:02:30,480 --> 01:02:32,720
be seamless um and just focusing on

1618
01:02:32,720 --> 01:02:34,640
really what the new apis are that h2 and

1619
01:02:34,640 --> 01:02:37,119
h3 give you uh because that's what needs

1620
01:02:37,119 --> 01:02:39,119
to be specced out thanks

1621
01:02:39,119 --> 01:02:42,640
sure definitely great thank you

1622
01:02:42,640 --> 01:02:43,520
okay

1623
01:02:43,520 --> 01:02:45,839
thanks to rich richard so let's move on

1624
01:02:45,839 --> 01:02:50,400
to the next stop yeah

1625
01:02:50,640 --> 01:02:53,119
i think it is a gokai

1626
01:02:53,119 --> 01:02:56,400
we talk about g2

1627
01:02:56,720 --> 01:02:59,920
so gokai do you want to share slides

1628
01:02:59,920 --> 01:03:01,760
maybe you can share a slide i'll just

1629
01:03:01,760 --> 01:03:05,079
say it next

1630
01:03:20,720 --> 01:03:23,039
oh so does everyone see a slime now okay

1631
01:03:23,039 --> 01:03:24,799
okay i just seriously

1632
01:03:24,799 --> 01:03:27,920
oh so hello everyone uh it's me again so

1633
01:03:27,920 --> 01:03:30,960
uh today i'm going to give some uh

1634
01:03:30,960 --> 01:03:32,240
update on

1635
01:03:32,240 --> 01:03:33,920
uh our

1636
01:03:33,920 --> 01:03:36,559
uh integration with g2 system and i

1637
01:03:36,559 --> 01:03:38,400
think uh as

1638
01:03:38,400 --> 01:03:41,039
they have some like uh ip issues so

1639
01:03:41,039 --> 01:03:43,839
probably we are more focused on what

1640
01:03:43,839 --> 01:03:46,400
kind of services can be provided with it

1641
01:03:46,400 --> 01:03:49,119
with this system instead of how they are

1642
01:03:49,119 --> 01:03:52,640
being realized inside their framework so

1643
01:03:52,640 --> 01:03:54,480
today uh basically i'm talking about the

1644
01:03:54,480 --> 01:03:56,799
bottleneck service with auto and

1645
01:03:56,799 --> 01:03:59,839
so next slide please

1646
01:04:00,640 --> 01:04:02,480
and in this talk basically we cover like

1647
01:04:02,480 --> 01:04:04,720
four aspects so first we give some uh

1648
01:04:04,720 --> 01:04:06,880
basic concept of the bottleneck service

1649
01:04:06,880 --> 01:04:10,240
and we give some use cases of how this

1650
01:04:10,240 --> 01:04:12,880
information can be used by applications

1651
01:04:12,880 --> 01:04:15,359
to better orchestrate the traffic and

1652
01:04:15,359 --> 01:04:17,200
then we give some basic information

1653
01:04:17,200 --> 01:04:19,440
about the g2 optimization framework and

1654
01:04:19,440 --> 01:04:20,319
then

1655
01:04:20,319 --> 01:04:22,960
we give some

1656
01:04:23,280 --> 01:04:24,640
immature

1657
01:04:24,640 --> 01:04:27,119
designs or basically some

1658
01:04:27,119 --> 01:04:28,799
uh

1659
01:04:28,799 --> 01:04:29,680
some

1660
01:04:29,680 --> 01:04:32,000
evidences that we want to make to

1661
01:04:32,000 --> 01:04:34,000
integrate the spawning service with auto

1662
01:04:34,000 --> 01:04:37,240
some examples

1663
01:04:40,240 --> 01:04:42,559
and uh so here we basically give an

1664
01:04:42,559 --> 01:04:45,119
overview of what the bonding information

1665
01:04:45,119 --> 01:04:46,240
as a serp

1666
01:04:46,240 --> 01:04:49,119
basically we try to argue that the

1667
01:04:49,119 --> 01:04:51,760
bonding information can be provided as

1668
01:04:51,760 --> 01:04:54,640
an out of service i think here are some

1669
01:04:54,640 --> 01:04:56,079
uh

1670
01:04:56,079 --> 01:04:58,880
a few points first is many networks use

1671
01:04:58,880 --> 01:05:00,480
dynamic resource allocation to improve

1672
01:05:00,480 --> 01:05:03,359
natural utility for example uh

1673
01:05:03,359 --> 01:05:04,079
in

1674
01:05:04,079 --> 01:05:05,760
networks we basically use tcp as

1675
01:05:05,760 --> 01:05:07,839
congestion control to allocate like

1676
01:05:07,839 --> 01:05:10,720
bandwidth resources and the tcp

1677
01:05:10,720 --> 01:05:13,520
congestion control is actually uh you

1678
01:05:13,520 --> 01:05:14,640
can be modeled as one of the

1679
01:05:14,640 --> 01:05:16,480
optimization problems that dynamically

1680
01:05:16,480 --> 01:05:18,960
allocate resources based on uh like

1681
01:05:18,960 --> 01:05:23,119
different attributes and also we uh

1682
01:05:23,119 --> 01:05:24,559
now many

1683
01:05:24,559 --> 01:05:26,799
like cloud platforms or

1684
01:05:26,799 --> 01:05:29,119
uh orchestration systems they basically

1685
01:05:29,119 --> 01:05:31,839
uh manage the resources of these

1686
01:05:31,839 --> 01:05:33,839
infrastructures using dynamic resource

1687
01:05:33,839 --> 01:05:37,440
allocation for example in a google's uh

1688
01:05:37,440 --> 01:05:39,760
web optimizer uwe system they actually

1689
01:05:39,760 --> 01:05:43,280
use uh some some form of maximum

1690
01:05:43,280 --> 01:05:45,280
fairness to allocate the resources

1691
01:05:45,280 --> 01:05:46,480
between different

1692
01:05:46,480 --> 01:05:47,920
flow groups

1693
01:05:47,920 --> 01:05:49,280
and the

1694
01:05:49,280 --> 01:05:50,880
uh buffalo information is actually

1695
01:05:50,880 --> 01:05:52,400
important for applications to predict

1696
01:05:52,400 --> 01:05:54,319
network performance and also get

1697
01:05:54,319 --> 01:05:56,480
guidance for the traffic optimization

1698
01:05:56,480 --> 01:05:58,559
process in such networks

1699
01:05:58,559 --> 01:06:00,480
basically we need some examples

1700
01:06:00,480 --> 01:06:03,119
including throughput prediction and also

1701
01:06:03,119 --> 01:06:05,359
optimization for time boundary flows uh

1702
01:06:05,359 --> 01:06:07,760
by region limiting the application's own

1703
01:06:07,760 --> 01:06:10,079
flows and also uh

1704
01:06:10,079 --> 01:06:13,280
g2 papers also talk about like

1705
01:06:13,280 --> 01:06:15,359
use cases such as network planning but

1706
01:06:15,359 --> 01:06:16,400
we do

1707
01:06:16,400 --> 01:06:19,200
as we want to uh argue uh we want to

1708
01:06:19,200 --> 01:06:21,200
find that the common service is provided

1709
01:06:21,200 --> 01:06:23,039
by partnering service and the auto

1710
01:06:23,039 --> 01:06:24,079
service so

1711
01:06:24,079 --> 01:06:27,200
we will be mostly focusing on the first

1712
01:06:27,200 --> 01:06:28,160
two

1713
01:06:28,160 --> 01:06:29,599
use cases

1714
01:06:29,599 --> 01:06:31,280
and i think the last inspiring service

1715
01:06:31,280 --> 01:06:33,440
can be important motivating use case of

1716
01:06:33,440 --> 01:06:35,359
auto uh

1717
01:06:35,359 --> 01:06:38,000
we already had the dual system

1718
01:06:38,000 --> 01:06:39,760
they already get a lot of

1719
01:06:39,760 --> 01:06:40,720
some

1720
01:06:40,720 --> 01:06:43,599
initial resources and also

1721
01:06:43,599 --> 01:06:46,559
software development and even with some

1722
01:06:46,559 --> 01:06:49,359
simulations on electronic simulators and

1723
01:06:49,359 --> 01:06:51,359
i think they are actually moving towards

1724
01:06:51,359 --> 01:06:53,599
some potential deployment in networks

1725
01:06:53,599 --> 01:06:55,440
for supercomputing or

1726
01:06:55,440 --> 01:06:58,319
software defined uh web optimization

1727
01:06:58,319 --> 01:07:00,400
and i think uh

1728
01:07:00,400 --> 01:07:03,039
so this service can be valuable for a

1729
01:07:03,039 --> 01:07:04,480
future deployment

1730
01:07:04,480 --> 01:07:07,280
so next time please

1731
01:07:07,680 --> 01:07:11,359
and uh here actually are some uh

1732
01:07:11,359 --> 01:07:13,920
definitions for the bottlenecks so uh

1733
01:07:13,920 --> 01:07:16,480
the first is basically the

1734
01:07:16,480 --> 01:07:19,359
the dynamic bandwidth allocation can is

1735
01:07:19,359 --> 01:07:20,799
usually based on some optimization

1736
01:07:20,799 --> 01:07:22,559
problems for example for maximum phase

1737
01:07:22,559 --> 01:07:23,680
we can

1738
01:07:23,680 --> 01:07:26,160
the the system is trying to

1739
01:07:26,160 --> 01:07:28,720
maximize the minimal uh flow allocation

1740
01:07:28,720 --> 01:07:31,440
for the traffic in their network

1741
01:07:31,440 --> 01:07:32,400
and

1742
01:07:32,400 --> 01:07:34,640
in the general sense we also have uh

1743
01:07:34,640 --> 01:07:36,720
many for example tcp can just control

1744
01:07:36,720 --> 01:07:38,880
the actual adequate resources based on

1745
01:07:38,880 --> 01:07:41,440
some unconstrained network utility

1746
01:07:41,440 --> 01:07:43,359
maximization problem and

1747
01:07:43,359 --> 01:07:45,599
for these problems we can basically have

1748
01:07:45,599 --> 01:07:47,359
some formal deviations of the

1749
01:07:47,359 --> 01:07:49,280
bottlenecks and

1750
01:07:49,280 --> 01:07:52,559
uh if we describe them in english they

1751
01:07:52,559 --> 01:07:53,599
basically

1752
01:07:53,599 --> 01:07:56,480
if we it can be implemented as if we

1753
01:07:56,480 --> 01:07:58,640
increase the capacity of the

1754
01:07:58,640 --> 01:08:00,880
links then the

1755
01:08:00,880 --> 01:08:03,760
rate of the flows can be uh increased as

1756
01:08:03,760 --> 01:08:05,599
well so basically uh

1757
01:08:05,599 --> 01:08:07,039
that's a

1758
01:08:07,039 --> 01:08:08,079
uh

1759
01:08:08,079 --> 01:08:09,520
an informal definition of the

1760
01:08:09,520 --> 01:08:13,119
bottlenecks so next slide please

1761
01:08:13,119 --> 01:08:15,359
and here we actually uh have an example

1762
01:08:15,359 --> 01:08:16,238
of

1763
01:08:16,238 --> 01:08:17,120
what

1764
01:08:17,120 --> 01:08:17,920
uh

1765
01:08:17,920 --> 01:08:21,120
what leg links looks like uh

1766
01:08:21,120 --> 01:08:22,880
assume in this network we have like two

1767
01:08:22,880 --> 01:08:25,520
links l1 and l2 and we have three flows

1768
01:08:25,520 --> 01:08:29,120
f1 f2 and f3 and if we if the network is

1769
01:08:29,120 --> 01:08:30,880
allocating resources with our maximum

1770
01:08:30,880 --> 01:08:34,238
fairness then we act we can actually uh

1771
01:08:34,238 --> 01:08:36,399
using the definition that we just

1772
01:08:36,399 --> 01:08:37,920
introduced we can see that the

1773
01:08:37,920 --> 01:08:40,479
bottleneck of f1 is actually

1774
01:08:40,479 --> 01:08:44,399
l2 and bonnet for l f f2 is l1 and bond

1775
01:08:44,399 --> 01:08:45,439
x4

1776
01:08:45,439 --> 01:08:47,198
f3 is l2

1777
01:08:47,198 --> 01:08:50,318
so next cyclist

1778
01:08:51,439 --> 01:08:54,158
and the way uh

1779
01:08:54,158 --> 01:08:56,719
waste the the analysis

1780
01:08:56,719 --> 01:08:58,880
we just made and we can actually draw a

1781
01:08:58,880 --> 01:09:01,600
graph of the bottom x between the links

1782
01:09:01,600 --> 01:09:03,279
and the flows and

1783
01:09:03,279 --> 01:09:04,839
for

1784
01:09:04,839 --> 01:09:08,080
these for this for this uh but for the

1785
01:09:08,080 --> 01:09:10,479
for the network we just described it

1786
01:09:10,479 --> 01:09:12,319
its bottoming structure looks like uh

1787
01:09:12,319 --> 01:09:14,238
something in this page

1788
01:09:14,238 --> 01:09:16,640
and uh we can see that uh

1789
01:09:16,640 --> 01:09:19,040
the directions of the

1790
01:09:19,040 --> 01:09:23,198
for example we can say uh out if out if

1791
01:09:23,198 --> 01:09:25,920
an edge is pointing from a link to a

1792
01:09:25,920 --> 01:09:28,238
flow basically it describes that uh this

1793
01:09:28,238 --> 01:09:30,960
link is a bottleneck link of the

1794
01:09:30,960 --> 01:09:34,719
flow and if a flow is pointing to a link

1795
01:09:34,719 --> 01:09:35,920
basically means

1796
01:09:35,920 --> 01:09:37,439
uh

1797
01:09:37,439 --> 01:09:40,238
the link is not a bonnet of the flow but

1798
01:09:40,238 --> 01:09:42,719
the rate of the flow would have impact

1799
01:09:42,719 --> 01:09:44,799
on the links

1800
01:09:44,799 --> 01:09:48,158
failure of the other flows

1801
01:09:48,158 --> 01:09:50,960
and with this structure

1802
01:09:50,960 --> 01:09:53,040
it enables a quantitative analysis of

1803
01:09:53,040 --> 01:09:55,280
bottom techniques or flows over other

1804
01:09:55,280 --> 01:09:59,199
flows so next slide please

1805
01:09:59,840 --> 01:10:02,880
for example if you want to

1806
01:10:02,880 --> 01:10:04,960
answer the question of what happens if

1807
01:10:04,960 --> 01:10:07,679
the capacity of l1 is increased by a

1808
01:10:07,679 --> 01:10:09,840
small amount of traffic like delta and

1809
01:10:09,840 --> 01:10:12,320
exactly

1810
01:10:12,320 --> 01:10:14,320
so we can propagate this change along

1811
01:10:14,320 --> 01:10:16,400
this bottom leg structure and we can see

1812
01:10:16,400 --> 01:10:18,640
that okay if we increase the capacity of

1813
01:10:18,640 --> 01:10:20,960
l1 then the rate of

1814
01:10:20,960 --> 01:10:22,530
f2 can be also increased

1815
01:10:22,530 --> 01:10:24,080
[Music]

1816
01:10:24,080 --> 01:10:27,040
and exactly

1817
01:10:27,040 --> 01:10:29,120
and another type of question is what if

1818
01:10:29,120 --> 01:10:31,199
we increase the

1819
01:10:31,199 --> 01:10:34,000
uh what if we decrease the rate of for

1820
01:10:34,000 --> 01:10:38,080
example f3 by delta and first uh with

1821
01:10:38,080 --> 01:10:39,679
the with the bottom net structure we

1822
01:10:39,679 --> 01:10:42,000
just described if we decrease the

1823
01:10:42,000 --> 01:10:44,880
uh rate of f3 the bottom extraction

1824
01:10:44,880 --> 01:10:45,840
actually

1825
01:10:45,840 --> 01:10:47,679
changes to

1826
01:10:47,679 --> 01:10:49,600
the structure in this page

1827
01:10:49,600 --> 01:10:52,640
and next up is

1828
01:10:54,320 --> 01:10:55,920
and again we can

1829
01:10:55,920 --> 01:10:59,520
analyze how the how this uh rate change

1830
01:10:59,520 --> 01:11:01,440
can be propagated along the spotlight

1831
01:11:01,440 --> 01:11:03,920
structure and we then we can analyze uh

1832
01:11:03,920 --> 01:11:06,800
how other flows might be impacted by

1833
01:11:06,800 --> 01:11:07,600
uh

1834
01:11:07,600 --> 01:11:11,120
this uh this this change we just made so

1835
01:11:11,120 --> 01:11:13,760
let's start this

1836
01:11:14,800 --> 01:11:18,560
and uh with this there's a with this

1837
01:11:18,560 --> 01:11:21,040
bonnet structure we actually can analyze

1838
01:11:21,040 --> 01:11:22,800
so the first use case that we can

1839
01:11:22,800 --> 01:11:24,400
provide is provide a throughput

1840
01:11:24,400 --> 01:11:26,640
prediction service and in this service

1841
01:11:26,640 --> 01:11:28,320
basically the application can specify a

1842
01:11:28,320 --> 01:11:30,159
set of flows and then

1843
01:11:30,159 --> 01:11:32,400
the server will uh

1844
01:11:32,400 --> 01:11:34,640
will be able to answer uh what is a

1845
01:11:34,640 --> 01:11:37,280
predictive throughput for this set of

1846
01:11:37,280 --> 01:11:39,600
flows in the network so next slide

1847
01:11:39,600 --> 01:11:41,840
please

1848
01:11:44,800 --> 01:11:47,679
and basically here is a complete example

1849
01:11:47,679 --> 01:11:49,679
of the simple prediction service so

1850
01:11:49,679 --> 01:11:51,440
assuming we have three background flows

1851
01:11:51,440 --> 01:11:55,199
f1 f2 and f3 and a client wants to

1852
01:11:55,199 --> 01:11:57,440
query the rate for f4

1853
01:11:57,440 --> 01:11:58,960
before even

1854
01:11:58,960 --> 01:12:00,719
establishing the connection so the

1855
01:12:00,719 --> 01:12:04,080
server uh will be able to uh the server

1856
01:12:04,080 --> 01:12:06,159
is to monitor the background flows and

1857
01:12:06,159 --> 01:12:07,040
then

1858
01:12:07,040 --> 01:12:10,320
uh so next slide

1859
01:12:11,760 --> 01:12:14,000
and the network

1860
01:12:14,000 --> 01:12:16,480
the auto server basically can add the

1861
01:12:16,480 --> 01:12:18,080
new flows to the network and then

1862
01:12:18,080 --> 01:12:19,760
analyze its bottleneck structure and

1863
01:12:19,760 --> 01:12:21,520
with this bonding structure it will be

1864
01:12:21,520 --> 01:12:24,640
able to predict that the rate of f4 is

1865
01:12:24,640 --> 01:12:26,080
actually uh is

1866
01:12:26,080 --> 01:12:29,559
uh 0.67

1867
01:12:31,120 --> 01:12:35,040
actually like uh 2 over 3 uh for example

1868
01:12:35,040 --> 01:12:37,760
megabit per second so then it will be

1869
01:12:37,760 --> 01:12:39,920
able to answer the

1870
01:12:39,920 --> 01:12:42,719
uh this uh super prediction service so

1871
01:12:42,719 --> 01:12:45,360
next time please

1872
01:12:46,480 --> 01:12:50,080
and another use case is for example uh

1873
01:12:50,080 --> 01:12:52,239
in the judo paper they should describe

1874
01:12:52,239 --> 01:12:53,920
the case where you want to

1875
01:12:53,920 --> 01:12:56,800
uh speed up a certain flow but you can

1876
01:12:56,800 --> 01:12:58,719
only rename it some

1877
01:12:58,719 --> 01:13:01,600
flows with no uh with smaller with lower

1878
01:13:01,600 --> 01:13:03,600
priority and then

1879
01:13:03,600 --> 01:13:06,480
to enter this uh to uh to be able to

1880
01:13:06,480 --> 01:13:08,880
solve this kind of problem uh

1881
01:13:08,880 --> 01:13:11,360
you can also use the bargaining service

1882
01:13:11,360 --> 01:13:13,920
so next time

1883
01:13:15,520 --> 01:13:18,800
and for example uh assume that the uh

1884
01:13:18,800 --> 01:13:21,360
application wants to optimize the

1885
01:13:21,360 --> 01:13:24,320
the rate of f5 to be

1886
01:13:24,320 --> 01:13:28,000
0.8 and it can only written emit flows

1887
01:13:28,000 --> 01:13:29,920
f2 f3 and f4

1888
01:13:29,920 --> 01:13:31,040
and then

1889
01:13:31,040 --> 01:13:33,840
you can for example query the auto

1890
01:13:33,840 --> 01:13:36,239
server and get the response as the next

1891
01:13:36,239 --> 01:13:38,559
page

1892
01:13:41,600 --> 01:13:42,400
and

1893
01:13:42,400 --> 01:13:44,800
so for this query it actually uh if we

1894
01:13:44,800 --> 01:13:46,719
return the if we look at the flow

1895
01:13:46,719 --> 01:13:48,800
gradient uh epoch structure then we can

1896
01:13:48,800 --> 01:13:50,719
see that uh

1897
01:13:50,719 --> 01:13:51,840
uh

1898
01:13:51,840 --> 01:13:53,520
with this bonding structure they can we

1899
01:13:53,520 --> 01:13:56,080
can actually derive how different flows

1900
01:13:56,080 --> 01:13:59,280
would impact the rate of the target flow

1901
01:13:59,280 --> 01:14:02,159
and basically uh we list the

1902
01:14:02,159 --> 01:14:04,480
values on the top

1903
01:14:04,480 --> 01:14:06,800
and from this uh page we can actually

1904
01:14:06,800 --> 01:14:09,760
see if you if we can if we rate limits

1905
01:14:09,760 --> 01:14:12,800
the rate of f2 it actually uh does not

1906
01:14:12,800 --> 01:14:16,719
help us to increase the rate of f5 so in

1907
01:14:16,719 --> 01:14:19,120
in this pay uh with this information the

1908
01:14:19,120 --> 01:14:21,679
application can choose to reach name it

1909
01:14:21,679 --> 01:14:26,880
r uh f3 and f4 so next circuit

1910
01:14:27,040 --> 01:14:30,159
and again uh when we try to re-limit f3

1911
01:14:30,159 --> 01:14:32,159
and f4 then the bonding structure will

1912
01:14:32,159 --> 01:14:34,800
actually uh will actually uh change and

1913
01:14:34,800 --> 01:14:36,960
with this chain with in this new bonding

1914
01:14:36,960 --> 01:14:39,120
structure we can actually uh get a

1915
01:14:39,120 --> 01:14:41,520
quantity of analysis for example the old

1916
01:14:41,520 --> 01:14:44,480
rate is 0.5 and we want to increase the

1917
01:14:44,480 --> 01:14:47,120
rate to 0.8 and then we can actually

1918
01:14:47,120 --> 01:14:48,719
calculate the data

1919
01:14:48,719 --> 01:14:51,440
using the information and then we get

1920
01:14:51,440 --> 01:14:54,320
the data should be 0.3 so we can

1921
01:14:54,320 --> 01:14:55,520
uh

1922
01:14:55,520 --> 01:14:58,480
so next time please

1923
01:14:59,679 --> 01:15:02,320
yep so uh

1924
01:15:02,320 --> 01:15:04,159
so basically we just give uh these two

1925
01:15:04,159 --> 01:15:06,719
examples uh to demonstrate how we can

1926
01:15:06,719 --> 01:15:09,040
use the bionic service to solve like

1927
01:15:09,040 --> 01:15:11,440
uh flow scheduling problems uh in the

1928
01:15:11,440 --> 01:15:13,600
application and here is an

1929
01:15:13,600 --> 01:15:15,440
introduction for the due to work because

1930
01:15:15,440 --> 01:15:16,960
g2 is the application framework that

1931
01:15:16,960 --> 01:15:19,440
based on this quantitative theory of

1932
01:15:19,440 --> 01:15:21,199
bonding structure it

1933
01:15:21,199 --> 01:15:23,520
develops some efficient algorithms to

1934
01:15:23,520 --> 01:15:25,120
compute the bonding structure that we

1935
01:15:25,120 --> 01:15:26,719
introduced and

1936
01:15:26,719 --> 01:15:28,640
and also they give some examples of how

1937
01:15:28,640 --> 01:15:29,679
you can

1938
01:15:29,679 --> 01:15:32,000
conduct application layer optimizations

1939
01:15:32,000 --> 01:15:33,120
for

1940
01:15:33,120 --> 01:15:35,840
their own flows with uh in networks with

1941
01:15:35,840 --> 01:15:38,719
maximum fairness and i think the geo

1942
01:15:38,719 --> 01:15:40,080
work is getting a lot of attention in

1943
01:15:40,080 --> 01:15:42,480
both academia and industry and they are

1944
01:15:42,480 --> 01:15:44,800
actually uh they have some ongoing

1945
01:15:44,800 --> 01:15:46,800
deployment efforts in both like

1946
01:15:46,800 --> 01:15:50,320
supercomputing networks and also with uh

1947
01:15:50,320 --> 01:15:54,320
data center networks so next time please

1948
01:15:54,960 --> 01:15:57,679
and here is a some examples of the

1949
01:15:57,679 --> 01:15:59,440
evaluation results that they get from

1950
01:15:59,440 --> 01:16:00,320
their

1951
01:16:00,320 --> 01:16:02,880
studies so it has shown some potential

1952
01:16:02,880 --> 01:16:04,719
in predicting support for tcp traffic

1953
01:16:04,719 --> 01:16:07,520
and also demonstrate uh many use cases

1954
01:16:07,520 --> 01:16:09,600
such as optimal rate path network

1955
01:16:09,600 --> 01:16:10,800
planning and

1956
01:16:10,800 --> 01:16:12,880
the te for time boundary traffic that we

1957
01:16:12,880 --> 01:16:14,239
just described

1958
01:16:14,239 --> 01:16:16,159
that these types of

1959
01:16:16,159 --> 01:16:18,560
use cases can be effectively solved

1960
01:16:18,560 --> 01:16:20,960
using the bottleneck structure

1961
01:16:20,960 --> 01:16:23,600
so next time please

1962
01:16:23,600 --> 01:16:25,520
and in the next few slides we just

1963
01:16:25,520 --> 01:16:28,239
discussed uh give some initial idea of

1964
01:16:28,239 --> 01:16:30,640
how this service can be provided

1965
01:16:30,640 --> 01:16:32,239
both ways

1966
01:16:32,239 --> 01:16:34,719
auto as the suspension and also with the

1967
01:16:34,719 --> 01:16:36,480
northbound and basically in this slide

1968
01:16:36,480 --> 01:16:38,640
we focus more on the

1969
01:16:38,640 --> 01:16:41,280
providing the bottleneck service as an

1970
01:16:41,280 --> 01:16:43,440
auto uh basically using auto as a

1971
01:16:43,440 --> 01:16:48,040
response so next time please

1972
01:16:48,960 --> 01:16:52,000
and we uh summarize the requirement that

1973
01:16:52,000 --> 01:16:54,640
we just get from the use cases for

1974
01:16:54,640 --> 01:16:56,159
through prediction

1975
01:16:56,159 --> 01:16:59,040
uh we we need to specify like flows and

1976
01:16:59,040 --> 01:17:01,120
the status and we also

1977
01:17:01,120 --> 01:17:02,640
need to get the

1978
01:17:02,640 --> 01:17:04,800
super prediction results for these both

1979
01:17:04,800 --> 01:17:06,960
and for the second use case uh we not

1980
01:17:06,960 --> 01:17:09,360
only need to gather flows uh specific

1981
01:17:09,360 --> 01:17:10,640
flows and

1982
01:17:10,640 --> 01:17:12,320
get super prediction we also need to

1983
01:17:12,320 --> 01:17:14,480
specify like uh some customized linear

1984
01:17:14,480 --> 01:17:18,400
constraints about flows and also

1985
01:17:18,560 --> 01:17:20,000
we might need information about the

1986
01:17:20,000 --> 01:17:22,000
bonus structure including

1987
01:17:22,000 --> 01:17:25,199
ingredient and flow gradient values

1988
01:17:25,199 --> 01:17:28,080
so next step is

1989
01:17:29,199 --> 01:17:31,280
and uh actually the bottleneck service

1990
01:17:31,280 --> 01:17:33,440
can be provided for some specific use

1991
01:17:33,440 --> 01:17:36,640
cases even with the current auto uh base

1992
01:17:36,640 --> 01:17:38,480
protocols and extensions for example if

1993
01:17:38,480 --> 01:17:39,199
we

1994
01:17:39,199 --> 01:17:40,000
uh

1995
01:17:40,000 --> 01:17:41,600
if we are trying if the auto server is

1996
01:17:41,600 --> 01:17:44,560
providing the supercreation for

1997
01:17:44,560 --> 01:17:47,280
site-level flows for example the flows

1998
01:17:47,280 --> 01:17:50,560
uh between different uh uh

1999
01:17:50,560 --> 01:17:51,760
networks

2000
01:17:51,760 --> 01:17:52,960
for example building different data

2001
01:17:52,960 --> 01:17:55,040
centers and there are resources

2002
01:17:55,040 --> 01:17:57,920
allocated by uh using some kind of like

2003
01:17:57,920 --> 01:18:00,000
maximum fairness then

2004
01:18:00,000 --> 01:18:03,199
uh if we model each uh data center as a

2005
01:18:03,199 --> 01:18:06,880
pid and this information can already uh

2006
01:18:06,880 --> 01:18:09,199
so this type of information can be uh

2007
01:18:09,199 --> 01:18:11,440
provided using some

2008
01:18:11,440 --> 01:18:14,000
existing auto extension for example

2009
01:18:14,000 --> 01:18:16,080
here we need to specify whether the

2010
01:18:16,080 --> 01:18:19,760
flows are established on uh

2011
01:18:19,760 --> 01:18:21,920
unestablished or already established and

2012
01:18:21,920 --> 01:18:23,040
then

2013
01:18:23,040 --> 01:18:24,960
we can use the

2014
01:18:24,960 --> 01:18:26,880
cost matrix from the

2015
01:18:26,880 --> 01:18:28,239
performance metric

2016
01:18:28,239 --> 01:18:31,280
extension such as throughput as a

2017
01:18:31,280 --> 01:18:33,120
cosmetic and then

2018
01:18:33,120 --> 01:18:35,600
in the response we can actually return

2019
01:18:35,600 --> 01:18:36,480
the

2020
01:18:36,480 --> 01:18:38,320
basically the throughput for

2021
01:18:38,320 --> 01:18:40,960
the predicted support for

2022
01:18:40,960 --> 01:18:42,400
each flow

2023
01:18:42,400 --> 01:18:44,800
and next happens

2024
01:18:44,800 --> 01:18:47,040
sure i think we only have like a few

2025
01:18:47,040 --> 01:18:48,400
pages uh so

2026
01:18:48,400 --> 01:18:50,800
and also we can also uh specify the

2027
01:18:50,800 --> 01:18:53,600
superprediction for like tcp level flows

2028
01:18:53,600 --> 01:18:56,560
so next slide

2029
01:18:57,760 --> 01:19:00,800
yeah actually and also we uh

2030
01:19:00,800 --> 01:19:02,719
to support the use case for

2031
01:19:02,719 --> 01:19:05,360
uh time-bounded data transfers

2032
01:19:05,360 --> 01:19:07,360
we also have some initial design so next

2033
01:19:07,360 --> 01:19:09,839
step please

2034
01:19:10,560 --> 01:19:12,960
for example uh

2035
01:19:12,960 --> 01:19:15,840
in this we actually use the multicast

2036
01:19:15,840 --> 01:19:18,400
extension to specify multiple to get

2037
01:19:18,400 --> 01:19:20,000
multiple information about the bionic

2038
01:19:20,000 --> 01:19:21,760
service for example we need the

2039
01:19:21,760 --> 01:19:25,120
throughput and also free flow gradient

2040
01:19:25,120 --> 01:19:27,520
information and then uh

2041
01:19:27,520 --> 01:19:28,560
the the

2042
01:19:28,560 --> 01:19:31,120
response will contain the both the super

2043
01:19:31,120 --> 01:19:32,640
and also the flow gradient and the flow

2044
01:19:32,640 --> 01:19:35,199
gradient information can be used by the

2045
01:19:35,199 --> 01:19:37,840
application to decide which flow to be

2046
01:19:37,840 --> 01:19:41,679
rate limited so next type is

2047
01:19:42,239 --> 01:19:44,400
and the application can

2048
01:19:44,400 --> 01:19:47,840
add the rate limit as flow uh basically

2049
01:19:47,840 --> 01:19:50,560
constraints to the flows and then the

2050
01:19:50,560 --> 01:19:52,239
auto server can

2051
01:19:52,239 --> 01:19:54,400
pre predict the

2052
01:19:54,400 --> 01:19:57,120
new throughput based on the constraints

2053
01:19:57,120 --> 01:20:00,080
and and basically in this example we

2054
01:20:00,080 --> 01:20:03,440
the application can get the

2055
01:20:03,440 --> 01:20:06,239
expected flow rate for its own target

2056
01:20:06,239 --> 01:20:09,199
flows so in two iterations so next time

2057
01:20:09,199 --> 01:20:11,519
please

2058
01:20:15,199 --> 01:20:18,159
yeah so here is a summary of this talk

2059
01:20:18,159 --> 01:20:20,400
so uh the our first

2060
01:20:20,400 --> 01:20:22,000
argument is that the bionic service can

2061
01:20:22,000 --> 01:20:24,239
be useful in many networks and uh

2062
01:20:24,239 --> 01:20:26,800
solidwork has been established by g2 for

2063
01:20:26,800 --> 01:20:29,120
maximum affairs and moving towards like

2064
01:20:29,120 --> 01:20:30,880
real deployment so

2065
01:20:30,880 --> 01:20:32,400
and we also believe that bionic service

2066
01:20:32,400 --> 01:20:34,159
can potentially integrate as part of the

2067
01:20:34,159 --> 01:20:35,600
auto framework

2068
01:20:35,600 --> 01:20:38,719
and uh basically we we are

2069
01:20:38,719 --> 01:20:41,360
uh interested in if uh the working group

2070
01:20:41,360 --> 01:20:42,480
is

2071
01:20:42,480 --> 01:20:45,520
uh basically how how we can proceed with

2072
01:20:45,520 --> 01:20:47,280
this work is there any interest from the

2073
01:20:47,280 --> 01:20:48,800
working group to

2074
01:20:48,800 --> 01:20:51,679
standardize this type of service

2075
01:20:51,679 --> 01:20:53,120
yep that's all

2076
01:20:53,120 --> 01:20:54,960
thanks jin okay

2077
01:20:54,960 --> 01:20:56,159
thanks kai

2078
01:20:56,159 --> 01:20:59,360
so richard uh i think we don't have time

2079
01:20:59,360 --> 01:21:01,920
can we move to the next presentation

2080
01:21:01,920 --> 01:21:03,840
okay yeah i mean just like one very

2081
01:21:03,840 --> 01:21:06,800
quick so basically uh the g2 team

2082
01:21:06,800 --> 01:21:09,760
presented to the auto team and meetings

2083
01:21:09,760 --> 01:21:11,120
and they have tremendous interest i

2084
01:21:11,120 --> 01:21:12,719
think this actually can be a very good

2085
01:21:12,719 --> 01:21:16,239
use case for auto deployment

2086
01:21:16,239 --> 01:21:18,080
we can focus initially not really

2087
01:21:18,080 --> 01:21:20,719
extending uh auto just use existing auto

2088
01:21:20,719 --> 01:21:23,040
for deployment but later of course

2089
01:21:23,040 --> 01:21:24,800
there's some like a fully user feature

2090
01:21:24,800 --> 01:21:26,320
they might we might need like to do a

2091
01:21:26,320 --> 01:21:28,080
little bit like a simple addition for

2092
01:21:28,080 --> 01:21:29,920
example inside the current filter when i

2093
01:21:29,920 --> 01:21:31,760
like flow level uh filter which is very

2094
01:21:31,760 --> 01:21:36,320
simple uh essential like a mime type

2095
01:21:36,320 --> 01:21:38,320
yeah

2096
01:21:38,320 --> 01:21:39,280
okay

2097
01:21:39,280 --> 01:21:42,239
thank you richard so thanks okay and

2098
01:21:42,239 --> 01:21:45,599
then move to the next danny

2099
01:21:46,480 --> 01:21:47,840
uh do you want to share slides by

2100
01:21:47,840 --> 01:21:48,960
yourself

2101
01:21:48,960 --> 01:21:51,520
now could you share this live please

2102
01:21:51,520 --> 01:21:53,760
okay

2103
01:21:53,760 --> 01:21:56,400
yesterday

2104
01:22:06,159 --> 01:22:09,839
slides are coming i think

2105
01:22:12,239 --> 01:22:14,239
thank you

2106
01:22:14,239 --> 01:22:16,639
okay this is annie from bennox and today

2107
01:22:16,639 --> 01:22:18,719
you know i would like to to present a

2108
01:22:18,719 --> 01:22:21,199
couple of slides with information about

2109
01:22:21,199 --> 01:22:22,960
the implementation and diploma

2110
01:22:22,960 --> 01:22:26,080
experiences with flow director

2111
01:22:26,080 --> 01:22:29,040
and next please

2112
01:22:33,120 --> 01:22:36,519
oh sorry

2113
01:22:42,239 --> 01:22:44,080
nx

2114
01:22:44,080 --> 01:22:46,719
yeah let's start with flow director so

2115
01:22:46,719 --> 01:22:48,800
in few words basically flow director

2116
01:22:48,800 --> 01:22:49,840
collects

2117
01:22:49,840 --> 01:22:52,880
data from the internal state of the isps

2118
01:22:52,880 --> 01:22:54,560
basically it builds

2119
01:22:54,560 --> 01:22:56,639
an inventory from the front wire from

2120
01:22:56,639 --> 01:22:58,560
warden and control plane

2121
01:22:58,560 --> 01:23:00,719
secondly flow director you know complete

2122
01:23:00,719 --> 01:23:03,040
computes defects mapping

2123
01:23:03,040 --> 01:23:05,199
and compiles that into an

2124
01:23:05,199 --> 01:23:07,760
into an unaccessible database and

2125
01:23:07,760 --> 01:23:09,920
finally communicates this information to

2126
01:23:09,920 --> 01:23:11,920
the hyper hyper gangs

2127
01:23:11,920 --> 01:23:13,760
just to quickly introduce these terms

2128
01:23:13,760 --> 01:23:15,920
you know hypergames for us at least you

2129
01:23:15,920 --> 01:23:17,920
know there are multiple definitions you

2130
01:23:17,920 --> 01:23:20,080
know are large networks that provide

2131
01:23:20,080 --> 01:23:23,440
services mostly to the end users

2132
01:23:23,440 --> 01:23:24,480
they are

2133
01:23:24,480 --> 01:23:27,199
globally distributed and generating you

2134
01:23:27,199 --> 01:23:29,120
know a large amount of data you know for

2135
01:23:29,120 --> 01:23:31,360
example like my facebook netflix so far

2136
01:23:31,360 --> 01:23:32,480
and so on

2137
01:23:32,480 --> 01:23:34,320
and basically flow director communicates

2138
01:23:34,320 --> 01:23:36,000
the network information to the hyper

2139
01:23:36,000 --> 01:23:37,280
giants

2140
01:23:37,280 --> 01:23:39,280
that that want to collaborate using

2141
01:23:39,280 --> 01:23:41,280
different protocols including

2142
01:23:41,280 --> 01:23:45,280
the alto protocol next slide

2143
01:23:46,840 --> 01:23:49,280
please um yeah

2144
01:23:49,280 --> 01:23:50,960
just a couple of words

2145
01:23:50,960 --> 01:23:52,800
of the history on

2146
01:23:52,800 --> 01:23:55,199
this is it's took more or less 10 years

2147
01:23:55,199 --> 01:23:58,159
in in research

2148
01:23:58,159 --> 01:24:00,639
you want to move to pages for

2149
01:24:00,639 --> 01:24:04,480
i can move or no no

2150
01:24:04,480 --> 01:24:07,199
yeah you are

2151
01:24:07,199 --> 01:24:08,880
for for it should be

2152
01:24:08,880 --> 01:24:10,080
next slide

2153
01:24:10,080 --> 01:24:12,320
yeah yeah

2154
01:24:12,320 --> 01:24:14,880
yeah basically like i say this

2155
01:24:14,880 --> 01:24:16,639
talk more or less 10 years in research

2156
01:24:16,639 --> 01:24:19,040
and about seven years in

2157
01:24:19,040 --> 01:24:21,360
for the company to get the point where

2158
01:24:21,360 --> 01:24:24,000
flow director is is now

2159
01:24:24,000 --> 01:24:26,560
and between the fierce evaluation and

2160
01:24:26,560 --> 01:24:29,520
the actually going live is more or less

2161
01:24:29,520 --> 01:24:31,520
seven years

2162
01:24:31,520 --> 01:24:32,480
and

2163
01:24:32,480 --> 01:24:35,120
flow directory you know what's also been

2164
01:24:35,120 --> 01:24:37,520
horizontally scalable and all the

2165
01:24:37,520 --> 01:24:39,600
components are

2166
01:24:39,600 --> 01:24:41,040
at hidden

2167
01:24:41,040 --> 01:24:43,440
adherent to the air faces

2168
01:24:43,440 --> 01:24:45,840
and currently basically we run a fairly

2169
01:24:45,840 --> 01:24:47,600
large environment with

2170
01:24:47,600 --> 01:24:49,679
over one gigabit per second of net net

2171
01:24:49,679 --> 01:24:51,120
flow data

2172
01:24:51,120 --> 01:24:55,840
and we hold about 600 bgp sessions

2173
01:24:55,840 --> 01:24:57,520
or less

2174
01:24:57,520 --> 01:24:58,719
okay

2175
01:24:58,719 --> 01:25:00,960
next slide please

2176
01:25:00,960 --> 01:25:01,760
and

2177
01:25:01,760 --> 01:25:04,639
regarding the architecture basically we

2178
01:25:04,639 --> 01:25:06,639
have three main components these are

2179
01:25:06,639 --> 01:25:09,120
bound components that are basically for

2180
01:25:09,120 --> 01:25:11,760
data collection and aggregation

2181
01:25:11,760 --> 01:25:13,840
the code engine which does all the model

2182
01:25:13,840 --> 01:25:15,760
building and calculation

2183
01:25:15,760 --> 01:25:17,840
and we have the northbound component

2184
01:25:17,840 --> 01:25:20,400
which does all the communication of the

2185
01:25:20,400 --> 01:25:24,000
trunker to the hyper youngs or ctns

2186
01:25:24,000 --> 01:25:26,480
we have you know alt or others

2187
01:25:26,480 --> 01:25:29,120
like enormous interface like

2188
01:25:29,120 --> 01:25:30,719
csv or

2189
01:25:30,719 --> 01:25:34,239
out of banks pgp interfaces

2190
01:25:34,239 --> 01:25:37,519
okay next slide please

2191
01:25:38,159 --> 01:25:40,719
so now let's go into the operational

2192
01:25:40,719 --> 01:25:43,199
experience to talk a little bit about

2193
01:25:43,199 --> 01:25:47,199
this okay next slide please

2194
01:25:47,840 --> 01:25:50,159
uh first of all we have a collaboration

2195
01:25:50,159 --> 01:25:53,840
with one hypergiant this hyperjunk had

2196
01:25:53,840 --> 01:25:56,159
more than the 10 percent

2197
01:25:56,159 --> 01:25:58,239
of the total traffic inside the isps

2198
01:25:58,239 --> 01:25:59,760
network

2199
01:25:59,760 --> 01:26:02,239
basically there were two kpis to

2200
01:26:02,239 --> 01:26:05,280
consider for the isps we wanted to

2201
01:26:05,280 --> 01:26:07,520
reduce the loan hold traffic and for the

2202
01:26:07,520 --> 01:26:09,360
hyper young we wanted to reduce the

2203
01:26:09,360 --> 01:26:11,199
latency you know this is basically bring

2204
01:26:11,199 --> 01:26:14,159
the server closer to to the user

2205
01:26:14,159 --> 01:26:16,639
um flow director basically uses a

2206
01:26:16,639 --> 01:26:18,639
mapping function that is a combination

2207
01:26:18,639 --> 01:26:20,840
of the path length and at the

2208
01:26:20,840 --> 01:26:24,000
distance and just to

2209
01:26:24,000 --> 01:26:27,040
say that uh flow director basically when

2210
01:26:27,040 --> 01:26:29,440
it's give a pat ranking it is this part

2211
01:26:29,440 --> 01:26:32,400
ranking basically is a suggestion that

2212
01:26:32,400 --> 01:26:34,960
is that it can be

2213
01:26:34,960 --> 01:26:36,719
by the hyper inaudible

2214
01:26:36,719 --> 01:26:40,320
okay next slide please

2215
01:26:40,639 --> 01:26:42,080
so

2216
01:26:42,080 --> 01:26:44,719
now to talk about the benefits for is

2217
01:26:44,719 --> 01:26:47,040
for the isps for example what what you

2218
01:26:47,040 --> 01:26:48,719
can see here is basically the traffic of

2219
01:26:48,719 --> 01:26:51,280
the hyper junk of the backbone and long

2220
01:26:51,280 --> 01:26:52,639
haul links

2221
01:26:52,639 --> 01:26:54,320
and you can see here the traffic on the

2222
01:26:54,320 --> 01:26:56,159
long haul links are you know in constant

2223
01:26:56,159 --> 01:26:58,638
decrease

2224
01:26:59,040 --> 01:27:01,920
basically we deployed a flow directory

2225
01:27:01,920 --> 01:27:05,120
into five phases and one of the

2226
01:27:05,120 --> 01:27:07,280
interesting things is in the whole face

2227
01:27:07,280 --> 01:27:09,440
in the middle and you can see

2228
01:27:09,440 --> 01:27:11,920
in this point the the traffic

2229
01:27:11,920 --> 01:27:13,679
especially in the long haul traffic cost

2230
01:27:13,679 --> 01:27:15,760
goes up this is basically because there

2231
01:27:15,760 --> 01:27:17,040
was a you know a sort of

2232
01:27:17,040 --> 01:27:18,800
misconfiguration

2233
01:27:18,800 --> 01:27:21,840
and the mapping was reset to random

2234
01:27:21,840 --> 01:27:24,719
and but you know when the system were

2235
01:27:24,719 --> 01:27:27,120
enabling the traffic went down

2236
01:27:27,120 --> 01:27:29,040
and at the end you know we have a

2237
01:27:29,040 --> 01:27:31,440
significant reduction especially in the

2238
01:27:31,440 --> 01:27:33,760
lot hall long-haul traffic which is the

2239
01:27:33,760 --> 01:27:35,840
most expensive for the

2240
01:27:35,840 --> 01:27:38,480
for the for the isps

2241
01:27:38,480 --> 01:27:40,639
okay this is basically

2242
01:27:40,639 --> 01:27:42,639
one of the benefits for the isp next

2243
01:27:42,639 --> 01:27:45,040
slide please

2244
01:27:45,040 --> 01:27:47,840
and

2245
01:27:48,000 --> 01:27:49,920
in terms of the benefits for the hyper

2246
01:27:49,920 --> 01:27:51,920
junks like i said before we use the

2247
01:27:51,920 --> 01:27:54,719
distance as a proxy for latency

2248
01:27:54,719 --> 01:27:55,600
so

2249
01:27:55,600 --> 01:27:57,520
in term of

2250
01:27:57,520 --> 01:27:59,760
the distance we reduce the gap that is

2251
01:27:59,760 --> 01:28:02,400
the distance between the server and the

2252
01:28:02,400 --> 01:28:05,600
clients are reducing by about 40 40

2253
01:28:05,600 --> 01:28:06,719
percent

2254
01:28:06,719 --> 01:28:09,440
which means that flow director localizes

2255
01:28:09,440 --> 01:28:11,120
the traffic

2256
01:28:11,120 --> 01:28:13,679
and again you you can see here the in

2257
01:28:13,679 --> 01:28:16,000
the whole face this goes up really high

2258
01:28:16,000 --> 01:28:16,880
you know

2259
01:28:16,880 --> 01:28:18,560
because the mapping got broken but at

2260
01:28:18,560 --> 01:28:19,920
the end when

2261
01:28:19,920 --> 01:28:22,159
when the water restarted the

2262
01:28:22,159 --> 01:28:24,080
the traffic goes

2263
01:28:24,080 --> 01:28:26,400
wet down again

2264
01:28:26,400 --> 01:28:29,520
okay next slide please

2265
01:28:29,520 --> 01:28:32,480
now just to give a little bit more

2266
01:28:32,480 --> 01:28:34,239
information about

2267
01:28:34,239 --> 01:28:35,040
or

2268
01:28:35,040 --> 01:28:36,880
in terms of the health implementation

2269
01:28:36,880 --> 01:28:39,920
and the plumbing experiences

2270
01:28:39,920 --> 01:28:43,600
okay next slide please

2271
01:28:43,600 --> 01:28:45,920
just to to give an overview about what

2272
01:28:45,920 --> 01:28:48,639
was implemented or deployed currently

2273
01:28:48,639 --> 01:28:50,719
currently implemented is the the base

2274
01:28:50,719 --> 01:28:53,040
alto protocol with all the provided

2275
01:28:53,040 --> 01:28:54,880
features you know information resource

2276
01:28:54,880 --> 01:28:57,520
directory netmap filter network network

2277
01:28:57,520 --> 01:28:58,960
map cause map

2278
01:28:58,960 --> 01:29:01,280
it back on services

2279
01:29:01,280 --> 01:29:02,560
etc

2280
01:29:02,560 --> 01:29:05,600
uh uh here are one points that we differ

2281
01:29:05,600 --> 01:29:08,239
from the rfc in at least one point that

2282
01:29:08,239 --> 01:29:10,000
is or eight points are not the ip

2283
01:29:10,000 --> 01:29:12,080
addresses they are the ips nets

2284
01:29:12,080 --> 01:29:13,440
therefore we don't

2285
01:29:13,440 --> 01:29:15,679
we don't identify just

2286
01:29:15,679 --> 01:29:19,120
just one one hot one hose

2287
01:29:19,120 --> 01:29:22,080
okay and and in case of the incremental

2288
01:29:22,080 --> 01:29:24,639
updates

2289
01:29:24,639 --> 01:29:27,040
this was partially implemented because

2290
01:29:27,040 --> 01:29:29,199
to reason it it was

2291
01:29:29,199 --> 01:29:30,719
still a draft when we started the

2292
01:29:30,719 --> 01:29:32,159
implementation

2293
01:29:32,159 --> 01:29:34,560
implementation and also it requires you

2294
01:29:34,560 --> 01:29:36,800
know some structural changes because

2295
01:29:36,800 --> 01:29:40,480
it's you know a little bit quirky

2296
01:29:40,480 --> 01:29:43,440
and in terms of deploy it in production

2297
01:29:43,440 --> 01:29:45,679
we basically have the network map and

2298
01:29:45,679 --> 01:29:48,159
cosma features

2299
01:29:48,159 --> 01:29:52,000
okay next slide please

2300
01:29:52,000 --> 01:29:54,719
and the scenario where we

2301
01:29:54,719 --> 01:29:57,199
we were currently operated or

2302
01:29:57,199 --> 01:29:59,040
it's you know a cdn that wants to

2303
01:29:59,040 --> 01:30:00,080
deliver

2304
01:30:00,080 --> 01:30:03,440
content to the isps customers

2305
01:30:03,440 --> 01:30:05,840
basically we're considering only paths

2306
01:30:05,840 --> 01:30:07,679
from the city and caches towards the

2307
01:30:07,679 --> 01:30:09,360
customer this is because you know the

2308
01:30:09,360 --> 01:30:11,040
main traffic simply

2309
01:30:11,040 --> 01:30:12,880
flow from the cdns to the to the end

2310
01:30:12,880 --> 01:30:14,320
users

2311
01:30:14,320 --> 01:30:16,639
and you know the cdn caches are not only

2312
01:30:16,639 --> 01:30:19,520
embedded into the to the aes of the cdn

2313
01:30:19,520 --> 01:30:22,560
itself but but can also be embedded into

2314
01:30:22,560 --> 01:30:24,080
foreign ideas

2315
01:30:24,080 --> 01:30:26,480
and one here one you know interesting

2316
01:30:26,480 --> 01:30:27,920
question here is how to group the

2317
01:30:27,920 --> 01:30:30,400
prefixes to form the dpids or

2318
01:30:30,400 --> 01:30:32,840
and at the end create the alto alto

2319
01:30:32,840 --> 01:30:36,719
resources next slide please

2320
01:30:38,080 --> 01:30:39,040
okay

2321
01:30:39,040 --> 01:30:41,600
just to quickly

2322
01:30:41,600 --> 01:30:44,800
provide info about the how to

2323
01:30:44,800 --> 01:30:47,600
delete us accumulated with routing

2324
01:30:47,600 --> 01:30:49,520
protocol you know we collect information

2325
01:30:49,520 --> 01:30:52,000
about the links router networks with

2326
01:30:52,000 --> 01:30:53,679
flow information

2327
01:30:53,679 --> 01:30:56,320
alternate for example from netflow we

2328
01:30:56,320 --> 01:30:59,920
can collect english already spoil points

2329
01:30:59,920 --> 01:31:01,920
and we and we can get you know

2330
01:31:01,920 --> 01:31:04,880
information from the network monitoring

2331
01:31:04,880 --> 01:31:07,040
and to try to collect you know

2332
01:31:07,040 --> 01:31:08,719
information about the utilization ban

2333
01:31:08,719 --> 01:31:11,199
with that see etc great next slide

2334
01:31:11,199 --> 01:31:14,199
please

2335
01:31:16,000 --> 01:31:19,760
and okay just for for

2336
01:31:19,760 --> 01:31:20,880
uh

2337
01:31:20,880 --> 01:31:24,400
for the alto uh max calculation we are

2338
01:31:24,400 --> 01:31:25,760
you know attached

2339
01:31:25,760 --> 01:31:28,800
to a large european ixps

2340
01:31:28,800 --> 01:31:30,880
as you can see here there are a lot of

2341
01:31:30,880 --> 01:31:34,159
routers and i beat prefixes

2342
01:31:34,159 --> 01:31:35,360
so

2343
01:31:35,360 --> 01:31:37,440
yes i don't i see you can see all the

2344
01:31:37,440 --> 01:31:39,840
details i don't need to repeat all the

2345
01:31:39,840 --> 01:31:42,840
information next slide

2346
01:31:42,840 --> 01:31:45,760
please okay for the network map we

2347
01:31:45,760 --> 01:31:48,239
basically uh defined three different

2348
01:31:48,239 --> 01:31:51,360
pids internal external and oak net

2349
01:31:51,360 --> 01:31:53,199
of net basically for prefixes from

2350
01:31:53,199 --> 01:31:56,239
directly red asses this means not third

2351
01:31:56,239 --> 01:31:57,679
party traffic on

2352
01:31:57,679 --> 01:32:00,480
on pyramid links

2353
01:32:00,480 --> 01:32:02,718
and

2354
01:32:02,880 --> 01:32:05,280
yeah i see next slide please let's let's

2355
01:32:05,280 --> 01:32:07,840
see the time is going to

2356
01:32:07,840 --> 01:32:09,840
okay for cause map basically we provide

2357
01:32:09,840 --> 01:32:12,080
three different course maps and the hop

2358
01:32:12,080 --> 01:32:13,840
distance that is because in terms of

2359
01:32:13,840 --> 01:32:16,719
number of aes internal hubs but weights

2360
01:32:16,719 --> 01:32:19,040
that is

2361
01:32:19,040 --> 01:32:20,880
basically because according to the

2362
01:32:20,880 --> 01:32:22,800
routing protocol acoustic cops that is

2363
01:32:22,800 --> 01:32:25,120
divided from the delay or beating the

2364
01:32:25,120 --> 01:32:27,600
utilization

2365
01:32:27,600 --> 01:32:28,639
okay

2366
01:32:28,639 --> 01:32:32,960
now i think next slide please

2367
01:32:33,840 --> 01:32:36,719
okay some statistics from our auto

2368
01:32:36,719 --> 01:32:39,280
running server so all the network maps

2369
01:32:39,280 --> 01:32:41,920
because map are updated every five

2370
01:32:41,920 --> 01:32:43,199
minutes

2371
01:32:43,199 --> 01:32:47,199
we have more or less you know 250

2372
01:32:47,199 --> 01:32:48,320
000

2373
01:32:48,320 --> 01:32:51,599
prefixes across

2374
01:32:51,719 --> 01:32:54,159
1700 pids

2375
01:32:54,159 --> 01:32:56,239
and the average map size is about 6

2376
01:32:56,239 --> 01:32:57,840
megabytes

2377
01:32:57,840 --> 01:33:00,400
and in case of the custom cos map matrix

2378
01:33:00,400 --> 01:33:01,840
we have more

2379
01:33:01,840 --> 01:33:05,520
more than one top 3 million of pid pairs

2380
01:33:05,520 --> 01:33:07,199
and with the average size of the cost

2381
01:33:07,199 --> 01:33:11,599
map is more or less 47 megabytes

2382
01:33:12,080 --> 01:33:13,520
okay

2383
01:33:13,520 --> 01:33:15,920
okay we can go

2384
01:33:15,920 --> 01:33:17,360
next okay yeah

2385
01:33:17,360 --> 01:33:19,040
you know obviously we experimented some

2386
01:33:19,040 --> 01:33:20,800
some problem because we are working over

2387
01:33:20,800 --> 01:33:22,639
a large network so

2388
01:33:22,639 --> 01:33:24,639
we have for example and long running for

2389
01:33:24,639 --> 01:33:27,440
the maps calculation process

2390
01:33:27,440 --> 01:33:29,760
in this case a new network map is always

2391
01:33:29,760 --> 01:33:31,600
available first than the current

2392
01:33:31,600 --> 01:33:33,600
available cost map

2393
01:33:33,600 --> 01:33:34,880
and on the other hand there is a

2394
01:33:34,880 --> 01:33:36,880
limitation to the ip addresses in the

2395
01:33:36,880 --> 01:33:38,880
8.con services

2396
01:33:38,880 --> 01:33:41,760
and you know the rfc states that the

2397
01:33:41,760 --> 01:33:43,360
source and destination while the young

2398
01:33:43,360 --> 01:33:45,920
ip addresses however we want to to get

2399
01:33:45,920 --> 01:33:48,159
the cost for certain region

2400
01:33:48,159 --> 01:33:49,679
we are connected to

2401
01:33:49,679 --> 01:33:52,320
to request prefixes for for clients of

2402
01:33:52,320 --> 01:33:53,760
nebs

2403
01:33:53,760 --> 01:33:56,639
next please

2404
01:33:57,280 --> 01:33:58,239
uh

2405
01:33:58,239 --> 01:34:00,480
yeah for try to we consider a set of

2406
01:34:00,480 --> 01:34:01,920
modifications to deal with the previous

2407
01:34:01,920 --> 01:34:03,760
problem for example mechanisms to

2408
01:34:03,760 --> 01:34:06,480
publish all maps together when the last

2409
01:34:06,480 --> 01:34:08,320
the last one is ready on the other hand

2410
01:34:08,320 --> 01:34:10,800
or alto server support prefixes

2411
01:34:10,800 --> 01:34:13,520
in the 8 point cop services and we also

2412
01:34:13,520 --> 01:34:16,000
adding metadata fields like dtl

2413
01:34:16,000 --> 01:34:17,520
timestamps

2414
01:34:17,520 --> 01:34:20,400
in the alto server response

2415
01:34:20,400 --> 01:34:23,600
okay next slides please

2416
01:34:23,600 --> 01:34:26,880
just to quickly summarize that you know

2417
01:34:26,880 --> 01:34:29,520
for us we consider that there is a

2418
01:34:29,520 --> 01:34:32,239
opportunity to play networks

2419
01:34:32,239 --> 01:34:34,239
more efficiently through networking

2420
01:34:34,239 --> 01:34:36,159
application integration

2421
01:34:36,159 --> 01:34:39,040
today i wanted to to briefly show how

2422
01:34:39,040 --> 01:34:41,920
this collaboration works

2423
01:34:41,920 --> 01:34:43,920
in a system that is currently deployed

2424
01:34:43,920 --> 01:34:46,719
and you know it's worth it for both isps

2425
01:34:46,719 --> 01:34:49,360
and hyper junks in terms of net steps

2426
01:34:49,360 --> 01:34:50,960
the ideas you know is to contribute

2427
01:34:50,960 --> 01:34:52,560
without the through implementation and

2428
01:34:52,560 --> 01:34:55,520
deployment experiences to communication

2429
01:34:55,520 --> 01:34:56,880
and while you know i'll be not the

2430
01:34:56,880 --> 01:34:58,560
highest priority activity in terms of

2431
01:34:58,560 --> 01:35:00,320
implementation for us where

2432
01:35:00,320 --> 01:35:02,639
okay richard said we are fully open to

2433
01:35:02,639 --> 01:35:04,080
to use our infrastructure as an

2434
01:35:04,080 --> 01:35:06,800
evaluation or testing environment so

2435
01:35:06,800 --> 01:35:09,840
i think that that's all okay thank you

2436
01:35:09,840 --> 01:35:11,440
so much okay

2437
01:35:11,440 --> 01:35:14,000
danny and i i think glad to see flow

2438
01:35:14,000 --> 01:35:16,159
director has already been moved to a

2439
01:35:16,159 --> 01:35:18,480
production stage so thank you for

2440
01:35:18,480 --> 01:35:20,639
sharing your problem and limitation you

2441
01:35:20,639 --> 01:35:22,960
found in the auto

2442
01:35:22,960 --> 01:35:24,800
implementation i

2443
01:35:24,800 --> 01:35:26,719
actually suggest you

2444
01:35:26,719 --> 01:35:28,400
can take to the list to have some

2445
01:35:28,400 --> 01:35:30,800
discussion it will be good input to the

2446
01:35:30,800 --> 01:35:32,719
auto deployment

2447
01:35:32,719 --> 01:35:33,840
experience

2448
01:35:33,840 --> 01:35:35,840
update yeah

2449
01:35:35,840 --> 01:35:36,560
sure

2450
01:35:36,560 --> 01:35:39,840
thanks okay rachel we don't have time

2451
01:35:39,840 --> 01:35:40,960
for comments

2452
01:35:40,960 --> 01:35:44,000
maybe we can discuss on the channel room

2453
01:35:44,000 --> 01:35:45,199
and

2454
01:35:45,199 --> 01:35:47,440
for remaining uh topic actually we have

2455
01:35:47,440 --> 01:35:49,840
three topics i suggest we actually

2456
01:35:49,840 --> 01:35:53,360
condense each topic to seven minutes so

2457
01:35:53,360 --> 01:35:56,560
the first is luis

2458
01:35:56,560 --> 01:35:58,320
who is you want to share slides by

2459
01:35:58,320 --> 01:36:00,400
yourself or you want me to share i

2460
01:36:00,400 --> 01:36:04,559
prefer you share thank you okay

2461
01:36:05,440 --> 01:36:10,080
and yes i will try to be brief and

2462
01:36:10,080 --> 01:36:11,600
okay great

2463
01:36:11,600 --> 01:36:13,520
okay i can see now the the slides thank

2464
01:36:13,520 --> 01:36:16,080
you chin so the idea here is to present

2465
01:36:16,080 --> 01:36:18,159
this work which is considering aldo's

2466
01:36:18,159 --> 01:36:20,880
itf network exposure function

2467
01:36:20,880 --> 01:36:22,320
and i

2468
01:36:22,320 --> 01:36:24,400
come with contributions also from san

2469
01:36:24,400 --> 01:36:25,440
juan

2470
01:36:25,440 --> 01:36:26,239
so

2471
01:36:26,239 --> 01:36:29,199
yeah next please

2472
01:36:31,040 --> 01:36:32,719
yeah the motivation of this work

2473
01:36:32,719 --> 01:36:34,480
essentially is to to understand that

2474
01:36:34,480 --> 01:36:36,639
negroes are becoming consumable more and

2475
01:36:36,639 --> 01:36:38,320
more by application and services we are

2476
01:36:38,320 --> 01:36:40,000
observing this trend

2477
01:36:40,000 --> 01:36:42,239
and where there are discussions in other

2478
01:36:42,239 --> 01:36:44,320
working groups as well in itf about this

2479
01:36:44,320 --> 01:36:46,159
idea of application network integration

2480
01:36:46,159 --> 01:36:48,320
or network application integration so

2481
01:36:48,320 --> 01:36:49,760
different ways of interchanging and

2482
01:36:49,760 --> 01:36:52,080
exposing information on capabilities in

2483
01:36:52,080 --> 01:36:54,320
one direction or the other

2484
01:36:54,320 --> 01:36:55,920
so

2485
01:36:55,920 --> 01:36:57,360
this is also a trend that is being

2486
01:36:57,360 --> 01:36:59,520
observed in in other initiatives outside

2487
01:36:59,520 --> 01:37:01,840
itf so these new forms of exposing

2488
01:37:01,840 --> 01:37:03,280
capabilities

2489
01:37:03,280 --> 01:37:04,000
and

2490
01:37:04,000 --> 01:37:06,320
yeah the final idea at the end is to

2491
01:37:06,320 --> 01:37:07,600
inform

2492
01:37:07,600 --> 01:37:10,080
or to allow applications to get informed

2493
01:37:10,080 --> 01:37:12,239
about the situations of the network and

2494
01:37:12,239 --> 01:37:13,760
in such a way that these applications

2495
01:37:13,760 --> 01:37:15,040
can uh

2496
01:37:15,040 --> 01:37:18,320
take better and and optimal decisions so

2497
01:37:18,320 --> 01:37:20,320
it has

2498
01:37:20,320 --> 01:37:22,320
i mean moving from the couple way in

2499
01:37:22,320 --> 01:37:23,600
which today

2500
01:37:23,600 --> 01:37:25,360
applications and services are run into

2501
01:37:25,360 --> 01:37:28,320
something much more uh yeah in for base

2502
01:37:28,320 --> 01:37:32,159
so yeah uh trying to avoid that

2503
01:37:32,159 --> 01:37:33,920
inferring or guessing of what network

2504
01:37:33,920 --> 01:37:36,480
capabilities and status and basically

2505
01:37:36,480 --> 01:37:37,440
collect

2506
01:37:37,440 --> 01:37:40,000
information that could be useful for uh

2507
01:37:40,000 --> 01:37:42,320
for the application services to have a

2508
01:37:42,320 --> 01:37:44,960
better optimal criteria for the delivery

2509
01:37:44,960 --> 01:37:46,840
there are a number of examples in in

2510
01:37:46,840 --> 01:37:49,600
other let's say solutions and other

2511
01:37:49,600 --> 01:37:51,760
other networks for instance the 3d

2512
01:37:51,760 --> 01:37:53,760
network special function that somehow is

2513
01:37:53,760 --> 01:37:55,840
an inspiration for this work

2514
01:37:55,840 --> 01:37:58,800
where the network functions can

2515
01:37:58,800 --> 01:38:00,880
be informed application function sorry

2516
01:38:00,880 --> 01:38:03,119
can be informed about

2517
01:38:03,119 --> 01:38:06,159
capabilities of the 3gpp overlay network

2518
01:38:06,159 --> 01:38:08,000
also we have other

2519
01:38:08,000 --> 01:38:10,560
initiatives like the hcm multi-access

2520
01:38:10,560 --> 01:38:13,119
computing apis where these apis can

2521
01:38:13,119 --> 01:38:15,520
provide information about

2522
01:38:15,520 --> 01:38:18,000
the possibility capabilities of the

2523
01:38:18,000 --> 01:38:20,000
access network or uh

2524
01:38:20,000 --> 01:38:21,760
even radio

2525
01:38:21,760 --> 01:38:24,639
information and so so far same night

2526
01:38:24,639 --> 01:38:26,800
story some idea for the oran

2527
01:38:26,800 --> 01:38:28,960
run intelligent controller and so on so

2528
01:38:28,960 --> 01:38:32,639
far next please

2529
01:38:34,719 --> 01:38:36,639
so chin okay thank you

2530
01:38:36,639 --> 01:38:39,199
so um yeah alton in fact was conceived

2531
01:38:39,199 --> 01:38:42,000
from from its inception as um

2532
01:38:42,000 --> 01:38:44,000
as a mechanism for providing information

2533
01:38:44,000 --> 01:38:45,760
to support optimization

2534
01:38:45,760 --> 01:38:48,719
decisions on on applications so in this

2535
01:38:48,719 --> 01:38:50,560
sense alto seems to be very well

2536
01:38:50,560 --> 01:38:52,800
positioned to take this role of regular

2537
01:38:52,800 --> 01:38:55,440
spatial function for itf capabilities

2538
01:38:55,440 --> 01:38:57,280
initially the possibilities or the

2539
01:38:57,280 --> 01:38:59,600
information that can be exposed by alto

2540
01:38:59,600 --> 01:39:01,840
are the topology information that is now

2541
01:39:01,840 --> 01:39:03,440
being expanded to a number of other

2542
01:39:03,440 --> 01:39:05,520
capabilities as chair performance or

2543
01:39:05,520 --> 01:39:07,840
segment in view according to the path

2544
01:39:07,840 --> 01:39:10,800
vector etc etc we saw at the beginning

2545
01:39:10,800 --> 01:39:12,639
some of these possibilities

2546
01:39:12,639 --> 01:39:14,320
so um

2547
01:39:14,320 --> 01:39:16,000
taking into account these

2548
01:39:16,000 --> 01:39:18,320
these capabilities so how we structure

2549
01:39:18,320 --> 01:39:19,920
in the in the draft

2550
01:39:19,920 --> 01:39:21,760
different

2551
01:39:21,760 --> 01:39:24,080
possibilities of information exposure so

2552
01:39:24,080 --> 01:39:25,360
somehow we are collecting a kind of

2553
01:39:25,360 --> 01:39:28,080
catalog based on on existing and

2554
01:39:28,080 --> 01:39:30,239
foreseeing work they have been existing

2555
01:39:30,239 --> 01:39:32,560
work and assuming the what is documented

2556
01:39:32,560 --> 01:39:34,880
in nfcs or documents that will become

2557
01:39:34,880 --> 01:39:36,400
rfc soon

2558
01:39:36,400 --> 01:39:38,639
we could account on a network topology

2559
01:39:38,639 --> 01:39:41,119
associated cosmetics for performance

2560
01:39:41,119 --> 01:39:43,440
metrics this segmented view leveraging

2561
01:39:43,440 --> 01:39:46,639
on the perfector solution and and also

2562
01:39:46,639 --> 01:39:48,639
we could even

2563
01:39:48,639 --> 01:39:50,400
try to cover some other cases that are

2564
01:39:50,400 --> 01:39:51,840
not actually

2565
01:39:51,840 --> 01:39:54,560
documented at all but can be

2566
01:39:54,560 --> 01:39:56,239
straightforward like the dynamic ip

2567
01:39:56,239 --> 01:39:57,679
addressing that could come for instance

2568
01:39:57,679 --> 01:39:59,199
for the control and user plane

2569
01:39:59,199 --> 01:40:00,400
separation

2570
01:40:00,400 --> 01:40:03,280
trend both in fixed and mobile networks

2571
01:40:03,280 --> 01:40:06,840
so dynamic upf instantiation or dynamic

2572
01:40:06,840 --> 01:40:09,119
bng user plane instantiation for

2573
01:40:09,119 --> 01:40:11,440
instance where you will have a dynamic

2574
01:40:11,440 --> 01:40:13,440
allocation of ip addresses to those

2575
01:40:13,440 --> 01:40:14,880
instances

2576
01:40:14,880 --> 01:40:17,280
also we can account on

2577
01:40:17,280 --> 01:40:19,280
on information that is exposed by

2578
01:40:19,280 --> 01:40:20,960
proposed augmentations and here maybe we

2579
01:40:20,960 --> 01:40:23,600
can talk about the optimal service edge

2580
01:40:23,600 --> 01:40:25,119
um

2581
01:40:25,119 --> 01:40:27,119
also the underlying view of for overlays

2582
01:40:27,119 --> 01:40:29,040
the apn this overlays the cellular

2583
01:40:29,040 --> 01:40:31,920
network or the cdn and so there are also

2584
01:40:31,920 --> 01:40:34,159
some individual drafts now in

2585
01:40:34,159 --> 01:40:35,199
in the group

2586
01:40:35,199 --> 01:40:37,280
um

2587
01:40:37,280 --> 01:40:40,320
analyzing those those situations and uh

2588
01:40:40,320 --> 01:40:42,480
also just to commend other information

2589
01:40:42,480 --> 01:40:43,440
uh

2590
01:40:43,440 --> 01:40:44,800
other potential information that could

2591
01:40:44,800 --> 01:40:46,880
be exposed has been also discussed in

2592
01:40:46,880 --> 01:40:48,320
the weekly alto

2593
01:40:48,320 --> 01:40:50,239
meetings with this is not yet documented

2594
01:40:50,239 --> 01:40:52,320
by the idea according with the progress

2595
01:40:52,320 --> 01:40:53,760
of the discussion would be to document

2596
01:40:53,760 --> 01:40:56,159
them and to be included in the draft and

2597
01:40:56,159 --> 01:40:57,920
here we could

2598
01:40:57,920 --> 01:41:00,080
mention for instance multipath approach

2599
01:41:00,080 --> 01:41:02,080
multipa support could be something that

2600
01:41:02,080 --> 01:41:05,040
could be also part of of these exposure

2601
01:41:05,040 --> 01:41:06,560
capabilities

2602
01:41:06,560 --> 01:41:09,360
so next slide please thank you

2603
01:41:09,360 --> 01:41:11,679
so uh here just a view of what could be

2604
01:41:11,679 --> 01:41:14,000
our uh graphically or for illustration

2605
01:41:14,000 --> 01:41:15,840
purposes what could be the the

2606
01:41:15,840 --> 01:41:18,080
interaction between alto as a network

2607
01:41:18,080 --> 01:41:20,639
exposure function and potential

2608
01:41:20,639 --> 01:41:23,040
clients of these capabilities we could

2609
01:41:23,040 --> 01:41:25,119
have external applications here we can

2610
01:41:25,119 --> 01:41:27,520
account on external cdn logic so we

2611
01:41:27,520 --> 01:41:29,520
could consider external cdns like the

2612
01:41:29,520 --> 01:41:31,920
case that danny presented before or

2613
01:41:31,920 --> 01:41:35,199
internal cdns that for instance is the

2614
01:41:35,199 --> 01:41:36,719
the proof of concept that telefonica is

2615
01:41:36,719 --> 01:41:38,880
integrating with the internal own

2616
01:41:38,880 --> 01:41:39,920
internal

2617
01:41:39,920 --> 01:41:42,239
cdn but also we could consider cloud

2618
01:41:42,239 --> 01:41:44,480
application orchestration or cpp network

2619
01:41:44,480 --> 01:41:47,360
sponsor function or whatever other a

2620
01:41:47,360 --> 01:41:49,600
customer external overlay network that

2621
01:41:49,600 --> 01:41:51,119
could leverage on

2622
01:41:51,119 --> 01:41:52,719
itf capability all you have network

2623
01:41:52,719 --> 01:41:55,199
capabilities and also we could have a

2624
01:41:55,199 --> 01:41:57,280
number of internal customers like sdn

2625
01:41:57,280 --> 01:41:59,040
controller

2626
01:41:59,040 --> 01:42:00,960
the cdn logic that also has been

2627
01:42:00,960 --> 01:42:02,800
mentioned and so on so far maybe some

2628
01:42:02,800 --> 01:42:05,360
other sources of of uh

2629
01:42:05,360 --> 01:42:07,280
some other applications sorry

2630
01:42:07,280 --> 01:42:08,560
the idea would be to collect this

2631
01:42:08,560 --> 01:42:10,560
information from the itf network to fit

2632
01:42:10,560 --> 01:42:13,360
the the alto network here we

2633
01:42:13,360 --> 01:42:16,320
we added bb pls but there could be other

2634
01:42:16,320 --> 01:42:19,040
sources also as described before by

2635
01:42:19,040 --> 01:42:21,760
danny maybe as an mp or maybe directly

2636
01:42:21,760 --> 01:42:23,600
collecting information from the nodes

2637
01:42:23,600 --> 01:42:26,000
through a net conjunct models

2638
01:42:26,000 --> 01:42:28,719
next slide please uh chin

2639
01:42:28,719 --> 01:42:30,080
also a

2640
01:42:30,080 --> 01:42:32,800
potential way an alternative way of

2641
01:42:32,800 --> 01:42:34,159
collecting and providing information

2642
01:42:34,159 --> 01:42:35,920
would be to uh

2643
01:42:35,920 --> 01:42:37,920
to to position these applications that

2644
01:42:37,920 --> 01:42:39,840
are internal to the network here we put

2645
01:42:39,840 --> 01:42:41,760
the three epp has internal to the

2646
01:42:41,760 --> 01:42:44,159
network in case that this three evp

2647
01:42:44,159 --> 01:42:46,400
network is also handled by the same

2648
01:42:46,400 --> 01:42:48,719
administrative domain at the end yeah

2649
01:42:48,719 --> 01:42:50,400
essentially the message here is to

2650
01:42:50,400 --> 01:42:52,239
integrate um

2651
01:42:52,239 --> 01:42:54,080
to collect the information from alto and

2652
01:42:54,080 --> 01:42:56,239
to expose this information to external

2653
01:42:56,239 --> 01:42:58,320
or internal customers through the alto

2654
01:42:58,320 --> 01:42:59,920
protocol with or without the stations

2655
01:42:59,920 --> 01:43:02,000
depending on the kind of information so

2656
01:43:02,000 --> 01:43:04,639
next slide next and final slide please

2657
01:43:04,639 --> 01:43:06,159
so the idea would be to collect feedback

2658
01:43:06,159 --> 01:43:08,159
from the working group and for sure we

2659
01:43:08,159 --> 01:43:10,000
are working on preparing an expression

2660
01:43:10,000 --> 01:43:11,920
with more detail on the usage of alto as

2661
01:43:11,920 --> 01:43:14,159
itf network exposure function with a

2662
01:43:14,159 --> 01:43:17,199
final purpose of course positioning

2663
01:43:17,199 --> 01:43:18,960
alto as this

2664
01:43:18,960 --> 01:43:20,320
itfnf

2665
01:43:20,320 --> 01:43:21,840
for

2666
01:43:21,840 --> 01:43:23,440
for for feeding applications and

2667
01:43:23,440 --> 01:43:26,638
services thank you

2668
01:43:26,880 --> 01:43:28,320
good job

2669
01:43:28,320 --> 01:43:29,600
yeah i just want to give you one very

2670
01:43:29,600 --> 01:43:31,280
quick comment i think this is super

2671
01:43:31,280 --> 01:43:32,719
super cool and

2672
01:43:32,719 --> 01:43:34,800
i really wish i hope that there's some

2673
01:43:34,800 --> 01:43:37,440
way we can push this one forward either

2674
01:43:37,440 --> 01:43:40,560
you know we we we we support nef for

2675
01:43:40,560 --> 01:43:42,159
instance gpp or the other world run but

2676
01:43:42,159 --> 01:43:43,679
although i think this should be very

2677
01:43:43,679 --> 01:43:45,600
increasing work i strongly support i'm

2678
01:43:45,600 --> 01:43:48,320
very interested

2679
01:43:48,880 --> 01:43:52,000
okay let's move to the next topic

2680
01:43:52,000 --> 01:43:54,480
loophole

2681
01:43:54,560 --> 01:43:57,199
do you want to share

2682
01:43:58,080 --> 01:44:00,560
a question by myself since the time is

2683
01:44:00,560 --> 01:44:02,800
not so enough and some

2684
01:44:02,800 --> 01:44:05,199
slides

2685
01:44:05,199 --> 01:44:08,719
need to be quickly go through yeah

2686
01:44:15,520 --> 01:44:18,719
so uh my screen available

2687
01:44:18,719 --> 01:44:19,600
yes

2688
01:44:19,600 --> 01:44:21,679
go ahead okay

2689
01:44:21,679 --> 01:44:24,000
um hello everyone this is this is pawnee

2690
01:44:24,000 --> 01:44:27,199
from channel mobile and it's a

2691
01:44:27,199 --> 01:44:29,280
computing aware networking use case of

2692
01:44:29,280 --> 01:44:31,119
auto

2693
01:44:31,119 --> 01:44:33,920
first is the background um about the ict

2694
01:44:33,920 --> 01:44:36,239
infrastructure

2695
01:44:36,239 --> 01:44:38,880
definition um so the service providers

2696
01:44:38,880 --> 01:44:40,639
offering the

2697
01:44:40,639 --> 01:44:42,880
integrated community on the networking

2698
01:44:42,880 --> 01:44:44,880
infrastructure to provide the best use

2699
01:44:44,880 --> 01:44:47,600
case uh user experience such as low

2700
01:44:47,600 --> 01:44:50,639
latency and high reliability and

2701
01:44:50,639 --> 01:44:53,280
optimize utilization of network and

2702
01:44:53,280 --> 01:44:56,080
competing results

2703
01:44:56,080 --> 01:44:57,840
but there are also some challenges of

2704
01:44:57,840 --> 01:44:59,440
edge computing such as

2705
01:44:59,440 --> 01:45:03,280
geographically scattered large number of

2706
01:45:03,280 --> 01:45:04,239
styles

2707
01:45:04,239 --> 01:45:07,600
resource limitation and hedge nearest

2708
01:45:07,600 --> 01:45:10,880
hardware dynamic load and

2709
01:45:10,880 --> 01:45:14,719
others so the problem is that

2710
01:45:15,600 --> 01:45:17,679
all of the challenges are not solvable

2711
01:45:17,679 --> 01:45:20,080
so um solar in computer domain know the

2712
01:45:20,080 --> 01:45:22,480
network domain so we need to find a

2713
01:45:22,480 --> 01:45:24,800
collaborative approach

2714
01:45:24,800 --> 01:45:28,000
um it's the case that we want to see

2715
01:45:28,000 --> 01:45:29,520
is that

2716
01:45:29,520 --> 01:45:31,840
both of the network and computing

2717
01:45:31,840 --> 01:45:32,960
factors

2718
01:45:32,960 --> 01:45:34,800
in the same level to

2719
01:45:34,800 --> 01:45:38,000
influence the user experience

2720
01:45:38,000 --> 01:45:38,800
so

2721
01:45:38,800 --> 01:45:41,920
it's better to have the scheduled and

2722
01:45:41,920 --> 01:45:46,000
among the different sites to find the

2723
01:45:46,000 --> 01:45:48,719
suitable one to offer the

2724
01:45:48,719 --> 01:45:51,040
service

2725
01:45:51,040 --> 01:45:52,639
yeah so

2726
01:45:52,639 --> 01:45:53,600
do

2727
01:45:53,600 --> 01:45:55,360
due to the

2728
01:45:55,360 --> 01:45:57,440
challenges and the use case we put up

2729
01:45:57,440 --> 01:45:59,679
the computing aware networking

2730
01:45:59,679 --> 01:46:02,960
here is a definition of it

2731
01:46:02,960 --> 01:46:04,800
um committee aware networking is

2732
01:46:04,800 --> 01:46:08,000
proposed based on the ambitious network

2733
01:46:08,000 --> 01:46:09,360
connection and

2734
01:46:09,360 --> 01:46:12,239
highly distributed computing results it

2735
01:46:12,239 --> 01:46:15,360
proposed new mechanisms to be aware of

2736
01:46:15,360 --> 01:46:18,320
the distribution and status of

2737
01:46:18,320 --> 01:46:20,560
computer science in network and combined

2738
01:46:20,560 --> 01:46:22,480
service

2739
01:46:22,480 --> 01:46:24,560
and framework of team

2740
01:46:24,560 --> 01:46:27,040
optimal loading and load balance to

2741
01:46:27,040 --> 01:46:29,119
schedule the

2742
01:46:29,119 --> 01:46:31,920
computing and network results

2743
01:46:31,920 --> 01:46:34,159
based on the awareness of service

2744
01:46:34,159 --> 01:46:35,360
requests

2745
01:46:35,360 --> 01:46:37,679
so to improve the efficiency of the

2746
01:46:37,679 --> 01:46:39,920
computing and network results and

2747
01:46:39,920 --> 01:46:42,159
something need to be clarified is that

2748
01:46:42,159 --> 01:46:43,920
the relationship between

2749
01:46:43,920 --> 01:46:48,000
c and the diecast since i had joined the

2750
01:46:48,000 --> 01:46:51,040
uh meeting um as

2751
01:46:51,040 --> 01:46:54,080
previous itf meetings and so diecast is

2752
01:46:54,080 --> 01:46:57,199
a key function of computing where

2753
01:46:57,199 --> 01:46:59,199
loading layer which has a potential

2754
01:46:59,199 --> 01:47:02,159
opportunity to do something at itf

2755
01:47:02,159 --> 01:47:04,880
besides this the cm framework also has a

2756
01:47:04,880 --> 01:47:07,119
network resource layer computing results

2757
01:47:07,119 --> 01:47:10,880
layer convenient service layer and

2758
01:47:10,880 --> 01:47:14,320
the management layer

2759
01:47:15,280 --> 01:47:17,600
and here is the potential relationship

2760
01:47:17,600 --> 01:47:20,400
of computer where networking and auto

2761
01:47:20,400 --> 01:47:22,719
for the framework and the computing

2762
01:47:22,719 --> 01:47:24,800
aware networking can realize awareness

2763
01:47:24,800 --> 01:47:26,159
control and

2764
01:47:26,159 --> 01:47:28,400
scheduling of computing and

2765
01:47:28,400 --> 01:47:31,600
network results and perform dynamic

2766
01:47:31,600 --> 01:47:34,000
and on-demand service scheduling the

2767
01:47:34,000 --> 01:47:36,239
function of computing and the network

2768
01:47:36,239 --> 01:47:38,880
management layer may be realized by or

2769
01:47:38,880 --> 01:47:41,840
by opening some interface with other

2770
01:47:41,840 --> 01:47:42,800
server

2771
01:47:42,800 --> 01:47:45,199
which includes two

2772
01:47:45,199 --> 01:47:46,320
aspects

2773
01:47:46,320 --> 01:47:47,840
so one is

2774
01:47:47,840 --> 01:47:51,280
deployment of cn with auto

2775
01:47:51,280 --> 01:47:53,679
more stable static information should be

2776
01:47:53,679 --> 01:47:55,360
considered in

2777
01:47:55,360 --> 01:47:57,280
service deployment such as network

2778
01:47:57,280 --> 01:47:59,760
topology compute convenient technology

2779
01:47:59,760 --> 01:48:01,600
and so on unlike the request to

2780
01:48:01,600 --> 01:48:02,800
scheduling

2781
01:48:02,800 --> 01:48:05,760
service develop deployment should still

2782
01:48:05,760 --> 01:48:09,280
follow the principle of progressivity

2783
01:48:09,280 --> 01:48:12,239
if the results are insufficient

2784
01:48:12,239 --> 01:48:16,480
the ability can be informed to increase

2785
01:48:16,480 --> 01:48:18,800
the hardware results um so the order can

2786
01:48:18,800 --> 01:48:22,080
be used to transmit information um

2787
01:48:22,080 --> 01:48:24,719
it has a similar idea with the

2788
01:48:24,719 --> 01:48:25,920
draft

2789
01:48:25,920 --> 01:48:28,639
or the service edge and and another

2790
01:48:28,639 --> 01:48:31,679
aspect is scheduling of

2791
01:48:31,679 --> 01:48:33,199
saving waste

2792
01:48:33,199 --> 01:48:34,159
auto

2793
01:48:34,159 --> 01:48:35,600
scheduling needs to consider more

2794
01:48:35,600 --> 01:48:37,600
dynamic information such as mobility

2795
01:48:37,600 --> 01:48:40,320
status of network and computing and

2796
01:48:40,320 --> 01:48:43,040
service requirements and also also can

2797
01:48:43,040 --> 01:48:45,360
help collect real-time network service

2798
01:48:45,360 --> 01:48:47,119
node information

2799
01:48:47,119 --> 01:48:49,760
and providing the best service of

2800
01:48:49,760 --> 01:48:51,440
network and service nodes based on the

2801
01:48:51,440 --> 01:48:53,280
correct information the service

2802
01:48:53,280 --> 01:48:54,320
requirement

2803
01:48:54,320 --> 01:48:55,360
and or

2804
01:48:55,360 --> 01:48:57,199
providing data analysis and policy

2805
01:48:57,199 --> 01:49:00,320
distribution the time node selection uh

2806
01:49:00,320 --> 01:49:01,760
still

2807
01:49:01,760 --> 01:49:04,239
depends on distributed routing such as

2808
01:49:04,239 --> 01:49:06,800
diecast

2809
01:49:06,800 --> 01:49:08,960
and

2810
01:49:08,960 --> 01:49:11,440
we exactly know that satisfy the same

2811
01:49:11,440 --> 01:49:14,880
framework or any components of it might

2812
01:49:14,880 --> 01:49:17,760
not be the substantial workout now but

2813
01:49:17,760 --> 01:49:20,639
the trend of infrastructure definition

2814
01:49:20,639 --> 01:49:22,159
may bring the

2815
01:49:22,159 --> 01:49:23,520
new opportunity

2816
01:49:23,520 --> 01:49:25,599
of it since it can help give the

2817
01:49:25,599 --> 01:49:26,960
suggestion to

2818
01:49:26,960 --> 01:49:29,760
deploy the service node and collect some

2819
01:49:29,760 --> 01:49:31,679
useful information if the network can

2820
01:49:31,679 --> 01:49:33,599
get the computing information it can

2821
01:49:33,599 --> 01:49:36,400
also send to the auto server so here are

2822
01:49:36,400 --> 01:49:37,840
some

2823
01:49:37,840 --> 01:49:40,719
questions received from mailing list and

2824
01:49:40,719 --> 01:49:43,040
question one is uh

2825
01:49:43,040 --> 01:49:45,280
multiple protocol or

2826
01:49:45,280 --> 01:49:47,920
um one protocol to use to collect the

2827
01:49:47,920 --> 01:49:50,400
information uh we think multi-protocol

2828
01:49:50,400 --> 01:49:52,480
will bring the issue of synchronization

2829
01:49:52,480 --> 01:49:54,480
which is not easy and cause some

2830
01:49:54,480 --> 01:49:56,560
additional expense

2831
01:49:56,560 --> 01:49:59,440
if the network is determined the network

2832
01:49:59,440 --> 01:50:01,840
may come support the synchronization so

2833
01:50:01,840 --> 01:50:04,320
one protocol may be a right way

2834
01:50:04,320 --> 01:50:07,679
maybe extending bgp can be an option but

2835
01:50:07,679 --> 01:50:10,960
the frequency frequency is a problem

2836
01:50:10,960 --> 01:50:13,679
and another question is that

2837
01:50:13,679 --> 01:50:17,760
to decouple also from the specific syn

2838
01:50:17,760 --> 01:50:19,040
architecture

2839
01:50:19,040 --> 01:50:21,040
it's a good way to

2840
01:50:21,040 --> 01:50:23,920
really and to combine them and also find

2841
01:50:23,920 --> 01:50:24,800
some

2842
01:50:24,800 --> 01:50:26,400
some way to uh

2843
01:50:26,400 --> 01:50:30,159
to solve the problems uh now yeah

2844
01:50:30,159 --> 01:50:33,040
um and

2845
01:50:33,119 --> 01:50:34,960
the last question is that requirements

2846
01:50:34,960 --> 01:50:36,960
of real-time information how to shorten

2847
01:50:36,960 --> 01:50:38,000
the

2848
01:50:38,000 --> 01:50:40,960
period of information refreshment

2849
01:50:40,960 --> 01:50:44,880
measurement so real time is good uh is

2850
01:50:44,880 --> 01:50:47,040
the important factor in the same

2851
01:50:47,040 --> 01:50:49,040
framework and we can find some

2852
01:50:49,040 --> 01:50:51,040
informations in the

2853
01:50:51,040 --> 01:50:52,400
existing rfc

2854
01:50:52,400 --> 01:50:55,199
um the other service may not have the

2855
01:50:55,199 --> 01:50:56,400
um

2856
01:50:56,400 --> 01:50:59,760
so uh real-time

2857
01:50:59,760 --> 01:51:02,960
uh information for the network of the uh

2858
01:51:02,960 --> 01:51:06,239
loading um so it's the it's a potential

2859
01:51:06,239 --> 01:51:08,480
uh challenge or problems to

2860
01:51:08,480 --> 01:51:10,880
uh realize these functions

2861
01:51:10,880 --> 01:51:13,040
um

2862
01:51:13,840 --> 01:51:14,960
so um

2863
01:51:14,960 --> 01:51:17,280
you need to run wrap up

2864
01:51:17,280 --> 01:51:20,239
okay yeah um so it's the last two one

2865
01:51:20,239 --> 01:51:22,719
okay that's all thank you

2866
01:51:22,719 --> 01:51:24,320
okay thanks

2867
01:51:24,320 --> 01:51:26,639
so you standing for input to auto worker

2868
01:51:26,639 --> 01:51:27,920
i think you raised a lot of good

2869
01:51:27,920 --> 01:51:29,840
questions suggest you take it to the

2870
01:51:29,840 --> 01:51:30,719
list

2871
01:51:30,719 --> 01:51:33,040
have some discussion thank you

2872
01:51:33,040 --> 01:51:35,840
okay let's move to the next stop topic

2873
01:51:35,840 --> 01:51:38,800
uh loads the chain

2874
01:51:38,800 --> 01:51:41,840
oh hi i'm going to share my screen

2875
01:51:41,840 --> 01:51:44,180
okay great

2876
01:51:44,180 --> 01:51:46,080
[Music]

2877
01:51:46,080 --> 01:51:49,119
can you send a request

2878
01:51:49,119 --> 01:51:52,080
okay i think i have sent it

2879
01:51:52,080 --> 01:51:54,320
okay

2880
01:51:59,119 --> 01:52:01,840
yeah can you see my screen yes yes go

2881
01:52:01,840 --> 01:52:02,960
ahead

2882
01:52:02,960 --> 01:52:03,840
okay

2883
01:52:03,840 --> 01:52:06,080
let's get started hi i'm jushung from

2884
01:52:06,080 --> 01:52:08,480
microsoft research asia i'm going to

2885
01:52:08,480 --> 01:52:10,480
give a talk on bandwidth estimation on

2886
01:52:10,480 --> 01:52:13,119
openness lab on behalf of openness lab

2887
01:52:13,119 --> 01:52:15,679
community this talk is mainly focus on

2888
01:52:15,679 --> 01:52:18,880
it to introduce the final assassination

2889
01:52:18,880 --> 01:52:21,280
and discuss the possibility to make it

2890
01:52:21,280 --> 01:52:23,599
as a part of auto

2891
01:52:23,599 --> 01:52:26,560
as we know rtc is going very fast

2892
01:52:26,560 --> 01:52:30,639
recently compared to january 2020 the

2893
01:52:30,639 --> 01:52:32,880
active user increased by three times and

2894
01:52:32,880 --> 01:52:34,880
the number of costs and the meeting

2895
01:52:34,880 --> 01:52:37,199
increased by seven to seven

2896
01:52:37,199 --> 01:52:40,480
17.4 times in april

2897
01:52:40,480 --> 01:52:42,639
i think the most important

2898
01:52:42,639 --> 01:52:44,800
indicator reflecting the user experience

2899
01:52:44,800 --> 01:52:47,679
is pcr pro call rate in the figure we

2900
01:52:47,679 --> 01:52:50,159
can know that the number of pool costs

2901
01:52:50,159 --> 01:52:51,119
and

2902
01:52:51,119 --> 01:52:52,719
the pro car rate are increasing

2903
01:52:52,719 --> 01:52:56,239
dramatically when the copy 19 outbreaks

2904
01:52:56,239 --> 01:52:59,679
in u.s are march so it's a very urgent

2905
01:52:59,679 --> 01:53:02,480
for rtc to continue improving our call

2906
01:53:02,480 --> 01:53:05,599
quality to attract more users

2907
01:53:05,599 --> 01:53:07,520
bandwidth estimation actually is one of

2908
01:53:07,520 --> 01:53:09,360
the key reasons of the

2909
01:53:09,360 --> 01:53:11,679
pool call rate in the table we list the

2910
01:53:11,679 --> 01:53:14,880
top 10 reasons for pro call pro 11 cost

2911
01:53:14,880 --> 01:53:16,800
you can you can know that

2912
01:53:16,800 --> 01:53:17,920
uh

2913
01:53:17,920 --> 01:53:20,280
20 uh

2914
01:53:20,280 --> 01:53:23,199
28.9 percent of programming code is

2915
01:53:23,199 --> 01:53:25,760
highly related to bandwidth estimation

2916
01:53:25,760 --> 01:53:26,920
and

2917
01:53:26,920 --> 01:53:30,239
40.9 percent is related to

2918
01:53:30,239 --> 01:53:32,159
bandwidth estimation the problem

2919
01:53:32,159 --> 01:53:34,880
includes the no sounds discord distort

2920
01:53:34,880 --> 01:53:38,000
with audio final background noise

2921
01:53:38,000 --> 01:53:40,719
uh audio delay call dropped

2922
01:53:40,719 --> 01:53:45,360
video low quality and the video freezing

2923
01:53:45,360 --> 01:53:47,520
so there's a question come to us can

2924
01:53:47,520 --> 01:53:49,840
bundles estimation can be a service to

2925
01:53:49,840 --> 01:53:52,239
make everyone contribute contributed to

2926
01:53:52,239 --> 01:53:53,199
it

2927
01:53:53,199 --> 01:53:55,199
let's see the traditional final

2928
01:53:55,199 --> 01:53:57,840
assassination you can see it has many

2929
01:53:57,840 --> 01:54:00,560
interfaces with different modules and

2930
01:54:00,560 --> 01:54:03,040
also for big company the bandwidth

2931
01:54:03,040 --> 01:54:05,199
estimation are proprietary

2932
01:54:05,199 --> 01:54:08,239
that means every company uh has its own

2933
01:54:08,239 --> 01:54:10,000
design and implementation

2934
01:54:10,000 --> 01:54:14,080
uh is kind of closed so it's usually use

2935
01:54:14,080 --> 01:54:17,199
single model for all users and it's hard

2936
01:54:17,199 --> 01:54:20,400
to uh innovate in this area

2937
01:54:20,400 --> 01:54:22,480
so i think we can use the concept of

2938
01:54:22,480 --> 01:54:25,199
auto to make a bandwidth estimation as a

2939
01:54:25,199 --> 01:54:27,280
standard service it can make the

2940
01:54:27,280 --> 01:54:29,599
architecture simpler and

2941
01:54:29,599 --> 01:54:32,239
make the service open it can

2942
01:54:32,239 --> 01:54:34,560
enable more customization and everyone

2943
01:54:34,560 --> 01:54:37,119
can contribute to this service and share

2944
01:54:37,119 --> 01:54:40,159
the technology of the service

2945
01:54:40,159 --> 01:54:42,560
to to boot to boost the innovation

2946
01:54:42,560 --> 01:54:45,199
actually we have a bandwidth as miss

2947
01:54:45,199 --> 01:54:46,719
admits challenge

2948
01:54:46,719 --> 01:54:49,280
on mmc's this year the goal of the

2949
01:54:49,280 --> 01:54:52,320
challenge is to optimize the qoe for

2950
01:54:52,320 --> 01:54:54,960
real-time communication for example the

2951
01:54:54,960 --> 01:54:57,199
video and audio call quality

2952
01:54:57,199 --> 01:54:59,199
and every participant should design

2953
01:54:59,199 --> 01:55:02,000
their bandwidth as an estimation model

2954
01:55:02,000 --> 01:55:04,560
or algorithm to compute our bandwidth

2955
01:55:04,560 --> 01:55:07,840
to estimate the uh the current bandwidth

2956
01:55:07,840 --> 01:55:09,760
based on the network status

2957
01:55:09,760 --> 01:55:13,199
we use network open lab as the

2958
01:55:13,199 --> 01:55:14,320
taskbar

2959
01:55:14,320 --> 01:55:17,040
for this challenge

2960
01:55:17,040 --> 01:55:19,679
uh in the evaluation period actually we

2961
01:55:19,679 --> 01:55:20,560
use

2962
01:55:20,560 --> 01:55:23,760
uh more than 40 run run for schema on

2963
01:55:23,760 --> 01:55:27,040
opennet lab it includes nine videos uh

2964
01:55:27,040 --> 01:55:29,599
three networks including high

2965
01:55:29,599 --> 01:55:32,000
medium and low bandwidth and we have

2966
01:55:32,000 --> 01:55:34,560
five runs per schema in the run in a

2967
01:55:34,560 --> 01:55:37,360
wrong driving way the final score

2968
01:55:37,360 --> 01:55:40,159
is the average average rated sum of the

2969
01:55:40,159 --> 01:55:43,119
video score audio score and the network

2970
01:55:43,119 --> 01:55:44,560
score

2971
01:55:44,560 --> 01:55:46,800
finally the nanny university team is the

2972
01:55:46,800 --> 01:55:51,119
winner and they uh their score is

2973
01:55:51,119 --> 01:55:53,679
78.33

2974
01:55:53,679 --> 01:55:55,119
which is better than the google

2975
01:55:55,119 --> 01:55:58,840
congestion control which is

2976
01:55:58,840 --> 01:56:02,239
71.47 we can see the innovation is very

2977
01:56:02,239 --> 01:56:05,520
promising in the bandwidth estimation

2978
01:56:05,520 --> 01:56:08,800
and we can see we can also see

2979
01:56:08,800 --> 01:56:11,199
bandwidth estimation can be a part of

2980
01:56:11,199 --> 01:56:12,320
the auto

2981
01:56:12,320 --> 01:56:14,800
the figure 1 shows the location of auto

2982
01:56:14,800 --> 01:56:17,599
service and auto clients the server can

2983
01:56:17,599 --> 01:56:20,400
be independent or live with the clients

2984
01:56:20,400 --> 01:56:22,480
the client can request the bandwidth

2985
01:56:22,480 --> 01:56:24,960
bandwidth through the interface actually

2986
01:56:24,960 --> 01:56:27,679
they can use the kind of the standard

2987
01:56:27,679 --> 01:56:29,840
auto interface to communicate

2988
01:56:29,840 --> 01:56:32,400
the potential application can be

2989
01:56:32,400 --> 01:56:35,679
uh rtc such as uh teams

2990
01:56:35,679 --> 01:56:38,880
uh tencent tencent meeting or also some

2991
01:56:38,880 --> 01:56:41,119
other rtc software

2992
01:56:41,119 --> 01:56:42,880
the the

2993
01:56:42,880 --> 01:56:44,639
input could be

2994
01:56:44,639 --> 01:56:47,040
packaged states and the output can be

2995
01:56:47,040 --> 01:56:48,960
the estimate of the

2996
01:56:48,960 --> 01:56:51,440
isomine bandwidth of to the sender of

2997
01:56:51,440 --> 01:56:54,320
course the input output can be changed

2998
01:56:54,320 --> 01:56:57,760
adapt to the need of the application

2999
01:56:57,760 --> 01:56:58,719
uh

3000
01:56:58,719 --> 01:57:01,040
by the way our all of our research

3001
01:57:01,040 --> 01:57:04,400
actually are on the top of opennet lab

3002
01:57:04,400 --> 01:57:07,199
it is a kind of data-centric networking

3003
01:57:07,199 --> 01:57:09,599
research community the community is

3004
01:57:09,599 --> 01:57:12,159
founded by tao uh night top university

3005
01:57:12,159 --> 01:57:13,440
across asia

3006
01:57:13,440 --> 01:57:15,840
including nanjing university packing

3007
01:57:15,840 --> 01:57:18,239
university qinghai university and also

3008
01:57:18,239 --> 01:57:20,719
macro software research asia professor

3009
01:57:20,719 --> 01:57:23,360
timchen is the chair of the community

3010
01:57:23,360 --> 01:57:25,040
this year

3011
01:57:25,040 --> 01:57:27,440
i think uh due to time limitation i

3012
01:57:27,440 --> 01:57:30,080
think i can give a brief introduction of

3013
01:57:30,080 --> 01:57:32,719
overnight lab it actually it provides a

3014
01:57:32,719 --> 01:57:35,119
framework and also heterogeneous nodes

3015
01:57:35,119 --> 01:57:37,599
to achieve the data-centric networking

3016
01:57:37,599 --> 01:57:38,560
research

3017
01:57:38,560 --> 01:57:41,280
and we are building more and more

3018
01:57:41,280 --> 01:57:43,760
uh nodes across asia and we are

3019
01:57:43,760 --> 01:57:44,960
expanding

3020
01:57:44,960 --> 01:57:47,760
the opennet lab to the world worldwide

3021
01:57:47,760 --> 01:57:49,599
to increase the coverage

3022
01:57:49,599 --> 01:57:52,239
yeah thank you

3023
01:57:52,239 --> 01:57:53,599
okay thank you

3024
01:57:53,599 --> 01:57:54,320
so

3025
01:57:54,320 --> 01:57:57,360
much so you want to make a comment

3026
01:57:57,360 --> 01:58:00,880
yes yes hello this is from alibaba and i

3027
01:58:00,880 --> 01:58:02,320
have a question

3028
01:58:02,320 --> 01:58:04,960
so you just mentioned that uh for the

3029
01:58:04,960 --> 01:58:07,440
poor core rate it's forty percent of the

3030
01:58:07,440 --> 01:58:09,440
procore rate is related to the bandwidth

3031
01:58:09,440 --> 01:58:11,679
estimations and i want to know how do

3032
01:58:11,679 --> 01:58:12,400
you

3033
01:58:12,400 --> 01:58:14,880
calculate how do you compute this this

3034
01:58:14,880 --> 01:58:16,880
number how how is this number uh

3035
01:58:16,880 --> 01:58:18,560
computed

3036
01:58:18,560 --> 01:58:20,719
uh actually uh

3037
01:58:20,719 --> 01:58:21,920
we just

3038
01:58:21,920 --> 01:58:22,719
uh

3039
01:58:22,719 --> 01:58:25,199
we we have our actually we have uh uh

3040
01:58:25,199 --> 01:58:26,960
when when you're using teams actually

3041
01:58:26,960 --> 01:58:30,159
you can have some uh you can you can

3042
01:58:30,159 --> 01:58:31,760
have a score

3043
01:58:31,760 --> 01:58:34,800
the user can can mark it as some score

3044
01:58:34,800 --> 01:58:36,239
and we check the

3045
01:58:36,239 --> 01:58:38,320
the bandwidth

3046
01:58:38,320 --> 01:58:40,400
bandwidth estimation

3047
01:58:40,400 --> 01:58:43,040
backlog and and we can compare there are

3048
01:58:43,040 --> 01:58:45,520
some bandwidth variations and

3049
01:58:45,520 --> 01:58:48,080
maybe the bandwidth is not adapt to the

3050
01:58:48,080 --> 01:58:51,519
real real bandwidth

3051
01:58:57,520 --> 01:58:59,599
okay richard

3052
01:58:59,599 --> 01:59:01,280
okay uh

3053
01:59:01,280 --> 01:59:03,040
i think this is a great my question is

3054
01:59:03,040 --> 01:59:05,599
falling suppose we we want to integrate

3055
01:59:05,599 --> 01:59:07,599
this one as a service using auto i think

3056
01:59:07,599 --> 01:59:09,599
the api it's not a media prompt we

3057
01:59:09,599 --> 01:59:12,080
already have it one concern is the

3058
01:59:12,080 --> 01:59:14,480
frequency of the data so currently in

3059
01:59:14,480 --> 01:59:17,440
your current implementation and your

3060
01:59:17,440 --> 01:59:21,040
vwe server what's the frequency that uh

3061
01:59:21,040 --> 01:59:23,119
how much data and at which frequency

3062
01:59:23,119 --> 01:59:24,800
that you your

3063
01:59:24,800 --> 01:59:27,280
dpwe server is sending information to

3064
01:59:27,280 --> 01:59:28,880
the client

3065
01:59:28,880 --> 01:59:30,480
actually uh

3066
01:59:30,480 --> 01:59:31,440
in

3067
01:59:31,440 --> 01:59:33,679
in kind of the

3068
01:59:33,679 --> 01:59:38,560
uh webrtc or or some rtc like this uh we

3069
01:59:38,560 --> 01:59:41,360
exchanged the bandwidth estimation data

3070
01:59:41,360 --> 01:59:42,880
uh in

3071
01:59:42,880 --> 01:59:46,480
i think 200 million seconds

3072
01:59:46,480 --> 01:59:47,599
so basically we're talking about

3073
01:59:47,599 --> 01:59:50,480
potentially if we push auto and to the

3074
01:59:50,480 --> 01:59:51,760
sending information we'll talk about the

3075
01:59:51,760 --> 01:59:53,440
several hundreds or milliseconds

3076
01:59:53,440 --> 01:59:55,679
frequency and that'll be good enough yes

3077
01:59:55,679 --> 01:59:57,840
yes

3078
01:59:57,840 --> 02:00:00,719
got it cool that's very okay

3079
02:00:00,719 --> 02:00:02,080
okay thank you

3080
02:00:02,080 --> 02:00:04,239
thank you richard so we're on time

3081
02:00:04,239 --> 02:00:06,239
actually quickly right here

3082
02:00:06,239 --> 02:00:08,800
thanks for uh mohammed actually uh

3083
02:00:08,800 --> 02:00:11,520
moderate from behind a reminder the time

3084
02:00:11,520 --> 02:00:12,480
limit

3085
02:00:12,480 --> 02:00:14,639
uh thank you for uh

3086
02:00:14,639 --> 02:00:16,719
daniel and and and agent to take a

3087
02:00:16,719 --> 02:00:19,119
minute and thank all the participants

3088
02:00:19,119 --> 02:00:20,880
and uh

3089
02:00:20,880 --> 02:00:25,639
any last words from mad or martin

3090
02:00:28,719 --> 02:00:31,040
no thank you chen

3091
02:00:31,040 --> 02:00:33,440
thank you

3092
02:00:33,920 --> 02:00:35,280
okay

3093
02:00:35,280 --> 02:00:39,880
that's closely the meeting yes thank you

3094
02:01:19,360 --> 02:01:21,440
you

