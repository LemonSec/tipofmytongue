1
00:00:06,080 --> 00:00:08,320
greetings everyone this is the the

2
00:00:08,320 --> 00:00:10,400
deprived working group session for ietf

3
00:00:10,400 --> 00:00:11,679
112.

4
00:00:11,679 --> 00:00:15,360
i believe we're sort of in madrid

5
00:00:15,360 --> 00:00:18,080
if i remember the schedule correctly

6
00:00:18,080 --> 00:00:19,680
we're gonna go ahead and get started my

7
00:00:19,680 --> 00:00:22,000
name is brian haberman and i'm joined by

8
00:00:22,000 --> 00:00:24,480
my illustrious co-chair tim wisinski

9
00:00:24,480 --> 00:00:27,599
and i believe sitting in

10
00:00:28,640 --> 00:00:30,000
i believe sitting in the audience

11
00:00:30,000 --> 00:00:32,238
somewhere is is our uh

12
00:00:32,238 --> 00:00:35,280
our fabulous area director eric so he

13
00:00:35,280 --> 00:00:38,559
can always keep us in line

14
00:00:39,600 --> 00:00:40,559
um

15
00:00:40,559 --> 00:00:42,719
quick quick couple of notes here uh

16
00:00:42,719 --> 00:00:44,399
jabber room is pretty much where it's

17
00:00:44,399 --> 00:00:46,160
always been at the private

18
00:00:46,160 --> 00:00:48,239
ietf.jabra.org

19
00:00:48,239 --> 00:00:52,559
and we'll be keeping minutes in the um

20
00:00:52,559 --> 00:00:53,760
in the in the

21
00:00:53,760 --> 00:00:55,520
through the tools link that's provided

22
00:00:55,520 --> 00:00:56,719
on the page

23
00:00:56,719 --> 00:00:58,960
tim is going to try and keep notes as

24
00:00:58,960 --> 00:01:01,680
much as possible uh but we do have the

25
00:01:01,680 --> 00:01:03,440
ability for anybody else to jump in and

26
00:01:03,440 --> 00:01:04,479
help

27
00:01:04,479 --> 00:01:07,200
if they feel the the interest

28
00:01:07,200 --> 00:01:09,200
um to to make sure that we're we're

29
00:01:09,200 --> 00:01:13,040
getting all the correct action items and

30
00:01:13,040 --> 00:01:15,119
important points down

31
00:01:15,119 --> 00:01:16,159
for

32
00:01:16,159 --> 00:01:18,799
posterity

33
00:01:21,439 --> 00:01:22,880
before we get started a couple of

34
00:01:22,880 --> 00:01:25,680
administrative administration slides

35
00:01:25,680 --> 00:01:27,920
the first one is the notewell

36
00:01:27,920 --> 00:01:29,600
i think everybody who has been to an

37
00:01:29,600 --> 00:01:31,439
ietf meeting

38
00:01:31,439 --> 00:01:34,560
you should be very aware of this and

39
00:01:34,560 --> 00:01:36,960
have read through these documents

40
00:01:36,960 --> 00:01:38,880
they include a number of of important

41
00:01:38,880 --> 00:01:41,600
pieces here including the standards

42
00:01:41,600 --> 00:01:42,560
process

43
00:01:42,560 --> 00:01:44,479
harassment procedures anti-harassment

44
00:01:44,479 --> 00:01:45,759
procedures

45
00:01:45,759 --> 00:01:48,960
copyright processes code of conduct

46
00:01:48,960 --> 00:01:51,040
etc etc so if you have not read this

47
00:01:51,040 --> 00:01:54,880
recently please go do so and

48
00:01:54,880 --> 00:01:56,640
we just promised not to have a pop quiz

49
00:01:56,640 --> 00:01:59,439
at the end for these

50
00:02:01,439 --> 00:02:03,520
other piece of administration

51
00:02:03,520 --> 00:02:06,079
we've been trying to you know push code

52
00:02:06,079 --> 00:02:07,119
of conduct guidelines that have been

53
00:02:07,119 --> 00:02:09,679
documented in rfc 7154

54
00:02:09,679 --> 00:02:12,480
um you know a quick set of of

55
00:02:12,480 --> 00:02:14,560
introductory meta points for this

56
00:02:14,560 --> 00:02:16,239
uh i don't think there's anything here

57
00:02:16,239 --> 00:02:18,959
that is you know of surprise we're

58
00:02:18,959 --> 00:02:21,360
trying to be as inclusive as possible

59
00:02:21,360 --> 00:02:24,800
and basing everything based on our

60
00:02:24,800 --> 00:02:26,000
um

61
00:02:26,000 --> 00:02:28,000
on our best engineering judgment

62
00:02:28,000 --> 00:02:31,360
and um and as tim indicated uh you know

63
00:02:31,360 --> 00:02:32,879
these slides came from from west

64
00:02:32,879 --> 00:02:35,280
hartaker so um thanks to wes for putting

65
00:02:35,280 --> 00:02:36,560
these together for

66
00:02:36,560 --> 00:02:37,920
this working group and other working

67
00:02:37,920 --> 00:02:39,840
groups that probably

68
00:02:39,840 --> 00:02:41,680
pillage you slide this slide at some

69
00:02:41,680 --> 00:02:44,959
point in time this week

70
00:02:46,480 --> 00:02:48,000
so um

71
00:02:48,000 --> 00:02:49,200
our agenda

72
00:02:49,200 --> 00:02:51,680
you know pretty much a standard flow for

73
00:02:51,680 --> 00:02:54,319
the deprived working group um

74
00:02:54,319 --> 00:02:55,680
anybody who has updates they want to

75
00:02:55,680 --> 00:02:57,040
make to the agenda

76
00:02:57,040 --> 00:02:59,120
we'll solicit those in a second

77
00:02:59,120 --> 00:03:01,440
uh we'll go through some updates of

78
00:03:01,440 --> 00:03:03,519
existing current work

79
00:03:03,519 --> 00:03:05,120
and then we'll talk about

80
00:03:05,120 --> 00:03:06,800
current working group business

81
00:03:06,800 --> 00:03:08,400
and then we'll cover any new working

82
00:03:08,400 --> 00:03:10,560
group business that that's been brought

83
00:03:10,560 --> 00:03:14,000
to the to deprive

84
00:03:14,720 --> 00:03:16,080
if you really want to track what's going

85
00:03:16,080 --> 00:03:17,040
on

86
00:03:17,040 --> 00:03:18,640
the data tracker link on the slides will

87
00:03:18,640 --> 00:03:20,959
get you right to the deprive

88
00:03:20,959 --> 00:03:23,280
space show you all the documents and the

89
00:03:23,280 --> 00:03:26,560
progress of all those documents

90
00:03:28,239 --> 00:03:30,400
so for the agenda

91
00:03:30,400 --> 00:03:31,519
first couple of things we're going to

92
00:03:31,519 --> 00:03:34,239
talk about um are going to be um you

93
00:03:34,239 --> 00:03:34,959
know

94
00:03:34,959 --> 00:03:37,760
some some cleanup of some

95
00:03:37,760 --> 00:03:39,200
work that we're trying to advance into

96
00:03:39,200 --> 00:03:41,519
the isg for publication

97
00:03:41,519 --> 00:03:45,200
uh that's the the dns over quick

98
00:03:45,200 --> 00:03:46,560
it's been through working group last

99
00:03:46,560 --> 00:03:47,360
call

100
00:03:47,360 --> 00:03:48,239
and

101
00:03:48,239 --> 00:03:50,000
right now we're having a a side

102
00:03:50,000 --> 00:03:51,920
conversation about

103
00:03:51,920 --> 00:03:54,879
doing an early port allocation of a port

104
00:03:54,879 --> 00:03:56,720
853 for

105
00:03:56,720 --> 00:03:58,159
uh for quick

106
00:03:58,159 --> 00:04:00,480
the the issue we have here

107
00:04:00,480 --> 00:04:01,840
is that

108
00:04:01,840 --> 00:04:03,360
um that port had already been

109
00:04:03,360 --> 00:04:06,720
reallocated for dns over dtls

110
00:04:06,720 --> 00:04:07,680
uh

111
00:04:07,680 --> 00:04:09,920
both the authors of the dns over quick

112
00:04:09,920 --> 00:04:11,519
and the workgroup chairs have been

113
00:04:11,519 --> 00:04:14,480
poking around and we don't seem to be

114
00:04:14,480 --> 00:04:17,040
able to see any implementations of dns

115
00:04:17,040 --> 00:04:18,560
over dtls

116
00:04:18,560 --> 00:04:20,959
and it is an experimental document

117
00:04:20,959 --> 00:04:24,080
so one possibility here is to actually

118
00:04:24,080 --> 00:04:26,800
mark this document as historic

119
00:04:26,800 --> 00:04:28,720
and then reallocate that port for use

120
00:04:28,720 --> 00:04:30,720
for dns over quick

121
00:04:30,720 --> 00:04:33,199
that would be an iesg action

122
00:04:33,199 --> 00:04:36,080
but we would need to you know first

123
00:04:36,080 --> 00:04:38,000
discuss in the working group whether or

124
00:04:38,000 --> 00:04:40,240
not we want to move dns over dtls to

125
00:04:40,240 --> 00:04:41,600
historic

126
00:04:41,600 --> 00:04:43,199
and i don't think we're going to try and

127
00:04:43,199 --> 00:04:45,040
discuss that here we'll probably have

128
00:04:45,040 --> 00:04:46,720
this as a as a point of discussion on

129
00:04:46,720 --> 00:04:48,880
the mailing list or if we have some time

130
00:04:48,880 --> 00:04:50,080
left at the

131
00:04:50,080 --> 00:04:51,520
at the end of the session we could we

132
00:04:51,520 --> 00:04:53,040
could revisit this point if people want

133
00:04:53,040 --> 00:04:57,160
to have a an in-person discussion

134
00:04:57,919 --> 00:05:00,320
and then for the agenda

135
00:05:00,320 --> 00:05:02,560
we'll we'll have um

136
00:05:02,560 --> 00:05:04,960
the uh the authors of the unoff the

137
00:05:04,960 --> 00:05:06,160
authoritative

138
00:05:06,160 --> 00:05:07,680
give their presentation on on what

139
00:05:07,680 --> 00:05:09,039
they've been doing

140
00:05:09,039 --> 00:05:11,039
they do not have slides

141
00:05:11,039 --> 00:05:13,039
and

142
00:05:13,039 --> 00:05:15,520
so they'll just be talking to

143
00:05:15,520 --> 00:05:18,719
points that they want to make

144
00:05:18,800 --> 00:05:21,120
and then going forward we're going to

145
00:05:21,120 --> 00:05:23,120
have a presentation from

146
00:05:23,120 --> 00:05:25,440
joey salazar

147
00:05:25,440 --> 00:05:26,479
on

148
00:05:26,479 --> 00:05:29,199
on some a new draft that they had

149
00:05:29,199 --> 00:05:32,400
they have not actually posted the ietf

150
00:05:32,400 --> 00:05:34,639
um but they have

151
00:05:34,639 --> 00:05:36,639
we have made the github repo

152
00:05:36,639 --> 00:05:40,320
available for for people to review

153
00:05:41,120 --> 00:05:42,639
and then ben is going to talk a little

154
00:05:42,639 --> 00:05:44,880
about a little bit about his ds

155
00:05:44,880 --> 00:05:47,520
glue draft

156
00:05:47,520 --> 00:05:49,600
and then we have a set of drafts that

157
00:05:49,600 --> 00:05:51,759
were just posted to the mailing list

158
00:05:51,759 --> 00:05:54,880
that will be presented by brian dixon

159
00:05:54,880 --> 00:05:56,720
so

160
00:05:56,720 --> 00:05:58,800
at this point i'd like to ask if there

161
00:05:58,800 --> 00:06:01,280
are any any people who who want to see

162
00:06:01,280 --> 00:06:03,759
it change the agenda either

163
00:06:03,759 --> 00:06:06,400
you know a reorganization

164
00:06:06,400 --> 00:06:11,318
add delete what have you

165
00:06:20,560 --> 00:06:23,600
all right hearing nothing then um first

166
00:06:23,600 --> 00:06:26,400
on the agenda is

167
00:06:26,400 --> 00:06:28,160
i assume it's going to be paul to talk

168
00:06:28,160 --> 00:06:29,919
about the unoff to authoritative

169
00:06:29,919 --> 00:06:32,919
document

170
00:06:36,240 --> 00:06:38,240
a good morning at least for those of you

171
00:06:38,240 --> 00:06:40,400
from the west coast

172
00:06:40,400 --> 00:06:43,520
um so we have no slides and we were

173
00:06:43,520 --> 00:06:45,600
allocated 30 minutes but we're going to

174
00:06:45,600 --> 00:06:47,600
use way less than that which is okay

175
00:06:47,600 --> 00:06:50,240
because we would be when i say we i mean

176
00:06:50,240 --> 00:06:51,599
peter and i

177
00:06:51,599 --> 00:06:53,280
would be happy to have

178
00:06:53,280 --> 00:06:55,440
more time to talk about

179
00:06:55,440 --> 00:06:57,120
the next presentation

180
00:06:57,120 --> 00:07:00,319
from joey and dkg

181
00:07:00,319 --> 00:07:02,720
basically the status of the unoff to

182
00:07:02,720 --> 00:07:05,520
authoritative document is we posted the

183
00:07:05,520 --> 00:07:08,080
o4 draft about six weeks ago

184
00:07:08,080 --> 00:07:10,160
we announced it on the mailing list we

185
00:07:10,160 --> 00:07:12,400
asked for comments there's still a few

186
00:07:12,400 --> 00:07:16,240
open issues especially with respect to

187
00:07:16,240 --> 00:07:19,039
how this might interact with a fully

188
00:07:19,039 --> 00:07:20,319
authenticated

189
00:07:20,319 --> 00:07:21,280
system

190
00:07:21,280 --> 00:07:24,080
and we got absolutely no replies so i'm

191
00:07:24,080 --> 00:07:26,639
not sure what that means for now

192
00:07:26,639 --> 00:07:28,479
um but

193
00:07:28,479 --> 00:07:30,960
it either could mean the documents

194
00:07:30,960 --> 00:07:34,160
perfectly stable which seems unlikely or

195
00:07:34,160 --> 00:07:35,680
um that the working group is thinking

196
00:07:35,680 --> 00:07:37,440
about use cases again which would

197
00:07:37,440 --> 00:07:39,840
actually be good i'd like to see more

198
00:07:39,840 --> 00:07:42,319
thought put into use cases um if the

199
00:07:42,319 --> 00:07:44,720
working group is happy with the current

200
00:07:44,720 --> 00:07:46,479
draft with the with unoff to

201
00:07:46,479 --> 00:07:48,400
authoritative o4

202
00:07:48,400 --> 00:07:49,520
um

203
00:07:49,520 --> 00:07:52,319
and the fact that it uses svcb as the

204
00:07:52,319 --> 00:07:54,000
protocol for

205
00:07:54,000 --> 00:07:55,599
tracking

206
00:07:55,599 --> 00:07:58,000
and we have just a vague mention of

207
00:07:58,000 --> 00:08:00,479
probing in there maybe we want more or

208
00:08:00,479 --> 00:08:02,319
maybe the working group wants more if

209
00:08:02,319 --> 00:08:04,639
that's the case then

210
00:08:04,639 --> 00:08:06,639
peter and i have talked about starting

211
00:08:06,639 --> 00:08:08,879
some interop testing

212
00:08:08,879 --> 00:08:11,120
the status currently is that it would be

213
00:08:11,120 --> 00:08:13,599
experimental but if we do a bunch of

214
00:08:13,599 --> 00:08:15,599
interop testing and

215
00:08:15,599 --> 00:08:17,680
developers and operators are happy with

216
00:08:17,680 --> 00:08:19,360
it then it could probably start off on

217
00:08:19,360 --> 00:08:21,039
standards track

218
00:08:21,039 --> 00:08:23,120
on the other hand uh the working group

219
00:08:23,120 --> 00:08:24,400
might want to go in a different

220
00:08:24,400 --> 00:08:26,400
direction with a different use case

221
00:08:26,400 --> 00:08:28,560
such as the unilateral probing that

222
00:08:28,560 --> 00:08:31,039
we're about to hear about

223
00:08:31,039 --> 00:08:32,479
and so

224
00:08:32,479 --> 00:08:34,958
you know we wouldn't want to start doing

225
00:08:34,958 --> 00:08:37,039
interop testing and such if it looked

226
00:08:37,039 --> 00:08:39,279
like that the working group was in fact

227
00:08:39,279 --> 00:08:41,599
interested in a different use case and a

228
00:08:41,599 --> 00:08:43,120
different way to do things

229
00:08:43,120 --> 00:08:46,000
so basically we're waiting on working

230
00:08:46,000 --> 00:08:48,880
group input um

231
00:08:48,880 --> 00:08:50,399
and

232
00:08:50,399 --> 00:08:52,160
we've tried so far and i think we've

233
00:08:52,160 --> 00:08:54,959
been successful at uh keep making

234
00:08:54,959 --> 00:08:57,440
changes in all in every draft forum

235
00:08:57,440 --> 00:08:59,519
based on working group input

236
00:08:59,519 --> 00:09:01,519
you know we started off with doing just

237
00:09:01,519 --> 00:09:03,519
probing and the working group said no we

238
00:09:03,519 --> 00:09:05,600
can't be doing probing because that

239
00:09:05,600 --> 00:09:07,920
won't work in parallel with a fully

240
00:09:07,920 --> 00:09:09,760
authenticated use case so

241
00:09:09,760 --> 00:09:11,760
we included a fully authenticated use

242
00:09:11,760 --> 00:09:14,160
case we took that out when there was

243
00:09:14,160 --> 00:09:16,080
a draft that started to describe the

244
00:09:16,080 --> 00:09:18,160
fully authenticated use case

245
00:09:18,160 --> 00:09:20,720
we took out probing and

246
00:09:20,720 --> 00:09:21,760
were using

247
00:09:21,760 --> 00:09:23,680
svcb

248
00:09:23,680 --> 00:09:25,519
so possibly the working group's just

249
00:09:25,519 --> 00:09:27,440
getting confused with all of our changes

250
00:09:27,440 --> 00:09:28,800
that we've been doing for the working

251
00:09:28,800 --> 00:09:29,600
group

252
00:09:29,600 --> 00:09:31,200
um but

253
00:09:31,200 --> 00:09:33,360
the status is we're waiting on working

254
00:09:33,360 --> 00:09:34,720
group input

255
00:09:34,720 --> 00:09:36,480
and that input could either be please

256
00:09:36,480 --> 00:09:39,519
make these changes in this draft or

257
00:09:39,519 --> 00:09:41,440
um we're looking for a new way of doing

258
00:09:41,440 --> 00:09:43,360
things um and

259
00:09:43,360 --> 00:09:45,680
um such as the

260
00:09:45,680 --> 00:09:47,360
um the one that we're about to hear

261
00:09:47,360 --> 00:09:49,279
which is just fine

262
00:09:49,279 --> 00:09:51,920
peter and i both our desire here is not

263
00:09:51,920 --> 00:09:56,320
to have finished an rfc but to get more

264
00:09:56,320 --> 00:09:58,800
encryption on the internet and the best

265
00:09:58,800 --> 00:10:01,040
way to do that is to have a document

266
00:10:01,040 --> 00:10:03,040
that there are a lot of vendors and

267
00:10:03,040 --> 00:10:05,120
developers behind that's our document

268
00:10:05,120 --> 00:10:07,760
great if it's a different document great

269
00:10:07,760 --> 00:10:08,959
um

270
00:10:08,959 --> 00:10:10,320
i guess i'm pushing for a little bit

271
00:10:10,320 --> 00:10:12,959
more input regardless of what it is

272
00:10:12,959 --> 00:10:15,839
and that's that's all we have until we

273
00:10:15,839 --> 00:10:17,440
hear more on the mailing list there

274
00:10:17,440 --> 00:10:20,720
isn't much we can be doing so

275
00:10:20,720 --> 00:10:22,720
back to you brian and tim or if people

276
00:10:22,720 --> 00:10:25,120
have questions on this that's fine

277
00:10:25,120 --> 00:10:26,720
but

278
00:10:26,720 --> 00:10:28,480
again our preference strong preference

279
00:10:28,480 --> 00:10:30,079
is always to be getting discussion on

280
00:10:30,079 --> 00:10:32,240
the mailing list especially on a

281
00:10:32,240 --> 00:10:34,480
document like this where

282
00:10:34,480 --> 00:10:36,399
there was strong interest in the use

283
00:10:36,399 --> 00:10:38,560
case but also strong pushback against

284
00:10:38,560 --> 00:10:39,760
the use case

285
00:10:39,760 --> 00:10:41,920
mailing list traffic is really the most

286
00:10:41,920 --> 00:10:44,959
valuable here for documenting

287
00:10:44,959 --> 00:10:48,160
what the working group wants

288
00:10:48,480 --> 00:10:49,600
thanks paul

289
00:10:49,600 --> 00:10:51,680
anybody have any comments

290
00:10:51,680 --> 00:10:54,880
or questions for paul

291
00:10:55,440 --> 00:10:57,760
joey

292
00:10:57,760 --> 00:10:59,839
thank you i just wanted to say that um

293
00:10:59,839 --> 00:11:01,600
first uh

294
00:11:01,600 --> 00:11:03,519
apologies a personal level because i

295
00:11:03,519 --> 00:11:06,480
have been meaning to get uh

296
00:11:06,480 --> 00:11:09,040
some input for this draft uh in the

297
00:11:09,040 --> 00:11:12,079
mailing list i will get to it i promise

298
00:11:12,079 --> 00:11:13,920
so in the meantime i just wanted to say

299
00:11:13,920 --> 00:11:15,920
that at least from my perspective and i

300
00:11:15,920 --> 00:11:17,920
believe that dkg shares it and he will

301
00:11:17,920 --> 00:11:20,000
probably talk about this more when he

302
00:11:20,000 --> 00:11:20,959
presents

303
00:11:20,959 --> 00:11:23,760
is that i don't think that is this

304
00:11:23,760 --> 00:11:26,240
should be a question of either or

305
00:11:26,240 --> 00:11:29,600
um i think that the use case the use

306
00:11:29,600 --> 00:11:32,000
case that you guys are working currently

307
00:11:32,000 --> 00:11:35,839
on this draft the unauthorized um

308
00:11:35,839 --> 00:11:38,560
encryption is is good and like the

309
00:11:38,560 --> 00:11:40,800
development of this document shouldn't

310
00:11:40,800 --> 00:11:42,560
or at least from my perspective

311
00:11:42,560 --> 00:11:44,240
i wouldn't like it

312
00:11:44,240 --> 00:11:47,040
to be like trumped by the development of

313
00:11:47,040 --> 00:11:49,839
other use cases i also think that more

314
00:11:49,839 --> 00:11:52,800
encryption internet is is the way to go

315
00:11:52,800 --> 00:11:53,600
uh

316
00:11:53,600 --> 00:11:54,320
so

317
00:11:54,320 --> 00:11:57,120
um like my perspective from for about

318
00:11:57,120 --> 00:11:59,680
the draft that dkg is about to present

319
00:11:59,680 --> 00:12:00,720
is that

320
00:12:00,720 --> 00:12:02,720
we should simply talk about the

321
00:12:02,720 --> 00:12:04,639
different use case scenarios and and

322
00:12:04,639 --> 00:12:05,839
work on them

323
00:12:05,839 --> 00:12:06,800
um

324
00:12:06,800 --> 00:12:10,240
and i think that as we move along

325
00:12:10,240 --> 00:12:12,639
or as we go down that route

326
00:12:12,639 --> 00:12:15,040
we will simply get more clarity

327
00:12:15,040 --> 00:12:17,279
in either all of the use cases or we

328
00:12:17,279 --> 00:12:19,360
will focus on one use case

329
00:12:19,360 --> 00:12:23,040
at a time and then uh yeah

330
00:12:23,040 --> 00:12:24,480
that's just my perspective and i just

331
00:12:24,480 --> 00:12:26,399
wanted to to

332
00:12:26,399 --> 00:12:28,480
make it public thank you

333
00:12:28,480 --> 00:12:29,839
great thank you

334
00:12:29,839 --> 00:12:32,959
and and i do think that us uh rekindling

335
00:12:32,959 --> 00:12:34,880
the use case discussion

336
00:12:34,880 --> 00:12:36,959
on the mailing list without it being

337
00:12:36,959 --> 00:12:40,000
about a particular draft um would be

338
00:12:40,000 --> 00:12:42,000
good um

339
00:12:42,000 --> 00:12:43,600
and i don't want to foreshadow the next

340
00:12:43,600 --> 00:12:46,079
document but um just to be clear peter

341
00:12:46,079 --> 00:12:47,680
and i feel like that their use case is

342
00:12:47,680 --> 00:12:50,000
just fine you know so

343
00:12:50,000 --> 00:12:53,279
um it it's not a one use case is better

344
00:12:53,279 --> 00:12:55,120
than the other it's just our draft has

345
00:12:55,120 --> 00:12:57,760
evolved in a certain way their draft is

346
00:12:57,760 --> 00:13:00,240
starting from um a certain perspective

347
00:13:00,240 --> 00:13:01,440
um

348
00:13:01,440 --> 00:13:02,880
and but

349
00:13:02,880 --> 00:13:03,760
again

350
00:13:03,760 --> 00:13:06,720
we think that we've stated the use case

351
00:13:06,720 --> 00:13:09,360
for the current working group draft as

352
00:13:09,360 --> 00:13:12,000
clearly as we can we're really happy

353
00:13:12,000 --> 00:13:14,240
that they stated their use case very

354
00:13:14,240 --> 00:13:16,240
clearly from the beginning it's not just

355
00:13:16,240 --> 00:13:17,760
hey we have an idea of how to do

356
00:13:17,760 --> 00:13:19,279
something

357
00:13:19,279 --> 00:13:21,839
so i would love to see more on that

358
00:13:21,839 --> 00:13:23,760
maybe the working group does want us to

359
00:13:23,760 --> 00:13:26,160
both go at the same time we're happy to

360
00:13:26,160 --> 00:13:28,720
do that um but we want we need to hear

361
00:13:28,720 --> 00:13:31,519
from the working group

362
00:13:32,160 --> 00:13:35,719
uh brian dixon

363
00:13:36,880 --> 00:13:40,720
obviously i'm presenting later in the

364
00:13:40,720 --> 00:13:41,760
session

365
00:13:41,760 --> 00:13:44,880
um i think the only places there might

366
00:13:44,880 --> 00:13:46,800
be some concern i didn't apply yet on

367
00:13:46,800 --> 00:13:48,399
the mail list was

368
00:13:48,399 --> 00:13:51,920
because i've only just uh done the work

369
00:13:51,920 --> 00:13:53,680
on the

370
00:13:53,680 --> 00:13:54,560
uh

371
00:13:54,560 --> 00:13:56,000
authoritative

372
00:13:56,000 --> 00:13:58,800
sorry authenticated to authoritative

373
00:13:58,800 --> 00:14:00,720
proposal

374
00:14:00,720 --> 00:14:02,320
and it would be premature to comment

375
00:14:02,320 --> 00:14:05,760
until actually i have the uh the drafts

376
00:14:05,760 --> 00:14:08,000
uh ready to to compare

377
00:14:08,000 --> 00:14:08,800
um

378
00:14:08,800 --> 00:14:11,600
and that's really only just been done

379
00:14:11,600 --> 00:14:13,600
plus uh getting feedback from the

380
00:14:13,600 --> 00:14:15,440
working group on

381
00:14:15,440 --> 00:14:18,079
what's in my my drafts um

382
00:14:18,079 --> 00:14:19,600
the only place that i think there is

383
00:14:19,600 --> 00:14:21,680
concern and

384
00:14:21,680 --> 00:14:23,839
i'll address that on the mailing list is

385
00:14:23,839 --> 00:14:25,440
just the um

386
00:14:25,440 --> 00:14:28,320
the differences in signaling uh protocol

387
00:14:28,320 --> 00:14:30,480
wise uh that are

388
00:14:30,480 --> 00:14:33,440
probably not compatible completely or

389
00:14:33,440 --> 00:14:36,959
duplicative um and it might be something

390
00:14:36,959 --> 00:14:38,240
where

391
00:14:38,240 --> 00:14:40,480
switching the the signaling method from

392
00:14:40,480 --> 00:14:44,320
sbcb to what i'm proposing might be

393
00:14:44,320 --> 00:14:45,760
something to consider

394
00:14:45,760 --> 00:14:47,680
uh

395
00:14:47,680 --> 00:14:49,600
what i'm doing the intent is to make it

396
00:14:49,600 --> 00:14:53,279
very quick and easy to pass and adopt so

397
00:14:53,279 --> 00:14:54,800
well we'll see we'll wait for feedback

398
00:14:54,800 --> 00:14:57,199
from the group

399
00:14:57,360 --> 00:14:59,600
um and again yeah thank you thank you

400
00:14:59,600 --> 00:15:01,360
brian but again the working group has to

401
00:15:01,360 --> 00:15:02,560
decide

402
00:15:02,560 --> 00:15:05,040
whether a use case is that the

403
00:15:05,040 --> 00:15:06,720
unauthenticated

404
00:15:06,720 --> 00:15:08,639
um

405
00:15:08,639 --> 00:15:11,600
uh use case needs to be

406
00:15:11,600 --> 00:15:14,079
in aligned with the fully authenticated

407
00:15:14,079 --> 00:15:15,760
use case

408
00:15:15,760 --> 00:15:17,519
we had

409
00:15:17,519 --> 00:15:19,440
we currently are doing that because the

410
00:15:19,440 --> 00:15:21,279
working group asked us to do that about

411
00:15:21,279 --> 00:15:24,560
nine months ago so the current draft has

412
00:15:24,560 --> 00:15:27,120
has that alignment as part of its use

413
00:15:27,120 --> 00:15:29,519
case um but then

414
00:15:29,519 --> 00:15:31,920
the interest in the fully authenticated

415
00:15:31,920 --> 00:15:33,920
fell off at least from the the document

416
00:15:33,920 --> 00:15:34,880
authors

417
00:15:34,880 --> 00:15:37,440
so the working group needs to decide

418
00:15:37,440 --> 00:15:40,720
whether that alignment is important or

419
00:15:40,720 --> 00:15:44,160
not if it is it changes a lot of things

420
00:15:44,160 --> 00:15:46,480
um in the protocol if it's not as

421
00:15:46,480 --> 00:15:48,560
important then

422
00:15:48,560 --> 00:15:50,560
it frees things up and i and again we're

423
00:15:50,560 --> 00:15:51,759
going to see that in the next

424
00:15:51,759 --> 00:15:54,320
presentation

425
00:15:54,320 --> 00:15:57,040
my great thanks

426
00:15:57,920 --> 00:16:00,479
uh eric

427
00:16:03,920 --> 00:16:05,600
hi paul i i wouldn't characterize the

428
00:16:05,600 --> 00:16:06,639
situation quite the way you just

429
00:16:06,639 --> 00:16:08,240
characterized it um i know you started

430
00:16:08,240 --> 00:16:09,199
very excited

431
00:16:09,199 --> 00:16:10,880
i'm using the information in front of me

432
00:16:10,880 --> 00:16:13,839
please give me please give me more

433
00:16:13,839 --> 00:16:16,399
sure um i'm about to

434
00:16:16,399 --> 00:16:17,440
um

435
00:16:17,440 --> 00:16:18,240
uh

436
00:16:18,240 --> 00:16:19,759
i wouldn't say interesting news

437
00:16:19,759 --> 00:16:21,199
from the document authors i would say

438
00:16:21,199 --> 00:16:22,800
interest is remain constant i would say

439
00:16:22,800 --> 00:16:25,120
my estimation of like how likely the

440
00:16:25,120 --> 00:16:26,320
working group to be interested in doing

441
00:16:26,320 --> 00:16:28,480
this has fallen off and so my interest

442
00:16:28,480 --> 00:16:29,920
in community fight about it has also

443
00:16:29,920 --> 00:16:32,480
fallen off so um

444
00:16:32,480 --> 00:16:33,519
like

445
00:16:33,519 --> 00:16:35,839
based on this discussion with um based

446
00:16:35,839 --> 00:16:38,160
on based on how ben's draft is received

447
00:16:38,160 --> 00:16:42,160
um my interest may revive um but um

448
00:16:42,160 --> 00:16:44,560
like as i said at the very beginning

449
00:16:44,560 --> 00:16:46,959
um i'm interested in doing something

450
00:16:46,959 --> 00:16:48,079
here but i'm not interested to spend the

451
00:16:48,079 --> 00:16:49,920
next five years of life arguing about it

452
00:16:49,920 --> 00:16:51,199
and so to the extent to which the

453
00:16:51,199 --> 00:16:52,560
working group wants to do something i'm

454
00:16:52,560 --> 00:16:54,240
prepared to like do that work

455
00:16:54,240 --> 00:16:56,000
but i'm not interested in spending a lot

456
00:16:56,000 --> 00:16:57,199
of time trying to sell the working group

457
00:16:57,199 --> 00:16:58,240
on it which is a position from the

458
00:16:58,240 --> 00:17:00,720
beginning so um so like since now i

459
00:17:00,720 --> 00:17:01,759
think we're clear on the situation for

460
00:17:01,759 --> 00:17:04,640
the authors okay thank yeah and and very

461
00:17:04,640 --> 00:17:07,119
fair point is that that you know we had

462
00:17:07,119 --> 00:17:09,280
some good input on your draft and then

463
00:17:09,280 --> 00:17:11,520
it fell off and yes there is the

464
00:17:11,520 --> 00:17:13,199
question of

465
00:17:13,199 --> 00:17:15,280
and peter and i are feeling this as well

466
00:17:15,280 --> 00:17:16,799
of how much are we supposed to be

467
00:17:16,799 --> 00:17:18,959
selling is it worth worthwhile doing the

468
00:17:18,959 --> 00:17:21,599
selling and i totally hear you on the

469
00:17:21,599 --> 00:17:23,359
not wanting to spend time on doing

470
00:17:23,359 --> 00:17:26,319
selling so great

471
00:17:29,760 --> 00:17:32,559
all right so i guess the question i have

472
00:17:32,559 --> 00:17:34,960
yeah sorry sorry go ahead brian oh sure

473
00:17:34,960 --> 00:17:36,880
sorry paul yeah i don't see anybody else

474
00:17:36,880 --> 00:17:39,120
in the queue um so i so i think there's

475
00:17:39,120 --> 00:17:41,039
a couple of different ways

476
00:17:41,039 --> 00:17:43,039
that i could see going here

477
00:17:43,039 --> 00:17:44,880
and i'd like to get your opinion on them

478
00:17:44,880 --> 00:17:48,000
you know one is is to do a working group

479
00:17:48,000 --> 00:17:49,919
last call to make sure that people are

480
00:17:49,919 --> 00:17:51,280
at least happy with what's been

481
00:17:51,280 --> 00:17:54,559
specified in the document today

482
00:17:54,559 --> 00:17:57,919
but i think at that point it would be

483
00:17:57,919 --> 00:17:59,679
you know essentially using a process

484
00:17:59,679 --> 00:18:01,600
from other working groups where if we're

485
00:18:01,600 --> 00:18:03,600
happy with the version that goes through

486
00:18:03,600 --> 00:18:04,799
that working group last call we would

487
00:18:04,799 --> 00:18:06,160
just mark it as ready for

488
00:18:06,160 --> 00:18:08,960
experimentation it wouldn't advance

489
00:18:08,960 --> 00:18:10,559
we would just keep it

490
00:18:10,559 --> 00:18:13,039
in a steady state

491
00:18:13,039 --> 00:18:15,360
and mark it some way that it's um it's

492
00:18:15,360 --> 00:18:18,559
the stable version for experimentation

493
00:18:18,559 --> 00:18:19,919
um

494
00:18:19,919 --> 00:18:23,360
the the the other option would be to

495
00:18:23,360 --> 00:18:24,559
uh then

496
00:18:24,559 --> 00:18:26,480
um the other option would be to

497
00:18:26,480 --> 00:18:27,200
to

498
00:18:27,200 --> 00:18:28,559
hold off on doing that kind of working

499
00:18:28,559 --> 00:18:30,480
group last call and do more of that use

500
00:18:30,480 --> 00:18:32,320
case discussion that you've

501
00:18:32,320 --> 00:18:33,760
talked about

502
00:18:33,760 --> 00:18:35,679
um

503
00:18:35,679 --> 00:18:37,919
do you have a brian and to be fair that

504
00:18:37,919 --> 00:18:40,160
you talked about very early on

505
00:18:40,160 --> 00:18:42,240
we're following your lead on trying to

506
00:18:42,240 --> 00:18:44,400
do that oh no no right i'm just saying

507
00:18:44,400 --> 00:18:46,240
with what you mentioned today is where i

508
00:18:46,240 --> 00:18:49,280
was going right um you know my concern

509
00:18:49,280 --> 00:18:51,120
there is is that you know we seem to

510
00:18:51,120 --> 00:18:52,080
have

511
00:18:52,080 --> 00:18:53,440
intermittent

512
00:18:53,440 --> 00:18:54,559
interest from other working group

513
00:18:54,559 --> 00:18:57,120
participants to do that

514
00:18:57,120 --> 00:18:59,039
and so i'm just curious as do you have a

515
00:18:59,039 --> 00:19:00,320
preference for one of those two

516
00:19:00,320 --> 00:19:01,919
approaches

517
00:19:01,919 --> 00:19:04,559
as as an immediate next step

518
00:19:04,559 --> 00:19:06,880
um i'll speak for myself and maybe peter

519
00:19:06,880 --> 00:19:08,400
will get in the queue

520
00:19:08,400 --> 00:19:11,840
i prefer the second one i prefer that we

521
00:19:11,840 --> 00:19:14,160
don't say that this is finished uh for

522
00:19:14,160 --> 00:19:18,000
two reasons one is it only vaguely hints

523
00:19:18,000 --> 00:19:20,960
at the use of ds glue and

524
00:19:20,960 --> 00:19:22,799
we haven't gone far with ds glue and

525
00:19:22,799 --> 00:19:24,720
such like that or some ds glue

526
00:19:24,720 --> 00:19:26,160
equivalent

527
00:19:26,160 --> 00:19:28,000
maybe some of the stuff that brian's

528
00:19:28,000 --> 00:19:30,080
going to be presenting

529
00:19:30,080 --> 00:19:32,000
so i don't feel that we are actually

530
00:19:32,000 --> 00:19:34,000
complete i don't think that we are even

531
00:19:34,000 --> 00:19:36,960
complete with the stated use case so i

532
00:19:36,960 --> 00:19:40,559
would prefer more use case discussion

533
00:19:40,559 --> 00:19:44,559
um that peter and i can

534
00:19:44,559 --> 00:19:47,120
track and stick into the document and

535
00:19:47,120 --> 00:19:48,960
again the document's sort of waving

536
00:19:48,960 --> 00:19:51,120
around depending as the working group

537
00:19:51,120 --> 00:19:53,039
goes but we're okay with doing that i

538
00:19:53,039 --> 00:19:55,360
would i would prefer that than to have

539
00:19:55,360 --> 00:19:58,640
anyone see a stable document and feel

540
00:19:58,640 --> 00:20:00,799
that they were supposed to be uh

541
00:20:00,799 --> 00:20:02,640
implementing from it given that there

542
00:20:02,640 --> 00:20:05,200
are known holes you know i i i don't

543
00:20:05,200 --> 00:20:07,120
want to say it's stable with holes that

544
00:20:07,120 --> 00:20:09,360
that feels weird to me i don't want

545
00:20:09,360 --> 00:20:12,640
implementers spending their time on it

546
00:20:12,640 --> 00:20:14,480
yeah that's that's fair and i appreciate

547
00:20:14,480 --> 00:20:15,919
that that view of the

548
00:20:15,919 --> 00:20:18,840
of the state of affairs

549
00:20:18,840 --> 00:20:22,000
tim hi thanks thanks thanks brian thanks

550
00:20:22,000 --> 00:20:23,360
paul um

551
00:20:23,360 --> 00:20:25,760
would it help us um and maybe we can get

552
00:20:25,760 --> 00:20:27,360
our 80 to weigh in if we had reviews

553
00:20:27,360 --> 00:20:28,640
from some of the other directorates on

554
00:20:28,640 --> 00:20:31,200
the document like now

555
00:20:31,200 --> 00:20:33,120
while we sort of go through the

556
00:20:33,120 --> 00:20:35,039
experimentation process

557
00:20:35,039 --> 00:20:37,039
just to see if we're covering all our

558
00:20:37,039 --> 00:20:39,200
security bases or things of that nature

559
00:20:39,200 --> 00:20:40,159
right

560
00:20:40,159 --> 00:20:42,240
um

561
00:20:42,240 --> 00:20:44,080
it's just more of an open-ended question

562
00:20:44,080 --> 00:20:46,080
right i don't know my personal feeling

563
00:20:46,080 --> 00:20:49,600
is my personal feeling is no because um

564
00:20:49,600 --> 00:20:51,919
what you're asking is is the

565
00:20:51,919 --> 00:20:53,280
um

566
00:20:53,280 --> 00:20:56,640
is what is specified there uh correct

567
00:20:56,640 --> 00:20:58,880
and good enough and like i said it's got

568
00:20:58,880 --> 00:21:00,960
holes because the working group has had

569
00:21:00,960 --> 00:21:03,360
holes so

570
00:21:03,360 --> 00:21:05,840
for the same reason i don't want to have

571
00:21:05,840 --> 00:21:07,440
implementers spend time on something

572
00:21:07,440 --> 00:21:09,280
that might change i don't want the

573
00:21:09,280 --> 00:21:12,400
directorate to feel like that this is

574
00:21:12,400 --> 00:21:14,159
something that they should be evaluating

575
00:21:14,159 --> 00:21:16,000
if we know it has holes because the

576
00:21:16,000 --> 00:21:18,480
holes as they fill in will certainly add

577
00:21:18,480 --> 00:21:20,400
security properties

578
00:21:20,400 --> 00:21:21,840
i mean i don't want i don't want a

579
00:21:21,840 --> 00:21:24,320
sector review that says this obviously

580
00:21:24,320 --> 00:21:25,600
has holes for security properties

581
00:21:25,600 --> 00:21:28,799
because we know that at the current time

582
00:21:28,799 --> 00:21:32,559
okay thanks paul yeah i get that

583
00:21:33,360 --> 00:21:35,678
eric

584
00:21:35,840 --> 00:21:37,280
i mean i basically you know paul and i

585
00:21:37,280 --> 00:21:38,320
think different about the best technical

586
00:21:38,320 --> 00:21:39,919
approach but i agree upon on the

587
00:21:39,919 --> 00:21:41,679
procedural point like the underlying

588
00:21:41,679 --> 00:21:42,880
problem is that the working group has

589
00:21:42,880 --> 00:21:44,559
not come to consensus on what it wants

590
00:21:44,559 --> 00:21:47,120
and like and so we have a bunch of

591
00:21:47,120 --> 00:21:48,720
proposals with sort of like

592
00:21:48,720 --> 00:21:50,559
various kind of like male levels of

593
00:21:50,559 --> 00:21:54,320
support um and you know and not much

594
00:21:54,320 --> 00:21:57,200
implementer action or or i think uh

595
00:21:57,200 --> 00:21:58,720
progress towards consensus on on the

596
00:21:58,720 --> 00:22:00,880
overall approach and

597
00:22:00,880 --> 00:22:02,799
like i think you know we both in our own

598
00:22:02,799 --> 00:22:04,480
our own ways attempted to like whip some

599
00:22:04,480 --> 00:22:05,760
of that support and and then not really

600
00:22:05,760 --> 00:22:07,679
succeeded and um

601
00:22:07,679 --> 00:22:10,159
and um so i think you know like i think

602
00:22:10,159 --> 00:22:11,840
we understand pretty well what pulsar is

603
00:22:11,840 --> 00:22:13,600
all like i think like also i think we

604
00:22:13,600 --> 00:22:14,880
understand like pretty well what it does

605
00:22:14,880 --> 00:22:16,000
and what security properties are and i

606
00:22:16,000 --> 00:22:18,000
think like you know like there's a i

607
00:22:18,000 --> 00:22:19,120
think you know

608
00:22:19,120 --> 00:22:19,919
that

609
00:22:19,919 --> 00:22:21,120
that that's much clearer than any of the

610
00:22:21,120 --> 00:22:22,400
financial authenticator proposals

611
00:22:22,400 --> 00:22:24,320
obviously but i think like you know like

612
00:22:24,320 --> 00:22:25,919
the like the question is what is the

613
00:22:25,919 --> 00:22:27,120
work we want to move forward with as

614
00:22:27,120 --> 00:22:28,320
like the place where it wants to like

615
00:22:28,320 --> 00:22:30,400
focus its effort for the next year or so

616
00:22:30,400 --> 00:22:31,760
in terms of like

617
00:22:31,760 --> 00:22:33,520
in terms of like in terms of like you

618
00:22:33,520 --> 00:22:36,080
know driving both specification and

619
00:22:36,080 --> 00:22:38,480
rollout and i think until we decide that

620
00:22:38,480 --> 00:22:40,320
like trying to get like any trying to

621
00:22:40,320 --> 00:22:42,640
like run the ietf machinery of like you

622
00:22:42,640 --> 00:22:44,400
know publishing specification we'll have

623
00:22:44,400 --> 00:22:46,320
the same sort of like well what well you

624
00:22:46,320 --> 00:22:48,400
know we'll we will be positioned in in

625
00:22:48,400 --> 00:22:50,320
five years of being like do we would

626
00:22:50,320 --> 00:22:52,159
deprecate the port you know that would

627
00:22:52,159 --> 00:22:53,919
detail us now we deprecate the port that

628
00:22:53,919 --> 00:22:56,640
we like all things like like a new thing

629
00:22:56,640 --> 00:22:57,280
or

630
00:22:57,280 --> 00:22:59,280
or or the thing so i think that that's

631
00:22:59,280 --> 00:23:00,720
that's like like the other way to go

632
00:23:00,720 --> 00:23:02,080
it's like we gotta like get to a point

633
00:23:02,080 --> 00:23:04,080
of consensus and i don't know

634
00:23:04,080 --> 00:23:06,159
like you know or i think the clear

635
00:23:06,159 --> 00:23:07,360
failure by the way would be also an

636
00:23:07,360 --> 00:23:10,159
alternative um you know but i think like

637
00:23:10,159 --> 00:23:11,200
that that

638
00:23:11,200 --> 00:23:13,440
and i i had a better proposal i would on

639
00:23:13,440 --> 00:23:14,720
in terms of like how to get there but i

640
00:23:14,720 --> 00:23:16,640
think like the chairs needed to craft

641
00:23:16,640 --> 00:23:18,720
some sort of way to like get us to that

642
00:23:18,720 --> 00:23:23,720
consensus um or to declare failure

643
00:23:26,240 --> 00:23:28,720
all right uh thanks eric so so what what

644
00:23:28,720 --> 00:23:29,679
tim and i are going to do is we're going

645
00:23:29,679 --> 00:23:31,360
to go off and probably huddle with the

646
00:23:31,360 --> 00:23:32,400
um

647
00:23:32,400 --> 00:23:34,320
with with eric to discuss

648
00:23:34,320 --> 00:23:36,159
ways to try and get this discussion

649
00:23:36,159 --> 00:23:37,840
facilitated

650
00:23:37,840 --> 00:23:39,520
in a way that gets us to a point where

651
00:23:39,520 --> 00:23:40,799
we can actually

652
00:23:40,799 --> 00:23:41,840
determine whether or not there's

653
00:23:41,840 --> 00:23:43,279
consensus on

654
00:23:43,279 --> 00:23:45,200
on any of this stuff because you know

655
00:23:45,200 --> 00:23:47,120
both paul and and eric are right you

656
00:23:47,120 --> 00:23:49,200
know we've been we've been around

657
00:23:49,200 --> 00:23:50,559
on these

658
00:23:50,559 --> 00:23:52,320
you know for a bit over the last few

659
00:23:52,320 --> 00:23:54,400
years and and there are

660
00:23:54,400 --> 00:23:55,840
pockets of support for different

661
00:23:55,840 --> 00:23:57,279
approaches and and i don't think the

662
00:23:57,279 --> 00:23:59,039
working group has a clear consensus on

663
00:23:59,039 --> 00:24:00,799
on any one or two things they want to

664
00:24:00,799 --> 00:24:02,000
work on

665
00:24:02,000 --> 00:24:04,480
so we'll we will um we'll figure out a

666
00:24:04,480 --> 00:24:07,120
way to facilitate this discussion

667
00:24:07,120 --> 00:24:09,520
going forward

668
00:24:09,520 --> 00:24:12,480
all right um next on the agenda is uh

669
00:24:12,480 --> 00:24:14,960
dkg and joey to talk about their new

670
00:24:14,960 --> 00:24:17,960
draft

671
00:24:23,919 --> 00:24:25,760
thanks um

672
00:24:25,760 --> 00:24:26,799
i

673
00:24:26,799 --> 00:24:28,880
uh so are you you're running the slides

674
00:24:28,880 --> 00:24:30,080
brian

675
00:24:30,080 --> 00:24:31,279
yes

676
00:24:31,279 --> 00:24:33,200
great um thanks

677
00:24:33,200 --> 00:24:36,320
so uh joey and i wrote this draft um

678
00:24:36,320 --> 00:24:38,159
i would run video but last time i tried

679
00:24:38,159 --> 00:24:40,640
that my ancient laptop uh started

680
00:24:40,640 --> 00:24:41,840
crapping out on the audio so i'll stick

681
00:24:41,840 --> 00:24:43,679
with audio for now

682
00:24:43,679 --> 00:24:44,960
um

683
00:24:44,960 --> 00:24:46,400
so i'm going to present this uh this is

684
00:24:46,400 --> 00:24:49,279
joint work with with joey um and this is

685
00:24:49,279 --> 00:24:50,559
an unusual

686
00:24:50,559 --> 00:24:51,760
sorry that we haven't posted this

687
00:24:51,760 --> 00:24:53,840
directly to the data tracker uh we sort

688
00:24:53,840 --> 00:24:57,760
of missed the the cut off and then uh i

689
00:24:57,760 --> 00:24:58,799
guess we could have start done at the

690
00:24:58,799 --> 00:25:00,240
beginning of the week but we'll do it

691
00:25:00,240 --> 00:25:01,919
shortly um

692
00:25:01,919 --> 00:25:05,360
we have a link to a gitlab repo

693
00:25:05,360 --> 00:25:08,880
people can follow here next slide please

694
00:25:08,880 --> 00:25:11,120
so the goal here is to talk about

695
00:25:11,120 --> 00:25:13,120
this unusual draft because it's actually

696
00:25:13,120 --> 00:25:14,960
describing no protocol elements

697
00:25:14,960 --> 00:25:17,120
whatsoever it's describing internal

698
00:25:17,120 --> 00:25:18,400
state

699
00:25:18,400 --> 00:25:20,720
and proposed guidance for implementers

700
00:25:20,720 --> 00:25:23,039
for how to

701
00:25:23,039 --> 00:25:25,840
unilaterally probe from the recursive

702
00:25:25,840 --> 00:25:27,840
authori recursive resolver to an

703
00:25:27,840 --> 00:25:29,440
authoritative server

704
00:25:29,440 --> 00:25:32,000
and what so the reason that we were uh

705
00:25:32,000 --> 00:25:33,679
interested in like what does this

706
00:25:33,679 --> 00:25:35,840
actually look like is kind of because we

707
00:25:35,840 --> 00:25:37,279
wanted this

708
00:25:37,279 --> 00:25:38,400
um

709
00:25:38,400 --> 00:25:40,240
opportunistic mechanism to get out of

710
00:25:40,240 --> 00:25:42,559
the way of something that gives you

711
00:25:42,559 --> 00:25:44,799
stronger guarantees

712
00:25:44,799 --> 00:25:46,880
in particular we want to say like

713
00:25:46,880 --> 00:25:48,720
imagine you were a

714
00:25:48,720 --> 00:25:50,720
dns authoritative server

715
00:25:50,720 --> 00:25:52,400
what should you do if you don't want to

716
00:25:52,400 --> 00:25:54,320
risk things getting locked down if you

717
00:25:54,320 --> 00:25:55,919
don't want to risk you know breaking

718
00:25:55,919 --> 00:25:58,559
your setup what can you do that

719
00:25:58,559 --> 00:26:00,880
would be relatively safe to do

720
00:26:00,880 --> 00:26:02,559
without coordinating or signaling to

721
00:26:02,559 --> 00:26:04,159
anyone else that you're doing it and

722
00:26:04,159 --> 00:26:06,559
likewise for a recursive resolver

723
00:26:06,559 --> 00:26:07,840
how could you

724
00:26:07,840 --> 00:26:09,679
probe as you're doing authoritative

725
00:26:09,679 --> 00:26:12,080
queries and end up contri encrypting the

726
00:26:12,080 --> 00:26:13,679
bulk of your traffic even if it doesn't

727
00:26:13,679 --> 00:26:15,919
mean 100 protection and it doesn't mean

728
00:26:15,919 --> 00:26:17,440
protection against active attacks how

729
00:26:17,440 --> 00:26:19,840
can we reduce the visibility to a

730
00:26:19,840 --> 00:26:22,640
passive monitor

731
00:26:22,640 --> 00:26:24,799
and we want this this proposal to really

732
00:26:24,799 --> 00:26:26,400
be out of the way

733
00:26:26,400 --> 00:26:29,279
uh and not interfere with or or provide

734
00:26:29,279 --> 00:26:32,080
sort of conflicting guidance with

735
00:26:32,080 --> 00:26:34,080
a more robust approach along the lines

736
00:26:34,080 --> 00:26:36,640
of like fully authenticated um

737
00:26:36,640 --> 00:26:38,720
potentially with hard fail um and what's

738
00:26:38,720 --> 00:26:40,559
interesting is that if we do this

739
00:26:40,559 --> 00:26:42,240
uh it actually gives us some insight

740
00:26:42,240 --> 00:26:43,840
into what we think the signaling should

741
00:26:43,840 --> 00:26:44,960
look like

742
00:26:44,960 --> 00:26:46,960
for um

743
00:26:46,960 --> 00:26:47,679
uh

744
00:26:47,679 --> 00:26:49,120
for the stronger

745
00:26:49,120 --> 00:26:51,360
uh connection the stronger uh encrypted

746
00:26:51,360 --> 00:26:52,799
and authenticated connection between the

747
00:26:52,799 --> 00:26:54,960
recursive and the authoritative

748
00:26:54,960 --> 00:26:55,919
so

749
00:26:55,919 --> 00:26:57,520
the line i wrote in here is that you

750
00:26:57,520 --> 00:26:59,039
know raise the floor without lowering

751
00:26:59,039 --> 00:27:01,200
the ceiling what can we do to just get

752
00:27:01,200 --> 00:27:02,720
more of the traffic protected against

753
00:27:02,720 --> 00:27:04,640
the passive monitor without getting in

754
00:27:04,640 --> 00:27:08,080
the way of the stronger connections next

755
00:27:08,080 --> 00:27:10,639
slide please

756
00:27:11,679 --> 00:27:13,679
okay so if we start a new probing what

757
00:27:13,679 --> 00:27:15,279
are the things that could go wrong the

758
00:27:15,279 --> 00:27:17,279
draft tries to figure out what we can do

759
00:27:17,279 --> 00:27:20,399
to minimize certain bad things right so

760
00:27:20,399 --> 00:27:22,399
we don't want to see dns query suddenly

761
00:27:22,399 --> 00:27:24,159
become much slower

762
00:27:24,159 --> 00:27:25,520
we don't want to see the recursive

763
00:27:25,520 --> 00:27:28,000
resolver consume you know a thousand

764
00:27:28,000 --> 00:27:29,760
times as many resources or the

765
00:27:29,760 --> 00:27:31,360
authoritatives we don't want to see them

766
00:27:31,360 --> 00:27:33,520
flooded with annoying

767
00:27:33,520 --> 00:27:34,799
overload

768
00:27:34,799 --> 00:27:36,159
um we don't we certainly don't want to

769
00:27:36,159 --> 00:27:38,720
penalize resolvers authoritative servers

770
00:27:38,720 --> 00:27:40,880
that adopt these things and likewise we

771
00:27:40,880 --> 00:27:42,080
don't want to

772
00:27:42,080 --> 00:27:44,640
um we don't we wouldn't want

773
00:27:44,640 --> 00:27:46,960
a recurser that's doing this probing

774
00:27:46,960 --> 00:27:47,840
to

775
00:27:47,840 --> 00:27:50,399
degrade its service to to

776
00:27:50,399 --> 00:27:52,240
in other cases and we certainly don't we

777
00:27:52,240 --> 00:27:54,240
also want to minimize the amount of data

778
00:27:54,240 --> 00:27:56,640
that we accidentally leak

779
00:27:56,640 --> 00:27:58,720
so you know and you know i'm mindful

780
00:27:58,720 --> 00:28:01,279
here that star tls

781
00:28:01,279 --> 00:28:03,039
when we introduced it to smtp and imap

782
00:28:03,039 --> 00:28:04,559
we didn't have a good roadmap out of

783
00:28:04,559 --> 00:28:06,640
that and it's taken us many many many

784
00:28:06,640 --> 00:28:08,480
years far too long

785
00:28:08,480 --> 00:28:10,880
to go from start tls and those protocols

786
00:28:10,880 --> 00:28:12,000
to

787
00:28:12,000 --> 00:28:14,000
stricter transport

788
00:28:14,000 --> 00:28:15,679
so we want to make sure that we don't

789
00:28:15,679 --> 00:28:17,840
you know lock in uh potentially against

790
00:28:17,840 --> 00:28:19,039
protection against passive attacks

791
00:28:19,039 --> 00:28:20,960
that's still vulnerable to active

792
00:28:20,960 --> 00:28:22,480
attackers

793
00:28:22,480 --> 00:28:24,080
so those are the those are the concerns

794
00:28:24,080 --> 00:28:25,200
when you're trying to think about how to

795
00:28:25,200 --> 00:28:26,559
do unilateral probing at least the

796
00:28:26,559 --> 00:28:27,919
concerns that we came up with hopefully

797
00:28:27,919 --> 00:28:29,200
other folks in the working group if they

798
00:28:29,200 --> 00:28:31,440
have other concerns we'll raise them

799
00:28:31,440 --> 00:28:34,240
next slide please

800
00:28:34,640 --> 00:28:36,480
so let me just go into what the draft

801
00:28:36,480 --> 00:28:39,039
suggests as guidance for the different

802
00:28:39,039 --> 00:28:41,200
servers involved we basically say if

803
00:28:41,200 --> 00:28:42,799
you're an authoritative server

804
00:28:42,799 --> 00:28:44,880
do what you can and here's what you can

805
00:28:44,880 --> 00:28:45,679
do

806
00:28:45,679 --> 00:28:48,960
listen with dns over tls on port 853

807
00:28:48,960 --> 00:28:51,600
or listen uh sorry and

808
00:28:51,600 --> 00:28:54,000
listen with dns over quick on udp port

809
00:28:54,000 --> 00:28:55,760
853

810
00:28:55,760 --> 00:28:56,960
we just recommend that you do those

811
00:28:56,960 --> 00:28:59,600
things there's no reason not to do them

812
00:28:59,600 --> 00:29:00,960
you don't need to worry about how you

813
00:29:00,960 --> 00:29:03,120
authenticate you can just offer any old

814
00:29:03,120 --> 00:29:05,679
x510 certificate and if someone comes to

815
00:29:05,679 --> 00:29:08,880
you asking for sni you don't really care

816
00:29:08,880 --> 00:29:10,880
just respond it doesn't matter what the

817
00:29:10,880 --> 00:29:13,760
s is um we looked at

818
00:29:13,760 --> 00:29:15,600
asking the authoritative servers to

819
00:29:15,600 --> 00:29:19,360
opportunistically offer do on port 443

820
00:29:19,360 --> 00:29:20,240
um

821
00:29:20,240 --> 00:29:21,840
but if we did that we need to specify

822
00:29:21,840 --> 00:29:24,320
what the path part of the url would be

823
00:29:24,320 --> 00:29:26,000
and we didn't want to like make up what

824
00:29:26,000 --> 00:29:28,960
a standard path would be for dough so we

825
00:29:28,960 --> 00:29:31,760
just kind of uh left it at dot and doq

826
00:29:31,760 --> 00:29:34,080
if folks i think that what we specified

827
00:29:34,080 --> 00:29:35,600
in the rest of the draft will actually

828
00:29:35,600 --> 00:29:38,159
work fine if we throw doh in there as

829
00:29:38,159 --> 00:29:40,159
well if someone wants to choose an

830
00:29:40,159 --> 00:29:41,600
expected path but we didn't feel

831
00:29:41,600 --> 00:29:43,919
comfortable doing that

832
00:29:43,919 --> 00:29:47,039
so we left it at dot and doq for now

833
00:29:47,039 --> 00:29:49,679
next slide please

834
00:29:49,679 --> 00:29:52,080
so the guidance for the recursers

835
00:29:52,080 --> 00:29:54,480
for the recursive resolvers is uh

836
00:29:54,480 --> 00:29:56,080
significantly more

837
00:29:56,080 --> 00:29:57,600
uh detail than the guidance for

838
00:29:57,600 --> 00:29:59,600
authoritative resolvers because the

839
00:29:59,600 --> 00:30:01,600
recursers are the ones that are where

840
00:30:01,600 --> 00:30:04,240
it's really on them to do the probing um

841
00:30:04,240 --> 00:30:05,679
right the authoritatives just sort of

842
00:30:05,679 --> 00:30:07,600
have to offer it

843
00:30:07,600 --> 00:30:09,679
and then the recursors can try

844
00:30:09,679 --> 00:30:11,200
and so what we've done is we we've

845
00:30:11,200 --> 00:30:13,360
outlined um what we think is a

846
00:30:13,360 --> 00:30:15,760
reasonably complete specification for

847
00:30:15,760 --> 00:30:17,600
the type of internal state that's needed

848
00:30:17,600 --> 00:30:21,120
to probe for dot and or doq

849
00:30:21,120 --> 00:30:23,600
based on the authoritative ip address

850
00:30:23,600 --> 00:30:26,080
so note that this probing is done by ip

851
00:30:26,080 --> 00:30:28,399
address not by ns name

852
00:30:28,399 --> 00:30:30,080
it's also not done by the zone that

853
00:30:30,080 --> 00:30:31,919
you're looking up the probing is

854
00:30:31,919 --> 00:30:34,000
entirely like hey when i connect to this

855
00:30:34,000 --> 00:30:35,520
ip address can i make the connection

856
00:30:35,520 --> 00:30:36,559
work

857
00:30:36,559 --> 00:30:38,799
and that ends up being playing a role in

858
00:30:38,799 --> 00:30:40,559
how this interacts with

859
00:30:40,559 --> 00:30:43,120
uh the authoritative servers

860
00:30:43,120 --> 00:30:45,039
sorry the the str whatever the stronger

861
00:30:45,039 --> 00:30:46,640
proposal ends up being

862
00:30:46,640 --> 00:30:48,880
um i i want to note a similarity here

863
00:30:48,880 --> 00:30:50,799
that this has to the happy eyeballs

864
00:30:50,799 --> 00:30:53,120
guidance so this is not novel for the

865
00:30:53,120 --> 00:30:55,039
itf isn't it's not like

866
00:30:55,039 --> 00:30:56,960
recommending implementation guidance

867
00:30:56,960 --> 00:30:58,720
without specific protocol changes is a

868
00:30:58,720 --> 00:31:00,799
totally novel thing the ietf has

869
00:31:00,799 --> 00:31:02,559
recommended some happy eyeballs work for

870
00:31:02,559 --> 00:31:05,360
ipv4 and ipv6 obviously this is not

871
00:31:05,360 --> 00:31:07,600
exactly the same as happy eyeballs for

872
00:31:07,600 --> 00:31:09,919
ipv4 and ipv6 but it's a similar type of

873
00:31:09,919 --> 00:31:11,919
guidance it says hey

874
00:31:11,919 --> 00:31:14,159
uh you know try these different channels

875
00:31:14,159 --> 00:31:16,480
at once if you get one that works here's

876
00:31:16,480 --> 00:31:18,720
how you should prioritize the one

877
00:31:18,720 --> 00:31:19,919
that's working

878
00:31:19,919 --> 00:31:20,720
um

879
00:31:20,720 --> 00:31:22,880
so we map out like a specific set of

880
00:31:22,880 --> 00:31:24,640
internal state it's relatively minimal

881
00:31:24,640 --> 00:31:26,000
we don't think it's a big burden to

882
00:31:26,000 --> 00:31:29,120
implement um and outlines how to update

883
00:31:29,120 --> 00:31:30,720
that state depending on what you

884
00:31:30,720 --> 00:31:32,799
encounter on the network next slide

885
00:31:32,799 --> 00:31:35,200
please

886
00:31:36,159 --> 00:31:37,919
so um

887
00:31:37,919 --> 00:31:40,000
we have a set of parameters these are

888
00:31:40,000 --> 00:31:41,919
probably supposed to be the easiest

889
00:31:41,919 --> 00:31:42,960
thing would be to make these global

890
00:31:42,960 --> 00:31:46,159
parameters for your recursive resolver

891
00:31:46,159 --> 00:31:48,480
you could again this is unilateral so

892
00:31:48,480 --> 00:31:49,600
you're not negotiating this or

893
00:31:49,600 --> 00:31:50,880
publishing it anywhere these are just

894
00:31:50,880 --> 00:31:52,640
parameters that you might

895
00:31:52,640 --> 00:31:54,799
need to write down someplace and maybe

896
00:31:54,799 --> 00:31:56,399
you want to offer them as configuration

897
00:31:56,399 --> 00:31:59,600
parameters tunable by the administrator

898
00:31:59,600 --> 00:32:00,720
maybe

899
00:32:00,720 --> 00:32:02,480
you want to have distinct parameters

900
00:32:02,480 --> 00:32:04,640
depending on the zone the ip address or

901
00:32:04,640 --> 00:32:06,559
the name server that you're looking up

902
00:32:06,559 --> 00:32:07,919
you could do those things i think the

903
00:32:07,919 --> 00:32:09,440
simplest approach and the goal here is

904
00:32:09,440 --> 00:32:11,360
to provide a simple recommendation if

905
00:32:11,360 --> 00:32:13,200
you just have this as a global

906
00:32:13,200 --> 00:32:14,640
parameters for their cursive resolvers

907
00:32:14,640 --> 00:32:16,480
right so we want to know how long do you

908
00:32:16,480 --> 00:32:18,159
remember that you had success at making

909
00:32:18,159 --> 00:32:19,840
an encrypted connection that we call

910
00:32:19,840 --> 00:32:21,760
that persistence

911
00:32:21,760 --> 00:32:23,440
we want to know how long you avoid

912
00:32:23,440 --> 00:32:26,720
retrying uh encrypted transports

913
00:32:26,720 --> 00:32:28,799
once you've found that none of them work

914
00:32:28,799 --> 00:32:31,200
um and we call that damping and then we

915
00:32:31,200 --> 00:32:33,039
want to know you know if you're trying

916
00:32:33,039 --> 00:32:34,880
encrypted transports because you knew

917
00:32:34,880 --> 00:32:37,039
that they were good and then they start

918
00:32:37,039 --> 00:32:38,960
to fail we want to know how rapidly you

919
00:32:38,960 --> 00:32:41,600
fall back to your text

920
00:32:41,600 --> 00:32:44,320
transport and so we call that timeout

921
00:32:44,320 --> 00:32:45,440
so those are the three different

922
00:32:45,440 --> 00:32:47,679
parameters that we think you need

923
00:32:47,679 --> 00:32:49,279
as a baseline to make this algorithm

924
00:32:49,279 --> 00:32:50,480
work

925
00:32:50,480 --> 00:32:53,840
uh next slide

926
00:32:55,440 --> 00:32:56,640
so

927
00:32:56,640 --> 00:32:57,919
um

928
00:32:57,919 --> 00:33:00,399
i'm not getting into the exact steps the

929
00:33:00,399 --> 00:33:02,720
draft actually outlines fairly detailed

930
00:33:02,720 --> 00:33:04,320
like what do you do when a connection

931
00:33:04,320 --> 00:33:05,679
fails what do you do when you run out of

932
00:33:05,679 --> 00:33:06,960
resources

933
00:33:06,960 --> 00:33:07,760
um

934
00:33:07,760 --> 00:33:08,880
uh

935
00:33:08,880 --> 00:33:10,640
how you know how should you try them in

936
00:33:10,640 --> 00:33:12,399
a happy eyeball sense you open the

937
00:33:12,399 --> 00:33:13,919
connections all at once

938
00:33:13,919 --> 00:33:16,000
you see what one comes through

939
00:33:16,000 --> 00:33:17,840
the clear text will probably give you a

940
00:33:17,840 --> 00:33:21,039
response first but leave the um

941
00:33:21,039 --> 00:33:23,120
you know leave the

942
00:33:23,120 --> 00:33:24,960
attempts at encrypted transport open to

943
00:33:24,960 --> 00:33:27,039
make sure that you have the connection

944
00:33:27,039 --> 00:33:28,960
um it gives you guidance on sort of all

945
00:33:28,960 --> 00:33:30,399
of those steps i'm not going to go into

946
00:33:30,399 --> 00:33:32,000
detail on what that guidance is i hope

947
00:33:32,000 --> 00:33:33,679
people read the draft and correct the

948
00:33:33,679 --> 00:33:35,840
things that joey and i have missed

949
00:33:35,840 --> 00:33:37,679
um or places where we might have gotten

950
00:33:37,679 --> 00:33:39,360
it wrong um

951
00:33:39,360 --> 00:33:41,360
you know the implementers

952
00:33:41,360 --> 00:33:43,519
uh people who who have existing

953
00:33:43,519 --> 00:33:44,799
recursive resolvers could look at that

954
00:33:44,799 --> 00:33:46,320
and tell me probably

955
00:33:46,320 --> 00:33:48,240
um no no you

956
00:33:48,240 --> 00:33:50,720
uh you forgot this particular failure

957
00:33:50,720 --> 00:33:51,600
state

958
00:33:51,600 --> 00:33:53,919
we'd love to get that kind of feedback

959
00:33:53,919 --> 00:33:55,840
but one of the things that outlining

960
00:33:55,840 --> 00:33:58,799
this does is it sort of gives us a clear

961
00:33:58,799 --> 00:34:00,240
sense of

962
00:34:00,240 --> 00:34:02,640
if you wanted to signal which this draft

963
00:34:02,640 --> 00:34:04,720
does not do

964
00:34:04,720 --> 00:34:06,320
what would you need from the signal to

965
00:34:06,320 --> 00:34:09,040
do better than this draft um in

966
00:34:09,040 --> 00:34:10,399
particular so we were looking at the

967
00:34:10,399 --> 00:34:13,199
stuff that paul that paul hoffman wrote

968
00:34:13,199 --> 00:34:15,280
and we we we looked at it and i think we

969
00:34:15,280 --> 00:34:17,040
were saying basically once we're doing

970
00:34:17,040 --> 00:34:18,719
this kind of signaling

971
00:34:18,719 --> 00:34:21,599
um we think you can do better than

972
00:34:21,599 --> 00:34:22,719
um

973
00:34:22,719 --> 00:34:24,399
unilateral probing

974
00:34:24,399 --> 00:34:26,480
and the things you need to do better are

975
00:34:26,480 --> 00:34:28,399
not signaling hey this thing is

976
00:34:28,399 --> 00:34:29,760
available because the way that you

977
00:34:29,760 --> 00:34:31,199
signal hey this thing is available is

978
00:34:31,199 --> 00:34:32,960
you just make it available

979
00:34:32,960 --> 00:34:35,440
right it's just as easy for me to make

980
00:34:35,440 --> 00:34:37,599
one query to the authoritative server on

981
00:34:37,599 --> 00:34:40,879
port 853 or two one on tcp and one on

982
00:34:40,879 --> 00:34:42,000
udp

983
00:34:42,000 --> 00:34:43,679
um and get an answer is this thing

984
00:34:43,679 --> 00:34:45,040
available what we really need from the

985
00:34:45,040 --> 00:34:46,159
signal

986
00:34:46,159 --> 00:34:50,239
is an indicator by the um

987
00:34:50,239 --> 00:34:52,800
by the zone operator that says we do

988
00:34:52,800 --> 00:34:54,159
expect

989
00:34:54,159 --> 00:34:56,159
uh encrypted transport

990
00:34:56,159 --> 00:34:57,920
to be running and we when we expect you

991
00:34:57,920 --> 00:34:59,920
to be able to authenticate to it

992
00:34:59,920 --> 00:35:01,440
we here's how we expect you to

993
00:35:01,440 --> 00:35:03,680
authenticate okay and here's the thing

994
00:35:03,680 --> 00:35:05,040
that you need to authenticate now we

995
00:35:05,040 --> 00:35:06,320
might decide that you don't need to

996
00:35:06,320 --> 00:35:07,760
explicitly mark this in the signal

997
00:35:07,760 --> 00:35:10,160
because you might decide for example

998
00:35:10,160 --> 00:35:11,920
it's only going to work with x 509 it's

999
00:35:11,920 --> 00:35:13,520
only going to work with the ns name

1000
00:35:13,520 --> 00:35:15,280
rather than zone the zone name or

1001
00:35:15,280 --> 00:35:18,160
something like that um this whatever we

1002
00:35:18,160 --> 00:35:20,000
define for how the signal should work

1003
00:35:20,000 --> 00:35:21,920
needs to answer these questions

1004
00:35:21,920 --> 00:35:23,200
um

1005
00:35:23,200 --> 00:35:24,720
but this is information that we need we

1006
00:35:24,720 --> 00:35:26,480
need another one more slide full of

1007
00:35:26,480 --> 00:35:27,839
information that i think we need from

1008
00:35:27,839 --> 00:35:28,839
from a

1009
00:35:28,839 --> 00:35:32,640
signal next slide please

1010
00:35:35,119 --> 00:35:37,040
i okay and

1011
00:35:37,040 --> 00:35:38,000
so

1012
00:35:38,000 --> 00:35:39,520
most critically here we need to know

1013
00:35:39,520 --> 00:35:41,839
whether the zone operator or the name

1014
00:35:41,839 --> 00:35:43,359
server operator depending on where the

1015
00:35:43,359 --> 00:35:46,000
signal gets placed

1016
00:35:46,000 --> 00:35:48,800
whether whether a hard fail

1017
00:35:48,800 --> 00:35:51,040
should be in place by the recurser now

1018
00:35:51,040 --> 00:35:53,280
of course we can signal we'd like you to

1019
00:35:53,280 --> 00:35:54,480
hard fail

1020
00:35:54,480 --> 00:35:56,720
um if you connect and you if you try to

1021
00:35:56,720 --> 00:35:58,960
connect and authenticated strong

1022
00:35:58,960 --> 00:36:01,119
encryption is not available

1023
00:36:01,119 --> 00:36:02,320
um and

1024
00:36:02,320 --> 00:36:04,079
existing resolvers simply won't hard

1025
00:36:04,079 --> 00:36:07,280
fail uh and that's understood right but

1026
00:36:07,280 --> 00:36:09,760
we can signal that we want a hard fail

1027
00:36:09,760 --> 00:36:12,160
in the same way that like mta sts or

1028
00:36:12,160 --> 00:36:14,000
hsts says

1029
00:36:14,000 --> 00:36:15,359
don't bother connecting in the clear

1030
00:36:15,359 --> 00:36:17,359
text i've i've committed to this

1031
00:36:17,359 --> 00:36:19,440
authoritative resolver being

1032
00:36:19,440 --> 00:36:21,520
strong this is but this is about

1033
00:36:21,520 --> 00:36:23,040
like let's think about this from the

1034
00:36:23,040 --> 00:36:24,800
from the outset here so that we don't

1035
00:36:24,800 --> 00:36:26,560
get into another start tls situation

1036
00:36:26,560 --> 00:36:28,079
where we have a decade go by before

1037
00:36:28,079 --> 00:36:30,000
somebody says let's avoid the active

1038
00:36:30,000 --> 00:36:32,160
attacks

1039
00:36:32,160 --> 00:36:33,119
and then

1040
00:36:33,119 --> 00:36:34,640
additionally we probably also want a

1041
00:36:34,640 --> 00:36:37,119
signal that says if secure transport

1042
00:36:37,119 --> 00:36:38,240
fails

1043
00:36:38,240 --> 00:36:39,520
let us know now note that that's

1044
00:36:39,520 --> 00:36:42,320
distinct from hard fail um

1045
00:36:42,320 --> 00:36:43,760
you might want to

1046
00:36:43,760 --> 00:36:46,320
um initially say don't hard fail as an

1047
00:36:46,320 --> 00:36:47,599
authoritative

1048
00:36:47,599 --> 00:36:48,560
and

1049
00:36:48,560 --> 00:36:50,800
just collect reports from people that

1050
00:36:50,800 --> 00:36:53,200
says you know hey i tried encrypted i

1051
00:36:53,200 --> 00:36:54,560
tried to do an encrypted connection that

1052
00:36:54,560 --> 00:36:56,960
was authenticated and i didn't get it so

1053
00:36:56,960 --> 00:36:58,880
it looks a lot like tlsrpt then i see

1054
00:36:58,880 --> 00:37:00,079
you in the queue i'm happy to hear your

1055
00:37:00,079 --> 00:37:02,480
feedback

1056
00:37:04,800 --> 00:37:07,200
all right no i'll wait

1057
00:37:07,200 --> 00:37:11,520
okay um next slide please

1058
00:37:13,599 --> 00:37:14,480
um

1059
00:37:14,480 --> 00:37:15,760
so

1060
00:37:15,760 --> 00:37:17,920
if we think that a signal could have the

1061
00:37:17,920 --> 00:37:19,839
types of details that we just outlined

1062
00:37:19,839 --> 00:37:22,240
in those two past slides the next

1063
00:37:22,240 --> 00:37:24,320
question for unilateral probing is how

1064
00:37:24,320 --> 00:37:26,079
is this going to interact

1065
00:37:26,079 --> 00:37:27,760
um

1066
00:37:27,760 --> 00:37:30,079
uh

1067
00:37:30,480 --> 00:37:31,280
the

1068
00:37:31,280 --> 00:37:32,560
how is this going to interact with the

1069
00:37:32,560 --> 00:37:34,079
strong

1070
00:37:34,079 --> 00:37:37,040
with the strong crypto um

1071
00:37:37,040 --> 00:37:38,079
so

1072
00:37:38,079 --> 00:37:40,079
the signal that we get for strong crypto

1073
00:37:40,079 --> 00:37:41,520
is likely to be bound either to the

1074
00:37:41,520 --> 00:37:44,880
domain that's being queried or to

1075
00:37:44,880 --> 00:37:47,599
uh or to the name server name but the

1076
00:37:47,599 --> 00:37:49,200
probing information that we have is

1077
00:37:49,200 --> 00:37:51,760
bound to ip addresses so there's kind of

1078
00:37:51,760 --> 00:37:54,400
an interesting slight impedance mismatch

1079
00:37:54,400 --> 00:37:55,280
here

1080
00:37:55,280 --> 00:37:56,320
um

1081
00:37:56,320 --> 00:37:57,920
between the

1082
00:37:57,920 --> 00:37:59,280
like basically as we're doing the

1083
00:37:59,280 --> 00:38:00,560
probing we're collecting this

1084
00:38:00,560 --> 00:38:02,800
information and remembering it

1085
00:38:02,800 --> 00:38:04,960
about different authoritative ip

1086
00:38:04,960 --> 00:38:06,960
addresses that we connect to and those

1087
00:38:06,960 --> 00:38:08,640
are so that it doesn't quite match up

1088
00:38:08,640 --> 00:38:10,160
with where we expect the signals to land

1089
00:38:10,160 --> 00:38:12,160
because i think while we have talked in

1090
00:38:12,160 --> 00:38:14,079
this working group about signaling being

1091
00:38:14,079 --> 00:38:16,880
attached to the um

1092
00:38:16,880 --> 00:38:19,680
the reverse lookup that is the in adder

1093
00:38:19,680 --> 00:38:22,079
zone uh i don't think anyone seriously

1094
00:38:22,079 --> 00:38:24,640
thinks that that's a feasible approach

1095
00:38:24,640 --> 00:38:26,079
so there's a weird impedance mismatch we

1096
00:38:26,079 --> 00:38:27,520
have to think about there

1097
00:38:27,520 --> 00:38:28,880
um

1098
00:38:28,880 --> 00:38:30,880
and then the other question is like if

1099
00:38:30,880 --> 00:38:33,680
i've if i've if i get a signal

1100
00:38:33,680 --> 00:38:36,320
should that signal also

1101
00:38:36,320 --> 00:38:38,400
update the probe information that i've

1102
00:38:38,400 --> 00:38:40,400
got and if so how

1103
00:38:40,400 --> 00:38:41,920
so i'm raising these questions because i

1104
00:38:41,920 --> 00:38:43,520
don't have any answers for them but i

1105
00:38:43,520 --> 00:38:44,720
think thinking about it with this

1106
00:38:44,720 --> 00:38:47,680
unilateral way encourages us to sort of

1107
00:38:47,680 --> 00:38:49,599
work through those problems um i see

1108
00:38:49,599 --> 00:38:51,920
brian and eric in the queue i'm happy to

1109
00:38:51,920 --> 00:38:53,200
take you questions i realize there's

1110
00:38:53,200 --> 00:38:54,400
been some stuff going on in the chat

1111
00:38:54,400 --> 00:38:55,440
that i have not had a chance to read

1112
00:38:55,440 --> 00:39:00,599
while presenting brian you want to talk

1113
00:39:08,000 --> 00:39:10,240
i saw briefly

1114
00:39:10,240 --> 00:39:12,480
that brian um

1115
00:39:12,480 --> 00:39:14,079
turned on his audio and then i didn't

1116
00:39:14,079 --> 00:39:15,760
hear anything

1117
00:39:15,760 --> 00:39:17,839
it didn't quite pick up um

1118
00:39:17,839 --> 00:39:20,720
i said uh go ahead uh or i'll get out of

1119
00:39:20,720 --> 00:39:22,800
the queue uh i'm i'm happy to wait for

1120
00:39:22,800 --> 00:39:24,320
the end i think

1121
00:39:24,320 --> 00:39:27,359
the rest of your presentation may be

1122
00:39:27,359 --> 00:39:29,760
have information that i'll be commenting

1123
00:39:29,760 --> 00:39:31,040
on

1124
00:39:31,040 --> 00:39:34,160
uh okay so i see a cue is lining up this

1125
00:39:34,160 --> 00:39:36,480
this uh presentation and this paper i

1126
00:39:36,480 --> 00:39:38,400
think joey and i both intended this as a

1127
00:39:38,400 --> 00:39:39,920
provocation so the fact that we have

1128
00:39:39,920 --> 00:39:42,000
five people in the queue uh suggest we

1129
00:39:42,000 --> 00:39:43,760
may have succeeded

1130
00:39:43,760 --> 00:39:44,880
um yes

1131
00:39:44,880 --> 00:39:46,079
so daniel why don't you just go ahead

1132
00:39:46,079 --> 00:39:47,839
and finish your presentation then we'll

1133
00:39:47,839 --> 00:39:49,760
we'll start working on the queue

1134
00:39:49,760 --> 00:39:53,680
yep sounds good okay next slide please

1135
00:39:55,119 --> 00:39:58,160
um so if we get a signal again uh so so

1136
00:39:58,160 --> 00:39:59,839
one thing that we noted as we were sort

1137
00:39:59,839 --> 00:40:02,560
of sketching out what this uh unilateral

1138
00:40:02,560 --> 00:40:05,119
probing would look like was that uh the

1139
00:40:05,119 --> 00:40:06,800
probe doesn't need to send sni because

1140
00:40:06,800 --> 00:40:08,240
it's not gonna care what the

1141
00:40:08,240 --> 00:40:10,160
authentication looks like it's going to

1142
00:40:10,160 --> 00:40:11,040
do

1143
00:40:11,040 --> 00:40:14,640
a connection and if the tls handshake or

1144
00:40:14,640 --> 00:40:17,040
the quick handshake ends up working

1145
00:40:17,040 --> 00:40:18,800
fine we're good we protect it against

1146
00:40:18,800 --> 00:40:20,400
passive attackers

1147
00:40:20,400 --> 00:40:21,520
anyway

1148
00:40:21,520 --> 00:40:23,520
but a signal connection might send sni

1149
00:40:23,520 --> 00:40:25,280
and that itself might be a privacy leak

1150
00:40:25,280 --> 00:40:27,119
so there's some interesting interactions

1151
00:40:27,119 --> 00:40:28,000
there

1152
00:40:28,000 --> 00:40:29,680
um and then we have

1153
00:40:29,680 --> 00:40:31,280
this final sort of thought experiment is

1154
00:40:31,280 --> 00:40:32,720
is there some situation where a signal

1155
00:40:32,720 --> 00:40:34,560
connection would succeed

1156
00:40:34,560 --> 00:40:36,800
where a probe fails the only thing i

1157
00:40:36,800 --> 00:40:38,560
could think of when i was trying to like

1158
00:40:38,560 --> 00:40:40,240
work through the problem space was a

1159
00:40:40,240 --> 00:40:41,599
situation where

1160
00:40:41,599 --> 00:40:43,760
the signal connection does send an sni

1161
00:40:43,760 --> 00:40:46,880
and somehow that allows the server

1162
00:40:46,880 --> 00:40:49,359
to offer a connection

1163
00:40:49,359 --> 00:40:52,160
um the the authenticated server the

1164
00:40:52,160 --> 00:40:53,839
sorry authoritative server to offer a

1165
00:40:53,839 --> 00:40:56,480
connection that it wouldn't do if no s i

1166
00:40:56,480 --> 00:40:58,800
had come in um which is why we gave the

1167
00:40:58,800 --> 00:41:00,560
guidance that um

1168
00:41:00,560 --> 00:41:03,520
authoritative servers should ignore sni

1169
00:41:03,520 --> 00:41:05,520
uh when they're offering these things

1170
00:41:05,520 --> 00:41:07,839
that is if sni comes in

1171
00:41:07,839 --> 00:41:11,280
don't if you get a probe with no s i

1172
00:41:11,280 --> 00:41:12,560
don't

1173
00:41:12,560 --> 00:41:14,319
abort just because you can't figure out

1174
00:41:14,319 --> 00:41:15,920
what the name is just serve any old

1175
00:41:15,920 --> 00:41:17,920
certificate or identification

1176
00:41:17,920 --> 00:41:19,200
but maybe there's some other situation

1177
00:41:19,200 --> 00:41:20,400
where signal connection could succeed

1178
00:41:20,400 --> 00:41:24,400
where a probe is failing next slide

1179
00:41:26,240 --> 00:41:26,960
so

1180
00:41:26,960 --> 00:41:27,760
uh

1181
00:41:27,760 --> 00:41:29,040
i'm not going to get into the details

1182
00:41:29,040 --> 00:41:30,880
about what the other

1183
00:41:30,880 --> 00:41:32,560
drafts are obviously this touches on a

1184
00:41:32,560 --> 00:41:35,119
bunch of them

1185
00:41:35,760 --> 00:41:37,280
there's more

1186
00:41:37,280 --> 00:41:40,880
that haven't even been mentioned here

1187
00:41:41,200 --> 00:41:43,040
we're hoping that this stays out of the

1188
00:41:43,040 --> 00:41:44,000
way

1189
00:41:44,000 --> 00:41:45,920
of the drafts that actually do specify

1190
00:41:45,920 --> 00:41:47,440
protocol elements we're just saying what

1191
00:41:47,440 --> 00:41:49,760
can you do if you didn't want to do any

1192
00:41:49,760 --> 00:41:50,960
active

1193
00:41:50,960 --> 00:41:52,560
mechanisms

1194
00:41:52,560 --> 00:41:54,400
but you know if folks who have been

1195
00:41:54,400 --> 00:41:56,319
thinking hard about these other drafts

1196
00:41:56,319 --> 00:41:58,079
want to weigh in on how to improve this

1197
00:41:58,079 --> 00:42:00,560
unilateral step

1198
00:42:00,560 --> 00:42:02,640
that would also be great

1199
00:42:02,640 --> 00:42:05,359
next slide i think that's it

1200
00:42:05,359 --> 00:42:08,319
uh right so there's the get lab link um

1201
00:42:08,319 --> 00:42:10,000
it's in my personal gitlab account we

1202
00:42:10,000 --> 00:42:11,200
will publish it to the data tracker

1203
00:42:11,200 --> 00:42:13,359
shortly uh i think we have provoked a

1204
00:42:13,359 --> 00:42:16,720
queue of seven so let's get to it uh i

1205
00:42:16,720 --> 00:42:18,319
recognize that ben is at the tail of the

1206
00:42:18,319 --> 00:42:19,599
queue even though he was the first one

1207
00:42:19,599 --> 00:42:21,119
in the queue earlier

1208
00:42:21,119 --> 00:42:21,920
um

1209
00:42:21,920 --> 00:42:23,280
well let's just let's just work from the

1210
00:42:23,280 --> 00:42:24,560
top

1211
00:42:24,560 --> 00:42:28,839
yeah so brian dixon

1212
00:42:30,800 --> 00:42:33,359
it's definitely interesting um

1213
00:42:33,359 --> 00:42:34,240
i think

1214
00:42:34,240 --> 00:42:36,319
um it'll probably

1215
00:42:36,319 --> 00:42:38,400
be the case that uh

1216
00:42:38,400 --> 00:42:40,960
aligning it with any of the

1217
00:42:40,960 --> 00:42:44,960
dedicated uh signaling mechanisms uh

1218
00:42:44,960 --> 00:42:47,440
probably advisable

1219
00:42:47,440 --> 00:42:49,839
modulo response from the working group

1220
00:42:49,839 --> 00:42:51,680
to those proposals

1221
00:42:51,680 --> 00:42:54,640
um but the other comment i have and this

1222
00:42:54,640 --> 00:42:56,560
comment is actually applicable to both

1223
00:42:56,560 --> 00:42:59,280
the the probing and to the unoff

1224
00:42:59,280 --> 00:43:02,319
uh as well as uh any any other related

1225
00:43:02,319 --> 00:43:04,160
uh proposals is

1226
00:43:04,160 --> 00:43:05,839
um

1227
00:43:05,839 --> 00:43:08,640
at least on my proposals it's

1228
00:43:08,640 --> 00:43:11,119
what's being proposed is the how

1229
00:43:11,119 --> 00:43:16,079
but uh what is left unanswered uh is the

1230
00:43:16,079 --> 00:43:17,280
uh when

1231
00:43:17,280 --> 00:43:19,839
uh right now it seems to be the case

1232
00:43:19,839 --> 00:43:22,720
that uh especially uh both the probing

1233
00:43:22,720 --> 00:43:24,880
and the unoff case

1234
00:43:24,880 --> 00:43:27,200
uh it seems to be an all or nothing and

1235
00:43:27,200 --> 00:43:30,000
i don't think authority server operators

1236
00:43:30,000 --> 00:43:32,319
are going to be happy with that or

1237
00:43:32,319 --> 00:43:35,200
are going to be likely to enable

1238
00:43:35,200 --> 00:43:37,760
um encrypted connections if all the

1239
00:43:37,760 --> 00:43:39,680
traffic is going to go over that all of

1240
00:43:39,680 --> 00:43:40,640
a sudden

1241
00:43:40,640 --> 00:43:44,400
i would be interested in

1242
00:43:44,560 --> 00:43:46,400
soliciting

1243
00:43:46,400 --> 00:43:48,800
suggestions from the working group

1244
00:43:48,800 --> 00:43:51,599
on ways that a client

1245
00:43:51,599 --> 00:43:53,040
could signal

1246
00:43:53,040 --> 00:43:55,280
to a resolver

1247
00:43:55,280 --> 00:43:58,400
that it wants um

1248
00:43:58,400 --> 00:44:02,000
privacy on the upstream queries from the

1249
00:44:02,000 --> 00:44:04,000
resolver to the authoritative

1250
00:44:04,000 --> 00:44:06,079
so that it can reduce to the absolute

1251
00:44:06,079 --> 00:44:08,880
minimum the traffic that is authentic is

1252
00:44:08,880 --> 00:44:10,000
encrypted

1253
00:44:10,000 --> 00:44:13,200
so as to not overly consume resources

1254
00:44:13,200 --> 00:44:14,400
i.e

1255
00:44:14,400 --> 00:44:16,240
if if you can minimize the resource

1256
00:44:16,240 --> 00:44:18,640
consumption you can get the thing that

1257
00:44:18,640 --> 00:44:20,960
you want which is encrypted transport

1258
00:44:20,960 --> 00:44:23,760
for sensitive queries but you avoid

1259
00:44:23,760 --> 00:44:25,760
consuming resources on all the queries

1260
00:44:25,760 --> 00:44:27,280
that aren't sensitive

1261
00:44:27,280 --> 00:44:28,160
um

1262
00:44:28,160 --> 00:44:30,000
whether it's something so sensitive

1263
00:44:30,000 --> 00:44:33,040
a signal i understand but uh that that's

1264
00:44:33,040 --> 00:44:34,480
sorry go ahead

1265
00:44:34,480 --> 00:44:36,079
no i think this i think that's a that's

1266
00:44:36,079 --> 00:44:38,000
a really interesting point uh i think

1267
00:44:38,000 --> 00:44:39,839
you and i might disagree about what the

1268
00:44:39,839 --> 00:44:42,319
goals are here um ultimately my goal

1269
00:44:42,319 --> 00:44:45,440
here is to get as many of the

1270
00:44:45,440 --> 00:44:47,359
precursor to authoritative

1271
00:44:47,359 --> 00:44:48,960
uh traffic that's flowing across the

1272
00:44:48,960 --> 00:44:51,599
network to be encrypted so

1273
00:44:51,599 --> 00:44:54,960
um i am not contemplating uh at least

1274
00:44:54,960 --> 00:44:56,400
this draft explicitly does not

1275
00:44:56,400 --> 00:44:58,560
contemplate the idea of marking specific

1276
00:44:58,560 --> 00:45:00,240
queries as sensitive

1277
00:45:00,240 --> 00:45:01,119
um

1278
00:45:01,119 --> 00:45:03,920
it is it is strictly about

1279
00:45:03,920 --> 00:45:05,520
getting as many queries to be encrypted

1280
00:45:05,520 --> 00:45:07,440
as possible and i want to i want to just

1281
00:45:07,440 --> 00:45:08,880
point out that i think this draft

1282
00:45:08,880 --> 00:45:10,400
actually does provide the kind of

1283
00:45:10,400 --> 00:45:12,079
signaling you describe

1284
00:45:12,079 --> 00:45:13,599
the signal that i send to an

1285
00:45:13,599 --> 00:45:15,520
authoritative that says i want

1286
00:45:15,520 --> 00:45:17,359
privacy on this query

1287
00:45:17,359 --> 00:45:21,280
is um is i i open a connection to port

1288
00:45:21,280 --> 00:45:23,280
853

1289
00:45:23,280 --> 00:45:24,720
or maybe i open two connections to port

1290
00:45:24,720 --> 00:45:27,760
5853 one on tcp and one on udp um and if

1291
00:45:27,760 --> 00:45:30,079
the authoritative server decides i am

1292
00:45:30,079 --> 00:45:31,680
out of resources and note that this

1293
00:45:31,680 --> 00:45:33,599
draft actually explicitly contemplates

1294
00:45:33,599 --> 00:45:36,720
the resource overload situation

1295
00:45:36,720 --> 00:45:39,440
um it says stop answering you know if

1296
00:45:39,440 --> 00:45:40,880
you as an authoritative server can't

1297
00:45:40,880 --> 00:45:43,040
afford to answer

1298
00:45:43,040 --> 00:45:45,599
encrypted queries then stop answering on

1299
00:45:45,599 --> 00:45:47,599
port 853 just send back port closed

1300
00:45:47,599 --> 00:45:48,800
that's the cheapest thing you can

1301
00:45:48,800 --> 00:45:50,240
possibly do

1302
00:45:50,240 --> 00:45:51,599
um

1303
00:45:51,599 --> 00:45:52,560
and so

1304
00:45:52,560 --> 00:45:53,280
so

1305
00:45:53,280 --> 00:45:57,200
while i agree with you that we want the

1306
00:45:57,200 --> 00:45:59,440
the clients to

1307
00:45:59,440 --> 00:46:01,280
do something explicit so that the server

1308
00:46:01,280 --> 00:46:02,560
knows they want encrypted connections

1309
00:46:02,560 --> 00:46:03,680
i'm pretty sure that just making the

1310
00:46:03,680 --> 00:46:05,760
connection seems sufficient for that

1311
00:46:05,760 --> 00:46:07,200
now

1312
00:46:07,200 --> 00:46:08,960
if you think if you think that we can't

1313
00:46:08,960 --> 00:46:10,240
have

1314
00:46:10,240 --> 00:46:12,640
my the motivation for this

1315
00:46:12,640 --> 00:46:15,599
draft is a world where all

1316
00:46:15,599 --> 00:46:17,359
recursive to authoritative traffic is

1317
00:46:17,359 --> 00:46:19,599
encrypted if you think that is not

1318
00:46:19,599 --> 00:46:21,680
possible if you think that authoritative

1319
00:46:21,680 --> 00:46:24,160
servers will rebel and refuse to offer

1320
00:46:24,160 --> 00:46:26,000
it then we have a whole different set of

1321
00:46:26,000 --> 00:46:27,520
thinking to do i think as a working

1322
00:46:27,520 --> 00:46:28,480
group

1323
00:46:28,480 --> 00:46:30,800
but the goal here in my opinion is to

1324
00:46:30,800 --> 00:46:32,079
have all of the recursive to

1325
00:46:32,079 --> 00:46:34,640
authoritative traffic encrypted

1326
00:46:34,640 --> 00:46:36,400
okay so um

1327
00:46:36,400 --> 00:46:38,640
i realized you know itf were

1328
00:46:38,640 --> 00:46:41,520
participating as individuals but my day

1329
00:46:41,520 --> 00:46:44,400
job is with godaddy and we run

1330
00:46:44,400 --> 00:46:46,319
authoritatives for

1331
00:46:46,319 --> 00:46:47,040
the

1332
00:46:47,040 --> 00:46:49,680
bulk of the long tail of domains

1333
00:46:49,680 --> 00:46:52,000
and i can say for absolute certain there

1334
00:46:52,000 --> 00:46:55,040
is no way we could accommodate uh with

1335
00:46:55,040 --> 00:46:58,160
our current uh infrastructure or even

1336
00:46:58,160 --> 00:46:58,960
our

1337
00:46:58,960 --> 00:47:00,000
proposed

1338
00:47:00,000 --> 00:47:02,079
expansion of infrastructure

1339
00:47:02,079 --> 00:47:04,000
all

1340
00:47:04,000 --> 00:47:05,839
queries coming over

1341
00:47:05,839 --> 00:47:08,240
tls connections or even over tcp

1342
00:47:08,240 --> 00:47:09,280
connections

1343
00:47:09,280 --> 00:47:11,119
uh it has to be what about over small

1344
00:47:11,119 --> 00:47:12,480
connections

1345
00:47:12,480 --> 00:47:14,000
the same same deal

1346
00:47:14,000 --> 00:47:14,800
um

1347
00:47:14,800 --> 00:47:17,280
the the state that's required

1348
00:47:17,280 --> 00:47:18,640
and the

1349
00:47:18,640 --> 00:47:20,559
the overhead um

1350
00:47:20,559 --> 00:47:22,800
even with establishing connections

1351
00:47:22,800 --> 00:47:25,280
uh i i'm pretty sure we will do

1352
00:47:25,280 --> 00:47:27,920
experiments for sure but and i don't

1353
00:47:27,920 --> 00:47:30,319
think the signaling would be between the

1354
00:47:30,319 --> 00:47:32,400
recursive and the authoritative i think

1355
00:47:32,400 --> 00:47:34,480
the signaling would be from the client

1356
00:47:34,480 --> 00:47:37,200
to the recursive the recursive choosing

1357
00:47:37,200 --> 00:47:38,960
whether to use an existing open

1358
00:47:38,960 --> 00:47:40,240
connection

1359
00:47:40,240 --> 00:47:42,000
for the query

1360
00:47:42,000 --> 00:47:43,359
over

1361
00:47:43,359 --> 00:47:45,280
dot or doq

1362
00:47:45,280 --> 00:47:48,079
versus sending it over udp or tcp there

1363
00:47:48,079 --> 00:47:50,559
are other mechanisms for

1364
00:47:50,559 --> 00:47:54,000
associating domains with uh

1365
00:47:54,000 --> 00:47:57,280
uh encrypted or not using the name

1366
00:47:57,280 --> 00:47:59,520
server names because a name server can

1367
00:47:59,520 --> 00:48:02,079
have multiple names at the same ip

1368
00:48:02,079 --> 00:48:03,359
uh but

1369
00:48:03,359 --> 00:48:05,040
this is this is this is getting a long

1370
00:48:05,040 --> 00:48:07,280
way down the discussion but i think

1371
00:48:07,280 --> 00:48:09,200
that that needs to to start the

1372
00:48:09,200 --> 00:48:11,359
conversation needs to start in terms of

1373
00:48:11,359 --> 00:48:14,400
is there a way to do this and how

1374
00:48:14,400 --> 00:48:16,480
okay i should get into the queue now

1375
00:48:16,480 --> 00:48:18,240
okay thank you brian i think this is a

1376
00:48:18,240 --> 00:48:20,240
really interesting thing to raise right

1377
00:48:20,240 --> 00:48:21,200
i mean

1378
00:48:21,200 --> 00:48:23,440
i don't think i've heard this in any

1379
00:48:23,440 --> 00:48:24,880
deprived meetings before that

1380
00:48:24,880 --> 00:48:26,880
authoritative simply would be unwilling

1381
00:48:26,880 --> 00:48:29,280
to accept encrypted connections

1382
00:48:29,280 --> 00:48:30,559
um

1383
00:48:30,559 --> 00:48:32,839
like unwilling to turn on encryption

1384
00:48:32,839 --> 00:48:35,520
uh i mean maybe and maybe the answer

1385
00:48:35,520 --> 00:48:36,720
here is that's true for some

1386
00:48:36,720 --> 00:48:38,079
authoritatives

1387
00:48:38,079 --> 00:48:39,520
and those authorities will just have to

1388
00:48:39,520 --> 00:48:42,079
send port closed responses on port 853

1389
00:48:42,079 --> 00:48:44,079
until they get their infrastructure spun

1390
00:48:44,079 --> 00:48:44,800
up

1391
00:48:44,800 --> 00:48:46,400
and that's one way that you can

1392
00:48:46,400 --> 00:48:47,920
differentiate between authoritative

1393
00:48:47,920 --> 00:48:50,240
hosting providers or not

1394
00:48:50,240 --> 00:48:52,000
eric you're next in the queue

1395
00:48:52,000 --> 00:48:56,319
um i just wanted to be american

1396
00:48:56,319 --> 00:49:00,279
that maybe um

1397
00:49:05,440 --> 00:49:07,280
okay sure is this better

1398
00:49:07,280 --> 00:49:09,839
perfect thank you all right thanks um

1399
00:49:09,839 --> 00:49:11,760
yeah that maybe what we could add is

1400
00:49:11,760 --> 00:49:13,359
simply uh

1401
00:49:13,359 --> 00:49:17,520
in the authoritative uh servers

1402
00:49:17,520 --> 00:49:20,400
recommendations part it could be

1403
00:49:20,400 --> 00:49:22,720
some sort of

1404
00:49:22,720 --> 00:49:24,079
sentence

1405
00:49:24,079 --> 00:49:27,280
explicitly mentioning what you say tkg

1406
00:49:27,280 --> 00:49:30,559
that if an authoritative server is faced

1407
00:49:30,559 --> 00:49:33,119
with resource exhaustion or something uh

1408
00:49:33,119 --> 00:49:36,160
then the the cheapest way to

1409
00:49:36,160 --> 00:49:38,000
signal that would be simply by closing

1410
00:49:38,000 --> 00:49:40,559
the ports um

1411
00:49:40,559 --> 00:49:43,440
i say this in order to like keep

1412
00:49:43,440 --> 00:49:46,160
uh consideration to what brian said and

1413
00:49:46,160 --> 00:49:48,480
also with the understanding that that

1414
00:49:48,480 --> 00:49:51,520
should not uh hinder in any way the the

1415
00:49:51,520 --> 00:49:53,599
development of these uh use cases and

1416
00:49:53,599 --> 00:49:55,599
these scenarios in my opinion if that

1417
00:49:55,599 --> 00:49:57,200
makes sense

1418
00:49:57,200 --> 00:50:00,559
yeah we actually do have a section um

1419
00:50:00,559 --> 00:50:02,720
called resource exhaustion uh in the

1420
00:50:02,720 --> 00:50:05,119
draft that that's uh under the

1421
00:50:05,119 --> 00:50:06,960
authoritative server guidance

1422
00:50:06,960 --> 00:50:08,480
and it basically says hey if you have

1423
00:50:08,480 --> 00:50:11,280
insufficient resources um

1424
00:50:11,280 --> 00:50:12,800
i think the sentence is an authoritative

1425
00:50:12,800 --> 00:50:14,720
server facing resource exhaustion should

1426
00:50:14,720 --> 00:50:16,559
cleanly close open connections from the

1427
00:50:16,559 --> 00:50:18,480
result resolvers based on the

1428
00:50:18,480 --> 00:50:20,319
authoritative's preferred prioritization

1429
00:50:20,319 --> 00:50:21,680
and then it offers a prioritization

1430
00:50:21,680 --> 00:50:23,280
scheme for how to close existing open

1431
00:50:23,280 --> 00:50:25,920
connections um and suggest that maybe

1432
00:50:25,920 --> 00:50:28,079
you just wanna i i think it does not

1433
00:50:28,079 --> 00:50:30,240
currently say stop answering on

1434
00:50:30,240 --> 00:50:32,000
encrypted connections um we should

1435
00:50:32,000 --> 00:50:35,200
probably add that you're right

1436
00:50:37,119 --> 00:50:40,079
uh next in the queue

1437
00:50:42,000 --> 00:50:45,119
presenting this um this is rather more

1438
00:50:45,119 --> 00:50:46,960
rather more careful workout than perhaps

1439
00:50:46,960 --> 00:50:50,079
necessary um so so thank you um

1440
00:50:50,079 --> 00:50:50,880
um

1441
00:50:50,880 --> 00:50:51,760
you know

1442
00:50:51,760 --> 00:50:53,599
uh i originally wanted to talk about the

1443
00:50:53,599 --> 00:50:55,839
sort of like the the issue of sni and

1444
00:50:55,839 --> 00:50:57,760
like labels and whatever and scoping for

1445
00:50:57,760 --> 00:51:00,880
the hscs type mechanism but i think like

1446
00:51:00,880 --> 00:51:02,800
brands comments i think like forced us

1447
00:51:02,800 --> 00:51:05,839
to step back right um you know

1448
00:51:05,839 --> 00:51:07,119
like

1449
00:51:07,119 --> 00:51:10,319
i i i had heard what you just you used

1450
00:51:10,319 --> 00:51:11,839
to research that dkg that you hadn't

1451
00:51:11,839 --> 00:51:13,520
heard anybody say like oh we just want

1452
00:51:13,520 --> 00:51:14,800
to donate this at all i heard that

1453
00:51:14,800 --> 00:51:17,119
before um i think perhaps that is where

1454
00:51:17,119 --> 00:51:18,319
i work

1455
00:51:18,319 --> 00:51:20,319
which is like all the work that you and

1456
00:51:20,319 --> 00:51:23,680
i you and i and ben and paul and peter

1457
00:51:23,680 --> 00:51:25,040
have been doing because they've been

1458
00:51:25,040 --> 00:51:26,079
premised on the idea that we're trying

1459
00:51:26,079 --> 00:51:28,079
to get like more or less universal like

1460
00:51:28,079 --> 00:51:30,960
you know encryption you know tls from

1461
00:51:30,960 --> 00:51:32,000
the

1462
00:51:32,000 --> 00:51:34,559
from the requested right and if the

1463
00:51:34,559 --> 00:51:36,960
story really is that like the people who

1464
00:51:36,960 --> 00:51:37,839
are in the authoritative are

1465
00:51:37,839 --> 00:51:40,319
uninterested in like delivering tls um

1466
00:51:40,319 --> 00:51:41,680
then like we can just like all pack it

1467
00:51:41,680 --> 00:51:43,920
up and go home and like that will save

1468
00:51:43,920 --> 00:51:45,200
like an enormous amount of effort like

1469
00:51:45,200 --> 00:51:47,119
on all of our parts um

1470
00:51:47,119 --> 00:51:49,680
and um you know i i don't think that

1471
00:51:49,680 --> 00:51:51,520
like trying to like say like which which

1472
00:51:51,520 --> 00:51:53,280
like i don't think like if like if like

1473
00:51:53,280 --> 00:51:54,960
the if the the prize at the end of this

1474
00:51:54,960 --> 00:51:56,720
is like that the clients get to label

1475
00:51:56,720 --> 00:51:58,319
like one percent of their queries as

1476
00:51:58,319 --> 00:52:00,079
sensitive um and like those getting

1477
00:52:00,079 --> 00:52:01,440
encrypted like that just does not like

1478
00:52:01,440 --> 00:52:03,200
that that's not just worth the squeeze

1479
00:52:03,200 --> 00:52:04,400
so um

1480
00:52:04,400 --> 00:52:07,440
uh so so i think like you know um now i

1481
00:52:07,440 --> 00:52:08,880
i must say i'm like quite surprised to

1482
00:52:08,880 --> 00:52:09,760
hear that people think the load is

1483
00:52:09,760 --> 00:52:11,359
excessive like i mean compared to like

1484
00:52:11,359 --> 00:52:13,280
the load that like you know that like a

1485
00:52:13,280 --> 00:52:14,880
modern cdn takes this is just like not

1486
00:52:14,880 --> 00:52:16,400
like a trivial important amount of data

1487
00:52:16,400 --> 00:52:17,359
which is why i like all these people are

1488
00:52:17,359 --> 00:52:19,119
offering free you know while these

1489
00:52:19,119 --> 00:52:20,800
people are offering free gis like those

1490
00:52:20,800 --> 00:52:23,440
services but um but like if that if the

1491
00:52:23,440 --> 00:52:24,800
people i think about anybody want to do

1492
00:52:24,800 --> 00:52:26,319
so then like that's the place to start

1493
00:52:26,319 --> 00:52:28,319
not not just sort of spend like endless

1494
00:52:28,319 --> 00:52:29,839
hours trying to find like a new way to

1495
00:52:29,839 --> 00:52:31,760
like do something nobody wants to do um

1496
00:52:31,760 --> 00:52:32,880
so i think that that i would definitely

1497
00:52:32,880 --> 00:52:34,079
encourage like the working group

1498
00:52:34,079 --> 00:52:35,839
placements on that topic um which i

1499
00:52:35,839 --> 00:52:36,960
think circles back to this point i was

1500
00:52:36,960 --> 00:52:38,160
making earlier about my draft impulse

1501
00:52:38,160 --> 00:52:39,760
draft which is like

1502
00:52:39,760 --> 00:52:41,520
you know like we should like i think we

1503
00:52:41,520 --> 00:52:43,119
have like a broad understanding of like

1504
00:52:43,119 --> 00:52:45,440
what the solution space looks like and

1505
00:52:45,440 --> 00:52:46,720
if i can and we ought to figure out what

1506
00:52:46,720 --> 00:52:48,319
pieces loosen space people like are

1507
00:52:48,319 --> 00:52:49,520
actually willing the players are

1508
00:52:49,520 --> 00:52:51,200
actually willing to do and if i and like

1509
00:52:51,200 --> 00:52:52,800
only focus on this but on my pieces that

1510
00:52:52,800 --> 00:52:54,400
are relevant so i guess i would

1511
00:52:54,400 --> 00:52:55,680
definitely see some people queuing up

1512
00:52:55,680 --> 00:52:57,280
which is great i would love to hear like

1513
00:52:57,280 --> 00:52:58,960
people who operate authoritative servers

1514
00:52:58,960 --> 00:53:01,760
um you know um you know say you know we

1515
00:53:01,760 --> 00:53:03,680
will we would not be willing to do like

1516
00:53:03,680 --> 00:53:05,359
like we would be interested in something

1517
00:53:05,359 --> 00:53:07,040
which like leads us to like universal

1518
00:53:07,040 --> 00:53:08,240
encryption from like authoritative

1519
00:53:08,240 --> 00:53:10,720
represent

1520
00:53:11,680 --> 00:53:13,680
and i'll take my comments with s and i

1521
00:53:13,680 --> 00:53:15,680
separately like some to the list or get

1522
00:53:15,680 --> 00:53:17,359
up or something when if they become

1523
00:53:17,359 --> 00:53:18,480
relevant

1524
00:53:18,480 --> 00:53:19,680
i am definitely interested in your

1525
00:53:19,680 --> 00:53:22,319
comments on sni ecker uh but yeah i i

1526
00:53:22,319 --> 00:53:23,200
hear you

1527
00:53:23,200 --> 00:53:25,520
um i wanna also note that this draft

1528
00:53:25,520 --> 00:53:28,800
actually doesn't um there's nothing

1529
00:53:28,800 --> 00:53:30,400
stopping anybody from just implementing

1530
00:53:30,400 --> 00:53:31,760
what's in this draft the whole point of

1531
00:53:31,760 --> 00:53:34,000
this is that it's not about any sort of

1532
00:53:34,000 --> 00:53:35,920
handshake or like

1533
00:53:35,920 --> 00:53:38,319
if you if you run a recursive resolver

1534
00:53:38,319 --> 00:53:40,400
you can just start doing this um

1535
00:53:40,400 --> 00:53:42,400
likewise yeah running authoritative i i

1536
00:53:42,400 --> 00:53:43,680
just selfishly want your intellectual

1537
00:53:43,680 --> 00:53:45,040
effort on something else it's not before

1538
00:53:45,040 --> 00:53:47,040
no one's gonna do this um

1539
00:53:47,040 --> 00:53:48,000
um

1540
00:53:48,000 --> 00:53:49,280
the um

1541
00:53:49,280 --> 00:53:50,800
uh i do wanna say one more thing um

1542
00:53:50,800 --> 00:53:52,400
actually which is um you know brian

1543
00:53:52,400 --> 00:53:54,880
suggested that like um you know that uh

1544
00:53:54,880 --> 00:53:57,680
uh servers um that like the the clients

1545
00:53:57,680 --> 00:53:59,520
should like somehow they know like i

1546
00:53:59,520 --> 00:54:02,000
want this or not um you know like cert

1547
00:54:02,000 --> 00:54:03,760
like it

1548
00:54:03,760 --> 00:54:05,520
we don't need a mechanism for servers to

1549
00:54:05,520 --> 00:54:07,280
gradually roll out support for this

1550
00:54:07,280 --> 00:54:09,599
under the in the design you pose like

1551
00:54:09,599 --> 00:54:12,000
they can simply stochastically send por

1552
00:54:12,000 --> 00:54:14,000
sprayport closed some to like some

1553
00:54:14,000 --> 00:54:16,319
fraction of the ip addresses um and that

1554
00:54:16,319 --> 00:54:17,440
is like the cheapest way for this to be

1555
00:54:17,440 --> 00:54:19,119
done um trying to like build some sort

1556
00:54:19,119 --> 00:54:21,119
of gradual internet why gradual element

1557
00:54:21,119 --> 00:54:23,200
is not a good plan um like just like

1558
00:54:23,200 --> 00:54:24,960
just like you know just like select a

1559
00:54:24,960 --> 00:54:26,480
ipad address range and return okay

1560
00:54:26,480 --> 00:54:29,280
versus port closed

1561
00:54:32,400 --> 00:54:34,720
peter

1562
00:54:35,200 --> 00:54:38,079
hello there a couple of comments uh i i

1563
00:54:38,079 --> 00:54:39,599
like this draft but paul already

1564
00:54:39,599 --> 00:54:40,799
mentioned that

1565
00:54:40,799 --> 00:54:44,000
um one of the slides said tls reports

1566
00:54:44,000 --> 00:54:46,559
there is a draft from roy irons

1567
00:54:46,559 --> 00:54:48,960
for doing dns error reporting which

1568
00:54:48,960 --> 00:54:50,799
might be of interest although i can see

1569
00:54:50,799 --> 00:54:52,400
the trouble with doing dns error

1570
00:54:52,400 --> 00:54:55,280
reporting in dns

1571
00:54:55,280 --> 00:54:56,559
right

1572
00:54:56,559 --> 00:54:59,599
dkg can you go to slide five please

1573
00:54:59,599 --> 00:55:01,119
uh i don't control the slides but i'm

1574
00:55:01,119 --> 00:55:02,880
happy to see it go to five oh

1575
00:55:02,880 --> 00:55:05,359
there we go uh this says the draft maps

1576
00:55:05,359 --> 00:55:07,119
out the internal states

1577
00:55:07,119 --> 00:55:09,520
i found that the internal state it

1578
00:55:09,520 --> 00:55:10,880
starts from

1579
00:55:10,880 --> 00:55:12,240
is

1580
00:55:12,240 --> 00:55:13,920
severely different from the internal

1581
00:55:13,920 --> 00:55:16,079
state our resolver

1582
00:55:16,079 --> 00:55:18,559
and also in general i feel

1583
00:55:18,559 --> 00:55:20,799
the draft is too prescriptive in this

1584
00:55:20,799 --> 00:55:24,559
area but that's all fixable in editing

1585
00:55:24,559 --> 00:55:27,040
uh i would love to edit

1586
00:55:27,040 --> 00:55:29,119
yeah

1587
00:55:29,119 --> 00:55:30,559
i guess we'll have a few other

1588
00:55:30,559 --> 00:55:32,319
conversations before we get to fixing

1589
00:55:32,319 --> 00:55:35,119
that like do we even want encryption

1590
00:55:35,119 --> 00:55:38,000
everywhere as discussed before the queue

1591
00:55:38,000 --> 00:55:40,160
on the sni note i believe that the

1592
00:55:40,160 --> 00:55:42,480
content served by a name server should

1593
00:55:42,480 --> 00:55:44,720
never depend on the sni

1594
00:55:44,720 --> 00:55:47,040
but indeed sni might make sense in some

1595
00:55:47,040 --> 00:55:49,280
authenticated scenario

1596
00:55:49,280 --> 00:55:50,160
yep

1597
00:55:50,160 --> 00:55:52,880
and finally uh several people said this

1598
00:55:52,880 --> 00:55:54,559
today several people said this in the

1599
00:55:54,559 --> 00:55:57,040
past if a name server does not want to

1600
00:55:57,040 --> 00:55:59,200
serve some encrypted transports it

1601
00:55:59,200 --> 00:56:02,480
should just return tcp resets when i

1602
00:56:02,480 --> 00:56:04,480
proposed this earlier brian dixon told

1603
00:56:04,480 --> 00:56:07,599
me that would be too expensive

1604
00:56:07,599 --> 00:56:11,599
i but i don't know what to make of that

1605
00:56:12,960 --> 00:56:16,520
that's all i had

1606
00:56:20,720 --> 00:56:22,559
all right thank you

1607
00:56:22,559 --> 00:56:24,559
eric nygren i think you're next

1608
00:56:24,559 --> 00:56:26,079
maybe eric and peter can drop themselves

1609
00:56:26,079 --> 00:56:27,280
from the queue so we can actually see

1610
00:56:27,280 --> 00:56:30,680
the queue get shorter

1611
00:56:32,720 --> 00:56:34,079
yeah um

1612
00:56:34,079 --> 00:56:36,000
so as a

1613
00:56:36,000 --> 00:56:38,880
operator of a large um authoritative dns

1614
00:56:38,880 --> 00:56:40,000
platform

1615
00:56:40,000 --> 00:56:42,559
i think one our one of our or probably

1616
00:56:42,559 --> 00:56:44,640
our top uh

1617
00:56:44,640 --> 00:56:47,040
priority is availability and stability

1618
00:56:47,040 --> 00:56:48,640
um so i think this goes to what brian

1619
00:56:48,640 --> 00:56:50,160
said earlier of

1620
00:56:50,160 --> 00:56:52,319
of being able to control what's going on

1621
00:56:52,319 --> 00:56:55,680
with clients um is critical and

1622
00:56:55,680 --> 00:56:56,559
change

1623
00:56:56,559 --> 00:56:58,720
and change safety is one of those things

1624
00:56:58,720 --> 00:57:00,799
because of availability that has a that

1625
00:57:00,799 --> 00:57:03,520
is also critical so being able to roll

1626
00:57:03,520 --> 00:57:05,760
out changes safely and understand what

1627
00:57:05,760 --> 00:57:08,960
behavior they have um is is very

1628
00:57:08,960 --> 00:57:10,720
important and i think what this comes

1629
00:57:10,720 --> 00:57:13,119
down to is that

1630
00:57:13,119 --> 00:57:15,520
we really need to be careful within this

1631
00:57:15,520 --> 00:57:18,480
space if we do want to get to the

1632
00:57:18,480 --> 00:57:19,440
having

1633
00:57:19,440 --> 00:57:21,200
as much of this encrypted as possible in

1634
00:57:21,200 --> 00:57:23,440
the long run is not poisoning or well in

1635
00:57:23,440 --> 00:57:25,280
the short term and i haven't read this

1636
00:57:25,280 --> 00:57:27,920
draft yet but i think this i the idea of

1637
00:57:27,920 --> 00:57:30,240
laying out some ground rules of if

1638
00:57:30,240 --> 00:57:32,799
you're going to do it um probing

1639
00:57:32,799 --> 00:57:35,359
um here's how you might do it

1640
00:57:35,359 --> 00:57:37,680
would actually be helpful there

1641
00:57:37,680 --> 00:57:39,599
especially if we talk about how not to

1642
00:57:39,599 --> 00:57:42,000
do it because one of the things

1643
00:57:42,000 --> 00:57:45,200
um just as a concrete example

1644
00:57:45,200 --> 00:57:48,000
most large scale operators have um

1645
00:57:48,000 --> 00:57:49,920
behind a single ip address will have a

1646
00:57:49,920 --> 00:57:52,240
pool of tens to hundreds to thousands of

1647
00:57:52,240 --> 00:57:54,559
servers beyond that single ip and are

1648
00:57:54,559 --> 00:57:56,960
going to roll out changes very very

1649
00:57:56,960 --> 00:57:58,720
slowly incrementally so only one or two

1650
00:57:58,720 --> 00:58:00,799
servers that pool might start off have

1651
00:58:00,799 --> 00:58:04,880
having um a a dot or a dock so

1652
00:58:04,880 --> 00:58:06,240
we'll want to think about how do we

1653
00:58:06,240 --> 00:58:08,160
communicate that and how does that

1654
00:58:08,160 --> 00:58:10,000
interfere with kind of a scheme like

1655
00:58:10,000 --> 00:58:12,480
this like if you if if for example

1656
00:58:12,480 --> 00:58:14,960
introducing um

1657
00:58:14,960 --> 00:58:17,520
a docs onto one eye object kind of one

1658
00:58:17,520 --> 00:58:19,680
back end caused a bunch of clients to

1659
00:58:19,680 --> 00:58:21,280
now start having timeouts because they

1660
00:58:21,280 --> 00:58:23,200
discovered in the probe but then got

1661
00:58:23,200 --> 00:58:24,799
mapped to it occasionally mapped to a

1662
00:58:24,799 --> 00:58:26,559
different back end which and then

1663
00:58:26,559 --> 00:58:29,040
started having timeouts

1664
00:58:29,040 --> 00:58:31,200
that would prevent um actually being

1665
00:58:31,200 --> 00:58:32,480
able to roll out to the whole cluster

1666
00:58:32,480 --> 00:58:33,920
because we'd start seeing hey there were

1667
00:58:33,920 --> 00:58:35,839
timeouts here but and then there'll be

1668
00:58:35,839 --> 00:58:39,280
no way to actually do the rollout so

1669
00:58:39,280 --> 00:58:40,400
kind of the

1670
00:58:40,400 --> 00:58:41,760
the if

1671
00:58:41,760 --> 00:58:43,280
we just need to make sure that any

1672
00:58:43,280 --> 00:58:45,760
probing mechanism we we deploy or we let

1673
00:58:45,760 --> 00:58:48,079
people other people encourage deploy

1674
00:58:48,079 --> 00:58:49,680
doesn't mean it says that we don't have

1675
00:58:49,680 --> 00:58:51,920
a way to deploy a fully authenticated

1676
00:58:51,920 --> 00:58:54,319
mechanism longer term

1677
00:58:54,319 --> 00:58:55,920
thanks eric that's a i think that's a

1678
00:58:55,920 --> 00:58:57,280
really good point and that you know

1679
00:58:57,280 --> 00:58:59,359
that's the goal of this proposal is to

1680
00:58:59,359 --> 00:59:01,599
try to flesh out what we think would

1681
00:59:01,599 --> 00:59:03,680
would achieve the results that you're

1682
00:59:03,680 --> 00:59:04,799
describing

1683
00:59:04,799 --> 00:59:06,640
um i don't know how often the remapping

1684
00:59:06,640 --> 00:59:07,760
that you're describing happens it

1685
00:59:07,760 --> 00:59:09,200
probably depends on the particular

1686
00:59:09,200 --> 00:59:10,799
infrastructure provider

1687
00:59:10,799 --> 00:59:11,599
um

1688
00:59:11,599 --> 00:59:13,280
but i agree with you you know maybe

1689
00:59:13,280 --> 00:59:14,799
maybe the answer is we want to fiddle

1690
00:59:14,799 --> 00:59:16,640
with the default timeout parameter

1691
00:59:16,640 --> 00:59:18,880
that's described in the draft the draft

1692
00:59:18,880 --> 00:59:20,559
does you know joey and i tried to think

1693
00:59:20,559 --> 00:59:22,640
about how do we make sure that we're not

1694
00:59:22,640 --> 00:59:24,240
really overburdening

1695
00:59:24,240 --> 00:59:26,160
um providers that don't want to roll

1696
00:59:26,160 --> 00:59:28,480
something like this out

1697
00:59:28,480 --> 00:59:29,839
and maybe we need more guidance on the

1698
00:59:29,839 --> 00:59:32,480
authoritative side to say hey if you're

1699
00:59:32,480 --> 00:59:33,839
you know if you're going to try to do

1700
00:59:33,839 --> 00:59:36,880
phase rollout do your you know do your

1701
00:59:36,880 --> 00:59:38,480
phase rollout on the basis of like

1702
00:59:38,480 --> 00:59:41,520
partitioning the ip address client space

1703
00:59:41,520 --> 00:59:44,240
and we need to tell the recursers

1704
00:59:44,240 --> 00:59:46,559
um you know don't share this state

1705
00:59:46,559 --> 00:59:47,599
across

1706
00:59:47,599 --> 00:59:49,440
multiple recursers that are querying

1707
00:59:49,440 --> 00:59:51,520
from different ip addresses or something

1708
00:59:51,520 --> 00:59:54,079
like that um anyway i i appreciate your

1709
00:59:54,079 --> 00:59:55,920
insight on that and i would love uh

1710
00:59:55,920 --> 00:59:57,040
suggested

1711
00:59:57,040 --> 00:59:59,680
uh text um or proposals that would that

1712
00:59:59,680 --> 01:00:01,359
would make this probing

1713
01:00:01,359 --> 01:00:03,280
um guidelines something that would

1714
01:00:03,280 --> 01:00:05,760
encourage and facilitate deployment

1715
01:00:05,760 --> 01:00:08,079
thank you

1716
01:00:10,640 --> 01:00:14,598
uh jim you're up next

1717
01:00:32,160 --> 01:00:34,319
um i'm not hearing jim

1718
01:00:34,319 --> 01:00:36,480
i am not hearing jim either

1719
01:00:36,480 --> 01:00:38,319
uh maybe we'll skip jim for now stay in

1720
01:00:38,319 --> 01:00:40,079
the queue jim when you get your audio

1721
01:00:40,079 --> 01:00:44,079
issues sorted out we'll take ben next

1722
01:00:47,680 --> 01:00:48,799
hi

1723
01:00:48,799 --> 01:00:50,160
hi ben okay

1724
01:00:50,160 --> 01:00:51,839
quick notes uh

1725
01:00:51,839 --> 01:00:55,359
i am aware of real offside interest in

1726
01:00:55,359 --> 01:00:59,280
100 encryption not like name conditional

1727
01:00:59,280 --> 01:01:00,079
um

1728
01:01:00,079 --> 01:01:02,160
i i know auth implementers who believe

1729
01:01:02,160 --> 01:01:03,760
that this is totally deployable and

1730
01:01:03,760 --> 01:01:05,359
wanted to play it so

1731
01:01:05,359 --> 01:01:07,599
please please make it possible

1732
01:01:07,599 --> 01:01:10,160
um i don't think the impedance mismatch

1733
01:01:10,160 --> 01:01:12,160
you mentioned is a real problem

1734
01:01:12,160 --> 01:01:14,319
uh i just kind of think that you'll

1735
01:01:14,319 --> 01:01:16,400
you'll check if you can do the uh if you

1736
01:01:16,400 --> 01:01:17,440
have the

1737
01:01:17,440 --> 01:01:19,839
authentication support and if that works

1738
01:01:19,839 --> 01:01:21,280
you won't even get to the stage of

1739
01:01:21,280 --> 01:01:24,079
checking if you have some cached hint

1740
01:01:24,079 --> 01:01:26,640
for opportunistic

1741
01:01:26,640 --> 01:01:29,520
uh as as was mentioned before dns error

1742
01:01:29,520 --> 01:01:31,440
reporting is i think actually a perfect

1743
01:01:31,440 --> 01:01:33,920
fit for telling authoritatives whether

1744
01:01:33,920 --> 01:01:36,240
tls is working

1745
01:01:36,240 --> 01:01:38,400
we just need to make sure it fits but i

1746
01:01:38,400 --> 01:01:40,559
believe it does

1747
01:01:40,559 --> 01:01:43,280
i don't think we need an sts signal

1748
01:01:43,280 --> 01:01:44,960
as you mentioned i think the existence

1749
01:01:44,960 --> 01:01:47,200
of unilateral probing here makes that

1750
01:01:47,200 --> 01:01:50,240
sts signal unnecessary instead we should

1751
01:01:50,240 --> 01:01:53,280
just say that if you create an explicit

1752
01:01:53,280 --> 01:01:55,920
signal uh you know if you if you if you

1753
01:01:55,920 --> 01:01:57,920
publish an explicit signal declaring

1754
01:01:57,920 --> 01:01:59,760
that you support

1755
01:01:59,760 --> 01:02:01,920
a dot then you have to actually support

1756
01:02:01,920 --> 01:02:03,839
a dot

1757
01:02:03,839 --> 01:02:05,920
uh and so then hang on a second can i

1758
01:02:05,920 --> 01:02:07,520
can i just respond to that one point i

1759
01:02:07,520 --> 01:02:08,559
don't want you to make a bunch of good

1760
01:02:08,559 --> 01:02:10,480
points and then i forgot which ones to

1761
01:02:10,480 --> 01:02:12,640
respond to for that one in particular

1762
01:02:12,640 --> 01:02:15,920
um the one non-strict signal that i

1763
01:02:15,920 --> 01:02:17,920
could imagine saying is that i do want

1764
01:02:17,920 --> 01:02:19,359
error reports

1765
01:02:19,359 --> 01:02:22,000
right like i could imagine if i haven't

1766
01:02:22,000 --> 01:02:23,359
if i've got an authoritative and i

1767
01:02:23,359 --> 01:02:25,839
haven't deployed adot i don't want to

1768
01:02:25,839 --> 01:02:28,960
get my dns error reporting stuff flooded

1769
01:02:28,960 --> 01:02:30,720
with information about how hey my

1770
01:02:30,720 --> 01:02:32,079
authoritative

1771
01:02:32,079 --> 01:02:35,119
encrypted transport isn't working

1772
01:02:35,119 --> 01:02:36,720
okay that's a really interesting point

1773
01:02:36,720 --> 01:02:38,720
we yeah we'll have to figure out um how

1774
01:02:38,720 --> 01:02:42,480
to say what you want error reports about

1775
01:02:42,480 --> 01:02:45,200
um and last i'll just say we i'd like to

1776
01:02:45,200 --> 01:02:47,200
be very clear that that

1777
01:02:47,200 --> 01:02:51,598
resolvers using this must omit the sni

1778
01:02:52,160 --> 01:02:54,480
thanks

1779
01:03:01,440 --> 01:03:03,119
jim reed back again brian

1780
01:03:03,119 --> 01:03:05,599
oh jim

1781
01:03:05,599 --> 01:03:08,319
was that jim

1782
01:03:09,119 --> 01:03:10,319
you're sending audio but we're not

1783
01:03:10,319 --> 01:03:13,558
hearing you

1784
01:03:22,319 --> 01:03:24,240
uh brian dixon want to go while jim

1785
01:03:24,240 --> 01:03:26,079
still sorts out his audio

1786
01:03:26,079 --> 01:03:27,039
sure

1787
01:03:27,039 --> 01:03:30,240
um yeah i just want to make clear

1788
01:03:30,240 --> 01:03:31,520
that

1789
01:03:31,520 --> 01:03:34,559
we definitely want to provide

1790
01:03:34,559 --> 01:03:36,319
the ability to do

1791
01:03:36,319 --> 01:03:39,119
encrypted transport so my suggestion

1792
01:03:39,119 --> 01:03:41,039
that it not be 100

1793
01:03:41,039 --> 01:03:43,359
is not that we don't want it to be a

1794
01:03:43,359 --> 01:03:45,520
hundred percent we don't i don't think

1795
01:03:45,520 --> 01:03:47,920
we'll be uh have the facilities to do

1796
01:03:47,920 --> 01:03:48,720
that

1797
01:03:48,720 --> 01:03:51,440
and the problem with all or nothing if

1798
01:03:51,440 --> 01:03:54,000
that ends up uh consuming resources that

1799
01:03:54,000 --> 01:03:56,160
it ends up being nothing i think that's

1800
01:03:56,160 --> 01:03:59,760
not to the benefit of of the the efforts

1801
01:03:59,760 --> 01:04:02,240
here or to the group if if it's a

1802
01:04:02,240 --> 01:04:04,160
resource consumption thing

1803
01:04:04,160 --> 01:04:06,000
not being greedy

1804
01:04:06,000 --> 01:04:08,559
not having resolvers that are greedy and

1805
01:04:08,559 --> 01:04:10,480
consuming all the resources is an

1806
01:04:10,480 --> 01:04:13,039
important part to make the analogy

1807
01:04:13,039 --> 01:04:15,119
between udp and tcp

1808
01:04:15,119 --> 01:04:17,760
uh udp allows you to be greedy tcp has

1809
01:04:17,760 --> 01:04:20,160
back pressure through you know

1810
01:04:20,160 --> 01:04:21,039
um

1811
01:04:21,039 --> 01:04:23,680
the the retry and things like that that

1812
01:04:23,680 --> 01:04:26,720
let let the you know the available

1813
01:04:26,720 --> 01:04:29,760
resources uh align with

1814
01:04:29,760 --> 01:04:33,359
um the the demand for those resources

1815
01:04:33,359 --> 01:04:34,480
um but

1816
01:04:34,480 --> 01:04:37,440
since dns is effectively stateless uh

1817
01:04:37,440 --> 01:04:39,839
whether it's over udp or whatever each

1818
01:04:39,839 --> 01:04:41,839
query and answer

1819
01:04:41,839 --> 01:04:44,000
consumes whatever amount of resources it

1820
01:04:44,000 --> 01:04:45,359
takes

1821
01:04:45,359 --> 01:04:47,520
that's why i'm suggesting having some

1822
01:04:47,520 --> 01:04:50,000
method of

1823
01:04:50,000 --> 01:04:51,200
effectively

1824
01:04:51,200 --> 01:04:54,240
providing self-control on the resolvers

1825
01:04:54,240 --> 01:04:56,319
would be to the advantage of all the

1826
01:04:56,319 --> 01:04:58,720
resolvers rather than just a few

1827
01:04:58,720 --> 01:05:00,720
keep in mind there are about three

1828
01:05:00,720 --> 01:05:03,680
million ip addresses that are seen by

1829
01:05:03,680 --> 01:05:06,480
authoritative servers that are resolvers

1830
01:05:06,480 --> 01:05:08,720
legitimate resolvers

1831
01:05:08,720 --> 01:05:09,440
so

1832
01:05:09,440 --> 01:05:12,960
the the balance of resource consumption

1833
01:05:12,960 --> 01:05:14,160
if it's not

1834
01:05:14,160 --> 01:05:16,240
possible for the

1835
01:05:16,240 --> 01:05:19,440
resolvers themselves to self-control uh

1836
01:05:19,440 --> 01:05:21,920
what amount of traffic you're sending

1837
01:05:21,920 --> 01:05:24,960
they're gonna have the effect of of um

1838
01:05:24,960 --> 01:05:28,000
you know the people who actually need

1839
01:05:28,000 --> 01:05:30,799
privacy from recursive to authoritative

1840
01:05:30,799 --> 01:05:32,640
uh if it's not available because the

1841
01:05:32,640 --> 01:05:34,400
resources have been consumed that's

1842
01:05:34,400 --> 01:05:36,720
that's really um that

1843
01:05:36,720 --> 01:05:39,520
from my perspective uh as as

1844
01:05:39,520 --> 01:05:41,200
just a working group participant that

1845
01:05:41,200 --> 01:05:43,039
doesn't seem to align with the the

1846
01:05:43,039 --> 01:05:44,000
intent

1847
01:05:44,000 --> 01:05:46,720
and certainly i remember earlier

1848
01:05:46,720 --> 01:05:48,160
um

1849
01:05:48,160 --> 01:05:50,480
uh i may have been in this group or

1850
01:05:50,480 --> 01:05:52,400
may have just been in conversations in

1851
01:05:52,400 --> 01:05:53,440
the hallway

1852
01:05:53,440 --> 01:05:55,200
the intent of

1853
01:05:55,200 --> 01:05:56,319
definitely

1854
01:05:56,319 --> 01:05:57,280
uh

1855
01:05:57,280 --> 01:05:59,680
client-to-resolver all

1856
01:05:59,680 --> 01:06:02,319
but it was not the case that uh resolver

1857
01:06:02,319 --> 01:06:04,880
to off all uh encrypted

1858
01:06:04,880 --> 01:06:08,720
uh as being a request requirement uh for

1859
01:06:08,720 --> 01:06:11,839
what dpriv is doing and that to me at

1860
01:06:11,839 --> 01:06:13,920
least seems to fly in the face of what

1861
01:06:13,920 --> 01:06:16,880
previous expectations were and i don't i

1862
01:06:16,880 --> 01:06:18,559
don't i don't know i don't have an

1863
01:06:18,559 --> 01:06:20,240
answer but i think that's something that

1864
01:06:20,240 --> 01:06:22,240
needs to happen in terms of discussion

1865
01:06:22,240 --> 01:06:23,440
thanks

1866
01:06:23,440 --> 01:06:25,440
thanks brian i i think i agree with you

1867
01:06:25,440 --> 01:06:27,760
that it would be a shame if greedy

1868
01:06:27,760 --> 01:06:30,079
clients caused the ecosystem to refuse

1869
01:06:30,079 --> 01:06:32,480
to adopt um and that the the goal of

1870
01:06:32,480 --> 01:06:34,240
this draft actually

1871
01:06:34,240 --> 01:06:36,400
is to describe mechanisms you can do as

1872
01:06:36,400 --> 01:06:38,559
a client to to reduce the amount of

1873
01:06:38,559 --> 01:06:40,160
greediness and

1874
01:06:40,160 --> 01:06:41,599
also to sort of give authoritative

1875
01:06:41,599 --> 01:06:43,200
server operators the guidance that they

1876
01:06:43,200 --> 01:06:45,680
need to say hey yeah it is okay to

1877
01:06:45,680 --> 01:06:47,599
prioritize my clear text traffic while

1878
01:06:47,599 --> 01:06:49,760
while my resources are constrained

1879
01:06:49,760 --> 01:06:52,079
um so if you have specific suggestions

1880
01:06:52,079 --> 01:06:53,760
for how to ensure that these things are

1881
01:06:53,760 --> 01:06:55,039
less greedy

1882
01:06:55,039 --> 01:06:57,520
that don't involve the

1883
01:06:57,520 --> 01:07:00,079
stub saying to the recurser hey this is

1884
01:07:00,079 --> 01:07:02,480
a sensitive query i'm all for it the

1885
01:07:02,480 --> 01:07:04,240
reason i'm concerned about stub

1886
01:07:04,240 --> 01:07:06,240
signaling to the recurser like hey i

1887
01:07:06,240 --> 01:07:08,720
need this query to be private is

1888
01:07:08,720 --> 01:07:12,400
i have i i honestly cannot imagine

1889
01:07:12,400 --> 01:07:15,280
end users making that decision in a way

1890
01:07:15,280 --> 01:07:17,520
that makes sense um the trouble with

1891
01:07:17,520 --> 01:07:19,039
these with these leaks is that they are

1892
01:07:19,039 --> 01:07:20,799
privacy leaks we don't know when

1893
01:07:20,799 --> 01:07:22,000
something is going to turn out to be

1894
01:07:22,000 --> 01:07:24,000
private um

1895
01:07:24,000 --> 01:07:26,559
you might only learn later uh even even

1896
01:07:26,559 --> 01:07:28,079
if you could distinguish between things

1897
01:07:28,079 --> 01:07:29,520
that caught queries that cause harm when

1898
01:07:29,520 --> 01:07:30,880
they're leaked in queries that don't you

1899
01:07:30,880 --> 01:07:32,079
might only distinguish between that

1900
01:07:32,079 --> 01:07:34,480
after the fact um you might never know

1901
01:07:34,480 --> 01:07:36,880
that it was a problem and i think

1902
01:07:36,880 --> 01:07:40,240
introducing some new mechanism that asks

1903
01:07:40,240 --> 01:07:44,400
dns clients to to bin their queries into

1904
01:07:44,400 --> 01:07:46,400
sensitive queries that need encrypted

1905
01:07:46,400 --> 01:07:49,440
transport between authoritative and and

1906
01:07:49,440 --> 01:07:50,559
recursive

1907
01:07:50,559 --> 01:07:53,359
and queries that don't is just pretty

1908
01:07:53,359 --> 01:07:55,760
implausible to me and if the goal

1909
01:07:55,760 --> 01:07:56,480
is

1910
01:07:56,480 --> 01:07:58,160
a wide scale deployment then we need to

1911
01:07:58,160 --> 01:07:59,200
think about how to do that wide scale

1912
01:07:59,200 --> 01:08:01,359
deployment without introducing that kind

1913
01:08:01,359 --> 01:08:03,280
of signaling so if you have suggestions

1914
01:08:03,280 --> 01:08:05,520
for the draft that that help make things

1915
01:08:05,520 --> 01:08:08,000
be less greedy and make it less scary

1916
01:08:08,000 --> 01:08:10,480
for for deployers on either side i

1917
01:08:10,480 --> 01:08:12,079
please please contribute them i really

1918
01:08:12,079 --> 01:08:14,079
appreciate your insight there

1919
01:08:14,079 --> 01:08:17,359
sure and i i would uh just offer two two

1920
01:08:17,359 --> 01:08:20,238
more comments along those lines one is

1921
01:08:20,238 --> 01:08:22,080
uh it might be the case that it's not on

1922
01:08:22,080 --> 01:08:24,479
a per query basis but on a per client

1923
01:08:24,479 --> 01:08:25,439
basis

1924
01:08:25,439 --> 01:08:27,600
so there might be some small percentage

1925
01:08:27,600 --> 01:08:29,198
of your clients that have to have

1926
01:08:29,198 --> 01:08:30,560
privacy

1927
01:08:30,560 --> 01:08:33,759
if those queries are coming over

1928
01:08:33,759 --> 01:08:36,000
encrypted transport from the client to

1929
01:08:36,000 --> 01:08:36,839
the

1930
01:08:36,839 --> 01:08:38,880
resolver uh the

1931
01:08:38,880 --> 01:08:41,439
the existence or non-existence of the

1932
01:08:41,439 --> 01:08:43,198
request to be

1933
01:08:43,198 --> 01:08:45,439
have those queries be uh

1934
01:08:45,439 --> 01:08:47,279
treated as sensitive would not be

1935
01:08:47,279 --> 01:08:50,719
visible to a an on path observer or off

1936
01:08:50,719 --> 01:08:53,040
path observer passive observer uh

1937
01:08:53,040 --> 01:08:56,158
because that traffic being encrypted um

1938
01:08:56,158 --> 01:08:58,880
allows for you know whether it's a per

1939
01:08:58,880 --> 01:09:00,640
client basis as opposed to per query

1940
01:09:00,640 --> 01:09:01,600
basis

1941
01:09:01,600 --> 01:09:03,759
uh but something along those lines would

1942
01:09:03,759 --> 01:09:06,960
be valuable uh sorry i i'm gonna i'm

1943
01:09:06,960 --> 01:09:08,560
gonna add one more question uh uh

1944
01:09:08,560 --> 01:09:11,198
suggestion then i'll drop off yeah the

1945
01:09:11,198 --> 01:09:14,319
other uh thing is i i would see actually

1946
01:09:14,319 --> 01:09:15,279
um

1947
01:09:15,279 --> 01:09:17,439
with uh the probing

1948
01:09:17,439 --> 01:09:20,960
um i think you do want to do sni

1949
01:09:20,960 --> 01:09:23,679
strictly because of the the potential

1950
01:09:23,679 --> 01:09:26,000
for authority operators to use different

1951
01:09:26,000 --> 01:09:27,040
names

1952
01:09:27,040 --> 01:09:30,319
uh and offer uh encrypted transport only

1953
01:09:30,319 --> 01:09:31,679
on a subset of the names for a

1954
01:09:31,679 --> 01:09:33,279
particular ip

1955
01:09:33,279 --> 01:09:36,158
and that that's what our plan would be

1956
01:09:36,158 --> 01:09:37,439
thanks

1957
01:09:37,439 --> 01:09:39,600
uh thanks so let me just so this is

1958
01:09:39,600 --> 01:09:41,679
interesting we just had one person say

1959
01:09:41,679 --> 01:09:44,080
uh must not send s and i and we just had

1960
01:09:44,080 --> 01:09:46,479
somebody else say you know

1961
01:09:46,479 --> 01:09:48,399
should send sni or maybe even must send

1962
01:09:48,399 --> 01:09:49,759
sni so that's something that we'll need

1963
01:09:49,759 --> 01:09:53,040
to sort out um as far as your point

1964
01:09:53,040 --> 01:09:55,360
about uh this being a per client rather

1965
01:09:55,360 --> 01:09:57,440
than per query configuration

1966
01:09:57,440 --> 01:09:58,880
your description of that and maybe this

1967
01:09:58,880 --> 01:10:00,400
was not exactly what you meant to say

1968
01:10:00,400 --> 01:10:02,000
but your description was if a client

1969
01:10:02,000 --> 01:10:04,000
must have their queries encrypted i want

1970
01:10:04,000 --> 01:10:06,719
to point out that this mechanism is a

1971
01:10:06,719 --> 01:10:09,520
failure for any such requirement because

1972
01:10:09,520 --> 01:10:11,280
this mechanism does not defend against

1973
01:10:11,280 --> 01:10:12,960
an active attacker

1974
01:10:12,960 --> 01:10:14,640
in fact it doesn't even defend against a

1975
01:10:14,640 --> 01:10:16,400
resource exhausted

1976
01:10:16,400 --> 01:10:18,080
authoritative server

1977
01:10:18,080 --> 01:10:20,159
there will be like this mechanism is

1978
01:10:20,159 --> 01:10:22,320
designed to fall back to the clear text

1979
01:10:22,320 --> 01:10:24,480
so if you have if we if the recurser has

1980
01:10:24,480 --> 01:10:26,640
a signal from the client that says

1981
01:10:26,640 --> 01:10:28,800
um my queries must be encrypted from

1982
01:10:28,800 --> 01:10:30,719
recursive to authoritative leg this

1983
01:10:30,719 --> 01:10:32,480
mechanism is the wrong mechanism to do

1984
01:10:32,480 --> 01:10:34,639
that

1985
01:10:35,040 --> 01:10:38,600
ralph you're up

1986
01:10:48,560 --> 01:10:49,920
we heard you about as well as we heard

1987
01:10:49,920 --> 01:10:54,040
jim reid can you try again

1988
01:11:08,320 --> 01:11:09,600
maybe not

1989
01:11:09,600 --> 01:11:10,800
um

1990
01:11:10,800 --> 01:11:14,239
so what i would say dkg is um i i think

1991
01:11:14,239 --> 01:11:15,760
there's been a lot of good comments here

1992
01:11:15,760 --> 01:11:16,719
so

1993
01:11:16,719 --> 01:11:19,120
uh i i think the what i'd like to do is

1994
01:11:19,120 --> 01:11:21,679
if ralph or or jim want to

1995
01:11:21,679 --> 01:11:24,320
um you know either chime in on chat or

1996
01:11:24,320 --> 01:11:26,719
or reach you via via email to to get

1997
01:11:26,719 --> 01:11:28,640
their questions and ask that would

1998
01:11:28,640 --> 01:11:30,800
probably be the best way to go forward

1999
01:11:30,800 --> 01:11:32,560
um and then i'd just encourage you and

2000
01:11:32,560 --> 01:11:34,080
joey to get your draft posted to the

2001
01:11:34,080 --> 01:11:36,239
data tracker so people can can get

2002
01:11:36,239 --> 01:11:37,520
access to it and we have it for

2003
01:11:37,520 --> 01:11:39,120
historical records for the for the

2004
01:11:39,120 --> 01:11:41,840
meeting yep sounds good we'll do we'll

2005
01:11:41,840 --> 01:11:43,600
make sure that happens thanks for

2006
01:11:43,600 --> 01:11:46,000
watching discussion

2007
01:11:46,000 --> 01:11:48,719
thank you everybody

2008
01:11:49,920 --> 01:11:52,880
all right so the next uh on the agenda

2009
01:11:52,880 --> 01:11:58,480
is is ben to talk about the ds glue

2010
01:12:06,239 --> 01:12:09,839
and it is all yours

2011
01:12:10,960 --> 01:12:12,800
okay

2012
01:12:12,800 --> 01:12:14,719
uh i'm happy to run my own slides but if

2013
01:12:14,719 --> 01:12:18,239
you want to do it that's fine next slide

2014
01:12:21,600 --> 01:12:23,600
so

2015
01:12:23,600 --> 01:12:26,080
to be clear the this is the scope of

2016
01:12:26,080 --> 01:12:27,920
this presentation is almost the opposite

2017
01:12:27,920 --> 01:12:30,960
of dkgs this is only about authenticated

2018
01:12:30,960 --> 01:12:31,920
ada

2019
01:12:31,920 --> 01:12:33,280
and maybe i need to be a little bit

2020
01:12:33,280 --> 01:12:34,880
clear about what authenticated means it

2021
01:12:34,880 --> 01:12:37,199
seems like we've we've had some some

2022
01:12:37,199 --> 01:12:38,480
different definitions so here's what i

2023
01:12:38,480 --> 01:12:40,159
mean i mean

2024
01:12:40,159 --> 01:12:42,719
basically downgrade resistant i mean an

2025
01:12:42,719 --> 01:12:44,960
active network adversary cannot ever

2026
01:12:44,960 --> 01:12:48,080
gain access to the dns query or the

2027
01:12:48,080 --> 01:12:49,760
response

2028
01:12:49,760 --> 01:12:51,840
all they can do is force a denial of

2029
01:12:51,840 --> 01:12:54,239
service

2030
01:12:55,120 --> 01:12:56,640
authenticated out

2031
01:12:56,640 --> 01:12:59,600
i have this abbreviation a2 dot

2032
01:12:59,600 --> 01:13:02,239
authenticated adot is possible without

2033
01:13:02,239 --> 01:13:04,400
any modification to the parents we can

2034
01:13:04,400 --> 01:13:07,440
actually do this today using components

2035
01:13:07,440 --> 01:13:09,679
that already exist you know we could

2036
01:13:09,679 --> 01:13:11,040
just sort of walk away and declare

2037
01:13:11,040 --> 01:13:14,000
victory almost

2038
01:13:14,000 --> 01:13:15,920
but it requires resolvers to be very

2039
01:13:15,920 --> 01:13:18,400
very patient so first the resolver

2040
01:13:18,400 --> 01:13:21,440
has to do an ns revalidation

2041
01:13:21,440 --> 01:13:24,080
before using a name server so i get an

2042
01:13:24,080 --> 01:13:27,360
ns record in glue it says you know this

2043
01:13:27,360 --> 01:13:29,040
name server is the name server for this

2044
01:13:29,040 --> 01:13:31,199
child zone now i have to go use that

2045
01:13:31,199 --> 01:13:33,199
name server and ask for the ns record

2046
01:13:33,199 --> 01:13:34,159
again

2047
01:13:34,159 --> 01:13:36,800
and use dns sec to validate that that's

2048
01:13:36,800 --> 01:13:38,320
actually correct

2049
01:13:38,320 --> 01:13:41,360
and then i can use that name server

2050
01:13:41,360 --> 01:13:43,280
and also before i actually use the name

2051
01:13:43,280 --> 01:13:45,840
server i need to send an svcb query is

2052
01:13:45,840 --> 01:13:48,719
assuming in this model that we we settle

2053
01:13:48,719 --> 01:13:51,199
on on using svcb i'll note that the

2054
01:13:51,199 --> 01:13:54,719
the svcb for dns draft is now adopted in

2055
01:13:54,719 --> 01:13:57,040
add

2056
01:13:57,040 --> 01:13:57,920
so

2057
01:13:57,920 --> 01:14:00,719
if the resolver sends an svcb query for

2058
01:14:00,719 --> 01:14:03,280
this name and again uses dns sec to

2059
01:14:03,280 --> 01:14:04,719
validate it

2060
01:14:04,719 --> 01:14:06,880
then in principle we can do

2061
01:14:06,880 --> 01:14:08,640
authenticated a dot

2062
01:14:08,640 --> 01:14:09,760
um

2063
01:14:09,760 --> 01:14:11,679
there's some interesting lingering

2064
01:14:11,679 --> 01:14:13,120
questions about

2065
01:14:13,120 --> 01:14:14,480
about how you

2066
01:14:14,480 --> 01:14:17,440
do certificate validation

2067
01:14:17,440 --> 01:14:21,520
but but apart from that we're very close

2068
01:14:21,520 --> 01:14:23,040
the problem is that this slows down

2069
01:14:23,040 --> 01:14:25,760
resolution of all domains

2070
01:14:25,760 --> 01:14:27,600
not just domains that are participating

2071
01:14:27,600 --> 01:14:28,960
in this experiment a resolver that

2072
01:14:28,960 --> 01:14:31,199
implements this quality policy slows

2073
01:14:31,199 --> 01:14:33,440
down resolution of every domain that it

2074
01:14:33,440 --> 01:14:35,360
tries to resolve so for that reason it

2075
01:14:35,360 --> 01:14:37,040
seems like this is not likely to be

2076
01:14:37,040 --> 01:14:38,719
deployed at scale although if you

2077
01:14:38,719 --> 01:14:41,280
disagree i'd be interested to hear okay

2078
01:14:41,280 --> 01:14:43,840
next slide

2079
01:14:44,640 --> 01:14:46,400
so we've had a lot of different

2080
01:14:46,400 --> 01:14:48,080
proposals in this working group and

2081
01:14:48,080 --> 01:14:50,640
we've got a few more today about adot

2082
01:14:50,640 --> 01:14:53,040
parent signals so within the framework

2083
01:14:53,040 --> 01:14:54,960
that i've just specified

2084
01:14:54,960 --> 01:14:57,120
an a dot parent signal anything in the

2085
01:14:57,120 --> 01:14:59,360
parent telling you to use a dot is

2086
01:14:59,360 --> 01:15:01,600
purely a performance optimization it's a

2087
01:15:01,600 --> 01:15:04,800
way to make a dot faster

2088
01:15:04,800 --> 01:15:07,199
and that may be really important because

2089
01:15:07,199 --> 01:15:11,040
resolvers are impatient so if we can't

2090
01:15:11,040 --> 01:15:14,000
make this pretty fast it may be that we

2091
01:15:14,000 --> 01:15:16,480
can't get it widely deployed but helping

2092
01:15:16,480 --> 01:15:18,400
it helps me a lot to think about these

2093
01:15:18,400 --> 01:15:20,320
parent signals in this performance

2094
01:15:20,320 --> 01:15:22,239
optimization context where there's

2095
01:15:22,239 --> 01:15:24,800
there's a slow path that we know would

2096
01:15:24,800 --> 01:15:26,880
work and we're just trying to find a

2097
01:15:26,880 --> 01:15:28,000
shortcut

2098
01:15:28,000 --> 01:15:30,560
next slide

2099
01:15:33,199 --> 01:15:35,199
this i think is the most important slide

2100
01:15:35,199 --> 01:15:36,960
of this presentation this is the slide

2101
01:15:36,960 --> 01:15:38,880
that i really want to focus on

2102
01:15:38,880 --> 01:15:40,239
the thing that makes these parent

2103
01:15:40,239 --> 01:15:43,920
signals hard is that there are a lot of

2104
01:15:43,920 --> 01:15:45,600
questions that we need to answer to

2105
01:15:45,600 --> 01:15:47,840
figure out the shape of the solution

2106
01:15:47,840 --> 01:15:49,920
and there are a lot of plausible answers

2107
01:15:49,920 --> 01:15:51,760
to these questions so i'm not going to

2108
01:15:51,760 --> 01:15:53,199
walk through all of these on this slide

2109
01:15:53,199 --> 01:15:54,880
this is just to say this is a long list

2110
01:15:54,880 --> 01:15:56,880
of possible questions

2111
01:15:56,880 --> 01:15:59,440
next slide

2112
01:16:02,400 --> 01:16:04,400
and these are those questions again with

2113
01:16:04,400 --> 01:16:07,920
the answers that that i put in to

2114
01:16:07,920 --> 01:16:10,239
to produce the ds glue

2115
01:16:10,239 --> 01:16:13,440
result so i would argue that if you pick

2116
01:16:13,440 --> 01:16:15,920
these answers then the ds glue design

2117
01:16:15,920 --> 01:16:17,760
kind of falls out and if you propose a

2118
01:16:17,760 --> 01:16:20,080
different design it's probably because

2119
01:16:20,080 --> 01:16:21,600
you have different answers for some of

2120
01:16:21,600 --> 01:16:23,600
these questions and maybe those are

2121
01:16:23,600 --> 01:16:25,440
valid answers really what i would like

2122
01:16:25,440 --> 01:16:27,920
is for the working group to

2123
01:16:27,920 --> 01:16:30,000
think through or at least somehow come

2124
01:16:30,000 --> 01:16:33,440
to consensus on on these answers or on

2125
01:16:33,440 --> 01:16:35,520
the answers to these questions because

2126
01:16:35,520 --> 01:16:37,520
that's going to shape the design that we

2127
01:16:37,520 --> 01:16:39,600
come up with

2128
01:16:39,600 --> 01:16:40,480
so

2129
01:16:40,480 --> 01:16:41,920
briefly

2130
01:16:41,920 --> 01:16:44,000
we cannot slow down the resolution of

2131
01:16:44,000 --> 01:16:47,600
any existing domains at all

2132
01:16:47,600 --> 01:16:50,960
we do care about authenticated dns over

2133
01:16:50,960 --> 01:16:52,760
tls under

2134
01:16:52,760 --> 01:16:55,440
non-adot parents

2135
01:16:55,440 --> 01:16:57,960
an example of that is the

2136
01:16:57,960 --> 01:17:00,320
dkg.gitlab.io link that was just sent

2137
01:17:00,320 --> 01:17:02,800
around right so

2138
01:17:02,800 --> 01:17:03,600
if

2139
01:17:03,600 --> 01:17:04,719
if

2140
01:17:04,719 --> 01:17:06,080
dot io

2141
01:17:06,080 --> 01:17:07,760
is

2142
01:17:07,760 --> 01:17:10,400
as a tld is not doing a dot

2143
01:17:10,400 --> 01:17:12,880
then we might still want authenticated a

2144
01:17:12,880 --> 01:17:15,520
dot for subdomains of gitlab.io so that

2145
01:17:15,520 --> 01:17:17,040
we don't see that we're

2146
01:17:17,040 --> 01:17:19,400
actually accessing

2147
01:17:19,400 --> 01:17:21,360
dkg.getgitlab.i otherwise we leak the

2148
01:17:21,360 --> 01:17:23,679
dkg label

2149
01:17:23,679 --> 01:17:25,600
can we require that the parents are

2150
01:17:25,600 --> 01:17:29,120
signed in this case yes

2151
01:17:29,120 --> 01:17:31,360
can we add new rr types to the glue so

2152
01:17:31,360 --> 01:17:33,360
the assumption here is no

2153
01:17:33,360 --> 01:17:35,199
that's different from for example draft

2154
01:17:35,199 --> 01:17:37,360
a docs which proposed adding new rr

2155
01:17:37,360 --> 01:17:39,440
types to the glue

2156
01:17:39,440 --> 01:17:41,199
can we add new digest types to the ds

2157
01:17:41,199 --> 01:17:43,199
record yes this relies on new digest

2158
01:17:43,199 --> 01:17:45,520
types

2159
01:17:45,520 --> 01:17:47,920
this there's also an element here that

2160
01:17:47,920 --> 01:17:50,480
is optimizing for the latency of domains

2161
01:17:50,480 --> 01:17:52,800
that do enable adot

2162
01:17:52,800 --> 01:17:54,640
because hopefully eventually that will

2163
01:17:54,640 --> 01:17:57,600
be a large fraction of the internet

2164
01:17:57,600 --> 01:18:00,800
um and finally can the child atomically

2165
01:18:00,800 --> 01:18:02,800
update whole batches of glue that

2166
01:18:02,800 --> 01:18:05,040
contain multiple rr sets the ns and the

2167
01:18:05,040 --> 01:18:07,520
ds and the glue all together atomically

2168
01:18:07,520 --> 01:18:08,400
uh

2169
01:18:08,400 --> 01:18:10,640
you know i we this assumes we cannot

2170
01:18:10,640 --> 01:18:14,480
rely on that okay next slide

2171
01:18:16,960 --> 01:18:17,760
so

2172
01:18:17,760 --> 01:18:20,239
the result of this those assumptions for

2173
01:18:20,239 --> 01:18:22,239
from my perspective is the the ds glue

2174
01:18:22,239 --> 01:18:25,760
structure so this is a new

2175
01:18:25,760 --> 01:18:28,480
algorithm type called ds glue

2176
01:18:28,480 --> 01:18:30,800
it also relies on a digest type which

2177
01:18:30,800 --> 01:18:32,640
has previously been proposed called

2178
01:18:32,640 --> 01:18:35,120
verbatim which is a fake digest type so

2179
01:18:35,120 --> 01:18:37,280
effectively it lets you just plop

2180
01:18:37,280 --> 01:18:39,120
arbitrary

2181
01:18:39,120 --> 01:18:41,120
arbitrary bytes into what would normally

2182
01:18:41,120 --> 01:18:44,400
be the digest field

2183
01:18:44,560 --> 01:18:46,960
and so the the ds glue each ds glue

2184
01:18:46,960 --> 01:18:49,920
record contains a tlv encoding a compact

2185
01:18:49,920 --> 01:18:52,960
encoding of an rr set

2186
01:18:52,960 --> 01:18:55,760
a glue r set

2187
01:18:55,760 --> 01:18:58,320
uh this has to be an rr set below the

2188
01:18:58,320 --> 01:19:00,400
zone cut inside this

2189
01:19:00,400 --> 01:19:01,199
um

2190
01:19:01,199 --> 01:19:03,199
inside this child zone and so to prove

2191
01:19:03,199 --> 01:19:05,280
that only actually the prefix of the

2192
01:19:05,280 --> 01:19:08,400
name is encoded so the child

2193
01:19:08,400 --> 01:19:12,080
the child zone name is implicit

2194
01:19:12,080 --> 01:19:14,640
and you can also encode non-existence of

2195
01:19:14,640 --> 01:19:16,480
a glue r set this way by encoding an

2196
01:19:16,480 --> 01:19:19,759
empty rrs next slide

2197
01:19:20,640 --> 01:19:22,400
what does it mean

2198
01:19:22,400 --> 01:19:25,520
so if you get a ds glue record it's a ds

2199
01:19:25,520 --> 01:19:27,679
record and so it's subject to the

2200
01:19:27,679 --> 01:19:30,960
standard rrsigs over dsr-r sets and the

2201
01:19:30,960 --> 01:19:33,600
whole resolution fails due to bogus if

2202
01:19:33,600 --> 01:19:35,280
anything is tampered or removed that's

2203
01:19:35,280 --> 01:19:37,360
the real authentication value of all

2204
01:19:37,360 --> 01:19:39,440
this

2205
01:19:39,440 --> 01:19:41,280
and how do you interpret the contents so

2206
01:19:41,280 --> 01:19:44,080
the contents of this ds glue record the

2207
01:19:44,080 --> 01:19:47,120
rr set inside the record is a glue rr

2208
01:19:47,120 --> 01:19:49,760
set that means it's only for delegation

2209
01:19:49,760 --> 01:19:51,360
following it's not authoritative for the

2210
01:19:51,360 --> 01:19:54,000
child zone it cannot be returned to a

2211
01:19:54,000 --> 01:19:55,760
stub resolver

2212
01:19:55,760 --> 01:19:58,000
it's only used during this delegation

2213
01:19:58,000 --> 01:19:59,840
process

2214
01:19:59,840 --> 01:20:03,040
and it can repeat ordinary glue in which

2215
01:20:03,040 --> 01:20:06,239
case the ds glue takes precedence uh are

2216
01:20:06,239 --> 01:20:08,080
set by our arson

2217
01:20:08,080 --> 01:20:10,320
in principle you can represent any r

2218
01:20:10,320 --> 01:20:12,320
glue of any rr type this way but the

2219
01:20:12,320 --> 01:20:14,080
draft says basically don't do anything

2220
01:20:14,080 --> 01:20:16,320
crazy because like originally i had

2221
01:20:16,320 --> 01:20:19,280
tried to put nsec rr sets inside the ds

2222
01:20:19,280 --> 01:20:20,719
glue and

2223
01:20:20,719 --> 01:20:22,719
it became clear that that was very

2224
01:20:22,719 --> 01:20:24,800
confusing so instead we're just going to

2225
01:20:24,800 --> 01:20:25,760
say

2226
01:20:25,760 --> 01:20:27,679
you have to stick to some rr types that

2227
01:20:27,679 --> 01:20:29,440
are understood and we can expand that as

2228
01:20:29,440 --> 01:20:33,799
we understand more next slide

2229
01:20:34,639 --> 01:20:36,000
so

2230
01:20:36,000 --> 01:20:38,560
here's a very simple example here's a

2231
01:20:38,560 --> 01:20:41,199
totally ordinary child and parent zone

2232
01:20:41,199 --> 01:20:44,320
they happen to be using dnssec and cds

2233
01:20:44,320 --> 01:20:46,400
but they are they are a totally ordinary

2234
01:20:46,400 --> 01:20:49,280
child and parent zone

2235
01:20:49,280 --> 01:20:51,840
next slide

2236
01:20:55,280 --> 01:20:57,360
here's the same example with as i was

2237
01:20:57,360 --> 01:20:59,760
talking about at the beginning the slow

2238
01:20:59,760 --> 01:21:01,920
a2 dot so all you have to do is drop an

2239
01:21:01,920 --> 01:21:03,920
svcb record into the client and in

2240
01:21:03,920 --> 01:21:05,520
principle a sufficiently patient

2241
01:21:05,520 --> 01:21:08,639
resolver could revalidate the ns record

2242
01:21:08,639 --> 01:21:10,719
check for the presence of an svcb record

2243
01:21:10,719 --> 01:21:13,520
find it upgrade to dot and then actually

2244
01:21:13,520 --> 01:21:16,239
issue the the query that it wants to

2245
01:21:16,239 --> 01:21:18,480
issue but this is slow

2246
01:21:18,480 --> 01:21:21,199
so next slide

2247
01:21:21,199 --> 01:21:23,199
this is what that zone looks like again

2248
01:21:23,199 --> 01:21:24,719
with ds glue

2249
01:21:24,719 --> 01:21:26,320
so

2250
01:21:26,320 --> 01:21:28,639
what we've done is

2251
01:21:28,639 --> 01:21:32,800
is just added two cds records

2252
01:21:32,800 --> 01:21:35,280
each of those cds records encodes an rr

2253
01:21:35,280 --> 01:21:36,080
set

2254
01:21:36,080 --> 01:21:39,040
one of them encodes the ns rr set the

2255
01:21:39,040 --> 01:21:42,880
other one encodes the svc brr set cds

2256
01:21:42,880 --> 01:21:45,679
copies these into the parent verbatim

2257
01:21:45,679 --> 01:21:47,600
and we're done

2258
01:21:47,600 --> 01:21:49,760
notably in principle the parent doesn't

2259
01:21:49,760 --> 01:21:51,520
need to know anything about this as long

2260
01:21:51,520 --> 01:21:53,679
as cds is working

2261
01:21:53,679 --> 01:21:56,159
the the parent just gets some more ds

2262
01:21:56,159 --> 01:21:58,159
records and and that's the end of the

2263
01:21:58,159 --> 01:22:00,480
story

2264
01:22:00,880 --> 01:22:03,040
but to uh to a resolver a resolver looks

2265
01:22:03,040 --> 01:22:05,280
in the parent zone and uh if the

2266
01:22:05,280 --> 01:22:08,000
resolver is ds glue aware it sees that

2267
01:22:08,000 --> 01:22:09,920
the ds record

2268
01:22:09,920 --> 01:22:12,960
contains these authenticated glue r sets

2269
01:22:12,960 --> 01:22:14,960
and it can use them to go directly to

2270
01:22:14,960 --> 01:22:18,080
dns over tls

2271
01:22:18,320 --> 01:22:20,639
notably if the if the resolver isn't

2272
01:22:20,639 --> 01:22:22,560
aware of ds glue then these just look

2273
01:22:22,560 --> 01:22:23,600
like

2274
01:22:23,600 --> 01:22:25,600
ds records of some unknown algorithm

2275
01:22:25,600 --> 01:22:29,679
type they're ignored next slide

2276
01:22:30,080 --> 01:22:31,679
so

2277
01:22:31,679 --> 01:22:34,639
my point here is ds glue shows that we

2278
01:22:34,639 --> 01:22:37,199
can do authenticated a dot

2279
01:22:37,199 --> 01:22:38,639
even under some very challenging

2280
01:22:38,639 --> 01:22:39,920
assumptions we can do it with no

2281
01:22:39,920 --> 01:22:41,760
slowdown for non-participating zones we

2282
01:22:41,760 --> 01:22:44,080
can do it with minimum latency for

2283
01:22:44,080 --> 01:22:46,239
participating zones we don't actually

2284
01:22:46,239 --> 01:22:50,159
even need the child zone to be signed

2285
01:22:50,320 --> 01:22:52,239
but really this is a very large design

2286
01:22:52,239 --> 01:22:53,520
space there are a lot of different

2287
01:22:53,520 --> 01:22:55,520
possibilities here and we are going to

2288
01:22:55,520 --> 01:22:57,600
have to figure out where we want to be

2289
01:22:57,600 --> 01:22:59,280
in that design space

2290
01:22:59,280 --> 01:23:01,920
that could take a while but also we're

2291
01:23:01,920 --> 01:23:03,440
not blocked

2292
01:23:03,440 --> 01:23:05,360
if we can agree on some of the details

2293
01:23:05,360 --> 01:23:07,679
of the slow path

2294
01:23:07,679 --> 01:23:09,199
we can actually get started with that

2295
01:23:09,199 --> 01:23:10,400
today

2296
01:23:10,400 --> 01:23:12,239
and start experimenting maybe we can't

2297
01:23:12,239 --> 01:23:14,800
deploy at scale but we could at least

2298
01:23:14,800 --> 01:23:18,080
set up experimental resolvers

2299
01:23:18,080 --> 01:23:21,280
or very privacy conscious resolvers

2300
01:23:21,280 --> 01:23:23,040
that are willing to make that

2301
01:23:23,040 --> 01:23:26,719
performance for for privacy trade-off

2302
01:23:26,719 --> 01:23:29,760
that's all for my slides

2303
01:23:29,920 --> 01:23:34,400
ben uh warren looks like your first nicu

2304
01:23:34,400 --> 01:23:36,880
thank you yep this is warren so i mean i

2305
01:23:36,880 --> 01:23:38,719
i will happily say that i do like the

2306
01:23:38,719 --> 01:23:40,880
fact that this is authenticated

2307
01:23:40,880 --> 01:23:43,360
but it does still feel to me quite

2308
01:23:43,360 --> 01:23:44,960
complex

2309
01:23:44,960 --> 01:23:46,960
um i do think it's something that's

2310
01:23:46,960 --> 01:23:48,400
potentially

2311
01:23:48,400 --> 01:23:51,840
a reasonable thing to work towards

2312
01:23:51,840 --> 01:23:53,840
but i still think that something like

2313
01:23:53,840 --> 01:23:54,719
you know

2314
01:23:54,719 --> 01:23:57,280
opportunistic name hack for now

2315
01:23:57,280 --> 01:23:58,719
is a

2316
01:23:58,719 --> 01:24:01,040
good way to at least get some of this

2317
01:24:01,040 --> 01:24:03,040
going in the meantime

2318
01:24:03,040 --> 01:24:05,440
my big concerns with this is

2319
01:24:05,440 --> 01:24:06,560
um

2320
01:24:06,560 --> 01:24:08,880
it requires dns which is not a huge

2321
01:24:08,880 --> 01:24:10,159
issue

2322
01:24:10,159 --> 01:24:13,840
but there are a lot of instances where

2323
01:24:13,840 --> 01:24:16,320
client oh sorry end users cannot really

2324
01:24:16,320 --> 01:24:18,880
publish arbitrary ds records

2325
01:24:18,880 --> 01:24:20,080
um

2326
01:24:20,080 --> 01:24:22,320
there are a lot of things where people

2327
01:24:22,320 --> 01:24:23,120
have

2328
01:24:23,120 --> 01:24:26,159
web uis in order to insert ds records

2329
01:24:26,159 --> 01:24:28,080
and they only allow a really small

2330
01:24:28,080 --> 01:24:30,000
number of them

2331
01:24:30,000 --> 01:24:31,760
there's also

2332
01:24:31,760 --> 01:24:33,440
places where

2333
01:24:33,440 --> 01:24:34,400
the

2334
01:24:34,400 --> 01:24:35,520
um

2335
01:24:35,520 --> 01:24:38,880
child provides the ds key to the parent

2336
01:24:38,880 --> 01:24:40,400
and the parent is the only one who

2337
01:24:40,400 --> 01:24:42,159
generates the ds record

2338
01:24:42,159 --> 01:24:44,800
so i think as a long-term this might be

2339
01:24:44,800 --> 01:24:45,520
so

2340
01:24:45,520 --> 01:24:47,440
for what it's worth this actually can be

2341
01:24:47,440 --> 01:24:50,159
made to work with cdns key but only if

2342
01:24:50,159 --> 01:24:50,960
the

2343
01:24:50,960 --> 01:24:52,719
child can also convince the parent to

2344
01:24:52,719 --> 01:24:55,920
use the verbatim digest fight yeah

2345
01:24:55,920 --> 01:24:56,800
um

2346
01:24:56,800 --> 01:24:58,960
and in the cases where it's actually the

2347
01:24:58,960 --> 01:25:00,960
parent who generates the ds

2348
01:25:00,960 --> 01:25:03,199
from the dns key that gets

2349
01:25:03,199 --> 01:25:04,239
triggered right

2350
01:25:04,239 --> 01:25:05,600
right the parent i the parent can

2351
01:25:05,600 --> 01:25:07,600
generate the ds record but only if the

2352
01:25:07,600 --> 01:25:09,360
child can tell the parent to please use

2353
01:25:09,360 --> 01:25:11,520
the verbatim digest yeah

2354
01:25:11,520 --> 01:25:14,159
so i mean again i think as a long-term

2355
01:25:14,159 --> 01:25:16,560
thing this might be a reasonable thing

2356
01:25:16,560 --> 01:25:18,560
but i still think it's worth the

2357
01:25:18,560 --> 01:25:20,159
um

2358
01:25:20,159 --> 01:25:22,880
getting something opportunistic for now

2359
01:25:22,880 --> 01:25:24,639
because then we at least have some

2360
01:25:24,639 --> 01:25:26,639
protection yes it's not perfect but it

2361
01:25:26,639 --> 01:25:28,320
sure is better than nothing

2362
01:25:28,320 --> 01:25:31,840
anyway soapbox right over

2363
01:25:35,040 --> 01:25:39,639
thanks warren uh jonathan you're next

2364
01:25:40,960 --> 01:25:44,320
hey uh everybody hear me

2365
01:25:44,320 --> 01:25:46,000
yes

2366
01:25:46,000 --> 01:25:48,400
great okay um so

2367
01:25:48,400 --> 01:25:49,600
i i

2368
01:25:49,600 --> 01:25:50,880
i like where you're coming from with

2369
01:25:50,880 --> 01:25:52,639
this i like particularly the idea of

2370
01:25:52,639 --> 01:25:54,719
setting out you know this idea of these

2371
01:25:54,719 --> 01:25:56,320
are the questions that i've answered in

2372
01:25:56,320 --> 01:25:57,840
this way and that's how i got here i

2373
01:25:57,840 --> 01:25:59,040
think that's

2374
01:25:59,040 --> 01:26:00,639
great one thing i kind of want to

2375
01:26:00,639 --> 01:26:02,080
quibble with is

2376
01:26:02,080 --> 01:26:04,000
this idea of whether or not we can ever

2377
01:26:04,000 --> 01:26:06,639
add new r types you know i've seen i

2378
01:26:06,639 --> 01:26:08,159
think many proposals here in other

2379
01:26:08,159 --> 01:26:10,400
groups of using ds for things that are

2380
01:26:10,400 --> 01:26:12,159
not really dns sec

2381
01:26:12,159 --> 01:26:14,880
there's clearly a need for a a better

2382
01:26:14,880 --> 01:26:16,719
record type in the parent of some type

2383
01:26:16,719 --> 01:26:17,760
whether it's

2384
01:26:17,760 --> 01:26:19,440
ns2 like to maple's proposal whether

2385
01:26:19,440 --> 01:26:20,639
it's some general purpose thing it

2386
01:26:20,639 --> 01:26:22,320
doesn't matter there's clearly a need

2387
01:26:22,320 --> 01:26:24,880
for that and we also now have a

2388
01:26:24,880 --> 01:26:26,560
mechanism that's been relatively

2389
01:26:26,560 --> 01:26:28,400
successful for a couple of years

2390
01:26:28,400 --> 01:26:30,880
for breaking changes which is flag day

2391
01:26:30,880 --> 01:26:32,000
so

2392
01:26:32,000 --> 01:26:34,880
as part of this work i'd like us at a

2393
01:26:34,880 --> 01:26:36,800
minimum deprived and ideally bringing it

2394
01:26:36,800 --> 01:26:39,280
to dns lab to agree on whether or not we

2395
01:26:39,280 --> 01:26:41,520
can ever add new rr types to a parent

2396
01:26:41,520 --> 01:26:44,159
and if we say no great let's say that

2397
01:26:44,159 --> 01:26:47,040
out loud and let's say you've got ds and

2398
01:26:47,040 --> 01:26:49,520
that's it have fun if we don't believe

2399
01:26:49,520 --> 01:26:51,760
that let's say that as well because i

2400
01:26:51,760 --> 01:26:53,600
think we're all making this assumption

2401
01:26:53,600 --> 01:26:55,920
that we can't do it um

2402
01:26:55,920 --> 01:26:57,679
with that but clearly it's happening

2403
01:26:57,679 --> 01:26:59,040
clearly we've done it in the past so

2404
01:26:59,040 --> 01:27:00,400
let's either decide that we could never

2405
01:27:00,400 --> 01:27:02,400
do it or let's decide that we really

2406
01:27:02,400 --> 01:27:04,320
need to do it i i don't like this middle

2407
01:27:04,320 --> 01:27:06,480
ground of we'll just assume we can't do

2408
01:27:06,480 --> 01:27:08,159
it so we'll overload something that was

2409
01:27:08,159 --> 01:27:09,600
not its original purpose and that's not

2410
01:27:09,600 --> 01:27:11,199
you know a complaint i like the way the

2411
01:27:11,199 --> 01:27:13,040
draft works i really just want us to

2412
01:27:13,040 --> 01:27:15,040
tackle that question as part of this and

2413
01:27:15,040 --> 01:27:17,520
agree as a group on the answer to it

2414
01:27:17,520 --> 01:27:19,840
if we can

2415
01:27:20,719 --> 01:27:23,280
thanks uh you know i'll i'll just say

2416
01:27:23,280 --> 01:27:25,120
that there are shades of grey in there

2417
01:27:25,120 --> 01:27:27,040
too right like

2418
01:27:27,040 --> 01:27:28,480
we've heard i think opinions in the

2419
01:27:28,480 --> 01:27:30,000
working group that

2420
01:27:30,000 --> 01:27:31,600
the new rr types in the parent are

2421
01:27:31,600 --> 01:27:32,480
possible

2422
01:27:32,480 --> 01:27:34,560
but the time scale for them is

2423
01:27:34,560 --> 01:27:36,719
essentially too long for our patients

2424
01:27:36,719 --> 01:27:39,280
for this work

2425
01:27:39,840 --> 01:27:41,520
sure and that makes sense and maybe

2426
01:27:41,520 --> 01:27:43,600
another aspect of it is you know we

2427
01:27:43,600 --> 01:27:45,600
decide that there's a time aspect to it

2428
01:27:45,600 --> 01:27:47,120
and you know yes you can have them if

2429
01:27:47,120 --> 01:27:48,239
you're willing to wait 10 years or

2430
01:27:48,239 --> 01:27:49,360
something but i also think we can play

2431
01:27:49,360 --> 01:27:50,960
with that time so i'd like us just to

2432
01:27:50,960 --> 01:27:52,480
all think about that as group

2433
01:27:52,480 --> 01:27:55,519
going forward thank you thanks

2434
01:27:56,960 --> 01:28:01,440
jonathan uh eric you're next

2435
01:28:01,440 --> 01:28:04,400
wasn't that jonathan

2436
01:28:05,520 --> 01:28:08,159
eric it's me actually yeah um thanks for

2437
01:28:08,159 --> 01:28:09,600
the presentation ben um i appreciate

2438
01:28:09,600 --> 01:28:11,360
your attempt to smuggle the entire dns

2439
01:28:11,360 --> 01:28:13,280
into uh into the parent zone um that's

2440
01:28:13,280 --> 01:28:14,639
that's never solving this problem so

2441
01:28:14,639 --> 01:28:16,800
whenever i have to deal with it again um

2442
01:28:16,800 --> 01:28:19,040
um i i think that this the the most

2443
01:28:19,040 --> 01:28:20,400
important slide or rather most important

2444
01:28:20,400 --> 01:28:21,440
side of the answers is a great

2445
01:28:21,440 --> 01:28:22,880
contribution to like how to think about

2446
01:28:22,880 --> 01:28:24,400
this um

2447
01:28:24,400 --> 01:28:26,800
i think i would just go back to um

2448
01:28:26,800 --> 01:28:28,960
uh um sort of like my appeal from both

2449
01:28:28,960 --> 01:28:30,239
from my previous two appearances in the

2450
01:28:30,239 --> 01:28:32,639
microphone um which is like

2451
01:28:32,639 --> 01:28:34,960
you know we've now seen a we have now i

2452
01:28:34,960 --> 01:28:36,400
mean we've spent probably the past two

2453
01:28:36,400 --> 01:28:37,920
years like

2454
01:28:37,920 --> 01:28:40,080
people trying out different

2455
01:28:40,080 --> 01:28:42,239
like you know different kinds of like

2456
01:28:42,239 --> 01:28:44,000
permutations of the design space and

2457
01:28:44,000 --> 01:28:45,199
attempt to find something that people

2458
01:28:45,199 --> 01:28:46,880
will accept right and that we can

2459
01:28:46,880 --> 01:28:50,080
consensus on and um and like when i what

2460
01:28:50,080 --> 01:28:52,639
i see is like every single one of those

2461
01:28:52,639 --> 01:28:55,199
um you know um has sort of like

2462
01:28:55,199 --> 01:28:56,800
different people perhaps has a that's

2463
01:28:56,800 --> 01:28:58,239
clever but like we can't do it for this

2464
01:28:58,239 --> 01:28:59,520
reason and we're not going to do it

2465
01:28:59,520 --> 01:29:02,639
right and so like i would implore the

2466
01:29:02,639 --> 01:29:03,679
chairs

2467
01:29:03,679 --> 01:29:06,719
to like try to craft some mechanism

2468
01:29:06,719 --> 01:29:08,400
like for getting us out of this hole

2469
01:29:08,400 --> 01:29:10,000
even if that is declaring defeat and

2470
01:29:10,000 --> 01:29:12,000
going home because like we are burning

2471
01:29:12,000 --> 01:29:13,840
like an enormous amount of like

2472
01:29:13,840 --> 01:29:15,600
intellectual effort by like you and me

2473
01:29:15,600 --> 01:29:17,280
and dkg i'm like trying to solve this

2474
01:29:17,280 --> 01:29:18,639
problem and if the answer is it's just a

2475
01:29:18,639 --> 01:29:21,040
hard no like any like if we go through

2476
01:29:21,040 --> 01:29:22,719
that previous immediate answer to that

2477
01:29:22,719 --> 01:29:24,800
slide but if the answer is like that no

2478
01:29:24,800 --> 01:29:26,320
basically those things are all have no's

2479
01:29:26,320 --> 01:29:28,159
on them then like let's just admit that

2480
01:29:28,159 --> 01:29:30,000
and go home because like because like

2481
01:29:30,000 --> 01:29:32,159
it's just not worth like you know like

2482
01:29:32,159 --> 01:29:33,600
refining these proposals over and over

2483
01:29:33,600 --> 01:29:35,280
again merely discover they cannot be

2484
01:29:35,280 --> 01:29:36,239
done

2485
01:29:36,239 --> 01:29:37,600
um though i think this is a good work

2486
01:29:37,600 --> 01:29:39,040
and like i'd be more if this were the

2487
01:29:39,040 --> 01:29:40,639
answer i'd be more than pleased i'd like

2488
01:29:40,639 --> 01:29:42,560
for this to be the answer right away um

2489
01:29:42,560 --> 01:29:44,239
so i i i don't mean to discourage you in

2490
01:29:44,239 --> 01:29:45,840
any way i just don't i just i'm trying

2491
01:29:45,840 --> 01:29:46,880
to think about recycling with your

2492
01:29:46,880 --> 01:29:48,880
effort right and my effort and appeals

2493
01:29:48,880 --> 01:29:50,400
effort

2494
01:29:50,400 --> 01:29:53,559
thank you

2495
01:29:54,159 --> 01:29:56,800
paul you're next

2496
01:29:56,800 --> 01:29:57,840
so

2497
01:29:57,840 --> 01:29:59,280
when we used to have face-to-face

2498
01:29:59,280 --> 01:30:01,600
meetings sometimes uh somebody in line

2499
01:30:01,600 --> 01:30:04,560
would say would get out of line and say

2500
01:30:04,560 --> 01:30:06,639
i i don't need to say anything because

2501
01:30:06,639 --> 01:30:08,159
the person in front of me just said

2502
01:30:08,159 --> 01:30:10,320
everything so i'm doing that now

2503
01:30:10,320 --> 01:30:13,599
everything eckerd just said

2504
01:30:15,040 --> 01:30:18,480
thanks paul uh dkg

2505
01:30:18,480 --> 01:30:19,440
uh

2506
01:30:19,440 --> 01:30:21,679
i like i also like this draft i like

2507
01:30:21,679 --> 01:30:23,600
this framing thank you ben

2508
01:30:23,600 --> 01:30:25,600
um my i have one question for you which

2509
01:30:25,600 --> 01:30:27,600
is have you tried to publish such a

2510
01:30:27,600 --> 01:30:30,639
reddit record uh in any

2511
01:30:30,639 --> 01:30:33,040
uh authoritative zone or do you not want

2512
01:30:33,040 --> 01:30:35,120
to talk about that on the mic

2513
01:30:35,120 --> 01:30:37,440
uh i haven't i haven't attempted to do

2514
01:30:37,440 --> 01:30:38,719
that um

2515
01:30:38,719 --> 01:30:42,000
the i mean yes the the truth is that i

2516
01:30:42,000 --> 01:30:44,239
think there are some barriers to doing

2517
01:30:44,239 --> 01:30:45,360
this

2518
01:30:45,360 --> 01:30:47,520
uh as is today

2519
01:30:47,520 --> 01:30:49,600
at the specifically at the tld layer you

2520
01:30:49,600 --> 01:30:51,920
know below you know for for lower zone

2521
01:30:51,920 --> 01:30:53,840
cuts you can you can do whatever you

2522
01:30:53,840 --> 01:30:54,639
want

2523
01:30:54,639 --> 01:30:55,679
but

2524
01:30:55,679 --> 01:30:58,400
um but with clds you need some way to

2525
01:30:58,400 --> 01:31:00,159
push those ds records into the parent

2526
01:31:00,159 --> 01:31:02,960
which means you need cds support there

2527
01:31:02,960 --> 01:31:04,639
are only a small number of tlds that

2528
01:31:04,639 --> 01:31:06,400
have their own

2529
01:31:06,400 --> 01:31:08,719
that have their own cds support and a

2530
01:31:08,719 --> 01:31:10,400
lot of those cds

2531
01:31:10,400 --> 01:31:13,120
implementations have filtering for

2532
01:31:13,120 --> 01:31:15,600
defined algorithms so

2533
01:31:15,600 --> 01:31:19,120
it's common to for parents to validate

2534
01:31:19,120 --> 01:31:20,320
the

2535
01:31:20,320 --> 01:31:22,320
not validate sorry but

2536
01:31:22,320 --> 01:31:25,120
perform a little bit of of basic format

2537
01:31:25,120 --> 01:31:28,159
checking on the cds record including

2538
01:31:28,159 --> 01:31:32,159
checking that it uh that it has a known

2539
01:31:32,159 --> 01:31:34,000
algorithm type

2540
01:31:34,000 --> 01:31:35,520
so okay so look

2541
01:31:35,520 --> 01:31:37,520
this this mechanism we've been here

2542
01:31:37,520 --> 01:31:38,560
before

2543
01:31:38,560 --> 01:31:41,600
um with txt records versus say spf

2544
01:31:41,600 --> 01:31:43,440
records right

2545
01:31:43,440 --> 01:31:45,120
is this is the same game just at the

2546
01:31:45,120 --> 01:31:48,480
next layer up in the dns hierarchy right

2547
01:31:48,480 --> 01:31:51,120
oh we can't distribute uh spf records

2548
01:31:51,120 --> 01:31:53,199
because most you know a bunch of dns

2549
01:31:53,199 --> 01:31:55,440
hosts refuse to publish them and now

2550
01:31:55,440 --> 01:31:56,480
we're saying

2551
01:31:56,480 --> 01:31:58,480
that the parent zones refuse to publish

2552
01:31:58,480 --> 01:32:01,040
certain things so

2553
01:32:01,040 --> 01:32:02,800
there is clearly a need for this to be

2554
01:32:02,800 --> 01:32:03,840
published

2555
01:32:03,840 --> 01:32:05,760
either the parent zones can decide to

2556
01:32:05,760 --> 01:32:07,040
publish

2557
01:32:07,040 --> 01:32:09,600
these whatever these hypothetical new

2558
01:32:09,600 --> 01:32:10,480
uh

2559
01:32:10,480 --> 01:32:12,800
code points are within ds or they can

2560
01:32:12,800 --> 01:32:15,440
publish them as new record types

2561
01:32:15,440 --> 01:32:17,679
um

2562
01:32:17,679 --> 01:32:19,920
the parent zones that refuse to do that

2563
01:32:19,920 --> 01:32:22,159
are basically directly blocking progress

2564
01:32:22,159 --> 01:32:23,679
and we just need to say this is what we

2565
01:32:23,679 --> 01:32:24,880
need you to do

2566
01:32:24,880 --> 01:32:26,639
if we think it's a bigger lift to ask

2567
01:32:26,639 --> 01:32:28,320
them to accept new record types than to

2568
01:32:28,320 --> 01:32:30,080
that and to ask them for this we should

2569
01:32:30,080 --> 01:32:31,520
ask them for this

2570
01:32:31,520 --> 01:32:33,360
uh i don't like

2571
01:32:33,360 --> 01:32:35,199
ben's right we're not blocked

2572
01:32:35,199 --> 01:32:37,440
uh unless we just let ourselves get

2573
01:32:37,440 --> 01:32:39,360
stuck between these two choices

2574
01:32:39,360 --> 01:32:42,799
i would be fine with this being a result

2575
01:32:43,440 --> 01:32:44,320
thanks

2576
01:32:44,320 --> 01:32:47,120
uh yeah i do think just adding new

2577
01:32:47,120 --> 01:32:49,600
record types is is a bit more

2578
01:32:49,600 --> 01:32:51,280
complicated than it sounds because if

2579
01:32:51,280 --> 01:32:52,800
you just add new record types to the

2580
01:32:52,800 --> 01:32:55,840
glue they're not authenticated so

2581
01:32:55,840 --> 01:32:57,199
we need

2582
01:32:57,199 --> 01:32:59,280
uh we also need to figure out what our

2583
01:32:59,280 --> 01:33:01,920
plan would be for authenticating any new

2584
01:33:01,920 --> 01:33:03,440
authenticated record type that's never

2585
01:33:03,440 --> 01:33:05,040
been done before right now i meant to

2586
01:33:05,040 --> 01:33:07,199
say that we need new record types that

2587
01:33:07,199 --> 01:33:08,960
that would be signed record types by the

2588
01:33:08,960 --> 01:33:10,320
parents though

2589
01:33:10,320 --> 01:33:11,679
that's what i'm going to say

2590
01:33:11,679 --> 01:33:15,239
that's a novel concept

2591
01:33:22,000 --> 01:33:24,480
peter you're next

2592
01:33:24,480 --> 01:33:26,000
yeah so if you can hear me

2593
01:33:26,000 --> 01:33:27,199
so um

2594
01:33:27,199 --> 01:33:28,800
i think the goal that was mentioned in

2595
01:33:28,800 --> 01:33:30,159
the beginning of the presentation was

2596
01:33:30,159 --> 01:33:31,679
that an active attacker can't learn

2597
01:33:31,679 --> 01:33:33,520
anything about the query

2598
01:33:33,520 --> 01:33:35,520
and you said that you could also do that

2599
01:33:35,520 --> 01:33:37,520
without the s glue if you perform an s

2600
01:33:37,520 --> 01:33:39,040
revalidation

2601
01:33:39,040 --> 01:33:42,080
um by asking the name server what the s

2602
01:33:42,080 --> 01:33:43,360
records are

2603
01:33:43,360 --> 01:33:44,560
and um

2604
01:33:44,560 --> 01:33:45,760
i think at that point you're already

2605
01:33:45,760 --> 01:33:48,080
leaking the child zone name to that name

2606
01:33:48,080 --> 01:33:50,480
server that you're querying which has

2607
01:33:50,480 --> 01:33:52,719
not been authenticated so i don't think

2608
01:33:52,719 --> 01:33:54,400
the statement is true that nothing is

2609
01:33:54,400 --> 01:33:56,239
learned by an active attacker and if you

2610
01:33:56,239 --> 01:33:58,320
want to avoid that i think um

2611
01:33:58,320 --> 01:34:00,400
using bs glue is

2612
01:34:00,400 --> 01:34:02,560
one way to do it

2613
01:34:02,560 --> 01:34:04,960
and as far as i understood the bs clue

2614
01:34:04,960 --> 01:34:06,960
would contain information from the child

2615
01:34:06,960 --> 01:34:09,040
zones such as the scvp record for

2616
01:34:09,040 --> 01:34:12,560
example svcp record um but as i just

2617
01:34:12,560 --> 01:34:14,400
said it's not good enough to query that

2618
01:34:14,400 --> 01:34:16,159
stuff from the child name server because

2619
01:34:16,159 --> 01:34:17,600
at that point it's not authenticated yet

2620
01:34:17,600 --> 01:34:18,639
you have to query from the parent

2621
01:34:18,639 --> 01:34:20,800
anyways so what's the point of keeping

2622
01:34:20,800 --> 01:34:23,360
that record in the child zone

2623
01:34:23,360 --> 01:34:24,719
why don't you just add it to the parent

2624
01:34:24,719 --> 01:34:27,679
only in the ds glue

2625
01:34:27,920 --> 01:34:30,880
sure so um you might be right about that

2626
01:34:30,880 --> 01:34:32,159
first point i'm going to have to think

2627
01:34:32,159 --> 01:34:35,440
about that a little bit more

2628
01:34:35,440 --> 01:34:37,120
on the second point

2629
01:34:37,120 --> 01:34:39,440
it uh i don't think it's true because

2630
01:34:39,440 --> 01:34:42,159
the the owner name of the svcb record is

2631
01:34:42,159 --> 01:34:45,760
the name server name not

2632
01:34:45,760 --> 01:34:49,679
uh not the child zone name

2633
01:34:49,920 --> 01:34:51,040
uh

2634
01:34:51,040 --> 01:34:52,000
so

2635
01:34:52,000 --> 01:34:54,719
in this the model that this is all in is

2636
01:34:54,719 --> 01:34:56,320
that the name server name is not

2637
01:34:56,320 --> 01:34:57,360
sensitive

2638
01:34:57,360 --> 01:34:58,560
it's the

2639
01:34:58,560 --> 01:35:02,080
um it's the original q name contents

2640
01:35:02,080 --> 01:35:04,239
that are considered sensitive

2641
01:35:04,239 --> 01:35:07,199
okay thank you i confused that um

2642
01:35:07,199 --> 01:35:08,239
but

2643
01:35:08,239 --> 01:35:10,000
maybe that maybe that answers part of

2644
01:35:10,000 --> 01:35:11,199
your question

2645
01:35:11,199 --> 01:35:13,040
in general my

2646
01:35:13,040 --> 01:35:14,560
my attitude here has been that for

2647
01:35:14,560 --> 01:35:17,600
conceptual simplicity this stuff is glue

2648
01:35:17,600 --> 01:35:18,880
uh glue

2649
01:35:18,880 --> 01:35:20,639
is supposed to also is supposed to be

2650
01:35:20,639 --> 01:35:22,320
replicating things that are actually in

2651
01:35:22,320 --> 01:35:24,239
the child zone so

2652
01:35:24,239 --> 01:35:25,760
even if it's not necessary it seems like

2653
01:35:25,760 --> 01:35:27,600
a good idea to also have it in the child

2654
01:35:27,600 --> 01:35:29,840
zone

2655
01:35:32,560 --> 01:35:34,639
all right thanks peter uh ralph you're

2656
01:35:34,639 --> 01:35:37,040
next

2657
01:35:41,040 --> 01:35:43,840
can people hear me

2658
01:35:44,800 --> 01:35:45,840
yes

2659
01:35:45,840 --> 01:35:47,040
okay great

2660
01:35:47,040 --> 01:35:49,119
different browsers

2661
01:35:49,119 --> 01:35:49,920
so

2662
01:35:49,920 --> 01:35:50,800
i mean

2663
01:35:50,800 --> 01:35:53,119
what this draft and others are doing is

2664
01:35:53,119 --> 01:35:54,960
pretty much changing the way

2665
01:35:54,960 --> 01:35:58,320
how resolvers iterate uh

2666
01:35:58,320 --> 01:36:00,800
or recurs to the

2667
01:36:00,800 --> 01:36:02,080
domain stream

2668
01:36:02,080 --> 01:36:03,600
and

2669
01:36:03,600 --> 01:36:06,560
basing this change on pretty much a heck

2670
01:36:06,560 --> 01:36:07,920
by

2671
01:36:07,920 --> 01:36:10,560
cleverly reusing some existing record i

2672
01:36:10,560 --> 01:36:12,639
don't think it's good engineering and i

2673
01:36:12,639 --> 01:36:14,800
echo what john said

2674
01:36:14,800 --> 01:36:16,960
we certainly can change stuff at the

2675
01:36:16,960 --> 01:36:19,040
parent and the slides we had there with

2676
01:36:19,040 --> 01:36:20,000
the

2677
01:36:20,000 --> 01:36:20,880
uh

2678
01:36:20,880 --> 01:36:23,040
here's what we can we can't do some

2679
01:36:23,040 --> 01:36:24,560
people in the working group might have

2680
01:36:24,560 --> 01:36:26,080
different opinions on what you can and

2681
01:36:26,080 --> 01:36:27,360
what you can't do

2682
01:36:27,360 --> 01:36:29,520
so i think and that's the basis that

2683
01:36:29,520 --> 01:36:32,560
what may be accurate that we

2684
01:36:32,560 --> 01:36:33,920
seem to be impossible to common

2685
01:36:33,920 --> 01:36:35,760
consensus on this

2686
01:36:35,760 --> 01:36:36,840
so

2687
01:36:36,840 --> 01:36:38,639
uh

2688
01:36:38,639 --> 01:36:41,119
but for recursing i would really rather

2689
01:36:41,119 --> 01:36:44,159
see something that is more in line with

2690
01:36:44,159 --> 01:36:46,000
how the dns works and of course if you

2691
01:36:46,000 --> 01:36:47,920
want to

2692
01:36:47,920 --> 01:36:50,719
introduce that you have to

2693
01:36:50,719 --> 01:36:53,440
introduce records at the parent and the

2694
01:36:53,440 --> 01:36:55,520
and the child possibly also

2695
01:36:55,520 --> 01:36:58,560
to make that bulletproof rather than

2696
01:36:58,560 --> 01:37:00,400
hacking it onto an existing record

2697
01:37:00,400 --> 01:37:03,440
that's just my opinion

2698
01:37:04,560 --> 01:37:07,679
thanks uh yeah so i would be i would be

2699
01:37:07,679 --> 01:37:09,280
happy to see

2700
01:37:09,280 --> 01:37:11,760
new drafts talking about um what it

2701
01:37:11,760 --> 01:37:15,040
would take to add a new authenticated

2702
01:37:15,040 --> 01:37:16,400
record type

2703
01:37:16,400 --> 01:37:18,639
at the parent zone

2704
01:37:18,639 --> 01:37:20,639
i do think that the barriers to that are

2705
01:37:20,639 --> 01:37:23,040
remarkably high um

2706
01:37:23,040 --> 01:37:25,760
you know epp being part of it dnsec

2707
01:37:25,760 --> 01:37:26,719
rules

2708
01:37:26,719 --> 01:37:28,800
being part of it you know we're talking

2709
01:37:28,800 --> 01:37:30,159
about i think

2710
01:37:30,159 --> 01:37:33,360
a new set of rrsigs from the parent and

2711
01:37:33,360 --> 01:37:36,239
possibly new bits in the super parent

2712
01:37:36,239 --> 01:37:38,639
because we need an authenticated way

2713
01:37:38,639 --> 01:37:41,679
to tell the resolver about whether these

2714
01:37:41,679 --> 01:37:42,960
records are present so that an

2715
01:37:42,960 --> 01:37:45,360
intermediary can't remove them and claim

2716
01:37:45,360 --> 01:37:47,520
that a resolver is is implementing the

2717
01:37:47,520 --> 01:37:49,119
old behavior instead of the new behavior

2718
01:37:49,119 --> 01:37:51,040
sorry that an authoritative has the old

2719
01:37:51,040 --> 01:37:53,199
behavior instead of the new behavior

2720
01:37:53,199 --> 01:37:54,320
so

2721
01:37:54,320 --> 01:37:55,280
uh

2722
01:37:55,280 --> 01:37:59,040
it seems quite tricky to me um

2723
01:37:59,040 --> 01:38:01,119
like a very involved change

2724
01:38:01,119 --> 01:38:03,679
it definitely is hard but i don't think

2725
01:38:03,679 --> 01:38:05,760
it's impossible and dns sec rules are

2726
01:38:05,760 --> 01:38:08,239
also something i mean if we are going to

2727
01:38:08,239 --> 01:38:12,560
this way revisiting dns after uh so many

2728
01:38:12,560 --> 01:38:14,480
years we probably also can change stuff

2729
01:38:14,480 --> 01:38:16,719
there but it would be a

2730
01:38:16,719 --> 01:38:19,119
proper kind of dns solution rather than

2731
01:38:19,119 --> 01:38:22,080
a hack that we seem to push on that's

2732
01:38:22,080 --> 01:38:23,840
what i just think

2733
01:38:23,840 --> 01:38:26,880
sure i you know i think that anybody who

2734
01:38:26,880 --> 01:38:29,119
writes a hack tends to get a little bit

2735
01:38:29,119 --> 01:38:31,600
attached to it so uh you know i have a

2736
01:38:31,600 --> 01:38:33,679
view of this where you know this is

2737
01:38:33,679 --> 01:38:36,159
maybe just an expansion of the idea of

2738
01:38:36,159 --> 01:38:38,400
what constant of what a ds record is

2739
01:38:38,400 --> 01:38:41,119
maybe it's actually all of the signed

2740
01:38:41,119 --> 01:38:42,840
data required for a

2741
01:38:42,840 --> 01:38:44,719
delegation but

2742
01:38:44,719 --> 01:38:45,520
um

2743
01:38:45,520 --> 01:38:48,639
but that's a matter of opinion

2744
01:38:51,040 --> 01:38:53,119
thanks ralph and robert you're last in

2745
01:38:53,119 --> 01:38:54,880
the cube

2746
01:38:54,880 --> 01:38:56,960
hey thanks ben for presenting i just

2747
01:38:56,960 --> 01:38:58,480
wanted to close on some thoughts on this

2748
01:38:58,480 --> 01:38:59,920
versus the other drafts we've heard

2749
01:38:59,920 --> 01:39:01,679
about today i think we need to have

2750
01:39:01,679 --> 01:39:04,159
multiple paths to getting a dot and

2751
01:39:04,159 --> 01:39:06,560
authenticated a dot out there

2752
01:39:06,560 --> 01:39:08,000
if not today like eventually the signals

2753
01:39:08,000 --> 01:39:09,600
are going to change whatever we hear

2754
01:39:09,600 --> 01:39:11,040
about today is going to through

2755
01:39:11,040 --> 01:39:13,119
experience turn out to be wrong and

2756
01:39:13,119 --> 01:39:15,440
from my point of view having coexistence

2757
01:39:15,440 --> 01:39:17,840
and transition are key requirements you

2758
01:39:17,840 --> 01:39:18,719
know some of the other comments we've

2759
01:39:18,719 --> 01:39:20,080
heard today about

2760
01:39:20,080 --> 01:39:21,920
onboarding load or making safe changes

2761
01:39:21,920 --> 01:39:23,360
to infrastructure those all those all

2762
01:39:23,360 --> 01:39:24,960
are very

2763
01:39:24,960 --> 01:39:26,639
important so you know i think maybe we

2764
01:39:26,639 --> 01:39:28,880
need to shift away from

2765
01:39:28,880 --> 01:39:31,040
perfect towards us accepting any draft

2766
01:39:31,040 --> 01:39:33,119
that has promise even if it's flawed

2767
01:39:33,119 --> 01:39:35,360
full of flaws or like tons of flaws if

2768
01:39:35,360 --> 01:39:37,760
it works we should perhaps accept it i

2769
01:39:37,760 --> 01:39:38,880
guess what i'm saying is we should lower

2770
01:39:38,880 --> 01:39:40,400
the bar from

2771
01:39:40,400 --> 01:39:42,159
to could work instead of works

2772
01:39:42,159 --> 01:39:44,400
universally or has unanimous support by

2773
01:39:44,400 --> 01:39:47,119
by the working group

2774
01:39:49,760 --> 01:39:51,600
yeah i'll note that our charter

2775
01:39:51,600 --> 01:39:54,080
discusses authenticated a adot as

2776
01:39:54,080 --> 01:39:55,840
something that we should pursue on an

2777
01:39:55,840 --> 01:39:57,679
experimental basis

2778
01:39:57,679 --> 01:39:59,280
so it doesn't require us to come up with

2779
01:39:59,280 --> 01:40:01,440
a standard or proposed standard level

2780
01:40:01,440 --> 01:40:02,400
solution

2781
01:40:02,400 --> 01:40:04,800
an experimental level solution is also

2782
01:40:04,800 --> 01:40:07,280
within charters clearly within charter

2783
01:40:07,280 --> 01:40:09,840
so

2784
01:40:10,960 --> 01:40:13,119
so it may be that there's work here that

2785
01:40:13,119 --> 01:40:14,320
the working group wouldn't like as

2786
01:40:14,320 --> 01:40:16,239
proposed standard but that the working

2787
01:40:16,239 --> 01:40:19,678
group would like as experimental

2788
01:40:19,840 --> 01:40:21,440
yeah ben i'll just follow up with that

2789
01:40:21,440 --> 01:40:23,679
one because you know we we the chairs

2790
01:40:23,679 --> 01:40:25,600
put a note to the mailing list several

2791
01:40:25,600 --> 01:40:27,600
months ago asking about

2792
01:40:27,600 --> 01:40:29,360
interest in doing more of an

2793
01:40:29,360 --> 01:40:30,639
experimental

2794
01:40:30,639 --> 01:40:33,040
uh you know approach for some of these

2795
01:40:33,040 --> 01:40:36,639
things so you know if if we can get a

2796
01:40:36,639 --> 01:40:38,639
you know a group of people interested in

2797
01:40:38,639 --> 01:40:39,840
doing that

2798
01:40:39,840 --> 01:40:41,520
uh the chairs would definitely encourage

2799
01:40:41,520 --> 01:40:43,520
that kind of experimentation

2800
01:40:43,520 --> 01:40:44,800
i think that'd be great if the chairs

2801
01:40:44,800 --> 01:40:46,000
could organize that that would be

2802
01:40:46,000 --> 01:40:47,840
fantastic

2803
01:40:47,840 --> 01:40:49,199
sure

2804
01:40:49,199 --> 01:40:52,638
all right thanks ben

2805
01:40:55,600 --> 01:40:58,800
all right uh next on the agenda is brian

2806
01:40:58,800 --> 01:41:01,520
dixon to talk about uh actually four

2807
01:41:01,520 --> 01:41:04,719
drafts that he just pushed

2808
01:41:04,719 --> 01:41:08,320
links to the mailing list the other day

2809
01:41:16,400 --> 01:41:19,840
hi everybody um

2810
01:41:19,840 --> 01:41:24,320
so i guess the first comment up front is

2811
01:41:24,320 --> 01:41:27,119
the the drafts are the latest version of

2812
01:41:27,119 --> 01:41:29,280
some things that have been

2813
01:41:29,280 --> 01:41:30,560
things i've been working on for the last

2814
01:41:30,560 --> 01:41:32,800
several weeks so i apologize for the

2815
01:41:32,800 --> 01:41:34,480
late push of the latest versions of

2816
01:41:34,480 --> 01:41:36,400
those to the list but

2817
01:41:36,400 --> 01:41:39,199
um in any case they are what they are

2818
01:41:39,199 --> 01:41:41,440
um the reason i am presenting

2819
01:41:41,440 --> 01:41:42,320
both

2820
01:41:42,320 --> 01:41:43,520
uh

2821
01:41:43,520 --> 01:41:48,239
drafts that are uh in deprive and dns op

2822
01:41:48,239 --> 01:41:50,239
is that they're

2823
01:41:50,239 --> 01:41:51,520
primarily

2824
01:41:51,520 --> 01:41:54,000
motivated by the

2825
01:41:54,000 --> 01:41:55,040
uh

2826
01:41:55,040 --> 01:41:56,480
the the

2827
01:41:56,480 --> 01:41:57,840
uh a dot

2828
01:41:57,840 --> 01:42:01,119
component uh but some of the uh

2829
01:42:01,119 --> 01:42:02,960
some of the other drafts

2830
01:42:02,960 --> 01:42:05,520
have wider applicability

2831
01:42:05,520 --> 01:42:06,320
or

2832
01:42:06,320 --> 01:42:07,840
you know

2833
01:42:07,840 --> 01:42:11,180
are better suited for being in dns off

2834
01:42:11,180 --> 01:42:12,320
[Music]

2835
01:42:12,320 --> 01:42:14,159
so the the only reason that they're in

2836
01:42:14,159 --> 01:42:17,280
dns op is they're a better fit there but

2837
01:42:17,280 --> 01:42:19,760
the primary draft

2838
01:42:19,760 --> 01:42:22,239
depends on them uh in terms of like how

2839
01:42:22,239 --> 01:42:24,239
it works

2840
01:42:24,239 --> 01:42:27,480
next slide

2841
01:42:28,159 --> 01:42:30,560
so this is what i was taking as a

2842
01:42:30,560 --> 01:42:33,920
takeaway or how i was viewing uh

2843
01:42:33,920 --> 01:42:35,840
what what um

2844
01:42:35,840 --> 01:42:38,159
would be goals at least in terms of my

2845
01:42:38,159 --> 01:42:40,320
view on things uh for

2846
01:42:40,320 --> 01:42:43,520
dns over tls to authority uh with the

2847
01:42:43,520 --> 01:42:45,360
you know authentication

2848
01:42:45,360 --> 01:42:46,400
um

2849
01:42:46,400 --> 01:42:47,119
and i think they're pretty

2850
01:42:47,119 --> 01:42:48,880
straightforward uh this is going to be

2851
01:42:48,880 --> 01:42:50,880
kind of similar to

2852
01:42:50,880 --> 01:42:52,800
what

2853
01:42:52,800 --> 01:42:54,080
ben's

2854
01:42:54,080 --> 01:42:56,000
questions and answers were but with

2855
01:42:56,000 --> 01:42:57,600
different answers

2856
01:42:57,600 --> 01:42:59,199
um so

2857
01:42:59,199 --> 01:43:00,880
the

2858
01:43:00,880 --> 01:43:02,560
the goal primary goal is obviously

2859
01:43:02,560 --> 01:43:04,239
channel security between reserve

2860
01:43:04,239 --> 01:43:06,000
resolver and authoritative server being

2861
01:43:06,000 --> 01:43:07,119
available

2862
01:43:07,119 --> 01:43:09,440
uh using tls as a channel security

2863
01:43:09,440 --> 01:43:12,080
mechanism there's no real

2864
01:43:12,080 --> 01:43:13,840
alternative there

2865
01:43:13,840 --> 01:43:15,119
and

2866
01:43:15,119 --> 01:43:19,199
i'm including a relaxation on these tls

2867
01:43:19,199 --> 01:43:20,880
certificate types

2868
01:43:20,880 --> 01:43:22,159
so that

2869
01:43:22,159 --> 01:43:25,760
this is more easily deployable and has

2870
01:43:25,760 --> 01:43:29,920
less of a uh an overhead or um

2871
01:43:29,920 --> 01:43:32,400
encumbrance on anybody who wants to

2872
01:43:32,400 --> 01:43:34,639
actually do this

2873
01:43:34,639 --> 01:43:37,119
the the more flexible you are on tls

2874
01:43:37,119 --> 01:43:40,639
cert types though you know it avoids

2875
01:43:40,639 --> 01:43:42,719
creating a

2876
01:43:42,719 --> 01:43:47,600
economic penalty for having to do tls

2877
01:43:47,760 --> 01:43:49,280
obviously another goal is maximize

2878
01:43:49,280 --> 01:43:51,760
interoperability

2879
01:43:51,760 --> 01:43:54,400
that's just an obvious thing

2880
01:43:54,400 --> 01:43:57,199
and the next one i think

2881
01:43:57,199 --> 01:43:59,440
it acknowledges the

2882
01:43:59,440 --> 01:44:00,639
current

2883
01:44:00,639 --> 01:44:02,080
time frame for making any kind of

2884
01:44:02,080 --> 01:44:04,400
changes in terms of

2885
01:44:04,400 --> 01:44:05,760
record types

2886
01:44:05,760 --> 01:44:08,560
and possibly even um

2887
01:44:08,560 --> 01:44:11,440
ds hash algorithms

2888
01:44:11,440 --> 01:44:13,678
um

2889
01:44:14,320 --> 01:44:15,920
i'm not sure that those will be up

2890
01:44:15,920 --> 01:44:18,800
deployable in a short time frame

2891
01:44:18,800 --> 01:44:22,239
what i'm taking as goals is making it

2892
01:44:22,239 --> 01:44:24,880
deployable as quickly as possible

2893
01:44:24,880 --> 01:44:27,280
and including

2894
01:44:27,280 --> 01:44:31,280
avoiding any use of non-dns elements

2895
01:44:31,280 --> 01:44:33,600
and limiting new dns protocol elements

2896
01:44:33,600 --> 01:44:36,000
to those that are strictly required so

2897
01:44:36,000 --> 01:44:38,400
if there is some portion of the the

2898
01:44:38,400 --> 01:44:40,400
design that could be done with dns

2899
01:44:40,400 --> 01:44:41,679
protocol elements or could be done

2900
01:44:41,679 --> 01:44:44,159
without them i'm picking the do it

2901
01:44:44,159 --> 01:44:45,440
without them

2902
01:44:45,440 --> 01:44:48,080
in order to minimize the friction

2903
01:44:48,080 --> 01:44:50,080
between where we are now and having

2904
01:44:50,080 --> 01:44:53,199
something that's deployable or deployed

2905
01:44:53,199 --> 01:44:54,080
uh

2906
01:44:54,080 --> 01:44:56,480
signal adot support and permit to secure

2907
01:44:56,480 --> 01:44:58,560
discovery that's for downgrade

2908
01:44:58,560 --> 01:44:59,840
resistance

2909
01:44:59,840 --> 01:45:03,760
and to avoid needing to probe

2910
01:45:03,760 --> 01:45:06,800
um i see probing as something that

2911
01:45:06,800 --> 01:45:08,960
itself could be um

2912
01:45:08,960 --> 01:45:11,920
abused or

2913
01:45:11,920 --> 01:45:14,320
generally something that is not

2914
01:45:14,320 --> 01:45:17,360
strictly needed or desirable

2915
01:45:17,360 --> 01:45:19,600
absolutely validate server identity

2916
01:45:19,600 --> 01:45:21,760
that's what the authenticated piece is

2917
01:45:21,760 --> 01:45:23,360
in terms of the goals

2918
01:45:23,360 --> 01:45:26,080
uh protect against downgrade attacks

2919
01:45:26,080 --> 01:45:27,040
and

2920
01:45:27,040 --> 01:45:29,360
uh resolve reversal authoritative server

2921
01:45:29,360 --> 01:45:30,719
roles

2922
01:45:30,719 --> 01:45:32,880
i'm looking at this from both sides of

2923
01:45:32,880 --> 01:45:35,199
the equation so there's what you do on

2924
01:45:35,199 --> 01:45:37,199
the authoritative side and what the

2925
01:45:37,199 --> 01:45:39,199
resolver does

2926
01:45:39,199 --> 01:45:42,800
so in these proposals i'm saying i'm

2927
01:45:42,800 --> 01:45:44,719
putting strict requirements on what the

2928
01:45:44,719 --> 01:45:47,199
authoritative servers have to publish or

2929
01:45:47,199 --> 01:45:48,880
how they do what they're doing

2930
01:45:48,880 --> 01:45:51,600
and what the resolvers do

2931
01:45:51,600 --> 01:45:54,080
those recommendations um you know they

2932
01:45:54,080 --> 01:45:56,000
can be ignored or

2933
01:45:56,000 --> 01:45:58,880
you know there is a penalty to not doing

2934
01:45:58,880 --> 01:46:01,440
some of the things but these are not

2935
01:46:01,440 --> 01:46:05,280
requirements uh next slide

2936
01:46:06,400 --> 01:46:08,880
so a consequence of those goals is what

2937
01:46:08,880 --> 01:46:11,679
are some non goals that i i

2938
01:46:11,679 --> 01:46:13,520
inferred from the goals

2939
01:46:13,520 --> 01:46:16,000
um that

2940
01:46:16,000 --> 01:46:18,159
encrypted transport does not provide

2941
01:46:18,159 --> 01:46:22,000
data integrity um dnsec exists for that

2942
01:46:22,000 --> 01:46:24,639
so this is not something that is a goal

2943
01:46:24,639 --> 01:46:25,360
for

2944
01:46:25,360 --> 01:46:26,960
what i'm proposing and i think it should

2945
01:46:26,960 --> 01:46:29,679
not be a goal for any implementation

2946
01:46:29,679 --> 01:46:32,239
uh or any any proposal for any kind of

2947
01:46:32,239 --> 01:46:33,520
adot

2948
01:46:33,520 --> 01:46:37,760
um does not require use of web pki and

2949
01:46:37,760 --> 01:46:40,239
the reason for this is this is all dns

2950
01:46:40,239 --> 01:46:42,320
the resolver to authoritative it's

2951
01:46:42,320 --> 01:46:46,080
strictly dns queries and dns answers i

2952
01:46:46,080 --> 01:46:49,119
i see web pki requirement

2953
01:46:49,119 --> 01:46:52,320
as being something that would be

2954
01:46:52,800 --> 01:46:55,280
questionable uh it may not be acceptable

2955
01:46:55,280 --> 01:46:58,239
to all participants or all operators

2956
01:46:58,239 --> 01:47:00,480
um and it's not necessary

2957
01:47:00,480 --> 01:47:02,560
so i'm saying this is a non-goal

2958
01:47:02,560 --> 01:47:04,800
um

2959
01:47:04,960 --> 01:47:07,440
the other the next one does not require

2960
01:47:07,440 --> 01:47:10,239
a single unique server identity that's

2961
01:47:10,239 --> 01:47:13,199
actually a goal is to actually have

2962
01:47:13,199 --> 01:47:14,560
multiple

2963
01:47:14,560 --> 01:47:16,080
server identities

2964
01:47:16,080 --> 01:47:18,960
which allows for distinguishing the

2965
01:47:18,960 --> 01:47:20,080
behavior

2966
01:47:20,080 --> 01:47:22,159
whether or not it supports adot for a

2967
01:47:22,159 --> 01:47:24,000
particular server

2968
01:47:24,000 --> 01:47:26,719
as signaled by the name and attaching

2969
01:47:26,719 --> 01:47:28,480
the behavior to the names of the name

2970
01:47:28,480 --> 01:47:29,520
servers

2971
01:47:29,520 --> 01:47:31,360
a server and an ip address can have

2972
01:47:31,360 --> 01:47:33,920
multiple names this is actually a really

2973
01:47:33,920 --> 01:47:35,520
good way to

2974
01:47:35,520 --> 01:47:38,780
allow incremental deployment of adot

2975
01:47:38,780 --> 01:47:40,480
[Music]

2976
01:47:40,480 --> 01:47:43,600
associated with for instance

2977
01:47:43,600 --> 01:47:45,920
zone names

2978
01:47:45,920 --> 01:47:48,480
it doesn't require registry side changes

2979
01:47:48,480 --> 01:47:50,400
and it doesn't require registrar side

2980
01:47:50,400 --> 01:47:53,600
changes with one minor change which is

2981
01:47:53,600 --> 01:47:54,480
that

2982
01:47:54,480 --> 01:47:57,600
the name server validation component

2983
01:47:57,600 --> 01:48:00,000
might require registrars to add support

2984
01:48:00,000 --> 01:48:02,719
for new dns key algorithms and that's

2985
01:48:02,719 --> 01:48:04,320
generally going to be a question of

2986
01:48:04,320 --> 01:48:05,199
their

2987
01:48:05,199 --> 01:48:08,639
their validation on uh updates sent for

2988
01:48:08,639 --> 01:48:11,600
ds records whether it be through cds or

2989
01:48:11,600 --> 01:48:14,480
through uis

2990
01:48:15,040 --> 01:48:18,280
next slide

2991
01:48:19,840 --> 01:48:22,719
next slide please

2992
01:48:23,280 --> 01:48:25,440
so the other drafts that are included in

2993
01:48:25,440 --> 01:48:26,960
this presentation

2994
01:48:26,960 --> 01:48:28,320
are

2995
01:48:28,320 --> 01:48:30,639
related or dependencies

2996
01:48:30,639 --> 01:48:33,679
one of them is uh the alternative to ds

2997
01:48:33,679 --> 01:48:36,239
blue which i'm calling nsv which is

2998
01:48:36,239 --> 01:48:38,159
named server validation

2999
01:48:38,159 --> 01:48:41,119
uh it is proposing a new dns key

3000
01:48:41,119 --> 01:48:44,560
algorithm but does not require a new ds

3001
01:48:44,560 --> 01:48:47,520
um algorithm

3002
01:48:47,520 --> 01:48:51,199
it encodes new data into the dns key

3003
01:48:51,199 --> 01:48:52,880
which is actually never actually

3004
01:48:52,880 --> 01:48:54,000
published

3005
01:48:54,000 --> 01:48:56,400
but the dns key

3006
01:48:56,400 --> 01:48:59,280
ephemeral data is then hashed and

3007
01:48:59,280 --> 01:49:02,159
published in the ds record um in the

3008
01:49:02,159 --> 01:49:04,960
parent and this is necessary to protect

3009
01:49:04,960 --> 01:49:06,719
the domain name

3010
01:49:06,719 --> 01:49:09,520
on the ns delegation uh oh sorry the

3011
01:49:09,520 --> 01:49:11,600
name server name on the delete on the

3012
01:49:11,600 --> 01:49:13,360
dns

3013
01:49:13,360 --> 01:49:14,880
the validation from the

3014
01:49:14,880 --> 01:49:17,360
delegation from the parent so the

3015
01:49:17,360 --> 01:49:19,920
parents doing a delegation the ns record

3016
01:49:19,920 --> 01:49:21,920
is not signed you have to have some way

3017
01:49:21,920 --> 01:49:23,840
of protecting that name

3018
01:49:23,840 --> 01:49:26,480
of the name server in order to do any

3019
01:49:26,480 --> 01:49:28,159
kind of up this is where the

3020
01:49:28,159 --> 01:49:30,960
authentication piece actually is is tied

3021
01:49:30,960 --> 01:49:32,480
to

3022
01:49:32,480 --> 01:49:35,360
the the parent

3023
01:49:35,520 --> 01:49:40,400
the next one is a new rr type uh dnst

3024
01:49:40,400 --> 01:49:43,040
dns transport signaling

3025
01:49:43,040 --> 01:49:46,159
that only gets published in the child

3026
01:49:46,159 --> 01:49:48,320
and the child zone here i'm referring to

3027
01:49:48,320 --> 01:49:50,639
is the dns server

3028
01:49:50,639 --> 01:49:52,960
named the zone that serves the dns

3029
01:49:52,960 --> 01:49:54,400
server name

3030
01:49:54,400 --> 01:49:56,719
this is necessary for explicit transport

3031
01:49:56,719 --> 01:49:58,159
signaling and for the discovery by

3032
01:49:58,159 --> 01:50:00,639
resolvers and that's necessary

3033
01:50:00,639 --> 01:50:02,719
uh but that only applies on the child

3034
01:50:02,719 --> 01:50:03,679
side

3035
01:50:03,679 --> 01:50:04,400
um

3036
01:50:04,400 --> 01:50:06,639
it's a new ir type

3037
01:50:06,639 --> 01:50:08,400
uh the glueless guidance i think

3038
01:50:08,400 --> 01:50:10,159
actually i can ignore this for now so

3039
01:50:10,159 --> 01:50:11,760
i'm not even going to talk about it i

3040
01:50:11,760 --> 01:50:14,000
think it ends up not being necessary

3041
01:50:14,000 --> 01:50:16,560
next slide

3042
01:50:18,080 --> 01:50:20,880
next slide please

3043
01:50:23,040 --> 01:50:25,040
uh so the

3044
01:50:25,040 --> 01:50:26,880
this is the piece before you start doing

3045
01:50:26,880 --> 01:50:27,920
tls

3046
01:50:27,920 --> 01:50:30,800
you need to follow the delegation

3047
01:50:30,800 --> 01:50:33,920
and have some way of finding the right

3048
01:50:33,920 --> 01:50:35,599
name server to talk to

3049
01:50:35,599 --> 01:50:38,159
to do your tls

3050
01:50:38,159 --> 01:50:39,599
if you

3051
01:50:39,599 --> 01:50:42,000
you need to find the right ip address

3052
01:50:42,000 --> 01:50:44,480
and that's based on the name

3053
01:50:44,480 --> 01:50:46,480
in the ns record in the parent the

3054
01:50:46,480 --> 01:50:50,320
delegation side and that's unsigned

3055
01:50:50,320 --> 01:50:51,520
in the parent

3056
01:50:51,520 --> 01:50:54,320
because that's how dnsec was defined

3057
01:50:54,320 --> 01:50:56,320
it's an unfortunate thing so if you got

3058
01:50:56,320 --> 01:50:57,040
an

3059
01:50:57,040 --> 01:50:59,119
ns record in the parent you got the

3060
01:50:59,119 --> 01:51:01,440
domain name that's being delegated

3061
01:51:01,440 --> 01:51:04,080
ns and then the name server name

3062
01:51:04,080 --> 01:51:06,960
um the ns record is non-authoritative

3063
01:51:06,960 --> 01:51:09,599
can't be signed the target name

3064
01:51:09,599 --> 01:51:10,639
uh

3065
01:51:10,639 --> 01:51:13,520
can be glued or unglued

3066
01:51:13,520 --> 01:51:14,960
um

3067
01:51:14,960 --> 01:51:18,560
the resolver contacts the name server by

3068
01:51:18,560 --> 01:51:21,390
ip address only and the

3069
01:51:21,390 --> 01:51:22,480
[Music]

3070
01:51:22,480 --> 01:51:25,280
the dns protocol on the wire actually

3071
01:51:25,280 --> 01:51:26,880
does not involve the

3072
01:51:26,880 --> 01:51:30,080
name server's name only its ip address

3073
01:51:30,080 --> 01:51:32,800
in glue for the ip address not not

3074
01:51:32,800 --> 01:51:35,119
authoritative but that's irrelevant if

3075
01:51:35,119 --> 01:51:37,360
you are going to revalidate that

3076
01:51:37,360 --> 01:51:38,639
delegation

3077
01:51:38,639 --> 01:51:40,239
as part of the the overall

3078
01:51:40,239 --> 01:51:42,560
authentication process

3079
01:51:42,560 --> 01:51:44,080
um

3080
01:51:44,080 --> 01:51:46,000
next slide please again i'm just

3081
01:51:46,000 --> 01:51:48,159
skipping over some of the stuff that i

3082
01:51:48,159 --> 01:51:50,000
put in the original draft but i think

3083
01:51:50,000 --> 01:51:52,080
they're no longer needed

3084
01:51:52,080 --> 01:51:54,400
so bold face things here just

3085
01:51:54,400 --> 01:51:56,159
highlighting what

3086
01:51:56,159 --> 01:51:58,480
this

3087
01:51:59,280 --> 01:52:01,679
tls adot

3088
01:52:01,679 --> 01:52:03,599
which is basically just uh

3089
01:52:03,599 --> 01:52:06,800
tlsa records so tls needs the ip address

3090
01:52:06,800 --> 01:52:08,560
plus a domain name

3091
01:52:08,560 --> 01:52:11,360
uh resolver connects to the ip address

3092
01:52:11,360 --> 01:52:16,159
the resolver has to revalidate the name

3093
01:52:16,159 --> 01:52:18,159
and the

3094
01:52:18,159 --> 01:52:21,199
if you've protected the ns

3095
01:52:21,199 --> 01:52:23,360
name

3096
01:52:23,360 --> 01:52:24,719
the

3097
01:52:24,719 --> 01:52:27,840
with the nsb you can now talk to

3098
01:52:27,840 --> 01:52:31,920
the ip address and

3099
01:52:31,920 --> 01:52:36,000
look for signed data within the child

3100
01:52:36,000 --> 01:52:37,599
related to

3101
01:52:37,599 --> 01:52:39,440
tlsa records

3102
01:52:39,440 --> 01:52:42,080
the name server transport

3103
01:52:42,080 --> 01:52:43,440
dnst

3104
01:52:43,440 --> 01:52:45,440
as a signaling mechanism

3105
01:52:45,440 --> 01:52:47,840
and uh you can also

3106
01:52:47,840 --> 01:52:51,360
reconfirm the uh address record for the

3107
01:52:51,360 --> 01:52:53,599
name server

3108
01:52:53,599 --> 01:52:56,000
but the main the main pieces are

3109
01:52:56,000 --> 01:53:00,080
having this tlsa record to get the

3110
01:53:00,080 --> 01:53:01,280
um

3111
01:53:01,280 --> 01:53:04,960
the the validation component for the tls

3112
01:53:04,960 --> 01:53:06,159
session

3113
01:53:06,159 --> 01:53:09,280
um and that is within the name server's

3114
01:53:09,280 --> 01:53:10,800
names zone

3115
01:53:10,800 --> 01:53:13,920
and that requires that that be assigned

3116
01:53:13,920 --> 01:53:17,440
zone because tlsa requires dns sec

3117
01:53:17,440 --> 01:53:20,159
and as long as tlsa dot validates

3118
01:53:20,159 --> 01:53:21,360
then

3119
01:53:21,360 --> 01:53:23,199
you can trust

3120
01:53:23,199 --> 01:53:25,520
the the actual tls

3121
01:53:25,520 --> 01:53:26,480
certificate

3122
01:53:26,480 --> 01:53:28,639
that you receive if it matches

3123
01:53:28,639 --> 01:53:31,599
so you don't need web pki but you can

3124
01:53:31,599 --> 01:53:34,480
use web pki certs

3125
01:53:34,480 --> 01:53:37,040
you just need that those be have a tlsa

3126
01:53:37,040 --> 01:53:40,719
record published for them

3127
01:53:40,719 --> 01:53:43,599
and the dns messages are sent over the

3128
01:53:43,599 --> 01:53:47,520
connection only after tls is established

3129
01:53:47,520 --> 01:53:49,360
that's a very dead slide i'm apologizing

3130
01:53:49,360 --> 01:53:51,280
for that in advance um

3131
01:53:51,280 --> 01:53:54,840
next slide please

3132
01:53:54,880 --> 01:53:58,320
uh nsv is name server validation

3133
01:53:58,320 --> 01:54:00,800
uh you're basically putting

3134
01:54:00,800 --> 01:54:05,040
a uh a hash of the name server name

3135
01:54:05,040 --> 01:54:08,719
uh in a ds record and hashing it

3136
01:54:08,719 --> 01:54:10,800
in a ds key record and then hashing it

3137
01:54:10,800 --> 01:54:12,320
to the ds

3138
01:54:12,320 --> 01:54:13,920
and that allows the

3139
01:54:13,920 --> 01:54:15,520
resolver to take

3140
01:54:15,520 --> 01:54:16,639
the

3141
01:54:16,639 --> 01:54:18,639
delegation ns

3142
01:54:18,639 --> 01:54:20,960
records the to the target names

3143
01:54:20,960 --> 01:54:25,199
and use that as the input to uh

3144
01:54:25,440 --> 01:54:27,599
construct reconstruction reconstructing

3145
01:54:27,599 --> 01:54:30,080
the dns key and then hashing it

3146
01:54:30,080 --> 01:54:32,000
comparing that against the ds record

3147
01:54:32,000 --> 01:54:33,840
that is seen

3148
01:54:33,840 --> 01:54:36,639
and if it matches you can now use that

3149
01:54:36,639 --> 01:54:37,760
um

3150
01:54:37,760 --> 01:54:40,400
delegation the ns name

3151
01:54:40,400 --> 01:54:42,880
uh and if it doesn't you don't uh it's

3152
01:54:42,880 --> 01:54:45,119
just how do you validate a nana's record

3153
01:54:45,119 --> 01:54:48,639
or the r data in an s record

3154
01:54:49,679 --> 01:54:52,320
and this is strictly for protecting the

3155
01:54:52,320 --> 01:54:55,679
target name in the ns

3156
01:54:56,850 --> 01:54:59,599
[Music]

3157
01:54:59,599 --> 01:55:03,360
the other element about this is if

3158
01:55:03,360 --> 01:55:05,920
because of the way that dns sec

3159
01:55:05,920 --> 01:55:06,719
um

3160
01:55:06,719 --> 01:55:08,320
is

3161
01:55:08,320 --> 01:55:10,080
uh architected

3162
01:55:10,080 --> 01:55:11,119
unknown

3163
01:55:11,119 --> 01:55:14,719
uh algorithms for dns keys

3164
01:55:14,719 --> 01:55:17,440
are ignored by resolvers so it's

3165
01:55:17,440 --> 01:55:19,679
backward compatible that i think is a

3166
01:55:19,679 --> 01:55:23,599
very key element of this

3167
01:55:23,599 --> 01:55:26,159
it's not going to affect any

3168
01:55:26,159 --> 01:55:28,880
unaware resolvers

3169
01:55:28,880 --> 01:55:30,639
ns via wear resolvers are going to be

3170
01:55:30,639 --> 01:55:33,199
able to validate dns records and then

3171
01:55:33,199 --> 01:55:35,199
continue on with the rest of the

3172
01:55:35,199 --> 01:55:38,559
validation process

3173
01:55:40,880 --> 01:55:43,119
next slide please

3174
01:55:43,119 --> 01:55:44,719
so just as a note brian we got less than

3175
01:55:44,719 --> 01:55:49,199
five minutes oh i'm sorry okay uh dnst

3176
01:55:49,199 --> 01:55:52,320
uh it's just uh signaling uses flags

3177
01:55:52,320 --> 01:55:55,280
uh it's as simple as possible only only

3178
01:55:55,280 --> 01:55:57,599
the necessary elements are involved

3179
01:55:57,599 --> 01:56:00,840
next slide

3180
01:56:01,840 --> 01:56:04,719
it's designed to be downgrade resistant

3181
01:56:04,719 --> 01:56:06,480
that's mostly because everything's in

3182
01:56:06,480 --> 01:56:10,000
the child zone of the name server name

3183
01:56:10,000 --> 01:56:12,239
other than that nsv

3184
01:56:12,239 --> 01:56:14,480
this means it's signed and

3185
01:56:14,480 --> 01:56:16,800
the signaling and

3186
01:56:16,800 --> 01:56:18,000
tls

3187
01:56:18,000 --> 01:56:21,119
tlsa records give you the ability to

3188
01:56:21,119 --> 01:56:23,440
confirm the tls certificates and it lets

3189
01:56:23,440 --> 01:56:25,040
you establish a

3190
01:56:25,040 --> 01:56:27,679
downgrade resistant pls session next

3191
01:56:27,679 --> 01:56:29,840
slide

3192
01:56:31,119 --> 01:56:33,679
next slide

3193
01:56:34,239 --> 01:56:36,560
next slide again sorry uh and then

3194
01:56:36,560 --> 01:56:37,760
there's some other stuff that's not

3195
01:56:37,760 --> 01:56:39,199
really relevant

3196
01:56:39,199 --> 01:56:41,199
uh interoperability

3197
01:56:41,199 --> 01:56:43,440
um what they have to do and what they

3198
01:56:43,440 --> 01:56:44,880
don't need to do

3199
01:56:44,880 --> 01:56:48,159
so it requires dane tlsa

3200
01:56:48,159 --> 01:56:49,360
um

3201
01:56:49,360 --> 01:56:50,880
clients

3202
01:56:50,880 --> 01:56:52,239
i guess

3203
01:56:52,239 --> 01:56:54,480
i should say should is that a must but

3204
01:56:54,480 --> 01:56:56,000
validate

3205
01:56:56,000 --> 01:56:59,520
the mechanism for validation is gain

3206
01:56:59,520 --> 01:57:00,880
um

3207
01:57:00,880 --> 01:57:03,360
it's optional for if the clients want to

3208
01:57:03,360 --> 01:57:05,360
do um

3209
01:57:05,360 --> 01:57:08,320
web pki and they can ignore dynastic

3210
01:57:08,320 --> 01:57:10,560
validation if they want but that's not

3211
01:57:10,560 --> 01:57:12,000
advisable

3212
01:57:12,000 --> 01:57:14,880
next slide please

3213
01:57:15,920 --> 01:57:18,320
and it's work in progress so not really

3214
01:57:18,320 --> 01:57:20,719
been out there very long i'm looking for

3215
01:57:20,719 --> 01:57:21,870
feedback

3216
01:57:21,870 --> 01:57:23,280
[Music]

3217
01:57:23,280 --> 01:57:25,199
i think the

3218
01:57:25,199 --> 01:57:26,880
covers the absolute bare minimum

3219
01:57:26,880 --> 01:57:29,760
required to

3220
01:57:29,760 --> 01:57:32,320
get to something that can be deployed

3221
01:57:32,320 --> 01:57:33,840
um quickly

3222
01:57:33,840 --> 01:57:36,000
that's it for me

3223
01:57:36,000 --> 01:57:39,760
oh did i run out of time i'm sorry

3224
01:57:39,760 --> 01:57:42,239
that's right we we had some

3225
01:57:42,239 --> 01:57:44,320
we had a couple of different discussion

3226
01:57:44,320 --> 01:57:46,320
points that um kind of ran a little bit

3227
01:57:46,320 --> 01:57:47,360
long so

3228
01:57:47,360 --> 01:57:48,560
um yeah

3229
01:57:48,560 --> 01:57:51,119
but i i also want to make sure everybody

3230
01:57:51,119 --> 01:57:52,560
realizes that

3231
01:57:52,560 --> 01:57:53,599
brian you're going to be talking about

3232
01:57:53,599 --> 01:57:56,000
these slides again in indiana stop in a

3233
01:57:56,000 --> 01:57:58,639
few hours so yes um you know there is an

3234
01:57:58,639 --> 01:58:00,719
opportunity there for for on mic

3235
01:58:00,719 --> 01:58:03,199
discussion

3236
01:58:04,320 --> 01:58:07,840
so thanks thank you for that

3237
01:58:08,000 --> 01:58:08,340
um

3238
01:58:08,340 --> 01:58:09,920
[Music]

3239
01:58:09,920 --> 01:58:11,679
okay so

3240
01:58:11,679 --> 01:58:14,960
really quick um

3241
01:58:15,920 --> 01:58:17,440
tim

3242
01:58:17,440 --> 01:58:19,119
oh i was just gonna talk over the action

3243
01:58:19,119 --> 01:58:21,280
items unless you want to go ahead yep no

3244
01:58:21,280 --> 01:58:22,480
go for it

3245
01:58:22,480 --> 01:58:24,639
oh okay the ones i put in the minutes

3246
01:58:24,639 --> 01:58:26,320
and people if they want us to have more

3247
01:58:26,320 --> 01:58:28,000
action items just you can add them to

3248
01:58:28,000 --> 01:58:30,320
the ether pad um

3249
01:58:30,320 --> 01:58:31,760
action item on taking to the mailing

3250
01:58:31,760 --> 01:58:34,480
list on moving dns over dtls to historic

3251
01:58:34,480 --> 01:58:37,119
and then update the port name and

3252
01:58:37,119 --> 01:58:39,679
of course you know how how we describe

3253
01:58:39,679 --> 01:58:42,480
the name can you know believe that as an

3254
01:58:42,480 --> 01:58:44,880
as something for us um also we will talk

3255
01:58:44,880 --> 01:58:47,040
with the av about use case discussions

3256
01:58:47,040 --> 01:58:47,920
from the

3257
01:58:47,920 --> 01:58:49,679
unauthoritative draft

3258
01:58:49,679 --> 01:58:52,000
um that's a pretty good comment

3259
01:58:52,000 --> 01:58:54,560
and i believe the last one is

3260
01:58:54,560 --> 01:58:56,480
we're going to follow up on

3261
01:58:56,480 --> 01:58:57,280
um

3262
01:58:57,280 --> 01:59:00,400
ecker's mechanism crafting comment

3263
01:59:00,400 --> 01:59:01,119
and

3264
01:59:01,119 --> 01:59:02,960
we will take any and all sort of

3265
01:59:02,960 --> 01:59:05,040
suggestions on that one but i believe

3266
01:59:05,040 --> 01:59:07,040
those are the three

3267
01:59:07,040 --> 01:59:09,760
action items we're currently sitting on

3268
01:59:09,760 --> 01:59:11,599
so if anyone wants to add more please do

3269
01:59:11,599 --> 01:59:13,840
so

3270
01:59:15,599 --> 01:59:17,679
thank you tim um

3271
01:59:17,679 --> 01:59:20,320
so with with that um if you have

3272
01:59:20,320 --> 01:59:22,320
additional items that you think need to

3273
01:59:22,320 --> 01:59:24,800
be noted um you know the

3274
01:59:24,800 --> 01:59:26,400
you know you put them in the minutes and

3275
01:59:26,400 --> 01:59:28,480
the notes um or send them to the chairs

3276
01:59:28,480 --> 01:59:30,000
and um we will make sure that they get

3277
01:59:30,000 --> 01:59:31,040
recorded

3278
01:59:31,040 --> 01:59:33,040
um otherwise i will take this

3279
01:59:33,040 --> 01:59:34,400
opportunity to thank everybody for

3280
01:59:34,400 --> 01:59:36,400
participating i i actually

3281
01:59:36,400 --> 01:59:38,560
was very grateful to see you know some

3282
01:59:38,560 --> 01:59:39,920
of the robust discussions that we had

3283
01:59:39,920 --> 01:59:41,840
around some of these documents and

3284
01:59:41,840 --> 01:59:44,239
and and hopefully um we can come up with

3285
01:59:44,239 --> 01:59:46,960
a with uh some approaches to help you

3286
01:59:46,960 --> 01:59:48,639
know get some of this stuff unstuck and

3287
01:59:48,639 --> 01:59:50,000
get more people

3288
01:59:50,000 --> 01:59:52,239
uh engaged in in looking at these

3289
01:59:52,239 --> 01:59:54,159
proposals and and either doing

3290
01:59:54,159 --> 01:59:55,840
experiments or pointing out where they

3291
01:59:55,840 --> 01:59:57,840
may be implementation or deployment

3292
01:59:57,840 --> 01:59:59,119
issues

3293
01:59:59,119 --> 02:00:01,360
so thanks once again for

3294
02:00:01,360 --> 02:00:03,280
attending the deprived meeting for ietf

3295
02:00:03,280 --> 02:00:06,400
112 and we look forward to seeing you

3296
02:00:06,400 --> 02:00:09,280
next time at ietf113

3297
02:00:09,280 --> 02:00:13,559
have a good day everybody bye

3298
02:00:26,400 --> 02:00:28,480
you

