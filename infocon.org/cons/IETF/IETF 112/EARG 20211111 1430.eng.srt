1
00:00:06,080 --> 00:00:08,320
now you can i guess just tell us

2
00:00:08,320 --> 00:00:12,679
sure to um advanced

3
00:00:24,080 --> 00:00:27,519
i think we can begin

4
00:00:27,519 --> 00:00:30,519
so

5
00:00:30,560 --> 00:00:32,079
hello everyone

6
00:00:32,079 --> 00:00:34,480
welcome to privacy enhancements and

7
00:00:34,480 --> 00:00:36,880
assessments research group meeting

8
00:00:36,880 --> 00:00:39,120
we are your chairs siobhan

9
00:00:39,120 --> 00:00:42,840
sybe chris wood and sarah dickinson

10
00:00:42,840 --> 00:00:44,480
welcome

11
00:00:44,480 --> 00:00:47,039
this is the note well

12
00:00:47,039 --> 00:00:49,120
please do note this well in case this is

13
00:00:49,120 --> 00:00:50,000
your

14
00:00:50,000 --> 00:00:52,640
first iedf meeting and even if it's not

15
00:00:52,640 --> 00:00:55,520
please it's always good to revise

16
00:00:55,520 --> 00:00:57,039
the note call

17
00:00:57,039 --> 00:00:59,280
and also keep in mind the

18
00:00:59,280 --> 00:01:01,520
ietf guidelines for conduct as laid out

19
00:01:01,520 --> 00:01:05,119
in rfc 7154

20
00:01:05,119 --> 00:01:08,400
folks are expected to

21
00:01:08,560 --> 00:01:11,760
be courteous have impersonal discussions

22
00:01:11,760 --> 00:01:13,760
keep in mind that

23
00:01:13,760 --> 00:01:15,600
we are trying to devise solutions for a

24
00:01:15,600 --> 00:01:18,479
variety of different needs and also

25
00:01:18,479 --> 00:01:19,439
be

26
00:01:19,439 --> 00:01:21,439
contributory and

27
00:01:21,439 --> 00:01:23,840
contribute to the ongoing work of this

28
00:01:23,840 --> 00:01:24,880
group and

29
00:01:24,880 --> 00:01:27,839
irtf

30
00:01:28,400 --> 00:01:30,479
we are currently looking for a note

31
00:01:30,479 --> 00:01:32,159
taker

32
00:01:32,159 --> 00:01:34,479
so if someone

33
00:01:34,479 --> 00:01:36,479
would volunteer that would be extremely

34
00:01:36,479 --> 00:01:39,479
helpful

35
00:01:51,439 --> 00:01:53,040
we do need a note taker before we can

36
00:01:53,040 --> 00:01:55,840
begin

37
00:02:06,399 --> 00:02:11,879
thanks like can anyone do the first part

38
00:02:23,280 --> 00:02:24,879
perfect

39
00:02:24,879 --> 00:02:27,360
thanks watson and nick um great so we

40
00:02:27,360 --> 00:02:28,879
can begin

41
00:02:28,879 --> 00:02:31,519
um this is our

42
00:02:31,519 --> 00:02:34,000
agenda for our one hour long meeting and

43
00:02:34,000 --> 00:02:35,440
um

44
00:02:35,440 --> 00:02:37,760
a reminder that the session is recorded

45
00:02:37,760 --> 00:02:40,080
uh and the blue sheet attendance is auto

46
00:02:40,080 --> 00:02:41,360
generated

47
00:02:41,360 --> 00:02:43,040
um please keep

48
00:02:43,040 --> 00:02:44,720
video and audio off when you're not

49
00:02:44,720 --> 00:02:46,640
speaking or not recognizing the queue

50
00:02:46,640 --> 00:02:49,599
and to enter the queue there should be a

51
00:02:49,599 --> 00:02:51,360
join queue icon

52
00:02:51,360 --> 00:02:54,640
which is kind of like a upraised hand

53
00:02:54,640 --> 00:02:56,959
and i'll pause for a second

54
00:02:56,959 --> 00:02:58,640
in case folks have any concerns about

55
00:02:58,640 --> 00:03:00,239
the agenda we're going to

56
00:03:00,239 --> 00:03:02,720
change it

57
00:03:03,280 --> 00:03:06,400
and also just bear in mind that uh it's

58
00:03:06,400 --> 00:03:09,599
good to speak slowly uh in general and

59
00:03:09,599 --> 00:03:12,640
i'll try to keep that in mind as well

60
00:03:12,640 --> 00:03:15,599
and yeah if there is no revisions to the

61
00:03:15,599 --> 00:03:19,440
agenda um and tron you're up

62
00:03:19,440 --> 00:03:20,720
yes

63
00:03:20,720 --> 00:03:24,519
asking to share slides

64
00:03:32,400 --> 00:03:33,360
okay

65
00:03:33,360 --> 00:03:35,680
uh so hello everyone

66
00:03:35,680 --> 00:03:37,519
uh

67
00:03:37,519 --> 00:03:41,760
welcome to my presentation today i'm

68
00:03:41,760 --> 00:03:45,040
willing to talk to the prg attendants

69
00:03:45,040 --> 00:03:47,200
about some

70
00:03:47,200 --> 00:03:50,000
state-of-the-art artwork that i've been

71
00:03:50,000 --> 00:03:52,319
doing as part of my work

72
00:03:52,319 --> 00:03:54,319
so my name is antoine frasenko i'm a

73
00:03:54,319 --> 00:03:56,799
research engineer in huawei

74
00:03:56,799 --> 00:03:59,519
and i'm going to put in perspective some

75
00:03:59,519 --> 00:04:01,920
work that has been presented in previous

76
00:04:01,920 --> 00:04:03,760
prg session

77
00:04:03,760 --> 00:04:07,120
uh to protect privacy with some work in

78
00:04:07,120 --> 00:04:10,000
academia and see whether there is room

79
00:04:10,000 --> 00:04:13,120
for importing some ideas from academia

80
00:04:13,120 --> 00:04:17,440
in irtf and then ietf ocb

81
00:04:17,440 --> 00:04:18,320
okay

82
00:04:18,320 --> 00:04:19,519
so

83
00:04:19,519 --> 00:04:21,680
first as a world of introduction uh

84
00:04:21,680 --> 00:04:24,720
privacy protection has become a global

85
00:04:24,720 --> 00:04:26,840
consumer demand it has been

86
00:04:26,840 --> 00:04:28,400
especially

87
00:04:28,400 --> 00:04:30,639
stressed and stressed by the fact that

88
00:04:30,639 --> 00:04:33,440
with kovid we are doing increasingly

89
00:04:33,440 --> 00:04:35,919
important stuff online

90
00:04:35,919 --> 00:04:38,479
even people that are not tech savvy

91
00:04:38,479 --> 00:04:40,639
become accustomed to doing remote

92
00:04:40,639 --> 00:04:44,160
meeting remote work and exchange

93
00:04:44,160 --> 00:04:46,639
critical information over the internet

94
00:04:46,639 --> 00:04:48,080
and people

95
00:04:48,080 --> 00:04:52,000
are becoming very wary of their privacy

96
00:04:52,000 --> 00:04:53,440
so

97
00:04:53,440 --> 00:04:55,280
many many

98
00:04:55,280 --> 00:04:58,800
web solution providers are addressing

99
00:04:58,800 --> 00:05:00,639
this need for privacy for instance

100
00:05:00,639 --> 00:05:03,840
google has announced that it would drop

101
00:05:03,840 --> 00:05:07,440
support for cell party cookies

102
00:05:07,680 --> 00:05:11,360
and build privacy sandboxes in chrome uh

103
00:05:11,360 --> 00:05:13,840
in the worldwide developer conference in

104
00:05:13,840 --> 00:05:17,039
2020 june 2021 april has made very

105
00:05:17,039 --> 00:05:18,800
strong statements with regards to

106
00:05:18,800 --> 00:05:22,080
privacy uh brave browser is catching up

107
00:05:22,080 --> 00:05:24,880
even though its market share is still

108
00:05:24,880 --> 00:05:25,759
very

109
00:05:25,759 --> 00:05:29,680
small yet uh even though

110
00:05:29,680 --> 00:05:31,680
many web

111
00:05:31,680 --> 00:05:33,919
browser providers are

112
00:05:33,919 --> 00:05:36,400
addressing privacy

113
00:05:36,400 --> 00:05:38,880
people are coming up with ways to

114
00:05:38,880 --> 00:05:41,120
circumvent the privacy protections that

115
00:05:41,120 --> 00:05:43,360
they put in place for instance the pixel

116
00:05:43,360 --> 00:05:45,520
tracking technique that has been meant

117
00:05:45,520 --> 00:05:48,000
that has been popularized lately is

118
00:05:48,000 --> 00:05:50,000
putting at risk

119
00:05:50,000 --> 00:05:52,720
privacy of consumers so

120
00:05:52,720 --> 00:05:53,440
uh

121
00:05:53,440 --> 00:05:55,440
we think that to address

122
00:05:55,440 --> 00:05:58,240
to go further with privacy protection

123
00:05:58,240 --> 00:06:00,720
you need to eliminate other identity

124
00:06:00,720 --> 00:06:02,560
linking identifiers

125
00:06:02,560 --> 00:06:07,120
and uh network layout amplifiers

126
00:06:09,759 --> 00:06:12,240
so if you look at privacy

127
00:06:12,240 --> 00:06:15,360
from a network perspective

128
00:06:15,360 --> 00:06:17,199
privacy means

129
00:06:17,199 --> 00:06:21,680
the inability for a third party observer

130
00:06:21,680 --> 00:06:24,000
to determine from the observation of a

131
00:06:24,000 --> 00:06:25,759
packet with the source and with the

132
00:06:25,759 --> 00:06:28,319
destination and

133
00:06:28,319 --> 00:06:29,919
the

134
00:06:29,919 --> 00:06:33,840
and the inability for this observer to

135
00:06:33,840 --> 00:06:36,000
link source and destination for the for

136
00:06:36,000 --> 00:06:37,360
this packet

137
00:06:37,360 --> 00:06:40,800
uh depending on the attacker against

138
00:06:40,800 --> 00:06:42,240
which

139
00:06:42,240 --> 00:06:44,400
someone is willing to protect its

140
00:06:44,400 --> 00:06:46,240
privacy against

141
00:06:46,240 --> 00:06:49,599
we may rely or not on third parties for

142
00:06:49,599 --> 00:06:50,639
instance

143
00:06:50,639 --> 00:06:54,960
uh isps tends to protect uh privacy of

144
00:06:54,960 --> 00:06:57,759
their consumers some isps are pushing

145
00:06:57,759 --> 00:06:59,840
some offerings for instance deploying

146
00:06:59,840 --> 00:07:02,479
vpns to enhance the privacy of their

147
00:07:02,479 --> 00:07:05,120
customers

148
00:07:05,280 --> 00:07:08,639
the privacy protection that you want to

149
00:07:08,639 --> 00:07:09,520
add

150
00:07:09,520 --> 00:07:12,000
depends on the strength of the attacker

151
00:07:12,000 --> 00:07:14,960
is it a very powerful attacker

152
00:07:14,960 --> 00:07:16,639
script kd

153
00:07:16,639 --> 00:07:18,639
someone with a

154
00:07:18,639 --> 00:07:21,120
lot of cryptographic

155
00:07:21,120 --> 00:07:24,319
computing power someone who is stable in

156
00:07:24,319 --> 00:07:25,840
the network

157
00:07:25,840 --> 00:07:26,960
and

158
00:07:26,960 --> 00:07:31,840
also we need to address how is

159
00:07:32,080 --> 00:07:34,319
the risk that is associated with the

160
00:07:34,319 --> 00:07:36,639
communication that is

161
00:07:36,639 --> 00:07:38,400
protected

162
00:07:38,400 --> 00:07:39,360
uh

163
00:07:39,360 --> 00:07:40,720
sometimes

164
00:07:40,720 --> 00:07:43,599
you if the source even wants to protect

165
00:07:43,599 --> 00:07:45,919
against the destination in some specific

166
00:07:45,919 --> 00:07:47,759
context for instance

167
00:07:47,759 --> 00:07:50,800
some privacy and great services

168
00:07:50,800 --> 00:07:54,000
users may want to have access to those

169
00:07:54,000 --> 00:07:55,759
services without revealing too much

170
00:07:55,759 --> 00:07:59,599
about their private information

171
00:07:59,599 --> 00:08:02,000
in general since

172
00:08:02,000 --> 00:08:05,120
revelations made by snowden uh the

173
00:08:05,120 --> 00:08:07,919
state-of-the-art attacker against which

174
00:08:07,919 --> 00:08:10,639
we are trying to protect in network

175
00:08:10,639 --> 00:08:13,919
privacy is an attacker that is able to

176
00:08:13,919 --> 00:08:16,160
eavesdrop all the links

177
00:08:16,160 --> 00:08:19,520
and some notes uh bearing in mind that

178
00:08:19,520 --> 00:08:20,960
protecting against the network

179
00:08:20,960 --> 00:08:23,840
consisting in only rogue nodes is

180
00:08:23,840 --> 00:08:26,800
impossible so we in

181
00:08:26,800 --> 00:08:28,800
the state of the art the most powerful

182
00:08:28,800 --> 00:08:30,800
attacker is someone that is able to use

183
00:08:30,800 --> 00:08:34,159
up all the links and submit

184
00:08:34,159 --> 00:08:35,679
so

185
00:08:35,679 --> 00:08:38,719
to protect privacy if you look at

186
00:08:38,719 --> 00:08:41,200
state of the art either from commercial

187
00:08:41,200 --> 00:08:44,480
solutions or from academic projects you

188
00:08:44,480 --> 00:08:47,600
have two approaches to implement privacy

189
00:08:47,600 --> 00:08:50,380
first people that come from

190
00:08:50,380 --> 00:08:51,920
[Music]

191
00:08:51,920 --> 00:08:55,120
the internet as it stands and try to put

192
00:08:55,120 --> 00:08:58,080
layer on top of it to add privacy

193
00:08:58,080 --> 00:08:59,279
protection

194
00:08:59,279 --> 00:09:01,680
this is the over-the-top approach that

195
00:09:01,680 --> 00:09:04,480
is on the left of the slide and this is

196
00:09:04,480 --> 00:09:06,720
an approach that i call evolutionary the

197
00:09:06,720 --> 00:09:08,640
main objective is to hide the source

198
00:09:08,640 --> 00:09:11,360
address of a packet or of a network flow

199
00:09:11,360 --> 00:09:14,320
from an observer using increasingly

200
00:09:14,320 --> 00:09:15,839
complex

201
00:09:15,839 --> 00:09:18,080
protection means

202
00:09:18,080 --> 00:09:18,959
those

203
00:09:18,959 --> 00:09:21,200
over the top approaches are

204
00:09:21,200 --> 00:09:22,399
mostly

205
00:09:22,399 --> 00:09:25,920
based on trusted self-parties

206
00:09:25,920 --> 00:09:28,000
so

207
00:09:28,000 --> 00:09:30,000
depending on the third party's

208
00:09:30,000 --> 00:09:31,600
willingness to protect the user's

209
00:09:31,600 --> 00:09:34,240
privacy you protect against a strong or

210
00:09:34,240 --> 00:09:36,720
weak attacker and

211
00:09:36,720 --> 00:09:38,880
those approach can be deployed rather

212
00:09:38,880 --> 00:09:41,120
easily with an appropriate business case

213
00:09:41,120 --> 00:09:44,720
using a notary approach

214
00:09:44,720 --> 00:09:47,120
some other approaches mostly in the

215
00:09:47,120 --> 00:09:50,080
realm of academic solutions adapt a

216
00:09:50,080 --> 00:09:52,880
built-in approach instead of

217
00:09:52,880 --> 00:09:56,160
trying to put some

218
00:09:56,160 --> 00:09:59,360
some overlay on top of ip

219
00:09:59,360 --> 00:10:00,480
and

220
00:10:00,480 --> 00:10:02,959
work with ip they rethink

221
00:10:02,959 --> 00:10:05,839
the way network protocols behave to

222
00:10:05,839 --> 00:10:09,279
protect the privacy of

223
00:10:09,279 --> 00:10:11,120
of communications

224
00:10:11,120 --> 00:10:12,000
so

225
00:10:12,000 --> 00:10:13,760
their main objective is to protect

226
00:10:13,760 --> 00:10:16,160
against a rather powerful attacker as

227
00:10:16,160 --> 00:10:17,839
the state-of-the-art adversary that i

228
00:10:17,839 --> 00:10:20,560
described in the slide before

229
00:10:20,560 --> 00:10:22,880
um

230
00:10:23,120 --> 00:10:26,320
those approaches possibly try to eye to

231
00:10:26,320 --> 00:10:29,120
avoid using a third party to avoid

232
00:10:29,120 --> 00:10:32,000
placing too much trust in someone else

233
00:10:32,000 --> 00:10:35,040
in fact one one

234
00:10:35,040 --> 00:10:37,600
one thing that the academic research is

235
00:10:37,600 --> 00:10:40,880
trying to address is to reduce the

236
00:10:40,880 --> 00:10:43,360
amount of trust you put in someone else

237
00:10:43,360 --> 00:10:46,000
in order to protect your own privacy

238
00:10:46,000 --> 00:10:47,440
those projects are mainly future

239
00:10:47,440 --> 00:10:50,160
internet projects or academic research

240
00:10:50,160 --> 00:10:52,079
but i think that they

241
00:10:52,079 --> 00:10:53,760
push some ideas that are worth

242
00:10:53,760 --> 00:10:55,440
investigating for

243
00:10:55,440 --> 00:10:57,600
implementers and people willing to

244
00:10:57,600 --> 00:10:59,839
develop

245
00:10:59,839 --> 00:11:02,000
solution deployable solution over the

246
00:11:02,000 --> 00:11:03,360
internet

247
00:11:03,360 --> 00:11:06,640
so uh i will first go quickly through

248
00:11:06,640 --> 00:11:07,920
works that have been previously

249
00:11:07,920 --> 00:11:10,720
presented in prg

250
00:11:10,720 --> 00:11:13,440
main history projects

251
00:11:13,440 --> 00:11:15,279
google's gonna catcher that has been

252
00:11:15,279 --> 00:11:17,120
presented i think in

253
00:11:17,120 --> 00:11:20,320
ietf 110

254
00:11:20,320 --> 00:11:21,279
uh

255
00:11:21,279 --> 00:11:23,360
it's a technology that is combining two

256
00:11:23,360 --> 00:11:25,680
approaches uh two take two set of

257
00:11:25,680 --> 00:11:27,920
technologies near past

258
00:11:27,920 --> 00:11:30,399
that allows a group of users that are

259
00:11:30,399 --> 00:11:33,200
located in about the same location

260
00:11:33,200 --> 00:11:35,279
to send their traffic through the same

261
00:11:35,279 --> 00:11:38,959
privatizing servers that is um

262
00:11:38,959 --> 00:11:40,079
that is

263
00:11:40,079 --> 00:11:43,120
operating as a near past nut

264
00:11:43,120 --> 00:11:45,920
and that are the this near past night is

265
00:11:45,920 --> 00:11:47,839
effectively hiding the ip address from

266
00:11:47,839 --> 00:11:49,760
the site's house

267
00:11:49,760 --> 00:11:52,079
and this near pass nut is combined with

268
00:11:52,079 --> 00:11:54,800
willful ip blindness in fact in the

269
00:11:54,800 --> 00:11:56,560
catcher google has included the

270
00:11:56,560 --> 00:11:59,279
possibility for a website over

271
00:11:59,279 --> 00:12:01,360
legitimate purposes

272
00:12:01,360 --> 00:12:03,920
such as abuse prevention to

273
00:12:03,920 --> 00:12:08,240
deanonymize the sender of

274
00:12:08,240 --> 00:12:10,160
the sender for packet

275
00:12:10,160 --> 00:12:12,320
or of a network flow

276
00:12:12,320 --> 00:12:14,480
then the second um

277
00:12:14,480 --> 00:12:16,240
solution

278
00:12:16,240 --> 00:12:17,760
that is

279
00:12:17,760 --> 00:12:19,519
that has made

280
00:12:19,519 --> 00:12:21,519
that has gained lots of public traction

281
00:12:21,519 --> 00:12:24,399
recently apple's private relay

282
00:12:24,399 --> 00:12:26,560
in apple's private relay you use a chain

283
00:12:26,560 --> 00:12:28,720
of two proxies to ensure source

284
00:12:28,720 --> 00:12:32,320
destination and linkability

285
00:12:32,560 --> 00:12:34,720
those proxy used a temporary public

286
00:12:34,720 --> 00:12:37,200
private key pair that is provided by a

287
00:12:37,200 --> 00:12:40,079
private relay access token server as a

288
00:12:40,079 --> 00:12:42,480
private the private access token it

289
00:12:42,480 --> 00:12:44,800
relies on the technologies that has been

290
00:12:44,800 --> 00:12:49,200
presented earlier i think in cfrg

291
00:12:49,200 --> 00:12:50,720
and then

292
00:12:50,720 --> 00:12:54,399
the state of the art on the project

293
00:12:54,720 --> 00:12:58,480
to which everybody compares is store tor

294
00:12:58,480 --> 00:13:01,519
is a very famous uh

295
00:13:01,519 --> 00:13:04,079
anonymity protection solution

296
00:13:04,079 --> 00:13:05,839
it uses a

297
00:13:05,839 --> 00:13:07,279
circuits of

298
00:13:07,279 --> 00:13:10,639
tor relays to minimize tcp traffic a

299
00:13:10,639 --> 00:13:13,600
torque consists in

300
00:13:13,600 --> 00:13:16,240
tor uses store circuits consisting in

301
00:13:16,240 --> 00:13:18,800
three relays

302
00:13:18,800 --> 00:13:21,839
those three relays are

303
00:13:21,839 --> 00:13:24,240
the circuit diagrams are identified by a

304
00:13:24,240 --> 00:13:26,880
singular identifier and each relay

305
00:13:26,880 --> 00:13:29,519
removes a peel of the onion meaning a

306
00:13:29,519 --> 00:13:31,680
layer of encryption and after the third

307
00:13:31,680 --> 00:13:34,240
relay the traffic is

308
00:13:34,240 --> 00:13:36,320
sent in clear to the final destination

309
00:13:36,320 --> 00:13:38,320
it intended to be

310
00:13:38,320 --> 00:13:40,560
addressed to

311
00:13:40,560 --> 00:13:41,680
toro is

312
00:13:41,680 --> 00:13:43,360
renowned to be weak against traffic

313
00:13:43,360 --> 00:13:44,880
analysis attack

314
00:13:44,880 --> 00:13:46,800
and

315
00:13:46,800 --> 00:13:49,040
some researchers have demonstrated

316
00:13:49,040 --> 00:13:51,839
collision attack when you control both

317
00:13:51,839 --> 00:13:54,720
the entry point and the egress point of

318
00:13:54,720 --> 00:13:56,480
the circuit then you can easily

319
00:13:56,480 --> 00:13:57,839
de-anonymize

320
00:13:57,839 --> 00:13:59,199
um

321
00:13:59,199 --> 00:14:01,199
the center of

322
00:14:01,199 --> 00:14:04,639
the of the tcp floor

323
00:14:05,839 --> 00:14:08,399
now i will

324
00:14:08,399 --> 00:14:10,880
touch i will present some

325
00:14:10,880 --> 00:14:12,560
academic research

326
00:14:12,560 --> 00:14:13,680
efforts

327
00:14:13,680 --> 00:14:16,320
and i will start with a project called

328
00:14:16,320 --> 00:14:18,079
the position lightweight and immediate

329
00:14:18,079 --> 00:14:20,240
protocol at network layer

330
00:14:20,240 --> 00:14:21,519
so

331
00:14:21,519 --> 00:14:23,600
this

332
00:14:23,600 --> 00:14:26,880
this project is the last of a series of

333
00:14:26,880 --> 00:14:29,040
lightweight and most protocols

334
00:14:29,040 --> 00:14:30,800
lightweight anomalies protocols were

335
00:14:30,800 --> 00:14:34,720
protocols that were designed in order to

336
00:14:34,720 --> 00:14:36,720
address

337
00:14:36,720 --> 00:14:40,480
some concerns with regards to available

338
00:14:40,480 --> 00:14:43,199
network privacy solutions without

339
00:14:43,199 --> 00:14:45,519
inheriting from

340
00:14:45,519 --> 00:14:47,839
heavy

341
00:14:47,839 --> 00:14:49,680
cryptographic

342
00:14:49,680 --> 00:14:51,040
constraints

343
00:14:51,040 --> 00:14:51,839
from

344
00:14:51,839 --> 00:14:54,240
mixed networks and other

345
00:14:54,240 --> 00:14:57,120
privacy preserving messaging solutions

346
00:14:57,120 --> 00:14:59,680
so in a fee

347
00:14:59,680 --> 00:15:00,959
you

348
00:15:00,959 --> 00:15:03,519
the you use a helper node

349
00:15:03,519 --> 00:15:06,399
to build a

350
00:15:06,399 --> 00:15:07,920
low stretch

351
00:15:07,920 --> 00:15:09,600
path from

352
00:15:09,600 --> 00:15:12,639
a source node to a destination the goal

353
00:15:12,639 --> 00:15:16,720
is to avoid an observer located on the

354
00:15:16,720 --> 00:15:18,959
path between the source and destination

355
00:15:18,959 --> 00:15:21,440
to be able to deal anonymize the source

356
00:15:21,440 --> 00:15:22,880
and destination

357
00:15:22,880 --> 00:15:23,680
and

358
00:15:23,680 --> 00:15:25,279
this attacker

359
00:15:25,279 --> 00:15:27,680
in fee is a

360
00:15:27,680 --> 00:15:29,519
rather powerful

361
00:15:29,519 --> 00:15:32,000
because

362
00:15:32,000 --> 00:15:34,480
we assume that the attacker has a

363
00:15:34,480 --> 00:15:36,560
knowledge of the topology so you need to

364
00:15:36,560 --> 00:15:37,519
hide

365
00:15:37,519 --> 00:15:39,920
the length of the ice path between

366
00:15:39,920 --> 00:15:42,560
source and destination and the position

367
00:15:42,560 --> 00:15:46,959
of the various ases in this pass

368
00:15:46,959 --> 00:15:49,600
crypt and payload encryption is bound to

369
00:15:49,600 --> 00:15:52,560
the past to avoid the session hijacking

370
00:15:52,560 --> 00:15:54,639
attacks that have been

371
00:15:54,639 --> 00:15:56,560
done against previous

372
00:15:56,560 --> 00:15:59,279
uh lightweight only protocols so i will

373
00:15:59,279 --> 00:16:02,160
explain very quickly how uh fee is

374
00:16:02,160 --> 00:16:03,360
working

375
00:16:03,360 --> 00:16:04,880
so

376
00:16:04,880 --> 00:16:07,120
you have a source s

377
00:16:07,120 --> 00:16:10,240
and a destination d the source s wants

378
00:16:10,240 --> 00:16:12,160
to send a packet to d

379
00:16:12,160 --> 00:16:15,360
by using a helper node help the helper

380
00:16:15,360 --> 00:16:19,279
that is on the on the slide so uh

381
00:16:19,279 --> 00:16:22,399
want to build a path going from a6 s3 s1

382
00:16:22,399 --> 00:16:26,560
s2 s5 s9 so in red over the

383
00:16:26,560 --> 00:16:30,800
over the picture to do that first um

384
00:16:30,800 --> 00:16:33,040
s will send a packet

385
00:16:33,040 --> 00:16:35,040
to the help

386
00:16:35,040 --> 00:16:37,920
and in sending this packet it will ask

387
00:16:37,920 --> 00:16:40,240
each es on the path

388
00:16:40,240 --> 00:16:41,199
to

389
00:16:41,199 --> 00:16:45,199
place some information in a

390
00:16:45,199 --> 00:16:47,839
say a path segment vector

391
00:16:47,839 --> 00:16:49,680
the past segment vector will contain

392
00:16:49,680 --> 00:16:51,440
information

393
00:16:51,440 --> 00:16:52,880
regarding

394
00:16:52,880 --> 00:16:55,519
for each es which which was the ingress

395
00:16:55,519 --> 00:16:58,399
point the aws point

396
00:16:58,399 --> 00:17:00,959
the position of the information about

397
00:17:00,959 --> 00:17:04,559
the previous es on the path and a

398
00:17:04,559 --> 00:17:08,559
signature over this information

399
00:17:08,559 --> 00:17:09,358
this

400
00:17:09,358 --> 00:17:10,720
[Music]

401
00:17:10,720 --> 00:17:13,199
this path vector is built

402
00:17:13,199 --> 00:17:14,319
when

403
00:17:14,319 --> 00:17:16,559
the packet is sent from the source to

404
00:17:16,559 --> 00:17:20,240
the helper and as you see on

405
00:17:20,240 --> 00:17:23,280
in the vectors this position here you

406
00:17:23,280 --> 00:17:26,160
have a set of information you have you

407
00:17:26,160 --> 00:17:27,520
still have some

408
00:17:27,520 --> 00:17:30,400
slots in the vectors that are not filled

409
00:17:30,400 --> 00:17:32,480
with information because this path

410
00:17:32,480 --> 00:17:34,799
vector is of a fixed size to prevent

411
00:17:34,799 --> 00:17:36,880
topological attacks

412
00:17:36,880 --> 00:17:37,679
and

413
00:17:37,679 --> 00:17:39,360
you

414
00:17:39,360 --> 00:17:41,679
and you use

415
00:17:41,679 --> 00:17:44,720
and the helper will

416
00:17:44,840 --> 00:17:47,679
use publicly encryption to reveal which

417
00:17:47,679 --> 00:17:50,160
is the final destination and use the

418
00:17:50,160 --> 00:17:53,200
passing and start back

419
00:17:53,200 --> 00:17:54,320
back off

420
00:17:54,320 --> 00:17:56,400
past construction method

421
00:17:56,400 --> 00:17:59,760
to build a path

422
00:17:59,760 --> 00:18:01,840
to the destination

423
00:18:01,840 --> 00:18:04,880
without having the ais is on

424
00:18:04,880 --> 00:18:07,840
the path from him to the source knowing

425
00:18:07,840 --> 00:18:09,520
which is the

426
00:18:09,520 --> 00:18:10,880
destination so

427
00:18:10,880 --> 00:18:14,400
you start a backup process going from s8

428
00:18:14,400 --> 00:18:16,080
to as1

429
00:18:16,080 --> 00:18:18,640
and then in as1

430
00:18:18,640 --> 00:18:19,919
the

431
00:18:19,919 --> 00:18:22,559
the path segment vector is stripped with

432
00:18:22,559 --> 00:18:24,880
information for as4 and s8 because

433
00:18:24,880 --> 00:18:26,640
they're not going to be used

434
00:18:26,640 --> 00:18:30,240
on the underpass and then

435
00:18:30,240 --> 00:18:31,280
you

436
00:18:31,280 --> 00:18:34,720
the path segment vector is built from

437
00:18:34,720 --> 00:18:36,799
as1 to as9

438
00:18:36,799 --> 00:18:39,120
at the end of the process s and d have

439
00:18:39,120 --> 00:18:40,320
built a

440
00:18:40,320 --> 00:18:41,760
path segment

441
00:18:41,760 --> 00:18:43,120
that is

442
00:18:43,120 --> 00:18:45,440
containing source routing information

443
00:18:45,440 --> 00:18:47,840
anonymized to writing information that

444
00:18:47,840 --> 00:18:50,799
can be used to send packet between

445
00:18:50,799 --> 00:18:52,640
between them

446
00:18:52,640 --> 00:18:54,880
and

447
00:18:55,200 --> 00:18:57,600
another project from academia that is

448
00:18:57,600 --> 00:19:01,280
really worth uh mentioning is things

449
00:19:01,280 --> 00:19:04,160
slings is the major mixed network

450
00:19:04,160 --> 00:19:06,559
project

451
00:19:06,559 --> 00:19:07,760
it's a

452
00:19:07,760 --> 00:19:08,880
project that

453
00:19:08,880 --> 00:19:11,679
that was built in the realm of messaging

454
00:19:11,679 --> 00:19:14,720
systems it consists in a chain of proxy

455
00:19:14,720 --> 00:19:17,280
several known ones mixes which take a

456
00:19:17,280 --> 00:19:20,000
message from multiple sender shuffles

457
00:19:20,000 --> 00:19:23,600
them and sends them back in random order

458
00:19:23,600 --> 00:19:26,640
to a next mixed node and through the

459
00:19:26,640 --> 00:19:28,400
chain of mixed node you perform an

460
00:19:28,400 --> 00:19:31,520
anomization procedure

461
00:19:31,520 --> 00:19:34,320
yes christopher

462
00:19:36,840 --> 00:19:39,280
okay we're running pretty short on time

463
00:19:39,280 --> 00:19:41,840
so uh

464
00:19:41,919 --> 00:19:45,200
okay so i will go very quickly

465
00:19:45,200 --> 00:19:48,240
so uh things is very interesting because

466
00:19:48,240 --> 00:19:49,760
it's um

467
00:19:49,760 --> 00:19:51,760
because it's a

468
00:19:51,760 --> 00:19:53,280
uh

469
00:19:53,280 --> 00:19:55,200
it's very powerful it has not been

470
00:19:55,200 --> 00:19:57,520
attacked yet it's uh

471
00:19:57,520 --> 00:19:59,919
yet it's

472
00:19:59,919 --> 00:20:01,919
it's very consuming in terms of

473
00:20:01,919 --> 00:20:04,880
cryptography but uh the very interesting

474
00:20:04,880 --> 00:20:07,440
part in in there is that it uses the

475
00:20:07,440 --> 00:20:10,480
source sorting approach to and uh

476
00:20:10,480 --> 00:20:12,799
and cryptography to protect

477
00:20:12,799 --> 00:20:16,320
the anonymity of routing information

478
00:20:16,320 --> 00:20:19,840
uh i will skip over this

479
00:20:19,840 --> 00:20:22,559
while sphinx uh is uh

480
00:20:22,559 --> 00:20:23,360
very

481
00:20:23,360 --> 00:20:25,919
angry in terms of cryptography some

482
00:20:25,919 --> 00:20:28,080
projects like ornette has tried to

483
00:20:28,080 --> 00:20:29,200
address

484
00:20:29,200 --> 00:20:30,720
the

485
00:20:30,720 --> 00:20:33,039
and reduce the need for public

486
00:20:33,039 --> 00:20:36,000
cryptography instincts in order to have

487
00:20:36,000 --> 00:20:39,039
better performance

488
00:20:39,360 --> 00:20:41,200
one idea that

489
00:20:41,200 --> 00:20:43,600
that is important and that i wanted to

490
00:20:43,600 --> 00:20:47,439
push in this presentation is that

491
00:20:47,760 --> 00:20:52,000
for now many solutions that are that are

492
00:20:52,000 --> 00:20:55,679
being deployed uh rely on trust parties

493
00:20:55,679 --> 00:20:56,640
and

494
00:20:56,640 --> 00:20:58,640
use of relay nodes

495
00:20:58,640 --> 00:21:00,880
and

496
00:21:01,120 --> 00:21:03,120
i think that uh

497
00:21:03,120 --> 00:21:06,559
in the community we should uh

498
00:21:06,559 --> 00:21:08,559
look at uh

499
00:21:08,559 --> 00:21:11,120
projects from the academic realm and

500
00:21:11,120 --> 00:21:12,559
look at the

501
00:21:12,559 --> 00:21:15,840
use of source routing concepts to

502
00:21:15,840 --> 00:21:18,480
address privacy issues

503
00:21:18,480 --> 00:21:19,600
and

504
00:21:19,600 --> 00:21:23,200
this information this presentation is a

505
00:21:23,200 --> 00:21:24,500
call to

506
00:21:24,500 --> 00:21:26,640
[Music]

507
00:21:26,640 --> 00:21:28,880
to work on

508
00:21:28,880 --> 00:21:32,559
this alternative approach to build

509
00:21:32,559 --> 00:21:34,480
privacy at the network layer using

510
00:21:34,480 --> 00:21:37,600
source routing rather than a trusted

511
00:21:37,600 --> 00:21:38,559
party

512
00:21:38,559 --> 00:21:40,320
so

513
00:21:40,320 --> 00:21:41,840
if you are willing to

514
00:21:41,840 --> 00:21:43,039
work on

515
00:21:43,039 --> 00:21:45,280
how those approaches could be translated

516
00:21:45,280 --> 00:21:47,600
and adapted in the in the current

517
00:21:47,600 --> 00:21:50,320
internet i would be very happy to hear

518
00:21:50,320 --> 00:21:54,678
from you and to get your comments

519
00:21:58,799 --> 00:22:00,000
um

520
00:22:00,000 --> 00:22:02,559
is there time for questions or should we

521
00:22:02,559 --> 00:22:05,120
take them later on the list

522
00:22:05,120 --> 00:22:07,679
oh we can do questions uh ben correct uh

523
00:22:07,679 --> 00:22:09,679
yeah for questions we'll keep it at

524
00:22:09,679 --> 00:22:11,200
these three

525
00:22:11,200 --> 00:22:15,280
uh so okay somewhat cheeky but um

526
00:22:15,280 --> 00:22:16,559
why not

527
00:22:16,559 --> 00:22:19,440
uh why not just take your sharpie and

528
00:22:19,440 --> 00:22:21,919
and cross out application layer and cut

529
00:22:21,919 --> 00:22:23,919
you know write network layer

530
00:22:23,919 --> 00:22:27,840
uh and say the tor is the network layer

531
00:22:27,840 --> 00:22:30,080
um

532
00:22:30,080 --> 00:22:31,440
this is uh

533
00:22:31,440 --> 00:22:33,440
this is a very interesting approach in

534
00:22:33,440 --> 00:22:35,679
fact it has been investigated in

535
00:22:35,679 --> 00:22:38,960
an article called tor instead of ip

536
00:22:38,960 --> 00:22:40,880
and

537
00:22:40,880 --> 00:22:42,480
one

538
00:22:42,480 --> 00:22:46,080
problem with that is that

539
00:22:46,320 --> 00:22:49,280
toro has some

540
00:22:49,280 --> 00:22:51,600
as some shortcomings with regard to some

541
00:22:51,600 --> 00:22:52,559
attacks

542
00:22:52,559 --> 00:22:55,440
with regard to anonymity for instance uh

543
00:22:55,440 --> 00:22:57,120
compared to sphinx

544
00:22:57,120 --> 00:22:59,840
uh toro can

545
00:22:59,840 --> 00:23:02,480
can reveal the kind of application that

546
00:23:02,480 --> 00:23:05,360
is running because it doesn't do pacing

547
00:23:05,360 --> 00:23:06,880
of the packets

548
00:23:06,880 --> 00:23:08,720
and uh

549
00:23:08,720 --> 00:23:12,720
so and uh it's it's it's not uh

550
00:23:12,720 --> 00:23:15,039
immune against traffic analysis attacks

551
00:23:15,039 --> 00:23:18,080
while some some at the network layer if

552
00:23:18,080 --> 00:23:19,520
you want to be immune against those

553
00:23:19,520 --> 00:23:20,960
attacks you need to have some sort of

554
00:23:20,960 --> 00:23:23,440
padding and preventing someone to gain

555
00:23:23,440 --> 00:23:26,400
information by size of packet and

556
00:23:26,400 --> 00:23:28,240
size of the route so

557
00:23:28,240 --> 00:23:29,520
if we have resolution coming in

558
00:23:29,520 --> 00:23:32,400
financial padding um i know i know that

559
00:23:32,400 --> 00:23:34,400
tor does actually have essentially fixed

560
00:23:34,400 --> 00:23:36,240
block size

561
00:23:36,240 --> 00:23:38,720
and quite a bit of padding in order to

562
00:23:38,720 --> 00:23:40,799
try to defeat these kinds of similar

563
00:23:40,799 --> 00:23:42,400
attacks

564
00:23:42,400 --> 00:23:44,640
um but i guess i don't necessarily mean

565
00:23:44,640 --> 00:23:47,200
tor precisely as it exists right the

566
00:23:47,200 --> 00:23:49,440
question is you know you say at the

567
00:23:49,440 --> 00:23:51,120
network layer what does that mean to you

568
00:23:51,120 --> 00:23:53,200
and and you know what's the importance

569
00:23:53,200 --> 00:23:54,799
of distinguishing between at the network

570
00:23:54,799 --> 00:23:58,000
layer and as an overlay like tour

571
00:23:58,000 --> 00:24:01,840
for me one aspect in the network layer

572
00:24:01,840 --> 00:24:04,320
is that you you really want to have

573
00:24:04,320 --> 00:24:06,080
something that is very quick in

574
00:24:06,080 --> 00:24:08,320
executing from a cryptographic

575
00:24:08,320 --> 00:24:09,520
standpoint

576
00:24:09,520 --> 00:24:10,960
so uh

577
00:24:10,960 --> 00:24:12,640
my aim

578
00:24:12,640 --> 00:24:14,480
to adapt uh

579
00:24:14,480 --> 00:24:16,159
the technologies that are used in the

580
00:24:16,159 --> 00:24:17,840
upper layer the network layout would be

581
00:24:17,840 --> 00:24:20,559
to reduce as much as possible the use of

582
00:24:20,559 --> 00:24:22,159
public key cryptography because it

583
00:24:22,159 --> 00:24:24,960
induced it reduces

584
00:24:24,960 --> 00:24:28,559
delay and latency that is not compatible

585
00:24:28,559 --> 00:24:30,880
with requirements for applications are

586
00:24:30,880 --> 00:24:34,159
not delay tolerant at the network layer

587
00:24:34,159 --> 00:24:36,880
okay thank you

588
00:24:36,880 --> 00:24:40,080
we have one minute can people be uh we

589
00:24:40,080 --> 00:24:41,679
can go a little bit above but people

590
00:24:41,679 --> 00:24:42,880
folks wouldn't mind keeping questions

591
00:24:42,880 --> 00:24:44,400
extremely brief

592
00:24:44,400 --> 00:24:45,840
what's in live cloudflare very quick

593
00:24:45,840 --> 00:24:48,320
question it seems and maybe

594
00:24:48,320 --> 00:24:50,080
misunderstanding your presentation that

595
00:24:50,080 --> 00:24:52,640
you're using the existing sort of as

596
00:24:52,640 --> 00:24:55,600
relationships as the network and you're

597
00:24:55,600 --> 00:24:58,159
picking a path through the aes

598
00:24:58,159 --> 00:24:59,600
uh this seems

599
00:24:59,600 --> 00:25:02,480
requires a significant amount more work

600
00:25:02,480 --> 00:25:04,480
and traffic handling

601
00:25:04,480 --> 00:25:06,960
by aas that wouldn't be on the path

602
00:25:06,960 --> 00:25:09,120
anyway and would be

603
00:25:09,120 --> 00:25:12,240
now and also would really

604
00:25:12,240 --> 00:25:13,600
you're asking

605
00:25:13,600 --> 00:25:15,039
services that really haven't done a lot

606
00:25:15,039 --> 00:25:16,400
of work in the past to do a lot of

607
00:25:16,400 --> 00:25:17,919
computational work

608
00:25:17,919 --> 00:25:19,520
have you considered how this impasse

609
00:25:19,520 --> 00:25:21,840
deployability

610
00:25:21,840 --> 00:25:22,880
um

611
00:25:22,880 --> 00:25:24,400
just as a

612
00:25:24,400 --> 00:25:26,799
first comment i don't want to claim

613
00:25:26,799 --> 00:25:28,720
attribution for the work i presented it

614
00:25:28,720 --> 00:25:31,039
was just awareness it's work that has

615
00:25:31,039 --> 00:25:33,279
been done by other people than me so i'm

616
00:25:33,279 --> 00:25:35,279
just presenting here i'm not the author

617
00:25:35,279 --> 00:25:38,240
of this work but the way i understand

618
00:25:38,240 --> 00:25:40,720
your question and

619
00:25:40,720 --> 00:25:43,279
the addressing of the

620
00:25:43,279 --> 00:25:47,679
of the years is that uh well uh

621
00:25:47,679 --> 00:25:51,120
sure if we put uh privacy in the network

622
00:25:51,120 --> 00:25:52,640
here some

623
00:25:52,640 --> 00:25:56,320
routing uh the packets will take more

624
00:25:56,320 --> 00:25:59,840
will will take more efforts for transit

625
00:25:59,840 --> 00:26:02,080
net ais

626
00:26:02,080 --> 00:26:03,919
and transit equipment

627
00:26:03,919 --> 00:26:06,559
but i think that

628
00:26:06,559 --> 00:26:10,320
this computing overhead is necessary if

629
00:26:10,320 --> 00:26:12,880
we want to provide uh privacy at the

630
00:26:12,880 --> 00:26:15,840
network layer because uh if you don't

631
00:26:15,840 --> 00:26:16,720
have

632
00:26:16,720 --> 00:26:18,320
uh

633
00:26:18,320 --> 00:26:21,600
the aim of a future work in ensuring uh

634
00:26:21,600 --> 00:26:23,200
privacy the network here would be to

635
00:26:23,200 --> 00:26:26,320
reduce this amount of computation

636
00:26:26,320 --> 00:26:30,159
overhead for to ensure privacy

637
00:26:30,159 --> 00:26:33,039
is previously going at a cost yes

638
00:26:33,039 --> 00:26:34,559
but the goal would be to reduce this

639
00:26:34,559 --> 00:26:38,360
cost as much as possible

640
00:26:46,159 --> 00:26:48,480
uh jonathan hoyland club

641
00:26:48,480 --> 00:26:49,360
um

642
00:26:49,360 --> 00:26:50,159
the

643
00:26:50,159 --> 00:26:53,760
have you uh categorized these pieces of

644
00:26:53,760 --> 00:26:57,120
work in the framework of um

645
00:26:57,120 --> 00:26:59,440
da set out like it basically you try and

646
00:26:59,440 --> 00:27:00,720
say

647
00:27:00,720 --> 00:27:02,400
um

648
00:27:02,400 --> 00:27:04,400
that that there's a minimum

649
00:27:04,400 --> 00:27:06,400
you have to either grow your

650
00:27:06,400 --> 00:27:08,000
traffic linearly in the number of

651
00:27:08,000 --> 00:27:09,279
messages

652
00:27:09,279 --> 00:27:12,000
or you add latency in

653
00:27:12,000 --> 00:27:13,440
that's logarithmic in the number of

654
00:27:13,440 --> 00:27:14,640
users

655
00:27:14,640 --> 00:27:15,840
um

656
00:27:15,840 --> 00:27:17,679
before you can get any

657
00:27:17,679 --> 00:27:19,600
results as a sort of minimum like

658
00:27:19,600 --> 00:27:20,640
there's a

659
00:27:20,640 --> 00:27:22,240
a statistical proof that says you must

660
00:27:22,240 --> 00:27:23,279
have

661
00:27:23,279 --> 00:27:25,200
so couldn't could you

662
00:27:25,200 --> 00:27:26,799
like to have you looked at your each of

663
00:27:26,799 --> 00:27:28,799
those proposed things and said oh this

664
00:27:28,799 --> 00:27:30,159
one is adding

665
00:27:30,159 --> 00:27:31,200
um

666
00:27:31,200 --> 00:27:32,880
a minimum of bandwidth in the number of

667
00:27:32,880 --> 00:27:35,039
messages or this one is adding

668
00:27:35,039 --> 00:27:36,960
a linear bandwidth number of messages

669
00:27:36,960 --> 00:27:38,720
and this one's adding logarithmic time

670
00:27:38,720 --> 00:27:40,320
or whatever the trade-off between those

671
00:27:40,320 --> 00:27:41,440
um

672
00:27:41,440 --> 00:27:43,520
i think

673
00:27:43,520 --> 00:27:45,840
we started trying to do this

674
00:27:45,840 --> 00:27:48,159
categorization

675
00:27:48,159 --> 00:27:50,559
not in terms of messages and overhead

676
00:27:50,559 --> 00:27:51,279
but

677
00:27:51,279 --> 00:27:52,650
rather by

678
00:27:52,650 --> 00:27:53,919
[Music]

679
00:27:53,919 --> 00:27:55,919
trying to say

680
00:27:55,919 --> 00:27:57,760
with the given protocol which are the

681
00:27:57,760 --> 00:27:59,760
building blocks it uses to protect

682
00:27:59,760 --> 00:28:02,720
against this and this attacker and

683
00:28:02,720 --> 00:28:05,120
trying to categorize them from a very

684
00:28:05,120 --> 00:28:07,440
analytical perspective

685
00:28:07,440 --> 00:28:09,120
and uh

686
00:28:09,120 --> 00:28:12,640
as there were there are a lot of

687
00:28:12,640 --> 00:28:14,720
different technologies to ensure to

688
00:28:14,720 --> 00:28:17,200
protect again the same kind of attack by

689
00:28:17,200 --> 00:28:21,600
a given attacker uh this fell short then

690
00:28:21,600 --> 00:28:22,640
uh

691
00:28:22,640 --> 00:28:25,440
we considered having a sort of scoring

692
00:28:25,440 --> 00:28:27,919
of to categorize the

693
00:28:27,919 --> 00:28:30,000
level of protection the solution would

694
00:28:30,000 --> 00:28:32,880
uh would provide because it was it's

695
00:28:32,880 --> 00:28:36,720
fuzzier but uh to say okay this

696
00:28:36,720 --> 00:28:38,960
protection is level seven this one is

697
00:28:38,960 --> 00:28:40,480
eight so it's a bit

698
00:28:40,480 --> 00:28:43,200
better and with regard to

699
00:28:43,200 --> 00:28:45,840
volume of messages

700
00:28:45,840 --> 00:28:48,480
overhead etc this comes to

701
00:28:48,480 --> 00:28:50,960
a discussion on the mailing list

702
00:28:50,960 --> 00:28:53,120
yesterday about a graphic

703
00:28:53,120 --> 00:28:55,679
graph that i had in the slides before

704
00:28:55,679 --> 00:28:57,360
and that was a

705
00:28:57,360 --> 00:29:00,399
questioned and i think we need

706
00:29:00,399 --> 00:29:03,760
as a community some more solid method to

707
00:29:03,760 --> 00:29:06,559
compare the solutions and

708
00:29:06,559 --> 00:29:10,480
i i threw back the envelope

709
00:29:10,480 --> 00:29:13,200
guesses on the slide it was my mistake

710
00:29:13,200 --> 00:29:14,960
and i think that as a community if we

711
00:29:14,960 --> 00:29:17,360
want to analyze those solutions more

712
00:29:17,360 --> 00:29:19,840
clearly we need a more analytical

713
00:29:19,840 --> 00:29:21,440
framework and they would be keen on

714
00:29:21,440 --> 00:29:25,720
working on that later with the community

715
00:29:26,960 --> 00:29:29,279
thank you

716
00:29:31,919 --> 00:29:34,480
hi antoine uh david scott

717
00:29:34,480 --> 00:29:37,360
privacy enthusiast um i so thanks for

718
00:29:37,360 --> 00:29:39,200
the presentation and for the kind of

719
00:29:39,200 --> 00:29:41,120
overview of a various few various

720
00:29:41,120 --> 00:29:43,600
techniques i just wanted to somewhat

721
00:29:43,600 --> 00:29:45,919
respond to your call to action as

722
00:29:45,919 --> 00:29:48,640
someone who is working on deploying uh a

723
00:29:48,640 --> 00:29:50,640
an mp blinding solution to protect user

724
00:29:50,640 --> 00:29:53,039
privacy i care about this a lot

725
00:29:53,039 --> 00:29:57,200
and i you know to create the great inigo

726
00:29:57,200 --> 00:29:59,760
montoya i'm not sure that the word

727
00:29:59,760 --> 00:30:01,520
network layer means what you think it

728
00:30:01,520 --> 00:30:02,399
means

729
00:30:02,399 --> 00:30:04,960
uh at the end of the day

730
00:30:04,960 --> 00:30:06,720
you know where we do this in the network

731
00:30:06,720 --> 00:30:09,039
are you're saying source routing i mean

732
00:30:09,039 --> 00:30:11,840
tor private relay are all forms of

733
00:30:11,840 --> 00:30:13,760
source routing uh at the end of the day

734
00:30:13,760 --> 00:30:16,159
because it's the client deciding

735
00:30:16,159 --> 00:30:18,640
how the circuit is built

736
00:30:18,640 --> 00:30:21,039
and just doing it as a layer is not a

737
00:30:21,039 --> 00:30:23,360
real distinction uh saying that you're

738
00:30:23,360 --> 00:30:25,440
doing it at the ip layer

739
00:30:25,440 --> 00:30:26,320
you know

740
00:30:26,320 --> 00:30:28,240
for this to have any kind of privacy

741
00:30:28,240 --> 00:30:29,919
properties you're gonna need encryption

742
00:30:29,919 --> 00:30:31,919
so you know you can use ipsec or

743
00:30:31,919 --> 00:30:34,480
whatever your favorite ip layer solution

744
00:30:34,480 --> 00:30:35,200
is

745
00:30:35,200 --> 00:30:37,279
but all of them do the same thing all of

746
00:30:37,279 --> 00:30:40,000
them start off with an asymmetric

747
00:30:40,000 --> 00:30:42,480
key exchange and then use symmetric keys

748
00:30:42,480 --> 00:30:45,039
per packet so all of these distinctions

749
00:30:45,039 --> 00:30:46,080
that you've made through your

750
00:30:46,080 --> 00:30:47,520
presentations

751
00:30:47,520 --> 00:30:49,520
i don't think they're correct i would

752
00:30:49,520 --> 00:30:51,520
encourage you to look a bit closer as to

753
00:30:51,520 --> 00:30:53,440
how all these things are built

754
00:30:53,440 --> 00:30:54,720
because i think you'll realize that

755
00:30:54,720 --> 00:30:56,559
having something the layer which is

756
00:30:56,559 --> 00:30:58,720
implemented does not impact the security

757
00:30:58,720 --> 00:30:59,919
properties nor the performance

758
00:30:59,919 --> 00:31:02,159
properties at the end of the day

759
00:31:02,159 --> 00:31:04,000
it's the choice of solution the choice

760
00:31:04,000 --> 00:31:05,840
of number of hops of which hops you

761
00:31:05,840 --> 00:31:08,240
trust and things like that that matter

762
00:31:08,240 --> 00:31:10,320
um so

763
00:31:10,320 --> 00:31:11,760
thanks for looking into this and thanks

764
00:31:11,760 --> 00:31:13,279
for bringing these new things but i

765
00:31:13,279 --> 00:31:14,880
don't think in terms of call for action

766
00:31:14,880 --> 00:31:16,960
for the folks who are deploying this

767
00:31:16,960 --> 00:31:18,480
i don't think these techniques are

768
00:31:18,480 --> 00:31:20,640
necessarily an improvement over what we

769
00:31:20,640 --> 00:31:21,440
have

770
00:31:21,440 --> 00:31:23,039
all right thank you

771
00:31:23,039 --> 00:31:26,799
okay thanks for uh your comment uh

772
00:31:26,799 --> 00:31:28,399
i think that it

773
00:31:28,399 --> 00:31:30,159
it comes back to the previous question

774
00:31:30,159 --> 00:31:32,399
with regards to the

775
00:31:32,399 --> 00:31:35,840
proper analytics and the comparison with

776
00:31:35,840 --> 00:31:38,799
based on sugar

777
00:31:38,799 --> 00:31:40,559
thanks a lot anton for the presentation

778
00:31:40,559 --> 00:31:41,600
we are

779
00:31:41,600 --> 00:31:43,200
running a little bit behind so i'll go

780
00:31:43,200 --> 00:31:44,399
ahead and

781
00:31:44,399 --> 00:31:45,679
start with the next one no ways at all

782
00:31:45,679 --> 00:31:48,000
thanks a lot for your presentation

783
00:31:48,000 --> 00:31:50,240
um i also move on to the

784
00:31:50,240 --> 00:31:52,559
confidential computing

785
00:31:52,559 --> 00:31:55,200
presentation

786
00:31:55,200 --> 00:31:57,760
yes hello everyone so we wanted to talk

787
00:31:57,760 --> 00:31:59,840
about confidence or competing

788
00:31:59,840 --> 00:32:01,840
a particular technique as applied to a

789
00:32:01,840 --> 00:32:04,240
particular problem although it's also

790
00:32:04,240 --> 00:32:06,000
applicable to other

791
00:32:06,000 --> 00:32:08,080
similar problems and the particular

792
00:32:08,080 --> 00:32:10,480
problem is dns thresholds go to the next

793
00:32:10,480 --> 00:32:12,399
slide please

794
00:32:12,399 --> 00:32:13,120
so

795
00:32:13,120 --> 00:32:15,039
why are we doing this so we sort of be

796
00:32:15,039 --> 00:32:16,080
basically

797
00:32:16,080 --> 00:32:18,240
thinking around what what can we do to

798
00:32:18,240 --> 00:32:20,320
further improve privacy as we mean that

799
00:32:20,320 --> 00:32:23,279
uh communications encryption and so on

800
00:32:23,279 --> 00:32:26,000
it's it's largely handled and

801
00:32:26,000 --> 00:32:27,440
we could use this for various kinds of

802
00:32:27,440 --> 00:32:29,840
things like infrastructure functions um

803
00:32:29,840 --> 00:32:32,720
such as dns but also for other stuff

804
00:32:32,720 --> 00:32:35,279
um i'm going to go beyond and um

805
00:32:35,279 --> 00:32:37,919
just to give dns as one example

806
00:32:37,919 --> 00:32:40,799
so so obviously today mostly the domain

807
00:32:40,799 --> 00:32:42,640
name metadata is still visible on the

808
00:32:42,640 --> 00:32:44,720
wire even with you know payload

809
00:32:44,720 --> 00:32:46,880
encryption of various

810
00:32:46,880 --> 00:32:48,080
actual

811
00:32:48,080 --> 00:32:49,760
data paths

812
00:32:49,760 --> 00:32:52,159
but this will change as we get more dns

813
00:32:52,159 --> 00:32:54,480
query encryption we get more

814
00:32:54,480 --> 00:32:56,880
encryption of smi options and so forth

815
00:32:56,880 --> 00:32:58,240
in tls

816
00:32:58,240 --> 00:33:00,399
but even when when we get to the full

817
00:33:00,399 --> 00:33:03,039
encryption situation uh resolvers still

818
00:33:03,039 --> 00:33:04,960
have the potential to see the users in

819
00:33:04,960 --> 00:33:07,120
by browsing history which is sort of an

820
00:33:07,120 --> 00:33:08,320
interesting

821
00:33:08,320 --> 00:33:11,679
data asset and uh this also puts large

822
00:33:11,679 --> 00:33:13,360
resolver services as an attractive

823
00:33:13,360 --> 00:33:15,039
target for various kinds of pressures

824
00:33:15,039 --> 00:33:16,000
and

825
00:33:16,000 --> 00:33:18,159
attacks

826
00:33:18,159 --> 00:33:19,679
and uh of course there's been lots of

827
00:33:19,679 --> 00:33:22,320
work going on already mentioned all the

828
00:33:22,320 --> 00:33:24,480
protocol encryption aspects

829
00:33:24,480 --> 00:33:27,840
but also there's been like this rfc 8932

830
00:33:27,840 --> 00:33:30,320
came out of deprive that talks about the

831
00:33:30,320 --> 00:33:31,919
practices that people are supposed to be

832
00:33:31,919 --> 00:33:32,960
doing when

833
00:33:32,960 --> 00:33:35,760
when running some of these dns resolver

834
00:33:35,760 --> 00:33:37,519
services mozilla has their own

835
00:33:37,519 --> 00:33:39,760
requirements and so on

836
00:33:39,760 --> 00:33:42,320
next slide please

837
00:33:42,320 --> 00:33:43,600
so um

838
00:33:43,600 --> 00:33:45,279
the context of this work

839
00:33:45,279 --> 00:33:46,720
how do we

840
00:33:46,720 --> 00:33:48,320
how do we build on all of that that

841
00:33:48,320 --> 00:33:51,120
already exists and what is the remaining

842
00:33:51,120 --> 00:33:53,440
problems and is their next step

843
00:33:53,440 --> 00:33:56,559
and our general worry is is that for

844
00:33:56,559 --> 00:33:59,279
many types of these like infrastructure

845
00:33:59,279 --> 00:34:01,840
services such as dns

846
00:34:01,840 --> 00:34:04,399
those services will become a major

847
00:34:04,399 --> 00:34:06,720
remaining source of leaks it could be

848
00:34:06,720 --> 00:34:08,960
accidental leaks could be

849
00:34:08,960 --> 00:34:11,679
attacks could be commercial use could be

850
00:34:11,679 --> 00:34:13,918
authorities requesting information from

851
00:34:13,918 --> 00:34:17,040
one or multiple parties

852
00:34:17,040 --> 00:34:19,599
and if you look at this from a very high

853
00:34:19,599 --> 00:34:21,440
level perspective then we need to

854
00:34:21,440 --> 00:34:24,639
protect users data in flight at rest and

855
00:34:24,639 --> 00:34:26,079
in use

856
00:34:26,079 --> 00:34:28,879
and um so we've been running this this

857
00:34:28,879 --> 00:34:30,719
little experiment with my colleague here

858
00:34:30,719 --> 00:34:33,599
he was also on the on the meeting

859
00:34:33,599 --> 00:34:35,040
to see you know what could we do with

860
00:34:35,040 --> 00:34:36,639
confidence or compute could we use it

861
00:34:36,639 --> 00:34:38,560
for this particular problem and get some

862
00:34:38,560 --> 00:34:40,719
experience and we think there are some

863
00:34:40,719 --> 00:34:42,719
interesting opportunities and

864
00:34:42,719 --> 00:34:44,960
also challenges so worth discussing next

865
00:34:44,960 --> 00:34:48,119
slide please

866
00:34:50,000 --> 00:34:52,399
so the basic idea here is that what if

867
00:34:52,399 --> 00:34:54,639
we run the resolver process inside a

868
00:34:54,639 --> 00:34:57,119
trusted execution environment and we

869
00:34:57,119 --> 00:34:59,599
don't actually provide any user-specific

870
00:34:59,599 --> 00:35:02,000
data outside the encrypted process even

871
00:35:02,000 --> 00:35:04,240
to the dns operator

872
00:35:04,240 --> 00:35:06,079
or even to the owner of the computer

873
00:35:06,079 --> 00:35:08,480
hardware or or the uh

874
00:35:08,480 --> 00:35:10,320
cloud form that's it's running in and

875
00:35:10,320 --> 00:35:12,000
sort of like a

876
00:35:12,000 --> 00:35:15,119
maybe a novel idea run the service

877
00:35:15,119 --> 00:35:17,760
for the users and not collect

878
00:35:17,760 --> 00:35:20,400
personal data of the users but we

879
00:35:20,400 --> 00:35:22,000
actually do think that there's some

880
00:35:22,000 --> 00:35:24,320
incentives for doing this and

881
00:35:24,320 --> 00:35:25,680
damage from

882
00:35:25,680 --> 00:35:27,520
if there is such uh for

883
00:35:27,520 --> 00:35:30,160
not getting data about the users is not

884
00:35:30,160 --> 00:35:31,760
that big if you look at the details

885
00:35:31,760 --> 00:35:33,680
we'll get this in a bit

886
00:35:33,680 --> 00:35:36,079
um so the basically this desired

887
00:35:36,079 --> 00:35:37,520
security property that we try to

888
00:35:37,520 --> 00:35:40,160
establish here is is having the security

889
00:35:40,160 --> 00:35:42,800
perimeter around the service

890
00:35:42,800 --> 00:35:44,560
that prevents easy collection of

891
00:35:44,560 --> 00:35:46,720
information this will not be perfect

892
00:35:46,720 --> 00:35:48,800
we'll talk about some of the issues a

893
00:35:48,800 --> 00:35:50,400
bit later

894
00:35:50,400 --> 00:35:51,839
but it should complicate the life of

895
00:35:51,839 --> 00:35:54,960
those who wish to collect data

896
00:35:54,960 --> 00:35:57,599
next slide please

897
00:35:57,599 --> 00:36:00,000
and um i just wanted to provide like a

898
00:36:00,000 --> 00:36:02,320
very brief high level introduction to

899
00:36:02,320 --> 00:36:03,839
trusted execution environments i

900
00:36:03,839 --> 00:36:05,200
realized that on the audience there's

901
00:36:05,200 --> 00:36:07,440
people who know far more about this than

902
00:36:07,440 --> 00:36:09,680
i do so i'll keep it short

903
00:36:09,680 --> 00:36:11,440
but basically this trusted execution

904
00:36:11,440 --> 00:36:14,079
environments are

905
00:36:14,079 --> 00:36:15,440
enclaves or

906
00:36:15,440 --> 00:36:17,200
environments where

907
00:36:17,200 --> 00:36:19,359
we can run code and you can ensure that

908
00:36:19,359 --> 00:36:21,760
that code is not tampered with and also

909
00:36:21,760 --> 00:36:24,640
any data that that code uses

910
00:36:24,640 --> 00:36:27,599
is uh is is not readable outside the

911
00:36:27,599 --> 00:36:31,280
environment and cannot be changed either

912
00:36:31,280 --> 00:36:32,400
and of course

913
00:36:32,400 --> 00:36:35,040
simply running something inside a safe

914
00:36:35,040 --> 00:36:36,720
environment is not enough you have to

915
00:36:36,720 --> 00:36:38,640
also convince others

916
00:36:38,640 --> 00:36:40,640
somehow that that you actually are doing

917
00:36:40,640 --> 00:36:43,040
this and this we do through something

918
00:36:43,040 --> 00:36:45,119
called at the station

919
00:36:45,119 --> 00:36:47,599
and basically this is a process where a

920
00:36:47,599 --> 00:36:50,320
node can provide an assurance to outside

921
00:36:50,320 --> 00:36:52,400
parties remote parties that it's indeed

922
00:36:52,400 --> 00:36:53,359
running

923
00:36:53,359 --> 00:36:55,599
inside a particular type of

924
00:36:55,599 --> 00:36:57,200
trusted environment

925
00:36:57,200 --> 00:36:59,520
with specific configuration and specific

926
00:36:59,520 --> 00:37:01,200
software

927
00:37:01,200 --> 00:37:03,680
this does require trusting at least one

928
00:37:03,680 --> 00:37:05,760
external party for instance the cpu

929
00:37:05,760 --> 00:37:08,160
manufacturer because they can sort of

930
00:37:08,160 --> 00:37:10,720
vouch for their particular cpu and and

931
00:37:10,720 --> 00:37:12,800
this particular key that

932
00:37:12,800 --> 00:37:14,400
the cpu is supposed to have whether the

933
00:37:14,400 --> 00:37:17,119
signature is is valid

934
00:37:17,119 --> 00:37:19,040
we also need to understand what

935
00:37:19,040 --> 00:37:21,359
constitution acceptable piece of

936
00:37:21,359 --> 00:37:23,200
software that we should be running so if

937
00:37:23,200 --> 00:37:25,440
you just run in a sort of secure

938
00:37:25,440 --> 00:37:26,880
environment

939
00:37:26,880 --> 00:37:28,560
but don't care about the software that

940
00:37:28,560 --> 00:37:30,320
is being run that's of course totally

941
00:37:30,320 --> 00:37:32,800
ridiculous because as we know software

942
00:37:32,800 --> 00:37:34,640
can do anything and so basically if you

943
00:37:34,640 --> 00:37:37,280
don't check then you don't care what

944
00:37:37,280 --> 00:37:39,680
what actually happens

945
00:37:39,680 --> 00:37:41,839
uh but you can can do this this kind of

946
00:37:41,839 --> 00:37:42,720
a check

947
00:37:42,720 --> 00:37:44,400
what software is running what software

948
00:37:44,400 --> 00:37:47,280
image has is being run

949
00:37:47,280 --> 00:37:49,280
this technology is pretty heterogeneous

950
00:37:49,280 --> 00:37:51,599
or developing at this stage but there

951
00:37:51,599 --> 00:37:54,720
are multiple building blocks at the atf

952
00:37:54,720 --> 00:37:57,040
and outside and keeps evolving next

953
00:37:57,040 --> 00:37:59,520
slide please

954
00:38:00,320 --> 00:38:03,040
so the basic setup that we did in in our

955
00:38:03,040 --> 00:38:05,359
experiment was that um

956
00:38:05,359 --> 00:38:08,640
clients acquire dns information from a

957
00:38:08,640 --> 00:38:11,920
resolver and they do this query uh

958
00:38:11,920 --> 00:38:12,800
through

959
00:38:12,800 --> 00:38:16,000
encrypted query protocols such as do or

960
00:38:16,000 --> 00:38:18,079
dot

961
00:38:18,079 --> 00:38:19,040
and then

962
00:38:19,040 --> 00:38:21,280
this encryption ends up inside the

963
00:38:21,280 --> 00:38:23,920
trusted execution environment and is the

964
00:38:23,920 --> 00:38:26,000
encryption is terminated there

965
00:38:26,000 --> 00:38:26,880
and

966
00:38:26,880 --> 00:38:28,640
all the information about what is this

967
00:38:28,640 --> 00:38:31,040
particular client asking about what name

968
00:38:31,040 --> 00:38:35,359
is being resolved stays inside the t

969
00:38:36,160 --> 00:38:38,560
um so uh not even the operator of the

970
00:38:38,560 --> 00:38:41,359
dns server or the other cloud platform

971
00:38:41,359 --> 00:38:43,280
can can see what's actually been asked

972
00:38:43,280 --> 00:38:44,960
only the client knows about that and

973
00:38:44,960 --> 00:38:47,040
then this code

974
00:38:47,040 --> 00:38:48,720
this particular piece of software inside

975
00:38:48,720 --> 00:38:50,720
the t not knows about it but it doesn't

976
00:38:50,720 --> 00:38:52,640
leak that information

977
00:38:52,640 --> 00:38:54,720
of course you can't do like for most

978
00:38:54,720 --> 00:38:56,800
problems dns is very similar you can't

979
00:38:56,800 --> 00:38:58,880
do it sort of entirely on your own you

980
00:38:58,880 --> 00:39:01,280
have to sometimes ask other people some

981
00:39:01,280 --> 00:39:03,280
other information in this case if you

982
00:39:03,280 --> 00:39:04,960
don't have cash hit then you have to go

983
00:39:04,960 --> 00:39:06,320
somewhere else

984
00:39:06,320 --> 00:39:08,240
so there is an interaction with outside

985
00:39:08,240 --> 00:39:10,079
world there's some danger that

986
00:39:10,079 --> 00:39:11,839
an observer would be looking at this

987
00:39:11,839 --> 00:39:13,520
system from

988
00:39:13,520 --> 00:39:15,359
from outside and see that i know the

989
00:39:15,359 --> 00:39:17,680
client send the query and oops now

990
00:39:17,680 --> 00:39:20,160
there's another query sent right after

991
00:39:20,160 --> 00:39:22,560
that to this server and that server

992
00:39:22,560 --> 00:39:23,680
seems to be

993
00:39:23,680 --> 00:39:25,280
you know providing an answer but

994
00:39:25,280 --> 00:39:28,079
example.com and therefore probably this

995
00:39:28,079 --> 00:39:30,240
client was asking about that

996
00:39:30,240 --> 00:39:32,000
um you you

997
00:39:32,000 --> 00:39:34,320
you can't entirely prevent

998
00:39:34,320 --> 00:39:36,000
finding some information about this but

999
00:39:36,000 --> 00:39:37,520
you can make it a little bit more

1000
00:39:37,520 --> 00:39:38,960
difficult

1001
00:39:38,960 --> 00:39:41,119
um for instance in our case since you do

1002
00:39:41,119 --> 00:39:42,800
have caching

1003
00:39:42,800 --> 00:39:45,599
you can only do that in some cases

1004
00:39:45,599 --> 00:39:47,359
uh and then we we for instance in our

1005
00:39:47,359 --> 00:39:50,079
system we implemented timing obfuscation

1006
00:39:50,079 --> 00:39:52,400
and some some random background traffic

1007
00:39:52,400 --> 00:39:55,119
that confuses people about or outside of

1008
00:39:55,119 --> 00:39:56,880
service what's what's actually going on

1009
00:39:56,880 --> 00:39:59,119
what queries relate to what

1010
00:39:59,119 --> 00:40:01,920
next slide please

1011
00:40:02,000 --> 00:40:04,319
so that's the basic setup and now now we

1012
00:40:04,319 --> 00:40:06,640
talk about some of the

1013
00:40:06,640 --> 00:40:09,040
considerations that we sort of

1014
00:40:09,040 --> 00:40:11,119
found out in our analysis of trying to

1015
00:40:11,119 --> 00:40:12,480
do this

1016
00:40:12,480 --> 00:40:13,760
there's some upsides and then some

1017
00:40:13,760 --> 00:40:15,599
downsides and some other other

1018
00:40:15,599 --> 00:40:17,440
conclusions

1019
00:40:17,440 --> 00:40:20,160
um so the upside clearly is that it you

1020
00:40:20,160 --> 00:40:22,079
know we were able to hide all

1021
00:40:22,079 --> 00:40:24,720
user-related information and we actually

1022
00:40:24,720 --> 00:40:26,560
argue that this is something that you

1023
00:40:26,560 --> 00:40:29,440
know we should generally strive to do if

1024
00:40:29,440 --> 00:40:31,680
we can it's a very useful thing to do

1025
00:40:31,680 --> 00:40:33,440
that's not not the case that we should

1026
00:40:33,440 --> 00:40:34,480
always

1027
00:40:34,480 --> 00:40:36,960
leak all information that we get to some

1028
00:40:36,960 --> 00:40:39,040
some data storage that can be used

1029
00:40:39,040 --> 00:40:40,640
against the users

1030
00:40:40,640 --> 00:40:42,880
that's bad we should try to limit the

1031
00:40:42,880 --> 00:40:44,400
information that's actually leaked out

1032
00:40:44,400 --> 00:40:46,160
of these processes and

1033
00:40:46,160 --> 00:40:47,839
do it in a technical manner that we can

1034
00:40:47,839 --> 00:40:51,680
actually trust that protection somehow

1035
00:40:51,680 --> 00:40:53,680
and and that relates to the other upside

1036
00:40:53,680 --> 00:40:55,119
that

1037
00:40:55,119 --> 00:40:57,119
it's not just like you know we trust a

1038
00:40:57,119 --> 00:40:59,200
particular company that they are very

1039
00:40:59,200 --> 00:41:00,960
good company they can do this well i

1040
00:41:00,960 --> 00:41:02,160
trust them

1041
00:41:02,160 --> 00:41:04,160
um but we could actually get some

1042
00:41:04,160 --> 00:41:06,560
evidence of of their compliance that

1043
00:41:06,560 --> 00:41:10,319
that practice trust verify model

1044
00:41:10,319 --> 00:41:13,040
um and then i mentioned the incentives

1045
00:41:13,040 --> 00:41:16,880
earlier so one potential incentive

1046
00:41:16,880 --> 00:41:19,359
to do this is that you could advertise

1047
00:41:19,359 --> 00:41:21,599
is that our service doesn't actually

1048
00:41:21,599 --> 00:41:25,040
leak your information the user's uh

1049
00:41:25,040 --> 00:41:27,119
uh browsing history but

1050
00:41:27,119 --> 00:41:30,400
but it actually keeps its private um and

1051
00:41:30,400 --> 00:41:32,000
and that we can actually show that we're

1052
00:41:32,000 --> 00:41:33,599
doing this and so that that i think

1053
00:41:33,599 --> 00:41:34,800
would be a

1054
00:41:34,800 --> 00:41:37,280
you know significant advantage advantage

1055
00:41:37,280 --> 00:41:39,599
in in marketing a service

1056
00:41:39,599 --> 00:41:41,200
the other thing is that

1057
00:41:41,200 --> 00:41:43,440
you might consider lack of data from

1058
00:41:43,440 --> 00:41:47,200
users accents a a downside but

1059
00:41:47,200 --> 00:41:48,960
but you could also see this in in a more

1060
00:41:48,960 --> 00:41:50,800
positive light that you know if you

1061
00:41:50,800 --> 00:41:53,280
don't do that um then that's that's

1062
00:41:53,280 --> 00:41:55,119
actually the way it should be but you

1063
00:41:55,119 --> 00:41:57,760
can still get some valuable data

1064
00:41:57,760 --> 00:42:00,079
this kind of reminds me uh of of the

1065
00:42:00,079 --> 00:42:03,040
both yesterday uh ecker and others will

1066
00:42:03,040 --> 00:42:05,680
talk about priv and how you can

1067
00:42:05,680 --> 00:42:08,560
provide some aggregations of

1068
00:42:08,560 --> 00:42:11,599
statistics rather than per user relevant

1069
00:42:11,599 --> 00:42:13,520
information it's a very similar

1070
00:42:13,520 --> 00:42:16,319
situation here that you could you could

1071
00:42:16,319 --> 00:42:17,920
provide perhaps using some of the proof

1072
00:42:17,920 --> 00:42:19,280
techniques you could provide some

1073
00:42:19,280 --> 00:42:21,040
aggregate information that what is the

1074
00:42:21,040 --> 00:42:24,400
most popular name what and and so on

1075
00:42:24,400 --> 00:42:26,000
you can also perform more complicated

1076
00:42:26,000 --> 00:42:27,119
tasks like if you need to do some

1077
00:42:27,119 --> 00:42:30,319
geolocation or you know whatever special

1078
00:42:30,319 --> 00:42:32,400
thing as long as you do it inside this

1079
00:42:32,400 --> 00:42:34,319
trusted environment where no information

1080
00:42:34,319 --> 00:42:36,400
leaks outside from

1081
00:42:36,400 --> 00:42:38,160
then then you can you can basically

1082
00:42:38,160 --> 00:42:41,119
still do a lot of useful

1083
00:42:41,119 --> 00:42:43,040
services for the for the end user even

1084
00:42:43,040 --> 00:42:44,640
get some information that's relevant for

1085
00:42:44,640 --> 00:42:46,000
your business

1086
00:42:46,000 --> 00:42:49,280
but not leak the actual end users

1087
00:42:49,280 --> 00:42:52,720
private data next slide please

1088
00:42:54,720 --> 00:42:57,520
the potential downside is is that

1089
00:42:57,520 --> 00:42:59,119
you know in addition to this data

1090
00:42:59,119 --> 00:43:00,319
collection there's some other

1091
00:43:00,319 --> 00:43:03,440
operational practices or operational uh

1092
00:43:03,440 --> 00:43:05,920
impacts that get changed

1093
00:43:05,920 --> 00:43:08,160
so you know what about scaling what

1094
00:43:08,160 --> 00:43:10,079
about monitoring your systems what about

1095
00:43:10,079 --> 00:43:13,520
debugging what about adidas attacks

1096
00:43:13,520 --> 00:43:14,480
um

1097
00:43:14,480 --> 00:43:15,680
and these are actually difficult

1098
00:43:15,680 --> 00:43:18,000
questions i don't claim that we have

1099
00:43:18,000 --> 00:43:20,800
like clear answers to to all of this um

1100
00:43:20,800 --> 00:43:23,839
but we did find that you you you can

1101
00:43:23,839 --> 00:43:26,240
have some some ways to address this so

1102
00:43:26,240 --> 00:43:27,520
so for instance you can do some

1103
00:43:27,520 --> 00:43:29,119
reporting that is at the level of this

1104
00:43:29,119 --> 00:43:31,359
aggregate statistics that we know

1105
00:43:31,359 --> 00:43:33,440
how loaded is this instance you know

1106
00:43:33,440 --> 00:43:35,200
where are

1107
00:43:35,200 --> 00:43:38,160
you what is the you know top two

1108
00:43:38,160 --> 00:43:40,880
biggest sources of uh

1109
00:43:40,880 --> 00:43:41,760
uh

1110
00:43:41,760 --> 00:43:43,520
questions sent to this server what is

1111
00:43:43,520 --> 00:43:45,599
the you know top two questions or top

1112
00:43:45,599 --> 00:43:48,079
ten questions uh sent to this and

1113
00:43:48,079 --> 00:43:50,240
from those kinds of things you could um

1114
00:43:50,240 --> 00:43:51,760
determine

1115
00:43:51,760 --> 00:43:54,319
a lot of things both about scaling and

1116
00:43:54,319 --> 00:43:56,720
errors and

1117
00:43:56,720 --> 00:43:59,920
possible attacks that are ongoing

1118
00:43:59,920 --> 00:44:02,800
a pretty hard downside is perhaps

1119
00:44:02,800 --> 00:44:04,720
dependencies you'll be dependent on a

1120
00:44:04,720 --> 00:44:07,359
particular hardware not all cpus can do

1121
00:44:07,359 --> 00:44:09,040
this

1122
00:44:09,040 --> 00:44:10,240
um

1123
00:44:10,240 --> 00:44:11,680
so i was

1124
00:44:11,680 --> 00:44:13,680
or we were building um some of these

1125
00:44:13,680 --> 00:44:15,599
prototypes i realized that some of the

1126
00:44:15,599 --> 00:44:17,599
computers that i have in my basement can

1127
00:44:17,599 --> 00:44:20,800
do this but uh others cannot

1128
00:44:20,800 --> 00:44:22,640
um so i was maybe too cheap when i

1129
00:44:22,640 --> 00:44:24,960
bought the cpus but um so it does

1130
00:44:24,960 --> 00:44:27,119
require some some particular hardware or

1131
00:44:27,119 --> 00:44:28,880
us cpus

1132
00:44:28,880 --> 00:44:31,839
um you'll be dependent also on on these

1133
00:44:31,839 --> 00:44:34,079
manufacturers for verifying that this is

1134
00:44:34,079 --> 00:44:36,400
indeed their cpu

1135
00:44:36,400 --> 00:44:38,079
uh you might be dependent on somebody

1136
00:44:38,079 --> 00:44:40,400
who can actually check the software that

1137
00:44:40,400 --> 00:44:42,240
this is like a reasonable piece of

1138
00:44:42,240 --> 00:44:44,160
software and you know we looked at the

1139
00:44:44,160 --> 00:44:45,920
source code we were able to compile it

1140
00:44:45,920 --> 00:44:48,079
and get the same hash and

1141
00:44:48,079 --> 00:44:50,560
and it doesn't leak information

1142
00:44:50,560 --> 00:44:52,800
it could be a significant effort but

1143
00:44:52,800 --> 00:44:54,079
maybe there are

1144
00:44:54,079 --> 00:44:56,000
organizations in the world that could be

1145
00:44:56,000 --> 00:44:57,599
looking at this i don't know eff or

1146
00:44:57,599 --> 00:44:59,119
something like that or

1147
00:44:59,119 --> 00:45:01,119
let's encrypt

1148
00:45:01,119 --> 00:45:04,880
uh or could even provide such software

1149
00:45:04,880 --> 00:45:08,160
performance a common question uh

1150
00:45:08,160 --> 00:45:10,800
and here like the you know the

1151
00:45:10,800 --> 00:45:12,880
performance impact does does vary and

1152
00:45:12,880 --> 00:45:13,920
maybe there's other people on the

1153
00:45:13,920 --> 00:45:16,160
audience that know more actually

1154
00:45:16,160 --> 00:45:19,440
but we found that there's this typically

1155
00:45:19,440 --> 00:45:22,319
is an impact um but it can also be

1156
00:45:22,319 --> 00:45:23,520
fairly small

1157
00:45:23,520 --> 00:45:24,319
uh

1158
00:45:24,319 --> 00:45:26,400
one other set of people who've done this

1159
00:45:26,400 --> 00:45:27,359
um

1160
00:45:27,359 --> 00:45:31,839
in our draft as a reference to pdot

1161
00:45:31,839 --> 00:45:34,160
did a very similar thing to an existing

1162
00:45:34,160 --> 00:45:35,680
um

1163
00:45:35,680 --> 00:45:37,920
uh open source implementation i found

1164
00:45:37,920 --> 00:45:39,680
out that at least in some situations

1165
00:45:39,680 --> 00:45:41,200
they were able to get the same or even

1166
00:45:41,200 --> 00:45:42,800
better performance in the way that they

1167
00:45:42,800 --> 00:45:44,800
were using it but maybe that's a bit of

1168
00:45:44,800 --> 00:45:47,040
a special case i like to think of this

1169
00:45:47,040 --> 00:45:49,760
uh generally today with the

1170
00:45:49,760 --> 00:45:52,079
technology that's available right now

1171
00:45:52,079 --> 00:45:54,000
in the cpus typically have to do like

1172
00:45:54,000 --> 00:45:55,839
context switch between the trusted and

1173
00:45:55,839 --> 00:45:58,079
untrusted parts of the system and so so

1174
00:45:58,079 --> 00:46:00,000
basically for everything that you do you

1175
00:46:00,000 --> 00:46:01,760
add an extra

1176
00:46:01,760 --> 00:46:02,640
um

1177
00:46:02,640 --> 00:46:04,560
context switch and that's not the only

1178
00:46:04,560 --> 00:46:06,800
way to do things and you don't know i

1179
00:46:06,800 --> 00:46:09,040
have to do like context fix for every

1180
00:46:09,040 --> 00:46:10,960
every little step that you do in the in

1181
00:46:10,960 --> 00:46:12,560
the system but

1182
00:46:12,560 --> 00:46:15,680
but it can have an impact um so

1183
00:46:15,680 --> 00:46:17,359
getting

1184
00:46:17,359 --> 00:46:18,640
twice the

1185
00:46:18,640 --> 00:46:20,000
or

1186
00:46:20,000 --> 00:46:22,560
having to burn twice as much time or

1187
00:46:22,560 --> 00:46:25,040
half the performance is you know a

1188
00:46:25,040 --> 00:46:26,880
possible outcome in some some

1189
00:46:26,880 --> 00:46:29,440
configurations for instance

1190
00:46:29,440 --> 00:46:31,760
but it can also be negligible next slide

1191
00:46:31,760 --> 00:46:34,000
please

1192
00:46:35,920 --> 00:46:37,920
uh so basically

1193
00:46:37,920 --> 00:46:39,599
this is not a cure for all problems

1194
00:46:39,599 --> 00:46:41,280
obviously there's lots of attacks that

1195
00:46:41,280 --> 00:46:44,480
one can think of you all know about

1196
00:46:44,480 --> 00:46:48,000
various cpu problems and so on

1197
00:46:48,000 --> 00:46:50,880
but it is an additional hurdle that

1198
00:46:50,880 --> 00:46:53,119
you can you can get through

1199
00:46:53,119 --> 00:46:54,800
you know many kinds of security

1200
00:46:54,800 --> 00:46:57,200
technologies this is just yet another

1201
00:46:57,200 --> 00:46:58,160
one

1202
00:46:58,160 --> 00:46:59,920
but it's a pretty big hurdle to go

1203
00:46:59,920 --> 00:47:02,240
through if if you're sort of uh an

1204
00:47:02,240 --> 00:47:05,920
agency tries to get to get data um so

1205
00:47:05,920 --> 00:47:08,400
so we we think it it was useful at least

1206
00:47:08,400 --> 00:47:10,400
the way that we saw it

1207
00:47:10,400 --> 00:47:12,000
we also think this is orthogonal to many

1208
00:47:12,000 --> 00:47:14,079
other techniques i think we are out of

1209
00:47:14,079 --> 00:47:16,000
time so i don't want to read too much of

1210
00:47:16,000 --> 00:47:17,599
it just go to the next slide that's the

1211
00:47:17,599 --> 00:47:18,880
last one

1212
00:47:18,880 --> 00:47:22,079
conclusions um

1213
00:47:22,079 --> 00:47:24,160
uh oh yeah one more um so there's

1214
00:47:24,160 --> 00:47:26,240
obviously areas with you know active

1215
00:47:26,240 --> 00:47:27,760
development the hardware is actually

1216
00:47:27,760 --> 00:47:30,079
developing we expect that uh future

1217
00:47:30,079 --> 00:47:32,480
generations of hardware actually

1218
00:47:32,480 --> 00:47:34,480
have much less performance impact for

1219
00:47:34,480 --> 00:47:35,839
instance

1220
00:47:35,839 --> 00:47:37,839
there's obviously more research needed

1221
00:47:37,839 --> 00:47:39,920
on operational impacts and other aspects

1222
00:47:39,920 --> 00:47:42,240
of what's the best model and

1223
00:47:42,240 --> 00:47:46,319
deployment set up for for attestation

1224
00:47:46,319 --> 00:47:48,880
next slide

1225
00:47:49,520 --> 00:47:51,040
so conclusion

1226
00:47:51,040 --> 00:47:53,040
so the main conclusion is that we should

1227
00:47:53,040 --> 00:47:54,079
really

1228
00:47:54,079 --> 00:47:56,079
pay much more attention to the data

1229
00:47:56,079 --> 00:47:57,520
that's held by

1230
00:47:57,520 --> 00:47:59,440
servers and

1231
00:47:59,440 --> 00:48:01,200
think about you know how can we reduce

1232
00:48:01,200 --> 00:48:03,760
that data in various ways and how can we

1233
00:48:03,760 --> 00:48:05,760
protect that data like we do in this

1234
00:48:05,760 --> 00:48:07,200
particular work

1235
00:48:07,200 --> 00:48:09,119
we think it's crucial

1236
00:48:09,119 --> 00:48:10,640
um

1237
00:48:10,640 --> 00:48:12,720
maybe this technology is not like you

1238
00:48:12,720 --> 00:48:15,040
know prime time for super wide

1239
00:48:15,040 --> 00:48:17,280
deployment but we think it it's ready

1240
00:48:17,280 --> 00:48:18,319
for

1241
00:48:18,319 --> 00:48:21,200
some deployments it's clearly used by um

1242
00:48:21,200 --> 00:48:23,200
a lot of

1243
00:48:23,200 --> 00:48:26,240
systems out there today um

1244
00:48:26,240 --> 00:48:27,680
and um

1245
00:48:27,680 --> 00:48:30,640
yeah it's we think it's interesting even

1246
00:48:30,640 --> 00:48:31,760
though it does have some interesting

1247
00:48:31,760 --> 00:48:33,280
problems as well

1248
00:48:33,280 --> 00:48:35,359
be happy to hear people's thoughts on

1249
00:48:35,359 --> 00:48:37,440
this whether you think it's

1250
00:48:37,440 --> 00:48:40,000
science fiction or potentially feasible

1251
00:48:40,000 --> 00:48:41,920
or whether some things need to be taken

1252
00:48:41,920 --> 00:48:43,119
into account

1253
00:48:43,119 --> 00:48:46,280
thank you

1254
00:48:49,599 --> 00:48:51,200
you really only have time for me a

1255
00:48:51,200 --> 00:48:53,599
couple of questions so it's been again i

1256
00:48:53,599 --> 00:48:56,880
wouldn't mind being really brief oh uh

1257
00:48:56,880 --> 00:48:58,960
i think this stuff is very interesting

1258
00:48:58,960 --> 00:49:00,160
um

1259
00:49:00,160 --> 00:49:02,960
i i don't know how far we are from being

1260
00:49:02,960 --> 00:49:04,880
able to use it my question was just did

1261
00:49:04,880 --> 00:49:07,040
you use something like oblivious ram or

1262
00:49:07,040 --> 00:49:09,759
patho ram

1263
00:49:10,640 --> 00:49:12,240
um

1264
00:49:12,240 --> 00:49:14,880
i lost you there for for a bit but we i

1265
00:49:14,880 --> 00:49:16,319
i'm not aware of that particular

1266
00:49:16,319 --> 00:49:18,319
technique we used uh

1267
00:49:18,319 --> 00:49:20,800
for our particular um system we used

1268
00:49:20,800 --> 00:49:23,599
intel sgx and which has

1269
00:49:23,599 --> 00:49:26,559
so in general um if your

1270
00:49:26,559 --> 00:49:28,720
sgx encrypts all the contents of memory

1271
00:49:28,720 --> 00:49:30,720
but but a local adversary can still

1272
00:49:30,720 --> 00:49:32,880
observe all the memory access patterns

1273
00:49:32,880 --> 00:49:33,599
so

1274
00:49:33,599 --> 00:49:35,200
that actually makes it relatively easy

1275
00:49:35,200 --> 00:49:37,200
to identify which dns queries are being

1276
00:49:37,200 --> 00:49:39,119
performed you can you can see each query

1277
00:49:39,119 --> 00:49:41,200
hit the right spot in ram where that

1278
00:49:41,200 --> 00:49:42,880
data is stored

1279
00:49:42,880 --> 00:49:44,480
right yep

1280
00:49:44,480 --> 00:49:48,480
that that's that's one of the attacks

1281
00:49:49,280 --> 00:49:51,440
uh i was just wondering

1282
00:49:51,440 --> 00:49:53,280
yeah i was wondering do you have this up

1283
00:49:53,280 --> 00:49:54,720
where somebody can query it what's the

1284
00:49:54,720 --> 00:49:56,240
performance look like and do you think

1285
00:49:56,240 --> 00:49:57,920
that this would preclude any of the

1286
00:49:57,920 --> 00:50:00,079
other uh dns privacy work that's being

1287
00:50:00,079 --> 00:50:02,400
done at the ietf

1288
00:50:02,400 --> 00:50:04,960
no i i think this is definitely sort of

1289
00:50:04,960 --> 00:50:07,520
complementary so so if you do this it

1290
00:50:07,520 --> 00:50:09,359
doesn't mean that you don't need to do

1291
00:50:09,359 --> 00:50:11,839
encryption or or

1292
00:50:11,839 --> 00:50:14,160
oblivious uh or you know any of the

1293
00:50:14,160 --> 00:50:15,599
other things it just means that for for

1294
00:50:15,599 --> 00:50:17,040
the particular function that you're

1295
00:50:17,040 --> 00:50:19,920
doing you're protecting it better from

1296
00:50:19,920 --> 00:50:23,440
outside influence and and of course if

1297
00:50:23,440 --> 00:50:25,200
you know if you open up the computer and

1298
00:50:25,200 --> 00:50:27,440
look inside the cpu and have probes and

1299
00:50:27,440 --> 00:50:29,920
everything you can find some information

1300
00:50:29,920 --> 00:50:31,680
that you know you could even see inside

1301
00:50:31,680 --> 00:50:33,920
the cpu what's going on even if you

1302
00:50:33,920 --> 00:50:35,440
encrypt everything that comes out of the

1303
00:50:35,440 --> 00:50:37,359
cpu

1304
00:50:37,359 --> 00:50:39,040
and we don't currently have this up but

1305
00:50:39,040 --> 00:50:41,040
we've been sort of thinking about the

1306
00:50:41,040 --> 00:50:43,280
hackathon project where we could do some

1307
00:50:43,280 --> 00:50:45,040
testing

1308
00:50:45,040 --> 00:50:46,480
so we basically

1309
00:50:46,480 --> 00:50:48,640
do the standard protocols so we could we

1310
00:50:48,640 --> 00:50:50,960
could easily do some testing

1311
00:50:50,960 --> 00:50:52,400
it's not currently open source i'll

1312
00:50:52,400 --> 00:50:55,400
particularly

1313
00:51:00,559 --> 00:51:02,559
thanks for presenting this um i mean so

1314
00:51:02,559 --> 00:51:04,400
like i think you know there was like a

1315
00:51:04,400 --> 00:51:06,240
lot of enthusiasm about five years ago

1316
00:51:06,240 --> 00:51:07,920
for enclaves as sort of a replacement

1317
00:51:07,920 --> 00:51:09,200
for multi-party computation and things

1318
00:51:09,200 --> 00:51:11,119
like that um but the bad news doesn't

1319
00:51:11,119 --> 00:51:13,359
work and like i can just point you to

1320
00:51:13,359 --> 00:51:15,520
like a lot of papers of like people

1321
00:51:15,520 --> 00:51:18,960
breaking the sgx like from basically

1322
00:51:18,960 --> 00:51:20,079
from just like programs running the

1323
00:51:20,079 --> 00:51:21,520
machine you don't even need to watch our

1324
00:51:21,520 --> 00:51:23,599
microscope um you know uh getting

1325
00:51:23,599 --> 00:51:25,040
dignity has done quite a bit of work on

1326
00:51:25,040 --> 00:51:26,559
this and like it's not just like you've

1327
00:51:26,559 --> 00:51:28,160
got the data it's like extract the keys

1328
00:51:28,160 --> 00:51:30,800
and then go sign your own stuff um so

1329
00:51:30,800 --> 00:51:32,960
like in this generation of t simply is

1330
00:51:32,960 --> 00:51:34,480
not up to the challenge and this really

1331
00:51:34,480 --> 00:51:36,400
goes to the threat model which is that

1332
00:51:36,400 --> 00:51:38,160
the threat model here that like amazing

1333
00:51:38,160 --> 00:51:40,240
resign for was like i have like a phone

1334
00:51:40,240 --> 00:51:41,760
in my hand and they'd want me to stop

1335
00:51:41,760 --> 00:51:43,839
probably from stealing you know like

1336
00:51:43,839 --> 00:51:46,480
videos but the situation this is quite

1337
00:51:46,480 --> 00:51:48,880
different which is that this is like

1338
00:51:48,880 --> 00:51:50,240
running the data center of someone who's

1339
00:51:50,240 --> 00:51:51,280
by definition extraordinarily

1340
00:51:51,280 --> 00:51:53,040
sophisticated or able to run like a very

1341
00:51:53,040 --> 00:51:55,200
high production service and so like to

1342
00:51:55,200 --> 00:51:56,720
have the threat model be that those same

1343
00:51:56,720 --> 00:51:58,240
people like can't like call daniel

1344
00:51:58,240 --> 00:51:59,680
ginkin and learn how to extract the keys

1345
00:51:59,680 --> 00:52:02,240
for sgx like seems pretty impossible

1346
00:52:02,240 --> 00:52:03,520
so i think like until we get to the

1347
00:52:03,520 --> 00:52:04,480
point where like it's actually quite

1348
00:52:04,480 --> 00:52:05,760
hard to write down close i'm not quite

1349
00:52:05,760 --> 00:52:08,400
sure how this works

1350
00:52:08,400 --> 00:52:10,559
yeah i i think i mean there's no debate

1351
00:52:10,559 --> 00:52:12,640
that there there are no attacks there

1352
00:52:12,640 --> 00:52:15,680
clearly are attacks um lots of them um

1353
00:52:15,680 --> 00:52:18,559
but i think this is still a barrier for

1354
00:52:18,559 --> 00:52:21,119
people to do but i i i i'm not basically

1355
00:52:21,119 --> 00:52:23,359
disagreeing with you because we also are

1356
00:52:23,359 --> 00:52:25,200
waiting for the next generation

1357
00:52:25,200 --> 00:52:26,400
so

1358
00:52:26,400 --> 00:52:27,599
yeah i guess as i said i think it had to

1359
00:52:27,599 --> 00:52:29,040
be the case that like you needed like i

1360
00:52:29,040 --> 00:52:30,559
think i think your facebook possible to

1361
00:52:30,559 --> 00:52:32,000
be a case at least decapitate the chip

1362
00:52:32,000 --> 00:52:34,880
in order to get the keys

1363
00:52:35,359 --> 00:52:36,640
um because i think i guess the standard

1364
00:52:36,640 --> 00:52:37,920
is like basically the software attacks

1365
00:52:37,920 --> 00:52:39,359
it's just hard to understand why like

1366
00:52:39,359 --> 00:52:41,280
any any cheating resolver isn't going to

1367
00:52:41,280 --> 00:52:43,520
do it

1368
00:52:45,280 --> 00:52:48,079
okay i think we should move on to the

1369
00:52:48,079 --> 00:52:51,520
final presentation thanks gary for that

1370
00:52:51,520 --> 00:52:54,720
and matthew's up next

1371
00:52:54,720 --> 00:52:57,440
for an update to the ip address privacy

1372
00:52:57,440 --> 00:53:01,000
considerations draft

1373
00:53:01,920 --> 00:53:03,440
and

1374
00:53:03,440 --> 00:53:05,520
do you want to uh matthew you can just

1375
00:53:05,520 --> 00:53:08,000
control you should be able to

1376
00:53:08,000 --> 00:53:09,119
um

1377
00:53:09,119 --> 00:53:11,320
actually sorry you should be able to

1378
00:53:11,320 --> 00:53:13,599
[Music]

1379
00:53:13,599 --> 00:53:16,240
use the pre-pre-loaded slides unless

1380
00:53:16,240 --> 00:53:18,240
oh yeah especially on your screen that's

1381
00:53:18,240 --> 00:53:19,440
fine

1382
00:53:19,440 --> 00:53:21,680
okay

1383
00:53:26,079 --> 00:53:29,319
let's see

1384
00:53:30,720 --> 00:53:33,279
all right

1385
00:53:38,240 --> 00:53:39,920
sorry siobhan

1386
00:53:39,920 --> 00:53:42,720
should i load my slides yeah um you can

1387
00:53:42,720 --> 00:53:44,960
either ask for preload slides or you can

1388
00:53:44,960 --> 00:53:47,680
um just i guess requests

1389
00:53:47,680 --> 00:53:51,118
yeah uh preload slots are fine

1390
00:53:52,720 --> 00:53:54,480
i think uh you can ask for that

1391
00:53:54,480 --> 00:53:57,480
permission

1392
00:53:58,160 --> 00:53:59,760
there's a shared preload it's like yeah

1393
00:53:59,760 --> 00:54:00,880
there we go

1394
00:54:00,880 --> 00:54:02,800
um that's fine you can just share your

1395
00:54:02,800 --> 00:54:05,800
screen

1396
00:54:12,319 --> 00:54:14,558
okay

1397
00:54:14,720 --> 00:54:18,559
let's go hey uh hi everyone um i'm at uh

1398
00:54:18,559 --> 00:54:21,839
i think i work at tor

1399
00:54:22,079 --> 00:54:23,440
and

1400
00:54:23,440 --> 00:54:25,280
recently we started working on

1401
00:54:25,280 --> 00:54:27,599
a draft around epic privacy

1402
00:54:27,599 --> 00:54:30,960
considerations uh specifically

1403
00:54:30,960 --> 00:54:33,040
what what do we have to take into

1404
00:54:33,040 --> 00:54:36,319
account as we develop and deploy and

1405
00:54:36,319 --> 00:54:37,760
adopt

1406
00:54:37,760 --> 00:54:39,520
privacy within

1407
00:54:39,520 --> 00:54:42,160
applications

1408
00:54:42,240 --> 00:54:44,160
we recently published

1409
00:54:44,160 --> 00:54:46,640
an updated draft and

1410
00:54:46,640 --> 00:54:49,920
i encourage everyone to go look at

1411
00:54:50,839 --> 00:54:53,359
it all right so

1412
00:54:53,359 --> 00:54:55,359
where'd this come from this came from

1413
00:54:55,359 --> 00:54:58,319
uh or as a result of

1414
00:54:58,319 --> 00:54:59,040
the

1415
00:54:59,040 --> 00:55:01,760
ip privacy interim that

1416
00:55:01,760 --> 00:55:05,040
took place earlier this year

1417
00:55:05,599 --> 00:55:07,680
and coming out of that there was a

1418
00:55:07,680 --> 00:55:10,079
question about

1419
00:55:10,079 --> 00:55:12,319
you know how how ip addresses are used

1420
00:55:12,319 --> 00:55:17,040
and and and why ip privacy is such a

1421
00:55:17,040 --> 00:55:18,720
controversial and

1422
00:55:18,720 --> 00:55:19,760
um

1423
00:55:19,760 --> 00:55:21,839
and difficult

1424
00:55:21,839 --> 00:55:23,839
uh

1425
00:55:23,839 --> 00:55:25,680
topic in in

1426
00:55:25,680 --> 00:55:27,760
a lot of spaces and

1427
00:55:27,760 --> 00:55:31,200
ip reputation is a significant

1428
00:55:31,200 --> 00:55:33,760
use case and so

1429
00:55:33,760 --> 00:55:35,520
the draft itself started out by looking

1430
00:55:35,520 --> 00:55:39,359
at um at how to create a new reputation

1431
00:55:39,359 --> 00:55:41,920
system that could replace ib privacy

1432
00:55:41,920 --> 00:55:45,440
and admittedly this was ambitious

1433
00:55:45,920 --> 00:55:47,040
and

1434
00:55:47,040 --> 00:55:49,280
we'll actually get back to that because

1435
00:55:49,280 --> 00:55:51,839
it's actually not even one of the most

1436
00:55:51,839 --> 00:55:52,880
important

1437
00:55:52,880 --> 00:55:57,040
aspects of how ip dresses are used

1438
00:55:57,280 --> 00:55:59,680
and so

1439
00:56:00,160 --> 00:56:02,160
we're taking a step back and the draft

1440
00:56:02,160 --> 00:56:05,040
now takes more of a holistic view of ip

1441
00:56:05,040 --> 00:56:08,400
addresses and how they're used

1442
00:56:08,400 --> 00:56:10,720
and

1443
00:56:10,720 --> 00:56:12,079
um

1444
00:56:12,079 --> 00:56:12,880
we're

1445
00:56:12,880 --> 00:56:15,200
we're basically looking to categorize

1446
00:56:15,200 --> 00:56:18,079
the the different use cases and and the

1447
00:56:18,079 --> 00:56:20,400
different signals that platforms and

1448
00:56:20,400 --> 00:56:22,480
providers are currently

1449
00:56:22,480 --> 00:56:24,880
currently need or currently uh currently

1450
00:56:24,880 --> 00:56:27,280
are using for ipedosus and then we're

1451
00:56:27,280 --> 00:56:28,720
looking at sketching some replacement

1452
00:56:28,720 --> 00:56:31,359
signals for those ip addresses and this

1453
00:56:31,359 --> 00:56:34,799
is obviously an iterative process

1454
00:56:36,240 --> 00:56:37,839
and with that we're

1455
00:56:37,839 --> 00:56:39,280
we're just having conversations with

1456
00:56:39,280 --> 00:56:41,520
people from all sides so obviously

1457
00:56:41,520 --> 00:56:43,440
coming from the tour side

1458
00:56:43,440 --> 00:56:47,359
we only really see one aspect of this so

1459
00:56:47,359 --> 00:56:49,200
we've been having some

1460
00:56:49,200 --> 00:56:52,240
some very fruitful conversations with

1461
00:56:52,240 --> 00:56:55,200
platforms and other

1462
00:56:55,200 --> 00:56:59,078
other companies and other providers

1463
00:56:59,200 --> 00:57:01,280
and so the draft itself is very much a

1464
00:57:01,280 --> 00:57:03,920
work in progress

1465
00:57:05,520 --> 00:57:06,559
we

1466
00:57:06,559 --> 00:57:09,920
within this draft we added

1467
00:57:09,920 --> 00:57:13,200
a lot of new use cases

1468
00:57:13,200 --> 00:57:15,359
primarily around

1469
00:57:15,359 --> 00:57:18,079
anti-abuse and various

1470
00:57:18,079 --> 00:57:20,720
 use cases

1471
00:57:20,720 --> 00:57:22,720
there's also a new

1472
00:57:22,720 --> 00:57:24,839
description of

1473
00:57:24,839 --> 00:57:27,839
various uh iq address use cases and and

1474
00:57:27,839 --> 00:57:30,240
um restrictions within uh legislation

1475
00:57:30,240 --> 00:57:33,520
worldwide which is uh which is captured

1476
00:57:33,520 --> 00:57:35,280
and then we have some replacement

1477
00:57:35,280 --> 00:57:37,520
signals and we also started documenting

1478
00:57:37,520 --> 00:57:39,440
categories of interaction which

1479
00:57:39,440 --> 00:57:42,000
which provide an interesting motivation

1480
00:57:42,000 --> 00:57:43,839
for some of the signals

1481
00:57:43,839 --> 00:57:46,640
and again we

1482
00:57:46,640 --> 00:57:47,839
started getting rid of the reputation

1483
00:57:47,839 --> 00:57:50,000
system just because it's

1484
00:57:50,000 --> 00:57:54,680
it's more of a distraction right now

1485
00:57:55,359 --> 00:57:58,640
and then uh in terms of next steps we're

1486
00:57:58,640 --> 00:58:01,200
continuing to talk to different parties

1487
00:58:01,200 --> 00:58:03,760
we the draft itself is very

1488
00:58:03,760 --> 00:58:06,000
heavy on anti-abuse and we don't capture

1489
00:58:06,000 --> 00:58:07,520
a lot of the other use cases of ip

1490
00:58:07,520 --> 00:58:08,880
addresses

1491
00:58:08,880 --> 00:58:12,400
and so we're going to look for other

1492
00:58:12,400 --> 00:58:13,839
other people who are interested in

1493
00:58:13,839 --> 00:58:15,599
talking about how they use ip addresses

1494
00:58:15,599 --> 00:58:17,839
and what what blockers they see for

1495
00:58:17,839 --> 00:58:20,240
accepting

1496
00:58:20,240 --> 00:58:21,680
accepting clients

1497
00:58:21,680 --> 00:58:22,480
over

1498
00:58:22,480 --> 00:58:24,000
ip privacy

1499
00:58:24,000 --> 00:58:28,480
or over private ip connections

1500
00:58:28,480 --> 00:58:29,920
and through that we're going to iterate

1501
00:58:29,920 --> 00:58:32,880
on signals and the draft itself is

1502
00:58:32,880 --> 00:58:37,040
becoming quite long in uh

1503
00:58:37,040 --> 00:58:39,520
complicated so we'll probably look at

1504
00:58:39,520 --> 00:58:42,240
refactoring and making it easier to

1505
00:58:42,240 --> 00:58:43,920
comprehend

1506
00:58:43,920 --> 00:58:44,960
and

1507
00:58:44,960 --> 00:58:46,880
we're also going to look at and continue

1508
00:58:46,880 --> 00:58:48,640
to be involved with other

1509
00:58:48,640 --> 00:58:51,280
groups within the itf and w3c and then

1510
00:58:51,280 --> 00:58:53,200
various standards working groups there's

1511
00:58:53,200 --> 00:58:54,640
recently uh

1512
00:58:54,640 --> 00:58:56,960
anti-fraud community group launched at

1513
00:58:56,960 --> 00:58:59,119
the w3c that we're interested to see

1514
00:58:59,119 --> 00:59:01,599
what comes out of that

1515
00:59:01,599 --> 00:59:04,079
and then in terms of open questions uh

1516
00:59:04,079 --> 00:59:05,359
and issues

1517
00:59:05,359 --> 00:59:07,440
obviously going back to refactoring just

1518
00:59:07,440 --> 00:59:09,680
like what is the scope of this draft and

1519
00:59:09,680 --> 00:59:11,119
and

1520
00:59:11,119 --> 00:59:13,040
what what should be included

1521
00:59:13,040 --> 00:59:14,559
for the

1522
00:59:14,559 --> 00:59:18,960
within the purview of prg and

1523
00:59:18,960 --> 00:59:21,280
and just what's generally useful

1524
00:59:21,280 --> 00:59:24,240
um as an example of of open issues

1525
00:59:24,240 --> 00:59:26,400
there's a question of mandatory signals

1526
00:59:26,400 --> 00:59:28,160
this is obviously very contentious

1527
00:59:28,160 --> 00:59:29,839
because we're trying to get away from

1528
00:59:29,839 --> 00:59:32,880
mandatory signals with you know passive

1529
00:59:32,880 --> 00:59:35,200
uh passive semi-stable you know ip

1530
00:59:35,200 --> 00:59:36,400
addresses

1531
00:59:36,400 --> 00:59:38,640
but uh on the other hand

1532
00:59:38,640 --> 00:59:39,680
um

1533
00:59:39,680 --> 00:59:42,400
malicious behavior and just general bad

1534
00:59:42,400 --> 00:59:43,520
actors

1535
00:59:43,520 --> 00:59:46,640
take advantage of not having a mechanism

1536
00:59:46,640 --> 00:59:49,119
to re re-identify them

1537
00:59:49,119 --> 00:59:52,480
so that's uh and then they're just

1538
00:59:52,480 --> 00:59:55,040
general github issues

1539
00:59:55,040 --> 00:59:57,119
which go into some of those

1540
00:59:57,119 --> 00:59:59,119
issues and others

1541
00:59:59,119 --> 01:00:02,000
and that's uh that's my update so happy

1542
01:00:02,000 --> 01:00:05,200
to take any questions or

1543
01:00:05,440 --> 01:00:07,839
comments

1544
01:00:10,640 --> 01:00:12,400
uh yeah

1545
01:00:12,400 --> 01:00:14,559
i think we don't have any time

1546
01:00:14,559 --> 01:00:16,960
unfortunately for questions um well then

1547
01:00:16,960 --> 01:00:18,240
okay uh

1548
01:00:18,240 --> 01:00:19,760
thank you matt for all your work on this

1549
01:00:19,760 --> 01:00:22,000
draft as well as the others um

1550
01:00:22,000 --> 01:00:23,760
uh based on the the sort of interim

1551
01:00:23,760 --> 01:00:26,079
meeting that we had a while back um

1552
01:00:26,079 --> 01:00:27,680
and previous updates in this draft i

1553
01:00:27,680 --> 01:00:28,559
think

1554
01:00:28,559 --> 01:00:31,280
um uh we're likely going to seek

1555
01:00:31,280 --> 01:00:33,119
adoption by the group

1556
01:00:33,119 --> 01:00:35,920
um so if folks here

1557
01:00:35,920 --> 01:00:38,319
uh uh have not read it we've encouraged

1558
01:00:38,319 --> 01:00:40,559
you to read it um

1559
01:00:40,559 --> 01:00:41,280
and

1560
01:00:41,280 --> 01:00:43,119
we we should be following up on the list

1561
01:00:43,119 --> 01:00:44,000
uh

1562
01:00:44,000 --> 01:00:48,319
soon-ish to to start an adoption call

1563
01:00:49,440 --> 01:00:51,440
um

1564
01:00:51,440 --> 01:00:52,640
i don't know siobhan if you wanted that

1565
01:00:52,640 --> 01:00:54,720
anymore

1566
01:00:54,720 --> 01:00:57,119
no that's it okay great that sounds

1567
01:00:57,119 --> 01:00:58,240
great

1568
01:00:58,240 --> 01:01:00,880
all right folks um thanks for your time

1569
01:01:00,880 --> 01:01:02,160
um

1570
01:01:02,160 --> 01:01:05,359
and uh we'll see you on the list

1571
01:01:05,599 --> 01:01:06,799
thanks all

1572
01:01:06,799 --> 01:01:09,119
uh and thanks to our new takers uh and

1573
01:01:09,119 --> 01:01:13,319
watson yes

