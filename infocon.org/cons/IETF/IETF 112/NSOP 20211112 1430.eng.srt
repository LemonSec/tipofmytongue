1
00:00:05,279 --> 00:00:06,160
okay

2
00:00:06,160 --> 00:00:11,639
so sorry just a short dry run

3
00:00:20,480 --> 00:00:23,600
yeah seems to work tom thanks

4
00:00:23,600 --> 00:00:26,720
next slide tom

5
00:00:28,960 --> 00:00:31,840
yeah excellent

6
00:00:32,159 --> 00:00:33,680
[Music]

7
00:00:33,680 --> 00:00:36,680
okay

8
00:00:48,110 --> 00:00:51,219
[Music]

9
00:00:52,399 --> 00:00:54,480
so welcome

10
00:00:54,480 --> 00:00:56,239
do we give another minute

11
00:00:56,239 --> 00:00:59,239
co-chairs

12
00:00:59,440 --> 00:01:00,800
people are

13
00:01:00,800 --> 00:01:03,600
still joining

14
00:01:03,600 --> 00:01:05,199
cutting up all my windows so yeah

15
00:01:05,199 --> 00:01:09,798
another minute is a good thing okay

16
00:01:16,640 --> 00:01:18,080
it's for everyone

17
00:01:18,080 --> 00:01:20,560
this slide

18
00:01:20,560 --> 00:01:21,520
chopped

19
00:01:21,520 --> 00:01:23,280
one a quarter something like that

20
00:01:23,280 --> 00:01:27,360
because i atf 11

21
00:01:27,920 --> 00:01:31,920
yeah indeed okay november 202

22
00:01:31,920 --> 00:01:33,520
yeah that was yesterday but it's the

23
00:01:33,520 --> 00:01:35,040
same slide deck sorry it's the same

24
00:01:35,040 --> 00:01:37,119
slide yeah in my own

25
00:01:37,119 --> 00:01:40,799
my own view the slide disc is uh i did

26
00:01:40,799 --> 00:01:42,399
it was shown

27
00:01:42,399 --> 00:01:44,640
then i made my window bigger now it is

28
00:01:44,640 --> 00:01:46,640
better but it should

29
00:01:46,640 --> 00:01:49,439
resize probably it's a resize thing yeah

30
00:01:49,439 --> 00:01:52,000
it's a slide of yesterday but i will

31
00:01:52,000 --> 00:01:54,720
jump to slide 16 in a moment

32
00:01:54,720 --> 00:01:57,360
for session two yeah

33
00:01:57,360 --> 00:02:00,399
the same as yesterday only less

34
00:02:00,399 --> 00:02:02,240
exactly

35
00:02:02,240 --> 00:02:06,240
i think we can start with a good crowd

36
00:02:06,240 --> 00:02:08,318
welcome for the second session of

37
00:02:08,318 --> 00:02:10,479
dinosaur for today

38
00:02:10,479 --> 00:02:12,640
12 november

39
00:02:12,640 --> 00:02:14,800
um

40
00:02:14,800 --> 00:02:17,120
okay

41
00:02:17,200 --> 00:02:19,120
these are the dinosaur chairs

42
00:02:19,120 --> 00:02:22,720
myself tim vicinski suzanne wolff

43
00:02:22,720 --> 00:02:25,840
warren kurami is the area director

44
00:02:25,840 --> 00:02:27,599
jabaroom the same

45
00:02:27,599 --> 00:02:29,760
the minutes will be

46
00:02:29,760 --> 00:02:31,440
taken by paul

47
00:02:31,440 --> 00:02:34,080
paul will use his own will

48
00:02:34,080 --> 00:02:36,480
take minutes on his own laptop not using

49
00:02:36,480 --> 00:02:37,680
code him

50
00:02:37,680 --> 00:02:39,200
or it's now

51
00:02:39,200 --> 00:02:42,160
hedge doc i think called but please if

52
00:02:42,160 --> 00:02:44,560
you want to drop text

53
00:02:44,560 --> 00:02:48,080
use the url here shown codemd or

54
00:02:48,080 --> 00:02:50,720
hedgehog of notes it's today it's notes

55
00:02:50,720 --> 00:02:52,560
itf.org

56
00:02:52,560 --> 00:02:55,760
and we will integrate the notes

57
00:02:55,760 --> 00:02:57,680
the minutes

58
00:02:57,680 --> 00:02:59,760
okido we

59
00:02:59,760 --> 00:03:01,599
assume that you are familiar with the

60
00:03:01,599 --> 00:03:02,840
note

61
00:03:02,840 --> 00:03:04,959
well and

62
00:03:04,959 --> 00:03:06,319
also

63
00:03:06,319 --> 00:03:08,879
with the itf code of conduct the short

64
00:03:08,879 --> 00:03:11,599
version is be a nice person

65
00:03:11,599 --> 00:03:13,280
good

66
00:03:13,280 --> 00:03:17,599
any other things well yes

67
00:03:17,599 --> 00:03:19,760
agenda for sorry

68
00:03:19,760 --> 00:03:22,400
the agenda for today

69
00:03:22,400 --> 00:03:23,599
um

70
00:03:23,599 --> 00:03:27,200
this is we made a small change um we

71
00:03:27,200 --> 00:03:30,159
added with hardiker to the agenda for

72
00:03:30,159 --> 00:03:31,440
today

73
00:03:31,440 --> 00:03:33,599
after the discussions

74
00:03:33,599 --> 00:03:35,280
after the presentation there was quite

75
00:03:35,280 --> 00:03:37,519
some discussion on the in the job room

76
00:03:37,519 --> 00:03:39,040
on nsec 3

77
00:03:39,040 --> 00:03:41,040
parameter guidance

78
00:03:41,040 --> 00:03:43,920
and the chairs and wes luckily thought

79
00:03:43,920 --> 00:03:45,599
it was a good idea to continue this

80
00:03:45,599 --> 00:03:47,920
discussion also in this session

81
00:03:47,920 --> 00:03:49,680
so this is the

82
00:03:49,680 --> 00:03:52,080
agenda for today there's the

83
00:03:52,080 --> 00:03:53,439
oh sorry i

84
00:03:53,439 --> 00:03:55,840
mess up as a bit

85
00:03:55,840 --> 00:03:58,879
the ites are excuses itf hackathon

86
00:03:58,879 --> 00:04:00,480
results will be

87
00:04:00,480 --> 00:04:02,959
presented first by tom

88
00:04:02,959 --> 00:04:05,519
then dns catalog sounds by willem and

89
00:04:05,519 --> 00:04:08,000
then the guidance of for insect three

90
00:04:08,000 --> 00:04:09,519
parameters by wes

91
00:04:09,519 --> 00:04:11,120
and then there's the new

92
00:04:11,120 --> 00:04:13,439
draft by peter thomason

93
00:04:13,439 --> 00:04:17,360
automatic dinosac bootstrapping

94
00:04:17,600 --> 00:04:19,918
yeah let's go

95
00:04:19,918 --> 00:04:22,880
let's get started

96
00:04:23,759 --> 00:04:25,840
tom you can ask

97
00:04:25,840 --> 00:04:27,440
permission yeah

98
00:04:27,440 --> 00:04:29,040
i will

99
00:04:29,040 --> 00:04:31,040
give screen to you

100
00:04:31,040 --> 00:04:32,960
all right thank you can you hear me okay

101
00:04:32,960 --> 00:04:34,639
yes excellent

102
00:04:34,639 --> 00:04:37,040
perfect

103
00:04:37,130 --> 00:04:39,759
[Music]

104
00:04:39,759 --> 00:04:41,040
all right

105
00:04:41,040 --> 00:04:44,160
can everyone see the slides

106
00:04:44,800 --> 00:04:45,680
yes

107
00:04:45,680 --> 00:04:46,639
thank you

108
00:04:46,639 --> 00:04:49,199
even better thanks all right uh thanks

109
00:04:49,199 --> 00:04:50,639
i'll uh

110
00:04:50,639 --> 00:04:52,800
i will be presenting the

111
00:04:52,800 --> 00:04:54,160
hackathon

112
00:04:54,160 --> 00:04:55,280
results

113
00:04:55,280 --> 00:04:56,720
of the

114
00:04:56,720 --> 00:04:58,560
extended dns

115
00:04:58,560 --> 00:05:00,320
error response

116
00:05:00,320 --> 00:05:01,919
uh

117
00:05:01,919 --> 00:05:04,880
test that we did it's uh based on the uh

118
00:05:04,880 --> 00:05:07,360
the draft by uh

119
00:05:07,360 --> 00:05:11,039
roy schwarzenegger

120
00:05:11,120 --> 00:05:14,960
and it builds on extended dns errors

121
00:05:14,960 --> 00:05:16,479
um hence

122
00:05:16,479 --> 00:05:17,840
either

123
00:05:17,840 --> 00:05:20,479
that's how i will be calling it i i'm

124
00:05:20,479 --> 00:05:21,919
told roy

125
00:05:21,919 --> 00:05:24,080
the writer of the draft doesn't enjoy

126
00:05:24,080 --> 00:05:27,759
the abbreviation but uh for now it works

127
00:05:27,759 --> 00:05:29,039
um

128
00:05:29,039 --> 00:05:31,680
this was the topic of this the main

129
00:05:31,680 --> 00:05:33,360
topic of discussion even

130
00:05:33,360 --> 00:05:35,840
during the dns op interim meeting on the

131
00:05:35,840 --> 00:05:39,400
26th of october

132
00:05:39,600 --> 00:05:41,759
and there it was discussed that would be

133
00:05:41,759 --> 00:05:43,520
nice to have

134
00:05:43,520 --> 00:05:45,919
a measurement

135
00:05:45,919 --> 00:05:47,759
that a

136
00:05:47,759 --> 00:05:49,759
what would happen if a

137
00:05:49,759 --> 00:05:53,120
authoritative would send a

138
00:05:53,120 --> 00:05:58,000
unsolicited eds option to uh

139
00:05:58,160 --> 00:06:00,560
in response to a resolver

140
00:06:00,560 --> 00:06:01,759
so

141
00:06:01,759 --> 00:06:03,199
there was also an email about this on

142
00:06:03,199 --> 00:06:04,479
the mailing list

143
00:06:04,479 --> 00:06:07,039
so that's what we tried to do

144
00:06:07,039 --> 00:06:10,639
um for this we used uh ebbf the extended

145
00:06:10,639 --> 00:06:12,880
berkeley backed filter

146
00:06:12,880 --> 00:06:13,759
this is

147
00:06:13,759 --> 00:06:15,120
way beyond what

148
00:06:15,120 --> 00:06:16,960
maybe some of you know is it what was

149
00:06:16,960 --> 00:06:18,880
used for tcp dump

150
00:06:18,880 --> 00:06:21,199
it now runs in the inside of the linux

151
00:06:21,199 --> 00:06:24,160
kernel so it's a restricted uh

152
00:06:24,160 --> 00:06:26,800
subset of c is what was used

153
00:06:26,800 --> 00:06:29,759
um and with this you can create

154
00:06:29,759 --> 00:06:31,199
nice uh

155
00:06:31,199 --> 00:06:33,280
server uh name server agnostic or even

156
00:06:33,280 --> 00:06:34,800
resolver agnostic

157
00:06:34,800 --> 00:06:36,800
programs

158
00:06:36,800 --> 00:06:38,240
which you don't have to anticipate

159
00:06:38,240 --> 00:06:41,600
beforehand so it's just a drop-in if you

160
00:06:41,600 --> 00:06:42,639
will

161
00:06:42,639 --> 00:06:43,520
and

162
00:06:43,520 --> 00:06:46,639
here linked you see the

163
00:06:46,639 --> 00:06:48,880
place where we

164
00:06:48,880 --> 00:06:51,120
have a repository for the code so you

165
00:06:51,120 --> 00:06:54,720
can if you want to try it yourself

166
00:06:54,720 --> 00:06:55,759
uh

167
00:06:55,759 --> 00:06:57,360
trying yourself is actually really easy

168
00:06:57,360 --> 00:06:59,599
so you clone it

169
00:06:59,599 --> 00:07:00,840
initiate the sub

170
00:07:00,840 --> 00:07:02,720
module then

171
00:07:02,720 --> 00:07:06,240
load the program into the kernel

172
00:07:06,479 --> 00:07:08,560
what is omitted here is that you will

173
00:07:08,560 --> 00:07:10,080
need to have some

174
00:07:10,080 --> 00:07:13,840
dependencies but you know that's fine

175
00:07:14,080 --> 00:07:15,199
and then

176
00:07:15,199 --> 00:07:17,120
here we show that it actually works so

177
00:07:17,120 --> 00:07:18,479
the url we used here is

178
00:07:18,479 --> 00:07:20,479
report.intelnetlabs.com

179
00:07:20,479 --> 00:07:22,240
um

180
00:07:22,240 --> 00:07:24,160
as you can see here

181
00:07:24,160 --> 00:07:26,240
because th this is for those of you who

182
00:07:26,240 --> 00:07:30,880
like to look at code is uh how we

183
00:07:30,880 --> 00:07:33,120
can

184
00:07:33,520 --> 00:07:36,639
sorry how we can

185
00:07:37,120 --> 00:07:38,720
configure this program that's what i was

186
00:07:38,720 --> 00:07:40,720
looking for so we have a report domain

187
00:07:40,720 --> 00:07:42,840
which has said is a

188
00:07:42,840 --> 00:07:46,319
report.nlabs.nl then we chose

189
00:07:46,319 --> 00:07:48,879
the eater code

190
00:07:48,879 --> 00:07:51,599
as you see there it's it's the first one

191
00:07:51,599 --> 00:07:53,280
for the experimental ones and then we

192
00:07:53,280 --> 00:07:55,520
have a sampling rate this was also

193
00:07:55,520 --> 00:07:57,680
discussed during

194
00:07:57,680 --> 00:07:59,680
during the interim meeting that would

195
00:07:59,680 --> 00:08:01,919
maybe be nice currently we tested with

196
00:08:01,919 --> 00:08:04,159
100

197
00:08:04,560 --> 00:08:06,160
but maybe

198
00:08:06,160 --> 00:08:10,080
other other tests could be done without

199
00:08:10,080 --> 00:08:12,319
so for the measurements we used a ripe

200
00:08:12,319 --> 00:08:14,720
atlas for those of you don't know it

201
00:08:14,720 --> 00:08:17,840
it's uh a ripe ncc measurement platforms

202
00:08:17,840 --> 00:08:20,800
it has about 12 000 probes

203
00:08:20,800 --> 00:08:23,120
and these probes um

204
00:08:23,120 --> 00:08:24,879
you can you can ask them to do a lot of

205
00:08:24,879 --> 00:08:28,639
things for here we used use them to dns

206
00:08:28,639 --> 00:08:30,080
queries

207
00:08:30,080 --> 00:08:31,680
um

208
00:08:31,680 --> 00:08:34,399
we have we we asked them to do two

209
00:08:34,399 --> 00:08:35,760
either to our baseline measurements

210
00:08:35,760 --> 00:08:37,760
which was to neither dot uh

211
00:08:37,760 --> 00:08:40,240
anonymouslabs.nl which just got a

212
00:08:40,240 --> 00:08:41,440
response back

213
00:08:41,440 --> 00:08:42,719
and

214
00:08:42,719 --> 00:08:45,360
we also did a measurement to either dot

215
00:08:45,360 --> 00:08:47,519
and on the labs.nl

216
00:08:47,519 --> 00:08:48,399
which

217
00:08:48,399 --> 00:08:52,880
got back a unsolicited option

218
00:08:53,200 --> 00:08:54,880
um

219
00:08:54,880 --> 00:08:57,600
as you can see most probes participated

220
00:08:57,600 --> 00:09:00,560
and uh we used

221
00:09:00,560 --> 00:09:03,120
the python program to

222
00:09:03,120 --> 00:09:04,959
as you can see that we linked there

223
00:09:04,959 --> 00:09:07,519
to process the

224
00:09:07,519 --> 00:09:08,000
let results

225
00:09:08,000 --> 00:09:08,959
check

226
00:09:08,959 --> 00:09:12,800
yes i think of everything all right

227
00:09:13,200 --> 00:09:14,000
so

228
00:09:14,000 --> 00:09:16,959
what we learned well um

229
00:09:16,959 --> 00:09:19,680
about 0.5 percent so

230
00:09:19,680 --> 00:09:21,519
95

231
00:09:21,519 --> 00:09:24,160
resolvers

232
00:09:24,800 --> 00:09:27,040
get a baseline but don't

233
00:09:27,040 --> 00:09:28,399
accept the

234
00:09:28,399 --> 00:09:30,560
unsolicited message

235
00:09:30,560 --> 00:09:32,640
then you can see a lot of resolvers

236
00:09:32,640 --> 00:09:34,480
there this is mostly

237
00:09:34,480 --> 00:09:37,920
due to that um the right measurements uh

238
00:09:37,920 --> 00:09:40,320
right measurement probes

239
00:09:40,320 --> 00:09:41,839
uh

240
00:09:41,839 --> 00:09:43,279
have more than one resolver in their

241
00:09:43,279 --> 00:09:45,920
respective networks so

242
00:09:45,920 --> 00:09:49,360
roughly two less than two usually

243
00:09:49,360 --> 00:09:51,920
um and then uh

244
00:09:51,920 --> 00:09:53,600
the the funny part is on the right here

245
00:09:53,600 --> 00:09:56,080
you see is 73

246
00:09:56,080 --> 00:09:57,120
do

247
00:09:57,120 --> 00:09:58,560
they

248
00:09:58,560 --> 00:10:00,110
respond well to a uh

249
00:10:00,110 --> 00:10:01,279
[Music]

250
00:10:01,279 --> 00:10:04,320
an unsolicited

251
00:10:06,480 --> 00:10:07,839
dns option

252
00:10:07,839 --> 00:10:09,360
but don't

253
00:10:09,360 --> 00:10:13,200
uh respond to our baseline which

254
00:10:13,360 --> 00:10:15,360
we think may be due to

255
00:10:15,360 --> 00:10:16,839
just

256
00:10:16,839 --> 00:10:20,240
um our margin of error of the internet

257
00:10:20,240 --> 00:10:24,480
um but as we conclude here we

258
00:10:24,480 --> 00:10:27,360
oh sorry i see peter so

259
00:10:27,360 --> 00:10:30,079
peter uh the left circle means the

260
00:10:30,079 --> 00:10:32,560
baseline which

261
00:10:32,560 --> 00:10:33,519
most

262
00:10:33,519 --> 00:10:35,040
of the uh

263
00:10:35,040 --> 00:10:36,079
no

264
00:10:36,079 --> 00:10:38,560
yeah i said most of the resolvers got

265
00:10:38,560 --> 00:10:40,399
back

266
00:10:40,399 --> 00:10:42,480
so so that's fine so that's the baseline

267
00:10:42,480 --> 00:10:45,120
is good but then on the right you see

268
00:10:45,120 --> 00:10:48,640
the part that doesn't overlap that's

269
00:10:48,640 --> 00:10:52,640
responses uh that are

270
00:10:52,800 --> 00:10:55,920
only from the eater and not from both

271
00:10:55,920 --> 00:10:58,959
so so so in the middle there's there's

272
00:10:58,959 --> 00:11:00,640
positive to both and on the right

273
00:11:00,640 --> 00:11:04,240
there's just a positive response to

274
00:11:04,240 --> 00:11:06,240
just our test not the baseline which

275
00:11:06,240 --> 00:11:08,880
makes it weird

276
00:11:10,720 --> 00:11:11,600
okay

277
00:11:11,600 --> 00:11:15,560
if that's fine i'll continue

278
00:11:15,610 --> 00:11:19,570
[Music]

279
00:11:24,000 --> 00:11:25,040
i see

280
00:11:25,040 --> 00:11:27,120
ben schwartz

281
00:11:27,120 --> 00:11:28,720
that's the question i'll we'll get to

282
00:11:28,720 --> 00:11:30,720
those at the end i think

283
00:11:30,720 --> 00:11:31,519
um

284
00:11:31,519 --> 00:11:33,519
all right

285
00:11:33,519 --> 00:11:35,519
so um

286
00:11:35,519 --> 00:11:38,240
we'd like to

287
00:11:38,240 --> 00:11:40,480
answer the question would either the

288
00:11:40,480 --> 00:11:42,079
adoption of either give operators more

289
00:11:42,079 --> 00:11:45,120
confidence to dnsec deployment

290
00:11:45,120 --> 00:11:46,880
um

291
00:11:46,880 --> 00:11:49,920
we don't know for sure maybe not but

292
00:11:49,920 --> 00:11:52,560
we think there could be a missing piece

293
00:11:52,560 --> 00:11:54,240
and the missing piece could be something

294
00:11:54,240 --> 00:11:56,639
like a driver and dns sec

295
00:11:56,639 --> 00:11:57,680
so

296
00:11:57,680 --> 00:11:59,920
that would mean

297
00:11:59,920 --> 00:12:03,360
it would be something like dmarc maybe

298
00:12:03,360 --> 00:12:04,720
so you get the reporting without the

299
00:12:04,720 --> 00:12:05,920
failures

300
00:12:05,920 --> 00:12:07,600
and you could place

301
00:12:07,600 --> 00:12:09,680
a bit in

302
00:12:09,680 --> 00:12:12,800
a dns algorithm field uh or maybe

303
00:12:12,800 --> 00:12:14,480
somewhere else if other people have

304
00:12:14,480 --> 00:12:16,079
other ideas about this

305
00:12:16,079 --> 00:12:17,360
um

306
00:12:17,360 --> 00:12:19,200
so that you

307
00:12:19,200 --> 00:12:21,600
as i say get the failures without

308
00:12:21,600 --> 00:12:23,440
uh sorry get the reporting without

309
00:12:23,440 --> 00:12:24,880
getting the failures

310
00:12:24,880 --> 00:12:27,279
which would be

311
00:12:27,279 --> 00:12:28,880
maybe give operators more confidence to

312
00:12:28,880 --> 00:12:31,279
deploy it in a sec

313
00:12:31,279 --> 00:12:32,800
this would also allow for a quick

314
00:12:32,800 --> 00:12:34,320
rollback in case of

315
00:12:34,320 --> 00:12:36,639
any other failures really for example

316
00:12:36,639 --> 00:12:39,680
packets that are too large

317
00:12:39,680 --> 00:12:40,959
so that's been what

318
00:12:40,959 --> 00:12:42,959
that has been what we did

319
00:12:42,959 --> 00:12:46,079
we link again to the

320
00:12:46,079 --> 00:12:47,760
implementation

321
00:12:47,760 --> 00:12:50,000
and

322
00:12:50,399 --> 00:12:51,519
there could be an idea for a new

323
00:12:51,519 --> 00:12:53,760
document driver and dns sec and we would

324
00:12:53,760 --> 00:12:56,720
very much like your opinion

325
00:12:58,079 --> 00:13:00,880
thank you tom thank you very much

326
00:13:00,880 --> 00:13:02,399
i do see

327
00:13:02,399 --> 00:13:06,320
peter and ben on the queue peter peace

328
00:13:06,320 --> 00:13:09,200
hello can you go to slide 5 please

329
00:13:09,200 --> 00:13:11,600
of course

330
00:13:16,800 --> 00:13:18,560
next slide

331
00:13:18,560 --> 00:13:21,360
all right sorry

332
00:13:21,360 --> 00:13:22,560
one more

333
00:13:22,560 --> 00:13:25,279
one more sorry i counted actual slice

334
00:13:25,279 --> 00:13:27,200
not your numbering yeah

335
00:13:27,200 --> 00:13:28,480
in the

336
00:13:28,480 --> 00:13:30,560
edness response just above the question

337
00:13:30,560 --> 00:13:34,079
section there are two trading zeros is

338
00:13:34,079 --> 00:13:36,560
it yes or is the spec unclear about

339
00:13:36,560 --> 00:13:39,120
something no no it's a bug so if we go

340
00:13:39,120 --> 00:13:41,920
one further you see a um

341
00:13:41,920 --> 00:13:44,079
trailing zero in our reporting domain uh

342
00:13:44,079 --> 00:13:47,279
we suspect it's that

343
00:13:47,279 --> 00:13:50,000
sorry we we we suspect it's that that's

344
00:13:50,000 --> 00:13:52,240
a trailing error from us uh so sorry

345
00:13:52,240 --> 00:13:54,639
right okay so the spec is clear this

346
00:13:54,639 --> 00:13:56,560
it's a book

347
00:13:56,560 --> 00:14:00,359
thank you thank you

348
00:14:02,000 --> 00:14:03,279
okay

349
00:14:03,279 --> 00:14:06,800
okay ben please go ahead

350
00:14:07,040 --> 00:14:07,839
hi

351
00:14:07,839 --> 00:14:10,720
uh so i'm i'm just a little confused

352
00:14:10,720 --> 00:14:13,440
you're sending an unsolicited

353
00:14:13,440 --> 00:14:16,480
extension in the response

354
00:14:16,480 --> 00:14:19,040
correct why

355
00:14:19,040 --> 00:14:20,000
why

356
00:14:20,000 --> 00:14:24,079
this was discussed during the interview

357
00:14:24,079 --> 00:14:25,360
meeting

358
00:14:25,360 --> 00:14:27,040
okay

359
00:14:27,040 --> 00:14:29,839
that this would be better than the

360
00:14:29,839 --> 00:14:33,199
resolver asking for the reporting agent

361
00:14:33,199 --> 00:14:35,360
with the edns option

362
00:14:35,360 --> 00:14:36,480
because

363
00:14:36,480 --> 00:14:39,279
the this is also

364
00:14:39,279 --> 00:14:41,920
sent to the dinosaur mailing list by roy

365
00:14:41,920 --> 00:14:43,839
irons

366
00:14:43,839 --> 00:14:45,760
he said that

367
00:14:45,760 --> 00:14:48,639
authoritatives are more likely to

368
00:14:48,639 --> 00:14:51,440
not respond well to an edna's option

369
00:14:51,440 --> 00:14:53,839
that they do not know about

370
00:14:53,839 --> 00:14:55,040
than that

371
00:14:55,040 --> 00:14:57,360
resolvers are to

372
00:14:57,360 --> 00:15:01,360
getting a unsolicited edns option

373
00:15:01,360 --> 00:15:03,600
okay so it seems like the intention half

374
00:15:03,600 --> 00:15:06,000
of that

375
00:15:06,160 --> 00:15:07,839
it seems like this data provides half of

376
00:15:07,839 --> 00:15:09,519
the test we need for that right because

377
00:15:09,519 --> 00:15:10,880
the other half is

378
00:15:10,880 --> 00:15:13,199
is to run the the opposite test and send

379
00:15:13,199 --> 00:15:15,839
uh send a nonsense no sorry if the

380
00:15:15,839 --> 00:15:18,560
baseline measurement neither that does

381
00:15:18,560 --> 00:15:21,440
not provide the insulated option

382
00:15:21,440 --> 00:15:24,320
and either does provide the unlisted

383
00:15:24,320 --> 00:15:25,519
option

384
00:15:25,519 --> 00:15:27,839
right

385
00:15:27,839 --> 00:15:30,079
so strangely enough there are also

386
00:15:30,079 --> 00:15:32,240
responses which are

387
00:15:32,240 --> 00:15:35,120
received from resolvers that only send

388
00:15:35,120 --> 00:15:38,480
the elicit unsolicited option

389
00:15:38,480 --> 00:15:40,800
but you know i think that's just the

390
00:15:40,800 --> 00:15:42,480
when uh the

391
00:15:42,480 --> 00:15:45,519
error rate that you would normally get

392
00:15:45,519 --> 00:15:47,759
from any measurements

393
00:15:47,759 --> 00:15:49,600
so

394
00:15:49,600 --> 00:15:51,839
so i would have confused there too it

395
00:15:51,839 --> 00:15:54,000
seems like there are more clients that

396
00:15:54,000 --> 00:15:56,560
are unable to reach the eater endpoint

397
00:15:56,560 --> 00:15:58,560
than there are clients that are unable

398
00:15:58,560 --> 00:16:00,959
to reach the this right non-eater

399
00:16:00,959 --> 00:16:02,000
endpoint

400
00:16:02,000 --> 00:16:04,240
so that's correct a positive error rate

401
00:16:04,240 --> 00:16:06,959
right a positive impairment

402
00:16:06,959 --> 00:16:08,639
of accessibility

403
00:16:08,639 --> 00:16:09,759
yeah

404
00:16:09,759 --> 00:16:10,639
um

405
00:16:10,639 --> 00:16:12,880
so we we can't say that it's safe to do

406
00:16:12,880 --> 00:16:15,759
this you know in some absolute sense

407
00:16:15,759 --> 00:16:16,480
no

408
00:16:16,480 --> 00:16:20,160
that's true but it's only like 0.1

409
00:16:20,160 --> 00:16:23,279
percent or something if you calculate

410
00:16:23,279 --> 00:16:24,480
the uh

411
00:16:24,480 --> 00:16:27,199
the error rate which is already there

412
00:16:27,199 --> 00:16:29,839
but zero zero one percent sounds pretty

413
00:16:29,839 --> 00:16:31,040
high to me

414
00:16:31,040 --> 00:16:31,920
yes

415
00:16:31,920 --> 00:16:34,839
but therefore there's also the sampling

416
00:16:34,839 --> 00:16:38,079
rate right so you don't have to send the

417
00:16:38,079 --> 00:16:39,920
unsolicited option

418
00:16:39,920 --> 00:16:42,480
with every response it could also be

419
00:16:42,480 --> 00:16:45,199
like on five percent of the responses or

420
00:16:45,199 --> 00:16:47,599
something

421
00:16:48,000 --> 00:16:48,880
okay

422
00:16:48,880 --> 00:16:51,279
anyway

423
00:16:54,320 --> 00:16:56,160
that's also true in the in the client to

424
00:16:56,160 --> 00:16:58,240
authority in the resolver to authority

425
00:16:58,240 --> 00:17:01,199
direction the result the resolver could

426
00:17:01,199 --> 00:17:03,759
could tag only a a small percent of

427
00:17:03,759 --> 00:17:05,839
queries

428
00:17:05,839 --> 00:17:08,559
yes yes that's also

429
00:17:08,559 --> 00:17:11,679
indeed that would also address the uh

430
00:17:11,679 --> 00:17:14,799
the the case that not all authoritatives

431
00:17:14,799 --> 00:17:17,280
would respond well to unsolicited or

432
00:17:17,280 --> 00:17:20,959
unknown easiness options yes

433
00:17:21,599 --> 00:17:23,919
okay yeah so i would like to see

434
00:17:23,919 --> 00:17:25,520
see that tested too especially since

435
00:17:25,520 --> 00:17:27,839
it's uh as ray points out that behavior

436
00:17:27,839 --> 00:17:31,879
would be clearly out of spec

437
00:17:34,320 --> 00:17:36,960
thank you thank you for your feedback uh

438
00:17:36,960 --> 00:17:39,039
yeah i closed the queue i saw victor and

439
00:17:39,039 --> 00:17:41,120
peter also

440
00:17:41,120 --> 00:17:43,919
want to join the queue but given time we

441
00:17:43,919 --> 00:17:45,280
have to continue with the next

442
00:17:45,280 --> 00:17:47,039
presentation

443
00:17:47,039 --> 00:17:48,480
please continue the discussion on the

444
00:17:48,480 --> 00:17:50,320
mailing list and

445
00:17:50,320 --> 00:17:51,520
yeah

446
00:17:51,520 --> 00:17:54,320
any other any other means

447
00:17:54,320 --> 00:17:57,200
willem please so the next presentation

448
00:17:57,200 --> 00:17:58,840
is on catalog

449
00:17:58,840 --> 00:18:01,520
zones willem

450
00:18:01,520 --> 00:18:03,679
i'll give you

451
00:18:03,679 --> 00:18:04,880
permission

452
00:18:04,880 --> 00:18:06,320
okay

453
00:18:06,320 --> 00:18:08,559
okay

454
00:18:10,320 --> 00:18:11,520
yes so

455
00:18:11,520 --> 00:18:13,840
dennis catlock

456
00:18:13,840 --> 00:18:15,039
is a

457
00:18:15,039 --> 00:18:17,200
method for automatic dns zone

458
00:18:17,200 --> 00:18:18,720
provisioning

459
00:18:18,720 --> 00:18:20,880
among dns primary and secondary name

460
00:18:20,880 --> 00:18:23,840
servers by storing and transferring the

461
00:18:23,840 --> 00:18:24,880
catalog

462
00:18:24,880 --> 00:18:27,840
of zones to be provisioned as one or

463
00:18:27,840 --> 00:18:31,439
more regular dns zones

464
00:18:32,559 --> 00:18:34,000
so

465
00:18:34,000 --> 00:18:36,559
what does that look like on this slide

466
00:18:36,559 --> 00:18:38,480
there's example

467
00:18:38,480 --> 00:18:40,880
catalog zone so it's simply a list of

468
00:18:40,880 --> 00:18:44,400
zones listed in the catalog zone called

469
00:18:44,400 --> 00:18:47,120
member zones

470
00:18:48,000 --> 00:18:49,760
on the slide is an example showing what

471
00:18:49,760 --> 00:18:52,240
it looks like they are enumerated with

472
00:18:52,240 --> 00:18:55,039
uniquely valued labels in the zones

473
00:18:55,039 --> 00:18:57,600
section in the catalog zone as pointer

474
00:18:57,600 --> 00:18:59,039
records

475
00:18:59,039 --> 00:19:01,600
the example on slide uses the domain

476
00:19:01,600 --> 00:19:04,080
name catson but that name is actually

477
00:19:04,080 --> 00:19:06,640
free to be chosen

478
00:19:06,640 --> 00:19:09,039
one could consider something below a

479
00:19:09,039 --> 00:19:12,080
reserved tld for example such as infill

480
00:19:12,080 --> 00:19:13,360
it

481
00:19:13,360 --> 00:19:16,280
the picture shows a primary and its

482
00:19:16,280 --> 00:19:19,200
relationships with secondaries

483
00:19:19,200 --> 00:19:21,520
so the catalog zone cat zone is

484
00:19:21,520 --> 00:19:23,039
distributed

485
00:19:23,039 --> 00:19:24,960
along these relationships

486
00:19:24,960 --> 00:19:26,400
and from the catalog zone the

487
00:19:26,400 --> 00:19:28,000
secondaries learn

488
00:19:28,000 --> 00:19:30,480
that they should serve example.com

489
00:19:30,480 --> 00:19:34,840
example.net and example.org

490
00:19:36,720 --> 00:19:40,160
so what's new since version

491
00:19:40,160 --> 00:19:41,760
2

492
00:19:41,760 --> 00:19:45,360
we introduced the terms catalog producer

493
00:19:45,360 --> 00:19:47,520
and catalog consumer to describe

494
00:19:47,520 --> 00:19:50,559
everything more clearly in the draft

495
00:19:50,559 --> 00:19:53,280
producer generates the catalog zone and

496
00:19:53,280 --> 00:19:56,240
a consumer processes it

497
00:19:56,240 --> 00:19:58,480
produces and consumers

498
00:19:58,480 --> 00:20:00,559
do not necessarily

499
00:20:00,559 --> 00:20:01,679
align

500
00:20:01,679 --> 00:20:04,840
with the primary and secondary

501
00:20:04,840 --> 00:20:08,159
relationships for example in this

502
00:20:08,159 --> 00:20:10,159
slide

503
00:20:10,159 --> 00:20:11,840
you see that there's one machine

504
00:20:11,840 --> 00:20:13,039
producing

505
00:20:13,039 --> 00:20:14,880
two catalog zones

506
00:20:14,880 --> 00:20:17,600
for one the blue one the producer is

507
00:20:17,600 --> 00:20:19,200
also the primary

508
00:20:19,200 --> 00:20:21,520
and the consumers are the secondaries

509
00:20:21,520 --> 00:20:23,280
and the other catalog

510
00:20:23,280 --> 00:20:25,039
the green one

511
00:20:25,039 --> 00:20:27,679
is generated by the same producer

512
00:20:27,679 --> 00:20:30,559
but the primary is not a producer

513
00:20:30,559 --> 00:20:33,760
so other sets of configurations are

514
00:20:33,760 --> 00:20:36,240
possible

515
00:20:38,559 --> 00:20:42,080
it's nice that we have four authors of

516
00:20:42,080 --> 00:20:45,039
open source name server implementations

517
00:20:45,039 --> 00:20:46,640
working on this task

518
00:20:46,640 --> 00:20:48,640
and discussing the dwarf

519
00:20:48,640 --> 00:20:51,919
because the resulted

520
00:20:51,919 --> 00:20:54,159
this this resulted i think in the most

521
00:20:54,159 --> 00:20:57,039
permissive and generate way to handle

522
00:20:57,039 --> 00:20:59,440
and implement catalog terms

523
00:20:59,440 --> 00:21:03,000
for example we no longer have text on

524
00:21:03,000 --> 00:21:06,320
optimizations that are consequence of

525
00:21:06,320 --> 00:21:09,600
predictable rnas

526
00:21:13,039 --> 00:21:15,440
the organization of the current draft

527
00:21:15,440 --> 00:21:17,440
has been geared towards

528
00:21:17,440 --> 00:21:20,000
describing what the catalog zones looks

529
00:21:20,000 --> 00:21:21,120
like

530
00:21:21,120 --> 00:21:23,280
what the basic operations are and how

531
00:21:23,280 --> 00:21:25,200
they work

532
00:21:25,200 --> 00:21:27,840
adding a zone removing his own migrating

533
00:21:27,840 --> 00:21:30,960
his own zone state reset

534
00:21:30,960 --> 00:21:33,600
and how catalog consumers

535
00:21:33,600 --> 00:21:36,640
should deal with occurs such as

536
00:21:36,640 --> 00:21:39,520
member name clashes and member node name

537
00:21:39,520 --> 00:21:42,520
changes

538
00:21:44,400 --> 00:21:47,280
memozones can have properties

539
00:21:47,280 --> 00:21:50,960
version 4 of the draft has more uniform

540
00:21:50,960 --> 00:21:53,039
and consistent description of how

541
00:21:53,039 --> 00:21:55,520
properties may be defined

542
00:21:55,520 --> 00:21:57,600
properties from standard documents are

543
00:21:57,600 --> 00:22:01,039
always one label below the zone member

544
00:22:01,039 --> 00:22:03,520
we described three such properties in

545
00:22:03,520 --> 00:22:06,480
the draft which are optional and i will

546
00:22:06,480 --> 00:22:08,320
go over them quickly in the coming

547
00:22:08,320 --> 00:22:09,760
slides

548
00:22:09,760 --> 00:22:12,720
implementations or operators of catalog

549
00:22:12,720 --> 00:22:15,280
zones may also define their own

550
00:22:15,280 --> 00:22:16,880
properties

551
00:22:16,880 --> 00:22:19,919
below the lamp label xt

552
00:22:19,919 --> 00:22:23,280
which is itself one label below the zone

553
00:22:23,280 --> 00:22:26,840
member name

554
00:22:28,000 --> 00:22:30,880
a property described in the draft is the

555
00:22:30,880 --> 00:22:34,880
coup property c-o-o or from the change

556
00:22:34,880 --> 00:22:36,400
of ownership

557
00:22:36,400 --> 00:22:38,320
and it allows

558
00:22:38,320 --> 00:22:41,200
for controlled migration of

559
00:22:41,200 --> 00:22:43,360
a member zone from one

560
00:22:43,360 --> 00:22:45,919
lock to another

561
00:22:45,919 --> 00:22:47,039
and

562
00:22:47,039 --> 00:22:48,960
in the example

563
00:22:48,960 --> 00:22:52,640
uh you see that the coup property of the

564
00:22:52,640 --> 00:22:58,400
catalog zone catzone signals that it's

565
00:22:59,600 --> 00:23:02,320
will be migrated its member

566
00:23:02,320 --> 00:23:04,480
example.com will be migrated to the

567
00:23:04,480 --> 00:23:06,880
catalog other cat zone

568
00:23:06,880 --> 00:23:09,120
so the consumer has the member name

569
00:23:09,120 --> 00:23:12,880
catzone of in catzone this is the unique

570
00:23:12,880 --> 00:23:15,919
id a so to say associated with

571
00:23:15,919 --> 00:23:17,520
example.com

572
00:23:17,520 --> 00:23:20,240
the zone is then not migrated yet but

573
00:23:20,240 --> 00:23:22,720
after the consumer receives an update

574
00:23:22,720 --> 00:23:26,240
that adds example.com as a new member

575
00:23:26,240 --> 00:23:27,840
of autocad sound

576
00:23:27,840 --> 00:23:30,640
it knows that example.com came from

577
00:23:30,640 --> 00:23:32,240
catalog catzone

578
00:23:32,240 --> 00:23:34,480
it knows the associated member name

579
00:23:34,480 --> 00:23:37,600
unique id a so it can look up the coup

580
00:23:37,600 --> 00:23:40,159
property and see that the migration has

581
00:23:40,159 --> 00:23:42,159
the catalog

582
00:23:42,159 --> 00:23:43,600
catson's

583
00:23:43,600 --> 00:23:46,080
consent

584
00:23:46,640 --> 00:23:49,640
that's

585
00:23:50,080 --> 00:23:52,240
so the the whole operation can be

586
00:23:52,240 --> 00:23:55,279
performed rather stateless which is nice

587
00:23:55,279 --> 00:23:59,520
this is actually how uh the power adenos

588
00:23:59,520 --> 00:24:02,480
implementation handles uh catalog zone

589
00:24:02,480 --> 00:24:05,480
migration

590
00:24:06,640 --> 00:24:08,159
so

591
00:24:08,159 --> 00:24:09,440
if if the

592
00:24:09,440 --> 00:24:13,279
member zone name in the new catalog is

593
00:24:13,279 --> 00:24:14,720
different from

594
00:24:14,720 --> 00:24:17,840
the old catalog then the zone associated

595
00:24:17,840 --> 00:24:20,000
states such as certain data and the

596
00:24:20,000 --> 00:24:22,000
essec keys and whatnot

597
00:24:22,000 --> 00:24:23,679
is reset

598
00:24:23,679 --> 00:24:26,400
if it remains the same that then it's

599
00:24:26,400 --> 00:24:29,840
migrated to the new owner as well

600
00:24:29,840 --> 00:24:32,960
so note that the old owner has control

601
00:24:32,960 --> 00:24:34,559
whether or not

602
00:24:34,559 --> 00:24:37,279
the new owner will receive this state

603
00:24:37,279 --> 00:24:40,240
because it can add

604
00:24:40,240 --> 00:24:42,880
the coup property and

605
00:24:42,880 --> 00:24:47,840
change the member name at the same time

606
00:24:48,640 --> 00:24:50,480
instead of having one set of

607
00:24:50,480 --> 00:24:53,600
configuration per catalog zone

608
00:24:53,600 --> 00:24:55,919
the group property which is also defined

609
00:24:55,919 --> 00:24:57,440
in the draft

610
00:24:57,440 --> 00:24:59,360
allows to have more different sets of

611
00:24:59,360 --> 00:25:02,480
configuration in a single catalog

612
00:25:02,480 --> 00:25:05,360
in the example on the slide example.com

613
00:25:05,360 --> 00:25:07,919
is configured to be signaled to be

614
00:25:07,919 --> 00:25:10,400
signed with insect3

615
00:25:10,400 --> 00:25:11,159
and

616
00:25:11,159 --> 00:25:13,840
example.net is configured to not be

617
00:25:13,840 --> 00:25:16,880
proficient with dnsec

618
00:25:16,880 --> 00:25:19,120
this allows for atomic change of

619
00:25:19,120 --> 00:25:21,600
configuration of member zones

620
00:25:21,600 --> 00:25:23,440
and it fits well with

621
00:25:23,440 --> 00:25:24,640
not

622
00:25:24,640 --> 00:25:27,679
concept or not dns concept of templates

623
00:25:27,679 --> 00:25:30,480
and also nsd's

624
00:25:30,480 --> 00:25:33,120
patterns

625
00:25:34,159 --> 00:25:36,320
then we have another property the serial

626
00:25:36,320 --> 00:25:38,720
property

627
00:25:38,799 --> 00:25:40,400
is not

628
00:25:40,400 --> 00:25:41,679
the the

629
00:25:41,679 --> 00:25:43,840
uh are not synced in

630
00:25:43,840 --> 00:25:44,559
oh

631
00:25:44,559 --> 00:25:47,520
with me talking yeah that's that's true

632
00:25:47,520 --> 00:25:50,400
it's so easy about that so i have notes

633
00:25:50,400 --> 00:25:51,440
as well

634
00:25:51,440 --> 00:25:53,279
okay

635
00:25:53,279 --> 00:25:55,200
yeah so this was the group property by

636
00:25:55,200 --> 00:25:57,600
the way so it's you know the atomic

637
00:25:57,600 --> 00:25:58,640
config

638
00:25:58,640 --> 00:25:59,760
well

639
00:25:59,760 --> 00:26:04,080
what i just said the serial property

640
00:26:05,840 --> 00:26:06,880
is

641
00:26:06,880 --> 00:26:09,840
another property defined in the draft

642
00:26:09,840 --> 00:26:13,200
its intention is to increase reliability

643
00:26:13,200 --> 00:26:15,679
of certain updates because you know if

644
00:26:15,679 --> 00:26:17,919
you have a large number of secondaries

645
00:26:17,919 --> 00:26:19,679
and a large number of sounds

646
00:26:19,679 --> 00:26:22,559
notifiers might get lost

647
00:26:22,559 --> 00:26:25,279
on the internet or secondaries might be

648
00:26:25,279 --> 00:26:26,240
down

649
00:26:26,240 --> 00:26:28,720
and not receiving the notifies

650
00:26:28,720 --> 00:26:31,440
and it's also the intentions also to

651
00:26:31,440 --> 00:26:34,320
reduce the notify and sarah query

652
00:26:34,320 --> 00:26:35,600
traffic

653
00:26:35,600 --> 00:26:37,919
if you have lots of secondaries and lots

654
00:26:37,919 --> 00:26:41,170
of zones so how does that work

655
00:26:41,170 --> 00:26:44,489
[Music]

656
00:26:44,559 --> 00:26:46,080
well

657
00:26:46,080 --> 00:26:47,120
so

658
00:26:47,120 --> 00:26:49,919
the serial number of the member zone

659
00:26:49,919 --> 00:26:53,200
shower record is in the

660
00:26:53,200 --> 00:26:56,320
serial property of that zone

661
00:26:56,320 --> 00:26:57,600
then

662
00:26:57,600 --> 00:26:58,400
if

663
00:26:58,400 --> 00:27:00,720
there is a update of the catalog zone

664
00:27:00,720 --> 00:27:02,799
with a new serial number

665
00:27:02,799 --> 00:27:06,320
the the consumer

666
00:27:06,320 --> 00:27:07,840
which

667
00:27:07,840 --> 00:27:09,679
might be a secondary

668
00:27:09,679 --> 00:27:10,960
can then

669
00:27:10,960 --> 00:27:14,240
fetch the zone because it knows that it

670
00:27:14,240 --> 00:27:16,559
has a different solar number than what

671
00:27:16,559 --> 00:27:19,200
it's already serving

672
00:27:19,200 --> 00:27:22,880
uh no netify is then needed

673
00:27:22,880 --> 00:27:27,520
also if the catalog zone is fresh

674
00:27:27,520 --> 00:27:31,760
and then it may clear the refresh timers

675
00:27:31,760 --> 00:27:32,880
for the

676
00:27:32,880 --> 00:27:35,760
member sounds

677
00:27:37,039 --> 00:27:40,399
so this property is optimization built

678
00:27:40,399 --> 00:27:42,720
built upon catalog zones and it's not

679
00:27:42,720 --> 00:27:44,880
dealing with the catalog itself so that

680
00:27:44,880 --> 00:27:46,480
might be a reason

681
00:27:46,480 --> 00:27:48,640
to not have it in this document and to

682
00:27:48,640 --> 00:27:50,480
split it off to

683
00:27:50,480 --> 00:27:53,039
a draft building upon godzilla zones i

684
00:27:53,039 --> 00:27:55,039
don't know i leave that up to their work

685
00:27:55,039 --> 00:27:57,279
group

686
00:27:58,399 --> 00:27:59,760
we also

687
00:27:59,760 --> 00:28:03,279
updated the security section it now

688
00:28:03,279 --> 00:28:06,480
makes very clear that the administrative

689
00:28:06,480 --> 00:28:09,360
control over what zones are served from

690
00:28:09,360 --> 00:28:11,440
the configured name servers

691
00:28:11,440 --> 00:28:12,640
shifts

692
00:28:12,640 --> 00:28:15,279
from the server operator or the consumer

693
00:28:15,279 --> 00:28:16,399
of the catalog

694
00:28:16,399 --> 00:28:19,520
to the owner the producer of the catalog

695
00:28:19,520 --> 00:28:21,200
zone content

696
00:28:21,200 --> 00:28:22,799
and we have a

697
00:28:22,799 --> 00:28:24,320
other edit

698
00:28:24,320 --> 00:28:27,760
peter thomason he contributed text and

699
00:28:27,760 --> 00:28:30,159
ids and did a lot of work on this

700
00:28:30,159 --> 00:28:34,240
kitchen so he's a arthur nato

701
00:28:34,880 --> 00:28:36,480
so

702
00:28:36,480 --> 00:28:39,360
this version of the draft is the result

703
00:28:39,360 --> 00:28:40,000
of

704
00:28:40,000 --> 00:28:42,559
thorough review and discussion with the

705
00:28:42,559 --> 00:28:44,320
goal of getting it in shape for

706
00:28:44,320 --> 00:28:47,520
publication as rfc

707
00:28:47,520 --> 00:28:48,559
it has

708
00:28:48,559 --> 00:28:51,200
catalog zones specified to the best of

709
00:28:51,200 --> 00:28:54,399
our ability and we request you to review

710
00:28:54,399 --> 00:28:57,120
it thoroughly with the documents witness

711
00:28:57,120 --> 00:29:01,360
for working group lost guymind

712
00:29:02,480 --> 00:29:04,240
and that's it you can now answer

713
00:29:04,240 --> 00:29:06,000
questions

714
00:29:06,000 --> 00:29:07,440
thank you willem

715
00:29:07,440 --> 00:29:11,200
i see peter peter van dyke in the queue

716
00:29:11,200 --> 00:29:12,799
well not actually a question more of a

717
00:29:12,799 --> 00:29:16,559
comment wes do you want to go first

718
00:29:18,320 --> 00:29:20,799
go ahead

719
00:29:24,799 --> 00:29:26,000
i actually said no you should go ahead

720
00:29:26,000 --> 00:29:27,600
well actually let me i do have a

721
00:29:27,600 --> 00:29:29,120
clarifying question so in your example

722
00:29:29,120 --> 00:29:30,799
slides you used

723
00:29:30,799 --> 00:29:33,919
uh real looking tlds at the end of your

724
00:29:33,919 --> 00:29:36,399
of your zone and in the document you use

725
00:29:36,399 --> 00:29:38,000
dollar cat z

726
00:29:38,000 --> 00:29:39,840
uh one of the things i worry about is

727
00:29:39,840 --> 00:29:42,880
these will leak because

728
00:29:42,880 --> 00:29:45,039
it's the dns and everything leaks

729
00:29:45,039 --> 00:29:47,039
and so what are you actually thinking

730
00:29:47,039 --> 00:29:49,440
for naming records on the left-hand side

731
00:29:49,440 --> 00:29:52,840
of your records with respect to

732
00:29:52,840 --> 00:29:57,120
that so are you worried about uh the the

733
00:29:57,120 --> 00:29:59,440
the cat sound tld that he used in the

734
00:29:59,440 --> 00:30:02,240
examples on the slides

735
00:30:02,240 --> 00:30:04,080
right so in your in your slide examples

736
00:30:04,080 --> 00:30:06,480
you didn't have dollar cat z is no

737
00:30:06,480 --> 00:30:08,880
that's right

738
00:30:08,880 --> 00:30:12,000
i wanted to use uh actual real looking

739
00:30:12,000 --> 00:30:15,520
examples but that's actually right

740
00:30:15,600 --> 00:30:17,520
yeah right with real looking examples

741
00:30:17,520 --> 00:30:20,080
i'd be very tempted to require something

742
00:30:20,080 --> 00:30:22,159
under like dot arpa or something like

743
00:30:22,159 --> 00:30:23,520
that that we can

744
00:30:23,520 --> 00:30:25,360
you know black hole or something because

745
00:30:25,360 --> 00:30:26,320
uh

746
00:30:26,320 --> 00:30:28,399
you you will end up leaking a new tld

747
00:30:28,399 --> 00:30:30,720
and that would be yeah i agree or dot

748
00:30:30,720 --> 00:30:34,399
infill it or something yeah

749
00:30:35,360 --> 00:30:38,479
i'll update the slides

750
00:30:39,120 --> 00:30:41,279
how about recommending that people use

751
00:30:41,279 --> 00:30:45,600
names they own for their catalog zones

752
00:30:47,600 --> 00:30:50,240
yeah or maybe both you know we could

753
00:30:50,240 --> 00:30:52,799
have a recommendation saying

754
00:30:52,799 --> 00:30:56,000
you either have to own the the the name

755
00:30:56,000 --> 00:30:59,200
of your uh catalogue or use a reserve

756
00:30:59,200 --> 00:31:00,960
top-level domain

757
00:31:00,960 --> 00:31:05,200
yeah so something like that

758
00:31:05,200 --> 00:31:07,600
sounds good

759
00:31:07,600 --> 00:31:10,399
hi um paul speaking um i just wanted to

760
00:31:10,399 --> 00:31:11,840
say that i'm

761
00:31:11,840 --> 00:31:13,519
initially i was really skeptical about

762
00:31:13,519 --> 00:31:15,840
catalog zones and being too much of a oh

763
00:31:15,840 --> 00:31:17,919
you know put configurations into the dns

764
00:31:17,919 --> 00:31:20,720
thing because we're dns people view

765
00:31:20,720 --> 00:31:21,600
um

766
00:31:21,600 --> 00:31:24,000
but since then i have started deploying

767
00:31:24,000 --> 00:31:26,240
this and i'm really super happy with it

768
00:31:26,240 --> 00:31:29,760
um i can you know run different

769
00:31:29,760 --> 00:31:32,559
different vendor dns software without

770
00:31:32,559 --> 00:31:34,559
having to muck with configuration files

771
00:31:34,559 --> 00:31:36,799
and different syntaxes and i think this

772
00:31:36,799 --> 00:31:39,600
will really help diversify name server

773
00:31:39,600 --> 00:31:41,200
space where people can easily run

774
00:31:41,200 --> 00:31:43,120
multiple name servers so i just want to

775
00:31:43,120 --> 00:31:47,760
say kudos go on make it better

776
00:31:47,760 --> 00:31:50,080
thanks

777
00:31:53,120 --> 00:31:56,480
victor please go ahead i didn't see

778
00:31:56,480 --> 00:31:58,640
i didn't see a discussion of the sort of

779
00:31:58,640 --> 00:32:01,919
security of the transport stuff how do

780
00:32:01,919 --> 00:32:05,440
we know the catalog zone

781
00:32:06,640 --> 00:32:09,039
that is in the draft i didn't put it on

782
00:32:09,039 --> 00:32:10,480
a slide

783
00:32:10,480 --> 00:32:12,640
but it is in the it was already in the

784
00:32:12,640 --> 00:32:14,399
draft for a long time

785
00:32:14,399 --> 00:32:16,720
so we recommend to use

786
00:32:16,720 --> 00:32:18,960
private transport

787
00:32:18,960 --> 00:32:20,320
like a

788
00:32:20,320 --> 00:32:23,360
transfer over tls

789
00:32:23,360 --> 00:32:26,720
and also use our dedicated channel

790
00:32:26,720 --> 00:32:29,600
with t-seg or otherwise

791
00:32:29,600 --> 00:32:31,279
all right have you considered signing

792
00:32:31,279 --> 00:32:33,440
these zones because one could imagine

793
00:32:33,440 --> 00:32:35,279
putting a trust anchor right on the

794
00:32:35,279 --> 00:32:37,679
receiving side for these zones and then

795
00:32:37,679 --> 00:32:39,919
validating content signatures and all

796
00:32:39,919 --> 00:32:41,679
kinds of stuff is that reasonable or is

797
00:32:41,679 --> 00:32:44,320
that crazy

798
00:32:47,919 --> 00:32:50,960
i i don't know

799
00:32:51,440 --> 00:32:53,519
uh yeah yeah

800
00:32:53,519 --> 00:32:55,039
or maybe if you're

801
00:32:55,039 --> 00:32:57,360
mv or something yeah

802
00:32:57,360 --> 00:32:58,720
then you could have hierarchical

803
00:32:58,720 --> 00:33:00,080
distribution because you can trust it

804
00:33:00,080 --> 00:33:02,159
from the origin i don't know if that's a

805
00:33:02,159 --> 00:33:05,200
useful idea or not but anyway i don't

806
00:33:05,200 --> 00:33:07,840
know but it's interesting to consider

807
00:33:07,840 --> 00:33:10,840
yes

808
00:33:12,080 --> 00:33:14,399
thank you thank you willem

809
00:33:14,399 --> 00:33:18,640
thank you authors of catalog zones so um

810
00:33:18,640 --> 00:33:20,960
it's close to working group last call

811
00:33:20,960 --> 00:33:23,200
right here there's some work to do for

812
00:33:23,200 --> 00:33:25,760
you for the working group please review

813
00:33:25,760 --> 00:33:28,240
this document this version and certainly

814
00:33:28,240 --> 00:33:30,880
when working group lost call uh you're

815
00:33:30,880 --> 00:33:33,200
kind of obliged to have a re review the

816
00:33:33,200 --> 00:33:34,480
document

817
00:33:34,480 --> 00:33:35,600
um

818
00:33:35,600 --> 00:33:38,000
i think you also because it's already in

819
00:33:38,000 --> 00:33:40,559
use by some of well some of the vendors

820
00:33:40,559 --> 00:33:41,840
already

821
00:33:41,840 --> 00:33:44,000
put this to use and i think there's also

822
00:33:44,000 --> 00:33:46,799
feedback from users

823
00:33:46,799 --> 00:33:50,480
we just heard from paul wowter so

824
00:33:50,480 --> 00:33:53,039
please uh well

825
00:33:53,039 --> 00:33:54,320
that's good

826
00:33:54,320 --> 00:33:57,039
and um

827
00:33:57,039 --> 00:33:59,600
what's else is there still interrupt

828
00:33:59,600 --> 00:34:02,399
testing going on

829
00:34:02,399 --> 00:34:05,919
yes yeah okay that's still going on but

830
00:34:05,919 --> 00:34:07,279
it would be so

831
00:34:07,279 --> 00:34:08,639
so we have

832
00:34:08,639 --> 00:34:10,000
uh

833
00:34:10,000 --> 00:34:12,320
i think this document is ready

834
00:34:12,320 --> 00:34:13,119
yeah

835
00:34:13,119 --> 00:34:16,159
you know so uh it would be nice to have

836
00:34:16,159 --> 00:34:17,679
a review

837
00:34:17,679 --> 00:34:20,480
uh while we're doing interrupt testing

838
00:34:20,480 --> 00:34:23,119
excellent okay we'll ask the the working

839
00:34:23,119 --> 00:34:24,879
group to do a review

840
00:34:24,879 --> 00:34:27,040
interrupt testing and then we can go for

841
00:34:27,040 --> 00:34:29,359
working group last call and have

842
00:34:29,359 --> 00:34:32,000
again a review by the working group and

843
00:34:32,000 --> 00:34:35,040
move forward thank you very much

844
00:34:35,040 --> 00:34:36,800
um

845
00:34:36,800 --> 00:34:38,639
yeah next is

846
00:34:38,639 --> 00:34:41,040
wiz

847
00:34:42,320 --> 00:34:44,239
uh i know you want to run your slides

848
00:34:44,239 --> 00:34:46,879
your own but you can also use the shared

849
00:34:46,879 --> 00:34:48,879
slides from me to echo

850
00:34:48,879 --> 00:34:50,159
but you prefer

851
00:34:50,159 --> 00:34:52,239
requests to share oh sorry yeah yeah

852
00:34:52,239 --> 00:34:53,359
yeah

853
00:34:53,359 --> 00:34:55,599
i do see you

854
00:34:55,599 --> 00:34:58,079
all right

855
00:34:58,480 --> 00:34:59,440
all right

856
00:34:59,440 --> 00:35:02,480
uh here we go so yesterday was that just

857
00:35:02,480 --> 00:35:04,320
yesterday i've lost track uh it was

858
00:35:04,320 --> 00:35:06,079
actually a very fruitful con

859
00:35:06,079 --> 00:35:09,040
conversation i um i'm notorious for

860
00:35:09,040 --> 00:35:12,000
deliberately putting up things that i

861
00:35:12,000 --> 00:35:13,760
that i expect uh

862
00:35:13,760 --> 00:35:15,839
people to be against

863
00:35:15,839 --> 00:35:19,440
so yesterday was no small

864
00:35:19,440 --> 00:35:21,119
it was definitely in that case so i want

865
00:35:21,119 --> 00:35:23,280
to try this again today is a little bit

866
00:35:23,280 --> 00:35:25,520
different today i actually think based

867
00:35:25,520 --> 00:35:27,599
on conversations on the mailing list

868
00:35:27,599 --> 00:35:28,800
and on

869
00:35:28,800 --> 00:35:31,440
the discussion yesterday that we may be

870
00:35:31,440 --> 00:35:33,839
at a good point for really wrapping this

871
00:35:33,839 --> 00:35:34,720
up

872
00:35:34,720 --> 00:35:36,400
with some text that i will propose at

873
00:35:36,400 --> 00:35:37,520
the end

874
00:35:37,520 --> 00:35:39,520
so based on discussions yesterday and

875
00:35:39,520 --> 00:35:41,119
based on the list we know that we want

876
00:35:41,119 --> 00:35:42,960
zone publishers to move to iterations

877
00:35:42,960 --> 00:35:45,839
equals zero i think there's a lot of

878
00:35:45,839 --> 00:35:47,599
consensus around that

879
00:35:47,599 --> 00:35:49,520
not today

880
00:35:49,520 --> 00:35:51,920
we know that we want validators to start

881
00:35:51,920 --> 00:35:55,440
enforcing lower counts

882
00:35:55,520 --> 00:35:57,520
and that serve fail is better than

883
00:35:57,520 --> 00:35:59,280
insecure because insecure allows

884
00:35:59,280 --> 00:36:01,280
takeovers and surveillance at least

885
00:36:01,280 --> 00:36:03,839
denial

886
00:36:04,000 --> 00:36:05,920
but we want to do all of these at a

887
00:36:05,920 --> 00:36:08,480
reasonable deployment rate um it's not

888
00:36:08,480 --> 00:36:10,560
an instantaneous move that we've made a

889
00:36:10,560 --> 00:36:12,720
lot of progress in in part thanks to

890
00:36:12,720 --> 00:36:14,800
victor's reaching out to a lot of people

891
00:36:14,800 --> 00:36:15,839
um

892
00:36:15,839 --> 00:36:17,440
but you know this reasonable deployment

893
00:36:17,440 --> 00:36:18,960
rate is not going to be immediate and

894
00:36:18,960 --> 00:36:21,680
it's going to be large

895
00:36:21,839 --> 00:36:22,640
so

896
00:36:22,640 --> 00:36:25,200
how do we get from where we are today to

897
00:36:25,200 --> 00:36:27,359
you know accomplishing these goals so we

898
00:36:27,359 --> 00:36:28,800
want zone publishers to move to

899
00:36:28,800 --> 00:36:30,640
iterations equals zero

900
00:36:30,640 --> 00:36:32,800
uh so this is my recommendation for how

901
00:36:32,800 --> 00:36:34,560
to modify the draft so this proposed

902
00:36:34,560 --> 00:36:35,440
text

903
00:36:35,440 --> 00:36:37,839
uh this is uh you know actually a

904
00:36:37,839 --> 00:36:39,680
suggestion by paul hoffman that i made a

905
00:36:39,680 --> 00:36:41,680
little bit stronger and it's in section

906
00:36:41,680 --> 00:36:43,760
2.3 and it's in the middle of a

907
00:36:43,760 --> 00:36:44,960
paragraph so some of these are a little

908
00:36:44,960 --> 00:36:46,720
bit hard to read out of context but i'm

909
00:36:46,720 --> 00:36:48,640
i'm really trying to propose essentially

910
00:36:48,640 --> 00:36:50,880
text that will go in uh we won't do

911
00:36:50,880 --> 00:36:52,880
wordsmithing live

912
00:36:52,880 --> 00:36:55,040
but nsec mitigates this concern and if

913
00:36:55,040 --> 00:36:57,680
insect three must be used then it should

914
00:36:57,680 --> 00:36:59,599
have an iterations count of zero

915
00:36:59,599 --> 00:37:00,800
basically

916
00:37:00,800 --> 00:37:02,960
and so what i want to hear today is is

917
00:37:02,960 --> 00:37:05,680
there anybody that can't live with this

918
00:37:05,680 --> 00:37:08,680
text

919
00:37:09,119 --> 00:37:11,440
we'll discuss uh in a second you know

920
00:37:11,440 --> 00:37:14,000
timelines but but you know this is zone

921
00:37:14,000 --> 00:37:16,880
publishers really should do xero

922
00:37:16,880 --> 00:37:18,960
i see nobody in the queue so that's a

923
00:37:18,960 --> 00:37:20,720
win

924
00:37:20,720 --> 00:37:22,720
all right so how do we get to

925
00:37:22,720 --> 00:37:25,440
b and d so b is we want validators to

926
00:37:25,440 --> 00:37:28,079
start enforcing these lower counts and

927
00:37:28,079 --> 00:37:29,440
how do we do this at a reasonable

928
00:37:29,440 --> 00:37:30,960
deployment rate

929
00:37:30,960 --> 00:37:33,440
uh so for this we're going to steal text

930
00:37:33,440 --> 00:37:35,760
from propose from petter

931
00:37:35,760 --> 00:37:38,800
thank you and it will go in section four

932
00:37:38,800 --> 00:37:40,720
that says uh really talks about

933
00:37:40,720 --> 00:37:43,599
timelines right so as of november 2021

934
00:37:43,599 --> 00:37:45,520
setting an upper limit of a hundred

935
00:37:45,520 --> 00:37:47,359
iterations for treating a zone as

936
00:37:47,359 --> 00:37:49,839
insecure is interoperable without

937
00:37:49,839 --> 00:37:52,079
significant problems but at the same

938
00:37:52,079 --> 00:37:55,040
time still enable cpu exhaustion attacks

939
00:37:55,040 --> 00:37:56,880
and for this reason validating software

940
00:37:56,880 --> 00:37:58,800
vendors are encouraged to continue

941
00:37:58,800 --> 00:38:00,880
evaluating insect 3 iteration count

942
00:38:00,880 --> 00:38:03,359
deployments and lowering their default

943
00:38:03,359 --> 00:38:06,079
and acceptable limits over time

944
00:38:06,079 --> 00:38:10,960
so it puts it on the shoulders of both

945
00:38:11,280 --> 00:38:13,520
software vendors deploying

946
00:38:13,520 --> 00:38:16,720
releasing validating resolvers as well

947
00:38:16,720 --> 00:38:18,720
as operational staff although i don't

948
00:38:18,720 --> 00:38:20,720
really put that in there uh i should

949
00:38:20,720 --> 00:38:23,680
probably add operational stuff paul

950
00:38:23,680 --> 00:38:26,640
paul one paul

951
00:38:27,200 --> 00:38:28,800
on my screen number one so i'll pretend

952
00:38:28,800 --> 00:38:30,400
to be pull one

953
00:38:30,400 --> 00:38:33,440
so normally at itf in in rfcs we don't

954
00:38:33,440 --> 00:38:35,520
actually put things like expiry dates in

955
00:38:35,520 --> 00:38:37,839
there so and that's a good reason for

956
00:38:37,839 --> 00:38:39,599
that because we don't really know or can

957
00:38:39,599 --> 00:38:41,200
predict what the future deployments will

958
00:38:41,200 --> 00:38:42,800
be like so

959
00:38:42,800 --> 00:38:44,880
that we internally have something where

960
00:38:44,880 --> 00:38:46,720
we say um

961
00:38:46,720 --> 00:38:49,200
we'll get back in november 2021 and

962
00:38:49,200 --> 00:38:51,599
we'll reevaluate based on measurements

963
00:38:51,599 --> 00:38:54,400
done by people like victor is great

964
00:38:54,400 --> 00:38:56,240
but i don't think there should be

965
00:38:56,240 --> 00:38:58,079
anything in this in the document we have

966
00:38:58,079 --> 00:39:00,400
a dns guidelines document that tells you

967
00:39:00,400 --> 00:39:02,240
what to do what not to do that one

968
00:39:02,240 --> 00:39:04,400
should be regularly updated if you have

969
00:39:04,400 --> 00:39:06,079
this versions and that's where this text

970
00:39:06,079 --> 00:39:09,520
should appear but not with dates

971
00:39:09,520 --> 00:39:12,079
so this isn't a time this isn't a

972
00:39:12,079 --> 00:39:13,920
deadline right this is

973
00:39:13,920 --> 00:39:15,920
where we are today and it's the starting

974
00:39:15,920 --> 00:39:17,119
point for what people might want to

975
00:39:17,119 --> 00:39:18,160
consider

976
00:39:18,160 --> 00:39:20,160
um i recognize i actually was hesitant

977
00:39:20,160 --> 00:39:21,839
to put this in the document too for

978
00:39:21,839 --> 00:39:24,160
exactly that reason that rfcs don't

979
00:39:24,160 --> 00:39:28,320
typically have history in them um so i

980
00:39:28,320 --> 00:39:30,640
will take that as a is a complaint from

981
00:39:30,640 --> 00:39:32,000
paul that he would prefer not to have it

982
00:39:32,000 --> 00:39:33,359
i guess paul you're still there any

983
00:39:33,359 --> 00:39:35,839
follow-on

984
00:39:36,000 --> 00:39:39,440
oh so yeah i'm still there sorry um

985
00:39:39,440 --> 00:39:41,280
yeah i i still think we should not put

986
00:39:41,280 --> 00:39:43,040
dates in there that the only updates on

987
00:39:43,040 --> 00:39:44,960
on rfc documents are the ones from the

988
00:39:44,960 --> 00:39:46,880
publication date

989
00:39:46,880 --> 00:39:49,280
well okay how about as of

990
00:39:49,280 --> 00:39:51,599
as of the this publication right we

991
00:39:51,599 --> 00:39:52,960
actually have done that in a number of

992
00:39:52,960 --> 00:39:54,240
places

993
00:39:54,240 --> 00:39:55,839
um you're right that the hard date's

994
00:39:55,839 --> 00:39:57,359
probably but that's already implied if

995
00:39:57,359 --> 00:39:59,200
you if you put in a shoot or a must and

996
00:39:59,200 --> 00:40:00,880
the document gets published and that's

997
00:40:00,880 --> 00:40:02,640
the date you have like i don't think we

998
00:40:02,640 --> 00:40:04,560
need to put date for smithing into

999
00:40:04,560 --> 00:40:06,319
inside documents

1000
00:40:06,319 --> 00:40:07,359
okay

1001
00:40:07,359 --> 00:40:10,598
paul two

1002
00:40:11,760 --> 00:40:14,160
just a quick question and i'm not sure

1003
00:40:14,160 --> 00:40:15,920
i've been following because i'm busily

1004
00:40:15,920 --> 00:40:18,480
taking minutes i thought you said

1005
00:40:18,480 --> 00:40:21,040
earlier that this suggestion was going

1006
00:40:21,040 --> 00:40:23,599
to be to go to nx domain

1007
00:40:23,599 --> 00:40:25,359
but um

1008
00:40:25,359 --> 00:40:27,680
in the second line here you say for

1009
00:40:27,680 --> 00:40:30,240
treating a zone as insecure

1010
00:40:30,240 --> 00:40:31,760
right so right now

1011
00:40:31,760 --> 00:40:33,680
right now the insects i just wanted to

1012
00:40:33,680 --> 00:40:35,359
make sure that that was intentional a

1013
00:40:35,359 --> 00:40:37,359
thousand times that's cool okay great

1014
00:40:37,359 --> 00:40:39,040
thanks the next slide we'll talk about

1015
00:40:39,040 --> 00:40:40,800
that

1016
00:40:40,800 --> 00:40:42,960
uh

1017
00:40:47,680 --> 00:40:49,040
can you hear me

1018
00:40:49,040 --> 00:40:50,000
yes

1019
00:40:50,000 --> 00:40:52,560
okay good well one option would be to

1020
00:40:52,560 --> 00:40:54,720
take the first paragraph and either move

1021
00:40:54,720 --> 00:40:57,200
it to appendix and say well this is the

1022
00:40:57,200 --> 00:40:59,440
history appendix blah blah blah or just

1023
00:40:59,440 --> 00:41:01,680
delete it because

1024
00:41:01,680 --> 00:41:04,400
you know the second paragraph stands on

1025
00:41:04,400 --> 00:41:06,720
its own you know the

1026
00:41:06,720 --> 00:41:09,119
vendors have to evaluate what's actually

1027
00:41:09,119 --> 00:41:11,440
feasible to enforce at any given point

1028
00:41:11,440 --> 00:41:12,400
in time

1029
00:41:12,400 --> 00:41:15,200
and you know adapt the defaults they

1030
00:41:15,200 --> 00:41:17,920
ship to current situation because that's

1031
00:41:17,920 --> 00:41:20,880
what vendors do anyway

1032
00:41:20,880 --> 00:41:23,440
so i mean

1033
00:41:23,440 --> 00:41:25,920
but i really think this is bike shedding

1034
00:41:25,920 --> 00:41:28,319
because it's not setting any expiry date

1035
00:41:28,319 --> 00:41:29,680
it's

1036
00:41:29,680 --> 00:41:31,920
saying at this specific point in time

1037
00:41:31,920 --> 00:41:34,880
the situation was this and this i don't

1038
00:41:34,880 --> 00:41:36,560
see any

1039
00:41:36,560 --> 00:41:39,680
future prediction in the in this two

1040
00:41:39,680 --> 00:41:42,160
paragraphs so i don't really see the

1041
00:41:42,160 --> 00:41:43,359
objection

1042
00:41:43,359 --> 00:41:44,800
okay so i will note before you leave

1043
00:41:44,800 --> 00:41:46,720
that um if we delete that first

1044
00:41:46,720 --> 00:41:48,640
paragraph we're deleting suggesting the

1045
00:41:48,640 --> 00:41:51,040
upper limit of a hundred right

1046
00:41:51,040 --> 00:41:53,280
um so

1047
00:41:53,280 --> 00:41:55,599
which may be okay right that still it

1048
00:41:55,599 --> 00:41:57,119
still leaves it up to vendors as to what

1049
00:41:57,119 --> 00:41:58,319
to do

1050
00:41:58,319 --> 00:42:00,640
victor

1051
00:42:01,119 --> 00:42:03,839
uh one possible solution

1052
00:42:03,839 --> 00:42:06,560
uh is to just remove the date and say

1053
00:42:06,560 --> 00:42:09,440
that validator should use a limit of 100

1054
00:42:09,440 --> 00:42:11,119
or less

1055
00:42:11,119 --> 00:42:13,760
and then you know with the less being

1056
00:42:13,760 --> 00:42:15,920
based on paragraph two and just

1057
00:42:15,920 --> 00:42:18,000
immediately recommend a hundred

1058
00:42:18,000 --> 00:42:20,560
uh as a as an upper bound for the upper

1059
00:42:20,560 --> 00:42:21,520
bound

1060
00:42:21,520 --> 00:42:22,880
if you like

1061
00:42:22,880 --> 00:42:24,560
yeah but if you do it should then that

1062
00:42:24,560 --> 00:42:26,240
that limit ends up kind of looking like

1063
00:42:26,240 --> 00:42:27,920
it's hardcoded forever and that's not

1064
00:42:27,920 --> 00:42:30,160
what you're trying to say so we might be

1065
00:42:30,160 --> 00:42:31,200
able to do that

1066
00:42:31,200 --> 00:42:33,200
carefully i should say you should use a

1067
00:42:33,200 --> 00:42:36,160
limit often you know no more than

1068
00:42:36,160 --> 00:42:39,040
you know uh yeah i i i see a point i

1069
00:42:39,040 --> 00:42:41,839
don't know but that's an option just to

1070
00:42:41,839 --> 00:42:44,720
recommend it as and then say it lower if

1071
00:42:44,720 --> 00:42:46,079
possible

1072
00:42:46,079 --> 00:42:47,119
okay

1073
00:42:47,119 --> 00:42:50,000
now sorry uh a little bit time keeping

1074
00:42:50,000 --> 00:42:50,720
so

1075
00:42:50,720 --> 00:42:51,920
not

1076
00:42:51,920 --> 00:42:54,079
contributing to the disco i think we all

1077
00:42:54,079 --> 00:42:54,960
agree

1078
00:42:54,960 --> 00:42:56,720
only this is a little bit worse smithing

1079
00:42:56,720 --> 00:42:59,119
so maybe we can take that to the mailing

1080
00:42:59,119 --> 00:43:00,000
list

1081
00:43:00,000 --> 00:43:01,680
because uh yeah sort of yeah the

1082
00:43:01,680 --> 00:43:03,280
traditional the traditional answer at

1083
00:43:03,280 --> 00:43:05,520
this point is please send text

1084
00:43:05,520 --> 00:43:07,920
yeah but the main thing everybody agrees

1085
00:43:07,920 --> 00:43:10,079
kind of the approach but we have to be

1086
00:43:10,079 --> 00:43:13,040
yeah yeah all right thank you sorry

1087
00:43:13,040 --> 00:43:16,560
so the last one uh is sir fail is better

1088
00:43:16,560 --> 00:43:19,680
than insecure and so um we talked about

1089
00:43:19,680 --> 00:43:22,079
this yesterday so the text i'm proposing

1090
00:43:22,079 --> 00:43:24,160
this this totally needs wordsmithing so

1091
00:43:24,160 --> 00:43:25,920
let's not wordsmith this at all i sort

1092
00:43:25,920 --> 00:43:27,599
of put together late last night after

1093
00:43:27,599 --> 00:43:29,680
not enough coffee again but similarly

1094
00:43:29,680 --> 00:43:31,200
because treating insect three with a

1095
00:43:31,200 --> 00:43:33,920
high iterations count is as insecurely

1096
00:43:33,920 --> 00:43:35,920
zoned subject to attack

1097
00:43:35,920 --> 00:43:37,839
validating software vendors are further

1098
00:43:37,839 --> 00:43:39,440
encouraged to lower their default and

1099
00:43:39,440 --> 00:43:41,359
acceptable limits for returning serve

1100
00:43:41,359 --> 00:43:44,160
fail for large iteration count values

1101
00:43:44,160 --> 00:43:46,319
and again we have text about dates and

1102
00:43:46,319 --> 00:43:48,880
maybe 500 is a reasonable starting point

1103
00:43:48,880 --> 00:43:50,079
based on the discussion on the last

1104
00:43:50,079 --> 00:43:52,000
slide i would argue that last sentence

1105
00:43:52,000 --> 00:43:54,560
we should just drop entirely

1106
00:43:54,560 --> 00:43:58,000
anybody have objections to that

1107
00:43:58,000 --> 00:44:00,079
first sentence especially being put into

1108
00:44:00,079 --> 00:44:04,440
the document as our path forward

1109
00:44:10,720 --> 00:44:13,119
yeah uh so peter did want to point

1110
00:44:13,119 --> 00:44:15,760
out on the in chat that um are we

1111
00:44:15,760 --> 00:44:17,599
talking about operators or vendors and

1112
00:44:17,599 --> 00:44:20,079
it's this tandem thing where um that's

1113
00:44:20,079 --> 00:44:21,680
always a problem

1114
00:44:21,680 --> 00:44:23,440
i i think i will try and put in wording

1115
00:44:23,440 --> 00:44:26,720
to talk to both operators and to um to

1116
00:44:26,720 --> 00:44:28,240
vendors that's a good point

1117
00:44:28,240 --> 00:44:31,598
better and then i think we'll quit

1118
00:44:31,839 --> 00:44:34,720
just a quick note from a vendor because

1119
00:44:34,720 --> 00:44:37,680
because vendors have to do some defaults

1120
00:44:37,680 --> 00:44:38,880
and

1121
00:44:38,880 --> 00:44:41,680
when it breaks by default users go to

1122
00:44:41,680 --> 00:44:43,359
vendors and cry

1123
00:44:43,359 --> 00:44:45,119
and that's the reason why we try to

1124
00:44:45,119 --> 00:44:47,920
establish reasonable values that's it i

1125
00:44:47,920 --> 00:44:50,480
mean of course operators are free to

1126
00:44:50,480 --> 00:44:52,400
patch the software or pay vendors to do

1127
00:44:52,400 --> 00:44:53,760
something else

1128
00:44:53,760 --> 00:44:55,760
but this is about defaults right

1129
00:44:55,760 --> 00:44:57,760
everyone can change the software any way

1130
00:44:57,760 --> 00:44:59,280
they want

1131
00:44:59,280 --> 00:45:00,880
yeah and some in some documents in the

1132
00:45:00,880 --> 00:45:02,560
past we've also put things like this

1133
00:45:02,560 --> 00:45:04,560
must be configurable you must provide a

1134
00:45:04,560 --> 00:45:06,160
configuration hub and we haven't done

1135
00:45:06,160 --> 00:45:08,000
that in this document so

1136
00:45:08,000 --> 00:45:10,000
all right um i believe

1137
00:45:10,000 --> 00:45:11,440
i don't even know oh and then i haven't

1138
00:45:11,440 --> 00:45:13,680
proposed appendix but i think we can do

1139
00:45:13,680 --> 00:45:15,359
that on the list um and again that's

1140
00:45:15,359 --> 00:45:17,520
from paider

1141
00:45:17,520 --> 00:45:19,599
all right i think we're

1142
00:45:19,599 --> 00:45:21,270
done

1143
00:45:21,270 --> 00:45:22,880
[Music]

1144
00:45:22,880 --> 00:45:26,400
thank you very much uh we do have

1145
00:45:26,400 --> 00:45:30,000
oh sorry let's go ahead no just that um

1146
00:45:30,000 --> 00:45:32,400
i think we've done all we can here but

1147
00:45:32,400 --> 00:45:34,240
please take it to the mailing list and

1148
00:45:34,240 --> 00:45:36,560
send text because we want we want this

1149
00:45:36,560 --> 00:45:37,839
to be right

1150
00:45:37,839 --> 00:45:39,200
yeah

1151
00:45:39,200 --> 00:45:42,079
victor you you want to add something

1152
00:45:42,079 --> 00:45:44,400
since peter cox is in the audience i'm

1153
00:45:44,400 --> 00:45:46,560
curious whether you know he has any

1154
00:45:46,560 --> 00:45:50,079
issues with you know reducing the cctld

1155
00:45:50,079 --> 00:45:53,520
iterations to zero i notice that uh

1156
00:45:53,520 --> 00:45:55,440
de is currently one of the ones that's

1157
00:45:55,440 --> 00:45:58,330
uh sort of slightly on the high side

1158
00:45:58,330 --> 00:46:01,520
[Music]

1159
00:46:05,119 --> 00:46:07,359
okay

1160
00:46:07,359 --> 00:46:11,000
please go ahead peter

1161
00:46:20,480 --> 00:46:22,079
sorry that didn't work

1162
00:46:22,079 --> 00:46:24,000
yeah we do hear you now oh thank you

1163
00:46:24,000 --> 00:46:25,599
apologies for the delay

1164
00:46:25,599 --> 00:46:29,520
um yeah while i cannot comment on on

1165
00:46:29,520 --> 00:46:31,839
victor's question to to probably to the

1166
00:46:31,839 --> 00:46:33,760
extent that that would please him

1167
00:46:33,760 --> 00:46:37,839
my um or or be sufficient um

1168
00:46:37,839 --> 00:46:41,520
my concern is this approach of of

1169
00:46:41,520 --> 00:46:43,920
driving this through by way of standard

1170
00:46:43,920 --> 00:46:47,119
so um that's that's what makes me um

1171
00:46:47,119 --> 00:46:48,640
speak up here

1172
00:46:48,640 --> 00:46:51,040
um i think i understand at least part of

1173
00:46:51,040 --> 00:46:51,920
the

1174
00:46:51,920 --> 00:46:53,440
goal

1175
00:46:53,440 --> 00:46:54,400
but

1176
00:46:54,400 --> 00:46:56,880
there is a slippery slope in in

1177
00:46:56,880 --> 00:46:59,520
sliding into into a

1178
00:46:59,520 --> 00:47:02,319
compliance game that we

1179
00:47:02,319 --> 00:47:04,240
that that the itf usually doesn't engage

1180
00:47:04,240 --> 00:47:05,440
into

1181
00:47:05,440 --> 00:47:07,599
as and which is why i made that remark

1182
00:47:07,599 --> 00:47:10,480
uh enforcement is is a bit of a strange

1183
00:47:10,480 --> 00:47:12,720
concept when when actually the mantra is

1184
00:47:12,720 --> 00:47:14,160
that there's voluntary adoption of

1185
00:47:14,160 --> 00:47:15,440
standards

1186
00:47:15,440 --> 00:47:17,520
if you're seriously if you're seriously

1187
00:47:17,520 --> 00:47:19,920
mitigating a security risk

1188
00:47:19,920 --> 00:47:21,920
then that's a different issue but then

1189
00:47:21,920 --> 00:47:24,079
that is probably something that ought

1190
00:47:24,079 --> 00:47:25,920
not

1191
00:47:25,920 --> 00:47:28,240
to go into a protocol standard but

1192
00:47:28,240 --> 00:47:29,920
rather be dead within it in a different

1193
00:47:29,920 --> 00:47:31,440
way and i'm and i'm missing those

1194
00:47:31,440 --> 00:47:33,760
signals

1195
00:47:33,760 --> 00:47:36,160
and again apologies for not straightly

1196
00:47:36,160 --> 00:47:39,119
responding to victor so this is a

1197
00:47:39,119 --> 00:47:40,160
security

1198
00:47:40,160 --> 00:47:42,079
standpoint

1199
00:47:42,079 --> 00:47:43,040
and

1200
00:47:43,040 --> 00:47:46,000
we need to document it as don't do this

1201
00:47:46,000 --> 00:47:48,000
in implementations anymore right we're

1202
00:47:48,000 --> 00:47:50,400
functionally modifying how you should

1203
00:47:50,400 --> 00:47:53,040
implement insect three but we'll let the

1204
00:47:53,040 --> 00:47:54,480
chairs go on we can take everything else

1205
00:47:54,480 --> 00:47:56,960
to the list

1206
00:47:57,440 --> 00:47:59,599
thank you thank you wes thank you peter

1207
00:47:59,599 --> 00:48:03,119
victor uh peter do you have a short

1208
00:48:03,119 --> 00:48:06,119
remark

1209
00:48:06,319 --> 00:48:08,160
i saw you in the queue but you

1210
00:48:08,160 --> 00:48:10,160
disappeared

1211
00:48:10,160 --> 00:48:11,119
no

1212
00:48:11,119 --> 00:48:13,680
okay i just wanted to say that yes it is

1213
00:48:13,680 --> 00:48:15,839
such a security issue but west was

1214
00:48:15,839 --> 00:48:18,800
faster so i disappeared from the queue

1215
00:48:18,800 --> 00:48:20,640
okay thanks

1216
00:48:20,640 --> 00:48:22,960
thank you and then we go come to the

1217
00:48:22,960 --> 00:48:25,040
last presentation

1218
00:48:25,040 --> 00:48:27,599
automatic bootstrapping by peter peter

1219
00:48:27,599 --> 00:48:28,880
thomason

1220
00:48:28,880 --> 00:48:30,720
uh peter please

1221
00:48:30,720 --> 00:48:31,760
go ahead

1222
00:48:31,760 --> 00:48:33,119
hi yes

1223
00:48:33,119 --> 00:48:34,640
i just requested

1224
00:48:34,640 --> 00:48:37,520
sharing the screen

1225
00:48:37,680 --> 00:48:39,920
do you really want to share screen yes

1226
00:48:39,920 --> 00:48:41,760
um

1227
00:48:41,760 --> 00:48:43,359
entire screen

1228
00:48:43,359 --> 00:48:45,119
share all right

1229
00:48:45,119 --> 00:48:46,960
hope you can see my screen do we have a

1230
00:48:46,960 --> 00:48:50,000
hard cut off at the half hour

1231
00:48:50,000 --> 00:48:53,040
uh not exactly but i think after five

1232
00:48:53,040 --> 00:48:55,040
minutes the room will be closed but uh

1233
00:48:55,040 --> 00:48:57,280
okay so we'll just speed up a bit and

1234
00:48:57,280 --> 00:48:58,319
that's fine

1235
00:48:58,319 --> 00:49:00,079
yeah um so i'll be talking there's no

1236
00:49:00,079 --> 00:49:02,000
problem i'll be talking about authentic

1237
00:49:02,000 --> 00:49:04,640
um but automatic dns bootstrapping so

1238
00:49:04,640 --> 00:49:07,040
putting in the s records into the parent

1239
00:49:07,040 --> 00:49:08,000
um

1240
00:49:08,000 --> 00:49:10,240
by means of authenticated signals from

1241
00:49:10,240 --> 00:49:11,680
the zones operator i'll explain what

1242
00:49:11,680 --> 00:49:12,800
that means

1243
00:49:12,800 --> 00:49:15,520
so um today when you bootstrap your dns

1244
00:49:15,520 --> 00:49:17,359
sec delegation you have to somehow get

1245
00:49:17,359 --> 00:49:19,520
the ds records to the parent there is

1246
00:49:19,520 --> 00:49:21,280
various ways for this often involving

1247
00:49:21,280 --> 00:49:23,839
the register the registrant which is

1248
00:49:23,839 --> 00:49:26,160
complicated doesn't even know dynastic

1249
00:49:26,160 --> 00:49:28,480
exists and all this

1250
00:49:28,480 --> 00:49:30,880
and all of the different methods

1251
00:49:30,880 --> 00:49:32,559
um have

1252
00:49:32,559 --> 00:49:35,040
some downside at least one of being

1253
00:49:35,040 --> 00:49:38,000
unauthenticated um like cds from

1254
00:49:38,000 --> 00:49:40,319
insecure or out of band

1255
00:49:40,319 --> 00:49:42,559
or being slow

1256
00:49:42,559 --> 00:49:44,480
things involving multiple steps for

1257
00:49:44,480 --> 00:49:46,640
example registrant and error prone too

1258
00:49:46,640 --> 00:49:48,960
many parties no automation and so on

1259
00:49:48,960 --> 00:49:50,079
um

1260
00:49:50,079 --> 00:49:52,079
especially the authenticated workflow

1261
00:49:52,079 --> 00:49:53,920
involves too many steps so you started

1262
00:49:53,920 --> 00:49:55,520
the dns provider which has the key

1263
00:49:55,520 --> 00:49:57,760
material usually the registrant fetches

1264
00:49:57,760 --> 00:49:59,280
it through some web interface then goes

1265
00:49:59,280 --> 00:50:01,280
into the registrar then there's epp too

1266
00:50:01,280 --> 00:50:02,960
many steps and

1267
00:50:02,960 --> 00:50:04,880
it takes forever and the more direct

1268
00:50:04,880 --> 00:50:06,319
steps are currently unauthenticated

1269
00:50:06,319 --> 00:50:08,640
which are the dashed lines

1270
00:50:08,640 --> 00:50:10,559
um it's promising to consider the pull

1271
00:50:10,559 --> 00:50:12,720
from the dns separate directly

1272
00:50:12,720 --> 00:50:14,480
but as i said it's

1273
00:50:14,480 --> 00:50:16,559
not secure for bootstrapping although

1274
00:50:16,559 --> 00:50:18,240
it's in-band which is nice

1275
00:50:18,240 --> 00:50:18,960
and

1276
00:50:18,960 --> 00:50:20,400
the goal of our proposal is to add

1277
00:50:20,400 --> 00:50:22,160
authentication here so that you get

1278
00:50:22,160 --> 00:50:23,760
something that's automatically immediate

1279
00:50:23,760 --> 00:50:25,680
and doesn't require state

1280
00:50:25,680 --> 00:50:27,920
at the parent

1281
00:50:27,920 --> 00:50:30,160
um the solution we propose is to

1282
00:50:30,160 --> 00:50:31,760
transfer trust from the dns operator

1283
00:50:31,760 --> 00:50:33,760
i'll explain what that means so first

1284
00:50:33,760 --> 00:50:35,440
thing you need a signaling mechanism

1285
00:50:35,440 --> 00:50:37,119
from the dns operator

1286
00:50:37,119 --> 00:50:39,119
what is that

1287
00:50:39,119 --> 00:50:41,280
so the goal is to allow unit operators

1288
00:50:41,280 --> 00:50:43,119
to publish arbitrary information about

1289
00:50:43,119 --> 00:50:45,599
the zones they host and do that in a way

1290
00:50:45,599 --> 00:50:48,480
that is authenticated and per zone

1291
00:50:48,480 --> 00:50:49,359
and

1292
00:50:49,359 --> 00:50:50,960
then obviously the question is how it

1293
00:50:50,960 --> 00:50:52,720
can be done

1294
00:50:52,720 --> 00:50:55,119
and the proposal is to use the namespace

1295
00:50:55,119 --> 00:50:56,800
under each nameserver's hostname for

1296
00:50:56,800 --> 00:50:58,359
example

1297
00:50:58,359 --> 00:51:00,559
underscoreboot.ns1.dcko in our case of

1298
00:51:00,559 --> 00:51:01,839
our name servers

1299
00:51:01,839 --> 00:51:03,359
and then require dean essec on those

1300
00:51:03,359 --> 00:51:04,319
names

1301
00:51:04,319 --> 00:51:06,640
so that records are validatable that

1302
00:51:06,640 --> 00:51:08,160
requires the name servers to be in

1303
00:51:08,160 --> 00:51:09,760
secure zones

1304
00:51:09,760 --> 00:51:11,599
and then under this namespace

1305
00:51:11,599 --> 00:51:13,760
announcement can be made under some

1306
00:51:13,760 --> 00:51:17,200
owner names which are zone specific

1307
00:51:17,200 --> 00:51:18,559
once you have this mechanism you can use

1308
00:51:18,559 --> 00:51:20,640
it to publish an authentication signal

1309
00:51:20,640 --> 00:51:22,800
you start out with the cbs and cd and sq

1310
00:51:22,800 --> 00:51:24,960
records at the apex of the target domain

1311
00:51:24,960 --> 00:51:26,720
of the customer's domain and you just

1312
00:51:26,720 --> 00:51:29,359
co-publish them under that signaling

1313
00:51:29,359 --> 00:51:30,559
namespace

1314
00:51:30,559 --> 00:51:32,400
and under the signaling namespace it

1315
00:51:32,400 --> 00:51:34,720
will be signed with the ns zones keys so

1316
00:51:34,720 --> 00:51:36,480
that's from the operator you can

1317
00:51:36,480 --> 00:51:37,760
validate that

1318
00:51:37,760 --> 00:51:38,559
um

1319
00:51:38,559 --> 00:51:40,640
so you can as a parent you can fetch the

1320
00:51:40,640 --> 00:51:43,680
cds records as usual from the customer's

1321
00:51:43,680 --> 00:51:45,599
target zone from your child then

1322
00:51:45,599 --> 00:51:46,720
validate it

1323
00:51:46,720 --> 00:51:48,880
against this using dns and if that's

1324
00:51:48,880 --> 00:51:50,400
successful um

1325
00:51:50,400 --> 00:51:52,559
you can provision the ds records in the

1326
00:51:52,559 --> 00:51:54,079
parent that's what we call transferring

1327
00:51:54,079 --> 00:51:56,000
trust from the pac from to the target

1328
00:51:56,000 --> 00:51:57,040
domain

1329
00:51:57,040 --> 00:51:58,400
and you should clean up records when

1330
00:51:58,400 --> 00:52:00,559
you're done to make sure there's no

1331
00:52:00,559 --> 00:52:03,119
clutter hanging around

1332
00:52:03,119 --> 00:52:05,040
there's a visual representation of this

1333
00:52:05,040 --> 00:52:06,400
which

1334
00:52:06,400 --> 00:52:08,240
is i guess nice to have let's start out

1335
00:52:08,240 --> 00:52:10,319
with dotnet and dot com dot com is where

1336
00:52:10,319 --> 00:52:12,319
the example dot com customer will reside

1337
00:52:12,319 --> 00:52:14,480
and dot net is where the provider has a

1338
00:52:14,480 --> 00:52:16,240
host name for its name server which is

1339
00:52:16,240 --> 00:52:19,440
securely delegated now when the customer

1340
00:52:19,440 --> 00:52:21,440
books example.com it's usually not

1341
00:52:21,440 --> 00:52:22,720
secure

1342
00:52:22,720 --> 00:52:23,599
and

1343
00:52:23,599 --> 00:52:26,000
at that time the dns provider will

1344
00:52:26,000 --> 00:52:28,720
add cds and cdsq records at the

1345
00:52:28,720 --> 00:52:30,559
example.com zone

1346
00:52:30,559 --> 00:52:32,319
our proposal is to co-publish them

1347
00:52:32,319 --> 00:52:33,599
identically

1348
00:52:33,599 --> 00:52:34,640
under the

1349
00:52:34,640 --> 00:52:37,200
name servers domain under supplements of

1350
00:52:37,200 --> 00:52:38,640
that and sign it there

1351
00:52:38,640 --> 00:52:40,800
and then the parent can come query the

1352
00:52:40,800 --> 00:52:43,599
child domain validate against the signal

1353
00:52:43,599 --> 00:52:46,160
from the operator and put things in the

1354
00:52:46,160 --> 00:52:48,319
parent zone

1355
00:52:48,319 --> 00:52:50,480
so we use an established chain of trust

1356
00:52:50,480 --> 00:52:52,240
on the left to take a detour and as a

1357
00:52:52,240 --> 00:52:54,079
result you get bootstrapping for dns

1358
00:52:54,079 --> 00:52:56,079
delegations which is authenticated

1359
00:52:56,079 --> 00:52:57,680
immediate and resilient against

1360
00:52:57,680 --> 00:53:00,240
non-active against active on wire

1361
00:53:00,240 --> 00:53:02,000
attackers

1362
00:53:02,000 --> 00:53:03,359
um there are a few technical

1363
00:53:03,359 --> 00:53:05,760
considerations um i would like to point

1364
00:53:05,760 --> 00:53:06,800
out

1365
00:53:06,800 --> 00:53:08,160
so first of all there is no collision

1366
00:53:08,160 --> 00:53:10,800
with a conventional use of cds and cd cd

1367
00:53:10,800 --> 00:53:13,040
and sq records because those live at the

1368
00:53:13,040 --> 00:53:15,440
apex only while we propose to put them

1369
00:53:15,440 --> 00:53:17,760
on subdomains of something

1370
00:53:17,760 --> 00:53:20,240
so there is no collision

1371
00:53:20,240 --> 00:53:22,960
the draft currently also proposes to

1372
00:53:22,960 --> 00:53:25,119
hash the ancestor labels for example

1373
00:53:25,119 --> 00:53:29,319
example dot hashoff.com.nsf

1374
00:53:29,520 --> 00:53:30,880
um

1375
00:53:30,880 --> 00:53:31,920
this

1376
00:53:31,920 --> 00:53:33,359
avoids hitting length constraints and

1377
00:53:33,359 --> 00:53:34,400
has other

1378
00:53:34,400 --> 00:53:36,160
implications too

1379
00:53:36,160 --> 00:53:39,119
but it's a point of contention um and i

1380
00:53:39,119 --> 00:53:40,480
think it would be great to get the

1381
00:53:40,480 --> 00:53:42,800
working groups input on that so we can

1382
00:53:42,800 --> 00:53:44,640
either do that after this presentation

1383
00:53:44,640 --> 00:53:46,800
or maybe on the list i also have slide

1384
00:53:46,800 --> 00:53:48,640
on that separately so um

1385
00:53:48,640 --> 00:53:50,640
hang on

1386
00:53:50,640 --> 00:53:52,640
and there should also be an extra label

1387
00:53:52,640 --> 00:53:54,240
before the names have a host name here

1388
00:53:54,240 --> 00:53:56,720
it's called underscore boot so that you

1389
00:53:56,720 --> 00:53:57,520
can

1390
00:53:57,520 --> 00:53:59,040
delegate the signaling data to a

1391
00:53:59,040 --> 00:54:00,480
separate zone

1392
00:54:00,480 --> 00:54:03,440
the precise name is to be determined

1393
00:54:03,440 --> 00:54:05,440
this naming scheme

1394
00:54:05,440 --> 00:54:07,040
allows

1395
00:54:07,040 --> 00:54:09,040
putting things in the separate zone so

1396
00:54:09,040 --> 00:54:10,400
you don't accidentally touch your name

1397
00:54:10,400 --> 00:54:12,319
service ap records you reduce the chain

1398
00:54:12,319 --> 00:54:14,000
on the name server zone which you don't

1399
00:54:14,000 --> 00:54:16,160
have to touch all the time

1400
00:54:16,160 --> 00:54:18,160
you can delegate

1401
00:54:18,160 --> 00:54:20,240
bootstrapping stuff by parent if you

1402
00:54:20,240 --> 00:54:22,800
want for example you could delegate

1403
00:54:22,800 --> 00:54:24,960
the

1404
00:54:24,960 --> 00:54:26,079
thing

1405
00:54:26,079 --> 00:54:27,760
um and

1406
00:54:27,760 --> 00:54:29,599
you could also

1407
00:54:29,599 --> 00:54:31,920
provide a discovery mechanism for

1408
00:54:31,920 --> 00:54:34,319
example if the zone uses nsec

1409
00:54:34,319 --> 00:54:37,040
then dot com parent for example could

1410
00:54:37,040 --> 00:54:39,799
start an ansigwark at

1411
00:54:39,799 --> 00:54:41,359
hashoff.com.provider.net and then start

1412
00:54:41,359 --> 00:54:43,280
bootstrapping all the children which are

1413
00:54:43,280 --> 00:54:46,400
configured on the name server

1414
00:54:46,400 --> 00:54:48,400
um it may be interesting to know how

1415
00:54:48,400 --> 00:54:49,839
realistic this is

1416
00:54:49,839 --> 00:54:52,720
in terms of practical outlook

1417
00:54:52,720 --> 00:54:53,680
so

1418
00:54:53,680 --> 00:54:56,400
there are two deployment

1419
00:54:56,400 --> 00:54:58,079
requirements one is that the nameserver

1420
00:54:58,079 --> 00:55:00,079
targets are not part of the same zone

1421
00:55:00,079 --> 00:55:03,440
because then you can't establish this

1422
00:55:03,440 --> 00:55:04,799
this chain of trust because you're going

1423
00:55:04,799 --> 00:55:06,960
to catch catch-22 so in bellywick

1424
00:55:06,960 --> 00:55:09,760
doesn't work for this but john looked up

1425
00:55:09,760 --> 00:55:12,880
a few numbers for us and found that

1426
00:55:12,880 --> 00:55:14,720
baileywick only has less than a percent

1427
00:55:14,720 --> 00:55:17,119
prevalence in common.net um so that

1428
00:55:17,119 --> 00:55:18,720
should be fine probably also for other

1429
00:55:18,720 --> 00:55:20,400
tlds

1430
00:55:20,400 --> 00:55:22,000
and the nameserver targets need to be in

1431
00:55:22,000 --> 00:55:24,400
securely delegated zones so question is

1432
00:55:24,400 --> 00:55:26,400
how frequent that is

1433
00:55:26,400 --> 00:55:28,319
and we did an analysis from the tranquil

1434
00:55:28,319 --> 00:55:30,799
top 1 million data set and we looked for

1435
00:55:30,799 --> 00:55:32,799
all insecure domains which don't have

1436
00:55:32,799 --> 00:55:34,559
currently a validation path

1437
00:55:34,559 --> 00:55:36,240
um what the name server targets are and

1438
00:55:36,240 --> 00:55:38,319
if those are in secure zones when you

1439
00:55:38,319 --> 00:55:39,839
have that you can

1440
00:55:39,839 --> 00:55:41,599
compute the number bootstrappable zones

1441
00:55:41,599 --> 00:55:42,559
which is where all the nameserver

1442
00:55:42,559 --> 00:55:45,119
targets are secure but the domain self

1443
00:55:45,119 --> 00:55:48,400
itself doesn't have dnsc yet

1444
00:55:48,400 --> 00:55:50,480
so um by looking at that um

1445
00:55:50,480 --> 00:55:51,680
we probably could have done better we

1446
00:55:51,680 --> 00:55:53,200
had a bit of a failure rate we should

1447
00:55:53,200 --> 00:55:55,119
have retried more maybe but we got

1448
00:55:55,119 --> 00:55:56,880
almost a million domains five percent of

1449
00:55:56,880 --> 00:55:58,160
which are currently

1450
00:55:58,160 --> 00:56:00,079
um secure which is

1451
00:56:00,079 --> 00:56:01,680
just a cross-check seems in the right

1452
00:56:01,680 --> 00:56:02,880
ballpark

1453
00:56:02,880 --> 00:56:05,920
um and interestingly about 25 of those

1454
00:56:05,920 --> 00:56:07,520
delegations have

1455
00:56:07,520 --> 00:56:10,160
all name server targets in secure zones

1456
00:56:10,160 --> 00:56:12,160
so that's a good sign

1457
00:56:12,160 --> 00:56:13,280
and

1458
00:56:13,280 --> 00:56:15,680
if you consider how many

1459
00:56:15,680 --> 00:56:17,440
domains have this property of all name

1460
00:56:17,440 --> 00:56:19,040
servers in secure zones and at the same

1461
00:56:19,040 --> 00:56:22,160
time the domain isn't secure yet itself

1462
00:56:22,160 --> 00:56:24,880
and then you get that around 22 or 23

1463
00:56:24,880 --> 00:56:25,680
are

1464
00:56:25,680 --> 00:56:28,160
bootstrappable which is a very uh i

1465
00:56:28,160 --> 00:56:30,720
think inspiring finding we also brought

1466
00:56:30,720 --> 00:56:31,680
this down

1467
00:56:31,680 --> 00:56:34,880
by um top level domain and by provider

1468
00:56:34,880 --> 00:56:36,559
um so you can see for example that of

1469
00:56:36,559 --> 00:56:38,400
the dot com domains 23 are

1470
00:56:38,400 --> 00:56:40,960
bootstrappable which is 120 000 and the

1471
00:56:40,960 --> 00:56:42,640
numbers are not as large obviously but

1472
00:56:42,640 --> 00:56:44,400
still i would say significant for other

1473
00:56:44,400 --> 00:56:46,799
tlds and then by provider we looked at

1474
00:56:46,799 --> 00:56:48,400
the um

1475
00:56:48,400 --> 00:56:52,079
the name server zones soar name field

1476
00:56:52,079 --> 00:56:52,990
and if there is

1477
00:56:52,990 --> 00:56:55,119
[Music]

1478
00:56:55,119 --> 00:56:57,040
if this was non-ambiguous then we put it

1479
00:56:57,040 --> 00:56:58,400
here and you can see that cloudflare for

1480
00:56:58,400 --> 00:57:00,640
example has 250 000 domains amongst the

1481
00:57:00,640 --> 00:57:02,640
top million 76 of which are

1482
00:57:02,640 --> 00:57:05,440
bootstrappable um so that's around 190

1483
00:57:05,440 --> 00:57:07,119
000 which is also

1484
00:57:07,119 --> 00:57:10,319
a number with high potential impact

1485
00:57:10,319 --> 00:57:12,400
here's the slide on um whether we want

1486
00:57:12,400 --> 00:57:14,240
the hash label or not i'll first talk

1487
00:57:14,240 --> 00:57:16,000
about um what

1488
00:57:16,000 --> 00:57:17,520
are the pro arguments because it's

1489
00:57:17,520 --> 00:57:18,880
currently in the draft and i want to

1490
00:57:18,880 --> 00:57:21,200
explain why it's in the draft um i have

1491
00:57:21,200 --> 00:57:23,520
personally no stakes at all and it would

1492
00:57:23,520 --> 00:57:25,280
be

1493
00:57:25,280 --> 00:57:27,359
inappropriate obviously as i will also

1494
00:57:27,359 --> 00:57:29,280
uh say the the

1495
00:57:29,280 --> 00:57:31,440
against arguments but only afterwards

1496
00:57:31,440 --> 00:57:34,000
so i guess please hash please um are the

1497
00:57:34,000 --> 00:57:36,400
arguments for hashing um so it helps

1498
00:57:36,400 --> 00:57:37,839
staying within the limits

1499
00:57:37,839 --> 00:57:39,280
especially length limits and number of

1500
00:57:39,280 --> 00:57:40,640
labels limits so you get a more

1501
00:57:40,640 --> 00:57:42,480
predictable number of octets you expand

1502
00:57:42,480 --> 00:57:45,200
on the the ancestor that may help reduce

1503
00:57:45,200 --> 00:57:46,799
number of edge cases

1504
00:57:46,799 --> 00:57:48,640
there is also an ambiguity if you have

1505
00:57:48,640 --> 00:57:50,799
um

1506
00:57:50,799 --> 00:57:52,400
a domain for delegation with multiple

1507
00:57:52,400 --> 00:57:54,160
layers like

1508
00:57:54,160 --> 00:57:56,880
multiple labels like food.bar.net and if

1509
00:57:56,880 --> 00:57:58,799
you have a delegation here at bar then

1510
00:57:58,799 --> 00:58:01,599
there are cds records which show up

1511
00:58:01,599 --> 00:58:03,680
for that delegation itself of the

1512
00:58:03,680 --> 00:58:06,160
bar.net underscore boot zone and that

1513
00:58:06,160 --> 00:58:08,559
could be ambiguous because it could also

1514
00:58:08,559 --> 00:58:10,400
signify the bootstrapping records for

1515
00:58:10,400 --> 00:58:11,680
bar.net

1516
00:58:11,680 --> 00:58:13,119
which is different

1517
00:58:13,119 --> 00:58:14,559
and

1518
00:58:14,559 --> 00:58:15,760
there are some other implications of

1519
00:58:15,760 --> 00:58:17,520
that and i would like to probably take

1520
00:58:17,520 --> 00:58:18,799
this particular point to the mailing

1521
00:58:18,799 --> 00:58:20,400
list

1522
00:58:20,400 --> 00:58:21,839
then it also improves privacy during

1523
00:58:21,839 --> 00:58:24,240
discovery um because um to do an insect

1524
00:58:24,240 --> 00:58:26,160
walk you need to know the hash of the

1525
00:58:26,160 --> 00:58:28,160
parent uh so if you have some private

1526
00:58:28,160 --> 00:58:30,240
enterprise domain for example nobody

1527
00:58:30,240 --> 00:58:31,839
would reasonably be able to do an insect

1528
00:58:31,839 --> 00:58:34,400
walk if they don't know where to start

1529
00:58:34,400 --> 00:58:36,240
um and it gives you a flat structure

1530
00:58:36,240 --> 00:58:38,079
which may simplify the scanning logic if

1531
00:58:38,079 --> 00:58:39,680
you for example know ahead of time that

1532
00:58:39,680 --> 00:58:41,920
you only have two

1533
00:58:41,920 --> 00:58:44,319
labels here in all cases

1534
00:58:44,319 --> 00:58:46,319
um and

1535
00:58:46,319 --> 00:58:47,760
in case um

1536
00:58:47,760 --> 00:58:49,200
so that's an idea i just had i don't

1537
00:58:49,200 --> 00:58:50,960
know if that's reasonable at all but one

1538
00:58:50,960 --> 00:58:53,599
could say that one should have a more

1539
00:58:53,599 --> 00:58:55,440
general signaling mechanism so it's

1540
00:58:55,440 --> 00:58:57,280
called underscore signal not underscore

1541
00:58:57,280 --> 00:59:00,480
boot and then the specific signal would

1542
00:59:00,480 --> 00:59:02,400
be specified as a prefix just like the

1543
00:59:02,400 --> 00:59:04,400
properties for the catalog zones we

1544
00:59:04,400 --> 00:59:06,559
underscore cds for example

1545
00:59:06,559 --> 00:59:08,720
and um yeah so

1546
00:59:08,720 --> 00:59:10,559
in case you would have multiple prefixes

1547
00:59:10,559 --> 00:59:12,880
like in the case of srv records or

1548
00:59:12,880 --> 00:59:16,319
something it would be better if if um

1549
00:59:16,319 --> 00:59:18,000
the number of labels here is pretty

1550
00:59:18,000 --> 00:59:20,240
predictable but it's just a thought i'm

1551
00:59:20,240 --> 00:59:21,440
not saying this is a very strong

1552
00:59:21,440 --> 00:59:23,040
argument

1553
00:59:23,040 --> 00:59:25,200
counter arguments are um to smash the

1554
00:59:25,200 --> 00:59:26,079
hash

1555
00:59:26,079 --> 00:59:28,240
and um so obviously it has complicated

1556
00:59:28,240 --> 00:59:29,839
implementation all cooling needs to be

1557
00:59:29,839 --> 00:59:31,119
able to hash

1558
00:59:31,119 --> 00:59:32,720
makes debugging more difficult you can't

1559
00:59:32,720 --> 00:59:34,160
just use dig

1560
00:59:34,160 --> 00:59:36,079
you need to get the hash somewhere and

1561
00:59:36,079 --> 00:59:38,400
also i think most notably it was pointed

1562
00:59:38,400 --> 00:59:39,680
out that

1563
00:59:39,680 --> 00:59:41,520
synthesis is more difficult if you have

1564
00:59:41,520 --> 00:59:43,599
a hash because imagine

1565
00:59:43,599 --> 00:59:46,160
a request comes in for example.samh and

1566
00:59:46,160 --> 00:59:48,240
you would like to dynamically serve cds

1567
00:59:48,240 --> 00:59:49,920
records for that you somehow need to

1568
00:59:49,920 --> 00:59:51,839
look up what the corresponding target

1569
00:59:51,839 --> 00:59:53,200
domain is from which to take those

1570
00:59:53,200 --> 00:59:55,839
records so you need a mapping

1571
00:59:55,839 --> 00:59:57,680
but you need that for the ancestors only

1572
00:59:57,680 --> 00:59:59,280
so probably the number of mapping

1573
00:59:59,280 --> 01:00:00,960
entries you need is few so you wouldn't

1574
01:00:00,960 --> 01:00:02,720
need it for example that's the order uk

1575
01:00:02,720 --> 01:00:04,480
you would only need it for co2k in this

1576
01:00:04,480 --> 01:00:06,079
case

1577
01:00:06,079 --> 01:00:08,720
also for those who like um

1578
01:00:08,720 --> 01:00:11,599
let's say a special fetish for weird

1579
01:00:11,599 --> 01:00:13,440
implementations you could probably do

1580
01:00:13,440 --> 01:00:15,520
this with a dname record i know there's

1581
01:00:15,520 --> 01:00:17,440
implementation problems

1582
01:00:17,440 --> 01:00:20,000
so it's a half serious um idea it's

1583
01:00:20,000 --> 01:00:22,000
cashable but per parent

1584
01:00:22,000 --> 01:00:23,599
so it wouldn't be

1585
01:00:23,599 --> 01:00:27,119
much of an extra performance penalty

1586
01:00:27,119 --> 01:00:28,640
um yeah so the question is whether the

1587
01:00:28,640 --> 01:00:32,160
benefits justify the added complexity

1588
01:00:32,160 --> 01:00:33,520
so what now we have a signaling

1589
01:00:33,520 --> 01:00:35,520
mechanism of zone specific information

1590
01:00:35,520 --> 01:00:38,079
from the an s operator to the public

1591
01:00:38,079 --> 01:00:40,240
it's authenticated in banned immediate

1592
01:00:40,240 --> 01:00:42,400
and requires no third parties

1593
01:00:42,400 --> 01:00:44,319
um we propose to use it for

1594
01:00:44,319 --> 01:00:47,119
authenticating cbs and cdnsk records

1595
01:00:47,119 --> 01:00:48,480
some people have

1596
01:00:48,480 --> 01:00:49,839
expressed interest and i think the

1597
01:00:49,839 --> 01:00:51,920
potential

1598
01:00:51,920 --> 01:00:53,520
is quite high given the numbers i showed

1599
01:00:53,520 --> 01:00:54,720
earlier

1600
01:00:54,720 --> 01:00:56,160
and perhaps there will be other uses in

1601
01:00:56,160 --> 01:00:57,920
the future um for multicenter key

1602
01:00:57,920 --> 01:01:00,480
exchange for example there was an idea

1603
01:01:00,480 --> 01:01:01,920
um we need to settle on the naming

1604
01:01:01,920 --> 01:01:03,839
scheme to hash or not to hash that's the

1605
01:01:03,839 --> 01:01:05,040
question

1606
01:01:05,040 --> 01:01:06,880
and um if that's something that the

1607
01:01:06,880 --> 01:01:08,559
working group would like to get involved

1608
01:01:08,559 --> 01:01:10,799
with and finds it interesting

1609
01:01:10,799 --> 01:01:11,599
then

1610
01:01:11,599 --> 01:01:13,920
we would be glad if the group considered

1611
01:01:13,920 --> 01:01:16,799
adopting this draft

1612
01:01:17,920 --> 01:01:20,240
thank you

1613
01:01:20,400 --> 01:01:21,839
thank you peter

1614
01:01:21,839 --> 01:01:25,200
we are right on the end of the of the

1615
01:01:25,200 --> 01:01:27,839
session excuses oh sorry

1616
01:01:27,839 --> 01:01:30,000
um still i want to give the opportunity

1617
01:01:30,000 --> 01:01:32,000
to

1618
01:01:32,000 --> 01:01:36,599
give feedback people from the room

1619
01:01:40,640 --> 01:01:43,040
victor please go ahead

1620
01:01:43,040 --> 01:01:46,079
fantastic work let's adopt it uh without

1621
01:01:46,079 --> 01:01:48,559
the hashing

1622
01:01:48,559 --> 01:01:50,880
okay thank you so it was also on the

1623
01:01:50,880 --> 01:01:53,520
mailing list uh oh sorry paul please go

1624
01:01:53,520 --> 01:01:57,038
ahead as i saw your name

1625
01:01:57,440 --> 01:01:59,119
yeah you did the wrong but i did the

1626
01:01:59,119 --> 01:02:01,280
wrong button i'm sorry um i also just

1627
01:02:01,280 --> 01:02:03,359
want to say um because i've given a lot

1628
01:02:03,359 --> 01:02:05,520
of comments about the small bits of the

1629
01:02:05,520 --> 01:02:07,760
proposal i did not like um let me just

1630
01:02:07,760 --> 01:02:09,200
emphasize as well that the majority of

1631
01:02:09,200 --> 01:02:10,720
your proposal is awesome and i think we

1632
01:02:10,720 --> 01:02:12,720
should adopt it and continue with it

1633
01:02:12,720 --> 01:02:15,599
okay yeah yeah i did see feedback on the

1634
01:02:15,599 --> 01:02:17,359
mailing list

1635
01:02:17,359 --> 01:02:20,480
so there's interest in the working group

1636
01:02:20,480 --> 01:02:23,039
i also hear support in the

1637
01:02:23,039 --> 01:02:25,920
working group here live

1638
01:02:25,920 --> 01:02:28,640
so peter as you

1639
01:02:28,640 --> 01:02:30,799
might remember yesterday i'm not sure

1640
01:02:30,799 --> 01:02:32,880
you were able to attend to the opening

1641
01:02:32,880 --> 01:02:35,520
of the dinosaur session

1642
01:02:35,520 --> 01:02:37,039
we did

1643
01:02:37,039 --> 01:02:40,079
yeah we okay so we we are accepting new

1644
01:02:40,079 --> 01:02:41,359
work

1645
01:02:41,359 --> 01:02:44,160
and i will switch on my microphone

1646
01:02:44,160 --> 01:02:46,400
so we are adopting new work

1647
01:02:46,400 --> 01:02:50,160
uh but uh in a controlled way so um the

1648
01:02:50,160 --> 01:02:52,799
chairs will reach out to you

1649
01:02:52,799 --> 01:02:55,839
and uh given the work we are now

1650
01:02:55,839 --> 01:02:58,400
finishing completing and uh sending to

1651
01:02:58,400 --> 01:03:00,480
the isg for review

1652
01:03:00,480 --> 01:03:03,359
also new work is adopted uh you are you

1653
01:03:03,359 --> 01:03:06,000
are on the shortlist but again uh

1654
01:03:06,000 --> 01:03:08,160
yeah uh we will discuss it with the

1655
01:03:08,160 --> 01:03:09,599
chairs and with you

1656
01:03:09,599 --> 01:03:12,160
and making uh yeah estimation of amount

1657
01:03:12,160 --> 01:03:14,880
of work and work and manage the work

1658
01:03:14,880 --> 01:03:17,520
group load

1659
01:03:17,520 --> 01:03:20,880
suzanne tim sorry peter you want to

1660
01:03:20,880 --> 01:03:22,480
add something

1661
01:03:22,480 --> 01:03:24,640
not really i just wanted to thank

1662
01:03:24,640 --> 01:03:26,240
everyone who chimed in on the hashing

1663
01:03:26,240 --> 01:03:27,760
discussion

1664
01:03:27,760 --> 01:03:28,880
because that's obviously the most

1665
01:03:28,880 --> 01:03:31,599
valuable type of feedback okay

1666
01:03:31,599 --> 01:03:33,839
thank you for your presentation and your

1667
01:03:33,839 --> 01:03:35,680
contribution

1668
01:03:35,680 --> 01:03:37,680
suzanne please

1669
01:03:37,680 --> 01:03:39,440
sure um just wanted to say thanks to

1670
01:03:39,440 --> 01:03:41,039
everybody and

1671
01:03:41,039 --> 01:03:44,160
just remind people that we had tried a

1672
01:03:44,160 --> 01:03:45,520
couple of things with

1673
01:03:45,520 --> 01:03:47,520
reporting more to the working group

1674
01:03:47,520 --> 01:03:49,760
and running interim meetings between

1675
01:03:49,760 --> 01:03:53,200
ietf week meetings and those seem to be

1676
01:03:53,200 --> 01:03:54,799
successful and helpful to everybody so

1677
01:03:54,799 --> 01:03:56,160
we're going to continue to do those

1678
01:03:56,160 --> 01:04:00,079
things and watch for

1679
01:04:00,079 --> 01:04:01,920
questions about proposed dates and

1680
01:04:01,920 --> 01:04:04,640
proposed agendas for the next interim

1681
01:04:04,640 --> 01:04:05,680
yeah

1682
01:04:05,680 --> 01:04:07,200
indeed thank you

1683
01:04:07,200 --> 01:04:09,920
i would like to thank you the working

1684
01:04:09,920 --> 01:04:11,599
group for your

1685
01:04:11,599 --> 01:04:14,400
well positive discussions really good i

1686
01:04:14,400 --> 01:04:16,240
really enjoyed the sessions from today

1687
01:04:16,240 --> 01:04:18,799
and yesterday please continue discussing

1688
01:04:18,799 --> 01:04:21,599
these issues on the mailing list

1689
01:04:21,599 --> 01:04:23,680
and also excuses we're running out of

1690
01:04:23,680 --> 01:04:27,039
well four times four times four minutes

1691
01:04:27,039 --> 01:04:29,760
uh beyond the time

1692
01:04:29,760 --> 01:04:32,400
well time slot we were allocated so it

1693
01:04:32,400 --> 01:04:35,280
might clash with your agenda excuses

1694
01:04:35,280 --> 01:04:36,960
but again i think we had a very good

1695
01:04:36,960 --> 01:04:38,480
session

1696
01:04:38,480 --> 01:04:41,280
thank you all see you at one of the

1697
01:04:41,280 --> 01:04:43,200
interims we are planning uh in the next

1698
01:04:43,200 --> 01:04:44,160
month

1699
01:04:44,160 --> 01:04:46,559
and for the next itf

1700
01:04:46,559 --> 01:04:49,119
113

1701
01:04:49,119 --> 01:04:52,119
bye

