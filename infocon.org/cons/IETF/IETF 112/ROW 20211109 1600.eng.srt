1
00:00:04,960 --> 00:00:07,600
chair slots

2
00:00:08,080 --> 00:00:09,120
okay

3
00:00:09,120 --> 00:00:13,200
oops sorry it's itf 112.

4
00:00:14,000 --> 00:00:15,280
you can catch the chair who copies and

5
00:00:15,280 --> 00:00:18,240
pastes the slides from last meeting um

6
00:00:18,240 --> 00:00:20,480
that's me not joke uh i'm chris the

7
00:00:20,480 --> 00:00:24,880
other guy is uh joe or yop if you prefer

8
00:00:24,880 --> 00:00:27,599
uh this is itf 112 we're

9
00:00:27,599 --> 00:00:31,119
somewhere in the eu time zone um

10
00:00:31,119 --> 00:00:32,719
i think we're supposed to be in madrid

11
00:00:32,719 --> 00:00:34,000
here's the note well everyone knows

12
00:00:34,000 --> 00:00:36,000
where to find this you should read this

13
00:00:36,000 --> 00:00:37,920
eye chart but it's probably not i chart

14
00:00:37,920 --> 00:00:41,040
on your computer so you can read it

15
00:00:41,120 --> 00:00:42,800
all of our resources are available also

16
00:00:42,800 --> 00:00:44,640
at austria wherever it says 111 should

17
00:00:44,640 --> 00:00:46,800
say 112. boy i'm

18
00:00:46,800 --> 00:00:48,399
gonna hear about this later

19
00:00:48,399 --> 00:00:50,559
um all the slides should be updated on

20
00:00:50,559 --> 00:00:52,719
the meeting materials page fortunately

21
00:00:52,719 --> 00:00:54,239
medico has a little quick link for that

22
00:00:54,239 --> 00:00:56,000
which is super nice

23
00:00:56,000 --> 00:00:59,199
thanks to the medico folks

24
00:00:59,199 --> 00:01:00,800
uh blue sheets we don't have to do any

25
00:01:00,800 --> 00:01:03,520
more that's taken care of in the medico

26
00:01:03,520 --> 00:01:05,519
thing we do need a minute sticker so if

27
00:01:05,519 --> 00:01:06,640
someone wants to volunteer to take

28
00:01:06,640 --> 00:01:09,680
minutes that would be terrific

29
00:01:11,200 --> 00:01:12,880
i thought i didn't make the display any

30
00:01:12,880 --> 00:01:15,360
better did it

31
00:01:15,360 --> 00:01:17,679
all right

32
00:01:18,479 --> 00:01:20,080
i can't tell if it makes any better or

33
00:01:20,080 --> 00:01:22,400
not anyway um

34
00:01:22,400 --> 00:01:24,320
so until somebody speaks up and says

35
00:01:24,320 --> 00:01:28,798
i'll do the minutes we're going to wait

36
00:01:30,880 --> 00:01:32,400
the jabra scribe is the jabber room

37
00:01:32,400 --> 00:01:34,159
which automatically gets caught up for

38
00:01:34,159 --> 00:01:34,880
us

39
00:01:34,880 --> 00:01:35,920
or is the in

40
00:01:35,920 --> 00:01:40,360
in midiko chat i mean oh

41
00:01:51,200 --> 00:01:52,799
ah

42
00:01:52,799 --> 00:01:55,280
i think mr holliman is telling me ah

43
00:01:55,280 --> 00:01:57,200
joel will do the minutes terrific he's a

44
00:01:57,200 --> 00:01:58,799
great minute sticker

45
00:01:58,799 --> 00:02:00,240
mike holliman

46
00:02:00,240 --> 00:02:01,759
perhaps has a link that will tell us how

47
00:02:01,759 --> 00:02:03,759
to use the

48
00:02:03,759 --> 00:02:05,520
share slides for next time

49
00:02:05,520 --> 00:02:07,600
um

50
00:02:07,600 --> 00:02:10,160
agenda bashing charter update oh we're

51
00:02:10,160 --> 00:02:12,560
no charter update this time sorry

52
00:02:12,560 --> 00:02:14,000
here's our agenda

53
00:02:14,000 --> 00:02:16,480
we have some tlb stuff for bmp from

54
00:02:16,480 --> 00:02:19,040
paolo an update to his document uh five

55
00:02:19,040 --> 00:02:20,800
or ten minutes worth of chat time and

56
00:02:20,800 --> 00:02:23,520
then edward uh has an on-hose load

57
00:02:23,520 --> 00:02:25,520
balancing for telemetry conversation to

58
00:02:25,520 --> 00:02:28,000
have some research work i believe

59
00:02:28,000 --> 00:02:30,640
he and

60
00:02:30,640 --> 00:02:31,680
thomas

61
00:02:31,680 --> 00:02:32,560
uh

62
00:02:32,560 --> 00:02:35,599
did in the in the hackathon i think

63
00:02:35,599 --> 00:02:36,959
i could be mistaken about the hackathon

64
00:02:36,959 --> 00:02:38,480
part

65
00:02:38,480 --> 00:02:40,160
please feel free to correct me edward

66
00:02:40,160 --> 00:02:41,120
when you

67
00:02:41,120 --> 00:02:42,720
get up

68
00:02:42,720 --> 00:02:45,360
i think at this point

69
00:02:45,360 --> 00:02:47,680
we're not finished it's time for paulo

70
00:02:47,680 --> 00:02:48,400
so

71
00:02:48,400 --> 00:02:50,000
unless there's any questions we want to

72
00:02:50,000 --> 00:02:51,599
get out of the way

73
00:02:51,599 --> 00:02:53,519
first

74
00:02:53,519 --> 00:02:54,560
give people a couple minutes while i

75
00:02:54,560 --> 00:02:56,879
find the slide deck or paulo you can do

76
00:02:56,879 --> 00:02:59,280
the slide deck yourself if you prefer

77
00:02:59,280 --> 00:03:00,959
just do the screen cherry thing and

78
00:03:00,959 --> 00:03:01,920
we'll

79
00:03:01,920 --> 00:03:04,959
oh i i prefer if you can share the deck

80
00:03:04,959 --> 00:03:07,599
that i sent just because i have troubles

81
00:03:07,599 --> 00:03:10,560
sharing my screen with me deco yeah no

82
00:03:10,560 --> 00:03:12,879
problem

83
00:03:13,440 --> 00:03:15,360
and uh

84
00:03:15,360 --> 00:03:17,440
screaming

85
00:03:17,440 --> 00:03:18,400
video

86
00:03:18,400 --> 00:03:22,080
so that you can look at me as well

87
00:03:22,080 --> 00:03:23,920
okay let me give you a second to go get

88
00:03:23,920 --> 00:03:27,120
the right set of slides going sure

89
00:03:27,120 --> 00:03:29,680
share screen

90
00:03:33,280 --> 00:03:35,760
and hopefully i i did the copy paste

91
00:03:35,760 --> 00:03:37,760
better than you guys

92
00:03:37,760 --> 00:03:39,200
maybe i mean it's

93
00:03:39,200 --> 00:03:41,679
honestly

94
00:03:41,760 --> 00:03:43,440
gonna be easy to do that better than me

95
00:03:43,440 --> 00:03:46,239
for sure

96
00:03:46,239 --> 00:03:49,440
all right let me uh

97
00:03:49,519 --> 00:03:51,840
also i suck at webbing my son tells me

98
00:03:51,840 --> 00:03:54,400
all the time

99
00:03:59,760 --> 00:04:00,640
all right

100
00:04:00,640 --> 00:04:02,319
okay

101
00:04:02,319 --> 00:04:05,120
so yeah and so um

102
00:04:05,120 --> 00:04:08,640
i can start um yeah five minutes about

103
00:04:08,640 --> 00:04:11,920
um tld's for route monitoring and peer

104
00:04:11,920 --> 00:04:13,360
down messages

105
00:04:13,360 --> 00:04:14,560
um

106
00:04:14,560 --> 00:04:17,440
it's just a very quick update um so if

107
00:04:17,440 --> 00:04:20,560
you can go to the next slide already

108
00:04:20,560 --> 00:04:22,479
uh very

109
00:04:22,479 --> 00:04:25,520
short recap what the draft is doing is

110
00:04:25,520 --> 00:04:28,479
that like not every uh

111
00:04:28,479 --> 00:04:31,360
bmp message does support the tlds and so

112
00:04:31,360 --> 00:04:33,919
essentially and so namely the root

113
00:04:33,919 --> 00:04:35,520
monitoring and the peer down so we

114
00:04:35,520 --> 00:04:36,800
wanted to add

115
00:04:36,800 --> 00:04:39,120
that support and in order to do that we

116
00:04:39,120 --> 00:04:40,800
are bumping the version to version

117
00:04:40,800 --> 00:04:44,960
number four next slide please

118
00:04:45,680 --> 00:04:47,840
still as a recap

119
00:04:47,840 --> 00:04:49,840
so as you will see it's a two slice of

120
00:04:49,840 --> 00:04:52,560
recap and one slide of content so

121
00:04:52,560 --> 00:04:55,280
um we have a generic

122
00:04:55,280 --> 00:04:58,800
and indexed tlds so generic tlds is just

123
00:04:58,800 --> 00:05:01,919
the tlv of all all your life uh doesn't

124
00:05:01,919 --> 00:05:04,320
need to have any explanation

125
00:05:04,320 --> 00:05:07,759
whereas the indexes the tlv uh is the

126
00:05:07,759 --> 00:05:11,280
tld but you have also that one index

127
00:05:11,280 --> 00:05:15,360
field after the length okay um so why

128
00:05:15,360 --> 00:05:18,080
the indexed tlp is needed in the end it

129
00:05:18,080 --> 00:05:20,080
is needed for uh root monitoring

130
00:05:20,080 --> 00:05:22,560
messages right so we took a kind of a

131
00:05:22,560 --> 00:05:25,280
scenic route on saying

132
00:05:25,280 --> 00:05:29,120
what do we do if we have a tlv routine

133
00:05:29,120 --> 00:05:30,960
route monitoring message whether we want

134
00:05:30,960 --> 00:05:33,840
to address the whole uh you know all the

135
00:05:33,840 --> 00:05:36,800
nlris that we find in the

136
00:05:36,800 --> 00:05:40,080
in the bgp message encoded you know in

137
00:05:40,080 --> 00:05:42,479
the uh root monitor message or whether

138
00:05:42,479 --> 00:05:45,759
we want to address just one specific or

139
00:05:45,759 --> 00:05:49,039
uh you know an lri right so the index

140
00:05:49,039 --> 00:05:53,600
comes from that need so next slide

141
00:05:53,600 --> 00:05:54,880
and

142
00:05:54,880 --> 00:05:56,960
essentially so what we did and that's

143
00:05:56,960 --> 00:05:59,440
the only change that it's in revision

144
00:05:59,440 --> 00:06:02,240
number six is that like is if the index

145
00:06:02,240 --> 00:06:05,759
is zero then it means that uh

146
00:06:05,759 --> 00:06:06,479
the

147
00:06:06,479 --> 00:06:09,440
tlv does apply to the whole uh

148
00:06:09,440 --> 00:06:12,639
bgp message or otherwise if it's a

149
00:06:12,639 --> 00:06:15,120
positive number then it

150
00:06:15,120 --> 00:06:18,720
applies to a specific nlri so very

151
00:06:18,720 --> 00:06:20,479
simple in concept

152
00:06:20,479 --> 00:06:22,720
um i would say

153
00:06:22,720 --> 00:06:24,880
this is the only change that we did and

154
00:06:24,880 --> 00:06:28,400
i think that was the only outstanding

155
00:06:28,400 --> 00:06:30,319
you know piece of work that really

156
00:06:30,319 --> 00:06:32,560
needed to be done

157
00:06:32,560 --> 00:06:34,720
um i don't know if anybody has some

158
00:06:34,720 --> 00:06:36,720
feedback i mean i anticipated this

159
00:06:36,720 --> 00:06:40,560
change already uh in the previous uh itf

160
00:06:40,560 --> 00:06:42,560
meeting so we had a couple of options

161
00:06:42,560 --> 00:06:45,199
and this kind of looked uh the most

162
00:06:45,199 --> 00:06:46,240
natural

163
00:06:46,240 --> 00:06:49,039
uh for us authors and also i received

164
00:06:49,039 --> 00:06:52,080
some feedback and uh it seemed you know

165
00:06:52,080 --> 00:06:55,440
kind of consensus to go down this way

166
00:06:55,440 --> 00:06:57,759
um i don't know if there is any feedback

167
00:06:57,759 --> 00:07:00,160
you know from anybody in the audience

168
00:07:00,160 --> 00:07:01,680
otherwise

169
00:07:01,680 --> 00:07:03,120
if not

170
00:07:03,120 --> 00:07:06,000
i would say for the chairs like this

171
00:07:06,000 --> 00:07:10,319
seems to be a kind of don't work

172
00:07:10,319 --> 00:07:12,400
and maybe we can

173
00:07:12,400 --> 00:07:14,479
last call it or

174
00:07:14,479 --> 00:07:16,400
something like that

175
00:07:16,400 --> 00:07:18,479
and move forward

176
00:07:18,479 --> 00:07:20,800
thank you

177
00:07:22,000 --> 00:07:24,560
thank you i think it um if you are uh

178
00:07:24,560 --> 00:07:26,080
asking for work group last call you

179
00:07:26,080 --> 00:07:27,759
should definitely make a comment on the

180
00:07:27,759 --> 00:07:29,919
mailing list so people

181
00:07:29,919 --> 00:07:32,639
can speak up as a standard chairs always

182
00:07:32,639 --> 00:07:34,000
say this thing

183
00:07:34,000 --> 00:07:37,280
fantastic we'll do that after this okay

184
00:07:37,280 --> 00:07:38,639
uh

185
00:07:38,639 --> 00:07:40,000
other than that thanks for the

186
00:07:40,000 --> 00:07:43,120
presentation and thank you thank you if

187
00:07:43,120 --> 00:07:44,319
no one else has

188
00:07:44,319 --> 00:07:45,759
put their hand up to say anything so i

189
00:07:45,759 --> 00:07:47,840
think

190
00:07:47,840 --> 00:07:49,280
definitely put your message forward

191
00:07:49,280 --> 00:07:50,639
please make a work real ass call for

192
00:07:50,639 --> 00:07:52,639
this now now now

193
00:07:52,639 --> 00:07:54,240
fantastic we'll do that thank you thank

194
00:07:54,240 --> 00:07:56,240
you very much

195
00:07:56,240 --> 00:08:00,479
uh edward do you want to uh run your own

196
00:08:00,479 --> 00:08:02,879
slides or do you want me to

197
00:08:02,879 --> 00:08:06,160
or somebody else to run them for you

198
00:08:06,160 --> 00:08:08,319
uh i think i'll i'll try it on my own

199
00:08:08,319 --> 00:08:10,400
we'll see how it goes um okay

200
00:08:10,400 --> 00:08:13,280
unfortunately the the test room uh from

201
00:08:13,280 --> 00:08:15,759
me deco was down so

202
00:08:15,759 --> 00:08:17,360
let's see how this goes

203
00:08:17,360 --> 00:08:18,639
all right

204
00:08:18,639 --> 00:08:21,759
all right audio is perfect

205
00:08:21,759 --> 00:08:23,039
yeah

206
00:08:23,039 --> 00:08:24,319
let's see

207
00:08:24,319 --> 00:08:28,879
screen requested granted

208
00:08:30,400 --> 00:08:32,639
yes

209
00:08:32,719 --> 00:08:33,839
yes

210
00:08:33,839 --> 00:08:34,719
and

211
00:08:34,719 --> 00:08:36,958
okay

212
00:08:36,958 --> 00:08:39,039
it looks to me like you all should be

213
00:08:39,039 --> 00:08:41,039
seeing it

214
00:08:41,039 --> 00:08:44,880
it's just a lame title slide

215
00:08:46,080 --> 00:08:47,839
is that

216
00:08:47,839 --> 00:08:50,080
can anyone see it

217
00:08:50,080 --> 00:08:52,080
looks great yes

218
00:08:52,080 --> 00:08:53,519
okay awesome in that case let me get

219
00:08:53,519 --> 00:08:54,560
started

220
00:08:54,560 --> 00:08:56,720
so uh the context of so this is uh

221
00:08:56,720 --> 00:08:58,080
compared to the previous stuff there's a

222
00:08:58,080 --> 00:09:00,560
bit more academic work the context was a

223
00:09:00,560 --> 00:09:01,519
was a

224
00:09:01,519 --> 00:09:03,839
master's thesis in this case

225
00:09:03,839 --> 00:09:07,040
um thomas was so kind as to supervise

226
00:09:07,040 --> 00:09:09,120
the whole thing and pierre also on this

227
00:09:09,120 --> 00:09:12,000
call was also providing tons of help so

228
00:09:12,000 --> 00:09:14,240
thanks to them upfront

229
00:09:14,240 --> 00:09:18,160
so uh let me get started then

230
00:09:20,160 --> 00:09:21,040
so

231
00:09:21,040 --> 00:09:23,600
um

232
00:09:23,600 --> 00:09:25,519
the the context for this whole thing is

233
00:09:25,519 --> 00:09:28,880
the notion of device telemetry right

234
00:09:28,880 --> 00:09:32,560
and what we want is to

235
00:09:33,600 --> 00:09:34,320
to

236
00:09:34,320 --> 00:09:35,680
to understand the networks we want to

237
00:09:35,680 --> 00:09:38,399
combine different perspectives from from

238
00:09:38,399 --> 00:09:40,000
basically combined information from

239
00:09:40,000 --> 00:09:41,360
various angles

240
00:09:41,360 --> 00:09:42,800
so specifically we

241
00:09:42,800 --> 00:09:45,440
might want to um extract information

242
00:09:45,440 --> 00:09:47,600
about whether a certain flow belongs to

243
00:09:47,600 --> 00:09:50,640
like a specific vpn by

244
00:09:50,640 --> 00:09:52,959
combining a control plane and for

245
00:09:52,959 --> 00:09:55,120
avoiding plane information

246
00:09:55,120 --> 00:09:56,720
and the way we obtain that information

247
00:09:56,720 --> 00:09:59,279
in the first place is via like network

248
00:09:59,279 --> 00:10:01,680
telemetry protocols and

249
00:10:01,680 --> 00:10:03,920
these can be various things right it can

250
00:10:03,920 --> 00:10:04,880
be

251
00:10:04,880 --> 00:10:08,560
it can be um bmp for

252
00:10:08,560 --> 00:10:10,959
well for for bgp type information right

253
00:10:10,959 --> 00:10:14,399
ipfix for for flow information or like

254
00:10:14,399 --> 00:10:15,920
yang push for

255
00:10:15,920 --> 00:10:19,120
for device level stuff

256
00:10:19,120 --> 00:10:22,320
so to collect that information at all

257
00:10:22,320 --> 00:10:24,880
we need to um

258
00:10:24,880 --> 00:10:26,560
basically make sure that it gets routed

259
00:10:26,560 --> 00:10:28,399
to the to the right place from across

260
00:10:28,399 --> 00:10:30,800
the network

261
00:10:30,800 --> 00:10:34,560
so ideally we just define a single um

262
00:10:34,560 --> 00:10:37,920
globally uh globally unique uh end point

263
00:10:37,920 --> 00:10:39,600
and just rather anything there luckily

264
00:10:39,600 --> 00:10:41,680
that also allows us to use anycast for

265
00:10:41,680 --> 00:10:42,959
the original

266
00:10:42,959 --> 00:10:44,959
for the originalization path

267
00:10:44,959 --> 00:10:47,680
part we can just ecmp balance across

268
00:10:47,680 --> 00:10:48,800
there

269
00:10:48,800 --> 00:10:50,880
and um

270
00:10:50,880 --> 00:10:53,120
finally once once the traffic actually

271
00:10:53,120 --> 00:10:56,079
actually hits our machine vm whatever

272
00:10:56,079 --> 00:10:58,000
this is where things become interesting

273
00:10:58,000 --> 00:10:59,680
and we actually need to balance among

274
00:10:59,680 --> 00:11:02,240
different processes and the challenge

275
00:11:02,240 --> 00:11:05,200
here is primarily from a

276
00:11:05,200 --> 00:11:07,120
administrative and

277
00:11:07,120 --> 00:11:09,600
like local performance perspective right

278
00:11:09,600 --> 00:11:11,120
because

279
00:11:11,120 --> 00:11:13,519
getting it to work somehow is

280
00:11:13,519 --> 00:11:15,600
easy enough it's more like in terms of

281
00:11:15,600 --> 00:11:18,240
making it work efficiently

282
00:11:18,240 --> 00:11:19,839
so um

283
00:11:19,839 --> 00:11:22,160
in the context of this work

284
00:11:22,160 --> 00:11:23,519
you have to imagine we have like a

285
00:11:23,519 --> 00:11:25,120
network with

286
00:11:25,120 --> 00:11:27,040
routers pushing information to like some

287
00:11:27,040 --> 00:11:29,440
sort of a host

288
00:11:29,440 --> 00:11:30,880
the the main

289
00:11:30,880 --> 00:11:32,800
interesting part here is that to combine

290
00:11:32,800 --> 00:11:34,880
the information to combine the different

291
00:11:34,880 --> 00:11:37,440
perspectives on that target host we need

292
00:11:37,440 --> 00:11:39,040
to make sure that

293
00:11:39,040 --> 00:11:40,560
all these different perspectives from

294
00:11:40,560 --> 00:11:43,040
the same device arrive at the at the

295
00:11:43,040 --> 00:11:44,720
same end point right because otherwise

296
00:11:44,720 --> 00:11:46,640
we just don't have the data streams to

297
00:11:46,640 --> 00:11:48,320
combine them early

298
00:11:48,320 --> 00:11:50,240
we could eventually i mean we could of

299
00:11:50,240 --> 00:11:51,920
course like globally tag everything and

300
00:11:51,920 --> 00:11:54,320
then throw everything in like some

301
00:11:54,320 --> 00:11:56,079
data lake type setup and then just do

302
00:11:56,079 --> 00:11:58,160
matching there but that is uh first of

303
00:11:58,160 --> 00:12:01,200
all it is it is expensive it is late in

304
00:12:01,200 --> 00:12:04,160
the process and um

305
00:12:04,160 --> 00:12:04,959
uh

306
00:12:04,959 --> 00:12:07,040
prone to failure at that level

307
00:12:07,040 --> 00:12:09,360
so for this for this case we can just

308
00:12:09,360 --> 00:12:11,440
imagine the setup where we have these

309
00:12:11,440 --> 00:12:14,000
routers and they just push bmp and ipfix

310
00:12:14,000 --> 00:12:15,120
information

311
00:12:15,120 --> 00:12:16,800
the collector that

312
00:12:16,800 --> 00:12:21,040
that we used here was pmacts and fxd

313
00:12:21,040 --> 00:12:24,320
thanks to polo for for creating these so

314
00:12:24,320 --> 00:12:25,680
and later on you can imagine this is

315
00:12:25,680 --> 00:12:28,000
then used use them for some sort of like

316
00:12:28,000 --> 00:12:30,000
olap querying where you want to like

317
00:12:30,000 --> 00:12:31,839
find out information about your network

318
00:12:31,839 --> 00:12:34,079
but that's out of scope here

319
00:12:34,079 --> 00:12:36,240
so if you look at the

320
00:12:36,240 --> 00:12:38,160
if as a baseline we can just simply look

321
00:12:38,160 --> 00:12:40,639
at something really simple where we

322
00:12:40,639 --> 00:12:43,600
combine that data by introducing a layer

323
00:12:43,600 --> 00:12:45,040
of indirection

324
00:12:45,040 --> 00:12:47,600
right we have we have our

325
00:12:47,600 --> 00:12:49,519
we have like n telemetry daemons that

326
00:12:49,519 --> 00:12:51,360
are collecting all that information but

327
00:12:51,360 --> 00:12:52,800
to make sure that the right streams are

328
00:12:52,800 --> 00:12:54,560
ending at the right demons we put some

329
00:12:54,560 --> 00:12:56,399
proxies in front of them that where all

330
00:12:56,399 --> 00:12:57,920
they do is

331
00:12:57,920 --> 00:13:00,800
uh basically forward the traffic and in

332
00:13:00,800 --> 00:13:02,399
this case we can just use something like

333
00:13:02,399 --> 00:13:05,120
h a proxy for the tcp part and nfd

334
00:13:05,120 --> 00:13:08,079
itself can actually act as a udp proxima

335
00:13:08,079 --> 00:13:10,240
we can use that very pfix right like a

336
00:13:10,240 --> 00:13:12,320
relatively simple setup

337
00:13:12,320 --> 00:13:14,880
the main uh challenges that

338
00:13:14,880 --> 00:13:16,000
are

339
00:13:16,000 --> 00:13:17,920
the main challenges in this type of

340
00:13:17,920 --> 00:13:21,680
setup is the um

341
00:13:21,680 --> 00:13:22,110
is the

342
00:13:22,110 --> 00:13:24,800
[Music]

343
00:13:24,800 --> 00:13:27,839
the mapping right because we need to in

344
00:13:27,839 --> 00:13:30,639
fact make sure that

345
00:13:30,639 --> 00:13:33,680
stuff ends up at the at the right target

346
00:13:33,680 --> 00:13:35,519
the the file in the

347
00:13:35,519 --> 00:13:36,880
the little box in the middle in this

348
00:13:36,880 --> 00:13:38,720
case

349
00:13:38,720 --> 00:13:41,760
um the challenges here are relatively

350
00:13:41,760 --> 00:13:42,959
straightforward i think it's the

351
00:13:42,959 --> 00:13:44,480
reliability of having additional

352
00:13:44,480 --> 00:13:45,920
components

353
00:13:45,920 --> 00:13:48,160
that may fail at any time right they

354
00:13:48,160 --> 00:13:49,760
they suffer for update cycles they

355
00:13:49,760 --> 00:13:51,680
suffer for process lifetime cycles all

356
00:13:51,680 --> 00:13:52,880
of that stuff

357
00:13:52,880 --> 00:13:54,959
there is overhead right you have proxies

358
00:13:54,959 --> 00:13:57,440
that you don't strictly need in that

359
00:13:57,440 --> 00:14:00,399
sense you have a latency impact which

360
00:14:00,399 --> 00:14:01,839
you probably don't care about so much

361
00:14:01,839 --> 00:14:04,639
but in in general just limits to what we

362
00:14:04,639 --> 00:14:06,079
can do here

363
00:14:06,079 --> 00:14:07,920
and the main administrative challenge is

364
00:14:07,920 --> 00:14:10,560
the is the configuration overhead

365
00:14:10,560 --> 00:14:12,079
because we need to con

366
00:14:12,079 --> 00:14:13,839
it's basically these files right we need

367
00:14:13,839 --> 00:14:15,360
to configure two different proxy with

368
00:14:15,360 --> 00:14:17,920
different configuration syntaxes to

369
00:14:17,920 --> 00:14:19,680
support like

370
00:14:19,680 --> 00:14:22,000
all of these devices sending across

371
00:14:22,000 --> 00:14:24,480
multiple telemetry protocols my example

372
00:14:24,480 --> 00:14:27,360
only two but can be any of them right to

373
00:14:27,360 --> 00:14:28,720
then find

374
00:14:28,720 --> 00:14:31,760
eventually any um

375
00:14:31,760 --> 00:14:33,519
to correctly balance it across the

376
00:14:33,519 --> 00:14:35,279
different backends and this is what we

377
00:14:35,279 --> 00:14:36,959
want to solve

378
00:14:36,959 --> 00:14:39,360
so what what can we do so

379
00:14:39,360 --> 00:14:41,760
there is a socket option just as a

380
00:14:41,760 --> 00:14:43,279
refresher there's a socket option called

381
00:14:43,279 --> 00:14:45,199
as a reuse part and that allows us to

382
00:14:45,199 --> 00:14:47,279
basically statelessly load balance among

383
00:14:47,279 --> 00:14:49,360
a bunch of different processes that's

384
00:14:49,360 --> 00:14:51,519
super convenient but unfortunately the

385
00:14:51,519 --> 00:14:53,600
problem with that approach is that

386
00:14:53,600 --> 00:14:55,920
by default it takes or in its standard

387
00:14:55,920 --> 00:14:57,600
configuration it takes the hash of the

388
00:14:57,600 --> 00:14:59,199
whole flow

389
00:14:59,199 --> 00:15:01,360
which means that different telemetry

390
00:15:01,360 --> 00:15:02,959
protocols

391
00:15:02,959 --> 00:15:04,959
will most likely end up at different

392
00:15:04,959 --> 00:15:06,399
demons

393
00:15:06,399 --> 00:15:08,959
telemetry collection daemons so you're

394
00:15:08,959 --> 00:15:10,480
breaking

395
00:15:10,480 --> 00:15:12,560
the link which is the whole

396
00:15:12,560 --> 00:15:14,000
which is the whole purpose of doing this

397
00:15:14,000 --> 00:15:15,120
right you want to

398
00:15:15,120 --> 00:15:16,800
correlate these two

399
00:15:16,800 --> 00:15:19,839
these two different data streams

400
00:15:19,839 --> 00:15:22,240
so luckily this is something we can

401
00:15:22,240 --> 00:15:25,120
influence using bpf

402
00:15:25,120 --> 00:15:27,360
specifically there is a program called

403
00:15:27,360 --> 00:15:29,680
um

404
00:15:30,720 --> 00:15:32,720
um

405
00:15:32,720 --> 00:15:34,399
it i think it's just called the reuse

406
00:15:34,399 --> 00:15:36,639
port that we can attach to help us

407
00:15:36,639 --> 00:15:38,720
influence the selection

408
00:15:38,720 --> 00:15:40,399
as a refresher

409
00:15:40,399 --> 00:15:43,839
bpf right sd is the

410
00:15:43,839 --> 00:15:45,839
subsystem that basically allows us to

411
00:15:45,839 --> 00:15:49,199
attach logic to custom predefined hooks

412
00:15:49,199 --> 00:15:51,680
and one of these hooks is specifically

413
00:15:51,680 --> 00:15:52,880
the

414
00:15:52,880 --> 00:15:55,360
socket selection in the so reuse port

415
00:15:55,360 --> 00:15:57,920
mechanism

416
00:15:59,040 --> 00:16:02,880
so using bpf we can basically just patch

417
00:16:02,880 --> 00:16:05,120
the collectors minimally to register

418
00:16:05,120 --> 00:16:07,040
themselves on some sort of lookup table

419
00:16:07,040 --> 00:16:08,800
where they basically say i am collector

420
00:16:08,800 --> 00:16:11,199
number one out of n

421
00:16:11,199 --> 00:16:13,600
and i will receive one end of the

422
00:16:13,600 --> 00:16:15,600
traffic this is the

423
00:16:15,600 --> 00:16:17,519
communication there

424
00:16:17,519 --> 00:16:22,360
and then we can simply using bpf

425
00:16:22,399 --> 00:16:24,560
choose our own port selection mechanism

426
00:16:24,560 --> 00:16:26,320
in which case we can simply again hash

427
00:16:26,320 --> 00:16:28,160
the flow except that in this case we the

428
00:16:28,160 --> 00:16:30,079
only thing we need to look at is the ap

429
00:16:30,079 --> 00:16:31,920
source address under the assumption

430
00:16:31,920 --> 00:16:33,759
being that we only have a single a

431
00:16:33,759 --> 00:16:35,360
single um

432
00:16:35,360 --> 00:16:36,880
that all the telemetry is coming from a

433
00:16:36,880 --> 00:16:38,720
single interface that has like only a

434
00:16:38,720 --> 00:16:40,560
single ip address

435
00:16:40,560 --> 00:16:43,199
and the second step is that we no longer

436
00:16:43,199 --> 00:16:44,560
balance across

437
00:16:44,560 --> 00:16:46,720
all the listening demons but across the

438
00:16:46,720 --> 00:16:48,240
intended number

439
00:16:48,240 --> 00:16:50,000
which also means that we don't need to

440
00:16:50,000 --> 00:16:54,320
dynamically um reallocate or so try to

441
00:16:54,320 --> 00:16:57,199
solve the problem of reallocating uh to

442
00:16:57,199 --> 00:16:59,920
establish tcp connections across

443
00:16:59,920 --> 00:17:02,399
multiple daemons when some of them are

444
00:17:02,399 --> 00:17:03,839
going from some sort of like update

445
00:17:03,839 --> 00:17:05,839
cycle like imagine some sort of like you

446
00:17:05,839 --> 00:17:07,520
have 10 of them listening right and then

447
00:17:07,520 --> 00:17:09,039
you have like a rolling update where you

448
00:17:09,039 --> 00:17:10,559
restart one after the other with some

449
00:17:10,559 --> 00:17:12,240
new binary version

450
00:17:12,240 --> 00:17:14,720
and then you basically have chaos going

451
00:17:14,720 --> 00:17:16,559
back and forth but if you just say that

452
00:17:16,559 --> 00:17:18,959
we always intend to have 10 of these

453
00:17:18,959 --> 00:17:20,400
and we simply

454
00:17:20,400 --> 00:17:23,039
respond with a tcp reset or just simply

455
00:17:23,039 --> 00:17:24,480
drop the udp

456
00:17:24,480 --> 00:17:26,559
datagram if something is doesn't happen

457
00:17:26,559 --> 00:17:28,640
to be listening in that moment we have

458
00:17:28,640 --> 00:17:30,480
basically solved that problem

459
00:17:30,480 --> 00:17:32,559
so we just can package up this logic

460
00:17:32,559 --> 00:17:34,640
into a little program and attach it to

461
00:17:34,640 --> 00:17:37,120
the to the reuse port group

462
00:17:37,120 --> 00:17:39,039
and in practice we will just have the

463
00:17:39,039 --> 00:17:41,760
first daemon that starts up do this and

464
00:17:41,760 --> 00:17:43,760
we can use the existence of the vpf

465
00:17:43,760 --> 00:17:45,440
program as the as they basically

466
00:17:45,440 --> 00:17:49,039
indicator that it exists at all

467
00:17:49,120 --> 00:17:49,919
um

468
00:17:49,919 --> 00:17:51,360
using this approach

469
00:17:51,360 --> 00:17:53,039
we basically now have stateless

470
00:17:53,039 --> 00:17:54,960
balancing right we don't need any we

471
00:17:54,960 --> 00:17:56,559
need to don't we don't need to deal with

472
00:17:56,559 --> 00:17:58,400
config files because they don't exist in

473
00:17:58,400 --> 00:18:00,640
that sense well i mean we still need to

474
00:18:00,640 --> 00:18:02,160
of course know how many we intend to

475
00:18:02,160 --> 00:18:04,799
have but that is basically it

476
00:18:04,799 --> 00:18:07,120
it's based on device identity only

477
00:18:07,120 --> 00:18:09,200
again the link here being something like

478
00:18:09,200 --> 00:18:10,880
that the

479
00:18:10,880 --> 00:18:13,280
ip address corresponds like a single ap

480
00:18:13,280 --> 00:18:15,760
address corresponds to a single device

481
00:18:15,760 --> 00:18:17,360
if that wasn't the case we could also we

482
00:18:17,360 --> 00:18:19,440
could also do more complicated stuff you

483
00:18:19,440 --> 00:18:21,200
can just parse the skb

484
00:18:21,200 --> 00:18:22,880
from within that program that is

485
00:18:22,880 --> 00:18:23,919
possible

486
00:18:23,919 --> 00:18:25,760
it's stable across restarts in the sense

487
00:18:25,760 --> 00:18:26,799
that

488
00:18:26,799 --> 00:18:28,880
we are not uh throwing connections back

489
00:18:28,880 --> 00:18:29,919
and forth

490
00:18:29,919 --> 00:18:31,120
you prevent

491
00:18:31,120 --> 00:18:33,200
a scenario of cascading failure so

492
00:18:33,200 --> 00:18:35,280
imagine like a packet of death scenario

493
00:18:35,280 --> 00:18:36,880
that exploits the

494
00:18:36,880 --> 00:18:38,320
this collector

495
00:18:38,320 --> 00:18:40,240
if you

496
00:18:40,240 --> 00:18:42,240
if you simply load balance across

497
00:18:42,240 --> 00:18:43,600
everything that is listening at this

498
00:18:43,600 --> 00:18:45,200
point basically every time this

499
00:18:45,200 --> 00:18:47,520
connection is trying to be it tries to

500
00:18:47,520 --> 00:18:49,840
get itself re-established or the pdp

501
00:18:49,840 --> 00:18:52,480
packet gets resent in the ap fix case

502
00:18:52,480 --> 00:18:54,000
you would basically

503
00:18:54,000 --> 00:18:56,320
like do a round robin of like killing

504
00:18:56,320 --> 00:18:57,679
these demons

505
00:18:57,679 --> 00:18:59,600
this way you only have like a single

506
00:18:59,600 --> 00:19:02,080
victim that basically stays down

507
00:19:02,080 --> 00:19:03,760
and doing it this way basically requires

508
00:19:03,760 --> 00:19:06,640
no configuration right it's just this

509
00:19:06,640 --> 00:19:09,280
this one piece of information about how

510
00:19:09,280 --> 00:19:12,160
many you're going to have

511
00:19:12,559 --> 00:19:13,679
so

512
00:19:13,679 --> 00:19:16,160
we have this so to summarize what we

513
00:19:16,160 --> 00:19:18,880
have what we've seen here right so

514
00:19:18,880 --> 00:19:20,880
we say that network telemetry

515
00:19:20,880 --> 00:19:22,240
aggregation

516
00:19:22,240 --> 00:19:24,480
meaning combining different streams we

517
00:19:24,480 --> 00:19:25,840
have additional requirements on load

518
00:19:25,840 --> 00:19:27,760
balancing that we wouldn't usually have

519
00:19:27,760 --> 00:19:30,080
by simply needing

520
00:19:30,080 --> 00:19:32,640
having the need to combine the streams

521
00:19:32,640 --> 00:19:35,679
from different uh

522
00:19:35,679 --> 00:19:38,400
across different transport protocols and

523
00:19:38,400 --> 00:19:40,640
transport critical ports

524
00:19:40,640 --> 00:19:43,520
down to the same process

525
00:19:43,520 --> 00:19:46,799
having to balance it this way

526
00:19:47,919 --> 00:19:49,679
so we can solve this problem relatively

527
00:19:49,679 --> 00:19:52,160
straightforwardly using ebpf without

528
00:19:52,160 --> 00:19:54,080
using additional

529
00:19:54,080 --> 00:19:56,880
daemons on the system side

530
00:19:56,880 --> 00:19:59,360
this is uh this is a pretty nice

531
00:19:59,360 --> 00:20:01,919
property right because that means no no

532
00:20:01,919 --> 00:20:04,240
vulnerabilities at that level

533
00:20:04,240 --> 00:20:06,640
no upgrade cycles

534
00:20:06,640 --> 00:20:08,880
uh no i misread the configuration or in

535
00:20:08,880 --> 00:20:11,840
incompatible configuration updates

536
00:20:11,840 --> 00:20:13,280
um with

537
00:20:13,280 --> 00:20:14,720
vpf uh

538
00:20:14,720 --> 00:20:17,280
um compile once run everywhere

539
00:20:17,280 --> 00:20:19,440
functionality that loop bpf provides you

540
00:20:19,440 --> 00:20:20,720
can basically

541
00:20:20,720 --> 00:20:24,960
it's it's portable enough in that sense

542
00:20:24,960 --> 00:20:26,640
um

543
00:20:26,640 --> 00:20:29,120
we can balance stuff across an arbitrary

544
00:20:29,120 --> 00:20:30,799
number of end points because scaling up

545
00:20:30,799 --> 00:20:32,720
and down is relatively easy in this type

546
00:20:32,720 --> 00:20:35,840
of setup

547
00:20:38,159 --> 00:20:39,520
this basically allows us to do the

548
00:20:39,520 --> 00:20:41,600
proper networking by by always having

549
00:20:41,600 --> 00:20:43,679
this data correctly correlated instead

550
00:20:43,679 --> 00:20:44,559
of

551
00:20:44,559 --> 00:20:46,320
split across multiple

552
00:20:46,320 --> 00:20:48,480
data collectors and then

553
00:20:48,480 --> 00:20:52,000
having to aggregate it at a later stage

554
00:20:52,000 --> 00:20:54,880
and that's much easier to maintain

555
00:20:54,880 --> 00:20:56,559
and as a bonus actually if you try to

556
00:20:56,559 --> 00:20:59,520
benchmark it by doing like a ba by

557
00:20:59,520 --> 00:21:01,280
running a bmp

558
00:21:01,280 --> 00:21:03,840
load generator in terms of connections

559
00:21:03,840 --> 00:21:04,640
we're

560
00:21:04,640 --> 00:21:06,240
behaving much better i think we're

561
00:21:06,240 --> 00:21:08,799
saving around like 20

562
00:21:08,799 --> 00:21:11,360
uh cpu time by doing it this way and the

563
00:21:11,360 --> 00:21:13,919
ramp up is actually feasible like if you

564
00:21:13,919 --> 00:21:16,720
run the load generator against

565
00:21:16,720 --> 00:21:19,280
like h a proxy

566
00:21:19,280 --> 00:21:20,640
you

567
00:21:20,640 --> 00:21:22,400
you i basically have to slow it down

568
00:21:22,400 --> 00:21:24,480
before things just crash

569
00:21:24,480 --> 00:21:26,640
whereas in the kernel level balancing

570
00:21:26,640 --> 00:21:30,000
case that is not a problem at all

571
00:21:30,000 --> 00:21:30,960
and

572
00:21:30,960 --> 00:21:34,240
that's basically already it um the slot

573
00:21:34,240 --> 00:21:35,520
ended up being much larger than

574
00:21:35,520 --> 00:21:37,360
anticipated so i guess that means we

575
00:21:37,360 --> 00:21:39,280
have plenty of time for questions this

576
00:21:39,280 --> 00:21:40,320
time

577
00:21:40,320 --> 00:21:42,080
and if you want to read the same stuff

578
00:21:42,080 --> 00:21:44,960
in the form of like theses with like

579
00:21:44,960 --> 00:21:46,720
huge appendix and 70 pages blah blah

580
00:21:46,720 --> 00:21:48,880
blah feel free to visit the link

581
00:21:48,880 --> 00:21:50,000
so

582
00:21:50,000 --> 00:21:52,559
that's it from for for the scheduled

583
00:21:52,559 --> 00:21:55,760
items of my talk i'm happy to answer any

584
00:21:55,760 --> 00:21:59,400
questions at this point

585
00:22:02,159 --> 00:22:03,120
all right

586
00:22:03,120 --> 00:22:05,039
ideally if anybody has questions they'll

587
00:22:05,039 --> 00:22:08,159
speak up

588
00:22:08,159 --> 00:22:10,480
yep

589
00:22:10,799 --> 00:22:12,640
other edwards thank you so much for this

590
00:22:12,640 --> 00:22:14,320
presentation

591
00:22:14,320 --> 00:22:17,120
this is edward's first ietf so i think

592
00:22:17,120 --> 00:22:19,919
you did a fantastic job of uh

593
00:22:19,919 --> 00:22:23,840
sharing your insights with our community

594
00:22:25,280 --> 00:22:28,320
yeah this is a great presentation

595
00:22:28,320 --> 00:22:29,919
all right well

596
00:22:29,919 --> 00:22:32,159
given that there doesn't seem to be

597
00:22:32,159 --> 00:22:34,240
anything on the chat nor is anyone

598
00:22:34,240 --> 00:22:36,880
raising hands interrupting that case

599
00:22:36,880 --> 00:22:39,120
thanks everyone uh

600
00:22:39,120 --> 00:22:41,120
was also presenting and a special thanks

601
00:22:41,120 --> 00:22:44,879
again to uh thomas pierre and phone

602
00:22:48,000 --> 00:22:49,600
all right i think uh

603
00:22:49,600 --> 00:22:51,760
that's the end of our presentations for

604
00:22:51,760 --> 00:22:55,120
the meeting and unless

605
00:22:55,120 --> 00:22:56,640
anybody else has other things to talk

606
00:22:56,640 --> 00:22:58,960
about

607
00:23:00,640 --> 00:23:02,080
going once

608
00:23:02,080 --> 00:23:04,639
going twice

609
00:23:05,679 --> 00:23:08,480
anything you want to cover you i want to

610
00:23:08,480 --> 00:23:11,760
go back to uh upgrading rpk validators

611
00:23:11,760 --> 00:23:14,080
okay

612
00:23:16,880 --> 00:23:18,880
all right i think this was it thank you

613
00:23:18,880 --> 00:23:20,799
everybody and we'll see you at ietf

614
00:23:20,799 --> 00:23:23,799
ietf113

615
00:23:25,280 --> 00:23:29,158
bye bye thanks

