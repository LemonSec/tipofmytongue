1
00:00:04,720 --> 00:00:07,439
maybe that's right

2
00:00:09,599 --> 00:00:11,599
according to the clock it's time so how

3
00:00:11,599 --> 00:00:14,320
about we do this thing

4
00:00:14,320 --> 00:00:16,640
sounds good

5
00:00:16,640 --> 00:00:18,640
so

6
00:00:18,640 --> 00:00:20,640
i guess i'll be uh i guess

7
00:00:20,640 --> 00:00:21,920
um

8
00:00:21,920 --> 00:00:23,519
brian and i discussed earlier i guess

9
00:00:23,519 --> 00:00:25,359
i'll be leading it because braun is such

10
00:00:25,359 --> 00:00:26,320
a

11
00:00:26,320 --> 00:00:27,279
really

12
00:00:27,279 --> 00:00:29,840
world-class note taker so

13
00:00:29,840 --> 00:00:32,159
that's great works for both of us

14
00:00:32,159 --> 00:00:33,920
so welcome to the

15
00:00:33,920 --> 00:00:38,480
gmap meeting at itf 112

16
00:00:39,600 --> 00:00:41,600
we'll begin with the with the note well

17
00:00:41,600 --> 00:00:42,559
which

18
00:00:42,559 --> 00:00:44,320
from looking at the participants list it

19
00:00:44,320 --> 00:00:46,320
looks like everybody is

20
00:00:46,320 --> 00:00:49,600
familiar with but we'll we'll uh again

21
00:00:49,600 --> 00:00:51,199
say if you're if you're not that you

22
00:00:51,199 --> 00:00:53,440
should pay attention to this because

23
00:00:53,440 --> 00:00:54,960
um it

24
00:00:54,960 --> 00:00:58,640
governs the uh

25
00:00:58,640 --> 00:01:00,879
policies

26
00:01:00,879 --> 00:01:01,760
on

27
00:01:01,760 --> 00:01:03,520
uh intellectual property rights for

28
00:01:03,520 --> 00:01:06,159
things that you say in ietf meetings and

29
00:01:06,159 --> 00:01:08,400
participation in ietf mailing lists and

30
00:01:08,400 --> 00:01:10,880
so forth so if you're not familiar with

31
00:01:10,880 --> 00:01:14,158
it please do read it

32
00:01:17,200 --> 00:01:20,720
and we'll start with an agenda bash

33
00:01:20,720 --> 00:01:22,640
we're doing the intro and note well now

34
00:01:22,640 --> 00:01:24,840
as you know

35
00:01:24,840 --> 00:01:29,119
um uh ron's gonna start with uh

36
00:01:29,119 --> 00:01:31,200
gmap blob

37
00:01:31,200 --> 00:01:33,680
i'm gonna go through s mime

38
00:01:33,680 --> 00:01:36,320
on the on the mail side of things

39
00:01:36,320 --> 00:01:40,079
and then delve into calendars and tasks

40
00:01:40,079 --> 00:01:43,040
for a longer period of time

41
00:01:43,040 --> 00:01:45,680
uh contacts

42
00:01:45,680 --> 00:01:48,720
and then alexi will be talking about

43
00:01:48,720 --> 00:01:51,520
some work that is going on in the extra

44
00:01:51,520 --> 00:01:54,799
working group that is uh

45
00:01:54,799 --> 00:01:56,960
comparable that you know has a

46
00:01:56,960 --> 00:01:58,320
relationship to things that we might

47
00:01:58,320 --> 00:02:01,360
want to do when i'm in jmap as well

48
00:02:01,360 --> 00:02:04,000
so that's that's coming up afterwards

49
00:02:04,000 --> 00:02:05,840
we've got a little bit of spare time 15

50
00:02:05,840 --> 00:02:07,439
minutes or so at the end if we're on

51
00:02:07,439 --> 00:02:08,720
schedule

52
00:02:08,720 --> 00:02:11,680
and then we will go through our

53
00:02:11,680 --> 00:02:16,000
usual milestone review at the very end

54
00:02:16,080 --> 00:02:18,080
any adjustments or comments on the

55
00:02:18,080 --> 00:02:21,120
schedule from anyone

56
00:02:21,840 --> 00:02:23,200
if you add this up carefully you'll

57
00:02:23,200 --> 00:02:24,879
discover this isn't even filling the

58
00:02:24,879 --> 00:02:27,520
full two hours um i was expecting more

59
00:02:27,520 --> 00:02:29,520
work to appear at this meeting but we

60
00:02:29,520 --> 00:02:30,319
had

61
00:02:30,319 --> 00:02:32,640
an interim just a couple of weeks ago so

62
00:02:32,640 --> 00:02:34,560
a lot of stuff was resolved there and

63
00:02:34,560 --> 00:02:37,120
not much new work's been generated since

64
00:02:37,120 --> 00:02:38,319
um

65
00:02:38,319 --> 00:02:40,640
in fact the next sli slide on this set

66
00:02:40,640 --> 00:02:42,560
is my blob slide so

67
00:02:42,560 --> 00:02:44,560
i'll if there's no

68
00:02:44,560 --> 00:02:46,480
agenda bashing i'll just go straight off

69
00:02:46,480 --> 00:02:47,760
this set of slides if you want to keep

70
00:02:47,760 --> 00:02:49,599
them going jim the other thing i did

71
00:02:49,599 --> 00:02:52,560
want to say um up the front of this

72
00:02:52,560 --> 00:02:53,920
is that i've seen in some other working

73
00:02:53,920 --> 00:02:55,519
groups there's been a bit more

74
00:02:55,519 --> 00:02:57,680
discussion discussion around the code of

75
00:02:57,680 --> 00:03:00,080
conduct bcp 54

76
00:03:00,080 --> 00:03:02,560
area and in particular being welcoming

77
00:03:02,560 --> 00:03:04,959
to new people and not scaring them away

78
00:03:04,959 --> 00:03:06,560
too much with

79
00:03:06,560 --> 00:03:09,120
weird jargon and and

80
00:03:09,120 --> 00:03:10,239
dismissal

81
00:03:10,239 --> 00:03:12,879
um so definitely to anyone who does come

82
00:03:12,879 --> 00:03:13,680
in

83
00:03:13,680 --> 00:03:14,959
um though of course i'm talking to

84
00:03:14,959 --> 00:03:16,879
people who aren't here yet in a lot of

85
00:03:16,879 --> 00:03:18,879
cases please feel free to pop in and ask

86
00:03:18,879 --> 00:03:20,400
questions if there's something you don't

87
00:03:20,400 --> 00:03:22,319
understand it's quite likely there might

88
00:03:22,319 --> 00:03:24,640
be someone else who doesn't as well so

89
00:03:24,640 --> 00:03:26,239
please do ask questions if anything's

90
00:03:26,239 --> 00:03:27,680
unclear

91
00:03:27,680 --> 00:03:30,080
so this slide here is talking about blob

92
00:03:30,080 --> 00:03:31,120
um

93
00:03:31,120 --> 00:03:33,920
and this is a draft that is close to

94
00:03:33,920 --> 00:03:35,360
finished now

95
00:03:35,360 --> 00:03:38,319
i have not uploaded the latest edits in

96
00:03:38,319 --> 00:03:40,080
it that have come since a couple of

97
00:03:40,080 --> 00:03:41,599
weeks ago

98
00:03:41,599 --> 00:03:43,120
the one thing that was pointed out that

99
00:03:43,120 --> 00:03:44,879
i really hadn't done was

100
00:03:44,879 --> 00:03:47,200
defining the encodings really well

101
00:03:47,200 --> 00:03:51,280
um we have space64 but base64 wasn't

102
00:03:51,280 --> 00:03:52,879
specifically referenced where it came

103
00:03:52,879 --> 00:03:54,959
from was just assumed so i'm going to

104
00:03:54,959 --> 00:03:58,480
add references specifically to rfc 4648

105
00:03:58,480 --> 00:04:00,879
which defines it

106
00:04:00,879 --> 00:04:03,120
but the question then is should we

107
00:04:03,120 --> 00:04:05,920
define as hex as being a fixed case at

108
00:04:05,920 --> 00:04:07,360
the moment it's defined as being lower

109
00:04:07,360 --> 00:04:08,239
case

110
00:04:08,239 --> 00:04:09,680
in the document

111
00:04:09,680 --> 00:04:12,319
but rfc 4648 says that it's case

112
00:04:12,319 --> 00:04:14,640
insignificant you can use upper or lower

113
00:04:14,640 --> 00:04:18,079
or any intermixing of them

114
00:04:18,079 --> 00:04:19,759
does anyone have any comments one way or

115
00:04:19,759 --> 00:04:21,040
the other on that

116
00:04:21,040 --> 00:04:23,919
um likewise should we rename as hex to

117
00:04:23,919 --> 00:04:27,360
ask base 16 just to align nicely

118
00:04:27,360 --> 00:04:28,320
and

119
00:04:28,320 --> 00:04:30,320
would anyone want base 32 should i

120
00:04:30,320 --> 00:04:31,840
include it for completeness or just

121
00:04:31,840 --> 00:04:33,919
leave it out because i didn't see a use

122
00:04:33,919 --> 00:04:35,680
case

123
00:04:35,680 --> 00:04:37,840
the other feedback i had was the expires

124
00:04:37,840 --> 00:04:39,840
property

125
00:04:39,840 --> 00:04:42,080
we the cyrus server at the moment sets

126
00:04:42,080 --> 00:04:44,160
expires so it went into one of the

127
00:04:44,160 --> 00:04:46,880
examples and that basically says

128
00:04:46,880 --> 00:04:48,639
this blob will sit around on the server

129
00:04:48,639 --> 00:04:51,040
for a week before it goes away

130
00:04:51,040 --> 00:04:53,840
so it gives a date to use it by

131
00:04:53,840 --> 00:04:56,560
but that's not really defined anywhere

132
00:04:56,560 --> 00:04:58,160
and i wonder if it's better just to not

133
00:04:58,160 --> 00:05:00,000
do it

134
00:05:00,000 --> 00:05:01,840
because the there's no defined

135
00:05:01,840 --> 00:05:04,560
assumption of that

136
00:05:04,560 --> 00:05:07,680
so i welcome comments on any of that um

137
00:05:07,680 --> 00:05:10,400
once i have the feedback i will update

138
00:05:10,400 --> 00:05:11,919
the document i think jim i'll ask you to

139
00:05:11,919 --> 00:05:13,360
do a working group last call at that

140
00:05:13,360 --> 00:05:14,560
stage

141
00:05:14,560 --> 00:05:16,639
because it's i believe it's basically

142
00:05:16,639 --> 00:05:17,680
done

143
00:05:17,680 --> 00:05:19,680
neil

144
00:05:19,680 --> 00:05:22,880
do you want comments now

145
00:05:23,440 --> 00:05:26,320
sure we've got time

146
00:05:27,199 --> 00:05:32,160
my views on those three would be uh

147
00:05:32,160 --> 00:05:34,560
uh mo everything else in gmap is case

148
00:05:34,560 --> 00:05:37,039
sensitive and it's generally nicer if

149
00:05:37,039 --> 00:05:38,800
you can

150
00:05:38,800 --> 00:05:40,320
assume that it is because then you can

151
00:05:40,320 --> 00:05:41,280
just do

152
00:05:41,280 --> 00:05:42,800
easier comparisons

153
00:05:42,800 --> 00:05:44,240
uh rather having two case and sensitive

154
00:05:44,240 --> 00:05:45,919
comparisons so

155
00:05:45,919 --> 00:05:48,160
i would lean towards specify must be

156
00:05:48,160 --> 00:05:49,520
lower case it's generally what we use

157
00:05:49,520 --> 00:05:51,039
for that kind of thing

158
00:05:51,039 --> 00:05:52,880
uh

159
00:05:52,880 --> 00:05:54,560
i would pick as hex instead of as base

160
00:05:54,560 --> 00:05:56,639
16 because i think

161
00:05:56,639 --> 00:05:58,080
it's more obvious just if you haven't

162
00:05:58,080 --> 00:06:00,639
read the specs what you're gonna get

163
00:06:00,639 --> 00:06:03,280
and uh

164
00:06:03,280 --> 00:06:05,039
i suspect no one will ever use base 32

165
00:06:05,039 --> 00:06:08,000
but who knows but probably not

166
00:06:08,000 --> 00:06:10,720
that's my thoughts

167
00:06:17,199 --> 00:06:19,600
hey thank you

168
00:06:19,600 --> 00:06:23,759
any other comments ken

169
00:06:23,759 --> 00:06:25,680
yeah i'm just wondering if if we even

170
00:06:25,680 --> 00:06:28,400
need as hex was there a use case in mind

171
00:06:28,400 --> 00:06:29,280
brown

172
00:06:29,280 --> 00:06:33,638
to have that in addition to base64

173
00:06:36,639 --> 00:06:39,680
you've grown you're muted

174
00:06:40,080 --> 00:06:42,639
yeah yeah local mute

175
00:06:42,639 --> 00:06:44,720
you couldn't see it yes thank you yeah

176
00:06:44,720 --> 00:06:46,400
i'm happy to do that i'm happy to just

177
00:06:46,400 --> 00:06:48,319
ditch ass hex i don't see a particular

178
00:06:48,319 --> 00:06:51,199
use case for it asp64 gets you the

179
00:06:51,199 --> 00:06:53,120
ability to transfer binary in a fairly

180
00:06:53,120 --> 00:06:55,039
efficient format

181
00:06:55,039 --> 00:06:58,240
so yep that's it that's easiest

182
00:06:58,240 --> 00:07:00,639
i will ditch it

183
00:07:00,639 --> 00:07:02,080
and as far as expires i don't have a

184
00:07:02,080 --> 00:07:04,160
strong opinion either way um if we think

185
00:07:04,160 --> 00:07:06,240
it's useful it should be fairly

186
00:07:06,240 --> 00:07:07,680
straightforward to document i would

187
00:07:07,680 --> 00:07:10,080
expect

188
00:07:10,560 --> 00:07:12,800
cool

189
00:07:13,440 --> 00:07:17,400
yeah i'll just get rid of it

190
00:07:22,560 --> 00:07:25,199
anything else

191
00:07:27,759 --> 00:07:29,039
so brian you're going to make those

192
00:07:29,039 --> 00:07:32,639
changes before we go to a last call

193
00:07:32,639 --> 00:07:34,800
yes i will upload a new draft and ask

194
00:07:34,800 --> 00:07:36,400
you to do a working group last call with

195
00:07:36,400 --> 00:07:37,520
that one

196
00:07:37,520 --> 00:07:39,840
okay i prefer to start that next week

197
00:07:39,840 --> 00:07:42,000
after i'm back just so i'm not

198
00:07:42,000 --> 00:07:44,319
yeah yeah

199
00:07:46,080 --> 00:07:48,318
cool

200
00:07:52,960 --> 00:07:54,400
all right

201
00:07:54,400 --> 00:07:56,080
let's see what else we got in the slide

202
00:07:56,080 --> 00:07:57,599
deck here

203
00:07:57,599 --> 00:08:00,319
oh that's milestones okay

204
00:08:00,319 --> 00:08:03,280
we'll come back to that

205
00:08:07,360 --> 00:08:10,080
so uh i guess s mime is next

206
00:08:10,080 --> 00:08:11,599
is there is there any more discussion on

207
00:08:11,599 --> 00:08:13,840
blob

208
00:08:15,919 --> 00:08:17,759
okay so let me figure out how to share

209
00:08:17,759 --> 00:08:20,400
the uh

210
00:08:22,240 --> 00:08:24,400
whoops

211
00:08:24,400 --> 00:08:27,840
i think i hit the wrong button here

212
00:08:30,960 --> 00:08:34,000
alexi go ahead

213
00:08:34,159 --> 00:08:36,640
uh i'm um

214
00:08:36,640 --> 00:08:38,799
hello can you hear me

215
00:08:38,799 --> 00:08:40,799
yes i can

216
00:08:40,799 --> 00:08:42,719
um

217
00:08:42,719 --> 00:08:44,480
are you happy with

218
00:08:44,480 --> 00:08:46,959
flipping through slides or

219
00:08:46,959 --> 00:08:48,560
i forgot how to do that to be honest i'm

220
00:08:48,560 --> 00:08:50,399
happy with flipping the slides if i can

221
00:08:50,399 --> 00:08:52,160
figure out how to

222
00:08:52,160 --> 00:08:53,680
oh there's the closed deck button it's

223
00:08:53,680 --> 00:08:55,760
down there okay

224
00:08:55,760 --> 00:08:59,040
i was trying to hit the little

225
00:08:59,519 --> 00:09:00,880
a little uh

226
00:09:00,880 --> 00:09:02,800
chair icon for it so

227
00:09:02,800 --> 00:09:06,080
all right hold on a sec here

228
00:09:06,080 --> 00:09:07,140
so

229
00:09:07,140 --> 00:09:11,970
[Music]

230
00:09:12,560 --> 00:09:15,760
yes there it is

231
00:09:17,600 --> 00:09:20,480
so there are actually two is mime uh one

232
00:09:20,480 --> 00:09:22,720
is the old one which isn't just went

233
00:09:22,720 --> 00:09:25,120
through hg last call and i will talk

234
00:09:25,120 --> 00:09:26,640
about this first and then i'll talk

235
00:09:26,640 --> 00:09:29,360
about the new one

236
00:09:30,240 --> 00:09:31,839
so

237
00:09:31,839 --> 00:09:33,760
um

238
00:09:33,760 --> 00:09:35,279
yeah i think there were quite a few

239
00:09:35,279 --> 00:09:37,200
changes since last time

240
00:09:37,200 --> 00:09:37,920
i

241
00:09:37,920 --> 00:09:41,600
i really remember i couldn't make it to

242
00:09:41,600 --> 00:09:43,279
jmap session

243
00:09:43,279 --> 00:09:46,080
in july so uh

244
00:09:46,080 --> 00:09:46,880
yeah

245
00:09:46,880 --> 00:09:49,600
lots of changes between version 3 and 10

246
00:09:49,600 --> 00:09:52,640
which is the current one

247
00:09:52,640 --> 00:09:55,279
major things is basically addressing uh

248
00:09:55,279 --> 00:09:57,040
comments

249
00:09:57,040 --> 00:10:00,640
from gen art art directorate etc

250
00:10:00,640 --> 00:10:03,120
some comments about better formatting

251
00:10:03,120 --> 00:10:05,279
you know split into sub sections you

252
00:10:05,279 --> 00:10:08,720
know make it easier to read um

253
00:10:08,720 --> 00:10:10,800
some missing references

254
00:10:10,800 --> 00:10:14,959
the biggest one were um

255
00:10:15,120 --> 00:10:19,040
clarify the implicit trust model

256
00:10:19,040 --> 00:10:20,640
that basically you need to trust your

257
00:10:20,640 --> 00:10:23,680
server with the

258
00:10:23,760 --> 00:10:26,000
trust anchors and doing the right thing

259
00:10:26,000 --> 00:10:28,320
and not not returning bogus information

260
00:10:28,320 --> 00:10:30,640
to you

261
00:10:30,880 --> 00:10:33,360
and then uh

262
00:10:33,360 --> 00:10:35,519
roman also uh

263
00:10:35,519 --> 00:10:37,360
suggested some extra checks for the

264
00:10:37,360 --> 00:10:39,519
security considerations

265
00:10:39,519 --> 00:10:42,560
um it's basically stating why certain

266
00:10:42,560 --> 00:10:44,320
things are not a problem but instead of

267
00:10:44,320 --> 00:10:45,120
just

268
00:10:45,120 --> 00:10:46,959
assuming people will figure it out just

269
00:10:46,959 --> 00:10:51,599
sort of spell it out so that was good um

270
00:10:51,920 --> 00:10:54,480
there were also some changes related to

271
00:10:54,480 --> 00:10:58,480
s mind status attribute extensibility

272
00:10:58,480 --> 00:11:00,959
main issues around there i i will

273
00:11:00,959 --> 00:11:04,160
actually have a slide on this but

274
00:11:04,240 --> 00:11:06,560
um

275
00:11:06,560 --> 00:11:10,959
the document allows for sign messages

276
00:11:10,959 --> 00:11:14,160
but it's also kind of explicitly

277
00:11:14,160 --> 00:11:16,399
allows for sign and encrypted

278
00:11:16,399 --> 00:11:17,839
without

279
00:11:17,839 --> 00:11:19,519
but that is supposed to be an extension

280
00:11:19,519 --> 00:11:23,680
to this that's why the complexity here

281
00:11:23,760 --> 00:11:25,839
um

282
00:11:25,839 --> 00:11:28,079
yeah and then there was also requests to

283
00:11:28,079 --> 00:11:30,079
extend email query to actually be able

284
00:11:30,079 --> 00:11:32,240
to search for all this mime send

285
00:11:32,240 --> 00:11:34,240
messages all these names and messages

286
00:11:34,240 --> 00:11:37,600
with valid signature this sort of thing

287
00:11:37,600 --> 00:11:40,839
next slide

288
00:11:44,320 --> 00:11:47,600
so um i will just go through various

289
00:11:47,600 --> 00:11:49,440
issues that

290
00:11:49,440 --> 00:11:50,480
um

291
00:11:50,480 --> 00:11:52,240
sometimes i have an opinion but i

292
00:11:52,240 --> 00:11:53,920
thought it would be really good good

293
00:11:53,920 --> 00:11:57,839
idea to check with the working group

294
00:11:57,920 --> 00:11:59,920
several people asked about why

295
00:11:59,920 --> 00:12:03,200
specifically 10 minutes caching time

296
00:12:03,200 --> 00:12:05,200
um

297
00:12:05,200 --> 00:12:06,880
to be honest i sort of picked it from

298
00:12:06,880 --> 00:12:08,079
the air

299
00:12:08,079 --> 00:12:09,839
i thought you know i didn't want it like

300
00:12:09,839 --> 00:12:13,200
to be 30 seconds um

301
00:12:13,200 --> 00:12:16,880
the reason for this is

302
00:12:16,880 --> 00:12:20,399
uh because serial retrieval and

303
00:12:20,399 --> 00:12:22,240
certificate verification and signature

304
00:12:22,240 --> 00:12:23,600
calculation

305
00:12:23,600 --> 00:12:26,160
it is kind of cpu intensive and possibly

306
00:12:26,160 --> 00:12:28,560
network intensive um

307
00:12:28,560 --> 00:12:30,959
so we want to protect from the denial of

308
00:12:30,959 --> 00:12:33,680
service attacks

309
00:12:33,839 --> 00:12:38,079
um certificates don't expire very often

310
00:12:38,079 --> 00:12:40,880
so if there were no crl

311
00:12:40,880 --> 00:12:43,120
in existence then probably

312
00:12:43,120 --> 00:12:46,160
checking once a day would have been okay

313
00:12:46,160 --> 00:12:49,360
but if we actually want to allow

314
00:12:49,360 --> 00:12:51,519
i don't know

315
00:12:51,519 --> 00:12:52,800
suddenly i discovered that my

316
00:12:52,800 --> 00:12:56,399
certificate is uh macro keys compromise

317
00:12:56,399 --> 00:12:59,440
i requested revocation and

318
00:12:59,440 --> 00:13:01,600
how quickly do you want the service to

319
00:13:01,600 --> 00:13:03,200
figure out that the certificate was

320
00:13:03,200 --> 00:13:05,360
revoked

321
00:13:05,360 --> 00:13:07,839
um

322
00:13:07,920 --> 00:13:11,040
so um i'm thinking 10 minutes it's

323
00:13:11,040 --> 00:13:14,160
probably on the low side

324
00:13:14,160 --> 00:13:16,320
maybe maybe change it to one day or

325
00:13:16,320 --> 00:13:18,839
something like that

326
00:13:18,839 --> 00:13:22,720
but i sort of really don't have an idea

327
00:13:22,720 --> 00:13:25,600
any suggestions

328
00:13:25,680 --> 00:13:28,720
alexi is is the ten minutes

329
00:13:28,720 --> 00:13:31,839
uh like advisory time or it's sorry i

330
00:13:31,839 --> 00:13:32,880
haven't actually read this bit of

331
00:13:32,880 --> 00:13:34,560
respect at least recently

332
00:13:34,560 --> 00:13:36,959
like you say it must be

333
00:13:36,959 --> 00:13:38,320
i'm just wondering whether we should be

334
00:13:38,320 --> 00:13:40,240
specifying exact value or give the

335
00:13:40,240 --> 00:13:42,240
reasons and recommend

336
00:13:42,240 --> 00:13:44,399
a value if you see what i mean

337
00:13:44,399 --> 00:13:47,399
um

338
00:13:52,320 --> 00:13:55,440
yes i think it should be advisory but

339
00:13:55,440 --> 00:13:57,360
you know i you don't want one server to

340
00:13:57,360 --> 00:13:59,040
implement five hours in another ten

341
00:13:59,040 --> 00:14:01,519
minutes just because we underspecified

342
00:14:01,519 --> 00:14:04,399
in that sort of sense

343
00:14:08,000 --> 00:14:10,160
i would like to put the text probably

344
00:14:10,160 --> 00:14:13,120
should be no more than x

345
00:14:13,120 --> 00:14:16,160
if it makes sense

346
00:14:16,160 --> 00:14:18,639
yeah okay

347
00:14:24,720 --> 00:14:27,199
uh i i guess one one comment i have on

348
00:14:27,199 --> 00:14:29,680
on the revocation time is i mean

349
00:14:29,680 --> 00:14:31,120
verification doesn't

350
00:14:31,120 --> 00:14:33,199
actually have i mean doesn't happen all

351
00:14:33,199 --> 00:14:35,440
that often i mean when it's revoked you

352
00:14:35,440 --> 00:14:36,959
you perhaps want to

353
00:14:36,959 --> 00:14:39,360
pay attention to it fairly quickly but a

354
00:14:39,360 --> 00:14:42,240
day certainly seems reasonable i mean

355
00:14:42,240 --> 00:14:45,040
if you if you are checking crls

356
00:14:45,040 --> 00:14:46,399
you

357
00:14:46,399 --> 00:14:48,720
i mean checking a crl every 10 minutes

358
00:14:48,720 --> 00:14:49,440
is

359
00:14:49,440 --> 00:14:51,120
a lot so

360
00:14:51,120 --> 00:14:52,160
um

361
00:14:52,160 --> 00:14:54,560
i think a day is is a

362
00:14:54,560 --> 00:14:55,839
is a good

363
00:14:55,839 --> 00:14:59,160
uh ballpark

364
00:15:01,279 --> 00:15:04,240
okay yeah i was just um

365
00:15:04,240 --> 00:15:07,040
i was thinking about uh like star

366
00:15:07,040 --> 00:15:08,880
certificates very short

367
00:15:08,880 --> 00:15:10,639
certificate they don't have relocation

368
00:15:10,639 --> 00:15:12,160
time they just have very quick

369
00:15:12,160 --> 00:15:13,680
revocation time

370
00:15:13,680 --> 00:15:16,800
a very quick expiration time and i was

371
00:15:16,800 --> 00:15:18,320
wondering what they're doing there

372
00:15:18,320 --> 00:15:20,240
what's the granularity just for

373
00:15:20,240 --> 00:15:21,519
comparison

374
00:15:21,519 --> 00:15:23,600
but yeah tend to think that one day is

375
00:15:23,600 --> 00:15:25,120
probably

376
00:15:25,120 --> 00:15:27,839
good enough

377
00:15:28,480 --> 00:15:30,399
if you have opinions if you want to send

378
00:15:30,399 --> 00:15:33,680
on the mailing list please do

379
00:15:34,880 --> 00:15:39,120
otherwise i'll change the default

380
00:15:39,440 --> 00:15:42,560
all right next slide

381
00:15:44,720 --> 00:15:50,000
right so as meme status so a lot um

382
00:15:52,800 --> 00:15:54,959
basically i had weasel words in the

383
00:15:54,959 --> 00:15:56,959
document saying well you can add

384
00:15:56,959 --> 00:16:00,079
extensions and various people

385
00:16:00,079 --> 00:16:02,560
started asking me what exactly it means

386
00:16:02,560 --> 00:16:04,639
and how does it affect

387
00:16:04,639 --> 00:16:07,040
um

388
00:16:07,040 --> 00:16:11,199
um calculation certain properties

389
00:16:11,199 --> 00:16:13,600
like um

390
00:16:13,600 --> 00:16:16,800
there is one property that depends on

391
00:16:16,800 --> 00:16:19,279
all messages of the valid signatures so

392
00:16:19,279 --> 00:16:23,040
if if a new value is added which is sort

393
00:16:23,040 --> 00:16:25,279
of similar to

394
00:16:25,279 --> 00:16:27,680
signed verified like

395
00:16:27,680 --> 00:16:29,759
what i had in mind was encrypted plus

396
00:16:29,759 --> 00:16:31,360
sign verified

397
00:16:31,360 --> 00:16:33,759
then it should be treated similar

398
00:16:33,759 --> 00:16:35,519
so

399
00:16:35,519 --> 00:16:36,720
um

400
00:16:36,720 --> 00:16:39,519
two options here

401
00:16:39,839 --> 00:16:41,759
a lot of people asked about ayana

402
00:16:41,759 --> 00:16:44,480
registry i don't really have

403
00:16:44,480 --> 00:16:46,800
any

404
00:16:46,860 --> 00:16:49,600
[Music]

405
00:16:49,600 --> 00:16:52,399
extensions beyond signed and encrypted

406
00:16:52,399 --> 00:16:54,160
together

407
00:16:54,160 --> 00:16:56,480
for this

408
00:16:56,480 --> 00:16:58,240
so i'm not sure whether registry is

409
00:16:58,240 --> 00:16:59,600
going to be much

410
00:16:59,600 --> 00:17:02,320
of much use

411
00:17:03,680 --> 00:17:05,520
the alternative is don't create the

412
00:17:05,520 --> 00:17:08,000
registry reserve a couple of extra

413
00:17:08,000 --> 00:17:10,400
values

414
00:17:10,400 --> 00:17:13,599
don't fully specify them but uh

415
00:17:13,599 --> 00:17:16,160
allow extensions to clarify that

416
00:17:16,160 --> 00:17:19,359
so what do people think

417
00:17:19,359 --> 00:17:21,280
and murray if you have an opinion as

418
00:17:21,280 --> 00:17:24,280
well

419
00:17:32,000 --> 00:17:34,160
i have an opinion of sorts

420
00:17:34,160 --> 00:17:36,880
which is basically that jmap is designed

421
00:17:36,880 --> 00:17:37,919
to

422
00:17:37,919 --> 00:17:39,600
have you have to opt into capabilities

423
00:17:39,600 --> 00:17:42,000
to get additional things

424
00:17:42,000 --> 00:17:43,760
so i don't think you need either an

425
00:17:43,760 --> 00:17:46,559
extension or adding known values

426
00:17:46,559 --> 00:17:48,960
because a new extension

427
00:17:48,960 --> 00:17:50,240
would

428
00:17:50,240 --> 00:17:52,320
by opting into using it would

429
00:17:52,320 --> 00:17:53,919
automatically make those values become

430
00:17:53,919 --> 00:17:55,440
available and that extension would also

431
00:17:55,440 --> 00:17:56,960
define them

432
00:17:56,960 --> 00:17:57,679
so

433
00:17:57,679 --> 00:17:59,200
i don't think you need to define

434
00:17:59,200 --> 00:18:02,559
additional extension points here

435
00:18:02,559 --> 00:18:04,960
just say this is this is what this

436
00:18:04,960 --> 00:18:07,200
document defines and allow future

437
00:18:07,200 --> 00:18:10,720
documents to to change it

438
00:18:11,600 --> 00:18:12,960
okay

439
00:18:12,960 --> 00:18:16,640
i think it's important to actually

440
00:18:16,640 --> 00:18:18,559
point out that certain things are

441
00:18:18,559 --> 00:18:20,799
intended to be extensible that was you

442
00:18:20,799 --> 00:18:22,640
know and just add minimal text around

443
00:18:22,640 --> 00:18:23,919
that but

444
00:18:23,919 --> 00:18:26,000
yeah yeah but yeah i don't think you

445
00:18:26,000 --> 00:18:28,320
need to actually go beyond that just say

446
00:18:28,320 --> 00:18:31,760
this is designed to be extensible

447
00:18:31,760 --> 00:18:33,919
yeah i agree i think because you have to

448
00:18:33,919 --> 00:18:36,080
opt in that makes sense and then you

449
00:18:36,080 --> 00:18:37,760
don't have to bother with a registry for

450
00:18:37,760 --> 00:18:39,919
this which it's not really

451
00:18:39,919 --> 00:18:41,360
a registry

452
00:18:41,360 --> 00:18:44,160
thing like this there is a lot of work

453
00:18:44,160 --> 00:18:46,320
for not a lot again

454
00:18:46,320 --> 00:18:48,640
yeah i i cannot see like million

455
00:18:48,640 --> 00:18:50,640
different values being being registered

456
00:18:50,640 --> 00:18:53,919
that's just not going to happen yeah

457
00:18:53,919 --> 00:18:54,840
yeah

458
00:18:54,840 --> 00:18:59,439
so can you speak up a little bit

459
00:19:01,200 --> 00:19:04,200
nil

460
00:19:18,880 --> 00:19:20,559
i was just saying can you speak up you a

461
00:19:20,559 --> 00:19:21,919
bit uh

462
00:19:21,919 --> 00:19:23,600
oh sorry i was just agreeing with braun

463
00:19:23,600 --> 00:19:25,520
i i think um yeah because you have to

464
00:19:25,520 --> 00:19:27,840
opt into the capability um

465
00:19:27,840 --> 00:19:30,640
that's the extension point and

466
00:19:30,640 --> 00:19:32,880
so yeah no need to create a actual

467
00:19:32,880 --> 00:19:35,600
registry here

468
00:19:36,840 --> 00:19:40,399
okay am i right

469
00:19:40,960 --> 00:19:43,600
i think i agree um just to play devil's

470
00:19:43,600 --> 00:19:45,840
advocate the ex the an iona registry

471
00:19:45,840 --> 00:19:47,840
might be useful as an index to these if

472
00:19:47,840 --> 00:19:49,440
more of them were to appear but if

473
00:19:49,440 --> 00:19:50,160
you're

474
00:19:50,160 --> 00:19:53,520
it also allows for creation of

475
00:19:53,520 --> 00:19:54,880
uh

476
00:19:54,880 --> 00:19:56,880
an s mime status value that maybe

477
00:19:56,880 --> 00:19:58,480
doesn't refer to an rfc maybe it's

478
00:19:58,480 --> 00:20:01,840
defined as someplace else um

479
00:20:01,840 --> 00:20:03,440
if you think those things are unlikely

480
00:20:03,440 --> 00:20:06,400
then i don't think it's really necessary

481
00:20:06,400 --> 00:20:07,679
yeah and there is

482
00:20:07,679 --> 00:20:12,080
a registry of gmat um extensions so

483
00:20:12,080 --> 00:20:13,679
you'll be able to kind of find it kind

484
00:20:13,679 --> 00:20:16,480
of via that i guess

485
00:20:16,480 --> 00:20:19,720
for the capabilities

486
00:20:24,000 --> 00:20:26,000
yeah murray just reminded me while i

487
00:20:26,000 --> 00:20:28,400
actually like ion extensions

488
00:20:28,400 --> 00:20:30,640
um

489
00:20:31,760 --> 00:20:34,159
yeah i would i would probably recommend

490
00:20:34,159 --> 00:20:35,840
that um

491
00:20:35,840 --> 00:20:37,760
if another extension comes along that

492
00:20:37,760 --> 00:20:39,520
extends it that could create the

493
00:20:39,520 --> 00:20:41,600
registry as well at that point

494
00:20:41,600 --> 00:20:43,760
um but it saves us having an iona

495
00:20:43,760 --> 00:20:46,159
registry with two values in it that

496
00:20:46,159 --> 00:20:48,559
never gets updated

497
00:20:48,559 --> 00:20:51,360
which is kind of the alternative there

498
00:20:51,360 --> 00:20:54,240
okay fine

499
00:20:54,960 --> 00:20:57,280
um

500
00:20:57,679 --> 00:21:00,400
all right so i think i know what needs

501
00:21:00,400 --> 00:21:04,640
to be done it's more like option two

502
00:21:06,400 --> 00:21:07,200
but

503
00:21:07,200 --> 00:21:10,720
i'll propose some text

504
00:21:12,960 --> 00:21:16,840
right next slide

505
00:21:22,400 --> 00:21:27,440
so um in email get there is a

506
00:21:28,000 --> 00:21:31,520
attribute that says uh give me as mime

507
00:21:31,520 --> 00:21:34,080
status at the time of delivery

508
00:21:34,080 --> 00:21:35,520
um

509
00:21:35,520 --> 00:21:37,679
do we want to be able to

510
00:21:37,679 --> 00:21:41,280
do something similar in email query

511
00:21:41,280 --> 00:21:43,600
we have uh so the document has

512
00:21:43,600 --> 00:21:45,840
um

513
00:21:46,159 --> 00:21:48,799
has verified this mime or has a smile or

514
00:21:48,799 --> 00:21:50,000
something like that

515
00:21:50,000 --> 00:21:53,440
for uh smile

516
00:21:53,520 --> 00:21:56,000
messages that have

517
00:21:56,000 --> 00:21:57,919
valid smile signature at the time of

518
00:21:57,919 --> 00:22:00,400
request

519
00:22:00,400 --> 00:22:01,919
should we allow

520
00:22:01,919 --> 00:22:06,440
similar thing for the time of delivery

521
00:22:14,159 --> 00:22:15,840
sorry was that two separate questions

522
00:22:15,840 --> 00:22:17,919
one of one about email slash query and

523
00:22:17,919 --> 00:22:19,919
one about um

524
00:22:19,919 --> 00:22:23,120
at delivery and at

525
00:22:23,120 --> 00:22:25,120
just about email query

526
00:22:25,120 --> 00:22:26,640
because email get already has an

527
00:22:26,640 --> 00:22:29,840
attribute for this basically

528
00:22:31,120 --> 00:22:32,880
cool i think neil was probably going to

529
00:22:32,880 --> 00:22:34,240
say the same thing i

530
00:22:34,240 --> 00:22:35,840
was which is yeah you might as well

531
00:22:35,840 --> 00:22:37,039
define it

532
00:22:37,039 --> 00:22:39,039
um the server can always say cannot do

533
00:22:39,039 --> 00:22:41,440
it if you try and query it and it can't

534
00:22:41,440 --> 00:22:43,600
but

535
00:22:43,600 --> 00:22:45,679
yeah i mean

536
00:22:45,679 --> 00:22:47,360
have you what are the use cases are

537
00:22:47,360 --> 00:22:48,799
interested actually like i would have

538
00:22:48,799 --> 00:22:50,159
thought the delivery one might be more

539
00:22:50,159 --> 00:22:51,840
common than the

540
00:22:51,840 --> 00:22:55,120
uh verified now

541
00:22:55,120 --> 00:22:58,960
i think you might want both

542
00:22:58,960 --> 00:23:00,000
as in

543
00:23:00,000 --> 00:23:01,840
you sort of want to know whether it was

544
00:23:01,840 --> 00:23:04,720
validated delivery time

545
00:23:04,720 --> 00:23:06,720
but if you really if your message is

546
00:23:06,720 --> 00:23:09,919
really old then it will expire

547
00:23:09,919 --> 00:23:11,280
um

548
00:23:11,280 --> 00:23:14,480
that's probably useful to know as well

549
00:23:14,480 --> 00:23:15,440
yeah

550
00:23:15,440 --> 00:23:17,039
you probably don't want to be able to do

551
00:23:17,039 --> 00:23:19,919
a query across the whole server for

552
00:23:19,919 --> 00:23:22,000
has valid s mime now because that could

553
00:23:22,000 --> 00:23:24,240
turn into a really expensive

554
00:23:24,240 --> 00:23:25,280
lookup

555
00:23:25,280 --> 00:23:27,120
if if you have to do s mime validation

556
00:23:27,120 --> 00:23:30,639
on every single email in your store

557
00:23:32,240 --> 00:23:34,480
well hopefully caching will help but yes

558
00:23:34,480 --> 00:23:37,280
you have a point would you still be

559
00:23:37,280 --> 00:23:39,600
pretty bad

560
00:23:39,600 --> 00:23:42,240
potentially

561
00:23:42,720 --> 00:23:44,159
but at the delivery time we should be

562
00:23:44,159 --> 00:23:46,480
presuming that's caged at delivery time

563
00:23:46,480 --> 00:23:49,600
that sounds very reasonable to me yeah

564
00:23:49,600 --> 00:23:51,840
okay

565
00:23:53,039 --> 00:23:55,760
fine so i'll add this in

566
00:23:55,760 --> 00:23:59,320
next slide please

567
00:24:04,240 --> 00:24:07,360
um yeah this is uh another

568
00:24:07,360 --> 00:24:08,559
um

569
00:24:08,559 --> 00:24:11,520
thing basically um

570
00:24:11,520 --> 00:24:13,840
another optimization in the document is

571
00:24:13,840 --> 00:24:15,520
that

572
00:24:15,520 --> 00:24:17,360
a lot of clients what they do they just

573
00:24:17,360 --> 00:24:19,200
want initially to just play a list of

574
00:24:19,200 --> 00:24:20,880
messages

575
00:24:20,880 --> 00:24:22,799
and they want to display an icon saying

576
00:24:22,799 --> 00:24:24,799
that this message is like i don't know

577
00:24:24,799 --> 00:24:27,360
as mime signed or bgp signed

578
00:24:27,360 --> 00:24:28,960
and then when you click on the message

579
00:24:28,960 --> 00:24:30,480
then they will tell you whether

580
00:24:30,480 --> 00:24:33,520
signature is valid or not

581
00:24:33,520 --> 00:24:34,559
um

582
00:24:34,559 --> 00:24:39,279
so signed attribute value allows

583
00:24:39,279 --> 00:24:42,000
so we just say well

584
00:24:42,000 --> 00:24:44,080
syntactically there is a s9 signature

585
00:24:44,080 --> 00:24:47,840
there but i haven't verified it yet

586
00:24:53,440 --> 00:24:55,760
now that there is a

587
00:24:55,760 --> 00:24:58,720
attribute on email get

588
00:24:58,720 --> 00:25:02,320
for status and delivery

589
00:25:03,279 --> 00:25:05,279
basically the question was asked can the

590
00:25:05,279 --> 00:25:08,320
server ever return

591
00:25:08,799 --> 00:25:11,600
sign just sign as opposed to signed uh

592
00:25:11,600 --> 00:25:14,959
failed or signed verified

593
00:25:17,120 --> 00:25:19,120
the way i implemented it is a bit of

594
00:25:19,120 --> 00:25:21,760
cheating in a sense of

595
00:25:21,760 --> 00:25:24,080
um actually

596
00:25:24,080 --> 00:25:26,400
as mime status so a delivery doesn't

597
00:25:26,400 --> 00:25:28,480
need to be calculated at delivery it

598
00:25:28,480 --> 00:25:29,760
just

599
00:25:29,760 --> 00:25:31,760
when you ask for it it will calculate

600
00:25:31,760 --> 00:25:33,679
the

601
00:25:33,679 --> 00:25:36,000
status as you know as was valid at

602
00:25:36,000 --> 00:25:38,000
delivery and just cache it from that

603
00:25:38,000 --> 00:25:41,120
point so it's actually

604
00:25:41,120 --> 00:25:42,880
despite the name it doesn't have to be

605
00:25:42,880 --> 00:25:44,960
done at delivery time

606
00:25:44,960 --> 00:25:46,159
um

607
00:25:46,159 --> 00:25:49,279
so proposal is keep signed because it's

608
00:25:49,279 --> 00:25:50,080
uh

609
00:25:50,080 --> 00:25:52,799
still useful optimization and

610
00:25:52,799 --> 00:25:54,720
clarify what this mime status of

611
00:25:54,720 --> 00:25:58,559
delivery means how it can be you know

612
00:25:58,559 --> 00:26:00,400
if it's easy to calculate a delivery it

613
00:26:00,400 --> 00:26:03,840
can be but it doesn't have to be

614
00:26:06,480 --> 00:26:09,600
signed by anyone right not there isn't

615
00:26:09,600 --> 00:26:12,240
any sense of alignment with from address

616
00:26:12,240 --> 00:26:14,640
or anything like that

617
00:26:14,640 --> 00:26:18,320
no that uh that will be uh

618
00:26:18,320 --> 00:26:20,400
done when

619
00:26:20,400 --> 00:26:23,120
specif uh asmr status is explicitly

620
00:26:23,120 --> 00:26:24,799
requested

621
00:26:24,799 --> 00:26:26,960
uh for the message and then it will be

622
00:26:26,960 --> 00:26:29,120
signed verified or

623
00:26:29,120 --> 00:26:32,240
signed failed if it's misaligned

624
00:26:32,240 --> 00:26:34,559
right but i'm thinking

625
00:26:34,559 --> 00:26:36,880
of you know signed by whom i mean there

626
00:26:36,880 --> 00:26:38,960
could be a signature from

627
00:26:38,960 --> 00:26:42,400
somebody else potentially right

628
00:26:43,120 --> 00:26:45,360
um

629
00:26:45,840 --> 00:26:48,320
well the document does say that it has

630
00:26:48,320 --> 00:26:50,840
to match the from

631
00:26:50,840 --> 00:26:55,600
okay that was my question thanks

632
00:27:01,360 --> 00:27:03,679
yeah this proposal seems fine to me i

633
00:27:03,679 --> 00:27:04,720
think

634
00:27:04,720 --> 00:27:07,600
all right thank you

635
00:27:07,600 --> 00:27:10,240
next slide

636
00:27:15,919 --> 00:27:17,600
so ben

637
00:27:17,600 --> 00:27:20,000
wrote that the immutability of s mime

638
00:27:20,000 --> 00:27:21,760
status and delivery might have

639
00:27:21,760 --> 00:27:23,919
unfortunate interactions with

640
00:27:23,919 --> 00:27:27,200
trust anchor changes

641
00:27:28,640 --> 00:27:30,240
so

642
00:27:30,240 --> 00:27:34,200
i think uh

643
00:27:34,320 --> 00:27:35,279
only

644
00:27:35,279 --> 00:27:36,720
actually i should have double checked

645
00:27:36,720 --> 00:27:39,039
i'm pretty sure that s mime status said

646
00:27:39,039 --> 00:27:42,320
delivery is marked as server set

647
00:27:42,320 --> 00:27:44,559
and i just checked yesterday that it's

648
00:27:44,559 --> 00:27:46,480
not the same as immutable

649
00:27:46,480 --> 00:27:49,039
so server can change the status if an

650
00:27:49,039 --> 00:27:51,360
anchor got added and now it became valid

651
00:27:51,360 --> 00:27:52,799
basically

652
00:27:52,799 --> 00:27:54,559
um yep so i think that's right just

653
00:27:54,559 --> 00:27:58,480
clarify that that this might happen

654
00:28:01,200 --> 00:28:04,240
to change the status if it's trust

655
00:28:04,240 --> 00:28:05,039
train

656
00:28:05,039 --> 00:28:08,080
trust anchor changes

657
00:28:09,760 --> 00:28:12,240
so right can you repeat that

658
00:28:12,240 --> 00:28:15,600
is the is the server required to

659
00:28:15,600 --> 00:28:17,679
change the s mime status of delivery if

660
00:28:17,679 --> 00:28:20,880
the trust anchors change

661
00:28:26,640 --> 00:28:28,159
i

662
00:28:28,159 --> 00:28:30,000
i'm just looking at this and looking at

663
00:28:30,000 --> 00:28:30,960
the name

664
00:28:30,960 --> 00:28:33,600
and thinking maybe what we want is

665
00:28:33,600 --> 00:28:37,120
s mime was once valid

666
00:28:37,120 --> 00:28:40,159
which covers delivery which covers

667
00:28:40,159 --> 00:28:41,520
you change the trust anchors and it

668
00:28:41,520 --> 00:28:44,320
became valid a your case saying in the

669
00:28:44,320 --> 00:28:46,960
past the s mime status of this was

670
00:28:46,960 --> 00:28:48,799
validated and good

671
00:28:48,799 --> 00:28:51,200
and you can also clear that if there's a

672
00:28:51,200 --> 00:28:53,919
certificate revocation

673
00:28:53,919 --> 00:28:56,960
but otherwise you keep it because

674
00:28:56,960 --> 00:28:59,520
it was good it was good

675
00:28:59,520 --> 00:29:01,039
for any other

676
00:29:01,039 --> 00:29:02,559
that name would imply to me that it

677
00:29:02,559 --> 00:29:04,240
wouldn't be revoked once it gets set

678
00:29:04,240 --> 00:29:06,159
it's always true you know was once you

679
00:29:06,159 --> 00:29:08,559
know you're saying if you revoked a

680
00:29:08,559 --> 00:29:10,720
certificate it should go to false

681
00:29:10,720 --> 00:29:13,679
that seems a weird transition

682
00:29:13,679 --> 00:29:17,120
yeah you want to revoke it yeah

683
00:29:17,120 --> 00:29:18,880
but on the other hand if it was revoked

684
00:29:18,880 --> 00:29:20,960
after it was delivered so it might have

685
00:29:20,960 --> 00:29:24,640
been valid at the time of delivery

686
00:29:24,720 --> 00:29:28,480
yeah the the revocation is is

687
00:29:28,480 --> 00:29:29,840
basically saying

688
00:29:29,840 --> 00:29:31,360
we think this leaked at some point would

689
00:29:31,360 --> 00:29:32,720
be nice if you could say when you think

690
00:29:32,720 --> 00:29:34,640
it leaks so if you

691
00:29:34,640 --> 00:29:36,399
have something that that you verified

692
00:29:36,399 --> 00:29:38,000
before that time then you think it's

693
00:29:38,000 --> 00:29:40,880
still okay

694
00:29:40,880 --> 00:29:42,480
well there's also the converse case

695
00:29:42,480 --> 00:29:44,080
isn't there where

696
00:29:44,080 --> 00:29:46,080
the you know a new trust anchor gets

697
00:29:46,080 --> 00:29:47,120
added

698
00:29:47,120 --> 00:29:49,440
uh af maybe after the message was

699
00:29:49,440 --> 00:29:51,120
delivered and

700
00:29:51,120 --> 00:29:55,039
uh it looks invalid and but actually is

701
00:29:55,039 --> 00:29:56,880
yeah but i mean that would be covered by

702
00:29:56,880 --> 00:29:58,799
this because you're saying it was valid

703
00:29:58,799 --> 00:30:00,640
at some point and the some point is

704
00:30:00,640 --> 00:30:03,600
after the trust anchor gets added

705
00:30:03,600 --> 00:30:05,840
right but but if you're saying it was

706
00:30:05,840 --> 00:30:08,320
valid at some point then you know

707
00:30:08,320 --> 00:30:11,120
perhaps it still means that the the

708
00:30:11,120 --> 00:30:13,760
server status needs to be updated

709
00:30:13,760 --> 00:30:16,080
after the after the initial delivery and

710
00:30:16,080 --> 00:30:18,240
i i guess my question is whether

711
00:30:18,240 --> 00:30:20,240
whether we're explicitly requiring the

712
00:30:20,240 --> 00:30:22,640
server to go through and make sure that

713
00:30:22,640 --> 00:30:24,000
all of those things are valid i can

714
00:30:24,000 --> 00:30:28,000
imagine for a a large email service that

715
00:30:28,000 --> 00:30:29,360
you know if if

716
00:30:29,360 --> 00:30:31,520
a trust anchor was added or removed

717
00:30:31,520 --> 00:30:33,600
there might be significant overhead and

718
00:30:33,600 --> 00:30:35,440
trying to make sure that all of the

719
00:30:35,440 --> 00:30:37,600
client mailboxes had all their messages

720
00:30:37,600 --> 00:30:39,440
checked

721
00:30:39,440 --> 00:30:41,679
yet you would need to key

722
00:30:41,679 --> 00:30:42,799
um

723
00:30:42,799 --> 00:30:44,320
the messages in some way being able to

724
00:30:44,320 --> 00:30:46,399
search them by which

725
00:30:46,399 --> 00:30:49,760
which signature was on the messages

726
00:30:49,760 --> 00:30:51,600
right as a user

727
00:30:51,600 --> 00:30:53,600
check the one that failed verification

728
00:30:53,600 --> 00:30:55,039
before right

729
00:30:55,039 --> 00:30:59,039
so yeah it's possibly expensive but

730
00:30:59,039 --> 00:31:01,039
i'm tempted to say that probably

731
00:31:01,039 --> 00:31:02,880
implementation should do that if you

732
00:31:02,880 --> 00:31:05,279
want to keep yeah

733
00:31:05,279 --> 00:31:08,000
as a user if i had this feature on my

734
00:31:08,000 --> 00:31:10,399
server what i would be wanting to see

735
00:31:10,399 --> 00:31:12,399
is should i trust this message like

736
00:31:12,399 --> 00:31:15,039
that's that's the signal i want

737
00:31:15,039 --> 00:31:16,159
yeah and

738
00:31:16,159 --> 00:31:18,799
that that is true in the case where

739
00:31:18,799 --> 00:31:20,080
the message

740
00:31:20,080 --> 00:31:23,360
arrived and was signed by a key that was

741
00:31:23,360 --> 00:31:25,760
valid at the time and was validated by

742
00:31:25,760 --> 00:31:28,000
the server as being valid

743
00:31:28,000 --> 00:31:29,919
for that signature

744
00:31:29,919 --> 00:31:32,159
even after that that time now expires so

745
00:31:32,159 --> 00:31:33,919
if i come back and look at my mailbox 20

746
00:31:33,919 --> 00:31:35,279
years later i still want to see that

747
00:31:35,279 --> 00:31:37,440
that message is trustworthy because i

748
00:31:37,440 --> 00:31:39,039
validated it at the time and the key was

749
00:31:39,039 --> 00:31:41,120
valid at the time and that certificate

750
00:31:41,120 --> 00:31:42,880
has not been

751
00:31:42,880 --> 00:31:45,120
revoked since then saying it was

752
00:31:45,120 --> 00:31:46,399
compromised

753
00:31:46,399 --> 00:31:48,320
if this on the other hand if i received

754
00:31:48,320 --> 00:31:49,200
something that was signed with a

755
00:31:49,200 --> 00:31:51,679
compromised certificate and that

756
00:31:51,679 --> 00:31:53,679
certificate then gets invalidated i want

757
00:31:53,679 --> 00:31:54,880
to know not to trust that message

758
00:31:54,880 --> 00:31:55,919
anymore

759
00:31:55,919 --> 00:31:57,360
like that

760
00:31:57,360 --> 00:32:00,640
that's the cases as as the user

761
00:32:00,640 --> 00:32:02,159
what what i want to know is should i

762
00:32:02,159 --> 00:32:04,240
trust this message

763
00:32:04,240 --> 00:32:06,000
which yeah and i want to be able to tell

764
00:32:06,000 --> 00:32:10,559
that after the the key expires

765
00:32:10,799 --> 00:32:13,039
so are we treating revoked certificates

766
00:32:13,039 --> 00:32:14,799
differently from expired certificates

767
00:32:14,799 --> 00:32:18,320
then you mentioned like 20 years later

768
00:32:18,320 --> 00:32:20,320
yeah i think i think so

769
00:32:20,320 --> 00:32:22,240
that if the

770
00:32:22,240 --> 00:32:24,159
if a certificate gets revoked then you

771
00:32:24,159 --> 00:32:25,279
need to

772
00:32:25,279 --> 00:32:26,640
to know that you shouldn't trust this

773
00:32:26,640 --> 00:32:27,519
message

774
00:32:27,519 --> 00:32:29,919
if it's like close by

775
00:32:29,919 --> 00:32:32,240
the semantics of revoked and expired are

776
00:32:32,240 --> 00:32:35,440
very different so yeah

777
00:32:35,440 --> 00:32:37,200
well they are but but frequently

778
00:32:37,200 --> 00:32:40,000
exploration is used as a

779
00:32:40,000 --> 00:32:41,600
proxy for

780
00:32:41,600 --> 00:32:43,279
you don't need to revoke it anymore

781
00:32:43,279 --> 00:32:45,519
after after it gets fired

782
00:32:45,519 --> 00:32:46,720
well but the

783
00:32:46,720 --> 00:32:50,240
the point is that revocation says

784
00:32:50,240 --> 00:32:52,720
i know this was compromised

785
00:32:52,720 --> 00:32:54,880
you might you you don't want to trust

786
00:32:54,880 --> 00:32:56,640
things that were signed before the

787
00:32:56,640 --> 00:33:00,000
revocation where

788
00:33:00,000 --> 00:33:02,480
expired says that it was good until it

789
00:33:02,480 --> 00:33:05,200
expired and anything that was valid

790
00:33:05,200 --> 00:33:07,279
before the expiration needs to continue

791
00:33:07,279 --> 00:33:08,559
to be valid

792
00:33:08,559 --> 00:33:09,760
so that's the difference in the

793
00:33:09,760 --> 00:33:12,399
semantics

794
00:33:13,200 --> 00:33:16,640
sure i forget does the crl have a

795
00:33:16,640 --> 00:33:19,039
revocation yeah it has a revocation date

796
00:33:19,039 --> 00:33:21,679
on it yeah but does it

797
00:33:21,679 --> 00:33:23,600
can

798
00:33:23,600 --> 00:33:27,519
can it be uh predated

799
00:33:27,600 --> 00:33:31,600
so but as a crl typically

800
00:33:31,600 --> 00:33:33,039
go ahead very good

801
00:33:33,039 --> 00:33:36,240
uh a crl typically doesn't have entries

802
00:33:36,240 --> 00:33:37,519
for

803
00:33:37,519 --> 00:33:39,360
certificates that have already expired i

804
00:33:39,360 --> 00:33:41,840
mean part of the reason for expiration

805
00:33:41,840 --> 00:33:45,200
is to constrain the sizes of the crls

806
00:33:45,200 --> 00:33:48,440
get to be

807
00:33:52,480 --> 00:33:54,480
so what's the risk case here that do you

808
00:33:54,480 --> 00:33:56,960
discover later that the certificate was

809
00:33:56,960 --> 00:33:59,039
compromised but it has already also

810
00:33:59,039 --> 00:34:00,720
expired so

811
00:34:00,720 --> 00:34:02,399
people may have received messages from

812
00:34:02,399 --> 00:34:04,080
it before the expiry date that they

813
00:34:04,080 --> 00:34:05,679
should no longer trust

814
00:34:05,679 --> 00:34:06,480
that

815
00:34:06,480 --> 00:34:08,159
the question is do we need to handle

816
00:34:08,159 --> 00:34:10,399
that case and if so

817
00:34:10,399 --> 00:34:12,159
how do we handle it but

818
00:34:12,159 --> 00:34:13,280
otherwise

819
00:34:13,280 --> 00:34:15,040
you don't want the message itself to

820
00:34:15,040 --> 00:34:17,119
just disappear when the key expires

821
00:34:17,119 --> 00:34:18,719
which it

822
00:34:18,719 --> 00:34:21,839
goes untrustworthy

823
00:34:23,918 --> 00:34:26,719
well it it shouldn't disappear but you

824
00:34:26,719 --> 00:34:29,199
you shouldn't assume that i mean it's

825
00:34:29,199 --> 00:34:30,879
almost like there's a third state here

826
00:34:30,879 --> 00:34:33,359
with with expiration that says i don't

827
00:34:33,359 --> 00:34:35,839
know whether it's valid or not anymore

828
00:34:35,839 --> 00:34:36,719
um

829
00:34:36,719 --> 00:34:37,918
because

830
00:34:37,918 --> 00:34:40,000
yeah but you know pretty well

831
00:34:40,000 --> 00:34:41,918
the user experience for that would be

832
00:34:41,918 --> 00:34:43,280
terrible

833
00:34:43,280 --> 00:34:45,679
i know

834
00:34:45,918 --> 00:34:47,760
and and it's but but it's for that

835
00:34:47,760 --> 00:34:49,440
reason that generally

836
00:34:49,440 --> 00:34:52,159
you considered uh expired certificates

837
00:34:52,159 --> 00:34:54,239
to be invalid

838
00:34:54,239 --> 00:34:55,679
i mean they're invalid for a different

839
00:34:55,679 --> 00:34:57,280
reason than a revoked certificate but

840
00:34:57,280 --> 00:34:59,200
they're still invalid well darren

841
00:34:59,200 --> 00:35:01,040
they're invalid for new messages that is

842
00:35:01,040 --> 00:35:03,599
different from having never been valid

843
00:35:03,599 --> 00:35:05,520
right which is what it feels like to the

844
00:35:05,520 --> 00:35:07,200
user if they try and validate that

845
00:35:07,200 --> 00:35:08,960
message in the future

846
00:35:08,960 --> 00:35:11,200
right if you validate a message today

847
00:35:11,200 --> 00:35:14,480
with a valid certificate and uh a year

848
00:35:14,480 --> 00:35:17,440
from now that certificate expires the

849
00:35:17,440 --> 00:35:19,280
message is still considered to have been

850
00:35:19,280 --> 00:35:22,320
validated and any user experience

851
00:35:22,320 --> 00:35:24,320
that doesn't include that is going to be

852
00:35:24,320 --> 00:35:26,720
terrible

853
00:35:27,040 --> 00:35:28,000
we have

854
00:35:28,000 --> 00:35:30,880
first-hand experience of this um because

855
00:35:30,880 --> 00:35:33,520
uh apple profiles which is how you can

856
00:35:33,520 --> 00:35:35,280
easily install mail contacts et cetera

857
00:35:35,280 --> 00:35:37,839
settings do exactly this uh after our

858
00:35:37,839 --> 00:35:39,599
certificate uh certificates valid at the

859
00:35:39,599 --> 00:35:41,359
time of installation later pointed

860
00:35:41,359 --> 00:35:43,119
expires we renew it and now if you go to

861
00:35:43,119 --> 00:35:44,960
your settings it says that the profile

862
00:35:44,960 --> 00:35:47,520
is uh marked as scary red warning thing

863
00:35:47,520 --> 00:35:48,960
even though it works fine but then the

864
00:35:48,960 --> 00:35:52,560
users ask us what's what's going on and

865
00:35:52,560 --> 00:35:54,240
yeah it's so silly it was valid when

866
00:35:54,240 --> 00:35:55,359
they installed it

867
00:35:55,359 --> 00:35:58,000
and then suddenly you decided later that

868
00:35:58,000 --> 00:35:59,680
now it's expired you're going to show a

869
00:35:59,680 --> 00:36:02,240
warning on it

870
00:36:10,000 --> 00:36:12,800
alexi i just have um

871
00:36:12,800 --> 00:36:14,720
another question on this actually

872
00:36:14,720 --> 00:36:16,160
uh okay

873
00:36:16,160 --> 00:36:17,680
not

874
00:36:17,680 --> 00:36:20,079
because because it's not immutable uh

875
00:36:20,079 --> 00:36:22,160
does that mean if it

876
00:36:22,160 --> 00:36:24,320
changes or could have changed

877
00:36:24,320 --> 00:36:28,560
the email will show up in email changes

878
00:36:29,760 --> 00:36:31,040
or no

879
00:36:31,040 --> 00:36:32,560
it needs to be documented either way i

880
00:36:32,560 --> 00:36:33,520
guess

881
00:36:33,520 --> 00:36:34,480
normally

882
00:36:34,480 --> 00:36:36,000
the email slash changes would return

883
00:36:36,000 --> 00:36:37,599
anything where one of the mutable

884
00:36:37,599 --> 00:36:38,640
properties

885
00:36:38,640 --> 00:36:40,720
you know the ids my of anything where

886
00:36:40,720 --> 00:36:43,920
mutual properties may have changed

887
00:36:43,920 --> 00:36:45,839
okay can you send me a quick note on

888
00:36:45,839 --> 00:36:47,040
this

889
00:36:47,040 --> 00:36:48,000
yeah

890
00:36:48,000 --> 00:36:51,280
so that time don't forget

891
00:36:58,240 --> 00:36:59,680
uh so

892
00:36:59,680 --> 00:37:02,720
where are we on this one

893
00:37:04,160 --> 00:37:06,720
braun wants a semantic change well

894
00:37:06,720 --> 00:37:09,520
slightly different attribute

895
00:37:09,520 --> 00:37:10,960
well i'm wondering if it needs a name

896
00:37:10,960 --> 00:37:12,560
change that's all

897
00:37:12,560 --> 00:37:14,880
okay

898
00:37:14,880 --> 00:37:17,839
the description the semantics as well

899
00:37:17,839 --> 00:37:20,079
yeah the semantics and description need

900
00:37:20,079 --> 00:37:21,200
to match

901
00:37:21,200 --> 00:37:23,680
um but what i want from this is to say

902
00:37:23,680 --> 00:37:25,599
this was considered trustworthy at the

903
00:37:25,599 --> 00:37:27,680
time it was

904
00:37:27,680 --> 00:37:29,839
inserted into the mailbox it was

905
00:37:29,839 --> 00:37:32,480
validated by the server it hasn't

906
00:37:32,480 --> 00:37:34,320
the key hasn't been the certificate

907
00:37:34,320 --> 00:37:36,880
hasn't been revoked since

908
00:37:36,880 --> 00:37:38,560
yeah i i think the actual name is fine

909
00:37:38,560 --> 00:37:39,839
for that i think that's just the

910
00:37:39,839 --> 00:37:41,280
description you need to go with it i

911
00:37:41,280 --> 00:37:42,320
don't think we're going to get all of

912
00:37:42,320 --> 00:37:43,520
that into a name

913
00:37:43,520 --> 00:37:44,960
i think s mime states that delivery is

914
00:37:44,960 --> 00:37:47,040
perfectly good some short way of

915
00:37:47,040 --> 00:37:50,520
summarizing that

916
00:37:50,960 --> 00:37:52,640
okay fine

917
00:37:52,640 --> 00:37:55,599
i'll tweet the description then

918
00:37:55,599 --> 00:37:58,240
so ned's comment in in the chat there

919
00:37:58,240 --> 00:37:59,920
which looks like it was about now from

920
00:37:59,920 --> 00:38:02,480
the time stamp was the name says s mom

921
00:38:02,480 --> 00:38:04,240
status at delivery that seems to me to

922
00:38:04,240 --> 00:38:06,400
be the status at a fixed point in time

923
00:38:06,400 --> 00:38:08,079
which is my argument against the name

924
00:38:08,079 --> 00:38:09,359
because that

925
00:38:09,359 --> 00:38:10,880
the fact that that assumption is made

926
00:38:10,880 --> 00:38:13,359
from the name

927
00:38:13,359 --> 00:38:15,200
yeah it's the status at that point in

928
00:38:15,200 --> 00:38:17,520
time but

929
00:38:17,520 --> 00:38:20,640
not it's of the message if you validate

930
00:38:20,640 --> 00:38:22,000
it at that point in time not we

931
00:38:22,000 --> 00:38:23,520
validated at that point in time and now

932
00:38:23,520 --> 00:38:25,920
that's what we we're showing potentially

933
00:38:25,920 --> 00:38:26,720
yeah

934
00:38:26,720 --> 00:38:27,920
yeah

935
00:38:27,920 --> 00:38:29,599
can you suggest i know what you mean ron

936
00:38:29,599 --> 00:38:30,560
but i'm just not sure you're going to

937
00:38:30,560 --> 00:38:32,560
come up with a name that's any clearer

938
00:38:32,560 --> 00:38:34,000
without being like

939
00:38:34,000 --> 00:38:36,880
10 million miles long

940
00:38:36,880 --> 00:38:39,119
yeah all right um i'll put myself in

941
00:38:39,119 --> 00:38:40,560
action to think about that name and see

942
00:38:40,560 --> 00:38:42,960
if we can come up with anything clearer

943
00:38:42,960 --> 00:38:46,119
to propose

944
00:38:53,599 --> 00:38:56,640
cool all right

945
00:38:57,839 --> 00:39:01,078
next slide

946
00:39:03,040 --> 00:39:04,240
um

947
00:39:04,240 --> 00:39:07,680
yeah okay so um

948
00:39:07,680 --> 00:39:10,320
basically signed verified and sent

949
00:39:10,320 --> 00:39:11,920
failed were

950
00:39:11,920 --> 00:39:15,760
going in too much details

951
00:39:15,760 --> 00:39:19,440
about which conditions should

952
00:39:20,000 --> 00:39:21,359
which check should be covered like

953
00:39:21,359 --> 00:39:24,960
serial checks and various other things

954
00:39:25,200 --> 00:39:26,720
i think roman suggested just to

955
00:39:26,720 --> 00:39:28,800
reference existing rfcs i don't think

956
00:39:28,800 --> 00:39:31,760
it's quite sufficient

957
00:39:34,400 --> 00:39:37,680
because implementations vary

958
00:39:37,680 --> 00:39:39,920
i don't think you know existing rfc say

959
00:39:39,920 --> 00:39:42,640
for example that the from

960
00:39:42,640 --> 00:39:45,280
had a field email address has to match

961
00:39:45,280 --> 00:39:48,400
from the certificate

962
00:39:49,760 --> 00:39:52,000
so

963
00:39:54,160 --> 00:39:56,720
i will try to add references

964
00:39:56,720 --> 00:39:58,880
well they already mentioned earlier in

965
00:39:58,880 --> 00:40:01,440
the document um

966
00:40:01,440 --> 00:40:03,440
but i'll try to clean this up to make it

967
00:40:03,440 --> 00:40:05,520
more explicit saying that these are

968
00:40:05,520 --> 00:40:07,280
important examples of things that need

969
00:40:07,280 --> 00:40:10,599
to be checked

970
00:40:11,440 --> 00:40:13,760
and yes answering my own question i i

971
00:40:13,760 --> 00:40:15,359
think i do try to

972
00:40:15,359 --> 00:40:17,440
fix some minor deficiencies in prior

973
00:40:17,440 --> 00:40:19,280
rfcs but

974
00:40:19,280 --> 00:40:21,599
um

975
00:40:21,760 --> 00:40:23,520
i kind of don't want to propagate them

976
00:40:23,520 --> 00:40:26,960
to new implementations

977
00:40:33,119 --> 00:40:37,800
i think that's it on this one

978
00:40:40,319 --> 00:40:42,560
so um

979
00:40:42,560 --> 00:40:44,319
yeah this was actually quite curious uh

980
00:40:44,319 --> 00:40:46,480
very good comments from isg but none of

981
00:40:46,480 --> 00:40:48,720
them are blocking so

982
00:40:48,720 --> 00:40:50,319
in theory i could have just ignored them

983
00:40:50,319 --> 00:40:51,200
all

984
00:40:51,200 --> 00:40:53,200
but i think it was a good discussion to

985
00:40:53,200 --> 00:40:56,240
actually um they made me think and i

986
00:40:56,240 --> 00:40:59,598
think it was a good discussion today

987
00:40:59,839 --> 00:41:01,119
um

988
00:41:01,119 --> 00:41:03,359
so i'll i'll post a new

989
00:41:03,359 --> 00:41:05,520
new draft

990
00:41:05,520 --> 00:41:07,759
uh

991
00:41:08,160 --> 00:41:09,680
i'll ask people to double check on the

992
00:41:09,680 --> 00:41:12,720
maining list and and then we'll

993
00:41:12,720 --> 00:41:16,439
hopefully get this approved

994
00:41:20,880 --> 00:41:24,319
right shall we move on to the um

995
00:41:24,319 --> 00:41:27,599
of this mime draft now

996
00:41:32,720 --> 00:41:34,720
here with me a sec while i get used to

997
00:41:34,720 --> 00:41:36,959
this

998
00:42:00,960 --> 00:42:03,280
i'm having i keep forgetting where the

999
00:42:03,280 --> 00:42:07,200
right button is to share from the

1000
00:42:10,079 --> 00:42:12,319
there we go i found it it's okay the

1001
00:42:12,319 --> 00:42:14,000
share preloaded slides one looks like a

1002
00:42:14,000 --> 00:42:16,880
document

1003
00:42:16,880 --> 00:42:20,160
yeah okay so

1004
00:42:23,680 --> 00:42:25,680
what is my

1005
00:42:25,680 --> 00:42:27,920
signing and encryption is that the one

1006
00:42:27,920 --> 00:42:30,560
that you're looking for alexi

1007
00:42:30,560 --> 00:42:32,880
yes

1008
00:42:37,200 --> 00:42:41,279
okay hold on a sec i've got the wrong

1009
00:42:41,680 --> 00:42:44,680
ah

1010
00:42:50,800 --> 00:42:53,520
okay i'm i'm messed up here

1011
00:42:53,520 --> 00:42:56,319
sorry about that

1012
00:42:56,319 --> 00:42:59,200
where is the right button

1013
00:42:59,200 --> 00:43:01,200
so it's under your name second one along

1014
00:43:01,200 --> 00:43:03,280
it looks like a document share preloaded

1015
00:43:03,280 --> 00:43:04,480
slides

1016
00:43:04,480 --> 00:43:07,440
good thank you i i got the slides up on

1017
00:43:07,440 --> 00:43:09,440
my own screen because i used the other

1018
00:43:09,440 --> 00:43:12,319
button that looked like a folder yeah

1019
00:43:12,319 --> 00:43:14,560
yeah

1020
00:43:15,359 --> 00:43:18,640
okay hold on a second

1021
00:43:19,040 --> 00:43:20,880
at me taker your interface still

1022
00:43:20,880 --> 00:43:23,200
confusing unfortunately

1023
00:43:23,200 --> 00:43:27,839
signing in encryption there we go

1024
00:43:28,000 --> 00:43:32,880
thank you sorry sorry for the segue here

1025
00:43:33,119 --> 00:43:35,200
so the previous draft was about

1026
00:43:35,200 --> 00:43:38,000
signature verification on received mail

1027
00:43:38,000 --> 00:43:41,920
and this one is how to generate sign and

1028
00:43:41,920 --> 00:43:44,079
only encrypted messages

1029
00:43:44,079 --> 00:43:45,920
when sending

1030
00:43:45,920 --> 00:43:47,520
um

1031
00:43:47,520 --> 00:43:49,440
fairly simple really

1032
00:43:49,440 --> 00:43:52,319
email set has two extra attributes both

1033
00:43:52,319 --> 00:43:53,599
optional

1034
00:43:53,599 --> 00:43:56,160
uh and both by default false so

1035
00:43:56,160 --> 00:43:58,319
if they're not specified then basically

1036
00:43:58,319 --> 00:44:00,800
if the gj map behaves just

1037
00:44:00,800 --> 00:44:03,760
as without this

1038
00:44:05,440 --> 00:44:08,000
so if both are specified and true then

1039
00:44:08,000 --> 00:44:11,520
it's first signed and encrypted

1040
00:44:14,079 --> 00:44:16,800
next slide

1041
00:44:18,000 --> 00:44:19,760
so yeah i did

1042
00:44:19,760 --> 00:44:24,160
i posted the new version in

1043
00:44:24,560 --> 00:44:27,040
july

1044
00:44:27,280 --> 00:44:28,960
then i think

1045
00:44:28,960 --> 00:44:31,359
i made after the adoption call i i

1046
00:44:31,359 --> 00:44:33,359
posted it as a working group document

1047
00:44:33,359 --> 00:44:36,800
and something has changed in um

1048
00:44:36,800 --> 00:44:40,160
xml to rfc rendering so it's actually

1049
00:44:40,160 --> 00:44:42,160
though there is a bug that it sort of

1050
00:44:42,160 --> 00:44:44,560
move text in random ways

1051
00:44:44,560 --> 00:44:48,799
um when this space was used

1052
00:44:49,440 --> 00:44:51,200
that looked very awkward so i just

1053
00:44:51,200 --> 00:44:53,760
noticed it a few days ago so i

1054
00:44:53,760 --> 00:44:56,079
yesterday i think um i posted the new

1055
00:44:56,079 --> 00:44:58,640
version to restore

1056
00:44:58,640 --> 00:45:00,480
um the text

1057
00:45:00,480 --> 00:45:02,640
so

1058
00:45:02,640 --> 00:45:04,800
otherwise there was no changes from zero

1059
00:45:04,800 --> 00:45:06,640
one to zero zero

1060
00:45:06,640 --> 00:45:09,920
so open issues

1061
00:45:09,920 --> 00:45:12,319
um

1062
00:45:12,960 --> 00:45:14,960
it's quite common well some

1063
00:45:14,960 --> 00:45:16,480
implementations do

1064
00:45:16,480 --> 00:45:19,119
multi-part sign some some do application

1065
00:45:19,119 --> 00:45:21,359
to kcs7 mime

1066
00:45:21,359 --> 00:45:23,599
one signing do we need a way to control

1067
00:45:23,599 --> 00:45:25,839
this

1068
00:45:29,040 --> 00:45:31,520
i have a suggestion

1069
00:45:31,520 --> 00:45:34,160
yep um these these sound like they're

1070
00:45:34,160 --> 00:45:35,520
the kind of things that you want to set

1071
00:45:35,520 --> 00:45:36,240
on

1072
00:45:36,240 --> 00:45:38,160
on an identity rather than on individual

1073
00:45:38,160 --> 00:45:39,440
emails

1074
00:45:39,440 --> 00:45:41,200
um so you would set this on your

1075
00:45:41,200 --> 00:45:42,800
identity

1076
00:45:42,800 --> 00:45:44,480
sounds good to me and presumably that's

1077
00:45:44,480 --> 00:45:47,280
where you would set um key names or or

1078
00:45:47,280 --> 00:45:48,079
key

1079
00:45:48,079 --> 00:45:50,480
data as well

1080
00:45:50,480 --> 00:45:52,400
at the moment it's out of scope it's

1081
00:45:52,400 --> 00:45:53,920
sort of magic

1082
00:45:53,920 --> 00:45:55,520
but yeah if

1083
00:45:55,520 --> 00:45:57,119
if there was an extension for that

1084
00:45:57,119 --> 00:46:00,960
that's where it would go as well yes

1085
00:46:00,960 --> 00:46:03,119
um

1086
00:46:03,119 --> 00:46:05,440
is it worth doing that in this extension

1087
00:46:05,440 --> 00:46:08,319
just defining

1088
00:46:08,640 --> 00:46:11,440
that it's still on the identity or or

1089
00:46:11,440 --> 00:46:12,839
defining how

1090
00:46:12,839 --> 00:46:17,599
to specify it on the identity

1091
00:46:18,640 --> 00:46:20,560
as in if you have multiple keys which

1092
00:46:20,560 --> 00:46:22,319
one to use

1093
00:46:22,319 --> 00:46:24,560
yeah

1094
00:46:24,560 --> 00:46:26,000
so you you would

1095
00:46:26,000 --> 00:46:28,880
create an identity for each key and you

1096
00:46:28,880 --> 00:46:30,400
would select the one that you wanted

1097
00:46:30,400 --> 00:46:32,960
presumably

1098
00:46:32,960 --> 00:46:35,200
or you'd have some way to to specify the

1099
00:46:35,200 --> 00:46:36,240
key

1100
00:46:36,240 --> 00:46:38,720
as part of the

1101
00:46:38,720 --> 00:46:40,960
the signing

1102
00:46:40,960 --> 00:46:42,880
so so do you actually put the key

1103
00:46:42,880 --> 00:46:45,119
material into the identity that seems

1104
00:46:45,119 --> 00:46:47,680
possibly not and if not a way to

1105
00:46:47,680 --> 00:46:49,200
get reference and then bronze you need

1106
00:46:49,200 --> 00:46:51,680
to be able to get the list of what keys

1107
00:46:51,680 --> 00:46:52,880
i have i don't know i think it's going

1108
00:46:52,880 --> 00:46:55,359
to complicate it a lot once you start

1109
00:46:55,359 --> 00:46:57,200
yeah i would rather not put put the key

1110
00:46:57,200 --> 00:46:59,520
material itself it just say that's out

1111
00:46:59,520 --> 00:47:01,680
of band whatever you know

1112
00:47:01,680 --> 00:47:03,440
however you manage it

1113
00:47:03,440 --> 00:47:06,000
for your system uh

1114
00:47:06,000 --> 00:47:09,760
like for us is going to be like

1115
00:47:09,760 --> 00:47:12,720
pkcs12 stored in ldap for example which

1116
00:47:12,720 --> 00:47:14,800
is uh

1117
00:47:14,800 --> 00:47:16,880
as much as i like our implementation i

1118
00:47:16,880 --> 00:47:18,480
don't think everybody will implement it

1119
00:47:18,480 --> 00:47:20,880
like this

1120
00:47:24,160 --> 00:47:25,680
yeah go on

1121
00:47:25,680 --> 00:47:27,839
i just wanted to ask with the

1122
00:47:27,839 --> 00:47:29,359
creating the

1123
00:47:29,359 --> 00:47:31,760
uh structure if the idea you would

1124
00:47:31,760 --> 00:47:33,680
create the body structure as you

1125
00:47:33,680 --> 00:47:36,000
normally would with jmap and then wrap

1126
00:47:36,000 --> 00:47:37,760
that whole thing in

1127
00:47:37,760 --> 00:47:38,960
a new

1128
00:47:38,960 --> 00:47:39,839
kind of

1129
00:47:39,839 --> 00:47:42,800
mime like the multi-part signed or

1130
00:47:42,800 --> 00:47:44,240
yeah

1131
00:47:44,240 --> 00:47:45,599
yeah

1132
00:47:45,599 --> 00:47:47,119
okay cool

1133
00:47:47,119 --> 00:47:49,520
so um i actually to be honest i

1134
00:47:49,520 --> 00:47:51,599
struggled here a little bit because

1135
00:47:51,599 --> 00:47:53,440
what my implementation does it's

1136
00:47:53,440 --> 00:47:56,480
actually it creates message on send

1137
00:47:56,480 --> 00:47:57,359
um

1138
00:47:57,359 --> 00:47:58,880
but i thought it would be slightly

1139
00:47:58,880 --> 00:48:01,520
better to

1140
00:48:02,079 --> 00:48:04,400
create a message and then just like keep

1141
00:48:04,400 --> 00:48:07,680
the send sort of simple

1142
00:48:07,680 --> 00:48:11,118
but i'm open to suggestions

1143
00:48:13,200 --> 00:48:14,000
well

1144
00:48:14,000 --> 00:48:18,319
are you storing the signed version

1145
00:48:18,319 --> 00:48:20,960
in your draft

1146
00:48:22,720 --> 00:48:24,959
yeah

1147
00:48:25,280 --> 00:48:26,720
then yeah then i think you want to do it

1148
00:48:26,720 --> 00:48:28,960
yeah when you create that email not in

1149
00:48:28,960 --> 00:48:30,720
the sending bit

1150
00:48:30,720 --> 00:48:32,559
yeah so i think email set is better for

1151
00:48:32,559 --> 00:48:35,680
that so that's um

1152
00:48:35,680 --> 00:48:37,680
but neil if you can

1153
00:48:37,680 --> 00:48:39,200
double check that what i wrote it

1154
00:48:39,200 --> 00:48:40,800
actually makes sense

1155
00:48:40,800 --> 00:48:42,319
yeah i'll uh

1156
00:48:42,319 --> 00:48:44,800
read through that and see if anything

1157
00:48:44,800 --> 00:48:46,400
jumps out

1158
00:48:46,400 --> 00:48:49,920
right so um

1159
00:48:49,920 --> 00:48:52,559
okay suggestion so far is multi-part

1160
00:48:52,559 --> 00:48:54,880
sign versus application because

1161
00:48:54,880 --> 00:48:56,160
seven of mine

1162
00:48:56,160 --> 00:48:58,880
uh have a boolean in identity

1163
00:48:58,880 --> 00:49:00,800
i assume header protection is similar

1164
00:49:00,800 --> 00:49:02,319
thing

1165
00:49:02,319 --> 00:49:03,839
and the identity

1166
00:49:03,839 --> 00:49:06,559
possibly be able to list

1167
00:49:06,559 --> 00:49:09,359
keys without

1168
00:49:09,440 --> 00:49:11,359
managing key material itself in the

1169
00:49:11,359 --> 00:49:14,799
identity object

1170
00:49:15,119 --> 00:49:17,839
um

1171
00:49:18,480 --> 00:49:21,760
then the other thing that

1172
00:49:23,200 --> 00:49:26,079
is an open issue is whether

1173
00:49:26,079 --> 00:49:29,359
automatic smile decryption

1174
00:49:29,359 --> 00:49:31,599
is something um we're going to have

1175
00:49:31,599 --> 00:49:34,640
there here as well

1176
00:49:35,680 --> 00:49:37,599
again it can be yet another extension i

1177
00:49:37,599 --> 00:49:39,520
suppose or it can be just part of this

1178
00:49:39,520 --> 00:49:41,520
just for convenience

1179
00:49:41,520 --> 00:49:45,800
um i'm open to suggestions

1180
00:49:52,079 --> 00:49:53,839
i mean some of the

1181
00:49:53,839 --> 00:49:55,359
nest uh

1182
00:49:55,359 --> 00:49:57,599
specification i forgot what what the

1183
00:49:57,599 --> 00:50:00,079
specification was it suggested that you

1184
00:50:00,079 --> 00:50:02,800
automatically

1185
00:50:02,960 --> 00:50:05,599
decrypt and store decrypted version and

1186
00:50:05,599 --> 00:50:07,520
secure store

1187
00:50:07,520 --> 00:50:08,480
uh

1188
00:50:08,480 --> 00:50:10,400
so that you avoid the

1189
00:50:10,400 --> 00:50:12,559
issue of

1190
00:50:12,559 --> 00:50:15,760
the expiration all of this

1191
00:50:15,760 --> 00:50:18,640
is the idea you would only decrypt on

1192
00:50:18,640 --> 00:50:20,319
demand like when you fetched it or you

1193
00:50:20,319 --> 00:50:21,920
would

1194
00:50:21,920 --> 00:50:22,190
um

1195
00:50:22,190 --> 00:50:24,240
[Music]

1196
00:50:24,240 --> 00:50:25,920
like the secret store where yeah server

1197
00:50:25,920 --> 00:50:26,800
or

1198
00:50:26,800 --> 00:50:29,839
client yes you can yes

1199
00:50:29,839 --> 00:50:33,040
i would decrypt on demand

1200
00:50:39,200 --> 00:50:40,559
i mean i suppose you can out of the

1201
00:50:40,559 --> 00:50:43,920
crypt everything but uh

1202
00:50:45,520 --> 00:50:46,800
yeah i'm just wondering like how

1203
00:50:46,800 --> 00:50:48,240
seamless should it be to the client or

1204
00:50:48,240 --> 00:50:50,640
should the client need to explicitly

1205
00:50:50,640 --> 00:50:54,559
request to get encrypted kind of

1206
00:50:54,559 --> 00:50:56,000
they just when you fetch it with email

1207
00:50:56,000 --> 00:50:57,520
get it automatically decrypts it in some

1208
00:50:57,520 --> 00:50:59,040
way i don't know whether that's actually

1209
00:50:59,040 --> 00:51:01,759
good or not

1210
00:51:07,760 --> 00:51:12,160
there are lots of things that can be uh

1211
00:51:12,160 --> 00:51:13,200
if it's a

1212
00:51:13,200 --> 00:51:15,440
single simple structure

1213
00:51:15,440 --> 00:51:18,640
like if it's application pkcs7 mime

1214
00:51:18,640 --> 00:51:21,040
with just encryption or signature and

1215
00:51:21,040 --> 00:51:22,800
encryption then you can sort of do that

1216
00:51:22,800 --> 00:51:26,240
automatically if it's uh

1217
00:51:26,240 --> 00:51:28,240
if you have a bunch of encrypted

1218
00:51:28,240 --> 00:51:30,800
attachments in a message then it becomes

1219
00:51:30,800 --> 00:51:33,440
more interesting

1220
00:51:39,520 --> 00:51:40,880
i'm happy to

1221
00:51:40,880 --> 00:51:42,880
uh

1222
00:51:42,880 --> 00:51:44,880
leave this be and just people can think

1223
00:51:44,880 --> 00:51:47,119
about this

1224
00:51:47,119 --> 00:51:49,119
because obviously it does have quite a

1225
00:51:49,119 --> 00:51:51,839
bit of complexity

1226
00:51:55,520 --> 00:51:58,079
yeah email get already defines a bunch

1227
00:51:58,079 --> 00:51:59,920
of boolean options like

1228
00:51:59,920 --> 00:52:02,839
fetch text body values fetch html body

1229
00:52:02,839 --> 00:52:05,599
values max body value bytes that kind of

1230
00:52:05,599 --> 00:52:06,720
thing that

1231
00:52:06,720 --> 00:52:09,839
control what's returned

1232
00:52:09,839 --> 00:52:12,240
so adding another boolean for

1233
00:52:12,240 --> 00:52:14,879
decrypt

1234
00:52:15,359 --> 00:52:17,599
seems like an easy way to do that so if

1235
00:52:17,599 --> 00:52:19,280
you want it to be

1236
00:52:19,280 --> 00:52:21,760
decrypted and get back a part of the

1237
00:52:21,760 --> 00:52:24,319
decrypted body you just pass a header or

1238
00:52:24,319 --> 00:52:27,440
pass a an extra property in the get

1239
00:52:27,440 --> 00:52:28,880
at the top level

1240
00:52:28,880 --> 00:52:31,920
okay can you um can we minute this or

1241
00:52:31,920 --> 00:52:34,160
can you send me an email yeah both oh

1242
00:52:34,160 --> 00:52:35,760
definitely

1243
00:52:35,760 --> 00:52:38,079
thank you

1244
00:52:40,720 --> 00:52:42,559
because yeah i was thinking about like

1245
00:52:42,559 --> 00:52:44,640
you know

1246
00:52:44,640 --> 00:52:46,880
create create a new blob ide and and

1247
00:52:46,880 --> 00:52:49,520
then parsing to email parts but your

1248
00:52:49,520 --> 00:52:53,240
proposal sounds simpler

1249
00:53:00,000 --> 00:53:03,599
write any other comments on this one

1250
00:53:04,160 --> 00:53:07,598
i think i have one more slide

1251
00:53:08,160 --> 00:53:10,400
that might be it

1252
00:53:10,400 --> 00:53:12,240
i didn't find one

1253
00:53:12,240 --> 00:53:14,240
okay then then just did three slides

1254
00:53:14,240 --> 00:53:16,399
there

1255
00:53:19,760 --> 00:53:22,400
i mean in certain way this documented is

1256
00:53:22,400 --> 00:53:24,160
other than decryption

1257
00:53:24,160 --> 00:53:26,319
um

1258
00:53:26,319 --> 00:53:28,400
it's kind of much easier because there

1259
00:53:28,400 --> 00:53:30,720
aren't that many attributes

1260
00:53:30,720 --> 00:53:32,319
um

1261
00:53:32,319 --> 00:53:34,800
on the sending side um

1262
00:53:34,800 --> 00:53:36,319
but there is quite a bit of complexity

1263
00:53:36,319 --> 00:53:38,079
implementing it

1264
00:53:38,079 --> 00:53:40,640
obviously where the s9 signature

1265
00:53:40,640 --> 00:53:44,078
verification sort of the reverse

1266
00:53:50,800 --> 00:53:52,319
cool i assumed that these would go a lot

1267
00:53:52,319 --> 00:53:53,599
faster than they did which is probably

1268
00:53:53,599 --> 00:53:55,119
because i didn't read through the slides

1269
00:53:55,119 --> 00:53:56,880
and work things out so we're well behind

1270
00:53:56,880 --> 00:53:58,400
on the agenda but luckily we have heaps

1271
00:53:58,400 --> 00:54:01,200
of extra time

1272
00:54:01,599 --> 00:54:03,359
but i guess we're up to germap calendars

1273
00:54:03,359 --> 00:54:04,480
which is

1274
00:54:04,480 --> 00:54:06,480
not going to take the 20 minutes that it

1275
00:54:06,480 --> 00:54:09,680
that we would expect that isn't to

1276
00:54:09,680 --> 00:54:12,240
nothing much for this one

1277
00:54:12,240 --> 00:54:13,359
i don't think there's actually much to

1278
00:54:13,359 --> 00:54:15,280
say like especially as we talked about

1279
00:54:15,280 --> 00:54:16,000
this

1280
00:54:16,000 --> 00:54:18,400
at the interim meeting um a few weeks

1281
00:54:18,400 --> 00:54:19,680
ago and honestly it's not a lot of time

1282
00:54:19,680 --> 00:54:21,200
for much to happen

1283
00:54:21,200 --> 00:54:23,040
um

1284
00:54:23,040 --> 00:54:25,520
we're still trying to get some

1285
00:54:25,520 --> 00:54:28,079
implementation experience uh

1286
00:54:28,079 --> 00:54:29,680
i'd hope to have that by this meeting

1287
00:54:29,680 --> 00:54:32,880
but um various things got in the way uh

1288
00:54:32,880 --> 00:54:34,480
but we are

1289
00:54:34,480 --> 00:54:36,799
so close to rolling it out in quite a

1290
00:54:36,799 --> 00:54:38,960
few places so definitely by the next

1291
00:54:38,960 --> 00:54:40,319
meeting um

1292
00:54:40,319 --> 00:54:42,319
we will i've got a small list of to do's

1293
00:54:42,319 --> 00:54:43,440
to the spec

1294
00:54:43,440 --> 00:54:44,799
um

1295
00:54:44,799 --> 00:54:46,480
based on our previous

1296
00:54:46,480 --> 00:54:48,319
meetings and i'm being a bit lacks and

1297
00:54:48,319 --> 00:54:50,319
updating that so apologies i'll also get

1298
00:54:50,319 --> 00:54:51,280
to that

1299
00:54:51,280 --> 00:54:53,760
uh yeah i don't think there's

1300
00:54:53,760 --> 00:54:56,079
much to say today though unless someone

1301
00:54:56,079 --> 00:54:57,119
wants

1302
00:54:57,119 --> 00:54:59,200
to talk about it i suggest we move on to

1303
00:54:59,200 --> 00:55:02,520
the tasks

1304
00:55:10,559 --> 00:55:12,000
hi

1305
00:55:12,000 --> 00:55:13,920
hey that was quick

1306
00:55:13,920 --> 00:55:14,799
yeah

1307
00:55:14,799 --> 00:55:16,640
quicker than expected

1308
00:55:16,640 --> 00:55:17,599
okay

1309
00:55:17,599 --> 00:55:20,799
uh yeah so uh today um haryo and i are

1310
00:55:20,799 --> 00:55:23,200
gonna talk about jimmy for tasks

1311
00:55:23,200 --> 00:55:25,839
so there is one minor change that i did

1312
00:55:25,839 --> 00:55:29,119
since the last intro meeting ah perfect

1313
00:55:29,119 --> 00:55:30,160
um

1314
00:55:30,160 --> 00:55:32,880
i i essentially i i

1315
00:55:32,880 --> 00:55:35,680
made assignee part of a js kind of

1316
00:55:35,680 --> 00:55:37,280
participant role

1317
00:55:37,280 --> 00:55:40,480
property so so it's a new value

1318
00:55:40,480 --> 00:55:42,400
that it can be

1319
00:55:42,400 --> 00:55:45,359
instead of having it as an extra

1320
00:55:45,359 --> 00:55:47,280
object that basically is was the

1321
00:55:47,280 --> 00:55:49,119
renaming of the

1322
00:55:49,119 --> 00:55:51,680
the thing that is in js calendar in jmf

1323
00:55:51,680 --> 00:55:52,960
calendar

1324
00:55:52,960 --> 00:55:56,319
and we also have uh published uh

1325
00:55:56,319 --> 00:55:57,920
the survey

1326
00:55:57,920 --> 00:56:00,160
of various task systems

1327
00:56:00,160 --> 00:56:02,480
and this is where i give over to

1328
00:56:02,480 --> 00:56:05,119
how you to give an introduction to it

1329
00:56:05,119 --> 00:56:08,079
all right thanks um yeah just to to give

1330
00:56:08,079 --> 00:56:09,760
some more context i think with jammer

1331
00:56:09,760 --> 00:56:12,160
for tasks we are uh

1332
00:56:12,160 --> 00:56:14,000
you know in an earlier stage than we are

1333
00:56:14,000 --> 00:56:15,920
miss with a lot of other jmet stuff

1334
00:56:15,920 --> 00:56:19,040
which i think uh started much earlier

1335
00:56:19,040 --> 00:56:22,079
um and our observation which i think we

1336
00:56:22,079 --> 00:56:24,480
in part already uh discussed in the

1337
00:56:24,480 --> 00:56:26,400
previous meeting is a little bit that

1338
00:56:26,400 --> 00:56:28,640
unlike email contact and calendaring

1339
00:56:28,640 --> 00:56:30,640
functionality there seems to be

1340
00:56:30,640 --> 00:56:33,280
more differences in tools supporting

1341
00:56:33,280 --> 00:56:35,920
tasks and

1342
00:56:35,920 --> 00:56:38,720
that led us basically to survey also

1343
00:56:38,720 --> 00:56:40,559
different tools and to look a little bit

1344
00:56:40,559 --> 00:56:41,760
into them

1345
00:56:41,760 --> 00:56:44,319
in terms of how to design the jammer for

1346
00:56:44,319 --> 00:56:46,960
tasks specification

1347
00:56:46,960 --> 00:56:48,880
there is one major question which comes

1348
00:56:48,880 --> 00:56:50,480
out from time to time and is also

1349
00:56:50,480 --> 00:56:51,839
touched a little bit by the recent

1350
00:56:51,839 --> 00:56:53,839
discussion on jaime fosseef on the

1351
00:56:53,839 --> 00:56:55,280
mailing list

1352
00:56:55,280 --> 00:56:56,960
and this is a little bit the discussion

1353
00:56:56,960 --> 00:56:59,280
about you know what is

1354
00:56:59,280 --> 00:57:01,119
what is the intention or goal of jmf in

1355
00:57:01,119 --> 00:57:03,119
a certain sense so um

1356
00:57:03,119 --> 00:57:06,319
and in in how far is it really um

1357
00:57:06,319 --> 00:57:08,640
desired that jmap is also used by

1358
00:57:08,640 --> 00:57:11,520
existing systems in order to adopt jmap

1359
00:57:11,520 --> 00:57:14,480
to expose data which is already there

1360
00:57:14,480 --> 00:57:16,799
and i think we discussed about that in

1361
00:57:16,799 --> 00:57:19,440
the last ietf working group meeting and

1362
00:57:19,440 --> 00:57:21,359
there was some positive feedback with

1363
00:57:21,359 --> 00:57:23,520
respect to tasks to look into different

1364
00:57:23,520 --> 00:57:26,799
tools which are not core groupware or

1365
00:57:26,799 --> 00:57:29,040
webmail tools

1366
00:57:29,040 --> 00:57:31,040
and this is basically what this survey

1367
00:57:31,040 --> 00:57:33,520
was about so to look also not just into

1368
00:57:33,520 --> 00:57:35,280
groupware and webmail tools what we also

1369
00:57:35,280 --> 00:57:36,480
did

1370
00:57:36,480 --> 00:57:39,760
but also into tools like issue tracking

1371
00:57:39,760 --> 00:57:43,359
systems or those ken ben kanban style

1372
00:57:43,359 --> 00:57:45,359
systems like trello and these kind of

1373
00:57:45,359 --> 00:57:47,599
things and um yeah

1374
00:57:47,599 --> 00:57:49,839
i think a handover again too

1375
00:57:49,839 --> 00:57:52,160
yeah okay so so just a

1376
00:57:52,160 --> 00:57:54,799
short overview of about what we what we

1377
00:57:54,799 --> 00:57:56,799
did and and how we

1378
00:57:56,799 --> 00:57:58,559
came to that uh

1379
00:57:58,559 --> 00:58:00,079
for those results

1380
00:58:00,079 --> 00:58:02,000
so the the initial scope of the survey

1381
00:58:02,000 --> 00:58:03,680
was that we we chose three different

1382
00:58:03,680 --> 00:58:06,240
kind of systems uh group s systems like

1383
00:58:06,240 --> 00:58:09,440
ox for example kanban style systems like

1384
00:58:09,440 --> 00:58:10,480
trello

1385
00:58:10,480 --> 00:58:12,720
as well as issue tracking systems like

1386
00:58:12,720 --> 00:58:14,079
mantis

1387
00:58:14,079 --> 00:58:16,079
all of them use

1388
00:58:16,079 --> 00:58:17,200
tasks

1389
00:58:17,200 --> 00:58:18,880
in in

1390
00:58:18,880 --> 00:58:21,520
one way or the other

1391
00:58:21,520 --> 00:58:23,920
and the goal was here again to identify

1392
00:58:23,920 --> 00:58:26,400
potential gaps in the in current the

1393
00:58:26,400 --> 00:58:28,160
jmap for calendar

1394
00:58:28,160 --> 00:58:31,119
and also identify

1395
00:58:31,119 --> 00:58:32,880
common or distinct features between

1396
00:58:32,880 --> 00:58:35,280
those systems

1397
00:58:35,280 --> 00:58:38,000
the approach was then to look at the ui

1398
00:58:38,000 --> 00:58:40,880
features of each system

1399
00:58:40,880 --> 00:58:42,960
could categorize

1400
00:58:42,960 --> 00:58:44,400
a certain feature

1401
00:58:44,400 --> 00:58:46,400
so we can compare

1402
00:58:46,400 --> 00:58:48,400
the values

1403
00:58:48,400 --> 00:58:50,640
and also can count

1404
00:58:50,640 --> 00:58:53,280
usage across the different

1405
00:58:53,280 --> 00:58:57,040
systems that we observed in the survey

1406
00:58:57,040 --> 00:58:58,240
okay you can

1407
00:58:58,240 --> 00:59:01,280
go to the next slide

1408
00:59:01,280 --> 00:59:04,000
um so the first results can be found at

1409
00:59:04,000 --> 00:59:05,680
the github

1410
00:59:05,680 --> 00:59:07,520
feel free to leave comments there if you

1411
00:59:07,520 --> 00:59:10,640
want um you can also could also upload

1412
00:59:10,640 --> 00:59:12,400
new revisions

1413
00:59:12,400 --> 00:59:15,119
in case that makes sense

1414
00:59:15,119 --> 00:59:16,720
if there are some some

1415
00:59:16,720 --> 00:59:18,720
if there's some important feedback

1416
00:59:18,720 --> 00:59:19,680
um

1417
00:59:19,680 --> 00:59:22,319
so the most of the most important

1418
00:59:22,319 --> 00:59:24,480
observations of that survey

1419
00:59:24,480 --> 00:59:26,160
um are that task systems are

1420
00:59:26,160 --> 00:59:28,640
heterogeneous regarding some features so

1421
00:59:28,640 --> 00:59:30,960
i didn't find of this of the system

1422
00:59:30,960 --> 00:59:33,040
surveyed i didn't found this find a

1423
00:59:33,040 --> 00:59:35,040
system that had

1424
00:59:35,040 --> 00:59:36,799
implemented all features of jmf for

1425
00:59:36,799 --> 00:59:38,079
tasks

1426
00:59:38,079 --> 00:59:38,960
and

1427
00:59:38,960 --> 00:59:41,359
so the result of that is that probably

1428
00:59:41,359 --> 00:59:43,119
developers that

1429
00:59:43,119 --> 00:59:45,680
look at the jmf for tasks back will not

1430
00:59:45,680 --> 00:59:47,839
want to implement the whole thing

1431
00:59:47,839 --> 00:59:50,400
basically

1432
00:59:50,400 --> 00:59:52,880
and especially some more complex

1433
00:59:52,880 --> 00:59:55,359
features

1434
00:59:55,920 --> 00:59:58,640
is something that that

1435
00:59:58,640 --> 01:00:00,319
some developers might want to skip and

1436
01:00:00,319 --> 01:00:02,319
it might make sense to

1437
01:00:02,319 --> 01:00:04,799
to identify some that might

1438
01:00:04,799 --> 01:00:07,040
be optional or

1439
01:00:07,040 --> 01:00:09,599
separate from the core features

1440
01:00:09,599 --> 01:00:11,599
but yeah core features is a good point

1441
01:00:11,599 --> 01:00:12,480
there

1442
01:00:12,480 --> 01:00:15,280
this is it also has become obvious that

1443
01:00:15,280 --> 01:00:16,880
uh task systems are homogeneous

1444
01:00:16,880 --> 01:00:19,680
regarding most core features

1445
01:00:19,680 --> 01:00:21,440
um yeah

1446
01:00:21,440 --> 01:00:23,599
that's basically

1447
01:00:23,599 --> 01:00:25,200
the main point here i can i think you

1448
01:00:25,200 --> 01:00:29,520
can go to the next slide again

1449
01:00:29,520 --> 01:00:31,920
yeah so here um

1450
01:00:31,920 --> 01:00:34,240
to spark some discussion maybe

1451
01:00:34,240 --> 01:00:36,559
we listed a bunch of um

1452
01:00:36,559 --> 01:00:38,720
properties or features

1453
01:00:38,720 --> 01:00:40,720
that are currently

1454
01:00:40,720 --> 01:00:43,280
within jmap for tasks but are not

1455
01:00:43,280 --> 01:00:46,559
supported by all systems that i surveyed

1456
01:00:46,559 --> 01:00:49,359
uh for example alerts and sne

1457
01:00:49,359 --> 01:00:51,280
attachments recurrence

1458
01:00:51,280 --> 01:00:52,880
or relation

1459
01:00:52,880 --> 01:00:55,760
especially recurrence is for example a

1460
01:00:55,760 --> 01:00:58,799
quite a complex thing to implement

1461
01:00:58,799 --> 01:01:01,040
and if you don't need it at all for your

1462
01:01:01,040 --> 01:01:03,200
application it

1463
01:01:03,200 --> 01:01:06,400
uh it it might make the the spec a bit

1464
01:01:06,400 --> 01:01:08,319
easier to read maybe i don't know it's

1465
01:01:08,319 --> 01:01:10,960
it's it's a point for discussion the

1466
01:01:10,960 --> 01:01:13,760
suggestion here is uh to to come up with

1467
01:01:13,760 --> 01:01:14,880
a way

1468
01:01:14,880 --> 01:01:17,839
to group them somehow uh and

1469
01:01:17,839 --> 01:01:18,799
have a

1470
01:01:18,799 --> 01:01:20,720
make them like an optional

1471
01:01:20,720 --> 01:01:22,720
separate capability maybe

1472
01:01:22,720 --> 01:01:26,399
some kind of an optional feature maybe

1473
01:01:26,960 --> 01:01:29,200
okay

1474
01:01:29,839 --> 01:01:31,200
and um

1475
01:01:31,200 --> 01:01:32,880
yeah so they're also there i also

1476
01:01:32,880 --> 01:01:34,319
identified some features that are not

1477
01:01:34,319 --> 01:01:36,559
yet present in gmap for tasks

1478
01:01:36,559 --> 01:01:39,520
but i found but some systems are using

1479
01:01:39,520 --> 01:01:40,640
them

1480
01:01:40,640 --> 01:01:42,400
there are some kind of complex

1481
01:01:42,400 --> 01:01:44,720
properties like a checklist

1482
01:01:44,720 --> 01:01:46,240
which we already

1483
01:01:46,240 --> 01:01:48,079
shortly talked about in previous

1484
01:01:48,079 --> 01:01:49,359
meetings

1485
01:01:49,359 --> 01:01:51,599
um also

1486
01:01:51,599 --> 01:01:54,319
a comment list or a discussion that is

1487
01:01:54,319 --> 01:01:57,279
attached to a task

1488
01:01:58,000 --> 01:02:00,720
which quite a lot of systems used also

1489
01:02:00,720 --> 01:02:04,959
quite a lot of systems used history

1490
01:02:05,119 --> 01:02:07,119
where you could look at old revisions of

1491
01:02:07,119 --> 01:02:08,480
a certain task

1492
01:02:08,480 --> 01:02:10,400
and there were some additional simple

1493
01:02:10,400 --> 01:02:13,760
key value style properties observed

1494
01:02:13,760 --> 01:02:15,520
so the suggestion

1495
01:02:15,520 --> 01:02:18,079
here is maybe to to extend gemma for

1496
01:02:18,079 --> 01:02:20,400
tasks somehow with those

1497
01:02:20,400 --> 01:02:23,440
features to support

1498
01:02:23,440 --> 01:02:27,839
most systems observed maybe

1499
01:02:27,920 --> 01:02:29,839
yeah

1500
01:02:29,839 --> 01:02:31,280
i think we can go to the next slide

1501
01:02:31,280 --> 01:02:34,960
again and probably discuss afterwards um

1502
01:02:34,960 --> 01:02:37,280
so the next step here in general for the

1503
01:02:37,280 --> 01:02:38,480
survey are

1504
01:02:38,480 --> 01:02:41,200
we would continue this survey

1505
01:02:41,200 --> 01:02:43,920
a bit further and refine it

1506
01:02:43,920 --> 01:02:45,680
get the feedback

1507
01:02:45,680 --> 01:02:47,599
work it in

1508
01:02:47,599 --> 01:02:49,359
we also want to reach out to to

1509
01:02:49,359 --> 01:02:51,039
developers and vendors

1510
01:02:51,039 --> 01:02:53,119
about jmap and

1511
01:02:53,119 --> 01:02:55,200
stuff that they would require

1512
01:02:55,200 --> 01:02:59,200
and yeah updated the spec obviously with

1513
01:02:59,200 --> 01:03:00,720
feedback

1514
01:03:00,720 --> 01:03:02,960
from various places

1515
01:03:02,960 --> 01:03:05,200
is there anything you can add uh ohio

1516
01:03:05,200 --> 01:03:06,960
today

1517
01:03:06,960 --> 01:03:11,760
well i think thanks but uh sounds good

1518
01:03:11,839 --> 01:03:14,960
for anyone else so

1519
01:03:15,440 --> 01:03:17,760
yeah i've

1520
01:03:17,760 --> 01:03:19,760
if i can make a suggestion so

1521
01:03:19,760 --> 01:03:22,079
um

1522
01:03:22,079 --> 01:03:25,520
one idea here for path forward is is

1523
01:03:25,520 --> 01:03:27,599
so the the extra

1524
01:03:27,599 --> 01:03:29,839
the data format is actually kind of js

1525
01:03:29,839 --> 01:03:32,240
calendar it's the task object within

1526
01:03:32,240 --> 01:03:35,039
that right and then jmap tasks is kind

1527
01:03:35,039 --> 01:03:36,960
of the um

1528
01:03:36,960 --> 01:03:38,160
having a server to support that and

1529
01:03:38,160 --> 01:03:40,960
being able to um you know store it and

1530
01:03:40,960 --> 01:03:43,599
communicate in a few ways

1531
01:03:43,599 --> 01:03:45,039
so

1532
01:03:45,039 --> 01:03:47,359
uh the data format is easily extensible

1533
01:03:47,359 --> 01:03:48,640
because there's registry for everything

1534
01:03:48,640 --> 01:03:49,839
you can register extra stuff so i

1535
01:03:49,839 --> 01:03:51,200
wouldn't worry about all the little like

1536
01:03:51,200 --> 01:03:53,839
key value stuff where there's one um

1537
01:03:53,839 --> 01:03:56,559
you know uh app that's using it like

1538
01:03:56,559 --> 01:03:59,119
they can always just register uh a new

1539
01:03:59,119 --> 01:04:00,240
property

1540
01:04:00,240 --> 01:04:01,920
in with ayanna it's pretty

1541
01:04:01,920 --> 01:04:03,839
straightforward if if

1542
01:04:03,839 --> 01:04:05,359
us trying to do everything

1543
01:04:05,359 --> 01:04:08,400
it's not worth it um there's common

1544
01:04:08,400 --> 01:04:09,839
stuff then we should try and register

1545
01:04:09,839 --> 01:04:10,839
those

1546
01:04:10,839 --> 01:04:13,839
uh although the complex stuff i wonder

1547
01:04:13,839 --> 01:04:15,680
if um

1548
01:04:15,680 --> 01:04:16,880
that should actually be a separate data

1549
01:04:16,880 --> 01:04:20,079
type over jmap like um or some

1550
01:04:20,079 --> 01:04:23,280
separate in some way like history seems

1551
01:04:23,280 --> 01:04:24,839
interesting

1552
01:04:24,839 --> 01:04:27,280
um uh

1553
01:04:27,280 --> 01:04:29,359
and comments as well as potentially a

1554
01:04:29,359 --> 01:04:31,680
separate data type but

1555
01:04:31,680 --> 01:04:34,000
either way uh and then the final thing i

1556
01:04:34,000 --> 01:04:36,079
was gonna say is is the server could

1557
01:04:36,079 --> 01:04:38,240
we could have a set of

1558
01:04:38,240 --> 01:04:41,680
um common functionality that

1559
01:04:41,680 --> 01:04:43,039
we know is highly common that must be

1560
01:04:43,039 --> 01:04:44,559
supported by any server if it wants to

1561
01:04:44,559 --> 01:04:45,680
support gmap tasks just because

1562
01:04:45,680 --> 01:04:47,359
otherwise it's impossible for a client

1563
01:04:47,359 --> 01:04:49,520
but then it server could advertise

1564
01:04:49,520 --> 01:04:51,359
um and hear all the other

1565
01:04:51,359 --> 01:04:54,000
property names that i support and in the

1566
01:04:54,000 --> 01:04:56,480
capabilities so you can just check does

1567
01:04:56,480 --> 01:04:58,240
it support the recurrence tools property

1568
01:04:58,240 --> 01:04:59,920
if it does i'll show my recurrence rules

1569
01:04:59,920 --> 01:05:02,079
ui if not i won't because i know the

1570
01:05:02,079 --> 01:05:04,559
server doesn't support it um so that's

1571
01:05:04,559 --> 01:05:06,240
my suggestion for them making it

1572
01:05:06,240 --> 01:05:07,680
adaptable because as you say yeah

1573
01:05:07,680 --> 01:05:10,960
there's a lot more differences here

1574
01:05:12,640 --> 01:05:14,720
yeah sounds good

1575
01:05:14,720 --> 01:05:16,480
a little bit

1576
01:05:16,480 --> 01:05:18,400
michael is next i think

1577
01:05:18,400 --> 01:05:20,640
okay

1578
01:05:20,880 --> 01:05:22,480
maybe as a shortcoming before mike

1579
01:05:22,480 --> 01:05:25,760
speaks because um uh it's just related

1580
01:05:25,760 --> 01:05:27,680
to one comment i think he made earlier

1581
01:05:27,680 --> 01:05:29,599
so i think neil mentioned the history

1582
01:05:29,599 --> 01:05:31,839
thing so it was actually put in brackets

1583
01:05:31,839 --> 01:05:33,440
because i think i remember mike you

1584
01:05:33,440 --> 01:05:35,039
mentioned it in a

1585
01:05:35,039 --> 01:05:36,880
previous car connect meeting as a

1586
01:05:36,880 --> 01:05:39,280
generic thing you were thinking about or

1587
01:05:39,280 --> 01:05:42,559
even having implemented somewhere in um

1588
01:05:42,559 --> 01:05:45,839
uh either uh i calendar or

1589
01:05:45,839 --> 01:05:48,960
somewhere right do you remember yeah

1590
01:05:48,960 --> 01:05:50,799
well that was gonna be my point is i i

1591
01:05:50,799 --> 01:05:52,880
don't see anything that you've

1592
01:05:52,880 --> 01:05:54,319
said you know

1593
01:05:54,319 --> 01:05:57,599
suggested that isn't applicable to um

1594
01:05:57,599 --> 01:05:59,839
you know regular events

1595
01:05:59,839 --> 01:06:02,720
because we've had the same kind of

1596
01:06:02,720 --> 01:06:06,000
you know um idea we want some sort of

1597
01:06:06,000 --> 01:06:08,799
auditing for for events and how that

1598
01:06:08,799 --> 01:06:10,720
what happened to them

1599
01:06:10,720 --> 01:06:13,359
i think all of these are features that

1600
01:06:13,359 --> 01:06:15,520
could be i mean recurrences

1601
01:06:15,520 --> 01:06:18,480
support recurrences is even sketchy in a

1602
01:06:18,480 --> 01:06:19,280
lot of um

1603
01:06:19,280 --> 01:06:21,760
[Music]

1604
01:06:21,760 --> 01:06:23,680
event tools

1605
01:06:23,680 --> 01:06:25,359
so it i don't think there's any

1606
01:06:25,359 --> 01:06:27,119
difference there

1607
01:06:27,119 --> 01:06:28,480
um

1608
01:06:28,480 --> 01:06:30,079
we really only want one form of

1609
01:06:30,079 --> 01:06:32,000
recurrence support and those things get

1610
01:06:32,000 --> 01:06:33,760
really confusing so you either support

1611
01:06:33,760 --> 01:06:35,680
it or you don't

1612
01:06:35,680 --> 01:06:37,839
um

1613
01:06:37,839 --> 01:06:40,160
yeah i i just don't i don't i don't i

1614
01:06:40,160 --> 01:06:42,400
think we want to try it i don't think we

1615
01:06:42,400 --> 01:06:44,000
want to try and

1616
01:06:44,000 --> 01:06:45,280
um have

1617
01:06:45,280 --> 01:06:46,799
much in the way of different support

1618
01:06:46,799 --> 01:06:49,920
between one or the other

1619
01:06:53,760 --> 01:06:55,920
i'm not hundred percent sure i got your

1620
01:06:55,920 --> 01:06:57,760
point mike because for the recurrence

1621
01:06:57,760 --> 01:07:00,400
there was no thing like a separate

1622
01:07:00,400 --> 01:07:02,160
recurrence i think it was basically if

1623
01:07:02,160 --> 01:07:03,680
or if not some certain types oh yeah

1624
01:07:03,680 --> 01:07:05,359
yeah i i yeah

1625
01:07:05,359 --> 01:07:08,559
i i've i've found it almost as iffy in

1626
01:07:08,559 --> 01:07:10,000
some you know

1627
01:07:10,000 --> 01:07:12,839
just calendars that uh are around so

1628
01:07:12,839 --> 01:07:16,400
it's uh it's it's a general problem

1629
01:07:16,400 --> 01:07:18,720
um

1630
01:07:20,640 --> 01:07:22,400
yeah the hard bit here is that a lot of

1631
01:07:22,400 --> 01:07:24,960
the systems that we'll be storing to

1632
01:07:24,960 --> 01:07:27,359
are not using icalendar under the hood

1633
01:07:27,359 --> 01:07:30,079
they're using some custom database

1634
01:07:30,079 --> 01:07:32,079
format that we need to map in and out of

1635
01:07:32,079 --> 01:07:35,280
reliably to this

1636
01:07:35,280 --> 01:07:37,599
so certainly being able to say you can't

1637
01:07:37,599 --> 01:07:40,319
write anything from this whole subset of

1638
01:07:40,319 --> 01:07:41,680
the full

1639
01:07:41,680 --> 01:07:43,839
js task because the server just doesn't

1640
01:07:43,839 --> 01:07:45,440
have a way to store it

1641
01:07:45,440 --> 01:07:48,559
and doesn't have a way to understand it

1642
01:07:48,559 --> 01:07:51,440
i quite like neil's idea of having

1643
01:07:51,440 --> 01:07:54,400
a list of capabilities in the

1644
01:07:54,400 --> 01:07:57,359
the server side advertisement of this

1645
01:07:57,359 --> 01:07:59,440
feature can say with with this

1646
01:07:59,440 --> 01:08:01,039
particular capability here's what we

1647
01:08:01,039 --> 01:08:03,119
support and the server this is what you

1648
01:08:03,119 --> 01:08:05,440
can use

1649
01:08:07,200 --> 01:08:08,880
i think that that's a good way for to

1650
01:08:08,880 --> 01:08:12,960
have server capability discovery

1651
01:08:14,079 --> 01:08:16,880
so just for about the history topic

1652
01:08:16,880 --> 01:08:20,319
again so that was me who at last itf um

1653
01:08:20,319 --> 01:08:22,839
was discussing this in context of js

1654
01:08:22,839 --> 01:08:24,719
contact

1655
01:08:24,719 --> 01:08:25,920
and i

1656
01:08:25,920 --> 01:08:27,759
think to remember i promised to write up

1657
01:08:27,759 --> 01:08:31,040
a draft for that but i didn't do it yet

1658
01:08:31,040 --> 01:08:33,278
so

1659
01:08:33,359 --> 01:08:35,600
but um

1660
01:08:35,600 --> 01:08:37,359
these topics seem to converge on the

1661
01:08:37,359 --> 01:08:39,520
various data types so

1662
01:08:39,520 --> 01:08:41,279
that might

1663
01:08:41,279 --> 01:08:43,920
that might be um a booster for my

1664
01:08:43,920 --> 01:08:45,198
ambitions on

1665
01:08:45,198 --> 01:08:47,359
coming up with a document so i'll i'll

1666
01:08:47,359 --> 01:08:49,040
do that

1667
01:08:49,040 --> 01:08:51,439
and maybe maybe a short comment so i

1668
01:08:51,439 --> 01:08:54,319
think it was not necessarily some it's a

1669
01:08:54,319 --> 01:08:55,920
thing a little bit of special feature

1670
01:08:55,920 --> 01:08:58,158
because in some systems it seems mainly

1671
01:08:58,158 --> 01:09:00,158
like an activity stream like something

1672
01:09:00,158 --> 01:09:02,080
you don't engineer as a user but which

1673
01:09:02,080 --> 01:09:04,479
is generated from your actions

1674
01:09:04,479 --> 01:09:06,479
um so so certainly

1675
01:09:06,479 --> 01:09:07,759
um

1676
01:09:07,759 --> 01:09:09,679
yeah like an audit trail is somehow

1677
01:09:09,679 --> 01:09:13,279
right um and um

1678
01:09:13,279 --> 01:09:14,960
my remark is basically in the direction

1679
01:09:14,960 --> 01:09:16,158
it's certainly i think it's an

1680
01:09:16,158 --> 01:09:18,399
interesting thing i think not so many

1681
01:09:18,399 --> 01:09:20,960
systems expose it currently via api or

1682
01:09:20,960 --> 01:09:22,479
something because they consider that

1683
01:09:22,479 --> 01:09:24,319
rather as some you know

1684
01:09:24,319 --> 01:09:26,640
system generated and displayed thing not

1685
01:09:26,640 --> 01:09:28,080
something you can

1686
01:09:28,080 --> 01:09:31,439
influence or read out with the tool even

1687
01:09:31,439 --> 01:09:32,960
but that i think even makes it

1688
01:09:32,960 --> 01:09:34,880
interesting because it shows up as you

1689
01:09:34,880 --> 01:09:37,040
said that since a lot of tools are using

1690
01:09:37,040 --> 01:09:39,520
these kind of uh concepts

1691
01:09:39,520 --> 01:09:41,439
um that this is my might be something

1692
01:09:41,439 --> 01:09:43,759
that needs uh or uh can can have some

1693
01:09:43,759 --> 01:09:44,880
attention

1694
01:09:44,880 --> 01:09:46,960
but i i wonder i think it's it's quite

1695
01:09:46,960 --> 01:09:48,880
diverse still in implementation we're

1696
01:09:48,880 --> 01:09:51,040
losing most of the audio here at least i

1697
01:09:51,040 --> 01:09:52,080
am

1698
01:09:52,080 --> 01:09:54,640
oh sorry

1699
01:09:54,880 --> 01:09:56,960
but robert not it so you

1700
01:09:56,960 --> 01:09:58,800
yeah i got it all um

1701
01:09:58,800 --> 01:10:02,239
so in terms of uh expectations so what

1702
01:10:02,239 --> 01:10:05,040
i'm what we discussed in terms of js

1703
01:10:05,040 --> 01:10:07,600
contact was to have a

1704
01:10:07,600 --> 01:10:10,480
and not only um

1705
01:10:10,480 --> 01:10:13,440
being defined only for gs contact but

1706
01:10:13,440 --> 01:10:17,040
rather a generic

1707
01:10:17,040 --> 01:10:19,440
history that that

1708
01:10:19,440 --> 01:10:22,960
that tells the values of of a property

1709
01:10:22,960 --> 01:10:25,360
at various points in time so

1710
01:10:25,360 --> 01:10:27,360
um i'm not sure

1711
01:10:27,360 --> 01:10:29,440
now if that is

1712
01:10:29,440 --> 01:10:31,920
in line with what you were

1713
01:10:31,920 --> 01:10:33,199
what you mean when you were talking

1714
01:10:33,199 --> 01:10:36,800
about history in in context of tasks but

1715
01:10:36,800 --> 01:10:39,120
yeah i think we can

1716
01:10:39,120 --> 01:10:41,040
discuss and we will be happy to to look

1717
01:10:41,040 --> 01:10:42,480
at something when you write something

1718
01:10:42,480 --> 01:10:44,080
down and maybe discuss on that further

1719
01:10:44,080 --> 01:10:46,239
then

1720
01:10:53,199 --> 01:10:56,320
okay any more any more discussion on

1721
01:10:56,320 --> 01:10:59,480
on this

1722
01:11:01,120 --> 01:11:04,560
okay it sounds like not so our next

1723
01:11:04,560 --> 01:11:06,800
topic is

1724
01:11:06,800 --> 01:11:11,000
jscontact so

1725
01:11:12,800 --> 01:11:15,440
there we go

1726
01:11:15,840 --> 01:11:17,679
hello again

1727
01:11:17,679 --> 01:11:18,640
um

1728
01:11:18,640 --> 01:11:20,880
yeah so that next slide um

1729
01:11:20,880 --> 01:11:22,850
that slide is

1730
01:11:22,850 --> 01:11:24,159
[Music]

1731
01:11:24,159 --> 01:11:25,840
basically the unchanged version of what

1732
01:11:25,840 --> 01:11:27,280
we discussed

1733
01:11:27,280 --> 01:11:29,600
at the interim meeting a month ago

1734
01:11:29,600 --> 01:11:30,100
um

1735
01:11:30,100 --> 01:11:31,840
[Music]

1736
01:11:31,840 --> 01:11:33,120
so

1737
01:11:33,120 --> 01:11:35,840
i think almost everybody

1738
01:11:35,840 --> 01:11:39,280
here was also there so basically

1739
01:11:39,280 --> 01:11:41,360
the main point to take away from that

1740
01:11:41,360 --> 01:11:43,120
light is um

1741
01:11:43,120 --> 01:11:44,880
we are

1742
01:11:44,880 --> 01:11:47,679
we are waiting for our implementations

1743
01:11:47,679 --> 01:11:50,320
or other implementations um

1744
01:11:50,320 --> 01:11:53,520
to get to get better hands-on experience

1745
01:11:53,520 --> 01:11:55,120
with

1746
01:11:55,120 --> 01:11:58,320
with the data format

1747
01:11:58,400 --> 01:12:02,719
mario has at the moment the

1748
01:12:04,159 --> 01:12:06,239
has implemented the most of the data

1749
01:12:06,239 --> 01:12:07,520
format

1750
01:12:07,520 --> 01:12:10,719
we at fast mail are are working with

1751
01:12:10,719 --> 01:12:14,640
with an old version of context data

1752
01:12:14,640 --> 01:12:16,000
um

1753
01:12:16,000 --> 01:12:18,719
and i hear that also the rdap working

1754
01:12:18,719 --> 01:12:20,880
group at itf

1755
01:12:20,880 --> 01:12:22,800
are working on implementations there

1756
01:12:22,800 --> 01:12:25,679
although i haven't yet i have no further

1757
01:12:25,679 --> 01:12:28,320
details on on which aspects they're

1758
01:12:28,320 --> 01:12:30,640
covering mario probably you want to have

1759
01:12:30,640 --> 01:12:34,280
a word on this

1760
01:12:38,800 --> 01:12:41,600
hello everyone

1761
01:12:41,840 --> 01:12:44,400
can you hear me yes

1762
01:12:44,400 --> 01:12:47,199
no i just uh

1763
01:12:47,199 --> 01:12:49,360
to make an additional note

1764
01:12:49,360 --> 01:12:50,800
uh

1765
01:12:50,800 --> 01:12:53,120
i was informing last uh rejects the

1766
01:12:53,120 --> 01:12:56,159
interim meeting that there are some uh

1767
01:12:56,159 --> 01:12:59,440
just contact implementation inside rdap

1768
01:12:59,440 --> 01:13:01,679
so as

1769
01:13:01,679 --> 01:13:05,199
robert has just said

1770
01:13:05,199 --> 01:13:06,960
the

1771
01:13:06,960 --> 01:13:09,040
this content in our that doesn't cover

1772
01:13:09,040 --> 01:13:11,360
all the

1773
01:13:11,360 --> 01:13:14,080
information that could be represented by

1774
01:13:14,080 --> 01:13:15,360
just contact

1775
01:13:15,360 --> 01:13:16,800
only subset

1776
01:13:16,800 --> 01:13:20,159
even if this subset i think that this

1777
01:13:20,159 --> 01:13:23,599
this implementation could be

1778
01:13:24,800 --> 01:13:26,159
meaningful

1779
01:13:26,159 --> 01:13:28,800
nonetheless so

1780
01:13:28,800 --> 01:13:29,920
i

1781
01:13:29,920 --> 01:13:33,199
probably will be contacted by

1782
01:13:33,199 --> 01:13:36,159
the other guys or the adapt working

1783
01:13:36,159 --> 01:13:38,239
group

1784
01:13:38,239 --> 01:13:41,520
who are implementing jazz content up so

1785
01:13:41,520 --> 01:13:43,360
i will have

1786
01:13:43,360 --> 01:13:44,560
some more

1787
01:13:44,560 --> 01:13:45,679
feedback

1788
01:13:45,679 --> 01:13:46,960
from

1789
01:13:46,960 --> 01:13:48,480
that side

1790
01:13:48,480 --> 01:13:49,840
but

1791
01:13:49,840 --> 01:13:53,360
my feelings that

1792
01:13:53,600 --> 01:13:57,520
in comparison to jacob

1793
01:13:58,840 --> 01:14:02,320
obviously the guest contact

1794
01:14:02,320 --> 01:14:05,440
representation is

1795
01:14:05,440 --> 01:14:06,320
more

1796
01:14:06,320 --> 01:14:09,120
satisfactory

1797
01:14:09,120 --> 01:14:12,000
in in the adapt context so i

1798
01:14:12,000 --> 01:14:14,320
i don't i don't feel i don't believe

1799
01:14:14,320 --> 01:14:16,880
that uh

1800
01:14:17,199 --> 01:14:19,280
we will have

1801
01:14:19,280 --> 01:14:21,040
um

1802
01:14:21,040 --> 01:14:23,520
relevant feedback real one

1803
01:14:23,520 --> 01:14:26,400
feedback to to change the current yes

1804
01:14:26,400 --> 01:14:30,000
contact us batch

1805
01:14:37,920 --> 01:14:39,750
okay

1806
01:14:39,750 --> 01:14:40,880
[Music]

1807
01:14:40,880 --> 01:14:43,360
then i guess we

1808
01:14:43,360 --> 01:14:47,599
continue with the next slide please

1809
01:14:48,640 --> 01:14:50,320
um

1810
01:14:50,320 --> 01:14:51,199
one

1811
01:14:51,199 --> 01:14:54,159
one thing we got pointed at recently is

1812
01:14:54,159 --> 01:14:55,280
a

1813
01:14:55,280 --> 01:14:58,400
unicode public review issue um

1814
01:14:58,400 --> 01:15:00,800
you see the link here which is about

1815
01:15:00,800 --> 01:15:02,960
which is concerned with defining

1816
01:15:02,960 --> 01:15:04,800
personal name formatting so that's

1817
01:15:04,800 --> 01:15:07,600
highly relevant for the way we are um

1818
01:15:07,600 --> 01:15:09,280
[Music]

1819
01:15:09,280 --> 01:15:12,960
we are uh using name data in

1820
01:15:12,960 --> 01:15:14,640
in js contact

1821
01:15:14,640 --> 01:15:15,520
um

1822
01:15:15,520 --> 01:15:17,840
this is an ongoing effort at the only

1823
01:15:17,840 --> 01:15:19,360
quote um

1824
01:15:19,360 --> 01:15:20,960
the

1825
01:15:20,960 --> 01:15:22,719
uh

1826
01:15:22,719 --> 01:15:25,199
the issue is open for comments until the

1827
01:15:25,199 --> 01:15:28,320
end of this year um

1828
01:15:28,320 --> 01:15:29,440
and um

1829
01:15:29,440 --> 01:15:32,480
while reading it so basically it

1830
01:15:32,480 --> 01:15:34,480
it's concerned with the formatting and

1831
01:15:34,480 --> 01:15:37,520
sorting of names and and

1832
01:15:37,520 --> 01:15:39,440
uses um

1833
01:15:39,440 --> 01:15:42,080
patterns mainly that define how to

1834
01:15:42,080 --> 01:15:43,120
format

1835
01:15:43,120 --> 01:15:45,920
several name components um

1836
01:15:45,920 --> 01:15:48,320
depending on the context for example

1837
01:15:48,320 --> 01:15:50,480
context would be if you are addressing a

1838
01:15:50,480 --> 01:15:52,880
person or if you are referring to a

1839
01:15:52,880 --> 01:15:55,440
person which

1840
01:15:55,440 --> 01:15:57,920
given as an example in russian

1841
01:15:57,920 --> 01:15:59,280
these

1842
01:15:59,280 --> 01:16:02,239
the order of name components is used

1843
01:16:02,239 --> 01:16:03,679
differently then

1844
01:16:03,679 --> 01:16:05,199
um

1845
01:16:05,199 --> 01:16:07,040
and um it's also

1846
01:16:07,040 --> 01:16:09,440
covering several other aspects but the

1847
01:16:09,440 --> 01:16:10,320
main

1848
01:16:10,320 --> 01:16:13,520
the main point for js contact um

1849
01:16:13,520 --> 01:16:17,040
is that it's also that it's using

1850
01:16:17,040 --> 01:16:18,480
name

1851
01:16:18,480 --> 01:16:20,719
fields which basically are very much

1852
01:16:20,719 --> 01:16:23,600
aligned with uh what we are calling name

1853
01:16:23,600 --> 01:16:26,719
components in js contact so

1854
01:16:26,719 --> 01:16:29,120
that's kind of um

1855
01:16:29,120 --> 01:16:31,040
um so

1856
01:16:31,040 --> 01:16:32,080
that

1857
01:16:32,080 --> 01:16:34,239
that's good news that we that we at

1858
01:16:34,239 --> 01:16:35,920
least seem to think in the same

1859
01:16:35,920 --> 01:16:38,719
direction um as other um

1860
01:16:38,719 --> 01:16:41,360
groups working on the same topic

1861
01:16:41,360 --> 01:16:42,159
um

1862
01:16:42,159 --> 01:16:44,719
so the in terms of impact on the js

1863
01:16:44,719 --> 01:16:47,040
contact implementation um

1864
01:16:47,040 --> 01:16:49,520
we would like to be sure to be alive to

1865
01:16:49,520 --> 01:16:52,400
align our name components type with that

1866
01:16:52,400 --> 01:16:56,080
unicode effort um but at the same stage

1867
01:16:56,080 --> 01:16:57,920
um

1868
01:16:57,920 --> 01:17:00,480
keep deformating and sorting

1869
01:17:00,480 --> 01:17:02,880
aspects out of scope so that's basically

1870
01:17:02,880 --> 01:17:04,800
something where an application then

1871
01:17:04,800 --> 01:17:08,800
could use the unicode library or or or

1872
01:17:08,800 --> 01:17:11,520
or implement their own based on their

1873
01:17:11,520 --> 01:17:14,000
definitions on how to format names in

1874
01:17:14,000 --> 01:17:16,159
various contexts

1875
01:17:16,159 --> 01:17:18,080
and that means in practice on the next

1876
01:17:18,080 --> 01:17:20,800
slide please

1877
01:17:21,040 --> 01:17:24,560
that we are just renaming

1878
01:17:24,560 --> 01:17:27,600
two fields or the personal name we

1879
01:17:27,600 --> 01:17:29,920
suggest to rename to given and the

1880
01:17:29,920 --> 01:17:32,640
additional name we want to rename to

1881
01:17:32,640 --> 01:17:34,800
middle

1882
01:17:34,800 --> 01:17:37,760
one thing that we haven't covered um

1883
01:17:37,760 --> 01:17:39,600
so

1884
01:17:39,600 --> 01:17:41,410
the unicode document

1885
01:17:41,410 --> 01:17:42,640
[Music]

1886
01:17:42,640 --> 01:17:44,800
discerns between a surname and a

1887
01:17:44,800 --> 01:17:46,480
secondary surname

1888
01:17:46,480 --> 01:17:47,760
um

1889
01:17:47,760 --> 01:17:50,800
uh the first intuition was that

1890
01:17:50,800 --> 01:17:54,159
the order of a certain in in js contact

1891
01:17:54,159 --> 01:17:56,960
would just could just be deferred from

1892
01:17:56,960 --> 01:18:00,000
its position in the array of name

1893
01:18:00,000 --> 01:18:03,840
components however that's um

1894
01:18:03,840 --> 01:18:06,080
that in my opinion is not good enough

1895
01:18:06,080 --> 01:18:08,000
first we cannot trust

1896
01:18:08,000 --> 01:18:10,080
the fields to name components to be in

1897
01:18:10,080 --> 01:18:12,800
any meaningful order

1898
01:18:12,800 --> 01:18:14,400
secondly

1899
01:18:14,400 --> 01:18:16,800
even if they are in a

1900
01:18:16,800 --> 01:18:18,560
meaningful order

1901
01:18:18,560 --> 01:18:20,560
we still don't know what kind of order

1902
01:18:20,560 --> 01:18:22,960
it is getting back to the

1903
01:18:22,960 --> 01:18:26,000
example with russian names that have

1904
01:18:26,000 --> 01:18:28,400
different orders if you are addressing

1905
01:18:28,400 --> 01:18:31,920
or referring to a person um we would not

1906
01:18:31,920 --> 01:18:34,320
be the wiser what is the

1907
01:18:34,320 --> 01:18:36,000
what is the secondary surname in that

1908
01:18:36,000 --> 01:18:38,880
context so we suggest

1909
01:18:38,880 --> 01:18:41,040
what i wrote is this these slides i was

1910
01:18:41,040 --> 01:18:42,719
thinking of um

1911
01:18:42,719 --> 01:18:44,560
having a surname

1912
01:18:44,560 --> 01:18:47,840
followed by a digit where digit is and

1913
01:18:47,840 --> 01:18:49,760
at least two or higher

1914
01:18:49,760 --> 01:18:51,600
uh but the more i think of it we might

1915
01:18:51,600 --> 01:18:54,159
even want to since the name component

1916
01:18:54,159 --> 01:18:57,280
already is a complex object um we might

1917
01:18:57,280 --> 01:18:59,760
just want to add an additional optional

1918
01:18:59,760 --> 01:19:01,199
um property

1919
01:19:01,199 --> 01:19:02,400
um

1920
01:19:02,400 --> 01:19:04,159
nth um

1921
01:19:04,159 --> 01:19:09,440
which then can be an unsigned integer um

1922
01:19:09,440 --> 01:19:10,480
and and

1923
01:19:10,480 --> 01:19:12,480
and then we could basically use the same

1924
01:19:12,480 --> 01:19:15,040
order thing for all different

1925
01:19:15,040 --> 01:19:17,280
for all kinds of name components even if

1926
01:19:17,280 --> 01:19:18,080
that

1927
01:19:18,080 --> 01:19:19,760
would cover more

1928
01:19:19,760 --> 01:19:23,440
than or allow more than the unicode

1929
01:19:23,440 --> 01:19:26,639
document is aiming at

1930
01:19:27,040 --> 01:19:29,360
any

1931
01:19:29,679 --> 01:19:32,560
any opinions or remarks or other input

1932
01:19:32,560 --> 01:19:35,880
on this one

1933
01:19:44,320 --> 01:19:46,960
ah is it am i on ah

1934
01:19:46,960 --> 01:19:49,120
i don't see a big difference between

1935
01:19:49,120 --> 01:19:50,400
having an

1936
01:19:50,400 --> 01:19:51,520
array

1937
01:19:51,520 --> 01:19:53,840
and just stating in the text that the

1938
01:19:53,840 --> 01:19:55,920
order should be

1939
01:19:55,920 --> 01:19:58,560
the order of the surname in the array

1940
01:19:58,560 --> 01:20:02,159
or having a separate property for each

1941
01:20:02,159 --> 01:20:03,360
surname

1942
01:20:03,360 --> 01:20:05,440
like uh with the and with the number in

1943
01:20:05,440 --> 01:20:07,440
the end in the end it's the same thing

1944
01:20:07,440 --> 01:20:09,920
and the the array thing in my opinion is

1945
01:20:09,920 --> 01:20:11,600
is a bit more

1946
01:20:11,600 --> 01:20:14,800
elegant a bit shorter at least

1947
01:20:14,800 --> 01:20:16,719
the problem is they may appear in

1948
01:20:16,719 --> 01:20:19,360
different orders um

1949
01:20:19,360 --> 01:20:21,600
in the way that the name is displayed

1950
01:20:21,600 --> 01:20:23,840
than the the

1951
01:20:23,840 --> 01:20:25,600
meaning so there are languages where

1952
01:20:25,600 --> 01:20:26,800
where that does

1953
01:20:26,800 --> 01:20:28,159
they could be either way around but

1954
01:20:28,159 --> 01:20:29,440
still be the primary surname and

1955
01:20:29,440 --> 01:20:32,839
secondary surname

1956
01:20:33,040 --> 01:20:34,880
so the system can

1957
01:20:34,880 --> 01:20:37,040
it a system can pick it out of an array

1958
01:20:37,040 --> 01:20:39,120
or or can pick it out of the property

1959
01:20:39,120 --> 01:20:42,159
right but it's it may be easier than to

1960
01:20:42,159 --> 01:20:44,560
to pick it out of a separate property is

1961
01:20:44,560 --> 01:20:47,840
what you're saying i'm not sure maybe um

1962
01:20:47,840 --> 01:20:49,440
just to clarify what do you mean when

1963
01:20:49,440 --> 01:20:52,000
you speak of an array so

1964
01:20:52,000 --> 01:20:54,000
um at the moment the

1965
01:20:54,000 --> 01:20:55,120
sorry

1966
01:20:55,120 --> 01:20:57,600
at the moment the name is is an array of

1967
01:20:57,600 --> 01:20:59,120
name components and these name

1968
01:20:59,120 --> 01:21:00,639
components have

1969
01:21:00,639 --> 01:21:03,920
a type which is one of these in the

1970
01:21:03,920 --> 01:21:06,400
column that you are seeing

1971
01:21:06,400 --> 01:21:08,880
right there is no array surname for

1972
01:21:08,880 --> 01:21:11,040
example all right right right okay

1973
01:21:11,040 --> 01:21:13,520
that's that's what i was missing okay

1974
01:21:13,520 --> 01:21:17,360
then it makes sense yeah yeah

1975
01:21:17,840 --> 01:21:20,400
my only question is whether um it's

1976
01:21:20,400 --> 01:21:22,080
possible to give feedback to unicode and

1977
01:21:22,080 --> 01:21:24,560
say hey this is what we're doing

1978
01:21:24,560 --> 01:21:26,239
with this

1979
01:21:26,239 --> 01:21:29,199
do we have any any communication with

1980
01:21:29,199 --> 01:21:31,360
the group that's working on this

1981
01:21:31,360 --> 01:21:34,239
um no not yet but um

1982
01:21:34,239 --> 01:21:36,560
yes i was thinking of contacting them um

1983
01:21:36,560 --> 01:21:38,880
i just read document

1984
01:21:38,880 --> 01:21:43,199
uh yesterday actually um so

1985
01:21:43,199 --> 01:21:46,480
but we should do that yeah

1986
01:21:54,719 --> 01:21:56,320
all right anything else on this topic

1987
01:21:56,320 --> 01:21:58,080
anyone wants to

1988
01:21:58,080 --> 01:22:00,480
discuss

1989
01:22:02,400 --> 01:22:04,159
great thank you robert

1990
01:22:04,159 --> 01:22:05,040
um

1991
01:22:05,040 --> 01:22:07,360
actually i'm i'm not finished with the

1992
01:22:07,360 --> 01:22:08,880
js contact

1993
01:22:08,880 --> 01:22:11,520
talk so um there is no more slight but

1994
01:22:11,520 --> 01:22:12,480
um

1995
01:22:12,480 --> 01:22:15,280
i forgot to add

1996
01:22:15,280 --> 01:22:17,120
so one thing that we that we discussed

1997
01:22:17,120 --> 01:22:19,520
at the interim meeting was um the

1998
01:22:19,520 --> 01:22:21,840
missing

1999
01:22:21,840 --> 01:22:24,400
in vcard there is the chandra property

2000
01:22:24,400 --> 01:22:26,560
we were in the interim were

2001
01:22:26,560 --> 01:22:28,719
discussing

2002
01:22:28,719 --> 01:22:32,320
if and how to support that in js contact

2003
01:22:32,320 --> 01:22:34,400
we haven't come up

2004
01:22:34,400 --> 01:22:36,719
with solution yet

2005
01:22:36,719 --> 01:22:39,120
i remember that we were thinking of

2006
01:22:39,120 --> 01:22:40,400
looking at

2007
01:22:40,400 --> 01:22:43,679
where to ask at itf um

2008
01:22:43,679 --> 01:22:45,679
uh

2009
01:22:45,679 --> 01:22:48,960
if there is a like um

2010
01:22:49,520 --> 01:22:52,960
a recommendation by itf across

2011
01:22:52,960 --> 01:22:57,280
working groups for how to deal with that

2012
01:22:57,840 --> 01:22:59,120
there are a couple of different

2013
01:22:59,120 --> 01:23:02,080
expectations on this gender field

2014
01:23:02,080 --> 01:23:03,280
the main

2015
01:23:03,280 --> 01:23:04,719
expectation

2016
01:23:04,719 --> 01:23:06,800
the main use case as i understood is

2017
01:23:06,800 --> 01:23:07,760
mainly

2018
01:23:07,760 --> 01:23:08,639
to

2019
01:23:08,639 --> 01:23:09,840
um

2020
01:23:09,840 --> 01:23:12,960
to understand in languages that have

2021
01:23:12,960 --> 01:23:14,800
different pronouns

2022
01:23:14,800 --> 01:23:18,560
or addressing like a mr or mrs

2023
01:23:18,560 --> 01:23:20,480
how to address that person

2024
01:23:20,480 --> 01:23:22,080
um

2025
01:23:22,080 --> 01:23:24,239
or that contact um

2026
01:23:24,239 --> 01:23:25,840
depending on their

2027
01:23:25,840 --> 01:23:27,360
on their gender

2028
01:23:27,360 --> 01:23:28,239
um

2029
01:23:28,239 --> 01:23:29,600
i don't know if

2030
01:23:29,600 --> 01:23:32,320
i don't recall any other specific use

2031
01:23:32,320 --> 01:23:35,120
case that was mentioned that that's um

2032
01:23:35,120 --> 01:23:37,440
that's

2033
01:23:38,400 --> 01:23:39,520
where the

2034
01:23:39,520 --> 01:23:42,239
gender plays a role um

2035
01:23:42,239 --> 01:23:45,120
that being said the v card um

2036
01:23:45,120 --> 01:23:48,639
the v property already defines discerns

2037
01:23:48,639 --> 01:23:52,080
between gender and also has the

2038
01:23:52,080 --> 01:23:54,080
optional field for

2039
01:23:54,080 --> 01:23:56,960
sexual identity i think it is

2040
01:23:56,960 --> 01:23:59,679
so um

2041
01:24:00,159 --> 01:24:03,120
the main gist still is which also which

2042
01:24:03,120 --> 01:24:06,719
i also stated at the last meeting is um

2043
01:24:06,719 --> 01:24:09,760
um both mario and i do not feel

2044
01:24:09,760 --> 01:24:12,320
confident in that field to

2045
01:24:12,320 --> 01:24:13,199
really

2046
01:24:13,199 --> 01:24:15,600
come up with a standard for this so we

2047
01:24:15,600 --> 01:24:17,920
might need to

2048
01:24:17,920 --> 01:24:20,080
talk more with people who are

2049
01:24:20,080 --> 01:24:22,080
working on this topic

2050
01:24:22,080 --> 01:24:24,000
more extensively

2051
01:24:24,000 --> 01:24:25,920
and we don't really know

2052
01:24:25,920 --> 01:24:27,920
we haven't really figured out it how to

2053
01:24:27,920 --> 01:24:31,400
do that basically

2054
01:24:34,159 --> 01:24:36,080
yes sorry this was partly i was supposed

2055
01:24:36,080 --> 01:24:38,000
to do that i did email murray about it

2056
01:24:38,000 --> 01:24:40,159
who suggested contacting the isg

2057
01:24:40,159 --> 01:24:42,080
directly about it which i have not yet

2058
01:24:42,080 --> 01:24:45,120
done i'm sorry yeah so then i guess i

2059
01:24:45,120 --> 01:24:47,040
still have that action item

2060
01:24:47,040 --> 01:24:50,719
yeah so basically we will also

2061
01:24:50,719 --> 01:24:52,639
need more time to figure out

2062
01:24:52,639 --> 01:24:56,239
how to address that topic

2063
01:24:56,639 --> 01:24:59,440
um that being said also the um

2064
01:24:59,440 --> 01:25:01,920
the unicode document also has this is an

2065
01:25:01,920 --> 01:25:03,280
open issue

2066
01:25:03,280 --> 01:25:04,480
so uh

2067
01:25:04,480 --> 01:25:06,800
we will talk with them also

2068
01:25:06,800 --> 01:25:08,800
um what's their

2069
01:25:08,800 --> 01:25:09,600
uh

2070
01:25:09,600 --> 01:25:11,840
what's their opinion although they they

2071
01:25:11,840 --> 01:25:14,159
only need to narrow it down to

2072
01:25:14,159 --> 01:25:15,280
um

2073
01:25:15,280 --> 01:25:16,800
cases where

2074
01:25:16,800 --> 01:25:19,440
the formating of the name depends

2075
01:25:19,440 --> 01:25:20,800
of the

2076
01:25:20,800 --> 01:25:24,000
gender of that person

2077
01:25:24,320 --> 01:25:26,400
pete uh mentioned in the chat that the

2078
01:25:26,400 --> 01:25:28,800
ihf does have a formal liaison manager

2079
01:25:28,800 --> 01:25:30,400
with unicode

2080
01:25:30,400 --> 01:25:33,040
and gave the name as well so

2081
01:25:33,040 --> 01:25:35,199
we have somebody to to contact about

2082
01:25:35,199 --> 01:25:36,480
that

2083
01:25:36,480 --> 01:25:38,159
so it might be worth mentioning both

2084
01:25:38,159 --> 01:25:39,520
these issues

2085
01:25:39,520 --> 01:25:41,440
in that discussion

2086
01:25:41,440 --> 01:25:44,239
great thank you

2087
01:25:45,280 --> 01:25:46,960
okay so that then that's really now the

2088
01:25:46,960 --> 01:25:49,760
end of my presentation

2089
01:25:49,760 --> 01:25:52,080
cool so i guess just

2090
01:25:52,080 --> 01:25:54,159
in terms of next steps on this document

2091
01:25:54,159 --> 01:25:56,080
it's dealing with these issues first and

2092
01:25:56,080 --> 01:25:56,880
then

2093
01:25:56,880 --> 01:26:00,000
then coming back for a last call or

2094
01:26:00,000 --> 01:26:01,520
anything else outstanding yeah the

2095
01:26:01,520 --> 01:26:03,360
implementation

2096
01:26:03,360 --> 01:26:04,239
uh

2097
01:26:04,239 --> 01:26:05,600
implementation experience i think that

2098
01:26:05,600 --> 01:26:08,400
would be good to to go into la before

2099
01:26:08,400 --> 01:26:12,320
going into last call to um

2100
01:26:12,800 --> 01:26:13,679
to

2101
01:26:13,679 --> 01:26:15,520
to have a good understanding that we are

2102
01:26:15,520 --> 01:26:18,400
covering everything we want to cover

2103
01:26:18,400 --> 01:26:21,400
cool

2104
01:26:24,480 --> 01:26:28,080
okay then so uh the next uh the next

2105
01:26:28,080 --> 01:26:30,639
topic is

2106
01:26:30,639 --> 01:26:33,840
from alexi again

2107
01:26:34,000 --> 01:26:37,800
let me find the

2108
01:26:39,040 --> 01:26:42,000
the right slide

2109
01:26:42,000 --> 01:26:45,199
set of sides for that

2110
01:26:48,880 --> 01:26:51,840
there we go

2111
01:26:52,719 --> 01:26:55,120
and take it away alexi

2112
01:26:55,120 --> 01:26:57,600
so yeah very quickly uh there is no

2113
01:26:57,600 --> 01:27:00,000
extra working group meeting today

2114
01:27:00,000 --> 01:27:02,719
or this week but uh there are some

2115
01:27:02,719 --> 01:27:04,960
people who are active in both

2116
01:27:04,960 --> 01:27:07,679
gm and extra so ask for extra time to

2117
01:27:07,679 --> 01:27:10,560
introduce this so yes what's a

2118
01:27:10,560 --> 01:27:13,040
problem statement

2119
01:27:13,040 --> 01:27:16,040
um

2120
01:27:18,639 --> 01:27:20,560
how how do you how server

2121
01:27:20,560 --> 01:27:22,400
implementations deal with very big

2122
01:27:22,400 --> 01:27:23,679
mailboxes

2123
01:27:23,679 --> 01:27:27,360
and what is a good client-side behavior

2124
01:27:27,360 --> 01:27:29,679
to help servers uh

2125
01:27:29,679 --> 01:27:32,239
handle this and

2126
01:27:32,239 --> 01:27:34,560
not overload them

2127
01:27:34,560 --> 01:27:36,639
when i say big mailbox what do i mean

2128
01:27:36,639 --> 01:27:37,920
it's

2129
01:27:37,920 --> 01:27:40,320
at least 50 000

2130
01:27:40,320 --> 01:27:42,880
messages

2131
01:27:44,239 --> 01:27:47,679
on the server side um

2132
01:27:47,679 --> 01:27:50,400
it can be quite memory and resource

2133
01:27:50,400 --> 01:27:51,920
usage intensive

2134
01:27:51,920 --> 01:27:54,560
um some servers struggle with

2135
01:27:54,560 --> 01:27:58,320
keeping message number to uid map

2136
01:27:58,320 --> 01:28:00,000
depending on exactly what back-end

2137
01:28:00,000 --> 01:28:03,040
they're using um

2138
01:28:04,159 --> 01:28:07,440
and clients some clients

2139
01:28:07,440 --> 01:28:09,280
just cannot handle this you know there

2140
01:28:09,280 --> 01:28:13,120
are clients that are limited to their

2141
01:28:13,120 --> 01:28:15,360
they're happy to open any mailbox but

2142
01:28:15,360 --> 01:28:20,000
they only show the last 10 000 messages

2143
01:28:20,000 --> 01:28:23,040
so uh yet at the same time

2144
01:28:23,040 --> 01:28:24,400
they still

2145
01:28:24,400 --> 01:28:26,840
fetching flag flag

2146
01:28:26,840 --> 01:28:30,239
changes or just general flags

2147
01:28:30,239 --> 01:28:31,920
for all messages even though they are

2148
01:28:31,920 --> 01:28:33,760
going to ignore most of them

2149
01:28:33,760 --> 01:28:35,520
so um

2150
01:28:35,520 --> 01:28:37,120
some of this was already tackled so

2151
01:28:37,120 --> 01:28:39,760
constant quickly sync extensions

2152
01:28:39,760 --> 01:28:42,239
are definitely helping if clients were

2153
01:28:42,239 --> 01:28:44,879
to use them

2154
01:28:45,199 --> 01:28:47,440
but

2155
01:28:48,000 --> 01:28:50,480
this a bit more can be done

2156
01:28:50,480 --> 01:28:53,360
next slide please

2157
01:28:54,400 --> 01:28:55,760
um so

2158
01:28:55,760 --> 01:28:58,960
the proposal is

2159
01:28:58,960 --> 01:29:03,920
extend search and fetch by uh

2160
01:29:04,000 --> 01:29:05,840
specifying that

2161
01:29:05,840 --> 01:29:08,560
only so many messages uh i expected in

2162
01:29:08,560 --> 01:29:11,280
the result

2163
01:29:11,280 --> 01:29:13,600
so for search

2164
01:29:13,600 --> 01:29:16,480
this is actually

2165
01:29:17,199 --> 01:29:19,120
partially defined in context equals

2166
01:29:19,120 --> 01:29:20,880
search extension

2167
01:29:20,880 --> 01:29:23,880
um

2168
01:29:25,040 --> 01:29:28,239
using the partial search result option

2169
01:29:28,239 --> 01:29:30,480
um however the proposal is to extend it

2170
01:29:30,480 --> 01:29:32,159
a little bit because

2171
01:29:32,159 --> 01:29:35,760
uh partial can say well

2172
01:29:35,760 --> 01:29:36,639
uh

2173
01:29:36,639 --> 01:29:40,560
return the uh first end messages uh or

2174
01:29:40,560 --> 01:29:42,719
you know a certain block but

2175
01:29:42,719 --> 01:29:45,199
it starts from lower messages

2176
01:29:45,199 --> 01:29:49,120
so extension here is

2177
01:29:50,840 --> 01:29:52,719
um

2178
01:29:52,719 --> 01:29:56,880
to allow to to ask for the the

2179
01:29:56,880 --> 01:30:00,719
and last messages for example so um

2180
01:30:00,719 --> 01:30:03,440
what's the advantage of this this helps

2181
01:30:03,440 --> 01:30:05,760
the server by saying well you cannot you

2182
01:30:05,760 --> 01:30:07,840
only need to search end messages and

2183
01:30:07,840 --> 01:30:10,000
then you can stop

2184
01:30:10,000 --> 01:30:10,800
so

2185
01:30:10,800 --> 01:30:13,600
server implementations can optimize

2186
01:30:13,600 --> 01:30:15,840
what they do

2187
01:30:15,840 --> 01:30:18,159
and also if the client doesn't care

2188
01:30:18,159 --> 01:30:20,320
about

2189
01:30:20,320 --> 01:30:22,800
you know 50 000 results then it can say

2190
01:30:22,800 --> 01:30:24,719
well i only need hundred

2191
01:30:24,719 --> 01:30:28,560
so this also optimize network traffic

2192
01:30:28,560 --> 01:30:33,280
um and similar extension to uig fetch

2193
01:30:33,280 --> 01:30:37,120
because uid fetch can specify uid range

2194
01:30:37,120 --> 01:30:39,040
where the client doesn't actually know

2195
01:30:39,040 --> 01:30:41,840
how many messages are in the range

2196
01:30:41,840 --> 01:30:43,679
again saying you know i only care about

2197
01:30:43,679 --> 01:30:45,360
so many messages

2198
01:30:45,360 --> 01:30:48,759
next slide please

2199
01:30:51,120 --> 01:30:53,679
so um

2200
01:30:53,679 --> 01:30:55,440
yeah um

2201
01:30:55,440 --> 01:30:58,400
search extension

2202
01:30:58,800 --> 01:31:02,800
partial originally defined in rfc 526

2203
01:31:02,800 --> 01:31:05,120
but an extended syntax to allow negative

2204
01:31:05,120 --> 01:31:09,120
ranges uh for addressing

2205
01:31:09,120 --> 01:31:11,520
so many last messages as opposed to so

2206
01:31:11,520 --> 01:31:13,920
many first messages

2207
01:31:13,920 --> 01:31:16,719
so this is an example

2208
01:31:16,719 --> 01:31:19,199
i want to search all undeleted messages

2209
01:31:19,199 --> 01:31:21,840
not mark junk and i only want the last

2210
01:31:21,840 --> 01:31:24,239
hundred

2211
01:31:25,280 --> 01:31:28,519
next slide

2212
01:31:31,360 --> 01:31:33,840
um similar syntax

2213
01:31:33,840 --> 01:31:37,679
for uid fetch uh uid fetch already had

2214
01:31:37,679 --> 01:31:40,480
fetch modifiers for constor

2215
01:31:40,480 --> 01:31:44,000
so uh we'll use the syntax and reuse the

2216
01:31:44,000 --> 01:31:46,080
same partial

2217
01:31:46,080 --> 01:31:48,960
construct here

2218
01:31:51,760 --> 01:31:54,400
next slide

2219
01:31:55,440 --> 01:31:56,320
so

2220
01:31:56,320 --> 01:32:00,400
what also good is actually uh

2221
01:32:00,400 --> 01:32:02,000
we do have a

2222
01:32:02,000 --> 01:32:03,920
wonderful imap feature when multiple

2223
01:32:03,920 --> 01:32:06,880
extensions interact with each other in

2224
01:32:06,880 --> 01:32:09,120
lots of interesting ways um

2225
01:32:09,120 --> 01:32:11,360
we actually never defined how partial

2226
01:32:11,360 --> 01:32:13,199
and safe

2227
01:32:13,199 --> 01:32:14,320
interact

2228
01:32:14,320 --> 01:32:17,520
so a reminder save is saying

2229
01:32:17,520 --> 01:32:19,520
save this result an internal variable

2230
01:32:19,520 --> 01:32:21,920
and don't return it

2231
01:32:21,920 --> 01:32:24,960
so now the document also

2232
01:32:24,960 --> 01:32:26,800
define interaction between partial and

2233
01:32:26,800 --> 01:32:29,120
safe

2234
01:32:29,760 --> 01:32:32,400
next slide

2235
01:32:35,679 --> 01:32:37,920
i know i just introduced this i'm not

2236
01:32:37,920 --> 01:32:40,080
going to ask for adoption here because

2237
01:32:40,080 --> 01:32:42,239
it's wrong working group and people need

2238
01:32:42,239 --> 01:32:43,199
to

2239
01:32:43,199 --> 01:32:45,600
have a time to think and read this but

2240
01:32:45,600 --> 01:32:47,760
my intent is to

2241
01:32:47,760 --> 01:32:49,440
ask for adoption in the extra working

2242
01:32:49,440 --> 01:32:51,678
group

2243
01:32:53,360 --> 01:32:56,559
comments questions

2244
01:33:03,280 --> 01:33:04,880
brown you are smiling i know you have

2245
01:33:04,880 --> 01:33:08,440
something to say

2246
01:33:13,120 --> 01:33:16,000
we're going to hear you

2247
01:33:16,719 --> 01:33:17,920
first thing i have to say is don't make

2248
01:33:17,920 --> 01:33:19,280
the windows key on your keyboard the

2249
01:33:19,280 --> 01:33:20,639
screen lock key when you accidentally

2250
01:33:20,639 --> 01:33:21,840
hit it occasionally because i just

2251
01:33:21,840 --> 01:33:23,360
locked my whole system up and then

2252
01:33:23,360 --> 01:33:25,120
mistyped my password trying to log back

2253
01:33:25,120 --> 01:33:26,639
in so i couldn't get in to re-enable

2254
01:33:26,639 --> 01:33:28,719
myself um

2255
01:33:28,719 --> 01:33:30,880
i was smiling about the minus one

2256
01:33:30,880 --> 01:33:32,800
because that is that is what the

2257
01:33:32,800 --> 01:33:34,960
asterisk or star

2258
01:33:34,960 --> 01:33:36,960
operator is the well

2259
01:33:36,960 --> 01:33:39,679
very much misunderstood

2260
01:33:39,679 --> 01:33:42,159
operator that means the last with the

2261
01:33:42,159 --> 01:33:44,000
last item

2262
01:33:44,000 --> 01:33:45,760
or the item with the highest uid

2263
01:33:45,760 --> 01:33:47,360
specifically

2264
01:33:47,360 --> 01:33:50,320
um this whole minus one syntax is yet

2265
01:33:50,320 --> 01:33:51,920
another weird

2266
01:33:51,920 --> 01:33:54,320
thing in imap and it's fine but it's

2267
01:33:54,320 --> 01:33:57,199
also like imap is so

2268
01:33:57,199 --> 01:33:58,000
so

2269
01:33:58,000 --> 01:34:00,880
syntactically edgy

2270
01:34:00,880 --> 01:34:04,480
and tricky to deal with

2271
01:34:04,480 --> 01:34:05,440
but

2272
01:34:05,440 --> 01:34:07,360
if people have better suggestion you

2273
01:34:07,360 --> 01:34:08,320
know i

2274
01:34:08,320 --> 01:34:10,000
i just thought it was cute just because

2275
01:34:10,000 --> 01:34:11,840
it was used in python

2276
01:34:11,840 --> 01:34:14,960
other places but yeah

2277
01:34:15,120 --> 01:34:17,040
um

2278
01:34:17,040 --> 01:34:18,560
i think it's it's

2279
01:34:18,560 --> 01:34:20,080
definitely worth taking it to extra and

2280
01:34:20,080 --> 01:34:22,080
asking for adoption

2281
01:34:22,080 --> 01:34:25,199
it looks implementable

2282
01:34:25,920 --> 01:34:27,760
and if you get one client and server

2283
01:34:27,760 --> 01:34:30,080
using it then it could expand out so

2284
01:34:30,080 --> 01:34:33,040
sure

2285
01:34:33,040 --> 01:34:35,440
i saw in the chat that um

2286
01:34:35,440 --> 01:34:38,080
ken and pete talked about the imap x

2287
01:34:38,080 --> 01:34:39,679
view extension

2288
01:34:39,679 --> 01:34:43,360
which was published some long time ago

2289
01:34:43,360 --> 01:34:47,839
july 2000 there you go

2290
01:34:52,080 --> 01:34:53,360
so i'll put a link to that in the

2291
01:34:53,360 --> 01:34:55,199
minutes as well

2292
01:34:55,199 --> 01:34:57,280
alexi was certainly around for that to

2293
01:34:57,280 --> 01:34:59,760
probably bring back some bad memories i

2294
01:34:59,760 --> 01:35:01,440
don't think that went very far with that

2295
01:35:01,440 --> 01:35:03,839
draft

2296
01:35:09,840 --> 01:35:11,360
yeah it's also complexity of

2297
01:35:11,360 --> 01:35:13,119
implementing you know like partials

2298
01:35:13,119 --> 01:35:15,920
actually is fairly easy to implement

2299
01:35:15,920 --> 01:35:17,600
and you know i know that there are

2300
01:35:17,600 --> 01:35:19,280
multiple implementations of partial

2301
01:35:19,280 --> 01:35:20,560
already

2302
01:35:20,560 --> 01:35:22,639
yep agreed yeah i think i think view

2303
01:35:22,639 --> 01:35:25,600
probably try to do too much at the time

2304
01:35:25,600 --> 01:35:26,800
yeah

2305
01:35:26,800 --> 01:35:30,080
because it it tried to be like uh yeah

2306
01:35:30,080 --> 01:35:33,600
yeah more like a mailbox which caused

2307
01:35:33,600 --> 01:35:36,320
all kind of interesting things and

2308
01:35:36,320 --> 01:35:38,800
partial also uh doesn't try to deal with

2309
01:35:38,800 --> 01:35:40,840
updates which is quite

2310
01:35:40,840 --> 01:35:42,480
nasty

2311
01:35:42,480 --> 01:35:43,840
well

2312
01:35:43,840 --> 01:35:45,760
has a bunch of interesting issues with

2313
01:35:45,760 --> 01:35:47,840
it

2314
01:35:52,000 --> 01:35:53,679
but yeah that's a good point i'll i'll

2315
01:35:53,679 --> 01:35:56,400
have a look at the view and see if there

2316
01:35:56,400 --> 01:35:59,519
is anything there that

2317
01:36:02,159 --> 01:36:05,199
that can be rescued

2318
01:36:08,800 --> 01:36:12,080
all right any other comments

2319
01:36:14,560 --> 01:36:17,040
so i guess the next thing is to go

2320
01:36:17,040 --> 01:36:20,000
through working group milestones so uh

2321
01:36:20,000 --> 01:36:22,000
ron that's uh

2322
01:36:22,000 --> 01:36:25,119
i think that's your thing yeah yep

2323
01:36:25,119 --> 01:36:27,440
just hang on a second while i

2324
01:36:27,440 --> 01:36:28,400
uh

2325
01:36:28,400 --> 01:36:29,280
sorry

2326
01:36:29,280 --> 01:36:31,199
did you skip any other business so this

2327
01:36:31,199 --> 01:36:33,119
is the final oh yeah yeah

2328
01:36:33,119 --> 01:36:35,280
oh nice job sir

2329
01:36:35,280 --> 01:36:37,840
sorry i i i would have one thing but i'm

2330
01:36:37,840 --> 01:36:39,760
not sure if this is desire to be

2331
01:36:39,760 --> 01:36:41,679
discussed so question is mainly i think

2332
01:36:41,679 --> 01:36:44,880
to ken and maybe alexei um this is about

2333
01:36:44,880 --> 01:36:46,239
this uh

2334
01:36:46,239 --> 01:36:48,960
thief uh implicit standard thing i

2335
01:36:48,960 --> 01:36:52,000
mentioned in the last tech connect um

2336
01:36:52,000 --> 01:36:54,000
into a meeting and i think alex say you

2337
01:36:54,000 --> 01:36:56,400
asked me to send this to the extra group

2338
01:36:56,400 --> 01:36:58,719
uh however it didn't really spark in

2339
01:36:58,719 --> 01:37:00,880
there so the question is how to proceed

2340
01:37:00,880 --> 01:37:02,719
with that

2341
01:37:02,719 --> 01:37:07,440
i still still owe your response uh

2342
01:37:07,440 --> 01:37:10,080
well um

2343
01:37:10,639 --> 01:37:12,480
it is difficult in the sense that i

2344
01:37:12,480 --> 01:37:14,639
don't well

2345
01:37:14,639 --> 01:37:16,719
we probably wouldn't want to modify civ

2346
01:37:16,719 --> 01:37:18,800
syntax because that will be just too

2347
01:37:18,800 --> 01:37:21,119
disruptive but if we can have structured

2348
01:37:21,119 --> 01:37:22,239
comments

2349
01:37:22,239 --> 01:37:23,679
i think that's probably the way forward

2350
01:37:23,679 --> 01:37:26,000
but yeah absolutely i

2351
01:37:26,000 --> 01:37:28,239
i think this is the problem that

2352
01:37:28,239 --> 01:37:30,719
was solving just well because multiple

2353
01:37:30,719 --> 01:37:33,040
people ran into it it's quite a common

2354
01:37:33,040 --> 01:37:34,960
thing all right

2355
01:37:34,960 --> 01:37:37,119
so yeah i have it on my to-do list i

2356
01:37:37,119 --> 01:37:39,920
haven't forgotten the story just uh no

2357
01:37:39,920 --> 01:37:42,960
no no don't worry no worries

2358
01:37:42,960 --> 01:37:46,080
absolutely fine um maybe um

2359
01:37:46,080 --> 01:37:48,400
also in the direction of ken because i

2360
01:37:48,400 --> 01:37:50,320
think our use case initially was

2361
01:37:50,320 --> 01:37:51,920
stemming from

2362
01:37:51,920 --> 01:37:54,960
jmap our implementation of jmapreceive

2363
01:37:54,960 --> 01:37:57,360
in jmap even though we experienced the

2364
01:37:57,360 --> 01:37:59,440
same problem with raw thief

2365
01:37:59,440 --> 01:38:01,360
under managed c so

2366
01:38:01,360 --> 01:38:02,639
um

2367
01:38:02,639 --> 01:38:04,880
but for for jmap actually we currently

2368
01:38:04,880 --> 01:38:06,400
also could

2369
01:38:06,400 --> 01:38:08,639
do with it by ourselves with the means

2370
01:38:08,639 --> 01:38:10,000
of the standard

2371
01:38:10,000 --> 01:38:12,880
um because we thought about also

2372
01:38:12,880 --> 01:38:16,400
transmitting basically a product id via

2373
01:38:16,400 --> 01:38:18,400
the capabilities

2374
01:38:18,400 --> 01:38:20,560
so that's a little bit maybe i don't

2375
01:38:20,560 --> 01:38:22,320
know if this is intended usage of the

2376
01:38:22,320 --> 01:38:23,920
capabilities but i think it's not

2377
01:38:23,920 --> 01:38:25,920
strictly forbidden and that would

2378
01:38:25,920 --> 01:38:29,199
actually allow us um to do what we want

2379
01:38:29,199 --> 01:38:31,760
so we can currently live with that and

2380
01:38:31,760 --> 01:38:33,440
work around it's the same way we work

2381
01:38:33,440 --> 01:38:35,440
around with it in the

2382
01:38:35,440 --> 01:38:38,960
um in the managed thief case um

2383
01:38:38,960 --> 01:38:42,320
maybe that is an uh

2384
01:38:42,880 --> 01:38:44,960
yeah sorry i was your guy i had to stay

2385
01:38:44,960 --> 01:38:46,560
muted because my dog was barking at the

2386
01:38:46,560 --> 01:38:47,679
fedex guy

2387
01:38:47,679 --> 01:38:49,840
um

2388
01:38:50,480 --> 01:38:52,080
yeah so

2389
01:38:52,080 --> 01:38:54,880
the issue you're having is is that

2390
01:38:54,880 --> 01:38:57,119
the implementation that you're trying to

2391
01:38:57,119 --> 01:38:58,960
write or trying to use doesn't support

2392
01:38:58,960 --> 01:39:00,800
vlogs i'm not right

2393
01:39:00,800 --> 01:39:02,560
now oh no no so the blob thing is a

2394
01:39:02,560 --> 01:39:04,719
different thing and um

2395
01:39:04,719 --> 01:39:06,800
that is that is also okay we can work

2396
01:39:06,800 --> 01:39:08,560
with that so some of my remarks were

2397
01:39:08,560 --> 01:39:10,800
there were also maybe

2398
01:39:10,800 --> 01:39:12,560
for other people

2399
01:39:12,560 --> 01:39:14,960
having to deal with the same issues so

2400
01:39:14,960 --> 01:39:16,560
we just found that a little bit

2401
01:39:16,560 --> 01:39:18,880
difficult but we certainly were able to

2402
01:39:18,880 --> 01:39:21,280
do it yeah so so certainly the things

2403
01:39:21,280 --> 01:39:23,280
that i think neil presented

2404
01:39:23,280 --> 01:39:25,920
makes sense so we can do it that way

2405
01:39:25,920 --> 01:39:28,080
the only open issue another open issue

2406
01:39:28,080 --> 01:39:31,920
was that issue with uh implicit um

2407
01:39:31,920 --> 01:39:34,480
conventions

2408
01:39:34,639 --> 01:39:36,800
so so to make a particular particular

2409
01:39:36,800 --> 01:39:38,800
example for instance we've wrote a jmet

2410
01:39:38,800 --> 01:39:42,239
for forcive wrapper for harder groupware

2411
01:39:42,239 --> 01:39:45,290
and for instance already internally

2412
01:39:45,290 --> 01:39:46,800
[Music]

2413
01:39:46,800 --> 01:39:48,480
has names for the rules which it

2414
01:39:48,480 --> 01:39:51,040
displays in the ui to the user because

2415
01:39:51,040 --> 01:39:53,199
typically you you define the thief rule

2416
01:39:53,199 --> 01:39:55,199
in the web ui

2417
01:39:55,199 --> 01:39:57,679
can can you clarify what you mean by

2418
01:39:57,679 --> 01:39:59,280
rule are you talking about an entire

2419
01:39:59,280 --> 01:40:01,840
script or just a portion of the script

2420
01:40:01,840 --> 01:40:03,280
yeah that's that's also an interesting

2421
01:40:03,280 --> 01:40:05,760
question i think which i wrote in the in

2422
01:40:05,760 --> 01:40:08,159
the in the post so typically the kind of

2423
01:40:08,159 --> 01:40:10,320
systems we deal with when we deal with

2424
01:40:10,320 --> 01:40:12,400
thief i i think there is actually in the

2425
01:40:12,400 --> 01:40:14,719
wild there is two major things how

2426
01:40:14,719 --> 01:40:16,080
people use sieve

2427
01:40:16,080 --> 01:40:17,920
one is people engineering their own

2428
01:40:17,920 --> 01:40:19,199
whole script

2429
01:40:19,199 --> 01:40:22,080
and one is c scripts basically generated

2430
01:40:22,080 --> 01:40:24,639
by systems such as a web mailer and

2431
01:40:24,639 --> 01:40:26,239
these thieves scripts tend to be quite

2432
01:40:26,239 --> 01:40:28,880
regular so they consist basically

2433
01:40:28,880 --> 01:40:32,320
of a set of individual rules

2434
01:40:32,320 --> 01:40:33,840
that's basically at least what we

2435
01:40:33,840 --> 01:40:36,800
observed in in project so far yeah

2436
01:40:36,800 --> 01:40:38,800
and and i would argue maybe the second

2437
01:40:38,800 --> 01:40:40,639
case is actually the majority of safe

2438
01:40:40,639 --> 01:40:42,560
usage because not so many people will

2439
01:40:42,560 --> 01:40:44,560
engineer their own c scripts by hand

2440
01:40:44,560 --> 01:40:47,280
maybe i don't know

2441
01:40:47,360 --> 01:40:48,719
anyway

2442
01:40:48,719 --> 01:40:50,719
certainly that second case is i think a

2443
01:40:50,719 --> 01:40:53,119
valid case because you have safe rules

2444
01:40:53,119 --> 01:40:55,920
within systems like corey yeah

2445
01:40:55,920 --> 01:40:57,040
um

2446
01:40:57,040 --> 01:40:59,600
and which are which are created by users

2447
01:40:59,600 --> 01:41:00,400
and

2448
01:41:00,400 --> 01:41:02,560
within that single script which which

2449
01:41:02,560 --> 01:41:04,639
hordi maintains in the back end um there

2450
01:41:04,639 --> 01:41:06,560
are the individual rules which the user

2451
01:41:06,560 --> 01:41:08,320
created in the ui

2452
01:41:08,320 --> 01:41:10,639
like you know move set mail from braun

2453
01:41:10,639 --> 01:41:13,119
to folder broad and so on

2454
01:41:13,119 --> 01:41:16,960
does it clarify your understanding

2455
01:41:16,960 --> 01:41:18,880
yeah i'm mentally i'm trying to figure

2456
01:41:18,880 --> 01:41:22,400
out if we could even use jmap

2457
01:41:22,400 --> 01:41:24,960
to manage a set of rules

2458
01:41:24,960 --> 01:41:26,560
without having

2459
01:41:26,560 --> 01:41:28,719
just crazy crazy things happen because

2460
01:41:28,719 --> 01:41:30,960
if you've got a handful of rules

2461
01:41:30,960 --> 01:41:32,880
they probably need to be executed in a

2462
01:41:32,880 --> 01:41:35,440
particular order which the webmailer or

2463
01:41:35,440 --> 01:41:37,119
the fast mail ui

2464
01:41:37,119 --> 01:41:38,800
is well aware of and that one constructs

2465
01:41:38,800 --> 01:41:40,400
the script that does it in the correct

2466
01:41:40,400 --> 01:41:41,520
order

2467
01:41:41,520 --> 01:41:44,000
so so technically these rules are c

2468
01:41:44,000 --> 01:41:46,159
scripts they are valid tv script and are

2469
01:41:46,159 --> 01:41:48,080
interpreted by a thief back end as far

2470
01:41:48,080 --> 01:41:49,920
as i know yeah it's just a convention

2471
01:41:49,920 --> 01:41:52,800
how these systems build the c scripts

2472
01:41:52,800 --> 01:41:56,080
that's my understanding here

2473
01:41:57,040 --> 01:41:58,960
right so yeah so the interesting

2474
01:41:58,960 --> 01:42:02,239
question is can you annotate the rules

2475
01:42:02,239 --> 01:42:04,639
um with something that allows you to to

2476
01:42:04,639 --> 01:42:07,360
have the name so it displays in the ui

2477
01:42:07,360 --> 01:42:10,320
in the fast mail ui they display

2478
01:42:10,320 --> 01:42:12,239
i think it's just a description of the

2479
01:42:12,239 --> 01:42:13,040
actual

2480
01:42:13,040 --> 01:42:14,639
content of the rule we don't have a way

2481
01:42:14,639 --> 01:42:15,760
to

2482
01:42:15,760 --> 01:42:19,040
to label them with a label as well

2483
01:42:19,040 --> 01:42:20,719
but i could see what happened i know

2484
01:42:20,719 --> 01:42:22,480
there is a there is a here we have a

2485
01:42:22,480 --> 01:42:24,159
thing you can name your rule there you

2486
01:42:24,159 --> 01:42:26,480
go so the fastener ui does precisely

2487
01:42:26,480 --> 01:42:27,440
that

2488
01:42:27,440 --> 01:42:29,679
okay so

2489
01:42:29,679 --> 01:42:30,880
you can you know if it's an entire

2490
01:42:30,880 --> 01:42:32,560
script you could give the name you know

2491
01:42:32,560 --> 01:42:34,080
to the script if it's a single rule

2492
01:42:34,080 --> 01:42:36,080
that's interpreted as a script it's the

2493
01:42:36,080 --> 01:42:37,360
same thing right

2494
01:42:37,360 --> 01:42:38,800
and i guess if we wanted to add another

2495
01:42:38,800 --> 01:42:40,800
field for a comment or a longer

2496
01:42:40,800 --> 01:42:43,920
description we could also do that

2497
01:42:47,679 --> 01:42:49,840
but i think what we have is probably

2498
01:42:49,840 --> 01:42:51,920
sufficient unless

2499
01:42:51,920 --> 01:42:56,960
someone someone else has a stronger view

2500
01:42:56,960 --> 01:42:58,480
well i mean this is what it looks like

2501
01:42:58,480 --> 01:43:00,560
in in the fast mail ui

2502
01:43:00,560 --> 01:43:02,639
and these are these get generated down

2503
01:43:02,639 --> 01:43:04,960
to sieve and if we were to look at one

2504
01:43:04,960 --> 01:43:07,040
of these

2505
01:43:07,040 --> 01:43:10,960
there's an ability to put a name okay

2506
01:43:10,960 --> 01:43:14,639
how do you expose that and steve

2507
01:43:15,600 --> 01:43:16,880
sorry

2508
01:43:16,880 --> 01:43:18,320
let's have a look

2509
01:43:18,320 --> 01:43:22,159
i can i can show you right now um

2510
01:43:22,400 --> 01:43:23,920
oh sorry that's blocked senders i

2511
01:43:23,920 --> 01:43:25,360
clicked the wrong thing i wanted to see

2512
01:43:25,360 --> 01:43:27,119
my custom zip code

2513
01:43:27,119 --> 01:43:29,520
okay so that's that's this is the seal

2514
01:43:29,520 --> 01:43:31,199
that gets generated and i can put blocks

2515
01:43:31,199 --> 01:43:32,560
of custom sieve

2516
01:43:32,560 --> 01:43:34,560
in as well so this header gets added to

2517
01:43:34,560 --> 01:43:37,600
every single email that i receive

2518
01:43:37,600 --> 01:43:39,840
um

2519
01:43:45,199 --> 01:43:46,800
there you go so it's just a comment

2520
01:43:46,800 --> 01:43:47,840
above it

2521
01:43:47,840 --> 01:43:50,840
okay

2522
01:43:54,639 --> 01:43:57,280
so that this is this is the

2523
01:43:57,280 --> 01:43:59,600
the variables and complex structure

2524
01:43:59,600 --> 01:44:01,520
stuff that we build for our civ rules

2525
01:44:01,520 --> 01:44:02,400
now

2526
01:44:02,400 --> 01:44:04,239
okay so so i have basically two two

2527
01:44:04,239 --> 01:44:06,320
points here so one point is this is

2528
01:44:06,320 --> 01:44:08,719
certainly an interoperability issue if

2529
01:44:08,719 --> 01:44:10,719
you think about you know migrating rules

2530
01:44:10,719 --> 01:44:12,239
from one system to the other and

2531
01:44:12,239 --> 01:44:13,920
probably also with

2532
01:44:13,920 --> 01:44:16,080
tools editing scripts

2533
01:44:16,080 --> 01:44:17,760
because you know if you now i don't know

2534
01:44:17,760 --> 01:44:20,400
if you expose manage thief uh braun but

2535
01:44:20,400 --> 01:44:22,719
for instance if a client would mess up

2536
01:44:22,719 --> 01:44:24,320
that comment yeah it would mess up the

2537
01:44:24,320 --> 01:44:28,239
ui which is not nice yeah

2538
01:44:28,880 --> 01:44:31,440
i think you agree right

2539
01:44:31,440 --> 01:44:33,840
yeah we don't expose manage service

2540
01:44:33,840 --> 01:44:35,840
is basically and there is not just

2541
01:44:35,840 --> 01:44:38,560
comments uh there is also a sketch in

2542
01:44:38,560 --> 01:44:40,239
the initial mail there's priority

2543
01:44:40,239 --> 01:44:42,560
sometimes you can define or

2544
01:44:42,560 --> 01:44:44,639
you know those special use kind of uh

2545
01:44:44,639 --> 01:44:46,960
annotations you have to roots which may

2546
01:44:46,960 --> 01:44:48,719
sort it in some way or the other in the

2547
01:44:48,719 --> 01:44:49,920
in the ui

2548
01:44:49,920 --> 01:44:53,040
um so that's point one and we don't need

2549
01:44:53,040 --> 01:44:54,719
to discuss further here i think that was

2550
01:44:54,719 --> 01:44:56,560
the mail i sent to the extra group and

2551
01:44:56,560 --> 01:44:58,239
probably it's better there than here in

2552
01:44:58,239 --> 01:45:00,320
the gmap working group just to sort

2553
01:45:00,320 --> 01:45:02,639
things out my second point was we have

2554
01:45:02,639 --> 01:45:04,480
the practical problem of doing the

2555
01:45:04,480 --> 01:45:06,639
implementation for gma proceed in a

2556
01:45:06,639 --> 01:45:08,400
particular case

2557
01:45:08,400 --> 01:45:11,040
where we need a way to know

2558
01:45:11,040 --> 01:45:13,440
how to interpret the rule coming from

2559
01:45:13,440 --> 01:45:16,320
the gem at backend so we so to know for

2560
01:45:16,320 --> 01:45:18,719
instance this jmf perceive

2561
01:45:18,719 --> 01:45:21,840
server is actually serving us a rule

2562
01:45:21,840 --> 01:45:25,040
coming from a haudi um convention so we

2563
01:45:25,040 --> 01:45:26,320
can actually

2564
01:45:26,320 --> 01:45:29,600
apply some special logic that are

2565
01:45:29,600 --> 01:45:31,520
passing where we know this is how hard

2566
01:45:31,520 --> 01:45:33,199
he does format the rule name or

2567
01:45:33,199 --> 01:45:35,199
something like that because otherwise we

2568
01:45:35,199 --> 01:45:38,080
cannot correctly uh you know

2569
01:45:38,080 --> 01:45:39,199
transfer it

2570
01:45:39,199 --> 01:45:41,199
and my message was for the second aspect

2571
01:45:41,199 --> 01:45:43,280
we found a workaround so we can use the

2572
01:45:43,280 --> 01:45:47,440
jmap capabilities um in order to uh you

2573
01:45:47,440 --> 01:45:50,159
know convey the information this is

2574
01:45:50,159 --> 01:45:52,080
holly implementation so we are basically

2575
01:45:52,080 --> 01:45:53,440
fine here

2576
01:45:53,440 --> 01:45:55,760
which brings us back to the first

2577
01:45:55,760 --> 01:45:58,400
aspect which was actually a successor of

2578
01:45:58,400 --> 01:46:01,119
the second one in the initially

2579
01:46:01,119 --> 01:46:03,920
uh which we can follow up in extra sorry

2580
01:46:03,920 --> 01:46:05,760
i just wanted to

2581
01:46:05,760 --> 01:46:07,679
yeah um

2582
01:46:07,679 --> 01:46:09,920
yeah

2583
01:46:10,320 --> 01:46:12,400
okay so it looks like uh alexi and i

2584
01:46:12,400 --> 01:46:14,320
both have actions to reply to you on the

2585
01:46:14,320 --> 01:46:17,199
extra mailing list

2586
01:46:19,520 --> 01:46:22,159
all right thanks

2587
01:46:22,239 --> 01:46:24,159
one other comment on the uh the blob

2588
01:46:24,159 --> 01:46:26,080
thing uh hans york i know he would you

2589
01:46:26,080 --> 01:46:28,400
would had some concerns about multiple

2590
01:46:28,400 --> 01:46:32,080
round trips to fetch touch the scripts i

2591
01:46:32,080 --> 01:46:34,239
uploaded a new version of the draft

2592
01:46:34,239 --> 01:46:36,400
yesterday morning i think

2593
01:46:36,400 --> 01:46:38,880
which shows how to use blob get in

2594
01:46:38,880 --> 01:46:41,520
addition to um

2595
01:46:41,520 --> 01:46:42,320
uh

2596
01:46:42,320 --> 01:46:45,600
either uh subscript get or or a query

2597
01:46:45,600 --> 01:46:47,520
to basically effects that's the script

2598
01:46:47,520 --> 01:46:49,600
content in one round trip

2599
01:46:49,600 --> 01:46:52,000
okay awesome i'll have a look maybe as a

2600
01:46:52,000 --> 01:46:54,159
media remark here and and maybe also to

2601
01:46:54,159 --> 01:46:56,000
to neil especially who took quite some

2602
01:46:56,000 --> 01:46:58,800
some effort to to respond to my email so

2603
01:46:58,800 --> 01:47:00,880
most of these comments were also meant

2604
01:47:00,880 --> 01:47:04,000
to be some feedback which we had

2605
01:47:04,000 --> 01:47:06,080
based on how we perceived on how to

2606
01:47:06,080 --> 01:47:08,560
implement this yeah so personally i

2607
01:47:08,560 --> 01:47:10,080
think this could be so the gmat

2608
01:47:10,080 --> 01:47:11,679
perceived thing i think could be in

2609
01:47:11,679 --> 01:47:13,920
practice be really useful for many

2610
01:47:13,920 --> 01:47:16,639
people using sieve to finally allow to

2611
01:47:16,639 --> 01:47:17,840
expose

2612
01:47:17,840 --> 01:47:20,000
um existing safe rules which probably

2613
01:47:20,000 --> 01:47:22,080
didn't want to expose manage thief so

2614
01:47:22,080 --> 01:47:23,679
far implemented

2615
01:47:23,679 --> 01:47:26,000
and and my feeling was that you know

2616
01:47:26,000 --> 01:47:28,239
this blob kind of thing makes it a

2617
01:47:28,239 --> 01:47:30,400
little bit difficult to to you know

2618
01:47:30,400 --> 01:47:32,560
understand on how to do it or

2619
01:47:32,560 --> 01:47:34,159
you know poses some restrictions on

2620
01:47:34,159 --> 01:47:36,560
people that maybe have a a bunch of

2621
01:47:36,560 --> 01:47:39,119
rules on a local fire drive because

2622
01:47:39,119 --> 01:47:41,040
sometimes they are just stored in on a

2623
01:47:41,040 --> 01:47:42,400
file system

2624
01:47:42,400 --> 01:47:44,239
um and and i thought things could

2625
01:47:44,239 --> 01:47:45,679
probably be easier in there but i'm

2626
01:47:45,679 --> 01:47:48,159
totally fine i see your argument that it

2627
01:47:48,159 --> 01:47:49,679
also makes sense to keep things a little

2628
01:47:49,679 --> 01:47:51,119
bit consistent

2629
01:47:51,119 --> 01:47:52,719
but that's just part of my larger

2630
01:47:52,719 --> 01:47:54,719
mission to also raise a voice a little

2631
01:47:54,719 --> 01:47:57,040
bit for for thinking in in the design of

2632
01:47:57,040 --> 01:47:59,280
jmap also about

2633
01:47:59,280 --> 01:48:00,960
you know people which don't design a

2634
01:48:00,960 --> 01:48:03,199
whole system from scratch in a nice and

2635
01:48:03,199 --> 01:48:05,760
funky way but maybe want to use only

2636
01:48:05,760 --> 01:48:08,880
pieces of jmap um

2637
01:48:08,880 --> 01:48:10,560
and it might a little bit be be

2638
01:48:10,560 --> 01:48:12,800
overwhelmed by some restrictions in

2639
01:48:12,800 --> 01:48:16,880
there i i i know there is no um a clean

2640
01:48:16,880 --> 01:48:18,400
way out of this and i appreciate the

2641
01:48:18,400 --> 01:48:21,040
feedback by neil i hope that wasn't uh

2642
01:48:21,040 --> 01:48:22,560
too aggressive on the email list or

2643
01:48:22,560 --> 01:48:24,400
something like that um yeah i just

2644
01:48:24,400 --> 01:48:26,320
wanted to make that point

2645
01:48:26,320 --> 01:48:27,360
yeah

2646
01:48:27,360 --> 01:48:29,600
if you compare it to the body parts in

2647
01:48:29,600 --> 01:48:30,800
an email

2648
01:48:30,800 --> 01:48:32,400
we allow you to fetch the

2649
01:48:32,400 --> 01:48:34,800
text of part of the body of an email

2650
01:48:34,800 --> 01:48:36,639
in line rather than giving you a blob id

2651
01:48:36,639 --> 01:48:38,960
and telling you to go fetch that blob id

2652
01:48:38,960 --> 01:48:40,320
and partly because we didn't have all

2653
01:48:40,320 --> 01:48:43,280
this blob infrastructure then but it i i

2654
01:48:43,280 --> 01:48:44,960
can see an argument for doing the same

2655
01:48:44,960 --> 01:48:47,280
thing with siv to allow you to fetch

2656
01:48:47,280 --> 01:48:49,920
the the raw text of it as part of the

2657
01:48:49,920 --> 01:48:53,119
fetch as well as giving you a blob id

2658
01:48:53,119 --> 01:48:55,119
so that becomes different things you can

2659
01:48:55,119 --> 01:48:58,000
fetch on the script

2660
01:48:59,119 --> 01:49:00,960
yes it's more than one way but that we

2661
01:49:00,960 --> 01:49:03,040
do that with other other types so we can

2662
01:49:03,040 --> 01:49:06,760
keep discussing that

2663
01:49:18,320 --> 01:49:20,159
is there anything else before we go on

2664
01:49:20,159 --> 01:49:22,480
to the

2665
01:49:24,080 --> 01:49:27,960
milestone review

2666
01:49:28,320 --> 01:49:32,960
sorry i forgot to uh call that before

2667
01:49:33,599 --> 01:49:35,599
so braun

2668
01:49:35,599 --> 01:49:40,119
you're on yeah let's do it

2669
01:49:42,000 --> 01:49:45,599
go through the screen sharing dance

2670
01:49:49,280 --> 01:49:51,920
this is what one we're looking at

2671
01:49:51,920 --> 01:49:54,320
so these are what we have at the moment

2672
01:49:54,320 --> 01:49:55,199
um

2673
01:49:55,199 --> 01:49:57,199
adopt s mom advanced we did that i

2674
01:49:57,199 --> 01:49:59,598
believe

2675
01:50:00,080 --> 01:50:04,280
that that is adopted right

2676
01:50:15,440 --> 01:50:19,440
s mime ascender extensions

2677
01:50:19,440 --> 01:50:23,719
presumably that's what it's now called

2678
01:50:24,800 --> 01:50:28,639
yep cool so we'll update that

2679
01:50:37,040 --> 01:50:41,040
uh gem up access to address books

2680
01:50:41,040 --> 01:50:42,320
when do we think we're going to get to

2681
01:50:42,320 --> 01:50:44,880
that robert

2682
01:50:51,360 --> 01:50:52,480
not before

2683
01:50:52,480 --> 01:50:56,000
we got gs contact

2684
01:50:56,000 --> 01:50:56,960
um

2685
01:50:56,960 --> 01:50:58,800
at least until we got the implementation

2686
01:50:58,800 --> 01:51:01,440
experience with js contact so

2687
01:51:01,440 --> 01:51:04,000
yeah spring next year

2688
01:51:04,000 --> 01:51:07,040
i don't know when next itf is but yeah

2689
01:51:07,040 --> 01:51:08,960
i don't even know when spring is

2690
01:51:08,960 --> 01:51:10,239
it depends which part of the world

2691
01:51:10,239 --> 01:51:12,480
you're in

2692
01:51:21,040 --> 01:51:25,040
i'm going to say april 2022 yeah um

2693
01:51:25,040 --> 01:51:29,360
submit jmap calendars to isg

2694
01:51:29,520 --> 01:51:31,199
that's probably also i think all these

2695
01:51:31,199 --> 01:51:33,280
things that are currently december

2696
01:51:33,280 --> 01:51:34,880
except for maybe

2697
01:51:34,880 --> 01:51:36,080
blob

2698
01:51:36,080 --> 01:51:38,880
blob i expect will get submitted

2699
01:51:38,880 --> 01:51:41,760
in next month

2700
01:51:41,920 --> 01:51:45,199
sieve what do you reckon can

2701
01:51:47,280 --> 01:51:49,119
still waiting on some implementation

2702
01:51:49,119 --> 01:51:50,800
experience with uh

2703
01:51:50,800 --> 01:51:53,599
the test method and i guess we probably

2704
01:51:53,599 --> 01:51:56,400
still need to revisit the blob versus

2705
01:51:56,400 --> 01:51:58,159
inline

2706
01:51:58,159 --> 01:52:02,598
uh script data issue

2707
01:52:05,280 --> 01:52:08,400
so i i i think december is probably

2708
01:52:08,400 --> 01:52:09,280
uh

2709
01:52:09,280 --> 01:52:12,159
not doable

2710
01:52:12,639 --> 01:52:16,000
probably early next year i hope

2711
01:52:27,840 --> 01:52:29,520
you want to change the name on that to

2712
01:52:29,520 --> 01:52:32,880
reflect that it's been adopted

2713
01:52:32,880 --> 01:52:34,880
yeah yeah i'll do i'll do the whole lot

2714
01:52:34,880 --> 01:52:36,560
as a batch

2715
01:52:36,560 --> 01:52:38,400
i'm just putting notes in the in the

2716
01:52:38,400 --> 01:52:40,800
minutes now for what to do

2717
01:52:40,800 --> 01:52:42,480
and that's i think everything gmap

2718
01:52:42,480 --> 01:52:46,000
quotas is the other final

2719
01:52:46,000 --> 01:52:48,159
document here which we didn't discuss at

2720
01:52:48,159 --> 01:52:49,119
this

2721
01:52:49,119 --> 01:52:50,320
meeting but

2722
01:52:50,320 --> 01:52:52,239
um there has been some movement on that

2723
01:52:52,239 --> 01:52:54,480
so

2724
01:52:55,679 --> 01:52:59,400
we'll leave that for now

2725
01:53:02,639 --> 01:53:04,960
now that extra quarter is

2726
01:53:04,960 --> 01:53:07,040
is nearly done i'll probably have some

2727
01:53:07,040 --> 01:53:08,639
cycles too

2728
01:53:08,639 --> 01:53:11,199
read it again

2729
01:53:11,199 --> 01:53:13,839
cool

2730
01:53:26,239 --> 01:53:27,679
and after all that we only have seven

2731
01:53:27,679 --> 01:53:29,040
minutes left

2732
01:53:29,040 --> 01:53:30,159
um

2733
01:53:30,159 --> 01:53:32,960
does anybody have anything else

2734
01:53:32,960 --> 01:53:36,360
let me unshare

2735
01:53:46,639 --> 01:53:48,000
it's always very quiet in these groups

2736
01:53:48,000 --> 01:53:50,880
but quite productive

2737
01:53:52,719 --> 01:53:56,320
well this was good use of time i think

2738
01:53:59,119 --> 01:54:01,040
murray has something to say

2739
01:54:01,040 --> 01:54:02,880
just a quick i saw you messing around

2740
01:54:02,880 --> 01:54:04,320
with milestones but i haven't seen any

2741
01:54:04,320 --> 01:54:05,679
emails come through that you're editing

2742
01:54:05,679 --> 01:54:07,520
any is that correct oh no i do i haven't

2743
01:54:07,520 --> 01:54:08,880
edited anything yet i've just been

2744
01:54:08,880 --> 01:54:10,960
typing it into the minutes

2745
01:54:10,960 --> 01:54:12,880
okay thanks i'll just

2746
01:54:12,880 --> 01:54:14,480
mess with all the milestones and send

2747
01:54:14,480 --> 01:54:16,719
all the actions

2748
01:54:16,719 --> 01:54:18,400
yep

2749
01:54:18,400 --> 01:54:22,440
are you feeling more awake now murray

2750
01:54:23,280 --> 01:54:25,440
uh be gentle yeah a little bit more i've

2751
01:54:25,440 --> 01:54:27,520
been working working while listening and

2752
01:54:27,520 --> 01:54:29,520
uh yeah i agree it's pretty productive

2753
01:54:29,520 --> 01:54:30,800
thanks uh thanks for tuning into your

2754
01:54:30,800 --> 01:54:32,159
milestones too some groups are kind of

2755
01:54:32,159 --> 01:54:33,840
slack about that

2756
01:54:33,840 --> 01:54:35,520
yeah

2757
01:54:35,520 --> 01:54:37,280
i stood up in a working group chairs

2758
01:54:37,280 --> 01:54:38,960
meeting and told people

2759
01:54:38,960 --> 01:54:40,639
that they were

2760
01:54:40,639 --> 01:54:42,159
it's reasonable to be held accountable

2761
01:54:42,159 --> 01:54:43,840
three times a year to what you promised

2762
01:54:43,840 --> 01:54:44,800
to do

2763
01:54:44,800 --> 01:54:46,239
so i figured i'd better set a good

2764
01:54:46,239 --> 01:54:48,159
example because otherwise i'm a

2765
01:54:48,159 --> 01:54:50,639
hypocrite and although i am a hypocrite

2766
01:54:50,639 --> 01:54:51,920
that's good not to be a hypocrite in

2767
01:54:51,920 --> 01:54:54,719
this specific thing

2768
01:54:58,880 --> 01:54:59,920
cool

2769
01:54:59,920 --> 01:55:03,679
thanks jim thanks everybody

2770
01:55:03,679 --> 01:55:05,199
let's go

2771
01:55:05,199 --> 01:55:08,000
hang and gather or something

2772
01:55:08,000 --> 01:55:11,760
i'll say sorry in half an hour

2773
01:55:12,800 --> 01:55:16,280
we'll see you then

2774
01:55:18,480 --> 01:55:21,718
thank you

