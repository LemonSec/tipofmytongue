1
00:00:34,719 --> 00:00:37,120
all right i think it's time

2
00:00:37,120 --> 00:00:40,879
let's see if i can turn my video on

3
00:00:42,559 --> 00:00:45,360
good morning good afternoon and good

4
00:00:45,360 --> 00:00:46,879
evening everyone

5
00:00:46,879 --> 00:00:50,399
this is our our last day home stretch

6
00:00:50,399 --> 00:00:52,800
welcome to the trusted execution

7
00:00:52,800 --> 00:00:55,039
environment and provisioning working

8
00:00:55,039 --> 00:00:56,320
group

9
00:00:56,320 --> 00:00:59,840
hopefully you can hear me now

10
00:01:04,559 --> 00:01:07,680
let's go ahead and get started um

11
00:01:07,680 --> 00:01:09,840
i think most of you are very familiar

12
00:01:09,840 --> 00:01:11,520
with the note well

13
00:01:11,520 --> 00:01:14,720
with respect to the ipr

14
00:01:14,720 --> 00:01:16,159
um

15
00:01:16,159 --> 00:01:20,000
and how we conduct our business here

16
00:01:20,000 --> 00:01:23,119
one thing that we wanted to call out

17
00:01:23,119 --> 00:01:27,680
is the code of conduct we want to follow

18
00:01:27,680 --> 00:01:31,360
this is based on rfc 7154

19
00:01:31,360 --> 00:01:35,119
and to summarize here it's basically for

20
00:01:35,119 --> 00:01:38,560
us to treat each other with respect

21
00:01:38,560 --> 00:01:40,720
we are all professionals coming in with

22
00:01:40,720 --> 00:01:42,560
our own point of view and diverse

23
00:01:42,560 --> 00:01:43,920
backgrounds

24
00:01:43,920 --> 00:01:47,040
so we should keep our discussions um

25
00:01:47,040 --> 00:01:50,079
more of an impersonal and to the point

26
00:01:50,079 --> 00:01:51,040
um

27
00:01:51,040 --> 00:01:53,759
as we're working to define

28
00:01:53,759 --> 00:01:56,560
solutions that will inter-operate across

29
00:01:56,560 --> 00:01:59,280
the globe okay

30
00:01:59,280 --> 00:02:02,640
so given that i will thank hannes in

31
00:02:02,640 --> 00:02:05,200
advance i've got the links here

32
00:02:05,200 --> 00:02:07,759
um good to see you i've got my co-chair

33
00:02:07,759 --> 00:02:10,239
with me here

34
00:02:10,239 --> 00:02:12,400
um and i've just noted the links here

35
00:02:12,400 --> 00:02:13,360
for

36
00:02:13,360 --> 00:02:15,440
the meeting materials as well as the

37
00:02:15,440 --> 00:02:19,599
note-taking um i forgot to update um

38
00:02:19,599 --> 00:02:22,000
no i think the minutes link is correct

39
00:02:22,000 --> 00:02:23,920
so thank you hannes for being our

40
00:02:23,920 --> 00:02:25,440
notetaker

41
00:02:25,440 --> 00:02:27,920
i encourage everyone else it's a live

42
00:02:27,920 --> 00:02:31,519
document to go to the um

43
00:02:31,519 --> 00:02:32,959
uh

44
00:02:32,959 --> 00:02:35,840
cody md or whatever it's called now

45
00:02:35,840 --> 00:02:37,920
hedgehog um

46
00:02:37,920 --> 00:02:40,160
and help out and

47
00:02:40,160 --> 00:02:42,400
if you can also help us

48
00:02:42,400 --> 00:02:45,599
um recording

49
00:02:46,879 --> 00:02:48,319
that will help

50
00:02:48,319 --> 00:02:50,319
sorry if i got the title slide wrong

51
00:02:50,319 --> 00:02:53,599
hannes what did i do

52
00:02:56,239 --> 00:02:58,720
yeah okay my bad i'll do better next

53
00:02:58,720 --> 00:03:00,159
time

54
00:03:00,159 --> 00:03:02,879
okay so

55
00:03:02,879 --> 00:03:05,200
oh shoot yeah

56
00:03:05,200 --> 00:03:07,679
you're right

57
00:03:08,400 --> 00:03:11,040
okay so

58
00:03:11,040 --> 00:03:14,560
uh agenda for today

59
00:03:14,560 --> 00:03:16,959
um

60
00:03:17,760 --> 00:03:18,879
we've got

61
00:03:18,879 --> 00:03:20,400
akira

62
00:03:20,400 --> 00:03:22,800
providing us the hackathon

63
00:03:22,800 --> 00:03:23,760
we

64
00:03:23,760 --> 00:03:27,280
still have our um

65
00:03:27,280 --> 00:03:30,959
architecture and protocol drafts

66
00:03:30,959 --> 00:03:32,799
have been submitted to

67
00:03:32,799 --> 00:03:34,959
um

68
00:03:34,959 --> 00:03:36,720
publication

69
00:03:36,720 --> 00:03:38,560
uh for today we've just got the

70
00:03:38,560 --> 00:03:41,360
hackathon report um

71
00:03:41,360 --> 00:03:44,000
akira i've got you and i think you've

72
00:03:44,000 --> 00:03:46,080
embedded them in your slides to talk

73
00:03:46,080 --> 00:03:48,000
about the um

74
00:03:48,000 --> 00:03:50,959
the suit and teap i think that was also

75
00:03:50,959 --> 00:03:53,040
part of your hackathon

76
00:03:53,040 --> 00:03:56,239
but there's a github request

77
00:03:56,239 --> 00:03:59,040
for this and then the rest of the time

78
00:03:59,040 --> 00:04:01,120
we'll spend um

79
00:04:01,120 --> 00:04:04,159
talking about the protocol see i'm like

80
00:04:04,159 --> 00:04:05,680
not awake

81
00:04:05,680 --> 00:04:07,519
it should say protocol not not

82
00:04:07,519 --> 00:04:11,120
architecture my bad

83
00:04:11,680 --> 00:04:14,959
uh so barring those updates

84
00:04:14,959 --> 00:04:16,798
any

85
00:04:16,798 --> 00:04:20,478
any other agenda bash

86
00:04:24,160 --> 00:04:26,960
going once going twice

87
00:04:26,960 --> 00:04:28,400
right so

88
00:04:28,400 --> 00:04:30,000
akira

89
00:04:30,000 --> 00:04:33,919
do you want me to share your slides

90
00:04:34,560 --> 00:04:36,880
um

91
00:04:37,360 --> 00:04:39,440
no i think i would like to share my

92
00:04:39,440 --> 00:04:40,720
screen

93
00:04:40,720 --> 00:04:41,680
okay

94
00:04:41,680 --> 00:04:44,479
go for it good

95
00:04:44,720 --> 00:04:46,400
and i could

96
00:04:46,400 --> 00:04:49,280
flip the page

97
00:04:55,120 --> 00:04:56,720
how

98
00:04:56,720 --> 00:05:00,639
how does is my screen showing right now

99
00:05:00,639 --> 00:05:03,520
uh no we just see your video

100
00:05:03,520 --> 00:05:05,039
oh i see

101
00:05:05,039 --> 00:05:07,440
um

102
00:05:07,440 --> 00:05:11,080
yeah i think the chairs

103
00:05:14,000 --> 00:05:16,880
you should accept uh his request to show

104
00:05:16,880 --> 00:05:19,280
you their desktop or the

105
00:05:19,280 --> 00:05:20,800
reloaded slides

106
00:05:20,800 --> 00:05:25,000
ah thank you okay perfect

107
00:05:27,199 --> 00:05:29,360
oh there it is yeah it's interesting i

108
00:05:29,360 --> 00:05:33,840
see two two icons for the share

109
00:05:36,080 --> 00:05:40,160
yes this is because he asked to share uh

110
00:05:40,160 --> 00:05:42,400
desktop and then click on the other icon

111
00:05:42,400 --> 00:05:46,159
you can deny the other request

112
00:05:46,400 --> 00:05:49,120
okay i've tried to accept both

113
00:05:49,120 --> 00:05:52,639
i see your slides now

114
00:05:52,639 --> 00:05:53,759
and

115
00:05:53,759 --> 00:05:56,800
how do i flip it just a minute

116
00:05:56,800 --> 00:05:59,520
so in the lower you should see

117
00:05:59,520 --> 00:06:02,319
this uh oh there it is

118
00:06:02,319 --> 00:06:03,440
i see

119
00:06:03,440 --> 00:06:06,479
wow got it i didn't know

120
00:06:06,479 --> 00:06:08,880
i didn't know the progress from the last

121
00:06:08,880 --> 00:06:10,400
idea i think

122
00:06:10,400 --> 00:06:12,240
yeah and i think the arrow keys on your

123
00:06:12,240 --> 00:06:14,400
keyboard will also work

124
00:06:14,400 --> 00:06:16,400
yeah it definitely depends

125
00:06:16,400 --> 00:06:18,240
oh yeah it does

126
00:06:18,240 --> 00:06:21,440
so i put two things in the slide one is

127
00:06:21,440 --> 00:06:23,680
about the hackathon and another one is

128
00:06:23,680 --> 00:06:25,360
for the uh

129
00:06:25,360 --> 00:06:29,120
adding three suit format examples in

130
00:06:29,120 --> 00:06:30,240
teep

131
00:06:30,240 --> 00:06:33,600
so um i'm going to start from hackathon

132
00:06:33,600 --> 00:06:35,520
talking about hackathon

133
00:06:35,520 --> 00:06:36,479
we

134
00:06:36,479 --> 00:06:37,840
yeah we were

135
00:06:37,840 --> 00:06:40,479
having a hackathon last week with the

136
00:06:40,479 --> 00:06:43,600
jointly with suit working group

137
00:06:43,600 --> 00:06:44,960
yes

138
00:06:44,960 --> 00:06:49,039
um yes received very early email on

139
00:06:49,039 --> 00:06:50,160
tuesday

140
00:06:50,160 --> 00:06:51,520
from hannes

141
00:06:51,520 --> 00:06:55,039
and yes we we jumped in

142
00:06:55,039 --> 00:06:57,520
and also we had we um on the in japan

143
00:06:57,520 --> 00:07:01,360
side in in japanese time we were working

144
00:07:01,360 --> 00:07:02,960
on um

145
00:07:02,960 --> 00:07:06,720
going through our implementation and um

146
00:07:06,720 --> 00:07:09,680
file filing issues on the github and

147
00:07:09,680 --> 00:07:13,120
creating put uh plo requests

148
00:07:13,120 --> 00:07:14,840
and

149
00:07:14,840 --> 00:07:18,960
the so uh

150
00:07:18,960 --> 00:07:22,080
for the first this is for uh explaining

151
00:07:22,080 --> 00:07:24,160
what what is steep first

152
00:07:24,160 --> 00:07:25,280
so t

153
00:07:25,280 --> 00:07:28,720
honestly it's not only about deep

154
00:07:28,720 --> 00:07:31,360
from the beginning from the

155
00:07:31,360 --> 00:07:34,000
when the protocol draft and architecture

156
00:07:34,000 --> 00:07:36,319
draft it was obvious that its

157
00:07:36,319 --> 00:07:39,440
suit and rats was going to be

158
00:07:39,440 --> 00:07:41,919
um used in the deep

159
00:07:41,919 --> 00:07:43,680
and uh

160
00:07:43,680 --> 00:07:45,919
and the in the format

161
00:07:45,919 --> 00:07:49,280
was changed from otr p to t was uh then

162
00:07:49,280 --> 00:07:52,080
it was from json then it was obvious

163
00:07:52,080 --> 00:07:54,400
it's going to be using coset

164
00:07:54,400 --> 00:07:55,840
so um

165
00:07:55,840 --> 00:07:59,360
well there's many things have to be done

166
00:07:59,360 --> 00:08:02,160
in making the deep draft

167
00:08:02,160 --> 00:08:05,199
finishing which is

168
00:08:05,199 --> 00:08:08,240
which which is tough but um which is

169
00:08:08,240 --> 00:08:09,360
also

170
00:08:09,360 --> 00:08:11,919
challenging and good good thing to do

171
00:08:11,919 --> 00:08:13,440
work

172
00:08:13,440 --> 00:08:14,479
try it

173
00:08:14,479 --> 00:08:16,000
so um

174
00:08:16,000 --> 00:08:17,280
from last

175
00:08:17,280 --> 00:08:21,919
um i gifted this idea we focused on i

176
00:08:21,919 --> 00:08:22,800
mean

177
00:08:22,800 --> 00:08:26,400
me and the other people in japan was yes

178
00:08:26,400 --> 00:08:28,639
i would like to call their name

179
00:08:28,639 --> 00:08:30,879
name yeah um

180
00:08:30,879 --> 00:08:34,958
from asd is suzakson from second

181
00:08:34,958 --> 00:08:36,320
takayama

182
00:08:36,320 --> 00:08:38,479
and tragedy

183
00:08:38,479 --> 00:08:39,599
and also

184
00:08:39,599 --> 00:08:40,479
um

185
00:08:40,479 --> 00:08:44,080
from yes we joined on the arm um suit

186
00:08:44,080 --> 00:08:46,640
work suit working group hackathon too so

187
00:08:46,640 --> 00:08:49,760
random harness and and dave was working

188
00:08:49,760 --> 00:08:51,440
on um in

189
00:08:51,440 --> 00:08:55,560
on his time zone too

190
00:08:55,600 --> 00:08:58,720
and coming back so we were uh the main

191
00:08:58,720 --> 00:09:01,519
focus was adding suit

192
00:09:01,519 --> 00:09:04,080
format in the tip draft

193
00:09:04,080 --> 00:09:06,399
yes

194
00:09:06,640 --> 00:09:07,680
and

195
00:09:07,680 --> 00:09:09,600
and we would like to we would like to

196
00:09:09,600 --> 00:09:12,800
finish suit manifest example in the tip

197
00:09:12,800 --> 00:09:15,279
so everybody who is going to use

198
00:09:15,279 --> 00:09:18,640
teep would also understand how to

199
00:09:18,640 --> 00:09:21,279
construct the suit manifest inside the t

200
00:09:21,279 --> 00:09:22,800
protocol

201
00:09:22,800 --> 00:09:23,839
then

202
00:09:23,839 --> 00:09:25,519
and then it will in

203
00:09:25,519 --> 00:09:27,600
then will be much easier

204
00:09:27,600 --> 00:09:29,839
to have the concrete

205
00:09:29,839 --> 00:09:35,120
cdl example with the diagnostic

206
00:09:35,120 --> 00:09:37,600
notation example and the binary

207
00:09:37,600 --> 00:09:41,839
representation with the commented

208
00:09:42,560 --> 00:09:44,640
description with

209
00:09:44,640 --> 00:09:45,519
with

210
00:09:45,519 --> 00:09:48,800
and just the binary

211
00:09:48,800 --> 00:09:51,600
and also we started from the last week

212
00:09:51,600 --> 00:09:54,399
is started to how um

213
00:09:54,399 --> 00:09:58,320
think about how to support the cose

214
00:10:00,480 --> 00:10:01,440
okay

215
00:10:01,440 --> 00:10:02,560
so

216
00:10:02,560 --> 00:10:05,120
for the stamp site we will have a tamp

217
00:10:05,120 --> 00:10:06,079
proto

218
00:10:06,079 --> 00:10:08,399
um this uh as a

219
00:10:08,399 --> 00:10:10,640
implementation as a tam

220
00:10:10,640 --> 00:10:14,000
it's it's open source on the github um i

221
00:10:14,000 --> 00:10:15,600
i forgot to

222
00:10:15,600 --> 00:10:17,360
write it down the

223
00:10:17,360 --> 00:10:18,880
github link here

224
00:10:18,880 --> 00:10:21,279
but it's if you

225
00:10:21,279 --> 00:10:24,160
search on the web browser temp prototam

226
00:10:24,160 --> 00:10:26,480
then it will be you could go to it and

227
00:10:26,480 --> 00:10:29,680
we what we really did was uh

228
00:10:29,680 --> 00:10:30,560
um

229
00:10:30,560 --> 00:10:33,760
try that we we added about three

230
00:10:33,760 --> 00:10:35,680
different way of the having suit

231
00:10:35,680 --> 00:10:38,640
manifest inside the tip um message but

232
00:10:38,640 --> 00:10:39,760
we just

233
00:10:39,760 --> 00:10:43,680
first we um focus on having a trusted

234
00:10:43,680 --> 00:10:46,079
component binary which used to be called

235
00:10:46,079 --> 00:10:48,000
trusted application in

236
00:10:48,000 --> 00:10:51,600
binary inside the suit manifest and that

237
00:10:51,600 --> 00:10:53,760
will be inside the

238
00:10:53,760 --> 00:10:56,959
deep message a deep update message

239
00:10:56,959 --> 00:10:59,279
and also

240
00:10:59,279 --> 00:11:02,240
we from takayama-san we started to have

241
00:11:02,240 --> 00:11:06,560
uh libsy suit it's meant to be a

242
00:11:06,560 --> 00:11:08,720
library to support

243
00:11:08,720 --> 00:11:11,440
to make it easier who wants to implement

244
00:11:11,440 --> 00:11:12,240
it

245
00:11:12,240 --> 00:11:15,040
cheap device or tam

246
00:11:15,040 --> 00:11:16,480
and it's

247
00:11:16,480 --> 00:11:17,600
it's uh

248
00:11:17,600 --> 00:11:18,480
and

249
00:11:18,480 --> 00:11:21,760
so that's was uh adding this um having

250
00:11:21,760 --> 00:11:25,839
suit manifest inside a leap c suit

251
00:11:25,839 --> 00:11:27,920
and also deep device we have an open

252
00:11:27,920 --> 00:11:31,440
source yet but um we we trying to

253
00:11:31,440 --> 00:11:33,279
working hard to finish the

254
00:11:33,279 --> 00:11:35,680
implementation taking very long time by

255
00:11:35,680 --> 00:11:39,760
the way i'm after this ietf119112

256
00:11:39,760 --> 00:11:43,120
i would like to focus on finishing tip

257
00:11:43,120 --> 00:11:46,560
device implementation

258
00:11:46,720 --> 00:11:50,000
publicly available

259
00:11:51,040 --> 00:11:52,800
as soon as possible

260
00:11:52,800 --> 00:11:54,720
i don't know how long it will take but

261
00:11:54,720 --> 00:11:58,240
um yes i will put other work item aside

262
00:11:58,240 --> 00:12:00,959
and i'm going to focus on making team

263
00:12:00,959 --> 00:12:02,320
device

264
00:12:02,320 --> 00:12:05,200
implementation on github

265
00:12:05,200 --> 00:12:07,920
and what we did was we take message

266
00:12:07,920 --> 00:12:10,480
format let's keep updating so finished

267
00:12:10,480 --> 00:12:13,200
supporting draft zero six of the tip

268
00:12:13,200 --> 00:12:16,639
message portion and then adding this

269
00:12:16,639 --> 00:12:19,200
exam um example uh

270
00:12:19,200 --> 00:12:21,200
suit manifest format

271
00:12:21,200 --> 00:12:22,160
and

272
00:12:22,160 --> 00:12:24,959
which is and also uh

273
00:12:24,959 --> 00:12:26,959
it says integrated payload here but um

274
00:12:26,959 --> 00:12:28,880
it means um

275
00:12:28,880 --> 00:12:31,279
in the same same with the on the top

276
00:12:31,279 --> 00:12:34,560
line is adding tc binary inside the soup

277
00:12:34,560 --> 00:12:36,959
manifest super manifest could have only

278
00:12:36,959 --> 00:12:39,040
manifest and could have binary and

279
00:12:39,040 --> 00:12:41,760
separately but um right now we wanted to

280
00:12:41,760 --> 00:12:44,800
have try having a binary inside the suit

281
00:12:44,800 --> 00:12:47,680
manifest and make it workable between

282
00:12:47,680 --> 00:12:50,880
the deep device and time

283
00:12:50,959 --> 00:12:53,760
so um

284
00:12:54,160 --> 00:12:56,480
okay and these are the feedback on the

285
00:12:56,480 --> 00:12:59,519
draft is uh one two three

286
00:12:59,519 --> 00:13:00,800
four five

287
00:13:00,800 --> 00:13:03,760
uh um

288
00:13:05,120 --> 00:13:08,720
issues and put full request

289
00:13:09,120 --> 00:13:12,560
and first one is um from dave

290
00:13:12,560 --> 00:13:14,880
and i think this is uh many of them were

291
00:13:14,880 --> 00:13:16,959
going to be uh going through with the

292
00:13:16,959 --> 00:13:18,560
dave's talk

293
00:13:18,560 --> 00:13:22,000
but um briefly going through is uh

294
00:13:22,000 --> 00:13:23,680
yes

295
00:13:23,680 --> 00:13:25,680
and the tip

296
00:13:25,680 --> 00:13:27,600
tip message yeah where you we're going

297
00:13:27,600 --> 00:13:31,440
to use each token or just the token and

298
00:13:31,440 --> 00:13:34,720
and it's we we need to decide when to

299
00:13:34,720 --> 00:13:38,000
include the token or or not

300
00:13:38,000 --> 00:13:39,120
so uh

301
00:13:39,120 --> 00:13:40,079
that's

302
00:13:40,079 --> 00:13:41,360
dave's

303
00:13:41,360 --> 00:13:42,800
issues

304
00:13:42,800 --> 00:13:44,240
on the github

305
00:13:44,240 --> 00:13:46,079
and

306
00:13:46,079 --> 00:13:47,279
and also

307
00:13:47,279 --> 00:13:48,959
another topic

308
00:13:48,959 --> 00:13:50,880
was i was

309
00:13:50,880 --> 00:13:53,040
participating in a suit working group on

310
00:13:53,040 --> 00:13:56,639
this monday was yes about

311
00:13:56,639 --> 00:14:01,040
cypher suit and honestly if

312
00:14:01,360 --> 00:14:04,079
since we have suit manifest inside the

313
00:14:04,079 --> 00:14:05,920
deep message

314
00:14:05,920 --> 00:14:08,240
we will just like to use

315
00:14:08,240 --> 00:14:11,600
whatever it happens on suit man um suit

316
00:14:11,600 --> 00:14:13,680
a manifest draft

317
00:14:13,680 --> 00:14:16,160
to you for using um cose

318
00:14:16,160 --> 00:14:18,000
exactly the same in the deep then it

319
00:14:18,000 --> 00:14:19,600
will make it much easier for the

320
00:14:19,600 --> 00:14:22,320
implementation we don't have to add any

321
00:14:22,320 --> 00:14:23,920
more

322
00:14:23,920 --> 00:14:26,160
feature in the library or anything else

323
00:14:26,160 --> 00:14:28,959
we're just reusing it and that's but um

324
00:14:28,959 --> 00:14:31,040
to do that we just need to align the

325
00:14:31,040 --> 00:14:33,760
description between the suit and tip and

326
00:14:33,760 --> 00:14:36,000
that's the second one

327
00:14:36,000 --> 00:14:39,279
and and the third one is uh yes

328
00:14:39,279 --> 00:14:41,839
was really uh working on is he went

329
00:14:41,839 --> 00:14:45,199
through reading the suit manifest

330
00:14:45,199 --> 00:14:47,680
um draft and

331
00:14:47,680 --> 00:14:49,440
and proposing

332
00:14:49,440 --> 00:14:50,720
you

333
00:14:50,720 --> 00:14:54,000
there's a in the uh um description then

334
00:14:54,000 --> 00:14:55,839
the suit manifest

335
00:14:55,839 --> 00:14:59,360
for the day for for the usage of the

336
00:14:59,360 --> 00:15:00,720
deleting the

337
00:15:00,720 --> 00:15:04,240
binary or firmware or trusted component

338
00:15:04,240 --> 00:15:05,920
it was

339
00:15:05,920 --> 00:15:09,360
probably using unlink is more preferable

340
00:15:09,360 --> 00:15:13,360
was it was um r or takayamas in our

341
00:15:13,360 --> 00:15:16,880
understanding so we made a um

342
00:15:16,880 --> 00:15:17,760
um

343
00:15:17,760 --> 00:15:20,560
issue listing pull request

344
00:15:20,560 --> 00:15:23,680
and uh and the the fourth is the yes

345
00:15:23,680 --> 00:15:25,440
this is something with

346
00:15:25,440 --> 00:15:27,839
we've been doing from these three months

347
00:15:27,839 --> 00:15:29,360
was

348
00:15:29,360 --> 00:15:32,800
keep updating finalizing the three

349
00:15:32,800 --> 00:15:36,000
way of the example in the deep message

350
00:15:36,000 --> 00:15:38,079
of the suit manifest

351
00:15:38,079 --> 00:15:39,680
and the last is

352
00:15:39,680 --> 00:15:42,880
yes yeah so this is was my quick

353
00:15:42,880 --> 00:15:44,000
one-line

354
00:15:44,000 --> 00:15:47,279
pull request is um since it was the

355
00:15:47,279 --> 00:15:49,680
suit example and the suit manifest was

356
00:15:49,680 --> 00:15:51,800
using um

357
00:15:51,800 --> 00:15:55,920
es-2556 for the corsair yes cwt then

358
00:15:55,920 --> 00:15:57,839
yeah i thought

359
00:15:57,839 --> 00:16:00,880
adding in the cdl uh

360
00:16:00,880 --> 00:16:04,160
effort description might might be better

361
00:16:04,160 --> 00:16:08,079
so it just made a one-line patch

362
00:16:08,079 --> 00:16:10,479
okay

363
00:16:13,199 --> 00:16:17,360
yes so then um

364
00:16:17,360 --> 00:16:21,160
instead of going to

365
00:16:23,120 --> 00:16:25,839
suit manifest example um i would like to

366
00:16:25,839 --> 00:16:28,560
explain how the tip

367
00:16:28,560 --> 00:16:33,839
tip protocol uh draft is describing um

368
00:16:33,839 --> 00:16:37,199
seaboard description

369
00:16:37,199 --> 00:16:38,720
yes

370
00:16:38,720 --> 00:16:41,680
honestly i did suffer a lot when trying

371
00:16:41,680 --> 00:16:46,079
to implement the seaboard so since

372
00:16:46,560 --> 00:16:49,120
i suffered a lot i thought i would put

373
00:16:49,120 --> 00:16:51,360
my knowledge into the deep protocol

374
00:16:51,360 --> 00:16:54,000
draft so everybody else could don't have

375
00:16:54,000 --> 00:16:55,759
to go through uh

376
00:16:55,759 --> 00:16:59,040
entire how to

377
00:16:59,279 --> 00:17:02,560
implement and how to debug it when the

378
00:17:02,560 --> 00:17:03,440
um

379
00:17:03,440 --> 00:17:07,359
when when the negotiation not or uh

380
00:17:07,359 --> 00:17:09,599
point message going back and forth

381
00:17:09,599 --> 00:17:11,919
between the time and deep device

382
00:17:11,919 --> 00:17:14,720
probably whoever going to implement the

383
00:17:14,720 --> 00:17:15,760
seaboard

384
00:17:15,760 --> 00:17:17,919
problem yes i want just wanted to make

385
00:17:17,919 --> 00:17:19,599
it easier for them

386
00:17:19,599 --> 00:17:20,799
so um

387
00:17:20,799 --> 00:17:23,199
this is the left side is c board

388
00:17:23,199 --> 00:17:26,160
diagonal stick not notation

389
00:17:26,160 --> 00:17:28,640
which is uh

390
00:17:28,640 --> 00:17:33,120
derived from reading the cdl

391
00:17:33,120 --> 00:17:35,200
and

392
00:17:35,200 --> 00:17:37,360
in the right side it's in the in the

393
00:17:37,360 --> 00:17:40,799
draft have a binary example but with the

394
00:17:40,799 --> 00:17:43,760
comment in on it so if anything doesn't

395
00:17:43,760 --> 00:17:44,880
work

396
00:17:44,880 --> 00:17:47,679
in with the talking with the other tier

397
00:17:47,679 --> 00:17:48,799
of the

398
00:17:48,799 --> 00:17:50,720
um on the internet

399
00:17:50,720 --> 00:17:54,160
for example deep device and um tam

400
00:17:54,160 --> 00:17:55,280
then

401
00:17:55,280 --> 00:17:58,480
you just go you could see the example

402
00:17:58,480 --> 00:18:00,400
and which line

403
00:18:00,400 --> 00:18:03,600
might be different in the binary if it's

404
00:18:03,600 --> 00:18:06,320
a json it will be much easier to develop

405
00:18:06,320 --> 00:18:08,400
because it's text format and if you do

406
00:18:08,400 --> 00:18:11,200
the ether real i mean like it's not

407
00:18:11,200 --> 00:18:13,360
ethereal right now it's a wireshark

408
00:18:13,360 --> 00:18:15,360
and if you see the

409
00:18:15,360 --> 00:18:16,559
packet dump

410
00:18:16,559 --> 00:18:18,080
then they're pretty much easy for them

411
00:18:18,080 --> 00:18:21,039
if you do the top packet dump on the

412
00:18:21,039 --> 00:18:24,000
seaboard keyboard binary it's all hex

413
00:18:24,000 --> 00:18:25,600
decimal so

414
00:18:25,600 --> 00:18:28,640
if you scan the hex decimal and keep

415
00:18:28,640 --> 00:18:30,640
going through the right side and left

416
00:18:30,640 --> 00:18:33,679
side for about five or ten times you

417
00:18:33,679 --> 00:18:36,799
might started to see on the right side

418
00:18:36,799 --> 00:18:38,240
on this on the

419
00:18:38,240 --> 00:18:40,880
packet dump but started to imagine have

420
00:18:40,880 --> 00:18:42,799
an imagination of the left side

421
00:18:42,799 --> 00:18:43,679
uh

422
00:18:43,679 --> 00:18:46,080
i hope so but um

423
00:18:46,080 --> 00:18:47,039
yeah

424
00:18:47,039 --> 00:18:48,960
yeah i'm trying to make it slightly

425
00:18:48,960 --> 00:18:51,440
easier

426
00:18:54,080 --> 00:18:55,600
so um

427
00:18:55,600 --> 00:18:59,840
and this is suit manifest is also um

428
00:18:59,840 --> 00:19:01,120
similar

429
00:19:01,120 --> 00:19:02,480
i mean

430
00:19:02,480 --> 00:19:06,799
oh yes but we also have a c um seed

431
00:19:06,799 --> 00:19:09,919
um what was the name yes diagnostic

432
00:19:09,919 --> 00:19:12,559
notation and the binary

433
00:19:12,559 --> 00:19:15,679
representation with the comment on it

434
00:19:15,679 --> 00:19:17,360
so if anything you

435
00:19:17,360 --> 00:19:19,520
have something

436
00:19:19,520 --> 00:19:21,440
for example

437
00:19:21,440 --> 00:19:23,039
if the coset

438
00:19:23,039 --> 00:19:25,360
orgasm doesn't match then if it's if you

439
00:19:25,360 --> 00:19:28,320
could see whether it has

440
00:19:28,320 --> 00:19:31,080
minus 16 it's going to be

441
00:19:31,080 --> 00:19:34,400
negam215 is going to be 2f and

442
00:19:34,400 --> 00:19:37,720
hexadecimal and from the beginning from

443
00:19:37,720 --> 00:19:41,200
d86b a3 do you go through and if it's

444
00:19:41,200 --> 00:19:43,280
you need you if you you just

445
00:19:43,280 --> 00:19:45,280
you could check if it's correctly it's

446
00:19:45,280 --> 00:19:48,480
tf and parsing correctly

447
00:19:48,480 --> 00:19:51,799
in the implementation

448
00:19:53,200 --> 00:19:54,720
yep

449
00:19:54,720 --> 00:19:56,960
then i think i'm going to go through the

450
00:19:56,960 --> 00:20:00,000
suit manifest examples

451
00:20:00,000 --> 00:20:04,840
um any question for so far

452
00:20:12,640 --> 00:20:14,880
okay

453
00:20:18,840 --> 00:20:22,960
okay so first example is uh probably the

454
00:20:22,960 --> 00:20:25,840
easiest example

455
00:20:25,840 --> 00:20:27,520
how does it look is

456
00:20:27,520 --> 00:20:31,280
if when the tip update message

457
00:20:31,280 --> 00:20:33,039
is uh

458
00:20:33,039 --> 00:20:36,000
sent from time to tip agent in the tip

459
00:20:36,000 --> 00:20:38,320
device

460
00:20:38,320 --> 00:20:40,240
it has the

461
00:20:40,240 --> 00:20:41,280
um

462
00:20:41,280 --> 00:20:42,640
the suit

463
00:20:42,640 --> 00:20:44,640
manifest

464
00:20:44,640 --> 00:20:46,480
has the uri

465
00:20:46,480 --> 00:20:48,400
pointing to the

466
00:20:48,400 --> 00:20:49,760
where the

467
00:20:49,760 --> 00:20:53,440
trusted component binary is uh hosted

468
00:20:53,440 --> 00:20:56,960
so and then the t um

469
00:20:56,960 --> 00:21:00,840
and then the tip device we're going to

470
00:21:00,840 --> 00:21:04,000
um in the implementation

471
00:21:04,000 --> 00:21:05,440
they're going to

472
00:21:05,440 --> 00:21:08,000
fetch or download the

473
00:21:08,000 --> 00:21:10,080
trusted component binary

474
00:21:10,080 --> 00:21:13,600
right now we still using dot ta

475
00:21:13,600 --> 00:21:15,360
for the convenience for the

476
00:21:15,360 --> 00:21:16,559
understanding

477
00:21:16,559 --> 00:21:17,440
and

478
00:21:17,440 --> 00:21:19,120
and inside the

479
00:21:19,120 --> 00:21:22,400
tc iphone you id dot t is it doesn't

480
00:21:22,400 --> 00:21:24,080
have to be this um

481
00:21:24,080 --> 00:21:26,240
file name you could choose any kind of

482
00:21:26,240 --> 00:21:28,840
the file name

483
00:21:28,840 --> 00:21:30,640
and since

484
00:21:30,640 --> 00:21:33,520
since it's uh in the um

485
00:21:33,520 --> 00:21:35,919
arm implementation for the opti was

486
00:21:35,919 --> 00:21:40,400
using uid and the file name of the ta um

487
00:21:40,400 --> 00:21:42,880
i i added the easier to

488
00:21:42,880 --> 00:21:45,280
parse it in the mine you could use the

489
00:21:45,280 --> 00:21:47,039
uid.ta

490
00:21:47,039 --> 00:21:49,679
and for the example on the um

491
00:21:49,679 --> 00:21:52,799
into sgx and it's any you could use any

492
00:21:52,799 --> 00:21:55,320
kind of the file name so it's dc hyphen

493
00:21:55,320 --> 00:21:58,000
uid.ta which it's going to be it doesn't

494
00:21:58,000 --> 00:22:00,400
have to be using your id or any file

495
00:22:00,400 --> 00:22:03,600
name um pointing to the binary and then

496
00:22:03,600 --> 00:22:07,919
the binary it has any of the um

497
00:22:07,919 --> 00:22:08,720
yeah

498
00:22:08,720 --> 00:22:13,840
um hexismo or any binary inside

499
00:22:14,480 --> 00:22:16,960
and this example

500
00:22:16,960 --> 00:22:19,120
good thing is the

501
00:22:19,120 --> 00:22:21,600
um

502
00:22:22,000 --> 00:22:25,360
yeah the first line is

503
00:22:26,720 --> 00:22:31,200
the um developer who is who create

504
00:22:31,200 --> 00:22:35,039
made the binary of the trusted component

505
00:22:35,039 --> 00:22:37,440
um

506
00:22:37,440 --> 00:22:39,039
is uh could

507
00:22:39,039 --> 00:22:42,000
going to be download from their website

508
00:22:42,000 --> 00:22:42,799
or

509
00:22:42,799 --> 00:22:45,520
https link so you could you could you

510
00:22:45,520 --> 00:22:47,200
will notice the tip device have

511
00:22:47,200 --> 00:22:49,600
downloaded the binaries

512
00:22:49,600 --> 00:22:52,400
and and and the

513
00:22:52,400 --> 00:22:53,360
um

514
00:22:53,360 --> 00:22:56,400
and the time does do not have to

515
00:22:56,400 --> 00:22:58,720
um

516
00:22:58,799 --> 00:23:02,000
host their uh the dc binary on the temp

517
00:23:02,000 --> 00:23:03,600
side so

518
00:23:03,600 --> 00:23:06,720
you just you just provide a

519
00:23:06,720 --> 00:23:09,120
certain manifest to the deep device

520
00:23:09,120 --> 00:23:11,440
and then the team um the tip device will

521
00:23:11,440 --> 00:23:13,440
get the bioneer binary from a trusted

522
00:23:13,440 --> 00:23:15,360
component developer so it doesn't have

523
00:23:15,360 --> 00:23:17,039
to worry about it

524
00:23:17,039 --> 00:23:18,640
um

525
00:23:18,640 --> 00:23:21,280
and the downside is

526
00:23:21,280 --> 00:23:24,159
um yeah trusted component developer have

527
00:23:24,159 --> 00:23:25,440
to have a

528
00:23:25,440 --> 00:23:27,679
web server or whatever

529
00:23:27,679 --> 00:23:28,960
um

530
00:23:28,960 --> 00:23:31,679
hosting the trusted component binary

531
00:23:31,679 --> 00:23:32,640
and

532
00:23:32,640 --> 00:23:33,919
deep device

533
00:23:33,919 --> 00:23:34,960
need to

534
00:23:34,960 --> 00:23:37,360
download the binary separately after

535
00:23:37,360 --> 00:23:40,000
receiving the suit manifest but um it's

536
00:23:40,000 --> 00:23:40,960
not a

537
00:23:40,960 --> 00:23:43,200
big deal for the second night and first

538
00:23:43,200 --> 00:23:44,720
line

539
00:23:44,720 --> 00:23:46,240
how much it depends on how much the

540
00:23:46,240 --> 00:23:49,279
trusted company developer

541
00:23:49,279 --> 00:23:51,840
have the uh

542
00:23:51,840 --> 00:23:53,360
have the

543
00:23:53,360 --> 00:23:56,000
domain name and have the

544
00:23:56,000 --> 00:24:00,159
bandwidth for the distribute the binary

545
00:24:00,159 --> 00:24:01,600
okay

546
00:24:01,600 --> 00:24:04,000
and the sec and the second example is

547
00:24:04,000 --> 00:24:05,919
also pretty much straight straight

548
00:24:05,919 --> 00:24:06,960
forward

549
00:24:06,960 --> 00:24:10,400
the only difference is uh

550
00:24:11,039 --> 00:24:12,400
inside the

551
00:24:12,400 --> 00:24:15,360
sea suit manifest

552
00:24:15,360 --> 00:24:18,559
instead i have a uri it has the

553
00:24:18,559 --> 00:24:20,879
um

554
00:24:20,960 --> 00:24:22,240
um

555
00:24:22,240 --> 00:24:25,200
what do you call it in this uh cdo um

556
00:24:25,200 --> 00:24:27,440
yeah

557
00:24:28,159 --> 00:24:30,159
instead of that you are pointing to

558
00:24:30,159 --> 00:24:31,120
other

559
00:24:31,120 --> 00:24:35,200
website you have the dc binary

560
00:24:35,200 --> 00:24:38,640
embedded inside the suit manifest

561
00:24:38,640 --> 00:24:42,159
as as this very simplified written here

562
00:24:42,159 --> 00:24:44,720
detail is

563
00:24:44,720 --> 00:24:47,279
is in the draft but

564
00:24:47,279 --> 00:24:49,200
and this is the simplified

565
00:24:49,200 --> 00:24:53,360
way of the x um description

566
00:24:53,520 --> 00:24:56,080
so good so this one is the more

567
00:24:56,080 --> 00:24:59,360
intuitive so if the tip

568
00:24:59,360 --> 00:25:03,600
deep device requests the dc binary

569
00:25:03,600 --> 00:25:06,080
uh to the time server then the time

570
00:25:06,080 --> 00:25:08,480
server tip update message will contain

571
00:25:08,480 --> 00:25:09,279
the

572
00:25:09,279 --> 00:25:13,600
suit manifest with the tc binary so

573
00:25:13,600 --> 00:25:16,960
you could receive it in one message

574
00:25:16,960 --> 00:25:18,559
and

575
00:25:18,559 --> 00:25:20,720
and yes it's just pretty much the same

576
00:25:20,720 --> 00:25:22,880
what uh opposite from the what i

577
00:25:22,880 --> 00:25:25,840
discussed with example one is the

578
00:25:25,840 --> 00:25:27,919
trusted component developer do not have

579
00:25:27,919 --> 00:25:29,919
to host the binary

580
00:25:29,919 --> 00:25:31,440
yes

581
00:25:31,440 --> 00:25:33,039
um

582
00:25:33,039 --> 00:25:36,080
it's and also it's pretty much the same

583
00:25:36,080 --> 00:25:39,120
what opposite of what i i i have just

584
00:25:39,120 --> 00:25:41,600
this um said

585
00:25:41,600 --> 00:25:45,200
um the trusted component binary

586
00:25:45,200 --> 00:25:47,440
is going to be this

587
00:25:47,440 --> 00:25:48,960
by time so

588
00:25:48,960 --> 00:25:51,120
if yeah you just don't

589
00:25:51,120 --> 00:25:53,600
have one can't you need to trust the

590
00:25:53,600 --> 00:25:56,320
temp and you can't you can't count the

591
00:25:56,320 --> 00:25:59,039
trusted binary download number or

592
00:25:59,039 --> 00:26:01,679
something if you wish but um oh yeah

593
00:26:01,679 --> 00:26:02,799
yeah but

594
00:26:02,799 --> 00:26:04,240
the good thing is you don't have to

595
00:26:04,240 --> 00:26:05,520
worry about it

596
00:26:05,520 --> 00:26:06,960
and uh

597
00:26:06,960 --> 00:26:09,520
and also it's the time message from the

598
00:26:09,520 --> 00:26:11,440
update message from the tam to deep

599
00:26:11,440 --> 00:26:14,000
device will contain the binary so it

600
00:26:14,000 --> 00:26:16,240
stands probably it's going to be tend to

601
00:26:16,240 --> 00:26:17,520
be uh

602
00:26:17,520 --> 00:26:18,559
um

603
00:26:18,559 --> 00:26:21,039
message will be the size will be larger

604
00:26:21,039 --> 00:26:22,799
than um

605
00:26:22,799 --> 00:26:25,520
just having a manifest but um i really

606
00:26:25,520 --> 00:26:27,279
don't think it's a big

607
00:26:27,279 --> 00:26:28,720
big uh

608
00:26:28,720 --> 00:26:31,520
i mean big negative point i think it's

609
00:26:31,520 --> 00:26:33,120
it's uh

610
00:26:33,120 --> 00:26:35,360
that that's that's the

611
00:26:35,360 --> 00:26:36,320
even

612
00:26:36,320 --> 00:26:38,720
even downloading a trusted company

613
00:26:38,720 --> 00:26:41,120
binary separate from team device from

614
00:26:41,120 --> 00:26:42,080
trusted

615
00:26:42,080 --> 00:26:45,279
component uh developer hosted web

616
00:26:45,279 --> 00:26:48,000
website it's it's going to use the same

617
00:26:48,000 --> 00:26:49,840
bandwidth

618
00:26:49,840 --> 00:26:53,240
okay so

619
00:26:53,679 --> 00:26:58,000
and example three is the um

620
00:26:58,000 --> 00:26:59,200
adding the

621
00:26:59,200 --> 00:27:01,440
um

622
00:27:01,679 --> 00:27:04,559
um example of the

623
00:27:04,559 --> 00:27:07,039
um what brandon have

624
00:27:07,039 --> 00:27:08,000
uh

625
00:27:08,000 --> 00:27:09,120
um

626
00:27:09,120 --> 00:27:13,360
talked at i dif one last iedif

627
00:27:13,360 --> 00:27:16,720
when when having the personal data

628
00:27:16,720 --> 00:27:20,159
for the particul for the dc binary

629
00:27:20,159 --> 00:27:22,960
already inside the dc uh

630
00:27:22,960 --> 00:27:24,480
deep device

631
00:27:24,480 --> 00:27:25,760
then you could

632
00:27:25,760 --> 00:27:27,120
um

633
00:27:27,120 --> 00:27:30,080
how you could um this rate the

634
00:27:30,080 --> 00:27:32,320
in this example is the

635
00:27:32,320 --> 00:27:35,799
personal data is the example is having a

636
00:27:35,799 --> 00:27:38,640
config.json file

637
00:27:38,640 --> 00:27:43,039
um the providing to the um

638
00:27:44,000 --> 00:27:46,480
depended tc

639
00:27:46,480 --> 00:27:49,200
binary is in this example is the one

640
00:27:49,200 --> 00:27:51,799
already have in the deep devices dc

641
00:27:51,799 --> 00:27:55,039
uid.suit so if the dc device already

642
00:27:55,039 --> 00:27:58,080
have the tcu id exactly the same

643
00:27:58,080 --> 00:27:59,919
tc already installed and these deep

644
00:27:59,919 --> 00:28:02,080
device then

645
00:28:02,080 --> 00:28:04,159
could receive the

646
00:28:04,159 --> 00:28:06,799
personal data with the suit manifest

647
00:28:06,799 --> 00:28:10,080
inside the deep update message

648
00:28:10,080 --> 00:28:12,880
and yes

649
00:28:12,880 --> 00:28:15,600
okay

650
00:28:15,679 --> 00:28:18,559
yeah i think i pretty much finished my

651
00:28:18,559 --> 00:28:21,440
slide so

652
00:28:22,040 --> 00:28:23,679
[Music]

653
00:28:23,679 --> 00:28:26,640
so yes summary yes

654
00:28:26,640 --> 00:28:28,799
we just started to move on

655
00:28:28,799 --> 00:28:31,679
um adding the suit support

656
00:28:31,679 --> 00:28:35,520
and we started to start the

657
00:28:36,960 --> 00:28:39,200
consider how to support the corsair and

658
00:28:39,200 --> 00:28:42,399
the suit i mean that i'm a tip

659
00:28:42,399 --> 00:28:44,399
and yes

660
00:28:44,399 --> 00:28:47,600
we we now we uh i don't know this suit

661
00:28:47,600 --> 00:28:49,760
manifest for three format it should be

662
00:28:49,760 --> 00:28:51,919
inside the deep draft or it should be in

663
00:28:51,919 --> 00:28:54,559
the suit manifest um

664
00:28:54,559 --> 00:28:56,880
um

665
00:28:56,880 --> 00:29:00,880
um ma'am second draft or external draft

666
00:29:00,880 --> 00:29:02,720
not sure probably it's going to be

667
00:29:02,720 --> 00:29:04,799
discussion with the brandon later with

668
00:29:04,799 --> 00:29:06,799
the dave's talk

669
00:29:06,799 --> 00:29:08,080
and

670
00:29:08,080 --> 00:29:10,480
and yes i just wanted to explain how the

671
00:29:10,480 --> 00:29:13,440
seaboard looks in the tip

672
00:29:13,440 --> 00:29:14,559
yes

673
00:29:14,559 --> 00:29:18,000
and after what i define one line yes the

674
00:29:18,000 --> 00:29:20,320
we would like to go on to

675
00:29:20,320 --> 00:29:22,880
support uh finish the implementation and

676
00:29:22,880 --> 00:29:25,279
having the running code and and so we

677
00:29:25,279 --> 00:29:28,080
could verify first um

678
00:29:28,080 --> 00:29:29,279
we could

679
00:29:29,279 --> 00:29:31,279
uh uh yeah

680
00:29:31,279 --> 00:29:33,360
have the feedback on making the t

681
00:29:33,360 --> 00:29:37,360
protocol draft more concrete

682
00:29:38,240 --> 00:29:39,679
yes

683
00:29:39,679 --> 00:29:41,360
that's it

684
00:29:41,360 --> 00:29:44,080
um questions

685
00:29:44,080 --> 00:29:46,320
yeah

686
00:29:50,880 --> 00:29:55,039
i don't see anybody on the queue

687
00:29:55,039 --> 00:29:58,080
i want to ask something about this horse

688
00:29:58,080 --> 00:29:58,880
well

689
00:29:58,880 --> 00:30:00,559
there were a couple of people on on the

690
00:30:00,559 --> 00:30:04,639
chattic you're feeling your pain

691
00:30:07,200 --> 00:30:09,440
so the the question and i think i saw it

692
00:30:09,440 --> 00:30:12,320
noted from dave um

693
00:30:12,320 --> 00:30:14,960
the the issues that you had listed on

694
00:30:14,960 --> 00:30:17,200
the github i forget the number was it

695
00:30:17,200 --> 00:30:18,799
161.

696
00:30:18,799 --> 00:30:21,679
um i want 62 uh it is

697
00:30:21,679 --> 00:30:23,840
that has now been resolved oh there's a

698
00:30:23,840 --> 00:30:26,000
set of them right yes

699
00:30:26,000 --> 00:30:28,640
161 is still um

700
00:30:28,640 --> 00:30:30,240
pending there

701
00:30:30,240 --> 00:30:31,760
so

702
00:30:31,760 --> 00:30:33,120
okay so

703
00:30:33,120 --> 00:30:35,440
if the if it's okay to have the three

704
00:30:35,440 --> 00:30:38,960
formats in the deep draft it will be

705
00:30:38,960 --> 00:30:42,000
yeah could anybody could uh remember um

706
00:30:42,000 --> 00:30:43,919
dave or

707
00:30:43,919 --> 00:30:45,760
ming could merge it

708
00:30:45,760 --> 00:30:49,200
or if if it's more appropriate to put

709
00:30:49,200 --> 00:30:51,679
put it in the suit manifest

710
00:30:51,679 --> 00:30:54,640
external draft which brandon have split

711
00:30:54,640 --> 00:30:55,600
it

712
00:30:55,600 --> 00:30:56,799
last week

713
00:30:56,799 --> 00:30:59,919
um yeah we could move that to the um to

714
00:30:59,919 --> 00:31:02,240
suit manifest

715
00:31:02,240 --> 00:31:05,600
draft i really don't mind which which is

716
00:31:05,600 --> 00:31:07,039
going

717
00:31:07,039 --> 00:31:10,320
which should go into it because it's

718
00:31:10,320 --> 00:31:11,519
anyway we're going to use the same

719
00:31:11,519 --> 00:31:13,679
format

720
00:31:13,679 --> 00:31:16,399
it does need to get covered um dave you

721
00:31:16,399 --> 00:31:18,960
have a comment

722
00:31:18,960 --> 00:31:20,399
yeah i just uh

723
00:31:20,399 --> 00:31:22,320
first what i put on the chat was it

724
00:31:22,320 --> 00:31:25,360
wasn't uh merged into draft 07 just

725
00:31:25,360 --> 00:31:27,039
because it was merge conflicts whereas

726
00:31:27,039 --> 00:31:28,799
the uh iv deadline was coming up and

727
00:31:28,799 --> 00:31:30,720
then those were resolved shortly after

728
00:31:30,720 --> 00:31:32,880
that

729
00:31:43,200 --> 00:31:45,120
one question that plays into that is how

730
00:31:45,120 --> 00:31:48,080
much of these examples um

731
00:31:48,080 --> 00:31:50,399
suit generic versus teep specific right

732
00:31:50,399 --> 00:31:52,480
so for example if there was a

733
00:31:52,480 --> 00:31:54,640
suit spec that had the thousand examples

734
00:31:54,640 --> 00:31:56,720
that just didn't have teep stuff in it

735
00:31:56,720 --> 00:31:58,399
is that close enough or does steep i

736
00:31:58,399 --> 00:32:00,720
think right now tp has one example in

737
00:32:00,720 --> 00:32:03,679
there for each message type where it's

738
00:32:03,679 --> 00:32:05,519
like the personalization date examples i

739
00:32:05,519 --> 00:32:06,880
think it's the closest to get curious

740
00:32:06,880 --> 00:32:08,559
third example right not the first to the

741
00:32:08,559 --> 00:32:10,640
second one if i remember right um that's

742
00:32:10,640 --> 00:32:12,799
from memory so uh akira please correct

743
00:32:12,799 --> 00:32:15,279
me if i'm wrong but uh if suit had more

744
00:32:15,279 --> 00:32:17,760
examples in some document then would t

745
00:32:17,760 --> 00:32:19,760
need to cover all the examples or just

746
00:32:19,760 --> 00:32:21,039
one of them which is what we're doing

747
00:32:21,039 --> 00:32:22,240
right now and so i think that's the

748
00:32:22,240 --> 00:32:23,840
interesting question that is asking that

749
00:32:23,840 --> 00:32:25,919
i would uh love to hear uh people's

750
00:32:25,919 --> 00:32:27,919
opinions on so

751
00:32:27,919 --> 00:32:30,240
yes

752
00:32:34,159 --> 00:32:36,000
is brandon here

753
00:32:36,000 --> 00:32:38,960
yeah i don't see brendan on

754
00:32:38,960 --> 00:32:43,440
i thought he was going to jump in so

755
00:32:43,440 --> 00:32:46,080
yeah i thought so as well

756
00:32:46,080 --> 00:32:48,639
well hank

757
00:32:50,559 --> 00:32:52,960
honest

758
00:32:54,320 --> 00:32:57,200
honestly these three example is a

759
00:32:57,200 --> 00:32:58,159
very

760
00:32:58,159 --> 00:32:59,760
uh

761
00:32:59,760 --> 00:33:01,200
very s

762
00:33:01,200 --> 00:33:04,240
specific with the t i'm suit manifest

763
00:33:04,240 --> 00:33:05,440
uses

764
00:33:05,440 --> 00:33:08,080
because of the deep um handling between

765
00:33:08,080 --> 00:33:11,360
tam and deep device but it it doesn't it

766
00:33:11,360 --> 00:33:12,880
doesn't mean they have to be in deep

767
00:33:12,880 --> 00:33:15,760
draft um it could be a manifest external

768
00:33:15,760 --> 00:33:18,000
graph

769
00:33:18,000 --> 00:33:20,000
well it could be its own separate draft

770
00:33:20,000 --> 00:33:23,039
as well and then we can argue whether

771
00:33:23,039 --> 00:33:26,880
that work gets done here in teep or

772
00:33:26,880 --> 00:33:29,039
it goes back to suit

773
00:33:29,039 --> 00:33:32,159
um hank you're in the queue

774
00:33:32,159 --> 00:33:34,720
yeah sorry i uh it was hard for me to

775
00:33:34,720 --> 00:33:37,039
press the buttons i don't know why uh

776
00:33:37,039 --> 00:33:40,080
this is hank um so yeah there is so in

777
00:33:40,080 --> 00:33:42,240
principle that is not a problem to pull

778
00:33:42,240 --> 00:33:43,840
that into the

779
00:33:43,840 --> 00:33:45,519
manifest draft or the

780
00:33:45,519 --> 00:33:47,840
uh if it's if it's just the

781
00:33:47,840 --> 00:33:50,559
reintegration um

782
00:33:50,559 --> 00:33:52,960
there's also merits to have that in a

783
00:33:52,960 --> 00:33:55,120
separate draft i think we are happy to

784
00:33:55,120 --> 00:33:57,679
help here uh if it is uncomfortable for

785
00:33:57,679 --> 00:34:00,640
the cheap id to to somehow build their

786
00:34:00,640 --> 00:34:02,559
around the content that's not a problem

787
00:34:02,559 --> 00:34:04,880
we can we can have that in suit and suit

788
00:34:04,880 --> 00:34:06,799
suit-ish um

789
00:34:06,799 --> 00:34:09,199
ids

790
00:34:10,239 --> 00:34:13,280
only only concern to having the uh

791
00:34:13,280 --> 00:34:15,119
example and the suit manifest in the

792
00:34:15,119 --> 00:34:18,320
external draft is it has the like uh in

793
00:34:18,320 --> 00:34:20,960
the example um for in the format it has

794
00:34:20,960 --> 00:34:22,320
the

795
00:34:22,320 --> 00:34:23,280
like

796
00:34:23,280 --> 00:34:26,560
tc hyphen uid.ta which need the

797
00:34:26,560 --> 00:34:28,719
knowledge of the how the ta

798
00:34:28,719 --> 00:34:30,079
works

799
00:34:30,079 --> 00:34:31,679
um but um

800
00:34:31,679 --> 00:34:33,839
yeah yeah that is use case specific

801
00:34:33,839 --> 00:34:36,560
expositional text so i i

802
00:34:36,560 --> 00:34:39,040
you could we can abstract that or we can

803
00:34:39,040 --> 00:34:42,320
we can uh we can ask uh guidance from

804
00:34:42,320 --> 00:34:45,599
some from the area director if it's fine

805
00:34:45,599 --> 00:34:46,839
to have a

806
00:34:46,839 --> 00:34:48,239
specific uh

807
00:34:48,239 --> 00:34:51,199
name here i i think that's that's just a

808
00:34:51,199 --> 00:34:54,239
it is a legwork problem

809
00:34:54,239 --> 00:34:57,040
or or having the three example in

810
00:34:57,040 --> 00:34:58,320
deepdraft

811
00:34:58,320 --> 00:35:01,040
but have the all other a bunch of the

812
00:35:01,040 --> 00:35:03,599
other example in suit manifest as as it

813
00:35:03,599 --> 00:35:05,599
is right now is also fine

814
00:35:05,599 --> 00:35:06,720
yeah that

815
00:35:06,720 --> 00:35:08,640
yeah but then you so so maybe other

816
00:35:08,640 --> 00:35:10,800
people have an opinion but but you i

817
00:35:10,800 --> 00:35:12,800
think i'd like uh to see the examples in

818
00:35:12,800 --> 00:35:17,280
one place to be honest nice yeah so yeah

819
00:35:17,280 --> 00:35:20,000
so hank you're you're kind of

820
00:35:20,000 --> 00:35:23,440
saying you prefer it in the suit

821
00:35:23,440 --> 00:35:26,240
the preference is not so if it's if it's

822
00:35:26,240 --> 00:35:29,760
too uh clunky to have them deep i think

823
00:35:29,760 --> 00:35:31,920
suit is happy to help i would call it

824
00:35:31,920 --> 00:35:34,560
like that so i i don't have a preference

825
00:35:34,560 --> 00:35:36,240
i i have a i have a

826
00:35:36,240 --> 00:35:38,640
the desire to help

827
00:35:38,640 --> 00:35:41,680
okay so i see brendan

828
00:35:41,680 --> 00:35:44,560
brendan is on

829
00:35:46,240 --> 00:35:49,119
and of course he prefers it in the teep

830
00:35:49,119 --> 00:35:50,960
document okay

831
00:35:50,960 --> 00:35:51,920
okay

832
00:35:51,920 --> 00:35:54,320
yeah that's right yes

833
00:35:54,320 --> 00:35:56,880
okay all right so we can continue that

834
00:35:56,880 --> 00:35:59,040
discussion i guess on the main list

835
00:35:59,040 --> 00:36:02,000
could i just briefly say why sorry for

836
00:36:02,000 --> 00:36:05,040
jumping the queue there um

837
00:36:05,040 --> 00:36:07,280
essentially the concern i've got is that

838
00:36:07,280 --> 00:36:09,520
with the refactoring that's been done in

839
00:36:09,520 --> 00:36:10,480
suit

840
00:36:10,480 --> 00:36:12,320
so that there are multiple documents

841
00:36:12,320 --> 00:36:15,920
with multiple different um

842
00:36:15,920 --> 00:36:18,160
sets of of

843
00:36:18,160 --> 00:36:20,720
pieces of the original suit manifest

844
00:36:20,720 --> 00:36:23,119
now it suits already going to have

845
00:36:23,119 --> 00:36:25,200
examples in more than one place

846
00:36:25,200 --> 00:36:26,960
and because of that

847
00:36:26,960 --> 00:36:29,920
i think it would be really sort of uh

848
00:36:29,920 --> 00:36:32,640
incongruous to have teap examples in the

849
00:36:32,640 --> 00:36:36,240
core of the suit document uh when some

850
00:36:36,240 --> 00:36:38,400
of suits examples aren't in the core

851
00:36:38,400 --> 00:36:41,400
document

852
00:36:42,320 --> 00:36:45,760
i see yeah and also if if

853
00:36:45,760 --> 00:36:48,079
if the manifest form

854
00:36:48,079 --> 00:36:50,320
format is in the deep draft

855
00:36:50,320 --> 00:36:51,760
we could say

856
00:36:51,760 --> 00:36:53,040
um we could

857
00:36:53,040 --> 00:36:56,079
how you how to up um

858
00:36:56,079 --> 00:36:59,680
um how to adopt the suit manifest in

859
00:36:59,680 --> 00:37:02,720
a future protocol other than deep yeah

860
00:37:02,720 --> 00:37:04,480
it might give it a little bit of

861
00:37:04,480 --> 00:37:08,200
guidance yes

862
00:37:14,800 --> 00:37:16,480
skipping of the audio exactly when

863
00:37:16,480 --> 00:37:19,680
brandon said the essential sentence when

864
00:37:19,680 --> 00:37:22,880
could you please repeat that

865
00:37:22,880 --> 00:37:25,920
sir sure the the the point is that suit

866
00:37:25,920 --> 00:37:27,520
has examples spread over multiple

867
00:37:27,520 --> 00:37:30,640
documents right now so i'm happy to put

868
00:37:30,640 --> 00:37:32,480
examples in suit where they're

869
00:37:32,480 --> 00:37:35,520
appropriate but the question is if there

870
00:37:35,520 --> 00:37:38,240
isn't an appropriate document in suit

871
00:37:38,240 --> 00:37:40,880
for a teep example to land in i think

872
00:37:40,880 --> 00:37:43,839
it's just a little bit incongruous to to

873
00:37:43,839 --> 00:37:45,760
shoehorn one into a document where it's

874
00:37:45,760 --> 00:37:47,760
not appropriate

875
00:37:47,760 --> 00:37:50,480
so it makes sense to me to put you know

876
00:37:50,480 --> 00:37:53,599
if teep is a profile of suit then it

877
00:37:53,599 --> 00:37:55,839
should have its own examples for suit

878
00:37:55,839 --> 00:37:57,280
does that make sense

879
00:37:57,280 --> 00:37:58,800
yeah that makes sense but that would

880
00:37:58,800 --> 00:38:01,440
remain so the profiling aspect of cheap

881
00:38:01,440 --> 00:38:04,240
would that be its own document then it

882
00:38:04,240 --> 00:38:06,480
isn't the protocol rt

883
00:38:06,480 --> 00:38:07,839
texture so

884
00:38:07,839 --> 00:38:09,200
um

885
00:38:09,200 --> 00:38:12,560
but would that go in cheap then

886
00:38:14,400 --> 00:38:17,520
so so bend up the big if

887
00:38:17,520 --> 00:38:20,560
yeah yeah so so that's why i assumed

888
00:38:20,560 --> 00:38:22,880
suit is the more likely lane but i'm i'm

889
00:38:22,880 --> 00:38:25,440
just guessing now so so maybe other keep

890
00:38:25,440 --> 00:38:27,280
offers have a better editors have a

891
00:38:27,280 --> 00:38:30,520
better opinion

892
00:38:34,400 --> 00:38:37,680
so ben is listing another issue um

893
00:38:37,680 --> 00:38:39,680
on the chat

894
00:38:39,680 --> 00:38:42,720
that if we have a lot of examples that

895
00:38:42,720 --> 00:38:44,640
there may be a desire to have them all

896
00:38:44,640 --> 00:38:47,520
in one place

897
00:38:47,520 --> 00:38:49,760
and so

898
00:38:49,760 --> 00:38:50,800
um

899
00:38:50,800 --> 00:38:52,079
okay i don't think we're going to

900
00:38:52,079 --> 00:38:54,240
resolve this here

901
00:38:54,240 --> 00:38:55,760
go ahead ben

902
00:38:55,760 --> 00:38:56,880
since you're

903
00:38:56,880 --> 00:38:59,440
yeah i think my my note in the jabber

904
00:38:59,440 --> 00:39:00,960
may have been based on a flawed

905
00:39:00,960 --> 00:39:04,160
assumption so i think dave is clarifying

906
00:39:04,160 --> 00:39:06,079
that you know

907
00:39:06,079 --> 00:39:07,599
the idea is

908
00:39:07,599 --> 00:39:10,079
to have a single document that is just

909
00:39:10,079 --> 00:39:12,160
examples and the question is whether to

910
00:39:12,160 --> 00:39:14,480
do that in the teep or the working

911
00:39:14,480 --> 00:39:15,920
groups

912
00:39:15,920 --> 00:39:17,040
and i think

913
00:39:17,040 --> 00:39:18,800
either those are fine and i agree with

914
00:39:18,800 --> 00:39:20,240
you that we're probably not going to get

915
00:39:20,240 --> 00:39:21,839
a clear resolution

916
00:39:21,839 --> 00:39:23,599
in the meeting right now

917
00:39:23,599 --> 00:39:24,960
yeah

918
00:39:24,960 --> 00:39:26,720
okay

919
00:39:26,720 --> 00:39:31,440
well so we'll continue forward then um

920
00:39:31,440 --> 00:39:33,200
thank you akira

921
00:39:33,200 --> 00:39:35,520
yes thank you how do i stop the steering

922
00:39:35,520 --> 00:39:38,079
slide oh there it is oh i i can just

923
00:39:38,079 --> 00:39:40,160
revoke it as well

924
00:39:40,160 --> 00:39:43,680
um okay so up next we have dave with the

925
00:39:43,680 --> 00:39:45,599
main protocol

926
00:39:45,599 --> 00:39:47,839
spec dave do you want me to share slides

927
00:39:47,839 --> 00:39:50,320
or you want to share them

928
00:39:50,320 --> 00:39:51,920
um you can share them but i've been in

929
00:39:51,920 --> 00:39:54,320
queue for uh a curious document uh

930
00:39:54,320 --> 00:39:56,400
brendan was actually not present in the

931
00:39:56,400 --> 00:39:57,839
meeting at the time that a curious

932
00:39:57,839 --> 00:39:59,839
question was first worded so i wanted to

933
00:39:59,839 --> 00:40:01,599
clarify one nuance of the question if

934
00:40:01,599 --> 00:40:03,119
you don't mind

935
00:40:03,119 --> 00:40:05,440
please go ahead i somehow didn't see it

936
00:40:05,440 --> 00:40:06,800
and we don't have to answer it right now

937
00:40:06,800 --> 00:40:08,319
but i want brendan to fully understand

938
00:40:08,319 --> 00:40:10,160
the question so if this is moved to the

939
00:40:10,160 --> 00:40:12,720
list then he can appropriately weigh in

940
00:40:12,720 --> 00:40:15,200
the examples that akira walked through

941
00:40:15,200 --> 00:40:16,720
the part of the question that we would

942
00:40:16,720 --> 00:40:17,920
love you to

943
00:40:17,920 --> 00:40:20,000
weigh in on uh not necessarily the mic

944
00:40:20,000 --> 00:40:22,240
here but at some point right is the

945
00:40:22,240 --> 00:40:24,400
examples of things like um what does it

946
00:40:24,400 --> 00:40:25,839
look like when you take the actual

947
00:40:25,839 --> 00:40:27,839
binary embedded into the suit manifest

948
00:40:27,839 --> 00:40:29,599
what does it look like when you have a

949
00:40:29,599 --> 00:40:32,400
uri that points to it hosted off uh off

950
00:40:32,400 --> 00:40:34,000
the thing are those things that are

951
00:40:34,000 --> 00:40:36,480
inherently teep specific concepts or are

952
00:40:36,480 --> 00:40:38,240
those things that are generic and so

953
00:40:38,240 --> 00:40:39,760
that's the examples he's going through

954
00:40:39,760 --> 00:40:41,760
is those different variations and so

955
00:40:41,760 --> 00:40:43,839
that's why the question is is it really

956
00:40:43,839 --> 00:40:45,359
something in a tea profile or are these

957
00:40:45,359 --> 00:40:47,359
just examples of generic suit things

958
00:40:47,359 --> 00:40:50,000
that should or maybe already are in

959
00:40:50,000 --> 00:40:51,760
in a document in the suit working group

960
00:40:51,760 --> 00:40:54,079
and so if you can do a scan through of

961
00:40:54,079 --> 00:40:56,640
akira's examples and say these things

962
00:40:56,640 --> 00:40:58,480
are actually just illustrating generic

963
00:40:58,480 --> 00:41:00,240
concepts versus no this one is actually

964
00:41:00,240 --> 00:41:01,680
a teach specific concept that would be

965
00:41:01,680 --> 00:41:04,720
very valuable brennan

966
00:41:05,760 --> 00:41:07,359
all so so let's move on to the uh

967
00:41:07,359 --> 00:41:10,319
protocol slides here i gotta

968
00:41:10,319 --> 00:41:12,400
leave the queue and leave my audio on

969
00:41:12,400 --> 00:41:13,760
okay hopefully you can all still see and

970
00:41:13,760 --> 00:41:16,000
hear me all right uh we're gonna be

971
00:41:16,000 --> 00:41:17,359
talking about draft seven of the cheap

972
00:41:17,359 --> 00:41:21,078
protocol next slide

973
00:41:21,119 --> 00:41:22,480
all right

974
00:41:22,480 --> 00:41:24,400
so since 111

975
00:41:24,400 --> 00:41:26,640
there was a long backlog of old issues

976
00:41:26,640 --> 00:41:28,240
that we've been slowly working through

977
00:41:28,240 --> 00:41:30,720
in deep working group meetings and we've

978
00:41:30,720 --> 00:41:33,040
now got to the point that almost all the

979
00:41:33,040 --> 00:41:35,040
old issues have now been resolved and

980
00:41:35,040 --> 00:41:37,760
we're only um talking about new issues

981
00:41:37,760 --> 00:41:39,599
and so i'm going to clear the backlog

982
00:41:39,599 --> 00:41:42,000
today in the discussions here and then

983
00:41:42,000 --> 00:41:43,520
go on to the new ones file but there

984
00:41:43,520 --> 00:41:45,440
really aren't any old ones previously we

985
00:41:45,440 --> 00:41:47,280
kind of picked the most important ones

986
00:41:47,280 --> 00:41:48,160
to talk about in the working group

987
00:41:48,160 --> 00:41:49,680
meeting and we've now kind of cleared

988
00:41:49,680 --> 00:41:51,280
that backlog and so

989
00:41:51,280 --> 00:41:53,440
and most of the spec right has now been

990
00:41:53,440 --> 00:41:54,560
implemented by at least one

991
00:41:54,560 --> 00:41:56,079
implementation right you heard akira

992
00:41:56,079 --> 00:41:57,440
mentioned the last pieces that were kind

993
00:41:57,440 --> 00:41:59,040
of still in progress right integration

994
00:41:59,040 --> 00:42:02,400
of other things but um we think we've uh

995
00:42:02,400 --> 00:42:05,359
fleshed out all of the areas of the spec

996
00:42:05,359 --> 00:42:07,359
that there might be an issue until we

997
00:42:07,359 --> 00:42:09,200
actually implement things but there's uh

998
00:42:09,200 --> 00:42:11,200
no section of the spec that somebody

999
00:42:11,200 --> 00:42:13,280
hasn't at least started on so go ahead

1000
00:42:13,280 --> 00:42:16,920
and go on the next slide

1001
00:42:21,839 --> 00:42:22,880
all right

1002
00:42:22,880 --> 00:42:24,240
so um

1003
00:42:24,240 --> 00:42:26,000
here are some of the ones that we

1004
00:42:26,000 --> 00:42:29,760
previously discussed at ietf 111 and i'm

1005
00:42:29,760 --> 00:42:32,160
not going to go through uh each of these

1006
00:42:32,160 --> 00:42:34,319
on slides this is just a list of things

1007
00:42:34,319 --> 00:42:37,680
that we covered last ietf meeting

1008
00:42:37,680 --> 00:42:39,760
and we had proposed resolutions and

1009
00:42:39,760 --> 00:42:42,160
those have now been incorporated into

1010
00:42:42,160 --> 00:42:44,640
draft seven and so we added the error

1011
00:42:44,640 --> 00:42:46,960
code uh for no freshness mechanism in

1012
00:42:46,960 --> 00:42:49,440
common um you can read through the rest

1013
00:42:49,440 --> 00:42:51,520
of those but all of those we believe

1014
00:42:51,520 --> 00:42:53,520
we've just put in the results from what

1015
00:42:53,520 --> 00:42:55,599
was in the minutes from last ietf

1016
00:42:55,599 --> 00:42:57,359
meeting okay

1017
00:42:57,359 --> 00:42:58,880
go on to the next slide

1018
00:42:58,880 --> 00:43:00,079
there are things that people want to

1019
00:43:00,079 --> 00:43:02,800
stop and ask about but the point is um

1020
00:43:02,800 --> 00:43:04,319
all of these are things we spent some

1021
00:43:04,319 --> 00:43:06,640
time discussing last time so these are

1022
00:43:06,640 --> 00:43:08,560
the ones that uh were continued this one

1023
00:43:08,560 --> 00:43:10,400
we spent quite a bit of time on

1024
00:43:10,400 --> 00:43:11,760
um and so this was like all the

1025
00:43:11,760 --> 00:43:13,920
discussion of ocsp and capability

1026
00:43:13,920 --> 00:43:15,440
discovery that was kind of the main

1027
00:43:15,440 --> 00:43:18,480
focus of last meeting and so we've done

1028
00:43:18,480 --> 00:43:20,160
the results there right we've removed

1029
00:43:20,160 --> 00:43:22,960
all references to ocsp right we said you

1030
00:43:22,960 --> 00:43:24,640
just have to have a

1031
00:43:24,640 --> 00:43:26,400
update mechanism to update your trust

1032
00:43:26,400 --> 00:43:27,599
anchors and that's how you do

1033
00:43:27,599 --> 00:43:30,000
replication uh and so all the different

1034
00:43:30,000 --> 00:43:31,760
points that were raised during the

1035
00:43:31,760 --> 00:43:33,520
meeting we believe we've incorporated

1036
00:43:33,520 --> 00:43:35,200
those back into the spec and so i'm not

1037
00:43:35,200 --> 00:43:36,400
going to show you the text because my

1038
00:43:36,400 --> 00:43:38,480
belief is it just matches what we said

1039
00:43:38,480 --> 00:43:40,560
and we would invite you to inspect the

1040
00:43:40,560 --> 00:43:42,800
text yourself just to verify that uh if

1041
00:43:42,800 --> 00:43:44,079
you had an appointment point you want to

1042
00:43:44,079 --> 00:43:45,760
be in there make sure it's in there but

1043
00:43:45,760 --> 00:43:47,200
we believe we've collected everything

1044
00:43:47,200 --> 00:43:49,359
from last ietf meeting so i want to go

1045
00:43:49,359 --> 00:43:51,520
on and discuss new issues and so unless

1046
00:43:51,520 --> 00:43:53,359
there's a question on those

1047
00:43:53,359 --> 00:43:55,359
um then i'd like to go on let me pause

1048
00:43:55,359 --> 00:43:56,720
for a second there's nobody in the queue

1049
00:43:56,720 --> 00:43:58,319
right okay let's

1050
00:43:58,319 --> 00:43:59,440
go ahead and go on unless there's

1051
00:43:59,440 --> 00:44:01,839
questions on any of those so

1052
00:44:01,839 --> 00:44:03,280
all right so i'm going to walk through

1053
00:44:03,280 --> 00:44:05,200
um other ones that were kind of in the

1054
00:44:05,200 --> 00:44:06,960
in the backlog and so

1055
00:44:06,960 --> 00:44:08,800
this is one that was one of the one of

1056
00:44:08,800 --> 00:44:10,800
the older ones it's finally been merged

1057
00:44:10,800 --> 00:44:13,040
and so this one um

1058
00:44:13,040 --> 00:44:14,720
uh i think was originally one of the

1059
00:44:14,720 --> 00:44:18,000
hackathon uh filed issues from uh maybe

1060
00:44:18,000 --> 00:44:19,839
two or three ietfs ago and the text

1061
00:44:19,839 --> 00:44:21,520
finally got merged so

1062
00:44:21,520 --> 00:44:24,079
after various edits and rebases and

1063
00:44:24,079 --> 00:44:26,240
merge conflict resolutions and so

1064
00:44:26,240 --> 00:44:29,040
uh remember tokens here is the name for

1065
00:44:29,040 --> 00:44:31,200
the nonce-like thing that appears in a

1066
00:44:31,200 --> 00:44:33,440
uh that can appear in a deep request

1067
00:44:33,440 --> 00:44:35,680
that's echoed back in the deep response

1068
00:44:35,680 --> 00:44:38,400
if the tam needs to uh match requests

1069
00:44:38,400 --> 00:44:40,560
and responses and so depending on the

1070
00:44:40,560 --> 00:44:42,400
freshness mechanism and use and so on

1071
00:44:42,400 --> 00:44:44,560
the token is optional depending on use

1072
00:44:44,560 --> 00:44:46,079
case it's up to tam

1073
00:44:46,079 --> 00:44:48,880
and so when you are using a

1074
00:44:48,880 --> 00:44:51,920
token sometimes known as announce right

1075
00:44:51,920 --> 00:44:53,760
it now has actual requirements around

1076
00:44:53,760 --> 00:44:55,599
there must be random different per

1077
00:44:55,599 --> 00:44:56,800
request

1078
00:44:56,800 --> 00:44:59,920
only one response is allowed per token

1079
00:44:59,920 --> 00:45:01,599
you can't use it for other purposes

1080
00:45:01,599 --> 00:45:03,040
other than this particular purpose in

1081
00:45:03,040 --> 00:45:06,160
teep and uh when you issue a nonsenate

1082
00:45:06,160 --> 00:45:08,960
request there should be some expiration

1083
00:45:08,960 --> 00:45:10,880
um such that you can't come back three

1084
00:45:10,880 --> 00:45:12,319
months later or something right just the

1085
00:45:12,319 --> 00:45:13,599
expectation is you don't keep state

1086
00:45:13,599 --> 00:45:15,119
around forever right so that's the kind

1087
00:45:15,119 --> 00:45:15,760
of

1088
00:45:15,760 --> 00:45:17,119
the guidance that's in there right now

1089
00:45:17,119 --> 00:45:20,319
so that one is now merged

1090
00:45:20,319 --> 00:45:22,640
next

1091
00:45:23,119 --> 00:45:25,280
so this one now i'm getting into the one

1092
00:45:25,280 --> 00:45:28,400
that i filed during this hackathon right

1093
00:45:28,400 --> 00:45:31,119
this one is ambiguity in the spec

1094
00:45:31,119 --> 00:45:33,040
that um in my opinion there's a

1095
00:45:33,040 --> 00:45:34,800
straightforward way to address this but

1096
00:45:34,800 --> 00:45:37,359
uh here's my presentation about it

1097
00:45:37,359 --> 00:45:39,440
the update message allows the token

1098
00:45:39,440 --> 00:45:41,119
field and says it's optional but it

1099
00:45:41,119 --> 00:45:42,480
actually doesn't have any text that says

1100
00:45:42,480 --> 00:45:45,119
when to include it right and so you can

1101
00:45:45,119 --> 00:45:46,319
treat that as a couple that you could

1102
00:45:46,319 --> 00:45:48,240
read that as a couple different ways

1103
00:45:48,240 --> 00:45:50,800
so uh the responses right a success

1104
00:45:50,800 --> 00:45:52,560
message or an error message you send

1105
00:45:52,560 --> 00:45:54,880
back when processing an update message

1106
00:45:54,880 --> 00:45:56,480
does say that you have to echo back the

1107
00:45:56,480 --> 00:45:58,560
token if it's present in the update

1108
00:45:58,560 --> 00:46:00,960
and uh the update can include a suit

1109
00:46:00,960 --> 00:46:02,560
report and if the suit report has

1110
00:46:02,560 --> 00:46:05,280
announced um then um

1111
00:46:05,280 --> 00:46:06,240
uh

1112
00:46:06,240 --> 00:46:08,720
i should say if the update has a uh

1113
00:46:08,720 --> 00:46:11,440
token then the suit report if present

1114
00:46:11,440 --> 00:46:13,040
must have the suit report nuds in it

1115
00:46:13,040 --> 00:46:15,520
okay and so the br and i see russia on

1116
00:46:15,520 --> 00:46:16,640
the cube but let me finish the slide

1117
00:46:16,640 --> 00:46:18,640
here and then i'll go to urs uh the

1118
00:46:18,640 --> 00:46:20,480
proposal that i have is just to clarify

1119
00:46:20,480 --> 00:46:23,280
the ambiguity is to explicitly say that

1120
00:46:23,280 --> 00:46:24,880
it's up to the tam implementation so in

1121
00:46:24,880 --> 00:46:27,200
other words you are allowed to have a

1122
00:46:27,200 --> 00:46:28,800
token in

1123
00:46:28,800 --> 00:46:31,920
a delete message or an update message or

1124
00:46:31,920 --> 00:46:34,319
a query request message it's not a

1125
00:46:34,319 --> 00:46:36,000
requirement that you use you know all

1126
00:46:36,000 --> 00:46:37,839
three or none of the three you can pick

1127
00:46:37,839 --> 00:46:39,200
and choose however you want in other

1128
00:46:39,200 --> 00:46:40,640
words we don't explicitly say that but

1129
00:46:40,640 --> 00:46:42,400
the post list you say the team gets to

1130
00:46:42,400 --> 00:46:46,160
decide when a token in is uh is

1131
00:46:46,160 --> 00:46:48,480
appropriate uh so i can do it sometimes

1132
00:46:48,480 --> 00:46:50,480
not other times or whatever that's my

1133
00:46:50,480 --> 00:46:52,800
proposal because that's one way to read

1134
00:46:52,800 --> 00:46:54,480
the wording right now and so i my

1135
00:46:54,480 --> 00:46:56,319
opinion is that's the least change from

1136
00:46:56,319 --> 00:46:58,079
what the text says right now and leaves

1137
00:46:58,079 --> 00:47:00,319
the most freedom for people to

1138
00:47:00,319 --> 00:47:01,680
innovate and optimize for their

1139
00:47:01,680 --> 00:47:04,160
implementation

1140
00:47:04,160 --> 00:47:06,560
and then separately besides explicitly

1141
00:47:06,560 --> 00:47:08,160
saying that

1142
00:47:08,160 --> 00:47:10,400
to say that uh the teap agent must

1143
00:47:10,400 --> 00:47:12,079
ensure that the suit report nonsense

1144
00:47:12,079 --> 00:47:14,000
present if the update um contains a

1145
00:47:14,000 --> 00:47:17,280
nonce and so um that's already implied

1146
00:47:17,280 --> 00:47:19,119
okay but it's not explicitly stated so

1147
00:47:19,119 --> 00:47:20,960
we could make that any more explicit so

1148
00:47:20,960 --> 00:47:22,160
ross do you have an opinion on this one

1149
00:47:22,160 --> 00:47:25,280
go ahead

1150
00:47:25,280 --> 00:47:28,400
no i have an opinion on the last one

1151
00:47:28,400 --> 00:47:29,440
um

1152
00:47:29,440 --> 00:47:30,400
i'm

1153
00:47:30,400 --> 00:47:32,559
sorry it took me longer to read your

1154
00:47:32,559 --> 00:47:36,079
list than you spent on the slide

1155
00:47:37,520 --> 00:47:39,920
nancy yeah

1156
00:47:39,920 --> 00:47:43,680
the uh my concern is the tokens must be

1157
00:47:43,680 --> 00:47:45,920
different per request

1158
00:47:45,920 --> 00:47:48,559
um i hope you don't mean that people

1159
00:47:48,559 --> 00:47:51,040
have to keep track of every token they

1160
00:47:51,040 --> 00:47:52,960
ever used

1161
00:47:52,960 --> 00:47:55,280
um what you mean

1162
00:47:55,280 --> 00:47:57,680
is that the probability of reuse is

1163
00:47:57,680 --> 00:48:00,000
small

1164
00:48:00,000 --> 00:48:02,000
it i think the intent and so i think the

1165
00:48:02,000 --> 00:48:03,520
actual wording was authored by one of

1166
00:48:03,520 --> 00:48:05,760
our japanese colleagues but i believe

1167
00:48:05,760 --> 00:48:08,240
that the intent is that uh it must be

1168
00:48:08,240 --> 00:48:10,720
different per outstanding request

1169
00:48:10,720 --> 00:48:11,920
and so

1170
00:48:11,920 --> 00:48:13,839
uh and there's different ways of doing

1171
00:48:13,839 --> 00:48:15,839
that and so i there are ways to not have

1172
00:48:15,839 --> 00:48:18,400
to retain state so you could have a

1173
00:48:18,400 --> 00:48:20,559
pseudo-random sequence right

1174
00:48:20,559 --> 00:48:22,559
that that's my point

1175
00:48:22,559 --> 00:48:24,960
is that the probability

1176
00:48:24,960 --> 00:48:28,720
of the same value being picked is

1177
00:48:28,720 --> 00:48:30,720
so small that you don't have to keep

1178
00:48:30,720 --> 00:48:32,839
track

1179
00:48:32,839 --> 00:48:34,800
uh you're correct

1180
00:48:34,800 --> 00:48:36,079
yeah so we're gonna look for some better

1181
00:48:36,079 --> 00:48:37,760
wording there

1182
00:48:37,760 --> 00:48:41,200
so i that that's my concern is okay is

1183
00:48:41,200 --> 00:48:42,800
some word smithing

1184
00:48:42,800 --> 00:48:43,599
okay

1185
00:48:43,599 --> 00:48:44,800
good point

1186
00:48:44,800 --> 00:48:46,079
make sure that appears in the notes and

1187
00:48:46,079 --> 00:48:49,280
we'll pick that up thank you

1188
00:48:49,280 --> 00:48:52,240
all right let's go on nancy

1189
00:48:52,240 --> 00:48:53,920
if unless there's anybody in the queue

1190
00:48:53,920 --> 00:48:55,839
getting up for this one uh unless

1191
00:48:55,839 --> 00:48:57,760
there's any uh uh

1192
00:48:57,760 --> 00:49:00,160
alternate proposals then i will go

1193
00:49:00,160 --> 00:49:02,559
forward with this proposal um unless

1194
00:49:02,559 --> 00:49:04,640
somebody has a better idea so

1195
00:49:04,640 --> 00:49:06,079
if i see nobody at the queue we'll

1196
00:49:06,079 --> 00:49:07,839
assume that that would be okay

1197
00:49:07,839 --> 00:49:10,160
all right so the next whole section of

1198
00:49:10,160 --> 00:49:13,119
the agenda and since the uh rats working

1199
00:49:13,119 --> 00:49:16,240
group is uh up right after teep today i

1200
00:49:16,240 --> 00:49:18,400
prioritize the eat stuff in the agenda

1201
00:49:18,400 --> 00:49:19,520
to make sure that we have time to go

1202
00:49:19,520 --> 00:49:20,960
through this as opposed to the suit

1203
00:49:20,960 --> 00:49:23,520
stuff um which does not have uh i think

1204
00:49:23,520 --> 00:49:25,280
right after this and so i wanted to have

1205
00:49:25,280 --> 00:49:26,880
any input necessary for us to go into

1206
00:49:26,880 --> 00:49:28,800
the rats working group after t

1207
00:49:28,800 --> 00:49:30,880
so if we were to run out of time i would

1208
00:49:30,880 --> 00:49:32,559
rather make sure we cover all the eat

1209
00:49:32,559 --> 00:49:34,800
stuff and um not cover all the other

1210
00:49:34,800 --> 00:49:36,319
stuff that i have or cover less the

1211
00:49:36,319 --> 00:49:37,760
other stuff that i have so i've got eat

1212
00:49:37,760 --> 00:49:39,200
and suit then

1213
00:49:39,200 --> 00:49:40,960
optimizations in that order so here's

1214
00:49:40,960 --> 00:49:42,400
the eat stuff so

1215
00:49:42,400 --> 00:49:45,280
um there's been a bunch of threads about

1216
00:49:45,280 --> 00:49:47,839
this one started off as the uh rats

1217
00:49:47,839 --> 00:49:49,599
meeting on monday and so let me just uh

1218
00:49:49,599 --> 00:49:52,240
summarize the discussion uh i've seen so

1219
00:49:52,240 --> 00:49:54,960
far if there was anything overnight i am

1220
00:49:54,960 --> 00:49:57,359
not up to speed but i i i'm up to speed

1221
00:49:57,359 --> 00:50:00,079
as of yesterday so yesterday afternoon

1222
00:50:00,079 --> 00:50:02,400
all right so uh there were two issues

1223
00:50:02,400 --> 00:50:04,079
related to referencing of each one of

1224
00:50:04,079 --> 00:50:05,839
those is already merged one of those is

1225
00:50:05,839 --> 00:50:07,520
open to track the remaining things and

1226
00:50:07,520 --> 00:50:08,400
so

1227
00:50:08,400 --> 00:50:10,960
um on the left is the sets of uh

1228
00:50:10,960 --> 00:50:12,559
requirements and i'll go through the the

1229
00:50:12,559 --> 00:50:14,559
ones for the second row there and more

1230
00:50:14,559 --> 00:50:16,079
uh details in the later slides but this

1231
00:50:16,079 --> 00:50:17,280
is the one that summarizes all the other

1232
00:50:17,280 --> 00:50:18,319
ones so

1233
00:50:18,319 --> 00:50:19,920
uh there's a set of requirements from

1234
00:50:19,920 --> 00:50:22,079
the architecture draft okay which is as

1235
00:50:22,079 --> 00:50:24,319
nancy said is already in the isg

1236
00:50:24,319 --> 00:50:25,520
so we've already got you know working

1237
00:50:25,520 --> 00:50:27,599
through consensus on the left column

1238
00:50:27,599 --> 00:50:29,119
although i have a question about that

1239
00:50:29,119 --> 00:50:30,400
later as we'll see

1240
00:50:30,400 --> 00:50:33,200
um the middle column is what draft 07

1241
00:50:33,200 --> 00:50:36,319
says right now okay and so there are uh

1242
00:50:36,319 --> 00:50:39,839
one two three of those uh requirements

1243
00:50:39,839 --> 00:50:42,240
that draft 07 points to the core each

1244
00:50:42,240 --> 00:50:44,240
spec as meeting those requirements and

1245
00:50:44,240 --> 00:50:46,000
there are five of those that points to

1246
00:50:46,000 --> 00:50:48,400
an individual submission hank's document

1247
00:50:48,400 --> 00:50:50,240
as meeting the other five in the hopes

1248
00:50:50,240 --> 00:50:52,079
that those would be merged into the spec

1249
00:50:52,079 --> 00:50:54,079
right that was the status as when draft

1250
00:50:54,079 --> 00:50:56,079
07 was posted okay

1251
00:50:56,079 --> 00:50:58,319
on the far right side um

1252
00:50:58,319 --> 00:51:00,480
is the current proposal for the next

1253
00:51:00,480 --> 00:51:03,520
draft other than the yellow one is uh

1254
00:51:03,520 --> 00:51:05,599
subject to uh discussion here and so

1255
00:51:05,599 --> 00:51:08,400
we'll talk about that another another uh

1256
00:51:08,400 --> 00:51:09,680
there's a couple of variations of how

1257
00:51:09,680 --> 00:51:11,520
that might be done or not done or

1258
00:51:11,520 --> 00:51:12,800
whatever so

1259
00:51:12,800 --> 00:51:14,319
the other ones that are currently point

1260
00:51:14,319 --> 00:51:16,160
to bar calls the proposal is to point

1261
00:51:16,160 --> 00:51:17,359
those to the

1262
00:51:17,359 --> 00:51:19,280
latest eat spec because there's been

1263
00:51:19,280 --> 00:51:21,839
some uh rewordings of some existing

1264
00:51:21,839 --> 00:51:23,839
things in some cases and there's been

1265
00:51:23,839 --> 00:51:26,079
some new claims added in other cases

1266
00:51:26,079 --> 00:51:28,319
okay so the belief now is that the

1267
00:51:28,319 --> 00:51:30,559
vendor of the device can be specified

1268
00:51:30,559 --> 00:51:33,839
using an oem id claim and remember that

1269
00:51:33,839 --> 00:51:35,280
each has different claim sets you can

1270
00:51:35,280 --> 00:51:37,359
have a claim set for each component

1271
00:51:37,359 --> 00:51:40,000
right your overall evidence can have

1272
00:51:40,000 --> 00:51:42,079
multiple claim sets one for each layer

1273
00:51:42,079 --> 00:51:43,839
or one for each component or whatever

1274
00:51:43,839 --> 00:51:46,079
and so oem id can appear multiple times

1275
00:51:46,079 --> 00:51:47,920
one for each component right so the

1276
00:51:47,920 --> 00:51:49,359
vendor of the device if you're talking

1277
00:51:49,359 --> 00:51:51,440
about a device claim set then oem id

1278
00:51:51,440 --> 00:51:54,000
would be the vendor of the device

1279
00:51:54,000 --> 00:51:56,720
similarly the device unique identifier

1280
00:51:56,720 --> 00:51:58,960
euit could be used as the unique

1281
00:51:58,960 --> 00:52:00,720
identifier in a claim set about

1282
00:52:00,720 --> 00:52:02,880
properties of the device okay as opposed

1283
00:52:02,880 --> 00:52:04,400
to the properties of you know the

1284
00:52:04,400 --> 00:52:08,319
firmware or the t the tpa or whatever

1285
00:52:08,319 --> 00:52:10,640
else so eoid we believe could be used

1286
00:52:10,640 --> 00:52:12,000
for that one

1287
00:52:12,000 --> 00:52:14,559
and then new uh in the latest each spec

1288
00:52:14,559 --> 00:52:15,839
they added

1289
00:52:15,839 --> 00:52:16,960
the

1290
00:52:16,960 --> 00:52:18,480
software identifier as you know

1291
00:52:18,480 --> 00:52:20,960
previously it talked about coswoods but

1292
00:52:20,960 --> 00:52:23,760
it didn't actually have any uh formal

1293
00:52:23,760 --> 00:52:25,359
text in there that was implementable and

1294
00:52:25,359 --> 00:52:27,440
now it does right and so now in the

1295
00:52:27,440 --> 00:52:29,359
coswood section the software name the

1296
00:52:29,359 --> 00:52:32,720
software version um can be used to meet

1297
00:52:32,720 --> 00:52:34,079
uh the

1298
00:52:34,079 --> 00:52:35,920
what what the architecture document uses

1299
00:52:35,920 --> 00:52:37,920
words for firmware type and firmware

1300
00:52:37,920 --> 00:52:39,599
version right it uniquely identifies

1301
00:52:39,599 --> 00:52:41,119
what's the firmware that's actually on

1302
00:52:41,119 --> 00:52:41,920
there

1303
00:52:41,920 --> 00:52:44,880
and so the belief is that the 11 spec

1304
00:52:44,880 --> 00:52:47,839
draft 11 of eat actually meets um all

1305
00:52:47,839 --> 00:52:50,960
but one of the requirements of the um

1306
00:52:50,960 --> 00:52:52,800
that's talked about in the teep spec

1307
00:52:52,800 --> 00:52:54,480
right now the deep architecture document

1308
00:52:54,480 --> 00:52:56,000
right now and that's classic device and

1309
00:52:56,000 --> 00:52:56,960
so that's what all the remaining

1310
00:52:56,960 --> 00:52:58,839
discussions about is that one remaining

1311
00:52:58,839 --> 00:53:02,480
thing um and i see brendan in queue so

1312
00:53:02,480 --> 00:53:03,760
is if you're gonna

1313
00:53:03,760 --> 00:53:05,520
anything other than class of the device

1314
00:53:05,520 --> 00:53:07,119
is in scope for this slide so feel free

1315
00:53:07,119 --> 00:53:10,480
to ask questions anything else so

1316
00:53:11,599 --> 00:53:14,559
yeah i i guess the the thing that i want

1317
00:53:14,559 --> 00:53:17,920
to make sure is that we're not um

1318
00:53:17,920 --> 00:53:20,079
constructing a situation where devices

1319
00:53:20,079 --> 00:53:22,559
are required to convert between a

1320
00:53:22,559 --> 00:53:25,760
variety of different identifiers um

1321
00:53:25,760 --> 00:53:27,760
this is this is a moment where we need

1322
00:53:27,760 --> 00:53:30,240
to be really careful about how we sync

1323
00:53:30,240 --> 00:53:32,319
up between a bunch of drafts that are in

1324
00:53:32,319 --> 00:53:35,280
flight at the moment i'm concerned

1325
00:53:35,280 --> 00:53:37,359
and and to to be honest with you i i

1326
00:53:37,359 --> 00:53:39,680
have not looked through this to to the

1327
00:53:39,680 --> 00:53:42,400
extent where i can tell whether oem id

1328
00:53:42,400 --> 00:53:46,319
euid and the current uuids specified in

1329
00:53:46,319 --> 00:53:48,880
the suit draft are compatible or not i

1330
00:53:48,880 --> 00:53:50,720
just want to ensure that we're not

1331
00:53:50,720 --> 00:53:53,119
forcing

1332
00:53:53,119 --> 00:53:56,960
constrained nodes to convert between

1333
00:53:56,960 --> 00:54:00,160
a variety of different identifiers for

1334
00:54:00,160 --> 00:54:03,200
the ease of consumption of large-scale

1335
00:54:03,200 --> 00:54:04,800
systems because i think that would be a

1336
00:54:04,800 --> 00:54:06,720
mistake

1337
00:54:06,720 --> 00:54:08,319
so i think the one that you should look

1338
00:54:08,319 --> 00:54:10,000
at and form your own opinion i think is

1339
00:54:10,000 --> 00:54:11,280
euid

1340
00:54:11,280 --> 00:54:13,200
which is specified and eat as being

1341
00:54:13,200 --> 00:54:15,839
twice as long as a uuid and so i think

1342
00:54:15,839 --> 00:54:17,839
the other ones you'd probably be happy

1343
00:54:17,839 --> 00:54:19,200
enough with but that one i would draw

1344
00:54:19,200 --> 00:54:23,799
your attention to inform an opinion so

1345
00:54:24,960 --> 00:54:26,800
it's like a uuid in the same sense of

1346
00:54:26,800 --> 00:54:28,079
properties other than the length is

1347
00:54:28,079 --> 00:54:30,559
twice as long

1348
00:54:30,559 --> 00:54:32,960
i i think that device identifiers are

1349
00:54:32,960 --> 00:54:35,280
probably the id that suit cares about

1350
00:54:35,280 --> 00:54:37,359
the least so i suspect i'm not too

1351
00:54:37,359 --> 00:54:38,799
worried about that one

1352
00:54:38,799 --> 00:54:40,079
okay

1353
00:54:40,079 --> 00:54:41,359
all right but yeah those would be

1354
00:54:41,359 --> 00:54:44,079
feedback i think for the uh rats working

1355
00:54:44,079 --> 00:54:45,680
group which uh i would invite you to the

1356
00:54:45,680 --> 00:54:47,280
working group session following this one

1357
00:54:47,280 --> 00:54:48,240
so

1358
00:54:48,240 --> 00:54:49,520
all right unless there's any other

1359
00:54:49,520 --> 00:54:51,200
comments on any of the other ones then

1360
00:54:51,200 --> 00:54:53,040
all the rest of these things are about

1361
00:54:53,040 --> 00:54:54,720
the classic device discussion which has

1362
00:54:54,720 --> 00:54:56,640
been a active discussion this week thank

1363
00:54:56,640 --> 00:54:58,640
you to all of those who have weighed in

1364
00:54:58,640 --> 00:54:59,839
on it and thank you for coming to this

1365
00:54:59,839 --> 00:55:01,119
session if you wouldn't normally be in

1366
00:55:01,119 --> 00:55:04,400
teeps so next slide

1367
00:55:04,839 --> 00:55:07,520
please okay so let's do some history

1368
00:55:07,520 --> 00:55:09,440
here and talk about some background for

1369
00:55:09,440 --> 00:55:10,640
class of device because there were some

1370
00:55:10,640 --> 00:55:12,400
questions for anybody coming from say

1371
00:55:12,400 --> 00:55:13,760
the rats working group that wouldn't

1372
00:55:13,760 --> 00:55:16,319
normally be here in teep as to what this

1373
00:55:16,319 --> 00:55:19,440
requirement is and what teeps use is so

1374
00:55:19,440 --> 00:55:21,440
the first use of this in teep came from

1375
00:55:21,440 --> 00:55:24,559
the legacy otrp draft which we don't use

1376
00:55:24,559 --> 00:55:26,319
anymore but if you're looking back at

1377
00:55:26,319 --> 00:55:28,799
the history you can see uh and i think

1378
00:55:28,799 --> 00:55:29,920
um

1379
00:55:29,920 --> 00:55:32,240
uh jeremy had posted on the combined

1380
00:55:32,240 --> 00:55:34,480
thread that the teep suit thread about

1381
00:55:34,480 --> 00:55:37,280
what otrp does and so you see in the

1382
00:55:37,280 --> 00:55:40,079
otrp protocol which is now part of uh

1383
00:55:40,079 --> 00:55:42,559
global platform specifications it does

1384
00:55:42,559 --> 00:55:44,480
have this notion of type of firmware

1385
00:55:44,480 --> 00:55:45,760
right which i mentioned the previous

1386
00:55:45,760 --> 00:55:47,359
slide that the coswood can cover that

1387
00:55:47,359 --> 00:55:50,000
one and the type of tee included in a

1388
00:55:50,000 --> 00:55:52,640
device right and so that's one example

1389
00:55:52,640 --> 00:55:54,799
wording and otrp does this so next slide

1390
00:55:54,799 --> 00:55:56,400
but that's not our spec anymore so it's

1391
00:55:56,400 --> 00:55:58,400
just that was a predecessor to what deep

1392
00:55:58,400 --> 00:56:00,240
architecture has okay

1393
00:56:00,240 --> 00:56:01,520
so a couple places in the deep

1394
00:56:01,520 --> 00:56:03,119
architecture document that actually

1395
00:56:03,119 --> 00:56:04,400
specified the requirement that we're

1396
00:56:04,400 --> 00:56:07,280
talking about now okay one is here

1397
00:56:07,280 --> 00:56:08,799
talking about device identifying

1398
00:56:08,799 --> 00:56:10,319
information okay

1399
00:56:10,319 --> 00:56:12,559
um attestation information maybe may

1400
00:56:12,559 --> 00:56:14,079
need you you can identify a device to

1401
00:56:14,079 --> 00:56:15,839
the tam right that's more like the the

1402
00:56:15,839 --> 00:56:17,760
euid case right

1403
00:56:17,760 --> 00:56:19,599
you need it allows uh this hand provides

1404
00:56:19,599 --> 00:56:21,280
services a device such as managing

1405
00:56:21,280 --> 00:56:23,440
installed tas providing subscriptions to

1406
00:56:23,440 --> 00:56:25,520
services locating device specific keying

1407
00:56:25,520 --> 00:56:26,799
material to communicate with and

1408
00:56:26,799 --> 00:56:28,559
authenticate the device or authenticate

1409
00:56:28,559 --> 00:56:30,160
device in some cases it may be

1410
00:56:30,160 --> 00:56:31,760
sufficient to identify only the class of

1411
00:56:31,760 --> 00:56:34,160
device right if you're managing you know

1412
00:56:34,160 --> 00:56:35,680
10 000 things

1413
00:56:35,680 --> 00:56:38,160
you have the same policy for all 10 000

1414
00:56:38,160 --> 00:56:39,760
of them not on the device by device

1415
00:56:39,760 --> 00:56:41,440
basis for scalability right and so

1416
00:56:41,440 --> 00:56:43,040
what's the class of the device right not

1417
00:56:43,040 --> 00:56:44,960
the serial number but what's the what's

1418
00:56:44,960 --> 00:56:46,880
the model number or some other class or

1419
00:56:46,880 --> 00:56:49,200
category that applies to the whole uh

1420
00:56:49,200 --> 00:56:50,960
set of things not on a per serial number

1421
00:56:50,960 --> 00:56:52,880
basis where eoid is like a serial number

1422
00:56:52,880 --> 00:56:54,319
okay

1423
00:56:54,319 --> 00:56:56,960
next slide

1424
00:56:57,040 --> 00:56:58,559
um the other part of the requirement

1425
00:56:58,559 --> 00:57:01,200
just to uh verify is in the tee

1426
00:57:01,200 --> 00:57:02,960
identifying information and this is the

1427
00:57:02,960 --> 00:57:04,480
type of tee

1428
00:57:04,480 --> 00:57:06,880
that generated this attestation might be

1429
00:57:06,880 --> 00:57:09,040
must be identified right and includes

1430
00:57:09,040 --> 00:57:10,640
you know version information for

1431
00:57:10,640 --> 00:57:12,480
hardware firmware software and so on

1432
00:57:12,480 --> 00:57:14,400
those those other bullets are the other

1433
00:57:14,400 --> 00:57:16,240
rows in that table right

1434
00:57:16,240 --> 00:57:19,119
t manufacturer information for the uh te

1435
00:57:19,119 --> 00:57:21,119
right that's like oem id for the tee

1436
00:57:21,119 --> 00:57:22,720
claim set right is required in order to

1437
00:57:22,720 --> 00:57:24,880
disambiguate the same te created by

1438
00:57:24,880 --> 00:57:26,880
different manufacturers and so as an

1439
00:57:26,880 --> 00:57:29,760
example right in the uh arm ecosystem

1440
00:57:29,760 --> 00:57:33,359
right you have a uh say a trust zone uh

1441
00:57:33,359 --> 00:57:36,319
dee but the actual uh chip manufacturer

1442
00:57:36,319 --> 00:57:38,079
is a very it's anybody that licenses the

1443
00:57:38,079 --> 00:57:39,599
arm design right so you can imagine a

1444
00:57:39,599 --> 00:57:42,240
trust zone with multiple oem ids but

1445
00:57:42,240 --> 00:57:43,920
it's the same te type which is trust

1446
00:57:43,920 --> 00:57:45,839
zone right so again there's a

1447
00:57:45,839 --> 00:57:48,319
there's a classic device there in this

1448
00:57:48,319 --> 00:57:50,799
example i think if i'm interpreting if i

1449
00:57:50,799 --> 00:57:52,240
understand the arm ecosystem right this

1450
00:57:52,240 --> 00:57:53,760
is an example where

1451
00:57:53,760 --> 00:57:55,760
there might be a te type that would be

1452
00:57:55,760 --> 00:57:57,599
that would span multiple oem ids and

1453
00:57:57,599 --> 00:57:59,280
that's an important concept

1454
00:57:59,280 --> 00:58:01,440
to keep track of when i get to that

1455
00:58:01,440 --> 00:58:04,400
question in another slide here so

1456
00:58:04,400 --> 00:58:05,599
all right so hopefully somebody will

1457
00:58:05,599 --> 00:58:06,799
correct me if i have something wrong but

1458
00:58:06,799 --> 00:58:08,160
this is the text that was that's already

1459
00:58:08,160 --> 00:58:09,839
passed working group last call and has

1460
00:58:09,839 --> 00:58:11,440
passed on the isg so we already have

1461
00:58:11,440 --> 00:58:13,119
consensus on this text

1462
00:58:13,119 --> 00:58:14,640
and now let's just uh we have to talk

1463
00:58:14,640 --> 00:58:16,240
about how we can effectively meet these

1464
00:58:16,240 --> 00:58:17,599
requirements so go ahead and go on to

1465
00:58:17,599 --> 00:58:19,359
the next slide nancy

1466
00:58:19,359 --> 00:58:22,359
okay

1467
00:58:25,280 --> 00:58:26,880
as meeting that claim and so this is

1468
00:58:26,880 --> 00:58:30,240
what we want to replace with a a uh

1469
00:58:30,240 --> 00:58:32,480
a working group document whether this

1470
00:58:32,480 --> 00:58:33,760
document gets adopted is working or

1471
00:58:33,760 --> 00:58:35,119
joking but this is really the only thing

1472
00:58:35,119 --> 00:58:37,040
left that depends on is this one section

1473
00:58:37,040 --> 00:58:38,960
here if we make those other changes that

1474
00:58:38,960 --> 00:58:40,640
i mentioned because the eat spec has now

1475
00:58:40,640 --> 00:58:42,480
incorporated other things so there's a

1476
00:58:42,480 --> 00:58:45,480
cloud

1477
00:59:01,200 --> 00:59:05,000
yeah this is not good

1478
00:59:06,640 --> 00:59:09,040
no just checking am i back now

1479
00:59:09,040 --> 00:59:10,720
yeah you're back

1480
00:59:10,720 --> 00:59:12,480
okay yeah i gotta know

1481
00:59:12,480 --> 00:59:13,920
i got a notice from mitecho that i was

1482
00:59:13,920 --> 00:59:16,880
having glitches so i knew about it so

1483
00:59:16,880 --> 00:59:18,799
as long as i'm back now i'm saying uh so

1484
00:59:18,799 --> 00:59:21,119
this one it was a proposal that uses a

1485
00:59:21,119 --> 00:59:22,400
uuid

1486
00:59:22,400 --> 00:59:23,680
to meet the

1487
00:59:23,680 --> 00:59:26,480
type claims about the the type of device

1488
00:59:26,480 --> 00:59:27,920
type of pe

1489
00:59:27,920 --> 00:59:30,319
um this one says you could use a uuid

1490
00:59:30,319 --> 00:59:31,760
for those two purposes and that's what

1491
00:59:31,760 --> 00:59:33,599
the keep spec references right now and

1492
00:59:33,599 --> 00:59:35,839
so whether a t uuid is appropriate or

1493
00:59:35,839 --> 00:59:37,760
not is an upcoming question but that's

1494
00:59:37,760 --> 00:59:39,599
one that we said that we as referenced

1495
00:59:39,599 --> 00:59:41,520
in the last deep spec so

1496
00:59:41,520 --> 00:59:45,960
that's one proposal next slide

1497
00:59:49,920 --> 00:59:52,480
um i don't see the slide on my screen

1498
00:59:52,480 --> 00:59:53,680
can you guys still see the slide on the

1499
00:59:53,680 --> 00:59:55,919
screen

1500
00:59:58,240 --> 01:00:02,799
okay here we go we see the epr 139 slide

1501
01:00:02,799 --> 01:00:04,559
yep it was just delayed it came up for

1502
01:00:04,559 --> 01:00:05,359
me

1503
01:00:05,359 --> 01:00:07,040
all right so um

1504
01:00:07,040 --> 01:00:10,160
lawrence opened a pull request on monday

1505
01:00:10,160 --> 01:00:12,400
or tuesday against the eat specs saying

1506
01:00:12,400 --> 01:00:14,079
would this meet the requirement okay and

1507
01:00:14,079 --> 01:00:15,599
that's what has been generated lots of

1508
01:00:15,599 --> 01:00:17,839
discussions so in this example right

1509
01:00:17,839 --> 01:00:20,079
it's a uh byte uh

1510
01:00:20,079 --> 01:00:23,440
blob okay as opposed to a uid okay

1511
01:00:23,440 --> 01:00:25,280
and you can see the various descriptions

1512
01:00:25,280 --> 01:00:26,720
and stuff there right set by the

1513
01:00:26,720 --> 01:00:29,119
hardware oem vendor again wording is

1514
01:00:29,119 --> 01:00:30,720
flexible this is just a pull request

1515
01:00:30,720 --> 01:00:33,040
right uh there's no global schema format

1516
01:00:33,040 --> 01:00:35,440
for this claim and so it's still opaque

1517
01:00:35,440 --> 01:00:37,920
just like a uid is right there's no

1518
01:00:37,920 --> 01:00:40,000
format for the claim it's an opaque blob

1519
01:00:40,000 --> 01:00:41,359
that you can use but there's no

1520
01:00:41,359 --> 01:00:43,200
structure in it okay so again that's a

1521
01:00:43,200 --> 01:00:45,680
pull request is another proposal

1522
01:00:45,680 --> 01:00:48,240
next slide

1523
01:00:49,680 --> 01:00:51,839
okay so here's the set of questions for

1524
01:00:51,839 --> 01:00:54,000
discussion here and various individuals

1525
01:00:54,000 --> 01:00:55,280
have weighed in on the list on these

1526
01:00:55,280 --> 01:00:56,559
questions already but i wanted to

1527
01:00:56,559 --> 01:00:58,160
summarize what the questions were that

1528
01:00:58,160 --> 01:00:59,920
people have weighed in on and see if we

1529
01:00:59,920 --> 01:01:01,040
can get any

1530
01:01:01,040 --> 01:01:03,119
way forward or direction here so we know

1531
01:01:03,119 --> 01:01:05,280
whether this is going to be a

1532
01:01:05,280 --> 01:01:07,680
t profile thing or an

1533
01:01:07,680 --> 01:01:09,599
general thing okay so the first one and

1534
01:01:09,599 --> 01:01:11,040
these are all interrelated questions

1535
01:01:11,040 --> 01:01:12,480
here so feel free to get in the mic in

1536
01:01:12,480 --> 01:01:13,920
any one of these four questions here

1537
01:01:13,920 --> 01:01:15,599
because there are uh inner relationships

1538
01:01:15,599 --> 01:01:17,280
between these okay i know a number of

1539
01:01:17,280 --> 01:01:18,400
people have posted their comments to the

1540
01:01:18,400 --> 01:01:19,760
list but not everybody here has read

1541
01:01:19,760 --> 01:01:21,440
everybody is probably up on that thread

1542
01:01:21,440 --> 01:01:23,440
and we want to get some consensus

1543
01:01:23,440 --> 01:01:24,720
direction out of the working group here

1544
01:01:24,720 --> 01:01:26,079
if possible so

1545
01:01:26,079 --> 01:01:28,240
the first one is this notion of a

1546
01:01:28,240 --> 01:01:30,960
hardware class identifier right is this

1547
01:01:30,960 --> 01:01:33,440
a notion that is specific to teep

1548
01:01:33,440 --> 01:01:35,920
or is this a generally applicable notion

1549
01:01:35,920 --> 01:01:37,520
okay

1550
01:01:37,520 --> 01:01:39,200
that's the first question

1551
01:01:39,200 --> 01:01:42,079
is the value of the class identifier is

1552
01:01:42,079 --> 01:01:43,760
that something that's globally unique

1553
01:01:43,760 --> 01:01:45,520
like a uid is

1554
01:01:45,520 --> 01:01:47,440
is it something that's up to the vendor

1555
01:01:47,440 --> 01:01:49,599
right because you know if it's a blight

1556
01:01:49,599 --> 01:01:51,040
blob or whatever could two different

1557
01:01:51,040 --> 01:01:52,400
vendors use the same

1558
01:01:52,400 --> 01:01:54,400
value

1559
01:01:54,400 --> 01:01:56,559
and the meaning of it is different

1560
01:01:56,559 --> 01:01:58,160
or is it up to the profile where two

1561
01:01:58,160 --> 01:02:00,000
different vendors can use the same value

1562
01:02:00,000 --> 01:02:01,440
and the meaning of it is the same

1563
01:02:01,440 --> 01:02:03,280
because it's more like a

1564
01:02:03,280 --> 01:02:05,200
identifier of trust zone regardless of

1565
01:02:05,200 --> 01:02:07,520
what the vendor is right

1566
01:02:07,520 --> 01:02:09,520
is it uh opaque or is there any

1567
01:02:09,520 --> 01:02:10,960
structure to it you can see the two

1568
01:02:10,960 --> 01:02:13,599
proposals that i mentioned are opaque

1569
01:02:13,599 --> 01:02:15,280
if heaven forbid somebody used a text

1570
01:02:15,280 --> 01:02:16,640
string somebody might assume some

1571
01:02:16,640 --> 01:02:18,559
structure or even if it's a bite blob

1572
01:02:18,559 --> 01:02:20,000
somebody might put some structure in

1573
01:02:20,000 --> 01:02:20,960
there

1574
01:02:20,960 --> 01:02:23,760
where you would not do that with a uid

1575
01:02:23,760 --> 01:02:26,240
right now both the proposals are opaque

1576
01:02:26,240 --> 01:02:28,079
from my understanding

1577
01:02:28,079 --> 01:02:31,520
and then finally is the value a uuid as

1578
01:02:31,520 --> 01:02:32,400
in

1579
01:02:32,400 --> 01:02:35,680
hank's uh original proposal or a place

1580
01:02:35,680 --> 01:02:37,680
uh white blob like it is in lawrence's

1581
01:02:37,680 --> 01:02:40,720
one or as was brought up on the email

1582
01:02:40,720 --> 01:02:43,200
thread a uh text string which was

1583
01:02:43,200 --> 01:02:45,520
mentioned is what otrp does and brendan

1584
01:02:45,520 --> 01:02:46,720
said please no

1585
01:02:46,720 --> 01:02:49,839
um or is it an oid or is it a url and so

1586
01:02:49,839 --> 01:02:51,760
that's kind of all the the of the uh

1587
01:02:51,760 --> 01:02:53,280
things people are weighing on the long

1588
01:02:53,280 --> 01:02:56,000
thread so um i see brennan in queue so

1589
01:02:56,000 --> 01:02:58,880
you get to go first

1590
01:02:59,839 --> 01:03:02,400
so uh this this might actually back up

1591
01:03:02,400 --> 01:03:04,720
slightly to oem id as well just as a

1592
01:03:04,720 --> 01:03:07,280
warning uh but i i think it's important

1593
01:03:07,280 --> 01:03:09,200
to consider in this that class

1594
01:03:09,200 --> 01:03:12,319
identifiers are not unique for a device

1595
01:03:12,319 --> 01:03:14,319
one device could have many class

1596
01:03:14,319 --> 01:03:16,480
identifiers and the the reason this is

1597
01:03:16,480 --> 01:03:18,559
really important is because it allows

1598
01:03:18,559 --> 01:03:20,640
someone to distinguish between the

1599
01:03:20,640 --> 01:03:22,960
various different kinds of configuration

1600
01:03:22,960 --> 01:03:25,680
that they care about so as you mentioned

1601
01:03:25,680 --> 01:03:27,599
you could easily have a class identifier

1602
01:03:27,599 --> 01:03:29,280
for a tee

1603
01:03:29,280 --> 01:03:32,000
but you might also want to have a class

1604
01:03:32,000 --> 01:03:35,440
identifier for all the tees of a

1605
01:03:35,440 --> 01:03:38,400
particular kind that also have access to

1606
01:03:38,400 --> 01:03:40,960
a specific trusted peripheral like maybe

1607
01:03:40,960 --> 01:03:43,119
a particular version of a gpu if you

1608
01:03:43,119 --> 01:03:45,920
happen to be building drm um or maybe

1609
01:03:45,920 --> 01:03:48,960
you uh care about access to a specific

1610
01:03:48,960 --> 01:03:51,680
kind of crypto accelerator in which case

1611
01:03:51,680 --> 01:03:53,920
you definitely need a class identifier

1612
01:03:53,920 --> 01:03:56,559
for that and that's

1613
01:03:56,559 --> 01:03:58,240
probably actually going to have a

1614
01:03:58,240 --> 01:04:00,559
different oem id and a different class

1615
01:04:00,559 --> 01:04:03,280
id than the tee itself so what you

1616
01:04:03,280 --> 01:04:05,599
actually care about in these situations

1617
01:04:05,599 --> 01:04:08,400
is aggregations of multiple

1618
01:04:08,400 --> 01:04:09,599
oem

1619
01:04:09,599 --> 01:04:13,359
and class id pairs and so i i mean

1620
01:04:13,359 --> 01:04:14,720
there's a couple of different ways that

1621
01:04:14,720 --> 01:04:16,480
you can handle this you can have a

1622
01:04:16,480 --> 01:04:18,559
structured class identifier in some kind

1623
01:04:18,559 --> 01:04:21,760
of enormous tree or you can have a list

1624
01:04:21,760 --> 01:04:24,000
of pairs which is possibly easier to

1625
01:04:24,000 --> 01:04:25,920
parse and handle there's a lot of

1626
01:04:25,920 --> 01:04:27,839
different options here

1627
01:04:27,839 --> 01:04:29,280
and and i think it's important that we

1628
01:04:29,280 --> 01:04:31,200
consider that there are a lot of

1629
01:04:31,200 --> 01:04:33,680
different use cases here for different

1630
01:04:33,680 --> 01:04:36,880
kinds of uh ways of identifying exactly

1631
01:04:36,880 --> 01:04:40,480
what a class means to you and your ta

1632
01:04:40,480 --> 01:04:42,720
um i will mention the the out of the two

1633
01:04:42,720 --> 01:04:43,760
possibilities you mentioned there's a

1634
01:04:43,760 --> 01:04:45,200
third possibility i think which is the

1635
01:04:45,200 --> 01:04:46,720
one that's most natural and eat which is

1636
01:04:46,720 --> 01:04:48,799
multiple claim sets

1637
01:04:48,799 --> 01:04:50,559
uh so you have just like you could have

1638
01:04:50,559 --> 01:04:52,480
multiple claim sets one for each layer

1639
01:04:52,480 --> 01:04:53,520
you could have one more you have

1640
01:04:53,520 --> 01:04:54,880
multiple claim sets one for each

1641
01:04:54,880 --> 01:04:56,960
component and a composite device you

1642
01:04:56,960 --> 01:04:58,720
could have multiple claim sets for other

1643
01:04:58,720 --> 01:04:59,760
purposes so if you need to have

1644
01:04:59,760 --> 01:05:01,839
different uh you said you know lists of

1645
01:05:01,839 --> 01:05:03,760
uh you know pairs of them you could put

1646
01:05:03,760 --> 01:05:05,599
those in different claim sets and use

1647
01:05:05,599 --> 01:05:07,440
the sub mod relationship to indicate the

1648
01:05:07,440 --> 01:05:08,480
relationship that's probably the one

1649
01:05:08,480 --> 01:05:10,559
that's the most natural way because then

1650
01:05:10,559 --> 01:05:12,000
it's not just this pair you could have

1651
01:05:12,000 --> 01:05:14,079
any set of claims that could be varied

1652
01:05:14,079 --> 01:05:15,680
uh together right you could have you

1653
01:05:15,680 --> 01:05:17,280
know whether it's a time stamp or

1654
01:05:17,280 --> 01:05:18,799
anything else that kind of goes along

1655
01:05:18,799 --> 01:05:20,319
with that so multiple claim sets is the

1656
01:05:20,319 --> 01:05:22,480
most natural way to do that but i see

1657
01:05:22,480 --> 01:05:24,559
other people in queue so i i mean i mean

1658
01:05:24,559 --> 01:05:27,200
the thing the thing on that is that um

1659
01:05:27,200 --> 01:05:30,000
one particular thing can have multiple

1660
01:05:30,000 --> 01:05:32,799
claim sets you could have a particular

1661
01:05:32,799 --> 01:05:36,640
tee and that t e could have a particular

1662
01:05:36,640 --> 01:05:40,960
type of uh of os and and so on and so on

1663
01:05:40,960 --> 01:05:43,200
um so what's interesting i i guess i

1664
01:05:43,200 --> 01:05:44,480
didn't give you the background here but

1665
01:05:44,480 --> 01:05:45,680
for anybody that's not familiar with the

1666
01:05:45,680 --> 01:05:47,599
t format there's ah when i say up to the

1667
01:05:47,599 --> 01:05:49,200
profile here in the second bullet

1668
01:05:49,200 --> 01:05:50,559
there's a separate claim that's the

1669
01:05:50,559 --> 01:05:53,119
profile okay and so there's a with the

1670
01:05:53,119 --> 01:05:54,640
value of being what that profile would

1671
01:05:54,640 --> 01:05:56,559
be and so you could imagine you know

1672
01:05:56,559 --> 01:06:00,000
profile value equals uh teep right and

1673
01:06:00,000 --> 01:06:03,039
so uh the same component in theory could

1674
01:06:03,039 --> 01:06:04,640
also have multiple profiles which would

1675
01:06:04,640 --> 01:06:07,280
be multiple claim sets for the same um

1676
01:06:07,280 --> 01:06:08,880
for the same component just because that

1677
01:06:08,880 --> 01:06:10,559
component happens to be wearing two hats

1678
01:06:10,559 --> 01:06:12,480
and have two profiles that is in theory

1679
01:06:12,480 --> 01:06:13,920
possible too i don't think that example

1680
01:06:13,920 --> 01:06:14,880
is in there but i don't think there's

1681
01:06:14,880 --> 01:06:17,359
anything that would preclude it so

1682
01:06:17,359 --> 01:06:20,400
okay uh hank

1683
01:06:20,400 --> 01:06:24,400
yeah hi um hi dave um so um so my next

1684
01:06:24,400 --> 01:06:25,760
words i have to

1685
01:06:25,760 --> 01:06:27,520
phrase very carefully i have to tweet

1686
01:06:27,520 --> 01:06:28,880
very carefully because

1687
01:06:28,880 --> 01:06:31,680
none of my co-authors are here

1688
01:06:31,680 --> 01:06:32,480
and

1689
01:06:32,480 --> 01:06:35,119
they are all the hardware vendors and

1690
01:06:35,119 --> 01:06:37,839
the te builders and the at the station

1691
01:06:37,839 --> 01:06:39,119
environment

1692
01:06:39,119 --> 01:06:41,119
creators so and this is already hinting

1693
01:06:41,119 --> 01:06:43,200
this is coming from rats

1694
01:06:43,200 --> 01:06:45,119
and in reds they think i like brent's

1695
01:06:45,119 --> 01:06:47,280
comment on you can have

1696
01:06:47,280 --> 01:06:50,000
multiple ways to express these uh

1697
01:06:50,000 --> 01:06:53,039
let's call them multi-oem multi-parts

1698
01:06:53,039 --> 01:06:54,559
things that you have multiple classes

1699
01:06:54,559 --> 01:06:57,920
combined and that is especially true

1700
01:06:57,920 --> 01:07:00,079
in composite devices and composite

1701
01:07:00,079 --> 01:07:02,640
device attestation rats where you also

1702
01:07:02,640 --> 01:07:04,480
have the layered attestation maybe on

1703
01:07:04,480 --> 01:07:06,880
top of that so you have also the

1704
01:07:06,880 --> 01:07:09,359
dependencies which environment reports

1705
01:07:09,359 --> 01:07:10,880
on which requirements and so on and so

1706
01:07:10,880 --> 01:07:13,760
on so we are very careful and very

1707
01:07:13,760 --> 01:07:16,160
complex in describing that from the

1708
01:07:16,160 --> 01:07:19,760
supply chain side and we decided on maps

1709
01:07:19,760 --> 01:07:22,400
that have classes instances and groups

1710
01:07:22,400 --> 01:07:25,920
which are arbitrary subsets of these

1711
01:07:25,920 --> 01:07:29,119
can be identified with specific maps

1712
01:07:29,119 --> 01:07:31,280
that can have class ids vendor strings

1713
01:07:31,280 --> 01:07:34,079
model strings layer identifiers and

1714
01:07:34,079 --> 01:07:36,160
other indices of hardware for example

1715
01:07:36,160 --> 01:07:38,559
there's the entitymap that can help you

1716
01:07:38,559 --> 01:07:40,400
so there's a lot of things that really

1717
01:07:40,400 --> 01:07:42,720
can help if you support all of these and

1718
01:07:42,720 --> 01:07:44,720
then i think in the github thread about

1719
01:07:44,720 --> 01:07:45,839
this uh

1720
01:07:45,839 --> 01:07:48,880
thomas just provided a very small subset

1721
01:07:48,880 --> 01:07:51,839
that is detect oid detect uuid and

1722
01:07:51,839 --> 01:07:54,160
detect integer which is an interesting

1723
01:07:54,160 --> 01:07:56,400
choice but from coming from one of the

1724
01:07:56,400 --> 01:07:59,359
vendors who just used numbers there and

1725
01:07:59,359 --> 01:08:01,200
that is a te

1726
01:08:01,200 --> 01:08:03,760
pa component not a complete te

1727
01:08:03,760 --> 01:08:05,440
identifier so

1728
01:08:05,440 --> 01:08:07,440
and that's not including instances and

1729
01:08:07,440 --> 01:08:10,079
groups and such so i think uh looking at

1730
01:08:10,079 --> 01:08:12,160
that corresponding work in rats

1731
01:08:12,160 --> 01:08:13,839
tentatively

1732
01:08:13,839 --> 01:08:16,960
that is a korean might yield a lot of

1733
01:08:16,960 --> 01:08:19,520
interesting choices here and also i

1734
01:08:19,520 --> 01:08:20,399
think

1735
01:08:20,399 --> 01:08:23,120
represents the complexity of how to

1736
01:08:23,120 --> 01:08:26,399
um represent uh hierarchies of composite

1737
01:08:26,399 --> 01:08:27,920
class things

1738
01:08:27,920 --> 01:08:30,719
to have the uh which again would be can

1739
01:08:30,719 --> 01:08:32,960
be could be classed by their own then uh

1740
01:08:32,960 --> 01:08:33,759
um

1741
01:08:33,759 --> 01:08:37,439
how complex that is so so yeah oid uh

1742
01:08:37,439 --> 01:08:39,920
all that is possible actually and and

1743
01:08:39,920 --> 01:08:41,679
and i don't know if this complexity is

1744
01:08:41,679 --> 01:08:44,960
required for etf so that's that's my my

1745
01:08:44,960 --> 01:08:47,439
take-home idea i think um maybe you

1746
01:08:47,439 --> 01:08:50,080
don't need all of that um but maybe

1747
01:08:50,080 --> 01:08:51,679
maybe looking at this and having a

1748
01:08:51,679 --> 01:08:55,120
subset of what is required

1749
01:08:56,238 --> 01:08:58,560
so again for other people in the queue

1750
01:08:58,560 --> 01:09:00,479
here um the thing that is the most

1751
01:09:00,479 --> 01:09:03,120
useful is any comments on the top two

1752
01:09:03,120 --> 01:09:05,198
comments on the bottom one is probably

1753
01:09:05,198 --> 01:09:06,560
the least important because that's

1754
01:09:06,560 --> 01:09:07,839
important only once you've agreed on the

1755
01:09:07,839 --> 01:09:09,839
answers to the top ones and so

1756
01:09:09,839 --> 01:09:12,399
is it team specific or general is it

1757
01:09:12,399 --> 01:09:14,158
profile specific vendor specific or

1758
01:09:14,158 --> 01:09:16,000
globally unique

1759
01:09:16,000 --> 01:09:18,158
and i understand brendan's point is

1760
01:09:18,158 --> 01:09:20,080
maybe the answer is multiple if you have

1761
01:09:20,080 --> 01:09:22,319
multiple purposes who knows uh but

1762
01:09:22,319 --> 01:09:23,679
that's the one i would most likely to

1763
01:09:23,679 --> 01:09:26,080
get a consensus on uh so we can get

1764
01:09:26,080 --> 01:09:28,719
direction to um

1765
01:09:28,719 --> 01:09:31,920
eat versus rats sorry eat versus

1766
01:09:31,920 --> 01:09:33,759
teep versus rats

1767
01:09:33,759 --> 01:09:36,319
i think a number of the

1768
01:09:36,319 --> 01:09:38,319
rats community have argued that it

1769
01:09:38,319 --> 01:09:40,399
should be prof up to the profile and

1770
01:09:40,399 --> 01:09:43,120
could be done in teep i think previously

1771
01:09:43,120 --> 01:09:45,040
tip assumed it would be global and be

1772
01:09:45,040 --> 01:09:46,479
done on rats

1773
01:09:46,479 --> 01:09:48,238
but that was before this thread and so

1774
01:09:48,238 --> 01:09:50,080
that's why i wanted to spend some time

1775
01:09:50,080 --> 01:09:52,479
on this so eric you're up next

1776
01:09:52,479 --> 01:09:54,880
sure hi eric voigt coming over from rats

1777
01:09:54,880 --> 01:09:57,520
uh i definitely think it should be

1778
01:09:57,520 --> 01:09:59,520
global uh i do think there are parallels

1779
01:09:59,520 --> 01:10:02,000
with profile certainly things like tpm

1780
01:10:02,000 --> 01:10:04,159
1.2 and 2.0

1781
01:10:04,159 --> 01:10:06,320
are things that are useful to

1782
01:10:06,320 --> 01:10:08,159
standardize the behavior of effectively

1783
01:10:08,159 --> 01:10:10,960
what an api your behavior is so the idea

1784
01:10:10,960 --> 01:10:13,040
of having a union of behaviors sort of

1785
01:10:13,040 --> 01:10:14,480
supportable here

1786
01:10:14,480 --> 01:10:16,640
is something that is interesting

1787
01:10:16,640 --> 01:10:19,360
uh on the text discussion as it should

1788
01:10:19,360 --> 01:10:21,840
be a string i don't think we want to

1789
01:10:21,840 --> 01:10:23,360
have anything like that but i do think

1790
01:10:23,360 --> 01:10:26,080
that there are values in having

1791
01:10:26,080 --> 01:10:27,440
standardized

1792
01:10:27,440 --> 01:10:29,360
options which people have agreed on on

1793
01:10:29,360 --> 01:10:32,000
api type as well as having some vendor

1794
01:10:32,000 --> 01:10:34,159
extensibility for new types that are out

1795
01:10:34,159 --> 01:10:36,320
there

1796
01:10:37,440 --> 01:10:39,759
um

1797
01:10:40,159 --> 01:10:41,280
okay

1798
01:10:41,280 --> 01:10:43,760
um honest and then i'll uh give an exam

1799
01:10:43,760 --> 01:10:45,120
if somebody else doesn't i'll give an

1800
01:10:45,120 --> 01:10:46,880
example or two that came up on the list

1801
01:10:46,880 --> 01:10:49,520
where i think uh lawrence gave one exam

1802
01:10:49,520 --> 01:10:51,600
of things that might be

1803
01:10:51,600 --> 01:10:53,520
up to the vendor or up to the profile

1804
01:10:53,520 --> 01:10:55,040
and see what people think but hannah's

1805
01:10:55,040 --> 01:10:56,840
you're in queue go

1806
01:10:56,840 --> 01:11:00,800
ahead hey um i hope you can hear me

1807
01:11:00,800 --> 01:11:01,840
um

1808
01:11:01,840 --> 01:11:03,440
i i'm trying to write the meeting

1809
01:11:03,440 --> 01:11:05,280
minutes and it was difficult to

1810
01:11:05,280 --> 01:11:07,760
sort of associate the responses of the

1811
01:11:07,760 --> 01:11:09,760
commenters to the questions

1812
01:11:09,760 --> 01:11:11,600
uh maybe maybe you could

1813
01:11:11,600 --> 01:11:13,920
maybe you could summarize um

1814
01:11:13,920 --> 01:11:15,040
like

1815
01:11:15,040 --> 01:11:16,320
um

1816
01:11:16,320 --> 01:11:18,080
what did you hear like what did you get

1817
01:11:18,080 --> 01:11:20,080
out of the the comments so far so i can

1818
01:11:20,080 --> 01:11:21,360
capture it in the meeting minutes for

1819
01:11:21,360 --> 01:11:23,199
the for the benefit of others who are

1820
01:11:23,199 --> 01:11:24,560
not on a call

1821
01:11:24,560 --> 01:11:26,719
um i'm with you so that's why i was

1822
01:11:26,719 --> 01:11:27,760
going to ask some more specific

1823
01:11:27,760 --> 01:11:29,840
questions but uh i i had a hard time

1824
01:11:29,840 --> 01:11:31,600
associating comments with specific

1825
01:11:31,600 --> 01:11:34,159
questions too other than i think um

1826
01:11:34,159 --> 01:11:36,960
uh brendan's i i could where brendan's

1827
01:11:36,960 --> 01:11:39,760
point was uh there might be multiple

1828
01:11:39,760 --> 01:11:41,920
types of class class identifiers so that

1829
01:11:41,920 --> 01:11:44,560
one was pretty clear um the

1830
01:11:44,560 --> 01:11:46,320
uh hink is back in queue so i think he's

1831
01:11:46,320 --> 01:11:48,239
going to clarify his comments the mic so

1832
01:11:48,239 --> 01:11:51,040
go ahead hank yeah apparently as i

1833
01:11:51,040 --> 01:11:53,280
understood afterwards i uh replied to

1834
01:11:53,280 --> 01:11:55,120
the least interesting one it's the last

1835
01:11:55,120 --> 01:11:57,519
question

1836
01:11:57,840 --> 01:12:01,520
so so that there's that and also it is a

1837
01:12:01,520 --> 01:12:03,199
lot of things and it is a complex

1838
01:12:03,199 --> 01:12:05,120
hierarchy tree

1839
01:12:05,120 --> 01:12:07,040
okay

1840
01:12:07,040 --> 01:12:09,840
all right so uh the i'll i'll mention

1841
01:12:09,840 --> 01:12:11,440
the two excel i see eric you're backing

1842
01:12:11,440 --> 01:12:12,719
queue if you want to clarify yours go

1843
01:12:12,719 --> 01:12:13,440
ahead

1844
01:12:13,440 --> 01:12:15,679
well one other and the bolt two

1845
01:12:15,679 --> 01:12:18,080
value globally unique but vendor

1846
01:12:18,080 --> 01:12:20,000
extensible and there are ways of doing

1847
01:12:20,000 --> 01:12:20,800
that

1848
01:12:20,800 --> 01:12:22,960
yeah okay so yeah eric's comments

1849
01:12:22,960 --> 01:12:26,000
specifically on the second one okay

1850
01:12:26,000 --> 01:12:28,960
to support both um which i gather as

1851
01:12:28,960 --> 01:12:30,560
something there's many address space

1852
01:12:30,560 --> 01:12:32,239
there's many numbering spaces in iana

1853
01:12:32,239 --> 01:12:33,840
that do that right that have a vendor

1854
01:12:33,840 --> 01:12:36,080
extensible section reserved whether

1855
01:12:36,080 --> 01:12:37,520
we're talking about numbers or strings

1856
01:12:37,520 --> 01:12:38,960
or any other format there's ways to do

1857
01:12:38,960 --> 01:12:39,920
that so

1858
01:12:39,920 --> 01:12:40,800
um

1859
01:12:40,800 --> 01:12:43,280
so um examples that have come up on the

1860
01:12:43,280 --> 01:12:45,040
uh on the list is things that are

1861
01:12:45,040 --> 01:12:48,080
vendor-specific and uh i think lawrence

1862
01:12:48,080 --> 01:12:51,360
gave an example um where his example was

1863
01:12:51,360 --> 01:12:53,120
a generic example that says you know

1864
01:12:53,120 --> 01:12:54,320
tesla

1865
01:12:54,320 --> 01:12:56,640
and so his was in the argument as to why

1866
01:12:56,640 --> 01:12:58,880
a uh byte string is better than uuid

1867
01:12:58,880 --> 01:13:00,800
because it's more compact and accessible

1868
01:13:00,800 --> 01:13:03,679
for constrained devices because your

1869
01:13:03,679 --> 01:13:05,520
class identifiers could be very short

1870
01:13:05,520 --> 01:13:08,239
much less than say 16 bytes

1871
01:13:08,239 --> 01:13:11,280
such as you know tesla model s 3 x or y

1872
01:13:11,280 --> 01:13:13,199
would be an examples of say one byte

1873
01:13:13,199 --> 01:13:14,800
things that are what vendor specific

1874
01:13:14,800 --> 01:13:16,960
right just translate that into te type

1875
01:13:16,960 --> 01:13:18,320
or device type or whatever instead of

1876
01:13:18,320 --> 01:13:19,920
tesla but your point is you could have

1877
01:13:19,920 --> 01:13:22,480
say one byte um identifiers that is

1878
01:13:22,480 --> 01:13:25,679
really within the context of an oem id

1879
01:13:25,679 --> 01:13:27,840
the pairing of that plus you know a very

1880
01:13:27,840 --> 01:13:29,600
small number of bytes is unique class

1881
01:13:29,600 --> 01:13:31,840
identifier that's a vendor specific one

1882
01:13:31,840 --> 01:13:33,280
so that was one example that came up on

1883
01:13:33,280 --> 01:13:34,400
the list

1884
01:13:34,400 --> 01:13:35,840
the example that i gave earlier is

1885
01:13:35,840 --> 01:13:37,440
something that might be

1886
01:13:37,440 --> 01:13:39,679
not vendor specific but up to a profile

1887
01:13:39,679 --> 01:13:41,760
which is if you had a te type that could

1888
01:13:41,760 --> 01:13:43,679
span multiple vendors

1889
01:13:43,679 --> 01:13:45,520
multiple oems and so i mentioned trust

1890
01:13:45,520 --> 01:13:46,880
zone which you could imagine the same

1891
01:13:46,880 --> 01:13:49,679
thing could be true for risk five uh tes

1892
01:13:49,679 --> 01:13:51,760
or whatever if there's multiple vendors

1893
01:13:51,760 --> 01:13:53,679
that have the same te type and you have

1894
01:13:53,679 --> 01:13:55,920
tas meant for that te type regardless of

1895
01:13:55,920 --> 01:13:58,080
which chip manufacturer built the chip

1896
01:13:58,080 --> 01:14:00,800
right just like in tpms right same spec

1897
01:14:00,800 --> 01:14:03,040
but many different tpm manufacturers

1898
01:14:03,040 --> 01:14:04,239
right and so

1899
01:14:04,239 --> 01:14:06,640
um there was examples of why a class

1900
01:14:06,640 --> 01:14:08,560
identifier might be

1901
01:14:08,560 --> 01:14:11,360
profile specific why it might be vendor

1902
01:14:11,360 --> 01:14:13,920
specific and of course uuids are just

1903
01:14:13,920 --> 01:14:16,960
globally unique um and so if you think

1904
01:14:16,960 --> 01:14:19,600
about do we need a registry of things

1905
01:14:19,600 --> 01:14:22,080
that are well known okay or not because

1906
01:14:22,080 --> 01:14:23,360
if it's up to the vendor you don't need

1907
01:14:23,360 --> 01:14:24,880
a registry right if you have up to the

1908
01:14:24,880 --> 01:14:27,600
profile you need a registry right

1909
01:14:27,600 --> 01:14:28,960
um whether

1910
01:14:28,960 --> 01:14:31,520
so we would need in the uh t profile if

1911
01:14:31,520 --> 01:14:34,320
if we have the class identifier values

1912
01:14:34,320 --> 01:14:36,239
that are specific to t right if keep

1913
01:14:36,239 --> 01:14:37,920
says here's the weight gives us space

1914
01:14:37,920 --> 01:14:39,360
you could register you want trust zone

1915
01:14:39,360 --> 01:14:41,360
here's the i enter registry to register

1916
01:14:41,360 --> 01:14:42,719
a value for trust zone that's vendor

1917
01:14:42,719 --> 01:14:44,159
agnostic and so

1918
01:14:44,159 --> 01:14:46,560
uh what a people because uh what we want

1919
01:14:46,560 --> 01:14:48,560
to know is is this something that needs

1920
01:14:48,560 --> 01:14:50,640
to be done purely in teep

1921
01:14:50,640 --> 01:14:52,560
and rat and there's no requirement on

1922
01:14:52,560 --> 01:14:54,320
rats and rats can just have to eat go

1923
01:14:54,320 --> 01:14:56,400
forward without talking about this and

1924
01:14:56,400 --> 01:14:57,920
say that's part of a t profile and we

1925
01:14:57,920 --> 01:14:59,920
can add claims in there okay rats would

1926
01:14:59,920 --> 01:15:01,760
be fine with that right that's something

1927
01:15:01,760 --> 01:15:03,040
something we've talked about in teep

1928
01:15:03,040 --> 01:15:04,640
hence this discussion

1929
01:15:04,640 --> 01:15:06,320
or if we say no no there's really

1930
01:15:06,320 --> 01:15:08,400
nothing that's uh type specific here

1931
01:15:08,400 --> 01:15:10,320
this is all generalizable and it should

1932
01:15:10,320 --> 01:15:12,080
really be in the right in the uh eat

1933
01:15:12,080 --> 01:15:13,520
spec or at least in the rats working

1934
01:15:13,520 --> 01:15:15,040
group and so that's the most important

1935
01:15:15,040 --> 01:15:16,800
that's the top bullet here that's the

1936
01:15:16,800 --> 01:15:18,880
most important one because uh in the

1937
01:15:18,880 --> 01:15:20,480
next meeting right rats is going to try

1938
01:15:20,480 --> 01:15:22,400
to decide should we start working group

1939
01:15:22,400 --> 01:15:24,640
last call on eat and kind of ignore this

1940
01:15:24,640 --> 01:15:27,280
or have the discussion going on parallel

1941
01:15:27,280 --> 01:15:29,360
or just leave it to t right that's the

1942
01:15:29,360 --> 01:15:31,280
what we want the feedback to rats to be

1943
01:15:31,280 --> 01:15:33,280
for the next meeting so

1944
01:15:33,280 --> 01:15:35,199
now that i've clarified that and given

1945
01:15:35,199 --> 01:15:37,199
some examples anybody else have opinions

1946
01:15:37,199 --> 01:15:38,400
on this because otherwise i'm going to

1947
01:15:38,400 --> 01:15:40,159
summarize maybe

1948
01:15:40,159 --> 01:15:41,040
a

1949
01:15:41,040 --> 01:15:42,800
straw man from what i've heard so far

1950
01:15:42,800 --> 01:15:45,840
just to help honest okay

1951
01:15:45,840 --> 01:15:48,239
i think

1952
01:15:48,400 --> 01:15:50,800
if i were to put out a straw man so far

1953
01:15:50,800 --> 01:15:53,120
based on list discussion so far the path

1954
01:15:53,120 --> 01:15:55,600
of least resistance might be to say that

1955
01:15:55,600 --> 01:15:57,520
at least for now it's specific to type

1956
01:15:57,520 --> 01:15:59,040
and a t profile

1957
01:15:59,040 --> 01:16:02,159
uh but with a vendor extensible space so

1958
01:16:02,159 --> 01:16:04,880
to eric's point okay in which case we

1959
01:16:04,880 --> 01:16:06,960
keep would have to define a new claim

1960
01:16:06,960 --> 01:16:08,960
we would have to define a new say i

1961
01:16:08,960 --> 01:16:10,880
enter registry for the values and a way

1962
01:16:10,880 --> 01:16:13,440
for vendors to extend them and then the

1963
01:16:13,440 --> 01:16:15,440
bottom bullet becomes a teat question

1964
01:16:15,440 --> 01:16:18,560
and not a rat's question okay but that

1965
01:16:18,560 --> 01:16:20,239
seems to be the path of least resistance

1966
01:16:20,239 --> 01:16:22,320
based on the thread so far but since

1967
01:16:22,320 --> 01:16:24,320
this is a different direction from what

1968
01:16:24,320 --> 01:16:26,239
type has said so far this is our chance

1969
01:16:26,239 --> 01:16:28,480
to either change our minds or to stick

1970
01:16:28,480 --> 01:16:30,719
the course or whatever so

1971
01:16:30,719 --> 01:16:33,280
um but i think that's what i that when i

1972
01:16:33,280 --> 01:16:35,440
saw the last responses from

1973
01:16:35,440 --> 01:16:37,920
geary and lawrence i think that was

1974
01:16:37,920 --> 01:16:39,360
their conclusion that they did not see

1975
01:16:39,360 --> 01:16:42,000
any consensus that there was some

1976
01:16:42,000 --> 01:16:43,760
generally applicable thing

1977
01:16:43,760 --> 01:16:45,280
but if you think that there is please

1978
01:16:45,280 --> 01:16:46,719
come to the mic and say so because

1979
01:16:46,719 --> 01:16:48,239
that's probably the default path that

1980
01:16:48,239 --> 01:16:52,080
rash where the rats would advise us on

1981
01:16:52,320 --> 01:16:55,599
if i'm reading the thread correctly

1982
01:16:56,640 --> 01:16:58,239
nancy you're also a co-chair of rats

1983
01:16:58,239 --> 01:16:59,760
anything else you want to add that that

1984
01:16:59,760 --> 01:17:01,679
would help the rats versus a deep

1985
01:17:01,679 --> 01:17:04,080
discussion

1986
01:17:07,280 --> 01:17:09,600
no i think you you're stating all of the

1987
01:17:09,600 --> 01:17:11,120
issues and i'm

1988
01:17:11,120 --> 01:17:13,280
frankly i'm i'm trying to make sense of

1989
01:17:13,280 --> 01:17:15,120
of the email thread as well

1990
01:17:15,120 --> 01:17:16,560
i'm trying to figure out how we get

1991
01:17:16,560 --> 01:17:19,199
consensus

1992
01:17:23,840 --> 01:17:25,520
okay if i don't hear everybody come to

1993
01:17:25,520 --> 01:17:27,120
mike then i'm going to

1994
01:17:27,120 --> 01:17:28,480
say that we don't have any other more

1995
01:17:28,480 --> 01:17:30,880
strict guidance to rats other than sure

1996
01:17:30,880 --> 01:17:33,280
we'll deal with it in a teep if somebody

1997
01:17:33,280 --> 01:17:35,360
else wants to argue that is general feel

1998
01:17:35,360 --> 01:17:37,520
free but otherwise because kind of the

1999
01:17:37,520 --> 01:17:40,239
the worst case uh danger would just be

2000
01:17:40,239 --> 01:17:41,840
we define something that's keep specific

2001
01:17:41,840 --> 01:17:43,280
it turns out to be general and now we've

2002
01:17:43,280 --> 01:17:44,719
got two claims that do the same thing in

2003
01:17:44,719 --> 01:17:46,960
the future right that would be the risk

2004
01:17:46,960 --> 01:17:49,120
and maybe that will never happen but uh

2005
01:17:49,120 --> 01:17:51,520
all right brendan

2006
01:17:51,520 --> 01:17:53,840
okay i'll take them in order it looks to

2007
01:17:53,840 --> 01:17:56,159
me like it's a general problem whether

2008
01:17:56,159 --> 01:17:57,520
or not there's a this is a general

2009
01:17:57,520 --> 01:17:59,280
solution i don't know but there's

2010
01:17:59,280 --> 01:18:01,600
definitely a general problem um you can

2011
01:18:01,600 --> 01:18:04,080
see that because suit has identified the

2012
01:18:04,080 --> 01:18:06,960
problem as well so it's definitely not t

2013
01:18:06,960 --> 01:18:08,320
specific

2014
01:18:08,320 --> 01:18:10,639
um

2015
01:18:10,800 --> 01:18:13,760
i think that class identifiers should be

2016
01:18:13,760 --> 01:18:16,640
scoped by vendor or profile i don't

2017
01:18:16,640 --> 01:18:18,800
think they need to be globally unique um

2018
01:18:18,800 --> 01:18:20,000
because

2019
01:18:20,000 --> 01:18:23,840
in general you can't find

2020
01:18:23,840 --> 01:18:26,719
something that has a class that's

2021
01:18:26,719 --> 01:18:29,040
relevant for security or compatibility

2022
01:18:29,040 --> 01:18:30,719
that doesn't come with either a vendor

2023
01:18:30,719 --> 01:18:33,040
or a profile

2024
01:18:33,040 --> 01:18:34,640
if you have if you can come up with a

2025
01:18:34,640 --> 01:18:36,719
counter example then i'll i'll step back

2026
01:18:36,719 --> 01:18:38,560
from that one but i don't think that

2027
01:18:38,560 --> 01:18:42,320
they can ever be globally unique

2028
01:18:43,040 --> 01:18:46,239
i i i plead with you to please make sure

2029
01:18:46,239 --> 01:18:48,239
that it's opaque and to enforce somehow

2030
01:18:48,239 --> 01:18:50,960
that it's opaque

2031
01:18:50,960 --> 01:18:53,760
and my preference is a uuid because you

2032
01:18:53,760 --> 01:18:56,719
can turn anything into a uuid by using

2033
01:18:56,719 --> 01:19:00,000
the type 5 uuid which just hashes it and

2034
01:19:00,000 --> 01:19:01,920
throws away a bunch of the bits

2035
01:19:01,920 --> 01:19:04,239
so that's my preference because it ends

2036
01:19:04,239 --> 01:19:06,640
up being enforceably opaque because the

2037
01:19:06,640 --> 01:19:08,320
content actually just doesn't mean

2038
01:19:08,320 --> 01:19:10,719
anything other than allow you to uh

2039
01:19:10,719 --> 01:19:14,159
match it to something you already know

2040
01:19:14,400 --> 01:19:16,159
thank you um i think that was a very

2041
01:19:16,159 --> 01:19:17,440
useful comment and thank you for

2042
01:19:17,440 --> 01:19:18,800
explaining the rationale that makes a

2043
01:19:18,800 --> 01:19:20,080
lot of sense to me so i'm just going to

2044
01:19:20,080 --> 01:19:22,560
repeat back what i heard because i think

2045
01:19:22,560 --> 01:19:24,400
i agree with everything that you said

2046
01:19:24,400 --> 01:19:26,320
the only one that's i think debatable is

2047
01:19:26,320 --> 01:19:27,920
the last one but i tend to agree with

2048
01:19:27,920 --> 01:19:29,120
you on it

2049
01:19:29,120 --> 01:19:30,640
and so

2050
01:19:30,640 --> 01:19:33,120
i think the proposal is that

2051
01:19:33,120 --> 01:19:34,800
the

2052
01:19:34,800 --> 01:19:38,400
claim id right meaning the the seabor

2053
01:19:38,400 --> 01:19:41,280
integer number or label or whatever um

2054
01:19:41,280 --> 01:19:43,120
is actually general

2055
01:19:43,120 --> 01:19:45,920
and the values of it

2056
01:19:45,920 --> 01:19:47,760
are either vendor specific or up to the

2057
01:19:47,760 --> 01:19:49,920
profile so in other words the eat spec

2058
01:19:49,920 --> 01:19:52,400
could say here is the well-known claim

2059
01:19:52,400 --> 01:19:54,000
but the values of it need to be

2060
01:19:54,000 --> 01:19:55,600
specified one of the requirements for a

2061
01:19:55,600 --> 01:19:57,840
profile is to you know cover how the

2062
01:19:57,840 --> 01:19:59,600
values are done but there's still a way

2063
01:19:59,600 --> 01:20:01,360
to do it for vendors and a way for the

2064
01:20:01,360 --> 01:20:02,800
profile to find well-known values i'm

2065
01:20:02,800 --> 01:20:03,760
repeating back what i think your

2066
01:20:03,760 --> 01:20:05,360
proposal is right

2067
01:20:05,360 --> 01:20:07,199
um and then out of the values right

2068
01:20:07,199 --> 01:20:09,199
regardless of whether it's done by the

2069
01:20:09,199 --> 01:20:11,600
vendor the profile then it uh

2070
01:20:11,600 --> 01:20:15,920
must be opaque okay and uh you like uuid

2071
01:20:15,920 --> 01:20:17,520
specifically because it guarantees that

2072
01:20:17,520 --> 01:20:19,360
it's opaque well and the other reasons

2073
01:20:19,360 --> 01:20:21,760
too even if it's a little bit longer um

2074
01:20:21,760 --> 01:20:23,360
if you're trying to bite string or

2075
01:20:23,360 --> 01:20:24,639
whatever the danger is somebody would

2076
01:20:24,639 --> 01:20:26,000
try to put structure in there and you

2077
01:20:26,000 --> 01:20:28,000
wouldn't like that and so uib actually

2078
01:20:28,000 --> 01:20:30,000
enforces the annual peakness requirement

2079
01:20:30,000 --> 01:20:32,239
did i get all that right

2080
01:20:32,239 --> 01:20:34,000
sounds good to me

2081
01:20:34,000 --> 01:20:35,679
okay but yeah thank you the thank you

2082
01:20:35,679 --> 01:20:37,120
for the technical rationales for all of

2083
01:20:37,120 --> 01:20:40,159
those that was very useful

2084
01:20:41,760 --> 01:20:42,560
okay

2085
01:20:42,560 --> 01:20:44,000
anyone else have an opinion because

2086
01:20:44,000 --> 01:20:46,320
otherwise i'm gonna i since i like uh

2087
01:20:46,320 --> 01:20:48,960
brendan's uh summary there um i'd like

2088
01:20:48,960 --> 01:20:51,679
to uh see other any objections to that

2089
01:20:51,679 --> 01:20:53,360
as the teep recommendation as we go into

2090
01:20:53,360 --> 01:20:54,800
the rats working group next that the

2091
01:20:54,800 --> 01:20:57,120
request for uh rats would be hey can you

2092
01:20:57,120 --> 01:20:58,480
define a claim

2093
01:20:58,480 --> 01:21:01,679
um but uh leave it up to the vendor and

2094
01:21:01,679 --> 01:21:03,440
the profile to define the values to go

2095
01:21:03,440 --> 01:21:05,839
with the claim

2096
01:21:06,320 --> 01:21:08,159
i i want to make sure we're capturing it

2097
01:21:08,159 --> 01:21:10,400
in the notes well as well

2098
01:21:10,400 --> 01:21:11,199
yeah

2099
01:21:11,199 --> 01:21:14,320
i mean like oem id right the oem id the

2100
01:21:14,320 --> 01:21:15,520
the rest working group is not going to

2101
01:21:15,520 --> 01:21:17,280
actually define the values of oem id

2102
01:21:17,280 --> 01:21:18,320
right it's going to define like a

2103
01:21:18,320 --> 01:21:20,480
registry or something or a way or it

2104
01:21:20,480 --> 01:21:22,000
does right it defines a way for you to

2105
01:21:22,000 --> 01:21:23,360
figure out what goes in there right

2106
01:21:23,360 --> 01:21:25,600
remember if it's your your

2107
01:21:25,600 --> 01:21:27,040
one of the other id numbering spaces

2108
01:21:27,040 --> 01:21:28,639
already exist but the point is that each

2109
01:21:28,639 --> 01:21:30,239
spec doesn't enumerate the values right

2110
01:21:30,239 --> 01:21:31,679
says here's how to put stuff in there

2111
01:21:31,679 --> 01:21:33,199
and this is this case where it could say

2112
01:21:33,199 --> 01:21:35,120
the profile needs to do that ayanna

2113
01:21:35,120 --> 01:21:37,360
needs to do that whatever so

2114
01:21:37,360 --> 01:21:39,600
all right hank

2115
01:21:39,600 --> 01:21:42,400
so um yeah i think that t

2116
01:21:42,400 --> 01:21:45,120
requires this this uh opaqueness and

2117
01:21:45,120 --> 01:21:47,040
everything they can transform to a type

2118
01:21:47,040 --> 01:21:50,080
five uuid on the evidence side or at the

2119
01:21:50,080 --> 01:21:51,840
station result side of things which is

2120
01:21:51,840 --> 01:21:53,920
fine and i think brandon said the

2121
01:21:53,920 --> 01:21:56,639
critical words because you know that

2122
01:21:56,639 --> 01:21:58,560
so on the other hand you have to know

2123
01:21:58,560 --> 01:21:59,440
that

2124
01:21:59,440 --> 01:22:01,760
so that is something you that there

2125
01:22:01,760 --> 01:22:05,120
where a uu id might not be uh

2126
01:22:05,120 --> 01:22:06,480
sufficient but that's not a cheap

2127
01:22:06,480 --> 01:22:10,080
problem i think so i would agree with uh

2128
01:22:10,080 --> 01:22:11,600
okay

2129
01:22:11,600 --> 01:22:13,920
is there any objections to saying that

2130
01:22:13,920 --> 01:22:15,679
uh the the

2131
01:22:15,679 --> 01:22:18,560
my summary of uh what brendan said is

2132
01:22:18,560 --> 01:22:19,440
the

2133
01:22:19,440 --> 01:22:20,320
uh

2134
01:22:20,320 --> 01:22:22,239
consensus of those in the room i'm not

2135
01:22:22,239 --> 01:22:24,400
saying it is yet i'm saying okay would

2136
01:22:24,400 --> 01:22:26,080
that be the consensus of the room if you

2137
01:22:26,080 --> 01:22:28,480
don't uh think that that is the uh

2138
01:22:28,480 --> 01:22:30,239
consensus you have a technical uh

2139
01:22:30,239 --> 01:22:32,159
argument against that then please come

2140
01:22:32,159 --> 01:22:34,400
to the mic

2141
01:22:34,400 --> 01:22:36,159
we're trying to

2142
01:22:36,159 --> 01:22:38,639
form a consensus so that is a proposed

2143
01:22:38,639 --> 01:22:40,719
consensus do people um

2144
01:22:40,719 --> 01:22:42,159
like that or not i don't know if you

2145
01:22:42,159 --> 01:22:44,480
want to do a a call of hands on this one

2146
01:22:44,480 --> 01:22:46,000
or just a uh since nobody's coming to

2147
01:22:46,000 --> 01:22:48,159
the mic if we just say that that seems

2148
01:22:48,159 --> 01:22:49,600
to be the sense of the room right now so

2149
01:22:49,600 --> 01:22:51,679
up to you nancy

2150
01:22:51,679 --> 01:22:54,400
yeah i mean i could take a poll or um

2151
01:22:54,400 --> 01:22:56,639
why didn't i do it the reverse if there

2152
01:22:56,639 --> 01:22:59,920
are any objections

2153
01:22:59,920 --> 01:23:02,159
okay

2154
01:23:02,800 --> 01:23:05,679
but now i have to capture

2155
01:23:05,679 --> 01:23:07,920
what we're doing consensus for

2156
01:23:07,920 --> 01:23:10,159
i'm going to try to pipe um something

2157
01:23:10,159 --> 01:23:11,520
into chat here

2158
01:23:11,520 --> 01:23:14,719
each should do a claim but leave

2159
01:23:14,719 --> 01:23:19,760
values to values to be defined by um

2160
01:23:19,760 --> 01:23:21,360
vendors

2161
01:23:21,360 --> 01:23:25,840
and profiles okay that's the first piece

2162
01:23:25,840 --> 01:23:27,120
okay

2163
01:23:27,120 --> 01:23:28,719
um and i think that's separate from the

2164
01:23:28,719 --> 01:23:30,480
actual format you can put it into two of

2165
01:23:30,480 --> 01:23:31,440
them

2166
01:23:31,440 --> 01:23:34,560
okay and then number two um

2167
01:23:34,560 --> 01:23:35,440
uh

2168
01:23:35,440 --> 01:23:39,600
value should be a uuid

2169
01:23:39,600 --> 01:23:42,719
to guarantee

2170
01:23:43,040 --> 01:23:44,000
uh

2171
01:23:44,000 --> 01:23:47,520
uniqueness now uh previously what keep

2172
01:23:47,520 --> 01:23:49,679
had said is the deep working group as a

2173
01:23:49,679 --> 01:23:51,600
whole does not actually care which

2174
01:23:51,600 --> 01:23:53,520
format it is only that we care that it's

2175
01:23:53,520 --> 01:23:55,760
unique and we would leave it to to uh

2176
01:23:55,760 --> 01:23:58,320
rest to decide that um and so okay there

2177
01:23:58,320 --> 01:24:01,400
we go

2178
01:24:07,120 --> 01:24:09,280
i don't know that i stated it well but

2179
01:24:09,280 --> 01:24:13,480
um it's close enough

2180
01:24:17,360 --> 01:24:19,760
all right i think we have

2181
01:24:19,760 --> 01:24:21,679
okay

2182
01:24:21,679 --> 01:24:23,920
um okay

2183
01:24:23,920 --> 01:24:25,679
i'm gonna give it another minute because

2184
01:24:25,679 --> 01:24:26,800
we've got

2185
01:24:26,800 --> 01:24:31,280
48 participants but only 13 have voted

2186
01:24:31,280 --> 01:24:32,960
and then i'm going to propose that

2187
01:24:32,960 --> 01:24:34,400
that's really the only one that you have

2188
01:24:34,400 --> 01:24:36,960
to call on because my opinion is based

2189
01:24:36,960 --> 01:24:39,199
uh if the opinion of that one is that

2190
01:24:39,199 --> 01:24:41,760
the the yes is the consensus then the

2191
01:24:41,760 --> 01:24:43,440
actual discussion other ones is not a

2192
01:24:43,440 --> 01:24:46,800
teep thing it's a uh it's a uh rat's

2193
01:24:46,800 --> 01:24:48,239
thing on the bottom bullet here the only

2194
01:24:48,239 --> 01:24:50,320
thing that might be worth uh

2195
01:24:50,320 --> 01:24:52,560
doing it is do we agree that the value

2196
01:24:52,560 --> 01:24:54,560
needs to be opaque right as opposed to

2197
01:24:54,560 --> 01:24:56,239
the value needs to be a uid or whatever

2198
01:24:56,239 --> 01:24:58,000
which that should be up to how they meet

2199
01:24:58,000 --> 01:24:59,040
the requirement that's just our

2200
01:24:59,040 --> 01:25:00,560
preferences right now and that's a rat's

2201
01:25:00,560 --> 01:25:02,800
working group discussion but um does the

2202
01:25:02,800 --> 01:25:04,480
value need to be opaque would be a fair

2203
01:25:04,480 --> 01:25:06,719
way to ask the question

2204
01:25:06,719 --> 01:25:07,679
okay

2205
01:25:07,679 --> 01:25:09,920
well i agree with you that that first we

2206
01:25:09,920 --> 01:25:13,120
need to agree that it should do

2207
01:25:13,120 --> 01:25:14,560
yeah the claim

2208
01:25:14,560 --> 01:25:16,159
not us

2209
01:25:16,159 --> 01:25:18,400
um

2210
01:25:20,080 --> 01:25:23,520
okay so we only have one

2211
01:25:23,520 --> 01:25:24,960
no vote

2212
01:25:24,960 --> 01:25:26,400
so i think we have

2213
01:25:26,400 --> 01:25:28,400
a good consensus here because we've got

2214
01:25:28,400 --> 01:25:30,639
16 positive votes

2215
01:25:30,639 --> 01:25:33,120
okay so i'm going to call it and i think

2216
01:25:33,120 --> 01:25:36,000
we have guidance

2217
01:25:36,159 --> 01:25:37,920
so do you want to ask the other question

2218
01:25:37,920 --> 01:25:39,280
just leave that to the rats working

2219
01:25:39,280 --> 01:25:40,800
group and say to take the rest of the

2220
01:25:40,800 --> 01:25:42,639
discussion into rats

2221
01:25:42,639 --> 01:25:46,239
well let me let me just ask

2222
01:25:47,280 --> 01:25:50,639
the second one is the value should be uh

2223
01:25:50,639 --> 01:25:54,120
um okay

2224
01:25:55,679 --> 01:25:58,430
i'm just gonna say should the value be

2225
01:25:58,430 --> 01:26:00,000
[Music]

2226
01:26:00,000 --> 01:26:01,760
opaque

2227
01:26:01,760 --> 01:26:05,040
okay where uuid is opaque uh a black

2228
01:26:05,040 --> 01:26:06,880
blob may or may not be opaque but we're

2229
01:26:06,880 --> 01:26:08,239
not asking the question about the format

2230
01:26:08,239 --> 01:26:10,560
about this is opaqueness an actual

2231
01:26:10,560 --> 01:26:13,520
requirement from keep

2232
01:26:13,840 --> 01:26:17,600
okay so i've started a new poll

2233
01:26:17,920 --> 01:26:19,840
whether the value should be

2234
01:26:19,840 --> 01:26:22,840
opaque

2235
01:26:23,199 --> 01:26:24,560
that's that's looking pretty strong

2236
01:26:24,560 --> 01:26:27,280
consensus there

2237
01:26:27,600 --> 01:26:29,040
yeah i'm gonna give it another minute

2238
01:26:29,040 --> 01:26:32,040
though

2239
01:26:38,800 --> 01:26:41,040
this may actually help us move forward

2240
01:26:41,040 --> 01:26:45,320
on the eat draft too

2241
01:26:54,080 --> 01:26:55,360
okay i'm going to give it 10 more

2242
01:26:55,360 --> 01:26:58,360
seconds

2243
01:27:07,120 --> 01:27:09,360
okay i think we've kind of stabilized so

2244
01:27:09,360 --> 01:27:10,480
um

2245
01:27:10,480 --> 01:27:11,760
okay

2246
01:27:11,760 --> 01:27:14,320
that one you have strong consensus on so

2247
01:27:14,320 --> 01:27:16,639
i think we're good to go

2248
01:27:16,639 --> 01:27:18,719
okay let's go on to the next slide then

2249
01:27:18,719 --> 01:27:20,800
thank you all this has been a very

2250
01:27:20,800 --> 01:27:23,120
useful discussion to me so

2251
01:27:23,120 --> 01:27:25,040
uh but before we leave the eat uh

2252
01:27:25,040 --> 01:27:26,330
section uh

2253
01:27:26,330 --> 01:27:27,520
[Music]

2254
01:27:27,520 --> 01:27:30,560
uh i recorded for the first question uh

2255
01:27:30,560 --> 01:27:33,120
consensus for the second question on

2256
01:27:33,120 --> 01:27:34,480
well you should be a big strong

2257
01:27:34,480 --> 01:27:37,440
consensus and i don't think you did a

2258
01:27:37,440 --> 01:27:40,880
ball on the ua uuid itself right or did

2259
01:27:40,880 --> 01:27:42,159
i miss no

2260
01:27:42,159 --> 01:27:44,080
i didn't correct i'm saying

2261
01:27:44,080 --> 01:27:45,920
based on the results of the other two

2262
01:27:45,920 --> 01:27:48,800
this one is a uh rats uh discussion uh

2263
01:27:48,800 --> 01:27:51,679
that okay really doesn't care

2264
01:27:51,679 --> 01:27:52,880
and that

2265
01:27:52,880 --> 01:27:54,080
it should be rats that calls that

2266
01:27:54,080 --> 01:27:56,239
question that teep

2267
01:27:56,239 --> 01:27:57,600
yeah

2268
01:27:57,600 --> 01:28:00,880
thank you for capturing that thomas

2269
01:28:00,880 --> 01:28:01,679
yeah

2270
01:28:01,679 --> 01:28:05,199
next slide um nancy

2271
01:28:06,960 --> 01:28:07,840
okay

2272
01:28:07,840 --> 01:28:09,120
um

2273
01:28:09,120 --> 01:28:09,920
so

2274
01:28:09,920 --> 01:28:10,960
uh

2275
01:28:10,960 --> 01:28:13,120
trying to finish out the eat stuff the

2276
01:28:13,120 --> 01:28:15,280
eat document section seven covers

2277
01:28:15,280 --> 01:28:17,199
requirements for an eat profile there's

2278
01:28:17,199 --> 01:28:19,199
this long list of requirements there

2279
01:28:19,199 --> 01:28:21,120
some of those requirements are covered

2280
01:28:21,120 --> 01:28:23,920
in the t document right now like use of

2281
01:28:23,920 --> 01:28:25,679
json sieber or both where we say it's

2282
01:28:25,679 --> 01:28:27,679
only seabor

2283
01:28:27,679 --> 01:28:28,800
like the second one from the bottom

2284
01:28:28,800 --> 01:28:31,120
seaboard tags we previously last i have

2285
01:28:31,120 --> 01:28:32,320
a discussion and we're not going to use

2286
01:28:32,320 --> 01:28:33,920
the seaport tag it's just raw because

2287
01:28:33,920 --> 01:28:36,239
you always know that it's uh a uh they

2288
01:28:36,239 --> 01:28:38,080
always know that it's um

2289
01:28:38,080 --> 01:28:38,880
a

2290
01:28:38,880 --> 01:28:40,000
uh

2291
01:28:40,000 --> 01:28:41,040
an eat

2292
01:28:41,040 --> 01:28:43,280
uh and so on but not all of them so next

2293
01:28:43,280 --> 01:28:44,400
slide please you can see that i said

2294
01:28:44,400 --> 01:28:45,600
long list of requirements says if you're

2295
01:28:45,600 --> 01:28:46,639
going to find a neat profile you got to

2296
01:28:46,639 --> 01:28:48,159
cover all those that's what the new

2297
01:28:48,159 --> 01:28:50,480
document says okay

2298
01:28:50,480 --> 01:28:51,920
so today

2299
01:28:51,920 --> 01:28:53,600
um not all of those are covered in the

2300
01:28:53,600 --> 01:28:55,280
tea protocol spec how many of those are

2301
01:28:55,280 --> 01:28:56,560
right so there's two ways to resolve

2302
01:28:56,560 --> 01:28:58,960
this issue one is we just cover the

2303
01:28:58,960 --> 01:29:00,719
missing ones by putting those in the t

2304
01:29:00,719 --> 01:29:02,080
protocol spec

2305
01:29:02,080 --> 01:29:03,840
another possibility is to say we could

2306
01:29:03,840 --> 01:29:05,520
separate all the eprofile stuff and put

2307
01:29:05,520 --> 01:29:07,840
it into the same spec okay because it's

2308
01:29:07,840 --> 01:29:09,920
already in the t protocol the pieces of

2309
01:29:09,920 --> 01:29:11,600
it that are answered right now

2310
01:29:11,600 --> 01:29:14,080
the default answer is the same spec but

2311
01:29:14,080 --> 01:29:15,840
i just wanted to verify is there anybody

2312
01:29:15,840 --> 01:29:17,199
that has an argument as to why that

2313
01:29:17,199 --> 01:29:18,960
should be separated out into a separate

2314
01:29:18,960 --> 01:29:20,719
spec

2315
01:29:20,719 --> 01:29:22,400
things that could have been reasons for

2316
01:29:22,400 --> 01:29:24,400
b that do not currently apply is if you

2317
01:29:24,400 --> 01:29:25,199
had

2318
01:29:25,199 --> 01:29:26,880
multiple protocols that were all going

2319
01:29:26,880 --> 01:29:29,840
to be using the same eat

2320
01:29:29,840 --> 01:29:31,360
profile but that's currently not the

2321
01:29:31,360 --> 01:29:32,960
case

2322
01:29:32,960 --> 01:29:35,840
it would be a separate spec if say there

2323
01:29:35,840 --> 01:29:37,600
was a reason to

2324
01:29:37,600 --> 01:29:39,679
implement the eprotocol without the e

2325
01:29:39,679 --> 01:29:43,199
protocol without the without the eat

2326
01:29:43,199 --> 01:29:45,360
profile that's not the case

2327
01:29:45,360 --> 01:29:47,440
or if there is a reason to say we need

2328
01:29:47,440 --> 01:29:49,520
the tea protocol spec to go to rfc while

2329
01:29:49,520 --> 01:29:50,800
we're still working on it because it's

2330
01:29:50,800 --> 01:29:52,960
optional that's also not the case so all

2331
01:29:52,960 --> 01:29:54,400
the reasons i can think of for b don't

2332
01:29:54,400 --> 01:29:56,719
apply and so right now the proposal is

2333
01:29:56,719 --> 01:29:57,920
we're going to address this by putting

2334
01:29:57,920 --> 01:29:59,920
all the other requirements there into

2335
01:29:59,920 --> 01:30:01,760
the actual heat protocol spec unless

2336
01:30:01,760 --> 01:30:04,159
there's any

2337
01:30:04,840 --> 01:30:08,159
objections okay

2338
01:30:08,159 --> 01:30:09,440
if there's nobody that comes to the mic

2339
01:30:09,440 --> 01:30:11,440
we can go on to the next slide

2340
01:30:11,440 --> 01:30:13,360
because that will be what's not in draft

2341
01:30:13,360 --> 01:30:15,440
07 that would be in draft 08 as we got

2342
01:30:15,440 --> 01:30:18,000
to go through the rest of that list

2343
01:30:18,000 --> 01:30:18,880
okay

2344
01:30:18,880 --> 01:30:22,239
you've got ira agreeing with you

2345
01:30:22,239 --> 01:30:23,360
on the chat

2346
01:30:23,360 --> 01:30:24,719
all right thank you

2347
01:30:24,719 --> 01:30:26,719
next

2348
01:30:26,719 --> 01:30:28,560
okay now we're out of the eat section

2349
01:30:28,560 --> 01:30:32,000
now we are into uh so thanks to those um

2350
01:30:32,000 --> 01:30:34,400
who um oh interesting this one is

2351
01:30:34,400 --> 01:30:35,760
actually out of order i meant to go to

2352
01:30:35,760 --> 01:30:37,360
the suit ones next but that's okay i'll

2353
01:30:37,360 --> 01:30:40,000
still cover this i meant to cover um

2354
01:30:40,000 --> 01:30:41,280
let's see we got half hour left let's

2355
01:30:41,280 --> 01:30:42,960
skip this one we'll come back to it i

2356
01:30:42,960 --> 01:30:45,199
want to get to the suit discussions

2357
01:30:45,199 --> 01:30:47,040
yeah you have exactly

2358
01:30:47,040 --> 01:30:48,960
30 minutes left

2359
01:30:48,960 --> 01:30:50,639
um or a little bit less because you want

2360
01:30:50,639 --> 01:30:52,960
to save the last but but i i'll go as

2361
01:30:52,960 --> 01:30:54,320
long as you can let's skip this one i

2362
01:30:54,320 --> 01:30:55,679
want to get to the suit ones because if

2363
01:30:55,679 --> 01:30:56,960
we don't get the optimization ones

2364
01:30:56,960 --> 01:30:58,080
that's fine this is the optimization

2365
01:30:58,080 --> 01:30:59,679
category yeah

2366
01:30:59,679 --> 01:31:02,000
yeah this is what we're going here okay

2367
01:31:02,000 --> 01:31:04,560
i'm fine giving you the time dave i mean

2368
01:31:04,560 --> 01:31:06,719
the only the only reason why i left the

2369
01:31:06,719 --> 01:31:08,719
five minutes was to assess readiness for

2370
01:31:08,719 --> 01:31:10,080
this draft okay

2371
01:31:10,080 --> 01:31:12,719
okay um yeah okay

2372
01:31:12,719 --> 01:31:14,400
uh yeah there's two there's two ones

2373
01:31:14,400 --> 01:31:16,080
that are purely optimizations and that

2374
01:31:16,080 --> 01:31:17,280
last slide was one of them if we have

2375
01:31:17,280 --> 01:31:18,960
time i'll come back to it but uh but the

2376
01:31:18,960 --> 01:31:20,719
other category is since we got suit

2377
01:31:20,719 --> 01:31:21,840
people here let's go over the suit

2378
01:31:21,840 --> 01:31:24,080
discussions okay other than akira

2379
01:31:24,080 --> 01:31:25,760
already covered one of those so

2380
01:31:25,760 --> 01:31:28,239
uh draft 07 includes brennan's manifest

2381
01:31:28,239 --> 01:31:31,199
examples he went through that last ietf

2382
01:31:31,199 --> 01:31:33,679
and so uh that's sufficient to answer

2383
01:31:33,679 --> 01:31:36,320
issue 41

2384
01:31:36,320 --> 01:31:38,880
but uh last iatf brandon also provided

2385
01:31:38,880 --> 01:31:41,040
suit reports and we walked through those

2386
01:31:41,040 --> 01:31:42,880
last meeting and the suit reports have

2387
01:31:42,880 --> 01:31:44,719
not been added into the t protocol spec

2388
01:31:44,719 --> 01:31:46,560
right now so that's issue number 170 is

2389
01:31:46,560 --> 01:31:48,320
to take brennan's examples that we used

2390
01:31:48,320 --> 01:31:51,120
in the ietf 111 meeting and put those in

2391
01:31:51,120 --> 01:31:53,440
the appendix of the t protocol spec 2

2392
01:31:53,440 --> 01:31:54,960
which is where the manifest examples

2393
01:31:54,960 --> 01:31:56,400
already appear

2394
01:31:56,400 --> 01:31:58,239
so that's issue number 170 not going to

2395
01:31:58,239 --> 01:31:59,679
talk about that because brendan gave

2396
01:31:59,679 --> 01:32:02,239
that presentation last time

2397
01:32:02,239 --> 01:32:05,199
uh then there are uh two other issues

2398
01:32:05,199 --> 01:32:07,440
um one is the one that um actually i

2399
01:32:07,440 --> 01:32:08,880
think that's the wrong number on there

2400
01:32:08,880 --> 01:32:10,320
oh that's the issue number he had the

2401
01:32:10,320 --> 01:32:11,520
pull request number but it's the same

2402
01:32:11,520 --> 01:32:12,960
thing that was a curious presentation

2403
01:32:12,960 --> 01:32:14,880
about the three types of suit manifests

2404
01:32:14,880 --> 01:32:16,080
we've already talked about that in the

2405
01:32:16,080 --> 01:32:17,600
meeting but there's another one that he

2406
01:32:17,600 --> 01:32:18,639
had in the hackathon slide that i'm

2407
01:32:18,639 --> 01:32:20,880
going to talk about now which is um the

2408
01:32:20,880 --> 01:32:22,639
one about deleting a trusted component

2409
01:32:22,639 --> 01:32:26,840
suit manifest so next slide

2410
01:32:31,840 --> 01:32:32,719
okay

2411
01:32:32,719 --> 01:32:34,639
so there's two interrelated questions

2412
01:32:34,639 --> 01:32:37,040
here in this issue as i read it okay

2413
01:32:37,040 --> 01:32:40,080
this has to do with removing or in the

2414
01:32:40,080 --> 01:32:41,760
suit working group we call that

2415
01:32:41,760 --> 01:32:43,440
unlinking right because it's actually

2416
01:32:43,440 --> 01:32:44,960
removed when the last link goes away

2417
01:32:44,960 --> 01:32:47,199
right you're dropping a ref count right

2418
01:32:47,199 --> 01:32:49,760
um the issue in the t uh

2419
01:32:49,760 --> 01:32:51,360
github says removing but we mean

2420
01:32:51,360 --> 01:32:53,440
unlinking okay two related questions

2421
01:32:53,440 --> 01:32:56,960
here first one for a suit is should a

2422
01:32:56,960 --> 01:32:58,320
suit parser

2423
01:32:58,320 --> 01:33:00,480
unlink all the dependent manifests when

2424
01:33:00,480 --> 01:33:01,440
you uh

2425
01:33:01,440 --> 01:33:03,520
all of all the dependencies when you

2426
01:33:03,520 --> 01:33:06,080
unlink the dependent manifest right so

2427
01:33:06,080 --> 01:33:08,960
if a references b and you say unlink a

2428
01:33:08,960 --> 01:33:11,199
does that automatically unlink b

2429
01:33:11,199 --> 01:33:13,520
um or presumably i'm guessing the answer

2430
01:33:13,520 --> 01:33:15,280
is only when the ref count on a goes to

2431
01:33:15,280 --> 01:33:17,440
zero would you unlink b right but that's

2432
01:33:17,440 --> 01:33:19,840
the question that's in the issue here

2433
01:33:19,840 --> 01:33:23,040
and then the second question is um well

2434
01:33:23,040 --> 01:33:25,600
keep is a protocol for doing things but

2435
01:33:25,600 --> 01:33:27,360
what happens if you try to run some

2436
01:33:27,360 --> 01:33:29,520
alternate thing like running as you know

2437
01:33:29,520 --> 01:33:31,520
some admin or whatever outside of t

2438
01:33:31,520 --> 01:33:33,840
protocol is there a way to unlink stuff

2439
01:33:33,840 --> 01:33:35,360
and what happens if you do that okay

2440
01:33:35,360 --> 01:33:37,679
because if you do that um you may be

2441
01:33:37,679 --> 01:33:39,920
doing it without having a brand new suit

2442
01:33:39,920 --> 01:33:42,159
manifest that says to delete it is it

2443
01:33:42,159 --> 01:33:43,840
possible to delete a component that was

2444
01:33:43,840 --> 01:33:46,000
added through suit at suit manifest

2445
01:33:46,000 --> 01:33:48,000
without having a suit manifest that

2446
01:33:48,000 --> 01:33:50,080
updates it okay or do you have to do it

2447
01:33:50,080 --> 01:33:51,760
through a suit manifest that's what q2

2448
01:33:51,760 --> 01:33:52,880
is okay

2449
01:33:52,880 --> 01:33:55,520
and so option number one okay

2450
01:33:55,520 --> 01:33:58,400
is you actually require having a new

2451
01:33:58,400 --> 01:34:00,000
manifest okay even if you're doing it

2452
01:34:00,000 --> 01:34:01,520
locally you have to construct a suit

2453
01:34:01,520 --> 01:34:03,040
manifest that bumps the manifest

2454
01:34:03,040 --> 01:34:06,239
sequence number um and that's what

2455
01:34:06,239 --> 01:34:07,840
actually the suit processor is what

2456
01:34:07,840 --> 01:34:09,280
drops the ref count right so the only

2457
01:34:09,280 --> 01:34:11,280
way to drop the ref count taken by suit

2458
01:34:11,280 --> 01:34:13,360
is to have a new suit manifest higher

2459
01:34:13,360 --> 01:34:14,960
verge sequence number or manifest

2460
01:34:14,960 --> 01:34:16,960
sequence number that drops the ref count

2461
01:34:16,960 --> 01:34:19,520
right that would be option one

2462
01:34:19,520 --> 01:34:21,600
option number two point one has

2463
01:34:21,600 --> 01:34:22,719
mentioned the issue but i don't think

2464
01:34:22,719 --> 01:34:25,360
anybody likes this one which is uh you

2465
01:34:25,360 --> 01:34:27,520
could try to have some suit parser that

2466
01:34:27,520 --> 01:34:30,239
tries to undo a bait so if you have a

2467
01:34:30,239 --> 01:34:32,400
local undo then it tries to look at the

2468
01:34:32,400 --> 01:34:34,159
suit manifest and figure out how to how

2469
01:34:34,159 --> 01:34:35,920
to unlink and uninstall it according to

2470
01:34:35,920 --> 01:34:37,600
all the correct stuff in general this

2471
01:34:37,600 --> 01:34:38,880
one just doesn't work with all soup

2472
01:34:38,880 --> 01:34:40,880
manifest and that's why it's there for

2473
01:34:40,880 --> 01:34:42,880
completeness but uh yeah exactly please

2474
01:34:42,880 --> 01:34:45,520
no screams exactly yeah so that one is

2475
01:34:45,520 --> 01:34:47,280
really we should cross that one off and

2476
01:34:47,280 --> 01:34:49,440
everybody agrees that's not it okay

2477
01:34:49,440 --> 01:34:51,600
but then the other possibility is should

2478
01:34:51,600 --> 01:34:54,320
there be a uh suit uninstalled so that

2479
01:34:54,320 --> 01:34:55,920
the same suit manifest they did the

2480
01:34:55,920 --> 01:34:57,840
install said should you need to

2481
01:34:57,840 --> 01:34:59,520
uninstall this later without having to

2482
01:34:59,520 --> 01:35:01,920
manifest here's what you would do

2483
01:35:01,920 --> 01:35:03,520
and so if you tried to do something

2484
01:35:03,520 --> 01:35:05,520
locally and you didn't have to create a

2485
01:35:05,520 --> 01:35:07,679
new suit manifest so it's really between

2486
01:35:07,679 --> 01:35:10,560
option 1 and option 2.2 and this is

2487
01:35:10,560 --> 01:35:12,320
really a question for the suit working

2488
01:35:12,320 --> 01:35:14,719
group to weigh in on other than um the

2489
01:35:14,719 --> 01:35:17,920
tpu's case is you can see the the the

2490
01:35:17,920 --> 01:35:20,400
analogy that the filer had is the

2491
01:35:20,400 --> 01:35:23,119
equivalent of like apt remove dash y foo

2492
01:35:23,119 --> 01:35:24,880
kind of equivalent for like an admin on

2493
01:35:24,880 --> 01:35:26,960
the machine does he have to do that by

2494
01:35:26,960 --> 01:35:28,800
generating a new suit manifest or can

2495
01:35:28,800 --> 01:35:31,920
you do that by uh by some other means

2496
01:35:31,920 --> 01:35:33,520
with the actual uninstall commands were

2497
01:35:33,520 --> 01:35:34,960
embedded in the last in the actual

2498
01:35:34,960 --> 01:35:37,520
install manifest and so uh that's what

2499
01:35:37,520 --> 01:35:40,400
issue 168 was filed against um by our

2500
01:35:40,400 --> 01:35:41,760
japanese colleagues or at least one of

2501
01:35:41,760 --> 01:35:43,840
them

2502
01:35:44,239 --> 01:35:45,920
so feedback on this one especially from

2503
01:35:45,920 --> 01:35:49,199
suit folks like brendan

2504
01:35:51,119 --> 01:35:54,480
right and so the the issue that bothers

2505
01:35:54,480 --> 01:35:57,280
me with all of this is a question of

2506
01:35:57,280 --> 01:35:58,639
privilege

2507
01:35:58,639 --> 01:36:00,159
well actually there's two there's two

2508
01:36:00,159 --> 01:36:02,880
issues the first is exactly how do you

2509
01:36:02,880 --> 01:36:05,360
obtain the privileges to invoke and

2510
01:36:05,360 --> 01:36:07,840
unlink

2511
01:36:07,840 --> 01:36:11,199
when you are not the signing author

2512
01:36:11,199 --> 01:36:12,320
and

2513
01:36:12,320 --> 01:36:14,480
that's out of protocol that's out of

2514
01:36:14,480 --> 01:36:15,600
document

2515
01:36:15,600 --> 01:36:17,360
um

2516
01:36:17,360 --> 01:36:20,239
it's out of manifest the question is

2517
01:36:20,239 --> 01:36:22,480
how do you manage that when everything's

2518
01:36:22,480 --> 01:36:24,320
done with manifests this is pretty

2519
01:36:24,320 --> 01:36:25,920
straightforward because you are

2520
01:36:25,920 --> 01:36:28,239
expressing your authority through a

2521
01:36:28,239 --> 01:36:29,600
signature

2522
01:36:29,600 --> 01:36:32,320
but when you don't have that

2523
01:36:32,320 --> 01:36:35,440
this looks to me like exactly the thing

2524
01:36:35,440 --> 01:36:37,840
that some attacker wants to be able to

2525
01:36:37,840 --> 01:36:39,280
forcibly remove something from your

2526
01:36:39,280 --> 01:36:41,040
system

2527
01:36:41,040 --> 01:36:43,040
so i can't comment on that and by the

2528
01:36:43,040 --> 01:36:44,800
way the default answer is option one and

2529
01:36:44,800 --> 01:36:46,719
so the actual pull request tries to put

2530
01:36:46,719 --> 01:36:48,719
in some text uh that just clarifies

2531
01:36:48,719 --> 01:36:50,880
using option one but it's interesting to

2532
01:36:50,880 --> 01:36:52,400
talk about whether option 2.2 is an

2533
01:36:52,400 --> 01:36:54,080
option or not so to answer your question

2534
01:36:54,080 --> 01:36:56,960
brandon um uh

2535
01:36:56,960 --> 01:36:59,920
my view is that option 2.2 is not

2536
01:36:59,920 --> 01:37:01,920
completely out of the question whether

2537
01:37:01,920 --> 01:37:03,679
it's a good idea or a bad ideas thing

2538
01:37:03,679 --> 01:37:05,440
but and that's because in the teep

2539
01:37:05,440 --> 01:37:07,520
architecture document okay there is a

2540
01:37:07,520 --> 01:37:09,760
trust anchor store okay so the trust

2541
01:37:09,760 --> 01:37:12,159
anchor store can have one or more keys

2542
01:37:12,159 --> 01:37:14,880
in it that's the keys that are used to

2543
01:37:14,880 --> 01:37:16,400
uh like

2544
01:37:16,400 --> 01:37:18,719
by the manifest signer for example right

2545
01:37:18,719 --> 01:37:20,080
so things that are used to run against

2546
01:37:20,080 --> 01:37:22,560
the actual tas okay as opposed to they

2547
01:37:22,560 --> 01:37:24,800
say you know the the signing of teap

2548
01:37:24,800 --> 01:37:26,320
commands themselves the sign of the suit

2549
01:37:26,320 --> 01:37:28,639
manifests and so there's one or more um

2550
01:37:28,639 --> 01:37:30,480
uh trust anchors in the trust anchor

2551
01:37:30,480 --> 01:37:33,280
store okay and so the question here in

2552
01:37:33,280 --> 01:37:35,600
2.2 that you might be worried about is

2553
01:37:35,600 --> 01:37:37,199
is it really the case that you have to

2554
01:37:37,199 --> 01:37:40,480
have the same trust anchor signing the

2555
01:37:40,480 --> 01:37:42,080
uninstall as sign the install do you

2556
01:37:42,080 --> 01:37:43,840
have to remember which trust anchor did

2557
01:37:43,840 --> 01:37:46,239
it or is it just any trust anchor in

2558
01:37:46,239 --> 01:37:47,679
your store is the one that can do that

2559
01:37:47,679 --> 01:37:49,280
and if you think about like key rollover

2560
01:37:49,280 --> 01:37:51,040
and so on is that really a trust anchor

2561
01:37:51,040 --> 01:37:53,760
id of the actual trust anchor but if you

2562
01:37:53,760 --> 01:37:55,840
if you took a choice that says any trust

2563
01:37:55,840 --> 01:37:57,280
anchor in the trust anchor store was

2564
01:37:57,280 --> 01:38:01,040
equally trusted okay then as long as uh

2565
01:38:01,040 --> 01:38:03,119
the local install comes from one of

2566
01:38:03,119 --> 01:38:04,719
those trust anchors it does it would not

2567
01:38:04,719 --> 01:38:05,840
have to be the trust anchor that

2568
01:38:05,840 --> 01:38:07,600
actually signed the suit manifest i

2569
01:38:07,600 --> 01:38:08,639
think that's the distinction between

2570
01:38:08,639 --> 01:38:10,960
option one and option 2.2

2571
01:38:10,960 --> 01:38:13,360
yeah so i think the the take that i have

2572
01:38:13,360 --> 01:38:16,400
on that is that any equally privileged

2573
01:38:16,400 --> 01:38:19,040
trust anchor should be able to

2574
01:38:19,040 --> 01:38:20,400
to

2575
01:38:20,400 --> 01:38:23,119
unlink a manifest um i just

2576
01:38:23,119 --> 01:38:25,280
on that topic i thought we were

2577
01:38:25,280 --> 01:38:28,239
originally doing unlink for components

2578
01:38:28,239 --> 01:38:29,760
but we now appear to be unlinking

2579
01:38:29,760 --> 01:38:32,080
manifests that that

2580
01:38:32,080 --> 01:38:34,639
was a somewhat unintended consequence

2581
01:38:34,639 --> 01:38:37,280
but i i think it works so i mean that's

2582
01:38:37,280 --> 01:38:39,840
all right but we did originally discuss

2583
01:38:39,840 --> 01:38:41,840
this as unlinking components rather than

2584
01:38:41,840 --> 01:38:42,840
unlinking

2585
01:38:42,840 --> 01:38:45,360
manifests uh i did not think of the

2586
01:38:45,360 --> 01:38:46,639
distinction when creating the slide so

2587
01:38:46,639 --> 01:38:48,159
that may be an error on my part but it's

2588
01:38:48,159 --> 01:38:50,880
uh you're right to call it out so

2589
01:38:50,880 --> 01:38:54,159
um the the other factor here is that

2590
01:38:54,159 --> 01:38:56,560
provide that

2591
01:38:56,560 --> 01:38:58,400
the question is where do the links come

2592
01:38:58,400 --> 01:38:59,920
from in the first place

2593
01:38:59,920 --> 01:39:02,880
uh if you have installed this thing

2594
01:39:02,880 --> 01:39:05,760
uh manually then i guess there's a link

2595
01:39:05,760 --> 01:39:07,280
that you can unlink

2596
01:39:07,280 --> 01:39:09,520
if it hasn't been installed manually if

2597
01:39:09,520 --> 01:39:11,760
it's been installed by another manifest

2598
01:39:11,760 --> 01:39:13,840
how do you unlink it is that something

2599
01:39:13,840 --> 01:39:16,159
you're even permitted to do so there's a

2600
01:39:16,159 --> 01:39:17,840
question about link tracking and where

2601
01:39:17,840 --> 01:39:20,480
these links come from you can't simply

2602
01:39:20,480 --> 01:39:22,719
decrement a reference counter every time

2603
01:39:22,719 --> 01:39:24,639
you call on link because otherwise you

2604
01:39:24,639 --> 01:39:26,800
could call on link many times and then

2605
01:39:26,800 --> 01:39:29,199
leave your system in an unusable state

2606
01:39:29,199 --> 01:39:31,119
you can only unlink a link you've

2607
01:39:31,119 --> 01:39:33,440
created which means that you can only

2608
01:39:33,440 --> 01:39:35,600
say apt remove something that you've apt

2609
01:39:35,600 --> 01:39:37,440
installed otherwise you break

2610
01:39:37,440 --> 01:39:39,440
dependencies

2611
01:39:39,440 --> 01:39:43,040
so i guess the question is if you were

2612
01:39:43,040 --> 01:39:45,679
able to locally install a component then

2613
01:39:45,679 --> 01:39:48,480
you should be able to locally remove it

2614
01:39:48,480 --> 01:39:50,560
in that case you probably want a suit

2615
01:39:50,560 --> 01:39:52,480
uninstall

2616
01:39:52,480 --> 01:39:54,639
section not command

2617
01:39:54,639 --> 01:39:56,080
section

2618
01:39:56,080 --> 01:39:58,880
or command sequence rather

2619
01:39:58,880 --> 01:40:01,760
because otherwise um

2620
01:40:01,760 --> 01:40:03,600
that

2621
01:40:03,600 --> 01:40:05,840
i don't see how you would do the unlink

2622
01:40:05,840 --> 01:40:08,000
it i'm not sure how that would make

2623
01:40:08,000 --> 01:40:09,679
sense i i think you

2624
01:40:09,679 --> 01:40:11,520
probably need to have

2625
01:40:11,520 --> 01:40:15,119
uh an uninstall command sequence it's

2626
01:40:15,119 --> 01:40:16,320
i don't see another way is that

2627
01:40:16,320 --> 01:40:17,600
something you think that the suit

2628
01:40:17,600 --> 01:40:19,119
working group should actually add into

2629
01:40:19,119 --> 01:40:20,880
and by suit working group we mean mostly

2630
01:40:20,880 --> 01:40:22,960
you as the editor would actually add

2631
01:40:22,960 --> 01:40:24,880
into the uh suit manifest id is that

2632
01:40:24,880 --> 01:40:25,840
what you're thinking based on this

2633
01:40:25,840 --> 01:40:28,239
discussion

2634
01:40:30,400 --> 01:40:32,639
yeah so i think that would have to go

2635
01:40:32,639 --> 01:40:35,679
into the trust domains id uh because i

2636
01:40:35,679 --> 01:40:38,480
think it's highly relevant to

2637
01:40:38,480 --> 01:40:39,520
just

2638
01:40:39,520 --> 01:40:41,119
almost entirely

2639
01:40:41,119 --> 01:40:42,960
a situation where you have multiple

2640
01:40:42,960 --> 01:40:45,040
trust domains uh where

2641
01:40:45,040 --> 01:40:46,960
just to be clear teep is exclusively a

2642
01:40:46,960 --> 01:40:51,840
multiple trust domain kind of domain uh

2643
01:40:52,400 --> 01:40:53,840
yeah i think

2644
01:40:53,840 --> 01:40:55,920
it might need to go there and and i

2645
01:40:55,920 --> 01:40:57,440
mentioned in the suit working group and

2646
01:40:57,440 --> 01:40:59,199
i'll mention it again if anyone else

2647
01:40:59,199 --> 01:41:00,800
would like to come on and edit that

2648
01:41:00,800 --> 01:41:02,830
document they are welcome

2649
01:41:02,830 --> 01:41:04,560
[Music]

2650
01:41:04,560 --> 01:41:06,800
so i guess what i'm hearing is that for

2651
01:41:06,800 --> 01:41:08,800
now teep should continue to go forward

2652
01:41:08,800 --> 01:41:10,080
with option

2653
01:41:10,080 --> 01:41:11,040
one

2654
01:41:11,040 --> 01:41:12,560
but that uh

2655
01:41:12,560 --> 01:41:16,080
uh uh the 2.2 suit will uh consider that

2656
01:41:16,080 --> 01:41:17,520
and discuss it

2657
01:41:17,520 --> 01:41:19,520
um and i see there's we got a couple of

2658
01:41:19,520 --> 01:41:22,320
us uh suit co-chairs here um and so that

2659
01:41:22,320 --> 01:41:24,560
would then uh be a new discussion we

2660
01:41:24,560 --> 01:41:26,560
would start on the t uh on the suit

2661
01:41:26,560 --> 01:41:28,080
mailing list

2662
01:41:28,080 --> 01:41:30,400
i think it would have to it's

2663
01:41:30,400 --> 01:41:32,639
so i mean the history of suit

2664
01:41:32,639 --> 01:41:34,719
meant that uninstall wasn't really a

2665
01:41:34,719 --> 01:41:36,639
question it was

2666
01:41:36,639 --> 01:41:38,560
really just for install because

2667
01:41:38,560 --> 01:41:40,719
uninstall was typically replacement so

2668
01:41:40,719 --> 01:41:42,560
the idea of explicitly uninstalling

2669
01:41:42,560 --> 01:41:44,480
something was a bit foreign and needs

2670
01:41:44,480 --> 01:41:46,800
some additional consideration

2671
01:41:46,800 --> 01:41:48,320
yeah and thank you for correcting the

2672
01:41:48,320 --> 01:41:50,000
language here as i was constructing the

2673
01:41:50,000 --> 01:41:51,679
slide it was

2674
01:41:51,679 --> 01:41:52,800
uh

2675
01:41:52,800 --> 01:41:54,800
jet lag this week and so yeah that

2676
01:41:54,800 --> 01:41:56,719
really should say suit uninstall section

2677
01:41:56,719 --> 01:41:59,119
even if the text and the uh issue number

2678
01:41:59,119 --> 01:42:01,119
says command right now but this section

2679
01:42:01,119 --> 01:42:03,280
yeah say here's the directives to do an

2680
01:42:03,280 --> 01:42:04,960
uninstall should you need to do an

2681
01:42:04,960 --> 01:42:06,800
uninstall without having any other

2682
01:42:06,800 --> 01:42:08,080
information other than the suit manifest

2683
01:42:08,080 --> 01:42:10,719
again yep

2684
01:42:10,719 --> 01:42:13,520
okay so uh i guess we will push that

2685
01:42:13,520 --> 01:42:16,239
option 2.2 discussion to the suit list

2686
01:42:16,239 --> 01:42:18,480
and uh currently there's an open pull

2687
01:42:18,480 --> 01:42:20,960
request that puts in some clarifying

2688
01:42:20,960 --> 01:42:23,199
text assuming that option number one

2689
01:42:23,199 --> 01:42:24,719
is the way that you have to do it and so

2690
01:42:24,719 --> 01:42:27,360
the clarifying text just says here's uh

2691
01:42:27,360 --> 01:42:28,480
here's what happens when you have the

2692
01:42:28,480 --> 01:42:31,199
largest to do this you do you do it via

2693
01:42:31,199 --> 01:42:32,960
new suit manifest and so it wouldn't

2694
01:42:32,960 --> 01:42:33,840
actually

2695
01:42:33,840 --> 01:42:36,000
reference the option 2.2 stuff and

2696
01:42:36,000 --> 01:42:38,719
unless and until uh suit actually put

2697
01:42:38,719 --> 01:42:39,600
something in a document that's

2698
01:42:39,600 --> 01:42:42,600
referenceable

2699
01:42:45,280 --> 01:42:48,280
era

2700
01:42:58,960 --> 01:43:01,520
i presume you wanted to move forward

2701
01:43:01,520 --> 01:43:04,880
yeah i see i were in q though

2702
01:43:08,400 --> 01:43:10,960
oh true sorry are you actually

2703
01:43:10,960 --> 01:43:13,119
uninstalling a component or are you

2704
01:43:13,119 --> 01:43:15,920
uninstalling a manifest

2705
01:43:15,920 --> 01:43:19,199
ira i i can't hear you i i could hear

2706
01:43:19,199 --> 01:43:21,199
him very faintly saying are you actually

2707
01:43:21,199 --> 01:43:25,400
i'm selling a component or a manifesto

2708
01:43:25,840 --> 01:43:29,280
that was what i was asking yes yes

2709
01:43:29,280 --> 01:43:32,960
and i think brendan's comment was it can

2710
01:43:32,960 --> 01:43:35,199
either one he thinks would be okay but i

2711
01:43:35,199 --> 01:43:38,239
think that's a a question for uh for

2712
01:43:38,239 --> 01:43:40,400
pursuit but i think both possibilities

2713
01:43:40,400 --> 01:43:42,879
are are

2714
01:43:43,280 --> 01:43:44,719
are out there

2715
01:43:44,719 --> 01:43:45,970
okay thank you

2716
01:43:45,970 --> 01:43:47,280
[Music]

2717
01:43:47,280 --> 01:43:48,159
okay

2718
01:43:48,159 --> 01:43:49,520
all right um

2719
01:43:49,520 --> 01:43:51,360
personalization data scenarios i'm going

2720
01:43:51,360 --> 01:43:53,600
to summarize where we're at with this

2721
01:43:53,600 --> 01:43:54,960
one

2722
01:43:54,960 --> 01:43:56,480
i don't remember if there's a separate

2723
01:43:56,480 --> 01:43:57,840
issue number there may be and i didn't

2724
01:43:57,840 --> 01:43:59,600
put it on the slide so

2725
01:43:59,600 --> 01:44:01,440
personalization data scenarios that are

2726
01:44:01,440 --> 01:44:03,440
talked about in

2727
01:44:03,440 --> 01:44:05,040
either the architecture document of the

2728
01:44:05,040 --> 01:44:06,560
the t protocol document and make sure

2729
01:44:06,560 --> 01:44:09,040
we're not missing something here

2730
01:44:09,040 --> 01:44:10,800
first scenario for personalization data

2731
01:44:10,800 --> 01:44:12,639
is where the

2732
01:44:12,639 --> 01:44:15,199
developer provides both the binary and

2733
01:44:15,199 --> 01:44:16,800
the personalization data right they're

2734
01:44:16,800 --> 01:44:18,639
packaged separately in some way because

2735
01:44:18,639 --> 01:44:20,560
the binary is exact is identical that

2736
01:44:20,560 --> 01:44:22,480
goes to all the different devices the

2737
01:44:22,480 --> 01:44:23,920
personalization data is different that

2738
01:44:23,920 --> 01:44:25,440
goes to different devices right but

2739
01:44:25,440 --> 01:44:26,480
since that's why they're packaged

2740
01:44:26,480 --> 01:44:28,639
separately but the same entity in this

2741
01:44:28,639 --> 01:44:30,800
case is the developer and a signs both

2742
01:44:30,800 --> 01:44:32,320
of them

2743
01:44:32,320 --> 01:44:34,880
case b is where uh doesn't matter what

2744
01:44:34,880 --> 01:44:36,480
the developer did right the one that

2745
01:44:36,480 --> 01:44:38,480
actually manages the device is the one

2746
01:44:38,480 --> 01:44:40,000
that's the actual science of trusted

2747
01:44:40,000 --> 01:44:41,600
signer right so

2748
01:44:41,600 --> 01:44:43,119
the device doesn't trust arbitrary

2749
01:44:43,119 --> 01:44:45,040
developers it trusts its own operator

2750
01:44:45,040 --> 01:44:46,239
and owner

2751
01:44:46,239 --> 01:44:48,000
uh depending on the use case whether

2752
01:44:48,000 --> 01:44:49,920
it's an operator an owner

2753
01:44:49,920 --> 01:44:51,920
and so that one provides the binary

2754
01:44:51,920 --> 01:44:54,080
maybe gets it from a developer vets it

2755
01:44:54,080 --> 01:44:56,000
signs it itself generates

2756
01:44:56,000 --> 01:44:58,000
personalization data and puts it on

2757
01:44:58,000 --> 01:44:59,840
there as far as the protocol is

2758
01:44:59,840 --> 01:45:01,520
concerned this is basically equivalent

2759
01:45:01,520 --> 01:45:04,080
to case a right it's a it's a different

2760
01:45:04,080 --> 01:45:06,400
organization maybe a different uh human

2761
01:45:06,400 --> 01:45:08,560
flow but as far as the code goes a and b

2762
01:45:08,560 --> 01:45:09,840
are basically equivalent right it's the

2763
01:45:09,840 --> 01:45:10,960
same thing okay they're

2764
01:45:10,960 --> 01:45:13,199
indistinguishable to code basically

2765
01:45:13,199 --> 01:45:15,520
option c is where they're different

2766
01:45:15,520 --> 01:45:17,280
entities so the developer might provide

2767
01:45:17,280 --> 01:45:19,360
the binary and the operator owner

2768
01:45:19,360 --> 01:45:20,880
provides the personalization data so

2769
01:45:20,880 --> 01:45:22,320
like the configuration stuff right

2770
01:45:22,320 --> 01:45:24,080
what's the set of keys to use or what's

2771
01:45:24,080 --> 01:45:26,000
the what's the names or what's the

2772
01:45:26,000 --> 01:45:27,600
website to talk to or whatever it is

2773
01:45:27,600 --> 01:45:29,280
right so and

2774
01:45:29,280 --> 01:45:30,800
so that's where you have different cases

2775
01:45:30,800 --> 01:45:31,760
and so

2776
01:45:31,760 --> 01:45:35,119
uh in this exam in this case um the way

2777
01:45:35,119 --> 01:45:36,880
shown to do this is that there's a

2778
01:45:36,880 --> 01:45:39,280
manifest for the personalization data

2779
01:45:39,280 --> 01:45:41,679
that has the tc binary manifest as a

2780
01:45:41,679 --> 01:45:43,520
dependency right so

2781
01:45:43,520 --> 01:45:45,280
the the operator says you need to

2782
01:45:45,280 --> 01:45:46,800
install this personalization data the

2783
01:45:46,800 --> 01:45:48,239
personalization data says well in order

2784
01:45:48,239 --> 01:45:49,760
to solve this i'm going to also install

2785
01:45:49,760 --> 01:45:51,760
the tc binary right and that's so you

2786
01:45:51,760 --> 01:45:53,440
can have many manifests that point to

2787
01:45:53,440 --> 01:45:54,880
one you couldn't do in the other

2788
01:45:54,880 --> 01:45:55,760
direction because you'd have one

2789
01:45:55,760 --> 01:45:57,360
manifest that points to many it'd be

2790
01:45:57,360 --> 01:45:59,520
very very difficult by comparison and so

2791
01:45:59,520 --> 01:46:01,280
this is what's in the appendix e.1

2792
01:46:01,280 --> 01:46:03,280
example today

2793
01:46:03,280 --> 01:46:04,960
those are all the variations that are

2794
01:46:04,960 --> 01:46:06,159
discussed today if there's any

2795
01:46:06,159 --> 01:46:08,560
variations missing then please bring up

2796
01:46:08,560 --> 01:46:10,719
or file an issue or whatever but i think

2797
01:46:10,719 --> 01:46:12,000
that's what's covered in the document

2798
01:46:12,000 --> 01:46:14,480
now so

2799
01:46:14,960 --> 01:46:16,639
unless there's any comments the mic next

2800
01:46:16,639 --> 01:46:19,880
slide please

2801
01:46:27,760 --> 01:46:29,520
okay

2802
01:46:29,520 --> 01:46:31,280
next one is the cypher suites question

2803
01:46:31,280 --> 01:46:34,560
this was filed during the hackathon uh

2804
01:46:34,560 --> 01:46:37,520
by i don't remember who um

2805
01:46:37,520 --> 01:46:39,760
let's see so today the cipher suites in

2806
01:46:39,760 --> 01:46:41,679
the document right now it defines a new

2807
01:46:41,679 --> 01:46:44,159
registry that has two values in it

2808
01:46:44,159 --> 01:46:46,480
and it says the tam has to support both

2809
01:46:46,480 --> 01:46:48,320
of them and the teep agent gets to pick

2810
01:46:48,320 --> 01:46:50,560
its choice of either of those okay next

2811
01:46:50,560 --> 01:46:53,560
slide

2812
01:46:56,239 --> 01:46:58,880
okay uh okay it was a sobe son that uh

2813
01:46:58,880 --> 01:47:00,800
filed this okay so uh during

2814
01:47:00,800 --> 01:47:03,040
implementation uh it was pointed out

2815
01:47:03,040 --> 01:47:04,880
that uh there's this one registry in

2816
01:47:04,880 --> 01:47:08,400
deep in a different registry in um

2817
01:47:08,400 --> 01:47:09,760
in uh

2818
01:47:09,760 --> 01:47:12,000
slash cose and can't we just use the

2819
01:47:12,000 --> 01:47:13,760
same one so that we don't have to have

2820
01:47:13,760 --> 01:47:16,239
two different spaces and so could

2821
01:47:16,239 --> 01:47:17,360
uh

2822
01:47:17,360 --> 01:47:18,159
t

2823
01:47:18,159 --> 01:47:20,880
just say to use the actual numbering

2824
01:47:20,880 --> 01:47:23,040
space and values out of cose and then

2825
01:47:23,040 --> 01:47:25,440
that would simplify the code and so this

2826
01:47:25,440 --> 01:47:28,000
is an example of what the document might

2827
01:47:28,000 --> 01:47:30,239
say this is copied out of sobazon's

2828
01:47:30,239 --> 01:47:33,199
proposal which is you know the typecozy

2829
01:47:33,199 --> 01:47:36,480
algorithms is the cozy algorithm es256

2830
01:47:36,480 --> 01:47:37,520
so those the two that were on the

2831
01:47:37,520 --> 01:47:38,960
previous slide and there's various other

2832
01:47:38,960 --> 01:47:40,719
ones that are optional but you can see

2833
01:47:40,719 --> 01:47:42,960
the way that it specified it it does not

2834
01:47:42,960 --> 01:47:44,719
create a new registry and so we would

2835
01:47:44,719 --> 01:47:46,719
delete the registry if we went with this

2836
01:47:46,719 --> 01:47:48,560
proposal and the point is this would

2837
01:47:48,560 --> 01:47:51,679
simplify implementations and so uh

2838
01:47:51,679 --> 01:47:54,639
any comments on this

2839
01:47:54,639 --> 01:47:56,639
this seems like it's a good idea and

2840
01:47:56,639 --> 01:47:58,560
akira briefly touched on this during his

2841
01:47:58,560 --> 01:48:02,280
presentation so

2842
01:48:04,239 --> 01:48:06,159
uh i'm sure ayanna would like not having

2843
01:48:06,159 --> 01:48:07,440
to have two registries and another

2844
01:48:07,440 --> 01:48:09,360
expert or something so um unless there's

2845
01:48:09,360 --> 01:48:11,280
any comments on this one

2846
01:48:11,280 --> 01:48:14,480
um yes uh thank you for clarifying it's

2847
01:48:14,480 --> 01:48:15,920
always son uh

2848
01:48:15,920 --> 01:48:18,480
optional just means um picking from the

2849
01:48:18,480 --> 01:48:22,239
existing coset registry right

2850
01:48:23,600 --> 01:48:25,679
uh let's see i see i see people going

2851
01:48:25,679 --> 01:48:27,679
say plus one from ira long discussion

2852
01:48:27,679 --> 01:48:29,199
from ben but i don't see ben at the mike

2853
01:48:29,199 --> 01:48:31,040
so i don't know if there's uh

2854
01:48:31,040 --> 01:48:32,159
anything that needs to be discussed with

2855
01:48:32,159 --> 01:48:33,520
the mic ben

2856
01:48:33,520 --> 01:48:34,480
if you don't come to the michael it

2857
01:48:34,480 --> 01:48:35,840
seemed like you just go on but if you

2858
01:48:35,840 --> 01:48:38,800
want to say something go ahead

2859
01:48:40,639 --> 01:48:43,040
i think he's just clarifying okay next

2860
01:48:43,040 --> 01:48:44,719
next slide then

2861
01:48:44,719 --> 01:48:46,560
because uh if there's no objections then

2862
01:48:46,560 --> 01:48:47,600
i think it's probably a good idea to

2863
01:48:47,600 --> 01:48:48,880
simplify so

2864
01:48:48,880 --> 01:48:50,159
um

2865
01:48:50,159 --> 01:48:52,239
all right so suit

2866
01:48:52,239 --> 01:48:53,679
cipher suites

2867
01:48:53,679 --> 01:48:55,360
okay now we're into the manifest right

2868
01:48:55,360 --> 01:48:57,040
the proposal from the suit meeting just

2869
01:48:57,040 --> 01:48:59,280
fyi if you weren't in the suit meeting

2870
01:48:59,280 --> 01:49:01,119
was the suit decided that

2871
01:49:01,119 --> 01:49:03,199
hss lms

2872
01:49:03,199 --> 01:49:06,639
is actually the must um ecdsa is a

2873
01:49:06,639 --> 01:49:07,600
should

2874
01:49:07,600 --> 01:49:10,239
and you may implement others

2875
01:49:10,239 --> 01:49:11,760
okay and those are just examples of

2876
01:49:11,760 --> 01:49:13,199
others that there might be but there's

2877
01:49:13,199 --> 01:49:15,760
the the boston they should okay

2878
01:49:15,760 --> 01:49:18,639
that's fyi from the suit discussion um

2879
01:49:18,639 --> 01:49:22,000
early on this week next slide

2880
01:49:25,119 --> 01:49:26,639
all right

2881
01:49:26,639 --> 01:49:29,440
so the next issue from a

2882
01:49:29,440 --> 01:49:31,360
hackathon that's still related to suit

2883
01:49:31,360 --> 01:49:32,400
um

2884
01:49:32,400 --> 01:49:35,119
is issue 104 okay so here

2885
01:49:35,119 --> 01:49:36,320
the uh

2886
01:49:36,320 --> 01:49:38,560
the developer creates a suit manifest

2887
01:49:38,560 --> 01:49:40,400
that points to the tc binary that the

2888
01:49:40,400 --> 01:49:42,000
developer created right so he hosts it

2889
01:49:42,000 --> 01:49:43,679
on his own share or wherever he has it

2890
01:49:43,679 --> 01:49:44,880
right so the developer creates his own

2891
01:49:44,880 --> 01:49:46,800
suit manifest okay so now you have a

2892
01:49:46,800 --> 01:49:48,800
case where the tam or you know the owner

2893
01:49:48,800 --> 01:49:50,400
or the operator wants to override that

2894
01:49:50,400 --> 01:49:53,760
uri okay example okay it wants to host

2895
01:49:53,760 --> 01:49:55,920
the binary itself right maybe the tam is

2896
01:49:55,920 --> 01:49:57,840
a tan for devices that are not on the

2897
01:49:57,840 --> 01:50:00,080
public internet right and so it has a

2898
01:50:00,080 --> 01:50:01,440
location that's accessible to the

2899
01:50:01,440 --> 01:50:03,199
devices where the public internet that

2900
01:50:03,199 --> 01:50:04,639
original uri might not actually be

2901
01:50:04,639 --> 01:50:06,800
reachable in that location right think

2902
01:50:06,800 --> 01:50:07,760
you know

2903
01:50:07,760 --> 01:50:09,679
cruise ship space whatever it is you're

2904
01:50:09,679 --> 01:50:11,920
in some disconnected network or some uh

2905
01:50:11,920 --> 01:50:13,440
connect network where you don't have

2906
01:50:13,440 --> 01:50:14,960
reliable connectivity to the outside

2907
01:50:14,960 --> 01:50:17,040
world okay so you want to host that uri

2908
01:50:17,040 --> 01:50:19,280
so how do you override that okay

2909
01:50:19,280 --> 01:50:21,040
and so one way to do this is the tam

2910
01:50:21,040 --> 01:50:22,639
just creates a brand new manifest okay

2911
01:50:22,639 --> 01:50:25,199
with the tam is the signer okay and so

2912
01:50:25,199 --> 01:50:27,760
it just reconstructs that because the uh

2913
01:50:27,760 --> 01:50:29,840
trust anchor is the tams trust anchor

2914
01:50:29,840 --> 01:50:31,119
that the device trusts you could create

2915
01:50:31,119 --> 01:50:32,639
a brand new manifest that the team can

2916
01:50:32,639 --> 01:50:34,800
construct using taking the original

2917
01:50:34,800 --> 01:50:36,800
manifest doing a new version copying

2918
01:50:36,800 --> 01:50:38,719
most of the fields replacing the uri and

2919
01:50:38,719 --> 01:50:40,480
saying brand new one the developer is

2920
01:50:40,480 --> 01:50:42,000
actually not in the loop never even

2921
01:50:42,000 --> 01:50:44,239
identified doesn't have to be anyway

2922
01:50:44,239 --> 01:50:46,400
and so off you go so this is a case that

2923
01:50:46,400 --> 01:50:48,239
i think no document changes would be

2924
01:50:48,239 --> 01:50:49,679
needed if i understand that scenario

2925
01:50:49,679 --> 01:50:53,840
correctly um issue 105 is a way to say

2926
01:50:53,840 --> 01:50:55,599
okay is there a way to reduce the effort

2927
01:50:55,599 --> 01:50:57,599
to say somehow reference the original

2928
01:50:57,599 --> 01:51:00,159
manifest and just override the one field

2929
01:51:00,159 --> 01:51:01,119
and say everything else i'm

2930
01:51:01,119 --> 01:51:03,119
incorporating by reference okay it's

2931
01:51:03,119 --> 01:51:04,560
this other stuff except for i want to

2932
01:51:04,560 --> 01:51:07,440
override this one field okay and so here

2933
01:51:07,440 --> 01:51:09,199
the binary is still signed by the

2934
01:51:09,199 --> 01:51:11,760
original signer right not by the tam the

2935
01:51:11,760 --> 01:51:13,599
tam is signing the manifest it says that

2936
01:51:13,599 --> 01:51:16,159
original signer is actually okay okay

2937
01:51:16,159 --> 01:51:18,560
and i just want to update the uri and so

2938
01:51:18,560 --> 01:51:21,599
is this a good idea or a bad idea

2939
01:51:21,599 --> 01:51:23,199
or some better way to do this and i've

2940
01:51:23,199 --> 01:51:25,360
seen brennan and q to answer this so go

2941
01:51:25,360 --> 01:51:27,199
ahead

2942
01:51:27,199 --> 01:51:30,080
so i think you may be missing a couple

2943
01:51:30,080 --> 01:51:32,400
of other options that are available

2944
01:51:32,400 --> 01:51:34,239
which might be more appropriate i'm not

2945
01:51:34,239 --> 01:51:35,040
sure

2946
01:51:35,040 --> 01:51:38,159
uh so the first one is plain old caching

2947
01:51:38,159 --> 01:51:38,880
so

2948
01:51:38,880 --> 01:51:44,080
as long as you don't use an https uri

2949
01:51:44,080 --> 01:51:46,400
there's nothing to stop you from just

2950
01:51:46,400 --> 01:51:50,000
caching the binary on some local system

2951
01:51:50,000 --> 01:51:52,719
then you just override it in your

2952
01:51:52,719 --> 01:51:54,800
transparent cache and away you go no

2953
01:51:54,800 --> 01:51:56,159
problem

2954
01:51:56,159 --> 01:51:57,840
uh you're saying push the binary down to

2955
01:51:57,840 --> 01:52:00,400
the device and update its http cache to

2956
01:52:00,400 --> 01:52:02,639
say go and look here i didn't get it

2957
01:52:02,639 --> 01:52:03,920
through http i just pushed it down and

2958
01:52:03,920 --> 01:52:05,360
shoved it in the cache right

2959
01:52:05,360 --> 01:52:07,520
no no not that uh i mean that's an

2960
01:52:07,520 --> 01:52:09,040
option as well that wasn't what i was

2961
01:52:09,040 --> 01:52:10,560
aiming for what i meant is that in your

2962
01:52:10,560 --> 01:52:12,560
own network infrastructure if you have a

2963
01:52:12,560 --> 01:52:14,719
transparent cache sitting around which

2964
01:52:14,719 --> 01:52:16,239
i'm sure a lot of network

2965
01:52:16,239 --> 01:52:19,599
infrastructures do uh you can

2966
01:52:19,599 --> 01:52:22,639
use that instead and then you just

2967
01:52:22,639 --> 01:52:26,000
override the http request and serve it

2968
01:52:26,000 --> 01:52:27,840
locally i i know you can't do that with

2969
01:52:27,840 --> 01:52:31,040
https but there's already

2970
01:52:31,040 --> 01:52:34,400
at rest security on your uh

2971
01:52:34,400 --> 01:52:37,040
if you're using suit encryption so you

2972
01:52:37,040 --> 01:52:39,679
might as well just use a cache uh it's a

2973
01:52:39,679 --> 01:52:41,520
much simpler solution and i realize that

2974
01:52:41,520 --> 01:52:42,880
we don't talk about it quite so much

2975
01:52:42,880 --> 01:52:46,080
these days given that uh https has taken

2976
01:52:46,080 --> 01:52:49,520
over but it's still it's a simple viable

2977
01:52:49,520 --> 01:52:51,199
option and it's actually kind of the

2978
01:52:51,199 --> 01:52:53,280
point of having at rest security on

2979
01:52:53,280 --> 01:52:55,599
firmware binaries

2980
01:52:55,599 --> 01:52:57,199
uh that's one of the couple of their

2981
01:52:57,199 --> 01:52:58,639
options was there others

2982
01:52:58,639 --> 01:53:00,639
yeah there's another one um so one of

2983
01:53:00,639 --> 01:53:03,119
the changes to the the suit manifest

2984
01:53:03,119 --> 01:53:06,080
that came cropped up over this one was

2985
01:53:06,080 --> 01:53:07,679
the use of integrated payloads

2986
01:53:07,679 --> 01:53:09,679
referenced by a string

2987
01:53:09,679 --> 01:53:12,000
and that was specifically so that you

2988
01:53:12,000 --> 01:53:13,679
wouldn't have to do conversions from the

2989
01:53:13,679 --> 01:53:14,719
uri

2990
01:53:14,719 --> 01:53:18,320
to the the key in the integrated payload

2991
01:53:18,320 --> 01:53:20,560
but the offshoot of that is that you can

2992
01:53:20,560 --> 01:53:22,639
use that as a precaching mechanism you

2993
01:53:22,639 --> 01:53:24,320
can then take your

2994
01:53:24,320 --> 01:53:26,880
uh your your target binary

2995
01:53:26,880 --> 01:53:28,800
download it in advance as your

2996
01:53:28,800 --> 01:53:32,639
distribution system move it into the

2997
01:53:32,639 --> 01:53:34,800
envelope of your manifest

2998
01:53:34,800 --> 01:53:38,960
and make its uh its key in the envelope

2999
01:53:38,960 --> 01:53:41,840
the uri that's already in the manifest

3000
01:53:41,840 --> 01:53:44,239
and then when the device goes to look

3001
01:53:44,239 --> 01:53:46,239
for it it first checks if there are any

3002
01:53:46,239 --> 01:53:48,000
string keys and if one of them matches

3003
01:53:48,000 --> 01:53:51,599
it takes it there and if not then it uh

3004
01:53:51,599 --> 01:53:53,040
then it goes out and attempts to do a

3005
01:53:53,040 --> 01:53:54,800
fetch so you can do

3006
01:53:54,800 --> 01:53:58,159
transparent pre-caching

3007
01:53:59,679 --> 01:54:02,000
so that that might be relevant as well

3008
01:54:02,000 --> 01:54:04,800
and as you suggest a device's local http

3009
01:54:04,800 --> 01:54:08,840
cache might be relevant too

3010
01:54:09,520 --> 01:54:12,080
so uh yeah i'll look through

3011
01:54:12,080 --> 01:54:13,119
but

3012
01:54:13,119 --> 01:54:15,040
i'm not completely follow the the last

3013
01:54:15,040 --> 01:54:16,480
of your three uh the last of your

3014
01:54:16,480 --> 01:54:18,000
options here i only followed parts of

3015
01:54:18,000 --> 01:54:21,280
that and so uh it would be useful to uh

3016
01:54:21,280 --> 01:54:22,800
write it up on the list i see we've got

3017
01:54:22,800 --> 01:54:24,400
six minutes left so you're welcome to

3018
01:54:24,400 --> 01:54:26,000
try again or to just put the description

3019
01:54:26,000 --> 01:54:27,679
on the list that's fine too so

3020
01:54:27,679 --> 01:54:30,239
uh all it is is that because you've got

3021
01:54:30,239 --> 01:54:32,880
a a string reference

3022
01:54:32,880 --> 01:54:34,840
in the suit envelope

3023
01:54:34,840 --> 01:54:38,560
for integrated payloads that string can

3024
01:54:38,560 --> 01:54:40,560
simply happen to be the uri that's

3025
01:54:40,560 --> 01:54:43,679
specified in the manifest

3026
01:54:43,679 --> 01:54:45,440
that doesn't require signing authority

3027
01:54:45,440 --> 01:54:47,360
to do it doesn't require anything you

3028
01:54:47,360 --> 01:54:50,800
can just put it there

3029
01:54:50,800 --> 01:54:52,560
so i guess this might overlap with that

3030
01:54:52,560 --> 01:54:55,840
uh discussion we had about uh examples

3031
01:54:55,840 --> 01:54:57,119
to say

3032
01:54:57,119 --> 01:54:58,560
do we want an example we're actually

3033
01:54:58,560 --> 01:55:03,639
doing that with the binary uri

3034
01:55:04,080 --> 01:55:05,760
that would be helpful yes

3035
01:55:05,760 --> 01:55:08,000
yeah

3036
01:55:10,000 --> 01:55:13,599
okay any other comments on this one

3037
01:55:13,920 --> 01:55:15,679
okay thank you brandon let's go on to

3038
01:55:15,679 --> 01:55:18,920
the next slide

3039
01:55:21,840 --> 01:55:24,880
all right um

3040
01:55:24,880 --> 01:55:26,960
so uh accurate do we do you actually

3041
01:55:26,960 --> 01:55:28,719
want to talk through this one right now

3042
01:55:28,719 --> 01:55:31,119
or defer and go on to another topic the

3043
01:55:31,119 --> 01:55:33,920
question to akira

3044
01:55:40,800 --> 01:55:43,520
if if a cure doesn't this is your chance

3045
01:55:43,520 --> 01:55:45,119
i see uh

3046
01:55:45,119 --> 01:55:46,960
uh can if you want to say if you want to

3047
01:55:46,960 --> 01:55:48,159
say something you can also come to the

3048
01:55:48,159 --> 01:55:49,040
bike

3049
01:55:49,040 --> 01:55:51,199
yeah my mic wasn't working um yeah uh

3050
01:55:51,199 --> 01:55:53,440
other topic first yeah it's

3051
01:55:53,440 --> 01:55:55,679
yeah this is it doesn't have to be yeah

3052
01:55:55,679 --> 01:55:57,360
okay all right then we can we can go on

3053
01:55:57,360 --> 01:55:59,280
and it's the same for can if you needed

3054
01:55:59,280 --> 01:56:00,480
to say something feel free to come to

3055
01:56:00,480 --> 01:56:01,599
the mic otherwise we'll go on all right

3056
01:56:01,599 --> 01:56:03,840
so yeah so now we've got to the last two

3057
01:56:03,840 --> 01:56:05,280
let's go back to the one slide that i

3058
01:56:05,280 --> 01:56:06,480
skipped before that was out of order

3059
01:56:06,480 --> 01:56:07,679
that was supposed to be after this one

3060
01:56:07,679 --> 01:56:09,920
so go back to right before the use of

3061
01:56:09,920 --> 01:56:12,639
suit uh slide there's the first of the

3062
01:56:12,639 --> 01:56:14,560
optimization slides

3063
01:56:14,560 --> 01:56:16,400
and uh feel free to call time because

3064
01:56:16,400 --> 01:56:18,320
this one is just optimizations okay yeah

3065
01:56:18,320 --> 01:56:19,679
thank you this one i mean you've got

3066
01:56:19,679 --> 01:56:22,480
three minutes left so okay yep i got it

3067
01:56:22,480 --> 01:56:25,119
i i i see the clock but uh call time if

3068
01:56:25,119 --> 01:56:26,880
you want so all right

3069
01:56:26,880 --> 01:56:28,960
this one says um

3070
01:56:28,960 --> 01:56:30,159
you know today

3071
01:56:30,159 --> 01:56:32,560
um in order to get a query response you

3072
01:56:32,560 --> 01:56:34,159
reach out to the tam with an empty

3073
01:56:34,159 --> 01:56:36,159
payload the tam responds to the query

3074
01:56:36,159 --> 01:56:37,840
response and then you can finally with a

3075
01:56:37,840 --> 01:56:39,599
query request and then you can send your

3076
01:56:39,599 --> 01:56:41,199
query response you have this extra round

3077
01:56:41,199 --> 01:56:42,639
trip

3078
01:56:42,639 --> 01:56:44,560
and so this question is this is purely

3079
01:56:44,560 --> 01:56:46,239
an optimization but if you already know

3080
01:56:46,239 --> 01:56:48,159
the tam key or cert right whatever

3081
01:56:48,159 --> 01:56:51,199
you're using to authenticate uh the tam

3082
01:56:51,199 --> 01:56:52,960
could you send an unsolicited query

3083
01:56:52,960 --> 01:56:54,800
response to avoid the extra round trip

3084
01:56:54,800 --> 01:56:55,599
okay

3085
01:56:55,599 --> 01:56:57,280
well obviously you can't do this if

3086
01:56:57,280 --> 01:56:59,199
there's information that varies in the

3087
01:56:59,199 --> 01:57:01,119
response the in the request that you

3088
01:57:01,119 --> 01:57:02,400
actually need to put in your response so

3089
01:57:02,400 --> 01:57:04,400
like if you have a token like you're

3090
01:57:04,400 --> 01:57:06,320
having a not stuff your freshness

3091
01:57:06,320 --> 01:57:07,440
mechanism

3092
01:57:07,440 --> 01:57:09,360
is uh nonce then of course you cannot do

3093
01:57:09,360 --> 01:57:11,119
this okay but given that we have

3094
01:57:11,119 --> 01:57:12,560
possibilities of having other freshness

3095
01:57:12,560 --> 01:57:14,239
mechanisms right you can use the epic

3096
01:57:14,239 --> 01:57:16,080
ide you can use time stamp freshness

3097
01:57:16,080 --> 01:57:17,119
mechanism

3098
01:57:17,119 --> 01:57:18,800
and so if you had that then there's

3099
01:57:18,800 --> 01:57:20,560
nothing that actually appears in the

3100
01:57:20,560 --> 01:57:22,960
query request that's different from any

3101
01:57:22,960 --> 01:57:24,320
other query request that you've gotten

3102
01:57:24,320 --> 01:57:25,679
from it okay

3103
01:57:25,679 --> 01:57:28,000
and so um is it possible to send an

3104
01:57:28,000 --> 01:57:30,000
unsolicited query response if the query

3105
01:57:30,000 --> 01:57:31,440
request would contain no information

3106
01:57:31,440 --> 01:57:33,280
that you didn't already have okay

3107
01:57:33,280 --> 01:57:35,119
and so here's the proposal to address

3108
01:57:35,119 --> 01:57:36,639
this okay

3109
01:57:36,639 --> 01:57:39,040
that the teap agent may

3110
01:57:39,040 --> 01:57:40,800
send an unsolicited query response to a

3111
01:57:40,800 --> 01:57:42,080
tam if all three of the following

3112
01:57:42,080 --> 01:57:43,760
conditions are true okay because if any

3113
01:57:43,760 --> 01:57:45,119
one of these is false then there's a

3114
01:57:45,119 --> 01:57:46,400
potential problem so here's the three

3115
01:57:46,400 --> 01:57:48,480
conditions number one

3116
01:57:48,480 --> 01:57:50,480
you've gotten a query request already

3117
01:57:50,480 --> 01:57:53,520
from that tam and it contained no token

3118
01:57:53,520 --> 01:57:54,880
or challenge in other words there's no

3119
01:57:54,880 --> 01:57:57,040
fields that actually vary by things

3120
01:57:57,040 --> 01:57:58,080
because those are the only standard

3121
01:57:58,080 --> 01:57:59,840
fields that vary right there's nothing

3122
01:57:59,840 --> 01:58:01,280
in it that would be different from the

3123
01:58:01,280 --> 01:58:02,800
one that you got before that right so

3124
01:58:02,800 --> 01:58:05,280
there's no no fields that vary

3125
01:58:05,280 --> 01:58:06,719
number two

3126
01:58:06,719 --> 01:58:09,920
is that um it didn't send you a process

3127
01:58:09,920 --> 01:58:10,800
error

3128
01:58:10,800 --> 01:58:12,800
since you got that query request because

3129
01:58:12,800 --> 01:58:14,639
in other words you if you this one is to

3130
01:58:14,639 --> 01:58:16,400
cover the case where you sent an

3131
01:58:16,400 --> 01:58:17,840
unsolicited one and something had

3132
01:58:17,840 --> 01:58:20,080
changed the tam said up you know there's

3133
01:58:20,080 --> 01:58:22,560
some um error and of course the tam just

3134
01:58:22,560 --> 01:58:24,800
drops it there's no uh bad response and

3135
01:58:24,800 --> 01:58:26,639
so process error is the notification

3136
01:58:26,639 --> 01:58:29,760
from the local broker the http returned

3137
01:58:29,760 --> 01:58:31,760
that the transport returned an error so

3138
01:58:31,760 --> 01:58:34,480
like for return error 400 or 500 http

3139
01:58:34,480 --> 01:58:36,239
then the broker sends process error up

3140
01:58:36,239 --> 01:58:38,320
to 10 broker up to 10 agents right and

3141
01:58:38,320 --> 01:58:40,320
so this says you do not get an error

3142
01:58:40,320 --> 01:58:41,679
from trying to do this before that's

3143
01:58:41,679 --> 01:58:42,960
number two

3144
01:58:42,960 --> 01:58:44,159
number three

3145
01:58:44,159 --> 01:58:45,760
is that the tam search or key or

3146
01:58:45,760 --> 01:58:47,760
whatever is cached and still valid right

3147
01:58:47,760 --> 01:58:49,520
so

3148
01:58:49,520 --> 01:58:50,800
you can only do it if you actually have

3149
01:58:50,800 --> 01:58:51,520
all the information you need to

3150
01:58:51,520 --> 01:58:53,520
authenticate to tam okay so this is the

3151
01:58:53,520 --> 01:58:55,119
proposed that if all three of those are

3152
01:58:55,119 --> 01:58:56,480
true then it's okay to send an

3153
01:58:56,480 --> 01:58:58,000
unsolicited query response because the

3154
01:58:58,000 --> 01:58:59,280
extra round trip doesn't actually buy

3155
01:58:59,280 --> 01:59:02,440
you anything

3156
01:59:03,280 --> 01:59:04,320
okay

3157
01:59:04,320 --> 01:59:05,920
any objections because the proposal is

3158
01:59:05,920 --> 01:59:07,199
to put that into the next version of the

3159
01:59:07,199 --> 01:59:08,800
spec so

3160
01:59:08,800 --> 01:59:10,400
and of course we try to implement that

3161
01:59:10,400 --> 01:59:11,920
in in the uh

3162
01:59:11,920 --> 01:59:14,320
implementations before next ietf so at

3163
01:59:14,320 --> 01:59:16,080
least one of them so

3164
01:59:16,080 --> 01:59:17,840
all right hearing unless there's any

3165
01:59:17,840 --> 01:59:19,599
comments then i think we're out of time

3166
01:59:19,599 --> 01:59:20,880
we've got like one minute left but i

3167
01:59:20,880 --> 01:59:22,000
don't think we have time to go to the

3168
01:59:22,000 --> 01:59:23,360
last to the last one there's only one

3169
01:59:23,360 --> 01:59:24,159
more stop

3170
01:59:24,159 --> 01:59:25,760
i i was gonna say if you're done with

3171
01:59:25,760 --> 01:59:28,840
this slide i can ask the question to you

3172
01:59:28,840 --> 01:59:31,599
dave you you've got a bunch of these

3173
01:59:31,599 --> 01:59:34,080
comments you now have a way forward with

3174
01:59:34,080 --> 01:59:36,560
the eat claims too so i'm presuming

3175
01:59:36,560 --> 01:59:39,520
you're gonna continue to resolve these

3176
01:59:39,520 --> 01:59:42,080
the question for you is the protocol

3177
01:59:42,080 --> 01:59:44,960
spec looks to be maturing

3178
01:59:44,960 --> 01:59:47,760
the question is whether um

3179
01:59:47,760 --> 01:59:50,159
there would be value in us doing an

3180
01:59:50,159 --> 01:59:52,719
early i could ask the iot director to do

3181
01:59:52,719 --> 01:59:55,119
an early review if you see value in that

3182
01:59:55,119 --> 01:59:56,880
after you you

3183
01:59:56,880 --> 01:59:59,679
generate a new revision by the way yeah

3184
01:59:59,679 --> 02:00:01,440
if the if you can go to the very very

3185
02:00:01,440 --> 02:00:02,960
last lie which is basically asking that

3186
02:00:02,960 --> 02:00:04,960
style of questions um

3187
02:00:04,960 --> 02:00:06,719
so skip any other content slides just go

3188
02:00:06,719 --> 02:00:07,840
to the very last one as you're asking

3189
02:00:07,840 --> 02:00:08,880
that um

3190
02:00:08,880 --> 02:00:10,960
the i think your question is is it

3191
02:00:10,960 --> 02:00:12,639
useful to have an earlier review say

3192
02:00:12,639 --> 02:00:15,119
even before a working request call right

3193
02:00:15,119 --> 02:00:16,639
and i think you know that might be

3194
02:00:16,639 --> 02:00:18,400
perfectly fine right my hope was we

3195
02:00:18,400 --> 02:00:20,320
could get to a working group less called

3196
02:00:20,320 --> 02:00:21,840
capable state

3197
02:00:21,840 --> 02:00:24,639
around iutf 113 that might mean you know

3198
02:00:24,639 --> 02:00:26,480
immediately after 113 but sometime

3199
02:00:26,480 --> 02:00:28,639
around that time frame um

3200
02:00:28,639 --> 02:00:30,400
but starting early review if there's

3201
02:00:30,400 --> 02:00:33,360
things i think that would be useful yeah

3202
02:00:33,360 --> 02:00:36,320
okay well i mean so my question

3203
02:00:36,320 --> 02:00:38,400
now that you've posted to 113 we could

3204
02:00:38,400 --> 02:00:41,839
wait till 1 13.

3205
02:00:42,480 --> 02:00:44,320
i mean you saw there's still

3206
02:00:44,320 --> 02:00:46,080
gaps like uh filling in the rest of the

3207
02:00:46,080 --> 02:00:47,679
requirements around the eat profile i

3208
02:00:47,679 --> 02:00:48,719
mean hopefully there shouldn't be

3209
02:00:48,719 --> 02:00:50,159
anything surprising there but the text

3210
02:00:50,159 --> 02:00:52,080
isn't in there right and so there may be

3211
02:00:52,080 --> 02:00:53,520
gaps in the text as opposed to

3212
02:00:53,520 --> 02:00:55,360
implementation

3213
02:00:55,360 --> 02:00:57,679
why not so that's why

3214
02:00:57,679 --> 02:00:58,719
yeah

3215
02:00:58,719 --> 02:01:00,320
and so right now i'm saying we should

3216
02:01:00,320 --> 02:01:01,920
start working group last call once the

3217
02:01:01,920 --> 02:01:03,599
number of unresolved issues goes to zero

3218
02:01:03,599 --> 02:01:05,360
right and so whether that happens before

3219
02:01:05,360 --> 02:01:07,040
or after depends on whether we keep

3220
02:01:07,040 --> 02:01:09,599
filing new ones and implementation so

3221
02:01:09,599 --> 02:01:10,480
okay

3222
02:01:10,480 --> 02:01:12,320
so um

3223
02:01:12,320 --> 02:01:14,320
let's shoot for doing the working group

3224
02:01:14,320 --> 02:01:17,199
last call in 113 um

3225
02:01:17,199 --> 02:01:20,320
and dido and i can keep pulsing

3226
02:01:20,320 --> 02:01:22,320
the number of issues that could

3227
02:01:22,320 --> 02:01:23,760
get added

3228
02:01:23,760 --> 02:01:26,159
i mean best case right the issue number

3229
02:01:26,159 --> 02:01:28,000
goes to zero

3230
02:01:28,000 --> 02:01:30,400
at the time of uh you know the internet

3231
02:01:30,400 --> 02:01:32,719
draft deadline you could start a working

3232
02:01:32,719 --> 02:01:34,400
group last call that would terminate at

3233
02:01:34,400 --> 02:01:37,920
iutf113 so that would be best case

3234
02:01:37,920 --> 02:01:40,159
okay

3235
02:01:40,560 --> 02:01:43,599
um honest so we're out of time but

3236
02:01:43,599 --> 02:01:45,520
hannes is saying we should maybe do a

3237
02:01:45,520 --> 02:01:47,360
hackathon in december

3238
02:01:47,360 --> 02:01:49,520
johannes i

3239
02:01:49,520 --> 02:01:51,119
encourage you to put that on the mail

3240
02:01:51,119 --> 02:01:52,880
list

3241
02:01:52,880 --> 02:01:55,199
and um we can

3242
02:01:55,199 --> 02:01:57,199
figure out how we can move forward and

3243
02:01:57,199 --> 02:01:59,199
making progress so you guys have have

3244
02:01:59,199 --> 02:02:00,880
done a great job

3245
02:02:00,880 --> 02:02:03,199
in ironing out some of these issues so

3246
02:02:03,199 --> 02:02:04,719
thank you for that

3247
02:02:04,719 --> 02:02:06,639
okay yeah i see some internet discussion

3248
02:02:06,639 --> 02:02:08,639
on hss lms please put that in the list

3249
02:02:08,639 --> 02:02:10,639
too

3250
02:02:10,639 --> 02:02:12,719
i missed that yes

3251
02:02:12,719 --> 02:02:15,280
okay i want to be respectful of people's

3252
02:02:15,280 --> 02:02:18,560
time so we i'm two minutes over

3253
02:02:18,560 --> 02:02:20,080
thank you everyone

3254
02:02:20,080 --> 02:02:21,280
uh

3255
02:02:21,280 --> 02:02:23,760
great progress to everyone and until our

3256
02:02:23,760 --> 02:02:25,040
next time

3257
02:02:25,040 --> 02:02:27,040
thanks again

3258
02:02:27,040 --> 02:02:32,119
and thanks thomas for the news thank you

3259
02:02:44,080 --> 02:02:45,920
we'll see a number of you at the uh rats

3260
02:02:45,920 --> 02:02:49,360
working group session in a half an hour

3261
02:02:50,320 --> 02:02:53,320
indeed

3262
02:03:08,719 --> 02:03:11,280
akira it's late for you and very early

3263
02:03:11,280 --> 02:03:12,620
for me

3264
02:03:12,620 --> 02:03:16,300
[Laughter]

3265
02:03:18,719 --> 02:03:20,800
but for me it's okay

3266
02:03:20,800 --> 02:03:21,920
yeah still

3267
02:03:21,920 --> 02:03:24,080
still 11 pm

3268
02:03:24,080 --> 02:03:26,480
not bad on friday

3269
02:03:26,480 --> 02:03:28,320
yeah i've been waking up at three in the

3270
02:03:28,320 --> 02:03:29,280
morning

3271
02:03:29,280 --> 02:03:31,119
every morning

3272
02:03:31,119 --> 02:03:32,320
yeah

3273
02:03:32,320 --> 02:03:33,679
wow

3274
02:03:33,679 --> 02:03:35,119
yeah um

3275
02:03:35,119 --> 02:03:39,119
for me last i did one was more

3276
02:03:39,119 --> 02:03:41,360
difficult because it started from one

3277
02:03:41,360 --> 02:03:43,199
two or three a.m

3278
02:03:43,199 --> 02:03:44,719
and then in the end

3279
02:03:44,719 --> 02:03:46,880
around six

3280
02:03:46,880 --> 02:03:49,119
a.m and then

3281
02:03:49,119 --> 02:03:51,760
in the regular office

3282
02:03:51,760 --> 02:03:53,760
working hours started from eight eight

3283
02:03:53,760 --> 02:03:56,079
or something yeah so that's that's

3284
02:03:56,079 --> 02:03:58,639
what's happening to me

3285
02:03:58,639 --> 02:04:00,639
that's great isn't it because now you

3286
02:04:00,639 --> 02:04:04,740
lose nothing from your regular workday

3287
02:04:04,740 --> 02:04:08,079
[Laughter]

3288
02:04:08,079 --> 02:04:10,639
the fact that i i've been on calls until

3289
02:04:10,639 --> 02:04:13,280
5 00 5 30 in the afternoon yeah i don't

3290
02:04:13,280 --> 02:04:14,480
know about that

3291
02:04:14,480 --> 02:04:18,880
and yesterday was a uh u.s holiday

3292
02:04:18,880 --> 02:04:23,400
yeah yeah no conflict

3293
02:04:24,079 --> 02:04:26,639
i think your boss will will uh reward

3294
02:04:26,639 --> 02:04:28,880
this

3295
02:04:29,280 --> 02:04:32,000
well and so to add insult to injury why

3296
02:04:32,000 --> 02:04:34,239
am i well i really should not use this

3297
02:04:34,239 --> 02:04:36,480
as an excuse for why my slides were skin

3298
02:04:36,480 --> 02:04:37,440
slides

3299
02:04:37,440 --> 02:04:40,159
no it just it wasn't

3300
02:04:40,159 --> 02:04:41,920
because i'm awake

3301
02:04:41,920 --> 02:04:44,719
my laptop died

3302
02:04:44,719 --> 02:04:49,119
tuesday at around 11 in the morning

3303
02:04:50,880 --> 02:04:52,719
so i finally brought it back to life

3304
02:04:52,719 --> 02:04:55,840
around midnight tonight so i've only

3305
02:04:55,840 --> 02:04:58,639
been taking one or two hour naps so i'm

3306
02:04:58,639 --> 02:05:00,320
i'm looking forward to the weekend to

3307
02:05:00,320 --> 02:05:00,740
sleep

3308
02:05:00,740 --> 02:05:05,240
[Laughter]

3309
02:05:06,000 --> 02:05:08,480
one thing i

3310
02:05:08,480 --> 02:05:12,239
um i'm i'm i really wasn't noticing but

3311
02:05:12,239 --> 02:05:15,040
i started to realize this

3312
02:05:15,040 --> 02:05:16,560
having a whole week

3313
02:05:16,560 --> 02:05:21,280
of the ietf the last day um improves my

3314
02:05:21,280 --> 02:05:23,679
english

3315
02:05:24,800 --> 02:05:27,199
your english is very good akita and and

3316
02:05:27,199 --> 02:05:29,679
you're right if i recall from when we

3317
02:05:29,679 --> 02:05:32,000
started with teep

3318
02:05:32,000 --> 02:05:34,400
your english has improved not that it

3319
02:05:34,400 --> 02:05:36,800
was bad to begin with

3320
02:05:36,800 --> 02:05:37,760
um

3321
02:05:37,760 --> 02:05:39,440
uh yeah my english

3322
02:05:39,440 --> 02:05:42,639
not always this good it's sometime i

3323
02:05:42,639 --> 02:05:44,159
don't know what's the difference in my

3324
02:05:44,159 --> 02:05:46,800
brain sometimes it easily comes out

3325
02:05:46,800 --> 02:05:49,199
sometimes it doesn't but um

3326
02:05:49,199 --> 02:05:50,320
if it's

3327
02:05:50,320 --> 02:05:52,639
i don't yeah

3328
02:05:52,639 --> 02:05:55,199
somehow just think about how our

3329
02:05:55,199 --> 02:05:57,599
japanese improved over the lifetime of

3330
02:05:57,599 --> 02:05:59,980
this working group

3331
02:05:59,980 --> 02:06:04,400
[Laughter]

3332
02:06:04,400 --> 02:06:05,679
yeah

3333
02:06:05,679 --> 02:06:07,360
japanese is

3334
02:06:07,360 --> 02:06:09,520
um i mean

3335
02:06:09,520 --> 02:06:12,079
difficult for me too i mean i i just i

3336
02:06:12,079 --> 02:06:14,480
born in japan i grew up in japan but

3337
02:06:14,480 --> 02:06:16,320
still

3338
02:06:16,320 --> 02:06:18,559
yeah

3339
02:06:18,880 --> 02:06:20,719
buddy

3340
02:06:20,719 --> 02:06:22,480
yeah i mean

3341
02:06:22,480 --> 02:06:24,320
many of the engineers

3342
02:06:24,320 --> 02:06:26,719
chose the engineering subject because

3343
02:06:26,719 --> 02:06:27,760
they didn't

3344
02:06:27,760 --> 02:06:29,280
didn't like

3345
02:06:29,280 --> 02:06:33,280
language and literature class i mean

3346
02:06:33,280 --> 02:06:36,560
well i i could say that to be true

3347
02:06:36,560 --> 02:06:38,800
for me as well

3348
02:06:38,800 --> 02:06:42,000
i much preferred the math and sciences

3349
02:06:42,000 --> 02:06:44,480
than i did to

3350
02:06:44,480 --> 02:06:45,360
uh

3351
02:06:45,360 --> 02:06:46,400
yeah

3352
02:06:46,400 --> 02:06:48,239
in the us they call them the liberal

3353
02:06:48,239 --> 02:06:52,239
arts right so language and history and

3354
02:06:52,239 --> 02:06:54,159
yeah

3355
02:06:54,159 --> 02:06:56,639
but nancy that maybe explains why our

3356
02:06:56,639 --> 02:06:59,119
documents look the way they are and they

3357
02:06:59,119 --> 02:07:01,199
will never reach the pulitzer award

3358
02:07:01,199 --> 02:07:03,759
stage right

3359
02:07:04,079 --> 02:07:07,119
yeah that's true

3360
02:07:07,119 --> 02:07:11,880
the truth comes out is that right

3361
02:07:12,400 --> 02:07:14,560
all right i'm gonna go get refill my my

3362
02:07:14,560 --> 02:07:16,960
bottle of water

3363
02:07:16,960 --> 02:07:18,800
see you guys in rats

3364
02:07:18,800 --> 02:07:20,000
yeah yeah

3365
02:07:20,000 --> 02:07:20,880
see you

3366
02:07:20,880 --> 02:07:22,320
later bye guys

3367
02:07:22,320 --> 02:07:25,559
bye everyone

3368
02:08:04,239 --> 02:08:06,320
you

