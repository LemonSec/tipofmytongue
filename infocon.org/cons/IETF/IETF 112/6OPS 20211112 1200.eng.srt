1
00:00:10,559 --> 00:00:13,040
three out of four chairs that's uh

2
00:00:13,040 --> 00:00:14,639
that's as good as we could hope for i

3
00:00:14,639 --> 00:00:17,639
suppose

4
00:00:19,439 --> 00:00:22,800
uh ron can you upload um

5
00:00:22,800 --> 00:00:25,279
tom herbert's slides

6
00:00:25,279 --> 00:00:29,080
hang on just a second

7
00:00:37,840 --> 00:00:39,360
okay olay if you want to start the

8
00:00:39,360 --> 00:00:41,200
meeting while i do that

9
00:00:41,200 --> 00:00:43,360
i can certainly do that

10
00:00:43,360 --> 00:00:46,399
so welcome to this v6 six man joint

11
00:00:46,399 --> 00:00:48,879
working group session uh on

12
00:00:48,879 --> 00:00:53,360
the hop by hop extension header behavior

13
00:00:54,079 --> 00:00:55,039
you have

14
00:00:55,039 --> 00:00:57,120
gotten used to the note well by now so

15
00:00:57,120 --> 00:00:59,839
note it well

16
00:01:00,160 --> 00:01:03,280
we have barbara again who's

17
00:01:03,280 --> 00:01:05,040
volunteered to take

18
00:01:05,040 --> 00:01:06,720
minutes for us thank you very much

19
00:01:06,720 --> 00:01:08,479
barbara

20
00:01:08,479 --> 00:01:10,960
no jabber scribes

21
00:01:10,960 --> 00:01:12,560
we don't practice those

22
00:01:12,560 --> 00:01:15,200
on online meetings or with miteko we

23
00:01:15,200 --> 00:01:16,720
probably don't practice them anymore at

24
00:01:16,720 --> 00:01:17,759
all

25
00:01:17,759 --> 00:01:20,000
um

26
00:01:20,720 --> 00:01:22,720
the speakers the presentations are

27
00:01:22,720 --> 00:01:26,400
uploaded to mitico so the speaker should

28
00:01:26,400 --> 00:01:28,320
just go and press the share preloaded

29
00:01:28,320 --> 00:01:29,840
slides find

30
00:01:29,840 --> 00:01:33,040
their slide set and uh and share that

31
00:01:33,040 --> 00:01:35,280
they can run and control the slides

32
00:01:35,280 --> 00:01:37,840
themselves

33
00:01:37,840 --> 00:01:39,520
um

34
00:01:39,520 --> 00:01:40,560
so

35
00:01:40,560 --> 00:01:43,119
here's today's agenda uh we'll just

36
00:01:43,119 --> 00:01:45,840
start off with this little introduction

37
00:01:45,840 --> 00:01:46,799
then

38
00:01:46,799 --> 00:01:49,040
ron will go through the goals of the

39
00:01:49,040 --> 00:01:51,119
meeting

40
00:01:51,119 --> 00:01:52,799
then we'll have a section on the

41
00:01:52,799 --> 00:01:55,360
requirements and solution

42
00:01:55,360 --> 00:01:56,560
drafts

43
00:01:56,560 --> 00:01:57,840
basically

44
00:01:57,840 --> 00:02:00,719
more meat on the problem if you like

45
00:02:00,719 --> 00:02:02,240
a set of

46
00:02:02,240 --> 00:02:03,920
example use cases

47
00:02:03,920 --> 00:02:05,840
just lightning talks on those

48
00:02:05,840 --> 00:02:08,000
just to give an idea of how hope i hope

49
00:02:08,000 --> 00:02:10,639
is used today and then we hope to spend

50
00:02:10,639 --> 00:02:11,840
most of the time at the end of the

51
00:02:11,840 --> 00:02:13,520
meeting discussing

52
00:02:13,520 --> 00:02:15,680
um

53
00:02:15,680 --> 00:02:17,840
where we want to take hope i hope if you

54
00:02:17,840 --> 00:02:21,040
want any changes or improvements to the

55
00:02:21,040 --> 00:02:23,440
hope i hope extension header

56
00:02:23,440 --> 00:02:24,959
any uh

57
00:02:24,959 --> 00:02:27,360
comments on the agenda before we move on

58
00:02:27,360 --> 00:02:30,080
to the main topic

59
00:02:32,160 --> 00:02:33,440
no

60
00:02:33,440 --> 00:02:35,440
then ron it's your turn do you want to

61
00:02:35,440 --> 00:02:38,640
share the slides yourself

62
00:02:40,400 --> 00:02:42,160
or do you want a hand

63
00:02:42,160 --> 00:02:44,239
yes i can share them

64
00:02:44,239 --> 00:02:47,120
hang on just a second

65
00:02:47,120 --> 00:02:50,879
click click

66
00:02:50,879 --> 00:02:53,200
click

67
00:02:55,920 --> 00:02:59,958
let's find the right slides

68
00:03:10,480 --> 00:03:13,440
and here comes fred our last coach here

69
00:03:13,440 --> 00:03:17,560
so welcome fred good morning

70
00:03:26,159 --> 00:03:29,720
oh here they are

71
00:03:36,239 --> 00:03:37,760
okay

72
00:03:37,760 --> 00:03:39,920
good morning all and

73
00:03:39,920 --> 00:03:41,920
we're going to talk just for a minute or

74
00:03:41,920 --> 00:03:43,840
two about the goals of this meeting and

75
00:03:43,840 --> 00:03:47,400
how we got here

76
00:03:51,280 --> 00:03:54,000
page down

77
00:03:58,640 --> 00:04:01,040
oh this way

78
00:04:01,040 --> 00:04:03,760
first a bit of history the hop by hop

79
00:04:03,760 --> 00:04:05,120
extension header has been with us

80
00:04:05,120 --> 00:04:06,159
forever

81
00:04:06,159 --> 00:04:09,280
it was first specified in uh 1995 and

82
00:04:09,280 --> 00:04:11,599
rfc 1882

83
00:04:11,599 --> 00:04:13,840
uh then again in

84
00:04:13,840 --> 00:04:17,839
1998 in rfc 2460.

85
00:04:17,839 --> 00:04:18,639
um

86
00:04:18,639 --> 00:04:22,240
the router alert option was specified in

87
00:04:22,240 --> 00:04:25,120
um 1999

88
00:04:25,120 --> 00:04:28,240
in rfc 2711.

89
00:04:28,240 --> 00:04:31,199
and that was actually an unfortunate uh

90
00:04:31,199 --> 00:04:33,120
first application of the hop by hop

91
00:04:33,120 --> 00:04:35,120
extension header

92
00:04:35,120 --> 00:04:37,199
um the hop by hop extension header can

93
00:04:37,199 --> 00:04:39,600
be used two ways

94
00:04:39,600 --> 00:04:41,040
um

95
00:04:41,040 --> 00:04:44,479
one way is to influence how a packet is

96
00:04:44,479 --> 00:04:45,600
routed

97
00:04:45,600 --> 00:04:46,560
um

98
00:04:46,560 --> 00:04:48,800
as are most of the fields in the base

99
00:04:48,800 --> 00:04:51,199
ipv6 header another way it can be used

100
00:04:51,199 --> 00:04:53,680
is to influence the control plane

101
00:04:53,680 --> 00:04:55,440
the router alert option was used that

102
00:04:55,440 --> 00:04:56,479
way

103
00:04:56,479 --> 00:04:58,560
so because it was used to influence the

104
00:04:58,560 --> 00:05:01,360
control plane many implementations

105
00:05:01,360 --> 00:05:03,440
punted packets containing the router

106
00:05:03,440 --> 00:05:06,000
alert option to the control plane

107
00:05:06,000 --> 00:05:08,960
and unfortunately this can

108
00:05:08,960 --> 00:05:11,120
caused the router alert option to be a

109
00:05:11,120 --> 00:05:12,960
dos vector

110
00:05:12,960 --> 00:05:15,198
um

111
00:05:15,759 --> 00:05:18,639
then many implementations just punted

112
00:05:18,639 --> 00:05:21,600
all packets containing the hbh

113
00:05:21,600 --> 00:05:23,199
to the control plane

114
00:05:23,199 --> 00:05:25,120
and this caused

115
00:05:25,120 --> 00:05:27,520
all packets containing hph to become dos

116
00:05:27,520 --> 00:05:28,800
vectors

117
00:05:28,800 --> 00:05:30,639
um

118
00:05:30,639 --> 00:05:32,639
that made bad things happen

119
00:05:32,639 --> 00:05:35,280
um network operators

120
00:05:35,280 --> 00:05:38,000
filtered all packets containing hph

121
00:05:38,000 --> 00:05:40,400
people didn't use the hbh because they

122
00:05:40,400 --> 00:05:41,759
knew it would be filtered and we had

123
00:05:41,759 --> 00:05:43,600
this kind of cycle of failure for the

124
00:05:43,600 --> 00:05:45,280
hbh

125
00:05:45,280 --> 00:05:46,080
well

126
00:05:46,080 --> 00:05:50,160
something changed in uh rfc 8200 and

127
00:05:50,160 --> 00:05:51,680
it's this note that you see on the right

128
00:05:51,680 --> 00:05:53,840
hand side of the slide

129
00:05:53,840 --> 00:05:55,840
um

130
00:05:55,840 --> 00:05:59,360
initially all nodes had to process

131
00:05:59,360 --> 00:06:01,280
the hbh options

132
00:06:01,280 --> 00:06:03,039
uh but now it was expected that a node

133
00:06:03,039 --> 00:06:05,199
would only process hph if it was

134
00:06:05,199 --> 00:06:08,880
explicitly configured to do so

135
00:06:10,720 --> 00:06:12,960
so

136
00:06:15,919 --> 00:06:17,759
what are we going to do here today we're

137
00:06:17,759 --> 00:06:20,560
going to ask basically two questions

138
00:06:20,560 --> 00:06:23,039
does the current specification in 8200

139
00:06:23,039 --> 00:06:25,840
satisfy the needs for ipv6 hop by hop

140
00:06:25,840 --> 00:06:28,240
extensibility

141
00:06:28,240 --> 00:06:29,759
and

142
00:06:29,759 --> 00:06:31,840
can we expect the current situation to

143
00:06:31,840 --> 00:06:35,840
improve without any changes

144
00:06:40,400 --> 00:06:42,800
so the questions for the session are do

145
00:06:42,800 --> 00:06:44,720
we want to proceed with rehabilitation

146
00:06:44,720 --> 00:06:47,280
of the hbh option header

147
00:06:47,280 --> 00:06:49,120
do we want to take some other action

148
00:06:49,120 --> 00:06:53,520
maybe deprecate the hph option uh header

149
00:06:53,520 --> 00:06:56,319
uh do we need to re uh re-examine

150
00:06:56,319 --> 00:06:58,960
currently to find hbh options

151
00:06:58,960 --> 00:07:00,800
um a lot of them are just hanging around

152
00:07:00,800 --> 00:07:03,759
for historical sake

153
00:07:03,759 --> 00:07:05,759
maybe the router alert option needs to

154
00:07:05,759 --> 00:07:07,680
be deprecated

155
00:07:07,680 --> 00:07:10,160
and finally what work what documents do

156
00:07:10,160 --> 00:07:11,759
we need to progress in order to make

157
00:07:11,759 --> 00:07:14,919
this happen

158
00:07:17,759 --> 00:07:19,840
would uh and at this point i'll open the

159
00:07:19,840 --> 00:07:22,319
floor for anybody who wants to ask

160
00:07:22,319 --> 00:07:23,599
questions about

161
00:07:23,599 --> 00:07:27,639
what our goals are in this meeting

162
00:07:31,680 --> 00:07:33,680
i see nobody on the queue

163
00:07:33,680 --> 00:07:37,120
so i will be quiet and um

164
00:07:37,120 --> 00:07:38,720
yield the floor to

165
00:07:38,720 --> 00:07:41,120
i think bob is the next presenter

166
00:07:41,120 --> 00:07:43,360
on the agenda i think we have shipping

167
00:07:43,360 --> 00:07:45,680
but uh oh i'm sorry

168
00:07:45,680 --> 00:07:47,840
yes

169
00:07:48,960 --> 00:07:53,680
yeah hi this is uh guillermo presenting

170
00:07:53,680 --> 00:07:55,840
for the uh for that draft for the hp

171
00:07:55,840 --> 00:07:58,960
adoptions processing drops excellent can

172
00:07:58,960 --> 00:08:00,879
you uh share the slice yourself or do

173
00:08:00,879 --> 00:08:02,319
you need some help

174
00:08:02,319 --> 00:08:04,639
um you know i haven't done it before

175
00:08:04,639 --> 00:08:06,560
maybe if you could give me again

176
00:08:06,560 --> 00:08:08,720
probably same time

177
00:08:08,720 --> 00:08:10,000
okay

178
00:08:10,000 --> 00:08:12,479
let's see if we can find the uh

179
00:08:12,479 --> 00:08:15,280
presentation

180
00:08:18,960 --> 00:08:21,599
let's see

181
00:08:23,919 --> 00:08:25,870
i think it is this one

182
00:08:25,870 --> 00:08:28,000
[Music]

183
00:08:28,000 --> 00:08:30,560
is that the correct uh slide set yeah

184
00:08:30,560 --> 00:08:32,880
yes excellent yeah that's it all right

185
00:08:32,880 --> 00:08:34,719
excellent okay

186
00:08:34,719 --> 00:08:35,839
all right

187
00:08:35,839 --> 00:08:38,159
uh hi my name is dion mishra and i'll be

188
00:08:38,159 --> 00:08:40,958
presenting uh operational issues with

189
00:08:40,958 --> 00:08:42,719
processing of humpbai hop extension

190
00:08:42,719 --> 00:08:45,839
headers um

191
00:08:46,000 --> 00:08:47,440
so

192
00:08:47,440 --> 00:08:50,640
so this draft uh just in in recent um i

193
00:08:50,640 --> 00:08:52,880
believe a few a few weeks or so ago we

194
00:08:52,880 --> 00:08:56,080
the draft was recently adopted uh since

195
00:08:56,080 --> 00:08:58,560
adoption we've changed and updated the

196
00:08:58,560 --> 00:08:59,440
name

197
00:08:59,440 --> 00:09:01,440
and then we have a few additional

198
00:09:01,440 --> 00:09:04,399
updates to the draft so um in this in

199
00:09:04,399 --> 00:09:06,240
this deck we'll be we're going over the

200
00:09:06,240 --> 00:09:08,640
updates and then the uh overall

201
00:09:08,640 --> 00:09:11,920
progression of the of this draft and uh

202
00:09:11,920 --> 00:09:13,920
and then as um

203
00:09:13,920 --> 00:09:15,519
as uh

204
00:09:15,519 --> 00:09:17,279
ron had mentioned i guess you know kind

205
00:09:17,279 --> 00:09:19,519
of segue into kind of the issues and all

206
00:09:19,519 --> 00:09:22,080
related to hop i hop extension headers

207
00:09:22,080 --> 00:09:23,920
and especially kind of honing in on the

208
00:09:23,920 --> 00:09:26,320
focus of this draft and really the

209
00:09:26,320 --> 00:09:28,399
problem statement and it's it's really

210
00:09:28,399 --> 00:09:30,959
not now now as this draft is a work your

211
00:09:30,959 --> 00:09:33,839
job document uh really just this drop

212
00:09:33,839 --> 00:09:36,959
draft is really applicable to really any

213
00:09:36,959 --> 00:09:39,600
any issues related and really honed in

214
00:09:39,600 --> 00:09:42,720
on on hbh options and what the problems

215
00:09:42,720 --> 00:09:45,760
that occur that exist today and then how

216
00:09:45,760 --> 00:09:49,360
we can segue into um breaking that cycle

217
00:09:49,360 --> 00:09:50,800
uh

218
00:09:50,800 --> 00:09:53,680
with related issues and not having to um

219
00:09:53,680 --> 00:09:56,399
i guess worst case scenario as ron had

220
00:09:56,399 --> 00:09:58,800
nicely mentioned uh deprecate hph so we

221
00:09:58,800 --> 00:10:01,120
want hph to be viable and that's really

222
00:10:01,120 --> 00:10:02,800
the goal and

223
00:10:02,800 --> 00:10:04,480
and that a lot of that is what we'll

224
00:10:04,480 --> 00:10:06,240
talk through in this slide deck so next

225
00:10:06,240 --> 00:10:08,560
slide

226
00:10:09,279 --> 00:10:11,839
so the changes that were updated um

227
00:10:11,839 --> 00:10:14,880
after the uh adoption call

228
00:10:14,880 --> 00:10:17,920
so that so one is a title this is during

229
00:10:17,920 --> 00:10:19,600
the adoption call then we then we

230
00:10:19,600 --> 00:10:22,079
renamed it after after that so the title

231
00:10:22,079 --> 00:10:24,720
was changed as it was misleading you

232
00:10:24,720 --> 00:10:26,800
know towards the solution so we anything

233
00:10:26,800 --> 00:10:29,040
related to solution space

234
00:10:29,040 --> 00:10:31,279
uh we did a

235
00:10:31,279 --> 00:10:32,560
you know quite heavily and i believe it

236
00:10:32,560 --> 00:10:34,720
was in section seven and eight we we

237
00:10:34,720 --> 00:10:36,880
removed anything that was solution space

238
00:10:36,880 --> 00:10:39,360
because we wanted to make this draft you

239
00:10:39,360 --> 00:10:41,120
know really cater to the work group that

240
00:10:41,120 --> 00:10:42,800
we want the work group to be involved in

241
00:10:42,800 --> 00:10:45,120
helping develop and um progress the

242
00:10:45,120 --> 00:10:47,279
strap so we want so the goal was really

243
00:10:47,279 --> 00:10:48,720
to completely

244
00:10:48,720 --> 00:10:50,800
eliminate anything solution related and

245
00:10:50,800 --> 00:10:53,440
make it come generalized so it can apply

246
00:10:53,440 --> 00:10:56,480
to any solution to help

247
00:10:56,480 --> 00:11:00,000
help make um hph survival

248
00:11:00,000 --> 00:11:02,000
so the purpose of this draft clarified

249
00:11:02,000 --> 00:11:03,760
in both the abstract introduction

250
00:11:03,760 --> 00:11:04,880
sections

251
00:11:04,880 --> 00:11:08,560
scope is also clarified in section two

252
00:11:08,560 --> 00:11:11,680
uh additional references added uh and it

253
00:11:11,680 --> 00:11:13,440
directly quotes specifications in

254
00:11:13,440 --> 00:11:16,240
existing rfcs where we're suitable and

255
00:11:16,240 --> 00:11:17,839
then the requirements section so there

256
00:11:17,839 --> 00:11:20,640
was a lot of updates that we had in the

257
00:11:20,640 --> 00:11:23,279
requirements section and we cleaned up a

258
00:11:23,279 --> 00:11:24,880
lot of that so

259
00:11:24,880 --> 00:11:27,600
anything in there was not pointing to

260
00:11:27,600 --> 00:11:29,440
solution space or any kind of any

261
00:11:29,440 --> 00:11:31,760
solution and just making it more

262
00:11:31,760 --> 00:11:34,880
generalized uh and focused on the uh

263
00:11:34,880 --> 00:11:36,399
problem statement

264
00:11:36,399 --> 00:11:38,160
and then section eight significant

265
00:11:38,160 --> 00:11:40,640
changes um instead of being completed or

266
00:11:40,640 --> 00:11:44,560
deleted we uh we migrated it

267
00:11:44,560 --> 00:11:47,600
we migrated over um

268
00:11:47,600 --> 00:11:49,279
that were important to consider so we

269
00:11:49,279 --> 00:11:50,639
just kind of did some more cleanup in

270
00:11:50,639 --> 00:11:52,639
section 8 as well so really section 8

271
00:11:52,639 --> 00:11:54,959
and sections 7 were really the ones

272
00:11:54,959 --> 00:11:58,399
where we did quite a bit of cleanup uh

273
00:11:58,399 --> 00:11:59,600
before the

274
00:11:59,600 --> 00:12:01,440
before and during the adoption call to

275
00:12:01,440 --> 00:12:04,240
get this document ready for um to become

276
00:12:04,240 --> 00:12:08,920
a work group effort next slide

277
00:12:10,079 --> 00:12:11,839
so as far as future work so the

278
00:12:11,839 --> 00:12:14,079
requirements in section seven st they

279
00:12:14,079 --> 00:12:16,160
still need some more work and we'll be

280
00:12:16,160 --> 00:12:19,120
conducting that in a later revision so

281
00:12:19,120 --> 00:12:21,680
we would like feedback uh from the from

282
00:12:21,680 --> 00:12:23,440
the work group and we appreciate you

283
00:12:23,440 --> 00:12:25,040
know really all the feedback that we had

284
00:12:25,040 --> 00:12:27,120
gotten through the adoption call

285
00:12:27,120 --> 00:12:29,440
and the continued feedback and that any

286
00:12:29,440 --> 00:12:31,200
criticism we definitely wanted we're

287
00:12:31,200 --> 00:12:32,480
open to any

288
00:12:32,480 --> 00:12:35,600
any any changes updates or whatnot um as

289
00:12:35,600 --> 00:12:37,360
this is a work document to help uh

290
00:12:37,360 --> 00:12:40,560
progress this document

291
00:12:40,560 --> 00:12:42,480
uh the migration status strategy in

292
00:12:42,480 --> 00:12:44,399
section 8 is is an important

293
00:12:44,399 --> 00:12:46,000
consideration and

294
00:12:46,000 --> 00:12:48,000
which which needs a work group you know

295
00:12:48,000 --> 00:12:49,600
that we have to work we would like to

296
00:12:49,600 --> 00:12:51,360
work with the work group together and

297
00:12:51,360 --> 00:12:53,360
get recommendations on migration

298
00:12:53,360 --> 00:12:56,240
strategies of how to make um

299
00:12:56,240 --> 00:12:59,040
hph options viable and kind of a really

300
00:12:59,040 --> 00:13:01,760
a path forward and that's really a big a

301
00:13:01,760 --> 00:13:03,440
work group effort to help make the

302
00:13:03,440 --> 00:13:07,839
viability of uh speech options

303
00:13:08,000 --> 00:13:10,800
uh as well as uh news news sections on

304
00:13:10,800 --> 00:13:13,279
um and other network scenarios uh they

305
00:13:13,279 --> 00:13:14,880
haven't been added yet so there may be

306
00:13:14,880 --> 00:13:16,959
up that that may be some additional work

307
00:13:16,959 --> 00:13:19,200
future work so if the work group you

308
00:13:19,200 --> 00:13:21,519
know as we progress just really uh

309
00:13:21,519 --> 00:13:23,600
brainstorm and think of ideas um

310
00:13:23,600 --> 00:13:25,839
enterprise iot or other

311
00:13:25,839 --> 00:13:28,720
other use cases and scenarios related to

312
00:13:28,720 --> 00:13:33,079
hph options next slide

313
00:13:34,079 --> 00:13:36,880
so i and on the mailing list there were

314
00:13:36,880 --> 00:13:40,399
some discussions related to the uh draft

315
00:13:40,399 --> 00:13:43,360
and just really clarifications um and

316
00:13:43,360 --> 00:13:45,519
and with this draft and just comparing

317
00:13:45,519 --> 00:13:47,040
there were some comparisons done with

318
00:13:47,040 --> 00:13:50,000
the goals of rc9998 and just kind of

319
00:13:50,000 --> 00:13:53,600
comparisons to this draft so rc 1998 it

320
00:13:53,600 --> 00:13:55,279
was really it's a generic and it's

321
00:13:55,279 --> 00:13:56,959
really talks to

322
00:13:56,959 --> 00:13:59,360
all the all the extension headers and

323
00:13:59,360 --> 00:14:01,040
really the christmas tree effect of the

324
00:14:01,040 --> 00:14:03,519
extension headers and and and the

325
00:14:03,519 --> 00:14:06,800
limits on number of

326
00:14:06,800 --> 00:14:08,639
options you know within each header

327
00:14:08,639 --> 00:14:10,399
especially the hph and destination

328
00:14:10,399 --> 00:14:12,160
option headers but really talks

329
00:14:12,160 --> 00:14:15,519
generically to all all extension headers

330
00:14:15,519 --> 00:14:17,360
it doesn't call out specifically just

331
00:14:17,360 --> 00:14:20,720
the hph where this draft is really honed

332
00:14:20,720 --> 00:14:21,440
in

333
00:14:21,440 --> 00:14:24,000
just solely hold honed in on the hbh

334
00:14:24,000 --> 00:14:26,880
options and really trying to really

335
00:14:26,880 --> 00:14:29,839
identify the problem statement clearly

336
00:14:29,839 --> 00:14:31,760
and then and the problem and the problem

337
00:14:31,760 --> 00:14:33,680
space and kind of the endless cycle that

338
00:14:33,680 --> 00:14:34,800
you know with

339
00:14:34,800 --> 00:14:38,480
the uh misnomer with the hbh uh being a

340
00:14:38,480 --> 00:14:41,279
dos vector and you know with with older

341
00:14:41,279 --> 00:14:43,040
hardware and now when you when your

342
00:14:43,040 --> 00:14:45,120
hardware kind of getting around that you

343
00:14:45,120 --> 00:14:46,560
know coming around coming around the

344
00:14:46,560 --> 00:14:49,680
bend with that now trying to make get to

345
00:14:49,680 --> 00:14:51,600
the point where hbh can really be viable

346
00:14:51,600 --> 00:14:53,440
so really honed in and then also and

347
00:14:53,440 --> 00:14:56,720
then solutions that where hbh especially

348
00:14:56,720 --> 00:14:59,360
with developers being able to use hbh as

349
00:14:59,360 --> 00:15:00,560
a viable

350
00:15:00,560 --> 00:15:02,639
option for telemetry and and there's so

351
00:15:02,639 --> 00:15:04,320
there's so much there's a lot of space

352
00:15:04,320 --> 00:15:07,440
that can be that can be used um for for

353
00:15:07,440 --> 00:15:09,680
hph so that that's something that that's

354
00:15:09,680 --> 00:15:11,920
really a goal you know overall

355
00:15:11,920 --> 00:15:14,320
you know for the ietf especially across

356
00:15:14,320 --> 00:15:17,199
all working groups being able to utilize

357
00:15:17,199 --> 00:15:19,839
hvh you know for for a variety of use

358
00:15:19,839 --> 00:15:20,800
cases

359
00:15:20,800 --> 00:15:23,279
next slide

360
00:15:24,880 --> 00:15:27,120
so motivational work up so since the

361
00:15:27,120 --> 00:15:29,600
very beginning so hph options is a

362
00:15:29,600 --> 00:15:32,000
valuable container for facilitating

363
00:15:32,000 --> 00:15:34,000
these services and that's really the key

364
00:15:34,000 --> 00:15:36,079
that here that we really want to

365
00:15:36,079 --> 00:15:38,880
kind of break the break a problem that

366
00:15:38,880 --> 00:15:41,600
exists with the endless cycle of hph

367
00:15:41,600 --> 00:15:44,160
being at the from an industry standpoint

368
00:15:44,160 --> 00:15:46,560
being a dos vector you know and an

369
00:15:46,560 --> 00:15:49,440
impact of the control plan you punch to

370
00:15:49,440 --> 00:15:52,560
the slow path and now making it viable

371
00:15:52,560 --> 00:15:53,759
so

372
00:15:53,759 --> 00:15:56,560
so nasa and and with that the having

373
00:15:56,560 --> 00:15:58,800
that hph option as a container there's

374
00:15:58,800 --> 00:16:01,279
there are there are a variety of use

375
00:16:01,279 --> 00:16:04,560
cases um new services telemetry you know

376
00:16:04,560 --> 00:16:09,719
ippm working group with any io

377
00:16:11,040 --> 00:16:12,399
and there's a variety and there's

378
00:16:12,399 --> 00:16:13,920
probably a lot more to come you know

379
00:16:13,920 --> 00:16:16,959
once once hbh really becomes viable and

380
00:16:16,959 --> 00:16:19,839
we kind of break that cycle uh you know

381
00:16:19,839 --> 00:16:21,680
a lot more development can common and

382
00:16:21,680 --> 00:16:23,440
really the gain is the operators can

383
00:16:23,440 --> 00:16:25,120
really gain from this that this new

384
00:16:25,120 --> 00:16:27,120
development now we now we have this

385
00:16:27,120 --> 00:16:29,759
extra tool in the operator's toolbox to

386
00:16:29,759 --> 00:16:30,959
really help

387
00:16:30,959 --> 00:16:33,759
pave the path forward

388
00:16:33,759 --> 00:16:35,759
so our main purpose is enabling the hp

389
00:16:35,759 --> 00:16:37,360
option to be utilized in a safe and

390
00:16:37,360 --> 00:16:39,920
secure manner uh without danger

391
00:16:39,920 --> 00:16:42,000
endangering any operations and then the

392
00:16:42,000 --> 00:16:43,680
ease of deployment of network services

393
00:16:43,680 --> 00:16:45,440
and in a multi-vendor operational

394
00:16:45,440 --> 00:16:49,639
scenarios next slide

395
00:16:51,519 --> 00:16:54,160
so with the modern router architecture

396
00:16:54,160 --> 00:16:56,079
design so the main so the main thing is

397
00:16:56,079 --> 00:16:58,399
this is strict separation between

398
00:16:58,399 --> 00:17:00,399
control plane and forwarding plane and

399
00:17:00,399 --> 00:17:02,399
in older hardware what would what would

400
00:17:02,399 --> 00:17:03,519
happen

401
00:17:03,519 --> 00:17:06,000
and really the big thing is with the dos

402
00:17:06,000 --> 00:17:08,160
vector and really that you know having

403
00:17:08,160 --> 00:17:10,720
traffic it hits the forwarding plane but

404
00:17:10,720 --> 00:17:12,799
actually all traffic both forwarding

405
00:17:12,799 --> 00:17:14,720
plane and control plane type header

406
00:17:14,720 --> 00:17:15,919
options

407
00:17:15,919 --> 00:17:17,280
uh being

408
00:17:17,280 --> 00:17:20,079
the hbh options being punted to this to

409
00:17:20,079 --> 00:17:21,520
the um

410
00:17:21,520 --> 00:17:23,599
to the to the soft to the slow path or

411
00:17:23,599 --> 00:17:25,119
the control plane path and that's and

412
00:17:25,119 --> 00:17:26,240
that's really

413
00:17:26,240 --> 00:17:27,839
what um

414
00:17:27,839 --> 00:17:30,080
with newer hardware and intelligence

415
00:17:30,080 --> 00:17:32,160
built into the forwarding plane so and

416
00:17:32,160 --> 00:17:34,720
being able to mitigate that and now with

417
00:17:34,720 --> 00:17:37,039
rate with interfaith you know being able

418
00:17:37,039 --> 00:17:38,640
to control the forwarding plan the rate

419
00:17:38,640 --> 00:17:40,480
limiting mechanisms that can help

420
00:17:40,480 --> 00:17:42,559
protect the control plan separation and

421
00:17:42,559 --> 00:17:44,640
that and that's really the big big deal

422
00:17:44,640 --> 00:17:47,039
that really happens i think in with with

423
00:17:47,039 --> 00:17:49,280
operators you know really across the

424
00:17:49,280 --> 00:17:51,440
board of the fear

425
00:17:51,440 --> 00:17:52,640
uh the

426
00:17:52,640 --> 00:17:54,480
not having that separation of control

427
00:17:54,480 --> 00:17:55,679
and forwarding plane that everything

428
00:17:55,679 --> 00:17:57,200
anything that supporting plane whether

429
00:17:57,200 --> 00:17:59,280
it's a a forwarding plane option or a

430
00:17:59,280 --> 00:18:00,640
control plane option that everything

431
00:18:00,640 --> 00:18:02,480
getting punted and then not having that

432
00:18:02,480 --> 00:18:05,120
complete separation that that has always

433
00:18:05,120 --> 00:18:08,320
been the fear and and and so with the

434
00:18:08,320 --> 00:18:10,720
rate limiting that that helps but that

435
00:18:10,720 --> 00:18:12,559
that does cause you know inconsistent

436
00:18:12,559 --> 00:18:14,400
pack and drops and impacting normal

437
00:18:14,400 --> 00:18:15,679
forwarding so

438
00:18:15,679 --> 00:18:17,039
um

439
00:18:17,039 --> 00:18:20,320
being able to process and i guess with

440
00:18:20,320 --> 00:18:22,799
newer hardware especially with mpus and

441
00:18:22,799 --> 00:18:26,320
as development happens being able to uh

442
00:18:26,320 --> 00:18:29,200
process for you know process of hbh

443
00:18:29,200 --> 00:18:31,039
options headers really in the forwarding

444
00:18:31,039 --> 00:18:33,200
place in path and line rate and that's

445
00:18:33,200 --> 00:18:35,360
that's really the goal and as as a

446
00:18:35,360 --> 00:18:36,799
development there has been a lot of

447
00:18:36,799 --> 00:18:38,559
development in the industry with modern

448
00:18:38,559 --> 00:18:40,320
routers and being able to handle hph

449
00:18:40,320 --> 00:18:42,720
options so the misnomer of not being

450
00:18:42,720 --> 00:18:44,640
able to process hbh options i think

451
00:18:44,640 --> 00:18:46,320
that's that's something that we kind of

452
00:18:46,320 --> 00:18:48,559
want to tackle and i think as as this

453
00:18:48,559 --> 00:18:50,640
problem statement draft you know you

454
00:18:50,640 --> 00:18:52,880
know gets adopted and becomes rfc we can

455
00:18:52,880 --> 00:18:55,039
really help at least with the industry

456
00:18:55,039 --> 00:18:56,880
and kind of change that misnomer that

457
00:18:56,880 --> 00:18:59,919
hbh options it is really viable and it's

458
00:18:59,919 --> 00:19:01,600
in a break that cycle that it really

459
00:19:01,600 --> 00:19:03,440
will you know not be a dos factor not

460
00:19:03,440 --> 00:19:06,240
with intelligent mpu's being able to do

461
00:19:06,240 --> 00:19:08,559
that proper processing um with

462
00:19:08,559 --> 00:19:10,880
development with as well with let's say

463
00:19:10,880 --> 00:19:12,960
bob hindenstraft you know with

464
00:19:12,960 --> 00:19:15,919
restricting the number of options

465
00:19:15,919 --> 00:19:17,760
and and other solutions that exist you

466
00:19:17,760 --> 00:19:19,919
know any solutions that exist to really

467
00:19:19,919 --> 00:19:22,480
make it make it possible and viable

468
00:19:22,480 --> 00:19:25,799
next slide

469
00:19:28,240 --> 00:19:30,720
so uh common implementation so the

470
00:19:30,720 --> 00:19:32,799
values in the next header field um in

471
00:19:32,799 --> 00:19:35,200
the ipv6 header so

472
00:19:35,200 --> 00:19:37,120
so the and this is kind of really the

473
00:19:37,120 --> 00:19:40,000
kind of big issue that it triggers um

474
00:19:40,000 --> 00:19:41,919
so when the in the next header field is

475
00:19:41,919 --> 00:19:43,440
set to the uh

476
00:19:43,440 --> 00:19:46,240
to options to zero that directly is

477
00:19:46,240 --> 00:19:48,559
directly sent to the slow path so the

478
00:19:48,559 --> 00:19:50,559
option type

479
00:19:50,559 --> 00:19:51,919
won't be examined before the pack has

480
00:19:51,919 --> 00:19:53,440
sent to this float path

481
00:19:53,440 --> 00:19:55,360
so and that's really the standard kind

482
00:19:55,360 --> 00:19:57,360
of default behavior so as traffic comes

483
00:19:57,360 --> 00:19:59,679
in and that's then that's really the uh

484
00:19:59,679 --> 00:20:02,159
the fear that i and that operators have

485
00:20:02,159 --> 00:20:04,320
with um with hph and that's why there's

486
00:20:04,320 --> 00:20:06,880
a field rate limiting filtering and um

487
00:20:06,880 --> 00:20:11,360
and dropping with acls to drop it so

488
00:20:11,360 --> 00:20:12,960
and that and that's the common

489
00:20:12,960 --> 00:20:15,039
implementation that's been done with

490
00:20:15,039 --> 00:20:17,840
most vendors as as as the development

491
00:20:17,840 --> 00:20:19,760
happens with with modern routers with

492
00:20:19,760 --> 00:20:22,720
npus and and moving away from fixed

493
00:20:22,720 --> 00:20:25,760
function 86 to um

494
00:20:25,760 --> 00:20:27,520
more special specialized i guess

495
00:20:27,520 --> 00:20:29,919
architectures and even proprietary asics

496
00:20:29,919 --> 00:20:31,679
but that basic development as that

497
00:20:31,679 --> 00:20:33,520
happens um

498
00:20:33,520 --> 00:20:34,559
the uh

499
00:20:34,559 --> 00:20:37,360
the priorities being sent the forwarding

500
00:20:37,360 --> 00:20:39,360
plan and what you know will be

501
00:20:39,360 --> 00:20:41,440
we should be able to handle you know hp

502
00:20:41,440 --> 00:20:44,400
adoption the line break and and with you

503
00:20:44,400 --> 00:20:46,400
know possible restrictions on the number

504
00:20:46,400 --> 00:20:49,120
of options that as

505
00:20:49,120 --> 00:20:51,840
draft you know hasn't that that idea and

506
00:20:51,840 --> 00:20:53,679
maybe other solutions that actually can

507
00:20:53,679 --> 00:20:56,320
help kind of clean that up so making

508
00:20:56,320 --> 00:20:58,640
that forwarding plane viable so we don't

509
00:20:58,640 --> 00:21:00,640
you know punt traffic directly to the

510
00:21:00,640 --> 00:21:03,360
slow path

511
00:21:03,360 --> 00:21:05,600
so and historical reasons that you know

512
00:21:05,600 --> 00:21:07,679
and then this also something that uh

513
00:21:07,679 --> 00:21:09,679
what what this draft really spells out

514
00:21:09,679 --> 00:21:11,280
in detail there's an architecture

515
00:21:11,280 --> 00:21:13,120
section that goes into the

516
00:21:13,120 --> 00:21:14,559
control plane and forwarding plane

517
00:21:14,559 --> 00:21:16,960
architecture and historical reasons of

518
00:21:16,960 --> 00:21:18,720
what happened with with this with not

519
00:21:18,720 --> 00:21:20,320
having that separation and everything

520
00:21:20,320 --> 00:21:22,640
being punched into the slow path and now

521
00:21:22,640 --> 00:21:25,039
newer asics and architect and basics and

522
00:21:25,039 --> 00:21:28,159
um npus being able to really have the

523
00:21:28,159 --> 00:21:30,960
ability and can handle hph options so

524
00:21:30,960 --> 00:21:32,320
that that's that's that's really the

525
00:21:32,320 --> 00:21:34,799
goal um that she kind of changed that

526
00:21:34,799 --> 00:21:37,120
mindset for operators and then implement

527
00:21:37,120 --> 00:21:39,360
implementation as well now you know at

528
00:21:39,360 --> 00:21:41,840
least across the board being able to

529
00:21:41,840 --> 00:21:45,760
handle that handle the processing

530
00:21:45,760 --> 00:21:48,480
uh next slide

531
00:21:50,480 --> 00:21:54,240
so uh standard specifications so rfc

532
00:21:54,240 --> 00:21:56,400
2460 uh required that all the nodes

533
00:21:56,400 --> 00:21:58,799
examine and process hop by hop options

534
00:21:58,799 --> 00:21:59,760
header

535
00:21:59,760 --> 00:22:02,720
rc 8200 now expected all those long

536
00:22:02,720 --> 00:22:04,480
delivery paths only examine the process

537
00:22:04,480 --> 00:22:06,720
of halfway hop options that are if

538
00:22:06,720 --> 00:22:09,039
explicitly configured to do so

539
00:22:09,039 --> 00:22:11,360
so that was a that was a big change a

540
00:22:11,360 --> 00:22:14,640
change from a 2460 to 8200 so now

541
00:22:14,640 --> 00:22:16,000
there's a

542
00:22:16,000 --> 00:22:18,720
local configuration that depending on

543
00:22:18,720 --> 00:22:20,400
the um

544
00:22:20,400 --> 00:22:22,640
on the on the note itself you know

545
00:22:22,640 --> 00:22:25,039
whether if you can process that to

546
00:22:25,039 --> 00:22:27,360
process that only if it's um if it's

547
00:22:27,360 --> 00:22:29,760
capable of processing so that that that

548
00:22:29,760 --> 00:22:32,480
does help and you know for operators as

549
00:22:32,480 --> 00:22:35,200
well to not have to um

550
00:22:35,200 --> 00:22:37,120
you have that fear of that control

551
00:22:37,120 --> 00:22:38,400
separation of control plane or

552
00:22:38,400 --> 00:22:40,400
forwarding plane that nodes that are

553
00:22:40,400 --> 00:22:43,679
maybe down rev that they can avoid and

554
00:22:43,679 --> 00:22:45,919
they with local configuration to avoid

555
00:22:45,919 --> 00:22:47,520
having to process hph options that

556
00:22:47,520 --> 00:22:49,760
they're not capable of doing so

557
00:22:49,760 --> 00:22:53,120
and then as well rfc 8200 nodes if you

558
00:22:53,120 --> 00:22:56,320
configure to ignore drop or sign packets

559
00:22:56,320 --> 00:22:58,320
of community hp captions to the slow

560
00:22:58,320 --> 00:22:59,600
path

561
00:22:59,600 --> 00:23:01,679
so with our current situations of

562
00:23:01,679 --> 00:23:04,480
various configurations and and operator

563
00:23:04,480 --> 00:23:06,240
of networks unable to support service

564
00:23:06,240 --> 00:23:08,320
deployments and just disturbs normal

565
00:23:08,320 --> 00:23:11,039
ip40 so that that's really kind of the

566
00:23:11,039 --> 00:23:11,760
big

567
00:23:11,760 --> 00:23:13,440
big issue especially on the public

568
00:23:13,440 --> 00:23:15,919
internet as well as um

569
00:23:15,919 --> 00:23:18,480
you know private mpls you know and uh

570
00:23:18,480 --> 00:23:20,480
internal networks but any any anywhere

571
00:23:20,480 --> 00:23:22,240
where you have hvh options i think the

572
00:23:22,240 --> 00:23:24,480
fear of that not having that control

573
00:23:24,480 --> 00:23:26,559
plan separation control important plane

574
00:23:26,559 --> 00:23:29,280
separation when hbh option comes in you

575
00:23:29,280 --> 00:23:31,200
know either you're dropping it right

576
00:23:31,200 --> 00:23:33,440
limiting it or um

577
00:23:33,440 --> 00:23:34,799
where or being punched into the

578
00:23:34,799 --> 00:23:36,400
forwarding path and

579
00:23:36,400 --> 00:23:38,080
the ignore is really the biggest thing

580
00:23:38,080 --> 00:23:40,159
that you're ignoring it so now that that

581
00:23:40,159 --> 00:23:42,159
that feature of being able to make use

582
00:23:42,159 --> 00:23:44,159
hph absence reliably

583
00:23:44,159 --> 00:23:46,480
and having it be a feasible solution for

584
00:23:46,480 --> 00:23:49,039
for developers is really not possible

585
00:23:49,039 --> 00:23:50,480
just the way the way things stand today

586
00:23:50,480 --> 00:23:52,400
is a little bit without ignoring

587
00:23:52,400 --> 00:23:54,960
ignoring or or words punch to the slow

588
00:23:54,960 --> 00:23:56,640
path or drop

589
00:23:56,640 --> 00:23:59,200
next slide

590
00:24:00,480 --> 00:24:02,880
job rate is a typical processing so many

591
00:24:02,880 --> 00:24:05,840
many operators deploy ecls that discard

592
00:24:05,840 --> 00:24:08,400
all packets containing hph options

593
00:24:08,400 --> 00:24:10,960
um so this is got with this draft of the

594
00:24:10,960 --> 00:24:13,520
honing and on hbh and trying to control

595
00:24:13,520 --> 00:24:15,840
just change that uh mindset for

596
00:24:15,840 --> 00:24:18,480
operators to not not do that

597
00:24:18,480 --> 00:24:21,120
um as with with the development and with

598
00:24:21,120 --> 00:24:23,919
modern routers and development that that

599
00:24:23,919 --> 00:24:26,720
hph options it can be viable and there

600
00:24:26,720 --> 00:24:28,960
is with your architectures that we have

601
00:24:28,960 --> 00:24:30,720
that's uh with that separation control

602
00:24:30,720 --> 00:24:33,600
plan forwarding plane

603
00:24:33,600 --> 00:24:36,080
rc 6564

604
00:24:36,080 --> 00:24:38,080
reports from fields indicating that some

605
00:24:38,080 --> 00:24:39,919
ip routers deployed with global internet

606
00:24:39,919 --> 00:24:43,120
are configured either to ignore or drop

607
00:24:43,120 --> 00:24:45,760
had packets having hpd

608
00:24:45,760 --> 00:24:48,400
uh rs 7872

609
00:24:48,400 --> 00:24:50,720
so many many network operators perceive

610
00:24:50,720 --> 00:24:53,039
hph options to be a breach of separation

611
00:24:53,039 --> 00:24:55,120
control control authority plane which i

612
00:24:55,120 --> 00:24:56,080
mentioned

613
00:24:56,080 --> 00:24:57,440
several network network operators

614
00:24:57,440 --> 00:24:58,880
configure their nodes to discard all

615
00:24:58,880 --> 00:25:01,360
packets connected to the page options so

616
00:25:01,360 --> 00:25:03,440
kind of making it really not viable and

617
00:25:03,440 --> 00:25:05,039
then other nodes other configure nodes

618
00:25:05,039 --> 00:25:07,279
are forwarding packets but ignore hph

619
00:25:07,279 --> 00:25:09,840
options so the ignoring dropping and and

620
00:25:09,840 --> 00:25:12,080
then you know control plane you know so

621
00:25:12,080 --> 00:25:14,080
there's there are you know overall just

622
00:25:14,080 --> 00:25:16,000
a lot of the operators typical

623
00:25:16,000 --> 00:25:18,000
processing really kind of denied denied

624
00:25:18,000 --> 00:25:20,400
dropper or um

625
00:25:20,400 --> 00:25:22,799
or uh or not for the rate limit you know

626
00:25:22,799 --> 00:25:24,640
then that's really been the typical kind

627
00:25:24,640 --> 00:25:26,640
of uh business as usual

628
00:25:26,640 --> 00:25:29,440
uh method of dealing with hbh and you

629
00:25:29,440 --> 00:25:32,000
know making it you know not viable

630
00:25:32,000 --> 00:25:35,120
excuse me consequence yes sorry

631
00:25:35,120 --> 00:25:36,799
um if you want to leave time for

632
00:25:36,799 --> 00:25:39,440
questions uh you might want to

633
00:25:39,440 --> 00:25:41,600
see me

634
00:25:41,600 --> 00:25:43,279
yeah let me let me just

635
00:25:43,279 --> 00:25:45,840
thank you thank thanks ron um

636
00:25:45,840 --> 00:25:47,520
good next slide i'll see if i can breeze

637
00:25:47,520 --> 00:25:49,039
through

638
00:25:49,039 --> 00:25:50,799
all right

639
00:25:50,799 --> 00:25:52,320
all right so shall we break the end

640
00:25:52,320 --> 00:25:54,240
little swoop so that's the biggest thing

641
00:25:54,240 --> 00:25:56,960
here we want to really make hph viable

642
00:25:56,960 --> 00:25:59,279
really break that kind of mindset for

643
00:25:59,279 --> 00:26:02,000
operators uh with with

644
00:26:02,000 --> 00:26:03,200
development of

645
00:26:03,200 --> 00:26:05,440
you know new implementations and updated

646
00:26:05,440 --> 00:26:07,200
implementations across the board with

647
00:26:07,200 --> 00:26:10,240
vendors uh making it to make hph viable

648
00:26:10,240 --> 00:26:12,080
and being able to process hp and you

649
00:26:12,080 --> 00:26:14,400
know options um not having that mindset

650
00:26:14,400 --> 00:26:16,080
that it's a dos vector

651
00:26:16,080 --> 00:26:16,960
and

652
00:26:16,960 --> 00:26:20,000
and then um not and then and getting

653
00:26:20,000 --> 00:26:21,600
getting out of that mindset that we have

654
00:26:21,600 --> 00:26:23,520
to drop them gotta discard the plain

655
00:26:23,520 --> 00:26:29,279
acls to uh drop it drop up hb adoptions

656
00:26:29,679 --> 00:26:32,480
so we'd like to so with the community

657
00:26:32,480 --> 00:26:34,159
you know i you know internet community

658
00:26:34,159 --> 00:26:36,080
at large we'd like to break

659
00:26:36,080 --> 00:26:38,000
the loop you know this continuous loop

660
00:26:38,000 --> 00:26:40,720
of you know not not

661
00:26:40,720 --> 00:26:42,159
not uh

662
00:26:42,159 --> 00:26:44,880
having hph really be reliable you know

663
00:26:44,880 --> 00:26:47,039
because it because of the mindset with

664
00:26:47,039 --> 00:26:48,960
the operators and breaking that loop fix

665
00:26:48,960 --> 00:26:51,520
the problem so the problem exists and

666
00:26:51,520 --> 00:26:54,159
then trying to make hbh viable uh with

667
00:26:54,159 --> 00:26:56,400
processing and having feasible solutions

668
00:26:56,400 --> 00:26:58,640
such as i mentioned you know bob in the

669
00:26:58,640 --> 00:27:00,159
trap

670
00:27:00,159 --> 00:27:02,400
with the limit of the number of hbh

671
00:27:02,400 --> 00:27:04,240
options and other solutions that may be

672
00:27:04,240 --> 00:27:07,039
out there fixing that problem and making

673
00:27:07,039 --> 00:27:10,000
make hph options actually uh be able to

674
00:27:10,000 --> 00:27:11,600
you know be a viable solution that can

675
00:27:11,600 --> 00:27:12,960
be utilized by operators you know in

676
00:27:12,960 --> 00:27:15,120
their operator toolbox um

677
00:27:15,120 --> 00:27:17,440
now allow better leverage of the hph

678
00:27:17,440 --> 00:27:21,399
capability next slide

679
00:27:24,559 --> 00:27:26,559
so we've collected requirements uh you

680
00:27:26,559 --> 00:27:29,120
know on reasonable solutions so there

681
00:27:29,120 --> 00:27:31,679
has there has been um

682
00:27:31,679 --> 00:27:33,919
you know we've gone through i taught

683
00:27:33,919 --> 00:27:35,919
mentioned uh uh bobsleigh and they'll be

684
00:27:35,919 --> 00:27:37,520
talking about that i think everything's

685
00:27:37,520 --> 00:27:39,120
up after this so

686
00:27:39,120 --> 00:27:40,559
that's that's really the big one and

687
00:27:40,559 --> 00:27:42,000
i'll i'm gonna skip through this slide

688
00:27:42,000 --> 00:27:44,320
that i'll be digging into that anything

689
00:27:44,320 --> 00:27:48,000
in his presentation next slide

690
00:27:48,000 --> 00:27:48,799
you

691
00:27:48,799 --> 00:27:52,399
so uh questioning comments

692
00:27:54,559 --> 00:27:57,200
okay i think to stay on uh

693
00:27:57,200 --> 00:27:59,840
on the agenda we should probably move on

694
00:27:59,840 --> 00:28:02,799
we have a 25-minute q a session at the

695
00:28:02,799 --> 00:28:04,320
end of the

696
00:28:04,320 --> 00:28:06,320
meeting so let's hold our questions till

697
00:28:06,320 --> 00:28:08,399
then

698
00:28:08,399 --> 00:28:11,399
bob

699
00:28:18,320 --> 00:28:21,840
uh gory was also going to present

700
00:28:21,840 --> 00:28:25,439
let me see if i can figure it out

701
00:28:26,080 --> 00:28:29,480
do the slides

702
00:28:32,640 --> 00:28:35,440
hi everyone

703
00:28:36,799 --> 00:28:38,720
hopefully i'll be complimenting bob in

704
00:28:38,720 --> 00:28:41,360
this talk

705
00:28:41,600 --> 00:28:45,320
or the other way around

706
00:28:45,919 --> 00:28:48,240
which

707
00:28:50,000 --> 00:28:52,080
feel free to share your video gory so we

708
00:28:52,080 --> 00:28:55,360
don't sit up here alone

709
00:28:56,159 --> 00:29:00,480
do you think that helps here's my video

710
00:29:10,080 --> 00:29:13,840
i'm not seeing the deck

711
00:29:26,480 --> 00:29:30,080
oh someone is doing it

712
00:29:31,440 --> 00:29:34,399
did you did you find it bob no

713
00:29:34,399 --> 00:29:36,799
no it didn't

714
00:29:36,799 --> 00:29:39,799
um

715
00:29:41,360 --> 00:29:44,320
let's see yes this is not a minimum no

716
00:29:44,320 --> 00:29:47,439
it's not a minimum one

717
00:29:48,240 --> 00:29:50,399
of these hope i hope options processing

718
00:29:50,399 --> 00:29:51,679
procedures

719
00:29:51,679 --> 00:29:53,440
not sure this one

720
00:29:53,440 --> 00:29:55,679
yeah i can share it for you

721
00:29:55,679 --> 00:29:57,840
thank you

722
00:29:57,840 --> 00:29:59,279
good

723
00:29:59,279 --> 00:30:00,399
um

724
00:30:00,399 --> 00:30:04,080
yes gory and i got involved in this

725
00:30:04,080 --> 00:30:06,080
when we were working on the path mtu

726
00:30:06,080 --> 00:30:08,720
option corey

727
00:30:08,720 --> 00:30:10,320
and his

728
00:30:10,320 --> 00:30:13,440
university did a number of

729
00:30:13,440 --> 00:30:14,880
data collection

730
00:30:14,880 --> 00:30:18,240
to sort of figure out how well hop i hop

731
00:30:18,240 --> 00:30:21,279
work hop by hop options worked and

732
00:30:21,279 --> 00:30:23,039
we quickly discovered that they're

733
00:30:23,039 --> 00:30:25,919
dropped a lot especially at the edge

734
00:30:25,919 --> 00:30:28,880
and so it was

735
00:30:28,880 --> 00:30:30,960
so we started to think about how could

736
00:30:30,960 --> 00:30:35,200
we improve uh processing pop-up options

737
00:30:35,200 --> 00:30:37,279
yeah there's been a lot of interesting

738
00:30:37,279 --> 00:30:38,960
discussion in the

739
00:30:38,960 --> 00:30:41,039
uh dabber room

740
00:30:41,039 --> 00:30:45,279
about this so why don't we next slide

741
00:30:47,279 --> 00:30:50,399
yeah so this this is um

742
00:30:50,399 --> 00:30:54,080
as the previous speaker said top

743
00:30:54,080 --> 00:30:55,600
options are not working well on the

744
00:30:55,600 --> 00:30:58,080
internet it's very common to drop them

745
00:30:58,080 --> 00:31:01,039
and so this is a proposal to modify how

746
00:31:01,039 --> 00:31:04,559
routers process hop high up options next

747
00:31:04,559 --> 00:31:06,960
slide

748
00:31:09,840 --> 00:31:13,199
and i think this was also

749
00:31:13,760 --> 00:31:16,720
covered pretty well in the previous

750
00:31:16,720 --> 00:31:19,720
talks

751
00:31:20,080 --> 00:31:23,199
let me go ahead

752
00:31:25,519 --> 00:31:28,559
yes and 8200

753
00:31:28,559 --> 00:31:29,840
sort of

754
00:31:29,840 --> 00:31:32,000
define what was up we believed to be

755
00:31:32,000 --> 00:31:34,559
current practice that you know

756
00:31:34,559 --> 00:31:37,440
when 8200 was done that you know they

757
00:31:37,440 --> 00:31:38,720
weren't getting

758
00:31:38,720 --> 00:31:41,039
processed and already so

759
00:31:41,039 --> 00:31:42,159
it was

760
00:31:42,159 --> 00:31:45,200
changed or clarified that

761
00:31:45,200 --> 00:31:46,640
um

762
00:31:46,640 --> 00:31:48,399
you would only process them if you were

763
00:31:48,399 --> 00:31:50,799
configured to do so and this obviously

764
00:31:50,799 --> 00:31:53,039
did not improve the situation

765
00:31:53,039 --> 00:31:55,679
next slide

766
00:31:56,880 --> 00:32:00,480
so corey do you want to

767
00:32:00,480 --> 00:32:02,000
pick this up

768
00:32:02,000 --> 00:32:04,720
yeah okay

769
00:32:04,799 --> 00:32:06,960
so

770
00:32:06,960 --> 00:32:09,039
our take was

771
00:32:09,039 --> 00:32:11,679
could we find a way to simplify

772
00:32:11,679 --> 00:32:13,600
the way in which hot buy hop options are

773
00:32:13,600 --> 00:32:15,279
used

774
00:32:15,279 --> 00:32:17,519
because commonly

775
00:32:17,519 --> 00:32:19,840
we find paths that drop the hotmail hop

776
00:32:19,840 --> 00:32:22,080
option at some point along the path

777
00:32:22,080 --> 00:32:23,760
now this isn't dropped in the sending

778
00:32:23,760 --> 00:32:25,519
node and it isn't dropped in the

779
00:32:25,519 --> 00:32:27,840
receiving node and it's not even dropped

780
00:32:27,840 --> 00:32:29,679
in the first half it's dropped a little

781
00:32:29,679 --> 00:32:32,559
bit into the path in general

782
00:32:32,559 --> 00:32:34,159
and

783
00:32:34,159 --> 00:32:37,120
we know why it's because people fear bad

784
00:32:37,120 --> 00:32:39,039
things might happen and that's always a

785
00:32:39,039 --> 00:32:40,840
good thing to

786
00:32:40,840 --> 00:32:42,960
anticipate and

787
00:32:42,960 --> 00:32:45,760
the slow path bit is the most important

788
00:32:45,760 --> 00:32:47,519
i think of these

789
00:32:47,519 --> 00:32:50,000
there are a number of little pieces but

790
00:32:50,000 --> 00:32:52,640
the ability to uh push something onto

791
00:32:52,640 --> 00:32:54,399
the slow path

792
00:32:54,399 --> 00:32:56,799
we now see as a dos attack and

793
00:32:56,799 --> 00:32:59,519
we have rfcs that support us in this

794
00:32:59,519 --> 00:33:01,039
so the goal is to redefine the

795
00:33:01,039 --> 00:33:03,279
procedures to make hot lap actions

796
00:33:03,279 --> 00:33:04,960
practical

797
00:33:04,960 --> 00:33:06,720
and we know it won't work on all paths

798
00:33:06,720 --> 00:33:08,399
so this isn't kind of saying hey we'll

799
00:33:08,399 --> 00:33:09,919
write an rfc and change all these

800
00:33:09,919 --> 00:33:11,279
routers

801
00:33:11,279 --> 00:33:13,760
but what we think it can do is we can

802
00:33:13,760 --> 00:33:16,640
encourage a design and deployment

803
00:33:16,640 --> 00:33:19,360
case where it starts working places and

804
00:33:19,360 --> 00:33:21,440
the incremental use of this is something

805
00:33:21,440 --> 00:33:24,559
you can do and get benefit from with

806
00:33:24,559 --> 00:33:27,120
some use of hot buy hop options so

807
00:33:27,120 --> 00:33:29,039
that's what we're trying to do

808
00:33:29,039 --> 00:33:32,960
get started across longer paths

809
00:33:37,120 --> 00:33:40,559
okay we've gone the next slide i guess

810
00:33:45,919 --> 00:33:48,399
who's doing the rules me or bob

811
00:33:48,399 --> 00:33:50,640
oh why don't you do them

812
00:33:50,640 --> 00:33:52,880
okay so so the good thing about rules is

813
00:33:52,880 --> 00:33:53,760
um

814
00:33:53,760 --> 00:33:55,600
bob and i

815
00:33:55,600 --> 00:33:57,840
are not that opinionated about this set

816
00:33:57,840 --> 00:33:59,679
of rules but we're opinionated at the

817
00:33:59,679 --> 00:34:01,360
moment that we should have a set of

818
00:34:01,360 --> 00:34:02,399
rules

819
00:34:02,399 --> 00:34:04,000
so this is what we're currently

820
00:34:04,000 --> 00:34:05,440
suggesting

821
00:34:05,440 --> 00:34:08,399
and the first one is let's have one hot

822
00:34:08,399 --> 00:34:10,239
backup option that works

823
00:34:10,239 --> 00:34:12,800
so let's get a spec that says the first

824
00:34:12,800 --> 00:34:14,560
hop by hop option

825
00:34:14,560 --> 00:34:17,359
must be processed on the fast path

826
00:34:17,359 --> 00:34:19,440
so if it's not on the fast path then

827
00:34:19,440 --> 00:34:20,639
you're not doing the right thing for

828
00:34:20,639 --> 00:34:22,719
this option

829
00:34:22,719 --> 00:34:25,119
additional hotbar options may be

830
00:34:25,119 --> 00:34:28,000
processed it's configured to do so

831
00:34:28,000 --> 00:34:30,639
this is our trapdoor to trying to evolve

832
00:34:30,639 --> 00:34:34,000
in future so rather than state up front

833
00:34:34,000 --> 00:34:36,800
that all ipv6 nodes must do something

834
00:34:36,800 --> 00:34:38,560
future-proof

835
00:34:38,560 --> 00:34:39,679
well we

836
00:34:39,679 --> 00:34:42,800
probably won't get there so the option

837
00:34:42,800 --> 00:34:45,440
here is have one hot backup option that

838
00:34:45,440 --> 00:34:47,440
must be crossed in fast path

839
00:34:47,440 --> 00:34:49,760
and allow other ones to be configured to

840
00:34:49,760 --> 00:34:52,960
be processed as market as implementation

841
00:34:52,960 --> 00:34:54,800
start to use this

842
00:34:54,800 --> 00:34:56,879
there are implications here though so

843
00:34:56,879 --> 00:34:59,440
carry on listening if you can

844
00:34:59,440 --> 00:35:01,920
nodes creating packets with buy options

845
00:35:01,920 --> 00:35:05,040
should include a single one

846
00:35:05,040 --> 00:35:06,800
may include more of course based on

847
00:35:06,800 --> 00:35:09,359
local configuration

848
00:35:09,359 --> 00:35:11,440
and we've said that really if there are

849
00:35:11,440 --> 00:35:12,800
more than

850
00:35:12,800 --> 00:35:14,320
they shouldn't really concern you at the

851
00:35:14,320 --> 00:35:16,000
moment unless you're configured for them

852
00:35:16,000 --> 00:35:18,400
so this is a big change in the way we're

853
00:35:18,400 --> 00:35:22,000
thinking about how this will be used

854
00:35:22,000 --> 00:35:24,800
you can skip the rest of the options

855
00:35:24,800 --> 00:35:27,440
without examining them not processed not

856
00:35:27,440 --> 00:35:29,200
even verified

857
00:35:29,200 --> 00:35:32,160
this eliminates some of the complexity

858
00:35:32,160 --> 00:35:35,040
it's maybe not quite as future proof as

859
00:35:35,040 --> 00:35:37,520
we would like it but it's probably more

860
00:35:37,520 --> 00:35:39,760
realistic it's a path to go along which

861
00:35:39,760 --> 00:35:41,119
is why we're

862
00:35:41,119 --> 00:35:44,880
putting down in this particular draft

863
00:35:44,880 --> 00:35:47,520
nodes unable to process the hot pile

864
00:35:47,520 --> 00:35:50,400
in the fast path must treat it as an

865
00:35:50,400 --> 00:35:53,119
unrecognized option

866
00:35:53,119 --> 00:35:55,680
so we would suggest pinning this down

867
00:35:55,680 --> 00:35:57,040
and just saying

868
00:35:57,040 --> 00:35:59,520
this is the way to do it if it's not

869
00:35:59,520 --> 00:36:01,280
because it's in the fast path

870
00:36:01,280 --> 00:36:03,280
say it's unrecognized

871
00:36:03,280 --> 00:36:04,560
if you want to do something different

872
00:36:04,560 --> 00:36:06,000
then configure it as an explicit

873
00:36:06,000 --> 00:36:08,640
configuration and then

874
00:36:08,640 --> 00:36:10,240
you'll be compatible with what we've

875
00:36:10,240 --> 00:36:11,760
said

876
00:36:11,760 --> 00:36:13,839
the route for alert option we've got is

877
00:36:13,839 --> 00:36:16,640
an exception this isn't because we're in

878
00:36:16,640 --> 00:36:18,960
love with the route or a left option

879
00:36:18,960 --> 00:36:20,960
i don't think we really are

880
00:36:20,960 --> 00:36:22,720
it's just i think the router on that

881
00:36:22,720 --> 00:36:24,640
option was always about posting on the

882
00:36:24,640 --> 00:36:27,119
slow pack so i don't think there is

883
00:36:27,119 --> 00:36:29,280
ambiguity here with this particular

884
00:36:29,280 --> 00:36:30,560
option

885
00:36:30,560 --> 00:36:32,000
now it might be that we don't need the

886
00:36:32,000 --> 00:36:34,000
option at all and i guess that will be

887
00:36:34,000 --> 00:36:36,160
determined by talking about it and

888
00:36:36,160 --> 00:36:38,480
figure out if anyone really needs this

889
00:36:38,480 --> 00:36:40,560
but if you wanted it it could be a

890
00:36:40,560 --> 00:36:43,520
credible exception i think to the must

891
00:36:43,520 --> 00:36:45,680
process on fast path rule

892
00:36:45,680 --> 00:36:48,160
so uh there's a point of conversation um

893
00:36:48,160 --> 00:36:50,800
after we've shown this slide deck

894
00:36:50,800 --> 00:36:54,280
next slide please

895
00:36:58,240 --> 00:37:00,320
this is really just the massage with

896
00:37:00,320 --> 00:37:02,880
respect to 8200

897
00:37:02,880 --> 00:37:05,040
some things have to change

898
00:37:05,040 --> 00:37:06,240
and

899
00:37:06,240 --> 00:37:08,320
we paraphrased a little bit of this

900
00:37:08,320 --> 00:37:10,400
slide the word so read the draft for

901
00:37:10,400 --> 00:37:12,800
exactly the choice of words i had to

902
00:37:12,800 --> 00:37:14,480
crop it down to fit it on the slide in a

903
00:37:14,480 --> 00:37:17,440
sensible size of font

904
00:37:17,440 --> 00:37:19,359
but basically

905
00:37:19,359 --> 00:37:20,240
we

906
00:37:20,240 --> 00:37:22,880
don't expect icmp messages to be sent

907
00:37:22,880 --> 00:37:25,599
from norms on the path

908
00:37:25,599 --> 00:37:26,640
when

909
00:37:26,640 --> 00:37:30,240
this is not a supported uh option

910
00:37:30,240 --> 00:37:32,560
why don't we expect it well we know that

911
00:37:32,560 --> 00:37:33,359
many

912
00:37:33,359 --> 00:37:36,240
nodes on the path already ignore this so

913
00:37:36,240 --> 00:37:38,800
this is kind of like a futile attempt to

914
00:37:38,800 --> 00:37:41,680
persuade everyone to send icmp messages

915
00:37:41,680 --> 00:37:43,760
and apart from the processing cost it

916
00:37:43,760 --> 00:37:45,839
just never will happen with every node

917
00:37:45,839 --> 00:37:47,280
on the path because there are already

918
00:37:47,280 --> 00:37:48,880
nodes that ignore this and don't send

919
00:37:48,880 --> 00:37:51,359
you a message so how can this really

920
00:37:51,359 --> 00:37:54,320
help so follow if we follow these rules

921
00:37:54,320 --> 00:37:56,160
you discard the packet regardless of

922
00:37:56,160 --> 00:37:58,079
whether or not the destination address

923
00:37:58,079 --> 00:38:01,520
was a multicast address for type 1-0

924
00:38:01,520 --> 00:38:04,000
and you can send the icmp parameter

925
00:38:04,000 --> 00:38:05,200
problem

926
00:38:05,200 --> 00:38:07,599
maybe smart router vendors will send one

927
00:38:07,599 --> 00:38:08,880
um

928
00:38:08,880 --> 00:38:10,800
and then will not send more

929
00:38:10,800 --> 00:38:12,160
there are ways

930
00:38:12,160 --> 00:38:14,160
but you don't have to it's may and

931
00:38:14,160 --> 00:38:16,160
similarly one one was changed as well to

932
00:38:16,160 --> 00:38:18,400
discard packet and may send an icmp

933
00:38:18,400 --> 00:38:21,920
parameter problem so changes to the 8200

934
00:38:21,920 --> 00:38:23,040
spec

935
00:38:23,040 --> 00:38:25,119
and

936
00:38:25,119 --> 00:38:28,400
the real words are in the draft

937
00:38:29,920 --> 00:38:30,839
it's

938
00:38:30,839 --> 00:38:32,720
like

939
00:38:32,720 --> 00:38:34,800
through to alert

940
00:38:34,800 --> 00:38:35,760
and

941
00:38:35,760 --> 00:38:39,440
the current text says this

942
00:38:39,520 --> 00:38:40,800
and

943
00:38:40,800 --> 00:38:42,320
personally

944
00:38:42,320 --> 00:38:44,640
i don't have a problem with this

945
00:38:44,640 --> 00:38:46,960
i've talked with my co-author and then

946
00:38:46,960 --> 00:38:50,160
we've put it into the id and we're happy

947
00:38:50,160 --> 00:38:51,599
though to listen to other people on this

948
00:38:51,599 --> 00:38:54,000
one i think because

949
00:38:54,000 --> 00:38:55,920
it's just exactly the way it's written

950
00:38:55,920 --> 00:38:58,720
here and it could be done but do we

951
00:38:58,720 --> 00:39:00,880
really want to do this or has the day of

952
00:39:00,880 --> 00:39:02,560
roots or alert gone in which case just

953
00:39:02,560 --> 00:39:03,680
tell us

954
00:39:03,680 --> 00:39:06,000
is that third bob

955
00:39:06,000 --> 00:39:09,920
yes that's my view as well

956
00:39:10,079 --> 00:39:13,960
so next slide please

957
00:39:16,160 --> 00:39:18,800
now we get to the kind of um

958
00:39:18,800 --> 00:39:20,720
probably important bit because all that

959
00:39:20,720 --> 00:39:23,440
was setting the scene and new hop by hop

960
00:39:23,440 --> 00:39:24,560
options

961
00:39:24,560 --> 00:39:26,480
if people are going to start using hot

962
00:39:26,480 --> 00:39:28,720
buy hop options which we hope this will

963
00:39:28,720 --> 00:39:30,079
allow

964
00:39:30,079 --> 00:39:32,000
the new hot buy hop options have to be

965
00:39:32,000 --> 00:39:34,640
designed for fast path processing

966
00:39:34,640 --> 00:39:36,160
people should know this up front and

967
00:39:36,160 --> 00:39:38,800
just be clear about it

968
00:39:38,800 --> 00:39:40,079
they should be straight forward to

969
00:39:40,079 --> 00:39:41,200
process

970
00:39:41,200 --> 00:39:42,640
so

971
00:39:42,640 --> 00:39:44,560
we don't want massive computation and

972
00:39:44,560 --> 00:39:46,720
computation that involve other parts of

973
00:39:46,720 --> 00:39:49,359
the router node

974
00:39:49,359 --> 00:39:50,160
and

975
00:39:50,160 --> 00:39:51,599
things that can be processed in the fast

976
00:39:51,599 --> 00:39:53,680
path credibly

977
00:39:53,680 --> 00:39:55,599
fixed size and eight optic units not

978
00:39:55,599 --> 00:39:57,839
variable size because again that should

979
00:39:57,839 --> 00:40:00,160
help people find headers better

980
00:40:00,160 --> 00:40:02,320
finding headers is the hidden gremlin

981
00:40:02,320 --> 00:40:04,800
behind all this where in the stream of

982
00:40:04,800 --> 00:40:06,319
bytes do you expect to see the next

983
00:40:06,319 --> 00:40:08,640
header

984
00:40:08,640 --> 00:40:10,079
unlimited amount of data that needs to

985
00:40:10,079 --> 00:40:12,800
be processed in the first part so um

986
00:40:12,800 --> 00:40:14,880
let's keep this small

987
00:40:14,880 --> 00:40:17,440
next slide

988
00:40:20,160 --> 00:40:22,240
so we've had this around for a while and

989
00:40:22,240 --> 00:40:23,920
we're in fact we're going to ask for

990
00:40:23,920 --> 00:40:27,440
wiki group adoption again in in six man

991
00:40:27,440 --> 00:40:28,560
as a

992
00:40:28,560 --> 00:40:31,520
update so we're gonna ask as part of

993
00:40:31,520 --> 00:40:34,160
this meeting today for that

994
00:40:34,160 --> 00:40:36,839
and we've received some

995
00:40:36,839 --> 00:40:40,079
issues the most

996
00:40:40,079 --> 00:40:42,640
difficult to answer is what is the fast

997
00:40:42,640 --> 00:40:44,880
path or the slow path what is the

998
00:40:44,880 --> 00:40:47,839
control plane and the forwarding plane

999
00:40:47,839 --> 00:40:49,280
this would be something we could easily

1000
00:40:49,280 --> 00:40:52,640
agree with just any one person in either

1001
00:40:52,640 --> 00:40:54,160
of these two groups but getting

1002
00:40:54,160 --> 00:40:55,520
agreement between multiple people

1003
00:40:55,520 --> 00:40:57,280
appears to be harder

1004
00:40:57,280 --> 00:40:58,319
so um

1005
00:40:58,319 --> 00:41:00,160
we will take advice on what these terms

1006
00:41:00,160 --> 00:41:02,480
mean but i mean it's clear to us that

1007
00:41:02,480 --> 00:41:04,720
the fast path is the right place to of

1008
00:41:04,720 --> 00:41:07,520
course hot by hop option

1009
00:41:07,520 --> 00:41:09,680
the node must examine at least one hot

1010
00:41:09,680 --> 00:41:13,599
by hop option in the fast path

1011
00:41:13,599 --> 00:41:16,480
and can be configured to support

1012
00:41:16,480 --> 00:41:18,240
others

1013
00:41:18,240 --> 00:41:20,560
it must if a node is configured then the

1014
00:41:20,560 --> 00:41:22,240
node must examine

1015
00:41:22,240 --> 00:41:24,799
etc

1016
00:41:26,800 --> 00:41:28,640
there is implication here to anyone

1017
00:41:28,640 --> 00:41:31,839
using this because if you put two by hop

1018
00:41:31,839 --> 00:41:35,839
options in the same ipv6 packet

1019
00:41:35,839 --> 00:41:37,280
the second one

1020
00:41:37,280 --> 00:41:39,359
doesn't meet the criteria of being the

1021
00:41:39,359 --> 00:41:41,599
first because it's the second

1022
00:41:41,599 --> 00:41:44,480
and it might not get through therefore

1023
00:41:44,480 --> 00:41:46,720
you have to think carefully about how

1024
00:41:46,720 --> 00:41:49,119
you want to use hot buy hop options over

1025
00:41:49,119 --> 00:41:50,720
a long paths

1026
00:41:50,720 --> 00:41:52,400
or what might happen to the second

1027
00:41:52,400 --> 00:41:53,920
option

1028
00:41:53,920 --> 00:41:56,240
this is a constraining factor if we go

1029
00:41:56,240 --> 00:41:57,680
down this path

1030
00:41:57,680 --> 00:42:00,000
it might break some people's ideas of

1031
00:42:00,000 --> 00:42:01,760
what they want to do with hot buy hop

1032
00:42:01,760 --> 00:42:03,359
options

1033
00:42:03,359 --> 00:42:05,599
on the other hand it might enable people

1034
00:42:05,599 --> 00:42:08,319
to do at least one hot by hop option and

1035
00:42:08,319 --> 00:42:10,560
future get maybe more

1036
00:42:10,560 --> 00:42:12,640
so this is a thing to consider if you've

1037
00:42:12,640 --> 00:42:14,400
got an application that uses hot buy hop

1038
00:42:14,400 --> 00:42:17,200
options

1039
00:42:17,200 --> 00:42:19,759
next slide

1040
00:42:21,440 --> 00:42:24,000
there's a relationship with the opsec

1041
00:42:24,000 --> 00:42:27,359
ipv6 extension header filtering draft

1042
00:42:27,359 --> 00:42:29,200
obviously this is why we're meeting

1043
00:42:29,200 --> 00:42:30,560
together

1044
00:42:30,560 --> 00:42:33,200
to discuss how to follow on from that

1045
00:42:33,200 --> 00:42:34,640
draft

1046
00:42:34,640 --> 00:42:36,960
we see that draft of reporting the

1047
00:42:36,960 --> 00:42:40,319
operational concerns

1048
00:42:40,319 --> 00:42:42,319
of detailing the things that can go

1049
00:42:42,319 --> 00:42:43,119
wrong

1050
00:42:43,119 --> 00:42:44,480
have gone wrong

1051
00:42:44,480 --> 00:42:46,000
will go wrong if you don't do something

1052
00:42:46,000 --> 00:42:47,280
about it

1053
00:42:47,280 --> 00:42:49,680
but don't see this as incompatible with

1054
00:42:49,680 --> 00:42:52,400
trying to make hot by hop options work

1055
00:42:52,400 --> 00:42:56,800
in the right way in the future

1056
00:42:57,119 --> 00:42:59,280
but to make the work we have to ask can

1057
00:42:59,280 --> 00:43:01,359
existing deployed equipment implement

1058
00:43:01,359 --> 00:43:02,960
our proposal

1059
00:43:02,960 --> 00:43:04,560
our proposal

1060
00:43:04,560 --> 00:43:06,240
constrains things

1061
00:43:06,240 --> 00:43:08,400
but it also places some requirements on

1062
00:43:08,400 --> 00:43:11,760
the expectations from good equipment

1063
00:43:11,760 --> 00:43:14,400
so it isn't to change to the ipv6 base

1064
00:43:14,400 --> 00:43:15,440
spec

1065
00:43:15,440 --> 00:43:17,680
it's not a requirement to implement

1066
00:43:17,680 --> 00:43:19,119
but you won't be able to say you

1067
00:43:19,119 --> 00:43:21,839
implement this rfc if it's finally

1068
00:43:21,839 --> 00:43:24,839
published unless you do certain

1069
00:43:24,839 --> 00:43:26,800
things so

1070
00:43:26,800 --> 00:43:28,240
this requires

1071
00:43:28,240 --> 00:43:32,319
real operational or developer expertise

1072
00:43:32,319 --> 00:43:34,480
to tell us whether we've got the right

1073
00:43:34,480 --> 00:43:38,160
combination of constraints

1074
00:43:39,040 --> 00:43:41,599
to people using it back to that nitty

1075
00:43:41,599 --> 00:43:43,119
thing of if you want to set a hot buy

1076
00:43:43,119 --> 00:43:44,240
hop option

1077
00:43:44,240 --> 00:43:46,560
it's probably only going to be best

1078
00:43:46,560 --> 00:43:49,040
effort by the path to include it and

1079
00:43:49,040 --> 00:43:51,280
process it

1080
00:43:51,280 --> 00:43:53,280
some uses of hot hop options will no

1081
00:43:53,280 --> 00:43:55,520
longer work they no longer work now is

1082
00:43:55,520 --> 00:43:58,079
the sad result maybe you can't expect

1083
00:43:58,079 --> 00:44:01,119
this to fix the places where it's broken

1084
00:44:01,119 --> 00:44:03,680
but in the future the first option would

1085
00:44:03,680 --> 00:44:05,520
be supported by equipment that meets the

1086
00:44:05,520 --> 00:44:06,480
spec

1087
00:44:06,480 --> 00:44:08,960
and the second option well that may or

1088
00:44:08,960 --> 00:44:11,040
may not be processed

1089
00:44:11,040 --> 00:44:12,480
i think you might be also be able to do

1090
00:44:12,480 --> 00:44:14,319
some clever tricks by including the fist

1091
00:44:14,319 --> 00:44:16,880
option in a way that helps you know when

1092
00:44:16,880 --> 00:44:18,480
the second option

1093
00:44:18,480 --> 00:44:20,720
is being put through the path but this

1094
00:44:20,720 --> 00:44:22,880
is the design of options in the future

1095
00:44:22,880 --> 00:44:26,560
next slide please let's keep going

1096
00:44:26,560 --> 00:44:29,040
these aren't specific options to our

1097
00:44:29,040 --> 00:44:32,079
specific issues to our proposal

1098
00:44:32,079 --> 00:44:34,000
any application or service that uses hot

1099
00:44:34,000 --> 00:44:36,240
help options need to work even if no

1100
00:44:36,240 --> 00:44:37,760
packets

1101
00:44:37,760 --> 00:44:40,800
are delivered with these options

1102
00:44:40,800 --> 00:44:44,560
and there may be some merit

1103
00:44:44,560 --> 00:44:47,119
it's not our assertion either way but

1104
00:44:47,119 --> 00:44:49,119
there may be some merit on limiting the

1105
00:44:49,119 --> 00:44:51,760
number of extension headers

1106
00:44:51,760 --> 00:44:54,000
on the size of extension headers or

1107
00:44:54,000 --> 00:44:56,000
constraining them to be fixed sizes so

1108
00:44:56,000 --> 00:44:58,240
that they are easier to implement

1109
00:44:58,240 --> 00:44:59,680
so these are not specific to this

1110
00:44:59,680 --> 00:45:02,079
proposals but they are things that

1111
00:45:02,079 --> 00:45:03,599
people might have opinions from which

1112
00:45:03,599 --> 00:45:05,760
might influence the way this actually

1113
00:45:05,760 --> 00:45:09,119
evolves next slide

1114
00:45:09,680 --> 00:45:11,599
next steps

1115
00:45:11,599 --> 00:45:13,359
we have feedback we have editorial

1116
00:45:13,359 --> 00:45:15,680
comments they're wonderful and the more

1117
00:45:15,680 --> 00:45:17,359
comments we get the clearer we

1118
00:45:17,359 --> 00:45:20,480
understand at least at the moment

1119
00:45:20,480 --> 00:45:22,000
we think this should be a six-man

1120
00:45:22,000 --> 00:45:23,520
document

1121
00:45:23,520 --> 00:45:25,440
we think it should be adopted in six

1122
00:45:25,440 --> 00:45:28,240
mark and we're asking for that here

1123
00:45:28,240 --> 00:45:29,760
because there appears to be interested

1124
00:45:29,760 --> 00:45:32,160
in improving hotmail hop

1125
00:45:32,160 --> 00:45:33,680
processing

1126
00:45:33,680 --> 00:45:35,359
and we do plan to work through the

1127
00:45:35,359 --> 00:45:38,800
remaining issues on the mailing list

1128
00:45:38,800 --> 00:45:39,839
every

1129
00:45:39,839 --> 00:45:42,400
set of issues that are well articulated

1130
00:45:42,400 --> 00:45:44,640
really helps us understand uh what

1131
00:45:44,640 --> 00:45:46,400
decisions to make

1132
00:45:46,400 --> 00:45:49,280
so is there interest in this

1133
00:45:49,280 --> 00:45:51,680
the current state we really think is not

1134
00:45:51,680 --> 00:45:54,079
tenable we have something specified

1135
00:45:54,079 --> 00:45:57,359
that's kind of fuzzy it can be a problem

1136
00:45:57,359 --> 00:45:59,760
it might never be used so let's try and

1137
00:45:59,760 --> 00:46:01,119
pin it down a little bit more into

1138
00:46:01,119 --> 00:46:03,440
something more useful

1139
00:46:03,440 --> 00:46:06,560
i think that's the last slide

1140
00:46:10,480 --> 00:46:12,240
the only only thing i want to add to

1141
00:46:12,240 --> 00:46:14,079
this is and there's been a discussion of

1142
00:46:14,079 --> 00:46:15,760
this in the chat

1143
00:46:15,760 --> 00:46:16,720
but

1144
00:46:16,720 --> 00:46:19,040
there clearly needs to be hop i hop

1145
00:46:19,040 --> 00:46:22,079
options that have a compelling use case

1146
00:46:22,079 --> 00:46:24,000
that would cause

1147
00:46:24,000 --> 00:46:27,359
them to be implemented widely having

1148
00:46:27,359 --> 00:46:29,280
options which people don't want to

1149
00:46:29,280 --> 00:46:32,400
support doesn't help this that's

1150
00:46:32,400 --> 00:46:34,800
we well our personal opinion is that the

1151
00:46:34,800 --> 00:46:37,839
path mtu one is maybe a good example of

1152
00:46:37,839 --> 00:46:39,680
something that is you could be useful

1153
00:46:39,680 --> 00:46:41,520
internet wide

1154
00:46:41,520 --> 00:46:43,599
because it's an important

1155
00:46:43,599 --> 00:46:46,000
internet wide problem but

1156
00:46:46,000 --> 00:46:47,119
you know

1157
00:46:47,119 --> 00:46:49,680
building use cases for some of the

1158
00:46:49,680 --> 00:46:51,359
others is

1159
00:46:51,359 --> 00:46:53,920
challenging

1160
00:46:54,079 --> 00:46:56,720
and i suppose we will uh

1161
00:46:56,720 --> 00:46:58,319
do the discussion at the end and come

1162
00:46:58,319 --> 00:46:59,599
back to

1163
00:46:59,599 --> 00:47:02,160
to this and toms draft yeah i see ron

1164
00:47:02,160 --> 00:47:04,640
nodding um

1165
00:47:04,640 --> 00:47:09,960
super so uh tom herbert you are next

1166
00:47:10,880 --> 00:47:12,480
are you able to share your own slides

1167
00:47:12,480 --> 00:47:14,720
they should be available through the

1168
00:47:14,720 --> 00:47:18,000
preloaded slides button

1169
00:47:18,000 --> 00:47:22,760
so i requested to share slides

1170
00:47:27,200 --> 00:47:28,880
okay you see that

1171
00:47:28,880 --> 00:47:31,839
we are seeing it go ahead tom awesome

1172
00:47:31,839 --> 00:47:33,359
uh so my name is tom herbert i'm going

1173
00:47:33,359 --> 00:47:35,040
to talk about

1174
00:47:35,040 --> 00:47:38,640
uh limits on ipv6

1175
00:47:38,640 --> 00:47:40,960
or not our ipv36 extension header so

1176
00:47:40,960 --> 00:47:43,520
this is a draft

1177
00:47:43,520 --> 00:47:45,920
in i proposed in six man it's not a

1178
00:47:45,920 --> 00:47:50,119
working group draft at this point

1179
00:47:52,559 --> 00:47:54,720
uh so the overview uh so we already know

1180
00:47:54,720 --> 00:47:57,280
that uh support for ipv6 extension

1181
00:47:57,280 --> 00:47:59,520
headers is underwhelming so this is a

1182
00:47:59,520 --> 00:48:00,880
little more general than just hop by

1183
00:48:00,880 --> 00:48:02,240
help options

1184
00:48:02,240 --> 00:48:03,680
i will cover

1185
00:48:03,680 --> 00:48:06,559
ipv6 extension headers in general uh the

1186
00:48:06,559 --> 00:48:07,920
major reason

1187
00:48:07,920 --> 00:48:10,720
tlvs uh are hard to process and variable

1188
00:48:10,720 --> 00:48:12,400
length headers are hard to process in

1189
00:48:12,400 --> 00:48:15,520
hardware so it's already been covered

1190
00:48:15,520 --> 00:48:17,599
i believe the problem though

1191
00:48:17,599 --> 00:48:20,400
um one of the things that exacerbated it

1192
00:48:20,400 --> 00:48:22,559
was there are a few limits

1193
00:48:22,559 --> 00:48:23,280
to

1194
00:48:23,280 --> 00:48:25,520
the usage of extension headers

1195
00:48:25,520 --> 00:48:28,640
so for instance in rc 8200

1196
00:48:28,640 --> 00:48:30,640
the only limit for the number of

1197
00:48:30,640 --> 00:48:32,880
extension headers or even the the size

1198
00:48:32,880 --> 00:48:34,319
of an extension had a renal limit for

1199
00:48:34,319 --> 00:48:35,839
the number of options and hop by help

1200
00:48:35,839 --> 00:48:36,880
options

1201
00:48:36,880 --> 00:48:39,040
or size and extension header

1202
00:48:39,040 --> 00:48:42,000
is the mtu of the packet so

1203
00:48:42,000 --> 00:48:44,319
um you could actually put like three or

1204
00:48:44,319 --> 00:48:46,000
four hundred

1205
00:48:46,000 --> 00:48:47,200
unknown

1206
00:48:47,200 --> 00:48:50,079
hop by hop options in a single packet

1207
00:48:50,079 --> 00:48:52,319
and obviously if a router or even an end

1208
00:48:52,319 --> 00:48:54,319
host tries to process that

1209
00:48:54,319 --> 00:48:56,240
it's going to take a long time

1210
00:48:56,240 --> 00:48:58,400
and clearly the only purpose of putting

1211
00:48:58,400 --> 00:48:59,680
300

1212
00:48:59,680 --> 00:49:01,680
options in a single packet is not denial

1213
00:49:01,680 --> 00:49:02,720
of service

1214
00:49:02,720 --> 00:49:04,559
so

1215
00:49:04,559 --> 00:49:06,880
i believe we need to limit them and

1216
00:49:06,880 --> 00:49:08,240
you know

1217
00:49:08,240 --> 00:49:10,640
considering the last talk this is a

1218
00:49:10,640 --> 00:49:14,319
little more uh general limits

1219
00:49:14,319 --> 00:49:16,319
so the idea is we want to specify a set

1220
00:49:16,319 --> 00:49:17,599
of limits

1221
00:49:17,599 --> 00:49:19,839
for both sending and receiving extension

1222
00:49:19,839 --> 00:49:22,240
headers

1223
00:49:22,319 --> 00:49:24,319
there are various types of limits

1224
00:49:24,319 --> 00:49:27,760
so one of the limits is on processing of

1225
00:49:27,760 --> 00:49:30,079
extension headers so basically this

1226
00:49:30,079 --> 00:49:32,720
would be the number of extension headers

1227
00:49:32,720 --> 00:49:35,359
the number of options within hop i hop

1228
00:49:35,359 --> 00:49:37,280
or destination options

1229
00:49:37,280 --> 00:49:40,559
the length of options so all the

1230
00:49:40,559 --> 00:49:41,839
parameters

1231
00:49:41,839 --> 00:49:45,680
with regards to variables

1232
00:49:45,680 --> 00:49:47,359
of extension headers that would be one

1233
00:49:47,359 --> 00:49:48,640
set of limits

1234
00:49:48,640 --> 00:49:50,319
another one which actually a little more

1235
00:49:50,319 --> 00:49:52,319
insidious and there was a little bit of

1236
00:49:52,319 --> 00:49:55,440
discussion on this in the chat

1237
00:49:55,440 --> 00:49:56,400
it's

1238
00:49:56,400 --> 00:49:59,280
mostly an implicit requirement now that

1239
00:49:59,280 --> 00:50:01,760
routers have to be able to read

1240
00:50:01,760 --> 00:50:03,200
transport header information

1241
00:50:03,200 --> 00:50:05,280
particularly transport layer ports in

1242
00:50:05,280 --> 00:50:07,040
order to be able to filter

1243
00:50:07,040 --> 00:50:09,760
and even route packets

1244
00:50:09,760 --> 00:50:11,440
it's

1245
00:50:11,440 --> 00:50:14,000
obviously nowhere in um any of the

1246
00:50:14,000 --> 00:50:16,079
standards do we specify that routers

1247
00:50:16,079 --> 00:50:18,319
have to do that in fact the standard

1248
00:50:18,319 --> 00:50:19,680
probably says they're not supposed to

1249
00:50:19,680 --> 00:50:21,119
they're supposed to be able to route

1250
00:50:21,119 --> 00:50:24,319
solely based on the ipv6 header however

1251
00:50:24,319 --> 00:50:27,280
in reality uh we know this is is

1252
00:50:27,280 --> 00:50:28,960
really not true there are a lot of

1253
00:50:28,960 --> 00:50:31,119
devices out there that have to read the

1254
00:50:31,119 --> 00:50:32,720
layer four header

1255
00:50:32,720 --> 00:50:34,640
which means

1256
00:50:34,640 --> 00:50:37,200
basically when they implement this as a

1257
00:50:37,200 --> 00:50:39,280
um in a device usually it's a parsing

1258
00:50:39,280 --> 00:50:41,359
buffer so they have a fixed amount of

1259
00:50:41,359 --> 00:50:42,400
data

1260
00:50:42,400 --> 00:50:45,040
of packet headers that they load

1261
00:50:45,040 --> 00:50:47,680
in to the fast path processing

1262
00:50:47,680 --> 00:50:52,240
uh 64 bytes 128 bytes 256 bytes

1263
00:50:52,240 --> 00:50:54,400
if we put a lot of

1264
00:50:54,400 --> 00:50:57,040
headers in the packet extension headers

1265
00:50:57,040 --> 00:50:58,680
and potentially even other

1266
00:50:58,680 --> 00:51:01,440
encapsulations ipsec what have you if

1267
00:51:01,440 --> 00:51:03,520
there's too many of those it pushes the

1268
00:51:03,520 --> 00:51:05,760
transport layer header down

1269
00:51:05,760 --> 00:51:08,000
and if the device can't reach that far

1270
00:51:08,000 --> 00:51:09,520
into the packet

1271
00:51:09,520 --> 00:51:11,040
uh some of the some of the devices will

1272
00:51:11,040 --> 00:51:12,400
actually drop it

1273
00:51:12,400 --> 00:51:14,480
so this is a little more difficult of a

1274
00:51:14,480 --> 00:51:15,760
problem

1275
00:51:15,760 --> 00:51:17,520
and the only way to really solve it is

1276
00:51:17,520 --> 00:51:19,680
to actually limit the number of bytes of

1277
00:51:19,680 --> 00:51:20,800
headers

1278
00:51:20,800 --> 00:51:24,079
so that's the motivation for this limit

1279
00:51:24,079 --> 00:51:26,960
uh limits also apply both to senders and

1280
00:51:26,960 --> 00:51:28,160
receivers

1281
00:51:28,160 --> 00:51:31,440
uh but we won't do want to adhere to the

1282
00:51:31,440 --> 00:51:33,920
canonical robustness principle for that

1283
00:51:33,920 --> 00:51:35,359
so be conservative from what you're

1284
00:51:35,359 --> 00:51:38,720
saying liberal and what you receive

1285
00:51:39,520 --> 00:51:42,240
uh so the way we design the giraffe is

1286
00:51:42,240 --> 00:51:44,400
default sending limits

1287
00:51:44,400 --> 00:51:45,839
so

1288
00:51:45,839 --> 00:51:48,319
by default we mean a

1289
00:51:48,319 --> 00:51:52,480
host that's sending extension headers

1290
00:51:52,480 --> 00:51:55,200
unless it knows that it can exceed this

1291
00:51:55,200 --> 00:51:57,440
these limits these are what it's limited

1292
00:51:57,440 --> 00:51:58,559
to send

1293
00:51:58,559 --> 00:51:59,680
and i'll get

1294
00:51:59,680 --> 00:52:02,079
back to a minute how we might

1295
00:52:02,079 --> 00:52:04,640
um have al our priority knowledge of

1296
00:52:04,640 --> 00:52:08,000
what we can send into the internet

1297
00:52:08,000 --> 00:52:09,440
and the limits are

1298
00:52:09,440 --> 00:52:10,800
specified in the draft and we'll go over

1299
00:52:10,800 --> 00:52:12,079
them in detail

1300
00:52:12,079 --> 00:52:13,040
uh

1301
00:52:13,040 --> 00:52:15,760
we limit eh to a certain size

1302
00:52:15,760 --> 00:52:18,640
we also have to consider padding options

1303
00:52:18,640 --> 00:52:20,400
this is already

1304
00:52:20,400 --> 00:52:24,319
in some of the rfcs but we limit

1305
00:52:24,319 --> 00:52:25,680
number of padding options to some

1306
00:52:25,680 --> 00:52:28,400
logical number

1307
00:52:28,400 --> 00:52:30,480
similarly data length and have a limit

1308
00:52:30,480 --> 00:52:32,640
and that last one is actually the limit

1309
00:52:32,640 --> 00:52:34,880
on extension header length that i

1310
00:52:34,880 --> 00:52:36,079
referred to

1311
00:52:36,079 --> 00:52:38,640
full chaining

1312
00:52:38,640 --> 00:52:40,480
receiving limits

1313
00:52:40,480 --> 00:52:42,480
uh same thing but

1314
00:52:42,480 --> 00:52:44,640
the difference is receiving limits they

1315
00:52:44,640 --> 00:52:47,599
are optional so obviously a host can

1316
00:52:47,599 --> 00:52:48,640
receive

1317
00:52:48,640 --> 00:52:49,680
all

1318
00:52:49,680 --> 00:52:52,240
hop by hop options all uh destination

1319
00:52:52,240 --> 00:52:53,520
options

1320
00:52:53,520 --> 00:52:57,119
or a router can uh but if

1321
00:52:57,119 --> 00:52:58,880
someone so desires they can put limits

1322
00:52:58,880 --> 00:53:01,760
on these uh the default limits for

1323
00:53:01,760 --> 00:53:03,040
instance your doc

1324
00:53:03,040 --> 00:53:04,160
number of

1325
00:53:04,160 --> 00:53:06,079
destination options or helping options

1326
00:53:06,079 --> 00:53:07,599
would be eight

1327
00:53:07,599 --> 00:53:10,480
and again there's uh default limits on

1328
00:53:10,480 --> 00:53:12,839
paddling

1329
00:53:12,839 --> 00:53:17,200
and the ipv6 extension header length

1330
00:53:17,200 --> 00:53:20,240
so the question is what happens when

1331
00:53:20,240 --> 00:53:22,559
a limit is exceeded

1332
00:53:22,559 --> 00:53:24,319
and this is kind of important because it

1333
00:53:24,319 --> 00:53:26,559
defines the behavior

1334
00:53:26,559 --> 00:53:28,640
and we really divide this into two

1335
00:53:28,640 --> 00:53:30,880
classes so one is

1336
00:53:30,880 --> 00:53:33,359
end host that are receiving

1337
00:53:33,359 --> 00:53:36,559
packets and intermediate devices general

1338
00:53:36,559 --> 00:53:38,480
with them as intermediate devices should

1339
00:53:38,480 --> 00:53:40,240
not drop

1340
00:53:40,240 --> 00:53:43,359
just because at a limit like this was

1341
00:53:43,359 --> 00:53:45,040
exceeded

1342
00:53:45,040 --> 00:53:47,760
and it's pretty easy uh rc 8200 for

1343
00:53:47,760 --> 00:53:50,240
instance already mentions that

1344
00:53:50,240 --> 00:53:52,720
packets should not be dropped

1345
00:53:52,720 --> 00:53:54,319
um

1346
00:53:54,319 --> 00:53:56,240
they should be uh extension headers

1347
00:53:56,240 --> 00:53:57,280
should be or

1348
00:53:57,280 --> 00:53:59,920
hubba help options can be ignored

1349
00:53:59,920 --> 00:54:02,240
so uh we do extend that a little bit to

1350
00:54:02,240 --> 00:54:03,440
allow

1351
00:54:03,440 --> 00:54:06,240
intermediate nodes to ignore some subset

1352
00:54:06,240 --> 00:54:08,720
of hop i hop options so basically an

1353
00:54:08,720 --> 00:54:11,280
ironman could process the first say

1354
00:54:11,280 --> 00:54:12,559
eight

1355
00:54:12,559 --> 00:54:14,640
hop by hop options and then ignore the

1356
00:54:14,640 --> 00:54:17,280
rest so that is a little bit different

1357
00:54:17,280 --> 00:54:19,599
requirement than rc-8200

1358
00:54:19,599 --> 00:54:21,040
and hosts though

1359
00:54:21,040 --> 00:54:23,440
pretty much expect it to

1360
00:54:23,440 --> 00:54:26,319
process all the options

1361
00:54:26,319 --> 00:54:27,920
and

1362
00:54:27,920 --> 00:54:29,839
perform the correct behavior

1363
00:54:29,839 --> 00:54:32,000
so if a

1364
00:54:32,000 --> 00:54:34,160
option a hub a health option does say to

1365
00:54:34,160 --> 00:54:36,240
drop it it would drop it

1366
00:54:36,240 --> 00:54:38,559
there's another interesting use case

1367
00:54:38,559 --> 00:54:40,880
that we're finding um becoming more

1368
00:54:40,880 --> 00:54:43,040
prevalent this is when we have

1369
00:54:43,040 --> 00:54:45,280
destination options before the routing

1370
00:54:45,280 --> 00:54:46,319
header

1371
00:54:46,319 --> 00:54:47,839
uh this is kind of interesting because

1372
00:54:47,839 --> 00:54:49,520
it's actually a cross between host

1373
00:54:49,520 --> 00:54:50,640
behavior

1374
00:54:50,640 --> 00:54:52,400
and routing behavior

1375
00:54:52,400 --> 00:54:53,920
so the ideas

1376
00:54:53,920 --> 00:54:54,720
uh

1377
00:54:54,720 --> 00:54:56,559
again

1378
00:54:56,559 --> 00:54:57,920
mostly

1379
00:54:57,920 --> 00:55:00,000
have router behavior

1380
00:55:00,000 --> 00:55:03,040
um but in some cases like destination

1381
00:55:03,040 --> 00:55:04,880
options it becomes more like host

1382
00:55:04,880 --> 00:55:07,839
behavior

1383
00:55:09,760 --> 00:55:12,720
the sender as i mentioned

1384
00:55:12,720 --> 00:55:15,440
its limits are defaults if it wants to

1385
00:55:15,440 --> 00:55:17,760
exceed those it has to know that it's

1386
00:55:17,760 --> 00:55:19,440
safe to do so

1387
00:55:19,440 --> 00:55:20,720
the question is how do you obtain that

1388
00:55:20,720 --> 00:55:23,119
knowledge so this actually came up uh in

1389
00:55:23,119 --> 00:55:25,520
the last ietf when i presented

1390
00:55:25,520 --> 00:55:27,200
the obvious one is if we're sending

1391
00:55:27,200 --> 00:55:29,920
within a limited domain limited domain

1392
00:55:29,920 --> 00:55:31,280
we would know

1393
00:55:31,280 --> 00:55:34,720
this information so static configuration

1394
00:55:34,720 --> 00:55:36,319
uh this is probably going to be the most

1395
00:55:36,319 --> 00:55:37,599
prevalent

1396
00:55:37,599 --> 00:55:39,119
use case for hop by health options

1397
00:55:39,119 --> 00:55:41,119
anyways that

1398
00:55:41,119 --> 00:55:43,520
seems like it should work pretty well

1399
00:55:43,520 --> 00:55:45,040
more advanced we could do some sort of

1400
00:55:45,040 --> 00:55:47,680
probing similar to happy eyeballs

1401
00:55:47,680 --> 00:55:50,079
so the idea would be send packets

1402
00:55:50,079 --> 00:55:51,680
exceeding the limits

1403
00:55:51,680 --> 00:55:54,079
if you see responses come back

1404
00:55:54,079 --> 00:55:55,119
it's fine

1405
00:55:55,119 --> 00:55:56,900
if not fall back and

1406
00:55:56,900 --> 00:55:58,799
[Music]

1407
00:55:58,799 --> 00:56:02,000
send packets that don't exceed the limit

1408
00:56:02,000 --> 00:56:04,240
we can actually extrapolate this uh

1409
00:56:04,240 --> 00:56:06,160
proving could be used to you know for

1410
00:56:06,160 --> 00:56:07,760
instance create a database that map

1411
00:56:07,760 --> 00:56:09,920
source to destination

1412
00:56:09,920 --> 00:56:12,079
uh and it's more than just

1413
00:56:12,079 --> 00:56:13,359
extension headers we could actually

1414
00:56:13,359 --> 00:56:15,280
apply this to

1415
00:56:15,280 --> 00:56:17,359
any sort of advanced features like new

1416
00:56:17,359 --> 00:56:19,760
protocol transport protocols

1417
00:56:19,760 --> 00:56:21,680
uh but i don't think the draft is going

1418
00:56:21,680 --> 00:56:23,760
to we want to go into this on the draft

1419
00:56:23,760 --> 00:56:25,599
it's probably a little battle scope but

1420
00:56:25,599 --> 00:56:27,280
we'll probably mention that in a future

1421
00:56:27,280 --> 00:56:30,000
revision

1422
00:56:30,000 --> 00:56:32,559
did want to touch on

1423
00:56:32,559 --> 00:56:34,559
the pragmatics

1424
00:56:34,559 --> 00:56:36,400
and the implementation i think there was

1425
00:56:36,400 --> 00:56:38,960
some discussion previously on this

1426
00:56:38,960 --> 00:56:42,000
uh the way to look at this is

1427
00:56:42,000 --> 00:56:44,960
because of tlv's

1428
00:56:44,960 --> 00:56:45,760
are

1429
00:56:45,760 --> 00:56:49,200
inherently a serialized construct so we

1430
00:56:49,200 --> 00:56:50,880
have to process them in order so if

1431
00:56:50,880 --> 00:56:53,200
there's five tlvs and their variable

1432
00:56:53,200 --> 00:56:55,280
length we have to process the first one

1433
00:56:55,280 --> 00:56:57,520
the second one and the third one uh if

1434
00:56:57,520 --> 00:56:59,599
we want to get to the fourth one

1435
00:56:59,599 --> 00:57:02,079
so this is why it's a pretty difficult

1436
00:57:02,079 --> 00:57:04,799
thing it's really hard to get out of the

1437
00:57:04,799 --> 00:57:06,960
serialized nature of that and the

1438
00:57:06,960 --> 00:57:08,640
variable length nature without

1439
00:57:08,640 --> 00:57:10,079
specifying

1440
00:57:10,079 --> 00:57:11,200
uh that

1441
00:57:11,200 --> 00:57:14,079
either tlvs have a fixed order or ver um

1442
00:57:14,079 --> 00:57:16,319
fixed length but presuming that we don't

1443
00:57:16,319 --> 00:57:17,520
want to do that

1444
00:57:17,520 --> 00:57:19,760
this is kind of what the canonical loop

1445
00:57:19,760 --> 00:57:21,599
um that implements

1446
00:57:21,599 --> 00:57:24,000
tlvs would look like

1447
00:57:24,000 --> 00:57:27,119
and in this case basically we assume

1448
00:57:27,119 --> 00:57:30,319
that this is the standard two byte tlv

1449
00:57:30,319 --> 00:57:32,079
header so the first byte is the type

1450
00:57:32,079 --> 00:57:34,400
second byte is the offs um the data

1451
00:57:34,400 --> 00:57:35,440
length

1452
00:57:35,440 --> 00:57:37,200
so we look at first byte

1453
00:57:37,200 --> 00:57:39,599
uh i included at the end of list which

1454
00:57:39,599 --> 00:57:41,359
obviously is not applicable to hot by

1455
00:57:41,359 --> 00:57:42,400
hop and

1456
00:57:42,400 --> 00:57:44,400
destination options but for instance for

1457
00:57:44,400 --> 00:57:48,000
tlv option or a tcp would be i believe

1458
00:57:48,000 --> 00:57:50,400
so we add that uh so end of list just

1459
00:57:50,400 --> 00:57:52,319
means stop prospection processing get

1460
00:57:52,319 --> 00:57:53,680
out of the loop

1461
00:57:53,680 --> 00:57:56,640
pad one one byte padding usually that's

1462
00:57:56,640 --> 00:57:57,839
zero

1463
00:57:57,839 --> 00:57:58,880
type

1464
00:57:58,880 --> 00:58:01,280
in that case we just skip over it

1465
00:58:01,280 --> 00:58:03,440
and then if it's not one or if it's not

1466
00:58:03,440 --> 00:58:04,880
a single byte

1467
00:58:04,880 --> 00:58:05,680
type

1468
00:58:05,680 --> 00:58:07,280
it's everything else

1469
00:58:07,280 --> 00:58:09,599
so we have to check uh do we have at

1470
00:58:09,599 --> 00:58:12,240
least two bytes of length left so by the

1471
00:58:12,240 --> 00:58:14,400
way that the while loop is

1472
00:58:14,400 --> 00:58:16,799
doing a while loop over the length of

1473
00:58:16,799 --> 00:58:19,119
the tlv area and we have an offset

1474
00:58:19,119 --> 00:58:21,599
that's kind of a pointer into that area

1475
00:58:21,599 --> 00:58:23,680
so once the offset reaches the end of

1476
00:58:23,680 --> 00:58:26,640
the area the tlb processing is done

1477
00:58:26,640 --> 00:58:28,799
so if we don't have a one byte option we

1478
00:58:28,799 --> 00:58:30,720
do need to do a check if we have at

1479
00:58:30,720 --> 00:58:32,799
least two bytes so that's what that if

1480
00:58:32,799 --> 00:58:34,480
statement is

1481
00:58:34,480 --> 00:58:36,559
and if that's good then we have a two

1482
00:58:36,559 --> 00:58:37,240
byte option

1483
00:58:37,240 --> 00:58:38,720
[Music]

1484
00:58:38,720 --> 00:58:40,720
look at the tlv length which i as i

1485
00:58:40,720 --> 00:58:42,720
mentioned is the second pipe

1486
00:58:42,720 --> 00:58:44,960
and with the tlv length

1487
00:58:44,960 --> 00:58:47,200
we now know what the type is the tlv

1488
00:58:47,200 --> 00:58:48,640
length is

1489
00:58:48,640 --> 00:58:51,359
if it's pad in meaning it's multi-byte

1490
00:58:51,359 --> 00:58:52,640
padding

1491
00:58:52,640 --> 00:58:55,040
uh we'll handle that separately but if

1492
00:58:55,040 --> 00:58:57,040
it's not pad in then usually we'll do

1493
00:58:57,040 --> 00:58:59,119
some sort of lookup or switch on the

1494
00:58:59,119 --> 00:59:00,240
type

1495
00:59:00,240 --> 00:59:02,640
and that will return some sort of

1496
00:59:02,640 --> 00:59:05,599
handler call into the handler and if the

1497
00:59:05,599 --> 00:59:07,920
handler is okay we proceed

1498
00:59:07,920 --> 00:59:09,839
so at the end of the loop we adjust the

1499
00:59:09,839 --> 00:59:12,880
offset by the tlv length

1500
00:59:12,880 --> 00:59:15,359
so all tlv loops pretty much are going

1501
00:59:15,359 --> 00:59:16,960
to look like that

1502
00:59:16,960 --> 00:59:19,359
and if we have the limits and

1503
00:59:19,359 --> 00:59:20,960
this is where they would be applied so

1504
00:59:20,960 --> 00:59:24,319
the limits on the extension header chain

1505
00:59:24,319 --> 00:59:25,760
uh

1506
00:59:25,760 --> 00:59:28,000
the size of the extension header number

1507
00:59:28,000 --> 00:59:29,440
of extension headers this would be

1508
00:59:29,440 --> 00:59:32,319
applied before uh such a loop but

1509
00:59:32,319 --> 00:59:33,520
everything else

1510
00:59:33,520 --> 00:59:35,520
the limit for number of options that

1511
00:59:35,520 --> 00:59:37,680
we're willing to process would be

1512
00:59:37,680 --> 00:59:39,599
probably the head of the while loop

1513
00:59:39,599 --> 00:59:41,200
there would be limits on padding so we

1514
00:59:41,200 --> 00:59:44,160
have to consider both pad 1 and pad n

1515
00:59:44,160 --> 00:59:47,920
there will be limits on option length

1516
00:59:47,920 --> 00:59:50,000
that would be

1517
00:59:50,000 --> 00:59:51,839
applied when we have variable length

1518
00:59:51,839 --> 00:59:54,079
option and then we also want to consider

1519
00:59:54,079 --> 00:59:56,400
limits on non-padding options so if you

1520
00:59:56,400 --> 00:59:59,200
put this in basically what it results in

1521
00:59:59,200 --> 01:00:02,400
is more conditionals

1522
01:00:02,400 --> 01:00:05,440
in the data path

1523
01:00:05,599 --> 01:00:07,760
so if you look at this from a very high

1524
01:00:07,760 --> 01:00:09,280
level

1525
01:00:09,280 --> 01:00:11,920
what we really can do is consider this a

1526
01:00:11,920 --> 01:00:14,799
parameterized function so the parameters

1527
01:00:14,799 --> 01:00:18,160
to this dlv loop are pad one value the

1528
01:00:18,160 --> 01:00:20,240
patent value el

1529
01:00:20,240 --> 01:00:22,400
eol type values

1530
01:00:22,400 --> 01:00:24,240
the tlv table is

1531
01:00:24,240 --> 01:00:26,960
that lookup table that matches type to a

1532
01:00:26,960 --> 01:00:29,200
handler and then the various limits

1533
01:00:29,200 --> 01:00:32,240
could also be parameterized

1534
01:00:32,240 --> 01:00:34,240
and if we put all these together

1535
01:00:34,240 --> 01:00:35,839
then it's

1536
01:00:35,839 --> 01:00:37,119
starts to see how this could be

1537
01:00:37,119 --> 01:00:41,119
extrapolated into a high performance

1538
01:00:41,119 --> 01:00:43,760
even a hardware function that implements

1539
01:00:43,760 --> 01:00:45,200
tlvs

1540
01:00:45,200 --> 01:00:48,799
uh to the extent that we can't eliminate

1541
01:00:48,799 --> 01:00:52,000
the serialized part of the while loop

1542
01:00:52,000 --> 01:00:54,079
but we could for instance do some

1543
01:00:54,079 --> 01:00:56,640
parallelism inside the handlers

1544
01:00:56,640 --> 01:00:57,680
and

1545
01:00:57,680 --> 01:00:59,040
all the checks

1546
01:00:59,040 --> 01:01:02,319
and the accounting could be done um

1547
01:01:02,319 --> 01:01:04,480
pretty efficiently in a hardware block

1548
01:01:04,480 --> 01:01:06,000
and in fact that's

1549
01:01:06,000 --> 01:01:07,440
what

1550
01:01:07,440 --> 01:01:09,440
my day job is now is working on this

1551
01:01:09,440 --> 01:01:11,839
problem

1552
01:01:13,040 --> 01:01:14,880
uh so this draft

1553
01:01:14,880 --> 01:01:16,730
i proposed a while back um

1554
01:01:16,730 --> 01:01:17,839
[Music]

1555
01:01:17,839 --> 01:01:19,040
i'm

1556
01:01:19,040 --> 01:01:20,640
very interested in feedback whether or

1557
01:01:20,640 --> 01:01:22,160
not we should proceed

1558
01:01:22,160 --> 01:01:23,839
with working group adoption but i guess

1559
01:01:23,839 --> 01:01:25,359
it's probably

1560
01:01:25,359 --> 01:01:27,119
uh part of the larger discussion today

1561
01:01:27,119 --> 01:01:28,480
so

1562
01:01:28,480 --> 01:01:29,359
we can

1563
01:01:29,359 --> 01:01:31,359
make that part of it

1564
01:01:31,359 --> 01:01:34,160
and that's it thank you

1565
01:01:34,160 --> 01:01:36,319
excellent thank you very much tom

1566
01:01:36,319 --> 01:01:37,520
um

1567
01:01:37,520 --> 01:01:40,640
so we'll get back to both uh uh

1568
01:01:40,640 --> 01:01:43,280
toms draft and and bob and gory's and

1569
01:01:43,280 --> 01:01:44,720
then but

1570
01:01:44,720 --> 01:01:47,440
uh first now we'll we'll do a set of uh

1571
01:01:47,440 --> 01:01:49,280
example use cases for the hope i hope

1572
01:01:49,280 --> 01:01:52,480
option i believe bob and gory you are up

1573
01:01:52,480 --> 01:01:54,880
first

1574
01:01:55,280 --> 01:01:56,640
a quick note

1575
01:01:56,640 --> 01:01:59,039
uh these use case talks are strict limit

1576
01:01:59,039 --> 01:02:02,760
of five minutes each

1577
01:02:21,119 --> 01:02:23,680
hi i'm gauri and this is bob and one of

1578
01:02:23,680 --> 01:02:25,200
us is going to talk

1579
01:02:25,200 --> 01:02:28,319
who is it bob meow

1580
01:02:33,520 --> 01:02:35,599
i've got no audio from both so i think

1581
01:02:35,599 --> 01:02:37,039
that means me

1582
01:02:37,039 --> 01:02:39,039
yes

1583
01:02:39,039 --> 01:02:41,920
okay so um this is the ipv6 movement

1584
01:02:41,920 --> 01:02:45,520
path ntu hot by hop option

1585
01:02:45,520 --> 01:02:47,839
if you can pass the title slide then you

1586
01:02:47,839 --> 01:02:49,680
probably already figured out what this

1587
01:02:49,680 --> 01:02:51,680
is going to do

1588
01:02:51,680 --> 01:02:55,598
but let's move forward next slide please

1589
01:02:59,359 --> 01:03:01,039
all right so

1590
01:03:01,039 --> 01:03:02,960
this

1591
01:03:02,960 --> 01:03:04,880
tries to address

1592
01:03:04,880 --> 01:03:06,799
part of a problem

1593
01:03:06,799 --> 01:03:09,039
but an important part of the problem

1594
01:03:09,039 --> 01:03:10,880
the problem being that path mtu

1595
01:03:10,880 --> 01:03:14,000
discovery isn't working well

1596
01:03:14,000 --> 01:03:17,440
but mtu it's got two places where it can

1597
01:03:17,440 --> 01:03:19,200
have real help

1598
01:03:19,200 --> 01:03:20,880
one is figuring out when you've got a

1599
01:03:20,880 --> 01:03:22,160
smaller

1600
01:03:22,160 --> 01:03:25,359
half end to you than you might

1601
01:03:25,359 --> 01:03:27,200
expect and one is where you might be

1602
01:03:27,200 --> 01:03:29,760
able to send bigger than you

1603
01:03:29,760 --> 01:03:32,079
might expect and you have to have a way

1604
01:03:32,079 --> 01:03:35,520
to know how big a packet to send

1605
01:03:35,520 --> 01:03:37,760
so this idea came

1606
01:03:37,760 --> 01:03:38,960
um

1607
01:03:38,960 --> 01:03:41,359
forward it's a different trust

1608
01:03:41,359 --> 01:03:44,720
relationship to that in rsc 8201 where

1609
01:03:44,720 --> 01:03:47,680
we specified path mtu discovery

1610
01:03:47,680 --> 01:03:50,160
but it's intended primarily

1611
01:03:50,160 --> 01:03:52,599
to complement methods like

1612
01:03:52,599 --> 01:03:54,480
dplp

1613
01:03:54,480 --> 01:03:56,240
mtud

1614
01:03:56,240 --> 01:03:57,440
which is

1615
01:03:57,440 --> 01:03:58,480
the record

1616
01:03:58,480 --> 01:04:01,599
acronym in the itf i think and

1617
01:04:01,599 --> 01:04:03,920
basically this is a method where you

1618
01:04:03,920 --> 01:04:06,559
send a packet as a probe usually a

1619
01:04:06,559 --> 01:04:09,520
sacrificial probe through the path

1620
01:04:09,520 --> 01:04:11,119
and if that probe happens to not be

1621
01:04:11,119 --> 01:04:13,839
delivered then you don't

1622
01:04:13,839 --> 01:04:16,000
know that that size of packet gets

1623
01:04:16,000 --> 01:04:17,119
through

1624
01:04:17,119 --> 01:04:20,160
if that pro packet which carries no

1625
01:04:20,160 --> 01:04:22,319
useful data apart from padding

1626
01:04:22,319 --> 01:04:24,240
information perhaps or maybe a time

1627
01:04:24,240 --> 01:04:26,079
stamp gets through to the other end and

1628
01:04:26,079 --> 01:04:28,000
you get a reply you know that that

1629
01:04:28,000 --> 01:04:30,079
particular size of packet is deliverable

1630
01:04:30,079 --> 01:04:32,400
across the path

1631
01:04:32,400 --> 01:04:34,000
okay so there's a little bit more to it

1632
01:04:34,000 --> 01:04:36,480
and the drafts became an rfc and has

1633
01:04:36,480 --> 01:04:38,720
been published it tells you how you

1634
01:04:38,720 --> 01:04:40,720
might set up a probing method and

1635
01:04:40,720 --> 01:04:43,280
discover this but it

1636
01:04:43,280 --> 01:04:45,680
you essentially a such method where you

1637
01:04:45,680 --> 01:04:48,319
try packets of increasing size

1638
01:04:48,319 --> 01:04:50,640
and how do you know how big to try next

1639
01:04:50,640 --> 01:04:53,960
slide please

1640
01:04:54,960 --> 01:04:56,799
one way you could find out how big a

1641
01:04:56,799 --> 01:04:58,960
packet is useful to send across a path

1642
01:04:58,960 --> 01:05:01,280
is to ask the routers along the path

1643
01:05:01,280 --> 01:05:03,039
what size of path ntu they are

1644
01:05:03,039 --> 01:05:04,960
configured to support

1645
01:05:04,960 --> 01:05:07,520
this is the hotmail hop option format

1646
01:05:07,520 --> 01:05:09,440
if you include this in your packet and

1647
01:05:09,440 --> 01:05:12,160
the router helps you it will fill in the

1648
01:05:12,160 --> 01:05:14,079
minimum path mtu in the forward

1649
01:05:14,079 --> 01:05:16,799
direction transfer this all the way to

1650
01:05:16,799 --> 01:05:19,119
the remote node at the res look at the

1651
01:05:19,119 --> 01:05:21,680
destination and that will return the

1652
01:05:21,680 --> 01:05:24,160
return path mtu back to you so you

1653
01:05:24,160 --> 01:05:25,839
discover what the routers are telling

1654
01:05:25,839 --> 01:05:27,680
you along the path

1655
01:05:27,680 --> 01:05:30,079
obviously not all routers will do this

1656
01:05:30,079 --> 01:05:31,839
and many ethernet switches will simply

1657
01:05:31,839 --> 01:05:33,359
ignore this because that's what ethernet

1658
01:05:33,359 --> 01:05:35,520
switches do and all of these can be

1659
01:05:35,520 --> 01:05:37,520
configured with a path to you so it

1660
01:05:37,520 --> 01:05:39,200
doesn't actually tell you concrete

1661
01:05:39,200 --> 01:05:41,520
information but it really does give you

1662
01:05:41,520 --> 01:05:44,319
some information which would help you

1663
01:05:44,319 --> 01:05:46,480
very quickly determine what your path

1664
01:05:46,480 --> 01:05:48,480
supports and to discover when that

1665
01:05:48,480 --> 01:05:50,480
configuration change needs to happen

1666
01:05:50,480 --> 01:05:52,240
because somebody brought up a link

1667
01:05:52,240 --> 01:05:54,400
that's got a different mtu

1668
01:05:54,400 --> 01:05:57,200
next slide please

1669
01:05:57,440 --> 01:06:01,520
so this is the basic operation and i

1670
01:06:01,520 --> 01:06:03,200
think you could probably read it faster

1671
01:06:03,200 --> 01:06:06,480
than i could talk about it

1672
01:06:06,640 --> 01:06:08,559
the operation we've already

1673
01:06:08,559 --> 01:06:09,680
mentioned

1674
01:06:09,680 --> 01:06:12,480
is as a way of figuring out how routers

1675
01:06:12,480 --> 01:06:15,039
along the path are configured or what

1676
01:06:15,039 --> 01:06:17,200
mtu they might use and you could then

1677
01:06:17,200 --> 01:06:19,359
simply probe props to check that that

1678
01:06:19,359 --> 01:06:21,520
works or you might simply believe it and

1679
01:06:21,520 --> 01:06:24,160
see if your traffic gets black told

1680
01:06:24,160 --> 01:06:26,559
either way you could discover very

1681
01:06:26,559 --> 01:06:28,880
rapidly if some of the routers are

1682
01:06:28,880 --> 01:06:30,720
configured with different mtu's along

1683
01:06:30,720 --> 01:06:32,480
your path and therefore choose a

1684
01:06:32,480 --> 01:06:36,000
suitably big one next slide

1685
01:06:36,079 --> 01:06:38,079
the status says that this

1686
01:06:38,079 --> 01:06:40,960
we think is a finished document

1687
01:06:40,960 --> 01:06:44,079
so we've um asked for working group last

1688
01:06:44,079 --> 01:06:45,760
call in six

1689
01:06:45,760 --> 01:06:48,000
that's been processed it's now gone to

1690
01:06:48,000 --> 01:06:52,000
the iesg as an experimental spec which

1691
01:06:52,000 --> 01:06:55,280
we believe is harmless to add to your

1692
01:06:55,280 --> 01:06:57,920
router configuration and can actually

1693
01:06:57,920 --> 01:07:00,720
offer useful benefit if routers start to

1694
01:07:00,720 --> 01:07:02,880
update this information and hosts can

1695
01:07:02,880 --> 01:07:04,799
start sending it so we think this is a

1696
01:07:04,799 --> 01:07:06,799
good example of how you can use a hot

1697
01:07:06,799 --> 01:07:07,920
buy hub

1698
01:07:07,920 --> 01:07:10,400
options header and it doesn't have to be

1699
01:07:10,400 --> 01:07:12,880
sprouted by every router on the path to

1700
01:07:12,880 --> 01:07:15,839
gain utility

1701
01:07:17,920 --> 01:07:18,960
thank you

1702
01:07:18,960 --> 01:07:21,359
thank you

1703
01:07:24,319 --> 01:07:26,799
can i believe it's how you song who's

1704
01:07:26,799 --> 01:07:29,359
next could you please share with slides

1705
01:07:29,359 --> 01:07:31,839
and go ahead

1706
01:07:41,200 --> 01:07:42,640
mr song

1707
01:07:42,640 --> 01:07:45,440
i probably butchered your name so

1708
01:07:45,440 --> 01:07:46,640
i

1709
01:07:46,640 --> 01:07:50,240
i can you share my slice

1710
01:07:50,960 --> 01:07:53,039
uh there are uploaders you can just go

1711
01:07:53,039 --> 01:07:55,760
to the share preloaded slide button and

1712
01:07:55,760 --> 01:07:59,200
find find your slides there

1713
01:07:59,760 --> 01:08:01,760
okay let me

1714
01:08:01,760 --> 01:08:05,400
share my screen

1715
01:08:22,479 --> 01:08:25,839
can you see my screen

1716
01:08:26,479 --> 01:08:28,399
not yet have you

1717
01:08:28,399 --> 01:08:30,640
you need to select the

1718
01:08:30,640 --> 01:08:32,479
presentation and press the share button

1719
01:08:32,479 --> 01:08:34,000
i think

1720
01:08:34,000 --> 01:08:37,799
on the pop-up window

1721
01:08:43,198 --> 01:08:46,158
i can shall i do it for you

1722
01:08:46,158 --> 01:08:48,319
yeah can you um

1723
01:08:48,319 --> 01:08:49,380
that's better

1724
01:08:49,380 --> 01:08:51,520
[Music]

1725
01:08:51,520 --> 01:08:53,839
let me

1726
01:08:54,880 --> 01:08:57,279
there you have the slides i believe okay

1727
01:08:57,279 --> 01:08:58,960
yeah please go ahead

1728
01:08:58,960 --> 01:09:01,040
oh thank you everyone um

1729
01:09:01,040 --> 01:09:03,679
yeah i've been looking at discussions i

1730
01:09:03,679 --> 01:09:07,600
find many people think that ioam will be

1731
01:09:07,600 --> 01:09:12,640
an important use case for the ipv6

1732
01:09:12,640 --> 01:09:16,238
so there'll be some proposals ready to

1733
01:09:16,238 --> 01:09:18,560
actually support iom

1734
01:09:18,560 --> 01:09:20,560
using the hbh

1735
01:09:20,560 --> 01:09:22,880
extension header option

1736
01:09:22,880 --> 01:09:23,920
um

1737
01:09:23,920 --> 01:09:25,600
but um

1738
01:09:25,600 --> 01:09:28,479
there there were some issues uh uh

1739
01:09:28,479 --> 01:09:31,920
for this uh kind of proposal um the

1740
01:09:31,920 --> 01:09:34,290
first issue is that

1741
01:09:34,290 --> 01:09:35,839
[Music]

1742
01:09:35,839 --> 01:09:37,839
iom is a

1743
01:09:37,839 --> 01:09:39,279
tree option

1744
01:09:39,279 --> 01:09:42,000
uh does need to perform processing so

1745
01:09:42,000 --> 01:09:44,640
that's why the natural place to host it

1746
01:09:44,640 --> 01:09:47,759
is in the ipv6

1747
01:09:47,759 --> 01:09:49,279
extension header

1748
01:09:49,279 --> 01:09:52,319
um but by the um

1749
01:09:52,319 --> 01:09:54,000
rfc um

1750
01:09:54,000 --> 01:09:56,960
ipv6 uh hope i hope extension header

1751
01:09:56,960 --> 01:09:59,040
must also be the first

1752
01:09:59,040 --> 01:10:00,480
extension header

1753
01:10:00,480 --> 01:10:01,840
in the

1754
01:10:01,840 --> 01:10:06,080
and there are two issues about iom trees

1755
01:10:06,080 --> 01:10:07,199
one

1756
01:10:07,199 --> 01:10:10,000
is that the overhead can be very large

1757
01:10:10,000 --> 01:10:12,880
because uh it included those instruction

1758
01:10:12,880 --> 01:10:13,920
header

1759
01:10:13,920 --> 01:10:18,159
and the trace data collected at each hub

1760
01:10:18,159 --> 01:10:20,480
and also due to

1761
01:10:20,480 --> 01:10:22,640
this the data collection

1762
01:10:22,640 --> 01:10:25,520
uh the the header side might change at

1763
01:10:25,520 --> 01:10:30,159
each hop makes a header arrival lens

1764
01:10:30,880 --> 01:10:31,840
also

1765
01:10:31,840 --> 01:10:34,159
since the overhead is very large it can

1766
01:10:34,159 --> 01:10:36,719
make it very difficult to access the

1767
01:10:36,719 --> 01:10:40,000
subsequent extension headers

1768
01:10:40,000 --> 01:10:41,490
because

1769
01:10:41,490 --> 01:10:42,800
[Music]

1770
01:10:42,800 --> 01:10:46,320
many many routers has this uh hardware

1771
01:10:46,320 --> 01:10:49,440
limitation on the header buffer size

1772
01:10:49,440 --> 01:10:51,679
uh so uh if

1773
01:10:51,679 --> 01:10:54,000
uh this overhead is too large and we

1774
01:10:54,000 --> 01:10:55,440
could

1775
01:10:55,440 --> 01:10:57,840
that can make the later headers

1776
01:10:57,840 --> 01:10:59,600
accessible

1777
01:10:59,600 --> 01:11:02,080
especially for the use case like

1778
01:11:02,080 --> 01:11:04,080
srv6 um

1779
01:11:04,080 --> 01:11:04,880
the

1780
01:11:04,880 --> 01:11:07,600
sra to be locating the routing handlers

1781
01:11:07,600 --> 01:11:08,960
behind this

1782
01:11:08,960 --> 01:11:10,480
hph header

1783
01:11:10,480 --> 01:11:13,280
then that will be a problem

1784
01:11:13,280 --> 01:11:15,920
so there are some possible solutions to

1785
01:11:15,920 --> 01:11:16,800
this

1786
01:11:16,800 --> 01:11:20,320
the first one is iom um we can basically

1787
01:11:20,320 --> 01:11:22,000
separate the

1788
01:11:22,000 --> 01:11:24,640
instruction part and the data part

1789
01:11:24,640 --> 01:11:25,679
and

1790
01:11:25,679 --> 01:11:28,080
since the header part is a fixed size so

1791
01:11:28,080 --> 01:11:29,120
we can

1792
01:11:29,120 --> 01:11:32,679
um put it in the uh still put it in the

1793
01:11:32,679 --> 01:11:34,719
hbh2 header

1794
01:11:34,719 --> 01:11:37,840
and we postpose the data part in the

1795
01:11:37,840 --> 01:11:40,640
some later extend header

1796
01:11:40,640 --> 01:11:42,000
after the

1797
01:11:42,000 --> 01:11:43,679
routing header

1798
01:11:43,679 --> 01:11:45,520
so

1799
01:11:45,520 --> 01:11:48,640
but the issue of this

1800
01:11:48,640 --> 01:11:51,280
solution is that we need to determine

1801
01:11:51,280 --> 01:11:54,320
where to actually put the data do we

1802
01:11:54,320 --> 01:11:56,880
really need to design new extension

1803
01:11:56,880 --> 01:11:59,280
header for that or uh

1804
01:11:59,280 --> 01:12:01,840
put it in some material ways on some

1805
01:12:01,840 --> 01:12:05,199
other existing extension headers

1806
01:12:05,199 --> 01:12:08,800
so the second solution is

1807
01:12:08,800 --> 01:12:11,520
we can use some concept of

1808
01:12:11,520 --> 01:12:14,560
called segment iom export

1809
01:12:14,560 --> 01:12:16,719
um there are two basically pro

1810
01:12:16,719 --> 01:12:17,920
approaches

1811
01:12:17,920 --> 01:12:21,120
in the context of srv6

1812
01:12:21,120 --> 01:12:23,199
we can enforce that

1813
01:12:23,199 --> 01:12:26,719
we will export the uh collected the iom

1814
01:12:26,719 --> 01:12:30,560
data so far only and the uh answer each

1815
01:12:30,560 --> 01:12:32,400
srv6 node

1816
01:12:32,400 --> 01:12:35,040
which means at that place we will first

1817
01:12:35,040 --> 01:12:37,199
clear all the

1818
01:12:37,199 --> 01:12:40,880
data collected so far up now and then uh

1819
01:12:40,880 --> 01:12:43,760
keeps a hph header less short

1820
01:12:43,760 --> 01:12:46,719
so therefore we can easily access srh

1821
01:12:46,719 --> 01:12:49,920
but this is only applicable to the srv6

1822
01:12:49,920 --> 01:12:54,239
and in general case uh ipv6 network case

1823
01:12:54,239 --> 01:12:57,199
we can deploy uh basically we can limit

1824
01:12:57,199 --> 01:13:00,880
the size of iom header or head which

1825
01:13:00,880 --> 01:13:03,280
means the number of hubs we can collect

1826
01:13:03,280 --> 01:13:06,000
the data once we reach that limit we

1827
01:13:06,000 --> 01:13:08,640
will export data and clear the data path

1828
01:13:08,640 --> 01:13:12,000
and start over again to

1829
01:13:12,000 --> 01:13:14,719
then then we can use this we can keep

1830
01:13:14,719 --> 01:13:16,640
the header size

1831
01:13:16,640 --> 01:13:17,600
fixed

1832
01:13:17,600 --> 01:13:22,159
the third we can use a iom direct export

1833
01:13:22,159 --> 01:13:24,400
option which means uh there's is a

1834
01:13:24,400 --> 01:13:26,880
postcard based we don't collect data in

1835
01:13:26,880 --> 01:13:30,719
the uh in the in the header only

1836
01:13:30,719 --> 01:13:33,840
only we directly export state out of uh

1837
01:13:33,840 --> 01:13:34,719
the

1838
01:13:34,719 --> 01:13:37,600
falling plane so the packet header side

1839
01:13:37,600 --> 01:13:39,440
will be fixed

1840
01:13:39,440 --> 01:13:40,480
so

1841
01:13:40,480 --> 01:13:44,718
uh in the unit next slice please

1842
01:13:45,520 --> 01:13:47,440
yeah you know in the draft to be these

1843
01:13:47,440 --> 01:13:50,560
uh several options with the pros and

1844
01:13:50,560 --> 01:13:52,960
cons for each and the next next slides

1845
01:13:52,960 --> 01:13:55,199
please

1846
01:13:55,360 --> 01:13:57,440
so uh we would

1847
01:13:57,440 --> 01:13:58,960
like the working group to reach

1848
01:13:58,960 --> 01:14:02,080
consensus on the proposed recommendation

1849
01:14:02,080 --> 01:14:04,000
and that's so you can develop the

1850
01:14:04,000 --> 01:14:06,400
complete solution

1851
01:14:06,400 --> 01:14:08,719
if any change and update to existing

1852
01:14:08,719 --> 01:14:10,960
standard draft is needed

1853
01:14:10,960 --> 01:14:14,360
thank you very much

1854
01:14:14,560 --> 01:14:17,360
thank you and uh chi dong i believe

1855
01:14:17,360 --> 01:14:19,600
you're up next um

1856
01:14:19,600 --> 01:14:22,560
why don't i just share the slides uh so

1857
01:14:22,560 --> 01:14:26,320
we'll move on a little quicker

1858
01:14:26,320 --> 01:14:29,040
uh you can share for me

1859
01:14:29,040 --> 01:14:32,960
yes there you are please go ahead

1860
01:14:33,040 --> 01:14:34,239
okay

1861
01:14:34,239 --> 01:14:36,640
so this is another use case about the

1862
01:14:36,640 --> 01:14:39,440
hyper hub extension header is to use it

1863
01:14:39,440 --> 01:14:43,559
to carry the routine identifier

1864
01:14:43,920 --> 01:14:46,560
your audio is breaking up a lot is is it

1865
01:14:46,560 --> 01:14:50,320
something you can do about that

1866
01:14:51,040 --> 01:14:53,760
how about now

1867
01:14:54,000 --> 01:14:56,640
how about you know try to speak now

1868
01:14:56,640 --> 01:14:58,400
otherwise we'll we can just move you to

1869
01:14:58,400 --> 01:15:00,080
our uh

1870
01:15:00,080 --> 01:15:03,920
if you can figure out the audio issues

1871
01:15:03,920 --> 01:15:07,600
okay how about now can you hear me

1872
01:15:08,080 --> 01:15:10,000
no you're you're still clipping i'm not

1873
01:15:10,000 --> 01:15:13,600
the only one hearing him flipping right

1874
01:15:14,719 --> 01:15:15,920
he's clipping

1875
01:15:15,920 --> 01:15:18,239
he's clicking okay um so gee why don't

1876
01:15:18,239 --> 01:15:20,159
we okay maybe he's switch to the next

1877
01:15:20,159 --> 01:15:22,400
one

1878
01:15:23,280 --> 01:15:24,400
uh so

1879
01:15:24,400 --> 01:15:26,000
um and then you can see if you can

1880
01:15:26,000 --> 01:15:28,320
figure it out and come back to us so

1881
01:15:28,320 --> 01:15:30,320
guiseppi do you wanna i can share those

1882
01:15:30,320 --> 01:15:32,960
slides for you

1883
01:15:35,040 --> 01:15:37,280
can you hear me

1884
01:15:37,280 --> 01:15:40,400
we can hear you fine

1885
01:15:46,320 --> 01:15:48,719
possibly you have to oh there we are

1886
01:15:48,719 --> 01:15:50,000
sorry

1887
01:15:50,000 --> 01:15:51,760
a little bit hard to find in this system

1888
01:15:51,760 --> 01:15:54,320
there you are please go ahead

1889
01:15:54,320 --> 01:15:56,560
okay yeah this is um

1890
01:15:56,560 --> 01:15:58,800
just few words about another hobby op

1891
01:15:58,800 --> 01:16:02,159
use cases that is the alternate marking

1892
01:16:02,159 --> 01:16:07,839
application uh for fpv6 so next slide

1893
01:16:08,800 --> 01:16:11,679
um yeah just few words about what is the

1894
01:16:11,679 --> 01:16:13,600
alternate marking is annoying passive

1895
01:16:13,600 --> 01:16:15,679
performance measurement technique that

1896
01:16:15,679 --> 01:16:16,530
allowed

1897
01:16:16,530 --> 01:16:17,920
[Music]

1898
01:16:17,920 --> 01:16:19,920
the measurement packet loss by switching

1899
01:16:19,920 --> 01:16:23,840
the value of a bit called plus flag

1900
01:16:23,840 --> 01:16:26,000
and there is also another bit called

1901
01:16:26,000 --> 01:16:28,960
delay flag to create a new set of

1902
01:16:28,960 --> 01:16:31,440
packets that can be used

1903
01:16:31,440 --> 01:16:33,040
for delay

1904
01:16:33,040 --> 01:16:35,600
there is also another uh

1905
01:16:35,600 --> 01:16:37,440
extension of this

1906
01:16:37,440 --> 01:16:39,840
alternate marking methodology that is

1907
01:16:39,840 --> 01:16:42,320
called multi-point methodology that

1908
01:16:42,320 --> 01:16:44,719
generalized the application for

1909
01:16:44,719 --> 01:16:47,360
multiple multi-point flows and allows

1910
01:16:47,360 --> 01:16:50,080
also the possibility to have

1911
01:16:50,080 --> 01:16:53,360
flexible performance management approach

1912
01:16:53,360 --> 01:16:56,080
next slide

1913
01:16:57,040 --> 01:16:58,800
so how we

1914
01:16:58,800 --> 01:17:01,840
how do we apply this methodology in 1986

1915
01:17:01,840 --> 01:17:03,199
we defined

1916
01:17:03,199 --> 01:17:04,000
uh

1917
01:17:04,000 --> 01:17:06,080
in general

1918
01:17:06,080 --> 01:17:08,719
new options that can be encoded

1919
01:17:08,719 --> 01:17:10,159
uh

1920
01:17:10,159 --> 01:17:12,719
as of by op or as a destination option

1921
01:17:12,719 --> 01:17:16,159
now we are talking about top by op so

1922
01:17:16,159 --> 01:17:18,960
focus on the home bioptics case

1923
01:17:18,960 --> 01:17:23,679
and you see that the options is the same

1924
01:17:24,640 --> 01:17:25,679
there are

1925
01:17:25,679 --> 01:17:27,920
two flags the loss and delay flag that i

1926
01:17:27,920 --> 01:17:30,080
have explained in the previous slide and

1927
01:17:30,080 --> 01:17:31,440
then we have the flow monitor

1928
01:17:31,440 --> 01:17:33,199
identification field

1929
01:17:33,199 --> 01:17:37,600
that is required for several reasons

1930
01:17:37,600 --> 01:17:41,520
for identification to allow easy

1931
01:17:41,520 --> 01:17:44,480
collection of data and to

1932
01:17:44,480 --> 01:17:46,000
also in combination with source and

1933
01:17:46,000 --> 01:17:47,920
destination address

1934
01:17:47,920 --> 01:17:49,679
to select

1935
01:17:49,679 --> 01:17:52,800
the the the flow to be monitored

1936
01:17:52,800 --> 01:17:54,960
how it works the source node is the only

1937
01:17:54,960 --> 01:17:58,560
one that writes the option adder to mark

1938
01:17:58,560 --> 01:18:01,520
the flow for bottle by open destination

1939
01:18:01,520 --> 01:18:04,640
option in case of bob by up the option

1940
01:18:04,640 --> 01:18:06,719
adder it can only be read by the

1941
01:18:06,719 --> 01:18:08,480
intermediate nodes if they are

1942
01:18:08,480 --> 01:18:11,360
configured to do so

1943
01:18:11,360 --> 01:18:14,159
and the measurement is of bio

1944
01:18:14,159 --> 01:18:16,159
in case of definition option of course

1945
01:18:16,159 --> 01:18:17,920
the measurement is then one in the

1946
01:18:17,920 --> 01:18:21,600
entrance next slide

1947
01:18:23,280 --> 01:18:25,360
in in the draft that is in isg

1948
01:18:25,360 --> 01:18:27,679
evaluation phase we

1949
01:18:27,679 --> 01:18:30,159
address the ultimate marking hub by

1950
01:18:30,159 --> 01:18:32,560
obtuse case

1951
01:18:32,560 --> 01:18:36,400
i don't see the next slide

1952
01:18:37,679 --> 01:18:40,000
okay thank you

1953
01:18:40,000 --> 01:18:43,040
yeah and the the draft address uh

1954
01:18:43,040 --> 01:18:44,880
the hobby op

1955
01:18:44,880 --> 01:18:47,040
use case consideration

1956
01:18:47,040 --> 01:18:48,480
and

1957
01:18:48,480 --> 01:18:52,159
in particular uh the opeyop option allow

1958
01:18:52,159 --> 01:18:54,960
as i said measurement on every router if

1959
01:18:54,960 --> 01:18:57,280
the feature is enabled

1960
01:18:57,280 --> 01:18:59,199
uh in particular because

1961
01:18:59,199 --> 01:19:01,760
in many cases end-to-end measurement is

1962
01:19:01,760 --> 01:19:04,480
not enough so we want to monitor

1963
01:19:04,480 --> 01:19:07,120
hobbyop

1964
01:19:07,199 --> 01:19:10,640
uh nodes of course examine and process

1965
01:19:10,640 --> 01:19:13,840
the objective are configured to do so

1966
01:19:13,840 --> 01:19:17,199
this is based on rfc8200

1967
01:19:17,199 --> 01:19:19,199
and the nodes that don't support or

1968
01:19:19,199 --> 01:19:20,560
biops should

1969
01:19:20,560 --> 01:19:23,520
should ignore them so in this case the

1970
01:19:23,520 --> 01:19:25,280
measurement does not account for all

1971
01:19:25,280 --> 01:19:27,520
lincoln's nodes and along the path but

1972
01:19:27,520 --> 01:19:30,080
this is not this is not a big problem

1973
01:19:30,080 --> 01:19:32,800
because as i said the intermediate nodes

1974
01:19:32,800 --> 01:19:34,239
don't have to

1975
01:19:34,239 --> 01:19:37,199
handle to modify this option on the fly

1976
01:19:37,199 --> 01:19:39,440
so they only need to read so

1977
01:19:39,440 --> 01:19:41,760
if they support or not this will not

1978
01:19:41,760 --> 01:19:45,920
affect the performance measurement so

1979
01:19:45,920 --> 01:19:48,480
um of course we in the draft we also

1980
01:19:48,480 --> 01:19:50,560
highlighted that this opt-by-op option

1981
01:19:50,560 --> 01:19:54,000
is designed to minimize impacts bottom

1982
01:19:54,000 --> 01:19:56,480
nodes that do not recognize this option

1983
01:19:56,480 --> 01:19:58,960
and on nodes that support this option

1984
01:19:58,960 --> 01:20:01,040
because the three high order bits are

1985
01:20:01,040 --> 01:20:04,159
all zero and this means in theory that

1986
01:20:04,159 --> 01:20:06,159
you have to skip if you don't recognize

1987
01:20:06,159 --> 01:20:09,120
and data do not change your group

1988
01:20:09,120 --> 01:20:11,840
in addition one of the preconditions for

1989
01:20:11,840 --> 01:20:13,920
the application of this methodology is

1990
01:20:13,920 --> 01:20:14,639
the

1991
01:20:14,639 --> 01:20:16,840
controller domain

1992
01:20:16,840 --> 01:20:19,600
limitation and this should also avoid

1993
01:20:19,600 --> 01:20:22,400
the risk of arbitrary nodes dropping

1994
01:20:22,400 --> 01:20:25,040
packets without buyout option

1995
01:20:25,040 --> 01:20:27,120
anyway in practice we know that the

1996
01:20:27,120 --> 01:20:28,800
things may be different the

1997
01:20:28,800 --> 01:20:30,719
implementation and it can happen that

1998
01:20:30,719 --> 01:20:33,120
packets without biops are forced

1999
01:20:33,120 --> 01:20:35,920
onto the low part

2000
01:20:35,920 --> 01:20:40,320
next slide that is also the final slide

2001
01:20:40,320 --> 01:20:41,040
so

2002
01:20:41,040 --> 01:20:42,719
in summary

2003
01:20:42,719 --> 01:20:46,000
of it is desirable to modify the job

2004
01:20:46,000 --> 01:20:48,560
bioprocessing to make hobbyop options

2005
01:20:48,560 --> 01:20:50,800
more practical

2006
01:20:50,800 --> 01:20:53,199
also to allow further users including

2007
01:20:53,199 --> 01:20:55,920
ultimate market talent so we welcome all

2008
01:20:55,920 --> 01:21:01,080
this work and new activity on bio

2009
01:21:01,360 --> 01:21:02,960
thank you guys

2010
01:21:02,960 --> 01:21:05,120
excellent

2011
01:21:05,120 --> 01:21:08,639
so uh gee let's see if we can

2012
01:21:08,639 --> 01:21:10,960
get you back on again

2013
01:21:10,960 --> 01:21:12,639
okay hear me

2014
01:21:12,639 --> 01:21:15,840
we can hear you it sounds better now

2015
01:21:15,840 --> 01:21:17,840
okay good uh

2016
01:21:17,840 --> 01:21:20,800
so this is another use case of the ipv6

2017
01:21:20,800 --> 01:21:22,080
hubba hub

2018
01:21:22,080 --> 01:21:24,239
extension header to use it to carry the

2019
01:21:24,239 --> 01:21:26,159
waiting identifier

2020
01:21:26,159 --> 01:21:29,839
okay next slide please

2021
01:21:30,159 --> 01:21:33,360
so here's the background uh a vtn is a

2022
01:21:33,360 --> 01:21:36,239
virtual underlay network consisting of a

2023
01:21:36,239 --> 01:21:38,239
set of dedicated or shared network

2024
01:21:38,239 --> 01:21:41,360
resources and it is associated with a

2025
01:21:41,360 --> 01:21:43,920
customized logical topology

2026
01:21:43,920 --> 01:21:46,480
it can be used as a virtual underlay to

2027
01:21:46,480 --> 01:21:49,040
deliver one group of enhanced sleeping

2028
01:21:49,040 --> 01:21:51,600
services and the typical use case it can

2029
01:21:51,600 --> 01:21:54,000
be natural slicing

2030
01:21:54,000 --> 01:21:56,239
for more details about the background

2031
01:21:56,239 --> 01:21:58,560
please read the draft and this draft and

2032
01:21:58,560 --> 01:22:00,719
also the in-hand vpn draft in case

2033
01:22:00,719 --> 01:22:02,320
working group

2034
01:22:02,320 --> 01:22:04,960
and the identifier of the vtn needs to

2035
01:22:04,960 --> 01:22:07,040
be carried in the data packet

2036
01:22:07,040 --> 01:22:08,880
and passed by each hub along the

2037
01:22:08,880 --> 01:22:11,360
forwarding path so that it can be used

2038
01:22:11,360 --> 01:22:13,360
to steer the package to

2039
01:22:13,360 --> 01:22:15,600
use the set of resources allocated to

2040
01:22:15,600 --> 01:22:17,760
the vtm for the processing

2041
01:22:17,760 --> 01:22:19,360
so that we think the harbor hub

2042
01:22:19,360 --> 01:22:20,800
extension header is the suitable

2043
01:22:20,800 --> 01:22:22,880
approach for this case

2044
01:22:22,880 --> 01:22:25,679
and this document proposed a new up uh

2045
01:22:25,679 --> 01:22:27,520
harbour hub option to carry this waiting

2046
01:22:27,520 --> 01:22:28,880
information

2047
01:22:28,880 --> 01:22:32,000
next slide please

2048
01:22:32,639 --> 01:22:34,560
so here is the proposal

2049
01:22:34,560 --> 01:22:35,840
uh we

2050
01:22:35,840 --> 01:22:39,040
propose to define a new option type

2051
01:22:39,040 --> 01:22:41,360
for the written resource identifier in

2052
01:22:41,360 --> 01:22:43,120
the hubble hub header

2053
01:22:43,120 --> 01:22:45,199
the first two bits are set to zero so

2054
01:22:45,199 --> 01:22:47,040
that it can be escaped when and

2055
01:22:47,040 --> 01:22:48,400
recognized

2056
01:22:48,400 --> 01:22:51,040
and the third bit is set to zero to so

2057
01:22:51,040 --> 01:22:53,760
that it will not change in the route

2058
01:22:53,760 --> 01:22:56,159
and then there's a four octet within

2059
01:22:56,159 --> 01:22:59,199
resource id which is used to uniquely

2060
01:22:59,199 --> 01:23:01,600
identify the set of resources allocated

2061
01:23:01,600 --> 01:23:03,840
to the vtn

2062
01:23:03,840 --> 01:23:06,400
and the follow the procedures in the

2063
01:23:06,400 --> 01:23:08,639
network basically the ingress node

2064
01:23:08,639 --> 01:23:09,520
should

2065
01:23:09,520 --> 01:23:12,800
encapsulate an outer ipv6 header and the

2066
01:23:12,800 --> 01:23:15,600
hubble hub header with this option

2067
01:23:15,600 --> 01:23:17,440
based on the traffic classification and

2068
01:23:17,440 --> 01:23:20,239
mapping policies of the operator

2069
01:23:20,239 --> 01:23:22,800
then the transient nodes use this use

2070
01:23:22,800 --> 01:23:24,880
destination address to determine the

2071
01:23:24,880 --> 01:23:25,920
desktop

2072
01:23:25,920 --> 01:23:27,840
and use the waiting option to determine

2073
01:23:27,840 --> 01:23:30,000
the set of local resources allocated to

2074
01:23:30,000 --> 01:23:33,040
the vtm for packet for processing

2075
01:23:33,040 --> 01:23:35,040
on the egress node it should of this

2076
01:23:35,040 --> 01:23:36,239
domain

2077
01:23:36,239 --> 01:23:39,199
it should decapitate the outer ipvc

2078
01:23:39,199 --> 01:23:41,600
header including the waiting option in

2079
01:23:41,600 --> 01:23:44,320
the hover hub header

2080
01:23:44,320 --> 01:23:47,719
next slide please

2081
01:23:49,280 --> 01:23:51,520
here are the operational considerations

2082
01:23:51,520 --> 01:23:54,000
we described in the draft

2083
01:23:54,000 --> 01:23:58,320
we know that according to the rfc8200

2084
01:23:58,320 --> 01:24:00,000
network nodes may be configured to

2085
01:24:00,000 --> 01:24:02,480
ignore the hover hub header and there

2086
01:24:02,480 --> 01:24:04,639
can be implementations to draw packets

2087
01:24:04,639 --> 01:24:06,560
due to the harbor hub header

2088
01:24:06,560 --> 01:24:08,400
and luckily the

2089
01:24:08,400 --> 01:24:10,560
other half processing draft is working

2090
01:24:10,560 --> 01:24:12,800
on the pro

2091
01:24:12,800 --> 01:24:15,600
solutions to solve this problem

2092
01:24:15,600 --> 01:24:17,040
and would like to see that throughout

2093
01:24:17,040 --> 01:24:18,639
making progress

2094
01:24:18,639 --> 01:24:21,440
at the same time operators uh before we

2095
01:24:21,440 --> 01:24:23,920
have this mechanism ready operators need

2096
01:24:23,920 --> 01:24:25,199
to make sure that

2097
01:24:25,199 --> 01:24:27,199
when they use the vt mechanism all the

2098
01:24:27,199 --> 01:24:29,840
natural nodes involved in

2099
01:24:29,840 --> 01:24:32,320
can either process the hobby hub header

2100
01:24:32,320 --> 01:24:35,600
in fastpass or ignore the hub header

2101
01:24:35,600 --> 01:24:38,159
so an a practical approach is to ensure

2102
01:24:38,159 --> 01:24:40,000
that all the nodes involved in the

2103
01:24:40,000 --> 01:24:42,639
logical topology of the vtn can support

2104
01:24:42,639 --> 01:24:44,880
the processing of the hub header and the

2105
01:24:44,880 --> 01:24:46,800
updating option

2106
01:24:46,800 --> 01:24:48,880
and this ensures that package will only

2107
01:24:48,880 --> 01:24:51,679
be sent on the pass computed within the

2108
01:24:51,679 --> 01:24:54,480
logical topology

2109
01:24:54,480 --> 01:24:57,360
so uh that's all i want to introduce at

2110
01:24:57,360 --> 01:25:00,239
the use case to this world working group

2111
01:25:00,239 --> 01:25:02,880
and by the way we have a request for the

2112
01:25:02,880 --> 01:25:04,400
adoption call

2113
01:25:04,400 --> 01:25:06,159
in the second working group

2114
01:25:06,159 --> 01:25:07,360
thank you

2115
01:25:07,360 --> 01:25:08,960
excellent thank you very much and i

2116
01:25:08,960 --> 01:25:09,760
think

2117
01:25:09,760 --> 01:25:12,159
we're now up for the discussion

2118
01:25:12,159 --> 01:25:12,960
yes

2119
01:25:12,960 --> 01:25:14,320
thank you very much

2120
01:25:14,320 --> 01:25:16,639
i'll bring up the discretion questions

2121
01:25:16,639 --> 01:25:18,239
again

2122
01:25:18,239 --> 01:25:21,959
hang on just a second

2123
01:25:38,880 --> 01:25:40,560
okay we have

2124
01:25:40,560 --> 01:25:43,679
uh two sets of questions of this set

2125
01:25:43,679 --> 01:25:46,320
and this set

2126
01:25:46,320 --> 01:25:48,880
so let's

2127
01:25:48,960 --> 01:25:51,760
let's open the queue for anyone who

2128
01:25:51,760 --> 01:25:55,840
wants to address any of these questions

2129
01:25:58,320 --> 01:26:00,320
i see lots of chatter in the chat room

2130
01:26:00,320 --> 01:26:01,760
so i assume some people would like to

2131
01:26:01,760 --> 01:26:02,800
bring

2132
01:26:02,800 --> 01:26:06,679
bring their opinions forward

2133
01:26:09,040 --> 01:26:11,920
we also have fan and edward in the in

2134
01:26:11,920 --> 01:26:14,239
the queue oh i say okay

2135
01:26:14,239 --> 01:26:17,239
fan

2136
01:26:22,560 --> 01:26:26,080
fan you'll have to unmute yourself

2137
01:26:30,560 --> 01:26:34,360
okay let's skip to eduard

2138
01:26:36,080 --> 01:26:37,920
do you hear me

2139
01:26:37,920 --> 01:26:40,800
yes i can hear you now okay fine uh for

2140
01:26:40,800 --> 01:26:43,280
all solutions which i have heard uh not

2141
01:26:43,280 --> 01:26:46,320
just today but in the mail alias too uh

2142
01:26:46,320 --> 01:26:48,000
i could classify as a three type of

2143
01:26:48,000 --> 01:26:50,400
solutions from my point of view the type

2144
01:26:50,400 --> 01:26:52,560
of solution number one is uh let's we

2145
01:26:52,560 --> 01:26:55,520
enforce people to use at least one here

2146
01:26:55,520 --> 01:26:57,120
or at least one option it's at least

2147
01:26:57,120 --> 01:26:59,600
something yeah it's an enforcement i

2148
01:26:59,600 --> 01:27:02,800
don't believe it's possible to enforce

2149
01:27:02,800 --> 01:27:04,719
from atf it's possible to enforce uh

2150
01:27:04,719 --> 01:27:06,400
people if people does not have business

2151
01:27:06,400 --> 01:27:08,320
case they will still continue to filter

2152
01:27:08,320 --> 01:27:10,080
out all this doesn't matter that

2153
01:27:10,080 --> 01:27:12,639
particularly rfc will tell okay you must

2154
01:27:12,639 --> 01:27:14,960
and then atf would would have not a good

2155
01:27:14,960 --> 01:27:17,120
look because itf has

2156
01:27:17,120 --> 01:27:19,600
asked should master whatever but

2157
01:27:19,600 --> 01:27:21,520
people will still ignore it's

2158
01:27:21,520 --> 01:27:25,120
not not a pleasant situation for atf

2159
01:27:25,120 --> 01:27:26,480
therefore

2160
01:27:26,480 --> 01:27:28,080
enforcement from my point of view is not

2161
01:27:28,080 --> 01:27:29,280
a good idea

2162
01:27:29,280 --> 01:27:32,000
the second type of solution solutions

2163
01:27:32,000 --> 01:27:34,960
which uh i have seen a lot it's uh

2164
01:27:34,960 --> 01:27:36,400
restrict something by numbers for

2165
01:27:36,400 --> 01:27:38,400
example i'll tell people okay you will

2166
01:27:38,400 --> 01:27:40,400
not have more than three headers off and

2167
01:27:40,400 --> 01:27:42,239
then three options whatever

2168
01:27:42,239 --> 01:27:43,760
restrictions but

2169
01:27:43,760 --> 01:27:45,840
sorry how it could help if currently

2170
01:27:45,840 --> 01:27:47,840
people does not have even business case

2171
01:27:47,840 --> 01:27:49,360
even for one

2172
01:27:49,360 --> 01:27:50,960
option for example they don't support

2173
01:27:50,960 --> 01:27:53,520
even one and you tell them okay you will

2174
01:27:53,520 --> 01:27:55,440
not have in the future more than three

2175
01:27:55,440 --> 01:27:57,440
will it help of course not because they

2176
01:27:57,440 --> 01:28:00,560
don't want even one but it's it's a bad

2177
01:28:00,560 --> 01:28:02,320
thing for the future because

2178
01:28:02,320 --> 01:28:04,080
if in the future we will need to some

2179
01:28:04,080 --> 01:28:06,000
protocol expansion and uh this

2180
01:28:06,000 --> 01:28:08,239
restriction could could limit us on the

2181
01:28:08,239 --> 01:28:09,920
future therefore i am against any

2182
01:28:09,920 --> 01:28:11,920
restriction doesn't matter which one as

2183
01:28:11,920 --> 01:28:14,159
soon as you will put okay let's restrict

2184
01:28:14,159 --> 01:28:16,719
by number of headers by size of option

2185
01:28:16,719 --> 01:28:19,280
itself by whatever any restrictions it's

2186
01:28:19,280 --> 01:28:21,280
not it looks like good because because

2187
01:28:21,280 --> 01:28:23,600
we could not even start first option

2188
01:28:23,600 --> 01:28:25,520
and the third type of solution which i

2189
01:28:25,520 --> 01:28:27,199
have seen today

2190
01:28:27,199 --> 01:28:29,760
not just today uh that change somehow

2191
01:28:29,760 --> 01:28:31,679
architecture uh principally tell

2192
01:28:31,679 --> 01:28:33,440
something okay for example let's

2193
01:28:33,440 --> 01:28:36,000
classify some options as a soft soft

2194
01:28:36,000 --> 01:28:38,080
options which will go to control plane

2195
01:28:38,080 --> 01:28:40,320
and other options as a hardware options

2196
01:28:40,320 --> 01:28:42,400
which will go should be in the data

2197
01:28:42,400 --> 01:28:44,080
plane okay

2198
01:28:44,080 --> 01:28:46,000
this is not numbered this is something

2199
01:28:46,000 --> 01:28:48,719
some principle change for such things

2200
01:28:48,719 --> 01:28:50,800
i'm supportive i believe it's

2201
01:28:50,800 --> 01:28:53,040
probably uh may try

2202
01:28:53,040 --> 01:28:55,040
probably make sense to try

2203
01:28:55,040 --> 01:28:56,639
probably it will not help anyway from my

2204
01:28:56,639 --> 01:28:57,840
point of view because i have a

2205
01:28:57,840 --> 01:29:00,159
discussion in the chat in the chat that

2206
01:29:00,159 --> 01:29:00,960
uh

2207
01:29:00,960 --> 01:29:02,400
there is no business case as soon as

2208
01:29:02,400 --> 01:29:04,000
business case will will be visible

2209
01:29:04,000 --> 01:29:05,520
immediately everything will be fixed no

2210
01:29:05,520 --> 01:29:08,400
problem but we could try this because

2211
01:29:08,400 --> 01:29:10,400
for example this particular solution

2212
01:29:10,400 --> 01:29:12,320
soft and hard a separation and some

2213
01:29:12,320 --> 01:29:14,400
something principle principle change how

2214
01:29:14,400 --> 01:29:16,560
how mechanics operate some architecture

2215
01:29:16,560 --> 01:29:19,040
change this one i support

2216
01:29:19,040 --> 01:29:21,600
that's it from my side okay thank you

2217
01:29:21,600 --> 01:29:24,600
tom

2218
01:29:25,040 --> 01:29:27,760
back to something that was in the

2219
01:29:27,760 --> 01:29:29,040
um

2220
01:29:29,040 --> 01:29:31,040
i believe it's bob's draft so you

2221
01:29:31,040 --> 01:29:34,000
mentioned that rfc 8200 when we made

2222
01:29:34,000 --> 01:29:36,800
that change it didn't have an impact do

2223
01:29:36,800 --> 01:29:39,040
we have data or

2224
01:29:39,040 --> 01:29:42,800
some information that that's true

2225
01:29:47,040 --> 01:29:48,480
okay and i think that's a question for

2226
01:29:48,480 --> 01:29:49,679
bob

2227
01:29:49,679 --> 01:29:52,560
yeah i guess i would say it seems like

2228
01:29:52,560 --> 01:29:54,719
that the situation with

2229
01:29:54,719 --> 01:29:56,639
headers has not improved

2230
01:29:56,639 --> 01:30:00,480
since 8200 was published

2231
01:30:00,880 --> 01:30:01,760
but

2232
01:30:01,760 --> 01:30:04,159
so my question was more

2233
01:30:04,159 --> 01:30:04,840
have

2234
01:30:04,840 --> 01:30:07,600
vendors adopted that and are they

2235
01:30:07,600 --> 01:30:09,120
planning to stop

2236
01:30:09,120 --> 01:30:11,040
dropping packets with hope hop options

2237
01:30:11,040 --> 01:30:13,920
and just ignore them

2238
01:30:15,120 --> 01:30:17,440
i think that's the current a lot of the

2239
01:30:17,440 --> 01:30:21,559
current practice we observed

2240
01:30:22,159 --> 01:30:24,480
i just wonder if if new devices are

2241
01:30:24,480 --> 01:30:26,480
continuing

2242
01:30:26,480 --> 01:30:28,719
yeah i i don't know but just to clarify

2243
01:30:28,719 --> 01:30:30,960
what we did in 8200 because we were

2244
01:30:30,960 --> 01:30:33,920
moving it to internet standard was to

2245
01:30:33,920 --> 01:30:36,239
document the current state it wasn't

2246
01:30:36,239 --> 01:30:39,679
asking anyone to change behavior

2247
01:30:39,679 --> 01:30:43,120
so we we documented what we thought was

2248
01:30:43,120 --> 01:30:46,559
actually happening in practice

2249
01:30:47,120 --> 01:30:50,480
right but there's also a perception that

2250
01:30:50,480 --> 01:30:52,080
there's a lot of routers out there that

2251
01:30:52,080 --> 01:30:52,960
are

2252
01:30:52,960 --> 01:30:55,360
dropping any packets

2253
01:30:55,360 --> 01:30:58,880
with hvh and rc8200 is trying to

2254
01:30:58,880 --> 01:31:00,960
mitigate that by saying don't drop

2255
01:31:00,960 --> 01:31:03,679
ignore which would be much better

2256
01:31:03,679 --> 01:31:06,159
if i could jump in a second

2257
01:31:06,159 --> 01:31:06,960
um

2258
01:31:06,960 --> 01:31:09,280
the default behavior for most routers is

2259
01:31:09,280 --> 01:31:11,679
to punch to the control plane

2260
01:31:11,679 --> 01:31:13,440
it can be configured

2261
01:31:13,440 --> 01:31:15,280
a router can be configured to drop a

2262
01:31:15,280 --> 01:31:18,400
packet that contains hph

2263
01:31:18,400 --> 01:31:20,320
and recently i know of at least one

2264
01:31:20,320 --> 01:31:21,360
vendor

2265
01:31:21,360 --> 01:31:23,360
that has a new switch that says uh

2266
01:31:23,360 --> 01:31:26,239
ignore the hph pass the packet don't

2267
01:31:26,239 --> 01:31:30,120
punt it don't drop it

2268
01:31:30,400 --> 01:31:32,639
that's the preferred behavior is would

2269
01:31:32,639 --> 01:31:34,480
be to

2270
01:31:34,480 --> 01:31:36,719
ignore as opposed to punt

2271
01:31:36,719 --> 01:31:39,199
so i i don't know if we need to

2272
01:31:39,199 --> 01:31:40,880
um

2273
01:31:40,880 --> 01:31:42,480
maybe have another

2274
01:31:42,480 --> 01:31:44,560
document on that best practices or

2275
01:31:44,560 --> 01:31:46,400
something that but i think that would be

2276
01:31:46,400 --> 01:31:48,080
a big thing

2277
01:31:48,080 --> 01:31:49,520
that that's a lot of the problem if we

2278
01:31:49,520 --> 01:31:52,239
could just have router vendors

2279
01:31:52,239 --> 01:31:54,159
ignore instead of drop

2280
01:31:54,159 --> 01:31:55,040
um

2281
01:31:55,040 --> 01:31:56,239
that would get us

2282
01:31:56,239 --> 01:31:57,920
halfway i think to the solving the

2283
01:31:57,920 --> 01:32:00,239
problem

2284
01:32:01,360 --> 01:32:04,480
okay pascal

2285
01:32:04,560 --> 01:32:06,719
thank you uh i wanted to say that the

2286
01:32:06,719 --> 01:32:08,800
hub by hub is already used very

2287
01:32:08,800 --> 01:32:10,880
successfully in the iut in the context

2288
01:32:10,880 --> 01:32:12,639
of report networks

2289
01:32:12,639 --> 01:32:15,440
and the hobbyhop header has to be looked

2290
01:32:15,440 --> 01:32:18,239
at by every node it contains topology

2291
01:32:18,239 --> 01:32:19,920
information which is very similar to the

2292
01:32:19,920 --> 01:32:24,239
vtn and it also contains loop avoidance

2293
01:32:24,239 --> 01:32:26,800
information because ripple is reactive

2294
01:32:26,800 --> 01:32:27,920
in

2295
01:32:27,920 --> 01:32:30,320
uh fixing the routing just to save

2296
01:32:30,320 --> 01:32:32,639
energy so that that's one thing so very

2297
01:32:32,639 --> 01:32:35,040
successful very useful

2298
01:32:35,040 --> 01:32:37,280
and the other one is is we have yet

2299
01:32:37,280 --> 01:32:40,000
another use case for hub by hub in the

2300
01:32:40,000 --> 01:32:41,840
context of that net

2301
01:32:41,840 --> 01:32:43,600
in this case we are not signaling a

2302
01:32:43,600 --> 01:32:46,560
topology we are more signaling something

2303
01:32:46,560 --> 01:32:49,120
like a path where equal treatment will

2304
01:32:49,120 --> 01:32:51,120
be received and then again there's a

2305
01:32:51,120 --> 01:32:52,159
need to

2306
01:32:52,159 --> 01:32:54,239
to look at the header at least the one

2307
01:32:54,239 --> 01:32:55,920
that indicates the path

2308
01:32:55,920 --> 01:32:57,920
on every hop

2309
01:32:57,920 --> 01:33:00,159
both cases repo and that net would be

2310
01:33:00,159 --> 01:33:01,920
limited domains

2311
01:33:01,920 --> 01:33:04,960
which which have me as me ask you this

2312
01:33:04,960 --> 01:33:06,960
about this question that was asked in

2313
01:33:06,960 --> 01:33:08,560
the chat as well

2314
01:33:08,560 --> 01:33:11,040
why do you what do you mean by internet

2315
01:33:11,040 --> 01:33:13,040
wide interest

2316
01:33:13,040 --> 01:33:14,960
because this these are limited domain

2317
01:33:14,960 --> 01:33:17,120
but the interest is huge

2318
01:33:17,120 --> 01:33:18,639
those domains can be somewhere

2319
01:33:18,639 --> 01:33:20,080
everywhere in the internet but not

2320
01:33:20,080 --> 01:33:23,840
across the internet probably

2321
01:33:25,199 --> 01:33:26,800
so okay

2322
01:33:26,800 --> 01:33:29,440
does that pass the bar of internet-wide

2323
01:33:29,440 --> 01:33:32,480
interest or not

2324
01:33:35,600 --> 01:33:36,960
um

2325
01:33:36,960 --> 01:33:38,960
not sure but let's continue this

2326
01:33:38,960 --> 01:33:42,560
conversation now shuping

2327
01:33:48,719 --> 01:33:51,760
shooping you'll have to unmute yourself

2328
01:33:51,760 --> 01:33:54,960
uh yes i already

2329
01:33:56,800 --> 01:33:58,880
hello can you hear me yes you're on we

2330
01:33:58,880 --> 01:34:00,239
hear you

2331
01:34:00,239 --> 01:34:01,440
oh good

2332
01:34:01,440 --> 01:34:03,120
okay so first of all

2333
01:34:03,120 --> 01:34:05,840
thank you and thanks to chairs for

2334
01:34:05,840 --> 01:34:08,719
arranging this dedicated session for

2335
01:34:08,719 --> 01:34:12,320
this harbor hub so we could discuss and

2336
01:34:12,320 --> 01:34:13,840
seek the

2337
01:34:13,840 --> 01:34:14,639
the

2338
01:34:14,639 --> 01:34:16,639
proper solutions

2339
01:34:16,639 --> 01:34:19,440
and there are some use cases as just

2340
01:34:19,440 --> 01:34:22,320
presented by the several

2341
01:34:22,320 --> 01:34:24,400
uh colleagues here

2342
01:34:24,400 --> 01:34:26,480
and uh

2343
01:34:26,480 --> 01:34:29,280
this is the hobby hub is the is a real

2344
01:34:29,280 --> 01:34:32,400
problem and we could say it's a it is a

2345
01:34:32,400 --> 01:34:34,320
headache for the operators

2346
01:34:34,320 --> 01:34:37,040
you could see from the hour basics of

2347
01:34:37,040 --> 01:34:39,679
the the the draft there are three

2348
01:34:39,679 --> 01:34:42,560
operators that was actually asked by the

2349
01:34:42,560 --> 01:34:44,960
operators they want to solve it they

2350
01:34:44,960 --> 01:34:48,639
want to actually use the hub options

2351
01:34:48,639 --> 01:34:49,920
headers

2352
01:34:49,920 --> 01:34:52,000
and currently they just

2353
01:34:52,000 --> 01:34:54,639
they have to

2354
01:34:54,880 --> 01:34:57,280
block it

2355
01:34:57,280 --> 01:34:59,600
and currently we are seeking the

2356
01:34:59,600 --> 01:35:02,400
solutions as uh progressed

2357
01:35:02,400 --> 01:35:06,320
in bob's draft which is good but uh

2358
01:35:06,320 --> 01:35:08,239
and also you hear there are some

2359
01:35:08,239 --> 01:35:10,960
questions you listed here

2360
01:35:10,960 --> 01:35:12,960
they are worthwhile to

2361
01:35:12,960 --> 01:35:13,679
to

2362
01:35:13,679 --> 01:35:14,960
investigate

2363
01:35:14,960 --> 01:35:17,840
but there are something else i i keep it

2364
01:35:17,840 --> 01:35:21,119
in the draft in our draft that is about

2365
01:35:21,119 --> 01:35:23,199
migration strategy

2366
01:35:23,199 --> 01:35:25,760
so once we have the solution we still

2367
01:35:25,760 --> 01:35:28,239
will have to consider how to actually

2368
01:35:28,239 --> 01:35:29,360
use it

2369
01:35:29,360 --> 01:35:32,560
so to do like a make it really

2370
01:35:32,560 --> 01:35:35,440
uh usable in the real network

2371
01:35:35,440 --> 01:35:36,960
and how to

2372
01:35:36,960 --> 01:35:39,840
make the hubba hub coexist

2373
01:35:39,840 --> 01:35:42,400
with uh i mean the new

2374
01:35:42,400 --> 01:35:45,600
new device which could support the hub

2375
01:35:45,600 --> 01:35:46,880
hub

2376
01:35:46,880 --> 01:35:50,000
they could coexist with the existing

2377
01:35:50,000 --> 01:35:52,639
devices i think that is a really

2378
01:35:52,639 --> 01:35:54,320
important

2379
01:35:54,320 --> 01:35:57,920
thing for us to consider thank you

2380
01:35:57,920 --> 01:36:01,119
okay thank you jen

2381
01:36:03,719 --> 01:36:06,239
okay can you hear me right

2382
01:36:06,239 --> 01:36:06,960
so

2383
01:36:06,960 --> 01:36:08,400
i'm really

2384
01:36:08,400 --> 01:36:10,560
happy to see this discussion happening

2385
01:36:10,560 --> 01:36:12,880
but at the same time i'm a bit surprised

2386
01:36:12,880 --> 01:36:15,040
right there are definitely people who

2387
01:36:15,040 --> 01:36:17,119
want to make this work

2388
01:36:17,119 --> 01:36:19,840
so i see no reason

2389
01:36:19,840 --> 01:36:22,639
to even start talking about duplication

2390
01:36:22,639 --> 01:36:25,119
or not rehabilitating it unless there

2391
01:36:25,119 --> 01:36:27,920
are proof that it's dangerous right

2392
01:36:27,920 --> 01:36:31,040
so i think yeah we should keep exploring

2393
01:36:31,040 --> 01:36:33,760
options on how we can make those things

2394
01:36:33,760 --> 01:36:35,040
useful

2395
01:36:35,040 --> 01:36:38,880
about and i believe nobody gonna enable

2396
01:36:38,880 --> 01:36:41,199
proper processing across the internet

2397
01:36:41,199 --> 01:36:43,040
until we find a

2398
01:36:43,040 --> 01:36:45,440
compelling use case right so we should

2399
01:36:45,440 --> 01:36:46,480
start

2400
01:36:46,480 --> 01:36:48,480
like solve this trick in an egg problem

2401
01:36:48,480 --> 01:36:50,960
but finding a use case for them and then

2402
01:36:50,960 --> 01:36:53,119
yeah i'm quite sure that if operators

2403
01:36:53,119 --> 01:36:55,119
find them useful they will enable

2404
01:36:55,119 --> 01:36:59,040
processing not before that right

2405
01:37:00,320 --> 01:37:01,360
yes

2406
01:37:01,360 --> 01:37:04,400
okay thank you changly

2407
01:37:05,760 --> 01:37:08,480
so i strongly support to uh

2408
01:37:08,480 --> 01:37:11,520
uh move the world forward to find uh

2409
01:37:11,520 --> 01:37:14,560
some like a good solution of hobbyhop

2410
01:37:14,560 --> 01:37:16,480
definitely we need it because you know

2411
01:37:16,480 --> 01:37:18,840
as the development of the tech

2412
01:37:18,840 --> 01:37:22,400
technology we need this kind of usage

2413
01:37:22,400 --> 01:37:25,360
and the technology is defined for human

2414
01:37:25,360 --> 01:37:27,040
for people for business

2415
01:37:27,040 --> 01:37:28,000
so

2416
01:37:28,000 --> 01:37:30,880
our customers want that and we want that

2417
01:37:30,880 --> 01:37:35,239
so let's do it thank you

2418
01:37:36,639 --> 01:37:37,600
thank you

2419
01:37:37,600 --> 01:37:40,080
chiang pang

2420
01:37:40,320 --> 01:37:43,639
chong fang

2421
01:37:52,080 --> 01:37:53,520
chong feng you'll have to take yourself

2422
01:37:53,520 --> 01:37:56,239
off of mute

2423
01:38:01,040 --> 01:38:03,760
okay we'll come back to you warren okay

2424
01:38:03,760 --> 01:38:04,560
uh

2425
01:38:04,560 --> 01:38:07,760
i support uh the work of hgbh

2426
01:38:07,760 --> 01:38:10,000
uh and i think it should proceed

2427
01:38:10,000 --> 01:38:11,679
um

2428
01:38:11,679 --> 01:38:13,280
and that means that we should

2429
01:38:13,280 --> 01:38:16,480
rehabilitate hebe's work uh it behaves

2430
01:38:16,480 --> 01:38:17,920
open headers

2431
01:38:17,920 --> 01:38:20,480
uh because it can support

2432
01:38:20,480 --> 01:38:23,360
lam mtid and the pmto

2433
01:38:23,360 --> 01:38:24,480
options

2434
01:38:24,480 --> 01:38:27,360
uh another function frank speak i don't

2435
01:38:27,360 --> 01:38:29,520
think the service is there

2436
01:38:29,520 --> 01:38:32,800
some functions of network so i

2437
01:38:32,800 --> 01:38:35,360
don't think they are services and

2438
01:38:35,360 --> 01:38:38,480
another issue is that

2439
01:38:38,480 --> 01:38:41,440
about the current status of

2440
01:38:41,440 --> 01:38:43,119
backup options

2441
01:38:43,119 --> 01:38:45,679
frankly speaking the hope option has not

2442
01:38:45,679 --> 01:38:48,560
been widely used

2443
01:38:48,719 --> 01:38:51,119
by operator but this does not mean that

2444
01:38:51,119 --> 01:38:53,920
the operators oppose

2445
01:38:53,920 --> 01:38:56,159
a backup option because they don't know

2446
01:38:56,159 --> 01:38:58,400
how to use backup options

2447
01:38:58,400 --> 01:39:00,960
because this is a new thing right

2448
01:39:00,960 --> 01:39:01,760
so

2449
01:39:01,760 --> 01:39:04,159
so i give the support to this work and

2450
01:39:04,159 --> 01:39:05,040
also

2451
01:39:05,040 --> 01:39:08,719
about the documents i think we should

2452
01:39:08,719 --> 01:39:11,199
make a draft about

2453
01:39:11,199 --> 01:39:13,760
the requirements of each beach

2454
01:39:13,760 --> 01:39:16,159
this should be comprehensive we should

2455
01:39:16,159 --> 01:39:19,040
consider many factors in this draft

2456
01:39:19,040 --> 01:39:22,159
that's my comments thank you

2457
01:39:22,159 --> 01:39:25,879
okay thank you warren

2458
01:39:26,800 --> 01:39:28,880
thank you um so i mean it's originally

2459
01:39:28,880 --> 01:39:31,520
going to save this for the end um but

2460
01:39:31,520 --> 01:39:33,520
figuring out exactly when the end of the

2461
01:39:33,520 --> 01:39:35,520
session slash q is tricky

2462
01:39:35,520 --> 01:39:37,440
um i just want you to note that when

2463
01:39:37,440 --> 01:39:39,280
we'd originally discussed having this

2464
01:39:39,280 --> 01:39:42,159
sort of joint session and focusing on h

2465
01:39:42,159 --> 01:39:44,880
by uh sorry processing

2466
01:39:44,880 --> 01:39:47,840
um we were or at least i was a little

2467
01:39:47,840 --> 01:39:50,400
concerned how the session would go

2468
01:39:50,400 --> 01:39:52,320
um you know would everybody actually try

2469
01:39:52,320 --> 01:39:54,239
and get together and and solve the

2470
01:39:54,239 --> 01:39:56,400
problem or do we instead devolve into

2471
01:39:56,400 --> 01:39:58,000
shouting at each other

2472
01:39:58,000 --> 01:40:00,000
um and i just want to know how really

2473
01:40:00,000 --> 01:40:01,840
impressed and happy i am

2474
01:40:01,840 --> 01:40:04,000
with the attitude that everybody's had

2475
01:40:04,000 --> 01:40:06,480
and how well people have been

2476
01:40:06,480 --> 01:40:08,880
sort of trying to get together and

2477
01:40:08,880 --> 01:40:11,440
recognize the issue and also discuss how

2478
01:40:11,440 --> 01:40:13,199
we can move out of this

2479
01:40:13,199 --> 01:40:14,000
so

2480
01:40:14,000 --> 01:40:16,159
sorry for the sort of touchy feely but

2481
01:40:16,159 --> 01:40:18,159
but i'm really happy with how this has

2482
01:40:18,159 --> 01:40:21,799
been going so far

2483
01:40:22,159 --> 01:40:26,080
well thank you um g

2484
01:40:27,360 --> 01:40:29,119
i think as i mentioned i really

2485
01:40:29,119 --> 01:40:31,440
supported the work on this hobbyhop

2486
01:40:31,440 --> 01:40:32,719
option header

2487
01:40:32,719 --> 01:40:35,440
as we can see we already have several

2488
01:40:35,440 --> 01:40:38,480
use cases or applications in the limited

2489
01:40:38,480 --> 01:40:39,440
domain

2490
01:40:39,440 --> 01:40:41,840
and before we can deploy the for the

2491
01:40:41,840 --> 01:40:44,239
larger domain or even the internet for

2492
01:40:44,239 --> 01:40:46,320
some other cases we need to get the

2493
01:40:46,320 --> 01:40:48,400
technology ready we need to

2494
01:40:48,400 --> 01:40:51,280
have this uh documentation documented

2495
01:40:51,280 --> 01:40:54,880
documented in the itf standards to guide

2496
01:40:54,880 --> 01:40:56,800
the implementation of the winders so i

2497
01:40:56,800 --> 01:40:58,960
think this is really important to to

2498
01:40:58,960 --> 01:41:01,679
make use of this

2499
01:41:01,760 --> 01:41:04,639
extensible feature in the future

2500
01:41:04,639 --> 01:41:07,040
so i think that is my support to this

2501
01:41:07,040 --> 01:41:09,040
work

2502
01:41:09,040 --> 01:41:10,159
thank you

2503
01:41:10,159 --> 01:41:13,280
okay i see the queue is empty

2504
01:41:13,280 --> 01:41:16,480
so i'll open the uh

2505
01:41:16,480 --> 01:41:19,760
open it up for some further questions

2506
01:41:19,760 --> 01:41:23,280
first is uh oh gee you're

2507
01:41:23,280 --> 01:41:25,360
oh no that you were just there okay

2508
01:41:25,360 --> 01:41:26,639
um

2509
01:41:26,639 --> 01:41:28,560
i'll open it up for some

2510
01:41:28,560 --> 01:41:30,880
further questions i know that i've heard

2511
01:41:30,880 --> 01:41:33,520
some support for continuing the work

2512
01:41:33,520 --> 01:41:35,040
i know we don't make decisions at

2513
01:41:35,040 --> 01:41:37,600
meetings we make them on mailing lists

2514
01:41:37,600 --> 01:41:38,719
so

2515
01:41:38,719 --> 01:41:40,400
chairs will get together and figure out

2516
01:41:40,400 --> 01:41:41,679
how to do

2517
01:41:41,679 --> 01:41:43,760
well it's not quite a call for adoption

2518
01:41:43,760 --> 01:41:46,719
it's a how to put out a decision or

2519
01:41:46,719 --> 01:41:48,880
how to get more more feedback on putting

2520
01:41:48,880 --> 01:41:50,800
out a decision

2521
01:41:50,800 --> 01:41:53,040
uh assuming that we do go forward with

2522
01:41:53,040 --> 01:41:54,800
the work

2523
01:41:54,800 --> 01:41:57,280
i'd like to look at the last two

2524
01:41:57,280 --> 01:41:58,960
questions and this is assuming we go

2525
01:41:58,960 --> 01:42:00,639
forward with the work

2526
01:42:00,639 --> 01:42:02,560
do we need to re-examine some currently

2527
01:42:02,560 --> 01:42:04,800
defined hbh options

2528
01:42:04,800 --> 01:42:06,800
i'm thinking in particular about routing

2529
01:42:06,800 --> 01:42:07,840
options

2530
01:42:07,840 --> 01:42:09,440
and maybe some of the ones that are just

2531
01:42:09,440 --> 01:42:12,239
hanging around from pre-history

2532
01:42:12,239 --> 01:42:14,719
um you know some of the very old ones

2533
01:42:14,719 --> 01:42:15,760
that

2534
01:42:15,760 --> 01:42:17,679
really should be historic

2535
01:42:17,679 --> 01:42:19,440
and the other question is what kind of

2536
01:42:19,440 --> 01:42:21,360
work do we need to make this progress

2537
01:42:21,360 --> 01:42:24,080
what documents do we think we need

2538
01:42:24,080 --> 01:42:25,840
and i'll open the florida comments on

2539
01:42:25,840 --> 01:42:29,239
those two questions

2540
01:42:38,960 --> 01:42:42,360
okay gory

2541
01:42:42,560 --> 01:42:44,400
yeah

2542
01:42:44,400 --> 01:42:46,560
surely we can look again at the list of

2543
01:42:46,560 --> 01:42:49,199
hot buy hop options and other options

2544
01:42:49,199 --> 01:42:51,920
and find some dead wood in there and bob

2545
01:42:51,920 --> 01:42:53,360
and i

2546
01:42:53,360 --> 01:42:55,760
started this but before we um we wrote

2547
01:42:55,760 --> 01:42:57,280
anything because we wanted to understand

2548
01:42:57,280 --> 01:42:59,360
what really existed and some of the

2549
01:42:59,360 --> 01:43:01,440
stuff doesn't really exist that we have

2550
01:43:01,440 --> 01:43:03,360
in the rsc series

2551
01:43:03,360 --> 01:43:05,760
i'm not sure it really helps that much

2552
01:43:05,760 --> 01:43:07,440
it may help you with the size thing

2553
01:43:07,440 --> 01:43:09,280
because you may discover that all the

2554
01:43:09,280 --> 01:43:11,840
really odd size things don't actually

2555
01:43:11,840 --> 01:43:12,880
exist

2556
01:43:12,880 --> 01:43:13,600
so

2557
01:43:13,600 --> 01:43:15,119
at least from the size it's good to look

2558
01:43:15,119 --> 01:43:17,040
at them

2559
01:43:17,040 --> 01:43:18,719
okay i'm going to put myself in the

2560
01:43:18,719 --> 01:43:19,840
queue

2561
01:43:19,840 --> 01:43:20,960
and

2562
01:43:20,960 --> 01:43:23,360
speaking with no hats on at all

2563
01:43:23,360 --> 01:43:25,360
the one you know it getting rid of the

2564
01:43:25,360 --> 01:43:27,280
dead wood is nice but it doesn't do very

2565
01:43:27,280 --> 01:43:29,199
much for you except for one piece of

2566
01:43:29,199 --> 01:43:30,320
dead wood

2567
01:43:30,320 --> 01:43:32,159
the router alert option

2568
01:43:32,159 --> 01:43:34,239
and that's the one that

2569
01:43:34,239 --> 01:43:36,639
typically crosses the plane

2570
01:43:36,639 --> 01:43:39,199
from forwarding to control

2571
01:43:39,199 --> 01:43:41,119
uh how do people feel about that you

2572
01:43:41,119 --> 01:43:43,360
know deprecating that one

2573
01:43:43,360 --> 01:43:47,360
and uh shuping you're next online

2574
01:43:50,719 --> 01:43:53,199
shuping

2575
01:43:53,199 --> 01:43:54,880
already defined

2576
01:43:54,880 --> 01:43:57,280
and uh

2577
01:43:57,280 --> 01:44:00,719
but uh whether to deprecate

2578
01:44:00,719 --> 01:44:02,080
i'm a bit

2579
01:44:02,080 --> 01:44:04,719
i just i'm not sure whether we we might

2580
01:44:04,719 --> 01:44:06,639
make some trouble on this and how to

2581
01:44:06,639 --> 01:44:09,199
guarantee we we want to

2582
01:44:09,199 --> 01:44:11,840
to do it

2583
01:44:11,840 --> 01:44:13,600
wrong i mean

2584
01:44:13,600 --> 01:44:16,000
when somebody still using it and because

2585
01:44:16,000 --> 01:44:17,520
you never know

2586
01:44:17,520 --> 01:44:22,159
and uh that is my thoughts on this

2587
01:44:22,159 --> 01:44:24,080
beta conservative

2588
01:44:24,080 --> 01:44:26,880
and regarding the documents and work

2589
01:44:26,880 --> 01:44:28,639
definitely

2590
01:44:28,639 --> 01:44:30,159
the requirements

2591
01:44:30,159 --> 01:44:31,360
uh

2592
01:44:31,360 --> 01:44:33,679
was just imagined

2593
01:44:33,679 --> 01:44:35,040
a comment

2594
01:44:35,040 --> 01:44:38,719
and in in our draft we have a dedicated

2595
01:44:38,719 --> 01:44:41,440
section on these requirements and we

2596
01:44:41,440 --> 01:44:43,360
will work more

2597
01:44:43,360 --> 01:44:45,440
on this and

2598
01:44:45,440 --> 01:44:48,159
that is our key focus

2599
01:44:48,159 --> 01:44:52,239
later so you are welcome to join us and

2600
01:44:52,239 --> 01:44:53,199
to

2601
01:44:53,199 --> 01:44:54,639
to

2602
01:44:54,639 --> 01:44:57,100
make it more

2603
01:44:57,100 --> 01:44:58,480
[Music]

2604
01:44:58,480 --> 01:44:59,760
reasonable

2605
01:44:59,760 --> 01:45:02,719
and to guide the

2606
01:45:02,719 --> 01:45:04,239
solutions

2607
01:45:04,239 --> 01:45:05,760
so that is

2608
01:45:05,760 --> 01:45:07,199
my comments here

2609
01:45:07,199 --> 01:45:09,599
thank you

2610
01:45:13,679 --> 01:45:17,000
okay edward

2611
01:45:17,199 --> 01:45:18,560
and what to do

2612
01:45:18,560 --> 01:45:20,480
from my point of view atf has one big

2613
01:45:20,480 --> 01:45:22,880
problem uh which is

2614
01:45:22,880 --> 01:45:24,960
everywhere for all working groups

2615
01:45:24,960 --> 01:45:26,560
uh that

2616
01:45:26,560 --> 01:45:28,000
if you will try to understand some

2617
01:45:28,000 --> 01:45:29,679
particular problem for example in this

2618
01:45:29,679 --> 01:45:31,760
case hope i hope or whatever you need to

2619
01:45:31,760 --> 01:45:34,639
read basic rfc of course and then you

2620
01:45:34,639 --> 01:45:37,199
try to search and find all other rfc

2621
01:45:37,199 --> 01:45:38,880
which is related and

2622
01:45:38,880 --> 01:45:40,400
it's really research you need to do a

2623
01:45:40,400 --> 01:45:42,400
big research which is more or less

2624
01:45:42,400 --> 01:45:44,320
possible to do for vendor but okay it's

2625
01:45:44,320 --> 01:45:46,400
a challenge but it's completely not

2626
01:45:46,400 --> 01:45:48,639
possible to do for carrier therefore for

2627
01:45:48,639 --> 01:45:51,520
carrying to understand all uh this uh

2628
01:45:51,520 --> 01:45:53,760
nuances so all these problems around

2629
01:45:53,760 --> 01:45:55,920
hope i hope it's it's really

2630
01:45:55,920 --> 01:45:57,920
mission is impossible because uh

2631
01:45:57,920 --> 01:45:59,760
probably he need to read

2632
01:45:59,760 --> 01:46:02,159
a few a few dozens of rfc and it's it's

2633
01:46:02,159 --> 01:46:04,719
not what is his it's not his job

2634
01:46:04,719 --> 01:46:06,800
uh on opposite side let me give you an

2635
01:46:06,800 --> 01:46:08,880
example of what was going on in wi-fi

2636
01:46:08,880 --> 01:46:10,880
alliance for example you know we finally

2637
01:46:10,880 --> 01:46:12,480
answered they develop they're trying to

2638
01:46:12,480 --> 01:46:14,719
incorporate in one primary document

2639
01:46:14,719 --> 01:46:16,719
which they trace from the history

2640
01:46:16,719 --> 01:46:18,719
currently and as a result they have

2641
01:46:18,719 --> 01:46:21,040
something consistent uh it's always

2642
01:46:21,040 --> 01:46:23,440
possible to take just one file just one

2643
01:46:23,440 --> 01:46:25,440
latest document and read everything

2644
01:46:25,440 --> 01:46:27,360
unfortunately it's opposite extreme

2645
01:46:27,360 --> 01:46:29,360
because in the case uh the last document

2646
01:46:29,360 --> 01:46:32,159
is already more than 5 000 pages it's of

2647
01:46:32,159 --> 01:46:33,760
course it's not good it should be it

2648
01:46:33,760 --> 01:46:35,440
should be more or less structured it's

2649
01:46:35,440 --> 01:46:37,119
the opposite opposite

2650
01:46:37,119 --> 01:46:39,440
madness but the madness which we have in

2651
01:46:39,440 --> 01:46:41,440
atf right now then it's scattered

2652
01:46:41,440 --> 01:46:43,040
everywhere

2653
01:46:43,040 --> 01:46:45,440
it's up to particular working group

2654
01:46:45,440 --> 01:46:46,719
particular

2655
01:46:46,719 --> 01:46:49,520
chairs particular id uh that some

2656
01:46:49,520 --> 01:46:51,440
particular working group could start to

2657
01:46:51,440 --> 01:46:54,239
uh formalize everything properly because

2658
01:46:54,239 --> 01:46:55,920
okay if you have some particular problem

2659
01:46:55,920 --> 01:46:58,239
it should not be scattered over thous

2660
01:46:58,239 --> 01:47:00,880
or the dozens of rfc it should be some

2661
01:47:00,880 --> 01:47:02,719
some number of limited rfc you should

2662
01:47:02,719 --> 01:47:04,560
not read everything uh you should not

2663
01:47:04,560 --> 01:47:06,880
become an expert to understand it's it's

2664
01:47:06,880 --> 01:47:08,480
a really big problem from my point of

2665
01:47:08,480 --> 01:47:10,000
view it's everywhere and hope i hope is

2666
01:47:10,000 --> 01:47:13,119
a good example sorry

2667
01:47:18,320 --> 01:47:22,440
okay thank you edward eric

2668
01:47:23,280 --> 01:47:25,679
yeah let me first uh thank you again to

2669
01:47:25,679 --> 01:47:27,679
the chair sir for organizing this and

2670
01:47:27,679 --> 01:47:29,119
running it correctly

2671
01:47:29,119 --> 01:47:31,440
uh as you know me uh most of you know

2672
01:47:31,440 --> 01:47:34,560
that i want to keep her by up working

2673
01:47:34,560 --> 01:47:36,880
and i'm a little bit unsure ambivalent

2674
01:47:36,880 --> 01:47:39,119
at least regarding the deprecation of

2675
01:47:39,119 --> 01:47:40,960
some of backup options

2676
01:47:40,960 --> 01:47:42,159
because it's not because you will

2677
01:47:42,159 --> 01:47:44,239
deprecate that the code will be removed

2678
01:47:44,239 --> 01:47:46,960
from existing routers a specifically

2679
01:47:46,960 --> 01:47:49,040
very old one

2680
01:47:49,040 --> 01:47:51,600
now i would suggest maybe

2681
01:47:51,600 --> 01:47:53,199
we can go like

2682
01:47:53,199 --> 01:47:53,920
uh

2683
01:47:53,920 --> 01:47:56,719
a best current practice to not enable

2684
01:47:56,719 --> 01:47:59,440
them rather than deprecating them

2685
01:47:59,440 --> 01:48:01,280
uh that may be a little bit more

2686
01:48:01,280 --> 01:48:03,280
operational issue towards a

2687
01:48:03,280 --> 01:48:05,440
standardization issue there

2688
01:48:05,440 --> 01:48:07,520
uh and as the people say throughout the

2689
01:48:07,520 --> 01:48:10,320
alert for mid is required because mld

2690
01:48:10,320 --> 01:48:12,080
are sent to the multicast group right so

2691
01:48:12,080 --> 01:48:13,360
if you want to scoop them you need to

2692
01:48:13,360 --> 01:48:15,440
get the router let's to go to in the

2693
01:48:15,440 --> 01:48:18,559
slow path so that's that

2694
01:48:18,639 --> 01:48:20,239
and yes let's continue the work on the

2695
01:48:20,239 --> 01:48:22,000
documents for sure

2696
01:48:22,000 --> 01:48:23,760
let me ask a question since i see the

2697
01:48:23,760 --> 01:48:26,000
two erics uh in the line

2698
01:48:26,000 --> 01:48:29,119
about what deprecate actually means

2699
01:48:29,119 --> 01:48:31,520
i think it means that if an option is

2700
01:48:31,520 --> 01:48:33,280
deprecated

2701
01:48:33,280 --> 01:48:36,400
it can still be used by the protocols

2702
01:48:36,400 --> 01:48:38,719
that use it for instance router alert is

2703
01:48:38,719 --> 01:48:41,199
used by mldv2 it can still be used by

2704
01:48:41,199 --> 01:48:42,480
him

2705
01:48:42,480 --> 01:48:43,520
um

2706
01:48:43,520 --> 01:48:45,280
or by that protocol

2707
01:48:45,280 --> 01:48:47,760
um

2708
01:48:47,760 --> 01:48:51,360
but new protocols cannot use it does it

2709
01:48:51,360 --> 01:48:54,239
mean more than that

2710
01:48:55,280 --> 01:48:57,119
i need to check to be honest run there's

2711
01:48:57,119 --> 01:48:59,119
a very specific questions and very

2712
01:48:59,119 --> 01:49:00,560
important one

2713
01:49:00,560 --> 01:49:02,480
yeah i i know i should know that too

2714
01:49:02,480 --> 01:49:03,840
because

2715
01:49:03,840 --> 01:49:05,760
you're an around idiot as well right so

2716
01:49:05,760 --> 01:49:08,000
yeah i don't know what it means

2717
01:49:08,000 --> 01:49:09,600
well and by the way speaking without any

2718
01:49:09,600 --> 01:49:12,239
head sorry yeah

2719
01:49:12,239 --> 01:49:15,040
okay uh thank you eric jump in on that a

2720
01:49:15,040 --> 01:49:17,360
little bit yeah it usually means what

2721
01:49:17,360 --> 01:49:19,440
ron says and that's like when we've

2722
01:49:19,440 --> 01:49:20,880
deprecated

2723
01:49:20,880 --> 01:49:24,000
other things we the deprecation document

2724
01:49:24,000 --> 01:49:25,760
usually defines

2725
01:49:25,760 --> 01:49:27,520
it specifically for what it's

2726
01:49:27,520 --> 01:49:30,480
deprecating but usually it means you you

2727
01:49:30,480 --> 01:49:32,159
know we're not the protocol police it

2728
01:49:32,159 --> 01:49:34,239
doesn't turn anything off but just don't

2729
01:49:34,239 --> 01:49:36,880
use it in the future

2730
01:49:36,880 --> 01:49:38,159
and in practice it can never be

2731
01:49:38,159 --> 01:49:41,199
reallocated really

2732
01:49:41,599 --> 01:49:43,840
i think

2733
01:49:43,920 --> 01:49:46,880
uh i just want to say with respect to um

2734
01:49:46,880 --> 01:49:50,320
working group documents uh and progress

2735
01:49:50,320 --> 01:49:51,199
uh

2736
01:49:51,199 --> 01:49:52,239
as a

2737
01:49:52,239 --> 01:49:53,920
responsibility for six man we should be

2738
01:49:53,920 --> 01:49:56,400
having an adoption call for one or more

2739
01:49:56,400 --> 01:49:58,159
of the documents six-man documents you

2740
01:49:58,159 --> 01:50:00,159
saw today in the week or in the coming

2741
01:50:00,159 --> 01:50:02,639
week or so i would expect

2742
01:50:02,639 --> 01:50:04,639
um up to the chairs but i would expect

2743
01:50:04,639 --> 01:50:06,800
to see one soon so i would encourage

2744
01:50:06,800 --> 01:50:08,560
everyone to

2745
01:50:08,560 --> 01:50:10,159
take the time to go read those documents

2746
01:50:10,159 --> 01:50:12,239
and to make your comments known

2747
01:50:12,239 --> 01:50:16,159
uh now or during the adoption call

2748
01:50:16,159 --> 01:50:18,400
thank you

2749
01:50:18,400 --> 01:50:21,520
hey thank you warren

2750
01:50:21,520 --> 01:50:24,239
yeah others especially bob largely said

2751
01:50:24,239 --> 01:50:25,520
what i'm gonna say

2752
01:50:25,520 --> 01:50:28,080
um deprecates is kind of like updates

2753
01:50:28,080 --> 01:50:30,239
nobody quite knows exactly what it means

2754
01:50:30,239 --> 01:50:32,000
but when you deprecate something

2755
01:50:32,000 --> 01:50:33,920
generally you explain what you're

2756
01:50:33,920 --> 01:50:35,360
meaning by it when you put it in the

2757
01:50:35,360 --> 01:50:37,679
document and yes this is a problem and

2758
01:50:37,679 --> 01:50:39,599
everybody knows it's a problem but we

2759
01:50:39,599 --> 01:50:41,360
haven't solved it yet

2760
01:50:41,360 --> 01:50:42,639
so

2761
01:50:42,639 --> 01:50:45,119
oh well

2762
01:50:49,520 --> 01:50:52,520
okay

2763
01:50:55,280 --> 01:51:00,800
so i see the queue is clearing out

2764
01:51:00,960 --> 01:51:03,840
does anyone have any final comments

2765
01:51:03,840 --> 01:51:05,840
chairs anyone um

2766
01:51:05,840 --> 01:51:09,280
any any expected uh activity and then oh

2767
01:51:09,280 --> 01:51:11,599
i see eric has joined the uh

2768
01:51:11,599 --> 01:51:13,199
eric

2769
01:51:13,199 --> 01:51:14,960
i wanted to echo some of the things that

2770
01:51:14,960 --> 01:51:15,840
uh

2771
01:51:15,840 --> 01:51:18,480
eric and warren had said to thank uh

2772
01:51:18,480 --> 01:51:19,679
all of you chairs for putting this

2773
01:51:19,679 --> 01:51:21,440
together all of the authors and um

2774
01:51:21,440 --> 01:51:23,280
presenters for taking the time and for

2775
01:51:23,280 --> 01:51:26,000
everyone uh who came to this session to

2776
01:51:26,000 --> 01:51:26,800
uh

2777
01:51:26,800 --> 01:51:28,960
to try to see what what path forward if

2778
01:51:28,960 --> 01:51:30,960
any uh might might be made so i

2779
01:51:30,960 --> 01:51:33,199
appreciate everyone's

2780
01:51:33,199 --> 01:51:34,880
everyone's efforts to try to figure out

2781
01:51:34,880 --> 01:51:36,159
in what direction we should all be

2782
01:51:36,159 --> 01:51:37,280
pulling

2783
01:51:37,280 --> 01:51:39,840
thank you all

2784
01:51:40,400 --> 01:51:42,400
yeah thank you

2785
01:51:42,400 --> 01:51:45,920
and uh chairs any any comments on uh

2786
01:51:45,920 --> 01:51:49,840
what we think next next steps are

2787
01:51:57,520 --> 01:52:00,520
fred

2788
01:52:03,599 --> 01:52:05,920
fred

2789
01:52:10,800 --> 01:52:13,760
fred are you in the queue

2790
01:52:14,719 --> 01:52:17,599
finally figured out how to unmute myself

2791
01:52:17,599 --> 01:52:19,599
um

2792
01:52:19,599 --> 01:52:23,360
i asked uh tom to write a draft for chix

2793
01:52:23,360 --> 01:52:25,360
man on

2794
01:52:25,360 --> 01:52:27,040
a bcp for

2795
01:52:27,040 --> 01:52:29,040
ignoring

2796
01:52:29,040 --> 01:52:31,360
hbh document um

2797
01:52:31,360 --> 01:52:32,480
options

2798
01:52:32,480 --> 01:52:34,718
so

2799
01:52:35,520 --> 01:52:37,119
that is at least part of the path

2800
01:52:37,119 --> 01:52:40,119
forward

2801
01:52:44,480 --> 01:52:46,799
okay

2802
01:52:48,719 --> 01:52:51,679
um i'll propose a few things

2803
01:52:51,679 --> 01:52:52,800
with no

2804
01:52:52,800 --> 01:52:55,360
no hats on at all just kind of a wild

2805
01:52:55,360 --> 01:52:57,599
guess

2806
01:52:57,599 --> 01:53:00,480
i'm thinking we probably need

2807
01:53:00,480 --> 01:53:02,639
um

2808
01:53:02,639 --> 01:53:04,560
something like the three documents we

2809
01:53:04,560 --> 01:53:06,239
saw presented at the beginning of this

2810
01:53:06,239 --> 01:53:07,520
session

2811
01:53:07,520 --> 01:53:10,960
a requirements a solution and

2812
01:53:10,960 --> 01:53:13,280
limitations

2813
01:53:13,280 --> 01:53:16,080
um not quite sure if limitations and

2814
01:53:16,080 --> 01:53:18,560
solutions should be um

2815
01:53:18,560 --> 01:53:20,719
merged into one or not but i'll leave

2816
01:53:20,719 --> 01:53:21,920
that for the

2817
01:53:21,920 --> 01:53:24,400
the authors to discuss

2818
01:53:24,400 --> 01:53:26,960
um

2819
01:53:26,960 --> 01:53:29,520
does anybody think we need a document to

2820
01:53:29,520 --> 01:53:31,920
uh look at house cleaning you know

2821
01:53:31,920 --> 01:53:33,760
deprecating you know dead wood and

2822
01:53:33,760 --> 01:53:37,719
possibly the router alert

2823
01:53:45,679 --> 01:53:48,000
fred

2824
01:53:53,040 --> 01:53:55,040
fred are you on the queue

2825
01:53:55,040 --> 01:53:58,000
okay fred fred first then bob

2826
01:53:58,000 --> 01:53:58,960
okay

2827
01:53:58,960 --> 01:54:00,320
um

2828
01:54:00,320 --> 01:54:03,199
i thought i had unmuted myself i guess

2829
01:54:03,199 --> 01:54:04,639
not anyhow

2830
01:54:04,639 --> 01:54:07,760
um but but i would agree with you that a

2831
01:54:07,760 --> 01:54:10,719
an omnibus draft

2832
01:54:10,719 --> 01:54:12,719
deprecating a few of the options or

2833
01:54:12,719 --> 01:54:16,400
router alerts is an obvious one

2834
01:54:18,000 --> 01:54:19,520
would be

2835
01:54:19,520 --> 01:54:22,320
in order

2836
01:54:22,320 --> 01:54:25,040
okay thank you bob

2837
01:54:25,040 --> 01:54:27,599
yeah i was going to say that it's good

2838
01:54:27,599 --> 01:54:30,159
to to write proposals down in drafts

2839
01:54:30,159 --> 01:54:33,520
because then the issues can be discussed

2840
01:54:33,520 --> 01:54:35,599
better than just talking about it in

2841
01:54:35,599 --> 01:54:37,840
email or presentations

2842
01:54:37,840 --> 01:54:40,239
so i think you know if someone did want

2843
01:54:40,239 --> 01:54:42,159
to take a look at

2844
01:54:42,159 --> 01:54:45,040
the existing options and

2845
01:54:45,040 --> 01:54:46,960
maybe do some evaluation and make

2846
01:54:46,960 --> 01:54:49,679
suggestions what to do going forward it

2847
01:54:49,679 --> 01:54:51,920
would be useful to discuss whether that

2848
01:54:51,920 --> 01:54:53,280
document

2849
01:54:53,280 --> 01:54:54,080
ever

2850
01:54:54,080 --> 01:54:56,239
you know gets finished in advance to the

2851
01:54:56,239 --> 01:54:58,400
whole separate discussion

2852
01:54:58,400 --> 01:54:59,599
okay

2853
01:54:59,599 --> 01:55:02,560
and i also just got the mic on so i

2854
01:55:02,560 --> 01:55:05,280
think this has been a useful session

2855
01:55:05,280 --> 01:55:07,040
uh to talk about these issues all

2856
01:55:07,040 --> 01:55:09,760
together so

2857
01:55:10,000 --> 01:55:12,800
okay glory

2858
01:55:14,000 --> 01:55:15,920
yeah i was going to come back on the

2859
01:55:15,920 --> 01:55:18,159
deprecates and meaning for something

2860
01:55:18,159 --> 01:55:20,239
like roots or alert

2861
01:55:20,239 --> 01:55:21,119
and

2862
01:55:21,119 --> 01:55:23,199
just comment that and you know in the

2863
01:55:23,199 --> 01:55:25,119
chat bill fenner and i were both

2864
01:55:25,119 --> 01:55:26,480
commenting well there's layer 2

2865
01:55:26,480 --> 01:55:28,719
equipment that sets this

2866
01:55:28,719 --> 01:55:31,199
and consumes this

2867
01:55:31,199 --> 01:55:33,840
looking at mld packets for instance

2868
01:55:33,840 --> 01:55:35,119
so um

2869
01:55:35,119 --> 01:55:37,440
we might want to to think about what

2870
01:55:37,440 --> 01:55:39,280
deprecate really means for richer alert

2871
01:55:39,280 --> 01:55:41,119
maybe it means don't use it on internet

2872
01:55:41,119 --> 01:55:43,199
paths maybe only use it for specific

2873
01:55:43,199 --> 01:55:45,440
protocols or something so there's

2874
01:55:45,440 --> 01:55:46,880
probably something to write down here i

2875
01:55:46,880 --> 01:55:49,920
think that might be useful

2876
01:55:55,679 --> 01:55:58,000
okay

2877
01:55:59,119 --> 01:56:01,839
any others

2878
01:56:06,639 --> 01:56:08,880
well if that's that i thank you all for

2879
01:56:08,880 --> 01:56:10,880
your contributions

2880
01:56:10,880 --> 01:56:13,679
and um we'll continue to discuss this on

2881
01:56:13,679 --> 01:56:15,840
both mailing lists

2882
01:56:15,840 --> 01:56:17,760
till then i think it's time for us all

2883
01:56:17,760 --> 01:56:20,639
to go get coffee

2884
01:56:23,199 --> 01:56:26,678
take care all

2885
01:56:30,159 --> 01:56:34,598
the meeting is closed your day

2886
01:56:47,920 --> 01:56:50,000
you

