1
00:00:07,359 --> 00:00:09,440
all right welcome everybody

2
00:00:09,440 --> 00:00:11,120
i hope you're in the right room this is

3
00:00:11,120 --> 00:00:13,200
the animal working group

4
00:00:13,200 --> 00:00:17,919
um and we're at itf 112.

5
00:00:18,320 --> 00:00:20,400
so let's get started

6
00:00:20,400 --> 00:00:22,560
itf notewell i hope you're all aware of

7
00:00:22,560 --> 00:00:24,560
this everything you're saying here

8
00:00:24,560 --> 00:00:26,640
public and there was actually another

9
00:00:26,640 --> 00:00:28,400
slide i should have added but i couldn't

10
00:00:28,400 --> 00:00:30,800
find a good template you know please uh

11
00:00:30,800 --> 00:00:33,280
expose good behavior there is the you

12
00:00:33,280 --> 00:00:35,920
know rules of conduct um you know that

13
00:00:35,920 --> 00:00:37,280
everybody should be aware of i think

14
00:00:37,280 --> 00:00:38,879
we'll may want to resend that to the

15
00:00:38,879 --> 00:00:40,800
mailing list as well

16
00:00:40,800 --> 00:00:42,000
um

17
00:00:42,000 --> 00:00:44,480
logistics um shang and i you see the

18
00:00:44,480 --> 00:00:47,600
videos uh where the chairs um

19
00:00:47,600 --> 00:00:49,840
if you're presenting um or when you're

20
00:00:49,840 --> 00:00:51,840
presenting feel free to also use the

21
00:00:51,840 --> 00:00:54,879
video um there is no uh need for it but

22
00:00:54,879 --> 00:00:56,960
um it's always nice to see each other's

23
00:00:56,960 --> 00:00:59,600
faces um

24
00:00:59,600 --> 00:01:02,320
the uh minute taking is really the most

25
00:01:02,320 --> 00:01:05,438
important thing here on the slide um

26
00:01:05,438 --> 00:01:07,600
i've seen working group chairs that let

27
00:01:07,600 --> 00:01:10,159
their working groups uh sit around for

28
00:01:10,159 --> 00:01:11,920
10 minutes not doing anything until

29
00:01:11,920 --> 00:01:14,000
somebody who was willing to take notes

30
00:01:14,000 --> 00:01:16,400
was standing up so do we have

31
00:01:16,400 --> 00:01:19,360
volunteers here

32
00:01:21,119 --> 00:01:23,360
here

33
00:01:25,119 --> 00:01:27,840
did i hear something

34
00:01:29,600 --> 00:01:31,439
i volunteer

35
00:01:31,439 --> 00:01:33,439
oh excellent thank you very much all

36
00:01:33,439 --> 00:01:34,400
right

37
00:01:34,400 --> 00:01:38,079
all right moves us on the slide thanks

38
00:01:38,079 --> 00:01:41,040
right um early ipr disclosure process

39
00:01:41,040 --> 00:01:44,240
just as a reminder um we are asking for

40
00:01:44,240 --> 00:01:48,720
ipr um disclosure also um when adopting

41
00:01:48,720 --> 00:01:51,280
um a document to the working group not

42
00:01:51,280 --> 00:01:53,439
only when it is in last call to avoid

43
00:01:53,439 --> 00:01:55,119
you know problems other working groups

44
00:01:55,119 --> 00:01:55,920
had

45
00:01:55,920 --> 00:01:57,920
in the past you know with late

46
00:01:57,920 --> 00:02:02,079
disclosures um from from authors

47
00:02:03,520 --> 00:02:06,399
all right marketing um it's this time of

48
00:02:06,399 --> 00:02:08,160
year again we've got the long comm

49
00:02:08,160 --> 00:02:09,840
period which

50
00:02:09,840 --> 00:02:12,560
has finishing feedback by november 23rd

51
00:02:12,560 --> 00:02:13,520
so

52
00:02:13,520 --> 00:02:15,599
if you have feedback

53
00:02:15,599 --> 00:02:18,239
about any of the

54
00:02:18,239 --> 00:02:20,640
people running for the various area

55
00:02:20,640 --> 00:02:22,720
director iab

56
00:02:22,720 --> 00:02:24,400
and and other

57
00:02:24,400 --> 00:02:26,319
leadership positions please provide

58
00:02:26,319 --> 00:02:28,160
feedback to nom-com

59
00:02:28,160 --> 00:02:29,280
in email

60
00:02:29,280 --> 00:02:31,519
and of course any type of general

61
00:02:31,519 --> 00:02:33,120
feedback can also be given through the

62
00:02:33,120 --> 00:02:34,239
same tool

63
00:02:34,239 --> 00:02:37,760
um that uh uh you know uh is is on the

64
00:02:37,760 --> 00:02:40,640
nomcom webpage the url you see here and

65
00:02:40,640 --> 00:02:41,920
um

66
00:02:41,920 --> 00:02:43,840
you know about anything you don't

67
00:02:43,840 --> 00:02:45,920
like in the ietf in the general section

68
00:02:45,920 --> 00:02:48,319
or of course kudos are um you know taken

69
00:02:48,319 --> 00:02:50,080
as well and obviously

70
00:02:50,080 --> 00:02:52,480
this was brought to you because i happen

71
00:02:52,480 --> 00:02:54,319
to be randomly choosing to be on amcom

72
00:02:54,319 --> 00:02:55,519
this time so

73
00:02:55,519 --> 00:02:56,879
um

74
00:02:56,879 --> 00:02:59,200
right more marketing so this is

75
00:02:59,200 --> 00:03:01,519
marketing for anima that we did

76
00:03:01,519 --> 00:03:04,959
um so a bunch of the authors of the

77
00:03:04,959 --> 00:03:09,040
phase one anima uh rfcs got together um

78
00:03:09,040 --> 00:03:11,840
and then after you know

79
00:03:11,840 --> 00:03:14,560
recycling the stuff for for for several

80
00:03:14,560 --> 00:03:15,840
times we got

81
00:03:15,840 --> 00:03:18,640
it into the internet protocol journal of

82
00:03:18,640 --> 00:03:22,400
october 2021 uh 17 pages of what we hope

83
00:03:22,400 --> 00:03:25,200
and what i do think is a really great um

84
00:03:25,200 --> 00:03:27,680
you know overview of enema and what can

85
00:03:27,680 --> 00:03:29,680
be done it really from the perspective

86
00:03:29,680 --> 00:03:31,840
of selling it to

87
00:03:31,840 --> 00:03:34,959
operators users and developers including

88
00:03:34,959 --> 00:03:38,080
examples of asa and so things where we

89
00:03:38,080 --> 00:03:40,799
would like to have future

90
00:03:40,799 --> 00:03:43,920
work being brought into enema so please

91
00:03:43,920 --> 00:03:46,560
you know take a look at it and

92
00:03:46,560 --> 00:03:48,319
when you always had it people who didn't

93
00:03:48,319 --> 00:03:50,319
know what anima was i think

94
00:03:50,319 --> 00:03:52,159
this is probably the best that you can

95
00:03:52,159 --> 00:03:55,679
point them to to explain it to them

96
00:03:56,720 --> 00:04:00,080
all right and yeah we've got um rfcs now

97
00:04:00,080 --> 00:04:02,879
and that also means that we likely

98
00:04:02,879 --> 00:04:04,959
should have and will get and do have

99
00:04:04,959 --> 00:04:07,920
erratas and i think that's a part of the

100
00:04:07,920 --> 00:04:10,000
itf process that

101
00:04:10,000 --> 00:04:11,920
people are often missing so especially

102
00:04:11,920 --> 00:04:13,439
when you're an implementer or you're

103
00:04:13,439 --> 00:04:16,238
reading rsc trying to catch up

104
00:04:16,238 --> 00:04:17,680
please make sure that you're checking

105
00:04:17,680 --> 00:04:19,918
the errata so that you're not

106
00:04:19,918 --> 00:04:23,040
overlooking something which we already

107
00:04:23,040 --> 00:04:24,240
knew

108
00:04:24,240 --> 00:04:26,080
should have been fixed in the rfc but it

109
00:04:26,080 --> 00:04:28,080
was too late and of course it when

110
00:04:28,080 --> 00:04:30,400
you're discovering uh erratas uh please

111
00:04:30,400 --> 00:04:33,759
simply go to that errata page and file

112
00:04:33,759 --> 00:04:35,759
in errata and then basically go through

113
00:04:35,759 --> 00:04:39,600
the process of review um and um so yeah

114
00:04:39,600 --> 00:04:42,800
we've got uh three of our rc's with

115
00:04:42,800 --> 00:04:45,040
erratas and so that's i think also a

116
00:04:45,040 --> 00:04:47,680
good show of um you know the errata's

117
00:04:47,680 --> 00:04:49,919
getting read and or being implemented

118
00:04:49,919 --> 00:04:52,240
against

119
00:04:52,800 --> 00:04:56,639
right so which brings us to actual work

120
00:04:56,639 --> 00:04:59,120
so uh the working group documents the

121
00:04:59,120 --> 00:05:03,120
asa guidelines um that document was um

122
00:05:03,120 --> 00:05:06,400
up for quite a while um and so we had it

123
00:05:06,400 --> 00:05:08,160
passed through working group ask all

124
00:05:08,160 --> 00:05:11,120
before itf 112 without further negative

125
00:05:11,120 --> 00:05:12,560
comments um

126
00:05:12,560 --> 00:05:15,680
and the shepherd

127
00:05:15,680 --> 00:05:17,680
pushed it

128
00:05:17,680 --> 00:05:19,039
through and then

129
00:05:19,039 --> 00:05:22,560
we got all the ipr disclosures and so i

130
00:05:22,560 --> 00:05:25,120
requested the publication to isg today

131
00:05:25,120 --> 00:05:26,160
so

132
00:05:26,160 --> 00:05:29,199
um one thing to go into um

133
00:05:29,199 --> 00:05:31,039
robert's queue first and then of course

134
00:05:31,039 --> 00:05:33,680
to itf and isg

135
00:05:33,680 --> 00:05:36,960
um for the brewski cloud we don't have a

136
00:05:36,960 --> 00:05:38,960
slot today the

137
00:05:38,960 --> 00:05:41,199
authors incorporated the ietf 111

138
00:05:41,199 --> 00:05:42,560
feedback and added security

139
00:05:42,560 --> 00:05:44,880
considerations so

140
00:05:44,880 --> 00:05:46,400
they think it's ready for working group

141
00:05:46,400 --> 00:05:50,880
last call so we would probably um

142
00:05:50,880 --> 00:05:52,720
we're going to do a working group last

143
00:05:52,720 --> 00:05:56,560
call after this ietf

144
00:06:00,560 --> 00:06:01,440
so

145
00:06:01,440 --> 00:06:04,000
then the nmr constrained

146
00:06:04,000 --> 00:06:06,960
joint proxy um

147
00:06:06,960 --> 00:06:10,240
so yeah we need a shepherd write up

148
00:06:10,240 --> 00:06:12,240
working group last call finished that

149
00:06:12,240 --> 00:06:14,800
was including an early iot directorate

150
00:06:14,800 --> 00:06:17,280
review so we already got some very good

151
00:06:17,280 --> 00:06:19,680
feedback from that on the latest version

152
00:06:19,680 --> 00:06:23,199
05 should resolve all the issues and i

153
00:06:23,199 --> 00:06:25,120
think we'll learn more in the slot about

154
00:06:25,120 --> 00:06:26,720
it

155
00:06:26,720 --> 00:06:28,880
um

156
00:06:30,479 --> 00:06:32,960
will be talked about by the authors

157
00:06:32,960 --> 00:06:36,240
there is a uh draft being split out uh

158
00:06:36,240 --> 00:06:40,319
from that um and so this time we

159
00:06:40,319 --> 00:06:42,720
not sure if uh if how many here are

160
00:06:42,720 --> 00:06:44,720
remembering uh similar discussions we

161
00:06:44,720 --> 00:06:46,560
had when we started enema at which point

162
00:06:46,560 --> 00:06:49,120
in time what kind of struck by not

163
00:06:49,120 --> 00:06:51,360
restructuring documents and let's say

164
00:06:51,360 --> 00:06:53,840
changing 140 page long documents into

165
00:06:53,840 --> 00:06:56,319
more smaller ones so this time we had

166
00:06:56,319 --> 00:06:58,160
good experience reference from other

167
00:06:58,160 --> 00:07:00,319
working groups that that process is

168
00:07:00,319 --> 00:07:02,400
painless and can be done without going

169
00:07:02,400 --> 00:07:04,080
further back to the working group so i

170
00:07:04,080 --> 00:07:05,680
was talking specifically with russ

171
00:07:05,680 --> 00:07:08,400
housley uh who's the working group chair

172
00:07:08,400 --> 00:07:10,080
of lamps and they've done exactly that

173
00:07:10,080 --> 00:07:12,800
structuring into smaller more manageable

174
00:07:12,800 --> 00:07:14,319
documents

175
00:07:14,319 --> 00:07:16,479
as well and as long as those documents

176
00:07:16,479 --> 00:07:19,680
stay within the scope that was agreed by

177
00:07:19,680 --> 00:07:20,960
the working group for the larger

178
00:07:20,960 --> 00:07:23,280
document then this is simply something

179
00:07:23,280 --> 00:07:25,360
that the working group chairs

180
00:07:25,360 --> 00:07:26,400
can

181
00:07:26,400 --> 00:07:29,199
agree on with the authors

182
00:07:29,199 --> 00:07:31,919
um so uh draft animal constraint voucher

183
00:07:31,919 --> 00:07:34,160
we've got a slot uh jws

184
00:07:34,160 --> 00:07:36,080
voucher um

185
00:07:36,080 --> 00:07:39,599
we've got no updates uh on grass

186
00:07:39,599 --> 00:07:41,680
distribution and animal voucher

187
00:07:41,680 --> 00:07:42,880
delegation

188
00:07:42,880 --> 00:07:45,199
um anybody off from the authors wanting

189
00:07:45,199 --> 00:07:46,160
to

190
00:07:46,160 --> 00:07:49,039
stand up and

191
00:07:49,360 --> 00:07:50,800
give any uh

192
00:07:50,800 --> 00:07:54,240
information about these two drafts

193
00:07:57,120 --> 00:07:59,840
actually terrorists can hear me

194
00:07:59,840 --> 00:08:02,080
yep

195
00:08:03,120 --> 00:08:04,160
yeah

196
00:08:04,160 --> 00:08:07,759
it seems there are very long uh delay uh

197
00:08:07,759 --> 00:08:09,280
well two seconds

198
00:08:09,280 --> 00:08:11,759
uh however

199
00:08:11,759 --> 00:08:15,199
an author of the grass distribution

200
00:08:15,199 --> 00:08:18,319
actually we believe we have

201
00:08:18,319 --> 00:08:19,599
asked

202
00:08:19,599 --> 00:08:21,840
the working group lascaux from last

203
00:08:21,840 --> 00:08:23,520
meeting

204
00:08:23,520 --> 00:08:24,400
so

205
00:08:24,400 --> 00:08:26,479
that's why there's no

206
00:08:26,479 --> 00:08:28,080
update

207
00:08:28,080 --> 00:08:30,560
so i guess you

208
00:08:30,560 --> 00:08:31,840
missed that

209
00:08:31,840 --> 00:08:34,640
from july so

210
00:08:34,640 --> 00:08:36,958
i will blame on you

211
00:08:36,958 --> 00:08:38,880
for this

212
00:08:38,880 --> 00:08:41,599
okay so i'm overloaded right now so

213
00:08:41,599 --> 00:08:43,599
let's let's take that to email um so

214
00:08:43,599 --> 00:08:45,440
just just make sure that we're not uh

215
00:08:45,440 --> 00:08:49,040
losing it i wanted to to take it to the

216
00:08:49,040 --> 00:08:51,440
notes here but i see that michael also

217
00:08:51,440 --> 00:08:53,440
didn't catch i think what what you were

218
00:08:53,440 --> 00:08:55,760
saying so maybe if you can simply add it

219
00:08:55,760 --> 00:08:58,160
to the notes so that we um

220
00:08:58,160 --> 00:08:59,920
it was ready for working group last call

221
00:08:59,920 --> 00:09:03,599
is that what i heard you say shane

222
00:09:04,080 --> 00:09:05,040
yes

223
00:09:05,040 --> 00:09:06,880
exactly

224
00:09:06,880 --> 00:09:09,839
from july

225
00:09:17,920 --> 00:09:19,760
right so i think we we got something

226
00:09:19,760 --> 00:09:21,839
like 2

227
00:09:21,839 --> 00:09:23,920
documents well

228
00:09:23,920 --> 00:09:26,080
we need to run working group last call

229
00:09:26,080 --> 00:09:28,880
after the idf

230
00:09:29,680 --> 00:09:31,120
okay

231
00:09:31,120 --> 00:09:33,440
so

232
00:09:34,399 --> 00:09:37,200
now for all the documents

233
00:09:37,200 --> 00:09:39,839
that we're working on um

234
00:09:39,839 --> 00:09:43,120
we really need more document reviews um

235
00:09:43,120 --> 00:09:44,320
and so

236
00:09:44,320 --> 00:09:45,200
um

237
00:09:45,200 --> 00:09:46,880
would really be good first of all to

238
00:09:46,880 --> 00:09:48,320
make sure that

239
00:09:48,320 --> 00:09:49,279
the

240
00:09:49,279 --> 00:09:51,120
reviews are tracked um in the

241
00:09:51,120 --> 00:09:52,959
acknowledgement sections with all the

242
00:09:52,959 --> 00:09:54,560
names that had been done

243
00:09:54,560 --> 00:09:56,320
um the more detailed that is the more it

244
00:09:56,320 --> 00:09:58,640
helps at the working group last call and

245
00:09:58,640 --> 00:10:00,720
iesg review later on

246
00:10:00,720 --> 00:10:01,600
um

247
00:10:01,600 --> 00:10:04,079
and um you know don't don't wait for

248
00:10:04,079 --> 00:10:06,079
reviews in the last call but

249
00:10:06,079 --> 00:10:08,880
um re reach out to other authors of

250
00:10:08,880 --> 00:10:10,320
other documents

251
00:10:10,320 --> 00:10:13,360
in the vicinity uh in in anima to ask

252
00:10:13,360 --> 00:10:15,920
them for review um

253
00:10:15,920 --> 00:10:18,399
uh if if you have trouble um getting

254
00:10:18,399 --> 00:10:20,800
getting more reviews uh by yourself to

255
00:10:20,800 --> 00:10:22,399
reaching out to other working group

256
00:10:22,399 --> 00:10:24,000
participants please reach out to the

257
00:10:24,000 --> 00:10:26,560
chairs and and we'll discuss it with you

258
00:10:26,560 --> 00:10:28,800
um

259
00:10:29,440 --> 00:10:31,200
there is

260
00:10:31,200 --> 00:10:34,160
also a formal um part of the process for

261
00:10:34,160 --> 00:10:36,240
early reviews from other

262
00:10:36,240 --> 00:10:37,120
um

263
00:10:37,120 --> 00:10:38,800
things like we've done with iot

264
00:10:38,800 --> 00:10:40,640
directorate review which you know could

265
00:10:40,640 --> 00:10:42,720
have been done before working group last

266
00:10:42,720 --> 00:10:45,360
call as well there is review from

267
00:10:45,360 --> 00:10:47,519
a bunch of different formal languages

268
00:10:47,519 --> 00:10:50,000
like especially young doctors

269
00:10:50,000 --> 00:10:52,480
and also areas like early security

270
00:10:52,480 --> 00:10:53,839
review so

271
00:10:53,839 --> 00:10:56,000
all of these reviews should as much as

272
00:10:56,000 --> 00:10:59,200
possible be done before we pass the

273
00:10:59,200 --> 00:11:00,560
document on

274
00:11:00,560 --> 00:11:03,600
to um to the isg review because the

275
00:11:03,600 --> 00:11:06,160
better it gets out of the

276
00:11:06,160 --> 00:11:07,600
working group the better the working

277
00:11:07,600 --> 00:11:09,680
group also you know is perceived to have

278
00:11:09,680 --> 00:11:10,800
operated

279
00:11:10,800 --> 00:11:14,000
so please you know start engaging as an

280
00:11:14,000 --> 00:11:16,560
author yourself to collect feedbacks and

281
00:11:16,560 --> 00:11:17,760
reviews

282
00:11:17,760 --> 00:11:19,680
from other people and for the staff or

283
00:11:19,680 --> 00:11:21,760
we as the working group chairs can or

284
00:11:21,760 --> 00:11:23,519
must help please

285
00:11:23,519 --> 00:11:26,160
contact us

286
00:11:26,399 --> 00:11:28,399
all right which basically gets exactly

287
00:11:28,399 --> 00:11:30,000
to the point if you're on the receiving

288
00:11:30,000 --> 00:11:31,839
end of this request and and you should

289
00:11:31,839 --> 00:11:33,279
be on the receiving end if you're an

290
00:11:33,279 --> 00:11:34,959
author because you want others to review

291
00:11:34,959 --> 00:11:37,279
your documents so you need to reviews

292
00:11:37,279 --> 00:11:38,880
other people's document and the best way

293
00:11:38,880 --> 00:11:40,880
to do that in a

294
00:11:40,880 --> 00:11:43,200
focused fashion is shepherding so um

295
00:11:43,200 --> 00:11:46,399
become shepherds for um

296
00:11:46,399 --> 00:11:48,800
some other author's document um it's

297
00:11:48,800 --> 00:11:50,480
it's really about reciprocity and it's

298
00:11:50,480 --> 00:11:52,320
been one of the old principles of you

299
00:11:52,320 --> 00:11:53,440
know the

300
00:11:53,440 --> 00:11:55,200
way the iatf works it's one of the

301
00:11:55,200 --> 00:11:56,959
pieces that hasn't really been written

302
00:11:56,959 --> 00:11:59,440
down well so it's not well formalized

303
00:11:59,440 --> 00:12:02,079
but the ietf doesn't really work as uh

304
00:12:02,079 --> 00:12:03,760
at all without this

305
00:12:03,760 --> 00:12:06,720
um so um let's let's see if we can you

306
00:12:06,720 --> 00:12:09,600
know uh get shepherds up so you you see

307
00:12:09,600 --> 00:12:11,440
the you know the documents we're talking

308
00:12:11,440 --> 00:12:13,519
about and uh i think

309
00:12:13,519 --> 00:12:15,839
each of the author can mention if if if

310
00:12:15,839 --> 00:12:18,000
they have a shepherd or not and so if

311
00:12:18,000 --> 00:12:20,160
you know you want to step forward become

312
00:12:20,160 --> 00:12:21,760
shepherd for one of the documents uh

313
00:12:21,760 --> 00:12:23,519
please do so on the mic line otherwise

314
00:12:23,519 --> 00:12:25,839
we're going to take it of course also

315
00:12:25,839 --> 00:12:28,160
after the meeting uh to uh to the

316
00:12:28,160 --> 00:12:30,959
mailing list um here here's the list of

317
00:12:30,959 --> 00:12:33,200
the document that that

318
00:12:33,200 --> 00:12:35,760
we currently have in the working group

319
00:12:35,760 --> 00:12:38,160
that are needing shepherds so um you

320
00:12:38,160 --> 00:12:41,200
know if you're author of one of them

321
00:12:41,200 --> 00:12:43,760
and not one of the others uh please you

322
00:12:43,760 --> 00:12:45,680
know really strongly consider now to

323
00:12:45,680 --> 00:12:47,920
become a shepherd for it otherwise i'm

324
00:12:47,920 --> 00:12:49,839
be sure i'm going to ask you in email

325
00:12:49,839 --> 00:12:52,839
afterwards

326
00:12:53,440 --> 00:12:56,079
okay um then of course also uh do we

327
00:12:56,079 --> 00:12:57,519
never have enough time for technical

328
00:12:57,519 --> 00:12:59,040
discussions and it's all you know a

329
00:12:59,040 --> 00:13:02,000
death by powerpoint um the itf has a lot

330
00:13:02,000 --> 00:13:04,079
of processes and i think we're learning

331
00:13:04,079 --> 00:13:06,399
that many of them do help us to do the

332
00:13:06,399 --> 00:13:08,639
job better um

333
00:13:08,639 --> 00:13:11,200
and doing that you know for two hours

334
00:13:11,200 --> 00:13:13,279
three times a year isn't really

335
00:13:13,279 --> 00:13:15,839
that bad but of course it's not enough

336
00:13:15,839 --> 00:13:18,560
to do all the technical work so please

337
00:13:18,560 --> 00:13:20,480
when you see that the work on documents

338
00:13:20,480 --> 00:13:22,959
can be done better um you know start to

339
00:13:22,959 --> 00:13:25,360
become active as well uh with the help

340
00:13:25,360 --> 00:13:27,040
of the working group chairs of course as

341
00:13:27,040 --> 00:13:29,680
always you know um try to do something

342
00:13:29,680 --> 00:13:31,680
like a design team just a two weekly or

343
00:13:31,680 --> 00:13:34,240
monthly uh meeting on you know you can

344
00:13:34,240 --> 00:13:36,320
use the webex from from anima the

345
00:13:36,320 --> 00:13:38,560
working group chairs are happy to help

346
00:13:38,560 --> 00:13:41,519
or also a lot of similar rtc web

347
00:13:41,519 --> 00:13:43,040
conferencing tools so that you have

348
00:13:43,040 --> 00:13:44,399
audio video channels to much more

349
00:13:44,399 --> 00:13:45,519
quickly

350
00:13:45,519 --> 00:13:49,839
work with collaborators on the documents

351
00:13:51,440 --> 00:13:54,240
right and the best example of course is

352
00:13:54,240 --> 00:13:56,399
the brewski design team which has been

353
00:13:56,399 --> 00:13:59,680
focusing on a good subset of the active

354
00:13:59,680 --> 00:14:01,920
working group documents for brewski that

355
00:14:01,920 --> 00:14:05,519
we have here um the time had changed

356
00:14:05,519 --> 00:14:08,399
and it's been going on very actively so

357
00:14:08,399 --> 00:14:09,839
if you're interested in the brewski

358
00:14:09,839 --> 00:14:12,480
aspects or so this this is basically the

359
00:14:12,480 --> 00:14:14,639
starting point uh where you want to go

360
00:14:14,639 --> 00:14:17,040
to

361
00:14:17,040 --> 00:14:19,519
of course we also have a github um

362
00:14:19,519 --> 00:14:22,000
that's not an official github but if you

363
00:14:22,000 --> 00:14:23,920
uh

364
00:14:23,920 --> 00:14:25,199
it's not limited to working group

365
00:14:25,199 --> 00:14:27,040
documents so any document you're writing

366
00:14:27,040 --> 00:14:29,600
for nmr feel free to you know put that

367
00:14:29,600 --> 00:14:31,279
into that repository if you're not on

368
00:14:31,279 --> 00:14:33,519
the repository we'll be happy to invite

369
00:14:33,519 --> 00:14:35,680
you to it

370
00:14:35,680 --> 00:14:37,920
and that's it i haven't put

371
00:14:37,920 --> 00:14:39,440
the agenda here because kind of

372
00:14:39,440 --> 00:14:41,920
duplicating the stuff the agenda between

373
00:14:41,920 --> 00:14:43,519
all the different places so please go to

374
00:14:43,519 --> 00:14:46,560
the notes pages the agenda is there um

375
00:14:46,560 --> 00:14:47,600
so

376
00:14:47,600 --> 00:14:50,320
the first speaker i think should be

377
00:14:50,320 --> 00:14:52,560
michael for the post working group last

378
00:14:52,560 --> 00:14:54,639
call constrain join proxy for

379
00:14:54,639 --> 00:14:56,959
bootstrapping protocols

380
00:14:56,959 --> 00:15:00,239
michael it's all yours

381
00:15:01,519 --> 00:15:05,040
asked to share slides

382
00:15:05,920 --> 00:15:08,639
that's the one

383
00:15:09,760 --> 00:15:11,519
does that work

384
00:15:11,519 --> 00:15:15,360
i think so yeah okay so and um

385
00:15:15,360 --> 00:15:17,519
we had a working group last call in

386
00:15:17,519 --> 00:15:20,399
october um we received a number of

387
00:15:20,399 --> 00:15:22,240
comments from that

388
00:15:22,240 --> 00:15:23,360
um

389
00:15:23,360 --> 00:15:26,079
and just to remind you this is about

390
00:15:26,079 --> 00:15:28,639
having a stateless

391
00:15:28,639 --> 00:15:29,759
proxy

392
00:15:29,759 --> 00:15:31,759
for dtls

393
00:15:31,759 --> 00:15:34,399
that means that you don't need to use

394
00:15:34,399 --> 00:15:36,079
memory for each connection that you

395
00:15:36,079 --> 00:15:38,880
receive and it replaces a stateful proxy

396
00:15:38,880 --> 00:15:41,920
which is in brewski uh there

397
00:15:41,920 --> 00:15:43,680
um

398
00:15:43,680 --> 00:15:46,560
so uh working group call ended

399
00:15:46,560 --> 00:15:48,320
a working group last call ended october

400
00:15:48,320 --> 00:15:51,120
14th we got reviews by esco russell

401
00:15:51,120 --> 00:15:54,000
uh and brian carpenter um and a new

402
00:15:54,000 --> 00:15:56,560
revision was posted a couple

403
00:15:56,560 --> 00:15:58,639
weeks so ago just i think on the

404
00:15:58,639 --> 00:15:59,759
deadline

405
00:15:59,759 --> 00:16:00,880
um

406
00:16:00,880 --> 00:16:03,680
and mostly we did some uh restructuring

407
00:16:03,680 --> 00:16:06,000
of the some of the introduction to make

408
00:16:06,000 --> 00:16:09,440
some of the pieces clear and

409
00:16:09,440 --> 00:16:11,040
a little bit of nits and that's about it

410
00:16:11,040 --> 00:16:13,680
there wasn't really any significant

411
00:16:13,680 --> 00:16:15,120
um

412
00:16:15,120 --> 00:16:17,680
technical concern although esco did raid

413
00:16:17,680 --> 00:16:20,000
some issues that i think peter and i

414
00:16:20,000 --> 00:16:21,440
said we're not we're not going to solve

415
00:16:21,440 --> 00:16:23,440
that those issues and that was marked as

416
00:16:23,440 --> 00:16:24,720
such

417
00:16:24,720 --> 00:16:27,040
um and that's really

418
00:16:27,040 --> 00:16:27,920
uh

419
00:16:27,920 --> 00:16:30,880
really that's really it um

420
00:16:30,880 --> 00:16:31,600
so

421
00:16:31,600 --> 00:16:34,880
um peter has implementations of of all

422
00:16:34,880 --> 00:16:36,399
of these pieces

423
00:16:36,399 --> 00:16:38,480
and i think so does esco have some

424
00:16:38,480 --> 00:16:40,720
pieces as well implemented

425
00:16:40,720 --> 00:16:41,920
that's about it

426
00:16:41,920 --> 00:16:44,560
any questions

427
00:16:44,880 --> 00:16:47,519
yeah michael

428
00:16:48,160 --> 00:16:50,240
do you have already addressed the

429
00:16:50,240 --> 00:16:53,680
comments from the iot review

430
00:16:53,680 --> 00:16:55,199
yes we did

431
00:16:55,199 --> 00:16:57,360
yes we did address the comments from

432
00:16:57,360 --> 00:17:02,079
from uh from the iot director review

433
00:17:02,320 --> 00:17:04,160
okay so that was russ housley gave us

434
00:17:04,160 --> 00:17:07,280
the iot directory review

435
00:17:07,439 --> 00:17:08,400
good

436
00:17:08,400 --> 00:17:11,520
then that will be the action on me

437
00:17:11,520 --> 00:17:12,959
next

438
00:17:12,959 --> 00:17:14,480
allow me

439
00:17:14,480 --> 00:17:15,919
two weeks to

440
00:17:15,919 --> 00:17:17,520
do the

441
00:17:17,520 --> 00:17:18,839
rough check and

442
00:17:18,839 --> 00:17:20,400
[Music]

443
00:17:20,400 --> 00:17:23,119
shift writing i will get it

444
00:17:23,119 --> 00:17:26,799
back to your others ask for the

445
00:17:26,799 --> 00:17:30,400
ipr disclosure question

446
00:17:30,400 --> 00:17:33,679
as usual then uh give me two or three

447
00:17:33,679 --> 00:17:35,600
weeks for that

448
00:17:35,600 --> 00:17:38,480
okay great

449
00:17:40,480 --> 00:17:42,799
i'll go on tour list

450
00:17:42,799 --> 00:17:43,760
yeah

451
00:17:43,760 --> 00:17:46,240
please i think the next item is which

452
00:17:46,240 --> 00:17:47,679
one is it

453
00:17:47,679 --> 00:17:49,760
constrained voucher number three is the

454
00:17:49,760 --> 00:17:53,039
constraint voucher brewski

455
00:17:53,440 --> 00:17:56,320
is here

456
00:17:57,840 --> 00:18:00,480
that is not the right document

457
00:18:00,480 --> 00:18:02,720
draft oops

458
00:18:02,720 --> 00:18:06,000
i did i upload the wrong one

459
00:18:06,000 --> 00:18:08,320
i think i bet i did oh you know this is

460
00:18:08,320 --> 00:18:09,760
a

461
00:18:09,760 --> 00:18:12,160
bucket passing protocol with multiple

462
00:18:12,160 --> 00:18:14,320
stages so

463
00:18:14,320 --> 00:18:16,480
i will stop sharing slides and i will

464
00:18:16,480 --> 00:18:18,720
ask to share my screen and i'll pull up

465
00:18:18,720 --> 00:18:19,840
the right

466
00:18:19,840 --> 00:18:21,919
pdf file

467
00:18:21,919 --> 00:18:24,240
really quickly here and yes i want to

468
00:18:24,240 --> 00:18:27,120
change share my screen

469
00:18:27,120 --> 00:18:31,039
and just give me one second here

470
00:18:31,039 --> 00:18:34,000
anima constraint

471
00:18:34,000 --> 00:18:36,720
voucher

472
00:18:37,280 --> 00:18:39,039
only guess that i

473
00:18:39,039 --> 00:18:40,559
pointed at the wrong

474
00:18:40,559 --> 00:18:42,480
document when i uploaded it

475
00:18:42,480 --> 00:18:45,520
sorry about that folks

476
00:18:47,679 --> 00:18:49,919
i have the screen but

477
00:18:49,919 --> 00:18:51,919
yeah i just i'm just gonna get it on my

478
00:18:51,919 --> 00:18:54,160
screen before i share it there we go

479
00:18:54,160 --> 00:18:56,880
uh window boom click

480
00:18:56,880 --> 00:18:58,000
okay

481
00:18:58,000 --> 00:19:01,520
better here we are yes there we are

482
00:19:01,520 --> 00:19:02,480
um

483
00:19:02,480 --> 00:19:05,360
so um

484
00:19:05,360 --> 00:19:08,240
just to remind you um there is

485
00:19:08,240 --> 00:19:10,640
also a bunch of uh there's now a

486
00:19:10,640 --> 00:19:12,160
brewski.org and there's a bunch of

487
00:19:12,160 --> 00:19:13,520
implementation stuff and i mentioned

488
00:19:13,520 --> 00:19:14,720
this last time but i'm just going to

489
00:19:14,720 --> 00:19:16,480
mention this again anyway just for the

490
00:19:16,480 --> 00:19:17,679
hell of it

491
00:19:17,679 --> 00:19:19,200
um so

492
00:19:19,200 --> 00:19:21,039
essentially these are the changes that

493
00:19:21,039 --> 00:19:22,400
we've done in the constrained voucher

494
00:19:22,400 --> 00:19:23,880
documents since

495
00:19:23,880 --> 00:19:26,960
itf111 we had a hackathon before that

496
00:19:26,960 --> 00:19:28,640
one and we we tried to have a bit of a

497
00:19:28,640 --> 00:19:30,559
hackathon before this one but we really

498
00:19:30,559 --> 00:19:32,000
didn't we didn't have a lot of

499
00:19:32,000 --> 00:19:34,240
participation unfortunately

500
00:19:34,240 --> 00:19:35,120
um

501
00:19:35,120 --> 00:19:37,200
so essentially what we we've done is the

502
00:19:37,200 --> 00:19:39,360
major things is that one of the things

503
00:19:39,360 --> 00:19:40,880
is this updates

504
00:19:40,880 --> 00:19:43,200
so uh as you if you're familiar with the

505
00:19:43,200 --> 00:19:45,440
whole debate as to what is the

506
00:19:45,440 --> 00:19:46,320
um

507
00:19:46,320 --> 00:19:48,720
what does the updates word even mean

508
00:19:48,720 --> 00:19:55,280
um and so we uh both amend rfc 8 uh 995

509
00:19:55,280 --> 00:19:57,600
um and we extend eight nine nine five

510
00:19:57,600 --> 00:20:00,160
and we uh extend eight three six six so

511
00:20:00,160 --> 00:20:02,880
that is explained in that section

512
00:20:02,880 --> 00:20:04,080
um

513
00:20:04,080 --> 00:20:05,760
and then we have a bunch of little

514
00:20:05,760 --> 00:20:08,000
changes to the protocol a lot of

515
00:20:08,000 --> 00:20:11,120
additional pieces uh we discovered some

516
00:20:11,120 --> 00:20:12,799
problems with the

517
00:20:12,799 --> 00:20:14,960
sid values some duplications in the

518
00:20:14,960 --> 00:20:17,120
previous draft that's an oops

519
00:20:17,120 --> 00:20:19,440
um and relates to the renaming that we

520
00:20:19,440 --> 00:20:23,520
did and we fixed that uh recently um

521
00:20:23,520 --> 00:20:25,679
and it may not be in the last version

522
00:20:25,679 --> 00:20:27,760
but it's it is fixed now

523
00:20:27,760 --> 00:20:29,440
one of the things that we were worried

524
00:20:29,440 --> 00:20:30,480
about

525
00:20:30,480 --> 00:20:33,200
um is what to do if the yang seaboard

526
00:20:33,200 --> 00:20:35,520
documents that we depend upon did not

527
00:20:35,520 --> 00:20:37,440
advance because they've been stuck in an

528
00:20:37,440 --> 00:20:39,280
isg review since

529
00:20:39,280 --> 00:20:41,600
junish

530
00:20:41,600 --> 00:20:45,039
so that's part of this so

531
00:20:45,039 --> 00:20:47,120
i went and looked at that document and

532
00:20:47,120 --> 00:20:50,720
the issues and i tried to uh re

533
00:20:50,720 --> 00:20:53,200
boot the effort to get it through since

534
00:20:53,200 --> 00:20:54,880
if that document doesn't go through then

535
00:20:54,880 --> 00:20:56,960
our document would not go through

536
00:20:56,960 --> 00:20:59,760
um and at the same time what we also did

537
00:20:59,760 --> 00:21:01,760
is we said to ourselves well what would

538
00:21:01,760 --> 00:21:03,760
we need to do to make the references to

539
00:21:03,760 --> 00:21:06,640
it not normative but rather informative

540
00:21:06,640 --> 00:21:08,880
and so we have a pull request doing that

541
00:21:08,880 --> 00:21:09,760
that we

542
00:21:09,760 --> 00:21:11,919
have are not have not yet at this point

543
00:21:11,919 --> 00:21:14,559
merged so we're basically um hedging our

544
00:21:14,559 --> 00:21:16,320
bets here as to whether or not this

545
00:21:16,320 --> 00:21:17,919
document will advance

546
00:21:17,919 --> 00:21:20,640
um i i went over to the the core working

547
00:21:20,640 --> 00:21:22,960
group uh read the comments turned those

548
00:21:22,960 --> 00:21:24,960
comments into issues and we seemed to

549
00:21:24,960 --> 00:21:26,880
have a somewhat of a design team to fix

550
00:21:26,880 --> 00:21:30,640
the issues um finished and so 34 of

551
00:21:30,640 --> 00:21:32,559
those issues are now closed and it looks

552
00:21:32,559 --> 00:21:35,039
like we could just continue on the way

553
00:21:35,039 --> 00:21:36,720
we were intending depending on those

554
00:21:36,720 --> 00:21:39,440
documents to see what's happening

555
00:21:39,440 --> 00:21:41,440
and i swear i changed the footer on this

556
00:21:41,440 --> 00:21:42,960
thing

557
00:21:42,960 --> 00:21:47,280
um about the hackathon um so we uh we

558
00:21:47,280 --> 00:21:49,679
did we were did have some conversations

559
00:21:49,679 --> 00:21:52,080
last week uh we didn't i at least didn't

560
00:21:52,080 --> 00:21:55,360
have any packets flowing or testing um

561
00:21:55,360 --> 00:21:58,400
we did several us get the the ietf

562
00:21:58,400 --> 00:22:00,960
hackathon l2vpn working and that lets us

563
00:22:00,960 --> 00:22:03,520
test the joint proxy across the uh the

564
00:22:03,520 --> 00:22:04,799
network

565
00:22:04,799 --> 00:22:07,520
and i'll finally mention that there is

566
00:22:07,520 --> 00:22:09,919
an iot onboarding thing that is finally

567
00:22:09,919 --> 00:22:11,760
active from the from the nist and the

568
00:22:11,760 --> 00:22:14,400
nccoe and that's something we discussed

569
00:22:14,400 --> 00:22:17,360
last time as well so there's a document

570
00:22:17,360 --> 00:22:19,840
that will tell you if you if you want to

571
00:22:19,840 --> 00:22:22,320
bring your product to uh

572
00:22:22,320 --> 00:22:24,960
to there to have them play with it then

573
00:22:24,960 --> 00:22:27,679
you can go through a

574
00:22:27,679 --> 00:22:29,600
letter of intent with that process so

575
00:22:29,600 --> 00:22:31,679
that's another kind of interrupt stuff

576
00:22:31,679 --> 00:22:33,520
that's happening and that's really quite

577
00:22:33,520 --> 00:22:35,280
it um yeah

578
00:22:35,280 --> 00:22:37,280
getting back to the hackathon

579
00:22:37,280 --> 00:22:39,120
you mentioned not really any

580
00:22:39,120 --> 00:22:41,840
participation well um at least i was

581
00:22:41,840 --> 00:22:44,640
there doing something so yes i was doing

582
00:22:44,640 --> 00:22:47,440
something but we didn't interact did we

583
00:22:47,440 --> 00:22:50,240
well not much but my client interacted

584
00:22:50,240 --> 00:22:52,799
with your server no not your server with

585
00:22:52,799 --> 00:22:54,400
your um

586
00:22:54,400 --> 00:22:56,080
certificate so uh

587
00:22:56,080 --> 00:22:57,760
maybe i can just briefly show that i

588
00:22:57,760 --> 00:23:00,480
think that was also intended

589
00:23:00,480 --> 00:23:02,880
yeah so you do do you want to share

590
00:23:02,880 --> 00:23:04,320
something is that what you're saying or

591
00:23:04,320 --> 00:23:06,080
you want to just talk about here the

592
00:23:06,080 --> 00:23:09,039
screen if i know how oh yeah yeah go

593
00:23:09,039 --> 00:23:10,960
ahead

594
00:23:10,960 --> 00:23:15,200
and just stop by clicking on that part

595
00:23:16,000 --> 00:23:18,640
um yeah so so esco did report a bug to

596
00:23:18,640 --> 00:23:20,559
me a big one in the form of my

597
00:23:20,559 --> 00:23:22,480
certificates and i haven't been able to

598
00:23:22,480 --> 00:23:24,480
fix it yet because i just haven't had a

599
00:23:24,480 --> 00:23:26,400
focus cycle to do that

600
00:23:26,400 --> 00:23:28,640
so what do you have here

601
00:23:28,640 --> 00:23:30,640
yeah what i have what i'm showing is the

602
00:23:30,640 --> 00:23:32,880
constrained pledge so this is a usb

603
00:23:32,880 --> 00:23:34,240
stick

604
00:23:34,240 --> 00:23:37,280
format that i use um

605
00:23:37,280 --> 00:23:39,919
just to show uh context so it's a really

606
00:23:39,919 --> 00:23:42,159
small device with a

607
00:23:42,159 --> 00:23:45,120
15.4 radio on it

608
00:23:45,120 --> 00:23:47,840
but this was not the one we used i used

609
00:23:47,840 --> 00:23:51,440
last week during the hackathon so

610
00:23:51,440 --> 00:23:53,600
click that away so

611
00:23:53,600 --> 00:23:56,400
for the hackathon i actually had

612
00:23:56,400 --> 00:24:00,400
maybe just show it here um

613
00:24:00,400 --> 00:24:02,720
yeah it's basically command line

614
00:24:02,720 --> 00:24:06,880
java program that that looks like this

615
00:24:06,960 --> 00:24:08,559
so you uh

616
00:24:08,559 --> 00:24:10,080
start it up and yeah it looks all too

617
00:24:10,080 --> 00:24:12,320
far all too small for us to see but but

618
00:24:12,320 --> 00:24:13,200
because

619
00:24:13,200 --> 00:24:15,039
something's happening

620
00:24:15,039 --> 00:24:16,799
yeah actually at least i can see it i

621
00:24:16,799 --> 00:24:19,919
can read the text a little bit

622
00:24:19,919 --> 00:24:22,240
you can make it a bit a little bit

623
00:24:22,240 --> 00:24:25,120
larger so but it's just a testing client

624
00:24:25,120 --> 00:24:27,840
so not constrained but java based and

625
00:24:27,840 --> 00:24:30,080
also open source

626
00:24:30,080 --> 00:24:32,240
so you can do request voucher here for

627
00:24:32,240 --> 00:24:34,240
example and you get

628
00:24:34,240 --> 00:24:36,720
a load of debugger messages and in the

629
00:24:36,720 --> 00:24:40,320
end it mentions failure so it's the 4.0

630
00:24:40,320 --> 00:24:41,360
error

631
00:24:41,360 --> 00:24:44,240
yeah you can see here

632
00:24:44,240 --> 00:24:47,120
so what was done is i also improved this

633
00:24:47,120 --> 00:24:49,200
diagnostic messaging so that it will the

634
00:24:49,200 --> 00:24:50,720
client will actually display the

635
00:24:50,720 --> 00:24:53,520
diagnostic from the server so this is my

636
00:24:53,520 --> 00:24:57,120
my own registrar server in this case

637
00:24:57,120 --> 00:24:59,039
and the reason of the error is that the

638
00:24:59,039 --> 00:25:01,039
yeah the client was using michael's

639
00:25:01,039 --> 00:25:03,200
certificate so i i downloaded that from

640
00:25:03,200 --> 00:25:04,159
uh

641
00:25:04,159 --> 00:25:07,279
yeah basically his website

642
00:25:07,279 --> 00:25:09,200
so we'll just check they're wrong they

643
00:25:09,200 --> 00:25:11,440
have they don't have the uh authorized

644
00:25:11,440 --> 00:25:12,240
key

645
00:25:12,240 --> 00:25:13,440
in the uh

646
00:25:13,440 --> 00:25:15,120
thing they have a subject key indicator

647
00:25:15,120 --> 00:25:16,799
and so you couldn't build the idef id

648
00:25:16,799 --> 00:25:18,640
and so that's my uh

649
00:25:18,640 --> 00:25:22,159
that's my bad um and of course you know

650
00:25:22,159 --> 00:25:23,760
if we don't interrupt we don't discover

651
00:25:23,760 --> 00:25:25,520
these problems because

652
00:25:25,520 --> 00:25:28,000
uh i didn't do anything with that code

653
00:25:28,000 --> 00:25:30,640
yeah so you can see this is the lucky

654
00:25:30,640 --> 00:25:32,480
dump of the certificate so you see the

655
00:25:32,480 --> 00:25:35,120
subject key identifier in there and it

656
00:25:35,120 --> 00:25:37,039
should be there the authority key

657
00:25:37,039 --> 00:25:38,320
identifier

658
00:25:38,320 --> 00:25:39,919
so that's the thing it's complaining

659
00:25:39,919 --> 00:25:41,200
about

660
00:25:41,200 --> 00:25:42,559
and this is actually the first time i

661
00:25:42,559 --> 00:25:44,720
tried my client with your certificate so

662
00:25:44,720 --> 00:25:46,240
that's the

663
00:25:46,240 --> 00:25:47,840
step i did and for the rest i also did

664
00:25:47,840 --> 00:25:50,159
not have much time similar to michael uh

665
00:25:50,159 --> 00:25:52,000
last week so

666
00:25:52,000 --> 00:25:55,600
that's about it but it's progress anyway

667
00:25:55,600 --> 00:25:58,240
i think there was once

668
00:25:58,640 --> 00:26:01,760
is is is this used is this intended in

669
00:26:01,760 --> 00:26:03,600
in you know ultimate deployments to use

670
00:26:03,600 --> 00:26:05,840
ipv4 or did you just do this because it

671
00:26:05,840 --> 00:26:07,360
makes troubleshooting all these logs

672
00:26:07,360 --> 00:26:11,120
easier than v6 addresses

673
00:26:11,120 --> 00:26:13,360
yeah i think that um

674
00:26:13,360 --> 00:26:15,360
in this java pledge

675
00:26:15,360 --> 00:26:17,039
it will just use

676
00:26:17,039 --> 00:26:20,080
ipv4 or six whatever is available to the

677
00:26:20,080 --> 00:26:21,679
server i think it actually should

678
00:26:21,679 --> 00:26:24,400
resolve to ipv6 to be honest

679
00:26:24,400 --> 00:26:28,159
so i'm not sure whether you see ipv4

680
00:26:28,159 --> 00:26:30,400
oh the the the black line with all the

681
00:26:30,400 --> 00:26:32,320
small fonts there were only four

682
00:26:32,320 --> 00:26:35,039
addresses in it

683
00:26:35,200 --> 00:26:38,400
okay you mean this uh yep

684
00:26:38,400 --> 00:26:40,320
one of the problems that several people

685
00:26:40,320 --> 00:26:42,559
have is they're using docker containers

686
00:26:42,559 --> 00:26:44,880
just deployed in under aws and so

687
00:26:44,880 --> 00:26:46,799
they're reachable by v6 but because of

688
00:26:46,799 --> 00:26:48,559
docker they don't have v6 inside the

689
00:26:48,559 --> 00:26:51,200
container yeah and so they can't go out

690
00:26:51,200 --> 00:26:53,679
and that's a major limitation with uh

691
00:26:53,679 --> 00:26:55,600
ec2

692
00:26:55,600 --> 00:26:56,880
containers

693
00:26:56,880 --> 00:26:57,760
um

694
00:26:57,760 --> 00:27:00,159
and i don't know if anyone solved it but

695
00:27:00,159 --> 00:27:02,960
um but but here i honestly don't know

696
00:27:02,960 --> 00:27:05,440
why it's using v4 because

697
00:27:05,440 --> 00:27:07,120
i actually put the

698
00:27:07,120 --> 00:27:10,720
yeah the dns uh to only give back v6

699
00:27:10,720 --> 00:27:12,799
adders i think normally but okay that

700
00:27:12,799 --> 00:27:14,799
may be good to check

701
00:27:14,799 --> 00:27:16,799
and the the constrained one only uses

702
00:27:16,799 --> 00:27:18,320
ipv6

703
00:27:18,320 --> 00:27:20,240
in any case

704
00:27:20,240 --> 00:27:22,480
yep

705
00:27:22,960 --> 00:27:25,279
thanks esco i'm done yeah i think we're

706
00:27:25,279 --> 00:27:28,399
at a time probably yes

707
00:27:28,399 --> 00:27:29,440
we're um

708
00:27:29,440 --> 00:27:31,440
10 20 yeah we're 10 minutes behind i

709
00:27:31,440 --> 00:27:34,000
think that's where reaching our wiggle

710
00:27:34,000 --> 00:27:35,840
room so um

711
00:27:35,840 --> 00:27:38,559
stefan um status of brewski ae and

712
00:27:38,559 --> 00:27:40,799
derived work please

713
00:27:40,799 --> 00:27:42,559
and there he goes right

714
00:27:42,559 --> 00:27:45,559
right

715
00:27:50,000 --> 00:27:53,520
okay so you should see the slide

716
00:27:54,080 --> 00:27:56,159
yep please go ahead

717
00:27:56,159 --> 00:27:57,440
okay perfect

718
00:27:57,440 --> 00:28:00,559
uh so as

719
00:28:01,279 --> 00:28:03,279
uh as uh told us already mentioned in

720
00:28:03,279 --> 00:28:04,159
the

721
00:28:04,159 --> 00:28:05,360
overview

722
00:28:05,360 --> 00:28:08,399
we went ahead and discussed uh during

723
00:28:08,399 --> 00:28:12,320
the last its a split of brewski ae

724
00:28:12,320 --> 00:28:14,880
uh according to the use cases which were

725
00:28:14,880 --> 00:28:17,279
included there so those use cases

726
00:28:17,279 --> 00:28:19,600
developed in different directions so we

727
00:28:19,600 --> 00:28:21,440
thought it's better to to have a split

728
00:28:21,440 --> 00:28:23,039
of the draft that has a functionality

729
00:28:23,039 --> 00:28:25,279
contained and be

730
00:28:25,279 --> 00:28:26,640
easier able to

731
00:28:26,640 --> 00:28:29,200
declare conformance to a specific

732
00:28:29,200 --> 00:28:32,240
functionality so use case one stays as

733
00:28:32,240 --> 00:28:35,120
uh what was described as support for

734
00:28:35,120 --> 00:28:37,520
other kronos enrollment in brewski

735
00:28:37,520 --> 00:28:40,240
and it basically relates to the

736
00:28:40,240 --> 00:28:44,399
using an alternative enrollment protocol

737
00:28:44,399 --> 00:28:46,720
other than the est simple enroll that is

738
00:28:46,720 --> 00:28:48,399
specified in brewski so we are

739
00:28:48,399 --> 00:28:50,559
concentrating there on lightweight cmp

740
00:28:50,559 --> 00:28:52,320
usage specifically

741
00:28:52,320 --> 00:28:53,360
and

742
00:28:53,360 --> 00:28:55,039
the focus is placed on the interaction

743
00:28:55,039 --> 00:28:57,200
between the pledge on one hand and the

744
00:28:57,200 --> 00:28:58,960
register on the other side because from

745
00:28:58,960 --> 00:29:01,440
the register to the back end

746
00:29:01,440 --> 00:29:03,600
it's also

747
00:29:03,600 --> 00:29:06,559
a matter of deployment what type of

748
00:29:06,559 --> 00:29:09,120
enrollment protocol is used there

749
00:29:09,120 --> 00:29:10,960
so in the second document use case two

750
00:29:10,960 --> 00:29:12,559
became

751
00:29:12,559 --> 00:29:15,600
brewski with pledge in responder mode or

752
00:29:15,600 --> 00:29:18,559
as michael was already stating brewski

753
00:29:18,559 --> 00:29:21,360
prime for prm

754
00:29:21,360 --> 00:29:22,960
and it covers

755
00:29:22,960 --> 00:29:25,600
the the use case where we have a reverse

756
00:29:25,600 --> 00:29:27,679
direction between in the communication

757
00:29:27,679 --> 00:29:30,480
between the pledge and the registrar

758
00:29:30,480 --> 00:29:32,960
uh so that was the case where we

759
00:29:32,960 --> 00:29:35,200
introduced the register register agent

760
00:29:35,200 --> 00:29:37,120
to facilitate the communication between

761
00:29:37,120 --> 00:29:39,439
the two

762
00:29:39,600 --> 00:29:42,159
so just uh to go through through both of

763
00:29:42,159 --> 00:29:43,919
the current drafts so both drafts are

764
00:29:43,919 --> 00:29:46,080
available in the

765
00:29:46,080 --> 00:29:48,240
repository and for both drafts we also

766
00:29:48,240 --> 00:29:51,039
have a github on the anima working group

767
00:29:51,039 --> 00:29:52,720
kit

768
00:29:52,720 --> 00:29:55,360
so the status of risky ae

769
00:29:55,360 --> 00:29:58,240
so from version 02 to version 3 we did

770
00:29:58,240 --> 00:30:00,480
some housekeeping uh addressed some of

771
00:30:00,480 --> 00:30:03,440
the open issues for the voucher young

772
00:30:03,440 --> 00:30:05,520
for the young of the voucher request and

773
00:30:05,520 --> 00:30:07,200
included some further open issues

774
00:30:07,200 --> 00:30:08,880
regarding

775
00:30:08,880 --> 00:30:12,640
the usage of the young models for

776
00:30:12,640 --> 00:30:15,200
getting the agent proximity into the

777
00:30:15,200 --> 00:30:16,960
voucher request

778
00:30:16,960 --> 00:30:20,320
so that was related to use case two

779
00:30:20,320 --> 00:30:24,080
and the csr encapsulation we used the

780
00:30:24,080 --> 00:30:25,440
the

781
00:30:25,440 --> 00:30:26,720
ztp

782
00:30:26,720 --> 00:30:29,360
uh ssdp sub module for that and that was

783
00:30:29,360 --> 00:30:31,520
included also as as an open issue in

784
00:30:31,520 --> 00:30:33,760
there so from three to four we

785
00:30:33,760 --> 00:30:35,360
essentially did the split of the two

786
00:30:35,360 --> 00:30:37,440
documents so everything that was related

787
00:30:37,440 --> 00:30:40,559
to use case 2 is now in brewski

788
00:30:40,559 --> 00:30:42,080
prn

789
00:30:42,080 --> 00:30:43,279
and

790
00:30:43,279 --> 00:30:45,679
the remaining parts are contained now in

791
00:30:45,679 --> 00:30:47,600
blueski ae

792
00:30:47,600 --> 00:30:49,600
are still in blueski ae

793
00:30:49,600 --> 00:30:51,600
so we also have some change of authors

794
00:30:51,600 --> 00:30:52,399
there

795
00:30:52,399 --> 00:30:54,880
so david from ohan

796
00:30:54,880 --> 00:30:55,840
he

797
00:30:55,840 --> 00:30:58,480
is co-author and will be the main editor

798
00:30:58,480 --> 00:30:59,279
for

799
00:30:59,279 --> 00:31:01,039
uh brewski ae

800
00:31:01,039 --> 00:31:03,200
he is currently

801
00:31:03,200 --> 00:31:04,960
engaged in doing

802
00:31:04,960 --> 00:31:07,200
a proof of concept of what has been

803
00:31:07,200 --> 00:31:10,559
described so far in bushki ae and i

804
00:31:10,559 --> 00:31:12,080
think that's very good to have that

805
00:31:12,080 --> 00:31:14,960
implementation background uh to be able

806
00:31:14,960 --> 00:31:16,559
to

807
00:31:16,559 --> 00:31:19,760
progress the draft thomas has left and

808
00:31:19,760 --> 00:31:22,320
will concentrate on the second draft

809
00:31:22,320 --> 00:31:25,120
brewski prime

810
00:31:25,679 --> 00:31:28,080
so next steps regarding ae is the

811
00:31:28,080 --> 00:31:30,159
clarification of the further open issues

812
00:31:30,159 --> 00:31:32,880
which we have stated in the draft

813
00:31:32,880 --> 00:31:34,799
on the anima github there is currently

814
00:31:34,799 --> 00:31:36,559
no open issue

815
00:31:36,559 --> 00:31:39,120
so the ones that were related to the use

816
00:31:39,120 --> 00:31:43,039
case 2 we moved to the brewski prn

817
00:31:43,039 --> 00:31:45,360
repository

818
00:31:45,360 --> 00:31:48,480
so the next step would also include to

819
00:31:48,480 --> 00:31:50,640
enhance the general description using

820
00:31:50,640 --> 00:31:52,320
alternative enrollment protocols and

821
00:31:52,320 --> 00:31:54,240
then concentrate on

822
00:31:54,240 --> 00:31:56,640
the lightweight cmp profile as stated

823
00:31:56,640 --> 00:31:57,679
and

824
00:31:57,679 --> 00:32:00,640
maybe also on est with full cmc that is

825
00:32:00,640 --> 00:32:02,240
something we have to discuss further out

826
00:32:02,240 --> 00:32:04,240
with elliot

827
00:32:04,240 --> 00:32:05,919
i don't think that eliot is

828
00:32:05,919 --> 00:32:08,240
participating today but this is

829
00:32:08,240 --> 00:32:09,919
something we have on the list so the

830
00:32:09,919 --> 00:32:12,480
updates as usual will be circulated and

831
00:32:12,480 --> 00:32:14,559
also as usual working group review is

832
00:32:14,559 --> 00:32:16,000
appreciated

833
00:32:16,000 --> 00:32:18,720
and since i mentioned that david is uh

834
00:32:18,720 --> 00:32:21,519
they're currently engaged in the

835
00:32:21,519 --> 00:32:23,760
proof of concept implementation there is

836
00:32:23,760 --> 00:32:26,880
obviously also interest from others

837
00:32:26,880 --> 00:32:29,919
that we can go ahead and mix make

838
00:32:29,919 --> 00:32:31,919
an adult testing in one of the next

839
00:32:31,919 --> 00:32:34,559
hackathons

840
00:32:34,559 --> 00:32:38,158
so far for brisky ae

841
00:32:38,720 --> 00:32:42,000
then jumping over to the to the second

842
00:32:42,000 --> 00:32:46,640
half of the original risky ae risky prm

843
00:32:46,640 --> 00:32:49,039
so we contained all the use case 2

844
00:32:49,039 --> 00:32:50,799
related issues in there for the pledge

845
00:32:50,799 --> 00:32:53,679
and responder mode

846
00:32:53,679 --> 00:32:54,640
we

847
00:32:54,640 --> 00:32:57,279
included the issues that came up from

848
00:32:57,279 --> 00:32:59,360
the young doctor early review

849
00:32:59,360 --> 00:33:02,000
so that was mainly some itf voucher

850
00:33:02,000 --> 00:33:04,080
request enhancements

851
00:33:04,080 --> 00:33:07,039
that that are reflected in section six

852
00:33:07,039 --> 00:33:08,480
that describes the young motive for

853
00:33:08,480 --> 00:33:11,279
bluesky prm and also within the security

854
00:33:11,279 --> 00:33:13,760
considerations we

855
00:33:13,760 --> 00:33:15,919
also did some alignment with the naming

856
00:33:15,919 --> 00:33:18,320
of the ietf vulture request

857
00:33:18,320 --> 00:33:19,519
with other

858
00:33:19,519 --> 00:33:22,480
drafts and anima like

859
00:33:22,480 --> 00:33:25,360
the constraint voucher for instance

860
00:33:25,360 --> 00:33:28,000
to be able to list them accordingly

861
00:33:28,000 --> 00:33:30,480
and then uh in the voucher exchanges we

862
00:33:30,480 --> 00:33:34,240
now use the ietf voucher request prm

863
00:33:34,240 --> 00:33:36,320
which has the enhancement included for

864
00:33:36,320 --> 00:33:38,000
the agent signed data which is one of

865
00:33:38,000 --> 00:33:39,679
the elements that is included by the

866
00:33:39,679 --> 00:33:41,440
registrar agent

867
00:33:41,440 --> 00:33:43,440
and we also included the

868
00:33:43,440 --> 00:33:45,159
changes from

869
00:33:45,159 --> 00:33:47,120
netconftp

870
00:33:47,120 --> 00:33:50,559
regarding the csr types so it's now a

871
00:33:50,559 --> 00:33:52,080
set

872
00:33:52,080 --> 00:33:53,679
ztp

873
00:33:53,679 --> 00:33:56,480
types included that allows us to to use

874
00:33:56,480 --> 00:33:59,279
it without including any of the

875
00:33:59,279 --> 00:34:01,840
further types that are defined in

876
00:34:01,840 --> 00:34:03,360
the s30p

877
00:34:03,360 --> 00:34:07,479
csr draft from netcom

878
00:34:07,519 --> 00:34:10,159
regarding the next steps uh so we need

879
00:34:10,159 --> 00:34:12,480
to further rework the draft so adapt a

880
00:34:12,480 --> 00:34:14,399
little bit uh the structure of the draft

881
00:34:14,399 --> 00:34:16,480
and also the application examples

882
00:34:16,480 --> 00:34:17,918
because there were just a couple of

883
00:34:17,918 --> 00:34:19,918
examples included and

884
00:34:19,918 --> 00:34:21,918
yeah we would like to enhance them

885
00:34:21,918 --> 00:34:23,839
further and then we have some open

886
00:34:23,839 --> 00:34:25,359
issues which are also stated on the

887
00:34:25,359 --> 00:34:28,079
anima git and also in the draft so one

888
00:34:28,079 --> 00:34:31,280
is to to essentially verify that what is

889
00:34:31,280 --> 00:34:33,760
included now regarding the ietf

890
00:34:33,760 --> 00:34:35,839
ztp types

891
00:34:35,839 --> 00:34:38,320
which we use to convey the pkcs10

892
00:34:38,320 --> 00:34:40,000
request

893
00:34:40,000 --> 00:34:43,119
if that is defined in the right way

894
00:34:43,119 --> 00:34:44,639
and then we have a

895
00:34:44,639 --> 00:34:46,239
further open issue regarding the

896
00:34:46,239 --> 00:34:48,960
generation of multiple csrs so the

897
00:34:48,960 --> 00:34:51,119
reason behind that is right now we are

898
00:34:51,119 --> 00:34:53,918
concentrating of bootstrapping a generic

899
00:34:53,918 --> 00:34:56,399
certificate which can be utilized later

900
00:34:56,399 --> 00:34:57,119
on

901
00:34:57,119 --> 00:35:00,000
if the pledge has already some knowledge

902
00:35:00,000 --> 00:35:02,079
about the deployment domain or about the

903
00:35:02,079 --> 00:35:04,480
application that he requires a

904
00:35:04,480 --> 00:35:05,920
certificate for

905
00:35:05,920 --> 00:35:06,800
then

906
00:35:06,800 --> 00:35:08,400
it might be

907
00:35:08,400 --> 00:35:11,680
it might be useful to also be able to

908
00:35:11,680 --> 00:35:15,520
generate multiple csrs that are then uh

909
00:35:15,520 --> 00:35:17,440
they're bootstrapped essentially during

910
00:35:17,440 --> 00:35:21,040
the or enrolled during the

911
00:35:21,200 --> 00:35:25,200
first first round of boosky prm

912
00:35:25,200 --> 00:35:27,440
last but not least we have also one open

913
00:35:27,440 --> 00:35:29,680
issue regarding the environment response

914
00:35:29,680 --> 00:35:30,640
object

915
00:35:30,640 --> 00:35:33,119
currently this enrollment response

916
00:35:33,119 --> 00:35:35,520
just contains a certificate the ldfid

917
00:35:35,520 --> 00:35:36,480
for the

918
00:35:36,480 --> 00:35:37,760
pledge

919
00:35:37,760 --> 00:35:39,520
if we

920
00:35:39,520 --> 00:35:42,560
if we think those scenarios further then

921
00:35:42,560 --> 00:35:45,040
we may end up in including additional

922
00:35:45,040 --> 00:35:47,119
information for either the certificate

923
00:35:47,119 --> 00:35:49,119
or also some some further configuration

924
00:35:49,119 --> 00:35:50,480
data for the

925
00:35:50,480 --> 00:35:53,760
um for the pledge and when we do that

926
00:35:53,760 --> 00:35:56,320
then we would for sure need a signature

927
00:35:56,320 --> 00:36:00,320
on the enrollment response because

928
00:36:00,320 --> 00:36:01,680
currently we don't have a signature

929
00:36:01,680 --> 00:36:03,920
included because the ldfid is assigned

930
00:36:03,920 --> 00:36:05,680
by itself

931
00:36:05,680 --> 00:36:07,280
so also here

932
00:36:07,280 --> 00:36:09,040
we circulate the outcome and also

933
00:36:09,040 --> 00:36:10,560
discussions

934
00:36:10,560 --> 00:36:13,040
on the mailing list and working group

935
00:36:13,040 --> 00:36:15,680
review as always is appreciated

936
00:36:15,680 --> 00:36:18,240
uh thomas is currently engaged here in

937
00:36:18,240 --> 00:36:20,640
the poc implementation

938
00:36:20,640 --> 00:36:23,200
so that also means that uh

939
00:36:23,200 --> 00:36:25,119
if there is interest from others for an

940
00:36:25,119 --> 00:36:26,640
interrupt testing

941
00:36:26,640 --> 00:36:29,440
that would be great

942
00:36:29,440 --> 00:36:31,359
okay that's about it so in the backup

943
00:36:31,359 --> 00:36:33,200
i've just included the call flows for

944
00:36:33,200 --> 00:36:35,200
the two

945
00:36:35,200 --> 00:36:37,040
brewski

946
00:36:37,040 --> 00:36:39,280
splits one for use case one or one one

947
00:36:39,280 --> 00:36:41,359
for brewski ae and one for the bluesky

948
00:36:41,359 --> 00:36:43,680
prime

949
00:36:44,000 --> 00:36:47,240
any question

950
00:36:54,160 --> 00:36:56,399
all right

951
00:36:56,640 --> 00:36:59,359
thank you very much

952
00:36:59,680 --> 00:37:01,140
all right and i think that

953
00:37:01,140 --> 00:37:02,240
[Music]

954
00:37:02,240 --> 00:37:04,800
bring us to thomas as uh the next one

955
00:37:04,800 --> 00:37:09,280
update on jws sign vouchers

956
00:37:09,280 --> 00:37:13,450
yes that's right hello everybody

957
00:37:13,450 --> 00:37:16,500
[Music]

958
00:37:27,040 --> 00:37:29,920
so that's it

959
00:37:30,800 --> 00:37:32,079
so

960
00:37:32,079 --> 00:37:34,720
can you see it

961
00:37:34,839 --> 00:37:38,160
yep so this is just a quick update on so

962
00:37:38,160 --> 00:37:40,560
what happened in the uh jws signed

963
00:37:40,560 --> 00:37:42,560
vouchers uh draft

964
00:37:42,560 --> 00:37:46,400
so uh michael and i working on that

965
00:37:46,400 --> 00:37:47,119
so

966
00:37:47,119 --> 00:37:52,480
to recap what it is about so the rfc836

967
00:37:52,480 --> 00:37:55,200
specifies uh cms sign json voucher

968
00:37:55,200 --> 00:37:56,480
artifacts

969
00:37:56,480 --> 00:38:00,160
and here this draft proposes

970
00:38:00,160 --> 00:38:01,680
json

971
00:38:01,680 --> 00:38:03,440
another option

972
00:38:03,440 --> 00:38:06,000
so it does not make any changes in the

973
00:38:06,000 --> 00:38:09,280
in the young and um so it can be used by

974
00:38:09,280 --> 00:38:11,400
the brisket

975
00:38:11,400 --> 00:38:14,240
rlc8995 and it also

976
00:38:14,240 --> 00:38:17,599
so it is used also for the prisky prime

977
00:38:17,599 --> 00:38:21,839
stefan just reported about that before

978
00:38:22,640 --> 00:38:24,000
so

979
00:38:24,000 --> 00:38:25,760
what happened here also what what is the

980
00:38:25,760 --> 00:38:28,480
content so we have uh two serialization

981
00:38:28,480 --> 00:38:31,119
options so one for compact area

982
00:38:31,119 --> 00:38:33,200
serialization the other one for the

983
00:38:33,200 --> 00:38:36,880
adjacent serialization so first we first

984
00:38:36,880 --> 00:38:39,440
choice was to go for compact

985
00:38:39,440 --> 00:38:42,240
so this is already um so implemented so

986
00:38:42,240 --> 00:38:45,200
at least on my side and considered in

987
00:38:45,200 --> 00:38:46,960
the draft and

988
00:38:46,960 --> 00:38:49,680
there may be also interest in in in json

989
00:38:49,680 --> 00:38:53,359
serialization uh by opc ua foundation so

990
00:38:53,359 --> 00:38:55,920
this is to be clarified and analyzed

991
00:38:55,920 --> 00:38:58,400
so this is also on my list to double

992
00:38:58,400 --> 00:39:01,200
check with with people from obviously

993
00:39:01,200 --> 00:39:02,000
and

994
00:39:02,000 --> 00:39:04,240
if there is a need to have that or if

995
00:39:04,240 --> 00:39:05,839
there is good reason to also have

996
00:39:05,839 --> 00:39:08,880
support that option

997
00:39:08,960 --> 00:39:09,920
um

998
00:39:09,920 --> 00:39:10,800
so

999
00:39:10,800 --> 00:39:13,599
only small changes happened in in that

1000
00:39:13,599 --> 00:39:15,920
draft now from

1001
00:39:15,920 --> 00:39:19,040
zero zero to zero one so we

1002
00:39:19,040 --> 00:39:19,839
in

1003
00:39:19,839 --> 00:39:22,400
our consistent use of the terms uh

1004
00:39:22,400 --> 00:39:24,880
pledge voucher request registrar voucher

1005
00:39:24,880 --> 00:39:26,480
request and the

1006
00:39:26,480 --> 00:39:28,640
appropriations of that

1007
00:39:28,640 --> 00:39:32,320
and so also the uh media types are fixed

1008
00:39:32,320 --> 00:39:34,320
and uh some

1009
00:39:34,320 --> 00:39:37,839
terms um where were mixed up before

1010
00:39:37,839 --> 00:39:41,359
so uh so consistent uses of jws instead

1011
00:39:41,359 --> 00:39:44,400
of jwt and cozy

1012
00:39:44,400 --> 00:39:45,760
so and

1013
00:39:45,760 --> 00:39:48,079
some updates in the references

1014
00:39:48,079 --> 00:39:51,599
that's it mainly

1015
00:39:51,599 --> 00:39:55,280
and so next steps here is yeah i said

1016
00:39:55,280 --> 00:39:57,599
already investigate in the

1017
00:39:57,599 --> 00:39:58,800
uh

1018
00:39:58,800 --> 00:40:01,680
second gen serialization option for the

1019
00:40:01,680 --> 00:40:05,440
json in the jws and uh yeah circulate

1020
00:40:05,440 --> 00:40:07,440
the outcome to the mailing list of

1021
00:40:07,440 --> 00:40:10,319
course feedback is always welcome here

1022
00:40:10,319 --> 00:40:12,319
maybe if somebody would be interested

1023
00:40:12,319 --> 00:40:14,880
into interested to do the chat art that

1024
00:40:14,880 --> 00:40:17,839
would be also nice so as tall as already

1025
00:40:17,839 --> 00:40:19,280
asked for that

1026
00:40:19,280 --> 00:40:21,200
and uh also

1027
00:40:21,200 --> 00:40:22,960
working group review would be

1028
00:40:22,960 --> 00:40:24,480
appreciated here

1029
00:40:24,480 --> 00:40:25,920
and that's it

1030
00:40:25,920 --> 00:40:28,160
any questions

1031
00:40:28,160 --> 00:40:30,079
yeah thank you um yeah well i mean you

1032
00:40:30,079 --> 00:40:31,599
always can offer being shepherd for

1033
00:40:31,599 --> 00:40:33,119
somebody else and hope for rhetoric

1034
00:40:33,119 --> 00:40:34,960
possibly right so

1035
00:40:34,960 --> 00:40:37,040
start offering then you may receive back

1036
00:40:37,040 --> 00:40:40,079
so uh um sorry for not being on top of

1037
00:40:40,079 --> 00:40:42,400
all the workflows um i was i was

1038
00:40:42,400 --> 00:40:44,720
wondering is this you know the more

1039
00:40:44,720 --> 00:40:47,040
variability in you know

1040
00:40:47,040 --> 00:40:49,440
protocol options or encoding options

1041
00:40:49,440 --> 00:40:52,480
whatever we call it we get um

1042
00:40:52,480 --> 00:40:54,800
is this safe against you know poor

1043
00:40:54,800 --> 00:40:56,160
operator in the end sitting there and

1044
00:40:56,160 --> 00:40:58,319
not knowing why stuff isn't working in

1045
00:40:58,319 --> 00:41:00,880
terms of let's say a pledge supports

1046
00:41:00,880 --> 00:41:03,040
some different encoding

1047
00:41:03,040 --> 00:41:05,920
than the registrar um all the workflows

1048
00:41:05,920 --> 00:41:08,800
such that uh you know a reasonably good

1049
00:41:08,800 --> 00:41:11,040
diagnostic implementation of a registrar

1050
00:41:11,040 --> 00:41:13,040
would always know

1051
00:41:13,040 --> 00:41:15,200
not only that it didn't work because

1052
00:41:15,200 --> 00:41:17,200
what was offered by the registrar wasn't

1053
00:41:17,200 --> 00:41:18,960
supported by the pledge but also what

1054
00:41:18,960 --> 00:41:22,160
the pledge would support

1055
00:41:26,560 --> 00:41:29,200
if this draft is acknowledged as i think

1056
00:41:29,200 --> 00:41:32,319
this has to be respected in the uh draft

1057
00:41:32,319 --> 00:41:34,240
making use of it so

1058
00:41:34,240 --> 00:41:36,400
at the end so this draft just defines

1059
00:41:36,400 --> 00:41:40,000
the format or the form factor so and uh

1060
00:41:40,000 --> 00:41:41,200
other

1061
00:41:41,200 --> 00:41:43,760
standardizations or other other

1062
00:41:43,760 --> 00:41:45,839
specifications making use of it for

1063
00:41:45,839 --> 00:41:48,560
example the crispy prm have to make sure

1064
00:41:48,560 --> 00:41:50,400
that um

1065
00:41:50,400 --> 00:41:51,440
this uh

1066
00:41:51,440 --> 00:41:53,359
that no clashes can happen here i would

1067
00:41:53,359 --> 00:41:55,440
say

1068
00:41:55,440 --> 00:41:57,440
right but i mean um

1069
00:41:57,440 --> 00:41:59,359
is the what

1070
00:41:59,359 --> 00:42:00,960
when a voucher is being transmitted is

1071
00:42:00,960 --> 00:42:03,760
it kind of done with a request where you

1072
00:42:03,760 --> 00:42:05,040
know the

1073
00:42:05,040 --> 00:42:06,960
supported encodings are in there so that

1074
00:42:06,960 --> 00:42:09,520
the registrar know which encoding you

1075
00:42:09,520 --> 00:42:12,000
know um would be feasible when it sends

1076
00:42:12,000 --> 00:42:13,359
the voucher or

1077
00:42:13,359 --> 00:42:16,359
um

1078
00:42:18,079 --> 00:42:19,839
this is included in the

1079
00:42:19,839 --> 00:42:22,400
uh content type header and in the accept

1080
00:42:22,400 --> 00:42:24,560
header so by the accept header the

1081
00:42:24,560 --> 00:42:27,760
pledge or also the registrar if it

1082
00:42:27,760 --> 00:42:30,640
requests a voucher from the mother

1083
00:42:30,640 --> 00:42:31,920
can

1084
00:42:31,920 --> 00:42:35,119
define or specify uh wants what it wants

1085
00:42:35,119 --> 00:42:36,720
to receive

1086
00:42:36,720 --> 00:42:37,920
yeah

1087
00:42:37,920 --> 00:42:39,839
we'll just use just an example right i

1088
00:42:39,839 --> 00:42:42,000
mean the more variability we get you

1089
00:42:42,000 --> 00:42:44,400
know there are two concerns one is so

1090
00:42:44,400 --> 00:42:47,440
many drafts for the itf but the

1091
00:42:47,440 --> 00:42:49,920
the other one is uh just making sure

1092
00:42:49,920 --> 00:42:53,040
that uh you know we we may not get

1093
00:42:53,040 --> 00:42:55,200
interoperability between everything

1094
00:42:55,200 --> 00:42:56,880
which which is fine but at least we

1095
00:42:56,880 --> 00:42:58,319
should be able to always get the right

1096
00:42:58,319 --> 00:43:00,160
diagnostic to

1097
00:43:00,160 --> 00:43:02,000
not have the solution become

1098
00:43:02,000 --> 00:43:03,440
undeplorable

1099
00:43:03,440 --> 00:43:05,119
that that's right and maybe something to

1100
00:43:05,119 --> 00:43:06,240
add so

1101
00:43:06,240 --> 00:43:08,240
the default here is

1102
00:43:08,240 --> 00:43:10,720
so the idea is here by default if

1103
00:43:10,720 --> 00:43:13,359
nothing is specified in the headers so

1104
00:43:13,359 --> 00:43:15,119
then uh

1105
00:43:15,119 --> 00:43:18,480
it replies back so what what

1106
00:43:18,480 --> 00:43:20,960
received in the request format so if you

1107
00:43:20,960 --> 00:43:22,880
receive a jws

1108
00:43:22,880 --> 00:43:24,839
signed voucher request

1109
00:43:24,839 --> 00:43:28,480
then the server replies with a jws

1110
00:43:28,480 --> 00:43:31,520
voucher and if there is need to change

1111
00:43:31,520 --> 00:43:33,680
the um

1112
00:43:33,680 --> 00:43:35,440
the response this can be addressed by

1113
00:43:35,440 --> 00:43:38,240
the by the except header

1114
00:43:38,240 --> 00:43:40,400
well thank you

1115
00:43:40,400 --> 00:43:43,119
anybody else

1116
00:43:45,359 --> 00:43:47,680
otherwise i think we're back to michael

1117
00:43:47,680 --> 00:43:50,280
um status of

1118
00:43:50,280 --> 00:43:54,760
8366 this effort

1119
00:43:58,720 --> 00:44:01,359
buttons

1120
00:44:05,200 --> 00:44:07,040
let's hope this one is the right

1121
00:44:07,040 --> 00:44:10,000
document oh it is how about

1122
00:44:10,000 --> 00:44:13,200
okay so um this parameter came out of

1123
00:44:13,200 --> 00:44:16,480
the brewski uh async enroll who needed

1124
00:44:16,480 --> 00:44:18,800
to have an additional

1125
00:44:18,800 --> 00:44:23,040
value for the enumerated stuff

1126
00:44:23,040 --> 00:44:24,400
and

1127
00:44:24,400 --> 00:44:26,079
so we now have all these

1128
00:44:26,079 --> 00:44:27,359
derivations

1129
00:44:27,359 --> 00:44:30,920
from 8366

1130
00:44:31,280 --> 00:44:33,280
and it's been now three years since we

1131
00:44:33,280 --> 00:44:35,040
published this document

1132
00:44:35,040 --> 00:44:37,839
um so the problem was that

1133
00:44:37,839 --> 00:44:39,680
we needed to do this enumerated type and

1134
00:44:39,680 --> 00:44:42,000
it turns out that we can't do this uh in

1135
00:44:42,000 --> 00:44:43,760
we can't just extend the yang it's not a

1136
00:44:43,760 --> 00:44:45,359
way that we can do it because of the way

1137
00:44:45,359 --> 00:44:47,200
we did it

1138
00:44:47,200 --> 00:44:49,119
but there is a different way

1139
00:44:49,119 --> 00:44:51,520
uh and and brisky sync and role would

1140
00:44:51,520 --> 00:44:53,760
like to have a new a new assertion type

1141
00:44:53,760 --> 00:44:55,200
so normally the assertion type in

1142
00:44:55,200 --> 00:44:57,520
brewski's proximity the top two

1143
00:44:57,520 --> 00:45:00,079
possibilities are logged and

1144
00:45:00,079 --> 00:45:02,640
the other one i always forget um

1145
00:45:02,640 --> 00:45:05,680
and but logged is essentially is is used

1146
00:45:05,680 --> 00:45:08,079
to make um

1147
00:45:08,079 --> 00:45:10,319
um

1148
00:45:10,319 --> 00:45:12,400
nonceless ones and the other one is used

1149
00:45:12,400 --> 00:45:15,040
primarily in srtp uh for that and i

1150
00:45:15,040 --> 00:45:16,400
can't remember what it's called now it's

1151
00:45:16,400 --> 00:45:19,359
lost my brain so the proposed resolution

1152
00:45:19,359 --> 00:45:20,800
is that we're going to revise this

1153
00:45:20,800 --> 00:45:23,359
document um and we're going to make this

1154
00:45:23,359 --> 00:45:25,359
an enumerated part of an iana managed

1155
00:45:25,359 --> 00:45:26,640
registry

1156
00:45:26,640 --> 00:45:28,480
um so we have to create that word stream

1157
00:45:28,480 --> 00:45:29,760
the document and then we have to

1158
00:45:29,760 --> 00:45:32,640
reference it and there's a mechanism in

1159
00:45:32,640 --> 00:45:35,200
or uh i'm not sure as a mechanism as a

1160
00:45:35,200 --> 00:45:37,040
as a procedure in the yang community as

1161
00:45:37,040 --> 00:45:38,640
how to do that

1162
00:45:38,640 --> 00:45:40,880
um and so we're going to wind up with

1163
00:45:40,880 --> 00:45:42,560
the numbers and the registry that should

1164
00:45:42,560 --> 00:45:44,000
be just right

1165
00:45:44,000 --> 00:45:45,680
this shouldn't have any real effect on

1166
00:45:45,680 --> 00:45:47,119
anyone coding because we shouldn't

1167
00:45:47,119 --> 00:45:49,200
actually be changing the the resulting

1168
00:45:49,200 --> 00:45:52,400
json or sebor that's uh derived from

1169
00:45:52,400 --> 00:45:55,280
this in theory will not change at all so

1170
00:45:55,280 --> 00:45:57,040
if you aren't using something new then

1171
00:45:57,040 --> 00:46:00,640
this will be a completely um

1172
00:46:00,640 --> 00:46:02,960
no change to the any of the bits in the

1173
00:46:02,960 --> 00:46:05,200
wire but will accommodate new types of

1174
00:46:05,200 --> 00:46:06,880
bits in the wire

1175
00:46:06,880 --> 00:46:08,480
um if someone was generating something

1176
00:46:08,480 --> 00:46:11,040
with a yang code generator then maybe

1177
00:46:11,040 --> 00:46:12,880
there would be some difference i i don't

1178
00:46:12,880 --> 00:46:15,040
know exactly i presume they would not be

1179
00:46:15,040 --> 00:46:17,040
we would code it so there would not be

1180
00:46:17,040 --> 00:46:19,119
um so what have we done so far uh the

1181
00:46:19,119 --> 00:46:21,040
work to do so we turned to the document

1182
00:46:21,040 --> 00:46:22,720
into an xml

1183
00:46:22,720 --> 00:46:24,079
um

1184
00:46:24,079 --> 00:46:26,560
put the new modern make files on top of

1185
00:46:26,560 --> 00:46:28,880
it pulled the yang modules out nicely so

1186
00:46:28,880 --> 00:46:30,319
they can be edited

1187
00:46:30,319 --> 00:46:32,560
um and compare the text file to the

1188
00:46:32,560 --> 00:46:34,720
existing thing and that we

1189
00:46:34,720 --> 00:46:36,800
that was kind of came up at the last

1190
00:46:36,800 --> 00:46:37,920
meeting

1191
00:46:37,920 --> 00:46:39,839
um so now we're going to have to revise

1192
00:46:39,839 --> 00:46:42,480
the document and uh with the propose

1193
00:46:42,480 --> 00:46:44,160
with what we need to change

1194
00:46:44,160 --> 00:46:46,720
um and then we'll get around to adopt

1195
00:46:46,720 --> 00:46:48,880
asking for working group adoption

1196
00:46:48,880 --> 00:46:50,160
it's something i certainly could use

1197
00:46:50,160 --> 00:46:51,280
help with

1198
00:46:51,280 --> 00:46:53,440
um don't have to be a co-author of the

1199
00:46:53,440 --> 00:46:55,440
original document i would say

1200
00:46:55,440 --> 00:46:56,560
um

1201
00:46:56,560 --> 00:46:58,319
and um

1202
00:46:58,319 --> 00:47:00,400
but i don't expect to run through this

1203
00:47:00,400 --> 00:47:01,839
very quickly

1204
00:47:01,839 --> 00:47:04,800
and i hope that it will get done fast

1205
00:47:04,800 --> 00:47:07,760
enough to so that brewski async and role

1206
00:47:07,760 --> 00:47:09,680
will not be delayed but i don't expect

1207
00:47:09,680 --> 00:47:13,359
to get it any done any faster than that

1208
00:47:13,359 --> 00:47:15,040
uh for that

1209
00:47:15,040 --> 00:47:16,240
um

1210
00:47:16,240 --> 00:47:18,160
so i'm still a bit unclear of the

1211
00:47:18,160 --> 00:47:19,440
working group how the working group

1212
00:47:19,440 --> 00:47:21,040
feels about this

1213
00:47:21,040 --> 00:47:23,680
um it might be worth having a consensus

1214
00:47:23,680 --> 00:47:25,920
call or some other other thing just ask

1215
00:47:25,920 --> 00:47:27,200
the working group what do you want to do

1216
00:47:27,200 --> 00:47:29,920
is this really what you want to do um

1217
00:47:29,920 --> 00:47:31,440
and i personally haven't had any time to

1218
00:47:31,440 --> 00:47:34,640
do it since i work on it since uh at itf

1219
00:47:34,640 --> 00:47:37,040
111. what i thought was that we would

1220
00:47:37,040 --> 00:47:38,720
adopt it first and then we would we

1221
00:47:38,720 --> 00:47:40,559
would that would be the consensus that

1222
00:47:40,559 --> 00:47:42,160
the working group wants to work on this

1223
00:47:42,160 --> 00:47:43,839
problem and then we would put the

1224
00:47:43,839 --> 00:47:45,359
changes and then the adopted document

1225
00:47:45,359 --> 00:47:47,280
would be identical to the original one

1226
00:47:47,280 --> 00:47:49,440
um but that's not how the group chairs

1227
00:47:49,440 --> 00:47:51,599
would like to work so that's fine uh

1228
00:47:51,599 --> 00:47:54,319
we'll continue that

1229
00:47:54,319 --> 00:47:55,520
um

1230
00:47:55,520 --> 00:47:58,319
there might be some other things that uh

1231
00:47:58,319 --> 00:48:01,520
need to be fixed in 8366 it is now

1232
00:48:01,520 --> 00:48:02,720
although it was published three years

1233
00:48:02,720 --> 00:48:04,880
ago it is you know probably more like

1234
00:48:04,880 --> 00:48:06,559
four or five years since we really had a

1235
00:48:06,559 --> 00:48:08,720
working group discussion about it

1236
00:48:08,720 --> 00:48:09,599
um

1237
00:48:09,599 --> 00:48:12,000
and one of the possibilities is whether

1238
00:48:12,000 --> 00:48:12,960
or not

1239
00:48:12,960 --> 00:48:15,040
we could go from proposed standard to

1240
00:48:15,040 --> 00:48:16,880
internet standard in this same step

1241
00:48:16,880 --> 00:48:18,720
because we're essentially we have a

1242
00:48:18,720 --> 00:48:20,240
large fair large amount of

1243
00:48:20,240 --> 00:48:22,000
interoperability experience and we're

1244
00:48:22,000 --> 00:48:23,839
essentially fixing a bug in the in the

1245
00:48:23,839 --> 00:48:25,599
document we're not really actually

1246
00:48:25,599 --> 00:48:27,760
changing anything on the document so

1247
00:48:27,760 --> 00:48:29,359
that's a possibility could we go to

1248
00:48:29,359 --> 00:48:31,839
proposed stan internet standard step two

1249
00:48:31,839 --> 00:48:33,599
at the same step and i don't i don't

1250
00:48:33,599 --> 00:48:35,599
really know about uh

1251
00:48:35,599 --> 00:48:37,280
i don't know whether that's uh whether

1252
00:48:37,280 --> 00:48:38,880
the changes would be

1253
00:48:38,880 --> 00:48:43,119
too much or not enough or what exactly

1254
00:48:43,119 --> 00:48:45,440
that's it for me

1255
00:48:45,440 --> 00:48:47,280
um i'm not quite sure about you know

1256
00:48:47,280 --> 00:48:49,040
your comment about how the chairs

1257
00:48:49,040 --> 00:48:50,800
wouldn't want to run it so remind me

1258
00:48:50,800 --> 00:48:51,599
what

1259
00:48:51,599 --> 00:48:53,599
what that was but other than that i

1260
00:48:53,599 --> 00:48:55,680
think on on your questions

1261
00:48:55,680 --> 00:48:56,800
i don't

1262
00:48:56,800 --> 00:48:58,640
i don't see any other um

1263
00:48:58,640 --> 00:49:00,800
options than doing this this seems to be

1264
00:49:00,800 --> 00:49:03,280
one of the pain costs of doing

1265
00:49:03,280 --> 00:49:06,640
work with yang and if at all i'd blame

1266
00:49:06,640 --> 00:49:08,319
it on bad

1267
00:49:08,319 --> 00:49:10,160
yang doctor review that

1268
00:49:10,160 --> 00:49:11,040
you know

1269
00:49:11,040 --> 00:49:13,839
they didn't catch a non-extensible way

1270
00:49:13,839 --> 00:49:16,480
to do something which hopefully in

1271
00:49:16,480 --> 00:49:18,880
83 66 we did

1272
00:49:18,880 --> 00:49:21,119
you know mark well enough is something

1273
00:49:21,119 --> 00:49:22,720
we wanted to extend

1274
00:49:22,720 --> 00:49:24,640
we may not have articulated our needs

1275
00:49:24,640 --> 00:49:28,240
correctly it may be that the the the the

1276
00:49:28,240 --> 00:49:32,079
state of yang four or five years ago was

1277
00:49:32,079 --> 00:49:34,400
oh we didn't think of that okay and now

1278
00:49:34,400 --> 00:49:36,640
they have so i think that's pretty uh

1279
00:49:36,640 --> 00:49:38,800
pretty part of it um one of the things

1280
00:49:38,800 --> 00:49:40,400
that we could do

1281
00:49:40,400 --> 00:49:41,680
um

1282
00:49:41,680 --> 00:49:44,559
in this revision if it wasn't urgent

1283
00:49:44,559 --> 00:49:46,960
um is we could go and collect all of the

1284
00:49:46,960 --> 00:49:48,880
extensions from all the other documents

1285
00:49:48,880 --> 00:49:49,839
right

1286
00:49:49,839 --> 00:49:52,640
i i don't know that's a great idea

1287
00:49:52,640 --> 00:49:53,520
um

1288
00:49:53,520 --> 00:49:55,440
but we could do it right it's something

1289
00:49:55,440 --> 00:49:57,680
that could happen

1290
00:49:57,680 --> 00:49:58,480
so

1291
00:49:58,480 --> 00:50:00,960
i'm not

1292
00:50:01,200 --> 00:50:03,359
i'm not sure exactly what to do

1293
00:50:03,359 --> 00:50:05,440
uh that way i think we shouldn't collect

1294
00:50:05,440 --> 00:50:07,280
all the extensions into this document

1295
00:50:07,280 --> 00:50:09,280
that those other it'll be disruptive to

1296
00:50:09,280 --> 00:50:10,880
those other documents

1297
00:50:10,880 --> 00:50:13,359
um and there if we were starting this

1298
00:50:13,359 --> 00:50:14,400
work

1299
00:50:14,400 --> 00:50:15,920
solely for the purpose of going to

1300
00:50:15,920 --> 00:50:17,839
internet standard then i would say

1301
00:50:17,839 --> 00:50:19,520
that's probably is a good idea we

1302
00:50:19,520 --> 00:50:21,280
probably would have published several

1303
00:50:21,280 --> 00:50:23,280
other documents already

1304
00:50:23,280 --> 00:50:24,960
and that maybe argue why we shouldn't

1305
00:50:24,960 --> 00:50:27,280
bother trying to do this step at this

1306
00:50:27,280 --> 00:50:28,160
point

1307
00:50:28,160 --> 00:50:30,640
um i don't know it's nice to have

1308
00:50:30,640 --> 00:50:32,480
internet standards rather than

1309
00:50:32,480 --> 00:50:34,319
proposed standards wait a second so if

1310
00:50:34,319 --> 00:50:37,520
we want to go for internet standard

1311
00:50:37,520 --> 00:50:39,839
with this document we should not add

1312
00:50:39,839 --> 00:50:42,079
more functionality the fact that we need

1313
00:50:42,079 --> 00:50:44,160
to wiggle around with the way we do

1314
00:50:44,160 --> 00:50:46,319
things in in yang is fine nobody will

1315
00:50:46,319 --> 00:50:48,160
care about that it's we need to have

1316
00:50:48,160 --> 00:50:50,480
we're correcting

1317
00:50:50,480 --> 00:50:52,160
yeah we're correcting bugs in the

1318
00:50:52,160 --> 00:50:54,480
document yeah exactly fixing bugs and

1319
00:50:54,480 --> 00:50:57,119
then i think we also need some um

1320
00:50:57,119 --> 00:50:59,280
you know implementation experience

1321
00:50:59,280 --> 00:51:01,119
document or so we've we've done this in

1322
00:51:01,119 --> 00:51:02,800
other working groups so it would be a

1323
00:51:02,800 --> 00:51:04,160
good thing right if we can show

1324
00:51:04,160 --> 00:51:06,480
implementations into ability that i

1325
00:51:06,480 --> 00:51:08,480
think would help us to do that so

1326
00:51:08,480 --> 00:51:10,720
certainly seems like the easier thing

1327
00:51:10,720 --> 00:51:13,040
now to you know get on top of the yang

1328
00:51:13,040 --> 00:51:14,880
thing because that may be you know

1329
00:51:14,880 --> 00:51:16,480
something we want to do for other

1330
00:51:16,480 --> 00:51:19,359
documents as well correctly and then do

1331
00:51:19,359 --> 00:51:20,559
the proposed

1332
00:51:20,559 --> 00:51:22,720
the go go to internet standard with it

1333
00:51:22,720 --> 00:51:24,319
that sounds like uh

1334
00:51:24,319 --> 00:51:27,839
an achievable and useful goal

1335
00:51:29,599 --> 00:51:31,440
that's all my comments maybe our area

1336
00:51:31,440 --> 00:51:33,200
director has a comment

1337
00:51:33,200 --> 00:51:34,839
on whether we can do

1338
00:51:34,839 --> 00:51:38,640
that uh my hunches you can yes i think i

1339
00:51:38,640 --> 00:51:40,640
think as you say i think um

1340
00:51:40,640 --> 00:51:42,480
summarize this up well as long as it's

1341
00:51:42,480 --> 00:51:44,559
sort of bug fixes and things going in i

1342
00:51:44,559 --> 00:51:46,160
i think that that would be fine as far

1343
00:51:46,160 --> 00:51:47,520
as i could see

1344
00:51:47,520 --> 00:51:48,480
um

1345
00:51:48,480 --> 00:51:50,000
there is a choice also to publish it was

1346
00:51:50,000 --> 00:51:52,319
ps and then the separate status change

1347
00:51:52,319 --> 00:51:54,079
document but it'd be better to one go i

1348
00:51:54,079 --> 00:51:56,319
think

1349
00:51:56,480 --> 00:51:58,559
yeah that that kind of blew in the face

1350
00:51:58,559 --> 00:52:00,079
of everybody with the beer documents

1351
00:52:00,079 --> 00:52:02,000
that were all still marcus experimental

1352
00:52:02,000 --> 00:52:04,400
in the original rfcs and while they're

1353
00:52:04,400 --> 00:52:06,480
not anymore so people learned about that

1354
00:52:06,480 --> 00:52:08,240
the status is not what the text of the

1355
00:52:08,240 --> 00:52:11,680
document actually says so

1356
00:52:12,720 --> 00:52:16,279
yes that's frustrating

1357
00:52:16,839 --> 00:52:18,720
um

1358
00:52:18,720 --> 00:52:20,880
okay um thank you very much if nobody

1359
00:52:20,880 --> 00:52:22,960
else has comments uh let's move on to

1360
00:52:22,960 --> 00:52:24,400
slot number seven

1361
00:52:24,400 --> 00:52:26,559
autonomic ip address to access control

1362
00:52:26,559 --> 00:52:28,400
group mapping yuzu can you please step

1363
00:52:28,400 --> 00:52:31,400
forward

1364
00:52:36,240 --> 00:52:39,598
let me find my slice

1365
00:52:44,470 --> 00:52:45,599
[Music]

1366
00:52:45,599 --> 00:52:48,319
okay so

1367
00:52:48,319 --> 00:52:50,000
i'm going to

1368
00:52:50,000 --> 00:52:52,720
show this this deck right

1369
00:52:52,720 --> 00:52:56,960
uh basically it is update to this uh

1370
00:52:56,960 --> 00:53:01,119
to this asa function called a autonomic

1371
00:53:01,119 --> 00:53:03,040
ip address to access control groups

1372
00:53:03,040 --> 00:53:04,960
mapping

1373
00:53:04,960 --> 00:53:08,079
let me see the next one

1374
00:53:08,079 --> 00:53:10,800
this one is basically a recap of the

1375
00:53:10,800 --> 00:53:13,200
basic idea from the

1376
00:53:13,200 --> 00:53:15,440
last version

1377
00:53:15,440 --> 00:53:18,720
we have this is a very simple campus

1378
00:53:18,720 --> 00:53:22,079
network we have asa deployed at the

1379
00:53:22,079 --> 00:53:24,160
switches or routers

1380
00:53:24,160 --> 00:53:27,359
and so the aap here stands for access

1381
00:53:27,359 --> 00:53:28,960
authentication point

1382
00:53:28,960 --> 00:53:31,440
and pep as euro is the policy

1383
00:53:31,440 --> 00:53:33,119
enforcement point

1384
00:53:33,119 --> 00:53:37,280
so we deployed the asa here in order to

1385
00:53:37,280 --> 00:53:40,880
pass around the information from the

1386
00:53:40,880 --> 00:53:42,880
the mapping information from the ip

1387
00:53:42,880 --> 00:53:45,839
address or ip prefix to the

1388
00:53:45,839 --> 00:53:46,800
access

1389
00:53:46,800 --> 00:53:48,319
control group

1390
00:53:48,319 --> 00:53:51,839
so uh the the motivation for this for

1391
00:53:51,839 --> 00:53:53,599
this work is

1392
00:53:53,599 --> 00:53:56,400
the group-based policy is becoming more

1393
00:53:56,400 --> 00:53:58,960
and more commonly deployed especially in

1394
00:53:58,960 --> 00:54:00,640
campus network

1395
00:54:00,640 --> 00:54:01,520
so

1396
00:54:01,520 --> 00:54:04,319
we would like this map information to be

1397
00:54:04,319 --> 00:54:08,640
passed from the aap to pep

1398
00:54:08,720 --> 00:54:09,520
the

1399
00:54:09,520 --> 00:54:12,000
we want to define the new grasp

1400
00:54:12,000 --> 00:54:14,079
objective we call it ip address to

1401
00:54:14,079 --> 00:54:15,920
access control groups this is pretty

1402
00:54:15,920 --> 00:54:16,880
long but

1403
00:54:16,880 --> 00:54:19,119
we couldn't figure out a shorter but

1404
00:54:19,119 --> 00:54:21,119
still precise name for it

1405
00:54:21,119 --> 00:54:24,480
so if this new objective is defined to

1406
00:54:24,480 --> 00:54:26,559
carry this information

1407
00:54:26,559 --> 00:54:29,359
uh and also this objective is supposed

1408
00:54:29,359 --> 00:54:32,000
to be used by an asa

1409
00:54:32,000 --> 00:54:34,880
we similarly we call this asa

1410
00:54:34,880 --> 00:54:37,440
and the name is ip address 2 access

1411
00:54:37,440 --> 00:54:38,960
control group

1412
00:54:38,960 --> 00:54:42,880
so this is the recap of the basic idea

1413
00:54:42,880 --> 00:54:45,839
we made some changes from the

1414
00:54:45,839 --> 00:54:48,240
last version

1415
00:54:48,240 --> 00:54:50,319
based on the feedback from mailing list

1416
00:54:50,319 --> 00:54:52,720
and some offline discussions

1417
00:54:52,720 --> 00:54:55,280
first we give a name to the essay which

1418
00:54:55,280 --> 00:54:57,520
uses which uses this

1419
00:54:57,520 --> 00:54:59,680
a new defined objective

1420
00:54:59,680 --> 00:55:04,240
and we clarify the terms pep and aap

1421
00:55:04,240 --> 00:55:05,760
basically um

1422
00:55:05,760 --> 00:55:08,160
in the context of anima there are there

1423
00:55:08,160 --> 00:55:09,119
are

1424
00:55:09,119 --> 00:55:10,480
rules

1425
00:55:10,480 --> 00:55:13,040
uh for asa

1426
00:55:13,040 --> 00:55:16,000
um supporting i mean for asa we start

1427
00:55:16,000 --> 00:55:18,480
with the same objective

1428
00:55:18,480 --> 00:55:21,200
but how this rose is going to be

1429
00:55:21,200 --> 00:55:23,359
supported

1430
00:55:23,359 --> 00:55:26,160
i think one of the remaining slides will

1431
00:55:26,160 --> 00:55:29,359
show that also we clarified the pap note

1432
00:55:29,359 --> 00:55:31,599
can also be the information provider i

1433
00:55:31,599 --> 00:55:33,839
mean the mapping information provided to

1434
00:55:33,839 --> 00:55:35,599
the other pep because

1435
00:55:35,599 --> 00:55:37,280
it's almost equivalently that

1436
00:55:37,280 --> 00:55:40,240
conceptually this pep is functioned as

1437
00:55:40,240 --> 00:55:43,839
an aap to the requesting path

1438
00:55:43,839 --> 00:55:45,920
so there are some other editorial

1439
00:55:45,920 --> 00:55:47,760
editorial changes

1440
00:55:47,760 --> 00:55:50,079
but for this for today's

1441
00:55:50,079 --> 00:55:52,640
presentation i'm going to show a few

1442
00:55:52,640 --> 00:55:53,839
examples

1443
00:55:53,839 --> 00:55:56,799
of how exactly this information will be

1444
00:55:56,799 --> 00:55:59,040
passed around

1445
00:55:59,040 --> 00:55:59,920
this

1446
00:55:59,920 --> 00:56:01,040
information

1447
00:56:01,040 --> 00:56:03,040
passing around basically i don't think

1448
00:56:03,040 --> 00:56:05,119
it will become

1449
00:56:05,119 --> 00:56:08,319
part of the standard but it would be

1450
00:56:08,319 --> 00:56:10,000
informative for

1451
00:56:10,000 --> 00:56:12,559
the readers to understand it

1452
00:56:12,559 --> 00:56:14,559
the most

1453
00:56:14,559 --> 00:56:16,880
useful part for the standard i mean the

1454
00:56:16,880 --> 00:56:18,799
standard part is most likely would be

1455
00:56:18,799 --> 00:56:19,760
the

1456
00:56:19,760 --> 00:56:23,040
uh the the information um defined for

1457
00:56:23,040 --> 00:56:25,200
the objective which is already in the

1458
00:56:25,200 --> 00:56:26,240
draft

1459
00:56:26,240 --> 00:56:29,119
so most likely the aap will provide the

1460
00:56:29,119 --> 00:56:31,440
mapping information to pep so there are

1461
00:56:31,440 --> 00:56:33,440
two stages the first one is discovery

1462
00:56:33,440 --> 00:56:36,000
the second one is negotiation

1463
00:56:36,000 --> 00:56:39,119
so the aap will send the discovery into

1464
00:56:39,119 --> 00:56:41,440
and to find out the path usually the

1465
00:56:41,440 --> 00:56:43,760
number of pepsi is quite limited in a

1466
00:56:43,760 --> 00:56:45,920
campus network there might be only two

1467
00:56:45,920 --> 00:56:48,079
of them all three maybe

1468
00:56:48,079 --> 00:56:51,119
so it will send the negotiation

1469
00:56:51,119 --> 00:56:54,400
the aap will send a negotiation to

1470
00:56:54,400 --> 00:56:55,520
try to

1471
00:56:55,520 --> 00:56:57,440
push the information

1472
00:56:57,440 --> 00:57:00,000
it knows about for the ip address and

1473
00:57:00,000 --> 00:57:02,319
the group id to all the peps so

1474
00:57:02,319 --> 00:57:04,559
basically that's the that's the most

1475
00:57:04,559 --> 00:57:08,079
common and simple uh procedures to push

1476
00:57:08,079 --> 00:57:10,000
the map information

1477
00:57:10,000 --> 00:57:10,839
and

1478
00:57:10,839 --> 00:57:15,280
the uh this slide shows the path asks

1479
00:57:15,280 --> 00:57:18,079
for this mapping information from aap

1480
00:57:18,079 --> 00:57:20,319
this is rare because

1481
00:57:20,319 --> 00:57:23,920
uh in most of the cases we think the aap

1482
00:57:23,920 --> 00:57:26,240
would voluntarily push the information

1483
00:57:26,240 --> 00:57:27,440
to perhaps

1484
00:57:27,440 --> 00:57:28,319
so

1485
00:57:28,319 --> 00:57:30,319
but there could be some corner cases

1486
00:57:30,319 --> 00:57:32,400
that have there is no pre-stored

1487
00:57:32,400 --> 00:57:34,160
information mapping information on the

1488
00:57:34,160 --> 00:57:37,119
path so when never have received the

1489
00:57:37,119 --> 00:57:39,680
first packet of floyd has to ask

1490
00:57:39,680 --> 00:57:41,920
for the ap what's the mapping

1491
00:57:41,920 --> 00:57:44,160
information for particular ip address or

1492
00:57:44,160 --> 00:57:45,599
rp prefix

1493
00:57:45,599 --> 00:57:48,160
so similarly we have discovery

1494
00:57:48,160 --> 00:57:49,760
stage then

1495
00:57:49,760 --> 00:57:52,839
instead of the negotiation we have a

1496
00:57:52,839 --> 00:57:56,480
synchronization synchronization message

1497
00:57:56,480 --> 00:57:59,599
for this procedure

1498
00:58:00,559 --> 00:58:04,000
okay so next slides uh this basically

1499
00:58:04,000 --> 00:58:07,040
shows us an example of

1500
00:58:07,040 --> 00:58:10,319
when a new path joins what may happen so

1501
00:58:10,319 --> 00:58:12,400
when the new pipe joins it try to

1502
00:58:12,400 --> 00:58:15,200
discover all the aaps because aps are

1503
00:58:15,200 --> 00:58:17,599
the owners of the mapping information so

1504
00:58:17,599 --> 00:58:20,079
the uh we're assuming that aap will

1505
00:58:20,079 --> 00:58:23,839
reply with all the information

1506
00:58:26,160 --> 00:58:29,040
what reply the information has so the

1507
00:58:29,040 --> 00:58:32,000
pap will collect the info all the all

1508
00:58:32,000 --> 00:58:33,839
the information from

1509
00:58:33,839 --> 00:58:35,680
from other aaps

1510
00:58:35,680 --> 00:58:40,400
so we gave three examples of the

1511
00:58:40,400 --> 00:58:42,079
of how this

1512
00:58:42,079 --> 00:58:42,960
uh

1513
00:58:42,960 --> 00:58:45,520
graph objective would kind of would be

1514
00:58:45,520 --> 00:58:46,960
used

1515
00:58:46,960 --> 00:58:50,799
it's not a exhaustive list but i think

1516
00:58:50,799 --> 00:58:54,559
that should cover most of the cases

1517
00:58:54,559 --> 00:58:58,240
uh besides that after we uploaded the

1518
00:58:58,240 --> 00:59:00,720
updated version we also we're still

1519
00:59:00,720 --> 00:59:02,880
receiving the comments from the list and

1520
00:59:02,880 --> 00:59:05,119
also off the list

1521
00:59:05,119 --> 00:59:08,799
we will incorporate it into the draft

1522
00:59:08,799 --> 00:59:10,160
we're trying to

1523
00:59:10,160 --> 00:59:12,319
there are three major

1524
00:59:12,319 --> 00:59:14,480
changes we are going to make the first

1525
00:59:14,480 --> 00:59:17,760
one is the conveying message originally

1526
00:59:17,760 --> 00:59:19,599
we want to use the unsolicited

1527
00:59:19,599 --> 00:59:22,559
synchronization but brian

1528
00:59:22,559 --> 00:59:25,599
pointed out it may not be ready for use

1529
00:59:25,599 --> 00:59:28,720
so we change it to the negotiation

1530
00:59:28,720 --> 00:59:31,119
this is basically to avoid the tcp long

1531
00:59:31,119 --> 00:59:32,799
connection problem

1532
00:59:32,799 --> 00:59:36,079
and we want to the second change we're

1533
00:59:36,079 --> 00:59:38,480
going to make is to allow the discovery

1534
00:59:38,480 --> 00:59:42,319
message in rapid mode

1535
00:59:42,319 --> 00:59:44,799
to be used in order to accelerate the

1536
00:59:44,799 --> 00:59:47,440
procedures then the last one is

1537
00:59:47,440 --> 00:59:50,559
as the i think the first or second page

1538
00:59:50,559 --> 00:59:54,079
says we have a role which that basically

1539
00:59:54,079 --> 00:59:56,640
it tells me it tells the

1540
00:59:56,640 --> 00:59:57,440
uh

1541
00:59:57,440 --> 01:00:00,880
tells whether it is an aap or is a pep

1542
01:00:00,880 --> 01:00:01,839
so

1543
01:00:01,839 --> 01:00:04,000
we are trying to

1544
01:00:04,000 --> 01:00:06,880
use the objective name

1545
01:00:06,880 --> 01:00:10,079
uh with the ip address to access control

1546
01:00:10,079 --> 01:00:13,040
group dot aap and dot pap for

1547
01:00:13,040 --> 01:00:14,960
multiplexing purpose

1548
01:00:14,960 --> 01:00:19,280
that's an easy fix and a quick fix for

1549
01:00:19,280 --> 01:00:23,440
for our for the function of row to work

1550
01:00:23,440 --> 01:00:26,960
also thanks to brian to suggest this

1551
01:00:26,960 --> 01:00:29,839
quick fix so this is what we are going

1552
01:00:29,839 --> 01:00:31,680
we we haven't but we are going to

1553
01:00:31,680 --> 01:00:34,480
incorporate to the next version

1554
01:00:34,480 --> 01:00:37,680
the next step is we'll revise the draft

1555
01:00:37,680 --> 01:00:40,480
accordingly as we show in the previous

1556
01:00:40,480 --> 01:00:41,440
page

1557
01:00:41,440 --> 01:00:43,040
and upload it

1558
01:00:43,040 --> 01:00:44,880
uh when the chat when the uploading

1559
01:00:44,880 --> 01:00:47,520
channel reopens or it's already reopened

1560
01:00:47,520 --> 01:00:48,559
i don't know

1561
01:00:48,559 --> 01:00:51,200
so uh the authors would like to call for

1562
01:00:51,200 --> 01:00:52,240
adoption

1563
01:00:52,240 --> 01:00:55,200
for the next revision we think

1564
01:00:55,200 --> 01:00:58,720
it's uh it's it's is pretty um

1565
01:00:58,720 --> 01:01:02,079
clear and ready for adoption i think

1566
01:01:02,079 --> 01:01:04,559
that's the last page

1567
01:01:04,559 --> 01:01:07,760
yeah that's the last page

1568
01:01:07,760 --> 01:01:10,400
any questions comments or

1569
01:01:10,400 --> 01:01:14,240
or suggestions to this document

1570
01:01:19,280 --> 01:01:20,240
so the

1571
01:01:20,240 --> 01:01:22,160
the thing i'd i'd really love to see

1572
01:01:22,160 --> 01:01:24,240
even if it's kind of you know maybe

1573
01:01:24,240 --> 01:01:25,920
outside of the

1574
01:01:25,920 --> 01:01:28,559
scope that you were intending to

1575
01:01:28,559 --> 01:01:31,119
have is you know a really

1576
01:01:31,119 --> 01:01:33,119
um

1577
01:01:33,119 --> 01:01:35,680
an example of of an actual service

1578
01:01:35,680 --> 01:01:38,400
instance with the service parameters so

1579
01:01:38,400 --> 01:01:40,319
that somebody could build a prototype

1580
01:01:40,319 --> 01:01:42,240
implementation of this that actually did

1581
01:01:42,240 --> 01:01:43,200
something

1582
01:01:43,200 --> 01:01:45,680
um in an improbable fashion so i don't

1583
01:01:45,680 --> 01:01:47,680
know what you're kind of a real great

1584
01:01:47,680 --> 01:01:50,400
example for such a service would be

1585
01:01:50,400 --> 01:01:52,240
because it's it's so abstract that i

1586
01:01:52,240 --> 01:01:55,119
can't even circle in on um you know

1587
01:01:55,119 --> 01:01:57,520
what what type of us that you know would

1588
01:01:57,520 --> 01:02:00,400
most likely be a good first

1589
01:02:00,400 --> 01:02:04,240
um you know first implementation or

1590
01:02:04,240 --> 01:02:06,160
target so i think that

1591
01:02:06,160 --> 01:02:10,078
such an example would be great

1592
01:02:10,880 --> 01:02:12,000
okay

1593
01:02:12,000 --> 01:02:13,280
so maybe

1594
01:02:13,280 --> 01:02:15,200
uh you you wonder you want me answer

1595
01:02:15,200 --> 01:02:17,839
this right now or you want to somehow

1596
01:02:17,839 --> 01:02:21,200
maybe put it too late system

1597
01:02:23,760 --> 01:02:25,760
with an example section

1598
01:02:25,760 --> 01:02:26,960
of uh

1599
01:02:26,960 --> 01:02:28,720
showing you know uh

1600
01:02:28,720 --> 01:02:30,799
here is how you would adopt this

1601
01:02:30,799 --> 01:02:31,680
um

1602
01:02:31,680 --> 01:02:34,880
for a particular service um and that

1603
01:02:34,880 --> 01:02:35,839
that

1604
01:02:35,839 --> 01:02:37,920
service is exactly named uh whatever

1605
01:02:37,920 --> 01:02:40,640
that qs thing is the parameters of that

1606
01:02:40,640 --> 01:02:42,480
and and and then the graph the stuff of

1607
01:02:42,480 --> 01:02:43,520
it

1608
01:02:43,520 --> 01:02:45,680
okay i see then that makes sense yeah

1609
01:02:45,680 --> 01:02:46,400
it's

1610
01:02:46,400 --> 01:02:48,319
a little bit like an appendix

1611
01:02:48,319 --> 01:02:50,720
informative appendix try to elaborate

1612
01:02:50,720 --> 01:02:53,280
more rightness yeah but then appendix

1613
01:02:53,280 --> 01:02:55,440
ultimately would i think also allow us

1614
01:02:55,440 --> 01:02:57,760
to figure out and i think that is the

1615
01:02:57,760 --> 01:02:59,839
the really important uh

1616
01:02:59,839 --> 01:03:03,200
part toward this

1617
01:03:03,200 --> 01:03:04,720
the spec

1618
01:03:04,720 --> 01:03:07,440
if or how we would may need to create

1619
01:03:07,440 --> 01:03:09,280
registries where

1620
01:03:09,280 --> 01:03:10,960
actual services that want to get

1621
01:03:10,960 --> 01:03:13,520
standardized would go in and if we have

1622
01:03:13,520 --> 01:03:15,200
services that are not standardized right

1623
01:03:15,200 --> 01:03:18,480
so if we basically pick up uh the grasp

1624
01:03:18,480 --> 01:03:20,160
stuff that is in here we need to very

1625
01:03:20,160 --> 01:03:22,880
precisely understand how application can

1626
01:03:22,880 --> 01:03:24,400
use it in a

1627
01:03:24,400 --> 01:03:27,039
proprietary and or standardized fashion

1628
01:03:27,039 --> 01:03:29,039
and that's where you know an example is

1629
01:03:29,039 --> 01:03:30,720
is really helpful to identify these

1630
01:03:30,720 --> 01:03:32,559
extension points and then start for the

1631
01:03:32,559 --> 01:03:35,920
grasp stuff here the same uh difficult

1632
01:03:35,920 --> 01:03:38,480
discussion about ayana registries or you

1633
01:03:38,480 --> 01:03:41,039
know other things to to really be good

1634
01:03:41,039 --> 01:03:44,640
about the extension points

1635
01:03:44,640 --> 01:03:47,759
yeah i got you thank you

1636
01:03:57,520 --> 01:03:58,400
okay

1637
01:03:58,400 --> 01:04:01,680
any uh other questions

1638
01:04:03,599 --> 01:04:06,559
i think then we're up to number eight

1639
01:04:06,559 --> 01:04:08,640
autonomic mechanism for resource-based

1640
01:04:08,640 --> 01:04:10,960
network services auto deployment

1641
01:04:10,960 --> 01:04:14,079
uh using uh can you please step forward

1642
01:04:14,079 --> 01:04:17,520
okay okay okay

1643
01:04:17,520 --> 01:04:20,000
okay

1644
01:04:20,079 --> 01:04:22,319
yes

1645
01:04:23,440 --> 01:04:27,839
okay can you hear my screen

1646
01:04:30,000 --> 01:04:30,880
okay

1647
01:04:30,880 --> 01:04:35,599
uh i have my and how you see my screen

1648
01:04:35,839 --> 01:04:38,319
yep we can see your screen

1649
01:04:38,319 --> 01:04:40,720
oh okay let's start i'm

1650
01:04:40,720 --> 01:04:43,760
i'm using speaking uh today i will

1651
01:04:43,760 --> 01:04:46,079
presentation the draft

1652
01:04:46,079 --> 01:04:49,039
auto deployment mechanism for resource

1653
01:04:49,039 --> 01:04:52,400
bases and network uh network service

1654
01:04:52,400 --> 01:04:57,440
and in the ietf 111 drama starter trust

1655
01:04:57,440 --> 01:05:02,160
draft to this classes on o2d1 department

1656
01:05:02,160 --> 01:05:04,799
mechanism that deploys the

1657
01:05:04,799 --> 01:05:07,680
resource-based network service through

1658
01:05:07,680 --> 01:05:10,960
the acp and by using grasp

1659
01:05:10,960 --> 01:05:12,880
and this draft

1660
01:05:12,880 --> 01:05:15,520
describes the negotiation between the

1661
01:05:15,520 --> 01:05:19,920
resource required node to the required

1662
01:05:19,920 --> 01:05:22,400
to the results provider node

1663
01:05:22,400 --> 01:05:26,880
and this draft want to describe how the

1664
01:05:26,880 --> 01:05:30,000
asa manages the results in the network

1665
01:05:30,000 --> 01:05:33,000
automatically

1666
01:05:33,280 --> 01:05:34,559
okay

1667
01:05:34,559 --> 01:05:37,599
according to the mailing discussion the

1668
01:05:37,599 --> 01:05:39,920
new version returned a lot and we

1669
01:05:39,920 --> 01:05:42,240
summarize the major changes in the

1670
01:05:42,240 --> 01:05:44,400
volume modification

1671
01:05:44,400 --> 01:05:47,599
so first is that the drafts sort out the

1672
01:05:47,599 --> 01:05:51,039
definition of the network elements

1673
01:05:51,039 --> 01:05:52,079
and the

1674
01:05:52,079 --> 01:05:55,920
second the draft is plans more details

1675
01:05:55,920 --> 01:05:59,039
about the resource process with a

1676
01:05:59,039 --> 01:06:02,000
suggestion from the boy and michael and

1677
01:06:02,000 --> 01:06:05,680
it is most important change in our draft

1678
01:06:05,680 --> 01:06:09,599
we made the our process more clearly

1679
01:06:09,599 --> 01:06:13,280
and the third is that according to the

1680
01:06:13,280 --> 01:06:14,960
resource process

1681
01:06:14,960 --> 01:06:17,839
we simplify the autonomic resource

1682
01:06:17,839 --> 01:06:19,520
management

1683
01:06:19,520 --> 01:06:22,720
objectives to make the negotiation more

1684
01:06:22,720 --> 01:06:26,000
flexible and some unuseful parameters

1685
01:06:26,000 --> 01:06:28,960
will be delayed

1686
01:06:28,960 --> 01:06:30,079
first of all

1687
01:06:30,079 --> 01:06:31,520
clay is

1688
01:06:31,520 --> 01:06:34,720
they redefine some uh terminology and

1689
01:06:34,720 --> 01:06:37,520
the the first way should i emphasize is

1690
01:06:37,520 --> 01:06:40,319
uh resource manager aisa

1691
01:06:40,319 --> 01:06:43,200
and the resource manager asa is a candle

1692
01:06:43,200 --> 01:06:46,640
for autonomous server agents and it

1693
01:06:46,640 --> 01:06:49,839
manages the results in the network it is

1694
01:06:49,839 --> 01:06:52,880
the most important important part in our

1695
01:06:52,880 --> 01:06:54,880
draft and the

1696
01:06:54,880 --> 01:06:57,280
others is other

1697
01:06:57,280 --> 01:07:02,079
we should emphasize is si and ape and as

1698
01:07:02,079 --> 01:07:04,880
the border rotor and they play a

1699
01:07:04,880 --> 01:07:08,240
different role in the auto deployment

1700
01:07:08,240 --> 01:07:12,480
mechanism size and both of them contains

1701
01:07:12,480 --> 01:07:16,160
resource manager asa

1702
01:07:16,799 --> 01:07:19,359
on this page we introduce

1703
01:07:19,359 --> 01:07:23,359
house to asa manages uh results in the

1704
01:07:23,359 --> 01:07:24,480
network

1705
01:07:24,480 --> 01:07:28,000
so resource manager aic is often divided

1706
01:07:28,000 --> 01:07:30,720
to the request requesting results

1707
01:07:30,720 --> 01:07:33,520
manager is assigned providing resource

1708
01:07:33,520 --> 01:07:38,160
manager asa under the communicates

1709
01:07:38,160 --> 01:07:41,200
communicate by using grasp manager under

1710
01:07:41,200 --> 01:07:44,400
the acp and the

1711
01:07:44,400 --> 01:07:47,440
auto deployment mechanism process

1712
01:07:47,440 --> 01:07:49,520
includes three parts

1713
01:07:49,520 --> 01:07:52,079
the first is this recovery part under

1714
01:07:52,079 --> 01:07:52,880
the

1715
01:07:52,880 --> 01:07:56,079
next isn't resource negotiation part and

1716
01:07:56,079 --> 01:07:56,799
the

1717
01:07:56,799 --> 01:07:59,440
behavior after negotiation

1718
01:07:59,440 --> 01:08:02,400
and in the discovery part of resource

1719
01:08:02,400 --> 01:08:05,760
major assays and a discovery message

1720
01:08:05,760 --> 01:08:09,839
to the to discover other resource-minded

1721
01:08:09,839 --> 01:08:11,520
and

1722
01:08:11,520 --> 01:08:13,119
it defines

1723
01:08:13,119 --> 01:08:17,640
in the lighting's rfc890

1724
01:08:18,000 --> 01:08:22,080
and in the resource negotiation the

1725
01:08:22,080 --> 01:08:25,439
resource measure it as a negotiation

1726
01:08:25,439 --> 01:08:29,198
resource by using the resource manager

1727
01:08:29,198 --> 01:08:32,238
manager grasp objective uh this

1728
01:08:32,238 --> 01:08:35,279
objective will design we defined in our

1729
01:08:35,279 --> 01:08:36,319
draft

1730
01:08:36,319 --> 01:08:39,600
and we will introduce the next page

1731
01:08:39,600 --> 01:08:40,799
another

1732
01:08:40,799 --> 01:08:44,000
resource negotiation may take place in

1733
01:08:44,000 --> 01:08:45,759
several rounds and

1734
01:08:45,759 --> 01:08:48,799
in each round uh requested

1735
01:08:48,799 --> 01:08:51,759
requesting resource manager asa can

1736
01:08:51,759 --> 01:08:55,520
request more resource according to the

1737
01:08:55,520 --> 01:08:57,359
aes requirements

1738
01:08:57,359 --> 01:09:00,640
and it will decide either each round how

1739
01:09:00,640 --> 01:09:03,279
large resources

1740
01:09:03,279 --> 01:09:05,679
they should to be offered

1741
01:09:05,679 --> 01:09:08,560
and as for the providing resource

1742
01:09:08,560 --> 01:09:11,679
manager aic it responds the whole large

1743
01:09:11,679 --> 01:09:14,799
resource they can offer and

1744
01:09:14,799 --> 01:09:15,839
they can

1745
01:09:15,839 --> 01:09:19,040
offer to the repressing resource manager

1746
01:09:19,040 --> 01:09:20,719
aic

1747
01:09:20,719 --> 01:09:23,759
and in the behavioral after negotiation

1748
01:09:23,759 --> 01:09:27,279
part of the uh research the nato agent

1749
01:09:27,279 --> 01:09:30,158
is already under the resource provider

1750
01:09:30,158 --> 01:09:32,719
asa should remove

1751
01:09:32,719 --> 01:09:36,319
a accept accessible results from its

1752
01:09:36,319 --> 01:09:38,080
resource pool and the

1753
01:09:38,080 --> 01:09:41,040
synchronization with other asa in the

1754
01:09:41,040 --> 01:09:44,000
domain by using grass following message

1755
01:09:44,000 --> 01:09:46,238
to tell other

1756
01:09:46,238 --> 01:09:48,479
asa such this

1757
01:09:48,479 --> 01:09:51,678
resource is used

1758
01:09:52,080 --> 01:09:54,560
uh there are two cases are about the

1759
01:09:54,560 --> 01:09:57,040
house as a auto

1760
01:09:57,040 --> 01:09:59,280
deployment resource

1761
01:09:59,280 --> 01:10:01,040
in the case one

1762
01:10:01,040 --> 01:10:05,040
isi standard force server initiator need

1763
01:10:05,040 --> 01:10:07,760
a resource to support its air

1764
01:10:07,760 --> 01:10:08,880
so

1765
01:10:08,880 --> 01:10:09,920
service

1766
01:10:09,920 --> 01:10:13,360
and as as i will use this auto

1767
01:10:13,360 --> 01:10:16,960
deployment mechanism to negotiate with

1768
01:10:16,960 --> 01:10:19,199
apu to try to resort

1769
01:10:19,199 --> 01:10:22,640
results to support their service and in

1770
01:10:22,640 --> 01:10:26,880
this part this space as i will as

1771
01:10:26,880 --> 01:10:30,800
a graduate negotiation initiator

1772
01:10:30,800 --> 01:10:33,679
but if your mutable

1773
01:10:33,679 --> 01:10:37,600
mutable network has light in place 2 so

1774
01:10:37,600 --> 01:10:41,679
ape should get a result from the asbr

1775
01:10:41,679 --> 01:10:44,800
before it responds the

1776
01:10:44,800 --> 01:10:48,719
so the apu should send a waiting message

1777
01:10:48,719 --> 01:10:51,360
to the assad to extend its time out

1778
01:10:51,360 --> 01:10:54,800
anderson the ape should negotiate with

1779
01:10:54,800 --> 01:10:58,960
the results with asbr

1780
01:10:58,960 --> 01:11:02,480
okay and this page is about the update

1781
01:11:02,480 --> 01:11:04,880
uh graphical objective

1782
01:11:04,880 --> 01:11:05,760
and

1783
01:11:05,760 --> 01:11:09,760
this uh grasp objective the name is

1784
01:11:09,760 --> 01:11:12,960
resource manager the users need to be

1785
01:11:12,960 --> 01:11:15,440
added to the grasp objective name

1786
01:11:15,440 --> 01:11:17,199
registry

1787
01:11:17,199 --> 01:11:18,719
under the

1788
01:11:18,719 --> 01:11:22,080
lobe taunt and objective file

1789
01:11:22,080 --> 01:11:25,840
we defined as in the grasp

1790
01:11:25,840 --> 01:11:29,280
should emphasize that uh different

1791
01:11:29,280 --> 01:11:30,800
for the div

1792
01:11:30,800 --> 01:11:33,120
resource type and the resource value

1793
01:11:33,120 --> 01:11:35,840
different resource type of wait time

1794
01:11:35,840 --> 01:11:39,400
requests today

1795
01:11:40,000 --> 01:11:43,920
okay uh there are some questions to the

1796
01:11:43,920 --> 01:11:47,520
uh discussed in the future under the

1797
01:11:47,520 --> 01:11:50,640
first is how to establish

1798
01:11:50,640 --> 01:11:54,080
how to deal deployment mechanism to

1799
01:11:54,080 --> 01:11:57,440
release or increase the results when the

1800
01:11:57,440 --> 01:12:00,480
server initiator changes need

1801
01:12:00,480 --> 01:12:03,440
another question is that if the two as i

1802
01:12:03,440 --> 01:12:06,880
say are in a different different domain

1803
01:12:06,880 --> 01:12:09,520
what are the rules they should follow

1804
01:12:09,520 --> 01:12:10,800
and uh

1805
01:12:10,800 --> 01:12:13,520
about this question brian wrote me some

1806
01:12:13,520 --> 01:12:16,719
suggestions uh suggestion and i will add

1807
01:12:16,719 --> 01:12:20,239
this in the next word lecture

1808
01:12:20,239 --> 01:12:22,400
uh the next step we

1809
01:12:22,400 --> 01:12:24,000
will

1810
01:12:24,000 --> 01:12:27,120
plan to discuss some more open issue and

1811
01:12:27,120 --> 01:12:29,840
update some in the next version

1812
01:12:29,840 --> 01:12:33,360
uh the last question is that riser do

1813
01:12:33,360 --> 01:12:34,640
you think

1814
01:12:34,640 --> 01:12:38,880
this is a useful word for anima and the

1815
01:12:38,880 --> 01:12:42,480
draft is ready for adoption

1816
01:12:42,480 --> 01:12:44,640
okay that's all my

1817
01:12:44,640 --> 01:12:45,679
uh

1818
01:12:45,679 --> 01:12:46,640
thought

1819
01:12:46,640 --> 01:12:48,159
all my thoughts

1820
01:12:48,159 --> 01:12:50,320
thank you

1821
01:12:50,320 --> 01:12:51,679
thank you

1822
01:12:51,679 --> 01:12:52,800
um

1823
01:12:52,800 --> 01:12:54,960
yeah i think the uh

1824
01:12:54,960 --> 01:12:57,120
the same comment as on the last document

1825
01:12:57,120 --> 01:13:00,400
uh an example um with really all the

1826
01:13:00,400 --> 01:13:02,719
concrete parameters and everything so

1827
01:13:02,719 --> 01:13:03,760
that

1828
01:13:03,760 --> 01:13:05,280
something could be implemented to

1829
01:13:05,280 --> 01:13:07,360
actually show

1830
01:13:07,360 --> 01:13:09,360
how how this would work in reality would

1831
01:13:09,360 --> 01:13:10,960
help i think a lot of

1832
01:13:10,960 --> 01:13:12,560
reviewers

1833
01:13:12,560 --> 01:13:17,320
and other working group members to

1834
01:13:18,560 --> 01:13:20,800
better better understand it and and and

1835
01:13:20,800 --> 01:13:24,239
comment on it um michael

1836
01:13:26,880 --> 01:13:29,440
so about the crosstalk about the crop

1837
01:13:29,440 --> 01:13:31,440
the lane uh question

1838
01:13:31,440 --> 01:13:33,040
um

1839
01:13:33,040 --> 01:13:35,120
we had a lot of conversation about about

1840
01:13:35,120 --> 01:13:37,360
building acps across domains at some

1841
01:13:37,360 --> 01:13:38,400
point

1842
01:13:38,400 --> 01:13:39,280
um

1843
01:13:39,280 --> 01:13:42,400
and i think it's really important to

1844
01:13:42,400 --> 01:13:43,920
understand

1845
01:13:43,920 --> 01:13:44,800
uh

1846
01:13:44,800 --> 01:13:47,679
what is the use case

1847
01:13:47,679 --> 01:13:49,040
for this

1848
01:13:49,040 --> 01:13:51,199
to understand what is the appropriate

1849
01:13:51,199 --> 01:13:52,400
trust

1850
01:13:52,400 --> 01:13:53,600
um

1851
01:13:53,600 --> 01:13:54,880
for that

1852
01:13:54,880 --> 01:13:56,239
um

1853
01:13:56,239 --> 01:13:57,760
and it might be

1854
01:13:57,760 --> 01:14:02,960
that um this is a case for needing um

1855
01:14:02,960 --> 01:14:05,040
authentication and grasp

1856
01:14:05,040 --> 01:14:08,400
um or it might be that this is the case

1857
01:14:08,400 --> 01:14:10,800
for uh actually

1858
01:14:10,800 --> 01:14:12,960
i think your diagram kind of and hints

1859
01:14:12,960 --> 01:14:14,400
at this here

1860
01:14:14,400 --> 01:14:16,960
that to go across domain that we somehow

1861
01:14:16,960 --> 01:14:18,400
create a

1862
01:14:18,400 --> 01:14:21,360
uh some asas that that do this

1863
01:14:21,360 --> 01:14:23,520
application layer uh stuff between the

1864
01:14:23,520 --> 01:14:24,640
two of them

1865
01:14:24,640 --> 01:14:25,600
um

1866
01:14:25,600 --> 01:14:27,120
but i think that what is the right

1867
01:14:27,120 --> 01:14:29,280
answer depends upon what it is that

1868
01:14:29,280 --> 01:14:30,880
you're doing and i think that we need

1869
01:14:30,880 --> 01:14:32,480
some examples and maybe this doesn't

1870
01:14:32,480 --> 01:14:34,400
apply for all

1871
01:14:34,400 --> 01:14:36,159
all things maybe the same answer doesn't

1872
01:14:36,159 --> 01:14:37,760
apply for all things

1873
01:14:37,760 --> 01:14:39,679
so that's what i would ask is is that

1874
01:14:39,679 --> 01:14:41,280
that be called out a little bit more

1875
01:14:41,280 --> 01:14:43,520
clearly uh in the document what is the

1876
01:14:43,520 --> 01:14:47,920
example for the cross domain scenario

1877
01:14:48,239 --> 01:14:49,920
um

1878
01:14:49,920 --> 01:14:52,400
okay okay i will think about this

1879
01:14:52,400 --> 01:14:54,239
question and

1880
01:14:54,239 --> 01:14:59,120
i think her way in this draft we want to

1881
01:14:59,120 --> 01:15:02,400
uh discuss a negotiation

1882
01:15:02,400 --> 01:15:05,920
process and always think what they are

1883
01:15:05,920 --> 01:15:09,120
the scenario in the different domain

1884
01:15:09,120 --> 01:15:11,199
they will have some more

1885
01:15:11,199 --> 01:15:13,600
problem about us

1886
01:15:13,600 --> 01:15:17,440
supporters security but i see security

1887
01:15:17,440 --> 01:15:20,719
but i think this is a shouldn't

1888
01:15:20,719 --> 01:15:24,560
uh discuss in our draft but i will think

1889
01:15:24,560 --> 01:15:27,760
this more detail underway can't discuss

1890
01:15:27,760 --> 01:15:30,640
in the mailing list

1891
01:15:30,640 --> 01:15:32,560
okay that that would be great i i'm just

1892
01:15:32,560 --> 01:15:34,400
saying that i think that

1893
01:15:34,400 --> 01:15:36,960
before you go to the effort of saying

1894
01:15:36,960 --> 01:15:39,760
explaining how to do this cross domain

1895
01:15:39,760 --> 01:15:41,040
tell me

1896
01:15:41,040 --> 01:15:42,239
what

1897
01:15:42,239 --> 01:15:44,159
why would i ever want to do that why

1898
01:15:44,159 --> 01:15:46,159
would i ever want to deploy a resource

1899
01:15:46,159 --> 01:15:47,360
across this

1900
01:15:47,360 --> 01:15:49,040
and i think that we need some real

1901
01:15:49,040 --> 01:15:52,880
concrete uh things to say what they are

1902
01:15:52,880 --> 01:15:56,320
uh for that um and you know i can think

1903
01:15:56,320 --> 01:15:58,880
of some like optical paths or other

1904
01:15:58,880 --> 01:16:00,719
layer two vpns or something that have to

1905
01:16:00,719 --> 01:16:02,239
cross multiple providers or something

1906
01:16:02,239 --> 01:16:03,199
like this

1907
01:16:03,199 --> 01:16:04,159
um

1908
01:16:04,159 --> 01:16:05,040
but

1909
01:16:05,040 --> 01:16:07,840
i i think that that needs to have some

1910
01:16:07,840 --> 01:16:09,679
like the word acros the word domain

1911
01:16:09,679 --> 01:16:12,159
shows up 14 times in your document but

1912
01:16:12,159 --> 01:16:13,920
only two times with cross domain and it

1913
01:16:13,920 --> 01:16:15,760
never explains why so that's what i'm

1914
01:16:15,760 --> 01:16:17,280
asking so before you solve that hard

1915
01:16:17,280 --> 01:16:19,280
problem ask yourself if it needs to be

1916
01:16:19,280 --> 01:16:22,560
solved is what i'm trying to ask

1917
01:16:22,560 --> 01:16:25,360
okay okay

1918
01:16:26,159 --> 01:16:28,560
michael allow me to answer you um

1919
01:16:28,560 --> 01:16:30,960
as a co-author for this draft

1920
01:16:30,960 --> 01:16:33,679
first of all we are not going to solve

1921
01:16:33,679 --> 01:16:35,840
that in this draft

1922
01:16:35,840 --> 01:16:38,640
um that's out of scope

1923
01:16:38,640 --> 01:16:41,360
because for all those

1924
01:16:41,360 --> 01:16:42,960
efforts we had

1925
01:16:42,960 --> 01:16:46,159
in enema we are actually limit ourself

1926
01:16:46,159 --> 01:16:48,719
in our single domain

1927
01:16:48,719 --> 01:16:52,000
that's why the brands suggesting said

1928
01:16:52,000 --> 01:16:53,040
you know

1929
01:16:53,040 --> 01:16:55,120
it's the three separate

1930
01:16:55,120 --> 01:16:56,480
into two

1931
01:16:56,480 --> 01:16:58,159
domains and

1932
01:16:58,159 --> 01:17:01,440
but we do have the use case

1933
01:17:01,440 --> 01:17:04,560
in in the real world we lead the

1934
01:17:04,560 --> 01:17:06,640
cross-domain uh

1935
01:17:06,640 --> 01:17:07,840
coordination

1936
01:17:07,840 --> 01:17:09,120
um

1937
01:17:09,120 --> 01:17:11,760
mostly for the you know

1938
01:17:11,760 --> 01:17:14,640
undertrained um

1939
01:17:14,640 --> 01:17:16,480
quality

1940
01:17:16,480 --> 01:17:17,679
guarantees

1941
01:17:17,679 --> 01:17:21,520
uh if you only in currently one um

1942
01:17:21,520 --> 01:17:24,880
because they if there are cross-domain

1943
01:17:24,880 --> 01:17:28,480
paths uh from and understand the past

1944
01:17:28,480 --> 01:17:31,280
it will have only response resolved in

1945
01:17:31,280 --> 01:17:34,320
one domain uh in another domain you

1946
01:17:34,320 --> 01:17:37,120
actually has the pas another part of

1947
01:17:37,120 --> 01:17:40,640
this pass for the best efforts then that

1948
01:17:40,640 --> 01:17:44,320
means whatever you have on on the one

1949
01:17:44,320 --> 01:17:47,040
single domain with whatever resource you

1950
01:17:47,040 --> 01:17:49,280
have you may waste that

1951
01:17:49,280 --> 01:17:52,480
because the the in another domain

1952
01:17:52,480 --> 01:17:54,719
the latency or whatever the quality may

1953
01:17:54,719 --> 01:17:56,239
get get

1954
01:17:56,239 --> 01:17:59,600
damaged by the best efforts so we do

1955
01:17:59,600 --> 01:18:01,600
need the cooperation

1956
01:18:01,600 --> 01:18:04,800
but again that's not the purpose of our

1957
01:18:04,800 --> 01:18:05,920
draft

1958
01:18:05,920 --> 01:18:08,480
our draft actually focus on you know

1959
01:18:08,480 --> 01:18:11,120
show that in single domain and how to

1960
01:18:11,120 --> 01:18:13,679
cooperate in cross domain that's another

1961
01:18:13,679 --> 01:18:15,120
issue

1962
01:18:15,120 --> 01:18:18,960
we have to have this single domain um

1963
01:18:18,960 --> 01:18:20,560
solved first

1964
01:18:20,560 --> 01:18:21,360
right

1965
01:18:21,360 --> 01:18:23,440
i'm actually i think i'm saying exactly

1966
01:18:23,440 --> 01:18:25,120
that i'm saying

1967
01:18:25,120 --> 01:18:27,040
why are you trying to why are you

1968
01:18:27,040 --> 01:18:28,960
introducing the question across domain

1969
01:18:28,960 --> 01:18:31,120
if

1970
01:18:33,600 --> 01:18:34,560
oh

1971
01:18:34,560 --> 01:18:35,760
yeah

1972
01:18:35,760 --> 01:18:38,239
points taking so much money

1973
01:18:38,239 --> 01:18:39,120
that's

1974
01:18:39,120 --> 01:18:41,840
you draft

1975
01:18:43,040 --> 01:18:45,360
thanks

1976
01:18:48,800 --> 01:18:51,199
all right

1977
01:18:51,360 --> 01:18:54,839
any more questions

1978
01:18:55,679 --> 01:18:58,480
okay then i think i'll be the next

1979
01:18:58,480 --> 01:19:01,480
speaker

1980
01:19:10,719 --> 01:19:12,960
all right so this is about the the two

1981
01:19:12,960 --> 01:19:14,480
drafts

1982
01:19:14,480 --> 01:19:18,000
that i already presented on itf 112

1983
01:19:18,000 --> 01:19:21,280
uh so the grasdian ssd and the nmr

1984
01:19:21,280 --> 01:19:23,520
services dns auto config

1985
01:19:23,520 --> 01:19:25,840
just wanted to quickly uh

1986
01:19:25,840 --> 01:19:27,360
explain what we

1987
01:19:27,360 --> 01:19:29,120
again what they're about and where we

1988
01:19:29,120 --> 01:19:33,600
stand um so the dns draft is uh wasn't

1989
01:19:33,600 --> 01:19:35,520
updated since 111

1990
01:19:35,520 --> 01:19:37,679
and it's a specification to support the

1991
01:19:37,679 --> 01:19:39,840
equivalent of the dns sd service

1992
01:19:39,840 --> 01:19:42,159
announcement discoveries with even you

1993
01:19:42,159 --> 01:19:44,480
know better service selection parameters

1994
01:19:44,480 --> 01:19:45,679
through grasp

1995
01:19:45,679 --> 01:19:47,120
um and

1996
01:19:47,120 --> 01:19:49,360
equivalent means it's not

1997
01:19:49,360 --> 01:19:51,600
any

1998
01:19:51,600 --> 01:19:54,159
uh encoding of

1999
01:19:54,159 --> 01:19:57,600
dns resource records or mdns packet

2000
01:19:57,600 --> 01:20:00,320
headers or so into graphs but really

2001
01:20:00,320 --> 01:20:02,560
only the encoding

2002
01:20:02,560 --> 01:20:05,360
of the you know api parameters like

2003
01:20:05,360 --> 01:20:07,600
service name service weight

2004
01:20:07,600 --> 01:20:11,280
um service sharing all those uh and the

2005
01:20:11,280 --> 01:20:13,840
addresses and so the service parameters

2006
01:20:13,840 --> 01:20:16,719
which have very convoluted encoding into

2007
01:20:16,719 --> 01:20:19,040
dns resource records these service

2008
01:20:19,040 --> 01:20:21,280
records have a very simple encoding into

2009
01:20:21,280 --> 01:20:23,360
a graph objectives and that's what this

2010
01:20:23,360 --> 01:20:25,920
draft does and what this allows us to do

2011
01:20:25,920 --> 01:20:28,159
is applications that are written in the

2012
01:20:28,159 --> 01:20:29,600
expectation

2013
01:20:29,600 --> 01:20:31,840
that they're doing service discovery

2014
01:20:31,840 --> 01:20:34,480
through dns sd that they could do it

2015
01:20:34,480 --> 01:20:36,719
equivalently if not better through

2016
01:20:36,719 --> 01:20:39,440
this protocols grasp

2017
01:20:39,440 --> 01:20:41,840
api with with the same parameters and we

2018
01:20:41,840 --> 01:20:43,920
would also be able to share

2019
01:20:43,920 --> 01:20:46,239
any of the service registries and

2020
01:20:46,239 --> 01:20:49,199
operational procedures and ultimately we

2021
01:20:49,199 --> 01:20:50,400
could have

2022
01:20:50,400 --> 01:20:52,719
you know also implementations

2023
01:20:52,719 --> 01:20:54,880
automatically select a grasp when it

2024
01:20:54,880 --> 01:20:57,920
goes across the acp or dna ssd if it

2025
01:20:57,920 --> 01:21:00,400
doesn't go across the acp so i hope a

2026
01:21:00,400 --> 01:21:03,040
very fundamental good way to

2027
01:21:03,040 --> 01:21:05,679
provide the most important step of

2028
01:21:05,679 --> 01:21:09,920
self-auto configuration of asas

2029
01:21:10,480 --> 01:21:11,360
and

2030
01:21:11,360 --> 01:21:12,880
the second document

2031
01:21:12,880 --> 01:21:16,159
also we didn't update it since ietf111

2032
01:21:16,159 --> 01:21:18,880
but just to re-summarize again that was

2033
01:21:18,880 --> 01:21:20,880
actually the driver to do the first

2034
01:21:20,880 --> 01:21:23,280
document and that's really

2035
01:21:23,280 --> 01:21:25,760
the minimum amount of self-auto

2036
01:21:25,760 --> 01:21:28,960
configuration of services that we need

2037
01:21:28,960 --> 01:21:30,880
to bring the a i

2038
01:21:30,880 --> 01:21:33,199
infrastructure up to a place where the

2039
01:21:33,199 --> 01:21:35,520
most likely shortest term

2040
01:21:35,520 --> 01:21:37,280
you know deployments

2041
01:21:37,280 --> 01:21:39,520
will be able to use it and those

2042
01:21:39,520 --> 01:21:41,040
deployments would be the ones that we

2043
01:21:41,040 --> 01:21:44,800
described in rfc 8368 which is the

2044
01:21:44,800 --> 01:21:48,239
a i together with sdn controllers and so

2045
01:21:48,239 --> 01:21:49,920
we're basically talking about everything

2046
01:21:49,920 --> 01:21:52,239
the sdn controller shouldn't touch so

2047
01:21:52,239 --> 01:21:53,679
that

2048
01:21:53,679 --> 01:21:56,400
the sdn controller actually has reliable

2049
01:21:56,400 --> 01:21:58,239
connectivity

2050
01:21:58,239 --> 01:22:00,639
across the whole a i without being able

2051
01:22:00,639 --> 01:22:03,040
to break it and that particularly means

2052
01:22:03,040 --> 01:22:06,159
that we need to have syslog for

2053
01:22:06,159 --> 01:22:09,040
diagnostics we need to have ntp so that

2054
01:22:09,040 --> 01:22:11,040
our certificates are even working across

2055
01:22:11,040 --> 01:22:13,120
all the devices because we have good

2056
01:22:13,120 --> 01:22:15,760
enough time synchronization um radius

2057
01:22:15,760 --> 01:22:18,480
and diameter and ssh so that the sdn

2058
01:22:18,480 --> 01:22:20,639
controller can actually

2059
01:22:20,639 --> 01:22:24,560
connect uh you know for cli or um yang

2060
01:22:24,560 --> 01:22:27,120
netconf operations into the devices so

2061
01:22:27,120 --> 01:22:29,040
this is kind of the most core

2062
01:22:29,040 --> 01:22:31,360
infrastructure services um and and that

2063
01:22:31,360 --> 01:22:34,080
should ultimately really round up um a

2064
01:22:34,080 --> 01:22:37,040
first round of a i that can be usefully

2065
01:22:37,040 --> 01:22:41,040
deployed so um really um i i want to ask

2066
01:22:41,040 --> 01:22:43,760
uh um for the working group for adoption

2067
01:22:43,760 --> 01:22:46,400
to this so this should get on the list

2068
01:22:46,400 --> 01:22:48,320
for um you know adoption call by the

2069
01:22:48,320 --> 01:22:51,880
working group chairs

2070
01:22:52,000 --> 01:22:55,199
all right any questions

2071
01:22:56,719 --> 01:23:00,080
with my shareholder on um

2072
01:23:00,080 --> 01:23:01,520
to ask you

2073
01:23:01,520 --> 01:23:03,120
uh is there

2074
01:23:03,120 --> 01:23:06,159
any reason you cannot

2075
01:23:06,159 --> 01:23:09,679
merge this to draft into one

2076
01:23:09,679 --> 01:23:11,520
um i think that

2077
01:23:11,520 --> 01:23:12,560
is uh

2078
01:23:12,560 --> 01:23:15,199
is logically quite um

2079
01:23:15,199 --> 01:23:18,080
illogical right because uh these these

2080
01:23:18,080 --> 01:23:19,360
these services that we're talking here

2081
01:23:19,360 --> 01:23:21,440
about they're really very specific

2082
01:23:21,440 --> 01:23:23,920
um to you know um

2083
01:23:23,920 --> 01:23:25,840
ani networks as

2084
01:23:25,840 --> 01:23:27,920
you know i imagine them to be used short

2085
01:23:27,920 --> 01:23:29,920
term with rfc a3

2086
01:23:29,920 --> 01:23:31,679
um 888 and

2087
01:23:31,679 --> 01:23:34,000
the the grasp stuff is very generic

2088
01:23:34,000 --> 01:23:36,960
applicable to all you know the other

2089
01:23:36,960 --> 01:23:40,080
uses of asa and automatic functions um

2090
01:23:40,080 --> 01:23:42,239
and so you know one is defining a

2091
01:23:42,239 --> 01:23:44,400
protocol and so this you know i think

2092
01:23:44,400 --> 01:23:46,080
you'd be asking me

2093
01:23:46,080 --> 01:23:49,120
why wouldn't we have done dns sd

2094
01:23:49,120 --> 01:23:52,719
rfcs together with a bunch of

2095
01:23:52,719 --> 01:23:56,000
applications using dns sd together in a

2096
01:23:56,000 --> 01:23:59,239
single rfc

2097
01:24:03,199 --> 01:24:04,800
got you

2098
01:24:04,800 --> 01:24:06,780
but um

2099
01:24:06,780 --> 01:24:09,990
[Music]

2100
01:24:17,840 --> 01:24:20,000
okay

2101
01:24:20,000 --> 01:24:21,679
okay

2102
01:24:21,679 --> 01:24:23,120
all right um

2103
01:24:23,120 --> 01:24:24,320
so uh

2104
01:24:24,320 --> 01:24:26,480
michael do you want to say something to

2105
01:24:26,480 --> 01:24:29,520
slot 10 uh you said no slides

2106
01:24:29,520 --> 01:24:31,679
you want to step to the microphone

2107
01:24:31,679 --> 01:24:34,560
or we want to skip that slot

2108
01:24:34,560 --> 01:24:36,800
um i'll just say that the documents

2109
01:24:36,800 --> 01:24:38,080
aren't dead

2110
01:24:38,080 --> 01:24:39,920
um

2111
01:24:39,920 --> 01:24:41,280
that

2112
01:24:41,280 --> 01:24:44,400
there is some work on the derived

2113
01:24:44,400 --> 01:24:47,280
document about idev id considerations in

2114
01:24:47,280 --> 01:24:49,600
the t2trg

2115
01:24:49,600 --> 01:24:50,960
um

2116
01:24:50,960 --> 01:24:51,760
but

2117
01:24:51,760 --> 01:24:52,560
uh

2118
01:24:52,560 --> 01:24:53,840
that

2119
01:24:53,840 --> 01:24:56,320
um

2120
01:24:56,840 --> 01:24:59,840
i'm not receiving a lot of feedback that

2121
01:24:59,840 --> 01:25:01,600
says these are terribly useful documents

2122
01:25:01,600 --> 01:25:03,840
so if you disagree that would be great

2123
01:25:03,840 --> 01:25:04,800
um

2124
01:25:04,800 --> 01:25:05,600
so

2125
01:25:05,600 --> 01:25:08,800
um that's about it

2126
01:25:08,960 --> 01:25:11,760
yeah i i would think that we just don't

2127
01:25:11,760 --> 01:25:13,280
have enough operators that are

2128
01:25:13,280 --> 01:25:16,239
complaining about the specifications not

2129
01:25:16,239 --> 01:25:18,480
being sufficient to have

2130
01:25:18,480 --> 01:25:20,719
sane deployment models so i think we'll

2131
01:25:20,719 --> 01:25:22,400
just may need to wait and let them

2132
01:25:22,400 --> 01:25:24,639
linger on until we get closer to that

2133
01:25:24,639 --> 01:25:27,639
point

2134
01:25:30,159 --> 01:25:32,239
all right

2135
01:25:32,239 --> 01:25:34,639
then we're to

2136
01:25:34,639 --> 01:25:37,520
the slot 11 requirement and reference

2137
01:25:37,520 --> 01:25:40,719
model of the l2 acp-based based a i

2138
01:25:40,719 --> 01:25:44,159
draft from zoo yujing

2139
01:25:44,159 --> 01:25:47,120
before you step forward

2140
01:25:47,600 --> 01:25:49,280
i don't mean

2141
01:25:49,280 --> 01:25:51,199
my control and

2142
01:25:51,199 --> 01:25:54,678
share my screen

2143
01:25:55,040 --> 01:25:57,120
yeah you simply

2144
01:25:57,120 --> 01:25:59,840
need to click on that um icon on the

2145
01:25:59,840 --> 01:26:02,639
right of the hand

2146
01:26:04,880 --> 01:26:07,760
and then you select a random slide deck

2147
01:26:07,760 --> 01:26:09,520
and present to that

2148
01:26:09,520 --> 01:26:12,159
now let's tell it

2149
01:26:12,159 --> 01:26:13,760
yeah yes

2150
01:26:13,760 --> 01:26:15,760
okay

2151
01:26:15,760 --> 01:26:18,239
okay now i will present green chair

2152
01:26:18,239 --> 01:26:20,320
which is fine we had one presenter and

2153
01:26:20,320 --> 01:26:22,480
before doing the same thing so typically

2154
01:26:22,480 --> 01:26:25,679
it's for uh for all the participants

2155
01:26:25,679 --> 01:26:28,320
unless your slides have animations or so

2156
01:26:28,320 --> 01:26:30,560
um it's it's easier for for all

2157
01:26:30,560 --> 01:26:32,719
participants to to see the pre-shared

2158
01:26:32,719 --> 01:26:34,960
slides but please go ahead just wanted

2159
01:26:34,960 --> 01:26:36,960
to make the note

2160
01:26:36,960 --> 01:26:38,400
okay

2161
01:26:38,400 --> 01:26:40,480
uh i'm replacing

2162
01:26:40,480 --> 01:26:43,360
presentation the draft recommends under

2163
01:26:43,360 --> 01:26:44,239
the

2164
01:26:44,239 --> 01:26:48,239
reference model of layer 2 basic ai

2165
01:26:48,239 --> 01:26:51,520
and this documentary we want to discuss

2166
01:26:51,520 --> 01:26:54,960
the scenarios and the requirements of

2167
01:26:54,960 --> 01:26:58,080
layer 2 sap and it is an incident of

2168
01:26:58,080 --> 01:27:02,000
generalized ap to employment uh part of

2169
01:27:02,000 --> 01:27:04,960
an eye function in the layers of network

2170
01:27:04,960 --> 01:27:07,360
and then it shows a reference model to

2171
01:27:07,360 --> 01:27:10,000
transparent search layer to sap and as a

2172
01:27:10,000 --> 01:27:11,840
relative function

2173
01:27:11,840 --> 01:27:14,960
uh on the first page we want to talk

2174
01:27:14,960 --> 01:27:17,760
about a little

2175
01:27:17,760 --> 01:27:19,920
about the background under something

2176
01:27:19,920 --> 01:27:22,320
idea about the draft

2177
01:27:22,320 --> 01:27:26,080
uh so acp is a autonomic control player

2178
01:27:26,080 --> 01:27:29,440
and it is uh self-managing and

2179
01:27:29,440 --> 01:27:31,840
as independent as possible of

2180
01:27:31,840 --> 01:27:35,440
configuration control plan and the

2181
01:27:35,440 --> 01:27:38,159
way it can say that current sap

2182
01:27:38,159 --> 01:27:39,840
implementation

2183
01:27:39,840 --> 01:27:41,520
use ip

2184
01:27:41,520 --> 01:27:44,560
basics link to local addresses based sap

2185
01:27:44,560 --> 01:27:47,920
turno so we can say and uh

2186
01:27:47,920 --> 01:27:50,800
is that the current sap is a layer three

2187
01:27:50,800 --> 01:27:52,719
control

2188
01:27:52,719 --> 01:27:55,360
and control plane and uh however there

2189
01:27:55,360 --> 01:27:57,840
are some cases that always enter

2190
01:27:57,840 --> 01:28:02,080
required is in layer 2 sap functions

2191
01:28:02,080 --> 01:28:03,440
and

2192
01:28:03,440 --> 01:28:04,100
here

2193
01:28:04,100 --> 01:28:05,280
[Applause]

2194
01:28:05,280 --> 01:28:08,239
this picture shows uh some

2195
01:28:08,239 --> 01:28:10,880
some cases way to require the layer to

2196
01:28:10,880 --> 01:28:12,560
sap functions

2197
01:28:12,560 --> 01:28:16,159
uh the shoho and the assam beatrice is a

2198
01:28:16,159 --> 01:28:19,760
typically example and in this case we

2199
01:28:19,760 --> 01:28:21,520
can find some

2200
01:28:21,520 --> 01:28:24,239
one or more following features so

2201
01:28:24,239 --> 01:28:27,280
first is that the network is not very

2202
01:28:27,280 --> 01:28:30,880
large the number of hoses is usually

2203
01:28:30,880 --> 01:28:32,880
less than 200

2204
01:28:32,880 --> 01:28:35,280
and the second network

2205
01:28:35,280 --> 01:28:38,560
contains a different type of the in

2206
01:28:38,560 --> 01:28:40,560
equipment

2207
01:28:40,560 --> 01:28:43,920
some layer two switches layers with

2208
01:28:43,920 --> 01:28:46,480
rotors and uh hybrid layer two and the

2209
01:28:46,480 --> 01:28:47,920
layers with

2210
01:28:47,920 --> 01:28:51,840
uh switches and we think they are how a

2211
01:28:51,840 --> 01:28:55,520
multi-level layer to topology network

2212
01:28:55,520 --> 01:28:58,080
so how to control this multi-level

2213
01:28:58,080 --> 01:28:59,920
network user

2214
01:28:59,920 --> 01:29:02,320
was discussion

2215
01:29:02,320 --> 01:29:04,639
and the third wasting some

2216
01:29:04,639 --> 01:29:08,159
notes how a fewer results in the network

2217
01:29:08,159 --> 01:29:11,040
like some iot nodes

2218
01:29:11,040 --> 01:29:11,920
uh

2219
01:29:11,920 --> 01:29:14,239
lastly we seen that

2220
01:29:14,239 --> 01:29:17,040
the network is sometimes required to

2221
01:29:17,040 --> 01:29:19,440
firstly form a local air network

2222
01:29:19,440 --> 01:29:23,280
disconnected from the internet

2223
01:29:23,280 --> 01:29:24,960
so that's about

2224
01:29:24,960 --> 01:29:27,440
we think that autonomous network

2225
01:29:27,440 --> 01:29:28,880
management

2226
01:29:28,880 --> 01:29:34,080
with layer 2 network nodes is required

2227
01:29:34,080 --> 01:29:38,719
uh about always summarize the scenarios

2228
01:29:38,719 --> 01:29:42,480
requiring layer 2 sap so why is that

2229
01:29:42,480 --> 01:29:46,400
some manager network is a small layer to

2230
01:29:46,400 --> 01:29:49,199
network wires network knows how

2231
01:29:49,199 --> 01:29:52,800
no layer 3 physical interface and our

2232
01:29:52,800 --> 01:29:54,639
favorite results

2233
01:29:54,639 --> 01:29:56,960
and the answer is the

2234
01:29:56,960 --> 01:29:59,280
network manager would have i would like

2235
01:29:59,280 --> 01:30:03,040
to use and verify the layer 2 topology

2236
01:30:03,040 --> 01:30:06,480
and the readability first for some major

2237
01:30:06,480 --> 01:30:07,679
purpose

2238
01:30:07,679 --> 01:30:10,880
because sometimes some parts can not

2239
01:30:10,880 --> 01:30:13,760
have ip addresses so we should use a

2240
01:30:13,760 --> 01:30:19,040
layer 2 topology to control this

2241
01:30:19,040 --> 01:30:21,520
uh based on the layer two scenarios

2242
01:30:21,520 --> 01:30:23,440
we'll propose some layer two

2243
01:30:23,440 --> 01:30:25,679
requirements uh way

2244
01:30:25,679 --> 01:30:26,800
uh we

2245
01:30:26,800 --> 01:30:30,159
think we write on this nine pointer so

2246
01:30:30,159 --> 01:30:33,600
first is starter we send her uh the ip

2247
01:30:33,600 --> 01:30:36,400
addresses of the node and its interface

2248
01:30:36,400 --> 01:30:40,239
made not to be available upfront and the

2249
01:30:40,239 --> 01:30:43,679
racing resources current acp turnout is

2250
01:30:43,679 --> 01:30:46,159
suitable for this situation

2251
01:30:46,159 --> 01:30:48,960
under the certain reasons that layer 2

2252
01:30:48,960 --> 01:30:52,239
sap construction can be used on the

2253
01:30:52,239 --> 01:30:55,199
layer to available information and

2254
01:30:55,199 --> 01:30:58,159
mechanism such as the metal addresses

2255
01:30:58,159 --> 01:31:00,840
the law of physical part

2256
01:31:00,840 --> 01:31:02,960
information uh

2257
01:31:02,960 --> 01:31:05,920
threes uh

2258
01:31:05,920 --> 01:31:08,480
three we think that uh

2259
01:31:08,480 --> 01:31:10,880
adjacent node discovery should be

2260
01:31:10,880 --> 01:31:14,400
carried as a layer two frame under the

2261
01:31:14,400 --> 01:31:17,520
first wave center it is there to reduce

2262
01:31:17,520 --> 01:31:21,280
the grasp message as much as possible

2263
01:31:21,280 --> 01:31:24,639
uh so not this sensor we sent a

2264
01:31:24,639 --> 01:31:27,760
layer to sap for the provider api to the

2265
01:31:27,760 --> 01:31:30,800
upper layer to allow the asa to invert

2266
01:31:30,800 --> 01:31:33,840
the layer to basic function and the

2267
01:31:33,840 --> 01:31:36,400
physical connectivity and the topology

2268
01:31:36,400 --> 01:31:39,920
information should be able to connect it

2269
01:31:39,920 --> 01:31:43,280
well the layer 2 sap

2270
01:31:43,280 --> 01:31:46,480
and the next routine in the layer 2 sap

2271
01:31:46,480 --> 01:31:49,040
should support there to loop a free

2272
01:31:49,040 --> 01:31:52,159
logical topology creation the

2273
01:31:52,159 --> 01:31:55,600
minimal manual configuration is required

2274
01:31:55,600 --> 01:31:57,520
uh the last is

2275
01:31:57,520 --> 01:32:01,199
center reuse exciting multitasker mic

2276
01:32:01,199 --> 01:32:04,480
address is desired this is the

2277
01:32:04,480 --> 01:32:08,000
requirements of resources layer 2 sap

2278
01:32:08,000 --> 01:32:08,960
should

2279
01:32:08,960 --> 01:32:10,719
how and

2280
01:32:10,719 --> 01:32:14,400
maybe this is not very complete

2281
01:32:14,400 --> 01:32:16,639
and the this picture which shows a

2282
01:32:16,639 --> 01:32:20,000
reference model to layer to sap under

2283
01:32:20,000 --> 01:32:24,000
for the reference model uh we think that

2284
01:32:24,000 --> 01:32:27,600
the trans transaction api should allow

2285
01:32:27,600 --> 01:32:29,000
asa to

2286
01:32:29,000 --> 01:32:31,679
communicate with other assets by

2287
01:32:31,679 --> 01:32:34,320
involving a set of layers to transport

2288
01:32:34,320 --> 01:32:36,080
the basic function

2289
01:32:36,080 --> 01:32:37,600
and

2290
01:32:37,600 --> 01:32:40,080
the layer 2 sap provide a similar

2291
01:32:40,080 --> 01:32:42,800
function as layer 3

2292
01:32:42,800 --> 01:32:47,199
says in the printer and as a layer 2 sap

2293
01:32:47,199 --> 01:32:50,080
should provide a lighter discovery

2294
01:32:50,080 --> 01:32:52,960
negotiation and synchronization and

2295
01:32:52,960 --> 01:32:56,000
always think there are the

2296
01:32:56,000 --> 01:32:56,880
same

2297
01:32:56,880 --> 01:33:00,800
like the layers with atp

2298
01:33:00,800 --> 01:33:03,040
um

2299
01:33:03,280 --> 01:33:07,120
about the convolution we've seen that

2300
01:33:07,120 --> 01:33:09,840
uh there are there are how some

2301
01:33:09,840 --> 01:33:13,600
scenarios require there to sap underway

2302
01:33:13,600 --> 01:33:16,080
hopefully they always emphasis is an

2303
01:33:16,080 --> 01:33:17,360
important

2304
01:33:17,360 --> 01:33:20,159
topic in the unm and we

2305
01:33:20,159 --> 01:33:22,719
want to find a way to

2306
01:33:22,719 --> 01:33:24,560
uh

2307
01:33:24,560 --> 01:33:25,760
wait to

2308
01:33:25,760 --> 01:33:27,520
uh define the

2309
01:33:27,520 --> 01:33:29,280
layer 2 sap

2310
01:33:29,280 --> 01:33:31,920
and the second is that

2311
01:33:31,920 --> 01:33:32,719
uh

2312
01:33:32,719 --> 01:33:35,440
wait uh the layer to sap with this has a

2313
01:33:35,440 --> 01:33:38,960
year our draft is to build a layer to

2314
01:33:38,960 --> 01:33:41,679
basically the sap rather than uh

2315
01:33:41,679 --> 01:33:45,440
the sap on layer port so we send such a

2316
01:33:45,440 --> 01:33:46,960
way through the

2317
01:33:46,960 --> 01:33:48,239
uh

2318
01:33:48,239 --> 01:33:53,120
master to face some situations after the

2319
01:33:53,120 --> 01:33:56,400
interface have no ipo addresses so maybe

2320
01:33:56,400 --> 01:33:59,920
we can use the micro address

2321
01:34:00,320 --> 01:34:02,800
about others like a security

2322
01:34:02,800 --> 01:34:04,480
consideration

2323
01:34:04,480 --> 01:34:07,360
i think uh if the network is not very

2324
01:34:07,360 --> 01:34:09,600
loud with largely contained some

2325
01:34:09,600 --> 01:34:11,120
physical

2326
01:34:11,120 --> 01:34:16,159
way to protect our network and but i

2327
01:34:16,159 --> 01:34:19,199
actually i think this is not over not a

2328
01:34:19,199 --> 01:34:21,199
complete underway thing we need a

2329
01:34:21,199 --> 01:34:24,000
further discussion

2330
01:34:24,000 --> 01:34:26,000
okay

2331
01:34:26,000 --> 01:34:28,800
next type of way center we should

2332
01:34:28,800 --> 01:34:33,760
uh talk about more about layer 2 sap and

2333
01:34:33,760 --> 01:34:36,400
i think this should be discussed more

2334
01:34:36,400 --> 01:34:39,120
clearly okay that's all my thoughts

2335
01:34:39,120 --> 01:34:41,600
thank you

2336
01:34:41,600 --> 01:34:43,440
thank you um

2337
01:34:43,440 --> 01:34:46,560
maybe um question from my side so um

2338
01:34:46,560 --> 01:34:50,080
in the layer 3 acp

2339
01:34:50,159 --> 01:34:53,840
the very simple process from receiving a

2340
01:34:53,840 --> 01:34:56,880
packet into the acp on one interface

2341
01:34:56,880 --> 01:35:00,000
routing it at layer 3 and sending it out

2342
01:35:00,000 --> 01:35:02,320
has just a very few steps right so

2343
01:35:02,320 --> 01:35:04,159
you're receiving a packet on a link

2344
01:35:04,159 --> 01:35:06,480
local ipv6 address

2345
01:35:06,480 --> 01:35:10,239
you're let's say decrypting it with ipv6

2346
01:35:10,239 --> 01:35:12,719
oh sorry with ipsec

2347
01:35:12,719 --> 01:35:15,440
and then you've got an acp ipv6 packet

2348
01:35:15,440 --> 01:35:17,760
you're routing that it is routed from

2349
01:35:17,760 --> 01:35:19,840
the ripple routing protocol and on the

2350
01:35:19,840 --> 01:35:21,679
outgoing interface you do the reverse

2351
01:35:21,679 --> 01:35:24,880
thing you're encapsulating it uh

2352
01:35:24,880 --> 01:35:27,360
protecting it with ip36 and sending it

2353
01:35:27,360 --> 01:35:30,239
out link local to the next hop so

2354
01:35:30,239 --> 01:35:32,880
can you explain

2355
01:35:32,880 --> 01:35:35,600
for your solution how the same process

2356
01:35:35,600 --> 01:35:37,199
would work what are the steps for

2357
01:35:37,199 --> 01:35:38,320
receiving

2358
01:35:38,320 --> 01:35:42,400
for such a layer 2 acp node a packet

2359
01:35:42,400 --> 01:35:44,800
forwarding it by whatever mean and

2360
01:35:44,800 --> 01:35:47,040
sending it out

2361
01:35:47,040 --> 01:35:49,360
i didn't see that really to down to that

2362
01:35:49,360 --> 01:35:52,320
level in the slides

2363
01:35:54,800 --> 01:35:58,960
i think is a draft of a total bounties

2364
01:35:58,960 --> 01:36:01,960
inaudible

2365
01:36:02,400 --> 01:36:05,360
scenarios and requirements and

2366
01:36:05,360 --> 01:36:08,400
i haven't considered your question

2367
01:36:08,400 --> 01:36:12,080
very detailed details

2368
01:36:12,080 --> 01:36:13,520
right so i think that that would be the

2369
01:36:13,520 --> 01:36:15,600
first step in terms of

2370
01:36:15,600 --> 01:36:18,880
please define a standard um you know

2371
01:36:18,880 --> 01:36:21,199
doesn't have to be the only one but one

2372
01:36:21,199 --> 01:36:23,440
case of how you think the forwarding

2373
01:36:23,440 --> 01:36:25,679
should be able to work right when the

2374
01:36:25,679 --> 01:36:28,159
packet is received um

2375
01:36:28,159 --> 01:36:30,159
and what address is it received is it a

2376
01:36:30,159 --> 01:36:32,639
layer 2 address are there 3 address how

2377
01:36:32,639 --> 01:36:34,560
is it basically

2378
01:36:34,560 --> 01:36:36,880
is it protected and then when after the

2379
01:36:36,880 --> 01:36:39,199
protection is removed right so yada yada

2380
01:36:39,199 --> 01:36:41,199
these steps so step by step that

2381
01:36:41,199 --> 01:36:42,880
forwarding so that we can even start

2382
01:36:42,880 --> 01:36:45,199
comparing your proposed solution with

2383
01:36:45,199 --> 01:36:48,719
what the acp today does

2384
01:36:49,600 --> 01:36:52,920
that make sense

2385
01:36:56,719 --> 01:36:58,400
i have

2386
01:36:58,400 --> 01:37:02,400
i don't have a sense about this question

2387
01:37:02,400 --> 01:37:04,080
right but i mean without without an

2388
01:37:04,080 --> 01:37:06,719
example of that i think it's impossible

2389
01:37:06,719 --> 01:37:09,119
for anybody to implement

2390
01:37:09,119 --> 01:37:10,560
something that could be used as a

2391
01:37:10,560 --> 01:37:13,440
reference example of of the draft right

2392
01:37:13,440 --> 01:37:15,520
so that's why i think being able to have

2393
01:37:15,520 --> 01:37:18,480
that understanding from the draft is is

2394
01:37:18,480 --> 01:37:21,040
very important

2395
01:37:21,040 --> 01:37:23,679
okay okay

2396
01:37:23,679 --> 01:37:26,080
michael

2397
01:37:27,280 --> 01:37:30,000
back to your slide i think it's three

2398
01:37:30,000 --> 01:37:35,239
the lcp l2 acp case

2399
01:37:38,880 --> 01:37:40,719
can you hear me

2400
01:37:40,719 --> 01:37:42,000
uh

2401
01:37:42,000 --> 01:37:44,800
pattern pattern

2402
01:37:47,119 --> 01:37:49,440
this page are all displayed

2403
01:37:49,440 --> 01:37:52,239
one more i think

2404
01:37:52,239 --> 01:37:53,760
no or

2405
01:37:53,760 --> 01:37:57,440
the first diagram that one yeah

2406
01:37:57,440 --> 01:37:59,760
so i'm trying to understand this use

2407
01:37:59,760 --> 01:38:04,560
case so we we do acp work over

2408
01:38:04,560 --> 01:38:07,440
to talk to some management interface and

2409
01:38:07,440 --> 01:38:08,719
you've said that

2410
01:38:08,719 --> 01:38:11,199
none of these devices is l2 aggregation

2411
01:38:11,199 --> 01:38:13,679
switch this l2 access switch

2412
01:38:13,679 --> 01:38:16,320
the wi-fi access switch none of these

2413
01:38:16,320 --> 01:38:17,440
have

2414
01:38:17,440 --> 01:38:20,320
uh layer 3 addresses

2415
01:38:20,320 --> 01:38:21,760
they don't get managed they don't do

2416
01:38:21,760 --> 01:38:24,719
snmp they don't do net conf they don't

2417
01:38:24,719 --> 01:38:27,360
do rest comp they don't do

2418
01:38:27,360 --> 01:38:31,839
https is that what you're telling me

2419
01:38:41,760 --> 01:38:43,520
i think well

2420
01:38:43,520 --> 01:38:49,280
i think sometimes this is in this use

2421
01:38:49,760 --> 01:38:52,400
micro dress you see enough and sometimes

2422
01:38:52,400 --> 01:38:54,000
i think her

2423
01:38:54,000 --> 01:38:58,760
favorite results lead to this question

2424
01:38:59,280 --> 01:39:00,239
okay

2425
01:39:00,239 --> 01:39:01,520
um

2426
01:39:01,520 --> 01:39:03,199
i'm just asking because it sounds to me

2427
01:39:03,199 --> 01:39:05,199
like they don't need to be managed and

2428
01:39:05,199 --> 01:39:07,119
so they don't need an acp if they don't

2429
01:39:07,119 --> 01:39:09,199
have any management interfaces that they

2430
01:39:09,199 --> 01:39:12,839
need to talk to

2431
01:39:13,180 --> 01:39:15,199
[Music]

2432
01:39:15,199 --> 01:39:17,520
chiming a little bit

2433
01:39:17,520 --> 01:39:18,880
yeah

2434
01:39:18,880 --> 01:39:20,400
yeah

2435
01:39:20,400 --> 01:39:23,040
yes so

2436
01:39:23,040 --> 01:39:26,159
and i think for sure they are going to

2437
01:39:26,159 --> 01:39:28,480
have management interface

2438
01:39:28,480 --> 01:39:31,119
almost every equipment in current days

2439
01:39:31,119 --> 01:39:33,280
they have a management interface

2440
01:39:33,280 --> 01:39:36,400
but here is more like is talking about

2441
01:39:36,400 --> 01:39:39,840
what happened before this

2442
01:39:39,840 --> 01:39:41,440
being enrolled

2443
01:39:41,440 --> 01:39:42,239
so

2444
01:39:42,239 --> 01:39:45,280
it have the management interface after

2445
01:39:45,280 --> 01:39:48,800
it gets enrolled and if it is in ipv4

2446
01:39:48,800 --> 01:39:50,719
world of course

2447
01:39:50,719 --> 01:39:53,760
let's leave v6 maybe for a little while

2448
01:39:53,760 --> 01:39:56,480
if it is in a v forward

2449
01:39:56,480 --> 01:39:59,040
um this management interface still need

2450
01:39:59,040 --> 01:40:04,000
to re do the dhcp request to ask for

2451
01:40:04,000 --> 01:40:07,119
an ipv ip address to be configured

2452
01:40:07,119 --> 01:40:10,320
so that happens after the something like

2453
01:40:10,320 --> 01:40:12,000
the layer 2

2454
01:40:12,000 --> 01:40:15,360
loop loop-free topology build up

2455
01:40:15,360 --> 01:40:16,320
and

2456
01:40:16,320 --> 01:40:17,280
everything

2457
01:40:17,280 --> 01:40:19,920
everything being done then it asks for

2458
01:40:19,920 --> 01:40:21,280
the dhcp

2459
01:40:21,280 --> 01:40:24,000
send the dhtp request so that's that's a

2460
01:40:24,000 --> 01:40:26,480
step by step by step thing

2461
01:40:26,480 --> 01:40:28,960
so it's not it's not available at the

2462
01:40:28,960 --> 01:40:30,400
step one

2463
01:40:30,400 --> 01:40:31,920
do you think you want to change that

2464
01:40:31,920 --> 01:40:33,600
because it sounds like it works fine now

2465
01:40:33,600 --> 01:40:34,840
so why change

2466
01:40:34,840 --> 01:40:37,280
it what um

2467
01:40:37,280 --> 01:40:39,280
change change what

2468
01:40:39,280 --> 01:40:40,480
well look

2469
01:40:40,480 --> 01:40:42,960
we've created an acp specifically so

2470
01:40:42,960 --> 01:40:45,760
that you don't have to do a dhcp request

2471
01:40:45,760 --> 01:40:47,760
and set up your layer 2 before you can

2472
01:40:47,760 --> 01:40:49,600
ha do enrollment and do all that stuff

2473
01:40:49,600 --> 01:40:52,239
we went to a fairly fairly reasonable

2474
01:40:52,239 --> 01:40:54,159
effort to have joined proxies to have a

2475
01:40:54,159 --> 01:40:55,520
whole bunch of other things so that we

2476
01:40:55,520 --> 01:40:57,520
can onboard devices even though they

2477
01:40:57,520 --> 01:40:59,520
don't have connectivity even at layer

2478
01:40:59,520 --> 01:41:00,880
two or three

2479
01:41:00,880 --> 01:41:04,080
um so we've done all of that in our rfcs

2480
01:41:04,080 --> 01:41:07,199
and we did that specifically because the

2481
01:41:07,199 --> 01:41:09,600
layer two auto configuration just didn't

2482
01:41:09,600 --> 01:41:10,560
work

2483
01:41:10,560 --> 01:41:12,560
we couldn't do dhcp

2484
01:41:12,560 --> 01:41:13,679
and

2485
01:41:13,679 --> 01:41:16,960
and so you're telling me i wanna do dhcp

2486
01:41:16,960 --> 01:41:18,080
i'm like well okay if you have a

2487
01:41:18,080 --> 01:41:20,800
situation where layer two works and you

2488
01:41:20,800 --> 01:41:22,639
can do dhcp

2489
01:41:22,639 --> 01:41:24,159
then

2490
01:41:24,159 --> 01:41:26,480
i don't know why you need an acp

2491
01:41:26,480 --> 01:41:28,320
right so you're telling me you can't do

2492
01:41:28,320 --> 01:41:30,159
onboarding until you have an address or

2493
01:41:30,159 --> 01:41:31,600
you can't do it have an address until

2494
01:41:31,600 --> 01:41:33,040
you do onboarding i'm not sure which one

2495
01:41:33,040 --> 01:41:34,080
you said

2496
01:41:34,080 --> 01:41:36,320
but i'm just not finding this this

2497
01:41:36,320 --> 01:41:38,880
scenario here credible to me

2498
01:41:38,880 --> 01:41:40,960
okay i think that all of those machines

2499
01:41:40,960 --> 01:41:43,360
have layer 3 addresses or have layer 3

2500
01:41:43,360 --> 01:41:46,719
stacks i think what's missing is that

2501
01:41:46,719 --> 01:41:48,000
you're trying to do some layer two

2502
01:41:48,000 --> 01:41:50,239
tricks to avoid doing writing any code

2503
01:41:50,239 --> 01:41:51,600
at layer three

2504
01:41:51,600 --> 01:41:54,000
and and to a large extent i think that's

2505
01:41:54,000 --> 01:41:55,360
what this working group is trying to get

2506
01:41:55,360 --> 01:41:57,280
away from in the same way that we're

2507
01:41:57,280 --> 01:41:58,960
trying to get away from dial-up modems

2508
01:41:58,960 --> 01:42:01,760
attached to switches as as out-of-band

2509
01:42:01,760 --> 01:42:04,400
access so i just don't understand why

2510
01:42:04,400 --> 01:42:06,400
what the scenario here is right what is

2511
01:42:06,400 --> 01:42:08,239
going to happen

2512
01:42:08,239 --> 01:42:09,760
to these devices how are they going to

2513
01:42:09,760 --> 01:42:12,880
be managed over a layer 2 network

2514
01:42:12,880 --> 01:42:14,480
without ha and they don't have a layer 3

2515
01:42:14,480 --> 01:42:15,679
address which is we've been told in a

2516
01:42:15,679 --> 01:42:17,199
couple slides they don't have a layer 3

2517
01:42:17,199 --> 01:42:18,239
address

2518
01:42:18,239 --> 01:42:19,760
so you're telling me they do have layer

2519
01:42:19,760 --> 01:42:22,000
3 addresses just not at that time

2520
01:42:22,000 --> 01:42:24,960
and so it sounds to me like really

2521
01:42:24,960 --> 01:42:26,159
um

2522
01:42:26,159 --> 01:42:27,760
you know i don't know you have a problem

2523
01:42:27,760 --> 01:42:29,280
where you have to solve it at layer two

2524
01:42:29,280 --> 01:42:30,800
because the layer three the people that

2525
01:42:30,800 --> 01:42:32,880
own their their three

2526
01:42:32,880 --> 01:42:34,000
uh

2527
01:42:34,000 --> 01:42:35,679
won't change their code and so you have

2528
01:42:35,679 --> 01:42:37,679
to change it at some other layer instead

2529
01:42:37,679 --> 01:42:39,520
it just it doesn't sound like a problem

2530
01:42:39,520 --> 01:42:41,679
that it sounds like a manager a people

2531
01:42:41,679 --> 01:42:43,280
management problem a human resources

2532
01:42:43,280 --> 01:42:45,520
problem not a network management problem

2533
01:42:45,520 --> 01:42:47,760
right

2534
01:42:47,760 --> 01:42:49,679
can we maybe consider that we're going

2535
01:42:49,679 --> 01:42:52,239
over right now to the you know slot

2536
01:42:52,239 --> 01:42:54,239
number 11 of of the whole discussion

2537
01:42:54,239 --> 01:42:56,400
because i think for your contention i

2538
01:42:56,400 --> 01:42:58,400
would have answers which i'm not sure

2539
01:42:58,400 --> 01:42:59,920
are actually what

2540
01:42:59,920 --> 01:43:02,560
um the draft here is proposing but would

2541
01:43:02,560 --> 01:43:04,560
which would i think exactly

2542
01:43:04,560 --> 01:43:07,040
answer you know why we would you know

2543
01:43:07,040 --> 01:43:09,520
benefit from some form of layer 2 acp

2544
01:43:09,520 --> 01:43:12,080
exactly for an example topology like

2545
01:43:12,080 --> 01:43:13,199
this

2546
01:43:13,199 --> 01:43:16,080
so you said we don't want to have dhcp

2547
01:43:16,080 --> 01:43:17,440
that's fine

2548
01:43:17,440 --> 01:43:18,639
but

2549
01:43:18,639 --> 01:43:22,239
so we can do this case here where

2550
01:43:22,239 --> 01:43:25,280
let's say all the egg switches the

2551
01:43:25,280 --> 01:43:26,800
excess switches

2552
01:43:26,800 --> 01:43:29,040
um and the access points of course are

2553
01:43:29,040 --> 01:43:31,119
in the data plane only layer two

2554
01:43:31,119 --> 01:43:32,239
switches

2555
01:43:32,239 --> 01:43:34,000
let's assume that right the core router

2556
01:43:34,000 --> 01:43:35,520
is the only route everything else should

2557
01:43:35,520 --> 01:43:37,600
in the data plane be just layer two

2558
01:43:37,600 --> 01:43:41,360
switches so with the current rfc 8994 we

2559
01:43:41,360 --> 01:43:44,560
can do that but it means that

2560
01:43:44,560 --> 01:43:47,040
for the acp we're really creating layer

2561
01:43:47,040 --> 01:43:49,360
three interfaces um which are not in the

2562
01:43:49,360 --> 01:43:51,440
data plane which are you know

2563
01:43:51,440 --> 01:43:53,920
um just for the data plane they're just

2564
01:43:53,920 --> 01:43:55,360
you know uh

2565
01:43:55,360 --> 01:43:58,480
link local for the encapsulation um on

2566
01:43:58,480 --> 01:44:00,239
on the bridge groups and and we separate

2567
01:44:00,239 --> 01:44:02,480
the bridge group for the acp traffic and

2568
01:44:02,480 --> 01:44:04,639
then we do all the routing and if these

2569
01:44:04,639 --> 01:44:07,280
are real hardware switches with fast

2570
01:44:07,280 --> 01:44:09,840
throughput only layer 2 then the acp

2571
01:44:09,840 --> 01:44:12,320
will be very slow that may be sufficient

2572
01:44:12,320 --> 01:44:14,080
for some deployments but as soon as

2573
01:44:14,080 --> 01:44:15,760
you're starting all the cool new stuff

2574
01:44:15,760 --> 01:44:18,639
like a lot of telemetry and firmware

2575
01:44:18,639 --> 01:44:20,080
download and everything else it would

2576
01:44:20,080 --> 01:44:22,639
really be good that for the aggregation

2577
01:44:22,639 --> 01:44:24,880
and the access switches that all the

2578
01:44:24,880 --> 01:44:27,520
traffic even for the acp would not have

2579
01:44:27,520 --> 01:44:29,840
to be forwarded by them in software

2580
01:44:29,840 --> 01:44:32,480
right so traffic from the call router to

2581
01:44:32,480 --> 01:44:34,719
an access a switch going through an

2582
01:44:34,719 --> 01:44:36,320
aggregation switch shouldn't go through

2583
01:44:36,320 --> 01:44:38,960
the cpu of the aggregation switch even

2584
01:44:38,960 --> 01:44:40,880
when it's in the acp so that is the

2585
01:44:40,880 --> 01:44:42,400
limitation

2586
01:44:42,400 --> 01:44:45,280
i think taurus you're arguing for maxec

2587
01:44:45,280 --> 01:44:47,520
right or or some other technology at

2588
01:44:47,520 --> 01:44:49,360
layer two to do the forwarding i haven't

2589
01:44:49,360 --> 01:44:50,800
talked about the solution i haven't

2590
01:44:50,800 --> 01:44:52,320
talked about the solution we've talked

2591
01:44:52,320 --> 01:44:53,760
about but i agree with probably i agree

2592
01:44:53,760 --> 01:44:55,440
with you it would be nice to do

2593
01:44:55,440 --> 01:44:57,360
something else and i agree that we can

2594
01:44:57,360 --> 01:44:58,239
create

2595
01:44:58,239 --> 01:44:59,760
uh a layer

2596
01:44:59,760 --> 01:45:03,040
two uh uh mechanism

2597
01:45:03,040 --> 01:45:04,159
to do

2598
01:45:04,159 --> 01:45:06,639
to transport data

2599
01:45:06,639 --> 01:45:08,719
but i'm not sure that that requires or

2600
01:45:08,719 --> 01:45:11,280
that we create a discovery mechanism at

2601
01:45:11,280 --> 01:45:13,760
layer two or a mechanism to transport

2602
01:45:13,760 --> 01:45:16,320
grasp at layer two

2603
01:45:16,320 --> 01:45:18,320
because as far as i can tell

2604
01:45:18,320 --> 01:45:20,400
all of those devices you're removing the

2605
01:45:20,400 --> 01:45:23,520
forwarding requirement from layer three

2606
01:45:23,520 --> 01:45:25,679
but i don't see why the control plane uh

2607
01:45:25,679 --> 01:45:27,600
that that's going to receive and send

2608
01:45:27,600 --> 01:45:30,320
grass messages and other things why that

2609
01:45:30,320 --> 01:45:32,639
isn't has to be layer two it means to me

2610
01:45:32,639 --> 01:45:35,119
it could be layer three just as easily

2611
01:45:35,119 --> 01:45:36,880
and if you wanna run our normal

2612
01:45:36,880 --> 01:45:38,560
protocols they pretty much need to be

2613
01:45:38,560 --> 01:45:40,639
layer three don't they do we have a way

2614
01:45:40,639 --> 01:45:43,600
to run that conf over layer two

2615
01:45:43,600 --> 01:45:45,280
i think i think this is this what you're

2616
01:45:45,280 --> 01:45:46,960
saying on asking now is a little bit too

2617
01:45:46,960 --> 01:45:48,880
theoretically for me right because i'm

2618
01:45:48,880 --> 01:45:50,960
thinking about the practical different

2619
01:45:50,960 --> 01:45:53,920
options that we have um and i think two

2620
01:45:53,920 --> 01:45:55,679
or three itfs ago we also had a little

2621
01:45:55,679 --> 01:45:57,760
bit of time and i was trying to explain

2622
01:45:57,760 --> 01:45:59,440
what i think would be the most easy

2623
01:45:59,440 --> 01:46:01,679
solution to make these layer two

2624
01:46:01,679 --> 01:46:03,760
switches work well and that is as far as

2625
01:46:03,760 --> 01:46:06,000
the acp is concerned they wouldn't be

2626
01:46:06,000 --> 01:46:08,400
routers but they would be hosts

2627
01:46:08,400 --> 01:46:10,480
right so they wouldn't host on the

2628
01:46:10,480 --> 01:46:12,960
network on this l2 network yeah

2629
01:46:12,960 --> 01:46:14,960
so we would need to depend on the

2630
01:46:14,960 --> 01:46:17,920
underlying um data plane spanning tree

2631
01:46:17,920 --> 01:46:19,520
bridging and we can of course think

2632
01:46:19,520 --> 01:46:22,080
about how the acp may help to further

2633
01:46:22,080 --> 01:46:24,400
protect it or so what tricks we can play

2634
01:46:24,400 --> 01:46:26,880
but otherwise you know we use the layer

2635
01:46:26,880 --> 01:46:29,199
to a hardware forwarding plane and all

2636
01:46:29,199 --> 01:46:31,440
these hosts just use the normal acp but

2637
01:46:31,440 --> 01:46:33,440
we may need to build a full mesh of host

2638
01:46:33,440 --> 01:46:35,679
to host connections so there would be no

2639
01:46:35,679 --> 01:46:38,480
routing across any of them um and that i

2640
01:46:38,480 --> 01:46:40,560
think would be a worthwhile effort um

2641
01:46:40,560 --> 01:46:44,400
and uh would uh make create a single acp

2642
01:46:44,400 --> 01:46:46,159
with mixed layer two and layer three

2643
01:46:46,159 --> 01:46:48,800
switches um and give us a good solution

2644
01:46:48,800 --> 01:46:50,400
and unfortunately i never had the time

2645
01:46:50,400 --> 01:46:52,320
so far to write that down

2646
01:46:52,320 --> 01:46:54,880
it could be it could be uh that they

2647
01:46:54,880 --> 01:46:57,840
negotiate you know vlan 495 or something

2648
01:46:57,840 --> 01:46:58,800
like this

2649
01:46:58,800 --> 01:47:01,280
yes they apply max sec to it and they

2650
01:47:01,280 --> 01:47:04,800
all look like their hosts doing you know

2651
01:47:04,800 --> 01:47:09,119
um dhcp or nd or whatever on it

2652
01:47:09,119 --> 01:47:11,360
right and and that's all and i don't

2653
01:47:11,360 --> 01:47:13,440
have a problem with that we we just need

2654
01:47:13,440 --> 01:47:15,360
to be able to

2655
01:47:15,360 --> 01:47:17,440
negotiate that clearly

2656
01:47:17,440 --> 01:47:20,000
uh with uh grasp it's just a new

2657
01:47:20,000 --> 01:47:22,719
transport right we have ipsec and we

2658
01:47:22,719 --> 01:47:26,880
have dtls and we'll have maxsec or vpn

2659
01:47:26,880 --> 01:47:29,520
or vlan or something like that

2660
01:47:29,520 --> 01:47:31,520
yeah i mean we would we would certainly

2661
01:47:31,520 --> 01:47:33,440
love to use a separate vlan for

2662
01:47:33,440 --> 01:47:35,199
isolating the

2663
01:47:35,199 --> 01:47:37,280
acp traffic from

2664
01:47:37,280 --> 01:47:40,480
the data plane but as far as the you

2665
01:47:40,480 --> 01:47:43,600
know crypto is concerned um

2666
01:47:43,600 --> 01:47:45,920
could still be ipsec it's just then

2667
01:47:45,920 --> 01:47:48,480
ipsec from a hardware ipsec capable core

2668
01:47:48,480 --> 01:47:51,440
router all the way to each of

2669
01:47:51,440 --> 01:47:53,600
the layer two devices there

2670
01:47:53,600 --> 01:47:56,400
yeah over over that over that v over

2671
01:47:56,400 --> 01:47:58,960
that spanning tree managed v layer yeah

2672
01:47:58,960 --> 01:48:00,880
okay i mean i'm just saying we should

2673
01:48:00,880 --> 01:48:03,119
select the crypto for the maximum

2674
01:48:03,119 --> 01:48:05,840
interoperability and uh performance and

2675
01:48:05,840 --> 01:48:07,840
whatever the the core factors are right

2676
01:48:07,840 --> 01:48:10,000
so the question is do we need any new

2677
01:48:10,000 --> 01:48:14,080
crypto and the big reason why i liked uh

2678
01:48:14,080 --> 01:48:16,560
maxic uh and still do like mexico is

2679
01:48:16,560 --> 01:48:19,360
when we really have these cool uh layer

2680
01:48:19,360 --> 01:48:21,199
two plus layer three switches that can

2681
01:48:21,199 --> 01:48:24,239
do um layer two and layer three add line

2682
01:48:24,239 --> 01:48:26,639
rate in hardware forwarding uh and also

2683
01:48:26,639 --> 01:48:28,480
have mac sec hardware forwarding so that

2684
01:48:28,480 --> 01:48:31,840
is that is then faster than ip software

2685
01:48:31,840 --> 01:48:33,280
right so if we have something that's

2686
01:48:33,280 --> 01:48:35,760
faster than ipsec we should use it

2687
01:48:35,760 --> 01:48:37,119
independent of whether it's done at

2688
01:48:37,119 --> 01:48:39,520
layer 2 or layer 3. but so far i think

2689
01:48:39,520 --> 01:48:41,840
the starting point to me after you know

2690
01:48:41,840 --> 01:48:44,080
revisiting mechsec after six seven years

2691
01:48:44,080 --> 01:48:46,000
is it hasn't trickled into all the

2692
01:48:46,000 --> 01:48:48,560
switches unfortunately that was the hope

2693
01:48:48,560 --> 01:48:51,040
a long time ago but it still seems to be

2694
01:48:51,040 --> 01:48:54,320
for few high-end switches only

2695
01:48:54,320 --> 01:48:57,600
but but if you can do ip second software

2696
01:48:57,600 --> 01:48:59,600
for the traffic for your own traffic

2697
01:48:59,600 --> 01:49:00,400
only

2698
01:49:00,400 --> 01:49:02,719
exactly well the wi-fi access switch you

2699
01:49:02,719 --> 01:49:03,440
know

2700
01:49:03,440 --> 01:49:05,360
if if it's if it's running slowly

2701
01:49:05,360 --> 01:49:07,119
because it's downloading a new firmware

2702
01:49:07,119 --> 01:49:10,400
update well that's just life right

2703
01:49:10,400 --> 01:49:11,280
um

2704
01:49:11,280 --> 01:49:12,320
but

2705
01:49:12,320 --> 01:49:14,400
while it's doing that it's not actually

2706
01:49:14,400 --> 01:49:17,119
screwing up the forwarding of traffic

2707
01:49:17,119 --> 01:49:19,840
for anybody else yes um and i agree with

2708
01:49:19,840 --> 01:49:22,719
you that would be really good to do um

2709
01:49:22,719 --> 01:49:26,000
i i i still worry about spanning tree

2710
01:49:26,000 --> 01:49:28,400
uh in a scenario like this because there

2711
01:49:28,400 --> 01:49:30,000
will be dead links

2712
01:49:30,000 --> 01:49:32,960
um and anyone who has built us tried to

2713
01:49:32,960 --> 01:49:34,880
supply spanning tree for instance to

2714
01:49:34,880 --> 01:49:37,199
voip it's a disaster

2715
01:49:37,199 --> 01:49:39,599
you you can't do it it doesn't recover

2716
01:49:39,599 --> 01:49:42,719
fast enough you need to use ospf

2717
01:49:42,719 --> 01:49:45,760
uh or or even isis um you just i'm not

2718
01:49:45,760 --> 01:49:48,320
sure about that i mean yeah i'm aware of

2719
01:49:48,320 --> 01:49:50,080
the lockdown timers are too long even

2720
01:49:50,080 --> 01:49:52,320
with rapid you get you get you can get

2721
01:49:52,320 --> 01:49:55,360
down to one or two seconds uh to redo a

2722
01:49:55,360 --> 01:49:58,000
link but ospf keeps all the links open

2723
01:49:58,000 --> 01:50:00,080
and so as soon as you lose a link you

2724
01:50:00,080 --> 01:50:01,760
know you know within milliseconds and

2725
01:50:01,760 --> 01:50:03,760
you re you redirect the packets

2726
01:50:03,760 --> 01:50:06,000
right that's true but i mean ripple our

2727
01:50:06,000 --> 01:50:08,840
ripple profile is also not optimized for

2728
01:50:08,840 --> 01:50:12,560
uh a very fast convergence speed um but

2729
01:50:12,560 --> 01:50:14,560
for for low load that we can support

2730
01:50:14,560 --> 01:50:16,320
large networks so i think that's

2731
01:50:16,320 --> 01:50:17,760
perfectly fine that we're not getting

2732
01:50:17,760 --> 01:50:19,040
better

2733
01:50:19,040 --> 01:50:20,719
but the point point about not using

2734
01:50:20,719 --> 01:50:22,480
spanning tree is that the the whole

2735
01:50:22,480 --> 01:50:24,480
network's not using spanning tree

2736
01:50:24,480 --> 01:50:26,239
because the whole network can't tolerate

2737
01:50:26,239 --> 01:50:27,679
those numbers

2738
01:50:27,679 --> 01:50:28,880
right

2739
01:50:28,880 --> 01:50:31,360
and and that's why that's why that's why

2740
01:50:31,360 --> 01:50:32,639
it's been turned off that's why they've

2741
01:50:32,639 --> 01:50:34,960
gone to an sdn solution that can

2742
01:50:34,960 --> 01:50:38,000
redirect it instantly or uh to some

2743
01:50:38,000 --> 01:50:41,040
other technology that that can do it um

2744
01:50:41,040 --> 01:50:43,199
well there are a lot of um there are a

2745
01:50:43,199 --> 01:50:45,840
lot of service provider access networks

2746
01:50:45,840 --> 01:50:48,880
from the dslam to the core which are

2747
01:50:48,880 --> 01:50:52,159
using layer 2 so um

2748
01:50:52,159 --> 01:50:54,159
figure figure that right so maybe the

2749
01:50:54,159 --> 01:50:56,560
voice over ip does sometimes have you

2750
01:50:56,560 --> 01:50:58,639
know a one second interruption from you

2751
01:50:58,639 --> 01:51:02,159
know the rapid spanning tree

2752
01:51:03,040 --> 01:51:05,360
um

2753
01:51:05,360 --> 01:51:07,599
well if they do then they they get the

2754
01:51:07,599 --> 01:51:10,159
customer changes isps i have experience

2755
01:51:10,159 --> 01:51:12,320
with that

2756
01:51:12,320 --> 01:51:13,840
it's not an acceptable it's not an

2757
01:51:13,840 --> 01:51:16,000
acceptable situation and why quite a

2758
01:51:16,000 --> 01:51:19,280
number of voip isps for instance they um

2759
01:51:19,280 --> 01:51:22,080
now own access networks because of that

2760
01:51:22,080 --> 01:51:23,440
the customer the business customers

2761
01:51:23,440 --> 01:51:25,360
won't talk won't tolerate that kind of

2762
01:51:25,360 --> 01:51:28,000
thing but but back to our point is that

2763
01:51:28,000 --> 01:51:29,199
that

2764
01:51:29,199 --> 01:51:30,239
it's that

2765
01:51:30,239 --> 01:51:33,440
the reason why the stp might be off in

2766
01:51:33,440 --> 01:51:35,440
my opinion is for other reasons and they

2767
01:51:35,440 --> 01:51:37,199
don't want to turn it on

2768
01:51:37,199 --> 01:51:38,000
for

2769
01:51:38,000 --> 01:51:40,960
um to make this scenario work and that's

2770
01:51:40,960 --> 01:51:41,760
why

2771
01:51:41,760 --> 01:51:44,400
um there's a there's you know a desire

2772
01:51:44,400 --> 01:51:46,320
not to have anything that requires

2773
01:51:46,320 --> 01:51:49,920
broadcasts to work uh because until the

2774
01:51:49,920 --> 01:51:52,080
s until the devices are connected to

2775
01:51:52,080 --> 01:51:53,440
their sdn

2776
01:51:53,440 --> 01:51:55,920
the broadcasts are dangerous

2777
01:51:55,920 --> 01:51:58,639
right right but i i don't see a solution

2778
01:51:58,639 --> 01:52:00,480
in which you're turning off spanning

2779
01:52:00,480 --> 01:52:02,560
tree and have layer two only devices in

2780
01:52:02,560 --> 01:52:04,320
a relevant topology that's what i'm

2781
01:52:04,320 --> 01:52:06,320
agreeing saying i don't see the point in

2782
01:52:06,320 --> 01:52:08,639
doing that right you you if you're

2783
01:52:08,639 --> 01:52:10,560
turning off spanning trees because you

2784
01:52:10,560 --> 01:52:12,880
want to turn all of those links into

2785
01:52:12,880 --> 01:52:16,800
into uh layer three links um and and you

2786
01:52:16,800 --> 01:52:18,239
don't want to try to do the whole thing

2787
01:52:18,239 --> 01:52:19,920
and so you you're gonna have layer three

2788
01:52:19,920 --> 01:52:21,199
anyway

2789
01:52:21,199 --> 01:52:22,800
yeah

2790
01:52:22,800 --> 01:52:25,119
and and so i don't do that brian's not

2791
01:52:25,119 --> 01:52:27,119
here to talk about this because he's

2792
01:52:27,119 --> 01:52:28,560
done some things

2793
01:52:28,560 --> 01:52:32,000
um and i i one of the conclusions i had

2794
01:52:32,000 --> 01:52:34,719
in the document that i did on air 2

2795
01:52:34,719 --> 01:52:37,040
discovery was that i finally realized

2796
01:52:37,040 --> 01:52:39,360
that we could do layer 2 discovery over

2797
01:52:39,360 --> 01:52:42,000
lldp for instance even as originally

2798
01:52:42,000 --> 01:52:45,440
thought of but that once we get going uh

2799
01:52:45,440 --> 01:52:48,320
the the the acp traffic would be simply

2800
01:52:48,320 --> 01:52:50,719
unicast layer two traffic

2801
01:52:50,719 --> 01:52:53,199
from host to host and so it doesn't it's

2802
01:52:53,199 --> 01:52:56,239
not vulnerable to broadcast problems and

2803
01:52:56,239 --> 01:52:57,440
you just need to suppress neighbor

2804
01:52:57,440 --> 01:52:59,839
discovery

2805
01:53:00,000 --> 01:53:02,080
also i think in summary from my side

2806
01:53:02,080 --> 01:53:05,520
there is you know a business case uh for

2807
01:53:05,520 --> 01:53:08,000
or there is there is a an acp use case

2808
01:53:08,000 --> 01:53:11,040
we haven't solved for uh with with good

2809
01:53:11,040 --> 01:53:13,760
performance for layer two only switches

2810
01:53:13,760 --> 01:53:15,040
in networks where layer two only

2811
01:53:15,040 --> 01:53:16,639
switches are used i think they're

2812
01:53:16,639 --> 01:53:18,480
they're they're easy enough to build

2813
01:53:18,480 --> 01:53:19,920
solutions for that

2814
01:53:19,920 --> 01:53:22,159
whether or not that really is

2815
01:53:22,159 --> 01:53:24,000
a good solution for broadband access

2816
01:53:24,000 --> 01:53:25,840
network because it may not have good

2817
01:53:25,840 --> 01:53:27,679
voice over ip

2818
01:53:27,679 --> 01:53:29,760
is an interesting question but we do

2819
01:53:29,760 --> 01:53:31,440
know that there are a lot of networks

2820
01:53:31,440 --> 01:53:33,760
that are only using layer 2 switches in

2821
01:53:33,760 --> 01:53:38,159
these spaces for whatever reasons

2822
01:53:38,159 --> 01:53:40,800
what's our conclusion

2823
01:53:40,800 --> 01:53:42,159
that's your other question

2824
01:53:42,159 --> 01:53:44,639
what do we do with all of this stuff

2825
01:53:44,639 --> 01:53:47,119
well so first for for the for this draft

2826
01:53:47,119 --> 01:53:49,360
i think we we have the ask to the

2827
01:53:49,360 --> 01:53:51,440
authors that are raised how they are

2828
01:53:51,440 --> 01:53:52,880
looking at the forwarding plane and

2829
01:53:52,880 --> 01:53:54,719
hopefully from the discussion we had

2830
01:53:54,719 --> 01:53:56,960
they also have an an idea on how to

2831
01:53:56,960 --> 01:53:58,000
position

2832
01:53:58,000 --> 01:54:00,960
their proposal to to to the use case

2833
01:54:00,960 --> 01:54:02,480
hopefully the explanation of how the

2834
01:54:02,480 --> 01:54:06,080
layer 3 acp today works with

2835
01:54:06,080 --> 01:54:08,560
existing layer 2 switches and software

2836
01:54:08,560 --> 01:54:11,040
is also there so um you know what i was

2837
01:54:11,040 --> 01:54:12,960
saying is is something that you know we

2838
01:54:12,960 --> 01:54:15,520
just need to find time to write down as

2839
01:54:15,520 --> 01:54:17,679
a proposal into the layer two acp case

2840
01:54:17,679 --> 01:54:19,440
and maybe you know we can create

2841
01:54:19,440 --> 01:54:21,440
ultimately some some joint document to

2842
01:54:21,440 --> 01:54:24,080
go forward with

2843
01:54:24,320 --> 01:54:25,760
you have you have a right right up as

2844
01:54:25,760 --> 01:54:27,440
well right in so there are many aspects

2845
01:54:27,440 --> 01:54:30,080
in all of this

2846
01:54:33,360 --> 01:54:35,199
all right are we at the finish of this

2847
01:54:35,199 --> 01:54:37,839
slot

2848
01:54:41,599 --> 01:54:44,719
any more questions to it

2849
01:54:45,679 --> 01:54:46,639
all right

2850
01:54:46,639 --> 01:54:49,040
shing do you want to want to close the

2851
01:54:49,040 --> 01:54:51,520
working group meeting i think we run out

2852
01:54:51,520 --> 01:54:53,760
of agenda

2853
01:54:53,760 --> 01:54:56,159
sure yes

2854
01:54:56,159 --> 01:54:57,520
we have done

2855
01:54:57,520 --> 01:55:00,080
very good discussion here and of course

2856
01:55:00,080 --> 01:55:02,000
we don't have enough time

2857
01:55:02,000 --> 01:55:06,239
to discuss everything as europe so

2858
01:55:06,239 --> 01:55:08,239
we should have uh

2859
01:55:08,239 --> 01:55:10,400
continue our discussion in the mailing

2860
01:55:10,400 --> 01:55:11,280
list

2861
01:55:11,280 --> 01:55:12,239
and

2862
01:55:12,239 --> 01:55:14,400
from this meeting we will

2863
01:55:14,400 --> 01:55:17,760
the chairs will have to do some homework

2864
01:55:17,760 --> 01:55:20,400
and also do the shaffer

2865
01:55:20,400 --> 01:55:21,760
work and

2866
01:55:21,760 --> 01:55:23,679
there may be

2867
01:55:23,679 --> 01:55:25,679
some

2868
01:55:25,679 --> 01:55:27,679
working group calls for

2869
01:55:27,679 --> 01:55:28,400
the

2870
01:55:28,400 --> 01:55:29,920
adoption

2871
01:55:29,920 --> 01:55:30,880
with

2872
01:55:30,880 --> 01:55:34,159
we show some potential here

2873
01:55:34,159 --> 01:55:36,638
robert

2874
01:55:37,920 --> 01:55:40,400
do you want to

2875
01:55:40,719 --> 01:55:42,080
once you've finished once you're

2876
01:55:42,080 --> 01:55:44,560
finishing are you done

2877
01:55:44,560 --> 01:55:46,639
i have done yeah i was just going to

2878
01:55:46,639 --> 01:55:48,159
quickly pick up on some of the points

2879
01:55:48,159 --> 01:55:50,000
that turles made earlier in the meeting

2880
01:55:50,000 --> 01:55:52,159
about sort of process thing i would like

2881
01:55:52,159 --> 01:55:54,159
to encourage folks to sort of cross

2882
01:55:54,159 --> 01:55:55,280
review

2883
01:55:55,280 --> 01:55:56,800
each other's documents that helps them

2884
01:55:56,800 --> 01:55:59,920
progress a lot more quickly um because

2885
01:55:59,920 --> 01:56:02,080
then uh you get comments and also you'll

2886
01:56:02,080 --> 01:56:03,679
help you review other comments the

2887
01:56:03,679 --> 01:56:06,320
shepherding role that mentioned again

2888
01:56:06,320 --> 01:56:07,760
i'd like to encourage folks to do that

2889
01:56:07,760 --> 01:56:10,320
it's a really great way to learn

2890
01:56:10,320 --> 01:56:13,599
um what the sort of document publishing

2891
01:56:13,599 --> 01:56:15,840
life cycle is and what the steps are and

2892
01:56:15,840 --> 01:56:17,360
it gives you a great view as to what

2893
01:56:17,360 --> 01:56:18,400
that is

2894
01:56:18,400 --> 01:56:19,520
and helps you when you're progressing

2895
01:56:19,520 --> 01:56:20,719
your own documents if you understand

2896
01:56:20,719 --> 01:56:22,080
what the steps are and what's expected

2897
01:56:22,080 --> 01:56:23,679
and required there's different things so

2898
01:56:23,679 --> 01:56:25,599
i'm sure that the chairs for people who

2899
01:56:25,599 --> 01:56:28,159
are new would help you with um getting

2900
01:56:28,159 --> 01:56:30,080
started and there's various guidelines

2901
01:56:30,080 --> 01:56:31,599
and i'm gonna i can provide some help

2902
01:56:31,599 --> 01:56:33,599
and pointers for that and then the last

2903
01:56:33,599 --> 01:56:35,119
thing that telus also mentioned i think

2904
01:56:35,119 --> 01:56:36,159
is really important i'm really glad to

2905
01:56:36,159 --> 01:56:37,920
see this slide is about if you can

2906
01:56:37,920 --> 01:56:40,800
provide non-com feedback um on all the

2907
01:56:40,800 --> 01:56:42,080
people you know and the positions and

2908
01:56:42,080 --> 01:56:44,480
things i think that's really helpful um

2909
01:56:44,480 --> 01:56:47,280
for nom com to make um make make the

2910
01:56:47,280 --> 01:56:49,119
decisions they need to and choose the

2911
01:56:49,119 --> 01:56:51,760
right people going forward so um again i

2912
01:56:51,760 --> 01:56:53,840
think that's that's a good call out and

2913
01:56:53,840 --> 01:56:55,360
i used to support that as well

2914
01:56:55,360 --> 01:56:58,000
thank you all for your time

2915
01:56:58,000 --> 01:56:59,360
thank you robert

2916
01:56:59,360 --> 01:57:03,599
thank you all for your time um i'm now

2917
01:57:03,599 --> 01:57:06,320
announce the meeting close thank you see

2918
01:57:06,320 --> 01:57:08,840
you next time

2919
01:57:08,840 --> 01:57:12,400
bye hi

2920
01:57:12,400 --> 01:57:16,199
thank you bye

