1
00:00:23,119 --> 00:00:26,119
foreign

2
00:00:31,279 --> 00:00:33,360
i will still wait one or two minutes

3
00:00:33,360 --> 00:00:36,000
just for later arrivals and then we will

4
00:00:36,000 --> 00:00:36,880
start

5
00:00:36,880 --> 00:00:40,200
okay folks

6
00:03:11,680 --> 00:03:14,400
so hello everyone

7
00:03:14,400 --> 00:03:16,560
i hope you hear me

8
00:03:16,560 --> 00:03:19,200
loud and clear welcome to the lisp

9
00:03:19,200 --> 00:03:22,159
working group in this itf 112.

10
00:03:22,159 --> 00:03:24,799
uh we are a couple of minutes late but

11
00:03:24,799 --> 00:03:27,120
was a little bit impossible to wait a

12
00:03:27,120 --> 00:03:29,599
little bit in the meantime you got more

13
00:03:29,599 --> 00:03:32,159
familiar with the note well that applies

14
00:03:32,159 --> 00:03:33,680
here

15
00:03:33,680 --> 00:03:36,879
the very very very short summaries that

16
00:03:36,879 --> 00:03:39,280
whatever noise you do during this

17
00:03:39,280 --> 00:03:42,879
meeting is a contribution to the ietf

18
00:03:42,879 --> 00:03:45,840
however there is also

19
00:03:45,840 --> 00:03:49,360
another little piece of not well that is

20
00:03:49,360 --> 00:03:51,680
important to detail is the fact that we

21
00:03:51,680 --> 00:03:54,239
have a code of conduct

22
00:03:54,239 --> 00:03:57,439
detailed in rfc 7154

23
00:03:57,439 --> 00:03:58,480
now

24
00:03:58,480 --> 00:04:00,720
lisp i think that

25
00:04:00,720 --> 00:04:02,000
we behave

26
00:04:02,000 --> 00:04:03,920
okay and this is important it's

27
00:04:03,920 --> 00:04:06,400
important to respect uh

28
00:04:06,400 --> 00:04:07,920
each one another

29
00:04:07,920 --> 00:04:10,560
and that we have discussion based on

30
00:04:10,560 --> 00:04:12,239
technical argument

31
00:04:12,239 --> 00:04:13,280
not

32
00:04:13,280 --> 00:04:16,959
nothing else okay and we we struggle to

33
00:04:16,959 --> 00:04:19,519
find global internet solution

34
00:04:19,519 --> 00:04:22,880
and all in operational environments

35
00:04:22,880 --> 00:04:23,840
and

36
00:04:23,840 --> 00:04:27,520
we contribute to the ietf as i said in

37
00:04:27,520 --> 00:04:30,560
lisp i think we we behave

38
00:04:30,560 --> 00:04:32,000
okay

39
00:04:32,000 --> 00:04:34,240
unfortunately it's not

40
00:04:34,240 --> 00:04:36,479
in every in each working group that is

41
00:04:36,479 --> 00:04:38,639
going that way but um

42
00:04:38,639 --> 00:04:40,800
it's important that the the same

43
00:04:40,800 --> 00:04:43,919
behavior you have here please spread it

44
00:04:43,919 --> 00:04:45,440
in the etf

45
00:04:45,440 --> 00:04:47,919
bring people to be reasonable and

46
00:04:47,919 --> 00:04:51,359
respectful okay

47
00:04:52,720 --> 00:04:54,720
as for the business

48
00:04:54,720 --> 00:04:58,320
and this is the usual pointer i'm luigi

49
00:04:58,320 --> 00:05:01,440
uh joel alpern is my co-chair he's also

50
00:05:01,440 --> 00:05:04,720
online padma house online is also our

51
00:05:04,720 --> 00:05:07,360
secretary she will take uh

52
00:05:07,360 --> 00:05:09,280
she will provide minutes offline later

53
00:05:09,280 --> 00:05:11,520
on as usual

54
00:05:11,520 --> 00:05:14,400
the usual links are here for the charter

55
00:05:14,400 --> 00:05:17,520
the job room audio stream mythical

56
00:05:17,520 --> 00:05:20,000
and the agenda and slides

57
00:05:20,000 --> 00:05:22,320
okay

58
00:05:23,280 --> 00:05:27,840
a little bit of an update uh

59
00:05:27,840 --> 00:05:28,800
since

60
00:05:28,800 --> 00:05:32,720
one one one uh the developing uh a few

61
00:05:32,720 --> 00:05:34,639
documents that have been pushed for

62
00:05:34,639 --> 00:05:36,560
publication so are now

63
00:05:36,560 --> 00:05:39,520
in the hand of alvaro our responsible id

64
00:05:39,520 --> 00:05:41,440
which is also online

65
00:05:41,440 --> 00:05:42,400
okay

66
00:05:42,400 --> 00:05:43,280
um

67
00:05:43,280 --> 00:05:46,080
so we are making progress in a certain

68
00:05:46,080 --> 00:05:47,039
way

69
00:05:47,039 --> 00:05:49,199
and i say in a certain way because if

70
00:05:49,199 --> 00:05:51,440
you see on the your

71
00:05:51,440 --> 00:05:54,560
right hand side there is a lot of red

72
00:05:54,560 --> 00:05:56,720
meaning that there are documents that

73
00:05:56,720 --> 00:05:57,520
are

74
00:05:57,520 --> 00:06:00,960
sitting there for a while okay

75
00:06:00,960 --> 00:06:03,759
now um the bottleneck

76
00:06:03,759 --> 00:06:05,520
is lip sack

77
00:06:05,520 --> 00:06:08,240
okay is the the last piece of work that

78
00:06:08,240 --> 00:06:10,400
is missing in order to unblock a lot of

79
00:06:10,400 --> 00:06:12,080
other documents

80
00:06:12,080 --> 00:06:14,000
including by the way

81
00:06:14,000 --> 00:06:14,960
uh

82
00:06:14,960 --> 00:06:18,240
the lisp introduction okay which has

83
00:06:18,240 --> 00:06:21,039
been updated by damian susan de mental

84
00:06:21,039 --> 00:06:22,880
this has been done just to

85
00:06:22,880 --> 00:06:26,319
to because the document was so old

86
00:06:26,319 --> 00:06:28,880
all that there were references to the

87
00:06:28,880 --> 00:06:31,039
experimental rfcs

88
00:06:31,039 --> 00:06:32,720
which i mean

89
00:06:32,720 --> 00:06:35,680
make sense to to to update it and put

90
00:06:35,680 --> 00:06:37,840
the right references there which has

91
00:06:37,840 --> 00:06:40,639
been done uh between

92
00:06:40,639 --> 00:06:43,280
1 11 and 9. okay

93
00:06:43,280 --> 00:06:45,440
uh as for the

94
00:06:45,440 --> 00:06:46,720
lisp sec

95
00:06:46,720 --> 00:06:48,720
the status is the following

96
00:06:48,720 --> 00:06:51,199
i'm shattering the document

97
00:06:51,199 --> 00:06:53,039
so

98
00:06:53,039 --> 00:06:55,680
i already prepared the write up but

99
00:06:55,680 --> 00:06:57,430
because i had a few

100
00:06:57,430 --> 00:06:58,720
[Music]

101
00:06:58,720 --> 00:07:01,280
i would say small issues on the document

102
00:07:01,280 --> 00:07:03,120
uh

103
00:07:03,120 --> 00:07:04,639
just to to

104
00:07:04,639 --> 00:07:08,160
clarify things a little bit i i i wrote

105
00:07:08,160 --> 00:07:10,560
my review i sent it to the outers

106
00:07:10,560 --> 00:07:12,960
um as you know albert

107
00:07:12,960 --> 00:07:16,080
is the one holding the pen and making

108
00:07:16,080 --> 00:07:18,960
the changes usually and managing that

109
00:07:18,960 --> 00:07:19,930
he is

110
00:07:19,930 --> 00:07:21,280
[Music]

111
00:07:21,280 --> 00:07:24,319
a little bit busy this period so he was

112
00:07:24,319 --> 00:07:26,160
not able to make any progress on that

113
00:07:26,160 --> 00:07:27,360
side

114
00:07:27,360 --> 00:07:29,280
so

115
00:07:29,280 --> 00:07:32,240
recently contacted back damien which is

116
00:07:32,240 --> 00:07:34,800
willing to to take the pen

117
00:07:34,800 --> 00:07:37,199
and try to solve the residual issues

118
00:07:37,199 --> 00:07:40,720
that are in the document

119
00:07:41,360 --> 00:07:43,440
i will work with him to bring him to

120
00:07:43,440 --> 00:07:47,039
speed about the latest development hope

121
00:07:47,039 --> 00:07:48,400
i hope

122
00:07:48,400 --> 00:07:50,400
that we are

123
00:07:50,400 --> 00:07:52,560
able to to finish this document before

124
00:07:52,560 --> 00:07:54,160
christmas okay

125
00:07:54,160 --> 00:07:56,800
however i invite all the co-authors to

126
00:07:56,800 --> 00:07:59,360
be a little bit responsive because any

127
00:07:59,360 --> 00:08:01,039
change that

128
00:08:01,039 --> 00:08:02,720
damien does

129
00:08:02,720 --> 00:08:04,960
has to be validated by the other routers

130
00:08:04,960 --> 00:08:06,800
okay

131
00:08:06,800 --> 00:08:09,360
as for the other documents we have the

132
00:08:09,360 --> 00:08:12,879
young model i think this is quite ready

133
00:08:12,879 --> 00:08:14,319
and after

134
00:08:14,319 --> 00:08:15,039
we

135
00:08:15,039 --> 00:08:16,720
unblock the lisptec

136
00:08:16,720 --> 00:08:19,120
this should be good to go as well and go

137
00:08:19,120 --> 00:08:22,000
for the last call

138
00:08:22,000 --> 00:08:26,160
we have lisp vpn and lisp l2 l3 mobility

139
00:08:26,160 --> 00:08:27,680
which will be discussed

140
00:08:27,680 --> 00:08:31,039
later on today they are on the agenda

141
00:08:31,039 --> 00:08:31,840
um

142
00:08:31,840 --> 00:08:34,719
and then we have a bunch of working

143
00:08:34,719 --> 00:08:38,080
group items that so basically are

144
00:08:38,080 --> 00:08:40,799
working documents that were sitting

145
00:08:40,799 --> 00:08:42,958
there for a while

146
00:08:42,958 --> 00:08:43,760
and

147
00:08:43,760 --> 00:08:46,640
it's time to to pay attention to them

148
00:08:46,640 --> 00:08:48,560
and review them so

149
00:08:48,560 --> 00:08:50,959
what i suggest to everyone is to have a

150
00:08:50,959 --> 00:08:52,480
look to them

151
00:08:52,480 --> 00:08:55,360
and review them we will go over each of

152
00:08:55,360 --> 00:08:57,200
one of them in order to see whether or

153
00:08:57,200 --> 00:09:00,959
not we want to publish them or not okay

154
00:09:00,959 --> 00:09:02,240
because at the end

155
00:09:02,240 --> 00:09:04,000
every publication is

156
00:09:04,000 --> 00:09:06,720
the product of the working group so we

157
00:09:06,720 --> 00:09:09,440
have to agree to to to move it forward

158
00:09:09,440 --> 00:09:12,720
if there is interest in the document

159
00:09:12,720 --> 00:09:16,399
uh in looking at the charter there is

160
00:09:16,399 --> 00:09:19,040
one one and only piece of work that is

161
00:09:19,040 --> 00:09:20,080
missing

162
00:09:20,080 --> 00:09:21,519
is the

163
00:09:21,519 --> 00:09:24,160
traversal document okay but we have a

164
00:09:24,160 --> 00:09:26,560
good candidate that was around has been

165
00:09:26,560 --> 00:09:27,839
around for a while

166
00:09:27,839 --> 00:09:30,480
so the lisp not traversal

167
00:09:30,480 --> 00:09:31,760
um

168
00:09:31,760 --> 00:09:33,040
so

169
00:09:33,040 --> 00:09:36,160
this is something also to consider in

170
00:09:36,160 --> 00:09:38,399
order to make progress for

171
00:09:38,399 --> 00:09:39,760
113

172
00:09:39,760 --> 00:09:42,000
okay

173
00:09:42,320 --> 00:09:44,560
so

174
00:09:44,640 --> 00:09:48,399
as for the agenda we have two

175
00:09:48,399 --> 00:09:50,959
working group items presentation

176
00:09:50,959 --> 00:09:54,240
so as i said before this is lisp vpn and

177
00:09:54,240 --> 00:09:56,720
lisp eid mobility okay

178
00:09:56,720 --> 00:09:58,560
and there is a

179
00:09:58,560 --> 00:10:00,160
presentation about our known working

180
00:10:00,160 --> 00:10:02,079
group item which is the

181
00:10:02,079 --> 00:10:05,279
map server reliable transport

182
00:10:05,279 --> 00:10:08,000
and we will conclude with the

183
00:10:08,000 --> 00:10:11,279
list fix okay and

184
00:10:11,279 --> 00:10:14,240
this time we have enough time to discuss

185
00:10:14,240 --> 00:10:17,200
so we we shouldn't be short in time so i

186
00:10:17,200 --> 00:10:20,399
invite everybody to

187
00:10:20,399 --> 00:10:22,959
to ask question clarification just

188
00:10:22,959 --> 00:10:23,920
discuss

189
00:10:23,920 --> 00:10:26,959
this is what we are for here why we have

190
00:10:26,959 --> 00:10:28,959
a

191
00:10:28,959 --> 00:10:31,040
virtual meeting this time maybe physical

192
00:10:31,040 --> 00:10:33,279
meeting next time let's see let's hope

193
00:10:33,279 --> 00:10:34,560
okay

194
00:10:34,560 --> 00:10:35,600
so

195
00:10:35,600 --> 00:10:38,079
anything

196
00:10:38,079 --> 00:10:39,360
anybody has

197
00:10:39,360 --> 00:10:41,760
questions or remarks

198
00:10:41,760 --> 00:10:44,880
on the agenda or working group

199
00:10:44,880 --> 00:10:47,839
documents

200
00:10:52,640 --> 00:10:54,480
take it as a no

201
00:10:54,480 --> 00:10:56,800
so the next three presentations are from

202
00:10:56,800 --> 00:10:57,920
mark

203
00:10:57,920 --> 00:10:59,120
mark

204
00:10:59,120 --> 00:11:01,360
you can share directly the slides your

205
00:11:01,360 --> 00:11:03,200
yourself in the sense that they have

206
00:11:03,200 --> 00:11:06,079
been uploaded on the mythical

207
00:11:06,079 --> 00:11:09,200
and uh if i stop sharing

208
00:11:09,200 --> 00:11:11,120
you can ask to share

209
00:11:11,120 --> 00:11:13,519
and say oh yeah

210
00:11:13,519 --> 00:11:15,120
you're not sharing this time or do you

211
00:11:15,120 --> 00:11:17,920
want me to i i can if you wish

212
00:11:17,920 --> 00:11:20,560
as you like yeah it's fine yeah if you

213
00:11:20,560 --> 00:11:22,320
share i can go okay

214
00:11:22,320 --> 00:11:25,519
let me let me choose the first is yeah d

215
00:11:25,519 --> 00:11:28,560
mobility as far as i remember

216
00:11:28,560 --> 00:11:30,160
so this one

217
00:11:30,160 --> 00:11:32,480
is the first

218
00:11:32,480 --> 00:11:35,600
um thanks lizzy

219
00:11:36,240 --> 00:11:37,200
yeah

220
00:11:37,200 --> 00:11:42,040
this is mark uh work at cisco

221
00:11:42,079 --> 00:11:45,279
um yeah presenting three things today

222
00:11:45,279 --> 00:11:49,120
but yeah hopefully uh i'll

223
00:11:49,120 --> 00:11:50,800
take uh

224
00:11:50,800 --> 00:11:52,800
hopefully i won't take too much time for

225
00:11:52,800 --> 00:11:53,680
them

226
00:11:53,680 --> 00:11:55,920
um two of them as lucy was mentioning

227
00:11:55,920 --> 00:11:59,839
are leave mobility and and these vpns

228
00:11:59,839 --> 00:12:03,839
these two are working group items um

229
00:12:03,839 --> 00:12:07,200
we have been using them for quite a long

230
00:12:07,200 --> 00:12:09,519
time and

231
00:12:09,519 --> 00:12:11,760
would like to

232
00:12:11,760 --> 00:12:14,160
to recover the discussion around them

233
00:12:14,160 --> 00:12:16,720
and and make some progress on on these

234
00:12:16,720 --> 00:12:19,200
two documents okay

235
00:12:19,200 --> 00:12:22,240
the first one is this one eid mobility

236
00:12:22,240 --> 00:12:25,440
uh so yeah the title is l2 s3 id

237
00:12:25,440 --> 00:12:28,160
mobility using a unified control plane

238
00:12:28,160 --> 00:12:30,399
um

239
00:12:31,120 --> 00:12:33,680
questions when when you say

240
00:12:33,680 --> 00:12:35,920
we are using them for a while means that

241
00:12:35,920 --> 00:12:38,560
uh it's it's it has been uh there is at

242
00:12:38,560 --> 00:12:41,600
least one implementation and you are yes

243
00:12:41,600 --> 00:12:42,720
using it

244
00:12:42,720 --> 00:12:46,079
for yes for the next two slides or also

245
00:12:46,079 --> 00:12:48,800
for the third one the the reliable

246
00:12:48,800 --> 00:12:50,000
transport

247
00:12:50,000 --> 00:12:53,440
actually the three of them yeah we we we

248
00:12:53,440 --> 00:12:54,720
use them

249
00:12:54,720 --> 00:12:58,079
a lot actually yeah it's

250
00:12:58,079 --> 00:12:59,200
we have

251
00:12:59,200 --> 00:13:01,120
yeah to be honest we have a lot of

252
00:13:01,120 --> 00:13:03,279
interest in this studios because they

253
00:13:03,279 --> 00:13:04,959
constitute

254
00:13:04,959 --> 00:13:08,079
the bases of most of what we do

255
00:13:08,079 --> 00:13:09,200
these days

256
00:13:09,200 --> 00:13:11,519
okay

257
00:13:11,600 --> 00:13:13,040
so

258
00:13:13,040 --> 00:13:14,959
yeah starting with this one

259
00:13:14,959 --> 00:13:19,000
if you can go to the next slide

260
00:13:20,320 --> 00:13:22,720
so these drafts

261
00:13:22,720 --> 00:13:24,639
essentially uh

262
00:13:24,639 --> 00:13:27,040
provides a list of methods for using a

263
00:13:27,040 --> 00:13:29,360
common control plane to concurrently

264
00:13:29,360 --> 00:13:32,639
support layer 3 overlays and layer 2

265
00:13:32,639 --> 00:13:36,560
overlays both with eid mobility

266
00:13:36,560 --> 00:13:39,680
um with respect to layer 3 overlays the

267
00:13:39,680 --> 00:13:42,800
the draft mostly focuses on

268
00:13:42,800 --> 00:13:45,279
mobility i mean it provides some

269
00:13:45,279 --> 00:13:48,079
forwarding descriptions but but the most

270
00:13:48,079 --> 00:13:49,680
important part is

271
00:13:49,680 --> 00:13:51,760
what to do with mobility

272
00:13:51,760 --> 00:13:54,079
and with respect to layer two overlays

273
00:13:54,079 --> 00:13:54,959
it

274
00:13:54,959 --> 00:13:56,639
it goes over everything right the

275
00:13:56,639 --> 00:13:59,519
unicast and multi-destination non-ip and

276
00:13:59,519 --> 00:14:03,360
ip inter-subnet it also talks about

277
00:14:03,360 --> 00:14:05,120
how to optimize

278
00:14:05,120 --> 00:14:07,920
urban nd resolution using lisp

279
00:14:07,920 --> 00:14:10,880
nexus live please

280
00:14:12,959 --> 00:14:16,399
with respect to layer 3 overlays

281
00:14:16,399 --> 00:14:18,240
what the document describes is that

282
00:14:18,240 --> 00:14:20,000
without mobility

283
00:14:20,000 --> 00:14:22,480
what you need is basically already

284
00:14:22,480 --> 00:14:25,920
described in in the rfc

285
00:14:25,920 --> 00:14:29,199
but in addition to that it gives some

286
00:14:29,199 --> 00:14:31,600
guidelines on how to support mobility

287
00:14:31,600 --> 00:14:34,240
with lisp

288
00:14:35,600 --> 00:14:37,839
as i was saying right the the idea there

289
00:14:37,839 --> 00:14:40,160
with mobility is it has registered

290
00:14:40,160 --> 00:14:44,720
prefixes that are locally attached um

291
00:14:44,720 --> 00:14:46,720
eads it considers locally attached to

292
00:14:46,720 --> 00:14:49,440
the ids then it describes how to support

293
00:14:49,440 --> 00:14:52,240
traffic between sites

294
00:14:52,240 --> 00:14:54,639
again here all the rules are already

295
00:14:54,639 --> 00:14:56,720
described in the rfc

296
00:14:56,720 --> 00:14:59,360
but then it puts the focus on on what to

297
00:14:59,360 --> 00:15:03,519
do when eids change location and

298
00:15:03,519 --> 00:15:05,040
um

299
00:15:05,040 --> 00:15:06,800
if you want an important part here is

300
00:15:06,800 --> 00:15:08,959
what to how to

301
00:15:08,959 --> 00:15:11,760
update the the network when when these

302
00:15:11,760 --> 00:15:14,560
changes happen right and and it

303
00:15:14,560 --> 00:15:17,839
proposes two methods one is data-driven

304
00:15:17,839 --> 00:15:19,839
smart and and the other

305
00:15:19,839 --> 00:15:22,399
or pops out uh

306
00:15:22,399 --> 00:15:24,160
notifies okay

307
00:15:24,160 --> 00:15:25,199
um

308
00:15:25,199 --> 00:15:27,839
next slide please

309
00:15:29,600 --> 00:15:31,199
so the next three slides try to

310
00:15:31,199 --> 00:15:33,920
illustrate this with a picture uh what

311
00:15:33,920 --> 00:15:38,639
to do with l3 overlays and mobility

312
00:15:38,959 --> 00:15:41,279
the picture starts with what we already

313
00:15:41,279 --> 00:15:43,920
know let's say we have

314
00:15:43,920 --> 00:15:46,880
multiple sides and we have two endpoints

315
00:15:46,880 --> 00:15:48,800
let's call it a and b

316
00:15:48,800 --> 00:15:52,480
uh and point a is connected to side a

317
00:15:52,480 --> 00:15:55,360
and point b is connected to set b

318
00:15:55,360 --> 00:15:56,240
and

319
00:15:56,240 --> 00:15:57,920
and they are talking to each other right

320
00:15:57,920 --> 00:15:59,360
um

321
00:15:59,360 --> 00:16:01,920
so essentially what we will have is the

322
00:16:01,920 --> 00:16:04,480
xtr on each one of the sides register

323
00:16:04,480 --> 00:16:07,040
these locally connected prefixes

324
00:16:07,040 --> 00:16:12,560
we use statuses 10 1 1 1 and 10 2 2

325
00:16:12,639 --> 00:16:14,560
these two prefixes will be registered

326
00:16:14,560 --> 00:16:16,800
with the mapping system

327
00:16:16,800 --> 00:16:18,240
and then

328
00:16:18,240 --> 00:16:21,279
when a is trying to send traffic to v

329
00:16:21,279 --> 00:16:24,959
the xtr on on site a will have resolved

330
00:16:24,959 --> 00:16:27,839
a map cache uh with

331
00:16:27,839 --> 00:16:31,759
for for b with the r log of of side b

332
00:16:31,759 --> 00:16:34,000
but this is

333
00:16:34,000 --> 00:16:36,720
basically now nothing new here

334
00:16:36,720 --> 00:16:40,000
um next slide please

335
00:16:42,079 --> 00:16:42,959
and

336
00:16:42,959 --> 00:16:45,519
and now we go and what happens when when

337
00:16:45,519 --> 00:16:48,639
a prefix moves so let's assume now here

338
00:16:48,639 --> 00:16:52,959
that b moves to from side b to side c

339
00:16:52,959 --> 00:16:53,440
um

340
00:16:53,440 --> 00:16:54,959
[Music]

341
00:16:54,959 --> 00:16:56,399
now side c

342
00:16:56,399 --> 00:16:58,560
what will happen first it will detect

343
00:16:58,560 --> 00:17:00,959
the presence of of these

344
00:17:00,959 --> 00:17:03,120
uh endpoint and

345
00:17:03,120 --> 00:17:06,079
and the xtr or the etr on on this side

346
00:17:06,079 --> 00:17:08,319
will now send a new registration to the

347
00:17:08,319 --> 00:17:09,839
mapping system

348
00:17:09,839 --> 00:17:13,119
updating the vr log or the location of

349
00:17:13,119 --> 00:17:15,359
of these

350
00:17:15,359 --> 00:17:17,119
this node

351
00:17:17,119 --> 00:17:19,199
now what the document proposes or

352
00:17:19,199 --> 00:17:22,480
describes is that um the mapping system

353
00:17:22,480 --> 00:17:25,760
must send a map notify to the old

354
00:17:25,760 --> 00:17:29,919
location the the the previous etr that

355
00:17:29,919 --> 00:17:34,080
registered this prefix and when this

356
00:17:34,080 --> 00:17:38,240
xtr or etr receives this magnify it will

357
00:17:38,240 --> 00:17:40,240
create what the document calls an away

358
00:17:40,240 --> 00:17:42,160
entry that it's basically a local

359
00:17:42,160 --> 00:17:44,000
registry that

360
00:17:44,000 --> 00:17:47,840
hosts or an eid that was locally present

361
00:17:47,840 --> 00:17:50,720
at the atr now it's not there anymore

362
00:17:50,720 --> 00:17:54,799
this is what the document calls an away

363
00:17:55,039 --> 00:17:57,840
at this point the mobility detection has

364
00:17:57,840 --> 00:17:59,039
completed

365
00:17:59,039 --> 00:18:02,240
but the problem that we have is that map

366
00:18:02,240 --> 00:18:05,120
caches or that have been

367
00:18:05,120 --> 00:18:07,440
stored all around other sites in the

368
00:18:07,440 --> 00:18:10,240
network are still staying

369
00:18:10,240 --> 00:18:13,720
next slide please

370
00:18:15,440 --> 00:18:17,360
and this slide talks about how do we

371
00:18:17,360 --> 00:18:18,559
update

372
00:18:18,559 --> 00:18:21,200
these stalemate caches and we the

373
00:18:21,200 --> 00:18:24,080
document proposes two basic options i'll

374
00:18:24,080 --> 00:18:26,480
start with option one

375
00:18:26,480 --> 00:18:30,160
option one is okay we we have on on this

376
00:18:30,160 --> 00:18:32,080
remote side we have the steel map guys

377
00:18:32,080 --> 00:18:34,240
so traffic is still being encapsulated

378
00:18:34,240 --> 00:18:36,160
to the old site

379
00:18:36,160 --> 00:18:37,360
traffic will

380
00:18:37,360 --> 00:18:40,000
will be sent for example in this case

381
00:18:40,000 --> 00:18:43,919
from xtr inside a to steal

382
00:18:43,919 --> 00:18:46,559
etr in in side b

383
00:18:46,559 --> 00:18:48,559
now when site b

384
00:18:48,559 --> 00:18:51,679
the xtr receives this traffic

385
00:18:51,679 --> 00:18:52,640
it will

386
00:18:52,640 --> 00:18:56,240
see that it's destined to

387
00:18:56,240 --> 00:18:57,039
uh

388
00:18:57,039 --> 00:19:00,400
knee id that it's it's in the away end

389
00:19:00,400 --> 00:19:03,440
so as a reaction to this or or to this

390
00:19:03,440 --> 00:19:05,360
discovery what what this site will do is

391
00:19:05,360 --> 00:19:08,320
send an uh data driven smr

392
00:19:08,320 --> 00:19:11,120
to to the original side

393
00:19:11,120 --> 00:19:13,039
basically this smart is telling the

394
00:19:13,039 --> 00:19:15,520
other side hey you're sending traffic to

395
00:19:15,520 --> 00:19:17,120
wrong location

396
00:19:17,120 --> 00:19:18,160
and

397
00:19:18,160 --> 00:19:20,960
and following this smr the original site

398
00:19:20,960 --> 00:19:21,919
will

399
00:19:21,919 --> 00:19:24,240
will refresh its its mapping entry will

400
00:19:24,240 --> 00:19:26,320
start a map resolution process with a

401
00:19:26,320 --> 00:19:27,440
mapping

402
00:19:27,440 --> 00:19:31,039
system and and find the new location of

403
00:19:31,039 --> 00:19:32,480
of the host

404
00:19:32,480 --> 00:19:35,360
or the id and start encapsulating to the

405
00:19:35,360 --> 00:19:37,840
new location

406
00:19:37,840 --> 00:19:40,240
this is option one we call it data

407
00:19:40,240 --> 00:19:41,840
driven smart

408
00:19:41,840 --> 00:19:44,799
the second option is take advantage of

409
00:19:44,799 --> 00:19:47,200
the procedures described in the pops up

410
00:19:47,200 --> 00:19:48,559
drafts and

411
00:19:48,559 --> 00:19:48,910
and

412
00:19:48,910 --> 00:19:50,840
[Music]

413
00:19:50,840 --> 00:19:52,960
whenever a site

414
00:19:52,960 --> 00:19:55,840
learns a map cache also subscribes for

415
00:19:55,840 --> 00:19:56,559
it

416
00:19:56,559 --> 00:19:57,520
so

417
00:19:57,520 --> 00:19:58,559
um

418
00:19:58,559 --> 00:20:00,480
the mapping system will send i'm

419
00:20:00,480 --> 00:20:03,120
notified as a publication

420
00:20:03,120 --> 00:20:05,600
an update to all the sites that

421
00:20:05,600 --> 00:20:06,559
that

422
00:20:06,559 --> 00:20:09,760
that have this stalemate guys

423
00:20:09,760 --> 00:20:11,440
okay

424
00:20:11,440 --> 00:20:12,320
um

425
00:20:12,320 --> 00:20:15,439
next slide please

426
00:20:15,520 --> 00:20:18,480
so this was for layer three right as we

427
00:20:18,480 --> 00:20:21,520
were saying for wording in layer 3 is

428
00:20:21,520 --> 00:20:22,559
all

429
00:20:22,559 --> 00:20:24,240
rfc

430
00:20:24,240 --> 00:20:26,720
mobility is what's different in this in

431
00:20:26,720 --> 00:20:28,320
this draft

432
00:20:28,320 --> 00:20:30,640
when it comes to layer 2 overlays the

433
00:20:30,640 --> 00:20:33,600
draft goes a bit more specific and

434
00:20:33,600 --> 00:20:36,240
and it talks about

435
00:20:36,240 --> 00:20:36,710
um

436
00:20:36,710 --> 00:20:37,840
[Music]

437
00:20:37,840 --> 00:20:40,000
what needs to be registered what it's

438
00:20:40,000 --> 00:20:42,159
all about right and and it started by

439
00:20:42,159 --> 00:20:45,120
saying okay either is in l2 overlays or

440
00:20:45,120 --> 00:20:46,480
mac addresses

441
00:20:46,480 --> 00:20:49,120
as you all know but then what the

442
00:20:49,120 --> 00:20:52,240
document proposes is that in order to

443
00:20:52,240 --> 00:20:55,919
separate or keep layer 2 and l3 uh

444
00:20:55,919 --> 00:20:58,480
separate in in the network we dedicate a

445
00:20:58,480 --> 00:21:01,039
specific instance like this for

446
00:21:01,039 --> 00:21:03,840
for l2 and l3 purposes okay

447
00:21:03,840 --> 00:21:06,960
so all the mappings for l2 and l3 or

448
00:21:06,960 --> 00:21:10,080
particularly for l2 will be iid scoped

449
00:21:10,080 --> 00:21:12,080
right and and these mappings will be

450
00:21:12,080 --> 00:21:14,640
mapped to our log mappings

451
00:21:14,640 --> 00:21:19,520
and i mean the way we use instant ideas

452
00:21:19,520 --> 00:21:22,400
to segment the two types of overlays or

453
00:21:22,400 --> 00:21:24,880
all these christ in the vpn draft that

454
00:21:24,880 --> 00:21:27,480
will come after this one

455
00:21:27,480 --> 00:21:29,440
[Music]

456
00:21:29,440 --> 00:21:32,000
then what the document goes is into

457
00:21:32,000 --> 00:21:34,720
talking about how do we do unicast

458
00:21:34,720 --> 00:21:38,000
traffic handling uh yeah bomb traffic

459
00:21:38,000 --> 00:21:39,039
handling

460
00:21:39,039 --> 00:21:42,080
um rv and nd support and mobility

461
00:21:42,080 --> 00:21:44,000
support and and the next slides go a

462
00:21:44,000 --> 00:21:46,400
little bit more on detail about these

463
00:21:46,400 --> 00:21:48,480
things

464
00:21:48,480 --> 00:21:51,280
next slide please

465
00:21:52,799 --> 00:21:55,679
so first mobility um

466
00:21:55,679 --> 00:21:58,559
mobility with l2 as described in the

467
00:21:58,559 --> 00:22:01,919
document is no different from what we do

468
00:22:01,919 --> 00:22:05,840
with l3 right so the idea is that

469
00:22:05,840 --> 00:22:08,480
in in this case mags

470
00:22:08,480 --> 00:22:09,840
are moving

471
00:22:09,840 --> 00:22:11,840
within a broadcast domain or xtr is

472
00:22:11,840 --> 00:22:14,640
connected to common broadcast domain but

473
00:22:14,640 --> 00:22:17,200
but the concept of mobility is exactly

474
00:22:17,200 --> 00:22:18,320
the same right

475
00:22:18,320 --> 00:22:21,840
and the way we update web caches

476
00:22:21,840 --> 00:22:25,039
it's also the same data data-driven

477
00:22:25,039 --> 00:22:28,799
based sms or or pops up

478
00:22:28,799 --> 00:22:31,039
one specific node with respect to

479
00:22:31,039 --> 00:22:33,840
forwarding and l2 is that ttl handling

480
00:22:33,840 --> 00:22:36,320
changes from what we do in layer three

481
00:22:36,320 --> 00:22:39,200
so the idea is that even when traffic is

482
00:22:39,200 --> 00:22:42,320
crossing this l2 overlay the ttl header

483
00:22:42,320 --> 00:22:46,240
of the inner package should not change

484
00:22:46,720 --> 00:22:49,600
okay next slide

485
00:22:51,440 --> 00:22:53,200
in order to support broadcast and

486
00:22:53,200 --> 00:22:55,039
multicast traffic

487
00:22:55,039 --> 00:22:58,559
all participants of an l2 overlay

488
00:22:58,559 --> 00:23:01,440
must join a common group right so that

489
00:23:01,440 --> 00:23:04,000
we can broadcast this information across

490
00:23:04,000 --> 00:23:06,240
all participants

491
00:23:06,240 --> 00:23:08,559
the document document

492
00:23:08,559 --> 00:23:09,919
reports two

493
00:23:09,919 --> 00:23:11,919
possible approaches to these when

494
00:23:11,919 --> 00:23:14,159
multicast underlay is supported

495
00:23:14,159 --> 00:23:16,799
in in that case all participants must

496
00:23:16,799 --> 00:23:19,919
join a common group this

497
00:23:19,919 --> 00:23:21,360
common underlay group let's say

498
00:23:21,360 --> 00:23:22,799
multicast group

499
00:23:22,799 --> 00:23:24,240
and

500
00:23:24,240 --> 00:23:26,080
and this multicast group will be

501
00:23:26,080 --> 00:23:28,799
associated to the particular instance id

502
00:23:28,799 --> 00:23:32,240
that they are participating in

503
00:23:32,240 --> 00:23:34,720
when multicast underlay is not available

504
00:23:34,720 --> 00:23:36,720
then

505
00:23:36,720 --> 00:23:38,559
this document takes advantage of the

506
00:23:38,559 --> 00:23:39,760
signal-free

507
00:23:39,760 --> 00:23:41,520
multicast target

508
00:23:41,520 --> 00:23:42,960
and

509
00:23:42,960 --> 00:23:44,000
and

510
00:23:44,000 --> 00:23:46,320
proposes that all the members register

511
00:23:46,320 --> 00:23:48,559
to a very specific group right as for

512
00:23:48,559 --> 00:23:51,200
zero and and the group is

513
00:23:51,200 --> 00:23:53,360
uh

514
00:23:53,360 --> 00:23:55,760
and group all ones okay

515
00:23:55,760 --> 00:23:58,240
and and the same right uh following the

516
00:23:58,240 --> 00:24:00,080
rfc uh

517
00:24:00,080 --> 00:24:02,559
the map server and and the participants

518
00:24:02,559 --> 00:24:05,279
will will compile a list of all the

519
00:24:05,279 --> 00:24:07,200
participants that

520
00:24:07,200 --> 00:24:08,799
so whenever there is traffic that needs

521
00:24:08,799 --> 00:24:10,320
to be broadcasted

522
00:24:10,320 --> 00:24:12,799
it will be it can be replicated to all

523
00:24:12,799 --> 00:24:15,120
of them

524
00:24:15,279 --> 00:24:18,760
next slide please

525
00:24:19,679 --> 00:24:23,679
okay there's one specific thing in in l2

526
00:24:23,679 --> 00:24:26,480
overlays is that normally arv and nd

527
00:24:26,480 --> 00:24:28,640
traffic are

528
00:24:28,640 --> 00:24:30,559
uh represent a lot of traffic in the

529
00:24:30,559 --> 00:24:33,200
network so one thing that we normally

530
00:24:33,200 --> 00:24:35,360
want to do is limit the amount of this

531
00:24:35,360 --> 00:24:37,039
traffic that that

532
00:24:37,039 --> 00:24:38,880
floods the network

533
00:24:38,880 --> 00:24:39,760
and

534
00:24:39,760 --> 00:24:43,120
this is something that we can also uh

535
00:24:43,120 --> 00:24:46,799
deal with with with lisp okay and in

536
00:24:46,799 --> 00:24:49,200
this particular sense what the draft

537
00:24:49,200 --> 00:24:51,200
proposes is that we dedicate one

538
00:24:51,200 --> 00:24:54,799
instance id to to to these mappings

539
00:24:54,799 --> 00:24:57,440
um the idea here is that

540
00:24:57,440 --> 00:25:01,279
um xtrs can register with a mapping

541
00:25:01,279 --> 00:25:05,440
system pairs of ip addresses we

542
00:25:05,440 --> 00:25:07,760
consider the ids to our logs mac

543
00:25:07,760 --> 00:25:09,840
addresses

544
00:25:09,840 --> 00:25:14,880
so whenever an xtr wants to resolve

545
00:25:14,880 --> 00:25:17,360
one ip to mac binding instead of running

546
00:25:17,360 --> 00:25:19,279
the network what you can do is just

547
00:25:19,279 --> 00:25:21,200
query the mapping system and try to

548
00:25:21,200 --> 00:25:24,400
gather this information

549
00:25:24,960 --> 00:25:29,600
yeah from the movie system okay

550
00:25:29,600 --> 00:25:32,480
next slide please

551
00:25:32,880 --> 00:25:35,279
this is still work in progress but this

552
00:25:35,279 --> 00:25:38,240
was one one of the last remaining eating

553
00:25:38,240 --> 00:25:40,080
items that we discussed in the group

554
00:25:40,080 --> 00:25:43,520
that was needed for for the document

555
00:25:43,520 --> 00:25:44,320
um

556
00:25:44,320 --> 00:25:46,320
the idea is how do we provide

557
00:25:46,320 --> 00:25:48,799
multi-homing services um

558
00:25:48,799 --> 00:25:50,880
one discussion that i'll

559
00:25:50,880 --> 00:25:53,360
open to to the group is that we're

560
00:25:53,360 --> 00:25:55,360
having is whether

561
00:25:55,360 --> 00:25:57,679
this is something that we want to

562
00:25:57,679 --> 00:26:00,720
to document in in the draft or we want

563
00:26:00,720 --> 00:26:00,940
to

564
00:26:00,940 --> 00:26:02,480
[Music]

565
00:26:02,480 --> 00:26:05,520
keep for a separate document okay

566
00:26:05,520 --> 00:26:07,919
but but yeah let me talk about how we

567
00:26:07,919 --> 00:26:10,320
are approaching this and but again we

568
00:26:10,320 --> 00:26:12,159
are still uh

569
00:26:12,159 --> 00:26:14,480
experimenting with this and seeing if if

570
00:26:14,480 --> 00:26:15,919
this works

571
00:26:15,919 --> 00:26:20,080
the proposal so far is that

572
00:26:20,080 --> 00:26:21,279
we use

573
00:26:21,279 --> 00:26:24,720
an id to to identify a segment that is

574
00:26:24,720 --> 00:26:27,120
multi-homed uh with

575
00:26:27,120 --> 00:26:30,320
with multiple xtrs okay

576
00:26:30,320 --> 00:26:32,880
and and the idea here is that all xtr

577
00:26:32,880 --> 00:26:36,000
that are part of this l2 multi-homing

578
00:26:36,000 --> 00:26:38,480
group register this

579
00:26:38,480 --> 00:26:41,200
segment id with the mapping system with

580
00:26:41,200 --> 00:26:43,600
with two specific flags right the one

581
00:26:43,600 --> 00:26:47,279
they always use the merge request bit um

582
00:26:47,279 --> 00:26:50,000
so that through merge semantics the the

583
00:26:50,000 --> 00:26:52,000
map server consolidate consolidates a

584
00:26:52,000 --> 00:26:55,279
list of our logs belonging to this group

585
00:26:55,279 --> 00:26:57,919
and they all also set the one magnify

586
00:26:57,919 --> 00:27:02,159
bit so that all xtrs are notified

587
00:27:02,159 --> 00:27:05,120
with our log list that the map server is

588
00:27:05,120 --> 00:27:07,200
is compiling

589
00:27:07,200 --> 00:27:08,320
with this

590
00:27:08,320 --> 00:27:10,559
we achieve two things right for example

591
00:27:10,559 --> 00:27:12,640
uh when when

592
00:27:12,640 --> 00:27:15,279
when we need it right and and

593
00:27:15,279 --> 00:27:17,039
and a designated firmware that needs to

594
00:27:17,039 --> 00:27:18,399
be selected

595
00:27:18,399 --> 00:27:20,960
uh for this group the the map server can

596
00:27:20,960 --> 00:27:22,240
choose one

597
00:27:22,240 --> 00:27:25,200
out of the consolidated list right

598
00:27:25,200 --> 00:27:27,360
instead of having to implement that

599
00:27:27,360 --> 00:27:31,360
distributed algorithm um between xtrs to

600
00:27:31,360 --> 00:27:33,039
to make sure that they all choose the

601
00:27:33,039 --> 00:27:34,640
same

602
00:27:34,640 --> 00:27:37,120
um for example when we need to apply

603
00:27:37,120 --> 00:27:39,120
split horizon uh

604
00:27:39,120 --> 00:27:42,000
the same right based on

605
00:27:42,000 --> 00:27:44,799
on these map notifies all xtr's men

606
00:27:44,799 --> 00:27:47,440
know all the other participating str's

607
00:27:47,440 --> 00:27:50,320
so they can they can apply it they have

608
00:27:50,320 --> 00:27:53,520
the knowledge to apply this okay

609
00:27:53,520 --> 00:27:56,720
uh next slide please

610
00:27:57,840 --> 00:28:02,678
and finally yeah uh

611
00:28:03,039 --> 00:28:04,640
some

612
00:28:04,640 --> 00:28:07,120
other documents call it aliasing we

613
00:28:07,120 --> 00:28:10,080
still need to decide if this name makes

614
00:28:10,080 --> 00:28:12,399
sense here but but the basic idea here

615
00:28:12,399 --> 00:28:14,840
is that um

616
00:28:14,840 --> 00:28:18,159
when multiple xtrs are participating in

617
00:28:18,159 --> 00:28:20,159
in one of these groups they register

618
00:28:20,159 --> 00:28:22,320
eith with

619
00:28:22,320 --> 00:28:24,080
with an additional attribute that is

620
00:28:24,080 --> 00:28:25,039
this

621
00:28:25,039 --> 00:28:27,279
um segment id

622
00:28:27,279 --> 00:28:29,760
and and then we we use pops up

623
00:28:29,760 --> 00:28:32,000
procedures as as described in the drafts

624
00:28:32,000 --> 00:28:34,399
so that members of the group they are

625
00:28:34,399 --> 00:28:37,039
all notified about uh

626
00:28:37,039 --> 00:28:39,440
yeah these that are detected by other

627
00:28:39,440 --> 00:28:41,039
members of

628
00:28:41,039 --> 00:28:43,200
of that group right

629
00:28:43,200 --> 00:28:46,159
with these all all xtrs are able to

630
00:28:46,159 --> 00:28:48,799
learn the other ids preemptively learn

631
00:28:48,799 --> 00:28:50,880
let's say all the other ids add them to

632
00:28:50,880 --> 00:28:53,600
their local databases and and

633
00:28:53,600 --> 00:28:55,679
and send the common mac registration to

634
00:28:55,679 --> 00:28:57,760
to the market system

635
00:28:57,760 --> 00:29:00,880
now one node or one question that we

636
00:29:00,880 --> 00:29:02,320
have

637
00:29:02,320 --> 00:29:04,799
with the group is whether

638
00:29:04,799 --> 00:29:07,200
you think that we should be using side

639
00:29:07,200 --> 00:29:09,760
id for this or or

640
00:29:09,760 --> 00:29:12,559
or creating a new segment id tag to

641
00:29:12,559 --> 00:29:15,520
support these use cases is the the right

642
00:29:15,520 --> 00:29:18,000
way to go

643
00:29:18,159 --> 00:29:22,320
and yeah next slide that's the last one

644
00:29:22,320 --> 00:29:26,200
open two questions yeah

645
00:29:27,279 --> 00:29:28,640
um

646
00:29:28,640 --> 00:29:30,720
as i was saying right we have been using

647
00:29:30,720 --> 00:29:33,360
this quite a lot um

648
00:29:33,360 --> 00:29:36,430
it's it's working right in practice

649
00:29:36,430 --> 00:29:39,039
[Music]

650
00:29:39,039 --> 00:29:41,840
are there any questions

651
00:29:45,520 --> 00:29:48,880
uh i i have a couple of just for the

652
00:29:48,880 --> 00:29:51,120
clarification so

653
00:29:51,120 --> 00:29:54,399
so you you basically use the instance id

654
00:29:54,399 --> 00:29:56,399
in order to distinguish

655
00:29:56,399 --> 00:29:59,760
distinguish between l3 and l2 overlays

656
00:29:59,760 --> 00:30:01,600
basically right

657
00:30:01,600 --> 00:30:02,720
yes

658
00:30:02,720 --> 00:30:04,159
so and

659
00:30:04,159 --> 00:30:07,919
you you but you do not reserve any

660
00:30:07,919 --> 00:30:12,080
specific value to the iid i mean is just

661
00:30:12,080 --> 00:30:14,480
by configuration somewhere you say this

662
00:30:14,480 --> 00:30:15,440
value of

663
00:30:15,440 --> 00:30:18,159
iid is for l2

664
00:30:18,159 --> 00:30:20,960
is that yes yes exactly so

665
00:30:20,960 --> 00:30:23,039
basically at least

666
00:30:23,039 --> 00:30:25,200
how we support it is in configuration

667
00:30:25,200 --> 00:30:27,440
you go and and you start defining

668
00:30:27,440 --> 00:30:30,240
instance ids and then you say okay you

669
00:30:30,240 --> 00:30:32,240
locally on the router normally what you

670
00:30:32,240 --> 00:30:35,919
do is you bind an instance id to a vrf

671
00:30:35,919 --> 00:30:38,080
or to uh

672
00:30:38,080 --> 00:30:41,360
to to a vlan right and that's the way

673
00:30:41,360 --> 00:30:43,919
the router knows right

674
00:30:43,919 --> 00:30:46,080
whether to link it to

675
00:30:46,080 --> 00:30:49,440
an l3 domain or an l2 domain

676
00:30:49,440 --> 00:30:50,880
in

677
00:30:50,880 --> 00:30:53,120
what about lisp gpe

678
00:30:53,120 --> 00:30:55,039
because we have the other

679
00:30:55,039 --> 00:30:56,080
other

680
00:30:56,080 --> 00:30:58,880
headers that could be used to to to

681
00:30:58,880 --> 00:31:01,200
um

682
00:31:01,360 --> 00:31:04,480
yeah to encapsulate and you can natively

683
00:31:04,480 --> 00:31:06,080
use different

684
00:31:06,080 --> 00:31:07,679
um

685
00:31:07,679 --> 00:31:11,840
l2 l3 other things inside basically

686
00:31:11,840 --> 00:31:13,200
yeah yeah i mean

687
00:31:13,200 --> 00:31:15,840
the the actually the draft

688
00:31:15,840 --> 00:31:18,960
has a section for encapsulation and

689
00:31:18,960 --> 00:31:21,100
i need documents right that

690
00:31:21,100 --> 00:31:22,320
[Music]

691
00:31:22,320 --> 00:31:24,720
you can combine these with least gp and

692
00:31:24,720 --> 00:31:26,230
and it fits right

693
00:31:26,230 --> 00:31:28,880
[Music]

694
00:31:28,880 --> 00:31:31,840
actually interestingly

695
00:31:31,840 --> 00:31:35,120
with vxlan header right and i mean you

696
00:31:35,120 --> 00:31:37,039
need an and

697
00:31:37,039 --> 00:31:39,360
a header that is able to

698
00:31:39,360 --> 00:31:42,720
encapsulate l2 and l3 um and also

699
00:31:42,720 --> 00:31:44,480
segment right that's that's where the

700
00:31:44,480 --> 00:31:48,720
instant id part comes into play

701
00:31:49,039 --> 00:31:50,480
and just uh

702
00:31:50,480 --> 00:31:53,279
last two things is um

703
00:31:53,279 --> 00:31:55,519
so

704
00:31:56,320 --> 00:31:58,880
it makes more sense to me

705
00:31:58,880 --> 00:32:02,799
instead of defining a a a new segment id

706
00:32:02,799 --> 00:32:07,440
maybe to use the site id in order to

707
00:32:07,440 --> 00:32:09,200
to

708
00:32:09,200 --> 00:32:11,519
but i mean this is just personal opinion

709
00:32:11,519 --> 00:32:13,039
i mean

710
00:32:13,039 --> 00:32:15,200
and um

711
00:32:15,200 --> 00:32:16,080
instead

712
00:32:16,080 --> 00:32:17,360
as a chair

713
00:32:17,360 --> 00:32:19,440
i have to say that you should revise the

714
00:32:19,440 --> 00:32:21,519
the document in the sense that

715
00:32:21,519 --> 00:32:24,159
i just skimmed through it and it's based

716
00:32:24,159 --> 00:32:26,080
on the old

717
00:32:26,080 --> 00:32:29,840
uh rfcs so

718
00:32:30,559 --> 00:32:32,559
so he

719
00:32:32,559 --> 00:32:35,120
is good to update to the beast document

720
00:32:35,120 --> 00:32:36,880
and make sure that he's

721
00:32:36,880 --> 00:32:39,840
coherent with the set of documents that

722
00:32:39,840 --> 00:32:42,559
we have now

723
00:32:43,279 --> 00:32:47,039
i didn't check but maybe also because um

724
00:32:47,039 --> 00:32:48,880
lispsec is

725
00:32:48,880 --> 00:32:52,159
mandatory to implement uh maybe

726
00:32:52,159 --> 00:32:53,919
think about what if there is any

727
00:32:53,919 --> 00:32:56,399
implication or whatsoever on that side

728
00:32:56,399 --> 00:32:59,200
on the lip side okay okay okay these are

729
00:32:59,200 --> 00:33:00,880
good points yeah um

730
00:33:00,880 --> 00:33:03,360
yeah to be honest since the draft has

731
00:33:03,360 --> 00:33:06,959
not changed much

732
00:33:07,519 --> 00:33:09,120
we haven't been paying

733
00:33:09,120 --> 00:33:11,279
enough attention to this but i'll i'll

734
00:33:11,279 --> 00:33:12,399
make sure that

735
00:33:12,399 --> 00:33:13,919
that we are good

736
00:33:13,919 --> 00:33:15,200
thank you

737
00:33:15,200 --> 00:33:18,960
okay uh so let me stop sharing this one

738
00:33:18,960 --> 00:33:21,039
and we'll go to the

739
00:33:21,039 --> 00:33:25,799
other one that should be this pvpn

740
00:33:26,000 --> 00:33:27,360
here we go

741
00:33:27,360 --> 00:33:28,960
okay

742
00:33:28,960 --> 00:33:31,360
so unfortunately victor couldn't make it

743
00:33:31,360 --> 00:33:32,799
today

744
00:33:32,799 --> 00:33:35,279
he was going to present this but i'm

745
00:33:35,279 --> 00:33:36,840
taking over

746
00:33:36,840 --> 00:33:39,919
um i'll

747
00:33:39,919 --> 00:33:42,320
um this is the other draft that it's a

748
00:33:42,320 --> 00:33:43,600
working group

749
00:33:43,600 --> 00:33:46,720
item um and and the same that we said

750
00:33:46,720 --> 00:33:49,279
before right this is extensively used in

751
00:33:49,279 --> 00:33:51,440
practice and

752
00:33:51,440 --> 00:33:54,480
and we'd like to bring by the discussion

753
00:33:54,480 --> 00:33:56,480
on these drafts and make sure that they

754
00:33:56,480 --> 00:33:59,200
move forward

755
00:33:59,279 --> 00:34:02,000
next slide please

756
00:34:02,000 --> 00:34:02,880
okay

757
00:34:02,880 --> 00:34:05,039
so this code of this drive is all about

758
00:34:05,039 --> 00:34:06,799
segmentation right segmentation in

759
00:34:06,799 --> 00:34:10,239
particular of of the iv space and

760
00:34:10,239 --> 00:34:12,879
it talks about how to use instance ids

761
00:34:12,879 --> 00:34:15,359
and extended tids right

762
00:34:15,359 --> 00:34:18,800
doubles of instance ideas and aps

763
00:34:18,800 --> 00:34:22,399
to to to segment uh our our network

764
00:34:22,399 --> 00:34:23,199
right

765
00:34:23,199 --> 00:34:25,599
it it goes into how what are the

766
00:34:25,599 --> 00:34:27,918
implications of these for control plane

767
00:34:27,918 --> 00:34:31,119
procedures how do we deal with this at

768
00:34:31,119 --> 00:34:34,879
the data plane and forwarding level okay

769
00:34:34,879 --> 00:34:36,159
and

770
00:34:36,159 --> 00:34:37,520
it addresses

771
00:34:37,520 --> 00:34:39,359
for both of them

772
00:34:39,359 --> 00:34:43,839
yeah unicast and multicast support

773
00:34:45,199 --> 00:34:47,119
the document also includes some

774
00:34:47,119 --> 00:34:49,280
considerations on segmenting the art

775
00:34:49,280 --> 00:34:52,399
lock space um

776
00:34:52,800 --> 00:34:54,639
from the perspective of the document

777
00:34:54,639 --> 00:34:56,159
most of

778
00:34:56,159 --> 00:34:57,280
the

779
00:34:57,280 --> 00:34:59,839
the the attention is on eith space the

780
00:34:59,839 --> 00:35:00,560
the

781
00:35:00,560 --> 00:35:03,200
segmentation of the airlock space is can

782
00:35:03,200 --> 00:35:05,280
be considered more as an opportunity

783
00:35:05,280 --> 00:35:07,440
right and how to deal with it

784
00:35:07,440 --> 00:35:09,680
but the important part is is the id

785
00:35:09,680 --> 00:35:11,440
space

786
00:35:11,440 --> 00:35:14,320
next slide please

787
00:35:14,880 --> 00:35:17,680
the draft also provides some

788
00:35:17,680 --> 00:35:19,680
guidelines or

789
00:35:19,680 --> 00:35:20,720
some

790
00:35:20,720 --> 00:35:22,640
tries to address the the

791
00:35:22,640 --> 00:35:25,200
methods to to to support cross vpn

792
00:35:25,200 --> 00:35:27,359
communications or most commonly known

793
00:35:27,359 --> 00:35:28,800
extranet

794
00:35:28,800 --> 00:35:31,920
and and for extranets it

795
00:35:31,920 --> 00:35:34,160
it talks about how to deal with unicast

796
00:35:34,160 --> 00:35:36,480
and multicast traffic and and what are

797
00:35:36,480 --> 00:35:39,119
the implications when we do cross vpn

798
00:35:39,119 --> 00:35:42,079
for for example pub sub smart generation

799
00:35:42,079 --> 00:35:45,040
or lock probing okay

800
00:35:45,040 --> 00:35:47,680
now the document uh proposes a

801
00:35:47,680 --> 00:35:50,640
particular encoding for home ids and

802
00:35:50,640 --> 00:35:52,400
this this is

803
00:35:52,400 --> 00:35:54,720
relevant for extranets right

804
00:35:54,720 --> 00:35:57,760
um and and this is the encoding right at

805
00:35:57,760 --> 00:36:00,160
least we

806
00:36:00,160 --> 00:36:02,480
first item that says this is the home id

807
00:36:02,480 --> 00:36:04,720
and the second item it's just the alcav

808
00:36:04,720 --> 00:36:09,279
type 2 with with the instance id value

809
00:36:10,240 --> 00:36:11,599
and

810
00:36:11,599 --> 00:36:14,079
you you will see next that but the home

811
00:36:14,079 --> 00:36:16,560
id is always encoded as an art lock as a

812
00:36:16,560 --> 00:36:19,119
proposal here

813
00:36:19,119 --> 00:36:21,359
okay

814
00:36:21,680 --> 00:36:24,240
next is like

815
00:36:24,839 --> 00:36:28,800
please okay the the next slides try to

816
00:36:28,800 --> 00:36:29,920
go

817
00:36:29,920 --> 00:36:32,000
again a bit through

818
00:36:32,000 --> 00:36:35,520
packet flows here um i'll

819
00:36:35,520 --> 00:36:38,720
describe them very briefly not to go too

820
00:36:38,720 --> 00:36:40,720
much into detail but

821
00:36:40,720 --> 00:36:42,960
the the basic idea when we want to

822
00:36:42,960 --> 00:36:46,000
provide segmentation is that

823
00:36:46,000 --> 00:36:49,440
we do iid scope registrations and and

824
00:36:49,440 --> 00:36:51,119
resolutions right

825
00:36:51,119 --> 00:36:52,240
and

826
00:36:52,240 --> 00:36:54,400
yes luigi was saying right this in some

827
00:36:54,400 --> 00:36:56,880
sense applies also to to what we were

828
00:36:56,880 --> 00:36:59,119
saying for l2 and l3 right so the idea

829
00:36:59,119 --> 00:37:01,359
is that now we scope everything within

830
00:37:01,359 --> 00:37:03,680
the context of an instance id

831
00:37:03,680 --> 00:37:06,320
uh wait what do we mean by scoping is

832
00:37:06,320 --> 00:37:08,320
for example if we focus in the map

833
00:37:08,320 --> 00:37:11,359
registration let's say that

834
00:37:11,359 --> 00:37:14,079
our network is organized so that we have

835
00:37:14,079 --> 00:37:16,880
a couple of instance ids and and we have

836
00:37:16,880 --> 00:37:19,520
endpoints associated to each one of

837
00:37:19,520 --> 00:37:21,119
these instance id

838
00:37:21,119 --> 00:37:24,480
locally on on each side this instant id

839
00:37:24,480 --> 00:37:26,560
can be translated what we were saying to

840
00:37:26,560 --> 00:37:30,000
a vrs to a vlan or whatever we

841
00:37:30,000 --> 00:37:32,320
we decided associated with

842
00:37:32,320 --> 00:37:34,560
um the idea is okay now we have an

843
00:37:34,560 --> 00:37:37,119
endpoint for example in this picture

844
00:37:37,119 --> 00:37:38,400
side v

845
00:37:38,400 --> 00:37:40,560
will have an endpoint let's call it

846
00:37:40,560 --> 00:37:42,560
endpoint b that is associated to

847
00:37:42,560 --> 00:37:44,400
instance id1

848
00:37:44,400 --> 00:37:45,760
and

849
00:37:45,760 --> 00:37:49,200
and decide we'll register

850
00:37:49,440 --> 00:37:51,760
these with the mapping system we using

851
00:37:51,760 --> 00:37:54,000
these extended eid right extended the

852
00:37:54,000 --> 00:37:56,000
ids is nothing else than

853
00:37:56,000 --> 00:37:58,720
registering as an eid the tuple instance

854
00:37:58,720 --> 00:38:01,680
id plus plus the eid

855
00:38:01,680 --> 00:38:03,839
and and this will register with the

856
00:38:03,839 --> 00:38:07,119
associated data of the set

857
00:38:07,119 --> 00:38:10,960
now if we turn to map resolution site um

858
00:38:10,960 --> 00:38:12,720
the same right we make use of these

859
00:38:12,720 --> 00:38:15,280
instance id so let's say that

860
00:38:15,280 --> 00:38:18,400
endpoint a in instance id1 wants to talk

861
00:38:18,400 --> 00:38:21,680
to endpoint b means id1 so

862
00:38:21,680 --> 00:38:24,720
so what it will do is when this traffic

863
00:38:24,720 --> 00:38:27,440
hits the xdr the xtr will also use this

864
00:38:27,440 --> 00:38:29,520
extended eid to

865
00:38:29,520 --> 00:38:33,200
to express interest for for for that

866
00:38:33,200 --> 00:38:35,280
particular destination right and

867
00:38:35,280 --> 00:38:37,040
and the same extent that the id in this

868
00:38:37,040 --> 00:38:39,359
case is instant id1 and and the

869
00:38:39,359 --> 00:38:41,520
destination eid

870
00:38:41,520 --> 00:38:43,040
um

871
00:38:43,040 --> 00:38:45,280
once map resolution completes all these

872
00:38:45,280 --> 00:38:49,200
is stored also using the segmentation in

873
00:38:49,200 --> 00:38:52,240
in forwarding let's say or in the cache

874
00:38:52,240 --> 00:38:53,200
um

875
00:38:53,200 --> 00:38:55,359
and and again right there using this

876
00:38:55,359 --> 00:38:58,960
this tuffle or instance ids and id and

877
00:38:58,960 --> 00:39:00,400
and this is the basis of the whole

878
00:39:00,400 --> 00:39:03,119
segmentation when traffic is forwarded

879
00:39:03,119 --> 00:39:04,880
we do the same right as we were talking

880
00:39:04,880 --> 00:39:06,000
before

881
00:39:06,000 --> 00:39:07,200
um

882
00:39:07,200 --> 00:39:10,640
on the header of the forwarding

883
00:39:10,640 --> 00:39:13,359
of the encapsulated packet we will

884
00:39:13,359 --> 00:39:16,400
stump the instant id so the the

885
00:39:16,400 --> 00:39:17,839
egress

886
00:39:17,839 --> 00:39:20,240
node the etr knows

887
00:39:20,240 --> 00:39:22,079
which segment this this traffic is

888
00:39:22,079 --> 00:39:24,000
associated with

889
00:39:24,000 --> 00:39:27,440
okay next is likely

890
00:39:27,760 --> 00:39:30,400
extranets work a little bit different

891
00:39:30,400 --> 00:39:33,359
here but basically the idea is okay what

892
00:39:33,359 --> 00:39:37,520
if we want to allow traffic to to cross

893
00:39:37,520 --> 00:39:39,520
segment boundaries okay

894
00:39:39,520 --> 00:39:42,320
um so the idea here is that okay it all

895
00:39:42,320 --> 00:39:44,800
starts extranet assuming that we have a

896
00:39:44,800 --> 00:39:47,599
policy uh in the network that says okay

897
00:39:47,599 --> 00:39:48,480
uh

898
00:39:48,480 --> 00:39:50,960
traffic from this instance id can be

899
00:39:50,960 --> 00:39:54,400
leaked into this other instant id

900
00:39:54,400 --> 00:39:57,200
um how this is structured following the

901
00:39:57,200 --> 00:40:01,040
document is that the etr uh will always

902
00:40:01,040 --> 00:40:03,280
have this policy right and and for

903
00:40:03,280 --> 00:40:05,040
example using the

904
00:40:05,040 --> 00:40:07,680
the example in in the picture

905
00:40:07,680 --> 00:40:10,960
we have a site v that

906
00:40:10,960 --> 00:40:12,400
sorry

907
00:40:12,400 --> 00:40:14,640
we have a side v that for example

908
00:40:14,640 --> 00:40:18,079
locally connected it's only spawning

909
00:40:18,079 --> 00:40:20,880
instance id3 okay but it has a local

910
00:40:20,880 --> 00:40:24,319
policy saying okay you have to allow

911
00:40:24,319 --> 00:40:25,359
traffic

912
00:40:25,359 --> 00:40:28,400
from instant id 1 and instant id 2 to to

913
00:40:28,400 --> 00:40:31,119
reach your destinations in instance ac

914
00:40:31,119 --> 00:40:33,520
in order to do this the xtr what it will

915
00:40:33,520 --> 00:40:35,359
do is is

916
00:40:35,359 --> 00:40:37,720
replicate the registration

917
00:40:37,720 --> 00:40:39,520
[Music]

918
00:40:39,520 --> 00:40:43,119
with with extended eid

919
00:40:43,119 --> 00:40:44,640
let's say 3v

920
00:40:44,640 --> 00:40:45,440
but

921
00:40:45,440 --> 00:40:48,000
but now in all other instances right so

922
00:40:48,000 --> 00:40:50,800
what what it will do is is

923
00:40:50,800 --> 00:40:53,520
replicate this registration we've

924
00:40:53,520 --> 00:40:55,839
extended the ids of all the target

925
00:40:55,839 --> 00:40:58,480
instance ids that it won't it wants to

926
00:40:58,480 --> 00:41:02,240
allow to communicate with with this knot

927
00:41:02,240 --> 00:41:03,760
something that is particular about this

928
00:41:03,760 --> 00:41:05,599
registration is that

929
00:41:05,599 --> 00:41:08,960
it carries the value of the destination

930
00:41:08,960 --> 00:41:11,839
instance id in this case three as an

931
00:41:11,839 --> 00:41:14,480
additional attribute of the registration

932
00:41:14,480 --> 00:41:17,520
and this is what the draft calls as home

933
00:41:17,520 --> 00:41:19,760
id

934
00:41:19,760 --> 00:41:20,120
um

935
00:41:20,120 --> 00:41:21,359
[Music]

936
00:41:21,359 --> 00:41:23,920
now if we turn to the sending side let's

937
00:41:23,920 --> 00:41:26,240
say we have this endpoint a that wants

938
00:41:26,240 --> 00:41:29,919
to talk to endpoint b

939
00:41:30,079 --> 00:41:32,880
the same traffic will hit the itr on

940
00:41:32,880 --> 00:41:35,040
site a and

941
00:41:35,040 --> 00:41:37,280
but this traffic is coming in instant

942
00:41:37,280 --> 00:41:38,880
id1 right so

943
00:41:38,880 --> 00:41:43,119
at that point this xtr uses um

944
00:41:43,119 --> 00:41:45,839
the vpn methods to to resolve

945
00:41:45,839 --> 00:41:48,880
destination and we'll send this

946
00:41:48,880 --> 00:41:52,000
this map request let's say with

947
00:41:52,000 --> 00:41:56,079
ins the extended id one b right because

948
00:41:56,079 --> 00:41:57,920
at this point this idr doesn't know that

949
00:41:57,920 --> 00:41:59,760
this is an external

950
00:41:59,760 --> 00:42:04,800
as a reply to these map requests the the

951
00:42:04,800 --> 00:42:07,839
the mapping carries this home id and

952
00:42:07,839 --> 00:42:10,400
this is installed into the map cache

953
00:42:10,400 --> 00:42:11,520
okay

954
00:42:11,520 --> 00:42:13,920
and this is the important part yeah with

955
00:42:13,920 --> 00:42:16,160
respect to the streamers now traffic

956
00:42:16,160 --> 00:42:18,000
will be encapsulated with the

957
00:42:18,000 --> 00:42:19,680
destination

958
00:42:19,680 --> 00:42:22,160
instance id right so traffic send on

959
00:42:22,160 --> 00:42:24,560
side one instant id one will be

960
00:42:24,560 --> 00:42:26,640
encapsulated with

961
00:42:26,640 --> 00:42:30,160
uh instance id3 right so that when side

962
00:42:30,160 --> 00:42:32,000
v receives this traffic directly

963
00:42:32,000 --> 00:42:33,440
delivers to

964
00:42:33,440 --> 00:42:35,760
the end point in the appropriate vrf or

965
00:42:35,760 --> 00:42:39,280
vlan or the proper segment

966
00:42:40,400 --> 00:42:41,200
okay

967
00:42:41,200 --> 00:42:45,000
and next slide please

968
00:42:45,440 --> 00:42:48,000
and then yeah the draft also addresses

969
00:42:48,000 --> 00:42:50,960
how do we deal with extranets and and

970
00:42:50,960 --> 00:42:54,000
multicast it uses signal free multicast

971
00:42:54,000 --> 00:42:57,359
for this the same as before

972
00:42:57,359 --> 00:42:57,940
um

973
00:42:57,940 --> 00:42:59,680
[Music]

974
00:42:59,680 --> 00:43:01,760
in this case everything more or less

975
00:43:01,760 --> 00:43:05,040
works the same with one mine or not is

976
00:43:05,040 --> 00:43:07,200
well not minor but an important note is

977
00:43:07,200 --> 00:43:09,440
that um

978
00:43:09,440 --> 00:43:11,040
well let me go through the flow and

979
00:43:11,040 --> 00:43:12,640
maybe can

980
00:43:12,640 --> 00:43:15,040
can explain the difference at the end so

981
00:43:15,040 --> 00:43:17,280
the same as before right if we start

982
00:43:17,280 --> 00:43:18,800
from the destination sides the

983
00:43:18,800 --> 00:43:20,880
destination sides now what what they

984
00:43:20,880 --> 00:43:24,240
will do is oh they they see some local

985
00:43:24,240 --> 00:43:26,720
nodes um

986
00:43:26,720 --> 00:43:29,040
joining a particular group or expressing

987
00:43:29,040 --> 00:43:31,760
interest for for a particular group

988
00:43:31,760 --> 00:43:34,480
because they have this extranet policy

989
00:43:34,480 --> 00:43:36,240
what they will do is

990
00:43:36,240 --> 00:43:37,839
register this

991
00:43:37,839 --> 00:43:40,400
interest in the multiple instance id is

992
00:43:40,400 --> 00:43:44,000
that that the policy is saying that

993
00:43:44,000 --> 00:43:45,680
that they should

994
00:43:45,680 --> 00:43:47,760
replicate this registration okay and and

995
00:43:47,760 --> 00:43:49,839
this is what's happening in this crowd

996
00:43:49,839 --> 00:43:51,200
right so

997
00:43:51,200 --> 00:43:51,630
um

998
00:43:51,630 --> 00:43:53,440
[Music]

999
00:43:53,440 --> 00:43:55,280
um

1000
00:43:55,280 --> 00:43:58,079
receivers bnn or or are expressing

1001
00:43:58,079 --> 00:44:02,160
interest in in in having um traffic

1002
00:44:02,160 --> 00:44:05,040
from source a to one particular group b

1003
00:44:05,040 --> 00:44:06,839
we deliver to them

1004
00:44:06,839 --> 00:44:09,280
okay now the important thing or the

1005
00:44:09,280 --> 00:44:11,359
important difference here is that when

1006
00:44:11,359 --> 00:44:15,040
site a in this picture tries to resolve

1007
00:44:15,040 --> 00:44:15,920
the

1008
00:44:15,920 --> 00:44:17,920
list of our logs that it needs to

1009
00:44:17,920 --> 00:44:19,520
replicate to

1010
00:44:19,520 --> 00:44:22,640
it will receive these replic this list

1011
00:44:22,640 --> 00:44:25,040
that has been learned through

1012
00:44:25,040 --> 00:44:28,560
through signal field procedures okay

1013
00:44:28,560 --> 00:44:29,760
now

1014
00:44:29,760 --> 00:44:32,640
this reply also carries this home home

1015
00:44:32,640 --> 00:44:35,119
ids but

1016
00:44:35,119 --> 00:44:36,880
um

1017
00:44:36,880 --> 00:44:39,440
replicating

1018
00:44:39,440 --> 00:44:42,720
to every destination instance id would

1019
00:44:42,720 --> 00:44:44,000
be a bit

1020
00:44:44,000 --> 00:44:46,960
prohibitive in terms of cost right at

1021
00:44:46,960 --> 00:44:49,200
the sending site so

1022
00:44:49,200 --> 00:44:50,960
so in this case what changes with

1023
00:44:50,960 --> 00:44:53,599
multicast and external is that

1024
00:44:53,599 --> 00:44:56,160
the source will still encapsulate with

1025
00:44:56,160 --> 00:44:59,920
the source iid uh to destinations and

1026
00:44:59,920 --> 00:45:02,640
and it will be the egrecides the etrs

1027
00:45:02,640 --> 00:45:06,160
and the sites to to decide to do this

1028
00:45:06,160 --> 00:45:08,319
conversion between instant id right so

1029
00:45:08,319 --> 00:45:11,599
that they will re receiving traffic from

1030
00:45:11,599 --> 00:45:14,160
from instant id1 in this case and and

1031
00:45:14,160 --> 00:45:16,560
they will be the responsible to locally

1032
00:45:16,560 --> 00:45:19,200
replicate to to the corresponding

1033
00:45:19,200 --> 00:45:21,200
instance ids

1034
00:45:21,200 --> 00:45:23,200
okay

1035
00:45:23,200 --> 00:45:26,078
next slide please

1036
00:45:27,520 --> 00:45:30,079
the same as before the draft has not had

1037
00:45:30,079 --> 00:45:32,400
many updates since it was adopted by the

1038
00:45:32,400 --> 00:45:34,640
working group

1039
00:45:34,640 --> 00:45:37,280
in practice it has been working for

1040
00:45:37,280 --> 00:45:39,440
quite some time now

1041
00:45:39,440 --> 00:45:41,520
we've been using it in practical

1042
00:45:41,520 --> 00:45:43,760
deployment

1043
00:45:43,760 --> 00:45:46,800
yeah most of the procedures here and

1044
00:45:46,800 --> 00:45:49,920
and the only last addition that i could

1045
00:45:49,920 --> 00:45:52,160
find

1046
00:45:52,160 --> 00:45:53,440
with

1047
00:45:53,440 --> 00:45:56,160
with respect to the draft is that it

1048
00:45:56,160 --> 00:45:58,240
it included some considerations on how

1049
00:45:58,240 --> 00:46:01,599
to calculate negative map replies when

1050
00:46:01,599 --> 00:46:04,079
when we are using extranet

1051
00:46:04,079 --> 00:46:05,040
okay

1052
00:46:05,040 --> 00:46:08,400
and and in order to include the home id

1053
00:46:08,400 --> 00:46:11,280
in in this replies but but yeah it's a

1054
00:46:11,280 --> 00:46:13,200
minor note in the draft so that the rest

1055
00:46:13,200 --> 00:46:15,040
of the contents

1056
00:46:15,040 --> 00:46:18,160
haven't changed so much

1057
00:46:18,160 --> 00:46:20,960
next slightly

1058
00:46:22,480 --> 00:46:25,040
and as i as we were saying right so

1059
00:46:25,040 --> 00:46:27,839
the vpn's really constitutes the basis

1060
00:46:27,839 --> 00:46:29,200
for everything that we're doing these

1061
00:46:29,200 --> 00:46:31,920
days for segmentation and extracts and

1062
00:46:31,920 --> 00:46:34,079
the solution has been out in the field

1063
00:46:34,079 --> 00:46:36,400
code is stable

1064
00:46:36,400 --> 00:46:38,720
um

1065
00:46:38,720 --> 00:46:40,880
yeah it's it's it's been

1066
00:46:40,880 --> 00:46:44,079
validated quite a bit right

1067
00:46:44,079 --> 00:46:47,280
so the authors would like to request

1068
00:46:47,280 --> 00:46:49,359
a possible write the working group to to

1069
00:46:49,359 --> 00:46:53,520
make a last call for this document since

1070
00:46:55,599 --> 00:46:58,240
and okay i think that's well as one

1071
00:46:58,240 --> 00:47:00,240
no

1072
00:47:00,240 --> 00:47:02,000
comments always we can

1073
00:47:02,000 --> 00:47:04,400
leave this one so before going to the

1074
00:47:04,400 --> 00:47:06,800
last call uh question

1075
00:47:06,800 --> 00:47:08,400
are there any questions from the

1076
00:47:08,400 --> 00:47:11,400
audience

1077
00:47:18,319 --> 00:47:21,040
i go ahead

1078
00:47:21,839 --> 00:47:25,599
let me switch between so uh here

1079
00:47:25,599 --> 00:47:27,280
you say um

1080
00:47:27,280 --> 00:47:30,400
afi is a distinguished name

1081
00:47:30,400 --> 00:47:32,400
and i look to the document it's a

1082
00:47:32,400 --> 00:47:35,200
distinguished name type but then doesn't

1083
00:47:35,200 --> 00:47:36,960
seem to be defined

1084
00:47:36,960 --> 00:47:39,839
anywhere

1085
00:47:39,839 --> 00:47:41,359
it's just

1086
00:47:41,359 --> 00:47:43,520
17 right i think yes

1087
00:47:43,520 --> 00:47:46,800
yeah actually that's the point

1088
00:47:46,880 --> 00:47:50,559
i think we use 17 right for

1089
00:47:50,640 --> 00:47:53,359
for uh distinguished names

1090
00:47:53,359 --> 00:47:56,480
but this refers to the uh dinos draft

1091
00:47:56,480 --> 00:47:58,400
about distinguished names

1092
00:47:58,400 --> 00:47:59,839
yes yes

1093
00:47:59,839 --> 00:48:01,599
but yeah i think

1094
00:48:01,599 --> 00:48:02,800
victor and

1095
00:48:02,800 --> 00:48:05,359
dino were debating how to provide this

1096
00:48:05,359 --> 00:48:06,640
yeah

1097
00:48:06,640 --> 00:48:08,319
okay um

1098
00:48:08,319 --> 00:48:10,400
if you're going to use distinguished

1099
00:48:10,400 --> 00:48:12,000
names then you're going to need to put

1100
00:48:12,000 --> 00:48:13,040
in text

1101
00:48:13,040 --> 00:48:15,040
about how they are distinguished what

1102
00:48:15,040 --> 00:48:17,760
keeps them separate because your example

1103
00:48:17,760 --> 00:48:19,680
is just an arbitrary name

1104
00:48:19,680 --> 00:48:21,520
that seems to imply that they're going

1105
00:48:21,520 --> 00:48:22,960
to collide

1106
00:48:22,960 --> 00:48:26,079
in the mapping system uh

1107
00:48:26,079 --> 00:48:28,559
that's not good but if you can keep them

1108
00:48:28,559 --> 00:48:29,920
separate

1109
00:48:29,920 --> 00:48:30,880
then

1110
00:48:30,880 --> 00:48:33,040
specify how

1111
00:48:33,040 --> 00:48:35,520
okay okay

1112
00:48:35,520 --> 00:48:37,520
i will also start putting the document

1113
00:48:37,520 --> 00:48:39,040
in the reference because it's not in the

1114
00:48:39,040 --> 00:48:42,319
reference list and again update them

1115
00:48:42,319 --> 00:48:43,280
because

1116
00:48:43,280 --> 00:48:44,480
um

1117
00:48:44,480 --> 00:48:48,720
look if you go on

1118
00:48:48,720 --> 00:48:52,480
here you still have a reference to rfc

1119
00:48:52,480 --> 00:48:55,480
6833

1120
00:48:55,920 --> 00:48:57,839
so this is a general update that you

1121
00:48:57,839 --> 00:49:00,720
need to do on documents i guess

1122
00:49:00,720 --> 00:49:03,359
i had uh another question

1123
00:49:03,359 --> 00:49:05,119
here in the the

1124
00:49:05,119 --> 00:49:08,800
extranet i mean you show how how it goes

1125
00:49:08,800 --> 00:49:11,760
in one direction uh uh i kind of

1126
00:49:11,760 --> 00:49:13,680
understand how it will go also in the

1127
00:49:13,680 --> 00:49:15,040
other direction

1128
00:49:15,040 --> 00:49:18,319
um what if there is any mismatch uh uh

1129
00:49:18,319 --> 00:49:19,280
to you

1130
00:49:19,280 --> 00:49:22,240
do you discuss that

1131
00:49:23,599 --> 00:49:25,200
yeah that that

1132
00:49:25,200 --> 00:49:27,040
by some reason

1133
00:49:27,040 --> 00:49:29,119
um

1134
00:49:29,119 --> 00:49:31,920
you you you do not encode you did not

1135
00:49:31,920 --> 00:49:34,800
encode all the ids or something this can

1136
00:49:34,800 --> 00:49:37,119
happen when you do an update or

1137
00:49:37,119 --> 00:49:39,040
something you see

1138
00:49:39,040 --> 00:49:40,559
yes

1139
00:49:40,559 --> 00:49:43,119
did you discuss yeah

1140
00:49:43,119 --> 00:49:46,240
i'm i don't think the document discusses

1141
00:49:46,240 --> 00:49:48,240
it but it's it's a very good point

1142
00:49:48,240 --> 00:49:51,280
because in practice i mean it's always a

1143
00:49:51,280 --> 00:49:52,880
challenge

1144
00:49:52,880 --> 00:49:56,079
i i think the problem is similar to

1145
00:49:56,079 --> 00:49:57,200
when you have

1146
00:49:57,200 --> 00:49:59,520
several xtrs and then you want to update

1147
00:49:59,520 --> 00:50:01,280
the mapping

1148
00:50:01,280 --> 00:50:03,200
is just up to the let's say to the

1149
00:50:03,200 --> 00:50:06,000
operator to make sure that you up update

1150
00:50:06,000 --> 00:50:07,920
all the extras at the same time in a

1151
00:50:07,920 --> 00:50:09,359
certain way so that the mapping is

1152
00:50:09,359 --> 00:50:11,839
coherent and you you should know that

1153
00:50:11,839 --> 00:50:13,599
the issue is not the case you have

1154
00:50:13,599 --> 00:50:14,559
trouble

1155
00:50:14,559 --> 00:50:15,680
so

1156
00:50:15,680 --> 00:50:18,720
you you just need to to add text that on

1157
00:50:18,720 --> 00:50:20,960
that i think

1158
00:50:20,960 --> 00:50:23,280
okay

1159
00:50:25,440 --> 00:50:27,680
i just went and looked at the draft the

1160
00:50:27,680 --> 00:50:30,559
use you're making of the name

1161
00:50:30,559 --> 00:50:33,280
would make me very nervous please think

1162
00:50:33,280 --> 00:50:35,359
very carefully about it a you're

1163
00:50:35,359 --> 00:50:37,280
creating a dependence on a document that

1164
00:50:37,280 --> 00:50:39,839
is not yet working group adopted and b

1165
00:50:39,839 --> 00:50:41,760
what you actually say is that the name

1166
00:50:41,760 --> 00:50:44,000
provides semantics

1167
00:50:44,000 --> 00:50:47,680
names don't provide semantics so be very

1168
00:50:47,680 --> 00:50:49,280
careful about whether

1169
00:50:49,280 --> 00:50:51,599
the name is really what you want for

1170
00:50:51,599 --> 00:50:53,359
this

1171
00:50:53,359 --> 00:50:56,720
okay okay um

1172
00:50:56,720 --> 00:50:59,200
okay yeah i can talk to victor and dino

1173
00:50:59,200 --> 00:51:01,839
and see if

1174
00:51:04,880 --> 00:51:06,640
in light of this

1175
00:51:06,640 --> 00:51:08,960
these comments that we gave you i would

1176
00:51:08,960 --> 00:51:12,480
suggest that we go first for uh

1177
00:51:12,480 --> 00:51:14,640
the document and then

1178
00:51:14,640 --> 00:51:17,680
we can certainly discuss our last call

1179
00:51:17,680 --> 00:51:19,920
okay okay

1180
00:51:19,920 --> 00:51:21,760
yeah i mean i think the last call was

1181
00:51:21,760 --> 00:51:25,280
more related to that there had not been

1182
00:51:25,280 --> 00:51:27,520
too many changes right but yeah but it's

1183
00:51:27,520 --> 00:51:29,119
a good point right then

1184
00:51:29,119 --> 00:51:31,599
we still have the bottleneck lispsec but

1185
00:51:31,599 --> 00:51:32,480
uh

1186
00:51:32,480 --> 00:51:34,400
and we need a

1187
00:51:34,400 --> 00:51:36,880
revised version of this document because

1188
00:51:36,880 --> 00:51:38,559
there is a couple of

1189
00:51:38,559 --> 00:51:41,359
of things to to to update and fix

1190
00:51:41,359 --> 00:51:42,880
i guess okay

1191
00:51:42,880 --> 00:51:44,240
okay

1192
00:51:44,240 --> 00:51:46,480
okay unless there are other

1193
00:51:46,480 --> 00:51:49,920
question or comments i will switch to

1194
00:51:49,920 --> 00:51:52,079
your last

1195
00:51:52,079 --> 00:51:55,079
presentation

1196
00:51:56,160 --> 00:51:58,720
this one

1197
00:51:59,119 --> 00:52:00,319
here we go

1198
00:52:00,319 --> 00:52:01,920
okay

1199
00:52:01,920 --> 00:52:03,040
um

1200
00:52:03,040 --> 00:52:05,200
yeah the last presentation i probably

1201
00:52:05,200 --> 00:52:08,720
said that i let others talk um

1202
00:52:08,720 --> 00:52:10,460
the the the same right

1203
00:52:10,460 --> 00:52:11,680
[Music]

1204
00:52:11,680 --> 00:52:13,520
none of the others could be here today

1205
00:52:13,520 --> 00:52:17,839
but i'm presenting on their behalf but

1206
00:52:17,839 --> 00:52:20,400
again the these

1207
00:52:20,400 --> 00:52:21,359
this is

1208
00:52:21,359 --> 00:52:23,760
kind we we have yeah

1209
00:52:23,760 --> 00:52:26,960
vested interest in in these drafts and

1210
00:52:26,960 --> 00:52:29,040
you'll see you know at the end i'll

1211
00:52:29,040 --> 00:52:31,359
make another call to

1212
00:52:31,359 --> 00:52:34,079
to make it a working group document and

1213
00:52:34,079 --> 00:52:36,160
and the reason we have this interest is

1214
00:52:36,160 --> 00:52:39,359
because we have been using these in in

1215
00:52:39,359 --> 00:52:42,880
practice and it has

1216
00:52:42,880 --> 00:52:44,720
we've gotten a lot of benefits out of

1217
00:52:44,720 --> 00:52:48,400
using these these procedures here and

1218
00:52:48,400 --> 00:52:51,280
um so i'll go through them and give some

1219
00:52:51,280 --> 00:52:53,359
background on what we have been doing

1220
00:52:53,359 --> 00:52:54,720
and

1221
00:52:54,720 --> 00:52:57,280
and and yeah let's let's hope

1222
00:52:57,280 --> 00:53:00,559
we can have a debate on this or

1223
00:53:00,559 --> 00:53:02,400
restart the debate on whether this

1224
00:53:02,400 --> 00:53:04,000
should be part of

1225
00:53:04,000 --> 00:53:06,400
the working group or not okay

1226
00:53:06,400 --> 00:53:09,280
next slide please

1227
00:53:10,240 --> 00:53:12,480
so just some background

1228
00:53:12,480 --> 00:53:15,839
the map server reliable transfer is is

1229
00:53:15,839 --> 00:53:19,040
as i was saying extensively used in okay

1230
00:53:19,040 --> 00:53:21,119
let's say our deployment right

1231
00:53:21,119 --> 00:53:21,570
um

1232
00:53:21,570 --> 00:53:22,640
[Music]

1233
00:53:22,640 --> 00:53:23,520
the

1234
00:53:23,520 --> 00:53:26,160
the reason we have these is because when

1235
00:53:26,160 --> 00:53:28,880
when we start experimenting with it uh

1236
00:53:28,880 --> 00:53:32,319
it showed very quick benefits to scale

1237
00:53:32,319 --> 00:53:35,359
the least deployments and and

1238
00:53:35,359 --> 00:53:37,599
we consider that it's been key to

1239
00:53:37,599 --> 00:53:40,960
support operation at scale for for very

1240
00:53:40,960 --> 00:53:43,599
large users right um

1241
00:53:43,599 --> 00:53:44,400
so

1242
00:53:44,400 --> 00:53:46,880
this is true when we have for example a

1243
00:53:46,880 --> 00:53:49,520
large number of vids or or when we have

1244
00:53:49,520 --> 00:53:51,680
mobility that what we were discussed

1245
00:53:51,680 --> 00:53:53,760
describing in the first draft at

1246
00:53:53,760 --> 00:53:55,440
large scale

1247
00:53:55,440 --> 00:53:56,720
and

1248
00:53:56,720 --> 00:53:59,680
and also for example when we try to plug

1249
00:53:59,680 --> 00:54:01,119
lisp

1250
00:54:01,119 --> 00:54:03,359
systems with other systems and we need

1251
00:54:03,359 --> 00:54:04,400
to do

1252
00:54:04,400 --> 00:54:06,960
redistribution of database mappings this

1253
00:54:06,960 --> 00:54:11,280
also provides some stability at scale

1254
00:54:11,280 --> 00:54:14,319
um in practical terms since the draft

1255
00:54:14,319 --> 00:54:16,800
proposes message reuse for many things

1256
00:54:16,800 --> 00:54:19,040
uh it it was

1257
00:54:19,040 --> 00:54:21,119
ideally implemented as an extension of

1258
00:54:21,119 --> 00:54:23,440
the registration process that that it's

1259
00:54:23,440 --> 00:54:27,520
well documented in the in the rfc okay

1260
00:54:27,520 --> 00:54:30,160
next slightly

1261
00:54:31,200 --> 00:54:34,240
um so what this document all about is

1262
00:54:34,240 --> 00:54:37,319
this idea of moving from periodic

1263
00:54:37,319 --> 00:54:40,000
registrations to to using a reliable

1264
00:54:40,000 --> 00:54:41,839
transport to support the registration

1265
00:54:41,839 --> 00:54:43,599
process

1266
00:54:43,599 --> 00:54:44,480
so

1267
00:54:44,480 --> 00:54:46,640
as you always know

1268
00:54:46,640 --> 00:54:48,960
no well sorry um the

1269
00:54:48,960 --> 00:54:50,160
what we

1270
00:54:50,160 --> 00:54:52,559
use originally or at least uses by

1271
00:54:52,559 --> 00:54:55,520
default is is this periodic udp

1272
00:54:55,520 --> 00:54:57,359
communication between the xtr and the

1273
00:54:57,359 --> 00:54:58,880
map server to

1274
00:54:58,880 --> 00:55:01,200
and this is to maintain some soft state

1275
00:55:01,200 --> 00:55:03,760
right between these two entities in the

1276
00:55:03,760 --> 00:55:05,440
network

1277
00:55:05,440 --> 00:55:08,079
um but yeah when doing experimentation

1278
00:55:08,079 --> 00:55:10,319
especially at scale we had some right

1279
00:55:10,319 --> 00:55:12,640
there were some practical concerns on

1280
00:55:12,640 --> 00:55:15,040
how to do this right um

1281
00:55:15,040 --> 00:55:17,760
and especially yeah when we are handling

1282
00:55:17,760 --> 00:55:20,240
a large number of eid records or when we

1283
00:55:20,240 --> 00:55:23,920
have to do redistribution mobility and

1284
00:55:23,920 --> 00:55:26,079
and something that for example you can

1285
00:55:26,079 --> 00:55:27,760
see very quickly is that this constant

1286
00:55:27,760 --> 00:55:30,559
communication creates some load on on

1287
00:55:30,559 --> 00:55:33,280
the control plane and and for example if

1288
00:55:33,280 --> 00:55:35,520
you start attaching thousands of records

1289
00:55:35,520 --> 00:55:38,400
to each xtr this this means a lot of

1290
00:55:38,400 --> 00:55:40,079
traffic

1291
00:55:40,079 --> 00:55:42,880
and another area of concern was this

1292
00:55:42,880 --> 00:55:46,000
lack of flow control right between when

1293
00:55:46,000 --> 00:55:47,280
when

1294
00:55:47,280 --> 00:55:50,319
xtrs and and map servers uh

1295
00:55:50,319 --> 00:55:52,799
span multiple network hogs and and our

1296
00:55:52,799 --> 00:55:55,359
network grows right so

1297
00:55:55,359 --> 00:55:58,799
we we wanted also to to get some

1298
00:55:58,799 --> 00:56:01,040
some some of these right in in the

1299
00:56:01,040 --> 00:56:04,720
interface and excellently

1300
00:56:06,640 --> 00:56:09,760
so um what's reliable transfer so the

1301
00:56:09,760 --> 00:56:13,200
the what what the document provides

1302
00:56:13,200 --> 00:56:16,000
proposes is to establish a tcv or http

1303
00:56:16,000 --> 00:56:18,640
or to be honest

1304
00:56:18,640 --> 00:56:20,480
any uh

1305
00:56:20,480 --> 00:56:23,200
session that it's considered reliable in

1306
00:56:23,200 --> 00:56:24,240
some sense

1307
00:56:24,240 --> 00:56:26,559
between the xtr and the map server right

1308
00:56:26,559 --> 00:56:29,200
and and then use this reliable session

1309
00:56:29,200 --> 00:56:31,440
to communicate the id to our lock

1310
00:56:31,440 --> 00:56:33,040
mappings right

1311
00:56:33,040 --> 00:56:35,680
and also mapping notifications back from

1312
00:56:35,680 --> 00:56:36,880
the

1313
00:56:36,880 --> 00:56:40,160
the map server to the xtr

1314
00:56:40,640 --> 00:56:44,000
the document proposes these always a as

1315
00:56:44,000 --> 00:56:46,319
an optional alternative to udp phase

1316
00:56:46,319 --> 00:56:49,920
registration right and so udp mechanism

1317
00:56:49,920 --> 00:56:51,839
must be supported this is not trying to

1318
00:56:51,839 --> 00:56:54,160
replace anything but but it's always an

1319
00:56:54,160 --> 00:56:55,680
alternative

1320
00:56:55,680 --> 00:56:56,880
that

1321
00:56:56,880 --> 00:57:00,079
that can be used if available

1322
00:57:00,079 --> 00:57:02,880
next slide please

1323
00:57:03,440 --> 00:57:05,920
so the next three slides try to put

1324
00:57:05,920 --> 00:57:08,480
picture and how how the operation

1325
00:57:08,480 --> 00:57:10,240
proposed

1326
00:57:10,240 --> 00:57:12,400
it's meant to work right so the idea

1327
00:57:12,400 --> 00:57:14,720
would be something like you have the etr

1328
00:57:14,720 --> 00:57:17,920
the map server and and dtr starts with

1329
00:57:17,920 --> 00:57:21,040
the usual periodic udp registration with

1330
00:57:21,040 --> 00:57:23,119
the mapping system okay

1331
00:57:23,119 --> 00:57:25,119
and this periodic udp registration will

1332
00:57:25,119 --> 00:57:28,480
continue as long as no reliable session

1333
00:57:28,480 --> 00:57:30,720
is established

1334
00:57:30,720 --> 00:57:33,200
let's say one

1335
00:57:33,200 --> 00:57:36,240
reliable session is possible let's say

1336
00:57:36,240 --> 00:57:38,160
these two guys can't establish a tcp

1337
00:57:38,160 --> 00:57:40,880
session then it's it's when reliable

1338
00:57:40,880 --> 00:57:42,960
transport operation kicks in right next

1339
00:57:42,960 --> 00:57:45,440
slightly

1340
00:57:46,799 --> 00:57:49,680
so once this happens let's say

1341
00:57:49,680 --> 00:57:52,400
now we have a tcp session available

1342
00:57:52,400 --> 00:57:54,480
what the map server will do is send the

1343
00:57:54,480 --> 00:57:56,799
registration refresh message to the idea

1344
00:57:56,799 --> 00:57:58,079
right um

1345
00:57:58,079 --> 00:58:00,079
what this resistation refresh message

1346
00:58:00,079 --> 00:58:02,880
does is is trigger um

1347
00:58:02,880 --> 00:58:06,960
ddr to send a new refresh registration

1348
00:58:06,960 --> 00:58:09,280
of everything that it has in its local

1349
00:58:09,280 --> 00:58:11,839
database but the important thing comes

1350
00:58:11,839 --> 00:58:13,680
from here right from that instance all

1351
00:58:13,680 --> 00:58:15,359
these registrations are considered

1352
00:58:15,359 --> 00:58:18,240
active as long as the session is up so

1353
00:58:18,240 --> 00:58:19,920
in some sense we

1354
00:58:19,920 --> 00:58:22,000
we link the phase of the registrations

1355
00:58:22,000 --> 00:58:24,319
to to the state of

1356
00:58:24,319 --> 00:58:26,319
of this session between the map server

1357
00:58:26,319 --> 00:58:28,400
and the etr

1358
00:58:28,400 --> 00:58:29,520
and

1359
00:58:29,520 --> 00:58:31,839
thanks to these these registrations

1360
00:58:31,839 --> 00:58:34,079
don't need to be resent periodically

1361
00:58:34,079 --> 00:58:36,559
anymore

1362
00:58:36,960 --> 00:58:39,599
next level

1363
00:58:41,280 --> 00:58:44,480
now when when we have this this idea of

1364
00:58:44,480 --> 00:58:46,079
sharing state between the two and

1365
00:58:46,079 --> 00:58:48,960
linking the fade to to the session now

1366
00:58:48,960 --> 00:58:51,200
we need some additional procedures on

1367
00:58:51,200 --> 00:58:53,680
top of

1368
00:58:53,680 --> 00:58:55,599
of

1369
00:58:55,599 --> 00:58:57,760
the resistance process and and this is

1370
00:58:57,760 --> 00:59:00,000
what the document it's all about right

1371
00:59:00,000 --> 00:59:02,720
but the most important ones is

1372
00:59:02,720 --> 00:59:05,760
one that now the map server can

1373
00:59:05,760 --> 00:59:08,160
reject registrations and tell the etr

1374
00:59:08,160 --> 00:59:10,160
that it's rejecting registrations when

1375
00:59:10,160 --> 00:59:12,240
it's not ready or i don't know let's say

1376
00:59:12,240 --> 00:59:14,079
configurations or policies don't allow

1377
00:59:14,079 --> 00:59:14,960
them

1378
00:59:14,960 --> 00:59:15,839
okay

1379
00:59:15,839 --> 00:59:18,559
and and the registration refresh message

1380
00:59:18,559 --> 00:59:21,040
is is actually used as a way so that the

1381
00:59:21,040 --> 00:59:24,240
map server can notify the ttr that hey

1382
00:59:24,240 --> 00:59:26,799
things have have changed for example now

1383
00:59:26,799 --> 00:59:28,079
the policy that rejected your

1384
00:59:28,079 --> 00:59:30,480
registration is not there anymore

1385
00:59:30,480 --> 00:59:32,559
and and you can try again

1386
00:59:32,559 --> 00:59:34,880
to send me these registrations

1387
00:59:34,880 --> 00:59:37,200
um

1388
00:59:37,520 --> 00:59:39,680
one this is one of the last additions

1389
00:59:39,680 --> 00:59:41,359
that was made to the document is that

1390
00:59:41,359 --> 00:59:43,359
these resistation refresh messages can

1391
00:59:43,359 --> 00:59:45,359
can be scoped right so the map server

1392
00:59:45,359 --> 00:59:48,799
can specify i want i i would like you to

1393
00:59:48,799 --> 00:59:50,880
refresh everything that you have

1394
00:59:50,880 --> 00:59:53,440
only what you have in this instance id

1395
00:59:53,440 --> 00:59:56,559
or or just send me this specific prefix

1396
00:59:56,559 --> 00:59:59,520
that that for some reason i lost state

1397
00:59:59,520 --> 01:00:02,160
for it okay

1398
01:00:02,160 --> 01:00:05,440
next slide please

1399
01:00:06,079 --> 01:00:08,960
yeah from here the rest of the slides is

1400
01:00:08,960 --> 01:00:11,599
that what i described was the basic

1401
01:00:11,599 --> 01:00:14,960
idea behind the draft right um what the

1402
01:00:14,960 --> 01:00:17,280
next slides go is just okay which are

1403
01:00:17,280 --> 01:00:21,760
the specific details behind all these um

1404
01:00:21,760 --> 01:00:24,160
for example right with respect to

1405
01:00:24,160 --> 01:00:26,720
registrations uh reliable registrations

1406
01:00:26,720 --> 01:00:29,520
or our messages are exactly the same as

1407
01:00:29,520 --> 01:00:32,000
udp registration so so we do message

1408
01:00:32,000 --> 01:00:34,240
reuse here the only thing is that we

1409
01:00:34,240 --> 01:00:36,799
package them in into

1410
01:00:36,799 --> 01:00:38,079
a tcp

1411
01:00:38,079 --> 01:00:42,319
or reliable session packet

1412
01:00:42,810 --> 01:00:44,640
[Music]

1413
01:00:44,640 --> 01:00:47,520
because now the two entities are sharing

1414
01:00:47,520 --> 01:00:49,920
state right and and linking this state

1415
01:00:49,920 --> 01:00:52,400
to the status of the

1416
01:00:52,400 --> 01:00:54,319
of the session now

1417
01:00:54,319 --> 01:00:57,200
the maps the map server is is given the

1418
01:00:57,200 --> 01:00:59,599
facility to give positive or negative

1419
01:00:59,599 --> 01:01:01,040
acknowledgement to

1420
01:01:01,040 --> 01:01:04,880
to provide explicit feedback to the xtr

1421
01:01:04,880 --> 01:01:06,799
and what we were talking before and now

1422
01:01:06,799 --> 01:01:10,160
the map server has this ability to to

1423
01:01:10,160 --> 01:01:13,680
actively request for for information to

1424
01:01:13,680 --> 01:01:16,640
to the to the the xtr

1425
01:01:16,640 --> 01:01:18,720
um

1426
01:01:18,720 --> 01:01:20,880
one interesting thing is that

1427
01:01:20,880 --> 01:01:23,280
if you think from uh from a reliable

1428
01:01:23,280 --> 01:01:24,480
transfer perspective mapping

1429
01:01:24,480 --> 01:01:26,319
notifications are actually not needed

1430
01:01:26,319 --> 01:01:28,480
anymore unless there's there's

1431
01:01:28,480 --> 01:01:30,480
information to be conveyed from the map

1432
01:01:30,480 --> 01:01:32,240
server to

1433
01:01:32,240 --> 01:01:34,559
to the xtr right for example if we use

1434
01:01:34,559 --> 01:01:36,839
merge semantics

1435
01:01:36,839 --> 01:01:40,319
um maven notifications would be needed

1436
01:01:40,319 --> 01:01:42,720
right or or for example for mobility my

1437
01:01:42,720 --> 01:01:46,240
big notifications would still be neat

1438
01:01:46,240 --> 01:01:49,040
next is lively

1439
01:01:51,440 --> 01:01:54,640
map server operation um

1440
01:01:54,640 --> 01:01:57,280
yeah repeating more or less the same but

1441
01:01:57,280 --> 01:02:00,000
but important things here is that now

1442
01:02:00,000 --> 01:02:02,480
receive registrations are are used to

1443
01:02:02,480 --> 01:02:05,440
create update or delete state

1444
01:02:05,440 --> 01:02:08,559
so there is no timeout anymore on the

1445
01:02:08,559 --> 01:02:11,200
mapping system uh as long as the session

1446
01:02:11,200 --> 01:02:13,839
is up the registrations stay

1447
01:02:13,839 --> 01:02:15,520
so

1448
01:02:15,520 --> 01:02:17,920
on on the other side what this means is

1449
01:02:17,920 --> 01:02:20,160
that the xtr needs to explicitly delete

1450
01:02:20,160 --> 01:02:22,799
mappings to get them removed from

1451
01:02:22,799 --> 01:02:25,599
the mapping system

1452
01:02:26,640 --> 01:02:29,200
another interesting thing that the

1453
01:02:29,200 --> 01:02:30,960
document provides is that registration

1454
01:02:30,960 --> 01:02:33,039
state is not the start discarded when

1455
01:02:33,039 --> 01:02:36,000
the session goes down so basically if

1456
01:02:36,000 --> 01:02:37,920
let's say the session goes down what the

1457
01:02:37,920 --> 01:02:40,160
map server does is

1458
01:02:40,160 --> 01:02:43,839
is fall back into timer-based mode of

1459
01:02:43,839 --> 01:02:47,359
operation so all the registrations are

1460
01:02:47,359 --> 01:02:49,680
it activates

1461
01:02:49,680 --> 01:02:51,440
uh a timer

1462
01:02:51,440 --> 01:02:54,240
to to let them expire as as they would

1463
01:02:54,240 --> 01:02:57,039
in the udp model okay

1464
01:02:57,039 --> 01:02:58,400
and

1465
01:02:58,400 --> 01:03:00,559
these users registrations can be

1466
01:03:00,559 --> 01:03:03,200
rejected for a number of reasons but

1467
01:03:03,200 --> 01:03:05,520
mostly is either either authentication

1468
01:03:05,520 --> 01:03:08,720
or or policy of configuration

1469
01:03:08,720 --> 01:03:10,640
limitation threat

1470
01:03:10,640 --> 01:03:11,020
um

1471
01:03:11,020 --> 01:03:12,400
[Music]

1472
01:03:12,400 --> 01:03:15,039
and and what we described in in the flow

1473
01:03:15,039 --> 01:03:17,680
right the the registration refresh

1474
01:03:17,680 --> 01:03:20,720
message is basically used as a is a tool

1475
01:03:20,720 --> 01:03:23,039
that the map server now has to

1476
01:03:23,039 --> 01:03:26,400
obtain initial state or request

1477
01:03:26,400 --> 01:03:27,760
um

1478
01:03:27,760 --> 01:03:29,599
a specific refi

1479
01:03:29,599 --> 01:03:31,280
registrations when when something

1480
01:03:31,280 --> 01:03:33,839
changes in its configuration its policy

1481
01:03:33,839 --> 01:03:36,720
its status

1482
01:03:37,200 --> 01:03:40,319
okay next slide please

1483
01:03:41,760 --> 01:03:45,200
from an etr operation perspective um

1484
01:03:45,200 --> 01:03:47,760
okay the the the document provides a

1485
01:03:47,760 --> 01:03:50,559
tail state machine and

1486
01:03:50,559 --> 01:03:52,720
transitions between states but

1487
01:03:52,720 --> 01:03:54,799
the important thing to

1488
01:03:54,799 --> 01:03:58,480
to remark here is that

1489
01:03:58,480 --> 01:03:59,920
what we have been repeating right the

1490
01:03:59,920 --> 01:04:02,720
the idea is ddr starts in udp

1491
01:04:02,720 --> 01:04:04,400
registration mode

1492
01:04:04,400 --> 01:04:07,599
now if a session is possible

1493
01:04:07,599 --> 01:04:10,400
the etr will try to switch to

1494
01:04:10,400 --> 01:04:13,680
to reliable transfer mode and

1495
01:04:13,680 --> 01:04:16,400
but this won't complete until the map

1496
01:04:16,400 --> 01:04:18,960
server sends uh this registration

1497
01:04:18,960 --> 01:04:21,440
refresh right that's the that's the

1498
01:04:21,440 --> 01:04:22,720
the key

1499
01:04:22,720 --> 01:04:25,039
element in in this whole process that

1500
01:04:25,039 --> 01:04:26,559
where both

1501
01:04:26,559 --> 01:04:28,559
both the etr and the map server know

1502
01:04:28,559 --> 01:04:31,760
that that now they they share state and

1503
01:04:31,760 --> 01:04:34,000
and they have linked the the fate of

1504
01:04:34,000 --> 01:04:36,160
this state to to the status of the

1505
01:04:36,160 --> 01:04:37,680
session

1506
01:04:37,680 --> 01:04:39,680
okay

1507
01:04:39,680 --> 01:04:42,558
nexus live please

1508
01:04:44,319 --> 01:04:47,280
um some implementation nodes uh as as we

1509
01:04:47,280 --> 01:04:50,079
were saying right um we have

1510
01:04:50,079 --> 01:04:52,240
vested internet in this because we've

1511
01:04:52,240 --> 01:04:55,280
had code running and very stable for a

1512
01:04:55,280 --> 01:04:57,520
long time and and

1513
01:04:57,520 --> 01:05:00,480
it has been very very effective to to

1514
01:05:00,480 --> 01:05:04,640
support large deployments um

1515
01:05:05,280 --> 01:05:08,000
one important implementation node is

1516
01:05:08,000 --> 01:05:09,039
that

1517
01:05:09,039 --> 01:05:12,400
since we reuse messaging um

1518
01:05:12,400 --> 01:05:15,280
all these was implemented as a okay

1519
01:05:15,280 --> 01:05:17,920
let's call it minor extension to to to

1520
01:05:17,920 --> 01:05:19,599
the registration process right so that

1521
01:05:19,599 --> 01:05:23,680
it could run over over tcp

1522
01:05:23,680 --> 01:05:24,720
and

1523
01:05:24,720 --> 01:05:27,280
and as i was saying before right this

1524
01:05:27,280 --> 01:05:30,000
doesn't need to be linked to tcp ctv

1525
01:05:30,000 --> 01:05:30,799
right

1526
01:05:30,799 --> 01:05:32,079
it can use

1527
01:05:32,079 --> 01:05:34,240
any transport that we can consider

1528
01:05:34,240 --> 01:05:35,599
reliable

1529
01:05:35,599 --> 01:05:37,599
at some point in this in the working

1530
01:05:37,599 --> 01:05:40,240
room we were talking about using quick

1531
01:05:40,240 --> 01:05:43,440
for this that's always a possibility

1532
01:05:43,440 --> 01:05:45,680
one thing doesn't

1533
01:05:45,680 --> 01:05:47,839
doesn't collide with the other

1534
01:05:47,839 --> 01:05:51,558
next slide please

1535
01:05:52,079 --> 01:05:54,799
and yeah our usual calls with respect to

1536
01:05:54,799 --> 01:05:55,760
his wrath

1537
01:05:55,760 --> 01:05:58,079
we would like to request an option for

1538
01:05:58,079 --> 01:06:00,880
this document

1539
01:06:00,880 --> 01:06:05,079
in the working group um

1540
01:06:05,280 --> 01:06:08,000
yeah and that's the one last one yeah

1541
01:06:08,000 --> 01:06:09,760
questions

1542
01:06:09,760 --> 01:06:10,480
okay

1543
01:06:10,480 --> 01:06:13,039
before going to this question let's see

1544
01:06:13,039 --> 01:06:16,240
if there are any questions from the

1545
01:06:16,240 --> 01:06:19,558
on the room

1546
01:06:23,680 --> 01:06:27,119
i would go for a no but

1547
01:06:27,119 --> 01:06:29,520
there are

1548
01:06:29,599 --> 01:06:30,559
two

1549
01:06:30,559 --> 01:06:33,039
two small questions um

1550
01:06:33,039 --> 01:06:36,480
uh yeah you say uh we we always start a

1551
01:06:36,480 --> 01:06:39,680
registration with with udp and then when

1552
01:06:39,680 --> 01:06:43,039
there is a session up then i i switch to

1553
01:06:43,039 --> 01:06:44,640
the other now

1554
01:06:44,640 --> 01:06:46,160
to me it's not clear

1555
01:06:46,160 --> 01:06:48,480
how we understand that we can set up a

1556
01:06:48,480 --> 01:06:50,240
session

1557
01:06:50,240 --> 01:06:52,880
is that an explicit signaling or is just

1558
01:06:52,880 --> 01:06:54,720
by configuration and we wait that it

1559
01:06:54,720 --> 01:06:56,319
comes up

1560
01:06:56,319 --> 01:06:57,119
so

1561
01:06:57,119 --> 01:06:59,200
what we do and now we are talking about

1562
01:06:59,200 --> 01:07:02,480
our implementation i guess um we could

1563
01:07:02,480 --> 01:07:03,200
all

1564
01:07:03,200 --> 01:07:06,640
do different but what we do today is we

1565
01:07:06,640 --> 01:07:08,720
use the

1566
01:07:08,720 --> 01:07:12,079
we send the the the etr we will send the

1567
01:07:12,079 --> 01:07:15,280
map register um we'll set the one mum

1568
01:07:15,280 --> 01:07:17,119
notify okay

1569
01:07:17,119 --> 01:07:19,680
when it receives the mum notify it

1570
01:07:19,680 --> 01:07:22,559
understands that it can try to to

1571
01:07:22,559 --> 01:07:23,760
establish

1572
01:07:23,760 --> 01:07:26,160
a tcp session right it understands that

1573
01:07:26,160 --> 01:07:29,839
okay i've been because my registration

1574
01:07:29,839 --> 01:07:31,520
is authenticated okay i've been

1575
01:07:31,520 --> 01:07:33,280
authenticated with the

1576
01:07:33,280 --> 01:07:34,480
server right

1577
01:07:34,480 --> 01:07:37,520
it's allowing me to do stuff so at that

1578
01:07:37,520 --> 01:07:39,680
point it tries

1579
01:07:39,680 --> 01:07:41,440
and

1580
01:07:41,440 --> 01:07:44,480
the way we have implemented this is is

1581
01:07:44,480 --> 01:07:46,640
back off mechanism right so if the map

1582
01:07:46,640 --> 01:07:49,359
server doesn't support tcp then okay

1583
01:07:49,359 --> 01:07:50,160
fine

1584
01:07:50,160 --> 01:07:52,240
okay is i try and fail in the sense that

1585
01:07:52,240 --> 01:07:54,799
i i send that first message i see on the

1586
01:07:54,799 --> 01:07:57,599
other side there is someone

1587
01:07:57,599 --> 01:08:00,640
answering and is somehow authenticated

1588
01:08:00,640 --> 01:08:04,559
so i try to to speak tcp or stp or as

1589
01:08:04,559 --> 01:08:06,559
you say i try quick

1590
01:08:06,559 --> 01:08:10,000
and if it doesn't work i just continue

1591
01:08:10,000 --> 01:08:11,520
um

1592
01:08:11,520 --> 01:08:12,880
with udp

1593
01:08:12,880 --> 01:08:14,240
i mean

1594
01:08:14,240 --> 01:08:17,279
you can add text in the document saying

1595
01:08:17,279 --> 01:08:19,359
we

1596
01:08:19,359 --> 01:08:21,520
you can try with this system as a simple

1597
01:08:21,520 --> 01:08:23,359
policy

1598
01:08:23,359 --> 01:08:24,319
a

1599
01:08:24,319 --> 01:08:27,839
more complex policy or say or you know

1600
01:08:27,839 --> 01:08:30,080
this by configuration

1601
01:08:30,080 --> 01:08:32,238
other methods are out of the scope of

1602
01:08:32,238 --> 01:08:35,679
this document at least you have a basic

1603
01:08:35,679 --> 01:08:39,920
thing that says how you you go from

1604
01:08:39,920 --> 01:08:41,600
one to the other i mean because

1605
01:08:41,600 --> 01:08:45,520
otherwise it reminds remains to me

1606
01:08:45,520 --> 01:08:47,839
a little bit fuzzy because i if i read

1607
01:08:47,839 --> 01:08:49,520
the document that i said oh you you can

1608
01:08:49,520 --> 01:08:51,520
go from this to that and i have to

1609
01:08:51,520 --> 01:08:53,839
implement it i will scratch my hands and

1610
01:08:53,839 --> 01:08:56,080
yeah yes but what is this

1611
01:08:56,080 --> 01:08:58,479
that tells me when i should go on the

1612
01:08:58,479 --> 01:08:59,920
other side

1613
01:08:59,920 --> 01:09:01,600
you see what i mean

1614
01:09:01,600 --> 01:09:05,040
yes that's a good point okay

1615
01:09:05,040 --> 01:09:06,679
a good um

1616
01:09:07,040 --> 01:09:08,880
another

1617
01:09:08,880 --> 01:09:11,198
personal observation is the fact that

1618
01:09:11,198 --> 01:09:13,679
you authenticate the nodes you're using

1619
01:09:13,679 --> 01:09:16,000
odp but you don't have

1620
01:09:16,000 --> 01:09:19,520
a security layer and now as a chair i

1621
01:09:19,520 --> 01:09:21,040
would say that

1622
01:09:21,040 --> 01:09:24,080
we had a lot of issues about security

1623
01:09:24,080 --> 01:09:26,399
with the main specifications

1624
01:09:26,399 --> 01:09:29,839
if we move this document forward uh

1625
01:09:29,839 --> 01:09:33,359
chances are that that security review

1626
01:09:33,359 --> 01:09:35,359
will come back to us and say this system

1627
01:09:35,359 --> 01:09:36,799
is not secure

1628
01:09:36,799 --> 01:09:38,560
so

1629
01:09:38,560 --> 01:09:41,198
i would suggest

1630
01:09:41,198 --> 01:09:45,520
to look at how lispsec applies or to to

1631
01:09:45,520 --> 01:09:48,640
to this system or you say i don't know

1632
01:09:48,640 --> 01:09:52,080
you set up a session and i put up tls

1633
01:09:52,080 --> 01:09:54,400
or in quick you use a quick security i

1634
01:09:54,400 --> 01:09:55,360
don't know

1635
01:09:55,360 --> 01:09:57,040
but

1636
01:09:57,040 --> 01:10:00,000
just authenticating the other side

1637
01:10:00,000 --> 01:10:02,880
i share that is not enough

1638
01:10:02,880 --> 01:10:05,280
then obviously other people can can have

1639
01:10:05,280 --> 01:10:08,400
a different opinion but

1640
01:10:08,560 --> 01:10:10,800
okay

1641
01:10:11,840 --> 01:10:13,440
sorry

1642
01:10:13,440 --> 01:10:16,239
no that's a good point i i'm not sure if

1643
01:10:16,239 --> 01:10:19,840
the draft now has a section i haven't

1644
01:10:19,840 --> 01:10:22,080
there is a security consideration is but

1645
01:10:22,080 --> 01:10:24,080
it's only about authentication of the

1646
01:10:24,080 --> 01:10:26,560
other side and you use basically tcp

1647
01:10:26,560 --> 01:10:29,760
authentication or stp options there is

1648
01:10:29,760 --> 01:10:31,760
not that much so i

1649
01:10:31,760 --> 01:10:34,560
i would encourage to to

1650
01:10:34,560 --> 01:10:39,080
to go further on that

1651
01:10:42,840 --> 01:10:47,199
um also the the references i guess that

1652
01:10:47,199 --> 01:10:50,000
are uh still

1653
01:10:50,000 --> 01:10:51,280
and

1654
01:10:51,280 --> 01:10:52,800
actually i think

1655
01:10:52,800 --> 01:10:55,280
this one has expired so i think this one

1656
01:10:55,280 --> 01:10:57,600
exactly i was coming to this point i

1657
01:10:57,600 --> 01:10:58,880
mean yeah

1658
01:10:58,880 --> 01:11:01,679
you know that the answer to the the the

1659
01:11:01,679 --> 01:11:04,080
request for adoption cannot be issued if

1660
01:11:04,080 --> 01:11:07,120
the the draft is expired

1661
01:11:07,120 --> 01:11:10,800
we cannot adopt an expired draft

1662
01:11:10,800 --> 01:11:13,440
i'm

1663
01:11:14,960 --> 01:11:17,040
there are few updates that that you can

1664
01:11:17,040 --> 01:11:20,719
do to this document again uh uh

1665
01:11:20,719 --> 01:11:22,239
on a personal side

1666
01:11:22,239 --> 01:11:25,040
no no no chair head uh i like the

1667
01:11:25,040 --> 01:11:27,280
document because um

1668
01:11:27,280 --> 01:11:28,480
uh uh

1669
01:11:28,480 --> 01:11:32,080
i i think that with a reliable transport

1670
01:11:32,080 --> 01:11:33,360
uh

1671
01:11:33,360 --> 01:11:36,640
you can do a few interesting things

1672
01:11:36,640 --> 01:11:38,080
on the

1673
01:11:38,080 --> 01:11:40,719
map registration and on the mapping

1674
01:11:40,719 --> 01:11:43,440
system basically so i i like the work

1675
01:11:43,440 --> 01:11:44,560
basically

1676
01:11:44,560 --> 01:11:47,600
as a chair i told you my my concerns and

1677
01:11:47,600 --> 01:11:48,719
um

1678
01:11:48,719 --> 01:11:50,080
yeah

1679
01:11:50,080 --> 01:11:53,920
i think the trust should be revised and

1680
01:11:53,920 --> 01:11:56,080
i don't know if it's clear but the

1681
01:11:56,080 --> 01:11:58,640
priorities lisp sec

1682
01:11:58,640 --> 01:11:59,679
so

1683
01:11:59,679 --> 01:12:00,800
um

1684
01:12:00,800 --> 01:12:03,360
because you you the co-authors of this

1685
01:12:03,360 --> 01:12:05,600
set of documents overlap with the

1686
01:12:05,600 --> 01:12:06,840
authors of

1687
01:12:06,840 --> 01:12:09,760
lispsack you can deliver the message

1688
01:12:09,760 --> 01:12:10,800
that

1689
01:12:10,800 --> 01:12:13,360
as soon as we are done with one we can

1690
01:12:13,360 --> 01:12:14,340
move the others

1691
01:12:14,340 --> 01:12:17,199
[Laughter]

1692
01:12:17,199 --> 01:12:19,520
so it's so pressure

1693
01:12:19,520 --> 01:12:22,480
i i mean it's it's uh

1694
01:12:22,480 --> 01:12:25,360
it's fair enough i mean we we we put a

1695
01:12:25,360 --> 01:12:28,560
lot of energy and this is just the last

1696
01:12:28,560 --> 01:12:29,920
piece

1697
01:12:29,920 --> 01:12:32,400
piece that is missing and we'll unblock

1698
01:12:32,400 --> 01:12:34,080
a few things

1699
01:12:34,080 --> 01:12:37,840
and give a lot of work to alvaro

1700
01:12:37,840 --> 01:12:39,120
but

1701
01:12:39,120 --> 01:12:40,239
anyway

1702
01:12:40,239 --> 01:12:43,519
this is how it works

1703
01:12:44,480 --> 01:12:45,840
okay

1704
01:12:45,840 --> 01:12:48,800
okay any other comments from the

1705
01:12:48,800 --> 01:12:51,840
from the audience

1706
01:12:53,120 --> 01:12:55,280
i guess that's not so thank you very

1707
01:12:55,280 --> 01:12:58,880
much mark for all these updates

1708
01:12:58,880 --> 01:13:02,000
and we will move to sharon sharon i will

1709
01:13:02,000 --> 01:13:04,880
share your slide if that is fine for you

1710
01:13:04,880 --> 01:13:08,400
you can continue this way

1711
01:13:08,400 --> 01:13:10,480
thank you luigi

1712
01:13:10,480 --> 01:13:12,159
see the slides

1713
01:13:12,159 --> 01:13:14,320
yes i see

1714
01:13:14,320 --> 01:13:16,880
i will uh

1715
01:13:16,960 --> 01:13:18,800
thank you i will jointly present with

1716
01:13:18,800 --> 01:13:21,440
the aviv haskell um

1717
01:13:21,440 --> 01:13:22,400
uh

1718
01:13:22,400 --> 01:13:25,199
we're presenting here um

1719
01:13:25,199 --> 01:13:29,120
list fix uh this is um a second example

1720
01:13:29,120 --> 01:13:32,400
of using the existing lisp rfcs and

1721
01:13:32,400 --> 01:13:36,320
mechanism established for a use

1722
01:13:36,320 --> 01:13:39,360
the use is for compute first

1723
01:13:39,360 --> 01:13:40,960
aggregation of

1724
01:13:40,960 --> 01:13:43,040
large amounts of data

1725
01:13:43,040 --> 01:13:44,719
that has to be

1726
01:13:44,719 --> 01:13:47,199
quickly propagated based on

1727
01:13:47,199 --> 01:13:50,239
change an exception or an

1728
01:13:50,239 --> 01:13:51,520
anomaly

1729
01:13:51,520 --> 01:13:54,640
so i i like the hexagon

1730
01:13:54,640 --> 01:13:58,000
rfc which is a draft which is also like

1731
01:13:58,000 --> 01:13:58,880
that

1732
01:13:58,880 --> 01:14:00,400
which is in production and in

1733
01:14:00,400 --> 01:14:03,120
publication here we are still we just

1734
01:14:03,120 --> 01:14:04,800
prototyped this thing

1735
01:14:04,800 --> 01:14:07,920
and we are gathering uh inputs for draft

1736
01:14:07,920 --> 01:14:10,320
zero zero

1737
01:14:10,320 --> 01:14:12,000
um also

1738
01:14:12,000 --> 01:14:13,199
a

1739
01:14:13,199 --> 01:14:16,000
it's interesting to note that uh this

1740
01:14:16,000 --> 01:14:18,000
use of list for

1741
01:14:18,000 --> 01:14:20,000
data aggregation and selective

1742
01:14:20,000 --> 01:14:23,679
propagation is like the opposite of cdn

1743
01:14:23,679 --> 01:14:26,320
um in a sense that uh

1744
01:14:26,320 --> 01:14:28,320
there's a lot more data production than

1745
01:14:28,320 --> 01:14:29,840
consumption

1746
01:14:29,840 --> 01:14:30,880
uh

1747
01:14:30,880 --> 01:14:34,080
it's push versus pool and

1748
01:14:34,080 --> 01:14:36,560
dns

1749
01:14:36,560 --> 01:14:39,199
indirection is less applicable because

1750
01:14:39,199 --> 01:14:42,880
of cash coherency or latency aspects

1751
01:14:42,880 --> 01:14:44,880
okay

1752
01:14:44,880 --> 01:14:46,159
another

1753
01:14:46,159 --> 01:14:50,239
pre note is that the qualities of

1754
01:14:50,239 --> 01:14:53,440
using lisp

1755
01:14:53,440 --> 01:14:56,239
the formal specification the breadth of

1756
01:14:56,239 --> 01:14:58,400
the rfcs the multi-vendor

1757
01:14:58,400 --> 01:15:00,000
interoperability

1758
01:15:00,000 --> 01:15:03,280
are becoming clearer to stakeholders in

1759
01:15:03,280 --> 01:15:06,400
each domain for example in vehicles or

1760
01:15:06,400 --> 01:15:07,920
in cyber

1761
01:15:07,920 --> 01:15:12,480
as time goes by and they see how

1762
01:15:12,480 --> 01:15:14,719
this basis

1763
01:15:14,719 --> 01:15:17,199
has more benefits than initially

1764
01:15:17,199 --> 01:15:19,840
uh was anticipated so specifically for

1765
01:15:19,840 --> 01:15:22,080
ipfix

1766
01:15:22,080 --> 01:15:25,679
so this uh a

1767
01:15:25,679 --> 01:15:26,960
proposal

1768
01:15:26,960 --> 01:15:30,320
has to do with uh a change in the

1769
01:15:30,320 --> 01:15:33,600
traditional role of ipfix if we if we

1770
01:15:33,600 --> 01:15:36,080
thought of ipfix as some kind of

1771
01:15:36,080 --> 01:15:38,719
built-in wireshark

1772
01:15:38,719 --> 01:15:42,239
to log and debug the network

1773
01:15:42,239 --> 01:15:45,120
it's now becoming a critical

1774
01:15:45,120 --> 01:15:48,159
sampling tool for networks

1775
01:15:48,159 --> 01:15:49,360
so

1776
01:15:49,360 --> 01:15:52,239
uniform sampling

1777
01:15:52,239 --> 01:15:53,199
uh

1778
01:15:53,199 --> 01:15:55,560
with ai

1779
01:15:55,560 --> 01:15:59,840
outperforms a probing with ai which

1780
01:15:59,840 --> 01:16:01,520
outperforms probing we're using

1781
01:16:01,520 --> 01:16:02,880
traditional

1782
01:16:02,880 --> 01:16:06,640
rule-based systems so we know that now

1783
01:16:06,640 --> 01:16:07,600
uh

1784
01:16:07,600 --> 01:16:10,640
based on research this is a domain which

1785
01:16:10,640 --> 01:16:12,719
aviv is expert on so i would let him

1786
01:16:12,719 --> 01:16:13,840
explain

1787
01:16:13,840 --> 01:16:14,880
explain

1788
01:16:14,880 --> 01:16:18,719
in more in depth why is that the case

1789
01:16:18,719 --> 01:16:21,719
um

1790
01:16:21,920 --> 01:16:24,480
but and of course something is a lot

1791
01:16:24,480 --> 01:16:27,520
simpler to deploy than probing uh

1792
01:16:27,520 --> 01:16:30,000
putting something in line or pushing

1793
01:16:30,000 --> 01:16:32,000
agents to

1794
01:16:32,000 --> 01:16:33,520
various points in the network so

1795
01:16:33,520 --> 01:16:35,040
sampling is

1796
01:16:35,040 --> 01:16:38,239
is outperforms and it's much easier than

1797
01:16:38,239 --> 01:16:39,760
anything else

1798
01:16:39,760 --> 01:16:42,239
but uh the catch here is uniform

1799
01:16:42,239 --> 01:16:43,840
sampling so

1800
01:16:43,840 --> 01:16:47,120
uniform sampling of a small sites the

1801
01:16:47,120 --> 01:16:50,000
like hospital school district is very

1802
01:16:50,000 --> 01:16:52,960
easy you just ip fix the firewall and

1803
01:16:52,960 --> 01:16:54,400
the core switch

1804
01:16:54,400 --> 01:16:57,120
but uniform sampling of a large

1805
01:16:57,120 --> 01:16:59,840
virtualized environment is difficult and

1806
01:16:59,840 --> 01:17:02,560
at least can solve that so

1807
01:17:02,560 --> 01:17:05,760
and next slide please

1808
01:17:07,280 --> 01:17:10,640
okay so i will hand it over to our view

1809
01:17:10,640 --> 01:17:12,800
yes

1810
01:17:12,960 --> 01:17:14,239
thank you so much thank you for the

1811
01:17:14,239 --> 01:17:18,560
intro um hello everyone so

1812
01:17:18,560 --> 01:17:22,159
as shown described just now the advances

1813
01:17:22,159 --> 01:17:24,320
in network sampling over the last years

1814
01:17:24,320 --> 01:17:25,679
is incredible

1815
01:17:25,679 --> 01:17:27,840
i did my phd research this specific

1816
01:17:27,840 --> 01:17:30,159
problem how to infer from one percent

1817
01:17:30,159 --> 01:17:32,159
about the one hundred percent uh

1818
01:17:32,159 --> 01:17:34,640
developed some uh regardless uh

1819
01:17:34,640 --> 01:17:37,040
mathematical theory about it

1820
01:17:37,040 --> 01:17:39,920
and we see more and more companies

1821
01:17:39,920 --> 01:17:41,840
in this field today in the stamping

1822
01:17:41,840 --> 01:17:42,840
field

1823
01:17:42,840 --> 01:17:45,760
specifically the combination of sampling

1824
01:17:45,760 --> 01:17:49,679
and ai opens many possibilities for not

1825
01:17:49,679 --> 01:17:52,239
only efficient but very accurate

1826
01:17:52,239 --> 01:17:54,480
network monitoring and flex prediction

1827
01:17:54,480 --> 01:17:56,719
in scale in any application

1828
01:17:56,719 --> 01:17:59,760
as an example take a look at the ai

1829
01:17:59,760 --> 01:18:01,520
architecture you see in this slide the

1830
01:18:01,520 --> 01:18:04,080
autoencoder architecture you see here

1831
01:18:04,080 --> 01:18:05,920
let me describe this data flow going

1832
01:18:05,920 --> 01:18:07,760
from left to right

1833
01:18:07,760 --> 01:18:10,800
so it's basically four steps the first

1834
01:18:10,800 --> 01:18:13,920
step is network samples

1835
01:18:13,920 --> 01:18:16,080
just usual network samples arrived in

1836
01:18:16,080 --> 01:18:17,840
our auto encoder

1837
01:18:17,840 --> 01:18:20,320
the next step the second step is that

1838
01:18:20,320 --> 01:18:22,560
the autoencoder tries to reconstruct

1839
01:18:22,560 --> 01:18:24,880
what is the expected input

1840
01:18:24,880 --> 01:18:27,280
and it outputs some some loss because

1841
01:18:27,280 --> 01:18:29,840
it's not a perfect construction of

1842
01:18:29,840 --> 01:18:30,800
course

1843
01:18:30,800 --> 01:18:33,679
and the loss is the deviation between

1844
01:18:33,679 --> 01:18:36,159
what was the input center and what was

1845
01:18:36,159 --> 01:18:38,400
the autoencoder reconstruction

1846
01:18:38,400 --> 01:18:41,600
very similarly to achieve signals

1847
01:18:41,600 --> 01:18:44,080
the third step is that the loss is

1848
01:18:44,080 --> 01:18:46,000
normalized to one

1849
01:18:46,000 --> 01:18:48,400
single statistical distribution across

1850
01:18:48,400 --> 01:18:51,280
all different client networks this is

1851
01:18:51,280 --> 01:18:52,840
the key here the

1852
01:18:52,840 --> 01:18:56,159
normalization and why it's so important

1853
01:18:56,159 --> 01:18:58,640
because in the last step in step number

1854
01:18:58,640 --> 01:19:01,280
four the normalized loss

1855
01:19:01,280 --> 01:19:04,159
of each and every client is forwarded

1856
01:19:04,159 --> 01:19:07,040
into one single global metro anomaly

1857
01:19:07,040 --> 01:19:09,280
detector that's doing pattern matching

1858
01:19:09,280 --> 01:19:10,640
against known

1859
01:19:10,640 --> 01:19:13,360
threats in the normalized way

1860
01:19:13,360 --> 01:19:15,600
so this approach that you see here this

1861
01:19:15,600 --> 01:19:18,239
example of losses normalization with

1862
01:19:18,239 --> 01:19:19,920
small network samples

1863
01:19:19,920 --> 01:19:22,960
when compared to full network probes

1864
01:19:22,960 --> 01:19:24,400
analysis

1865
01:19:24,400 --> 01:19:27,040
it found out that this approach the

1866
01:19:27,040 --> 01:19:29,440
sampling with normalization is

1867
01:19:29,440 --> 01:19:32,080
significantly outperforming the probe of

1868
01:19:32,080 --> 01:19:34,960
the 100 of the network not only in terms

1869
01:19:34,960 --> 01:19:36,400
of performance

1870
01:19:36,400 --> 01:19:39,440
but also in terms of its accuracy you

1871
01:19:39,440 --> 01:19:42,239
can see in the table below the f1 score

1872
01:19:42,239 --> 01:19:44,000
which combines the recall and the

1873
01:19:44,000 --> 01:19:46,239
precision together the true positive

1874
01:19:46,239 --> 01:19:49,600
false positive together and you can see

1875
01:19:49,600 --> 01:19:53,280
a comparison in column three denotes uh

1876
01:19:53,280 --> 01:19:54,239
forbes

1877
01:19:54,239 --> 01:19:56,719
solution and uh column five you know

1878
01:19:56,719 --> 01:20:00,080
it's this sampling and uh normalization

1879
01:20:00,080 --> 01:20:01,840
and also in the first quality which is

1880
01:20:01,840 --> 01:20:04,400
under the recall the second row

1881
01:20:04,400 --> 01:20:06,639
much better results so not only in lab

1882
01:20:06,639 --> 01:20:08,560
simulations this approach that you see

1883
01:20:08,560 --> 01:20:10,960
here is currently deployed in hundreds

1884
01:20:10,960 --> 01:20:13,199
of network sites with radically

1885
01:20:13,199 --> 01:20:14,960
different network environments in

1886
01:20:14,960 --> 01:20:18,560
volumes sizes and architectures

1887
01:20:18,560 --> 01:20:19,679
however

1888
01:20:19,679 --> 01:20:21,600
in all of these deployments in order to

1889
01:20:21,600 --> 01:20:23,679
do the uniform sampling

1890
01:20:23,679 --> 01:20:25,360
we can do it very simply we just need to

1891
01:20:25,360 --> 01:20:27,920
activate the standard ipfix in one core

1892
01:20:27,920 --> 01:20:30,239
switch one firewall because the sites

1893
01:20:30,239 --> 01:20:31,760
are very small

1894
01:20:31,760 --> 01:20:32,480
but

1895
01:20:32,480 --> 01:20:34,639
when we go to a bigger virtualized

1896
01:20:34,639 --> 01:20:37,040
multi-talent environments

1897
01:20:37,040 --> 01:20:39,520
we need a better way to aggregate the

1898
01:20:39,520 --> 01:20:41,440
standardized fix in order to achieve

1899
01:20:41,440 --> 01:20:45,080
this uniform sampling

1900
01:20:47,679 --> 01:20:51,120
okay so next slide

1901
01:20:54,080 --> 01:20:56,719
all right so we understood sampling is

1902
01:20:56,719 --> 01:21:00,159
is good uh and we we take a look at

1903
01:21:00,159 --> 01:21:01,920
virtualized cloud native environments

1904
01:21:01,920 --> 01:21:04,480
and which any process

1905
01:21:04,480 --> 01:21:07,679
can run on any kubernetes cluster on any

1906
01:21:07,679 --> 01:21:08,719
server

1907
01:21:08,719 --> 01:21:11,199
the network facilitates that by having

1908
01:21:11,199 --> 01:21:12,000
uh

1909
01:21:12,000 --> 01:21:14,080
lots of links between any iraq to an

1910
01:21:14,080 --> 01:21:15,360
iraq

1911
01:21:15,360 --> 01:21:18,960
probing is is is really not an option

1912
01:21:18,960 --> 01:21:20,880
and

1913
01:21:20,880 --> 01:21:23,600
these links are very high speed and

1914
01:21:23,600 --> 01:21:24,480
and

1915
01:21:24,480 --> 01:21:28,400
probing all of them is just impossible

1916
01:21:28,400 --> 01:21:31,280
resorting to agents

1917
01:21:31,280 --> 01:21:32,800
increases the attack surface

1918
01:21:32,800 --> 01:21:34,960
significantly and

1919
01:21:34,960 --> 01:21:35,840
in

1920
01:21:35,840 --> 01:21:39,440
in each server right in the

1921
01:21:39,440 --> 01:21:43,760
soft belly of the os so that can and has

1922
01:21:43,760 --> 01:21:46,800
been used to compromise the

1923
01:21:46,800 --> 01:21:48,719
cloud environments

1924
01:21:48,719 --> 01:21:50,560
so um

1925
01:21:50,560 --> 01:21:52,639
what do we do

1926
01:21:52,639 --> 01:21:56,360
so next slide

1927
01:21:56,639 --> 01:21:59,040
so if probing is not an option server

1928
01:21:59,040 --> 01:22:01,199
agents increases complexity and attack

1929
01:22:01,199 --> 01:22:03,920
surface and the default ipfix collectors

1930
01:22:03,920 --> 01:22:06,159
on the switches will not result in

1931
01:22:06,159 --> 01:22:08,560
uniform sampling of any of the apps

1932
01:22:08,560 --> 01:22:10,560
running on the

1933
01:22:10,560 --> 01:22:13,600
send on the on the data center

1934
01:22:13,600 --> 01:22:14,880
environment

1935
01:22:14,880 --> 01:22:18,000
um we would like to introduce a list

1936
01:22:18,000 --> 01:22:20,159
specification that will solve that so

1937
01:22:20,159 --> 01:22:23,638
next slide please

1938
01:22:24,239 --> 01:22:26,400
all right so what we

1939
01:22:26,400 --> 01:22:29,679
suggest as a specification for

1940
01:22:29,679 --> 01:22:30,800
uh

1941
01:22:30,800 --> 01:22:34,000
exporters ipfix exporters and also

1942
01:22:34,000 --> 01:22:36,840
collectors as an interim step

1943
01:22:36,840 --> 01:22:41,520
um is the ability to steer traffic

1944
01:22:41,520 --> 01:22:42,960
to eid

1945
01:22:42,960 --> 01:22:43,760
uh

1946
01:22:43,760 --> 01:22:47,360
collectors which are logical and will

1947
01:22:47,360 --> 01:22:50,000
result in uniform sampling

1948
01:22:50,000 --> 01:22:53,120
based on a specification of group

1949
01:22:53,120 --> 01:22:55,360
membership which is

1950
01:22:55,360 --> 01:22:57,120
efficient in space

1951
01:22:57,120 --> 01:23:00,159
meaning a sample

1952
01:23:00,159 --> 01:23:02,159
gathered in the exporter would be

1953
01:23:02,159 --> 01:23:04,000
matched

1954
01:23:04,000 --> 01:23:06,960
to a group member test like a broom

1955
01:23:06,960 --> 01:23:09,840
filter or a regular expression or

1956
01:23:09,840 --> 01:23:14,080
algorithmically to an eid based on the

1957
01:23:14,080 --> 01:23:15,120
headers

1958
01:23:15,120 --> 01:23:17,360
as deep as we specify

1959
01:23:17,360 --> 01:23:19,040
in the sample

1960
01:23:19,040 --> 01:23:21,600
and therefore will steer

1961
01:23:21,600 --> 01:23:23,600
the sampling to

1962
01:23:23,600 --> 01:23:25,840
analyzers which are per application

1963
01:23:25,840 --> 01:23:28,480
resulting in uniform

1964
01:23:28,480 --> 01:23:31,679
sampling pair up distributed in the data

1965
01:23:31,679 --> 01:23:33,920
center using an overlay which is built

1966
01:23:33,920 --> 01:23:35,760
into the center

1967
01:23:35,760 --> 01:23:37,280
the

1968
01:23:37,280 --> 01:23:39,679
the network aggregation itself the iphix

1969
01:23:39,679 --> 01:23:40,880
aggregation

1970
01:23:40,880 --> 01:23:43,040
can be provided by the infrastructure

1971
01:23:43,040 --> 01:23:46,560
provider and the eids will hide

1972
01:23:46,560 --> 01:23:48,159
the

1973
01:23:48,159 --> 01:23:51,120
the equipment form the sampling

1974
01:23:51,120 --> 01:23:54,000
analyzers the sampling analyzer can be

1975
01:23:54,000 --> 01:23:57,280
a cyber provider that provides a service

1976
01:23:57,280 --> 01:23:59,280
to detect anomalies

1977
01:23:59,280 --> 01:24:01,840
uh for the application anomalies can be

1978
01:24:01,840 --> 01:24:04,159
preparation for ransomware trying to

1979
01:24:04,159 --> 01:24:06,400
disrupt

1980
01:24:06,400 --> 01:24:09,280
and trying to leak information

1981
01:24:09,280 --> 01:24:11,360
uh

1982
01:24:11,360 --> 01:24:14,480
under an ex something which looks like a

1983
01:24:14,480 --> 01:24:15,679
kosher

1984
01:24:15,679 --> 01:24:18,000
exchange

1985
01:24:18,000 --> 01:24:22,239
all right so this is uh the ask uh

1986
01:24:22,239 --> 01:24:24,400
appreciate any feedback i know it's hard

1987
01:24:24,400 --> 01:24:25,199
to

1988
01:24:25,199 --> 01:24:27,280
give any feedback in these

1989
01:24:27,280 --> 01:24:28,880
online sessions

1990
01:24:28,880 --> 01:24:33,199
but offline are very welcome and

1991
01:24:33,199 --> 01:24:35,600
towards specifying a zero zero draft for

1992
01:24:35,600 --> 01:24:37,840
this

1993
01:24:38,320 --> 01:24:40,799
next slide

1994
01:24:42,000 --> 01:24:44,560
okay here we just uh summarized

1995
01:24:44,560 --> 01:24:46,239
something is good

1996
01:24:46,239 --> 01:24:47,199
uh

1997
01:24:47,199 --> 01:24:49,360
something in virtuous environment is

1998
01:24:49,360 --> 01:24:54,080
hard uniform sampling list can fix that

1999
01:24:54,080 --> 01:24:56,239
okay

2000
01:24:56,239 --> 01:24:59,559
any questions

2001
01:25:07,120 --> 01:25:08,480
yes

2002
01:25:08,480 --> 01:25:12,280
that one go ahead

2003
01:25:16,560 --> 01:25:18,080
hi can you hear me

2004
01:25:18,080 --> 01:25:20,719
yes yes all right thank you

2005
01:25:20,719 --> 01:25:24,480
hey um that's a very interesting um

2006
01:25:24,480 --> 01:25:27,520
a very interesting study here i wanted

2007
01:25:27,520 --> 01:25:30,960
to ask you a question about um

2008
01:25:30,960 --> 01:25:34,719
as you are actually um

2009
01:25:34,719 --> 01:25:37,440
making those samplings and i can see

2010
01:25:37,440 --> 01:25:39,199
that you are actually

2011
01:25:39,199 --> 01:25:41,600
talking about reduction of how much of

2012
01:25:41,600 --> 01:25:43,840
sampling is done

2013
01:25:43,840 --> 01:25:46,320
however i wanted to ask something about

2014
01:25:46,320 --> 01:25:48,480
the priority of the packets those

2015
01:25:48,480 --> 01:25:49,760
sampling

2016
01:25:49,760 --> 01:25:52,639
all these seen as control packets are

2017
01:25:52,639 --> 01:25:54,480
all those seen as

2018
01:25:54,480 --> 01:25:56,320
regular

2019
01:25:56,320 --> 01:25:59,840
packets for the apps

2020
01:26:00,080 --> 01:26:02,320
yes

2021
01:26:04,880 --> 01:26:06,639
so this is

2022
01:26:06,639 --> 01:26:08,719
using the standard simple protocols and

2023
01:26:08,719 --> 01:26:10,639
ipfix is uh

2024
01:26:10,639 --> 01:26:12,560
the itf standard and they're also the

2025
01:26:12,560 --> 01:26:15,679
net flow of cisco and s flow um

2026
01:26:15,679 --> 01:26:18,400
standards as well

2027
01:26:18,400 --> 01:26:19,679
we we get

2028
01:26:19,679 --> 01:26:22,320
one out of x packets either as a full

2029
01:26:22,320 --> 01:26:25,120
packet without its payload or summarized

2030
01:26:25,120 --> 01:26:27,040
by the connections by the flow

2031
01:26:27,040 --> 01:26:29,360
themselves so we discussed about we're

2032
01:26:29,360 --> 01:26:32,320
discussing about usual

2033
01:26:32,320 --> 01:26:33,760
ip headers

2034
01:26:33,760 --> 01:26:35,440
either as a

2035
01:26:35,440 --> 01:26:38,800
full details ipad or summarized

2036
01:26:38,800 --> 01:26:40,719
connections is this answering your

2037
01:26:40,719 --> 01:26:43,040
question

2038
01:26:43,199 --> 01:26:45,600
oh kind of you know i'll follow up

2039
01:26:45,600 --> 01:26:48,159
offline with you um you know i had a

2040
01:26:48,159 --> 01:26:50,000
couple of questions about you know the

2041
01:26:50,000 --> 01:26:51,679
competition between

2042
01:26:51,679 --> 01:26:54,159
that much that amount of sampling

2043
01:26:54,159 --> 01:26:56,719
as control traffic and how would that

2044
01:26:56,719 --> 01:26:59,760
work but a whole lot with you offline

2045
01:26:59,760 --> 01:27:00,880
on that one

2046
01:27:00,880 --> 01:27:03,520
i i think the question is um

2047
01:27:03,520 --> 01:27:07,040
after the sampling has been gathered per

2048
01:27:07,040 --> 01:27:08,560
application

2049
01:27:08,560 --> 01:27:10,639
the sampling records are the high

2050
01:27:10,639 --> 01:27:14,080
priority traffic just to protect the the

2051
01:27:14,080 --> 01:27:17,600
the process of ongoing uh sampling so

2052
01:27:17,600 --> 01:27:18,719
analysis

2053
01:27:18,719 --> 01:27:19,760
will be

2054
01:27:19,760 --> 01:27:22,800
uh you know protected uh and i think we

2055
01:27:22,800 --> 01:27:24,239
can answer that online and that's a

2056
01:27:24,239 --> 01:27:26,719
great point

2057
01:27:26,719 --> 01:27:29,120
thank you

2058
01:27:29,199 --> 01:27:32,599
yes of course

2059
01:27:34,000 --> 01:27:36,159
mark you disappeared from the queue no

2060
01:27:36,159 --> 01:27:39,280
more uh question

2061
01:27:39,280 --> 01:27:40,800
please go ahead

2062
01:27:40,800 --> 01:27:43,600
yeah no i think um

2063
01:27:43,600 --> 01:27:46,880
yeah this is a bit more specific i don't

2064
01:27:46,880 --> 01:27:49,520
know if you guys saw it later but um

2065
01:27:49,520 --> 01:27:52,239
could you give an insight of how how are

2066
01:27:52,239 --> 01:27:53,040
you

2067
01:27:53,040 --> 01:27:55,840
structuring the eivs or how do you see

2068
01:27:55,840 --> 01:27:57,040
eith

2069
01:27:57,040 --> 01:28:01,040
being structured to to support this

2070
01:28:01,040 --> 01:28:02,000
but

2071
01:28:02,000 --> 01:28:04,159
that's a great question so currently you

2072
01:28:04,159 --> 01:28:07,840
know it's a private space of cyber

2073
01:28:07,840 --> 01:28:09,280
cfn network

2074
01:28:09,280 --> 01:28:10,960
uh but that's a

2075
01:28:10,960 --> 01:28:14,159
it relates to your presentation also

2076
01:28:14,159 --> 01:28:15,679
mark

2077
01:28:15,679 --> 01:28:18,000
and there's

2078
01:28:18,000 --> 01:28:21,360
about space conservation uh do we match

2079
01:28:21,360 --> 01:28:24,639
a specific id to any uh group

2080
01:28:24,639 --> 01:28:27,679
testing or do we simply algorithmically

2081
01:28:27,679 --> 01:28:29,440
generate eids

2082
01:28:29,440 --> 01:28:32,400
and use um

2083
01:28:33,840 --> 01:28:36,960
the mapping system for a longest match

2084
01:28:36,960 --> 01:28:39,679
for the best collector for this

2085
01:28:39,679 --> 01:28:44,239
you know these are good questions okay

2086
01:28:46,400 --> 01:28:47,520
okay

2087
01:28:47,520 --> 01:28:49,520
okay yeah and just

2088
01:28:49,520 --> 01:28:50,960
trying to

2089
01:28:50,960 --> 01:28:53,600
try to map you know to comfort zone for

2090
01:28:53,600 --> 01:28:54,560
you know

2091
01:28:54,560 --> 01:28:56,880
even

2092
01:29:05,840 --> 01:29:07,679
okay if

2093
01:29:07,679 --> 01:29:09,679
there's no more

2094
01:29:09,679 --> 01:29:13,679
we can move to the next topic

2095
01:29:17,120 --> 01:29:18,080
okay

2096
01:29:18,080 --> 01:29:20,960
so uh so this is more mature this is in

2097
01:29:20,960 --> 01:29:22,560
production and

2098
01:29:22,560 --> 01:29:24,320
currently in deployment the list in

2099
01:29:24,320 --> 01:29:26,239
hexagon in

2100
01:29:26,239 --> 01:29:27,360
in

2101
01:29:27,360 --> 01:29:28,239
in

2102
01:29:28,239 --> 01:29:30,000
thousands of drivers in new york city

2103
01:29:30,000 --> 01:29:32,320
and also now by industry consortium in

2104
01:29:32,320 --> 01:29:33,840
tokyo

2105
01:29:33,840 --> 01:29:36,000
that's been under construction right now

2106
01:29:36,000 --> 01:29:38,480
servers have been allocated but the

2107
01:29:38,480 --> 01:29:40,639
other cities in the us it's full

2108
01:29:40,639 --> 01:29:41,840
production

2109
01:29:41,840 --> 01:29:44,320
uh i'd just like to give a quick uh

2110
01:29:44,320 --> 01:29:45,280
brief

2111
01:29:45,280 --> 01:29:47,840
learnings of what we we see and what the

2112
01:29:47,840 --> 01:29:49,600
stakeholders in the industry see from

2113
01:29:49,600 --> 01:29:50,800
using lisp

2114
01:29:50,800 --> 01:29:52,719
for this

2115
01:29:52,719 --> 01:29:53,840
mobility

2116
01:29:53,840 --> 01:29:55,520
in terms of vehicles

2117
01:29:55,520 --> 01:29:59,199
use cases next slide please

2118
01:30:02,000 --> 01:30:05,040
all right so what we achieved using

2119
01:30:05,040 --> 01:30:09,040
a lisp is really uh take uh the full

2120
01:30:09,040 --> 01:30:12,560
spectrum of uh mobility networks

2121
01:30:12,560 --> 01:30:15,040
which were very split between vehicle to

2122
01:30:15,040 --> 01:30:16,400
vehicle

2123
01:30:16,400 --> 01:30:19,679
which are based on geospatial networks

2124
01:30:19,679 --> 01:30:22,880
like in ipy or dsrc

2125
01:30:22,880 --> 01:30:24,960
for stuff which is immediate and very

2126
01:30:24,960 --> 01:30:26,320
transient

2127
01:30:26,320 --> 01:30:28,480
versus uh

2128
01:30:28,480 --> 01:30:31,360
vehicle to cloud which is like you drive

2129
01:30:31,360 --> 01:30:33,280
for a couple of hours and then you

2130
01:30:33,280 --> 01:30:35,199
upload overnight

2131
01:30:35,199 --> 01:30:37,440
what you collected and then

2132
01:30:37,440 --> 01:30:40,239
you know the cloud crunches uh fresher

2133
01:30:40,239 --> 01:30:42,480
maps so

2134
01:30:42,480 --> 01:30:46,080
using uh the hierarchy and the layering

2135
01:30:46,080 --> 01:30:47,840
we are able to unify using one

2136
01:30:47,840 --> 01:30:49,920
architecture all these use cases and

2137
01:30:49,920 --> 01:30:52,080
also all the use cases of stuff that

2138
01:30:52,080 --> 01:30:54,400
fell in between so what you see here is

2139
01:30:54,400 --> 01:30:56,639
an example of using um

2140
01:30:56,639 --> 01:30:59,840
uh the hierarchy and layering for

2141
01:30:59,840 --> 01:31:00,800
a

2142
01:31:00,800 --> 01:31:02,960
detecting parking which is something

2143
01:31:02,960 --> 01:31:05,199
that has to be done quickly

2144
01:31:05,199 --> 01:31:08,960
uh and previously had no answer

2145
01:31:08,960 --> 01:31:12,800
in v2v or v2 cloud also understanding

2146
01:31:12,800 --> 01:31:14,840
the cycle of traffic

2147
01:31:14,840 --> 01:31:17,760
lights or you know

2148
01:31:17,760 --> 01:31:19,360
doing some kind of

2149
01:31:19,360 --> 01:31:22,000
patterns on the curb activity in an area

2150
01:31:22,000 --> 01:31:24,320
so all these things fell between and

2151
01:31:24,320 --> 01:31:25,679
really the

2152
01:31:25,679 --> 01:31:27,600
the use case uh

2153
01:31:27,600 --> 01:31:30,880
transience is really determined by

2154
01:31:30,880 --> 01:31:32,719
a

2155
01:31:32,719 --> 01:31:36,159
the the the mobile network uh how much

2156
01:31:36,159 --> 01:31:38,480
do we have in terms of capacity what is

2157
01:31:38,480 --> 01:31:40,560
the density and what is

2158
01:31:40,560 --> 01:31:42,320
the latency

2159
01:31:42,320 --> 01:31:47,280
um this the this layering uh works

2160
01:31:47,280 --> 01:31:50,880
when let's say uh toyota wants to find

2161
01:31:50,880 --> 01:31:53,120
parking for its

2162
01:31:53,120 --> 01:31:56,239
customers its drivers based on its cars

2163
01:31:56,239 --> 01:31:59,760
so there are some cars of some toyota

2164
01:31:59,760 --> 01:32:01,440
cars are finding parking for other

2165
01:32:01,440 --> 01:32:03,600
toyota cars using uh

2166
01:32:03,600 --> 01:32:04,880
a

2167
01:32:04,880 --> 01:32:07,840
ead abstraction of uh

2168
01:32:07,840 --> 01:32:10,159
of the geolocation

2169
01:32:10,159 --> 01:32:14,480
uh provided by toyota but it also works

2170
01:32:14,480 --> 01:32:15,280
when

2171
01:32:15,280 --> 01:32:17,280
let's say toyota and subaru have an

2172
01:32:17,280 --> 01:32:20,639
agreement to jointly uh collect uploads

2173
01:32:20,639 --> 01:32:23,280
using an h3eid

2174
01:32:23,280 --> 01:32:25,760
and then have

2175
01:32:25,760 --> 01:32:28,719
agreements with the parkopedia

2176
01:32:28,719 --> 01:32:30,320
or bosch

2177
01:32:30,320 --> 01:32:32,159
parking services

2178
01:32:32,159 --> 01:32:36,080
using other h2ad same h3 64 bits

2179
01:32:36,080 --> 01:32:37,760
different eid

2180
01:32:37,760 --> 01:32:40,320
and then parkopedia has an agreement

2181
01:32:40,320 --> 01:32:41,280
with

2182
01:32:41,280 --> 01:32:43,360
the city not only i mean it detects

2183
01:32:43,360 --> 01:32:46,320
parking for drivers but it detects

2184
01:32:46,320 --> 01:32:48,880
permit violations in construction for

2185
01:32:48,880 --> 01:32:52,639
the city so this is again using

2186
01:32:52,639 --> 01:32:55,360
the same mechanisms the same rfc

2187
01:32:55,360 --> 01:32:56,880
and

2188
01:32:56,880 --> 01:32:59,280
you know people are seeing uh you know

2189
01:32:59,280 --> 01:33:02,639
that this basis is good to build on

2190
01:33:02,639 --> 01:33:06,679
um so next slide please

2191
01:33:08,320 --> 01:33:09,920
all right so

2192
01:33:09,920 --> 01:33:12,880
as we described uh the key for unifying

2193
01:33:12,880 --> 01:33:15,600
the use cases in one architecture is by

2194
01:33:15,600 --> 01:33:18,159
uh obstructing the geospatial network

2195
01:33:18,159 --> 01:33:19,120
into

2196
01:33:19,120 --> 01:33:20,560
uh

2197
01:33:20,560 --> 01:33:22,560
your special eid's

2198
01:33:22,560 --> 01:33:24,639
it's virtualized instead of physical

2199
01:33:24,639 --> 01:33:25,760
network

2200
01:33:25,760 --> 01:33:28,800
uh and these geolocation services

2201
01:33:28,800 --> 01:33:29,760
they

2202
01:33:29,760 --> 01:33:31,760
utilize

2203
01:33:31,760 --> 01:33:34,560
areas based on uploads

2204
01:33:34,560 --> 01:33:37,360
but that introduces uh

2205
01:33:37,360 --> 01:33:41,120
key issues um to the industry

2206
01:33:41,120 --> 01:33:44,080
uh which lists answers uh

2207
01:33:44,080 --> 01:33:45,280
in a very

2208
01:33:45,280 --> 01:33:46,960
elegant manner

2209
01:33:46,960 --> 01:33:49,280
uh one is

2210
01:33:49,280 --> 01:33:51,920
since we associate vehicles to

2211
01:33:51,920 --> 01:33:54,320
geolocation services not randomly load

2212
01:33:54,320 --> 01:33:56,639
balanced but based on where they are

2213
01:33:56,639 --> 01:33:58,960
then depending on how much traffic there

2214
01:33:58,960 --> 01:34:01,600
is you need to dynamically

2215
01:34:01,600 --> 01:34:02,800
um

2216
01:34:02,800 --> 01:34:05,120
set

2217
01:34:05,840 --> 01:34:08,560
the resources and you have to do it

2218
01:34:08,560 --> 01:34:10,239
transparently to the vehicles because

2219
01:34:10,239 --> 01:34:12,000
that's a mass market

2220
01:34:12,000 --> 01:34:16,480
so by using eids we can do that we can

2221
01:34:16,480 --> 01:34:18,880
switch geolocation service to from one

2222
01:34:18,880 --> 01:34:20,239
server to

2223
01:34:20,239 --> 01:34:21,600
a server with the

2224
01:34:21,600 --> 01:34:23,600
10 of those to server with only two of

2225
01:34:23,600 --> 01:34:24,480
those

2226
01:34:24,480 --> 01:34:25,360
and

2227
01:34:25,360 --> 01:34:26,639
and that's

2228
01:34:26,639 --> 01:34:28,239
using eid

2229
01:34:28,239 --> 01:34:30,960
the second key issue which

2230
01:34:30,960 --> 01:34:33,520
as a result of this obstruction

2231
01:34:33,520 --> 01:34:35,520
your special abstraction

2232
01:34:35,520 --> 01:34:37,520
is your privacy

2233
01:34:37,520 --> 01:34:39,520
it's unlikely that because i'm using a

2234
01:34:39,520 --> 01:34:40,960
parking service

2235
01:34:40,960 --> 01:34:43,040
the parking provider knows where exactly

2236
01:34:43,040 --> 01:34:45,199
i am every point of the day

2237
01:34:45,199 --> 01:34:48,159
so again here the eid

2238
01:34:48,159 --> 01:34:50,000
layering

2239
01:34:50,000 --> 01:34:51,600
solves that the

2240
01:34:51,600 --> 01:34:52,960
the

2241
01:34:52,960 --> 01:34:55,600
the network is aware of eids uh the

2242
01:34:55,600 --> 01:34:58,400
geolocation services were yeah this but

2243
01:34:58,400 --> 01:35:00,960
the aeds of vehicles are ephemeral and

2244
01:35:00,960 --> 01:35:02,080
changing

2245
01:35:02,080 --> 01:35:06,000
and these are not ip addresses

2246
01:35:06,000 --> 01:35:09,840
uh so i have ip geoprivacy

2247
01:35:09,840 --> 01:35:10,880
also

2248
01:35:10,880 --> 01:35:13,360
because i'm driving between geolocation

2249
01:35:13,360 --> 01:35:16,960
areas i'm switching context to where is

2250
01:35:16,960 --> 01:35:20,000
it that i'm subscribed to or upload to

2251
01:35:20,000 --> 01:35:21,840
and that has to be seamless cannot be

2252
01:35:21,840 --> 01:35:23,920
done with via dns

2253
01:35:23,920 --> 01:35:26,320
it takes too long

2254
01:35:26,320 --> 01:35:27,600
and again

2255
01:35:27,600 --> 01:35:31,520
using eid's uh h3e ids here solves the

2256
01:35:31,520 --> 01:35:32,880
problem

2257
01:35:32,880 --> 01:35:35,840
uh and the fourth item

2258
01:35:35,840 --> 01:35:37,760
is um

2259
01:35:37,760 --> 01:35:40,080
while i'm driving my reception may

2260
01:35:40,080 --> 01:35:41,600
change between

2261
01:35:41,600 --> 01:35:44,320
att and verizon or

2262
01:35:44,320 --> 01:35:46,320
kddi and ntt

2263
01:35:46,320 --> 01:35:47,360
uh

2264
01:35:47,360 --> 01:35:48,400
but

2265
01:35:48,400 --> 01:35:52,320
i i must maintain my identity a

2266
01:35:52,320 --> 01:35:53,119
a

2267
01:35:53,119 --> 01:35:55,040
for the subscription

2268
01:35:55,040 --> 01:35:57,119
to hold therefore i'm not using ips

2269
01:35:57,119 --> 01:36:00,080
because ips will change i'm using eits

2270
01:36:00,080 --> 01:36:02,719
so these are things uh that

2271
01:36:02,719 --> 01:36:04,960
you know the industry begins to see

2272
01:36:04,960 --> 01:36:06,960
uh begins to see that it's good that

2273
01:36:06,960 --> 01:36:09,119
it's specified as a standard as a

2274
01:36:09,119 --> 01:36:11,040
multi-vendor standard

2275
01:36:11,040 --> 01:36:12,880
and

2276
01:36:12,880 --> 01:36:13,600
and

2277
01:36:13,600 --> 01:36:15,199
can be leveraged

2278
01:36:15,199 --> 01:36:19,519
in multiple tiers of the application

2279
01:36:19,920 --> 01:36:23,080
last slide

2280
01:36:24,639 --> 01:36:25,760
all right so

2281
01:36:25,760 --> 01:36:27,520
what we see is that using this uh

2282
01:36:27,520 --> 01:36:30,639
specification and use of lisp um

2283
01:36:30,639 --> 01:36:33,440
we are able to uh scale

2284
01:36:33,440 --> 01:36:35,360
a crowdscale

2285
01:36:35,360 --> 01:36:38,719
actually a processing of uploads uh

2286
01:36:38,719 --> 01:36:41,280
we're using we are able to propagate

2287
01:36:41,280 --> 01:36:44,000
information based based on change or

2288
01:36:44,000 --> 01:36:46,880
exception or anomaly uh using a

2289
01:36:46,880 --> 01:36:49,360
signal-free propagation

2290
01:36:49,360 --> 01:36:52,239
and we are able to facilitate the

2291
01:36:52,239 --> 01:36:55,280
latency because we pre-select our logs

2292
01:36:55,280 --> 01:36:56,000
for

2293
01:36:56,000 --> 01:36:58,639
h3ids to places

2294
01:36:58,639 --> 01:37:01,280
where the latency from the ip anchors is

2295
01:37:01,280 --> 01:37:03,679
or is known and controlled

2296
01:37:03,679 --> 01:37:05,840
so why is this important it's important

2297
01:37:05,840 --> 01:37:07,679
because

2298
01:37:07,679 --> 01:37:09,119
uh

2299
01:37:09,119 --> 01:37:11,280
i mean human reaction is a long latency

2300
01:37:11,280 --> 01:37:13,040
so that's not the point the point is

2301
01:37:13,040 --> 01:37:13,920
more

2302
01:37:13,920 --> 01:37:16,320
um when a car is driving in 20 meters

2303
01:37:16,320 --> 01:37:17,520
per second

2304
01:37:17,520 --> 01:37:20,080
if i'm my latency is high i'm missing a

2305
01:37:20,080 --> 01:37:22,719
lot of meters and therefore i can

2306
01:37:22,719 --> 01:37:26,080
pre-select the rlox and then move

2307
01:37:26,080 --> 01:37:28,880
the geolocation services the h3 eid

2308
01:37:28,880 --> 01:37:30,480
geocaching services

2309
01:37:30,480 --> 01:37:32,239
based on a

2310
01:37:32,239 --> 01:37:34,800
load of traffic

2311
01:37:34,800 --> 01:37:36,080
so

2312
01:37:36,080 --> 01:37:38,239
that's it that's the update it's in

2313
01:37:38,239 --> 01:37:41,199
publication uh i wonder if we can get

2314
01:37:41,199 --> 01:37:43,280
some kind of indication on when the rfc

2315
01:37:43,280 --> 01:37:45,199
is going to be published

2316
01:37:45,199 --> 01:37:46,840
it's very hard for

2317
01:37:46,840 --> 01:37:49,440
industry outside the itf to work with

2318
01:37:49,440 --> 01:37:52,480
any kind of draft so

2319
01:37:52,480 --> 01:37:56,199
it would be good to know

2320
01:38:02,080 --> 01:38:04,159
it

2321
01:38:05,199 --> 01:38:07,519
thank you

2322
01:38:07,760 --> 01:38:10,400
are there any questions from the

2323
01:38:10,400 --> 01:38:13,400
audience

2324
01:38:20,000 --> 01:38:22,719
i have a simple one

2325
01:38:22,719 --> 01:38:24,960
these are

2326
01:38:24,960 --> 01:38:25,840
two

2327
01:38:25,840 --> 01:38:28,480
interesting use cases for lisp

2328
01:38:28,480 --> 01:38:31,360
um

2329
01:38:31,360 --> 01:38:32,880
the question is

2330
01:38:32,880 --> 01:38:34,080
uh

2331
01:38:34,080 --> 01:38:36,880
in order to to to solve these use cases

2332
01:38:36,880 --> 01:38:37,840
um

2333
01:38:37,840 --> 01:38:40,639
do you think that there will be any

2334
01:38:40,639 --> 01:38:44,719
modification or extension to the lease

2335
01:38:44,719 --> 01:38:46,239
protocol

2336
01:38:46,239 --> 01:38:48,480
per se

2337
01:38:48,480 --> 01:38:51,119
or i think uh

2338
01:38:51,119 --> 01:38:53,360
right

2339
01:38:53,600 --> 01:38:56,800
so it may be but so far not

2340
01:38:56,800 --> 01:38:58,639
so far

2341
01:38:58,639 --> 01:39:00,960
the specifications uh

2342
01:39:00,960 --> 01:39:03,440
give enough flexibility i mean sometimes

2343
01:39:03,440 --> 01:39:04,880
you have to think what exactly am i

2344
01:39:04,880 --> 01:39:06,719
using and how

2345
01:39:06,719 --> 01:39:09,360
before i mean how do i allocate the

2346
01:39:09,360 --> 01:39:11,520
ideas

2347
01:39:11,520 --> 01:39:13,280
as was asked before

2348
01:39:13,280 --> 01:39:14,400
and

2349
01:39:14,400 --> 01:39:16,560
you know how do i

2350
01:39:16,560 --> 01:39:18,960
what meaning do i give to things and how

2351
01:39:18,960 --> 01:39:20,000
do i use

2352
01:39:20,000 --> 01:39:23,600
signal free to um

2353
01:39:23,600 --> 01:39:26,480
partition themes and subscriptions and

2354
01:39:26,480 --> 01:39:28,320
what does it mean

2355
01:39:28,320 --> 01:39:30,719
for a replication

2356
01:39:30,719 --> 01:39:32,880
which xtr's to use

2357
01:39:32,880 --> 01:39:34,719
a v-switch or a

2358
01:39:34,719 --> 01:39:37,440
you know full-blown hardware

2359
01:39:37,440 --> 01:39:39,040
that that can do

2360
01:39:39,040 --> 01:39:42,639
it can handle uh like cities

2361
01:39:42,639 --> 01:39:46,480
but so far the specification itself

2362
01:39:46,480 --> 01:39:48,239
has been

2363
01:39:48,239 --> 01:39:50,718
good enough

2364
01:39:51,360 --> 01:39:53,199
okay

2365
01:39:53,199 --> 01:39:55,679
okay

2366
01:39:55,679 --> 01:39:58,080
any any other question from

2367
01:39:58,080 --> 01:40:00,719
your audience

2368
01:40:05,840 --> 01:40:08,080
mark

2369
01:40:08,080 --> 01:40:09,119
so

2370
01:40:09,119 --> 01:40:12,560
in in practice um with signal free and

2371
01:40:12,560 --> 01:40:13,840
replication

2372
01:40:13,840 --> 01:40:14,880
um

2373
01:40:14,880 --> 01:40:17,840
have have you seen any scalability

2374
01:40:17,840 --> 01:40:19,520
issues

2375
01:40:19,520 --> 01:40:22,480
when deploying this and i don't know

2376
01:40:22,480 --> 01:40:25,119
if you have to replicate to

2377
01:40:25,119 --> 01:40:28,159
too many sites

2378
01:40:29,440 --> 01:40:32,400
so yeah that's a good point

2379
01:40:32,400 --> 01:40:33,920
great point so actually for these

2380
01:40:33,920 --> 01:40:35,760
networks where there's a production a

2381
01:40:35,760 --> 01:40:38,159
lot of production of data routed to

2382
01:40:38,159 --> 01:40:40,080
somewhere close for reduction and then

2383
01:40:40,080 --> 01:40:43,280
propagation based on a subscription

2384
01:40:43,280 --> 01:40:45,679
uh usually it's a lot of channels of

2385
01:40:45,679 --> 01:40:48,639
very few subscribers so signal three is

2386
01:40:48,639 --> 01:40:50,080
really good for them

2387
01:40:50,080 --> 01:40:52,480
oh okay

2388
01:40:53,840 --> 01:40:56,960
and i think in the last slide

2389
01:40:56,960 --> 01:40:58,639
you thought

2390
01:40:58,639 --> 01:41:01,280
can you go just one back one slide back

2391
01:41:01,280 --> 01:41:02,880
yeah just

2392
01:41:02,880 --> 01:41:05,119
um

2393
01:41:05,119 --> 01:41:06,400
sure um

2394
01:41:06,400 --> 01:41:07,679
yes

2395
01:41:07,679 --> 01:41:08,880
so

2396
01:41:08,880 --> 01:41:10,080
these

2397
01:41:10,080 --> 01:41:11,119
um

2398
01:41:11,119 --> 01:41:12,960
preallocation of

2399
01:41:12,960 --> 01:41:16,320
our locks um

2400
01:41:16,400 --> 01:41:20,000
are you doing priority here or are you

2401
01:41:20,000 --> 01:41:21,360
just

2402
01:41:21,360 --> 01:41:26,000
doing a a selection of so you

2403
01:41:26,000 --> 01:41:29,119
you have a list compiled from from

2404
01:41:29,119 --> 01:41:31,199
signals free registration right and and

2405
01:41:31,199 --> 01:41:33,840
then you get all these lar logs in the

2406
01:41:33,840 --> 01:41:36,159
list and and then what you do is

2407
01:41:36,159 --> 01:41:40,799
filter down that filter them down uh

2408
01:41:40,960 --> 01:41:43,360
okay so here's um

2409
01:41:43,360 --> 01:41:46,159
the the situation on the ground is like

2410
01:41:46,159 --> 01:41:47,600
we get

2411
01:41:47,600 --> 01:41:48,480
a

2412
01:41:48,480 --> 01:41:49,360
few

2413
01:41:49,360 --> 01:41:50,880
our locks

2414
01:41:50,880 --> 01:41:54,000
for h3 services let's say from uh the

2415
01:41:54,000 --> 01:41:56,080
oracle cloud from

2416
01:41:56,080 --> 01:41:57,360
wavelength

2417
01:41:57,360 --> 01:41:58,960
and we

2418
01:41:58,960 --> 01:42:01,840
know they all meet the requirements of

2419
01:42:01,840 --> 01:42:03,920
latency between them

2420
01:42:03,920 --> 01:42:06,639
and the mobile carrier uh

2421
01:42:06,639 --> 01:42:08,080
ip anchors

2422
01:42:08,080 --> 01:42:11,360
okay okay but

2423
01:42:12,080 --> 01:42:14,400
it doesn't it doesn't relate to where

2424
01:42:14,400 --> 01:42:16,719
the car is because that even though the

2425
01:42:16,719 --> 01:42:19,360
car is moving as far as ib anchor is not

2426
01:42:19,360 --> 01:42:20,639
moving

2427
01:42:20,639 --> 01:42:23,280
it's uh mostly related to i know

2428
01:42:23,280 --> 01:42:27,360
that if i put an h3 ead service there

2429
01:42:27,360 --> 01:42:28,719
then

2430
01:42:28,719 --> 01:42:32,480
the car can upload more data per meter

2431
01:42:32,480 --> 01:42:34,800
so i'll have more coverage i can get

2432
01:42:34,800 --> 01:42:37,119
more out of any car

2433
01:42:37,119 --> 01:42:39,840
so now i have to

2434
01:42:39,840 --> 01:42:43,760
put the eids on the airlocks based on

2435
01:42:43,760 --> 01:42:44,800
load

2436
01:42:44,800 --> 01:42:45,920
of the

2437
01:42:45,920 --> 01:42:48,960
current compute commute situation and

2438
01:42:48,960 --> 01:42:50,000
and

2439
01:42:50,000 --> 01:42:51,440
but i know

2440
01:42:51,440 --> 01:42:53,620
the the sla of

2441
01:42:53,620 --> 01:42:54,840
[Music]

2442
01:42:54,840 --> 01:42:56,719
utilization of

2443
01:42:56,719 --> 01:43:00,080
per car ahead of putting an eid service

2444
01:43:00,080 --> 01:43:02,320
there

2445
01:43:03,119 --> 01:43:07,199
oh i see it i understand okay

2446
01:43:07,280 --> 01:43:10,159
yeah i had gotten a bit confused i thank

2447
01:43:10,159 --> 01:43:12,320
you

2448
01:43:17,199 --> 01:43:20,159
any other question

2449
01:43:23,360 --> 01:43:27,679
okay so thank you very much uh sharon

2450
01:43:27,679 --> 01:43:29,360
so this

2451
01:43:29,360 --> 01:43:31,760
brings us at the end of

2452
01:43:31,760 --> 01:43:33,760
of the

2453
01:43:33,760 --> 01:43:37,119
presentation that we had in the agenda

2454
01:43:37,119 --> 01:43:41,199
at this point the the mic is open

2455
01:43:41,199 --> 01:43:42,080
for

2456
01:43:42,080 --> 01:43:44,719
any question already thing

2457
01:43:44,719 --> 01:43:46,960
people want to discuss

2458
01:43:46,960 --> 01:43:50,920
related to lisp obviously

2459
01:44:00,480 --> 01:44:02,239
okay

2460
01:44:02,239 --> 01:44:04,400
seems that everybody is more interested

2461
01:44:04,400 --> 01:44:05,199
in

2462
01:44:05,199 --> 01:44:07,440
starting the weekend rather than discuss

2463
01:44:07,440 --> 01:44:09,839
with me

2464
01:44:10,320 --> 01:44:12,159
okay

2465
01:44:12,159 --> 01:44:14,080
folks thank you very much i think that

2466
01:44:14,080 --> 01:44:16,080
this brings us to

2467
01:44:16,080 --> 01:44:18,639
to the end of this meeting

2468
01:44:18,639 --> 01:44:20,880
thank you all

2469
01:44:20,880 --> 01:44:23,119
and

2470
01:44:23,280 --> 01:44:26,400
see you again in 113

2471
01:44:26,400 --> 01:44:29,400
bye-bye

