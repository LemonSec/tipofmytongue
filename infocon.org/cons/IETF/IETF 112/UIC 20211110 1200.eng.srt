1
00:00:39,840 --> 00:00:42,559
while we're waiting um would anyone

2
00:00:42,559 --> 00:00:46,559
like to volunteer to be a jabber scribe

3
00:00:47,280 --> 00:00:50,079
and or would anyone like to volunteer to

4
00:00:50,079 --> 00:00:52,559
help robin with the note-taking today

5
00:00:52,559 --> 00:00:54,640
robin will be presenting for

6
00:00:54,640 --> 00:00:56,320
15 minutes

7
00:00:56,320 --> 00:00:59,520
but beyond that uh whoever would like to

8
00:00:59,520 --> 00:01:02,160
dive in um they'll be very welcome see

9
00:01:02,160 --> 00:01:04,239
watson's volunteered thank you watson

10
00:01:04,239 --> 00:01:07,680
for jabba's scribe um

11
00:01:07,680 --> 00:01:09,680
yeah if we could get some d2 to assist

12
00:01:09,680 --> 00:01:11,360
with the note taking that would be very

13
00:01:11,360 --> 00:01:14,840
welcome too

14
00:01:58,719 --> 00:02:01,119
any takers we'll need a note taker to

15
00:02:01,119 --> 00:02:03,920
make sure that uh

16
00:02:03,920 --> 00:02:05,520
we don't miss the notes from the q log

17
00:02:05,520 --> 00:02:08,318
bit um i might have to start asking

18
00:02:08,318 --> 00:02:09,679
people by name

19
00:02:09,679 --> 00:02:12,959
if we don't have any takers

20
00:02:13,680 --> 00:02:15,360
jonathan thank you very much you were

21
00:02:15,360 --> 00:02:18,160
the person i had in mind to to ask so

22
00:02:18,160 --> 00:02:20,239
i'm glad you did it first

23
00:02:20,239 --> 00:02:22,560
uh right then uh let's get started with

24
00:02:22,560 --> 00:02:25,520
the session um hello everybody um this

25
00:02:25,520 --> 00:02:27,520
is the quick working group session if

26
00:02:27,520 --> 00:02:29,440
this is not the session you intended to

27
00:02:29,440 --> 00:02:32,239
join please leave now um

28
00:02:32,239 --> 00:02:35,200
i'm lucas i'm one of the co-chairs matt

29
00:02:35,200 --> 00:02:37,519
who's just putting his video on is is my

30
00:02:37,519 --> 00:02:39,519
fellow co-chair this is the first

31
00:02:39,519 --> 00:02:41,920
session i believe that uh lars hasn't

32
00:02:41,920 --> 00:02:43,599
shared a quick

33
00:02:43,599 --> 00:02:46,160
session so um it's it's breaking new

34
00:02:46,160 --> 00:02:48,800
ground um i'm just trying to see as lars

35
00:02:48,800 --> 00:02:52,080
even in the attendees list maybe yes he

36
00:02:52,080 --> 00:02:54,160
is hello lars i thought you might have

37
00:02:54,160 --> 00:02:57,280
escaped permanently but it seems

38
00:02:57,280 --> 00:03:00,159
you did want to come back um so this is

39
00:03:00,159 --> 00:03:01,680
a quick working group session like i

40
00:03:01,680 --> 00:03:04,000
said uh we we wanted to go through the

41
00:03:04,000 --> 00:03:06,640
usual notewell and and etc which i'll

42
00:03:06,640 --> 00:03:08,480
come on to next but also give a little

43
00:03:08,480 --> 00:03:10,640
bit of an update from the chairs about

44
00:03:10,640 --> 00:03:12,640
you know what has the working group been

45
00:03:12,640 --> 00:03:15,519
up to since the last meeting and uh

46
00:03:15,519 --> 00:03:16,720
maybe

47
00:03:16,720 --> 00:03:18,959
the direction of the group so just to

48
00:03:18,959 --> 00:03:21,840
you know we we've delivered rfc 9000 and

49
00:03:21,840 --> 00:03:24,080
people are a bit fragmented across

50
00:03:24,080 --> 00:03:25,840
different drafts we've lost a little bit

51
00:03:25,840 --> 00:03:27,920
of focus but the working group is still

52
00:03:27,920 --> 00:03:30,239
active so we just wanted to keep people

53
00:03:30,239 --> 00:03:31,280
up to date

54
00:03:31,280 --> 00:03:33,040
um so the first order of business here

55
00:03:33,040 --> 00:03:35,360
is the notewell uh we're halfway through

56
00:03:35,360 --> 00:03:37,200
the week now you should be familiar with

57
00:03:37,200 --> 00:03:39,440
this but if you're not um please go

58
00:03:39,440 --> 00:03:41,360
online and look this up and follow the

59
00:03:41,360 --> 00:03:43,599
links and read things

60
00:03:43,599 --> 00:03:46,799
this covers the itf policies that cover

61
00:03:46,799 --> 00:03:48,400
topics such as patents or code of

62
00:03:48,400 --> 00:03:50,640
conduct and and how you participate in

63
00:03:50,640 --> 00:03:53,120
the ietf so

64
00:03:53,120 --> 00:03:56,080
this is important for understanding your

65
00:03:56,080 --> 00:03:57,680
contributions to this working group and

66
00:03:57,680 --> 00:04:01,519
the ietf in general so please please do

67
00:04:01,519 --> 00:04:03,120
go and attend that

68
00:04:03,120 --> 00:04:04,239
we've also

69
00:04:04,239 --> 00:04:05,760
wanted to give some special attention to

70
00:04:05,760 --> 00:04:08,319
the itf code of conduct this time around

71
00:04:08,319 --> 00:04:10,920
um so the you know the

72
00:04:10,920 --> 00:04:14,159
rc7154 lays out some of the expectations

73
00:04:14,159 --> 00:04:16,399
for participants in the itf um you know

74
00:04:16,399 --> 00:04:17,279
we are

75
00:04:17,279 --> 00:04:19,759
just a diverse set of people from

76
00:04:19,759 --> 00:04:20,959
different parts of the world different

77
00:04:20,959 --> 00:04:23,280
experiences and and different viewpoints

78
00:04:23,280 --> 00:04:24,960
and that's good and we should celebrate

79
00:04:24,960 --> 00:04:28,240
that um but that we you know should have

80
00:04:28,240 --> 00:04:30,400
in personal discussions and try to be

81
00:04:30,400 --> 00:04:32,479
respectful of each other i'd like to say

82
00:04:32,479 --> 00:04:34,160
that the quick working group has got a

83
00:04:34,160 --> 00:04:37,919
good uh track record of being able to

84
00:04:37,919 --> 00:04:39,840
function and have constructive

85
00:04:39,840 --> 00:04:42,080
discussions on things so

86
00:04:42,080 --> 00:04:44,720
it doesn't hurt to remind ourselves that

87
00:04:44,720 --> 00:04:46,240
we should keep that up

88
00:04:46,240 --> 00:04:48,080
and i look forward to a healthy

89
00:04:48,080 --> 00:04:50,639
discussion during this session

90
00:04:50,639 --> 00:04:52,240
in terms of administrative year for this

91
00:04:52,240 --> 00:04:54,400
meeting we've got the notetakers thank

92
00:04:54,400 --> 00:04:56,639
you robin and jonathan

93
00:04:56,639 --> 00:04:58,639
the blue sheets are automatically taken

94
00:04:58,639 --> 00:05:01,120
care of now by meet echo so that saves a

95
00:05:01,120 --> 00:05:02,000
chore

96
00:05:02,000 --> 00:05:04,560
the chat will be by meet echo or java

97
00:05:04,560 --> 00:05:07,199
all integrated again no problem

98
00:05:07,199 --> 00:05:10,560
for av if you would like to present and

99
00:05:10,560 --> 00:05:11,440
or

100
00:05:11,440 --> 00:05:13,840
participate in the queue to

101
00:05:13,840 --> 00:05:16,240
ask questions or clarifying questions or

102
00:05:16,240 --> 00:05:18,080
make comments um

103
00:05:18,080 --> 00:05:20,160
we we're using the echo people should be

104
00:05:20,160 --> 00:05:21,759
familiar with that by this point in the

105
00:05:21,759 --> 00:05:23,039
week but if you're not there's several

106
00:05:23,039 --> 00:05:24,800
icons in the top left hand

107
00:05:24,800 --> 00:05:26,400
corner of the screen um you have the

108
00:05:26,400 --> 00:05:27,600
raised hand

109
00:05:27,600 --> 00:05:30,639
to get in the queue um when it's open

110
00:05:30,639 --> 00:05:32,639
uh we will be closing the queue at some

111
00:05:32,639 --> 00:05:35,680
points depending on how we manage time

112
00:05:35,680 --> 00:05:38,560
we can also unmute your microphone or

113
00:05:38,560 --> 00:05:40,000
your video

114
00:05:40,000 --> 00:05:41,600
for presenters we're going to go with

115
00:05:41,600 --> 00:05:43,680
the screen share tool built into meet

116
00:05:43,680 --> 00:05:46,720
echo today so uh when is this a lot you

117
00:05:46,720 --> 00:05:49,280
can click the page icon to request to

118
00:05:49,280 --> 00:05:50,639
share slides

119
00:05:50,639 --> 00:05:52,320
and it'll be done by me echo which is a

120
00:05:52,320 --> 00:05:54,400
little bit more friendly to people's

121
00:05:54,400 --> 00:05:56,639
streaming bandwidth um

122
00:05:56,639 --> 00:05:58,479
or if you really need to use share

123
00:05:58,479 --> 00:06:01,280
screen or we can have the chairs share

124
00:06:01,280 --> 00:06:03,360
this the slides for you um and the

125
00:06:03,360 --> 00:06:05,440
chairs will be running the cube and so

126
00:06:05,440 --> 00:06:07,759
my glamorous assistant matt will be

127
00:06:07,759 --> 00:06:09,440
helping me on that front

128
00:06:09,440 --> 00:06:11,360
um

129
00:06:11,360 --> 00:06:13,520
but down to the order of business today

130
00:06:13,520 --> 00:06:16,160
just a recap of the agenda

131
00:06:16,160 --> 00:06:18,400
uh like i said we've got some

132
00:06:18,400 --> 00:06:20,319
chair updates after this administrator

133
00:06:20,319 --> 00:06:22,400
section um

134
00:06:22,400 --> 00:06:24,160
we have some working group items on the

135
00:06:24,160 --> 00:06:25,759
agenda so we've got the act frequency

136
00:06:25,759 --> 00:06:27,840
draft then we have q log then version

137
00:06:27,840 --> 00:06:29,199
negotiation

138
00:06:29,199 --> 00:06:31,039
followed by quick ld

139
00:06:31,039 --> 00:06:32,400
and then we're on to like a new work

140
00:06:32,400 --> 00:06:33,440
section

141
00:06:33,440 --> 00:06:35,360
so we're going to focus here on uh

142
00:06:35,360 --> 00:06:37,600
multipath extension uh mary will be

143
00:06:37,600 --> 00:06:39,600
presenting on behalf of a few folks that

144
00:06:39,600 --> 00:06:41,120
have been working on that

145
00:06:41,120 --> 00:06:42,880
and had a side meeting a couple of weeks

146
00:06:42,880 --> 00:06:44,479
ago

147
00:06:44,479 --> 00:06:45,919
and that'll be the bulk of our time in

148
00:06:45,919 --> 00:06:48,000
that section and then and as the time

149
00:06:48,000 --> 00:06:50,000
permits um we'll look at some some of

150
00:06:50,000 --> 00:06:52,479
the things here like receive time stamps

151
00:06:52,479 --> 00:06:53,360
uh

152
00:06:53,360 --> 00:06:55,919
quick v next whatever that might be or

153
00:06:55,919 --> 00:07:00,160
the zero rtt bdp um so before we we get

154
00:07:00,160 --> 00:07:01,759
started on the agenda in earnest is

155
00:07:01,759 --> 00:07:03,840
there any bashing that anyone would like

156
00:07:03,840 --> 00:07:06,239
to do

157
00:07:12,080 --> 00:07:15,199
i don't see anyone in the queue or any

158
00:07:15,199 --> 00:07:16,400
comments

159
00:07:16,400 --> 00:07:17,759
so

160
00:07:17,759 --> 00:07:20,960
okay um we'll just proceed

161
00:07:20,960 --> 00:07:22,960
uh

162
00:07:22,960 --> 00:07:24,800
so i'll take take some some spotlight

163
00:07:24,800 --> 00:07:26,639
for the chairs here um some updates

164
00:07:26,639 --> 00:07:28,880
since the last meeting in terms of the

165
00:07:28,880 --> 00:07:31,199
work that this group has adopted and is

166
00:07:31,199 --> 00:07:34,080
trying to to complete um

167
00:07:34,080 --> 00:07:35,759
hb 3 and q pack in case anyone's

168
00:07:35,759 --> 00:07:37,120
wondering they're still in the rfc

169
00:07:37,120 --> 00:07:39,280
editor queue we're waiting

170
00:07:39,280 --> 00:07:42,160
um the work to happen in the http core

171
00:07:42,160 --> 00:07:43,199
drafts

172
00:07:43,199 --> 00:07:45,840
which effectively a dependency for for

173
00:07:45,840 --> 00:07:47,919
those two in a way

174
00:07:47,919 --> 00:07:48,879
um

175
00:07:48,879 --> 00:07:51,440
and uh they're making progress they're

176
00:07:51,440 --> 00:07:53,680
doing okay there's a whole cluster um if

177
00:07:53,680 --> 00:07:55,759
you're interested you can go and look at

178
00:07:55,759 --> 00:07:57,520
but we're effectively waiting they've

179
00:07:57,520 --> 00:08:00,160
been there a long time um if you go look

180
00:08:00,160 --> 00:08:01,759
they were submitted around february i

181
00:08:01,759 --> 00:08:04,000
believe so um

182
00:08:04,000 --> 00:08:05,199
we

183
00:08:05,199 --> 00:08:07,280
we're getting there slowly uh

184
00:08:07,280 --> 00:08:08,639
in case people aren't too familiar with

185
00:08:08,639 --> 00:08:10,639
the deployment strategy um if you recall

186
00:08:10,639 --> 00:08:13,280
a few months ago um as a group we we

187
00:08:13,280 --> 00:08:14,800
decided that

188
00:08:14,800 --> 00:08:18,080
people now that rsc 9000 was out which

189
00:08:18,080 --> 00:08:22,160
is a quick version one um that the http

190
00:08:22,160 --> 00:08:23,039
3

191
00:08:23,039 --> 00:08:26,720
alpn which is the labeled h3 um was

192
00:08:26,720 --> 00:08:27,759
allowed to

193
00:08:27,759 --> 00:08:29,199
be deployed on the internet and i

194
00:08:29,199 --> 00:08:30,720
believe we've seen some

195
00:08:30,720 --> 00:08:33,039
decent amount of um

196
00:08:33,039 --> 00:08:35,120
live deployments and interoperability on

197
00:08:35,120 --> 00:08:37,599
the public internet which is great so um

198
00:08:37,599 --> 00:08:40,799
i don't see those the specs um being in

199
00:08:40,799 --> 00:08:42,799
the rsc editor queue is

200
00:08:42,799 --> 00:08:45,600
preventing progress here um

201
00:08:45,600 --> 00:08:47,839
if anyone

202
00:08:47,839 --> 00:08:50,480
was um

203
00:08:50,480 --> 00:08:52,080
watching the mailing list

204
00:08:52,080 --> 00:08:54,320
so my issues have been identified um in

205
00:08:54,320 --> 00:08:56,640
the drafts while those things have been

206
00:08:56,640 --> 00:08:58,959
in the queue um they're kind of minor

207
00:08:58,959 --> 00:09:01,680
things um maybe edge cases but some of

208
00:09:01,680 --> 00:09:03,440
the resolutions were

209
00:09:03,440 --> 00:09:05,920
to normative text so a consensus call is

210
00:09:05,920 --> 00:09:08,240
still live i believe i need to check my

211
00:09:08,240 --> 00:09:11,040
dates um just on those uh for the

212
00:09:11,040 --> 00:09:13,279
working group uh at the request of our

213
00:09:13,279 --> 00:09:16,560
ad to make sure that um the proposals

214
00:09:16,560 --> 00:09:18,560
there that we're all happy with

215
00:09:18,560 --> 00:09:21,279
incorporating as as part of the auth 48

216
00:09:21,279 --> 00:09:24,080
changes that the editors will do so we

217
00:09:24,080 --> 00:09:25,839
we've seen a lot of good feedback on

218
00:09:25,839 --> 00:09:27,519
that if you haven't seen them please do

219
00:09:27,519 --> 00:09:29,279
check them out and let us know

220
00:09:29,279 --> 00:09:31,040
otherwise if we don't hear pushback

221
00:09:31,040 --> 00:09:33,279
we'll we'll direct people

222
00:09:33,279 --> 00:09:35,360
to to incorporate the changes as and

223
00:09:35,360 --> 00:09:37,360
when needed um

224
00:09:37,360 --> 00:09:39,120
the op strats the applicability and

225
00:09:39,120 --> 00:09:41,839
manageability or an ad review um so

226
00:09:41,839 --> 00:09:43,279
thank you for everyone for the the

227
00:09:43,279 --> 00:09:44,800
feedback during the various rounds of

228
00:09:44,800 --> 00:09:46,480
working group last call and the editors

229
00:09:46,480 --> 00:09:47,920
for um

230
00:09:47,920 --> 00:09:50,000
working with people on that to get it

231
00:09:50,000 --> 00:09:50,880
done

232
00:09:50,880 --> 00:09:52,720
that's appreciated

233
00:09:52,720 --> 00:09:54,880
the datagram draft also passed working

234
00:09:54,880 --> 00:09:56,560
group last call and that's also an ad

235
00:09:56,560 --> 00:09:58,000
review

236
00:09:58,000 --> 00:09:59,920
and the grease bit working group last

237
00:09:59,920 --> 00:10:01,279
call is

238
00:10:01,279 --> 00:10:03,519
completed we had some feedback um

239
00:10:03,519 --> 00:10:05,519
there's a few minor changes there so

240
00:10:05,519 --> 00:10:07,279
we're just waiting a new draft um and

241
00:10:07,279 --> 00:10:08,720
then we'll do our shepherd write up and

242
00:10:08,720 --> 00:10:10,880
pass that on to the ad so

243
00:10:10,880 --> 00:10:12,320
uh

244
00:10:12,320 --> 00:10:14,399
thank you and mine's just posted in the

245
00:10:14,399 --> 00:10:17,279
chat hill or having a date inbound

246
00:10:17,279 --> 00:10:18,430
brilliant um

247
00:10:18,430 --> 00:10:20,959
[Music]

248
00:10:20,959 --> 00:10:25,200
some related work uh sometimes it's it's

249
00:10:25,200 --> 00:10:27,760
easy to assume that the work that

250
00:10:27,760 --> 00:10:29,279
relates to crick all happens here and

251
00:10:29,279 --> 00:10:31,920
that's not true now that we are an rfc

252
00:10:31,920 --> 00:10:33,519
people are excited and they want to use

253
00:10:33,519 --> 00:10:36,480
this document all you know to be honest

254
00:10:36,480 --> 00:10:38,560
they've been excited for a long time so

255
00:10:38,560 --> 00:10:40,079
uh one of the things that did come to

256
00:10:40,079 --> 00:10:41,920
our attention around about in the itf

257
00:10:41,920 --> 00:10:44,079
was the dns over quick

258
00:10:44,079 --> 00:10:46,160
specification uh went to working group

259
00:10:46,160 --> 00:10:50,240
last call in for deprived and uh i think

260
00:10:50,240 --> 00:10:51,920
a few of us from this working group

261
00:10:51,920 --> 00:10:54,399
posted some comments um that have been

262
00:10:54,399 --> 00:10:55,680
uh

263
00:10:55,680 --> 00:10:59,200
incorporated um or proposals for

264
00:10:59,200 --> 00:11:00,320
addressing those comments have been

265
00:11:00,320 --> 00:11:01,760
incorporated

266
00:11:01,760 --> 00:11:03,200
so

267
00:11:03,200 --> 00:11:06,000
that's good

268
00:11:06,000 --> 00:11:07,680
at the itf we have the mask working

269
00:11:07,680 --> 00:11:09,440
group who met on monday in the web trans

270
00:11:09,440 --> 00:11:10,959
working group and on tuesday those

271
00:11:10,959 --> 00:11:12,959
things are related

272
00:11:12,959 --> 00:11:15,279
there was a side meeting for media over

273
00:11:15,279 --> 00:11:17,360
quick which is non-working group

274
00:11:17,360 --> 00:11:20,640
that was formed i see in the chat that i

275
00:11:20,640 --> 00:11:22,959
have the dates wrong so i apologize for

276
00:11:22,959 --> 00:11:25,920
that we had a meeting yesterday um

277
00:11:25,920 --> 00:11:27,600
jonathan just jumped in the queue and

278
00:11:27,600 --> 00:11:29,519
then left so i think he was trying to

279
00:11:29,519 --> 00:11:31,200
draw my attention to that um i hope i've

280
00:11:31,200 --> 00:11:33,920
addressed the points um this uh all of

281
00:11:33,920 --> 00:11:36,560
the side meetings uh in the ietf

282
00:11:36,560 --> 00:11:39,360
sidebeings calendar so uh please check

283
00:11:39,360 --> 00:11:41,920
that for the actual correct date and

284
00:11:41,920 --> 00:11:43,920
time and

285
00:11:43,920 --> 00:11:45,760
uh actual joining instructions so

286
00:11:45,760 --> 00:11:47,440
there'll be a link to

287
00:11:47,440 --> 00:11:49,360
it was zoomed yesterday

288
00:11:49,360 --> 00:11:50,160
so

289
00:11:50,160 --> 00:11:53,680
that isn't you know necessarily um

290
00:11:53,680 --> 00:11:55,839
strictly anything on quick we're still

291
00:11:55,839 --> 00:11:57,600
trying to figure out things in that

292
00:11:57,600 --> 00:12:00,480
group that may be you know what are the

293
00:12:00,480 --> 00:12:02,880
requirements for using quick versus

294
00:12:02,880 --> 00:12:04,800
modifying quick and trying to understand

295
00:12:04,800 --> 00:12:06,320
if any work needs to come back here or

296
00:12:06,320 --> 00:12:09,279
not so anyone interested in that

297
00:12:09,279 --> 00:12:11,200
there's some healthy discussion there

298
00:12:11,200 --> 00:12:13,600
it's kind of interesting

299
00:12:13,600 --> 00:12:15,920
oh and robin also mentioned uh there's a

300
00:12:15,920 --> 00:12:19,519
aside meeting today um about openssl and

301
00:12:19,519 --> 00:12:20,800
it's quick

302
00:12:20,800 --> 00:12:26,079
support um for uh doing stuff so um if

303
00:12:26,079 --> 00:12:27,440
if anyone's interested in that again

304
00:12:27,440 --> 00:12:29,440
check out the the side meeting uh

305
00:12:29,440 --> 00:12:31,680
calendar because

306
00:12:31,680 --> 00:12:35,680
all the details will be there um

307
00:12:37,120 --> 00:12:39,360
and then talk about new work uh just to

308
00:12:39,360 --> 00:12:41,120
remind people uh this shouldn't be new

309
00:12:41,120 --> 00:12:42,800
information but when it comes to

310
00:12:42,800 --> 00:12:45,040
adopting new work items um we have a

311
00:12:45,040 --> 00:12:47,279
charter that's up on the data tracker um

312
00:12:47,279 --> 00:12:49,200
and just to kind of summarize that the

313
00:12:49,200 --> 00:12:51,040
working group is the focal point for any

314
00:12:51,040 --> 00:12:53,600
quick related work in the itf um

315
00:12:53,600 --> 00:12:55,760
the focus areas are kind of three of the

316
00:12:55,760 --> 00:12:57,519
maintenance and evolution of the quick

317
00:12:57,519 --> 00:12:59,760
specs as and when we need to to do

318
00:12:59,760 --> 00:13:00,959
things that

319
00:13:00,959 --> 00:13:02,240
you know

320
00:13:02,240 --> 00:13:04,800
improve upon or fix or

321
00:13:04,800 --> 00:13:06,560
iterate upon drafts that have been

322
00:13:06,560 --> 00:13:09,440
adopted items and and been published uh

323
00:13:09,440 --> 00:13:11,440
so that should be fairly obvious um

324
00:13:11,440 --> 00:13:12,560
other things about supporting the

325
00:13:12,560 --> 00:13:14,560
deployability which relates to drafts

326
00:13:14,560 --> 00:13:15,360
like

327
00:13:15,360 --> 00:13:18,160
ops strats or queue log or low balances

328
00:13:18,160 --> 00:13:20,760
those level of things so we can support

329
00:13:20,760 --> 00:13:24,399
non-protocol specific work items too if

330
00:13:24,399 --> 00:13:26,399
they make sense for us to do things

331
00:13:26,399 --> 00:13:28,959
and then new extensions to quick so

332
00:13:28,959 --> 00:13:31,120
datagram's an example of an extension

333
00:13:31,120 --> 00:13:32,240
and

334
00:13:32,240 --> 00:13:34,560
we've got another one coming up later in

335
00:13:34,560 --> 00:13:36,639
this session um

336
00:13:36,639 --> 00:13:38,959
but as i mentioned dns of a quick is an

337
00:13:38,959 --> 00:13:41,120
example of how an application protocol

338
00:13:41,120 --> 00:13:43,120
could use quick and that work was done

339
00:13:43,120 --> 00:13:45,519
outside our working group um it could be

340
00:13:45,519 --> 00:13:47,360
done here if we really need it if that

341
00:13:47,360 --> 00:13:49,199
suitable home couldn't be found but i

342
00:13:49,199 --> 00:13:51,760
would hope that most most of the

343
00:13:51,760 --> 00:13:53,279
discussion in such specifications

344
00:13:53,279 --> 00:13:56,000
relates to the application protocol

345
00:13:56,000 --> 00:13:57,920
and that we have an awareness of the

346
00:13:57,920 --> 00:14:00,240
work that's happening there so we can on

347
00:14:00,240 --> 00:14:01,440
you know people from this working group

348
00:14:01,440 --> 00:14:02,480
can go and

349
00:14:02,480 --> 00:14:04,560
review with a with their quick head on

350
00:14:04,560 --> 00:14:07,839
and maybe give some feedback about um

351
00:14:07,839 --> 00:14:09,600
those aspects of things

352
00:14:09,600 --> 00:14:10,880
and then defining new congestion

353
00:14:10,880 --> 00:14:14,079
controls is outscope so

354
00:14:14,079 --> 00:14:15,760
please don't come with those things

355
00:14:15,760 --> 00:14:16,639
because we'll have to point you

356
00:14:16,639 --> 00:14:18,959
somewhere else uh but specifically to

357
00:14:18,959 --> 00:14:21,519
this session um and

358
00:14:21,519 --> 00:14:23,519
uh yeah we we're going to talk about

359
00:14:23,519 --> 00:14:25,120
multipath quick extensions from the

360
00:14:25,120 --> 00:14:27,440
background here uh without um trying to

361
00:14:27,440 --> 00:14:28,959
preempt too much of what mirror talk

362
00:14:28,959 --> 00:14:31,440
about later is that we had a interim

363
00:14:31,440 --> 00:14:35,519
focused on multi-path like a year ago um

364
00:14:35,519 --> 00:14:36,399
which

365
00:14:36,399 --> 00:14:37,680
you know

366
00:14:37,680 --> 00:14:39,600
multipath was in scope for the initial

367
00:14:39,600 --> 00:14:41,040
charter that this working group had and

368
00:14:41,040 --> 00:14:43,680
we d scoped it um into into the current

369
00:14:43,680 --> 00:14:46,079
form that we have today um and there was

370
00:14:46,079 --> 00:14:48,480
a lot of i think a lot of ideas around

371
00:14:48,480 --> 00:14:50,160
what multipath could be what different

372
00:14:50,160 --> 00:14:52,399
problems they were trying to solve um

373
00:14:52,399 --> 00:14:54,800
and so we had that meeting last year

374
00:14:54,800 --> 00:14:56,399
which i think

375
00:14:56,399 --> 00:14:59,199
helped but didn't get us into the right

376
00:14:59,199 --> 00:15:00,800
position and we still had a lot of work

377
00:15:00,800 --> 00:15:04,320
on z has gone on we we've we've cleared

378
00:15:04,320 --> 00:15:05,680
things from our

379
00:15:05,680 --> 00:15:07,600
our agenda and we have some more time

380
00:15:07,600 --> 00:15:09,120
but we also have a clear idea of the

381
00:15:09,120 --> 00:15:11,120
problems um and people have come

382
00:15:11,120 --> 00:15:13,519
together for a more unified proposal so

383
00:15:13,519 --> 00:15:14,959
um

384
00:15:14,959 --> 00:15:17,279
we'll see how the working group

385
00:15:17,279 --> 00:15:20,399
um think on that and we'll be taking

386
00:15:20,399 --> 00:15:21,760
uh the chairs will be taking an

387
00:15:21,760 --> 00:15:23,839
assessment about whether we think that

388
00:15:23,839 --> 00:15:27,040
work is is worth adopting in its current

389
00:15:27,040 --> 00:15:28,800
form um so i want to

390
00:15:28,800 --> 00:15:30,399
ask people to keep that in mind through

391
00:15:30,399 --> 00:15:32,320
the presentation um because that's a

392
00:15:32,320 --> 00:15:33,759
question we'll be asking at the end of

393
00:15:33,759 --> 00:15:34,959
it

394
00:15:34,959 --> 00:15:38,320
so that's the end of of the quick

395
00:15:38,320 --> 00:15:40,720
chairs session um

396
00:15:40,720 --> 00:15:43,040
next step on the agenda

397
00:15:43,040 --> 00:15:44,720
is

398
00:15:44,720 --> 00:15:48,560
ack frequency um so i penciled in jonah

399
00:15:48,560 --> 00:15:50,560
to present yeah but i guess maybe it

400
00:15:50,560 --> 00:15:54,320
might be ian too um which one of you is

401
00:15:54,320 --> 00:15:56,480
it

402
00:16:02,320 --> 00:16:05,040
let me pull up this no

403
00:16:05,040 --> 00:16:09,399
let me stop sharing my slides

404
00:16:17,839 --> 00:16:19,519
ian are you

405
00:16:19,519 --> 00:16:23,839
you willing and able to present

406
00:16:33,120 --> 00:16:36,920
no no response

407
00:16:40,480 --> 00:16:42,720
all right

408
00:16:47,759 --> 00:16:50,320
okay should we should we skip to another

409
00:16:50,320 --> 00:16:53,360
session and maybe come back to that one

410
00:16:53,360 --> 00:16:55,120
uh let's do that i'll chat with you in

411
00:16:55,120 --> 00:16:56,800
the back um but

412
00:16:56,800 --> 00:16:58,240
if he's not able to run obviously i'm

413
00:16:58,240 --> 00:16:59,839
happy to do it

414
00:16:59,839 --> 00:17:02,000
yeah just a little bit noisy for me oh

415
00:17:02,000 --> 00:17:03,279
there he

416
00:17:03,279 --> 00:17:05,679
here he is uh

417
00:17:05,679 --> 00:17:07,359
i'm sorry about that i did my better

418
00:17:07,359 --> 00:17:10,160
lunch um

419
00:17:10,160 --> 00:17:13,360
uh let me get my headphones on

420
00:17:13,839 --> 00:17:15,439
would you like us to drive the slides

421
00:17:15,439 --> 00:17:17,359
ian or you find to do that yourself yeah

422
00:17:17,359 --> 00:17:20,400
i can actually yeah yeah let me just

423
00:17:20,400 --> 00:17:22,480
i don't know if you're experiencing echo

424
00:17:22,480 --> 00:17:23,760
but usually you do

425
00:17:23,760 --> 00:17:26,160
um

426
00:17:27,199 --> 00:17:30,199
cool

427
00:17:34,080 --> 00:17:36,559
i just asked this year so okay great

428
00:17:36,559 --> 00:17:38,879
um

429
00:17:43,919 --> 00:17:47,600
there we go cool um so uh

430
00:17:47,600 --> 00:17:49,600
yeah we're we're kind of hoping to wrap

431
00:17:49,600 --> 00:17:51,039
up the act frequency draft in a

432
00:17:51,039 --> 00:17:53,679
relatively near future there's one

433
00:17:53,679 --> 00:17:55,840
fairly substantial design issue that's

434
00:17:55,840 --> 00:17:57,280
outstanding that i'm going to highlight

435
00:17:57,280 --> 00:17:59,520
um in these slides but uh first i'm

436
00:17:59,520 --> 00:18:00,799
going to start with kind of an overview

437
00:18:00,799 --> 00:18:02,320
of where

438
00:18:02,320 --> 00:18:05,120
the frame is at and um

439
00:18:05,120 --> 00:18:06,480
you know

440
00:18:06,480 --> 00:18:08,160
and talk through that and if there are

441
00:18:08,160 --> 00:18:09,760
any questions obviously feel free to

442
00:18:09,760 --> 00:18:11,919
interject

443
00:18:11,919 --> 00:18:14,559
um so here's the current frame format um

444
00:18:14,559 --> 00:18:16,640
obviously this a type there's a sequence

445
00:18:16,640 --> 00:18:18,240
number so if you receive them out of

446
00:18:18,240 --> 00:18:19,120
order

447
00:18:19,120 --> 00:18:22,160
this is allowed still to retransmit any

448
00:18:22,160 --> 00:18:24,799
frame you would like verbatim

449
00:18:24,799 --> 00:18:27,039
um is possible that a

450
00:18:27,039 --> 00:18:28,480
sender that does this

451
00:18:28,480 --> 00:18:30,880
uh could receive a frequency that

452
00:18:30,880 --> 00:18:32,880
arrives out of order so that fixes that

453
00:18:32,880 --> 00:18:33,919
problem

454
00:18:33,919 --> 00:18:35,679
the accolading threshold of course is

455
00:18:35,679 --> 00:18:38,240
the number of packets that um

456
00:18:38,240 --> 00:18:39,600
technically it's not the number the

457
00:18:39,600 --> 00:18:41,520
maximum number of active listing packets

458
00:18:41,520 --> 00:18:42,880
that the recipient of this frame can

459
00:18:42,880 --> 00:18:45,360
receive prior or before sending an

460
00:18:45,360 --> 00:18:46,480
acknowledgement

461
00:18:46,480 --> 00:18:47,280
um

462
00:18:47,280 --> 00:18:48,559
so

463
00:18:48,559 --> 00:18:50,240
the the key point is that that makes

464
00:18:50,240 --> 00:18:52,160
zero a valid

465
00:18:52,160 --> 00:18:52,960
um

466
00:18:52,960 --> 00:18:56,240
valid value and such so um just make

467
00:18:56,240 --> 00:18:57,600
sure that you you kind of get the

468
00:18:57,600 --> 00:18:59,440
wording on that correctly um and it's

469
00:18:59,440 --> 00:19:00,799
also the wording's been tweaked around a

470
00:19:00,799 --> 00:19:01,679
little bit

471
00:19:01,679 --> 00:19:02,720
um

472
00:19:02,720 --> 00:19:04,880
relatively recently uh request max sac

473
00:19:04,880 --> 00:19:05,919
delay

474
00:19:05,919 --> 00:19:07,919
um so that's the value you'd like the

475
00:19:07,919 --> 00:19:10,160
peer to delay an acknowled an immediate

476
00:19:10,160 --> 00:19:12,000
acknowledgement for sorry delay an

477
00:19:12,000 --> 00:19:13,520
acknowledgement for upon and perceiving

478
00:19:13,520 --> 00:19:15,200
an app listening packet

479
00:19:15,200 --> 00:19:16,640
um immediate acknowledgements are

480
00:19:16,640 --> 00:19:18,000
totally different

481
00:19:18,000 --> 00:19:18,880
uh

482
00:19:18,880 --> 00:19:21,440
uh yes sorry i need to do something

483
00:19:21,440 --> 00:19:24,960
later thanks sir sir um

484
00:19:24,960 --> 00:19:28,160
the uh the ignorancy field um is

485
00:19:28,160 --> 00:19:31,280
ignoring congestion experience um

486
00:19:31,280 --> 00:19:33,280
this was added both as a result of

487
00:19:33,280 --> 00:19:35,120
conversations about how one might use

488
00:19:35,120 --> 00:19:37,039
ecn in different or ecn marking in

489
00:19:37,039 --> 00:19:39,919
different contexts besides

490
00:19:39,919 --> 00:19:41,520
the the two that are current kind of

491
00:19:41,520 --> 00:19:44,559
currently kind of tcp style and class

492
00:19:44,559 --> 00:19:46,160
and qcn

493
00:19:46,160 --> 00:19:48,240
and then the

494
00:19:48,240 --> 00:19:51,039
ignore order is basically the same

495
00:19:51,039 --> 00:19:53,360
the same concept in both cases you're

496
00:19:53,360 --> 00:19:55,360
you're kind of ignoring a signal that

497
00:19:55,360 --> 00:19:56,720
may or may not be indicative of

498
00:19:56,720 --> 00:19:58,080
congestion

499
00:19:58,080 --> 00:20:00,799
um for a longer period of time in order

500
00:20:00,799 --> 00:20:02,880
to you can have your video or multiple

501
00:20:02,880 --> 00:20:04,480
uh packets

502
00:20:04,480 --> 00:20:05,520
um

503
00:20:05,520 --> 00:20:06,720
so uh

504
00:20:06,720 --> 00:20:08,799
we did add some caveats uh there about

505
00:20:08,799 --> 00:20:10,640
like the safety of these and how you

506
00:20:10,640 --> 00:20:13,679
should really be using these and and um

507
00:20:13,679 --> 00:20:15,520
those are in the draft now

508
00:20:15,520 --> 00:20:16,400
so

509
00:20:16,400 --> 00:20:19,120
uh next slides

510
00:20:19,280 --> 00:20:21,039
um so

511
00:20:21,039 --> 00:20:22,480
the the design issue that came up

512
00:20:22,480 --> 00:20:24,240
recently was the latency detect packet

513
00:20:24,240 --> 00:20:28,159
loss um so kazuo pointed this out and

514
00:20:28,159 --> 00:20:29,600
um this is somewhat related to a

515
00:20:29,600 --> 00:20:32,320
previous issue i felt but i think kazoo

516
00:20:32,320 --> 00:20:34,480
is both freezing and and state problem

517
00:20:34,480 --> 00:20:36,640
statement were much better than mine was

518
00:20:36,640 --> 00:20:37,919
um

519
00:20:37,919 --> 00:20:39,919
and so the issue is that one act is sent

520
00:20:39,919 --> 00:20:42,240
immediately today just like with p1

521
00:20:42,240 --> 00:20:44,240
um but after that the next act will not

522
00:20:44,240 --> 00:20:46,960
be sent uh until the eliciting threshold

523
00:20:46,960 --> 00:20:49,360
of the act layer hit

524
00:20:49,360 --> 00:20:52,000
and there's a lot of situations where

525
00:20:52,000 --> 00:20:54,640
that might uh slow down the packet

526
00:20:54,640 --> 00:20:55,919
threshold

527
00:20:55,919 --> 00:20:59,039
uh lost detection um so

528
00:20:59,039 --> 00:21:01,200
the kind of example is you have a drop

529
00:21:01,200 --> 00:21:03,120
you send an immediate act

530
00:21:03,120 --> 00:21:04,880
um and then you don't send another act

531
00:21:04,880 --> 00:21:06,880
for say 10 or 20 packets

532
00:21:06,880 --> 00:21:08,799
um it's it's pretty easy to hit a

533
00:21:08,799 --> 00:21:10,880
situation where you know if you send

534
00:21:10,880 --> 00:21:12,720
another act

535
00:21:12,720 --> 00:21:14,559
you know two packets later you could

536
00:21:14,559 --> 00:21:15,919
have immediately declared a loss and

537
00:21:15,919 --> 00:21:17,440
moved on but instead you're waiting say

538
00:21:17,440 --> 00:21:19,120
like a quarter rtt

539
00:21:19,120 --> 00:21:22,320
um rtt for the the time threshold to hit

540
00:21:22,320 --> 00:21:23,120
um

541
00:21:23,120 --> 00:21:24,720
in data centers this kind of could be

542
00:21:24,720 --> 00:21:26,720
worse unfortunately because data centers

543
00:21:26,720 --> 00:21:28,799
tend to have alarm granularities which

544
00:21:28,799 --> 00:21:30,000
are not amazing

545
00:21:30,000 --> 00:21:31,360
and commonly the

546
00:21:31,360 --> 00:21:32,720
um the thresholds we're talking about

547
00:21:32,720 --> 00:21:34,960
according to t and eight that are tv are

548
00:21:34,960 --> 00:21:36,720
literally unachievable in like a micro

549
00:21:36,720 --> 00:21:37,679
center

550
00:21:37,679 --> 00:21:40,080
i'm sorry a micro

551
00:21:40,080 --> 00:21:42,400
micro second scale data center

552
00:21:42,400 --> 00:21:44,400
networking environment so this this

553
00:21:44,400 --> 00:21:45,679
probably is actually a worse problem in

554
00:21:45,679 --> 00:21:46,960
a data center than the public internet

555
00:21:46,960 --> 00:21:49,440
but anyway that's kind of the outline

556
00:21:49,440 --> 00:21:51,600
um of the problem and the most important

557
00:21:51,600 --> 00:21:53,039
conclusion is that loss detection

558
00:21:53,039 --> 00:21:55,360
latency has the potential to be worse

559
00:21:55,360 --> 00:21:59,799
than in quick v1 um

560
00:22:00,400 --> 00:22:02,640
so the the proposal here is to

561
00:22:02,640 --> 00:22:04,799
communicate the reordering threshold to

562
00:22:04,799 --> 00:22:06,480
the receiver instead of this ignore

563
00:22:06,480 --> 00:22:07,760
order

564
00:22:07,760 --> 00:22:10,960
that we we have right now

565
00:22:10,960 --> 00:22:13,039
and the algorithm comes down to that the

566
00:22:13,039 --> 00:22:14,960
receiver needs to send an immediate

567
00:22:14,960 --> 00:22:16,240
acknowledgement

568
00:22:16,240 --> 00:22:19,760
uh whenever they're missing packets um

569
00:22:19,760 --> 00:22:21,760
somewhere between the

570
00:22:21,760 --> 00:22:23,520
largest acknowledged value that has been

571
00:22:23,520 --> 00:22:25,440
sent in a previous acknowledgement

572
00:22:25,440 --> 00:22:27,679
mastery ordering threshold and the

573
00:22:27,679 --> 00:22:29,840
largest acknowledged in the

574
00:22:29,840 --> 00:22:31,039
that you know currently has been

575
00:22:31,039 --> 00:22:32,720
received at this moment

576
00:22:32,720 --> 00:22:35,200
um from a more recently received packet

577
00:22:35,200 --> 00:22:37,840
um minus the reordering threshold

578
00:22:37,840 --> 00:22:39,520
um so that guarantees that if they're

579
00:22:39,520 --> 00:22:41,679
basically any packet in that range that

580
00:22:41,679 --> 00:22:42,880
is missing

581
00:22:42,880 --> 00:22:44,720
um assuming that the peer is correctly

582
00:22:44,720 --> 00:22:46,720
communicated their reiterating threshold

583
00:22:46,720 --> 00:22:48,640
to you um that means that they can

584
00:22:48,640 --> 00:22:50,080
immediately declare a loss the moment

585
00:22:50,080 --> 00:22:51,280
they receive your

586
00:22:51,280 --> 00:22:53,200
immediate acknowledgement

587
00:22:53,200 --> 00:22:55,520
um so the result is that it reduces the

588
00:22:55,520 --> 00:22:56,799
number of acts

589
00:22:56,799 --> 00:22:58,480
when people packets are received out of

590
00:22:58,480 --> 00:23:00,720
order when compared to quickv1

591
00:23:00,720 --> 00:23:02,880
uh while also improving uh the loss

592
00:23:02,880 --> 00:23:05,039
detection latency versus quick v1

593
00:23:05,039 --> 00:23:07,360
because there's a number of cases now

594
00:23:07,360 --> 00:23:08,880
before i put feet one because you act

595
00:23:08,880 --> 00:23:10,880
every other packet it was possible they

596
00:23:10,880 --> 00:23:12,640
had a circumstance where

597
00:23:12,640 --> 00:23:14,640
um you you

598
00:23:14,640 --> 00:23:16,159
didn't receive that final packet

599
00:23:16,159 --> 00:23:18,240
threshold act say because the

600
00:23:18,240 --> 00:23:20,480
um you know it was

601
00:23:20,480 --> 00:23:23,360
two packets later not three or you know

602
00:23:23,360 --> 00:23:25,360
you kind of an off by one error um and

603
00:23:25,360 --> 00:23:27,200
it would increase loss detection latency

604
00:23:27,200 --> 00:23:29,840
or slightly uh versus this approach

605
00:23:29,840 --> 00:23:31,360
um so ideally this gives you the best of

606
00:23:31,360 --> 00:23:34,559
both worlds um the major

607
00:23:34,559 --> 00:23:36,400
you know the major negative is it

608
00:23:36,400 --> 00:23:38,799
definitely increases implementation cost

609
00:23:38,799 --> 00:23:40,559
by a slight margin uh because you have

610
00:23:40,559 --> 00:23:42,080
to implement this this algorithm right

611
00:23:42,080 --> 00:23:42,799
here

612
00:23:42,799 --> 00:23:45,120
um

613
00:23:45,360 --> 00:23:46,400
so yeah

614
00:23:46,400 --> 00:23:47,520
so that's

615
00:23:47,520 --> 00:23:50,640
that's the item to discuss um

616
00:23:50,640 --> 00:23:52,720
do people have thoughts this pr has been

617
00:23:52,720 --> 00:23:54,000
kind of out there for a while and as

618
00:23:54,000 --> 00:23:55,360
there's the issue

619
00:23:55,360 --> 00:23:56,159
um

620
00:23:56,159 --> 00:24:00,600
yeah christian christian please go

621
00:24:05,039 --> 00:24:08,158
oh i can't hear you christian

622
00:24:14,720 --> 00:24:18,159
um i still cannot

623
00:24:18,159 --> 00:24:20,640
hear you

624
00:24:22,640 --> 00:24:24,640
should we skip can you hear me now

625
00:24:24,640 --> 00:24:26,640
can you can you hear me now yeah okay

626
00:24:26,640 --> 00:24:27,919
that's a

627
00:24:27,919 --> 00:24:29,679
weirdness with the microphone too many

628
00:24:29,679 --> 00:24:30,880
buttons

629
00:24:30,880 --> 00:24:32,799
um

630
00:24:32,799 --> 00:24:34,240
yeah i'm not sure i mean you're

631
00:24:34,240 --> 00:24:37,760
proposing to add a weirdo in threshold

632
00:24:37,760 --> 00:24:40,480
based on packet counts

633
00:24:40,480 --> 00:24:41,520
and

634
00:24:41,520 --> 00:24:44,000
i am not sure that's the right tool the

635
00:24:44,000 --> 00:24:46,080
the reason i say that is that we have

636
00:24:46,080 --> 00:24:47,679
tried a lot of that

637
00:24:47,679 --> 00:24:50,720
we are doing happens a lot in some kind

638
00:24:50,720 --> 00:24:53,279
of multiplexing scenarios

639
00:24:53,279 --> 00:24:56,000
especially if the network is doing equal

640
00:24:56,000 --> 00:24:57,600
cost multiplexing

641
00:24:57,600 --> 00:25:00,480
equal cost load balancing

642
00:25:00,480 --> 00:25:02,640
and

643
00:25:02,640 --> 00:25:04,799
and in that case it seems much more

644
00:25:04,799 --> 00:25:08,000
efficient to use delays than using

645
00:25:08,000 --> 00:25:10,799
packet counts

646
00:25:10,880 --> 00:25:14,159
so there is that

647
00:25:14,159 --> 00:25:15,840
i would agree there are circumstances

648
00:25:15,840 --> 00:25:17,279
where this is

649
00:25:17,279 --> 00:25:20,159
not actually a helpful mechanism um and

650
00:25:20,159 --> 00:25:22,799
so we did maintain the existing kind of

651
00:25:22,799 --> 00:25:24,880
ignore order functionality

652
00:25:24,880 --> 00:25:26,480
if you send a reordering threshold of

653
00:25:26,480 --> 00:25:29,039
zero basically means the existing order

654
00:25:29,039 --> 00:25:31,360
functionality um

655
00:25:31,360 --> 00:25:33,200
yeah i think it it really depends on the

656
00:25:33,200 --> 00:25:34,799
circumstance

657
00:25:34,799 --> 00:25:37,039
um so this i guess is really about

658
00:25:37,039 --> 00:25:39,200
giving the sender

659
00:25:39,200 --> 00:25:41,200
which as described in

660
00:25:41,200 --> 00:25:42,799
the recovery draft the last detection

661
00:25:42,799 --> 00:25:44,559
congestion total draft

662
00:25:44,559 --> 00:25:46,640
um there there are two essential

663
00:25:46,640 --> 00:25:48,159
mechanisms for declaring loss there

664
00:25:48,159 --> 00:25:50,080
right one is reiterating threshold

665
00:25:50,080 --> 00:25:52,240
impact accounts and one is in time and

666
00:25:52,240 --> 00:25:55,200
so this is giving the sender the

667
00:25:55,200 --> 00:25:58,240
maximum number of tools to express

668
00:25:58,240 --> 00:26:00,320
um sort of those two

669
00:26:00,320 --> 00:26:03,279
mechanisms between the the ipad and the

670
00:26:03,279 --> 00:26:04,799
rendering threshold but but you're right

671
00:26:04,799 --> 00:26:08,000
that this may not always be applicable

672
00:26:08,000 --> 00:26:10,480
well no i i think that you're you you're

673
00:26:10,480 --> 00:26:12,240
using your you're thinking of the act

674
00:26:12,240 --> 00:26:13,360
delay

675
00:26:13,360 --> 00:26:16,480
but the act delay as as two functions

676
00:26:16,480 --> 00:26:17,840
there

677
00:26:17,840 --> 00:26:19,679
one of the aggregate function is the

678
00:26:19,679 --> 00:26:21,919
passing of x

679
00:26:21,919 --> 00:26:24,000
as i said i don't want to receive ads

680
00:26:24,000 --> 00:26:26,799
more than 10 milliseconds

681
00:26:26,799 --> 00:26:30,000
apart if everything is working fine

682
00:26:30,000 --> 00:26:32,159
what you're looking at here is a

683
00:26:32,159 --> 00:26:34,000
secondary mechanism

684
00:26:34,000 --> 00:26:35,120
to say

685
00:26:35,120 --> 00:26:37,840
please fire quickly if something seems

686
00:26:37,840 --> 00:26:39,919
wrong

687
00:26:39,919 --> 00:26:42,720
now something seems wrong for you can be

688
00:26:42,720 --> 00:26:45,520
expressed either as

689
00:26:45,520 --> 00:26:48,799
i am observing losses i am serving holes

690
00:26:48,799 --> 00:26:51,520
in the packet sequence numbers

691
00:26:51,520 --> 00:26:53,440
or

692
00:26:53,440 --> 00:26:54,320
i

693
00:26:54,320 --> 00:26:55,919
there is some

694
00:26:55,919 --> 00:26:58,960
some also mechanism now

695
00:26:58,960 --> 00:27:01,360
the packet sequence number is something

696
00:27:01,360 --> 00:27:05,120
which is very hard to use in practice

697
00:27:05,120 --> 00:27:06,400
because

698
00:27:06,400 --> 00:27:09,200
first i mean the the size of the loss in

699
00:27:09,200 --> 00:27:11,120
the packet sequence number vary with the

700
00:27:11,120 --> 00:27:13,039
conjugation window

701
00:27:13,039 --> 00:27:15,120
and second the

702
00:27:15,120 --> 00:27:17,520
it also depends on things like

703
00:27:17,520 --> 00:27:21,440
numbers keeping by the sender

704
00:27:21,440 --> 00:27:22,640
and so

705
00:27:22,640 --> 00:27:24,320
what you have there you have a primary

706
00:27:24,320 --> 00:27:25,679
arc delay

707
00:27:25,679 --> 00:27:28,480
you might want to have an acquiring

708
00:27:28,480 --> 00:27:32,080
delay or something like that

709
00:27:33,200 --> 00:27:35,200
yeah that's that's an interesting point

710
00:27:35,200 --> 00:27:36,240
um

711
00:27:36,240 --> 00:27:38,080
you are right that i'm mentally kind of

712
00:27:38,080 --> 00:27:40,159
conflating the two as being sufficiently

713
00:27:40,159 --> 00:27:41,760
similar to

714
00:27:41,760 --> 00:27:43,840
to serve both purposes and you're right

715
00:27:43,840 --> 00:27:44,880
that it's possible they're not

716
00:27:44,880 --> 00:27:46,559
sufficiently similar

717
00:27:46,559 --> 00:27:47,440
um

718
00:27:47,440 --> 00:27:49,440
but

719
00:27:49,440 --> 00:27:51,200
yeah

720
00:27:51,200 --> 00:27:53,120
okay okay i don't know johnny do you

721
00:27:53,120 --> 00:27:54,720
want to go next or do you should we let

722
00:27:54,720 --> 00:27:57,120
the queue go and have martin go is your

723
00:27:57,120 --> 00:27:58,559
response directly your response to the

724
00:27:58,559 --> 00:28:00,960
christian or john

725
00:28:00,960 --> 00:28:02,960
if it's all right i mean i i think i

726
00:28:02,960 --> 00:28:04,960
don't i don't quite understand

727
00:28:04,960 --> 00:28:07,760
the issue that christine's having

728
00:28:07,760 --> 00:28:09,120
um

729
00:28:09,120 --> 00:28:10,720
at high level basically packet threshold

730
00:28:10,720 --> 00:28:12,640
is already there

731
00:28:12,640 --> 00:28:13,919
and

732
00:28:13,919 --> 00:28:16,159
the problem with this particular with

733
00:28:16,159 --> 00:28:17,520
with the

734
00:28:17,520 --> 00:28:18,960
with the act delays that

735
00:28:18,960 --> 00:28:21,039
we effectively did not have packet to

736
00:28:21,039 --> 00:28:23,279
show lost detection anymore

737
00:28:23,279 --> 00:28:25,279
and what this proposal does is it brings

738
00:28:25,279 --> 00:28:26,880
it back

739
00:28:26,880 --> 00:28:27,600
so

740
00:28:27,600 --> 00:28:29,520
it's not they were bringing a new new

741
00:28:29,520 --> 00:28:31,520
mechanism here we are simply reinstating

742
00:28:31,520 --> 00:28:33,360
a mechanism that we lost

743
00:28:33,360 --> 00:28:36,799
because of this extension

744
00:28:37,200 --> 00:28:38,480
does that make sense to your christian

745
00:28:38,480 --> 00:28:40,559
i'm not i'm not quite maybe i mean it's

746
00:28:40,559 --> 00:28:42,080
not saying we'll have to discuss this on

747
00:28:42,080 --> 00:28:45,120
the on the issue uh and others just

748
00:28:45,120 --> 00:28:47,360
bringing it up

749
00:28:47,360 --> 00:28:48,799
yeah we should we should have that

750
00:28:48,799 --> 00:28:51,920
discussion on on this on

751
00:28:51,920 --> 00:28:54,960
[Music]

752
00:28:54,960 --> 00:28:57,520
because i mean if we go back and forth i

753
00:28:57,520 --> 00:28:59,440
mean trying to explain that verbally

754
00:28:59,440 --> 00:29:01,039
it's gonna be long yeah and you've got

755
00:29:01,039 --> 00:29:02,559
like four and a half minutes to go here

756
00:29:02,559 --> 00:29:03,279
so

757
00:29:03,279 --> 00:29:05,200
um we're happy to have this discussion

758
00:29:05,200 --> 00:29:06,640
on the issue about how important it is

759
00:29:06,640 --> 00:29:08,559
but please look at 96

760
00:29:08,559 --> 00:29:12,760
and we can talk about it then

761
00:29:13,360 --> 00:29:14,880
okay that makes sense to me especially

762
00:29:14,880 --> 00:29:17,760
given our time martin

763
00:29:20,799 --> 00:29:23,039
okay so

764
00:29:23,039 --> 00:29:24,000
wherever

765
00:29:24,000 --> 00:29:25,200
um

766
00:29:25,200 --> 00:29:28,320
i i think maybe i can understand what

767
00:29:28,320 --> 00:29:30,000
you're trying to do i'm not sure about

768
00:29:30,000 --> 00:29:32,640
the first subtraction here i'd like a

769
00:29:32,640 --> 00:29:33,760
picture

770
00:29:33,760 --> 00:29:35,840
because i'm not smart enough to do this

771
00:29:35,840 --> 00:29:37,360
the purpose of this discussion was so

772
00:29:37,360 --> 00:29:38,640
that people could understand what's

773
00:29:38,640 --> 00:29:39,679
going on

774
00:29:39,679 --> 00:29:40,720
and

775
00:29:40,720 --> 00:29:43,200
i suspect this is probably something

776
00:29:43,200 --> 00:29:45,120
along the lines of the right solution

777
00:29:45,120 --> 00:29:48,640
here but i don't know and

778
00:29:48,640 --> 00:29:50,799
so

779
00:29:51,480 --> 00:29:55,490
um that way

780
00:29:55,490 --> 00:29:58,569
[Music]

781
00:30:00,159 --> 00:30:02,480
martin's voice broke off i suspect

782
00:30:02,480 --> 00:30:06,480
because of your mic being on yeah

783
00:30:06,480 --> 00:30:08,399
oh because of mine

784
00:30:08,399 --> 00:30:12,000
can it be the last part martin sorry

785
00:30:12,720 --> 00:30:14,320
request that you

786
00:30:14,320 --> 00:30:17,520
bring this to the list and provide some

787
00:30:17,520 --> 00:30:19,840
i guess better explanatory material than

788
00:30:19,840 --> 00:30:23,120
just a single slide with text on it

789
00:30:23,120 --> 00:30:25,279
but maybe it's just because it's a very

790
00:30:25,279 --> 00:30:26,799
long day in the middle of a very long

791
00:30:26,799 --> 00:30:29,039
week but i'm not smart enough

792
00:30:29,039 --> 00:30:30,799
yeah once again i think that the issue

793
00:30:30,799 --> 00:30:33,840
has some discussion on it but that's

794
00:30:33,840 --> 00:30:35,200
perfectly reasonable and fair i think

795
00:30:35,200 --> 00:30:36,720
part of our goal here was to bring

796
00:30:36,720 --> 00:30:38,159
attention to this issue because it's the

797
00:30:38,159 --> 00:30:40,320
only design issue that's left and

798
00:30:40,320 --> 00:30:42,399
pending and i think that either ways

799
00:30:42,399 --> 00:30:43,840
we'll be able to come to a decision on

800
00:30:43,840 --> 00:30:46,240
it once we get people's eyes

801
00:30:46,240 --> 00:30:49,039
and minds staring at it so

802
00:30:49,039 --> 00:30:51,360
um yeah i mean i think we'd be happy to

803
00:30:51,360 --> 00:30:53,120
do something on email if that's

804
00:30:53,120 --> 00:30:55,200
necessary um

805
00:30:55,200 --> 00:30:57,279
and you'd be a restating of what's on

806
00:30:57,279 --> 00:30:59,600
the issue already but that's happily

807
00:30:59,600 --> 00:31:00,399
done

808
00:31:00,399 --> 00:31:02,159
yeah yeah sorry i kind of thought i'd

809
00:31:02,159 --> 00:31:03,760
send this to the list but i must have

810
00:31:03,760 --> 00:31:05,120
failed to actually hit send on that

811
00:31:05,120 --> 00:31:06,880
email or something so apologies that's

812
00:31:06,880 --> 00:31:09,279
my dad

813
00:31:09,760 --> 00:31:12,000
uh

814
00:31:13,200 --> 00:31:15,120
oh thanks ian um

815
00:31:15,120 --> 00:31:17,360
i think it's better reordering threshold

816
00:31:17,360 --> 00:31:18,399
is

817
00:31:18,399 --> 00:31:20,320
better than ignore order this gives you

818
00:31:20,320 --> 00:31:21,600
a little bit

819
00:31:21,600 --> 00:31:23,519
more options than you know just true and

820
00:31:23,519 --> 00:31:25,120
false

821
00:31:25,120 --> 00:31:27,919
but as i i think christian what he said

822
00:31:27,919 --> 00:31:30,480
i think i agree with him so

823
00:31:30,480 --> 00:31:32,320
if there's a reordering threshold it can

824
00:31:32,320 --> 00:31:35,279
be either in time or in packets i i

825
00:31:35,279 --> 00:31:37,440
think maybe we can make this field

826
00:31:37,440 --> 00:31:40,320
either two fields or make this

827
00:31:40,320 --> 00:31:42,000
make a way to distinguish whether we are

828
00:31:42,000 --> 00:31:44,320
setting this in time or packets

829
00:31:44,320 --> 00:31:46,000
but the other thing i wanted to say was

830
00:31:46,000 --> 00:31:48,080
this is again the same prob same issue

831
00:31:48,080 --> 00:31:50,000
that i had raised with ignore order or

832
00:31:50,000 --> 00:31:52,320
ignore ce is what is the guidance

833
00:31:52,320 --> 00:31:54,960
somebody could set it very high and that

834
00:31:54,960 --> 00:31:56,960
just becomes the same as

835
00:31:56,960 --> 00:31:58,240
ignore order

836
00:31:58,240 --> 00:31:59,760
even if they're not selling it as zero

837
00:31:59,760 --> 00:32:02,240
they can still set it very high

838
00:32:02,240 --> 00:32:04,960
so i'm not sure if the the guidance and

839
00:32:04,960 --> 00:32:06,080
the

840
00:32:06,080 --> 00:32:08,880
how how the sender is setting this

841
00:32:08,880 --> 00:32:09,840
if that

842
00:32:09,840 --> 00:32:14,480
uh there's guidance for how to set this

843
00:32:14,480 --> 00:32:16,960
in the draft

844
00:32:16,960 --> 00:32:18,960
i i think there's no additional guidance

845
00:32:18,960 --> 00:32:21,360
i thought we added guidance um

846
00:32:21,360 --> 00:32:23,440
recently janna i think wrote a pr to add

847
00:32:23,440 --> 00:32:25,279
guidance for other use cases and this

848
00:32:25,279 --> 00:32:26,559
would apply and so we'd have to make

849
00:32:26,559 --> 00:32:28,480
sure that guidance got kind of applied

850
00:32:28,480 --> 00:32:29,760
to this

851
00:32:29,760 --> 00:32:31,919
yeah i don't think we have i mean the pr

852
00:32:31,919 --> 00:32:33,840
the pr for this is not fully fleshed out

853
00:32:33,840 --> 00:32:35,600
yet i think that's that's definitely

854
00:32:35,600 --> 00:32:37,120
good feedback i think we need to have

855
00:32:37,120 --> 00:32:38,480
something that's more

856
00:32:38,480 --> 00:32:40,080
precise in terms of what does an

857
00:32:40,080 --> 00:32:41,600
endpoint do if they don't have anything

858
00:32:41,600 --> 00:32:43,039
better that they can use up they don't

859
00:32:43,039 --> 00:32:44,320
have

860
00:32:44,320 --> 00:32:45,840
having a a

861
00:32:45,840 --> 00:32:47,200
default in there is going to be very

862
00:32:47,200 --> 00:32:48,880
useful and i i think we can we can

863
00:32:48,880 --> 00:32:51,519
default back to quickv1 defaults

864
00:32:51,519 --> 00:32:53,039
uh but it'll be good to state that

865
00:32:53,039 --> 00:32:57,760
explicitly that people know what to do

866
00:32:57,760 --> 00:32:58,720
okay

867
00:32:58,720 --> 00:33:01,120
thank you

868
00:33:08,240 --> 00:33:11,840
i agree sorry

869
00:33:12,399 --> 00:33:15,039
hi thanks for doing this and i do see it

870
00:33:15,039 --> 00:33:17,519
progressing that's really good um i have

871
00:33:17,519 --> 00:33:19,600
two questions um

872
00:33:19,600 --> 00:33:21,279
the first one i think you've already

873
00:33:21,279 --> 00:33:22,960
touched on which i think there is some

874
00:33:22,960 --> 00:33:25,279
element of safety in here if you get

875
00:33:25,279 --> 00:33:27,360
these numbers wildly wrong

876
00:33:27,360 --> 00:33:29,039
then there is a congestion control

877
00:33:29,039 --> 00:33:31,840
implication so i would really love to

878
00:33:31,840 --> 00:33:34,399
see some sort of um

879
00:33:34,399 --> 00:33:37,360
safety considerations or recommended

880
00:33:37,360 --> 00:33:40,000
maximums or something we can

881
00:33:40,000 --> 00:33:42,960
maybe we can discuss that later on the

882
00:33:42,960 --> 00:33:43,840
issue

883
00:33:43,840 --> 00:33:46,879
does that seem reasonable

884
00:33:46,960 --> 00:33:48,000
yeah yeah

885
00:33:48,000 --> 00:33:50,000
we can we can either discuss it on this

886
00:33:50,000 --> 00:33:50,840
issue

887
00:33:50,840 --> 00:33:55,679
or on on other issues yeah let me

888
00:33:55,679 --> 00:33:57,360
yeah i'm happy it needs to be discussed

889
00:33:57,360 --> 00:33:58,799
i think we all agree i just want to make

890
00:33:58,799 --> 00:34:00,320
sure we get the right text in there and

891
00:34:00,320 --> 00:34:02,480
it applies to all the various mechanisms

892
00:34:02,480 --> 00:34:04,559
we have and it's kind of a global like

893
00:34:04,559 --> 00:34:05,840
recommendation so i think we're all on

894
00:34:05,840 --> 00:34:06,880
the same page it's just a matter of

895
00:34:06,880 --> 00:34:08,159
making sure we actually get the right

896
00:34:08,159 --> 00:34:11,040
tax rate down um so yeah that's kind of

897
00:34:11,040 --> 00:34:12,639
why i asked that because i think it

898
00:34:12,639 --> 00:34:14,239
probably is better handles a separate

899
00:34:14,239 --> 00:34:15,040
thing

900
00:34:15,040 --> 00:34:17,359
uh once we've got the issues pinned down

901
00:34:17,359 --> 00:34:19,040
right yeah i think having one text

902
00:34:19,040 --> 00:34:20,560
section that kind of says like here are

903
00:34:20,560 --> 00:34:21,918
all the ways you could shoot yourself or

904
00:34:21,918 --> 00:34:23,679
the internet in the foot like don't do

905
00:34:23,679 --> 00:34:25,520
these things and here's why um it's kind

906
00:34:25,520 --> 00:34:28,000
of what we're we need to have

907
00:34:28,000 --> 00:34:31,440
and then my second point is is even more

908
00:34:31,440 --> 00:34:33,520
crazy than i think what video raised i

909
00:34:33,520 --> 00:34:36,719
mean i'm not convinced that ignore ce

910
00:34:36,719 --> 00:34:38,800
is in any way what the

911
00:34:38,800 --> 00:34:40,480
people who are designing l4s are

912
00:34:40,480 --> 00:34:42,159
imagining

913
00:34:42,159 --> 00:34:44,560
and i wonder what the impact of actually

914
00:34:44,560 --> 00:34:46,639
deploying

915
00:34:46,639 --> 00:34:48,879
an ignore ce thing without some very

916
00:34:48,879 --> 00:34:50,560
strong guidance would be on the whole

917
00:34:50,560 --> 00:34:53,359
l4s thing

918
00:34:53,599 --> 00:34:55,359
yeah we could we could add some notes

919
00:34:55,359 --> 00:34:56,879
about how that

920
00:34:56,879 --> 00:34:59,280
ignore c is not

921
00:34:59,280 --> 00:35:01,760
necessarily recommended for

922
00:35:01,760 --> 00:35:04,560
l4s specifically um

923
00:35:04,560 --> 00:35:06,480
yeah or we should just formula a little

924
00:35:06,480 --> 00:35:09,119
bit of um a separate issue that they can

925
00:35:09,119 --> 00:35:12,160
jump into perhaps on that one yeah

926
00:35:12,160 --> 00:35:14,560
i i think i might have time oh sorry

927
00:35:14,560 --> 00:35:16,240
yeah

928
00:35:16,240 --> 00:35:18,720
add something that quickly uh to gauri

929
00:35:18,720 --> 00:35:21,680
the this isn't ignore ce is not really

930
00:35:21,680 --> 00:35:23,839
designed to handle l4s it's more of an

931
00:35:23,839 --> 00:35:26,960
escape hatch for those for for for l4s

932
00:35:26,960 --> 00:35:28,560
in the sense that

933
00:35:28,560 --> 00:35:31,040
if you have if you don't have any acts

934
00:35:31,040 --> 00:35:32,960
coming back you don't have any accurate

935
00:35:32,960 --> 00:35:36,000
ecm feedback and so this this sort of

936
00:35:36,000 --> 00:35:38,320
currently defeats any accuracy that you

937
00:35:38,320 --> 00:35:40,480
might want to do so it's an escape hatch

938
00:35:40,480 --> 00:35:43,440
it's not precisely defined as a solution

939
00:35:43,440 --> 00:35:47,119
for l4s just to be clear

940
00:35:47,280 --> 00:35:49,280
we'll just discuss folks

941
00:35:49,280 --> 00:35:52,160
yeah we're at time here so i ask you

942
00:35:52,160 --> 00:35:53,839
politely to keep up this healthy

943
00:35:53,839 --> 00:35:56,160
discussion on the list and the issues um

944
00:35:56,160 --> 00:35:58,240
thank you ian for the presentation your

945
00:35:58,240 --> 00:35:59,520
last slide talked about working group

946
00:35:59,520 --> 00:36:01,839
best call um it seems there's there's

947
00:36:01,839 --> 00:36:03,200
still a few

948
00:36:03,200 --> 00:36:05,200
uh well this design issue and a few more

949
00:36:05,200 --> 00:36:07,440
issues to go um another question the

950
00:36:07,440 --> 00:36:09,040
chair is probably asking is is about

951
00:36:09,040 --> 00:36:11,280
implementation and interoperability of

952
00:36:11,280 --> 00:36:13,359
the act frequency i know there has been

953
00:36:13,359 --> 00:36:16,240
some but um if if other people are doing

954
00:36:16,240 --> 00:36:19,200
that that would help us understand

955
00:36:19,200 --> 00:36:20,079
um

956
00:36:20,079 --> 00:36:22,480
how mature this draft is and and how

957
00:36:22,480 --> 00:36:23,839
good it is

958
00:36:23,839 --> 00:36:25,680
but beyond that i think

959
00:36:25,680 --> 00:36:27,280
we'll need to move on to the next slide

960
00:36:27,280 --> 00:36:29,920
so once again thank you ian

961
00:36:29,920 --> 00:36:32,480
you're welcome thanks

962
00:36:32,480 --> 00:36:35,839
robin's up next with q log uh

963
00:36:35,839 --> 00:36:37,599
do you wanna

964
00:36:37,599 --> 00:36:38,839
there we

965
00:36:38,839 --> 00:36:42,000
go the system works thank you go ahead

966
00:36:42,000 --> 00:36:44,400
robin

967
00:36:44,400 --> 00:36:45,359
yeah

968
00:36:45,359 --> 00:36:47,280
i'm intelligible i hope

969
00:36:47,280 --> 00:36:49,200
since we had a few issues with that on

970
00:36:49,200 --> 00:36:50,320
monday

971
00:36:50,320 --> 00:36:52,880
um so it's short other than kilo because

972
00:36:52,880 --> 00:36:55,520
not that much happened uh for the latest

973
00:36:55,520 --> 00:36:57,040
draft in the past three months the main

974
00:36:57,040 --> 00:36:59,599
thing we did was move to a different

975
00:36:59,599 --> 00:37:02,960
serialization format

976
00:37:03,040 --> 00:37:04,640
and just to give a little bit of context

977
00:37:04,640 --> 00:37:07,680
on that as you know we we use json for

978
00:37:07,680 --> 00:37:09,920
the main format which is very nice it's

979
00:37:09,920 --> 00:37:12,240
well supported the main downside is that

980
00:37:12,240 --> 00:37:13,280
it's quite

981
00:37:13,280 --> 00:37:16,320
not very robust in most of the parsers

982
00:37:16,320 --> 00:37:18,160
for example here if you would forget the

983
00:37:18,160 --> 00:37:20,720
final square bracket in this example

984
00:37:20,720 --> 00:37:22,720
most of the parcels would simply break

985
00:37:22,720 --> 00:37:24,240
they wouldn't even give you a partial

986
00:37:24,240 --> 00:37:26,880
result there this means typical json is

987
00:37:26,880 --> 00:37:29,359
not very usable for streaming cases

988
00:37:29,359 --> 00:37:31,520
because there you often might not have

989
00:37:31,520 --> 00:37:34,320
the option to properly finish the json

990
00:37:34,320 --> 00:37:35,200
file

991
00:37:35,200 --> 00:37:37,119
or let's say if your implementation

992
00:37:37,119 --> 00:37:39,200
crashes before they can finish the full

993
00:37:39,200 --> 00:37:40,480
log

994
00:37:40,480 --> 00:37:42,480
so what we did initially was define a

995
00:37:42,480 --> 00:37:43,440
separate

996
00:37:43,440 --> 00:37:45,760
additional format next to that

997
00:37:45,760 --> 00:37:48,400
for which we chose newline delimited

998
00:37:48,400 --> 00:37:51,040
json which is exactly what it sounds

999
00:37:51,040 --> 00:37:52,160
like

1000
00:37:52,160 --> 00:37:54,079
you just instead of having proper json

1001
00:37:54,079 --> 00:37:56,400
you just have each json object as a

1002
00:37:56,400 --> 00:37:58,160
separate line and you can just use the

1003
00:37:58,160 --> 00:38:01,599
new line as a delimiter which is

1004
00:38:01,599 --> 00:38:04,800
very simple works quite well the main

1005
00:38:04,800 --> 00:38:07,440
downside there is that it has no

1006
00:38:07,440 --> 00:38:08,960
official rfc

1007
00:38:08,960 --> 00:38:10,320
so if you would use that we would have

1008
00:38:10,320 --> 00:38:12,320
to define a lot of this basics in the

1009
00:38:12,320 --> 00:38:13,839
queue log drafts

1010
00:38:13,839 --> 00:38:15,280
themselves

1011
00:38:15,280 --> 00:38:18,880
basically a smaller downside is that you

1012
00:38:18,880 --> 00:38:21,599
can't have new lines inside of the json

1013
00:38:21,599 --> 00:38:24,160
um itself which is a bit annoying if

1014
00:38:24,160 --> 00:38:26,000
you're doing like manual grabbing or

1015
00:38:26,000 --> 00:38:29,359
actually eyeballing the q log files

1016
00:38:29,359 --> 00:38:30,880
because these these events are typically

1017
00:38:30,880 --> 00:38:32,960
very very long if you do them on a

1018
00:38:32,960 --> 00:38:35,119
single line

1019
00:38:35,119 --> 00:38:36,079
so

1020
00:38:36,079 --> 00:38:38,240
that's what we had last time and then i

1021
00:38:38,240 --> 00:38:39,520
think it was martin thompson who

1022
00:38:39,520 --> 00:38:41,839
suggested how about we move to

1023
00:38:41,839 --> 00:38:44,800
rfc 7464 instead

1024
00:38:44,800 --> 00:38:46,640
which is if you don't know it's it's

1025
00:38:46,640 --> 00:38:49,280
called json text sequences

1026
00:38:49,280 --> 00:38:51,599
and this is actually very very similar

1027
00:38:51,599 --> 00:38:54,240
in uh in concept to new line delimited

1028
00:38:54,240 --> 00:38:56,240
json instead of new lines you're now

1029
00:38:56,240 --> 00:38:57,680
using the

1030
00:38:57,680 --> 00:39:00,160
existing ascii record separator

1031
00:39:00,160 --> 00:39:02,160
character so this is not actually a

1032
00:39:02,160 --> 00:39:03,920
string so it's it's just because it's a

1033
00:39:03,920 --> 00:39:06,079
binary character it's difficult to

1034
00:39:06,079 --> 00:39:08,720
visualize in the slide so the rs

1035
00:39:08,720 --> 00:39:10,079
with the brackets is actually just a

1036
00:39:10,079 --> 00:39:12,000
single unicode code point

1037
00:39:12,000 --> 00:39:14,079
uh indicating the record-separated

1038
00:39:14,079 --> 00:39:15,119
character

1039
00:39:15,119 --> 00:39:16,800
um

1040
00:39:16,800 --> 00:39:18,400
so the nice thing there is this is

1041
00:39:18,400 --> 00:39:20,320
properly defined in rc it's properly

1042
00:39:20,320 --> 00:39:21,839
defined how to

1043
00:39:21,839 --> 00:39:25,920
how to use it how it maps to uh um

1044
00:39:25,920 --> 00:39:26,839
to

1045
00:39:26,839 --> 00:39:30,880
um scratch that

1046
00:39:31,280 --> 00:39:32,960
and we can have

1047
00:39:32,960 --> 00:39:35,200
new lines inside of events which is also

1048
00:39:35,200 --> 00:39:37,520
quite nice the main downside was this

1049
00:39:37,520 --> 00:39:41,200
seems to be relatively esoteric it isn't

1050
00:39:41,200 --> 00:39:42,960
as broadly supported as newline

1051
00:39:42,960 --> 00:39:46,720
delimited json despite being a standard

1052
00:39:46,720 --> 00:39:48,640
and so we decided we first want to get

1053
00:39:48,640 --> 00:39:50,320
some practical experience with this

1054
00:39:50,320 --> 00:39:53,200
before we uh switch the uh the q log

1055
00:39:53,200 --> 00:39:55,920
format over to that which is what we did

1056
00:39:55,920 --> 00:39:58,320
and so it turns out it's actually

1057
00:39:58,320 --> 00:40:01,359
quite feasible quite doable

1058
00:40:01,359 --> 00:40:03,599
if you're already doing nd json it's

1059
00:40:03,599 --> 00:40:05,680
very easy to move over to

1060
00:40:05,680 --> 00:40:07,599
json text sequences

1061
00:40:07,599 --> 00:40:09,359
in practice

1062
00:40:09,359 --> 00:40:11,839
and we also tested various existing tool

1063
00:40:11,839 --> 00:40:13,760
suites or tools that people were using

1064
00:40:13,760 --> 00:40:14,560
for

1065
00:40:14,560 --> 00:40:17,040
qlog like jq and

1066
00:40:17,040 --> 00:40:18,800
all kinds of

1067
00:40:18,800 --> 00:40:20,800
linux based

1068
00:40:20,800 --> 00:40:22,800
text processing tools and they all seem

1069
00:40:22,800 --> 00:40:26,240
to work just fine with this new format

1070
00:40:26,240 --> 00:40:27,680
and so that's the reason why we decided

1071
00:40:27,680 --> 00:40:30,000
let's go for it and uh so that's the

1072
00:40:30,000 --> 00:40:33,040
main change in draft one we moved from

1073
00:40:33,040 --> 00:40:35,760
ndjs onto this with that some fewer

1074
00:40:35,760 --> 00:40:36,800
additional

1075
00:40:36,800 --> 00:40:38,480
minor changes we have semantic

1076
00:40:38,480 --> 00:40:40,319
versioning now

1077
00:40:40,319 --> 00:40:42,960
we have a little bit of more information

1078
00:40:42,960 --> 00:40:45,280
on using different file extensions for

1079
00:40:45,280 --> 00:40:47,359
the different formats and also have some

1080
00:40:47,359 --> 00:40:50,000
more information on the media types that

1081
00:40:50,000 --> 00:40:52,640
you might use when when say sending

1082
00:40:52,640 --> 00:40:54,400
these things over

1083
00:40:54,400 --> 00:40:57,119
http

1084
00:40:57,119 --> 00:41:00,079
um this was then picked up quite quickly

1085
00:41:00,079 --> 00:41:02,400
we have support for this in the qvis

1086
00:41:02,400 --> 00:41:04,560
tool suite and we also have several

1087
00:41:04,560 --> 00:41:06,560
implementations that have moved to the

1088
00:41:06,560 --> 00:41:09,200
newest format and everything seems to

1089
00:41:09,200 --> 00:41:12,160
work just fine

1090
00:41:12,400 --> 00:41:14,400
so two points i want to make there first

1091
00:41:14,400 --> 00:41:16,160
it's not that we're moving everything

1092
00:41:16,160 --> 00:41:17,920
over to this we are still supporting

1093
00:41:17,920 --> 00:41:22,240
both json and json text sequences so

1094
00:41:22,240 --> 00:41:25,040
non-streaming file based and

1095
00:41:25,040 --> 00:41:26,960
streaming let's say

1096
00:41:26,960 --> 00:41:29,520
but if you were for some reason waiting

1097
00:41:29,520 --> 00:41:31,280
for this change to be made to update

1098
00:41:31,280 --> 00:41:33,119
your own implementation

1099
00:41:33,119 --> 00:41:35,040
i think it's fair to say that we'll

1100
00:41:35,040 --> 00:41:36,160
likely

1101
00:41:36,160 --> 00:41:38,560
stay with this streaming format so if

1102
00:41:38,560 --> 00:41:40,240
you were waiting for this

1103
00:41:40,240 --> 00:41:41,680
you can probably go ahead and start

1104
00:41:41,680 --> 00:41:44,319
implementing that

1105
00:41:44,319 --> 00:41:46,079
so that's since last time what are we

1106
00:41:46,079 --> 00:41:48,560
planning for the near future

1107
00:41:48,560 --> 00:41:51,200
by itf 113

1108
00:41:51,200 --> 00:41:53,760
we're hoping to mainly do some editorial

1109
00:41:53,760 --> 00:41:55,119
work

1110
00:41:55,119 --> 00:41:56,720
and the main thing there is that in the

1111
00:41:56,720 --> 00:41:59,359
current drafts all of our events we've

1112
00:41:59,359 --> 00:42:01,680
tried to properly define them which

1113
00:42:01,680 --> 00:42:03,200
fields are on which events and which

1114
00:42:03,200 --> 00:42:04,640
type

1115
00:42:04,640 --> 00:42:07,200
are those fields but for those we are

1116
00:42:07,200 --> 00:42:10,400
currently using the typescript

1117
00:42:10,400 --> 00:42:12,640
data definition format

1118
00:42:12,640 --> 00:42:13,920
and here we have a very similar

1119
00:42:13,920 --> 00:42:17,040
situation to nd json it's usable but

1120
00:42:17,040 --> 00:42:18,880
it's no it's not really well defined

1121
00:42:18,880 --> 00:42:21,040
anywhere and it's not an rfc

1122
00:42:21,040 --> 00:42:23,040
and so here again we also want to make

1123
00:42:23,040 --> 00:42:25,040
the move to something a bit more itf

1124
00:42:25,040 --> 00:42:26,240
centric

1125
00:42:26,240 --> 00:42:28,400
which is called the concise data

1126
00:42:28,400 --> 00:42:31,359
definition language cddl as you can see

1127
00:42:31,359 --> 00:42:34,079
it's it's very similar in concepts it's

1128
00:42:34,079 --> 00:42:36,720
just mainly the syntax that changes a

1129
00:42:36,720 --> 00:42:38,480
little bit

1130
00:42:38,480 --> 00:42:40,880
but the main gain we hope to get from

1131
00:42:40,880 --> 00:42:41,760
this

1132
00:42:41,760 --> 00:42:44,000
especially down the line is that cdl

1133
00:42:44,000 --> 00:42:45,599
should make it easier for us to

1134
00:42:45,599 --> 00:42:48,160
automatically extract

1135
00:42:48,160 --> 00:42:49,680
event definitions

1136
00:42:49,680 --> 00:42:52,960
schema definitions in different

1137
00:42:52,960 --> 00:42:55,040
formats and programming languages and

1138
00:42:55,040 --> 00:42:57,599
also use those to build automatic

1139
00:42:57,599 --> 00:43:00,160
validators for q log files which is

1140
00:43:00,160 --> 00:43:02,079
something that we are currently missing

1141
00:43:02,079 --> 00:43:03,040
a bit

1142
00:43:03,040 --> 00:43:04,720
uh so the goal is there to hopefully

1143
00:43:04,720 --> 00:43:07,280
have something like in tools like qvis

1144
00:43:07,280 --> 00:43:09,280
that you upload a q log file and then it

1145
00:43:09,280 --> 00:43:11,200
can tell you exactly if you have any

1146
00:43:11,200 --> 00:43:13,920
errors in there

1147
00:43:13,920 --> 00:43:16,079
misspelled fields wrong types or fields

1148
00:43:16,079 --> 00:43:17,599
and so on and so forth which is

1149
00:43:17,599 --> 00:43:19,520
something we've seen surface a little

1150
00:43:19,520 --> 00:43:23,040
bit in the in the past months

1151
00:43:23,599 --> 00:43:24,880
for some people

1152
00:43:24,880 --> 00:43:27,440
so that's kind of the idea it's both to

1153
00:43:27,440 --> 00:43:29,440
make everything a bit more neat itf

1154
00:43:29,440 --> 00:43:32,319
style but also be more robust towards

1155
00:43:32,319 --> 00:43:34,000
the future when we start adding new

1156
00:43:34,000 --> 00:43:35,680
stuff

1157
00:43:35,680 --> 00:43:37,520
so this is what i think we have in mind

1158
00:43:37,520 --> 00:43:42,480
for next ietf 113 and then after that

1159
00:43:43,839 --> 00:43:47,359
our main goals are to

1160
00:43:47,839 --> 00:43:50,319
basically flash out what we have

1161
00:43:50,319 --> 00:43:52,560
we are a bit lacking in tls and qpec

1162
00:43:52,560 --> 00:43:54,560
stuff at this moment

1163
00:43:54,560 --> 00:43:56,480
so we want to add those things and then

1164
00:43:56,480 --> 00:43:58,079
we have a few events that need to be

1165
00:43:58,079 --> 00:44:00,560
extended or touched up to be a bit

1166
00:44:00,560 --> 00:44:02,000
clearer and then there are some

1167
00:44:02,000 --> 00:44:03,920
proposals to add more high-level

1168
00:44:03,920 --> 00:44:05,839
generalized stuff like indicating which

1169
00:44:05,839 --> 00:44:09,440
cpu or which tread a certain

1170
00:44:09,440 --> 00:44:11,599
event comes from that kind of stuff that

1171
00:44:11,599 --> 00:44:14,800
other implementations like microsoft

1172
00:44:14,800 --> 00:44:16,960
use in their custom logging format that

1173
00:44:16,960 --> 00:44:18,079
might be useful

1174
00:44:18,079 --> 00:44:20,000
down the line

1175
00:44:20,000 --> 00:44:22,560
and that's basically it like last time

1176
00:44:22,560 --> 00:44:26,000
we we had i had in my slides um like a

1177
00:44:26,000 --> 00:44:28,560
desire to have like a

1178
00:44:28,560 --> 00:44:31,680
a global design guideline or or a design

1179
00:44:31,680 --> 00:44:33,839
framework so that people could add new

1180
00:44:33,839 --> 00:44:36,480
events and new protocols even to qlog

1181
00:44:36,480 --> 00:44:38,720
and so on and so forth and

1182
00:44:38,720 --> 00:44:40,079
since we've had a lot of discussion

1183
00:44:40,079 --> 00:44:42,240
about that and

1184
00:44:42,240 --> 00:44:43,680
i think most people there agree that

1185
00:44:43,680 --> 00:44:45,359
this is a

1186
00:44:45,359 --> 00:44:47,200
bit of a utopia that it would be quite

1187
00:44:47,200 --> 00:44:50,000
difficult to achieve this

1188
00:44:50,000 --> 00:44:51,839
and even if we could it's probably not

1189
00:44:51,839 --> 00:44:54,240
something we want to do within the

1190
00:44:54,240 --> 00:44:56,160
the the quick working group for for the

1191
00:44:56,160 --> 00:44:57,760
current k-log

1192
00:44:57,760 --> 00:44:59,359
effort

1193
00:44:59,359 --> 00:45:01,359
and so the idea here would be to limit

1194
00:45:01,359 --> 00:45:03,680
ourselves quite relatively to quick in

1195
00:45:03,680 --> 00:45:04,960
http 3

1196
00:45:04,960 --> 00:45:07,440
and then look into all these other stuff

1197
00:45:07,440 --> 00:45:09,280
later on

1198
00:45:09,280 --> 00:45:10,880
which is fine for me but i think that

1199
00:45:10,880 --> 00:45:12,960
means that we need a very clear idea of

1200
00:45:12,960 --> 00:45:15,440
how to do that later on already now or

1201
00:45:15,440 --> 00:45:18,079
at least provide enough extension points

1202
00:45:18,079 --> 00:45:20,160
down the line to make this relatively

1203
00:45:20,160 --> 00:45:22,319
possible

1204
00:45:22,319 --> 00:45:23,680
and that's something that is on this

1205
00:45:23,680 --> 00:45:26,560
slide and that especially lucas has been

1206
00:45:26,560 --> 00:45:28,079
creating some issues for in the past

1207
00:45:28,079 --> 00:45:30,079
weeks

1208
00:45:30,079 --> 00:45:31,200
that we need to start thinking about

1209
00:45:31,200 --> 00:45:33,119
versioning and versioning of individual

1210
00:45:33,119 --> 00:45:35,520
documents individual event

1211
00:45:35,520 --> 00:45:37,440
groupings we need to think about how to

1212
00:45:37,440 --> 00:45:39,119
indicate which protocols and which

1213
00:45:39,119 --> 00:45:40,960
events are in which file

1214
00:45:40,960 --> 00:45:44,319
um how to uh make it possible to change

1215
00:45:44,319 --> 00:45:46,319
existing events for example add new

1216
00:45:46,319 --> 00:45:48,800
transport parameters

1217
00:45:48,800 --> 00:45:50,640
into the existing transport parameter

1218
00:45:50,640 --> 00:45:52,240
event that we have and so on and so

1219
00:45:52,240 --> 00:45:54,000
forth and then we should also have a

1220
00:45:54,000 --> 00:45:55,359
discussion about

1221
00:45:55,359 --> 00:45:57,280
let's say we want a

1222
00:45:57,280 --> 00:45:59,440
q log

1223
00:45:59,440 --> 00:46:01,760
log events for rap transport

1224
00:46:01,760 --> 00:46:03,119
how do we do that is that a separate

1225
00:46:03,119 --> 00:46:05,520
draft is it a fully separate thing where

1226
00:46:05,520 --> 00:46:07,760
does that live and so on and so forth so

1227
00:46:07,760 --> 00:46:10,240
a few of those practical issues those

1228
00:46:10,240 --> 00:46:11,839
are not things that are very pressing at

1229
00:46:11,839 --> 00:46:13,839
this moment but it would be nice to have

1230
00:46:13,839 --> 00:46:16,240
an idea of what people think about this

1231
00:46:16,240 --> 00:46:18,079
or to have

1232
00:46:18,079 --> 00:46:21,440
some proposals of this by itf 113 so

1233
00:46:21,440 --> 00:46:23,200
that we can start the discussion in

1234
00:46:23,200 --> 00:46:24,800
earnest

1235
00:46:24,800 --> 00:46:26,800
by then

1236
00:46:26,800 --> 00:46:29,119
so that's what i have for you today

1237
00:46:29,119 --> 00:46:32,640
please if you have any questions

1238
00:46:41,440 --> 00:46:44,240
go ahead kazoo

1239
00:46:48,640 --> 00:46:50,480
thank you for the presentation and thank

1240
00:46:50,480 --> 00:46:53,760
you for making the changes

1241
00:46:53,760 --> 00:46:58,160
uh regarding the file format i prefer

1242
00:46:58,160 --> 00:47:00,240
uh choosing one rather than

1243
00:47:00,240 --> 00:47:02,800
uh having support for two

1244
00:47:02,800 --> 00:47:04,800
because in my opinion you know

1245
00:47:04,800 --> 00:47:06,880
supporting two is always more complex

1246
00:47:06,880 --> 00:47:08,480
than supporting one and writing a

1247
00:47:08,480 --> 00:47:11,839
conversion tool to the other

1248
00:47:12,880 --> 00:47:14,560
yeah

1249
00:47:14,560 --> 00:47:16,480
but it's even if we have two formats

1250
00:47:16,480 --> 00:47:18,319
it's still possible to just implement

1251
00:47:18,319 --> 00:47:20,079
one and then convert it to the other if

1252
00:47:20,079 --> 00:47:21,200
you uh

1253
00:47:21,200 --> 00:47:22,400
if you want right i'm not sure i

1254
00:47:22,400 --> 00:47:24,720
understand the question

1255
00:47:24,720 --> 00:47:26,640
right i mean

1256
00:47:26,640 --> 00:47:28,319
if

1257
00:47:28,319 --> 00:47:31,040
if there's only one format defined then

1258
00:47:31,040 --> 00:47:32,960
for example i can create a pool that

1259
00:47:32,960 --> 00:47:35,040
only supports that format

1260
00:47:35,040 --> 00:47:36,880
but if

1261
00:47:36,880 --> 00:47:38,880
there are two formats being defined

1262
00:47:38,880 --> 00:47:40,480
i i'm

1263
00:47:40,480 --> 00:47:42,480
you know i'm forced to write a converter

1264
00:47:42,480 --> 00:47:43,839
or write

1265
00:47:43,839 --> 00:47:46,400
at least write a test to support both of

1266
00:47:46,400 --> 00:47:48,480
those two and that's a complexity i

1267
00:47:48,480 --> 00:47:50,480
think

1268
00:47:50,480 --> 00:47:53,680
for everyone every other one

1269
00:47:53,680 --> 00:47:55,520
so you would propose moving to just a

1270
00:47:55,520 --> 00:47:57,680
single defined format um

1271
00:47:57,680 --> 00:47:58,800
yes

1272
00:47:58,800 --> 00:48:02,760
yep regardless of whichever

1273
00:48:04,319 --> 00:48:09,680
thank you oh man thanks hello

1274
00:48:16,880 --> 00:48:19,280
now i can hear you yep

1275
00:48:19,280 --> 00:48:22,319
all right uh regarding the

1276
00:48:22,319 --> 00:48:25,520
uh rs separated

1277
00:48:25,520 --> 00:48:27,359
keylog

1278
00:48:27,359 --> 00:48:29,598
uh

1279
00:48:30,640 --> 00:48:32,880
are they semantics of

1280
00:48:32,880 --> 00:48:35,599
aggregating multiple logs into a single

1281
00:48:35,599 --> 00:48:37,119
created log

1282
00:48:37,119 --> 00:48:38,160
uh

1283
00:48:38,160 --> 00:48:39,920
going to be understood by the tools or

1284
00:48:39,920 --> 00:48:41,040
is it something

1285
00:48:41,040 --> 00:48:44,400
that's undefined behavior

1286
00:48:44,400 --> 00:48:46,240
yeah so that's that's one of the main

1287
00:48:46,240 --> 00:48:47,920
reasons i would have two different

1288
00:48:47,920 --> 00:48:49,520
formats

1289
00:48:49,520 --> 00:48:50,880
i didn't want to get too deep into that

1290
00:48:50,880 --> 00:48:52,079
with kazuo

1291
00:48:52,079 --> 00:48:52,800
but

1292
00:48:52,800 --> 00:48:54,480
i don't have a second question so if you

1293
00:48:54,480 --> 00:48:55,920
have multiple if you have the normal

1294
00:48:55,920 --> 00:48:59,040
json one we can append separate traces

1295
00:48:59,040 --> 00:49:01,280
as individual objects that's much more

1296
00:49:01,280 --> 00:49:02,640
difficult in streaming format if you

1297
00:49:02,640 --> 00:49:03,920
want to do that in streaming format you

1298
00:49:03,920 --> 00:49:05,119
would have to indicate for each

1299
00:49:05,119 --> 00:49:07,119
individual event to which

1300
00:49:07,119 --> 00:49:08,960
sub-trace it

1301
00:49:08,960 --> 00:49:11,920
it belongs otherwise it's impossible to

1302
00:49:11,920 --> 00:49:14,559
de-multiplex them afterwards

1303
00:49:14,559 --> 00:49:17,800
thank you

1304
00:49:20,640 --> 00:49:22,319
but uh finalizing on that that is

1305
00:49:22,319 --> 00:49:24,319
something that qvis for example also

1306
00:49:24,319 --> 00:49:26,319
already does

1307
00:49:26,319 --> 00:49:27,839
it's not that it's very complex it's

1308
00:49:27,839 --> 00:49:31,839
just a different way of doing things

1309
00:49:35,839 --> 00:49:37,920
oh well um it doesn't seem like we've

1310
00:49:37,920 --> 00:49:40,800
got anyone else in the queue um

1311
00:49:40,800 --> 00:49:42,480
there's some some good progress here and

1312
00:49:42,480 --> 00:49:44,160
some good progress to come i did see in

1313
00:49:44,160 --> 00:49:46,160
the chat um christine mentioned

1314
00:49:46,160 --> 00:49:49,119
multipath support i think you know

1315
00:49:49,119 --> 00:49:51,760
sometimes defining these events

1316
00:49:51,760 --> 00:49:53,520
takes some thinking but it isn't too

1317
00:49:53,520 --> 00:49:55,440
hard it's more the

1318
00:49:55,440 --> 00:49:56,640
um

1319
00:49:56,640 --> 00:49:58,800
what should what makes sense to put in

1320
00:49:58,800 --> 00:50:01,520
and what are people willing to implement

1321
00:50:01,520 --> 00:50:03,119
um because you can define everything and

1322
00:50:03,119 --> 00:50:05,280
if no one implements them then you you

1323
00:50:05,280 --> 00:50:07,839
can end up with some interop issues uh

1324
00:50:07,839 --> 00:50:09,920
like like we found in the hackathon last

1325
00:50:09,920 --> 00:50:12,160
week uh when we are consuming each

1326
00:50:12,160 --> 00:50:15,200
other's um q logs so

1327
00:50:15,200 --> 00:50:16,800
uh i think there's there's some some

1328
00:50:16,800 --> 00:50:18,400
good work to come up and look forward to

1329
00:50:18,400 --> 00:50:20,240
that progress in the future

1330
00:50:20,240 --> 00:50:21,920
but if there's nothing more here i think

1331
00:50:21,920 --> 00:50:23,680
we could just move on

1332
00:50:23,680 --> 00:50:26,160
um for just for multipath i was

1333
00:50:26,160 --> 00:50:28,160
intentionally waiting a bit for the

1334
00:50:28,160 --> 00:50:29,839
unified proposal

1335
00:50:29,839 --> 00:50:30,800
right

1336
00:50:30,800 --> 00:50:32,559
um to know what what direction we're

1337
00:50:32,559 --> 00:50:34,240
going and once that's settled down i i

1338
00:50:34,240 --> 00:50:36,079
think it should be relatively easy to

1339
00:50:36,079 --> 00:50:38,319
add at least provisional multi-part

1340
00:50:38,319 --> 00:50:39,280
events

1341
00:50:39,280 --> 00:50:41,839
and then also have some basic uh

1342
00:50:41,839 --> 00:50:44,079
let's say cubist tooling around that

1343
00:50:44,079 --> 00:50:48,079
to help with multiple debugging

1344
00:50:49,200 --> 00:50:52,720
yeah cool well thank you robin um and

1345
00:50:52,720 --> 00:50:54,319
with that we can move on to vision

1346
00:50:54,319 --> 00:50:56,800
negotiation so david would you like to

1347
00:50:56,800 --> 00:51:00,240
step on up please

1348
00:51:04,559 --> 00:51:05,839
good

1349
00:51:05,839 --> 00:51:08,079
morning afternoon evening middle of the

1350
00:51:08,079 --> 00:51:12,240
night everyone let me find these slides

1351
00:51:14,000 --> 00:51:15,280
all right

1352
00:51:15,280 --> 00:51:17,040
can someone confirm that you can hear me

1353
00:51:17,040 --> 00:51:19,839
and see the slides

1354
00:51:20,160 --> 00:51:23,440
i can confirm cool thanks

1355
00:51:23,440 --> 00:51:27,200
uh so uh my name is david kanazi and i'm

1356
00:51:27,200 --> 00:51:28,480
here to

1357
00:51:28,480 --> 00:51:30,880
very very briefly give folks an update

1358
00:51:30,880 --> 00:51:33,520
on the version negotiation draft

1359
00:51:33,520 --> 00:51:34,960
um

1360
00:51:34,960 --> 00:51:37,119
so a

1361
00:51:37,119 --> 00:51:40,079
very accelerated history uh we used to

1362
00:51:40,079 --> 00:51:42,319
have vn in the core specs we then

1363
00:51:42,319 --> 00:51:44,000
decided to remove it and split it to its

1364
00:51:44,000 --> 00:51:46,319
own draft this is that draft

1365
00:51:46,319 --> 00:51:47,200
we were

1366
00:51:47,200 --> 00:51:48,960
went around in circles for a bit on it

1367
00:51:48,960 --> 00:51:51,520
because it was too complicated then mt

1368
00:51:51,520 --> 00:51:55,280
came around with a simpler design that

1369
00:51:55,280 --> 00:51:56,800
folks liked

1370
00:51:56,800 --> 00:51:59,280
that's in the draft

1371
00:51:59,280 --> 00:52:01,680
today

1372
00:52:02,160 --> 00:52:04,400
and then the question is where do we go

1373
00:52:04,400 --> 00:52:07,040
from here um

1374
00:52:07,040 --> 00:52:09,200
so far the the new simplified design

1375
00:52:09,200 --> 00:52:11,280
i've haven't heard anyone said they

1376
00:52:11,280 --> 00:52:13,839
dislike it so we're in good shape

1377
00:52:13,839 --> 00:52:15,920
uh we still have a lot of

1378
00:52:15,920 --> 00:52:19,200
minor issues on the on the document it's

1379
00:52:19,200 --> 00:52:21,440
more that um just the

1380
00:52:21,440 --> 00:52:23,680
the editors uh haven't been focusing on

1381
00:52:23,680 --> 00:52:25,200
it so we haven't made good progress on

1382
00:52:25,200 --> 00:52:26,160
those

1383
00:52:26,160 --> 00:52:28,880
um but like all the ones i did a quick

1384
00:52:28,880 --> 00:52:30,400
pass on those last week and it really

1385
00:52:30,400 --> 00:52:31,920
looked like

1386
00:52:31,920 --> 00:52:33,520
there was agreement on how to resolve

1387
00:52:33,520 --> 00:52:34,880
all of them

1388
00:52:34,880 --> 00:52:36,880
uh the question is

1389
00:52:36,880 --> 00:52:38,240
kind of

1390
00:52:38,240 --> 00:52:40,640
what is the status with implementations

1391
00:52:40,640 --> 00:52:42,640
uh for the longest time we didn't have

1392
00:52:42,640 --> 00:52:44,640
one i just just on monday i implemented

1393
00:52:44,640 --> 00:52:46,720
it in our stack not the compatible part

1394
00:52:46,720 --> 00:52:48,079
but the

1395
00:52:48,079 --> 00:52:49,520
at least the version downgrade part and

1396
00:52:49,520 --> 00:52:52,079
it was very straightforward

1397
00:52:52,079 --> 00:52:53,680
and kind of the question for the working

1398
00:52:53,680 --> 00:52:55,839
group is where do we want to

1399
00:52:55,839 --> 00:52:58,480
go from here

1400
00:52:58,480 --> 00:53:01,440
do we want to publish this soon do we

1401
00:53:01,440 --> 00:53:03,119
want to wait until we have another

1402
00:53:03,119 --> 00:53:04,960
version so we can like test the

1403
00:53:04,960 --> 00:53:07,040
compatibility bits at scale before we

1404
00:53:07,040 --> 00:53:08,240
ship this

1405
00:53:08,240 --> 00:53:10,000
uh we'd kind of like to get a some sort

1406
00:53:10,000 --> 00:53:11,760
of a timeline because

1407
00:53:11,760 --> 00:53:13,760
you know that if this needs to get

1408
00:53:13,760 --> 00:53:15,280
published soon then that it's worth it

1409
00:53:15,280 --> 00:53:16,800
for the editors to prioritize like

1410
00:53:16,800 --> 00:53:19,200
fixing these editorial things otherwise

1411
00:53:19,200 --> 00:53:21,280
we can kind of kick this can down the

1412
00:53:21,280 --> 00:53:24,319
road until another version so thoughts

1413
00:53:24,319 --> 00:53:26,960
questions what do we do now this is the

1414
00:53:26,960 --> 00:53:29,839
end of my presentation

1415
00:53:37,760 --> 00:53:39,119
crickets

1416
00:53:39,119 --> 00:53:40,240
so if

1417
00:53:40,240 --> 00:53:42,480
um

1418
00:53:42,480 --> 00:53:44,319
one thing is please interrupt with my

1419
00:53:44,319 --> 00:53:46,319
server i put it on the general channel

1420
00:53:46,319 --> 00:53:49,440
of the slack um just want to make sure

1421
00:53:49,440 --> 00:53:50,559
that

1422
00:53:50,559 --> 00:53:52,000
you know we

1423
00:53:52,000 --> 00:53:53,760
i implemented it correctly

1424
00:53:53,760 --> 00:53:56,319
but apart from that uh given that

1425
00:53:56,319 --> 00:53:58,240
there's not too much excitement about

1426
00:53:58,240 --> 00:53:59,680
this i

1427
00:53:59,680 --> 00:54:01,440
guess maybe we just kind of kicked the

1428
00:54:01,440 --> 00:54:03,760
can down the road a bit further uh matt

1429
00:54:03,760 --> 00:54:05,200
do you have any thoughts

1430
00:54:05,200 --> 00:54:07,119
yeah i was just gonna you know hearing

1431
00:54:07,119 --> 00:54:09,119
the the deafening silence from the

1432
00:54:09,119 --> 00:54:10,480
working group i think like everyone

1433
00:54:10,480 --> 00:54:12,720
agrees this is something we need it but

1434
00:54:12,720 --> 00:54:14,000
it doesn't seem like there's a lot of

1435
00:54:14,000 --> 00:54:15,280
implementation

1436
00:54:15,280 --> 00:54:16,880
appetite at the moment i think for

1437
00:54:16,880 --> 00:54:19,760
something like this we do want

1438
00:54:19,760 --> 00:54:22,240
implementations and interop before we

1439
00:54:22,240 --> 00:54:23,760
like you know kind of shepherd it

1440
00:54:23,760 --> 00:54:24,640
through

1441
00:54:24,640 --> 00:54:27,440
so um just everyone keep that in mind

1442
00:54:27,440 --> 00:54:30,640
that if if you want this in the future

1443
00:54:30,640 --> 00:54:32,160
if you see this being something that you

1444
00:54:32,160 --> 00:54:34,000
want in the future please implement it

1445
00:54:34,000 --> 00:54:35,760
sooner rather than later

1446
00:54:35,760 --> 00:54:39,839
um gianna did you want to say something

1447
00:54:42,559 --> 00:54:44,640
um hey um

1448
00:54:44,640 --> 00:54:45,839
thanks for the presentation dude just

1449
00:54:45,839 --> 00:54:47,040
very quickly

1450
00:54:47,040 --> 00:54:48,720
it seems to me that it might actually be

1451
00:54:48,720 --> 00:54:51,119
useful to get some

1452
00:54:51,119 --> 00:54:52,880
implementation deployment experience

1453
00:54:52,880 --> 00:54:55,359
along with a different version so i

1454
00:54:55,359 --> 00:54:57,680
wonder if the quick v2 discussion that

1455
00:54:57,680 --> 00:54:59,680
we are about to have later might play

1456
00:54:59,680 --> 00:55:04,359
into how quickly we move on this draft

1457
00:55:06,559 --> 00:55:08,640
that that makes sense because if we have

1458
00:55:08,640 --> 00:55:10,720
a v2 that is compatible with the first

1459
00:55:10,720 --> 00:55:12,480
one that'll help us to

1460
00:55:12,480 --> 00:55:14,559
use this at scale also

1461
00:55:14,559 --> 00:55:17,599
we won't be able to ship a v2 without a

1462
00:55:17,599 --> 00:55:20,880
version negotiation mechanism with v1

1463
00:55:20,880 --> 00:55:23,280
so like yeah maybe these become a joint

1464
00:55:23,280 --> 00:55:24,720
cluster

1465
00:55:24,720 --> 00:55:27,839
and uh i think the quick v2 is on the s

1466
00:55:27,839 --> 00:55:30,400
time permits so in that case i'll just

1467
00:55:30,400 --> 00:55:32,240
say let's punch for now but let's see

1468
00:55:32,240 --> 00:55:35,839
what comes out of the v2 discussion

1469
00:55:36,559 --> 00:55:38,160
all right and expect a similar

1470
00:55:38,160 --> 00:55:39,920
two-minute presentation at the next atf

1471
00:55:39,920 --> 00:55:42,160
then

1472
00:55:44,079 --> 00:55:47,319
thanks everyone

1473
00:55:52,160 --> 00:55:53,520
all right since i'm already on the mic

1474
00:55:53,520 --> 00:55:55,760
uh yeah mark i've as we can see martin's

1475
00:55:55,760 --> 00:55:57,760
coming up with quick lb so go ahead

1476
00:55:57,760 --> 00:55:59,119
martin

1477
00:55:59,119 --> 00:56:00,400
yeah

1478
00:56:00,400 --> 00:56:01,520
in the uh

1479
00:56:01,520 --> 00:56:03,520
staying in the vein of um

1480
00:56:03,520 --> 00:56:05,119
things that people sort of support but

1481
00:56:05,119 --> 00:56:06,880
are a little bit can i get a clock reset

1482
00:56:06,880 --> 00:56:09,280
please uh that think that people that

1483
00:56:09,280 --> 00:56:10,559
things that people support but there

1484
00:56:10,559 --> 00:56:12,880
aren't a lot of implementations quick lb

1485
00:56:12,880 --> 00:56:14,240
um

1486
00:56:14,240 --> 00:56:17,440
so uh at 111 i talked about a lot of uh

1487
00:56:17,440 --> 00:56:19,119
technical issues

1488
00:56:19,119 --> 00:56:20,240
um

1489
00:56:20,240 --> 00:56:22,000
and basically that the draft had

1490
00:56:22,000 --> 00:56:23,839
expanded to cover lots of use cases

1491
00:56:23,839 --> 00:56:25,440
because we weren't getting a lot of

1492
00:56:25,440 --> 00:56:26,799
useful feedback of what the most

1493
00:56:26,799 --> 00:56:28,559
important use cases were

1494
00:56:28,559 --> 00:56:29,599
um

1495
00:56:29,599 --> 00:56:31,440
so uh

1496
00:56:31,440 --> 00:56:32,960
the the the upshot of that was people

1497
00:56:32,960 --> 00:56:34,319
thought it was too complicated too many

1498
00:56:34,319 --> 00:56:35,920
choices and i agreed with that and then

1499
00:56:35,920 --> 00:56:37,040
of course the other concerns there

1500
00:56:37,040 --> 00:56:38,720
weren't a ton of implementations uh

1501
00:56:38,720 --> 00:56:40,559
particularly on the server side

1502
00:56:40,559 --> 00:56:43,119
and no interop activity to date that i'm

1503
00:56:43,119 --> 00:56:45,839
aware of

1504
00:56:45,920 --> 00:56:48,079
so some things have happened here uh

1505
00:56:48,079 --> 00:56:50,079
christian uitima has been incredibly

1506
00:56:50,079 --> 00:56:52,880
valuable and fixing the now very much

1507
00:56:52,880 --> 00:56:54,640
misnamed stream site for algorithm into

1508
00:56:54,640 --> 00:56:56,839
something that is a little more secure

1509
00:56:56,839 --> 00:56:59,680
um uh we've kind of just cleaned up some

1510
00:56:59,680 --> 00:57:01,839
of the nomenclature to kind of make it

1511
00:57:01,839 --> 00:57:02,640
less

1512
00:57:02,640 --> 00:57:04,240
three completely disjoint algorithms

1513
00:57:04,240 --> 00:57:06,880
with just um three

1514
00:57:06,880 --> 00:57:08,720
just three different sets of options to

1515
00:57:08,720 --> 00:57:11,040
kind of the same core structure so it's

1516
00:57:11,040 --> 00:57:12,559
just a simplification

1517
00:57:12,559 --> 00:57:14,480
thing um

1518
00:57:14,480 --> 00:57:17,119
an ad a couple drafts ago was dynamic uh

1519
00:57:17,119 --> 00:57:18,960
server id allocation

1520
00:57:18,960 --> 00:57:21,599
not preconfiguring that and um i think

1521
00:57:21,599 --> 00:57:22,480
we've

1522
00:57:22,480 --> 00:57:24,079
reached consensus that it's a little too

1523
00:57:24,079 --> 00:57:26,720
cute and there's there's too many um

1524
00:57:26,720 --> 00:57:28,079
difficult mechanisms associated with

1525
00:57:28,079 --> 00:57:30,559
that that's gone again uh and then i've

1526
00:57:30,559 --> 00:57:32,000
heard some good news about

1527
00:57:32,000 --> 00:57:33,200
implementations but i haven't seen

1528
00:57:33,200 --> 00:57:34,960
anything concrete yet

1529
00:57:34,960 --> 00:57:36,160
again like i know there are a lot of

1530
00:57:36,160 --> 00:57:37,680
server implementers in the room and that

1531
00:57:37,680 --> 00:57:38,799
is where we are

1532
00:57:38,799 --> 00:57:40,880
hurting most um

1533
00:57:40,880 --> 00:57:41,839
if you have a quick server

1534
00:57:41,839 --> 00:57:43,280
implementation many of you do and you

1535
00:57:43,280 --> 00:57:45,040
would like to

1536
00:57:45,040 --> 00:57:47,040
create some server some connection

1537
00:57:47,040 --> 00:57:49,200
degeneration logic uh we have load

1538
00:57:49,200 --> 00:57:50,640
balancers that can interact with you and

1539
00:57:50,640 --> 00:57:54,040
that would be helpful

1540
00:57:55,680 --> 00:57:57,440
there we go okay so this is kind of my

1541
00:57:57,440 --> 00:58:00,640
my dream on how this can move forward um

1542
00:58:00,640 --> 00:58:02,720
uh chris and i have asked for a cfrg

1543
00:58:02,720 --> 00:58:04,319
review of

1544
00:58:04,319 --> 00:58:07,280
the the stream cipher algorithm um since

1545
00:58:07,280 --> 00:58:09,440
it's since christian came up with

1546
00:58:09,440 --> 00:58:10,880
something was kind of a

1547
00:58:10,880 --> 00:58:12,799
variant of effect so we've kind of

1548
00:58:12,799 --> 00:58:14,319
rolled our own crypto so we're going

1549
00:58:14,319 --> 00:58:16,079
through that process now not sure

1550
00:58:16,079 --> 00:58:17,920
exactly what the what the reaction will

1551
00:58:17,920 --> 00:58:18,640
be

1552
00:58:18,640 --> 00:58:21,359
um if that goes well and it shows that

1553
00:58:21,359 --> 00:58:24,000
we have the same or similar

1554
00:58:24,000 --> 00:58:25,839
security properties to the block cipher

1555
00:58:25,839 --> 00:58:27,119
algorithm

1556
00:58:27,119 --> 00:58:28,480
it's not clear to me what the value of

1557
00:58:28,480 --> 00:58:30,000
the block cipher algorithm is there's an

1558
00:58:30,000 --> 00:58:31,599
issue in the github if you want to weigh

1559
00:58:31,599 --> 00:58:33,680
in on this but essentially you'd be

1560
00:58:33,680 --> 00:58:36,000
getting longer c ids the only benefit

1561
00:58:36,000 --> 00:58:38,640
would be fewer crypto passes

1562
00:58:38,640 --> 00:58:40,480
which seems like a not that strong

1563
00:58:40,480 --> 00:58:41,680
advantage

1564
00:58:41,680 --> 00:58:43,200
um and then that would dramatically

1565
00:58:43,200 --> 00:58:44,960
simplify that the document essentially

1566
00:58:44,960 --> 00:58:46,880
have a like a plain text version and the

1567
00:58:46,880 --> 00:58:49,200
cirtex version of the same thing so that

1568
00:58:49,200 --> 00:58:51,280
would be um

1569
00:58:51,280 --> 00:58:53,760
that'd be as simple as you could get um

1570
00:58:53,760 --> 00:58:55,920
i really would like to split the load

1571
00:58:55,920 --> 00:58:58,720
balancer portion of this and the retry

1572
00:58:58,720 --> 00:59:00,400
service portion of this i view them as

1573
00:59:00,400 --> 00:59:02,839
entirely orthogonal with each other

1574
00:59:02,839 --> 00:59:05,440
um the load balancer thing's essentially

1575
00:59:05,440 --> 00:59:07,200
version invariant with a few caveats and

1576
00:59:07,200 --> 00:59:09,520
then retry service thing really is not

1577
00:59:09,520 --> 00:59:11,680
and um i'm getting proposals for things

1578
00:59:11,680 --> 00:59:14,640
like stateless uh reset offload and so

1579
00:59:14,640 --> 00:59:16,319
on and they all just have like the

1580
00:59:16,319 --> 00:59:18,079
common theme of middle box coordination

1581
00:59:18,079 --> 00:59:19,359
but i don't know if that's a strong

1582
00:59:19,359 --> 00:59:20,559
enough thread to hold these two things

1583
00:59:20,559 --> 00:59:22,400
together i've also just kind of become

1584
00:59:22,400 --> 00:59:24,640
enamored of the idea that like

1585
00:59:24,640 --> 00:59:26,400
smaller drafts are better because people

1586
00:59:26,400 --> 00:59:27,760
read them and when there's a lot of

1587
00:59:27,760 --> 00:59:29,520
ancillary stuff that

1588
00:59:29,520 --> 00:59:30,960
half people don't care about just makes

1589
00:59:30,960 --> 00:59:32,799
things worse so i don't know if people's

1590
00:59:32,799 --> 00:59:34,079
strong opinions about that i'll be happy

1591
00:59:34,079 --> 00:59:35,920
to hear from it then after like if all

1592
00:59:35,920 --> 00:59:37,280
this goes according to plan then we do

1593
00:59:37,280 --> 00:59:38,880
another editorial pass then it'd be done

1594
00:59:38,880 --> 00:59:40,480
as it's going to be done that's just the

1595
00:59:40,480 --> 00:59:41,599
question of getting a couple

1596
00:59:41,599 --> 00:59:43,040
implementations that are up in them and

1597
00:59:43,040 --> 00:59:44,240
then we're done

1598
00:59:44,240 --> 00:59:48,160
so let's see do i have another slide yes

1599
00:59:48,160 --> 00:59:49,119
uh

1600
00:59:49,119 --> 00:59:50,160
i don't know if you want to talk about

1601
00:59:50,160 --> 00:59:52,160
the block cid stuff right now

1602
00:59:52,160 --> 00:59:53,839
we can get into that if you want so i'll

1603
00:59:53,839 --> 00:59:57,640
just open the floor for comments

1604
01:00:06,240 --> 01:00:08,559
ian

1605
01:00:08,559 --> 01:00:10,160
uh i the only thing i had to share is

1606
01:00:10,160 --> 01:00:12,240
that i now that we've

1607
01:00:12,240 --> 01:00:13,520
kind of worked our way through our

1608
01:00:13,520 --> 01:00:15,520
backlog of idea of quick work

1609
01:00:15,520 --> 01:00:18,720
in other areas um we are very excited to

1610
01:00:18,720 --> 01:00:20,799
hopefully take this on in the first half

1611
01:00:20,799 --> 01:00:23,440
of 2022 um

1612
01:00:23,440 --> 01:00:24,160
but

1613
01:00:24,160 --> 01:00:25,520
there's still some details to be worked

1614
01:00:25,520 --> 01:00:26,480
out in terms of who's going to do the

1615
01:00:26,480 --> 01:00:28,799
work and everything um but the use cases

1616
01:00:28,799 --> 01:00:30,240
are there and

1617
01:00:30,240 --> 01:00:32,240
everything but that to be said to be

1618
01:00:32,240 --> 01:00:33,119
clear

1619
01:00:33,119 --> 01:00:34,799
that's like the stream cipher protocol

1620
01:00:34,799 --> 01:00:36,720
with like the key rotation and all of

1621
01:00:36,720 --> 01:00:38,319
those sort of mechanisms

1622
01:00:38,319 --> 01:00:40,359
um the key exchange portion and all that

1623
01:00:40,359 --> 01:00:43,200
stuff uh i don't we probably will

1624
01:00:43,200 --> 01:00:44,640
support at some point in the future but

1625
01:00:44,640 --> 01:00:46,559
that's like more of a

1626
01:00:46,559 --> 01:00:48,400
a year from now or more probably sort of

1627
01:00:48,400 --> 01:00:49,760
thing so i think that probably supports

1628
01:00:49,760 --> 01:00:51,359
the idea that at least in our case

1629
01:00:51,359 --> 01:00:53,760
you're gonna get a deployment

1630
01:00:53,760 --> 01:00:55,440
on one of them

1631
01:00:55,440 --> 01:00:57,119
a lot earlier than you're going to get

1632
01:00:57,119 --> 01:00:58,480
deployment on the other half but i don't

1633
01:00:58,480 --> 01:00:59,200
know

1634
01:00:59,200 --> 01:01:00,640
are you talking about the retry service

1635
01:01:00,640 --> 01:01:02,799
versus the

1636
01:01:02,799 --> 01:01:04,960
the um load balancing

1637
01:01:04,960 --> 01:01:06,960
yes sorry that's right okay yeah all

1638
01:01:06,960 --> 01:01:08,640
right super thank you yeah i mean like

1639
01:01:08,640 --> 01:01:10,640
that's the other thing like if we get

1640
01:01:10,640 --> 01:01:12,400
a lot of implications in one i

1641
01:01:12,400 --> 01:01:14,960
anticipate the implementations of one of

1642
01:01:14,960 --> 01:01:16,799
those components versus the other to be

1643
01:01:16,799 --> 01:01:19,280
very asymmetric and if one's ready to go

1644
01:01:19,280 --> 01:01:21,520
i'd just like to move it um and at some

1645
01:01:21,520 --> 01:01:23,520
point i'll i'll produce a mock-up of

1646
01:01:23,520 --> 01:01:24,960
what these book things would look like

1647
01:01:24,960 --> 01:01:28,720
when people shoot at it lucas

1648
01:01:29,040 --> 01:01:31,599
hey martin um have you i'm just curious

1649
01:01:31,599 --> 01:01:33,359
have you had any

1650
01:01:33,359 --> 01:01:36,160
feedback to say that the proposed split

1651
01:01:36,160 --> 01:01:39,680
is is not desirable has anyone kind of

1652
01:01:39,680 --> 01:01:41,520
said that they wouldn't like that

1653
01:01:41,520 --> 01:01:44,240
um i i i brought it up uh like a long

1654
01:01:44,240 --> 01:01:46,000
time ago and got

1655
01:01:46,000 --> 01:01:47,040
like

1656
01:01:47,040 --> 01:01:48,880
i think it's like five or six weeks ago

1657
01:01:48,880 --> 01:01:51,440
and got some negative uh like a little

1658
01:01:51,440 --> 01:01:53,680
bit negative pushback i'm it wasn't

1659
01:01:53,680 --> 01:01:56,240
super strong i'm become more convinced

1660
01:01:56,240 --> 01:01:57,920
this i'm bringing it up again

1661
01:01:57,920 --> 01:02:00,079
uh and you know i don't i don't think i

1662
01:02:00,079 --> 01:02:01,920
haven't really discussed this on the

1663
01:02:01,920 --> 01:02:05,359
list much recently i will do so but this

1664
01:02:05,359 --> 01:02:07,039
is my i'm kind of introducing the topic

1665
01:02:07,039 --> 01:02:08,319
now frankly

1666
01:02:08,319 --> 01:02:12,319
um to allow people to comment

1667
01:02:12,799 --> 01:02:14,640
okay that's cool i think that the list

1668
01:02:14,640 --> 01:02:18,000
is a good venue to continue that um

1669
01:02:18,000 --> 01:02:20,160
i think i i i'm

1670
01:02:20,160 --> 01:02:22,079
trying hat off in personal opinion if

1671
01:02:22,079 --> 01:02:23,280
splitting them is going to help make

1672
01:02:23,280 --> 01:02:25,440
some progress on on the one thing that

1673
01:02:25,440 --> 01:02:27,760
people really do want to implement um

1674
01:02:27,760 --> 01:02:30,000
that seems like a benefit but i'm i'm

1675
01:02:30,000 --> 01:02:31,599
not fully okay with

1676
01:02:31,599 --> 01:02:33,680
with lb to know what the potential

1677
01:02:33,680 --> 01:02:36,559
downside might be for that split

1678
01:02:36,559 --> 01:02:38,480
i mean they're functionally completely i

1679
01:02:38,480 --> 01:02:40,480
mean they can in theory be implemented

1680
01:02:40,480 --> 01:02:42,480
on the same device but there there's

1681
01:02:42,480 --> 01:02:44,640
there's no real relationship between the

1682
01:02:44,640 --> 01:02:45,839
two um

1683
01:02:45,839 --> 01:02:47,680
they're together because they were again

1684
01:02:47,680 --> 01:02:49,760
under the theme of middlebox

1685
01:02:49,760 --> 01:02:52,160
uh cooperation um

1686
01:02:52,160 --> 01:02:53,599
which is a pretty weak threat in my view

1687
01:02:53,599 --> 01:02:55,440
so there's a comment in the chat about

1688
01:02:55,440 --> 01:02:56,960
they missed the cfrg email that's

1689
01:02:56,960 --> 01:02:58,319
because we didn't actually go directly

1690
01:02:58,319 --> 01:03:00,799
to cfrg upon the advice of the security

1691
01:03:00,799 --> 01:03:03,200
ids we contact a couple people directly

1692
01:03:03,200 --> 01:03:05,359
um if other people like provide a crypto

1693
01:03:05,359 --> 01:03:08,000
review of what of specific specifically

1694
01:03:08,000 --> 01:03:10,319
section 5.2 the stream site for cid like

1695
01:03:10,319 --> 01:03:11,520
that would be

1696
01:03:11,520 --> 01:03:12,559
um

1697
01:03:12,559 --> 01:03:14,559
very welcome i i just i received the

1698
01:03:14,559 --> 01:03:16,000
advice it would be better to actually

1699
01:03:16,000 --> 01:03:19,200
contact people directly

1700
01:03:24,480 --> 01:03:26,480
any uh matt are you in the queue or you

1701
01:03:26,480 --> 01:03:27,920
just um

1702
01:03:27,920 --> 01:03:29,359
i'm mostly hanging out but i was going

1703
01:03:29,359 --> 01:03:31,680
to say one thing which is that um

1704
01:03:31,680 --> 01:03:33,839
i was curious what you're in from a

1705
01:03:33,839 --> 01:03:35,359
chair perspective what what is your

1706
01:03:35,359 --> 01:03:38,079
opinion on uh

1707
01:03:38,079 --> 01:03:39,200
this

1708
01:03:39,200 --> 01:03:42,000
necessity for interop for you know

1709
01:03:42,000 --> 01:03:43,200
are you

1710
01:03:43,200 --> 01:03:44,880
are we comfortable like

1711
01:03:44,880 --> 01:03:46,000
because it seems like there hasn't been

1712
01:03:46,000 --> 01:03:48,400
a lot of design issues or things

1713
01:03:48,400 --> 01:03:50,000
recently besides the things you

1714
01:03:50,000 --> 01:03:51,680
mentioned and so

1715
01:03:51,680 --> 01:03:53,760
you know do we wait on

1716
01:03:53,760 --> 01:03:55,839
interop do we wait on and do we have to

1717
01:03:55,839 --> 01:03:58,240
interrupt everything or what and deploy

1718
01:03:58,240 --> 01:04:00,559
it or what i was just curious what your

1719
01:04:00,559 --> 01:04:01,920
thoughts are on that

1720
01:04:01,920 --> 01:04:04,079
so i i have like two concerns with the

1721
01:04:04,079 --> 01:04:05,920
surety i'm beyond beyond just kind of my

1722
01:04:05,920 --> 01:04:07,680
ideal path and how this proceeds i to

1723
01:04:07,680 --> 01:04:09,280
consider my maturity number one is that

1724
01:04:09,280 --> 01:04:10,720
the document is written in a way that

1725
01:04:10,720 --> 01:04:12,160
it's implementable because obviously i

1726
01:04:12,160 --> 01:04:13,760
knew what i meant when i implemented it

1727
01:04:13,760 --> 01:04:16,240
um which it doesn't uh

1728
01:04:16,240 --> 01:04:17,520
mean a ton

1729
01:04:17,520 --> 01:04:19,760
and then the second thing um

1730
01:04:19,760 --> 01:04:22,240
and i hope that especially google's uh

1731
01:04:22,240 --> 01:04:23,680
intentions are helpful here like

1732
01:04:23,680 --> 01:04:25,680
actually

1733
01:04:25,680 --> 01:04:27,039
trying to deploy this thing and

1734
01:04:27,039 --> 01:04:29,200
developing some uh

1735
01:04:29,200 --> 01:04:30,319
like we have we have sort of a

1736
01:04:30,319 --> 01:04:32,000
configuration model that has some

1737
01:04:32,000 --> 01:04:33,839
assumptions and it'll be really nice to

1738
01:04:33,839 --> 01:04:36,400
like test that against actual production

1739
01:04:36,400 --> 01:04:38,839
somehow so i'm really eager to

1740
01:04:38,839 --> 01:04:41,200
hear um

1741
01:04:41,200 --> 01:04:43,200
to hear like what the what the issues

1742
01:04:43,200 --> 01:04:45,119
are with google and like what the rough

1743
01:04:45,119 --> 01:04:46,640
edges on sort of the assumptions we make

1744
01:04:46,640 --> 01:04:48,319
on how to configure things and like what

1745
01:04:48,319 --> 01:04:50,160
what what the pain points are i know

1746
01:04:50,160 --> 01:04:52,240
that uh my my co-author nick banks has

1747
01:04:52,240 --> 01:04:54,799
like been working with azure uh on this

1748
01:04:54,799 --> 01:04:56,960
stuff and it hasn't gone super well in

1749
01:04:56,960 --> 01:04:58,720
terms of getting them to to provide good

1750
01:04:58,720 --> 01:05:00,000
feedback so

1751
01:05:00,000 --> 01:05:01,440
um those are really those are the only

1752
01:05:01,440 --> 01:05:03,520
reason other than just like the clean up

1753
01:05:03,520 --> 01:05:04,640
in the draft that's those are the

1754
01:05:04,640 --> 01:05:06,160
reasons those are the two things where i

1755
01:05:06,160 --> 01:05:08,240
just don't want to like hit the wtlc

1756
01:05:08,240 --> 01:05:10,879
button right now

1757
01:05:16,799 --> 01:05:18,319
uh all right if there's nothing else i'm

1758
01:05:18,319 --> 01:05:19,359
going to give back the balance of my

1759
01:05:19,359 --> 01:05:20,839
time

1760
01:05:20,839 --> 01:05:23,599
thanks thank you martin that's very kind

1761
01:05:23,599 --> 01:05:25,680
of you um

1762
01:05:25,680 --> 01:05:28,480
okay so mira is jumping in the queue

1763
01:05:28,480 --> 01:05:29,839
it's time for

1764
01:05:29,839 --> 01:05:31,920
the uh new work

1765
01:05:31,920 --> 01:05:34,880
topic um samaria take it away

1766
01:05:34,880 --> 01:05:39,280
on the topic of multi-path extension

1767
01:05:46,559 --> 01:05:49,039
okay hello everybody um so yeah i'm

1768
01:05:49,039 --> 01:05:51,760
amelia i'm presenting um a new draft

1769
01:05:51,760 --> 01:05:53,839
here um but effectively this is not new

1770
01:05:53,839 --> 01:05:56,000
work um there has been previously uh

1771
01:05:56,000 --> 01:05:57,359
three different drafts and as you can

1772
01:05:57,359 --> 01:05:59,119
see here on this new draft we have a set

1773
01:05:59,119 --> 01:06:01,680
of authors that actually combines

1774
01:06:01,680 --> 01:06:03,359
the authors from the previous draft so

1775
01:06:03,359 --> 01:06:05,039
that's the content

1776
01:06:05,039 --> 01:06:07,599
um so let's move to the next uh i have

1777
01:06:07,599 --> 01:06:10,160
to i can just control this myself okay

1778
01:06:10,160 --> 01:06:12,880
yeah so what happened so far um lucas

1779
01:06:12,880 --> 01:06:15,440
already uh mentioned that we had an

1780
01:06:15,440 --> 01:06:16,880
interview meeting about a year ago where

1781
01:06:16,880 --> 01:06:19,359
we talked about quick use cases mainly

1782
01:06:19,359 --> 01:06:20,960
requirements and since then there was a

1783
01:06:20,960 --> 01:06:22,559
lot of work and people have been working

1784
01:06:22,559 --> 01:06:23,839
on implementations there were three

1785
01:06:23,839 --> 01:06:26,319
different proposals and in order to move

1786
01:06:26,319 --> 01:06:28,480
forward from here we somehow needed to

1787
01:06:28,480 --> 01:06:30,160
agree what the right way is to move

1788
01:06:30,160 --> 01:06:32,400
forward like combining those proposals

1789
01:06:32,400 --> 01:06:34,720
and and getting one way out of this um

1790
01:06:34,720 --> 01:06:36,720
so um i got in touch with all the

1791
01:06:36,720 --> 01:06:38,799
authors from uh from all the draft and

1792
01:06:38,799 --> 01:06:40,960
there was already a lot of agreement

1793
01:06:40,960 --> 01:06:42,960
about what to do and everybody was like

1794
01:06:42,960 --> 01:06:45,440
so um on board for having one unified

1795
01:06:45,440 --> 01:06:47,119
solution immediately

1796
01:06:47,119 --> 01:06:49,920
um so we had a site meeting only a few

1797
01:06:49,920 --> 01:06:52,640
weeks ago where we discussed how um to

1798
01:06:52,640 --> 01:06:54,880
move forward here and as a result of

1799
01:06:54,880 --> 01:06:56,400
that we recently published this new

1800
01:06:56,400 --> 01:06:58,960
draft which does take parts of

1801
01:06:58,960 --> 01:07:02,640
the the other three drafts um

1802
01:07:02,640 --> 01:07:03,440
so

1803
01:07:03,440 --> 01:07:04,799
this presentation will give you an

1804
01:07:04,799 --> 01:07:06,480
overview about what's what's the focus

1805
01:07:06,480 --> 01:07:07,760
in the new draft and what's in the new

1806
01:07:07,760 --> 01:07:08,720
draft

1807
01:07:08,720 --> 01:07:11,119
and this is um the most important

1808
01:07:11,119 --> 01:07:12,880
outcome from all the discussion we had

1809
01:07:12,880 --> 01:07:14,720
is that the new draft is really focusing

1810
01:07:14,720 --> 01:07:16,480
on the core components

1811
01:07:16,480 --> 01:07:18,240
so in the other three drafts there were

1812
01:07:18,240 --> 01:07:20,960
always parts which were like not core

1813
01:07:20,960 --> 01:07:23,760
components which were things like um qe

1814
01:07:23,760 --> 01:07:26,160
handling um address discovery and this

1815
01:07:26,160 --> 01:07:27,359
kind of things

1816
01:07:27,359 --> 01:07:29,200
and in order to move forward we really

1817
01:07:29,200 --> 01:07:30,799
want to focus on those things that are

1818
01:07:30,799 --> 01:07:33,520
needed to establish multipath

1819
01:07:33,520 --> 01:07:35,039
usage of

1820
01:07:35,039 --> 01:07:37,520
of multiple paths simultaneously

1821
01:07:37,520 --> 01:07:39,680
so that means the current draft

1822
01:07:39,680 --> 01:07:41,359
as a core component has of course the

1823
01:07:41,359 --> 01:07:44,160
negotiation of a new extension it has

1824
01:07:44,160 --> 01:07:46,319
a minimal set of path management that is

1825
01:07:46,319 --> 01:07:48,480
needed about setting up inclusion close

1826
01:07:48,480 --> 01:07:51,440
new path um or old pass in that case

1827
01:07:51,440 --> 01:07:53,440
it talks a little bit about scheduling

1828
01:07:53,440 --> 01:07:55,200
but that's really minimal at this point

1829
01:07:55,200 --> 01:07:56,640
we probably need a few more words but

1830
01:07:56,640 --> 01:07:58,880
don't want to talk about it extensively

1831
01:07:58,880 --> 01:08:01,039
only what's needed to make it work and

1832
01:08:01,039 --> 01:08:02,640
then it talks about how to actually

1833
01:08:02,640 --> 01:08:04,160
transmit and retransmit packets so

1834
01:08:04,160 --> 01:08:06,240
that's it that's the core everything

1835
01:08:06,240 --> 01:08:07,920
else that has been previously um

1836
01:08:07,920 --> 01:08:10,000
discussed like more advanced scheduling

1837
01:08:10,000 --> 01:08:12,480
mechanisms or unidirectional passes

1838
01:08:12,480 --> 01:08:15,359
address disc discovery or any kind of qs

1839
01:08:15,359 --> 01:08:17,359
handling and these are things that could

1840
01:08:17,359 --> 01:08:20,880
come up later on in additional drafts or

1841
01:08:20,880 --> 01:08:23,439
could be additional extensions on top of

1842
01:08:23,439 --> 01:08:25,839
that

1843
01:08:27,520 --> 01:08:29,198
so the other thing that we had like very

1844
01:08:29,198 --> 01:08:31,040
broad agreement on is that

1845
01:08:31,040 --> 01:08:32,799
one of the important design principles

1846
01:08:32,799 --> 01:08:34,799
here is to use as much as possible from

1847
01:08:34,799 --> 01:08:37,040
rfc 9000

1848
01:08:37,040 --> 01:08:39,198
and this is also kind of the feedback i

1849
01:08:39,198 --> 01:08:40,960
not only got from the authors but from

1850
01:08:40,960 --> 01:08:42,880
everybody else i talked like please keep

1851
01:08:42,880 --> 01:08:44,719
this as simple as possible and that

1852
01:08:44,719 --> 01:08:47,279
means make minimal set of changes here

1853
01:08:47,279 --> 01:08:49,040
and we actually try to do that so what

1854
01:08:49,040 --> 01:08:50,960
we don't change is past validation we

1855
01:08:50,960 --> 01:08:53,600
completely keep it as it is in a quick

1856
01:08:53,600 --> 01:08:56,080
version one and uh and as used for pass

1857
01:08:56,080 --> 01:08:57,198
migration

1858
01:08:57,198 --> 01:08:59,120
uh we don't have to change basically

1859
01:08:59,120 --> 01:09:00,479
anything about congestion control

1860
01:09:00,479 --> 01:09:02,238
because congestion flow was always per

1861
01:09:02,238 --> 01:09:04,479
path so when you had migration you had

1862
01:09:04,479 --> 01:09:06,158
to reset your congestion control and now

1863
01:09:06,158 --> 01:09:07,759
you have to run multiple congestion

1864
01:09:07,759 --> 01:09:09,920
controls in parallel for each path we

1865
01:09:09,920 --> 01:09:12,158
didn't change the header format and also

1866
01:09:12,158 --> 01:09:15,120
didn't change anything in the in the r0

1867
01:09:15,120 --> 01:09:17,120
rtt packet so everything that we do for

1868
01:09:17,120 --> 01:09:21,679
multipass is done for one rtt packets

1869
01:09:21,679 --> 01:09:24,000
there is another design principle which

1870
01:09:24,000 --> 01:09:26,719
is kind of uh important is that

1871
01:09:26,719 --> 01:09:28,960
we define a path as a four tuple that

1872
01:09:28,960 --> 01:09:31,600
may makes some things some assumptions

1873
01:09:31,600 --> 01:09:33,520
easier and it mainly means that you can

1874
01:09:33,520 --> 01:09:37,199
only have one path before chapel

1875
01:09:39,359 --> 01:09:41,120
so what did we change or what what did

1876
01:09:41,120 --> 01:09:43,040
we add i probably have to say

1877
01:09:43,040 --> 01:09:45,040
what we add is that we kind of not only

1878
01:09:45,040 --> 01:09:46,640
want migration but we actually want

1879
01:09:46,640 --> 01:09:49,120
simultaneous use of multiple path so

1880
01:09:49,120 --> 01:09:52,479
that means that you can send non-probing

1881
01:09:52,479 --> 01:09:54,400
frames on multiple paths at the same

1882
01:09:54,400 --> 01:09:55,760
time so this is something that is not

1883
01:09:55,760 --> 01:09:58,640
allowed by rsc 9000 and that's something

1884
01:09:58,640 --> 01:10:00,320
we want to enable here

1885
01:10:00,320 --> 01:10:02,400
um so that's one change and the other

1886
01:10:02,400 --> 01:10:04,239
change is that we now that you have like

1887
01:10:04,239 --> 01:10:06,239
multiple open paths you also have to

1888
01:10:06,239 --> 01:10:08,320
care about clothing those paths so

1889
01:10:08,320 --> 01:10:10,320
that's some additional

1890
01:10:10,320 --> 01:10:12,640
mechanics that we added here um but it's

1891
01:10:12,640 --> 01:10:16,080
also not a lot of stuff i have to say

1892
01:10:16,080 --> 01:10:17,280
and there are a few additional

1893
01:10:17,280 --> 01:10:19,920
considerations about recovery and for

1894
01:10:19,920 --> 01:10:23,120
example rtt estimation and these all

1895
01:10:23,120 --> 01:10:25,840
depend a little bit about how you kind

1896
01:10:25,840 --> 01:10:28,080
of implement acting and packet number

1897
01:10:28,080 --> 01:10:30,080
spaces because you really need to figure

1898
01:10:30,080 --> 01:10:32,560
out for rtt estimation and loss recovery

1899
01:10:32,560 --> 01:10:34,719
in which packet which packet was sent on

1900
01:10:34,719 --> 01:10:36,560
which path and depending on what

1901
01:10:36,560 --> 01:10:38,000
solution you choose for your packet

1902
01:10:38,000 --> 01:10:40,320
number spaces that might be easier or

1903
01:10:40,320 --> 01:10:42,000
harder

1904
01:10:42,000 --> 01:10:43,679
before i talk more about packet number

1905
01:10:43,679 --> 01:10:45,760
spaces which is like one of the open

1906
01:10:45,760 --> 01:10:47,920
points i just um show you on the next

1907
01:10:47,920 --> 01:10:48,800
slide

1908
01:10:48,800 --> 01:10:50,480
what we are proposing to do in this

1909
01:10:50,480 --> 01:10:52,000
draft right now

1910
01:10:52,000 --> 01:10:53,760
so what we have in the draft right now

1911
01:10:53,760 --> 01:10:56,320
is that you can actually negotiate

1912
01:10:56,320 --> 01:10:59,040
um either use of one packet number space

1913
01:10:59,040 --> 01:11:01,199
or use of model packer number space or

1914
01:11:01,199 --> 01:11:03,280
you can in indicate in the handshake

1915
01:11:03,280 --> 01:11:05,600
that you support both if both ends

1916
01:11:05,600 --> 01:11:07,440
support both

1917
01:11:07,440 --> 01:11:09,199
implementations you will use multiple

1918
01:11:09,199 --> 01:11:10,960
packet number space that is actually not

1919
01:11:10,960 --> 01:11:12,800
in the currency or zero draft version

1920
01:11:12,800 --> 01:11:15,440
but that's a pr we already merged into

1921
01:11:15,440 --> 01:11:17,280
the next update because that wasn't

1922
01:11:17,280 --> 01:11:19,360
clearly specified

1923
01:11:19,360 --> 01:11:21,040
so what does it mean one packet number

1924
01:11:21,040 --> 01:11:23,760
or multiple packet number um easy so

1925
01:11:23,760 --> 01:11:25,840
with one packet number space

1926
01:11:25,840 --> 01:11:27,440
every packet you want to send out gets

1927
01:11:27,440 --> 01:11:29,199
the new packet number in order and then

1928
01:11:29,199 --> 01:11:30,719
you decide to send it out on one or the

1929
01:11:30,719 --> 01:11:32,880
other paths so you might send out packet

1930
01:11:32,880 --> 01:11:34,960
one on one pass and pack it on the other

1931
01:11:34,960 --> 01:11:37,199
pass if you have multiple packet number

1932
01:11:37,199 --> 01:11:39,120
spaces the packet numbers are

1933
01:11:39,120 --> 01:11:41,120
independent on each path

1934
01:11:41,120 --> 01:11:43,280
uh and you can have packet one on pass

1935
01:11:43,280 --> 01:11:44,960
number one and you can have packet one

1936
01:11:44,960 --> 01:11:46,320
on pass number two but you have to

1937
01:11:46,320 --> 01:11:50,159
identify which path this was sent on

1938
01:11:50,159 --> 01:11:52,239
um we have those two options in the

1939
01:11:52,239 --> 01:11:54,320
negotiation and in the specification of

1940
01:11:54,320 --> 01:11:56,239
the current version of the draft but

1941
01:11:56,239 --> 01:11:58,159
this is to able evaluation and

1942
01:11:58,159 --> 01:12:00,080
implementation experience

1943
01:12:00,080 --> 01:12:02,000
and this is not is there's no intention

1944
01:12:02,000 --> 01:12:04,080
to publish this kind of negotiation for

1945
01:12:04,080 --> 01:12:06,960
the final version of of this extension

1946
01:12:06,960 --> 01:12:08,640
in any rsc

1947
01:12:08,640 --> 01:12:10,880
um but we proposed to actually take it

1948
01:12:10,880 --> 01:12:12,560
on in a working group like this so we

1949
01:12:12,560 --> 01:12:14,560
can get more experience here and make

1950
01:12:14,560 --> 01:12:16,320
progress and have more

1951
01:12:16,320 --> 01:12:19,520
um discussion about this

1952
01:12:19,520 --> 01:12:22,640
so on this slide i try to on a high

1953
01:12:22,640 --> 01:12:24,800
level summarize the current discussion

1954
01:12:24,800 --> 01:12:26,560
about packet number spaces and why it's

1955
01:12:26,560 --> 01:12:28,719
not easy to make a decision right away

1956
01:12:28,719 --> 01:12:30,480
we had some discussion about this in the

1957
01:12:30,480 --> 01:12:32,640
site meeting there's also a nice slide

1958
01:12:32,640 --> 01:12:34,640
set from christian hittimer about this

1959
01:12:34,640 --> 01:12:36,719
if you want to learn more but you know

1960
01:12:36,719 --> 01:12:38,400
the high level message on this slide is

1961
01:12:38,400 --> 01:12:40,000
there are pros and cons for both of the

1962
01:12:40,000 --> 01:12:42,320
approaches

1963
01:12:42,320 --> 01:12:43,840
um

1964
01:12:43,840 --> 01:12:45,920
so i think i'm starting with the cons

1965
01:12:45,920 --> 01:12:47,760
for some single number packet number

1966
01:12:47,760 --> 01:12:49,360
space here so the cons for the single

1967
01:12:49,360 --> 01:12:51,440
packet number space is actually it it's

1968
01:12:51,440 --> 01:12:54,320
a kind of easy um

1969
01:12:54,320 --> 01:12:56,560
the pro sorry that it's kind of easy to

1970
01:12:56,560 --> 01:12:59,280
implement it's it's only a few um lines

1971
01:12:59,280 --> 01:13:01,840
of code that you need to add or change

1972
01:13:01,840 --> 01:13:04,320
um and and the other pros also that it

1973
01:13:04,320 --> 01:13:05,600
does work with

1974
01:13:05,600 --> 01:13:07,600
zero length connection id

1975
01:13:07,600 --> 01:13:10,320
um the cons are that you can come into a

1976
01:13:10,320 --> 01:13:12,159
situation where you actually increase

1977
01:13:12,159 --> 01:13:14,000
your ag frame size

1978
01:13:14,000 --> 01:13:15,199
um

1979
01:13:15,199 --> 01:13:17,120
noticeably so especially if you have two

1980
01:13:17,120 --> 01:13:18,320
paths which have very different

1981
01:13:18,320 --> 01:13:19,520
latencies you might get a lot of

1982
01:13:19,520 --> 01:13:22,239
reordering um you can be smart about how

1983
01:13:22,239 --> 01:13:23,760
you schedule the packets or how you

1984
01:13:23,760 --> 01:13:26,159
create your ex and try to reduce that

1985
01:13:26,159 --> 01:13:28,320
but the problem or the con maybe is that

1986
01:13:28,320 --> 01:13:29,600
you have to be smart it's not

1987
01:13:29,600 --> 01:13:31,120
straightforward you have to do it right

1988
01:13:31,120 --> 01:13:32,960
and maybe there's also more chance for

1989
01:13:32,960 --> 01:13:35,040
doing something wrong

1990
01:13:35,040 --> 01:13:37,520
on the multiple packet number spaces

1991
01:13:37,520 --> 01:13:39,679
um you you don't have that problem so

1992
01:13:39,679 --> 01:13:41,760
that's one of the big cons it's very um

1993
01:13:41,760 --> 01:13:43,840
clear which packet belongs to which path

1994
01:13:43,840 --> 01:13:45,760
there's no ambiguity about you know

1995
01:13:45,760 --> 01:13:47,600
where the packet was lost or about when

1996
01:13:47,600 --> 01:13:49,040
you calculate the round trip time or

1997
01:13:49,040 --> 01:13:51,440
anything like that and your pack your

1998
01:13:51,440 --> 01:13:54,719
egg frames are smaller and clearer and

1999
01:13:54,719 --> 01:13:56,960
so the the logic that you have to

2000
01:13:56,960 --> 01:13:59,840
implement is easier however

2001
01:13:59,840 --> 01:14:01,760
you have to have more code

2002
01:14:01,760 --> 01:14:03,600
more lines of code and you have to have

2003
01:14:03,600 --> 01:14:05,600
code that is specific for this extension

2004
01:14:05,600 --> 01:14:08,320
only and might not be used in a single

2005
01:14:08,320 --> 01:14:10,159
pass

2006
01:14:10,159 --> 01:14:12,880
implementation or setup

2007
01:14:12,880 --> 01:14:14,719
the other drawback of the multiple

2008
01:14:14,719 --> 01:14:16,320
packet number space is that currently

2009
01:14:16,320 --> 01:14:18,800
you we have to require connection ids in

2010
01:14:18,800 --> 01:14:20,880
both directions to make this work but

2011
01:14:20,880 --> 01:14:22,320
that is actually something that is under

2012
01:14:22,320 --> 01:14:23,920
discussion and maybe um we come up with

2013
01:14:23,920 --> 01:14:27,120
some smart ideas here as well

2014
01:14:27,120 --> 01:14:29,520
um so but um effectively i don't think i

2015
01:14:29,520 --> 01:14:30,800
want to discuss

2016
01:14:30,800 --> 01:14:32,560
this topic here today i think what we

2017
01:14:32,560 --> 01:14:34,000
need and what i said earlier is we need

2018
01:14:34,000 --> 01:14:35,920
more implementation experience and

2019
01:14:35,920 --> 01:14:37,840
feedback about this and then hopefully

2020
01:14:37,840 --> 01:14:39,120
have this discussion further in the

2021
01:14:39,120 --> 01:14:40,800
working group instead of making decision

2022
01:14:40,800 --> 01:14:43,840
right here

2023
01:14:47,280 --> 01:14:49,040
um yeah

2024
01:14:49,040 --> 01:14:51,760
we have a few people in the queue um

2025
01:14:51,760 --> 01:14:53,120
yes

2026
01:14:53,120 --> 01:14:54,560
i was trying to look at this right now

2027
01:14:54,560 --> 01:14:56,960
let's uh let's actually break here

2028
01:14:56,960 --> 01:14:59,120
and take those questions yeah if you're

2029
01:14:59,120 --> 01:15:00,560
okay with that mirror i'd like to keep

2030
01:15:00,560 --> 01:15:02,960
this on for clarifying questions for for

2031
01:15:02,960 --> 01:15:04,640
what's been said already um we'll have

2032
01:15:04,640 --> 01:15:06,480
time for discussion at the end

2033
01:15:06,480 --> 01:15:09,600
so um kazuho please

2034
01:15:09,600 --> 01:15:12,239
fire away

2035
01:15:12,719 --> 01:15:14,560
thanks for the presentation

2036
01:15:14,560 --> 01:15:16,640
uh i have one question so one of the

2037
01:15:16,640 --> 01:15:18,880
slides says that a path is defined as

2038
01:15:18,880 --> 01:15:21,040
faultable being bi-directional

2039
01:15:21,040 --> 01:15:22,880
does that mean that if you receive

2040
01:15:22,880 --> 01:15:25,199
packets on path x you have to send out

2041
01:15:25,199 --> 01:15:28,080
for those packets on pathx

2042
01:15:28,080 --> 01:15:30,400
no it it it means that you have to be

2043
01:15:30,400 --> 01:15:32,239
able to receive packets on that pat on

2044
01:15:32,239 --> 01:15:33,920
that pass and and that's something that

2045
01:15:33,920 --> 01:15:35,840
you check during past validation but

2046
01:15:35,840 --> 01:15:37,600
where how to schedule packets and how to

2047
01:15:37,600 --> 01:15:40,080
schedule their your x is is i think

2048
01:15:40,080 --> 01:15:41,679
actually not specified that much in the

2049
01:15:41,679 --> 01:15:42,880
draft currently that's left to the

2050
01:15:42,880 --> 01:15:44,640
implementation

2051
01:15:44,640 --> 01:15:46,640
so there's no requirement to set send

2052
01:15:46,640 --> 01:15:48,480
the x on the same path

2053
01:15:48,480 --> 01:15:51,718
thank you

2054
01:15:56,000 --> 01:15:58,320
uh can you hear me

2055
01:15:58,320 --> 01:15:59,120
yes

2056
01:15:59,120 --> 01:16:00,960
yeah so i have reading you know the

2057
01:16:00,960 --> 01:16:03,360
emergency act so um i just got one

2058
01:16:03,360 --> 01:16:05,840
comment so i suggest that maybe we can

2059
01:16:05,840 --> 01:16:07,280
add some use quiz

2060
01:16:07,280 --> 01:16:09,120
or some um

2061
01:16:09,120 --> 01:16:11,280
some paragraph in the introduction to

2062
01:16:11,280 --> 01:16:15,040
describe uh explicitly so how do we how

2063
01:16:15,040 --> 01:16:16,640
how we can use that

2064
01:16:16,640 --> 01:16:19,280
uh and be quick so the reason is so now

2065
01:16:19,280 --> 01:16:22,640
you should know that uh the cpr

2066
01:16:22,640 --> 01:16:28,239
um r18 has um has the release 18 has

2067
01:16:28,239 --> 01:16:30,960
discussed the atss for a long time

2068
01:16:30,960 --> 01:16:33,360
and several companies strong support

2069
01:16:33,360 --> 01:16:35,679
uh to add the multi-pass

2070
01:16:35,679 --> 01:16:38,080
functionalities into the attackers to

2071
01:16:38,080 --> 01:16:40,480
achieve um you know the

2072
01:16:40,480 --> 01:16:42,080
traffic splitting or

2073
01:16:42,080 --> 01:16:44,880
even redundant transmissions so i think

2074
01:16:44,880 --> 01:16:48,000
uh so i think one of the the valuable

2075
01:16:48,000 --> 01:16:50,800
things here is that uh so perhaps we can

2076
01:16:50,800 --> 01:16:52,159
if we can

2077
01:16:52,159 --> 01:16:53,920
complete a uh

2078
01:16:53,920 --> 01:16:56,560
and a quick work for just before the uh

2079
01:16:56,560 --> 01:16:58,400
the completion of the release 18 and

2080
01:16:58,400 --> 01:17:00,320
then we can we can

2081
01:17:00,320 --> 01:17:03,920
try to uh to adopt this this uh rfc into

2082
01:17:03,920 --> 01:17:06,880
the real estate team that's maybe

2083
01:17:06,880 --> 01:17:09,760
it's it's it's it's a good way to uh

2084
01:17:09,760 --> 01:17:10,719
to

2085
01:17:10,719 --> 01:17:12,400
like to you know

2086
01:17:12,400 --> 01:17:13,520
uh

2087
01:17:13,520 --> 01:17:16,239
to make this drive you need to implement

2088
01:17:16,239 --> 01:17:17,840
into the in the

2089
01:17:17,840 --> 01:17:19,840
real world case so actually i stopped in

2090
01:17:19,840 --> 01:17:21,440
a uh

2091
01:17:21,440 --> 01:17:23,679
use case draft before for this meeting

2092
01:17:23,679 --> 01:17:25,360
so i'm not sure whether i can share my

2093
01:17:25,360 --> 01:17:26,239
screen

2094
01:17:26,239 --> 01:17:28,400
uh for sometimes

2095
01:17:28,400 --> 01:17:31,199
or i can just just simply describe that

2096
01:17:31,199 --> 01:17:33,520
the the the draft

2097
01:17:33,520 --> 01:17:34,560
we're sure

2098
01:17:34,560 --> 01:17:36,480
we need to focus on the discussion here

2099
01:17:36,480 --> 01:17:38,640
um

2100
01:17:38,640 --> 01:17:39,840
yeah we need to just keep this to

2101
01:17:39,840 --> 01:17:42,080
clarifying questions about the president

2102
01:17:42,080 --> 01:17:46,080
okay so uh i just i i okay let me simply

2103
01:17:46,080 --> 01:17:48,480
describe so i just have a

2104
01:17:48,480 --> 01:17:50,480
point

2105
01:17:50,480 --> 01:17:51,920
um

2106
01:17:51,920 --> 01:17:53,760
i i agree with you i think this is a

2107
01:17:53,760 --> 01:17:55,199
very important use case and i'm

2108
01:17:55,199 --> 01:17:57,360
supporting that as well um

2109
01:17:57,360 --> 01:17:58,880
and um

2110
01:17:58,880 --> 01:18:00,159
we should prob maybe have some more

2111
01:18:00,159 --> 01:18:01,679
discussion in future but probably not in

2112
01:18:01,679 --> 01:18:02,960
this meeting so i think in this reading

2113
01:18:02,960 --> 01:18:04,560
we should figure out what are the basic

2114
01:18:04,560 --> 01:18:06,640
concepts that we want to see in a draft

2115
01:18:06,640 --> 01:18:08,239
and then move forward and and have this

2116
01:18:08,239 --> 01:18:10,560
discussion later if that's okay for you

2117
01:18:10,560 --> 01:18:13,360
okay so so perhaps uh yeah once we have

2118
01:18:13,360 --> 01:18:15,679
um once we've upgraded on the uh on the

2119
01:18:15,679 --> 01:18:18,400
basic setup quick shot maybe for the for

2120
01:18:18,400 --> 01:18:20,320
the extension so we can consider to add

2121
01:18:20,320 --> 01:18:22,320
some introduction and some descriptions

2122
01:18:22,320 --> 01:18:23,199
about

2123
01:18:23,199 --> 01:18:24,080
how to

2124
01:18:24,080 --> 01:18:26,400
you know how to advertise the uh the

2125
01:18:26,400 --> 01:18:28,880
draft into a different organization

2126
01:18:28,880 --> 01:18:30,239
okay

2127
01:18:30,239 --> 01:18:31,920
thank you yeah i think that might be a

2128
01:18:31,920 --> 01:18:33,600
rather separate draft than something in

2129
01:18:33,600 --> 01:18:35,120
the introduction yeah but

2130
01:18:35,120 --> 01:18:37,920
um yeah something to consider later

2131
01:18:37,920 --> 01:18:39,360
yeah thanks

2132
01:18:39,360 --> 01:18:41,839
diana

2133
01:18:44,320 --> 01:18:45,920
uh thanks a very quick clarifying

2134
01:18:45,920 --> 01:18:48,480
question um maria you said that the

2135
01:18:48,480 --> 01:18:51,120
decision between these two choices would

2136
01:18:51,120 --> 01:18:53,199
require more implementation experience

2137
01:18:53,199 --> 01:18:55,280
and matt said on chat that this would be

2138
01:18:55,280 --> 01:18:57,120
the first design decision that we would

2139
01:18:57,120 --> 01:18:59,280
make if this draft were to be adopted

2140
01:18:59,280 --> 01:19:02,000
those two are very different points and

2141
01:19:02,000 --> 01:19:03,520
i don't need it right now but it'd be

2142
01:19:03,520 --> 01:19:05,760
useful to clarify what exactly the path

2143
01:19:05,760 --> 01:19:07,520
forward would be because i would like to

2144
01:19:07,520 --> 01:19:08,960
push against something which i'm not

2145
01:19:08,960 --> 01:19:10,960
gonna do right now but this is

2146
01:19:10,960 --> 01:19:12,560
asking for clarification for what that

2147
01:19:12,560 --> 01:19:14,880
would be

2148
01:19:16,960 --> 01:19:18,000
um

2149
01:19:18,000 --> 01:19:18,960
so

2150
01:19:18,960 --> 01:19:22,640
if you ask me um i think for example

2151
01:19:22,640 --> 01:19:24,880
people deciding to only decide implement

2152
01:19:24,880 --> 01:19:26,480
one or the other

2153
01:19:26,480 --> 01:19:28,159
you know is good input for this group if

2154
01:19:28,159 --> 01:19:30,000
we have everybody at the end decides to

2155
01:19:30,000 --> 01:19:32,159
only implement one of the approaches

2156
01:19:32,159 --> 01:19:33,520
then we have a decision we don't need

2157
01:19:33,520 --> 01:19:35,760
much discussion about it

2158
01:19:35,760 --> 01:19:38,000
but i'm also pretty sure that depending

2159
01:19:38,000 --> 01:19:39,280
on the stack you're having your

2160
01:19:39,280 --> 01:19:40,640
implementation experience might be

2161
01:19:40,640 --> 01:19:42,080
different so more input would be

2162
01:19:42,080 --> 01:19:43,360
valuable here because based on the

2163
01:19:43,360 --> 01:19:45,520
implementations we have so far

2164
01:19:45,520 --> 01:19:46,400
um

2165
01:19:46,400 --> 01:19:48,239
we can see that the implementation of a

2166
01:19:48,239 --> 01:19:52,159
single number packet space um is easier

2167
01:19:52,159 --> 01:19:54,880
but we also didn't um evaluate a lot of

2168
01:19:54,880 --> 01:19:56,480
the logic that you have to implement

2169
01:19:56,480 --> 01:19:58,320
then if that actually works very well so

2170
01:19:58,320 --> 01:19:59,679
more work is needed from my point of

2171
01:19:59,679 --> 01:20:03,360
view but maybe matt wants to say more

2172
01:20:03,520 --> 01:20:05,360
uh yeah what i was going to say is that

2173
01:20:05,360 --> 01:20:07,440
you know it i kind of agree with jonah

2174
01:20:07,440 --> 01:20:09,600
that it's a design issue but you know

2175
01:20:09,600 --> 01:20:12,080
it's it i think what you're saying is

2176
01:20:12,080 --> 01:20:13,679
actually kind of the same which is that

2177
01:20:13,679 --> 01:20:14,480
you

2178
01:20:14,480 --> 01:20:16,159
wait mario what you're saying is you

2179
01:20:16,159 --> 01:20:19,040
want input from implementers about which

2180
01:20:19,040 --> 01:20:20,960
design they think works with their

2181
01:20:20,960 --> 01:20:22,639
implementation not necessarily that you

2182
01:20:22,639 --> 01:20:24,239
think everyone should go implement both

2183
01:20:24,239 --> 01:20:25,679
and then be like oh i like this one

2184
01:20:25,679 --> 01:20:26,719
better

2185
01:20:26,719 --> 01:20:28,880
all

2186
01:20:30,840 --> 01:20:34,880
right yep that's totally it

2187
01:20:37,840 --> 01:20:40,960
spencer spencer do you want to

2188
01:20:40,960 --> 01:20:42,800
uh sorry i was just waiting for somebody

2189
01:20:42,800 --> 01:20:43,840
to to

2190
01:20:43,840 --> 01:20:46,320
tell me if we were we were finished um i

2191
01:20:46,320 --> 01:20:47,920
wanted to thank you all for doing this

2192
01:20:47,920 --> 01:20:49,840
work uh a lot

2193
01:20:49,840 --> 01:20:51,040
um

2194
01:20:51,040 --> 01:20:53,440
maria um

2195
01:20:53,440 --> 01:20:56,320
we i've been talking about a strategy of

2196
01:20:56,320 --> 01:20:59,280
uh sending acts on different paths

2197
01:20:59,280 --> 01:21:00,880
which you're leading leading up to the

2198
01:21:00,880 --> 01:21:03,199
implementations for now and i'm not

2199
01:21:03,199 --> 01:21:04,719
arguing about that

2200
01:21:04,719 --> 01:21:07,520
my clarifying question was is that does

2201
01:21:07,520 --> 01:21:09,120
that work with one sequence space

2202
01:21:09,120 --> 01:21:13,280
multiple sequence spaces both or neither

2203
01:21:13,280 --> 01:21:16,000
sorry does does what work

2204
01:21:16,000 --> 01:21:16,880
uh

2205
01:21:16,880 --> 01:21:21,120
sending sending acts on a different path

2206
01:21:21,440 --> 01:21:21,920
um

2207
01:21:21,920 --> 01:21:23,360
[Music]

2208
01:21:23,360 --> 01:21:25,440
that should is completely independent

2209
01:21:25,440 --> 01:21:26,880
you can you can even if you have a

2210
01:21:26,880 --> 01:21:28,159
different packet number space you can

2211
01:21:28,159 --> 01:21:29,760
send it to a different path all right as

2212
01:21:29,760 --> 01:21:31,520
the act doesn't identify the packet

2213
01:21:31,520 --> 01:21:34,080
number and space your your

2214
01:21:34,080 --> 01:21:35,360
perfect item

2215
01:21:35,360 --> 01:21:38,559
i am clarified thank you

2216
01:21:40,719 --> 01:21:42,480
sorry i was trying to read the chat at

2217
01:21:42,480 --> 01:21:44,239
the same time which doesn't work so you

2218
01:21:44,239 --> 01:21:47,599
have to come to the queue and talk to me

2219
01:21:51,440 --> 01:21:52,960
hello

2220
01:21:52,960 --> 01:21:54,400
yeah

2221
01:21:54,400 --> 01:21:56,639
um

2222
01:21:56,639 --> 01:21:58,800
so what i want to ask is does the

2223
01:21:58,800 --> 01:22:01,520
multipath quick also cover the data from

2224
01:22:01,520 --> 01:22:04,159
extension

2225
01:22:05,679 --> 01:22:06,639
yes

2226
01:22:06,639 --> 01:22:08,320
these extensions are completely

2227
01:22:08,320 --> 01:22:09,600
independent so you can implement both

2228
01:22:09,600 --> 01:22:11,920
and use both okay okay so you don't see

2229
01:22:11,920 --> 01:22:13,679
special challenges here and the

2230
01:22:13,679 --> 01:22:15,280
description of multi-pass quick is

2231
01:22:15,280 --> 01:22:17,440
completely agnostic to that um okay

2232
01:22:17,440 --> 01:22:19,280
nevertheless um my question is specific

2233
01:22:19,280 --> 01:22:20,159
to the

2234
01:22:20,159 --> 01:22:21,679
uh

2235
01:22:21,679 --> 01:22:24,480
multiple r2 to the packet number spaces

2236
01:22:24,480 --> 01:22:26,639
so as you know we are developing the

2237
01:22:26,639 --> 01:22:29,040
multi-parts dccp which i think has a

2238
01:22:29,040 --> 01:22:30,960
similar

2239
01:22:30,960 --> 01:22:32,639
yeah kind of similar characteristics to

2240
01:22:32,639 --> 01:22:34,400
the multi-path quick

2241
01:22:34,400 --> 01:22:36,800
especially when we think about a

2242
01:22:36,800 --> 01:22:38,400
multi-path quick with the data chrome

2243
01:22:38,400 --> 01:22:39,840
extension because then we have an

2244
01:22:39,840 --> 01:22:41,520
unreliable transmission which has some

2245
01:22:41,520 --> 01:22:43,600
challenges to multipath and in that

2246
01:22:43,600 --> 01:22:46,560
respect we explicitly decided to use

2247
01:22:46,560 --> 01:22:49,440
multiple pn spaces for mpdccp because it

2248
01:22:49,440 --> 01:22:51,679
has some positive effect if it comes to

2249
01:22:51,679 --> 01:22:53,120
reordering

2250
01:22:53,120 --> 01:22:55,199
so it supports us in our in our

2251
01:22:55,199 --> 01:22:56,800
reordering approach and i think that's

2252
01:22:56,800 --> 01:22:58,080
quite important or that you should

2253
01:22:58,080 --> 01:23:01,120
consider if you discuss

2254
01:23:01,360 --> 01:23:03,520
the packet number spaces if it should be

2255
01:23:03,520 --> 01:23:05,520
a single one or a multiple one so have

2256
01:23:05,520 --> 01:23:07,920
in mind that multiples plus data chrome

2257
01:23:07,920 --> 01:23:10,880
has some special demands and maybe

2258
01:23:10,880 --> 01:23:14,800
multiple pn spaces can support here

2259
01:23:14,800 --> 01:23:16,960
yeah i mean i'm not i'm not too familiar

2260
01:23:16,960 --> 01:23:18,719
with the details of dccp but i think

2261
01:23:18,719 --> 01:23:20,719
it's different here because for datagram

2262
01:23:20,719 --> 01:23:22,320
and quick you already still know when a

2263
01:23:22,320 --> 01:23:23,920
packet get lost you just don't resubmit

2264
01:23:23,920 --> 01:23:25,040
it because you have a packing number

2265
01:23:25,040 --> 01:23:27,360
here oh yeah okay

2266
01:23:27,360 --> 01:23:29,360
yeah that's the same in dccp so you are

2267
01:23:29,360 --> 01:23:30,560
aware of a packet that's lost

2268
01:23:30,560 --> 01:23:34,639
nevertheless you maybe wanna reorder

2269
01:23:34,639 --> 01:23:37,360
packets without re-transmission without

2270
01:23:37,360 --> 01:23:39,040
requiring re-transmission and then

2271
01:23:39,040 --> 01:23:41,600
multiple pn spaces can help to to make

2272
01:23:41,600 --> 01:23:43,679
fast decisions in the reordering process

2273
01:23:43,679 --> 01:23:47,199
if a packet get lost

2274
01:23:47,199 --> 01:23:50,639
or it's worth to wait for it

2275
01:23:50,639 --> 01:23:53,040
i just gotta interject here's a chat

2276
01:23:53,040 --> 01:23:54,800
this is interesting chat we can we can

2277
01:23:54,800 --> 01:23:56,800
have this on the list and on issues it's

2278
01:23:56,800 --> 01:23:57,840
it's kind of beyond the scope of

2279
01:23:57,840 --> 01:24:00,880
clarification so uh thanks marcus but um

2280
01:24:00,880 --> 01:24:03,199
yeah we'll we'll follow up on that one

2281
01:24:03,199 --> 01:24:05,199
um yep we're

2282
01:24:05,199 --> 01:24:06,800
gonna if you want to progress through

2283
01:24:06,800 --> 01:24:08,960
the slides mirror um

2284
01:24:08,960 --> 01:24:11,920
yes uh let's go through many few slides

2285
01:24:11,920 --> 01:24:14,080
and just to tell you what's in the draft

2286
01:24:14,080 --> 01:24:15,920
not much left here

2287
01:24:15,920 --> 01:24:17,440
so as i said there is something about

2288
01:24:17,440 --> 01:24:20,000
path management path initiation um it

2289
01:24:20,000 --> 01:24:21,760
works very similar than

2290
01:24:21,760 --> 01:24:23,520
pass validation if you take pass

2291
01:24:23,520 --> 01:24:26,080
validation as it is from rsc 9000 no

2292
01:24:26,080 --> 01:24:27,679
changes the only change is that

2293
01:24:27,679 --> 01:24:29,679
afterwards after the validation has

2294
01:24:29,679 --> 01:24:30,800
completed you can actually send

2295
01:24:30,800 --> 01:24:32,880
non-problem packets on multiple path

2296
01:24:32,880 --> 01:24:35,040
um pass validation can also be only

2297
01:24:35,040 --> 01:24:36,400
initiated by the client so that's a

2298
01:24:36,400 --> 01:24:37,760
restriction that we could further

2299
01:24:37,760 --> 01:24:39,600
discuss um in the working group but

2300
01:24:39,600 --> 01:24:41,600
that's what's currently in the draft

2301
01:24:41,600 --> 01:24:43,199
the thing that we did add was pass

2302
01:24:43,199 --> 01:24:45,440
removal because with migration you don't

2303
01:24:45,440 --> 01:24:46,880
need to remove the path you move over

2304
01:24:46,880 --> 01:24:49,280
you close the old parts immediately uh

2305
01:24:49,280 --> 01:24:51,040
with multi-pass support you have

2306
01:24:51,040 --> 01:24:52,719
multiple paths so you have to care about

2307
01:24:52,719 --> 01:24:55,199
how to close them there is a new frame

2308
01:24:55,199 --> 01:24:57,760
here which is called path of button

2309
01:24:57,760 --> 01:24:59,760
and but we also reuse the retire

2310
01:24:59,760 --> 01:25:02,000
connection id frame to actually signal

2311
01:25:02,000 --> 01:25:04,239
the that resources can be released and

2312
01:25:04,239 --> 01:25:06,960
we also rely on timeouts as it's done

2313
01:25:06,960 --> 01:25:09,840
in rf9000

2314
01:25:09,840 --> 01:25:10,719
um

2315
01:25:10,719 --> 01:25:14,159
so basically um what we do here is we we

2316
01:25:14,159 --> 01:25:16,719
from from a semantics point of view we

2317
01:25:16,719 --> 01:25:19,440
have two new frame types one of the past

2318
01:25:19,440 --> 01:25:22,080
bend frame this carries past identifier

2319
01:25:22,080 --> 01:25:23,920
error code and reason frame

2320
01:25:23,920 --> 01:25:26,159
and there is also a pass identifier type

2321
01:25:26,159 --> 01:25:28,800
which indicates um if the pass

2322
01:25:28,800 --> 01:25:31,600
identifier belongs to uh basically the

2323
01:25:31,600 --> 01:25:33,600
source or destination id or to the

2324
01:25:33,600 --> 01:25:35,600
current pass if no

2325
01:25:35,600 --> 01:25:37,040
connection id

2326
01:25:37,040 --> 01:25:39,679
is present so effectively you can send

2327
01:25:39,679 --> 01:25:41,920
this frame on any path if you have a

2328
01:25:41,920 --> 01:25:43,280
connection id if you don't have a

2329
01:25:43,280 --> 01:25:45,040
connection you can only send it over the

2330
01:25:45,040 --> 01:25:47,679
past that you want to abandon so if you

2331
01:25:47,679 --> 01:25:49,679
have a connection id you have like more

2332
01:25:49,679 --> 01:25:51,280
flexibility here in providing this

2333
01:25:51,280 --> 01:25:53,679
signal to the other hand

2334
01:25:53,679 --> 01:25:56,320
then we also have a new um egg

2335
01:25:56,320 --> 01:25:59,280
multi-pass frame this is only used if uh

2336
01:25:59,280 --> 01:26:00,639
if you have multiple packet number

2337
01:26:00,639 --> 01:26:02,560
spaces but this extension is also

2338
01:26:02,560 --> 01:26:04,080
minimal it's really like the old egg

2339
01:26:04,080 --> 01:26:06,000
frame it only has one additional field

2340
01:26:06,000 --> 01:26:09,360
which identifies the packet number space

2341
01:26:09,360 --> 01:26:12,159
um yeah

2342
01:26:12,320 --> 01:26:14,560
so that's kind of what's in the draft

2343
01:26:14,560 --> 01:26:16,639
again we we really try to focus on the

2344
01:26:16,639 --> 01:26:18,719
core components that are needed to use

2345
01:26:18,719 --> 01:26:21,440
multiple paths simultaneously

2346
01:26:21,440 --> 01:26:23,199
and all the authors have agreed on some

2347
01:26:23,199 --> 01:26:25,280
key design principles which is really

2348
01:26:25,280 --> 01:26:27,040
try to keep it as simple as possible

2349
01:26:27,040 --> 01:26:29,440
just add minimal stuff

2350
01:26:29,440 --> 01:26:30,560
and

2351
01:26:30,560 --> 01:26:32,000
and we are aligned with that i think

2352
01:26:32,000 --> 01:26:33,679
that was also what came out of the site

2353
01:26:33,679 --> 01:26:35,040
meeting

2354
01:26:35,040 --> 01:26:36,639
we have this option to currently to

2355
01:26:36,639 --> 01:26:38,560
negotiate multiple packet numbers space

2356
01:26:38,560 --> 01:26:40,880
one or multiple number spaces but this

2357
01:26:40,880 --> 01:26:43,600
is really for experimentation and so

2358
01:26:43,600 --> 01:26:45,280
please if you go implement the site if

2359
01:26:45,280 --> 01:26:46,719
you want to implement one or both of

2360
01:26:46,719 --> 01:26:48,960
them and report back so we can make a

2361
01:26:48,960 --> 01:26:50,560
decision for one of those approaches at

2362
01:26:50,560 --> 01:26:54,000
some point but um i think this is ready

2363
01:26:54,000 --> 01:26:55,920
to uh to take on by the working group

2364
01:26:55,920 --> 01:26:57,280
and move the discussion back into the

2365
01:26:57,280 --> 01:26:59,040
working group at the site meeting there

2366
01:26:59,040 --> 01:27:00,560
was a lot of interest there was also

2367
01:27:00,560 --> 01:27:03,199
people talking about implementation so i

2368
01:27:03,199 --> 01:27:04,880
think uh i think it would be great to

2369
01:27:04,880 --> 01:27:06,639
have this in the working group and so we

2370
01:27:06,639 --> 01:27:08,480
are we are asking if this is ready for

2371
01:27:08,480 --> 01:27:10,959
adoption

2372
01:27:12,960 --> 01:27:14,719
yeah and just to add to that you know

2373
01:27:14,719 --> 01:27:16,560
we've got some time for discussion now

2374
01:27:16,560 --> 01:27:18,800
there's there's a lot of potential

2375
01:27:18,800 --> 01:27:20,480
things that people could say about cool

2376
01:27:20,480 --> 01:27:22,320
ideas they've got or potential issues

2377
01:27:22,320 --> 01:27:24,239
they might see um but we'd like to keep

2378
01:27:24,239 --> 01:27:25,920
the discussion here focused on on the

2379
01:27:25,920 --> 01:27:28,960
question um about you know viewpoints on

2380
01:27:28,960 --> 01:27:30,880
on whether we think

2381
01:27:30,880 --> 01:27:33,360
this this brush should be adopted um or

2382
01:27:33,360 --> 01:27:34,880
not um

2383
01:27:34,880 --> 01:27:36,400
towards the end of the the eight minutes

2384
01:27:36,400 --> 01:27:38,400
we have here we'll take a show of hands

2385
01:27:38,400 --> 01:27:41,360
as well um before taking any any

2386
01:27:41,360 --> 01:27:43,120
question to the list

2387
01:27:43,120 --> 01:27:45,360
but yeah if people could keep it on the

2388
01:27:45,360 --> 01:27:48,159
topic of adoption um that would greatly

2389
01:27:48,159 --> 01:27:49,840
help the chairs so

2390
01:27:49,840 --> 01:27:52,159
uh john is first in the queue please

2391
01:27:52,159 --> 01:27:54,719
please go

2392
01:27:55,840 --> 01:27:57,920
thank you for the presentation maria it

2393
01:27:57,920 --> 01:28:00,400
was very helpful um at high level i

2394
01:28:00,400 --> 01:28:02,560
would say that

2395
01:28:02,560 --> 01:28:04,560
the document that lays out all possible

2396
01:28:04,560 --> 01:28:06,000
designs

2397
01:28:06,000 --> 01:28:08,320
i would argue is not ready for adoption

2398
01:28:08,320 --> 01:28:10,080
simply because it it

2399
01:28:10,080 --> 01:28:12,159
it's a superset of all the things that

2400
01:28:12,159 --> 01:28:14,159
you might want to do now i haven't read

2401
01:28:14,159 --> 01:28:16,960
the draft yet so i'll admit that first

2402
01:28:16,960 --> 01:28:17,840
um

2403
01:28:17,840 --> 01:28:19,760
but can i interrupt you here for one

2404
01:28:19,760 --> 01:28:21,440
second so we're not playing out all

2405
01:28:21,440 --> 01:28:22,880
possible designs we really try to

2406
01:28:22,880 --> 01:28:25,600
concentrate on the minimum but um it was

2407
01:28:25,600 --> 01:28:27,440
and there was a lot of things where the

2408
01:28:27,440 --> 01:28:28,960
three different drafts you look at like

2409
01:28:28,960 --> 01:28:30,719
we actually found a lot of agreement and

2410
01:28:30,719 --> 01:28:32,159
the authors are all aligned on these

2411
01:28:32,159 --> 01:28:33,920
points it's really just a packet number

2412
01:28:33,920 --> 01:28:35,520
space because as you have seen on the

2413
01:28:35,520 --> 01:28:37,760
slide there's no clear good solution

2414
01:28:37,760 --> 01:28:39,760
right so rather than trying to take any

2415
01:28:39,760 --> 01:28:42,080
kind of choice and now and then maybe

2416
01:28:42,080 --> 01:28:43,600
revise it later because we're figuring

2417
01:28:43,600 --> 01:28:45,520
out this is not the right thing to do

2418
01:28:45,520 --> 01:28:47,840
and we left those two options in there

2419
01:28:47,840 --> 01:28:50,159
only for this one issue

2420
01:28:50,159 --> 01:28:51,600
understood but it's a pretty fundamental

2421
01:28:51,600 --> 01:28:53,360
issue i mean the backend number space

2422
01:28:53,360 --> 01:28:56,239
issue drives a lot of questions really

2423
01:28:56,239 --> 01:28:58,880
it doesn't it's really a very um

2424
01:28:58,880 --> 01:29:00,960
detailed implementation thing it doesn't

2425
01:29:00,960 --> 01:29:03,120
change any of the functionality or any

2426
01:29:03,120 --> 01:29:04,639
of the principles you want to have in

2427
01:29:04,639 --> 01:29:06,400
this graph it's really about

2428
01:29:06,400 --> 01:29:09,040
implementation

2429
01:29:09,040 --> 01:29:11,280
um so i would have to read the draft i

2430
01:29:11,280 --> 01:29:13,040
suppose i mean i'll take that back to

2431
01:29:13,040 --> 01:29:15,120
myself that's feedback to me however

2432
01:29:15,120 --> 01:29:16,560
i'll say that if we can resolve that

2433
01:29:16,560 --> 01:29:18,480
issue before we talk about our option

2434
01:29:18,480 --> 01:29:20,239
that would be helpful because to me the

2435
01:29:20,239 --> 01:29:21,440
the the

2436
01:29:21,440 --> 01:29:22,960
ultimately we are defining a protocol

2437
01:29:22,960 --> 01:29:25,120
here it's not rocket science and the

2438
01:29:25,120 --> 01:29:28,080
protocol is about the details and

2439
01:29:28,080 --> 01:29:30,800
the use of path id or not the use of a

2440
01:29:30,800 --> 01:29:33,440
separate packet numbers or not actually

2441
01:29:33,440 --> 01:29:35,679
again in it to me it should make a

2442
01:29:35,679 --> 01:29:37,280
difference in big difference in how the

2443
01:29:37,280 --> 01:29:38,960
protocol is designed

2444
01:29:38,960 --> 01:29:39,679
so

2445
01:29:39,679 --> 01:29:42,880
uh i would argue that uh

2446
01:29:42,880 --> 01:29:44,080
take it for what it's worth but i

2447
01:29:44,080 --> 01:29:45,679
haven't read the draft so i won't make

2448
01:29:45,679 --> 01:29:47,679
it too strongly i would say that my

2449
01:29:47,679 --> 01:29:50,880
point is we should resolve that issue

2450
01:29:50,880 --> 01:29:53,440
before we really talk about the adopting

2451
01:29:53,440 --> 01:29:55,440
the documents

2452
01:29:55,440 --> 01:29:58,159
so point taking but also i think what we

2453
01:29:58,159 --> 01:30:00,000
have right now is that and that was also

2454
01:30:00,000 --> 01:30:01,920
what was in previous drafts already that

2455
01:30:01,920 --> 01:30:04,159
we have two specifications and they can

2456
01:30:04,159 --> 01:30:06,719
work together we have identified what

2457
01:30:06,719 --> 01:30:08,159
are the things that overlap and have

2458
01:30:08,159 --> 01:30:10,320
described them in in the respective way

2459
01:30:10,320 --> 01:30:12,080
so if you make a decision for one or the

2460
01:30:12,080 --> 01:30:13,760
other at some point we just go ahead and

2461
01:30:13,760 --> 01:30:16,080
remove parts of the draft and that's it

2462
01:30:16,080 --> 01:30:17,440
it's not it's not like we have to

2463
01:30:17,440 --> 01:30:19,600
redesign the rest because we separated

2464
01:30:19,600 --> 01:30:21,520
those things nicely

2465
01:30:21,520 --> 01:30:24,239
um so i think this is really a a small

2466
01:30:24,239 --> 01:30:27,920
part only and rather than trying to um

2467
01:30:27,920 --> 01:30:30,239
to kind of get ourselves stuck on this

2468
01:30:30,239 --> 01:30:32,159
kind of minor implementation point i

2469
01:30:32,159 --> 01:30:34,400
think we should move forward and we

2470
01:30:34,400 --> 01:30:36,400
should uh make sure that everything is

2471
01:30:36,400 --> 01:30:38,400
is in well shape and incentivize people

2472
01:30:38,400 --> 01:30:40,639
to um implement this and and give a

2473
01:30:40,639 --> 01:30:41,920
clear thing that we actually want to

2474
01:30:41,920 --> 01:30:45,440
work on this and come to a conclusion

2475
01:30:45,600 --> 01:30:46,880
um

2476
01:30:46,880 --> 01:30:49,040
just based on some of the chat and that

2477
01:30:49,040 --> 01:30:50,639
that we're having and jonah's point

2478
01:30:50,639 --> 01:30:52,239
there about not having read the draft

2479
01:30:52,239 --> 01:30:53,440
i'm just going to take a quick show of

2480
01:30:53,440 --> 01:30:55,600
hands for who who has actually read this

2481
01:30:55,600 --> 01:30:57,199
already um so we're going to use the

2482
01:30:57,199 --> 01:30:59,520
echo tool for this um and the question

2483
01:30:59,520 --> 01:31:00,639
is going to be quite simple have you

2484
01:31:00,639 --> 01:31:01,920
read the draft

2485
01:31:01,920 --> 01:31:03,440
and you can raise your hand

2486
01:31:03,440 --> 01:31:04,320
um

2487
01:31:04,320 --> 01:31:06,400
to say you have

2488
01:31:06,400 --> 01:31:07,840
and i'm going to start that now and

2489
01:31:07,840 --> 01:31:11,960
we'll run that

2490
01:31:18,239 --> 01:31:22,080
give this like another 20 seconds or so

2491
01:31:25,679 --> 01:31:27,760
you can click do not erase

2492
01:31:27,760 --> 01:31:31,840
drafts but not this version

2493
01:31:33,199 --> 01:31:34,719
like i read the ids before they were

2494
01:31:34,719 --> 01:31:36,159
merged

2495
01:31:36,159 --> 01:31:38,960
what should i answer

2496
01:31:39,440 --> 01:31:41,440
maybe no because i think for this

2497
01:31:41,440 --> 01:31:42,639
question it's actually important that

2498
01:31:42,639 --> 01:31:46,239
you understand what the difference is

2499
01:31:51,520 --> 01:31:53,440
okay i'm gonna i'm gonna close the poll

2500
01:31:53,440 --> 01:31:55,600
now uh we have

2501
01:31:55,600 --> 01:31:57,199
20 raised hands

2502
01:31:57,199 --> 01:32:00,239
and 46 did not raise their hands for a

2503
01:32:00,239 --> 01:32:02,639
total of 66 participants in a meeting of

2504
01:32:02,639 --> 01:32:04,960
168 people so

2505
01:32:04,960 --> 01:32:06,000
uh

2506
01:32:06,000 --> 01:32:08,400
thank you

2507
01:32:09,920 --> 01:32:10,880
uh

2508
01:32:10,880 --> 01:32:12,800
kazuo

2509
01:32:12,800 --> 01:32:15,120
please

2510
01:32:17,679 --> 01:32:20,000
regarding design support

2511
01:32:20,000 --> 01:32:23,120
um is there a design principle regarding

2512
01:32:23,120 --> 01:32:25,440
the efficiency of the protocol to give

2513
01:32:25,440 --> 01:32:27,520
an example is then principle that

2514
01:32:27,520 --> 01:32:29,280
multiple quotes should perform as well

2515
01:32:29,280 --> 01:32:31,120
as quickbrilliant i might have missed

2516
01:32:31,120 --> 01:32:32,800
that but would hope that that be

2517
01:32:32,800 --> 01:32:36,000
clarified because that's what drives the

2518
01:32:36,000 --> 01:32:40,320
design choices that we make

2519
01:32:40,320 --> 01:32:41,840
um so i don't think we have this

2520
01:32:41,840 --> 01:32:43,840
explicitly in the draft the design

2521
01:32:43,840 --> 01:32:45,440
principles that we do list in the draft

2522
01:32:45,440 --> 01:32:47,520
is what kind of what did lead the the

2523
01:32:47,520 --> 01:32:49,280
author team to make the decisions right

2524
01:32:49,280 --> 01:32:51,040
now it's not like a comprehensive list

2525
01:32:51,040 --> 01:32:52,159
so if you want

2526
01:32:52,159 --> 01:32:53,920
make sure this is captured in the draft

2527
01:32:53,920 --> 01:32:56,159
then please open an issue

2528
01:32:56,159 --> 01:32:58,239
yeah so i mean

2529
01:32:58,239 --> 01:33:01,679
before adopting this i think

2530
01:33:01,679 --> 01:33:04,159
i hope that we agree on the

2531
01:33:04,159 --> 01:33:06,560
design goals i mean the the

2532
01:33:06,560 --> 01:33:08,719
performance efficiency requirements that

2533
01:33:08,719 --> 01:33:10,400
we want to meet

2534
01:33:10,400 --> 01:33:12,639
because

2535
01:33:12,639 --> 01:33:14,400
without agreeing on that

2536
01:33:14,400 --> 01:33:15,679
it's so much

2537
01:33:15,679 --> 01:33:18,159
harder to agree on what the choices that

2538
01:33:18,159 --> 01:33:20,000
we have to take

2539
01:33:20,000 --> 01:33:22,320
that's my i mean i think this needs more

2540
01:33:22,320 --> 01:33:24,159
discussion because i don't even really

2541
01:33:24,159 --> 01:33:26,560
understand what such a requirement would

2542
01:33:26,560 --> 01:33:28,239
mean because um

2543
01:33:28,239 --> 01:33:29,760
of course you have different path

2544
01:33:29,760 --> 01:33:31,920
characteristics if you have multiple

2545
01:33:31,920 --> 01:33:33,760
paths right so you might have one long

2546
01:33:33,760 --> 01:33:35,360
delay and one short delay path and if

2547
01:33:35,360 --> 01:33:37,120
you select the short delay pass for a

2548
01:33:37,120 --> 01:33:38,400
certain application you have better

2549
01:33:38,400 --> 01:33:39,920
experience than the longer past but it

2550
01:33:39,920 --> 01:33:41,120
might be different for the other

2551
01:33:41,120 --> 01:33:42,400
applications so i don't think this

2552
01:33:42,400 --> 01:33:44,480
question is actually that easy i'm happy

2553
01:33:44,480 --> 01:33:46,320
to discuss it more

2554
01:33:46,320 --> 01:33:48,400
right but it's a fundamental different

2555
01:33:48,400 --> 01:33:50,320
behavior so i'm not sure there is like a

2556
01:33:50,320 --> 01:33:52,239
clear comparison to a single path

2557
01:33:52,239 --> 01:33:53,199
approach

2558
01:33:53,199 --> 01:33:55,760
well so what was thinking about a of a

2559
01:33:55,760 --> 01:33:59,120
strictly uh inferior case like for

2560
01:33:59,120 --> 01:34:01,440
example for fc and also recovery we

2561
01:34:01,440 --> 01:34:04,400
might need purpose signal back delays

2562
01:34:04,400 --> 01:34:06,400
but that's hard to accomplish with

2563
01:34:06,400 --> 01:34:09,440
single packet number space

2564
01:34:09,440 --> 01:34:13,280
so that was the case i would think of it

2565
01:34:13,280 --> 01:34:14,320
yes

2566
01:34:14,320 --> 01:34:16,639
thank you

2567
01:34:17,040 --> 01:34:18,719
i mean i'm also not sure if the answer

2568
01:34:18,719 --> 01:34:20,960
to that is so clear because you just

2569
01:34:20,960 --> 01:34:22,880
have to be smart about where to send

2570
01:34:22,880 --> 01:34:24,800
when and where to send your ex so this

2571
01:34:24,800 --> 01:34:26,159
is something we need more experience

2572
01:34:26,159 --> 01:34:28,320
with

2573
01:34:28,320 --> 01:34:31,480
thank you

2574
01:34:32,239 --> 01:34:34,559
martin

2575
01:34:35,760 --> 01:34:37,760
thanks uh yes i've read the draft i

2576
01:34:37,760 --> 01:34:39,600
support this work export adoption

2577
01:34:39,600 --> 01:34:41,199
although i'll probably personally not

2578
01:34:41,199 --> 01:34:43,280
implement it um i don't think we need to

2579
01:34:43,280 --> 01:34:45,040
resolve the pack number space issue

2580
01:34:45,040 --> 01:34:47,119
prior to adoption i i will say the

2581
01:34:47,119 --> 01:34:48,480
reason i support is i think there's a

2582
01:34:48,480 --> 01:34:50,080
lot of um

2583
01:34:50,080 --> 01:34:51,840
desire for multi-pass solution but there

2584
01:34:51,840 --> 01:34:53,360
are a lot of big experimental questions

2585
01:34:53,360 --> 01:34:55,199
and i think of all the transports we

2586
01:34:55,199 --> 01:34:56,960
have i think quick is the best suited to

2587
01:34:56,960 --> 01:34:58,800
do open internet experience because i'll

2588
01:34:58,800 --> 01:35:01,199
actually get through the internet unlike

2589
01:35:01,199 --> 01:35:03,679
all the other options um

2590
01:35:03,679 --> 01:35:04,880
i would probably argue should be

2591
01:35:04,880 --> 01:35:06,080
experimental draft we don't have to

2592
01:35:06,080 --> 01:35:09,119
settle that now thanks

2593
01:35:10,320 --> 01:35:13,320
tommy

2594
01:35:17,760 --> 01:35:19,040
all right

2595
01:35:19,040 --> 01:35:22,080
um so i i have read the unified draft

2596
01:35:22,080 --> 01:35:25,119
and i definitely support adoption of it

2597
01:35:25,119 --> 01:35:27,199
um i think that the work to unify the

2598
01:35:27,199 --> 01:35:31,040
draft has greatly improved the proposal

2599
01:35:31,040 --> 01:35:33,840
um as it's come together

2600
01:35:33,840 --> 01:35:35,119
this is better than any of the

2601
01:35:35,119 --> 01:35:37,600
individual drafts i think

2602
01:35:37,600 --> 01:35:39,280
it doesn't have a lot of the excess bits

2603
01:35:39,280 --> 01:35:41,280
hanging off of it it's focused and it's

2604
01:35:41,280 --> 01:35:43,119
minimized and i think a minimal

2605
01:35:43,119 --> 01:35:44,639
implementation is exactly the type of

2606
01:35:44,639 --> 01:35:46,719
thing that we want

2607
01:35:46,719 --> 01:35:48,080
to adopt here because otherwise we're

2608
01:35:48,080 --> 01:35:49,840
going to spend a lot of time getting

2609
01:35:49,840 --> 01:35:51,360
distracted

2610
01:35:51,360 --> 01:35:53,679
so it's the right kind of starting point

2611
01:35:53,679 --> 01:35:55,040
so if we think we need to work on

2612
01:35:55,040 --> 01:35:56,719
multi-path let's do this and i think

2613
01:35:56,719 --> 01:35:58,400
this is the time to start to work on

2614
01:35:58,400 --> 01:35:59,679
multi-path

2615
01:35:59,679 --> 01:36:01,679
mature implementations

2616
01:36:01,679 --> 01:36:02,719
are getting to the point where they need

2617
01:36:02,719 --> 01:36:04,159
to use it

2618
01:36:04,159 --> 01:36:05,840
our implementation really needs to start

2619
01:36:05,840 --> 01:36:07,280
looking at this soon so having something

2620
01:36:07,280 --> 01:36:08,480
that the working group is looking at is

2621
01:36:08,480 --> 01:36:09,600
good

2622
01:36:09,600 --> 01:36:10,880
there is an open question about packing

2623
01:36:10,880 --> 01:36:12,960
number spaces i think that should be

2624
01:36:12,960 --> 01:36:14,400
better addressed by the working group

2625
01:36:14,400 --> 01:36:16,159
rather than having the authors try to

2626
01:36:16,159 --> 01:36:18,159
come up with one thing and not listen to

2627
01:36:18,159 --> 01:36:20,080
the whole working group so

2628
01:36:20,080 --> 01:36:21,679
let's adopt it and figure out that

2629
01:36:21,679 --> 01:36:25,400
question together

2630
01:36:25,679 --> 01:36:27,679
so we're running on time but ian then

2631
01:36:27,679 --> 01:36:30,560
yeah go ahead

2632
01:36:30,800 --> 01:36:32,480
yeah i i support

2633
01:36:32,480 --> 01:36:35,199
the last two two statements um in our

2634
01:36:35,199 --> 01:36:36,880
case we finally finished like connection

2635
01:36:36,880 --> 01:36:38,400
migration so i think we finally feel

2636
01:36:38,400 --> 01:36:39,520
like we have like the bandwidth to

2637
01:36:39,520 --> 01:36:41,840
really take some of this work on and

2638
01:36:41,840 --> 01:36:43,199
actually contribute whereas before we

2639
01:36:43,199 --> 01:36:44,960
didn't so i feel like now is the right

2640
01:36:44,960 --> 01:36:47,280
time um i'd love to get the pack number

2641
01:36:47,280 --> 01:36:49,119
space issue result but

2642
01:36:49,119 --> 01:36:50,639
um i don't think it needs to be resolved

2643
01:36:50,639 --> 01:36:52,639
before adoption but i also don't want to

2644
01:36:52,639 --> 01:36:54,400
make everyone implement but um but i

2645
01:36:54,400 --> 01:36:56,000
think we can hammer out like that pretty

2646
01:36:56,000 --> 01:36:58,320
quickly in the networking group um the

2647
01:36:58,320 --> 01:37:00,080
only other commenter that say is

2648
01:37:00,080 --> 01:37:01,600
if we do this we may want to consider

2649
01:37:01,600 --> 01:37:04,159
having like a separate one-hour meeting

2650
01:37:04,159 --> 01:37:06,400
just for multipath or something real

2651
01:37:06,400 --> 01:37:07,119
quick

2652
01:37:07,119 --> 01:37:08,400
um because i get the impression there

2653
01:37:08,400 --> 01:37:09,600
are some people who attend the quick

2654
01:37:09,600 --> 01:37:11,440
working group who are distinctly

2655
01:37:11,440 --> 01:37:12,800
uninterested in spending their time on

2656
01:37:12,800 --> 01:37:14,960
us but i don't know you'd have to ask

2657
01:37:14,960 --> 01:37:17,600
through about that

2658
01:37:17,679 --> 01:37:20,679
christian

2659
01:37:21,840 --> 01:37:24,159
i i definitely support uh

2660
01:37:24,159 --> 01:37:26,320
adoption that's not surprising but the

2661
01:37:26,320 --> 01:37:28,320
big reason i support adoption is exactly

2662
01:37:28,320 --> 01:37:29,679
what tommy said

2663
01:37:29,679 --> 01:37:31,840
we want the discussion to happen in

2664
01:37:31,840 --> 01:37:34,000
public to the working group

2665
01:37:34,000 --> 01:37:37,040
not in a confined mailing list that is

2666
01:37:37,040 --> 01:37:39,280
between authors

2667
01:37:39,280 --> 01:37:41,920
and if we support adoption if we get

2668
01:37:41,920 --> 01:37:44,239
adoption what will happen is that we'll

2669
01:37:44,239 --> 01:37:45,280
move

2670
01:37:45,280 --> 01:37:47,520
the current github repo

2671
01:37:47,520 --> 01:37:50,639
in which we're discussing will move that

2672
01:37:50,639 --> 01:37:52,400
to the working group people who already

2673
01:37:52,400 --> 01:37:53,520
sees it

2674
01:37:53,520 --> 01:37:55,280
and will have change control and things

2675
01:37:55,280 --> 01:37:57,119
like that and i think

2676
01:37:57,119 --> 01:37:59,119
making the discussions public is a big

2677
01:37:59,119 --> 01:38:02,400
reason for adoption

2678
01:38:02,400 --> 01:38:05,119
uh chana

2679
01:38:06,960 --> 01:38:08,800
so i made the point about

2680
01:38:08,800 --> 01:38:10,000
um

2681
01:38:10,000 --> 01:38:12,320
not adopting this but i think that i i

2682
01:38:12,320 --> 01:38:14,320
perhaps the spirit of the question to me

2683
01:38:14,320 --> 01:38:15,600
now is whether we should work on

2684
01:38:15,600 --> 01:38:17,520
multipath and if this is

2685
01:38:17,520 --> 01:38:19,440
a document we can start from and to that

2686
01:38:19,440 --> 01:38:20,960
my answer would be yes because there's

2687
01:38:20,960 --> 01:38:24,480
only one document and i think that uh

2688
01:38:24,480 --> 01:38:26,800
the work on multipath i think is it's a

2689
01:38:26,800 --> 01:38:28,480
good time to start working on it as a

2690
01:38:28,480 --> 01:38:30,800
working group so i would like to change

2691
01:38:30,800 --> 01:38:33,199
my position that i said earlier to uh

2692
01:38:33,199 --> 01:38:35,440
yes let's adopt it and let's hash out

2693
01:38:35,440 --> 01:38:38,000
these issues

2694
01:38:39,280 --> 01:38:41,440
okay and with that i think uh lucas is

2695
01:38:41,440 --> 01:38:43,840
gonna we're gonna run two polls so uh

2696
01:38:43,840 --> 01:38:46,480
lucas you want to describe

2697
01:38:46,480 --> 01:38:49,119
the polls before you run them

2698
01:38:49,119 --> 01:38:50,719
yeah i just want to thank people for

2699
01:38:50,719 --> 01:38:52,480
their kind of feedback during this

2700
01:38:52,480 --> 01:38:54,880
discussion um and the comments as well

2701
01:38:54,880 --> 01:38:57,840
um you know this helps the chairs gauge

2702
01:38:57,840 --> 01:39:00,159
get your opinion on on this matter so um

2703
01:39:00,159 --> 01:39:02,400
to that end i just want to run a pole to

2704
01:39:02,400 --> 01:39:03,199
see

2705
01:39:03,199 --> 01:39:05,760
you know gauge interest in in who thinks

2706
01:39:05,760 --> 01:39:07,600
that the working group should work on on

2707
01:39:07,600 --> 01:39:10,159
any form of the multi-path problem and a

2708
01:39:10,159 --> 01:39:12,800
multi-path extension to quick to resolve

2709
01:39:12,800 --> 01:39:14,480
that problem so i'm going to start that

2710
01:39:14,480 --> 01:39:16,960
poll now um if

2711
01:39:16,960 --> 01:39:19,679
if you think if you agree um

2712
01:39:19,679 --> 01:39:21,199
then raise your hand and if you don't

2713
01:39:21,199 --> 01:39:25,400
agree then do not raise your hand

2714
01:39:31,520 --> 01:39:32,639
and

2715
01:39:32,639 --> 01:39:34,080
we're getting a bit short time so i'm

2716
01:39:34,080 --> 01:39:37,199
going to close this poll soon um

2717
01:39:37,199 --> 01:39:40,000
some results already coming in that look

2718
01:39:40,000 --> 01:39:42,480
pretty strongly in favor of um that the

2719
01:39:42,480 --> 01:39:44,960
working group should work on this

2720
01:39:44,960 --> 01:39:46,400
uh

2721
01:39:46,400 --> 01:39:48,000
the results are in the poll tool at the

2722
01:39:48,000 --> 01:39:51,199
end but we have 52 raised hands and

2723
01:39:51,199 --> 01:39:52,880
three raised hands

2724
01:39:52,880 --> 01:39:54,960
um

2725
01:39:54,960 --> 01:39:57,679
let's end the session there it it for

2726
01:39:57,679 --> 01:40:00,320
anyone that that said that they don't

2727
01:40:00,320 --> 01:40:03,040
believe we should work on this uh

2728
01:40:03,040 --> 01:40:04,719
do they want to make a comment at the

2729
01:40:04,719 --> 01:40:07,719
microphone

2730
01:40:11,360 --> 01:40:12,480
no

2731
01:40:12,480 --> 01:40:14,480
okay um so in that case we'll do another

2732
01:40:14,480 --> 01:40:16,639
poll um

2733
01:40:16,639 --> 01:40:17,679
about

2734
01:40:17,679 --> 01:40:20,400
adopting this specific draft

2735
01:40:20,400 --> 01:40:22,800
um

2736
01:40:22,800 --> 01:40:26,239
as the solution to this

2737
01:40:31,280 --> 01:40:34,280
problem

2738
01:40:40,639 --> 01:40:43,040
again raise your hand if you agree

2739
01:40:43,040 --> 01:40:46,320
um that this draft should be adopted and

2740
01:40:46,320 --> 01:40:47,760
do not raise hand

2741
01:40:47,760 --> 01:40:51,080
if you disagree

2742
01:41:11,520 --> 01:41:13,600
okay i'm just gonna

2743
01:41:13,600 --> 01:41:15,199
close that poll too again i'll ask the

2744
01:41:15,199 --> 01:41:16,480
same question we have two people who

2745
01:41:16,480 --> 01:41:18,320
didn't raise their hand compared to 46

2746
01:41:18,320 --> 01:41:20,239
people that did

2747
01:41:20,239 --> 01:41:21,920
if anyone

2748
01:41:21,920 --> 01:41:23,280
didn't raise their hand it disagrees

2749
01:41:23,280 --> 01:41:24,320
that we should have dropped this draft

2750
01:41:24,320 --> 01:41:25,600
did you want to make a comment at the

2751
01:41:25,600 --> 01:41:28,159
microphone

2752
01:41:31,119 --> 01:41:34,239
i i don't see anyone um

2753
01:41:34,239 --> 01:41:36,400
okay

2754
01:41:36,400 --> 01:41:38,320
cool um we'll we'll take this away's

2755
01:41:38,320 --> 01:41:39,679
chairs and speak to some people on back

2756
01:41:39,679 --> 01:41:42,239
channel um and and do our thing um so

2757
01:41:42,239 --> 01:41:44,080
stay tuned on the list um we've got

2758
01:41:44,080 --> 01:41:46,960
martin duke um now we we've changed the

2759
01:41:46,960 --> 01:41:48,719
agenda mid-session based on some

2760
01:41:48,719 --> 01:41:50,960
feedback um and the version negotiation

2761
01:41:50,960 --> 01:41:54,239
chat that was uh in david's slides so

2762
01:41:54,239 --> 01:41:56,719
well it's going to talk about quick v2

2763
01:41:56,719 --> 01:42:01,239
or whatever we might want to call it

2764
01:42:02,080 --> 01:42:04,400
hello again everyone uh thanks to lucas

2765
01:42:04,400 --> 01:42:06,239
from what was maybe a typo typing this

2766
01:42:06,239 --> 01:42:08,560
t-o-o i've decided to like really

2767
01:42:08,560 --> 01:42:10,480
embrace that because uh there's a bike

2768
01:42:10,480 --> 01:42:11,600
shed about what the version number

2769
01:42:11,600 --> 01:42:12,639
should be whether it's actually the

2770
01:42:12,639 --> 01:42:15,440
numeral two or not so i'll be very brief

2771
01:42:15,440 --> 01:42:18,719
um why is there v2 draft number one

2772
01:42:18,719 --> 01:42:20,080
when we talk about greasing the version

2773
01:42:20,080 --> 01:42:21,440
number people said we should roll up

2774
01:42:21,440 --> 01:42:23,600
with v2 as quickly as we can and this is

2775
01:42:23,600 --> 01:42:25,840
that uh number two to exercise versus

2776
01:42:25,840 --> 01:42:28,080
negotiation framework as david discussed

2777
01:42:28,080 --> 01:42:29,760
and then if there's any fixes we need to

2778
01:42:29,760 --> 01:42:30,560
make

2779
01:42:30,560 --> 01:42:32,480
some emergency patches to quick this

2780
01:42:32,480 --> 01:42:34,080
could be a vehicle for that

2781
01:42:34,080 --> 01:42:34,960
um

2782
01:42:34,960 --> 01:42:36,800
it's a very simple short and simple

2783
01:42:36,800 --> 01:42:38,880
draft it is exactly the same as v1

2784
01:42:38,880 --> 01:42:40,560
except for um

2785
01:42:40,560 --> 01:42:42,320
the version number and the salt and the

2786
01:42:42,320 --> 01:42:44,400
hkdf labels and sort of things you're

2787
01:42:44,400 --> 01:42:46,320
supposed to roll for every version there

2788
01:42:46,320 --> 01:42:48,320
are a couple of bike sheds about a lpn

2789
01:42:48,320 --> 01:42:50,320
and what the version number should be uh

2790
01:42:50,320 --> 01:42:51,600
though those were discussed pretty

2791
01:42:51,600 --> 01:42:53,280
thoroughly in 111 and nothing's happened

2792
01:42:53,280 --> 01:42:54,960
since then so i invite i direct you to

2793
01:42:54,960 --> 01:42:56,400
that uh

2794
01:42:56,400 --> 01:42:57,360
uh

2795
01:42:57,360 --> 01:42:59,280
that the records of that discussion if

2796
01:42:59,280 --> 01:43:00,639
you are interested in those in those

2797
01:43:00,639 --> 01:43:04,000
questions um so i guess you know i i

2798
01:43:04,000 --> 01:43:05,679
think it's about as radio dots as it

2799
01:43:05,679 --> 01:43:07,679
ever will be um if people are want to

2800
01:43:07,679 --> 01:43:10,400
implement this and and uh

2801
01:43:10,400 --> 01:43:12,639
and take it to standard um

2802
01:43:12,639 --> 01:43:14,480
we can do that so i'm happy to invite

2803
01:43:14,480 --> 01:43:17,959
comments on that

2804
01:43:29,199 --> 01:43:31,519
eric

2805
01:43:32,960 --> 01:43:34,639
a clarifying question is there any

2806
01:43:34,639 --> 01:43:36,800
reason that we'd want to include those

2807
01:43:36,800 --> 01:43:38,719
couple of bike sheds because it seems

2808
01:43:38,719 --> 01:43:40,560
like that it's kind of a no-brainer to

2809
01:43:40,560 --> 01:43:41,840
do the first bullet point which is

2810
01:43:41,840 --> 01:43:43,840
basically just let's rev the version

2811
01:43:43,840 --> 01:43:46,239
number um are we trying to open up the

2812
01:43:46,239 --> 01:43:48,960
scope to a bunch more than that or

2813
01:43:48,960 --> 01:43:51,440
is it still

2814
01:43:52,000 --> 01:43:53,360
in my view these are fundamental

2815
01:43:53,360 --> 01:43:55,119
questions about what happens when you

2816
01:43:55,119 --> 01:43:56,880
roll a new version uh that we didn't

2817
01:43:56,880 --> 01:43:59,040
really decisively resolve in my view in

2818
01:43:59,040 --> 01:44:01,920
shipping 9000 um again i i mean i don't

2819
01:44:01,920 --> 01:44:03,280
want to spend a ton of time on it i just

2820
01:44:03,280 --> 01:44:04,560
refer you to the

2821
01:44:04,560 --> 01:44:06,560
the the question just how do we number

2822
01:44:06,560 --> 01:44:08,480
things and and and what is the status of

2823
01:44:08,480 --> 01:44:10,320
aopn for new versions

2824
01:44:10,320 --> 01:44:11,600
uh we have to sell it one way or the

2825
01:44:11,600 --> 01:44:13,840
other

2826
01:44:14,000 --> 01:44:16,320
david

2827
01:44:18,880 --> 01:44:22,080
and there we go uh

2828
01:44:22,080 --> 01:44:24,719
thanks for the presentation martin um

2829
01:44:24,719 --> 01:44:27,040
i think it's

2830
01:44:27,040 --> 01:44:30,080
not a given that we want to ship a quick

2831
01:44:30,080 --> 01:44:32,639
version to with minor changes

2832
01:44:32,639 --> 01:44:34,480
um

2833
01:44:34,480 --> 01:44:36,480
because like that'll break a lot of

2834
01:44:36,480 --> 01:44:39,280
things so for example like sure adding

2835
01:44:39,280 --> 01:44:41,920
quick v2 support to my code base is

2836
01:44:41,920 --> 01:44:44,239
trivial like you know if we assume it's

2837
01:44:44,239 --> 01:44:46,080
a you know version that just has

2838
01:44:46,080 --> 01:44:49,760
different salts and whatever um but

2839
01:44:49,760 --> 01:44:52,800
if i do that then all of our tests will

2840
01:44:52,800 --> 01:44:54,560
have to run with another version and

2841
01:44:54,560 --> 01:44:55,679
it's like

2842
01:44:55,679 --> 01:44:58,159
like the carbon impact of that is like

2843
01:44:58,159 --> 01:44:59,840
more than all around the world which is

2844
01:44:59,840 --> 01:45:02,159
just terrifying when i think about it

2845
01:45:02,159 --> 01:45:04,320
but more importantly if we deploy this

2846
01:45:04,320 --> 01:45:06,560
on our servers it means that now we need

2847
01:45:06,560 --> 01:45:08,159
to support these things for longer we

2848
01:45:08,159 --> 01:45:10,320
need more versions than alt service and

2849
01:45:10,320 --> 01:45:12,239
we can end up with like compatibility

2850
01:45:12,239 --> 01:45:14,800
problems uh take for example we still

2851
01:45:14,800 --> 01:45:16,480
have middle boxes out there that like to

2852
01:45:16,480 --> 01:45:18,719
extract the s and i of quick packets

2853
01:45:18,719 --> 01:45:20,639
they will break some people will tell

2854
01:45:20,639 --> 01:45:22,080
you that's a feature

2855
01:45:22,080 --> 01:45:23,760
some people will tell me to roll back my

2856
01:45:23,760 --> 01:45:26,800
change because they consider it a bug so

2857
01:45:26,800 --> 01:45:28,400
there is a

2858
01:45:28,400 --> 01:45:29,600
what i'm trying to say is there is a

2859
01:45:29,600 --> 01:45:31,360
non-zero cost to deploying a quick

2860
01:45:31,360 --> 01:45:32,560
version to

2861
01:45:32,560 --> 01:45:35,520
and therefore is it the right move to do

2862
01:45:35,520 --> 01:45:38,080
a quick version two whose sole purpose

2863
01:45:38,080 --> 01:45:40,400
is to be version two or do we wanna take

2864
01:45:40,400 --> 01:45:42,159
up some more work and fix some things

2865
01:45:42,159 --> 01:45:44,320
that we want to fix as part of that

2866
01:45:44,320 --> 01:45:46,960
effort uh but then we open ourselves to

2867
01:45:46,960 --> 01:45:49,280
like second system syndrome so just

2868
01:45:49,280 --> 01:45:50,800
wanted to put that option out there it's

2869
01:45:50,800 --> 01:45:54,080
not free to do to do a version with a

2870
01:45:54,080 --> 01:45:56,159
few changes

2871
01:45:56,159 --> 01:45:57,760
thanks david i think that's a good point

2872
01:45:57,760 --> 01:45:59,920
i mean i would say that greasing i mean

2873
01:45:59,920 --> 01:46:01,199
that's kind of the nature of greasing

2874
01:46:01,199 --> 01:46:03,760
right is that you're deliberately

2875
01:46:03,760 --> 01:46:05,040
breaking little boxes that are

2876
01:46:05,040 --> 01:46:07,840
improperly um

2877
01:46:07,840 --> 01:46:09,840
making improper assumptions about the

2878
01:46:09,840 --> 01:46:11,040
the

2879
01:46:11,040 --> 01:46:13,119
packet format but uh fair enough yes

2880
01:46:13,119 --> 01:46:15,760
absolutely there's a risk of breakage um

2881
01:46:15,760 --> 01:46:17,440
if people adopt this

2882
01:46:17,440 --> 01:46:21,679
yeah i mean in this specific case uh i i

2883
01:46:21,679 --> 01:46:23,280
don't think if the middle box is

2884
01:46:23,280 --> 01:46:25,920
properly parsing quickview one packets

2885
01:46:25,920 --> 01:46:27,600
and is making the assumption that it can

2886
01:46:27,600 --> 01:46:29,280
only speak the version that was

2887
01:46:29,280 --> 01:46:31,280
published rfc when they were code

2888
01:46:31,280 --> 01:46:32,800
they're not technically doing anything

2889
01:46:32,800 --> 01:46:33,679
wrong

2890
01:46:33,679 --> 01:46:37,040
but but yeah thanks

2891
01:46:37,040 --> 01:46:40,040
becker

2892
01:46:41,280 --> 01:46:42,880
okay

2893
01:46:42,880 --> 01:46:44,320
thanks for thinking this through um i

2894
01:46:44,320 --> 01:46:46,880
guess i'm softly in favor of this um the

2895
01:46:46,880 --> 01:46:49,679
um i think it'd be good i i i know i

2896
01:46:49,679 --> 01:46:50,880
might as sort of

2897
01:46:50,880 --> 01:46:52,159
shape the little box thing as others

2898
01:46:52,159 --> 01:46:54,159
might be but i think it has some value i

2899
01:46:54,159 --> 01:46:55,440
think increasing i think that getting

2900
01:46:55,440 --> 01:46:57,040
some some experience in the machinery of

2901
01:46:57,040 --> 01:46:58,320
negotiation would be helpful since we're

2902
01:46:58,320 --> 01:47:00,880
actually going to specify it um i i

2903
01:47:00,880 --> 01:47:02,560
would be against making any technical

2904
01:47:02,560 --> 01:47:04,719
changes at all um really just on

2905
01:47:04,719 --> 01:47:06,880
pragmatic grounds um you know we like

2906
01:47:06,880 --> 01:47:09,040
opened up um you know we like we like

2907
01:47:09,040 --> 01:47:11,840
opened up 84 46 for the purpose of you

2908
01:47:11,840 --> 01:47:13,679
know um for the purpose of like removing

2909
01:47:13,679 --> 01:47:15,920
the word master and um and making some

2910
01:47:15,920 --> 01:47:17,520
technical and making some editorial

2911
01:47:17,520 --> 01:47:19,040
changes and i'm still screwing with it

2912
01:47:19,040 --> 01:47:20,840
like nine months later

2913
01:47:20,840 --> 01:47:23,040
um and not really a position about any

2914
01:47:23,040 --> 01:47:24,719
real changes at all so i think like you

2915
01:47:24,719 --> 01:47:25,520
know

2916
01:47:25,520 --> 01:47:26,880
like you know we get to publish this

2917
01:47:26,880 --> 01:47:29,280
tomorrow more or less as it is um but if

2918
01:47:29,280 --> 01:47:31,760
we like um you know but anything of my

2919
01:47:31,760 --> 01:47:33,520
traditional clarifications just like you

2920
01:47:33,520 --> 01:47:35,199
know

2921
01:47:35,199 --> 01:47:36,560
like once you open the patient you just

2922
01:47:36,560 --> 01:47:37,679
start to be like it starts to be like

2923
01:47:37,679 --> 01:47:39,840
really hard hard to stop right so so to

2924
01:47:39,840 --> 01:47:41,840
be absolutely clear i'm i'm also not in

2925
01:47:41,840 --> 01:47:43,520
favor of like putting any nice to haves

2926
01:47:43,520 --> 01:47:45,280
in here in terms of fixes i was talking

2927
01:47:45,280 --> 01:47:47,040
about like actual like discovered

2928
01:47:47,040 --> 01:47:48,400
security vulnerabilities and that sort

2929
01:47:48,400 --> 01:47:50,719
of thing should they arise yeah yeah and

2930
01:47:50,719 --> 01:47:52,080
i think like you know i think i i think

2931
01:47:52,080 --> 01:47:53,360
we should put like i think what i would

2932
01:47:53,360 --> 01:47:55,119
do and i still failed to do this with

2933
01:47:55,119 --> 01:47:58,239
846 is like put like a two month limit

2934
01:47:58,239 --> 01:48:00,159
on like call for like things and they

2935
01:48:00,159 --> 01:48:01,600
have to be like really clear defense of

2936
01:48:01,600 --> 01:48:02,560
some kind or another and then we'll just

2937
01:48:02,560 --> 01:48:04,719
like fix them and go um i mean like you

2938
01:48:04,719 --> 01:48:06,000
know i mean things like where it's

2939
01:48:06,000 --> 01:48:08,000
obvious as back as just like you know

2940
01:48:08,000 --> 01:48:09,920
like especially incoherent or it's like

2941
01:48:09,920 --> 01:48:11,440
contradicts itself or like it's

2942
01:48:11,440 --> 01:48:13,440
obviously wrong um but like i think you

2943
01:48:13,440 --> 01:48:15,119
know the idea should be

2944
01:48:15,119 --> 01:48:17,920
i think that um that like let me put it

2945
01:48:17,920 --> 01:48:19,440
this way you're like it should

2946
01:48:19,440 --> 01:48:22,159
absolutely be the case that like modulo

2947
01:48:22,159 --> 01:48:24,080
these constants your code in the wire

2948
01:48:24,080 --> 01:48:25,760
should not change and if color wires

2949
01:48:25,760 --> 01:48:27,199
change then we like them like they're

2950
01:48:27,199 --> 01:48:28,639
like we're probably like that's like bad

2951
01:48:28,639 --> 01:48:31,360
news right um yeah so that'd be by my

2952
01:48:31,360 --> 01:48:33,040
point

2953
01:48:33,040 --> 01:48:34,159
thank you

2954
01:48:34,159 --> 01:48:36,480
mt

2955
01:48:40,000 --> 01:48:43,040
i need to preempt this

2956
01:48:43,679 --> 01:48:46,719
uh so i'm also

2957
01:48:46,719 --> 01:48:49,360
sort of soft on this i

2958
01:48:49,360 --> 01:48:52,560
am maybe a little more supportive than

2959
01:48:52,560 --> 01:48:54,080
echo

2960
01:48:54,080 --> 01:48:56,800
support uh because i don't see us

2961
01:48:56,800 --> 01:48:58,480
shipping the version negotiation stuff

2962
01:48:58,480 --> 01:49:00,800
without something like this

2963
01:49:00,800 --> 01:49:03,440
and so um i think we should do this um

2964
01:49:03,440 --> 01:49:05,679
your discussion previously though uh

2965
01:49:05,679 --> 01:49:06,639
made me

2966
01:49:06,639 --> 01:49:08,480
think that you would you were doing like

2967
01:49:08,480 --> 01:49:10,400
a biz document but it doesn't seem to be

2968
01:49:10,400 --> 01:49:12,719
like that in its current form and i

2969
01:49:12,719 --> 01:49:14,239
prefer its current form i think what

2970
01:49:14,239 --> 01:49:16,320
you've done is is almost perfect for it

2971
01:49:16,320 --> 01:49:17,199
so

2972
01:49:17,199 --> 01:49:18,400
i

2973
01:49:18,400 --> 01:49:20,480
think this is something we should adopt

2974
01:49:20,480 --> 01:49:21,360
and

2975
01:49:21,360 --> 01:49:22,719
try to get it out at the same time as a

2976
01:49:22,719 --> 01:49:25,840
first negotiation draft

2977
01:49:26,000 --> 01:49:29,480
thank you brian

2978
01:49:29,760 --> 01:49:32,159
hello uh yeah so um everything martin

2979
01:49:32,159 --> 01:49:34,159
said and everything ecker said i would

2980
01:49:34,159 --> 01:49:36,000
add that i would actually go a little

2981
01:49:36,000 --> 01:49:37,520
further than that and request that the

2982
01:49:37,520 --> 01:49:39,280
chairs schedule a working group last

2983
01:49:39,280 --> 01:49:41,119
call at adoption time

2984
01:49:41,119 --> 01:49:42,960
um just to basically say there is an

2985
01:49:42,960 --> 01:49:45,840
actual deadline to keep that to keep the

2986
01:49:45,840 --> 01:49:46,880
um

2987
01:49:46,880 --> 01:49:49,760
uh the temptation to stuff things uh

2988
01:49:49,760 --> 01:49:51,360
into your uh

2989
01:49:51,360 --> 01:49:52,239
down

2990
01:49:52,239 --> 01:49:54,239
i i

2991
01:49:54,239 --> 01:49:55,520
um

2992
01:49:55,520 --> 01:49:57,520
like agree a bit with david's point we

2993
01:49:57,520 --> 01:49:59,199
should consider the cost of doing this i

2994
01:49:59,199 --> 01:50:00,480
think that the right way to consider the

2995
01:50:00,480 --> 01:50:02,159
cost of doing this is publish a document

2996
01:50:02,159 --> 01:50:04,159
experiment

2997
01:50:04,159 --> 01:50:05,119
thank you

2998
01:50:05,119 --> 01:50:09,280
yeah uh like i i'm very intrigued i'm

2999
01:50:09,280 --> 01:50:11,040
i i'm very sympathetic to the sentiment

3000
01:50:11,040 --> 01:50:12,960
to just like ship it immediately i do

3001
01:50:12,960 --> 01:50:14,560
think we have to work out this aopn

3002
01:50:14,560 --> 01:50:16,239
issue uh

3003
01:50:16,239 --> 01:50:17,679
uh and just decide what we're going to

3004
01:50:17,679 --> 01:50:19,280
do will that take more than will that

3005
01:50:19,280 --> 01:50:20,560
take more than two or three months i'm

3006
01:50:20,560 --> 01:50:22,480
not saying schedule working group call

3007
01:50:22,480 --> 01:50:24,960
to start at adoption i'm saying

3008
01:50:24,960 --> 01:50:27,199
at adoption time also go ahead and say

3009
01:50:27,199 --> 01:50:29,040
working group class call will start at

3010
01:50:29,040 --> 01:50:31,199
this time yeah should it no but you know

3011
01:50:31,199 --> 01:50:33,360
we've we've done crazy things before so

3012
01:50:33,360 --> 01:50:35,520
will it is a different question yeah

3013
01:50:35,520 --> 01:50:37,679
tommy

3014
01:50:37,679 --> 01:50:39,199
um

3015
01:50:39,199 --> 01:50:41,040
yeah i wanna i'll echo

3016
01:50:41,040 --> 01:50:43,920
barton and brian i i think this is good

3017
01:50:43,920 --> 01:50:46,560
to adopt i think it's good to do and

3018
01:50:46,560 --> 01:50:48,000
the reason i came into the queue just

3019
01:50:48,000 --> 01:50:49,679
kind of answer to

3020
01:50:49,679 --> 01:50:51,599
david's point about it being expensive

3021
01:50:51,599 --> 01:50:53,119
um

3022
01:50:53,119 --> 01:50:55,679
i don't think we need to see everyone do

3023
01:50:55,679 --> 01:50:57,520
this like we just need enough greasing

3024
01:50:57,520 --> 01:50:59,679
that the internet

3025
01:50:59,679 --> 01:51:02,800
sees the new version going by right and

3026
01:51:02,800 --> 01:51:04,320
um there are

3027
01:51:04,320 --> 01:51:05,679
there are places where we could do it

3028
01:51:05,679 --> 01:51:07,040
like we have

3029
01:51:07,040 --> 01:51:09,280
different stacks like we don't have like

3030
01:51:09,280 --> 01:51:11,199
the stack that youtube uses doesn't have

3031
01:51:11,199 --> 01:51:13,280
to use this um right now you know we're

3032
01:51:13,280 --> 01:51:16,080
using quick uh for a ton of traffic

3033
01:51:16,080 --> 01:51:17,119
with our

3034
01:51:17,119 --> 01:51:20,239
private relay stuff on apple devices we

3035
01:51:20,239 --> 01:51:21,679
could you know like we don't care about

3036
01:51:21,679 --> 01:51:23,360
sni there we don't care about any of

3037
01:51:23,360 --> 01:51:24,960
this stuff we can just like yeah if it

3038
01:51:24,960 --> 01:51:26,560
breaks middle boxes let's figure that

3039
01:51:26,560 --> 01:51:28,960
out let's find it out and there are

3040
01:51:28,960 --> 01:51:31,119
places that could deploy this

3041
01:51:31,119 --> 01:51:34,960
first that are safer than changing

3042
01:51:34,960 --> 01:51:36,719
google's main stack

3043
01:51:36,719 --> 01:51:40,000
so we can volunteer to do that

3044
01:51:40,560 --> 01:51:43,119
thank you uh give it back to the chairs

3045
01:51:43,119 --> 01:51:45,759
thanks everyone

3046
01:51:46,480 --> 01:51:48,800
well thank you um thank you for the

3047
01:51:48,800 --> 01:51:50,800
discussion i think uh we'll go away

3048
01:51:50,800 --> 01:51:52,880
based on that feedback probably send an

3049
01:51:52,880 --> 01:51:54,639
adoption call to the list um so

3050
01:51:54,639 --> 01:51:56,159
encourage people to look out for that

3051
01:51:56,159 --> 01:51:58,960
and provide further feedback there um

3052
01:51:58,960 --> 01:52:01,679
that gives us some time for our as time

3053
01:52:01,679 --> 01:52:04,400
permits bucket um we'd like to go with

3054
01:52:04,400 --> 01:52:06,880
the first of those items which is ian to

3055
01:52:06,880 --> 01:52:08,080
talk about

3056
01:52:08,080 --> 01:52:11,280
accuracy timestamps

3057
01:52:11,360 --> 01:52:13,440
or is connor presenting

3058
01:52:13,440 --> 01:52:16,000
i mean it's going to be conor m um feel

3059
01:52:16,000 --> 01:52:17,440
free to ask questions of me as well but

3060
01:52:17,440 --> 01:52:19,119
um he's kind of the expert on this in a

3061
01:52:19,119 --> 01:52:20,239
lot of ways

3062
01:52:20,239 --> 01:52:21,440
let me

3063
01:52:21,440 --> 01:52:23,520
share the slides here

3064
01:52:23,520 --> 01:52:26,239
yep europe take it away awesome uh so my

3065
01:52:26,239 --> 01:52:28,400
name is connor i uh formerly worked at

3066
01:52:28,400 --> 01:52:30,159
google developing congestion control

3067
01:52:30,159 --> 01:52:32,639
algorithms for real-time interactive

3068
01:52:32,639 --> 01:52:34,719
streaming applications such as cloud

3069
01:52:34,719 --> 01:52:37,040
gaming in the form of google stadia and

3070
01:52:37,040 --> 01:52:38,560
presenting this work in collaboration

3071
01:52:38,560 --> 01:52:39,599
with ian

3072
01:52:39,599 --> 01:52:41,520
and we're proposing

3073
01:52:41,520 --> 01:52:44,560
a quick extension for reporting fine

3074
01:52:44,560 --> 01:52:46,560
grain packet receive timestamp

3075
01:52:46,560 --> 01:52:48,239
information meaning the

3076
01:52:48,239 --> 01:52:50,960
receiver of the packets tells the sender

3077
01:52:50,960 --> 01:52:53,040
when exactly each packet was received

3078
01:52:53,040 --> 01:52:54,159
and

3079
01:52:54,159 --> 01:52:56,400
is all with the overall goal to offer

3080
01:52:56,400 --> 01:52:58,719
richer signals to congestion control

3081
01:52:58,719 --> 01:53:03,119
algorithms built on top of quick

3082
01:53:03,119 --> 01:53:05,199
for some brief context received

3083
01:53:05,199 --> 01:53:06,960
timestamps were supported in the

3084
01:53:06,960 --> 01:53:09,440
original g-quick implementation

3085
01:53:09,440 --> 01:53:12,080
initially to serve webrtc's goog cc

3086
01:53:12,080 --> 01:53:14,000
algorithm which requires it and so here

3087
01:53:14,000 --> 01:53:15,360
we're wanting to

3088
01:53:15,360 --> 01:53:16,880
kind of evolve and standardize that

3089
01:53:16,880 --> 01:53:19,440
concept and also for awareness there's

3090
01:53:19,440 --> 01:53:21,599
another timestamp related draft worth

3091
01:53:21,599 --> 01:53:23,679
looking at which has a kind of similar

3092
01:53:23,679 --> 01:53:26,000
purpose but achieves it by slightly

3093
01:53:26,000 --> 01:53:28,159
different means and at a little bit

3094
01:53:28,159 --> 01:53:31,280
different granularity

3095
01:53:31,679 --> 01:53:34,400
there's quite a bit of existing work on

3096
01:53:34,400 --> 01:53:36,960
using received timestamps to improve the

3097
01:53:36,960 --> 01:53:39,520
precision of a network measurement and

3098
01:53:39,520 --> 01:53:41,840
the foundational intuition behind these

3099
01:53:41,840 --> 01:53:42,880
methods

3100
01:53:42,880 --> 01:53:44,320
is to

3101
01:53:44,320 --> 01:53:46,719
measure when packet ingresses and

3102
01:53:46,719 --> 01:53:48,159
egresses

3103
01:53:48,159 --> 01:53:50,480
the downstream network path model is a

3104
01:53:50,480 --> 01:53:51,679
queue

3105
01:53:51,679 --> 01:53:52,800
and then

3106
01:53:52,800 --> 01:53:55,360
by observing the variation in that

3107
01:53:55,360 --> 01:53:58,400
one-way q-reversal delay

3108
01:53:58,400 --> 01:53:59,760
you can better estimate various

3109
01:53:59,760 --> 01:54:01,199
properties of the underlying network

3110
01:54:01,199 --> 01:54:02,159
state

3111
01:54:02,159 --> 01:54:04,080
and notably this doesn't require clock

3112
01:54:04,080 --> 01:54:05,599
synchronization between the client and

3113
01:54:05,599 --> 01:54:08,320
server because the q traversal time

3114
01:54:08,320 --> 01:54:09,679
variation

3115
01:54:09,679 --> 01:54:11,760
is measured always

3116
01:54:11,760 --> 01:54:15,520
relative to other q traversal times

3117
01:54:15,520 --> 01:54:17,599
probably the most widely deployed

3118
01:54:17,599 --> 01:54:20,560
application of this concept is in webrtc

3119
01:54:20,560 --> 01:54:23,119
congestion control which observes

3120
01:54:23,119 --> 01:54:25,280
differences between

3121
01:54:25,280 --> 01:54:27,760
packet inter-departure and packet inter

3122
01:54:27,760 --> 01:54:30,719
arrival times at a frame level to

3123
01:54:30,719 --> 01:54:33,599
estimate some state about the underlying

3124
01:54:33,599 --> 01:54:36,239
queue and respond to congestion and

3125
01:54:36,239 --> 01:54:38,320
there's also research like path chirp

3126
01:54:38,320 --> 01:54:40,560
and associated methods

3127
01:54:40,560 --> 01:54:43,040
like packet pair and packet train which

3128
01:54:43,040 --> 01:54:45,280
similarly observe these send and receive

3129
01:54:45,280 --> 01:54:46,639
time stamps

3130
01:54:46,639 --> 01:54:49,280
for multiple temporally coherent packets

3131
01:54:49,280 --> 01:54:52,480
to estimate at that network queue state

3132
01:54:52,480 --> 01:54:54,000
and my team at google also recently

3133
01:54:54,000 --> 01:54:56,080
submitted a paper which we hope to get

3134
01:54:56,080 --> 01:54:57,599
accepted and published and share with

3135
01:54:57,599 --> 01:55:00,000
you all detailing how we use receive

3136
01:55:00,000 --> 01:55:01,920
timestamps for these kind of latency

3137
01:55:01,920 --> 01:55:04,800
critical real-time media applications

3138
01:55:04,800 --> 01:55:07,360
in in production

3139
01:55:07,360 --> 01:55:10,639
so let me skip ahead

3140
01:55:12,320 --> 01:55:14,880
at a high level we're suggesting

3141
01:55:14,880 --> 01:55:16,080
a new

3142
01:55:16,080 --> 01:55:19,599
accuracy timestamp frame type to be sent

3143
01:55:19,599 --> 01:55:22,159
in the same manner as a normal act frame

3144
01:55:22,159 --> 01:55:24,480
in the place of a normal act frame

3145
01:55:24,480 --> 01:55:26,560
and it has all the uh

3146
01:55:26,560 --> 01:55:28,880
fields of the normal arc frame but also

3147
01:55:28,880 --> 01:55:33,199
includes additional fields to encode

3148
01:55:33,199 --> 01:55:35,920
uh receive timestamp information in a

3149
01:55:35,920 --> 01:55:38,560
efficient variant based format which

3150
01:55:38,560 --> 01:55:41,920
we'd love we'd love feedback on

3151
01:55:41,920 --> 01:55:43,520
we've defined

3152
01:55:43,520 --> 01:55:44,480
two

3153
01:55:44,480 --> 01:55:47,119
transport parameters to negotiate the

3154
01:55:47,119 --> 01:55:49,360
the use of this frame the first

3155
01:55:49,360 --> 01:55:52,320
specifies the maximum number of receipts

3156
01:55:52,320 --> 01:55:54,639
stamps the end point would like to have

3157
01:55:54,639 --> 01:55:57,119
reported back to it and so zero here

3158
01:55:57,119 --> 01:55:58,880
means i don't want to receive

3159
01:55:58,880 --> 01:56:01,920
these packet receipt timestamp reports

3160
01:56:01,920 --> 01:56:05,040
and the second parameter is the exponent

3161
01:56:05,040 --> 01:56:08,080
precision to use when encoding the

3162
01:56:08,080 --> 01:56:09,920
timestamp deltas

3163
01:56:09,920 --> 01:56:13,440
much like octal exponent currently does

3164
01:56:13,440 --> 01:56:16,400
where you can achieve better efficiency

3165
01:56:16,400 --> 01:56:18,719
at some precision cost

3166
01:56:18,719 --> 01:56:20,719
so that's the the super short version

3167
01:56:20,719 --> 01:56:22,719
and maybe i'll hand it over to ian then

3168
01:56:22,719 --> 01:56:27,639
at this point to talk about next steps

3169
01:56:41,119 --> 01:56:42,880
yeah i mean i

3170
01:56:42,880 --> 01:56:43,599
i

3171
01:56:43,599 --> 01:56:45,840
i look at that design and it's it's kind

3172
01:56:45,840 --> 01:56:48,000
of a logical design if you want to do

3173
01:56:48,000 --> 01:56:49,920
fine grain reporting that you have to

3174
01:56:49,920 --> 01:56:52,080
include that in a knack format

3175
01:56:52,080 --> 01:56:55,520
now uh the um the reason

3176
01:56:55,520 --> 01:56:57,840
the current extension doesn't do that

3177
01:56:57,840 --> 01:57:00,239
because my puzzle doesn't do that

3178
01:57:00,239 --> 01:57:03,840
is because i got the feedback in the

3179
01:57:03,840 --> 01:57:05,119
working group

3180
01:57:05,119 --> 01:57:06,320
at the time

3181
01:57:06,320 --> 01:57:07,920
that we wanted extension to be

3182
01:57:07,920 --> 01:57:10,320
composable

3183
01:57:10,320 --> 01:57:12,560
that is that we wanted the extension to

3184
01:57:12,560 --> 01:57:14,639
be outside

3185
01:57:14,639 --> 01:57:18,239
of the arc format for example

3186
01:57:18,239 --> 01:57:20,080
so that you people that use the arc

3187
01:57:20,080 --> 01:57:22,480
format can go on using it

3188
01:57:22,480 --> 01:57:25,360
but if the extension is present they can

3189
01:57:25,360 --> 01:57:26,880
compose

3190
01:57:26,880 --> 01:57:30,480
the extension with the arc format

3191
01:57:30,480 --> 01:57:32,639
and and that's that's one of the subtle

3192
01:57:32,639 --> 01:57:34,000
difference that you mentioned and

3193
01:57:34,000 --> 01:57:35,520
whether it should be

3194
01:57:35,520 --> 01:57:36,639
basically

3195
01:57:36,639 --> 01:57:38,880
let's change the arc frame to have an ac

3196
01:57:38,880 --> 01:57:41,440
plus timestamp frame

3197
01:57:41,440 --> 01:57:43,760
or whether we should have a timestamp

3198
01:57:43,760 --> 01:57:44,960
extension

3199
01:57:44,960 --> 01:57:46,159
and

3200
01:57:46,159 --> 01:57:48,719
parallel to the arc extension the arc

3201
01:57:48,719 --> 01:57:50,080
frame

3202
01:57:50,080 --> 01:57:53,840
that was really the big design question

3203
01:57:53,920 --> 01:57:54,880
yeah thanks for bringing that up

3204
01:57:54,880 --> 01:57:56,560
christian um

3205
01:57:56,560 --> 01:57:57,440
so

3206
01:57:57,440 --> 01:57:58,800
we kind of talked about this a long time

3207
01:57:58,800 --> 01:57:59,599
ago

3208
01:57:59,599 --> 01:58:00,880
there are definite advantages to

3209
01:58:00,880 --> 01:58:02,480
including it in the frame which is to

3210
01:58:02,480 --> 01:58:04,000
say that the congestion controller gets

3211
01:58:04,000 --> 01:58:05,199
to consume all the acknowledgement

3212
01:58:05,199 --> 01:58:07,599
information simultaneously

3213
01:58:07,599 --> 01:58:09,199
which kind of just makes it easier to

3214
01:58:09,199 --> 01:58:10,880
write a congestion controller

3215
01:58:10,880 --> 01:58:13,119
um but but you're right that

3216
01:58:13,119 --> 01:58:16,320
there may be use cases for which

3217
01:58:16,320 --> 01:58:18,639
this is less suitable because it is not

3218
01:58:18,639 --> 01:58:21,040
composable um

3219
01:58:21,040 --> 01:58:22,400
and so

3220
01:58:22,400 --> 01:58:23,679
it might depend on the use case i don't

3221
01:58:23,679 --> 01:58:25,840
know

3222
01:58:27,840 --> 01:58:30,800
for example an example of composition is

3223
01:58:30,800 --> 01:58:32,480
using these

3224
01:58:32,480 --> 01:58:35,350
as part of the past challenges

3225
01:58:35,350 --> 01:58:38,439
[Music]

3226
01:58:42,000 --> 01:58:43,199
yeah

3227
01:58:43,199 --> 01:58:44,880
and you could also use this i would

3228
01:58:44,880 --> 01:58:46,000
think

3229
01:58:46,000 --> 01:58:48,560
to get the same information but i guess

3230
01:58:48,560 --> 01:58:49,360
but

3231
01:58:49,360 --> 01:58:51,599
you would have to add

3232
01:58:51,599 --> 01:58:53,920
yeah it will be quite it's not quite the

3233
01:58:53,920 --> 01:58:54,800
same

3234
01:58:54,800 --> 01:58:56,159
because i mean you are not supposed to

3235
01:58:56,159 --> 01:58:57,280
act you are you are supposed to

3236
01:58:57,280 --> 01:58:59,119
acknowledge the past challenges etc i

3237
01:58:59,119 --> 01:59:01,440
mean it's

3238
01:59:01,440 --> 01:59:03,040
i'll have to uh about that

3239
01:59:03,040 --> 01:59:05,280
thanks

3240
01:59:06,080 --> 01:59:06,880
uh

3241
01:59:06,880 --> 01:59:07,840
would you

3242
01:59:07,840 --> 01:59:11,040
want to go because we have one man

3243
01:59:11,840 --> 01:59:15,280
um thank you um i wanted to ask about

3244
01:59:15,280 --> 01:59:17,760
the just a clarification question so if

3245
01:59:17,760 --> 01:59:20,480
there's an ack timestamp frame

3246
01:59:20,480 --> 01:59:22,560
is it going to follow the same frequency

3247
01:59:22,560 --> 01:59:25,360
as the act frequency frame or probably

3248
01:59:25,360 --> 01:59:27,280
less than that

3249
01:59:27,280 --> 01:59:29,599
and when there's you know compressed axe

3250
01:59:29,599 --> 01:59:32,880
when you are acting maybe once per rtt

3251
01:59:32,880 --> 01:59:35,040
that probably won't work for real-time

3252
01:59:35,040 --> 01:59:38,320
transport so um

3253
01:59:38,320 --> 01:59:40,480
yeah just something to consider i guess

3254
01:59:40,480 --> 01:59:42,560
um

3255
01:59:42,560 --> 01:59:44,480
yeah

3256
01:59:44,480 --> 01:59:46,239
right

3257
01:59:46,239 --> 01:59:48,080
yeah so clearly the the

3258
01:59:48,080 --> 01:59:49,199
real-time congestion controller would

3259
01:59:49,199 --> 01:59:50,880
have to decide what frequency of

3260
01:59:50,880 --> 01:59:52,320
acknowledgement it needed if you used

3261
01:59:52,320 --> 01:59:54,639
active frequency um

3262
01:59:54,639 --> 01:59:56,960
and so i assume that it would want to

3263
01:59:56,960 --> 01:59:58,800
use a value that's you know more

3264
01:59:58,800 --> 02:00:00,320
canonically typical like a quarter of an

3265
02:00:00,320 --> 02:00:02,400
rtt half an rtt or less

3266
02:00:02,400 --> 02:00:03,360
um

3267
02:00:03,360 --> 02:00:05,920
but yes and and

3268
02:00:05,920 --> 02:00:06,719
um

3269
02:00:06,719 --> 02:00:08,480
i don't know i i guess i i feel like

3270
02:00:08,480 --> 02:00:09,840
this is a tool that a congestion

3271
02:00:09,840 --> 02:00:10,800
controller can use to get more

3272
02:00:10,800 --> 02:00:14,719
information but um it's you know without

3273
02:00:14,719 --> 02:00:16,000
each congestion driller probably needs

3274
02:00:16,000 --> 02:00:17,280
to decide like exactly how much

3275
02:00:17,280 --> 02:00:20,239
information it really needs and when

3276
02:00:20,239 --> 02:00:22,000
so totally valid point

3277
02:00:22,000 --> 02:00:23,360
no

3278
02:00:23,360 --> 02:00:25,280
okay and is the timestamp the only thing

3279
02:00:25,280 --> 02:00:26,719
that is useful for the real-time

3280
02:00:26,719 --> 02:00:28,800
condition controller or

3281
02:00:28,800 --> 02:00:31,840
are there something like rtcp

3282
02:00:31,840 --> 02:00:34,000
what packet loss and other

3283
02:00:34,000 --> 02:00:36,239
uh signals are used but they're i think

3284
02:00:36,239 --> 02:00:37,199
they're not used for bandwidth

3285
02:00:37,199 --> 02:00:39,520
estimation per se um

3286
02:00:39,520 --> 02:00:41,119
conor might have more like information

3287
02:00:41,119 --> 02:00:42,800
but um i think

3288
02:00:42,800 --> 02:00:44,960
probably probably that's a um this was

3289
02:00:44,960 --> 02:00:46,800
sent out to the list would you mind

3290
02:00:46,800 --> 02:00:48,320
posting there since we have zero minutes

3291
02:00:48,320 --> 02:00:49,360
left

3292
02:00:49,360 --> 02:00:50,560
okay

3293
02:00:50,560 --> 02:00:51,679
i think maybe connor can give you a

3294
02:00:51,679 --> 02:00:53,360
longer answer

3295
02:00:53,360 --> 02:00:54,800
okay thank you

3296
02:00:54,800 --> 02:00:56,719
yeah thanks

3297
02:00:56,719 --> 02:01:00,239
john you're zero man

3298
02:01:01,280 --> 02:01:04,719
um thanks so uh two quick points

3299
02:01:04,719 --> 02:01:06,480
first i would strongly argue for

3300
02:01:06,480 --> 02:01:08,880
composing the reason being

3301
02:01:08,880 --> 02:01:10,000
that the number of times that you want

3302
02:01:10,000 --> 02:01:12,159
to repeat this information is different

3303
02:01:12,159 --> 02:01:13,840
for an acknowledgement versus for a time

3304
02:01:13,840 --> 02:01:15,679
stamp so a timestamp is advisory

3305
02:01:15,679 --> 02:01:17,280
typically and you just need to send it

3306
02:01:17,280 --> 02:01:18,639
once even if the

3307
02:01:18,639 --> 02:01:21,360
peer does not receive it it's fine but

3308
02:01:21,360 --> 02:01:22,719
with an acknowledgement information you

3309
02:01:22,719 --> 02:01:23,679
may want to keep repeating the

3310
02:01:23,679 --> 02:01:25,599
information so there's a lot of

3311
02:01:25,599 --> 02:01:27,360
repetition that happens there which you

3312
02:01:27,360 --> 02:01:29,199
can avoid entirely when you're doing

3313
02:01:29,199 --> 02:01:31,280
time stamps um so having a separate

3314
02:01:31,280 --> 02:01:32,880
frame that conveys that information

3315
02:01:32,880 --> 02:01:34,719
would allow you to do that whereas it'll

3316
02:01:34,719 --> 02:01:36,480
be tricky if you're trying to put that

3317
02:01:36,480 --> 02:01:38,560
into the back frame itself

3318
02:01:38,560 --> 02:01:39,679
second

3319
02:01:39,679 --> 02:01:41,280
um

3320
02:01:41,280 --> 02:01:43,360
the the reason that arc ranges exist in

3321
02:01:43,360 --> 02:01:45,760
the act frame is because we can

3322
02:01:45,760 --> 02:01:46,800
express

3323
02:01:46,800 --> 02:01:48,840
a list of acts as a

3324
02:01:48,840 --> 02:01:51,199
range it doesn't make sense to me to

3325
02:01:51,199 --> 02:01:53,040
express a timestamp range

3326
02:01:53,040 --> 02:01:55,119
uh i'm not quite sure what that means

3327
02:01:55,119 --> 02:01:56,719
and what that really is

3328
02:01:56,719 --> 02:01:59,440
so i would i would have expected to see

3329
02:01:59,440 --> 02:02:01,040
a timestamp per packet that is being

3330
02:02:01,040 --> 02:02:04,159
acknowledged because that is really what

3331
02:02:04,159 --> 02:02:06,080
wants to receive

3332
02:02:06,080 --> 02:02:07,360
yeah that's what the format actually

3333
02:02:07,360 --> 02:02:09,599
does um it's just that the range is used

3334
02:02:09,599 --> 02:02:10,560
because

3335
02:02:10,560 --> 02:02:12,560
um typically packets aren't received in

3336
02:02:12,560 --> 02:02:13,840
order and there are not a huge number of

3337
02:02:13,840 --> 02:02:15,679
gaps and the range it allows you to

3338
02:02:15,679 --> 02:02:16,639
express

3339
02:02:16,639 --> 02:02:19,760
uh ranges of timestamps more efficiently

3340
02:02:19,760 --> 02:02:21,280
but what is the range what what is the

3341
02:02:21,280 --> 02:02:23,119
range of timestamp though that's what

3342
02:02:23,119 --> 02:02:24,480
i'm asking what does the timestamp range

3343
02:02:24,480 --> 02:02:26,400
look like uh and this is going into the

3344
02:02:26,400 --> 02:02:28,480
details but basically it's like

3345
02:02:28,480 --> 02:02:30,639
you get timestamps for the next seven

3346
02:02:30,639 --> 02:02:31,679
packets

3347
02:02:31,679 --> 02:02:33,040
and

3348
02:02:33,040 --> 02:02:35,840
um instead of

3349
02:02:36,400 --> 02:02:38,800
folks we're like yeah

3350
02:02:38,800 --> 02:02:41,119
we should go we should get along but yes

3351
02:02:41,119 --> 02:02:43,199
yep we'll do it it's a framing thing not

3352
02:02:43,199 --> 02:02:45,840
a not uh haven't distracted what the

3353
02:02:45,840 --> 02:02:47,040
data is and what the framing is

3354
02:02:47,040 --> 02:02:49,679
separately that's right yeah

3355
02:02:49,679 --> 02:02:51,840
so so thanks for your time um we need to

3356
02:02:51,840 --> 02:02:53,520
wrap this up now let's keep it short and

3357
02:02:53,520 --> 02:02:56,000
sweet uh i'd like to thank everyone for

3358
02:02:56,000 --> 02:02:58,800
this meeting and behaving well um thank

3359
02:02:58,800 --> 02:03:02,400
you to our scribe and uh watson and our

3360
02:03:02,400 --> 02:03:05,520
notetakers jonathan and robin um nico

3361
02:03:05,520 --> 02:03:07,199
apologies we can get to you as time

3362
02:03:07,199 --> 02:03:09,520
permits um we'll follow that up on that

3363
02:03:09,520 --> 02:03:12,320
off off list um we have some chair

3364
02:03:12,320 --> 02:03:13,599
actions we need to take we'll speak to

3365
02:03:13,599 --> 02:03:15,440
the ads and various people in back

3366
02:03:15,440 --> 02:03:16,880
channel so keep your eyes on the mailing

3367
02:03:16,880 --> 02:03:17,679
list

3368
02:03:17,679 --> 02:03:19,360
that's all i have i don't know if you

3369
02:03:19,360 --> 02:03:22,239
want to add anything matt

3370
02:03:24,400 --> 02:03:25,920
okay

3371
02:03:25,920 --> 02:03:28,239
until until next time same time

3372
02:03:28,239 --> 02:03:29,760
different place

3373
02:03:29,760 --> 02:03:31,280
maybe different time

3374
02:03:31,280 --> 02:03:34,280
goodbye

