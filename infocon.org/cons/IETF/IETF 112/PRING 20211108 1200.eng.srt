1
00:00:29,039 --> 00:00:30,880
okay

2
00:00:30,880 --> 00:00:32,960
my clock shows that it's the top of the

3
00:00:32,960 --> 00:00:34,880
hour

4
00:00:34,880 --> 00:00:36,000
so

5
00:00:36,000 --> 00:00:39,200
we will get started

6
00:00:39,600 --> 00:00:41,280
one of the chairs at least we'll be

7
00:00:41,280 --> 00:00:42,719
watching the

8
00:00:42,719 --> 00:00:46,000
chat and so please put yourself

9
00:00:46,000 --> 00:00:48,399
on the queue if you but you you just use

10
00:00:48,399 --> 00:00:50,239
the meat echo tool to put yourself on

11
00:00:50,239 --> 00:00:51,840
the queue you don't need to use the chat

12
00:00:51,840 --> 00:00:53,440
but we will try to watch if for some

13
00:00:53,440 --> 00:00:56,559
reason you have trouble with the queue

14
00:00:56,559 --> 00:00:58,320
i will now go through the chairs

15
00:00:58,320 --> 00:00:59,840
presentation

16
00:00:59,840 --> 00:01:02,320
and then we will begin the regular

17
00:01:02,320 --> 00:01:05,358
meeting materials

18
00:01:05,680 --> 00:01:08,880
reminder to go with the notewell our ads

19
00:01:08,880 --> 00:01:11,119
i believe all of the ads have asked all

20
00:01:11,119 --> 00:01:13,520
the chairs to make to issue this

21
00:01:13,520 --> 00:01:16,799
reminder of bcp 54

22
00:01:16,799 --> 00:01:20,159
that folks need to be respectful and

23
00:01:20,159 --> 00:01:21,439
courteous

24
00:01:21,439 --> 00:01:23,920
we discussed the technical material and

25
00:01:23,920 --> 00:01:26,720
solutions for the global internet

26
00:01:26,720 --> 00:01:27,759
across

27
00:01:27,759 --> 00:01:30,320
a range of requirements

28
00:01:30,320 --> 00:01:32,880
and that everybody's here to participate

29
00:01:32,880 --> 00:01:35,040
we don't get into personal insults or

30
00:01:35,040 --> 00:01:36,720
anything else

31
00:01:36,720 --> 00:01:39,439
we have actually this time around

32
00:01:39,439 --> 00:01:41,200
been pretty good about all of this we're

33
00:01:41,200 --> 00:01:43,920
doing okay but we wanted to remind folks

34
00:01:43,920 --> 00:01:47,040
anyway so thank you

35
00:01:49,840 --> 00:01:52,399
here is the agenda

36
00:01:52,399 --> 00:01:55,360
it is not an especially crowded agenda

37
00:01:55,360 --> 00:01:57,920
we have two hours we're scheduled for 85

38
00:01:57,920 --> 00:01:59,040
minutes

39
00:01:59,040 --> 00:02:00,399
i wouldn't be surprised if some

40
00:02:00,399 --> 00:02:03,360
conversations take longer but

41
00:02:03,360 --> 00:02:05,280
we're going to go through it so

42
00:02:05,280 --> 00:02:08,318
for example the t-wamp draft will be up

43
00:02:08,318 --> 00:02:10,878
after i finish going through the chairs

44
00:02:10,878 --> 00:02:12,800
presentation

45
00:02:12,800 --> 00:02:14,879
and then we'll go through the rest of

46
00:02:14,879 --> 00:02:15,920
these

47
00:02:15,920 --> 00:02:17,520
i don't see any reason in walking you

48
00:02:17,520 --> 00:02:20,080
through this this has been on

49
00:02:20,080 --> 00:02:21,840
the meeting materia the

50
00:02:21,840 --> 00:02:23,840
agenda page

51
00:02:23,840 --> 00:02:25,599
and we will go through each of these

52
00:02:25,599 --> 00:02:28,400
presentations so but i wanted to make

53
00:02:28,400 --> 00:02:31,040
sure folks could see it if anybody sees

54
00:02:31,040 --> 00:02:34,160
a need to adjust the agenda

55
00:02:34,160 --> 00:02:35,120
please

56
00:02:35,120 --> 00:02:36,959
put yourself on the queue now so we can

57
00:02:36,959 --> 00:02:39,760
recognize you

58
00:02:41,840 --> 00:02:45,680
not seeing anything thank you

59
00:02:47,120 --> 00:02:49,360
um

60
00:02:50,080 --> 00:02:54,400
meeting minutes or encoder cody md

61
00:02:55,040 --> 00:02:57,920
actually are they or are they in notes

62
00:02:57,920 --> 00:03:00,000
well they're in the link that you get to

63
00:03:00,000 --> 00:03:01,840
if you click the note taking tool of the

64
00:03:01,840 --> 00:03:04,879
top of this

65
00:03:04,879 --> 00:03:08,800
i think they changed the name for this

66
00:03:08,800 --> 00:03:10,159
right

67
00:03:10,159 --> 00:03:11,120
one of the

68
00:03:11,120 --> 00:03:13,920
other ads

69
00:03:14,400 --> 00:03:18,200
said it's actually notes.itf.org

70
00:03:18,879 --> 00:03:22,159
followed invincodamd.iatf.org

71
00:03:22,159 --> 00:03:24,319
i didn't edit this properly it's my

72
00:03:24,319 --> 00:03:26,319
fault sorry folks

73
00:03:26,319 --> 00:03:28,560
thank you eric

74
00:03:28,560 --> 00:03:30,400
but the link at the top will take you

75
00:03:30,400 --> 00:03:33,040
there please do help our secretary take

76
00:03:33,040 --> 00:03:35,120
minutes there

77
00:03:35,120 --> 00:03:37,280
and

78
00:03:38,480 --> 00:03:40,400
as the queue management enter the queue

79
00:03:40,400 --> 00:03:42,319
using the tool

80
00:03:42,319 --> 00:03:44,239
mute yourself when you are not speaking

81
00:03:44,239 --> 00:03:45,680
when you're on the q

82
00:03:45,680 --> 00:03:48,080
i or whoever whichever chair is running

83
00:03:48,080 --> 00:03:50,000
things will tell you when it's your turn

84
00:03:50,000 --> 00:03:52,720
unmute yourself speak

85
00:03:52,720 --> 00:03:53,840
go ahead

86
00:03:53,840 --> 00:03:56,000
if you are speaking you're welcome to

87
00:03:56,000 --> 00:03:58,159
present vid share video of yourself as

88
00:03:58,159 --> 00:03:59,280
well

89
00:03:59,280 --> 00:04:01,760
otherwise please do not

90
00:04:01,760 --> 00:04:03,920
and it is not necessary to share video

91
00:04:03,920 --> 00:04:05,920
as you can tell i'm not doing so i don't

92
00:04:05,920 --> 00:04:08,080
actually have a video camera on this

93
00:04:08,080 --> 00:04:09,360
laptop

94
00:04:09,360 --> 00:04:11,120
the session is being recorded as the

95
00:04:11,120 --> 00:04:12,319
little button on the bottom of the

96
00:04:12,319 --> 00:04:14,640
screen tells you and those recordings

97
00:04:14,640 --> 00:04:17,040
are subject to the ietf rules as we

98
00:04:17,040 --> 00:04:20,000
shared them earlier

99
00:04:21,519 --> 00:04:22,560
so

100
00:04:22,560 --> 00:04:24,960
before we go into the other material

101
00:04:24,960 --> 00:04:27,360
what what else have we done

102
00:04:27,360 --> 00:04:29,840
wanted to start with

103
00:04:29,840 --> 00:04:32,800
the adoption call on

104
00:04:32,800 --> 00:04:36,240
the compression draft

105
00:04:36,720 --> 00:04:39,440
i managed that adoption call completion

106
00:04:39,440 --> 00:04:42,160
because my co-chairs were recused that's

107
00:04:42,160 --> 00:04:45,440
why i'm presenting this material

108
00:04:45,440 --> 00:04:47,600
the full details are at the link that is

109
00:04:47,600 --> 00:04:50,000
included here the adoption call has

110
00:04:50,000 --> 00:04:52,160
completed

111
00:04:52,160 --> 00:04:54,880
please don't get word word picky about

112
00:04:54,880 --> 00:04:56,560
what's on this slide if you want to pick

113
00:04:56,560 --> 00:04:59,680
on words it's the words in the message i

114
00:04:59,680 --> 00:05:01,840
sent i've tried to summarize so people

115
00:05:01,840 --> 00:05:05,360
will know what the context is

116
00:05:05,360 --> 00:05:08,479
so my conclusions were that there was

117
00:05:08,479 --> 00:05:11,120
rough consensus to adopt the document

118
00:05:11,120 --> 00:05:15,360
very rough but rough consensus

119
00:05:15,600 --> 00:05:18,000
the document when it is posted will

120
00:05:18,000 --> 00:05:21,120
include a specified open issue section

121
00:05:21,120 --> 00:05:22,800
separately i am in the process of

122
00:05:22,800 --> 00:05:24,960
establishing an issue tracker

123
00:05:24,960 --> 00:05:27,039
because i do not expect

124
00:05:27,039 --> 00:05:30,800
the editors to be updating the draft for

125
00:05:30,800 --> 00:05:32,400
every individual issue and every

126
00:05:32,400 --> 00:05:34,160
individual change to every individual

127
00:05:34,160 --> 00:05:36,320
issue the open issue section is for

128
00:05:36,320 --> 00:05:39,600
major issues as the text i provided says

129
00:05:39,600 --> 00:05:42,000
we will use get a github based issue

130
00:05:42,000 --> 00:05:43,759
tracker because that's what the tools

131
00:05:43,759 --> 00:05:45,680
people tell me is the thing we are

132
00:05:45,680 --> 00:05:48,800
supposed to use for issue tracking now

133
00:05:48,800 --> 00:05:51,680
we will not be putting the draft into

134
00:05:51,680 --> 00:05:53,199
github unless

135
00:05:53,199 --> 00:05:54,960
for some reason the editors decide they

136
00:05:54,960 --> 00:05:57,520
want to i won't prohibit it i'm just not

137
00:05:57,520 --> 00:05:59,919
expecting it and all discussion of

138
00:05:59,919 --> 00:06:01,520
issues will be on the mailing list the

139
00:06:01,520 --> 00:06:04,560
issue tracker is just so we don't lose

140
00:06:04,560 --> 00:06:06,960
track of any there was enough discussion

141
00:06:06,960 --> 00:06:09,759
and heck i had trouble making sure i i

142
00:06:09,759 --> 00:06:11,440
saw all the issues

143
00:06:11,440 --> 00:06:13,120
so we will use an issue tracker to make

144
00:06:13,120 --> 00:06:15,759
sure nothing gets lost

145
00:06:15,759 --> 00:06:19,280
but there will be a delay in posting the

146
00:06:19,280 --> 00:06:21,600
the spring working group version of this

147
00:06:21,600 --> 00:06:23,360
draft

148
00:06:23,360 --> 00:06:24,240
until

149
00:06:24,240 --> 00:06:27,600
six man has in front of them not adopted

150
00:06:27,600 --> 00:06:29,759
not yet last called although that's in

151
00:06:29,759 --> 00:06:31,919
the issue in the open issues

152
00:06:31,919 --> 00:06:35,360
but in front of them a draft which deals

153
00:06:35,360 --> 00:06:37,960
with the relationship of cecids and rfc

154
00:06:37,960 --> 00:06:39,520
4291

155
00:06:39,520 --> 00:06:41,680
that draft may deal with more topics

156
00:06:41,680 --> 00:06:43,759
than that that's up to six men and the

157
00:06:43,759 --> 00:06:46,160
folks who write the draft

158
00:06:46,160 --> 00:06:48,639
the constraint from where i sit because

159
00:06:48,639 --> 00:06:50,400
of the policy the spring chairs

160
00:06:50,400 --> 00:06:52,160
announced

161
00:06:52,160 --> 00:06:55,199
more than six months ago

162
00:06:55,199 --> 00:06:56,560
is that

163
00:06:56,560 --> 00:06:58,639
we have to have such a draft to say

164
00:06:58,639 --> 00:07:00,000
that's the one where

165
00:07:00,000 --> 00:07:00,800
we're

166
00:07:00,800 --> 00:07:03,680
we're looking at to say that there is

167
00:07:03,680 --> 00:07:07,199
that the question is being dealt with

168
00:07:07,199 --> 00:07:09,199
not there is a discrepancy but the

169
00:07:09,199 --> 00:07:11,280
question of whether there is one and how

170
00:07:11,280 --> 00:07:13,199
much of one and what the right response

171
00:07:13,199 --> 00:07:16,319
to a potential discrepancy is is being

172
00:07:16,319 --> 00:07:17,360
dealt with

173
00:07:17,360 --> 00:07:18,800
and so

174
00:07:18,800 --> 00:07:20,560
that is

175
00:07:20,560 --> 00:07:22,479
what that is the delay

176
00:07:22,479 --> 00:07:24,880
my expectation is that draft will be the

177
00:07:24,880 --> 00:07:26,800
one that the six-man leadership is in

178
00:07:26,800 --> 00:07:30,319
the process of appointing authors for

179
00:07:30,319 --> 00:07:33,039
and there is a presentation from those

180
00:07:33,039 --> 00:07:34,560
from them

181
00:07:34,560 --> 00:07:37,280
in the six-man session about that draft

182
00:07:37,280 --> 00:07:38,160
if

183
00:07:38,160 --> 00:07:40,000
they don't post something that addresses

184
00:07:40,000 --> 00:07:41,680
this then we'll deal with it another way

185
00:07:41,680 --> 00:07:43,599
we'll figure that out when we come to it

186
00:07:43,599 --> 00:07:45,280
i'm not trying to write

187
00:07:45,280 --> 00:07:46,080
a

188
00:07:46,080 --> 00:07:48,080
adoption call conclusion that deals with

189
00:07:48,080 --> 00:07:50,479
every imaginable contingency that's why

190
00:07:50,479 --> 00:07:52,479
we cope

191
00:07:52,479 --> 00:07:57,639
are there any questions about this

192
00:08:01,440 --> 00:08:03,520
i do not see anybody leaping into the

193
00:08:03,520 --> 00:08:05,840
queue i do not see anybody typing into

194
00:08:05,840 --> 00:08:07,680
the chat

195
00:08:07,680 --> 00:08:09,599
i will assume people understand it

196
00:08:09,599 --> 00:08:13,840
sufficiently and thank you

197
00:08:14,639 --> 00:08:17,680
since ietf 111 we do have some new

198
00:08:17,680 --> 00:08:19,120
documents

199
00:08:19,120 --> 00:08:21,280
the compressed list requirements

200
00:08:21,280 --> 00:08:24,240
document the compresses list analysis

201
00:08:24,240 --> 00:08:25,440
document

202
00:08:25,440 --> 00:08:26,800
both were

203
00:08:26,800 --> 00:08:28,800
adopted as working group documents and

204
00:08:28,800 --> 00:08:31,280
published they're both there

205
00:08:31,280 --> 00:08:32,240
and

206
00:08:32,240 --> 00:08:35,679
the spring sr redundancy document is now

207
00:08:35,679 --> 00:08:38,080
a working group document

208
00:08:38,080 --> 00:08:40,799
so that we have we're slowly moving

209
00:08:40,799 --> 00:08:43,919
things forward on the first two

210
00:08:43,919 --> 00:08:45,360
those now belong to the working group

211
00:08:45,360 --> 00:08:46,959
the working group can work on them

212
00:08:46,959 --> 00:08:49,279
improve them modify them

213
00:08:49,279 --> 00:08:51,600
whether we will publish them as a as

214
00:08:51,600 --> 00:08:54,240
rfcs is a separate question which will

215
00:08:54,240 --> 00:08:57,360
be decided later

216
00:08:59,839 --> 00:09:01,920
we have two working group last calls

217
00:09:01,920 --> 00:09:04,399
going on as far as i can tell

218
00:09:04,399 --> 00:09:06,959
one is the one on the lsh document i'm

219
00:09:06,959 --> 00:09:08,640
not going to talk much about that since

220
00:09:08,640 --> 00:09:10,480
i'm a co-author on it but the last call

221
00:09:10,480 --> 00:09:12,080
is going on

222
00:09:12,080 --> 00:09:12,959
and

223
00:09:12,959 --> 00:09:14,640
one is on

224
00:09:14,640 --> 00:09:17,440
these the mpls path segments

225
00:09:17,440 --> 00:09:19,279
there are final editorial nits in

226
00:09:19,279 --> 00:09:21,920
progress and the shepard write-up is in

227
00:09:21,920 --> 00:09:23,040
progress

228
00:09:23,040 --> 00:09:24,560
the shepherd

229
00:09:24,560 --> 00:09:27,200
jim just sent an email saying

230
00:09:27,200 --> 00:09:30,000
guys have all the open-ish comments that

231
00:09:30,000 --> 00:09:32,880
were made been addressed

232
00:09:32,880 --> 00:09:34,160
because that's the requirement

233
00:09:34,160 --> 00:09:35,600
everything has to get addressed not

234
00:09:35,600 --> 00:09:38,000
necessarily agreed to but addressed we

235
00:09:38,000 --> 00:09:40,320
don't ignore comments

236
00:09:40,320 --> 00:09:41,360
so

237
00:09:41,360 --> 00:09:43,200
that's where we stand on that one it

238
00:09:43,200 --> 00:09:44,560
should be

239
00:09:44,560 --> 00:09:45,360
the

240
00:09:45,360 --> 00:09:49,720
last call should be done soon

241
00:09:53,760 --> 00:09:56,880
um we have submitted to the isg spring

242
00:09:56,880 --> 00:09:58,959
segment routing policy

243
00:09:58,959 --> 00:10:03,959
rad martin is handling that

244
00:10:05,920 --> 00:10:08,399
um to answer srihari's point no the

245
00:10:08,399 --> 00:10:10,320
question at this stage there are

246
00:10:10,320 --> 00:10:11,760
different issues there are multiple

247
00:10:11,760 --> 00:10:13,200
different issues

248
00:10:13,200 --> 00:10:15,519
at this stage the question for spring is

249
00:10:15,519 --> 00:10:16,399
not

250
00:10:16,399 --> 00:10:18,160
whether six man has blessed the

251
00:10:18,160 --> 00:10:20,800
relationship but rather

252
00:10:20,800 --> 00:10:22,399
whether they have a document that

253
00:10:22,399 --> 00:10:26,640
addresses the relationship

254
00:10:26,800 --> 00:10:28,959
what will happen later

255
00:10:28,959 --> 00:10:31,440
is up to six man but there is a coupling

256
00:10:31,440 --> 00:10:33,360
as noted in the open issues in the

257
00:10:33,360 --> 00:10:34,880
adoption call

258
00:10:34,880 --> 00:10:37,279
when we get to last call we have to know

259
00:10:37,279 --> 00:10:39,600
what the relationship is

260
00:10:39,600 --> 00:10:40,640
and

261
00:10:40,640 --> 00:10:43,440
what happens exactly depends on exactly

262
00:10:43,440 --> 00:10:46,399
what six man says about the relationship

263
00:10:46,399 --> 00:10:49,200
but i'm not going to prejudge that uh as

264
00:10:49,200 --> 00:10:51,279
eric pointed out in the chat six man has

265
00:10:51,279 --> 00:10:52,800
picked a lead author i don't know

266
00:10:52,800 --> 00:10:54,160
whether they're gonna have more authors

267
00:10:54,160 --> 00:10:55,279
or whether

268
00:10:55,279 --> 00:10:57,279
suresh krishnan is going to write it by

269
00:10:57,279 --> 00:11:00,240
himself he's quite capable of doing so

270
00:11:00,240 --> 00:11:02,320
very experienced guy

271
00:11:02,320 --> 00:11:03,519
but

272
00:11:03,519 --> 00:11:05,440
that's up to six man

273
00:11:05,440 --> 00:11:07,680
thank you eric for reminding me that i

274
00:11:07,680 --> 00:11:10,079
had seen that six man had picked a lead

275
00:11:10,079 --> 00:11:13,640
editor for that

276
00:11:14,720 --> 00:11:17,120
we have nothing new on the rfc editor

277
00:11:17,120 --> 00:11:19,680
website

278
00:11:19,680 --> 00:11:22,399
and with that

279
00:11:22,880 --> 00:11:25,200
we are done with

280
00:11:25,200 --> 00:11:27,440
the

281
00:11:27,680 --> 00:11:29,760
chairs presentation i'll give folks one

282
00:11:29,760 --> 00:11:31,920
more chance to ask questions or get on

283
00:11:31,920 --> 00:11:34,399
the queue

284
00:11:35,600 --> 00:11:39,279
failing that i will stop sharing rakesh

285
00:11:39,279 --> 00:11:41,839
you need to put yourself in the queue

286
00:11:41,839 --> 00:11:45,519
click the start you're doing so

287
00:11:45,519 --> 00:11:49,519
please click the start sharing button

288
00:11:49,760 --> 00:11:51,839
and

289
00:11:51,839 --> 00:11:54,240
you need to request that you can

290
00:11:54,240 --> 00:11:57,519
you need to unmute yourself as well

291
00:11:57,519 --> 00:12:00,079
uh hi joel hi everyone good morning good

292
00:12:00,079 --> 00:12:02,240
afternoon thank you jeremy

293
00:12:02,240 --> 00:12:03,920
yes

294
00:12:03,920 --> 00:12:08,240
so joella i shared the or you said it um

295
00:12:08,240 --> 00:12:09,600
you should be able to share it yourself

296
00:12:09,600 --> 00:12:12,000
so you can just drive

297
00:12:12,000 --> 00:12:13,040
okay

298
00:12:13,040 --> 00:12:15,760
there's the it should be the

299
00:12:15,760 --> 00:12:18,079
button right next to the one you use to

300
00:12:18,079 --> 00:12:19,839
to join the queue should be share

301
00:12:19,839 --> 00:12:21,519
preloaded slides

302
00:12:21,519 --> 00:12:25,240
should let you share

303
00:12:25,839 --> 00:12:27,920
yeah i made a request

304
00:12:27,920 --> 00:12:30,719
yeah there it is

305
00:12:34,000 --> 00:12:36,320
last time i drove but it's much better

306
00:12:36,320 --> 00:12:39,839
if you guys can

307
00:12:56,880 --> 00:12:58,720
says the screen share is being there it

308
00:12:58,720 --> 00:12:59,600
is

309
00:12:59,600 --> 00:13:01,760
we're good go ahead

310
00:13:01,760 --> 00:13:02,880
all right

311
00:13:02,880 --> 00:13:04,000
thanks joel

312
00:13:04,000 --> 00:13:06,880
uh hi everyone uh my name is uh rakes

313
00:13:06,880 --> 00:13:08,480
gandhi and um

314
00:13:08,480 --> 00:13:12,000
i'm presenting the enhanced srpm draft

315
00:13:12,000 --> 00:13:16,959
on behalf of my co-authors listed here

316
00:13:18,240 --> 00:13:20,160
so the agenda is uh we'll look at the

317
00:13:20,160 --> 00:13:22,320
requirements and the scope of the draft

318
00:13:22,320 --> 00:13:26,399
history and summary and the next steps

319
00:13:26,800 --> 00:13:29,279
so the basic requirement is to uh for

320
00:13:29,279 --> 00:13:31,360
the performance measurement in sr

321
00:13:31,360 --> 00:13:34,399
networks for end-to-end sr paths

322
00:13:34,399 --> 00:13:37,200
uh it's applicable to both sr and pls

323
00:13:37,200 --> 00:13:40,240
and srv6 data planes

324
00:13:40,240 --> 00:13:41,920
so the goal and the

325
00:13:41,920 --> 00:13:44,720
for for this particular graph is no

326
00:13:44,720 --> 00:13:46,959
session reflected dependency for one-way

327
00:13:46,959 --> 00:13:49,519
delay measurement so session reflector

328
00:13:49,519 --> 00:13:51,839
is is not aware of the measurement

329
00:13:51,839 --> 00:13:54,480
protocol or some of the machineries

330
00:13:54,480 --> 00:13:57,040
uh it's the state is in the packet uh

331
00:13:57,040 --> 00:13:59,120
the spirit of sr

332
00:13:59,120 --> 00:14:01,760
and and we're trying to achieve a higher

333
00:14:01,760 --> 00:14:04,240
session scale and faster detection

334
00:14:04,240 --> 00:14:06,000
interval

335
00:14:06,000 --> 00:14:09,680
so the scope is using the lfc 876

336
00:14:09,680 --> 00:14:13,519
62 the simple t1 a stamp protocol

337
00:14:13,519 --> 00:14:16,240
and the extensions defined in the

338
00:14:16,240 --> 00:14:20,959
recently adopted srpm draft in spring

339
00:14:20,959 --> 00:14:23,279
so this drop builds on top of

340
00:14:23,279 --> 00:14:26,800
the srpm draft

341
00:14:26,880 --> 00:14:29,199
so the history of the draft is this

342
00:14:29,199 --> 00:14:31,680
draft was initially published a year and

343
00:14:31,680 --> 00:14:33,040
a half ago

344
00:14:33,040 --> 00:14:35,600
it has gone through multiple revisions

345
00:14:35,600 --> 00:14:37,920
and they were presented

346
00:14:37,920 --> 00:14:40,160
in mpls and spring

347
00:14:40,160 --> 00:14:42,000
working group sessions so they were very

348
00:14:42,000 --> 00:14:44,720
good feedbacks received from the working

349
00:14:44,720 --> 00:14:46,639
group and the latest draft

350
00:14:46,639 --> 00:14:50,000
we believe addresses them

351
00:14:50,320 --> 00:14:53,680
so in the spring srpm

352
00:14:53,680 --> 00:14:55,279
stamp draft

353
00:14:55,279 --> 00:14:57,920
there is look back more defined for sr

354
00:14:57,920 --> 00:14:59,839
policy

355
00:14:59,839 --> 00:15:02,480
where the packets are transmitted for

356
00:15:02,480 --> 00:15:05,199
each segment list of the sr policy

357
00:15:05,199 --> 00:15:06,160
and

358
00:15:06,160 --> 00:15:08,560
what's new here is the the session

359
00:15:08,560 --> 00:15:11,199
reflector forwards them just like data

360
00:15:11,199 --> 00:15:13,680
traffic without punting them to control

361
00:15:13,680 --> 00:15:15,600
plane and um

362
00:15:15,600 --> 00:15:18,399
processing them so it's kind of it's

363
00:15:18,399 --> 00:15:20,959
agnostic to the protocol machinery and

364
00:15:20,959 --> 00:15:23,920
this is what allows to achieve

365
00:15:23,920 --> 00:15:27,600
the higher skill and faster intervals

366
00:15:27,600 --> 00:15:30,160
for any violations

367
00:15:30,160 --> 00:15:32,720
so in in the in the existing working

368
00:15:32,720 --> 00:15:35,040
group document we can measure the round

369
00:15:35,040 --> 00:15:37,839
trip delay only

370
00:15:37,839 --> 00:15:40,880
so in the enhanced mode that's using the

371
00:15:40,880 --> 00:15:42,959
network programming function

372
00:15:42,959 --> 00:15:45,120
um

373
00:15:45,120 --> 00:15:48,160
it optimizes the the operations but at

374
00:15:48,160 --> 00:15:49,759
the same time

375
00:15:49,759 --> 00:15:51,279
timestamp is

376
00:15:51,279 --> 00:15:53,120
added in the packet

377
00:15:53,120 --> 00:15:54,560
so uh uh

378
00:15:54,560 --> 00:15:56,560
at a particular location using network

379
00:15:56,560 --> 00:15:58,560
phone network programming function for

380
00:15:58,560 --> 00:16:01,600
srm pls and srv6 um

381
00:16:01,600 --> 00:16:02,639
uh

382
00:16:02,639 --> 00:16:04,720
it adds the received timestamps and

383
00:16:04,720 --> 00:16:06,399
forwards the packet just like data

384
00:16:06,399 --> 00:16:07,360
packet

385
00:16:07,360 --> 00:16:09,839
so this allows us to measure one-way

386
00:16:09,839 --> 00:16:11,440
delay

387
00:16:11,440 --> 00:16:15,120
for the end-to-end part

388
00:16:16,399 --> 00:16:17,360
it

389
00:16:17,360 --> 00:16:19,920
extends the srpm provisioning model by

390
00:16:19,920 --> 00:16:22,720
defining a new measurement mode we call

391
00:16:22,720 --> 00:16:25,360
it enhanced look back mode

392
00:16:25,360 --> 00:16:27,360
as well as the

393
00:16:27,360 --> 00:16:29,120
network programming function which

394
00:16:29,120 --> 00:16:31,519
includes the timestamp label for mpls or

395
00:16:31,519 --> 00:16:34,480
the srv6 endpoint behavior

396
00:16:34,480 --> 00:16:37,199
that will come with its uh offset

397
00:16:37,199 --> 00:16:40,480
uh in the stamp uh which is a 16 and 32

398
00:16:40,480 --> 00:16:43,120
bit in the

399
00:16:43,199 --> 00:16:45,680
different modes of the packet format

400
00:16:45,680 --> 00:16:48,720
uh and that's basically it i may stop

401
00:16:48,720 --> 00:16:50,399
you for a moment

402
00:16:50,399 --> 00:16:51,600
somebody

403
00:16:51,600 --> 00:16:54,000
misunderstood something or

404
00:16:54,000 --> 00:16:56,320
something you said didn't add up right

405
00:16:56,320 --> 00:16:58,320
can i let greg ask you a question about

406
00:16:58,320 --> 00:17:00,160
what you've said just a few minutes ago

407
00:17:00,160 --> 00:17:02,000
for clarification

408
00:17:02,000 --> 00:17:03,440
sure yeah

409
00:17:03,440 --> 00:17:06,079
greg please go ahead try to

410
00:17:06,079 --> 00:17:07,679
rest by the context since we flipped a

411
00:17:07,679 --> 00:17:09,439
few slides

412
00:17:09,439 --> 00:17:11,760
yes uh thank you rakesh so

413
00:17:11,760 --> 00:17:13,039
um

414
00:17:13,039 --> 00:17:15,199
you're saying that uh this method

415
00:17:15,199 --> 00:17:18,640
enables a one-way measurement

416
00:17:18,640 --> 00:17:20,000
that's right

417
00:17:20,000 --> 00:17:22,160
uh at the same time you are saying that

418
00:17:22,160 --> 00:17:25,520
uh the reflector doesn't have a state

419
00:17:25,520 --> 00:17:28,400
and uh uh the packet does not leave the

420
00:17:28,400 --> 00:17:30,840
data plane

421
00:17:30,840 --> 00:17:34,400
right um so um how

422
00:17:34,400 --> 00:17:36,559
you can do that

423
00:17:36,559 --> 00:17:38,720
uh if uh the

424
00:17:38,720 --> 00:17:41,919
format of um

425
00:17:41,919 --> 00:17:43,919
the reflected packet

426
00:17:43,919 --> 00:17:46,880
is different from the format of their

427
00:17:46,880 --> 00:17:49,520
received packet from the sender

428
00:17:49,520 --> 00:17:50,400
so

429
00:17:50,400 --> 00:17:53,120
they're very different and you cannot

430
00:17:53,120 --> 00:17:54,480
really just

431
00:17:54,480 --> 00:17:55,320
take

432
00:17:55,320 --> 00:17:57,600
a packet

433
00:17:57,600 --> 00:18:00,640
and swap their destination and source

434
00:18:00,640 --> 00:18:02,160
address

435
00:18:02,160 --> 00:18:04,640
more so

436
00:18:04,640 --> 00:18:07,760
if you are don't have a state in the

437
00:18:07,760 --> 00:18:09,039
reflector

438
00:18:09,039 --> 00:18:10,320
what you are measuring you are not

439
00:18:10,320 --> 00:18:12,559
measuring one way you are measuring

440
00:18:12,559 --> 00:18:15,919
round trip and because uh you are

441
00:18:15,919 --> 00:18:20,000
traversing uh one way uh or

442
00:18:20,000 --> 00:18:22,160
downstream uh their

443
00:18:22,160 --> 00:18:23,600
segment tunnel

444
00:18:23,600 --> 00:18:26,960
and the upstream uh i don't know uh

445
00:18:26,960 --> 00:18:30,000
i can assume uh it's a p network

446
00:18:30,000 --> 00:18:31,520
so they're

447
00:18:31,520 --> 00:18:34,559
divided by two the round trip time

448
00:18:34,559 --> 00:18:38,799
uh might be uh not characteristic um not

449
00:18:38,799 --> 00:18:40,480
accurate so

450
00:18:40,480 --> 00:18:42,240
i think that there is some serious

451
00:18:42,240 --> 00:18:44,960
problem with this

452
00:18:45,440 --> 00:18:48,320
thanks greg so the loopback measurement

453
00:18:48,320 --> 00:18:50,720
mode is defined in working group

454
00:18:50,720 --> 00:18:52,000
document

455
00:18:52,000 --> 00:18:54,080
and it explains

456
00:18:54,080 --> 00:18:57,200
how it works for the sr policy

457
00:18:57,200 --> 00:18:58,799
uh with a

458
00:18:58,799 --> 00:19:01,039
proper header and whatnot

459
00:19:01,039 --> 00:19:03,120
you had some good comments and the drop

460
00:19:03,120 --> 00:19:06,240
was updated to address those comments

461
00:19:06,240 --> 00:19:08,559
so if you uh if you can have a look at

462
00:19:08,559 --> 00:19:10,559
this working group document please and

463
00:19:10,559 --> 00:19:11,760
let us know

464
00:19:11,760 --> 00:19:13,760
if you have additional comments but this

465
00:19:13,760 --> 00:19:16,960
that so that is for the round trip delay

466
00:19:16,960 --> 00:19:18,480
and the

467
00:19:18,480 --> 00:19:21,200
this is an optimization

468
00:19:21,200 --> 00:19:24,559
uh where the session reflector using the

469
00:19:24,559 --> 00:19:26,880
network programming function

470
00:19:26,880 --> 00:19:29,840
as the receiver timestamp and forwards

471
00:19:29,840 --> 00:19:32,720
the packet so the packet

472
00:19:32,720 --> 00:19:35,440
processing is also explained in the

473
00:19:35,440 --> 00:19:37,840
enhanced loopback mode draft on how it

474
00:19:37,840 --> 00:19:40,720
works so if you could have a look at

475
00:19:40,720 --> 00:19:42,880
that and let us know your comments uh

476
00:19:42,880 --> 00:19:43,840
would you

477
00:19:43,840 --> 00:19:45,120
appreciate it

478
00:19:45,120 --> 00:19:49,600
yeah uh i had and uh i i sent the

479
00:19:49,600 --> 00:19:53,280
comment uh before the meeting so uh

480
00:19:53,280 --> 00:19:54,640
again i i see that there is a

481
00:19:54,640 --> 00:19:58,080
contradiction uh between the statements

482
00:19:58,080 --> 00:20:01,120
uh because uh their

483
00:20:01,120 --> 00:20:03,520
segment routing programming has nothing

484
00:20:03,520 --> 00:20:07,200
to do or does not introduce any special

485
00:20:07,200 --> 00:20:09,679
mode in the stamp

486
00:20:09,679 --> 00:20:11,200
so

487
00:20:11,200 --> 00:20:15,440
to do processing of stem packets in a

488
00:20:15,440 --> 00:20:17,200
real one-way

489
00:20:17,200 --> 00:20:19,120
measurement

490
00:20:19,120 --> 00:20:21,840
reflector has to be stateful

491
00:20:21,840 --> 00:20:24,159
so uh

492
00:20:24,159 --> 00:20:26,640
encapsulation of

493
00:20:26,640 --> 00:20:29,840
their underlay of the network uh is uh

494
00:20:29,840 --> 00:20:31,039
really

495
00:20:31,039 --> 00:20:33,440
not relevant

496
00:20:33,440 --> 00:20:35,919
he has to drop explains it and that is

497
00:20:35,919 --> 00:20:37,840
okay

498
00:20:37,840 --> 00:20:40,480
i i apologize uh i just will leave with

499
00:20:40,480 --> 00:20:42,880
this okay so we can continue on the

500
00:20:42,880 --> 00:20:44,400
mainland list thank you

501
00:20:44,400 --> 00:20:46,640
yeah thanks sir i i haven't seen your

502
00:20:46,640 --> 00:20:49,039
latest email if you just sent it but i

503
00:20:49,039 --> 00:20:51,840
will reply to it

504
00:20:51,840 --> 00:20:55,120
so uh stamp test packets are shown here

505
00:20:55,120 --> 00:20:58,720
uh and the idea is that the sender sends

506
00:20:58,720 --> 00:21:01,600
the transmit timestamp t1

507
00:21:01,600 --> 00:21:02,400
in the

508
00:21:02,400 --> 00:21:04,320
session sender packet

509
00:21:04,320 --> 00:21:06,240
and the reflector adds the received

510
00:21:06,240 --> 00:21:09,760
timestamp d2 at offset 16 in an

511
00:21:09,760 --> 00:21:12,720
authenticated mode and offset 32 in the

512
00:21:12,720 --> 00:21:15,520
authenticator mode so

513
00:21:15,520 --> 00:21:17,360
uh these are

514
00:21:17,360 --> 00:21:19,039
a well defined

515
00:21:19,039 --> 00:21:21,679
locations in the stamp packets this is

516
00:21:21,679 --> 00:21:25,520
motivation for using stamp as well

517
00:21:26,400 --> 00:21:28,480
and and that is

518
00:21:28,480 --> 00:21:32,480
for sr mpls timestamp mpls label is

519
00:21:32,480 --> 00:21:33,679
defined

520
00:21:33,679 --> 00:21:36,080
uh this is network programming function

521
00:21:36,080 --> 00:21:38,000
uh which will

522
00:21:38,000 --> 00:21:40,640
cause the reflected node to do the

523
00:21:40,640 --> 00:21:42,799
adding of the timestamp and forward the

524
00:21:42,799 --> 00:21:44,320
packet

525
00:21:44,320 --> 00:21:46,799
there are two ways of achieving this

526
00:21:46,799 --> 00:21:49,440
reverse path can be ip

527
00:21:49,440 --> 00:21:51,679
where mpls header will be removed and

528
00:21:51,679 --> 00:21:53,919
the source destination address in the ip

529
00:21:53,919 --> 00:21:56,080
header of the packet will make make sure

530
00:21:56,080 --> 00:21:58,559
the packet comes back to the sender

531
00:21:58,559 --> 00:22:01,520
or reverse part can be srm pls where the

532
00:22:01,520 --> 00:22:04,159
entire label stack is carried in the

533
00:22:04,159 --> 00:22:06,080
packet

534
00:22:06,080 --> 00:22:08,880
so this is an example of a reflector

535
00:22:08,880 --> 00:22:10,559
receives a packet

536
00:22:10,559 --> 00:22:13,360
with timestamp for label tba1

537
00:22:13,360 --> 00:22:15,600
it will cause the reflector to add

538
00:22:15,600 --> 00:22:17,600
timestamp label 2

539
00:22:17,600 --> 00:22:20,240
sorry timestamp 2 and forward the packet

540
00:22:20,240 --> 00:22:21,440
back to the

541
00:22:21,440 --> 00:22:23,919
sender

542
00:22:24,159 --> 00:22:26,960
in case of srv6 uh there are

543
00:22:26,960 --> 00:22:30,400
two new and functions uh defined

544
00:22:30,400 --> 00:22:33,679
uh for the two different offsets uh

545
00:22:33,679 --> 00:22:36,720
idea is very similar uh where um

546
00:22:36,720 --> 00:22:39,039
timestamp two will be added by the

547
00:22:39,039 --> 00:22:40,799
reflector

548
00:22:40,799 --> 00:22:43,919
and the reverse part can be ip or srv6

549
00:22:43,919 --> 00:22:45,840
and similar way

550
00:22:45,840 --> 00:22:47,039
entire

551
00:22:47,039 --> 00:22:49,440
the seedless is carried if reverse path

552
00:22:49,440 --> 00:22:52,840
is srv6 in

553
00:22:52,840 --> 00:22:55,440
sanity um

554
00:22:55,440 --> 00:22:58,320
the the notifications are

555
00:22:58,320 --> 00:23:00,480
the thresholds are provisioned so what

556
00:23:00,480 --> 00:23:02,640
we are measuring one-way delay

557
00:23:02,640 --> 00:23:05,120
so uh our threshold is configured and

558
00:23:05,120 --> 00:23:07,760
notification is generally generated when

559
00:23:07,760 --> 00:23:09,840
the threshold is caused same way for the

560
00:23:09,840 --> 00:23:11,679
synthetic packet loss

561
00:23:11,679 --> 00:23:14,000
session state is this is mentioned in

562
00:23:14,000 --> 00:23:15,919
the existing working of document where

563
00:23:15,919 --> 00:23:18,720
the state up or down is declared based

564
00:23:18,720 --> 00:23:23,559
on if packet is being received or not

565
00:23:23,840 --> 00:23:26,159
so welcome your comments and suggestions

566
00:23:26,159 --> 00:23:28,480
uh many thanks for the great discussions

567
00:23:28,480 --> 00:23:30,960
on the srpm drop during the working

568
00:23:30,960 --> 00:23:32,480
group adoption

569
00:23:32,480 --> 00:23:35,200
uh and looking forward to your comments

570
00:23:35,200 --> 00:23:37,520
on this draft as well and we are

571
00:23:37,520 --> 00:23:39,200
requesting a spring working group

572
00:23:39,200 --> 00:23:42,000
adoption for this draft as well

573
00:23:42,000 --> 00:23:44,720
and many thanks

574
00:23:46,880 --> 00:23:48,480
any comments questions for the

575
00:23:48,480 --> 00:23:50,320
requesting please send an email and

576
00:23:50,320 --> 00:23:52,559
strata will add it to the list but

577
00:23:52,559 --> 00:23:54,240
people are getting on the queue right

578
00:23:54,240 --> 00:23:55,200
now

579
00:23:55,200 --> 00:23:58,240
stuart you're first

580
00:24:02,720 --> 00:24:05,200
sorry i'm curious as to how you avoid

581
00:24:05,200 --> 00:24:08,559
the ecmp issue with this that ecmp will

582
00:24:08,559 --> 00:24:11,279
give you a different answer when you um

583
00:24:11,279 --> 00:24:12,640
when you run this

584
00:24:12,640 --> 00:24:15,520
is this ecmp safe

585
00:24:15,520 --> 00:24:18,918
is it for mpls

586
00:24:18,960 --> 00:24:23,919
yes so uh i mean for ecmp um

587
00:24:23,919 --> 00:24:25,279
there are standard

588
00:24:25,279 --> 00:24:29,120
techniques of for example using the

589
00:24:29,120 --> 00:24:30,880
entropy label

590
00:24:30,880 --> 00:24:32,640
so uh

591
00:24:32,640 --> 00:24:34,159
so you re

592
00:24:34,159 --> 00:24:36,559
so you're requiring the entropy label to

593
00:24:36,559 --> 00:24:38,799
be in there for an ecmp safe measurement

594
00:24:38,799 --> 00:24:41,039
that's absolutely fine but you must say

595
00:24:41,039 --> 00:24:43,360
that it must be there

596
00:24:43,360 --> 00:24:45,679
okay because you don't show it there in

597
00:24:45,679 --> 00:24:48,720
the stack i was just looking at

598
00:24:48,720 --> 00:24:51,600
yes yeah we can uh add that test to you

599
00:24:51,600 --> 00:24:54,559
no it has to be it has to be you know

600
00:24:54,559 --> 00:24:57,840
high level required because um

601
00:24:57,840 --> 00:24:59,440
people will get the wrong answer and we

602
00:24:59,440 --> 00:25:01,039
can't publish a document where people

603
00:25:01,039 --> 00:25:03,600
get the wrong answer

604
00:25:03,600 --> 00:25:06,000
yeah definitely a good comment we'll add

605
00:25:06,000 --> 00:25:07,919
it

606
00:25:07,919 --> 00:25:11,279
okay andrew you're up

607
00:25:11,360 --> 00:25:14,320
oh um thanks just a quick question i

608
00:25:14,320 --> 00:25:17,520
noticed that in the case of the ip side

609
00:25:17,520 --> 00:25:19,200
you are setting

610
00:25:19,200 --> 00:25:21,039
the session sender

611
00:25:21,039 --> 00:25:23,600
sets the destination equal address equal

612
00:25:23,600 --> 00:25:25,679
to the session sender address etc

613
00:25:25,679 --> 00:25:27,200
effectively that they're going out

614
00:25:27,200 --> 00:25:28,960
reversed lying on the labels if i'm

615
00:25:28,960 --> 00:25:30,480
reading this correctly to get to the

616
00:25:30,480 --> 00:25:31,840
other post

617
00:25:31,840 --> 00:25:32,880
now

618
00:25:32,880 --> 00:25:35,919
my question on this would be

619
00:25:35,919 --> 00:25:36,880
what is

620
00:25:36,880 --> 00:25:40,480
what is the impact on stuff like ecp38

621
00:25:40,480 --> 00:25:41,360
on

622
00:25:41,360 --> 00:25:43,840
a network that is running multiple asms

623
00:25:43,840 --> 00:25:45,840
et cetera that is actually protecting

624
00:25:45,840 --> 00:25:46,880
against

625
00:25:46,880 --> 00:25:47,840
you know

626
00:25:47,840 --> 00:25:50,080
incorrect source incorrect estimation

627
00:25:50,080 --> 00:25:53,279
etc on incoming particularly considering

628
00:25:53,279 --> 00:25:56,080
i mean we we use a lot of etc for

629
00:25:56,080 --> 00:25:57,840
various probes

630
00:25:57,840 --> 00:26:01,679
and that reversal of addresses does kind

631
00:26:01,679 --> 00:26:04,159
of worry me

632
00:26:04,159 --> 00:26:06,799
so i'd just like to hear your thoughts

633
00:26:06,799 --> 00:26:07,600
on

634
00:26:07,600 --> 00:26:09,600
you know the impacts the potential

635
00:26:09,600 --> 00:26:12,080
impacts on things like bcp 38 and

636
00:26:12,080 --> 00:26:15,199
anti-spoofing protection

637
00:26:15,760 --> 00:26:19,039
yeah thanks andrew for the question

638
00:26:19,039 --> 00:26:20,559
so yeah if

639
00:26:20,559 --> 00:26:24,320
that is not suitable for the network so

640
00:26:24,320 --> 00:26:26,880
the second method which is a reverse

641
00:26:26,880 --> 00:26:28,640
path

642
00:26:28,640 --> 00:26:32,240
can be srm pls so the node seed or the

643
00:26:32,240 --> 00:26:35,039
entire label stack can be used to bring

644
00:26:35,039 --> 00:26:37,440
the packet back to the center

645
00:26:37,440 --> 00:26:38,400
so both

646
00:26:38,400 --> 00:26:42,640
methods are defined and depending on the

647
00:26:42,640 --> 00:26:45,440
the deployment or what is uh the what is

648
00:26:45,440 --> 00:26:47,919
being used in the network uh one of them

649
00:26:47,919 --> 00:26:51,600
can be selected again this is uh

650
00:26:51,600 --> 00:26:54,960
this has been around many rfcs use uh

651
00:26:54,960 --> 00:26:57,279
swapping of the source addresses uh

652
00:26:57,279 --> 00:26:58,640
already

653
00:26:58,640 --> 00:27:03,480
and it's also no different here

654
00:27:06,320 --> 00:27:08,080
to explore it more take it to the list

655
00:27:08,080 --> 00:27:09,039
thank you

656
00:27:09,039 --> 00:27:11,840
okay thank you rakesh i don't see any

657
00:27:11,840 --> 00:27:13,760
more people in the queue

658
00:27:13,760 --> 00:27:15,039
there are some issues which you're going

659
00:27:15,039 --> 00:27:17,279
to have to deal with on the list but

660
00:27:17,279 --> 00:27:18,799
that's fine

661
00:27:18,799 --> 00:27:20,880
so you need to push the stop sharing

662
00:27:20,880 --> 00:27:22,000
button

663
00:27:22,000 --> 00:27:25,039
so that jung shin can start sharing

664
00:27:25,039 --> 00:27:28,600
for the next presentation

665
00:28:17,840 --> 00:28:19,840
okay we just wait for the tool to catch

666
00:28:19,840 --> 00:28:20,960
up there

667
00:28:20,960 --> 00:28:22,960
your slides are now shared go ahead

668
00:28:22,960 --> 00:28:25,520
youngshing

669
00:28:27,200 --> 00:28:31,080
hello can hear me

670
00:28:31,760 --> 00:28:34,000
go ahead

671
00:28:34,000 --> 00:28:36,399
thank you

672
00:28:37,760 --> 00:28:39,760
hello everyone i'm

673
00:28:39,760 --> 00:28:42,640
yong ching tu from tan telecom

674
00:28:42,640 --> 00:28:45,120
today my presentation is second routine

675
00:28:45,120 --> 00:28:50,479
for end-to-end itf networks last slide

676
00:28:55,360 --> 00:28:58,320
as we know network network slashing can

677
00:28:58,320 --> 00:29:01,520
be used to meet the connectivity and the

678
00:29:01,520 --> 00:29:04,000
performance requirements of different

679
00:29:04,000 --> 00:29:06,880
services or customers in a shared

680
00:29:06,880 --> 00:29:08,159
network

681
00:29:08,159 --> 00:29:11,360
and idf networks can be realized by

682
00:29:11,360 --> 00:29:12,720
mapping one

683
00:29:12,720 --> 00:29:17,360
one or group of ugly vpns to retain as

684
00:29:17,360 --> 00:29:19,360
underlay

685
00:29:19,360 --> 00:29:22,320
furthermore an end-to-end active network

686
00:29:22,320 --> 00:29:26,399
slides may span multiple network domains

687
00:29:26,399 --> 00:29:29,520
instrument iitf network slides

688
00:29:29,520 --> 00:29:31,360
traffic needs to be

689
00:29:31,360 --> 00:29:33,840
mapped to a local vtm

690
00:29:33,840 --> 00:29:36,480
here in this document

691
00:29:36,480 --> 00:29:39,120
we describe the

692
00:29:39,120 --> 00:29:43,120
sr extensions to support and itf network

693
00:29:43,120 --> 00:29:45,600
slides

694
00:29:47,200 --> 00:29:49,679
let's have a look at the active network

695
00:29:49,679 --> 00:29:52,960
slides framework and realization

696
00:29:52,960 --> 00:29:56,000
there are three parts

697
00:29:56,000 --> 00:29:57,039
of the

698
00:29:57,039 --> 00:29:59,200
three parts for this

699
00:29:59,200 --> 00:30:00,240
framework

700
00:30:00,240 --> 00:30:02,559
the second the first

701
00:30:02,559 --> 00:30:06,240
one it concepts on the general framework

702
00:30:06,240 --> 00:30:07,120
which

703
00:30:07,120 --> 00:30:09,919
described which is described in the

704
00:30:09,919 --> 00:30:13,440
draft itft itf network strategies

705
00:30:13,440 --> 00:30:15,039
the second one is

706
00:30:15,039 --> 00:30:16,640
really realizes

707
00:30:16,640 --> 00:30:20,000
realize the this

708
00:30:20,000 --> 00:30:23,039
framework based on vpn t and other

709
00:30:23,039 --> 00:30:24,799
technologies

710
00:30:24,799 --> 00:30:28,320
which is described in draft itf test

711
00:30:28,320 --> 00:30:30,320
enhanced vpn

712
00:30:30,320 --> 00:30:32,399
and the last one is framework of

713
00:30:32,399 --> 00:30:36,480
end-to-end itm network slides

714
00:30:36,480 --> 00:30:40,000
add to the realization

715
00:30:40,000 --> 00:30:41,360
there are

716
00:30:41,360 --> 00:30:42,480
some

717
00:30:42,480 --> 00:30:43,760
there's

718
00:30:43,760 --> 00:30:47,279
some some drafts the first

719
00:30:47,279 --> 00:30:48,480
the first

720
00:30:48,480 --> 00:30:51,360
one is the earth is the network slice

721
00:30:51,360 --> 00:30:53,919
with realization

722
00:30:53,919 --> 00:30:55,840
we can achieve it

723
00:30:55,840 --> 00:30:58,480
by making use of sr resource aware

724
00:30:58,480 --> 00:30:59,519
segments

725
00:30:59,519 --> 00:31:01,279
the second

726
00:31:01,279 --> 00:31:02,640
one is the

727
00:31:02,640 --> 00:31:06,559
scalable network slides with realization

728
00:31:06,559 --> 00:31:09,360
we can achieve it by making

729
00:31:09,360 --> 00:31:12,720
use of a date plan between resource id

730
00:31:12,720 --> 00:31:13,840
and the

731
00:31:13,840 --> 00:31:16,159
third one is the entrance active network

732
00:31:16,159 --> 00:31:18,080
slides

733
00:31:18,080 --> 00:31:19,360
which

734
00:31:19,360 --> 00:31:22,399
introducing which which induce global vt

735
00:31:22,399 --> 00:31:25,440
id and mapping mechanisms

736
00:31:25,440 --> 00:31:26,640
here

737
00:31:26,640 --> 00:31:29,039
our pro our purpose

738
00:31:29,039 --> 00:31:32,440
the draft

739
00:31:32,480 --> 00:31:33,919
the

740
00:31:33,919 --> 00:31:39,360
spring as a e3 itf that slashing

741
00:31:41,360 --> 00:31:43,120
it

742
00:31:43,120 --> 00:31:43,919
it's

743
00:31:43,919 --> 00:31:47,399
listed here

744
00:31:50,000 --> 00:31:53,519
in in this draft we

745
00:31:53,519 --> 00:31:57,519
introduced the vtn bonding segments

746
00:31:57,519 --> 00:32:01,120
the vt bonding segments that is to see

747
00:32:01,120 --> 00:32:04,240
the b6 is a special visit used by the

748
00:32:04,240 --> 00:32:07,120
domain ad nodes to steer traffic into a

749
00:32:07,120 --> 00:32:09,840
local vt

750
00:32:10,240 --> 00:32:13,760
the vtnbc can be instantiated with

751
00:32:13,760 --> 00:32:18,159
either basics or asymptote plane

752
00:32:18,159 --> 00:32:22,080
there are four functions

753
00:32:22,559 --> 00:32:23,600
for the

754
00:32:23,600 --> 00:32:25,360
btmbc

755
00:32:25,360 --> 00:32:26,880
the first one

756
00:32:26,880 --> 00:32:31,360
is the and dot b6 in caps

757
00:32:31,360 --> 00:32:32,240
which

758
00:32:32,240 --> 00:32:33,600
maps

759
00:32:33,600 --> 00:32:36,159
maps packet to a list of resource aware

760
00:32:36,159 --> 00:32:37,279
segments

761
00:32:37,279 --> 00:32:38,960
which which are

762
00:32:38,960 --> 00:32:42,559
associated with a local vtn

763
00:32:42,559 --> 00:32:44,480
this function

764
00:32:44,480 --> 00:32:48,080
as for the other vc v6

765
00:32:48,080 --> 00:32:49,440
h

766
00:32:49,440 --> 00:32:50,720
is the

767
00:32:50,720 --> 00:32:52,399
eighth equals

768
00:32:52,399 --> 00:32:53,440
equals

769
00:32:53,440 --> 00:32:57,200
equal to the answer basics

770
00:32:57,200 --> 00:33:01,279
and and the b and in the dot b6 dot in

771
00:33:01,279 --> 00:33:03,279
caps function

772
00:33:03,279 --> 00:33:07,120
the second the second function is is and

773
00:33:07,120 --> 00:33:10,399
dot btn in caps

774
00:33:10,399 --> 00:33:12,559
this function determine the local

775
00:33:12,559 --> 00:33:14,880
written id based on local mapping

776
00:33:14,880 --> 00:33:17,320
information and instructs the

777
00:33:17,320 --> 00:33:20,080
encapsulation of the local meeting id to

778
00:33:20,080 --> 00:33:23,760
the data to the data package

779
00:33:23,760 --> 00:33:26,720
the second one is and

780
00:33:26,720 --> 00:33:30,799
dot bvt dot in caps

781
00:33:30,799 --> 00:33:32,480
this

782
00:33:32,480 --> 00:33:35,360
function obtain the local vt id from the

783
00:33:35,360 --> 00:33:38,159
packet under impact and instruct the

784
00:33:38,159 --> 00:33:41,039
encapsulation of the local vtid to the

785
00:33:41,039 --> 00:33:42,720
data packet

786
00:33:42,720 --> 00:33:44,960
the last one

787
00:33:44,960 --> 00:33:47,279
is the n dot b

788
00:33:47,279 --> 00:33:51,279
6 v t n dot in caps

789
00:33:51,279 --> 00:33:53,519
this function identify

790
00:33:53,519 --> 00:33:56,640
an iso polish which is bound to a local

791
00:33:56,640 --> 00:33:59,200
vtm

792
00:34:03,679 --> 00:34:06,480
as for service 6

793
00:34:06,480 --> 00:34:09,199
all the above functions

794
00:34:09,199 --> 00:34:11,280
you

795
00:34:11,280 --> 00:34:14,719
you use the uh

796
00:34:14,719 --> 00:34:16,320
used in

797
00:34:16,320 --> 00:34:18,720
v6

798
00:34:19,520 --> 00:34:20,399
we have

799
00:34:20,399 --> 00:34:23,199
uh we have we have talked about this on

800
00:34:23,199 --> 00:34:24,719
the uh

801
00:34:24,719 --> 00:34:26,239
on the last

802
00:34:26,239 --> 00:34:28,560
slide

803
00:34:29,199 --> 00:34:31,199
there are some

804
00:34:31,199 --> 00:34:33,760
there are some there are some a few

805
00:34:33,760 --> 00:34:36,320
suit code for the

806
00:34:36,320 --> 00:34:37,839
uh for the

807
00:34:37,839 --> 00:34:39,280
for for these

808
00:34:39,280 --> 00:34:42,800
and for these functions

809
00:34:45,040 --> 00:34:47,918
for example the end dot between dots in

810
00:34:47,918 --> 00:34:49,839
cash

811
00:34:49,839 --> 00:34:51,119
for the

812
00:34:51,119 --> 00:34:54,159
s as 14

813
00:34:54,159 --> 00:34:55,119
we

814
00:34:55,119 --> 00:34:59,200
use the update of ipv6 dt with a segment

815
00:34:59,200 --> 00:35:00,720
late

816
00:35:00,720 --> 00:35:03,839
and and that sets the waiting id option

817
00:35:03,839 --> 00:35:05,520
to be in the

818
00:35:05,520 --> 00:35:09,839
hope by hope extension header

819
00:35:10,640 --> 00:35:12,079
and the other

820
00:35:12,079 --> 00:35:13,280
the other

821
00:35:13,280 --> 00:35:14,960
functions such as

822
00:35:14,960 --> 00:35:17,920
and and be v10

823
00:35:17,920 --> 00:35:18,960
and

824
00:35:18,960 --> 00:35:21,440
in caps under the

825
00:35:21,440 --> 00:35:22,480
under

826
00:35:22,480 --> 00:35:25,760
dot b6 vting dot sync caps

827
00:35:25,760 --> 00:35:26,960
function

828
00:35:26,960 --> 00:35:30,480
as a as i release also basic function

829
00:35:30,480 --> 00:35:31,839
is

830
00:35:31,839 --> 00:35:35,040
listed listed here

831
00:35:38,480 --> 00:35:41,200
the b team visits in other arsenal

832
00:35:41,200 --> 00:35:44,800
ampers is similarly it is is

833
00:35:44,800 --> 00:35:48,720
is it is is is is similar

834
00:35:48,720 --> 00:35:52,160
region bc can be instantiated using as

835
00:35:52,160 --> 00:35:54,720
ampere's burning seeds with different

836
00:35:54,720 --> 00:35:55,760
semantic

837
00:35:55,760 --> 00:35:58,720
semantics

838
00:35:58,720 --> 00:36:00,560
you can refer to the draft for the

839
00:36:00,560 --> 00:36:03,119
details

840
00:36:03,680 --> 00:36:06,799
next we will

841
00:36:07,359 --> 00:36:09,359
refine this draft

842
00:36:09,359 --> 00:36:10,320
and

843
00:36:10,320 --> 00:36:13,680
welcome the comments and the feedback

844
00:36:13,680 --> 00:36:15,359
feedback

845
00:36:15,359 --> 00:36:17,759
thank you

846
00:36:20,640 --> 00:36:23,119
any questions does anybody wish to get

847
00:36:23,119 --> 00:36:26,359
in the queue

848
00:36:26,720 --> 00:36:30,319
vishnu go ahead

849
00:36:30,640 --> 00:36:31,920
this is

850
00:36:31,920 --> 00:36:34,720
uh juniper can you go to slide 3

851
00:36:34,720 --> 00:36:36,160
if you can

852
00:36:36,160 --> 00:36:38,160
the one where you

853
00:36:38,160 --> 00:36:40,000
showed all the relevant draft documents

854
00:36:40,000 --> 00:36:42,240
that

855
00:36:46,800 --> 00:36:48,720
okay

856
00:36:48,720 --> 00:36:50,079
yeah uh

857
00:36:50,079 --> 00:36:51,760
if there is difficulty in going to slide

858
00:36:51,760 --> 00:36:53,359
3 i'll just go ahead and state my

859
00:36:53,359 --> 00:36:55,520
question so we do have a working group

860
00:36:55,520 --> 00:36:57,680
adopted framework document and piece

861
00:36:57,680 --> 00:37:00,240
like a pointer drought for what we call

862
00:37:00,240 --> 00:37:02,880
uh ietf network slices so though the

863
00:37:02,880 --> 00:37:04,480
original interest from the working group

864
00:37:04,480 --> 00:37:07,040
participants was um largely with respect

865
00:37:07,040 --> 00:37:10,320
to how uh the idf network slice can

866
00:37:10,320 --> 00:37:12,880
cater to what uh the industry refers to

867
00:37:12,880 --> 00:37:15,280
as transport pricing uh there hasn't

868
00:37:15,280 --> 00:37:17,359
really been any conscious

869
00:37:17,359 --> 00:37:19,359
attempt either by the authors or the

870
00:37:19,359 --> 00:37:21,920
working group to limit the scope of that

871
00:37:21,920 --> 00:37:24,960
uh construct so i don't quite get the

872
00:37:24,960 --> 00:37:26,160
idea of it

873
00:37:26,160 --> 00:37:28,480
of having a separate end-to-end

874
00:37:28,480 --> 00:37:31,280
slicing framework document so if if all

875
00:37:31,280 --> 00:37:33,760
that this document is talking about is

876
00:37:33,760 --> 00:37:35,520
about how you can go ahead and stitch

877
00:37:35,520 --> 00:37:38,400
multiple vtns together i would limit the

878
00:37:38,400 --> 00:37:40,720
scope of this document to that and talk

879
00:37:40,720 --> 00:37:42,400
in terms of stitching vtns together

880
00:37:42,400 --> 00:37:43,680
instead of

881
00:37:43,680 --> 00:37:45,520
putting this under

882
00:37:45,520 --> 00:37:47,599
the edges of something like a end-to-end

883
00:37:47,599 --> 00:37:50,320
slicing

884
00:37:54,480 --> 00:37:56,079
do you want to respond before we go to

885
00:37:56,079 --> 00:37:58,800
the next person

886
00:38:01,040 --> 00:38:05,000
okay xi go ahead

887
00:38:06,880 --> 00:38:09,200
i i just want to

888
00:38:09,200 --> 00:38:11,040
help to reply

889
00:38:11,040 --> 00:38:11,760
to

890
00:38:11,760 --> 00:38:13,119
parents

891
00:38:13,119 --> 00:38:15,760
comments on the entrance live framework

892
00:38:15,760 --> 00:38:17,599
craft actually that one

893
00:38:17,599 --> 00:38:19,440
will be presented

894
00:38:19,440 --> 00:38:21,760
tomorrow in the t session and this

895
00:38:21,760 --> 00:38:23,760
document is made about the

896
00:38:23,760 --> 00:38:26,880
segment routine based extension to solve

897
00:38:26,880 --> 00:38:29,119
this uh multi-domain mapping and the

898
00:38:29,119 --> 00:38:31,200
concatenation

899
00:38:31,200 --> 00:38:34,560
issue we want to solve okay

900
00:38:34,560 --> 00:38:36,800
we can discuss further about the engine

901
00:38:36,800 --> 00:38:41,280
slicing framework in the this meeting

902
00:38:41,280 --> 00:38:43,600
okay adrian

903
00:38:43,600 --> 00:38:45,040
[Music]

904
00:38:45,040 --> 00:38:48,400
thank you joel um

905
00:38:48,400 --> 00:38:51,839
i is speaking as the editor of the tease

906
00:38:51,839 --> 00:38:54,640
network slicing framework which is

907
00:38:54,640 --> 00:38:57,119
intended to be sort of all embracing for

908
00:38:57,119 --> 00:38:59,200
ietf network slices

909
00:38:59,200 --> 00:39:01,920
i want to caution the authors here to be

910
00:39:01,920 --> 00:39:03,520
very careful

911
00:39:03,520 --> 00:39:05,359
about the term

912
00:39:05,359 --> 00:39:07,440
end to end

913
00:39:07,440 --> 00:39:08,720
because

914
00:39:08,720 --> 00:39:11,359
the the concept of an end-to-end network

915
00:39:11,359 --> 00:39:14,880
slice has already been

916
00:39:14,880 --> 00:39:17,599
used by 3gpp

917
00:39:17,599 --> 00:39:20,560
to mean something much broader of which

918
00:39:20,560 --> 00:39:23,119
an ietf technology network slice would

919
00:39:23,119 --> 00:39:25,440
form only part

920
00:39:25,440 --> 00:39:27,599
so

921
00:39:27,599 --> 00:39:30,880
i think uh take a little bit of care um

922
00:39:30,880 --> 00:39:33,040
especially as well that that the concept

923
00:39:33,040 --> 00:39:36,320
of end has uh has a a strange meaning in

924
00:39:36,320 --> 00:39:37,920
in ietf

925
00:39:37,920 --> 00:39:41,839
so um maybe step back from

926
00:39:41,839 --> 00:39:42,720
that

927
00:39:42,720 --> 00:39:45,119
headline title of end-to-end ietf

928
00:39:45,119 --> 00:39:46,880
network slice and

929
00:39:46,880 --> 00:39:48,720
talk

930
00:39:48,720 --> 00:39:51,359
more about what it is you're you're

931
00:39:51,359 --> 00:39:52,480
achieving

932
00:39:52,480 --> 00:39:54,320
rather than getting hooked on that

933
00:39:54,320 --> 00:39:57,320
terminology

934
00:40:05,119 --> 00:40:07,280
thank you adrian

935
00:40:07,280 --> 00:40:09,520
yongshin if you will stop sharing we

936
00:40:09,520 --> 00:40:13,119
will now move on to the next presenter

937
00:40:13,119 --> 00:40:15,200
i believe you're next and i'm sorry if

938
00:40:15,200 --> 00:40:17,200
i'm mispronouncing names yeah

939
00:40:17,200 --> 00:40:21,040
there so you should try to you should uh

940
00:40:21,040 --> 00:40:22,640
click the share button and then i will

941
00:40:22,640 --> 00:40:25,839
give you permission to do so

942
00:40:26,560 --> 00:40:28,960
there you go and now as soon as they

943
00:40:28,960 --> 00:40:31,680
actually appear

944
00:40:37,200 --> 00:40:40,960
there you are thank you go ahead

945
00:40:42,880 --> 00:40:44,400
uh hello everyone

946
00:40:44,400 --> 00:40:47,280
i am salih from juniper networks

947
00:40:47,280 --> 00:40:50,079
today i am presenting srv6 interdomain

948
00:40:50,079 --> 00:40:54,560
mapping suits on behalf of my co-authors

949
00:40:57,040 --> 00:40:59,760
so this draft introduces three new srv6

950
00:40:59,760 --> 00:41:03,040
ncb endpoint behaviors namely n dot

951
00:41:03,040 --> 00:41:07,839
replace android replace b6 and n.d b6

952
00:41:07,839 --> 00:41:10,640
these seeds helps in building srv six

953
00:41:10,640 --> 00:41:13,440
paths spanning multiple srv6 domain

954
00:41:13,440 --> 00:41:16,319
so we will get a services continue

955
00:41:16,319 --> 00:41:18,240
service continuity over multiple

956
00:41:18,240 --> 00:41:20,800
services transport domains each domain

957
00:41:20,800 --> 00:41:23,280
can have its own t mechanisms

958
00:41:23,280 --> 00:41:24,240
so

959
00:41:24,240 --> 00:41:26,640
this among the three slides the n dot

960
00:41:26,640 --> 00:41:28,880
replace and android replace b6 seats

961
00:41:28,880 --> 00:41:31,599
helps in transporting their working uh

962
00:41:31,599 --> 00:41:34,400
so these seats also helps when there are

963
00:41:34,400 --> 00:41:36,560
multiple intent based paths present in

964
00:41:36,560 --> 00:41:38,160
the network

965
00:41:38,160 --> 00:41:38,960
so

966
00:41:38,960 --> 00:41:41,119
in such scenarios also this mechanism

967
00:41:41,119 --> 00:41:44,240
can help in getting easy stitching

968
00:41:44,240 --> 00:41:46,160
that means it can work with the

969
00:41:46,160 --> 00:41:48,480
procedures mentioned under bgp class for

970
00:41:48,480 --> 00:41:50,960
transport or similar mechanisms

971
00:41:50,960 --> 00:41:52,240
for getting

972
00:41:52,240 --> 00:41:54,960
multiple end-to-end intent based paths

973
00:41:54,960 --> 00:41:56,720
across the network

974
00:41:56,720 --> 00:42:01,359
uh so the last db6 it helps in service

975
00:42:01,359 --> 00:42:03,599
in the working

976
00:42:03,599 --> 00:42:06,319
so now we will look at the two use cases

977
00:42:06,319 --> 00:42:07,920
uh the first use case is for the

978
00:42:07,920 --> 00:42:10,160
transport in the working

979
00:42:10,160 --> 00:42:12,480
so this this use case is

980
00:42:12,480 --> 00:42:14,640
from the seamless sr draft

981
00:42:14,640 --> 00:42:17,680
so basically the figure shows uh three

982
00:42:17,680 --> 00:42:22,000
different asses s1 as2 and s3 the spr1

983
00:42:22,000 --> 00:42:23,599
to spr8

984
00:42:23,599 --> 00:42:26,880
are border nodes between the ss a given

985
00:42:26,880 --> 00:42:29,839
asp runs the bgp session with the asps

986
00:42:29,839 --> 00:42:32,319
in the descent asses

987
00:42:32,319 --> 00:42:35,119
the asp also runs ibgp sessions with

988
00:42:35,119 --> 00:42:37,440
other aspires in the same

989
00:42:37,440 --> 00:42:38,560
as

990
00:42:38,560 --> 00:42:40,640
rs can also be used to achieve the full

991
00:42:40,640 --> 00:42:43,520
measure 5bgp requirement

992
00:42:43,520 --> 00:42:44,400
so

993
00:42:44,400 --> 00:42:47,440
instead of ibgp or ebgp this can also be

994
00:42:47,440 --> 00:42:49,280
replaced with the

995
00:42:49,280 --> 00:42:53,119
intent based bgpct or similar mechanisms

996
00:42:53,119 --> 00:42:55,359
so these seats actually helps in

997
00:42:55,359 --> 00:42:57,440
replacing the destination

998
00:42:57,440 --> 00:42:58,400
address

999
00:42:58,400 --> 00:43:00,640
in the up incoming packet

1000
00:43:00,640 --> 00:43:02,960
one thing to notice there is no segment

1001
00:43:02,960 --> 00:43:05,200
list change with respect to these two

1002
00:43:05,200 --> 00:43:07,200
seats

1003
00:43:07,200 --> 00:43:08,560
the

1004
00:43:08,560 --> 00:43:11,040
next slide

1005
00:43:11,040 --> 00:43:13,200
yeah so the processing of android

1006
00:43:13,200 --> 00:43:16,640
replace so this uh actually replaces the

1007
00:43:16,640 --> 00:43:18,960
destination address with the new seat

1008
00:43:18,960 --> 00:43:21,440
and forward the packet on an outgoing

1009
00:43:21,440 --> 00:43:22,560
interface

1010
00:43:22,560 --> 00:43:24,560
so this idea is similar to the swap

1011
00:43:24,560 --> 00:43:27,359
operation on an mpls

1012
00:43:27,359 --> 00:43:28,640
data plane

1013
00:43:28,640 --> 00:43:31,680
there is no segment list change uh

1014
00:43:31,680 --> 00:43:33,440
segment left change

1015
00:43:33,440 --> 00:43:35,520
and it cannot be the last seed

1016
00:43:35,520 --> 00:43:37,359
for the in the srh

1017
00:43:37,359 --> 00:43:40,400
the procedure is mentioned in the

1018
00:43:40,400 --> 00:43:41,520
draft

1019
00:43:41,520 --> 00:43:44,000
when srh is processed after doing the

1020
00:43:44,000 --> 00:43:45,040
initial

1021
00:43:45,040 --> 00:43:46,000
checks

1022
00:43:46,000 --> 00:43:49,040
decrement ipv6 op limit by one update

1023
00:43:49,040 --> 00:43:51,760
ipv6 destination address with the new

1024
00:43:51,760 --> 00:43:53,760
destination address mapped with the n

1025
00:43:53,760 --> 00:43:56,240
dot replace it to submit the packet to

1026
00:43:56,240 --> 00:43:58,240
the ipv6 module for transmission to the

1027
00:43:58,240 --> 00:44:01,599
new destination via the member of j

1028
00:44:01,599 --> 00:44:03,680
where it belongs to one of the one or

1029
00:44:03,680 --> 00:44:06,480
more of the adjacencies of pgp

1030
00:44:06,480 --> 00:44:08,800
so one uh thumb rule is for a route if

1031
00:44:08,800 --> 00:44:11,359
the bgp next stop is one hope away uh

1032
00:44:11,359 --> 00:44:14,160
then while advertising we we use and dot

1033
00:44:14,160 --> 00:44:15,440
replace it

1034
00:44:15,440 --> 00:44:18,800
uh the a detailed uh procedure uh

1035
00:44:18,800 --> 00:44:20,560
probably we will update in the next

1036
00:44:20,560 --> 00:44:24,160
version of the draft with an example

1037
00:44:24,160 --> 00:44:27,040
uh so endor as an exit

1038
00:44:27,040 --> 00:44:29,440
is n dot replace b6

1039
00:44:29,440 --> 00:44:32,240
so this is uh where the apart from

1040
00:44:32,240 --> 00:44:33,760
replacing the destination address with

1041
00:44:33,760 --> 00:44:36,240
the new state it will also add an

1042
00:44:36,240 --> 00:44:38,640
additional srv6 header so this is

1043
00:44:38,640 --> 00:44:42,240
similar to swap and push on the mpls uh

1044
00:44:42,240 --> 00:44:43,680
data plane

1045
00:44:43,680 --> 00:44:45,760
here also there is no segment left

1046
00:44:45,760 --> 00:44:48,400
change and it cannot be the last

1047
00:44:48,400 --> 00:44:52,000
in the srh uh for a route uh if the next

1048
00:44:52,000 --> 00:44:53,839
stop is multihope aware then while

1049
00:44:53,839 --> 00:44:56,960
advertising we pick n dot replace b6

1050
00:44:56,960 --> 00:44:59,280
seed

1051
00:45:00,480 --> 00:45:02,400
as mentioned the

1052
00:45:02,400 --> 00:45:04,560
in the draft when an src is processed

1053
00:45:04,560 --> 00:45:06,079
after the initial

1054
00:45:06,079 --> 00:45:08,240
checks uh decrement ipv6 hop limit by

1055
00:45:08,240 --> 00:45:09,040
one

1056
00:45:09,040 --> 00:45:11,040
update ibv6 destination address with the

1057
00:45:11,040 --> 00:45:12,960
new destination address mapped with 10

1058
00:45:12,960 --> 00:45:15,920
dot replace b6 push an ipv6 header with

1059
00:45:15,920 --> 00:45:18,880
the sr set outer ipv6 source address

1060
00:45:18,880 --> 00:45:21,119
equal to the source address the address

1061
00:45:21,119 --> 00:45:24,240
of the border node set the outer payload

1062
00:45:24,240 --> 00:45:25,920
length traffic class hop limit and power

1063
00:45:25,920 --> 00:45:28,000
label fields set the outer next up

1064
00:45:28,000 --> 00:45:30,079
header value submit the packet to ipv6

1065
00:45:30,079 --> 00:45:34,079
module for transmission to the faucet

1066
00:45:35,200 --> 00:45:37,680
yeah so the second use case is

1067
00:45:37,680 --> 00:45:40,640
for the service interworking so here

1068
00:45:40,640 --> 00:45:44,720
there are two srv6 domain as1 and as2

1069
00:45:44,720 --> 00:45:46,880
the services are running between pe one

1070
00:45:46,880 --> 00:45:49,839
and pe two in option b state

1071
00:45:49,839 --> 00:45:51,040
um

1072
00:45:51,040 --> 00:45:53,920
uh so the abs can also be rs so there

1073
00:45:53,920 --> 00:45:56,880
are no vr configs at uh the abr or

1074
00:45:56,880 --> 00:45:59,359
errors the self next stop is configured

1075
00:45:59,359 --> 00:46:02,240
at the rrs

1076
00:46:02,240 --> 00:46:04,079
the requirement here is to avoid service

1077
00:46:04,079 --> 00:46:06,960
route lookup on abr1 and abr2 to provide

1078
00:46:06,960 --> 00:46:08,240
an option b style end-to-end

1079
00:46:08,240 --> 00:46:10,560
connectivity

1080
00:46:10,560 --> 00:46:12,720
the at rr uh

1081
00:46:12,720 --> 00:46:16,079
we we decapilate the received srv6

1082
00:46:16,079 --> 00:46:18,079
header and encapsulate the new srv6

1083
00:46:18,079 --> 00:46:21,040
header with source address same as the

1084
00:46:21,040 --> 00:46:23,359
rr

1085
00:46:25,520 --> 00:46:26,960
so

1086
00:46:26,960 --> 00:46:29,520
like mentioned like this sid recapsulate

1087
00:46:29,520 --> 00:46:31,680
the receiver received a srv6 header and

1088
00:46:31,680 --> 00:46:34,319
encapsulate a new srv6 header

1089
00:46:34,319 --> 00:46:36,400
uh when an sr the procedure is mentioned

1090
00:46:36,400 --> 00:46:38,640
in the draft like when an srg is

1091
00:46:38,640 --> 00:46:42,000
received after the checks remove the uh

1092
00:46:42,000 --> 00:46:44,240
outer ipv6 header with all its extension

1093
00:46:44,240 --> 00:46:47,040
headers push the new ipv6 header with

1094
00:46:47,040 --> 00:46:48,880
the srv6 seats associated with the

1095
00:46:48,880 --> 00:46:50,720
android db60

1096
00:46:50,720 --> 00:46:54,400
in nsrg set out our ipv6sa equal to the

1097
00:46:54,400 --> 00:46:57,200
tv and our ipv6 destination address to

1098
00:46:57,200 --> 00:46:59,359
the first set in the segment list

1099
00:46:59,359 --> 00:47:01,839
set of outer payload line traffic class

1100
00:47:01,839 --> 00:47:04,240
hop limit employable fields set then

1101
00:47:04,240 --> 00:47:06,560
outer next header value submit the

1102
00:47:06,560 --> 00:47:08,319
packet to the ipv6 module for

1103
00:47:08,319 --> 00:47:11,839
transmission to the first set

1104
00:47:15,119 --> 00:47:16,640
yeah so

1105
00:47:16,640 --> 00:47:19,599
these so we request the working group to

1106
00:47:19,599 --> 00:47:21,520
review the document and provide comments

1107
00:47:21,520 --> 00:47:24,559
and feedback

1108
00:47:24,559 --> 00:47:27,359
okay thank you sala there is there are

1109
00:47:27,359 --> 00:47:30,480
some questions in the queue

1110
00:47:36,160 --> 00:47:37,280
hello

1111
00:47:37,280 --> 00:47:38,960
yeah hi go ahead

1112
00:47:38,960 --> 00:47:42,880
okay uh this is from huawei uh so my

1113
00:47:42,880 --> 00:47:45,520
understanding the under replace is as

1114
00:47:45,520 --> 00:47:47,200
similar as the

1115
00:47:47,200 --> 00:47:51,599
mapping the swap function of mpis

1116
00:47:51,599 --> 00:47:52,480
but

1117
00:47:52,480 --> 00:47:53,520
i'm a

1118
00:47:53,520 --> 00:47:56,319
because i'm not sure my understanding is

1119
00:47:56,319 --> 00:47:58,640
right or not because in the

1120
00:47:58,640 --> 00:48:02,559
srv6 i don't think we need not the swept

1121
00:48:02,559 --> 00:48:05,200
because this is the segment at least

1122
00:48:05,200 --> 00:48:06,960
when we calculate

1123
00:48:06,960 --> 00:48:10,240
this the ingress node so that's there's

1124
00:48:10,240 --> 00:48:12,960
not necessary it was the web has a

1125
00:48:12,960 --> 00:48:14,960
segment in the

1126
00:48:14,960 --> 00:48:16,160
midpoint

1127
00:48:16,160 --> 00:48:17,440
so why

1128
00:48:17,440 --> 00:48:20,720
we introduce this the under replace

1129
00:48:20,720 --> 00:48:21,920
function

1130
00:48:21,920 --> 00:48:24,480
for the sale

1131
00:48:24,480 --> 00:48:26,240
yeah okay so basically there are

1132
00:48:26,240 --> 00:48:28,640
different mechanisms for multiple domain

1133
00:48:28,640 --> 00:48:30,640
uh when there are multiple domains

1134
00:48:30,640 --> 00:48:33,040
involved like the ingress itself is

1135
00:48:33,040 --> 00:48:34,880
computing the full path

1136
00:48:34,880 --> 00:48:37,839
or the pc is involved so this mechanism

1137
00:48:37,839 --> 00:48:39,920
is where the bgp is involved for

1138
00:48:39,920 --> 00:48:42,400
stitching the end-to-end path

1139
00:48:42,400 --> 00:48:45,280
these domains are heterogeneous and

1140
00:48:45,280 --> 00:48:46,720
there is actually

1141
00:48:46,720 --> 00:48:48,480
on the borders there itself

1142
00:48:48,480 --> 00:48:51,440
the the protocol reachability is not

1143
00:48:51,440 --> 00:48:54,640
leaked or not land by the ingress pe one

1144
00:48:54,640 --> 00:48:56,720
it is actually switched automatically by

1145
00:48:56,720 --> 00:49:00,079
vgp so this is for option c connectivity

1146
00:49:00,079 --> 00:49:02,640
across multiple uh domains

1147
00:49:02,640 --> 00:49:04,800
so this is another way to address the

1148
00:49:04,800 --> 00:49:07,200
same thing

1149
00:49:08,160 --> 00:49:11,040
uh okay okay

1150
00:49:11,040 --> 00:49:14,920
catan you're next

1151
00:49:24,960 --> 00:49:27,040
somebody has a lot of background noise

1152
00:49:27,040 --> 00:49:28,160
make sure

1153
00:49:28,160 --> 00:49:32,160
you are muted if you're not speaking

1154
00:49:32,559 --> 00:49:35,599
thank you go ahead katan

1155
00:49:35,599 --> 00:49:39,440
uh my question was on the n dot db6 uh

1156
00:49:39,440 --> 00:49:40,319
uh

1157
00:49:40,319 --> 00:49:41,440
sorry

1158
00:49:41,440 --> 00:49:43,520
on the pseudo code for that so this is

1159
00:49:43,520 --> 00:49:47,359
uh was a service uh kind of a mapping

1160
00:49:47,359 --> 00:49:48,880
right so binding

1161
00:49:48,880 --> 00:49:52,480
uh my question is uh whether this uh the

1162
00:49:52,480 --> 00:49:54,000
service said

1163
00:49:54,000 --> 00:49:56,160
is that uh like a per

1164
00:49:56,160 --> 00:49:59,920
per prefix or is it a power bar of

1165
00:49:59,920 --> 00:50:02,559
a location

1166
00:50:02,880 --> 00:50:05,440
in this case

1167
00:50:06,559 --> 00:50:09,839
yeah so this is per prefix uh kitten

1168
00:50:09,839 --> 00:50:11,920
pepper fix at least yeah so the

1169
00:50:11,920 --> 00:50:13,599
mechanism

1170
00:50:13,599 --> 00:50:14,880
is mainly

1171
00:50:14,880 --> 00:50:17,040
the service prefix advertisement this is

1172
00:50:17,040 --> 00:50:19,680
option b so the rr scan

1173
00:50:19,680 --> 00:50:21,839
also will have service for every prefix

1174
00:50:21,839 --> 00:50:24,319
this will be looked up

1175
00:50:24,319 --> 00:50:26,960
okay so the suggestion just to maybe

1176
00:50:26,960 --> 00:50:30,079
clarify that in the draft and i would

1177
00:50:30,079 --> 00:50:32,720
say perhaps consider uh

1178
00:50:32,720 --> 00:50:34,880
upper worf as well

1179
00:50:34,880 --> 00:50:38,960
yes sure okay thanks thank you

1180
00:50:39,280 --> 00:50:42,480
okay changly

1181
00:50:47,359 --> 00:50:49,599
chang go ahead

1182
00:50:49,599 --> 00:50:50,960
okay can you hear me

1183
00:50:50,960 --> 00:50:54,079
okay yes the first one is that yeah i

1184
00:50:54,079 --> 00:50:56,079
don't really understand why we need to

1185
00:50:56,079 --> 00:50:59,040
like replace the destination address

1186
00:50:59,040 --> 00:51:00,720
like you said it's

1187
00:51:00,720 --> 00:51:02,000
used for

1188
00:51:02,000 --> 00:51:04,400
adjusting

1189
00:51:04,400 --> 00:51:07,520
achieving the option c and i'd like to

1190
00:51:07,520 --> 00:51:10,960
see the text is explicitly in the draft

1191
00:51:10,960 --> 00:51:14,400
and the second question is that

1192
00:51:14,400 --> 00:51:15,760
when the

1193
00:51:15,760 --> 00:51:17,280
seed list

1194
00:51:17,280 --> 00:51:20,880
contains only one single seed

1195
00:51:20,880 --> 00:51:23,240
in uh like uh

1196
00:51:23,240 --> 00:51:26,400
abiding seed n dot

1197
00:51:26,400 --> 00:51:27,520
b6

1198
00:51:27,520 --> 00:51:30,800
as defined it in the i've seen 18

1199
00:51:30,800 --> 00:51:33,200
9 86

1200
00:51:33,200 --> 00:51:34,960
what's the difference between

1201
00:51:34,960 --> 00:51:38,319
the like end b6

1202
00:51:38,319 --> 00:51:40,720
and the end rep

1203
00:51:40,720 --> 00:51:42,640
play six i

1204
00:51:42,640 --> 00:51:44,319
can see the

1205
00:51:44,319 --> 00:51:47,359
action is the same

1206
00:51:48,720 --> 00:51:51,280
yeah yeah so the first one the option

1207
00:51:51,280 --> 00:51:53,280
see how the procedure works with an

1208
00:51:53,280 --> 00:51:55,680
example probably we will update in the

1209
00:51:55,680 --> 00:51:57,760
subsequent version of the draft the

1210
00:51:57,760 --> 00:52:00,640
second one as i mentioned it is based on

1211
00:52:00,640 --> 00:52:03,760
when you start advertising uh

1212
00:52:03,760 --> 00:52:06,640
we look at the bgp next up from where

1213
00:52:06,640 --> 00:52:07,920
this uh

1214
00:52:07,920 --> 00:52:10,000
bgp protocol next stop reachability is

1215
00:52:10,000 --> 00:52:13,200
land so if it is only one hope away we

1216
00:52:13,200 --> 00:52:16,160
advertise the replace if it is

1217
00:52:16,160 --> 00:52:18,960
if it is not if there are multiple uh

1218
00:52:18,960 --> 00:52:21,280
seats to reach the other domain

1219
00:52:21,280 --> 00:52:23,520
then yeah we will we will do an

1220
00:52:23,520 --> 00:52:26,160
additional encapsulation b6 but yeah

1221
00:52:26,160 --> 00:52:28,960
depending on the network and where the

1222
00:52:28,960 --> 00:52:31,200
where where this is getting stitched to

1223
00:52:31,200 --> 00:52:33,599
one of them will be picked uh like based

1224
00:52:33,599 --> 00:52:34,960
on the situation

1225
00:52:34,960 --> 00:52:37,440
or that characteristics of that

1226
00:52:37,440 --> 00:52:39,680
particular board or not yeah probably we

1227
00:52:39,680 --> 00:52:41,599
will update with an example so that will

1228
00:52:41,599 --> 00:52:44,559
be more clear in the trap

1229
00:52:44,559 --> 00:52:47,040
yeah i think we need more clarification

1230
00:52:47,040 --> 00:52:48,800
of this draft

1231
00:52:48,800 --> 00:52:51,920
and i am really curious about why we

1232
00:52:51,920 --> 00:52:53,920
need this like option c or something

1233
00:52:53,920 --> 00:52:55,839
like this in a draft

1234
00:52:55,839 --> 00:52:58,480
yeah thank you

1235
00:52:59,760 --> 00:53:02,400
okay and then you're back up

1236
00:53:02,400 --> 00:53:04,559
and i'm going to close the click queue

1237
00:53:04,559 --> 00:53:06,640
after xiaofu because

1238
00:53:06,640 --> 00:53:09,839
we're getting a little long on time

1239
00:53:09,839 --> 00:53:10,800
okay

1240
00:53:10,800 --> 00:53:11,680
uh

1241
00:53:11,680 --> 00:53:13,200
okay

1242
00:53:13,200 --> 00:53:16,720
okay thanks uh joy uh uh come here again

1243
00:53:16,720 --> 00:53:20,880
uh sorry i i uh quick i am still using

1244
00:53:20,880 --> 00:53:22,160
uh

1245
00:53:22,160 --> 00:53:23,440
uh fields

1246
00:53:23,440 --> 00:53:26,559
about this the purpose of this

1247
00:53:26,559 --> 00:53:29,680
this type of oversight seed because you

1248
00:53:29,680 --> 00:53:33,200
know the srv6 the major advantage of

1249
00:53:33,200 --> 00:53:37,280
srv6 can still use the ipv6 forwarding

1250
00:53:37,280 --> 00:53:39,680
to transverse the different

1251
00:53:39,680 --> 00:53:40,880
domains

1252
00:53:40,880 --> 00:53:43,680
but for mprs it has to

1253
00:53:43,680 --> 00:53:46,800
keep the huge number of these the

1254
00:53:46,800 --> 00:53:49,520
forwarding entries for the mapping

1255
00:53:49,520 --> 00:53:52,480
between the between the labels

1256
00:53:52,480 --> 00:53:55,760
so that's the for the ip for the srv6 so

1257
00:53:55,760 --> 00:53:59,520
we can use the ipv6 and ipv6 can also

1258
00:53:59,520 --> 00:54:02,160
use aggregate to reduce the forwarding

1259
00:54:02,160 --> 00:54:04,800
entries so i mean this is the advantage

1260
00:54:04,800 --> 00:54:08,240
of srv6 but if we introduce this

1261
00:54:08,240 --> 00:54:11,520
map and see the in the srv6 select the

1262
00:54:11,520 --> 00:54:14,640
srprs i think this is just reduce the

1263
00:54:14,640 --> 00:54:17,440
advantage of srv6

1264
00:54:17,440 --> 00:54:19,359
that's my concern

1265
00:54:19,359 --> 00:54:21,440
yeah let me answer it yeah so as i

1266
00:54:21,440 --> 00:54:23,119
mentioned like there are different

1267
00:54:23,119 --> 00:54:24,480
scenarios like

1268
00:54:24,480 --> 00:54:26,960
like as you mentioned if everybody even

1269
00:54:26,960 --> 00:54:28,800
network is properly

1270
00:54:28,800 --> 00:54:30,640
numbered and everybody has a similar

1271
00:54:30,640 --> 00:54:32,720
mechanism and everything kind of a fresh

1272
00:54:32,720 --> 00:54:34,559
deployment then you have you can even

1273
00:54:34,559 --> 00:54:37,520
leak srv6 locators across domains and

1274
00:54:37,520 --> 00:54:39,200
you can get the protocol next up

1275
00:54:39,200 --> 00:54:41,359
reachability but this is a scenario

1276
00:54:41,359 --> 00:54:43,280
where there are multiple heterogeneous

1277
00:54:43,280 --> 00:54:45,520
srv6 domains and they have planned to

1278
00:54:45,520 --> 00:54:47,839
work together so there is already option

1279
00:54:47,839 --> 00:54:50,319
c the seamless sr trap talk about that

1280
00:54:50,319 --> 00:54:53,280
particular use case uh so and also there

1281
00:54:53,280 --> 00:54:56,559
could be multiple uh srv6 intent paths

1282
00:54:56,559 --> 00:54:59,760
like the bgbct or bgp car

1283
00:54:59,760 --> 00:55:01,839
so there also automatic stitching has to

1284
00:55:01,839 --> 00:55:04,240
happen at the border so it is for a

1285
00:55:04,240 --> 00:55:06,559
different use case but i think it's all

1286
00:55:06,559 --> 00:55:07,520
all these

1287
00:55:07,520 --> 00:55:09,359
different mechanisms are really required

1288
00:55:09,359 --> 00:55:12,799
for different kind of deployment

1289
00:55:14,319 --> 00:55:19,880
okay thank you sala darren go ahead

1290
00:55:22,559 --> 00:55:24,799
yeah yeah first thanks for work to

1291
00:55:24,799 --> 00:55:26,319
publish this and i know it's a revision

1292
00:55:26,319 --> 00:55:28,880
zero um so i don't expect you to answer

1293
00:55:28,880 --> 00:55:31,280
this now uh but maybe in a future

1294
00:55:31,280 --> 00:55:33,119
revision of the draft it would be

1295
00:55:33,119 --> 00:55:37,119
interesting to see how an sr source

1296
00:55:37,119 --> 00:55:40,559
selects one of these uh behavior

1297
00:55:40,559 --> 00:55:42,799
when it builds its path versus

1298
00:55:42,799 --> 00:55:44,799
versus another behavior

1299
00:55:44,799 --> 00:55:47,200
just to see the cases where

1300
00:55:47,200 --> 00:55:49,680
these sids behaviors are used or not

1301
00:55:49,680 --> 00:55:51,839
used or one of them is used instead of

1302
00:55:51,839 --> 00:55:52,799
another

1303
00:55:52,799 --> 00:55:54,160
uh that would be an interesting

1304
00:55:54,160 --> 00:55:56,160
illustration to see

1305
00:55:56,160 --> 00:55:58,799
yeah definitely we will update that in

1306
00:55:58,799 --> 00:56:00,960
the next version of the draft

1307
00:56:00,960 --> 00:56:02,640
great thank you

1308
00:56:02,640 --> 00:56:03,440
okay

1309
00:56:03,440 --> 00:56:06,000
xiaofu

1310
00:56:14,559 --> 00:56:18,720
go ahead yes we can

1311
00:56:19,040 --> 00:56:22,079
i think the replacer seems enough why

1312
00:56:22,079 --> 00:56:24,559
need to look

1313
00:56:29,040 --> 00:56:30,960
you seem to have some audio problems

1314
00:56:30,960 --> 00:56:32,799
though it was hard to understand you and

1315
00:56:32,799 --> 00:56:36,480
your audio seems to have dropped

1316
00:56:37,520 --> 00:56:40,720
i suggest you put it here

1317
00:56:42,559 --> 00:56:45,520
my question is very simple i think the

1318
00:56:45,520 --> 00:56:48,559
replace seems enough why need to replace

1319
00:56:48,559 --> 00:56:51,119
the b6

1320
00:56:52,079 --> 00:56:54,319
yeah so as i mentioned when if you see

1321
00:56:54,319 --> 00:56:56,799
the diagram right so there are

1322
00:56:56,799 --> 00:56:59,440
ibgp sessions instead is so in order to

1323
00:56:59,440 --> 00:57:02,079
cross one s you need multiple

1324
00:57:02,079 --> 00:57:02,880
uh

1325
00:57:02,880 --> 00:57:05,920
multiple seats in that particular as

1326
00:57:05,920 --> 00:57:06,960
to

1327
00:57:06,960 --> 00:57:09,119
be in the srh so that's why you need to

1328
00:57:09,119 --> 00:57:11,119
push an additional srh at the

1329
00:57:11,119 --> 00:57:13,839
corresponding ingress board of notice

1330
00:57:13,839 --> 00:57:15,599
so i think this will be clear probably

1331
00:57:15,599 --> 00:57:17,440
with an example when we mention it in

1332
00:57:17,440 --> 00:57:19,680
the draft

1333
00:57:19,680 --> 00:57:22,559
okay so thank you all

1334
00:57:22,559 --> 00:57:24,799
darren xiaofu please take yourselves off

1335
00:57:24,799 --> 00:57:25,760
the queue

1336
00:57:25,760 --> 00:57:29,280
saleh please stop sharing

1337
00:57:29,280 --> 00:57:30,640
and uh

1338
00:57:30,640 --> 00:57:34,400
giuseppe i believe you're up now

1339
00:57:35,760 --> 00:57:37,839
yep can you hear me

1340
00:57:37,839 --> 00:57:39,599
can hear you you need to go use the

1341
00:57:39,599 --> 00:57:41,359
button at the top to

1342
00:57:41,359 --> 00:57:43,280
share pre-loaded slides to share your

1343
00:57:43,280 --> 00:57:47,280
slides i will now give you permission

1344
00:57:50,799 --> 00:57:52,400
and i will let you know as soon as

1345
00:57:52,400 --> 00:57:55,440
they're visible and then you may begin

1346
00:57:55,440 --> 00:57:57,040
i don't know what causes this delay

1347
00:57:57,040 --> 00:57:59,280
there you go go ahead okay

1348
00:57:59,280 --> 00:58:00,400
okay

1349
00:58:00,400 --> 00:58:02,079
uh yeah hello everybody this is an

1350
00:58:02,079 --> 00:58:05,839
update about the srh encapsulation for

1351
00:58:05,839 --> 00:58:09,200
afternoon marketing method

1352
00:58:09,200 --> 00:58:10,720
okay

1353
00:58:10,720 --> 00:58:12,880
just a quick recap about what is the

1354
00:58:12,880 --> 00:58:16,559
alternate marking methodology i guess

1355
00:58:16,559 --> 00:58:18,640
most of you are familiar with this

1356
00:58:18,640 --> 00:58:20,160
methodology

1357
00:58:20,160 --> 00:58:22,480
uh this is an impassive performance

1358
00:58:22,480 --> 00:58:24,720
measurement that allow loss delay and

1359
00:58:24,720 --> 00:58:26,400
deliveration

1360
00:58:26,400 --> 00:58:29,839
metrics and it is defined in two rfc in

1361
00:58:29,839 --> 00:58:34,000
ippm rfc d21 and 8889

1362
00:58:34,000 --> 00:58:37,280
regarding the application to ipv6 data

1363
00:58:37,280 --> 00:58:40,240
plane there is already a document in isg

1364
00:58:40,240 --> 00:58:41,680
evaluation

1365
00:58:41,680 --> 00:58:43,839
from six months

1366
00:58:43,839 --> 00:58:46,000
this document defines

1367
00:58:46,000 --> 00:58:49,200
two new alternate marking options adder

1368
00:58:49,200 --> 00:58:53,680
bottom biop and distinction options

1369
00:58:53,680 --> 00:58:56,480
of course this destination option can be

1370
00:58:56,480 --> 00:59:00,160
applicable to srv6 to srh

1371
00:59:00,160 --> 00:59:01,920
since destination option before the

1372
00:59:01,920 --> 00:59:05,520
routing adder are processed by

1373
00:59:05,520 --> 00:59:08,960
each node in the route list so that is

1374
00:59:08,960 --> 00:59:12,640
an identity in the sr part

1375
00:59:12,720 --> 00:59:15,200
this document defines how the alternate

1376
00:59:15,200 --> 00:59:19,640
marking is carried as shtld

1377
00:59:19,680 --> 00:59:24,680
srh tld of course is defined in xc8754

1378
00:59:24,960 --> 00:59:27,520
then we explain why we want to use the

1379
00:59:27,520 --> 00:59:30,839
srhtlv in the next

1380
00:59:30,839 --> 00:59:34,480
slide um yeah this is just the

1381
00:59:34,480 --> 00:59:36,079
the format the

1382
00:59:36,079 --> 00:59:39,760
of the search the sh tlv is the same as

1383
00:59:39,760 --> 00:59:42,400
we already defined for fpv6 so there is

1384
00:59:42,400 --> 00:59:44,079
no difference

1385
00:59:44,079 --> 00:59:46,880
between this tlv and the tlb that we

1386
00:59:46,880 --> 00:59:49,440
encoded in as our biop or destination

1387
00:59:49,440 --> 00:59:50,799
option

1388
00:59:50,799 --> 00:59:51,680
uh

1389
00:59:51,680 --> 00:59:54,079
so there are two bits that are the

1390
00:59:54,079 --> 00:59:56,400
marking beats there is the flow monitor

1391
00:59:56,400 --> 00:59:59,680
identification that is required

1392
00:59:59,680 --> 01:00:02,640
to reduce the per node configuration to

1393
01:00:02,640 --> 01:00:06,879
simplify the counter sampling

1394
01:00:07,119 --> 01:00:10,160
and also to facilitate the correlation

1395
01:00:10,160 --> 01:00:12,799
the data export and so on

1396
01:00:12,799 --> 01:00:15,040
this identification can be assigned by a

1397
01:00:15,040 --> 01:00:18,480
central controller or by can be served

1398
01:00:18,480 --> 01:00:22,799
or anomaly generated by the source node

1399
01:00:24,640 --> 01:00:29,280
regarding the usage of these tlv uh

1400
01:00:29,280 --> 01:00:32,240
is all also in this case the application

1401
01:00:32,240 --> 01:00:36,160
is the same as we have for fpv6 so

1402
01:00:36,160 --> 01:00:38,880
the ingress node as a part of the srh

1403
01:00:38,880 --> 01:00:40,400
encapsulate

1404
01:00:40,400 --> 01:00:42,960
the acceleration calculation may add

1405
01:00:42,960 --> 01:00:46,559
dtlv if it supports the alternate

1406
01:00:46,559 --> 01:00:48,319
marking functionality

1407
01:00:48,319 --> 01:00:51,520
regarding the intermediate sr node or

1408
01:00:51,520 --> 01:00:53,680
egress node

1409
01:00:53,680 --> 01:00:56,400
if they are capable to

1410
01:00:56,400 --> 01:00:58,559
to process the alternate marking tlv

1411
01:00:58,559 --> 01:01:02,000
they can simply read the tlv

1412
01:01:02,000 --> 01:01:05,440
they don't need to write so only

1413
01:01:05,440 --> 01:01:08,240
check if the tlv is present and read the

1414
01:01:08,240 --> 01:01:11,119
values of the bits

1415
01:01:11,119 --> 01:01:14,720
otherwise if the intermediate or egress

1416
01:01:14,720 --> 01:01:17,280
node are not capable of processing this

1417
01:01:17,280 --> 01:01:19,040
lv this is not a big

1418
01:01:19,040 --> 01:01:20,319
big problem

1419
01:01:20,319 --> 01:01:22,480
because if nodes are not capable of

1420
01:01:22,480 --> 01:01:24,720
processing utlev of course the

1421
01:01:24,720 --> 01:01:27,119
measurement can be done only for

1422
01:01:27,119 --> 01:01:29,760
the supporting nodes so this is one of

1423
01:01:29,760 --> 01:01:31,520
the

1424
01:01:31,520 --> 01:01:32,880
let's say the advantages of the

1425
01:01:32,880 --> 01:01:35,119
alternate marking because you don't have

1426
01:01:35,119 --> 01:01:37,920
so the intermediate node and

1427
01:01:37,920 --> 01:01:41,839
ending node do not have to write the

1428
01:01:41,839 --> 01:01:45,279
option the tlb

1429
01:01:45,520 --> 01:01:47,119
yeah in this slide we are going to

1430
01:01:47,119 --> 01:01:49,520
explain better the motivation why we

1431
01:01:49,520 --> 01:01:52,079
need to define the search yes

1432
01:01:52,079 --> 01:01:54,400
the srhtlv in addition to the

1433
01:01:54,400 --> 01:01:56,559
destination option

1434
01:01:56,559 --> 01:01:58,720
as i said the approach with destination

1435
01:01:58,720 --> 01:02:02,559
option and srh is already feasible to

1436
01:02:02,559 --> 01:02:05,760
allow performance measurement for srv6

1437
01:02:05,760 --> 01:02:08,640
for srh

1438
01:02:09,119 --> 01:02:11,839
but the issue is that if we are going to

1439
01:02:11,839 --> 01:02:13,839
use destination option

1440
01:02:13,839 --> 01:02:17,280
plus srh this requires the usage of two

1441
01:02:17,280 --> 01:02:20,079
extension adders and as you may know

1442
01:02:20,079 --> 01:02:21,680
there is some discussion on the

1443
01:02:21,680 --> 01:02:24,000
operational implication of

1444
01:02:24,000 --> 01:02:26,960
adding too much too many extension

1445
01:02:26,960 --> 01:02:29,119
adders

1446
01:02:29,119 --> 01:02:30,720
for fpv6

1447
01:02:30,720 --> 01:02:32,839
so in the case of

1448
01:02:32,839 --> 01:02:35,920
srh in case of srb6 we are investigating

1449
01:02:35,920 --> 01:02:38,880
this new proposal to use the same option

1450
01:02:38,880 --> 01:02:42,000
that we already defined for fpv6

1451
01:02:42,000 --> 01:02:45,039
uh to be encoded into the srhtlv of

1452
01:02:45,039 --> 01:02:47,680
course this document would update the

1453
01:02:47,680 --> 01:02:50,160
alternate marking application only in

1454
01:02:50,160 --> 01:02:52,240
the case of xrb6

1455
01:02:52,240 --> 01:02:54,640
only in the case of sah

1456
01:02:54,640 --> 01:02:57,359
indeed in case of srh alternate marking

1457
01:02:57,359 --> 01:02:58,880
could be applied

1458
01:02:58,880 --> 01:03:02,400
through the this tlb the srh3 but for

1459
01:03:02,400 --> 01:03:04,559
all the other cases with the pv6 data

1460
01:03:04,559 --> 01:03:07,359
plane usable by open destination upward

1461
01:03:07,359 --> 01:03:09,440
distribution option is of course the

1462
01:03:09,440 --> 01:03:11,200
only choice

1463
01:03:11,200 --> 01:03:14,720
to carry alternate marking

1464
01:03:14,839 --> 01:03:17,760
information and in the end there is no

1465
01:03:17,760 --> 01:03:19,520
other difference so

1466
01:03:19,520 --> 01:03:21,760
because the tlb is always

1467
01:03:21,760 --> 01:03:24,799
exactly the same

1468
01:03:24,799 --> 01:03:26,880
another point that we can consider that

1469
01:03:26,880 --> 01:03:28,880
considering that we have a compression

1470
01:03:28,880 --> 01:03:31,440
desire design as an ssh compression

1471
01:03:31,440 --> 01:03:33,039
design team that

1472
01:03:33,039 --> 01:03:35,039
is working on

1473
01:03:35,039 --> 01:03:38,559
the optimization solution for srv6

1474
01:03:38,559 --> 01:03:41,359
sc seed compression and srh

1475
01:03:41,359 --> 01:03:43,839
implementation this also could also

1476
01:03:43,839 --> 01:03:49,200
benefit use of srhlv but it's just

1477
01:03:49,200 --> 01:03:50,720
an hypothesis

1478
01:03:50,720 --> 01:03:53,520
so maybe the last the the last slide is

1479
01:03:53,520 --> 01:03:55,440
about the next step so

1480
01:03:55,440 --> 01:03:57,359
of course this is

1481
01:03:57,359 --> 01:03:58,799
a

1482
01:03:58,799 --> 01:04:00,559
straightforward way to apply alternate

1483
01:04:00,559 --> 01:04:03,119
marking to srv6

1484
01:04:03,119 --> 01:04:05,200
the companion we can say the companion

1485
01:04:05,200 --> 01:04:09,280
document as i said is in isg evaluation

1486
01:04:09,280 --> 01:04:11,920
and we are open to comment discussion

1487
01:04:11,920 --> 01:04:14,319
about this proposal

1488
01:04:14,319 --> 01:04:16,640
i hope i ever clarified the background

1489
01:04:16,640 --> 01:04:18,799
and motivation for this work

1490
01:04:18,799 --> 01:04:21,119
thank you

1491
01:04:23,119 --> 01:04:26,680
ron go ahead

1492
01:04:27,920 --> 01:04:30,640
i understand that sometimes you want all

1493
01:04:30,640 --> 01:04:32,960
mark functionality in every node along

1494
01:04:32,960 --> 01:04:34,480
the delivery path

1495
01:04:34,480 --> 01:04:37,359
and in that case you use the hph

1496
01:04:37,359 --> 01:04:39,119
sometimes you want it only at the

1497
01:04:39,119 --> 01:04:41,039
ultimate destination

1498
01:04:41,039 --> 01:04:43,520
and then you use the destination option

1499
01:04:43,520 --> 01:04:45,280
and sometimes you want it only at

1500
01:04:45,280 --> 01:04:47,520
segment endpoints

1501
01:04:47,520 --> 01:04:49,039
well when you want it at segment

1502
01:04:49,039 --> 01:04:51,119
endpoints you have two choices

1503
01:04:51,119 --> 01:04:54,480
one is to encode it in an srh tlv

1504
01:04:54,480 --> 01:04:56,160
the other is just to use the same

1505
01:04:56,160 --> 01:04:57,839
destination option

1506
01:04:57,839 --> 01:05:00,319
in a destination options header

1507
01:05:00,319 --> 01:05:03,200
that precedes the routing header

1508
01:05:03,200 --> 01:05:06,160
why did you choose the tlv in the srh as

1509
01:05:06,160 --> 01:05:08,480
opposed to the destination option that

1510
01:05:08,480 --> 01:05:11,839
precedes the routing header

1511
01:05:13,119 --> 01:05:16,160
yeah as also

1512
01:05:16,880 --> 01:05:19,839
i did also mention this before so

1513
01:05:19,839 --> 01:05:23,359
you are right so destination option plus

1514
01:05:23,359 --> 01:05:26,000
as a range

1515
01:05:26,000 --> 01:05:28,720
will have the same effect of

1516
01:05:28,720 --> 01:05:30,880
srhdlb so

1517
01:05:30,880 --> 01:05:34,559
the issue is that this solution is

1518
01:05:34,559 --> 01:05:38,640
is only applicable in the case of srh

1519
01:05:38,640 --> 01:05:40,640
in order to avoid the use of two

1520
01:05:40,640 --> 01:05:43,599
extension others that may have

1521
01:05:43,599 --> 01:05:47,920
some operational issues sometimes

1522
01:05:48,079 --> 01:05:50,880
for fpv6 so it is let's say a dedicated

1523
01:05:50,880 --> 01:05:52,799
solution for

1524
01:05:52,799 --> 01:05:56,640
srh and we can say that if accepted this

1525
01:05:56,640 --> 01:05:58,880
document

1526
01:05:58,880 --> 01:06:01,280
[Music]

1527
01:06:01,280 --> 01:06:04,720
will suggest or will recommend that for

1528
01:06:04,720 --> 01:06:07,599
srh the only option is to use the srh

1529
01:06:07,599 --> 01:06:10,319
telev and not the destination option

1530
01:06:10,319 --> 01:06:12,880
plus srh so we are going to define a

1531
01:06:12,880 --> 01:06:15,520
single solution but not you

1532
01:06:15,520 --> 01:06:17,280
why would you not want to make it more

1533
01:06:17,280 --> 01:06:18,480
general

1534
01:06:18,480 --> 01:06:19,680
and

1535
01:06:19,680 --> 01:06:21,280
make it work for any other routing

1536
01:06:21,280 --> 01:06:23,599
header

1537
01:06:27,599 --> 01:06:28,720
because

1538
01:06:28,720 --> 01:06:30,559
it's just to leverage the this

1539
01:06:30,559 --> 01:06:32,960
capability of srh to

1540
01:06:32,960 --> 01:06:35,599
to be extended to tlv and understand

1541
01:06:35,599 --> 01:06:37,200
your point but

1542
01:06:37,200 --> 01:06:38,400
um

1543
01:06:38,400 --> 01:06:39,760
the solution for

1544
01:06:39,760 --> 01:06:41,760
for all the rooting header is already in

1545
01:06:41,760 --> 01:06:42,559
the

1546
01:06:42,559 --> 01:06:47,839
six-man draft right because here you

1547
01:06:48,559 --> 01:06:51,359
we are defining the

1548
01:06:51,359 --> 01:06:53,119
the destination option header that of

1549
01:06:53,119 --> 01:06:55,440
course can be applicable to all the

1550
01:06:55,440 --> 01:06:58,559
routing gather so this is only for

1551
01:06:58,559 --> 01:07:03,359
the srh since with srh we have this uh

1552
01:07:03,359 --> 01:07:06,000
the possibility to use this kind of tlv

1553
01:07:06,000 --> 01:07:07,920
this kind of extension

1554
01:07:07,920 --> 01:07:11,039
we aim to leverage

1555
01:07:11,039 --> 01:07:12,480
and

1556
01:07:12,480 --> 01:07:14,480
in our mind it can be an optimized

1557
01:07:14,480 --> 01:07:18,480
solution only for ssh of course

1558
01:07:18,480 --> 01:07:20,559
it it seems like

1559
01:07:20,559 --> 01:07:22,319
you already have a solution in the

1560
01:07:22,319 --> 01:07:24,720
destination option and you can put two

1561
01:07:24,720 --> 01:07:26,160
destination you know a destination

1562
01:07:26,160 --> 01:07:27,520
option

1563
01:07:27,520 --> 01:07:30,079
before the routing header

1564
01:07:30,079 --> 01:07:31,760
so it seems like you're

1565
01:07:31,760 --> 01:07:33,760
you're coming up with a second solution

1566
01:07:33,760 --> 01:07:37,520
uh to a problem you've already solved

1567
01:07:39,119 --> 01:07:40,160
okay

1568
01:07:40,160 --> 01:07:41,200
i believe

1569
01:07:41,200 --> 01:07:43,599
you've answered we need to that that

1570
01:07:43,599 --> 01:07:45,920
topic should be taken to the list

1571
01:07:45,920 --> 01:07:48,720
as to whether we want to do this or not

1572
01:07:48,720 --> 01:07:50,319
greg has dropped off because i think he

1573
01:07:50,319 --> 01:07:52,480
was asking the same question

1574
01:07:52,480 --> 01:07:53,440
so

1575
01:07:53,440 --> 01:07:57,039
thank you giuseppe you can stop sharing

1576
01:07:57,039 --> 01:08:00,920
sammy you're up

1577
01:08:10,240 --> 01:08:12,640
there it's in the process of displaying

1578
01:08:12,640 --> 01:08:14,240
your slides i'll let you know when

1579
01:08:14,240 --> 01:08:16,399
you're when they're visible and

1580
01:08:16,399 --> 01:08:19,040
then you can start you can probably tell

1581
01:08:19,040 --> 01:08:20,319
yourself what they're visible but i

1582
01:08:20,319 --> 01:08:22,319
figure it's nice to know that somebody

1583
01:08:22,319 --> 01:08:26,319
else is seeing it it isn't yet visible

1584
01:08:28,158 --> 01:08:30,880
sure yeah can you hear me i guess

1585
01:08:30,880 --> 01:08:32,479
yes we can hear you

1586
01:08:32,479 --> 01:08:35,519
thank you for checking that

1587
01:08:36,319 --> 01:08:39,279
still waiting for it to

1588
01:08:39,279 --> 01:08:42,880
show the slides i it said it was sharing

1589
01:08:42,880 --> 01:08:46,238
but then i don't see them

1590
01:08:46,238 --> 01:08:49,839
yeah i don't see them either

1591
01:08:50,839 --> 01:08:53,359
uh why don't you stop and restart and

1592
01:08:53,359 --> 01:08:56,400
let's see what happens

1593
01:08:56,719 --> 01:08:58,640
okay

1594
01:08:58,640 --> 01:09:01,839
i'll give you permission again

1595
01:09:01,839 --> 01:09:05,520
a new deck is being shared

1596
01:09:05,520 --> 01:09:08,960
okay that's better

1597
01:09:12,399 --> 01:09:14,319
now at least it's looking the same way

1598
01:09:14,319 --> 01:09:16,719
we have seen everybody else look

1599
01:09:16,719 --> 01:09:21,239
so i assume it will appear in a moment

1600
01:09:23,359 --> 01:09:24,880
there you are

1601
01:09:24,880 --> 01:09:26,640
okay okay

1602
01:09:26,640 --> 01:09:28,880
okay thank you

1603
01:09:28,880 --> 01:09:31,040
yeah so i guess i can oh i can move the

1604
01:09:31,040 --> 01:09:32,640
slides this way

1605
01:09:32,640 --> 01:09:35,198
i was wondering how they move the slides

1606
01:09:35,198 --> 01:09:38,960
um okay uh yeah good morning everyone uh

1607
01:09:38,960 --> 01:09:42,560
my name is sami wutrus and uh i uh

1608
01:09:42,560 --> 01:09:44,719
i'm gonna be presenting on behalf of the

1609
01:09:44,719 --> 01:09:48,399
officers here of the draft

1610
01:09:48,719 --> 01:09:50,960
you know they use how how can we use uh

1611
01:09:50,960 --> 01:09:53,759
segment routing

1612
01:09:53,759 --> 01:09:58,000
uh concepts uh applied uh uh to the

1613
01:09:58,000 --> 01:10:01,040
service control plane uh and

1614
01:10:01,040 --> 01:10:04,320
this draft is focusing initially on

1615
01:10:04,320 --> 01:10:06,400
uh elan uh

1616
01:10:06,400 --> 01:10:09,360
service that's um ethernet uh an

1617
01:10:09,360 --> 01:10:13,199
ethernet service uh in alan involved

1618
01:10:13,199 --> 01:10:15,280
so

1619
01:10:15,280 --> 01:10:17,840
so so what does it mean to apply uh the

1620
01:10:17,840 --> 01:10:20,480
segment routing concept to services here

1621
01:10:20,480 --> 01:10:21,920
um

1622
01:10:21,920 --> 01:10:23,360
you know uh

1623
01:10:23,360 --> 01:10:26,320
it's not new that segment routing uh

1624
01:10:26,320 --> 01:10:28,400
define an srgb

1625
01:10:28,400 --> 01:10:30,880
for service as well this

1626
01:10:30,880 --> 01:10:33,840
could have global significance across

1627
01:10:33,840 --> 01:10:35,920
the networks who are saying

1628
01:10:35,920 --> 01:10:40,080
uh the srgb concept for services

1629
01:10:40,080 --> 01:10:42,080
uh can be used here

1630
01:10:42,080 --> 01:10:44,400
which means that every service

1631
01:10:44,400 --> 01:10:47,760
uh globally in a given domain uh will

1632
01:10:47,760 --> 01:10:49,360
have um

1633
01:10:49,360 --> 01:10:52,480
a unique index right

1634
01:10:52,480 --> 01:10:54,159
in that domain

1635
01:10:54,159 --> 01:10:56,159
so uh it will point a unique label

1636
01:10:56,159 --> 01:10:58,400
within this srgb so for example

1637
01:10:58,400 --> 01:10:59,679
if uh

1638
01:10:59,679 --> 01:11:02,320
in a given domain uh we are numbering

1639
01:11:02,320 --> 01:11:07,280
the services uh for elan here uh then um

1640
01:11:07,280 --> 01:11:09,920
a service number 65 could have a service

1641
01:11:09,920 --> 01:11:12,080
index 65

1642
01:11:12,080 --> 01:11:14,640
on all

1643
01:11:14,800 --> 01:11:16,560
provider routers or provider edge

1644
01:11:16,560 --> 01:11:20,560
routers providing that service

1645
01:11:22,159 --> 01:11:24,880
so so i think the key here is that we

1646
01:11:24,880 --> 01:11:27,440
are talking about uh you know segment

1647
01:11:27,440 --> 01:11:30,719
routing came uh with of course uh a few

1648
01:11:30,719 --> 01:11:33,840
concepts here and uh the goal was

1649
01:11:33,840 --> 01:11:35,440
simplicity meaning

1650
01:11:35,440 --> 01:11:37,120
uh you know they

1651
01:11:37,120 --> 01:11:39,440
brought in the concept of

1652
01:11:39,440 --> 01:11:42,719
uh simplifying the network uh you know

1653
01:11:42,719 --> 01:11:45,199
this is what sigma routing is about so

1654
01:11:45,199 --> 01:11:47,120
and and they did a great job in the

1655
01:11:47,120 --> 01:11:49,600
underlay uh by eliminating protocols

1656
01:11:49,600 --> 01:11:53,920
like ldp for example uh in the underlay

1657
01:11:53,920 --> 01:11:54,640
uh

1658
01:11:54,640 --> 01:11:57,360
the srgb concept uh globalizing the

1659
01:11:57,360 --> 01:12:00,080
label space across the network so all

1660
01:12:00,080 --> 01:12:02,000
those concepts have been applied to the

1661
01:12:02,000 --> 01:12:03,679
underlay and simplifies the underlay

1662
01:12:03,679 --> 01:12:05,760
control plane greatly

1663
01:12:05,760 --> 01:12:08,320
and the question here uh can we use that

1664
01:12:08,320 --> 01:12:09,840
as well

1665
01:12:09,840 --> 01:12:11,440
to simplify

1666
01:12:11,440 --> 01:12:14,080
the control plane for the service and we

1667
01:12:14,080 --> 01:12:16,719
are talking about elan for example here

1668
01:12:16,719 --> 01:12:20,000
so going to the next slide

1669
01:12:20,000 --> 01:12:24,800
so uh so here we are uh just comparing

1670
01:12:24,800 --> 01:12:28,159
or going back to history here and uh

1671
01:12:28,159 --> 01:12:31,040
looking at uh sudowar that was a

1672
01:12:31,040 --> 01:12:32,239
building block

1673
01:12:32,239 --> 01:12:34,239
for um

1674
01:12:34,239 --> 01:12:38,960
elan services when applied uh to uh

1675
01:12:38,960 --> 01:12:41,040
uh you know to a service provider

1676
01:12:41,040 --> 01:12:42,080
network

1677
01:12:42,080 --> 01:12:45,280
uh so it was the building block uh that

1678
01:12:45,280 --> 01:12:48,560
we built over the ipm pls network uh and

1679
01:12:48,560 --> 01:12:51,360
historically the sudowart context

1680
01:12:51,360 --> 01:12:53,199
you know was presenting two pieces of

1681
01:12:53,199 --> 01:12:54,640
information

1682
01:12:54,640 --> 01:12:56,719
uh was presenting what service we are

1683
01:12:56,719 --> 01:12:59,760
talking about and what end point too

1684
01:12:59,760 --> 01:13:02,080
those two pieces are important uh

1685
01:13:02,080 --> 01:13:04,000
especially if you are going to be doing

1686
01:13:04,000 --> 01:13:06,480
data clean learning over a sudoa

1687
01:13:06,480 --> 01:13:08,640
um so uh

1688
01:13:08,640 --> 01:13:09,600
you know

1689
01:13:09,600 --> 01:13:12,800
the node uh that hosts the sudoa here

1690
01:13:12,800 --> 01:13:14,640
need to know from where the packets are

1691
01:13:14,640 --> 01:13:17,199
coming so the endpoint is important and

1692
01:13:17,199 --> 01:13:19,679
as well need to know what service uh uh

1693
01:13:19,679 --> 01:13:22,080
is in question here to be able to use a

1694
01:13:22,080 --> 01:13:25,040
proper data plane mclean uh but this uh

1695
01:13:25,040 --> 01:13:27,840
uh combining those two uh

1696
01:13:27,840 --> 01:13:30,400
piece of information in one context uh

1697
01:13:30,400 --> 01:13:33,040
led to a skill issue uh so for example

1698
01:13:33,040 --> 01:13:35,120
if you have ten thousand services i

1699
01:13:35,120 --> 01:13:37,520
configured on a hundred node uh then

1700
01:13:37,520 --> 01:13:39,679
each node would need to maintain one

1701
01:13:39,679 --> 01:13:42,480
million uh sudwar context or one million

1702
01:13:42,480 --> 01:13:44,880
service id for those uh for all the end

1703
01:13:44,880 --> 01:13:45,840
points

1704
01:13:45,840 --> 01:13:48,400
in all uh 10 000 servers

1705
01:13:48,400 --> 01:13:51,199
uh as well sudowar really uh didn't

1706
01:13:51,199 --> 01:13:54,080
support uh like uh

1707
01:13:54,080 --> 01:13:55,920
legacy layer two network any active

1708
01:13:55,920 --> 01:13:58,239
active redundancy

1709
01:13:58,239 --> 01:14:01,199
so what we are proposing here uh

1710
01:14:01,199 --> 01:14:03,920
you know as a way to improve the scale

1711
01:14:03,920 --> 01:14:06,560
for that old technology or or previous

1712
01:14:06,560 --> 01:14:07,920
technology

1713
01:14:07,920 --> 01:14:11,120
uh is to split uh the two pieces of

1714
01:14:11,120 --> 01:14:13,920
information into two contexts one

1715
01:14:13,920 --> 01:14:16,400
presenting the service

1716
01:14:16,400 --> 01:14:17,920
and here we are talking more about data

1717
01:14:17,920 --> 01:14:20,400
plane one presenting the service and one

1718
01:14:20,400 --> 01:14:22,640
presenting the endpoint so so if you

1719
01:14:22,640 --> 01:14:24,560
imagine and we'll go more in details in

1720
01:14:24,560 --> 01:14:26,960
the next slides uh that

1721
01:14:26,960 --> 01:14:29,280
we split those two pieces of information

1722
01:14:29,280 --> 01:14:32,000
into two sets in a set list

1723
01:14:32,000 --> 01:14:35,199
uh where uh one will present uh from

1724
01:14:35,199 --> 01:14:36,880
where the packet is coming presents the

1725
01:14:36,880 --> 01:14:39,760
end point and one presents service then

1726
01:14:39,760 --> 01:14:41,679
uh your skill will look quite different

1727
01:14:41,679 --> 01:14:42,480
right

1728
01:14:42,480 --> 01:14:45,440
uh you would have

1729
01:14:45,440 --> 01:14:46,159
uh

1730
01:14:46,159 --> 01:14:49,199
you know only uh 10 000 sets to present

1731
01:14:49,199 --> 01:14:50,320
uh

1732
01:14:50,320 --> 01:14:53,199
services and the end point givens that's

1733
01:14:53,199 --> 01:14:55,440
encoded underneath the service in a

1734
01:14:55,440 --> 01:14:58,640
header uh then uh you know you won't

1735
01:14:58,640 --> 01:15:00,400
have a sk the same skill problems that

1736
01:15:00,400 --> 01:15:02,320
you have with sudoa

1737
01:15:02,320 --> 01:15:03,760
as well uh

1738
01:15:03,760 --> 01:15:06,320
if we leverage more uh of the segment

1739
01:15:06,320 --> 01:15:07,440
routing

1740
01:15:07,440 --> 01:15:08,480
uh

1741
01:15:08,480 --> 01:15:10,719
you know concepts here especially as any

1742
01:15:10,719 --> 01:15:13,199
cast said we can introduce the active

1743
01:15:13,199 --> 01:15:16,080
active redundancy to that layer to world

1744
01:15:16,080 --> 01:15:19,360
or that service itself

1745
01:15:19,520 --> 01:15:22,000
so this is an illustration on how we can

1746
01:15:22,000 --> 01:15:23,280
achieve that

1747
01:15:23,280 --> 01:15:27,920
uh as well in control plane so uh

1748
01:15:27,920 --> 01:15:30,080
so we are talking about uh you know how

1749
01:15:30,080 --> 01:15:33,920
are we gonna be uh in a given domain uh

1750
01:15:33,920 --> 01:15:36,960
inside service provider network uh you

1751
01:15:36,960 --> 01:15:38,880
know learn

1752
01:15:38,880 --> 01:15:40,560
dynamically

1753
01:15:40,560 --> 01:15:43,679
about what services are configured where

1754
01:15:43,679 --> 01:15:46,480
right so what we are proposing here is

1755
01:15:46,480 --> 01:15:50,960
that if each node would uh

1756
01:15:50,960 --> 01:15:54,080
advertise to all other nodes uh the

1757
01:15:54,080 --> 01:15:58,239
services configured wiz as a bit mask of

1758
01:15:58,239 --> 01:16:00,960
all the said offsets let's say

1759
01:16:00,960 --> 01:16:02,800
uh that

1760
01:16:02,800 --> 01:16:04,800
it is configured with

1761
01:16:04,800 --> 01:16:05,760
then

1762
01:16:05,760 --> 01:16:08,800
we can really decrease significantly the

1763
01:16:08,800 --> 01:16:11,120
amount of signaling in

1764
01:16:11,120 --> 01:16:12,800
the network compared to any previous

1765
01:16:12,800 --> 01:16:15,360
technology because if you imagine the 10

1766
01:16:15,360 --> 01:16:16,960
000 service we talked about in the

1767
01:16:16,960 --> 01:16:19,360
example and we are trying to advertise

1768
01:16:19,360 --> 01:16:21,840
your service uh across the network and

1769
01:16:21,840 --> 01:16:24,400
each service is presented by a bit

1770
01:16:24,400 --> 01:16:26,800
uh in a signaling message you could have

1771
01:16:26,800 --> 01:16:28,400
only one message

1772
01:16:28,400 --> 01:16:31,120
uh one control plane message by which

1773
01:16:31,120 --> 01:16:33,360
one node can teach all nodes in the

1774
01:16:33,360 --> 01:16:35,280
network about what services it's

1775
01:16:35,280 --> 01:16:36,719
configured with

1776
01:16:36,719 --> 01:16:37,679
uh

1777
01:16:37,679 --> 01:16:38,480
so

1778
01:16:38,480 --> 01:16:40,719
you know that's of course a significant

1779
01:16:40,719 --> 01:16:42,159
uh

1780
01:16:42,159 --> 01:16:44,560
decrease in terms of number of control

1781
01:16:44,560 --> 01:16:46,719
pane messages that can be exchanged

1782
01:16:46,719 --> 01:16:48,640
so are talking about you know instead of

1783
01:16:48,640 --> 01:16:51,120
a millions who are signaling uh done by

1784
01:16:51,120 --> 01:16:53,520
a given node uh it's only one message

1785
01:16:53,520 --> 01:16:55,760
that's being sent so so one message

1786
01:16:55,760 --> 01:16:57,600
compared to a million right

1787
01:16:57,600 --> 01:17:00,000
uh so of course upon receiving that

1788
01:17:00,000 --> 01:17:02,000
message that being sent by onenote to

1789
01:17:02,000 --> 01:17:03,760
all other nodes like as shown here note

1790
01:17:03,760 --> 01:17:06,320
5 for example is sending what service is

1791
01:17:06,320 --> 01:17:08,960
configured waste to all other nodes uh

1792
01:17:08,960 --> 01:17:12,159
then all other nodes can as well figure

1793
01:17:12,159 --> 01:17:13,440
out

1794
01:17:13,440 --> 01:17:15,280
you know

1795
01:17:15,280 --> 01:17:16,480
a

1796
01:17:16,480 --> 01:17:17,840
membership

1797
01:17:17,840 --> 01:17:20,560
uh of nodes in a given service uh so so

1798
01:17:20,560 --> 01:17:22,400
typically in layer 2 network you need to

1799
01:17:22,400 --> 01:17:23,199
know

1800
01:17:23,199 --> 01:17:26,320
uh what are the members

1801
01:17:26,320 --> 01:17:27,840
that uh

1802
01:17:27,840 --> 01:17:30,080
you know that correspond to the service

1803
01:17:30,080 --> 01:17:31,520
uh

1804
01:17:31,520 --> 01:17:33,679
for function like flooding for example

1805
01:17:33,679 --> 01:17:35,360
because layer 2 is all

1806
01:17:35,360 --> 01:17:37,360
especially with data plane mclearning is

1807
01:17:37,360 --> 01:17:40,800
all about flood and learn so uh so when

1808
01:17:40,800 --> 01:17:42,560
you flood you need to know who are the

1809
01:17:42,560 --> 01:17:45,040
members of a given layer 2 service

1810
01:17:45,040 --> 01:17:46,800
to be able to flood

1811
01:17:46,800 --> 01:17:49,440
unknown unicast or broadcast layer 2

1812
01:17:49,440 --> 01:17:51,280
packet to it

1813
01:17:51,280 --> 01:17:53,519
so

1814
01:17:53,920 --> 01:17:55,920
so now you can learn the membership by

1815
01:17:55,920 --> 01:17:58,000
simply listening figuring out from the

1816
01:17:58,000 --> 01:17:59,920
message cent

1817
01:17:59,920 --> 01:18:02,320
on all the services with one control

1818
01:18:02,320 --> 01:18:04,080
plane message you can figure out for all

1819
01:18:04,080 --> 01:18:06,719
the services what are the membership

1820
01:18:06,719 --> 01:18:08,800
uh uh you know when you receive that

1821
01:18:08,800 --> 01:18:13,239
message from other nodes for example

1822
01:18:13,440 --> 01:18:15,199
along with that

1823
01:18:15,199 --> 01:18:17,520
we are proposing here as well

1824
01:18:17,520 --> 01:18:20,719
advertising a broadcast note

1825
01:18:20,719 --> 01:18:23,840
so the broadcast note said uh is

1826
01:18:23,840 --> 01:18:26,880
is you know present a node as well and

1827
01:18:26,880 --> 01:18:28,560
can tell the node

1828
01:18:28,560 --> 01:18:30,960
uh that the received packet is a

1829
01:18:30,960 --> 01:18:32,960
broadcast pack meaning it's a flooded

1830
01:18:32,960 --> 01:18:35,120
packet rather than a unicast package the

1831
01:18:35,120 --> 01:18:37,199
mood itself so the broadcast note set

1832
01:18:37,199 --> 01:18:40,480
can be sought as as well uh

1833
01:18:40,480 --> 01:18:44,000
a note said uh but of certain nature

1834
01:18:44,000 --> 01:18:44,800
right

1835
01:18:44,800 --> 01:18:45,760
okay

1836
01:18:45,760 --> 01:18:46,719
uh

1837
01:18:46,719 --> 01:18:49,120
uh you know that will tell the node

1838
01:18:49,120 --> 01:18:50,800
whether it's receiving broadcast back it

1839
01:18:50,800 --> 01:18:52,719
or not right so

1840
01:18:52,719 --> 01:18:54,640
uh here we are talking initially i think

1841
01:18:54,640 --> 01:18:55,440
i think

1842
01:18:55,440 --> 01:18:58,000
the purpose of the initial presentation

1843
01:18:58,000 --> 01:19:00,880
here is to introduce the concept and and

1844
01:19:00,880 --> 01:19:03,120
explain how segment routing can

1845
01:19:03,120 --> 01:19:06,480
significantly uh uh you know improve in

1846
01:19:06,480 --> 01:19:09,840
control plane for the service or

1847
01:19:09,840 --> 01:19:11,440
significantly reduce the number of

1848
01:19:11,440 --> 01:19:13,760
control plane messages that

1849
01:19:13,760 --> 01:19:16,800
we have with previous technology

1850
01:19:16,800 --> 01:19:18,960
and as well improve as well as the data

1851
01:19:18,960 --> 01:19:22,719
plane via the use of a concept like

1852
01:19:22,719 --> 01:19:26,400
srgb or segment routing global block

1853
01:19:26,400 --> 01:19:27,280
uh

1854
01:19:27,280 --> 01:19:29,280
the next slide here is talking about as

1855
01:19:29,280 --> 01:19:31,760
well uh introducing active active

1856
01:19:31,760 --> 01:19:34,080
redundancy uh to the old sudoa

1857
01:19:34,080 --> 01:19:36,640
technologies that didn't allow that and

1858
01:19:36,640 --> 01:19:39,600
in here we are talking about using any

1859
01:19:39,600 --> 01:19:40,960
asset

1860
01:19:40,960 --> 01:19:42,159
uh

1861
01:19:42,159 --> 01:19:43,440
you know

1862
01:19:43,440 --> 01:19:45,520
i mentioned before that when we build

1863
01:19:45,520 --> 01:19:47,120
the said list

1864
01:19:47,120 --> 01:19:49,120
uh we can have

1865
01:19:49,120 --> 01:19:52,080
uh you know the context of what we call

1866
01:19:52,080 --> 01:19:53,840
the sudwar in the past

1867
01:19:53,840 --> 01:19:56,880
presented by two

1868
01:19:56,880 --> 01:19:59,920
uh two sets so as you see here we have a

1869
01:19:59,920 --> 01:20:02,480
service set and then underneath that we

1870
01:20:02,480 --> 01:20:04,080
can have

1871
01:20:04,080 --> 01:20:05,840
what we call a source set

1872
01:20:05,840 --> 01:20:08,320
so the source said here could be zenut

1873
01:20:08,320 --> 01:20:10,560
said if this is a single home for

1874
01:20:10,560 --> 01:20:13,600
example uh

1875
01:20:13,920 --> 01:20:16,880
you know single home

1876
01:20:16,880 --> 01:20:20,639
host connected uh to the provider edge

1877
01:20:20,639 --> 01:20:23,600
uh or could be in any case said if this

1878
01:20:23,600 --> 01:20:26,400
is a multi-home device connected to the

1879
01:20:26,400 --> 01:20:27,840
provider edge for which you are

1880
01:20:27,840 --> 01:20:30,840
providing of course the layer two serves

1881
01:20:30,840 --> 01:20:34,159
so uh if

1882
01:20:34,159 --> 01:20:37,280
as any guest said here is used then all

1883
01:20:37,280 --> 01:20:40,239
data plane mac learning by all nodes is

1884
01:20:40,239 --> 01:20:41,600
going to be

1885
01:20:41,600 --> 01:20:44,239
against the anycast set so any return

1886
01:20:44,239 --> 01:20:45,679
traffic

1887
01:20:45,679 --> 01:20:47,040
toward

1888
01:20:47,040 --> 01:20:48,719
that node

1889
01:20:48,719 --> 01:20:52,639
the provider edges from which we learned

1890
01:20:52,960 --> 01:20:54,719
the source max for example for the

1891
01:20:54,719 --> 01:20:56,880
multi-home service

1892
01:20:56,880 --> 01:20:58,239
can

1893
01:20:58,239 --> 01:20:59,280
can be

1894
01:20:59,280 --> 01:21:02,000
ecmp or multi-passed here

1895
01:21:02,000 --> 01:21:03,760
uh to uh

1896
01:21:03,760 --> 01:21:06,400
the devices most devices shown here in

1897
01:21:06,400 --> 01:21:07,120
the

1898
01:21:07,120 --> 01:21:09,199
picture for example five and six

1899
01:21:09,199 --> 01:21:10,880
uh who are connected to the multiple

1900
01:21:10,880 --> 01:21:12,159
servers right

1901
01:21:12,159 --> 01:21:15,679
so uh so multi passing and uh and even

1902
01:21:15,679 --> 01:21:18,719
aliasing can uh can be applied this way

1903
01:21:18,719 --> 01:21:20,960
uh

1904
01:21:21,600 --> 01:21:25,840
uh and uh and and the idea here is uh

1905
01:21:25,840 --> 01:21:28,560
any cast uh is already available in

1906
01:21:28,560 --> 01:21:30,560
segment routing so so we are simply

1907
01:21:30,560 --> 01:21:31,679
using

1908
01:21:31,679 --> 01:21:35,040
uh what what's available in the underlay

1909
01:21:35,040 --> 01:21:36,960
to provide the redundancy and provides

1910
01:21:36,960 --> 01:21:41,040
the ecmp and the multi-passing right

1911
01:21:41,040 --> 01:21:45,280
leah as well is uh uh you know is

1912
01:21:45,280 --> 01:21:47,040
it's important to do what we call stuff

1913
01:21:47,040 --> 01:21:49,600
like split horizon so if a packet is

1914
01:21:49,600 --> 01:21:51,920
flooded for example to the network from

1915
01:21:51,920 --> 01:21:53,760
a multi-home uh

1916
01:21:53,760 --> 01:21:57,040
device we don't want to create a loop so

1917
01:21:57,040 --> 01:21:59,040
so we need to make sure that when it

1918
01:21:59,040 --> 01:22:00,639
arrived to another device connected to

1919
01:22:00,639 --> 01:22:02,960
the same multi-home site uh is that that

1920
01:22:02,960 --> 01:22:05,199
packet will not be looping back

1921
01:22:05,199 --> 01:22:08,719
and and that easily as well can be done

1922
01:22:08,719 --> 01:22:11,920
because uh a note 6

1923
01:22:11,920 --> 01:22:15,280
co-share or co-own uh any cassettes so

1924
01:22:15,280 --> 01:22:17,040
it's receiving the packet source from

1925
01:22:17,040 --> 01:22:20,000
anycast said it will know uh how to do

1926
01:22:20,000 --> 01:22:22,400
the proper split horizon here

1927
01:22:22,400 --> 01:22:23,440
um

1928
01:22:23,440 --> 01:22:25,760
you know this is going more into some

1929
01:22:25,760 --> 01:22:27,600
more details about data plane mac

1930
01:22:27,600 --> 01:22:29,920
learning and how can we do that how can

1931
01:22:29,920 --> 01:22:32,159
we learn against the source set

1932
01:22:32,159 --> 01:22:35,760
for you know the mac addresses

1933
01:22:35,760 --> 01:22:38,639
source mac received in data traffic

1934
01:22:38,639 --> 01:22:41,440
from single home uh as shown here from

1935
01:22:41,440 --> 01:22:43,120
note 3 for example or even from

1936
01:22:43,120 --> 01:22:44,960
multi-home as we're showing in the

1937
01:22:44,960 --> 01:22:47,440
previous slide

1938
01:22:47,440 --> 01:22:50,719
so so that's as well

1939
01:22:50,719 --> 01:22:52,960
is available uh

1940
01:22:52,960 --> 01:22:54,800
in the set list and

1941
01:22:54,800 --> 01:22:56,719
we can learn easily uh for the given

1942
01:22:56,719 --> 01:22:59,199
service against the source said the mac

1943
01:22:59,199 --> 01:23:00,400
addresses

1944
01:23:00,400 --> 01:23:01,440
uh

1945
01:23:01,440 --> 01:23:02,639
you know

1946
01:23:02,639 --> 01:23:04,239
for a given service

1947
01:23:04,239 --> 01:23:07,679
so uh going to the next slide

1948
01:23:07,679 --> 01:23:09,360
i mean this is more going more into

1949
01:23:09,360 --> 01:23:11,760
details of how can we do some arp

1950
01:23:11,760 --> 01:23:14,639
suppression and in here we are talking

1951
01:23:14,639 --> 01:23:15,679
about

1952
01:23:15,679 --> 01:23:18,560
uh flooding arc replies as well so all

1953
01:23:18,560 --> 01:23:22,000
nodes can learn uh as i p mcbinding yeah

1954
01:23:22,000 --> 01:23:24,159
actually maybe a little history about

1955
01:23:24,159 --> 01:23:25,520
arc suppression

1956
01:23:25,520 --> 01:23:28,000
arc suppression is calling for uh you

1957
01:23:28,000 --> 01:23:30,239
know decreasing the flooding of our

1958
01:23:30,239 --> 01:23:32,080
packet across the network

1959
01:23:32,080 --> 01:23:34,560
and the way to do that is uh

1960
01:23:34,560 --> 01:23:36,880
by doing uh the arc suppression which

1961
01:23:36,880 --> 01:23:39,840
means that a node can respond to an arp

1962
01:23:39,840 --> 01:23:40,880
request

1963
01:23:40,880 --> 01:23:44,239
uh uh you know on behalf of the

1964
01:23:44,239 --> 01:23:47,520
destination so so here the pe router can

1965
01:23:47,520 --> 01:23:48,719
respond

1966
01:23:48,719 --> 01:23:51,360
to an arc request

1967
01:23:51,360 --> 01:23:53,280
on behalf of the ultimate destination

1968
01:23:53,280 --> 01:23:56,480
and the way it does that by cleaning our

1969
01:23:56,480 --> 01:23:58,480
requests and replies to know about the

1970
01:23:58,480 --> 01:23:59,920
ip

1971
01:23:59,920 --> 01:24:02,719
mag binding and here

1972
01:24:02,719 --> 01:24:04,639
of course arp requests are always

1973
01:24:04,639 --> 01:24:07,440
flooded but our replies aren't and and

1974
01:24:07,440 --> 01:24:08,480
in here

1975
01:24:08,480 --> 01:24:11,600
we are saying if you floods are replies

1976
01:24:11,600 --> 01:24:12,639
then

1977
01:24:12,639 --> 01:24:16,560
the cleaning of ip mining can happen

1978
01:24:16,560 --> 01:24:18,719
and nodes can learn of course about that

1979
01:24:18,719 --> 01:24:20,000
um

1980
01:24:20,000 --> 01:24:22,719
here again this is uh as well a very

1981
01:24:22,719 --> 01:24:24,560
important point that

1982
01:24:24,560 --> 01:24:26,400
that we will uh

1983
01:24:26,400 --> 01:24:30,880
mention here quickly uh is uh

1984
01:24:30,880 --> 01:24:33,920
is the idea of convergence and uh you

1985
01:24:33,920 --> 01:24:36,639
know if for example here we have note 5

1986
01:24:36,639 --> 01:24:37,840
and note 6

1987
01:24:37,840 --> 01:24:40,159
connected to the multi-home device and

1988
01:24:40,159 --> 01:24:42,400
uh if one of the nodes lose connectivity

1989
01:24:42,400 --> 01:24:45,360
to that multi-home device uh what we can

1990
01:24:45,360 --> 01:24:47,360
do so uh

1991
01:24:47,360 --> 01:24:49,760
as as you mentioned uh

1992
01:24:49,760 --> 01:24:52,239
uh we are using an anycast said and

1993
01:24:52,239 --> 01:24:53,920
maybe i should stress on that point as

1994
01:24:53,920 --> 01:24:56,400
well more uh pair ethernet segment or

1995
01:24:56,400 --> 01:24:58,880
paired multi homies and that's it so if

1996
01:24:58,880 --> 01:25:00,480
one node attached to the multi-homies on

1997
01:25:00,480 --> 01:25:01,679
that segment

1998
01:25:01,679 --> 01:25:04,000
lose connectivity to that uh

1999
01:25:04,000 --> 01:25:06,159
multi-home eastern that segment then it

2000
01:25:06,159 --> 01:25:07,840
can withdraw

2001
01:25:07,840 --> 01:25:08,719
okay

2002
01:25:08,719 --> 01:25:12,719
uh as uh any cast said associated with

2003
01:25:12,719 --> 01:25:13,920
that segment

2004
01:25:13,920 --> 01:25:15,120
and

2005
01:25:15,120 --> 01:25:16,800
doing that withdrawal in the underlay

2006
01:25:16,800 --> 01:25:18,320
network will simply give us the

2007
01:25:18,320 --> 01:25:20,719
conversions right so we we really don't

2008
01:25:20,719 --> 01:25:22,800
need to do much more right i think

2009
01:25:22,800 --> 01:25:26,159
what's presented here uh is uh in the

2010
01:25:26,159 --> 01:25:29,199
entrance before withdrawing if note 5

2011
01:25:29,199 --> 01:25:31,920
would detect that the length uh uh you

2012
01:25:31,920 --> 01:25:33,040
know or the

2013
01:25:33,040 --> 01:25:34,560
interface connected the multi-home

2014
01:25:34,560 --> 01:25:35,520
segment

2015
01:25:35,520 --> 01:25:37,520
uh is uh

2016
01:25:37,520 --> 01:25:40,719
or multi-home device of course right

2017
01:25:40,719 --> 01:25:44,320
is down then uh it can in the interim uh

2018
01:25:44,320 --> 01:25:46,639
redirect packet to other nodes connected

2019
01:25:46,639 --> 01:25:49,679
to that multi-home device uh until uh

2020
01:25:49,679 --> 01:25:53,199
the network converge and uh and and and

2021
01:25:53,199 --> 01:25:57,599
things uh going back again right

2022
01:25:57,760 --> 01:26:00,639
uh so uh again uh we already met talked

2023
01:26:00,639 --> 01:26:05,040
about that the acmp multi-passing right

2024
01:26:05,199 --> 01:26:06,400
now

2025
01:26:06,400 --> 01:26:07,280
yes

2026
01:26:07,280 --> 01:26:10,960
i'm concluding i'm concluding uh so

2027
01:26:10,960 --> 01:26:12,719
finally the two takeaways that you want

2028
01:26:12,719 --> 01:26:16,880
to take from this uh is uh the easter

2029
01:26:16,880 --> 01:26:18,080
two service we are talking about

2030
01:26:18,080 --> 01:26:21,040
presenting it by global said in uh each

2031
01:26:21,040 --> 01:26:23,600
domain and that will decrease

2032
01:26:23,600 --> 01:26:25,520
uh massively

2033
01:26:25,520 --> 01:26:27,760
uh uh you know

2034
01:26:27,760 --> 01:26:29,600
the number of state we can keep in data

2035
01:26:29,600 --> 01:26:32,480
plane and uh will decrease drastically

2036
01:26:32,480 --> 01:26:33,440
as well

2037
01:26:33,440 --> 01:26:36,159
uh as a control plane signaling uh

2038
01:26:36,159 --> 01:26:37,280
needed

2039
01:26:37,280 --> 01:26:39,120
and the other takeaway which is

2040
01:26:39,120 --> 01:26:42,080
extremely is as important uh is there is

2041
01:26:42,080 --> 01:26:44,080
no need really for doing any service

2042
01:26:44,080 --> 01:26:46,239
convergence right you know like

2043
01:26:46,239 --> 01:26:47,440
typically

2044
01:26:47,440 --> 01:26:49,760
as overlay layer we always talk about

2045
01:26:49,760 --> 01:26:51,920
conversions overlay converging overlay

2046
01:26:51,920 --> 01:26:54,000
and defining mechanism for convergence

2047
01:26:54,000 --> 01:26:54,960
overlay

2048
01:26:54,960 --> 01:26:57,199
by the use of any gas said uh is a

2049
01:26:57,199 --> 01:26:58,880
problem become an underlay convergence

2050
01:26:58,880 --> 01:27:01,360
and there is no need to do any overlay

2051
01:27:01,360 --> 01:27:04,560
conversions right so that's a key

2052
01:27:04,560 --> 01:27:07,040
takeaway finally the last slide is

2053
01:27:07,040 --> 01:27:10,080
talking about a benefit in general um

2054
01:27:10,080 --> 01:27:12,560
you can go over it uh as the slides are

2055
01:27:12,560 --> 01:27:15,840
uploaded uh and the draft is available

2056
01:27:15,840 --> 01:27:19,360
too and with that i can conclude

2057
01:27:19,360 --> 01:27:21,600
okay i'm going to close the queue at

2058
01:27:21,600 --> 01:27:23,199
this point but i do want to let the

2059
01:27:23,199 --> 01:27:25,360
three people who are there comment

2060
01:27:25,360 --> 01:27:28,000
and ask questions and i do recommend you

2061
01:27:28,000 --> 01:27:29,920
go over to the chat and look at some of

2062
01:27:29,920 --> 01:27:31,199
the questions that have been posted

2063
01:27:31,199 --> 01:27:33,760
there and respond there and keep them in

2064
01:27:33,760 --> 01:27:35,760
mind for mailing list discussions

2065
01:27:35,760 --> 01:27:38,320
patrice

2066
01:27:44,719 --> 01:27:45,840
patrice

2067
01:27:45,840 --> 01:27:48,320
you're up

2068
01:27:52,719 --> 01:27:54,880
um please unmute i'm not hearing

2069
01:27:54,880 --> 01:27:57,880
anything

2070
01:28:02,719 --> 01:28:04,080
okay

2071
01:28:04,080 --> 01:28:05,840
patrice will try once again when we get

2072
01:28:05,840 --> 01:28:09,040
to the end of the queue eric

2073
01:28:09,199 --> 01:28:11,280
yes thank you joellen thank you sami for

2074
01:28:11,280 --> 01:28:13,440
the presentation

2075
01:28:13,440 --> 01:28:16,159
just one thing the draft and your slides

2076
01:28:16,159 --> 01:28:19,120
i got a section about ipv4 arp

2077
01:28:19,120 --> 01:28:22,639
and i see nothing about ipv6 and dp

2078
01:28:22,639 --> 01:28:25,360
is it the intent to add ipv6 support

2079
01:28:25,360 --> 01:28:26,639
later

2080
01:28:26,639 --> 01:28:28,639
yeah of course of course uh good

2081
01:28:28,639 --> 01:28:31,760
question eric yeah uh definitely uh you

2082
01:28:31,760 --> 01:28:33,440
know the use of network function and

2083
01:28:33,440 --> 01:28:36,960
srv6 uh is uh is and i think we the

2084
01:28:36,960 --> 01:28:39,360
purpose eric again is just to introduce

2085
01:28:39,360 --> 01:28:41,600
the concept but of course the mechanics

2086
01:28:41,600 --> 01:28:43,840
and the the more details even the

2087
01:28:43,840 --> 01:28:47,360
signaling aspect will come later

2088
01:28:47,360 --> 01:28:48,880
okay thank you sami

2089
01:28:48,880 --> 01:28:50,719
zayn okay

2090
01:28:50,719 --> 01:28:53,280
ma matthew terrek i said i closed was

2091
01:28:53,280 --> 01:28:54,880
closing the queue

2092
01:28:54,880 --> 01:28:57,520
so

2093
01:28:57,520 --> 01:29:00,080
matthew your turn yeah hi thanks thank

2094
01:29:00,080 --> 01:29:02,000
you um so sami i just got a quick

2095
01:29:02,000 --> 01:29:03,440
question about the relationship of this

2096
01:29:03,440 --> 01:29:05,920
draft to one you've had in bess

2097
01:29:05,920 --> 01:29:07,040
um

2098
01:29:07,040 --> 01:29:11,120
about a year ago it was very similar and

2099
01:29:11,120 --> 01:29:13,120
so

2100
01:29:13,120 --> 01:29:15,760
yeah sure yeah go ahead please

2101
01:29:15,760 --> 01:29:17,360
could you just clarify what your

2102
01:29:17,360 --> 01:29:18,639
intention is with the best draft because

2103
01:29:18,639 --> 01:29:21,520
i would have thought that this

2104
01:29:21,520 --> 01:29:23,600
given this relates to bgp signal

2105
01:29:23,600 --> 01:29:27,040
services should really live in invest

2106
01:29:27,040 --> 01:29:29,520
yeah yeah definitely i think the idea

2107
01:29:29,520 --> 01:29:33,760
here uh uh matthew uh is uh you know we

2108
01:29:33,760 --> 01:29:35,360
thought that the concept is more a

2109
01:29:35,360 --> 01:29:37,280
segment routing concept so so this is

2110
01:29:37,280 --> 01:29:39,600
why uh we saw that the concept would

2111
01:29:39,600 --> 01:29:42,080
present uh here in spring but the

2112
01:29:42,080 --> 01:29:44,400
signaling aspect and the more details

2113
01:29:44,400 --> 01:29:46,159
about that will be presented invest for

2114
01:29:46,159 --> 01:29:48,639
sure right so so so we will update the

2115
01:29:48,639 --> 01:29:50,960
best draft more address the signaling

2116
01:29:50,960 --> 01:29:52,400
aspect and how

2117
01:29:52,400 --> 01:29:54,960
we can achieve that and here we discuss

2118
01:29:54,960 --> 01:29:57,120
most architecture in the concept

2119
01:29:57,120 --> 01:29:58,880
okay i'd encourage encourage you to

2120
01:29:58,880 --> 01:30:00,880
clarify that in the in the two drafts

2121
01:30:00,880 --> 01:30:02,080
because they look very similar at the

2122
01:30:02,080 --> 01:30:03,920
moment yeah yeah yeah definitely yeah

2123
01:30:03,920 --> 01:30:07,040
definitely a good point and yeah we will

2124
01:30:07,040 --> 01:30:09,440
will be updating the best draft to more

2125
01:30:09,440 --> 01:30:11,760
address the signaling and of course the

2126
01:30:11,760 --> 01:30:14,480
bgp signaling for services definitely

2127
01:30:14,480 --> 01:30:15,760
okay thanks

2128
01:30:15,760 --> 01:30:17,679
okay the spring chairs will coordinate

2129
01:30:17,679 --> 01:30:19,920
with the best chairs to make sure that

2130
01:30:19,920 --> 01:30:21,760
the right material is discussed in the

2131
01:30:21,760 --> 01:30:23,840
right working group

2132
01:30:23,840 --> 01:30:25,760
excellent patrice i'll give you one more

2133
01:30:25,760 --> 01:30:28,480
shot if you can speak can you hear me

2134
01:30:28,480 --> 01:30:30,239
can you hear me now there you are yes

2135
01:30:30,239 --> 01:30:32,239
please okay sorry

2136
01:30:32,239 --> 01:30:36,159
uh hey sami i hope you're doing well

2137
01:30:36,639 --> 01:30:38,239
i'm just saying comment and imagine

2138
01:30:38,239 --> 01:30:39,760
because i think i was first in the cube

2139
01:30:39,760 --> 01:30:41,440
so i had that comment but also is there

2140
01:30:41,440 --> 01:30:43,120
any difference with the two draft right

2141
01:30:43,120 --> 01:30:44,000
now

2142
01:30:44,000 --> 01:30:46,560
the one thing i know that you're doing

2143
01:30:46,560 --> 01:30:48,800
you're right you're right padres as i

2144
01:30:48,800 --> 01:30:51,280
mentioned to matthew uh you know there

2145
01:30:51,280 --> 01:30:52,880
is no difference between the two drafts

2146
01:30:52,880 --> 01:30:55,199
but uh but the plan is to

2147
01:30:55,199 --> 01:30:57,040
change the other draft to more address

2148
01:30:57,040 --> 01:30:59,360
the signaling aspect

2149
01:30:59,360 --> 01:31:00,159
okay

2150
01:31:00,159 --> 01:31:03,920
all right thank you thanks okay

2151
01:31:03,920 --> 01:31:04,960
thank you

2152
01:31:04,960 --> 01:31:07,760
sami if you will now stop sharing

2153
01:31:07,760 --> 01:31:10,159
and as soon as he does so zebo if you

2154
01:31:10,159 --> 01:31:11,120
would

2155
01:31:11,120 --> 01:31:12,320
then

2156
01:31:12,320 --> 01:31:14,560
step forward and start and select your

2157
01:31:14,560 --> 01:31:17,560
presentation

2158
01:31:18,310 --> 01:31:21,499
[Music]

2159
01:31:26,960 --> 01:31:28,480
shenpin are you presenting the

2160
01:31:28,480 --> 01:31:31,280
intent-based routing material

2161
01:31:31,280 --> 01:31:34,400
oh yes uh will i share the screen or

2162
01:31:34,400 --> 01:31:35,679
usually

2163
01:31:35,679 --> 01:31:37,760
you should use the share preloaded

2164
01:31:37,760 --> 01:31:41,719
slides button at the top

2165
01:31:44,960 --> 01:31:47,760
your screen is being started

2166
01:31:47,760 --> 01:31:49,760
as soon as it shows up i'll let you know

2167
01:31:49,760 --> 01:31:53,159
and mute myself

2168
01:31:59,920 --> 01:32:02,159
wha

2169
01:32:04,080 --> 01:32:07,719
okay you're up

2170
01:32:11,140 --> 01:32:14,310
[Music]

2171
01:32:18,560 --> 01:32:22,840
your permission again we'll wait

2172
01:32:28,320 --> 01:32:30,719
matthew you seem to be

2173
01:32:30,719 --> 01:32:35,040
unmuted please mute yourself thank you

2174
01:32:35,280 --> 01:32:36,159
uh

2175
01:32:36,159 --> 01:32:38,320
hello joey can you help me share my

2176
01:32:38,320 --> 01:32:40,159
slides

2177
01:32:40,159 --> 01:32:42,639
okay i'll i will do it

2178
01:32:42,639 --> 01:32:45,520
so let me use the intent based

2179
01:32:45,520 --> 01:32:49,920
let me make sure i find this right one

2180
01:32:49,920 --> 01:32:53,320
this one

2181
01:32:55,600 --> 01:32:57,520
share

2182
01:32:57,520 --> 01:32:59,679
okay

2183
01:32:59,679 --> 01:33:01,760
okay i can see the screen

2184
01:33:01,760 --> 01:33:03,199
location there it is

2185
01:33:03,199 --> 01:33:04,639
you'll have to tell me when to move to

2186
01:33:04,639 --> 01:33:06,480
the next slide

2187
01:33:06,480 --> 01:33:07,360
okay

2188
01:33:07,360 --> 01:33:09,360
uh this is jimmy from huawei and

2189
01:33:09,360 --> 01:33:11,520
trend-based routine okay here's the

2190
01:33:11,520 --> 01:33:14,400
introduction uh in fact the simplest i'm

2191
01:33:14,400 --> 01:33:15,440
sure

2192
01:33:15,440 --> 01:33:17,120
segment routine described the

2193
01:33:17,120 --> 01:33:19,760
requirement for end-to-end intent-based

2194
01:33:19,760 --> 01:33:22,639
past surveilling multiple domain

2195
01:33:22,639 --> 01:33:24,239
networks

2196
01:33:24,239 --> 01:33:27,360
in order to implement the seamless

2197
01:33:27,360 --> 01:33:30,320
segment routine uh the

2198
01:33:30,320 --> 01:33:31,840
sr pass

2199
01:33:31,840 --> 01:33:34,960
needed to set up according to the pair a

2200
01:33:34,960 --> 01:33:37,280
color and the point

2201
01:33:37,280 --> 01:33:40,400
it means more sr paths need to be

2202
01:33:40,400 --> 01:33:44,159
introduced in the multiple domain

2203
01:33:44,159 --> 01:33:46,880
in the multiple domain so this

2204
01:33:46,880 --> 01:33:50,159
means that not only to set up sr paths

2205
01:33:50,159 --> 01:33:53,360
for the poor endpoint but also set up

2206
01:33:53,360 --> 01:33:56,400
the sr paths per pair color and end

2207
01:33:56,400 --> 01:33:57,600
point

2208
01:33:57,600 --> 01:33:59,840
so this proposes a challenge on the

2209
01:33:59,840 --> 01:34:01,760
scalability

2210
01:34:01,760 --> 01:34:04,080
in order to reduce the scalability

2211
01:34:04,080 --> 01:34:06,800
challenge this document proposed the

2212
01:34:06,800 --> 01:34:09,679
intent-based routine mechanism

2213
01:34:09,679 --> 01:34:12,080
through the mechanism the intended

2214
01:34:12,080 --> 01:34:14,480
information can be carried in the data

2215
01:34:14,480 --> 01:34:15,520
plane

2216
01:34:15,520 --> 01:34:18,159
and the network node can steer the

2217
01:34:18,159 --> 01:34:20,960
package into the sr policy to satisfy

2218
01:34:20,960 --> 01:34:23,360
the service requirement

2219
01:34:23,360 --> 01:34:26,239
so this means need in order to set up

2220
01:34:26,239 --> 01:34:28,800
the under to underpass

2221
01:34:28,800 --> 01:34:30,159
sr pass

2222
01:34:30,159 --> 01:34:31,520
prepare

2223
01:34:31,520 --> 01:34:34,320
uh so that's

2224
01:34:34,320 --> 01:34:37,520
not only to the severe in the package

2225
01:34:37,520 --> 01:34:39,920
into the sr policy according to the

2226
01:34:39,920 --> 01:34:41,840
intent-based routine

2227
01:34:41,840 --> 01:34:44,239
the mechanism can also be used to

2228
01:34:44,239 --> 01:34:46,960
steering the traffic into the

2229
01:34:46,960 --> 01:34:49,440
underlying network slicing

2230
01:34:49,440 --> 01:34:52,639
to meet the specific intent and also

2231
01:34:52,639 --> 01:34:55,199
enforce the policy for other intent such

2232
01:34:55,199 --> 01:34:57,119
as the network environment and their

2233
01:34:57,119 --> 01:35:01,839
security etc okay next slice

2234
01:35:02,159 --> 01:35:05,440
okay so here this is the first

2235
01:35:05,440 --> 01:35:07,119
page of the introduction about

2236
01:35:07,119 --> 01:35:09,440
intent-based routine so first

2237
01:35:09,440 --> 01:35:11,360
this is the true concept that's the

2238
01:35:11,360 --> 01:35:12,320
color

2239
01:35:12,320 --> 01:35:14,719
so there's a color is defined in the

2240
01:35:14,719 --> 01:35:18,239
segment routine uh policy uh so that's

2241
01:35:18,239 --> 01:35:21,520
the the 32-bit numeric value that

2242
01:35:21,520 --> 01:35:24,639
associates the sr policy uh with the

2243
01:35:24,639 --> 01:35:28,159
entrance so that means for example the

2244
01:35:28,159 --> 01:35:30,719
intent to use the low intensity low

2245
01:35:30,719 --> 01:35:33,920
latency et cetera also means this color

2246
01:35:33,920 --> 01:35:37,119
can be associated as a sr policy user

2247
01:35:37,119 --> 01:35:38,480
control plane

2248
01:35:38,480 --> 01:35:41,600
uh the intent here so that's the the new

2249
01:35:41,600 --> 01:35:42,400
concept

2250
01:35:42,400 --> 01:35:45,600
the this intent-based routine mechanism

2251
01:35:45,600 --> 01:35:48,000
neutral introduce the concept of the

2252
01:35:48,000 --> 01:35:49,280
intent

2253
01:35:49,280 --> 01:35:52,400
this means the intent information which

2254
01:35:52,400 --> 01:35:55,840
is which is carried in the data plane

2255
01:35:55,840 --> 01:35:58,719
to represent the specific service

2256
01:35:58,719 --> 01:36:00,159
requirement

2257
01:36:00,159 --> 01:36:03,199
for the destination on the network

2258
01:36:03,199 --> 01:36:04,719
uh so

2259
01:36:04,719 --> 01:36:06,800
there can be the mapping between the

2260
01:36:06,800 --> 01:36:10,639
entrance and the color in the uh

2261
01:36:10,639 --> 01:36:14,400
in the node that means the intent x can

2262
01:36:14,400 --> 01:36:17,600
be mapped to the color y so that means

2263
01:36:17,600 --> 01:36:20,239
if they had a similar

2264
01:36:20,239 --> 01:36:21,280
similar

2265
01:36:21,280 --> 01:36:22,320
uh

2266
01:36:22,320 --> 01:36:23,679
entrant uh

2267
01:36:23,679 --> 01:36:26,239
information so that can be this is the

2268
01:36:26,239 --> 01:36:28,000
mapping

2269
01:36:28,000 --> 01:36:30,400
besides this is the mapping because this

2270
01:36:30,400 --> 01:36:33,520
uh the intent can also be used for other

2271
01:36:33,520 --> 01:36:36,560
purposes such as the network environment

2272
01:36:36,560 --> 01:36:38,639
and the secularity

2273
01:36:38,639 --> 01:36:40,239
etc

2274
01:36:40,239 --> 01:36:43,040
because the color is always associated

2275
01:36:43,040 --> 01:36:45,520
with the sr policy for the

2276
01:36:45,520 --> 01:36:48,400
purpose of severing traffic

2277
01:36:48,400 --> 01:36:52,199
okay next slice

2278
01:36:52,560 --> 01:36:54,239
okay so here are these

2279
01:36:54,239 --> 01:36:57,679
examples so that's uh the uh in order to

2280
01:36:57,679 --> 01:37:00,320
simplify the inter-domain routine so

2281
01:37:00,320 --> 01:37:03,199
that's in one local domain so there's a

2282
01:37:03,199 --> 01:37:06,719
can be a set of sr policy group

2283
01:37:06,719 --> 01:37:10,560
which is shown in the figure so that the

2284
01:37:10,560 --> 01:37:12,560
sr policy

2285
01:37:12,560 --> 01:37:13,600
group

2286
01:37:13,600 --> 01:37:16,080
group includes the mapping between

2287
01:37:16,080 --> 01:37:18,719
colors and sr policies

2288
01:37:18,719 --> 01:37:21,360
for specific and the point

2289
01:37:21,360 --> 01:37:23,679
so here we can see that this is the

2290
01:37:23,679 --> 01:37:25,920
mapping between the color one and the sr

2291
01:37:25,920 --> 01:37:28,560
policy one and the color tool for the sr

2292
01:37:28,560 --> 01:37:31,440
policy two uh for the specific and the

2293
01:37:31,440 --> 01:37:32,560
point

2294
01:37:32,560 --> 01:37:35,280
uh because this is the sr policy group

2295
01:37:35,280 --> 01:37:38,000
can be set up and there's also the

2296
01:37:38,000 --> 01:37:40,719
mapping between the intense intent and

2297
01:37:40,719 --> 01:37:44,400
the color so when the packet arrived

2298
01:37:44,400 --> 01:37:47,920
at the edge of the network domain so

2299
01:37:47,920 --> 01:37:50,159
that's the network node

2300
01:37:50,159 --> 01:37:52,960
according can search the field i can

2301
01:37:52,960 --> 01:37:55,840
search this the sr policy

2302
01:37:55,840 --> 01:37:58,560
using the destination address in the

2303
01:37:58,560 --> 01:38:00,840
packet

2304
01:38:00,840 --> 01:38:03,280
uh so then

2305
01:38:03,280 --> 01:38:06,560
find the sr policy group go on to use

2306
01:38:06,560 --> 01:38:09,280
the intended information in the packet

2307
01:38:09,280 --> 01:38:12,159
to map to the corresponding color

2308
01:38:12,159 --> 01:38:15,520
then corresponding the sr policy so

2309
01:38:15,520 --> 01:38:18,000
means that your destination and the

2310
01:38:18,000 --> 01:38:20,719
intended information in the package can

2311
01:38:20,719 --> 01:38:23,600
search the corresponding sr policy for

2312
01:38:23,600 --> 01:38:25,920
the bracket and the point

2313
01:38:25,920 --> 01:38:29,040
so then steering the traffic to the sr

2314
01:38:29,040 --> 01:38:33,119
policy okay next slide

2315
01:38:33,920 --> 01:38:35,679
okay so uh

2316
01:38:35,679 --> 01:38:39,360
the color mechanism can also use to set

2317
01:38:39,360 --> 01:38:41,199
up the mapping

2318
01:38:41,199 --> 01:38:44,159
between the color and the underlying

2319
01:38:44,159 --> 01:38:46,000
network slice

2320
01:38:46,000 --> 01:38:49,600
so that's a we used as the color

2321
01:38:49,600 --> 01:38:53,199
can use to further unify the

2322
01:38:53,199 --> 01:38:55,600
unified mapping process

2323
01:38:55,600 --> 01:38:59,199
of traffic steering that means the color

2324
01:38:59,199 --> 01:39:00,719
can be used

2325
01:39:00,719 --> 01:39:02,159
for

2326
01:39:02,159 --> 01:39:03,600
for the

2327
01:39:03,600 --> 01:39:07,520
for identified sr policy can also use to

2328
01:39:07,520 --> 01:39:10,840
identify the specific underlay network

2329
01:39:10,840 --> 01:39:14,639
slides so when the packet arrives at the

2330
01:39:14,639 --> 01:39:17,840
network edge node the network add node

2331
01:39:17,840 --> 01:39:18,880
can

2332
01:39:18,880 --> 01:39:22,400
abstract the uh can derive the intended

2333
01:39:22,400 --> 01:39:24,800
information from the packet

2334
01:39:24,800 --> 01:39:27,119
and according to the mapping between the

2335
01:39:27,119 --> 01:39:29,520
yen trend and the color to find that

2336
01:39:29,520 --> 01:39:32,000
there is a chorus bound in the color

2337
01:39:32,000 --> 01:39:34,239
then corresponding the

2338
01:39:34,239 --> 01:39:36,960
underlying network slice

2339
01:39:36,960 --> 01:39:39,760
so that's used during the packet into

2340
01:39:39,760 --> 01:39:42,880
the underlay network slice

2341
01:39:42,880 --> 01:39:43,760
and the

2342
01:39:43,760 --> 01:39:46,320
underlying network slides and the use is

2343
01:39:46,320 --> 01:39:49,199
that there's a niche destination address

2344
01:39:49,199 --> 01:39:51,440
can search the field and go on to be

2345
01:39:51,440 --> 01:39:54,639
forwarded in the only network slice

2346
01:39:54,639 --> 01:39:57,600
okay next slice

2347
01:40:00,239 --> 01:40:04,000
all right next slice there okay

2348
01:40:04,000 --> 01:40:07,119
okay so this is the last page about the

2349
01:40:07,119 --> 01:40:09,199
internet-based routine so this is the

2350
01:40:09,199 --> 01:40:10,639
scalability

2351
01:40:10,639 --> 01:40:12,719
uh we have this the advantage of

2352
01:40:12,719 --> 01:40:14,719
availability because this mapping

2353
01:40:14,719 --> 01:40:17,520
between the entrance and the sr policy

2354
01:40:17,520 --> 01:40:20,239
can be done locally without the need of

2355
01:40:20,239 --> 01:40:23,360
advantage the label binding for the pair

2356
01:40:23,360 --> 01:40:26,080
color and the point to stitch the sr

2357
01:40:26,080 --> 01:40:27,040
paths

2358
01:40:27,040 --> 01:40:28,159
spanning

2359
01:40:28,159 --> 01:40:30,000
multiple domains

2360
01:40:30,000 --> 01:40:32,480
and also there's the flexibility because

2361
01:40:32,480 --> 01:40:35,840
the same intent can be satisfied by the

2362
01:40:35,840 --> 01:40:38,080
sr policy or the underlying network

2363
01:40:38,080 --> 01:40:39,199
slides

2364
01:40:39,199 --> 01:40:42,320
so the local network domain can choose

2365
01:40:42,320 --> 01:40:45,040
different solutions

2366
01:40:45,040 --> 01:40:45,920
to

2367
01:40:45,920 --> 01:40:48,000
satisfy the same

2368
01:40:48,000 --> 01:40:51,679
entrant that means in one uh for the

2369
01:40:51,679 --> 01:40:54,880
same intent in one network domain can

2370
01:40:54,880 --> 01:40:57,600
use the sr policy another network domain

2371
01:40:57,600 --> 01:41:00,239
can use the underlying network slides

2372
01:41:00,239 --> 01:41:03,040
so that's used for the under to end

2373
01:41:03,040 --> 01:41:06,400
uh traverse the package so that's the

2374
01:41:06,400 --> 01:41:09,119
kind of flexibility to choose the

2375
01:41:09,119 --> 01:41:11,440
different solutions in the different

2376
01:41:11,440 --> 01:41:14,560
domain so that is combined together to

2377
01:41:14,560 --> 01:41:16,719
satisfy the intent

2378
01:41:16,719 --> 01:41:19,440
so there you can improve the flexibility

2379
01:41:19,440 --> 01:41:21,119
of the entrance

2380
01:41:21,119 --> 01:41:24,480
inter-domain routine but uh i think this

2381
01:41:24,480 --> 01:41:26,719
is an advantage because now according to

2382
01:41:26,719 --> 01:41:30,560
the similes sr it can always use

2383
01:41:30,560 --> 01:41:33,520
either in order to satisfy the intent

2384
01:41:33,520 --> 01:41:36,480
you'd always use the sr pass it's a a

2385
01:41:36,480 --> 01:41:39,600
little difficult to combine the uh

2386
01:41:39,600 --> 01:41:42,080
sr policy and the underlying network

2387
01:41:42,080 --> 01:41:43,199
slides

2388
01:41:43,199 --> 01:41:46,159
okay and last one that's the advantage

2389
01:41:46,159 --> 01:41:48,560
or intensibility because that's besides

2390
01:41:48,560 --> 01:41:51,280
during the package into the sr policy or

2391
01:41:51,280 --> 01:41:54,400
the annual network slides for the

2392
01:41:54,400 --> 01:41:57,840
sre guarantee the network node can also

2393
01:41:57,840 --> 01:42:00,000
enforce the policy for other possible

2394
01:42:00,000 --> 01:42:02,480
intents such as the network amendment

2395
01:42:02,480 --> 01:42:05,360
and the security and other possible

2396
01:42:05,360 --> 01:42:06,560
intent

2397
01:42:06,560 --> 01:42:09,760
okay last slides

2398
01:42:12,560 --> 01:42:14,639
hello okay

2399
01:42:14,639 --> 01:42:17,199
oh sorry not the last so here this is

2400
01:42:17,199 --> 01:42:19,440
just a simple euro solution so we can

2401
01:42:19,440 --> 01:42:22,080
see that's the uh vpnc that can be of

2402
01:42:22,080 --> 01:42:25,520
the world height from the p1 to the csd1

2403
01:42:25,520 --> 01:42:28,400
and also the sr policy group can be set

2404
01:42:28,400 --> 01:42:29,760
up in the

2405
01:42:29,760 --> 01:42:33,040
as1 and also the sr policy group can be

2406
01:42:33,040 --> 01:42:36,880
set up in the es2 so that's the packet

2407
01:42:36,880 --> 01:42:40,320
under to the intel domain routine can be

2408
01:42:40,320 --> 01:42:42,400
illustrated so that's the when the

2409
01:42:42,400 --> 01:42:45,600
preload to arrive so that the entrance

2410
01:42:45,600 --> 01:42:49,199
can be carried and also there's the vpnc

2411
01:42:49,199 --> 01:42:51,360
that can be encapsulated

2412
01:42:51,360 --> 01:42:54,080
uh and also according to the intention

2413
01:42:54,080 --> 01:42:56,719
information can map to the corresponding

2414
01:42:56,719 --> 01:42:58,560
the sr policy

2415
01:42:58,560 --> 01:43:01,280
in the sr policy group so that's the

2416
01:43:01,280 --> 01:43:03,679
segment list for the sr

2417
01:43:03,679 --> 01:43:05,840
policies credited path can be

2418
01:43:05,840 --> 01:43:07,679
encapsulated

2419
01:43:07,679 --> 01:43:10,719
for the traffic theory so when arrived

2420
01:43:10,719 --> 01:43:13,600
and the asbr one so there's a user

2421
01:43:13,600 --> 01:43:16,639
package uh so the second release can be

2422
01:43:16,639 --> 01:43:19,760
removed can use the vpn seed to search

2423
01:43:19,760 --> 01:43:21,760
the favor and transverse the package

2424
01:43:21,760 --> 01:43:25,840
from the asbr one to the asbr3 so here

2425
01:43:25,840 --> 01:43:28,239
let's go on to according to the intended

2426
01:43:28,239 --> 01:43:31,440
information in the package and to map to

2427
01:43:31,440 --> 01:43:35,040
the uh corresponding

2428
01:43:35,040 --> 01:43:36,800
we need to pick up the pace here we're

2429
01:43:36,800 --> 01:43:38,880
running out of time we've got our

2430
01:43:38,880 --> 01:43:40,719
presentations

2431
01:43:40,719 --> 01:43:43,040
okay so that's done so that's you'll

2432
01:43:43,040 --> 01:43:46,000
find the sr policy in the as2 and the

2433
01:43:46,000 --> 01:43:48,880
segment list be encapsulated who's there

2434
01:43:48,880 --> 01:43:51,679
in the traffic arrive on the p1 so they

2435
01:43:51,679 --> 01:43:54,000
say just your restoration okay next

2436
01:43:54,000 --> 01:43:56,400
slice

2437
01:43:56,560 --> 01:43:58,960
okay so the this is the next step so

2438
01:43:58,960 --> 01:44:01,199
this is the first version so that we

2439
01:44:01,199 --> 01:44:02,880
would like to listen to the comments and

2440
01:44:02,880 --> 01:44:04,880
refine the draft and welcome the

2441
01:44:04,880 --> 01:44:08,480
cooperation okay

2442
01:44:09,040 --> 01:44:11,280
okay linda you may ask your question but

2443
01:44:11,280 --> 01:44:13,119
other than that the mic line is closed

2444
01:44:13,119 --> 01:44:15,040
because we are running very late on time

2445
01:44:15,040 --> 01:44:16,480
i'm sorry

2446
01:44:16,480 --> 01:44:18,560
okay i just have a clarification

2447
01:44:18,560 --> 01:44:21,679
question so is that intent perform the

2448
01:44:21,679 --> 01:44:25,360
similar function as um like um

2449
01:44:25,360 --> 01:44:27,920
policy uh almost like a

2450
01:44:27,920 --> 01:44:30,880
qos kind of function similar to qs

2451
01:44:30,880 --> 01:44:33,920
in a way that you can steer the traffic

2452
01:44:33,920 --> 01:44:36,560
give another layer of policy matching

2453
01:44:36,560 --> 01:44:38,159
criteria

2454
01:44:38,159 --> 01:44:39,840
yes

2455
01:44:39,840 --> 01:44:42,719
to some extent you're similar but uh to

2456
01:44:42,719 --> 01:44:46,639
be more uh exactly exact you select the

2457
01:44:46,639 --> 01:44:49,360
color that means the entrance

2458
01:44:49,360 --> 01:44:51,760
such as this low latency or the

2459
01:44:51,760 --> 01:44:54,080
hypernoise

2460
01:44:54,080 --> 01:44:57,199
not only is just the dhcp this is the

2461
01:44:57,199 --> 01:44:59,119
code point

2462
01:44:59,119 --> 01:45:02,000
okay okay so the payload itself

2463
01:45:02,000 --> 01:45:04,560
indicates its own bandwidth requirement

2464
01:45:04,560 --> 01:45:07,280
or the latency requirement

2465
01:45:07,280 --> 01:45:09,600
uh yeah yeah you suggested some this is

2466
01:45:09,600 --> 01:45:13,360
abstract in uh intent that's not a

2467
01:45:13,360 --> 01:45:17,199
detailed uh service requirement

2468
01:45:17,199 --> 01:45:19,119
okay thank you okay

2469
01:45:19,119 --> 01:45:21,839
thank you both

2470
01:45:21,920 --> 01:45:24,400
you're up

2471
01:45:26,639 --> 01:45:28,800
if you will request to present i will

2472
01:45:28,800 --> 01:45:31,840
give you permission

2473
01:45:42,639 --> 01:45:44,960
oh it's not working okay i will present

2474
01:45:44,960 --> 01:45:46,080
this

2475
01:45:46,080 --> 01:45:48,639
i make sure i get the right thing

2476
01:45:48,639 --> 01:45:52,520
multicast okay

2477
01:46:01,520 --> 01:46:05,119
there you are i'm going to slide two

2478
01:46:05,119 --> 01:46:06,960
you have only a few slides which is good

2479
01:46:06,960 --> 01:46:10,920
but please proceed quickly

2480
01:46:18,320 --> 01:46:21,040
here's your song

2481
01:46:23,760 --> 01:46:27,560
and you need to unmute

2482
01:46:31,920 --> 01:46:33,520
okay

2483
01:46:33,520 --> 01:46:35,920
there yes i can hear you go ahead

2484
01:46:35,920 --> 01:46:36,800
thank you

2485
01:46:36,800 --> 01:46:37,679
um

2486
01:46:37,679 --> 01:46:40,800
hi i will introduce our work about

2487
01:46:40,800 --> 01:46:42,719
source segment for

2488
01:46:42,719 --> 01:46:46,639
msr6 briefly the first page yeah thank

2489
01:46:46,639 --> 01:46:47,600
you

2490
01:46:47,600 --> 01:46:49,840
first i will introduce the

2491
01:46:49,840 --> 01:46:52,960
concept of source segment

2492
01:46:52,960 --> 01:46:53,840
6

2493
01:46:53,840 --> 01:46:56,320
seed is defined to be used as

2494
01:46:56,320 --> 01:47:00,320
destination address in rc8402

2495
01:47:00,320 --> 01:47:03,679
but in some cases an srv6c is also

2496
01:47:03,679 --> 01:47:07,199
allowed to be used in the source address

2497
01:47:07,199 --> 01:47:09,760
for example when the pin request packet

2498
01:47:09,760 --> 01:47:14,000
is an srs6 packet and the echo reply

2499
01:47:14,000 --> 01:47:17,040
will use the srv6 seed of the request

2500
01:47:17,040 --> 01:47:20,480
package as the source address

2501
01:47:20,480 --> 01:47:23,119
in this document we introduce the

2502
01:47:23,119 --> 01:47:26,800
concept of a source address for

2503
01:47:26,800 --> 01:47:32,560
ipv6 multicast packet next page please

2504
01:47:34,560 --> 01:47:37,119
more precisely the source segment in

2505
01:47:37,119 --> 01:47:39,600
this document is used for

2506
01:47:39,600 --> 01:47:43,360
mvpn service in ipv6 network

2507
01:47:43,360 --> 01:47:46,960
uh generally in the multicast service a

2508
01:47:46,960 --> 01:47:50,239
packet is replicated along the tree

2509
01:47:50,239 --> 01:47:53,040
towards a set of leaf nodes

2510
01:47:53,040 --> 01:47:55,679
in this case i'm vpn routing and the

2511
01:47:55,679 --> 01:47:57,520
corresponding information could be

2512
01:47:57,520 --> 01:48:00,480
encapsulated in the source segment

2513
01:48:00,480 --> 01:48:04,639
carried in the ipv6 source address

2514
01:48:04,639 --> 01:48:05,520
and

2515
01:48:05,520 --> 01:48:08,239
this source segment for mvpn is

2516
01:48:08,239 --> 01:48:10,880
distributed by the root node and the

2517
01:48:10,880 --> 01:48:14,719
function is excluded by the leaf nodes

2518
01:48:14,719 --> 01:48:17,840
uh similar as the group of

2519
01:48:17,840 --> 01:48:20,159
n dot dt functions

2520
01:48:20,159 --> 01:48:23,280
are defined in rc

2521
01:48:23,280 --> 01:48:25,280
8986

2522
01:48:25,280 --> 01:48:28,800
this document defines a set of behaviors

2523
01:48:28,800 --> 01:48:31,280
that can be associated with source

2524
01:48:31,280 --> 01:48:34,800
segment for i'm vpn just as list

2525
01:48:34,800 --> 01:48:37,280
the table here

2526
01:48:37,280 --> 01:48:39,600
next page

2527
01:48:39,600 --> 01:48:40,960
uh thank you

2528
01:48:40,960 --> 01:48:43,600
here we list some benefits which can

2529
01:48:43,600 --> 01:48:47,199
brought by the source segment

2530
01:48:47,199 --> 01:48:51,040
especially for the case of mvpn

2531
01:48:51,040 --> 01:48:53,440
first the thought segment is unchanged

2532
01:48:53,440 --> 01:48:56,000
along the p2mp path compared to the

2533
01:48:56,000 --> 01:48:58,080
destination address

2534
01:48:58,080 --> 01:48:59,360
and it could

2535
01:48:59,360 --> 01:49:03,360
enhance the networking capability um by

2536
01:49:03,360 --> 01:49:05,760
allowing more functions in the source

2537
01:49:05,760 --> 01:49:06,960
space

2538
01:49:06,960 --> 01:49:10,480
um and also the cement uh trick of uh

2539
01:49:10,480 --> 01:49:13,520
source address could reuse the ipv6

2540
01:49:13,520 --> 01:49:17,040
address allocation and management method

2541
01:49:17,040 --> 01:49:20,239
or it can have a similar one

2542
01:49:20,239 --> 01:49:23,440
next page please

2543
01:49:23,520 --> 01:49:25,040
what is the next

2544
01:49:25,040 --> 01:49:27,920
actually we think it is a proper time to

2545
01:49:27,920 --> 01:49:30,239
raise this topic in spring because this

2546
01:49:30,239 --> 01:49:32,800
question of uh seed appeared in source

2547
01:49:32,800 --> 01:49:34,800
addressed field has already been

2548
01:49:34,800 --> 01:49:36,880
mentioned during the discussion of

2549
01:49:36,880 --> 01:49:38,880
services compression

2550
01:49:38,880 --> 01:49:41,440
and we believe this document could give

2551
01:49:41,440 --> 01:49:44,880
a clear concept and ends a

2552
01:49:44,880 --> 01:49:48,719
valid use case for source segment

2553
01:49:48,719 --> 01:49:51,840
but honestly for further work we believe

2554
01:49:51,840 --> 01:49:54,639
more clarifications will be helpful just

2555
01:49:54,639 --> 01:49:57,679
as mentioned in the request of the ads

2556
01:49:57,679 --> 01:50:00,159
email maybe there will be a new document

2557
01:50:00,159 --> 01:50:01,199
for this

2558
01:50:01,199 --> 01:50:04,560
uh especially from the view of ipv6

2559
01:50:04,560 --> 01:50:08,159
okay that's all thank you

2560
01:50:09,679 --> 01:50:11,040
it's on the queue and then we have to

2561
01:50:11,040 --> 01:50:14,719
move on to the last presentation

2562
01:50:15,679 --> 01:50:17,760
tour list you you'll be you'll go up one

2563
01:50:17,760 --> 01:50:22,159
after this finishes ron go ahead

2564
01:50:22,159 --> 01:50:24,880
yes um what happens

2565
01:50:24,880 --> 01:50:27,520
when a packet has a sid is its source

2566
01:50:27,520 --> 01:50:28,639
address

2567
01:50:28,639 --> 01:50:30,239
and for some reason it can't be

2568
01:50:30,239 --> 01:50:31,360
forwarded

2569
01:50:31,360 --> 01:50:33,440
and the node that cannot forward it

2570
01:50:33,440 --> 01:50:36,080
sends an icmp message to that source

2571
01:50:36,080 --> 01:50:38,880
address

2572
01:50:38,880 --> 01:50:41,440
uh i think this case the source address

2573
01:50:41,440 --> 01:50:44,400
is still rootable just like as rha 6

2574
01:50:44,400 --> 01:50:47,920
seed in the destination address

2575
01:50:48,340 --> 01:50:49,760
[Music]

2576
01:50:49,760 --> 01:50:51,040
where does the

2577
01:50:51,040 --> 01:50:53,280
icmp message go

2578
01:50:53,280 --> 01:50:54,960
what is the term just

2579
01:50:54,960 --> 01:50:58,719
to the locator of the source address

2580
01:50:58,719 --> 01:51:01,840
the locator part it is still routable

2581
01:51:01,840 --> 01:51:02,719
just

2582
01:51:02,719 --> 01:51:06,000
the vpn mvpn information can be carried

2583
01:51:06,000 --> 01:51:08,719
in the such as argument part of the seat

2584
01:51:08,719 --> 01:51:11,360
just like an srv succeeded

2585
01:51:11,360 --> 01:51:13,280
address

2586
01:51:13,280 --> 01:51:14,719
so the low order bits are totally

2587
01:51:14,719 --> 01:51:17,679
ignored at the source

2588
01:51:18,560 --> 01:51:20,320
ron that's a detail we need to take to

2589
01:51:20,320 --> 01:51:21,520
the list

2590
01:51:21,520 --> 01:51:24,239
zhao zi zhao he sorry if i mispronounced

2591
01:51:24,239 --> 01:51:26,080
it your question

2592
01:51:26,080 --> 01:51:28,639
uh a comment um this concept was first

2593
01:51:28,639 --> 01:51:30,000
brought up um

2594
01:51:30,000 --> 01:51:32,560
in the beer working group uh when we did

2595
01:51:32,560 --> 01:51:35,040
when they uh wanted to do the

2596
01:51:35,040 --> 01:51:39,280
ipp srv6 style um beer for mvpn there

2597
01:51:39,280 --> 01:51:41,199
were a lot of discussions on them on the

2598
01:51:41,199 --> 01:51:43,199
mailing list mainly from me

2599
01:51:43,199 --> 01:51:45,840
uh on on the issues with uh with this

2600
01:51:45,840 --> 01:51:49,599
proposal i think we should re revive the

2601
01:51:49,599 --> 01:51:51,920
discussion there

2602
01:51:51,920 --> 01:51:55,040
uh actually i think this this is not for

2603
01:51:55,040 --> 01:51:56,560
beer or some

2604
01:51:56,560 --> 01:51:59,280
specific mechanism this can be used for

2605
01:51:59,280 --> 01:52:03,360
any ipv6 based multicast to carry mvpn

2606
01:52:03,360 --> 01:52:06,400
and we also discussed this in the

2607
01:52:06,400 --> 01:52:08,639
section 6 of the document maybe you can

2608
01:52:08,639 --> 01:52:13,320
review it and thank you for the comments

2609
01:52:21,199 --> 01:52:25,040
okay tourists you're up

2610
01:52:26,719 --> 01:52:28,639
okay let me find it

2611
01:52:28,639 --> 01:52:31,840
is it all the way on the bottom

2612
01:52:34,000 --> 01:52:35,360
yeah there we go

2613
01:52:35,360 --> 01:52:36,880
sure

2614
01:52:36,880 --> 01:52:40,719
very okay oh um

2615
01:52:40,719 --> 01:52:44,239
this idea here was introduced in itf 111

2616
01:52:44,239 --> 01:52:46,800
originally targeted for industrial

2617
01:52:46,800 --> 01:52:49,920
networks and so this came out of the

2618
01:52:49,920 --> 01:52:53,440
question what can we do better with

2619
01:52:53,440 --> 01:52:55,520
variable length addresses and it only

2620
01:52:55,520 --> 01:52:58,159
mentions in inside how it would be

2621
01:52:58,159 --> 01:53:01,280
beneficial in in our opinion for current

2622
01:53:01,280 --> 01:53:03,199
service provider network so i wanted to

2623
01:53:03,199 --> 01:53:05,920
lay this out as something which i think

2624
01:53:05,920 --> 01:53:08,000
at the core could really help spring in

2625
01:53:08,000 --> 01:53:10,639
the long term um because i think we're

2626
01:53:10,639 --> 01:53:13,679
going to see a lot more customers coming

2627
01:53:13,679 --> 01:53:16,239
into um you know our service provider

2628
01:53:16,239 --> 01:53:19,119
type network use cases without 20 years

2629
01:53:19,119 --> 01:53:21,920
of v6 and mpls preferences

2630
01:53:21,920 --> 01:53:22,800
and

2631
01:53:22,800 --> 01:53:24,560
when they're looking at what they can be

2632
01:53:24,560 --> 01:53:26,239
doing with spring i think one of the

2633
01:53:26,239 --> 01:53:28,960
most obvious feedbacks would be so why

2634
01:53:28,960 --> 01:53:31,280
is itf only continuing to enhance two

2635
01:53:31,280 --> 01:53:33,360
parallel forwarding planes both have

2636
01:53:33,360 --> 01:53:35,840
downsides the other solves better

2637
01:53:35,840 --> 01:53:37,679
and one common forwarding plane with the

2638
01:53:37,679 --> 01:53:39,440
best of both worlds would be quite

2639
01:53:39,440 --> 01:53:41,360
logical it avoids duplication of

2640
01:53:41,360 --> 01:53:43,840
expertise development software hardware

2641
01:53:43,840 --> 01:53:46,239
deployment and the limitations and i

2642
01:53:46,239 --> 01:53:48,080
think that's really you know one of the

2643
01:53:48,080 --> 01:53:50,800
core questions spring should ask itself

2644
01:53:50,800 --> 01:53:52,560
for

2645
01:53:52,560 --> 01:53:54,960
you know the the long term um we have

2646
01:53:54,960 --> 01:53:57,119
unified as our architecture as much as

2647
01:53:57,119 --> 01:53:59,599
possible but we do not have a forward uh

2648
01:53:59,599 --> 01:54:01,520
forwarding plane unification right and

2649
01:54:01,520 --> 01:54:03,040
obviously the current working group

2650
01:54:03,040 --> 01:54:05,760
structure for execution isn't suited to

2651
01:54:05,760 --> 01:54:07,360
achieve something like that because we

2652
01:54:07,360 --> 01:54:09,840
only have working groups that are there

2653
01:54:09,840 --> 01:54:12,480
to maintain the legacy um and you know

2654
01:54:12,480 --> 01:54:14,320
just imagine how quick would have turned

2655
01:54:14,320 --> 01:54:16,960
out it would have been put into the tcpm

2656
01:54:16,960 --> 01:54:18,880
working group right so and that legacies

2657
01:54:18,880 --> 01:54:20,880
are quite different from the operator

2658
01:54:20,880 --> 01:54:23,199
requirements which we do understand thin

2659
01:54:23,199 --> 01:54:25,360
ways low operational churn complexity

2660
01:54:25,360 --> 01:54:27,920
limitation yada right so that's

2661
01:54:27,920 --> 01:54:30,320
basically the motivation now obviously

2662
01:54:30,320 --> 01:54:32,000
any of that motivation doesn't help if

2663
01:54:32,000 --> 01:54:33,920
we don't have ideas on how to do better

2664
01:54:33,920 --> 01:54:36,400
and how we could unify so let me quickly

2665
01:54:36,400 --> 01:54:39,199
explain how i think all the things we

2666
01:54:39,199 --> 01:54:42,880
are doing you know differently in mpls

2667
01:54:42,880 --> 01:54:43,599
and

2668
01:54:43,599 --> 01:54:44,719
um

2669
01:54:44,719 --> 01:54:47,679
srv6 could be you know done

2670
01:54:47,679 --> 01:54:50,159
more comprehensively in a single

2671
01:54:50,159 --> 01:54:52,080
flexible addressing

2672
01:54:52,080 --> 01:54:53,520
approach

2673
01:54:53,520 --> 01:54:56,000
and the main point is that the addresses

2674
01:54:56,000 --> 01:54:59,119
of each node can be variable length

2675
01:54:59,119 --> 01:55:01,440
and no address can be a prefix of

2676
01:55:01,440 --> 01:55:04,239
another so that you do own all the

2677
01:55:04,239 --> 01:55:06,320
suffixes so for example routers one and

2678
01:55:06,320 --> 01:55:08,639
two here on the picture are

2679
01:55:08,639 --> 01:55:10,800
the ones uh most often used as edge

2680
01:55:10,800 --> 01:55:13,119
routers so they have shorter addresses

2681
01:55:13,119 --> 01:55:14,239
and then

2682
01:55:14,239 --> 01:55:15,119
the

2683
01:55:15,119 --> 01:55:17,760
the address is constructed as a sequence

2684
01:55:17,760 --> 01:55:19,679
of

2685
01:55:19,679 --> 01:55:22,560
you know one such note prefix

2686
01:55:22,560 --> 01:55:24,880
followed by a sequence of commands

2687
01:55:24,880 --> 01:55:28,000
zero or more each with its you know

2688
01:55:28,000 --> 01:55:30,080
optional parameters

2689
01:55:30,080 --> 01:55:31,520
and

2690
01:55:31,520 --> 01:55:33,599
that could be a superset of the existing

2691
01:55:33,599 --> 01:55:36,080
sr commands let's say the most simple

2692
01:55:36,080 --> 01:55:37,679
one obviously being something like

2693
01:55:37,679 --> 01:55:40,560
receive which could be the value four

2694
01:55:40,560 --> 01:55:42,800
four four bit command uh receive into a

2695
01:55:42,800 --> 01:55:45,840
vpn which might be of a parameter oem

2696
01:55:45,840 --> 01:55:48,320
pund and so on

2697
01:55:48,320 --> 01:55:49,119
so

2698
01:55:49,119 --> 01:55:51,040
how then would we do the most important

2699
01:55:51,040 --> 01:55:53,520
thing which is the source steering

2700
01:55:53,520 --> 01:55:55,679
and here is the example with the loose

2701
01:55:55,679 --> 01:55:58,480
steering where we simply have a sequence

2702
01:55:58,480 --> 01:56:00,960
of the node prefixes some local commands

2703
01:56:00,960 --> 01:56:03,440
here for the first node command one with

2704
01:56:03,440 --> 01:56:06,000
a parameter then command two being the

2705
01:56:06,000 --> 01:56:08,639
steer parameter and um with respect to

2706
01:56:08,639 --> 01:56:11,280
how node one interprets the address well

2707
01:56:11,280 --> 01:56:13,199
it's basically the rest of the address

2708
01:56:13,199 --> 01:56:15,599
is just the parameter to the

2709
01:56:15,599 --> 01:56:18,639
steer command so it basically takes the

2710
01:56:18,639 --> 01:56:20,000
parameter

2711
01:56:20,000 --> 01:56:21,679
looks at the first

2712
01:56:21,679 --> 01:56:24,320
part of it which is the next hop node

2713
01:56:24,320 --> 01:56:26,159
and then it passes on

2714
01:56:26,159 --> 01:56:29,520
the address in a way that that note 2 um

2715
01:56:29,520 --> 01:56:32,320
and any intermediate uh hops toward it

2716
01:56:32,320 --> 01:56:34,480
would uh start interpreting uh the

2717
01:56:34,480 --> 01:56:37,280
address at that stage and so it goes on

2718
01:56:37,280 --> 01:56:40,880
and as you can see we don't mandate um

2719
01:56:40,880 --> 01:56:43,119
additional uh local commands on the

2720
01:56:43,119 --> 01:56:46,960
notes like we are wasting the space in

2721
01:56:46,960 --> 01:56:48,400
ssrh

2722
01:56:48,400 --> 01:56:49,280
and

2723
01:56:49,280 --> 01:56:51,760
but we can very easily have them

2724
01:56:51,760 --> 01:56:52,960
um

2725
01:56:52,960 --> 01:56:55,360
so the address encoding um you know if

2726
01:56:55,360 --> 01:56:56,480
we simply

2727
01:56:56,480 --> 01:56:58,960
strip the prefix of the address on each

2728
01:56:58,960 --> 01:57:00,800
of these steering hops we'll basically

2729
01:57:00,800 --> 01:57:02,639
have an mpls style

2730
01:57:02,639 --> 01:57:04,400
address handling right we're popping

2731
01:57:04,400 --> 01:57:06,560
things from the beginning of the address

2732
01:57:06,560 --> 01:57:08,800
we can equally do the srh style that

2733
01:57:08,800 --> 01:57:10,400
that's a decision to make

2734
01:57:10,400 --> 01:57:12,480
uh when we ever get to an encoding of

2735
01:57:12,480 --> 01:57:15,440
this uh by simply having um a prefix

2736
01:57:15,440 --> 01:57:18,080
that we chain uh sorry an an offset you

2737
01:57:18,080 --> 01:57:20,480
know address interpretation offset that

2738
01:57:20,480 --> 01:57:22,960
we uh progress in the same way as we do

2739
01:57:22,960 --> 01:57:25,840
that in srh

2740
01:57:27,280 --> 01:57:30,560
now the variable length introduces some

2741
01:57:30,560 --> 01:57:33,599
new challenges to whether we have you

2742
01:57:33,599 --> 01:57:35,920
know inconsistency in routing in the

2743
01:57:35,920 --> 01:57:37,920
configuration of the nodes

2744
01:57:37,920 --> 01:57:40,080
which will impact the

2745
01:57:40,080 --> 01:57:44,239
decoding uh which so far in srh and mpls

2746
01:57:44,239 --> 01:57:46,639
is because it's fixed size not happening

2747
01:57:46,639 --> 01:57:49,119
and we can also easily overcome that by

2748
01:57:49,119 --> 01:57:51,920
introducing you know a prefix links

2749
01:57:51,920 --> 01:57:54,560
argument that make sure that whoever is

2750
01:57:54,560 --> 01:57:57,280
uh you know generating an address um

2751
01:57:57,280 --> 01:57:59,119
will um you know have the same

2752
01:57:59,119 --> 01:58:01,760
interpretation of the the first node

2753
01:58:01,760 --> 01:58:04,400
prefix uh to um

2754
01:58:04,400 --> 01:58:08,159
analyze as the receiver has and if not

2755
01:58:08,159 --> 01:58:10,080
then that would erase an arrow and stop

2756
01:58:10,080 --> 01:58:13,119
the forwarding of the packet

2757
01:58:13,119 --> 01:58:17,119
um the very same elimination of new

2758
01:58:17,119 --> 01:58:20,000
challenges with variable length for the

2759
01:58:20,000 --> 01:58:22,320
variable length addresses can can also

2760
01:58:22,320 --> 01:58:26,080
be done um we have different uh ways uh

2761
01:58:26,080 --> 01:58:28,239
on how we can you know manage address

2762
01:58:28,239 --> 01:58:30,560
space for commands uh so far we've

2763
01:58:30,560 --> 01:58:32,320
typically done it by fixing them through

2764
01:58:32,320 --> 01:58:34,000
the standard which gives the strongest

2765
01:58:34,000 --> 01:58:36,320
consistency they could be pre-configured

2766
01:58:36,320 --> 01:58:38,080
across the network which is fairly

2767
01:58:38,080 --> 01:58:40,000
strong consistency or they could be

2768
01:58:40,000 --> 01:58:42,239
managed by the igp so

2769
01:58:42,239 --> 01:58:44,480
to make sure that we're not having

2770
01:58:44,480 --> 01:58:46,880
inconsistencies across them we should

2771
01:58:46,880 --> 01:58:48,800
definitely standardize

2772
01:58:48,800 --> 01:58:52,159
the address space um so that it is

2773
01:58:52,159 --> 01:58:55,280
always clear on what address what length

2774
01:58:55,280 --> 01:58:56,960
and whether it is fixed by standard

2775
01:58:56,960 --> 01:58:58,880
pre-configured or dynamically assigned

2776
01:58:58,880 --> 01:59:01,599
so i think this is just high level to

2777
01:59:01,599 --> 01:59:04,080
see how we can eliminate the new um

2778
01:59:04,080 --> 01:59:06,159
consistency challenges through variable

2779
01:59:06,159 --> 01:59:09,440
length addresses um and that basically

2780
01:59:09,440 --> 01:59:12,159
gets us to you know how could we start

2781
01:59:12,159 --> 01:59:14,880
looking at a common header um and this

2782
01:59:14,880 --> 01:59:17,040
this is basically a simple idea on how

2783
01:59:17,040 --> 01:59:19,840
to start with an ipv6 header strip it

2784
01:59:19,840 --> 01:59:21,840
down to take out all the things that we

2785
01:59:21,840 --> 01:59:24,080
may not want if the semantic we're

2786
01:59:24,080 --> 01:59:26,480
preferring is more towards mpls the

2787
01:59:26,480 --> 01:59:28,000
source address could be completely

2788
01:59:28,000 --> 01:59:31,040
optional um the destination address is

2789
01:59:31,040 --> 01:59:34,239
really that instruction that we had um

2790
01:59:34,239 --> 01:59:36,639
and you know i i can give a long rant

2791
01:59:36,639 --> 01:59:38,400
about that we should get rid of a lot of

2792
01:59:38,400 --> 01:59:41,040
the legacy qs that we have and make it

2793
01:59:41,040 --> 01:59:44,159
into an an options header but so we

2794
01:59:44,159 --> 01:59:47,199
basically would uh arrive at a very uh

2795
01:59:47,199 --> 01:59:51,119
compact header that was very flexible

2796
01:59:51,119 --> 01:59:52,639
um

2797
01:59:52,639 --> 01:59:54,320
so obviously there is a lot of

2798
01:59:54,320 --> 01:59:56,159
functionality beyond addressing so this

2799
01:59:56,159 --> 01:59:58,800
would just be the start to to show that

2800
01:59:58,800 --> 02:00:00,560
we can have a unified addressing

2801
02:00:00,560 --> 02:00:02,880
structure which makes uh the spring

2802
02:00:02,880 --> 02:00:04,960
architecture more flexible and easily

2803
02:00:04,960 --> 02:00:06,320
extensible

2804
02:00:06,320 --> 02:00:08,719
with the best of both worlds of mpls and

2805
02:00:08,719 --> 02:00:11,520
v6 right obviously you know we need to

2806
02:00:11,520 --> 02:00:13,920
discuss what we think about you know

2807
02:00:13,920 --> 02:00:16,239
other differences in the forwarding like

2808
02:00:16,239 --> 02:00:17,440
you know um

2809
02:00:17,440 --> 02:00:20,080
is uh mtu discover better done out of

2810
02:00:20,080 --> 02:00:22,800
band or in-band um and then of course

2811
02:00:22,800 --> 02:00:25,440
also backward compatibility right and

2812
02:00:25,440 --> 02:00:27,119
i think the question is really how much

2813
02:00:27,119 --> 02:00:29,679
backward compatibility do we need

2814
02:00:29,679 --> 02:00:32,400
not that we need it and in the most easy

2815
02:00:32,400 --> 02:00:34,480
case one can see that with this new

2816
02:00:34,480 --> 02:00:36,639
encoding you can simply map all the

2817
02:00:36,639 --> 02:00:39,840
existing mpls and srv6 into it but is

2818
02:00:39,840 --> 02:00:42,080
that really what we want

2819
02:00:42,080 --> 02:00:44,159
oh and that's basically it right so this

2820
02:00:44,159 --> 02:00:46,159
this is kind of hopefully a somewhat

2821
02:00:46,159 --> 02:00:49,040
inspiring thought about how we can you

2822
02:00:49,040 --> 02:00:49,920
know

2823
02:00:49,920 --> 02:00:51,760
do a lot more when we come up with a

2824
02:00:51,760 --> 02:00:54,320
very simple um flexible addressing

2825
02:00:54,320 --> 02:00:56,560
mechanisms and hopefully you know

2826
02:00:56,560 --> 02:00:59,360
long-term uh evolving something where

2827
02:00:59,360 --> 02:01:02,320
spring has a single unified forwarding

2828
02:01:02,320 --> 02:01:05,280
plane um you know cute small

2829
02:01:05,280 --> 02:01:07,360
dogs um yeah that's it thank you very

2830
02:01:07,360 --> 02:01:09,199
much for your time and please take it to

2831
02:01:09,199 --> 02:01:11,280
the list contact me directly if you're

2832
02:01:11,280 --> 02:01:13,360
interested in this obviously this is not

2833
02:01:13,360 --> 02:01:15,360
something that can be done overnight but

2834
02:01:15,360 --> 02:01:18,639
uh i'd really appreciate any feedback

2835
02:01:18,639 --> 02:01:19,520
okay

2836
02:01:19,520 --> 02:01:21,599
let me observe the chairs have not had i

2837
02:01:21,599 --> 02:01:23,840
have not discussed this but

2838
02:01:23,840 --> 02:01:25,599
it is very questionable whether

2839
02:01:25,599 --> 02:01:28,159
discussing this fits at all within the

2840
02:01:28,159 --> 02:01:29,840
charter of spring

2841
02:01:29,840 --> 02:01:31,599
of course i'm not asking whether the

2842
02:01:31,599 --> 02:01:34,320
ietf should discuss it but it is

2843
02:01:34,320 --> 02:01:36,239
very unclear whether it fits within

2844
02:01:36,239 --> 02:01:38,719
spring and we are now at the top of the

2845
02:01:38,719 --> 02:01:41,599
hour so i want to thank everybody

2846
02:01:41,599 --> 02:01:44,080
and uh

2847
02:01:44,080 --> 02:01:45,920
we will uh

2848
02:01:45,920 --> 02:01:49,040
see you down the road

2849
02:01:49,040 --> 02:01:51,840
stay well

