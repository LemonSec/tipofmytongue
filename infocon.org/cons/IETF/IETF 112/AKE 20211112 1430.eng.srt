1
00:00:08,639 --> 00:00:10,880
okay there is john

2
00:00:10,880 --> 00:00:14,920
john do you want to test your mic

3
00:00:17,199 --> 00:00:20,880
okay it's perfect yes perfect thank you

4
00:00:20,880 --> 00:00:22,000
okay

5
00:00:22,000 --> 00:00:23,279
so i guess since we have an hour we

6
00:00:23,279 --> 00:00:25,840
might uh get going um you know more

7
00:00:25,840 --> 00:00:27,840
people they'll miss the untrolling first

8
00:00:27,840 --> 00:00:29,119
couple of minutes so we do the adventist

9
00:00:29,119 --> 00:00:31,599
review so welcome this is the lake

10
00:00:31,599 --> 00:00:33,680
meeting at age f-112

11
00:00:33,680 --> 00:00:35,440
my name is stephen farrell and my

12
00:00:35,440 --> 00:00:38,480
co-chair is militia

13
00:00:39,280 --> 00:00:41,200
so they've got some

14
00:00:41,200 --> 00:00:43,120
links if you

15
00:00:43,120 --> 00:00:44,800
meet them

16
00:00:44,800 --> 00:00:46,160
uh they're not well this is friday of

17
00:00:46,160 --> 00:00:47,360
the night effect you've seen this a lot

18
00:00:47,360 --> 00:00:50,559
of times you should be aware of it

19
00:00:50,559 --> 00:00:52,719
and in addition people you know like to

20
00:00:52,719 --> 00:00:54,960
behave well so doing that is good

21
00:00:54,960 --> 00:00:56,800
again if you kind of

22
00:00:56,800 --> 00:00:58,320
keep an eye on the code you know bear in

23
00:00:58,320 --> 00:00:59,760
mind the code of conduct and behave

24
00:00:59,760 --> 00:01:00,879
appropriately but i don't think we've

25
00:01:00,879 --> 00:01:04,000
had a problem in this group so

26
00:01:04,000 --> 00:01:06,560
uh here's our agenda uh minnesota we're

27
00:01:06,560 --> 00:01:08,960
in the middle of that um

28
00:01:08,960 --> 00:01:11,840
there's a an update on the on the kind

29
00:01:11,840 --> 00:01:13,119
of you know the way we want to try and

30
00:01:13,119 --> 00:01:15,200
interact with the academic cryptographic

31
00:01:15,200 --> 00:01:17,360
community to get kind of analysis done

32
00:01:17,360 --> 00:01:19,280
this year we'll cover

33
00:01:19,280 --> 00:01:20,240
uh

34
00:01:20,240 --> 00:01:21,360
there's the

35
00:01:21,360 --> 00:01:23,360
new draft on traces that we had

36
00:01:23,360 --> 00:01:26,560
consensus on adopting um i think militia

37
00:01:26,560 --> 00:01:28,880
and i are not entirely clear on on what

38
00:01:28,880 --> 00:01:30,720
final destination people really want for

39
00:01:30,720 --> 00:01:32,159
that in our exact scope so there's a

40
00:01:32,159 --> 00:01:34,079
couple questions on that

41
00:01:34,079 --> 00:01:36,320
uh and then they will hand over to john

42
00:01:36,320 --> 00:01:38,880
for handling issues with the main spec

43
00:01:38,880 --> 00:01:40,320
of ed hock

44
00:01:40,320 --> 00:01:42,240
and next steps planning whether we want

45
00:01:42,240 --> 00:01:45,360
another interim before the holidays etc

46
00:01:45,360 --> 00:01:48,880
any agenda bashing

47
00:01:53,600 --> 00:01:56,640
uh take that as a no um we have a minute

48
00:01:56,640 --> 00:01:59,840
taker thanks timothy and uh in jabber uh

49
00:01:59,840 --> 00:02:01,360
myself and militia will keep an eye on

50
00:02:01,360 --> 00:02:03,200
that so if you want

51
00:02:03,200 --> 00:02:05,040
if you have audio issues

52
00:02:05,040 --> 00:02:06,799
uh then you can feel free to type into

53
00:02:06,799 --> 00:02:08,800
jabber and we will be able to bring your

54
00:02:08,800 --> 00:02:10,959
comment to the microphone

55
00:02:10,959 --> 00:02:13,440
okay so with that we'll move on and uh

56
00:02:13,440 --> 00:02:15,440
militia over to you i think you're going

57
00:02:15,440 --> 00:02:17,440
to share a screen right

58
00:02:17,440 --> 00:02:20,959
yes i will so we i'll just give a brief

59
00:02:20,959 --> 00:02:22,640
update on this

60
00:02:22,640 --> 00:02:25,360
so as we agreed during the last itf

61
00:02:25,360 --> 00:02:28,239
meeting we will uh

62
00:02:28,239 --> 00:02:31,360
launch a formal call for formal analysis

63
00:02:31,360 --> 00:02:33,680
of the specification as it is now in a

64
00:02:33,680 --> 00:02:35,840
pretty good shape and we feel confident

65
00:02:35,840 --> 00:02:37,840
that it is ready to go

66
00:02:37,840 --> 00:02:41,120
uh i've been working with karthik and

67
00:02:41,120 --> 00:02:43,599
the co-authors of the ad hoc draft on

68
00:02:43,599 --> 00:02:46,239
writing up a letter or like a short

69
00:02:46,239 --> 00:02:48,560
paper uh summarizing ad hoc that would

70
00:02:48,560 --> 00:02:51,040
be like the first point of entry for

71
00:02:51,040 --> 00:02:54,080
people who were not familiar with the ad

72
00:02:54,080 --> 00:02:56,000
hoc standardization process mainly

73
00:02:56,000 --> 00:02:58,400
targeting uh the

74
00:02:58,400 --> 00:03:00,159
the crypto community

75
00:03:00,159 --> 00:03:03,200
and uh so essentially this i was hoping

76
00:03:03,200 --> 00:03:05,519
to have this published for the today's

77
00:03:05,519 --> 00:03:07,760
meetings we received some comments from

78
00:03:07,760 --> 00:03:10,000
critique that i wanted to address

79
00:03:10,000 --> 00:03:11,920
before putting this online

80
00:03:11,920 --> 00:03:14,720
so uh i will just go skim through like

81
00:03:14,720 --> 00:03:17,040
what this is all about this is right now

82
00:03:17,040 --> 00:03:18,800
like a six page letter

83
00:03:18,800 --> 00:03:22,000
uh in ieee format that summarizes the

84
00:03:22,000 --> 00:03:23,519
protocol

85
00:03:23,519 --> 00:03:27,120
it mainly uh as i said it like

86
00:03:27,120 --> 00:03:29,519
it tries in a pedagogical manner to

87
00:03:29,519 --> 00:03:31,840
describe the protocol to give a summary

88
00:03:31,840 --> 00:03:34,239
of the different uh things that are

89
00:03:34,239 --> 00:03:37,680
relevant for security analysis and uh

90
00:03:37,680 --> 00:03:39,840
one of the big parts there is

91
00:03:39,840 --> 00:03:42,000
essentially the security goals

92
00:03:42,000 --> 00:03:44,319
requirements that we agreed on as the

93
00:03:44,319 --> 00:03:46,560
first step during the working of the

94
00:03:46,560 --> 00:03:48,640
standardization process in lake

95
00:03:48,640 --> 00:03:51,760
uh so these are noted here and then so

96
00:03:51,760 --> 00:03:53,439
yeah so let me take a step back so

97
00:03:53,439 --> 00:03:54,959
essentially the document is split in

98
00:03:54,959 --> 00:03:57,360
three parts first one is like the

99
00:03:57,360 --> 00:03:59,200
security requirements that we agreed on

100
00:03:59,200 --> 00:04:01,439
in the in the requirements draft the

101
00:04:01,439 --> 00:04:05,280
second part is the protocol design

102
00:04:05,280 --> 00:04:07,360
essentially uh

103
00:04:07,360 --> 00:04:10,080
introducing ad hoc to uh the first

104
00:04:10,080 --> 00:04:11,120
comers

105
00:04:11,120 --> 00:04:15,200
uh this includes some figures on uh the

106
00:04:15,200 --> 00:04:16,560
key schedule

107
00:04:16,560 --> 00:04:18,320
on the uh

108
00:04:18,320 --> 00:04:21,358
parameters that uh constitute an ad hoc

109
00:04:21,358 --> 00:04:22,800
cipher suite

110
00:04:22,800 --> 00:04:25,520
uh and then how the different constructs

111
00:04:25,520 --> 00:04:27,919
in ad hoc are instantiated and how they

112
00:04:27,919 --> 00:04:29,919
are defined uh this includes for

113
00:04:29,919 --> 00:04:32,880
instance the ad hoc exporter interface

114
00:04:32,880 --> 00:04:36,880
the ad hoc key update function etc etc

115
00:04:36,880 --> 00:04:42,320
so this is nearly done uh i am uh main i

116
00:04:42,320 --> 00:04:44,800
hope to be able to publish this uh on

117
00:04:44,800 --> 00:04:47,440
mon beginning next week essentially what

118
00:04:47,440 --> 00:04:50,639
is right now pending is uh

119
00:04:50,639 --> 00:04:53,680
is a table that we want to uh where we

120
00:04:53,680 --> 00:04:56,320
want to summarize essentially translate

121
00:04:56,320 --> 00:04:58,479
between the different security goals

122
00:04:58,479 --> 00:05:00,639
agreed in the requirements document and

123
00:05:00,639 --> 00:05:03,520
then map this to the papers that have

124
00:05:03,520 --> 00:05:05,919
already done some formal analysis on the

125
00:05:05,919 --> 00:05:08,880
specification uh improved the different

126
00:05:08,880 --> 00:05:11,520
properties so it is this table

127
00:05:11,520 --> 00:05:13,039
so

128
00:05:13,039 --> 00:05:16,080
essentially we reference here the

129
00:05:16,080 --> 00:05:18,800
properties that were approved and what

130
00:05:18,800 --> 00:05:21,680
we would like to see proven uh during

131
00:05:21,680 --> 00:05:24,080
this six month period that we will

132
00:05:24,080 --> 00:05:27,199
trigger uh that once we agree that this

133
00:05:27,199 --> 00:05:29,520
specification is ready and good to go

134
00:05:29,520 --> 00:05:30,800
and then of course there are a bunch of

135
00:05:30,800 --> 00:05:33,440
tables summarizing the the algorithms

136
00:05:33,440 --> 00:05:35,600
that are used like everything that

137
00:05:35,600 --> 00:05:38,160
people can find in one place not to have

138
00:05:38,160 --> 00:05:40,000
to go through the different

139
00:05:40,000 --> 00:05:42,560
specifications in the itf but obviously

140
00:05:42,560 --> 00:05:45,440
the any itf documents have precedence if

141
00:05:45,440 --> 00:05:47,520
there are any inconsistencies

142
00:05:47,520 --> 00:05:49,759
with the document and the id of

143
00:05:49,759 --> 00:05:52,240
specifications but we make every attempt

144
00:05:52,240 --> 00:05:53,680
not to be any

145
00:05:53,680 --> 00:05:54,560
so

146
00:05:54,560 --> 00:05:56,479
that would be it

147
00:05:56,479 --> 00:06:00,080
as i said i will uh give it a go and

148
00:06:00,080 --> 00:06:02,240
publish this on open archives during the

149
00:06:02,240 --> 00:06:03,360
next week

150
00:06:03,360 --> 00:06:07,440
and uh send uh send an email essentially

151
00:06:07,440 --> 00:06:10,560
to the mailing list uh inviting the

152
00:06:10,560 --> 00:06:13,120
formal verification community

153
00:06:13,120 --> 00:06:14,960
to uh

154
00:06:14,960 --> 00:06:16,800
to start the analysis in the following

155
00:06:16,800 --> 00:06:19,199
period and we as i said we are doing

156
00:06:19,199 --> 00:06:21,680
this in coordination with karthik who

157
00:06:21,680 --> 00:06:23,680
will help us to reach the

158
00:06:23,680 --> 00:06:25,680
teams around the world who are who have

159
00:06:25,680 --> 00:06:27,440
expertise in this kind of

160
00:06:27,440 --> 00:06:29,600
uh studies

161
00:06:29,600 --> 00:06:32,240
so that would be it on

162
00:06:32,240 --> 00:06:35,199
on my side regarding this uh this item

163
00:06:35,199 --> 00:06:38,639
do we have any questions

164
00:06:38,720 --> 00:06:39,759
so yeah i guess it's you know it's a

165
00:06:39,759 --> 00:06:40,880
good time to jump on the queue if you

166
00:06:40,880 --> 00:06:42,880
have questions i i have a couple

167
00:06:42,880 --> 00:06:45,440
yes so so i think i think this is great

168
00:06:45,440 --> 00:06:46,960
work and it's a really good idea to try

169
00:06:46,960 --> 00:06:48,400
and lay it out this way that's friendly

170
00:06:48,400 --> 00:06:49,759
for people who want to do the work

171
00:06:49,759 --> 00:06:52,720
that's that's really a good idea

172
00:06:52,720 --> 00:06:53,919
i guess we should clarify this isn't

173
00:06:53,919 --> 00:06:55,039
really this is not a working group

174
00:06:55,039 --> 00:06:56,800
consensus document right so we don't

175
00:06:56,800 --> 00:06:58,639
need to no we shouldn't think about it

176
00:06:58,639 --> 00:06:59,919
that way

177
00:06:59,919 --> 00:07:01,199
this is like an invitation to the

178
00:07:01,199 --> 00:07:02,960
community to a different exactly do some

179
00:07:02,960 --> 00:07:04,240
work right

180
00:07:04,240 --> 00:07:05,919
so i i don't think we need to kind of

181
00:07:05,919 --> 00:07:08,400
run a call on this or or whatever but on

182
00:07:08,400 --> 00:07:09,840
the other hand i think it would be

183
00:07:09,840 --> 00:07:11,919
useful to get you know

184
00:07:11,919 --> 00:07:13,759
to be open to modifying producing a

185
00:07:13,759 --> 00:07:15,039
second version of it if there are

186
00:07:15,039 --> 00:07:18,080
comments from the working group

187
00:07:18,560 --> 00:07:21,120
uh yeah so my goal is essentially uh

188
00:07:21,120 --> 00:07:23,759
yeah i will put this online or like next

189
00:07:23,759 --> 00:07:25,039
week

190
00:07:25,039 --> 00:07:27,680
hopefully like monday tuesday and then i

191
00:07:27,680 --> 00:07:29,599
mean we can this will be published in

192
00:07:29,599 --> 00:07:32,240
open archives for the time being uh we

193
00:07:32,240 --> 00:07:34,960
can just like iterate and great yeah so

194
00:07:34,960 --> 00:07:37,280
so i i think that's perfect so so if we

195
00:07:37,280 --> 00:07:39,440
yeah if you guys uh finish this open i

196
00:07:39,440 --> 00:07:40,400
think it's a great piece of work and

197
00:07:40,400 --> 00:07:41,919
i've got a really good idea

198
00:07:41,919 --> 00:07:43,520
and then maybe invite people to comment

199
00:07:43,520 --> 00:07:45,280
on it and issue updates as as

200
00:07:45,280 --> 00:07:46,800
clarifications are needed or whatever

201
00:07:46,800 --> 00:07:48,479
that would be super cool

202
00:07:48,479 --> 00:07:50,879
um so my second question was you said

203
00:07:50,879 --> 00:07:52,800
six months how do we know that that's

204
00:07:52,800 --> 00:07:54,720
the the right period

205
00:07:54,720 --> 00:07:56,879
so this is something we discussed i

206
00:07:56,879 --> 00:07:59,360
think during one of the previous itf

207
00:07:59,360 --> 00:08:02,080
meetings uh well i mean this was like

208
00:08:02,080 --> 00:08:04,879
yeah we came up with six months as a

209
00:08:04,879 --> 00:08:08,160
period where yeah it is enough time but

210
00:08:08,160 --> 00:08:10,560
yeah again again if if people if working

211
00:08:10,560 --> 00:08:12,639
group participants have opinions on that

212
00:08:12,639 --> 00:08:13,840
i think it'd be really good to hear them

213
00:08:13,840 --> 00:08:15,840
or if there are you know if there's a

214
00:08:15,840 --> 00:08:17,919
workshop at a particular point in time

215
00:08:17,919 --> 00:08:19,199
that it's important to try and get

216
00:08:19,199 --> 00:08:20,879
feedback from and that's you know six

217
00:08:20,879 --> 00:08:22,560
and a half months or three months that's

218
00:08:22,560 --> 00:08:24,840
useful information to have

219
00:08:24,840 --> 00:08:27,199
um so

220
00:08:27,199 --> 00:08:29,599
uh i mean i guess as chairs we probably

221
00:08:29,599 --> 00:08:31,759
will put this out there and and

222
00:08:31,759 --> 00:08:33,440
the suggestion is that we'll kind of you

223
00:08:33,440 --> 00:08:35,200
know wait six months to see what happens

224
00:08:35,200 --> 00:08:37,279
uh as a default hopefully something

225
00:08:37,279 --> 00:08:38,880
happens and then we don't have to we can

226
00:08:38,880 --> 00:08:40,719
stop waiting but uh

227
00:08:40,719 --> 00:08:43,679
yeah so i hope to get from critique some

228
00:08:43,679 --> 00:08:45,680
like really actionable feedback from the

229
00:08:45,680 --> 00:08:48,000
different teams if anyone has will start

230
00:08:48,000 --> 00:08:50,880
working on this and as we will try to

231
00:08:50,880 --> 00:08:52,240
reach out to

232
00:08:52,240 --> 00:08:53,360
specifically to the different

233
00:08:53,360 --> 00:08:54,720
individuals

234
00:08:54,720 --> 00:08:55,920
yeah great so

235
00:08:55,920 --> 00:08:58,000
yeah like and ben says in the chat that

236
00:08:58,000 --> 00:08:59,519
you know tls and mls have done that

237
00:08:59,519 --> 00:09:01,600
before so that's that's fine

238
00:09:01,600 --> 00:09:02,880
those are my two questions but again

239
00:09:02,880 --> 00:09:06,720
fantastic idea and good work john

240
00:09:06,880 --> 00:09:09,040
six months is like uh

241
00:09:09,040 --> 00:09:11,680
first shot then we before this the

242
00:09:11,680 --> 00:09:13,920
document processes we always have to

243
00:09:13,920 --> 00:09:14,880
have a

244
00:09:14,880 --> 00:09:17,120
discussion so if if the working group

245
00:09:17,120 --> 00:09:19,519
thinks something is worth waiting for or

246
00:09:19,519 --> 00:09:20,880
not

247
00:09:20,880 --> 00:09:24,640
we can decide that later

248
00:09:27,920 --> 00:09:29,519
okay so everybody seems happy with six

249
00:09:29,519 --> 00:09:31,440
months uh i assume everybody is happy

250
00:09:31,440 --> 00:09:33,920
with it with the idea of this document

251
00:09:33,920 --> 00:09:35,600
it seems obviously a good idea to me

252
00:09:35,600 --> 00:09:36,720
anyway

253
00:09:36,720 --> 00:09:39,519
if anybody has any comments uh now's a

254
00:09:39,519 --> 00:09:43,279
good time before we move on

255
00:09:44,959 --> 00:09:46,399
okay so we look forward to seeing the

256
00:09:46,399 --> 00:09:47,519
link to that militia when you're when

257
00:09:47,519 --> 00:09:48,720
you think it's ready and then people can

258
00:09:48,720 --> 00:09:51,200
comment on us and and off it'll go into

259
00:09:51,200 --> 00:09:52,480
the world

260
00:09:52,480 --> 00:09:55,120
sounds good

261
00:09:56,320 --> 00:09:57,920
it's kind of you again on the next

262
00:09:57,920 --> 00:09:59,680
agenda items though

263
00:09:59,680 --> 00:10:03,200
so yes the next agenda item is on the

264
00:10:03,200 --> 00:10:06,240
draft traces i suppose so let me just

265
00:10:06,240 --> 00:10:07,120
see

266
00:10:07,120 --> 00:10:09,600
okay

267
00:10:09,680 --> 00:10:12,399
do you want to share or should i uh ted

268
00:10:12,399 --> 00:10:14,560
i already see it's loading yeah

269
00:10:14,560 --> 00:10:17,880
okay good

270
00:10:19,360 --> 00:10:21,760
uh that was me loading it then okay

271
00:10:21,760 --> 00:10:22,880
okay

272
00:10:22,880 --> 00:10:23,920
there we go

273
00:10:23,920 --> 00:10:26,160
there you go yeah okay yeah so this is

274
00:10:26,160 --> 00:10:28,480
just like a brief wrap up of the

275
00:10:28,480 --> 00:10:31,279
adoption call we had on draft traces

276
00:10:31,279 --> 00:10:33,200
steven can you go to the next slide

277
00:10:33,200 --> 00:10:36,560
uh so we launched uh the working group

278
00:10:36,560 --> 00:10:39,200
adoption call and on 18th of october for

279
00:10:39,200 --> 00:10:40,320
two weeks

280
00:10:40,320 --> 00:10:42,720
after the initial agreement during the

281
00:10:42,720 --> 00:10:44,240
last interim

282
00:10:44,240 --> 00:10:47,360
we got feedback from uh

283
00:10:47,360 --> 00:10:49,200
three implement uh so essentially from

284
00:10:49,200 --> 00:10:51,519
marco stefan sean

285
00:10:51,519 --> 00:10:54,720
uh and john who is also a co-author

286
00:10:54,720 --> 00:10:58,240
general feedback we received is that uh

287
00:10:58,240 --> 00:11:00,720
people support adoption there is

288
00:11:00,720 --> 00:11:03,360
there were no opinions uh

289
00:11:03,360 --> 00:11:06,079
that this should not be adopted and

290
00:11:06,079 --> 00:11:09,040
people support the publication as an

291
00:11:09,040 --> 00:11:11,519
informational rfc

292
00:11:11,519 --> 00:11:14,720
uh there was one uh

293
00:11:14,720 --> 00:11:18,079
remark brought up by sean who would uh

294
00:11:18,079 --> 00:11:18,880
who

295
00:11:18,880 --> 00:11:20,800
stressed that we really want to ensure

296
00:11:20,800 --> 00:11:23,600
correctness of this specification which

297
00:11:23,600 --> 00:11:26,720
uh really makes sense by verifying the

298
00:11:26,720 --> 00:11:29,519
test vectors that are that are uh

299
00:11:29,519 --> 00:11:31,040
presented there with multiple

300
00:11:31,040 --> 00:11:32,399
implementations

301
00:11:32,399 --> 00:11:35,040
then one thing that is not really clear

302
00:11:35,040 --> 00:11:38,640
yet is on the scope of the document so i

303
00:11:38,640 --> 00:11:39,920
i

304
00:11:39,920 --> 00:11:43,839
discuss this more in the next slide

305
00:11:45,360 --> 00:11:50,480
uh so currently the scope of the draft

306
00:11:50,480 --> 00:11:54,000
is essentially the uh draft covers

307
00:11:54,000 --> 00:11:57,200
methods uh signature signature and

308
00:11:57,200 --> 00:11:58,959
static static

309
00:11:58,959 --> 00:12:01,720
with cipher suit 0 which is the

310
00:12:01,720 --> 00:12:06,000
x25519 based suit suite

311
00:12:06,000 --> 00:12:08,639
there was interest expressed for the

312
00:12:08,639 --> 00:12:11,600
nest curve p256

313
00:12:11,600 --> 00:12:12,399
uh

314
00:12:12,399 --> 00:12:16,399
we uh i think marco and stefan uh raised

315
00:12:16,399 --> 00:12:19,200
interest around having test vectors on

316
00:12:19,200 --> 00:12:21,920
cypher suites two and three specifically

317
00:12:21,920 --> 00:12:24,880
so what we would like to hear now from

318
00:12:24,880 --> 00:12:26,320
the working group

319
00:12:26,320 --> 00:12:27,200
is

320
00:12:27,200 --> 00:12:29,680
what are your opinions on this i mean

321
00:12:29,680 --> 00:12:30,720
first

322
00:12:30,720 --> 00:12:32,079
if you

323
00:12:32,079 --> 00:12:33,920
object to this document being published

324
00:12:33,920 --> 00:12:35,200
as an rfc

325
00:12:35,200 --> 00:12:37,920
and then second what are your thoughts

326
00:12:37,920 --> 00:12:40,240
on the exact scope should we be

327
00:12:40,240 --> 00:12:43,600
exhaustive and cover each method with

328
00:12:43,600 --> 00:12:46,000
all the cipher suites that are defined

329
00:12:46,000 --> 00:12:47,920
so essentially we select a set of cipher

330
00:12:47,920 --> 00:12:50,480
suites like for instance uh zero and

331
00:12:50,480 --> 00:12:52,880
then two which would cover the nist

332
00:12:52,880 --> 00:12:56,560
curve and the edwards curve

333
00:12:58,560 --> 00:13:00,720
or just be selective and do with the

334
00:13:00,720 --> 00:13:02,720
different methods uh

335
00:13:02,720 --> 00:13:04,639
like as john proposed on the email

336
00:13:04,639 --> 00:13:06,480
mailing list so yeah we are really

337
00:13:06,480 --> 00:13:11,160
looking to for your feedback here

338
00:13:20,240 --> 00:13:24,959
do we have any comments on this so i

339
00:13:27,600 --> 00:13:31,120
so timothy yes

340
00:13:31,120 --> 00:13:34,240
so i don't we will still have uh like a

341
00:13:34,240 --> 00:13:35,200
github

342
00:13:35,200 --> 00:13:37,360
page where we have a lot of other test

343
00:13:37,360 --> 00:13:39,680
factors and i i don't think we should be

344
00:13:39,680 --> 00:13:42,480
exhaustive and in the draft and

345
00:13:42,480 --> 00:13:43,839
just have them

346
00:13:43,839 --> 00:13:44,959
um

347
00:13:44,959 --> 00:13:47,040
as additional support and then on the

348
00:13:47,040 --> 00:13:48,639
github page we can have much more test

349
00:13:48,639 --> 00:13:51,600
factors and be much more exhaustive but

350
00:13:51,600 --> 00:13:52,959
it would be difficult to have an

351
00:13:52,959 --> 00:13:55,120
exhaustive list

352
00:13:55,120 --> 00:13:57,360
of all the combinations

353
00:13:57,360 --> 00:14:00,000
in the drafts

354
00:14:01,199 --> 00:14:04,240
yeah so i mean to be clear i mean i was

355
00:14:04,240 --> 00:14:06,079
not implying that we should have like

356
00:14:06,079 --> 00:14:09,199
all the cipher suites just yeah no no no

357
00:14:09,199 --> 00:14:11,839
yeah so this is just but it's uh i think

358
00:14:11,839 --> 00:14:14,399
i heard this comment during the last uh

359
00:14:14,399 --> 00:14:17,120
interim and i i can't remember who said

360
00:14:17,120 --> 00:14:19,279
it but it's difficult to decide like

361
00:14:19,279 --> 00:14:21,120
where to stop of course this could be

362
00:14:21,120 --> 00:14:23,120
the discussion we're having right now is

363
00:14:23,120 --> 00:14:25,639
what should we include and whatnot so

364
00:14:25,639 --> 00:14:28,240
specifically which cypher suits and

365
00:14:28,240 --> 00:14:30,880
methods would you like to see there

366
00:14:30,880 --> 00:14:32,480
i think

367
00:14:32,480 --> 00:14:35,600
i would have all methods and maybe

368
00:14:35,600 --> 00:14:39,199
cipher sweet 0 and 2.

369
00:14:39,199 --> 00:14:41,199
okay

370
00:14:41,199 --> 00:14:43,279
all methods but does that mean each

371
00:14:43,279 --> 00:14:44,800
method which

372
00:14:44,800 --> 00:14:47,680
both ciphers with zero and two

373
00:14:47,680 --> 00:14:49,519
yeah

374
00:14:49,519 --> 00:14:51,600
okay so

375
00:14:51,600 --> 00:14:53,279
okay

376
00:14:53,279 --> 00:14:55,360
okay let's have that in the minutes then

377
00:14:55,360 --> 00:14:59,240
do we have any other opinions

378
00:14:59,360 --> 00:15:01,600
john

379
00:15:02,880 --> 00:15:03,680
my

380
00:15:03,680 --> 00:15:06,959
idea would be that they have a lot of

381
00:15:06,959 --> 00:15:09,920
test vectors basically no limitation in

382
00:15:09,920 --> 00:15:12,399
json format on github

383
00:15:12,399 --> 00:15:15,279
and then my proposal would be to select

384
00:15:15,279 --> 00:15:19,160
quite few for the drafts with a lot of

385
00:15:19,160 --> 00:15:22,079
explanations i think

386
00:15:22,079 --> 00:15:24,000
if you want to check your implementation

387
00:15:24,000 --> 00:15:25,760
against something you probably do that

388
00:15:25,760 --> 00:15:28,480
with a json-based test vector if you

389
00:15:28,480 --> 00:15:30,959
want to understand

390
00:15:30,959 --> 00:15:34,000
more about why things are like there is

391
00:15:34,000 --> 00:15:36,160
and walk through test vectors then you

392
00:15:36,160 --> 00:15:37,360
look at

393
00:15:37,360 --> 00:15:38,839
the draft so i

394
00:15:38,839 --> 00:15:42,639
think beyond like two three traces i

395
00:15:42,639 --> 00:15:44,800
think there's

396
00:15:44,800 --> 00:15:48,480
you don't get increased understanding if

397
00:15:48,480 --> 00:15:50,800
with the uh with the explanations in the

398
00:15:50,800 --> 00:15:52,240
draw so i think

399
00:15:52,240 --> 00:15:54,639
for correctness case i would

400
00:15:54,639 --> 00:15:58,079
say two to three traces and

401
00:15:58,079 --> 00:16:00,800
focus on making this correct

402
00:16:00,800 --> 00:16:02,639
there's a lot of work

403
00:16:02,639 --> 00:16:05,279
built to write more traces and also to

404
00:16:05,279 --> 00:16:08,600
check them

405
00:16:09,279 --> 00:16:11,920
so yeah i mean and it also reflects that

406
00:16:11,920 --> 00:16:13,519
the comments in

407
00:16:13,519 --> 00:16:15,120
jabber there so

408
00:16:15,120 --> 00:16:16,560
that you know that sounds like a plan

409
00:16:16,560 --> 00:16:18,880
that people are happy with um i guess

410
00:16:18,880 --> 00:16:20,800
the action would be to create a place in

411
00:16:20,800 --> 00:16:24,639
github for traces to be posted

412
00:16:24,800 --> 00:16:26,560
and then to at some point select from

413
00:16:26,560 --> 00:16:31,079
those to which goes into the draft

414
00:16:35,900 --> 00:16:37,120
[Music]

415
00:16:37,120 --> 00:16:38,560
stephen that there are already test

416
00:16:38,560 --> 00:16:40,560
factors in in github

417
00:16:40,560 --> 00:16:41,519
um

418
00:16:41,519 --> 00:16:43,839
oh okay sorry

419
00:16:43,839 --> 00:16:44,959
pardon me

420
00:16:44,959 --> 00:16:46,240
some of them some of them are in the

421
00:16:46,240 --> 00:16:47,600
traces

422
00:16:47,600 --> 00:16:49,199
okay so so we're inviting people to

423
00:16:49,199 --> 00:16:52,000
submit prs uh with with new ones is that

424
00:16:52,000 --> 00:16:54,000
right

425
00:16:54,000 --> 00:16:56,079
yes we actually have a new contributor

426
00:16:56,079 --> 00:16:58,079
um who's going to do

427
00:16:58,079 --> 00:17:00,720
cypher sweet two and three um

428
00:17:00,720 --> 00:17:02,079
and we'd also be becoming a new

429
00:17:02,079 --> 00:17:04,880
co-author of the tracy's draft

430
00:17:04,880 --> 00:17:07,599
great so that's marek sirafin from assam

431
00:17:07,599 --> 00:17:08,480
block

432
00:17:08,480 --> 00:17:09,760
good stuff

433
00:17:09,760 --> 00:17:12,640
marco i see you're in the queue

434
00:17:12,640 --> 00:17:15,280
yeah hi uh for the draft i personally

435
00:17:15,280 --> 00:17:17,919
find ideal a compromise between what

436
00:17:17,919 --> 00:17:20,319
timothy said basically and what is in

437
00:17:20,319 --> 00:17:23,199
the slide now as as selective so

438
00:17:23,199 --> 00:17:25,839
basically methods zero and three for

439
00:17:25,839 --> 00:17:29,679
both ciphers with zero and two

440
00:17:29,679 --> 00:17:31,600
but yeah just my preference and i'm just

441
00:17:31,600 --> 00:17:33,520
reiterating what i wrote to the list a

442
00:17:33,520 --> 00:17:36,160
few weeks ago

443
00:17:40,320 --> 00:17:42,240
but do you mark

444
00:17:42,240 --> 00:17:43,919
okay yeah mark would you like to see

445
00:17:43,919 --> 00:17:46,480
also methods one or two one

446
00:17:46,480 --> 00:17:48,400
and two

447
00:17:48,400 --> 00:17:52,000
i think zero and three can be sufficient

448
00:17:52,000 --> 00:17:53,520
at least for me

449
00:17:53,520 --> 00:17:55,600
i can understand someone

450
00:17:55,600 --> 00:17:59,320
hoping for them too

451
00:18:03,039 --> 00:18:05,280
okay so let's continue this discussion

452
00:18:05,280 --> 00:18:08,080
on the mailing list

453
00:18:12,880 --> 00:18:16,480
okay let's uh let's take an action on on

454
00:18:16,480 --> 00:18:18,960
making a concrete proposal based on this

455
00:18:18,960 --> 00:18:20,400
input and then

456
00:18:20,400 --> 00:18:22,400
get back to the main list

457
00:18:22,400 --> 00:18:24,080
with that

458
00:18:24,080 --> 00:18:26,320
great

459
00:18:26,720 --> 00:18:28,320
okay uh we're we're only a couple of

460
00:18:28,320 --> 00:18:30,080
minutes behind time so that's that's

461
00:18:30,080 --> 00:18:32,080
pretty good um so i think we're we're

462
00:18:32,080 --> 00:18:34,559
ready to move on to the next agenda

463
00:18:34,559 --> 00:18:37,760
which is john i guess uh so john if do

464
00:18:37,760 --> 00:18:41,200
you want to hit the share slides button

465
00:18:41,200 --> 00:18:44,320
uh so if you hit the the the piece of

466
00:18:44,320 --> 00:18:46,400
paper thing to the left of the join the

467
00:18:46,400 --> 00:18:47,840
cue button at the right is joining the q

468
00:18:47,840 --> 00:18:49,520
button then we can give you permission

469
00:18:49,520 --> 00:18:51,919
just to control the slide deck yourself

470
00:18:51,919 --> 00:18:54,640
i have already asked for others i see

471
00:18:54,640 --> 00:18:57,840
that there you go

472
00:18:59,840 --> 00:19:01,840
so okay so you're running the show

473
00:19:01,840 --> 00:19:06,000
yeah so these are the next three items

474
00:19:06,000 --> 00:19:08,799
on the agenda status open issues and

475
00:19:08,799 --> 00:19:10,720
also

476
00:19:10,720 --> 00:19:12,640
reduce

477
00:19:12,640 --> 00:19:15,760
uh thanks ben

478
00:19:16,240 --> 00:19:18,320
so this we have five minutes for the

479
00:19:18,320 --> 00:19:20,799
state to see us going through that

480
00:19:20,799 --> 00:19:21,919
quite

481
00:19:21,919 --> 00:19:23,440
quickly

482
00:19:23,440 --> 00:19:27,039
all the changes from series 8 to 11 was

483
00:19:27,039 --> 00:19:30,400
already discussed at the interim

484
00:19:30,400 --> 00:19:32,080
uh it was

485
00:19:32,080 --> 00:19:35,200
we made an effort to do try to

486
00:19:35,200 --> 00:19:36,640
do all the

487
00:19:36,640 --> 00:19:40,000
all technical changes until 11

488
00:19:40,000 --> 00:19:42,320
so we could have up-to-date test factors

489
00:19:42,320 --> 00:19:44,559
that we can implement uh so there's

490
00:19:44,559 --> 00:19:47,360
changes to the key derivation made a lot

491
00:19:47,360 --> 00:19:49,600
of simplification also

492
00:19:49,600 --> 00:19:50,960
fixes

493
00:19:50,960 --> 00:19:54,400
um then some changes and simplifications

494
00:19:54,400 --> 00:19:59,280
to the negotiation of cypher suites

495
00:19:59,280 --> 00:20:02,240
added the mac length to the ciphers

496
00:20:02,240 --> 00:20:05,120
instead of relying on the siphon

497
00:20:05,120 --> 00:20:08,120
aad

498
00:20:08,640 --> 00:20:09,440
we

499
00:20:09,440 --> 00:20:12,080
made this combination of the

500
00:20:12,080 --> 00:20:15,360
d y and ciphertext2 to match this

501
00:20:15,360 --> 00:20:20,360
to meet this 45 byte requirement

502
00:20:20,410 --> 00:20:23,440
[Music]

503
00:20:23,440 --> 00:20:27,840
cwt and ccs was added

504
00:20:27,840 --> 00:20:32,400
support for these they are named k

505
00:20:32,400 --> 00:20:36,080
cvt and kccs to indicate that these are

506
00:20:36,080 --> 00:20:38,480
cyborg web token and symbol claims that

507
00:20:38,480 --> 00:20:40,799
with a key inside them

508
00:20:40,799 --> 00:20:44,559
uh they work like certificates

509
00:20:44,559 --> 00:20:49,760
main changes to the ead type

510
00:20:49,760 --> 00:20:52,559
there was quite a lot of restructuring

511
00:20:52,559 --> 00:20:55,679
and then quite a lot of

512
00:20:55,679 --> 00:20:57,039
fixes

513
00:20:57,039 --> 00:20:57,840
so

514
00:20:57,840 --> 00:21:01,679
then 11 to 12 this was or has been done

515
00:21:01,679 --> 00:21:04,880
after the interim

516
00:21:05,039 --> 00:21:06,080
uh

517
00:21:06,080 --> 00:21:08,720
there's basically clarifications there's

518
00:21:08,720 --> 00:21:11,440
no technical changes that affect the

519
00:21:11,440 --> 00:21:13,600
test vectors

520
00:21:13,600 --> 00:21:18,400
so the codes cosi has sender parameters

521
00:21:18,400 --> 00:21:22,559
we added a clarification that because

522
00:21:22,559 --> 00:21:25,200
it does not use this or

523
00:21:25,200 --> 00:21:28,000
i don't remember but the exact language

524
00:21:28,000 --> 00:21:30,720
but when you use the header parameters

525
00:21:30,720 --> 00:21:33,520
in ad hoc they always

526
00:21:33,520 --> 00:21:36,400
identify the sender

527
00:21:36,400 --> 00:21:39,280
then there was a discussion of pqc

528
00:21:39,280 --> 00:21:42,080
so it was added a clarification to the

529
00:21:42,080 --> 00:21:43,840
document that

530
00:21:43,840 --> 00:21:49,280
pqc chems could be added later to method

531
00:21:49,280 --> 00:21:50,440
0.

532
00:21:50,440 --> 00:21:51,840
[Music]

533
00:21:51,840 --> 00:21:54,559
no technical change this cannot be used

534
00:21:54,559 --> 00:21:55,679
straight away

535
00:21:55,679 --> 00:21:56,840
at the

536
00:21:56,840 --> 00:22:00,080
moment then the clarification that all

537
00:22:00,080 --> 00:22:02,080
cozy signatures

538
00:22:02,080 --> 00:22:05,679
are supported um

539
00:22:05,679 --> 00:22:07,919
the current plan is that the adhoc

540
00:22:07,919 --> 00:22:10,840
supports all signatures from cosi that

541
00:22:10,840 --> 00:22:16,320
includes hash based rsa and wall not

542
00:22:16,320 --> 00:22:19,360
not i don't know if anybody wants to use

543
00:22:19,360 --> 00:22:21,919
them but they the plan is to support

544
00:22:21,919 --> 00:22:23,679
the whole future

545
00:22:23,679 --> 00:22:25,360
there's

546
00:22:25,360 --> 00:22:28,240
some clarification about cypher c suite

547
00:22:28,240 --> 00:22:30,880
we made updates to the mti section it

548
00:22:30,880 --> 00:22:34,080
was based on the discussion in the year

549
00:22:34,080 --> 00:22:36,240
in the interim uh

550
00:22:36,240 --> 00:22:37,360
basically

551
00:22:37,360 --> 00:22:39,200
must support kid for the other

552
00:22:39,200 --> 00:22:41,760
parameters that was to do we just added

553
00:22:41,760 --> 00:22:44,640
that it's up to the implementation to

554
00:22:44,640 --> 00:22:47,520
support uh whatever they want

555
00:22:47,520 --> 00:22:49,600
this aligns with the other parameters of

556
00:22:49,600 --> 00:22:50,640
this type

557
00:22:50,640 --> 00:22:52,720
um

558
00:22:52,720 --> 00:22:55,679
then the cozy processing was moved to an

559
00:22:55,679 --> 00:22:57,200
appendix

560
00:22:57,200 --> 00:22:58,559
to shorten

561
00:22:58,559 --> 00:22:59,679
the body

562
00:22:59,679 --> 00:23:01,760
and then there's some

563
00:23:01,760 --> 00:23:05,520
internal references that was fixed

564
00:23:05,520 --> 00:23:06,400
um

565
00:23:06,400 --> 00:23:10,640
any questions on this status

566
00:23:11,840 --> 00:23:15,760
how do we why do we move to issues

567
00:23:18,720 --> 00:23:22,600
yeah no hands

568
00:23:23,360 --> 00:23:24,559
uh

569
00:23:24,559 --> 00:23:27,520
then according to the agenda we have 50

570
00:23:27,520 --> 00:23:29,440
minutes four

571
00:23:29,440 --> 00:23:33,120
issues i think there's 12 left

572
00:23:33,120 --> 00:23:36,159
so this is a short list of all the open

573
00:23:36,159 --> 00:23:39,679
issues um excluding test vectors and the

574
00:23:39,679 --> 00:23:41,760
reviews

575
00:23:41,760 --> 00:23:44,400
we have done some minor

576
00:23:44,400 --> 00:23:47,039
cryptographic explanations

577
00:23:47,039 --> 00:23:48,159
mainly in

578
00:23:48,159 --> 00:23:50,880
by this paper we wrote

579
00:23:50,880 --> 00:23:52,960
that malaysia presented and also some

580
00:23:52,960 --> 00:23:54,240
comments from

581
00:23:54,240 --> 00:23:57,360
implementers clarify that the it is

582
00:23:57,360 --> 00:23:59,279
actually a technical change the mac must

583
00:23:59,279 --> 00:24:02,320
be at least eight bytes um

584
00:24:02,320 --> 00:24:05,279
clarified where compact representation

585
00:24:05,279 --> 00:24:06,880
is used

586
00:24:06,880 --> 00:24:09,279
uh other clarification that the norms

587
00:24:09,279 --> 00:24:11,840
also provide a binding between the kt

588
00:24:11,840 --> 00:24:13,039
update and

589
00:24:13,039 --> 00:24:15,279
the message that triggered the key

590
00:24:15,279 --> 00:24:17,679
update or it can do that

591
00:24:17,679 --> 00:24:20,400
and then an explanation why ad hoc is

592
00:24:20,400 --> 00:24:21,840
not using

593
00:24:21,840 --> 00:24:23,919
a running hash and the reason for that

594
00:24:23,919 --> 00:24:26,240
is that that's not supported on many

595
00:24:26,240 --> 00:24:29,440
constrained platforms

596
00:24:29,440 --> 00:24:32,880
a new issue on

597
00:24:32,880 --> 00:24:35,679
adding privacy consideration based on

598
00:24:35,679 --> 00:24:38,080
the model t discussions

599
00:24:38,080 --> 00:24:41,200
and the link here is documented by

600
00:24:41,200 --> 00:24:43,600
yellow article and stephen farrell

601
00:24:43,600 --> 00:24:46,240
this would not be any technical

602
00:24:46,240 --> 00:24:49,679
exchanges but considerations that

603
00:24:49,679 --> 00:24:51,760
if you use the same sort of get to

604
00:24:51,760 --> 00:24:55,520
several servers or clients they can

605
00:24:55,520 --> 00:24:58,080
work together and see that

606
00:24:58,080 --> 00:25:01,279
you connected to all of them

607
00:25:01,279 --> 00:25:02,559
um

608
00:25:02,559 --> 00:25:05,679
then in issue 193

609
00:25:05,679 --> 00:25:08,320
question about adding hp

610
00:25:08,320 --> 00:25:10,480
e algorithm for method

611
00:25:10,480 --> 00:25:12,559
0 as i said there was a clarification

612
00:25:12,559 --> 00:25:14,559
that this could be done

613
00:25:14,559 --> 00:25:17,120
later after that

614
00:25:17,120 --> 00:25:20,720
there is a new draft in cosi that adds

615
00:25:20,720 --> 00:25:22,320
hpk

616
00:25:22,320 --> 00:25:23,120
e

617
00:25:23,120 --> 00:25:25,840
uh algorithms there's discussion in cosy

618
00:25:25,840 --> 00:25:27,840
whether this will just

619
00:25:27,840 --> 00:25:30,159
register as subset of algorithms or if

620
00:25:30,159 --> 00:25:31,279
it will

621
00:25:31,279 --> 00:25:32,640
support all

622
00:25:32,640 --> 00:25:35,520
future hpk algorithms and also

623
00:25:35,520 --> 00:25:37,919
discussion whether this is the way to do

624
00:25:37,919 --> 00:25:40,880
key derivation in cosi in the future or

625
00:25:40,880 --> 00:25:43,200
if it's one way to do

626
00:25:43,200 --> 00:25:45,200
key iteration in the future i think the

627
00:25:45,200 --> 00:25:48,640
only reason to do this now would be if

628
00:25:48,640 --> 00:25:49,919
cool c

629
00:25:49,919 --> 00:25:53,760
already now decides that hpke is how we

630
00:25:53,760 --> 00:25:56,720
will use pqc chems in the future then it

631
00:25:56,720 --> 00:25:58,080
would be worth

632
00:25:58,080 --> 00:26:00,799
adding and this would not be

633
00:26:00,799 --> 00:26:02,799
it will not change any of the current

634
00:26:02,799 --> 00:26:06,080
methods or test vectors it would be

635
00:26:06,080 --> 00:26:10,480
gx and gy you would put a different

636
00:26:10,480 --> 00:26:13,600
byte string in these when you use a pqc

637
00:26:13,600 --> 00:26:14,640
chem

638
00:26:14,640 --> 00:26:17,440
but currently that is not specified that

639
00:26:17,440 --> 00:26:19,279
will require

640
00:26:19,279 --> 00:26:22,000
some some new draft in the future that's

641
00:26:22,000 --> 00:26:24,000
probably the best thing to do with the

642
00:26:24,000 --> 00:26:25,550
new cypher suit

643
00:26:25,550 --> 00:26:27,360
[Music]

644
00:26:27,360 --> 00:26:28,720
then the

645
00:26:28,720 --> 00:26:30,520
information about

646
00:26:30,520 --> 00:26:33,520
non-repudiation was wrong

647
00:26:33,520 --> 00:26:35,760
said that you needed to save the

648
00:26:35,760 --> 00:26:38,880
thermal key that's not true you can save

649
00:26:38,880 --> 00:26:41,600
all the input to the signature function

650
00:26:41,600 --> 00:26:44,080
and then you can prove that the other

651
00:26:44,080 --> 00:26:46,559
party um

652
00:26:46,559 --> 00:26:49,200
took part in the protocol

653
00:26:49,200 --> 00:26:52,880
this is similar to i i think as the

654
00:26:52,880 --> 00:26:55,520
the information is encrypted in ad hoc

655
00:26:55,520 --> 00:26:59,159
in tls 102 the thing the

656
00:26:59,159 --> 00:27:01,600
signature is

657
00:27:01,600 --> 00:27:03,120
i don't

658
00:27:03,120 --> 00:27:05,520
in some protocols you can

659
00:27:05,520 --> 00:27:08,400
prove it by just looking at the

660
00:27:08,400 --> 00:27:10,480
information on the wire in ad hoc the

661
00:27:10,480 --> 00:27:12,080
other part needs to

662
00:27:12,080 --> 00:27:13,039
save

663
00:27:13,039 --> 00:27:16,320
things it's not visible from the wire

664
00:27:16,320 --> 00:27:17,919
and then we have an

665
00:27:17,919 --> 00:27:20,480
issue about optimal padding that's blue

666
00:27:20,480 --> 00:27:24,399
because i have a separate slide on that

667
00:27:26,520 --> 00:27:29,840
186 is a discussion about

668
00:27:29,840 --> 00:27:33,120
the ead internal

669
00:27:33,120 --> 00:27:34,960
structure um

670
00:27:34,960 --> 00:27:37,520
and the api this was

671
00:27:37,520 --> 00:27:40,240
based from comments from implementers

672
00:27:40,240 --> 00:27:42,720
where this seaboard encoding

673
00:27:42,720 --> 00:27:46,080
should be done and how um

674
00:27:46,080 --> 00:27:48,159
and also

675
00:27:48,159 --> 00:27:51,679
a bit unclear still how other protocols

676
00:27:51,679 --> 00:27:55,360
will will use the ead interface

677
00:27:55,360 --> 00:27:56,159
uh

678
00:27:56,159 --> 00:27:58,240
my reflection for this discussion is

679
00:27:58,240 --> 00:28:01,919
that we probably need to specify it as

680
00:28:01,919 --> 00:28:04,080
we cannot have

681
00:28:04,080 --> 00:28:05,039
any

682
00:28:05,039 --> 00:28:07,360
we need to specify as a byte string to

683
00:28:07,360 --> 00:28:09,120
make sure that

684
00:28:09,120 --> 00:28:13,120
the data is correct cyborg

685
00:28:13,120 --> 00:28:15,679
it does not affect the security

686
00:28:15,679 --> 00:28:18,080
of adhoc as such but

687
00:28:18,080 --> 00:28:20,000
you could imagine that some other

688
00:28:20,000 --> 00:28:22,720
application

689
00:28:22,720 --> 00:28:24,320
assumes that

690
00:28:24,320 --> 00:28:26,960
it actually is correct seaborn and then

691
00:28:26,960 --> 00:28:29,120
it should be um

692
00:28:29,120 --> 00:28:31,440
but i think this this needs more

693
00:28:31,440 --> 00:28:33,279
discussion and

694
00:28:33,279 --> 00:28:35,200
then there is security consideration for

695
00:28:35,200 --> 00:28:37,679
two fiances that done in ad hoc or in

696
00:28:37,679 --> 00:28:39,360
cosi

697
00:28:39,360 --> 00:28:42,240
and too many words

698
00:28:42,240 --> 00:28:44,080
there is regarding compact

699
00:28:44,080 --> 00:28:45,679
representation

700
00:28:45,679 --> 00:28:49,279
there's a draft in cfrg that

701
00:28:49,279 --> 00:28:52,080
suggests that for hpke

702
00:28:52,080 --> 00:28:53,600
um

703
00:28:53,600 --> 00:28:56,000
don said he didn't get

704
00:28:56,000 --> 00:28:57,279
any

705
00:28:57,279 --> 00:28:59,360
did not get positive feedback for that i

706
00:28:59,360 --> 00:29:01,760
wasn't there when he presented but i

707
00:29:01,760 --> 00:29:05,440
sent the mail to cfrg asking if

708
00:29:05,440 --> 00:29:07,039
there was any need to

709
00:29:07,039 --> 00:29:10,480
do any alignment um

710
00:29:10,480 --> 00:29:12,799
if see if audrey thinks so i guess we

711
00:29:12,799 --> 00:29:15,520
will do that otherwise probably not

712
00:29:15,520 --> 00:29:16,960
um

713
00:29:16,960 --> 00:29:18,799
then we have effect of limited

714
00:29:18,799 --> 00:29:20,080
randomness

715
00:29:20,080 --> 00:29:23,120
there joran has made a pr and it's a

716
00:29:23,120 --> 00:29:24,000
very

717
00:29:24,000 --> 00:29:27,520
short period that's a reference to

718
00:29:27,520 --> 00:29:31,120
an appendix in oscor as discussed in the

719
00:29:31,120 --> 00:29:33,918
interim

720
00:29:36,640 --> 00:29:38,960
see that we have

721
00:29:38,960 --> 00:29:42,799
uh here's a slide about optimal padding

722
00:29:42,799 --> 00:29:44,799
the issue here is that

723
00:29:44,799 --> 00:29:47,600
uh ad hoc security consideration so

724
00:29:47,600 --> 00:29:49,600
privacy consideration doesn't

725
00:29:49,600 --> 00:29:52,640
currently does not say that adhoc

726
00:29:52,640 --> 00:29:55,279
reveals the length of your identity and

727
00:29:55,279 --> 00:29:57,840
also the length of ead

728
00:29:57,840 --> 00:30:00,000
i mean and

729
00:30:00,000 --> 00:30:03,200
there is an appear that i have written

730
00:30:03,200 --> 00:30:05,039
190

731
00:30:05,039 --> 00:30:07,679
that adds security consideration for

732
00:30:07,679 --> 00:30:08,480
this

733
00:30:08,480 --> 00:30:11,520
and it also had a padding mechanism

734
00:30:11,520 --> 00:30:14,320
tls and i cast padding mechanisms for

735
00:30:14,320 --> 00:30:15,279
this

736
00:30:15,279 --> 00:30:18,559
uh unclear how much they are

737
00:30:18,559 --> 00:30:20,399
used but

738
00:30:20,399 --> 00:30:22,720
my proposal would be that we

739
00:30:22,720 --> 00:30:25,279
add this as an optional feature you

740
00:30:25,279 --> 00:30:27,760
don't have to implement it if you don't

741
00:30:27,760 --> 00:30:30,640
want but we can and

742
00:30:30,640 --> 00:30:33,279
padding would not be needed for

743
00:30:33,279 --> 00:30:35,440
several of the identities you can choose

744
00:30:35,440 --> 00:30:38,720
a fixed length identifier

745
00:30:38,720 --> 00:30:42,640
instead uh but i think this is a useful

746
00:30:42,640 --> 00:30:44,080
feature to

747
00:30:44,080 --> 00:30:45,679
have and

748
00:30:45,679 --> 00:30:48,080
it doesn't affect anything else if you

749
00:30:48,080 --> 00:30:52,879
don't implement it you can ignore it

750
00:30:55,360 --> 00:30:58,399
would be any comments on this before we

751
00:30:58,399 --> 00:31:02,279
move on to test vectors

752
00:31:07,870 --> 00:31:11,149
[Music]

753
00:31:16,399 --> 00:31:20,000
resolutions for most of these um

754
00:31:20,000 --> 00:31:21,440
what's the best way to close a bunch of

755
00:31:21,440 --> 00:31:22,720
them that we think are ready to close

756
00:31:22,720 --> 00:31:24,480
just maybe send one mail to the list

757
00:31:24,480 --> 00:31:26,320
with a

758
00:31:26,320 --> 00:31:27,679
you know listing all of the issues you

759
00:31:27,679 --> 00:31:30,399
propose to close and then just giving a

760
00:31:30,399 --> 00:31:31,519
giving people a few days then going

761
00:31:31,519 --> 00:31:32,960
ahead and doing it

762
00:31:32,960 --> 00:31:34,240
yeah

763
00:31:34,240 --> 00:31:36,159
okay so so i think that's the plan so at

764
00:31:36,159 --> 00:31:37,679
the point do you think it's it's best to

765
00:31:37,679 --> 00:31:39,519
do that in the next short while

766
00:31:39,519 --> 00:31:41,679
if you send a mail to the list then say

767
00:31:41,679 --> 00:31:42,480
you know

768
00:31:42,480 --> 00:31:44,720
issue blah propose resolution close and

769
00:31:44,720 --> 00:31:46,880
so on yeah people a few days don't

770
00:31:46,880 --> 00:31:48,399
forget and do it

771
00:31:48,399 --> 00:31:49,679
yeah

772
00:31:49,679 --> 00:31:51,600
so if you have any comments on any of

773
00:31:51,600 --> 00:31:55,199
these issues please um

774
00:31:55,440 --> 00:31:58,080
please be active on github or send an

775
00:31:58,080 --> 00:32:00,880
email to the list of course

776
00:32:00,880 --> 00:32:03,679
good then there's issues about

777
00:32:03,679 --> 00:32:07,600
test factors i think these we have

778
00:32:07,600 --> 00:32:09,600
already discussed earlier in the

779
00:32:09,600 --> 00:32:12,158
meetings

780
00:32:12,799 --> 00:32:15,919
at least 167 the content of the traces

781
00:32:15,919 --> 00:32:18,120
document

782
00:32:18,120 --> 00:32:23,600
188 is an issue about um

783
00:32:23,600 --> 00:32:26,480
it says missing suits are but what is

784
00:32:26,480 --> 00:32:30,080
proposed is to have a list of supported

785
00:32:30,080 --> 00:32:30,960
the

786
00:32:30,960 --> 00:32:35,519
cipher suites both in the initiator and

787
00:32:35,519 --> 00:32:37,919
the responder um

788
00:32:37,919 --> 00:32:39,840
this would be something different suits

789
00:32:39,840 --> 00:32:42,799
eye and suits are only have meaning in

790
00:32:42,799 --> 00:32:46,159
the actual messages they might be

791
00:32:46,159 --> 00:32:47,039
they

792
00:32:47,039 --> 00:32:49,600
they might be truncated from the full

793
00:32:49,600 --> 00:32:52,799
list of supported ciphers

794
00:32:52,799 --> 00:32:54,000
um

795
00:32:54,000 --> 00:32:54,720
i

796
00:32:54,720 --> 00:32:55,679
haven't

797
00:32:55,679 --> 00:32:56,960
we

798
00:32:56,960 --> 00:33:00,799
it's not completely trivial we had this

799
00:33:00,799 --> 00:33:02,320
before but that

800
00:33:02,320 --> 00:33:06,320
then that led to confusion

801
00:33:06,320 --> 00:33:09,679
also but now we have simplified the

802
00:33:09,679 --> 00:33:12,720
discipleship negotiation so it's simply

803
00:33:12,720 --> 00:33:14,480
more straightforward

804
00:33:14,480 --> 00:33:16,960
it's probably worth giving this um

805
00:33:16,960 --> 00:33:20,799
shot again and add such a list

806
00:33:20,799 --> 00:33:23,120
another consideration is whether we

807
00:33:23,120 --> 00:33:25,039
should add

808
00:33:25,039 --> 00:33:28,320
test vectors for a message flow with an

809
00:33:28,320 --> 00:33:31,200
error so message one and then an error i

810
00:33:31,200 --> 00:33:34,080
don't uh support i don't i support a

811
00:33:34,080 --> 00:33:36,159
better cipher suit and then message one

812
00:33:36,159 --> 00:33:39,679
two three again that would probably be

813
00:33:39,679 --> 00:33:43,200
useful but it's also

814
00:33:43,200 --> 00:33:46,399
work of course but um

815
00:33:46,399 --> 00:33:51,039
that would probably be good to do yeah

816
00:33:51,039 --> 00:33:54,080
uh thunder suggestion to have a table of

817
00:33:54,080 --> 00:33:56,240
content in the

818
00:33:56,240 --> 00:33:59,840
test vector uh

819
00:34:00,159 --> 00:34:02,320
document i don't know if it was for the

820
00:34:02,320 --> 00:34:05,360
traces or but it should definitely

821
00:34:05,360 --> 00:34:07,519
be there for the json test vectors

822
00:34:07,519 --> 00:34:10,480
there's there are i don't know um

823
00:34:10,480 --> 00:34:12,560
probably more than 10 test vectors and

824
00:34:12,560 --> 00:34:14,879
there's no information what what's in

825
00:34:14,879 --> 00:34:17,760
them so it unless you look at the source

826
00:34:17,760 --> 00:34:20,480
code so there are a table illustrating

827
00:34:20,480 --> 00:34:23,440
that what is definitely

828
00:34:23,440 --> 00:34:25,359
very needed and

829
00:34:25,359 --> 00:34:29,279
i think we will add that and

830
00:34:29,839 --> 00:34:30,960
there is

831
00:34:30,960 --> 00:34:34,800
more sweets i think we already discussed

832
00:34:34,800 --> 00:34:36,719
i think everybody agrees at least that

833
00:34:36,719 --> 00:34:38,040
we should have the

834
00:34:38,040 --> 00:34:40,960
p256 ecdsa

835
00:34:40,960 --> 00:34:44,079
yeah and that's ongoing there's all

836
00:34:44,079 --> 00:34:46,000
there is uh

837
00:34:46,000 --> 00:34:49,599
test vectors coming very soon for that

838
00:34:49,599 --> 00:34:50,879
um

839
00:34:50,879 --> 00:34:52,480
i think that's

840
00:34:52,480 --> 00:34:55,199
this is the general issue about test

841
00:34:55,199 --> 00:34:58,640
vectors editions 12 of the twenty

842
00:34:58,640 --> 00:35:01,119
ten of the twelve things are done here

843
00:35:01,119 --> 00:35:03,680
might need to update this but

844
00:35:03,680 --> 00:35:05,599
you should also have the real

845
00:35:05,599 --> 00:35:07,760
certificates right now they're just a

846
00:35:07,760 --> 00:35:09,200
sequence

847
00:35:09,200 --> 00:35:11,760
zero one two three four five

848
00:35:11,760 --> 00:35:14,000
uh they should definitely be a real

849
00:35:14,000 --> 00:35:16,240
certificate with real public and private

850
00:35:16,240 --> 00:35:18,160
key that you can test

851
00:35:18,160 --> 00:35:21,440
this will also be added

852
00:35:21,440 --> 00:35:25,599
quite soon i hope in the coming months

853
00:35:27,520 --> 00:35:30,480
any questions about the

854
00:35:30,480 --> 00:35:34,079
issues or comments before we move on to

855
00:35:34,079 --> 00:35:36,640
reviews

856
00:35:36,960 --> 00:35:41,079
i think we are just on time

857
00:35:44,010 --> 00:35:45,200
[Music]

858
00:35:45,200 --> 00:35:46,320
uh

859
00:35:46,320 --> 00:35:50,320
so at the i think it was at the interim

860
00:35:50,320 --> 00:35:52,960
uh there was a

861
00:35:52,960 --> 00:35:54,880
request from the cheers and also from

862
00:35:54,880 --> 00:35:56,400
the authors that

863
00:35:56,400 --> 00:35:58,800
to get people to review the document

864
00:35:58,800 --> 00:36:00,720
because we feel that we are

865
00:36:00,720 --> 00:36:02,480
getting

866
00:36:02,480 --> 00:36:05,119
closer at least to the finish line yeah

867
00:36:05,119 --> 00:36:07,200
and we have gotten four

868
00:36:07,200 --> 00:36:10,800
reviews that's excellent

869
00:36:10,800 --> 00:36:13,200
and all the the four reviews has been

870
00:36:13,200 --> 00:36:14,880
added as their own

871
00:36:14,880 --> 00:36:17,280
issues in github

872
00:36:17,280 --> 00:36:19,200
so it's easier to see

873
00:36:19,200 --> 00:36:21,200
and discuss them i think

874
00:36:21,200 --> 00:36:23,359
the plan is to fix all the editorial

875
00:36:23,359 --> 00:36:27,200
issues in them and then if some and as

876
00:36:27,200 --> 00:36:29,839
much um technical things also and if

877
00:36:29,839 --> 00:36:32,720
something we need more discussion let me

878
00:36:32,720 --> 00:36:35,359
open a new issue for that topic and

879
00:36:35,359 --> 00:36:36,160
maybe

880
00:36:36,160 --> 00:36:39,799
close the general

881
00:36:40,560 --> 00:36:42,640
big thanks to everybody that has

882
00:36:42,640 --> 00:36:44,800
reviewed i think the comments are

883
00:36:44,800 --> 00:36:47,119
general positive

884
00:36:47,119 --> 00:36:49,920
quite a lot of small editorial things

885
00:36:49,920 --> 00:36:50,960
and

886
00:36:50,960 --> 00:36:53,280
and some technical so these discussions

887
00:36:53,280 --> 00:36:55,200
are only the bigger technical things

888
00:36:55,200 --> 00:36:59,440
that or might be worth discussing um

889
00:36:59,440 --> 00:37:02,320
marco is not here because i think all

890
00:37:02,320 --> 00:37:04,640
his comments were more editorial i think

891
00:37:04,640 --> 00:37:07,920
a lot of them has already been addressed

892
00:37:07,920 --> 00:37:09,790
so comments by stefan

893
00:37:09,790 --> 00:37:12,640
[Music]

894
00:37:12,640 --> 00:37:16,160
ead who is supposed to encode the code

895
00:37:16,160 --> 00:37:17,280
erd

896
00:37:17,280 --> 00:37:19,040
application or

897
00:37:19,040 --> 00:37:21,280
implementation

898
00:37:21,280 --> 00:37:22,560
um

899
00:37:22,560 --> 00:37:24,720
and

900
00:37:24,720 --> 00:37:28,079
my high level answer right now i think

901
00:37:28,079 --> 00:37:30,480
i think the api needs to be changed i

902
00:37:30,480 --> 00:37:33,760
think it needs to be in them by string

903
00:37:33,760 --> 00:37:35,040
and then

904
00:37:35,040 --> 00:37:37,440
they probably the ad hoc

905
00:37:37,440 --> 00:37:39,280
application

906
00:37:39,280 --> 00:37:42,000
do a simple encoding of the int and the

907
00:37:42,000 --> 00:37:43,359
byte string but

908
00:37:43,359 --> 00:37:45,040
in the under i think the ad hoc

909
00:37:45,040 --> 00:37:47,760
specification should not

910
00:37:47,760 --> 00:37:49,440
um

911
00:37:49,440 --> 00:37:53,359
not specify exactly how this api

912
00:37:53,359 --> 00:37:55,599
looks like that's up for the application

913
00:37:55,599 --> 00:37:58,000
might look a bit different in different

914
00:37:58,000 --> 00:38:02,520
programming languages and so on

915
00:38:04,720 --> 00:38:07,760
uh then error handling

916
00:38:07,760 --> 00:38:08,960
steve

917
00:38:08,960 --> 00:38:12,640
asked why a success error is

918
00:38:12,640 --> 00:38:15,359
needed he doesn't see a useful one and

919
00:38:15,359 --> 00:38:17,520
he says he does a lot of logging but it

920
00:38:17,520 --> 00:38:20,720
doesn't have eq so success was some

921
00:38:20,720 --> 00:38:23,119
suggestion from iot

922
00:38:23,119 --> 00:38:24,400
ops

923
00:38:24,400 --> 00:38:26,000
i think that was one of the clearest

924
00:38:26,000 --> 00:38:29,359
suggestion they had

925
00:38:29,359 --> 00:38:30,560
i think

926
00:38:30,560 --> 00:38:32,480
if you don't want to use the success or

927
00:38:32,480 --> 00:38:34,640
don't want to implement the success it's

928
00:38:34,640 --> 00:38:37,680
optional to implement also so i think if

929
00:38:37,680 --> 00:38:40,400
you don't want to use it you don't have

930
00:38:40,400 --> 00:38:42,400
to but it was a strong

931
00:38:42,400 --> 00:38:44,640
suggestion from iot ops my suggestion

932
00:38:44,640 --> 00:38:47,280
should be that we

933
00:38:47,280 --> 00:38:50,720
keep it in as optional

934
00:38:50,720 --> 00:38:53,040
um i don't really have any

935
00:38:53,040 --> 00:38:55,759
answer on

936
00:38:56,000 --> 00:38:58,240
when or exactly how you would want to

937
00:38:58,240 --> 00:39:01,560
use it

938
00:39:02,640 --> 00:39:05,760
then mandatory um

939
00:39:05,760 --> 00:39:08,160
mti cipher suite

940
00:39:08,160 --> 00:39:09,839
this we have discussed

941
00:39:09,839 --> 00:39:12,960
and agreed to discuss later uh steve

942
00:39:12,960 --> 00:39:15,280
found suggest that we should change the

943
00:39:15,280 --> 00:39:16,640
text from

944
00:39:16,640 --> 00:39:19,359
zero and two to

945
00:39:19,359 --> 00:39:21,280
zero slash one

946
00:39:21,280 --> 00:39:24,320
and two slash three he doesn't think

947
00:39:24,320 --> 00:39:26,800
it makes sense to make a difference

948
00:39:26,800 --> 00:39:28,880
between the

949
00:39:28,880 --> 00:39:32,320
truncated ccm and the full ccm that's

950
00:39:32,320 --> 00:39:35,280
the only difference between these

951
00:39:35,280 --> 00:39:37,520
episodes i think we can discuss that

952
00:39:37,520 --> 00:39:39,359
when we discuss the mandatory to

953
00:39:39,359 --> 00:39:41,520
implement cypher suit

954
00:39:41,520 --> 00:39:45,359
sweet question later um that we said we

955
00:39:45,359 --> 00:39:47,359
do when we have a working group

956
00:39:47,359 --> 00:39:51,040
that's called and more question comments

957
00:39:51,040 --> 00:39:53,599
from stefan

958
00:39:53,599 --> 00:39:55,870
about the revocation

959
00:39:55,870 --> 00:39:57,839
[Music]

960
00:39:57,839 --> 00:39:59,760
uh and then it's

961
00:39:59,760 --> 00:40:02,160
should what you should

962
00:40:02,160 --> 00:40:05,839
do here and what you can do and

963
00:40:05,839 --> 00:40:07,760
um i think

964
00:40:07,760 --> 00:40:10,319
current answer is that airtalk doesn't

965
00:40:10,319 --> 00:40:12,160
give much

966
00:40:12,160 --> 00:40:15,119
guidance regarding this you can use

967
00:40:15,119 --> 00:40:19,200
if you use x509 you can use crl and you

968
00:40:19,200 --> 00:40:20,480
can use

969
00:40:20,480 --> 00:40:26,160
ucsb you cannot use ucsb stapling

970
00:40:26,160 --> 00:40:28,880
because it does not

971
00:40:28,880 --> 00:40:32,800
support ocsp stapling at the moment

972
00:40:32,800 --> 00:40:35,920
if somebody wants ucsb stapling and that

973
00:40:35,920 --> 00:40:39,040
was for example suggested by dkg during

974
00:40:39,040 --> 00:40:41,760
the cozy meeting that that might be a

975
00:40:41,760 --> 00:40:44,880
good idea to have it mass staple uh then

976
00:40:44,880 --> 00:40:47,520
we would either have to introduce it in

977
00:40:47,520 --> 00:40:48,720
cosi

978
00:40:48,720 --> 00:40:53,200
or in in ad hoc would be possible

979
00:40:53,200 --> 00:40:55,200
but you need to have some standardized

980
00:40:55,200 --> 00:40:56,480
way of

981
00:40:56,480 --> 00:41:01,640
transporting the ocsp information

982
00:41:08,560 --> 00:41:14,319
uh comments by kathleen um so kathleen

983
00:41:14,319 --> 00:41:16,880
discusses comments on the

984
00:41:16,880 --> 00:41:21,319
i anna considerations

985
00:41:21,680 --> 00:41:24,880
and she asks what documentation

986
00:41:24,880 --> 00:41:26,560
is required

987
00:41:26,560 --> 00:41:28,799
and

988
00:41:29,040 --> 00:41:31,440
if we should also have specification

989
00:41:31,440 --> 00:41:33,440
required um

990
00:41:33,440 --> 00:41:35,839
this we discussed that in the ream i

991
00:41:35,839 --> 00:41:39,599
think it was happy but i don't think

992
00:41:39,599 --> 00:41:41,359
there was a lot of comments so this

993
00:41:41,359 --> 00:41:43,119
might

994
00:41:43,119 --> 00:41:44,960
if i think if people think we should

995
00:41:44,960 --> 00:41:48,240
have specification required instead do

996
00:41:48,240 --> 00:41:50,640
that otherwise

997
00:41:50,640 --> 00:41:52,960
there might be a need here to explain

998
00:41:52,960 --> 00:41:55,520
what the documentation is required to

999
00:41:55,520 --> 00:42:00,040
more guidance to the experts

1000
00:42:08,560 --> 00:42:10,799
and

1001
00:42:12,160 --> 00:42:14,480
are there any questions in

1002
00:42:14,480 --> 00:42:16,720
the chat i have not been

1003
00:42:16,720 --> 00:42:18,240
following that

1004
00:42:18,240 --> 00:42:21,440
i guess you tell me if there is

1005
00:42:21,440 --> 00:42:24,560
uh some discussion about uh p256 versus

1006
00:42:24,560 --> 00:42:27,680
two five five or nine and

1007
00:42:27,680 --> 00:42:30,640
i guess the upshot hopefully is that uh

1008
00:42:30,640 --> 00:42:32,160
i don't know dkj if you want to speak to

1009
00:42:32,160 --> 00:42:33,839
it now that's probably a good good

1010
00:42:33,839 --> 00:42:35,760
moment

1011
00:42:35,760 --> 00:42:38,640
if you can send audio

1012
00:42:38,640 --> 00:42:41,920
hi there i think i can send audio um

1013
00:42:41,920 --> 00:42:44,720
yeah i was just uh suggesting that

1014
00:42:44,720 --> 00:42:46,240
having too many options leaves

1015
00:42:46,240 --> 00:42:47,599
implementers in a position of having to

1016
00:42:47,599 --> 00:42:48,960
make decisions that they generally don't

1017
00:42:48,960 --> 00:42:51,040
know how to make so the clearer we can

1018
00:42:51,040 --> 00:42:53,440
give guidance the better

1019
00:42:53,440 --> 00:42:55,200
it sounds from the discussion on the

1020
00:42:55,200 --> 00:42:56,160
chat

1021
00:42:56,160 --> 00:42:58,800
that the um

1022
00:42:58,800 --> 00:43:01,520
strongest reason for including p2v6 and

1023
00:43:01,520 --> 00:43:04,240
ecdsa is hardware implementations

1024
00:43:04,240 --> 00:43:05,920
or constrained devices that want to you

1025
00:43:05,920 --> 00:43:07,119
know they have that have a hardware

1026
00:43:07,119 --> 00:43:08,160
constraint

1027
00:43:08,160 --> 00:43:09,760
um and so maybe we could just add some

1028
00:43:09,760 --> 00:43:12,240
guidance to the document that says you

1029
00:43:12,240 --> 00:43:14,399
know

1030
00:43:14,800 --> 00:43:17,920
use 255.19 unless pre-existing hardware

1031
00:43:17,920 --> 00:43:20,560
constraints force you into using um

1032
00:43:20,560 --> 00:43:23,520
ecdsa or something like that

1033
00:43:23,520 --> 00:43:25,520
just as a way to you know the more

1034
00:43:25,520 --> 00:43:26,800
guidance we can give to implementers so

1035
00:43:26,800 --> 00:43:27,760
that they don't feel like they're making

1036
00:43:27,760 --> 00:43:29,920
choices they don't understand the better

1037
00:43:29,920 --> 00:43:31,440
and having having you know a clear

1038
00:43:31,440 --> 00:43:33,040
reason to choose one of the others is

1039
00:43:33,040 --> 00:43:34,400
the right way to go

1040
00:43:34,400 --> 00:43:35,359
yeah

1041
00:43:35,359 --> 00:43:36,319
i think

1042
00:43:36,319 --> 00:43:39,359
there are already something

1043
00:43:39,359 --> 00:43:42,000
something similar to what you

1044
00:43:42,000 --> 00:43:44,640
suggest that was suggested by stephen

1045
00:43:44,640 --> 00:43:45,680
farrell

1046
00:43:45,680 --> 00:43:48,560
uh but i think some some more guidance

1047
00:43:48,560 --> 00:43:49,920
might be

1048
00:43:49,920 --> 00:43:52,400
good might also be

1049
00:43:52,400 --> 00:43:55,200
it might also be good to give some more

1050
00:43:55,200 --> 00:43:57,280
explanation what what the difference

1051
00:43:57,280 --> 00:43:59,520
between different options

1052
00:43:59,520 --> 00:44:02,000
would be

1053
00:44:03,599 --> 00:44:05,040
yeah

1054
00:44:05,040 --> 00:44:06,640
a guidance that explains the difference

1055
00:44:06,640 --> 00:44:08,800
is fine but guidance that just tells a

1056
00:44:08,800 --> 00:44:10,800
lazy implementer what to do is probably

1057
00:44:10,800 --> 00:44:13,040
better because we're the folks in this

1058
00:44:13,040 --> 00:44:14,079
group are going to understand the

1059
00:44:14,079 --> 00:44:16,160
situation better than

1060
00:44:16,160 --> 00:44:17,680
the average implementer

1061
00:44:17,680 --> 00:44:18,880
i think that

1062
00:44:18,880 --> 00:44:19,920
would be

1063
00:44:19,920 --> 00:44:22,079
some default choices if you're lazy

1064
00:44:22,079 --> 00:44:25,359
would be a good addition

1065
00:44:25,359 --> 00:44:27,119
i think

1066
00:44:27,119 --> 00:44:29,599
let's try to add that um

1067
00:44:29,599 --> 00:44:31,520
so moving on to

1068
00:44:31,520 --> 00:44:33,440
steven's

1069
00:44:33,440 --> 00:44:35,760
comments

1070
00:44:35,760 --> 00:44:40,240
so first connection identifiers um

1071
00:44:40,240 --> 00:44:41,680
and stephen

1072
00:44:41,680 --> 00:44:43,040
uh

1073
00:44:43,040 --> 00:44:44,319
as that

1074
00:44:44,319 --> 00:44:47,839
you might be able to track a client if

1075
00:44:47,839 --> 00:44:48,960
you

1076
00:44:48,960 --> 00:44:50,240
look at this

1077
00:44:50,240 --> 00:44:53,359
and he asked whether

1078
00:44:53,359 --> 00:44:57,119
they could be derived in another way and

1079
00:44:57,119 --> 00:44:59,680
if this has been

1080
00:44:59,680 --> 00:45:02,240
considered

1081
00:45:02,240 --> 00:45:03,520
and

1082
00:45:03,520 --> 00:45:06,560
this has been considered i think we have

1083
00:45:06,560 --> 00:45:09,000
an earlier version of the draft

1084
00:45:09,000 --> 00:45:12,480
degenerate these in a random

1085
00:45:12,480 --> 00:45:14,880
way but then you also need to have a

1086
00:45:14,880 --> 00:45:19,920
much longer due to collisions um

1087
00:45:19,920 --> 00:45:21,040
so it has

1088
00:45:21,040 --> 00:45:22,960
that was

1089
00:45:22,960 --> 00:45:25,520
moved right now it's up to the

1090
00:45:25,520 --> 00:45:27,760
clients initiator and responder to

1091
00:45:27,760 --> 00:45:31,359
choose them in any way um that party so

1092
00:45:31,359 --> 00:45:34,480
you you can implement any

1093
00:45:34,480 --> 00:45:36,319
way but they're not hidden in any way

1094
00:45:36,319 --> 00:45:38,400
they're sending clear text

1095
00:45:38,400 --> 00:45:39,440
and

1096
00:45:39,440 --> 00:45:43,200
you want to add anything stephen

1097
00:45:45,040 --> 00:45:46,480
yeah um

1098
00:45:46,480 --> 00:45:48,640
and again

1099
00:45:48,640 --> 00:45:50,720
i'm not entirely sure what the potential

1100
00:45:50,720 --> 00:45:52,640
value here might be because connection

1101
00:45:52,640 --> 00:45:54,640
identifiers could be a connection could

1102
00:45:54,640 --> 00:45:56,319
be obvious uh

1103
00:45:56,319 --> 00:45:57,680
to somebody looking at the traffic

1104
00:45:57,680 --> 00:45:59,760
anyway

1105
00:45:59,760 --> 00:46:00,960
um

1106
00:46:00,960 --> 00:46:03,839
you know we do have the issue with

1107
00:46:03,839 --> 00:46:06,880
threats like if you have a

1108
00:46:06,880 --> 00:46:08,560
a light switch that's activated when a

1109
00:46:08,560 --> 00:46:10,560
person enters a room

1110
00:46:10,560 --> 00:46:12,079
just being able to detect that the

1111
00:46:12,079 --> 00:46:13,680
packet comes in that light switch is

1112
00:46:13,680 --> 00:46:14,480
probably

1113
00:46:14,480 --> 00:46:17,040
revealing regardless of any encryption

1114
00:46:17,040 --> 00:46:18,480
and

1115
00:46:18,480 --> 00:46:20,400
if my concern is that these connection

1116
00:46:20,400 --> 00:46:22,560
identifiers if they kind of leak over to

1117
00:46:22,560 --> 00:46:25,280
something else into other protocols like

1118
00:46:25,280 --> 00:46:26,800
um and

1119
00:46:26,800 --> 00:46:28,640
if there's some kind of proxying going

1120
00:46:28,640 --> 00:46:31,119
on or multiplexing

1121
00:46:31,119 --> 00:46:32,880
then these these could allow that kind

1122
00:46:32,880 --> 00:46:35,839
of attack to happen

1123
00:46:35,839 --> 00:46:38,560
if somebody only has visibility of the

1124
00:46:38,560 --> 00:46:40,960
link where the multiplex packets from

1125
00:46:40,960 --> 00:46:45,359
many switches for example are being sent

1126
00:46:46,240 --> 00:46:49,280
so yeah i'm not sure if if doing better

1127
00:46:49,280 --> 00:46:52,400
with connection identifiers in ad hoc

1128
00:46:52,400 --> 00:46:54,400
would enable a good solution for that or

1129
00:46:54,400 --> 00:46:56,240
would be window dressing

1130
00:46:56,240 --> 00:46:58,160
um

1131
00:46:58,160 --> 00:46:59,760
but it's i think it's a concern if you

1132
00:46:59,760 --> 00:47:01,119
can you know if you can just correlate

1133
00:47:01,119 --> 00:47:03,280
the the key exchange with the with all

1134
00:47:03,280 --> 00:47:06,000
the later packets um that's that'll

1135
00:47:06,000 --> 00:47:07,599
label some trend

1136
00:47:07,599 --> 00:47:09,760
yeah right now the idea is to use the

1137
00:47:09,760 --> 00:47:10,880
same

1138
00:47:10,880 --> 00:47:14,560
identifier in ad hoc as in

1139
00:47:14,560 --> 00:47:17,040
scores you would be able to see that

1140
00:47:17,040 --> 00:47:18,079
this

1141
00:47:18,079 --> 00:47:20,480
it's the same client sending

1142
00:47:20,480 --> 00:47:22,800
these things um

1143
00:47:22,800 --> 00:47:25,520
typically you would be able to

1144
00:47:25,520 --> 00:47:31,359
do that anyway from the lower layers um

1145
00:47:31,760 --> 00:47:33,359
i don't know

1146
00:47:33,359 --> 00:47:35,599
two options here maybe they're

1147
00:47:35,599 --> 00:47:37,359
more

1148
00:47:37,359 --> 00:47:39,680
guidance or

1149
00:47:39,680 --> 00:47:41,599
considerations to add and

1150
00:47:41,599 --> 00:47:43,359
maybe there's something

1151
00:47:43,359 --> 00:47:47,440
smart we can do technically it would be

1152
00:47:47,440 --> 00:47:50,079
happy to see any contribution on that

1153
00:47:50,079 --> 00:47:52,400
but i yeah and i get i think the answer

1154
00:47:52,400 --> 00:47:54,800
probably also depends on

1155
00:47:54,800 --> 00:47:57,040
how likely we think

1156
00:47:57,040 --> 00:47:59,440
a configuration would be where changing

1157
00:47:59,440 --> 00:48:00,720
makes a difference

1158
00:48:00,720 --> 00:48:02,400
so as you say if you can always tell

1159
00:48:02,400 --> 00:48:04,720
from a mac address

1160
00:48:04,720 --> 00:48:06,319
which which packets come from which

1161
00:48:06,319 --> 00:48:07,599
light switch

1162
00:48:07,599 --> 00:48:09,119
yeah changing the connection id wouldn't

1163
00:48:09,119 --> 00:48:11,040
make much difference but

1164
00:48:11,040 --> 00:48:14,400
if we do think that

1165
00:48:15,280 --> 00:48:16,800
links

1166
00:48:16,800 --> 00:48:18,800
uh on which most packets will be

1167
00:48:18,800 --> 00:48:20,720
multiplexed from many devices will be

1168
00:48:20,720 --> 00:48:23,119
you know will be common then the

1169
00:48:23,119 --> 00:48:25,359
connection identifier would be what's

1170
00:48:25,359 --> 00:48:27,520
allowing an attacker to identify the

1171
00:48:27,520 --> 00:48:28,640
traffic

1172
00:48:28,640 --> 00:48:31,839
as being from one specific source

1173
00:48:31,839 --> 00:48:32,880
yeah

1174
00:48:32,880 --> 00:48:35,760
and that seemed undesirable but

1175
00:48:35,760 --> 00:48:36,559
yeah

1176
00:48:36,559 --> 00:48:38,319
but i personally i just don't know what

1177
00:48:38,319 --> 00:48:39,520
the common

1178
00:48:39,520 --> 00:48:41,440
uh topologies for deployments might be

1179
00:48:41,440 --> 00:48:43,520
like

1180
00:48:43,520 --> 00:48:45,440
no i

1181
00:48:45,440 --> 00:48:47,440
think i guess a common deployment would

1182
00:48:47,440 --> 00:48:50,000
be that you

1183
00:48:52,800 --> 00:48:54,880
it's very visible and you don't really

1184
00:48:54,880 --> 00:48:57,440
change who you talk to and you

1185
00:48:57,440 --> 00:48:59,839
you stay in the home where you were

1186
00:48:59,839 --> 00:49:02,319
deployed or the industry where you were

1187
00:49:02,319 --> 00:49:04,160
deployed but

1188
00:49:04,160 --> 00:49:07,359
it might not be i think i think there's

1189
00:49:07,359 --> 00:49:08,480
definitely

1190
00:49:08,480 --> 00:49:09,920
would be good with some more

1191
00:49:09,920 --> 00:49:11,839
consideration to

1192
00:49:11,839 --> 00:49:13,839
spell out that

1193
00:49:13,839 --> 00:49:15,680
if you use the same connection

1194
00:49:15,680 --> 00:49:17,599
identifier in different places for

1195
00:49:17,599 --> 00:49:20,079
example

1196
00:49:20,559 --> 00:49:24,079
you can be tracked and then

1197
00:49:24,079 --> 00:49:28,240
a simple solution would be to run adhoc

1198
00:49:28,240 --> 00:49:31,200
again if you change uh like if you

1199
00:49:31,200 --> 00:49:33,440
change your access network for example

1200
00:49:33,440 --> 00:49:34,240
um

1201
00:49:34,240 --> 00:49:35,280
and

1202
00:49:35,280 --> 00:49:38,000
negotiate a new connection identifier

1203
00:49:38,000 --> 00:49:40,400
and you cannot then you cannot trace the

1204
00:49:40,400 --> 00:49:44,400
client between these two networks

1205
00:49:44,400 --> 00:49:46,559
yeah i i that that's true

1206
00:49:46,559 --> 00:49:48,319
and definitely worth pointing out i

1207
00:49:48,319 --> 00:49:49,520
guess though

1208
00:49:49,520 --> 00:49:52,559
i have heard a number of times people

1209
00:49:52,559 --> 00:49:53,839
saying that they only want to do the

1210
00:49:53,839 --> 00:49:55,520
expensive protocol like ad hoc very

1211
00:49:55,520 --> 00:49:56,559
rarely

1212
00:49:56,559 --> 00:49:58,720
um and that might be just when you unbox

1213
00:49:58,720 --> 00:50:00,720
a device or after a power cut or

1214
00:50:00,720 --> 00:50:02,240
something um

1215
00:50:02,240 --> 00:50:04,399
so

1216
00:50:04,559 --> 00:50:06,720
it's a concern uh again maybe if it

1217
00:50:06,720 --> 00:50:08,480
doesn't if it doesn't resonate with

1218
00:50:08,480 --> 00:50:11,359
people that's fine um if people think

1219
00:50:11,359 --> 00:50:12,800
it's it's worth addressing one way or

1220
00:50:12,800 --> 00:50:15,680
another that's also fine

1221
00:50:19,119 --> 00:50:21,119
but i mean i i suppose the other

1222
00:50:21,119 --> 00:50:22,559
argument i'd make for trying to think

1223
00:50:22,559 --> 00:50:24,960
about this now is that

1224
00:50:24,960 --> 00:50:26,800
it's not something that we'd find easy

1225
00:50:26,800 --> 00:50:28,800
to change if we decided we wanted

1226
00:50:28,800 --> 00:50:30,400
something else later i think that's true

1227
00:50:30,400 --> 00:50:31,760
right

1228
00:50:31,760 --> 00:50:32,880
yeah

1229
00:50:32,880 --> 00:50:35,359
yeah so

1230
00:50:36,240 --> 00:50:37,440
yeah so

1231
00:50:37,440 --> 00:50:38,319
um

1232
00:50:38,319 --> 00:50:39,119
i think

1233
00:50:39,119 --> 00:50:41,839
for now at least

1234
00:50:42,960 --> 00:50:45,280
consideration and then i don't know it

1235
00:50:45,280 --> 00:50:47,280
would be very happy if somebody have

1236
00:50:47,280 --> 00:50:48,240
some

1237
00:50:48,240 --> 00:50:50,319
if you have some ideas technically how

1238
00:50:50,319 --> 00:50:52,400
to make things

1239
00:50:52,400 --> 00:50:54,880
better please be active on

1240
00:50:54,880 --> 00:50:57,920
github um

1241
00:50:58,000 --> 00:51:00,480
yeah i i think that's fair um yeah

1242
00:51:00,480 --> 00:51:02,400
personally i mean i think what i was

1243
00:51:02,400 --> 00:51:03,680
when i was looking at this i thought you

1244
00:51:03,680 --> 00:51:05,119
could maybe come up with a scheme where

1245
00:51:05,119 --> 00:51:07,040
you send

1246
00:51:07,040 --> 00:51:09,760
an identifier at the end in message in

1247
00:51:09,760 --> 00:51:11,680
the first message um

1248
00:51:11,680 --> 00:51:13,760
and then derive have a way of deriving a

1249
00:51:13,760 --> 00:51:16,400
more stable identifier from that but

1250
00:51:16,400 --> 00:51:18,480
that you only need this visible

1251
00:51:18,480 --> 00:51:20,319
identifier in one single message and the

1252
00:51:20,319 --> 00:51:22,400
rest of them could be derived

1253
00:51:22,400 --> 00:51:24,000
um i think it should be possible to do

1254
00:51:24,000 --> 00:51:26,000
it but yes uh having a concrete proposal

1255
00:51:26,000 --> 00:51:28,160
seems an entirely reasonable request

1256
00:51:28,160 --> 00:51:29,839
yeah

1257
00:51:29,839 --> 00:51:32,079
it's definitely possible i guess it's

1258
00:51:32,079 --> 00:51:34,240
very simple is to drive something long

1259
00:51:34,240 --> 00:51:37,359
and random it will not collide with

1260
00:51:37,359 --> 00:51:40,240
anything if you want something

1261
00:51:40,240 --> 00:51:42,960
shorter it probably requires some more

1262
00:51:42,960 --> 00:51:44,880
thinking um

1263
00:51:44,880 --> 00:51:46,720
right and without consuming more bites

1264
00:51:46,720 --> 00:51:48,720
in the in the in the original handshake

1265
00:51:48,720 --> 00:51:51,119
pretty much yeah so there's

1266
00:51:51,119 --> 00:51:53,520
yeah i i i'll have a look and but if

1267
00:51:53,520 --> 00:51:55,200
other folks were willing to have

1268
00:51:55,200 --> 00:51:56,800
make a concrete proposal if they also

1269
00:51:56,800 --> 00:51:57,839
have this concern and that would be

1270
00:51:57,839 --> 00:51:58,720
great

1271
00:51:58,720 --> 00:52:00,480
yeah sounds great

1272
00:52:00,480 --> 00:52:04,240
uh then terminology stephen asked if cdl

1273
00:52:04,240 --> 00:52:06,720
or english language is

1274
00:52:06,720 --> 00:52:10,559
normative there's a mixture i think

1275
00:52:10,559 --> 00:52:12,960
the answer is that the problem needs to

1276
00:52:12,960 --> 00:52:16,160
be a mixture i think but it's not clear

1277
00:52:16,160 --> 00:52:17,920
i think it needs some clarification i

1278
00:52:17,920 --> 00:52:22,400
think all the cddl is normative but yes

1279
00:52:22,400 --> 00:52:24,960
the cddl is not

1280
00:52:24,960 --> 00:52:27,680
enough you need some normative english

1281
00:52:27,680 --> 00:52:30,000
text to tell you the

1282
00:52:30,000 --> 00:52:36,160
details of how the fields inside cddl is

1283
00:52:36,160 --> 00:52:38,800
structured

1284
00:52:38,800 --> 00:52:40,240
not

1285
00:52:40,240 --> 00:52:43,839
some things you could do with more cddl

1286
00:52:43,839 --> 00:52:44,720
but

1287
00:52:44,720 --> 00:52:47,119
i don't think you can get away with only

1288
00:52:47,119 --> 00:52:50,079
cdl and it would make the cdl very much

1289
00:52:50,079 --> 00:52:53,920
more complex and hard to understand also

1290
00:52:53,920 --> 00:52:56,400
but i think that the cdl is

1291
00:52:56,400 --> 00:52:58,000
what is normative

1292
00:52:58,000 --> 00:52:59,599
clarification of what is normative is

1293
00:52:59,599 --> 00:53:02,240
probably missing

1294
00:53:04,240 --> 00:53:05,359
uh

1295
00:53:05,359 --> 00:53:06,319
then

1296
00:53:06,319 --> 00:53:09,119
more comments by stephen um

1297
00:53:09,119 --> 00:53:10,400
comments if

1298
00:53:10,400 --> 00:53:13,839
do we really need to support has base

1299
00:53:13,839 --> 00:53:16,800
things um

1300
00:53:16,800 --> 00:53:20,000
we talked about that before uh i

1301
00:53:20,000 --> 00:53:21,119
my

1302
00:53:21,119 --> 00:53:23,520
my idea would be that we support

1303
00:53:23,520 --> 00:53:26,160
everything that courses approach a

1304
00:53:26,160 --> 00:53:28,000
doctor and also support for example

1305
00:53:28,000 --> 00:53:31,040
walnut dsa which is not recommended and

1306
00:53:31,040 --> 00:53:33,520
rsa which would be very

1307
00:53:33,520 --> 00:53:34,960
large

1308
00:53:34,960 --> 00:53:37,119
but the hash base will also be large i

1309
00:53:37,119 --> 00:53:39,280
guess the change in the recent version

1310
00:53:39,280 --> 00:53:40,559
is that

1311
00:53:40,559 --> 00:53:43,680
those questions are pqc and we added a

1312
00:53:43,680 --> 00:53:45,359
note that

1313
00:53:45,359 --> 00:53:49,359
hash basics can be used

1314
00:53:49,359 --> 00:53:50,319
um

1315
00:53:50,319 --> 00:53:52,400
do you have any

1316
00:53:52,400 --> 00:53:53,520
comments

1317
00:53:53,520 --> 00:53:54,319
i think

1318
00:53:54,319 --> 00:53:55,520
yeah i agree with you that they're

1319
00:53:55,520 --> 00:53:57,839
unlikely to be interesting but they do

1320
00:53:57,839 --> 00:53:58,960
have a different property of being

1321
00:53:58,960 --> 00:54:00,640
stateful that you you only get so many

1322
00:54:00,640 --> 00:54:01,839
signatures

1323
00:54:01,839 --> 00:54:03,359
and

1324
00:54:03,359 --> 00:54:05,280
in the context of you know long-lived

1325
00:54:05,280 --> 00:54:07,440
devices that

1326
00:54:07,440 --> 00:54:08,400
um

1327
00:54:08,400 --> 00:54:10,800
if some device is long-lived and does ad

1328
00:54:10,800 --> 00:54:12,160
hoc frequently

1329
00:54:12,160 --> 00:54:14,319
then you might run into an issue but it

1330
00:54:14,319 --> 00:54:16,079
seems unlikely but

1331
00:54:16,079 --> 00:54:17,920
it also seems a bit unrealistic to claim

1332
00:54:17,920 --> 00:54:19,440
it's really supportive ben you're the

1333
00:54:19,440 --> 00:54:21,680
cube

1334
00:54:23,119 --> 00:54:25,599
i just wanted to respond to one of the

1335
00:54:25,599 --> 00:54:27,599
things that john said live which was i

1336
00:54:27,599 --> 00:54:28,720
think

1337
00:54:28,720 --> 00:54:30,880
that we sort of assumed that ad hoc is

1338
00:54:30,880 --> 00:54:32,319
going to support everything that cosi

1339
00:54:32,319 --> 00:54:33,839
supports and

1340
00:54:33,839 --> 00:54:35,520
i'm not sure we should make that

1341
00:54:35,520 --> 00:54:36,880
assumption

1342
00:54:36,880 --> 00:54:39,680
like from the cozy perspective

1343
00:54:39,680 --> 00:54:41,839
at least my understanding is that uh

1344
00:54:41,839 --> 00:54:43,520
when you have an application that uses

1345
00:54:43,520 --> 00:54:44,880
cozy

1346
00:54:44,880 --> 00:54:47,599
uh you're sort of assumed

1347
00:54:47,599 --> 00:54:49,680
like the cozy authors are sort of

1348
00:54:49,680 --> 00:54:52,160
assuming that your application will be

1349
00:54:52,160 --> 00:54:54,079
profiling things down and that there may

1350
00:54:54,079 --> 00:54:55,839
be some algorithms and cozy that just

1351
00:54:55,839 --> 00:54:58,240
don't make sense for you

1352
00:54:58,240 --> 00:55:00,240
and so

1353
00:55:00,240 --> 00:55:02,799
we probably don't want to assume that

1354
00:55:02,799 --> 00:55:05,040
anything that has a code point in cosi

1355
00:55:05,040 --> 00:55:07,200
is going to make sense for ad hoc

1356
00:55:07,200 --> 00:55:08,640
that's a slightly different question

1357
00:55:08,640 --> 00:55:09,359
from

1358
00:55:09,359 --> 00:55:10,799
the specific question of whether or not

1359
00:55:10,799 --> 00:55:13,680
hash based sigs may question make sense

1360
00:55:13,680 --> 00:55:16,319
for ad hoc

1361
00:55:17,280 --> 00:55:19,520
but i just wanted to toss that out there

1362
00:55:19,520 --> 00:55:21,280
that we

1363
00:55:21,280 --> 00:55:23,520
probably do want to filter what's

1364
00:55:23,520 --> 00:55:26,000
available from cozy down to what makes

1365
00:55:26,000 --> 00:55:28,480
sense for ad hoc

1366
00:55:28,480 --> 00:55:30,559
yeah

1367
00:55:30,559 --> 00:55:33,359
i think it's hard to filter out

1368
00:55:33,359 --> 00:55:35,359
there's one thing to filter what is

1369
00:55:35,359 --> 00:55:38,319
currently specified without specif

1370
00:55:38,319 --> 00:55:41,680
filtering out future algorithms that

1371
00:55:41,680 --> 00:55:43,359
would make sense to

1372
00:55:43,359 --> 00:55:45,680
support that's that's true yeah so we

1373
00:55:45,680 --> 00:55:48,319
have to be careful about how we write

1374
00:55:48,319 --> 00:55:50,079
this sort of guidance

1375
00:55:50,079 --> 00:55:52,400
to be future compatible

1376
00:55:52,400 --> 00:55:54,720
thanks

1377
00:55:55,300 --> 00:55:57,200
[Music]

1378
00:55:57,200 --> 00:55:58,400
then

1379
00:55:58,400 --> 00:56:01,040
it's seven discussion about

1380
00:56:01,040 --> 00:56:02,960
using

1381
00:56:02,960 --> 00:56:06,079
kdf to derive

1382
00:56:06,400 --> 00:56:09,359
public output i think

1383
00:56:09,359 --> 00:56:11,280
that should

1384
00:56:11,280 --> 00:56:13,200
should be added a consideration

1385
00:56:13,200 --> 00:56:14,319
regarding

1386
00:56:14,319 --> 00:56:16,640
that i think nist is

1387
00:56:16,640 --> 00:56:19,920
has very strict rules regarding

1388
00:56:19,920 --> 00:56:22,319
this but i also see in a paper by

1389
00:56:22,319 --> 00:56:24,640
krakchuk where he says that

1390
00:56:24,640 --> 00:56:26,960
very much complains about this nist

1391
00:56:26,960 --> 00:56:28,880
requirement and says it doesn't make any

1392
00:56:28,880 --> 00:56:31,760
sense unless nist have very very low

1393
00:56:31,760 --> 00:56:33,839
trust in their

1394
00:56:33,839 --> 00:56:37,119
cryptographic constructions but i think

1395
00:56:37,119 --> 00:56:39,119
i think it depends on how much public

1396
00:56:39,119 --> 00:56:40,960
information you

1397
00:56:40,960 --> 00:56:43,280
derive having some considerations on

1398
00:56:43,280 --> 00:56:44,559
this

1399
00:56:44,559 --> 00:56:47,040
could be good along the line that steven

1400
00:56:47,040 --> 00:56:48,559
suggests

1401
00:56:48,559 --> 00:56:52,079
might make even more sense for the extra

1402
00:56:52,079 --> 00:56:55,440
where you might export much more

1403
00:56:55,440 --> 00:56:57,520
material and it's unclear how you use

1404
00:56:57,520 --> 00:56:59,839
them

1405
00:57:02,960 --> 00:57:05,599
i think that was the last slide i think

1406
00:57:05,599 --> 00:57:09,400
i'm out of time also

1407
00:57:12,319 --> 00:57:13,920
great thanks uh i don't know militia i

1408
00:57:13,920 --> 00:57:15,119
think it was having some audio issues

1409
00:57:15,119 --> 00:57:17,920
i'm not sure if this are they sorted or

1410
00:57:17,920 --> 00:57:19,839
uh it should be good now it's yeah

1411
00:57:19,839 --> 00:57:21,520
that's working there okay

1412
00:57:21,520 --> 00:57:24,160
yeah um sorry about that but yeah thank

1413
00:57:24,160 --> 00:57:25,839
you john so uh we only have three

1414
00:57:25,839 --> 00:57:28,079
minutes to go so let's maybe just

1415
00:57:28,079 --> 00:57:31,200
briefly discuss the next step stephen uh

1416
00:57:31,200 --> 00:57:34,160
and i guess having an interim uh in the

1417
00:57:34,160 --> 00:57:35,440
next couple of weeks before the

1418
00:57:35,440 --> 00:57:38,839
christmas holidays would make sense

1419
00:57:38,839 --> 00:57:40,640
to

1420
00:57:40,640 --> 00:57:43,440
does the group have opinion on this

1421
00:57:43,440 --> 00:57:45,520
well yeah so so that i think opinions of

1422
00:57:45,520 --> 00:57:47,760
that would be welcome also but i'm

1423
00:57:47,760 --> 00:57:49,119
assuming the answer will probably be yes

1424
00:57:49,119 --> 00:57:50,799
because people always like interims uh

1425
00:57:50,799 --> 00:57:52,400
but i think also to be useful to get

1426
00:57:52,400 --> 00:57:55,839
opinions from those who are not authors

1427
00:57:55,839 --> 00:57:58,000
about whether they think we should

1428
00:57:58,000 --> 00:57:59,440
begin to think about working group last

1429
00:57:59,440 --> 00:58:01,359
call because i know the authors are keen

1430
00:58:01,359 --> 00:58:03,839
that we start doing it on that line

1431
00:58:03,839 --> 00:58:06,960
and so i'd be keen to have um

1432
00:58:06,960 --> 00:58:09,200
input from from other participants on

1433
00:58:09,200 --> 00:58:12,000
the now are on the working group list um

1434
00:58:12,000 --> 00:58:13,359
as to where they think we should be

1435
00:58:13,359 --> 00:58:14,960
heading towards working with glass calls

1436
00:58:14,960 --> 00:58:16,160
soon

1437
00:58:16,160 --> 00:58:19,520
because we are getting close i think so

1438
00:58:20,960 --> 00:58:22,720
and based on the reviews that we

1439
00:58:22,720 --> 00:58:25,599
received it seemed as we could do such a

1440
00:58:25,599 --> 00:58:27,200
thing right i mean we

1441
00:58:27,200 --> 00:58:29,359
we did not receive only editorial issues

1442
00:58:29,359 --> 00:58:30,079
but

1443
00:58:30,079 --> 00:58:32,559
not only substantial changes

1444
00:58:32,559 --> 00:58:35,040
sure but now we yeah we did have to ring

1445
00:58:35,040 --> 00:58:36,799
promises to do reviews out of people at

1446
00:58:36,799 --> 00:58:38,559
the last interim though so we

1447
00:58:38,559 --> 00:58:40,640
we kind of said he forced him a bit but

1448
00:58:40,640 --> 00:58:42,400
that's okay um

1449
00:58:42,400 --> 00:58:44,079
again if there's other people who are

1450
00:58:44,079 --> 00:58:45,760
not who haven't expressed an opinion yet

1451
00:58:45,760 --> 00:58:47,599
about how close they think we should be

1452
00:58:47,599 --> 00:58:49,119
to the working robust call that would be

1453
00:58:49,119 --> 00:58:52,079
useful input i know the authors

1454
00:58:52,079 --> 00:58:55,119
and the team essentially behind that

1455
00:58:55,119 --> 00:58:57,119
uh are keen that we start a working

1456
00:58:57,119 --> 00:58:59,040
blast call soon so

1457
00:58:59,040 --> 00:59:01,359
if you have opinions now's a good time

1458
00:59:01,359 --> 00:59:03,040
or on the mailing list if you if now

1459
00:59:03,040 --> 00:59:05,839
it's not a good time for you

1460
00:59:12,400 --> 00:59:13,920
people don't seem to be joining the

1461
00:59:13,920 --> 00:59:16,160
queue

1462
00:59:16,160 --> 00:59:17,520
there is euron

1463
00:59:17,520 --> 00:59:19,280
you're on good

1464
00:59:19,280 --> 00:59:20,160
um

1465
00:59:20,160 --> 00:59:22,000
no i don't have a strong opinion here i

1466
00:59:22,000 --> 00:59:24,160
i think that this is great that we got

1467
00:59:24,160 --> 00:59:26,400
these reviews um

1468
00:59:26,400 --> 00:59:27,760
thank you very much

1469
00:59:27,760 --> 00:59:29,920
everyone for for contributing and we

1470
00:59:29,920 --> 00:59:31,280
have a good had a good discussion today

1471
00:59:31,280 --> 00:59:33,680
i think um

1472
00:59:33,680 --> 00:59:35,680
i i would imagine that this this would

1473
00:59:35,680 --> 00:59:37,280
trigger even more abuse if we do the

1474
00:59:37,280 --> 00:59:39,920
working group last call in uh

1475
00:59:39,920 --> 00:59:42,319
uh january or yeah something like that

1476
00:59:42,319 --> 00:59:44,400
so that would be a way of

1477
00:59:44,400 --> 00:59:46,000
pending the uh

1478
00:59:46,000 --> 00:59:47,920
did the

1479
00:59:47,920 --> 00:59:50,559
potential crypto reviews or i mean we

1480
00:59:50,559 --> 00:59:51,680
know that there will be some crypto

1481
00:59:51,680 --> 00:59:52,960
reviews coming up

1482
00:59:52,960 --> 00:59:54,880
uh to get some input in the in the

1483
00:59:54,880 --> 00:59:56,000
meanwhile

1484
00:59:56,000 --> 00:59:56,960
which

1485
00:59:56,960 --> 00:59:58,640
probably won't be overlapping with the

1486
00:59:58,640 --> 01:00:01,119
crypto review i think if we ask

1487
01:00:01,119 --> 01:00:03,280
yeah and i mean if there's

1488
01:00:03,280 --> 01:00:04,960
if we assume that other cryptographers

1489
01:00:04,960 --> 01:00:06,640
are going to spend effort on this

1490
01:00:06,640 --> 01:00:08,079
we kind of owe it to them not to keep

1491
01:00:08,079 --> 01:00:10,480
changing the thing during that period um

1492
01:00:10,480 --> 01:00:11,760
so that's another reason to have a

1493
01:00:11,760 --> 01:00:13,839
relatively stable

1494
01:00:13,839 --> 01:00:15,359
for that period

1495
01:00:15,359 --> 01:00:17,440
um

1496
01:00:17,440 --> 01:00:19,040
so i like the way you implicitly

1497
01:00:19,040 --> 01:00:20,319
suggested we did working through class

1498
01:00:20,319 --> 01:00:22,480
call in january so

1499
01:00:22,480 --> 01:00:25,119
that was nicely snuck in there and so

1500
01:00:25,119 --> 01:00:27,200
and

1501
01:00:27,200 --> 01:00:28,720
you know i'm guessing that that's the

1502
01:00:28,720 --> 01:00:29,920
kind of thing that seems to make sense

1503
01:00:29,920 --> 01:00:31,040
if we have an interim before the

1504
01:00:31,040 --> 01:00:32,799
holidays

1505
01:00:32,799 --> 01:00:35,040
try and tie down to as few open issues

1506
01:00:35,040 --> 01:00:37,520
as possible and then kick off a working

1507
01:00:37,520 --> 01:00:39,359
group last call that would seem to me

1508
01:00:39,359 --> 01:00:42,640
like a sensible plan and but uh we could

1509
01:00:42,640 --> 01:00:44,559
do you know we'd be happy to get uh

1510
01:00:44,559 --> 01:00:47,599
comments and input on that

1511
01:00:48,319 --> 01:00:51,839
i guess we're out of time uh so

1512
01:00:51,839 --> 01:00:54,559
send those comments to the list uh

1513
01:00:54,559 --> 01:00:56,000
unless you want to jump into the jabber

1514
01:00:56,000 --> 01:00:59,040
room where it'll still be recorded

1515
01:00:59,040 --> 01:01:00,720
thanks for your time uh well i guess

1516
01:01:00,720 --> 01:01:02,480
we'll schedule an interim for some time

1517
01:01:02,480 --> 01:01:05,040
in early mid december

1518
01:01:05,040 --> 01:01:07,760
but we'll discuss some of this

1519
01:01:07,760 --> 01:01:09,119
thank you all

1520
01:01:09,119 --> 01:01:11,839
thank you all

1521
01:01:13,440 --> 01:01:14,799
and thanks to timothy for taking good

1522
01:01:14,799 --> 01:01:18,680
notes that's great

1523
01:01:24,400 --> 01:01:26,480
you

