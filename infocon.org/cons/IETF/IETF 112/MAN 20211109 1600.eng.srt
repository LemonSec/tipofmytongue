1
00:00:08,559 --> 00:00:12,240
good morning afternoon or evening

2
00:00:12,240 --> 00:00:15,440
welcome the six-man session

3
00:00:15,440 --> 00:00:18,400
bob hinden this is louis tron

4
00:00:18,400 --> 00:00:19,840
the

5
00:00:19,840 --> 00:00:22,960
chairs of six man

6
00:00:23,039 --> 00:00:25,039
i think we have

7
00:00:25,039 --> 00:00:28,000
enough people to get started

8
00:00:28,000 --> 00:00:32,000
um next slide holy

9
00:00:32,558 --> 00:00:35,520
so please note the note well i'm sure

10
00:00:35,520 --> 00:00:38,320
you've all memorized this by now but

11
00:00:38,320 --> 00:00:40,960
need to follow all of the itf

12
00:00:40,960 --> 00:00:43,760
processes and policies and procedures

13
00:00:43,760 --> 00:00:45,520
and

14
00:00:45,520 --> 00:00:47,280
it's almost

15
00:00:47,280 --> 00:00:51,440
as much stuff as all the technical work

16
00:00:52,239 --> 00:00:55,280
uh next slide

17
00:00:55,280 --> 00:00:57,760
uh mistrivia

18
00:00:57,760 --> 00:01:00,800
the jabber room i just use the meat echo

19
00:01:00,800 --> 00:01:02,559
one

20
00:01:02,559 --> 00:01:04,080
here's the links

21
00:01:04,080 --> 00:01:05,519
in the minutes

22
00:01:05,519 --> 00:01:09,439
many thanks to shuping and barbara for

23
00:01:09,439 --> 00:01:11,600
taking minutes they've

24
00:01:11,600 --> 00:01:14,400
done it in several past meetings

25
00:01:14,400 --> 00:01:17,680
do a great job thank you very much

26
00:01:17,680 --> 00:01:19,840
we don't have an official jabra scribe

27
00:01:19,840 --> 00:01:24,400
sort of doesn't seem that it's necessary

28
00:01:24,400 --> 00:01:26,400
and this is the link to find the

29
00:01:26,400 --> 00:01:29,200
presentations and i think there's also a

30
00:01:29,200 --> 00:01:31,840
link in mideco

31
00:01:31,840 --> 00:01:34,159
next slide

32
00:01:34,159 --> 00:01:36,320
and uh we have

33
00:01:36,320 --> 00:01:39,280
uploaded all the slides so if you are a

34
00:01:39,280 --> 00:01:40,960
speaker

35
00:01:40,960 --> 00:01:42,079
you can

36
00:01:42,079 --> 00:01:44,960
choose your slide deck from the prepared

37
00:01:44,960 --> 00:01:47,520
slides

38
00:01:48,479 --> 00:01:51,759
as it shows here

39
00:01:52,479 --> 00:01:54,799
we will try doing this if this fails

40
00:01:54,799 --> 00:01:57,439
then we can um

41
00:01:57,439 --> 00:01:59,840
we can share them but it's easier this

42
00:01:59,840 --> 00:02:02,560
way you can um advance the slide

43
00:02:02,560 --> 00:02:04,960
yourself

44
00:02:04,960 --> 00:02:07,360
this is the agenda for today

45
00:02:07,360 --> 00:02:08,598
um

46
00:02:08,598 --> 00:02:10,959
introductions what you're doing now

47
00:02:10,959 --> 00:02:13,280
document status

48
00:02:13,280 --> 00:02:15,520
i'm going to talk about the joint friday

49
00:02:15,520 --> 00:02:17,599
session we're having with v6 ops in a

50
00:02:17,599 --> 00:02:18,720
minute

51
00:02:18,720 --> 00:02:20,000
um

52
00:02:20,000 --> 00:02:22,400
then eric and shiresh are going to talk

53
00:02:22,400 --> 00:02:25,599
about sids and ipv6 addressing the

54
00:02:25,599 --> 00:02:28,080
output of the

55
00:02:28,080 --> 00:02:30,640
spring adoption call on the compression

56
00:02:30,640 --> 00:02:32,160
drafts

57
00:02:32,160 --> 00:02:34,560
um we have one working group draft we're

58
00:02:34,560 --> 00:02:36,879
going to do an update on

59
00:02:36,879 --> 00:02:39,200
giuseppe is going to do that

60
00:02:39,200 --> 00:02:40,879
this is

61
00:02:40,879 --> 00:02:43,280
been in the isg for a while but there's

62
00:02:43,280 --> 00:02:46,000
been a lot of updates based on this

63
00:02:46,000 --> 00:02:49,040
discusses from the isg that we thought

64
00:02:49,040 --> 00:02:51,920
it would be good for him to go over the

65
00:02:51,920 --> 00:02:54,480
changes

66
00:02:54,959 --> 00:02:57,120
and then there are four

67
00:02:57,120 --> 00:03:00,080
new internet drafts that

68
00:03:00,080 --> 00:03:02,080
will be presented

69
00:03:02,080 --> 00:03:05,480
next slide

70
00:03:07,200 --> 00:03:08,319
there we go

71
00:03:08,319 --> 00:03:09,920
should we ask if there are any comments

72
00:03:09,920 --> 00:03:13,280
to the agenda before we

73
00:03:13,280 --> 00:03:15,120
we want

74
00:03:15,120 --> 00:03:18,840
any agenda comments

75
00:03:23,040 --> 00:03:26,159
not seeing any

76
00:03:26,239 --> 00:03:29,360
so this is the agenda for the

77
00:03:29,360 --> 00:03:31,920
joint session with v6 ops on friday

78
00:03:31,920 --> 00:03:32,959
morning

79
00:03:32,959 --> 00:03:36,799
or at least my time friday morning

80
00:03:36,799 --> 00:03:38,640
bright and early

81
00:03:38,640 --> 00:03:41,519
um but the general idea

82
00:03:41,519 --> 00:03:42,720
that

83
00:03:42,720 --> 00:03:44,560
generated this is that both working

84
00:03:44,560 --> 00:03:47,120
groups have drafts that are talking

85
00:03:47,120 --> 00:03:49,440
about top by hop options you know the

86
00:03:49,440 --> 00:03:51,120
processing of them the need for

87
00:03:51,120 --> 00:03:53,040
supporting them or not

88
00:03:53,040 --> 00:03:54,319
um

89
00:03:54,319 --> 00:03:55,920
and so

90
00:03:55,920 --> 00:03:58,640
after some discussion with the ads of

91
00:03:58,640 --> 00:04:00,480
you know the internet ads and the ops

92
00:04:00,480 --> 00:04:02,640
ids sort of came up with this idea of

93
00:04:02,640 --> 00:04:04,319
having a joint session

94
00:04:04,319 --> 00:04:06,959
thinking it might bring more people to

95
00:04:06,959 --> 00:04:09,040
the discussion maybe particularly

96
00:04:09,040 --> 00:04:12,319
outside of v6 ops and six-man

97
00:04:12,319 --> 00:04:13,599
um

98
00:04:13,599 --> 00:04:14,799
so the

99
00:04:14,799 --> 00:04:17,199
agenda is roughly talking about

100
00:04:17,199 --> 00:04:18,079
the

101
00:04:18,079 --> 00:04:20,639
requirements and solution drafts

102
00:04:20,639 --> 00:04:21,759
um

103
00:04:21,759 --> 00:04:25,360
and then some short talks on some

104
00:04:25,360 --> 00:04:26,400
current

105
00:04:26,400 --> 00:04:29,199
proposals for hot new

106
00:04:29,199 --> 00:04:31,840
hop options you know what problem

107
00:04:31,840 --> 00:04:33,600
they're solving

108
00:04:33,600 --> 00:04:37,520
and then uh just a discussion about you

109
00:04:37,520 --> 00:04:39,759
know what people think about

110
00:04:39,759 --> 00:04:43,280
um the hop option you know can we make

111
00:04:43,280 --> 00:04:44,960
it work better

112
00:04:44,960 --> 00:04:47,120
uh is there some other way of doing it

113
00:04:47,120 --> 00:04:49,360
um what to do with the existing options

114
00:04:49,360 --> 00:04:51,600
etcetera so it hopefully will be an

115
00:04:51,600 --> 00:04:54,639
interesting session on friday

116
00:04:54,639 --> 00:04:57,840
any questions

117
00:04:59,840 --> 00:05:02,400
okay next slide

118
00:05:02,400 --> 00:05:03,440
okay

119
00:05:03,440 --> 00:05:07,120
yes so that's the document status

120
00:05:07,120 --> 00:05:09,520
so we have published one rfc

121
00:05:09,520 --> 00:05:11,280
since the last itf

122
00:05:11,280 --> 00:05:14,000
that's 9131 on gratuitous neighbor

123
00:05:14,000 --> 00:05:15,440
discovery

124
00:05:15,440 --> 00:05:16,960
we currently have

125
00:05:16,960 --> 00:05:19,520
no documents in the rfc editor queue but

126
00:05:19,520 --> 00:05:21,759
we had three documents submitted to the

127
00:05:21,759 --> 00:05:24,479
iesg

128
00:05:24,479 --> 00:05:26,080
to start from the bottom the minimum

129
00:05:26,080 --> 00:05:28,639
path mtu option um

130
00:05:28,639 --> 00:05:29,520
that's

131
00:05:29,520 --> 00:05:33,199
with with eric in ada evaluation

132
00:05:33,199 --> 00:05:35,039
but the two other two the two other

133
00:05:35,039 --> 00:05:37,120
drafts have

134
00:05:37,120 --> 00:05:39,280
gone through the esg and have quite a

135
00:05:39,280 --> 00:05:41,520
few

136
00:05:41,520 --> 00:05:43,680
discusses and iterations

137
00:05:43,680 --> 00:05:44,560
um

138
00:05:44,560 --> 00:05:46,000
the

139
00:05:46,000 --> 00:05:47,840
alternate marking method we will talk

140
00:05:47,840 --> 00:05:49,440
about later

141
00:05:49,440 --> 00:05:51,360
so guys that we will go through the

142
00:05:51,360 --> 00:05:53,360
issues he's had in the iterations and

143
00:05:53,360 --> 00:05:55,600
the changes that has happened through

144
00:05:55,600 --> 00:05:59,600
because of isg review

145
00:05:59,600 --> 00:06:00,880
the

146
00:06:00,880 --> 00:06:03,440
sroam draft has

147
00:06:03,440 --> 00:06:05,440
essentially been in

148
00:06:05,440 --> 00:06:08,319
revised id since june 2nd

149
00:06:08,319 --> 00:06:10,639
it has three discusses and it's awaiting

150
00:06:10,639 --> 00:06:12,800
an update from the authors

151
00:06:12,800 --> 00:06:14,479
bob and i have have been speaking to the

152
00:06:14,479 --> 00:06:17,520
authors and they promised us to

153
00:06:17,520 --> 00:06:20,880
to make an update uh

154
00:06:20,880 --> 00:06:25,680
very soon now so we'll see how that goes

155
00:06:28,080 --> 00:06:29,440
we have

156
00:06:29,440 --> 00:06:31,600
nothing else in the queue

157
00:06:31,600 --> 00:06:35,840
and also eric please go ahead

158
00:06:35,919 --> 00:06:38,960
i wanted to say also that rfc 9131 was

159
00:06:38,960 --> 00:06:40,080
the

160
00:06:40,080 --> 00:06:42,160
uh was our first document to go through

161
00:06:42,160 --> 00:06:42,960
the

162
00:06:42,960 --> 00:06:45,919
rfc editors do

163
00:06:45,919 --> 00:06:48,160
github based review process where all

164
00:06:48,160 --> 00:06:50,560
the diffs are sent by github and

165
00:06:50,560 --> 00:06:53,280
it was an interesting experience i think

166
00:06:53,280 --> 00:06:54,560
i found it

167
00:06:54,560 --> 00:06:56,160
helpful but

168
00:06:56,160 --> 00:06:57,919
they're still running other experiments

169
00:06:57,919 --> 00:07:00,560
to see how they can improve that process

170
00:07:00,560 --> 00:07:01,759
so if you're

171
00:07:01,759 --> 00:07:02,880
you're an author

172
00:07:02,880 --> 00:07:05,440
uh on a document uh beware that uh you

173
00:07:05,440 --> 00:07:06,880
might be able to opt into this

174
00:07:06,880 --> 00:07:09,360
experiment

175
00:07:09,759 --> 00:07:12,240
and it might be worthwhile perhaps that

176
00:07:12,240 --> 00:07:13,360
jane and

177
00:07:13,360 --> 00:07:15,360
and perhaps you eric

178
00:07:15,360 --> 00:07:16,400
give a little

179
00:07:16,400 --> 00:07:18,240
update on that at some point if it's

180
00:07:18,240 --> 00:07:19,840
just an email to the list if there's

181
00:07:19,840 --> 00:07:23,840
anything not worthy or or is the process

182
00:07:23,840 --> 00:07:26,319
still in in flux and improving along the

183
00:07:26,319 --> 00:07:27,440
way

184
00:07:27,440 --> 00:07:29,840
or is this all authors will go through

185
00:07:29,840 --> 00:07:30,960
this now or

186
00:07:30,960 --> 00:07:32,479
what's the status

187
00:07:32,479 --> 00:07:33,759
i don't know what their intent is i

188
00:07:33,759 --> 00:07:36,160
think they're still experimenting um

189
00:07:36,160 --> 00:07:39,599
but uh and i guess uh it kind of depends

190
00:07:39,599 --> 00:07:41,039
on the number of

191
00:07:41,039 --> 00:07:42,560
of authors

192
00:07:42,560 --> 00:07:44,160
because you need to get all the authors

193
00:07:44,160 --> 00:07:46,000
sort of set up to use the github review

194
00:07:46,000 --> 00:07:46,879
flow

195
00:07:46,879 --> 00:07:48,879
but i found the um

196
00:07:48,879 --> 00:07:51,120
ability to review individual

197
00:07:51,120 --> 00:07:53,280
diffs in github much easier than

198
00:07:53,280 --> 00:07:56,639
reviewing lots of multi-indented text

199
00:07:56,639 --> 00:07:59,039
uh in an endless email chain with uh

200
00:07:59,039 --> 00:08:01,199
different people's email editors putting

201
00:08:01,199 --> 00:08:02,560
things to different fonts and different

202
00:08:02,560 --> 00:08:05,919
indent levels and so on and so forth so

203
00:08:05,919 --> 00:08:07,440
it looked very clean

204
00:08:07,440 --> 00:08:09,360
from my perspective as an observer as

205
00:08:09,360 --> 00:08:11,280
well and we could probably point people

206
00:08:11,280 --> 00:08:12,720
to the

207
00:08:12,720 --> 00:08:14,400
to the repository that was used so

208
00:08:14,400 --> 00:08:15,680
people could go through and see the

209
00:08:15,680 --> 00:08:18,720
history as well but

210
00:08:23,280 --> 00:08:26,599
go on jen

211
00:08:27,520 --> 00:08:29,919
we cannot really

212
00:08:29,919 --> 00:08:31,280
you can't hear me

213
00:08:31,280 --> 00:08:32,958
now we can hear you

214
00:08:32,958 --> 00:08:33,839
ah

215
00:08:33,839 --> 00:08:37,039
delay so yeah just in a few words i

216
00:08:37,039 --> 00:08:39,679
really liked it it was easiest most much

217
00:08:39,679 --> 00:08:41,039
easiest

218
00:08:41,039 --> 00:08:43,599
uh then yeah going through these emails

219
00:08:43,599 --> 00:08:45,680
and trying to find out if i missed any

220
00:08:45,680 --> 00:08:46,720
comments

221
00:08:46,720 --> 00:08:48,880
so yeah i really liked it strongly

222
00:08:48,880 --> 00:08:51,519
recommended and it was i don't know

223
00:08:51,519 --> 00:08:53,760
it was an experiment experiment but it

224
00:08:53,760 --> 00:08:55,200
was quite

225
00:08:55,200 --> 00:08:57,360
simple easy no issues to report three

226
00:08:57,360 --> 00:08:59,360
lessons

227
00:08:59,360 --> 00:09:00,640
cool

228
00:09:00,640 --> 00:09:02,720
excellent so so we'll make sure that we

229
00:09:02,720 --> 00:09:04,959
recommend that the authors as uh as they

230
00:09:04,959 --> 00:09:06,560
get to the

231
00:09:06,560 --> 00:09:09,760
last stage of the process thanks

232
00:09:09,760 --> 00:09:10,560
um

233
00:09:10,560 --> 00:09:13,360
let's see so document stages

234
00:09:13,360 --> 00:09:16,080
two we have no documents

235
00:09:16,080 --> 00:09:18,160
uh waiting for working group adoption we

236
00:09:18,160 --> 00:09:19,200
have

237
00:09:19,200 --> 00:09:21,360
no working group documents and we have

238
00:09:21,360 --> 00:09:23,760
no documents are waiting right up that's

239
00:09:23,760 --> 00:09:26,640
not quite true

240
00:09:26,640 --> 00:09:28,560
we have the hope i hope behavior

241
00:09:28,560 --> 00:09:30,880
document that bob and gory has that is

242
00:09:30,880 --> 00:09:33,439
awaiting

243
00:09:33,760 --> 00:09:35,440
awaiting being called for adoption so i

244
00:09:35,440 --> 00:09:37,519
guess that's the pre-state from what

245
00:09:37,519 --> 00:09:39,200
we've registered here but we'll talk

246
00:09:39,200 --> 00:09:42,160
about that on friday

247
00:09:42,480 --> 00:09:45,120
i think that's all so um

248
00:09:45,120 --> 00:09:47,440
suresh and eric you're up do you want to

249
00:09:47,440 --> 00:09:49,519
share your own slides

250
00:09:49,519 --> 00:09:53,200
or do you want us to share them for you

251
00:09:57,600 --> 00:09:59,680
i think eric is going to start let him

252
00:09:59,680 --> 00:10:01,279
decide

253
00:10:01,279 --> 00:10:03,360
uh oh okay i was going to defer to you i

254
00:10:03,360 --> 00:10:06,000
have not tried this presentation

255
00:10:06,000 --> 00:10:07,839
okay there's a paper says the rock

256
00:10:07,839 --> 00:10:10,720
coming up here now

257
00:10:12,800 --> 00:10:14,959
spock

258
00:10:14,959 --> 00:10:18,399
how do i choose a slide to present if

259
00:10:18,399 --> 00:10:19,839
not how to do this

260
00:10:19,839 --> 00:10:22,720
you you press the share preloaded slides

261
00:10:22,720 --> 00:10:24,880
button and then you pick from the list

262
00:10:24,880 --> 00:10:26,800
and yours is called

263
00:10:26,800 --> 00:10:31,079
seeds and addresses i think

264
00:10:37,120 --> 00:10:39,920
i'm happy to share eric with you uh oh

265
00:10:39,920 --> 00:10:42,160
no that just opened it in another window

266
00:10:42,160 --> 00:10:44,880
hang on a minute

267
00:10:44,959 --> 00:10:46,560
do you want me as your sheriff i can

268
00:10:46,560 --> 00:10:47,600
cheer

269
00:10:47,600 --> 00:10:48,880
um

270
00:10:48,880 --> 00:10:52,160
sure there's only three sides anyway

271
00:10:52,720 --> 00:10:55,440
just say next

272
00:10:59,040 --> 00:11:02,959
uh okay so um i suppose uh this is a

273
00:11:02,959 --> 00:11:05,279
summary of what we uh

274
00:11:05,279 --> 00:11:07,440
what has transpired in the last i guess

275
00:11:07,440 --> 00:11:08,880
maybe

276
00:11:08,880 --> 00:11:10,880
three to three and a half weeks

277
00:11:10,880 --> 00:11:13,920
of uh some back and forth with some uh

278
00:11:13,920 --> 00:11:16,079
with the spring on some compressed

279
00:11:16,079 --> 00:11:19,760
discussion next slide please

280
00:11:20,399 --> 00:11:21,839
uh so

281
00:11:21,839 --> 00:11:23,440
if you download the slides you can click

282
00:11:23,440 --> 00:11:25,040
on these highlighted things there are

283
00:11:25,040 --> 00:11:26,720
some links there

284
00:11:26,720 --> 00:11:29,120
there is inquiry from spring to six man

285
00:11:29,120 --> 00:11:30,720
about uh

286
00:11:30,720 --> 00:11:33,440
compressed sid behavior and some sort of

287
00:11:33,440 --> 00:11:35,519
seed behavior in general

288
00:11:35,519 --> 00:11:36,640
uh

289
00:11:36,640 --> 00:11:38,160
and uh

290
00:11:38,160 --> 00:11:40,560
there was

291
00:11:40,560 --> 00:11:42,160
two primary questions both of which were

292
00:11:42,160 --> 00:11:44,079
sort of quite lengthy and detailed

293
00:11:44,079 --> 00:11:46,240
our reply was uh

294
00:11:46,240 --> 00:11:47,920
lengthy and detailed

295
00:11:47,920 --> 00:11:49,760
um and

296
00:11:49,760 --> 00:11:52,160
uh we raised a couple of issues

297
00:11:52,160 --> 00:11:53,920
uh one was that there was

298
00:11:53,920 --> 00:11:56,399
some lack of clarity around uh sids and

299
00:11:56,399 --> 00:11:57,839
what their semantic requirements are in

300
00:11:57,839 --> 00:11:59,680
certain circumstances

301
00:11:59,680 --> 00:12:01,680
and we can uh we can talk about that on

302
00:12:01,680 --> 00:12:03,920
the next slide there's also

303
00:12:03,920 --> 00:12:07,519
a an issue uh oh sorry i'm not

304
00:12:07,519 --> 00:12:09,920
i said yeah can you go back one

305
00:12:09,920 --> 00:12:11,040
um

306
00:12:11,040 --> 00:12:13,519
and the meaning the semantic meaning of

307
00:12:13,519 --> 00:12:15,519
segments left in the srh

308
00:12:15,519 --> 00:12:17,279
uh

309
00:12:17,279 --> 00:12:19,120
looks like it might need to be updated

310
00:12:19,120 --> 00:12:21,200
or something will have to be uh done to

311
00:12:21,200 --> 00:12:22,399
sort of

312
00:12:22,399 --> 00:12:24,800
update the definition because it doesn't

313
00:12:24,800 --> 00:12:27,360
exactly match anymore it's not a strict

314
00:12:27,360 --> 00:12:29,440
index into the

315
00:12:29,440 --> 00:12:31,279
uh sorry it is treated as a strict index

316
00:12:31,279 --> 00:12:32,480
into the

317
00:12:32,480 --> 00:12:33,680
srh

318
00:12:33,680 --> 00:12:35,680
but um the semantic definition is

319
00:12:35,680 --> 00:12:37,120
actually uh

320
00:12:37,120 --> 00:12:39,839
the list of the list of uh segments left

321
00:12:39,839 --> 00:12:41,680
so

322
00:12:41,680 --> 00:12:44,079
where the list of segments left is uh

323
00:12:44,079 --> 00:12:46,880
one to one mapped to 12856 addresses

324
00:12:46,880 --> 00:12:47,760
that's

325
00:12:47,760 --> 00:12:49,360
that's fine but that

326
00:12:49,360 --> 00:12:53,279
that definition is now drifting

327
00:12:53,279 --> 00:12:54,880
there were several other operational

328
00:12:54,880 --> 00:12:56,320
concerns um

329
00:12:56,320 --> 00:12:58,000
about whether or not sorry about having

330
00:12:58,000 --> 00:13:02,160
srh-less packets and the possibility for

331
00:13:02,160 --> 00:13:02,959
maybe

332
00:13:02,959 --> 00:13:06,399
helping sr v6 domain fail closed

333
00:13:06,399 --> 00:13:09,040
if you're interested in this uh i think

334
00:13:09,040 --> 00:13:10,880
much of this discussion will

335
00:13:10,880 --> 00:13:13,279
be happening on spring

336
00:13:13,279 --> 00:13:15,839
there is a way that uh six man can help

337
00:13:15,839 --> 00:13:18,079
srv6 domains to fail close and we can

338
00:13:18,079 --> 00:13:19,440
talk about that

339
00:13:19,440 --> 00:13:21,760
and suresh has volunteered to be the the

340
00:13:21,760 --> 00:13:23,279
lead on the draft for us thank you very

341
00:13:23,279 --> 00:13:25,040
much sresh

342
00:13:25,040 --> 00:13:26,880
um and we're uh

343
00:13:26,880 --> 00:13:28,320
talking with with other potential

344
00:13:28,320 --> 00:13:30,639
co-authors so

345
00:13:30,639 --> 00:13:33,120
i think next slide and over to sresh

346
00:13:33,120 --> 00:13:34,880
yeah thanks eric thank you

347
00:13:34,880 --> 00:13:36,959
and uh yeah so thank you very much for

348
00:13:36,959 --> 00:13:38,560
putting your trust in me i know this is

349
00:13:38,560 --> 00:13:40,560
not an easy topic and

350
00:13:40,560 --> 00:13:42,079
somebody explained to me like this is

351
00:13:42,079 --> 00:13:44,720
like falling on a grenade so like i do

352
00:13:44,720 --> 00:13:46,480
know what i'm getting myself into in

353
00:13:46,480 --> 00:13:47,440
this one

354
00:13:47,440 --> 00:13:49,440
and i really would appreciate like

355
00:13:49,440 --> 00:13:50,720
enough people in the working group like

356
00:13:50,720 --> 00:13:53,040
helping out with a bunch of things so um

357
00:13:53,040 --> 00:13:54,399
what i've done is like kind of gone

358
00:13:54,399 --> 00:13:55,760
through all the documents i've read like

359
00:13:55,760 --> 00:13:57,839
pretty much all the uh documents that

360
00:13:57,839 --> 00:13:59,920
are relevant to this like already so

361
00:13:59,920 --> 00:14:01,920
either like uh during my id term or

362
00:14:01,920 --> 00:14:03,839
after like out of interest

363
00:14:03,839 --> 00:14:07,040
and uh and also i managed to go through

364
00:14:07,040 --> 00:14:09,199
like all the mails on the six-man

365
00:14:09,199 --> 00:14:11,920
mailing list um i'm not sure if there's

366
00:14:11,920 --> 00:14:13,760
other stuff on the spring list that is

367
00:14:13,760 --> 00:14:16,000
not copied under six man so that's kind

368
00:14:16,000 --> 00:14:17,519
of my next step to

369
00:14:17,519 --> 00:14:18,320
do

370
00:14:18,320 --> 00:14:20,320
and like some really really interesting

371
00:14:20,320 --> 00:14:21,920
comments so thanks to everyone who

372
00:14:21,920 --> 00:14:24,320
commented on the mailing list um and

373
00:14:24,320 --> 00:14:25,920
like very specifically like you know to

374
00:14:25,920 --> 00:14:27,600
call out like you know eric's mail was

375
00:14:27,600 --> 00:14:30,800
very useful and and joel's mail

376
00:14:30,800 --> 00:14:32,399
um starting off this whole thing right

377
00:14:32,399 --> 00:14:34,079
like you know with some thoughts on it

378
00:14:34,079 --> 00:14:35,839
as well as brian's mails i found them

379
00:14:35,839 --> 00:14:39,120
like extremely uh useful to um kind of

380
00:14:39,120 --> 00:14:41,279
clarify the issues in there so i just

381
00:14:41,279 --> 00:14:42,959
started putting together a grab bag of

382
00:14:42,959 --> 00:14:44,959
things that i think should be in this

383
00:14:44,959 --> 00:14:46,959
draft again this is like a straw man

384
00:14:46,959 --> 00:14:50,000
proposal um it's an individual wrap

385
00:14:50,000 --> 00:14:51,600
right so i'm just like throwing this up

386
00:14:51,600 --> 00:14:54,480
at this point and if you feel

387
00:14:54,480 --> 00:14:56,240
and there's something that

388
00:14:56,240 --> 00:14:57,680
shouldn't be in this draft or something

389
00:14:57,680 --> 00:15:00,079
that should be there that i'm missing uh

390
00:15:00,079 --> 00:15:02,079
please like you know send a note to me

391
00:15:02,079 --> 00:15:04,160
and absolutely like either on list or

392
00:15:04,160 --> 00:15:07,680
off list either way is fine um and

393
00:15:07,680 --> 00:15:08,959
we can talk about like you know what

394
00:15:08,959 --> 00:15:10,320
goes in there

395
00:15:10,320 --> 00:15:12,320
so the the key things i want to cover is

396
00:15:12,320 --> 00:15:14,560
like you know how do uh sits deviate

397
00:15:14,560 --> 00:15:17,199
from classic uh 40 to 91 addresses right

398
00:15:17,199 --> 00:15:18,800
because they don't like you know it kind

399
00:15:18,800 --> 00:15:20,399
of doesn't walk like a duck or talk like

400
00:15:20,399 --> 00:15:22,560
a dog but it looks similarly similar to

401
00:15:22,560 --> 00:15:25,040
a duck and so how do we deviate them so

402
00:15:25,040 --> 00:15:27,279
try to describe like you know how they

403
00:15:27,279 --> 00:15:28,639
act differently

404
00:15:28,639 --> 00:15:30,959
and and like some of these have like in

405
00:15:30,959 --> 00:15:32,720
a pretty clear answer some of them don't

406
00:15:32,720 --> 00:15:34,160
so i'm just throwing them all up like

407
00:15:34,160 --> 00:15:35,600
because the idea is to put them in the

408
00:15:35,600 --> 00:15:36,480
draft

409
00:15:36,480 --> 00:15:38,320
and to describe like you know where the

410
00:15:38,320 --> 00:15:39,600
sits are assigned are they assigned to

411
00:15:39,600 --> 00:15:41,360
an interface are they assigned to a node

412
00:15:41,360 --> 00:15:43,839
because it makes a big difference um

413
00:15:43,839 --> 00:15:47,040
like other addresses that shows up uh

414
00:15:47,040 --> 00:15:48,320
in sids are they going to be used for

415
00:15:48,320 --> 00:15:50,320
neighbor discovery or not again big

416
00:15:50,320 --> 00:15:51,920
difference like in how and they should

417
00:15:51,920 --> 00:15:54,639
be treated and how do they appear to

418
00:15:54,639 --> 00:15:56,720
know that our s are unaware because i

419
00:15:56,720 --> 00:15:58,160
think one of the key

420
00:15:58,160 --> 00:16:00,800
uh differences for srv6 is like you know

421
00:16:00,800 --> 00:16:02,560
the if somebody's unaware they treat us

422
00:16:02,560 --> 00:16:04,800
like regular v6 packets right and like

423
00:16:04,800 --> 00:16:06,880
is there like you know any issues like

424
00:16:06,880 --> 00:16:09,120
lurking in there that we need to do uh

425
00:16:09,120 --> 00:16:11,040
and this is another thing that came up i

426
00:16:11,040 --> 00:16:12,320
think this is like a lot of these things

427
00:16:12,320 --> 00:16:13,600
have been kind of like knocking around

428
00:16:13,600 --> 00:16:15,759
for a while and this like said can it

429
00:16:15,759 --> 00:16:17,040
appear in the source address field

430
00:16:17,040 --> 00:16:18,480
that's like something that like is kind

431
00:16:18,480 --> 00:16:21,199
of newer that appeared um

432
00:16:21,199 --> 00:16:23,120
in the picture

433
00:16:23,120 --> 00:16:25,759
and how do we do error handling um this

434
00:16:25,759 --> 00:16:27,839
is like something a topic that we kind

435
00:16:27,839 --> 00:16:30,399
of addressed like earlier right when we

436
00:16:30,399 --> 00:16:32,480
had like um header insertion as an

437
00:16:32,480 --> 00:16:35,440
option for srh and one of the issues was

438
00:16:35,440 --> 00:16:36,639
that if somebody is doing header

439
00:16:36,639 --> 00:16:38,399
insertion in the middle of the network

440
00:16:38,399 --> 00:16:40,000
how would like a node that doesn't know

441
00:16:40,000 --> 00:16:42,240
about it be able to correlate like an

442
00:16:42,240 --> 00:16:44,160
error packet to something it sent so

443
00:16:44,160 --> 00:16:46,240
like vc says like

444
00:16:46,240 --> 00:16:47,600
is there like a similar issue that we

445
00:16:47,600 --> 00:16:49,440
need to handle right like how would it

446
00:16:49,440 --> 00:16:52,160
work for a node to um

447
00:16:52,160 --> 00:16:54,000
identify a packet that caused an error

448
00:16:54,000 --> 00:16:55,759
that came from the network right let's

449
00:16:55,759 --> 00:16:58,320
try to document that and and like this

450
00:16:58,320 --> 00:16:59,759
last one is like kind of pretty

451
00:16:59,759 --> 00:17:01,199
important that like eric brought up

452
00:17:01,199 --> 00:17:02,959
right like would this require some

453
00:17:02,959 --> 00:17:03,839
separate

454
00:17:03,839 --> 00:17:05,520
v6 space right like in a separate adder

455
00:17:05,520 --> 00:17:06,480
space

456
00:17:06,480 --> 00:17:08,400
and like you know a few options floating

457
00:17:08,400 --> 00:17:09,599
around like you know i'm not going to

458
00:17:09,599 --> 00:17:11,359
presuppose any numbers

459
00:17:11,359 --> 00:17:13,679
but i've seen like a lot of cool

460
00:17:13,679 --> 00:17:15,679
names like coming up there like for a

461
00:17:15,679 --> 00:17:17,280
separate address space so

462
00:17:17,280 --> 00:17:19,839
so if like we decide to go and do some

463
00:17:19,839 --> 00:17:21,439
kind of separation in the other space

464
00:17:21,439 --> 00:17:22,559
like you know where

465
00:17:22,559 --> 00:17:25,280
it's not like the first uh three bits uh

466
00:17:25,280 --> 00:17:26,720
like zero kind of thing right like you

467
00:17:26,720 --> 00:17:29,360
know to see if we can like separate out

468
00:17:29,360 --> 00:17:31,679
these things on another space where the

469
00:17:31,679 --> 00:17:33,200
the semantics are expected to be

470
00:17:33,200 --> 00:17:35,120
different so this is again uh something

471
00:17:35,120 --> 00:17:36,799
to explore so this is very very early

472
00:17:36,799 --> 00:17:38,160
like you know this like

473
00:17:38,160 --> 00:17:39,520
happened to me last week right like you

474
00:17:39,520 --> 00:17:40,799
know for like

475
00:17:40,799 --> 00:17:42,559
like a lack of a better verb to describe

476
00:17:42,559 --> 00:17:44,240
it so the idea is like you know these

477
00:17:44,240 --> 00:17:46,240
are the kind of grab bag of topics um

478
00:17:46,240 --> 00:17:48,080
that i'm expecting to cover so if you

479
00:17:48,080 --> 00:17:50,960
have uh any questions about these or you

480
00:17:50,960 --> 00:17:52,799
think like i'm barking up the wrong

481
00:17:52,799 --> 00:17:55,120
trees or anything just like send send us

482
00:17:55,120 --> 00:17:57,679
a note and we'll go from there and like

483
00:17:57,679 --> 00:18:00,720
um i started getting a few um um

484
00:18:00,720 --> 00:18:02,320
requests to co-author two like you know

485
00:18:02,320 --> 00:18:04,320
i'll keep you updated that my goal is to

486
00:18:04,320 --> 00:18:05,440
kind of have

487
00:18:05,440 --> 00:18:07,840
uh draft out like before like end of

488
00:18:07,840 --> 00:18:09,039
this year like you know some sometime

489
00:18:09,039 --> 00:18:10,480
like second half of december to have

490
00:18:10,480 --> 00:18:12,000
like a zero zero version of the draft

491
00:18:12,000 --> 00:18:12,960
out

492
00:18:12,960 --> 00:18:14,960
and put it up for comment uh from the

493
00:18:14,960 --> 00:18:16,240
working group

494
00:18:16,240 --> 00:18:20,240
so um again thank you very much uh for

495
00:18:20,240 --> 00:18:21,039
um

496
00:18:21,039 --> 00:18:23,200
being patient with me i'm asking for it

497
00:18:23,200 --> 00:18:25,760
in advance so please um

498
00:18:25,760 --> 00:18:27,039
feel free to send your comments thank

499
00:18:27,039 --> 00:18:29,840
you

500
00:18:31,919 --> 00:18:33,520
thank you suresh and also thank you to

501
00:18:33,520 --> 00:18:35,760
everyone who um

502
00:18:35,760 --> 00:18:36,559
helped

503
00:18:36,559 --> 00:18:38,880
all of us understand uh what it was that

504
00:18:38,880 --> 00:18:40,960
we needed to understand in such a

505
00:18:40,960 --> 00:18:42,640
speedy time there were lots of meetings

506
00:18:42,640 --> 00:18:44,320
with lots of people explaining things

507
00:18:44,320 --> 00:18:46,720
and uh handling uh questions there were

508
00:18:46,720 --> 00:18:48,480
lots of documents circulating and uh

509
00:18:48,480 --> 00:18:50,799
people making comments and

510
00:18:50,799 --> 00:18:52,400
generally helping helping us get to some

511
00:18:52,400 --> 00:18:53,600
clarity on

512
00:18:53,600 --> 00:18:56,480
uh what the core issues were so thank

513
00:18:56,480 --> 00:18:58,160
you to everyone who helped participate

514
00:18:58,160 --> 00:18:59,760
in that process

515
00:18:59,760 --> 00:19:01,280
thanks

516
00:19:01,280 --> 00:19:04,960
any comments from the group

517
00:19:09,039 --> 00:19:12,960
ron please go ahead

518
00:19:15,600 --> 00:19:20,000
six-man list the spring list privately

519
00:19:22,480 --> 00:19:24,240
sorry repeat that i think the first part

520
00:19:24,240 --> 00:19:25,360
clipped

521
00:19:25,360 --> 00:19:26,240
ah

522
00:19:26,240 --> 00:19:28,080
would you like comments on the six man

523
00:19:28,080 --> 00:19:30,559
list uh privately

524
00:19:30,559 --> 00:19:33,120
on spring list on both

525
00:19:33,120 --> 00:19:35,600
um uh personally the first two run but

526
00:19:35,600 --> 00:19:37,600
like um i'll also start like you know

527
00:19:37,600 --> 00:19:39,360
following string more closer because i i

528
00:19:39,360 --> 00:19:41,360
do follow six man all the time and

529
00:19:41,360 --> 00:19:43,039
spring like kind of on a

530
00:19:43,039 --> 00:19:44,559
item-based thing but i think that's

531
00:19:44,559 --> 00:19:46,480
gonna change but i do prefer like you

532
00:19:46,480 --> 00:19:49,600
know six man um and personally first but

533
00:19:49,600 --> 00:19:51,120
like no worries like if you send it on

534
00:19:51,120 --> 00:19:52,720
spring too that's fine

535
00:19:52,720 --> 00:19:54,160
okay thanks a lot

536
00:19:54,160 --> 00:19:56,000
thanks

537
00:19:56,000 --> 00:19:57,600
thank you and and then up to people

538
00:19:57,600 --> 00:19:59,120
joining in the microphone queue it looks

539
00:19:59,120 --> 00:20:01,440
like mitiko has a little problem with a

540
00:20:01,440 --> 00:20:04,480
delay when so unmute yourself wait

541
00:20:04,480 --> 00:20:06,320
counsel only two three and then you can

542
00:20:06,320 --> 00:20:07,760
speak

543
00:20:07,760 --> 00:20:11,200
um thanks a lot guys um

544
00:20:11,200 --> 00:20:14,559
thanks eric and suresh and now giuseppe

545
00:20:14,559 --> 00:20:16,880
you're up do you want to try

546
00:20:16,880 --> 00:20:18,720
sharing the slides yourself then you

547
00:20:18,720 --> 00:20:21,120
have full control hello yes

548
00:20:21,120 --> 00:20:22,480
can you hear me

549
00:20:22,480 --> 00:20:25,720
we can hear

550
00:20:38,080 --> 00:20:41,439
that seems to be working

551
00:20:47,039 --> 00:20:49,760
okay there we are please go ahead okay

552
00:20:49,760 --> 00:20:52,880
yeah as also bob and all uh anticipate

553
00:20:52,880 --> 00:20:54,799
that this is an update about the this

554
00:20:54,799 --> 00:20:58,559
graph that is in isg evaluation phase

555
00:20:58,559 --> 00:20:59,600
but

556
00:20:59,600 --> 00:21:02,799
we did some changes

557
00:21:02,799 --> 00:21:04,640
in the last month so it's better to give

558
00:21:04,640 --> 00:21:07,440
an update to the group

559
00:21:07,440 --> 00:21:10,240
it's about the pv6 application of the

560
00:21:10,240 --> 00:21:12,080
alternate marking method so in this

561
00:21:12,080 --> 00:21:14,840
slide we just summarize

562
00:21:14,840 --> 00:21:16,720
um for

563
00:21:16,720 --> 00:21:19,280
who is not familiar with this graph so

564
00:21:19,280 --> 00:21:21,679
uh this is a definition basically the

565
00:21:21,679 --> 00:21:24,240
definition of a new tlv to be encoded in

566
00:21:24,240 --> 00:21:26,799
the options adder so it can be bought

567
00:21:26,799 --> 00:21:28,799
and up by up options or distribution

568
00:21:28,799 --> 00:21:30,320
options

569
00:21:30,320 --> 00:21:33,919
um the format the pattern of the

570
00:21:33,919 --> 00:21:35,440
tlv

571
00:21:35,440 --> 00:21:38,080
is in the figure so the first three bits

572
00:21:38,080 --> 00:21:40,480
of the type field are all zero this

573
00:21:40,480 --> 00:21:42,320
means skip if you don't recognize and

574
00:21:42,320 --> 00:21:45,400
data do not change in root based on the

575
00:21:45,400 --> 00:21:47,120
rfc8200

576
00:21:47,120 --> 00:21:49,039
and then uh

577
00:21:49,039 --> 00:21:51,200
regarding the value here we have the two

578
00:21:51,200 --> 00:21:54,080
marking fields that are the relevant

579
00:21:54,080 --> 00:21:56,640
bits for the alternate marking so loss

580
00:21:56,640 --> 00:21:58,880
and delay bits and then the flow monitor

581
00:21:58,880 --> 00:22:01,280
identification field

582
00:22:01,280 --> 00:22:03,039
the

583
00:22:03,039 --> 00:22:05,919
the operation of this option is quite

584
00:22:05,919 --> 00:22:08,159
simple so the source node is the only

585
00:22:08,159 --> 00:22:10,880
one that writes this option later

586
00:22:10,880 --> 00:22:14,240
to mark the flow in both cases in bottle

587
00:22:14,240 --> 00:22:16,159
by open destination option

588
00:22:16,159 --> 00:22:19,120
in case of the hobbyop option either

589
00:22:19,120 --> 00:22:21,679
it can only be read by the intermediate

590
00:22:21,679 --> 00:22:24,720
nodes if they are configured to do so

591
00:22:24,720 --> 00:22:28,000
and the measurement is a hub biop

592
00:22:28,000 --> 00:22:30,000
otherwise if in case of destination

593
00:22:30,000 --> 00:22:32,640
option either

594
00:22:33,520 --> 00:22:35,760
it is processed only by this national

595
00:22:35,760 --> 00:22:38,799
then the measurement is end-to-end

596
00:22:38,799 --> 00:22:42,400
so this is just to recap the the draft

597
00:22:42,400 --> 00:22:45,360
regarding the isg evaluation we we got

598
00:22:45,360 --> 00:22:46,640
several

599
00:22:46,640 --> 00:22:49,280
uh comments and uh

600
00:22:49,280 --> 00:22:51,440
we addressed most of them

601
00:22:51,440 --> 00:22:53,600
and yeah this is just to summarize the

602
00:22:53,600 --> 00:22:55,760
most important changes the most relevant

603
00:22:55,760 --> 00:22:57,039
changes

604
00:22:57,039 --> 00:22:59,919
um first of all um i would like to

605
00:22:59,919 --> 00:23:02,159
mention a news that the section on

606
00:23:02,159 --> 00:23:04,480
controller domain has been improved in

607
00:23:04,480 --> 00:23:05,679
order to

608
00:23:05,679 --> 00:23:08,559
explain better the precondition for

609
00:23:08,559 --> 00:23:11,039
alternate marking application in a

610
00:23:11,039 --> 00:23:12,880
controller domain

611
00:23:12,880 --> 00:23:15,039
then a new subsection

612
00:23:15,039 --> 00:23:18,240
to clarify the usage scenarios for the

613
00:23:18,240 --> 00:23:21,280
measurement domain so we call it

614
00:23:21,280 --> 00:23:25,280
ultimate marking measurement domain

615
00:23:25,440 --> 00:23:28,400
also we further specify the flow

616
00:23:28,400 --> 00:23:31,360
monitoring identification

617
00:23:31,360 --> 00:23:32,320
field

618
00:23:32,320 --> 00:23:34,480
that must be used in combination with

619
00:23:34,480 --> 00:23:36,559
source and destination address in order

620
00:23:36,559 --> 00:23:38,320
to

621
00:23:38,320 --> 00:23:41,360
to avoid this amigo to solve this

622
00:23:41,360 --> 00:23:42,880
ambiguity

623
00:23:42,880 --> 00:23:45,360
and then we also revised and improved

624
00:23:45,360 --> 00:23:47,919
the security section that now i think is

625
00:23:47,919 --> 00:23:48,840
quite

626
00:23:48,840 --> 00:23:52,880
complete so now i'm going to describe

627
00:23:52,880 --> 00:23:54,880
each of these

628
00:23:54,880 --> 00:23:57,440
changes so regarding the controller

629
00:23:57,440 --> 00:23:59,760
domain we clarify

630
00:23:59,760 --> 00:24:03,600
with a must condition that the

631
00:24:03,600 --> 00:24:05,440
alternate marking method must be

632
00:24:05,440 --> 00:24:07,760
deployed in a controller domain this

633
00:24:07,760 --> 00:24:10,320
means that it's recommended that an

634
00:24:10,320 --> 00:24:11,840
implementation

635
00:24:11,840 --> 00:24:14,640
need to filter packets entering or

636
00:24:14,640 --> 00:24:16,799
leaving the controller domain with the

637
00:24:16,799 --> 00:24:20,240
ultimate marking data this also solved

638
00:24:20,240 --> 00:24:22,720
many uh security concerns that were

639
00:24:22,720 --> 00:24:24,480
raised

640
00:24:24,480 --> 00:24:27,840
uh we also added as i said um

641
00:24:27,840 --> 00:24:29,760
a new section on measurement domain in

642
00:24:29,760 --> 00:24:32,320
order to clarify the user scenarios of

643
00:24:32,320 --> 00:24:34,000
this methodology

644
00:24:34,000 --> 00:24:36,320
this means that the measurement domain

645
00:24:36,320 --> 00:24:37,840
of course can overlap with the

646
00:24:37,840 --> 00:24:40,000
controller domain or maybe a subset of

647
00:24:40,000 --> 00:24:42,240
the controller domain this is

648
00:24:42,240 --> 00:24:43,440
general

649
00:24:43,440 --> 00:24:48,240
the typical scenario that we identified

650
00:24:48,559 --> 00:24:49,760
are two

651
00:24:49,760 --> 00:24:52,240
the first one is when the user

652
00:24:52,240 --> 00:24:54,720
equipment is the starting or ending node

653
00:24:54,720 --> 00:24:56,640
but this means that

654
00:24:56,640 --> 00:25:00,720
the user equipment is fully managed

655
00:25:00,720 --> 00:25:02,640
and it belongs to the controller domain

656
00:25:02,640 --> 00:25:05,600
but this is not common of course so the

657
00:25:05,600 --> 00:25:07,918
most

658
00:25:08,320 --> 00:25:10,799
the most likely use case that we

659
00:25:10,799 --> 00:25:12,480
we mentioned is that

660
00:25:12,480 --> 00:25:15,360
the cp is the starting or ending node

661
00:25:15,360 --> 00:25:18,559
since it connects the user premises with

662
00:25:18,559 --> 00:25:21,039
the operator controller domain

663
00:25:21,039 --> 00:25:23,679
it can encapsulate the received packets

664
00:25:23,679 --> 00:25:26,240
in an outer epv6 adder which contains

665
00:25:26,240 --> 00:25:28,400
the alternate marking data

666
00:25:28,400 --> 00:25:31,520
and also the cp is also able to ensure

667
00:25:31,520 --> 00:25:32,799
the relevant

668
00:25:32,799 --> 00:25:35,200
security rules at the domain boundaries

669
00:25:35,200 --> 00:25:36,880
in order to filter

670
00:25:36,880 --> 00:25:40,039
the packets

671
00:25:42,159 --> 00:25:43,919
another um

672
00:25:43,919 --> 00:25:46,480
clarification that we have done in the

673
00:25:46,480 --> 00:25:48,880
latest version is about the the flow

674
00:25:48,880 --> 00:25:51,760
monitoring identification field

675
00:25:51,760 --> 00:25:53,039
um

676
00:25:53,039 --> 00:25:55,440
we clarified that this must only be used

677
00:25:55,440 --> 00:25:58,240
for floyd intimidification purpose for

678
00:25:58,240 --> 00:26:01,120
the measurement domain of course

679
00:26:01,120 --> 00:26:02,960
and

680
00:26:02,960 --> 00:26:05,840
also it is recommended considering the

681
00:26:05,840 --> 00:26:08,000
chance of collision of this field it is

682
00:26:08,000 --> 00:26:10,400
recommended that this identification

683
00:26:10,400 --> 00:26:11,440
field

684
00:26:11,440 --> 00:26:13,760
is is used in combination with source

685
00:26:13,760 --> 00:26:17,039
and destination address to identify flow

686
00:26:17,039 --> 00:26:18,799
the reason for that

687
00:26:18,799 --> 00:26:22,400
is because if the these two and these 20

688
00:26:22,400 --> 00:26:26,240
bits are set server randomly

689
00:26:26,240 --> 00:26:28,400
by a node there is a 50

690
00:26:28,400 --> 00:26:30,120
chance of collision for

691
00:26:30,120 --> 00:26:32,080
1200 fluid

692
00:26:32,080 --> 00:26:34,799
and if we consider one percent chance of

693
00:26:34,799 --> 00:26:36,799
collision we can monitor

694
00:26:36,799 --> 00:26:39,520
only 145

695
00:26:39,520 --> 00:26:41,760
flows per stairs

696
00:26:41,760 --> 00:26:44,720
so this is this can be acceptable but

697
00:26:44,720 --> 00:26:47,120
only if we consider source destination

698
00:26:47,120 --> 00:26:48,880
address in combination with the flow

699
00:26:48,880 --> 00:26:51,760
monitor identification

700
00:26:51,760 --> 00:26:54,960
in case of centralized control of course

701
00:26:54,960 --> 00:26:57,600
the things are much better because with

702
00:26:57,600 --> 00:27:00,240
20 bits the number of combinations is

703
00:27:00,240 --> 00:27:03,120
more than one million and in this case

704
00:27:03,120 --> 00:27:06,320
if you use it in combination with source

705
00:27:06,320 --> 00:27:08,880
and destination address you can monitor

706
00:27:08,880 --> 00:27:11,679
one million flows per space but

707
00:27:11,679 --> 00:27:13,600
i think this can cover most of the use

708
00:27:13,600 --> 00:27:15,760
cases

709
00:27:15,760 --> 00:27:18,640
of course in this regard the the draft

710
00:27:18,640 --> 00:27:20,480
clarified that

711
00:27:20,480 --> 00:27:22,559
all the nodes along the path

712
00:27:22,559 --> 00:27:24,640
should use the same mode of for

713
00:27:24,640 --> 00:27:26,480
identification of course in order to

714
00:27:26,480 --> 00:27:28,720
have

715
00:27:29,200 --> 00:27:33,120
the same the same identification

716
00:27:33,120 --> 00:27:35,360
field

717
00:27:35,360 --> 00:27:36,960
yeah the last part is about the

718
00:27:36,960 --> 00:27:38,480
improvement on the security

719
00:27:38,480 --> 00:27:40,720
considerations

720
00:27:40,720 --> 00:27:42,880
as i said the precondition for the

721
00:27:42,880 --> 00:27:44,720
alternate marking application to a

722
00:27:44,720 --> 00:27:47,200
controller domain is

723
00:27:47,200 --> 00:27:50,480
the main point that helped to mitigate

724
00:27:50,480 --> 00:27:53,200
and confined in containing the

725
00:27:53,200 --> 00:27:55,919
the security concerns and this the

726
00:27:55,919 --> 00:27:58,880
potential security issues

727
00:27:58,880 --> 00:28:01,679
we added few new consideration that i

728
00:28:01,679 --> 00:28:03,360
have included here

729
00:28:03,360 --> 00:28:05,279
but of course the security consideration

730
00:28:05,279 --> 00:28:09,200
now i think cover most of the

731
00:28:09,200 --> 00:28:11,120
all the concerns that were raised and

732
00:28:11,120 --> 00:28:12,480
this quite a

733
00:28:12,480 --> 00:28:13,600
section

734
00:28:13,600 --> 00:28:16,240
quite complete now

735
00:28:16,240 --> 00:28:18,000
the new considerations that were added

736
00:28:18,000 --> 00:28:20,080
were about

737
00:28:20,080 --> 00:28:23,279
some cases that were raised during the

738
00:28:23,279 --> 00:28:26,159
disg comments in particular the case

739
00:28:26,159 --> 00:28:28,399
where the network nodes for example can

740
00:28:28,399 --> 00:28:30,640
intentionally alter the alternate

741
00:28:30,640 --> 00:28:33,440
marking option

742
00:28:33,440 --> 00:28:36,159
for denial of service but

743
00:28:36,159 --> 00:28:38,720
if the implementation is done on managed

744
00:28:38,720 --> 00:28:40,320
nodes this can be

745
00:28:40,320 --> 00:28:43,440
mitigated at least

746
00:28:43,440 --> 00:28:45,919
also if packets are generated outside

747
00:28:45,919 --> 00:28:48,480
the controller domain may consume the

748
00:28:48,480 --> 00:28:49,919
resources

749
00:28:49,919 --> 00:28:52,399
but this can be solved by filtering

750
00:28:52,399 --> 00:28:55,520
those packets at domain boundaries

751
00:28:55,520 --> 00:28:58,240
leakages also may happen such as in case

752
00:28:58,240 --> 00:29:01,279
of failure or fault

753
00:29:01,279 --> 00:29:04,559
but nodes outside the domain must ignore

754
00:29:04,559 --> 00:29:06,159
these packets

755
00:29:06,159 --> 00:29:07,840
the packets with alternate marking

756
00:29:07,840 --> 00:29:10,159
options since they don't have to process

757
00:29:10,159 --> 00:29:12,399
it

758
00:29:12,399 --> 00:29:14,880
in addition we also clarify

759
00:29:14,880 --> 00:29:15,679
that

760
00:29:15,679 --> 00:29:19,039
for specific deployment scenarios

761
00:29:19,039 --> 00:29:21,360
multiple administrative domains may be

762
00:29:21,360 --> 00:29:22,559
traversed

763
00:29:22,559 --> 00:29:24,840
but in this case if we want

764
00:29:24,840 --> 00:29:29,279
to to have a world controller domain we

765
00:29:29,279 --> 00:29:30,240
have to

766
00:29:30,240 --> 00:29:34,159
use ipsec or some vpns to secure the

767
00:29:34,159 --> 00:29:37,200
inter domain links in order to build the

768
00:29:37,200 --> 00:29:38,880
world controller domain this is also

769
00:29:38,880 --> 00:29:40,960
another point that

770
00:29:40,960 --> 00:29:42,880
has been specified

771
00:29:42,880 --> 00:29:46,240
in addition it may be possible to

772
00:29:46,240 --> 00:29:49,440
use the marking field or the flow

773
00:29:49,440 --> 00:29:51,679
monitor identification field as a cover

774
00:29:51,679 --> 00:29:54,000
channel

775
00:29:54,000 --> 00:29:55,600
but also the controller domain

776
00:29:55,600 --> 00:29:56,880
application

777
00:29:56,880 --> 00:30:00,080
helps in this case as well

778
00:30:00,080 --> 00:30:01,120
of course the flow monitor

779
00:30:01,120 --> 00:30:02,640
identification is a sensitive

780
00:30:02,640 --> 00:30:04,960
information if it goes outside the

781
00:30:04,960 --> 00:30:07,120
controller domain but the controller

782
00:30:07,120 --> 00:30:08,399
domain application

783
00:30:08,399 --> 00:30:10,159
of course helped to

784
00:30:10,159 --> 00:30:13,279
solve or at least mitigate this issue as

785
00:30:13,279 --> 00:30:15,440
well

786
00:30:15,679 --> 00:30:17,679
yeah the summary so

787
00:30:17,679 --> 00:30:20,440
i think that most of the

788
00:30:20,440 --> 00:30:21,760
[Music]

789
00:30:21,760 --> 00:30:23,760
the concerns um

790
00:30:23,760 --> 00:30:26,000
are addressed in the latest version so

791
00:30:26,000 --> 00:30:28,000
maybe some needs is still missing i

792
00:30:28,000 --> 00:30:28,880
don't know

793
00:30:28,880 --> 00:30:30,159
um

794
00:30:30,159 --> 00:30:30,880
the

795
00:30:30,880 --> 00:30:32,799
the latest spending point that is

796
00:30:32,799 --> 00:30:34,720
relevant is about the informative

797
00:30:34,720 --> 00:30:37,919
reference to experimental rfc 321 and

798
00:30:37,919 --> 00:30:39,919
8889

799
00:30:39,919 --> 00:30:40,799
as you

800
00:30:40,799 --> 00:30:42,559
as you may recall we had the discussion

801
00:30:42,559 --> 00:30:44,720
on these in six months

802
00:30:44,720 --> 00:30:46,880
many lists and we say that downgrade in

803
00:30:46,880 --> 00:30:51,919
this case can work if we include in

804
00:30:51,919 --> 00:30:54,320
in our draft the detailed description of

805
00:30:54,320 --> 00:30:56,480
the methodologies

806
00:30:56,480 --> 00:30:59,039
the current version include the detailed

807
00:30:59,039 --> 00:31:01,200
description of the methodology but we

808
00:31:01,200 --> 00:31:03,519
still have some discussed positions

809
00:31:03,519 --> 00:31:04,960
about

810
00:31:04,960 --> 00:31:06,240
the

811
00:31:06,240 --> 00:31:08,159
the proposal to

812
00:31:08,159 --> 00:31:09,240
elevate

813
00:31:09,240 --> 00:31:12,480
rfc8321 and rfc889

814
00:31:12,480 --> 00:31:14,480
to standard track since they are now

815
00:31:14,480 --> 00:31:17,120
experimental

816
00:31:17,120 --> 00:31:20,240
so let's see if this is is a

817
00:31:20,240 --> 00:31:23,360
blocking a blocking issue to progress

818
00:31:23,360 --> 00:31:26,320
this document so we are waiting for

819
00:31:26,320 --> 00:31:28,880
the next sg review in order to

820
00:31:28,880 --> 00:31:30,880
understand if some discussed positions

821
00:31:30,880 --> 00:31:33,760
can be solved or not or if we really

822
00:31:33,760 --> 00:31:35,519
need to

823
00:31:35,519 --> 00:31:37,600
this this document to

824
00:31:37,600 --> 00:31:39,519
to overcome this issue

825
00:31:39,519 --> 00:31:41,919
so that's all for me so if you have

826
00:31:41,919 --> 00:31:46,679
questions comments and thank you

827
00:31:46,799 --> 00:31:49,440
thank you guys happy um it sounds like

828
00:31:49,440 --> 00:31:51,600
we there's enough hurdles but at least

829
00:31:51,600 --> 00:31:54,399
we're making progress and

830
00:31:54,399 --> 00:31:57,279
and we'll uh we'll follow up on the uh

831
00:31:57,279 --> 00:31:59,200
on the discussions uh

832
00:31:59,200 --> 00:32:01,919
let's hope we can we can sort those out

833
00:32:01,919 --> 00:32:04,480
any comments

834
00:32:09,919 --> 00:32:10,640
no

835
00:32:10,640 --> 00:32:13,440
we'll work with eric our id as well on

836
00:32:13,440 --> 00:32:16,880
these discussions and let's hope we

837
00:32:16,880 --> 00:32:18,559
it probably won't be this year but

838
00:32:18,559 --> 00:32:20,559
hopefully next year we'll have well

839
00:32:20,559 --> 00:32:22,240
hopefully well

840
00:32:22,240 --> 00:32:25,360
hopefully it won't take too long

841
00:32:25,360 --> 00:32:27,120
thanks a lot

842
00:32:27,120 --> 00:32:30,158
okay thank you again

843
00:32:34,320 --> 00:32:38,000
let's see so where are we now

844
00:32:38,000 --> 00:32:40,159
so now we have a set of

845
00:32:40,159 --> 00:32:42,540
new individual internet drafts um

846
00:32:42,540 --> 00:32:44,159
[Music]

847
00:32:44,159 --> 00:32:47,679
the first one is carrying vtn identifier

848
00:32:47,679 --> 00:32:49,039
g dong

849
00:32:49,039 --> 00:32:51,039
please go ahead

850
00:32:51,039 --> 00:32:54,000
grant you access

851
00:32:55,120 --> 00:32:57,200
the floor is yours

852
00:32:57,200 --> 00:33:01,039
yeah can you see my slides now

853
00:33:01,039 --> 00:33:03,279
yes see and hear you

854
00:33:03,279 --> 00:33:06,000
well okay slide

855
00:33:06,159 --> 00:33:08,640
uh hello everyone and this is judo and

856
00:33:08,640 --> 00:33:10,720
i'm going to give an update about this

857
00:33:10,720 --> 00:33:13,120
draft on the carrying rating identifier

858
00:33:13,120 --> 00:33:17,120
in the ipv6 extension header

859
00:33:17,120 --> 00:33:18,880
okay here are some background

860
00:33:18,880 --> 00:33:21,519
information i will go through it briefly

861
00:33:21,519 --> 00:33:24,720
basically we are proposing to

862
00:33:24,720 --> 00:33:26,960
produce an enhanced vaping service to

863
00:33:26,960 --> 00:33:28,960
meet the customers

864
00:33:28,960 --> 00:33:31,440
requirements in the 5g and other network

865
00:33:31,440 --> 00:33:34,320
scenarios which require connectivity

866
00:33:34,320 --> 00:33:37,200
services with advanced characteristics

867
00:33:37,200 --> 00:33:39,440
and for this we introduced the concept

868
00:33:39,440 --> 00:33:41,919
called vtn which is a virtual underlying

869
00:33:41,919 --> 00:33:44,880
network consisting of a set of dedicated

870
00:33:44,880 --> 00:33:47,600
or shared net resources and is

871
00:33:47,600 --> 00:33:50,799
associated with a customized topology

872
00:33:50,799 --> 00:33:52,720
it can be used as a virtual underlay to

873
00:33:52,720 --> 00:33:54,880
deliver our group of weapon plus

874
00:33:54,880 --> 00:33:56,720
services

875
00:33:56,720 --> 00:33:58,799
further we

876
00:33:58,799 --> 00:34:01,120
need an identifier of the vtn in the

877
00:34:01,120 --> 00:34:04,399
package so that it can be passed by each

878
00:34:04,399 --> 00:34:06,320
hub around the forwarding path to steer

879
00:34:06,320 --> 00:34:08,639
the package to use the set of resources

880
00:34:08,639 --> 00:34:10,399
allocated to the vtm for the packet

881
00:34:10,399 --> 00:34:11,918
processing

882
00:34:11,918 --> 00:34:13,679
in this document we propose the

883
00:34:13,679 --> 00:34:15,760
mechanism to carry the vtn information

884
00:34:15,760 --> 00:34:20,919
in the ipv6 hub hub extension header

885
00:34:21,119 --> 00:34:23,199
here is the proposed

886
00:34:23,199 --> 00:34:24,960
new option type

887
00:34:24,960 --> 00:34:27,520
to carry the vtn item identifier and

888
00:34:27,520 --> 00:34:29,520
information in the hubba hub extension

889
00:34:29,520 --> 00:34:33,119
header basically it contains a for octet

890
00:34:33,119 --> 00:34:35,520
identifier which is used to uniquely

891
00:34:35,520 --> 00:34:37,599
identify the set of network resources

892
00:34:37,599 --> 00:34:39,679
allocated to the vtn

893
00:34:39,679 --> 00:34:41,359
and its lens is to match with the

894
00:34:41,359 --> 00:34:43,679
network slice identifier defined in the

895
00:34:43,679 --> 00:34:46,399
3gbp for

896
00:34:46,839 --> 00:34:50,079
5g here are the procedures to process

897
00:34:50,079 --> 00:34:52,480
this uh information on the

898
00:34:52,480 --> 00:34:55,280
a edge node and the transient nodes

899
00:34:55,280 --> 00:34:57,920
on the ingress node it is based on the

900
00:34:57,920 --> 00:35:00,000
classification and mapping policy of the

901
00:35:00,000 --> 00:35:02,880
operator it will determine uh how the

902
00:35:02,880 --> 00:35:05,760
mac packet should be mapped to a vtn

903
00:35:05,760 --> 00:35:09,200
and to encapsulate outer ipv6 header to

904
00:35:09,200 --> 00:35:11,440
get rid of the waiting option in the

905
00:35:11,440 --> 00:35:13,760
hubba hub header which contains the

906
00:35:13,760 --> 00:35:16,000
identifier of the vtn resource and the

907
00:35:16,000 --> 00:35:17,920
package is mapped to

908
00:35:17,920 --> 00:35:20,960
then on each node along the packet path

909
00:35:20,960 --> 00:35:23,520
the ipv6 destination address is used to

910
00:35:23,520 --> 00:35:25,760
determine the desktop and outgoing

911
00:35:25,760 --> 00:35:26,960
interface

912
00:35:26,960 --> 00:35:29,440
the waiting resource id in the option in

913
00:35:29,440 --> 00:35:31,280
the beta option is used to further

914
00:35:31,280 --> 00:35:34,320
determine the set of resources allocated

915
00:35:34,320 --> 00:35:35,839
on article interface for packet

916
00:35:35,839 --> 00:35:37,680
processing

917
00:35:37,680 --> 00:35:40,240
with this the traffic class may be

918
00:35:40,240 --> 00:35:42,320
used to further provide difficult

919
00:35:42,320 --> 00:35:46,160
treatment for packets in the same vtn

920
00:35:46,160 --> 00:35:49,760
at ash node of this uh ipv6 domain it

921
00:35:49,760 --> 00:35:51,839
should encapsulate the outer ib basics

922
00:35:51,839 --> 00:35:54,240
header and the waiting option in the

923
00:35:54,240 --> 00:35:57,720
hubba hub header

924
00:35:59,599 --> 00:36:02,480
uh in this version we resolve some

925
00:36:02,480 --> 00:36:04,400
received comments after last item

926
00:36:04,400 --> 00:36:06,560
meeting and also offline

927
00:36:06,560 --> 00:36:09,920
and the first comment is is waiting id

928
00:36:09,920 --> 00:36:11,520
used to determine the path or the

929
00:36:11,520 --> 00:36:12,720
resource

930
00:36:12,720 --> 00:36:14,880
the resolution in the draft is

931
00:36:14,880 --> 00:36:16,960
the term has been changed to the waiting

932
00:36:16,960 --> 00:36:19,440
resource id to avoid the confusion and

933
00:36:19,440 --> 00:36:21,760
we clarify that its function is to

934
00:36:21,760 --> 00:36:24,640
determine the set of local resources

935
00:36:24,640 --> 00:36:26,880
the second comment was received is to

936
00:36:26,880 --> 00:36:28,880
suggest to add some text about the

937
00:36:28,880 --> 00:36:30,640
relationship between the vtn and the

938
00:36:30,640 --> 00:36:32,880
topology control mechanisms

939
00:36:32,880 --> 00:36:34,960
so that we have this drought with some

940
00:36:34,960 --> 00:36:37,599
text uh to describe the mechanisms used

941
00:36:37,599 --> 00:36:40,480
to specify the writing topology

942
00:36:40,480 --> 00:36:43,040
the third comment is to suggest to add

943
00:36:43,040 --> 00:36:44,960
brief introduction about the background

944
00:36:44,960 --> 00:36:47,839
vpn between plus btn

945
00:36:47,839 --> 00:36:50,000
so that we add an introduction about

946
00:36:50,000 --> 00:36:52,640
these concepts in the abstract also in

947
00:36:52,640 --> 00:36:55,839
the introduction

948
00:36:56,480 --> 00:36:59,440
so for the next steps uh because

949
00:36:59,440 --> 00:37:01,760
we think this document

950
00:37:01,760 --> 00:37:05,280
uh proposed to you the hardware hub as a

951
00:37:05,280 --> 00:37:08,160
extension header to carry a new option

952
00:37:08,160 --> 00:37:10,560
type for the hub forwarding treatment

953
00:37:10,560 --> 00:37:13,040
and which is uh i believe is a suitable

954
00:37:13,040 --> 00:37:15,200
approach for this applica application

955
00:37:15,200 --> 00:37:16,720
scenario

956
00:37:16,720 --> 00:37:17,760
and

957
00:37:17,760 --> 00:37:20,320
based on recent discussion and revisions

958
00:37:20,320 --> 00:37:22,000
the content of the document has been

959
00:37:22,000 --> 00:37:24,720
stable so the authors would like to

960
00:37:24,720 --> 00:37:27,280
request the working group adoption on

961
00:37:27,280 --> 00:37:29,520
this document

962
00:37:29,520 --> 00:37:33,800
that's all thank you

963
00:37:41,119 --> 00:37:44,400
thank you in the comments

964
00:37:48,839 --> 00:37:50,720
um

965
00:37:50,720 --> 00:37:53,599
so g has asked us uh if we should put

966
00:37:53,599 --> 00:37:56,320
this uh draft out for an adoption call

967
00:37:56,320 --> 00:37:59,359
um i was a little unsure of um the

968
00:37:59,359 --> 00:38:01,359
interest in the working group

969
00:38:01,359 --> 00:38:04,720
so i wonder if we should run a quick

970
00:38:04,720 --> 00:38:08,078
quick pull on this one

971
00:38:14,240 --> 00:38:16,000
so if you're interested in working on

972
00:38:16,000 --> 00:38:18,640
this draft could you please raise your

973
00:38:18,640 --> 00:38:19,920
hand

974
00:38:19,920 --> 00:38:22,079
and if you're not interested

975
00:38:22,079 --> 00:38:26,680
press the do not raise hand button

976
00:38:43,520 --> 00:38:45,280
just give that a few more seconds and

977
00:38:45,280 --> 00:38:47,359
the next one up is

978
00:38:47,359 --> 00:38:51,359
xiaomi with icpv6 extensions for iom

979
00:38:51,359 --> 00:38:54,359
capabilities

980
00:39:06,960 --> 00:39:08,400
so about

981
00:39:08,400 --> 00:39:12,560
37 hands there is or 38 hands there are

982
00:39:12,560 --> 00:39:14,400
27 hands

983
00:39:14,400 --> 00:39:19,280
down and 11 people who raised her hand

984
00:39:20,400 --> 00:39:21,280
so

985
00:39:21,280 --> 00:39:24,000
in that 140 hands and there's

986
00:39:24,000 --> 00:39:26,000
30 in the

987
00:39:26,000 --> 00:39:27,599
in the

988
00:39:27,599 --> 00:39:29,520
who keeping their hands well in their

989
00:39:29,520 --> 00:39:31,520
pockets

990
00:39:31,520 --> 00:39:34,320
the 11 seems to be stable

991
00:39:34,320 --> 00:39:36,000
yes

992
00:39:36,000 --> 00:39:37,920
i think the

993
00:39:37,920 --> 00:39:40,079
at least i can see the results i'll copy

994
00:39:40,079 --> 00:39:42,160
those for minutes i don't know if

995
00:39:42,160 --> 00:39:45,279
everyone else can see them

996
00:39:46,320 --> 00:39:49,599
okay excellent thank you jay um

997
00:39:49,599 --> 00:39:52,839
thank you

998
00:39:57,680 --> 00:40:02,319
okay child the floor is yours

999
00:40:02,400 --> 00:40:06,000
do you want to share the slides yourself

1000
00:40:07,040 --> 00:40:10,040
excellent

1001
00:40:19,200 --> 00:40:22,480
thank you please go ahead okay

1002
00:40:22,720 --> 00:40:24,960
okay thank you

1003
00:40:24,960 --> 00:40:27,200
uh hello everyone uh it's xiaomi

1004
00:40:27,200 --> 00:40:28,480
speaking

1005
00:40:28,480 --> 00:40:32,560
this presentation is on icmp v6

1006
00:40:32,560 --> 00:40:34,640
echo request reply

1007
00:40:34,640 --> 00:40:38,720
for enabled nc to oem capabilities

1008
00:40:38,720 --> 00:40:41,440
this is a zero zero version individual

1009
00:40:41,440 --> 00:40:43,839
draft

1010
00:40:50,240 --> 00:40:54,079
this is the background of this draft

1011
00:40:54,079 --> 00:40:59,040
draft ietf ippm iom comp state

1012
00:40:59,040 --> 00:41:02,240
defines a general method of iom

1013
00:41:02,240 --> 00:41:04,800
capabilities discovery

1014
00:41:04,800 --> 00:41:08,560
including iom capabilities formats

1015
00:41:08,560 --> 00:41:11,920
in that job the echo request reply

1016
00:41:11,920 --> 00:41:17,119
is used for iom capabilities discovery

1017
00:41:17,119 --> 00:41:21,119
through which the iom encapsulating node

1018
00:41:21,119 --> 00:41:22,880
can discover

1019
00:41:22,880 --> 00:41:25,920
the iom capabilities of each

1020
00:41:25,920 --> 00:41:27,920
iom transit

1021
00:41:27,920 --> 00:41:30,560
and decapsulating node

1022
00:41:30,560 --> 00:41:32,800
along the transport path

1023
00:41:32,800 --> 00:41:35,520
of data package

1024
00:41:35,520 --> 00:41:37,440
excuse me

1025
00:41:37,440 --> 00:41:39,680
is there anything your audio is clipping

1026
00:41:39,680 --> 00:41:41,839
quite a lot uh is there anything you

1027
00:41:41,839 --> 00:41:43,760
could do

1028
00:41:43,760 --> 00:41:46,000
to remedy that you think

1029
00:41:46,000 --> 00:41:49,000
oh

1030
00:41:49,200 --> 00:41:52,240
i don't know what uh

1031
00:41:52,240 --> 00:41:54,480
well what's what's the issue

1032
00:41:54,480 --> 00:41:55,280
but

1033
00:41:55,280 --> 00:42:00,400
it breaks off every three four seconds

1034
00:42:01,599 --> 00:42:03,680
if if you like we could

1035
00:42:03,680 --> 00:42:05,280
put you at the end and let the other

1036
00:42:05,280 --> 00:42:06,640
percentage go and see if you could

1037
00:42:06,640 --> 00:42:08,720
figure it out because it was it was very

1038
00:42:08,720 --> 00:42:12,560
disturbing for the presentation i think

1039
00:42:14,079 --> 00:42:16,880
uh okay that's fine

1040
00:42:16,880 --> 00:42:17,760
uh

1041
00:42:17,760 --> 00:42:19,760
that's fine okay okay yeah yeah let's

1042
00:42:19,760 --> 00:42:22,240
let's uh retry and then we'll jump to

1043
00:42:22,240 --> 00:42:24,319
the next and come back to you um thank

1044
00:42:24,319 --> 00:42:25,680
you

1045
00:42:25,680 --> 00:42:28,560
um okay

1046
00:42:29,280 --> 00:42:31,280
okay so um

1047
00:42:31,280 --> 00:42:32,800
what's the link go

1048
00:42:32,800 --> 00:42:35,119
do you have uh

1049
00:42:35,119 --> 00:42:37,599
your slides ready and then we can uh

1050
00:42:37,599 --> 00:42:40,160
so probably yes do you hear me

1051
00:42:40,160 --> 00:42:41,839
we can hear you fine

1052
00:42:41,839 --> 00:42:42,960
okay

1053
00:42:42,960 --> 00:42:46,160
i'll grant you access to the floor

1054
00:42:46,160 --> 00:42:48,319
yeah thank you

1055
00:42:48,319 --> 00:42:52,240
i need to find my slide deck

1056
00:42:53,680 --> 00:42:56,240
yeah here

1057
00:42:56,640 --> 00:42:59,280
excellent go ahead okay

1058
00:42:59,280 --> 00:43:02,000
okay fine uh we have a

1059
00:43:02,000 --> 00:43:04,079
middle size update from from the last

1060
00:43:04,079 --> 00:43:05,680
presentation but the last presentation

1061
00:43:05,680 --> 00:43:06,400
was

1062
00:43:06,400 --> 00:43:08,400
extremely short because

1063
00:43:08,400 --> 00:43:10,560
it was late

1064
00:43:10,560 --> 00:43:12,640
for the reason uh probably this time i

1065
00:43:12,640 --> 00:43:14,480
will speak like its first time because

1066
00:43:14,480 --> 00:43:16,319
it's it's really probably really the

1067
00:43:16,319 --> 00:43:18,560
case

1068
00:43:18,640 --> 00:43:20,240
okay uh

1069
00:43:20,240 --> 00:43:22,400
the background is probably very similar

1070
00:43:22,400 --> 00:43:24,640
which was already discussed many times

1071
00:43:24,640 --> 00:43:26,880
since explain it's about flash numbering

1072
00:43:26,880 --> 00:43:29,200
because the primarily the use cases are

1073
00:43:29,200 --> 00:43:31,440
taken from flash numbering which is

1074
00:43:31,440 --> 00:43:34,400
already rfc from v6 ops

1075
00:43:34,400 --> 00:43:36,480
to solve the problem but there is one

1076
00:43:36,480 --> 00:43:38,960
big difference there big difference that

1077
00:43:38,960 --> 00:43:41,680
we did try to address here not just uh

1078
00:43:41,680 --> 00:43:43,119
the cases which has been discussed in

1079
00:43:43,119 --> 00:43:44,960
flash genomic but additionally multi-hop

1080
00:43:44,960 --> 00:43:46,480
multi-prefix because

1081
00:43:46,480 --> 00:43:48,720
in the situation that we have multi-hop

1082
00:43:48,720 --> 00:43:51,920
multi prefix uh we have uh even bigger

1083
00:43:51,920 --> 00:43:56,000
challenge for for a situation when flash

1084
00:43:56,000 --> 00:43:57,599
numbering will happen then some prefix

1085
00:43:57,599 --> 00:44:00,160
will change and if we have a problem

1086
00:44:00,160 --> 00:44:01,839
even for the case then

1087
00:44:01,839 --> 00:44:03,760
the prefix will not change but even in

1088
00:44:03,760 --> 00:44:05,839
in the stable uh multi-hope multi-prefix

1089
00:44:05,839 --> 00:44:07,920
environment we have we have a problem

1090
00:44:07,920 --> 00:44:10,079
and we have found ways how to address

1091
00:44:10,079 --> 00:44:12,720
just maybe one disclaimer that

1092
00:44:12,720 --> 00:44:15,440
uh we did not drive to solve uh anything

1093
00:44:15,440 --> 00:44:17,760
after first hope i mean here we discuss

1094
00:44:17,760 --> 00:44:20,000
only navy discovery protocol of course

1095
00:44:20,000 --> 00:44:22,000
for proper operation of multi-hop multi

1096
00:44:22,000 --> 00:44:24,000
prefix you need you need more you need

1097
00:44:24,000 --> 00:44:25,200
next step

1098
00:44:25,200 --> 00:44:27,119
within the routers probably on the side

1099
00:44:27,119 --> 00:44:28,800
you need something like

1100
00:44:28,800 --> 00:44:30,560
source routing uh which we didn't

1101
00:44:30,560 --> 00:44:32,960
discuss here we are concentrated only on

1102
00:44:32,960 --> 00:44:37,200
the on the first hop problem

1103
00:44:37,200 --> 00:44:39,680
okay uh this slide i will tell i will

1104
00:44:39,680 --> 00:44:42,400
tell very short because uh it's original

1105
00:44:42,400 --> 00:44:44,400
problem which has been brought to this

1106
00:44:44,400 --> 00:44:47,599
exops to six men initially uh and uh

1107
00:44:47,599 --> 00:44:51,520
each which is discussed in 89 78 uh it's

1108
00:44:51,520 --> 00:44:52,960
the situation then

1109
00:44:52,960 --> 00:44:55,520
uh the router will reload or the uplink

1110
00:44:55,520 --> 00:44:56,640
will uh

1111
00:44:56,640 --> 00:44:59,119
will be established to telco and after

1112
00:44:59,119 --> 00:45:02,160
this if it would be new prefix and if

1113
00:45:02,160 --> 00:45:05,119
the router will coincide with this

1114
00:45:05,119 --> 00:45:06,960
will be different from the switch

1115
00:45:06,960 --> 00:45:09,520
separate device then it may be that the

1116
00:45:09,520 --> 00:45:11,920
previous uh prefix will not properly

1117
00:45:11,920 --> 00:45:14,000
will not be properly deprecated but the

1118
00:45:14,000 --> 00:45:15,760
new one will be announced and of course

1119
00:45:15,760 --> 00:45:18,160
host could use both and if host will use

1120
00:45:18,160 --> 00:45:20,319
old one which is not available anymore

1121
00:45:20,319 --> 00:45:22,079
of course it will create a problem it's

1122
00:45:22,079 --> 00:45:24,160
it's well known problem which i probably

1123
00:45:24,160 --> 00:45:25,839
don't need to stress too much maybe a

1124
00:45:25,839 --> 00:45:28,640
little bit uh new thing

1125
00:45:28,640 --> 00:45:30,480
we have here three cases one two three

1126
00:45:30,480 --> 00:45:32,480
because the case number three is really

1127
00:45:32,480 --> 00:45:35,440
new one uh only uh

1128
00:45:35,440 --> 00:45:36,960
whatever

1129
00:45:36,960 --> 00:45:39,599
loba has told us that uh it's it's a new

1130
00:45:39,599 --> 00:45:42,800
one case uh from our third author uh

1131
00:45:42,800 --> 00:45:45,280
it's a situation when for example the

1132
00:45:45,280 --> 00:45:46,880
box will be disconnected power

1133
00:45:46,880 --> 00:45:48,240
disconnected and would be replaced

1134
00:45:48,240 --> 00:45:50,160
physically replaced and after reload

1135
00:45:50,160 --> 00:45:52,160
because it will have different flash

1136
00:45:52,160 --> 00:45:54,960
memory different mac address and uh it

1137
00:45:54,960 --> 00:45:56,560
will look like different router it's a

1138
00:45:56,560 --> 00:45:58,240
little bit more complicated problem but

1139
00:45:58,240 --> 00:45:59,119
but

1140
00:45:59,119 --> 00:46:00,960
it's okay could be

1141
00:46:00,960 --> 00:46:03,920
very similar to flash numbering

1142
00:46:03,920 --> 00:46:05,440
the second case again a little bit

1143
00:46:05,440 --> 00:46:07,599
discussed maybe not as as much as in

1144
00:46:07,599 --> 00:46:09,680
this particular draft but it's discussed

1145
00:46:09,680 --> 00:46:13,440
already in uh 89 78 that could be the

1146
00:46:13,440 --> 00:46:15,520
situation that uh if some particular

1147
00:46:15,520 --> 00:46:17,359
management system will change something

1148
00:46:17,359 --> 00:46:19,839
up abruptly without proper duplication

1149
00:46:19,839 --> 00:46:21,200
uh especially

1150
00:46:21,200 --> 00:46:22,880
hard situation if

1151
00:46:22,880 --> 00:46:25,119
vlan will be changed on the switch then

1152
00:46:25,119 --> 00:46:27,520
the host will be connected to different

1153
00:46:27,520 --> 00:46:29,599
elan effectively different subnet and if

1154
00:46:29,599 --> 00:46:31,200
it's different subnet of course prefix

1155
00:46:31,200 --> 00:46:33,119
would be different and the previous one

1156
00:46:33,119 --> 00:46:35,119
would not be deprecated its

1157
00:46:35,119 --> 00:46:36,560
router in this situation could do

1158
00:46:36,560 --> 00:46:38,560
nothing because if vlan will change very

1159
00:46:38,560 --> 00:46:41,359
fast it's not possible to react

1160
00:46:41,359 --> 00:46:43,920
the situation then um

1161
00:46:43,920 --> 00:46:46,319
some configuration maybe even prefix

1162
00:46:46,319 --> 00:46:47,839
would be changed on the router is

1163
00:46:47,839 --> 00:46:49,440
possible too but

1164
00:46:49,440 --> 00:46:52,880
it's if nms or sdn or whatever uh not

1165
00:46:52,880 --> 00:46:54,640
developed properly if it's a really

1166
00:46:54,640 --> 00:46:57,280
abrupt change then again it could change

1167
00:46:57,280 --> 00:46:58,560
and then

1168
00:46:58,560 --> 00:47:00,400
the host will have two prefixes and of

1169
00:47:00,400 --> 00:47:02,480
course cost host could not

1170
00:47:02,480 --> 00:47:03,839
could choose

1171
00:47:03,839 --> 00:47:05,440
the wrong one

1172
00:47:05,440 --> 00:47:07,760
this is a really new slide

1173
00:47:07,760 --> 00:47:11,920
uh compared to rfc 8978 because here is

1174
00:47:11,920 --> 00:47:13,920
a discussion that could be the situation

1175
00:47:13,920 --> 00:47:16,400
then then particular uh

1176
00:47:16,400 --> 00:47:19,119
site has connection maybe by different

1177
00:47:19,119 --> 00:47:21,119
routers connected connection maybe

1178
00:47:21,119 --> 00:47:22,480
couple of connections maybe one

1179
00:47:22,480 --> 00:47:24,480
connection to different carriers uh

1180
00:47:24,480 --> 00:47:26,480
typical multi-hope multiplex and in this

1181
00:47:26,480 --> 00:47:28,240
situation two things should happen

1182
00:47:28,240 --> 00:47:29,680
properly one thing

1183
00:47:29,680 --> 00:47:31,760
initially the host should choose proper

1184
00:47:31,760 --> 00:47:33,040
source address

1185
00:47:33,040 --> 00:47:34,720
because if the host will not choose

1186
00:47:34,720 --> 00:47:36,839
proper source address and

1187
00:47:36,839 --> 00:47:39,359
then uh it wouldn't not possible to

1188
00:47:39,359 --> 00:47:41,119
reach for example wallet garden in one

1189
00:47:41,119 --> 00:47:43,520
particular telco and then after service

1190
00:47:43,520 --> 00:47:47,280
address properly chosen then should be

1191
00:47:47,599 --> 00:47:49,839
forwarded to to proper destination uh to

1192
00:47:49,839 --> 00:47:51,440
put to proper next

1193
00:47:51,440 --> 00:47:53,440
uh initially next scope should be proper

1194
00:47:53,440 --> 00:47:55,040
one on the first hop link and then of

1195
00:47:55,040 --> 00:47:56,960
course it should be uh

1196
00:47:56,960 --> 00:47:59,280
proper one between routers if site has

1197
00:47:59,280 --> 00:48:01,520
many routers but this one with one

1198
00:48:01,520 --> 00:48:03,520
discussion about how to do service

1199
00:48:03,520 --> 00:48:05,760
routing between within routers is out of

1200
00:48:05,760 --> 00:48:08,000
the scope here is only the first hop in

1201
00:48:08,000 --> 00:48:10,319
the scope these two two stages to choose

1202
00:48:10,319 --> 00:48:11,920
proper source addition to choose proper

1203
00:48:11,920 --> 00:48:15,599
next hope uh for the host is discussed

1204
00:48:15,599 --> 00:48:16,640
in the

1205
00:48:16,640 --> 00:48:18,240
uh in this particular draft in the two

1206
00:48:18,240 --> 00:48:20,000
situation in a normal situation and in

1207
00:48:20,000 --> 00:48:21,680
this situation then particular uplink

1208
00:48:21,680 --> 00:48:23,920
for example is down uh it's it's a more

1209
00:48:23,920 --> 00:48:26,160
or less complicated discussion it's a

1210
00:48:26,160 --> 00:48:27,839
big section a big section in this

1211
00:48:27,839 --> 00:48:30,400
particular draft

1212
00:48:30,400 --> 00:48:31,200
okay

1213
00:48:31,200 --> 00:48:33,440
effectively we have here

1214
00:48:33,440 --> 00:48:35,359
about seven problems and for seven

1215
00:48:35,359 --> 00:48:37,839
problems we have um some number of

1216
00:48:37,839 --> 00:48:40,640
solutions uh nine overall because some

1217
00:48:40,640 --> 00:48:42,240
particular solutions is the solutions

1218
00:48:42,240 --> 00:48:44,720
for uh for a few uh

1219
00:48:44,720 --> 00:48:47,680
for a few cases uh effectively it's uh

1220
00:48:47,680 --> 00:48:49,520
multi-hop support basic multi-hop

1221
00:48:49,520 --> 00:48:50,640
support uh

1222
00:48:50,640 --> 00:48:53,359
for from the first hop point of view uh

1223
00:48:53,359 --> 00:48:54,800
a situation when in multi-hop

1224
00:48:54,800 --> 00:48:56,319
environment one particular link one

1225
00:48:56,319 --> 00:48:58,800
particular router is downed uh

1226
00:48:58,800 --> 00:49:00,880
abrupt configuration change is something

1227
00:49:00,880 --> 00:49:03,920
that change change not not gracefully if

1228
00:49:03,920 --> 00:49:05,680
the previous prefix is not deprecated

1229
00:49:05,680 --> 00:49:07,119
for any reason then some number of

1230
00:49:07,119 --> 00:49:08,880
reasons is discussed what it could be

1231
00:49:08,880 --> 00:49:11,760
why why it could not graceful could be

1232
00:49:11,760 --> 00:49:14,880
of course a power outage uh could be

1233
00:49:14,880 --> 00:49:17,440
abrupt router outage because you know in

1234
00:49:17,440 --> 00:49:19,760
in home environment people typically try

1235
00:49:19,760 --> 00:49:22,240
to fix any problem by disconnect power

1236
00:49:22,240 --> 00:49:23,920
reconnect power it's it's a typical

1237
00:49:23,920 --> 00:49:26,000
behavior of every subscriber

1238
00:49:26,000 --> 00:49:27,520
for that reason it's more or less

1239
00:49:27,520 --> 00:49:29,680
typical situation than

1240
00:49:29,680 --> 00:49:33,359
home gateway cp home gateway is

1241
00:49:33,359 --> 00:49:35,440
power power recycle is more or less

1242
00:49:35,440 --> 00:49:37,920
normal situation a little bit maybe

1243
00:49:37,920 --> 00:49:40,720
small discussion on the situation then

1244
00:49:40,720 --> 00:49:42,400
link local address

1245
00:49:42,400 --> 00:49:44,880
of the router itself is change it it may

1246
00:49:44,880 --> 00:49:46,880
be by configuration and

1247
00:49:46,880 --> 00:49:49,119
there is discussion what to do and there

1248
00:49:49,119 --> 00:49:51,040
are uh some number of more or less

1249
00:49:51,040 --> 00:49:52,000
simple

1250
00:49:52,000 --> 00:49:54,400
more or less simple modifications uh

1251
00:49:54,400 --> 00:49:56,559
which is proposed to standard but okay

1252
00:49:56,559 --> 00:49:58,880
every modification is by itself is maybe

1253
00:49:58,880 --> 00:50:00,640
simple but because overall is nine

1254
00:50:00,640 --> 00:50:02,880
modifications it overall may be complex

1255
00:50:02,880 --> 00:50:05,839
because uh maybe some permutation maybe

1256
00:50:05,839 --> 00:50:07,440
some uh

1257
00:50:07,440 --> 00:50:08,960
influence from one particular

1258
00:50:08,960 --> 00:50:10,640
modification to another almost all

1259
00:50:10,640 --> 00:50:13,599
modifications related to nd protocol to

1260
00:50:13,599 --> 00:50:17,520
both drafts to both rfc uh ndn slack and

1261
00:50:17,520 --> 00:50:20,079
only only one is related to cpu

1262
00:50:20,079 --> 00:50:22,480
requirements uh where

1263
00:50:22,480 --> 00:50:24,960
we have recommendation uh to change

1264
00:50:24,960 --> 00:50:26,400
current practice because current

1265
00:50:26,400 --> 00:50:27,760
practice which is not suitable for

1266
00:50:27,760 --> 00:50:29,760
multi-hop multi multi-perfect

1267
00:50:29,760 --> 00:50:31,920
environment current practice if some

1268
00:50:31,920 --> 00:50:33,440
particular uplink or some particular

1269
00:50:33,440 --> 00:50:36,319
prefix route to the carrier is is lost

1270
00:50:36,319 --> 00:50:38,480
some particular prefix is lost then the

1271
00:50:38,480 --> 00:50:41,520
current recommendation is uh to have

1272
00:50:41,520 --> 00:50:42,319
uh

1273
00:50:42,319 --> 00:50:44,800
to to cancel default routers to

1274
00:50:44,800 --> 00:50:47,280
duplicate default routers status but

1275
00:50:47,280 --> 00:50:48,960
it's not it's not possible it does not

1276
00:50:48,960 --> 00:50:50,880
work properly for multi-hop multi-prefix

1277
00:50:50,880 --> 00:50:52,800
environment for that reason we change

1278
00:50:52,800 --> 00:50:54,960
changed to recommendation to duplicate

1279
00:50:54,960 --> 00:50:57,920
prefixes it's not just us we we have

1280
00:50:57,920 --> 00:51:00,240
seen it for example from home net for

1281
00:51:00,240 --> 00:51:02,640
example they have the same same

1282
00:51:02,640 --> 00:51:03,920
modification

1283
00:51:03,920 --> 00:51:06,160
uh in reality draft is more or less big

1284
00:51:06,160 --> 00:51:07,520
because uh

1285
00:51:07,520 --> 00:51:10,640
nine nine nine solutions and

1286
00:51:10,640 --> 00:51:12,400
for seven problems seven technical

1287
00:51:12,400 --> 00:51:14,480
problems nine nine technical solutions

1288
00:51:14,480 --> 00:51:16,079
is more or less big big document as a

1289
00:51:16,079 --> 00:51:17,040
result

1290
00:51:17,040 --> 00:51:19,280
we invite everybody for for

1291
00:51:19,280 --> 00:51:20,839
participation in

1292
00:51:20,839 --> 00:51:24,400
discussion about this draft or about

1293
00:51:24,400 --> 00:51:25,680
we believe

1294
00:51:25,680 --> 00:51:28,000
we have found all situations not just

1295
00:51:28,000 --> 00:51:30,800
flash remembering which is uh already

1296
00:51:30,800 --> 00:51:33,680
discussed in rfc but we have found all

1297
00:51:33,680 --> 00:51:36,319
other situations then some particular nd

1298
00:51:36,319 --> 00:51:38,640
protocol information could become stale

1299
00:51:38,640 --> 00:51:40,640
effectively it's like we stated in the

1300
00:51:40,640 --> 00:51:43,440
name it's indeed robustness it's uh how

1301
00:51:43,440 --> 00:51:46,160
to fix all stale situation when

1302
00:51:46,160 --> 00:51:49,280
information is stale in ng protocol

1303
00:51:49,280 --> 00:51:51,839
that's it

1304
00:51:52,240 --> 00:51:54,720
questions

1305
00:51:56,400 --> 00:51:58,480
thank you quite a look a new a lot of

1306
00:51:58,480 --> 00:52:00,160
comments on the chat so if someone want

1307
00:52:00,160 --> 00:52:03,119
to represent the view from there

1308
00:52:03,119 --> 00:52:06,880
up to the microphone q you're welcome

1309
00:52:14,480 --> 00:52:16,839
jen please go

1310
00:52:16,839 --> 00:52:20,960
ahead oh so i'm a bit confused here

1311
00:52:20,960 --> 00:52:23,440
because we just discussed it on the chat

1312
00:52:23,440 --> 00:52:24,720
hosts which

1313
00:52:24,720 --> 00:52:27,359
supports rule 55 of default address

1314
00:52:27,359 --> 00:52:32,640
collections which is rfc 1828 right will

1315
00:52:32,640 --> 00:52:36,079
be basically not really affected by like

1316
00:52:36,079 --> 00:52:37,200
sudden

1317
00:52:37,200 --> 00:52:39,359
router replacement

1318
00:52:39,359 --> 00:52:42,319
right so i'm not sure we really need to

1319
00:52:42,319 --> 00:52:44,640
tweet indeed too much

1320
00:52:44,640 --> 00:52:47,200
we already have a solution for most of

1321
00:52:47,200 --> 00:52:48,880
those problems it's just cost

1322
00:52:48,880 --> 00:52:51,280
implementations do not care

1323
00:52:51,280 --> 00:52:53,920
so maybe we need to like focus on this

1324
00:52:53,920 --> 00:52:55,359
part

1325
00:52:55,359 --> 00:52:58,319
uh we believe no uh that it's not the

1326
00:52:58,319 --> 00:52:59,359
case

1327
00:52:59,359 --> 00:53:04,319
yes really uh 1828 rfc 1828

1328
00:53:04,319 --> 00:53:07,520
has a good recommendation but uh it's uh

1329
00:53:07,520 --> 00:53:09,920
general without details how to properly

1330
00:53:09,920 --> 00:53:12,640
achieve this uh for that reason yes this

1331
00:53:12,640 --> 00:53:15,280
particular fc uh formally

1332
00:53:15,280 --> 00:53:17,280
should resolve multi-hope multi-practice

1333
00:53:17,280 --> 00:53:19,839
situation should uh but in reality it is

1334
00:53:19,839 --> 00:53:22,000
not resolved because no no not enough

1335
00:53:22,000 --> 00:53:23,440
utilization what should be really

1336
00:53:23,440 --> 00:53:26,160
changed in nd protocol it's just

1337
00:53:26,160 --> 00:53:29,119
a good guidance good direction not not

1338
00:53:29,119 --> 00:53:32,240
the detailed explanation what to do

1339
00:53:32,240 --> 00:53:34,480
no sorry i think

1340
00:53:34,480 --> 00:53:36,720
it's not about changing indeed protocol

1341
00:53:36,720 --> 00:53:38,800
it's about cost

1342
00:53:38,800 --> 00:53:42,319
i use a binding next hope with the

1343
00:53:42,319 --> 00:53:44,240
source address right

1344
00:53:44,240 --> 00:53:46,240
and it's already basically it's

1345
00:53:46,240 --> 00:53:48,000
basically rule 55 of default address

1346
00:53:48,000 --> 00:53:49,920
selection unfortunately as there are not

1347
00:53:49,920 --> 00:53:52,000
so many implementations of the hostile

1348
00:53:52,000 --> 00:53:54,160
host side here but again the chicken and

1349
00:53:54,160 --> 00:53:55,359
egg problem

1350
00:53:55,359 --> 00:53:59,200
uh hosts there is no probably use cases

1351
00:53:59,200 --> 00:54:02,480
yet for multi-home ipv6 networks

1352
00:54:02,480 --> 00:54:05,119
so that's why we do not see it in like

1353
00:54:05,119 --> 00:54:06,960
real life so i don't think it's indeed

1354
00:54:06,960 --> 00:54:08,480
problem i think it's a host

1355
00:54:08,480 --> 00:54:09,920
implementation problem from address

1356
00:54:09,920 --> 00:54:12,800
selection perspective

1357
00:54:13,119 --> 00:54:16,240
but this host selection is anyway

1358
00:54:16,240 --> 00:54:18,960
related to indeed because uh

1359
00:54:18,960 --> 00:54:20,319
you should have

1360
00:54:20,319 --> 00:54:21,760
you should do two things you should to

1361
00:54:21,760 --> 00:54:23,040
properly choose source address and

1362
00:54:23,040 --> 00:54:26,000
properly choose next scope to two stages

1363
00:54:26,000 --> 00:54:26,800
uh

1364
00:54:26,800 --> 00:54:29,200
rfc 8028

1365
00:54:29,200 --> 00:54:31,040
gives a general recommendation how to

1366
00:54:31,040 --> 00:54:32,960
prop co it's really good recommendation

1367
00:54:32,960 --> 00:54:34,720
we follow it by the way uh we don't

1368
00:54:34,720 --> 00:54:36,559
contradict to this recommendation just

1369
00:54:36,559 --> 00:54:39,040
we have more details but in reality we

1370
00:54:39,040 --> 00:54:40,640
follow this particular recommendation

1371
00:54:40,640 --> 00:54:42,960
how to properly choose source address

1372
00:54:42,960 --> 00:54:45,359
uh how much is it enough

1373
00:54:45,359 --> 00:54:47,440
we believe is not because

1374
00:54:47,440 --> 00:54:50,000
probably some more details is needed but

1375
00:54:50,000 --> 00:54:52,240
maybe it's discussable maybe i'm wrong

1376
00:54:52,240 --> 00:54:54,479
here

1377
00:54:59,280 --> 00:55:01,680
anyway

1378
00:55:01,760 --> 00:55:05,079
in the room

1379
00:55:09,119 --> 00:55:11,760
if not it sounds like something we

1380
00:55:11,760 --> 00:55:13,680
need to continue to discuss on the on

1381
00:55:13,680 --> 00:55:16,399
the mailing list

1382
00:55:17,760 --> 00:55:20,079
yeah and i'll add that my take is i

1383
00:55:20,079 --> 00:55:22,160
think there needs to be some agreement

1384
00:55:22,160 --> 00:55:24,160
on the problems

1385
00:55:24,160 --> 00:55:27,280
uh before spending a lot of time on the

1386
00:55:27,280 --> 00:55:29,920
possible solutions

1387
00:55:29,920 --> 00:55:32,319
and see if you can build a consensus in

1388
00:55:32,319 --> 00:55:35,119
the on the list for that there's some

1389
00:55:35,119 --> 00:55:36,559
problems that

1390
00:55:36,559 --> 00:55:37,839
need to be solved that we don't

1391
00:55:37,839 --> 00:55:39,760
currently solve in other

1392
00:55:39,760 --> 00:55:42,480
mechanisms

1393
00:55:47,520 --> 00:55:50,960
well thank you uh edward um

1394
00:55:50,960 --> 00:55:54,480
then we have uh fred templin on physics

1395
00:55:54,480 --> 00:55:58,160
fragment retransmission

1396
00:55:59,440 --> 00:56:01,680
do you want to kill white

1397
00:56:01,680 --> 00:56:03,280
i can hear you french

1398
00:56:03,280 --> 00:56:04,640
okay i'm going to try to share the

1399
00:56:04,640 --> 00:56:07,680
slides give me a moment

1400
00:56:14,640 --> 00:56:16,480
okay there you are we have the slides

1401
00:56:16,480 --> 00:56:17,440
that's right

1402
00:56:17,440 --> 00:56:20,799
um i'll even get video

1403
00:56:21,920 --> 00:56:22,799
okay

1404
00:56:22,799 --> 00:56:24,640
good go ahead okay

1405
00:56:24,640 --> 00:56:27,440
ipv6 fragment retransmission

1406
00:56:27,440 --> 00:56:29,599
this is a new draft

1407
00:56:29,599 --> 00:56:32,240
it's a new draft but it's a very very

1408
00:56:32,240 --> 00:56:34,160
very old subject

1409
00:56:34,160 --> 00:56:36,400
and it's something that's been uh known

1410
00:56:36,400 --> 00:56:39,520
for about 35 years

1411
00:56:39,520 --> 00:56:41,119
and the motivation which is the big

1412
00:56:41,119 --> 00:56:43,040
picture for this whole talk is that some

1413
00:56:43,040 --> 00:56:44,480
applications

1414
00:56:44,480 --> 00:56:47,200
see greater performance by sending ipv6

1415
00:56:47,200 --> 00:56:49,359
packets that are larger than the path

1416
00:56:49,359 --> 00:56:50,640
mtu

1417
00:56:50,640 --> 00:56:52,880
some examples are nfs over udp which has

1418
00:56:52,880 --> 00:56:55,440
been known since the 1980s

1419
00:56:55,440 --> 00:56:57,480
ltp which is the dtm look lighter

1420
00:56:57,480 --> 00:57:00,559
transmission protocol over udp

1421
00:57:00,559 --> 00:57:02,319
i have a question mark after quick

1422
00:57:02,319 --> 00:57:03,839
because i really haven't had time to

1423
00:57:03,839 --> 00:57:05,599
investigate quick but since quick uses

1424
00:57:05,599 --> 00:57:06,640
udp

1425
00:57:06,640 --> 00:57:08,400
it also could potentially see better

1426
00:57:08,400 --> 00:57:11,520
performance by using ipv6 fragmentation

1427
00:57:11,520 --> 00:57:14,640
and then also finally ipv6 tunnels

1428
00:57:14,640 --> 00:57:16,640
now this is readily demonstrated with

1429
00:57:16,640 --> 00:57:19,599
iperf 3. if you were to put together two

1430
00:57:19,599 --> 00:57:22,400
ubuntu laptops over an arbitrary network

1431
00:57:22,400 --> 00:57:24,319
and use iperf3 you'll see better

1432
00:57:24,319 --> 00:57:26,480
performance by sending packets that are

1433
00:57:26,480 --> 00:57:28,880
larger than the path mtu than you'll see

1434
00:57:28,880 --> 00:57:31,680
by sending smaller packets

1435
00:57:31,680 --> 00:57:33,680
now when a source

1436
00:57:33,680 --> 00:57:36,000
fragments an ipv6 packet

1437
00:57:36,000 --> 00:57:38,640
that's larger than the path mtu

1438
00:57:38,640 --> 00:57:40,880
we have the problem that the loss unit

1439
00:57:40,880 --> 00:57:43,040
which is an individual fragment

1440
00:57:43,040 --> 00:57:45,280
is smaller than the re-transmission unit

1441
00:57:45,280 --> 00:57:46,880
the entire packet

1442
00:57:46,880 --> 00:57:49,839
so for example if a 64k byte packet was

1443
00:57:49,839 --> 00:57:52,880
sent in fragments of 12 1280 bytes

1444
00:57:52,880 --> 00:57:55,119
and one of those fragments was lost

1445
00:57:55,119 --> 00:57:57,599
you'd have a re-transmission storm of 64

1446
00:57:57,599 --> 00:57:59,920
1280 byte

1447
00:57:59,920 --> 00:58:01,839
fragments when when you would really

1448
00:58:01,839 --> 00:58:04,160
only prefer to retransmit just the one

1449
00:58:04,160 --> 00:58:05,760
that was lost

1450
00:58:05,760 --> 00:58:07,920
so the objective is to when possible

1451
00:58:07,920 --> 00:58:10,000
re-transmit individual fragments to make

1452
00:58:10,000 --> 00:58:12,160
the loss unit to be equal to the

1453
00:58:12,160 --> 00:58:15,200
re-transmission unit

1454
00:58:16,640 --> 00:58:19,280
so how does ipv6 fragmentation work well

1455
00:58:19,280 --> 00:58:20,960
there's a fragment header that includes

1456
00:58:20,960 --> 00:58:22,880
an 8-bit reserve field which is set to

1457
00:58:22,880 --> 00:58:24,640
zero on transmission and ignored on

1458
00:58:24,640 --> 00:58:26,079
reception

1459
00:58:26,079 --> 00:58:28,400
um the source

1460
00:58:28,400 --> 00:58:30,319
is now going to be using this reserve

1461
00:58:30,319 --> 00:58:33,680
field to encode a fragment ordinal value

1462
00:58:33,680 --> 00:58:35,599
plus a re-transmission supported

1463
00:58:35,599 --> 00:58:37,680
indication bit

1464
00:58:37,680 --> 00:58:39,920
the destination is going to maintain a

1465
00:58:39,920 --> 00:58:42,400
per packet ordinal checklist

1466
00:58:42,400 --> 00:58:44,240
and it will request retransmission of

1467
00:58:44,240 --> 00:58:47,680
any missing ordinals that don't arrive

1468
00:58:47,680 --> 00:58:50,000
by doing so the destination sends a new

1469
00:58:50,000 --> 00:58:52,640
icmp v6 fragmentation report message

1470
00:58:52,640 --> 00:58:54,319
frag rep

1471
00:58:54,319 --> 00:58:56,079
the source retransmits any missing

1472
00:58:56,079 --> 00:58:58,480
fragments if possible

1473
00:58:58,480 --> 00:59:00,240
now this model

1474
00:59:00,240 --> 00:59:02,720
is modeled after the link layer

1475
00:59:02,720 --> 00:59:04,799
automatic repeat request

1476
00:59:04,799 --> 00:59:08,720
facility that's described in rse 3366.

1477
00:59:08,720 --> 00:59:11,119
it's fast and efficient

1478
00:59:11,119 --> 00:59:14,640
and it often but not always often avoids

1479
00:59:14,640 --> 00:59:16,319
slow and expensive end-to-end

1480
00:59:16,319 --> 00:59:19,319
re-transmissions

1481
00:59:21,280 --> 00:59:24,559
so how does the rrc 8200 ipv6 fragment

1482
00:59:24,559 --> 00:59:26,480
header currently look it's as you see

1483
00:59:26,480 --> 00:59:28,880
here it has the reserve field uh the

1484
00:59:28,880 --> 00:59:31,119
fragment offset identification and so

1485
00:59:31,119 --> 00:59:34,160
forth what this document is asking is to

1486
00:59:34,160 --> 00:59:36,079
update rfc

1487
00:59:36,079 --> 00:59:37,599
8200

1488
00:59:37,599 --> 00:59:40,400
to remove the reserve field in its place

1489
00:59:40,400 --> 00:59:43,119
put an ordinal field which is a six bit

1490
00:59:43,119 --> 00:59:44,480
ordinal number

1491
00:59:44,480 --> 00:59:47,599
a reserved bit and an a bit for arq

1492
00:59:47,599 --> 00:59:48,960
supported

1493
00:59:48,960 --> 00:59:51,119
and when a is set to one

1494
00:59:51,119 --> 00:59:53,040
the ordinal is going to include code of

1495
00:59:53,040 --> 00:59:55,359
value between 0 and 63 which is the

1496
00:59:55,359 --> 00:59:59,319
ordinal fragment number

1497
01:00:00,319 --> 01:00:02,559
so then we have now this this this new

1498
01:00:02,559 --> 01:00:05,760
icmp v6 fragmentation report message

1499
01:00:05,760 --> 01:00:08,960
uh the new message is going to include n

1500
01:00:08,960 --> 01:00:12,000
identification comma ordinal bitmap list

1501
01:00:12,000 --> 01:00:12,960
entries

1502
01:00:12,960 --> 01:00:14,559
each one of these entries being 12

1503
01:00:14,559 --> 01:00:16,160
octets one

1504
01:00:16,160 --> 01:00:17,920
so the number of entries is limited by

1505
01:00:17,920 --> 01:00:21,119
the minimum ip6 path empty of 1280

1506
01:00:21,119 --> 01:00:22,720
meaning you can get

1507
01:00:22,720 --> 01:00:25,200
actually the numbers 103

1508
01:00:25,200 --> 01:00:29,119
list entries maximum per icmpv6 message

1509
01:00:29,119 --> 01:00:30,640
and if you need to send more you just

1510
01:00:30,640 --> 01:00:34,558
simply send more fragrance messages

1511
01:00:37,280 --> 01:00:39,520
the destination includes

1512
01:00:39,520 --> 01:00:41,680
n frag rep list entries with 32-bit

1513
01:00:41,680 --> 01:00:44,000
identification followed by a 64-bit

1514
01:00:44,000 --> 01:00:45,839
ordinal bitmap

1515
01:00:45,839 --> 01:00:48,319
so for each identification

1516
01:00:48,319 --> 01:00:49,359
the

1517
01:00:49,359 --> 01:00:51,520
well the the receiver is going to

1518
01:00:51,520 --> 01:00:54,720
examine the ordinal bitmap bit i

1519
01:00:54,720 --> 01:00:56,960
if i is one it means the fragment with

1520
01:00:56,960 --> 01:00:59,359
ordinal value i was received

1521
01:00:59,359 --> 01:01:01,920
if i was zero it means no fragment with

1522
01:01:01,920 --> 01:01:04,319
ordinal fragment value i was

1523
01:01:04,319 --> 01:01:05,520
received

1524
01:01:05,520 --> 01:01:07,119
so that when the source receives the

1525
01:01:07,119 --> 01:01:10,240
frag rep it can retransmit either uh

1526
01:01:10,240 --> 01:01:12,640
each per identification fragment where

1527
01:01:12,640 --> 01:01:15,920
the order bit bet nap of i is zero if

1528
01:01:15,920 --> 01:01:18,799
the fragment is still in its cache

1529
01:01:18,799 --> 01:01:20,400
and then the source finally discards the

1530
01:01:20,400 --> 01:01:22,000
frag graph after all those entries have

1531
01:01:22,000 --> 01:01:25,160
been processed

1532
01:01:27,359 --> 01:01:30,319
so um some additional considerations

1533
01:01:30,319 --> 01:01:33,200
the the six bit ordinal bitmap plus the

1534
01:01:33,200 --> 01:01:36,880
64-bit bitmap limits the irq to only the

1535
01:01:36,880 --> 01:01:39,040
first 64 fragments

1536
01:01:39,040 --> 01:01:40,319
that means that if there were any

1537
01:01:40,319 --> 01:01:43,119
additional fragments beyond the first 64

1538
01:01:43,119 --> 01:01:44,640
that would be sent best effort the same

1539
01:01:44,640 --> 01:01:47,520
as the current practice

1540
01:01:47,520 --> 01:01:50,000
the largest ipv6 packet that can undergo

1541
01:01:50,000 --> 01:01:52,480
fragmentation 64k

1542
01:01:52,480 --> 01:01:55,359
and the minimum mtu is 1280 bytes so

1543
01:01:55,359 --> 01:01:56,640
normally

1544
01:01:56,640 --> 01:01:58,799
64 fragments would be more than enough

1545
01:01:58,799 --> 01:02:00,799
to accommodate even the largest ipv6

1546
01:02:00,799 --> 01:02:03,119
fragmented packet

1547
01:02:03,119 --> 01:02:05,599
however ipv6 fragments sometimes

1548
01:02:05,599 --> 01:02:08,640
traverse ipv4 networks for example by

1549
01:02:08,640 --> 01:02:11,119
tunneling them over a five pv4 network

1550
01:02:11,119 --> 01:02:12,880
where the small there may be a smaller

1551
01:02:12,880 --> 01:02:14,640
minimum mtu

1552
01:02:14,640 --> 01:02:18,240
in that case there may be more than 64

1553
01:02:18,240 --> 01:02:20,880
fragments needed to traverse ipv4

1554
01:02:20,880 --> 01:02:22,559
networks

1555
01:02:22,559 --> 01:02:24,480
so that means that the source is going

1556
01:02:24,480 --> 01:02:27,280
to need some form of soft packet too big

1557
01:02:27,280 --> 01:02:29,440
message to be sent back to the

1558
01:02:29,440 --> 01:02:31,520
originator so that the original reduce

1559
01:02:31,520 --> 01:02:33,760
the size of future packets

1560
01:02:33,760 --> 01:02:35,440
and this is especially important when

1561
01:02:35,440 --> 01:02:39,440
the sources in ipv6 tunnel ingress

1562
01:02:42,000 --> 01:02:44,720
so an icmp v6 packet to big soft error

1563
01:02:44,720 --> 01:02:46,640
is indicated by setting the code field

1564
01:02:46,640 --> 01:02:49,760
of the message to a non-zero value

1565
01:02:49,760 --> 01:02:52,079
the ipv6 tunnel ingress would both

1566
01:02:52,079 --> 01:02:53,920
forward the packet using ipv6

1567
01:02:53,920 --> 01:02:56,000
fragmentation and at the same time

1568
01:02:56,000 --> 01:03:00,079
return an icmp v6 soft error

1569
01:03:00,079 --> 01:03:01,520
the original source would receive the

1570
01:03:01,520 --> 01:03:03,760
soft error and reduce the size of future

1571
01:03:03,760 --> 01:03:06,079
packets while the original packet will

1572
01:03:06,079 --> 01:03:07,039
likely

1573
01:03:07,039 --> 01:03:08,720
arrive at the final destination so that

1574
01:03:08,720 --> 01:03:13,200
this is a lossless path mtu discovery

1575
01:03:13,200 --> 01:03:16,480
uh so the icmpb6 packet to big softwares

1576
01:03:16,480 --> 01:03:19,280
provide dynamic feedback so the original

1577
01:03:19,280 --> 01:03:21,680
source can tune the packet sizes it's

1578
01:03:21,680 --> 01:03:24,000
sending to ensure optimum performance

1579
01:03:24,000 --> 01:03:25,760
with little or no loss

1580
01:03:25,760 --> 01:03:29,880
lossless path mt discovery

1581
01:03:31,599 --> 01:03:34,079
so since we're going to be now embracing

1582
01:03:34,079 --> 01:03:35,680
fragmentation we have to ask the

1583
01:03:35,680 --> 01:03:37,280
question of whether an additional

1584
01:03:37,280 --> 01:03:40,000
integrity check is necessary

1585
01:03:40,000 --> 01:03:43,119
well each ipv6 fragment will undergo

1586
01:03:43,119 --> 01:03:46,079
link layer crcs on the path

1587
01:03:46,079 --> 01:03:48,400
as well as transport layer checksums at

1588
01:03:48,400 --> 01:03:49,920
the final destination following

1589
01:03:49,920 --> 01:03:51,839
reassembly

1590
01:03:51,839 --> 01:03:55,680
um so for for pure ipv6 paths this is

1591
01:03:55,680 --> 01:03:58,559
already probably enough because ipv6

1592
01:03:58,559 --> 01:04:00,400
fragmentation includes a 32-bit

1593
01:04:00,400 --> 01:04:02,079
identification number

1594
01:04:02,079 --> 01:04:03,839
and it also includes other reassembly

1595
01:04:03,839 --> 01:04:05,599
safeguards such as non-overlapping

1596
01:04:05,599 --> 01:04:07,520
fragments

1597
01:04:07,520 --> 01:04:12,000
but for ipv4 paths or mixed ipv6 ipv4

1598
01:04:12,000 --> 01:04:12,960
paths

1599
01:04:12,960 --> 01:04:15,839
ipv4 fragmentation only includes a 16

1600
01:04:15,839 --> 01:04:18,079
bit identification and it has no

1601
01:04:18,079 --> 01:04:20,720
safeguards against reassembly errors so

1602
01:04:20,720 --> 01:04:23,280
that reassembly errors are possible

1603
01:04:23,280 --> 01:04:25,119
so for this reason

1604
01:04:25,119 --> 01:04:27,640
ipv6 fragments that might be

1605
01:04:27,640 --> 01:04:30,240
transported over an ipv4 network require

1606
01:04:30,240 --> 01:04:32,160
an additional integrity check

1607
01:04:32,160 --> 01:04:34,480
inserted by the ipv6 tunnel ingress and

1608
01:04:34,480 --> 01:04:37,599
verified by the ipv6 tunnel egress

1609
01:04:37,599 --> 01:04:39,119
very important point

1610
01:04:39,119 --> 01:04:42,079
integrity is important

1611
01:04:44,480 --> 01:04:45,760
and that's really the end of the

1612
01:04:45,760 --> 01:04:47,200
presentation

1613
01:04:47,200 --> 01:04:49,280
this is the name of the draft

1614
01:04:49,280 --> 01:04:50,799
and i think i'd like to seek whether we

1615
01:04:50,799 --> 01:04:52,400
can bring this in as a six-man working

1616
01:04:52,400 --> 01:04:55,640
group item

1617
01:04:58,400 --> 01:05:03,079
comments from the working group please

1618
01:05:26,559 --> 01:05:29,839
not everyone at once

1619
01:05:35,760 --> 01:05:38,720
we could do a poll of the room to see uh

1620
01:05:38,720 --> 01:05:41,280
if there is any interest in working on

1621
01:05:41,280 --> 01:05:43,760
this uh

1622
01:05:44,960 --> 01:05:47,280
in six man if you think that's a good

1623
01:05:47,280 --> 01:05:50,280
idea

1624
01:05:56,319 --> 01:05:58,960
i'd just like to reiterate uh the most

1625
01:05:58,960 --> 01:06:01,599
important chart is chart number two in

1626
01:06:01,599 --> 01:06:03,920
this deck which gives the big picture

1627
01:06:03,920 --> 01:06:05,520
and that big picture is the fact that

1628
01:06:05,520 --> 01:06:08,319
we're missing something internet today

1629
01:06:08,319 --> 01:06:09,599
and that's the fact that we could be

1630
01:06:09,599 --> 01:06:11,359
leveraging ip fragmentation to get

1631
01:06:11,359 --> 01:06:12,960
better performance than we can get

1632
01:06:12,960 --> 01:06:16,280
without it

1633
01:06:20,480 --> 01:06:22,960
so fred do you see that as an inherent

1634
01:06:22,960 --> 01:06:25,520
quality of the

1635
01:06:25,520 --> 01:06:28,400
ip fragmentation or is it a

1636
01:06:28,400 --> 01:06:32,240
an artifact of implementation or the

1637
01:06:32,240 --> 01:06:33,440
particular

1638
01:06:33,440 --> 01:06:35,839
segmentation reassembly that is done on

1639
01:06:35,839 --> 01:06:37,440
upper layers for these particular

1640
01:06:37,440 --> 01:06:39,920
applications

1641
01:06:39,920 --> 01:06:43,280
um what's uh what makes it faster

1642
01:06:43,280 --> 01:06:45,280
is that when you send a large packet

1643
01:06:45,280 --> 01:06:47,039
from the application you make a single

1644
01:06:47,039 --> 01:06:49,280
system call and when that packet hits

1645
01:06:49,280 --> 01:06:51,920
the operating system kernel the kernel

1646
01:06:51,920 --> 01:06:54,079
then calls ip fragmentation which sends

1647
01:06:54,079 --> 01:06:57,280
the packet as a as a series of as a

1648
01:06:57,280 --> 01:06:59,599
burst of fragments

1649
01:06:59,599 --> 01:07:01,839
and when that burst occurs you get very

1650
01:07:01,839 --> 01:07:03,920
high network utilization

1651
01:07:03,920 --> 01:07:06,319
so it's that bursty nature of sending

1652
01:07:06,319 --> 01:07:08,480
one large packet and getting potentially

1653
01:07:08,480 --> 01:07:10,720
as many as 64 fragments in a rapid fire

1654
01:07:10,720 --> 01:07:11,680
burst

1655
01:07:11,680 --> 01:07:13,359
that causes you to get greater network

1656
01:07:13,359 --> 01:07:15,680
utilization for that time period

1657
01:07:15,680 --> 01:07:17,760
so it's a savings in systems calls it's

1658
01:07:17,760 --> 01:07:19,440
a savings and interrupts

1659
01:07:19,440 --> 01:07:21,280
and it's uh it's it's making greater

1660
01:07:21,280 --> 01:07:23,440
network utilization by leveraging these

1661
01:07:23,440 --> 01:07:26,559
fragmentation bursts

1662
01:07:27,920 --> 01:07:30,640
so these bursts have a tendency to be

1663
01:07:30,640 --> 01:07:32,240
capped by

1664
01:07:32,240 --> 01:07:34,799
network devices in the

1665
01:07:34,799 --> 01:07:37,440
in in the network too but

1666
01:07:37,440 --> 01:07:40,000
but yes okay so uh

1667
01:07:40,000 --> 01:07:42,880
this sort of some of the problems that

1668
01:07:42,880 --> 01:07:46,480
tso1 hosts have tried to solve i suppose

1669
01:07:46,480 --> 01:07:48,640
um

1670
01:07:48,640 --> 01:07:50,880
yeah i mean there's a well there's a lot

1671
01:07:50,880 --> 01:07:54,240
of discussion in the chat room but i

1672
01:07:54,240 --> 01:07:57,359
mean there's also i think a bunch of

1673
01:07:57,359 --> 01:07:59,520
hard interactions with transport

1674
01:07:59,520 --> 01:08:01,119
protocols

1675
01:08:01,119 --> 01:08:03,400
um which are also doing

1676
01:08:03,400 --> 01:08:05,440
re-transmissions and it gets really

1677
01:08:05,440 --> 01:08:08,079
messy when you get if you had the ip

1678
01:08:08,079 --> 01:08:10,880
layer doing fragment re-transmissions

1679
01:08:10,880 --> 01:08:12,960
and you know the transport protocol

1680
01:08:12,960 --> 01:08:15,680
doing its own re-transmissions and

1681
01:08:15,680 --> 01:08:17,920
i think this is

1682
01:08:17,920 --> 01:08:19,600
bob let me let me stop you for just a

1683
01:08:19,600 --> 01:08:21,040
second if i could that's that's not

1684
01:08:21,040 --> 01:08:22,399
really correct

1685
01:08:22,399 --> 01:08:26,479
the the model is rfc 3366 which is link

1686
01:08:26,479 --> 01:08:28,158
layer irq

1687
01:08:28,158 --> 01:08:30,799
which is an imperfect but timely

1688
01:08:30,799 --> 01:08:34,080
retransmission to not interfere with the

1689
01:08:34,080 --> 01:08:36,399
perfect and the end retransmissions that

1690
01:08:36,399 --> 01:08:37,839
might be necessary if the fragments

1691
01:08:37,839 --> 01:08:40,640
can't be replaced

1692
01:08:41,839 --> 01:08:44,000
and well

1693
01:08:44,000 --> 01:08:45,439
the way

1694
01:08:45,439 --> 01:08:46,880
yeah let me just

1695
01:08:46,880 --> 01:08:48,880
and then we'll go to eric i mean

1696
01:08:48,880 --> 01:08:52,158
of course in ipv6 since it's the source

1697
01:08:52,158 --> 01:08:54,238
who's doing the fragmentation not an

1698
01:08:54,238 --> 01:08:56,158
intermediate node

1699
01:08:56,158 --> 01:08:59,120
it's very close to end to end

1700
01:08:59,120 --> 01:09:00,960
but not necessarily if the source is a

1701
01:09:00,960 --> 01:09:02,399
tunnel if the source is a tunnel

1702
01:09:02,399 --> 01:09:05,520
endpoint the the the uh the uh the the

1703
01:09:05,520 --> 01:09:07,040
original source could be far away from

1704
01:09:07,040 --> 01:09:08,319
it

1705
01:09:08,319 --> 01:09:12,000
that that is true so eric

1706
01:09:14,960 --> 01:09:17,198
let me wait my customary

1707
01:09:17,198 --> 01:09:19,600
17 seconds for video for audio sync up

1708
01:09:19,600 --> 01:09:22,000
um as an individual computer

1709
01:09:22,000 --> 01:09:24,238
um sorry individual uh speaking as an

1710
01:09:24,238 --> 01:09:26,080
individual rather

1711
01:09:26,080 --> 01:09:28,158
are are some of these things um

1712
01:09:28,158 --> 01:09:30,399
separable for example specifically the

1713
01:09:30,399 --> 01:09:31,600
uh

1714
01:09:31,600 --> 01:09:35,920
the ptb software is there

1715
01:09:35,920 --> 01:09:38,080
something useful or valuable in just the

1716
01:09:38,080 --> 01:09:41,600
ptp soft in the softwares and possibly

1717
01:09:41,600 --> 01:09:42,960
using that

1718
01:09:42,960 --> 01:09:45,040
to update

1719
01:09:45,040 --> 01:09:48,158
say a higher layer tcp mss or something

1720
01:09:48,158 --> 01:09:50,238
uh in advance of it discovering that it

1721
01:09:50,238 --> 01:09:52,319
needs to do

1722
01:09:52,319 --> 01:09:55,199
mechanization layers mtv or something

1723
01:09:55,199 --> 01:09:57,120
there's there's definitely more there

1724
01:09:57,120 --> 01:09:58,560
when it comes to the packets of big

1725
01:09:58,560 --> 01:10:00,320
software than what i'm just given in

1726
01:10:00,320 --> 01:10:01,600
this presentation and it's probably

1727
01:10:01,600 --> 01:10:03,920
worthy of another draft of its own

1728
01:10:03,920 --> 01:10:05,760
but this is all discussed in detail in

1729
01:10:05,760 --> 01:10:08,400
the arrow in omnidrafts how packet2big

1730
01:10:08,400 --> 01:10:10,080
softwares are used

1731
01:10:10,080 --> 01:10:10,960
and

1732
01:10:10,960 --> 01:10:12,239
in this case

1733
01:10:12,239 --> 01:10:15,440
the tunnel endpoint source can send the

1734
01:10:15,440 --> 01:10:17,840
packet to big soft errors but the tunnel

1735
01:10:17,840 --> 01:10:19,600
endpoint uh

1736
01:10:19,600 --> 01:10:21,520
egress could also send packet to big

1737
01:10:21,520 --> 01:10:23,600
softwares for example if it's having

1738
01:10:23,600 --> 01:10:26,719
reassembly problems

1739
01:10:26,880 --> 01:10:28,159
so there's more there yes you're right

1740
01:10:28,159 --> 01:10:31,120
eric yeah i'm wondering if it's um it's

1741
01:10:31,120 --> 01:10:33,520
separable into into smaller

1742
01:10:33,520 --> 01:10:35,600
yet still useful chunks

1743
01:10:35,600 --> 01:10:37,040
basically thank you i think that's a

1744
01:10:37,040 --> 01:10:40,199
good point

1745
01:10:45,840 --> 01:10:48,880
any other comments

1746
01:10:51,440 --> 01:10:53,280
okay thank you fred

1747
01:10:53,280 --> 01:10:55,360
thank you

1748
01:10:55,360 --> 01:10:57,840
thank you and we had 12 people raising

1749
01:10:57,840 --> 01:11:01,199
their hand and 24 people who

1750
01:11:01,199 --> 01:11:04,000
kept their hands in their pockets

1751
01:11:04,000 --> 01:11:04,350
um

1752
01:11:04,350 --> 01:11:05,520
[Music]

1753
01:11:05,520 --> 01:11:07,520
okay so for the last presentation we'll

1754
01:11:07,520 --> 01:11:10,239
um try again with the

1755
01:11:10,239 --> 01:11:12,800
xiao if you

1756
01:11:12,800 --> 01:11:14,960
have fixed your audio now smpv6

1757
01:11:14,960 --> 01:11:17,920
extensions for iom capabilities please

1758
01:11:17,920 --> 01:11:19,920
go ahead

1759
01:11:19,920 --> 01:11:21,199
okay

1760
01:11:21,199 --> 01:11:23,199
uh can you hear me now

1761
01:11:23,199 --> 01:11:25,600
we can hear you now my audio

1762
01:11:25,600 --> 01:11:28,560
it sounds much better

1763
01:11:28,560 --> 01:11:30,239
thank you

1764
01:11:30,239 --> 01:11:33,920
i changed to a new laptop and i

1765
01:11:33,920 --> 01:11:36,400
i'm sorry for the inconvenience

1766
01:11:36,400 --> 01:11:38,080
that's okay

1767
01:11:38,080 --> 01:11:40,640
do you want to share the slides yes yeah

1768
01:11:40,640 --> 01:11:43,280
i can try

1769
01:11:49,840 --> 01:11:51,040
okay

1770
01:11:51,040 --> 01:11:52,239
hello everyone

1771
01:11:52,239 --> 01:11:54,960
uh it's xiaomi again

1772
01:11:54,960 --> 01:11:58,719
this presentation is on icmp v6 echo

1773
01:11:58,719 --> 01:12:00,560
request reply

1774
01:12:00,560 --> 01:12:04,159
for enabled in-situ om capabilities

1775
01:12:04,159 --> 01:12:09,239
this is a 0-0 version individual draft

1776
01:12:13,360 --> 01:12:16,320
this is the background of this draft

1777
01:12:16,320 --> 01:12:18,880
draft ietf ippm

1778
01:12:18,880 --> 01:12:21,040
iom count state

1779
01:12:21,040 --> 01:12:23,520
defines a general method

1780
01:12:23,520 --> 01:12:27,120
of iom capabilities discovery

1781
01:12:27,120 --> 01:12:30,800
including iom capabilities formats

1782
01:12:30,800 --> 01:12:33,360
in that job the echo request reply is

1783
01:12:33,360 --> 01:12:37,440
used for iom capabilities discovery

1784
01:12:37,440 --> 01:12:38,800
through which

1785
01:12:38,800 --> 01:12:41,520
the iom encapsulating node

1786
01:12:41,520 --> 01:12:44,640
can discover the iom capabilities

1787
01:12:44,640 --> 01:12:48,239
of each iom transit and decapsulating

1788
01:12:48,239 --> 01:12:49,520
node

1789
01:12:49,520 --> 01:12:51,600
along the transport path

1790
01:12:51,600 --> 01:12:54,480
of data packet

1791
01:12:54,480 --> 01:12:56,640
this draft

1792
01:12:56,640 --> 01:13:00,080
is a campaigning document of that ippm

1793
01:13:00,080 --> 01:13:02,320
document

1794
01:13:02,320 --> 01:13:04,960
specifically this draft

1795
01:13:04,960 --> 01:13:08,320
defines icmp v6 extensions

1796
01:13:08,320 --> 01:13:12,480
to achieve iom capabilities discovery

1797
01:13:12,480 --> 01:13:16,839
in ipv6 networks

1798
01:13:20,719 --> 01:13:24,400
this slide shows the newly defined

1799
01:13:24,400 --> 01:13:26,239
icmp

1800
01:13:26,239 --> 01:13:31,760
basics iom echo request reply messages

1801
01:13:31,760 --> 01:13:34,159
taking example by

1802
01:13:34,159 --> 01:13:37,440
rfc 8335

1803
01:13:37,440 --> 01:13:40,080
this chapter requests

1804
01:13:40,080 --> 01:13:43,920
two new icmp v6 type numbers

1805
01:13:43,920 --> 01:13:44,840
from

1806
01:13:44,840 --> 01:13:49,760
iona one for iom echo request

1807
01:13:49,760 --> 01:13:54,080
another for iom echo reply

1808
01:13:54,640 --> 01:13:57,520
the upper figure is the format of icmp

1809
01:13:57,520 --> 01:13:58,840
v6

1810
01:13:58,840 --> 01:14:03,040
iom echo request message

1811
01:14:04,560 --> 01:14:07,840
the two fields in the red

1812
01:14:07,840 --> 01:14:09,760
ellipses

1813
01:14:09,760 --> 01:14:12,960
are defined in this draft

1814
01:14:12,960 --> 01:14:16,880
the other number of iom namespace ids

1815
01:14:16,880 --> 01:14:19,120
and a list of

1816
01:14:19,120 --> 01:14:22,159
namespace ids

1817
01:14:22,159 --> 01:14:25,520
a number of namespace ids is a

1818
01:14:25,520 --> 01:14:26,840
8-bit

1819
01:14:26,840 --> 01:14:28,400
field

1820
01:14:28,400 --> 01:14:30,800
that means at most

1821
01:14:30,800 --> 01:14:33,800
256

1822
01:14:34,239 --> 01:14:38,239
namespace ids can be carried

1823
01:14:39,800 --> 01:14:42,560
256 is treated

1824
01:14:42,560 --> 01:14:43,679
as a big

1825
01:14:43,679 --> 01:14:46,719
enough number

1826
01:14:46,880 --> 01:14:47,760
each

1827
01:14:47,760 --> 01:14:50,960
namespace id carried within the list of

1828
01:14:50,960 --> 01:14:53,520
namespace ids

1829
01:14:53,520 --> 01:14:55,679
is a

1830
01:14:55,679 --> 01:14:58,800
16 bit field

1831
01:14:58,800 --> 01:15:01,120
at least one namespace id would be

1832
01:15:01,120 --> 01:15:03,599
carried

1833
01:15:03,679 --> 01:15:06,080
the lower figure is the format of the

1834
01:15:06,080 --> 01:15:08,159
icmpv6

1835
01:15:08,159 --> 01:15:12,400
iom echo reply message

1836
01:15:13,520 --> 01:15:16,480
the field of number of name space ids

1837
01:15:16,480 --> 01:15:18,960
in accurate reply message

1838
01:15:18,960 --> 01:15:20,400
would be

1839
01:15:20,400 --> 01:15:21,600
no bigger

1840
01:15:21,600 --> 01:15:24,800
than the same field in the echo request

1841
01:15:24,800 --> 01:15:27,199
message

1842
01:15:27,520 --> 01:15:29,120
a list of

1843
01:15:29,120 --> 01:15:32,000
objects is carried in the accur reply

1844
01:15:32,000 --> 01:15:33,920
message

1845
01:15:33,920 --> 01:15:35,760
each object

1846
01:15:35,760 --> 01:15:39,600
represents one type of iom capabilities

1847
01:15:39,600 --> 01:15:43,280
in one namespace id

1848
01:15:47,760 --> 01:15:52,960
this is the first type of icmpv6 object

1849
01:15:52,960 --> 01:15:55,840
defined in this draft

1850
01:15:55,840 --> 01:15:56,840
it's called

1851
01:15:56,840 --> 01:15:58,400
icmpv6

1852
01:15:58,400 --> 01:16:01,679
iom pre-allocated tracing capabilities

1853
01:16:01,679 --> 01:16:04,159
object

1854
01:16:04,320 --> 01:16:07,360
this figure is the format of this type

1855
01:16:07,360 --> 01:16:09,840
of object

1856
01:16:09,840 --> 01:16:13,920
each icmpv6 object is composed of the

1857
01:16:13,920 --> 01:16:18,320
object header and the object payload

1858
01:16:18,320 --> 01:16:22,320
the object header includes three fields

1859
01:16:22,320 --> 01:16:24,000
they are length

1860
01:16:24,000 --> 01:16:27,280
class number and c type

1861
01:16:27,280 --> 01:16:29,360
the combination of class number and the

1862
01:16:29,360 --> 01:16:30,480
c type

1863
01:16:30,480 --> 01:16:32,320
indicates

1864
01:16:32,320 --> 01:16:35,040
type of this object

1865
01:16:35,040 --> 01:16:37,520
among them a new class number

1866
01:16:37,520 --> 01:16:39,840
indicates iom change tracing

1867
01:16:39,840 --> 01:16:42,560
capabilities object

1868
01:16:42,560 --> 01:16:44,400
and the c type 1

1869
01:16:44,400 --> 01:16:45,760
indicates that

1870
01:16:45,760 --> 01:16:48,640
pre-allocated tracing

1871
01:16:48,640 --> 01:16:51,040
another type of i am tracing is

1872
01:16:51,040 --> 01:16:53,920
incremental tracing

1873
01:16:53,920 --> 01:16:56,640
the object payload includes iom trace

1874
01:16:56,640 --> 01:16:57,840
type

1875
01:16:57,840 --> 01:17:00,239
namespace id

1876
01:17:00,239 --> 01:17:05,120
egress mtu and the egress interface id

1877
01:17:05,120 --> 01:17:09,840
and one more w bit is used to indicate

1878
01:17:09,840 --> 01:17:12,320
short format or wide format

1879
01:17:12,320 --> 01:17:14,080
of egress

1880
01:17:14,080 --> 01:17:16,719
interface id

1881
01:17:16,719 --> 01:17:19,600
among them the iom trace type is a

1882
01:17:19,600 --> 01:17:21,040
bitmap

1883
01:17:21,040 --> 01:17:22,880
that indicates

1884
01:17:22,880 --> 01:17:25,840
what kinds of tracing data are supported

1885
01:17:25,840 --> 01:17:30,480
by the echo reply sending node

1886
01:17:30,480 --> 01:17:32,159
note that the whole

1887
01:17:32,159 --> 01:17:34,800
object payload is not

1888
01:17:34,800 --> 01:17:37,280
defined in this six-man

1889
01:17:37,280 --> 01:17:38,800
document

1890
01:17:38,800 --> 01:17:41,679
but defined in that campaigning ibpm

1891
01:17:41,679 --> 01:17:43,760
document

1892
01:17:43,760 --> 01:17:45,920
the reason is to

1893
01:17:45,920 --> 01:17:47,440
avoid the

1894
01:17:47,440 --> 01:17:51,120
repeated definition of the same object

1895
01:17:51,120 --> 01:17:52,719
payload

1896
01:17:52,719 --> 01:17:56,000
for all different kinds of ping

1897
01:17:56,000 --> 01:17:58,719
such like icmp v6

1898
01:17:58,719 --> 01:18:00,719
mpls spping

1899
01:18:00,719 --> 01:18:02,480
sfc ping and

1900
01:18:02,480 --> 01:18:05,040
bl ping

1901
01:18:08,960 --> 01:18:11,840
this is the second type of icmp basics

1902
01:18:11,840 --> 01:18:15,040
object to defined in this draft

1903
01:18:15,040 --> 01:18:19,600
it's called icmpv6 ilam incremental

1904
01:18:19,600 --> 01:18:22,719
tracing capabilities object

1905
01:18:22,719 --> 01:18:26,480
this figure is the format of this object

1906
01:18:26,480 --> 01:18:30,000
it's also composed for the object

1907
01:18:30,000 --> 01:18:33,280
header and the object payload

1908
01:18:33,280 --> 01:18:35,199
the combination of class number and the

1909
01:18:35,199 --> 01:18:36,560
c type

1910
01:18:36,560 --> 01:18:38,960
in the object

1911
01:18:38,960 --> 01:18:42,320
header indicates type of this object

1912
01:18:42,320 --> 01:18:45,040
among them a new class number

1913
01:18:45,040 --> 01:18:47,840
indicates iom tracing capabilities

1914
01:18:47,840 --> 01:18:49,199
object

1915
01:18:49,199 --> 01:18:51,440
and the c type 2

1916
01:18:51,440 --> 01:18:55,679
indicates that it's incremental tracing

1917
01:18:55,679 --> 01:18:59,120
the object payload of this object

1918
01:18:59,120 --> 01:19:01,600
is also defined in that

1919
01:19:01,600 --> 01:19:05,239
ippm document

1920
01:19:09,679 --> 01:19:12,480
this is the third type of icmp basics

1921
01:19:12,480 --> 01:19:15,679
object defined in this draft

1922
01:19:15,679 --> 01:19:18,800
it's called icmpv6 iom

1923
01:19:18,800 --> 01:19:22,880
proof of transit capabilities object

1924
01:19:22,880 --> 01:19:26,400
this figure is the format of this object

1925
01:19:26,400 --> 01:19:29,040
the combination of class number and c

1926
01:19:29,040 --> 01:19:30,159
type

1927
01:19:30,159 --> 01:19:32,239
in the object header

1928
01:19:32,239 --> 01:19:35,760
indicates type of this object

1929
01:19:35,760 --> 01:19:38,239
among them a new class number

1930
01:19:38,239 --> 01:19:40,159
indicates iom

1931
01:19:40,159 --> 01:19:43,760
approval transit capabilities object

1932
01:19:43,760 --> 01:19:45,440
and the c type

1933
01:19:45,440 --> 01:19:47,440
is set to zero

1934
01:19:47,440 --> 01:19:49,360
at transmission

1935
01:19:49,360 --> 01:19:52,719
and ignored at the reception

1936
01:19:52,719 --> 01:19:55,920
the object payload is also defined in

1937
01:19:55,920 --> 01:19:59,360
that ippm document

1938
01:20:02,719 --> 01:20:06,400
this is the fourth type of icmp

1939
01:20:06,400 --> 01:20:10,560
object smpv6 object defined in this

1940
01:20:10,560 --> 01:20:12,000
draft

1941
01:20:12,000 --> 01:20:15,360
it's called icmpv6 iomh2h

1942
01:20:15,360 --> 01:20:18,400
capabilities object

1943
01:20:18,400 --> 01:20:22,080
this figure is the format of this object

1944
01:20:22,080 --> 01:20:24,159
the combination of class number and the

1945
01:20:24,159 --> 01:20:25,360
c type

1946
01:20:25,360 --> 01:20:28,000
in the object header indicates type of

1947
01:20:28,000 --> 01:20:29,520
this object

1948
01:20:29,520 --> 01:20:32,560
among them a new class number indicates

1949
01:20:32,560 --> 01:20:36,480
iom hth capabilities object

1950
01:20:36,480 --> 01:20:38,639
and the c type is set to zero as a

1951
01:20:38,639 --> 01:20:41,440
transmission and ignored as at a

1952
01:20:41,440 --> 01:20:43,600
reception

1953
01:20:43,600 --> 01:20:46,159
the object payload is also defined in

1954
01:20:46,159 --> 01:20:49,440
that ippm document

1955
01:20:52,560 --> 01:20:55,120
this is the

1956
01:20:55,120 --> 01:20:56,000
fifth

1957
01:20:56,000 --> 01:20:57,840
fifth type of

1958
01:20:57,840 --> 01:21:00,800
smp v6 object defined in this draft is

1959
01:21:00,800 --> 01:21:03,840
called xmpv6

1960
01:21:03,840 --> 01:21:06,719
ilam dx

1961
01:21:06,719 --> 01:21:10,560
direct export capabilities object

1962
01:21:10,560 --> 01:21:12,840
this figure is a format of this

1963
01:21:12,840 --> 01:21:15,360
object the combination of class number

1964
01:21:15,360 --> 01:21:16,719
and c type

1965
01:21:16,719 --> 01:21:18,480
in this

1966
01:21:18,480 --> 01:21:19,920
object header

1967
01:21:19,920 --> 01:21:22,880
indicates type of this object

1968
01:21:22,880 --> 01:21:25,199
among them a new class number

1969
01:21:25,199 --> 01:21:26,840
indicates

1970
01:21:26,840 --> 01:21:29,920
iomdex capabilities object

1971
01:21:29,920 --> 01:21:32,639
and the c type is set to zero at

1972
01:21:32,639 --> 01:21:36,159
transmission and ignored at reception

1973
01:21:36,159 --> 01:21:38,480
the object payload is also defined in

1974
01:21:38,480 --> 01:21:42,759
that ippm document

1975
01:21:44,239 --> 01:21:46,480
and this is the last one

1976
01:21:46,480 --> 01:21:48,000
the sixth

1977
01:21:48,000 --> 01:21:51,600
type of smp b6 object defined in this

1978
01:21:51,600 --> 01:21:52,880
draft

1979
01:21:52,880 --> 01:21:56,239
it's called icmp v6 iom end of the main

1980
01:21:56,239 --> 01:21:57,920
object

1981
01:21:57,920 --> 01:22:00,560
this figure is the format of this

1982
01:22:00,560 --> 01:22:03,040
object

1983
01:22:03,199 --> 01:22:05,199
and the combination of class number and

1984
01:22:05,199 --> 01:22:07,759
c type

1985
01:22:08,560 --> 01:22:10,480
is used to indicate

1986
01:22:10,480 --> 01:22:13,360
type of this object

1987
01:22:13,360 --> 01:22:15,440
among them a new class number indicates

1988
01:22:15,440 --> 01:22:18,080
i am n end of the main object

1989
01:22:18,080 --> 01:22:20,320
c type is set to zero at transmission

1990
01:22:20,320 --> 01:22:23,120
and ignored at the reception

1991
01:22:23,120 --> 01:22:25,920
and the objective payload is also

1992
01:22:25,920 --> 01:22:31,120
defined in that companion ippm document

1993
01:22:35,040 --> 01:22:37,679
this slide demonstrates the security

1994
01:22:37,679 --> 01:22:39,280
issues

1995
01:22:39,280 --> 01:22:40,560
mitigation

1996
01:22:40,560 --> 01:22:44,239
methods described in this draft

1997
01:22:44,239 --> 01:22:47,760
first one is suggested to use ip

1998
01:22:47,760 --> 01:22:49,520
authentication header

1999
01:22:49,520 --> 01:22:50,840
or ip

2000
01:22:50,840 --> 01:22:54,560
encapsulating security payload header

2001
01:22:54,560 --> 01:22:57,600
to provide integrated protection

2002
01:22:57,600 --> 01:23:01,520
for iom capabilities information

2003
01:23:01,520 --> 01:23:04,960
second one is suggested to use

2004
01:23:04,960 --> 01:23:08,960
ip encapsulating security payload header

2005
01:23:08,960 --> 01:23:11,040
to provide the privacy

2006
01:23:11,040 --> 01:23:12,239
privacy

2007
01:23:12,239 --> 01:23:14,239
protection for iom capabilities

2008
01:23:14,239 --> 01:23:16,239
information

2009
01:23:16,239 --> 01:23:18,239
third one

2010
01:23:18,239 --> 01:23:21,920
the network operators are suggested to

2011
01:23:21,920 --> 01:23:24,159
establish policies

2012
01:23:24,159 --> 01:23:27,920
that restrict access to icmp v6 iom echo

2013
01:23:27,920 --> 01:23:30,159
functionality

2014
01:23:30,159 --> 01:23:32,960
the policies include

2015
01:23:32,960 --> 01:23:36,000
enable disable icmp v6 iom echo

2016
01:23:36,000 --> 01:23:38,719
functionality

2017
01:23:38,719 --> 01:23:41,920
define enabled namespace ids

2018
01:23:41,920 --> 01:23:45,120
and for each enable the namespace id

2019
01:23:45,120 --> 01:23:47,360
define the prefixes

2020
01:23:47,360 --> 01:23:49,000
from which

2021
01:23:49,000 --> 01:23:52,880
icmpv6 iom echo request passage

2022
01:23:52,880 --> 01:23:55,600
are permitted

2023
01:23:55,840 --> 01:23:59,120
the fourth one is suggested to

2024
01:23:59,120 --> 01:24:01,040
write limiter

2025
01:24:01,040 --> 01:24:03,840
incoming i cmp v6

2026
01:24:03,840 --> 01:24:07,520
iom echo request message

2027
01:24:12,639 --> 01:24:14,239
next steps

2028
01:24:14,239 --> 01:24:16,800
for this chapter we authors ask for more

2029
01:24:16,800 --> 01:24:18,880
reviews and comments

2030
01:24:18,880 --> 01:24:22,560
we revise this job to to improve it

2031
01:24:22,560 --> 01:24:23,679
and then

2032
01:24:23,679 --> 01:24:27,600
let me ask for working group adoption

2033
01:24:29,199 --> 01:24:31,839
thank you

2034
01:24:32,800 --> 01:24:34,960
chang lee you are the head of the queue

2035
01:24:34,960 --> 01:24:37,600
please go ahead

2036
01:24:39,199 --> 01:24:41,760
some questions about this

2037
01:24:41,760 --> 01:24:46,320
extension like i proposed before in ibpm

2038
01:24:46,320 --> 01:24:47,520
working group

2039
01:24:47,520 --> 01:24:50,880
first of all is that can a host

2040
01:24:50,880 --> 01:24:52,480
outside the domain

2041
01:24:52,480 --> 01:24:55,120
to send an icmp

2042
01:24:55,120 --> 01:24:58,639
property packet to trigger the i'll say

2043
01:24:58,639 --> 01:25:03,199
uh iom capability information

2044
01:25:05,199 --> 01:25:07,599
can we

2045
01:25:08,320 --> 01:25:09,120
yo

2046
01:25:09,120 --> 01:25:11,040
do you mean the host

2047
01:25:11,040 --> 01:25:14,159
the iom yeah absolutely note as a host

2048
01:25:14,159 --> 01:25:15,520
yes

2049
01:25:15,520 --> 01:25:16,719
if the

2050
01:25:16,719 --> 01:25:19,840
host is the iom encapsulating node

2051
01:25:19,840 --> 01:25:23,120
then the host can send smpv6

2052
01:25:23,120 --> 01:25:25,199
echo request

2053
01:25:25,199 --> 01:25:27,760
to query

2054
01:25:27,760 --> 01:25:30,320
the iom capabilities from the iom

2055
01:25:30,320 --> 01:25:34,000
transit node and the capsulating node

2056
01:25:34,000 --> 01:25:37,120
yeah like uh what if i'm a i am a

2057
01:25:37,120 --> 01:25:39,840
attacker right i'm a hacker and i send a

2058
01:25:39,840 --> 01:25:42,960
lot of like ddos packets probably

2059
01:25:42,960 --> 01:25:44,000
packets

2060
01:25:44,000 --> 01:25:48,159
to uh how say to get the iom information

2061
01:25:48,159 --> 01:25:49,600
and from your

2062
01:25:49,600 --> 01:25:51,040
network

2063
01:25:51,040 --> 01:25:53,600
so i can send thousands of packets to

2064
01:25:53,600 --> 01:25:54,719
the node

2065
01:25:54,719 --> 01:25:57,199
and you are seeing that you we can use

2066
01:25:57,199 --> 01:26:02,320
like ipsec for example ah or esp for uh

2067
01:26:02,320 --> 01:26:03,760
i'll say uh

2068
01:26:03,760 --> 01:26:06,719
security but the thing is that

2069
01:26:06,719 --> 01:26:09,280
if you want to provide this kind of uh

2070
01:26:09,280 --> 01:26:12,800
protection you have provide a full mesh

2071
01:26:12,800 --> 01:26:16,560
ip spec ipsec connection in your network

2072
01:26:16,560 --> 01:26:18,480
is it possible

2073
01:26:18,480 --> 01:26:20,400
because you need to

2074
01:26:20,400 --> 01:26:21,280
ping

2075
01:26:21,280 --> 01:26:24,719
any node in your domain right

2076
01:26:25,280 --> 01:26:27,199
uh this job to

2077
01:26:27,199 --> 01:26:28,960
provide

2078
01:26:28,960 --> 01:26:30,080
some

2079
01:26:30,080 --> 01:26:32,639
security issues mitigation methods you

2080
01:26:32,639 --> 01:26:34,400
can see in the slide

2081
01:26:34,400 --> 01:26:36,719
not just

2082
01:26:36,719 --> 01:26:38,239
yeah

2083
01:26:38,239 --> 01:26:39,679
not just

2084
01:26:39,679 --> 01:26:42,560
use ip authentication header

2085
01:26:42,560 --> 01:26:45,199
ip encapsulating security payload header

2086
01:26:45,199 --> 01:26:46,480
you can also

2087
01:26:46,480 --> 01:26:49,280
ask network

2088
01:26:49,280 --> 01:26:52,239
operators establish policies that

2089
01:26:52,239 --> 01:26:54,560
restrict to access

2090
01:26:54,560 --> 01:26:56,800
to this functionality

2091
01:26:56,800 --> 01:26:59,280
you can also rate limit incoming smd

2092
01:26:59,280 --> 01:27:00,800
basics

2093
01:27:00,800 --> 01:27:02,840
iom echo

2094
01:27:02,840 --> 01:27:04,639
request so

2095
01:27:04,639 --> 01:27:06,880
you have some methods

2096
01:27:06,880 --> 01:27:09,360
to mitigate the security issues

2097
01:27:09,360 --> 01:27:12,639
yeah sure and but as you know that

2098
01:27:12,639 --> 01:27:15,920
in the real network the ipsec is really

2099
01:27:15,920 --> 01:27:19,600
heavy or it's really i'll say

2100
01:27:19,600 --> 01:27:22,400
half for uh implementation and

2101
01:27:22,400 --> 01:27:24,639
usage right it's very hard for

2102
01:27:24,639 --> 01:27:28,880
deployment and in order to protect

2103
01:27:28,880 --> 01:27:32,400
the iom capability we need to build up

2104
01:27:32,400 --> 01:27:35,120
full mesh any to any

2105
01:27:35,120 --> 01:27:38,400
ipsec connection in the network i don't

2106
01:27:38,400 --> 01:27:40,719
believe that would be the

2107
01:27:40,719 --> 01:27:42,400
real deployment

2108
01:27:42,400 --> 01:27:44,560
so that that is my comment

2109
01:27:44,560 --> 01:27:46,159
and

2110
01:27:46,159 --> 01:27:48,639
yes you can uh like use some rich

2111
01:27:48,639 --> 01:27:52,080
limiting limitation uh method for uh

2112
01:27:52,080 --> 01:27:54,960
protection for protecting

2113
01:27:54,960 --> 01:28:01,520
uh deducts uh attack uh i'll go step yep

2114
01:28:01,520 --> 01:28:05,360
happy sec is not must

2115
01:28:11,040 --> 01:28:13,280
okay we have a number of other people in

2116
01:28:13,280 --> 01:28:15,840
the queue

2117
01:28:16,639 --> 01:28:17,679
okay

2118
01:28:17,679 --> 01:28:19,600
that's it thank you

2119
01:28:19,600 --> 01:28:21,840
thank you

2120
01:28:21,840 --> 01:28:24,400
good word

2121
01:28:25,280 --> 01:28:26,880
i have a question

2122
01:28:26,880 --> 01:28:29,120
i have not understood is it hope i hope

2123
01:28:29,120 --> 01:28:32,159
or end to end because i i om typically

2124
01:28:32,159 --> 01:28:34,159
is useful when it's implemented hope i

2125
01:28:34,159 --> 01:28:35,840
hope then you could understand which

2126
01:28:35,840 --> 01:28:38,239
particular hope is is a problem but it

2127
01:28:38,239 --> 01:28:40,480
looks like if it's icmp then the packet

2128
01:28:40,480 --> 01:28:42,960
could go only end to end and in this

2129
01:28:42,960 --> 01:28:44,080
situation

2130
01:28:44,080 --> 01:28:45,679
how much it would be useful if it's not

2131
01:28:45,679 --> 01:28:47,120
hoped by hope

2132
01:28:47,120 --> 01:28:48,719
do you understand something wrong or

2133
01:28:48,719 --> 01:28:50,560
what

2134
01:28:50,560 --> 01:28:52,800
okay let me explain

2135
01:28:52,800 --> 01:28:53,679
uh

2136
01:28:53,679 --> 01:28:56,719
in this job to icmp icmpv6

2137
01:28:56,719 --> 01:28:58,560
echo request

2138
01:28:58,560 --> 01:29:00,560
is not

2139
01:29:00,560 --> 01:29:02,480
just for end to end

2140
01:29:02,480 --> 01:29:04,159
it can be sent

2141
01:29:04,159 --> 01:29:05,280
to the

2142
01:29:05,280 --> 01:29:07,199
iom transit node

2143
01:29:07,199 --> 01:29:08,880
along the path

2144
01:29:08,880 --> 01:29:11,920
so every transiting node can receive

2145
01:29:11,920 --> 01:29:15,120
an icmpv6 like request

2146
01:29:15,120 --> 01:29:17,199
and the sender reply

2147
01:29:17,199 --> 01:29:18,239
to the

2148
01:29:18,239 --> 01:29:20,800
iom encapsulating node

2149
01:29:20,800 --> 01:29:22,719
so that's also for

2150
01:29:22,719 --> 01:29:25,840
by hub

2151
01:29:26,880 --> 01:29:29,120
separate prop for separate hope okay

2152
01:29:29,120 --> 01:29:30,960
understood

2153
01:29:30,960 --> 01:29:33,360
thank you

2154
01:29:36,560 --> 01:29:39,840
okay eric we'll see

2155
01:29:46,080 --> 01:29:49,280
about this draft it relies basically on

2156
01:29:49,280 --> 01:29:52,159
ippm draft

2157
01:29:52,159 --> 01:29:53,679
can you tell us a few words about the

2158
01:29:53,679 --> 01:29:55,760
status of those drafts are they adopted

2159
01:29:55,760 --> 01:29:59,199
are they working with last goal or

2160
01:30:00,159 --> 01:30:02,080
it's adopted

2161
01:30:02,080 --> 01:30:03,600
this year

2162
01:30:03,600 --> 01:30:05,199
in

2163
01:30:05,199 --> 01:30:07,679
july july this year

2164
01:30:07,679 --> 01:30:08,880
it's now a

2165
01:30:08,880 --> 01:30:11,920
zero one working group draft

2166
01:30:11,920 --> 01:30:13,760
okay thank you

2167
01:30:13,760 --> 01:30:16,159
thank you

2168
01:30:16,400 --> 01:30:19,719
and eric

2169
01:30:21,120 --> 01:30:23,120
i'm curious to know uh how large do you

2170
01:30:23,120 --> 01:30:26,080
think these messages are going to be

2171
01:30:26,080 --> 01:30:28,400
and whether or not um you think they

2172
01:30:28,400 --> 01:30:29,920
might exceed the mtu of the operator

2173
01:30:29,920 --> 01:30:31,280
network

2174
01:30:31,280 --> 01:30:33,520
i don't know how much information is

2175
01:30:33,520 --> 01:30:36,159
the complete list of namespaces is going

2176
01:30:36,159 --> 01:30:38,000
to be

2177
01:30:38,000 --> 01:30:40,880
yes uh for the echo request

2178
01:30:40,880 --> 01:30:44,000
i think the message is it will not be

2179
01:30:44,000 --> 01:30:45,120
too

2180
01:30:45,120 --> 01:30:46,159
too big

2181
01:30:46,159 --> 01:30:48,960
and for the accurate reply uh the

2182
01:30:48,960 --> 01:30:50,400
message

2183
01:30:50,400 --> 01:30:52,960
the size of the message may uh exceed

2184
01:30:52,960 --> 01:30:54,320
the

2185
01:30:54,320 --> 01:30:56,400
mtu limit so

2186
01:30:56,400 --> 01:30:58,800
in this chapter we have a

2187
01:30:58,800 --> 01:30:59,920
code

2188
01:30:59,920 --> 01:31:01,520
for the

2189
01:31:01,520 --> 01:31:04,320
uh big message big mac i could reply i

2190
01:31:04,320 --> 01:31:06,960
could i could reply message that exceeds

2191
01:31:06,960 --> 01:31:07,920
the

2192
01:31:07,920 --> 01:31:09,280
ipv6

2193
01:31:09,280 --> 01:31:12,159
mto limit

2194
01:31:12,639 --> 01:31:14,800
oh yeah like you have like a like a

2195
01:31:14,800 --> 01:31:18,800
truncation flag kind of thing

2196
01:31:19,040 --> 01:31:20,880
or you just go ahead and send it it's a

2197
01:31:20,880 --> 01:31:23,840
super large reply

2198
01:31:24,480 --> 01:31:25,840
i can

2199
01:31:25,840 --> 01:31:28,840
see

2200
01:31:30,880 --> 01:31:34,080
uh this one uh for the iom echo reply

2201
01:31:34,080 --> 01:31:37,120
message there is a field code field

2202
01:31:37,120 --> 01:31:38,159
and

2203
01:31:38,159 --> 01:31:39,280
if the

2204
01:31:39,280 --> 01:31:41,360
message is too big

2205
01:31:41,360 --> 01:31:45,760
exceed the limit of the ipv6

2206
01:31:45,760 --> 01:31:48,560
mtu limit

2207
01:31:48,560 --> 01:31:51,760
one code field my code value

2208
01:31:51,760 --> 01:31:53,920
can be set

2209
01:31:53,920 --> 01:31:55,360
to tell the

2210
01:31:55,360 --> 01:31:58,480
i am encapsulating node that this

2211
01:31:58,480 --> 01:32:01,120
message is too big

2212
01:32:01,120 --> 01:32:05,280
and all the objects will be stripped

2213
01:32:05,920 --> 01:32:07,120
interesting

2214
01:32:07,120 --> 01:32:08,880
interesting thank you

2215
01:32:08,880 --> 01:32:12,440
curious thank you

2216
01:32:15,679 --> 01:32:18,480
okay thank you i at least my take is i

2217
01:32:18,480 --> 01:32:20,560
think this needs more discussion and i

2218
01:32:20,560 --> 01:32:23,440
think we would like to also hear from

2219
01:32:23,440 --> 01:32:27,440
the ippm working group as to how this

2220
01:32:27,440 --> 01:32:29,920
fits into what they're doing or not

2221
01:32:29,920 --> 01:32:32,080
um

2222
01:32:32,080 --> 01:32:34,159
i don't have personally don't have any

2223
01:32:34,159 --> 01:32:36,800
objections to more icmp

2224
01:32:36,800 --> 01:32:40,880
messages but it needs to fit into a

2225
01:32:40,880 --> 01:32:42,719
larger use case i think

2226
01:32:42,719 --> 01:32:44,719
but let's continue discussing on the

2227
01:32:44,719 --> 01:32:46,320
list thank you

2228
01:32:46,320 --> 01:32:48,800
thank you bob

2229
01:32:48,800 --> 01:32:49,920
well good

2230
01:32:49,920 --> 01:32:53,280
so i think we are done for today

2231
01:32:53,280 --> 01:32:54,719
um

2232
01:32:54,719 --> 01:32:56,800
i'll see you all on friday

2233
01:32:56,800 --> 01:32:58,960
or hear you or something

2234
01:32:58,960 --> 01:33:00,960
see you in the queue on the friday

2235
01:33:00,960 --> 01:33:02,960
session

2236
01:33:02,960 --> 01:33:07,639
so have a good itf week

2237
01:33:10,239 --> 01:33:14,120
i think we are done

2238
01:33:49,840 --> 01:33:51,920
you

