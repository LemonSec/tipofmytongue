1
00:00:01,760 --> 00:00:24,720
that mimosa Cavalera ponente moving next

2
00:00:21,449 --> 00:00:29,189
speaker came from checkpoint his Dario

3
00:00:24,720 --> 00:00:32,219
oh sorry 14-8 excuse me I have a mixed

4
00:00:29,189 --> 00:00:35,520
on a sponsor's today really bad

5
00:00:32,219 --> 00:00:38,129
don't take this encounter he will talk

6
00:00:35,520 --> 00:00:40,590
about a IOT the battle of the bots is it

7
00:00:38,129 --> 00:00:44,040
is interesting so Dario introduce

8
00:00:40,590 --> 00:00:48,140
yourself and please the screen and check

9
00:00:44,040 --> 00:00:48,140
everything is right okay thank you

10
00:01:00,120 --> 00:01:04,709
yeah it's right

11
00:01:08,340 --> 00:01:15,330
thank you very much

12
00:01:10,409 --> 00:01:19,320
hi everybody the talk maybe about

13
00:01:15,330 --> 00:01:21,009
botnets specifically Mirai if you are

14
00:01:19,320 --> 00:01:23,529
familiar with that

15
00:01:21,009 --> 00:01:27,100
I am dari dorando I am a researcher at

16
00:01:23,530 --> 00:01:31,570
for the girl labs and I focus on Android

17
00:01:27,100 --> 00:01:34,059
and iOS evil research and so what we're

18
00:01:31,570 --> 00:01:37,210
gonna talk about today is an overview of

19
00:01:34,060 --> 00:01:41,200
how near I bought networks and then I'm

20
00:01:37,210 --> 00:01:43,839
gonna go on about how the lab we set up

21
00:01:41,200 --> 00:01:46,000
works and then a brief talk about the

22
00:01:43,840 --> 00:01:50,319
new variants that we discovered or that

23
00:01:46,000 --> 00:01:52,060
are the most interesting so first of all

24
00:01:50,319 --> 00:01:54,459
if you don't know what Mirai is is a

25
00:01:52,060 --> 00:01:59,319
botnet that appear the first time and

26
00:01:54,459 --> 00:02:04,560
mid 2016 it is the biggest at the moment

27
00:01:59,319 --> 00:02:08,459
in terms of bots pulled and II was made

28
00:02:04,560 --> 00:02:12,220
open-source or let's say source code was

29
00:02:08,459 --> 00:02:13,989
released by its author a user going the

30
00:02:12,220 --> 00:02:17,440
name by the name of Anna senpai on a

31
00:02:13,989 --> 00:02:20,950
hacking forum in September 2016 so now

32
00:02:17,440 --> 00:02:23,200
I'm gonna briefly explain out the botany

33
00:02:20,950 --> 00:02:25,320
actually works and be kind with me I'm

34
00:02:23,200 --> 00:02:27,730
not an artist I'm an engineer so the

35
00:02:25,320 --> 00:02:31,358
PowerPoint is gonna look weird but

36
00:02:27,730 --> 00:02:33,280
thanks so we start with an infected IOT

37
00:02:31,359 --> 00:02:39,100
device the one on the bottom left so

38
00:02:33,280 --> 00:02:42,160
what this device would do is to try to

39
00:02:39,100 --> 00:02:46,090
gather other vulnerable devices and add

40
00:02:42,160 --> 00:02:50,620
them to the botnet so we'll try to brute

41
00:02:46,090 --> 00:02:54,639
force the login of other devices and if

42
00:02:50,620 --> 00:02:56,380
it manages to get a login and in the

43
00:02:54,639 --> 00:02:59,380
device it means the device is vulnerable

44
00:02:56,380 --> 00:03:02,950
so we'll report the credentials at the

45
00:02:59,380 --> 00:03:05,470
IP of the the bot to the report server

46
00:03:02,950 --> 00:03:07,179
the report server will pass this

47
00:03:05,470 --> 00:03:12,400
information to the loader which will

48
00:03:07,180 --> 00:03:14,500
directly load the boat on the vulnerable

49
00:03:12,400 --> 00:03:16,150
devices using these credentials once the

50
00:03:14,500 --> 00:03:19,150
bot is loaded the vulnerable device

51
00:03:16,150 --> 00:03:21,250
becomes infected and

52
00:03:19,150 --> 00:03:26,260
it will basically be part of the botnet

53
00:03:21,250 --> 00:03:29,920
so it will again try to add new bots so

54
00:03:26,260 --> 00:03:31,450
start we'll start brute-force other IPs

55
00:03:29,920 --> 00:03:33,790
and at the same time it will report to

56
00:03:31,450 --> 00:03:38,230
the server with its credentials that

57
00:03:33,790 --> 00:03:43,989
will be added to a database with all the

58
00:03:38,230 --> 00:03:47,140
bots then this database including all

59
00:03:43,989 --> 00:03:49,989
the the bots can be used by different

60
00:03:47,140 --> 00:03:53,559
users that have access to the botnet to

61
00:03:49,989 --> 00:03:55,720
start an attack so I will send an attack

62
00:03:53,560 --> 00:03:57,760
command to the the CTO server the CT

63
00:03:55,720 --> 00:03:59,739
server will decide which bots will you

64
00:03:57,760 --> 00:04:02,440
to use for this attack how many I mean

65
00:03:59,739 --> 00:04:04,689
it will be prompt on how many it will

66
00:04:02,440 --> 00:04:06,879
pass the command to the infected devices

67
00:04:04,689 --> 00:04:08,888
of choice and then they will attack the

68
00:04:06,879 --> 00:04:10,388
target it's very simple it's very

69
00:04:08,889 --> 00:04:14,560
straightforward

70
00:04:10,389 --> 00:04:19,530
the modules that compose the botnet are

71
00:04:14,560 --> 00:04:23,320
the c2 server which is in charge of

72
00:04:19,529 --> 00:04:24,969
creating the different sets of bots that

73
00:04:23,320 --> 00:04:27,070
are used by different users add new

74
00:04:24,970 --> 00:04:30,010
users because you have to remember this

75
00:04:27,070 --> 00:04:32,889
is basically a way to make money for the

76
00:04:30,010 --> 00:04:35,710
admin of the botnet so it can create a

77
00:04:32,889 --> 00:04:37,300
user for a specific guy that wants to

78
00:04:35,710 --> 00:04:40,870
use the botnet raccattack Sam on and

79
00:04:37,300 --> 00:04:46,270
it's code all in and go and support

80
00:04:40,870 --> 00:04:48,880
telnet identification or API keys so the

81
00:04:46,270 --> 00:04:49,599
second module is Callister this module

82
00:04:48,880 --> 00:04:53,349
sir

83
00:04:49,599 --> 00:04:56,409
serves the purpose of receiving reports

84
00:04:53,349 --> 00:04:59,440
of vulnerable IOT devices by the bot the

85
00:04:56,409 --> 00:05:03,010
bot in the botnet listens on port 48 101

86
00:04:59,440 --> 00:05:06,240
and receives these IP and credentials

87
00:05:03,010 --> 00:05:10,360
they are then passed to the loader which

88
00:05:06,240 --> 00:05:17,220
as I said logins with these credentials

89
00:05:10,360 --> 00:05:19,900
into the device and then uploads the

90
00:05:17,220 --> 00:05:23,260
baud code using different methods you

91
00:05:19,900 --> 00:05:26,948
could use W get use FTP or can even just

92
00:05:23,260 --> 00:05:30,750
straight-up use echo and save it the bot

93
00:05:26,949 --> 00:05:32,770
is that is coded in C and it is

94
00:05:30,750 --> 00:05:36,610
cross-platform compatible

95
00:05:32,770 --> 00:05:41,889
here it says x86 arm MIPS supports

96
00:05:36,610 --> 00:05:44,759
others supports super H supports arc

97
00:05:41,889 --> 00:05:47,860
recently and it's made up of the three

98
00:05:44,759 --> 00:05:50,050
major modules a scanner module the

99
00:05:47,860 --> 00:05:54,690
attack module and a killer module the

100
00:05:50,050 --> 00:05:58,690
scan module is is in charge of finding

101
00:05:54,690 --> 00:06:02,919
new but new possible BOTS so it will

102
00:05:58,690 --> 00:06:05,289
generate an IP random IP and this IP is

103
00:06:02,919 --> 00:06:08,440
generally randomly but tries to avoid

104
00:06:05,289 --> 00:06:11,590
the the list that you can see on right

105
00:06:08,440 --> 00:06:16,300
on the top there and this list comprises

106
00:06:11,590 --> 00:06:18,580
of non valid or useless addresses like

107
00:06:16,300 --> 00:06:22,930
loopback but also some government

108
00:06:18,580 --> 00:06:25,448
associated IPs and some big companies

109
00:06:22,930 --> 00:06:27,550
like HP and this is the whole list by

110
00:06:25,449 --> 00:06:28,780
the way it's not that many so it's kind

111
00:06:27,550 --> 00:06:32,380
of pointless in my opinion but it's

112
00:06:28,780 --> 00:06:34,869
there and then tries to use the

113
00:06:32,380 --> 00:06:37,919
credentials are hard-coded and in the

114
00:06:34,870 --> 00:06:42,030
bot to login these credentials are

115
00:06:37,919 --> 00:06:46,150
ranged from like root root admin admin

116
00:06:42,030 --> 00:06:49,570
to like the first one XC 3511 it's the

117
00:06:46,150 --> 00:06:53,349
default password for Shammai which is a

118
00:06:49,570 --> 00:06:57,009
chinese brand of Wi-Fi cameras and this

119
00:06:53,349 --> 00:07:01,360
XP is dawa so it's just known passwords

120
00:06:57,009 --> 00:07:03,130
that are hard-coded in these devices the

121
00:07:01,360 --> 00:07:07,419
attack module contains all the different

122
00:07:03,130 --> 00:07:11,289
attacks it's an implementation can run

123
00:07:07,419 --> 00:07:13,719
UDP attacks TCP attacks HTTP you know

124
00:07:11,289 --> 00:07:15,690
all the different kinds and it's up to

125
00:07:13,719 --> 00:07:18,430
the user to decide which one to use and

126
00:07:15,690 --> 00:07:21,310
then once that happens the attack is

127
00:07:18,430 --> 00:07:25,630
perpetrated the final module is the

128
00:07:21,310 --> 00:07:28,659
killer module and this module is what

129
00:07:25,630 --> 00:07:31,990
kind of makes your eye stand out and

130
00:07:28,659 --> 00:07:34,210
among all the other BOTS because it's it

131
00:07:31,990 --> 00:07:38,590
shows the the aggressiveness of this

132
00:07:34,210 --> 00:07:42,010
part what it does it tries to kill every

133
00:07:38,590 --> 00:07:44,260
any process that is trying to use the

134
00:07:42,010 --> 00:07:46,090
these three ports telnet port this is a

135
00:07:44,260 --> 00:07:51,840
port and the HTTP port

136
00:07:46,090 --> 00:07:54,489
so once the bought in facts a device

137
00:07:51,840 --> 00:07:58,299
effectively does not give the

138
00:07:54,490 --> 00:08:00,460
opportunity to be infected again by some

139
00:07:58,300 --> 00:08:05,050
other about using these ports and also

140
00:08:00,460 --> 00:08:07,270
has a lot of hate for other BOTS here

141
00:08:05,050 --> 00:08:09,060
tries to detect cubot tries to detect

142
00:08:07,270 --> 00:08:12,400
zola right which are other IT bots and

143
00:08:09,060 --> 00:08:14,590
if you find them using various

144
00:08:12,400 --> 00:08:21,489
techniques then kills the process and

145
00:08:14,590 --> 00:08:23,710
delete them so this said we at for the

146
00:08:21,490 --> 00:08:25,840
guard decided to start a project to

147
00:08:23,710 --> 00:08:27,969
study what Mira is doing and how its

148
00:08:25,840 --> 00:08:30,489
evolving because we've seen there's been

149
00:08:27,970 --> 00:08:32,620
a huge increase in the frequency of

150
00:08:30,490 --> 00:08:34,810
these kind of attacks recently so we

151
00:08:32,620 --> 00:08:37,929
started the Chi projects that for kylo

152
00:08:34,809 --> 00:08:41,619
UT botnets we started recently a couple

153
00:08:37,929 --> 00:08:45,939
months ago and we wanted to try to

154
00:08:41,620 --> 00:08:46,630
identify as many different variants of

155
00:08:45,940 --> 00:08:49,180
Mirai

156
00:08:46,630 --> 00:08:53,589
and studied them to see what's you know

157
00:08:49,180 --> 00:08:55,779
what's new and once we identified these

158
00:08:53,589 --> 00:08:58,690
new variants we try to collect all the

159
00:08:55,779 --> 00:09:02,050
different c2 servers the download URLs

160
00:08:58,690 --> 00:09:05,140
to then blacklist them so if we started

161
00:09:02,050 --> 00:09:07,150
we collected roughly 4,000 different

162
00:09:05,140 --> 00:09:10,930
samples and in these four thousand

163
00:09:07,150 --> 00:09:13,600
samples would be able to identify about

164
00:09:10,930 --> 00:09:16,599
50 different variants from these samples

165
00:09:13,600 --> 00:09:19,480
we were able to find 400 different URLs

166
00:09:16,600 --> 00:09:22,540
we blacklisted them and then also

167
00:09:19,480 --> 00:09:26,589
identified ten different more a bit more

168
00:09:22,540 --> 00:09:29,650
than 10 different exploits used and in

169
00:09:26,589 --> 00:09:32,350
these new variants to do that we set up

170
00:09:29,650 --> 00:09:34,000
a honeypot the honeypot is a low

171
00:09:32,350 --> 00:09:38,380
interaction honeypot in the sense that

172
00:09:34,000 --> 00:09:41,740
doesn't really need much to communicate

173
00:09:38,380 --> 00:09:45,820
with the bots when they attack so we

174
00:09:41,740 --> 00:09:49,630
just log the the talent comments that

175
00:09:45,820 --> 00:09:53,070
are run we log the download URL and we

176
00:09:49,630 --> 00:09:56,670
download the samples this is again

177
00:09:53,070 --> 00:09:59,769
pretty well drawn by me but this is a

178
00:09:56,670 --> 00:10:01,269
structure that we have we have

179
00:09:59,769 --> 00:10:03,369
virtual machine running in a host

180
00:10:01,269 --> 00:10:05,889
machine that are running the two parts

181
00:10:03,369 --> 00:10:09,339
of the honeypot the guest OS is running

182
00:10:05,889 --> 00:10:12,459
the agent that acts as a telnet service

183
00:10:09,339 --> 00:10:14,499
then we have the oast machine that is

184
00:10:12,459 --> 00:10:16,569
running the back end to actually analyze

185
00:10:14,499 --> 00:10:18,819
and log everything they are connected to

186
00:10:16,569 --> 00:10:22,149
a router within the test network that is

187
00:10:18,819 --> 00:10:24,459
that gets all the traffic routed for

188
00:10:22,149 --> 00:10:26,679
from an external router that is getting

189
00:10:24,459 --> 00:10:30,790
the traffic from outside from the

190
00:10:26,679 --> 00:10:34,179
internet so once we collected all these

191
00:10:30,790 --> 00:10:36,910
samples we need to find a way to

192
00:10:34,179 --> 00:10:41,709
identify and differentiate between the

193
00:10:36,910 --> 00:10:44,079
different kind of families so the first

194
00:10:41,709 --> 00:10:46,349
thing that we identify as one of the

195
00:10:44,079 --> 00:10:48,939
flags is the configuration options

196
00:10:46,350 --> 00:10:50,889
configuration options is the table that

197
00:10:48,939 --> 00:10:55,509
has all the different values that are

198
00:10:50,889 --> 00:10:57,489
used by Mirai in its functioning so this

199
00:10:55,509 --> 00:10:59,499
table is present throughout all the

200
00:10:57,489 --> 00:11:02,079
different variants but it does suffer

201
00:10:59,499 --> 00:11:04,480
some changes going from one to the other

202
00:11:02,079 --> 00:11:09,429
obviously the CCS change but also

203
00:11:04,480 --> 00:11:12,699
sometimes we'll get new entries for new

204
00:11:09,429 --> 00:11:18,910
functions or new services offered by the

205
00:11:12,699 --> 00:11:23,258
the new variant another important thing

206
00:11:18,910 --> 00:11:25,139
to give importance to is the table key

207
00:11:23,259 --> 00:11:28,449
the table key is used by Mirai to

208
00:11:25,139 --> 00:11:30,220
obfuscate its strings the way it does is

209
00:11:28,449 --> 00:11:32,079
pretty simple it gets this four bytes

210
00:11:30,220 --> 00:11:34,660
that beef here and on the left it's the

211
00:11:32,079 --> 00:11:36,459
original it sourced them together and

212
00:11:34,660 --> 00:11:41,230
obtains one value this group then be

213
00:11:36,459 --> 00:11:45,279
used to obfuscate the strings this was

214
00:11:41,230 --> 00:11:47,649
done in the original and remained used

215
00:11:45,279 --> 00:11:52,240
throughout the first almost year with

216
00:11:47,649 --> 00:11:53,980
very minor variants and then it was the

217
00:11:52,240 --> 00:11:55,809
first thing to be changed when new vines

218
00:11:53,980 --> 00:11:58,089
that were trying to do something more

219
00:11:55,809 --> 00:11:59,199
something different they started to

220
00:11:58,089 --> 00:12:02,459
change that as you can see they have

221
00:11:59,199 --> 00:12:06,519
like way less pronounceable options dead

222
00:12:02,459 --> 00:12:08,018
for example and in this as I said it was

223
00:12:06,519 --> 00:12:09,549
the first thing that was changed and

224
00:12:08,019 --> 00:12:11,169
that was like a first indicator that

225
00:12:09,549 --> 00:12:13,620
someone was actually looking at the code

226
00:12:11,169 --> 00:12:16,600
and not just getting it and using it

227
00:12:13,620 --> 00:12:21,220
so to solve this little problem we

228
00:12:16,600 --> 00:12:22,510
created some Ida Python scripts we have

229
00:12:21,220 --> 00:12:25,660
this these are the two main comments

230
00:12:22,510 --> 00:12:27,280
that we use the first one as di D so

231
00:12:25,660 --> 00:12:31,240
basically it just gives us the key that

232
00:12:27,280 --> 00:12:33,430
is used to soar it's a it's a one byte

233
00:12:31,240 --> 00:12:35,100
so there not many options we just brute

234
00:12:33,430 --> 00:12:38,800
force it it doesn't take that much and

235
00:12:35,100 --> 00:12:41,290
the second one is STR which the

236
00:12:38,800 --> 00:12:46,569
obfuscates the strings and then prints

237
00:12:41,290 --> 00:12:49,660
them the name of the different families

238
00:12:46,570 --> 00:12:52,600
is given by the last string that you can

239
00:12:49,660 --> 00:12:54,459
see here being busy box in this specific

240
00:12:52,600 --> 00:12:58,030
case this one was a part of the akira

241
00:12:54,460 --> 00:13:00,460
family and this string is used by the

242
00:12:58,030 --> 00:13:02,980
bots to check that it has actually

243
00:13:00,460 --> 00:13:04,600
obtained access it will run this being

244
00:13:02,980 --> 00:13:08,350
busy box it just allows to run like

245
00:13:04,600 --> 00:13:10,540
Linux like commands and it will get of

246
00:13:08,350 --> 00:13:11,800
if it is logged in you will get an error

247
00:13:10,540 --> 00:13:13,240
because the Cure is not an actual

248
00:13:11,800 --> 00:13:14,770
comment and then it will check if this

249
00:13:13,240 --> 00:13:17,550
error has actually been received and if

250
00:13:14,770 --> 00:13:20,490
he has that means that but the

251
00:13:17,550 --> 00:13:23,920
determinate attack has actually happened

252
00:13:20,490 --> 00:13:27,670
there are many other things that we like

253
00:13:23,920 --> 00:13:29,800
to look at to have some idea if there's

254
00:13:27,670 --> 00:13:31,270
been a modification we call them Easter

255
00:13:29,800 --> 00:13:35,099
eggs they're called safe strings in the

256
00:13:31,270 --> 00:13:37,630
original code and they were I from

257
00:13:35,100 --> 00:13:40,390
random sentences like I love chicken

258
00:13:37,630 --> 00:13:43,210
nuggets was one and then others are just

259
00:13:40,390 --> 00:13:45,370
very foul things about researchers which

260
00:13:43,210 --> 00:13:46,930
I'm now gonna repeat and then this one

261
00:13:45,370 --> 00:13:49,120
specifically is my favorite it was in

262
00:13:46,930 --> 00:13:50,880
the original and as you can see it's a

263
00:13:49,120 --> 00:13:53,650
YouTube video says on the top and

264
00:13:50,880 --> 00:13:56,350
obviously I had to check and I was

265
00:13:53,650 --> 00:13:57,970
rickrolled when that happened and it

266
00:13:56,350 --> 00:13:59,980
happens every time it's always there I

267
00:13:57,970 --> 00:14:04,150
always check it that's the nature of it

268
00:13:59,980 --> 00:14:07,810
so these is a kind of a heat map of

269
00:14:04,150 --> 00:14:11,860
where the c2 servers that we identify

270
00:14:07,810 --> 00:14:14,020
where the darker the more so from these

271
00:14:11,860 --> 00:14:17,740
for us a Netherlands Russia and China

272
00:14:14,020 --> 00:14:19,540
kind of had I would say like 75% of the

273
00:14:17,740 --> 00:14:21,640
hits and then there were some others

274
00:14:19,540 --> 00:14:26,349
from some countries in Europe's and

275
00:14:21,640 --> 00:14:26,860
Canada and stuff like that so this being

276
00:14:26,350 --> 00:14:30,400
said

277
00:14:26,860 --> 00:14:37,180
what are the interesting variants that

278
00:14:30,400 --> 00:14:42,160
we were able to identify in MRI so this

279
00:14:37,180 --> 00:14:45,719
is a timeline of the various variants

280
00:14:42,160 --> 00:14:50,620
every yellow line is a new variant and

281
00:14:45,720 --> 00:14:52,900
it started in 2016 and mirai was the

282
00:14:50,620 --> 00:14:55,360
first obviously and there were no real

283
00:14:52,900 --> 00:14:57,250
modifications of it for a while I'd say

284
00:14:55,360 --> 00:14:58,750
four or five months then the first one

285
00:14:57,250 --> 00:15:02,620
started to appear as you can see memes

286
00:14:58,750 --> 00:15:05,650
or Abdurrahman and these ones were

287
00:15:02,620 --> 00:15:09,130
really just changing the credentials

288
00:15:05,650 --> 00:15:12,010
used to updated new ones they were

289
00:15:09,130 --> 00:15:15,730
discovered the first big family to come

290
00:15:12,010 --> 00:15:18,610
out was Masuda which still wasn't very

291
00:15:15,730 --> 00:15:23,590
different in terms of the code but it

292
00:15:18,610 --> 00:15:25,390
just happened to be more frequent so

293
00:15:23,590 --> 00:15:26,590
would it will pop up way more than the

294
00:15:25,390 --> 00:15:30,910
others which would be like once in a

295
00:15:26,590 --> 00:15:36,010
blue moon towards the end of 2017 we

296
00:15:30,910 --> 00:15:38,170
started seeing a bigger amount of new

297
00:15:36,010 --> 00:15:44,380
variants popping up from time to time so

298
00:15:38,170 --> 00:15:46,329
Authority for example was camp came to

299
00:15:44,380 --> 00:15:48,400
light in December but the first samples

300
00:15:46,330 --> 00:15:51,970
actually started circulating and in

301
00:15:48,400 --> 00:15:54,970
August of 2017 and it was the first to

302
00:15:51,970 --> 00:15:57,370
first found to be using a different kind

303
00:15:54,970 --> 00:15:59,920
of propagation method and then there's

304
00:15:57,370 --> 00:16:01,870
just I name a few there but there were

305
00:15:59,920 --> 00:16:05,020
so many just didn't have the space to do

306
00:16:01,870 --> 00:16:07,300
that to do more than that so as I said

307
00:16:05,020 --> 00:16:09,699
Satori also goes by the name of Aikido

308
00:16:07,300 --> 00:16:11,829
it depends it's a debate it changes the

309
00:16:09,700 --> 00:16:14,620
name in the strings but the code is

310
00:16:11,830 --> 00:16:18,870
usually the same the exploits are there

311
00:16:14,620 --> 00:16:22,650
so we just group them together it is

312
00:16:18,870 --> 00:16:26,830
believed to be coded by next to Sarah

313
00:16:22,650 --> 00:16:30,010
next to Sarah which and that is due to

314
00:16:26,830 --> 00:16:32,830
some strings that are found and in the

315
00:16:30,010 --> 00:16:35,110
sample and some claims have been done by

316
00:16:32,830 --> 00:16:36,880
a user going by either Nexus was that on

317
00:16:35,110 --> 00:16:40,540
different platforms acting forums and

318
00:16:36,880 --> 00:16:42,700
stuff like that it is right now

319
00:16:40,540 --> 00:16:44,199
as far as we know from our studies the

320
00:16:42,700 --> 00:16:50,980
most popular mode of Mirai

321
00:16:44,200 --> 00:16:53,260
in terms of quantity and it has the

322
00:16:50,980 --> 00:16:56,560
difference between Mirai and this one is

323
00:16:53,260 --> 00:16:58,330
the load mechanism and the propagation

324
00:16:56,560 --> 00:17:01,569
the loader is actually embedded in the

325
00:16:58,330 --> 00:17:05,949
bot it does not rely on an additional a

326
00:17:01,570 --> 00:17:07,690
server-side loader and in fact he uses

327
00:17:05,949 --> 00:17:10,000
exploits to spread which is very

328
00:17:07,690 --> 00:17:12,670
different from Mirai which as I said

329
00:17:10,000 --> 00:17:14,770
used use brute force and it's also the

330
00:17:12,670 --> 00:17:18,060
first one that we encountered actually

331
00:17:14,770 --> 00:17:24,250
starting using packing software like upx

332
00:17:18,060 --> 00:17:26,589
the first version of Satori that was

333
00:17:24,250 --> 00:17:30,460
kind of interesting appeared in December

334
00:17:26,589 --> 00:17:34,960
was detected in December 2017 and it

335
00:17:30,460 --> 00:17:38,290
included two exploits then in the month

336
00:17:34,960 --> 00:17:41,020
following bats in January there been two

337
00:17:38,290 --> 00:17:43,750
other fall exploits have been found in

338
00:17:41,020 --> 00:17:45,879
Satori and heaven I don't have it in my

339
00:17:43,750 --> 00:17:50,650
slide because it's very new but there

340
00:17:45,880 --> 00:17:54,820
was a new one last week that appeared so

341
00:17:50,650 --> 00:17:59,800
this exploits so this is the little part

342
00:17:54,820 --> 00:18:01,990
from the the Ida of the first sample

343
00:17:59,800 --> 00:18:04,690
with the one with the two exploits as

344
00:18:01,990 --> 00:18:09,640
you can see the bifurcation will either

345
00:18:04,690 --> 00:18:11,560
scan poor 52s 869 or 37 215 and that

346
00:18:09,640 --> 00:18:13,210
depends on a randomly generated number

347
00:18:11,560 --> 00:18:17,320
it doesn't really have anything to do

348
00:18:13,210 --> 00:18:19,420
with this kind itself is just 50/50 this

349
00:18:17,320 --> 00:18:22,169
is the first exploit is a three years

350
00:18:19,420 --> 00:18:25,870
old exploit targeting real tech devices

351
00:18:22,170 --> 00:18:28,720
the actual exploit is relatively not

352
00:18:25,870 --> 00:18:31,780
important it's just a way to get access

353
00:18:28,720 --> 00:18:34,960
to get a shell and then to download to

354
00:18:31,780 --> 00:18:36,370
the bot what is interesting not only not

355
00:18:34,960 --> 00:18:40,740
not with this specifically but with a

356
00:18:36,370 --> 00:18:42,850
second one is that it was a zero day and

357
00:18:40,740 --> 00:18:45,940
when it was discovered the first time in

358
00:18:42,850 --> 00:18:49,360
December and this tells us that the

359
00:18:45,940 --> 00:18:53,230
developer behind this is committed in

360
00:18:49,360 --> 00:18:54,310
some way it either able to create a zero

361
00:18:53,230 --> 00:18:57,430
day or is able

362
00:18:54,310 --> 00:18:59,290
to get access to one and you know this

363
00:18:57,430 --> 00:19:00,970
was the first kind of real commitment to

364
00:18:59,290 --> 00:19:03,129
these kind of things because before it

365
00:19:00,970 --> 00:19:04,270
was just like copying and pasting the

366
00:19:03,130 --> 00:19:10,360
code and this one is an actual

367
00:19:04,270 --> 00:19:11,940
modification the third exploit is a

368
00:19:10,360 --> 00:19:16,719
different one it doesn't actually

369
00:19:11,940 --> 00:19:20,470
increase the spreading of the of the set

370
00:19:16,720 --> 00:19:24,760
of the variant but targets claim or

371
00:19:20,470 --> 00:19:28,270
claims the etherium mining software that

372
00:19:24,760 --> 00:19:30,610
runs on Windows and basically the IOT

373
00:19:28,270 --> 00:19:32,139
device would try to scan for

374
00:19:30,610 --> 00:19:32,830
vulnerabilities on four three three

375
00:19:32,140 --> 00:19:35,950
three three

376
00:19:32,830 --> 00:19:39,159
I mean scan for response and then tried

377
00:19:35,950 --> 00:19:42,120
the exploit and if that succeeded it

378
00:19:39,160 --> 00:19:45,100
would basically change the wallet

379
00:19:42,120 --> 00:19:48,239
destination of the mind etherion and

380
00:19:45,100 --> 00:19:50,709
last time I checked was halfway through

381
00:19:48,240 --> 00:19:52,600
February and I think this wallet which

382
00:19:50,710 --> 00:19:54,490
is the only wallet that has been found

383
00:19:52,600 --> 00:19:55,600
so there's not multiple people trying to

384
00:19:54,490 --> 00:19:58,300
do this so they're not trying to change

385
00:19:55,600 --> 00:20:00,340
the wallet so is the same it's it was

386
00:19:58,300 --> 00:20:03,180
about five thousand dollars something

387
00:20:00,340 --> 00:20:07,090
like that so not much but still it's uh

388
00:20:03,180 --> 00:20:08,910
it's a way of making money out of me

389
00:20:07,090 --> 00:20:12,490
right within a different approach

390
00:20:08,910 --> 00:20:14,980
this is the last exploit that I have

391
00:20:12,490 --> 00:20:18,100
here and it's interesting because this

392
00:20:14,980 --> 00:20:20,200
one is not just like a copy and paste

393
00:20:18,100 --> 00:20:23,590
it's a it's a chain of exploits for

394
00:20:20,200 --> 00:20:26,050
Wi-Fi cams so this chain with obtaining

395
00:20:23,590 --> 00:20:28,929
the credentials first and then will try

396
00:20:26,050 --> 00:20:31,570
to use these credentials to run the code

397
00:20:28,930 --> 00:20:36,460
to download the bots again so it's again

398
00:20:31,570 --> 00:20:39,730
a spreading mechanism the second family

399
00:20:36,460 --> 00:20:45,030
that I want to talk about is Missoula

400
00:20:39,730 --> 00:20:51,340
Missoula is a as I said was the first

401
00:20:45,030 --> 00:20:54,610
real modification of Mir I it was the

402
00:20:51,340 --> 00:20:57,040
first big family and at the beginning it

403
00:20:54,610 --> 00:21:01,139
was just a modification of the original

404
00:20:57,040 --> 00:21:06,550
code with some different Zoar keys and

405
00:21:01,140 --> 00:21:08,360
different credentials has been popping

406
00:21:06,550 --> 00:21:12,049
up more lately in general

407
00:21:08,360 --> 00:21:14,000
and it has started using exploits as

408
00:21:12,049 --> 00:21:14,990
well it is also believed to be could

409
00:21:14,000 --> 00:21:16,610
have an extra set up for the same

410
00:21:14,990 --> 00:21:20,840
reasons I said before still has the same

411
00:21:16,610 --> 00:21:23,649
strings just been claimed by by this guy

412
00:21:20,840 --> 00:21:29,149
on Twitter for example and he uses

413
00:21:23,649 --> 00:21:32,719
specifically soap exploits mostly they

414
00:21:29,149 --> 00:21:36,139
have two targeting d-link routers one

415
00:21:32,720 --> 00:21:40,429
targeting ZyXEL and again they will just

416
00:21:36,140 --> 00:21:43,010
get the access to the to the IOT device

417
00:21:40,429 --> 00:21:47,120
and then run the code to to download the

418
00:21:43,010 --> 00:21:52,580
bomb the last variant that I want to

419
00:21:47,120 --> 00:21:55,729
talk about is called omg omg is the name

420
00:21:52,580 --> 00:21:57,529
actually was old mga as you can see on

421
00:21:55,730 --> 00:22:00,500
the right but really didn't roll off the

422
00:21:57,529 --> 00:22:05,840
tongue so we went with oMG we discovered

423
00:22:00,500 --> 00:22:09,139
this last month 45 days ago and the

424
00:22:05,840 --> 00:22:14,000
first doing the restaurant the first

425
00:22:09,139 --> 00:22:15,379
samples appeared in 2007 17 in July but

426
00:22:14,000 --> 00:22:17,929
it was still going under the name of

427
00:22:15,380 --> 00:22:19,549
Mirai so what didn't change that and

428
00:22:17,929 --> 00:22:22,100
that in December they actually started

429
00:22:19,549 --> 00:22:24,980
using a different name in terms of the

430
00:22:22,100 --> 00:22:27,439
way it functions is very similar to it's

431
00:22:24,980 --> 00:22:28,880
actually the same as Mirai the the

432
00:22:27,440 --> 00:22:30,620
attack module the killer module scanner

433
00:22:28,880 --> 00:22:34,429
module there and he uses brute force to

434
00:22:30,620 --> 00:22:38,090
spread but it offers a new function

435
00:22:34,429 --> 00:22:40,880
which is it allows the user the attacker

436
00:22:38,090 --> 00:22:44,870
to turn the IOT devices into a proxy

437
00:22:40,880 --> 00:22:46,639
server the way it does is using three

438
00:22:44,870 --> 00:22:49,129
proxy three proxy is an open source

439
00:22:46,639 --> 00:22:53,510
proxy server set that's available on

440
00:22:49,130 --> 00:22:56,210
github and basically the way it chooses

441
00:22:53,510 --> 00:22:58,639
to use one or the other is through an

442
00:22:56,210 --> 00:23:01,399
input given by the dc2 server if you

443
00:22:58,639 --> 00:23:04,070
receive a specific message you will

444
00:23:01,399 --> 00:23:08,559
switch from one mode of operation to the

445
00:23:04,070 --> 00:23:11,658
other if it's in proxy mode it will

446
00:23:08,559 --> 00:23:15,500
generate two random ports one for HTTP

447
00:23:11,659 --> 00:23:19,669
and one for Sox and then it will add

448
00:23:15,500 --> 00:23:22,190
these two ports to the IP tables to the

449
00:23:19,669 --> 00:23:24,140
firewall and

450
00:23:22,190 --> 00:23:27,350
basically allowing traffic through these

451
00:23:24,140 --> 00:23:32,420
two random ports it will run its proxy

452
00:23:27,350 --> 00:23:33,800
it will change the exchange of traffic

453
00:23:32,420 --> 00:23:35,630
and then when it's done we're assuming

454
00:23:33,800 --> 00:23:38,480
on a message and then it will shut down

455
00:23:35,630 --> 00:23:41,870
and delete these two roles now allowing

456
00:23:38,480 --> 00:23:45,460
any more traffic to go through so

457
00:23:41,870 --> 00:23:47,860
obviously it would need some kind of

458
00:23:45,460 --> 00:23:50,000
interaction it would need some kind of

459
00:23:47,860 --> 00:23:52,879
setting up obviously that's not possible

460
00:23:50,000 --> 00:23:55,790
so it embeds the whole configuration

461
00:23:52,880 --> 00:23:59,690
that would need otherwise and it's

462
00:23:55,790 --> 00:24:05,750
embedded in the code when we started

463
00:23:59,690 --> 00:24:07,930
analyzing this this sample the c2 was

464
00:24:05,750 --> 00:24:11,060
already down so we couldn't actually

465
00:24:07,930 --> 00:24:14,060
contact it and have no kind of

466
00:24:11,060 --> 00:24:18,290
communication everything that we know is

467
00:24:14,060 --> 00:24:21,320
based on static analysis so what we

468
00:24:18,290 --> 00:24:25,280
think is this was simply a copy and

469
00:24:21,320 --> 00:24:30,560
paste of the github code into an already

470
00:24:25,280 --> 00:24:32,960
existing malware and used as an let's

471
00:24:30,560 --> 00:24:36,409
say like a testing I would say but you

472
00:24:32,960 --> 00:24:37,970
know this is a showing that there is a

473
00:24:36,410 --> 00:24:40,790
direction in which these things are

474
00:24:37,970 --> 00:24:44,290
going and in the future these things

475
00:24:40,790 --> 00:24:46,520
could be used to have more intricate

476
00:24:44,290 --> 00:24:48,889
uses like for example you could use them

477
00:24:46,520 --> 00:24:51,560
to create at the central IC to be like

478
00:24:48,890 --> 00:24:59,050
more resilient on takedowns and stuff

479
00:24:51,560 --> 00:25:03,050
like that so to wrap this up

480
00:24:59,050 --> 00:25:04,760
mirai is uh it's a botnet then as now

481
00:25:03,050 --> 00:25:07,940
being around for that long it's been

482
00:25:04,760 --> 00:25:12,670
around for about a year and a half and

483
00:25:07,940 --> 00:25:17,660
it started as a very well programmed

484
00:25:12,670 --> 00:25:20,780
botnet but not that resilient and had

485
00:25:17,660 --> 00:25:23,660
very basic ways of hiding himself has

486
00:25:20,780 --> 00:25:27,139
basic of the session it was using a kind

487
00:25:23,660 --> 00:25:29,780
of basic way of spreading which was at

488
00:25:27,140 --> 00:25:32,240
the time the most effective although

489
00:25:29,780 --> 00:25:34,790
like in in time in the past year this

490
00:25:32,240 --> 00:25:35,530
has changed the propagation has become a

491
00:25:34,790 --> 00:25:38,510
more

492
00:25:35,530 --> 00:25:41,440
targeted one I started using exploits

493
00:25:38,510 --> 00:25:42,710
instead of using just brute force its

494
00:25:41,440 --> 00:25:45,500
uses

495
00:25:42,710 --> 00:25:49,490
no packers upx resembles I slightly

496
00:25:45,500 --> 00:25:51,710
slight modification upx and starting

497
00:25:49,490 --> 00:25:55,850
using creative ways of monetize for

498
00:25:51,710 --> 00:25:58,580
example the if you're mining exploit is

499
00:25:55,850 --> 00:26:02,840
an example the proxy service to offer to

500
00:25:58,580 --> 00:26:05,559
your users is another example so we

501
00:26:02,840 --> 00:26:08,418
expect this to continue this evolution

502
00:26:05,559 --> 00:26:10,309
they have not been real modification of

503
00:26:08,419 --> 00:26:13,190
the core functionalities the proxy was

504
00:26:10,309 --> 00:26:16,520
probably the most different but it was

505
00:26:13,190 --> 00:26:18,559
still the same kind of base code with an

506
00:26:16,520 --> 00:26:21,350
addition with a copy-paste of this code

507
00:26:18,559 --> 00:26:23,510
but the more time passes by the more

508
00:26:21,350 --> 00:26:27,080
people realize how what the reach of

509
00:26:23,510 --> 00:26:29,450
this button is we expect more developers

510
00:26:27,080 --> 00:26:31,010
to start tinkering with this and you

511
00:26:29,450 --> 00:26:37,100
know the more people start to work with

512
00:26:31,010 --> 00:26:38,690
it the more the more he gets on so we

513
00:26:37,100 --> 00:26:42,649
will also probably likely see more

514
00:26:38,690 --> 00:26:45,020
exploits because as I said the way

515
00:26:42,650 --> 00:26:50,330
memory works is try to shut down every

516
00:26:45,020 --> 00:26:54,559
other botnets to infect it so most of

517
00:26:50,330 --> 00:26:56,809
the devices that were targetable by

518
00:26:54,559 --> 00:27:00,678
brute force logins probably have been in

519
00:26:56,809 --> 00:27:03,918
some way compromised so what it remains

520
00:27:00,679 --> 00:27:05,570
what is still up for grabs is the ones

521
00:27:03,919 --> 00:27:07,940
that are not vulnerable to that so to

522
00:27:05,570 --> 00:27:12,320
get to them they need to be a different

523
00:27:07,940 --> 00:27:15,230
way for example exploits so ensured

524
00:27:12,320 --> 00:27:17,840
Mirai is definitely winning the war with

525
00:27:15,230 --> 00:27:21,350
other botnets because of the killing

526
00:27:17,840 --> 00:27:23,299
because of the just the modularity it

527
00:27:21,350 --> 00:27:27,110
offers the fact that it's open source

528
00:27:23,299 --> 00:27:29,809
basically and it's easy for everyone to

529
00:27:27,110 --> 00:27:36,250
just pick it up and and and deploy it

530
00:27:29,809 --> 00:27:38,649
and it's also so vastly modular and

531
00:27:36,250 --> 00:27:41,330
compatible with different architectural

532
00:27:38,650 --> 00:27:43,130
architectures that is just we don't see

533
00:27:41,330 --> 00:27:46,460
this going anywhere unless something

534
00:27:43,130 --> 00:27:49,200
else comes by that just revolutionizes

535
00:27:46,460 --> 00:27:52,190
the word in abundance

536
00:27:49,200 --> 00:28:00,729
that would be

537
00:27:52,190 --> 00:28:00,729
[Applause]

538
00:28:09,190 --> 00:28:14,740
if there are none and you just want to

539
00:28:12,250 --> 00:28:16,930
later that do that these are the emails

540
00:28:14,740 --> 00:28:18,820
of me and my colleagues and these are

541
00:28:16,930 --> 00:28:21,640
our Twitter handles so we can you can

542
00:28:18,820 --> 00:28:24,070
just shoot us an email or you know tweet

543
00:28:21,640 --> 00:28:26,320
at us and we'll be happy to answer just

544
00:28:24,070 --> 00:28:29,169
one quick question yes do you expect for

545
00:28:26,320 --> 00:28:33,220
the future something similar to Apache

546
00:28:29,170 --> 00:28:36,240
not hooking but just to take advantage

547
00:28:33,220 --> 00:28:39,460
of an already existing infection just

548
00:28:36,240 --> 00:28:40,870
get in replacing addresses and replacing

549
00:28:39,460 --> 00:28:43,090
command and controls addresses and these

550
00:28:40,870 --> 00:28:45,879
kind of things not to implement any

551
00:28:43,090 --> 00:28:48,699
functionality but still from other

552
00:28:45,880 --> 00:28:50,350
coordinates well regarding me right as I

553
00:28:48,700 --> 00:28:52,780
said it's hard to do that you would need

554
00:28:50,350 --> 00:28:55,840
to rely probably on still on exploits to

555
00:28:52,780 --> 00:28:58,300
get to to the core of the bot so it is

556
00:28:55,840 --> 00:29:00,879
possible and but I don't think I don't

557
00:28:58,300 --> 00:29:02,919
see that happening on a large scale but

558
00:29:00,880 --> 00:29:05,770
more of a targeted one so probably it

559
00:29:02,920 --> 00:29:08,710
will it could happen but it wouldn't I

560
00:29:05,770 --> 00:29:12,670
don't think you would destroy your eye

561
00:29:08,710 --> 00:29:13,390
and the way it is okay any other

562
00:29:12,670 --> 00:29:17,140
questions

563
00:29:13,390 --> 00:29:22,180
oh they are sorry right you're right

564
00:29:17,140 --> 00:29:24,990
there is it on stand up just wondering

565
00:29:22,180 --> 00:29:31,710
if there is any idea where I'm looking

566
00:29:24,990 --> 00:29:34,450
sorry manufacture secured by design

567
00:29:31,710 --> 00:29:38,170
devices into another thing yes

568
00:29:34,450 --> 00:29:41,500
so obviously the IOT environment is a

569
00:29:38,170 --> 00:29:44,620
relatively new thing and it is it has

570
00:29:41,500 --> 00:29:47,020
been like the the buzz everyone wants to

571
00:29:44,620 --> 00:29:50,459
talk about IOT in the past two or three

572
00:29:47,020 --> 00:29:53,800
years so what happened is that many

573
00:29:50,460 --> 00:29:55,870
producers of different hardware wanted

574
00:29:53,800 --> 00:29:57,700
to be part of this so what they did is

575
00:29:55,870 --> 00:29:59,379
this just pushed out something that

576
00:29:57,700 --> 00:30:01,480
would compete with other people so

577
00:29:59,380 --> 00:30:04,390
obviously security was never actually

578
00:30:01,480 --> 00:30:05,860
looked at that much so that's why we get

579
00:30:04,390 --> 00:30:07,210
the brute force the brute force comes

580
00:30:05,860 --> 00:30:10,240
from that like the fact that a brute

581
00:30:07,210 --> 00:30:11,440
force login is so effective is that most

582
00:30:10,240 --> 00:30:16,840
of these devices

583
00:30:11,440 --> 00:30:18,940
are just kind of crappy in what they

584
00:30:16,840 --> 00:30:21,240
could do is definitely like invest some

585
00:30:18,940 --> 00:30:23,260
money or you know it's just as simple as

586
00:30:21,240 --> 00:30:24,510
forcing the user to change the

587
00:30:23,260 --> 00:30:27,129
[Music]

588
00:30:24,510 --> 00:30:29,400
credentials at the beginning for in this

589
00:30:27,130 --> 00:30:32,020
way this is what we could say for the

590
00:30:29,400 --> 00:30:34,059
the brute a brute force part the

591
00:30:32,020 --> 00:30:37,179
exploits obviously you know that's just

592
00:30:34,059 --> 00:30:38,620
how it is you can can really say let not

593
00:30:37,179 --> 00:30:40,660
have vulnerabilities because that's what

594
00:30:38,620 --> 00:30:45,418
everyone tries to do but then again you

595
00:30:40,660 --> 00:30:50,530
just need to work harder on that okay

596
00:30:45,419 --> 00:30:54,010
final question mark nice here nice cover

597
00:30:50,530 --> 00:30:56,490
that's about oatmeal a botnet one

598
00:30:54,010 --> 00:30:59,620
question regarding the honeypot part yes

599
00:30:56,490 --> 00:31:02,590
can you disclose feet with challenges

600
00:30:59,620 --> 00:31:04,270
you found trying to build a honeypot or

601
00:31:02,590 --> 00:31:09,970
I mean you use it something happens or

602
00:31:04,270 --> 00:31:12,910
yes yes so we used an open-source

603
00:31:09,970 --> 00:31:16,809
honeypot school carry if that helps and

604
00:31:12,910 --> 00:31:20,590
so it is like the the hard part is being

605
00:31:16,809 --> 00:31:22,000
able to find more the moment don't know

606
00:31:20,590 --> 00:31:24,189
but carries are very easy to deploy

607
00:31:22,000 --> 00:31:26,260
things so that wasn't it very difficult

608
00:31:24,190 --> 00:31:29,169
the the difficult part is having

609
00:31:26,260 --> 00:31:32,260
something that gives you more having it

610
00:31:29,169 --> 00:31:33,520
we have a telnet honeypot because that's

611
00:31:32,260 --> 00:31:34,419
was the way it was developed at the

612
00:31:33,520 --> 00:31:36,639
beginning it was the way it was

613
00:31:34,419 --> 00:31:40,299
spreading and we are at the moment

614
00:31:36,640 --> 00:31:43,140
studying a way to have obviously like

615
00:31:40,299 --> 00:31:45,760
more supporting more protocols support

616
00:31:43,140 --> 00:31:47,890
focusing on different ports as well but

617
00:31:45,760 --> 00:31:50,740
that is the big question is how can we

618
00:31:47,890 --> 00:31:52,840
get as much as we can and not just limit

619
00:31:50,740 --> 00:31:54,700
ourself on telnet for example and that's

620
00:31:52,840 --> 00:31:55,899
a yeah it's a good question because we

621
00:31:54,700 --> 00:32:00,250
don't really have an answer to that at

622
00:31:55,900 --> 00:32:05,679
the moment so yeah like the big the big

623
00:32:00,250 --> 00:32:07,120
thing is to be able to be aware of all

624
00:32:05,679 --> 00:32:08,919
the exploits for example they run on

625
00:32:07,120 --> 00:32:10,149
different ports but that I don't know I

626
00:32:08,919 --> 00:32:11,290
don't have an answer to that we'd

627
00:32:10,150 --> 00:32:12,850
working on that we're trying to develop

628
00:32:11,290 --> 00:32:15,879
something nice on that thank you thank

629
00:32:12,850 --> 00:32:17,760
you okay no more questions thank you so

630
00:32:15,880 --> 00:32:22,200
much Dario

631
00:32:17,760 --> 00:32:22,200
[Applause]

