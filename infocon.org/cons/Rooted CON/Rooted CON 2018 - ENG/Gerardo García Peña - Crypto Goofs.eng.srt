1
00:00:00,000 --> 00:00:18,240
si es que tenemos hangout a todos vamos

2
00:00:15,929 --> 00:00:20,550
a tener la última charla justo antes de

3
00:00:18,240 --> 00:00:24,320
la entrada el premio so we start our

4
00:00:20,550 --> 00:00:29,160
last presentation before the word

5
00:00:24,320 --> 00:00:34,190
ceremony please stay stay for their

6
00:00:29,160 --> 00:00:39,149
words okay do not rush to the beer okay

7
00:00:34,190 --> 00:00:40,640
so sponsors that help us make this

8
00:00:39,149 --> 00:00:46,200
possible

9
00:00:40,640 --> 00:00:50,399
14:8 GTI Findo tech pwc semantic turn

10
00:00:46,200 --> 00:00:53,090
logic pay for beer I'm blue indica Viva

11
00:00:50,399 --> 00:00:57,059
which is a group of companies from BBVA

12
00:00:53,090 --> 00:01:00,660
Capgemini TXE every is capacitive indeed

13
00:00:57,059 --> 00:01:04,830
tell what Security Center all these

14
00:01:00,660 --> 00:01:08,070
three sponsored the what rabbit drum and

15
00:01:04,830 --> 00:01:10,979
the others sponsored the events in

16
00:01:08,070 --> 00:01:14,250
general those on top sponsor all the

17
00:01:10,979 --> 00:01:17,789
rooms and these one sponsored the

18
00:01:14,250 --> 00:01:20,820
security room cell thank you very much

19
00:01:17,790 --> 00:01:25,350
rather for your patience it is always a

20
00:01:20,820 --> 00:01:28,139
pleasure having you here okay so he will

21
00:01:25,350 --> 00:01:31,470
tell you more about Krypton whoops

22
00:01:28,140 --> 00:01:35,939
so I'm Harold over here pena come from

23
00:01:31,470 --> 00:01:39,240
transporter house and today we basically

24
00:01:35,939 --> 00:01:42,149
talk about cryptography will not go into

25
00:01:39,240 --> 00:01:46,770
Bitcoin or any specific doses of it and

26
00:01:42,150 --> 00:01:51,899
the idea is to go into but this is not

27
00:01:46,770 --> 00:01:56,369
going to be a boring class lesson of gix

28
00:01:51,899 --> 00:01:58,979
I'm going to take a look at how these

29
00:01:56,369 --> 00:02:02,640
algorithms work and I would like you to

30
00:01:58,979 --> 00:02:04,979
take away two powerful conceptual ideas

31
00:02:02,640 --> 00:02:07,860
so that when you face up and ography

32
00:02:04,979 --> 00:02:08,139
issue you are in a position to face up

33
00:02:07,860 --> 00:02:11,830
to

34
00:02:08,139 --> 00:02:13,208
them and so that you can get us an

35
00:02:11,830 --> 00:02:15,430
understanding about the provenance

36
00:02:13,209 --> 00:02:18,010
weaknesses and how the algorithm works

37
00:02:15,430 --> 00:02:21,690
so that we can make a decent use of it

38
00:02:18,010 --> 00:02:27,549
okay let us go for it table of contents

39
00:02:21,690 --> 00:02:32,709
introduction three slides okay let's go

40
00:02:27,550 --> 00:02:39,700
for it I would go back so that you don't

41
00:02:32,709 --> 00:02:42,580
get distracted so when we think about

42
00:02:39,700 --> 00:02:44,799
reducing cryptography it's not a

43
00:02:42,580 --> 00:02:48,220
question about what I'm going to use

44
00:02:44,800 --> 00:02:53,170
cryptography now or later but it is when

45
00:02:48,220 --> 00:02:56,530
when we want to protect assets well with

46
00:02:53,170 --> 00:03:00,070
whom are going to use it and whether we

47
00:02:56,530 --> 00:03:02,739
will eat it up or not in terms of when

48
00:03:00,070 --> 00:03:05,320
it kind of sounds like a simple thing

49
00:03:02,739 --> 00:03:06,790
but it is not a simple says that

50
00:03:05,320 --> 00:03:10,959
security is like a chain

51
00:03:06,790 --> 00:03:13,810
it always breaks in the weakest part so

52
00:03:10,959 --> 00:03:15,820
when when do we want to have that

53
00:03:13,810 --> 00:03:17,860
protection it is very good to use all

54
00:03:15,820 --> 00:03:19,269
the cryptographic algorithms in the

55
00:03:17,860 --> 00:03:25,720
world and then that will leave

56
00:03:19,269 --> 00:03:28,180
information not cryptid in the database

57
00:03:25,720 --> 00:03:33,600
so we want to use it whenever there is

58
00:03:28,180 --> 00:03:33,600
any interaction delivering information

59
00:03:34,450 --> 00:03:44,480
so we did protection we need encrypting

60
00:03:40,909 --> 00:03:46,459
so often we find mix models of work when

61
00:03:44,480 --> 00:03:49,159
we are protecting the channel but we are

62
00:03:46,459 --> 00:03:52,640
not protecting the interaction of data

63
00:03:49,159 --> 00:03:55,340
and then additionally sometimes when all

64
00:03:52,640 --> 00:03:57,379
these comes from the provisional review

65
00:03:55,340 --> 00:04:00,260
of God and I'm going to tell you why I

66
00:03:57,379 --> 00:04:02,298
decided to give this code this book I've

67
00:04:00,260 --> 00:04:04,159
reviewed lots of code and sometimes I

68
00:04:02,299 --> 00:04:06,530
can see that we are trying to protect

69
00:04:04,159 --> 00:04:09,530
something we make mistakes or sometimes

70
00:04:06,530 --> 00:04:12,769
when we are creating new protocols well

71
00:04:09,530 --> 00:04:16,220
we have a mixed use of cryptography okay

72
00:04:12,769 --> 00:04:19,039
I said this is encrypted this is these

73
00:04:16,220 --> 00:04:22,430
are that for whatever reason so the

74
00:04:19,039 --> 00:04:26,000
mixed use would be very risky and very

75
00:04:22,430 --> 00:04:31,789
complex and actually all the weaknesses

76
00:04:26,000 --> 00:04:34,820
that we've seen in TLS and SSL came from

77
00:04:31,789 --> 00:04:37,219
the release of negotiation clean

78
00:04:34,820 --> 00:04:40,669
negotiation the first messages were

79
00:04:37,220 --> 00:04:43,060
exchanged there were not not only all

80
00:04:40,669 --> 00:04:45,969
the content was encrypted and then

81
00:04:43,060 --> 00:04:48,979
encrypted channel has to be established

82
00:04:45,970 --> 00:04:52,610
have to be created but that's in Isaiah

83
00:04:48,979 --> 00:04:55,639
point just to put food on the door and

84
00:04:52,610 --> 00:04:57,860
then to walk in so this has told me that

85
00:04:55,639 --> 00:05:00,470
there are many implications to this

86
00:04:57,860 --> 00:05:02,630
partial encryption so by the time we

87
00:05:00,470 --> 00:05:04,639
consider to introduce cryptography in

88
00:05:02,630 --> 00:05:07,400
our solutions we have to take into

89
00:05:04,639 --> 00:05:11,349
account this type of small things

90
00:05:07,400 --> 00:05:18,609
obviously we will not be indexing

91
00:05:11,349 --> 00:05:22,150
websites with HTTPS

92
00:05:18,610 --> 00:05:26,080
so I want to give you examples of bad

93
00:05:22,150 --> 00:05:29,200
use especially the mixed one so this was

94
00:05:26,080 --> 00:05:32,260
a typical before as a self consumes a

95
00:05:29,200 --> 00:05:34,900
lot it's everything in Java yes by the

96
00:05:32,260 --> 00:05:37,500
consumes a lot well that's your problem

97
00:05:34,900 --> 00:05:41,650
that's the problem my everything is

98
00:05:37,500 --> 00:05:45,220
unsecured credentials are not secure and

99
00:05:41,650 --> 00:05:47,530
the result and experiences that we no

100
00:05:45,220 --> 00:05:50,830
longer trust anyone and now we put

101
00:05:47,530 --> 00:05:54,039
everything under HTTPS actually working

102
00:05:50,830 --> 00:05:58,180
with this hybrid mode forces you not to

103
00:05:54,040 --> 00:06:00,730
use HTTP solutions and sometimes the

104
00:05:58,180 --> 00:06:03,580
service is published in both HTTP and

105
00:06:00,730 --> 00:06:06,640
HTTPS so therefore you can be a victim

106
00:06:03,580 --> 00:06:10,240
of HSL is stripping or someone may

107
00:06:06,640 --> 00:06:12,849
redirect a link with no encryption you

108
00:06:10,240 --> 00:06:15,160
are exposing your cookies through

109
00:06:12,850 --> 00:06:22,680
everything and then going into more

110
00:06:15,160 --> 00:06:26,170
specifics so we may find iis 7.0 and 7.5

111
00:06:22,680 --> 00:06:29,550
so some of these protocols were always

112
00:06:26,170 --> 00:06:32,020
through code 21 and that's why the

113
00:06:29,550 --> 00:06:34,330
negotiation of a start SSL start you

114
00:06:32,020 --> 00:06:36,609
start off in plain and say hello I'm the

115
00:06:34,330 --> 00:06:41,590
server and I want to start talking in

116
00:06:36,610 --> 00:06:45,040
and start SSL and then the negotiation

117
00:06:41,590 --> 00:06:47,859
TT LS starts Sunday near end up seeing

118
00:06:45,040 --> 00:06:50,740
encrypted communication and then you

119
00:06:47,860 --> 00:06:53,490
could set a semicolon and then a list of

120
00:06:50,740 --> 00:06:57,460
commands that will be executed by the

121
00:06:53,490 --> 00:07:02,440
time the session will be encrypted so

122
00:06:57,460 --> 00:07:04,750
skinny RTP so many people have deployed

123
00:07:02,440 --> 00:07:06,670
the last generation phones and say

124
00:07:04,750 --> 00:07:12,850
everything is encrypted yes but the old

125
00:07:06,670 --> 00:07:16,450
phones are not encrypted but when if no

126
00:07:12,850 --> 00:07:18,790
phone talks to a new phone it has to do

127
00:07:16,450 --> 00:07:21,969
its own grade and goes into plane and

128
00:07:18,790 --> 00:07:23,849
then my SQL well they were the winners

129
00:07:21,970 --> 00:07:27,389
the big ones and say

130
00:07:23,849 --> 00:07:29,339
start off with SSL oh well there is a

131
00:07:27,389 --> 00:07:32,009
package here that I just want a stands

132
00:07:29,339 --> 00:07:34,349
okay well forget about it

133
00:07:32,009 --> 00:07:39,089
well the way to mitigate it at that time

134
00:07:34,349 --> 00:07:40,979
was to have certificates but if they do

135
00:07:39,089 --> 00:07:45,539
not validate that you get the

136
00:07:40,979 --> 00:07:47,188
certificate okay go free it's okay so

137
00:07:45,539 --> 00:07:50,279
the name is background I think it is

138
00:07:47,189 --> 00:07:54,929
okay so the next question is who and

139
00:07:50,279 --> 00:07:59,879
what we want to work what we want to

140
00:07:54,929 --> 00:08:02,958
protect where it comes from whom it goes

141
00:07:59,879 --> 00:08:06,119
to confidentiality integrity

142
00:08:02,959 --> 00:08:08,339
authenticity so we are working on

143
00:08:06,119 --> 00:08:13,459
confidentiality and integrity and I

144
00:08:08,339 --> 00:08:16,219
added authenticity so that would be like

145
00:08:13,459 --> 00:08:19,379
you keep it for yourself

146
00:08:16,219 --> 00:08:23,089
so cryptography helped us protect these

147
00:08:19,379 --> 00:08:27,869
three objectives however we should

148
00:08:23,089 --> 00:08:29,789
sometimes at the standard we mix

149
00:08:27,869 --> 00:08:32,639
algorithms with protocols algorithms

150
00:08:29,789 --> 00:08:35,848
help us build protocol but they will not

151
00:08:32,639 --> 00:08:38,810
resolve our knife and when I say life I

152
00:08:35,849 --> 00:08:38,810
mean

153
00:08:40,350 --> 00:08:47,460
and you say does cryptographic summary

154
00:08:44,390 --> 00:08:50,250
but they really make sense whenever you

155
00:08:47,460 --> 00:08:53,220
frame them and there is set of strict

156
00:08:50,250 --> 00:08:55,890
rules work all the stakeholders and all

157
00:08:53,220 --> 00:08:58,860
the possible is status um well determine

158
00:08:55,890 --> 00:09:03,060
the best ones in cryptography the ideal

159
00:08:58,860 --> 00:09:05,250
moment the best moment is when to to a

160
00:09:03,060 --> 00:09:07,439
certain force in protocol that means

161
00:09:05,250 --> 00:09:09,600
that no matter what you do the protocol

162
00:09:07,440 --> 00:09:12,180
will push with force everything to work

163
00:09:09,600 --> 00:09:14,190
these are the idea protocols however we

164
00:09:12,180 --> 00:09:15,780
cannot use them all the time but it

165
00:09:14,190 --> 00:09:17,340
would be ideal

166
00:09:15,780 --> 00:09:20,160
they have nothing to do with flag

167
00:09:17,340 --> 00:09:22,050
protocols establish rules and that's a

168
00:09:20,160 --> 00:09:23,670
problem when you start cryptography but

169
00:09:22,050 --> 00:09:26,219
when you say well the packet is whatever

170
00:09:23,670 --> 00:09:29,280
it's the shape of them now in nobody

171
00:09:26,220 --> 00:09:34,290
improves okay and then when you think

172
00:09:29,280 --> 00:09:35,790
about who and what so it is very

173
00:09:34,290 --> 00:09:38,430
important that you take away these

174
00:09:35,790 --> 00:09:42,030
principle as a message they will help

175
00:09:38,430 --> 00:09:44,040
you resolve many doubts it is the Horten

176
00:09:42,030 --> 00:09:47,160
principle this is authenticate what is

177
00:09:44,040 --> 00:09:50,280
being matched nobody's being said often

178
00:09:47,160 --> 00:09:53,579
we don't encrypt the context the meaning

179
00:09:50,280 --> 00:09:54,980
where are they whom they go to the time

180
00:09:53,580 --> 00:09:59,160
of the day

181
00:09:54,980 --> 00:10:01,850
feasibility of them and now I added that

182
00:09:59,160 --> 00:10:01,850
captain

183
00:10:03,690 --> 00:10:12,000
to say then when I will start talking

184
00:10:07,710 --> 00:10:14,370
about Alice and Bob that's the only way

185
00:10:12,000 --> 00:10:17,760
to explain cryptography just to create

186
00:10:14,370 --> 00:10:21,000
some I don't know expectations again

187
00:10:17,760 --> 00:10:24,350
with some interest Bob but we take for

188
00:10:21,000 --> 00:10:32,000
granted that Bob is the boyfriend and

189
00:10:24,350 --> 00:10:39,150
Charles is man who is after Alice a

190
00:10:32,000 --> 00:10:43,800
typical error here well in electronic

191
00:10:39,150 --> 00:10:47,790
banking before and now what we'll have

192
00:10:43,800 --> 00:10:50,990
the customer the front service and the

193
00:10:47,790 --> 00:10:55,829
NT back-end so clients authenticate

194
00:10:50,990 --> 00:10:57,420
sending the privileges or credentials so

195
00:10:55,830 --> 00:10:59,760
we protect the channel up and sit front

196
00:10:57,420 --> 00:11:01,469
end and then we do a forward off their

197
00:10:59,760 --> 00:11:04,110
credentials are have been received and

198
00:11:01,470 --> 00:11:06,210
the question is well the first fire line

199
00:11:04,110 --> 00:11:09,510
what is that when the front ends and YT

200
00:11:06,210 --> 00:11:12,780
credentials well and now what because

201
00:11:09,510 --> 00:11:15,330
they they make them more interesting

202
00:11:12,780 --> 00:11:18,209
they can see the passwords of people

203
00:11:15,330 --> 00:11:22,650
that is not necessary we call it wrong

204
00:11:18,210 --> 00:11:24,990
we just put the encryption layer in the

205
00:11:22,650 --> 00:11:27,959
wrong place we will have to elevate it

206
00:11:24,990 --> 00:11:30,720
we we have to lift it where Alice is the

207
00:11:27,960 --> 00:11:36,770
client and Bob is the mainframe server

208
00:11:30,720 --> 00:11:41,130
so you get a front end playing

209
00:11:36,770 --> 00:11:43,980
authentication with admitting that this

210
00:11:41,130 --> 00:11:47,339
is a mistake and email that's another

211
00:11:43,980 --> 00:11:50,580
example when many people say well email

212
00:11:47,339 --> 00:11:54,920
is encrypted through SSL but that is

213
00:11:50,580 --> 00:11:59,610
seen by the email server and not the

214
00:11:54,920 --> 00:12:02,300
recipient this is the basic concept that

215
00:11:59,610 --> 00:12:05,310
everyone understand but it is confusing

216
00:12:02,300 --> 00:12:10,109
so do you have that amazing

217
00:12:05,310 --> 00:12:18,869
yes we is running under an ice system oh

218
00:12:10,110 --> 00:12:23,670
my god pls sm2 this is the Horton

219
00:12:18,870 --> 00:12:28,230
principle poorly implemented taking

220
00:12:23,670 --> 00:12:30,899
account the advantage that SSL part of

221
00:12:28,230 --> 00:12:33,389
the message was not authenticated well

222
00:12:30,899 --> 00:12:35,730
I've been here for 11 minutes and still

223
00:12:33,389 --> 00:12:42,629
haven't told you anything interesting

224
00:12:35,730 --> 00:12:46,920
okay well how well so to not try to be

225
00:12:42,629 --> 00:12:48,509
creative to not be too creative unless

226
00:12:46,920 --> 00:12:53,610
you're sure of what you are doing

227
00:12:48,509 --> 00:12:58,139
cryptography is very complex minor poor

228
00:12:53,610 --> 00:13:01,170
decisions are significantly amplified

229
00:12:58,139 --> 00:13:04,980
because data is some protector so the

230
00:13:01,170 --> 00:13:06,870
more to simplify it the more positive it

231
00:13:04,980 --> 00:13:09,329
is for you simplifying it for you

232
00:13:06,870 --> 00:13:11,040
meaning that you understand it not only

233
00:13:09,329 --> 00:13:16,410
the attacker because the attacker may be

234
00:13:11,040 --> 00:13:19,019
a smarter than you therefore so be aware

235
00:13:16,410 --> 00:13:24,509
that all the participants including the

236
00:13:19,019 --> 00:13:29,339
plaintext the choice of a poor key of

237
00:13:24,509 --> 00:13:31,980
poor plaintext may disclose or may make

238
00:13:29,339 --> 00:13:34,470
you guess the keys that are being used

239
00:13:31,980 --> 00:13:36,809
all the decisions have to be well

240
00:13:34,470 --> 00:13:39,329
thought off through performance

241
00:13:36,809 --> 00:13:41,639
parameter security parameters and we

242
00:13:39,329 --> 00:13:44,219
also want to assess and study all the

243
00:13:41,639 --> 00:13:46,889
weaknesses of the algorithm this talk is

244
00:13:44,220 --> 00:13:50,309
intended to be kind of an exercise to

245
00:13:46,889 --> 00:13:54,779
help you understand exactly the work

246
00:13:50,309 --> 00:13:58,829
that we are doing and then I tell you

247
00:13:54,779 --> 00:14:01,860
what to do for each algorithm I will

248
00:13:58,829 --> 00:14:04,349
give you an example of IPSec it's

249
00:14:01,860 --> 00:14:06,990
something that we all like a lot is

250
00:14:04,350 --> 00:14:09,360
wonderful but from the viewpoint of

251
00:14:06,990 --> 00:14:10,390
cryptography it's a disaster it is

252
00:14:09,360 --> 00:14:14,950
highly calm

253
00:14:10,390 --> 00:14:19,850
it has very many modes of functioning

254
00:14:14,950 --> 00:14:24,080
you may have the channel encrypted but

255
00:14:19,850 --> 00:14:25,580
the message is not authenticated you may

256
00:14:24,080 --> 00:14:27,980
do cut and paste

257
00:14:25,580 --> 00:14:31,280
then you introduce authentication

258
00:14:27,980 --> 00:14:34,940
headers everything breaks then you end

259
00:14:31,280 --> 00:14:37,490
up with like really really crazy if you

260
00:14:34,940 --> 00:14:40,310
go and tell me that IPSec is great

261
00:14:37,490 --> 00:14:46,550
that's because you've never worked with

262
00:14:40,310 --> 00:14:49,729
it so actually there is a paper

263
00:14:46,550 --> 00:14:53,240
published about how difficult a piece a

264
00:14:49,730 --> 00:14:55,460
case ok now let us go into what is

265
00:14:53,240 --> 00:14:59,930
actually interesting sewed random

266
00:14:55,460 --> 00:15:03,320
numbers it is one of the most misleading

267
00:14:59,930 --> 00:15:07,400
things it is not about good luck finding

268
00:15:03,320 --> 00:15:08,990
something random is very difficult and

269
00:15:07,400 --> 00:15:11,030
you really need to be lucky phrase

270
00:15:08,990 --> 00:15:13,400
random numbers are the basis of

271
00:15:11,030 --> 00:15:16,040
cryptography all the work that we will

272
00:15:13,400 --> 00:15:18,050
do on them sooner or later we will have

273
00:15:16,040 --> 00:15:20,719
random numbers often they are

274
00:15:18,050 --> 00:15:24,770
underestimated and there are different

275
00:15:20,720 --> 00:15:26,780
type of random numbers are created so we

276
00:15:24,770 --> 00:15:29,120
have this pseudo random numbers these

277
00:15:26,780 --> 00:15:31,400
are often the ones that the ones that we

278
00:15:29,120 --> 00:15:36,800
work decide like the nonsense numbers

279
00:15:31,400 --> 00:15:39,910
there are a set of numbers that are but

280
00:15:36,800 --> 00:15:39,910
actually more about that

281
00:15:42,829 --> 00:15:48,649
well the problem is that we cannot

282
00:15:44,569 --> 00:15:50,868
reduce shall assist so that's why so

283
00:15:48,649 --> 00:15:52,339
this would be quite random this is an

284
00:15:50,869 --> 00:15:55,249
example that I wanted to share with you

285
00:15:52,339 --> 00:15:57,319
so these random numbers are very slow to

286
00:15:55,249 --> 00:15:58,910
achieve you don't expect them to be

287
00:15:57,319 --> 00:16:01,519
there when you get them to a surprised

288
00:15:58,910 --> 00:16:04,429
and they are not as frontal - they look

289
00:16:01,519 --> 00:16:07,899
and actually to generate them often

290
00:16:04,429 --> 00:16:11,779
reduce sources from physical world

291
00:16:07,899 --> 00:16:13,670
this is deterministic and not good - are

292
00:16:11,779 --> 00:16:15,799
generating random numbers and you have

293
00:16:13,670 --> 00:16:20,809
to drink from many different sources but

294
00:16:15,799 --> 00:16:23,569
some sources look random and even from

295
00:16:20,809 --> 00:16:25,459
them they well you can extract patterns

296
00:16:23,569 --> 00:16:28,549
and sometimes they look like too random

297
00:16:25,459 --> 00:16:30,920
that's negative no salad whenever you

298
00:16:28,549 --> 00:16:37,429
need random numbers try to keep things

299
00:16:30,920 --> 00:16:39,618
simple really high anyway there's a

300
00:16:37,429 --> 00:16:43,269
source of random numbers which is quite

301
00:16:39,619 --> 00:16:43,269
powerful but it's very slow

302
00:16:44,200 --> 00:16:53,130
random numbers come from a source like

303
00:16:49,360 --> 00:16:56,860
this to generate with hash algorithm

304
00:16:53,130 --> 00:17:01,050
without ever going to the end of our

305
00:16:56,860 --> 00:17:01,050
algorithm producing numbers all the time

306
00:17:02,940 --> 00:17:10,290
us we

307
00:17:06,150 --> 00:17:12,120
feed the seeds back into the source we

308
00:17:10,290 --> 00:17:17,159
keep improving the randomness if you

309
00:17:12,119 --> 00:17:19,199
know what I mean then random numbers are

310
00:17:17,160 --> 00:17:21,740
usually produced using different

311
00:17:19,200 --> 00:17:28,290
algorithms these are the most important

312
00:17:21,740 --> 00:17:33,630
examples really JavaScript I saw this

313
00:17:28,290 --> 00:17:36,050
once the CPU was bleeding I can assure

314
00:17:33,630 --> 00:17:36,050
you

315
00:17:39,240 --> 00:17:43,720
sometimes you're in a hurry you've been

316
00:17:41,650 --> 00:17:47,730
told that the harsh random doesn't work

317
00:17:43,720 --> 00:17:47,730
so I don't know this and execute it

318
00:17:51,019 --> 00:17:55,789
and then they said sorry numbers

319
00:17:58,550 --> 00:18:07,220
we have get good time of day load of the

320
00:18:02,030 --> 00:18:09,320
CPU you're talking about aficionados

321
00:18:07,220 --> 00:18:11,810
you're talking about those people that

322
00:18:09,320 --> 00:18:17,300
don't really know about cryptography but

323
00:18:11,810 --> 00:18:21,080
specialists also make mistakes in Debian

324
00:18:17,300 --> 00:18:22,970
lots of random keys were deleted because

325
00:18:21,080 --> 00:18:25,760
after all the user bases were rather

326
00:18:22,970 --> 00:18:30,730
limited and then a study was published

327
00:18:25,760 --> 00:18:30,730
on public keys in the Internet

328
00:18:35,230 --> 00:18:38,830
and I'm talking about

329
00:18:39,160 --> 00:18:44,600
devices that can generate random numbers

330
00:18:42,230 --> 00:18:48,860
and yet I'm not able to generate

331
00:18:44,600 --> 00:18:52,909
properly solid keys this has become

332
00:18:48,860 --> 00:18:55,760
green now here we can see this algorithm

333
00:18:52,910 --> 00:18:56,510
which looks really nice it's all over

334
00:18:55,760 --> 00:18:58,730
the Internet

335
00:18:56,510 --> 00:19:02,240
people used it a lot because it was

336
00:18:58,730 --> 00:19:05,600
invented by IBM the bad thing is that

337
00:19:02,240 --> 00:19:09,860
when when you when you do a 3d a 3d

338
00:19:05,600 --> 00:19:15,230
projection for this you see all the

339
00:19:09,860 --> 00:19:17,959
planes for that function even Donald

340
00:19:15,230 --> 00:19:20,540
Knuth said that this is one of the most

341
00:19:17,960 --> 00:19:25,340
malignant algorithms ever conceived for

342
00:19:20,540 --> 00:19:27,230
random numbers if we took all the papers

343
00:19:25,340 --> 00:19:30,379
based on this algorithm and they were

344
00:19:27,230 --> 00:19:32,240
discarded we will be talking about half

345
00:19:30,380 --> 00:19:33,530
of the papers that would you you would

346
00:19:32,240 --> 00:19:40,340
see published in the Internet industry

347
00:19:33,530 --> 00:19:43,129
in the 80s and the 90s bias is a bad

348
00:19:40,340 --> 00:19:46,850
thing when we have a function to return

349
00:19:43,130 --> 00:19:50,770
something big we apply something like

350
00:19:46,850 --> 00:19:50,770
this only relatively comfortable

351
00:19:51,890 --> 00:19:57,230
this is when you're trying to generate

352
00:19:53,840 --> 00:20:00,139
numbers within a range but when you want

353
00:19:57,230 --> 00:20:06,890
to choose with certain elements if you

354
00:20:00,140 --> 00:20:11,090
apply this you favor these digits at the

355
00:20:06,890 --> 00:20:12,650
expense of these other ones try to use

356
00:20:11,090 --> 00:20:13,070
an algorithm which is similar to this

357
00:20:12,650 --> 00:20:15,680
one

358
00:20:13,070 --> 00:20:18,860
there's discards any number which is

359
00:20:15,680 --> 00:20:21,170
above the threshold level I'm moving

360
00:20:18,860 --> 00:20:28,100
very fast these are algorithms of secret

361
00:20:21,170 --> 00:20:34,880
keys we have blocks coding algorithms

362
00:20:28,100 --> 00:20:36,740
are usually based in blocks we have GCM

363
00:20:34,880 --> 00:20:41,120
which is currently the most fashionable

364
00:20:36,740 --> 00:20:46,630
one and yet this is a very good

365
00:20:41,120 --> 00:20:51,770
algorithm but the hash is somehow weak

366
00:20:46,630 --> 00:20:54,080
this period is not so long but even the

367
00:20:51,770 --> 00:20:58,639
algorithm that I'm using that you may be

368
00:20:54,080 --> 00:21:00,260
using now that could be very modern very

369
00:20:58,640 --> 00:21:02,450
recent you really need to pay attention

370
00:21:00,260 --> 00:21:08,090
to the weight operates never operate

371
00:21:02,450 --> 00:21:10,390
with blocks under 64 bytes take that

372
00:21:08,090 --> 00:21:10,389
into account

373
00:21:13,029 --> 00:21:27,069
these are for typical operation modes

374
00:21:16,749 --> 00:21:28,839
for blocks ECB there's the first one you

375
00:21:27,069 --> 00:21:30,729
think that one doesn't make any sense

376
00:21:28,839 --> 00:21:33,339
you take one block you code it you take

377
00:21:30,729 --> 00:21:35,889
another block you coded CBC which has

378
00:21:33,339 --> 00:21:40,869
become rather fashionable recently many

379
00:21:35,889 --> 00:21:44,559
attacks are related to this mode here we

380
00:21:40,869 --> 00:21:48,819
are propagating the entropy from one

381
00:21:44,559 --> 00:21:52,869
block to another doing a show on the

382
00:21:48,819 --> 00:21:57,039
plaintext uncoding then we have P CBC

383
00:21:52,869 --> 00:21:59,198
which is really odd so we make things

384
00:21:57,039 --> 00:22:00,969
complicated so complicated that the

385
00:21:59,199 --> 00:22:04,089
certain things cannot happen well the

386
00:22:00,969 --> 00:22:06,759
result is P CBC basically and then ofb

387
00:22:04,089 --> 00:22:08,829
which is really interesting because

388
00:22:06,759 --> 00:22:10,989
people go to Wikipedia and they say

389
00:22:08,829 --> 00:22:13,029
rubbish rubbish rubbish this has to be

390
00:22:10,989 --> 00:22:15,369
the good one I'm not saying it's the bad

391
00:22:13,029 --> 00:22:21,009
one but you really need to pay attention

392
00:22:15,369 --> 00:22:25,269
to what you do with it certain

393
00:22:21,009 --> 00:22:27,549
repetitions using a with B imply that

394
00:22:25,269 --> 00:22:32,799
you're not using things that you're not

395
00:22:27,549 --> 00:22:34,349
doing things properly block encryption

396
00:22:32,799 --> 00:22:40,829
this way believes you and protected

397
00:22:34,349 --> 00:22:40,829
where does this happen in our c4

398
00:22:44,549 --> 00:22:50,668
here I have included this image I try to

399
00:22:48,749 --> 00:22:54,839
use another one but I didn't like it I

400
00:22:50,669 --> 00:22:58,649
don't know what I mean since this this

401
00:22:54,839 --> 00:23:02,690
has been coded I thought I had the green

402
00:22:58,649 --> 00:23:05,820
light to do whatever I wanted but anyway

403
00:23:02,690 --> 00:23:09,450
when we get into this bear in mind that

404
00:23:05,820 --> 00:23:10,759
in webrinoa fear repeating in an Eevee

405
00:23:09,450 --> 00:23:14,399
is death

406
00:23:10,759 --> 00:23:16,739
Eevee's this is a common problem people

407
00:23:14,399 --> 00:23:18,508
see if there is a parameter didn't have

408
00:23:16,739 --> 00:23:21,200
any idea and they wonder what is this

409
00:23:18,509 --> 00:23:21,200
Eevee about

410
00:23:26,669 --> 00:23:33,080
I have nothing in my database anyway

411
00:23:29,059 --> 00:23:33,080
this simply has been hacked

412
00:23:37,120 --> 00:23:42,149
the thing is people use zeros everywhere

413
00:23:42,900 --> 00:23:51,490
in CFP we would see this this is all

414
00:23:48,250 --> 00:23:58,080
serious but plain text this is what we

415
00:23:51,490 --> 00:24:01,990
get we encrypt this for a text we know

416
00:23:58,080 --> 00:24:04,179
and we see the outcome after that with

417
00:24:01,990 --> 00:24:05,830
that short you solve the equation you

418
00:24:04,180 --> 00:24:11,200
will see the fluff you will see the flat

419
00:24:05,830 --> 00:24:14,409
file in fact is attacked was targeting

420
00:24:11,200 --> 00:24:17,100
office 2003 this is a pointer out of

421
00:24:14,410 --> 00:24:17,100
battery of what

422
00:24:19,610 --> 00:24:26,240
in 2003 this is what happens when

423
00:24:24,140 --> 00:24:29,080
recording the file you will generate

424
00:24:26,240 --> 00:24:29,080
different versions

425
00:24:33,420 --> 00:24:38,670
you could do you could extract part of

426
00:24:37,200 --> 00:24:44,790
the document path of the document

427
00:24:38,670 --> 00:24:50,220
without encryption in my file we know

428
00:24:44,790 --> 00:24:56,460
about this the Beast attack is a little

429
00:24:50,220 --> 00:25:00,090
bit more complicated it's easy to insert

430
00:24:56,460 --> 00:25:06,060
blocks using this rather than affecting

431
00:25:00,090 --> 00:25:10,760
as a Thelma's or cbc what he tls/ssl

432
00:25:06,060 --> 00:25:12,990
will affect improper usage of cbc

433
00:25:10,760 --> 00:25:15,720
because you let the attacker use their

434
00:25:12,990 --> 00:25:20,610
own plaintext injecting in oracle now

435
00:25:15,720 --> 00:25:21,870
will allow the attacker to find out what

436
00:25:20,610 --> 00:25:24,360
was happening don't get into that

437
00:25:21,870 --> 00:25:27,419
because it's a it's a big mess is a bad

438
00:25:24,360 --> 00:25:29,729
idea letting the attacker get control of

439
00:25:27,420 --> 00:25:33,090
flat text files ok that's always a bad

440
00:25:29,730 --> 00:25:35,070
idea you cannot always provide that but

441
00:25:33,090 --> 00:25:38,580
you have to make life as difficult as

442
00:25:35,070 --> 00:25:42,689
possible so if we don't want to let the

443
00:25:38,580 --> 00:25:44,639
attacker control the flat text file we

444
00:25:42,690 --> 00:25:49,800
also don't want them to have control of

445
00:25:44,640 --> 00:25:54,260
the key we should wear a special suit

446
00:25:49,800 --> 00:25:54,260
when generating heath believe me

447
00:25:54,750 --> 00:26:00,000
keys must be random and not generated by

448
00:25:57,960 --> 00:26:05,640
anything else and not on a machine there

449
00:26:00,000 --> 00:26:11,250
are algorithms that have keys that are

450
00:26:05,640 --> 00:26:13,560
encrypted you apply them and then you

451
00:26:11,250 --> 00:26:18,660
get the encryption you arrive the

452
00:26:13,560 --> 00:26:20,580
encryption some key with some keys you

453
00:26:18,660 --> 00:26:26,600
have partial encryption as well in

454
00:26:20,580 --> 00:26:29,669
Blowfish you have something like this

455
00:26:26,600 --> 00:26:34,709
some keys can be inferred based on the

456
00:26:29,670 --> 00:26:39,140
encrypted text and you should never

457
00:26:34,710 --> 00:26:39,140
apply any type of limitations to keys

458
00:26:42,300 --> 00:26:50,430
parity bits moving 256 bits much easier

459
00:26:46,290 --> 00:26:54,389
to break into so after talking about

460
00:26:50,430 --> 00:26:58,010
encryption into symmetrical part let me

461
00:26:54,390 --> 00:26:58,010
now talk about hash functions

462
00:26:59,530 --> 00:27:05,260
this is something we use quite often and

463
00:27:01,809 --> 00:27:08,799
it's quite useful for us this returns a

464
00:27:05,260 --> 00:27:11,620
number which is huge

465
00:27:08,799 --> 00:27:14,320
in theory it is impossible to find flat

466
00:27:11,620 --> 00:27:16,299
text coming from that figure from that

467
00:27:14,320 --> 00:27:19,120
number that gives you a cryptographic

468
00:27:16,299 --> 00:27:21,908
summary or a value which is unique for

469
00:27:19,120 --> 00:27:24,580
that text it's like an ID like a UID for

470
00:27:21,909 --> 00:27:26,260
that text obviously CRC is not a hash

471
00:27:24,580 --> 00:27:29,590
function I've seen this in different

472
00:27:26,260 --> 00:27:32,980
projects it is not a hash function hash

473
00:27:29,590 --> 00:27:35,408
functions by themselves don't generate

474
00:27:32,980 --> 00:27:38,190
signatures or anything like that they

475
00:27:35,409 --> 00:27:41,169
generated text identifier a summary a

476
00:27:38,190 --> 00:27:42,730
protocol must always be in place they

477
00:27:41,169 --> 00:27:45,970
can be used in many different ways to

478
00:27:42,730 --> 00:27:48,280
write this one this guy has to encrypted

479
00:27:45,970 --> 00:27:53,020
everything using this h1 how do i decode

480
00:27:48,280 --> 00:27:57,190
it now well you just laugh here we have

481
00:27:53,020 --> 00:28:00,760
a typical bad approach to hash

482
00:27:57,190 --> 00:28:03,400
algorithms this is quite common password

483
00:28:00,760 --> 00:28:07,530
hash the hash for the password is what

484
00:28:03,400 --> 00:28:07,530
you see here well rubbish again

485
00:28:10,540 --> 00:28:14,980
identical passwords have the same hash

486
00:28:18,200 --> 00:28:24,139
and you can do a calculation or certain

487
00:28:21,830 --> 00:28:28,249
things and so on and so forth

488
00:28:24,139 --> 00:28:30,469
so whenever we encounter this we

489
00:28:28,249 --> 00:28:32,480
recommend that you use specialized

490
00:28:30,470 --> 00:28:36,590
algorithms for the generation of hashes

491
00:28:32,480 --> 00:28:38,799
to store in databases let me create the

492
00:28:36,590 --> 00:28:38,799
script

493
00:28:39,730 --> 00:28:49,429
PDK f2 and if you insist in using hashes

494
00:28:46,489 --> 00:28:52,749
it is highly advisable to do this moving

495
00:28:49,429 --> 00:28:52,749
around everywhere

496
00:28:58,279 --> 00:29:04,279
another important question what is the

497
00:29:01,399 --> 00:29:07,609
difference between Mac and hash Mac

498
00:29:04,279 --> 00:29:12,820
means message authentication code it

499
00:29:07,609 --> 00:29:16,689
introduces a key for authentication a

500
00:29:12,820 --> 00:29:21,559
hash by itself can be calculated the Mac

501
00:29:16,690 --> 00:29:22,879
forces you if you know they to get hold

502
00:29:21,559 --> 00:29:25,190
of someone that knows the key it

503
00:29:22,879 --> 00:29:28,998
protects their messages Mac algorithms

504
00:29:25,190 --> 00:29:32,869
are used to protect but Mac functions

505
00:29:28,999 --> 00:29:34,519
are not an answer to any problem okay it

506
00:29:32,869 --> 00:29:36,408
is quite common to see that there is Mac

507
00:29:34,519 --> 00:29:39,769
applied to message but not know Mac

508
00:29:36,409 --> 00:29:42,139
apply to the meaning of a message when

509
00:29:39,769 --> 00:29:46,009
you work with Mac's with hashes remember

510
00:29:42,139 --> 00:29:49,668
this you need to decrypt the meaning not

511
00:29:46,009 --> 00:29:52,129
the message otherwise you have a we will

512
00:29:49,669 --> 00:29:54,169
have repetition repetitive attacks you

513
00:29:52,129 --> 00:29:58,399
will have seizures who have convulsions

514
00:29:54,169 --> 00:30:00,409
and you must never share the key used

515
00:29:58,399 --> 00:30:02,869
for Mac with the key use for dick for

516
00:30:00,409 --> 00:30:04,999
encryption because you're putting all of

517
00:30:02,869 --> 00:30:09,009
your eggs in the same basket so to say

518
00:30:04,999 --> 00:30:09,009
and that is not a good thing believe me

519
00:30:15,520 --> 00:30:22,120
another bond approach for an algorithm

520
00:30:20,130 --> 00:30:26,980
well the same goes for this

521
00:30:22,120 --> 00:30:29,080
air-conditioning unit CBC with a Mac as

522
00:30:26,980 --> 00:30:32,830
I said the problem is block injection

523
00:30:29,080 --> 00:30:34,629
with CBC a fundamental principle with

524
00:30:32,830 --> 00:30:37,060
Mac is that they cannot inject it cannot

525
00:30:34,630 --> 00:30:40,330
modify they cannot alter if you can

526
00:30:37,060 --> 00:30:43,240
inject blocks bad news and then CBC Mac

527
00:30:40,330 --> 00:30:45,850
is said crypting everything with CBC and

528
00:30:43,240 --> 00:30:52,480
letting leaving the last Locker side a

529
00:30:45,850 --> 00:30:54,310
suck verification code when you use a

530
00:30:52,480 --> 00:30:57,250
Mac you need to ensure that the

531
00:30:54,310 --> 00:31:03,389
algorithm takes those things into

532
00:30:57,250 --> 00:31:06,950
account this is my friend Mac

533
00:31:03,389 --> 00:31:09,208
this is a picture made by my dolls

534
00:31:06,950 --> 00:31:12,329
McDonald's and Coca Cola it feeds on

535
00:31:09,209 --> 00:31:15,299
coca-cola and the next question is where

536
00:31:12,329 --> 00:31:18,989
we put the Mack some people say out of

537
00:31:15,299 --> 00:31:21,179
the encryption applying Mac on the

538
00:31:18,989 --> 00:31:23,309
encryption some people say put Mac on

539
00:31:21,179 --> 00:31:25,259
the data and then encrypt everything and

540
00:31:23,309 --> 00:31:27,389
some people go crazy and say take the

541
00:31:25,259 --> 00:31:30,899
flat text file and encrypt it and then

542
00:31:27,389 --> 00:31:33,928
do Mac on the flat text file this is

543
00:31:30,899 --> 00:31:36,678
crazy it doesn't do anything useful it

544
00:31:33,929 --> 00:31:39,329
just gives you information on the text

545
00:31:36,679 --> 00:31:43,009
I'm not sure has anything positive and

546
00:31:39,329 --> 00:31:46,678
this one has a benefit when encrypting

547
00:31:43,009 --> 00:31:48,539
when doing Mac on the encryption in

548
00:31:46,679 --> 00:31:51,649
theory we will not be decrypting things

549
00:31:48,539 --> 00:31:51,649
that don't make any sense

550
00:31:53,490 --> 00:31:57,720
so the flexibility of an algorithm for

551
00:31:56,159 --> 00:31:58,770
an encryption algorithm is something to

552
00:31:57,720 --> 00:32:01,140
take into account

553
00:31:58,770 --> 00:32:03,770
Magnusson gives us information on the

554
00:32:01,140 --> 00:32:03,770
contents

555
00:32:07,180 --> 00:32:12,490
this is this means that we can we

556
00:32:10,750 --> 00:32:13,810
encrypt with our thinking and we sign

557
00:32:12,490 --> 00:32:15,700
with our encrypting with all the

558
00:32:13,810 --> 00:32:17,530
corresponding consequences and then

559
00:32:15,700 --> 00:32:19,320
there's the other possibility some

560
00:32:17,530 --> 00:32:22,240
people say that this is much better

561
00:32:19,320 --> 00:32:26,950
although this has the problem that this

562
00:32:22,240 --> 00:32:28,330
plain text can be forwarded here we

563
00:32:26,950 --> 00:32:31,870
don't have any information about the

564
00:32:28,330 --> 00:32:34,149
text or its Mac the signature goes with

565
00:32:31,870 --> 00:32:38,409
the text without the encryption context

566
00:32:34,150 --> 00:32:40,840
so whoever can encrypt can verify that

567
00:32:38,410 --> 00:32:43,900
this encryption was not important and

568
00:32:40,840 --> 00:32:45,520
the message is pure and then we have an

569
00:32:43,900 --> 00:32:46,690
increase in the entropy of the message

570
00:32:45,520 --> 00:32:51,639
because it doesn't give any information

571
00:32:46,690 --> 00:32:55,300
about the contents obviously if you

572
00:32:51,640 --> 00:32:59,080
don't encrypt a context you can always

573
00:32:55,300 --> 00:33:03,370
do a forward public key algorithms well

574
00:32:59,080 --> 00:33:04,899
this is a mess you probably have seen

575
00:33:03,370 --> 00:33:08,620
that you are downloading something which

576
00:33:04,900 --> 00:33:11,800
is completely legitimate from a dodgy

577
00:33:08,620 --> 00:33:13,419
website you see a lot of buttons and you

578
00:33:11,800 --> 00:33:17,710
know that you are doing something wrong

579
00:33:13,420 --> 00:33:22,200
very wrong well this is public key

580
00:33:17,710 --> 00:33:24,600
cryptography you have to choose wisely

581
00:33:22,200 --> 00:33:27,040
whenever you want to use an algorithm

582
00:33:24,600 --> 00:33:28,959
understand its properties understand the

583
00:33:27,040 --> 00:33:32,080
implications of using it and understand

584
00:33:28,960 --> 00:33:36,150
its operation its function this is the

585
00:33:32,080 --> 00:33:36,149
best of the hammer for the cryptographer

586
00:33:36,880 --> 00:33:46,290
RSA for example is useful to sign and to

587
00:33:39,880 --> 00:33:50,530
encrypt on DSA ECDSA is good to design

588
00:33:46,290 --> 00:33:54,520
and if a Hellman is useful for an

589
00:33:50,530 --> 00:33:55,270
exchange of keys people do all sorts of

590
00:33:54,520 --> 00:33:58,660
funny stuff

591
00:33:55,270 --> 00:34:02,639
ok so beware of that beware of the

592
00:33:58,660 --> 00:34:05,050
limitations of the algorithm you choose

593
00:34:02,640 --> 00:34:07,500
if he killed man the other day I was

594
00:34:05,050 --> 00:34:09,759
having a chat with him for the client

595
00:34:07,500 --> 00:34:13,030
Toby if this was one of the safest

596
00:34:09,760 --> 00:34:15,210
algorism said this doesn't protect you

597
00:34:13,030 --> 00:34:18,870
against the man in the middle attack

598
00:34:15,210 --> 00:34:18,870
negotiating with both sides

599
00:34:22,090 --> 00:34:26,910
I'll probably get a gift at the end of

600
00:34:24,159 --> 00:34:29,739
the lecture now never mind

601
00:34:26,909 --> 00:34:31,359
here we see Paddington that lies to you

602
00:34:29,739 --> 00:34:33,669
that lossy use padding when you work

603
00:34:31,360 --> 00:34:37,360
with RSA always bear in mind that

604
00:34:33,670 --> 00:34:39,880
padding is essential this this is full

605
00:34:37,360 --> 00:34:41,500
of zeros but with RSA the suicide you

606
00:34:39,880 --> 00:34:44,230
need to have a safe padding in place

607
00:34:41,500 --> 00:34:46,630
which means that we must make the

608
00:34:44,230 --> 00:34:48,449
message unpredictable if I encrypt with

609
00:34:46,630 --> 00:34:52,360
the key with a public key from someone

610
00:34:48,449 --> 00:34:54,040
an attacker can encrypt the same message

611
00:34:52,360 --> 00:34:55,750
between zero and ten thousand you know

612
00:34:54,040 --> 00:34:57,730
what I'm talking about to do brute force

613
00:34:55,750 --> 00:35:01,510
and find out where I have encrypted

614
00:34:57,730 --> 00:35:06,850
padding is the key here you'll see that

615
00:35:01,510 --> 00:35:09,160
there are different algorithms this is

616
00:35:06,850 --> 00:35:11,440
what is recommended currently with

617
00:35:09,160 --> 00:35:13,299
public key it is always mathematical

618
00:35:11,440 --> 00:35:15,400
operations mathematical operations have

619
00:35:13,300 --> 00:35:20,710
their properties so when you work with

620
00:35:15,400 --> 00:35:23,050
these things think about it I'm talking

621
00:35:20,710 --> 00:35:28,450
about keys we must have a really good

622
00:35:23,050 --> 00:35:32,710
rng in order to ensure that this doesn't

623
00:35:28,450 --> 00:35:35,680
happen that we end up having keys whose

624
00:35:32,710 --> 00:35:40,720
factors are common because we will see

625
00:35:35,680 --> 00:35:43,839
what happened with Debian and with keys

626
00:35:40,720 --> 00:35:45,189
where P is much smaller than Hugh or

627
00:35:43,840 --> 00:35:47,380
them all they're the same

628
00:35:45,190 --> 00:35:50,560
the recommendation is that you delegate

629
00:35:47,380 --> 00:35:53,160
this on something you trust and not on

630
00:35:50,560 --> 00:35:56,590
the circle at home that can do anything

631
00:35:53,160 --> 00:35:58,810
and then you need to know the algorithm

632
00:35:56,590 --> 00:36:02,290
I could give you the example with RSA or

633
00:35:58,810 --> 00:36:05,279
any other examples I'm using RSA because

634
00:36:02,290 --> 00:36:05,279
what we all know it

635
00:36:06,560 --> 00:36:12,000
we have these keys a guy give us a

636
00:36:09,840 --> 00:36:14,730
lecture two hours talking about this

637
00:36:12,000 --> 00:36:17,100
there are many more attacks there are

638
00:36:14,730 --> 00:36:20,130
many more traps based on a bad approach

639
00:36:17,100 --> 00:36:24,060
to RSA this means that when we generate

640
00:36:20,130 --> 00:36:26,369
a key we may see that there are sister

641
00:36:24,060 --> 00:36:29,009
keys that allow us to encrypt and

642
00:36:26,369 --> 00:36:32,310
decrypt in the same way in this case it

643
00:36:29,010 --> 00:36:38,400
is easy to find these we need to find a

644
00:36:32,310 --> 00:36:42,150
common denominator for this four keys at

645
00:36:38,400 --> 00:36:46,170
the same time fully exchangeable beware

646
00:36:42,150 --> 00:36:48,930
alert we generate the PAQ we need to

647
00:36:46,170 --> 00:36:51,290
minimize this the MSF the MCM has to be

648
00:36:48,930 --> 00:36:51,290
very large

649
00:36:53,090 --> 00:36:56,260
so what I was saying

650
00:36:58,040 --> 00:37:03,810
no Radhika

651
00:37:00,900 --> 00:37:06,060
she was Guarnere the clevis you can feel

652
00:37:03,810 --> 00:37:09,810
we have to have a really good energy in

653
00:37:06,060 --> 00:37:12,870
place but approaches or bad usage were

654
00:37:09,810 --> 00:37:16,700
lots let me give you four examples less

655
00:37:12,870 --> 00:37:16,700
how much time is left early

656
00:37:17,480 --> 00:37:23,300
you mean 1 slide 2 slides two slides

657
00:37:23,480 --> 00:37:26,840
right never mind

658
00:37:27,440 --> 00:37:36,079
improper use a typical trap not using

659
00:37:32,000 --> 00:37:37,910
the same pair to sign and equipped with

660
00:37:36,079 --> 00:37:40,190
the electronic ID you found out there

661
00:37:37,910 --> 00:37:42,170
are two keys one to sign one to encrypt

662
00:37:40,190 --> 00:37:45,200
if you use the same key for everything

663
00:37:42,170 --> 00:37:53,050
you will end up signing for a flat

664
00:37:45,200 --> 00:37:53,049
textile that is not legitimate

665
00:37:55,260 --> 00:37:59,820
you will end up signing a ciphertext

666
00:37:57,780 --> 00:38:02,100
which will be decrypted or the other way

667
00:37:59,820 --> 00:38:03,900
around a hash will be decrypted and a

668
00:38:02,100 --> 00:38:06,980
signature which is not ours will be

669
00:38:03,900 --> 00:38:09,120
there and then encrypting the message

670
00:38:06,980 --> 00:38:14,840
well it depends on what you want to

671
00:38:09,120 --> 00:38:18,359
achieve if we have that multiplication

672
00:38:14,840 --> 00:38:22,290
we can do this we can do we can send

673
00:38:18,360 --> 00:38:26,490
everyone hash one has two and one into I

674
00:38:22,290 --> 00:38:28,950
sign them but when those are multiplied

675
00:38:26,490 --> 00:38:31,080
by each other we have a signature for

676
00:38:28,950 --> 00:38:33,930
something we didn't want to sign this is

677
00:38:31,080 --> 00:38:39,420
the typical type of attack we must never

678
00:38:33,930 --> 00:38:42,859
let the attack control the plaintext all

679
00:38:39,420 --> 00:38:42,860
we want to save

680
00:38:44,190 --> 00:38:48,510
we have a DP young humans we have

681
00:38:46,470 --> 00:38:50,368
calculators and want to recycle here

682
00:38:48,510 --> 00:38:54,720
generate in different private keys using

683
00:38:50,369 --> 00:38:58,500
a common module if we have them very the

684
00:38:54,720 --> 00:39:02,868
same message encrypted with with these

685
00:38:58,500 --> 00:39:05,339
two keys private keys two different keys

686
00:39:02,869 --> 00:39:08,119
you can calculate this but this is a

687
00:39:05,339 --> 00:39:08,119
mess don't do it

688
00:39:09,800 --> 00:39:15,119
I'll give you now an example which is

689
00:39:12,390 --> 00:39:18,060
more complicated here we see that

690
00:39:15,119 --> 00:39:20,730
signing and encrypting never the other

691
00:39:18,060 --> 00:39:22,859
way around because important because

692
00:39:20,730 --> 00:39:26,369
there is a type of attack which I will

693
00:39:22,859 --> 00:39:28,650
describe in detail do I have 15 more

694
00:39:26,369 --> 00:39:30,650
minutes it's very easy there's four

695
00:39:28,650 --> 00:39:34,650
basic mathematical operations

696
00:39:30,650 --> 00:39:38,369
that's why I've shown you the script of

697
00:39:34,650 --> 00:39:43,589
that film primer I'm not going to

698
00:39:38,369 --> 00:39:49,319
explain that thanks to Roman asymmetric

699
00:39:43,589 --> 00:39:51,720
algorithms beware always be careful we

700
00:39:49,319 --> 00:39:54,000
would diffie-hellman you must take into

701
00:39:51,720 --> 00:39:57,480
account the path of so the birthday

702
00:39:54,000 --> 00:39:59,849
paradox without a day RSA we have to

703
00:39:57,480 --> 00:40:02,190
take into account of the messages cannot

704
00:39:59,849 --> 00:40:05,579
be encrypted of the although the

705
00:40:02,190 --> 00:40:08,849
probability may be very low these are

706
00:40:05,579 --> 00:40:11,339
complex mathematical operations on the

707
00:40:08,849 --> 00:40:13,589
final conclusion is a modular

708
00:40:11,339 --> 00:40:15,779
mathematics as many details to take into

709
00:40:13,589 --> 00:40:18,020
account I hope you enjoyed my

710
00:40:15,780 --> 00:40:18,020
presentation

711
00:40:24,180 --> 00:40:32,980
come on mama let him pour swallow those

712
00:40:27,490 --> 00:40:38,129
sailors April 19 um II noticed 39

713
00:40:32,980 --> 00:40:38,130
minutes and five seconds get out of here

714
00:40:39,839 --> 00:40:48,630
you can leave your laptop behind we are

715
00:40:44,619 --> 00:40:52,829
now going to move to the award ceremony

716
00:40:48,630 --> 00:40:52,829
you have a strange adapter

