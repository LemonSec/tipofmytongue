1
00:00:00,000 --> 00:00:09,940
[Music]

2
00:00:12,420 --> 00:00:25,359
[Music]

3
00:00:29,660 --> 00:01:19,439
[Music]

4
00:01:24,450 --> 00:01:41,350
[Music]

5
00:01:34,710 --> 00:01:52,109
not a problem<font color="#CCCCCC"> and</font><font color="#E5E5E5"> I can do it</font>

6
00:01:41,350 --> 00:01:56,589
[Music]

7
00:01:52,110 --> 00:02:01,710
exploding research even abilities<font color="#E5E5E5"> they</font>

8
00:01:56,590 --> 00:02:05,470
want to set up<font color="#E5E5E5"> a hub here and also very</font>

9
00:02:01,710 --> 00:02:07,570
important we all know<font color="#E5E5E5"> that there are</font>

10
00:02:05,470 --> 00:02:13,109
mafias and brokers out there offering

11
00:02:07,570 --> 00:02:16,060
you<font color="#E5E5E5"> 100</font><font color="#CCCCCC"> a cake 200k for vulnerability</font>

12
00:02:13,110 --> 00:02:18,070
that's good money<font color="#E5E5E5"> and we all understand</font>

13
00:02:16,060 --> 00:02:20,130
that<font color="#CCCCCC"> after researching something</font><font color="#E5E5E5"> for</font>

14
00:02:18,070 --> 00:02:22,570
<font color="#E5E5E5">three</font><font color="#CCCCCC"> months and getting</font><font color="#E5E5E5"> em explode</font>

15
00:02:20,130 --> 00:02:26,859
getting reasonable money for AIDS is

16
00:02:22,570 --> 00:02:30,540
could be<font color="#CCCCCC"> a good thing</font><font color="#E5E5E5"> but do not sell</font><font color="#CCCCCC"> it</font>

17
00:02:26,860 --> 00:02:34,030
to<font color="#E5E5E5"> someone with the strange Russian</font>

18
00:02:30,540 --> 00:02:36,880
<font color="#E5E5E5">accents so do better sell it to a good</font>

19
00:02:34,030 --> 00:02:38,920
broker then<font color="#E5E5E5"> telefónica 11 bucks there</font>

20
00:02:36,880 --> 00:02:42,420
have always<font color="#E5E5E5"> being with us and then check</font>

21
00:02:38,920 --> 00:02:46,989
<font color="#E5E5E5">points here people they organized the</font>

22
00:02:42,420 --> 00:02:51,130
contest<font color="#E5E5E5"> and they get</font><font color="#CCCCCC"> away I am</font><font color="#E5E5E5"> drawn so</font>

23
00:02:46,990 --> 00:02:54,370
seeing sets which is<font color="#CCCCCC"> a platinum sponsors</font>

24
00:02:51,130 --> 00:02:56,799
a sponsor Madrid and<font color="#CCCCCC"> Valencia</font><font color="#E5E5E5"> conference</font>

25
00:02:54,370 --> 00:03:00,670
<font color="#E5E5E5">and this is very good</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> us because we</font>

26
00:02:56,800 --> 00:03:04,600
<font color="#CCCCCC">are not again</font><font color="#E5E5E5"> fighting</font><font color="#CCCCCC"> really hard to</font>

27
00:03:00,670 --> 00:03:10,238
get budget for Valencia<font color="#CCCCCC"> thank you very</font>

28
00:03:04,600 --> 00:03:18,790
<font color="#E5E5E5">much to them they'll be with</font><font color="#CCCCCC"> us since</font>

29
00:03:10,239 --> 00:03:23,290
<font color="#E5E5E5">day one our silver sponsors that logic</font>

30
00:03:18,790 --> 00:03:26,250
belief<font color="#CCCCCC"> her gloves and s21 well yesterday</font>

31
00:03:23,290 --> 00:03:31,810
<font color="#CCCCCC">I heard that while I was</font><font color="#E5E5E5"> talking to the</font>

32
00:03:26,250 --> 00:03:35,830
person<font color="#E5E5E5"> and I was talking</font><font color="#CCCCCC"> to this</font><font color="#E5E5E5"> girl</font>

33
00:03:31,810 --> 00:03:38,380
<font color="#E5E5E5">she said my</font><font color="#CCCCCC"> alias</font><font color="#E5E5E5"> DS and</font><font color="#CCCCCC"> heads</font><font color="#E5E5E5"> was start</font>

34
00:03:35,830 --> 00:03:41,680
so I<font color="#E5E5E5"> badly but we've known each other</font>

35
00:03:38,380 --> 00:03:43,230
since 1995 without knowing that<font color="#E5E5E5"> and she</font>

36
00:03:41,680 --> 00:03:47,049
works at a hot clubs

37
00:03:43,230 --> 00:03:49,470
so<font color="#E5E5E5"> the logics they belong</font><font color="#CCCCCC"> they're part</font>

38
00:03:47,049 --> 00:03:52,750
of our family the same as blue leaf and

39
00:03:49,470 --> 00:03:57,520
s21<font color="#CCCCCC"> this is the first time that they are</font>

40
00:03:52,750 --> 00:04:01,120
<font color="#E5E5E5">sponsoring us curry remember voting</font>

41
00:03:57,520 --> 00:04:01,970
system dizzy is<font color="#CCCCCC"> Andrew</font><font color="#E5E5E5"> curry you have to</font>

42
00:04:01,120 --> 00:04:11,870
go to the<font color="#CCCCCC"> website</font>

43
00:04:01,970 --> 00:04:14,380
right with<font color="#E5E5E5"> this address</font><font color="#CCCCCC"> HTTP</font><font color="#E5E5E5"> then you</font>

44
00:04:11,870 --> 00:04:18,380
enter the phone number<font color="#E5E5E5"> you will get them</font>

45
00:04:14,380 --> 00:04:21,200
<font color="#E5E5E5">text message of confirmation then you</font>

46
00:04:18,380 --> 00:04:25,400
validate your phone and then do enter

47
00:04:21,200 --> 00:04:29,450
this convulsion route 17

48
00:04:25,400 --> 00:04:32,330
if you don't<font color="#E5E5E5"> input</font><font color="#CCCCCC"> the coupon it will</font>

49
00:04:29,450 --> 00:04:37,270
cover the<font color="#CCCCCC"> loop balance so I'll show you</font>

50
00:04:32,330 --> 00:04:37,270
<font color="#E5E5E5">how what are</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> results so far</font>

51
00:04:52,349 --> 00:05:03,399
so this<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> address URL</font><font color="#E5E5E5"> and this is</font>

52
00:04:58,569 --> 00:05:06,459
the<font color="#E5E5E5"> little sofa so what's a very</font>

53
00:05:03,399 --> 00:05:08,559
important<font color="#E5E5E5"> see</font><font color="#CCCCCC"> maybe the case of one of</font>

54
00:05:06,459 --> 00:05:10,929
the days of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> event</font><font color="#E5E5E5"> for instance</font>

55
00:05:08,559 --> 00:05:14,789
yesterday<font color="#E5E5E5"> or the day before</font><font color="#CCCCCC"> yesterday</font>

56
00:05:10,929 --> 00:05:18,849
imagine that you didn't<font color="#E5E5E5"> like one of the</font>

57
00:05:14,789 --> 00:05:21,909
presentations and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> won't be</font><font color="#E5E5E5"> what the</font>

58
00:05:18,849 --> 00:05:25,239
speaker - I don't know - to know about

59
00:05:21,909 --> 00:05:26,949
<font color="#E5E5E5">that so</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> are considering current</font>

60
00:05:25,239 --> 00:05:31,268
<font color="#E5E5E5">people are considering</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> you can cast</font>

61
00:05:26,949 --> 00:05:36,610
a negative<font color="#E5E5E5"> vote they would really want</font>

62
00:05:31,269 --> 00:05:45,719
to<font color="#CCCCCC"> be hard</font><font color="#E5E5E5"> so we want to keep up a high</font>

63
00:05:36,610 --> 00:05:49,929
standard<font color="#CCCCCC"> so this is the progress</font><font color="#E5E5E5"> of the</font>

64
00:05:45,719 --> 00:05:54,489
voting from the balance<font color="#CCCCCC"> you can see the</font>

65
00:05:49,929 --> 00:05:58,119
level of<font color="#E5E5E5"> assessment so please support</font>

66
00:05:54,489 --> 00:06:00,789
<font color="#CCCCCC">curry</font><font color="#E5E5E5"> Spanish shut up they are doing</font>

67
00:05:58,119 --> 00:06:04,659
<font color="#CCCCCC">very well</font><font color="#E5E5E5"> in terms</font><font color="#CCCCCC"> of microtransactions</font>

68
00:06:00,789 --> 00:06:07,659
it is<font color="#E5E5E5"> Spanish start up it is very</font>

69
00:06:04,659 --> 00:06:10,659
<font color="#CCCCCC">important that</font><font color="#E5E5E5"> we support our projects</font>

70
00:06:07,659 --> 00:06:14,110
and these people are<font color="#E5E5E5"> doing very well in</font>

71
00:06:10,659 --> 00:06:18,308
China Singapore<font color="#E5E5E5"> etc and they seem</font>

72
00:06:14,110 --> 00:06:20,709
working a lot with Telefonica recently

73
00:06:18,309 --> 00:06:23,589
so now I'd like to<font color="#E5E5E5"> give the viewer to to</font>

74
00:06:20,709 --> 00:06:28,289
<font color="#E5E5E5">stick us with her completely unknown to</font>

75
00:06:23,589 --> 00:06:34,029
<font color="#E5E5E5">ask so the organizer of</font><font color="#CCCCCC"> this small</font><font color="#E5E5E5"> event</font>

76
00:06:28,289 --> 00:06:35,589
do nice post<font color="#CCCCCC"> are</font><font color="#E5E5E5"> the name of it right</font><font color="#CCCCCC"> so</font>

77
00:06:34,029 --> 00:06:40,239
<font color="#CCCCCC">which please introduce yourselves</font>

78
00:06:35,589 --> 00:06:42,269
thank you<font color="#CCCCCC"> very</font><font color="#E5E5E5"> much</font><font color="#CCCCCC"> Vermont hello</font><font color="#E5E5E5"> good</font>

79
00:06:40,239 --> 00:06:42,268
morning

80
00:06:43,780 --> 00:06:50,409
well<font color="#CCCCCC"> if begin</font><font color="#E5E5E5"> to an</font><font color="#CCCCCC"> audience Chris</font>

81
00:06:46,599 --> 00:06:59,569
submits and<font color="#E5E5E5"> frightening</font>

82
00:06:50,409 --> 00:07:05,930
well Roberto<font color="#E5E5E5"> and Daniel with you</font><font color="#CCCCCC"> sold</font>

83
00:06:59,569 --> 00:07:13,120
romance<font color="#E5E5E5"> sounds like number of Russian</font>

84
00:07:05,930 --> 00:07:17,960
mafia and<font color="#CCCCCC"> okay and Baca said</font><font color="#E5E5E5"> about the</font>

85
00:07:13,120 --> 00:07:20,479
negative votes<font color="#CCCCCC"> rights</font><font color="#E5E5E5"> okay we like to</font>

86
00:07:17,960 --> 00:07:23,840
apologize beforehand because we say<font color="#E5E5E5"> lots</font>

87
00:07:20,479 --> 00:07:29,270
of<font color="#CCCCCC"> sober swear words</font><font color="#E5E5E5"> so if we will be</font>

88
00:07:23,840 --> 00:07:32,000
talking about<font color="#CCCCCC"> Duggar</font><font color="#E5E5E5"> today despite what</font>

89
00:07:29,270 --> 00:07:36,620
Jaime mentioned yesterday<font color="#E5E5E5"> about</font><font color="#CCCCCC"> dakka</font>

90
00:07:32,000 --> 00:07:41,240
<font color="#CCCCCC">dakka is not as bad it's not</font><font color="#E5E5E5"> a silver</font>

91
00:07:36,620 --> 00:07:44,569
bullet<font color="#CCCCCC"> Eva</font><font color="#E5E5E5"> and what I was going</font><font color="#CCCCCC"> to refer</font>

92
00:07:41,240 --> 00:07:48,500
to well we have<font color="#E5E5E5"> carried</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> a research</font>

93
00:07:44,569 --> 00:07:53,000
<font color="#E5E5E5">we have broken it down we have locked</font>

94
00:07:48,500 --> 00:07:58,960
the images<font color="#CCCCCC"> and</font><font color="#E5E5E5"> well these are few things</font>

95
00:07:53,000 --> 00:07:58,960
I'd like<font color="#CCCCCC"> to share with you</font><font color="#E5E5E5"> we liked it</font>

96
00:08:00,990 --> 00:08:17,010
<font color="#E5E5E5">a bit of spam about ourselves Robin sees</font>

97
00:08:07,380 --> 00:08:21,780
it a lot<font color="#CCCCCC"> initially in this video so</font>

98
00:08:17,010 --> 00:08:24,090
these are us and<font color="#E5E5E5"> now</font>

99
00:08:21,780 --> 00:08:27,320
well the<font color="#CCCCCC"> micro sensations these lights</font>

100
00:08:24,090 --> 00:08:27,320
are in English

101
00:08:29,720 --> 00:08:35,760
surely there will<font color="#CCCCCC"> be</font><font color="#E5E5E5"> spelling mistakes</font>

102
00:08:32,580 --> 00:08:38,870
another<font color="#CCCCCC"> type of</font><font color="#E5E5E5"> mistakes so first of all</font>

103
00:08:35,760 --> 00:08:43,770
<font color="#E5E5E5">will tell you about</font><font color="#CCCCCC"> what dr. Watts</font>

104
00:08:38,870 --> 00:08:47,910
<font color="#E5E5E5">talked about then we will move on to</font><font color="#CCCCCC"> the</font>

105
00:08:43,770 --> 00:08:55,590
<font color="#CCCCCC">docker environment</font><font color="#E5E5E5"> we will</font><font color="#CCCCCC"> also tell you</font>

106
00:08:47,910 --> 00:08:58,050
<font color="#CCCCCC">about an environment for continuous</font>

107
00:08:55,590 --> 00:09:03,930
integration<font color="#E5E5E5"> and then we will detect</font>

108
00:08:58,050 --> 00:09:08,400
<font color="#E5E5E5">docker images we are going to abuse</font>

109
00:09:03,930 --> 00:09:14,089
<font color="#CCCCCC">docker registry so we will be focusing</font>

110
00:09:08,400 --> 00:09:17,329
on<font color="#E5E5E5"> point number four and five so brother</font>

111
00:09:14,090 --> 00:09:17,330
<font color="#CCCCCC">takeover place</font>

112
00:09:19,190 --> 00:09:28,560
so mandatory introduction what's talking

113
00:09:22,230 --> 00:09:30,480
about I want<font color="#E5E5E5"> to repeat some of the</font>

114
00:09:28,560 --> 00:09:35,869
<font color="#E5E5E5">things</font><font color="#CCCCCC"> you are</font><font color="#E5E5E5"> already aware</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> because</font>

115
00:09:30,480 --> 00:09:41,070
you know<font color="#CCCCCC"> you're going to use docker so</font>

116
00:09:35,870 --> 00:09:46,350
<font color="#CCCCCC">chakra is container manager it allows us</font>

117
00:09:41,070 --> 00:09:47,760
<font color="#E5E5E5">to manage the</font><font color="#CCCCCC"> creation</font><font color="#E5E5E5"> of images images</font>

118
00:09:46,350 --> 00:09:50,550
of our software

119
00:09:47,760 --> 00:09:52,700
it also gives us means to deploy these

120
00:09:50,550 --> 00:09:56,040
<font color="#CCCCCC">images and assistance where</font><font color="#E5E5E5"> we want to</font>

121
00:09:52,700 --> 00:10:00,630
<font color="#E5E5E5">run them execute them and we can also</font>

122
00:09:56,040 --> 00:10:06,240
execute those images with some levels of

123
00:10:00,630 --> 00:10:08,920
<font color="#CCCCCC">or layers of insulation</font><font color="#E5E5E5"> so to speak so</font>

124
00:10:06,240 --> 00:10:12,260
when we talk about that

125
00:10:08,920 --> 00:10:14,349
<font color="#CCCCCC">installation</font><font color="#E5E5E5"> so the question is what is</font>

126
00:10:12,260 --> 00:10:19,370
the relationship<font color="#CCCCCC"> between Daka</font><font color="#E5E5E5"> and</font>

127
00:10:14,350 --> 00:10:21,500
virtual<font color="#CCCCCC"> machines so hi may start</font><font color="#E5E5E5"> a bit</font>

128
00:10:19,370 --> 00:10:24,970
on our presentation yesterday

129
00:10:21,500 --> 00:10:29,240
so for these management<font color="#CCCCCC"> taka juices the</font>

130
00:10:24,970 --> 00:10:31,670
<font color="#E5E5E5">MS base kernels these are abstractions</font>

131
00:10:29,240 --> 00:10:35,150
of<font color="#E5E5E5"> global resources of the system that</font>

132
00:10:31,670 --> 00:10:37,660
<font color="#E5E5E5">can</font><font color="#CCCCCC"> be attributed to processes so that</font>

133
00:10:35,150 --> 00:10:41,300
<font color="#E5E5E5">from the viewpoints of those processes</font>

134
00:10:37,660 --> 00:10:44,030
<font color="#E5E5E5">those resources</font><font color="#CCCCCC"> look like if the way</font>

135
00:10:41,300 --> 00:10:47,390
your own I don't<font color="#CCCCCC"> know whether you have</font>

136
00:10:44,030 --> 00:10:51,160
<font color="#CCCCCC">executed yoga if</font><font color="#E5E5E5"> you make it PS you only</font>

137
00:10:47,390 --> 00:10:51,160
see the<font color="#E5E5E5"> processes of the</font><font color="#CCCCCC"> consignor</font>

138
00:11:00,410 --> 00:11:06,100
so if you<font color="#CCCCCC"> D F conflict</font><font color="#E5E5E5"> you will see only</font>

139
00:11:11,410 --> 00:11:18,469
some interfaces and leaves you come over

140
00:11:15,830 --> 00:11:22,400
when you execute<font color="#E5E5E5"> databases that working</font>

141
00:11:18,470 --> 00:11:27,560
<font color="#CCCCCC">with</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> IPC regions these</font><font color="#E5E5E5"> are the</font>

142
00:11:22,400 --> 00:11:31,040
<font color="#CCCCCC">colonel</font><font color="#E5E5E5"> and that sensation of isolation</font>

143
00:11:27,560 --> 00:11:34,369
that<font color="#E5E5E5"> you get</font><font color="#CCCCCC"> because you cannot see</font>

144
00:11:31,040 --> 00:11:37,160
other<font color="#E5E5E5"> things in the system could</font><font color="#CCCCCC"> be a</font>

145
00:11:34,370 --> 00:11:38,750
bit misleading because<font color="#CCCCCC"> you are there you</font>

146
00:11:37,160 --> 00:11:40,969
said it looks like a virtual<font color="#CCCCCC"> machine</font>

147
00:11:38,750 --> 00:11:42,410
<font color="#CCCCCC">bashing but</font><font color="#E5E5E5"> it is not a virtual machine</font>

148
00:11:40,970 --> 00:11:45,080
<font color="#E5E5E5">why not</font>

149
00:11:42,410 --> 00:11:48,230
because a VM has its own operating

150
00:11:45,080 --> 00:11:53,030
<font color="#E5E5E5">system</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> young kernel and then</font><font color="#CCCCCC"> a</font>

151
00:11:48,230 --> 00:11:56,560
hypervisor<font color="#E5E5E5"> with virtual devices but</font>

152
00:11:53,030 --> 00:11:59,750
<font color="#CCCCCC">docker</font><font color="#E5E5E5"> is an application executing other</font>

153
00:11:56,560 --> 00:12:01,880
<font color="#CCCCCC">applications and assigning processes to</font>

154
00:11:59,750 --> 00:12:04,970
them therefore<font color="#CCCCCC"> the process within the</font>

155
00:12:01,880 --> 00:12:06,860
container<font color="#E5E5E5"> interacts with the OS and same</font>

156
00:12:04,970 --> 00:12:12,230
as any other<font color="#E5E5E5"> process outside another</font>

157
00:12:06,860 --> 00:12:15,740
container so<font color="#E5E5E5"> therefore a high method can</font>

158
00:12:12,230 --> 00:12:21,890
unit is as much<font color="#E5E5E5"> as I need to</font><font color="#CCCCCC"> be in the</font>

159
00:12:15,740 --> 00:12:24,860
docker host doctor is not virtualization

160
00:12:21,890 --> 00:12:26,780
we just wanted to<font color="#E5E5E5"> clarify</font><font color="#CCCCCC"> that for</font><font color="#E5E5E5"> use</font>

161
00:12:24,860 --> 00:12:28,820
<font color="#E5E5E5">someone said that</font><font color="#CCCCCC"> yesterday and</font><font color="#E5E5E5"> this is</font>

162
00:12:26,780 --> 00:12:31,520
important<font color="#E5E5E5"> point</font><font color="#CCCCCC"> to make</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> we work</font>

163
00:12:28,820 --> 00:12:31,990
<font color="#CCCCCC">in security</font><font color="#E5E5E5"> and we should bear this in</font>

164
00:12:31,520 --> 00:12:34,340
mind

165
00:12:31,990 --> 00:12:36,410
virtualization should continue to<font color="#E5E5E5"> be</font>

166
00:12:34,340 --> 00:12:40,090
<font color="#E5E5E5">there and</font><font color="#CCCCCC"> to consider as one more layer</font>

167
00:12:36,410 --> 00:12:45,589
that<font color="#E5E5E5"> helped us to do a</font><font color="#CCCCCC"> number of things</font>

168
00:12:40,090 --> 00:12:49,010
right we said<font color="#E5E5E5"> that diseases chroot with</font>

169
00:12:45,590 --> 00:12:51,080
asteroids<font color="#E5E5E5"> so docker has done what we</font>

170
00:12:49,010 --> 00:12:53,240
could<font color="#CCCCCC"> have done many years</font><font color="#E5E5E5"> ago but now</font>

171
00:12:51,080 --> 00:12:55,910
<font color="#E5E5E5">we can do that rings</font><font color="#CCCCCC"> they're going to</font>

172
00:12:53,240 --> 00:12:58,270
<font color="#E5E5E5">exactly the</font><font color="#CCCCCC"> same thing but in a nicer</font>

173
00:12:55,910 --> 00:12:58,270
manner

174
00:13:02,570 --> 00:13:10,710
how are these<font color="#E5E5E5"> images</font><font color="#CCCCCC"> built</font><font color="#E5E5E5"> Joker has</font>

175
00:13:07,340 --> 00:13:14,280
<font color="#CCCCCC">filed non medical files where the</font>

176
00:13:10,710 --> 00:13:15,750
definitions is skeleton of the image

177
00:13:14,280 --> 00:13:20,100
<font color="#CCCCCC">that we want</font><font color="#E5E5E5"> to create</font><font color="#CCCCCC"> for instance the</font>

178
00:13:15,750 --> 00:13:25,290
<font color="#CCCCCC">Joker find there is based on an</font><font color="#E5E5E5"> image</font>

179
00:13:20,100 --> 00:13:29,190
that<font color="#CCCCCC"> Python has has I</font><font color="#E5E5E5"> guess that Ubuntu</font>

180
00:13:25,290 --> 00:13:32,250
is the same<font color="#E5E5E5"> and here we defined that we</font>

181
00:13:29,190 --> 00:13:34,620
are the maintainer<font color="#E5E5E5"> and then we install</font>

182
00:13:32,250 --> 00:13:37,970
all<font color="#E5E5E5"> these packages and then we</font><font color="#CCCCCC"> define we</font>

183
00:13:34,620 --> 00:13:41,160
say when the<font color="#E5E5E5"> image is run the first</font>

184
00:13:37,970 --> 00:13:43,590
command<font color="#E5E5E5"> to be executed to be Python</font><font color="#CCCCCC"> 1</font>

185
00:13:41,160 --> 00:13:45,270
when we execute<font color="#E5E5E5"> a</font><font color="#CCCCCC"> docker</font><font color="#E5E5E5"> file</font>

186
00:13:43,590 --> 00:13:55,040
docker<font color="#E5E5E5"> file the first thing</font><font color="#CCCCCC"> that we</font>

187
00:13:45,270 --> 00:13:55,040
execute<font color="#E5E5E5"> is an image all right</font>

188
00:13:58,090 --> 00:14:05,890
when you execute<font color="#E5E5E5"> Taco Bell to execute</font>

189
00:14:01,810 --> 00:14:09,189
the<font color="#E5E5E5"> image</font><font color="#CCCCCC"> regenerate</font><font color="#E5E5E5"> the image packaged</font>

190
00:14:05,890 --> 00:14:12,069
image<font color="#E5E5E5"> we tell you more about the image</font>

191
00:14:09,190 --> 00:14:13,870
<font color="#CCCCCC">technically speaking</font><font color="#E5E5E5"> and then when we</font>

192
00:14:12,070 --> 00:14:16,740
execute these images we<font color="#CCCCCC"> have the</font>

193
00:14:13,870 --> 00:14:19,150
container so<font color="#CCCCCC"> that is to say the imaging</font>

194
00:14:16,740 --> 00:14:22,350
instance in an execution

195
00:14:19,150 --> 00:14:26,650
to<font color="#CCCCCC"> summarize toka file is the skeleton</font>

196
00:14:22,350 --> 00:14:28,750
<font color="#E5E5E5">when we do the dollar bill we that goes</font>

197
00:14:26,650 --> 00:14:31,449
through production<font color="#E5E5E5"> area we create the</font>

198
00:14:28,750 --> 00:14:34,660
images the images are executed<font color="#E5E5E5"> as they</font>

199
00:14:31,450 --> 00:14:39,610
are being executed<font color="#CCCCCC"> there is that to be</font>

200
00:14:34,660 --> 00:14:50,550
full of logs etc<font color="#E5E5E5"> and they are different</font>

201
00:14:39,610 --> 00:14:53,440
by similar same as these<font color="#CCCCCC"> a corner and</font>

202
00:14:50,550 --> 00:14:57,689
this is in as much<font color="#E5E5E5"> as</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> need to</font><font color="#CCCCCC"> know</font>

203
00:14:53,440 --> 00:14:57,690
to understand<font color="#E5E5E5"> word representation</font>

204
00:15:10,410 --> 00:15:17,410
well<font color="#CCCCCC"> Dhaka is made up of several</font>

205
00:15:13,930 --> 00:15:19,689
<font color="#E5E5E5">components so to speak when we are</font>

206
00:15:17,410 --> 00:15:22,240
talking<font color="#CCCCCC"> about the execution environment</font>

207
00:15:19,690 --> 00:15:28,360
<font color="#CCCCCC">Dhaka</font><font color="#E5E5E5"> supports itself in number</font><font color="#CCCCCC"> of</font>

208
00:15:22,240 --> 00:15:31,480
pieces<font color="#E5E5E5"> therefore it is not a nonsense</font>

209
00:15:28,360 --> 00:15:33,850
software<font color="#E5E5E5"> a single piece of software</font><font color="#CCCCCC"> that</font>

210
00:15:31,480 --> 00:15:36,700
we installed<font color="#E5E5E5"> and</font><font color="#CCCCCC"> that's it</font><font color="#E5E5E5"> we have on</font>

211
00:15:33,850 --> 00:15:39,580
the one hand soccer registry for us to

212
00:15:36,700 --> 00:15:42,280
<font color="#E5E5E5">upload our images as</font><font color="#CCCCCC"> Robin showed you</font>

213
00:15:39,580 --> 00:15:43,930
before<font color="#E5E5E5"> we have the docker</font><font color="#CCCCCC"> Orchestrator</font>

214
00:15:42,280 --> 00:15:45,250
<font color="#E5E5E5">we're not going to talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> them</font>

215
00:15:43,930 --> 00:15:47,319
because<font color="#CCCCCC"> that's a completely different</font>

216
00:15:45,250 --> 00:15:50,710
<font color="#CCCCCC">thing</font><font color="#E5E5E5"> web but orchestrators still as</font>

217
00:15:47,320 --> 00:15:52,720
<font color="#E5E5E5">well things go on how they go there we</font>

218
00:15:50,710 --> 00:15:56,290
also<font color="#E5E5E5"> have a dropper house that's where</font>

219
00:15:52,720 --> 00:15:59,200
the docker images are run dr. Hass

220
00:15:56,290 --> 00:16:05,770
discussed the machine and that's<font color="#CCCCCC"> it and</font>

221
00:15:59,200 --> 00:16:09,430
then we have the image builders image

222
00:16:05,770 --> 00:16:11,680
builders conceptually speaking is a

223
00:16:09,430 --> 00:16:14,800
piece<font color="#E5E5E5"> but</font><font color="#CCCCCC"> they're</font><font color="#E5E5E5"> parts that could be</font>

224
00:16:11,680 --> 00:16:21,579
<font color="#E5E5E5">embedded in</font><font color="#CCCCCC"> another part we</font><font color="#E5E5E5"> will</font><font color="#CCCCCC"> be</font>

225
00:16:14,800 --> 00:16:23,829
focusing<font color="#E5E5E5"> primarily on docker registry so</font>

226
00:16:21,580 --> 00:16:25,960
we will tell you more<font color="#CCCCCC"> about continuous</font>

227
00:16:23,830 --> 00:16:28,240
integration and continuous deployment<font color="#CCCCCC"> I</font>

228
00:16:25,960 --> 00:16:33,700
don't know what I do has about this this

229
00:16:28,240 --> 00:16:37,960
<font color="#E5E5E5">is</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> trendy nowadays and this is one</font>

230
00:16:33,700 --> 00:16:41,620
of<font color="#E5E5E5"> these difficult definitions that</font>

231
00:16:37,960 --> 00:16:46,180
<font color="#E5E5E5">depends on Wikipedia well later on to</font>

232
00:16:41,620 --> 00:16:50,860
rethread this is the classic<font color="#CCCCCC"> life</font><font color="#E5E5E5"> cycle</font>

233
00:16:46,180 --> 00:16:54,219
for continuous integration so this is a

234
00:16:50,860 --> 00:16:56,380
classic life<font color="#E5E5E5"> circle of software this</font><font color="#CCCCCC"> is</font>

235
00:16:54,220 --> 00:16:59,140
<font color="#CCCCCC">what we are used</font><font color="#E5E5E5"> to have a requirement</font>

236
00:16:56,380 --> 00:17:02,350
design implementation verification<font color="#E5E5E5"> and</font>

237
00:16:59,140 --> 00:17:04,960
then some maintenance<font color="#E5E5E5"> is</font><font color="#CCCCCC"> done on the</font>

238
00:17:02,350 --> 00:17:09,640
software<font color="#E5E5E5"> the problem here is that there</font>

239
00:17:04,960 --> 00:17:12,550
is<font color="#CCCCCC"> a highly</font><font color="#E5E5E5"> manual process here do you</font>

240
00:17:09,640 --> 00:17:14,800
know these meetings when there are<font color="#E5E5E5"> ten</font>

241
00:17:12,550 --> 00:17:17,649
people<font color="#E5E5E5"> gathered people</font><font color="#CCCCCC"> sales are going</font>

242
00:17:14,800 --> 00:17:18,178
to go the<font color="#CCCCCC"> Box etc</font><font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> know what live</font>

243
00:17:17,650 --> 00:17:21,059
<font color="#CCCCCC">in</font>

244
00:17:18,179 --> 00:17:22,829
one of these not effective meetings at

245
00:17:21,059 --> 00:17:25,529
all and then we are<font color="#E5E5E5"> starting the process</font>

246
00:17:22,829 --> 00:17:28,740
<font color="#E5E5E5">is really really hard it</font><font color="#CCCCCC"> is like giving</font>

247
00:17:25,529 --> 00:17:30,840
<font color="#CCCCCC">birth to a</font><font color="#E5E5E5"> baby so we are starting</font><font color="#CCCCCC"> the</font>

248
00:17:28,740 --> 00:17:40,129
process<font color="#E5E5E5"> SSA</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> very very</font><font color="#CCCCCC"> difficult</font>

249
00:17:30,840 --> 00:17:46,559
sometimes<font color="#E5E5E5"> you want to</font><font color="#CCCCCC"> be killed so Eve</font>

250
00:17:40,129 --> 00:17:48,719
<font color="#CCCCCC">three-season more typical life cycle so</font>

251
00:17:46,559 --> 00:17:52,019
this is in more of<font color="#CCCCCC"> a modern modern</font>

252
00:17:48,720 --> 00:17:55,799
<font color="#E5E5E5">environment so we have the developers we</font>

253
00:17:52,019 --> 00:17:58,710
have managers we<font color="#CCCCCC"> have a</font><font color="#E5E5E5"> system to</font>

254
00:17:55,799 --> 00:18:01,440
<font color="#CCCCCC">control versions and</font><font color="#E5E5E5"> we could say</font><font color="#CCCCCC"> that</font>

255
00:17:58,710 --> 00:18:04,289
<font color="#E5E5E5">we have an Orchestrator that is to say</font>

256
00:18:01,440 --> 00:18:05,190
or a<font color="#E5E5E5"> part or piece of continuous</font>

257
00:18:04,289 --> 00:18:08,158
<font color="#E5E5E5">integration</font>

258
00:18:05,190 --> 00:18:12,179
so basically developers<font color="#E5E5E5"> for instance and</font>

259
00:18:08,159 --> 00:18:14,850
github so the concept<font color="#E5E5E5"> here is</font><font color="#CCCCCC"> that a</font>

260
00:18:12,179 --> 00:18:19,080
developer as it shows<font color="#CCCCCC"> here button right</font>

261
00:18:14,850 --> 00:18:21,570
generates a piece of code<font color="#E5E5E5"> and then that</font>

262
00:18:19,080 --> 00:18:25,428
goes<font color="#E5E5E5"> to continuous integration and the</font>

263
00:18:21,570 --> 00:18:29,700
goals of the<font color="#E5E5E5"> testing and automatically</font>

264
00:18:25,429 --> 00:18:32,369
then the upgrade<font color="#E5E5E5"> up and then it goes</font>

265
00:18:29,700 --> 00:18:37,799
<font color="#CCCCCC">back to developers this is more of a</font>

266
00:18:32,369 --> 00:18:40,499
modern life cycle<font color="#CCCCCC"> so I'm not</font><font color="#E5E5E5"> going to</font>

267
00:18:37,799 --> 00:18:42,509
tell you about the classical<font color="#E5E5E5"> deployments</font>

268
00:18:40,499 --> 00:18:47,190
because<font color="#E5E5E5"> I</font><font color="#CCCCCC"> don't have</font><font color="#E5E5E5"> the time of it but</font>

269
00:18:42,509 --> 00:18:48,899
if we<font color="#E5E5E5"> sum we mix them both this is what</font>

270
00:18:47,190 --> 00:18:52,289
we have we have<font color="#CCCCCC"> a continuous integration</font>

271
00:18:48,899 --> 00:18:55,590
<font color="#E5E5E5">that's where the code comes out from and</font>

272
00:18:52,289 --> 00:18:59,700
then the<font color="#CCCCCC"> orchestrator</font><font color="#E5E5E5"> it works as a</font>

273
00:18:55,590 --> 00:19:03,360
router builds images etc<font color="#E5E5E5"> and then the</font>

274
00:18:59,700 --> 00:19:07,950
docker host<font color="#E5E5E5"> where there is a container</font>

275
00:19:03,360 --> 00:19:11,340
<font color="#E5E5E5">running and it has the software running</font>

276
00:19:07,950 --> 00:19:15,299
at a given point in<font color="#E5E5E5"> time so we have here</font>

277
00:19:11,340 --> 00:19:18,029
<font color="#CCCCCC">a software</font><font color="#E5E5E5"> is generated so</font><font color="#CCCCCC"> we will have</font>

278
00:19:15,299 --> 00:19:19,350
a new release<font color="#CCCCCC"> it goes to production that</font>

279
00:19:18,029 --> 00:19:22,169
we<font color="#E5E5E5"> send that out through the</font>

280
00:19:19,350 --> 00:19:25,129
orchestrator<font color="#E5E5E5"> and then the orchestrator</font>

281
00:19:22,169 --> 00:19:27,869
<font color="#E5E5E5">says okay</font><font color="#CCCCCC"> do whatever</font><font color="#E5E5E5"> you have to do</font>

282
00:19:25,129 --> 00:19:30,779
that is automatic and<font color="#E5E5E5"> the developer</font>

283
00:19:27,869 --> 00:19:31,889
doesn't really mind<font color="#CCCCCC"> valve is behind it</font>

284
00:19:30,779 --> 00:19:35,400
it is like much

285
00:19:31,890 --> 00:19:38,929
he's<font color="#E5E5E5"> going to docker image builder then</font>

286
00:19:35,400 --> 00:19:41,460
you get a new image<font color="#E5E5E5"> that goes up to</font><font color="#CCCCCC"> the</font>

287
00:19:38,929 --> 00:19:44,070
<font color="#CCCCCC">registry that is the new release</font><font color="#E5E5E5"> and</font>

288
00:19:41,460 --> 00:19:46,860
then the dr. house has please upgrade

289
00:19:44,070 --> 00:19:50,100
<font color="#CCCCCC">yourself because there is a new software</font>

290
00:19:46,860 --> 00:19:53,520
<font color="#E5E5E5">version then it downloads the image from</font>

291
00:19:50,100 --> 00:19:56,070
<font color="#CCCCCC">the</font><font color="#E5E5E5"> registry it executed</font><font color="#CCCCCC"> an ideally</font>

292
00:19:53,520 --> 00:19:59,490
parallel<font color="#E5E5E5"> it works for</font><font color="#CCCCCC"> some time and the</font>

293
00:19:56,070 --> 00:20:02,490
<font color="#CCCCCC">old</font><font color="#E5E5E5"> image and the old image is removed</font>

294
00:19:59,490 --> 00:20:05,040
<font color="#E5E5E5">and then it is replaced</font><font color="#CCCCCC"> by the new image</font>

295
00:20:02,490 --> 00:20:09,059
it is very important and it is<font color="#CCCCCC"> very</font><font color="#E5E5E5"> last</font>

296
00:20:05,040 --> 00:20:16,980
<font color="#E5E5E5">face that no point in time their</font><font color="#CCCCCC"> service</font>

297
00:20:09,059 --> 00:20:19,889
<font color="#CCCCCC">is stopped in theory the discontinues</font>

298
00:20:16,980 --> 00:20:25,500
<font color="#CCCCCC">it's all the</font><font color="#E5E5E5"> times in operation so it is</font>

299
00:20:19,890 --> 00:20:27,929
magic and<font color="#CCCCCC"> we all like magic this is very</font>

300
00:20:25,500 --> 00:20:29,880
nice because you can<font color="#E5E5E5"> focus on your thing</font>

301
00:20:27,929 --> 00:20:38,940
and you don't<font color="#E5E5E5"> have to do things that are</font>

302
00:20:29,880 --> 00:20:43,590
difficult to<font color="#E5E5E5"> do</font><font color="#CCCCCC"> so now let us try</font><font color="#E5E5E5"> to</font>

303
00:20:38,940 --> 00:20:46,140
<font color="#E5E5E5">dissect</font><font color="#CCCCCC"> docker images</font><font color="#E5E5E5"> so I don't know</font>

304
00:20:43,590 --> 00:20:48,240
what<font color="#CCCCCC"> I'll do just</font><font color="#E5E5E5"> talkable</font><font color="#CCCCCC"> or you can</font>

305
00:20:46,140 --> 00:20:51,929
say<font color="#CCCCCC"> ok I get an image</font><font color="#E5E5E5"> I take an image</font>

306
00:20:48,240 --> 00:21:00,110
<font color="#E5E5E5">and</font><font color="#CCCCCC"> upload</font><font color="#E5E5E5"> it and load it but what's the</font>

307
00:20:51,929 --> 00:21:00,110
docker image docker image is<font color="#CCCCCC"> it tar</font>

308
00:21:02,130 --> 00:21:07,380
so I could have shown<font color="#CCCCCC"> you a different</font>

309
00:21:04,020 --> 00:21:11,280
image<font color="#CCCCCC"> but that's the way that I got it</font>

310
00:21:07,380 --> 00:21:16,230
then<font color="#CCCCCC"> you</font><font color="#E5E5E5"> said okay you start dog</font><font color="#CCCCCC"> JC no</font>

311
00:21:11,280 --> 00:21:19,710
it's only<font color="#CCCCCC"> tar</font><font color="#E5E5E5"> so if you get an</font><font color="#CCCCCC"> image to</font>

312
00:21:16,230 --> 00:21:22,679
rename it<font color="#E5E5E5"> and to make</font><font color="#CCCCCC"> it a tar file</font>

313
00:21:19,710 --> 00:21:29,490
<font color="#E5E5E5">that's it that's the</font><font color="#CCCCCC"> toka image so</font><font color="#E5E5E5"> it's</font>

314
00:21:22,679 --> 00:21:35,789
<font color="#E5E5E5">a dark dot give C and when you unzip it</font>

315
00:21:29,490 --> 00:21:37,650
it contains<font color="#E5E5E5"> number of folders so the</font>

316
00:21:35,789 --> 00:21:42,350
many things<font color="#CCCCCC"> in there will tell you more</font>

317
00:21:37,650 --> 00:21:42,350
about them<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> unz better and that's it</font>

318
00:21:44,870 --> 00:21:52,649
so there<font color="#E5E5E5"> are many</font><font color="#CCCCCC"> things in it but what</font>

319
00:21:47,909 --> 00:22:01,200
<font color="#E5E5E5">are</font><font color="#CCCCCC"> we interested in we have a file with</font>

320
00:21:52,650 --> 00:22:04,140
<font color="#E5E5E5">strange names which is a sha-256 has</font>

321
00:22:01,200 --> 00:22:06,480
lots of<font color="#E5E5E5"> information however we are</font>

322
00:22:04,140 --> 00:22:13,740
<font color="#E5E5E5">interested in these global meta</font>

323
00:22:06,480 --> 00:22:17,909
information about<font color="#E5E5E5"> your image so we are</font>

324
00:22:13,740 --> 00:22:20,190
most interested<font color="#CCCCCC"> in</font><font color="#E5E5E5"> finding about</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> all</font>

325
00:22:17,909 --> 00:22:23,070
the modifications<font color="#E5E5E5"> that</font><font color="#CCCCCC"> have been made to</font>

326
00:22:20,190 --> 00:22:26,159
<font color="#CCCCCC">that</font><font color="#E5E5E5"> image</font><font color="#CCCCCC"> and it has the hashes it also</font>

327
00:22:23,070 --> 00:22:31,139
includes the hashes<font color="#CCCCCC"> of each layer but</font>

328
00:22:26,159 --> 00:22:35,850
our layers layers are each are these

329
00:22:31,140 --> 00:22:40,500
subfolders<font color="#E5E5E5"> as you can see they are all</font>

330
00:22:35,850 --> 00:22:44,870
named<font color="#E5E5E5"> however the hash in here is the</font>

331
00:22:40,500 --> 00:22:44,870
heart of layer dot tar

332
00:22:46,810 --> 00:22:55,370
and it is important because when we<font color="#CCCCCC"> are</font>

333
00:22:51,830 --> 00:22:58,879
<font color="#E5E5E5">talking</font><font color="#CCCCCC"> about global</font><font color="#E5E5E5"> references itself</font>

334
00:22:55,370 --> 00:23:04,149
as that that<font color="#E5E5E5"> is exclusively time we also</font>

335
00:22:58,880 --> 00:23:04,150
have<font color="#CCCCCC"> manifests also quite important</font>

336
00:23:04,510 --> 00:23:11,540
therefore makes a<font color="#CCCCCC"> reference to global</font>

337
00:23:08,120 --> 00:23:13,790
configuration<font color="#E5E5E5"> we will see what</font><font color="#CCCCCC"> texts are</font>

338
00:23:11,540 --> 00:23:17,389
about<font color="#E5E5E5"> and then it also has a list of</font>

339
00:23:13,790 --> 00:23:19,820
layers<font color="#E5E5E5"> a long list of layers it tells us</font>

340
00:23:17,390 --> 00:23:23,630
about<font color="#E5E5E5"> the</font><font color="#CCCCCC"> first layer that</font><font color="#E5E5E5"> we will be</font>

341
00:23:19,820 --> 00:23:28,070
<font color="#E5E5E5">conceived to build the image etc and now</font>

342
00:23:23,630 --> 00:23:32,060
in terms of repositories again more

343
00:23:28,070 --> 00:23:37,850
references to<font color="#E5E5E5"> the actual layer so this</font>

344
00:23:32,060 --> 00:23:40,820
is a long<font color="#E5E5E5"> list of references and then we</font>

345
00:23:37,850 --> 00:23:43,550
have all the layers<font color="#CCCCCC"> each of the layers</font>

346
00:23:40,820 --> 00:23:46,490
<font color="#CCCCCC">that are just actually sub files are</font>

347
00:23:43,550 --> 00:23:48,800
<font color="#E5E5E5">always made up of three files 8jj</font><font color="#CCCCCC"> cell</font>

348
00:23:46,490 --> 00:23:50,990
and layer<font color="#CCCCCC"> da da</font>

349
00:23:48,800 --> 00:23:52,820
the<font color="#CCCCCC"> j-jason</font><font color="#E5E5E5"> contains multi bit</font>

350
00:23:50,990 --> 00:23:55,100
information<font color="#E5E5E5"> about</font><font color="#CCCCCC"> direction layer</font><font color="#E5E5E5"> and</font>

351
00:23:52,820 --> 00:23:58,100
then the<font color="#CCCCCC"> layer dr. which is</font><font color="#E5E5E5"> the actual</font>

352
00:23:55,100 --> 00:24:00,709
<font color="#CCCCCC">contents also</font><font color="#E5E5E5"> to mention that each of</font>

353
00:23:58,100 --> 00:24:04,669
the Jason makes a<font color="#CCCCCC"> reference to the</font>

354
00:24:00,710 --> 00:24:07,130
parent layer and<font color="#E5E5E5"> they're very nice</font>

355
00:24:04,670 --> 00:24:10,670
drawings to explaining<font color="#E5E5E5"> these references</font>

356
00:24:07,130 --> 00:24:12,740
<font color="#E5E5E5">but this is what makes it difficult to</font>

357
00:24:10,670 --> 00:24:15,470
<font color="#E5E5E5">work on an image later on that is to say</font>

358
00:24:12,740 --> 00:24:17,690
<font color="#E5E5E5">to modify all these references</font><font color="#CCCCCC"> so these</font>

359
00:24:15,470 --> 00:24:20,900
layer references this one and this one

360
00:24:17,690 --> 00:24:25,700
<font color="#CCCCCC">and</font><font color="#E5E5E5"> this other one so and then on top of</font>

361
00:24:20,900 --> 00:24:29,480
<font color="#CCCCCC">that</font><font color="#E5E5E5"> we have the manifest</font><font color="#CCCCCC"> so bit</font>

362
00:24:25,700 --> 00:24:32,900
complicated indeed so these are each

363
00:24:29,480 --> 00:24:36,880
station contains the layer metadata<font color="#E5E5E5"> the</font>

364
00:24:32,900 --> 00:24:42,710
version contains the<font color="#E5E5E5"> layers ation and</font>

365
00:24:36,880 --> 00:24:45,530
<font color="#E5E5E5">same as when</font><font color="#CCCCCC"> do unzipper</font><font color="#E5E5E5"> talk we get</font><font color="#CCCCCC"> you</font>

366
00:24:42,710 --> 00:24:48,340
get<font color="#E5E5E5"> an incremental file system will send</font>

367
00:24:45,530 --> 00:24:48,340
<font color="#E5E5E5">you more about it</font>

368
00:24:50,160 --> 00:25:01,030
so this is what we saw before<font color="#E5E5E5"> so we will</font>

369
00:24:56,890 --> 00:25:02,860
simulate<font color="#CCCCCC"> the instruction of content</font>

370
00:25:01,030 --> 00:25:05,740
because at the<font color="#CCCCCC"> end of the day</font><font color="#E5E5E5"> is an</font>

371
00:25:02,860 --> 00:25:11,790
image<font color="#E5E5E5"> because when you</font><font color="#CCCCCC"> are within a</font>

372
00:25:05,740 --> 00:25:14,620
<font color="#E5E5E5">jogger image to see a file system and</font>

373
00:25:11,790 --> 00:25:19,470
that's what makes up an incremental<font color="#E5E5E5"> file</font>

374
00:25:14,620 --> 00:25:19,469
system<font color="#E5E5E5"> so it takes the first layer and</font>

375
00:25:20,400 --> 00:25:26,320
<font color="#CCCCCC">then</font><font color="#E5E5E5"> it takes it to</font><font color="#CCCCCC"> the directory and</font>

376
00:25:23,950 --> 00:25:30,900
we'll have the first<font color="#E5E5E5"> parts of the file</font>

377
00:25:26,320 --> 00:25:41,320
structure same thing<font color="#E5E5E5"> for the second</font>

378
00:25:30,900 --> 00:25:45,690
layer<font color="#CCCCCC"> and then</font><font color="#E5E5E5"> the last layer yoga</font>

379
00:25:41,320 --> 00:25:45,689
so now we have our<font color="#CCCCCC"> final structure</font>

380
00:25:45,960 --> 00:25:53,290
sufferance<font color="#E5E5E5"> is internet</font><font color="#CCCCCC"> saga file</font><font color="#E5E5E5"> it will</font>

381
00:25:48,760 --> 00:25:55,990
have defined that we want to<font color="#CCCCCC"> base it in</font>

382
00:25:53,290 --> 00:25:59,139
the Python<font color="#E5E5E5"> image device on image</font><font color="#CCCCCC"> hazards</font>

383
00:25:55,990 --> 00:26:02,170
on layers and then we<font color="#CCCCCC"> are clear to</font>

384
00:25:59,140 --> 00:26:04,930
install<font color="#E5E5E5"> things that layer is working on</font>

385
00:26:02,170 --> 00:26:09,100
the previous data<font color="#E5E5E5"> because when you do a</font>

386
00:26:04,930 --> 00:26:12,810
dollar bill<font color="#E5E5E5"> you are running the image</font>

387
00:26:09,100 --> 00:26:18,100
and you are<font color="#CCCCCC"> modifying the previous image</font>

388
00:26:12,810 --> 00:26:21,460
and if<font color="#E5E5E5"> needed to get to see the contents</font>

389
00:26:18,100 --> 00:26:25,000
of the previous layer<font color="#E5E5E5"> right yes</font>

390
00:26:21,460 --> 00:26:29,040
important information there<font color="#CCCCCC"> so and</font><font color="#E5E5E5"> this</font>

391
00:26:25,000 --> 00:26:29,040
is<font color="#E5E5E5"> the directory we will be working on</font>

392
00:26:32,630 --> 00:26:42,440
and so what are you telling<font color="#CCCCCC"> me about</font>

393
00:26:34,430 --> 00:26:44,600
<font color="#E5E5E5">that's the face</font><font color="#CCCCCC"> that he's got it when it</font>

394
00:26:42,440 --> 00:26:46,700
comes<font color="#E5E5E5"> to manipulating the image first of</font>

395
00:26:44,600 --> 00:26:49,399
all you say why do I want to<font color="#E5E5E5"> do that if</font>

396
00:26:46,700 --> 00:26:56,780
it is so complicated<font color="#CCCCCC"> well they help us</font>

397
00:26:49,400 --> 00:26:58,400
<font color="#E5E5E5">change the environment variable so this</font>

398
00:26:56,780 --> 00:26:59,120
<font color="#E5E5E5">is important</font><font color="#CCCCCC"> so just understand we have</font>

399
00:26:58,400 --> 00:27:01,820
the dockerfile

400
00:26:59,120 --> 00:27:03,649
on the<font color="#CCCCCC"> Left</font><font color="#E5E5E5"> these</font><font color="#CCCCCC"> are the</font><font color="#E5E5E5"> building</font>

401
00:27:01,820 --> 00:27:05,780
instructions and then right<font color="#CCCCCC"> on the</font>

402
00:27:03,650 --> 00:27:08,960
center we have<font color="#CCCCCC"> the already</font><font color="#E5E5E5"> built image</font>

403
00:27:05,780 --> 00:27:10,940
so<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have this thing on</font><font color="#E5E5E5"> the left part</font>

404
00:27:08,960 --> 00:27:13,670
on the<font color="#CCCCCC"> left</font><font color="#E5E5E5"> we may not leave this at all</font>

405
00:27:10,940 --> 00:27:15,650
<font color="#E5E5E5">but our certain point is that the image</font>

406
00:27:13,670 --> 00:27:18,680
is<font color="#E5E5E5"> fully built</font><font color="#CCCCCC"> is fully packaged</font>

407
00:27:15,650 --> 00:27:20,420
everything<font color="#CCCCCC"> is pre-installed</font><font color="#E5E5E5"> on the tars</font>

408
00:27:18,680 --> 00:27:24,470
<font color="#E5E5E5">that is to say that lots of information</font>

409
00:27:20,420 --> 00:27:30,470
<font color="#E5E5E5">has been lost in these face of stage of</font>

410
00:27:24,470 --> 00:27:34,210
<font color="#E5E5E5">building so on that third point we just</font>

411
00:27:30,470 --> 00:27:38,330
<font color="#E5E5E5">want to make modifications and the</font>

412
00:27:34,210 --> 00:27:40,130
future execution<font color="#E5E5E5"> environment so what is</font>

413
00:27:38,330 --> 00:27:42,649
complete change we can<font color="#CCCCCC"> change the</font><font color="#E5E5E5"> entry</font>

414
00:27:40,130 --> 00:27:47,050
point we can add<font color="#E5E5E5"> modifier files and</font>

415
00:27:42,650 --> 00:27:53,620
analyze images for instance to find<font color="#CCCCCC"> ramp</font>

416
00:27:47,050 --> 00:27:55,970
<font color="#CCCCCC">flows failures it's a trap so to</font>

417
00:27:53,620 --> 00:28:00,379
manipulate an image you have to do the

418
00:27:55,970 --> 00:28:02,890
following<font color="#CCCCCC"> so we do have to work with the</font>

419
00:28:00,380 --> 00:28:02,890
manifest

420
00:28:03,740 --> 00:28:13,370
you also have to deal with<font color="#CCCCCC"> the</font><font color="#E5E5E5"> reference</font>

421
00:28:09,080 --> 00:28:18,289
<font color="#E5E5E5">of it and the action layer so this means</font>

422
00:28:13,370 --> 00:28:22,129
that<font color="#E5E5E5"> any change even if the minor change</font>

423
00:28:18,289 --> 00:28:24,830
that you make on<font color="#CCCCCC"> a talk layer</font><font color="#E5E5E5"> there is a</font>

424
00:28:22,130 --> 00:28:30,130
<font color="#E5E5E5">cascade</font><font color="#CCCCCC"> of things that you</font><font color="#E5E5E5"> have to</font>

425
00:28:24,830 --> 00:28:32,029
change<font color="#E5E5E5"> and this is what give sense to</font>

426
00:28:30,130 --> 00:28:33,980
everything<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> are telling you now</font>

427
00:28:32,029 --> 00:28:36,200
<font color="#CCCCCC">so</font><font color="#E5E5E5"> braces if you want to add a new file</font>

428
00:28:33,980 --> 00:28:40,399
there<font color="#E5E5E5"> do you have to generate a new</font>

429
00:28:36,200 --> 00:28:44,630
<font color="#CCCCCC">third</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> gods TZ and that will generate</font>

430
00:28:40,399 --> 00:28:48,590
<font color="#CCCCCC">a new</font><font color="#E5E5E5"> hash and then we will need to</font>

431
00:28:44,630 --> 00:28:50,450
update each of these files<font color="#E5E5E5"> and each of</font>

432
00:28:48,590 --> 00:28:53,389
these files have reference<font color="#E5E5E5"> to each other</font>

433
00:28:50,450 --> 00:28:55,789
<font color="#CCCCCC">of course you can do</font><font color="#E5E5E5"> that manually</font>

434
00:28:53,390 --> 00:29:03,049
<font color="#E5E5E5">therefore that's really really hard work</font>

435
00:28:55,789 --> 00:29:07,490
<font color="#CCCCCC">oh this was not</font><font color="#E5E5E5"> expected</font><font color="#CCCCCC"> I think this is</font>

436
00:29:03,049 --> 00:29:14,289
a<font color="#E5E5E5"> copy-paste yeah I know that this is</font>

437
00:29:07,490 --> 00:29:14,289
boring so<font color="#CCCCCC"> attacks</font>

438
00:29:16,190 --> 00:29:24,390
what happens if someone introduces<font color="#E5E5E5"> bug</font>

439
00:29:19,500 --> 00:29:26,760
in the lair well it will try<font color="#CCCCCC"> an eyes our</font>

440
00:29:24,390 --> 00:29:31,620
image but realizing an image is not as

441
00:29:26,760 --> 00:29:34,260
<font color="#CCCCCC">simple as it</font><font color="#E5E5E5"> may look well one of the</font>

442
00:29:31,620 --> 00:29:37,709
images maybe this one trillion eyes<font color="#E5E5E5"> and</font>

443
00:29:34,260 --> 00:29:40,650
what are the implications of royal<font color="#E5E5E5"> icing</font>

444
00:29:37,710 --> 00:29:45,270
<font color="#E5E5E5">an image we are going to do that we are</font>

445
00:29:40,650 --> 00:29:47,159
<font color="#E5E5E5">going to use inject LD preload to</font>

446
00:29:45,270 --> 00:29:50,870
intercept<font color="#E5E5E5"> though every time</font><font color="#CCCCCC"> a binary</font><font color="#E5E5E5"> is</font>

447
00:29:47,159 --> 00:29:54,090
executed we will be launching<font color="#CCCCCC"> something</font>

448
00:29:50,870 --> 00:29:58,379
so the process is<font color="#E5E5E5"> as follows imagine and</font>

449
00:29:54,090 --> 00:30:00,899
it<font color="#CCCCCC"> inks or passion whatever do is</font>

450
00:29:58,380 --> 00:30:04,500
executed it communicates itself with the

451
00:30:00,900 --> 00:30:09,030
libraries when it receives<font color="#E5E5E5"> command I</font>

452
00:30:04,500 --> 00:30:11,669
query from<font color="#E5E5E5"> the client so then the shell</font>

453
00:30:09,030 --> 00:30:15,120
is executed well actually the LD preload

454
00:30:11,669 --> 00:30:18,289
is executed and then as reverse inverse

455
00:30:15,120 --> 00:30:18,289
action is open

456
00:30:21,770 --> 00:30:28,429
so<font color="#E5E5E5"> I decided</font><font color="#CCCCCC"> to exact LD preload but I</font>

457
00:30:24,830 --> 00:30:32,418
could have<font color="#E5E5E5"> injected anything</font><font color="#CCCCCC"> else</font><font color="#E5E5E5"> so in</font>

458
00:30:28,429 --> 00:30:36,020
one of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> layers we are going to modify</font>

459
00:30:32,419 --> 00:30:38,570
the<font color="#E5E5E5"> environment</font><font color="#CCCCCC"> variable so that it</font>

460
00:30:36,020 --> 00:30:40,070
<font color="#CCCCCC">points at one of</font><font color="#E5E5E5"> our</font><font color="#CCCCCC"> library you note</font>

461
00:30:38,570 --> 00:30:41,510
that<font color="#CCCCCC"> in Linux when you do that the</font>

462
00:30:40,070 --> 00:30:44,360
binaries that<font color="#E5E5E5"> are executed the first</font>

463
00:30:41,510 --> 00:30:46,820
<font color="#CCCCCC">thing that they do is to upload the</font>

464
00:30:44,360 --> 00:30:53,449
library that is used<font color="#E5E5E5"> for</font><font color="#CCCCCC"> debugging etc</font>

465
00:30:46,820 --> 00:30:56,090
in our case we have made a library the

466
00:30:53,450 --> 00:30:57,830
moment is built as a builder is executed

467
00:30:56,090 --> 00:31:02,049
reverse<font color="#E5E5E5"> as serious in a different</font>

468
00:30:57,830 --> 00:31:06,860
process<font color="#CCCCCC"> and then the shell is connected</font>

469
00:31:02,049 --> 00:31:09,789
<font color="#E5E5E5">while the container continues goes ahead</font>

470
00:31:06,860 --> 00:31:11,928
with<font color="#E5E5E5"> these</font><font color="#CCCCCC"> structures with this slow and</font>

471
00:31:09,789 --> 00:31:16,158
we did that but we<font color="#E5E5E5"> could have done</font>

472
00:31:11,929 --> 00:31:22,070
<font color="#E5E5E5">something else</font><font color="#CCCCCC"> and for</font><font color="#E5E5E5"> that we have</font>

473
00:31:16,159 --> 00:31:24,320
<font color="#CCCCCC">created a tool so you cannot download it</font>

474
00:31:22,070 --> 00:31:28,730
by now<font color="#E5E5E5"> not before</font><font color="#CCCCCC"> the end of</font><font color="#E5E5E5"> this</font>

475
00:31:24,320 --> 00:31:32,289
presentation<font color="#CCCCCC"> so we just built</font><font color="#E5E5E5"> this tool</font>

476
00:31:28,730 --> 00:31:32,289
for testing

477
00:31:45,850 --> 00:31:52,199
so when we execute<font color="#CCCCCC"> docker and</font><font color="#E5E5E5"> scan first</font>

478
00:31:49,420 --> 00:31:54,760
of all we get three options

479
00:31:52,200 --> 00:31:58,420
well the<font color="#CCCCCC"> discoverer wanted to show it</font><font color="#E5E5E5"> to</font>

480
00:31:54,760 --> 00:32:02,100
you but we<font color="#CCCCCC"> didn't have time to</font><font color="#E5E5E5"> implement</font>

481
00:31:58,420 --> 00:32:05,110
it<font color="#CCCCCC"> so forget about</font><font color="#E5E5E5"> it</font>

482
00:32:02,100 --> 00:32:07,270
so because we are now working<font color="#E5E5E5"> with these</font>

483
00:32:05,110 --> 00:32:09,189
docker images<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Saturdays</font><font color="#E5E5E5"> that we can</font>

484
00:32:07,270 --> 00:32:11,830
do with the docker image<font color="#CCCCCC"> garden</font><font color="#E5E5E5"> points</font>

485
00:32:09,190 --> 00:32:14,850
are coming<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> access information and</font>

486
00:32:11,830 --> 00:32:17,350
modify it<font color="#E5E5E5"> so that starts step-by-step</font>

487
00:32:14,850 --> 00:32:19,270
with extract information from<font color="#E5E5E5"> an image</font>

488
00:32:17,350 --> 00:32:27,040
but first we need an image<font color="#E5E5E5"> of course how</font>

489
00:32:19,270 --> 00:32:32,889
do<font color="#E5E5E5"> we do this this is there is something</font>

490
00:32:27,040 --> 00:32:35,050
we didn't explain correctly the origin

491
00:32:32,890 --> 00:32:38,440
of<font color="#E5E5E5"> this talk comes from the fact that</font>

492
00:32:35,050 --> 00:32:42,790
one<font color="#CCCCCC"> day we were working</font><font color="#E5E5E5"> and I said Danny</font>

493
00:32:38,440 --> 00:32:45,700
<font color="#CCCCCC">I'm sure if I do a search for open</font>

494
00:32:42,790 --> 00:32:50,320
registers in the<font color="#E5E5E5"> world did we tell they</font>

495
00:32:45,700 --> 00:32:52,540
will tell everyone about this anyway<font color="#E5E5E5"> so</font>

496
00:32:50,320 --> 00:32:55,450
we started searching<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we found</font><font color="#E5E5E5"> a lot</font>

497
00:32:52,540 --> 00:33:00,159
<font color="#CCCCCC">of open registries no need for them to</font>

498
00:32:55,450 --> 00:33:02,410
<font color="#CCCCCC">be open</font><font color="#E5E5E5"> by the way we can be in a</font>

499
00:33:00,160 --> 00:33:07,800
development<font color="#CCCCCC"> network and capture</font>

500
00:33:02,410 --> 00:33:07,800
credentials quite an interesting<font color="#E5E5E5"> part</font>

501
00:33:09,570 --> 00:33:15,760
<font color="#CCCCCC">the problem is that we can access</font><font color="#E5E5E5"> a</font>

502
00:33:11,770 --> 00:33:18,280
registry<font color="#E5E5E5"> and then we can do things we</font>

503
00:33:15,760 --> 00:33:20,260
can download the images and I'll show

504
00:33:18,280 --> 00:33:22,149
<font color="#CCCCCC">you about registries in the middle but</font>

505
00:33:20,260 --> 00:33:24,970
<font color="#CCCCCC">the first</font><font color="#E5E5E5"> thing we'll do is to take the</font>

506
00:33:22,150 --> 00:33:30,280
public registry<font color="#E5E5E5"> download an image from</font>

507
00:33:24,970 --> 00:33:33,240
wherever so it does the download but it

508
00:33:30,280 --> 00:33:33,240
doesn't execute it

509
00:33:34,660 --> 00:33:55,010
so what do we<font color="#E5E5E5"> do we get</font><font color="#CCCCCC"> the image and</font>

510
00:33:42,490 --> 00:34:00,320
store it<font color="#CCCCCC"> onto a file it exports into dot</font>

511
00:33:55,010 --> 00:34:06,770
<font color="#E5E5E5">tar if you do it this way this is where</font>

512
00:34:00,320 --> 00:34:10,940
it<font color="#E5E5E5"> is nothing</font><font color="#CCCCCC"> else so we now have the</font>

513
00:34:06,770 --> 00:34:18,050
image to play around let's extract<font color="#E5E5E5"> some</font>

514
00:34:10,940 --> 00:34:20,480
information<font color="#CCCCCC"> take a look at this it shows</font>

515
00:34:18,050 --> 00:34:26,929
information<font color="#E5E5E5"> meta</font><font color="#CCCCCC"> information about the</font>

516
00:34:20,480 --> 00:34:28,730
image<font color="#E5E5E5"> the author</font><font color="#CCCCCC"> well little things it</font>

517
00:34:26,929 --> 00:34:30,889
can be<font color="#E5E5E5"> porn as interesting</font><font color="#CCCCCC"> but some</font>

518
00:34:28,730 --> 00:34:32,960
we've got lots of information<font color="#E5E5E5"> my light</font>

519
00:34:30,889 --> 00:34:38,510
is option better when we try<font color="#CCCCCC"> to analyze</font>

520
00:34:32,960 --> 00:34:42,679
the image<font color="#E5E5E5"> looking for URLs pointing at</font>

521
00:34:38,510 --> 00:34:47,330
strange<font color="#CCCCCC"> places and we try to</font><font color="#E5E5E5"> reduce the</font>

522
00:34:42,679 --> 00:34:50,240
user<font color="#CCCCCC"> so the image</font><font color="#E5E5E5"> is being run by this</font>

523
00:34:47,330 --> 00:34:52,279
is an image running as root which<font color="#E5E5E5"> is</font>

524
00:34:50,239 --> 00:34:53,149
quite common but it's nonsense<font color="#E5E5E5"> that</font>

525
00:34:52,280 --> 00:34:55,909
that's<font color="#E5E5E5"> crazy</font>

526
00:34:53,149 --> 00:34:59,569
it's quite common<font color="#CCCCCC"> that images</font><font color="#E5E5E5"> are run as</font>

527
00:34:55,909 --> 00:35:01,670
root getting the user out<font color="#CCCCCC"> of this is</font>

528
00:34:59,570 --> 00:35:03,470
really<font color="#CCCCCC"> difficult because</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> usually</font>

529
00:35:01,670 --> 00:35:05,270
<font color="#CCCCCC">not in the meta information it might be</font>

530
00:35:03,470 --> 00:35:07,220
the user<font color="#CCCCCC"> that is running</font><font color="#E5E5E5"> the image but</font>

531
00:35:05,270 --> 00:35:10,070
it's quite common<font color="#E5E5E5"> to</font><font color="#CCCCCC"> have a shell script</font>

532
00:35:07,220 --> 00:35:15,890
<font color="#E5E5E5">within the shell scheduler</font><font color="#CCCCCC"> you can do a</font>

533
00:35:10,070 --> 00:35:18,110
<font color="#E5E5E5">sudo to go down in privileges so we've</font>

534
00:35:15,890 --> 00:35:20,750
done a number<font color="#E5E5E5"> of things in order to</font>

535
00:35:18,110 --> 00:35:24,320
derive that<font color="#CCCCCC"> information it works quite</font>

536
00:35:20,750 --> 00:35:26,260
well<font color="#CCCCCC"> for certain analysis it can be</font>

537
00:35:24,320 --> 00:35:28,330
quite<font color="#CCCCCC"> handy</font>

538
00:35:26,260 --> 00:35:32,140
especially it gives you the information

539
00:35:28,330 --> 00:35:35,560
<font color="#E5E5E5">when you download the image it tells you</font>

540
00:35:32,140 --> 00:35:37,650
<font color="#E5E5E5">about what you</font><font color="#CCCCCC"> can modify to get hold of</font>

541
00:35:35,560 --> 00:35:39,790
<font color="#E5E5E5">whatever you're looking</font><font color="#CCCCCC"> for</font>

542
00:35:37,650 --> 00:35:42,130
sometimes you modify the entry point and

543
00:35:39,790 --> 00:35:47,590
that's enough or modify the script<font color="#E5E5E5"> for</font>

544
00:35:42,130 --> 00:35:49,600
the entry point<font color="#E5E5E5"> whatever so we have</font>

545
00:35:47,590 --> 00:35:54,940
three commands<font color="#E5E5E5"> change the entry point</font>

546
00:35:49,600 --> 00:35:57,660
<font color="#E5E5E5">change the user we can escalate</font>

547
00:35:54,940 --> 00:36:02,070
privileges down but we also have the

548
00:35:57,660 --> 00:36:02,069
<font color="#E5E5E5">really nice option which is</font><font color="#CCCCCC"> Troy's nice</font>

549
00:36:03,450 --> 00:36:11,560
so when we do<font color="#CCCCCC"> turn</font><font color="#E5E5E5"> eyes we throw the</font>

550
00:36:07,570 --> 00:36:16,720
<font color="#CCCCCC">entire party okay everything goes on so</font>

551
00:36:11,560 --> 00:36:20,320
it goes for the image just look<font color="#E5E5E5"> point</font>

552
00:36:16,720 --> 00:36:22,720
<font color="#E5E5E5">and shoot</font><font color="#CCCCCC"> and then we tell the command</font>

553
00:36:20,320 --> 00:36:26,890
where we're going to be listening<font color="#CCCCCC"> on the</font>

554
00:36:22,720 --> 00:36:34,500
inverse<font color="#E5E5E5"> the inverted shell what is the</font>

555
00:36:26,890 --> 00:36:38,339
IP right<font color="#E5E5E5"> one</font><font color="#CCCCCC"> seven two whatever</font>

556
00:36:34,500 --> 00:36:38,340
don't try to hack me

557
00:36:39,190 --> 00:36:48,320
report<font color="#E5E5E5"> for the inverter shell and the</font>

558
00:36:45,440 --> 00:36:54,670
name for the<font color="#E5E5E5"> new container which is not</font>

559
00:36:48,320 --> 00:36:57,710
organized because<font color="#E5E5E5"> that's just magic</font>

560
00:36:54,670 --> 00:36:59,360
the<font color="#E5E5E5"> neutralized image is here and to</font>

561
00:36:57,710 --> 00:37:02,930
<font color="#CCCCCC">execute your inverted</font><font color="#E5E5E5"> shell just do a</font>

562
00:36:59,360 --> 00:37:09,280
copy and<font color="#CCCCCC"> paste that's</font><font color="#E5E5E5"> it</font>

563
00:37:02,930 --> 00:37:11,750
that's what we need we are<font color="#E5E5E5"> very obedient</font>

564
00:37:09,280 --> 00:37:19,490
<font color="#E5E5E5">so this is a command we will not write</font>

565
00:37:11,750 --> 00:37:22,910
the IP because<font color="#E5E5E5"> we know it so we stay</font>

566
00:37:19,490 --> 00:37:25,790
there listening<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we'll now take</font><font color="#E5E5E5"> the</font>

567
00:37:22,910 --> 00:37:27,620
image<font color="#E5E5E5"> and load it onto</font><font color="#CCCCCC"> docker</font><font color="#E5E5E5"> in theory</font>

568
00:37:25,790 --> 00:37:30,080
you can then<font color="#CCCCCC"> upload it to a registry and</font>

569
00:37:27,620 --> 00:37:31,310
so on and so forth<font color="#E5E5E5"> but for the time</font>

570
00:37:30,080 --> 00:37:35,120
being<font color="#CCCCCC"> to have</font><font color="#E5E5E5"> a controlled environment</font>

571
00:37:31,310 --> 00:37:41,029
<font color="#CCCCCC">let's do</font><font color="#E5E5E5"> it this way we tell it to load</font>

572
00:37:35,120 --> 00:37:43,160
<font color="#E5E5E5">the new the</font><font color="#CCCCCC"> new container take a look at</font>

573
00:37:41,030 --> 00:37:47,300
this this<font color="#E5E5E5"> is cool it is telling</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> so</font>

574
00:37:43,160 --> 00:37:48,200
<font color="#E5E5E5">you have an image but you're uploading</font>

575
00:37:47,300 --> 00:37:52,010
<font color="#E5E5E5">something else</font>

576
00:37:48,200 --> 00:37:55,850
sober<font color="#CCCCCC"> it will be</font><font color="#E5E5E5"> replaced so it replaces</font>

577
00:37:52,010 --> 00:37:58,420
<font color="#E5E5E5">it with the Trojan I'd option we now</font>

578
00:37:55,850 --> 00:37:58,420
execute

579
00:37:59,220 --> 00:38:05,730
this container<font color="#E5E5E5"> what should happen when</font>

580
00:38:02,609 --> 00:38:10,619
when weird<font color="#CCCCCC"> confuses we should see an</font>

581
00:38:05,730 --> 00:38:12,840
inverted shell connecting people<font color="#E5E5E5"> we're</font>

582
00:38:10,619 --> 00:38:15,720
<font color="#E5E5E5">not connected if we do</font><font color="#CCCCCC"> NLF within the</font>

583
00:38:12,840 --> 00:38:17,510
container<font color="#CCCCCC"> look</font><font color="#E5E5E5"> it up</font><font color="#CCCCCC"> I'm so cool I'm so</font>

584
00:38:15,720 --> 00:38:25,259
easy

585
00:38:17,510 --> 00:38:26,910
that means they liked it<font color="#E5E5E5"> he'll now tell</font>

586
00:38:25,260 --> 00:38:32,580
you what I started<font color="#E5E5E5"> telling</font><font color="#CCCCCC"> you in a</font>

587
00:38:26,910 --> 00:38:36,690
random way<font color="#E5E5E5"> I went into panic so will now</font>

588
00:38:32,580 --> 00:38:41,369
tell<font color="#CCCCCC"> you in a controlled</font><font color="#E5E5E5"> manner so we've</font>

589
00:38:36,690 --> 00:38:45,930
seen the image and will now abuse the

590
00:38:41,369 --> 00:38:51,410
docker registry<font color="#CCCCCC"> we'll do strange things</font>

591
00:38:45,930 --> 00:38:54,410
to registries so it's 20 minutes<font color="#E5E5E5"> left</font>

592
00:38:51,410 --> 00:39:00,480
<font color="#E5E5E5">because we were late starting today</font>

593
00:38:54,410 --> 00:39:03,810
<font color="#E5E5E5">anyway what is a registry a registry is</font>

594
00:39:00,480 --> 00:39:09,060
a system to store<font color="#CCCCCC"> images</font><font color="#E5E5E5"> it indexes</font>

595
00:39:03,810 --> 00:39:14,640
<font color="#E5E5E5">images by hash so using the hash the</font>

596
00:39:09,060 --> 00:39:17,520
hashes we saw it creates a logical

597
00:39:14,640 --> 00:39:22,730
structure for the images which<font color="#E5E5E5"> is</font>

598
00:39:17,520 --> 00:39:22,730
repository<font color="#E5E5E5"> / image semicolon tag</font>

599
00:39:26,480 --> 00:39:32,550
it takes it<font color="#CCCCCC"> you sister to get ham by</font>

600
00:39:29,070 --> 00:39:36,180
default<font color="#E5E5E5"> but this is the image and tack</font>

601
00:39:32,550 --> 00:39:42,600
is last it exposes a breast<font color="#CCCCCC"> API to</font>

602
00:39:36,180 --> 00:39:44,640
interact the API is good<font color="#E5E5E5"> enough but it</font>

603
00:39:42,600 --> 00:39:49,020
may<font color="#E5E5E5"> be it may</font><font color="#CCCCCC"> get very</font><font color="#E5E5E5"> tricky to follow</font>

604
00:39:44,640 --> 00:39:54,118
the entire workflow deep deep down<font color="#E5E5E5"> this</font>

605
00:39:49,020 --> 00:39:56,420
is an image of<font color="#E5E5E5"> a registry it is</font>

606
00:39:54,119 --> 00:40:01,050
<font color="#E5E5E5">something that's those things and</font>

607
00:39:56,420 --> 00:40:04,710
indexes index<font color="#E5E5E5"> ISM that's a registry</font><font color="#CCCCCC"> ok a</font>

608
00:40:01,050 --> 00:40:06,869
place to store<font color="#E5E5E5"> images but this is an</font>

609
00:40:04,710 --> 00:40:10,080
essential<font color="#CCCCCC"> element in</font><font color="#E5E5E5"> the execution</font>

610
00:40:06,869 --> 00:40:12,560
environment for<font color="#CCCCCC"> docker</font><font color="#E5E5E5"> so how does the</font>

611
00:40:10,080 --> 00:40:16,259
registry store the images to start with

612
00:40:12,560 --> 00:40:18,600
it stores the images from the<font color="#CCCCCC"> footage</font>

613
00:40:16,260 --> 00:40:23,190
<font color="#CCCCCC">that</font><font color="#E5E5E5"> we have uploaded and then</font><font color="#CCCCCC"> it</font>

614
00:40:18,600 --> 00:40:26,819
indexes<font color="#CCCCCC"> the tags which are really</font><font color="#E5E5E5"> the</font>

615
00:40:23,190 --> 00:40:29,100
versions<font color="#CCCCCC"> we want to attach to the</font>

616
00:40:26,820 --> 00:40:31,800
different images<font color="#CCCCCC"> if you go for best</font>

617
00:40:29,100 --> 00:40:37,830
<font color="#E5E5E5">practices they use</font><font color="#CCCCCC"> they you should have</font>

618
00:40:31,800 --> 00:40:41,430
a latest<font color="#E5E5E5"> tag this is how it</font><font color="#CCCCCC"> matches</font>

619
00:40:37,830 --> 00:40:44,970
everything internally<font color="#CCCCCC"> ok so how</font><font color="#E5E5E5"> about</font>

620
00:40:41,430 --> 00:40:48,000
the process<font color="#E5E5E5"> to upload an image to a</font>

621
00:40:44,970 --> 00:40:52,049
registry<font color="#E5E5E5"> important detail will take into</font>

622
00:40:48,000 --> 00:40:54,119
<font color="#E5E5E5">account</font><font color="#CCCCCC"> to the left we have</font><font color="#E5E5E5"> an excited</font>

623
00:40:52,050 --> 00:40:58,070
client who wants to upload an image<font color="#CCCCCC"> to a</font>

624
00:40:54,119 --> 00:41:01,260
registry I love minions<font color="#CCCCCC"> I just love them</font>

625
00:40:58,070 --> 00:41:05,220
<font color="#E5E5E5">so the client</font><font color="#CCCCCC"> says</font><font color="#E5E5E5"> I want to upload the</font>

626
00:41:01,260 --> 00:41:07,950
image<font color="#E5E5E5"> for a minion the registry says</font>

627
00:41:05,220 --> 00:41:11,129
okay here is<font color="#CCCCCC"> your upload path</font><font color="#E5E5E5"> what does</font>

628
00:41:07,950 --> 00:41:13,470
that mean<font color="#E5E5E5"> that means when you don't</font>

629
00:41:11,130 --> 00:41:16,500
upload directly you ask the registry<font color="#E5E5E5"> to</font>

630
00:41:13,470 --> 00:41:18,299
tell you what URL can I use<font color="#E5E5E5"> to upload my</font>

631
00:41:16,500 --> 00:41:21,780
content<font color="#CCCCCC"> ok so this is an</font><font color="#E5E5E5"> intermediate</font>

632
00:41:18,300 --> 00:41:25,070
step and in that<font color="#CCCCCC"> path</font><font color="#E5E5E5"> you do upload the</font>

633
00:41:21,780 --> 00:41:26,609
image not complicated<font color="#E5E5E5"> but a bit</font>

634
00:41:25,070 --> 00:41:28,140
cumbersome yes

635
00:41:26,609 --> 00:41:31,380
so you upload the image and there it

636
00:41:28,140 --> 00:41:34,200
goes<font color="#CCCCCC"> and then</font><font color="#E5E5E5"> something is generated a</font>

637
00:41:31,380 --> 00:41:35,970
hash is generated associated to that

638
00:41:34,200 --> 00:41:38,549
<font color="#E5E5E5">image</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> only the client knows about</font>

639
00:41:35,970 --> 00:41:40,890
<font color="#CCCCCC">ok and last</font><font color="#E5E5E5"> but not least</font>

640
00:41:38,550 --> 00:41:44,580
we tell the registry well with that

641
00:41:40,890 --> 00:41:46,230
image<font color="#E5E5E5"> your associate the latest</font><font color="#CCCCCC"> tack or</font>

642
00:41:44,580 --> 00:41:52,730
whatever<font color="#E5E5E5"> tack we're interested in and</font>

643
00:41:46,230 --> 00:41:55,620
that's<font color="#E5E5E5"> it so cool everyone happy</font><font color="#CCCCCC"> but</font>

644
00:41:52,730 --> 00:41:58,050
<font color="#CCCCCC">what happens</font><font color="#E5E5E5"> if this last element</font><font color="#CCCCCC"> we</font>

645
00:41:55,620 --> 00:41:59,520
don't do because<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> client doing</font>

646
00:41:58,050 --> 00:42:02,040
<font color="#CCCCCC">it</font><font color="#E5E5E5"> not the server</font><font color="#CCCCCC"> okay</font>

647
00:41:59,520 --> 00:42:08,370
important<font color="#E5E5E5"> an important thing it is not</font>

648
00:42:02,040 --> 00:42:11,640
<font color="#CCCCCC">the server applying the tag so we</font><font color="#E5E5E5"> show</font>

649
00:42:08,370 --> 00:42:16,520
you what<font color="#E5E5E5"> would</font><font color="#CCCCCC"> happen if we uploaded</font>

650
00:42:11,640 --> 00:42:19,890
files and didn't sign attack to them

651
00:42:16,520 --> 00:42:21,509
<font color="#E5E5E5">okay that can</font><font color="#CCCCCC"> happen</font><font color="#E5E5E5"> by by the way the</font>

652
00:42:19,890 --> 00:42:23,549
<font color="#CCCCCC">doctor Klein doesn't</font><font color="#E5E5E5"> allow you to do</font>

653
00:42:21,510 --> 00:42:27,120
that<font color="#E5E5E5"> it wasn't designed with that</font><font color="#CCCCCC"> in</font>

654
00:42:23,550 --> 00:42:32,040
<font color="#E5E5E5">mind files are loaded without tags so we</font>

655
00:42:27,120 --> 00:42:36,630
<font color="#CCCCCC">stopped this I have a registry running</font>

656
00:42:32,040 --> 00:42:43,350
here by the way all of<font color="#E5E5E5"> this works with</font>

657
00:42:36,630 --> 00:42:46,590
the registry by default this hundreds<font color="#E5E5E5"> of</font>

658
00:42:43,350 --> 00:42:51,110
them as<font color="#CCCCCC"> Alfonzo was telling us yesterday</font>

659
00:42:46,590 --> 00:42:51,110
<font color="#CCCCCC">well there's lots of registries</font>

660
00:42:56,589 --> 00:43:02,509
the original<font color="#E5E5E5"> document for dr.</font><font color="#CCCCCC"> cells you</font>

661
00:42:59,810 --> 00:43:11,240
execute the register<font color="#E5E5E5"> this way</font><font color="#CCCCCC"> and forget</font>

662
00:43:02,510 --> 00:43:14,329
about<font color="#E5E5E5"> it easy obviously you can go for</font>

663
00:43:11,240 --> 00:43:16,640
other<font color="#CCCCCC"> options</font><font color="#E5E5E5"> and make it as twisted as</font>

664
00:43:14,329 --> 00:43:20,079
you want<font color="#CCCCCC"> okay step by step we have a</font>

665
00:43:16,640 --> 00:43:20,078
registry the first thing we will do

666
00:43:21,730 --> 00:43:27,260
after dr. P it's listening on port 5000

667
00:43:25,790 --> 00:43:31,910
which is<font color="#E5E5E5"> the plea default port for</font>

668
00:43:27,260 --> 00:43:35,810
registries in info it only asks<font color="#E5E5E5"> for the</font>

669
00:43:31,910 --> 00:43:39,230
location for<font color="#E5E5E5"> the registry it tells us</font>

670
00:43:35,810 --> 00:43:42,259
<font color="#CCCCCC">that we are running version 2 that's the</font>

671
00:43:39,230 --> 00:43:44,599
address and it is<font color="#E5E5E5"> doing authentication</font>

672
00:43:42,260 --> 00:43:47,270
<font color="#CCCCCC">it does a number of</font><font color="#E5E5E5"> tests to see how you</font>

673
00:43:44,599 --> 00:43:48,829
were authenticated in the first place it

674
00:43:47,270 --> 00:43:51,650
was it will<font color="#E5E5E5"> tell you about the remote</font>

675
00:43:48,829 --> 00:43:54,829
registry authentication<font color="#E5E5E5"> I list the</font>

676
00:43:51,650 --> 00:43:57,020
directories it's a bit dirty<font color="#E5E5E5"> because I</font>

677
00:43:54,829 --> 00:44:00,290
haven't deleted information<font color="#CCCCCC"> from</font><font color="#E5E5E5"> this</font>

678
00:43:57,020 --> 00:44:05,089
<font color="#CCCCCC">data here</font><font color="#E5E5E5"> we would see</font><font color="#CCCCCC"> all the</font>

679
00:44:00,290 --> 00:44:07,339
repositories<font color="#E5E5E5"> that we are using</font><font color="#CCCCCC"> ok well</font>

680
00:44:05,089 --> 00:44:11,900
if we want<font color="#E5E5E5"> to download or upload we need</font>

681
00:44:07,339 --> 00:44:16,480
to know what there<font color="#CCCCCC"> is so if</font><font color="#E5E5E5"> X access</font>

682
00:44:11,900 --> 00:44:19,069
some information<font color="#CCCCCC"> what</font><font color="#E5E5E5"> we will do now is</font>

683
00:44:16,480 --> 00:44:22,280
<font color="#E5E5E5">simulating what I just said</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> try</font><font color="#CCCCCC"> to</font>

684
00:44:19,069 --> 00:44:27,529
<font color="#E5E5E5">tell</font><font color="#CCCCCC"> docker scan that we want to</font><font color="#E5E5E5"> upload</font>

685
00:44:22,280 --> 00:44:29,359
<font color="#CCCCCC">an image we want</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> upload a file I'm</font>

686
00:44:27,530 --> 00:44:32,359
not talking<font color="#CCCCCC"> about images ok I'm talking</font>

687
00:44:29,359 --> 00:44:38,380
<font color="#CCCCCC">about random</font><font color="#E5E5E5"> files so I'm generate</font>

688
00:44:32,359 --> 00:44:38,380
something<font color="#E5E5E5"> randomly hello.txt</font>

689
00:44:39,040 --> 00:44:50,740
and then I tell<font color="#E5E5E5"> it I give it the URL for</font>

690
00:44:45,370 --> 00:44:53,440
<font color="#CCCCCC">the registry and then I say what we want</font>

691
00:44:50,740 --> 00:44:58,359
to<font color="#CCCCCC"> upload so it goes up because it's</font>

692
00:44:53,440 --> 00:45:03,070
free<font color="#E5E5E5"> and it gives us a long amount of</font>

693
00:44:58,360 --> 00:45:05,170
text by<font color="#E5E5E5"> the way only</font><font color="#CCCCCC"> you know this not</font>

694
00:45:03,070 --> 00:45:06,790
<font color="#E5E5E5">even the sysadmin knows about</font><font color="#CCCCCC"> them well</font>

695
00:45:05,170 --> 00:45:09,400
this is that min-koo go to the database

696
00:45:06,790 --> 00:45:11,710
and<font color="#E5E5E5"> find</font><font color="#CCCCCC"> out about this but unless the</font>

697
00:45:09,400 --> 00:45:15,400
number is open<font color="#CCCCCC"> it's you and you only</font>

698
00:45:11,710 --> 00:45:17,170
<font color="#CCCCCC">that know about</font><font color="#E5E5E5"> this you cannot get</font><font color="#CCCCCC"> all</font>

699
00:45:15,400 --> 00:45:19,680
<font color="#CCCCCC">that information through</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> API and</font>

700
00:45:17,170 --> 00:45:23,590
there's no way<font color="#CCCCCC"> to derive that</font><font color="#E5E5E5"> digest</font>

701
00:45:19,680 --> 00:45:28,750
that I just<font color="#E5E5E5"> cannot be derived well there</font>

702
00:45:23,590 --> 00:45:31,140
is a way but<font color="#E5E5E5"> not</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> easy one before</font>

703
00:45:28,750 --> 00:45:34,360
showing<font color="#E5E5E5"> that I can download the image</font>

704
00:45:31,140 --> 00:45:36,940
when we do a<font color="#E5E5E5"> process for</font><font color="#CCCCCC"> example</font>

705
00:45:34,360 --> 00:45:39,190
download an<font color="#CCCCCC"> image for me</font><font color="#E5E5E5"> the registry</font>

706
00:45:36,940 --> 00:45:40,630
internally<font color="#E5E5E5"> what does it do with</font><font color="#CCCCCC"> the</font>

707
00:45:39,190 --> 00:45:45,880
client well it so it<font color="#E5E5E5"> gives</font><font color="#CCCCCC"> it the</font>

708
00:45:40,630 --> 00:45:48,220
repositories it gives it the image and

709
00:45:45,880 --> 00:45:51,190
then it says give me the<font color="#CCCCCC"> tags there</font><font color="#E5E5E5"> is a</font>

710
00:45:48,220 --> 00:45:53,200
<font color="#CCCCCC">list of</font><font color="#E5E5E5"> tags</font><font color="#CCCCCC"> showing</font><font color="#E5E5E5"> others</font><font color="#CCCCCC"> read for</font>

711
00:45:51,190 --> 00:45:58,600
<font color="#E5E5E5">this time give me the digest give me the</font>

712
00:45:53,200 --> 00:46:01,629
hash this<font color="#E5E5E5"> is your hash and then it says</font>

713
00:45:58,600 --> 00:46:03,490
give<font color="#CCCCCC"> me an image for this hash</font><font color="#E5E5E5"> so I can</font>

714
00:46:01,630 --> 00:46:05,920
get quite numbers of<font color="#CCCCCC"> it but if we</font>

715
00:46:03,490 --> 00:46:08,350
haven't<font color="#E5E5E5"> assigned a tag how do we get a</font>

716
00:46:05,920 --> 00:46:10,180
digest<font color="#CCCCCC"> how do</font><font color="#E5E5E5"> we get a hash which is</font>

717
00:46:08,350 --> 00:46:14,589
what we<font color="#E5E5E5"> just done there's no way you're</font>

718
00:46:10,180 --> 00:46:18,779
getting it<font color="#E5E5E5"> so first in order to</font><font color="#CCCCCC"> download</font>

719
00:46:14,590 --> 00:46:18,780
this let's open a browser

720
00:46:21,100 --> 00:46:29,200
this is downloaded<font color="#E5E5E5"> nom we open it the</font>

721
00:46:26,060 --> 00:46:29,200
content that<font color="#E5E5E5"> we have uploaded</font>

722
00:46:43,250 --> 00:46:51,750
we will do the<font color="#CCCCCC"> info</font><font color="#E5E5E5"> thing again so you</font>

723
00:46:47,070 --> 00:46:55,380
can<font color="#E5E5E5"> see there is a long string here</font><font color="#CCCCCC"> to</font>

724
00:46:51,750 --> 00:46:59,880
<font color="#CCCCCC">make it easier to</font><font color="#E5E5E5"> for a random name to</font>

725
00:46:55,380 --> 00:47:01,470
be generated you<font color="#E5E5E5"> can use a name you can</font>

726
00:46:59,880 --> 00:47:05,250
<font color="#CCCCCC">use your own name</font><font color="#E5E5E5"> but if you want to</font>

727
00:47:01,470 --> 00:47:07,609
keep things<font color="#E5E5E5"> simple</font><font color="#CCCCCC"> this is it</font><font color="#E5E5E5"> now if I</font>

728
00:47:05,250 --> 00:47:07,610
did this

729
00:47:14,509 --> 00:47:23,309
if<font color="#E5E5E5"> I wrote this in theory it should</font>

730
00:47:19,229 --> 00:47:25,140
<font color="#E5E5E5">download it it tells me there's no part</font>

731
00:47:23,309 --> 00:47:27,539
<font color="#E5E5E5">there's no references</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> cannot download</font>

732
00:47:25,140 --> 00:47:31,650
<font color="#E5E5E5">it because there's no references but if</font>

733
00:47:27,539 --> 00:47:35,059
we do it with a really cool tool which

734
00:47:31,650 --> 00:47:42,209
<font color="#E5E5E5">spell which</font><font color="#CCCCCC"> does</font><font color="#E5E5E5"> more complicated things</font>

735
00:47:35,059 --> 00:47:43,589
let's do a delete we wouldn't be able<font color="#E5E5E5"> to</font>

736
00:47:42,209 --> 00:47:48,959
do it<font color="#E5E5E5"> because there's no reference</font><font color="#CCCCCC"> for</font>

737
00:47:43,589 --> 00:47:54,209
this it asks<font color="#E5E5E5"> us around the image that we</font>

738
00:47:48,959 --> 00:47:57,509
want<font color="#E5E5E5"> to delete it</font><font color="#CCCCCC"> says I cannot obtain</font>

739
00:47:54,209 --> 00:47:59,549
the tag<font color="#E5E5E5"> there's no way to get that</font>

740
00:47:57,509 --> 00:48:02,160
information<font color="#CCCCCC"> and</font><font color="#E5E5E5"> something else which is</font>

741
00:47:59,549 --> 00:48:05,910
<font color="#E5E5E5">not</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> this life this is even funnier by</font>

742
00:48:02,160 --> 00:48:10,219
default when you do this command<font color="#E5E5E5"> you</font>

743
00:48:05,910 --> 00:48:12,629
cannot delete images<font color="#E5E5E5"> even if you could</font>

744
00:48:10,219 --> 00:48:15,059
you cannot delete an<font color="#CCCCCC"> image that</font><font color="#E5E5E5"> you</font>

745
00:48:12,630 --> 00:48:22,709
<font color="#E5E5E5">upload by default you will</font><font color="#CCCCCC"> need to</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> a</font>

746
00:48:15,059 --> 00:48:24,989
<font color="#E5E5E5">configuration file not only can you</font>

747
00:48:22,709 --> 00:48:26,759
upload malware which is a good thing<font color="#E5E5E5"> the</font>

748
00:48:24,989 --> 00:48:28,199
admin<font color="#E5E5E5"> cannot delete it because</font><font color="#CCCCCC"> there's</font>

749
00:48:26,759 --> 00:48:30,869
no reference<font color="#CCCCCC"> but even if he had a</font>

750
00:48:28,199 --> 00:48:33,269
reference<font color="#E5E5E5"> even if</font><font color="#CCCCCC"> the sysadmin had a</font>

751
00:48:30,869 --> 00:48:36,089
reference<font color="#E5E5E5"> by default they couldn't</font><font color="#CCCCCC"> they</font>

752
00:48:33,269 --> 00:48:37,948
cannot delete it<font color="#E5E5E5"> this is quite cool not</font>

753
00:48:36,089 --> 00:48:40,680
for the registry but<font color="#CCCCCC"> for us this</font><font color="#E5E5E5"> is so</font>

754
00:48:37,949 --> 00:48:43,289
cool<font color="#E5E5E5"> how about a layer</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> top</font><font color="#CCCCCC"> of it I</font>

755
00:48:40,680 --> 00:48:48,899
mean I can upload<font color="#E5E5E5"> anything and nothing</font>

756
00:48:43,289 --> 00:48:52,619
can<font color="#E5E5E5"> be deleted I'm just imagining things</font>

757
00:48:48,900 --> 00:48:55,349
<font color="#E5E5E5">okay I'm trying to be</font><font color="#CCCCCC"> wicked so far so</font>

758
00:48:52,619 --> 00:48:57,589
good<font color="#E5E5E5"> one more slide and then Robert will</font>

759
00:48:55,349 --> 00:48:57,589
<font color="#E5E5E5">finish</font>

760
00:48:57,710 --> 00:49:02,630
and another thing<font color="#E5E5E5"> we can do is to take</font>

761
00:49:00,079 --> 00:49:06,319
the<font color="#E5E5E5"> Trojan</font><font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> finish and replace the</font>

762
00:49:02,630 --> 00:49:08,660
latest image with it<font color="#CCCCCC"> a short searching</font>

763
00:49:06,319 --> 00:49:10,759
show done<font color="#E5E5E5"> by the way the funny thing</font>

764
00:49:08,660 --> 00:49:14,259
about this is<font color="#CCCCCC"> that when you</font><font color="#E5E5E5"> whatever you</font>

765
00:49:10,760 --> 00:49:17,599
replace when you<font color="#E5E5E5"> have an image called</font>

766
00:49:14,260 --> 00:49:20,420
<font color="#E5E5E5">Tyson dot whatever you can upload an</font>

767
00:49:17,599 --> 00:49:23,240
image using<font color="#E5E5E5"> the same name same tag and</font>

768
00:49:20,420 --> 00:49:23,809
then you overwrite no one will<font color="#E5E5E5"> scream no</font>

769
00:49:23,240 --> 00:49:25,669
one<font color="#E5E5E5"> would</font>

770
00:49:23,809 --> 00:49:28,430
nothing would happen<font color="#E5E5E5"> here the next time</font>

771
00:49:25,670 --> 00:49:29,990
they do a dr.<font color="#CCCCCC"> pol they will download</font>

772
00:49:28,430 --> 00:49:32,750
<font color="#CCCCCC">whatever image has been overwritten</font>

773
00:49:29,990 --> 00:49:34,660
<font color="#E5E5E5">whatever image is there the versioning</font>

774
00:49:32,750 --> 00:49:38,329
system has to be managed<font color="#E5E5E5"> by the client</font>

775
00:49:34,660 --> 00:49:43,040
not by the server so if you go<font color="#E5E5E5"> something</font>

776
00:49:38,329 --> 00:49:46,309
the same name<font color="#CCCCCC"> it is overwritten</font><font color="#E5E5E5"> that's</font>

777
00:49:43,040 --> 00:49:49,609
why it's organization<font color="#CCCCCC"> works because if</font>

778
00:49:46,309 --> 00:49:52,160
we<font color="#E5E5E5"> manage to access a registry we can</font>

779
00:49:49,609 --> 00:49:54,140
modify the images there<font color="#CCCCCC"> are no processes</font>

780
00:49:52,160 --> 00:50:02,618
using those<font color="#E5E5E5"> images will</font><font color="#CCCCCC"> download our</font>

781
00:49:54,140 --> 00:50:02,618
image<font color="#E5E5E5"> and the root layer</font>

782
00:50:04,109 --> 00:50:11,290
are we telling it now it's a<font color="#E5E5E5"> really cool</font>

783
00:50:09,820 --> 00:50:13,480
<font color="#CCCCCC">thing</font><font color="#E5E5E5"> about the demo we just showed is</font>

784
00:50:11,290 --> 00:50:15,880
<font color="#CCCCCC">that we modified an image directly</font><font color="#E5E5E5"> but</font>

785
00:50:13,480 --> 00:50:19,960
in a real situation<font color="#CCCCCC"> with a big registry</font>

786
00:50:15,880 --> 00:50:22,930
in a company<font color="#CCCCCC"> that is using</font><font color="#E5E5E5"> docker for</font>

787
00:50:19,960 --> 00:50:25,510
production they would<font color="#E5E5E5"> probably</font><font color="#CCCCCC"> have</font>

788
00:50:22,930 --> 00:50:27,040
<font color="#E5E5E5">several types of images the images that</font>

789
00:50:25,510 --> 00:50:29,080
<font color="#E5E5E5">get modified all the time</font>

790
00:50:27,040 --> 00:50:31,180
to add<font color="#E5E5E5"> new</font><font color="#CCCCCC"> functionality and then base</font>

791
00:50:29,080 --> 00:50:32,560
images these<font color="#CCCCCC"> are images</font><font color="#E5E5E5"> that are more</font>

792
00:50:31,180 --> 00:50:34,450
stable<font color="#CCCCCC"> in times</font>

793
00:50:32,560 --> 00:50:36,400
what are we more<font color="#E5E5E5"> interested well</font>

794
00:50:34,450 --> 00:50:38,740
modifying base images<font color="#E5E5E5"> because these ones</font>

795
00:50:36,400 --> 00:50:43,060
<font color="#E5E5E5">have a longer life cycle when you do a</font>

796
00:50:38,740 --> 00:50:47,140
<font color="#E5E5E5">docker bill replacing an image that is</font>

797
00:50:43,060 --> 00:50:51,940
<font color="#CCCCCC">being replaced all the time it's not my</font>

798
00:50:47,140 --> 00:50:55,210
<font color="#E5E5E5">relevance so if you modify a base image</font>

799
00:50:51,940 --> 00:50:57,010
on the other<font color="#E5E5E5"> hand or build processes for</font>

800
00:50:55,210 --> 00:51:01,720
images that<font color="#CCCCCC"> are based on the previous</font>

801
00:50:57,010 --> 00:51:04,090
image will be<font color="#CCCCCC"> infected</font><font color="#E5E5E5"> okay they will</font>

802
00:51:01,720 --> 00:51:06,879
have our modified<font color="#E5E5E5"> image so if we</font><font color="#CCCCCC"> infect</font>

803
00:51:04,090 --> 00:51:08,980
<font color="#E5E5E5">the base image for Debian everything</font>

804
00:51:06,880 --> 00:51:11,790
<font color="#E5E5E5">coming after</font><font color="#CCCCCC"> that will</font><font color="#E5E5E5"> be infected</font><font color="#CCCCCC"> by</font>

805
00:51:08,980 --> 00:51:11,790
<font color="#CCCCCC">Cascade</font>

806
00:51:14,960 --> 00:51:20,970
and the last thing just<font color="#CCCCCC"> to show you the</font>

807
00:51:18,299 --> 00:51:22,499
magnitude<font color="#E5E5E5"> of this thing</font><font color="#CCCCCC"> a very</font><font color="#E5E5E5"> short</font>

808
00:51:20,970 --> 00:51:27,558
<font color="#E5E5E5">search in</font><font color="#CCCCCC"> shorten I don't even</font><font color="#E5E5E5"> know</font>

809
00:51:22,499 --> 00:51:29,819
<font color="#E5E5E5">about tax that's totally our answer</font>

810
00:51:27,559 --> 00:51:32,720
<font color="#E5E5E5">there's quite a few registries and we're</font>

811
00:51:29,819 --> 00:51:32,720
<font color="#E5E5E5">just scratching</font><font color="#CCCCCC"> the surface</font>

812
00:51:35,210 --> 00:51:43,920
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> sounder</font><font color="#CCCCCC"> theory it is open to do</font>

813
00:51:41,640 --> 00:51:46,879
wicked things<font color="#CCCCCC"> look at this and then</font>

814
00:51:43,920 --> 00:51:49,289
authentication<font color="#E5E5E5"> and registry</font><font color="#CCCCCC"> is just</font>

815
00:51:46,880 --> 00:51:51,539
rudimentary<font color="#E5E5E5"> with a Hydra</font>

816
00:51:49,289 --> 00:51:54,779
maybe you just need less than a second

817
00:51:51,539 --> 00:51:57,690
<font color="#E5E5E5">this is without</font><font color="#CCCCCC"> any effort you can go</font>

818
00:51:54,779 --> 00:52:06,059
there I see registries everywhere that<font color="#CCCCCC"> I</font>

819
00:51:57,690 --> 00:52:11,249
can penetrate<font color="#E5E5E5"> with no effort the</font>

820
00:52:06,059 --> 00:52:13,619
conclusion is simple we really need<font color="#E5E5E5"> to</font>

821
00:52:11,249 --> 00:52:16,950
have security<font color="#E5E5E5"> in place we need some</font>

822
00:52:13,619 --> 00:52:19,920
security<font color="#E5E5E5"> in</font><font color="#CCCCCC"> docker</font><font color="#E5E5E5"> environments what can</font>

823
00:52:16,950 --> 00:52:22,710
we do in order<font color="#CCCCCC"> to avoid the problems</font>

824
00:52:19,920 --> 00:52:25,079
<font color="#E5E5E5">we've just seen in order to prevent</font>

825
00:52:22,710 --> 00:52:27,029
anyone from<font color="#E5E5E5"> accessing our registry it</font>

826
00:52:25,079 --> 00:52:31,039
may be<font color="#E5E5E5"> someone like other</font><font color="#CCCCCC"> credentials</font>

827
00:52:27,029 --> 00:52:34,049
<font color="#CCCCCC">it may be an unemployed developer anyone</font>

828
00:52:31,039 --> 00:52:37,009
so for whatever reason is interested in

829
00:52:34,049 --> 00:52:39,569
writing<font color="#E5E5E5"> to a registry</font><font color="#CCCCCC"> what can we do</font>

830
00:52:37,009 --> 00:52:44,309
when we do find<font color="#E5E5E5"> images in the docker</font>

831
00:52:39,569 --> 00:52:48,288
file we can specify the front<font color="#E5E5E5"> to name</font>

832
00:52:44,309 --> 00:52:53,309
and tag which<font color="#CCCCCC"> is the common practice or</font>

833
00:52:48,289 --> 00:52:56,160
we can<font color="#CCCCCC"> use the digest have our name</font>

834
00:52:53,309 --> 00:52:56,869
<font color="#CCCCCC">intact well because that can be</font>

835
00:52:56,160 --> 00:53:00,210
<font color="#E5E5E5">overwritten</font>

836
00:52:56,869 --> 00:53:02,460
we are<font color="#E5E5E5"> not referencing a content in a</font>

837
00:53:00,210 --> 00:53:04,650
unique way<font color="#CCCCCC"> when we're using</font><font color="#E5E5E5"> a name on a</font>

838
00:53:02,460 --> 00:53:08,489
tag<font color="#E5E5E5"> the only way to reference something</font>

839
00:53:04,650 --> 00:53:11,640
uniquely<font color="#CCCCCC"> is by using the digest</font><font color="#E5E5E5"> if I now</font>

840
00:53:08,489 --> 00:53:16,529
modify an image or a bunch of<font color="#E5E5E5"> latest in</font>

841
00:53:11,640 --> 00:53:19,230
my registry and I do<font color="#E5E5E5"> a dr. Paul Ubuntu</font>

842
00:53:16,529 --> 00:53:22,349
latest<font color="#CCCCCC"> I will download the modified</font>

843
00:53:19,230 --> 00:53:25,579
image<font color="#E5E5E5"> if in my images I'm careful</font><font color="#CCCCCC"> and I</font>

844
00:53:22,349 --> 00:53:28,769
say no I build them based on the digest

845
00:53:25,579 --> 00:53:30,450
<font color="#E5E5E5">so</font><font color="#CCCCCC"> it's based on</font><font color="#E5E5E5"> the latest even if</font>

846
00:53:28,769 --> 00:53:33,959
someone over wrote that name of<font color="#E5E5E5"> that</font>

847
00:53:30,450 --> 00:53:37,078
<font color="#E5E5E5">tags the digest wouldn't add up it would</font>

848
00:53:33,960 --> 00:53:38,670
<font color="#E5E5E5">be a different digest so dr. bill</font>

849
00:53:37,079 --> 00:53:41,640
wouldn't<font color="#E5E5E5"> work it would tell</font><font color="#CCCCCC"> us that the</font>

850
00:53:38,670 --> 00:53:43,230
<font color="#CCCCCC">image doesn't</font><font color="#E5E5E5"> exist anymore</font><font color="#CCCCCC"> so our bill</font>

851
00:53:41,640 --> 00:53:44,670
<font color="#E5E5E5">doesn't work we will notice for</font>

852
00:53:43,230 --> 00:53:47,279
something<font color="#E5E5E5"> failed what we'll be able</font><font color="#CCCCCC"> to</font>

853
00:53:44,670 --> 00:53:55,049
<font color="#E5E5E5">investigate</font><font color="#CCCCCC"> and realize that we need a</font>

854
00:53:47,279 --> 00:53:56,369
password but this is quite obvious<font color="#E5E5E5"> we</font>

855
00:53:55,049 --> 00:53:58,230
really need to double<font color="#CCCCCC"> check the</font>

856
00:53:56,369 --> 00:54:01,049
integrity<font color="#CCCCCC"> and whatever we download</font>

857
00:53:58,230 --> 00:54:04,589
<font color="#CCCCCC">because the third parties in between</font>

858
00:54:01,049 --> 00:54:05,999
<font color="#E5E5E5">could do lots of things</font><font color="#CCCCCC"> if we work for</font>

859
00:54:04,589 --> 00:54:08,220
an important company an important

860
00:54:05,999 --> 00:54:10,200
<font color="#CCCCCC">organization</font><font color="#E5E5E5"> we might have third parties</font>

861
00:54:08,220 --> 00:54:15,319
modifying the sources of<font color="#CCCCCC"> whatever we are</font>

862
00:54:10,200 --> 00:54:15,319
downloading<font color="#CCCCCC"> okay I'm talking about</font>

863
00:54:15,410 --> 00:54:22,920
securing<font color="#CCCCCC"> our registry do a docker</font><font color="#E5E5E5"> run</font>

864
00:54:19,349 --> 00:54:25,170
<font color="#CCCCCC">through</font><font color="#E5E5E5"> a registry it's nice but we</font>

865
00:54:22,920 --> 00:54:27,989
really should use at least at<font color="#E5E5E5"> the very</font>

866
00:54:25,170 --> 00:54:31,529
<font color="#E5E5E5">least some authentication and</font>

867
00:54:27,989 --> 00:54:34,140
authorization<font color="#CCCCCC"> options the basic option</font>

868
00:54:31,529 --> 00:54:36,029
is not good<font color="#E5E5E5"> enough there are other</font>

869
00:54:34,140 --> 00:54:38,759
implementations private implementations

870
00:54:36,029 --> 00:54:40,880
of<font color="#E5E5E5"> the registry that</font><font color="#CCCCCC"> allows allow us to</font>

871
00:54:38,759 --> 00:54:43,289
implement much more robust mechanisms

872
00:54:40,880 --> 00:54:46,710
that<font color="#E5E5E5"> would allow</font><font color="#CCCCCC"> us to</font><font color="#E5E5E5"> secure the</font>

873
00:54:43,289 --> 00:54:48,720
registry more<font color="#E5E5E5"> properly from the same</font>

874
00:54:46,710 --> 00:54:50,730
<font color="#E5E5E5">note we really need we really need to</font>

875
00:54:48,720 --> 00:54:53,149
limit<font color="#E5E5E5"> the</font><font color="#CCCCCC"> exposure of</font><font color="#E5E5E5"> the registry as</font>

876
00:54:50,730 --> 00:54:56,670
much as<font color="#CCCCCC"> possible</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> just in</font><font color="#E5E5E5"> terms of</font>

877
00:54:53,150 --> 00:55:03,710
<font color="#E5E5E5">perimeter security but also</font><font color="#CCCCCC"> in terms</font><font color="#E5E5E5"> of</font>

878
00:54:56,670 --> 00:55:03,710
roles so in an ideal<font color="#E5E5E5"> situation</font>

879
00:55:04,010 --> 00:55:08,990
only the<font color="#E5E5E5"> servers</font><font color="#CCCCCC"> that build the images I</font>

880
00:55:11,540 --> 00:55:17,490
mean<font color="#E5E5E5"> there will be a server that</font><font color="#CCCCCC"> would</font>

881
00:55:14,070 --> 00:55:19,740
get<font color="#CCCCCC"> instruction</font><font color="#E5E5E5"> to take code compile it</font>

882
00:55:17,490 --> 00:55:23,279
and<font color="#CCCCCC"> generate images only that builder</font>

883
00:55:19,740 --> 00:55:27,540
<font color="#CCCCCC">should be able</font><font color="#E5E5E5"> to upload</font><font color="#CCCCCC"> images to the</font>

884
00:55:23,280 --> 00:55:29,610
registry no one else any developer or

885
00:55:27,540 --> 00:55:31,830
anybody else<font color="#CCCCCC"> shouldn't</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to access</font>

886
00:55:29,610 --> 00:55:35,400
the registry<font color="#CCCCCC"> bread</font><font color="#E5E5E5"> registry is a core</font>

887
00:55:31,830 --> 00:55:37,640
<font color="#E5E5E5">element of</font><font color="#CCCCCC"> the structure</font><font color="#E5E5E5"> so right the</font>

888
00:55:35,400 --> 00:55:44,640
mission should<font color="#E5E5E5"> be very</font><font color="#CCCCCC"> restrictive and</font>

889
00:55:37,640 --> 00:55:47,310
finally implementing signing<font color="#E5E5E5"> it's been a</font>

890
00:55:44,640 --> 00:55:50,339
year or a few<font color="#E5E5E5"> months of leave since</font>

891
00:55:47,310 --> 00:55:55,860
quite some<font color="#CCCCCC"> time ago doctor allows to</font>

892
00:55:50,340 --> 00:55:58,470
implement<font color="#E5E5E5"> signing images</font><font color="#CCCCCC"> okay on top of</font>

893
00:55:55,860 --> 00:56:01,650
<font color="#E5E5E5">that manifest at Sony explain we can add</font>

894
00:55:58,470 --> 00:56:03,450
signing information so<font color="#E5E5E5"> that even if we</font>

895
00:56:01,650 --> 00:56:04,890
<font color="#E5E5E5">replace the images in registry because</font>

896
00:56:03,450 --> 00:56:06,410
<font color="#CCCCCC">we haven't been able to sign them</font>

897
00:56:04,890 --> 00:56:09,060
because we<font color="#E5E5E5"> don't have</font><font color="#CCCCCC"> the keys</font>

898
00:56:06,410 --> 00:56:11,100
<font color="#CCCCCC">doctor host</font><font color="#E5E5E5"> when checking the signature</font>

899
00:56:09,060 --> 00:56:14,580
will say<font color="#E5E5E5"> this image is not signed</font>

900
00:56:11,100 --> 00:56:21,029
I'm not executing it so we would be safe

901
00:56:14,580 --> 00:56:25,130
and finally if everything fails we will

902
00:56:21,030 --> 00:56:28,080
<font color="#CCCCCC">have</font><font color="#E5E5E5"> runtime protections the first one</font>

903
00:56:25,130 --> 00:56:32,760
well this one is very obvious<font color="#E5E5E5"> we said</font>

904
00:56:28,080 --> 00:56:34,880
<font color="#CCCCCC">before</font><font color="#E5E5E5"> that if we execute an image that</font>

905
00:56:32,760 --> 00:56:39,200
<font color="#E5E5E5">has</font><font color="#CCCCCC"> code</font><font color="#E5E5E5"> that we don't want to execute</font>

906
00:56:34,880 --> 00:56:43,830
<font color="#E5E5E5">we're probably done will bust already</font>

907
00:56:39,200 --> 00:56:47,149
<font color="#E5E5E5">what we cannot do by</font><font color="#CCCCCC"> default is to</font>

908
00:56:43,830 --> 00:56:47,150
execute images

909
00:56:48,690 --> 00:56:58,869
with additional<font color="#E5E5E5"> options there so</font>

910
00:56:56,500 --> 00:57:03,190
software's out there that<font color="#E5E5E5"> don't work so</font>

911
00:56:58,869 --> 00:57:05,070
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> not advisable and to tell you</font>

912
00:57:03,190 --> 00:57:09,570
about more<font color="#E5E5E5"> advanced securing options</font>

913
00:57:05,070 --> 00:57:13,390
<font color="#E5E5E5">doctor apart from making our life easier</font>

914
00:57:09,570 --> 00:57:17,740
when deploying software makes our life

915
00:57:13,390 --> 00:57:20,440
<font color="#CCCCCC">easier when applying profiles security</font>

916
00:57:17,740 --> 00:57:22,240
profiles to each process that we run we

917
00:57:20,440 --> 00:57:25,150
could have<font color="#CCCCCC"> succumb</font><font color="#E5E5E5"> Salinas or our power</font>

918
00:57:22,240 --> 00:57:27,040
<font color="#E5E5E5">mod it is a good</font><font color="#CCCCCC"> idea to</font><font color="#E5E5E5"> have some sort</font>

919
00:57:25,150 --> 00:57:30,670
of application<font color="#CCCCCC"> that does</font><font color="#E5E5E5"> a profiling</font><font color="#CCCCCC"> of</font>

920
00:57:27,040 --> 00:57:32,020
our containers when we deploy<font color="#E5E5E5"> them into</font>

921
00:57:30,670 --> 00:57:36,510
the production<font color="#E5E5E5"> environment and</font><font color="#CCCCCC"> apply</font>

922
00:57:32,020 --> 00:57:40,060
<font color="#E5E5E5">profile in this case default</font><font color="#CCCCCC"> container</font>

923
00:57:36,510 --> 00:57:42,369
only<font color="#CCCCCC"> gets network connections</font><font color="#E5E5E5"> we</font>

924
00:57:40,060 --> 00:57:50,500
shouldn't allow the container to connect

925
00:57:42,369 --> 00:57:52,510
to the internet<font color="#E5E5E5"> and</font><font color="#CCCCCC"> finally the best</font>

926
00:57:50,500 --> 00:57:57,580
option on the most advanced one in this

927
00:57:52,510 --> 00:58:00,280
<font color="#E5E5E5">case is</font><font color="#CCCCCC"> to use a</font><font color="#E5E5E5"> dynamic analysis tools</font>

928
00:57:57,580 --> 00:58:02,740
<font color="#CCCCCC">there are</font><font color="#E5E5E5"> tools we've mentioned one</font>

929
00:58:00,280 --> 00:58:05,320
<font color="#CCCCCC">remark from our colleague this</font><font color="#E5E5E5"> is open</font>

930
00:58:02,740 --> 00:58:08,229
source<font color="#CCCCCC"> and we really like it</font><font color="#E5E5E5"> there are</font>

931
00:58:05,320 --> 00:58:11,650
<font color="#E5E5E5">tools that monitor the</font><font color="#CCCCCC"> behavior of</font>

932
00:58:08,230 --> 00:58:14,920
containers they generate dynamic photons

933
00:58:11,650 --> 00:58:17,290
<font color="#E5E5E5">let's show the</font><font color="#CCCCCC"> website I'm based on that</font>

934
00:58:14,920 --> 00:58:22,210
<font color="#CCCCCC">behavior</font><font color="#E5E5E5"> they generate those profiles</font>

935
00:58:17,290 --> 00:58:25,089
<font color="#E5E5E5">and if a container changes its</font><font color="#CCCCCC"> behavior</font>

936
00:58:22,210 --> 00:58:27,490
overnight<font color="#E5E5E5"> does those things invokes his</font>

937
00:58:25,089 --> 00:58:28,570
<font color="#E5E5E5">course</font><font color="#CCCCCC"> that were</font><font color="#E5E5E5"> not executed</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> or</font>

938
00:58:27,490 --> 00:58:30,910
tries to<font color="#CCCCCC"> access files</font>

939
00:58:28,570 --> 00:58:34,390
it didn't<font color="#CCCCCC"> matter</font><font color="#E5E5E5"> before or</font><font color="#CCCCCC"> setup</font>

940
00:58:30,910 --> 00:58:38,020
<font color="#E5E5E5">connections that I didn't establish</font>

941
00:58:34,390 --> 00:58:41,710
before we<font color="#E5E5E5"> will have an alert telling us</font>

942
00:58:38,020 --> 00:58:45,190
that<font color="#E5E5E5"> that container is functioning in an</font>

943
00:58:41,710 --> 00:58:47,650
improper way<font color="#E5E5E5"> that way we</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> be able to</font>

944
00:58:45,190 --> 00:58:50,970
<font color="#E5E5E5">detect that someone modified to conclude</font>

945
00:58:47,650 --> 00:58:50,970
the content in the container

946
00:58:52,310 --> 00:58:58,290
<font color="#CCCCCC">so these</font><font color="#E5E5E5"> are the recommendations to</font>

947
00:58:54,720 --> 00:59:11,040
avoid attacks<font color="#E5E5E5"> remember that there is</font>

948
00:58:58,290 --> 00:59:15,029
<font color="#CCCCCC">always someone watching questions in the</font>

949
00:59:11,040 --> 00:59:19,730
meantime I<font color="#E5E5E5"> will show you where the tool</font>

950
00:59:15,030 --> 00:59:22,080
can be found<font color="#E5E5E5"> make public their egos</font>

951
00:59:19,730 --> 00:59:28,020
<font color="#E5E5E5">there's no documentation because I'm a</font>

952
00:59:22,080 --> 00:59:33,690
lazy right it<font color="#E5E5E5"> hasn't been documented as</font>

953
00:59:28,020 --> 00:59:35,850
<font color="#E5E5E5">soon as it is made public you pay you</font>

954
00:59:33,690 --> 00:59:40,020
pay<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the fine from Amazon</font><font color="#CCCCCC"> or Google</font>

955
00:59:35,850 --> 00:59:41,520
or<font color="#CCCCCC"> whoever yes these are not registries</font>

956
00:59:40,020 --> 00:59:45,180
<font color="#E5E5E5">from Amazon these are purchases in</font>

957
00:59:41,520 --> 00:59:50,340
Amazon hosted by Amazon the first

958
00:59:45,180 --> 00:59:52,560
question quickly<font color="#CCCCCC"> mine can you just as</font>

959
00:59:50,340 --> 00:59:55,950
<font color="#E5E5E5">you were able</font><font color="#CCCCCC"> to upload the file on York</font>

960
00:59:52,560 --> 01:00:02,640
and you go t<font color="#CCCCCC"> a</font><font color="#E5E5E5"> 256 can you access</font><font color="#CCCCCC"> that</font>

961
00:59:55,950 --> 01:00:05,040
file would you stay quiet please can<font color="#E5E5E5"> you</font>

962
01:00:02,640 --> 01:00:09,650
access<font color="#E5E5E5"> that resource directly using HTTP</font>

963
01:00:05,040 --> 01:00:13,380
yes right<font color="#E5E5E5"> I just wanted to know</font><font color="#CCCCCC"> that yes</font>

964
01:00:09,650 --> 01:00:15,840
the registry can be used as a command

965
01:00:13,380 --> 01:00:21,840
<font color="#CCCCCC">centre</font><font color="#E5E5E5"> for the infections we want to</font>

966
01:00:15,840 --> 01:00:24,080
deploy perfect questions<font color="#CCCCCC"> I can't see</font>

967
01:00:21,840 --> 01:00:24,080
anyone

968
01:00:26,130 --> 01:00:29,579
there's one here

969
01:00:35,150 --> 01:00:39,569
about one of<font color="#E5E5E5"> the recommendations</font>

970
01:00:37,260 --> 01:00:42,630
referencing everything with a hash still

971
01:00:39,569 --> 01:00:45,058
<font color="#CCCCCC">realized in</font><font color="#E5E5E5"> three months you will have</font>

972
01:00:42,630 --> 01:00:47,220
obsolete images<font color="#CCCCCC"> yes</font><font color="#E5E5E5"> absolutely</font><font color="#CCCCCC"> I mean</font>

973
01:00:45,059 --> 01:00:49,020
<font color="#CCCCCC">your development cycle it with</font>

974
01:00:47,220 --> 01:00:51,839
continuous<font color="#E5E5E5"> integration has to</font><font color="#CCCCCC"> take</font><font color="#E5E5E5"> into</font>

975
01:00:49,020 --> 01:00:54,000
<font color="#CCCCCC">account that the base images are updated</font>

976
01:00:51,839 --> 01:00:55,410
when those<font color="#E5E5E5"> images those face image is</font>

977
01:00:54,000 --> 01:00:57,270
<font color="#E5E5E5">not updated</font><font color="#CCCCCC"> because there is a</font>

978
01:00:55,410 --> 01:00:59,700
<font color="#E5E5E5">vulnerability or there are incorrect</font>

979
01:00:57,270 --> 01:01:01,799
versions you have to update<font color="#E5E5E5"> the hash for</font>

980
01:00:59,700 --> 01:01:04,649
the next images I mean safety and

981
01:01:01,799 --> 01:01:06,299
security can<font color="#CCCCCC"> be cumbersome but in some</font>

982
01:01:04,650 --> 01:01:10,549
places<font color="#CCCCCC"> is that it is absolutely</font>

983
01:01:06,299 --> 01:01:14,849
<font color="#E5E5E5">necessary but obviously it prevents it</font>

984
01:01:10,549 --> 01:01:17,160
<font color="#CCCCCC">avoids</font><font color="#E5E5E5"> many problems someone could do it</font>

985
01:01:14,849 --> 01:01:20,130
without<font color="#CCCCCC"> noticing it they might</font><font color="#E5E5E5"> modify an</font>

986
01:01:17,160 --> 01:01:22,618
image with contents that we don't want

987
01:01:20,130 --> 01:01:24,809
we know that our<font color="#E5E5E5"> root image is working</font>

988
01:01:22,619 --> 01:01:27,750
unless<font color="#CCCCCC"> the digest</font><font color="#E5E5E5"> and will</font><font color="#CCCCCC"> reference</font>

989
01:01:24,809 --> 01:01:31,200
that that way so no problems with the

990
01:01:27,750 --> 01:01:33,059
operation in fact with continuous

991
01:01:31,200 --> 01:01:35,520
deployment<font color="#CCCCCC"> the reference shouldn't be</font>

992
01:01:33,059 --> 01:01:37,069
touched manually by anyone<font color="#E5E5E5"> the reference</font>

993
01:01:35,520 --> 01:01:42,540
should<font color="#E5E5E5"> be done in your</font><font color="#CCCCCC"> cycle</font>

994
01:01:37,069 --> 01:01:44,210
<font color="#E5E5E5">automatically so that you don't get into</font>

995
01:01:42,540 --> 01:01:48,540
too much<font color="#CCCCCC"> trouble whenever you want to</font>

996
01:01:44,210 --> 01:01:52,440
update your<font color="#CCCCCC"> software</font><font color="#E5E5E5"> the only way for</font>

997
01:01:48,540 --> 01:01:54,569
you to<font color="#E5E5E5"> make a sale to have a safe cycle</font>

998
01:01:52,440 --> 01:01:56,640
is to automate as much<font color="#E5E5E5"> as</font><font color="#CCCCCC"> possible</font><font color="#E5E5E5"> and</font>

999
01:01:54,569 --> 01:01:59,400
minimize human<font color="#E5E5E5"> inputs as much as</font>

1000
01:01:56,640 --> 01:02:05,250
possible as<font color="#CCCCCC"> well so the only</font><font color="#E5E5E5"> human input</font>

1001
01:01:59,400 --> 01:02:07,520
here should be<font color="#CCCCCC"> bit bush one thing with</font>

1002
01:02:05,250 --> 01:02:07,520
the go

1003
01:02:08,780 --> 01:02:14,730
we work at BBVA innovation we mentioned

1004
01:02:12,000 --> 01:02:15,600
on our<font color="#E5E5E5"> colleagues Antonio</font><font color="#CCCCCC"> justice at</font>

1005
01:02:14,730 --> 01:02:23,340
<font color="#E5E5E5">once I said</font>

1006
01:02:15,600 --> 01:02:27,450
Bruce so stop it - stop<font color="#CCCCCC"> it</font><font color="#E5E5E5"> we just wait</font>

1007
01:02:23,340 --> 01:02:36,920
for<font color="#CCCCCC"> DBA</font><font color="#E5E5E5"> and money</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> yes you are right</font>

1008
01:02:27,450 --> 01:02:36,919
any<font color="#E5E5E5"> other questions</font><font color="#CCCCCC"> ok</font>

1009
01:02:50,760 --> 01:02:58,890
thank you very<font color="#E5E5E5"> much for</font><font color="#CCCCCC"> your interesting</font>

1010
01:02:52,910 --> 01:03:02,190
presentation<font color="#CCCCCC"> about docker</font><font color="#E5E5E5"> inside and as</font>

1011
01:02:58,890 --> 01:03:04,170
far as I<font color="#E5E5E5"> can remember</font><font color="#CCCCCC"> if you do dr. five</font>

1012
01:03:02,190 --> 01:03:06,060
either in the file<font color="#E5E5E5"> or by making any</font>

1013
01:03:04,170 --> 01:03:08,010
changes<font color="#CCCCCC"> that you want</font><font color="#E5E5E5"> to can do to just</font>

1014
01:03:06,060 --> 01:03:10,890
do the push to the<font color="#E5E5E5"> register and to</font>

1015
01:03:08,010 --> 01:03:13,440
overwrite<font color="#CCCCCC"> the</font><font color="#E5E5E5"> tag equally so what are</font>

1016
01:03:10,890 --> 01:03:16,368
the<font color="#E5E5E5"> advantages of the tool</font><font color="#CCCCCC"> therefore</font>

1017
01:03:13,440 --> 01:03:20,040
that you have created<font color="#CCCCCC"> for ultimately the</font>

1018
01:03:16,369 --> 01:03:22,980
organization or to modify images right

1019
01:03:20,040 --> 01:03:25,440
away from<font color="#CCCCCC"> the tar</font><font color="#E5E5E5"> well we just want to</font>

1020
01:03:22,980 --> 01:03:28,140
create<font color="#E5E5E5"> like this button</font><font color="#CCCCCC"> that changes</font>

1021
01:03:25,440 --> 01:03:30,660
variable that does everything<font color="#E5E5E5"> that it</font>

1022
01:03:28,140 --> 01:03:32,400
<font color="#CCCCCC">has</font><font color="#E5E5E5"> to do puts everything in its right</font>

1023
01:03:30,660 --> 01:03:34,319
place<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that you don't</font><font color="#E5E5E5"> have to do</font><font color="#CCCCCC"> it</font>

1024
01:03:32,400 --> 01:03:37,650
manually we have not<font color="#CCCCCC"> invented anything</font>

1025
01:03:34,320 --> 01:03:41,880
<font color="#E5E5E5">so we can do recompilation so it just</font>

1026
01:03:37,650 --> 01:03:45,030
<font color="#E5E5E5">makes your</font><font color="#CCCCCC"> life easier that's it</font><font color="#E5E5E5"> so</font>

1027
01:03:41,880 --> 01:03:47,400
would<font color="#E5E5E5"> it be</font><font color="#CCCCCC"> a problem marry</font><font color="#E5E5E5"> one more</font>

1028
01:03:45,030 --> 01:03:49,320
layer with your<font color="#E5E5E5"> malicious modification</font>

1029
01:03:47,400 --> 01:03:51,869
to<font color="#CCCCCC"> overwriting the</font><font color="#E5E5E5"> register no no no no</font>

1030
01:03:49,320 --> 01:03:54,150
to do that<font color="#CCCCCC"> internally</font><font color="#E5E5E5"> to do it and it</font>

1031
01:03:51,869 --> 01:03:56,369
does it<font color="#CCCCCC"> for you so I</font><font color="#E5E5E5"> can see that</font><font color="#CCCCCC"> you</font>

1032
01:03:54,150 --> 01:03:57,930
have<font color="#CCCCCC"> not added</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> more layer but the</font>

1033
01:03:56,369 --> 01:03:59,609
result will<font color="#CCCCCC"> be the same oh yes</font>

1034
01:03:57,930 --> 01:04:02,660
everything<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the tool did we did it</font>

1035
01:03:59,609 --> 01:04:06,150
<font color="#CCCCCC">before without the</font><font color="#E5E5E5"> tool so it is more</font>

1036
01:04:02,660 --> 01:04:10,290
cumbersome but the tool is<font color="#CCCCCC"> that make</font>

1037
01:04:06,150 --> 01:04:12,480
your<font color="#E5E5E5"> life easier and it is open to what</font>

1038
01:04:10,290 --> 01:04:16,200
is open<font color="#CCCCCC"> we</font><font color="#E5E5E5"> can add more options to the</font>

1039
01:04:12,480 --> 01:04:19,230
tool in the future<font color="#E5E5E5"> so well my question</font>

1040
01:04:16,200 --> 01:04:21,540
<font color="#CCCCCC">was very</font><font color="#E5E5E5"> similar</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> that one it was</font>

1041
01:04:19,230 --> 01:04:31,040
<font color="#CCCCCC">about adding one more layer</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> your</font>

1042
01:04:21,540 --> 01:04:33,480
tool where<font color="#CCCCCC"> we are not adding</font><font color="#E5E5E5"> layers just</font>

1043
01:04:31,040 --> 01:04:35,450
<font color="#CCCCCC">because because when we</font><font color="#E5E5E5"> implemented we</font>

1044
01:04:33,480 --> 01:04:39,150
decided to do it like that<font color="#CCCCCC"> and</font><font color="#E5E5E5"> thus</font><font color="#CCCCCC"> it's</font>

1045
01:04:35,450 --> 01:04:41,460
for no reason<font color="#E5E5E5"> so we could have done it</font>

1046
01:04:39,150 --> 01:04:43,590
in both<font color="#E5E5E5"> ways and we decided to choose</font>

1047
01:04:41,460 --> 01:04:48,410
just<font color="#CCCCCC"> the first option</font><font color="#E5E5E5"> we just didn't</font>

1048
01:04:43,590 --> 01:04:51,030
<font color="#CCCCCC">want it to look that suspicious so well</font>

1049
01:04:48,410 --> 01:04:54,420
<font color="#E5E5E5">three or four</font><font color="#CCCCCC"> layers and more suspicious</font>

1050
01:04:51,030 --> 01:04:58,890
than the layers<font color="#E5E5E5"> that we used but we did</font>

1051
01:04:54,420 --> 01:05:01,820
is<font color="#CCCCCC"> very easy</font><font color="#E5E5E5"> to detect actually if you</font>

1052
01:04:58,890 --> 01:05:01,819
do<font color="#E5E5E5"> reverse</font>

1053
01:05:02,280 --> 01:05:09,220
you can see that<font color="#E5E5E5"> strange behavior is</font>

1054
01:05:06,819 --> 01:05:12,279
adding or giving to the container we're

1055
01:05:09,220 --> 01:05:15,730
also adding environment<font color="#E5E5E5"> variables so it</font>

1056
01:05:12,280 --> 01:05:20,170
is very telling<font color="#CCCCCC"> so to speak you could be</font>

1057
01:05:15,730 --> 01:05:22,569
more you could pass unnoticed<font color="#CCCCCC"> so that</font>

1058
01:05:20,170 --> 01:05:24,760
you<font color="#E5E5E5"> are not that much detected you will</font>

1059
01:05:22,569 --> 01:05:27,490
be modifying binaries in<font color="#CCCCCC"> the image with</font>

1060
01:05:24,760 --> 01:05:29,589
<font color="#CCCCCC">your code</font><font color="#E5E5E5"> therefore the execution would</font>

1061
01:05:27,490 --> 01:05:31,959
be more silent and then you would add a

1062
01:05:29,589 --> 01:05:36,549
<font color="#CCCCCC">library here there but you will never</font>

1063
01:05:31,960 --> 01:05:39,609
add one more layer it is a<font color="#CCCCCC"> one to be</font>

1064
01:05:36,549 --> 01:05:42,250
detected but if you control the<font color="#CCCCCC"> behavior</font>

1065
01:05:39,609 --> 01:05:45,069
of the image you will soon<font color="#CCCCCC"> see that the</font>

1066
01:05:42,250 --> 01:05:46,690
image does different things<font color="#CCCCCC"> all right no</font>

1067
01:05:45,069 --> 01:05:47,799
more questions<font color="#CCCCCC"> that's the end of it</font>

1068
01:05:46,690 --> 01:05:48,830
<font color="#E5E5E5">thank you</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> much for</font><font color="#CCCCCC"> your</font>

1069
01:05:47,799 --> 01:05:53,810
<font color="#E5E5E5">presentation</font>

1070
01:05:48,830 --> 01:05:53,810
[Applause]

