1
00:00:01,970 --> 00:00:13,650
Oona's yes a good morning with a start

2
00:00:07,500 --> 00:00:21,029
for our chat I know your passport on oh

3
00:00:13,650 --> 00:00:24,660
wait don't so this brute-force attack

4
00:00:21,029 --> 00:00:27,650
scholars have attacks we might take

5
00:00:24,660 --> 00:00:31,410
years to get your password in the end

6
00:00:27,650 --> 00:00:35,910
get it and talk about some of the

7
00:00:31,410 --> 00:00:39,690
concepts oh we are here's Pablo Caro my

8
00:00:35,910 --> 00:00:44,029
name is Pablo Sanchez in telefónica at

9
00:00:39,690 --> 00:00:44,030
present we are part of the red team

10
00:00:45,350 --> 00:00:55,940
multi-purpose and play we want to go

11
00:00:51,620 --> 00:00:55,940
straight to the point where many things

12
00:00:58,640 --> 00:01:04,290
we want to focus on passwords and why

13
00:01:01,079 --> 00:01:08,700
because the issue of passwords as you

14
00:01:04,290 --> 00:01:13,470
know has but it continues to be in the

15
00:01:08,700 --> 00:01:13,950
foreground in the headline we use them

16
00:01:13,470 --> 00:01:31,530
every day

17
00:01:13,950 --> 00:01:41,310
we have publications on images just to

18
00:01:31,530 --> 00:01:45,710
name a few billion passwords as data

19
00:01:41,310 --> 00:01:51,570
like personal dates and birth date

20
00:01:45,710 --> 00:02:00,449
safety questions data that can be for

21
00:01:51,570 --> 00:02:02,460
other things then after that in 2014

22
00:02:00,450 --> 00:02:04,119
they are to experience a theft of their

23
00:02:02,460 --> 00:02:10,090
passwords

24
00:02:04,119 --> 00:02:12,430
two people two Russians were arrested I

25
00:02:10,090 --> 00:02:15,730
don't friend phrenologist when people

26
00:02:12,430 --> 00:02:21,250
start to be more worried about the issue

27
00:02:15,730 --> 00:02:23,290
of leaks this was no conclusion it was

28
00:02:21,250 --> 00:02:28,299
widely publicized and then we had the

29
00:02:23,290 --> 00:02:32,129
Equifax in which stole from the data of

30
00:02:28,299 --> 00:02:32,129
a hundred forty six million people

31
00:02:32,160 --> 00:02:38,950
published on September 7 and then we had

32
00:02:35,019 --> 00:02:49,269
a Marriott scandal this year five

33
00:02:38,950 --> 00:02:54,010
hundred an account so this was

34
00:02:49,269 --> 00:02:55,870
discovered real big change in the

35
00:02:54,010 --> 00:02:58,929
strategy of many companies but not only

36
00:02:55,870 --> 00:03:00,489
we have this top five we also have loads

37
00:02:58,930 --> 00:03:06,940
of leaks that have been published

38
00:03:00,489 --> 00:03:09,970
recently passwords Morgan Chase a

39
00:03:06,940 --> 00:03:15,609
hundred seventy six million of smaller

40
00:03:09,970 --> 00:03:18,579
businesses in addition we have uber with

41
00:03:15,609 --> 00:03:21,370
a stone Delta of almost a hundred sixty

42
00:03:18,579 --> 00:03:23,260
million people they had to pay one

43
00:03:21,370 --> 00:03:25,989
hundred thousand to the kidnappers

44
00:03:23,260 --> 00:03:27,730
without having a certainty that they

45
00:03:25,989 --> 00:03:30,609
were not going to publish the

46
00:03:27,730 --> 00:03:35,319
information they had if they had it and

47
00:03:30,609 --> 00:03:45,430
the solution they they took is they just

48
00:03:35,319 --> 00:03:50,679
fired the CSO entertainment online the

49
00:03:45,430 --> 00:03:52,480
adorable leaked 128 million password

50
00:03:50,680 --> 00:03:59,200
name which was very famous so their

51
00:03:52,480 --> 00:04:01,209
money so just into the subject what

52
00:03:59,200 --> 00:04:03,810
happened with password cracking in the

53
00:04:01,209 --> 00:04:03,810
past few years

54
00:04:04,280 --> 00:04:14,020
Lag refika graph graph relating to the

55
00:04:11,090 --> 00:04:29,870
speed of cracking passwords in the 90s

56
00:04:14,020 --> 00:04:32,540
we use Krypton no system past the best

57
00:04:29,870 --> 00:04:36,110
thing you could get with a quad-core a

58
00:04:32,540 --> 00:04:38,030
new one maybe lucky and you get a Sun

59
00:04:36,110 --> 00:04:40,700
SPARC and you've had maybe four eight

60
00:04:38,030 --> 00:04:42,739
cores you start hacking passwords and

61
00:04:40,700 --> 00:04:44,810
this was powerful even though the ratios

62
00:04:42,740 --> 00:04:47,810
were very different than nowadays

63
00:04:44,810 --> 00:04:48,500
because the past was not as strong as

64
00:04:47,810 --> 00:04:56,900
they are now

65
00:04:48,500 --> 00:05:05,300
then we issue rainbow tables with 14

66
00:04:56,900 --> 00:05:07,849
characters small letters so they to

67
00:05:05,300 --> 00:05:12,220
individual phases so this led to a new

68
00:05:07,850 --> 00:05:12,220
technique which was the rainbow table

69
00:05:13,840 --> 00:05:23,710
variant that use some power CUDA was

70
00:05:19,700 --> 00:05:40,030
implemented but for me the biggest leap

71
00:05:23,710 --> 00:05:45,890
in this was logical rules to decipher

72
00:05:40,030 --> 00:05:50,929
were like winter 2010 July 2015 it was

73
00:05:45,890 --> 00:05:54,169
very easy to get after that we had the

74
00:05:50,930 --> 00:05:56,510
hash cut public days of search

75
00:05:54,169 --> 00:06:01,969
dictionaries but effect of having

76
00:05:56,510 --> 00:06:04,880
cracking teams nowadays DEFCON is simply

77
00:06:01,970 --> 00:06:07,760
for hacking passwords no longer we have

78
00:06:04,880 --> 00:06:10,700
only the use of the CPU but we also can

79
00:06:07,760 --> 00:06:14,120
invent instances in the cloud you don't

80
00:06:10,700 --> 00:06:16,760
need to have our machine at home

81
00:06:14,120 --> 00:06:18,979
he's making a lot of noise but we can

82
00:06:16,760 --> 00:06:22,060
get a background and running on the car

83
00:06:18,979 --> 00:06:30,590
door while we go about other businesses

84
00:06:22,060 --> 00:06:31,610
ways to realize that our data have been

85
00:06:30,590 --> 00:06:35,119
compromised

86
00:06:31,610 --> 00:06:39,590
have I been reformed is well known by

87
00:06:35,120 --> 00:06:46,340
many and then we have a spike variance

88
00:06:39,590 --> 00:06:48,260
with data domain and it won't there are

89
00:06:46,340 --> 00:06:50,270
some concepts where you have to take

90
00:06:48,260 --> 00:06:53,690
into account for cracking passwords the

91
00:06:50,270 --> 00:06:56,570
difference between hold encoding hashing

92
00:06:53,690 --> 00:06:59,120
and ciphering encoding is transforming

93
00:06:56,570 --> 00:07:02,360
data to a scheme that is publicly known

94
00:06:59,120 --> 00:07:04,550
for use this is like one way

95
00:07:02,360 --> 00:07:07,580
cryptographic function that is not

96
00:07:04,550 --> 00:07:09,340
possible to you now revert you give it

97
00:07:07,580 --> 00:07:13,430
an input and it gives you a specific

98
00:07:09,340 --> 00:07:19,119
length and ciphering you get in plus

99
00:07:13,430 --> 00:07:19,120
data that is reversal and throw a key

100
00:07:20,050 --> 00:07:33,289
the key space a character space has paid

101
00:07:25,389 --> 00:07:35,690
the hash rate crackling in no time in to

102
00:07:33,289 --> 00:07:42,979
consider the various forms of attacks we

103
00:07:35,690 --> 00:07:52,690
can have dictionary word list attacks we

104
00:07:42,979 --> 00:07:56,650
make permutations expensive brute for

105
00:07:52,690 --> 00:08:01,520
targeted aimed force we can allocate

106
00:07:56,650 --> 00:08:07,359
subsets of characters that we can have

107
00:08:01,520 --> 00:08:10,520
caps small special characters and number

108
00:08:07,360 --> 00:08:13,940
the higher the text is the combination

109
00:08:10,520 --> 00:08:16,909
of a word list and mask and then brute

110
00:08:13,940 --> 00:08:19,669
force that is I'm just going up for

111
00:08:16,910 --> 00:08:23,410
everything on space of possible

112
00:08:19,669 --> 00:08:23,409
characters I will attack

113
00:08:24,270 --> 00:08:29,940
when you have to see what kind of hash

114
00:08:26,220 --> 00:08:33,630
we have how we want to address it and we

115
00:08:29,940 --> 00:08:35,789
when we implemented our machine software

116
00:08:33,630 --> 00:08:39,299
we have decided to use and then we start

117
00:08:35,789 --> 00:08:41,189
to realize how the passwords operate and

118
00:08:39,299 --> 00:08:43,740
how we can adjust them if we don't get

119
00:08:41,190 --> 00:08:46,430
any results then we start to plan

120
00:08:43,740 --> 00:08:50,370
everything again if it doesn't work

121
00:08:46,430 --> 00:08:52,859
graph card we go to an instance on cloud

122
00:08:50,370 --> 00:08:54,410
Amazon Cloud for instance in the worst

123
00:08:52,860 --> 00:08:57,360
case brute-force

124
00:08:54,410 --> 00:09:03,779
address is the entire possible space of

125
00:08:57,360 --> 00:09:15,200
characters why do we use GPUs instead of

126
00:09:03,779 --> 00:09:15,200
CPUs GPU and CPU the CPI per chip you

127
00:09:15,310 --> 00:09:22,319
[Music]

128
00:09:17,149 --> 00:09:25,140
see on with 12 cores it would take a

129
00:09:22,320 --> 00:09:27,630
hundred years but to the Titan we will

130
00:09:25,140 --> 00:09:30,770
take 40 years day so there's a huge

131
00:09:27,630 --> 00:09:37,589
difference between these type of things

132
00:09:30,770 --> 00:09:39,930
just to give you context benchmarks you

133
00:09:37,589 --> 00:09:46,290
know the GPU benchmarks with an amount

134
00:09:39,930 --> 00:09:48,560
of hashes per second RTX which is the

135
00:09:46,290 --> 00:09:53,699
most powerful in existence which is a

136
00:09:48,560 --> 00:10:12,839
64,000 19 million hashes per second when

137
00:09:53,700 --> 00:10:14,779
you see these dissipate heat inside the

138
00:10:12,839 --> 00:10:19,310
machine instead of outside a machine

139
00:10:14,779 --> 00:10:23,640
running top speed

140
00:10:19,310 --> 00:10:27,959
the CPU may crash or turn off due to

141
00:10:23,640 --> 00:10:30,750
excessive heat after this we had such et

142
00:10:27,960 --> 00:10:37,080
brutality we take a nodes of currency

143
00:10:30,750 --> 00:10:41,820
808 nati I will stack them in a machine

144
00:10:37,080 --> 00:10:45,180
so we get the difference where to 200

145
00:10:41,820 --> 00:10:47,250
200 Giga hashes per second e and when we

146
00:10:45,180 --> 00:10:49,079
thought we could not improve on this

147
00:10:47,250 --> 00:10:52,470
we got the cloud which is the large

148
00:10:49,080 --> 00:10:58,710
unknown nobody knows where it lives

149
00:10:52,470 --> 00:11:02,279
it's there for everybody and we call it

150
00:10:58,710 --> 00:11:05,310
costs $24 in Amazon we get a rate of

151
00:11:02,279 --> 00:11:11,160
four hundred fifty gigabytes per second

152
00:11:05,310 --> 00:11:12,900
totally all inspiring in comparisons

153
00:11:11,160 --> 00:11:16,850
what we could do in the 90s the

154
00:11:12,900 --> 00:11:20,730
differences are totally off the charts

155
00:11:16,850 --> 00:11:23,550
so we always can use the farm we can use

156
00:11:20,730 --> 00:11:27,630
the equipment put them in this sort of

157
00:11:23,550 --> 00:11:30,750
array many stories of people finding

158
00:11:27,630 --> 00:11:34,100
Siberia and use these teams in crypto

159
00:11:30,750 --> 00:11:36,630
currency and also to warm the home

160
00:11:34,100 --> 00:11:39,510
electricity and on top of that they make

161
00:11:36,630 --> 00:11:43,350
money so it's quite an interesting

162
00:11:39,510 --> 00:11:48,360
option isn't it for instance for an

163
00:11:43,350 --> 00:11:53,130
example of cracking if we have a special

164
00:11:48,360 --> 00:11:57,779
currency caps and we have this generated

165
00:11:53,130 --> 00:11:59,640
by a password manager we will take all

166
00:11:57,779 --> 00:12:07,620
possible combinations and these

167
00:11:59,640 --> 00:12:13,439
trillions 60 trillion huge amount of

168
00:12:07,620 --> 00:12:16,170
possible combinations now if we utilize

169
00:12:13,440 --> 00:12:19,529
an instance of Amazon meaning so earlier

170
00:12:16,170 --> 00:12:22,680
with 450,000 million hashes per second

171
00:12:19,529 --> 00:12:25,589
we will take four years and 266 days and

172
00:12:22,680 --> 00:12:27,239
23 hours to sort it out with a cost of

173
00:12:25,589 --> 00:12:27,850
three hundred forty seven thousand

174
00:12:27,240 --> 00:12:29,890
dollars

175
00:12:27,850 --> 00:12:33,040
come on stone I suppose - this is not

176
00:12:29,890 --> 00:12:37,470
Peter loss we said okay what do we have

177
00:12:33,040 --> 00:12:47,500
- we should do something that to avoid

178
00:12:37,470 --> 00:12:49,510
reaching this extreme a new approach

179
00:12:47,500 --> 00:12:53,590
that is related to leave password

180
00:12:49,510 --> 00:12:56,160
cracking with compiling information lots

181
00:12:53,590 --> 00:12:58,990
of informational people to carry out

182
00:12:56,160 --> 00:13:14,920
targeted attacks and use a bit of our

183
00:12:58,990 --> 00:13:21,940
brain she goes so everybody wants to

184
00:13:14,920 --> 00:13:25,329
help cost runs out of control it grows

185
00:13:21,940 --> 00:13:28,000
huge so then we have billions of

186
00:13:25,330 --> 00:13:33,430
possible records we can call it this

187
00:13:28,000 --> 00:13:40,390
value so then we got funny results on

188
00:13:33,430 --> 00:13:41,020
interesting results for us this is his

189
00:13:40,390 --> 00:13:44,080
kaonashi

190
00:13:41,020 --> 00:13:47,680
which is an engine in which you can look

191
00:13:44,080 --> 00:13:49,270
for make searches with loads of

192
00:13:47,680 --> 00:13:54,239
different variables for example and

193
00:13:49,270 --> 00:13:54,240
length of password the most expensive

194
00:13:57,040 --> 00:14:08,990
password per user for instance we can

195
00:14:00,340 --> 00:14:12,990
look for domains in Kaspersky dot-com

196
00:14:08,990 --> 00:14:15,150
yeah kilo can separate days and when I

197
00:14:12,990 --> 00:14:21,560
can't here is all the data we have all

198
00:14:15,150 --> 00:14:24,689
the links and our we have the possible

199
00:14:21,560 --> 00:14:26,609
password the range the mask we can

200
00:14:24,690 --> 00:14:32,300
answer that's if we can ask

201
00:14:26,610 --> 00:14:32,300
garnishee combination touch user

202
00:14:36,310 --> 00:14:43,888
we did got frisky what are you Jean

203
00:14:38,740 --> 00:14:53,019
kaspersky for instance we already found

204
00:14:43,889 --> 00:14:55,899
the most expensive one modified civilian

205
00:14:53,019 --> 00:14:58,839
that belongs to Dropbox which the

206
00:14:55,899 --> 00:15:02,800
password because your possible entropy

207
00:14:58,839 --> 00:15:04,329
estimate whether it is list of know any

208
00:15:02,800 --> 00:15:07,740
words how long it will take

209
00:15:04,329 --> 00:15:14,680
etc but what we did was integrates with

210
00:15:07,740 --> 00:15:17,680
part of social so in calc from the Deep

211
00:15:14,680 --> 00:15:21,399
Web internet of all social media link

212
00:15:17,680 --> 00:15:24,219
and we developed these patterns so with

213
00:15:21,399 --> 00:15:25,240
this information we have a lot of useful

214
00:15:24,220 --> 00:15:35,009
information

215
00:15:25,240 --> 00:15:35,009
each participant know exactly

216
00:15:38,970 --> 00:15:52,829
interesting variations of red to green

217
00:15:49,240 --> 00:16:02,620
and we can obtain a lot more information

218
00:15:52,829 --> 00:16:05,410
if we put the main encounter she just

219
00:16:02,620 --> 00:16:13,899
makes enough ozone calm here we have

220
00:16:05,410 --> 00:16:14,980
Roman so he was Roman was tell me that

221
00:16:13,899 --> 00:16:20,350
he was like the temple

222
00:16:14,980 --> 00:16:22,980
anyway the social scribble have not your

223
00:16:20,350 --> 00:16:26,110
candidate but a lot of information

224
00:16:22,980 --> 00:16:31,689
company the things they joining these

225
00:16:26,110 --> 00:16:33,879
user IDs some possibly some telephone

226
00:16:31,689 --> 00:16:39,939
number so we'd start getting more data

227
00:16:33,879 --> 00:16:44,290
for example the historic diplomats let's

228
00:16:39,939 --> 00:16:47,250
look for diplomats this was because he

229
00:16:44,290 --> 00:16:47,250
promised you

230
00:16:48,460 --> 00:16:53,150
password that says everybody which

231
00:16:51,290 --> 00:17:14,089
is not a very diplomatic passport for a

232
00:16:53,150 --> 00:17:15,619
diplomat so using our database set so

233
00:17:14,089 --> 00:17:18,198
they decided not to volunteer for

234
00:17:15,619 --> 00:17:27,139
examining passwords so then we decided

235
00:17:18,199 --> 00:17:29,930
to leave it a couple of examples so you

236
00:17:27,140 --> 00:17:32,510
can see I hope you see the small print

237
00:17:29,930 --> 00:17:45,410
at someone that is related to you Ron

238
00:17:32,510 --> 00:17:48,350
Paul where the password this one that is

239
00:17:45,410 --> 00:18:06,500
associated this is for the FBI

240
00:17:48,350 --> 00:18:10,129
apparently we can valid information see

241
00:18:06,500 --> 00:18:12,710
that this analyst yeah

242
00:18:10,130 --> 00:18:21,530
the context is links to additional

243
00:18:12,710 --> 00:18:26,679
service for a different example is

244
00:18:21,530 --> 00:18:26,678
responsible for the DEF CON conference

245
00:18:28,690 --> 00:18:39,020
this is CIA many men what rather

246
00:18:36,380 --> 00:18:41,270
suspicious but we have different email

247
00:18:39,020 --> 00:18:44,139
addresses they're shown here that are

248
00:18:41,270 --> 00:18:44,139
allocated to

249
00:18:47,560 --> 00:18:58,580
don't read so we don't read so informant

250
00:18:51,770 --> 00:19:02,480
John Rizzo yes from this encounter she

251
00:18:58,580 --> 00:19:06,620
we have collected will explain the

252
00:19:02,480 --> 00:19:20,090
details of this neural networks etc but

253
00:19:06,620 --> 00:19:35,510
the first tests that we generate 866

254
00:19:20,090 --> 00:19:37,939
million to rock you we get but things

255
00:19:35,510 --> 00:19:41,420
change when you introduce some sort of

256
00:19:37,940 --> 00:19:45,260
rolling so we get cold went from 1169 to

257
00:19:41,420 --> 00:19:55,910
to 10:47 broccoli remain these tests for

258
00:19:45,260 --> 00:20:02,090
the remaining hashes of the working with

259
00:19:55,910 --> 00:20:05,200
it then hash of hashes to be decrypted

260
00:20:02,090 --> 00:20:13,100
so we start to break in a few things and

261
00:20:05,200 --> 00:20:15,800
a high percentage of success many

262
00:20:13,100 --> 00:20:21,590
companies have donated their hashes or

263
00:20:15,800 --> 00:20:23,389
without knowing so to avoid going to

264
00:20:21,590 --> 00:20:25,909
jail I will only say that apart from

265
00:20:23,390 --> 00:20:35,120
Lincoln s we have done tests in real

266
00:20:25,910 --> 00:20:36,830
life mean the average length of each

267
00:20:35,120 --> 00:20:42,590
world depends on the language we're

268
00:20:36,830 --> 00:20:44,800
using one person uses maybe 150 thousand

269
00:20:42,590 --> 00:20:44,800
words

270
00:20:51,600 --> 00:20:59,699
not at all and generally placed at the

271
00:20:55,140 --> 00:21:03,240
end ever more numbers it is a sequential

272
00:20:59,700 --> 00:21:08,130
progression or something has meaning for

273
00:21:03,240 --> 00:21:10,049
the user caps on a small print small

274
00:21:08,130 --> 00:21:13,559
letters is generally at the beginning of

275
00:21:10,049 --> 00:21:17,340
oriental countries lose more numbers

276
00:21:13,559 --> 00:21:21,960
than Western countries we have the 20 60

277
00:21:17,340 --> 00:21:24,840
20 rule which means that 20% of the

278
00:21:21,960 --> 00:21:27,630
passwords are very easy and then 60%

279
00:21:24,840 --> 00:21:29,639
have some variations and mutations which

280
00:21:27,630 --> 00:21:33,480
are average difficulty and then we have

281
00:21:29,640 --> 00:21:35,789
a last 20% which is quite difficult as a

282
00:21:33,480 --> 00:21:42,480
complex because along the many special

283
00:21:35,789 --> 00:21:46,200
characters so this is up to work on so

284
00:21:42,480 --> 00:21:55,110
problems we found what do we do with the

285
00:21:46,200 --> 00:21:57,120
foreign language wee-wee so when we get

286
00:21:55,110 --> 00:22:00,360
to something that is Cyrillic we have to

287
00:21:57,120 --> 00:22:03,360
use an utf-8 but the difference is that

288
00:22:00,360 --> 00:22:06,299
I have an AAC through character and you

289
00:22:03,360 --> 00:22:08,820
go from in utf-8 you use for not to fall

290
00:22:06,299 --> 00:22:13,080
because the captive capital a in Russia

291
00:22:08,820 --> 00:22:19,200
uses t0 90 so there's a base coat and a

292
00:22:13,080 --> 00:22:21,720
kind character crack passwords we have

293
00:22:19,200 --> 00:22:24,690
to look for all the combinations from

294
00:22:21,720 --> 00:22:27,659
the UTF table and i'll say from the dat

295
00:22:24,690 --> 00:22:30,299
2d 4b f this is where we find the

296
00:22:27,659 --> 00:22:31,980
characters in this area of a field quite

297
00:22:30,299 --> 00:22:40,679
simple a mask

298
00:22:31,980 --> 00:22:43,380
it's quite simple it's use things in

299
00:22:40,679 --> 00:22:49,890
Chinese if we don't know what the

300
00:22:43,380 --> 00:22:54,600
language is and we want to crack it to

301
00:22:49,890 --> 00:23:01,020
use 256 bytes you get all the possible

302
00:22:54,600 --> 00:23:06,129
combinations of character another 256

303
00:23:01,020 --> 00:23:08,510
bytes forever this is direct brute force

304
00:23:06,130 --> 00:23:10,430
winter hunting so we have some

305
00:23:08,510 --> 00:23:22,580
interesting problem the difference

306
00:23:10,430 --> 00:23:31,250
between languages Greek word belonging

307
00:23:22,580 --> 00:23:34,129
to Greek which is written in Greek

308
00:23:31,250 --> 00:23:38,000
between a sc2 character so we have to

309
00:23:34,130 --> 00:23:43,190
vary we can write a creek in utf-8 or as

310
00:23:38,000 --> 00:23:49,010
osc2 so in a Greek list we have

311
00:23:43,190 --> 00:23:51,410
different styles of writing attention we

312
00:23:49,010 --> 00:23:54,620
can also pronounce it in syllables for

313
00:23:51,410 --> 00:24:00,590
form completely differently what can we

314
00:23:54,620 --> 00:24:02,780
do variation we substitute this type of

315
00:24:00,590 --> 00:24:05,389
character and we start obtaining

316
00:24:02,780 --> 00:24:11,810
permutation I don't have anything as any

317
00:24:05,390 --> 00:24:13,760
hashtag role we get it you have two

318
00:24:11,810 --> 00:24:17,060
types of Chinese traditional or

319
00:24:13,760 --> 00:24:20,650
simplified one is used in Taiwan Hong

320
00:24:17,060 --> 00:24:23,570
Kong and the rest in continental China

321
00:24:20,650 --> 00:24:28,550
same problem if it's in simplified

322
00:24:23,570 --> 00:24:31,929
Chinese Western characters we can write

323
00:24:28,550 --> 00:24:36,430
the same with different inequalities

324
00:24:31,930 --> 00:24:36,430
have the same word and different

325
00:24:41,110 --> 00:24:45,649
characteristics of the Chinese language

326
00:24:42,890 --> 00:24:51,470
that which we have found out which

327
00:24:45,650 --> 00:24:53,210
helped us to break passwords because 16

328
00:24:51,470 --> 00:25:07,720
percent of the world population speaks

329
00:24:53,210 --> 00:25:07,720
Chinese position 25 which is not usual

330
00:25:09,059 --> 00:25:18,059
Oh muffin how do you run round son and

331
00:25:15,230 --> 00:25:23,029
how similar idiots to an amateur in the

332
00:25:18,059 --> 00:25:25,289
world you have registries but basically

333
00:25:23,029 --> 00:25:27,809
if you see the pronunciation of each

334
00:25:25,289 --> 00:25:33,899
money but looks like a number of words

335
00:25:27,809 --> 00:25:35,519
that means I love you forever so from

336
00:25:33,899 --> 00:25:41,549
now on I will send my girlfriend these

337
00:25:35,519 --> 00:25:46,769
numbers further communication I look if

338
00:25:41,549 --> 00:25:50,509
I'm happy in 20 is I love you and but

339
00:25:46,769 --> 00:25:55,740
this I love you in part of the

340
00:25:50,509 --> 00:26:02,899
traditional simplified Chinese many

341
00:25:55,740 --> 00:26:02,899
variants make phonetic transcriptions

342
00:26:03,590 --> 00:26:11,879
that is means your well country Mandarin

343
00:26:06,690 --> 00:26:16,740
Chinese system of the Czech Republic

344
00:26:11,879 --> 00:26:21,029
this famous password is j53 whatever

345
00:26:16,740 --> 00:26:26,690
which is used which means is precisely

346
00:26:21,029 --> 00:26:30,619
what is what that means password and

347
00:26:26,690 --> 00:26:35,999
Czech language so there are many things

348
00:26:30,619 --> 00:26:49,129
we do with these method works we have

349
00:26:35,999 --> 00:26:49,129
for example several races from trophy we

350
00:26:51,840 --> 00:26:56,970
what has happened here it's not stopping

351
00:26:58,139 --> 00:27:04,779
so we get it out from Wikipedia ready

352
00:27:01,830 --> 00:27:07,949
for example for oh man we did a

353
00:27:04,779 --> 00:27:10,690
screening a publish where he only works

354
00:27:07,950 --> 00:27:13,029
the source information we have and then

355
00:27:10,690 --> 00:27:23,139
we generate word lists that are targeted

356
00:27:13,029 --> 00:27:24,970
to they do not go 17 I have to tell you

357
00:27:23,139 --> 00:27:28,689
something about this that company from

358
00:27:24,970 --> 00:27:33,129
yet another thing we can do with the

359
00:27:28,690 --> 00:27:38,190
keyboard which is like this as a

360
00:27:33,129 --> 00:27:43,658
password top a hundred excuse

361
00:27:38,190 --> 00:27:47,159
one-two-three-four asdf according to the

362
00:27:43,659 --> 00:27:47,159
QWERTY keyboard

363
00:27:49,929 --> 00:27:57,309
this is keyboard walking all the

364
00:27:54,759 --> 00:28:00,609
patterns we can find there but in

365
00:27:57,309 --> 00:28:03,220
addition to learn the layout using

366
00:28:00,609 --> 00:28:05,949
because the Russian layer has this

367
00:28:03,220 --> 00:28:07,869
pattern don't you have this the

368
00:28:05,950 --> 00:28:10,330
arrangement of character the difference

369
00:28:07,869 --> 00:28:13,899
but a new TF that will be easier to

370
00:28:10,330 --> 00:28:15,220
break can we find a complicated pattern

371
00:28:13,899 --> 00:28:18,580
another one that is even more

372
00:28:15,220 --> 00:28:20,009
complicated to break together with a

373
00:28:18,580 --> 00:28:23,049
good bottle of vodka

374
00:28:20,009 --> 00:28:29,739
my father is Russian so I'm totally free

375
00:28:23,049 --> 00:28:32,710
to talk about different arrangements but

376
00:28:29,739 --> 00:28:38,309
we have patterns that are used very

377
00:28:32,710 --> 00:28:42,149
interesting pattern not use things like

378
00:28:38,309 --> 00:28:47,739
this bond Jacques playing out in leagues

379
00:28:42,149 --> 00:28:49,719
loads of keyboard pins made on the basis

380
00:28:47,739 --> 00:28:52,509
of the keyboard arrangement before

381
00:28:49,720 --> 00:28:57,779
Parker comes on we will talk just and

382
00:28:52,509 --> 00:28:57,779
develop about a mask purposes

383
00:29:00,490 --> 00:29:09,550
Eastern countries and for Western

384
00:29:02,960 --> 00:29:14,080
countries Western countries tend to use

385
00:29:09,550 --> 00:29:17,330
more letters and words that numbers so

386
00:29:14,080 --> 00:29:21,879
Chinese find it easier to use numbers

387
00:29:17,330 --> 00:29:26,449
and then characters because for them a

388
00:29:21,880 --> 00:29:29,380
sc2 characters a very strange and this

389
00:29:26,450 --> 00:29:32,300
is the frequency of the distribution

390
00:29:29,380 --> 00:29:34,340
this is the difference between foolish

391
00:29:32,300 --> 00:29:41,230
and Chinese and you may see that some of

392
00:29:34,340 --> 00:29:41,230
masks are very likely to show like three

393
00:29:41,500 --> 00:29:47,690
small case letters plus three numbers

394
00:29:44,720 --> 00:29:51,020
etc and then the masks that we may apply

395
00:29:47,690 --> 00:29:54,140
to restructure patterns give us lots of

396
00:29:51,020 --> 00:29:56,300
information about people behind them and

397
00:29:54,140 --> 00:29:59,660
let us say okay let us try this regular

398
00:29:56,300 --> 00:30:03,440
or this habitual expression let us do a

399
00:29:59,660 --> 00:30:07,010
search of masks and then we will be

400
00:30:03,440 --> 00:30:10,850
finding one with a digits on the letter

401
00:30:07,010 --> 00:30:14,270
and then the results is like high number

402
00:30:10,850 --> 00:30:19,909
of people whose password is their ID

403
00:30:14,270 --> 00:30:23,060
card number so this is what a certain

404
00:30:19,910 --> 00:30:26,030
then not only that but also just as a

405
00:30:23,060 --> 00:30:29,179
password the telephone number the

406
00:30:26,030 --> 00:30:32,120
address so this is very very frisky and

407
00:30:29,180 --> 00:30:37,550
then we may also get my social security

408
00:30:32,120 --> 00:30:40,459
number from the US many of the passwords

409
00:30:37,550 --> 00:30:47,930
followed that pattern and not only that

410
00:30:40,460 --> 00:30:51,620
we also find telephones and there was

411
00:30:47,930 --> 00:30:53,810
the bad guy and then he asked me to call

412
00:30:51,620 --> 00:30:57,729
these numbers to see whether that was my

413
00:30:53,810 --> 00:31:03,740
number so we have telephone numbers

414
00:30:57,730 --> 00:31:07,460
people mobile telephone numbers

415
00:31:03,740 --> 00:31:11,500
we also have telephone numbers from

416
00:31:07,460 --> 00:31:14,270
Madrid starting off with nine one and

417
00:31:11,500 --> 00:31:18,260
this is nine five eight

418
00:31:14,270 --> 00:31:26,149
this is landline from Granada 257

419
00:31:18,260 --> 00:31:28,399
results know that in Malaga you only had

420
00:31:26,149 --> 00:31:30,529
you did I didn't know that you have

421
00:31:28,399 --> 00:31:33,979
learnt a number and I thought that you

422
00:31:30,529 --> 00:31:37,190
only had a beer brand different from

423
00:31:33,980 --> 00:31:39,740
mouth so what else can we do with masks

424
00:31:37,190 --> 00:31:43,279
we can do very many interesting things

425
00:31:39,740 --> 00:31:46,899
let us go in deeper into the analysis

426
00:31:43,279 --> 00:31:49,789
table will tell you more about it okay

427
00:31:46,899 --> 00:31:52,729
let us see how all that translates into

428
00:31:49,789 --> 00:31:54,740
real world I will be brushing because we

429
00:31:52,730 --> 00:31:57,140
don't have lots of sand left but do you

430
00:31:54,740 --> 00:31:59,899
have 25 minutes every time I start I

431
00:31:57,140 --> 00:32:04,279
make a cracking with a password with a

432
00:31:59,899 --> 00:32:08,178
quick hash I do this is a masked I will

433
00:32:04,279 --> 00:32:11,350
remove all the passwords with six

434
00:32:08,179 --> 00:32:13,580
characters or less than that so

435
00:32:11,350 --> 00:32:16,730
approximately there are hundreds of

436
00:32:13,580 --> 00:32:18,590
thousands of millions of key spaces so

437
00:32:16,730 --> 00:32:20,480
how long does it take me to go through

438
00:32:18,590 --> 00:32:22,490
all that if I have the twenty eighty

439
00:32:20,480 --> 00:32:25,370
that Jaime mentioned before that is to

440
00:32:22,490 --> 00:32:26,090
say creating like 50 million hashes per

441
00:32:25,370 --> 00:32:29,539
second

442
00:32:26,090 --> 00:32:30,918
it takes 15 seconds studies under ideal

443
00:32:29,539 --> 00:32:33,260
conditions we are talking about

444
00:32:30,919 --> 00:32:35,690
benchmark conditions where we are

445
00:32:33,260 --> 00:32:37,010
checking that against one hash only this

446
00:32:35,690 --> 00:32:39,649
is very important because if I'm

447
00:32:37,010 --> 00:32:42,080
tracking I'm not cracking one has only

448
00:32:39,649 --> 00:32:43,610
but a pool of hashes that we are talking

449
00:32:42,080 --> 00:32:46,309
about hundreds of thousands of hashes

450
00:32:43,610 --> 00:32:48,949
and this is relevant because the checks

451
00:32:46,309 --> 00:32:52,428
that the actual hardware will have to do

452
00:32:48,950 --> 00:32:55,760
will be as lower as a function of the

453
00:32:52,429 --> 00:32:57,320
number of hashes to be checked out and

454
00:32:55,760 --> 00:32:59,240
the equipment you are using for your

455
00:32:57,320 --> 00:33:03,620
tracking cannot be used for anything

456
00:32:59,240 --> 00:33:06,620
else so still yet we will shift from 15

457
00:33:03,620 --> 00:33:09,080
seconds let us say we will multiply by 5

458
00:33:06,620 --> 00:33:12,020
over 8 and then in the end will be a

459
00:33:09,080 --> 00:33:15,290
couple of minutes and now when we go to

460
00:33:12,020 --> 00:33:18,740
8 characters we are starting to have

461
00:33:15,290 --> 00:33:21,260
higher workload so again 50,000 million

462
00:33:18,740 --> 00:33:23,570
hashes per seconds and in the benchmark

463
00:33:21,260 --> 00:33:28,310
conditions we are talking about 40 hours

464
00:33:23,570 --> 00:33:31,460
if we multiply that that will be long

465
00:33:28,310 --> 00:33:34,490
time - and then we are talking about md5

466
00:33:31,460 --> 00:33:36,980
which is one of the fastest ones

467
00:33:34,490 --> 00:33:39,110
subtract and the only ones that I've

468
00:33:36,980 --> 00:33:45,350
been juicing up until now are the UNIX

469
00:33:39,110 --> 00:33:49,250
months so we have a shot 512 crypts now

470
00:33:45,350 --> 00:33:51,800
I have 350,000 Kay's per second so we

471
00:33:49,250 --> 00:33:54,380
are talking about sixty six hundred and

472
00:33:51,800 --> 00:33:56,180
fifty three years the NDC is exponential

473
00:33:54,380 --> 00:33:59,270
because I have to increase it by two

474
00:33:56,180 --> 00:34:03,800
orders of magnitude so now I'm taking 42

475
00:33:59,270 --> 00:34:07,510
years in md5 and then if I do share 512

476
00:34:03,800 --> 00:34:11,270
crypt that we took me six million years

477
00:34:07,510 --> 00:34:14,120
and then well in six million years time

478
00:34:11,270 --> 00:34:16,009
hopefully I will be retired so therefore

479
00:34:14,120 --> 00:34:18,440
we will have to go around it and we have

480
00:34:16,010 --> 00:34:20,840
to be cleverer and we have to give it

481
00:34:18,440 --> 00:34:23,899
more thought to it first of all we would

482
00:34:20,840 --> 00:34:27,050
like to try the least number of times

483
00:34:23,899 --> 00:34:29,600
possible and we want our temps to be as

484
00:34:27,050 --> 00:34:33,110
successful as possible so the least

485
00:34:29,600 --> 00:34:37,549
checks I will make the better the faster

486
00:34:33,110 --> 00:34:40,639
welcome as I say I want to be faster in

487
00:34:37,550 --> 00:34:43,940
my checking and then if my mask is well

488
00:34:40,639 --> 00:34:46,700
oriented I may end up with all the

489
00:34:43,940 --> 00:34:49,929
hashes before I go through all the key

490
00:34:46,699 --> 00:34:53,418
spices how do I do it

491
00:34:49,929 --> 00:34:55,429
well I have to set two objectives first

492
00:34:53,418 --> 00:34:57,680
of all I have to fine-tune two masks so

493
00:34:55,429 --> 00:34:59,690
forces if I - engagements and I have

494
00:34:57,680 --> 00:35:01,790
achieved lots of hashes from the user

495
00:34:59,690 --> 00:35:06,920
and I know that in the company the

496
00:35:01,790 --> 00:35:07,520
password policies capital letters is no

497
00:35:06,920 --> 00:35:11,000
cops

498
00:35:07,520 --> 00:35:16,250
numbers he said well no well one year

499
00:35:11,000 --> 00:35:18,830
later one a and I can catch it but if I

500
00:35:16,250 --> 00:35:21,680
don't have that information about the

501
00:35:18,830 --> 00:35:23,500
password policy I can just try it out

502
00:35:21,680 --> 00:35:25,990
the most likely

503
00:35:23,500 --> 00:35:27,790
we have counted all the masks that we

504
00:35:25,990 --> 00:35:30,220
have found and we have arranged them by

505
00:35:27,790 --> 00:35:34,690
likeliness and they are indexed on the

506
00:35:30,220 --> 00:35:40,089
page you can make an index search out of

507
00:35:34,690 --> 00:35:43,810
the ten most likely masks only those ten

508
00:35:40,090 --> 00:35:47,740
allow me to track nine percent of the

509
00:35:43,810 --> 00:35:50,170
nine out of ten of passwords if we go

510
00:35:47,740 --> 00:35:52,810
back to the prior numbers if we were

511
00:35:50,170 --> 00:35:57,040
talking about md5 the time will be less

512
00:35:52,810 --> 00:35:58,900
than an hour which is reasonable and we

513
00:35:57,040 --> 00:36:01,240
will be publishing it we will be

514
00:35:58,900 --> 00:36:03,190
publishing all the masks on in this

515
00:36:01,240 --> 00:36:05,919
study just in case someone wants to do

516
00:36:03,190 --> 00:36:07,450
set the second objective that we want to

517
00:36:05,920 --> 00:36:10,030
take into account is the following if

518
00:36:07,450 --> 00:36:15,460
I'm going to go through all that space

519
00:36:10,030 --> 00:36:18,760
keys let us arrange it wide I want the

520
00:36:15,460 --> 00:36:21,520
likeliness the most likely hashes to be

521
00:36:18,760 --> 00:36:23,920
right at the beginning so that I can't

522
00:36:21,520 --> 00:36:26,820
go faster and we could even happen that

523
00:36:23,920 --> 00:36:30,250
by the time I go get halfway through

524
00:36:26,820 --> 00:36:36,550
we'll be done and now let us see what

525
00:36:30,250 --> 00:36:40,650
happens now so these two paths will have

526
00:36:36,550 --> 00:36:45,190
the same masks like one capital letter

527
00:36:40,650 --> 00:36:50,040
for small case letters and then three

528
00:36:45,190 --> 00:36:50,040
numbers so one of them appears in the

529
00:36:51,660 --> 00:36:59,589
masks so Markov chains were implemented

530
00:36:57,340 --> 00:37:02,920
we see in the cracking program about our

531
00:36:59,590 --> 00:37:06,610
Markov chains these are an aesthetic

532
00:37:02,920 --> 00:37:09,580
model teacher often used to arrange the

533
00:37:06,610 --> 00:37:15,900
key space so that the most likely ones

534
00:37:09,580 --> 00:37:19,029
are in the beginning so it analyzes the

535
00:37:15,900 --> 00:37:21,810
character which often appears after a

536
00:37:19,030 --> 00:37:21,810
beat letter

537
00:37:24,670 --> 00:37:36,530
okay I'll come back now here we see that

538
00:37:31,670 --> 00:37:39,710
after a B letter in 90% of the cases we

539
00:37:36,530 --> 00:37:43,540
get an A and only 5% of the cases we get

540
00:37:39,710 --> 00:37:47,510
the C letter therefore out of all the

541
00:37:43,540 --> 00:37:49,670
key space I will put the ones with BA in

542
00:37:47,510 --> 00:37:51,619
the beginning and those with BC I will

543
00:37:49,670 --> 00:37:54,770
put place them in the end and we do that

544
00:37:51,619 --> 00:37:56,510
with all the possibilities but take into

545
00:37:54,770 --> 00:38:00,530
account that we do that for every single

546
00:37:56,510 --> 00:38:02,780
character in the dictionary even so

547
00:38:00,530 --> 00:38:06,290
there comes a time that must stop being

548
00:38:02,780 --> 00:38:10,369
efficient so this makes sense for short

549
00:38:06,290 --> 00:38:12,470
masks and ensure then we have to give

550
00:38:10,369 --> 00:38:17,560
more saturated same mask users

551
00:38:12,470 --> 00:38:20,629
well users can enter as a password a

552
00:38:17,560 --> 00:38:22,369
proper name the name of the pet or

553
00:38:20,630 --> 00:38:23,690
something that is surrounding freezes if

554
00:38:22,369 --> 00:38:26,000
they are having breakfast is a banana

555
00:38:23,690 --> 00:38:28,339
but then the grandmother says no this is

556
00:38:26,000 --> 00:38:30,530
not secure enough and then the user said

557
00:38:28,339 --> 00:38:34,400
okay I will complicated we make it more

558
00:38:30,530 --> 00:38:36,470
secure then I will add a cup and then

559
00:38:34,400 --> 00:38:38,660
because the grandma have seen the movie

560
00:38:36,470 --> 00:38:41,569
and I say okay this is not secure enough

561
00:38:38,660 --> 00:38:44,149
and I said okay I will replace all the a

562
00:38:41,570 --> 00:38:47,060
letters with the form and then to apply

563
00:38:44,150 --> 00:38:51,050
maximum level of security I add this

564
00:38:47,060 --> 00:38:54,290
question of park so the user has mutated

565
00:38:51,050 --> 00:38:57,050
a word to turn it into a password and we

566
00:38:54,290 --> 00:38:59,300
can express those rules in a manner then

567
00:38:57,050 --> 00:39:03,920
we are shifting from a word to a

568
00:38:59,300 --> 00:39:06,619
password so for us well we use the sefer

569
00:39:03,920 --> 00:39:10,400
capitalized which is to say the first

570
00:39:06,619 --> 00:39:14,690
letter is a cup and then the rest are a

571
00:39:10,400 --> 00:39:16,609
small case a lowercase so you can do

572
00:39:14,690 --> 00:39:19,220
that with every single password with

573
00:39:16,609 --> 00:39:22,069
every single word you can think of and

574
00:39:19,220 --> 00:39:25,490
you can make it as long as you can think

575
00:39:22,070 --> 00:39:28,760
of and then we just are more and more

576
00:39:25,490 --> 00:39:32,330
mutation rules many of these rules are

577
00:39:28,760 --> 00:39:34,020
well-known industry standards and they

578
00:39:32,330 --> 00:39:36,000
are just because they have German too

579
00:39:34,020 --> 00:39:39,870
be effective and actually these ones are

580
00:39:36,000 --> 00:39:43,140
distributed with cats so they come in a

581
00:39:39,870 --> 00:39:47,549
folder known as rules but we said we

582
00:39:43,140 --> 00:39:49,560
have over 3000 register a hundred

583
00:39:47,550 --> 00:39:51,600
ninety-six million of unique passwords

584
00:39:49,560 --> 00:39:54,390
why don't we start drawing conclusions

585
00:39:51,600 --> 00:39:57,690
why don't we try to detect the rule that

586
00:39:54,390 --> 00:39:59,549
a user have just to get to here we can

587
00:39:57,690 --> 00:40:02,820
do rules and we will arrange them in

588
00:39:59,550 --> 00:40:08,520
order so therefore the most the highest

589
00:40:02,820 --> 00:40:14,190
or the most used rules will appear in

590
00:40:08,520 --> 00:40:17,250
top well because password comes from a

591
00:40:14,190 --> 00:40:19,440
word to determine the mutation rules

592
00:40:17,250 --> 00:40:21,720
that have induced we really need to know

593
00:40:19,440 --> 00:40:27,150
which is the original word and finding

594
00:40:21,720 --> 00:40:29,490
that out is not that easy what do we do

595
00:40:27,150 --> 00:40:31,920
for that well we do several things here

596
00:40:29,490 --> 00:40:35,220
the first thing that we go to is just to

597
00:40:31,920 --> 00:40:38,010
do an actual count a static analysis of

598
00:40:35,220 --> 00:40:41,100
the mutation Atreides data structure and

599
00:40:38,010 --> 00:40:43,980
then analyze each of the password

600
00:40:41,100 --> 00:40:46,740
whether it is whether it is with an

601
00:40:43,980 --> 00:40:49,650
exclamation mark or it starts off with a

602
00:40:46,740 --> 00:40:54,450
capital letter and I do and I count

603
00:40:49,650 --> 00:40:56,400
every single password that I find so

604
00:40:54,450 --> 00:40:57,810
it's a new one one two three then

605
00:40:56,400 --> 00:41:03,120
because since it starts off with a

606
00:40:57,810 --> 00:41:05,190
copper I just replace it and I do these

607
00:41:03,120 --> 00:41:08,930
for every single password this allows me

608
00:41:05,190 --> 00:41:16,110
to draw conclusions so whenever well is

609
00:41:08,930 --> 00:41:17,430
transformed into a password I can see

610
00:41:16,110 --> 00:41:19,800
which is the final password however

611
00:41:17,430 --> 00:41:22,169
these password with an internal mutation

612
00:41:19,800 --> 00:41:24,180
in them these aesthetic analysis is not

613
00:41:22,170 --> 00:41:30,060
good anymore then I need to do something

614
00:41:24,180 --> 00:41:34,080
else in that case I want to use tak tak

615
00:41:30,060 --> 00:41:37,740
is a really good tool is the projects

616
00:41:34,080 --> 00:41:42,109
uploading app and one of the parties

617
00:41:37,740 --> 00:41:44,479
will Jen which is generator which is

618
00:41:42,109 --> 00:41:47,359
the same purpose that is to say

619
00:41:44,480 --> 00:41:49,759
detecting the world the original world

620
00:41:47,359 --> 00:41:52,308
and the rules that were applied to get a

621
00:41:49,759 --> 00:41:55,970
password try to detect the original

622
00:41:52,309 --> 00:41:58,819
world so and then decide which rules

623
00:41:55,970 --> 00:42:01,999
were applied the problem with parkis

624
00:41:58,819 --> 00:42:05,299
once you try it but sometimes it tries a

625
00:42:01,999 --> 00:42:08,299
lot sometimes it tries not that much so

626
00:42:05,299 --> 00:42:11,319
here we clearly see that the word is

627
00:42:08,299 --> 00:42:16,720
opportunity something has been changed

628
00:42:11,319 --> 00:42:19,420
cup top is a letter and then an @ sign

629
00:42:16,720 --> 00:42:23,450
then it tells me that it comes from

630
00:42:19,420 --> 00:42:25,880
opportunist world but it uses an English

631
00:42:23,450 --> 00:42:27,739
dictionary it is not good for us and I

632
00:42:25,880 --> 00:42:29,779
said well we made it in this punish and

633
00:42:27,739 --> 00:42:31,849
then if I go and tell the password it

634
00:42:29,779 --> 00:42:33,529
tells me that it comes from Posada know

635
00:42:31,849 --> 00:42:36,950
what probably comes from password not

636
00:42:33,529 --> 00:42:39,619
from posad or what so because pack does

637
00:42:36,950 --> 00:42:41,960
not implement does not detect the

638
00:42:39,619 --> 00:42:44,839
language kind of compare it against any

639
00:42:41,960 --> 00:42:46,970
specific dictionary and actually if we

640
00:42:44,839 --> 00:42:49,880
give it a personalized dictionary we

641
00:42:46,970 --> 00:42:52,220
could give that to pack including words

642
00:42:49,880 --> 00:42:54,109
in from different languages pack doesn't

643
00:42:52,220 --> 00:42:57,499
really know which direction to tell them

644
00:42:54,109 --> 00:43:02,828
and the results are not that pitch and

645
00:42:57,499 --> 00:43:02,828
sometimes but let us say taxi back to

646
00:43:03,940 --> 00:43:10,849
two places the last letter which was an

647
00:43:06,499 --> 00:43:12,589
e but then tack says no no actually what

648
00:43:10,849 --> 00:43:16,099
has been changes that the ninth position

649
00:43:12,589 --> 00:43:19,190
has been replaced with three does this

650
00:43:16,099 --> 00:43:22,579
rule makes sense yes it has been a cry

651
00:43:19,190 --> 00:43:27,019
but surely the user did not go through

652
00:43:22,579 --> 00:43:29,420
that room and actually the same rule is

653
00:43:27,019 --> 00:43:32,808
applied to another world which also has

654
00:43:29,420 --> 00:43:34,910
a letter in the same position doesn't

655
00:43:32,809 --> 00:43:38,420
really make sense so therefore that

656
00:43:34,910 --> 00:43:41,480
results were not that good and there is

657
00:43:38,420 --> 00:43:44,960
no other way to do it but through

658
00:43:41,480 --> 00:43:47,059
cracking so we can't detect the mutation

659
00:43:44,960 --> 00:43:51,309
rule by using hashtags

660
00:43:47,059 --> 00:43:54,280
we carry dictionary we are very many

661
00:43:51,309 --> 00:43:58,030
mutation rules very very many

662
00:43:54,280 --> 00:44:01,330
and then we go to debug mode for debug

663
00:43:58,030 --> 00:44:04,359
mode for when hashtag shine film match

664
00:44:01,330 --> 00:44:06,790
gets in the filed original girl the

665
00:44:04,359 --> 00:44:09,400
invitation drew as well as the final

666
00:44:06,790 --> 00:44:11,500
work after tracking very many hashes

667
00:44:09,400 --> 00:44:14,020
using this technique I go to the debug

668
00:44:11,500 --> 00:44:17,430
file I take the rules and I count them

669
00:44:14,020 --> 00:44:20,590
the rules that were but let's use die

670
00:44:17,430 --> 00:44:22,060
Lister's are put them in the end and

671
00:44:20,590 --> 00:44:24,310
then it allows me to create a specific

672
00:44:22,060 --> 00:44:26,710
rules mutation rules there are not for

673
00:44:24,310 --> 00:44:31,480
general purposes but rules which are

674
00:44:26,710 --> 00:44:36,220
good enough specifically for specific

675
00:44:31,480 --> 00:44:40,000
words or specific rules full password

676
00:44:36,220 --> 00:44:45,549
for rock you for any other because if

677
00:44:40,000 --> 00:44:48,220
I'm cracking basic scenario that will be

678
00:44:45,550 --> 00:44:53,520
the conclusions will be referring to the

679
00:44:48,220 --> 00:44:55,689
base dictionary and then if I add

680
00:44:53,520 --> 00:44:59,320
Spanish dictionary

681
00:44:55,690 --> 00:45:01,750
I can't deduct mutation rules that can

682
00:44:59,320 --> 00:45:04,480
be applied to the Spanish dictionary if

683
00:45:01,750 --> 00:45:06,550
I do an engagement we say Spanish

684
00:45:04,480 --> 00:45:09,550
companies it's very good to use this

685
00:45:06,550 --> 00:45:13,270
rule so good results came from here the

686
00:45:09,550 --> 00:45:18,099
first analysis was a static analysis to

687
00:45:13,270 --> 00:45:19,930
baba 64 that was a result so this is

688
00:45:18,099 --> 00:45:22,420
very good for words precisely through

689
00:45:19,930 --> 00:45:24,970
what I've just told you because static

690
00:45:22,420 --> 00:45:27,339
analysis is about getting a word and see

691
00:45:24,970 --> 00:45:30,310
how this starts and how it finishes and

692
00:45:27,339 --> 00:45:33,720
then we added 64 because we only use

693
00:45:30,310 --> 00:45:38,470
these 64 most frequent or most likely

694
00:45:33,720 --> 00:45:41,799
rules if you go over 64 it becomes less

695
00:45:38,470 --> 00:45:44,080
and less efficient there's 64 one many

696
00:45:41,800 --> 00:45:47,050
people use them adding one two three

697
00:45:44,080 --> 00:45:50,380
adding an exclamation mark in the end at

698
00:45:47,050 --> 00:45:56,290
the end that is work yes it works for

699
00:45:50,380 --> 00:45:58,000
open wall dictionary we are getting 1.4

700
00:45:56,290 --> 00:46:01,250
percent

701
00:45:58,000 --> 00:46:07,549
improvement versus best 64 so the very

702
00:46:01,250 --> 00:46:10,339
same entry well this pool of rules works

703
00:46:07,549 --> 00:46:12,890
better than invested 64 but in other

704
00:46:10,339 --> 00:46:15,828
places this doesn't work as well for

705
00:46:12,890 --> 00:46:18,049
instance wikipedia and i said before

706
00:46:15,829 --> 00:46:20,690
that this is good for words what is the

707
00:46:18,049 --> 00:46:23,259
repercussion of that because if we apply

708
00:46:20,690 --> 00:46:33,500
rock you

709
00:46:23,260 --> 00:46:36,559
- 12.2% words 64 is good for words only

710
00:46:33,500 --> 00:46:38,660
we can deduce that's 64 for general

711
00:46:36,559 --> 00:46:43,940
purposes but we can continue structure

712
00:46:38,660 --> 00:46:46,368
in rows we get that from tracking we use

713
00:46:43,940 --> 00:46:47,960
as a base but not password and the

714
00:46:46,369 --> 00:46:50,329
results here are very very cool

715
00:46:47,960 --> 00:46:53,180
by using Wikipedia in Spanish there is

716
00:46:50,329 --> 00:46:56,450
merely an improving a 30% versus that

717
00:46:53,180 --> 00:47:01,160
one I use that one because it includes

718
00:46:56,450 --> 00:47:04,430
like 34,000 rules of mutation and then

719
00:47:01,160 --> 00:47:06,500
in case of Wikipedia in English 25.7

720
00:47:04,430 --> 00:47:09,609
improvement versus that one that one is

721
00:47:06,500 --> 00:47:13,010
one of the industry standards

722
00:47:09,609 --> 00:47:17,240
hamaji similar but instead of using

723
00:47:13,010 --> 00:47:19,730
words from wikipedia we use them that

724
00:47:17,240 --> 00:47:22,700
words come from Tokyo which is another

725
00:47:19,730 --> 00:47:25,099
industry standards and kanashii 14

726
00:47:22,700 --> 00:47:27,230
million passwords so we are seeing

727
00:47:25,099 --> 00:47:29,960
improvements between 10 and 13 percent

728
00:47:27,230 --> 00:47:32,540
here so these rules will also be

729
00:47:29,960 --> 00:47:34,460
published the set of rules that we are

730
00:47:32,540 --> 00:47:35,660
finding will be published for those of

731
00:47:34,460 --> 00:47:48,200
you who would need to use them for your

732
00:47:35,660 --> 00:47:49,819
cracking news first punish yes but

733
00:47:48,200 --> 00:47:52,339
curiously enough those rules that are

734
00:47:49,819 --> 00:47:53,960
good for a Spanish language concert very

735
00:47:52,339 --> 00:47:56,569
much with those rules that are good for

736
00:47:53,960 --> 00:47:58,790
languages in other four words in other

737
00:47:56,569 --> 00:48:01,190
languages that is to say Spanish the

738
00:47:58,790 --> 00:48:03,740
speakers and you use the same mutations

739
00:48:01,190 --> 00:48:05,270
and intersection with speakers and

740
00:48:03,740 --> 00:48:07,848
that's the reason why we did not

741
00:48:05,270 --> 00:48:08,810
restrict any specific pool for Spanish

742
00:48:07,849 --> 00:48:13,280
language

743
00:48:08,810 --> 00:48:15,950
hi men mentioned before that 2016 20

744
00:48:13,280 --> 00:48:17,960
that comes a time that have exhausted

745
00:48:15,950 --> 00:48:20,689
all the dictionary all the mutation

746
00:48:17,960 --> 00:48:22,130
rules I can religious anymore mask

747
00:48:20,690 --> 00:48:24,830
because it would take years and years

748
00:48:22,130 --> 00:48:27,290
but I want to keep on going deeper and

749
00:48:24,830 --> 00:48:32,660
deeper getting more more because we may

750
00:48:27,290 --> 00:48:36,230
reach the admin account so getting down

751
00:48:32,660 --> 00:48:39,500
to that last 20% is very very difficult

752
00:48:36,230 --> 00:48:42,890
lots of hard work has been done just to

753
00:48:39,500 --> 00:48:44,840
get hashes are at 20% a good way to do

754
00:48:42,890 --> 00:48:46,940
it is through combination attacks

755
00:48:44,840 --> 00:48:48,680
instead of one dictionary we take two

756
00:48:46,940 --> 00:48:53,360
dictionaries I will be combining the

757
00:48:48,680 --> 00:48:55,190
words of both dictionaries or hybrid

758
00:48:53,360 --> 00:48:58,880
attacks that is to say dictionary

759
00:48:55,190 --> 00:49:00,860
plasmas either and are gaining or at the

760
00:48:58,880 --> 00:49:03,260
ends but if the mask is very long and

761
00:49:00,860 --> 00:49:04,970
the dictionary is very long we are

762
00:49:03,260 --> 00:49:09,020
beginning trouble I need to fine-tune

763
00:49:04,970 --> 00:49:12,939
that random rules huskar allows me to

764
00:49:09,020 --> 00:49:17,420
implement Brandon Routh if you're lucky

765
00:49:12,940 --> 00:49:19,250
mutation rules will be generated so here

766
00:49:17,420 --> 00:49:21,880
we are coming at a point that if we get

767
00:49:19,250 --> 00:49:26,540
one more hash we will be already

768
00:49:21,880 --> 00:49:29,290
successful strings

769
00:49:26,540 --> 00:49:35,720
not this prints but these other prints

770
00:49:29,290 --> 00:49:36,710
trains was an attack made by a guy

771
00:49:35,720 --> 00:49:39,049
working in the husk

772
00:49:36,710 --> 00:49:41,540
project it is about getting a dictionary

773
00:49:39,050 --> 00:49:46,460
putting in the memory and then in each

774
00:49:41,540 --> 00:49:47,960
line first word is made up based on

775
00:49:46,460 --> 00:49:50,990
those elements so for instance if in the

776
00:49:47,960 --> 00:49:55,810
dictionary you have a number of words

777
00:49:50,990 --> 00:49:58,879
with length 4 then you just add up two

778
00:49:55,810 --> 00:50:01,820
words of length four and then you come

779
00:49:58,880 --> 00:50:04,250
up with one of length 8 and then you

780
00:50:01,820 --> 00:50:07,400
rotate all the elements or each of its

781
00:50:04,250 --> 00:50:09,290
position positions and then this gets

782
00:50:07,400 --> 00:50:10,810
more and more complicated the longer you

783
00:50:09,290 --> 00:50:14,259
make it because you will have more

784
00:50:10,810 --> 00:50:18,340
combinations or sometimes you will not

785
00:50:14,260 --> 00:50:22,270
get as some of four

786
00:50:18,340 --> 00:50:24,810
because you cannot really sum sum up for

787
00:50:22,270 --> 00:50:27,580
if the world has learned from

788
00:50:24,810 --> 00:50:31,420
five-position but this is never well

789
00:50:27,580 --> 00:50:34,690
there is always that 20% left once I was

790
00:50:31,420 --> 00:50:40,080
at home browsing the internet or for

791
00:50:34,690 --> 00:50:42,670
some reason I came up to this particular

792
00:50:40,080 --> 00:50:46,360
Tyrol is the unreasonable effectiveness

793
00:50:42,670 --> 00:50:49,390
of recurrent neural networks and I said

794
00:50:46,360 --> 00:50:50,830
well unreasonable I read the article

795
00:50:49,390 --> 00:50:56,049
and then this is about creating

796
00:50:50,830 --> 00:50:59,799
recurrent neural network that gets a

797
00:50:56,050 --> 00:51:01,900
text from Shakespeare and then heat

798
00:50:59,800 --> 00:51:05,710
results the results

799
00:51:01,900 --> 00:51:07,810
looks like the shakespeare text has the

800
00:51:05,710 --> 00:51:10,690
same structure and I said okay I will

801
00:51:07,810 --> 00:51:15,040
try it I will just enter included

802
00:51:10,690 --> 00:51:23,260
Spanish promise and then the results

803
00:51:15,040 --> 00:51:26,500
looks like proverbs this looks like her

804
00:51:23,260 --> 00:51:28,890
brother is in it but we don't say that

805
00:51:26,500 --> 00:51:31,540
because this doesn't really make sense

806
00:51:28,890 --> 00:51:37,900
okay let's take a look at this example

807
00:51:31,540 --> 00:51:39,790
if I think if I use Chrome on streets it

808
00:51:37,900 --> 00:51:43,480
will the results will be very similar to

809
00:51:39,790 --> 00:51:44,800
Romans treats and the conclusion saves

810
00:51:43,480 --> 00:51:47,410
are very interesting it tries to

811
00:51:44,800 --> 00:51:52,060
replicate this structure not the meaning

812
00:51:47,410 --> 00:51:58,799
of it some for instance will have cecum

813
00:51:52,060 --> 00:52:04,860
implicit places sit at the ends of these

814
00:51:58,800 --> 00:52:07,660
statements so these are shoes statements

815
00:52:04,860 --> 00:52:12,880
maximum 280 characters

816
00:52:07,660 --> 00:52:18,220
I just several treats of published by

817
00:52:12,880 --> 00:52:20,920
Roman nosies the multi cons so the

818
00:52:18,220 --> 00:52:23,259
structure of this statement is starting

819
00:52:20,920 --> 00:52:25,710
off with capital letter finishing off

820
00:52:23,260 --> 00:52:25,710
with

821
00:52:26,590 --> 00:52:33,020
and what happens if I input passwords

822
00:52:30,730 --> 00:52:36,020
passwords that have been generated by

823
00:52:33,020 --> 00:52:40,340
humans well the results will be similar

824
00:52:36,020 --> 00:52:43,850
to human passwords so in noodle Network

825
00:52:40,340 --> 00:52:49,120
fed by the first million of kaonashi

826
00:52:43,850 --> 00:52:49,120
passwords that found but a bit filtered

827
00:52:50,770 --> 00:52:58,310
all those with length of five or less

828
00:52:54,890 --> 00:53:00,920
than that and these were the results and

829
00:52:58,310 --> 00:53:02,630
this is very rich these are the results

830
00:53:00,920 --> 00:53:05,480
with the first million but I can

831
00:53:02,630 --> 00:53:07,760
fine-tune it more and I said I will add

832
00:53:05,480 --> 00:53:10,250
passwords with the length of 14 or more

833
00:53:07,760 --> 00:53:12,050
and these are the results they look like

834
00:53:10,250 --> 00:53:14,960
that

835
00:53:12,050 --> 00:53:17,660
and then if I include Spanish words the

836
00:53:14,960 --> 00:53:19,250
results looked like Spanish words none

837
00:53:17,660 --> 00:53:21,799
of those words exist

838
00:53:19,250 --> 00:53:26,900
I looked full up but they could

839
00:53:21,800 --> 00:53:30,170
perfectly be Spanish words that really

840
00:53:26,900 --> 00:53:32,360
makes sense could be in Spanish words

841
00:53:30,170 --> 00:53:34,370
but they are not they do not exist in

842
00:53:32,360 --> 00:53:37,550
the Spanish dictionary and even more

843
00:53:34,370 --> 00:53:39,770
interesting if I get a word if I want to

844
00:53:37,550 --> 00:53:43,520
do a pet contesting to read it count

845
00:53:39,770 --> 00:53:46,820
organiser I get the word and I input it

846
00:53:43,520 --> 00:53:49,730
in the pool of mutation rules and then

847
00:53:46,820 --> 00:53:52,940
what do I get as a result I get things

848
00:53:49,730 --> 00:53:55,100
that are similar to the mutated word

849
00:53:52,940 --> 00:53:57,560
which at the same time is similar to the

850
00:53:55,100 --> 00:54:00,980
original word so that were helps me

851
00:53:57,560 --> 00:54:03,500
extract in theory infinite number of

852
00:54:00,980 --> 00:54:07,280
combinations there will come a time that

853
00:54:03,500 --> 00:54:12,020
the I start to see repetitions but it

854
00:54:07,280 --> 00:54:15,410
gives me lots of freedom and now that's

855
00:54:12,020 --> 00:54:19,580
this truly work actually papers have

856
00:54:15,410 --> 00:54:22,399
been written and now let us take a look

857
00:54:19,580 --> 00:54:26,569
at the actual results so the first

858
00:54:22,400 --> 00:54:32,200
result examples that I showed you and I

859
00:54:26,570 --> 00:54:32,200
said well modern is 6000 password

860
00:54:32,470 --> 00:54:40,368
came up as a result 15 percent came from

861
00:54:37,369 --> 00:54:43,039
the set of training that is to say what

862
00:54:40,369 --> 00:54:45,410
we have entered as an input so we

863
00:54:43,039 --> 00:54:48,229
removed those ones because we knew this

864
00:54:45,410 --> 00:54:51,129
one and now we are left with 90,000 out

865
00:54:48,229 --> 00:54:56,930
of those 19,000 one third of them nearly

866
00:54:51,130 --> 00:54:59,989
30,000 but presenting cannot see in the

867
00:54:56,930 --> 00:55:07,819
whole pool of Cana see let us give a

868
00:54:59,989 --> 00:55:10,670
flower to it cannot in full so if we

869
00:55:07,819 --> 00:55:14,058
implement a neural network and finding

870
00:55:10,670 --> 00:55:19,339
30,000 has words that cannot be

871
00:55:14,059 --> 00:55:21,529
potentially included by human that means

872
00:55:19,339 --> 00:55:23,690
that the remaining 60,000 could be

873
00:55:21,529 --> 00:55:26,329
entered by human but I don't have them

874
00:55:23,690 --> 00:55:28,339
but that does not make them any more

875
00:55:26,329 --> 00:55:31,039
valid and these are the ones that I will

876
00:55:28,339 --> 00:55:38,299
be using for whatever engagements I

877
00:55:31,039 --> 00:55:40,819
would like to make we use all those

878
00:55:38,299 --> 00:55:43,940
techniques to track what I mentioned

879
00:55:40,819 --> 00:55:47,599
before those LinkedIn hashes the not

880
00:55:43,940 --> 00:55:49,549
that the last 20% but then the last 40%

881
00:55:47,599 --> 00:55:50,989
that's between trying to go deeper and

882
00:55:49,549 --> 00:55:55,160
deeper by using combination of these

883
00:55:50,989 --> 00:56:01,219
techniques we managed to break 347

884
00:55:55,160 --> 00:56:03,288
hashes more so 347 after 4 years of

885
00:56:01,219 --> 00:56:06,589
having people trying to track those

886
00:56:03,289 --> 00:56:09,259
hashes and we were successful so these

887
00:56:06,589 --> 00:56:11,979
ones for you these mornings every time I

888
00:56:09,259 --> 00:56:14,539
launched s I get new hash by using

889
00:56:11,979 --> 00:56:16,759
combinations of the results from the

890
00:56:14,539 --> 00:56:18,410
prints attack from neural networks I'm

891
00:56:16,759 --> 00:56:20,529
getting more and more caches and

892
00:56:18,410 --> 00:56:23,029
actually I just left it at home

893
00:56:20,529 --> 00:56:25,789
sending out lunches to see whether I get

894
00:56:23,029 --> 00:56:28,099
any more hashes well I don't want you to

895
00:56:25,789 --> 00:56:29,809
crack me what do I do for that well we

896
00:56:28,099 --> 00:56:31,759
can take different perspectives here

897
00:56:29,809 --> 00:56:34,489
well on the side of blue team

898
00:56:31,759 --> 00:56:36,739
administrators what should i do so that

899
00:56:34,489 --> 00:56:40,400
I'm not attract first of all you have to

900
00:56:36,739 --> 00:56:41,860
use the slow hashes not md5 busy cribs

901
00:56:40,400 --> 00:56:45,070
script etc

902
00:56:41,860 --> 00:56:47,770
seconds you have to use salted hashes

903
00:56:45,070 --> 00:56:50,080
but I did not explain salt salt is a

904
00:56:47,770 --> 00:56:54,130
small chain that you add to the entry

905
00:56:50,080 --> 00:56:57,160
world that is the random chain and it

906
00:56:54,130 --> 00:57:00,160
allows you to change the hash if I has

907
00:56:57,160 --> 00:57:03,009
Pablo twice and then I use different

908
00:57:00,160 --> 00:57:04,660
salts the hashes that are generators are

909
00:57:03,010 --> 00:57:10,470
different so if I have a lookup table

910
00:57:04,660 --> 00:57:14,020
such as rainbow or table that we

911
00:57:10,470 --> 00:57:16,149
generated before took up table so the

912
00:57:14,020 --> 00:57:21,340
hashes would not be found on that table

913
00:57:16,150 --> 00:57:23,190
and then the user should be applied to

914
00:57:21,340 --> 00:57:25,540
use multiple factors of authentication

915
00:57:23,190 --> 00:57:28,090
if user

916
00:57:25,540 --> 00:57:31,210
well will would not be cracked if I use

917
00:57:28,090 --> 00:57:34,470
multiple factors of authentication have

918
00:57:31,210 --> 00:57:40,450
two options either I use long enough

919
00:57:34,470 --> 00:57:43,890
hash passwords random passwords or I can

920
00:57:40,450 --> 00:57:46,509
also use correct whose bottomless table

921
00:57:43,890 --> 00:57:52,540
you are giving me a strange face but

922
00:57:46,510 --> 00:57:55,000
this is very famous comic strip which

923
00:57:52,540 --> 00:57:56,770
very well summarizes a very good

924
00:57:55,000 --> 00:58:00,610
technique for you to generate secure

925
00:57:56,770 --> 00:58:04,360
password it is about including common

926
00:58:00,610 --> 00:58:08,710
words in a random manner so that adds to

927
00:58:04,360 --> 00:58:10,600
the level of security if you think about

928
00:58:08,710 --> 00:58:14,290
the techniques that we use before how we

929
00:58:10,600 --> 00:58:16,270
can break these password Kovak host

930
00:58:14,290 --> 00:58:18,310
battery is stable you will have to use a

931
00:58:16,270 --> 00:58:20,350
specific dictionaries this and that that

932
00:58:18,310 --> 00:58:24,250
would be very very complicated to track

933
00:58:20,350 --> 00:58:27,480
and well that's all from us we are happy

934
00:58:24,250 --> 00:58:27,480
to take any questions that you may have

935
00:58:32,970 --> 00:58:40,779
impression and Lara Lara and Alayna

936
00:58:37,740 --> 00:58:42,848
impressive remember that you have to use

937
00:58:40,780 --> 00:58:46,060
a microphones that are located at the

938
00:58:42,849 --> 00:58:54,190
front in various areas we have a

939
00:58:46,060 --> 00:58:56,950
cryptographer here quick question for

940
00:58:54,190 --> 00:59:01,660
the mutations and roles have you use

941
00:58:56,950 --> 00:59:03,910
similar rules used by in searches you

942
00:59:01,660 --> 00:59:06,009
meant to say this word instead of that

943
00:59:03,910 --> 00:59:10,839
word that kind of thing I don't know

944
00:59:06,010 --> 00:59:17,859
actually how you do it I imagine they

945
00:59:10,839 --> 00:59:22,299
have recently how many try to apply it

946
00:59:17,859 --> 00:59:24,460
but it's a good idea actually is related

947
00:59:22,300 --> 00:59:29,790
to once you've commented about neural

948
00:59:24,460 --> 00:59:29,790
networks you take a look past and

949
00:59:33,240 --> 00:59:43,569
improve those improve the paper of path

950
00:59:38,740 --> 00:59:46,118
10 which was implemented the paper

951
00:59:43,569 --> 00:59:48,670
didn't give any results and the training

952
00:59:46,119 --> 00:59:51,069
student demonstrated was better than his

953
00:59:48,670 --> 00:59:53,109
in recurring neural networks in

954
00:59:51,069 --> 00:59:58,390
real-world tests I didn't find it was

955
00:59:53,109 --> 01:00:02,109
better okay that was all thank you for

956
00:59:58,390 --> 01:00:06,279
the question I can't see it because some

957
01:00:02,109 --> 01:00:10,328
people are blocking the view of the

958
01:00:06,280 --> 01:00:14,220
microphones one first brilliant

959
01:00:10,329 --> 01:00:14,220
presentation one of the best I've seen

960
01:00:16,319 --> 01:00:30,430
it's possible cracking so sing

961
01:00:25,290 --> 01:00:33,910
hallelujah very late he made a conscious

962
01:00:30,430 --> 01:00:40,779
end user this is a part of a project

963
01:00:33,910 --> 01:00:44,049
have that makes stripper tapeworm news

964
01:00:40,780 --> 01:00:48,400
things from social media so this is a

965
01:00:44,050 --> 01:01:00,850
mix of a bunch of things to say hey this

966
01:00:48,400 --> 01:01:08,680
fits in with that unique has three

967
01:01:00,850 --> 01:01:13,589
thousand seven hundred million four

968
01:01:08,680 --> 01:01:16,509
clusters each one two different planes

969
01:01:13,590 --> 01:01:18,940
relationships of different projects we

970
01:01:16,510 --> 01:01:21,390
can see it but it's very complicated to

971
01:01:18,940 --> 01:01:25,860
give you an answer

972
01:01:21,390 --> 01:01:25,859
so congratulations thank you very much

973
01:01:26,100 --> 01:01:36,040
no for the questions apparently neuronal

974
01:01:32,860 --> 01:01:39,940
network I think you should give more

975
01:01:36,040 --> 01:01:50,230
time to that don't meet you said you

976
01:01:39,940 --> 01:01:52,060
haven't worked enough other inputs to

977
01:01:50,230 --> 01:01:54,160
get passwords which i think is a very

978
01:01:52,060 --> 01:01:56,980
interesting thing we can talk about this

979
01:01:54,160 --> 01:01:57,670
privately later anyway thank you very

980
01:01:56,980 --> 01:02:03,989
much

981
01:01:57,670 --> 01:02:03,989
[Applause]

