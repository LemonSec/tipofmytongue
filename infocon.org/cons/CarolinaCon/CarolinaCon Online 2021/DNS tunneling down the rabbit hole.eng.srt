1
00:00:13,040 --> 00:00:14,639
hi my name is tim steiner

2
00:00:14,639 --> 00:00:16,400
and this is my first time presenting at

3
00:00:16,400 --> 00:00:17,680
carolinacon

4
00:00:17,680 --> 00:00:20,000
a little about me i'm a cyber security

5
00:00:20,000 --> 00:00:21,840
consultant in north carolina

6
00:00:21,840 --> 00:00:23,359
and i've been working in the industry

7
00:00:23,359 --> 00:00:25,760
for many years now focusing in offensive

8
00:00:25,760 --> 00:00:26,720
security

9
00:00:26,720 --> 00:00:29,039
today i'm going to be presenting one of

10
00:00:29,039 --> 00:00:31,519
my favorite topics which is red teaming

11
00:00:31,519 --> 00:00:33,840
and we're going to be focusing on the

12
00:00:33,840 --> 00:00:35,360
method of command and control

13
00:00:35,360 --> 00:00:38,879
known as dns tunneling so no matter how

14
00:00:38,879 --> 00:00:40,000
tightly you restrict

15
00:00:40,000 --> 00:00:42,079
outbound access from your network you

16
00:00:42,079 --> 00:00:44,239
probably allow dns queries to at least

17
00:00:44,239 --> 00:00:45,280
one server

18
00:00:45,280 --> 00:00:47,440
adversaries can abuse this hole in your

19
00:00:47,440 --> 00:00:49,200
firewall to exfiltrate data and

20
00:00:49,200 --> 00:00:50,879
establish a stealthy

21
00:00:50,879 --> 00:00:53,280
method of command and control it's very

22
00:00:53,280 --> 00:00:54,480
difficult to block

23
00:00:54,480 --> 00:00:57,840
and difficult to detect here's our

24
00:00:57,840 --> 00:00:59,280
agenda for today

25
00:00:59,280 --> 00:01:01,440
i will be giving some background on dns

26
00:01:01,440 --> 00:01:03,359
tunneling and showing how it works and

27
00:01:03,359 --> 00:01:04,959
then we're going to go through a demo

28
00:01:04,959 --> 00:01:07,119
where we take a look at actual dns

29
00:01:07,119 --> 00:01:08,080
packets

30
00:01:08,080 --> 00:01:10,720
so you can see specifically how data is

31
00:01:10,720 --> 00:01:13,439
tunneled inside of dns requests

32
00:01:13,439 --> 00:01:15,600
we'll take a look at the examples from

33
00:01:15,600 --> 00:01:17,520
the miter attack framework

34
00:01:17,520 --> 00:01:20,640
and also the recent solarwinds sunburst

35
00:01:20,640 --> 00:01:21,840
payload

36
00:01:21,840 --> 00:01:24,240
and then we will go into some specifics

37
00:01:24,240 --> 00:01:25,119
such as

38
00:01:25,119 --> 00:01:27,680
how blue teams can mitigate the dns

39
00:01:27,680 --> 00:01:28,720
tunneling threat

40
00:01:28,720 --> 00:01:30,799
and how red teams can evade those

41
00:01:30,799 --> 00:01:33,520
mitigations

42
00:01:34,240 --> 00:01:37,520
alright so an overview of dns tunneling

43
00:01:37,520 --> 00:01:41,200
dns what is it why do we need it

44
00:01:41,200 --> 00:01:43,680
so dns is one of the oldest parts of the

45
00:01:43,680 --> 00:01:45,680
internet it's uh one of the most

46
00:01:45,680 --> 00:01:47,840
important pieces that makes the internet

47
00:01:47,840 --> 00:01:49,360
work without it

48
00:01:49,360 --> 00:01:50,720
whenever you wanted to browse to a

49
00:01:50,720 --> 00:01:53,040
website you would have to type in an ip

50
00:01:53,040 --> 00:01:53,680
address

51
00:01:53,680 --> 00:01:56,399
instead of typing in google.com you'd

52
00:01:56,399 --> 00:01:57,200
have to type in

53
00:01:57,200 --> 00:02:00,240
a number it's kind of like if you had to

54
00:02:00,240 --> 00:02:00,880
remember

55
00:02:00,880 --> 00:02:03,360
everyone's phone number in a phone book

56
00:02:03,360 --> 00:02:04,399
rather than

57
00:02:04,399 --> 00:02:07,600
just looking it up by their name so dns

58
00:02:07,600 --> 00:02:08,000
allows

59
00:02:08,000 --> 00:02:11,200
us to use names dns stands for domain

60
00:02:11,200 --> 00:02:11,599
name

61
00:02:11,599 --> 00:02:14,480
system so with this it's going to

62
00:02:14,480 --> 00:02:15,840
resolve

63
00:02:15,840 --> 00:02:18,720
names to ip addresses so it makes it so

64
00:02:18,720 --> 00:02:19,120
that

65
00:02:19,120 --> 00:02:21,599
one does not simply have to remember

66
00:02:21,599 --> 00:02:22,160
every

67
00:02:22,160 --> 00:02:24,239
website i p address you can just

68
00:02:24,239 --> 00:02:25,680
remember the site name

69
00:02:25,680 --> 00:02:27,599
and you type it in and your browser does

70
00:02:27,599 --> 00:02:29,040
all the work for you

71
00:02:29,040 --> 00:02:31,840
so this is convenient for users and it's

72
00:02:31,840 --> 00:02:34,319
something that's definitely needed

73
00:02:34,319 --> 00:02:37,040
it's also something that can be misused

74
00:02:37,040 --> 00:02:37,840
by

75
00:02:37,840 --> 00:02:41,040
attackers and red teams so dns tunneling

76
00:02:41,040 --> 00:02:43,680
is a common method of misusing the dns

77
00:02:43,680 --> 00:02:45,840
protocol to encode data

78
00:02:45,840 --> 00:02:48,319
inside of the dns requests and get

79
00:02:48,319 --> 00:02:50,239
responses back that allow

80
00:02:50,239 --> 00:02:53,440
for covert communication it's a channel

81
00:02:53,440 --> 00:02:53,920
where

82
00:02:53,920 --> 00:02:56,560
we can send and receive information and

83
00:02:56,560 --> 00:02:58,000
it's not easy to

84
00:02:58,000 --> 00:03:00,640
detect that we're covertly communicating

85
00:03:00,640 --> 00:03:04,560
over that channel

86
00:03:04,560 --> 00:03:06,879
so why it still works this is an

87
00:03:06,879 --> 00:03:08,879
explanation i often have to give during

88
00:03:08,879 --> 00:03:10,720
red team presentations

89
00:03:10,720 --> 00:03:13,040
why does dns tunneling work why didn't

90
00:03:13,040 --> 00:03:14,959
our sim catch it

91
00:03:14,959 --> 00:03:17,120
why hasn't someone come up with a 100

92
00:03:17,120 --> 00:03:18,000
percent effective

93
00:03:18,000 --> 00:03:20,800
way to prevent this threat and why can't

94
00:03:20,800 --> 00:03:22,400
we implement that

95
00:03:22,400 --> 00:03:24,480
so with dns tunneling even if all of

96
00:03:24,480 --> 00:03:26,319
your workstations are locked down and

97
00:03:26,319 --> 00:03:28,480
with a tight egress policy

98
00:03:28,480 --> 00:03:30,239
where no ports are permitted outbound

99
00:03:30,239 --> 00:03:32,400
and dns is only permitted to your own

100
00:03:32,400 --> 00:03:35,040
internal dns server that still doesn't

101
00:03:35,040 --> 00:03:37,200
prevent dns tunneling because

102
00:03:37,200 --> 00:03:39,120
if you look at our diagram here we have

103
00:03:39,120 --> 00:03:40,480
an internal network we have a

104
00:03:40,480 --> 00:03:41,519
workstation

105
00:03:41,519 --> 00:03:43,599
who's trying to reach out to find where

106
00:03:43,599 --> 00:03:46,720
is password.website.com

107
00:03:46,720 --> 00:03:48,560
the workstation asks the local dns

108
00:03:48,560 --> 00:03:50,400
server the local dns server doesn't know

109
00:03:50,400 --> 00:03:52,000
where this is so it asks

110
00:03:52,000 --> 00:03:54,319
the public dns server reaches out over

111
00:03:54,319 --> 00:03:55,519
the internet

112
00:03:55,519 --> 00:03:57,840
that that server doesn't know so it

113
00:03:57,840 --> 00:04:00,000
reaches out to the authoritative name

114
00:04:00,000 --> 00:04:02,400
server which here is our hacker

115
00:04:02,400 --> 00:04:03,280
controlled name

116
00:04:03,280 --> 00:04:06,400
server so you can see the packet routes

117
00:04:06,400 --> 00:04:07,519
through the internet

118
00:04:07,519 --> 00:04:09,840
the request makes it to the attacker

119
00:04:09,840 --> 00:04:10,640
server

120
00:04:10,640 --> 00:04:14,080
the attacker receives the password

121
00:04:14,080 --> 00:04:17,040
that we asked in the dns request so

122
00:04:17,040 --> 00:04:18,880
we've been able to encode some text

123
00:04:18,880 --> 00:04:20,478
in a dns request send it across the

124
00:04:20,478 --> 00:04:22,240
internet to an attacker

125
00:04:22,240 --> 00:04:25,520
so this is an example that's very simple

126
00:04:25,520 --> 00:04:27,120
in a real world example we would

127
00:04:27,120 --> 00:04:29,360
probably have some sort of encryption or

128
00:04:29,360 --> 00:04:31,280
encoding of that we wouldn't just send

129
00:04:31,280 --> 00:04:33,120
password across the internet

130
00:04:33,120 --> 00:04:34,800
but it gives you an idea of how this

131
00:04:34,800 --> 00:04:37,440
works so we're making a dns request

132
00:04:37,440 --> 00:04:39,440
it's routing throughout the internet and

133
00:04:39,440 --> 00:04:41,360
it's eventually getting to

134
00:04:41,360 --> 00:04:44,479
our hacker server alright

135
00:04:44,479 --> 00:04:48,639
time for a demo so on the left side of

136
00:04:48,639 --> 00:04:50,000
my screen here

137
00:04:50,000 --> 00:04:53,040
i have a simulated windows victim and on

138
00:04:53,040 --> 00:04:55,520
the right side is our attacker

139
00:04:55,520 --> 00:04:58,240
view so this is the attacker server

140
00:04:58,240 --> 00:05:00,880
we'll see dns packets come across here

141
00:05:00,880 --> 00:05:02,720
and this is our windows victim where

142
00:05:02,720 --> 00:05:03,919
we'll simulate

143
00:05:03,919 --> 00:05:08,160
running dns tunneling commands and tests

144
00:05:08,160 --> 00:05:11,039
so our windows victim is using a quad 9

145
00:05:11,039 --> 00:05:12,400
dns

146
00:05:12,400 --> 00:05:14,639
so this does have some security features

147
00:05:14,639 --> 00:05:15,440
built in

148
00:05:15,440 --> 00:05:17,840
but in my testing i've not found it to

149
00:05:17,840 --> 00:05:18,639
prevent

150
00:05:18,639 --> 00:05:21,600
dns tunneling so let's do a quick

151
00:05:21,600 --> 00:05:23,280
example

152
00:05:23,280 --> 00:05:25,360
the one from the diagram in the last

153
00:05:25,360 --> 00:05:28,039
slide there we had

154
00:05:28,039 --> 00:05:30,080
password.website.com so here we're going

155
00:05:30,080 --> 00:05:30,479
to

156
00:05:30,479 --> 00:05:36,240
do something similar nslookup

157
00:05:36,840 --> 00:05:39,840
password

158
00:05:40,400 --> 00:05:48,560
dot ns1 dot aws.s3.net so this

159
00:05:48,560 --> 00:05:50,800
is going to be the domain that i have

160
00:05:50,800 --> 00:05:53,840
registered for testing

161
00:05:56,479 --> 00:05:59,919
so we can see that it resolves our dns

162
00:05:59,919 --> 00:06:00,560
request

163
00:06:00,560 --> 00:06:02,479
goes across the internet and reaches our

164
00:06:02,479 --> 00:06:03,840
attacker server

165
00:06:03,840 --> 00:06:07,520
and we can see password okay great so

166
00:06:07,520 --> 00:06:10,160
proof of concept we can send data across

167
00:06:10,160 --> 00:06:11,199
the internet

168
00:06:11,199 --> 00:06:15,039
by using an nslookup command

169
00:06:17,600 --> 00:06:20,160
so first i'll run some commands so you

170
00:06:20,160 --> 00:06:23,600
can see how it looks locally

171
00:06:24,639 --> 00:06:27,280
you can see that if i do a computer name

172
00:06:27,280 --> 00:06:28,000
variable

173
00:06:28,000 --> 00:06:30,639
i get back my computer name and i can

174
00:06:30,639 --> 00:06:31,520
also use

175
00:06:31,520 --> 00:06:33,600
the username variable to display my

176
00:06:33,600 --> 00:06:34,720
username

177
00:06:34,720 --> 00:06:37,520
so we have some basic system information

178
00:06:37,520 --> 00:06:39,440
here we have the computer name

179
00:06:39,440 --> 00:06:41,840
and the username so now let's send that

180
00:06:41,840 --> 00:06:42,479
over

181
00:06:42,479 --> 00:06:45,840
a very simple dns tunnel

182
00:06:45,840 --> 00:06:47,680
in order to do that we'll just put it

183
00:06:47,680 --> 00:06:51,120
into the ns lookup command

184
00:06:51,599 --> 00:06:55,840
and we can see that our dns server is

185
00:06:55,840 --> 00:07:02,160
dns 9 quad 9 and our

186
00:07:02,160 --> 00:07:04,400
request has made it to the attacker

187
00:07:04,400 --> 00:07:07,120
server and we can see in clear text

188
00:07:07,120 --> 00:07:09,840
prepended on the dns query is the name

189
00:07:09,840 --> 00:07:10,960
of our

190
00:07:10,960 --> 00:07:13,520
workstation so now let's do the same

191
00:07:13,520 --> 00:07:14,479
thing for

192
00:07:14,479 --> 00:07:17,840
the username

193
00:07:18,319 --> 00:07:20,720
and we can see that comes across as well

194
00:07:20,720 --> 00:07:22,479
any kind of information across the

195
00:07:22,479 --> 00:07:24,960
internet in a dns packet

196
00:07:24,960 --> 00:07:27,360
so we've demonstrated running commands

197
00:07:27,360 --> 00:07:28,960
where we can send basic system

198
00:07:28,960 --> 00:07:31,199
information next let's try something a

199
00:07:31,199 --> 00:07:32,800
little bit more advanced

200
00:07:32,800 --> 00:07:35,039
that's closer to what an actual dns

201
00:07:35,039 --> 00:07:36,240
tunneling

202
00:07:36,240 --> 00:07:39,199
attack tool might use so by encoding

203
00:07:39,199 --> 00:07:39,919
data

204
00:07:39,919 --> 00:07:43,599
we can send it as base64 and we can send

205
00:07:43,599 --> 00:07:44,160
anything

206
00:07:44,160 --> 00:07:46,720
across the network such as encoded

207
00:07:46,720 --> 00:07:49,039
commands or binary files

208
00:07:49,039 --> 00:07:50,960
the server side can just reverse the

209
00:07:50,960 --> 00:07:52,800
base64 formatting

210
00:07:52,800 --> 00:07:56,840
so that we get the original file or

211
00:07:56,840 --> 00:07:59,840
command

212
00:08:01,280 --> 00:08:04,400
now actual dns tunneling tools are

213
00:08:04,400 --> 00:08:05,199
typically

214
00:08:05,199 --> 00:08:07,440
going to not only use encoding but also

215
00:08:07,440 --> 00:08:08,240
encryption

216
00:08:08,240 --> 00:08:10,000
so that the data would look just like

217
00:08:10,000 --> 00:08:11,599
any other random data

218
00:08:11,599 --> 00:08:15,360
going across the network for sending

219
00:08:15,360 --> 00:08:17,919
our encoded data we'll just do a very

220
00:08:17,919 --> 00:08:19,039
simple

221
00:08:19,039 --> 00:08:22,800
bat file so here i'm running a bat file

222
00:08:22,800 --> 00:08:23,840
to send

223
00:08:23,840 --> 00:08:26,560
what we did in our previous example

224
00:08:26,560 --> 00:08:27,599
nslookup

225
00:08:27,599 --> 00:08:30,639
send some clear text data across and

226
00:08:30,639 --> 00:08:31,360
then here

227
00:08:31,360 --> 00:08:35,360
will base64 encode the same information

228
00:08:35,360 --> 00:08:38,159
into a file using just the built-in

229
00:08:38,159 --> 00:08:40,559
windows commands then we'll send that

230
00:08:40,559 --> 00:08:41,839
across the network in an

231
00:08:41,839 --> 00:08:44,880
nslookup command

232
00:08:50,240 --> 00:08:52,320
so we can see the clear text information

233
00:08:52,320 --> 00:08:55,839
we did in the previous example

234
00:08:56,800 --> 00:09:00,640
and now we can also see base64 encoded

235
00:09:00,640 --> 00:09:03,760
version of that so if we were to take

236
00:09:03,760 --> 00:09:08,560
this base64 encoded string

237
00:09:08,560 --> 00:09:11,440
so here we can just use a very simple

238
00:09:11,440 --> 00:09:12,720
online utility

239
00:09:12,720 --> 00:09:15,200
so you can just see how that works so

240
00:09:15,200 --> 00:09:16,399
decode

241
00:09:16,399 --> 00:09:20,720
this string turns into our original data

242
00:09:20,720 --> 00:09:24,240
so base64 encoding just encodes our

243
00:09:24,240 --> 00:09:26,160
clear text data there's no encryption

244
00:09:26,160 --> 00:09:28,320
here using a bat file like this

245
00:09:28,320 --> 00:09:30,240
isn't just good for demonstration

246
00:09:30,240 --> 00:09:32,560
purposes you can actually use this for

247
00:09:32,560 --> 00:09:34,399
testing out an environment if you're a

248
00:09:34,399 --> 00:09:37,040
blue team maybe showing your boss hey

249
00:09:37,040 --> 00:09:40,000
here's how dns tunneling works or for

250
00:09:40,000 --> 00:09:41,279
red teamers you could use

251
00:09:41,279 --> 00:09:44,000
a fat file like this as kind of a dummy

252
00:09:44,000 --> 00:09:46,160
payload for a phishing campaign

253
00:09:46,160 --> 00:09:48,160
where proof of concept we're able to

254
00:09:48,160 --> 00:09:49,200
extract

255
00:09:49,200 --> 00:09:51,040
sensitive information we got code

256
00:09:51,040 --> 00:09:52,800
execution on the workstation

257
00:09:52,800 --> 00:09:54,399
but we're not really doing anything

258
00:09:54,399 --> 00:09:56,320
malicious here

259
00:09:56,320 --> 00:09:59,360
okay so here we will use the dns

260
00:09:59,360 --> 00:10:02,480
cat 2 powershell client to run on the

261
00:10:02,480 --> 00:10:03,600
host

262
00:10:03,600 --> 00:10:07,360
so first thing we need to do

263
00:10:10,560 --> 00:10:13,920
open up powershell the command we'll use

264
00:10:13,920 --> 00:10:16,839
to download and run the powershell

265
00:10:16,839 --> 00:10:18,000
script

266
00:10:18,000 --> 00:10:21,040
i'm going to paste that in

267
00:10:23,600 --> 00:10:26,000
all right and then we're going to start

268
00:10:26,000 --> 00:10:28,640
our client

269
00:10:28,640 --> 00:10:32,560
connecting to our domain

270
00:10:32,560 --> 00:10:35,760
we're going to use cname and aaa

271
00:10:35,760 --> 00:10:39,200
types for this example

272
00:10:39,200 --> 00:10:42,480
so right now we can see in our

273
00:10:42,480 --> 00:10:44,160
server log here that we're making

274
00:10:44,160 --> 00:10:46,959
requests we're receiving responses

275
00:10:46,959 --> 00:10:50,240
it's encoded data in that

276
00:10:50,240 --> 00:10:53,839
tunnel and we have a session here so

277
00:10:53,839 --> 00:10:57,120
using dns cat you can

278
00:10:57,120 --> 00:11:01,200
interact with that

279
00:11:01,200 --> 00:11:03,920
and now we are running commands just as

280
00:11:03,920 --> 00:11:04,800
if we were

281
00:11:04,800 --> 00:11:06,240
sitting at a command prompt at the

282
00:11:06,240 --> 00:11:08,880
workstation

283
00:11:09,440 --> 00:11:12,839
okay to test that out let's run some

284
00:11:12,839 --> 00:11:15,680
commands

285
00:11:15,680 --> 00:11:17,839
all right we get our who am i response

286
00:11:17,839 --> 00:11:18,880
back

287
00:11:18,880 --> 00:11:22,160
ip config

288
00:11:23,920 --> 00:11:26,640
you can see the encrypted dns packets

289
00:11:26,640 --> 00:11:28,720
coming across with our data

290
00:11:28,720 --> 00:11:32,000
as we get our data back so

291
00:11:32,000 --> 00:11:34,800
it's a pretty reliable connection and

292
00:11:34,800 --> 00:11:43,839
it's all encoded in these dns requests

293
00:11:52,720 --> 00:11:56,000
all right let's exit out of that and

294
00:11:56,000 --> 00:11:59,279
try just using

295
00:12:08,839 --> 00:12:11,839
text

296
00:12:18,000 --> 00:12:20,160
so now you can see in our log we're

297
00:12:20,160 --> 00:12:21,200
using dns

298
00:12:21,200 --> 00:12:23,279
text requests including our data inside

299
00:12:23,279 --> 00:12:26,480
of that now the size limit of dns text

300
00:12:26,480 --> 00:12:28,000
are a lot larger

301
00:12:28,000 --> 00:12:30,399
so for transmitting larger amounts of

302
00:12:30,399 --> 00:12:32,160
data is preferred

303
00:12:32,160 --> 00:12:35,120
however it's also easier to detect for

304
00:12:35,120 --> 00:12:36,399
blue teams

305
00:12:36,399 --> 00:12:38,399
you know if you see a ton of dns text

306
00:12:38,399 --> 00:12:40,800
requests going across that's usually not

307
00:12:40,800 --> 00:12:44,160
typical user behavior

308
00:12:45,279 --> 00:12:48,240
okay so let's look at some examples how

309
00:12:48,240 --> 00:12:50,079
does this work in the wild so

310
00:12:50,079 --> 00:12:52,560
one good resource is the miter attack

311
00:12:52,560 --> 00:12:54,800
framework so this is a popular source

312
00:12:54,800 --> 00:12:57,120
for examples of real world attacks

313
00:12:57,120 --> 00:12:59,279
the dns tunneling method was assigned

314
00:12:59,279 --> 00:13:02,639
the designation of t1071

315
00:13:02,639 --> 00:13:04,800
so if you search for that you can find a

316
00:13:04,800 --> 00:13:06,480
lot of real world attacks

317
00:13:06,480 --> 00:13:09,600
that use this method atomic red team

318
00:13:09,600 --> 00:13:11,600
has some examples and scripts that you

319
00:13:11,600 --> 00:13:13,920
can run that actually simulate

320
00:13:13,920 --> 00:13:16,399
those real world methods and if you do a

321
00:13:16,399 --> 00:13:18,720
breach simulation exercise this can be a

322
00:13:18,720 --> 00:13:20,399
good way to test your security

323
00:13:20,399 --> 00:13:21,519
architecture out

324
00:13:21,519 --> 00:13:24,000
see if the the tactics that attackers

325
00:13:24,000 --> 00:13:24,880
are actually using

326
00:13:24,880 --> 00:13:27,040
are detected by your security controls

327
00:13:27,040 --> 00:13:30,160
and find out which ones are

328
00:13:30,160 --> 00:13:32,480
probably the most well known recent

329
00:13:32,480 --> 00:13:34,079
attack was the recent

330
00:13:34,079 --> 00:13:36,480
solar winds incident i'm sure most of

331
00:13:36,480 --> 00:13:38,480
you have heard of it if you've been

332
00:13:38,480 --> 00:13:41,680
following security related events with

333
00:13:41,680 --> 00:13:42,560
this attack

334
00:13:42,560 --> 00:13:44,399
there were multiple pieces of malware

335
00:13:44,399 --> 00:13:45,760
used to compromise

336
00:13:45,760 --> 00:13:47,760
high-profile companies and government

337
00:13:47,760 --> 00:13:49,760
entities the solarwinds

338
00:13:49,760 --> 00:13:52,320
sunburst malware use a combination of

339
00:13:52,320 --> 00:13:52,959
dns

340
00:13:52,959 --> 00:13:56,880
and http c2 so from the fireeye report

341
00:13:56,880 --> 00:13:57,360
you can

342
00:13:57,360 --> 00:14:00,560
see some actual dns cname requests which

343
00:14:00,560 --> 00:14:02,399
if you remember back to our demo

344
00:14:02,399 --> 00:14:04,560
these look very familiar this is very

345
00:14:04,560 --> 00:14:05,519
similar to

346
00:14:05,519 --> 00:14:08,480
the tool that we use where we send data

347
00:14:08,480 --> 00:14:11,360
encoded in cname

348
00:14:11,360 --> 00:14:13,199
this is a very interesting example of

349
00:14:13,199 --> 00:14:14,399
dns tunneling

350
00:14:14,399 --> 00:14:16,480
you could dig in further taking a look

351
00:14:16,480 --> 00:14:17,440
at the dll

352
00:14:17,440 --> 00:14:20,639
which generated this dns c2 and

353
00:14:20,639 --> 00:14:22,639
what kind of data it was sending out

354
00:14:22,639 --> 00:14:25,360
from the target

355
00:14:25,920 --> 00:14:28,880
so we can actually do some forensics on

356
00:14:28,880 --> 00:14:30,000
the solar winds attack

357
00:14:30,000 --> 00:14:32,240
and take a look at the affected dll

358
00:14:32,240 --> 00:14:33,680
which is called

359
00:14:33,680 --> 00:14:36,720
solarwinds orion core business layer

360
00:14:36,720 --> 00:14:39,920
so this dll has a function

361
00:14:39,920 --> 00:14:42,560
in it and if it has this then you know

362
00:14:42,560 --> 00:14:44,240
it's one of the affected versions it's

363
00:14:44,240 --> 00:14:44,639
called

364
00:14:44,639 --> 00:14:47,839
orion improvement business letter and so

365
00:14:47,839 --> 00:14:50,800
if it has this inside of that is this

366
00:14:50,800 --> 00:14:52,720
update function

367
00:14:52,720 --> 00:14:57,680
which has the source code for the

368
00:14:57,880 --> 00:15:02,480
dnsc2 so using dnsa records they are

369
00:15:02,480 --> 00:15:03,839
sending data to their

370
00:15:03,839 --> 00:15:07,360
attacker-controlled servers

371
00:15:08,160 --> 00:15:10,399
so you can find online more in-depth

372
00:15:10,399 --> 00:15:11,440
analysis

373
00:15:11,440 --> 00:15:14,320
of how this actually works for our

374
00:15:14,320 --> 00:15:16,399
purposes here we'll take a look

375
00:15:16,399 --> 00:15:18,320
and i just wanted to show you a real

376
00:15:18,320 --> 00:15:19,760
world example of

377
00:15:19,760 --> 00:15:23,600
a dns c2 in the wild

378
00:15:23,600 --> 00:15:25,680
all right so how do we protect against

379
00:15:25,680 --> 00:15:27,519
dns tunneling

380
00:15:27,519 --> 00:15:29,519
well the nsa has recently published some

381
00:15:29,519 --> 00:15:32,320
guidelines on selecting a protective dns

382
00:15:32,320 --> 00:15:35,600
service these are not usually cheap

383
00:15:35,600 --> 00:15:37,120
they're so they're really good for

384
00:15:37,120 --> 00:15:39,279
enterprises with large budgets

385
00:15:39,279 --> 00:15:41,120
but for smaller businesses there are

386
00:15:41,120 --> 00:15:43,360
alternative methods that can be used

387
00:15:43,360 --> 00:15:45,680
some of these are free and open source

388
00:15:45,680 --> 00:15:47,680
the paper reference to your detecting

389
00:15:47,680 --> 00:15:50,160
dns tunneling is a great place to start

390
00:15:50,160 --> 00:15:54,959
when implementing that for organizations

391
00:15:54,959 --> 00:15:56,000
that implement

392
00:15:56,000 --> 00:15:58,720
pdns it's important to remember that

393
00:15:58,720 --> 00:16:00,800
this is not a silver bullet

394
00:16:00,800 --> 00:16:03,360
and if improperly implemented may even

395
00:16:03,360 --> 00:16:04,560
not work at all

396
00:16:04,560 --> 00:16:06,720
so for example if you have a lot of

397
00:16:06,720 --> 00:16:08,160
remote employees which

398
00:16:08,160 --> 00:16:10,959
a lot of companies do these days their

399
00:16:10,959 --> 00:16:13,440
dns requests may not even be going over

400
00:16:13,440 --> 00:16:15,120
the corporate network

401
00:16:15,120 --> 00:16:17,600
and maybe using the user's home dns

402
00:16:17,600 --> 00:16:18,959
server

403
00:16:18,959 --> 00:16:22,000
with dns over https

404
00:16:22,000 --> 00:16:24,639
the contents of dns can't be inspected

405
00:16:24,639 --> 00:16:25,279
as its

406
00:16:25,279 --> 00:16:27,199
end to end encrypted so whatever

407
00:16:27,199 --> 00:16:28,959
solution is put in place

408
00:16:28,959 --> 00:16:30,639
some questions and tests need to be

409
00:16:30,639 --> 00:16:32,639
conducted to ensure the visibility of

410
00:16:32,639 --> 00:16:34,079
dns traffic

411
00:16:34,079 --> 00:16:35,839
because if you're just monitoring the

412
00:16:35,839 --> 00:16:38,240
dns traffic at your corporate network

413
00:16:38,240 --> 00:16:41,360
and the attacker's tunneling isn't going

414
00:16:41,360 --> 00:16:42,720
through your network you're not going to

415
00:16:42,720 --> 00:16:45,040
see it

416
00:16:46,399 --> 00:16:48,560
so what about red teams then well

417
00:16:48,560 --> 00:16:50,720
whenever becoming a penetration tester

418
00:16:50,720 --> 00:16:52,560
or red teamer we tend to get in the

419
00:16:52,560 --> 00:16:53,920
mindset of

420
00:16:53,920 --> 00:16:56,000
we need to think like a bad guy and

421
00:16:56,000 --> 00:16:57,519
sometimes we get stuck it's hard to

422
00:16:57,519 --> 00:16:59,199
switch back

423
00:16:59,199 --> 00:17:02,000
how you get past pdns is making what

424
00:17:02,000 --> 00:17:03,680
you're doing look as legitimate as

425
00:17:03,680 --> 00:17:04,160
possible

426
00:17:04,160 --> 00:17:06,400
to blend in so here we need to think

427
00:17:06,400 --> 00:17:07,679
like a good guy

428
00:17:07,679 --> 00:17:09,919
to act like a bad guy we need our setup

429
00:17:09,919 --> 00:17:11,919
to be as close as possible to that of a

430
00:17:11,919 --> 00:17:14,000
legitimate website domain

431
00:17:14,000 --> 00:17:16,640
another thing to remember is that for a

432
00:17:16,640 --> 00:17:18,720
red team tactic to be successful

433
00:17:18,720 --> 00:17:21,599
you don't really have to outrun the bear

434
00:17:21,599 --> 00:17:23,760
meaning organizations typically

435
00:17:23,760 --> 00:17:25,599
already have to implement exceptions

436
00:17:25,599 --> 00:17:27,599
just to be able to conduct business

437
00:17:27,599 --> 00:17:30,080
lots of legitimate websites are somewhat

438
00:17:30,080 --> 00:17:31,760
shady or misconfigured

439
00:17:31,760 --> 00:17:34,080
because the business just doesn't have

440
00:17:34,080 --> 00:17:36,080
the resources to manage it

441
00:17:36,080 --> 00:17:38,640
if our domain looks like a small it

442
00:17:38,640 --> 00:17:40,480
company

443
00:17:40,480 --> 00:17:43,520
we can probably just blend in and

444
00:17:43,520 --> 00:17:46,000
make a legitimate request to the web

445
00:17:46,000 --> 00:17:48,000
filtering solution in some cases to

446
00:17:48,000 --> 00:17:50,000
categorize us as something that's low

447
00:17:50,000 --> 00:17:51,280
risk like computer

448
00:17:51,280 --> 00:17:54,080
network insight no need to hack anything

449
00:17:54,080 --> 00:17:55,600
just ask nicely

450
00:17:55,600 --> 00:17:58,840
just like you were really a small i t

451
00:17:58,840 --> 00:18:00,320
company

452
00:18:00,320 --> 00:18:03,520
so if pdns is the bear here

453
00:18:03,520 --> 00:18:05,919
we're the guy putting on our sneakers we

454
00:18:05,919 --> 00:18:07,039
don't need to

455
00:18:07,039 --> 00:18:09,679
be the fastest runner we just need to be

456
00:18:09,679 --> 00:18:11,120
able to blend in

457
00:18:11,120 --> 00:18:13,520
with what's already happening we just

458
00:18:13,520 --> 00:18:14,160
need to

459
00:18:14,160 --> 00:18:17,440
run fast enough to get past other other

460
00:18:17,440 --> 00:18:19,760
things that are moving slower than us so

461
00:18:19,760 --> 00:18:22,320
if we make our website and our domain

462
00:18:22,320 --> 00:18:23,679
look pretty good

463
00:18:23,679 --> 00:18:26,720
and it's pretty trusted

464
00:18:26,720 --> 00:18:28,480
it's probably going to blend in with

465
00:18:28,480 --> 00:18:30,240
what the organization

466
00:18:30,240 --> 00:18:33,360
already allows if they have a typical

467
00:18:33,360 --> 00:18:35,120
setup where they allow some small

468
00:18:35,120 --> 00:18:37,520
businesses that may not have

469
00:18:37,520 --> 00:18:40,320
the best websites or domains or or may

470
00:18:40,320 --> 00:18:42,000
not have the most trusted

471
00:18:42,000 --> 00:18:43,919
setup because they just don't have the

472
00:18:43,919 --> 00:18:45,679
bandwidth to do so

473
00:18:45,679 --> 00:18:47,919
just don't have the resources to fully

474
00:18:47,919 --> 00:18:49,120
manage their site

475
00:18:49,120 --> 00:18:51,840
they might be somewhat misconfigured we

476
00:18:51,840 --> 00:18:53,200
just need to make our

477
00:18:53,200 --> 00:18:55,039
domain that we're going to use look

478
00:18:55,039 --> 00:18:57,200
pretty good and we need to make it blend

479
00:18:57,200 --> 00:18:59,120
in with what the organization already

480
00:18:59,120 --> 00:19:01,600
allows

481
00:19:03,600 --> 00:19:06,160
so some more tips for red teams you need

482
00:19:06,160 --> 00:19:07,360
to be able to adjust

483
00:19:07,360 --> 00:19:10,480
quickly if pdns is detecting your dns c2

484
00:19:10,480 --> 00:19:12,000
you have to stop and think what is

485
00:19:12,000 --> 00:19:12,799
different

486
00:19:12,799 --> 00:19:15,200
between my dns requests and legitimate

487
00:19:15,200 --> 00:19:16,559
ones

488
00:19:16,559 --> 00:19:18,559
some tools have built-in features that

489
00:19:18,559 --> 00:19:20,880
allow you to customize your dns request

490
00:19:20,880 --> 00:19:21,600
to make them

491
00:19:21,600 --> 00:19:25,120
look more legitimate such as dns cat 2

492
00:19:25,120 --> 00:19:26,000
from our demo

493
00:19:26,000 --> 00:19:28,480
and cobalt strike so cobalt strikes

494
00:19:28,480 --> 00:19:30,559
malleable profiles will

495
00:19:30,559 --> 00:19:32,559
allow you to do things like set random

496
00:19:32,559 --> 00:19:35,039
delays between dns requests

497
00:19:35,039 --> 00:19:38,400
have random size of your dns request

498
00:19:38,400 --> 00:19:40,880
and always make sure to not use things

499
00:19:40,880 --> 00:19:42,400
that are abnormal such as

500
00:19:42,400 --> 00:19:45,120
using the largest dns text request size

501
00:19:45,120 --> 00:19:46,320
that's probably not

502
00:19:46,320 --> 00:19:49,600
going to blend in very well

503
00:19:49,919 --> 00:19:52,000
all right digging deeper so we just

504
00:19:52,000 --> 00:19:53,760
scratched the surface on a lot of

505
00:19:53,760 --> 00:19:57,520
these topics dns tunneling is

506
00:19:57,520 --> 00:19:59,679
a challenge i think most would agree to

507
00:19:59,679 --> 00:20:01,039
protect against

508
00:20:01,039 --> 00:20:02,640
but really there's some other things

509
00:20:02,640 --> 00:20:04,159
coming our way that

510
00:20:04,159 --> 00:20:06,640
might be even more difficult so with the

511
00:20:06,640 --> 00:20:09,840
new dns over https protocol

512
00:20:09,840 --> 00:20:12,159
getting more wide adoption and this

513
00:20:12,159 --> 00:20:14,240
makes it even more difficult to detect

514
00:20:14,240 --> 00:20:16,080
dns tunneling

515
00:20:16,080 --> 00:20:18,880
if the context of your dns requests are

516
00:20:18,880 --> 00:20:19,520
encrypted

517
00:20:19,520 --> 00:20:22,400
by https then you have to have some

518
00:20:22,400 --> 00:20:23,360
features in place

519
00:20:23,360 --> 00:20:25,760
in order to even have visibility of your

520
00:20:25,760 --> 00:20:27,440
dns requests

521
00:20:27,440 --> 00:20:29,520
and there's already some red team tools

522
00:20:29,520 --> 00:20:31,280
that take advantage of this such as the

523
00:20:31,280 --> 00:20:32,840
spyderlabs

524
00:20:32,840 --> 00:20:35,760
dohc2

525
00:20:35,760 --> 00:20:37,360
if you like this presentation and want

526
00:20:37,360 --> 00:20:39,760
to learn more feel free to contact me at

527
00:20:39,760 --> 00:20:43,039
t crp.to

528
00:20:43,039 --> 00:20:45,760
we are local to nc and the only company

529
00:20:45,760 --> 00:20:48,080
that offers a free red team exercise

530
00:20:48,080 --> 00:20:50,080
where if we can't breach the perimeter

531
00:20:50,080 --> 00:20:51,200
it's free

532
00:20:51,200 --> 00:20:52,960
thanks for your time today and remember

533
00:20:52,960 --> 00:20:54,720
the best defense

534
00:20:54,720 --> 00:21:01,600
is a good offensive security strategy

