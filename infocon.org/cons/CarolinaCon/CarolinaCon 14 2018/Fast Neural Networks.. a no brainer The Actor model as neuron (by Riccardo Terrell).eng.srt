1
00:00:00,000 --> 00:00:08,790
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right thanks for coming so this is</font>

2
00:00:07,379 --> 00:00:12,030
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be a very easy talk for the</font>

3
00:00:08,790 --> 00:00:16,169
Sunday<font color="#E5E5E5"> morning right especially post</font>

4
00:00:12,030 --> 00:00:18,270
hangover yes<font color="#CCCCCC"> alright so thank you for</font>

5
00:00:16,170 --> 00:00:19,980
<font color="#E5E5E5">coming</font><font color="#CCCCCC"> so today we talked</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> narrow</font>

6
00:00:18,270 --> 00:00:23,570
<font color="#CCCCCC">Network right</font>

7
00:00:19,980 --> 00:00:26,310
we know that computer can calculate

8
00:00:23,570 --> 00:00:29,570
<font color="#CCCCCC">compass numerical</font><font color="#E5E5E5"> computation like in a</font>

9
00:00:26,310 --> 00:00:32,159
blink<font color="#CCCCCC"> of eye they're</font><font color="#E5E5E5"> very fast</font><font color="#CCCCCC"> right and</font>

10
00:00:29,570 --> 00:00:35,280
they probably have<font color="#CCCCCC"> more power the human</font>

11
00:00:32,159 --> 00:00:39,540
<font color="#E5E5E5">brain however still today brain</font>

12
00:00:35,280 --> 00:00:42,719
outperform computer in almost every

13
00:00:39,540 --> 00:00:44,989
aspect especially decisional what<font color="#CCCCCC"> a</font>

14
00:00:42,719 --> 00:00:48,329
<font color="#CCCCCC">division intelligent want to achieve is</font>

15
00:00:44,989 --> 00:00:50,849
<font color="#E5E5E5">to make computer be able to make soft</font>

16
00:00:48,329 --> 00:00:54,510
decision and one of the<font color="#E5E5E5"> tool that are</font>

17
00:00:50,850 --> 00:00:56,430
intelligent<font color="#E5E5E5"> used is narrow Network so</font>

18
00:00:54,510 --> 00:00:59,789
let's talk about<font color="#CCCCCC"> neural network oh okay</font>

19
00:00:56,430 --> 00:01:01,500
so this<font color="#E5E5E5"> is the agenda</font><font color="#CCCCCC"> you see in the</font>

20
00:00:59,789 --> 00:01:03,719
back maybe<font color="#E5E5E5"> you want to come</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> okay so</font>

21
00:01:01,500 --> 00:01:05,519
we talk<font color="#E5E5E5"> about neural network and maybe</font>

22
00:01:03,719 --> 00:01:09,390
<font color="#E5E5E5">what it does what</font><font color="#CCCCCC"> kind of problem solve</font>

23
00:01:05,519 --> 00:01:11,790
and how<font color="#CCCCCC"> should i</font><font color="#E5E5E5"> others at work because</font>

24
00:01:09,390 --> 00:01:14,430
<font color="#E5E5E5">we're</font><font color="#CCCCCC"> gonna try</font><font color="#E5E5E5"> to implement we're gonna</font>

25
00:01:11,790 --> 00:01:16,590
try<font color="#CCCCCC"> I implemented neural network in two</font>

26
00:01:14,430 --> 00:01:19,680
different ways<font color="#E5E5E5"> right in fact I'm gonna</font>

27
00:01:16,590 --> 00:01:21,600
show a little<font color="#E5E5E5"> code however framework</font>

28
00:01:19,680 --> 00:01:23,820
code is not important here<font color="#E5E5E5"> what's</font>

29
00:01:21,600 --> 00:01:25,740
important<font color="#CCCCCC"> concept can be</font><font color="#E5E5E5"> applied in</font>

30
00:01:23,820 --> 00:01:28,289
different<font color="#E5E5E5"> kind of different kind</font>

31
00:01:25,740 --> 00:01:31,259
programming languages and by the way all

32
00:01:28,290 --> 00:01:32,579
the slide and code are on github<font color="#CCCCCC"> in the</font>

33
00:01:31,259 --> 00:01:37,020
hand<font color="#E5E5E5"> I've</font><font color="#CCCCCC"> by link you can download</font>

34
00:01:32,579 --> 00:01:38,699
<font color="#E5E5E5">eventually to take a look</font><font color="#CCCCCC"> whole but so</font>

35
00:01:37,020 --> 00:01:40,289
we're<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> permit in a few different</font>

36
00:01:38,700 --> 00:01:43,290
way using<font color="#CCCCCC"> doctor</font><font color="#E5E5E5"> model function</font>

37
00:01:40,290 --> 00:01:46,380
programming see the<font color="#CCCCCC"> pro</font><font color="#E5E5E5"> and cons and</font>

38
00:01:43,290 --> 00:01:49,740
<font color="#CCCCCC">also every time I try to</font><font color="#E5E5E5"> rush through to</font>

39
00:01:46,380 --> 00:01:51,210
have<font color="#CCCCCC"> some good name on the end if</font><font color="#E5E5E5"> you</font>

40
00:01:49,740 --> 00:01:52,740
<font color="#CCCCCC">have any</font><font color="#E5E5E5"> question just you know</font><font color="#CCCCCC"> yellow</font>

41
00:01:51,210 --> 00:01:55,259
me right away<font color="#E5E5E5"> another answer in the</font>

42
00:01:52,740 --> 00:01:57,810
context rather than wait in the end so

43
00:01:55,259 --> 00:02:00,299
the<font color="#CCCCCC"> main takeaway I</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> Latino</font>

44
00:01:57,810 --> 00:02:02,759
network is to solve complex<font color="#E5E5E5"> machine</font>

45
00:02:00,299 --> 00:02:06,719
<font color="#CCCCCC">learning problem</font><font color="#E5E5E5"> and that it turned out</font>

46
00:02:02,759 --> 00:02:09,179
that<font color="#E5E5E5"> machine</font><font color="#CCCCCC"> nature is based on</font><font color="#E5E5E5"> our own</font>

47
00:02:06,719 --> 00:02:12,930
simple<font color="#CCCCCC"> concept like a simple map like</font>

48
00:02:09,179 --> 00:02:13,980
linear algebra in that<font color="#E5E5E5"> that's actually</font>

49
00:02:12,930 --> 00:02:16,500
<font color="#CCCCCC">my background</font>

50
00:02:13,980 --> 00:02:18,780
do not to work<font color="#CCCCCC"> in a parallel</font><font color="#E5E5E5"> computation</font>

51
00:02:16,500 --> 00:02:20,819
distributed system and<font color="#E5E5E5"> turn out</font><font color="#CCCCCC"> that I</font>

52
00:02:18,780 --> 00:02:22,980
was<font color="#CCCCCC"> very</font><font color="#E5E5E5"> happy</font><font color="#CCCCCC"> to discover</font><font color="#E5E5E5"> the neural</font>

53
00:02:20,819 --> 00:02:25,679
network can<font color="#CCCCCC"> be easily paralyzed actually</font>

54
00:02:22,980 --> 00:02:27,149
<font color="#E5E5E5">is a delicious term about embarrass</font><font color="#CCCCCC"> lis</font>

55
00:02:25,680 --> 00:02:30,780
parallel which is nothing<font color="#CCCCCC"> to be ashamed</font>

56
00:02:27,150 --> 00:02:32,970
about it but is it<font color="#E5E5E5"> affair to some some</font>

57
00:02:30,780 --> 00:02:38,340
<font color="#E5E5E5">sort algorithm that easier to</font><font color="#CCCCCC"> divide</font>

58
00:02:32,970 --> 00:02:41,220
<font color="#CCCCCC">subsets in paralyze easily okay the body</font>

59
00:02:38,340 --> 00:02:43,790
<font color="#CCCCCC">slide about me my accent is</font><font color="#E5E5E5"> from Italy</font><font color="#CCCCCC"> I</font>

60
00:02:41,220 --> 00:02:46,140
<font color="#E5E5E5">move here</font><font color="#CCCCCC"> 10 years</font><font color="#E5E5E5"> ago I live in DC but</font>

61
00:02:43,790 --> 00:02:48,599
I'm going<font color="#E5E5E5"> to move in Charlotte North</font>

62
00:02:46,140 --> 00:02:52,230
<font color="#E5E5E5">Carolina</font><font color="#CCCCCC"> next month</font><font color="#E5E5E5"> so we'll be</font>

63
00:02:48,599 --> 00:02:53,970
neighbors right I work with<font color="#CCCCCC"> different</font>

64
00:02:52,230 --> 00:02:55,530
kind technology stack<font color="#E5E5E5"> very passionate</font>

65
00:02:53,970 --> 00:02:57,030
about functional programming<font color="#E5E5E5"> and</font>

66
00:02:55,530 --> 00:03:00,630
recently<font color="#CCCCCC"> published a book</font><font color="#E5E5E5"> about</font>

67
00:02:57,030 --> 00:03:02,010
functional concurrency<font color="#CCCCCC"> this is my detail</font>

68
00:03:00,630 --> 00:03:03,530
information but<font color="#E5E5E5"> this probably is not the</font>

69
00:03:02,010 --> 00:03:05,700
<font color="#E5E5E5">right color for</font><font color="#CCCCCC"> this robot</font>

70
00:03:03,530 --> 00:03:08,579
fortune this<font color="#E5E5E5"> is the only purpose</font><font color="#CCCCCC"> lie</font>

71
00:03:05,700 --> 00:03:09,899
you're<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> say so but I won't know</font>

72
00:03:08,579 --> 00:03:13,620
about<font color="#E5E5E5"> you I'm gonna be free with machine</font>

73
00:03:09,900 --> 00:03:17,790
learning<font color="#CCCCCC"> okay just one so I can</font><font color="#E5E5E5"> tell</font>

74
00:03:13,620 --> 00:03:19,859
<font color="#E5E5E5">whenever I want today</font><font color="#CCCCCC"> alright so I guess</font>

75
00:03:17,790 --> 00:03:21,630
<font color="#E5E5E5">nobody you</font><font color="#CCCCCC"> would never network</font><font color="#E5E5E5"> this way</font>

76
00:03:19,859 --> 00:03:24,540
<font color="#E5E5E5">okay this is</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> great because the</font>

77
00:03:21,630 --> 00:03:28,650
first<font color="#CCCCCC"> up for the talk</font><font color="#E5E5E5"> really bring up to</font>

78
00:03:24,540 --> 00:03:30,720
speed<font color="#CCCCCC"> from the</font><font color="#E5E5E5"> 0 to 100 how the rental</font>

79
00:03:28,650 --> 00:03:32,549
works and now you could<font color="#E5E5E5"> implemented how</font>

80
00:03:30,720 --> 00:03:34,970
many of you<font color="#E5E5E5"> are familiar with the actor</font>

81
00:03:32,549 --> 00:03:38,040
model<font color="#E5E5E5"> maybe or agent</font>

82
00:03:34,970 --> 00:03:40,160
<font color="#E5E5E5">alright gonna touch base about that as</font>

83
00:03:38,040 --> 00:03:44,480
well<font color="#E5E5E5"> and functional programming</font>

84
00:03:40,160 --> 00:03:48,690
<font color="#CCCCCC">alright it's</font><font color="#E5E5E5"> very heavy</font><font color="#CCCCCC"> raise the hand</font>

85
00:03:44,480 --> 00:03:50,518
<font color="#E5E5E5">so motivation</font><font color="#CCCCCC"> I don't have machine</font>

86
00:03:48,690 --> 00:03:53,100
learning background<font color="#E5E5E5"> but I've been</font>

87
00:03:50,519 --> 00:03:56,160
exposed to machine learning<font color="#E5E5E5"> several</font>

88
00:03:53,100 --> 00:03:58,380
times at work<font color="#E5E5E5"> build recommendation</font>

89
00:03:56,160 --> 00:04:01,170
engine using neural network for

90
00:03:58,380 --> 00:04:03,299
e-commerce<font color="#E5E5E5"> and I build naturally</font>

91
00:04:01,170 --> 00:04:05,910
<font color="#E5E5E5">processing also using their own network</font>

92
00:04:03,299 --> 00:04:09,000
and during my experience<font color="#E5E5E5"> in machine</font>

93
00:04:05,910 --> 00:04:11,299
learning I was fascinated how really

94
00:04:09,000 --> 00:04:13,829
magically the neural network<font color="#E5E5E5"> construct</font>

95
00:04:11,299 --> 00:04:16,858
work in<font color="#E5E5E5"> predict values especially like</font>

96
00:04:13,829 --> 00:04:20,519
forecast and<font color="#CCCCCC"> an finish writer very much</font>

97
00:04:16,858 --> 00:04:22,440
quite<font color="#CCCCCC"> used in a network is now</font><font color="#E5E5E5"> really an</font>

98
00:04:20,519 --> 00:04:24,870
old<font color="#E5E5E5"> idea but this it's getting very</font>

99
00:04:22,440 --> 00:04:26,700
trendy these days<font color="#E5E5E5"> and it's getting a lot</font>

100
00:04:24,870 --> 00:04:28,290
<font color="#CCCCCC">of attention these days because</font><font color="#E5E5E5"> it</font>

101
00:04:26,700 --> 00:04:32,010
turned out they solve a lot of

102
00:04:28,290 --> 00:04:34,950
problem that in machine<font color="#CCCCCC"> learned</font>

103
00:04:32,010 --> 00:04:36,150
like one difficulty at the head when I

104
00:04:34,950 --> 00:04:38,130
started<font color="#CCCCCC"> machine learning that you</font><font color="#E5E5E5"> have</font>

105
00:04:36,150 --> 00:04:39,780
so many algorithms which one you're

106
00:04:38,130 --> 00:04:42,120
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> pick</font><font color="#CCCCCC"> right it's very</font><font color="#E5E5E5"> hard to</font>

107
00:04:39,780 --> 00:04:45,090
<font color="#CCCCCC">figure</font><font color="#E5E5E5"> out based</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> your domain your</font>

108
00:04:42,120 --> 00:04:46,290
problem<font color="#CCCCCC"> they are going to</font><font color="#E5E5E5"> use but in</font>

109
00:04:45,090 --> 00:04:48,270
turn out the answer neural network and

110
00:04:46,290 --> 00:04:52,500
<font color="#CCCCCC">he'll because solar</font><font color="#E5E5E5"> really brought</font><font color="#CCCCCC"> a</font>

111
00:04:48,270 --> 00:04:53,750
series<font color="#CCCCCC"> of</font><font color="#E5E5E5"> a problem so quite</font><font color="#CCCCCC"> a nice</font><font color="#E5E5E5"> of a</font>

112
00:04:52,500 --> 00:04:56,880
tool<font color="#E5E5E5"> that can solve several problems</font>

113
00:04:53,750 --> 00:04:59,100
<font color="#E5E5E5">however how does it work still feel a</font>

114
00:04:56,880 --> 00:05:00,810
bit<font color="#E5E5E5"> like magic like</font><font color="#CCCCCC"> a black box because</font>

115
00:04:59,100 --> 00:05:02,700
they're out of<font color="#CCCCCC"> a nice tool out there</font>

116
00:05:00,810 --> 00:05:06,200
like you know<font color="#CCCCCC"> tensorflow and one</font><font color="#E5E5E5"> of</font>

117
00:05:02,700 --> 00:05:08,820
those like<font color="#CCCCCC"> pie to have and tag and yes</font>

118
00:05:06,200 --> 00:05:10,860
<font color="#CCCCCC">microsoft come out</font><font color="#E5E5E5"> also with</font><font color="#CCCCCC"> CM tech and</font>

119
00:05:08,820 --> 00:05:14,250
so forth<font color="#CCCCCC"> and they're pretty</font><font color="#E5E5E5"> cool they</font>

120
00:05:10,860 --> 00:05:15,990
works but it's<font color="#E5E5E5"> not that sexy</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> you</font>

121
00:05:14,250 --> 00:05:17,730
<font color="#E5E5E5">just get the data</font><font color="#CCCCCC"> you clean up your</font><font color="#E5E5E5"> data</font>

122
00:05:15,990 --> 00:05:20,790
<font color="#E5E5E5">be</font><font color="#CCCCCC"> sure they're okay and</font><font color="#E5E5E5"> then you push</font>

123
00:05:17,730 --> 00:05:22,950
<font color="#E5E5E5">these tools wait for the output and most</font>

124
00:05:20,790 --> 00:05:26,850
<font color="#E5E5E5">likely that works but how they works</font>

125
00:05:22,950 --> 00:05:28,289
right<font color="#CCCCCC"> so I did kind</font><font color="#E5E5E5"> of guy that I</font><font color="#CCCCCC"> won't</font>

126
00:05:26,850 --> 00:05:29,370
understand or I want<font color="#E5E5E5"> to</font><font color="#CCCCCC"> open the box</font><font color="#E5E5E5"> you</font>

127
00:05:28,290 --> 00:05:31,440
<font color="#E5E5E5">want to see you know what's going on</font>

128
00:05:29,370 --> 00:05:33,630
<font color="#E5E5E5">inside so I decided that the best way</font><font color="#CCCCCC"> to</font>

129
00:05:31,440 --> 00:05:37,410
understand how work neural network is

130
00:05:33,630 --> 00:05:40,260
most likely implement one yourself<font color="#E5E5E5"> so</font>

131
00:05:37,410 --> 00:05:42,450
there<font color="#E5E5E5"> are definitely mainly different</font>

132
00:05:40,260 --> 00:05:45,060
kind on<font color="#E5E5E5"> the network</font><font color="#CCCCCC"> right depend also</font>

133
00:05:42,450 --> 00:05:46,950
<font color="#E5E5E5">what to try to achieve</font><font color="#CCCCCC"> there is a we're</font>

134
00:05:45,060 --> 00:05:49,970
<font color="#E5E5E5">going to take a look to in particular</font>

135
00:05:46,950 --> 00:05:51,960
<font color="#CCCCCC">but like there is a the forward</font>

136
00:05:49,970 --> 00:05:54,870
<font color="#E5E5E5">multi-layer forward we're gonna steal</font>

137
00:05:51,960 --> 00:05:56,880
that that use for prediction<font color="#E5E5E5"> the</font>

138
00:05:54,870 --> 00:05:58,980
recurrent neural network is the one most

139
00:05:56,880 --> 00:06:01,460
of using in natural energy processing

140
00:05:58,980 --> 00:06:05,790
when the nail<font color="#CCCCCC"> runs we're going to</font>

141
00:06:01,460 --> 00:06:07,729
feedback<font color="#CCCCCC"> himself if I use the</font><font color="#E5E5E5"> term</font><font color="#CCCCCC"> that</font>

142
00:06:05,790 --> 00:06:10,110
<font color="#E5E5E5">you know for me</font><font color="#CCCCCC"> like neurons and</font>

143
00:06:07,730 --> 00:06:11,940
connections so<font color="#CCCCCC"> forth don't</font><font color="#E5E5E5"> worry</font><font color="#CCCCCC"> I'm</font>

144
00:06:10,110 --> 00:06:15,080
gonna<font color="#E5E5E5"> build up you're</font><font color="#CCCCCC"> gonna be familiar</font>

145
00:06:11,940 --> 00:06:17,100
<font color="#E5E5E5">with this term by the end of the talk so</font>

146
00:06:15,080 --> 00:06:19,080
there<font color="#E5E5E5"> are as I mentioned there are</font>

147
00:06:17,100 --> 00:06:21,090
different<font color="#E5E5E5"> your network we're gonna focus</font>

148
00:06:19,080 --> 00:06:23,460
on<font color="#E5E5E5"> the multi-layer feed-forward which is</font>

149
00:06:21,090 --> 00:06:25,409
<font color="#E5E5E5">not really one of the easiest but it's a</font>

150
00:06:23,460 --> 00:06:27,780
probably easy to<font color="#E5E5E5"> explain and to work</font>

151
00:06:25,410 --> 00:06:29,910
with and really<font color="#CCCCCC"> likely cause is</font><font color="#E5E5E5"> the one</font>

152
00:06:27,780 --> 00:06:33,000
<font color="#CCCCCC">use for prediction so you can play like</font>

153
00:06:29,910 --> 00:06:35,130
<font color="#E5E5E5">in</font><font color="#CCCCCC"> finish again</font><font color="#E5E5E5"> rich eventually and the</font>

154
00:06:33,000 --> 00:06:37,140
self<font color="#CCCCCC"> organize maps also for optimization</font>

155
00:06:35,130 --> 00:06:39,870
<font color="#E5E5E5">like one of the problem they can be used</font>

156
00:06:37,140 --> 00:06:41,110
to solve is the traveler<font color="#CCCCCC"> sales problem</font>

157
00:06:39,870 --> 00:06:44,860
or

158
00:06:41,110 --> 00:06:47,379
the<font color="#CCCCCC"> Stadio DNA DNA</font><font color="#E5E5E5"> sequence and I</font><font color="#CCCCCC"> picked</font>

159
00:06:44,860 --> 00:06:49,810
this<font color="#CCCCCC"> too particular because the</font>

160
00:06:47,379 --> 00:06:51,909
<font color="#E5E5E5">multi-layer forward is supervised a</font>

161
00:06:49,810 --> 00:06:53,919
rather and in opposition

162
00:06:51,909 --> 00:06:55,930
<font color="#E5E5E5">the</font><font color="#CCCCCC"> self-organizing map is and</font>

163
00:06:53,919 --> 00:06:58,378
supervised<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so the main difference</font>

164
00:06:55,930 --> 00:07:00,580
between<font color="#E5E5E5"> the two</font><font color="#CCCCCC"> is that</font><font color="#E5E5E5"> when you</font><font color="#CCCCCC"> enter</font>

165
00:06:58,379 --> 00:07:02,800
<font color="#E5E5E5">supervised neural network or machine</font>

166
00:07:00,580 --> 00:07:06,520
<font color="#E5E5E5">learning algorithm you have a series of</font>

167
00:07:02,800 --> 00:07:08,469
input and the correlated output so in

168
00:07:06,520 --> 00:07:10,330
this way you can train your model<font color="#E5E5E5"> and we</font>

169
00:07:08,469 --> 00:07:12,990
<font color="#CCCCCC">talk about this</font><font color="#E5E5E5"> word training and model</font>

170
00:07:10,330 --> 00:07:16,000
but then when you train your model you

171
00:07:12,990 --> 00:07:18,460
send some input<font color="#E5E5E5"> and you can compare to</font>

172
00:07:16,000 --> 00:07:20,949
the desired output<font color="#E5E5E5"> and adjust the value</font>

173
00:07:18,460 --> 00:07:23,109
on your algorithm right<font color="#E5E5E5"> so you make your</font>

174
00:07:20,949 --> 00:07:25,090
model more predictable<font color="#E5E5E5"> instead</font>

175
00:07:23,110 --> 00:07:26,800
unsupervised<font color="#CCCCCC"> of course doesn't</font><font color="#E5E5E5"> have any</font>

176
00:07:25,090 --> 00:07:28,989
data<font color="#E5E5E5"> but still needs some training right</font>

177
00:07:26,800 --> 00:07:31,030
and actually the<font color="#CCCCCC"> self organized map</font>

178
00:07:28,990 --> 00:07:34,050
pretty<font color="#E5E5E5"> much is able to self train</font>

179
00:07:31,030 --> 00:07:37,539
himself<font color="#CCCCCC"> so it's</font><font color="#E5E5E5"> pretty cool</font>

180
00:07:34,050 --> 00:07:39,759
so it's a<font color="#CCCCCC"> racial computer before mini</font>

181
00:07:37,539 --> 00:07:41,740
operation faster than human being but

182
00:07:39,759 --> 00:07:44,650
faster than<font color="#CCCCCC"> always better right</font>

183
00:07:41,740 --> 00:07:49,719
for instance one problem<font color="#CCCCCC"> that still a</font>

184
00:07:44,650 --> 00:07:51,878
computer are no<font color="#CCCCCC"> cannot</font><font color="#E5E5E5"> solve easily is</font>

185
00:07:49,719 --> 00:07:54,069
like for instance<font color="#E5E5E5"> recognize what kind of</font>

186
00:07:51,879 --> 00:07:56,379
picture right<font color="#E5E5E5"> maybe the animal in the</font>

187
00:07:54,069 --> 00:07:58,120
picture right<font color="#E5E5E5"> if you have two images</font><font color="#CCCCCC"> is</font>

188
00:07:56,379 --> 00:08:00,490
easy<font color="#CCCCCC"> free organize which one is a cat</font>

189
00:07:58,120 --> 00:08:02,800
<font color="#E5E5E5">which one is a dog but for the</font><font color="#CCCCCC"> computers</font>

190
00:08:00,490 --> 00:08:05,620
still this is a<font color="#E5E5E5"> very hard task</font><font color="#CCCCCC"> like</font>

191
00:08:02,800 --> 00:08:07,960
reason you can you know divide the image

192
00:08:05,620 --> 00:08:09,520
in pixel and a light each pixel but what

193
00:08:07,960 --> 00:08:11,049
about some pixel is mixing right the

194
00:08:09,520 --> 00:08:14,979
image is blurry<font color="#E5E5E5"> right so this is pretty</font>

195
00:08:11,050 --> 00:08:16,629
hard so that's<font color="#E5E5E5"> actually where neural</font>

196
00:08:14,979 --> 00:08:19,539
network came to play and<font color="#CCCCCC"> I</font><font color="#E5E5E5"> solve this</font>

197
00:08:16,629 --> 00:08:21,610
kind of problem quite easily<font color="#E5E5E5"> so if you</font>

198
00:08:19,539 --> 00:08:23,710
have any problem<font color="#CCCCCC"> that can be answered by</font>

199
00:08:21,610 --> 00:08:26,529
one<font color="#E5E5E5"> of</font><font color="#CCCCCC"> these question most likely also</font>

200
00:08:23,710 --> 00:08:29,289
<font color="#CCCCCC">nitrito can help you</font><font color="#E5E5E5"> right and</font><font color="#CCCCCC"> COSO can</font>

201
00:08:26,529 --> 00:08:31,479
be classified<font color="#E5E5E5"> in a classification like</font>

202
00:08:29,289 --> 00:08:34,360
if<font color="#E5E5E5"> you're looking for something to group</font>

203
00:08:31,479 --> 00:08:35,549
together for some future that are common

204
00:08:34,360 --> 00:08:37,570
some commonalities

205
00:08:35,549 --> 00:08:39,578
prediction as I mentioned something<font color="#CCCCCC"> that</font>

206
00:08:37,570 --> 00:08:44,380
<font color="#E5E5E5">you wanna predict for future like if you</font>

207
00:08:39,578 --> 00:08:46,060
have a series<font color="#CCCCCC"> of</font><font color="#E5E5E5"> time</font><font color="#CCCCCC"> base data right</font>

208
00:08:44,380 --> 00:08:48,610
<font color="#CCCCCC">the neural network can</font><font color="#E5E5E5"> eventually start</font>

209
00:08:46,060 --> 00:08:51,939
this data and predicts the coming value

210
00:08:48,610 --> 00:08:54,730
for the future<font color="#CCCCCC"> are normally something</font>

211
00:08:51,940 --> 00:08:58,060
<font color="#E5E5E5">strangers</font><font color="#CCCCCC"> we're in momentum imager</font>

212
00:08:54,730 --> 00:09:00,130
<font color="#E5E5E5">in a medical</font><font color="#CCCCCC"> field class terrain in</font>

213
00:08:58,060 --> 00:09:00,479
optimization<font color="#CCCCCC"> also that when I mentioned</font>

214
00:09:00,130 --> 00:09:05,920
for<font color="#E5E5E5"> the</font>

215
00:09:00,480 --> 00:09:07,810
<font color="#CCCCCC">self-organized map and</font><font color="#E5E5E5"> also can be</font>

216
00:09:05,920 --> 00:09:12,579
separated<font color="#E5E5E5"> maybe it's hard</font><font color="#CCCCCC"> to tell but</font>

217
00:09:07,810 --> 00:09:14,979
<font color="#E5E5E5">the first four are supervised in the</font>

218
00:09:12,580 --> 00:09:20,710
last two are supervised kind of machine

219
00:09:14,980 --> 00:09:23,620
<font color="#CCCCCC">learning and</font><font color="#E5E5E5"> the later is pretty wide</font>

220
00:09:20,710 --> 00:09:26,620
losing<font color="#E5E5E5"> using a different kind of field</font>

221
00:09:23,620 --> 00:09:30,190
<font color="#CCCCCC">but</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> healthcare financially said but</font>

222
00:09:26,620 --> 00:09:31,300
these days<font color="#E5E5E5"> you know for good and bad is</font>

223
00:09:30,190 --> 00:09:33,550
quite used like for<font color="#CCCCCC"> instance</font>

224
00:09:31,300 --> 00:09:35,770
self-driving cars that<font color="#CCCCCC"> need to predict</font>

225
00:09:33,550 --> 00:09:38,680
and a make decision almost real-time

226
00:09:35,770 --> 00:09:42,090
right this is all based<font color="#E5E5E5"> on neural</font>

227
00:09:38,680 --> 00:09:50,380
<font color="#E5E5E5">network any questions so far</font>

228
00:09:42,090 --> 00:09:51,640
<font color="#CCCCCC">ok so this</font><font color="#E5E5E5"> is a like the basic example</font>

229
00:09:50,380 --> 00:09:54,910
right so we're gonna build<font color="#E5E5E5"> up</font><font color="#CCCCCC"> we start</font>

230
00:09:51,640 --> 00:09:56,199
from easy to<font color="#E5E5E5"> something more complex but</font>

231
00:09:54,910 --> 00:09:58,870
in this case<font color="#E5E5E5"> in this light</font><font color="#CCCCCC"> we have a</font>

232
00:09:56,200 --> 00:10:01,690
series of variables<font color="#E5E5E5"> right and we try to</font>

233
00:09:58,870 --> 00:10:05,710
predict something<font color="#E5E5E5"> that we don't know in</font>

234
00:10:01,690 --> 00:10:07,750
<font color="#E5E5E5">this case you have a list of student the</font>

235
00:10:05,710 --> 00:10:09,490
base of the grade<font color="#E5E5E5"> the GPA the age and</font>

236
00:10:07,750 --> 00:10:12,550
the gender<font color="#E5E5E5"> you can predict what kind of</font>

237
00:10:09,490 --> 00:10:16,240
score they can play<font color="#CCCCCC"> ok so in this case</font>

238
00:10:12,550 --> 00:10:18,490
the last the<font color="#E5E5E5"> last row we are looking for</font>

239
00:10:16,240 --> 00:10:20,380
to figure out what kind of sport<font color="#CCCCCC"> the</font>

240
00:10:18,490 --> 00:10:24,220
student can play based upon this

241
00:10:20,380 --> 00:10:26,820
variable<font color="#E5E5E5"> right so</font><font color="#CCCCCC"> and the net was able</font>

242
00:10:24,220 --> 00:10:29,290
to<font color="#E5E5E5"> analyze this characteristic and</font>

243
00:10:26,820 --> 00:10:30,760
aggregate the communalities and to

244
00:10:29,290 --> 00:10:33,069
predict what kind<font color="#E5E5E5"> of sport is going</font><font color="#CCCCCC"> to</font>

245
00:10:30,760 --> 00:10:35,530
play<font color="#E5E5E5"> one thing I want to point out the</font>

246
00:10:33,070 --> 00:10:37,720
first gotcha<font color="#E5E5E5"> probably one of the most</font>

247
00:10:35,530 --> 00:10:39,610
complex thing to<font color="#E5E5E5"> do</font><font color="#CCCCCC"> a neural network</font><font color="#E5E5E5"> is</font>

248
00:10:37,720 --> 00:10:42,490
something<font color="#CCCCCC"> called normalization right</font>

249
00:10:39,610 --> 00:10:44,770
<font color="#E5E5E5">normalization</font><font color="#CCCCCC"> do they act when you try</font>

250
00:10:42,490 --> 00:10:46,270
to convert the some input in a

251
00:10:44,770 --> 00:10:48,430
meaningful way that<font color="#E5E5E5"> computer can</font>

252
00:10:46,270 --> 00:10:49,660
understand<font color="#E5E5E5"> right for instance age you</font>

253
00:10:48,430 --> 00:10:51,310
have a number<font color="#E5E5E5"> it's pretty is it most</font>

254
00:10:49,660 --> 00:10:53,620
<font color="#CCCCCC">likely gonna squash</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> makes something</font>

255
00:10:51,310 --> 00:10:55,209
<font color="#CCCCCC">to be easy but</font><font color="#E5E5E5"> it's a number easy to</font>

256
00:10:53,620 --> 00:10:57,550
understand but<font color="#E5E5E5"> you know something like a</font>

257
00:10:55,210 --> 00:11:00,700
gender well they<font color="#E5E5E5"> start will</font><font color="#CCCCCC"> be more you</font>

258
00:10:57,550 --> 00:11:02,170
know<font color="#CCCCCC"> complicated because the first</font>

259
00:11:00,700 --> 00:11:04,090
<font color="#CCCCCC">started me</font><font color="#E5E5E5"> I was like</font><font color="#CCCCCC"> we're gonna be</font>

260
00:11:02,170 --> 00:11:05,920
like<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> one but zero</font><font color="#E5E5E5"> doesn't have</font>

261
00:11:04,090 --> 00:11:08,560
any meaning<font color="#CCCCCC"> right so most</font><font color="#E5E5E5"> likely be</font>

262
00:11:05,920 --> 00:11:11,529
negative<font color="#E5E5E5"> one and one and so for more</font>

263
00:11:08,560 --> 00:11:13,989
<font color="#CCCCCC">Black's also input</font><font color="#E5E5E5"> can be like the math</font>

264
00:11:11,529 --> 00:11:17,529
over here<font color="#E5E5E5"> and so forth</font><font color="#CCCCCC"> so normalization</font>

265
00:11:13,990 --> 00:11:19,630
is something that some people<font color="#CCCCCC"> take care</font>

266
00:11:17,529 --> 00:11:22,390
and there's<font color="#E5E5E5"> only any particular rules so</font>

267
00:11:19,630 --> 00:11:27,339
it's really<font color="#E5E5E5"> up to you some different</font>

268
00:11:22,390 --> 00:11:31,000
kind of<font color="#E5E5E5"> try so what is a neural network</font>

269
00:11:27,339 --> 00:11:32,410
<font color="#CCCCCC">well think about Alto</font><font color="#E5E5E5"> is a neural</font>

270
00:11:31,000 --> 00:11:35,170
<font color="#E5E5E5">network</font><font color="#CCCCCC"> is a collection of internet</font>

271
00:11:32,410 --> 00:11:37,510
enables that<font color="#E5E5E5"> computer generate</font>

272
00:11:35,170 --> 00:11:41,020
<font color="#CCCCCC">electrical actually chemicals electrical</font>

273
00:11:37,510 --> 00:11:43,930
impulse<font color="#E5E5E5"> right and artificial neural</font><font color="#CCCCCC"> net</font>

274
00:11:41,020 --> 00:11:45,939
<font color="#CCCCCC">or a temp to</font><font color="#E5E5E5"> really to replicate what in</font>

275
00:11:43,930 --> 00:11:48,969
a simplified<font color="#E5E5E5"> form</font><font color="#CCCCCC"> of what the brain does</font>

276
00:11:45,940 --> 00:11:52,150
the biological brain does and because<font color="#E5E5E5"> I</font>

277
00:11:48,970 --> 00:11:54,279
later tried to<font color="#E5E5E5"> submit the brain they try</font>

278
00:11:52,150 --> 00:11:56,380
<font color="#E5E5E5">to solve</font><font color="#CCCCCC"> some problem the human tend to</font>

279
00:11:54,279 --> 00:11:58,510
do quite well<font color="#CCCCCC"> cypresses back to the</font>

280
00:11:56,380 --> 00:12:01,870
<font color="#E5E5E5">example the two images right you must</font>

281
00:11:58,510 --> 00:12:04,870
like able<font color="#E5E5E5"> to recognize easily</font><font color="#CCCCCC"> if one</font>

282
00:12:01,870 --> 00:12:07,930
image is a is a cat in other words<font color="#E5E5E5"> a dog</font>

283
00:12:04,870 --> 00:12:11,560
<font color="#E5E5E5">and I like this quote here because it</font>

284
00:12:07,930 --> 00:12:14,229
said it<font color="#CCCCCC"> really machine</font><font color="#E5E5E5"> learn is</font><font color="#CCCCCC"> agree to</font>

285
00:12:11,560 --> 00:12:16,119
that self<font color="#CCCCCC"> adopt really is a flaw in</font><font color="#E5E5E5"> the</font>

286
00:12:14,230 --> 00:12:17,920
input<font color="#E5E5E5"> coming in so we're gonna see how</font>

287
00:12:16,120 --> 00:12:19,600
<font color="#CCCCCC">we're gonna train that</font><font color="#E5E5E5"> innate</font><font color="#CCCCCC"> or create</font>

288
00:12:17,920 --> 00:12:21,819
your<font color="#E5E5E5"> model but the great</font><font color="#CCCCCC"> thing is</font><font color="#E5E5E5"> that</font>

289
00:12:19,600 --> 00:12:26,740
<font color="#E5E5E5">it</font><font color="#CCCCCC"> will keep learning</font><font color="#E5E5E5"> right keep better</font>

290
00:12:21,820 --> 00:12:29,130
as<font color="#CCCCCC"> a work so when you think an elector</font>

291
00:12:26,740 --> 00:12:35,200
<font color="#CCCCCC">who is old enough to remember this right</font>

292
00:12:29,130 --> 00:12:37,030
right so well<font color="#E5E5E5"> this was you know the</font>

293
00:12:35,200 --> 00:12:38,500
first my idea when I<font color="#E5E5E5"> stood on a later</font>

294
00:12:37,030 --> 00:12:40,120
but most like you think<font color="#CCCCCC"> something be</font>

295
00:12:38,500 --> 00:12:43,330
cool right<font color="#E5E5E5"> at the exit and return me</font>

296
00:12:40,120 --> 00:12:44,890
later and the idea that really<font color="#E5E5E5"> is able</font>

297
00:12:43,330 --> 00:12:46,450
<font color="#E5E5E5">to make this is</font><font color="#CCCCCC"> real-time based</font><font color="#E5E5E5"> on</font>

298
00:12:44,890 --> 00:12:48,880
environment to eat the target right

299
00:12:46,450 --> 00:12:51,220
depend you know of a kind of enemies in

300
00:12:48,880 --> 00:12:53,560
<font color="#CCCCCC">front and they know the weather</font>

301
00:12:51,220 --> 00:12:56,380
condition and so forth so how this<font color="#E5E5E5"> is</font>

302
00:12:53,560 --> 00:12:58,900
possible<font color="#E5E5E5"> right what is the continual</font>

303
00:12:56,380 --> 00:13:01,570
pollution think about we try to learn<font color="#E5E5E5"> to</font>

304
00:12:58,900 --> 00:13:03,160
<font color="#CCCCCC">play soccer</font><font color="#E5E5E5"> right well you go to the</font>

305
00:13:01,570 --> 00:13:07,900
field<font color="#CCCCCC"> get the ball</font><font color="#E5E5E5"> try to play a little</font>

306
00:13:03,160 --> 00:13:09,880
bit kick some kick<font color="#CCCCCC"> and look at</font><font color="#E5E5E5"> the play</font>

307
00:13:07,900 --> 00:13:12,010
<font color="#CCCCCC">out to do it so</font><font color="#E5E5E5"> even</font><font color="#CCCCCC"> if overtime getting</font>

308
00:13:09,880 --> 00:13:15,040
<font color="#CCCCCC">better and better until</font><font color="#E5E5E5"> you get faster</font>

309
00:13:12,010 --> 00:13:17,740
you go to dribble<font color="#E5E5E5"> kick some corner until</font>

310
00:13:15,040 --> 00:13:19,930
finally reach your goal<font color="#CCCCCC"> alright nobody</font>

311
00:13:17,740 --> 00:13:22,810
<font color="#CCCCCC">get it yeah all right</font>

312
00:13:19,930 --> 00:13:25,899
<font color="#E5E5E5">all right</font><font color="#CCCCCC"> so either about</font><font color="#E5E5E5"> the evolution</font>

313
00:13:22,810 --> 00:13:28,839
<font color="#E5E5E5">over time</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> the biological neural net</font>

314
00:13:25,899 --> 00:13:31,290
or<font color="#E5E5E5"> easily as I mentioned ISM the system</font>

315
00:13:28,839 --> 00:13:33,850
of interconnected neurons<font color="#E5E5E5"> that transmit</font>

316
00:13:31,290 --> 00:13:37,360
electrical pattern right this<font color="#CCCCCC"> signal and</font>

317
00:13:33,850 --> 00:13:40,120
this day<font color="#E5E5E5"> they've</font><font color="#CCCCCC"> been tried that</font><font color="#E5E5E5"> receive</font>

318
00:13:37,360 --> 00:13:44,290
some input signal<font color="#E5E5E5"> and based on those</font>

319
00:13:40,120 --> 00:13:46,029
inputs input<font color="#E5E5E5"> a fire signal via</font><font color="#CCCCCC"> accident</font>

320
00:13:44,290 --> 00:13:49,390
<font color="#E5E5E5">to reach the other narrows and basically</font>

321
00:13:46,029 --> 00:13:51,160
<font color="#E5E5E5">really this input from I received from</font>

322
00:13:49,390 --> 00:13:53,680
<font color="#E5E5E5">an other resources other sources and</font>

323
00:13:51,160 --> 00:13:56,199
then<font color="#CCCCCC"> combine in some way to</font><font color="#E5E5E5"> perform some</font>

324
00:13:53,680 --> 00:13:59,290
operation result<font color="#E5E5E5"> and biologically</font>

325
00:13:56,200 --> 00:13:59,800
<font color="#E5E5E5">recreate some chemical heavy the</font>

326
00:13:59,290 --> 00:14:01,149
<font color="#CCCCCC">Campbell</font>

327
00:13:59,800 --> 00:14:03,189
there will come chemically heavy<font color="#E5E5E5"> and</font>

328
00:14:01,149 --> 00:14:06,700
then<font color="#CCCCCC"> will reach some sort of</font><font color="#E5E5E5"> weight</font>

329
00:14:03,190 --> 00:14:09,250
you're going<font color="#E5E5E5"> to fire up and send the</font>

330
00:14:06,700 --> 00:14:14,380
impulse to<font color="#CCCCCC"> the next neuron</font><font color="#E5E5E5"> through the</font>

331
00:14:09,250 --> 00:14:18,459
axon terminals<font color="#E5E5E5"> and we can represent we</font>

332
00:14:14,380 --> 00:14:19,990
can try to replicate the biological

333
00:14:18,459 --> 00:14:22,270
neural network in an energy future way

334
00:14:19,990 --> 00:14:24,990
right this<font color="#E5E5E5"> way we have</font><font color="#CCCCCC"> a neurons are</font>

335
00:14:22,270 --> 00:14:27,850
organized in a subset that<font color="#E5E5E5"> called layers</font>

336
00:14:24,990 --> 00:14:30,160
so and where all the neurons<font color="#E5E5E5"> in one</font>

337
00:14:27,850 --> 00:14:31,480
layer are connected to all the nerves to

338
00:14:30,160 --> 00:14:35,020
<font color="#CCCCCC">the following layer</font><font color="#E5E5E5"> right</font>

339
00:14:31,480 --> 00:14:39,339
for example this<font color="#CCCCCC"> light we had three nail</font>

340
00:14:35,020 --> 00:14:40,600
<font color="#E5E5E5">room layer four and two usually usually</font>

341
00:14:39,339 --> 00:14:42,580
the first<font color="#CCCCCC"> layer</font><font color="#E5E5E5"> usually we'd never</font>

342
00:14:40,600 --> 00:14:45,010
recount it's a layer because the input

343
00:14:42,580 --> 00:14:50,020
just dummy so this is<font color="#E5E5E5"> almost like a two</font>

344
00:14:45,010 --> 00:14:53,350
layer neural network in each neuron<font color="#E5E5E5"> this</font>

345
00:14:50,020 --> 00:14:56,260
case as a arrow<font color="#CCCCCC"> this called connection</font>

346
00:14:53,350 --> 00:14:58,660
they point to the next narrow and the

347
00:14:56,260 --> 00:15:02,319
connection<font color="#E5E5E5"> have some property it's</font>

348
00:14:58,660 --> 00:15:06,329
called<font color="#E5E5E5"> weight that is some some value</font>

349
00:15:02,320 --> 00:15:09,670
<font color="#CCCCCC">that</font><font color="#E5E5E5"> passed to the following arrow</font>

350
00:15:06,329 --> 00:15:10,930
<font color="#CCCCCC">alright so how this is</font><font color="#E5E5E5"> work well first</font>

351
00:15:09,670 --> 00:15:13,779
of<font color="#E5E5E5"> all there is</font><font color="#CCCCCC"> not really</font><font color="#E5E5E5"> need or any</font>

352
00:15:10,930 --> 00:15:18,609
<font color="#E5E5E5">really deep mathematical background</font>

353
00:15:13,779 --> 00:15:21,160
there are<font color="#E5E5E5"> some mattress cooperation be</font>

354
00:15:18,610 --> 00:15:23,529
like linear or multi men so multi

355
00:15:21,160 --> 00:15:26,290
dimensional magic operation but really

356
00:15:23,529 --> 00:15:27,610
<font color="#E5E5E5">no vector user design is a</font><font color="#CCCCCC"> mathematical</font>

357
00:15:26,290 --> 00:15:31,660
structure<font color="#E5E5E5"> but they do not really need</font>

358
00:15:27,610 --> 00:15:32,500
any huge knowledge<font color="#CCCCCC"> in that like and we</font>

359
00:15:31,660 --> 00:15:33,439
don't we're going<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about</font>

360
00:15:32,500 --> 00:15:35,630
<font color="#E5E5E5">something</font>

361
00:15:33,440 --> 00:15:39,650
<font color="#E5E5E5">cultivation function which is just based</font>

362
00:15:35,630 --> 00:15:41,240
on linear<font color="#E5E5E5"> algebra and has been much what</font>

363
00:15:39,650 --> 00:15:44,900
you need to know to<font color="#E5E5E5"> build your own</font>

364
00:15:41,240 --> 00:15:47,600
neural network<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> this is start to be</font>

365
00:15:44,900 --> 00:15:49,970
probably<font color="#CCCCCC"> the</font><font color="#E5E5E5"> two or</font><font color="#CCCCCC"> three more important</font>

366
00:15:47,600 --> 00:15:50,680
slide all<font color="#E5E5E5"> the talk so any questions so</font>

367
00:15:49,970 --> 00:15:54,890
far

368
00:15:50,680 --> 00:15:59,719
<font color="#E5E5E5">okay so this is a tree for two neural</font>

369
00:15:54,890 --> 00:16:02,000
network so the blue<font color="#E5E5E5"> narrows out the</font>

370
00:15:59,720 --> 00:16:03,590
<font color="#E5E5E5">input in this case one two and three</font><font color="#CCCCCC"> as</font>

371
00:16:02,000 --> 00:16:06,140
you<font color="#CCCCCC"> can see they're connected each</font>

372
00:16:03,590 --> 00:16:08,690
<font color="#E5E5E5">narrow connected to each neuron</font><font color="#CCCCCC"> the</font>

373
00:16:06,140 --> 00:16:12,069
green neuron<font color="#E5E5E5"> or the next layer</font><font color="#CCCCCC"> and the</font>

374
00:16:08,690 --> 00:16:15,080
<font color="#E5E5E5">connection is a desired weight is a</font>

375
00:16:12,070 --> 00:16:20,350
carry away<font color="#CCCCCC"> okay so let's see a bit in</font>

376
00:16:15,080 --> 00:16:23,150
details here<font color="#CCCCCC"> so exact to tell but the</font>

377
00:16:20,350 --> 00:16:26,630
<font color="#CCCCCC">kind of we're winning</font><font color="#E5E5E5"> like a longer</font>

378
00:16:23,150 --> 00:16:30,020
there but anyways<font color="#E5E5E5"> each each in this case</font>

379
00:16:26,630 --> 00:16:34,460
the the<font color="#CCCCCC"> arrow to go from neuron zero and</font>

380
00:16:30,020 --> 00:16:38,090
<font color="#CCCCCC">one</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the green one is</font><font color="#E5E5E5"> a is a call like</font>

381
00:16:34,460 --> 00:16:41,150
sequential in this case is<font color="#CCCCCC"> w0 0 and the</font>

382
00:16:38,090 --> 00:16:42,800
last<font color="#E5E5E5"> one probably</font><font color="#CCCCCC"> gonna be W 0 to and</font>

383
00:16:41,150 --> 00:16:45,020
the<font color="#E5E5E5"> next day</font><font color="#CCCCCC"> you're going to</font><font color="#E5E5E5"> be W 1</font>

384
00:16:42,800 --> 00:16:49,250
because the next layer 0 for the<font color="#CCCCCC"> first</font>

385
00:16:45,020 --> 00:16:51,470
<font color="#CCCCCC">neighbor but anyways when you pass the</font>

386
00:16:49,250 --> 00:16:53,690
input each input<font color="#E5E5E5"> is sent to the</font><font color="#CCCCCC"> next</font>

387
00:16:51,470 --> 00:16:55,610
neuron<font color="#CCCCCC"> when the green</font><font color="#E5E5E5"> arrow</font><font color="#CCCCCC"> receive</font><font color="#E5E5E5"> all</font>

388
00:16:53,690 --> 00:16:59,990
<font color="#CCCCCC">the input from the previous layer is</font>

389
00:16:55,610 --> 00:17:02,240
fire<font color="#E5E5E5"> and do some computation this is why</font>

390
00:16:59,990 --> 00:17:03,710
it's<font color="#CCCCCC"> called</font><font color="#E5E5E5"> forward neural network</font>

391
00:17:02,240 --> 00:17:04,550
because all the<font color="#CCCCCC"> narrows connected to the</font>

392
00:17:03,710 --> 00:17:06,890
next one

393
00:17:04,550 --> 00:17:09,619
however so what is important here<font color="#E5E5E5"> is</font>

394
00:17:06,890 --> 00:17:11,329
that<font color="#E5E5E5"> the green neuron to fire and to</font>

395
00:17:09,619 --> 00:17:16,989
receive all the input from the previous

396
00:17:11,329 --> 00:17:19,490
layer<font color="#E5E5E5"> so and then when it's fire they</font>

397
00:17:16,990 --> 00:17:21,800
<font color="#E5E5E5">calculate the sum if you cannot see</font>

398
00:17:19,490 --> 00:17:24,319
<font color="#E5E5E5">adjust them the sum of the product of</font>

399
00:17:21,800 --> 00:17:26,869
the input by<font color="#E5E5E5"> the weight so next race for</font>

400
00:17:24,319 --> 00:17:29,780
the<font color="#E5E5E5"> first narrow with input</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> and the</font>

401
00:17:26,869 --> 00:17:32,330
weight is 0<font color="#CCCCCC"> 0</font><font color="#E5E5E5"> 1 so there'll be</font><font color="#CCCCCC"> 1 times 0</font>

402
00:17:29,780 --> 00:17:34,910
<font color="#CCCCCC">0 1</font><font color="#E5E5E5"> plus 2 the second input by its</font>

403
00:17:32,330 --> 00:17:37,879
weight<font color="#CCCCCC"> the third input</font><font color="#E5E5E5"> time is weight</font>

404
00:17:34,910 --> 00:17:40,730
<font color="#E5E5E5">and some old is called dot product plus</font>

405
00:17:37,880 --> 00:17:43,310
<font color="#CCCCCC">a bias which is a constant we don't talk</font>

406
00:17:40,730 --> 00:17:44,960
<font color="#E5E5E5">about the value shortly and and apply</font>

407
00:17:43,310 --> 00:17:47,030
this<font color="#E5E5E5"> activation function</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

408
00:17:44,960 --> 00:17:49,160
<font color="#E5E5E5">see also what is activation function</font>

409
00:17:47,030 --> 00:17:51,770
pretty much<font color="#E5E5E5"> this what you need</font><font color="#CCCCCC"> to do to</font>

410
00:17:49,160 --> 00:17:56,420
calculate<font color="#E5E5E5"> the output that</font><font color="#CCCCCC"> is applied to</font>

411
00:17:51,770 --> 00:17:58,910
<font color="#CCCCCC">the</font><font color="#E5E5E5"> neuron the green arrow</font><font color="#CCCCCC"> and the same</font>

412
00:17:56,420 --> 00:18:00,890
thing apply<font color="#E5E5E5"> also today today for the</font>

413
00:17:58,910 --> 00:18:03,440
next layer<font color="#E5E5E5"> right all the green narrow</font>

414
00:18:00,890 --> 00:18:05,390
<font color="#E5E5E5">receive calculate this value it is sent</font>

415
00:18:03,440 --> 00:18:07,760
to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> next neuron the orange one and</font>

416
00:18:05,390 --> 00:18:11,510
apply the same<font color="#E5E5E5"> exact functionality right</font>

417
00:18:07,760 --> 00:18:17,150
<font color="#E5E5E5">dot product by</font><font color="#CCCCCC"> the weight</font><font color="#E5E5E5"> apply append</font>

418
00:18:11,510 --> 00:18:19,550
bias<font color="#CCCCCC"> an activation function so what is</font>

419
00:18:17,150 --> 00:18:24,020
important here we<font color="#CCCCCC"> talk about weight in</font>

420
00:18:19,550 --> 00:18:25,520
bias<font color="#E5E5E5"> so the input are</font><font color="#CCCCCC"> we're just passing</font>

421
00:18:24,020 --> 00:18:27,740
the<font color="#E5E5E5"> inputs so we know what are the</font>

422
00:18:25,520 --> 00:18:28,010
inputs<font color="#E5E5E5"> they</font><font color="#CCCCCC"> weight where where they come</font>

423
00:18:27,740 --> 00:18:31,190
from

424
00:18:28,010 --> 00:18:32,890
right but there are two option here when

425
00:18:31,190 --> 00:18:35,540
you<font color="#E5E5E5"> start to create a neural network</font>

426
00:18:32,890 --> 00:18:37,310
<font color="#E5E5E5">well you don't</font><font color="#CCCCCC"> have the weight</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> had</font>

427
00:18:35,540 --> 00:18:39,050
<font color="#E5E5E5">to create a model so in this way the</font>

428
00:18:37,310 --> 00:18:41,090
weight are completely a random number

429
00:18:39,050 --> 00:18:43,510
<font color="#CCCCCC">I should have random generated a apply</font>

430
00:18:41,090 --> 00:18:45,199
<font color="#E5E5E5">for you</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> value</font><font color="#CCCCCC"> that can be from</font>

431
00:18:43,510 --> 00:18:48,200
<font color="#E5E5E5">negative 1 to 1</font>

432
00:18:45,200 --> 00:18:50,570
<font color="#CCCCCC">ok and this is the</font><font color="#E5E5E5"> process</font><font color="#CCCCCC"> of a training</font>

433
00:18:48,200 --> 00:18:54,230
<font color="#CCCCCC">the neural network</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> calculate the</font>

434
00:18:50,570 --> 00:18:56,750
error and then apply these<font color="#E5E5E5"> dissident to</font>

435
00:18:54,230 --> 00:18:58,220
the weight that over time<font color="#E5E5E5"> up to date is</font>

436
00:18:56,750 --> 00:19:01,490
<font color="#E5E5E5">weight</font><font color="#CCCCCC"> so when you start for</font><font color="#E5E5E5"> instance</font>

437
00:18:58,220 --> 00:19:04,610
<font color="#CCCCCC">from</font><font color="#E5E5E5"> the weight of</font><font color="#CCCCCC"> 0 in this</font><font color="#E5E5E5"> case</font><font color="#CCCCCC"> the</font>

438
00:19:01,490 --> 00:19:07,040
weight is the first weight is<font color="#E5E5E5"> for</font><font color="#CCCCCC"> 0</font>

439
00:19:04,610 --> 00:19:08,449
right<font color="#CCCCCC"> well when you apply and the end</font>

440
00:19:07,040 --> 00:19:10,850
will<font color="#CCCCCC"> you train the model this can be</font><font color="#E5E5E5"> a</font>

441
00:19:08,450 --> 00:19:12,320
<font color="#E5E5E5">different number then when you're done</font>

442
00:19:10,850 --> 00:19:14,629
<font color="#E5E5E5">with this process</font><font color="#CCCCCC"> you will most likely</font>

443
00:19:12,320 --> 00:19:16,250
<font color="#E5E5E5">save this model so next time you need to</font>

444
00:19:14,630 --> 00:19:19,310
train their own network<font color="#E5E5E5"> you ready</font><font color="#CCCCCC"> there</font>

445
00:19:16,250 --> 00:19:20,480
<font color="#CCCCCC">this</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so you start random and in</font>

446
00:19:19,310 --> 00:19:23,240
the end you<font color="#E5E5E5"> have this value you're going</font>

447
00:19:20,480 --> 00:19:24,110
<font color="#CCCCCC">to save and persisted so you're gonna</font>

448
00:19:23,240 --> 00:19:26,060
load up in it

449
00:19:24,110 --> 00:19:28,070
your model image<font color="#CCCCCC"> together</font><font color="#E5E5E5"> network you'll</font>

450
00:19:26,060 --> 00:19:29,929
load<font color="#E5E5E5"> up in the narrow ok this is</font><font color="#CCCCCC"> very</font>

451
00:19:28,070 --> 00:19:32,330
important any question about this part

452
00:19:29,930 --> 00:19:38,120
<font color="#CCCCCC">this</font><font color="#E5E5E5"> was right this more important thing</font>

453
00:19:32,330 --> 00:19:41,540
of the neural<font color="#CCCCCC"> network</font><font color="#E5E5E5"> all right so the</font>

454
00:19:38,120 --> 00:19:43,820
<font color="#CCCCCC">like we talk about the first three step</font>

455
00:19:41,540 --> 00:19:46,610
ABC<font color="#E5E5E5"> then there is the calculate arrow</font>

456
00:19:43,820 --> 00:19:55,790
and update<font color="#CCCCCC"> weight I'm gonna talk about</font>

457
00:19:46,610 --> 00:19:58,189
<font color="#E5E5E5">that in a second so yes these are the</font>

458
00:19:55,790 --> 00:19:59,970
<font color="#CCCCCC">last step so then they took</font><font color="#E5E5E5"> away the</font>

459
00:19:58,190 --> 00:20:03,029
output or each<font color="#E5E5E5"> neuron</font>

460
00:19:59,970 --> 00:20:05,370
some of the weight and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> input then</font>

461
00:20:03,029 --> 00:20:07,740
you plus<font color="#CCCCCC"> bias depend the</font><font color="#E5E5E5"> bias and then</font>

462
00:20:05,370 --> 00:20:13,500
all<font color="#E5E5E5"> these this some are gonna apply the</font>

463
00:20:07,740 --> 00:20:15,330
activation function<font color="#E5E5E5"> yeah yeah yes each</font>

464
00:20:13,500 --> 00:20:21,330
<font color="#CCCCCC">narrowed calculated</font><font color="#E5E5E5"> out to the same</font>

465
00:20:15,330 --> 00:20:23,370
thing<font color="#CCCCCC"> yes so the bias is something that</font>

466
00:20:21,330 --> 00:20:25,830
I can create<font color="#E5E5E5"> confusion sometime but it</font>

467
00:20:23,370 --> 00:20:27,709
<font color="#E5E5E5">just a constant right</font><font color="#CCCCCC"> that you are to</font>

468
00:20:25,830 --> 00:20:31,379
the process<font color="#E5E5E5"> for instance if you have a</font>

469
00:20:27,710 --> 00:20:34,320
like a<font color="#E5E5E5"> linear equation right most likely</font>

470
00:20:31,379 --> 00:20:35,939
enough<font color="#CCCCCC"> know in a Cartesian plane</font><font color="#E5E5E5"> most</font>

471
00:20:34,320 --> 00:20:37,830
likely it doesn't start from<font color="#E5E5E5"> zero</font><font color="#CCCCCC"> it</font>

472
00:20:35,940 --> 00:20:39,960
<font color="#E5E5E5">start from some value right can be one</font>

473
00:20:37,830 --> 00:20:43,168
<font color="#E5E5E5">two or whenever they buy is always that</font>

474
00:20:39,960 --> 00:20:45,629
constant<font color="#E5E5E5"> and most</font><font color="#CCCCCC"> likely you can treat</font>

475
00:20:43,169 --> 00:20:48,950
the bias is the<font color="#CCCCCC"> weight can be</font><font color="#E5E5E5"> updated</font><font color="#CCCCCC"> so</font>

476
00:20:45,629 --> 00:20:51,178
<font color="#CCCCCC">there is in a</font><font color="#E5E5E5"> community</font><font color="#CCCCCC"> some you</font><font color="#E5E5E5"> know</font>

477
00:20:48,950 --> 00:20:52,889
some conflicts<font color="#E5E5E5"> say this should be never</font>

478
00:20:51,179 --> 00:20:55,769
change<font color="#CCCCCC"> others would be treated as a</font>

479
00:20:52,889 --> 00:20:57,229
weight but I<font color="#CCCCCC"> treat as a weight and it's</font>

480
00:20:55,769 --> 00:21:02,460
fine

481
00:20:57,230 --> 00:21:04,169
so activation function really define<font color="#E5E5E5"> the</font>

482
00:21:02,460 --> 00:21:06,809
value is propagated to the<font color="#E5E5E5"> next layer</font>

483
00:21:04,169 --> 00:21:09,480
and the the purpose of the dimension

484
00:21:06,809 --> 00:21:12,240
function is scale the output<font color="#E5E5E5"> in a</font>

485
00:21:09,480 --> 00:21:14,299
meaningful in a proper range right for

486
00:21:12,240 --> 00:21:18,860
instance<font color="#E5E5E5"> we have different kind of</font>

487
00:21:14,299 --> 00:21:21,480
activation function<font color="#E5E5E5"> the sigmoid is the</font>

488
00:21:18,860 --> 00:21:24,570
the most user<font color="#CCCCCC"> duration function when you</font>

489
00:21:21,480 --> 00:21:26,789
have like to<font color="#CCCCCC"> perform a classification</font>

490
00:21:24,570 --> 00:21:29,039
between<font color="#E5E5E5"> two dependent variable</font><font color="#CCCCCC"> most</font>

491
00:21:26,789 --> 00:21:33,090
<font color="#CCCCCC">likely</font><font color="#E5E5E5"> to predict the gender can be male</font>

492
00:21:29,039 --> 00:21:36,240
female right<font color="#CCCCCC"> and in the output is always</font>

493
00:21:33,090 --> 00:21:38,279
<font color="#E5E5E5">a number between 0 to 1 then we have the</font>

494
00:21:36,240 --> 00:21:41,399
hyperbolic<font color="#E5E5E5"> tangent function which is</font>

495
00:21:38,279 --> 00:21:42,509
best choice for hidden<font color="#E5E5E5"> layer the one the</font>

496
00:21:41,399 --> 00:21:45,209
layer in the<font color="#CCCCCC"> middle the neural network</font>

497
00:21:42,509 --> 00:21:49,159
<font color="#E5E5E5">and they produce the</font><font color="#CCCCCC"> the value between</font>

498
00:21:45,210 --> 00:21:53,820
negative 1 to 1<font color="#CCCCCC"> and then we</font><font color="#E5E5E5"> have the</font>

499
00:21:49,159 --> 00:21:56,580
<font color="#E5E5E5">softmax when we have dependent variable</font>

500
00:21:53,820 --> 00:21:58,110
variable to compute<font color="#E5E5E5"> data more there are</font>

501
00:21:56,580 --> 00:22:00,120
three or more<font color="#CCCCCC"> for instance if wanna</font>

502
00:21:58,110 --> 00:22:03,269
<font color="#CCCCCC">calculate the political dependent from</font>

503
00:22:00,120 --> 00:22:05,850
you know political favor<font color="#E5E5E5"> for me like</font>

504
00:22:03,269 --> 00:22:08,340
<font color="#E5E5E5">liberal democratic so for your multiple</font>

505
00:22:05,850 --> 00:22:10,500
values<font color="#E5E5E5"> right to calculate and the output</font>

506
00:22:08,340 --> 00:22:12,360
is a series of value that<font color="#E5E5E5"> can</font><font color="#CCCCCC"> be three</font>

507
00:22:10,500 --> 00:22:13,370
or<font color="#E5E5E5"> more but they the</font><font color="#CCCCCC"> sum of these values</font>

508
00:22:12,360 --> 00:22:15,800
<font color="#CCCCCC">going to</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> one</font>

509
00:22:13,370 --> 00:22:21,620
and the<font color="#CCCCCC"> higher-value most like gonna</font><font color="#E5E5E5"> be</font>

510
00:22:15,800 --> 00:22:23,000
your your<font color="#E5E5E5"> desired</font><font color="#CCCCCC"> food</font><font color="#E5E5E5"> and this is</font>

511
00:22:21,620 --> 00:22:24,830
actually produced<font color="#CCCCCC"> implemented you go to</font>

512
00:22:23,000 --> 00:22:27,640
<font color="#CCCCCC">Wikipedia and</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know you can</font><font color="#E5E5E5"> just</font>

513
00:22:24,830 --> 00:22:30,649
implement it quite easily<font color="#CCCCCC"> yourself</font>

514
00:22:27,640 --> 00:22:34,130
<font color="#CCCCCC">alright so this</font><font color="#E5E5E5"> is a vo code here this</font>

515
00:22:30,650 --> 00:22:35,510
<font color="#E5E5E5">is like C sharp C C++ insert the C</font>

516
00:22:34,130 --> 00:22:37,460
language is but again<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> worry</font><font color="#E5E5E5"> about</font>

517
00:22:35,510 --> 00:22:39,650
<font color="#E5E5E5">the language just</font><font color="#CCCCCC"> to give you an idea</font>

518
00:22:37,460 --> 00:22:42,320
<font color="#E5E5E5">how the traditional neural net who is</font>

519
00:22:39,650 --> 00:22:44,630
implemented which is<font color="#E5E5E5"> array based in the</font>

520
00:22:42,320 --> 00:22:49,939
core it is inside<font color="#CCCCCC"> the square</font><font color="#E5E5E5"> here we see</font>

521
00:22:44,630 --> 00:22:52,550
is a a bunch of a for loop<font color="#CCCCCC"> and nested</font>

522
00:22:49,940 --> 00:22:55,040
for loop they access the<font color="#E5E5E5"> value in this</font>

523
00:22:52,550 --> 00:22:58,370
array<font color="#E5E5E5"> and apply what we just showed the</font>

524
00:22:55,040 --> 00:23:01,940
<font color="#CCCCCC">sum the</font><font color="#E5E5E5"> product sum of the inputted</font>

525
00:22:58,370 --> 00:23:04,459
<font color="#E5E5E5">weights then apply the bias and then the</font>

526
00:23:01,940 --> 00:23:07,490
activation function and this<font color="#E5E5E5"> is for the</font>

527
00:23:04,460 --> 00:23:09,980
hidden layer<font color="#CCCCCC"> exact to tell from</font><font color="#E5E5E5"> the</font>

528
00:23:07,490 --> 00:23:13,460
<font color="#E5E5E5">default in the back but first</font><font color="#CCCCCC"> ever the</font><font color="#E5E5E5"> H</font>

529
00:23:09,980 --> 00:23:15,890
<font color="#E5E5E5">Sam's</font><font color="#CCCCCC"> dead phone no hidden</font><font color="#E5E5E5"> some and then</font>

530
00:23:13,460 --> 00:23:18,890
we have the<font color="#E5E5E5"> sound we</font><font color="#CCCCCC"> sent for output</font>

531
00:23:15,890 --> 00:23:21,610
some and the same thing apply<font color="#E5E5E5"> also for</font>

532
00:23:18,890 --> 00:23:24,230
the<font color="#E5E5E5"> next layer and so forth so</font><font color="#CCCCCC"> is really</font>

533
00:23:21,610 --> 00:23:26,510
for each loop for each<font color="#E5E5E5"> loop to access</font>

534
00:23:24,230 --> 00:23:28,220
the array and update the<font color="#CCCCCC"> values so this</font>

535
00:23:26,510 --> 00:23:30,470
<font color="#E5E5E5">is like the traditional way however</font><font color="#CCCCCC"> I</font>

536
00:23:28,220 --> 00:23:32,150
found<font color="#E5E5E5"> a mess up is a big complex already</font>

537
00:23:30,470 --> 00:23:35,750
like a piece of paper<font color="#E5E5E5"> a pencil to be</font>

538
00:23:32,150 --> 00:23:39,800
sure that I match the index so it's not

539
00:23:35,750 --> 00:23:42,140
really easy<font color="#CCCCCC"> to</font><font color="#E5E5E5"> just implement for me but</font>

540
00:23:39,800 --> 00:23:45,710
I<font color="#E5E5E5"> figure if you see actually</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> mean</font>

541
00:23:42,140 --> 00:23:50,060
<font color="#E5E5E5">commit in an easier way so we talk about</font>

542
00:23:45,710 --> 00:23:52,160
<font color="#E5E5E5">neural network but when you</font><font color="#CCCCCC"> have a model</font>

543
00:23:50,060 --> 00:23:55,100
<font color="#CCCCCC">you start with a random</font><font color="#E5E5E5"> weight</font><font color="#CCCCCC"> something</font>

544
00:23:52,160 --> 00:23:56,990
<font color="#E5E5E5">important to to apply</font><font color="#CCCCCC"> is some pickle</font>

545
00:23:55,100 --> 00:23:59,330
training which is the<font color="#E5E5E5"> process I should</font>

546
00:23:56,990 --> 00:24:02,750
figure out<font color="#E5E5E5"> the way to the value they</font>

547
00:23:59,330 --> 00:24:06,949
produce<font color="#CCCCCC"> and better performance your your</font>

548
00:24:02,750 --> 00:24:09,140
<font color="#E5E5E5">mod right so really this cycle that keep</font>

549
00:24:06,950 --> 00:24:11,120
update your<font color="#CCCCCC"> weight until you</font><font color="#E5E5E5"> reach your</font>

550
00:24:09,140 --> 00:24:13,430
goal<font color="#CCCCCC"> there are several</font><font color="#E5E5E5"> techniques you</font>

551
00:24:11,120 --> 00:24:16,699
<font color="#E5E5E5">can apply the most common one is you</font>

552
00:24:13,430 --> 00:24:18,500
<font color="#E5E5E5">it's called back propagation and which</font>

553
00:24:16,700 --> 00:24:21,620
is called back propagation because<font color="#CCCCCC"> 808</font>

554
00:24:18,500 --> 00:24:23,540
<font color="#E5E5E5">the all the output</font><font color="#CCCCCC"> as computed</font><font color="#E5E5E5"> to</font>

555
00:24:21,620 --> 00:24:25,610
calculate the error<font color="#CCCCCC"> and calculate the</font>

556
00:24:23,540 --> 00:24:26,409
<font color="#E5E5E5">Delta to apply</font><font color="#CCCCCC"> the weight and then</font><font color="#E5E5E5"> go</font>

557
00:24:25,610 --> 00:24:30,610
backward

558
00:24:26,410 --> 00:24:31,720
<font color="#E5E5E5">to each note which</font><font color="#CCCCCC"> neuron and update the</font>

559
00:24:30,610 --> 00:24:34,000
weights that's<font color="#E5E5E5"> why it's called back</font>

560
00:24:31,720 --> 00:24:38,010
propagation<font color="#E5E5E5"> there are other kind of</font>

561
00:24:34,000 --> 00:24:41,500
training<font color="#CCCCCC"> I implement the</font><font color="#E5E5E5"> particles form</font>

562
00:24:38,010 --> 00:24:43,750
<font color="#CCCCCC">this</font><font color="#E5E5E5"> day they say</font><font color="#CCCCCC"> particle swarm I have</font>

563
00:24:41,500 --> 00:24:44,380
a better<font color="#E5E5E5"> results by slower train take</font>

564
00:24:43,750 --> 00:24:49,110
more<font color="#E5E5E5"> time</font>

565
00:24:44,380 --> 00:24:49,110
I feel<font color="#E5E5E5"> better as a back propagation</font><font color="#CCCCCC"> but</font>

566
00:24:50,160 --> 00:24:57,130
so usually when you train a model<font color="#E5E5E5"> you</font>

567
00:24:53,820 --> 00:24:59,439
<font color="#CCCCCC">add these a</font><font color="#E5E5E5"> well-known set of data and</font>

568
00:24:57,130 --> 00:25:02,350
what you do you<font color="#E5E5E5"> shuffle the</font><font color="#CCCCCC"> data you</font>

569
00:24:59,440 --> 00:25:05,950
randomize the order and then<font color="#CCCCCC"> you</font><font color="#E5E5E5"> pick</font>

570
00:25:02,350 --> 00:25:08,379
some sort of<font color="#CCCCCC"> 7-7 70% or 80% to data use</font>

571
00:25:05,950 --> 00:25:09,850
the<font color="#CCCCCC"> Train and the remaining</font><font color="#E5E5E5"> one to test</font>

572
00:25:08,380 --> 00:25:11,920
right<font color="#E5E5E5"> actually if you get something</font><font color="#CCCCCC"> that</font>

573
00:25:09,850 --> 00:25:13,870
computed correctly<font color="#E5E5E5"> and they will</font>

574
00:25:11,920 --> 00:25:15,040
calculate<font color="#E5E5E5"> your accuracy and then when</font>

575
00:25:13,870 --> 00:25:17,949
you're done<font color="#E5E5E5"> with the first training</font>

576
00:25:15,040 --> 00:25:20,710
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> if it's not</font><font color="#CCCCCC"> accurate enough you</font>

577
00:25:17,950 --> 00:25:23,380
reshuffle again<font color="#E5E5E5"> the this data you</font>

578
00:25:20,710 --> 00:25:26,050
<font color="#E5E5E5">partition again</font><font color="#CCCCCC"> and you run</font><font color="#E5E5E5"> another epic</font>

579
00:25:23,380 --> 00:25:27,790
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can keep iterating until you</font>

580
00:25:26,050 --> 00:25:32,560
reach<font color="#E5E5E5"> your accuracy that</font><font color="#CCCCCC"> you're looking</font>

581
00:25:27,790 --> 00:25:37,750
for in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> trainer network we try to</font>

582
00:25:32,560 --> 00:25:39,159
minimize<font color="#E5E5E5"> the error of to modify the</font>

583
00:25:37,750 --> 00:25:42,100
weight of the<font color="#E5E5E5"> neural connection right</font>

584
00:25:39,160 --> 00:25:44,050
<font color="#E5E5E5">and the most popular one is called</font>

585
00:25:42,100 --> 00:25:46,179
gradient descended which is kind of bad

586
00:25:44,050 --> 00:25:48,370
word but pretty<font color="#E5E5E5"> much that's what it does</font>

587
00:25:46,180 --> 00:25:54,310
<font color="#E5E5E5">it just calculate the value until</font><font color="#CCCCCC"> reach</font>

588
00:25:48,370 --> 00:25:55,989
the<font color="#E5E5E5"> bottom right of the the equation so</font>

589
00:25:54,310 --> 00:25:57,790
this is like in a deal<font color="#CCCCCC"> word we use</font>

590
00:25:55,990 --> 00:26:00,160
<font color="#E5E5E5">greatest central greater to minimize the</font>

591
00:25:57,790 --> 00:26:02,290
error the function however<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> real</font>

592
00:26:00,160 --> 00:26:04,420
world<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the</font><font color="#CCCCCC"> minima</font>

593
00:26:02,290 --> 00:26:06,879
we're going to try to reach the<font color="#CCCCCC"> value in</font>

594
00:26:04,420 --> 00:26:08,800
every wall is even<font color="#E5E5E5"> more complex</font><font color="#CCCCCC"> there is</font>

595
00:26:06,880 --> 00:26:12,100
<font color="#E5E5E5">something called momentum we tried</font>

596
00:26:08,800 --> 00:26:14,830
actually to move the<font color="#CCCCCC"> value from</font><font color="#E5E5E5"> the</font>

597
00:26:12,100 --> 00:26:16,480
narrow part here the<font color="#E5E5E5"> wise one try to</font>

598
00:26:14,830 --> 00:26:18,159
<font color="#E5E5E5">find out</font><font color="#CCCCCC"> the minimum we're not going</font><font color="#E5E5E5"> to</font>

599
00:26:16,480 --> 00:26:25,390
cover that<font color="#CCCCCC"> but I should</font><font color="#E5E5E5"> split easy to</font>

600
00:26:18,160 --> 00:26:29,830
implement so this is another<font color="#E5E5E5"> snippet</font>

601
00:26:25,390 --> 00:26:31,720
code but just to show that<font color="#E5E5E5"> the process</font>

602
00:26:29,830 --> 00:26:34,270
to calculate<font color="#CCCCCC"> error and apply it</font><font color="#E5E5E5"> just you</font>

603
00:26:31,720 --> 00:26:37,000
<font color="#CCCCCC">know a series</font><font color="#E5E5E5"> of step you calculate the</font>

604
00:26:34,270 --> 00:26:39,370
gradient which is<font color="#E5E5E5"> the error between the</font>

605
00:26:37,000 --> 00:26:41,590
<font color="#E5E5E5">output and the</font><font color="#CCCCCC"> value did</font>

606
00:26:39,370 --> 00:26:45,790
you're looking for and then<font color="#E5E5E5"> you start to</font>

607
00:26:41,590 --> 00:26:52,209
play<font color="#CCCCCC"> it again the hidden layer backward</font>

608
00:26:45,790 --> 00:26:56,310
from from the last one any question all

609
00:26:52,210 --> 00:26:56,310
right<font color="#CCCCCC"> let's</font><font color="#E5E5E5"> start with the fun part</font>

610
00:26:57,300 --> 00:27:04,780
yes<font color="#E5E5E5"> yeah I mentioned in the beginning so</font>

611
00:27:01,350 --> 00:27:07,149
we<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> attach</font><font color="#CCCCCC"> that because I</font><font color="#E5E5E5"> do want</font>

612
00:27:04,780 --> 00:27:10,120
<font color="#CCCCCC">to talk</font><font color="#E5E5E5"> about how we distribute the work</font>

613
00:27:07,150 --> 00:27:14,170
across machine<font color="#E5E5E5"> but yeah as a</font><font color="#CCCCCC"> embarrass</font>

614
00:27:10,120 --> 00:27:16,360
<font color="#CCCCCC">Lee partner because we usually like it's</font>

615
00:27:14,170 --> 00:27:18,640
called<font color="#E5E5E5"> divide and conquer</font><font color="#CCCCCC"> they approach</font>

616
00:27:16,360 --> 00:27:20,500
<font color="#CCCCCC">that you can get</font><font color="#E5E5E5"> series of the of an</font>

617
00:27:18,640 --> 00:27:22,960
algorithm<font color="#CCCCCC"> that</font><font color="#E5E5E5"> can be split in small</font>

618
00:27:20,500 --> 00:27:30,060
<font color="#CCCCCC">subsets and been partitioned the work in</font>

619
00:27:22,960 --> 00:27:30,060
<font color="#E5E5E5">parallel and rejoin</font><font color="#CCCCCC"> the result</font><font color="#E5E5E5"> okay so</font>

620
00:27:30,300 --> 00:27:34,480
in<font color="#CCCCCC"> turnout they actually if you think</font>

621
00:27:32,260 --> 00:27:38,260
<font color="#CCCCCC">about neural network is</font><font color="#E5E5E5"> a lot like a</font>

622
00:27:34,480 --> 00:27:39,820
functional<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> a function right in</font>

623
00:27:38,260 --> 00:27:41,080
front<font color="#E5E5E5"> of a functional programming well</font>

624
00:27:39,820 --> 00:27:43,330
think about<font color="#E5E5E5"> a network like is a</font>

625
00:27:41,080 --> 00:27:45,669
<font color="#E5E5E5">mathematical function that</font><font color="#CCCCCC"> accepts</font><font color="#E5E5E5"> some</font>

626
00:27:43,330 --> 00:27:48,610
numeric input and<font color="#CCCCCC"> generates</font><font color="#E5E5E5"> some output</font>

627
00:27:45,670 --> 00:27:49,780
<font color="#E5E5E5">slowly input</font><font color="#CCCCCC"> process</font><font color="#E5E5E5"> and output it most</font>

628
00:27:48,610 --> 00:27:52,540
likely<font color="#CCCCCC"> the out when you create your</font>

629
00:27:49,780 --> 00:27:58,600
<font color="#E5E5E5">model the output</font><font color="#CCCCCC"> depend</font><font color="#E5E5E5"> only by your</font>

630
00:27:52,540 --> 00:27:59,980
input<font color="#E5E5E5"> right so in in function</font>

631
00:27:58,600 --> 00:28:02,020
programming<font color="#CCCCCC"> is something called in a</font>

632
00:27:59,980 --> 00:28:04,510
function composition whenever we have a

633
00:28:02,020 --> 00:28:06,100
function that<font color="#E5E5E5"> would match the</font><font color="#CCCCCC"> input of</font>

634
00:28:04,510 --> 00:28:07,720
the following function you get composed

635
00:28:06,100 --> 00:28:10,510
is to<font color="#E5E5E5"> function to create a bigger</font>

636
00:28:07,720 --> 00:28:12,160
function right<font color="#CCCCCC"> so you think about a</font>

637
00:28:10,510 --> 00:28:14,590
neural network<font color="#E5E5E5"> pretty much do the</font><font color="#CCCCCC"> same</font>

638
00:28:12,160 --> 00:28:16,720
when the<font color="#E5E5E5"> neuron is this function that</font>

639
00:28:14,590 --> 00:28:18,490
<font color="#E5E5E5">you know create the dot product by the</font>

640
00:28:16,720 --> 00:28:20,440
biased and functional activation

641
00:28:18,490 --> 00:28:22,270
function<font color="#E5E5E5"> well here the input and divide</font>

642
00:28:20,440 --> 00:28:25,360
in the output<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you can compose this</font>

643
00:28:22,270 --> 00:28:26,710
neuron<font color="#E5E5E5"> as a</font><font color="#CCCCCC"> is a bigger function and of</font>

644
00:28:25,360 --> 00:28:28,060
course<font color="#CCCCCC"> it'll</font><font color="#E5E5E5"> be more complex near an</font>

645
00:28:26,710 --> 00:28:30,100
actor<font color="#E5E5E5"> because they have different input</font>

646
00:28:28,060 --> 00:28:32,620
and different output<font color="#E5E5E5"> like well sorry</font>

647
00:28:30,100 --> 00:28:38,260
<font color="#E5E5E5">multiple input multiple up to but high</font>

648
00:28:32,620 --> 00:28:40,120
<font color="#E5E5E5">level the concept apply so without going</font>

649
00:28:38,260 --> 00:28:41,590
too much<font color="#E5E5E5"> detail here in six I know code</font>

650
00:28:40,120 --> 00:28:45,879
was able to<font color="#E5E5E5"> implement</font>

651
00:28:41,590 --> 00:28:48,730
almost what we<font color="#CCCCCC"> did in all the bunch of C</font>

652
00:28:45,880 --> 00:28:51,389
code with a bunch of for each<font color="#E5E5E5"> loop right</font>

653
00:28:48,730 --> 00:28:54,839
we create a function<font color="#CCCCCC"> that it just</font>

654
00:28:51,389 --> 00:28:58,978
<font color="#CCCCCC">I paint the value to a given vector</font>

655
00:28:54,839 --> 00:29:02,579
vector array which is<font color="#E5E5E5"> used in the third</font>

656
00:28:58,979 --> 00:29:04,049
line to obtain<font color="#E5E5E5"> the bias</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> and then</font>

657
00:29:02,579 --> 00:29:06,209
the<font color="#E5E5E5"> last</font><font color="#CCCCCC"> function the</font><font color="#E5E5E5"> layer</font>

658
00:29:04,049 --> 00:29:08,369
well the layer function<font color="#CCCCCC"> I'd</font><font color="#E5E5E5"> accept an</font>

659
00:29:06,209 --> 00:29:10,639
activation function is imp to input the

660
00:29:08,369 --> 00:29:13,589
weight which is<font color="#E5E5E5"> you know your model and</font>

661
00:29:10,639 --> 00:29:15,689
then<font color="#E5E5E5"> the</font><font color="#CCCCCC"> input and produce the output</font>

662
00:29:13,589 --> 00:29:17,519
<font color="#E5E5E5">and you can see here the last line do</font>

663
00:29:15,690 --> 00:29:19,709
exactly the same functionality<font color="#E5E5E5"> inside</font>

664
00:29:17,519 --> 00:29:25,499
the network<font color="#E5E5E5"> dot product</font><font color="#CCCCCC"> buy us</font><font color="#E5E5E5"> an</font>

665
00:29:19,709 --> 00:29:28,289
activation function even<font color="#E5E5E5"> better right</font>

666
00:29:25,499 --> 00:29:29,940
now<font color="#CCCCCC"> we can just use</font><font color="#E5E5E5"> I show this line of</font>

667
00:29:28,289 --> 00:29:32,549
code<font color="#CCCCCC"> to implement</font><font color="#E5E5E5"> our neural network</font>

668
00:29:29,940 --> 00:29:34,200
<font color="#E5E5E5">right we have the first line you can see</font>

669
00:29:32,549 --> 00:29:36,749
how easy is to<font color="#CCCCCC"> command a light wrist and</font>

670
00:29:34,200 --> 00:29:41,609
a sigmoid activation function<font color="#CCCCCC"> we have</font>

671
00:29:36,749 --> 00:29:43,289
three arbitrary<font color="#CCCCCC"> in small here weight or</font>

672
00:29:41,609 --> 00:29:45,239
<font color="#E5E5E5">this could be like</font><font color="#CCCCCC"> your model for</font><font color="#E5E5E5"> your</font>

673
00:29:43,289 --> 00:29:48,690
neural<font color="#CCCCCC"> network</font><font color="#E5E5E5"> and then we</font><font color="#CCCCCC"> have it</font>

674
00:29:45,239 --> 00:29:51,539
created like a<font color="#E5E5E5"> three layer of neural</font>

675
00:29:48,690 --> 00:29:56,219
network we<font color="#E5E5E5"> leverage the layer function</font>

676
00:29:51,539 --> 00:29:57,989
passing activation function and the the

677
00:29:56,219 --> 00:30:00,479
way to the model<font color="#E5E5E5"> for each for each</font>

678
00:29:57,989 --> 00:30:02,909
<font color="#E5E5E5">function and then we use this a double</font>

679
00:30:00,479 --> 00:30:05,369
arrow which is used for compose function

680
00:30:02,909 --> 00:30:12,479
<font color="#E5E5E5">right this is this actually we build our</font>

681
00:30:05,369 --> 00:30:14,639
neural<font color="#CCCCCC"> net</font><font color="#E5E5E5"> which is</font><font color="#CCCCCC"> pretty nice so in</font>

682
00:30:12,479 --> 00:30:17,369
this case here<font color="#CCCCCC"> we can if you have</font>

683
00:30:14,639 --> 00:30:19,619
<font color="#E5E5E5">actually a list of arbitrary linear we</font>

684
00:30:17,369 --> 00:30:21,689
can<font color="#E5E5E5"> create a even better</font><font color="#CCCCCC"> upper function</font>

685
00:30:19,619 --> 00:30:24,149
they compose this function<font color="#CCCCCC"> so you</font><font color="#E5E5E5"> don't</font>

686
00:30:21,690 --> 00:30:25,559
have you<font color="#CCCCCC"> know more like</font><font color="#E5E5E5"> dependent from</font>

687
00:30:24,149 --> 00:30:27,299
three layers<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> create this</font>

688
00:30:25,559 --> 00:30:30,119
function<font color="#E5E5E5"> that can accept any arbitrary</font>

689
00:30:27,299 --> 00:30:32,369
number of pair of activation function

690
00:30:30,119 --> 00:30:34,079
and<font color="#CCCCCC"> wait and create for you</font><font color="#E5E5E5"> and the</font>

691
00:30:32,369 --> 00:30:37,379
<font color="#CCCCCC">network can be</font><font color="#E5E5E5"> any certain number of</font>

692
00:30:34,079 --> 00:30:39,658
<font color="#CCCCCC">layer and I have of</font><font color="#E5E5E5"> course you is</font><font color="#CCCCCC"> a</font>

693
00:30:37,379 --> 00:30:43,279
<font color="#CCCCCC">qulet right so in this</font><font color="#E5E5E5"> case you can see</font>

694
00:30:39,659 --> 00:30:46,440
that<font color="#E5E5E5"> the input of the collection of pair</font>

695
00:30:43,279 --> 00:30:48,169
activation function<font color="#CCCCCC"> wait is apply and</font>

696
00:30:46,440 --> 00:30:50,849
<font color="#CCCCCC">composed to the second one the result</font>

697
00:30:48,169 --> 00:30:53,159
<font color="#E5E5E5">then is PI applied to the third</font><font color="#CCCCCC"> function</font>

698
00:30:50,849 --> 00:30:59,329
and so forth until<font color="#E5E5E5"> you consume all the</font>

699
00:30:53,159 --> 00:31:04,229
function and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> compose your one yes oh</font>

700
00:30:59,329 --> 00:31:05,010
<font color="#CCCCCC">this is a F sharp right which is open</font>

701
00:31:04,229 --> 00:31:08,280
<font color="#CCCCCC">source so</font>

702
00:31:05,010 --> 00:31:10,679
the source coded to have ran on Mac

703
00:31:08,280 --> 00:31:13,350
Linux<font color="#CCCCCC"> windows that</font><font color="#E5E5E5"> you download</font><font color="#CCCCCC"> from</font>

704
00:31:10,679 --> 00:31:15,780
github<font color="#E5E5E5"> however I'm not</font><font color="#CCCCCC"> a big designer so</font>

705
00:31:13,350 --> 00:31:18,000
<font color="#CCCCCC">I build enough like sort of UI that you</font>

706
00:31:15,780 --> 00:31:19,980
can show later from create like a random

707
00:31:18,000 --> 00:31:22,020
we see our neural network<font color="#CCCCCC"> lesser known</font>

708
00:31:19,980 --> 00:31:26,900
<font color="#CCCCCC">in Windows but the code can</font><font color="#E5E5E5"> run any sort</font>

709
00:31:22,020 --> 00:31:28,799
of machine<font color="#E5E5E5"> right</font><font color="#CCCCCC"> and but just again</font>

710
00:31:26,900 --> 00:31:30,660
<font color="#E5E5E5">languages are not important or the</font>

711
00:31:28,799 --> 00:31:32,129
concept right you can pretty much apply

712
00:31:30,660 --> 00:31:34,080
the same thing other<font color="#E5E5E5"> programming</font>

713
00:31:32,130 --> 00:31:36,780
languages could<font color="#E5E5E5"> be</font><font color="#CCCCCC"> removable as for both</font>

714
00:31:34,080 --> 00:31:42,330
<font color="#E5E5E5">but</font><font color="#CCCCCC"> the same idea to</font><font color="#E5E5E5"> compose and treat</font>

715
00:31:36,780 --> 00:31:44,760
<font color="#E5E5E5">neural net</font><font color="#CCCCCC"> with a function right</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I'm</font>

716
00:31:42,330 --> 00:31:47,730
gonna skip this part because it when we

717
00:31:44,760 --> 00:31:49,710
do the demo<font color="#E5E5E5"> all together later</font><font color="#CCCCCC"> so it's</font>

718
00:31:47,730 --> 00:31:51,570
<font color="#E5E5E5">gonna be the the fun part</font>

719
00:31:49,710 --> 00:31:55,140
so we talked about<font color="#E5E5E5"> our net worth a group</font>

720
00:31:51,570 --> 00:31:55,500
of node connected right<font color="#E5E5E5"> that sounds</font>

721
00:31:55,140 --> 00:32:00,230
familiar

722
00:31:55,500 --> 00:32:04,980
<font color="#E5E5E5">anybody can have an idea in a jet</font><font color="#CCCCCC"> right</font>

723
00:32:00,230 --> 00:32:07,890
<font color="#E5E5E5">different engine so the agent is this</font>

724
00:32:04,980 --> 00:32:09,600
unit computation<font color="#CCCCCC"> that</font><font color="#E5E5E5"> agent</font><font color="#CCCCCC"> actor</font><font color="#E5E5E5"> that I</font>

725
00:32:07,890 --> 00:32:12,870
slide to be different but can be<font color="#E5E5E5"> applied</font>

726
00:32:09,600 --> 00:32:15,449
the same concept here and<font color="#CCCCCC"> there used to</font>

727
00:32:12,870 --> 00:32:19,379
a paralyzing electro<font color="#CCCCCC"> actually is it's</font>

728
00:32:15,450 --> 00:32:21,990
called<font color="#CCCCCC"> Network parallel training neural</font>

729
00:32:19,380 --> 00:32:23,610
net to<font color="#E5E5E5"> power training and</font><font color="#CCCCCC"> NPT yes and in</font>

730
00:32:21,990 --> 00:32:25,110
this approach the<font color="#CCCCCC"> narrows of the</font>

731
00:32:23,610 --> 00:32:27,240
<font color="#E5E5E5">artificial neural network I divide</font>

732
00:32:25,110 --> 00:32:29,309
across machine and cluster right so each

733
00:32:27,240 --> 00:32:32,010
machine<font color="#E5E5E5"> hold the portion</font><font color="#CCCCCC"> in our</font><font color="#E5E5E5"> network</font>

734
00:32:29,309 --> 00:32:33,928
and<font color="#CCCCCC"> and then you can start the training</font>

735
00:32:32,010 --> 00:32:37,220
<font color="#CCCCCC">in</font><font color="#E5E5E5"> processing across a machine in</font>

736
00:32:33,929 --> 00:32:39,890
parallel right so in this way

737
00:32:37,220 --> 00:32:43,470
think about<font color="#E5E5E5"> the senior computation that</font>

738
00:32:39,890 --> 00:32:45,179
<font color="#E5E5E5">it communicate</font><font color="#CCCCCC"> only through messages</font>

739
00:32:43,470 --> 00:32:48,150
right so the agent<font color="#E5E5E5"> send message</font><font color="#CCCCCC"> to</font>

740
00:32:45,179 --> 00:32:49,860
another<font color="#E5E5E5"> agent</font><font color="#CCCCCC"> and the agent</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> putting</font>

741
00:32:48,150 --> 00:32:52,710
in these are<font color="#CCCCCC"> indeed</font><font color="#E5E5E5"> mailbox</font>

742
00:32:49,860 --> 00:32:54,570
<font color="#CCCCCC">so in the agent when receive a message</font>

743
00:32:52,710 --> 00:32:57,419
in react and do something<font color="#CCCCCC"> that player</font>

744
00:32:54,570 --> 00:32:59,639
<font color="#CCCCCC">behavior to this message and it cannot</font>

745
00:32:57,419 --> 00:33:02,730
save a state internally which is

746
00:32:59,640 --> 00:33:03,870
<font color="#E5E5E5">isolated which is a great</font><font color="#CCCCCC"> concurrent</font>

747
00:33:02,730 --> 00:33:05,790
programming model because they were like

748
00:33:03,870 --> 00:33:07,799
hundred thousand of agent they ran in

749
00:33:05,790 --> 00:33:09,870
<font color="#CCCCCC">parallel</font><font color="#E5E5E5"> without you know creating sort</font>

750
00:33:07,799 --> 00:33:12,059
<font color="#E5E5E5">of race condition deadlock with this</font>

751
00:33:09,870 --> 00:33:14,668
kind of concurrent<font color="#E5E5E5"> hazard</font>

752
00:33:12,059 --> 00:33:16,979
the state in<font color="#E5E5E5"> this case can be the weight</font>

753
00:33:14,669 --> 00:33:19,349
in<font color="#E5E5E5"> the bias</font><font color="#CCCCCC"> so we can</font><font color="#E5E5E5"> isolate there and</font>

754
00:33:16,979 --> 00:33:21,840
the behavior is going to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> you know the</font>

755
00:33:19,349 --> 00:33:24,928
process<font color="#CCCCCC"> to apply when they narrow</font>

756
00:33:21,840 --> 00:33:27,599
receive all the previous neighborhood

757
00:33:24,929 --> 00:33:29,749
inputs<font color="#E5E5E5"> right that's our output so in</font>

758
00:33:27,599 --> 00:33:33,059
this case the<font color="#E5E5E5"> neuron can be treated as a</font>

759
00:33:29,749 --> 00:33:37,129
an agent<font color="#E5E5E5"> they send messages</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the next</font>

760
00:33:33,059 --> 00:33:37,129
neuron<font color="#E5E5E5"> next agent</font><font color="#CCCCCC"> in process</font><font color="#E5E5E5"> right</font>

761
00:33:37,759 --> 00:33:42,929
as I<font color="#CCCCCC"> mentioned yes is a single dependent</font>

762
00:33:41,279 --> 00:33:46,440
and isolate a unit computation

763
00:33:42,929 --> 00:33:49,259
<font color="#E5E5E5">autonomous right and communicate only</font>

764
00:33:46,440 --> 00:33:51,450
<font color="#CCCCCC">through</font><font color="#E5E5E5"> message passing and really we</font>

765
00:33:49,259 --> 00:33:53,339
<font color="#E5E5E5">can use the agent to replicate the</font>

766
00:33:51,450 --> 00:33:55,169
neuron behavior and when I<font color="#CCCCCC"> done actually</font>

767
00:33:53,339 --> 00:33:56,639
<font color="#E5E5E5">some research was placed to found this</font>

768
00:33:55,169 --> 00:33:59,519
paper here they<font color="#CCCCCC"> talked about</font><font color="#E5E5E5"> how</font>

769
00:33:56,639 --> 00:34:01,228
paralyzed<font color="#CCCCCC"> backpropagation neural network</font>

770
00:33:59,519 --> 00:34:02,879
which is actually quite<font color="#E5E5E5"> heavy to compute</font>

771
00:34:01,229 --> 00:34:05,789
when you never model<font color="#E5E5E5"> especially</font><font color="#CCCCCC"> in large</font>

772
00:34:02,879 --> 00:34:08,520
system applied to the classes so<font color="#CCCCCC"> I</font>

773
00:34:05,789 --> 00:34:10,109
decided<font color="#CCCCCC"> to model the agent to a neural</font>

774
00:34:08,520 --> 00:34:13,980
network so<font color="#CCCCCC"> if you got</font><font color="#E5E5E5"> not that crazy</font>

775
00:34:10,109 --> 00:34:17,369
<font color="#E5E5E5">right somebody else already did</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> in</font>

776
00:34:13,980 --> 00:34:19,139
this case actually<font color="#E5E5E5"> this is from this</font>

777
00:34:17,369 --> 00:34:21,899
image<font color="#E5E5E5"> from the paper and it</font><font color="#CCCCCC"> explained</font>

778
00:34:19,139 --> 00:34:24,629
actually the topology<font color="#E5E5E5"> or distributed</font>

779
00:34:21,899 --> 00:34:27,598
neural network<font color="#E5E5E5"> that you can push on</font>

780
00:34:24,629 --> 00:34:30,719
different machine right and you think

781
00:34:27,599 --> 00:34:32,879
<font color="#CCCCCC">about</font><font color="#E5E5E5"> it this is a high if you want to</font>

782
00:34:30,719 --> 00:34:35,699
build Skynet<font color="#E5E5E5"> right this is the way you</font>

783
00:34:32,879 --> 00:34:37,288
<font color="#CCCCCC">want</font><font color="#E5E5E5"> to build it when you have different</font>

784
00:34:35,699 --> 00:34:39,118
<font color="#CCCCCC">machine independent they all connect</font>

785
00:34:37,289 --> 00:34:40,529
actually<font color="#CCCCCC"> from the neuron</font><font color="#E5E5E5"> right so you</font>

786
00:34:39,119 --> 00:34:45,409
<font color="#E5E5E5">kill the mother you can everybod many</font>

787
00:34:40,529 --> 00:34:48,210
ways so it's pretty cool<font color="#CCCCCC"> and this</font><font color="#E5E5E5"> is the</font>

788
00:34:45,409 --> 00:34:50,279
criteria deployment<font color="#E5E5E5"> that they used to</font>

789
00:34:48,210 --> 00:34:52,819
<font color="#E5E5E5">play this project but the main part is</font>

790
00:34:50,279 --> 00:34:55,139
that the agent<font color="#E5E5E5"> may be able</font><font color="#CCCCCC"> to capture</font>

791
00:34:52,819 --> 00:34:55,619
the important complex behavior the

792
00:34:55,139 --> 00:34:57,750
neurons

793
00:34:55,619 --> 00:35:00,089
especially because neuron can change

794
00:34:57,750 --> 00:35:00,809
<font color="#CCCCCC">slight behavior depends upon the layer</font>

795
00:35:00,089 --> 00:35:03,509
<font color="#CCCCCC">right</font>

796
00:35:00,809 --> 00:35:04,890
for instance the output neurons are

797
00:35:03,510 --> 00:35:06,900
gonna have a slight different behavior

798
00:35:04,890 --> 00:35:08,848
<font color="#E5E5E5">the hidden one right because they don't</font>

799
00:35:06,900 --> 00:35:10,109
<font color="#CCCCCC">have they no send message</font><font color="#E5E5E5"> anymore to the</font>

800
00:35:08,849 --> 00:35:11,819
<font color="#E5E5E5">next neighbor because they are last</font>

801
00:35:10,109 --> 00:35:16,589
layer right so they send<font color="#CCCCCC"> out to the</font>

802
00:35:11,819 --> 00:35:18,960
output<font color="#E5E5E5"> and so forth so back</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> our model</font>

803
00:35:16,589 --> 00:35:20,880
of<font color="#E5E5E5"> the neural network</font><font color="#CCCCCC"> within in try</font><font color="#E5E5E5"> to</font>

804
00:35:18,960 --> 00:35:22,980
replicate<font color="#CCCCCC"> her</font><font color="#E5E5E5"> worked in a biological</font>

805
00:35:20,880 --> 00:35:25,319
<font color="#CCCCCC">brain with different layer</font><font color="#E5E5E5"> if you think</font>

806
00:35:22,980 --> 00:35:29,400
about<font color="#E5E5E5"> it the</font><font color="#CCCCCC"> octopus</font>

807
00:35:25,319 --> 00:35:31,259
model<font color="#E5E5E5"> really very much in the line with</font>

808
00:35:29,400 --> 00:35:35,969
<font color="#E5E5E5">the</font><font color="#CCCCCC"> general natural design right each</font>

809
00:35:31,259 --> 00:35:37,739
process each process that you<font color="#CCCCCC"> spawn</font><font color="#E5E5E5"> the</font>

810
00:35:35,969 --> 00:35:39,869
agent could<font color="#E5E5E5"> be like an</font><font color="#CCCCCC"> independent or</font>

811
00:35:37,739 --> 00:35:45,239
subset to<font color="#E5E5E5"> the narrow and act like as</font>

812
00:35:39,869 --> 00:35:47,190
<font color="#CCCCCC">intended</font><font color="#E5E5E5"> that interact with that agent</font>

813
00:35:45,239 --> 00:35:49,019
receive messages<font color="#CCCCCC"> computing the messages</font>

814
00:35:47,190 --> 00:35:51,509
and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> messages adjust the connection</font>

815
00:35:49,019 --> 00:35:52,558
between the<font color="#CCCCCC"> neighbors right</font><font color="#E5E5E5"> this is the</font>

816
00:35:51,509 --> 00:35:57,660
best animation<font color="#CCCCCC"> I've</font><font color="#E5E5E5"> ever done in</font>

817
00:35:52,559 --> 00:36:01,579
PowerPoint very cool anyway so<font color="#E5E5E5"> I really</font>

818
00:35:57,660 --> 00:36:04,979
match one<font color="#CCCCCC"> to one</font><font color="#E5E5E5"> right and this is a</font>

819
00:36:01,579 --> 00:36:08,569
conceptual code and<font color="#E5E5E5"> actually so code</font>

820
00:36:04,979 --> 00:36:12,328
later<font color="#E5E5E5"> but the idea is that each neuron</font>

821
00:36:08,569 --> 00:36:14,670
<font color="#CCCCCC">have these</font><font color="#E5E5E5"> are state internally isolated</font>

822
00:36:12,329 --> 00:36:16,619
<font color="#E5E5E5">protected which is the connection which</font>

823
00:36:14,670 --> 00:36:18,809
now to<font color="#E5E5E5"> proprietary not just the weight</font>

824
00:36:16,619 --> 00:36:20,729
one is the weight of<font color="#E5E5E5"> course but one also</font>

825
00:36:18,809 --> 00:36:23,249
<font color="#E5E5E5">the connection of the next agent the</font>

826
00:36:20,729 --> 00:36:25,109
next level<font color="#E5E5E5"> right so whenever the agent</font>

827
00:36:23,249 --> 00:36:28,859
received all the<font color="#E5E5E5"> input we're gonna fire</font>

828
00:36:25,109 --> 00:36:30,869
up<font color="#CCCCCC"> to the next neuron</font><font color="#E5E5E5"> and hello you can</font>

829
00:36:28,859 --> 00:36:33,180
<font color="#CCCCCC">only see how the similarity like where</font>

830
00:36:30,869 --> 00:36:36,180
<font color="#CCCCCC">they near the process the electrical</font>

831
00:36:33,180 --> 00:36:38,940
signal<font color="#E5E5E5"> over over time instead the age is</font>

832
00:36:36,180 --> 00:36:42,058
idle and<font color="#E5E5E5"> a react to the input right</font>

833
00:36:38,940 --> 00:36:43,559
whenever<font color="#E5E5E5"> you send</font><font color="#CCCCCC"> a message and they</font>

834
00:36:42,059 --> 00:36:46,019
synapse<font color="#E5E5E5"> it the connection the narrows</font>

835
00:36:43,559 --> 00:36:48,479
well the agent<font color="#CCCCCC"> right</font><font color="#E5E5E5"> communicate your</font>

836
00:36:46,019 --> 00:36:52,890
message passing right we have the

837
00:36:48,479 --> 00:36:55,680
dendrites that collect the input and to

838
00:36:52,890 --> 00:36:57,629
fire to the next<font color="#E5E5E5"> fire the computational</font>

839
00:36:55,680 --> 00:37:00,209
sent to the next<font color="#E5E5E5"> neuron and the agent</font>

840
00:36:57,630 --> 00:37:04,049
Riley in<font color="#E5E5E5"> real-time update and broadcast</font>

841
00:37:00,209 --> 00:37:06,479
to<font color="#CCCCCC"> the other agent right so this</font><font color="#E5E5E5"> is</font>

842
00:37:04,049 --> 00:37:10,709
still<font color="#E5E5E5"> F sharp but ideally this is the</font>

843
00:37:06,479 --> 00:37:12,448
main the main idea is the<font color="#CCCCCC"> neuron the</font>

844
00:37:10,709 --> 00:37:15,149
agent with the<font color="#E5E5E5"> name errant</font><font color="#CCCCCC"> made easier</font>

845
00:37:12,449 --> 00:37:17,519
but now when you<font color="#CCCCCC"> create an errand you</font>

846
00:37:15,150 --> 00:37:20,670
<font color="#CCCCCC">just pass your bias and your weight and</font>

847
00:37:17,519 --> 00:37:21,930
the happier<font color="#E5E5E5"> layer layer of the</font>

848
00:37:20,670 --> 00:37:24,479
<font color="#E5E5E5">activation function</font><font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> pick up</font>

849
00:37:21,930 --> 00:37:26,489
but the idea<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> now they</font><font color="#CCCCCC"> these</font>

850
00:37:24,479 --> 00:37:28,890
<font color="#E5E5E5">bunch of narrow it can be like thousand</font>

851
00:37:26,489 --> 00:37:31,799
<font color="#E5E5E5">in your</font><font color="#CCCCCC"> machine because</font><font color="#E5E5E5"> very low memory</font>

852
00:37:28,890 --> 00:37:33,598
consumption because idle<font color="#E5E5E5"> we don't have</font>

853
00:37:31,799 --> 00:37:35,519
anything to do but<font color="#CCCCCC"> then synchronously</font>

854
00:37:33,599 --> 00:37:38,609
<font color="#CCCCCC">wait from</font><font color="#E5E5E5"> this input connection and</font>

855
00:37:35,519 --> 00:37:39,209
there are two state here<font color="#E5E5E5"> one when a</font>

856
00:37:38,609 --> 00:37:42,240
<font color="#CCCCCC">serum X</font>

857
00:37:39,210 --> 00:37:43,619
<font color="#E5E5E5">such</font><font color="#CCCCCC"> it check if the message matched the</font>

858
00:37:42,240 --> 00:37:45,209
number<font color="#CCCCCC"> of the previous</font><font color="#E5E5E5"> neighborhood</font>

859
00:37:43,619 --> 00:37:48,510
<font color="#CCCCCC">immediately receive all the input and</font>

860
00:37:45,210 --> 00:37:50,609
proceed<font color="#CCCCCC"> with</font><font color="#E5E5E5"> the computation otherwise I</font>

861
00:37:48,510 --> 00:37:52,380
paint the message<font color="#CCCCCC"> and</font><font color="#E5E5E5"> wait to receive</font>

862
00:37:50,609 --> 00:37:56,190
<font color="#CCCCCC">the next</font><font color="#E5E5E5"> one until you can receive all</font>

863
00:37:52,380 --> 00:37:58,349
the input<font color="#E5E5E5"> and ultimately when receive</font>

864
00:37:56,190 --> 00:38:00,480
all the input<font color="#E5E5E5"> applied the logic we saw</font>

865
00:37:58,349 --> 00:38:04,080
earlier<font color="#CCCCCC"> the</font><font color="#E5E5E5"> same one the dot product</font>

866
00:38:00,480 --> 00:38:06,000
plus bias and the output<font color="#E5E5E5"> fire applying</font>

867
00:38:04,080 --> 00:38:11,839
the<font color="#E5E5E5"> division function and broadcast the</font>

868
00:38:06,000 --> 00:38:14,070
message to all the neighbors question

869
00:38:11,839 --> 00:38:16,440
there's a lot to digest for Sunday

870
00:38:14,070 --> 00:38:27,960
morning<font color="#CCCCCC"> I know probably need a drink</font>

871
00:38:16,440 --> 00:38:33,570
right<font color="#E5E5E5"> all right let's do let's do a</font>

872
00:38:27,960 --> 00:38:36,150
quick a quick<font color="#E5E5E5"> demo that time so this is</font>

873
00:38:33,570 --> 00:38:41,310
the source code that<font color="#E5E5E5"> you can download</font>

874
00:38:36,150 --> 00:38:43,349
<font color="#E5E5E5">from github however as I</font><font color="#CCCCCC"> mentioned to</font>

875
00:38:41,310 --> 00:38:45,900
run the UI<font color="#E5E5E5"> you to run on Windows</font>

876
00:38:43,349 --> 00:38:48,630
otherwise you can run just<font color="#CCCCCC"> the you can</font>

877
00:38:45,900 --> 00:38:51,510
create your neural net or using this

878
00:38:48,630 --> 00:38:54,450
model quite easily any sort of<font color="#E5E5E5"> platform</font>

879
00:38:51,510 --> 00:38:58,230
what is<font color="#E5E5E5"> nice here is that it's designed</font>

880
00:38:54,450 --> 00:39:00,149
<font color="#CCCCCC">for the multi layer for one or network</font>

881
00:38:58,230 --> 00:39:01,560
and the sub map in here but you can

882
00:39:00,150 --> 00:39:04,530
create<font color="#E5E5E5"> your own and what I found</font>

883
00:39:01,560 --> 00:39:07,920
interesting<font color="#E5E5E5"> that is that now we have</font>

884
00:39:04,530 --> 00:39:09,839
this<font color="#CCCCCC"> idea that</font><font color="#E5E5E5"> your model start with</font>

885
00:39:07,920 --> 00:39:12,750
some neuron right and with original

886
00:39:09,839 --> 00:39:14,490
model<font color="#CCCCCC"> we start with like a multi multi</font>

887
00:39:12,750 --> 00:39:17,330
array or two multi-dimensional array

888
00:39:14,490 --> 00:39:20,759
<font color="#CCCCCC">when we start with your neural network</font>

889
00:39:17,330 --> 00:39:22,859
<font color="#E5E5E5">topology is our to add or stain other</font>

890
00:39:20,760 --> 00:39:26,220
neuron right<font color="#E5E5E5"> by this case you</font><font color="#CCCCCC"> cannot</font>

891
00:39:22,859 --> 00:39:28,200
<font color="#CCCCCC">only fly multiple agent right introduced</font>

892
00:39:26,220 --> 00:39:32,009
so the<font color="#E5E5E5"> control is quite nice</font><font color="#CCCCCC"> when you</font>

893
00:39:28,200 --> 00:39:35,009
test and<font color="#E5E5E5"> you create</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> neural network to</font>

894
00:39:32,010 --> 00:39:41,099
achieve<font color="#CCCCCC"> better</font><font color="#E5E5E5"> result so this is a let's</font>

895
00:39:35,010 --> 00:39:43,290
<font color="#E5E5E5">make a</font><font color="#CCCCCC"> bit bigger so this</font><font color="#E5E5E5"> is the source</font>

896
00:39:41,099 --> 00:39:45,810
code<font color="#E5E5E5"> that I will show in a slide</font><font color="#CCCCCC"> right</font>

897
00:39:43,290 --> 00:39:48,300
<font color="#E5E5E5">which is the neuron</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> applies some</font>

898
00:39:45,810 --> 00:39:51,720
<font color="#E5E5E5">weight for the connection and apply some</font>

899
00:39:48,300 --> 00:39:54,320
functionality<font color="#E5E5E5"> right we have some UI here</font>

900
00:39:51,720 --> 00:39:54,319
let's<font color="#E5E5E5"> start it</font>

901
00:39:55,370 --> 00:40:03,299
actually wait one second

902
00:39:57,420 --> 00:40:05,910
when you start here<font color="#CCCCCC"> you can you can set</font>

903
00:40:03,300 --> 00:40:08,400
the<font color="#CCCCCC"> number of Neverland</font><font color="#E5E5E5"> lair</font>

904
00:40:05,910 --> 00:40:09,990
so in this case I have<font color="#E5E5E5"> fortunately the</font>

905
00:40:08,400 --> 00:40:12,060
projector<font color="#E5E5E5"> doesn't have a great solution</font>

906
00:40:09,990 --> 00:40:15,990
<font color="#CCCCCC">so that's okay that's better</font>

907
00:40:12,060 --> 00:40:17,820
so this case<font color="#E5E5E5"> I add a layer with a feed</font>

908
00:40:15,990 --> 00:40:21,390
<font color="#E5E5E5">formal layer and I pass the number on</font>

909
00:40:17,820 --> 00:40:22,950
arrow which is<font color="#CCCCCC"> 4</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> I plus the default</font>

910
00:40:21,390 --> 00:40:26,460
<font color="#CCCCCC">adventure function which is a Sigma in</font>

911
00:40:22,950 --> 00:40:28,080
this case<font color="#E5E5E5"> I think I defined before in</font>

912
00:40:26,460 --> 00:40:30,510
the code here<font color="#CCCCCC"> and then add the other</font>

913
00:40:28,080 --> 00:40:33,060
layer<font color="#E5E5E5"> the third layer or</font><font color="#CCCCCC"> feed-forward</font>

914
00:40:30,510 --> 00:40:35,160
<font color="#CCCCCC">with the same Sigma</font><font color="#E5E5E5"> intubation function</font>

915
00:40:33,060 --> 00:40:37,410
here and<font color="#E5E5E5"> it's going to be a</font><font color="#CCCCCC"> four seven</font>

916
00:40:35,160 --> 00:40:48,629
<font color="#CCCCCC">eight three</font><font color="#E5E5E5"> layer</font><font color="#CCCCCC"> they don't like to</font>

917
00:40:37,410 --> 00:40:50,629
write yes<font color="#E5E5E5"> so when you you create a mini</font>

918
00:40:48,630 --> 00:40:53,070
layer here<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> will create a build</font>

919
00:40:50,630 --> 00:40:54,870
called build here<font color="#E5E5E5"> you create</font><font color="#CCCCCC"> a little</font>

920
00:40:53,070 --> 00:40:59,000
<font color="#E5E5E5">network for you and now</font><font color="#CCCCCC"> you can just</font>

921
00:40:54,870 --> 00:41:01,500
<font color="#CCCCCC">push input</font><font color="#E5E5E5"> the night or</font><font color="#CCCCCC"> Incred for you</font>

922
00:40:59,000 --> 00:41:05,640
and<font color="#E5E5E5"> i here</font><font color="#CCCCCC"> i comment but there are other</font>

923
00:41:01,500 --> 00:41:07,860
more complex<font color="#E5E5E5"> like like a five layer one</font>

924
00:41:05,640 --> 00:41:09,720
and then we have<font color="#E5E5E5"> another only two but</font>

925
00:41:07,860 --> 00:41:11,460
like you can<font color="#CCCCCC"> create any play with</font><font color="#E5E5E5"> this</font>

926
00:41:09,720 --> 00:41:13,560
right so when you create<font color="#CCCCCC"> your neural</font>

927
00:41:11,460 --> 00:41:15,840
network<font color="#CCCCCC"> there</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> no any</font><font color="#E5E5E5"> specific rule</font>

928
00:41:13,560 --> 00:41:19,770
how many narrow each layer<font color="#E5E5E5"> should have</font>

929
00:41:15,840 --> 00:41:22,470
right really based on your training

930
00:41:19,770 --> 00:41:25,620
very well you keep trying<font color="#E5E5E5"> until which</font>

931
00:41:22,470 --> 00:41:28,709
you better output<font color="#E5E5E5"> so in this case I have</font>

932
00:41:25,620 --> 00:41:30,960
the<font color="#CCCCCC"> classic example Dame iris set which</font>

933
00:41:28,710 --> 00:41:36,240
<font color="#CCCCCC">is a</font><font color="#E5E5E5"> hem study neural network what it</font>

934
00:41:30,960 --> 00:41:38,070
does it provide 150 training set ready

935
00:41:36,240 --> 00:41:40,500
with input value to<font color="#CCCCCC"> determine the type</font>

936
00:41:38,070 --> 00:41:42,990
of iris flower<font color="#E5E5E5"> based on the color the</font>

937
00:41:40,500 --> 00:41:49,580
petal whenever but the idea<font color="#E5E5E5"> here</font><font color="#CCCCCC"> is that</font>

938
00:41:42,990 --> 00:41:54,299
when we load the neural network here<font color="#E5E5E5"> as</font>

939
00:41:49,580 --> 00:41:58,759
part of the<font color="#E5E5E5"> training</font><font color="#CCCCCC"> we part we compose</font>

940
00:41:54,300 --> 00:42:02,220
<font color="#CCCCCC">and somewhere here we split the input in</font>

941
00:41:58,760 --> 00:42:06,120
<font color="#E5E5E5">8020 and we ran one generation</font><font color="#CCCCCC"> right</font>

942
00:42:02,220 --> 00:42:06,600
should we<font color="#E5E5E5"> run it okay so you can see</font>

943
00:42:06,120 --> 00:42:10,770
here

944
00:42:06,600 --> 00:42:14,279
there is some epic<font color="#CCCCCC"> zero one zero two ink</font>

945
00:42:10,770 --> 00:42:17,280
<font color="#CCCCCC">and</font><font color="#E5E5E5"> print also the error</font><font color="#CCCCCC"> and here are</font>

946
00:42:14,280 --> 00:42:20,070
our<font color="#E5E5E5"> four seven three</font><font color="#CCCCCC"> layer</font><font color="#E5E5E5"> received at</font>

947
00:42:17,280 --> 00:42:23,100
inside this<font color="#E5E5E5"> I'm not designer I mentioned</font>

948
00:42:20,070 --> 00:42:26,220
that<font color="#E5E5E5"> right the color pretty bad but a</font><font color="#CCCCCC"> it</font>

949
00:42:23,100 --> 00:42:28,860
keep updating the values right<font color="#E5E5E5"> so here I</font>

950
00:42:26,220 --> 00:42:32,640
done<font color="#CCCCCC"> only</font><font color="#E5E5E5"> fifty epic in for each</font><font color="#CCCCCC"> epic</font>

951
00:42:28,860 --> 00:42:39,390
actually Iran which<font color="#E5E5E5"> is 120 values</font>

952
00:42:32,640 --> 00:42:41,040
against<font color="#CCCCCC"> 30 right and in every</font><font color="#E5E5E5"> epic if</font><font color="#CCCCCC"> he</font>

953
00:42:39,390 --> 00:42:43,710
doesn't reach<font color="#CCCCCC"> the coolest see that that</font>

954
00:42:41,040 --> 00:42:45,509
was looking<font color="#E5E5E5"> for it reshuffle this value</font>

955
00:42:43,710 --> 00:42:48,900
<font color="#CCCCCC">a rerun on the</font><font color="#E5E5E5"> training right so in this</font>

956
00:42:45,510 --> 00:42:52,170
<font color="#E5E5E5">case</font><font color="#CCCCCC"> well I</font><font color="#E5E5E5"> ready for</font><font color="#CCCCCC"> you for</font><font color="#E5E5E5"> the back</font>

957
00:42:48,900 --> 00:42:55,380
so<font color="#E5E5E5"> you trust me but I</font><font color="#CCCCCC"> run</font><font color="#E5E5E5"> 50 epic in the</font>

958
00:42:52,170 --> 00:42:58,880
<font color="#CCCCCC">last 20 here the calculated</font><font color="#E5E5E5"> expected</font>

959
00:42:55,380 --> 00:43:01,890
value with the output and which is the

960
00:42:58,880 --> 00:43:06,270
calculated Delta and then<font color="#E5E5E5"> the</font><font color="#CCCCCC"> accuracy</font>

961
00:43:01,890 --> 00:43:08,580
is<font color="#CCCCCC"> 93</font><font color="#E5E5E5"> point 33 percent which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> okay it</font>

962
00:43:06,270 --> 00:43:10,500
<font color="#E5E5E5">should be better but again</font><font color="#CCCCCC"> I run only</font><font color="#E5E5E5"> 50</font>

963
00:43:08,580 --> 00:43:12,990
epic just for the sake of the demo<font color="#E5E5E5"> here</font>

964
00:43:10,500 --> 00:43:15,330
<font color="#E5E5E5">most</font><font color="#CCCCCC"> likely in the real case</font><font color="#E5E5E5"> you can run</font>

965
00:43:12,990 --> 00:43:17,399
multiple like<font color="#E5E5E5"> probably</font><font color="#CCCCCC"> couple hundred</font>

966
00:43:15,330 --> 00:43:21,779
probably change your<font color="#CCCCCC"> topology and so</font>

967
00:43:17,400 --> 00:43:24,600
forth<font color="#E5E5E5"> and here like the the regression</font>

968
00:43:21,780 --> 00:43:28,440
<font color="#E5E5E5">here to figure out</font><font color="#CCCCCC"> now the dots here are</font>

969
00:43:24,600 --> 00:43:30,270
the flower that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> putting in</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> is</font>

970
00:43:28,440 --> 00:43:32,400
input and this is<font color="#E5E5E5"> the line that</font>

971
00:43:30,270 --> 00:43:36,660
represent<font color="#E5E5E5"> your your output right so</font>

972
00:43:32,400 --> 00:43:45,020
they're<font color="#CCCCCC"> pretty</font><font color="#E5E5E5"> close quite nice any</font>

973
00:43:36,660 --> 00:43:45,020
question about this<font color="#E5E5E5"> part alright so</font>

974
00:43:45,080 --> 00:43:51,450
again<font color="#E5E5E5"> download the code here and play</font>

975
00:43:47,880 --> 00:43:55,020
with<font color="#CCCCCC"> the</font><font color="#E5E5E5"> code and take a look and let me</font>

976
00:43:51,450 --> 00:43:59,310
<font color="#CCCCCC">know if you any question</font><font color="#E5E5E5"> however less we</font>

977
00:43:55,020 --> 00:44:03,090
<font color="#E5E5E5">have 60 minutes so I</font><font color="#CCCCCC"> want to fly quickly</font>

978
00:43:59,310 --> 00:44:05,670
<font color="#CCCCCC">to the</font><font color="#E5E5E5"> MapReduce part and then the cool</font>

979
00:44:03,090 --> 00:44:07,350
part<font color="#CCCCCC"> the map the</font><font color="#E5E5E5"> self-organized map we</font>

980
00:44:05,670 --> 00:44:09,660
take<font color="#E5E5E5"> only</font><font color="#CCCCCC"> five minutes</font><font color="#E5E5E5"> but it's very</font>

981
00:44:07,350 --> 00:44:12,750
<font color="#CCCCCC">cool that</font><font color="#E5E5E5"> part so bear with me so first</font>

982
00:44:09,660 --> 00:44:16,379
of all agent was a failure<font color="#CCCCCC"> what do you</font>

983
00:44:12,750 --> 00:44:17,760
think so<font color="#CCCCCC"> RAM locally</font><font color="#E5E5E5"> I add extra</font>

984
00:44:16,380 --> 00:44:19,970
<font color="#E5E5E5">overhead in your local machine of course</font>

985
00:44:17,760 --> 00:44:21,800
<font color="#CCCCCC">so most</font><font color="#E5E5E5"> likely gonna</font>

986
00:44:19,970 --> 00:44:23,959
use the<font color="#E5E5E5"> next approach that are going</font><font color="#CCCCCC"> to</font>

987
00:44:21,800 --> 00:44:25,609
show but again if you build Skynet<font color="#CCCCCC"> and</font>

988
00:44:23,960 --> 00:44:27,920
<font color="#E5E5E5">you want to see with</font><font color="#CCCCCC"> the work across</font>

989
00:44:25,609 --> 00:44:30,440
motivation for a super large neural

990
00:44:27,920 --> 00:44:37,190
network<font color="#E5E5E5"> definitely this is</font><font color="#CCCCCC"> the way you</font>

991
00:44:30,440 --> 00:44:38,930
<font color="#E5E5E5">want to do it so when I parallel</font>

992
00:44:37,190 --> 00:44:41,810
computing<font color="#E5E5E5"> as I mentioned here now later</font>

993
00:44:38,930 --> 00:44:44,089
is a all narrow connecting each other

994
00:44:41,810 --> 00:44:47,509
line<font color="#E5E5E5"> and in this case we have like about</font>

995
00:44:44,090 --> 00:44:48,080
500 connection and they can grow quite

996
00:44:47,510 --> 00:44:49,640
quickly

997
00:44:48,080 --> 00:44:53,359
like<font color="#E5E5E5"> for instance if you add one neuron</font>

998
00:44:49,640 --> 00:44:56,270
<font color="#CCCCCC">you generate 19 new connection</font><font color="#E5E5E5"> right so</font>

999
00:44:53,359 --> 00:44:59,598
they can explode in in the number<font color="#CCCCCC"> of</font>

1000
00:44:56,270 --> 00:45:01,910
connection<font color="#CCCCCC"> so the training especially is</font>

1001
00:44:59,599 --> 00:45:04,910
<font color="#E5E5E5">the more heavy computation and that's</font>

1002
00:45:01,910 --> 00:45:07,160
when you try to make<font color="#CCCCCC"> it faster right</font>

1003
00:45:04,910 --> 00:45:11,149
especially<font color="#E5E5E5"> if you remember for the</font>

1004
00:45:07,160 --> 00:45:13,549
previous<font color="#CCCCCC"> slide slide I was showing these</font>

1005
00:45:11,150 --> 00:45:14,869
<font color="#E5E5E5">just a bunch of</font><font color="#CCCCCC"> 4h right so how are you</font>

1006
00:45:13,550 --> 00:45:18,080
<font color="#CCCCCC">going to</font><font color="#E5E5E5"> penalize that how you gonna</font>

1007
00:45:14,869 --> 00:45:20,150
make<font color="#CCCCCC"> it faster</font><font color="#E5E5E5"> well as a</font><font color="#CCCCCC"> convention</font><font color="#E5E5E5"> here</font>

1008
00:45:18,080 --> 00:45:21,740
<font color="#E5E5E5">you can consider</font><font color="#CCCCCC"> it like</font><font color="#E5E5E5"> narrator as</font>

1009
00:45:20,150 --> 00:45:24,140
<font color="#E5E5E5">embarrassed a part of this so is</font><font color="#CCCCCC"> this to</font>

1010
00:45:21,740 --> 00:45:26,419
<font color="#CCCCCC">paralyze however there are two</font><font color="#E5E5E5"> values</font>

1011
00:45:24,140 --> 00:45:28,520
<font color="#CCCCCC">that you have to</font><font color="#E5E5E5"> consider one is</font><font color="#CCCCCC"> the</font>

1012
00:45:26,420 --> 00:45:30,050
epoch which<font color="#E5E5E5"> is I mentioned the number</font><font color="#CCCCCC"> of</font>

1013
00:45:28,520 --> 00:45:32,810
the time you're<font color="#E5E5E5"> gonna run</font><font color="#CCCCCC"> in training</font>

1014
00:45:30,050 --> 00:45:35,300
your your your model<font color="#E5E5E5"> and the other one</font>

1015
00:45:32,810 --> 00:45:38,900
is the learning rate<font color="#E5E5E5"> which affect the</font>

1016
00:45:35,300 --> 00:45:41,540
<font color="#CCCCCC">magnitude of the Delta value to add to</font>

1017
00:45:38,900 --> 00:45:43,820
the weight update the weight right so a

1018
00:45:41,540 --> 00:45:45,920
large value<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> linear rate</font><font color="#E5E5E5"> create</font>

1019
00:45:43,820 --> 00:45:48,230
<font color="#CCCCCC">also a large Delta</font><font color="#E5E5E5"> which is just the</font>

1020
00:45:45,920 --> 00:45:50,599
weight faster is faster<font color="#E5E5E5"> but most likely</font>

1021
00:45:48,230 --> 00:45:53,780
<font color="#E5E5E5">you won't have</font><font color="#CCCCCC"> a precise neural network</font>

1022
00:45:50,599 --> 00:45:55,520
right and you<font color="#E5E5E5"> might probably something</font>

1023
00:45:53,780 --> 00:45:58,820
called overshooting your<font color="#CCCCCC"> your weight</font>

1024
00:45:55,520 --> 00:46:01,880
right<font color="#CCCCCC"> on the other side if you use a</font>

1025
00:45:58,820 --> 00:46:04,339
lower learning<font color="#E5E5E5"> rate well your mother</font>

1026
00:46:01,880 --> 00:46:08,330
going<font color="#E5E5E5"> to be more precise by going to</font>

1027
00:46:04,339 --> 00:46:13,970
take<font color="#CCCCCC"> no</font><font color="#E5E5E5"> longer to to</font><font color="#CCCCCC"> Train here just for</font>

1028
00:46:08,330 --> 00:46:15,200
the sake the the first the<font color="#CCCCCC"> third and the</font>

1029
00:46:13,970 --> 00:46:17,359
third<font color="#E5E5E5"> the fourth line</font><font color="#CCCCCC"> of code</font><font color="#E5E5E5"> actually</font>

1030
00:46:15,200 --> 00:46:19,160
<font color="#E5E5E5">are they</font><font color="#CCCCCC"> the slide</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> show</font>

1031
00:46:17,359 --> 00:46:21,680
previously with<font color="#CCCCCC"> the computer output and</font>

1032
00:46:19,160 --> 00:46:24,200
then calculate<font color="#E5E5E5"> the error or your output</font>

1033
00:46:21,680 --> 00:46:27,140
and the rest of the code apply backward

1034
00:46:24,200 --> 00:46:31,669
<font color="#CCCCCC">they adjust with</font><font color="#E5E5E5"> the weight with a delta</font>

1035
00:46:27,140 --> 00:46:33,660
<font color="#CCCCCC">that you compute alright so here we</font><font color="#E5E5E5"> can</font>

1036
00:46:31,670 --> 00:46:37,859
you know just<font color="#E5E5E5"> as a</font>

1037
00:46:33,660 --> 00:46:40,019
idea you can just<font color="#E5E5E5"> paralyze all these for</font>

1038
00:46:37,859 --> 00:46:41,910
each loop quite easily<font color="#CCCCCC"> especially in the</font>

1039
00:46:40,019 --> 00:46:47,308
router<font color="#E5E5E5"> language they provide the support</font>

1040
00:46:41,910 --> 00:46:49,649
and this<font color="#E5E5E5"> is actually a general graphic</font>

1041
00:46:47,309 --> 00:46:52,410
processing unit work<font color="#E5E5E5"> right you can spawn</font>

1042
00:46:49,650 --> 00:46:56,369
<font color="#E5E5E5">like</font><font color="#CCCCCC"> I ever around the same detest in a</font>

1043
00:46:52,410 --> 00:47:03,410
in a separate hardware which is African

1044
00:46:56,369 --> 00:47:06,900
ambassador 192<font color="#CCCCCC"> micros corner</font><font color="#E5E5E5"> GPU and</font>

1045
00:47:03,410 --> 00:47:08,700
definitely from like few second to<font color="#CCCCCC"> semi</font>

1046
00:47:06,900 --> 00:47:11,190
<font color="#CCCCCC">mode it was like almost real-time</font><font color="#E5E5E5"> right</font>

1047
00:47:08,700 --> 00:47:13,730
<font color="#E5E5E5">but really can paralyze quite easily and</font>

1048
00:47:11,190 --> 00:47:17,279
you think<font color="#CCCCCC"> about</font><font color="#E5E5E5"> it the reason is because</font>

1049
00:47:13,730 --> 00:47:19,380
<font color="#E5E5E5">you can map the neural network design</font>

1050
00:47:17,279 --> 00:47:21,869
pattern here<font color="#E5E5E5"> with something very much</font>

1051
00:47:19,380 --> 00:47:23,910
<font color="#CCCCCC">familiar</font><font color="#E5E5E5"> I wave</font><font color="#CCCCCC"> input some process some</font>

1052
00:47:21,869 --> 00:47:27,000
process and process<font color="#CCCCCC"> and</font><font color="#E5E5E5"> some output</font>

1053
00:47:23,910 --> 00:47:30,000
right so in each layer<font color="#E5E5E5"> represent pretty</font>

1054
00:47:27,000 --> 00:47:33,660
much your computation<font color="#E5E5E5"> am i familiar with</font>

1055
00:47:30,000 --> 00:47:37,680
the<font color="#E5E5E5"> MapReduce welcome</font><font color="#CCCCCC"> know quite popular</font>

1056
00:47:33,660 --> 00:47:41,460
in switching from<font color="#E5E5E5"> google that publishes</font>

1057
00:47:37,680 --> 00:47:46,078
the paper<font color="#E5E5E5"> in 2004 anyways it's the idea</font>

1058
00:47:41,460 --> 00:47:48,619
that<font color="#E5E5E5"> we can partition a set of operation</font>

1059
00:47:46,079 --> 00:47:51,210
in multiple operations running<font color="#E5E5E5"> parallel</font>

1060
00:47:48,619 --> 00:47:53,039
MapReduce but most likely<font color="#E5E5E5"> it just</font>

1061
00:47:51,210 --> 00:47:55,829
MapReduce<font color="#CCCCCC"> in the real</font><font color="#E5E5E5"> world can be like</font>

1062
00:47:53,039 --> 00:47:58,769
filter<font color="#E5E5E5"> group by again filter</font><font color="#CCCCCC"> came up</font><font color="#E5E5E5"> so</font>

1063
00:47:55,829 --> 00:48:01,319
it can<font color="#E5E5E5"> be different kind of steps but</font>

1064
00:47:58,769 --> 00:48:02,879
ideally<font color="#E5E5E5"> and this is the</font><font color="#CCCCCC"> rest am gonna</font>

1065
00:48:01,319 --> 00:48:04,710
<font color="#CCCCCC">glass over but to give</font><font color="#E5E5E5"> you the</font><font color="#CCCCCC"> idea</font><font color="#E5E5E5"> how</font>

1066
00:48:02,880 --> 00:48:07,529
<font color="#CCCCCC">you can create</font><font color="#E5E5E5"> your function this case</font>

1067
00:48:04,710 --> 00:48:09,390
the map<font color="#CCCCCC"> function that is also F sharp</font>

1068
00:48:07,529 --> 00:48:11,460
just to<font color="#E5E5E5"> running parallels and sort of</font>

1069
00:48:09,390 --> 00:48:14,490
projection<font color="#CCCCCC"> and get some</font><font color="#E5E5E5"> data you pass</font>

1070
00:48:11,460 --> 00:48:18,470
into<font color="#CCCCCC"> it</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> reduced function</font><font color="#E5E5E5"> okay also</font>

1071
00:48:14,490 --> 00:48:20,939
this running parallel<font color="#E5E5E5"> and then as I was</font>

1072
00:48:18,470 --> 00:48:23,819
<font color="#CCCCCC">showing earlier</font><font color="#E5E5E5"> we can compose this</font>

1073
00:48:20,940 --> 00:48:28,980
function<font color="#CCCCCC"> together right and you remember</font>

1074
00:48:23,819 --> 00:48:32,069
from the previous<font color="#CCCCCC"> slide</font><font color="#E5E5E5"> when we create</font>

1075
00:48:28,980 --> 00:48:35,670
our neural network<font color="#CCCCCC"> we just</font><font color="#E5E5E5"> six</font><font color="#CCCCCC"> line of</font>

1076
00:48:32,069 --> 00:48:37,829
code we compose the function to create

1077
00:48:35,670 --> 00:48:39,869
<font color="#E5E5E5">your neural network</font><font color="#CCCCCC"> and the same apply</font>

1078
00:48:37,829 --> 00:48:42,480
here<font color="#CCCCCC"> also</font><font color="#E5E5E5"> from a produced so quite</font>

1079
00:48:39,869 --> 00:48:44,819
easily you can paralyze each step of the

1080
00:48:42,480 --> 00:48:45,950
computation<font color="#CCCCCC"> and to have like</font><font color="#E5E5E5"> writing</font>

1081
00:48:44,819 --> 00:48:51,279
fast

1082
00:48:45,950 --> 00:48:53,359
result<font color="#E5E5E5"> especially</font><font color="#CCCCCC"> when you run in a</font>

1083
00:48:51,280 --> 00:48:55,640
clustering<font color="#CCCCCC"> when</font><font color="#E5E5E5"> you see</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> work on your</font>

1084
00:48:53,359 --> 00:48:58,060
<font color="#E5E5E5">network in different machine you can</font>

1085
00:48:55,640 --> 00:49:01,060
paralyze<font color="#CCCCCC"> in each independent machine</font>

1086
00:48:58,060 --> 00:49:06,140
that<font color="#E5E5E5"> subset within the neural network</font>

1087
00:49:01,060 --> 00:49:08,810
<font color="#CCCCCC">alright so lastly</font><font color="#E5E5E5"> slide and then they</font>

1088
00:49:06,140 --> 00:49:10,609
are the cool demo here so talk<font color="#CCCCCC"> about</font>

1089
00:49:08,810 --> 00:49:12,799
quick about the unsupervised training

1090
00:49:10,609 --> 00:49:15,380
right<font color="#E5E5E5"> which is quite common technique is</font>

1091
00:49:12,800 --> 00:49:18,410
this<font color="#E5E5E5"> is called</font><font color="#CCCCCC"> actually self-organizing</font>

1092
00:49:15,380 --> 00:49:20,329
map<font color="#E5E5E5"> in this case we're talking about the</font>

1093
00:49:18,410 --> 00:49:21,740
famous<font color="#CCCCCC"> traveling</font><font color="#E5E5E5"> salesmen problem</font><font color="#CCCCCC"> anyone</font>

1094
00:49:20,329 --> 00:49:24,940
familiar<font color="#E5E5E5"> with traveling such my problem</font>

1095
00:49:21,740 --> 00:49:26,930
<font color="#CCCCCC">alright if you had you just wake up good</font>

1096
00:49:24,940 --> 00:49:29,030
<font color="#E5E5E5">all right</font>

1097
00:49:26,930 --> 00:49:31,368
and the idea is<font color="#CCCCCC"> that the</font><font color="#E5E5E5"> neural</font><font color="#CCCCCC"> entry</font>

1098
00:49:29,030 --> 00:49:36,260
<font color="#E5E5E5">street is a</font><font color="#CCCCCC"> two-dimensional map of nodes</font>

1099
00:49:31,369 --> 00:49:38,660
<font color="#E5E5E5">right actually</font><font color="#CCCCCC"> turned out that the</font>

1100
00:49:36,260 --> 00:49:40,550
travel in such problem is<font color="#E5E5E5"> using in it's</font>

1101
00:49:38,660 --> 00:49:45,109
<font color="#E5E5E5">not just like a fun algorithm to build</font>

1102
00:49:40,550 --> 00:49:48,040
by<font color="#E5E5E5"> Zeus like in how to determine the</font>

1103
00:49:45,109 --> 00:49:50,180
<font color="#E5E5E5">predict the protein function and in a</font>

1104
00:49:48,040 --> 00:49:53,540
synchronous processes which is a quite

1105
00:49:50,180 --> 00:49:55,390
<font color="#CCCCCC">interesting but</font><font color="#E5E5E5"> anyways so</font><font color="#CCCCCC"> I don't know</font>

1106
00:49:53,540 --> 00:49:57,890
if you see you see the animation about

1107
00:49:55,390 --> 00:50:00,348
so at first the trauma assessment

1108
00:49:57,890 --> 00:50:03,710
problem<font color="#E5E5E5"> seems easy problem it means is</font>

1109
00:50:00,349 --> 00:50:05,470
easy to<font color="#E5E5E5"> solve right</font><font color="#CCCCCC"> however</font><font color="#E5E5E5"> the bigger</font>

1110
00:50:03,710 --> 00:50:11,119
the number the city

1111
00:50:05,470 --> 00:50:12,980
the bigger the the combinational web

1112
00:50:11,119 --> 00:50:15,200
right so you cannot just brute force

1113
00:50:12,980 --> 00:50:16,970
<font color="#E5E5E5">like you have</font><font color="#CCCCCC"> to city most likely at one</font>

1114
00:50:15,200 --> 00:50:19,549
part<font color="#E5E5E5"> that's fine fine City</font>

1115
00:50:16,970 --> 00:50:21,980
hundred<font color="#E5E5E5"> twenty five but if you like ten</font>

1116
00:50:19,550 --> 00:50:24,230
city<font color="#CCCCCC"> you're almost</font><font color="#E5E5E5"> like four million</font>

1117
00:50:21,980 --> 00:50:27,440
different kind so if you're like in this

1118
00:50:24,230 --> 00:50:29,000
case the demo think is a<font color="#E5E5E5"> hundred city it</font>

1119
00:50:27,440 --> 00:50:32,270
<font color="#CCCCCC">gonna probably take years</font><font color="#E5E5E5"> to calculate</font>

1120
00:50:29,000 --> 00:50:34,700
you know<font color="#E5E5E5"> the output</font><font color="#CCCCCC"> and the best</font><font color="#E5E5E5"> output</font>

1121
00:50:32,270 --> 00:50:36,440
<font color="#E5E5E5">so in this case neural network provides</font>

1122
00:50:34,700 --> 00:50:41,089
a great solution right we treat neurons

1123
00:50:36,440 --> 00:50:43,280
<font color="#E5E5E5">as a</font><font color="#CCCCCC"> two-dimensional layer node and what</font>

1124
00:50:41,089 --> 00:50:45,259
would you do with the diet is start<font color="#CCCCCC"> and</font>

1125
00:50:43,280 --> 00:50:48,109
<font color="#CCCCCC">nollette with a ring actually and during</font>

1126
00:50:45,260 --> 00:50:50,180
the learning<font color="#E5E5E5"> procedure</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> change the</font>

1127
00:50:48,109 --> 00:50:52,819
shape of the ring and figure<font color="#CCCCCC"> out how</font><font color="#E5E5E5"> to</font>

1128
00:50:50,180 --> 00:50:57,109
touch the<font color="#E5E5E5"> other city and create for you</font>

1129
00:50:52,819 --> 00:50:59,840
the mark and of course

1130
00:50:57,110 --> 00:51:02,000
again I'm a paper<font color="#CCCCCC"> junkie I found this</font>

1131
00:50:59,840 --> 00:51:06,860
paper was awesome they'd say well you

1132
00:51:02,000 --> 00:51:08,510
know<font color="#CCCCCC"> back here you have these these are</font>

1133
00:51:06,860 --> 00:51:10,700
this algorithm<font color="#E5E5E5"> but how</font><font color="#CCCCCC"> you're gonna make</font>

1134
00:51:08,510 --> 00:51:13,730
<font color="#CCCCCC">it faster right good that's my</font>

1135
00:51:10,700 --> 00:51:15,770
background<font color="#CCCCCC"> so</font><font color="#E5E5E5"> I say well let's</font><font color="#CCCCCC"> start</font>

1136
00:51:13,730 --> 00:51:17,240
implemented this paper in something

1137
00:51:15,770 --> 00:51:20,090
that's<font color="#E5E5E5"> familiar in code right and</font>

1138
00:51:17,240 --> 00:51:25,220
<font color="#E5E5E5">approach really divide the</font><font color="#CCCCCC"> compare the</font>

1139
00:51:20,090 --> 00:51:28,160
city<font color="#E5E5E5"> in in section and what it does is a</font>

1140
00:51:25,220 --> 00:51:31,189
user clustering which is again neural

1141
00:51:28,160 --> 00:51:34,990
network cluster<font color="#E5E5E5"> and group the city in</font>

1142
00:51:31,190 --> 00:51:37,820
communities<font color="#E5E5E5"> and then apply the same</font>

1143
00:51:34,990 --> 00:51:39,919
solution for each<font color="#E5E5E5"> community</font><font color="#CCCCCC"> and then</font>

1144
00:51:37,820 --> 00:51:41,750
ultimately<font color="#E5E5E5"> use something called a blind</font>

1145
00:51:39,920 --> 00:51:44,110
function they call it to put all the

1146
00:51:41,750 --> 00:51:46,790
solution together<font color="#CCCCCC"> which is quite nice so</font>

1147
00:51:44,110 --> 00:51:48,910
<font color="#E5E5E5">let's run the</font><font color="#CCCCCC"> demo here</font><font color="#E5E5E5"> which is pretty</font>

1148
00:51:46,790 --> 00:51:48,910
<font color="#E5E5E5">cool</font>

1149
00:51:48,940 --> 00:51:54,790
let's close this guy here<font color="#E5E5E5"> any question</font>

1150
00:51:56,950 --> 00:52:01,609
I'm not going<font color="#E5E5E5"> to show the code but the</font>

1151
00:51:59,150 --> 00:52:03,380
same same idea was building the

1152
00:52:01,610 --> 00:52:06,650
nato-russia lays agent and communicate

1153
00:52:03,380 --> 00:52:08,810
so the hundred<font color="#E5E5E5"> city probably gonna</font>

1154
00:52:06,650 --> 00:52:15,910
create<font color="#CCCCCC"> a</font><font color="#E5E5E5"> hundred</font><font color="#CCCCCC"> feet to 20 city here</font>

1155
00:52:08,810 --> 00:52:15,910
they write<font color="#CCCCCC"> 200 different</font><font color="#E5E5E5"> agent</font><font color="#CCCCCC"> oh boy</font>

1156
00:52:16,180 --> 00:52:23,779
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> terminate here no let's close it</font>

1157
00:52:21,770 --> 00:52:35,270
try<font color="#E5E5E5"> it again don't</font><font color="#CCCCCC"> give up on me this</font>

1158
00:52:23,780 --> 00:52:36,700
<font color="#E5E5E5">actually is pretty cool</font><font color="#CCCCCC"> ok it's getting</font>

1159
00:52:35,270 --> 00:52:40,460
better it's getting<font color="#CCCCCC"> better</font>

1160
00:52:36,700 --> 00:52:41,089
<font color="#E5E5E5">ok it's not a symbol</font><font color="#CCCCCC"> symbol</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> all</font>

1161
00:52:40,460 --> 00:52:43,430
<font color="#E5E5E5">right cool</font>

1162
00:52:41,090 --> 00:52:47,750
let me take a bigger we<font color="#E5E5E5"> have</font><font color="#CCCCCC"> a hundred</font>

1163
00:52:43,430 --> 00:52:49,580
<font color="#CCCCCC">city</font><font color="#E5E5E5"> twenty five hundred twenty-five</font>

1164
00:52:47,750 --> 00:52:53,720
thousand iteration and<font color="#E5E5E5"> we have four</font>

1165
00:52:49,580 --> 00:52:55,580
hundred<font color="#E5E5E5"> neurons right so</font><font color="#CCCCCC"> Alice's work</font>

1166
00:52:53,720 --> 00:52:56,990
<font color="#E5E5E5">I'm sure this model created one layer of</font>

1167
00:52:55,580 --> 00:53:00,310
<font color="#CCCCCC">four hundred neighbor</font><font color="#E5E5E5"> which is quite</font>

1168
00:52:56,990 --> 00:53:05,060
large<font color="#E5E5E5"> right so let's build actually</font>

1169
00:53:00,310 --> 00:53:06,740
<font color="#E5E5E5">let's put</font><font color="#CCCCCC"> 150</font><font color="#E5E5E5"> and let's put like</font><font color="#CCCCCC"> seven</font>

1170
00:53:05,060 --> 00:53:08,299
<font color="#CCCCCC">hundred me or why not and</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> alive</font><font color="#E5E5E5"> so</font>

1171
00:53:06,740 --> 00:53:10,129
a more<font color="#CCCCCC"> city here</font><font color="#E5E5E5"> let's start with the</font>

1172
00:53:08,300 --> 00:53:11,869
classic<font color="#E5E5E5"> approach right</font>

1173
00:53:10,130 --> 00:53:13,579
so you can see<font color="#E5E5E5"> it's called all the lines</font>

1174
00:53:11,869 --> 00:53:15,859
then instead to find the best solution I

1175
00:53:13,579 --> 00:53:18,170
have iteration that's getting better<font color="#CCCCCC"> and</font>

1176
00:53:15,859 --> 00:53:21,109
<font color="#CCCCCC">better it is</font><font color="#E5E5E5"> self training</font><font color="#CCCCCC"> okay right</font>

1177
00:53:18,170 --> 00:53:25,579
<font color="#E5E5E5">now so you figure out the how touch the</font>

1178
00:53:21,109 --> 00:53:29,480
city and adjust the d-pad on on a fly<font color="#CCCCCC"> so</font>

1179
00:53:25,579 --> 00:53:31,759
this is quite quite nice<font color="#CCCCCC"> but</font><font color="#E5E5E5"> of course</font>

1180
00:53:29,480 --> 00:53:36,640
this is a can be penalized<font color="#E5E5E5"> so let's make</font>

1181
00:53:31,759 --> 00:53:39,289
<font color="#CCCCCC">to cluster</font><font color="#E5E5E5"> this took like six point</font>

1182
00:53:36,640 --> 00:53:42,470
sixty eight hundred millisecond<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> I</font>

1183
00:53:39,289 --> 00:53:44,660
put<font color="#CCCCCC"> two cluster here let's start</font><font color="#E5E5E5"> with a</font>

1184
00:53:42,470 --> 00:53:48,049
traditional<font color="#CCCCCC"> about</font><font color="#E5E5E5"> the parallel way that</font>

1185
00:53:44,660 --> 00:53:50,660
split the<font color="#E5E5E5"> work into you can see okay</font><font color="#CCCCCC"> and</font>

1186
00:53:48,049 --> 00:53:53,538
then use<font color="#E5E5E5"> the blend it took twenty six</font>

1187
00:53:50,660 --> 00:53:56,118
hundred millisecond which is less than

1188
00:53:53,539 --> 00:53:59,450
enough<font color="#E5E5E5"> right let's make</font><font color="#CCCCCC"> four cluster</font>

1189
00:53:56,119 --> 00:54:01,220
here okay

1190
00:53:59,450 --> 00:54:02,509
it took twelve hundred millisecond the

1191
00:54:01,220 --> 00:54:04,308
blend function is not perfect there's

1192
00:54:02,509 --> 00:54:06,740
some time work<font color="#E5E5E5"> better than another but</font>

1193
00:54:04,309 --> 00:54:09,200
<font color="#E5E5E5">you know that's how my interpret my the</font>

1194
00:54:06,740 --> 00:54:11,269
paper however<font color="#CCCCCC"> what I wanna show here</font>

1195
00:54:09,200 --> 00:54:14,240
what is<font color="#E5E5E5"> interesting let's</font><font color="#CCCCCC"> insuline</font><font color="#E5E5E5"> they</font>

1196
00:54:11,269 --> 00:54:17,240
put zero iteration here<font color="#E5E5E5"> so the</font>

1197
00:54:14,240 --> 00:54:23,959
traditional way<font color="#E5E5E5"> that work at zero</font>

1198
00:54:17,240 --> 00:54:26,899
iteration is really oh<font color="#E5E5E5"> okay at zero</font>

1199
00:54:23,960 --> 00:54:29,690
iteration<font color="#E5E5E5"> only true on a map</font><font color="#CCCCCC"> a bunch of</font>

1200
00:54:26,900 --> 00:54:32,569
line<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> from there try</font><font color="#CCCCCC"> to remove</font>

1201
00:54:29,690 --> 00:54:38,390
<font color="#E5E5E5">what</font><font color="#CCCCCC"> is the correct</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> the iteration</font>

1202
00:54:32,569 --> 00:54:42,529
a bunch of line one one iteration get

1203
00:54:38,390 --> 00:54:44,690
better<font color="#E5E5E5"> and so</font><font color="#CCCCCC"> for right however they the</font>

1204
00:54:42,529 --> 00:54:48,049
<font color="#E5E5E5">self map</font><font color="#CCCCCC"> organized</font><font color="#E5E5E5"> work in a very smart</font>

1205
00:54:44,690 --> 00:54:50,630
<font color="#CCCCCC">marked way in</font><font color="#E5E5E5"> this case it created zero</font>

1206
00:54:48,049 --> 00:54:52,730
iteration I put<font color="#CCCCCC"> 0 it creates a circle</font>

1207
00:54:50,630 --> 00:54:55,880
<font color="#CCCCCC">okay I</font><font color="#E5E5E5"> try to figure out how to touch</font>

1208
00:54:52,730 --> 00:54:59,119
the city in this map with one iteration

1209
00:54:55,880 --> 00:55:00,710
<font color="#E5E5E5">here it gonna change</font><font color="#CCCCCC"> the shape like</font><font color="#E5E5E5"> oval</font>

1210
00:54:59,119 --> 00:55:04,970
going to be one side<font color="#E5E5E5"> when I touch one</font>

1211
00:55:00,710 --> 00:55:07,579
<font color="#E5E5E5">city okay and then the second iteration</font>

1212
00:55:04,970 --> 00:55:09,410
here<font color="#E5E5E5"> are going to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> one on the one</font><font color="#CCCCCC"> or</font>

1213
00:55:07,579 --> 00:55:12,170
the<font color="#E5E5E5"> other three side of the circle try</font>

1214
00:55:09,410 --> 00:55:16,038
to found another city well that's<font color="#E5E5E5"> not</font>

1215
00:55:12,170 --> 00:55:20,660
really<font color="#CCCCCC"> anyways</font><font color="#E5E5E5"> so let's</font><font color="#CCCCCC"> go three here so</font>

1216
00:55:16,039 --> 00:55:23,520
<font color="#CCCCCC">very much different</font><font color="#E5E5E5"> kind of strategy how</font>

1217
00:55:20,660 --> 00:55:26,770
<font color="#E5E5E5">to apply between the two</font>

1218
00:55:23,520 --> 00:55:34,150
<font color="#CCCCCC">approaches like one</font><font color="#E5E5E5"> user narrow</font><font color="#CCCCCC"> network</font>

1219
00:55:26,770 --> 00:55:36,029
one use k-means clustering here so let's

1220
00:55:34,150 --> 00:55:39,369
<font color="#CCCCCC">political any question about</font><font color="#E5E5E5"> this part</font><font color="#CCCCCC"> i</font>

1221
00:55:36,029 --> 00:55:41,410
recommend actually<font color="#E5E5E5"> to read the paper</font>

1222
00:55:39,369 --> 00:55:43,480
<font color="#CCCCCC">i'm also almost over time actually</font><font color="#E5E5E5"> i'm</font>

1223
00:55:41,410 --> 00:55:45,848
over<font color="#E5E5E5"> time so what</font><font color="#CCCCCC"> i want to</font><font color="#E5E5E5"> show here</font>

1224
00:55:43,480 --> 00:55:49,270
just the link will you get the code

1225
00:55:45,849 --> 00:55:51,390
<font color="#E5E5E5">the</font><font color="#CCCCCC"> takeaway</font><font color="#E5E5E5"> just it's</font><font color="#CCCCCC"> awesome that's</font>

1226
00:55:49,270 --> 00:55:54,910
all I got

1227
00:55:51,390 --> 00:55:56,950
this is the link where you can get my

1228
00:55:54,910 --> 00:55:59,348
<font color="#CCCCCC">information here actually the source</font>

1229
00:55:56,950 --> 00:56:02,109
code<font color="#E5E5E5"> there are two</font><font color="#CCCCCC"> version one is in</font>

1230
00:55:59,349 --> 00:56:03,760
workshop you can<font color="#CCCCCC"> download it</font><font color="#E5E5E5"> Ashley you</font>

1231
00:56:02,109 --> 00:56:05,348
can fold<font color="#E5E5E5"> the step to build</font><font color="#CCCCCC"> yourself a</font>

1232
00:56:03,760 --> 00:56:07,510
neural network<font color="#E5E5E5"> and the other one is a</font>

1233
00:56:05,349 --> 00:56:07,839
complete<font color="#E5E5E5"> solution so you can play why</font>

1234
00:56:07,510 --> 00:56:13,720
not

1235
00:56:07,839 --> 00:56:16,359
but question<font color="#CCCCCC"> this</font><font color="#E5E5E5"> I know was a deep talk</font>

1236
00:56:13,720 --> 00:56:17,078
for a Sunday morning<font color="#CCCCCC"> I</font><font color="#E5E5E5"> have the big</font>

1237
00:56:16,359 --> 00:56:20,740
<font color="#CCCCCC">party last night</font>

1238
00:56:17,079 --> 00:56:22,599
but I<font color="#E5E5E5"> open that</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> you enjoy it probably</font>

1239
00:56:20,740 --> 00:56:24,308
take home some good information and

1240
00:56:22,599 --> 00:56:25,869
motivated<font color="#E5E5E5"> to try and build your neural</font>

1241
00:56:24,309 --> 00:56:28,780
<font color="#E5E5E5">network</font><font color="#CCCCCC"> which is not that complex enter</font>

1242
00:56:25,869 --> 00:56:33,359
<font color="#CCCCCC">alright</font>

1243
00:56:28,780 --> 00:56:33,359
[Applause]

