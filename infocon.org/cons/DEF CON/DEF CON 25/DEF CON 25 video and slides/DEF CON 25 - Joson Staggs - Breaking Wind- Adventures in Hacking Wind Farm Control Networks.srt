00:00:00.200-->00:00:05.205
>>Good morning Def Con. Alright,
so if you're here to learn how
to break some winds, you're in

00:00:08.709-->00:00:15.449
the right spot this morning, so
welcome. Um, so my name is Jason
Staggs, I'm a security

00:00:15.449-->00:00:20.020
researcher from the University
of Oklahoma in Tulsa, Oklahoma.
And, this morning I'm going to

00:00:20.020-->00:00:23.524
be sharing some of the findings
of that research study that
we've been conducting over the

00:00:23.524-->00:00:28.896
past couple of years. And to an
investigation in to see just how
resilient windfarm controls

00:00:28.896-->00:00:35.002
networks are uh to attack.
Alright, so a little about me
again, I'm a security

00:00:35.002-->00:00:39.740
researcher, I love my job and am
interested in all things
security . Um, gave a talk here

00:00:39.740-->00:00:44.745
at Def Con here a couple of
years ago on How to Hack your
Mini Cooper. Uh, so I really

00:00:44.745-->00:00:49.616
enjoy trying to break things. In
fact, most of the time I try
provide people with solutions or

00:00:49.616-->00:00:55.422
ideas on how to fix the things I
broke. Um, Sometimes people are
willing to listen to these ideas

00:00:55.422-->00:01:00.827
with open arms. Um, but in other
cases sometimes people just
donít want to listen. And, when

00:01:00.827-->00:01:07.701
people just donít want to
listen, guess what, bad things
tend to happen. Alright, so out

00:01:07.701-->00:01:11.371
of all the awesome things in
this planet we could possibly
hack, why in the world would

00:01:11.371-->00:01:16.276
anyone want to hack a windfarm?
Great question, let me explain.
So, whether we realize this or

00:01:16.276-->00:01:22.082
not, as a country as a world as
a society as a whole we are
becoming more and more dependent

00:01:22.082-->00:01:26.386
upon renewable energy sources.
In fact, one of the more
predominant forms of renewable

00:01:26.386-->00:01:30.924
energy right now is wind based
energy. This is true for North
America, Asia and in parts of

00:01:30.924-->00:01:36.530
Europe. Alright. Um, and in the
United States alone in 2015,
nearly 5 percent of all the

00:01:36.530-->00:01:41.568
electricity produced in this
country came from wind based
power sources. Now, that may not

00:01:41.568-->00:01:45.405
sound like a whole lot but
according to the department of
energy they expect that number

00:01:45.405-->00:01:51.979
to climb just north of 20
percent uh by 2030. So, this
increased reliance on wind

00:01:51.979-->00:01:56.883
energy will draw the increased
attention by attackers of all
shapes and sizes for a number of

00:01:56.883-->00:02:03.690
reasons, ok? And so naturally
this raises the question just
how resilient are these control

00:02:03.690-->00:02:09.329
systems to attack? I think it's
very interesting that neither
the hacker or academic

00:02:09.329-->00:02:13.066
communities are really
considering this just yet. Now,
I know what you're probably

00:02:13.066-->00:02:16.737
thinking, you're probably
thinking, well, Jason, isnít
this just another insecure,

00:02:16.737-->00:02:21.174
vulnerable, uh, ICS system
that's easy to attack? And,
while the answer to that

00:02:21.174-->00:02:25.946
question is most definitely yes,
the bigger questions as to what
are some of the more, uh, what

00:02:25.946-->00:02:29.282
are some of the bigger
implications and some of the
more sinister things that an

00:02:29.282-->00:02:34.054
attacker can now do, with this
level of access. Those types of
questions have not been properly

00:02:34.054-->00:02:39.626
answered and not yet thoroughly
considered, in my option. And
so, weíll talk about that in

00:02:39.626-->00:02:43.463
this presentation. Uh, so modern
day wind farms are operated by a
series of interconnected scada

00:02:43.463-->00:02:49.102
systems so, we have computers
and networks in play of various
sorts, ok. What's the worst that

00:02:49.102-->00:02:55.075
could happen? Well, in a lot of
ways a wind turbine is similar
to a car. So, just like a car, a

00:02:55.075-->00:03:00.781
wind turbine has to have its oil
changed and breaking system and
gears and rotors uh, serviced

00:03:00.781-->00:03:04.751
periodically because there is a
failure rate associated with
those systems and they have to

00:03:04.751-->00:03:10.590
be serviced. Uh, because if they
arenít serviced properly, guess
what, bad things will happen. In

00:03:10.590-->00:03:14.661
fact, donít take my word for it.
Uh, check out this awesome ten
minute youtube video whenever

00:03:14.661-->00:03:18.799
you guys get a chance. It
basically shows what I'm calling
a wind farm engineerís worst

00:03:18.799-->00:03:23.437
nightmare. So, in the video it
shows wind turbines failing due
to a serious of mechanical

00:03:23.437-->00:03:28.508
failures because they werenít
properly serviced and
maintained. k. Um, so, in the

00:03:28.508-->00:03:32.412
video it literally shows wind
turbines catching on fire or
disintegrating into a billion

00:03:32.412-->00:03:35.816
pieces. it's actually quite
entertaining to watch. I
recommend watching it. So, I

00:03:35.816-->00:03:42.122
argue that some of these same
types of mechanical failures can
also be caused um, or at least

00:03:42.122-->00:03:46.593
triggered or influenced by
targeting insecure control
systems. Weíll talk about that.

00:03:46.593-->00:03:50.831
But, most importantly, why
attack a wind farm? Well, at the
end of the day we want to be

00:03:50.831-->00:03:56.169
able to prevent attackers from
turning these peaceful systems
into either targets of

00:03:56.169-->00:04:01.108
ransomware or worse. And to
massive burning wastelands. So,
what exactly is a wind farm?

00:04:04.077-->00:04:08.515
Well, fundamentally speaking all
a wind farm is is a power plant
that converts wind based energy

00:04:08.515-->00:04:12.686
into electricity. Alright? Now,
remember, when is a variable
power source it's not always

00:04:12.686-->00:04:17.257
guaranteed to be there? Um, so
we have the wind turbines that
are used to harvest this energy

00:04:17.257-->00:04:21.528
that gets converted into
electricity fed into substations
and then the voltages stepped up

00:04:21.528-->00:04:26.032
and fed into the power grid, Ok.
that's a ten thousand foot view
of how the process works. Um,

00:04:26.032-->00:04:32.038
IC61400, this is the set of
international specifications
that define how wind farms are

00:04:32.038-->00:04:37.010
to be designed, operated and
maintained and sort of the, the
abstract communications

00:04:37.010-->00:04:43.750
requirements between wind farm
operators and turbines in the
field. And, so it's like I said,

00:04:43.750-->00:04:47.521
over the last couple of years me
and my research team back home
in Tulsa, uh, we've been going

00:04:47.521-->00:04:52.626
all across American doing
holistic security assessments on
a variety of wind farms from uh,

00:04:52.626-->00:04:56.396
different vendors, different
manufactures, different makes
and models. Um, and we've looked

00:04:56.396-->00:05:00.167
at everything from the physical
security mechanisms of wind
turbines to the actual hardware,

00:05:00.167-->00:05:05.305
software and firmware that runs
on the automation control
systems. And, yes, at times we

00:05:05.305-->00:05:11.545
did have to uh climb to the very
top of these turbines to gain a
better understanding of how the

00:05:11.545-->00:05:15.782
controllers and fill bus
protocols worked. And, also to
get a better understanding of

00:05:15.782-->00:05:19.619
how the different mechanical
systems and processes in play,
uh, worked in the turbine as

00:05:19.619-->00:05:25.025
well. So, if you are a security
researcher or pen tester with
any fear of heights this may not

00:05:25.025-->00:05:30.030
have been the pen test for you
to be on. Alright, so real quick
I just want to talk about the

00:05:30.030-->00:05:36.102
anatomy of a wind turbine. So,
at the very top of the tower
there, that housing is called a

00:05:36.102-->00:05:40.006
nacelle. Inside that nacelle is
all of her interesting uh,
mechanical components that makes

00:05:40.006-->00:05:44.277
a wind turbine a wind turbine.
Ok, so things like your rotor
system, pitch and yaw motor,

00:05:44.277-->00:05:48.315
braking system, low and high
speed shafts, gear box,
generators, all that fun stuff.

00:05:48.315-->00:05:52.919
These are the systems that
service technicians will service
and maintain uh, on a periodic

00:05:52.919-->00:05:56.756
basis so sometimes these things
will fail and have to be
replaced. Alright, there's a

00:05:56.756-->00:06:01.328
failure rate associated with
them. If you are an attacker
whose goal is to damage a wind

00:06:01.328-->00:06:04.531
turbine, these are the types of
systems that you're going to be
interested in targeting.

00:06:07.300-->00:06:10.971
Alright, this is sort of a ten
thousand foot view of the
topology of a wind farm

00:06:10.971-->00:06:14.274
generically speaking, ok. So, we
have a command and control
center that's used to manage

00:06:14.274-->00:06:18.912
multiple wind farms. Then we
have sub stations of the
different field sites . Uh, sub

00:06:18.912-->00:06:21.648
stations split into two
different systems. We have the
transmission control systems

00:06:21.648-->00:06:25.285
that's used to harvest
electricity produced by the
turbines then they feed that

00:06:25.285-->00:06:30.056
into the uh power grid. On the
opposite side is the operations
control network. This is what

00:06:30.056-->00:06:36.062
the operators use to uh, to
monitor and control turbines,
uh, in the field. Once we get to

00:06:36.062-->00:06:39.699
the turbines in the field, all
these turbines are sort of
interconnected via fiber optic

00:06:39.699-->00:06:44.904
links, in most cases. Uh,
everything is IP addressable.
And everything is on one big,

00:06:44.904-->00:06:49.476
flat network. So there's real no
notion of network segmentation
between turbines or at least the

00:06:49.476-->00:06:54.414
automation control systems in a
turbine. Uh, so, being able to
talk from one automation

00:06:54.414-->00:06:58.585
controller to the other
automation controller and
different turbines uh is a thing

00:06:58.585-->00:07:01.454
that can happen, although
there's not any operational
requirement for this

00:07:01.454-->00:07:07.294
specifically. Alright, hereís a
great perspective of the
different network protocols in

00:07:07.294-->00:07:11.031
play between the operator and
the automation control systems
inside of a turbine in the

00:07:11.031-->00:07:16.903
field. So, the operator can use
any number of command and
control protocols to pull or uh

00:07:16.903-->00:07:20.640
send commands through the
turbine to get it to do
different things. Um, usually

00:07:20.640-->00:07:25.211
this is the flavor of OPC or
some IEC based protocol. Uh,
sometimes it's proprietary to

00:07:25.211-->00:07:30.283
the vendor. And then, uh, these
op, these operator will talk to
the uh, automation controllers,

00:07:30.283-->00:07:34.988
these programmable automation
controllers are set in the base
of the tower usually. And you

00:07:34.988-->00:07:39.292
can think of these things as
being a blend between a
traditional PC and a PLC,

00:07:39.292-->00:07:45.265
alright? So, operating systems
wise these guys can run anything
from uh Windows Embedded,

00:07:45.265-->00:07:50.470
Windows CE. we've seen these
guys run Windows 95 in some
cases. Uh, various flavors of

00:07:50.470-->00:07:55.475
Lenix, uh and like uh real time
operating systems like VX Works.
K? Um, hardware wise, these

00:07:58.244-->00:08:02.882
boards can be custom designed by
the manufacturers of the wind
turbine. Um, other times theyíll

00:08:02.882-->00:08:09.055
use off the shelf automation
control systems and then the
vendors will just roll their own

00:08:09.055-->00:08:14.661
software onto em. Um, they also
have a fuel bus peripheral on
them that's used to talk via cam

00:08:14.661-->00:08:18.865
bus of MOD bus or some kind of
fuel bus protocol to other
controllers in the top of the

00:08:18.865-->00:08:24.070
turbine that's used to interface
with motors, actuaries, sensors
and all that fun stuff. Alright,

00:08:24.070-->00:08:29.075
IC61400-25, this is the part of
the specification that defines
how operators are to interface

00:08:33.079-->00:08:37.250
with uh, turbines in the field.
So, it defines what type of
information the operator should

00:08:37.250-->00:08:42.389
be able to pull, uh, from a
turbine control system. And,
then what types of commands, ah,

00:08:42.389-->00:08:46.092
the operator should be able to
send to a turbine in the field
to get ta, to get it to put the

00:08:46.092-->00:08:50.830
turbine into different context
or states. And, then what the
spec does, is it actually maps

00:08:50.830-->00:08:55.969
this functionality back to a
handful of protocols listed
here, alright? Uh, it's

00:08:55.969-->00:08:59.406
important to note that most of
these protocols by themselves
are inherently insecure.

00:08:59.406-->00:09:05.045
Alright, so one of the more
prevalent protocols that we
solved during our research and

00:09:05.045-->00:09:10.784
assessments was the protocol
called Opus CXMLDA stands for
data access and so, the HMI

00:09:10.784-->00:09:15.388
software that's used by the
operators will use this protocol
to uh, probe the automation

00:09:15.388-->00:09:20.460
control system. Uh, the OPC
server running on the automation
control system to check on the

00:09:20.460-->00:09:24.864
current status of the turbine
and send it commands. And, so,
uh, this protocol is nothing

00:09:24.864-->00:09:30.670
more than a soap based messaging
protocol so we have XML objects
going over HTTP. Um, and then if

00:09:30.670-->00:09:34.808
you look at the spec, the spec
defines different types of
messaging services so, in the

00:09:34.808-->00:09:38.311
event that the HMI software
wishes to pull a turbine, it
will send stuff like RAID

00:09:38.311-->00:09:43.383
message requests and then in the
event that the uh software, the
HMI software wants to send like

00:09:43.383-->00:09:47.921
a, a command to write to a
control variable on the OPC
server it will send a write, uh

00:09:47.921-->00:09:52.859
a write message request.
Alright, so here is the general
rundown of the vulnerabilities

00:09:52.859-->00:09:58.264
that we were seeing across the
board. Now, this wasnít true for
every turbine, every wind farm

00:09:58.264-->00:10:02.035
that we looked at but, these
were sort of the common themes
of the day, if you will. Um, so

00:10:02.035-->00:10:05.672
automation controller wise, you
know, these guys are running
lazy operating systems. we've

00:10:05.672-->00:10:10.543
seen in most cases, everything
running as roots. Uh, we got
remote network management

00:10:10.543-->00:10:15.648
services to like Telnet FTPS and
P and all that fun stuff. Uh,
trying to get access to these

00:10:15.648-->00:10:20.220
guys is fairly trivial and in
most cases we've seen, you know,
these guys are just running

00:10:20.220-->00:10:24.591
vendor, uh, they're just using
vendor provided default creds or
easy to guess creds. And, oh, by

00:10:24.591-->00:10:27.961
the way, if you know the creds
to one of these automation
controllers, they're the same

00:10:27.961-->00:10:31.664
across all the rest of the
automation controllers in the
rest of the wind farm. So, being

00:10:31.664-->00:10:35.168
able to pivot from one
automation control system and
move laterally is relatively

00:10:35.168-->00:10:41.541
trivial, uh, if you know what
those are. Um, like I said
before, uh, network segmentation

00:10:41.541-->00:10:45.745
between wind turbines is not
really a thing that's happening.
All this stuff right here is

00:10:45.745-->00:10:48.781
sort of what we would expect
from an ICS system though.
there's really no surprises

00:10:48.781-->00:10:53.620
here, right? But, what are some
of the interesting, physical
effects that can be achieved if

00:10:53.620-->00:10:59.826
we start to chain some of these
vulnerabilities together?
Alright, so if you take a closer

00:10:59.826-->00:11:04.731
look at the OPCXMLDA
specification, it clearly
recognizes the fact that it is

00:11:04.731-->00:11:09.869
an insecure protocol. it's not
easy to encrypt or anything like
that. However, it assumes that

00:11:09.869-->00:11:16.543
the implementer is smart enough
to tunnel this protocol over,
over a SSL or TRS, ok? And, it

00:11:16.543-->00:11:22.382
says if you donít, you know uh,
bad things could potentially
happen. And, here exactly is the

00:11:22.382-->00:11:27.387
part of the spec work calls this
out. Initially the spec says
that you probably want to um,

00:11:29.489-->00:11:35.295
have some form of authentication
or um, being able to disallow
people to just arbitrarily send

00:11:35.295-->00:11:39.799
or write message requests to the
OPC server to control control
variables. Alright? And

00:11:39.799-->00:11:42.902
apparently the people that have
been implementing these
particular command and control

00:11:42.902-->00:11:49.342
protocols and wind farms didn't
read this portion of the
specification either. So, here

00:11:49.342-->00:11:53.880
is a rundown of some of the
items that are pulled for by the
operator and returned to the

00:11:53.880-->00:11:58.351
operator um and, displayed in
the narration my screen, so
things like current wind speed,

00:11:58.351-->00:12:04.324
power production, um, ambient
temperatures, controllerís
statuses, things like that.

00:12:04.324-->00:12:09.195
Hereís where things get a little
more interesting. So, this, so
the types of commands that

00:12:09.195-->00:12:12.799
operators can send to the
turbines in the field, uh, this
will vary from vendor to vendor

00:12:12.799-->00:12:16.703
but, generally speaking there
are commands they can issue to
change the maximum power

00:12:16.703-->00:12:21.341
generation of a particular
turbine. Or, there are commands
they can send to put the turbine

00:12:21.341-->00:12:25.979
into a certain operating state
or context. So, being able to do
things like turn the turbine off

00:12:25.979-->00:12:30.750
or turn it on or put into an
idle state. One of the more
interesting states that a wind

00:12:30.750-->00:12:36.222
turbine can be in is something
called emergency shutdown mode
or state. Ok? And what emergency

00:12:36.222-->00:12:41.227
shutdown is, is in the event
that a um, automation control
system or operator uh, detects

00:12:43.696-->00:12:47.734
that there are external factors
or conditions that could be
damaging to a wind turbine such

00:12:47.734-->00:12:53.139
as high gusts of wind or maybe a
tornado is imminent in the area.
Um, it decides that it's more

00:12:53.139-->00:12:57.243
advantageous to the turbine to
shut itself off as soon as
possible rather than continue to

00:12:57.243-->00:13:01.481
operate due to fact that it
might be damaged. And so, the
act of invoking an emergency

00:13:01.481-->00:13:07.186
shutdown is what we call hard
stop. And, so, when a hard stop
is initiated on a turbine, what

00:13:07.186-->00:13:12.592
happens is the, the um, the
blades on the rotor will flare
out and then the uh, mechanical

00:13:12.592-->00:13:16.596
break of the turbine will
actually lock up to bring the
turbine to a halting stop as

00:13:16.596-->00:13:21.768
soon as possible. And this is
not a graceful shutdown at all,
believe me. So, when this

00:13:21.768-->00:13:26.506
happens we actually notice that
this will put excessive wear and
tear on critical mechanical

00:13:26.506-->00:13:30.309
components inside the nacelle.
So, things like the gears and
the rotors and the braking

00:13:30.309-->00:13:36.282
system and all that. Alright?
Um, also the, uh physical
integrity of the structure of

00:13:36.282-->00:13:39.852
the tower and the rotor system
is also affected by this. And,
there's been plenty of research

00:13:39.852-->00:13:45.091
that's been done over the years
to back up those claims. Um, one
side note, if you're ever doing

00:13:45.091-->00:13:49.529
testing or an assessment on a
wind farm, and, uh, you're
working with a group of wind

00:13:49.529-->00:13:54.600
farm engineers, and you attempt
to put a wind turbine into, uh,
invoke a wind turbine into a

00:13:54.600-->00:13:59.605
hard stop, more than zero times,
they tend to get very, very
grumpy with you. Alright, let's

00:14:01.674-->00:14:05.478
talk about some of the uh
network attack tools that we
developed for this stuff. So,

00:14:05.478-->00:14:12.118
Windshark is a, um, uh, network
based attack tool designed to
target um automation controllers

00:14:12.118-->00:14:16.556
uh on the wind farm network. So,
the way it works is Windshark is
designed to hijack control of

00:14:16.556-->00:14:21.994
wind turbines or to damage them.
And, how it works is Windshark
will actually go out and scan

00:14:21.994-->00:14:26.632
for the IP addresses of
automation control systems
running certain versions of OPC

00:14:26.632-->00:14:30.937
or control services that we care
about. Then they will return a
list of those IP addresses to

00:14:30.937-->00:14:35.675
the attacker, the attacker can
then select which IPs that he
wishes to spoof command or send

00:14:35.675-->00:14:40.747
commands to, to put the turbine
into a funky state or do
something with it. And, so by

00:14:40.747-->00:14:44.450
doing this we can actually
hijack control of some turbines.
Now, this isnít true for every

00:14:44.450-->00:14:47.820
turbine as you know various
processes will vary from vendor
to vendor and, make and model.

00:14:47.820-->00:14:53.559
Um, so when we do this though
the operator can still pull
those turbines and see that,

00:14:53.559-->00:14:56.796
hey, something funkyís
happening; somebodyís messing
with our turbines. So, we still

00:14:56.796-->00:15:02.201
have that problem to deal with.
Another interesting mode that
Windshark has is something what

00:15:02.201-->00:15:08.608
I'm calling the hard stop of
death attack mode. And, the way
this works is, the, uh Windshark

00:15:08.608-->00:15:14.046
tool will put the turbine, it
will force the turbine to hard
stop and then it will wa, wait

00:15:14.046-->00:15:18.951
for the turbine to recover and
then force is to hard stop
again. And it will do this pro,

00:15:18.951-->00:15:23.256
process over and over and over
again until either the attackers
remove from the network or

00:15:23.256-->00:15:28.528
execution of our program is
halted. Um, so when weíre doing
this we are, um, introducing

00:15:28.528-->00:15:32.665
wear and tear, premature wear
and tear on critical uh,
mechanical components, meaning

00:15:32.665-->00:15:38.771
we are damaging turbines.
Alright, the next step up from
this is a tool that we wrote

00:15:38.771-->00:15:41.808
called Windpoison. So,
Windpoison is a man in the
middle tool that runs on a

00:15:41.808-->00:15:46.579
raspberry pie and basically all
we do is, is we do the old arc
cache poisoning trick to poison

00:15:46.579-->00:15:51.450
the arc cache tables of the
automation control systems of
the turbine and the operator's

00:15:51.450-->00:15:54.720
workstation. And, so, when we do
this, we can be now be selective
as to which commands the

00:15:54.720-->00:15:58.991
operator can send to the
turbines, um if any at all so we
can do things like drop in those

00:15:58.991-->00:16:03.930
requests. Um, and then we can do
stuff like fabricating the uh
pulling responses back to uh the

00:16:06.165-->00:16:11.204
operator. Um, so we can do stuff
like, you know, turning off all
the turbines in the wind farm or

00:16:11.204-->00:16:14.841
invoking the hard stop of death
attack against all the wind
turbines in the wind farm and

00:16:14.841-->00:16:19.846
then lying about the current
status of those turbines to the
operator. So, these particular

00:16:22.415-->00:16:29.155
tools were designed to target
the IEC61400-25 based, uh,
protocol stacks and network

00:16:29.155-->00:16:32.959
services. We had to do some
light command and control
protocol reverse engineering to

00:16:32.959-->00:16:37.563
figure out what the particular
values were, of the uh, of the
protocols that put a wind

00:16:37.563-->00:16:41.701
turbine in a certain context.
Uh, we put everything on a
raspberry pie and tied it all

00:16:41.701-->00:16:46.906
together with python, used some
bash grips. We used um the scapy
and nmap python libraries for

00:16:46.906-->00:16:52.812
packet fabrication and port
scanning. And then we did some
IP tables too for um dropping

00:16:52.812-->00:16:58.784
and forwarding packets across
interfaces as needed. let's take
this to a step, uh, a step

00:16:58.784-->00:17:03.289
further though. So, Windworm is
a proof of concept that we
developed in the lab designed to

00:17:03.289-->00:17:07.560
go after automation controllers
that are configured in an
insecure fashion. So, what we do

00:17:07.560-->00:17:11.364
is we leverage the fact that all
these automation controllers
used the same creds and that we

00:17:11.364-->00:17:14.634
know what those creds are. So,
like, like I said before, most
of the time these are vendor

00:17:14.634-->00:17:18.638
provided creds or easy to guess
creds. So, we assume we know
what those are. We also take

00:17:18.638-->00:17:22.642
advantage of the fact these guys
are running things like FTP
Intelnet and what we do is we

00:17:22.642-->00:17:27.914
will actually copy ourselves via
FTP and invoke execution via
Telnet. And, we repeat this

00:17:27.914-->00:17:30.750
process over and over again
until weíre actually executing
em all the automation

00:17:30.750-->00:17:35.254
controllers in the wind farm.
Once we have execution on the
automation controllers we will

00:17:35.254-->00:17:39.458
interface with the fuel bus
peripheral on the automation
control system to talk to other

00:17:39.458-->00:17:43.329
controllers in the wind turbine
that are more interesting to us.
So things like the power

00:17:43.329-->00:17:46.732
controller or the motor
controller. Alright? And, what
we can do then is we can inject

00:17:46.732-->00:17:51.637
our own fuel bus commands uh, to
do interesting things. So, one
of the more interesting pro, one

00:17:51.637-->00:17:55.675
of the more common protocols
that we saw in our assessment
was a protocols called Can Open.

00:17:55.675-->00:17:59.412
As so the way Can Open works is
every controller has something
called an object dictionary

00:17:59.412-->00:18:03.382
which is very similar to like,
registers and modbus. So,
contains like controller,

00:18:03.382-->00:18:07.653
configuration or process uh
control information. And, these
controllers will use this

00:18:07.653-->00:18:12.258
interface to sort of uh, uh,
exchange information with each
other or update process control

00:18:12.258-->00:18:17.229
variables. And so, the trick
here is figuring out what the
mapping of this Can Open and

00:18:17.229-->00:18:21.567
object dictionary is for a
particular controller. And so,
if you know what this is you can

00:18:21.567-->00:18:26.072
actually, um, um, you know, do
things like overwriting critical
process control variables to do

00:18:26.072-->00:18:30.743
put the control into an
interesting state, uh, to affect
the hardware that it controls.

00:18:30.743-->00:18:36.082
Um, and so, lucky for us, uh,
the Can Open uh, specification
defines something called

00:18:36.082-->00:18:40.753
electronic data sheets that
define how these controllers are
laid out and mapped out. So, it

00:18:40.753-->00:18:45.257
defines like the literal
variable name for an item in the
object dictionary, what its

00:18:45.257-->00:18:50.663
index is, sub index, uh, what
type of, what data type it is,
whether you can just read or

00:18:50.663-->00:18:55.534
write to it. Um, so, that sort
of thing. And, uh, these are
usually stored on a file systems

00:18:55.534-->00:18:59.505
of these programmed automation
controllers in a clear text file
so, we can just read these and

00:18:59.505-->00:19:03.843
know what those mappings are.
And basically you just repeat
this process over and over again

00:19:03.843-->00:19:10.049
until you do the bad things you
want to do to the turbine. let's
take this to another level. So,

00:19:10.049-->00:19:15.087
what if we wanted to ransomware
a wind farm? How exactly would
this work? So, I'm not talking

00:19:15.087-->00:19:19.025
about encrypting anything here,
I'm talking about being able to
paralyze wind farm operations in

00:19:19.025-->00:19:23.696
such a way that the electric
utility is no longer able to
produce electricity, at least

00:19:23.696-->00:19:27.833
until a ransom is paid in
something like maybe bitcoin.
But, how exactly would this

00:19:27.833-->00:19:32.571
work? This is exactly how an
attacker would go about
ransomwaring a wind farm for

00:19:32.571-->00:19:37.309
bitcoin. And so, the idea here
is the attacker only need
single, uh, physical access to a

00:19:37.309-->00:19:41.914
single turbine in a wind farm.
K? At that point the attacker
would introduce his propagating

00:19:41.914-->00:19:46.519
malware, very similar to the
Windworm that we just described.
That malware, once it was

00:19:46.519-->00:19:51.757
executing would place the
turbine into a paralyzing state,
meaning that it would just um,

00:19:51.757-->00:19:56.695
chill the turbine down. It would
then disable all remote network
management services. K? So

00:19:56.695-->00:20:02.501
goodbye Telnet, goodbye FTP.
Then it will um, uh, start up
its own TCP network service that

00:20:02.501-->00:20:06.205
would just wait there for the
ransomware key to be delivered
to it. At this point you, the

00:20:06.205-->00:20:10.076
attacker, have gained control
over the wind farm. And what you
would do is you would send a

00:20:10.076-->00:20:12.912
ransom note to the electric
utilities saying, hey,
congratulations, I now have

00:20:12.912-->00:20:16.549
complete control over your wind
turbine assets. If youíd like to
have them back in a timely

00:20:16.549-->00:20:22.121
fashion, please send me $10-->000
dollars in bitcoin to, uh, this
address. If the, uh, the company

00:20:22.121-->00:20:26.225
decides to play ball it says OK
fine, whatever, we want our wind
farm back, uh, that's fine. The

00:20:26.225-->00:20:29.395
attacker would then provide the
key and then they would use that
key to unlock the, uh, the wind

00:20:29.395-->00:20:35.000
farm. And, everybodyís happy.
However, in the event that the
company decides not to pay the

00:20:35.000-->00:20:39.205
ransom, that malware could have
some logic built into it in such
a way that says, ok, if I have

00:20:39.205-->00:20:45.277
not received my ransom, uh, key,
within uh you know, an hour, I'm
going to go ahead and invoke the

00:20:45.277-->00:20:50.816
hard stop of death attack
against myself, um, every hour
until I receive this ransom key.

00:20:50.816-->00:20:53.886
So, now we have the problem of
now not only is the electric
utility losing a lot of money

00:20:53.886-->00:20:57.556
because they're not able to
produce uh, electricity, but now
we have this interesting

00:20:57.556-->00:21:02.027
paradigm where the attackerís
able to introduce damage to the
turbines with this ransomware.

00:21:02.027-->00:21:07.733
Very interesting. What would be
the uh, uh the financial uh,
impact due to a wind farm

00:21:07.733-->00:21:12.805
downtime though? So, if we take,
for instance a 250 megawatt wind
farm that's been infected with

00:21:12.805-->00:21:17.510
this ransomware, k? And, we
assume that electricity is 12
cents per kilowatt hour on the

00:21:17.510-->00:21:22.815
national average. And, we assume
worst case a capacity factor of
35%. And, then a best case of

00:21:22.815-->00:21:26.852
100% for the wind farm. The
companyís going to lose out on
anywhere from 10 to $30-->000

00:21:26.852-->00:21:33.392
dollars per hour of downtime.
that's a lot of money folks. So,
what would you even do about

00:21:33.392-->00:21:36.695
this; how would you even begin
to recover from something like
this? I think there's different

00:21:36.695-->00:21:41.534
perspectives on this depending
upon who you are. But, uh, um,
you know, one thing you could do

00:21:41.534-->00:21:44.403
is you could reimage the
automation controller file
systems. So sometimes this

00:21:44.403-->00:21:49.575
resides on uh, a multimedia card
like a compact flash or SD card.
You could just reimage that way.

00:21:49.575-->00:21:54.280
In other cases, not so trivial
because that file system resides
on a flash chip that is soldered

00:21:54.280-->00:22:00.619
onto the board, physically.
Alright? So, good luck trying to
do that in a timely manner. Um,

00:22:00.619-->00:22:03.989
and in the meantime, while
you're trying to figure out what
to do, you the operator is

00:22:03.989-->00:22:10.162
losing out on your ability to uh
produce electricity. Which means
you're losing money. Alright,

00:22:10.162-->00:22:13.999
so, in conclusion, uh, wind farm
control networks are extremely
susceptible to attack. Again,

00:22:13.999-->00:22:18.070
this is just the tip of the
iceberg based on some of the
research that we've done. Un, my

00:22:18.070-->00:22:23.576
advice to anybody with wind farm
assets is to be proactive. Donít
wait on vendors to, uh, provide

00:22:23.576-->00:22:27.580
security. Verify vendors claims
on security so if they're
promising you encrypted command

00:22:27.580-->00:22:32.785
and control between operators
and uh and uh the turbines,
verify those claims. And,

00:22:32.785-->00:22:36.322
lastly, retrofit security is
needed. One thing that people
could do to prevent all the

00:22:36.322-->00:22:41.694
attacks I just described is to
introduce some sort of network
segmentation between turbines um

00:22:41.694-->00:22:44.630
and the substations. The one
thing you could do is encrypt
all your traffic between

00:22:44.630-->00:22:48.234
turbines and the substations so
that in the event that one
turbine was compromised, that

00:22:48.234-->00:22:51.837
one compromised automation
control system wouldnít be able
to take down the rest of the

00:22:51.837-->00:22:56.775
turbines in the wind farm. And
with that I am out of time so if
you have any questions,

00:22:56.775-->00:23:00.212
comments, or crazy ideas, Iíll
be around, come find me, if not,
thank you all very much.

