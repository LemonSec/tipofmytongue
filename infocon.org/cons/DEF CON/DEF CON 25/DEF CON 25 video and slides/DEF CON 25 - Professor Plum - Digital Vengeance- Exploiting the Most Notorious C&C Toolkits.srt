00:00:00.125-->00:00:05.125
>>So, like the uh the title
suggests, we're going to be
exploiting some C and C servers

00:00:05.125-->00:00:11.000
today or at least exploiting
some T and C and C toolkits. Um
before I get right into that

00:00:11.000-->00:00:17.458
though uh these are or at least
best to my knowledge new
exploits and at the end of this

00:00:17.458-->00:00:22.250
I will be releasing the
metasploit modules for these
exploits. Um, before I get there

00:00:22.250-->00:00:26.958
though I just I don't want the
focus to be so much about these
exploits I mean I think they're

00:00:26.958-->00:00:31.583
cool the remote code execution
but the takeaway should be if
you're a vulnerability

00:00:31.583-->00:00:37.833
researcher like this field of
looking at C and C servers for
exploits is a right field.

00:00:37.833-->00:00:42.125
There's low laying fruit
everywhere and I really don't
feel like people are or a lot of

00:00:42.125-->00:00:45.250
researchers are looking at it or
if they're looking at it they're
very they're using it just for

00:00:45.250-->00:00:50.458
themselves and I'm not really
sharing. So, um key takeaway is
this is this is a really

00:00:50.458-->00:00:53.875
interesting field and I I highly
recommend anybody who's into
vulnerability research to jump

00:00:53.875-->00:00:58.042
into it. So, before I get
started in on the exploits I'm
going to do a little bit of

00:00:58.042-->00:01:01.125
background. Gonna talk about
some legal stuff, but then but
then we'll get into the

00:01:01.125-->00:01:07.583
exploits. Um, so, background on
me a little bit. I've been into
this computer computer security

00:01:07.583-->00:01:14.083
community for over 10 years. I
currently work at uh Symantec as
a threat researcher, before that

00:01:14.083-->00:01:19.083
I worked for the uh DOD doing
COE- CNE- CNO, CNA. Um and I've
done some time in the trenches

00:01:22.917-->00:01:28.083
as well. I was an IT
admin...administrator before
that so I know what it's like

00:01:28.083-->00:01:31.625
down in the field. I feel like I
kind of have a good round
understanding of uh this

00:01:31.625-->00:01:36.875
particular area. With all that
being said the disclaimer should
come as no surprise to anybody.

00:01:36.875-->00:01:41.667
Um, everything I'm about to say
up here does not represent any
of the opinions of or my

00:01:41.667-->00:01:46.833
opinions do not resen..
represent the views of my
current or former employers.

00:01:46.833-->00:01:53.500
Make that clear. Um, what I'm
going to discuss is probably
illegal, so what you do with it

00:01:53.500-->00:01:57.875
is up to you. If you do cool
stuff with it I would love to
hear about it, but what you do

00:01:57.875-->00:02:04.583
is your own risk. Cool? We got
that covered. Alright, so, I'm
going to talk about what really

00:02:04.583-->00:02:09.167
led me into this field and
that's one thing that bothers me
about this security community

00:02:09.167-->00:02:13.333
that's the security defense
industry is that there's this
defeatist attitude out there

00:02:13.333-->00:02:17.833
like, right? Like no matter how
hard we try we're gonna lose and
if you went into like a

00:02:17.833-->00:02:22.500
basketball game with that kind
of attitude, like it's not going
to work, but somehow we expect

00:02:22.500-->00:02:28.833
that that's OK for the security
community. Right, like I hear
this sophisticated actor term

00:02:28.833-->00:02:35.167
passed around all the time as if
it's some kind of excuse why a
company got hacked and I don't I

00:02:35.167-->00:02:40.792
don't really understand what
they're trying to convey by
using that term. I, if, if I try

00:02:40.792-->00:02:45.042
to picture like that
conversation with the C levels
when you're trying to explain

00:02:45.042-->00:02:50.750
what just happened. "Uh, sir
we've been hacked." "What, but
how di..how did they get in?!"

00:02:50.750-->00:02:55.042
"Oh, well, they were
sophisticated." [laughter] "Uh,
like how do you know they were

00:02:55.042-->00:03:01.458
sophisticated?" "Well, they were
wearing a monocle, so they're
clearly a sophisticated act".

00:03:01.458-->00:03:05.625
[laughter] You know, like, what
what does sophisticated mean in
this context. Whatever it means,

00:03:05.625-->00:03:09.958
I don't think it means what
they're even trying to persuay
it means, right. I think they're

00:03:09.958-->00:03:15.333
trying to persuay or or or
excuse me, convey, excuse me,
that it means that this attacker

00:03:15.333-->00:03:21.792
was so far beyond what we can
just defenders can do that we
just can't win. And so that's

00:03:21.792-->00:03:25.083
what I set out with with this to
say, I was like, well, I'm going
to take a look at the tools that

00:03:25.083-->00:03:29.792
these sophisticated actors are
using and let's just see if
we're if they're vulnerable to

00:03:29.792-->00:03:35.458
attacks. If somebody was to
attack them back. And so that's
where I went with this. Now,

00:03:35.458-->00:03:40.917
hacking back has been a very hot
topic over the years, right. 5
years ago at Black Hat they did

00:03:40.917-->00:03:46.208
an anonymous survey asking
people if they participated in
hacking back in some form and

00:03:46.208-->00:03:51.208
anonymously, over a third of the
people surveyed admitted to it.
Uh, a lot of times like when a

00:03:53.917-->00:03:58.125
company is hacked they want
justice. They want revenge. They
want that person to pay for what

00:03:58.125-->00:04:02.458
they've done. So they go to law
enforcement and law enforcement
has their hands tied or can't do

00:04:02.458-->00:04:07.250
anything or has no recourse.
They, sorry. We can't do
anything about this. And so

00:04:07.250-->00:04:12.250
companies kind of feel obligated
to take this on themselves. And
I, I'm just going to do it

00:04:12.250-->00:04:18.125
myself. Add to that this, uh,
new draft bill that uh Senator
Tom Graves uh, uh out of Georgia

00:04:18.125-->00:04:23.125
uh is preparing to present. It's
called The Active Cyber Defense
Certainty Act, the ACDC act. I

00:04:25.333-->00:04:30.333
love the acronym, hahuh. But um
it's basically a bill that will
allow those who have been hacked

00:04:33.208-->00:04:38.833
to be exempt from hacking laws
when their aim is to attack
their assailant. So this is kind

00:04:38.833-->00:04:43.917
of an interesting idea. If this
was proposed if this draft makes
it through congress. However,

00:04:43.917-->00:04:49.250
generally, like first thought
this is a very, very bad idea,
right. Like this is a game

00:04:49.250-->00:04:55.000
you're not going to win in the
end result. Uh, as a corporation
you're pro..first off it's

00:04:55.000-->00:05:00.917
probably illegal even if that's
made legal it's still very iffy.
Um, you you got to take into

00:05:00.917-->00:05:05.583
fact all the lost productivity
while you send your best guys,
rather than defending your

00:05:05.583-->00:05:10.000
network, you're now sending them
to go attack. Uh not to mention
the reliability. What if they

00:05:10.000-->00:05:14.292
attack the wrong server or the
attacks came from some other
company and and that company

00:05:14.292-->00:05:18.208
realized they've been attacked
by you, so they hack back you.
Right, this escalation game,

00:05:18.208-->00:05:21.500
it's like this cyber you know
the war games movie where like
all these guys are hacking

00:05:21.500-->00:05:27.750
everybody else because one
little guy. So I I felt like
that that uh, the AI's

00:05:27.750-->00:05:32.125
conclusion from that movie
applies very well to this. It
it's probably the best strategy

00:05:32.125-->00:05:37.125
not to play this game at all.
That being said, I do see a very
useful or a very niche area

00:05:39.542-->00:05:45.792
where hacking back, it would be
a good thing and it wouldn't be
a good thing in terms of revenge

00:05:45.792-->00:05:50.833
or of taking the guys out. But
you see I work as a security
researcher as my day job, so I

00:05:50.833-->00:05:54.917
try to track these, I track
targeted attacks. I try to
figure out who's behind this

00:05:54.917-->00:06:01.792
type of attack and if I can
figure out how the person acts
is behind the attack, what files

00:06:01.792-->00:06:06.542
they stole, who else they're
targeting... Like this kind of
information if I was to hack

00:06:06.542-->00:06:11.750
back and sit on their machine
and observe that kind of
information is great for

00:06:11.750-->00:06:14.958
defenders because then I can
tell you these are the other
tools they use. These are the

00:06:14.958-->00:06:19.917
industries they're targeting.
This is the files they want.
It's very useful in that sense,

00:06:19.917-->00:06:25.708
not so much in the sense of just
striking back to get revenge.
And to be honest, to be fair to

00:06:25.708-->00:06:31.583
the ACDC act that's actually the
verbiage it's trying to convey.
Uh, the act itself clearly says

00:06:31.583-->00:06:37.958
you cannot attack back for the
purposes of causing physical or
financial injury or to try to

00:06:37.958-->00:06:43.125
destroy day...data or machines
that you basically you can't
just try to break their machine,

00:06:43.125-->00:06:46.083
which is a good idea anyways
because if you break their
machine they're probably just

00:06:46.083-->00:06:51.500
going to show up somewhere else
anyways. But instead the act
says you can you can attack back

00:06:51.500-->00:06:57.792
for these purposes: uh, is to
establish attribution of the
criminal activity and to monitor

00:06:57.792-->00:07:03.083
the behavior of an attacker.
Also in the bill it says you uh
must um share with law

00:07:03.083-->00:07:06.250
enforcement that you plan to do
this attack and how you plan to
do this and got to give them

00:07:06.250-->00:07:11.250
some details beforehand. Um, I
don't know, I, anyways, I don't
plan to spend forever talking

00:07:13.292-->00:07:19.417
about legal stuff and I know
that's not why you came here
either. But I just want to, so

00:07:19.417-->00:07:24.125
I'll I'll end my rants now, but
I just want to kind of convey
that what I'm about to discuss

00:07:24.125-->00:07:29.917
in the very near future could be
legal, so this is maybe
potential tools like it could be

00:07:29.917-->00:07:35.333
legal and this just showing it
could be very plausible. So,
before I get into some things I

00:07:35.333-->00:07:40.542
want ma..make sure we've got
terminology clear. Uh, in some
circles I've seen the client and

00:07:40.542-->00:07:45.542
server names for RATs reversed
and that really bothers me. So
the person who has the implant

00:07:47.667-->00:07:53.000
or the malware running is going
to be the victim, or the I'm
going to call him the target.

00:07:53.000-->00:07:56.583
I'm going to try and avoid
victim and and I'm going to try
to avoid client just because

00:07:56.583-->00:08:01.042
that one gets some people
confused. And the reason I'm
avoiding victim is because the

00:08:01.042-->00:08:05.458
attacker in the original
scenario is going to be our
victim. So, attacker victim

00:08:05.458-->00:08:09.792
probably terms I'm going to try
to stay away from. Um, and I'm
introducing a new one, that is

00:08:09.792-->00:08:14.167
the person that is attacking
back I will call the retaliator.
I really like that term because

00:08:14.167-->00:08:18.792
the dictionary definition is uh
one who returns assaults in
kind. And we're going to be

00:08:18.792-->00:08:22.208
hitting them with their own
medicine here so I felt like
retaliator is the right name for

00:08:22.208-->00:08:27.208
this. Um, a little while ago one
of my col...colleagues he took
all the recent APT reports, the

00:08:29.708-->00:08:36.042
sophisticated actor reports and
he kind of summed it up into uh
most popular tools. Um, most

00:08:36.042-->00:08:41.583
referenced tools out of those
papers and he posted this the uh
Twitter feed and I saw this list

00:08:41.583-->00:08:46.667
and I was like, huh that is my
shopping list. I'm going to
start at the top and just start

00:08:46.667-->00:08:51.792
working my way down finding an
exploit in each. And so if you
will notice the top one is

00:08:51.792-->00:08:56.917
Poison Ivy and if any of you
will recall or are aware there
is already an exploit out there

00:08:56.917-->00:09:02.417
for Poison Ivy. Uh, the two
individuals at the bottom of
this slide developed that. I'm

00:09:02.417-->00:09:07.208
not going to try to pronounce
their names because I would not
do well . Um but uh they

00:09:07.208-->00:09:12.208
developed a remote execution
vulnerability against the Poison
Ivy C 2 server and interestingly

00:09:14.208-->00:09:21.208
enough after the mandiant APT1
report the malware LU guys
noticed the APT1 group was using

00:09:21.208-->00:09:26.250
the Poison Ivy server so they
used this exploitate to hack
back into their infrastructure

00:09:26.250-->00:09:30.417
but they documented the whole
thing and published it and this
is one of the rare cases where

00:09:30.417-->00:09:35.625
we have of somebody doing a hack
back for attribution or for
monitoring purposes and it

00:09:35.625-->00:09:42.125
really shows how successful it
can be. Um, this picture the
farthest picture on the right is

00:09:42.125-->00:09:47.000
a diagram that they show that
they were giving trying to show
us how they built their the

00:09:47.000-->00:09:50.500
attackers had their
infrastructure set up, how they
had some VM's, and some proxies

00:09:50.500-->00:09:55.333
to try to protect things. They
also were able to pull back some
additional tools the attackers

00:09:55.333-->00:10:01.083
were using and they exposed them
publicly and it was it's very
insightful paper. Uh they called

00:10:01.083-->00:10:06.583
it uh the APT1 technical
backstage. Um it's came out I
believe in 2013 it's been around

00:10:06.583-->00:10:10.417
for a little while now. It's a
really good read, but I think
it's one of the rare cases where

00:10:10.417-->00:10:16.875
we can see how useful this type
of a activity is. Another one on
that list is Darkcomet. It also

00:10:16.875-->00:10:23.208
has public exploits. This is a
blind file retrieval by these
individuals. I don't have any or

00:10:23.208-->00:10:27.875
I didn't find any public
documentation of anybody using
this publicly. But I just

00:10:27.875-->00:10:32.167
thought I figured I would
mention it just for a complete
list. And with that we're going

00:10:32.167-->00:10:36.667
to start playing with our new
stuff. I'm going to start, so I
know I told you I started on my

00:10:36.667-->00:10:40.750
on the list and worked my way
down, but I'm going to work now
when I present them from bottom

00:10:40.750-->00:10:45.333
up because I feel like it's uh
least interesting to most
interesting in that order. So,

00:10:45.333-->00:10:52.167
forth on the list or the last
one I looked at is called Xtreme
RAT. Um, I'm going to be...Who's

00:10:52.167-->00:10:57.750
familiar with Xtreme RAT? Have
seen it, have run into it. OK K
yeah, it's not the most common

00:10:57.750-->00:11:03.000
APT tool kit. I I wouldn't even
really consider it a APT tool
kit thing. It's actually a was a

00:11:03.000-->00:11:09.125
commercial product. This image
here is of the CNC server
component. I've got one victim

00:11:09.125-->00:11:14.500
and that drop down list list
comes with the features that the
the attacker can do to that

00:11:14.500-->00:11:21.333
victim. Uh this tool was sold
out there on the markets and uh
at some point the source code

00:11:21.333-->00:11:25.042
was leaked and and the author
just kind of quit selling it. So
it's still out there. The source

00:11:25.042-->00:11:28.708
code's leaked out there and it's
still kind of out there. There's
a lot of variants that base

00:11:28.708-->00:11:34.542
themselves now off that source
code. Um one of the i..it
features are very script kiddie

00:11:34.542-->00:11:39.667
ish. Like you can tell it
targets script kiddie delvel...
like wanna be hackers. In fact,

00:11:39.667-->00:11:43.542
one of the features that it has
is that you can play Phat flash
games in app while you're

00:11:43.542-->00:11:47.792
waiting for someone to click on
your malware. It's like
[laughter] If you're not very

00:11:47.792-->00:11:52.792
good, at least you can, you know
play some Candy Crush or Jewel
Quest game while you wait, cause

00:11:52.792-->00:11:57.792
you your fishing email sucks.
But despite this it's actually
uh been cited in numerous

00:12:00.375-->00:12:06.125
articles as part of targeted
attacks. So e- even
sophisticated actors like using

00:12:06.125-->00:12:10.792
this tool . Um, it's been cited
in attacks against the Israeli
government, Uh, in conflicts in

00:12:10.792-->00:12:17.292
Syria, and the Gaza strip. So
kind of hotbed areas do get hit
with this guy. And the easiest

00:12:17.292-->00:12:22.625
way to identify this inside a
network is it's uh C2
communications. Most, the uh

00:12:22.625-->00:12:27.625
targets we've seen that it
either calls home one of two
ways: raw TCP or a fake HTTP

00:12:29.792-->00:12:36.667
message. The raw TCP is always
start..st..starts out with the
string my version pipe and then

00:12:36.667-->00:12:41.833
the version 3 point 6, 3 point
7, 3 point 8 those are the the
most common. And a C2 server

00:12:41.833-->00:12:46.792
always responds with a character
X followed by linefeed character
turn. It's like super signature

00:12:46.792-->00:12:51.500
bull right like snore signature
already exists and such. It's
it's very easy to watch for

00:12:51.500-->00:12:57.833
that. Alternatively if it does
HTTP requests they'll always
take the form of a GET request

00:12:57.833-->00:13:04.458
slash sum number dot functions
and that sum number is the
password that the script kiddy

00:13:04.458-->00:13:09.375
uses when they first run the app
and the app makes sure that the
password is up to 10 characters.

00:13:09.375-->00:13:14.750
It can't be longer than 10 and
they all have to be numeric. So
looking for any URL requests for

00:13:14.750-->00:13:19.750
you know, 0 to 9, or 1 to 10
char...numbers dot functions is
going to hit on this and most

00:13:22.458-->00:13:25.875
exclusively hit on this. I
really doubt there's legitimate
traffic going to that URL

00:13:25.875-->00:13:32.167
pattern. And so, this guy, like
I said there's source code out
there. It was a Delfi so I

00:13:32.167-->00:13:37.708
really don't like to read d l a
Delfi, so I just kind of started
reviewing some of the basic C2

00:13:37.708-->00:13:43.125
comms, I you know, I had myself
a victim and I would do all the
maneuvers to the victim and

00:13:43.125-->00:13:49.583
watch the C2 traffic go back and
forth and one thing I noticed
that striked my eye, was how the

00:13:49.583-->00:13:54.583
C2 server um, pushes a file down
to its victim. And what it will
do is it will send a message to

00:13:57.833-->00:14:04.417
the target and say, hey, get
ready to receive my file tool
slash bad dot e x e and save it

00:14:04.417-->00:14:10.375
to your C drive temp as calc dot
e x e and then the target will
respond back, OK, I'm' ready to

00:14:10.375-->00:14:15.833
receive your tool named tool
tool dot bad dot e x e and then
the data's passed to to the

00:14:15.833-->00:14:21.250
victim. And that made me think
about this, why does victim need
to know at all where that file

00:14:21.250-->00:14:26.958
is stored on the server's hard
drive? And I was like, well,
maybe it does that because the

00:14:26.958-->00:14:31.083
server doesn't want to keep
state. It doesn't want to keep
in it's memory that it made this

00:14:31.083-->00:14:37.542
request because all the data it
really needs is in the response
from the victim so it turns out

00:14:37.542-->00:14:42.958
that the first packet isn't even
necessary. As a victim I can go
to the xtreme server and say,

00:14:42.958-->00:14:47.750
hey, I'm ready to receive your
files C drive slash whatever duh
duh duh duh and if that file

00:14:47.750-->00:14:52.750
exists, it gladly hands it to
me. [laughing] >>Woo! [clapping]
>>Yeah it's kind of a blanket

00:14:57.167-->00:15:02.625
basic mistake, but what can I do
with this? Unfortunately, I
can't do a directory listing so

00:15:02.625-->00:15:07.500
if.. I have to know the file
exists I can do like brute force
all the files, but there's

00:15:07.500-->00:15:11.833
better ideas than that. Um, I
didn't take these, I didn't make
these ideas up. This is um from

00:15:11.833-->00:15:16.750
the link at the bottom. Blind
file retrieval is an is often a
case pen testers get in, so

00:15:16.750-->00:15:20.625
they've thought about this a bit
and these are some things they
suggest pulling back. The first

00:15:20.625-->00:15:24.333
one is the Win I N I file
because on any version of
Windows that file exists, so

00:15:24.333-->00:15:28.292
it's like a sanity check. If you
can pull that file back we're
good . More so, if you can pull

00:15:28.292-->00:15:32.208
that file back you might be able
to tell what version of Windows
they have. If you know what

00:15:32.208-->00:15:36.083
version of Windows they have,
you know that path to the event
logs, so we can start pulling

00:15:36.083-->00:15:41.250
event logs. If in the event logs
there's usually a lot of good
data in there. The file..if

00:15:41.250-->00:15:46.667
applications crash, you know the
path to the application. If a
program the user runs crashes,

00:15:46.667-->00:15:51.000
you may know the pa..the user
user name. So now if we know the
username we can start pulling

00:15:51.000-->00:15:55.083
out files of the user's home
subdirectories like the desktop
I N I because that will tell us

00:15:55.083-->00:15:59.333
all the folders that a person
has or files on their desktop
and we keep kind of iterating

00:15:59.333-->00:16:03.708
through their network this or or
their computer finding out
things like that. If it's

00:16:03.708-->00:16:06.958
running, if the attacker is
running this program as
administrator, then we can

00:16:06.958-->00:16:10.542
always pull the backup of the
sound data base and then we get
their username and passwords

00:16:10.542-->00:16:14.500
maybe we could pull the backup
of the registry, because the
registry's going to have a whole

00:16:14.500-->00:16:18.750
lot of great information and
things more things we can pull
from their machine. These are

00:16:18.750-->00:16:23.375
just some of ideas of the things
you can do with that bug. On duh
with that I'm going to move onto

00:16:23.375-->00:16:29.042
the next one. This one, uh,
PlugX, Korplug or Destory, it's
called Destory because

00:16:29.042-->00:16:34.792
somebody's misspelled destroy in
the source code. Um, but this is
uh uh more common tool. It's

00:16:34.792-->00:16:40.250
been around since 2008. Uh, the
the back window is the main tool
used to C N C component and the

00:16:40.250-->00:16:45.500
front window is the pop up that
you can get per victim and each
tab is a set of features you can

00:16:45.500-->00:16:50.333
choose to do to a victim. This
one is a little bit more, I
don't know what to say,

00:16:50.333-->00:16:55.708
professional, I don't know but
it's a little bit more tailored.
Um, I can tell the source code

00:16:55.708-->00:17:00.958
is passed around between groups.
I see different variants of this
out there but the biggest

00:17:00.958-->00:17:05.000
changes I see in the variants is
just the gooey and not so much
the functions underneath. It's

00:17:05.000-->00:17:09.708
like every new hacker likes to
like throw their own gooey on
there put their own cue cue ID

00:17:09.708-->00:17:14.167
on there and claim that they
wrote this, but it's all the
same stuff under the hood. Uh,

00:17:14.167-->00:17:18.000
some of the cool features I've
noticed, though, uh, it has
features for interacting with

00:17:18.000-->00:17:22.833
SQL databases for directly
entering the registry for
capturing packets or doing

00:17:22.833-->00:17:28.750
network monitoring. So it's it's
pretty feature rich app and it's
been cited in a lot targeted

00:17:28.750-->00:17:34.292
attacks. Uh, most uh recently
was one in February. The one
that says uh, oops they did it

00:17:34.292-->00:17:39.375
again. Yeah, this tool has been
around for quite some time. I
can start naming places it's

00:17:39.375-->00:17:45.250
been used against Afghanistan,
in India, Mongolia, Tajikistan,
Japan, Taiwan, Korea, Tibetan

00:17:45.250-->00:17:49.292
organizations and it just goes
and goes and goes. This thing
has been around for quite some

00:17:49.292-->00:17:55.000
time. This one I did not, or I
could not get ahold of the
source code for, so I was going

00:17:55.000-->00:18:00.958
to rely on dynamic analysis and
fuzzing and so I was building a
fuzzer to try to fuzz the

00:18:00.958-->00:18:07.000
protocol, how the victim talks
to the C2 server and when I got
my fuzzer up and running, this

00:18:07.000-->00:18:10.792
thing would fall over left and
right. And I just had a hard
enough time keeping the program

00:18:10.792-->00:18:15.667
running and getting like my the
list of bugs and the
vulnerabilities and potential

00:18:15.667-->00:18:19.042
crashes that could be turned
into exploitates was so high
that I got I kind of got

00:18:19.042-->00:18:24.208
ov..overwhelmed with the fuzzing
and decided to just go look at
static analysis. And so I I was

00:18:24.208-->00:18:28.917
looking at the code and one of
the first areas I was looking at
was when you receive a message

00:18:28.917-->00:18:33.625
from the victim, how does it
handle it? And they handle it
alright. When it's recieves a

00:18:33.625-->00:18:38.292
message from the victim each
message or packet, as they call
it, each message has a little

00:18:38.292-->00:18:43.125
header that's Xor encoded that
has it's own little made up X O
R scheme and so they decode the

00:18:43.125-->00:18:48.417
message header and then they
look that the message is small
enough to sit.ss to fit on the

00:18:48.417-->00:18:53.708
stack buffer that they prepared
for. Right, that that's a good
security trick. That uh 61 that

00:18:53.708-->00:18:59.250
F0001 so it has to be smaller
that 61 K, which is a rather
large message. If it doesn't fit

00:18:59.250-->00:19:05.042
then it shows uh a pop up
message. However, this code to
check that the message will fit

00:19:05.042-->00:19:11.167
on the stack is down here in
this decode packet function. Um,
I can't see my mouse. It's on,

00:19:11.167-->00:19:16.167
it's on line 36, but you'll see
up on line 29 it copies the
packet to the stack and then

00:19:20.417-->00:19:26.708
later it decides maybe I should
have checked if it was going to
fit. [laughter] And so, I can,

00:19:26.708-->00:19:31.250
because it's on the stack right,
we can ret..we can override the
return address. But the return

00:19:31.250-->00:19:36.208
address isn't hit until this
function leaves, which means if
I overflow this buffer I'm going

00:19:36.208-->00:19:41.000
to get control as soon as this
function finishes, but before
the function finishes it pop ups

00:19:41.000-->00:19:47.667
this pop up message. That verly,
very clearly tells the attacker
what just happened. Right, P E

00:19:47.667-->00:19:52.917
decode packet, come on. Don't
you understand? You just got
exploited buddy. And and the

00:19:52.917-->00:19:57.083
funny thing is, no matter what
they do, if they click the X or
they click the OK it doesn't

00:19:57.083-->00:20:01.458
matter cause I get code flow
either way. They just have to
acknowledge this in some sort of

00:20:01.458-->00:20:07.500
way. Now, that's not cool. I
agree. Um, but uh, turns out
that this message is like the de

00:20:07.500-->00:20:13.583
facto error. In fact if you end
map uh PlugX server, it will
show this message. It's just

00:20:13.583-->00:20:17.917
doesn't, it's like I don't know
what happened message is really
what this message is trying to

00:20:17.917-->00:20:23.750
say. And so for this one I have
a demo. Real quick. Um, se..I
see my mouse. The right half of

00:20:23.750-->00:20:28.167
the screen is going to
resent..represent the attacker's
computer. And the left half of

00:20:28.167-->00:20:33.167
the ss.. screen represents the
retaliator's computer. I'm going
to start up the uh PlugX server

00:20:36.792-->00:20:42.792
and then I will just point my
uh, my exploit script at it. So
I'll start up my PlugX exploit

00:20:42.792-->00:20:48.167
script. Uh, because it's a VM I
already know the IP address, so
I'm just gonna type in the IP

00:20:48.167-->00:20:51.917
address and set the attack at
that at that. We'll talk more
about how to find out who to

00:20:51.917-->00:20:58.583
target later. Now, I'm going to
pause this real quick and and
have it aside. One of those

00:20:58.583-->00:21:03.583
papers, er or the articles that
I mentioned was a talk from
Black Cat known as, I know you

00:21:03.583-->00:21:07.625
want to unplug me where they
talked about PlugX RAT and
talked about the, uh duh, that's

00:21:07.625-->00:21:13.833
not what I wanted to do.
Alright, I'll just start this up
while I talk some more. Um and

00:21:13.833-->00:21:17.042
they talked about the the
diff..different variants they
observed. And they, in their

00:21:17.042-->00:21:21.750
terms they observed 3 types.
What basically they used 3
different X source schemes they

00:21:21.750-->00:21:28.708
changed and so I've written my
module to be able to handle each
type, but I can't know ahead of

00:21:28.708-->00:21:32.333
time what type you're targeting.
So basically your you will run
the check command and the if

00:21:32.333-->00:21:36.042
it's not the right type, we'll
change the type and then check
command again until you validate

00:21:36.042-->00:21:41.875
that you've got the right type.
So you see, you see, PlugX type
1, type 1 old and type 2. So I

00:21:41.875-->00:21:47.500
run the check command. The check
command says, yep, you're good.
So we'll hit exploit and it will

00:21:47.500-->00:21:51.750
pass the attack against the
server. There you see the pop up
message over there. Uh the

00:21:51.750-->00:21:57.042
attacker is like, what the heck
and hits X, or the victim now.
And you see my meterpreter

00:21:57.042-->00:22:02.042
sessions is speeding up. I'm
going to do a quick sysinfo yeah
once upon a shell and I think no

00:22:04.708-->00:22:09.708
note popping notepad visually.
There it is. [applause] Alright,
onto the last one. Uh, Ghost

00:22:17.458-->00:22:22.583
RAT. How many of you have seen
or heard of Ghost RAT before?
Yeah, yeah, that I like that

00:22:22.583-->00:22:27.292
hands. That that's exactly like
what this guy is. It is the one
that's been around forever. Um,

00:22:27.292-->00:22:32.042
at least 10 years. It was really
originally written by a group
they called themselves C Ruffus

00:22:32.042-->00:22:38.833
Security Team. Also, known as
the uh, Red Wolf Security Team.
Uh, all, it's most often sited

00:22:38.833-->00:22:43.833
in attacks attacks that come out
of uh Asia region. Uh this image
is of C2 tool kit and again you

00:22:45.875-->00:22:50.375
right click on a victim and
there's your feature set. Kind
of a typical feature set.

00:22:50.375-->00:22:56.083
Nothing fancy. Um, this is, this
is almost in my opinion the uh
the measuring stick for RATs is

00:22:56.083-->00:23:00.333
uh is Ghost RAT. Like they
should at least be able to do
what it what it can do. And

00:23:00.333-->00:23:06.708
Ghost RAT, it has been cited in
so many articles. So many
articles. Um, these are just a

00:23:06.708-->00:23:11.375
few that I could fit on the
screen there. Um, most recently
is the one down on the bottom

00:23:11.375-->00:23:17.750
left which was just this year.
Uh, Ghost writer was being
spread this Eternal Blue. So

00:23:17.750-->00:23:23.208
it's still very popular. I think
the oldest one on there I I
can't find the updates but it's

00:23:23.208-->00:23:28.750
been around for at least 10
years. And again, i..it is uh
very easy to identify based on

00:23:28.750-->00:23:34.167
it's Pcat, based on it's uh
traffic. It has a signature 5
byte ghost pattern. The first 5

00:23:34.167-->00:23:40.083
characters in in each packet
message from the victim to the
C2 server or from the C2 server

00:23:40.083-->00:23:45.750
back to the victim. Now the
source code for Ghost RAT has
been leaked online and so many

00:23:45.750-->00:23:50.292
people or many attackers chai...
or know that the ghost is a big
red flag, so they'll try to

00:23:50.292-->00:23:55.375
change it to something else. Uh,
that second image is from a talk
uh Snorre gave where he these

00:23:55.375-->00:24:00.625
are different 5 byte characters
he's seen that change to. They
usually always only change the 5

00:24:00.625-->00:24:04.333
bytes just because that's
easiest and if you change it to
something longer it requires a

00:24:04.333-->00:24:08.958
lot of other changes in the
code, but even still it's very
easy to identify this. No matter

00:24:08.958-->00:24:14.042
what those 5 bytes are because
it's always followed by another
pattern of 2 integers and then a

00:24:14.042-->00:24:19.708
compressed buffer. So it's still
very easy to identify no matter
what the byte character is. And

00:24:19.708-->00:24:26.292
like Xtreme RAT it was it had a
very similar logic bug, but this
one is the other way around.

00:24:26.292-->00:24:31.625
When it's requesting a file from
its victim, it will tell the
victim, hey, give me your local

00:24:31.625-->00:24:37.208
file you know document user C
file dot dot, so I can save it
to this path. And I'm like oh

00:24:37.208-->00:24:41.333
that's very very nice. Here's
the data you can save it to that
path. Oh, by the way, I also

00:24:41.333-->00:24:48.000
have this second file that I'd
like you to save to your startup
folder. [laughter] >>And sure

00:24:48.000-->00:24:52.417
enough, if you know the path to
their startup file it will put
it right there. Now, the startup

00:24:52.417-->00:24:57.083
file cha..folder changes in
different versions of Windows,
so that's not the most reliable

00:24:57.083-->00:25:00.250
way. If you can endmap their
machine and tell what version
Windows that they have then,

00:25:00.250-->00:25:05.958
boom, you can do this. But, um,
I had to find a better way and
sure enough Ghost RAT has

00:25:05.958-->00:25:12.000
another..made it very handy for
me. It is uh vulnerable to a DLL
side load attack. Meaning if I

00:25:12.000-->00:25:18.542
just drop a file named O L E D L
G uh uh dynamic flyberry right
in that same folder, the local

00:25:18.542-->00:25:24.167
folder, then it will try to load
that file whenever Ghost starts
up and it's looking for only one

00:25:24.167-->00:25:29.667
function in that fol.. in that
uh DLL and that's O L E U I
BUSY. It's basically a function

00:25:29.667-->00:25:35.625
that can ask is the UI busy and
it expects to hear a 1 as a
return from that. I don't know,

00:25:35.625-->00:25:40.417
a 1 means not busy. It really
confusing, but anyways all you
have to do is make a you make

00:25:40.417-->00:25:47.042
your malware into a de..a DLL
have it export this one function
that just returns 1 all the time

00:25:47.042-->00:25:51.583
and Ghost will be none the
wiser. It doesn't break anything
doing that and the next time

00:25:51.583-->00:25:55.583
Ghost starts up it will load
your malware and or everytime
Ghost starts up it will load

00:25:55.583-->00:26:00.125
your malware. So that was cool,
but it requires dropping
something to disk and I I wasn't

00:26:00.125-->00:26:04.542
done picking on Ghost yet,
cause, Ghost, like I said has
the source code so I started

00:26:04.542-->00:26:09.375
looking at the source code and
right away this one stood out to
me. It didn't uh I mean I found

00:26:09.375-->00:26:14.250
it like in like an hour or two.
It's basicly this is in the
handling of the drive list as

00:26:14.250-->00:26:18.875
given from a victim. So that
when the victim says oh I have
drives C, D and E that's it's in

00:26:18.875-->00:26:24.417
a buffer right. And you'll
notice on that second line it
just assumes that the list it

00:26:24.417-->00:26:28.375
takes the length as given by the
victim rather than assuming the
length is less than its buffer

00:26:28.375-->00:26:34.250
size. So if I pass a list of
drives that are longer than the
usual max of 26 then I can

00:26:34.250-->00:26:40.125
overflow a buffer within this
particular C class. So the
buffer you're over I'm

00:26:40.125-->00:26:46.917
overflowing is in line 45, the
remote drive list. Which means I
can override any one of those um

00:26:46.917-->00:26:53.750
objects below inside the class.
A lot of those objects below are
other C classes. So I can

00:26:53.750-->00:26:58.500
override the pointer to those C
classes and then when enou...the
actual code flow tries to call a

00:26:58.500-->00:27:04.833
function in one of those C
classes it's going to end up
calling a pointer to, a pointer

00:27:04.833-->00:27:09.667
that I control that needs to
point to another pointer that
points to my code flow. So I

00:27:09.667-->00:27:13.500
basically have to set up a
pointer to a pointer to a
function that I want to run.

00:27:13.500-->00:27:18.958
Which is kind of messy. Uh
pointer to pointers aren't
really the funnest things to use

00:27:18.958-->00:27:24.208
for exploitation, but um they
work. If I had an information
disclosure where that if would

00:27:24.208-->00:27:27.958
give me the layout of memory,
that would make pointer to
pointer uh code uh flow pretty

00:27:27.958-->00:27:31.917
easy. But I'm lazy. I didn't
spend time looking for that and
I knew that I could just do a

00:27:31.917-->00:27:36.000
heap spray and having a really
good chance of landing in my own
heap. So that's what I did

00:27:36.000-->00:27:39.958
instead. I did the lazy man's
approach. Um, after I release
these modules I would love to

00:27:39.958-->00:27:45.333
see somebody maybe who's more
willing to do work than I am.
Um, heh,heh [laughing] make the

00:27:45.333-->00:27:50.792
the exploit a little bit cleaner
that way. But none the less,
that's what I did. Um, DEP would

00:27:50.792-->00:27:55.667
break this approach, but DEP
seems to break the the
executable. Whenever I would run

00:27:55.667-->00:28:00.458
Ghost RAT on a machine that
forced DEP's execution, or if I
opted in, Ghost would just

00:28:00.458-->00:28:04.792
crash. It wouldn't even run. So,
didn't need to really worry
about DEP. That could probably

00:28:04.792-->00:28:10.667
be changed but it wasn't a
problem for me. Now before I go
on to show that uh demo there,

00:28:10.667-->00:28:14.708
or the video. I wanted to talk
about uh something that uh
another researcher called kevin

00:28:14.708-->00:28:19.917
the hermit has does.... Or kev
the hermit. Um he has written a
number of decoders. So if you're

00:28:19.917-->00:28:24.792
given a piece of malware from
any one of of the these families
with the exception of PlugX you

00:28:24.792-->00:28:29.083
can run the script on it and it
will extract from that piece of
malware the C2 address that it

00:28:29.083-->00:28:33.750
would spent meant to call home
to along with some other
configuration data. So, if

00:28:33.750-->00:28:37.792
you're the victim of one of
these attacks and you find this
file you can pass it to a

00:28:37.792-->00:28:43.083
script, find the address of the
C2 server and then we can use
=metasploit to attack that C2

00:28:43.083-->00:28:48.500
server. But uh, if you're too
im..so if you're too impatient
to wait for yourself to be

00:28:48.500-->00:28:53.417
attacked you could always search
virus total for you know these
files for the servers to do a

00:28:53.417-->00:28:58.833
quick search for Ghost you know
RAT uh samples and find quite a
few. That a some may be old,

00:28:58.833-->00:29:05.167
some might not. Or Shodan was
very nice recently and added a
malware hunter feature that

00:29:05.167-->00:29:10.500
looks for C2 servers and one of
the C2 servers that they look
for is Ghost so we could just do

00:29:10.500-->00:29:15.500
a quick shopping list off of
Shodan and and have some fun.
Um, again, this demo is same

00:29:18.667-->00:29:23.667
setup. Attacker or or adversary
on the uh right, uh retaliator
on the left, um and this one I'm

00:29:25.958-->00:29:31.000
going to do just slightly
different in that I'm going to
build a malware sample from the

00:29:31.000-->00:29:36.750
Ghost RAT tool and I'm going to
pass that malware sample to the
retaliator and then using that

00:29:36.750-->00:29:42.000
script that uh kev the hermit
wrote extract the C2 info and
then use that to attack back. So

00:29:42.000-->00:29:46.375
I made the sample and then I
wasn't thinking and I closed
Ghost RAT. Oops, press the

00:29:46.375-->00:29:51.375
button. Alright, sorry I make
you watch it again. Yeah, so, I
make the sample and then I'm

00:29:53.750-->00:30:00.208
just going to drag it out of the
VM, uh, in the usual case where
I did a arrive via an email or a

00:30:00.208-->00:30:03.583
watering hole attack, but I'm
not going to go through all of
that. We all know how those

00:30:03.583-->00:30:09.750
work. So, I just dragged the
file out of the VM and then I'm
going to run the uh RAT decoder

00:30:09.750-->00:30:14.750
script on that sample. If I can
type fast. There it is, um and
it uh you can see on it the C2

00:30:18.542-->00:30:23.792
address and the port that that
that it's looking to go to. Uh,
I realized my mistakes. Started

00:30:23.792-->00:30:28.583
back up the uh Ghost Writer
server and on the left I'm
starting up an exploit and then

00:30:28.583-->00:30:34.708
I'm going to load my module um
set the remote address to the
remote address that we extracted

00:30:34.708-->00:30:39.708
from the malware itself.
[silence] Uh, just quick info
showing what's uh available. I

00:30:51.375-->00:30:56.542
don't want to click pause, I'll
try, I'll try. No I won't, I
don't dare. So if you find a C2

00:30:56.542-->00:31:02.000
server that doesn't use the
Ghost magic you can just set the
magic to be match whatever the

00:31:02.000-->00:31:07.250
Ghost the the server is and I
throw my exploit now it's going
to take just a minute because

00:31:07.250-->00:31:11.167
I'm spraying the heap so I'm
spending a lot of data sending a
lot of data over but they

00:31:11.167-->00:31:17.667
receive the uh stage the the
interpreter session starting.
I'm going to do the same set of

00:31:17.667-->00:31:24.333
commands. I'm going to, as soon
as it comes back. Eh..do the
sysinfo. Spawn a shell. Then,

00:31:24.333-->00:31:29.333
this time I'll plop calc just to
be different. Yes, there she is.
[clapping] On a Window's 10

00:31:35.042-->00:31:41.208
machine! [applause] So that begs
to question, then what? What do
we do now? And to be honest, I'm

00:31:41.208-->00:31:47.375
not quite sure. This is an area
that hasn't really been
discussed, at least publicly.

00:31:47.375-->00:31:52.375
But, here's what I would suggest
maybe, and and maybe these are
bad ideas. I'm not sure. Um,

00:31:54.750-->00:31:59.792
somebody else sh..could decide.
I don't know. But uh one of the
first things I would be

00:31:59.792-->00:32:04.000
interested in doing would be
Netstat, because Netstat would
tell you all other connections

00:32:04.000-->00:32:08.667
to that box. If there are other
victims behi..besides yourself
they would be they would show up

00:32:08.667-->00:32:13.000
inside of this Netstat listing,
so you could find out who else
is targeted. Um, everyone of

00:32:13.000-->00:32:18.500
these C2 tools has a folder for
the files that have been
downloaded from victims and I

00:32:18.500-->00:32:22.208
would look at that. I would see
what files have they pulled from
other victims. What were they

00:32:22.208-->00:32:27.208
interested in? What did they
pull from you? Um, also, maybe
you would want to install some

00:32:29.458-->00:32:32.500
sort of persistence so you can
stick around longer. Maybe you
would want to install a

00:32:32.500-->00:32:36.167
keylogger to see what else
they're up to. If they're dumb
enough to log into Facebook from

00:32:36.167-->00:32:42.708
their uh ops machine. Who knows?
A lot of different things that
are optional to do, but whatever

00:32:42.708-->00:32:49.542
you do I highly suggest you
don't go the revenge route, but
you sit quiet and you listen

00:32:49.542-->00:32:53.792
because I feel like that's where
the most value in these are.
Right? The more you observe

00:32:53.792-->00:33:00.792
about your adversary, the the
more likely you are to to win in
the long run. So with that,

00:33:00.792-->00:33:05.792
that's about all I had. I
appreciate you guys coming and
and spending the time here. This

00:33:05.792-->00:33:10.792
URL [applause] Thank you.
[applause] Thank you. That URL
is where I currently have a fork

00:33:18.708-->00:33:23.708
of the metasploit until I get
them um pulled up into the main
branch. And it depends on how

00:33:23.708-->00:33:27.583
well I am at at meeting all the
checkmarks before that will
happen. So and you can grab it

00:33:27.583-->00:33:32.583
there until they're released.
Again, thanks anyways. >>Woo!
[applause]

