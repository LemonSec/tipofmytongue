1
00:00:04,080 --> 00:00:06,640
hello and welcome to project obsidian

2
00:00:06,640 --> 00:00:08,960
this station is a cyber threat hunting

3
00:00:08,960 --> 00:00:10,240
station

4
00:00:10,240 --> 00:00:12,400
the title of this section is called

5
00:00:12,400 --> 00:00:14,080
sniffing compromise

6
00:00:14,080 --> 00:00:16,640
hunting for bloodhound presented by me

7
00:00:16,640 --> 00:00:19,520
cereal or serial killer

8
00:00:19,520 --> 00:00:21,920
a little bit about myself i've been in

9
00:00:21,920 --> 00:00:25,599
the security space for about five years

10
00:00:25,599 --> 00:00:28,000
i also enjoy playing video games i enjoy

11
00:00:28,000 --> 00:00:31,199
music i used to love playing live as a

12
00:00:31,199 --> 00:00:32,479
dj

13
00:00:32,479 --> 00:00:34,960
when i'm not doing those things i am

14
00:00:34,960 --> 00:00:37,600
trying to expand my knowledge of

15
00:00:37,600 --> 00:00:40,800
all things security technology

16
00:00:40,800 --> 00:00:43,680
and life in general

17
00:00:43,680 --> 00:00:46,320
in this section we will learn

18
00:00:46,320 --> 00:00:48,480
briefly about threat hunting or at least

19
00:00:48,480 --> 00:00:50,879
an intro into threat hunting

20
00:00:50,879 --> 00:00:53,440
what is bloodhound

21
00:00:53,440 --> 00:00:56,719
what it does what it's used for

22
00:00:56,719 --> 00:00:58,559
we'll also be talking about what the

23
00:00:58,559 --> 00:01:01,280
ingester is

24
00:01:01,280 --> 00:01:04,080
what it actually does when the investors

25
00:01:04,080 --> 00:01:05,199
ran

26
00:01:05,199 --> 00:01:07,680
a brief overview of the ui

27
00:01:07,680 --> 00:01:11,119
not too much but

28
00:01:11,600 --> 00:01:13,119
yeah

29
00:01:13,119 --> 00:01:15,280
we will also be covering how to hunt for

30
00:01:15,280 --> 00:01:17,439
bloodhound right and we'll be using

31
00:01:17,439 --> 00:01:19,360
network and host level activity to

32
00:01:19,360 --> 00:01:22,159
detect this

33
00:01:24,320 --> 00:01:26,960
so threat hunting what is it

34
00:01:26,960 --> 00:01:29,920
to me threat hunting is a practice to

35
00:01:29,920 --> 00:01:32,240
proactively look and search and

36
00:01:32,240 --> 00:01:34,640
understand what you know and what you

37
00:01:34,640 --> 00:01:37,280
don't know within an environment

38
00:01:37,280 --> 00:01:38,159
right

39
00:01:38,159 --> 00:01:40,400
you can use start hunting to confirm

40
00:01:40,400 --> 00:01:42,320
that

41
00:01:42,320 --> 00:01:44,000
windows event logs are actually going to

42
00:01:44,000 --> 00:01:46,000
your scene right that would be an

43
00:01:46,000 --> 00:01:47,520
unknown

44
00:01:47,520 --> 00:01:49,520
and unknown would be

45
00:01:49,520 --> 00:01:51,680
if somebody within your organization had

46
00:01:51,680 --> 00:01:54,799
to turn off the shipping of those logs

47
00:01:54,799 --> 00:01:57,280
from windows to your seam

48
00:01:57,280 --> 00:01:59,759
right and you could use threat hunting

49
00:01:59,759 --> 00:02:01,520
to discover that

50
00:02:01,520 --> 00:02:03,680
or if some of the data

51
00:02:03,680 --> 00:02:07,040
is misconfigured corrupted

52
00:02:07,040 --> 00:02:09,199
any of that kind of stuff

53
00:02:09,199 --> 00:02:12,079
now that we have a

54
00:02:12,640 --> 00:02:14,000
short understanding of what threat

55
00:02:14,000 --> 00:02:15,840
hunting is

56
00:02:15,840 --> 00:02:18,720
let's talk about bloodhound

57
00:02:18,720 --> 00:02:22,560
so bloodhound is a tool used by many

58
00:02:22,560 --> 00:02:24,160
security professionals

59
00:02:24,160 --> 00:02:26,319
they're either on the red team or blue

60
00:02:26,319 --> 00:02:27,360
team

61
00:02:27,360 --> 00:02:29,440
but it's also used by adversaries and

62
00:02:29,440 --> 00:02:30,959
the reason for this is because

63
00:02:30,959 --> 00:02:32,800
bloodhound gives

64
00:02:32,800 --> 00:02:34,480
a great view

65
00:02:34,480 --> 00:02:37,040
of the data when it comes to windows

66
00:02:37,040 --> 00:02:39,280
active directory

67
00:02:39,280 --> 00:02:41,680
so it's used for enumeration it gives

68
00:02:41,680 --> 00:02:42,480
you

69
00:02:42,480 --> 00:02:44,959
access to information like

70
00:02:44,959 --> 00:02:47,120
user groups

71
00:02:47,120 --> 00:02:49,760
workstations servers that are connected

72
00:02:49,760 --> 00:02:52,879
to a windows 80

73
00:02:52,879 --> 00:02:54,800
it also gives you the ability to query

74
00:02:54,800 --> 00:02:58,959
this data with its own query language

75
00:02:58,959 --> 00:03:00,720
so bloodhound is

76
00:03:00,720 --> 00:03:04,480
comprised of two components the ui or

77
00:03:04,480 --> 00:03:07,040
the gui the graphic user interface

78
00:03:07,040 --> 00:03:09,770
which this is usually installed on

79
00:03:09,770 --> 00:03:11,200
[Music]

80
00:03:11,200 --> 00:03:12,720
workstations

81
00:03:12,720 --> 00:03:14,720
that are ingesting the data and this is

82
00:03:14,720 --> 00:03:16,959
what it looks like there is a search at

83
00:03:16,959 --> 00:03:18,480
the top left

84
00:03:18,480 --> 00:03:19,440
each

85
00:03:19,440 --> 00:03:21,280
thing within an ad is represented as a

86
00:03:21,280 --> 00:03:22,239
node

87
00:03:22,239 --> 00:03:24,400
so here we have three user nodes on the

88
00:03:24,400 --> 00:03:26,319
left hand side

89
00:03:26,319 --> 00:03:31,280
and a group node on the right hand side

90
00:03:31,680 --> 00:03:32,480
the

91
00:03:32,480 --> 00:03:34,720
lines between them is a relationship

92
00:03:34,720 --> 00:03:36,319
between them

93
00:03:36,319 --> 00:03:38,879
so you can query for

94
00:03:38,879 --> 00:03:40,560
misconfigurations and relationships

95
00:03:40,560 --> 00:03:42,560
between different nodes or different

96
00:03:42,560 --> 00:03:46,000
ou's users servers

97
00:03:46,000 --> 00:03:48,799
so on and so forth

98
00:03:48,799 --> 00:03:51,040
and you can see this picture on the

99
00:03:51,040 --> 00:03:53,040
bloodhound read the docs

100
00:03:53,040 --> 00:03:55,519
website

101
00:03:55,840 --> 00:03:57,280
the other part

102
00:03:57,280 --> 00:04:02,400
is the ingester or the collector right

103
00:04:02,879 --> 00:04:06,159
so the ingester the collector right it's

104
00:04:06,159 --> 00:04:07,120
a

105
00:04:07,120 --> 00:04:08,640
usually binary

106
00:04:08,640 --> 00:04:12,319
egg or a script

107
00:04:12,319 --> 00:04:13,680
there are

108
00:04:13,680 --> 00:04:14,799
two

109
00:04:14,799 --> 00:04:17,680
there's like three methods of ingesting

110
00:04:17,680 --> 00:04:19,600
the ones that we are currently looking

111
00:04:19,600 --> 00:04:22,240
at is the dot exe which is called sharp

112
00:04:22,240 --> 00:04:23,919
hound

113
00:04:23,919 --> 00:04:25,680
and the powershell script which is

114
00:04:25,680 --> 00:04:28,680
sharppound.ps1

115
00:04:29,840 --> 00:04:31,919
the ingestor or collector what it does

116
00:04:31,919 --> 00:04:34,880
it queries domain controllers

117
00:04:34,880 --> 00:04:36,800
via ldap s

118
00:04:36,800 --> 00:04:38,400
and it's trying to gather information

119
00:04:38,400 --> 00:04:41,040
using windows apis

120
00:04:41,040 --> 00:04:43,520
for user information security groups

121
00:04:43,520 --> 00:04:47,440
domain-driven workstations and servers

122
00:04:47,600 --> 00:04:49,440
the other thing that it does is that it

123
00:04:49,440 --> 00:04:52,080
connects to workstations that are online

124
00:04:52,080 --> 00:04:56,560
and it talks to them via rpc via smb and

125
00:04:56,560 --> 00:04:58,960
what it's trying to collect is user

126
00:04:58,960 --> 00:05:01,360
sessions logged on users

127
00:05:01,360 --> 00:05:03,680
more workstation information

128
00:05:03,680 --> 00:05:06,320
and local group members

129
00:05:06,320 --> 00:05:09,039
now that we have a

130
00:05:09,039 --> 00:05:11,199
good understanding of what

131
00:05:11,199 --> 00:05:14,240
bloodhound is and the various parts of

132
00:05:14,240 --> 00:05:16,160
it and the components of it

133
00:05:16,160 --> 00:05:18,320
let's talk about how it's used or when

134
00:05:18,320 --> 00:05:19,600
it's used

135
00:05:19,600 --> 00:05:21,759
usually it's used

136
00:05:21,759 --> 00:05:23,360
by adversaries

137
00:05:23,360 --> 00:05:25,280
after compromise has happened or once

138
00:05:25,280 --> 00:05:26,880
they get into a network

139
00:05:26,880 --> 00:05:28,720
let's say they get access to a server or

140
00:05:28,720 --> 00:05:30,240
workstation

141
00:05:30,240 --> 00:05:31,919
this is when they would run bloodhound

142
00:05:31,919 --> 00:05:33,919
to see

143
00:05:33,919 --> 00:05:35,440
if they can find

144
00:05:35,440 --> 00:05:36,670
a misconfiguration

145
00:05:36,670 --> 00:05:38,080
[Music]

146
00:05:38,080 --> 00:05:40,400
an overly permissive

147
00:05:40,400 --> 00:05:42,960
security group or

148
00:05:42,960 --> 00:05:46,639
a user that has access to a lot

149
00:05:46,639 --> 00:05:48,479
any of those things

150
00:05:48,479 --> 00:05:51,600
the other way that it's used

151
00:05:51,600 --> 00:05:54,560
is by security teams and they do an

152
00:05:54,560 --> 00:05:57,520
audit of a windows ad or at least

153
00:05:57,520 --> 00:05:58,880
some of the organizations i've worked

154
00:05:58,880 --> 00:06:01,840
with that's what they do

155
00:06:01,840 --> 00:06:03,360
but

156
00:06:03,360 --> 00:06:05,360
for us what this means is that if we are

157
00:06:05,360 --> 00:06:08,400
hunting for bloodhound we are assuming

158
00:06:08,400 --> 00:06:11,600
that the adversary has gotten it

159
00:06:11,600 --> 00:06:14,800
right and we want to see we want to know

160
00:06:14,800 --> 00:06:17,600
if they have

161
00:06:18,160 --> 00:06:20,880
bran bloodhound or if they're

162
00:06:20,880 --> 00:06:23,199
if they have it

163
00:06:23,199 --> 00:06:26,080
what how can we tell if they

164
00:06:26,080 --> 00:06:27,039
will

165
00:06:27,039 --> 00:06:28,639
right like what kind of detections we

166
00:06:28,639 --> 00:06:31,360
can set up there

167
00:06:31,759 --> 00:06:33,280
so

168
00:06:33,280 --> 00:06:34,560
now that we've

169
00:06:34,560 --> 00:06:36,560
talked about bloodhound and

170
00:06:36,560 --> 00:06:39,120
how it's being used and a little bit of

171
00:06:39,120 --> 00:06:42,160
about what threat hunting is

172
00:06:42,160 --> 00:06:44,960
i say let's go hunt let's go find this

173
00:06:44,960 --> 00:06:48,960
within the data set that we have

174
00:06:48,960 --> 00:06:51,440
i didn't want to use too many slides so

175
00:06:51,440 --> 00:06:53,039
this is going to be

176
00:06:53,039 --> 00:06:57,280
a somewhat pre-recorded live demo

177
00:06:58,080 --> 00:07:01,120
so let's go hunting

178
00:07:01,120 --> 00:07:02,639
okay

179
00:07:02,639 --> 00:07:06,080
we are now inside my

180
00:07:06,080 --> 00:07:08,319
virtual machine that has access to our

181
00:07:08,319 --> 00:07:09,919
splunk instance that's containing the

182
00:07:09,919 --> 00:07:11,199
data that we're going to be working with

183
00:07:11,199 --> 00:07:13,280
today

184
00:07:13,280 --> 00:07:14,639
so on the top

185
00:07:14,639 --> 00:07:17,440
left hand side under apps we have search

186
00:07:17,440 --> 00:07:18,960
and reporting this is where we want to

187
00:07:18,960 --> 00:07:22,400
go so that we can conduct searches

188
00:07:22,400 --> 00:07:24,400
well the first thing we want to know

189
00:07:24,400 --> 00:07:25,759
is

190
00:07:25,759 --> 00:07:27,599
what kind of indexes or data we're

191
00:07:27,599 --> 00:07:28,960
working with

192
00:07:28,960 --> 00:07:31,039
so we're going to go over here and go to

193
00:07:31,039 --> 00:07:33,759
date range we're going to choose between

194
00:07:33,759 --> 00:07:36,880
and we're going to select

195
00:07:36,880 --> 00:07:39,759
february 18th

196
00:07:39,759 --> 00:07:40,110
through

197
00:07:40,110 --> 00:07:42,240
[Music]

198
00:07:42,240 --> 00:07:43,520
the 20th

199
00:07:43,520 --> 00:07:45,680
i'm doing this because this is when we

200
00:07:45,680 --> 00:07:48,400
ran our simulation

201
00:07:48,400 --> 00:07:52,400
the simulation is just a

202
00:07:53,440 --> 00:07:55,120
an activity

203
00:07:55,120 --> 00:07:57,199
when

204
00:07:57,199 --> 00:07:59,120
somebody within your organization or a

205
00:07:59,120 --> 00:08:01,199
third party comes in and pretends that

206
00:08:01,199 --> 00:08:03,840
they're not are an adversary

207
00:08:03,840 --> 00:08:05,759
it's a good way to test your detections

208
00:08:05,759 --> 00:08:08,639
and your threat hunting

209
00:08:09,120 --> 00:08:13,680
alrighty so let's start with

210
00:08:13,680 --> 00:08:16,400
what i'm entering here

211
00:08:16,400 --> 00:08:19,039
is

212
00:08:21,599 --> 00:08:22,720
a

213
00:08:22,720 --> 00:08:27,080
query that i found online

214
00:08:29,199 --> 00:08:30,400
to get

215
00:08:30,400 --> 00:08:33,520
all the indexes

216
00:08:34,000 --> 00:08:35,039
and

217
00:08:35,039 --> 00:08:39,880
that exists within this time frame

218
00:08:47,440 --> 00:08:48,880
awesome

219
00:08:48,880 --> 00:08:50,959
so here we see we have

220
00:08:50,959 --> 00:08:55,040
html main os query p caps summary

221
00:08:55,040 --> 00:08:57,839
circada syslog system on

222
00:08:57,839 --> 00:09:02,560
velociraptor wine event longs and zeke

223
00:09:03,839 --> 00:09:05,200
awesome

224
00:09:05,200 --> 00:09:06,240
alrighty

225
00:09:06,240 --> 00:09:07,920
now that we know what kind of data we

226
00:09:07,920 --> 00:09:09,440
have available to us

227
00:09:09,440 --> 00:09:12,640
let's start with a simple

228
00:09:12,640 --> 00:09:16,240
query let's start with

229
00:09:16,640 --> 00:09:19,199
bloodhound

230
00:09:20,480 --> 00:09:25,120
okay so we get a singular hit

231
00:09:25,120 --> 00:09:29,120
this happened on saturday february 19th

232
00:09:29,120 --> 00:09:32,160
but if we look at this

233
00:09:32,240 --> 00:09:34,640
this is

234
00:09:34,640 --> 00:09:36,640
not well parsed

235
00:09:36,640 --> 00:09:39,920
so there's probably a problem here

236
00:09:39,920 --> 00:09:41,839
right

237
00:09:41,839 --> 00:09:42,800
okay

238
00:09:42,800 --> 00:09:44,240
so we see

239
00:09:44,240 --> 00:09:46,640
that this is unparsed right

240
00:09:46,640 --> 00:09:47,600
well

241
00:09:47,600 --> 00:09:49,040
i always like to take notes on

242
00:09:49,040 --> 00:09:51,040
everything that i do

243
00:09:51,040 --> 00:09:54,399
especially for threat hunting

244
00:09:54,720 --> 00:09:57,440
like notes are very important so let's

245
00:09:57,440 --> 00:09:59,839
go over here to visual studio code and

246
00:09:59,839 --> 00:10:03,320
let's start a note

247
00:10:09,600 --> 00:10:10,480
okay

248
00:10:10,480 --> 00:10:11,839
i like to use markdown for everything

249
00:10:11,839 --> 00:10:13,920
that i do

250
00:10:13,920 --> 00:10:16,560
you choose

251
00:10:16,959 --> 00:10:19,040
your preferred method

252
00:10:19,040 --> 00:10:22,480
so what did we do we ran

253
00:10:30,399 --> 00:10:33,839
we ran bloodhound

254
00:10:34,800 --> 00:10:37,920
and the result

255
00:10:39,279 --> 00:10:40,160
is

256
00:10:40,160 --> 00:10:43,560
an unparsed

257
00:10:43,920 --> 00:10:46,920
document

258
00:10:48,560 --> 00:10:51,839
but we do get a host name right

259
00:10:51,839 --> 00:10:55,600
so let's uh save that

260
00:10:56,160 --> 00:10:59,279
let me do get a closed

261
00:10:59,279 --> 00:11:01,360
not

262
00:11:13,200 --> 00:11:14,720
it's available

263
00:11:14,720 --> 00:11:18,880
ran in memory or it's ran from disk

264
00:11:18,880 --> 00:11:20,959
in order to run it from disk or from

265
00:11:20,959 --> 00:11:24,719
memory we need to download something

266
00:11:27,040 --> 00:11:28,800
so

267
00:11:28,800 --> 00:11:30,320
i remember

268
00:11:30,320 --> 00:11:31,120
back

269
00:11:31,120 --> 00:11:33,120
when we did the

270
00:11:33,120 --> 00:11:33,920
other

271
00:11:33,920 --> 00:11:35,519
search

272
00:11:35,519 --> 00:11:36,320
that

273
00:11:36,320 --> 00:11:39,279
we had cis spawn and win event logs i

274
00:11:39,279 --> 00:11:40,240
know

275
00:11:40,240 --> 00:11:42,000
from working with sysmon and windeven

276
00:11:42,000 --> 00:11:45,519
vlogs that cis1 has an event id

277
00:11:45,519 --> 00:11:47,279
for file creation

278
00:11:47,279 --> 00:11:50,240
so let's see if we can find that

279
00:11:50,240 --> 00:11:52,639
first let's figure out

280
00:11:52,639 --> 00:11:56,399
what do we have inside those indexes so

281
00:11:56,399 --> 00:11:58,399
here i put index

282
00:11:58,399 --> 00:12:01,440
in so this makes it an array that it's

283
00:12:01,440 --> 00:12:04,320
searching in both

284
00:12:05,040 --> 00:12:07,760
uh another way that you could do this

285
00:12:07,760 --> 00:12:11,519
is by using or so you could do index

286
00:12:11,519 --> 00:12:14,519
equals

287
00:12:15,639 --> 00:12:20,000
sysmon or capital or

288
00:12:20,000 --> 00:12:21,680
index

289
00:12:21,680 --> 00:12:24,800
equals when

290
00:12:25,440 --> 00:12:28,480
this will give us the same results

291
00:12:28,480 --> 00:12:30,480
i just prefer the other way that i did

292
00:12:30,480 --> 00:12:32,560
it

293
00:12:33,440 --> 00:12:37,320
it's much cleaner to read

294
00:12:38,800 --> 00:12:41,040
alrighty so looking at these events we

295
00:12:41,040 --> 00:12:44,079
see that this is a file created

296
00:12:44,079 --> 00:12:45,680
it has

297
00:12:45,680 --> 00:12:48,480
these fields a directory an extension a

298
00:12:48,480 --> 00:12:50,320
name a path

299
00:12:50,320 --> 00:12:52,079
it seems useful for what we're trying to

300
00:12:52,079 --> 00:12:54,319
get

301
00:12:54,720 --> 00:12:56,079
but this

302
00:12:56,079 --> 00:12:58,160
i don't want to keep looking through

303
00:12:58,160 --> 00:13:00,000
every single event like this so let's

304
00:13:00,000 --> 00:13:02,320
see if we can come up with another query

305
00:13:02,320 --> 00:13:04,079
that will help us and clear things up a

306
00:13:04,079 --> 00:13:06,560
bit

307
00:13:06,560 --> 00:13:09,839
alrighty so we can do index in

308
00:13:09,839 --> 00:13:11,519
and then

309
00:13:11,519 --> 00:13:13,760
let's do stats

310
00:13:13,760 --> 00:13:16,560
let's get a count by

311
00:13:16,560 --> 00:13:17,600
when

312
00:13:17,600 --> 00:13:20,639
along with that event id so this will

313
00:13:20,639 --> 00:13:22,320
give us the

314
00:13:22,320 --> 00:13:24,560
the count like how many times a certain

315
00:13:24,560 --> 00:13:26,560
windows event log id

316
00:13:26,560 --> 00:13:30,560
has happened during this time period

317
00:13:32,079 --> 00:13:36,560
okay so we get a bunch of them here

318
00:13:37,120 --> 00:13:40,320
with event id one we got three thousand

319
00:13:40,320 --> 00:13:42,160
oh no five thousand

320
00:13:42,160 --> 00:13:44,560
keeps going up

321
00:13:44,560 --> 00:13:46,160
so we'll give this a little bit for it

322
00:13:46,160 --> 00:13:48,399
to finish

323
00:13:48,399 --> 00:13:51,279
alrighty so we see

324
00:13:51,279 --> 00:13:54,480
a lot of different windows event ids

325
00:13:54,480 --> 00:13:56,240
here

326
00:13:56,240 --> 00:13:57,199
um

327
00:13:57,199 --> 00:13:59,120
but i specifically said sysmon right so

328
00:13:59,120 --> 00:14:01,279
let's let's see if we can figure out

329
00:14:01,279 --> 00:14:03,279
system on

330
00:14:03,279 --> 00:14:06,880
file create

331
00:14:07,760 --> 00:14:09,279
event

332
00:14:09,279 --> 00:14:12,320
event id

333
00:14:12,320 --> 00:14:13,920
oh

334
00:14:13,920 --> 00:14:15,440
there we go so it looks like cis mount

335
00:14:15,440 --> 00:14:19,360
event id 11 is for file create

336
00:14:19,360 --> 00:14:22,560
okay taking this let's go

337
00:14:22,560 --> 00:14:23,600
and

338
00:14:23,600 --> 00:14:26,240
put this into our search

339
00:14:26,240 --> 00:14:27,920
right

340
00:14:27,920 --> 00:14:30,240
ready

341
00:14:30,240 --> 00:14:31,390
so we want to

342
00:14:31,390 --> 00:14:33,360
[Music]

343
00:14:33,360 --> 00:14:35,519
so we can append this to

344
00:14:35,519 --> 00:14:38,639
the top of our search so winlong.event

345
00:14:38,639 --> 00:14:40,639
underscore id equals 11. that means

346
00:14:40,639 --> 00:14:42,959
we're looking specifically for

347
00:14:42,959 --> 00:14:47,760
windows system on event id 11.

348
00:14:48,880 --> 00:14:52,240
let's see how many we get

349
00:14:52,320 --> 00:14:54,240
okay look looks like we get

350
00:14:54,240 --> 00:14:57,760
around 8 000 events

351
00:14:57,760 --> 00:14:59,279
seven thousand

352
00:14:59,279 --> 00:15:02,720
i know 77

353
00:15:02,720 --> 00:15:05,440
thousand events okay that's quite a bit

354
00:15:05,440 --> 00:15:07,920
of events

355
00:15:07,920 --> 00:15:09,120
okay

356
00:15:09,120 --> 00:15:12,320
we can look at the events over here

357
00:15:12,320 --> 00:15:14,800
that's the same we got

358
00:15:14,800 --> 00:15:16,880
file

359
00:15:16,880 --> 00:15:19,600
information

360
00:15:20,240 --> 00:15:22,800
let's see if we can make this into a

361
00:15:22,800 --> 00:15:25,199
pretty table that will help us identify

362
00:15:25,199 --> 00:15:28,639
a bit more as what's going on here

363
00:15:28,639 --> 00:15:32,480
okay let's add the table

364
00:15:32,959 --> 00:15:36,719
so what things do we want

365
00:15:37,120 --> 00:15:39,600
through table

366
00:15:39,600 --> 00:15:41,680
and i'm pretty curious about this

367
00:15:41,680 --> 00:15:43,519
information

368
00:15:43,519 --> 00:15:46,320
so let's do

369
00:15:46,839 --> 00:15:50,079
host.name let's see where it lives

370
00:15:50,079 --> 00:15:52,399
file.name

371
00:15:52,399 --> 00:15:55,279
file dot path

372
00:15:55,279 --> 00:15:59,040
i think that's good for now to start

373
00:16:00,959 --> 00:16:05,439
okay we get a bunch of

374
00:16:05,759 --> 00:16:07,040
events

375
00:16:07,040 --> 00:16:10,000
a lot of dat files

376
00:16:13,199 --> 00:16:16,079
looks like some sort of health check

377
00:16:16,079 --> 00:16:18,560
that's cool

378
00:16:20,880 --> 00:16:22,560
all right well

379
00:16:22,560 --> 00:16:24,000
we see that there

380
00:16:24,000 --> 00:16:26,160
is a

381
00:16:26,160 --> 00:16:28,800
file dot extension

382
00:16:28,800 --> 00:16:30,880
so maybe we can use that

383
00:16:30,880 --> 00:16:33,120
to our benefit right we're just looking

384
00:16:33,120 --> 00:16:36,720
for exes and ps1 which is powershell

385
00:16:36,720 --> 00:16:38,079
scripts

386
00:16:38,079 --> 00:16:40,399
so let's go back up here

387
00:16:40,399 --> 00:16:42,240
and let's add

388
00:16:42,240 --> 00:16:44,079
file dot

389
00:16:44,079 --> 00:16:46,959
extension

390
00:16:46,959 --> 00:16:48,320
all right let's do the same thing let's

391
00:16:48,320 --> 00:16:50,959
do in

392
00:16:50,959 --> 00:16:52,880
exe

393
00:16:52,880 --> 00:16:54,639
and

394
00:16:54,639 --> 00:16:56,880
ps1

395
00:16:56,880 --> 00:16:59,120
right

396
00:16:59,199 --> 00:17:01,519
let's see

397
00:17:01,519 --> 00:17:04,480
right that's much better we got four

398
00:17:04,480 --> 00:17:06,559
thousand thousand events a little bit

399
00:17:06,559 --> 00:17:08,319
over

400
00:17:08,319 --> 00:17:09,280
we get

401
00:17:09,280 --> 00:17:12,240
a bunch of information on exes a lot of

402
00:17:12,240 --> 00:17:15,280
temp files

403
00:17:16,319 --> 00:17:19,599
probably updates who knows

404
00:17:19,599 --> 00:17:21,520
but this is a much smaller data set that

405
00:17:21,520 --> 00:17:24,480
we can work with let's see if we can

406
00:17:24,480 --> 00:17:26,720
continue scoping down our search and

407
00:17:26,720 --> 00:17:30,240
seeing if we can figure something out

408
00:17:30,720 --> 00:17:34,000
if you remember we did take notes

409
00:17:34,000 --> 00:17:35,760
so let's see if we can use this

410
00:17:35,760 --> 00:17:38,320
to help us with our search

411
00:17:38,320 --> 00:17:40,160
well we have this host name

412
00:17:40,160 --> 00:17:42,160
that we know

413
00:17:42,160 --> 00:17:46,480
showed a singular log

414
00:17:46,480 --> 00:17:48,160
that

415
00:17:48,160 --> 00:17:49,760
had bloodhound in it

416
00:17:49,760 --> 00:17:51,440
so

417
00:17:51,440 --> 00:17:56,080
let's why not take this and uh

418
00:17:56,480 --> 00:18:00,039
put it in our search

419
00:18:00,320 --> 00:18:02,000
all right

420
00:18:02,000 --> 00:18:03,039
this is a

421
00:18:03,039 --> 00:18:06,080
place that we suspect

422
00:18:06,160 --> 00:18:07,440
let's see

423
00:18:07,440 --> 00:18:09,200
okay

424
00:18:09,200 --> 00:18:11,440
let me get some results

425
00:18:11,440 --> 00:18:13,120
700

426
00:18:13,120 --> 00:18:15,200
130 ish

427
00:18:15,200 --> 00:18:17,120
not ben

428
00:18:17,120 --> 00:18:18,960
but still looking at

429
00:18:18,960 --> 00:18:21,440
all this

430
00:18:24,160 --> 00:18:27,280
nothing really pops out

431
00:18:27,280 --> 00:18:28,960
we can

432
00:18:28,960 --> 00:18:31,039
go through all this

433
00:18:31,039 --> 00:18:31,919
or

434
00:18:31,919 --> 00:18:32,610
we can

435
00:18:32,610 --> 00:18:35,360
[Music]

436
00:18:35,360 --> 00:18:36,320
uh

437
00:18:36,320 --> 00:18:37,280
you know

438
00:18:37,280 --> 00:18:40,918
look for file name

439
00:18:44,880 --> 00:18:47,280
and we can do something like

440
00:18:47,280 --> 00:18:50,280
bloodhound

441
00:18:50,480 --> 00:18:53,720
dot exe

442
00:18:56,000 --> 00:18:59,360
oh but is it bloodhound.exe

443
00:18:59,360 --> 00:19:03,360
i don't think so let's go look at

444
00:19:03,360 --> 00:19:04,720
the github

445
00:19:04,720 --> 00:19:06,320
let's go see what the collector is

446
00:19:06,320 --> 00:19:09,799
actually called

447
00:19:10,720 --> 00:19:12,720
blue we have these collectors here

448
00:19:12,720 --> 00:19:17,039
oh it's sharp hound let's copy that

449
00:19:17,039 --> 00:19:20,240
let's go over here

450
00:19:20,559 --> 00:19:23,280
replace this

451
00:19:23,679 --> 00:19:27,039
see if we could get any results

452
00:19:27,039 --> 00:19:28,640
no

453
00:19:28,640 --> 00:19:29,840
the other one is

454
00:19:29,840 --> 00:19:31,840
dot ps1

455
00:19:31,840 --> 00:19:35,559
let's give that a shot

456
00:19:38,160 --> 00:19:39,679
doesn't look like it

457
00:19:39,679 --> 00:19:40,960
maybe it's case

458
00:19:40,960 --> 00:19:42,240
sensitive

459
00:19:42,240 --> 00:19:44,720
or insensitive who knows

460
00:19:44,720 --> 00:19:48,160
let's try it try it all

461
00:19:50,840 --> 00:19:52,720
okay

462
00:19:52,720 --> 00:19:55,600
so looking at this doesn't seem

463
00:19:55,600 --> 00:19:57,360
like sharp hound

464
00:19:57,360 --> 00:19:59,440
was downloaded or

465
00:19:59,440 --> 00:20:00,640
created

466
00:20:00,640 --> 00:20:03,120
on the system

467
00:20:03,120 --> 00:20:07,840
but we do get a lot of different

468
00:20:08,559 --> 00:20:10,799
events here right

469
00:20:10,799 --> 00:20:12,240
so

470
00:20:12,240 --> 00:20:14,159
myself being a

471
00:20:14,159 --> 00:20:16,240
detection engineer

472
00:20:16,240 --> 00:20:18,880
something that i would set up here is

473
00:20:18,880 --> 00:20:21,200
hey i want to

474
00:20:21,200 --> 00:20:22,559
know

475
00:20:22,559 --> 00:20:25,480
if and when

476
00:20:25,480 --> 00:20:30,000
sharpound.exe or sharppound.ps1

477
00:20:30,000 --> 00:20:33,600
is being ran within my environment

478
00:20:33,600 --> 00:20:35,600
so we could do something like this where

479
00:20:35,600 --> 00:20:37,520
we have this type of search

480
00:20:37,520 --> 00:20:40,080
maybe not this host name

481
00:20:40,080 --> 00:20:43,120
right but we would look for

482
00:20:43,120 --> 00:20:44,720
file

483
00:20:44,720 --> 00:20:46,000
name

484
00:20:46,000 --> 00:20:48,000
in

485
00:20:48,000 --> 00:20:48,910
and we can do

486
00:20:48,910 --> 00:20:51,520
[Music]

487
00:20:51,520 --> 00:20:53,510
sharp hound.exe

488
00:20:53,510 --> 00:20:54,960
[Music]

489
00:20:54,960 --> 00:20:56,799
sharp

490
00:20:56,799 --> 00:20:59,760
ps1

491
00:21:01,280 --> 00:21:04,799
and then if this ever returns a result

492
00:21:04,799 --> 00:21:07,600
hey notified

493
00:21:09,200 --> 00:21:10,720
so

494
00:21:10,720 --> 00:21:13,840
since this is a pretty good

495
00:21:13,840 --> 00:21:15,039
search

496
00:21:15,039 --> 00:21:19,600
i'm gonna put this over here in my notes

497
00:21:22,320 --> 00:21:24,920
or file creation

498
00:21:24,920 --> 00:21:28,049
[Music]

499
00:21:30,240 --> 00:21:33,679
because this is markdown

500
00:21:35,039 --> 00:21:37,600
i'm gonna do

501
00:21:39,520 --> 00:21:40,799
this

502
00:21:40,799 --> 00:21:43,799
right

503
00:21:46,240 --> 00:21:49,120
so this

504
00:21:49,840 --> 00:21:53,520
gave us no reason

505
00:21:53,600 --> 00:21:54,559
either

506
00:21:54,559 --> 00:21:57,280
we did not log

507
00:21:57,280 --> 00:22:00,240
this or

508
00:22:01,440 --> 00:22:04,159
bloodhound

509
00:22:04,159 --> 00:22:07,200
slash sharp

510
00:22:07,360 --> 00:22:09,679
was

511
00:22:09,679 --> 00:22:12,799
ran from memory

512
00:22:12,799 --> 00:22:14,480
right

513
00:22:14,480 --> 00:22:15,840
okay

514
00:22:15,840 --> 00:22:19,039
so what do we do now

515
00:22:19,840 --> 00:22:21,120
well

516
00:22:21,120 --> 00:22:23,840
if we think back to it to our first

517
00:22:23,840 --> 00:22:24,880
query

518
00:22:24,880 --> 00:22:27,120
when we were looking at indexes we did

519
00:22:27,120 --> 00:22:29,120
have pcapps

520
00:22:29,120 --> 00:22:31,120
zeke

521
00:22:31,120 --> 00:22:33,760
we know it's query right

522
00:22:33,760 --> 00:22:34,559
so

523
00:22:34,559 --> 00:22:37,039
maybe sharp pound will work there

524
00:22:37,039 --> 00:22:40,240
so let's just do a broader

525
00:22:40,240 --> 00:22:42,559
search

526
00:22:43,600 --> 00:22:45,760
oh

527
00:22:46,480 --> 00:22:49,280
look at this

528
00:22:51,280 --> 00:22:54,559
so this

529
00:22:54,559 --> 00:22:57,760
is coming from

530
00:23:00,159 --> 00:23:02,960
windows powershell logging

531
00:23:02,960 --> 00:23:05,679
awesome

532
00:23:05,840 --> 00:23:08,799
that's another way we can search for

533
00:23:08,799 --> 00:23:10,080
this right

534
00:23:10,080 --> 00:23:12,559
windows powershot logging let's see if

535
00:23:12,559 --> 00:23:15,120
some things are being run

536
00:23:15,120 --> 00:23:17,840
here's another event that doesn't look

537
00:23:17,840 --> 00:23:18,799
parsed

538
00:23:18,799 --> 00:23:20,240
but

539
00:23:20,240 --> 00:23:24,559
looks like most of this is

540
00:23:27,039 --> 00:23:30,000
yeah executing a remote command

541
00:23:30,000 --> 00:23:33,039
from the same host name

542
00:23:33,600 --> 00:23:36,320
this is coming from when event logs

543
00:23:36,320 --> 00:23:39,919
right yep one of them is when log event

544
00:23:39,919 --> 00:23:42,919
4104

545
00:23:43,120 --> 00:23:44,640
interesting

546
00:23:44,640 --> 00:23:47,520
interesting

547
00:23:48,080 --> 00:23:51,840
okay so index

548
00:23:51,919 --> 00:23:56,159
equals when event logs

549
00:24:00,480 --> 00:24:02,960
and then

550
00:24:03,039 --> 00:24:05,840
what is the event

551
00:24:13,919 --> 00:24:16,080
id

552
00:24:16,080 --> 00:24:16,960
four

553
00:24:16,960 --> 00:24:19,120
one zero

554
00:24:19,120 --> 00:24:21,360
four

555
00:24:21,919 --> 00:24:24,240
okay

556
00:24:24,240 --> 00:24:25,620
get a thousand

557
00:24:25,620 --> 00:24:27,279
[Music]

558
00:24:27,279 --> 00:24:30,240
results from this

559
00:24:30,640 --> 00:24:33,640
okay

560
00:24:34,159 --> 00:24:35,919
okay

561
00:24:35,919 --> 00:24:38,400
this is cool

562
00:24:38,400 --> 00:24:40,559
but we're looking specifically for sharp

563
00:24:40,559 --> 00:24:42,080
hound

564
00:24:42,080 --> 00:24:44,639
this is

565
00:24:45,760 --> 00:24:48,400
doesn't

566
00:24:48,480 --> 00:24:50,480
like maybe this

567
00:24:50,480 --> 00:24:52,640
there's a couple places where this sharp

568
00:24:52,640 --> 00:24:54,799
house is showing up

569
00:24:54,799 --> 00:24:57,200
so this is another way that we can set

570
00:24:57,200 --> 00:25:00,640
up a detection for this

571
00:25:12,159 --> 00:25:14,400
there's not much

572
00:25:14,400 --> 00:25:16,240
we get the scripts but it's not

573
00:25:16,240 --> 00:25:20,320
necessarily parsed

574
00:25:24,799 --> 00:25:29,120
and there's no file name to this either

575
00:25:29,120 --> 00:25:30,240
so

576
00:25:30,240 --> 00:25:32,720
i think this would be a broader

577
00:25:32,720 --> 00:25:35,279
detection

578
00:25:37,919 --> 00:25:40,480
the other place that we can look for

579
00:25:40,480 --> 00:25:44,320
is in zeke network telemetry or network

580
00:25:44,320 --> 00:25:45,520
index

581
00:25:45,520 --> 00:25:48,240
so let's see what's going on

582
00:25:48,240 --> 00:25:50,640
with zeke

583
00:25:50,640 --> 00:25:51,600
okay

584
00:25:51,600 --> 00:25:54,159
we got a bunch of information

585
00:25:54,159 --> 00:25:55,200
well

586
00:25:55,200 --> 00:25:58,000
if you remember back to my slides

587
00:25:58,000 --> 00:26:01,039
we know that

588
00:26:01,039 --> 00:26:04,720
bloodhound uses

589
00:26:05,200 --> 00:26:07,760
smb and l

590
00:26:07,760 --> 00:26:09,520
dap s

591
00:26:09,520 --> 00:26:11,679
right

592
00:26:11,679 --> 00:26:14,240
i know that smb

593
00:26:14,240 --> 00:26:16,720
uses

594
00:26:17,840 --> 00:26:20,559
uses

595
00:26:22,159 --> 00:26:26,640
port 445 and 139

596
00:26:30,000 --> 00:26:32,320
so let's see

597
00:26:32,320 --> 00:26:36,360
if we can find any of this

598
00:26:58,400 --> 00:26:59,600
okay

599
00:26:59,600 --> 00:27:01,600
this search shows us

600
00:27:01,600 --> 00:27:06,840
about 11 000 events that's quite a bit

601
00:27:09,440 --> 00:27:10,159
so

602
00:27:10,159 --> 00:27:12,320
it looks like we have a pretty big spike

603
00:27:12,320 --> 00:27:14,559
here

604
00:27:15,360 --> 00:27:16,240
so

605
00:27:16,240 --> 00:27:18,840
let's see if can you manipulate this

606
00:27:18,840 --> 00:27:20,960
data so we can understand it a bit

607
00:27:20,960 --> 00:27:23,279
better

608
00:27:23,600 --> 00:27:26,640
i'm going to do stats

609
00:27:26,640 --> 00:27:29,120
count

610
00:27:29,360 --> 00:27:31,840
and now we're going to do

611
00:27:31,840 --> 00:27:34,320
values

612
00:27:34,320 --> 00:27:36,000
and this is just so that we are looking

613
00:27:36,000 --> 00:27:37,440
for a specific

614
00:27:37,440 --> 00:27:39,440
account of a certain value

615
00:27:39,440 --> 00:27:41,799
i'm going to do id dot

616
00:27:41,799 --> 00:27:43,440
response

617
00:27:43,440 --> 00:27:45,840
port

618
00:27:46,720 --> 00:27:49,360
by

619
00:27:49,360 --> 00:27:52,320
and i'm getting this from

620
00:27:52,320 --> 00:27:55,039
this right here

621
00:27:55,440 --> 00:27:58,880
okay so let's see

622
00:27:58,960 --> 00:28:00,559
oh awesome

623
00:28:00,559 --> 00:28:03,039
this is pretty indicative that

624
00:28:03,039 --> 00:28:05,600
something's going on with rdp

625
00:28:05,600 --> 00:28:06,799
01

626
00:28:06,799 --> 00:28:11,520
like 340 counts for using 445

627
00:28:11,520 --> 00:28:13,520
as an rp host that's

628
00:28:13,520 --> 00:28:16,720
pretty strange right let's see if we can

629
00:28:16,720 --> 00:28:20,159
use other stamp stats here

630
00:28:20,159 --> 00:28:23,679
and remember that there was

631
00:28:25,039 --> 00:28:27,440
a type

632
00:28:27,440 --> 00:28:31,320
there's an ip address

633
00:28:35,120 --> 00:28:37,840
there's very different types of source

634
00:28:37,840 --> 00:28:41,520
types these are connections

635
00:28:41,520 --> 00:28:44,559
so let's see what type of source type

636
00:28:44,559 --> 00:28:47,200
zeke has

637
00:28:51,039 --> 00:28:53,679
source

638
00:28:54,240 --> 00:28:56,399
by service

639
00:28:56,399 --> 00:28:59,399
okay

640
00:28:59,760 --> 00:29:03,279
so there's a bunch of connection

641
00:29:03,279 --> 00:29:07,200
let's just do my source type actually

642
00:29:07,919 --> 00:29:10,000
okay

643
00:29:10,000 --> 00:29:13,480
that didn't work

644
00:29:13,679 --> 00:29:16,080
nice

645
00:29:22,240 --> 00:29:24,960
oh oops

646
00:29:25,120 --> 00:29:26,960
sorry about that okay so we have

647
00:29:26,960 --> 00:29:31,120
connections free connection summary dns

648
00:29:31,120 --> 00:29:32,559
files

649
00:29:32,559 --> 00:29:33,500
and tlm

650
00:29:33,500 --> 00:29:34,960
[Music]

651
00:29:34,960 --> 00:29:39,240
smb smb mapping

652
00:29:43,200 --> 00:29:44,960
let's see if you can find the events for

653
00:29:44,960 --> 00:29:46,480
this

654
00:29:46,480 --> 00:29:48,320
okay

655
00:29:48,320 --> 00:29:50,720
ah so this is for

656
00:29:50,720 --> 00:29:53,440
a file

657
00:29:53,760 --> 00:29:58,480
file server file open file open

658
00:29:58,480 --> 00:30:00,799
okay

659
00:30:02,480 --> 00:30:05,279
close these out

660
00:30:05,600 --> 00:30:10,240
until then let's let's see what this has

661
00:30:12,240 --> 00:30:13,799
i guess is

662
00:30:13,799 --> 00:30:15,450
connections from

663
00:30:15,450 --> 00:30:17,039
[Music]

664
00:30:17,039 --> 00:30:19,600
workstations to our file server

665
00:30:19,600 --> 00:30:22,240
oh this is interesting

666
00:30:22,240 --> 00:30:27,600
so this is rdp talking to workstations

667
00:30:27,600 --> 00:30:29,120
okay

668
00:30:29,120 --> 00:30:30,399
so maybe

669
00:30:30,399 --> 00:30:33,039
we keep this sort type

670
00:30:33,039 --> 00:30:34,080
let's see

671
00:30:34,080 --> 00:30:35,440
if we can do

672
00:30:35,440 --> 00:30:37,600
stats

673
00:30:37,600 --> 00:30:40,960
count on values

674
00:30:40,960 --> 00:30:42,799
using a host name

675
00:30:42,799 --> 00:30:45,039
right

676
00:30:45,039 --> 00:30:46,960
let's see a hostname

677
00:30:46,960 --> 00:30:49,279
by

678
00:30:49,279 --> 00:30:51,679
server

679
00:30:51,679 --> 00:30:53,760
dns

680
00:30:53,760 --> 00:30:57,200
computer name

681
00:30:59,600 --> 00:31:00,559
nope

682
00:31:00,559 --> 00:31:04,440
did i misspell something

683
00:31:21,120 --> 00:31:23,760
oh there we go

684
00:31:23,760 --> 00:31:26,320
awesome

685
00:31:26,480 --> 00:31:28,880
so if we look here

686
00:31:28,880 --> 00:31:29,799
we see that

687
00:31:29,799 --> 00:31:33,360
rp01 has been getting around

688
00:31:33,360 --> 00:31:36,000
bunch of events going to

689
00:31:36,000 --> 00:31:38,159
workstation

690
00:31:38,159 --> 00:31:41,440
one two three

691
00:31:41,440 --> 00:31:43,679
so on and so forth it looks like mostly

692
00:31:43,679 --> 00:31:45,600
all of them

693
00:31:45,600 --> 00:31:48,399
that's interesting

694
00:31:48,399 --> 00:31:51,440
so i think this is another

695
00:31:51,440 --> 00:31:53,360
query we should probably save in our

696
00:31:53,360 --> 00:31:55,279
notes

697
00:31:55,279 --> 00:31:57,039
this looks like

698
00:31:57,039 --> 00:32:00,039
interesting

699
00:32:00,559 --> 00:32:02,559
smb

700
00:32:02,559 --> 00:32:05,559
connections

701
00:32:14,880 --> 00:32:16,640
all right

702
00:32:16,640 --> 00:32:18,080
to me like something like this is

703
00:32:18,080 --> 00:32:20,559
something that will also try and convert

704
00:32:20,559 --> 00:32:22,559
into a detection

705
00:32:22,559 --> 00:32:23,519
right

706
00:32:23,519 --> 00:32:24,880
especially

707
00:32:24,880 --> 00:32:25,760
when

708
00:32:25,760 --> 00:32:27,440
or i guess it depends on your

709
00:32:27,440 --> 00:32:28,480
environment

710
00:32:28,480 --> 00:32:31,360
a rdp host or a jump host is making

711
00:32:31,360 --> 00:32:33,760
these types of connections like i expect

712
00:32:33,760 --> 00:32:35,600
something like files

713
00:32:35,600 --> 00:32:37,919
to have this many connections from

714
00:32:37,919 --> 00:32:40,320
various different hosts

715
00:32:40,320 --> 00:32:42,640
but all these hosts have connections

716
00:32:42,640 --> 00:32:45,200
from an rdp host when it's not an smb

717
00:32:45,200 --> 00:32:47,440
server or something that that's

718
00:32:47,440 --> 00:32:49,279
sort of

719
00:32:49,279 --> 00:32:51,919
abnormal

720
00:32:52,159 --> 00:32:53,200
so

721
00:32:53,200 --> 00:32:55,120
that's

722
00:32:55,120 --> 00:32:58,000
probably a good way to detect this right

723
00:32:58,000 --> 00:33:00,240
even this could even cover

724
00:33:00,240 --> 00:33:02,720
not bloodhound this could cover

725
00:33:02,720 --> 00:33:04,799
manual enumeration from an attacker if

726
00:33:04,799 --> 00:33:06,480
they are trying to be stealthy and they

727
00:33:06,480 --> 00:33:08,240
don't want to trigger

728
00:33:08,240 --> 00:33:11,799
downloading bloodhound

729
00:33:12,399 --> 00:33:13,440
they could

730
00:33:13,440 --> 00:33:15,279
do a manual enumeration but we could

731
00:33:15,279 --> 00:33:16,960
still see this on the network side all

732
00:33:16,960 --> 00:33:20,080
these types of connections

733
00:33:22,159 --> 00:33:24,399
well i think i have

734
00:33:24,399 --> 00:33:26,320
shown

735
00:33:26,320 --> 00:33:28,080
different ways that we can be hunting

736
00:33:28,080 --> 00:33:30,159
for bloodhound and

737
00:33:30,159 --> 00:33:33,519
or other windows enumeration this has

738
00:33:33,519 --> 00:33:36,159
been pretty interesting

739
00:33:36,159 --> 00:33:38,960
but now that we i think we have

740
00:33:38,960 --> 00:33:41,120
concluded that uh

741
00:33:41,120 --> 00:33:43,760
rdp host o1

742
00:33:43,760 --> 00:33:45,519
has been compromised and has been doing

743
00:33:45,519 --> 00:33:48,960
this type of telemetry we would have

744
00:33:48,960 --> 00:33:52,559
the forensics team run

745
00:33:52,559 --> 00:33:55,679
forensics on it or

746
00:33:55,679 --> 00:33:57,519
seeing what other kind of things we can

747
00:33:57,519 --> 00:34:00,080
hunt for

748
00:34:00,080 --> 00:34:01,919
to close this out i think we should

749
00:34:01,919 --> 00:34:03,200
cover

750
00:34:03,200 --> 00:34:04,000
the

751
00:34:04,000 --> 00:34:06,000
threat hunting template so this is

752
00:34:06,000 --> 00:34:08,159
something that i like to use and other

753
00:34:08,159 --> 00:34:10,560
members of the blue team villains like

754
00:34:10,560 --> 00:34:13,839
to use when it comes to threat hunting

755
00:34:13,839 --> 00:34:16,079
and it's pretty basic yeah there's a

756
00:34:16,079 --> 00:34:18,719
playbook title the mighty tactic the

757
00:34:18,719 --> 00:34:21,918
matter sub technique the hypothesis

758
00:34:21,918 --> 00:34:23,918
we didn't really go into detail about

759
00:34:23,918 --> 00:34:27,040
hypothesis but

760
00:34:27,679 --> 00:34:28,639
there are

761
00:34:28,639 --> 00:34:31,839
other recordings and other stations

762
00:34:31,839 --> 00:34:33,679
or within this station

763
00:34:33,679 --> 00:34:36,719
that will go over hypothesis

764
00:34:36,719 --> 00:34:39,918
then there is a proposed detection query

765
00:34:39,918 --> 00:34:43,918
simulation details if there are any

766
00:34:43,918 --> 00:34:47,359
the limitations and observation notes

767
00:34:47,359 --> 00:34:50,239
from what we conducted right like we did

768
00:34:50,239 --> 00:34:53,119
find certain things like

769
00:34:53,119 --> 00:34:57,760
uh certain logs not being parsed or

770
00:34:57,760 --> 00:34:59,230
not being able to find

771
00:34:59,230 --> 00:35:00,320
[Music]

772
00:35:00,320 --> 00:35:03,200
certain lines um

773
00:35:03,200 --> 00:35:04,480
yeah

774
00:35:04,480 --> 00:35:05,839
and then our

775
00:35:05,839 --> 00:35:08,240
conclusion our findings of like what we

776
00:35:08,240 --> 00:35:10,560
found when we're going through this

777
00:35:10,560 --> 00:35:13,599
so we can fill this out

778
00:35:13,599 --> 00:35:16,599
right

779
00:35:16,960 --> 00:35:18,880
we're going to title this

780
00:35:18,880 --> 00:35:21,359
title this bloodhound being

781
00:35:21,359 --> 00:35:23,040
run

782
00:35:23,040 --> 00:35:24,079
within

783
00:35:24,079 --> 00:35:24,880
our

784
00:35:24,880 --> 00:35:27,880
environment

785
00:35:28,560 --> 00:35:31,839
i don't think i spelled that correctly

786
00:35:55,680 --> 00:36:00,000
so the miter tactic right so we can do

787
00:36:00,000 --> 00:36:03,359
a quick search

788
00:36:03,760 --> 00:36:06,160
miter

789
00:36:06,560 --> 00:36:08,400
right so a miter

790
00:36:08,400 --> 00:36:10,880
is a framework for different techniques

791
00:36:10,880 --> 00:36:14,800
and attack paths and

792
00:36:18,400 --> 00:36:20,000
there are plenty of resources out there

793
00:36:20,000 --> 00:36:24,280
on understanding what mitre is

794
00:36:26,800 --> 00:36:29,760
but what we need from here is

795
00:36:29,760 --> 00:36:32,800
what what tactic what's going on here

796
00:36:32,800 --> 00:36:34,480
all right so there's a bunch of them

797
00:36:34,480 --> 00:36:35,280
here

798
00:36:35,280 --> 00:36:38,800
usually the one i go for is this one

799
00:36:38,800 --> 00:36:41,359
which is account discovery because

800
00:36:41,359 --> 00:36:44,240
that's the best use case at least in my

801
00:36:44,240 --> 00:36:46,320
eyes

802
00:36:46,320 --> 00:36:49,359
for this so there is

803
00:36:49,359 --> 00:36:51,680
this

804
00:36:51,680 --> 00:36:55,839
which is just account discovery

805
00:36:59,200 --> 00:37:02,560
and local count discovery to be specific

806
00:37:02,560 --> 00:37:04,480
at least with the sub technique

807
00:37:04,480 --> 00:37:07,440
our hypothesis

808
00:37:07,520 --> 00:37:09,040
and uh

809
00:37:09,040 --> 00:37:10,240
a

810
00:37:10,240 --> 00:37:12,720
event

811
00:37:12,720 --> 00:37:14,960
system

812
00:37:14,960 --> 00:37:16,240
that's been

813
00:37:16,240 --> 00:37:19,240
compromised

814
00:37:19,680 --> 00:37:22,680
attackers

815
00:37:32,000 --> 00:37:35,640
that environment

816
00:37:36,000 --> 00:37:38,400
awesome

817
00:37:40,480 --> 00:37:43,760
so what is our proposed detection query

818
00:37:43,760 --> 00:37:46,800
at least for on the network side

819
00:37:46,800 --> 00:37:49,280
we'd have something like this

820
00:37:49,280 --> 00:37:51,680
all right

821
00:37:51,680 --> 00:37:54,400
is this actually

822
00:37:54,400 --> 00:37:57,280
maybe we can switch this around

823
00:37:57,280 --> 00:37:59,680
do this and then

824
00:37:59,680 --> 00:38:00,400
do

825
00:38:00,400 --> 00:38:02,720
hostname here

826
00:38:02,720 --> 00:38:04,560
yes right

827
00:38:04,560 --> 00:38:06,000
there we go

828
00:38:06,000 --> 00:38:08,400
this is much nicer

829
00:38:08,400 --> 00:38:11,599
so let's take this or actually let's uh

830
00:38:11,599 --> 00:38:12,960
do this

831
00:38:12,960 --> 00:38:14,160
where

832
00:38:14,160 --> 00:38:16,640
count

833
00:38:17,040 --> 00:38:18,400
is above

834
00:38:18,400 --> 00:38:20,240
and what's

835
00:38:20,240 --> 00:38:21,520
like

836
00:38:21,520 --> 00:38:23,110
the issue is like when it comes to

837
00:38:23,110 --> 00:38:24,320
[Music]

838
00:38:24,320 --> 00:38:26,400
files right like we're gonna get some

839
00:38:26,400 --> 00:38:28,800
false positives here but anything let's

840
00:38:28,800 --> 00:38:32,800
see above a hundred

841
00:38:32,800 --> 00:38:35,040
like we want to get alerted on

842
00:38:35,040 --> 00:38:37,839
let's take this

843
00:38:38,400 --> 00:38:42,160
put this detection query here

844
00:38:44,400 --> 00:38:48,640
you know me i like markdown

845
00:38:50,320 --> 00:38:54,320
there are no no simulation details here

846
00:38:54,320 --> 00:38:56,320
um what are some observations and

847
00:38:56,320 --> 00:38:59,119
limitations so a limitation that we had

848
00:38:59,119 --> 00:39:00,960
here is

849
00:39:00,960 --> 00:39:03,680
some longs were

850
00:39:03,680 --> 00:39:06,640
parsed incorrectly

851
00:39:13,119 --> 00:39:14,880
directly

852
00:39:14,880 --> 00:39:18,240
another person correctly

853
00:39:18,880 --> 00:39:20,400
we

854
00:39:20,400 --> 00:39:22,960
did not

855
00:39:24,240 --> 00:39:26,560
let's see

856
00:39:26,880 --> 00:39:30,480
creation for

857
00:39:31,359 --> 00:39:35,119
the bloodhound binaries right

858
00:39:39,200 --> 00:39:43,078
i don't think that's both correct

859
00:39:44,160 --> 00:39:46,480
it is

860
00:39:51,760 --> 00:39:52,800
so

861
00:39:52,800 --> 00:39:54,079
what else

862
00:39:54,079 --> 00:39:57,440
can we say that we observed

863
00:39:57,440 --> 00:40:01,359
i think that covers it mostly

864
00:40:01,359 --> 00:40:04,000
as to findings well

865
00:40:04,000 --> 00:40:05,839
we found

866
00:40:05,839 --> 00:40:07,920
that rdp

867
00:40:07,920 --> 00:40:12,560
hostile one has been

868
00:40:12,560 --> 00:40:15,040
making

869
00:40:15,760 --> 00:40:19,280
various connections to

870
00:40:19,280 --> 00:40:23,040
other workstations right

871
00:40:23,040 --> 00:40:25,200
this is ab

872
00:40:25,200 --> 00:40:27,839
normal for

873
00:40:27,839 --> 00:40:31,680
this type of workstation

874
00:40:36,480 --> 00:40:37,359
right

875
00:40:37,359 --> 00:40:38,400
and that's it

876
00:40:38,400 --> 00:40:40,720
that's our

877
00:40:40,720 --> 00:40:42,720
threat hunting template

878
00:40:42,720 --> 00:40:44,160
filled out

879
00:40:44,160 --> 00:40:47,200
with everything needed

880
00:40:47,440 --> 00:40:49,760
and i want to say thank you for joining

881
00:40:49,760 --> 00:40:52,960
me on this journey

882
00:40:52,960 --> 00:40:54,560
and if you feel like continuing this

883
00:40:54,560 --> 00:40:55,920
conversation

884
00:40:55,920 --> 00:40:58,720
please join us

885
00:40:58,720 --> 00:41:00,079
on

886
00:41:00,079 --> 00:41:02,880
the blue team village discord

887
00:41:02,880 --> 00:41:06,040
thank you

