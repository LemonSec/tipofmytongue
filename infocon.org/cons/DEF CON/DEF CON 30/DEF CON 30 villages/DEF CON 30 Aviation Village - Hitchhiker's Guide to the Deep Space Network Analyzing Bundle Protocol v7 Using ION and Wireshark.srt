1
00:00:01,760 --> 00:00:04,240
hi this is laura chapel and i am here

2
00:00:04,240 --> 00:00:05,279
with

3
00:00:05,279 --> 00:00:07,200
jenny spicer

4
00:00:07,200 --> 00:00:10,719
and today we are going to take you into

5
00:00:10,719 --> 00:00:13,200
the bundle protocol version 7

6
00:00:13,200 --> 00:00:15,920
using ion the interplanetary overlay

7
00:00:15,920 --> 00:00:18,720
network and wireshark the title of our

8
00:00:18,720 --> 00:00:20,640
presentation is

9
00:00:20,640 --> 00:00:22,240
hitchhiker's guide to the deep space

10
00:00:22,240 --> 00:00:24,400
network

11
00:00:24,400 --> 00:00:25,519
so this is what we're going to be

12
00:00:25,519 --> 00:00:27,279
covering today

13
00:00:27,279 --> 00:00:29,760
our mission is to provide you with an

14
00:00:29,760 --> 00:00:31,760
overview of ion we'll show you the test

15
00:00:31,760 --> 00:00:33,120
suites

16
00:00:33,120 --> 00:00:36,160
um and the race tests and we'll show you

17
00:00:36,160 --> 00:00:37,840
how to run tests

18
00:00:37,840 --> 00:00:39,360
we're going to

19
00:00:39,360 --> 00:00:41,440
also show you how to

20
00:00:41,440 --> 00:00:43,920
customize wireshark for analyzing space

21
00:00:43,920 --> 00:00:46,000
communications you're going to see when

22
00:00:46,000 --> 00:00:48,719
we run these tests that the addressing

23
00:00:48,719 --> 00:00:52,800
in the tests are a little bit strange

24
00:00:52,800 --> 00:00:54,160
because they're using the loopback

25
00:00:54,160 --> 00:00:56,640
address for these tests and that is kind

26
00:00:56,640 --> 00:00:58,640
of funky and what it does with wireshark

27
00:00:58,640 --> 00:01:00,160
so we'll we'll deal with that in just a

28
00:01:00,160 --> 00:01:01,039
moment

29
00:01:01,039 --> 00:01:02,640
we're going to run a couple of tests on

30
00:01:02,640 --> 00:01:04,000
ion for you

31
00:01:04,000 --> 00:01:05,040
jenny do you want to tell them a little

32
00:01:05,040 --> 00:01:06,880
bit about the two tests we're going to

33
00:01:06,880 --> 00:01:08,479
run

34
00:01:08,479 --> 00:01:11,439
we are going to be using b ping which is

35
00:01:11,439 --> 00:01:13,680
basically a ping equivalent using the

36
00:01:13,680 --> 00:01:15,439
bundle protocol

37
00:01:15,439 --> 00:01:17,040
we're going to

38
00:01:17,040 --> 00:01:19,840
get an echo back and be able to analyze

39
00:01:19,840 --> 00:01:22,000
the communication between two nodes and

40
00:01:22,000 --> 00:01:24,000
then there is bpchat which is actually

41
00:01:24,000 --> 00:01:27,759
sending text and having it reflected

42
00:01:27,759 --> 00:01:29,520
and so we're going to be showing you how

43
00:01:29,520 --> 00:01:31,600
to analyze

44
00:01:31,600 --> 00:01:34,000
their use those two little applications

45
00:01:34,000 --> 00:01:37,600
use of bundle protocol version 7 and

46
00:01:37,600 --> 00:01:39,040
we'll take a look over at the spec

47
00:01:39,040 --> 00:01:40,240
because we're going to see some things

48
00:01:40,240 --> 00:01:41,759
in the bundle protocol

49
00:01:41,759 --> 00:01:43,280
uh header

50
00:01:43,280 --> 00:01:44,720
that

51
00:01:44,720 --> 00:01:46,000
we just want to point you to the specs

52
00:01:46,000 --> 00:01:47,600
so you can see what other numbers might

53
00:01:47,600 --> 00:01:49,520
be in that location and what the spec

54
00:01:49,520 --> 00:01:52,320
says about what it's doing there

55
00:01:52,320 --> 00:01:54,320
we will also be providing the trace

56
00:01:54,320 --> 00:01:56,880
files that we capture during this

57
00:01:56,880 --> 00:01:59,280
uh so you can analyze on your own and

58
00:01:59,280 --> 00:02:02,399
build your own bundle profile

59
00:02:02,399 --> 00:02:03,759
yeah we're not going to hand you the

60
00:02:03,759 --> 00:02:06,399
bundle profile that we make

61
00:02:06,399 --> 00:02:07,200
uh

62
00:02:07,200 --> 00:02:10,080
in this session that's a great lab

63
00:02:10,080 --> 00:02:12,640
exercise if you learn how to customize

64
00:02:12,640 --> 00:02:14,879
wireshark so that it works

65
00:02:14,879 --> 00:02:17,360
for you you don't work for wireshark

66
00:02:17,360 --> 00:02:20,480
okay so let's go ahead and get started

67
00:02:20,480 --> 00:02:22,319
all right so on my system the base

68
00:02:22,319 --> 00:02:25,200
operating system is windows

69
00:02:25,200 --> 00:02:27,120
but i have installed the vmware

70
00:02:27,120 --> 00:02:29,280
workstation player 16

71
00:02:29,280 --> 00:02:31,760
and inside of there i have an open cc

72
00:02:31,760 --> 00:02:34,879
64-bit instance running this is where

73
00:02:34,879 --> 00:02:36,400
i've installed

74
00:02:36,400 --> 00:02:38,319
ion

75
00:02:38,319 --> 00:02:40,879
and i also you can see i have wireshark

76
00:02:40,879 --> 00:02:42,879
running on the left hand side it's not

77
00:02:42,879 --> 00:02:44,879
doing a capture right now at all

78
00:02:44,879 --> 00:02:47,360
but let's start by looking at the ion

79
00:02:47,360 --> 00:02:49,040
directory structure jenny you want to

80
00:02:49,040 --> 00:02:50,640
take them in for just a bit of a tour on

81
00:02:50,640 --> 00:02:52,640
the directory structure

82
00:02:52,640 --> 00:02:55,120
yeah absolutely

83
00:02:55,120 --> 00:02:58,480
so the minute you get into ion the core

84
00:02:58,480 --> 00:03:00,480
directory has a whole bunch of

85
00:03:00,480 --> 00:03:02,239
supplementary scripts and supporting

86
00:03:02,239 --> 00:03:04,640
scripts as well as a very helpful readme

87
00:03:04,640 --> 00:03:06,560
if you want to get into ion highly

88
00:03:06,560 --> 00:03:08,000
recommend looking at that as your first

89
00:03:08,000 --> 00:03:09,280
step

90
00:03:09,280 --> 00:03:10,800
mainly though we're going to be looking

91
00:03:10,800 --> 00:03:13,120
at the tests directory where there are a

92
00:03:13,120 --> 00:03:15,680
lot of pre-written tests that we can run

93
00:03:15,680 --> 00:03:19,239
to capture traffic

94
00:03:21,599 --> 00:03:24,720
all right so there is the test directory

95
00:03:24,720 --> 00:03:27,200
and on the left hand side before we run

96
00:03:27,200 --> 00:03:29,440
any of these tests i'll make sure that i

97
00:03:29,440 --> 00:03:31,120
start wireshark capturing on the

98
00:03:31,120 --> 00:03:33,040
loopback adapter do you want to talk a

99
00:03:33,040 --> 00:03:35,040
little bit about why i'm capturing on

100
00:03:35,040 --> 00:03:37,120
loopback gin

101
00:03:37,120 --> 00:03:40,319
so ion generates traffic

102
00:03:40,319 --> 00:03:42,959
over the loopback adapter

103
00:03:42,959 --> 00:03:46,000
even though it is using interplanetary

104
00:03:46,000 --> 00:03:47,920
node addresses

105
00:03:47,920 --> 00:03:51,440
it's still going to be using 127.0.0.1

106
00:03:51,440 --> 00:03:53,200
for every single packet that's going to

107
00:03:53,200 --> 00:03:54,400
cross your machine so that's where

108
00:03:54,400 --> 00:03:55,439
you're going to want to capture your

109
00:03:55,439 --> 00:03:58,439
traffic

110
00:04:01,920 --> 00:04:05,200
you're going to want to type dot slash

111
00:04:05,200 --> 00:04:07,040
run tests

112
00:04:07,040 --> 00:04:08,560
and then the name of the test you're

113
00:04:08,560 --> 00:04:09,760
going to run

114
00:04:09,760 --> 00:04:12,480
we're going to start with bping

115
00:04:12,480 --> 00:04:14,720
all right

116
00:04:14,720 --> 00:04:17,759
now before we run the test though i want

117
00:04:17,759 --> 00:04:19,918
to make sure that wireshark is starting

118
00:04:19,918 --> 00:04:21,519
to capture the traffic i don't want to

119
00:04:21,519 --> 00:04:24,320
miss any of this traffic here so over in

120
00:04:24,320 --> 00:04:26,240
wireshark on the left-hand side i'm

121
00:04:26,240 --> 00:04:29,919
running wireshark as root here and

122
00:04:29,919 --> 00:04:32,479
i'm going to choose the loopback adapter

123
00:04:32,479 --> 00:04:33,759
here

124
00:04:33,759 --> 00:04:35,600
to run my test so i can double click on

125
00:04:35,600 --> 00:04:37,520
that loopback adapter

126
00:04:37,520 --> 00:04:39,199
if for some reason you want to put in a

127
00:04:39,199 --> 00:04:41,919
capture filter for this which i wouldn't

128
00:04:41,919 --> 00:04:43,360
recommend

129
00:04:43,360 --> 00:04:44,639
you know there shouldn't be a lot of

130
00:04:44,639 --> 00:04:46,240
other stuff on your loopback adapter

131
00:04:46,240 --> 00:04:50,000
probably but if you do want to put in a

132
00:04:50,000 --> 00:04:52,080
filter so you're only capturing loopback

133
00:04:52,080 --> 00:04:54,320
traffic you could go into your capture

134
00:04:54,320 --> 00:04:57,040
options area and type in hose space

135
00:04:57,040 --> 00:05:00,040
127.0.0.1

136
00:05:00,560 --> 00:05:02,400
and that will capture only

137
00:05:02,400 --> 00:05:05,560
the traffic to or from

138
00:05:05,560 --> 00:05:07,680
127.0.0.1 and you'll see how interesting

139
00:05:07,680 --> 00:05:09,759
this is in a moment keep in mind that if

140
00:05:09,759 --> 00:05:11,600
you also wanted to capture on an

141
00:05:11,600 --> 00:05:14,560
external adapter you can select more

142
00:05:14,560 --> 00:05:16,800
than one adapter for your capture

143
00:05:16,800 --> 00:05:19,039
i'm on uh on my system i'm just holding

144
00:05:19,039 --> 00:05:20,960
down the control key to select multiple

145
00:05:20,960 --> 00:05:23,280
adapters but for this we'll go ahead and

146
00:05:23,280 --> 00:05:25,680
just start capturing on loopback

147
00:05:25,680 --> 00:05:27,280
so i've started the capture process

148
00:05:27,280 --> 00:05:29,680
running i'm going to come back over here

149
00:05:29,680 --> 00:05:31,840
and hit enter to start

150
00:05:31,840 --> 00:05:34,799
the test running

151
00:05:36,000 --> 00:05:38,400
when bping is running you're seeing the

152
00:05:38,400 --> 00:05:40,160
output of the script as it is running

153
00:05:40,160 --> 00:05:42,800
through including notes about what the

154
00:05:42,800 --> 00:05:44,960
test is currently uh or what is

155
00:05:44,960 --> 00:05:46,800
currently being tested

156
00:05:46,800 --> 00:05:47,680
and

157
00:05:47,680 --> 00:05:49,360
if you want to later you could actually

158
00:05:49,360 --> 00:05:51,840
look inside of the script and see the

159
00:05:51,840 --> 00:05:54,800
notes from the creators of ion of how

160
00:05:54,800 --> 00:05:56,800
this is running and what each section is

161
00:05:56,800 --> 00:05:58,560
doing right now you can see that it's

162
00:05:58,560 --> 00:06:00,240
verifying certain errors are not

163
00:06:00,240 --> 00:06:01,600
occurring

164
00:06:01,600 --> 00:06:03,520
and each one of those dots

165
00:06:03,520 --> 00:06:07,919
is a packet that is being received

166
00:06:07,919 --> 00:06:09,280
one of the things i think is interesting

167
00:06:09,280 --> 00:06:12,240
is that for every test you run an ion

168
00:06:12,240 --> 00:06:14,800
ions not running in the background at

169
00:06:14,800 --> 00:06:18,080
any point until you start a test then it

170
00:06:18,080 --> 00:06:20,880
launches ion goes and grabs all of its

171
00:06:20,880 --> 00:06:22,800
supplemental files for configuration

172
00:06:22,800 --> 00:06:25,120
things like that runs according to that

173
00:06:25,120 --> 00:06:26,160
script

174
00:06:26,160 --> 00:06:28,800
and then it cleans itself up at the end

175
00:06:28,800 --> 00:06:30,720
so you can see it's doing a kill m at

176
00:06:30,720 --> 00:06:32,080
the end here

177
00:06:32,080 --> 00:06:33,919
and that's where it's terminating all of

178
00:06:33,919 --> 00:06:37,198
the ion processes

179
00:06:41,440 --> 00:06:43,919
so now let's go over to wireshark and

180
00:06:43,919 --> 00:06:46,560
let's focus on this trace file and what

181
00:06:46,560 --> 00:06:49,120
we can see the first thing i want to do

182
00:06:49,120 --> 00:06:51,440
is i want to make a

183
00:06:51,440 --> 00:06:53,680
profile for

184
00:06:53,680 --> 00:06:55,360
this communication for analyzing the

185
00:06:55,360 --> 00:06:58,000
bundle communication or analyzing ion

186
00:06:58,000 --> 00:07:00,639
communication so in wireshark to do that

187
00:07:00,639 --> 00:07:01,919
i'm going to right mouse click in the

188
00:07:01,919 --> 00:07:05,120
profile area down on the status bar

189
00:07:05,120 --> 00:07:07,840
and i'm going to select new

190
00:07:07,840 --> 00:07:09,360
and i'm going to give it a name i'm just

191
00:07:09,360 --> 00:07:11,520
going to call it ion

192
00:07:11,520 --> 00:07:14,080
and then i'll say ok

193
00:07:14,080 --> 00:07:15,840
you'll see that we have some the default

194
00:07:15,840 --> 00:07:17,120
profile and then we have some other

195
00:07:17,120 --> 00:07:19,360
profiles that are already created for us

196
00:07:19,360 --> 00:07:21,199
in here but i want to make a brand new

197
00:07:21,199 --> 00:07:22,639
one

198
00:07:22,639 --> 00:07:23,759
so now

199
00:07:23,759 --> 00:07:25,199
in the bottom right hand corner it tells

200
00:07:25,199 --> 00:07:26,960
me i'm in the ion profile and if you

201
00:07:26,960 --> 00:07:28,000
want to move around to different

202
00:07:28,000 --> 00:07:31,680
profiles you simply click on that

203
00:07:31,680 --> 00:07:34,000
right hand side of the status bar and

204
00:07:34,000 --> 00:07:35,680
select the next profile you want to move

205
00:07:35,680 --> 00:07:37,120
to

206
00:07:37,120 --> 00:07:39,840
but here's what's interesting in this

207
00:07:39,840 --> 00:07:41,840
you can see that in this test the

208
00:07:41,840 --> 00:07:43,199
traffic ran

209
00:07:43,199 --> 00:07:46,400
from 127.0.0.1

210
00:07:46,400 --> 00:07:47,720
to

211
00:07:47,720 --> 00:07:51,280
127.0.0.1 so this source and destination

212
00:07:51,280 --> 00:07:52,400
columns

213
00:07:52,400 --> 00:07:55,280
those are pretty useless

214
00:07:55,280 --> 00:07:57,840
so let me bring this up so we can see a

215
00:07:57,840 --> 00:07:59,280
little bit more about the bundle

216
00:07:59,280 --> 00:08:01,599
protocol here and i'll pop up to the top

217
00:08:01,599 --> 00:08:02,879
packet here

218
00:08:02,879 --> 00:08:04,319
i'm going to right mouse click i'm going

219
00:08:04,319 --> 00:08:06,720
to hide the source and destination

220
00:08:06,720 --> 00:08:07,919
columns

221
00:08:07,919 --> 00:08:09,599
because they're worthless to me they

222
00:08:09,599 --> 00:08:12,400
don't tell me who the actual source was

223
00:08:12,400 --> 00:08:15,039
who the destination was

224
00:08:15,039 --> 00:08:18,080
so let's take a look inside this bundle

225
00:08:18,080 --> 00:08:20,560
uh header in here and again we're

226
00:08:20,560 --> 00:08:23,039
talking about bundle protocol version

227
00:08:23,039 --> 00:08:25,280
seven and that's rfc

228
00:08:25,280 --> 00:08:28,280
9171

229
00:08:28,319 --> 00:08:30,160
now i know my test is done so i'll go

230
00:08:30,160 --> 00:08:31,759
ahead and stop the capture process up

231
00:08:31,759 --> 00:08:33,760
above that

232
00:08:33,760 --> 00:08:35,839
so there we can see

233
00:08:35,839 --> 00:08:38,479
the udp header right there destination

234
00:08:38,479 --> 00:08:41,279
port 4556

235
00:08:41,279 --> 00:08:45,200
below udp here we have the dtn bundle

236
00:08:45,200 --> 00:08:47,360
protocol dtn standing for delay and

237
00:08:47,360 --> 00:08:50,800
disruption tolerant networking

238
00:08:50,800 --> 00:08:52,320
and there's a summary line here that

239
00:08:52,320 --> 00:08:54,880
tells us the payload size the number of

240
00:08:54,880 --> 00:08:57,200
blocks that are in this and we'll talk

241
00:08:57,200 --> 00:08:59,120
about the blocks in just a second but

242
00:08:59,120 --> 00:09:01,600
there i can see in the summary line the

243
00:09:01,600 --> 00:09:04,560
destination and the source

244
00:09:04,560 --> 00:09:05,440
so

245
00:09:05,440 --> 00:09:07,680
this packet is going from

246
00:09:07,680 --> 00:09:10,320
interplanetary networking

247
00:09:10,320 --> 00:09:12,480
1.2 host

248
00:09:12,480 --> 00:09:14,640
to

249
00:09:14,720 --> 00:09:18,000
from interplanetary networking 1.1 host

250
00:09:18,000 --> 00:09:19,360
we'll talk about the time in just a

251
00:09:19,360 --> 00:09:20,880
moment and the sequence number just a

252
00:09:20,880 --> 00:09:22,399
moment

253
00:09:22,399 --> 00:09:24,240
okay jin do you want to start telling a

254
00:09:24,240 --> 00:09:26,800
little bit about this indefinite array

255
00:09:26,800 --> 00:09:29,279
piece here

256
00:09:29,279 --> 00:09:32,000
yes so this has to do with a new feature

257
00:09:32,000 --> 00:09:33,760
of bundle version 7.

258
00:09:33,760 --> 00:09:38,880
bundle version 7 will use cbor encoding

259
00:09:39,920 --> 00:09:42,320
there are three settings available

260
00:09:42,320 --> 00:09:43,519
preference settings available in

261
00:09:43,519 --> 00:09:45,600
wireshark for the bundle protocol

262
00:09:45,600 --> 00:09:47,600
version 7. if you would right mouse

263
00:09:47,600 --> 00:09:49,760
click on the bundle anywhere in a bundle

264
00:09:49,760 --> 00:09:51,760
protocol header and go to protocol

265
00:09:51,760 --> 00:09:53,920
preferences you'll see

266
00:09:53,920 --> 00:09:56,959
compute and compare crcs reassemble

267
00:09:56,959 --> 00:09:58,959
fragmented payloads and then attempt the

268
00:09:58,959 --> 00:10:00,800
heuristic dissection

269
00:10:00,800 --> 00:10:04,720
of the btsd payload and if i choose that

270
00:10:04,720 --> 00:10:07,680
there it is there's that seabor

271
00:10:07,680 --> 00:10:09,440
that shows up underneath and wireshark's

272
00:10:09,440 --> 00:10:11,839
saying you know i think this is the

273
00:10:11,839 --> 00:10:14,640
style of communication being used here

274
00:10:14,640 --> 00:10:16,959
that this is being done in this format

275
00:10:16,959 --> 00:10:19,120
so it's concise binary object

276
00:10:19,120 --> 00:10:21,760
representation

277
00:10:21,760 --> 00:10:22,480
so

278
00:10:22,480 --> 00:10:25,680
bundle version 7 stores its blocks

279
00:10:25,680 --> 00:10:27,600
in an indefinite array

280
00:10:27,600 --> 00:10:30,000
this helps it be flexible with how many

281
00:10:30,000 --> 00:10:32,959
blocks are included in a single packet

282
00:10:32,959 --> 00:10:35,920
and keep it in the fewest number of

283
00:10:35,920 --> 00:10:38,000
bytes we can

284
00:10:38,000 --> 00:10:40,480
see bore encoding starts an indefinite

285
00:10:40,480 --> 00:10:43,120
array with 9f

286
00:10:43,120 --> 00:10:45,920
so that is it beginning and saying we

287
00:10:45,920 --> 00:10:47,440
have an indefinite array of blocks

288
00:10:47,440 --> 00:10:49,120
coming up and at the very end you will

289
00:10:49,120 --> 00:10:50,079
see

290
00:10:50,079 --> 00:10:51,920
ff

291
00:10:51,920 --> 00:10:54,079
that is the termination of this

292
00:10:54,079 --> 00:10:56,000
indefinite array that has to do with

293
00:10:56,000 --> 00:10:58,839
just the standard break encoding from

294
00:10:58,839 --> 00:11:01,920
seabor that's interesting and you know

295
00:11:01,920 --> 00:11:03,839
i've got the the hex window up too and

296
00:11:03,839 --> 00:11:06,320
you can see that that's the actual end

297
00:11:06,320 --> 00:11:10,000
of the packet what follows this is

298
00:11:10,000 --> 00:11:12,240
an expert warning and we're going to

299
00:11:12,240 --> 00:11:13,360
we're going to talk about that in a

300
00:11:13,360 --> 00:11:15,120
moment because we're going to we're

301
00:11:15,120 --> 00:11:17,120
going to alter wireshark's expert

302
00:11:17,120 --> 00:11:18,959
notification system

303
00:11:18,959 --> 00:11:20,320
because that's we don't want to be

304
00:11:20,320 --> 00:11:22,000
warned on what's inside of here and

305
00:11:22,000 --> 00:11:23,680
we'll talk about that i'm going to go

306
00:11:23,680 --> 00:11:25,040
ahead and i'm going to turn off that

307
00:11:25,040 --> 00:11:27,839
protocol preference to use the heuristic

308
00:11:27,839 --> 00:11:29,519
dissection routine

309
00:11:29,519 --> 00:11:31,519
all right so

310
00:11:31,519 --> 00:11:33,760
beyond the starting point where it says

311
00:11:33,760 --> 00:11:36,240
indefinite array which is what's coming

312
00:11:36,240 --> 00:11:38,160
up then we have the primary block and

313
00:11:38,160 --> 00:11:40,800
i'm going to expand the primary block

314
00:11:40,800 --> 00:11:42,160
and let me bring this down so we have

315
00:11:42,160 --> 00:11:44,640
just a little bit more room

316
00:11:44,640 --> 00:11:47,760
and i'll bring it up here

317
00:11:49,040 --> 00:11:50,480
so the first thing you have is the

318
00:11:50,480 --> 00:11:52,560
version field that's telling us we are

319
00:11:52,560 --> 00:11:56,399
using bundle protocol version 7. and

320
00:11:56,399 --> 00:11:58,079
then below this you have bundle flags

321
00:11:58,079 --> 00:12:00,720
and you can expand these to see what's

322
00:12:00,720 --> 00:12:02,160
happening here

323
00:12:02,160 --> 00:12:04,880
this is requesting status time

324
00:12:04,880 --> 00:12:06,240
in a report

325
00:12:06,240 --> 00:12:08,000
so basically it's asking our target to

326
00:12:08,000 --> 00:12:10,560
report back to it

327
00:12:10,560 --> 00:12:12,639
and down below that let's just focus on

328
00:12:12,639 --> 00:12:14,480
some of the interesting fields here

329
00:12:14,480 --> 00:12:15,519
because otherwise we could go through

330
00:12:15,519 --> 00:12:16,880
the whole entire

331
00:12:16,880 --> 00:12:17,760
um

332
00:12:17,760 --> 00:12:19,920
rfc on this but

333
00:12:19,920 --> 00:12:22,399
the destination endpoint and the source

334
00:12:22,399 --> 00:12:25,920
node id are important to us as is the

335
00:12:25,920 --> 00:12:27,760
report to node

336
00:12:27,760 --> 00:12:30,560
and if you just click on the summary

337
00:12:30,560 --> 00:12:31,839
line

338
00:12:31,839 --> 00:12:35,360
and you drag it up to be a

339
00:12:35,360 --> 00:12:37,440
column it's just going to tell you that

340
00:12:37,440 --> 00:12:40,560
that exists so this is not the way you

341
00:12:40,560 --> 00:12:42,160
make a

342
00:12:42,160 --> 00:12:45,279
bundle destination and source column

343
00:12:45,279 --> 00:12:46,480
so i'm going to right mouse click and

344
00:12:46,480 --> 00:12:48,320
remove this column what you want to do

345
00:12:48,320 --> 00:12:51,519
is you want to expand this section

346
00:12:51,519 --> 00:12:54,560
and go down to the summary line that's

347
00:12:54,560 --> 00:12:56,880
inside square brackets

348
00:12:56,880 --> 00:12:59,279
in that section and we want to drag that

349
00:12:59,279 --> 00:13:02,639
destination uri

350
00:13:02,639 --> 00:13:06,320
uniform resource indicator up to be its

351
00:13:06,320 --> 00:13:08,560
own column and now i can read that

352
00:13:08,560 --> 00:13:10,480
that's just what i want to see

353
00:13:10,480 --> 00:13:12,399
i'm going to do the same thing for

354
00:13:12,399 --> 00:13:14,880
source

355
00:13:15,120 --> 00:13:17,519
right here

356
00:13:17,519 --> 00:13:20,240
actually i'll put source on the left and

357
00:13:20,240 --> 00:13:21,839
then the last one i'm going to do this

358
00:13:21,839 --> 00:13:25,760
for is the report 2

359
00:13:26,720 --> 00:13:29,279
uri

360
00:13:32,000 --> 00:13:35,720
here okay

361
00:13:39,120 --> 00:13:41,199
all right so below this i don't know if

362
00:13:41,199 --> 00:13:43,360
jenny if you want to hop in on any

363
00:13:43,360 --> 00:13:44,639
points in here i'm just going to keep

364
00:13:44,639 --> 00:13:47,440
going if that's okay and you can just

365
00:13:47,440 --> 00:13:48,399
pop in

366
00:13:48,399 --> 00:13:50,399
skip over something i just wanted to

367
00:13:50,399 --> 00:13:53,440
point out that for uri it's identifier

368
00:13:53,440 --> 00:13:57,120
not indicator oh see i always say that

369
00:13:57,120 --> 00:13:58,480
i think i learned that from you and now

370
00:13:58,480 --> 00:14:00,240
i'm checking myself on it oh i'm sorry

371
00:14:00,240 --> 00:14:03,440
i'm sorry yeah all right uh

372
00:14:03,440 --> 00:14:05,839
so we have the creation time stamp which

373
00:14:05,839 --> 00:14:08,160
is where you say when you created this

374
00:14:08,160 --> 00:14:10,720
bundle that's being sent out

375
00:14:10,720 --> 00:14:13,839
there is a sequence number field in here

376
00:14:13,839 --> 00:14:15,600
the lifetime

377
00:14:15,600 --> 00:14:17,680
so you can think of lifetime as almost a

378
00:14:17,680 --> 00:14:19,360
time to live

379
00:14:19,360 --> 00:14:20,880
value in here

380
00:14:20,880 --> 00:14:24,000
when this will expire

381
00:14:24,000 --> 00:14:25,680
and i'm going to collapse this section

382
00:14:25,680 --> 00:14:27,680
and go to the next

383
00:14:27,680 --> 00:14:29,040
section

384
00:14:29,040 --> 00:14:32,320
just at the bottom of this primary block

385
00:14:32,320 --> 00:14:33,120
so

386
00:14:33,120 --> 00:14:35,600
below the primary block

387
00:14:35,600 --> 00:14:37,839
wireshark has this piece in square

388
00:14:37,839 --> 00:14:40,480
brackets called the bundle identity the

389
00:14:40,480 --> 00:14:43,120
identity of this bundle of information

390
00:14:43,120 --> 00:14:47,120
is a combination of the source address

391
00:14:47,120 --> 00:14:48,880
and the

392
00:14:48,880 --> 00:14:51,680
delay and disruption tolerant networking

393
00:14:51,680 --> 00:14:53,920
time value

394
00:14:53,920 --> 00:14:57,959
and the sequence number

395
00:15:00,000 --> 00:15:01,760
so here's something that was interesting

396
00:15:01,760 --> 00:15:03,199
that jenny and i

397
00:15:03,199 --> 00:15:06,399
found we were looking at the rfc for

398
00:15:06,399 --> 00:15:09,279
the bundle protocol dtn time delay and

399
00:15:09,279 --> 00:15:11,360
disruption tolerant networking time you

400
00:15:11,360 --> 00:15:14,320
know we're used to epic time but

401
00:15:14,320 --> 00:15:16,160
do you want to tell them what dtn time

402
00:15:16,160 --> 00:15:18,000
is based on

403
00:15:18,000 --> 00:15:21,839
so dtn time starts with the year 2000

404
00:15:21,839 --> 00:15:23,680
it also ignores leap seconds which they

405
00:15:23,680 --> 00:15:26,479
make sure to know

406
00:15:28,160 --> 00:15:29,519
so that's i thought that was pretty

407
00:15:29,519 --> 00:15:31,040
interesting there's a lot of issues with

408
00:15:31,040 --> 00:15:32,160
time

409
00:15:32,160 --> 00:15:34,560
in space

410
00:15:34,560 --> 00:15:36,160
uh and we'll we're going to talk to you

411
00:15:36,160 --> 00:15:37,519
a little bit about where you can learn

412
00:15:37,519 --> 00:15:39,600
more about space comms at the end of

413
00:15:39,600 --> 00:15:41,199
this presentation we have some

414
00:15:41,199 --> 00:15:43,279
recommendations for you

415
00:15:43,279 --> 00:15:44,639
all right so i'm going to close up the

416
00:15:44,639 --> 00:15:46,480
primary block here and now i'm going to

417
00:15:46,480 --> 00:15:48,320
go to the next block this canonical

418
00:15:48,320 --> 00:15:50,800
block here after that now here you can

419
00:15:50,800 --> 00:15:54,959
see that this block begins with a type

420
00:15:54,959 --> 00:15:55,920
code

421
00:15:55,920 --> 00:15:58,880
just like if we look at our our

422
00:15:58,880 --> 00:16:00,800
primary block it doesn't have this type

423
00:16:00,800 --> 00:16:02,639
code in it because you have to have the

424
00:16:02,639 --> 00:16:04,800
primary block in there that has to be

425
00:16:04,800 --> 00:16:06,160
the first block you're always going to

426
00:16:06,160 --> 00:16:07,440
have so there's no reason to really have

427
00:16:07,440 --> 00:16:09,440
a type field in there when we know the

428
00:16:09,440 --> 00:16:10,720
first block is going to be the primary

429
00:16:10,720 --> 00:16:12,959
block but now we have a type code

430
00:16:12,959 --> 00:16:14,000
telling us

431
00:16:14,000 --> 00:16:16,560
what this block is and we can see that

432
00:16:16,560 --> 00:16:17,600
we have

433
00:16:17,600 --> 00:16:20,079
there's a canonical block there one two

434
00:16:20,079 --> 00:16:23,440
three four blocks after the primary

435
00:16:23,440 --> 00:16:24,800
block

436
00:16:24,800 --> 00:16:26,240
and so

437
00:16:26,240 --> 00:16:28,880
now might be a good time to show you the

438
00:16:28,880 --> 00:16:30,240
rfc

439
00:16:30,240 --> 00:16:33,199
for this type code value

440
00:16:33,199 --> 00:16:37,839
so let me pop out to the rfc

441
00:16:40,560 --> 00:16:42,560
all right so section four in here talks

442
00:16:42,560 --> 00:16:44,560
about the blocks

443
00:16:44,560 --> 00:16:47,519
um and we can see that there are all

444
00:16:47,519 --> 00:16:49,279
these other blocks besides the primary

445
00:16:49,279 --> 00:16:51,279
block these are called extension blocks

446
00:16:51,279 --> 00:16:53,839
one of them is previous node

447
00:16:53,839 --> 00:16:55,839
which is what we see right here

448
00:16:55,839 --> 00:16:58,079
block type 6

449
00:16:58,079 --> 00:17:00,079
identifies the node that forwarded this

450
00:17:00,079 --> 00:17:01,360
bundle

451
00:17:01,360 --> 00:17:05,119
to the local node

452
00:17:05,119 --> 00:17:08,480
you'll see there's a bundle age block

453
00:17:08,480 --> 00:17:11,919
there's a hop count block

454
00:17:13,599 --> 00:17:16,799
and there is a list in here of all of

455
00:17:16,799 --> 00:17:20,400
the blocks let's see if

456
00:17:20,400 --> 00:17:22,160
so

457
00:17:22,160 --> 00:17:24,319
bundle block

458
00:17:24,319 --> 00:17:28,799
types ah there we go 9.1 section 9.1

459
00:17:28,799 --> 00:17:31,280
so in here you can see it tells you

460
00:17:31,280 --> 00:17:33,840
which bundle protocol version supports

461
00:17:33,840 --> 00:17:35,840
that block type which of course version

462
00:17:35,840 --> 00:17:38,880
six and version seven supports

463
00:17:38,880 --> 00:17:42,480
you know the primary bundle block

464
00:17:42,480 --> 00:17:43,919
and then you've got

465
00:17:43,919 --> 00:17:47,440
down here when you get to previous node

466
00:17:47,440 --> 00:17:50,080
you get to the bundle age

467
00:17:50,080 --> 00:17:52,240
and you get to the hop count those are

468
00:17:52,240 --> 00:17:54,080
those are only supported in version

469
00:17:54,080 --> 00:17:55,840
seven

470
00:17:55,840 --> 00:17:57,120
and then you'll see that we've got some

471
00:17:57,120 --> 00:17:58,799
unassigned blocks and some observed

472
00:17:58,799 --> 00:18:01,200
blocks which we'll talk about in just a

473
00:18:01,200 --> 00:18:02,240
moment

474
00:18:02,240 --> 00:18:05,120
in this trace file

475
00:18:06,000 --> 00:18:07,840
all right

476
00:18:07,840 --> 00:18:10,559
so if we look inside of here there are

477
00:18:10,559 --> 00:18:12,799
fields inside fields inside of fields

478
00:18:12,799 --> 00:18:14,480
uh inside

479
00:18:14,480 --> 00:18:17,280
of each of these blocks so with

480
00:18:17,280 --> 00:18:18,480
wireshark

481
00:18:18,480 --> 00:18:20,640
what you might want to do is when you

482
00:18:20,640 --> 00:18:22,720
get to a block type you can right mouse

483
00:18:22,720 --> 00:18:23,840
click and you can say that you want to

484
00:18:23,840 --> 00:18:26,320
expand the subtrees and that will expand

485
00:18:26,320 --> 00:18:31,600
all of the fields of that block only

486
00:18:32,160 --> 00:18:34,400
so now i can see there's a specific

487
00:18:34,400 --> 00:18:37,039
information

488
00:18:38,400 --> 00:18:41,280
previous uri this came from i'm going to

489
00:18:41,280 --> 00:18:42,799
collapse that block and we'll take a

490
00:18:42,799 --> 00:18:44,640
look at the next block

491
00:18:44,640 --> 00:18:46,400
now this block is

492
00:18:46,400 --> 00:18:48,160
interesting

493
00:18:48,160 --> 00:18:49,919
this block is throwing an error in

494
00:18:49,919 --> 00:18:52,480
wireshark

495
00:18:54,000 --> 00:18:56,160
so jen you want to tell them why this is

496
00:18:56,160 --> 00:18:59,360
throwing that error in wireshark

497
00:18:59,360 --> 00:19:00,080
so

498
00:19:00,080 --> 00:19:02,480
this canonical block mentions that it is

499
00:19:02,480 --> 00:19:05,840
type 193 which in that table in the rfc

500
00:19:05,840 --> 00:19:08,320
we can see is reserved for private or

501
00:19:08,320 --> 00:19:10,559
experimental use

502
00:19:10,559 --> 00:19:12,240
yeah so i guess when i guess when they

503
00:19:12,240 --> 00:19:14,960
were writing ion they decided to put in

504
00:19:14,960 --> 00:19:17,200
something like that and i don't know why

505
00:19:17,200 --> 00:19:18,559
we could probably could reach out to

506
00:19:18,559 --> 00:19:21,200
scott burley and jenny and ask him but

507
00:19:21,200 --> 00:19:23,280
it might be as an identifier that this

508
00:19:23,280 --> 00:19:26,000
is an ion test that they're running

509
00:19:26,000 --> 00:19:27,919
or it could be they want to see does

510
00:19:27,919 --> 00:19:29,679
this break

511
00:19:29,679 --> 00:19:32,960
ion or does it break beeping

512
00:19:32,960 --> 00:19:34,799
you know that you have something that's

513
00:19:34,799 --> 00:19:36,160
unexpected

514
00:19:36,160 --> 00:19:38,640
inside of there or did the target system

515
00:19:38,640 --> 00:19:40,480
just turn around and

516
00:19:40,480 --> 00:19:43,919
echo it back anyway

517
00:19:45,280 --> 00:19:48,400
so let's see so that's this one um now

518
00:19:48,400 --> 00:19:50,559
might be a good time if this irritates

519
00:19:50,559 --> 00:19:51,360
you

520
00:19:51,360 --> 00:19:53,520
this expert

521
00:19:53,520 --> 00:19:55,440
notification that

522
00:19:55,440 --> 00:19:58,400
a warning this is a real problem

523
00:19:58,400 --> 00:20:01,760
because it's really not

524
00:20:01,840 --> 00:20:04,480
let me show you how you can change

525
00:20:04,480 --> 00:20:06,720
wireshark's expert

526
00:20:06,720 --> 00:20:08,000
severity

527
00:20:08,000 --> 00:20:10,400
level for something

528
00:20:10,400 --> 00:20:12,799
so this one right here is what is

529
00:20:12,799 --> 00:20:15,679
generating wireshark's expert

530
00:20:15,679 --> 00:20:17,520
information we can see

531
00:20:17,520 --> 00:20:21,280
that it says unknown type code

532
00:20:21,280 --> 00:20:23,840
and it says it's undecoded doesn't know

533
00:20:23,840 --> 00:20:27,120
what it is there's the protocol for it

534
00:20:27,120 --> 00:20:28,960
and maybe i don't want these to be

535
00:20:28,960 --> 00:20:30,240
warnings because i don't think that

536
00:20:30,240 --> 00:20:32,880
they're that big of a deal

537
00:20:32,880 --> 00:20:35,760
so as i am clicking on this unknown type

538
00:20:35,760 --> 00:20:39,440
code i can see down below

539
00:20:39,440 --> 00:20:42,559
that the syntax for a display filter for

540
00:20:42,559 --> 00:20:43,360
this

541
00:20:43,360 --> 00:20:44,760
would be

542
00:20:44,760 --> 00:20:47,679
bpv7.sub underscore type underscore

543
00:20:47,679 --> 00:20:48,880
unknown

544
00:20:48,880 --> 00:20:50,720
all right i'm going to go up to edit

545
00:20:50,720 --> 00:20:53,280
preferences

546
00:20:53,280 --> 00:20:55,520
i'm going to go to expert

547
00:20:55,520 --> 00:20:57,840
i'm going to add an entry in here and in

548
00:20:57,840 --> 00:21:00,640
the field name i'm going to put in

549
00:21:00,640 --> 00:21:03,120
bpv7

550
00:21:03,120 --> 00:21:05,919
dot sub underscore type underscore

551
00:21:05,919 --> 00:21:07,440
unknown

552
00:21:07,440 --> 00:21:10,159
so anytime that happens i want wireshark

553
00:21:10,159 --> 00:21:11,200
to say

554
00:21:11,200 --> 00:21:14,240
oh it's just a note

555
00:21:14,240 --> 00:21:16,559
and i'll say okay and now we can see

556
00:21:16,559 --> 00:21:19,679
that that has changed the color

557
00:21:19,679 --> 00:21:21,440
of that

558
00:21:21,440 --> 00:21:22,720
um

559
00:21:22,720 --> 00:21:23,679
issue

560
00:21:23,679 --> 00:21:26,240
it's changed it to this blue and now my

561
00:21:26,240 --> 00:21:28,880
expert will bring it up as just a note

562
00:21:28,880 --> 00:21:30,559
and it will do that anytime it sees an

563
00:21:30,559 --> 00:21:33,120
unknown type code interestingly enough

564
00:21:33,120 --> 00:21:35,679
it just fully expanded out my dtn

565
00:21:35,679 --> 00:21:37,600
section when i did that too

566
00:21:37,600 --> 00:21:39,679
i don't really want that fully expanded

567
00:21:39,679 --> 00:21:41,679
out

568
00:21:41,679 --> 00:21:43,840
okay so there's that canonical block

569
00:21:43,840 --> 00:21:45,760
that is using an

570
00:21:45,760 --> 00:21:48,000
illegal number okay then we have the

571
00:21:48,000 --> 00:21:51,520
bundle age below that

572
00:21:51,840 --> 00:21:53,440
so there's the bundle age two

573
00:21:53,440 --> 00:21:56,559
milliseconds in here

574
00:21:57,520 --> 00:22:00,559
and then below that we have the payload

575
00:22:00,559 --> 00:22:03,039
so this is what's being sent across

576
00:22:03,039 --> 00:22:04,799
the network you can see when i click on

577
00:22:04,799 --> 00:22:05,840
the

578
00:22:05,840 --> 00:22:09,039
that block for payload

579
00:22:09,039 --> 00:22:10,880
and i click

580
00:22:10,880 --> 00:22:12,720
there we go when i click on that then

581
00:22:12,720 --> 00:22:14,799
it's just highlighting the hex dump all

582
00:22:14,799 --> 00:22:16,960
of the payload section there

583
00:22:16,960 --> 00:22:19,039
not including that indefinite break at

584
00:22:19,039 --> 00:22:21,440
the end the ff at the end so that is the

585
00:22:21,440 --> 00:22:23,919
payload in here

586
00:22:23,919 --> 00:22:26,720
it's being sent across

587
00:22:26,720 --> 00:22:28,640
if you wanted to

588
00:22:28,640 --> 00:22:29,110
um

589
00:22:29,110 --> 00:22:31,440
[Music]

590
00:22:31,440 --> 00:22:34,159
you could keep adding columns up above

591
00:22:34,159 --> 00:22:36,480
for the different block types

592
00:22:36,480 --> 00:22:39,360
that are in use

593
00:22:39,760 --> 00:22:41,840
you could add

594
00:22:41,840 --> 00:22:43,840
oh a column for the different length

595
00:22:43,840 --> 00:22:45,120
values

596
00:22:45,120 --> 00:22:47,440
let's say we take this type code payload

597
00:22:47,440 --> 00:22:50,960
here and i click and drag it up

598
00:22:51,600 --> 00:22:53,360
this is what you'll see in wireshark

599
00:22:53,360 --> 00:22:55,600
you'll see that washer will tell you

600
00:22:55,600 --> 00:22:58,080
every single

601
00:22:58,080 --> 00:22:59,360
block

602
00:22:59,360 --> 00:23:01,760
type that's inside

603
00:23:01,760 --> 00:23:04,080
of each one of these packets

604
00:23:04,080 --> 00:23:07,039
so you just need to add one column for

605
00:23:07,039 --> 00:23:08,799
type code

606
00:23:08,799 --> 00:23:10,320
and then you'll be able to see all of

607
00:23:10,320 --> 00:23:12,879
the different

608
00:23:13,760 --> 00:23:17,360
blocks that are inside of there

609
00:23:17,760 --> 00:23:19,919
oh what's interesting in here jenny

610
00:23:19,919 --> 00:23:24,000
we've got there's our bundle going out

611
00:23:24,000 --> 00:23:27,280
another bundle going out here

612
00:23:27,280 --> 00:23:30,879
there's some echoes coming back

613
00:23:34,559 --> 00:23:36,799
so you may notice when you run this that

614
00:23:36,799 --> 00:23:38,480
if you look in your udp header you'll

615
00:23:38,480 --> 00:23:41,360
see a length value of 150 and then all

616
00:23:41,360 --> 00:23:43,760
of a sudden it switches to 151 and we

617
00:23:43,760 --> 00:23:46,159
were spending some time looking at this

618
00:23:46,159 --> 00:23:48,960
and jenny figured out what it was

619
00:23:48,960 --> 00:23:51,279
do you want to tell them what it is

620
00:23:51,279 --> 00:23:53,760
this has to do with that c bar encoding

621
00:23:53,760 --> 00:23:56,720
again specifically how it is encoding

622
00:23:56,720 --> 00:23:58,400
the sequence number

623
00:23:58,400 --> 00:24:01,200
when you reach sequence number 24

624
00:24:01,200 --> 00:24:02,960
you now need two bytes to say that

625
00:24:02,960 --> 00:24:05,200
number so if you see a sudden uptick of

626
00:24:05,200 --> 00:24:08,640
a single byte it could be an encoding uh

627
00:24:08,640 --> 00:24:11,279
it could be the encoding causing

628
00:24:11,279 --> 00:24:13,200
yeah so for here you can see we're at

629
00:24:13,200 --> 00:24:14,559
sequence number

630
00:24:14,559 --> 00:24:15,679
30

631
00:24:15,679 --> 00:24:18,159
right here and this one did start at

632
00:24:18,159 --> 00:24:20,159
sequence 27 so we were above that

633
00:24:20,159 --> 00:24:21,440
sequence number

634
00:24:21,440 --> 00:24:23,279
uh 24

635
00:24:23,279 --> 00:24:24,080
that

636
00:24:24,080 --> 00:24:25,440
suddenly

637
00:24:25,440 --> 00:24:28,559
gave us an extra byte

638
00:24:28,799 --> 00:24:30,880
it's very interesting this encoding

639
00:24:30,880 --> 00:24:33,039
mechanism

640
00:24:33,039 --> 00:24:34,480
okay so as you look at this you're

641
00:24:34,480 --> 00:24:36,080
looking at these

642
00:24:36,080 --> 00:24:38,159
these bundles being sent across and

643
00:24:38,159 --> 00:24:41,840
echoed back the same data should sit in

644
00:24:41,840 --> 00:24:44,240
the bundles that are being echoed back

645
00:24:44,240 --> 00:24:47,840
now we do know that at the end of

646
00:24:47,840 --> 00:24:50,320
most of the tests that we've run

647
00:24:50,320 --> 00:24:52,400
in ion you're going to see this one

648
00:24:52,400 --> 00:24:53,520
little

649
00:24:53,520 --> 00:24:56,080
extra packet showing up or two little

650
00:24:56,080 --> 00:24:58,559
extra packets and we did talk with scott

651
00:24:58,559 --> 00:25:01,200
burley who wrote ion and is one of the

652
00:25:01,200 --> 00:25:02,960
authors of bundle protocol

653
00:25:02,960 --> 00:25:04,960
and it's the it's something with the

654
00:25:04,960 --> 00:25:06,960
closing process of a thread

655
00:25:06,960 --> 00:25:08,880
that he said kind of kicks that out at

656
00:25:08,880 --> 00:25:10,960
the end but you can disregard that last

657
00:25:10,960 --> 00:25:12,480
little

658
00:25:12,480 --> 00:25:14,559
it's it's the toilet paper hanging on

659
00:25:14,559 --> 00:25:17,200
the shoe of the test

660
00:25:17,200 --> 00:25:20,159
i guess something like that

661
00:25:20,159 --> 00:25:22,400
if you have other loopback traffic in

662
00:25:22,400 --> 00:25:24,240
your trace file and you don't want that

663
00:25:24,240 --> 00:25:27,279
other traffic to be saved you would put

664
00:25:27,279 --> 00:25:31,039
in a filter for ip.addr equal sign equal

665
00:25:31,039 --> 00:25:34,279
sign 127.0.0.1

666
00:25:34,480 --> 00:25:36,640
you know you could do 127

667
00:25:36,640 --> 00:25:38,240
dot anything

668
00:25:38,240 --> 00:25:40,000
and when you apply that you would have

669
00:25:40,000 --> 00:25:43,760
this loopback traffic from your test

670
00:25:43,760 --> 00:25:45,279
and that's when you would say export

671
00:25:45,279 --> 00:25:47,279
specified packets

672
00:25:47,279 --> 00:25:49,520
here i've got a directory oops wait

673
00:25:49,520 --> 00:25:51,279
cancel now i don't want to replace that

674
00:25:51,279 --> 00:25:52,080
one

675
00:25:52,080 --> 00:25:55,039
i'm going to go ahead and call this

676
00:25:55,039 --> 00:25:58,039
ion411

677
00:26:04,159 --> 00:26:06,559
and now we're ready to start the next

678
00:26:06,559 --> 00:26:09,559
test

679
00:26:14,880 --> 00:26:18,320
all right so now

680
00:26:18,320 --> 00:26:19,520
i'm going to go ahead and just start

681
00:26:19,520 --> 00:26:21,600
wireshark running i don't want to save

682
00:26:21,600 --> 00:26:25,240
the previous stuff

683
00:26:26,000 --> 00:26:27,279
you'll see it's

684
00:26:27,279 --> 00:26:29,039
starting in the loopback

685
00:26:29,039 --> 00:26:30,799
interface here so i want to make sure

686
00:26:30,799 --> 00:26:33,120
i'm capturing a loop back

687
00:26:33,120 --> 00:26:34,480
and what i'm going to run this time

688
00:26:34,480 --> 00:26:35,840
jenny

689
00:26:35,840 --> 00:26:37,279
this time we're going to do

690
00:26:37,279 --> 00:26:39,600
chat

691
00:26:41,039 --> 00:26:43,360
this is going to spit out a text file

692
00:26:43,360 --> 00:26:45,279
from one node that will be reflected

693
00:26:45,279 --> 00:26:48,279
back

694
00:26:52,000 --> 00:26:53,919
so it goes through making sure ion's

695
00:26:53,919 --> 00:26:57,360
been shut down from before

696
00:27:01,120 --> 00:27:02,880
and you can see how those dots

697
00:27:02,880 --> 00:27:06,919
go across with the traffic

698
00:27:11,919 --> 00:27:13,840
and

699
00:27:13,840 --> 00:27:16,720
tells you ion will now stop and clean

700
00:27:16,720 --> 00:27:18,480
the node for you

701
00:27:18,480 --> 00:27:20,480
goes to the cleanup process we can see

702
00:27:20,480 --> 00:27:22,559
that the that ion is shutting down

703
00:27:22,559 --> 00:27:25,520
because of the those spare little weird

704
00:27:25,520 --> 00:27:29,520
packets that show up in the trace file

705
00:27:30,320 --> 00:27:33,279
and again we have that

706
00:27:33,279 --> 00:27:35,520
experimental

707
00:27:35,520 --> 00:27:36,720
um

708
00:27:36,720 --> 00:27:37,919
block

709
00:27:37,919 --> 00:27:38,880
number

710
00:27:38,880 --> 00:27:42,840
showing up that 193.

711
00:27:44,640 --> 00:27:46,159
so here's something i thought was

712
00:27:46,159 --> 00:27:48,399
interesting in this one

713
00:27:48,399 --> 00:27:50,960
if we look at the first frame when this

714
00:27:50,960 --> 00:27:53,360
runs

715
00:27:57,679 --> 00:28:00,960
okay at the beginning you have

716
00:28:00,960 --> 00:28:04,240
a b ping that goes across

717
00:28:04,240 --> 00:28:06,320
and there's our b ping payload down

718
00:28:06,320 --> 00:28:08,320
there

719
00:28:08,320 --> 00:28:10,240
there's another b ping that

720
00:28:10,240 --> 00:28:14,000
that goes across right here

721
00:28:14,480 --> 00:28:16,399
and then all of a sudden it says this is

722
00:28:16,399 --> 00:28:21,439
some test input to bp chat

723
00:28:25,039 --> 00:28:27,200
so you can read what's actually being

724
00:28:27,200 --> 00:28:29,600
sent across and what's interesting in

725
00:28:29,600 --> 00:28:31,760
here is

726
00:28:31,760 --> 00:28:33,679
if you've followed streams before you

727
00:28:33,679 --> 00:28:35,039
can right mouse click and say that you

728
00:28:35,039 --> 00:28:37,679
want to follow the udp stream

729
00:28:37,679 --> 00:28:41,600
but it doesn't make a lot of sense

730
00:28:41,600 --> 00:28:44,880
wireshark marks all of this

731
00:28:44,880 --> 00:28:46,640
the same color

732
00:28:46,640 --> 00:28:50,320
because it came from 127.0.0.1

733
00:28:50,320 --> 00:28:51,880
going to

734
00:28:51,880 --> 00:28:54,080
127.0.0.1 wireshark is not

735
00:28:54,080 --> 00:28:55,600
differentiating

736
00:28:55,600 --> 00:28:57,760
the communications based on source and

737
00:28:57,760 --> 00:28:59,679
destination port number that could

738
00:28:59,679 --> 00:29:01,919
possibly be different or you know and it

739
00:29:01,919 --> 00:29:03,679
doesn't understand

740
00:29:03,679 --> 00:29:06,080
that these are different ipn node

741
00:29:06,080 --> 00:29:07,360
numbers on each side of the

742
00:29:07,360 --> 00:29:08,880
communication

743
00:29:08,880 --> 00:29:10,960
so

744
00:29:10,960 --> 00:29:13,840
you'll see

745
00:29:14,080 --> 00:29:16,559
this is some test input to bp chat and

746
00:29:16,559 --> 00:29:18,559
this is it now it's being echoed back

747
00:29:18,559 --> 00:29:20,879
here

748
00:29:20,960 --> 00:29:23,760
this is going out

749
00:29:23,760 --> 00:29:24,640
and

750
00:29:24,640 --> 00:29:27,600
this is being reflected back from this

751
00:29:27,600 --> 00:29:30,480
one up here

752
00:29:32,799 --> 00:29:34,399
here's another thing we noticed we were

753
00:29:34,399 --> 00:29:36,159
analyzing it

754
00:29:36,159 --> 00:29:39,440
when we looked at the conversations here

755
00:29:39,440 --> 00:29:40,559
check out the

756
00:29:40,559 --> 00:29:42,240
what where shark says the conversations

757
00:29:42,240 --> 00:29:43,360
are

758
00:29:43,360 --> 00:29:44,960
in this

759
00:29:44,960 --> 00:29:47,679
echoing process

760
00:29:47,679 --> 00:29:50,559
it says that there are zero bytes coming

761
00:29:50,559 --> 00:29:52,360
from

762
00:29:52,360 --> 00:29:57,279
127.0.0.1 from port 4556

763
00:29:57,279 --> 00:30:00,960
all the bytes are coming from 54 468

764
00:30:00,960 --> 00:30:03,840
port number 54 468. so jenny and i were

765
00:30:03,840 --> 00:30:06,399
looking at this and

766
00:30:06,399 --> 00:30:08,559
it was interesting

767
00:30:08,559 --> 00:30:11,440
yep it's true they both receive at the

768
00:30:11,440 --> 00:30:14,640
same port and send at the same port

769
00:30:14,640 --> 00:30:17,360
so because of this we decided in our

770
00:30:17,360 --> 00:30:19,840
profile we wanted to put the source port

771
00:30:19,840 --> 00:30:23,279
and the destination port information

772
00:30:23,279 --> 00:30:24,159
up

773
00:30:24,159 --> 00:30:26,000
in our columns here

774
00:30:26,000 --> 00:30:27,919
and sure enough look at this

775
00:30:27,919 --> 00:30:29,760
this is stuff going back and forth

776
00:30:29,760 --> 00:30:32,240
between hosts

777
00:30:32,240 --> 00:30:33,919
but they both

778
00:30:33,919 --> 00:30:37,679
use the same port number for the source

779
00:30:37,679 --> 00:30:40,159
when they're sending or echoing back

780
00:30:40,159 --> 00:30:44,399
something which is really really strange

781
00:30:44,399 --> 00:30:46,960
but taking time to look at this and

782
00:30:46,960 --> 00:30:48,799
spend time with wireshark

783
00:30:48,799 --> 00:30:51,520
changing wireshark's

784
00:30:51,520 --> 00:30:52,559
settings

785
00:30:52,559 --> 00:30:54,720
makes it easier for us to understand

786
00:30:54,720 --> 00:30:56,799
some of these strange behaviors that are

787
00:30:56,799 --> 00:30:59,039
going on using this

788
00:30:59,039 --> 00:31:01,840
new protocol

789
00:31:02,080 --> 00:31:04,240
so i'm going to stop the capture at this

790
00:31:04,240 --> 00:31:06,399
point

791
00:31:06,399 --> 00:31:08,159
i don't have any other background

792
00:31:08,159 --> 00:31:10,000
traffic in here so

793
00:31:10,000 --> 00:31:11,600
i'm just going to say i want to save

794
00:31:11,600 --> 00:31:13,840
this trace file

795
00:31:13,840 --> 00:31:18,480
and i'm going to save this one as

796
00:31:18,480 --> 00:31:21,360
vp chat

797
00:31:22,640 --> 00:31:24,480
and we'll make those two trace files

798
00:31:24,480 --> 00:31:27,039
available to you

799
00:31:27,039 --> 00:31:29,600
to work with

800
00:31:29,760 --> 00:31:31,360
is there anything you

801
00:31:31,360 --> 00:31:32,640
can think of that we should share with

802
00:31:32,640 --> 00:31:36,320
folks before we go to our closing slide

803
00:31:36,399 --> 00:31:37,679
i would say

804
00:31:37,679 --> 00:31:40,320
when you get the trace files and

805
00:31:40,320 --> 00:31:42,320
definitely do take a look at them

806
00:31:42,320 --> 00:31:44,159
go through the steps to create your own

807
00:31:44,159 --> 00:31:46,880
profile it is the best way to come to

808
00:31:46,880 --> 00:31:49,120
grips with the protocol and see its

809
00:31:49,120 --> 00:31:50,960
little nitty gritty details because

810
00:31:50,960 --> 00:31:53,200
there is a lot of that plus there are so

811
00:31:53,200 --> 00:31:54,880
many more tests that we haven't touched

812
00:31:54,880 --> 00:31:56,799
on in this

813
00:31:56,799 --> 00:31:58,159
yeah spend some time with the other

814
00:31:58,159 --> 00:32:01,200
tests and read the readme and the ion

815
00:32:01,200 --> 00:32:02,640
directory

816
00:32:02,640 --> 00:32:04,399
wow

817
00:32:04,399 --> 00:32:06,720
read the readme i'm just telling you

818
00:32:06,720 --> 00:32:08,799
right now

819
00:32:08,799 --> 00:32:10,559
if you're like us and you just

820
00:32:10,559 --> 00:32:13,600
jump in you know oh let me just try this

821
00:32:13,600 --> 00:32:14,880
and play this

822
00:32:14,880 --> 00:32:16,559
you know play around with this uh yeah

823
00:32:16,559 --> 00:32:17,440
you can

824
00:32:17,440 --> 00:32:18,799
spend a little time going down some

825
00:32:18,799 --> 00:32:20,320
rabbit holes so

826
00:32:20,320 --> 00:32:23,039
just just a warning on that one the

827
00:32:23,039 --> 00:32:24,720
readme will be your friend with this

828
00:32:24,720 --> 00:32:25,840
application

829
00:32:25,840 --> 00:32:29,760
so true okay so let me get back to our

830
00:32:29,760 --> 00:32:32,399
closing slide here

831
00:32:32,399 --> 00:32:33,600
so

832
00:32:33,600 --> 00:32:35,519
jenny why don't you go ahead and

833
00:32:35,519 --> 00:32:38,159
wrap it up for us with this and i can if

834
00:32:38,159 --> 00:32:39,840
you'd like jenny i can toggle some of

835
00:32:39,840 --> 00:32:41,360
these to show them

836
00:32:41,360 --> 00:32:43,519
these items on the right-hand side of my

837
00:32:43,519 --> 00:32:44,640
screen

838
00:32:44,640 --> 00:32:46,960
while you mention what's going on

839
00:32:46,960 --> 00:32:49,200
okay

840
00:32:49,600 --> 00:32:50,640
all right

841
00:32:50,640 --> 00:32:52,559
if you want to get ion

842
00:32:52,559 --> 00:32:54,840
you should go to the official page on

843
00:32:54,840 --> 00:32:58,320
sourceforge this is the official release

844
00:32:58,320 --> 00:33:00,880
from the folks at the jpl

845
00:33:00,880 --> 00:33:01,919
um

846
00:33:01,919 --> 00:33:04,320
it's pretty easy to set up once you get

847
00:33:04,320 --> 00:33:07,760
the first couple of steps in

848
00:33:09,279 --> 00:33:11,760
beyond that i would say take a look at

849
00:33:11,760 --> 00:33:14,399
the rfc itself you are going to hit

850
00:33:14,399 --> 00:33:15,279
little

851
00:33:15,279 --> 00:33:16,559
uh

852
00:33:16,559 --> 00:33:18,559
little details that will throw you off

853
00:33:18,559 --> 00:33:19,760
because

854
00:33:19,760 --> 00:33:21,279
bundle has to work differently from

855
00:33:21,279 --> 00:33:23,760
other protocols to tolerate the

856
00:33:23,760 --> 00:33:26,399
incredible environment of space

857
00:33:26,399 --> 00:33:27,519
um

858
00:33:27,519 --> 00:33:28,880
and of course

859
00:33:28,880 --> 00:33:31,279
wireshark the wireshark project there

860
00:33:31,279 --> 00:33:33,679
are tons of resources to help any

861
00:33:33,679 --> 00:33:35,519
troubleshooting there

862
00:33:35,519 --> 00:33:37,440
if you're hitting technical issues with

863
00:33:37,440 --> 00:33:39,279
wireshark

864
00:33:39,279 --> 00:33:41,760
we also have

865
00:33:41,760 --> 00:33:42,640
the

866
00:33:42,640 --> 00:33:44,480
interplanetary networking special

867
00:33:44,480 --> 00:33:46,799
interest group we are both a member of

868
00:33:46,799 --> 00:33:50,720
this group it's fantastic it has so many

869
00:33:50,720 --> 00:33:52,960
experts who care so deeply about this

870
00:33:52,960 --> 00:33:55,519
project from space agencies across the

871
00:33:55,519 --> 00:33:56,720
globe

872
00:33:56,720 --> 00:33:58,559
including

873
00:33:58,559 --> 00:33:59,760
including

874
00:33:59,760 --> 00:34:00,880
nasa

875
00:34:00,880 --> 00:34:03,760
including the esa the european state

876
00:34:03,760 --> 00:34:06,559
space agency jaxa

877
00:34:06,559 --> 00:34:08,000
um

878
00:34:08,000 --> 00:34:10,239
yeah and we also have private groups

879
00:34:10,239 --> 00:34:11,520
that have entered

880
00:34:11,520 --> 00:34:13,440
yeah and there's also

881
00:34:13,440 --> 00:34:15,520
one really interesting person that's in

882
00:34:15,520 --> 00:34:19,599
the group that uh designed and can

883
00:34:19,599 --> 00:34:22,159
thought up delay and disruption tolerant

884
00:34:22,159 --> 00:34:23,520
networking

885
00:34:23,520 --> 00:34:26,079
yes designing the next internet after he

886
00:34:26,079 --> 00:34:29,119
designed the first one vint cerf

887
00:34:29,119 --> 00:34:32,000
is a part of the interplanetary

888
00:34:32,000 --> 00:34:34,480
networking sig he's very active and

889
00:34:34,480 --> 00:34:35,760
helping too

890
00:34:35,760 --> 00:34:37,040
he is guiding

891
00:34:37,040 --> 00:34:38,719
the formation of

892
00:34:38,719 --> 00:34:41,280
the next internet and its governance and

893
00:34:41,280 --> 00:34:43,599
its technical aspects as well

894
00:34:43,599 --> 00:34:44,639
so

895
00:34:44,639 --> 00:34:46,719
head out to ipnik.org i just want to

896
00:34:46,719 --> 00:34:48,560
mention that we have some ipm sig

897
00:34:48,560 --> 00:34:51,599
academy events coming up

898
00:34:51,599 --> 00:34:52,560
and

899
00:34:52,560 --> 00:34:55,280
that's a whole series of events running

900
00:34:55,280 --> 00:34:57,599
over a one-year time frame to educate

901
00:34:57,599 --> 00:35:00,160
people on interplanetary communications

902
00:35:00,160 --> 00:35:01,280
and then you want to explain to them

903
00:35:01,280 --> 00:35:03,599
about our library

904
00:35:03,599 --> 00:35:05,920
yes the interplanetary networking seg

905
00:35:05,920 --> 00:35:07,119
library

906
00:35:07,119 --> 00:35:09,040
uh was put together by the technical

907
00:35:09,040 --> 00:35:11,440
documentation working group it is there

908
00:35:11,440 --> 00:35:13,839
to make all this information as readily

909
00:35:13,839 --> 00:35:17,040
available to you as possible and in this

910
00:35:17,040 --> 00:35:19,760
library we have information about the

911
00:35:19,760 --> 00:35:21,839
progress of the solar system internet

912
00:35:21,839 --> 00:35:24,880
initiative we have details of specific

913
00:35:24,880 --> 00:35:26,880
implementations and some of the crazy

914
00:35:26,880 --> 00:35:28,320
cool stuff that these protocols are

915
00:35:28,320 --> 00:35:31,440
being used for

916
00:35:31,440 --> 00:35:33,200
it's really easy to go down a rabbit

917
00:35:33,200 --> 00:35:34,640
hole here because

918
00:35:34,640 --> 00:35:35,440
it's

919
00:35:35,440 --> 00:35:37,680
it's absolutely wild

920
00:35:37,680 --> 00:35:40,400
yep but we did try to tag the library to

921
00:35:40,400 --> 00:35:43,520
help people that are newer in this area

922
00:35:43,520 --> 00:35:45,680
or people that really just want to focus

923
00:35:45,680 --> 00:35:46,640
on

924
00:35:46,640 --> 00:35:49,760
uh implementation of delay and

925
00:35:49,760 --> 00:35:52,240
disruption tolerant networking so on the

926
00:35:52,240 --> 00:35:53,680
left hand side you'll see that there's a

927
00:35:53,680 --> 00:35:54,400
little

928
00:35:54,400 --> 00:35:56,160
tag area at the bottom and if you don't

929
00:35:56,160 --> 00:35:58,480
see it drag it up it's just out of your

930
00:35:58,480 --> 00:35:59,520
view

931
00:35:59,520 --> 00:36:02,640
and you'll see the history of dtn vince

932
00:36:02,640 --> 00:36:04,960
mission to bring the internet to space

933
00:36:04,960 --> 00:36:08,000
dtn for beginners there are some really

934
00:36:08,000 --> 00:36:11,680
great resources here we also since some

935
00:36:11,680 --> 00:36:12,560
people are

936
00:36:12,560 --> 00:36:14,079
more familiar and comfortable with a

937
00:36:14,079 --> 00:36:15,599
directory structure

938
00:36:15,599 --> 00:36:17,359
uh with folders

939
00:36:17,359 --> 00:36:19,359
we have folders and these items are in a

940
00:36:19,359 --> 00:36:21,599
folder display

941
00:36:21,599 --> 00:36:24,640
so this is a great resource and one of

942
00:36:24,640 --> 00:36:27,680
the cool things about it is that in this

943
00:36:27,680 --> 00:36:28,800
group

944
00:36:28,800 --> 00:36:31,599
you're going to see let me get back here

945
00:36:31,599 --> 00:36:33,119
to our main page

946
00:36:33,119 --> 00:36:35,040
that's scott burley he's the head of our

947
00:36:35,040 --> 00:36:38,000
technical documentation working group so

948
00:36:38,000 --> 00:36:39,920
we've been very fortunate to work with

949
00:36:39,920 --> 00:36:42,000
scott on this you also see henry

950
00:36:42,000 --> 00:36:43,920
danielson he's the one that got us

951
00:36:43,920 --> 00:36:47,440
involved in defcon to bring in wireshark

952
00:36:47,440 --> 00:36:50,960
analysis of bundle protocol so thanks

953
00:36:50,960 --> 00:36:54,640
henry thanks henry

954
00:36:54,640 --> 00:36:57,520
all right well

955
00:36:57,920 --> 00:37:00,160
thanks much and

956
00:37:00,160 --> 00:37:03,040
all right thank you in space

957
00:37:03,040 --> 00:37:06,359
at astra

