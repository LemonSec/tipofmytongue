1
00:00:00,799 --> 00:00:02,080
hello everyone

2
00:00:02,080 --> 00:00:04,160
welcome to canada's demonstration at

3
00:00:04,160 --> 00:00:08,080
defcon car hacking village 2022.

4
00:00:08,320 --> 00:00:09,920
a little bit of quick acknowledgement

5
00:00:09,920 --> 00:00:11,759
before we go into the talk many of the

6
00:00:11,759 --> 00:00:14,160
images used here are not created by me

7
00:00:14,160 --> 00:00:15,519
and definitely the credit goes to the

8
00:00:15,519 --> 00:00:17,600
owners of those images and all these

9
00:00:17,600 --> 00:00:19,359
views or opinions are from my learnings

10
00:00:19,359 --> 00:00:21,039
of car hacking and canalized team

11
00:00:21,039 --> 00:00:23,359
learnings of car hacking we apologize if

12
00:00:23,359 --> 00:00:26,000
we miscommunicate any information and

13
00:00:26,000 --> 00:00:27,920
also using this tool you can only

14
00:00:27,920 --> 00:00:29,599
control certain functions of the vehicle

15
00:00:29,599 --> 00:00:31,760
depending upon the hardware you're using

16
00:00:31,760 --> 00:00:33,520
and how those functions are implemented

17
00:00:33,520 --> 00:00:35,280
in the vehicle not the antivirus this is

18
00:00:35,280 --> 00:00:37,440
not like a swiss army tool of doing

19
00:00:37,440 --> 00:00:39,360
everything in one click no nothing like

20
00:00:39,360 --> 00:00:40,640
that

21
00:00:40,640 --> 00:00:42,879
and a little bit of shameless promotion

22
00:00:42,879 --> 00:00:45,840
about me my name is karthik lady and i'm

23
00:00:45,840 --> 00:00:48,000
currently working as an iot uh security

24
00:00:48,000 --> 00:00:50,640
researcher at pyr2 i love automotive and

25
00:00:50,640 --> 00:00:52,800
iot security breaking things and trying

26
00:00:52,800 --> 00:00:54,960
to do as much as i can and i've been a

27
00:00:54,960 --> 00:00:57,360
speaker at conferences such as black cat

28
00:00:57,360 --> 00:01:00,480
asia arsenal uh last year in asia and

29
00:01:00,480 --> 00:01:02,320
the cocoon air srj track open is a

30
00:01:02,320 --> 00:01:04,000
conference which happens in india and

31
00:01:04,000 --> 00:01:06,159
they say there's a srj has a drag in

32
00:01:06,159 --> 00:01:08,799
that and seaside's conference and uh

33
00:01:08,799 --> 00:01:11,520
besides telekayaking village and apart

34
00:01:11,520 --> 00:01:13,439
from this work stuff i'm an absolute

35
00:01:13,439 --> 00:01:15,759
community lover and volunteer i

36
00:01:15,759 --> 00:01:18,479
work with the sites community which is a

37
00:01:18,479 --> 00:01:20,640
completely open source community and a

38
00:01:20,640 --> 00:01:21,920
free conference for anyone who is

39
00:01:21,920 --> 00:01:23,600
interested to learn and i'm an open

40
00:01:23,600 --> 00:01:25,280
source contributor along with the tools

41
00:01:25,280 --> 00:01:27,439
whatever i make the content which i make

42
00:01:27,439 --> 00:01:30,159
it on blogs and uh the tools and all are

43
00:01:30,159 --> 00:01:32,560
completely open sourced uh and yeah i

44
00:01:32,560 --> 00:01:34,400
love watching durham one yeah some

45
00:01:34,400 --> 00:01:36,400
people send still a kid yeah i'm a kid

46
00:01:36,400 --> 00:01:37,920
if you have good one please give it to

47
00:01:37,920 --> 00:01:39,600
me i would love to see the episodes

48
00:01:39,600 --> 00:01:41,439
which i don't know and generally i'd go

49
00:01:41,439 --> 00:01:43,040
to film stations or something to do this

50
00:01:43,040 --> 00:01:46,240
thing uh currently i'm working on a

51
00:01:46,240 --> 00:01:48,479
newest iot security audit platform

52
00:01:48,479 --> 00:01:51,600
called iot uh auditor from my company so

53
00:01:51,600 --> 00:01:53,119
that's about me

54
00:01:53,119 --> 00:01:56,240
and i want to introduce my friend rahul

55
00:01:56,240 --> 00:01:57,759
who unfortunately due to um

56
00:01:57,759 --> 00:02:00,159
circumstances he couldn't be here

57
00:02:00,159 --> 00:02:02,159
for the recording and he is currently

58
00:02:02,159 --> 00:02:03,840
working as a digital specialist engineer

59
00:02:03,840 --> 00:02:06,960
at imposses he's the code guy

60
00:02:06,960 --> 00:02:09,038
so generally it happens is like i code

61
00:02:09,038 --> 00:02:10,720
it and i give it to him he cleans the

62
00:02:10,720 --> 00:02:13,040
code and he scolds me like writing a bad

63
00:02:13,040 --> 00:02:15,440
code but yeah my code works so i still

64
00:02:15,440 --> 00:02:18,160
defend myself his absolute open source

65
00:02:18,160 --> 00:02:20,640
contributor like me he also did level up

66
00:02:20,640 --> 00:02:22,879
a lot of libraries uh i think i believe

67
00:02:22,879 --> 00:02:25,440
he worked on making mode mcu how can it

68
00:02:25,440 --> 00:02:27,360
be used in iot automated projects and

69
00:02:27,360 --> 00:02:29,360
all he's a lot passionate about robotics

70
00:02:29,360 --> 00:02:31,760
and mechatronics and he thinks a lot

71
00:02:31,760 --> 00:02:34,160
things a lot a lot a lot

72
00:02:34,160 --> 00:02:38,000
so that's about us so the main uh point

73
00:02:38,000 --> 00:02:40,160
around of this whole dualies on canvas

74
00:02:40,160 --> 00:02:42,879
so if we see why the industry needs

75
00:02:42,879 --> 00:02:44,959
canvas and why we need a lot of canvas

76
00:02:44,959 --> 00:02:47,680
in in vehicle uh networks or in vehicle

77
00:02:47,680 --> 00:02:52,000
in vehicles uh if you can see the uh

78
00:02:52,160 --> 00:02:54,160
vehicle here in the top thing so there

79
00:02:54,160 --> 00:02:56,160
are a lot of components uh so what

80
00:02:56,160 --> 00:02:58,239
happened is car manufacturers or vehicle

81
00:02:58,239 --> 00:02:59,680
manufacturers when they started adding

82
00:02:59,680 --> 00:03:02,159
more and more actuators or sensors they

83
00:03:02,159 --> 00:03:03,840
want to make a closed loop

84
00:03:03,840 --> 00:03:05,360
feedback-based centralized network

85
00:03:05,360 --> 00:03:07,760
inside it so each one can uh talk to

86
00:03:07,760 --> 00:03:09,920
each other and make the whole vehicle go

87
00:03:09,920 --> 00:03:11,760
forward or

88
00:03:11,760 --> 00:03:13,840
make certain functions they have to make

89
00:03:13,840 --> 00:03:15,360
sure that each and every component is

90
00:03:15,360 --> 00:03:17,200
connected with each other so if you keep

91
00:03:17,200 --> 00:03:18,959
going like this it literally makes a

92
00:03:18,959 --> 00:03:21,120
hair of wiring and also it creates a lot

93
00:03:21,120 --> 00:03:23,519
of drag because of those wires and

94
00:03:23,519 --> 00:03:25,360
obviously the fuel efficiency and all

95
00:03:25,360 --> 00:03:27,599
goes slow so they had to come up with a

96
00:03:27,599 --> 00:03:30,640
new uh edge protocol in 1980s where you

97
00:03:30,640 --> 00:03:33,280
can handle all the data in a very good

98
00:03:33,280 --> 00:03:35,360
centralized fashion and you don't

99
00:03:35,360 --> 00:03:37,440
have to drop the packets also imagine

100
00:03:37,440 --> 00:03:38,959
you want to slam the brakes but it is

101
00:03:38,959 --> 00:03:40,319
getting dropped because of a lot of

102
00:03:40,319 --> 00:03:41,599
traffic in the network that is not all

103
00:03:41,599 --> 00:03:42,879
sort of happen

104
00:03:42,879 --> 00:03:45,120
so engineers at bosch came up with

105
00:03:45,120 --> 00:03:47,920
canvas where like you see it it is a

106
00:03:47,920 --> 00:03:51,440
single line it actually connects all the

107
00:03:51,440 --> 00:03:53,280
components in your vehicle issues and

108
00:03:53,280 --> 00:03:55,360
all the stuff uh and

109
00:03:55,360 --> 00:03:57,599
well uh is used basically

110
00:03:57,599 --> 00:03:59,680
and some actuation sensors will connect

111
00:03:59,680 --> 00:04:03,040
with issues and all but the main

112
00:04:03,040 --> 00:04:05,280
point here is like you just removed all

113
00:04:05,280 --> 00:04:07,519
the wiring and going on single bus

114
00:04:07,519 --> 00:04:10,239
never the less it also came with few

115
00:04:10,239 --> 00:04:12,480
drawbacks such as lack of encryption and

116
00:04:12,480 --> 00:04:14,319
the lack of authentication while sending

117
00:04:14,319 --> 00:04:17,120
these things and it's another way if we

118
00:04:17,120 --> 00:04:19,040
see it works morely on centralized

119
00:04:19,040 --> 00:04:20,399
fashion so everybody is literally

120
00:04:20,399 --> 00:04:21,680
trusting every other packet which is

121
00:04:21,680 --> 00:04:23,919
flowing in the bus so this actually

122
00:04:23,919 --> 00:04:25,919
opened up to a lot sort of frame attacks

123
00:04:25,919 --> 00:04:27,919
and protocol attacks

124
00:04:27,919 --> 00:04:30,080
where you actually do this and all we

125
00:04:30,080 --> 00:04:32,160
our tool is more focused on the frame

126
00:04:32,160 --> 00:04:33,680
attacks

127
00:04:33,680 --> 00:04:36,400
so if you see can also uh

128
00:04:36,400 --> 00:04:37,199
this

129
00:04:37,199 --> 00:04:39,280
has a carrier sense multiple access with

130
00:04:39,280 --> 00:04:41,040
collision avoidance which actually makes

131
00:04:41,040 --> 00:04:42,400
sure none of the packages are getting

132
00:04:42,400 --> 00:04:44,320
dropped and obviously there are many

133
00:04:44,320 --> 00:04:47,600
other protocols like afghan ft uh

134
00:04:47,600 --> 00:04:49,759
and delin bus and all flex ray on all

135
00:04:49,759 --> 00:04:51,199
this automotive ethernet at all just

136
00:04:51,199 --> 00:04:53,360
scan is one of them and yeah it is one

137
00:04:53,360 --> 00:04:56,240
of the efficient ways because it has csm

138
00:04:56,240 --> 00:04:58,400
ca and also differential signaling

139
00:04:58,400 --> 00:05:00,479
basically to resist to the noises and uh

140
00:05:00,479 --> 00:05:02,320
get this thing the wire which we are

141
00:05:02,320 --> 00:05:03,759
seeing in the previous slide it's just

142
00:05:03,759 --> 00:05:05,520
like a single wire a twisted pair of

143
00:05:05,520 --> 00:05:07,680
wire which goes of can high and can low

144
00:05:07,680 --> 00:05:09,440
and flows around through all the issues

145
00:05:09,440 --> 00:05:11,759
in the vehicle and all periodically can

146
00:05:11,759 --> 00:05:13,360
also can transmit up to one amp per

147
00:05:13,360 --> 00:05:16,240
second but low speed can go up to 125

148
00:05:16,240 --> 00:05:20,720
kilo kbps so that is there and if you

149
00:05:20,720 --> 00:05:22,320
see

150
00:05:22,320 --> 00:05:24,560
uh from an eagle point of view from a

151
00:05:24,560 --> 00:05:26,800
top point of view about a can packet you

152
00:05:26,800 --> 00:05:28,720
can see something called arbitration id

153
00:05:28,720 --> 00:05:31,039
which actually make sure which packet

154
00:05:31,039 --> 00:05:34,080
has to go print and control field uh and

155
00:05:34,080 --> 00:05:35,680
data field data build which contains the

156
00:05:35,680 --> 00:05:36,960
exact data

157
00:05:36,960 --> 00:05:39,840
so uh in a very simple piece of cake

158
00:05:39,840 --> 00:05:42,160
point of view if you know

159
00:05:42,160 --> 00:05:45,360
uh what arbitration id and what data is

160
00:05:45,360 --> 00:05:47,120
actually making a

161
00:05:47,120 --> 00:05:49,600
certain function to go on in this case a

162
00:05:49,600 --> 00:05:52,160
certain function can be a indication or

163
00:05:52,160 --> 00:05:54,400
a turn your steering nowadays many of

164
00:05:54,400 --> 00:05:56,160
these things are happening drive by wire

165
00:05:56,160 --> 00:05:58,240
instructions so if you steer your

166
00:05:58,240 --> 00:05:59,680
turning it might be happening on a

167
00:05:59,680 --> 00:06:02,479
canvas any canvas it doesn't depend like

168
00:06:02,479 --> 00:06:04,160
everybody should be having canvases

169
00:06:04,160 --> 00:06:06,400
because modern is having multiple canvas

170
00:06:06,400 --> 00:06:09,199
uh networks also so basically if you

171
00:06:09,199 --> 00:06:11,280
know the exact package and the data you

172
00:06:11,280 --> 00:06:13,680
can do a lot of stuff but in order to

173
00:06:13,680 --> 00:06:15,759
get that exact packet and data and uh

174
00:06:15,759 --> 00:06:18,560
standard can format is 500 kbps so for

175
00:06:18,560 --> 00:06:21,120
that they you get a lot and lots of

176
00:06:21,120 --> 00:06:23,280
packets so manually reversing all of

177
00:06:23,280 --> 00:06:25,120
them is a

178
00:06:25,120 --> 00:06:28,479
very uh hectic process so this is

179
00:06:28,479 --> 00:06:29,919
happening for me when i was

180
00:06:29,919 --> 00:06:31,680
participating in different ctfs

181
00:06:31,680 --> 00:06:34,160
especially kayaking velocities i was

182
00:06:34,160 --> 00:06:36,400
finding it very hard to uh go through

183
00:06:36,400 --> 00:06:38,400
each packet and see

184
00:06:38,400 --> 00:06:40,000
the traditional way which we all know is

185
00:06:40,000 --> 00:06:42,639
like halfing damage of it replay it to

186
00:06:42,639 --> 00:06:44,319
see if your action is actually happening

187
00:06:44,319 --> 00:06:46,000
or not and then do according to that but

188
00:06:46,000 --> 00:06:47,759
i wanted to come up with some kind of

189
00:06:47,759 --> 00:06:49,840
tool which will help me

190
00:06:49,840 --> 00:06:51,599
you know which will automatically say me

191
00:06:51,599 --> 00:06:52,880
okay these are the packets which

192
00:06:52,880 --> 00:06:54,240
happened in this specific time frame

193
00:06:54,240 --> 00:06:55,759
which are not happening in general time

194
00:06:55,759 --> 00:06:58,720
frame that is one thing and uh well i

195
00:06:58,720 --> 00:07:00,319
was thinking uh

196
00:07:00,319 --> 00:07:02,080
you know a lot of this canvas attacks

197
00:07:02,080 --> 00:07:04,400
and all this after i joined i started my

198
00:07:04,400 --> 00:07:06,800
uh journey uh job uh real corporate uh

199
00:07:06,800 --> 00:07:09,199
job and all a lot of the attack vectors

200
00:07:09,199 --> 00:07:10,639
while i was working in iot security and

201
00:07:10,639 --> 00:07:13,360
automotive they are like uh you know

202
00:07:13,360 --> 00:07:15,759
morally towards hardware based you have

203
00:07:15,759 --> 00:07:17,680
to have a hardware connection with that

204
00:07:17,680 --> 00:07:20,000
so i was thinking uh is there any way i

205
00:07:20,000 --> 00:07:22,720
can put a remote thing using this tool

206
00:07:22,720 --> 00:07:25,440
because this now has in my mind uh you

207
00:07:25,440 --> 00:07:27,280
know uh the automatic filtering thing

208
00:07:27,280 --> 00:07:30,720
and also it has a

209
00:07:30,720 --> 00:07:32,960
it can easily filter the packets and all

210
00:07:32,960 --> 00:07:35,199
so now i wanted to keep it into a remote

211
00:07:35,199 --> 00:07:37,360
raspberry pi so this is the initial

212
00:07:37,360 --> 00:07:39,199
layout which i was having in the mind

213
00:07:39,199 --> 00:07:41,919
obviously apart from this telegram port

214
00:07:41,919 --> 00:07:44,240
so my idea was to put a hardware

215
00:07:44,240 --> 00:07:46,240
whatever hardware available and keep it

216
00:07:46,240 --> 00:07:47,599
in a raspberry pi channel as inside

217
00:07:47,599 --> 00:07:49,680
raspberry pi and actually put it inside

218
00:07:49,680 --> 00:07:50,800
a vehicle

219
00:07:50,800 --> 00:07:53,039
through wired connection like a hardware

220
00:07:53,039 --> 00:07:55,280
backdoor hardware implant back door and

221
00:07:55,280 --> 00:07:57,520
but later we found a way uh we came to

222
00:07:57,520 --> 00:08:00,479
know that you can actually send uh to uh

223
00:08:00,479 --> 00:08:01,440
using

224
00:08:01,440 --> 00:08:03,440
telegram ports you can actually send

225
00:08:03,440 --> 00:08:06,000
data to telegram and uh get this thing

226
00:08:06,000 --> 00:08:09,199
and all so that was one thing uh

227
00:08:09,199 --> 00:08:11,440
telegram bots using uh you can also do

228
00:08:11,440 --> 00:08:14,160
this thing but also i realized uh you

229
00:08:14,160 --> 00:08:15,840
know after this

230
00:08:15,840 --> 00:08:17,759
while uh i was well i was working on few

231
00:08:17,759 --> 00:08:19,520
projects or related to electric vehicle

232
00:08:19,520 --> 00:08:21,520
collecting logs of multiple multiple

233
00:08:21,520 --> 00:08:24,080
logs every day day in and day out and

234
00:08:24,080 --> 00:08:25,680
filtering them and making sure

235
00:08:25,680 --> 00:08:27,520
everything is in place is also very

236
00:08:27,520 --> 00:08:30,720
hectic so now i want something uh you

237
00:08:30,720 --> 00:08:33,760
know where i can put all my logs like

238
00:08:33,760 --> 00:08:35,599
sessions like if you know the pub suit

239
00:08:35,599 --> 00:08:37,200
style they can actually collect all the

240
00:08:37,200 --> 00:08:38,640
sessions all the requests which are

241
00:08:38,640 --> 00:08:40,559
going in and out from the server's proxy

242
00:08:40,559 --> 00:08:42,240
servers and collect everything in one

243
00:08:42,240 --> 00:08:44,480
place so i wanted to have this thing so

244
00:08:44,480 --> 00:08:48,640
this is uh what uh canalize was started

245
00:08:48,640 --> 00:08:50,640
so if i say along with my friend we were

246
00:08:50,640 --> 00:08:52,560
actually trying to first implement

247
00:08:52,560 --> 00:08:54,160
automatic filtering way by comparing

248
00:08:54,160 --> 00:08:55,519
with two pulse that was the previous

249
00:08:55,519 --> 00:08:57,600
version then we came to know you know we

250
00:08:57,600 --> 00:08:59,680
can use something called hash maps and

251
00:08:59,680 --> 00:09:01,680
we can actually make sure that it goes

252
00:09:01,680 --> 00:09:03,440
automatically so you can directly get

253
00:09:03,440 --> 00:09:05,680
the payload refined payload outside and

254
00:09:05,680 --> 00:09:07,200
yeah i was always

255
00:09:07,200 --> 00:09:09,200
thinking out with how can we do over the

256
00:09:09,200 --> 00:09:11,440
internet like hardware implant and how

257
00:09:11,440 --> 00:09:13,839
can we have a session based thing where

258
00:09:13,839 --> 00:09:15,920
you can collect all the dump and all

259
00:09:15,920 --> 00:09:17,680
so

260
00:09:17,680 --> 00:09:20,240
uh and also a few assumptions here

261
00:09:20,240 --> 00:09:22,000
if you are using this tool we assume

262
00:09:22,000 --> 00:09:23,839
that you have the required hardware and

263
00:09:23,839 --> 00:09:25,200
also you are in the same bus where you

264
00:09:25,200 --> 00:09:27,519
can lock the data and unlock the

265
00:09:27,519 --> 00:09:29,040
intended action which you want to find

266
00:09:29,040 --> 00:09:31,040
out the packets for and make sure your

267
00:09:31,040 --> 00:09:32,399
power supply is taken care a lot of

268
00:09:32,399 --> 00:09:34,560
times i had to uh redo it testing and

269
00:09:34,560 --> 00:09:35,760
all because the power supply which i was

270
00:09:35,760 --> 00:09:37,760
giving is not stable and also if you're

271
00:09:37,760 --> 00:09:39,200
using it as a remote hardware implant

272
00:09:39,200 --> 00:09:40,959
like shown in the previous slide uh

273
00:09:40,959 --> 00:09:42,720
please make sure you have that hardware

274
00:09:42,720 --> 00:09:46,160
has a remote connectivity thing and all

275
00:09:46,160 --> 00:09:47,519
so

276
00:09:47,519 --> 00:09:49,440
why channels there are a lot of things

277
00:09:49,440 --> 00:09:52,480
happening scappy is there scrappy has a

278
00:09:52,480 --> 00:09:54,320
python can support can support and all

279
00:09:54,320 --> 00:09:56,959
and cannot is there but uh

280
00:09:56,959 --> 00:09:59,360
canalize is more on python can library

281
00:09:59,360 --> 00:10:01,200
and it is completely available for all

282
00:10:01,200 --> 00:10:02,720
the things which we have implemented

283
00:10:02,720 --> 00:10:05,839
using an ide which is coming uh if you

284
00:10:05,839 --> 00:10:07,839
can see there's three main stuff smart

285
00:10:07,839 --> 00:10:09,600
scan ide and connect to telegram

286
00:10:09,600 --> 00:10:11,440
basically connect to telegram works on

287
00:10:11,440 --> 00:10:14,240
top of ide which is the passing commands

288
00:10:14,240 --> 00:10:16,720
to http api key but all the functions

289
00:10:16,720 --> 00:10:18,640
which actually this tool works and all

290
00:10:18,640 --> 00:10:20,880
it happened uh through

291
00:10:20,880 --> 00:10:22,399
python can libraries so the code is

292
00:10:22,399 --> 00:10:24,320
pretty much malleable you can add your

293
00:10:24,320 --> 00:10:25,760
own functions and you can do it and you

294
00:10:25,760 --> 00:10:28,160
can be using it remotely also and uh

295
00:10:28,160 --> 00:10:29,760
there's one more important thing which

296
00:10:29,760 --> 00:10:31,680
we added while we realized while uh

297
00:10:31,680 --> 00:10:33,839
testing of this tool that you know there

298
00:10:33,839 --> 00:10:35,920
should be some kind of seamless transfer

299
00:10:35,920 --> 00:10:38,240
importing a log file into it and then

300
00:10:38,240 --> 00:10:39,760
replaying it and recording it and all is

301
00:10:39,760 --> 00:10:42,399
okay but what if uh wherever in

302
00:10:42,399 --> 00:10:44,000
whichever session you are creating a log

303
00:10:44,000 --> 00:10:46,560
file or basically creating a particular

304
00:10:46,560 --> 00:10:49,040
data frame setup data and you can

305
00:10:49,040 --> 00:10:51,360
seamlessly uh pull it to another session

306
00:10:51,360 --> 00:10:53,760
at all uh that also we want to implement

307
00:10:53,760 --> 00:10:55,279
and this happened and it's a command

308
00:10:55,279 --> 00:10:56,800
line based tool i personally like

309
00:10:56,800 --> 00:10:58,959
command line based tools more than gui

310
00:10:58,959 --> 00:11:01,279
and yeah sometimes i hate it but yeah i

311
00:11:01,279 --> 00:11:04,320
love it overall so that is there so we

312
00:11:04,320 --> 00:11:07,040
wanted to uh get all of this

313
00:11:07,040 --> 00:11:08,399
now you might be having the questions

314
00:11:08,399 --> 00:11:09,760
like you know karthik whatever you told

315
00:11:09,760 --> 00:11:12,240
us nice and okay but how exactly this

316
00:11:12,240 --> 00:11:13,760
happens in your tool

317
00:11:13,760 --> 00:11:14,399
so

318
00:11:14,399 --> 00:11:16,959
for that let's see the process flow a

319
00:11:16,959 --> 00:11:18,079
little bit

320
00:11:18,079 --> 00:11:20,399
and like i was explaining uh let's say

321
00:11:20,399 --> 00:11:21,360
uh

322
00:11:21,360 --> 00:11:24,000
the main concept here is like you make

323
00:11:24,000 --> 00:11:25,760
two files which you can compare with

324
00:11:25,760 --> 00:11:28,320
each other and then you actually do the

325
00:11:28,320 --> 00:11:29,680
whole use the whole tool to

326
00:11:29,680 --> 00:11:31,839
automatically do the stuff so let's say

327
00:11:31,839 --> 00:11:33,920
uh the first file as source file and

328
00:11:33,920 --> 00:11:36,079
imagine you're on a road or you're

329
00:11:36,079 --> 00:11:38,560
riding your vehicle and it is at some 40

330
00:11:38,560 --> 00:11:40,720
kilometers per hour speed and suddenly

331
00:11:40,720 --> 00:11:41,600
uh

332
00:11:41,600 --> 00:11:44,160
do this is not in steady state even

333
00:11:44,160 --> 00:11:45,760
though you are running at 40 kilometers

334
00:11:45,760 --> 00:11:47,920
per hour steady state but there is a lot

335
00:11:47,920 --> 00:11:48,959
of data

336
00:11:48,959 --> 00:11:50,880
huge amounts of data has going through

337
00:11:50,880 --> 00:11:53,040
in your canvas networks and doing all

338
00:11:53,040 --> 00:11:55,200
these things but you apply a break or

339
00:11:55,200 --> 00:11:56,880
you give a signal or you turn the

340
00:11:56,880 --> 00:11:58,480
steering or do something which can

341
00:11:58,480 --> 00:11:59,839
actually be controlled on by canned

342
00:11:59,839 --> 00:12:03,200
packets uh the chance of that packets

343
00:12:03,200 --> 00:12:04,639
compared to all the packets which are

344
00:12:04,639 --> 00:12:06,720
having on the bus is less than five

345
00:12:06,720 --> 00:12:07,680
percent

346
00:12:07,680 --> 00:12:10,160
so uh what we do here in this tool

347
00:12:10,160 --> 00:12:12,000
particularly while we using this tool is

348
00:12:12,000 --> 00:12:14,320
we create a source file which actually

349
00:12:14,320 --> 00:12:16,720
contains a general tactic and not

350
00:12:16,720 --> 00:12:18,320
contains the internet packets let's say

351
00:12:18,320 --> 00:12:20,079
my internet package right now is to open

352
00:12:20,079 --> 00:12:22,800
the doors and or to

353
00:12:22,800 --> 00:12:25,200
put on light and left indications so we

354
00:12:25,200 --> 00:12:27,519
create a source file first and then we

355
00:12:27,519 --> 00:12:29,839
uh record an action file which we create

356
00:12:29,839 --> 00:12:31,920
through smart scan or id we can in smart

357
00:12:31,920 --> 00:12:33,360
screen it is automatically done you just

358
00:12:33,360 --> 00:12:35,440
need to press single buttons click click

359
00:12:35,440 --> 00:12:37,440
but in id you can actually pass commands

360
00:12:37,440 --> 00:12:40,639
to do this stuff so that uh also you can

361
00:12:40,639 --> 00:12:42,800
do with action what we basically do is

362
00:12:42,800 --> 00:12:45,200
like in sorts basically you don't have

363
00:12:45,200 --> 00:12:47,839
the intended action in

364
00:12:47,839 --> 00:12:49,760
action you have actually the intended

365
00:12:49,760 --> 00:12:51,279
packets are present for what you're

366
00:12:51,279 --> 00:12:53,519
trying to do so

367
00:12:53,519 --> 00:12:55,200
then uh what now

368
00:12:55,200 --> 00:12:57,120
now you have source which contains noise

369
00:12:57,120 --> 00:12:58,800
let's call it as noise it's a general

370
00:12:58,800 --> 00:13:00,959
traffic in the bus and now you can have

371
00:13:00,959 --> 00:13:03,040
action file where you have intended tax

372
00:13:03,040 --> 00:13:05,440
of action definitely with the source and

373
00:13:05,440 --> 00:13:07,680
also i have here noise start

374
00:13:07,680 --> 00:13:09,600
why noise star is like there might be

375
00:13:09,600 --> 00:13:12,000
additional packets which are generated

376
00:13:12,000 --> 00:13:15,040
in time of your in action happening it

377
00:13:15,040 --> 00:13:16,399
might be affecting it might not be

378
00:13:16,399 --> 00:13:18,000
affecting it might be different stuff

379
00:13:18,000 --> 00:13:19,519
for example if you are slamming the

380
00:13:19,519 --> 00:13:21,279
brakes uh two packets are being

381
00:13:21,279 --> 00:13:22,720
generated one two send it to the

382
00:13:22,720 --> 00:13:24,639
actuator brake actuator brake lights and

383
00:13:24,639 --> 00:13:26,560
all to actually slam the brake and also

384
00:13:26,560 --> 00:13:28,000
same time indicators on your

385
00:13:28,000 --> 00:13:30,079
infotainment hub or the dashboard has to

386
00:13:30,079 --> 00:13:31,519
show up that you know brakes are slammed

387
00:13:31,519 --> 00:13:33,519
and all so if this might be you your

388
00:13:33,519 --> 00:13:34,639
interest this might not be in your

389
00:13:34,639 --> 00:13:37,120
interest so generally if we keep only

390
00:13:37,120 --> 00:13:39,600
filtering this uh source and attack file

391
00:13:39,600 --> 00:13:42,160
or the action files they basically have

392
00:13:42,160 --> 00:13:44,320
extra packets which you might want don't

393
00:13:44,320 --> 00:13:47,600
want to know but uh using smart scan and

394
00:13:47,600 --> 00:13:50,399
uh id you can actually filter into that

395
00:13:50,399 --> 00:13:51,600
level also

396
00:13:51,600 --> 00:13:53,199
don't worry we'll see it in a detailed

397
00:13:53,199 --> 00:13:55,440
demonstration and coming forward

398
00:13:55,440 --> 00:13:56,720
yeah

399
00:13:56,720 --> 00:13:59,440
and uh there is a

400
00:13:59,440 --> 00:14:02,000
payload once we payload what happens is

401
00:14:02,000 --> 00:14:04,720
like action minus source obviously and

402
00:14:04,720 --> 00:14:06,399
noise start you can depend that we will

403
00:14:06,399 --> 00:14:07,199
see

404
00:14:07,199 --> 00:14:09,199
so if we put into a vent diagram point

405
00:14:09,199 --> 00:14:11,360
of view this is something you want this

406
00:14:11,360 --> 00:14:14,079
is the niche ice cream you want uh which

407
00:14:14,079 --> 00:14:15,760
you are interested and it might be

408
00:14:15,760 --> 00:14:17,440
coming with a noise and it might be

409
00:14:17,440 --> 00:14:19,519
having some overlapping resource so all

410
00:14:19,519 --> 00:14:21,519
these things are wrong so

411
00:14:21,519 --> 00:14:23,600
now you're saying like okay uh karthik

412
00:14:23,600 --> 00:14:25,040
we have a source file you can have an

413
00:14:25,040 --> 00:14:26,399
action file and you want to create a

414
00:14:26,399 --> 00:14:28,399
payload file you're just doing some kind

415
00:14:28,399 --> 00:14:30,240
of filtering picking up packets and all

416
00:14:30,240 --> 00:14:31,920
and doing this but

417
00:14:31,920 --> 00:14:34,399
what if you have multiple action files

418
00:14:34,399 --> 00:14:35,680
you want to record

419
00:14:35,680 --> 00:14:38,560
that also you can do uh with smart scan

420
00:14:38,560 --> 00:14:40,160
along with the id smart screen you just

421
00:14:40,160 --> 00:14:42,560
need to do it in a recursive way keep

422
00:14:42,560 --> 00:14:43,839
telling it now you have to collect the

423
00:14:43,839 --> 00:14:45,199
action file called the action palette it

424
00:14:45,199 --> 00:14:47,680
does all the things and uh you it can

425
00:14:47,680 --> 00:14:48,959
analyze between them and create a

426
00:14:48,959 --> 00:14:51,600
payload for you and what if you have

427
00:14:51,600 --> 00:14:53,440
multiple source files

428
00:14:53,440 --> 00:14:55,360
since smart scan does the functions

429
00:14:55,360 --> 00:14:58,160
recursively it actually records all the

430
00:14:58,160 --> 00:15:00,800
packets recursively uh without you using

431
00:15:00,800 --> 00:15:02,720
it continuously checks the bus

432
00:15:02,720 --> 00:15:04,399
compares between two files and does

433
00:15:04,399 --> 00:15:07,199
thing and uh you can generate payloads

434
00:15:07,199 --> 00:15:08,000
also

435
00:15:08,000 --> 00:15:10,320
but what if you have multiple source

436
00:15:10,320 --> 00:15:11,920
files you want to record multiple action

437
00:15:11,920 --> 00:15:13,279
files you want to record and you want to

438
00:15:13,279 --> 00:15:15,120
create multiple payload files

439
00:15:15,120 --> 00:15:18,800
that you can do in ide what in id we are

440
00:15:18,800 --> 00:15:20,959
using is we are leveraging the power of

441
00:15:20,959 --> 00:15:23,600
an ide environment which you get and

442
00:15:23,600 --> 00:15:26,560
python can and also the

443
00:15:26,560 --> 00:15:28,880
pandas database for advanced and faster

444
00:15:28,880 --> 00:15:31,199
filtering and also sql commands because

445
00:15:31,199 --> 00:15:32,800
a lot of people know sql nowadays we

446
00:15:32,800 --> 00:15:34,320
thought like you know instead of uh

447
00:15:34,320 --> 00:15:37,680
doing it by hand why don't we use sql

448
00:15:37,680 --> 00:15:40,720
power of sql here and basically uh help

449
00:15:40,720 --> 00:15:42,160
out people uh

450
00:15:42,160 --> 00:15:44,560
in making the process easy run sql

451
00:15:44,560 --> 00:15:46,639
command to create that uh logs you

452
00:15:46,639 --> 00:15:49,040
created as tables and run sql commands

453
00:15:49,040 --> 00:15:51,120
and then get out of these things

454
00:15:51,120 --> 00:15:53,440
well uh if you are interested on how

455
00:15:53,440 --> 00:15:56,800
this exact code works i have a few

456
00:15:56,800 --> 00:15:59,040
you know main functions of it the

457
00:15:59,040 --> 00:16:01,279
colored signal function so basically

458
00:16:01,279 --> 00:16:03,199
what happens here is like whenever you

459
00:16:03,199 --> 00:16:05,600
enter into the smart scan mode it starts

460
00:16:05,600 --> 00:16:07,759
at this function collect signal and

461
00:16:07,759 --> 00:16:09,839
where it uh collects all the data which

462
00:16:09,839 --> 00:16:11,440
is appearing on the particular

463
00:16:11,440 --> 00:16:12,720
communication interface you have

464
00:16:12,720 --> 00:16:14,720
mentioned in the settings

465
00:16:14,720 --> 00:16:16,560
for example if i'm using ice simulator

466
00:16:16,560 --> 00:16:18,320
in this case then my interface would be

467
00:16:18,320 --> 00:16:20,800
virtual tank 0 and yeah

468
00:16:20,800 --> 00:16:22,800
the socket can and the channel is what's

469
00:16:22,800 --> 00:16:24,079
all considering the interface with the

470
00:16:24,079 --> 00:16:26,079
socket can it simply picks up all the

471
00:16:26,079 --> 00:16:28,560
data and it quickly converts into a hash

472
00:16:28,560 --> 00:16:32,079
map and uh whenever you go to uh

473
00:16:32,079 --> 00:16:34,320
noise uh you can call it as instead of

474
00:16:34,320 --> 00:16:35,839
signal you can call it a source and

475
00:16:35,839 --> 00:16:38,160
whenever you go to noise uh it will also

476
00:16:38,160 --> 00:16:40,320
create uh check with or the hash map

477
00:16:40,320 --> 00:16:42,639
whatever the packets it is coming in the

478
00:16:42,639 --> 00:16:44,880
noise file whether it's present in

479
00:16:44,880 --> 00:16:46,800
action or not so here the assumption is

480
00:16:46,800 --> 00:16:48,560
like if it is present in both files

481
00:16:48,560 --> 00:16:50,079
probably that is not your intended

482
00:16:50,079 --> 00:16:52,320
packet if it is not present then yeah

483
00:16:52,320 --> 00:16:54,320
that is your internet packet so we are

484
00:16:54,320 --> 00:16:55,920
actually checking the whole data also we

485
00:16:55,920 --> 00:16:58,320
are not uh uh you know simply checking

486
00:16:58,320 --> 00:17:00,720
the ids we are also checking the data so

487
00:17:00,720 --> 00:17:03,120
it comes out that way

488
00:17:03,120 --> 00:17:06,240
and yeah it's enough about myself the

489
00:17:06,240 --> 00:17:08,880
process flow and uh the whole uh you

490
00:17:08,880 --> 00:17:10,000
know

491
00:17:10,000 --> 00:17:12,240
and the code flow and all let's actually

492
00:17:12,240 --> 00:17:16,240
uh see the real uh mate here the demo

493
00:17:16,240 --> 00:17:18,720
and for this demo i'm using a simulator

494
00:17:18,720 --> 00:17:20,240
obviously i don't own a car and i don't

495
00:17:20,240 --> 00:17:22,559
want to break anyone's car and nowhere

496
00:17:22,559 --> 00:17:24,160
seriously guys nobody believes me in

497
00:17:24,160 --> 00:17:26,799
giving their car so yeah it's a good

498
00:17:26,799 --> 00:17:28,319
thing but it sounds a bad thing because

499
00:17:28,319 --> 00:17:30,640
i was not able to get uh rewards your

500
00:17:30,640 --> 00:17:33,200
real demo to this talk i still regret

501
00:17:33,200 --> 00:17:35,280
that but yeah when if you're doing it in

502
00:17:35,280 --> 00:17:37,280
your car then please make sure you don't

503
00:17:37,280 --> 00:17:38,480
break your car if you're using your

504
00:17:38,480 --> 00:17:40,960
friends cars or your colleagues or some

505
00:17:40,960 --> 00:17:42,720
well-visual cars please make sure you

506
00:17:42,720 --> 00:17:44,480
have a necessary permissions to all this

507
00:17:44,480 --> 00:17:47,200
stuff i'm currently focusing on the ic

508
00:17:47,200 --> 00:17:48,559
simulator

509
00:17:48,559 --> 00:17:51,840
so guys welcome to my vm lab uh here i

510
00:17:51,840 --> 00:17:54,320
wanna go with the vm um

511
00:17:54,320 --> 00:17:56,160
for demonstration purposes and i just

512
00:17:56,160 --> 00:17:58,640
want to put a quick show i'm using three

513
00:17:58,640 --> 00:18:00,160
here the ic simulator and can utilize

514
00:18:00,160 --> 00:18:03,280
support and canalize so once you get

515
00:18:03,280 --> 00:18:05,200
cloned uh your versions and you

516
00:18:05,200 --> 00:18:07,360
installed all the required things you

517
00:18:07,360 --> 00:18:09,520
can actually uh do this cd into the

518
00:18:09,520 --> 00:18:11,760
canalis and it should be something like

519
00:18:11,760 --> 00:18:12,559
this

520
00:18:12,559 --> 00:18:14,320
so this means like you have other thing

521
00:18:14,320 --> 00:18:16,320
i have already listed uh all the

522
00:18:16,320 --> 00:18:18,160
requirements everything whatever we are

523
00:18:18,160 --> 00:18:20,559
using inside is so please run it using

524
00:18:20,559 --> 00:18:23,360
pip3 minus r and requirements.txt and uh

525
00:18:23,360 --> 00:18:25,679
it will do all the stuff for you uh

526
00:18:25,679 --> 00:18:27,760
automatically and then uh

527
00:18:27,760 --> 00:18:29,760
use sudo i recommend sudo because we are

528
00:18:29,760 --> 00:18:32,320
doing a lot of file saving and all stuff

529
00:18:32,320 --> 00:18:34,960
and you can do sudo um

530
00:18:34,960 --> 00:18:37,760
python 3

531
00:18:38,080 --> 00:18:42,840
analyze interface top 5.

532
00:18:44,640 --> 00:18:47,039
so yeah this is how canales looks when

533
00:18:47,039 --> 00:18:49,919
you open it so before going uh to the

534
00:18:49,919 --> 00:18:51,440
options i want to quickly show you about

535
00:18:51,440 --> 00:18:53,360
the settings uh there are three settings

536
00:18:53,360 --> 00:18:54,960
here you can set up your communication

537
00:18:54,960 --> 00:18:56,720
channel communication interface and api

538
00:18:56,720 --> 00:18:59,440
token since it is uh developed on top of

539
00:18:59,440 --> 00:19:02,880
python or in fact using python can

540
00:19:02,880 --> 00:19:04,559
thanks to all the developers who

541
00:19:04,559 --> 00:19:06,240
contributed to python pen who made our

542
00:19:06,240 --> 00:19:08,799
lives easy in developing this tool uh

543
00:19:08,799 --> 00:19:10,880
you can also use all the channels and

544
00:19:10,880 --> 00:19:13,280
deficits the python can you support so i

545
00:19:13,280 --> 00:19:16,080
want to check uh what channel it has yes

546
00:19:16,080 --> 00:19:17,840
it has uh we can zero which is i'm

547
00:19:17,840 --> 00:19:19,679
running like you guessed i simulator

548
00:19:19,679 --> 00:19:21,679
here it also runs on weekend zero and

549
00:19:21,679 --> 00:19:23,840
the interface is socket can

550
00:19:23,840 --> 00:19:26,640
yeah so now uh let me just uh start with

551
00:19:26,640 --> 00:19:28,799
the smart scan where we said uh you know

552
00:19:28,799 --> 00:19:30,799
it will automatically do the stuff

553
00:19:30,799 --> 00:19:31,919
so

554
00:19:31,919 --> 00:19:34,559
yeah so here there are a few options you

555
00:19:34,559 --> 00:19:36,640
can play save and you can quit from this

556
00:19:36,640 --> 00:19:38,720
thing and also you can press the space

557
00:19:38,720 --> 00:19:40,960
bar and start giving the signals and all

558
00:19:40,960 --> 00:19:42,400
and yeah if you don't like these key

559
00:19:42,400 --> 00:19:44,480
bindings you can change it anytime and

560
00:19:44,480 --> 00:19:46,640
completely open so so you can do it on

561
00:19:46,640 --> 00:19:50,160
your own it's a very easy code so

562
00:19:50,160 --> 00:19:52,160
but till the time we are on a

563
00:19:52,160 --> 00:19:54,559
conversation the smarts can collect

564
00:19:54,559 --> 00:19:56,880
noise uh function actually silently

565
00:19:56,880 --> 00:19:58,240
recording all the packets which are

566
00:19:58,240 --> 00:20:00,960
going back uh in the week and zero so

567
00:20:00,960 --> 00:20:04,320
when i just hit spacebar and i give the

568
00:20:04,320 --> 00:20:06,880
right and left signal just for easy

569
00:20:06,880 --> 00:20:09,360
purposes and i was

570
00:20:09,360 --> 00:20:12,559
b it directly came in the packets

571
00:20:12,559 --> 00:20:14,640
so yeah why it immediately gives the

572
00:20:14,640 --> 00:20:15,679
packets

573
00:20:15,679 --> 00:20:17,840
am i doing something bad here no no no

574
00:20:17,840 --> 00:20:19,919
just because we are having converse in a

575
00:20:19,919 --> 00:20:22,320
lot of time it quickly uh found out you

576
00:20:22,320 --> 00:20:24,159
know using hash map it these are the

577
00:20:24,159 --> 00:20:26,320
only packets which changed while here

578
00:20:26,320 --> 00:20:28,799
and you you can actually uh do one more

579
00:20:28,799 --> 00:20:31,760
thing you can go this time faster and do

580
00:20:31,760 --> 00:20:35,840
to see how it does in life

581
00:20:39,840 --> 00:20:42,240
and i'll do this and i'll do this yeah

582
00:20:42,240 --> 00:20:44,159
so if you can see there's two particular

583
00:20:44,159 --> 00:20:46,400
if you know i say simulator 244 is this

584
00:20:46,400 --> 00:20:48,400
first signal indication but because it

585
00:20:48,400 --> 00:20:50,559
does a hash map it is constantly

586
00:20:50,559 --> 00:20:54,639
filtering all the stuff automatically

587
00:20:54,880 --> 00:20:57,440
and you can save these

588
00:20:57,440 --> 00:20:59,600
logs

589
00:20:59,600 --> 00:21:00,799
it should

590
00:21:00,799 --> 00:21:03,200
give back to two packets for example if

591
00:21:03,200 --> 00:21:05,120
you're not getting that filtered uh

592
00:21:05,120 --> 00:21:07,039
thing you can do it recovers only one

593
00:21:07,039 --> 00:21:09,280
second to get the exact same packets and

594
00:21:09,280 --> 00:21:12,240
all you can actually save this file then

595
00:21:12,240 --> 00:21:14,840
press s to save and then let me say

596
00:21:14,840 --> 00:21:18,159
uh hacking village

597
00:21:18,159 --> 00:21:21,520
2022 dot lock

598
00:21:21,520 --> 00:21:23,600
and it will save in that particular

599
00:21:23,600 --> 00:21:29,199
folder in that let me just open my tools

600
00:21:29,600 --> 00:21:31,919
and channel s yeah if you can see here

601
00:21:31,919 --> 00:21:34,480
it just mentioned the log same files uh

602
00:21:34,480 --> 00:21:36,720
along with the time stamp under okay

603
00:21:36,720 --> 00:21:38,720
sorry for my ui

604
00:21:38,720 --> 00:21:40,559
yeah you can see uh it also took the

605
00:21:40,559 --> 00:21:42,960
time stamp and all the ids are not

606
00:21:42,960 --> 00:21:46,640
so that is uh about the smart scan but

607
00:21:46,640 --> 00:21:48,559
what if you don't want to do it

608
00:21:48,559 --> 00:21:51,679
automatically but you actually wanna do

609
00:21:51,679 --> 00:21:53,600
it in a smart ide way

610
00:21:53,600 --> 00:21:56,559
for that you can use canalize ide so ide

611
00:21:56,559 --> 00:22:00,639
it's like any other python ide

612
00:22:04,000 --> 00:22:07,360
you can please edit this out

613
00:22:08,400 --> 00:22:10,000
yeah so

614
00:22:10,000 --> 00:22:12,080
ide is more like any other uh python

615
00:22:12,080 --> 00:22:14,080
based id you here you have like command

616
00:22:14,080 --> 00:22:15,760
line interface you can set pass some

617
00:22:15,760 --> 00:22:17,280
functions there are set of predefined

618
00:22:17,280 --> 00:22:19,679
functions which we will see now and you

619
00:22:19,679 --> 00:22:22,000
can do that and all so let me just uh

620
00:22:22,000 --> 00:22:24,880
record a few variables here and after

621
00:22:24,880 --> 00:22:25,919
that i'll

622
00:22:25,919 --> 00:22:26,960
make a

623
00:22:26,960 --> 00:22:30,559
new file noise and i'll do or use the

624
00:22:30,559 --> 00:22:32,640
scan function which is pre-defined here

625
00:22:32,640 --> 00:22:34,720
and i'll mention you know collect all

626
00:22:34,720 --> 00:22:37,520
the packets from we can zero

627
00:22:37,520 --> 00:22:38,559
channel

628
00:22:38,559 --> 00:22:39,440
and

629
00:22:39,440 --> 00:22:41,120
then do it

630
00:22:41,120 --> 00:22:42,320
for

631
00:22:42,320 --> 00:22:44,240
60 seconds

632
00:22:44,240 --> 00:22:46,159
and yeah

633
00:22:46,159 --> 00:22:48,240
so what's happening now is uh the

634
00:22:48,240 --> 00:22:49,919
functions which we use to define the

635
00:22:49,919 --> 00:22:51,760
scan function it is uh

636
00:22:51,760 --> 00:22:54,080
by using python can it is collecting all

637
00:22:54,080 --> 00:22:55,679
the packets which are happening in the

638
00:22:55,679 --> 00:22:58,240
bus and keeping it to a python data

639
00:22:58,240 --> 00:23:01,200
frame uh basically uh

640
00:23:01,200 --> 00:23:03,679
pandas data frame so that we can go

641
00:23:03,679 --> 00:23:06,240
forward and use it much easier and all

642
00:23:06,240 --> 00:23:07,120
let me

643
00:23:07,120 --> 00:23:09,520
let it complete for one minute and then

644
00:23:09,520 --> 00:23:12,080
we will do the same thing for action but

645
00:23:12,080 --> 00:23:14,320
that time will open the doors close the

646
00:23:14,320 --> 00:23:15,440
doors and give indication in a

647
00:23:15,440 --> 00:23:17,840
particular sequence to see whether it is

648
00:23:17,840 --> 00:23:19,760
able to collect the same sequence back

649
00:23:19,760 --> 00:23:22,080
and filter it exactly

650
00:23:22,080 --> 00:23:24,000
so let's just wait till the scan

651
00:23:24,000 --> 00:23:26,480
completes

652
00:23:27,760 --> 00:23:30,240
basically if the more you scan for noise

653
00:23:30,240 --> 00:23:33,039
now the more a fault uh reduced your

654
00:23:33,039 --> 00:23:35,679
thing because it has a big directory of

655
00:23:35,679 --> 00:23:37,760
all the messages which you are not

656
00:23:37,760 --> 00:23:40,320
interested or you know that does not

657
00:23:40,320 --> 00:23:41,840
exactly happening

658
00:23:41,840 --> 00:23:44,559
in your intended action time period so

659
00:23:44,559 --> 00:23:46,400
it's good to have a good filter so that

660
00:23:46,400 --> 00:23:48,159
you get much fine business yeah not

661
00:23:48,159 --> 00:23:51,120
complicated let's do the same let's make

662
00:23:51,120 --> 00:23:54,480
another action file and uh you know scan

663
00:23:54,480 --> 00:23:56,480
it for

664
00:23:56,480 --> 00:23:59,520
particular 60 seconds

665
00:23:59,520 --> 00:24:02,918
you can zero

666
00:24:04,640 --> 00:24:05,760
and then

667
00:24:05,760 --> 00:24:08,159
for 60 seconds

668
00:24:08,159 --> 00:24:10,799
but this time at the same time what we

669
00:24:10,799 --> 00:24:12,720
do is we

670
00:24:12,720 --> 00:24:16,840
open the right indication and open the

671
00:24:16,840 --> 00:24:20,960
doors and do the left indication and

672
00:24:20,960 --> 00:24:23,600
close all the doors

673
00:24:23,600 --> 00:24:26,960
and open all the doors back and

674
00:24:26,960 --> 00:24:29,840
close all the doors

675
00:24:30,080 --> 00:24:32,640
yeah so technically speaking all this

676
00:24:32,640 --> 00:24:36,159
package should be inside the action uh

677
00:24:36,159 --> 00:24:38,799
while which we're creating uh the

678
00:24:38,799 --> 00:24:40,000
variable where we are storing all these

679
00:24:40,000 --> 00:24:41,840
packets and

680
00:24:41,840 --> 00:24:43,600
we should be able to uh compare the

681
00:24:43,600 --> 00:24:45,760
noise and remove the noise from this

682
00:24:45,760 --> 00:24:48,799
action and if there are any extra things

683
00:24:48,799 --> 00:24:50,880
we can also do that since like i

684
00:24:50,880 --> 00:24:53,039
mentioned we are using sql here so it's

685
00:24:53,039 --> 00:24:54,880
simply like a table you just run your

686
00:24:54,880 --> 00:24:57,120
queries inside this id itself here

687
00:24:57,120 --> 00:24:59,840
itself and then you know you actually uh

688
00:24:59,840 --> 00:25:02,159
get to remove all the

689
00:25:02,159 --> 00:25:04,320
you know noise stuff you have

690
00:25:04,320 --> 00:25:06,960
let's just wait till it completes it is

691
00:25:06,960 --> 00:25:08,480
now also like you remember it is

692
00:25:08,480 --> 00:25:10,400
considering a lot of noise like noise

693
00:25:10,400 --> 00:25:12,559
star and all yeah and let's see how much

694
00:25:12,559 --> 00:25:14,559
package it actually

695
00:25:14,559 --> 00:25:16,960
collected from this format

696
00:25:16,960 --> 00:25:20,080
or in this time period

697
00:25:21,440 --> 00:25:22,880
yeah

698
00:25:22,880 --> 00:25:24,600
it collected around

699
00:25:24,600 --> 00:25:27,120
4643 packets and

700
00:25:27,120 --> 00:25:29,200
in action

701
00:25:29,200 --> 00:25:32,159
it collected around 4700 packets

702
00:25:32,159 --> 00:25:34,480
yeah you can also increase the speed uh

703
00:25:34,480 --> 00:25:36,640
and see you can do this for more uh just

704
00:25:36,640 --> 00:25:38,480
for demonstrables here i'm doing it very

705
00:25:38,480 --> 00:25:41,120
for making it very simple so yeah that

706
00:25:41,120 --> 00:25:45,200
is there and let's just uh filter them

707
00:25:45,200 --> 00:25:47,200
so filtering is very simple using sql

708
00:25:47,200 --> 00:25:50,159
commands just run an sql command here

709
00:25:50,159 --> 00:25:52,400
consider these two as tables and i want

710
00:25:52,400 --> 00:25:53,279
to

711
00:25:53,279 --> 00:25:57,279
select uh id comma data

712
00:25:57,279 --> 00:25:58,480
from

713
00:25:58,480 --> 00:26:00,559
let's say action obviously

714
00:26:00,559 --> 00:26:01,430
action and

715
00:26:01,430 --> 00:26:03,520
[Music]

716
00:26:03,520 --> 00:26:06,559
i just don't want which are there in the

717
00:26:06,559 --> 00:26:08,840
noise file

718
00:26:08,840 --> 00:26:11,039
except you know

719
00:26:11,039 --> 00:26:13,440
select

720
00:26:14,640 --> 00:26:18,159
id comma data

721
00:26:20,240 --> 00:26:23,799
from noise

722
00:26:24,960 --> 00:26:26,480
so that's it

723
00:26:26,480 --> 00:26:27,520
and

724
00:26:27,520 --> 00:26:29,600
it literally skimmed through all four

725
00:26:29,600 --> 00:26:32,159
thousands on packets and it uh defined

726
00:26:32,159 --> 00:26:34,240
uh like reduced it to very less number

727
00:26:34,240 --> 00:26:35,840
of packets let's see how many

728
00:26:35,840 --> 00:26:37,679
yeah

729
00:26:37,679 --> 00:26:40,720
actually 244 should come here also but

730
00:26:40,720 --> 00:26:42,400
since we recorded for a large amount of

731
00:26:42,400 --> 00:26:45,039
time it didn't appear here so yeah it

732
00:26:45,039 --> 00:26:47,360
literally filtered down to six packets

733
00:26:47,360 --> 00:26:49,440
this is good enough if you want to do it

734
00:26:49,440 --> 00:26:51,120
manually if you want to send each packet

735
00:26:51,120 --> 00:26:53,039
and check and all but this is not good

736
00:26:53,039 --> 00:26:54,880
enough if you want to store this log in

737
00:26:54,880 --> 00:26:57,520
a separate way so for that

738
00:26:57,520 --> 00:26:59,679
this is actually present whatever

739
00:26:59,679 --> 00:27:01,840
happening here these packets and all

740
00:27:01,840 --> 00:27:03,679
these are actually present in the files

741
00:27:03,679 --> 00:27:06,000
which we created so we can actually use

742
00:27:06,000 --> 00:27:08,159
the sql to match with the same and to

743
00:27:08,159 --> 00:27:10,159
color the exact timestamp and channel

744
00:27:10,159 --> 00:27:11,760
which are corresponding to this id and

745
00:27:11,760 --> 00:27:14,720
data for that uh let me just

746
00:27:14,720 --> 00:27:16,159
do something like

747
00:27:16,159 --> 00:27:17,440
you know

748
00:27:17,440 --> 00:27:18,799
payload

749
00:27:18,799 --> 00:27:20,880
let me create a payload

750
00:27:20,880 --> 00:27:25,279
which is sql off

751
00:27:26,000 --> 00:27:28,640
select

752
00:27:30,799 --> 00:27:32,240
a dot

753
00:27:32,240 --> 00:27:34,559
time stamp

754
00:27:34,559 --> 00:27:37,039
on my a dot

755
00:27:37,039 --> 00:27:38,320
channel

756
00:27:38,320 --> 00:27:40,799
for my dot id

757
00:27:40,799 --> 00:27:44,240
my a dot data

758
00:27:44,799 --> 00:27:46,880
from action obviously it will be only

759
00:27:46,880 --> 00:27:49,039
available action action a and i want to

760
00:27:49,039 --> 00:27:52,960
use this sql function in a join

761
00:27:53,440 --> 00:27:53,700
and

762
00:27:53,700 --> 00:27:54,960
[Music]

763
00:27:54,960 --> 00:27:58,240
in the join to filter

764
00:28:00,250 --> 00:28:01,520
[Music]

765
00:28:01,520 --> 00:28:03,760
and i just want to filter let's call it

766
00:28:03,760 --> 00:28:06,080
as b

767
00:28:07,679 --> 00:28:08,640
on

768
00:28:08,640 --> 00:28:09,600
the

769
00:28:09,600 --> 00:28:13,840
junction a dot id is equal to

770
00:28:13,840 --> 00:28:16,399
b dot id

771
00:28:16,399 --> 00:28:17,679
and

772
00:28:17,679 --> 00:28:18,799
a dot

773
00:28:18,799 --> 00:28:20,080
data

774
00:28:20,080 --> 00:28:24,320
is equal to b dot data

775
00:28:24,320 --> 00:28:26,159
so this would be the command to actually

776
00:28:26,159 --> 00:28:28,480
pack it back into this thing okay

777
00:28:28,480 --> 00:28:30,720
there's some issue here

778
00:28:30,720 --> 00:28:33,600
let's see only conversion okay okay so

779
00:28:33,600 --> 00:28:36,320
let's do something called the load

780
00:28:36,320 --> 00:28:40,720
and actually pass the string into this

781
00:28:40,960 --> 00:28:44,520
just copy paste

782
00:28:52,159 --> 00:28:54,480
so now we can verify this that this is

783
00:28:54,480 --> 00:28:56,320
the uh thing

784
00:28:56,320 --> 00:28:58,000
and let's just upload it into your

785
00:28:58,000 --> 00:28:59,360
payload

786
00:28:59,360 --> 00:29:03,678
payload is equal to sql of

787
00:29:04,559 --> 00:29:06,879
load

788
00:29:08,080 --> 00:29:10,720
okay just give me a second i want to

789
00:29:10,720 --> 00:29:13,840
save what

790
00:30:30,159 --> 00:30:33,200
okay i made a small error instead of

791
00:30:33,200 --> 00:30:35,679
filter i'm just saying peter so let me

792
00:30:35,679 --> 00:30:38,960
just run that once again

793
00:30:41,840 --> 00:30:45,600
let's just see what is on load

794
00:30:46,080 --> 00:30:49,080
so

795
00:30:55,279 --> 00:30:56,799
select

796
00:30:56,799 --> 00:30:58,640
a dot

797
00:30:58,640 --> 00:31:01,039
timestamp

798
00:31:01,039 --> 00:31:04,279
a dot

799
00:31:11,510 --> 00:31:14,589
[Music]

800
00:31:15,360 --> 00:31:18,360
join

801
00:31:20,480 --> 00:31:22,960
filter

802
00:31:23,360 --> 00:31:26,080
b on

803
00:31:26,080 --> 00:31:29,120
a dot id

804
00:31:29,200 --> 00:31:33,200
is equal to b dot id and

805
00:31:33,200 --> 00:31:36,320
a dot data

806
00:31:36,320 --> 00:31:37,760
is equal to

807
00:31:37,760 --> 00:31:41,039
b dot data

808
00:31:44,840 --> 00:31:47,840
oh i don't think this works yeah i have

809
00:31:47,840 --> 00:31:49,360
to pass it in a street very sorry guys

810
00:31:49,360 --> 00:31:53,320
where is it killing your time

811
00:32:08,399 --> 00:32:10,480
okay now let's see load yeah and now

812
00:32:10,480 --> 00:32:11,600
let's do

813
00:32:11,600 --> 00:32:14,600
payload

814
00:32:15,120 --> 00:32:16,720
is equal to

815
00:32:16,720 --> 00:32:18,880
sql of

816
00:32:18,880 --> 00:32:21,120
load

817
00:32:22,240 --> 00:32:24,320
yeah now it just packed everything into

818
00:32:24,320 --> 00:32:27,440
the one payload pipe

819
00:32:27,440 --> 00:32:30,159
a lot of harassment a lot of errors i'm

820
00:32:30,159 --> 00:32:32,240
not ever asked so yeah now you can see

821
00:32:32,240 --> 00:32:34,640
uh it packed with uh all the things and

822
00:32:34,640 --> 00:32:35,600
uh

823
00:32:35,600 --> 00:32:37,840
here you can see what order it became

824
00:32:37,840 --> 00:32:39,840
the it also packed into those stuff here

825
00:32:39,840 --> 00:32:41,519
you might miss the order a little bit

826
00:32:41,519 --> 00:32:43,200
because it is on different sorting

827
00:32:43,200 --> 00:32:44,720
algorithm but when you pack it back

828
00:32:44,720 --> 00:32:46,320
according to timestamp it will adjust

829
00:32:46,320 --> 00:32:48,559
back all the things and now you can

830
00:32:48,559 --> 00:32:51,519
actually uh play this uh payload thing

831
00:32:51,519 --> 00:32:53,679
which we created and to see if it is

832
00:32:53,679 --> 00:32:55,519
happening on the same so we'll verify

833
00:32:55,519 --> 00:32:57,519
that so same thing like the same thing

834
00:32:57,519 --> 00:33:00,000
unknown a scan function like a node so

835
00:33:00,000 --> 00:33:01,840
we can zero

836
00:33:01,840 --> 00:33:02,180
and

837
00:33:02,180 --> 00:33:03,519
[Music]

838
00:33:03,519 --> 00:33:07,120
yeah just to payload

839
00:33:07,120 --> 00:33:08,960
please don't make the string errors like

840
00:33:08,960 --> 00:33:12,640
i did i am very ashamed of it now

841
00:33:12,640 --> 00:33:14,320
so if you see it actually does in the

842
00:33:14,320 --> 00:33:16,320
same order which we recorded which make

843
00:33:16,320 --> 00:33:18,000
confirms that this tool will not reverse

844
00:33:18,000 --> 00:33:20,320
your uh can't priority version and all

845
00:33:20,320 --> 00:33:21,919
the state it doesn't do all the kind of

846
00:33:21,919 --> 00:33:24,159
things it actually works on time stamp

847
00:33:24,159 --> 00:33:26,480
basis so it does the exact same and

848
00:33:26,480 --> 00:33:27,840
close the doors

849
00:33:27,840 --> 00:33:29,039
yeah

850
00:33:29,039 --> 00:33:31,279
so it completed playing all these things

851
00:33:31,279 --> 00:33:33,600
so this is one thing but

852
00:33:33,600 --> 00:33:35,360
we it is a very small thing now right

853
00:33:35,360 --> 00:33:36,960
now we just created two

854
00:33:36,960 --> 00:33:38,720
actions and one action and

855
00:33:38,720 --> 00:33:41,200
uh one noise and hardly four thousand

856
00:33:41,200 --> 00:33:42,880
seven other packets are there and only

857
00:33:42,880 --> 00:33:45,600
six uh seven uh you know payload packets

858
00:33:45,600 --> 00:33:47,919
are there in seven uh all these things

859
00:33:47,919 --> 00:33:50,399
and uh but yeah if you might have a

860
00:33:50,399 --> 00:33:52,720
question like you know why it is giving

861
00:33:52,720 --> 00:33:54,880
more than what it is supposed to be here

862
00:33:54,880 --> 00:33:57,039
so when it checks this is that noise

863
00:33:57,039 --> 00:33:59,600
star i'm saying uh it checks or that and

864
00:33:59,600 --> 00:34:01,600
then it sometimes it gives you you can

865
00:34:01,600 --> 00:34:04,159
actually particularly remove something

866
00:34:04,159 --> 00:34:06,240
uh from this thing and you can also do

867
00:34:06,240 --> 00:34:07,580
that uh for example

868
00:34:07,580 --> 00:34:08,719
[Music]

869
00:34:08,719 --> 00:34:12,560
if i want to remove one 9b so i can do

870
00:34:12,560 --> 00:34:16,879
something like uh you know payload

871
00:34:17,520 --> 00:34:21,119
it's on filter so let's just do a filter

872
00:34:21,119 --> 00:34:22,960
one

873
00:34:22,960 --> 00:34:24,639
which is

874
00:34:24,639 --> 00:34:26,879
you know

875
00:34:26,879 --> 00:34:31,399
let's say sql off

876
00:34:37,040 --> 00:34:39,359
select

877
00:34:39,359 --> 00:34:40,320
all

878
00:34:40,320 --> 00:34:40,639
from

879
00:34:40,639 --> 00:34:41,839
[Music]

880
00:34:41,839 --> 00:34:44,239
filter

881
00:34:46,839 --> 00:34:50,000
here in fact you can run payload also

882
00:34:50,000 --> 00:34:53,440
here you don't need to worry about that

883
00:34:58,960 --> 00:35:00,560
the

884
00:35:00,560 --> 00:35:05,520
id is not equal to

885
00:35:05,520 --> 00:35:08,240
19b

886
00:35:11,440 --> 00:35:12,960
and just

887
00:35:12,960 --> 00:35:14,160
close this

888
00:35:14,160 --> 00:35:15,599
and run it

889
00:35:15,599 --> 00:35:18,240
so if you see filter one will actually

890
00:35:18,240 --> 00:35:20,400
give any other packets which you want

891
00:35:20,400 --> 00:35:22,640
so in this way uh like was explaining

892
00:35:22,640 --> 00:35:24,640
you can create multiple files payload

893
00:35:24,640 --> 00:35:26,800
files also if you want and all

894
00:35:26,800 --> 00:35:28,960
but even though it is very small but we

895
00:35:28,960 --> 00:35:30,640
created a lot of stuff we ran a lot of

896
00:35:30,640 --> 00:35:32,800
commands we did some blenders i did some

897
00:35:32,800 --> 00:35:35,520
blenders so yeah what if i want to have

898
00:35:35,520 --> 00:35:38,880
this whole question exported in id you

899
00:35:38,880 --> 00:35:40,160
can also do that for example when you

900
00:35:40,160 --> 00:35:41,119
are doing an apprentice investing

901
00:35:41,119 --> 00:35:43,040
project you work you're working on

902
00:35:43,040 --> 00:35:45,040
assessing how good the brake function is

903
00:35:45,040 --> 00:35:46,800
but you want to extract uh export all

904
00:35:46,800 --> 00:35:49,920
the things uh you can simply put export

905
00:35:49,920 --> 00:35:53,599
and just type the name i want to do uh

906
00:35:53,599 --> 00:35:56,560
chv 22 like i did

907
00:35:56,560 --> 00:35:57,599
no

908
00:35:57,599 --> 00:36:00,240
let's just add another label talk and

909
00:36:00,240 --> 00:36:02,000
yeah

910
00:36:02,000 --> 00:36:04,400
that's it i just pass it as a string and

911
00:36:04,400 --> 00:36:06,560
i put enter right now it is exporting

912
00:36:06,560 --> 00:36:08,640
every single command and everything uh

913
00:36:08,640 --> 00:36:11,119
it did completed also very fast so all

914
00:36:11,119 --> 00:36:12,800
the things which we did till now are

915
00:36:12,800 --> 00:36:14,000
actually uh

916
00:36:14,000 --> 00:36:15,839
done here so let me just open that you

917
00:36:15,839 --> 00:36:20,240
can see here there's a chv uh 22

918
00:36:20,240 --> 00:36:22,720
top folder here there we have logs all

919
00:36:22,720 --> 00:36:24,640
the logs which we created filter one

920
00:36:24,640 --> 00:36:26,640
noise action payload even though you

921
00:36:26,640 --> 00:36:28,079
don't convert into locks because

922
00:36:28,079 --> 00:36:30,400
whenever you play it back actually makes

923
00:36:30,400 --> 00:36:33,280
in tails into law you can also uh for

924
00:36:33,280 --> 00:36:35,280
example the filter which we never used

925
00:36:35,280 --> 00:36:38,400
it anywhere so it can also convert all

926
00:36:38,400 --> 00:36:40,640
your things into a csv and it can save

927
00:36:40,640 --> 00:36:42,720
it to you i don't have excel here so it

928
00:36:42,720 --> 00:36:44,720
doesn't show it you can also do this in

929
00:36:44,720 --> 00:36:47,520
the csv way and also here we use some

930
00:36:47,520 --> 00:36:49,839
kind of meta language kind of stuff the

931
00:36:49,839 --> 00:36:52,400
dot class so you can actually see all

932
00:36:52,400 --> 00:36:54,720
the commands which we ran till now along

933
00:36:54,720 --> 00:36:57,440
with all the blunders and stuff and also

934
00:36:57,440 --> 00:36:59,680
if you uh see here we also have this

935
00:36:59,680 --> 00:37:00,640
thing

936
00:37:00,640 --> 00:37:01,920
um

937
00:37:01,920 --> 00:37:04,079
the data dot class what data dot class

938
00:37:04,079 --> 00:37:06,160
actually does is like i was explaining

939
00:37:06,160 --> 00:37:08,160
analyze id you can do seamless data

940
00:37:08,160 --> 00:37:10,480
transfer so right now i exported this

941
00:37:10,480 --> 00:37:12,800
box so i have this uh my payload and

942
00:37:12,800 --> 00:37:15,520
filter one and all so if i want this

943
00:37:15,520 --> 00:37:17,839
into any other project i don't need to

944
00:37:17,839 --> 00:37:19,359
copy paste copy paste and all i can

945
00:37:19,359 --> 00:37:21,440
simply call or import from this

946
00:37:21,440 --> 00:37:22,720
particular uh

947
00:37:22,720 --> 00:37:25,040
directory this this particular uh

948
00:37:25,040 --> 00:37:26,560
payload parallel lock but it is that you

949
00:37:26,560 --> 00:37:29,760
just import that so we'll do that let me

950
00:37:29,760 --> 00:37:32,320
just exit from here

951
00:37:32,320 --> 00:37:34,480
and do it into a new thing where i want

952
00:37:34,480 --> 00:37:36,400
to show or you know

953
00:37:36,400 --> 00:37:38,400
do we have this stuff or not

954
00:37:38,400 --> 00:37:40,720
so let's say um

955
00:37:40,720 --> 00:37:43,200
let's strive for filter one dot block so

956
00:37:43,200 --> 00:37:45,359
let's see if we have filter1.log or

957
00:37:45,359 --> 00:37:47,200
something you know filter one variable

958
00:37:47,200 --> 00:37:50,359
at least

959
00:37:50,800 --> 00:37:52,160
no it's not different it's completely

960
00:37:52,160 --> 00:37:55,520
removed but i can simply say

961
00:37:55,520 --> 00:37:56,640
you know just

962
00:37:56,640 --> 00:38:01,319
get filter one from here

963
00:38:03,760 --> 00:38:08,000
in fact i can give uh another name chv

964
00:38:08,000 --> 00:38:10,000
uh is equal to

965
00:38:10,000 --> 00:38:11,200
yeah

966
00:38:11,200 --> 00:38:13,520
okay

967
00:38:14,320 --> 00:38:15,280
let's just

968
00:38:15,280 --> 00:38:16,720
filter one you just need to copy paste

969
00:38:16,720 --> 00:38:19,520
it and then yeah

970
00:38:19,520 --> 00:38:22,400
okay again blenders lot of blenders

971
00:38:22,400 --> 00:38:23,599
today

972
00:38:23,599 --> 00:38:25,119
yeah filter one you just got the same

973
00:38:25,119 --> 00:38:26,480
thing you can actually do the same thing

974
00:38:26,480 --> 00:38:29,520
here like we did same ide so yeah you

975
00:38:29,520 --> 00:38:31,760
can play it

976
00:38:31,760 --> 00:38:34,640
we can zero

977
00:38:35,119 --> 00:38:37,520
comma

978
00:38:37,599 --> 00:38:40,240
filter one

979
00:38:42,240 --> 00:38:43,280
and it will

980
00:38:43,280 --> 00:38:45,040
just take the thing

981
00:38:45,040 --> 00:38:46,960
signals

982
00:38:46,960 --> 00:38:49,040
so once it is done yeah you got the

983
00:38:49,040 --> 00:38:51,520
draft one to me yeah electronics both of

984
00:38:51,520 --> 00:38:54,560
its time so this is how easy it is using

985
00:38:54,560 --> 00:38:56,880
canada's ide and recording your projects

986
00:38:56,880 --> 00:38:59,440
and doing all the stuff yeah let's also

987
00:38:59,440 --> 00:39:01,920
check out the telegram part so to do

988
00:39:01,920 --> 00:39:03,920
that i'll quickly open my telegram i

989
00:39:03,920 --> 00:39:05,920
have also created a bot uh known as

990
00:39:05,920 --> 00:39:11,200
canalizebot and i have this api token

991
00:39:11,359 --> 00:39:12,839
i'll just copy

992
00:39:12,839 --> 00:39:15,920
it let me keep it here and i'll go to

993
00:39:15,920 --> 00:39:18,079
settings

994
00:39:18,079 --> 00:39:21,839
and i'll put my api token here

995
00:39:22,400 --> 00:39:23,440
that's it

996
00:39:23,440 --> 00:39:25,119
so if i want to check i can go back and

997
00:39:25,119 --> 00:39:26,560
check yeah it's the same one which i

998
00:39:26,560 --> 00:39:28,960
just used and i went back

999
00:39:28,960 --> 00:39:31,680
and i want to go to initialize this port

1000
00:39:31,680 --> 00:39:34,400
yeah this what is initialized

1001
00:39:34,400 --> 00:39:38,240
let me just connect to telephone

1002
00:39:40,240 --> 00:39:41,359
okay

1003
00:39:41,359 --> 00:39:44,560
let me just start this

1004
00:39:46,320 --> 00:39:48,480
yeah i'm just going to take them

1005
00:39:48,480 --> 00:39:50,079
yeah it gives a height that means it has

1006
00:39:50,079 --> 00:39:51,839
binded with your bot

1007
00:39:51,839 --> 00:39:54,880
and uh what happens here is like we can

1008
00:39:54,880 --> 00:39:56,960
do all the same stuff which we did till

1009
00:39:56,960 --> 00:39:58,400
now uh and

1010
00:39:58,400 --> 00:40:00,480
if you remember we have multiple files

1011
00:40:00,480 --> 00:40:04,800
here so we can actually use them

1012
00:40:05,119 --> 00:40:06,960
and uh do the same than the same

1013
00:40:06,960 --> 00:40:08,640
commands yeah we'll run the same

1014
00:40:08,640 --> 00:40:11,440
commands and to see but we'll just uh

1015
00:40:11,440 --> 00:40:13,920
restrict it to 10 seconds like that so

1016
00:40:13,920 --> 00:40:16,720
let's do that

1017
00:40:18,319 --> 00:40:20,400
so let me just collect the noise once

1018
00:40:20,400 --> 00:40:24,839
again for 10 seconds

1019
00:40:26,720 --> 00:40:28,319
so whenever a telegram while you're

1020
00:40:28,319 --> 00:40:30,240
using to telecom port uh please make

1021
00:40:30,240 --> 00:40:31,680
sure your port is initialized and all

1022
00:40:31,680 --> 00:40:33,760
and also when the command execution is

1023
00:40:33,760 --> 00:40:35,760
completed it will give you a thumbs up

1024
00:40:35,760 --> 00:40:37,119
symbol which indicates that you know

1025
00:40:37,119 --> 00:40:38,800
your command is

1026
00:40:38,800 --> 00:40:40,720
perfectly executed otherwise it puts you

1027
00:40:40,720 --> 00:40:43,200
an error and also let's uh

1028
00:40:43,200 --> 00:40:45,599
do one more action pipe this time let me

1029
00:40:45,599 --> 00:40:47,680
do the action file

1030
00:40:47,680 --> 00:40:52,319
for 30 seconds i want to do something

1031
00:40:52,319 --> 00:40:54,560
so i want to open only two doors here

1032
00:40:54,560 --> 00:40:57,440
and then yeah let's see how that works

1033
00:40:57,440 --> 00:40:59,760
for us

1034
00:41:00,079 --> 00:41:01,359
i'm opening

1035
00:41:01,359 --> 00:41:03,520
the first door and giving the right

1036
00:41:03,520 --> 00:41:05,200
signal and i'm opening the second door

1037
00:41:05,200 --> 00:41:07,040
and then giving the left signal and i'm

1038
00:41:07,040 --> 00:41:08,960
literally closing all the rows so let's

1039
00:41:08,960 --> 00:41:11,440
see how it happens in this

1040
00:41:11,440 --> 00:41:13,440
so same commands like ide like i

1041
00:41:13,440 --> 00:41:16,000
discussed it simply uses uh hold

1042
00:41:16,000 --> 00:41:20,920
commands from ide to do here

1043
00:41:21,599 --> 00:41:23,520
now

1044
00:41:23,520 --> 00:41:26,240
like we did

1045
00:41:29,599 --> 00:41:31,440
here also you can see it says message

1046
00:41:31,440 --> 00:41:34,560
received and output is good and all yeah

1047
00:41:34,560 --> 00:41:36,880
and also you can load it back into a

1048
00:41:36,880 --> 00:41:39,880
payload

1049
00:41:50,400 --> 00:41:54,400
okay again the same color because yeah

1050
00:41:54,400 --> 00:41:58,640
there's no fighter there is only filter

1051
00:42:01,680 --> 00:42:03,119
yeah it's done

1052
00:42:03,119 --> 00:42:05,680
and you know we can actually uh

1053
00:42:05,680 --> 00:42:08,960
do this also

1054
00:42:16,000 --> 00:42:19,680
it is done and this

1055
00:42:20,880 --> 00:42:24,319
i'm literally creating the

1056
00:42:25,920 --> 00:42:28,240
file

1057
00:42:28,720 --> 00:42:30,000
from the node

1058
00:42:30,000 --> 00:42:34,000
and i'm playing back the payload file

1059
00:42:38,319 --> 00:42:41,040
here you can see uh it is following the

1060
00:42:41,040 --> 00:42:43,040
same order of opening a door and then

1061
00:42:43,040 --> 00:42:45,280
giving a signal and then opening the

1062
00:42:45,280 --> 00:42:47,359
other two in a few seconds it will do

1063
00:42:47,359 --> 00:42:48,319
that

1064
00:42:48,319 --> 00:42:49,920
too

1065
00:42:49,920 --> 00:42:53,960
and close all the doors too

1066
00:43:21,440 --> 00:43:23,520
also here the conditions like you know

1067
00:43:23,520 --> 00:43:25,280
the files which we have created we

1068
00:43:25,280 --> 00:43:27,280
should also be having all the packets we

1069
00:43:27,280 --> 00:43:30,400
wanted that is also a condition here

1070
00:43:30,400 --> 00:43:31,680
so if it doesn't have because of the

1071
00:43:31,680 --> 00:43:33,839
time frame we used 30 seconds and 10

1072
00:43:33,839 --> 00:43:35,599
seconds if it doesn't actually was able

1073
00:43:35,599 --> 00:43:37,839
to filter it out then you won't be able

1074
00:43:37,839 --> 00:43:39,839
to get hard but yeah it got here it's

1075
00:43:39,839 --> 00:43:41,200
very late

1076
00:43:41,200 --> 00:43:44,000
so yeah that is this thing like there

1077
00:43:44,000 --> 00:43:46,319
you can also export here also you can

1078
00:43:46,319 --> 00:43:48,000
just send you know export command it

1079
00:43:48,000 --> 00:43:50,079
will save it in your i think

1080
00:43:50,079 --> 00:43:51,760
so

1081
00:43:51,760 --> 00:43:56,240
chp i'll just put that and yeah

1082
00:43:56,240 --> 00:43:58,079
once it is done it just gives an export

1083
00:43:58,079 --> 00:44:00,240
time so whenever you collect back your

1084
00:44:00,240 --> 00:44:02,720
device uh you can actually see that it

1085
00:44:02,720 --> 00:44:04,160
is also there

1086
00:44:04,160 --> 00:44:06,319
yeah

1087
00:44:06,560 --> 00:44:07,680
there you go

1088
00:44:07,680 --> 00:44:09,520
like the same format all the commands

1089
00:44:09,520 --> 00:44:11,680
logs we have used and the payloads we

1090
00:44:11,680 --> 00:44:13,680
created and the filters yes everything

1091
00:44:13,680 --> 00:44:15,119
is same

1092
00:44:15,119 --> 00:44:17,760
so this is the demo

1093
00:44:17,760 --> 00:44:21,800
of the canalis ide

1094
00:44:22,880 --> 00:44:24,960
uh robert please cut it here i'll stop

1095
00:44:24,960 --> 00:44:27,200
sharing my screen and i'll do it once

1096
00:44:27,200 --> 00:44:30,079
again with my slides

1097
00:44:30,079 --> 00:44:32,960
so i hope you loved our uh demonstration

1098
00:44:32,960 --> 00:44:35,200
tool demo and all i did make a lot of

1099
00:44:35,200 --> 00:44:36,800
blunders in uh

1100
00:44:36,800 --> 00:44:38,800
passing the commands and all i hope you

1101
00:44:38,800 --> 00:44:41,040
can forgive me for that and yeah that is

1102
00:44:41,040 --> 00:44:43,760
about ide i believe we uh the team

1103
00:44:43,760 --> 00:44:46,400
channel i believe you love this and all

1104
00:44:46,400 --> 00:44:47,839
and also

1105
00:44:47,839 --> 00:44:49,599
since we are saying uh these things and

1106
00:44:49,599 --> 00:44:51,359
a lot of stuff which needs improvement

1107
00:44:51,359 --> 00:44:54,000
one of the things is the terminal ui we

1108
00:44:54,000 --> 00:44:56,319
are planning to uh improve the ui so it

1109
00:44:56,319 --> 00:44:58,720
makes more user-friendly both in ide and

1110
00:44:58,720 --> 00:45:00,880
smart scan way and also i know how

1111
00:45:00,880 --> 00:45:03,839
powerful we know how purple scapu is and

1112
00:45:03,839 --> 00:45:06,240
we will are looking ways to implement uh

1113
00:45:06,240 --> 00:45:08,800
or like uh get scappy also in the ide so

1114
00:45:08,800 --> 00:45:10,800
that it helps you uh doing a lot of

1115
00:45:10,800 --> 00:45:13,280
advanced stuff also puzzle i'm not sure

1116
00:45:13,280 --> 00:45:14,880
right now because i want to master it

1117
00:45:14,880 --> 00:45:16,319
first and then i want to pull it in the

1118
00:45:16,319 --> 00:45:17,119
stool

1119
00:45:17,119 --> 00:45:18,640
otherwise it just ends up like any other

1120
00:45:18,640 --> 00:45:20,079
tool which is available oh i want to

1121
00:45:20,079 --> 00:45:22,079
solve something there yeah so that is my

1122
00:45:22,079 --> 00:45:24,640
future plans and like we are discussing

1123
00:45:24,640 --> 00:45:26,960
this tool is completely open source and

1124
00:45:26,960 --> 00:45:28,800
made for community people who want to

1125
00:45:28,800 --> 00:45:31,040
get started with kayaking or

1126
00:45:31,040 --> 00:45:33,040
who wants to make the process more

1127
00:45:33,040 --> 00:45:36,000
enjoyable and easy so if you have any

1128
00:45:36,000 --> 00:45:38,079
idea please don't forget to contribute

1129
00:45:38,079 --> 00:45:39,680
to the tool it's just in the github it's

1130
00:45:39,680 --> 00:45:41,839
just a pull request away so please do

1131
00:45:41,839 --> 00:45:44,560
try it your tinkering stuff and all and

1132
00:45:44,560 --> 00:45:47,200
finally i would like to thank my mentor

1133
00:45:47,200 --> 00:45:48,960
and my company prashant kv and my

1134
00:45:48,960 --> 00:45:51,119
company pio2 for supporting me in this

1135
00:45:51,119 --> 00:45:52,720
and also i would like to thank rahul in

1136
00:45:52,720 --> 00:45:54,880
this moment for being with me in all

1137
00:45:54,880 --> 00:45:56,880
these days and actually

1138
00:45:56,880 --> 00:45:58,720
running through all my bad cold pitch

1139
00:45:58,720 --> 00:46:01,520
runs by the way and all these things and

1140
00:46:01,520 --> 00:46:03,680
also thanks to whole kayaking village

1141
00:46:03,680 --> 00:46:05,680
team who pulled it out we know how much

1142
00:46:05,680 --> 00:46:07,920
it is hard to run a conference and done

1143
00:46:07,920 --> 00:46:10,240
this thing and thanks to defcon usa

1144
00:46:10,240 --> 00:46:11,760
thank you all thank you for listening to

1145
00:46:11,760 --> 00:46:15,839
your talk and supporting us thank you

1146
00:49:59,760 --> 00:50:01,839
you

