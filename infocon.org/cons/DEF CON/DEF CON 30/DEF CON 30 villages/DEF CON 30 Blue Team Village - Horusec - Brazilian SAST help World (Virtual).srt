1
00:00:06,779 --> 00:00:08,179
hi everyone

2
00:00:08,179 --> 00:00:12,120
my name is Gilmore Steves and my partner

3
00:00:12,120 --> 00:00:14,700
is Philippe Peters now we make the

4
00:00:14,700 --> 00:00:17,160
presentation about the orsec Brazilian

5
00:00:17,160 --> 00:00:20,520
sauce help the world I'm FP of security

6
00:00:20,520 --> 00:00:23,359
engineering but uh also in the

7
00:00:23,359 --> 00:00:26,760
Innovation but also I'm a technical holy

8
00:00:26,760 --> 00:00:28,859
history in my whole life I'm not a

9
00:00:28,859 --> 00:00:31,920
 this President and me and

10
00:00:31,920 --> 00:00:34,320
Philip peers are advocated of the open

11
00:00:34,320 --> 00:00:38,100
source project or sec Philippines yes

12
00:00:38,100 --> 00:00:40,680
thank you very much so my name is I'm a

13
00:00:40,680 --> 00:00:42,500
security research

14
00:00:42,500 --> 00:00:45,780
at support supports a company from

15
00:00:45,780 --> 00:00:47,280
Switzerland that's our top company and

16
00:00:47,280 --> 00:00:48,960
I'm responsible for creating different

17
00:00:48,960 --> 00:00:51,780
attack modules for this specifically

18
00:00:51,780 --> 00:00:54,120
organization and I might Advocate not

19
00:00:54,120 --> 00:00:56,280
only our SEC but to many different open

20
00:00:56,280 --> 00:00:58,320
source projects because I really believe

21
00:00:58,320 --> 00:01:01,320
that and I like that and our SEC is a

22
00:01:01,320 --> 00:01:03,480
awesome project I started in Brazil by

23
00:01:03,480 --> 00:01:06,479
the way and we would like to present you

24
00:01:06,479 --> 00:01:10,080
more about this project and would like

25
00:01:10,080 --> 00:01:12,420
invite you to collaborate with us

26
00:01:12,420 --> 00:01:14,240
Yes

27
00:01:14,240 --> 00:01:17,100
actually we love the open source project

28
00:01:17,100 --> 00:01:18,840
because the open source helped the

29
00:01:18,840 --> 00:01:21,420
community and the help to improve the

30
00:01:21,420 --> 00:01:24,780
growth the the cyber security mindset

31
00:01:24,780 --> 00:01:28,320
and in a small company we know that a

32
00:01:28,320 --> 00:01:29,880
lot of small companies not to have a

33
00:01:29,880 --> 00:01:32,520
budget for cyber security and the open

34
00:01:32,520 --> 00:01:35,460
source it's a way to improve and grow

35
00:01:35,460 --> 00:01:39,559
for your cyber security environment

36
00:01:48,619 --> 00:01:51,720
application security testing tools and

37
00:01:51,720 --> 00:01:53,460
helping the source code are all

38
00:01:53,460 --> 00:01:55,799
completed version to offer the code to

39
00:01:55,799 --> 00:01:58,680
help find the secret flows

40
00:01:58,680 --> 00:02:01,740
um the oversec can be added into your

41
00:02:01,740 --> 00:02:05,040
ege set tools and can help detect the

42
00:02:05,040 --> 00:02:07,140
issues during the software development

43
00:02:07,140 --> 00:02:09,899
such tools feedback can save time to

44
00:02:09,899 --> 00:02:12,540
effort especially we can burn to find

45
00:02:12,540 --> 00:02:14,400
vulnerability later in the development

46
00:02:14,400 --> 00:02:19,200
cycle normally we use the or SEC before

47
00:02:19,200 --> 00:02:22,560
the code production in the pipeline in

48
00:02:22,560 --> 00:02:24,360
the Ed

49
00:02:24,360 --> 00:02:27,180
the string features or distinct part

50
00:02:27,180 --> 00:02:30,540
about the sauce it scales well if

51
00:02:30,540 --> 00:02:34,379
possible to run a lot of PODS and make a

52
00:02:34,379 --> 00:02:35,540
lot of

53
00:02:35,540 --> 00:02:38,160
analysis in different language before

54
00:02:38,160 --> 00:02:41,160
the the production is not a complete

55
00:02:41,160 --> 00:02:44,819
code normally it's a raw code and it's

56
00:02:44,819 --> 00:02:47,040
possible to identify the buffers

57
00:02:47,040 --> 00:02:51,720
overflow SQL injection and normally the

58
00:02:51,720 --> 00:02:56,400
ciphers some codes hard codes of

59
00:02:56,400 --> 00:02:58,920
a password and login

60
00:02:58,920 --> 00:03:01,940
normally the output helping developers

61
00:03:01,940 --> 00:03:06,000
to understand the high Glide the

62
00:03:06,000 --> 00:03:08,580
problematic codes by file name a

63
00:03:08,580 --> 00:03:12,540
location line number affect the code

64
00:03:12,540 --> 00:03:15,599
these codes are to automate search too

65
00:03:15,599 --> 00:03:17,159
many types of security vulnerabilities

66
00:03:17,159 --> 00:03:21,420
the search code needs to a lot of coders

67
00:03:21,420 --> 00:03:23,159
under the project

68
00:03:23,159 --> 00:03:27,120
to build uh new forms or a new code to

69
00:03:27,120 --> 00:03:29,940
identify the new vulnerabilits or a new

70
00:03:29,940 --> 00:03:32,519
form of vulnerabilities

71
00:03:32,519 --> 00:03:35,400
for example authentication problems or

72
00:03:35,400 --> 00:03:38,120
business problems is so hard to identify

73
00:03:38,120 --> 00:03:41,819
insecure use of cryptography because we

74
00:03:41,819 --> 00:03:44,519
know but um the team development are

75
00:03:44,519 --> 00:03:46,560
different cryptography model for example

76
00:03:46,560 --> 00:03:51,599
noise noise control or noise framework

77
00:03:51,599 --> 00:03:53,700
it's so difficult to understand the

78
00:03:53,700 --> 00:03:57,799
cryptograph and help the developer

79
00:03:57,799 --> 00:04:01,280
make the make better codes

80
00:04:01,280 --> 00:04:04,920
normally suster tools are limited it's

81
00:04:04,920 --> 00:04:07,920
only only static not Dynamic can not run

82
00:04:07,920 --> 00:04:11,519
time but in the future I believe the

83
00:04:11,519 --> 00:04:13,099
oars

84
00:04:13,099 --> 00:04:17,880
grow for a dynamic analysis way

85
00:04:17,880 --> 00:04:19,500
orders

86
00:04:19,500 --> 00:04:21,139
Otto was born

87
00:04:21,139 --> 00:04:24,360
I need to run assassin more modern

88
00:04:24,360 --> 00:04:28,139
language normally the big players in the

89
00:04:28,139 --> 00:04:29,580
market

90
00:04:29,580 --> 00:04:32,280
um running in the established language

91
00:04:32,280 --> 00:04:38,040
and the rugby python kotlin and a new a

92
00:04:38,040 --> 00:04:40,919
new language is not possible to make the

93
00:04:40,919 --> 00:04:43,020
SAS analysis that three years ago when

94
00:04:43,020 --> 00:04:46,919
we started the oral sex project we

95
00:04:46,919 --> 00:04:49,259
managed to create a product for the

96
00:04:49,259 --> 00:04:51,300
community in today's zip support the

97
00:04:51,300 --> 00:04:53,880
open source solution and I need sponsor

98
00:04:53,880 --> 00:04:57,240
official sponsor of the our sec some

99
00:04:57,240 --> 00:04:59,460
features about the other settings is

100
00:04:59,460 --> 00:05:02,520
very important analyze simultaneous 18

101
00:05:02,520 --> 00:05:04,500
language with too many different

102
00:05:04,500 --> 00:05:07,320
Securities to increase the course search

103
00:05:07,320 --> 00:05:09,840
for the historical git by secrets and

104
00:05:09,840 --> 00:05:13,220
other content disposed and clarify that

105
00:05:13,220 --> 00:05:15,419
urinals can be full configuration

106
00:05:15,419 --> 00:05:17,580
configurable

107
00:05:17,580 --> 00:05:18,199
um

108
00:05:18,199 --> 00:05:19,740
CLI

109
00:05:19,740 --> 00:05:23,639
on a web manager or pipeline

110
00:05:23,639 --> 00:05:28,020
and now Philippi make a presentation a

111
00:05:28,020 --> 00:05:30,380
live coding with us

112
00:05:30,380 --> 00:05:33,060
yeah thank you Kumar thank you so let me

113
00:05:33,060 --> 00:05:35,880
share my screen here and uh one second

114
00:05:35,880 --> 00:05:37,979
please everyone so I will share my

115
00:05:37,979 --> 00:05:40,740
screen here to explain in more

116
00:05:40,740 --> 00:05:43,620
technically so what about this Auto sex

117
00:05:43,620 --> 00:05:46,259
so uh I think you can see my screen here

118
00:05:46,259 --> 00:05:48,720
so here is the webpage from our SEC or

119
00:05:48,720 --> 00:05:52,500
SEC doc IO this is website and basically

120
00:05:52,500 --> 00:05:56,039
I have here my GitHub Philippines 86 you

121
00:05:56,039 --> 00:05:58,560
haven't specific repository here below

122
00:05:58,560 --> 00:06:02,400
called R Sac Dash demo so I'm using this

123
00:06:02,400 --> 00:06:04,139
basically this folder in this

124
00:06:04,139 --> 00:06:06,900
demonstration here so you can find here

125
00:06:06,900 --> 00:06:09,840
if you'd like to test yourself okay so

126
00:06:09,840 --> 00:06:12,479
let's return here to the main page so

127
00:06:12,479 --> 00:06:14,520
here you can see more information you

128
00:06:14,520 --> 00:06:17,580
have here the GitHub from or Saki and

129
00:06:17,580 --> 00:06:19,800
here the documentations and not only

130
00:06:19,800 --> 00:06:22,080
that but here you have the Forum so

131
00:06:22,080 --> 00:06:24,120
basically is the place that you can find

132
00:06:24,120 --> 00:06:26,759
in the community and the or SEC team

133
00:06:26,759 --> 00:06:29,039
answered for your question your doubts

134
00:06:29,039 --> 00:06:31,139
okay and just click here in

135
00:06:31,139 --> 00:06:33,240
documentation and we can see here in

136
00:06:33,240 --> 00:06:36,960
another tab and I will share here how

137
00:06:36,960 --> 00:06:38,880
you can install it's work it's very

138
00:06:38,880 --> 00:06:40,560
simple like this so I click it here in

139
00:06:40,560 --> 00:06:44,400
CLI and after that installation and I'm

140
00:06:44,400 --> 00:06:46,500
we have it three ways or external three

141
00:06:46,500 --> 00:06:48,060
with four ways to install locally

142
00:06:48,060 --> 00:06:51,419
manually installed by Docker and using

143
00:06:51,419 --> 00:06:53,639
pipeline it has your measurements right

144
00:06:53,639 --> 00:06:55,800
so we don't have a time to explain all

145
00:06:55,800 --> 00:06:57,840
those details but I will try to explain

146
00:06:57,840 --> 00:07:00,960
here on a simple way using for example

147
00:07:00,960 --> 00:07:04,080
by curl using here in my virtual machine

148
00:07:04,080 --> 00:07:06,620
so I have here a simple

149
00:07:06,620 --> 00:07:09,419
folders as I mentioned it with you in

150
00:07:09,419 --> 00:07:11,580
the beginning so a specifically folder

151
00:07:11,580 --> 00:07:13,319
that I have here some codes vulnerable

152
00:07:13,319 --> 00:07:16,139
so basically I will pass here this is

153
00:07:16,139 --> 00:07:17,160
specifically

154
00:07:17,160 --> 00:07:20,580
line of code and I will using curl to

155
00:07:20,580 --> 00:07:23,099
call this binary and set here the batch

156
00:07:23,099 --> 00:07:25,740
to install the latest version okay so I

157
00:07:25,740 --> 00:07:28,380
click hand enter here and after that you

158
00:07:28,380 --> 00:07:30,539
see the installation of the latest

159
00:07:30,539 --> 00:07:32,520
version and after that I will download

160
00:07:32,520 --> 00:07:34,380
the binary I need to set here the

161
00:07:34,380 --> 00:07:35,880
password because I don't have a

162
00:07:35,880 --> 00:07:38,039
privilege to use it it's important for

163
00:07:38,039 --> 00:07:40,259
the security stuff by the way the last

164
00:07:40,259 --> 00:07:43,259
version as you can see here and we have

165
00:07:43,259 --> 00:07:45,300
installed the button not only that but

166
00:07:45,300 --> 00:07:48,720
we moved to the specific local binary

167
00:07:48,720 --> 00:07:52,800
place okay so I can check here for a sec

168
00:07:52,800 --> 00:07:56,460
it's Philip yep so let's let's notify

169
00:07:56,460 --> 00:08:00,360
this part because we explain a local

170
00:08:00,360 --> 00:08:01,800
installation

171
00:08:01,800 --> 00:08:04,440
local installation is not remote not web

172
00:08:04,440 --> 00:08:07,560
or Docker we use the black and Linux

173
00:08:07,560 --> 00:08:10,139
comment with a local installation

174
00:08:10,139 --> 00:08:12,840
yeah you can use it here not exactly do

175
00:08:12,840 --> 00:08:15,180
it uh you can use in Mac or Linux you

176
00:08:15,180 --> 00:08:17,819
can download using locally pipe windows

177
00:08:17,819 --> 00:08:20,280
and you have here other version to use

178
00:08:20,280 --> 00:08:23,220
it manually so and not only in this way

179
00:08:23,220 --> 00:08:26,039
but you can see here other

180
00:08:26,039 --> 00:08:28,740
um other ways to install like a Docker

181
00:08:28,740 --> 00:08:31,319
image so it's another possibility but if

182
00:08:31,319 --> 00:08:33,539
you can see here we can call Docker and

183
00:08:33,539 --> 00:08:36,539
you can install yourself in your Docker

184
00:08:36,539 --> 00:08:38,039
in your containing environment actually

185
00:08:38,039 --> 00:08:40,620
okay it's a different way so I installed

186
00:08:40,620 --> 00:08:42,419
basically locally in my virtual machine

187
00:08:42,419 --> 00:08:45,180
because of that I download this

188
00:08:45,180 --> 00:08:47,640
different folders as you can see years

189
00:08:47,640 --> 00:08:51,899
okay to test so I install here or SEC

190
00:08:51,899 --> 00:08:54,600
and after that I can

191
00:08:54,600 --> 00:08:57,660
set some comments so basically I if I

192
00:08:57,660 --> 00:08:59,519
don't know how I can use in here I can

193
00:08:59,519 --> 00:09:02,339
set help to understand how

194
00:09:02,339 --> 00:09:04,260
whatever tools work but basically you

195
00:09:04,260 --> 00:09:06,540
can see here some specific explanation

196
00:09:06,540 --> 00:09:09,060
in the beginning what is exactly our SEC

197
00:09:09,060 --> 00:09:11,279
and the flags that you can use in

198
00:09:11,279 --> 00:09:13,320
comments so basically we haven't

199
00:09:13,320 --> 00:09:16,200
specifically comments to use like a

200
00:09:16,200 --> 00:09:18,540
completion generate help start an

201
00:09:18,540 --> 00:09:20,700
inversion so version is basically the

202
00:09:20,700 --> 00:09:22,980
version to generate to see specifically

203
00:09:22,980 --> 00:09:26,640
uh configurations completion is a

204
00:09:26,640 --> 00:09:28,260
specifically scripted to see

205
00:09:28,260 --> 00:09:30,540
specifically uh configurations of the

206
00:09:30,540 --> 00:09:33,540
shell and they start to execute itself

207
00:09:33,540 --> 00:09:36,839
the r sex so basically or SEC is start

208
00:09:36,839 --> 00:09:39,360
is the comment to execute and after that

209
00:09:39,360 --> 00:09:42,120
you can use in different flags so let me

210
00:09:42,120 --> 00:09:46,080
put in here Dash 8 or dash dash help is

211
00:09:46,080 --> 00:09:48,660
the same to see difference common so

212
00:09:48,660 --> 00:09:51,600
just a simple commodity to explain like

213
00:09:51,600 --> 00:09:52,980
for example

214
00:09:52,980 --> 00:09:56,700
um Dash H to help and other interesting

215
00:09:56,700 --> 00:09:59,459
comment is Dash o for example because if

216
00:09:59,459 --> 00:10:01,079
you are thinking about sonar QB for

217
00:10:01,079 --> 00:10:02,880
example it's another project to looking

218
00:10:02,880 --> 00:10:05,300
for an a Quality quality

219
00:10:05,300 --> 00:10:09,240
tools but they haven't specifically uh

220
00:10:09,240 --> 00:10:11,519
configurations about security but our

221
00:10:11,519 --> 00:10:14,160
SEC is created by the security team in

222
00:10:14,160 --> 00:10:17,160
this case the achievement is for more a

223
00:10:17,160 --> 00:10:19,200
difference program language and not only

224
00:10:19,200 --> 00:10:21,180
that but can use in both tools together

225
00:10:21,180 --> 00:10:22,980
because of that you can set here the

226
00:10:22,980 --> 00:10:25,800
dash o to set up this specifically

227
00:10:25,800 --> 00:10:28,140
output format to analyze and to send

228
00:10:28,140 --> 00:10:30,899
those informations to directly to the

229
00:10:30,899 --> 00:10:31,800
um

230
00:10:31,800 --> 00:10:33,600
as from our Cube It's very interesting

231
00:10:33,600 --> 00:10:36,000
to use not only that but you can set for

232
00:10:36,000 --> 00:10:39,240
example Dash a dash e for example if you

233
00:10:39,240 --> 00:10:41,399
if you'd like to use in uh for a

234
00:10:41,399 --> 00:10:44,100
pipeline okay so to see specifically if

235
00:10:44,100 --> 00:10:46,260
your code is vulnerable so if you

236
00:10:46,260 --> 00:10:48,959
receive this specifically return it to

237
00:10:48,959 --> 00:10:51,899
the code for example if the auto stack

238
00:10:51,899 --> 00:10:54,600
finds semi-vulnerability so you receive

239
00:10:54,600 --> 00:10:57,540
this code one and you need to set this

240
00:10:57,540 --> 00:11:00,899
dash eight okay so nice so let me

241
00:11:00,899 --> 00:11:03,480
execute our SEC itself here in my local

242
00:11:03,480 --> 00:11:06,959
machine I could put in for example uh

243
00:11:06,959 --> 00:11:10,680
Dash p is a path if you'd like to set

244
00:11:10,680 --> 00:11:13,860
and specifically repository on a

245
00:11:13,860 --> 00:11:16,019
specifically project but in this case I

246
00:11:16,019 --> 00:11:18,420
will run in this specific repository as

247
00:11:18,420 --> 00:11:21,120
you can see here this is the path okay

248
00:11:21,120 --> 00:11:23,880
that is a good or sex so can I proceed

249
00:11:23,880 --> 00:11:26,940
and yes and that's it Okay click enter

250
00:11:26,940 --> 00:11:29,100
and that's it I'll be starting the

251
00:11:29,100 --> 00:11:31,380
scanning code another possibility to

252
00:11:31,380 --> 00:11:34,860
using our per sec during this scan here

253
00:11:34,860 --> 00:11:37,860
I will show you is to using

254
00:11:37,860 --> 00:11:43,500
on cln on IDE or vs code has

255
00:11:43,500 --> 00:11:44,160
um

256
00:11:44,160 --> 00:11:46,440
Gilmore mentioned that so let me go to

257
00:11:46,440 --> 00:11:51,300
the root here my folder contour and or

258
00:11:51,300 --> 00:11:54,899
set or I think it's demo yeah demo and

259
00:11:54,899 --> 00:11:58,620
our SEC yeah I will show here it's code

260
00:11:58,620 --> 00:12:02,639
I will open here my PS code to you and

261
00:12:02,639 --> 00:12:04,740
let's see here

262
00:12:04,740 --> 00:12:08,220
okay so another possibility is to using

263
00:12:08,220 --> 00:12:11,519
our SEC has an extension like a plugin

264
00:12:11,519 --> 00:12:14,880
okay so basically you go to here in next

265
00:12:14,880 --> 00:12:18,959
station right and you can put in here or

266
00:12:18,959 --> 00:12:19,920
sec

267
00:12:19,920 --> 00:12:22,740
simple like this and if you see we have

268
00:12:22,740 --> 00:12:25,740
here the specific extension to use in

269
00:12:25,740 --> 00:12:27,540
here so basically you need to install

270
00:12:27,540 --> 00:12:29,579
and that's it you can use in here like

271
00:12:29,579 --> 00:12:32,339
as you can see here okay our circuits

272
00:12:32,339 --> 00:12:35,639
here in my vs code and after that I have

273
00:12:35,639 --> 00:12:39,120
here the same projects the same folders

274
00:12:39,120 --> 00:12:42,180
just click in here and you can click in

275
00:12:42,180 --> 00:12:44,760
and start

276
00:12:44,760 --> 00:12:48,240
is cutting the same action that you do

277
00:12:48,240 --> 00:12:50,700
that I'm doing actually in the CLI here

278
00:12:50,700 --> 00:12:53,160
as you can see and I have a return here

279
00:12:53,160 --> 00:12:56,459
in the result I will execute here on

280
00:12:56,459 --> 00:12:59,639
ID on vs code okay so we're starting

281
00:12:59,639 --> 00:13:02,220
here our SEC started to analyze our code

282
00:13:02,220 --> 00:13:05,100
so if you see here our SEC is working

283
00:13:05,100 --> 00:13:08,279
now okay so let me return here just to

284
00:13:08,279 --> 00:13:10,320
explaining about the semi-specifically

285
00:13:10,320 --> 00:13:13,620
results about our SEC so if you see here

286
00:13:13,620 --> 00:13:16,320
many results about this vulnerable codes

287
00:13:16,320 --> 00:13:18,180
and different projects that I have here

288
00:13:18,180 --> 00:13:20,940
so if you see here for example let me

289
00:13:20,940 --> 00:13:23,220
explain two simple things

290
00:13:23,220 --> 00:13:26,880
basically this one of those uh line of

291
00:13:26,880 --> 00:13:28,620
codes vulnerable for example the

292
00:13:28,620 --> 00:13:30,839
language is Javascript severity is high

293
00:13:30,839 --> 00:13:32,940
take a look at this very interesting

294
00:13:32,940 --> 00:13:35,100
line and column that you can find the

295
00:13:35,100 --> 00:13:36,839
code so if you're a developer so it's

296
00:13:36,839 --> 00:13:38,700
very interesting because and now you

297
00:13:38,700 --> 00:13:40,500
know where is the place that you can

298
00:13:40,500 --> 00:13:43,500
find the vulnerability and here is very

299
00:13:43,500 --> 00:13:45,420
interesting for my perspective because

300
00:13:45,420 --> 00:13:47,519
you have the security tools working to

301
00:13:47,519 --> 00:13:49,440
identify that so as you can see here

302
00:13:49,440 --> 00:13:51,899
this Auto SEC engine not only that but

303
00:13:51,899 --> 00:13:54,779
you can if you want you can create this

304
00:13:54,779 --> 00:13:57,120
is specifically aging if you have a

305
00:13:57,120 --> 00:13:58,740
specifically programming language you

306
00:13:58,740 --> 00:14:01,380
can you know create a request you can

307
00:14:01,380 --> 00:14:03,959
working for this specifically or SEC

308
00:14:03,959 --> 00:14:06,420
engine or my perspective it's very very

309
00:14:06,420 --> 00:14:08,279
interesting so here it's another

310
00:14:08,279 --> 00:14:10,440
interesting point about the confidence

311
00:14:10,440 --> 00:14:12,959
so how it's uh it's based on those three

312
00:14:12,959 --> 00:14:14,699
or four pillars of the cyber security

313
00:14:14,699 --> 00:14:18,360
information and here is the file exactly

314
00:14:18,360 --> 00:14:20,820
file that we can find the vulnerability

315
00:14:20,820 --> 00:14:24,060
in this case if you see here this is the

316
00:14:24,060 --> 00:14:25,019
main

317
00:14:25,019 --> 00:14:27,779
project remember that so home tour demo

318
00:14:27,779 --> 00:14:29,279
and our SEC demo this is the main

319
00:14:29,279 --> 00:14:31,740
project and here you can see many

320
00:14:31,740 --> 00:14:36,000
folders that the tools analyzing all

321
00:14:36,000 --> 00:14:37,380
those codes you have inside of your

322
00:14:37,380 --> 00:14:40,320
project okay and here as you can see the

323
00:14:40,320 --> 00:14:42,959
type is vulnerability and not only that

324
00:14:42,959 --> 00:14:45,240
but if you are a developer and if you

325
00:14:45,240 --> 00:14:47,699
don't know how the security works you

326
00:14:47,699 --> 00:14:50,459
have here the information about a

327
00:14:50,459 --> 00:14:53,760
specifically cwe and it means the common

328
00:14:53,760 --> 00:14:56,519
weakness enumeration so a specific

329
00:14:56,519 --> 00:14:59,399
number of the vulnerability uh related

330
00:14:59,399 --> 00:15:01,380
to specific this

331
00:15:01,380 --> 00:15:05,040
a flow or this vulnerability okay so you

332
00:15:05,040 --> 00:15:07,260
can click here basically copy or open

333
00:15:07,260 --> 00:15:09,180
linking in a web page and you can read

334
00:15:09,180 --> 00:15:11,820
more about that so if you return here in

335
00:15:11,820 --> 00:15:15,000
our IDE you can see here you can find

336
00:15:15,000 --> 00:15:18,120
this similar result right or actually

337
00:15:18,120 --> 00:15:21,180
similar but the same so if you see here

338
00:15:21,180 --> 00:15:23,760
so JavaScript it's another vulnerability

339
00:15:23,760 --> 00:15:27,360
using rsac engine and if you see here

340
00:15:27,360 --> 00:15:30,720
here is the line vulnerable and this

341
00:15:30,720 --> 00:15:33,060
code so if you're a developer again you

342
00:15:33,060 --> 00:15:35,220
can manage this you can improve that you

343
00:15:35,220 --> 00:15:38,880
can you know make this a update of your

344
00:15:38,880 --> 00:15:41,940
code not only that but if you see here

345
00:15:41,940 --> 00:15:44,519
take a look other interesting thing so

346
00:15:44,519 --> 00:15:47,519
if you see here it's the same case in a

347
00:15:47,519 --> 00:15:52,160
CLI you can see here the go sec

348
00:15:52,940 --> 00:15:56,279
yeah so it's another aging so because of

349
00:15:56,279 --> 00:15:58,139
that it's a a different framework

350
00:15:58,139 --> 00:16:01,199
exactly take a look at this not only are

351
00:16:01,199 --> 00:16:03,060
SEC engine but you have more than one

352
00:16:03,060 --> 00:16:05,160
engine inside of that because of this is

353
00:16:05,160 --> 00:16:07,680
so Fantastic Tools because you have many

354
00:16:07,680 --> 00:16:10,320
changes inside of the same platform and

355
00:16:10,320 --> 00:16:12,000
you can see these informations because

356
00:16:12,000 --> 00:16:15,000
of that it's pretty pretty cool nice so

357
00:16:15,000 --> 00:16:17,639
basically is this yes go Google please

358
00:16:17,639 --> 00:16:19,519
so in the beginning

359
00:16:19,519 --> 00:16:22,320
we've developed or SEC for a security

360
00:16:22,320 --> 00:16:26,639
tool but during the journey we

361
00:16:26,639 --> 00:16:29,040
discovered it's more important and the

362
00:16:29,040 --> 00:16:31,279
other guys developer a lot of engine

363
00:16:31,279 --> 00:16:34,920
it's very important and so beautiful in

364
00:16:34,920 --> 00:16:38,579
Giants and we create a composable

365
00:16:38,579 --> 00:16:42,120
software to plug and play a lot of

366
00:16:42,120 --> 00:16:45,620
engine for example or

367
00:16:45,620 --> 00:16:48,839
the sonar Cube and another one for

368
00:16:48,839 --> 00:16:51,240
example now we develop anything anything

369
00:16:51,240 --> 00:16:54,720
about called custodian for the cloud

370
00:16:54,720 --> 00:16:57,060
cloud

371
00:16:57,060 --> 00:16:59,820
it's not range but Cloud surface

372
00:16:59,820 --> 00:17:03,000
detection response the cloud surface but

373
00:17:03,000 --> 00:17:05,640
it's more important the the pores now

374
00:17:05,640 --> 00:17:08,459
it's a manager of a lot of engines a lot

375
00:17:08,459 --> 00:17:11,220
of forms to identify in your people

376
00:17:11,220 --> 00:17:13,319
store in your environment about the

377
00:17:13,319 --> 00:17:15,299
security Flags

378
00:17:15,299 --> 00:17:18,000
exactly exactly good point gamer because

379
00:17:18,000 --> 00:17:20,280
it's that's the the point because we

380
00:17:20,280 --> 00:17:23,280
have a different program language and so

381
00:17:23,280 --> 00:17:25,260
we need to improve that so and you can

382
00:17:25,260 --> 00:17:27,780
help us to improve that about this

383
00:17:27,780 --> 00:17:29,760
discipline to create more engines thrown

384
00:17:29,760 --> 00:17:32,640
or a sec and the last but not important

385
00:17:32,640 --> 00:17:35,220
not less important so as you can see

386
00:17:35,220 --> 00:17:37,620
here we have a possibility to working in

387
00:17:37,620 --> 00:17:40,440
a cicd pipeline okay so if you work for

388
00:17:40,440 --> 00:17:43,860
example uh as using GitHub actions for

389
00:17:43,860 --> 00:17:46,980
example so if you see here basically let

390
00:17:46,980 --> 00:17:49,799
me share with you here so you can

391
00:17:49,799 --> 00:17:52,140
specifically you you could set for

392
00:17:52,140 --> 00:17:54,840
example the security pipeline name uh

393
00:17:54,840 --> 00:17:56,100
using

394
00:17:56,100 --> 00:17:58,440
you know and it is it could you

395
00:17:58,440 --> 00:18:00,720
specifically job and to run basically

396
00:18:00,720 --> 00:18:03,000
they run automatically that you you set

397
00:18:03,000 --> 00:18:05,340
is the same command that I use in CLI if

398
00:18:05,340 --> 00:18:06,360
you remember

399
00:18:06,360 --> 00:18:08,700
calling the curl and after that

400
00:18:08,700 --> 00:18:11,820
executing our SEC Dash B is a path

401
00:18:11,820 --> 00:18:14,520
remember that about your project okay

402
00:18:14,520 --> 00:18:17,280
and after that Dash H remember when I

403
00:18:17,280 --> 00:18:20,400
explain about this specific flag so you

404
00:18:20,400 --> 00:18:23,039
put here in this case true so if your

405
00:18:23,039 --> 00:18:25,020
code is vulnerable You're creating a

406
00:18:25,020 --> 00:18:27,419
specifically uh block gating or

407
00:18:27,419 --> 00:18:30,960
specifically gating to block to analyze

408
00:18:30,960 --> 00:18:32,700
your code before to protein the

409
00:18:32,700 --> 00:18:34,980
production so not only GitHub actions

410
00:18:34,980 --> 00:18:37,020
but you can use it for example AWS code

411
00:18:37,020 --> 00:18:41,700
build uh Circle CI Jenkins and Azure

412
00:18:41,700 --> 00:18:45,419
devops Pipeline and the web application

413
00:18:45,419 --> 00:18:48,419
has gilmar explained in the beginning so

414
00:18:48,419 --> 00:18:51,179
that's very interesting for uh to manage

415
00:18:51,179 --> 00:18:53,059
it for example difference

416
00:18:53,059 --> 00:18:55,200
vulnerabilities and difference for

417
00:18:55,200 --> 00:18:56,640
different teams for example you have

418
00:18:56,640 --> 00:18:58,919
different teams squads trips and depend

419
00:18:58,919 --> 00:19:01,140
of name your no matter the name that you

420
00:19:01,140 --> 00:19:04,080
use but you can see for example for each

421
00:19:04,080 --> 00:19:06,780
developer what kind of program language

422
00:19:06,780 --> 00:19:10,020
is more vulnerable which projects more

423
00:19:10,020 --> 00:19:12,299
vulnerable and you can manage a data for

424
00:19:12,299 --> 00:19:14,520
example so you can set this in a

425
00:19:14,520 --> 00:19:16,679
different way you can see here for

426
00:19:16,679 --> 00:19:18,900
example for total developers

427
00:19:18,900 --> 00:19:21,000
repositories and all vulnerabilities

428
00:19:21,000 --> 00:19:22,980
programming language as I mentioned it

429
00:19:22,980 --> 00:19:27,080
it's very very nice for in management

430
00:19:27,080 --> 00:19:30,539
in my opinion the web is a perfect tool

431
00:19:30,539 --> 00:19:34,260
for the ctOS and scissors because we

432
00:19:34,260 --> 00:19:38,039
have a lot of information and it after

433
00:19:38,039 --> 00:19:40,620
this information it's possible to start

434
00:19:40,620 --> 00:19:43,340
a better threat modeling and understand

435
00:19:43,340 --> 00:19:47,640
you need to make some training with your

436
00:19:47,640 --> 00:19:50,580
devs or need change the language change

437
00:19:50,580 --> 00:19:52,160
the version because

438
00:19:52,160 --> 00:19:55,260
it's possible we use the version and the

439
00:19:55,260 --> 00:19:57,960
versions compromised it's very important

440
00:19:57,960 --> 00:20:01,260
to analyze the numbers understand uh

441
00:20:01,260 --> 00:20:03,480
your case and take the decision the

442
00:20:03,480 --> 00:20:07,140
better decision it's it's a a for help

443
00:20:07,140 --> 00:20:10,200
your tea exactly exactly I completely

444
00:20:10,200 --> 00:20:13,320
agree and and the same consulting

445
00:20:13,320 --> 00:20:15,360
services that I'm I've been working for

446
00:20:15,360 --> 00:20:16,320
the last

447
00:20:16,320 --> 00:20:19,500
years and I'm using this specifically

448
00:20:19,500 --> 00:20:23,360
feature for managing all those things to

449
00:20:23,360 --> 00:20:25,919
specifically to make a training to the

450
00:20:25,919 --> 00:20:28,260
developers it's very useful very very

451
00:20:28,260 --> 00:20:31,440
useful so basically I think it's this so

452
00:20:31,440 --> 00:20:34,980
again so we have here at the GitHub so

453
00:20:34,980 --> 00:20:39,840
if you want to you know go to GitHub you

454
00:20:39,840 --> 00:20:42,480
know setting your pull requests so we

455
00:20:42,480 --> 00:20:46,620
work a lot in this project you know and

456
00:20:46,620 --> 00:20:49,200
for my side it's and that's it so if you

457
00:20:49,200 --> 00:20:50,940
have any questions

458
00:20:50,940 --> 00:20:53,880
Umar and the people we are here to

459
00:20:53,880 --> 00:20:56,480
answer here

460
00:20:56,880 --> 00:20:59,820
thank you guys thank you for your time

461
00:20:59,820 --> 00:21:01,740
thank you for the presentation thank you

462
00:21:01,740 --> 00:21:05,700
flip for the help and the see you the

463
00:21:05,700 --> 00:21:06,480
next

464
00:21:06,480 --> 00:21:08,580
presentation bye bye guys

465
00:21:08,580 --> 00:21:11,418
see you bye

