1
00:00:03,030 --> 00:00:44,200
[Music]

2
00:00:54,140 --> 00:00:57,340
[Music]

3
00:01:05,180 --> 00:01:44,349
[Music]

4
00:01:48,700 --> 00:01:57,810
[Music]

5
00:02:00,780 --> 00:02:03,959
[Music]

6
00:02:12,160 --> 00:02:15,160
so

7
00:02:16,900 --> 00:02:45,080
[Music]

8
00:02:50,260 --> 00:02:55,250
[Music]

9
00:02:56,480 --> 00:02:58,510
so

10
00:02:58,510 --> 00:03:08,870
[Music]

11
00:03:12,070 --> 00:03:25,340
[Music]

12
00:03:28,350 --> 00:03:31,690
[Music]

13
00:03:39,430 --> 00:03:50,799
[Music]

14
00:03:50,799 --> 00:03:53,799
so

15
00:03:57,000 --> 00:04:18,999
[Music]

16
00:04:21,130 --> 00:04:34,639
[Music]

17
00:04:35,280 --> 00:04:38,110
so

18
00:04:38,110 --> 00:04:46,400
[Music]

19
00:04:46,400 --> 00:04:48,380
so

20
00:04:48,380 --> 00:05:31,350
[Music]

21
00:05:31,350 --> 00:05:31,730
[Applause]

22
00:05:31,730 --> 00:05:39,480
[Music]

23
00:05:48,320 --> 00:05:55,930
[Music]

24
00:05:58,080 --> 00:06:00,580
so

25
00:06:00,580 --> 00:06:20,380
[Music]

26
00:06:22,860 --> 00:07:02,989
[Music]

27
00:07:05,440 --> 00:07:07,010
so

28
00:07:07,010 --> 00:07:19,120
[Music]

29
00:07:19,120 --> 00:07:22,120
so

30
00:07:22,640 --> 00:08:22,329
[Music]

31
00:08:26,520 --> 00:10:24,799
[Music]

32
00:10:39,390 --> 00:10:47,419
[Music]

33
00:10:51,210 --> 00:10:57,339
[Music]

34
00:11:01,170 --> 00:11:04,309
[Music]

35
00:11:08,970 --> 00:11:12,269
[Music]

36
00:11:15,140 --> 00:11:21,200
[Music]

37
00:11:21,200 --> 00:11:24,120
so

38
00:11:24,120 --> 00:11:40,419
[Music]

39
00:11:42,550 --> 00:12:07,679
[Music]

40
00:12:12,080 --> 00:12:17,260
[Music]

41
00:12:21,240 --> 00:12:24,350
[Music]

42
00:12:26,740 --> 00:12:30,799
[Music]

43
00:12:41,800 --> 00:13:02,120
[Music]

44
00:13:05,480 --> 00:13:12,980
[Music]

45
00:13:20,410 --> 00:13:25,490
[Music]

46
00:13:27,850 --> 00:13:30,950
[Music]

47
00:13:33,140 --> 00:13:44,569
[Music]

48
00:13:51,710 --> 00:14:03,119
[Music]

49
00:14:06,390 --> 00:14:09,490
[Music]

50
00:14:13,400 --> 00:14:16,480
[Music]

51
00:14:42,940 --> 00:14:46,009
[Music]

52
00:14:51,270 --> 00:14:56,519
[Music]

53
00:15:06,230 --> 00:15:15,349
[Music]

54
00:15:35,150 --> 00:15:53,098
[Music]

55
00:16:00,740 --> 00:16:04,090
[Music]

56
00:16:30,850 --> 00:16:37,580
[Music]

57
00:16:39,780 --> 00:16:45,470
[Music]

58
00:16:52,170 --> 00:17:09,749
[Music]

59
00:17:16,130 --> 00:17:37,540
[Music]

60
00:17:48,200 --> 00:17:51,380
[Music]

61
00:17:58,170 --> 00:18:01,479
[Music]

62
00:18:10,650 --> 00:18:20,289
[Music]

63
00:18:43,780 --> 00:18:46,950
[Music]

64
00:18:54,020 --> 00:19:46,599
[Music]

65
00:20:15,560 --> 00:20:18,760
[Music]

66
00:20:25,250 --> 00:20:53,200
[Music]

67
00:20:53,200 --> 00:20:55,720
so

68
00:20:55,720 --> 00:21:10,540
[Music]

69
00:21:15,940 --> 00:21:19,150
[Music]

70
00:21:27,120 --> 00:21:30,120
um

71
00:21:32,640 --> 00:21:38,289
[Music]

72
00:21:44,799 --> 00:21:47,799
bye

73
00:22:01,840 --> 00:22:04,840
so

74
00:22:15,770 --> 00:22:35,440
[Music]

75
00:22:35,440 --> 00:22:38,440
uh

76
00:22:44,650 --> 00:22:48,000
[Music]

77
00:22:48,000 --> 00:22:51,000
so

78
00:23:34,840 --> 00:23:38,720
[Music]

79
00:23:38,720 --> 00:23:42,559
hello everyone and welcome to

80
00:23:42,559 --> 00:23:46,320
the second day of the uh live ctf

81
00:23:46,320 --> 00:23:48,400
uh sorry for the delay we've had some

82
00:23:48,400 --> 00:23:49,520
technical

83
00:23:49,520 --> 00:23:50,799
difficulties

84
00:23:50,799 --> 00:23:52,559
and i think we're just adjusting some

85
00:23:52,559 --> 00:23:53,840
sound volumes

86
00:23:53,840 --> 00:23:54,640
here

87
00:23:54,640 --> 00:23:57,919
uh as you might see on the screen uh i'm

88
00:23:57,919 --> 00:24:00,320
not with jordan here today because

89
00:24:00,320 --> 00:24:02,080
we have instead

90
00:24:02,080 --> 00:24:04,960
uh live overflow as a commentator uh

91
00:24:04,960 --> 00:24:06,640
calling in remotely

92
00:24:06,640 --> 00:24:07,679
hello

93
00:24:07,679 --> 00:24:09,279
hello thanks for having me coming in

94
00:24:09,279 --> 00:24:11,520
here from germany unfortunately i

95
00:24:11,520 --> 00:24:13,520
couldn't be there but it looks amazing

96
00:24:13,520 --> 00:24:15,039
what you guys did

97
00:24:15,039 --> 00:24:15,919
nice

98
00:24:15,919 --> 00:24:18,080
yeah really really fun to have you here

99
00:24:18,080 --> 00:24:19,840
on the stream at least

100
00:24:19,840 --> 00:24:21,919
so uh it's going to be super nice we

101
00:24:21,919 --> 00:24:24,159
have a full packed schedule today with a

102
00:24:24,159 --> 00:24:25,600
lot of matches we will be talking about

103
00:24:25,600 --> 00:24:27,679
that more throughout the broadcast but

104
00:24:27,679 --> 00:24:31,120
we need to get uh right into it so

105
00:24:31,120 --> 00:24:33,679
uh as soon as i get like just another

106
00:24:33,679 --> 00:24:36,799
okay from my production yeah uh we are

107
00:24:36,799 --> 00:24:38,799
uh ready to go so

108
00:24:38,799 --> 00:24:40,640
i'm just gonna see

109
00:24:40,640 --> 00:24:42,880
yeah uh okay

110
00:24:42,880 --> 00:24:45,760
so uh first live ctf match of the day

111
00:24:45,760 --> 00:24:47,279
start the countdown

112
00:24:47,279 --> 00:24:48,240
five

113
00:24:48,240 --> 00:24:50,080
four three

114
00:24:50,080 --> 00:24:52,000
two two one

115
00:24:52,000 --> 00:24:52,960
go

116
00:24:52,960 --> 00:24:55,440
let's go i might be a bit biased in this

117
00:24:55,440 --> 00:24:56,960
match do you know why

118
00:24:56,960 --> 00:24:59,440
oh yeah so uh we have uh the match up

119
00:24:59,440 --> 00:25:02,880
right sour cloud versus dice guests

120
00:25:02,880 --> 00:25:04,480
sauron cloud being the

121
00:25:04,480 --> 00:25:07,679
german mix team which you have been

122
00:25:07,679 --> 00:25:09,760
uh participating in right

123
00:25:09,760 --> 00:25:12,000
yeah i played with tower club before as

124
00:25:12,000 --> 00:25:13,840
you said big german team so lots of

125
00:25:13,840 --> 00:25:15,919
people i know in there so so i might be

126
00:25:15,919 --> 00:25:17,760
slightly biased but of course i'm also

127
00:25:17,760 --> 00:25:19,679
rooting for dice guests who are also

128
00:25:19,679 --> 00:25:21,600
incredibly skilled

129
00:25:21,600 --> 00:25:24,720
nice yeah it's really cool so this uh

130
00:25:24,720 --> 00:25:26,480
challenge that they are

131
00:25:26,480 --> 00:25:29,600
getting it's uh

132
00:25:29,600 --> 00:25:31,760
the

133
00:25:31,760 --> 00:25:32,799
sorry

134
00:25:32,799 --> 00:25:37,120
um so it's again opponentable x86

135
00:25:37,120 --> 00:25:38,240
nothing

136
00:25:38,240 --> 00:25:40,480
nothing shocking there

137
00:25:40,480 --> 00:25:43,440
we can see the two teams opening up uh

138
00:25:43,440 --> 00:25:45,200
the binary in uh

139
00:25:45,200 --> 00:25:47,600
some uh reverse engineering programs we

140
00:25:47,600 --> 00:25:48,640
have

141
00:25:48,640 --> 00:25:51,120
uh binary ninja and we have guidra so a

142
00:25:51,120 --> 00:25:52,720
little bit of a mix up there

143
00:25:52,720 --> 00:25:55,279
i just wanted to say i hope uh jordan

144
00:25:55,279 --> 00:25:57,679
appreciates that i believe this was the

145
00:25:57,679 --> 00:25:59,360
first time we see binary ninja and i

146
00:25:59,360 --> 00:26:01,200
want to say sauerkraut coming through

147
00:26:01,200 --> 00:26:04,159
here with jordan's wishes yeah

148
00:26:04,159 --> 00:26:05,679
creating a bit of that goodwill maybe

149
00:26:05,679 --> 00:26:07,919
that can translate into some good luck

150
00:26:07,919 --> 00:26:09,360
uh for the

151
00:26:09,360 --> 00:26:12,559
team yeah jordan should maybe uh

152
00:26:12,559 --> 00:26:15,520
slide them a hint

153
00:26:15,600 --> 00:26:17,919
yeah well we do we might slide teams uh

154
00:26:17,919 --> 00:26:20,240
hint uh well but in that case of course

155
00:26:20,240 --> 00:26:22,080
to both of them uh we got a question

156
00:26:22,080 --> 00:26:24,159
here if we can just up the volume of

157
00:26:24,159 --> 00:26:27,039
live overflow a little bit uh so yeah

158
00:26:27,039 --> 00:26:28,240
sorry there will be there might be like

159
00:26:28,240 --> 00:26:31,760
you know a few technical uh hitches uh

160
00:26:31,760 --> 00:26:33,919
uh throughout this this beginning of the

161
00:26:33,919 --> 00:26:36,559
stream but uh let's try to go to yeah so

162
00:26:36,559 --> 00:26:40,159
we are looking here at uh

163
00:26:40,159 --> 00:26:42,320
one of the teams sorry i'm just making

164
00:26:42,320 --> 00:26:43,039
sure

165
00:26:43,039 --> 00:26:45,039
what was the name of the challenge again

166
00:26:45,039 --> 00:26:47,600
yes uh we have

167
00:26:47,600 --> 00:26:50,480
uh fair enough is the

168
00:26:50,480 --> 00:26:53,919
uh name of the challenge and uh

169
00:26:53,919 --> 00:26:57,840
uh like spelled as like fairy enough so

170
00:26:57,840 --> 00:26:59,360
it's kind of like a

171
00:26:59,360 --> 00:27:02,080
magic brewing thing theme going on here

172
00:27:02,080 --> 00:27:04,880
you can see in the the compilation here

173
00:27:04,880 --> 00:27:07,200
in in kidra uh that there's some kind of

174
00:27:07,200 --> 00:27:09,440
menu you can stir to the left stir to

175
00:27:09,440 --> 00:27:11,919
the right and stuff uh so we'll see what

176
00:27:11,919 --> 00:27:13,840
that um

177
00:27:13,840 --> 00:27:15,440
translates into

178
00:27:15,440 --> 00:27:16,960
yeah and in case the people don't know

179
00:27:16,960 --> 00:27:18,880
these challenges are a little bit

180
00:27:18,880 --> 00:27:21,760
smaller they are not hardcore defcon ctf

181
00:27:21,760 --> 00:27:23,840
challenges to be solved in many many

182
00:27:23,840 --> 00:27:25,679
hours they are intended to be solved

183
00:27:25,679 --> 00:27:29,039
quickly so there's kind of just like one

184
00:27:29,039 --> 00:27:30,960
area it focuses on

185
00:27:30,960 --> 00:27:33,200
so is this challenge more reversing or

186
00:27:33,200 --> 00:27:36,240
more exploitation oriented what what

187
00:27:36,240 --> 00:27:38,559
what do the players expect

188
00:27:38,559 --> 00:27:42,320
yes so uh here this is again a ponable

189
00:27:42,320 --> 00:27:43,600
challenge so

190
00:27:43,600 --> 00:27:45,840
uh we can see here on uh sauron cloud

191
00:27:45,840 --> 00:27:47,600
sides if i'm not mistaken yeah sarah

192
00:27:47,600 --> 00:27:50,320
cloud here using uh binary as you said

193
00:27:50,320 --> 00:27:52,720
uh you can see that they are running the

194
00:27:52,720 --> 00:27:56,320
program in gdb with jeff to uh you know

195
00:27:56,320 --> 00:27:58,320
get some understanding of what's going

196
00:27:58,320 --> 00:27:59,600
on there

197
00:27:59,600 --> 00:28:01,600
there's some kind of uh

198
00:28:01,600 --> 00:28:04,480
array here with data being populated in

199
00:28:04,480 --> 00:28:05,360
this

200
00:28:05,360 --> 00:28:08,559
case seven of the switch uh case

201
00:28:08,559 --> 00:28:09,760
uh

202
00:28:09,760 --> 00:28:11,919
did they call it scratch or does the

203
00:28:11,919 --> 00:28:16,120
spider come with symbols

204
00:28:17,760 --> 00:28:20,320
uh you know oh yes uh sorry what did you

205
00:28:20,320 --> 00:28:22,159
say uh before

206
00:28:22,159 --> 00:28:25,039
as a sauer cloud uh named that that big

207
00:28:25,039 --> 00:28:26,799
array it seems a scratch i was just

208
00:28:26,799 --> 00:28:28,559
wondering if the battery comes with

209
00:28:28,559 --> 00:28:31,440
symbols or was that a decision oh yeah i

210
00:28:31,440 --> 00:28:35,200
think this one is stripped right or

211
00:28:35,200 --> 00:28:37,440
i'm not entirely sure i just want to

212
00:28:37,440 --> 00:28:40,960
point out in the corner uh of of

213
00:28:40,960 --> 00:28:42,720
sauerkraut's stream

214
00:28:42,720 --> 00:28:46,159
they have a a like speedrunner timer

215
00:28:46,159 --> 00:28:48,399
interface here i really uh uh like the

216
00:28:48,399 --> 00:28:50,000
small touch they've added you can see

217
00:28:50,000 --> 00:28:51,360
that i

218
00:28:51,360 --> 00:28:53,679
i actually you know i'm watching you

219
00:28:53,679 --> 00:28:56,240
right now over the internal uh stream

220
00:28:56,240 --> 00:28:58,320
here i thought that is a tool from you

221
00:28:58,320 --> 00:29:00,159
to keep track internally but you are

222
00:29:00,159 --> 00:29:02,320
right it's actually on their computer no

223
00:29:02,320 --> 00:29:04,720
no yeah it's a it's like a live split

224
00:29:04,720 --> 00:29:08,559
timer for a live ctf flag any percent

225
00:29:08,559 --> 00:29:11,520
uh yeah as a speedrunning fan i

226
00:29:11,520 --> 00:29:13,279
definitely uh you know appreciate those

227
00:29:13,279 --> 00:29:14,880
small little touches

228
00:29:14,880 --> 00:29:16,799
it took them 10 seconds for to open

229
00:29:16,799 --> 00:29:18,960
binary ninja um

230
00:29:18,960 --> 00:29:20,640
we should ask jordan if that's an

231
00:29:20,640 --> 00:29:23,440
acceptable time

232
00:29:23,440 --> 00:29:26,159
yeah and how much was uh you know uh how

233
00:29:26,159 --> 00:29:28,080
much was the program and how much was

234
00:29:28,080 --> 00:29:29,200
was them

235
00:29:29,200 --> 00:29:30,559
um

236
00:29:30,559 --> 00:29:33,279
but uh yeah as you said uh they're

237
00:29:33,279 --> 00:29:35,520
trying to look like they're it's like

238
00:29:35,520 --> 00:29:37,360
looking like they're trying to like name

239
00:29:37,360 --> 00:29:38,640
things a little bit they're trying to

240
00:29:38,640 --> 00:29:40,720
see what these seven options is in this

241
00:29:40,720 --> 00:29:43,840
menu actually kind of translate to um

242
00:29:43,840 --> 00:29:45,600
we're gonna switch over here to dice

243
00:29:45,600 --> 00:29:46,640
guesser

244
00:29:46,640 --> 00:29:49,760
uh to see them um

245
00:29:49,760 --> 00:29:51,679
starting to

246
00:29:51,679 --> 00:29:53,679
write a little bit of a solution script

247
00:29:53,679 --> 00:29:54,399
here

248
00:29:54,399 --> 00:29:56,399
um

249
00:29:56,399 --> 00:29:57,600
not

250
00:29:57,600 --> 00:29:59,279
you know

251
00:29:59,279 --> 00:30:02,799
not sure exactly what they they had a

252
00:30:02,799 --> 00:30:06,399
function there called create byte

253
00:30:06,399 --> 00:30:07,200
so

254
00:30:07,200 --> 00:30:09,840
they have something in store there for

255
00:30:09,840 --> 00:30:12,799
for uh you know starting the solution oh

256
00:30:12,799 --> 00:30:15,600
they're looking up uh uh b suits

257
00:30:15,600 --> 00:30:17,200
identity this is like there's something

258
00:30:17,200 --> 00:30:19,440
like a maths uh problem involved in this

259
00:30:19,440 --> 00:30:22,480
oh i i uh sorry is a math challenge

260
00:30:22,480 --> 00:30:24,399
well so this is the thing with this

261
00:30:24,399 --> 00:30:27,840
challenge right uh it's basically a uh

262
00:30:27,840 --> 00:30:30,480
shell coding challenge

263
00:30:30,480 --> 00:30:31,279
uh

264
00:30:31,279 --> 00:30:33,760
but they cannot just like input their

265
00:30:33,760 --> 00:30:35,679
their bytes uh you know however they

266
00:30:35,679 --> 00:30:36,799
want

267
00:30:36,799 --> 00:30:39,679
they have to create them by like

268
00:30:39,679 --> 00:30:41,919
incrementing and decrementing i think

269
00:30:41,919 --> 00:30:45,200
the idea is that you can only increment

270
00:30:45,200 --> 00:30:47,520
and decrement using like prime numbers

271
00:30:47,520 --> 00:30:48,880
so you have to like

272
00:30:48,880 --> 00:30:50,799
express your

273
00:30:50,799 --> 00:30:54,880
target value as a linear combination of

274
00:30:54,880 --> 00:30:56,720
prime numbers

275
00:30:56,720 --> 00:30:58,960
uh

276
00:30:59,679 --> 00:31:02,399
i think if i imagine the

277
00:31:02,399 --> 00:31:05,039
code like this in assembly like

278
00:31:05,039 --> 00:31:07,760
module math or whatever uh can look

279
00:31:07,760 --> 00:31:10,559
quite ugly so i'm um they didn't get the

280
00:31:10,559 --> 00:31:12,159
source code with this they had to uh

281
00:31:12,159 --> 00:31:13,919
reverse engineer obviously with binary

282
00:31:13,919 --> 00:31:17,600
ninja right yes uh that's that's correct

283
00:31:17,600 --> 00:31:20,080
and you said it's stripped so

284
00:31:20,080 --> 00:31:22,080
do you know how dice casser figured out

285
00:31:22,080 --> 00:31:23,919
that it's that or was it in the menu i

286
00:31:23,919 --> 00:31:26,240
didn't quite uh no no they i think they

287
00:31:26,240 --> 00:31:27,840
were looking at the different operations

288
00:31:27,840 --> 00:31:31,279
uh if so so um

289
00:31:31,279 --> 00:31:32,799
you can see

290
00:31:32,799 --> 00:31:34,399
them

291
00:31:34,399 --> 00:31:36,639
um

292
00:31:37,360 --> 00:31:39,279
yeah i'm just trying to follow here a

293
00:31:39,279 --> 00:31:41,200
little bit what they are trying to write

294
00:31:41,200 --> 00:31:43,120
in their function here they seem to be

295
00:31:43,120 --> 00:31:44,559
thinking a little bit hard so the

296
00:31:44,559 --> 00:31:47,760
importing random here which uh

297
00:31:47,760 --> 00:31:48,799
i

298
00:31:48,799 --> 00:31:52,399
am not entirely sure what's the idea of

299
00:31:52,399 --> 00:31:54,559
the comment says brute force law so

300
00:31:54,559 --> 00:31:56,799
maybe maybe maybe

301
00:31:56,799 --> 00:31:58,960
they are copying the check maybe that is

302
00:31:58,960 --> 00:32:00,640
also in the binary that's checking

303
00:32:00,640 --> 00:32:02,399
something instead of

304
00:32:02,399 --> 00:32:04,960
generating it they just yeah so these

305
00:32:04,960 --> 00:32:07,800
yeah so if we could switch over to um

306
00:32:07,800 --> 00:32:09,200
[Music]

307
00:32:09,200 --> 00:32:11,519
uh no i see there's some kind of uh

308
00:32:11,519 --> 00:32:12,960
you know discussion going on in the

309
00:32:12,960 --> 00:32:14,320
production booth so we are not switching

310
00:32:14,320 --> 00:32:16,559
over to cycle but i will tell you that

311
00:32:16,559 --> 00:32:18,080
source cloud is

312
00:32:18,080 --> 00:32:19,120
uh

313
00:32:19,120 --> 00:32:20,799
doing also creating some kind of

314
00:32:20,799 --> 00:32:22,720
function here where they're using like

315
00:32:22,720 --> 00:32:23,519
four

316
00:32:23,519 --> 00:32:25,039
or nested for loops or something like

317
00:32:25,039 --> 00:32:26,799
that so uh there are different

318
00:32:26,799 --> 00:32:28,960
approaches here one using uh

319
00:32:28,960 --> 00:32:30,880
randomization and one using anything

320
00:32:30,880 --> 00:32:34,080
like pure brute force um

321
00:32:34,080 --> 00:32:36,240
but um

322
00:32:36,240 --> 00:32:38,159
yeah so i think they're both kind of on

323
00:32:38,159 --> 00:32:41,880
to something here

324
00:32:43,120 --> 00:32:44,240
um

325
00:32:44,240 --> 00:32:47,200
so yes here we can see uh

326
00:32:47,200 --> 00:32:50,320
soundcloud again um and

327
00:32:50,320 --> 00:32:52,080
you can

328
00:32:52,080 --> 00:32:54,799
try to see there like the code

329
00:32:54,799 --> 00:32:55,679
um

330
00:32:55,679 --> 00:32:57,600
i think we have these options three four

331
00:32:57,600 --> 00:33:00,799
five and six in the

332
00:33:00,799 --> 00:33:02,799
in the menu where you can see that it's

333
00:33:02,799 --> 00:33:05,360
like adding and subtracting

334
00:33:05,360 --> 00:33:06,880
uh value i mean first it's some kind of

335
00:33:06,880 --> 00:33:08,880
offset in some array i think and then

336
00:33:08,880 --> 00:33:09,919
they're like adding and subtracting

337
00:33:09,919 --> 00:33:11,200
values there i think which is i think

338
00:33:11,200 --> 00:33:12,399
this whole thing where you're adding and

339
00:33:12,399 --> 00:33:14,480
subtracting prime numbers to your shell

340
00:33:14,480 --> 00:33:15,519
code

341
00:33:15,519 --> 00:33:17,360
as as somebody who is not that

342
00:33:17,360 --> 00:33:19,919
experienced with math i mean the menu

343
00:33:19,919 --> 00:33:21,600
and the description itself of the

344
00:33:21,600 --> 00:33:24,399
challenge doesn't really give away this

345
00:33:24,399 --> 00:33:26,399
math operation behind it so being able

346
00:33:26,399 --> 00:33:28,480
to see that quickly in the assembly code

347
00:33:28,480 --> 00:33:30,399
is really impressive to me

348
00:33:30,399 --> 00:33:32,480
i'm not sure if i i

349
00:33:32,480 --> 00:33:34,240
would have realized that it's like some

350
00:33:34,240 --> 00:33:37,120
math going on there that um and and what

351
00:33:37,120 --> 00:33:39,120
kind of uh yes

352
00:33:39,120 --> 00:33:41,440
yeah the fact that uh we saw the correct

353
00:33:41,440 --> 00:33:43,440
keyword being googled by one of the uh

354
00:33:43,440 --> 00:33:46,159
dice caster uh players is uh

355
00:33:46,159 --> 00:33:47,919
uh pretty nice

356
00:33:47,919 --> 00:33:50,480
to say i think um and uh but yeah it's

357
00:33:50,480 --> 00:33:51,279
like

358
00:33:51,279 --> 00:33:53,440
some of these uh ctf challenges you know

359
00:33:53,440 --> 00:33:55,679
like some sometimes the there are a

360
00:33:55,679 --> 00:33:57,279
little bit of like curveballs thrown in

361
00:33:57,279 --> 00:33:58,320
like

362
00:33:58,320 --> 00:33:59,919
problems from other

363
00:33:59,919 --> 00:34:02,480
domains we saw like a sudoku challenge

364
00:34:02,480 --> 00:34:03,279
uh

365
00:34:03,279 --> 00:34:04,720
yesterday

366
00:34:04,720 --> 00:34:06,320
a little bit like a maps problem today

367
00:34:06,320 --> 00:34:07,279
as well

368
00:34:07,279 --> 00:34:08,480
um

369
00:34:08,480 --> 00:34:11,119
but here you can see sorry yes

370
00:34:11,119 --> 00:34:12,879
what do you think from the difficulty

371
00:34:12,879 --> 00:34:15,199
level the last challenge yesterday

372
00:34:15,199 --> 00:34:18,079
took a lot of time um before that were

373
00:34:18,079 --> 00:34:19,918
faster what do you where do you expect

374
00:34:19,918 --> 00:34:21,679
this to be do you expect them to need a

375
00:34:21,679 --> 00:34:23,599
hint uh for this one or do you think

376
00:34:23,599 --> 00:34:25,359
they are on a good path so we tried uh

377
00:34:25,359 --> 00:34:27,199
yesterday we worked a lot like yesterday

378
00:34:27,199 --> 00:34:28,800
we worked a lot on like calibrating you

379
00:34:28,800 --> 00:34:30,239
know difficulties for the challenges

380
00:34:30,239 --> 00:34:32,000
based on you know the first four matches

381
00:34:32,000 --> 00:34:33,040
that we did

382
00:34:33,040 --> 00:34:34,560
um i think

383
00:34:34,560 --> 00:34:37,918
i would say this one is uh

384
00:34:37,918 --> 00:34:39,280
it's probably easier than the most

385
00:34:39,280 --> 00:34:40,560
difficult one yesterday but it's

386
00:34:40,560 --> 00:34:42,000
probably more difficult than the easiest

387
00:34:42,000 --> 00:34:43,679
one yesterday it's my

388
00:34:43,679 --> 00:34:46,079
slight guess here uh we'll see how that

389
00:34:46,079 --> 00:34:49,040
turns out but you can see here this uh

390
00:34:49,040 --> 00:34:52,159
loop that i uh mentioned uh

391
00:34:52,159 --> 00:34:53,839
uh yes but we're going over to dice

392
00:34:53,839 --> 00:34:56,480
guess yes sir oh and they are looking up

393
00:34:56,480 --> 00:34:56,850
some

394
00:34:56,850 --> 00:34:58,000
[Music]

395
00:34:58,000 --> 00:35:00,560
like algorithms here on google they look

396
00:35:00,560 --> 00:35:02,960
looking at linear combinations mod n so

397
00:35:02,960 --> 00:35:05,920
here we get into the so they understand

398
00:35:05,920 --> 00:35:07,200
in what like

399
00:35:07,200 --> 00:35:08,960
uh what kind of math problem you we have

400
00:35:08,960 --> 00:35:11,440
reduced this still too

401
00:35:11,440 --> 00:35:12,880
to be completely honest with you i would

402
00:35:12,880 --> 00:35:14,800
have already completely lost i would be

403
00:35:14,800 --> 00:35:16,960
on the failing side of this table that

404
00:35:16,960 --> 00:35:18,160
would not be a good choice for

405
00:35:18,160 --> 00:35:20,160
sauerkraut to sit there right now well

406
00:35:20,160 --> 00:35:21,599
it's good then that we are in the

407
00:35:21,599 --> 00:35:23,520
commentary booth and they are uh playing

408
00:35:23,520 --> 00:35:24,720
right

409
00:35:24,720 --> 00:35:26,320
right i chickened out and stayed in

410
00:35:26,320 --> 00:35:30,320
berlin while the team traveled oh yeah

411
00:35:30,320 --> 00:35:31,760
so we can see here the function they

412
00:35:31,760 --> 00:35:33,119
have written here you have this create

413
00:35:33,119 --> 00:35:34,800
byte and they

414
00:35:34,800 --> 00:35:38,160
create a random integer

415
00:35:38,160 --> 00:35:40,480
and oh no they are selecting a random

416
00:35:40,480 --> 00:35:43,680
integer among those four integers

417
00:35:43,680 --> 00:35:46,240
and then they are appending that to a

418
00:35:46,240 --> 00:35:47,839
list

419
00:35:47,839 --> 00:35:49,359
and then

420
00:35:49,359 --> 00:35:52,880
uh oh okay so basically uh so you can

421
00:35:52,880 --> 00:35:55,200
your values that you are

422
00:35:55,200 --> 00:35:57,040
inputting into the shell code you have

423
00:35:57,040 --> 00:36:01,280
these three values 16 72 15 and 253

424
00:36:01,280 --> 00:36:03,680
so you can i think add

425
00:36:03,680 --> 00:36:05,520
any of those values

426
00:36:05,520 --> 00:36:08,160
uh and then you need that to get to your

427
00:36:08,160 --> 00:36:10,320
destination value so what dice kisser is

428
00:36:10,320 --> 00:36:11,839
doing is that they are just looking at

429
00:36:11,839 --> 00:36:14,800
their target and then just randomly uh

430
00:36:14,800 --> 00:36:17,200
picking uh these four values to add to

431
00:36:17,200 --> 00:36:19,200
it and then checking if they have

432
00:36:19,200 --> 00:36:21,839
reached the target so this might well it

433
00:36:21,839 --> 00:36:24,079
will probably not yield the

434
00:36:24,079 --> 00:36:26,640
most efficient way to get your target

435
00:36:26,640 --> 00:36:28,480
value but hopefully it will get you to

436
00:36:28,480 --> 00:36:29,839
the target value within a reasonable

437
00:36:29,839 --> 00:36:31,200
amount of time

438
00:36:31,200 --> 00:36:32,160
um

439
00:36:32,160 --> 00:36:33,040
yeah

440
00:36:33,040 --> 00:36:36,800
and and sorry and is it then how is the

441
00:36:36,800 --> 00:36:39,040
shell code then constructed is it then

442
00:36:39,040 --> 00:36:41,119
they have to go to like a certain target

443
00:36:41,119 --> 00:36:43,119
value that is then accepted and move to

444
00:36:43,119 --> 00:36:44,880
the next one and then slowly construct

445
00:36:44,880 --> 00:36:47,200
shell code is it constraining the shell

446
00:36:47,200 --> 00:36:49,359
code no this is yes this is this is the

447
00:36:49,359 --> 00:36:52,800
way you input your uh shell code so like

448
00:36:52,800 --> 00:36:55,119
i guess you start with like an array of

449
00:36:55,119 --> 00:36:57,359
all zeroes or something like this like

450
00:36:57,359 --> 00:36:58,880
you have some some starting point i'm

451
00:36:58,880 --> 00:37:01,200
not completely sure about that part but

452
00:37:01,200 --> 00:37:03,440
then you can like bite by bite modify

453
00:37:03,440 --> 00:37:06,480
those values using these uh rules

454
00:37:06,480 --> 00:37:07,359
uh

455
00:37:07,359 --> 00:37:09,359
to like modify the values in your array

456
00:37:09,359 --> 00:37:10,560
and then you can have this thing

457
00:37:10,560 --> 00:37:12,880
executed uh so this is like how you're

458
00:37:12,880 --> 00:37:14,960
brewing your magic potion here right

459
00:37:14,960 --> 00:37:17,040
you're stirring

460
00:37:17,040 --> 00:37:19,040
yeah so you're brewing the magic potion

461
00:37:19,040 --> 00:37:21,119
by adding these prime numbers and then

462
00:37:21,119 --> 00:37:22,720
at the end i guess you're consuming your

463
00:37:22,720 --> 00:37:24,640
magic potion or something and we can see

464
00:37:24,640 --> 00:37:28,240
here uh the code for for uh cyber cloud

465
00:37:28,240 --> 00:37:31,440
uh they're using uh c3 uh constraint

466
00:37:31,440 --> 00:37:35,119
solver a big i'm a big fan um do you use

467
00:37:35,119 --> 00:37:37,200
uh do you see three a lot

468
00:37:37,200 --> 00:37:39,200
uh yeah whenever i have something like

469
00:37:39,200 --> 00:37:41,520
this where i would have to solve some

470
00:37:41,520 --> 00:37:44,160
equation which might be very easy to

471
00:37:44,160 --> 00:37:46,640
solve but i can't do it so i try to use

472
00:37:46,640 --> 00:37:49,040
set three and hopefully it's a it's a

473
00:37:49,040 --> 00:37:52,000
formula set three can handle so yeah

474
00:37:52,000 --> 00:37:53,920
if i ever face a challenge like this

475
00:37:53,920 --> 00:37:55,440
that three is the

476
00:37:55,440 --> 00:37:57,280
tool of choice for me

477
00:37:57,280 --> 00:37:58,480
nice

478
00:37:58,480 --> 00:38:00,640
um we can also is it is this a problem

479
00:38:00,640 --> 00:38:03,280
that said three can solve uh or is this

480
00:38:03,280 --> 00:38:04,880
um

481
00:38:04,880 --> 00:38:07,680
i might struggle with i think

482
00:38:07,680 --> 00:38:09,040
it's

483
00:38:09,040 --> 00:38:11,040
probably not

484
00:38:11,040 --> 00:38:13,200
well suited like

485
00:38:13,200 --> 00:38:15,359
maybe the search space is like small

486
00:38:15,359 --> 00:38:18,960
enough that it can handle it but uh

487
00:38:18,960 --> 00:38:22,240
i'm not sure that no wait this is a

488
00:38:22,240 --> 00:38:23,380
completely

489
00:38:23,380 --> 00:38:24,720
[Music]

490
00:38:24,720 --> 00:38:27,359
yeah it's probably should be fine uh i'm

491
00:38:27,359 --> 00:38:28,800
a little bit uncertain but you can see

492
00:38:28,800 --> 00:38:30,960
here they are so for for uh you know for

493
00:38:30,960 --> 00:38:33,839
our viewers so c3 is a constraint

494
00:38:33,839 --> 00:38:35,680
solving uh software so you provide it

495
00:38:35,680 --> 00:38:37,680
with a set of equations

496
00:38:37,680 --> 00:38:39,520
uh a bunch of variables and a bunch of

497
00:38:39,520 --> 00:38:41,200
equations and then the program will

498
00:38:41,200 --> 00:38:43,200
figure out the values for the variables

499
00:38:43,200 --> 00:38:45,520
that satisfy all of these equations

500
00:38:45,520 --> 00:38:48,000
so in this case you could say like okay

501
00:38:48,000 --> 00:38:49,839
we have four unknowns

502
00:38:49,839 --> 00:38:52,000
like the multiples of our prime numbers

503
00:38:52,000 --> 00:38:54,320
and you can say like a times the first

504
00:38:54,320 --> 00:38:55,920
number plus b times the second prime

505
00:38:55,920 --> 00:38:58,240
number and so on should equal our target

506
00:38:58,240 --> 00:38:59,599
value and then

507
00:38:59,599 --> 00:39:02,240
c3 tries to figure out appropriate

508
00:39:02,240 --> 00:39:05,520
values for a b c and d uh to uh

509
00:39:05,520 --> 00:39:07,200
make this happen and then they can use

510
00:39:07,200 --> 00:39:08,480
that output

511
00:39:08,480 --> 00:39:10,160
as uh

512
00:39:10,160 --> 00:39:13,040
you know the the commands for their

513
00:39:13,040 --> 00:39:15,280
exploit

514
00:39:15,280 --> 00:39:17,760
i was just uh going back again and

515
00:39:17,760 --> 00:39:22,400
looking at the assembly uh code um

516
00:39:22,400 --> 00:39:24,800
just to get a try to understand a bit

517
00:39:24,800 --> 00:39:26,720
better what is happening here so

518
00:39:26,720 --> 00:39:29,359
basically you have um an array and you

519
00:39:29,359 --> 00:39:30,160
the

520
00:39:30,160 --> 00:39:33,200
the first two options uh move the cursor

521
00:39:33,200 --> 00:39:35,440
in the array back and forth and then

522
00:39:35,440 --> 00:39:37,920
with other options you can modify the

523
00:39:37,920 --> 00:39:39,280
array value

524
00:39:39,280 --> 00:39:41,839
and that area is later your shelf code

525
00:39:41,839 --> 00:39:42,880
um

526
00:39:42,880 --> 00:39:44,880
and these area values

527
00:39:44,880 --> 00:39:48,000
you can just you know add or subtract a

528
00:39:48,000 --> 00:39:50,880
certain value but it but which seems at

529
00:39:50,880 --> 00:39:53,280
first very easy but i guess it's because

530
00:39:53,280 --> 00:39:56,800
your input length for the choices is is

531
00:39:56,800 --> 00:39:58,640
short no it's a while true

532
00:39:58,640 --> 00:40:01,359
hmm i because i i i'm looking at again

533
00:40:01,359 --> 00:40:02,640
at the this assembly trying to figure

534
00:40:02,640 --> 00:40:03,760
out how

535
00:40:03,760 --> 00:40:06,079
how do they treat it as a math problem

536
00:40:06,079 --> 00:40:08,640
to me it looks on first side just a

537
00:40:08,640 --> 00:40:10,720
basic array to just so just to cut you

538
00:40:10,720 --> 00:40:12,880
off a little bit here uh i can see here

539
00:40:12,880 --> 00:40:14,400
on source cloud's screen that they are

540
00:40:14,400 --> 00:40:16,000
trying to run the

541
00:40:16,000 --> 00:40:18,160
program remotely and they seem to have a

542
00:40:18,160 --> 00:40:19,119
shell

543
00:40:19,119 --> 00:40:20,319
uh

544
00:40:20,319 --> 00:40:23,839
so they have a i think it's a locally

545
00:40:23,839 --> 00:40:26,319
working

546
00:40:26,560 --> 00:40:30,480
oh no do we have an issue here

547
00:40:30,480 --> 00:40:32,480
is it

548
00:40:32,480 --> 00:40:34,400
uh no no that's a local it's a locally

549
00:40:34,400 --> 00:40:36,880
working they have shell locally

550
00:40:36,880 --> 00:40:38,480
so they are very

551
00:40:38,480 --> 00:40:41,280
close we can see this

552
00:40:41,280 --> 00:40:43,040
you can see the submitter uh binary

553
00:40:43,040 --> 00:40:45,520
they're running it and that should be

554
00:40:45,520 --> 00:40:47,040
[Music]

555
00:40:47,040 --> 00:40:51,319
yeah that's game that's game

556
00:40:52,160 --> 00:40:55,119
good luck good job to uh sarah cloud for

557
00:40:55,119 --> 00:40:58,800
oh hi yeah amazing okay yeah yeah

558
00:40:58,800 --> 00:41:00,720
so uh what we saw there on screen we saw

559
00:41:00,720 --> 00:41:03,759
them running a uh

560
00:41:03,920 --> 00:41:05,440
submit their binary once they had a

561
00:41:05,440 --> 00:41:07,200
remotely working

562
00:41:07,200 --> 00:41:08,400
exploit

563
00:41:08,400 --> 00:41:10,319
uh that was a

564
00:41:10,319 --> 00:41:11,760
fairly quick one

565
00:41:11,760 --> 00:41:12,880
um

566
00:41:12,880 --> 00:41:15,200
so yeah to be honest

567
00:41:15,200 --> 00:41:20,400
yeah congratulations amazing uh go team

568
00:41:20,400 --> 00:41:22,240
um

569
00:41:22,240 --> 00:41:23,119
yeah

570
00:41:23,119 --> 00:41:26,319
and uh that is the this match

571
00:41:26,319 --> 00:41:29,920
we will be back in uh yeah

572
00:41:29,920 --> 00:41:31,040
we will we will catch up with the

573
00:41:31,040 --> 00:41:32,560
schedule so we will be back in already

574
00:41:32,560 --> 00:41:35,119
in 20 minutes hopefully uh

575
00:41:35,119 --> 00:41:38,319
and uh yeah i will be swapping out with

576
00:41:38,319 --> 00:41:40,480
jordan and uh live overflow you are

577
00:41:40,480 --> 00:41:42,960
staying on for the next match right

578
00:41:42,960 --> 00:41:45,920
sounds good great so if i if i can just

579
00:41:45,920 --> 00:41:48,240
plug my stream in between the matches oh

580
00:41:48,240 --> 00:41:50,480
totally twitch tv live overflow i'm

581
00:41:50,480 --> 00:41:52,000
gonna really

582
00:41:52,000 --> 00:41:53,839
kind of like recap what just happened

583
00:41:53,839 --> 00:41:55,040
trying to better understand because

584
00:41:55,040 --> 00:41:57,119
everything happened so fast so you know

585
00:41:57,119 --> 00:41:59,520
uh in in the meantime if you're bored uh

586
00:41:59,520 --> 00:42:02,160
come over there and then yeah sounds

587
00:42:02,160 --> 00:42:03,680
like an excellent uh sounds like an

588
00:42:03,680 --> 00:42:05,680
excellent idea to have uh you know recap

589
00:42:05,680 --> 00:42:07,599
there uh we will go to an intermission

590
00:42:07,599 --> 00:42:09,760
on this stream check out live overflows

591
00:42:09,760 --> 00:42:11,359
you're streaming on twitch

592
00:42:11,359 --> 00:42:13,760
right twitch live overflow uh we'll go

593
00:42:13,760 --> 00:42:15,119
to an intermission here we'll be back in

594
00:42:15,119 --> 00:42:17,040
about 20 minutes

595
00:42:17,040 --> 00:42:20,279
see you later

596
00:42:20,480 --> 00:43:18,090
[Music]

597
00:43:22,140 --> 00:43:27,299
[Music]

598
00:43:30,080 --> 00:43:37,009
[Music]

599
00:43:41,080 --> 00:44:22,249
[Music]

600
00:44:27,200 --> 00:44:30,200
so

601
00:44:32,190 --> 00:44:35,380
[Music]

602
00:44:43,220 --> 00:44:53,459
[Music]

603
00:44:56,160 --> 00:44:57,160
so

604
00:44:57,160 --> 00:45:24,109
[Music]

605
00:45:26,750 --> 00:45:35,860
[Music]

606
00:45:38,400 --> 00:45:41,400
so

607
00:45:54,950 --> 00:46:05,200
[Music]

608
00:46:05,200 --> 00:46:08,200
so

609
00:46:11,260 --> 00:46:23,120
[Music]

610
00:46:28,300 --> 00:46:33,289
[Music]

611
00:46:36,550 --> 00:46:46,909
[Music]

612
00:46:50,110 --> 00:47:03,370
[Music]

613
00:47:06,380 --> 00:47:09,719
[Music]

614
00:47:17,460 --> 00:47:28,720
[Music]

615
00:47:28,720 --> 00:47:31,720
so

616
00:47:33,090 --> 00:48:10,070
[Music]

617
00:48:10,640 --> 00:48:12,900
so

618
00:48:12,900 --> 00:49:02,880
[Music]

619
00:49:05,000 --> 00:49:06,480
[Music]

620
00:49:06,480 --> 00:49:09,480
so

621
00:49:09,760 --> 00:49:17,510
[Music]

622
00:49:26,350 --> 00:49:58,409
[Music]

623
00:50:00,890 --> 00:50:53,429
[Music]

624
00:50:58,640 --> 00:51:00,630
so

625
00:51:00,630 --> 00:52:00,360
[Music]

626
00:52:04,520 --> 00:54:02,809
[Music]

627
00:54:17,400 --> 00:54:26,120
[Music]

628
00:54:29,220 --> 00:54:35,350
[Music]

629
00:54:39,180 --> 00:54:42,330
[Music]

630
00:54:46,980 --> 00:54:50,280
[Music]

631
00:54:53,590 --> 00:55:18,429
[Music]

632
00:55:20,540 --> 00:55:45,690
[Music]

633
00:55:50,070 --> 00:55:55,260
[Music]

634
00:55:59,270 --> 00:56:02,380
[Music]

635
00:56:04,740 --> 00:56:10,669
[Music]

636
00:56:19,780 --> 00:56:40,130
[Music]

637
00:56:45,140 --> 00:57:08,949
[Music]

638
00:57:11,140 --> 00:57:22,569
[Music]

639
00:57:29,710 --> 00:57:41,110
[Music]

640
00:57:44,390 --> 00:57:47,489
[Music]

641
00:57:51,370 --> 00:57:54,480
[Music]

642
00:58:01,550 --> 00:58:04,679
[Music]

643
00:58:29,260 --> 00:58:34,520
[Music]

644
00:58:44,230 --> 00:58:53,349
[Music]

645
00:59:11,320 --> 00:59:31,900
[Music]

646
00:59:38,740 --> 00:59:42,100
[Music]

647
00:59:45,270 --> 00:59:48,349
[Music]

648
01:00:06,960 --> 01:00:08,840
so

649
01:00:08,840 --> 01:00:15,570
[Music]

650
01:00:17,770 --> 01:00:23,449
[Music]

651
01:00:30,160 --> 01:00:51,729
[Music]

652
01:00:54,120 --> 01:01:06,190
[Music]

653
01:01:10,040 --> 01:01:15,529
[Music]

654
01:01:26,200 --> 01:01:29,370
[Music]

655
01:01:36,130 --> 01:01:39,469
[Music]

656
01:01:48,510 --> 01:01:58,149
[Music]

657
01:02:21,640 --> 01:02:24,810
[Music]

658
01:02:28,440 --> 01:02:54,119
[Music]

659
01:02:54,640 --> 01:02:56,680
so

660
01:02:56,680 --> 01:03:24,459
[Music]

661
01:03:30,320 --> 01:03:33,449
[Music]

662
01:03:53,420 --> 01:03:56,659
[Music]

663
01:04:03,110 --> 01:04:48,400
[Music]

664
01:04:53,800 --> 01:04:57,010
[Music]

665
01:05:05,039 --> 01:05:08,039
bye

666
01:05:12,830 --> 01:05:16,230
[Music]

667
01:05:50,710 --> 01:05:56,929
[Music]

668
01:05:57,359 --> 01:05:59,890
so

669
01:05:59,890 --> 01:06:13,359
[Music]

670
01:06:13,359 --> 01:06:16,359
uh

671
01:06:21,560 --> 01:06:25,680
[Music]

672
01:06:25,680 --> 01:06:26,730
so

673
01:06:26,730 --> 01:06:29,840
[Music]

674
01:07:12,770 --> 01:07:18,820
[Music]

675
01:08:00,690 --> 01:08:18,158
[Music]

676
01:08:18,158 --> 01:08:21,198
welcome back live ctf uh round two day

677
01:08:21,198 --> 01:08:22,080
two

678
01:08:22,080 --> 01:08:24,560
uh i'm back i'm ciphertext or jordan

679
01:08:24,560 --> 01:08:27,920
thanks kyle for doing uh round one uh we

680
01:08:27,920 --> 01:08:29,839
still have uh live overflow i live

681
01:08:29,839 --> 01:08:31,279
overflow are you still there

682
01:08:31,279 --> 01:08:33,439
yes i'm the i'm here excellent all right

683
01:08:33,439 --> 01:08:35,359
good all right so we've got round two uh

684
01:08:35,359 --> 01:08:38,158
this round we've got coming up um uh

685
01:08:38,158 --> 01:08:39,679
samurai and perfect drew so let's get

686
01:08:39,679 --> 01:08:41,120
them started with a big countdown you

687
01:08:41,120 --> 01:08:41,920
ready

688
01:08:41,920 --> 01:08:42,880
five

689
01:08:42,880 --> 01:08:43,839
four

690
01:08:43,839 --> 01:08:44,799
three

691
01:08:44,799 --> 01:08:45,759
two

692
01:08:45,759 --> 01:08:48,880
one go

693
01:08:48,880 --> 01:08:50,799
all right okay that's cool what is this

694
01:08:50,799 --> 01:08:52,000
challenge

695
01:08:52,000 --> 01:08:53,520
okay so this challenge oh i gotta check

696
01:08:53,520 --> 01:08:54,719
my notes this has been a crazy morning

697
01:08:54,719 --> 01:08:56,080
this challenge is called oh seek and

698
01:08:56,080 --> 01:08:57,198
destroy

699
01:08:57,198 --> 01:08:58,880
uh maybe a little metallica reference

700
01:08:58,880 --> 01:09:00,880
was was i think the person who who named

701
01:09:00,880 --> 01:09:02,080
it

702
01:09:02,080 --> 01:09:04,238
um i think so we we told each team a

703
01:09:04,238 --> 01:09:05,439
category

704
01:09:05,439 --> 01:09:07,279
and this category we told them was

705
01:09:07,279 --> 01:09:09,279
exploitation

706
01:09:09,279 --> 01:09:11,040
and we we kind of we didn't say it was

707
01:09:11,040 --> 01:09:12,399
opponentable

708
01:09:12,399 --> 01:09:14,640
uh because in from my perspective

709
01:09:14,640 --> 01:09:16,479
opponentable you have to like find the

710
01:09:16,479 --> 01:09:17,920
vulnerability and exploitation's like no

711
01:09:17,920 --> 01:09:19,279
no you just have to exploit it like

712
01:09:19,279 --> 01:09:20,880
there's already one one there so it's a

713
01:09:20,880 --> 01:09:21,839
subtle distinction it really doesn't

714
01:09:21,839 --> 01:09:23,759
matter too much i think to be good at

715
01:09:23,759 --> 01:09:24,640
both

716
01:09:24,640 --> 01:09:26,719
uh so

717
01:09:26,719 --> 01:09:29,520
i think we've got uh let's see so we're

718
01:09:29,520 --> 01:09:33,040
seek is definitely an a technical term

719
01:09:33,040 --> 01:09:35,198
there's you know the seek

720
01:09:35,198 --> 01:09:36,719
method and so that's does the challenge

721
01:09:36,719 --> 01:09:38,319
have to do something with it it does

722
01:09:38,319 --> 01:09:39,759
that's exactly right yeah great great

723
01:09:39,759 --> 01:09:41,679
question so seek destroy in fact

724
01:09:41,679 --> 01:09:44,399
describes exactly what the binary does

725
01:09:44,399 --> 01:09:46,158
you can give it a file

726
01:09:46,158 --> 01:09:47,920
and you can give it an offset that which

727
01:09:47,920 --> 01:09:49,920
it will seek to and then you get to

728
01:09:49,920 --> 01:09:52,238
write bytes so you can just open up any

729
01:09:52,238 --> 01:09:53,198
file

730
01:09:53,198 --> 01:09:54,880
and you can see actually here like the

731
01:09:54,880 --> 01:09:57,440
the actual decompilation for the uh so

732
01:09:57,440 --> 01:09:59,920
we're back over on this screen

733
01:09:59,920 --> 01:10:01,280
so okay we're doing we're doing check

734
01:10:01,280 --> 01:10:02,159
sec

735
01:10:02,159 --> 01:10:03,040
um

736
01:10:03,040 --> 01:10:05,600
on it but yeah some basic uh yeah checks

737
01:10:05,600 --> 01:10:07,120
at the beginning just to make sure not

738
01:10:07,120 --> 01:10:08,560
to me

739
01:10:08,560 --> 01:10:10,719
sometimes you know we we talked about it

740
01:10:10,719 --> 01:10:12,560
yesterday as well that uh some sometimes

741
01:10:12,560 --> 01:10:15,520
challenges uh don't have stat canneries

742
01:10:15,520 --> 01:10:16,800
or don't have

743
01:10:16,800 --> 01:10:19,120
position independent code and maybe you

744
01:10:19,120 --> 01:10:20,719
you have a wrong assumption so better to

745
01:10:20,719 --> 01:10:23,199
check this at the start yeah it's it's

746
01:10:23,199 --> 01:10:25,120
so easy especially in a live ctf

747
01:10:25,120 --> 01:10:26,239
environment right which is really

748
01:10:26,239 --> 01:10:28,400
stressful where you're trying to like

749
01:10:28,400 --> 01:10:29,920
keep track and remember and you just

750
01:10:29,920 --> 01:10:31,600
always you might just assume oh of

751
01:10:31,600 --> 01:10:32,880
course it's going to have railroad or

752
01:10:32,880 --> 01:10:34,320
it's going to have pi or whatever

753
01:10:34,320 --> 01:10:36,400
so yeah it's it's such a good habit i

754
01:10:36,400 --> 01:10:37,840
feel like to have

755
01:10:37,840 --> 01:10:39,440
like just sort of like things that you

756
01:10:39,440 --> 01:10:41,040
always do things you like always check

757
01:10:41,040 --> 01:10:43,920
off and and um oh yeah we're getting my

758
01:10:43,920 --> 01:10:45,520
name fixed here so sorry for we'll get

759
01:10:45,520 --> 01:10:46,400
the uh

760
01:10:46,400 --> 01:10:49,679
uh that the title slide changed um

761
01:10:49,679 --> 01:10:50,560
so

762
01:10:50,560 --> 01:10:52,080
the yeah so they're running check sec

763
01:10:52,080 --> 01:10:52,800
they're they're looking at the

764
01:10:52,800 --> 01:10:54,719
protections on the binaries so if i

765
01:10:54,719 --> 01:10:56,320
describe this so i like this because you

766
01:10:56,320 --> 01:10:57,920
don't i think know any of the answers uh

767
01:10:57,920 --> 01:10:59,440
to these binaries right so we're kind of

768
01:10:59,440 --> 01:11:00,719
bringing you in

769
01:11:00,719 --> 01:11:02,960
uh i mean i've peaked a little bit okay

770
01:11:02,960 --> 01:11:04,640
yeah you do have access yeah that's

771
01:11:04,640 --> 01:11:07,040
right yeah but but yeah i i don't have a

772
01:11:07,040 --> 01:11:09,520
good understanding of it so like the

773
01:11:09,520 --> 01:11:11,199
yeah the solution for this one i i love

774
01:11:11,199 --> 01:11:13,040
this one because it's one where

775
01:11:13,040 --> 01:11:14,880
like the obvious solution

776
01:11:14,880 --> 01:11:16,320
most of these the obvious solution from

777
01:11:16,320 --> 01:11:18,159
like a ctf player perspective is the one

778
01:11:18,159 --> 01:11:19,920
that we want you to do uh but we still

779
01:11:19,920 --> 01:11:21,280
have to see you do it right and we have

780
01:11:21,280 --> 01:11:23,840
to see you uh come off of that so

781
01:11:23,840 --> 01:11:26,239
does it have to do with uh that on linux

782
01:11:26,239 --> 01:11:28,239
everything is a file and you're supposed

783
01:11:28,239 --> 01:11:30,560
to open uh

784
01:11:30,560 --> 01:11:32,480
i don't know i guess yeah no no no

785
01:11:32,480 --> 01:11:34,239
keep going that's exactly right yeah so

786
01:11:34,239 --> 01:11:35,520
everything's a file so like what are

787
01:11:35,520 --> 01:11:37,040
some of the things that like are files

788
01:11:37,040 --> 01:11:38,320
and linux that you wouldn't expect to be

789
01:11:38,320 --> 01:11:40,080
a file right like you've got the proc

790
01:11:40,080 --> 01:11:42,320
file system the dev file system like

791
01:11:42,320 --> 01:11:44,880
these weird things and so okay if if uh

792
01:11:44,880 --> 01:11:46,640
if you were doing this and you've got

793
01:11:46,640 --> 01:11:48,400
proc what in there would you use to

794
01:11:48,400 --> 01:11:50,000
start writing to

795
01:11:50,000 --> 01:11:52,960
yeah a proc self mem exactly exactly so

796
01:11:52,960 --> 01:11:54,400
proc self memo is just going to give you

797
01:11:54,400 --> 01:11:56,960
access to the memory of the binary and

798
01:11:56,960 --> 01:11:59,440
we see here uh people already looking up

799
01:11:59,440 --> 01:12:02,080
proc self mem here perfect root uh was

800
01:12:02,080 --> 01:12:03,920
just looking it up

801
01:12:03,920 --> 01:12:05,760
yup and already building the the phone

802
01:12:05,760 --> 01:12:07,280
script so like they they know that

803
01:12:07,280 --> 01:12:08,320
they're looking at this thing they're

804
01:12:08,320 --> 01:12:09,840
just making sure that their

805
01:12:09,840 --> 01:12:11,679
script is going to be formatted

806
01:12:11,679 --> 01:12:13,120
correctly like you know do you send it

807
01:12:13,120 --> 01:12:14,880
hacks you send decimal do you like how

808
01:12:14,880 --> 01:12:16,239
you send the data

809
01:12:16,239 --> 01:12:17,920
so it looks like they already know we're

810
01:12:17,920 --> 01:12:19,760
going to open up the binary

811
01:12:19,760 --> 01:12:21,520
we're going to tell it where we want to

812
01:12:21,520 --> 01:12:22,719
write to proxy supplement although there

813
01:12:22,719 --> 01:12:25,040
is one gotcha uh i think in our official

814
01:12:25,040 --> 01:12:28,640
subscript we we first open um maps right

815
01:12:28,640 --> 01:12:30,239
because we want to know

816
01:12:30,239 --> 01:12:31,440
where we're actually mapped to memory

817
01:12:31,440 --> 01:12:33,040
too so it's nice that we can we can open

818
01:12:33,040 --> 01:12:36,320
that up um and i'm wondering is there is

819
01:12:36,320 --> 01:12:38,400
other ways to cheese it i mean on an

820
01:12:38,400 --> 01:12:40,960
actual like full ubuntu and maybe if

821
01:12:40,960 --> 01:12:42,960
this is like actually running as root

822
01:12:42,960 --> 01:12:44,480
you might want to you know instead of

823
01:12:44,480 --> 01:12:46,480
going to self practice and writing some

824
01:12:46,480 --> 01:12:48,239
shell code you might want to just open

825
01:12:48,239 --> 01:12:50,480
you know etc

826
01:12:50,480 --> 01:12:52,880
passwd or etc shadow or so and write

827
01:12:52,880 --> 01:12:55,760
yourself a vector user into there or

828
01:12:55,760 --> 01:12:57,520
changing the root password which might

829
01:12:57,520 --> 01:12:59,679
be a bit easier or nicer

830
01:12:59,679 --> 01:13:01,840
to debug as well yeah that's a great

831
01:13:01,840 --> 01:13:03,679
idea is there a way to cheat it or is

832
01:13:03,679 --> 01:13:04,480
that

833
01:13:04,480 --> 01:13:06,320
do you have any other idea for solutions

834
01:13:06,320 --> 01:13:08,800
then i mean we we didn't have an

835
01:13:08,800 --> 01:13:10,960
intended one but that doesn't mean that

836
01:13:10,960 --> 01:13:13,199
there isn't one and i would i would love

837
01:13:13,199 --> 01:13:16,080
to to find out that that there is i i

838
01:13:16,080 --> 01:13:18,320
expect knowing these players that we're

839
01:13:18,320 --> 01:13:20,880
gonna see them both go for

840
01:13:20,880 --> 01:13:21,679
um

841
01:13:21,679 --> 01:13:23,600
just the memory one but i think you're

842
01:13:23,600 --> 01:13:24,880
right like i think actually looking for

843
01:13:24,880 --> 01:13:26,320
like something more logic based or kind

844
01:13:26,320 --> 01:13:27,600
of you know objection based or anything

845
01:13:27,600 --> 01:13:30,239
else like a script like on i mean if you

846
01:13:30,239 --> 01:13:31,760
if you have root permission i don't know

847
01:13:31,760 --> 01:13:34,159
how the challenge container is set up um

848
01:13:34,159 --> 01:13:36,159
it's running as root if you could so the

849
01:13:36,159 --> 01:13:38,560
binaries are not running as root

850
01:13:38,560 --> 01:13:40,800
excuse me so i i think uh you you know

851
01:13:40,800 --> 01:13:42,159
you do some of that stuff doesn't work

852
01:13:42,159 --> 01:13:43,120
but like

853
01:13:43,120 --> 01:13:45,520
you could you just uh

854
01:13:45,520 --> 01:13:46,719
so i don't know if you can create a file

855
01:13:46,719 --> 01:13:48,320
but if you could could you create like a

856
01:13:48,320 --> 01:13:51,040
dot ssh authorized keys and just log in

857
01:13:51,040 --> 01:13:53,520
or like there may be other

858
01:13:53,520 --> 01:13:56,159
uh yeah there may very well be other

859
01:13:56,159 --> 01:13:57,760
options which i actually think is

860
01:13:57,760 --> 01:13:58,800
interesting

861
01:13:58,800 --> 01:14:01,199
destroy their own challenge by instead

862
01:14:01,199 --> 01:14:02,560
of going for their memory but

863
01:14:02,560 --> 01:14:04,320
overwriting their own challenge just

864
01:14:04,320 --> 01:14:06,239
overwrite the binary on disk

865
01:14:06,239 --> 01:14:08,000
i i'm trying to remember how the docker

866
01:14:08,000 --> 01:14:10,080
setup is is done if that's possible or

867
01:14:10,080 --> 01:14:12,159
not um in a oh here we go we're going to

868
01:14:12,159 --> 01:14:13,360
bring a producer and we'll see if this

869
01:14:13,360 --> 01:14:15,440
is it should not be possible to destroy

870
01:14:15,440 --> 01:14:17,600
anything but uh you know if they manage

871
01:14:17,600 --> 01:14:19,360
to do that we will uh yeah it'd have to

872
01:14:19,360 --> 01:14:20,560
reset it or something but it should not

873
01:14:20,560 --> 01:14:22,320
be possible it should not be possible i

874
01:14:22,320 --> 01:14:23,360
think that you know the binaries are

875
01:14:23,360 --> 01:14:24,640
dropped in where they can they have

876
01:14:24,640 --> 01:14:25,679
execute and read permission of the

877
01:14:25,679 --> 01:14:26,960
binary but they shouldn't have write

878
01:14:26,960 --> 01:14:29,920
permission on on the binaries in in in

879
01:14:29,920 --> 01:14:31,840
their folders

880
01:14:31,840 --> 01:14:34,159
so so i i'm seeing perfect root is uh

881
01:14:34,159 --> 01:14:36,880
kind of like creating a script with

882
01:14:36,880 --> 01:14:39,440
generic methods like open file um

883
01:14:39,440 --> 01:14:41,199
reading file just like functions in

884
01:14:41,199 --> 01:14:43,679
their exploitation script to i guess

885
01:14:43,679 --> 01:14:45,679
easier than uh work with it

886
01:14:45,679 --> 01:14:46,560
um

887
01:14:46,560 --> 01:14:48,159
yup just the usual kind of wrapper stuff

888
01:14:48,159 --> 01:14:49,520
exactly the primitives we talked to

889
01:14:49,520 --> 01:14:51,520
yesterday about like the debate between

890
01:14:51,520 --> 01:14:53,360
a quick one-off that you just like get

891
01:14:53,360 --> 01:14:55,040
as quickly as possible or like building

892
01:14:55,040 --> 01:14:56,560
up the primitives that you can then more

893
01:14:56,560 --> 01:14:58,320
easily debug and test and then chain

894
01:14:58,320 --> 01:14:59,760
together if you're gonna do a lot of

895
01:14:59,760 --> 01:15:01,920
operations

896
01:15:01,920 --> 01:15:04,080
and so like this is one where you know i

897
01:15:04,080 --> 01:15:06,480
don't know is it better to to do to do

898
01:15:06,480 --> 01:15:08,000
the wrapper i think it probably is

899
01:15:08,000 --> 01:15:09,679
because this one looks like each one of

900
01:15:09,679 --> 01:15:10,960
your rights

901
01:15:10,960 --> 01:15:12,480
um

902
01:15:12,480 --> 01:15:13,920
well so if you've got like the abilities

903
01:15:13,920 --> 01:15:15,360
to like one shot it you could just send

904
01:15:15,360 --> 01:15:16,800
your offset your size and do the whole

905
01:15:16,800 --> 01:15:19,600
thing in one one shot in which case

906
01:15:19,600 --> 01:15:21,760
i mean you don't even really need to

907
01:15:21,760 --> 01:15:23,120
to wrap it up

908
01:15:23,120 --> 01:15:25,520
the um samurai also does the same so

909
01:15:25,520 --> 01:15:27,520
they they are also working on an exploit

910
01:15:27,520 --> 01:15:29,600
python script where they also have the

911
01:15:29,600 --> 01:15:32,560
primitives open close right read as also

912
01:15:32,560 --> 01:15:34,320
kind of like similar strategy from both

913
01:15:34,320 --> 01:15:37,120
teams writing a script with the wrapper

914
01:15:37,120 --> 01:15:38,880
primitives yeah it is exactly the same

915
01:15:38,880 --> 01:15:40,880
and i love too that's um

916
01:15:40,880 --> 01:15:42,400
you see i think is that just notepad

917
01:15:42,400 --> 01:15:43,520
plus plus

918
01:15:43,520 --> 01:15:44,719
that

919
01:15:44,719 --> 01:15:47,199
might be uh chris chris is using so yeah

920
01:15:47,199 --> 01:15:49,199
we have chris eagle from samurai who's

921
01:15:49,199 --> 01:15:52,239
one of the i think is is certainly been

922
01:15:52,239 --> 01:15:53,840
around the ctf scene longer than

923
01:15:53,840 --> 01:15:55,280
absolutely anybody else at this point

924
01:15:55,280 --> 01:15:56,719
like still actively playing at the

925
01:15:56,719 --> 01:15:58,320
highest tier competition which is just

926
01:15:58,320 --> 01:16:00,159
really really cool for a while i thought

927
01:16:00,159 --> 01:16:01,600
i was going to be an old man ctf like

928
01:16:01,600 --> 01:16:03,040
him and then it got too hard for me but

929
01:16:03,040 --> 01:16:04,800
he kept on going and i love i love

930
01:16:04,800 --> 01:16:07,600
seeing him wow like continued i mean

931
01:16:07,600 --> 01:16:10,239
the very first ctf i played defcon ctf

932
01:16:10,239 --> 01:16:13,040
22 years ago i i joined his team he was

933
01:16:13,040 --> 01:16:15,040
already like a legend in the ctf

934
01:16:15,040 --> 01:16:16,159
community

935
01:16:16,159 --> 01:16:18,159
and now 22 years later he's still

936
01:16:18,159 --> 01:16:19,600
competing and

937
01:16:19,600 --> 01:16:21,920
you know it's so far holding his own in

938
01:16:21,920 --> 01:16:23,520
fact you can even see on on his script

939
01:16:23,520 --> 01:16:25,199
here he's already he's he does go for

940
01:16:25,199 --> 01:16:27,120
the uh the maps reads right so he's

941
01:16:27,120 --> 01:16:28,719
going to get the address space

942
01:16:28,719 --> 01:16:30,080
yeah out of practice of maps in fact

943
01:16:30,080 --> 01:16:31,280
yeah just looking at the two scripts

944
01:16:31,280 --> 01:16:33,360
kind of uh i think yeah perfect route i

945
01:16:33,360 --> 01:16:35,760
i saw was still like having just the the

946
01:16:35,760 --> 01:16:38,800
test a test file yep but yeah samurai

947
01:16:38,800 --> 01:16:41,280
already has the prox health maps uh in

948
01:16:41,280 --> 01:16:43,600
there yeah i hate taking bets because

949
01:16:43,600 --> 01:16:45,120
i've been wrong so many times but you

950
01:16:45,120 --> 01:16:47,360
know it is fun to kind of guess and

951
01:16:47,360 --> 01:16:48,480
it looks like a little bit of lead to

952
01:16:48,480 --> 01:16:51,440
samurai but this can go uh either way i

953
01:16:51,440 --> 01:16:54,000
i i think these are fun because a lot

954
01:16:54,000 --> 01:16:56,159
well perfect root yeah it's

955
01:16:56,159 --> 01:16:58,800
just changing it to proc self mem

956
01:16:58,800 --> 01:17:00,480
maybe they run into the issue as you

957
01:17:00,480 --> 01:17:02,400
mentioned about like where to seek to

958
01:17:02,400 --> 01:17:04,320
where to write to the the address no

959
01:17:04,320 --> 01:17:05,840
they've got a map they've got a maps one

960
01:17:05,840 --> 01:17:08,000
now yep there we go yeah so they've got

961
01:17:08,000 --> 01:17:09,760
products of maps okay so honestly these

962
01:17:09,760 --> 01:17:12,480
are neck and neck uh yeah they're both

963
01:17:12,480 --> 01:17:14,560
pulling oh this is interesting

964
01:17:14,560 --> 01:17:17,920
so it uh i i think we're seeing what's

965
01:17:17,920 --> 01:17:20,000
interesting is we're seeing a targeted

966
01:17:20,000 --> 01:17:22,480
um exploit here from samurai right and

967
01:17:22,480 --> 01:17:24,400
so i saw him like he's pulling up like

968
01:17:24,400 --> 01:17:25,360
uh

969
01:17:25,360 --> 01:17:27,600
you know plt entries got entries

970
01:17:27,600 --> 01:17:29,120
and he's gonna go for like a very

971
01:17:29,120 --> 01:17:31,679
targeted uh exploit

972
01:17:31,679 --> 01:17:33,760
um i think one yeah yeah just like a one

973
01:17:33,760 --> 01:17:35,040
shot kind of thing whereas i think our

974
01:17:35,040 --> 01:17:36,480
our you know original salt was just

975
01:17:36,480 --> 01:17:38,320
really dumb it just blew out put a bunch

976
01:17:38,320 --> 01:17:39,600
of knob sleds and put a bunch of shell

977
01:17:39,600 --> 01:17:40,880
coat and just like over it the whole

978
01:17:40,880 --> 01:17:41,760
thing

979
01:17:41,760 --> 01:17:43,040
um

980
01:17:43,040 --> 01:17:45,679
yeah i actually like i don't know like

981
01:17:45,679 --> 01:17:47,199
of course theoretically it's easy to

982
01:17:47,199 --> 01:17:49,280
overwrite the memory but uh then you

983
01:17:49,280 --> 01:17:51,360
need to figure out where the exactly the

984
01:17:51,360 --> 01:17:53,120
entry point is where to write to the

985
01:17:53,120 --> 01:17:55,280
shell code finding a good function maybe

986
01:17:55,280 --> 01:17:58,239
to overwrite um

987
01:17:58,239 --> 01:18:01,280
then i i don't know like uh

988
01:18:01,280 --> 01:18:03,199
what's a good target function you can

989
01:18:03,199 --> 01:18:04,480
overwrite where you have enough space

990
01:18:04,480 --> 01:18:05,679
for your shell code so you're not

991
01:18:05,679 --> 01:18:07,440
trashing other code where you're still

992
01:18:07,440 --> 01:18:09,360
executing currently thereby i don't know

993
01:18:09,360 --> 01:18:10,880
there are a few caveats but maybe

994
01:18:10,880 --> 01:18:13,920
overwriting got is just a very typical

995
01:18:13,920 --> 01:18:16,400
exploitation way if they can overwrite a

996
01:18:16,400 --> 01:18:17,920
got entry that's

997
01:18:17,920 --> 01:18:19,760
what they do in regular exploitation

998
01:18:19,760 --> 01:18:21,360
challenges as well so

999
01:18:21,360 --> 01:18:22,960
they feel most comfortable with it yeah

1000
01:18:22,960 --> 01:18:24,320
as you say even if maybe it's not the

1001
01:18:24,320 --> 01:18:26,000
most efficient if it's the thing they're

1002
01:18:26,000 --> 01:18:27,840
used to they're very fast at it and they

1003
01:18:27,840 --> 01:18:29,920
know how to like land one like that and

1004
01:18:29,920 --> 01:18:32,239
so yeah i could see that even though the

1005
01:18:32,239 --> 01:18:33,440
sort of like

1006
01:18:33,440 --> 01:18:35,360
ham like you know brute force hammer way

1007
01:18:35,360 --> 01:18:36,320
of just

1008
01:18:36,320 --> 01:18:37,840
not fled the whole thing

1009
01:18:37,840 --> 01:18:39,040
maybe that's less reliable maybe they

1010
01:18:39,040 --> 01:18:40,400
don't trust it they had they know you

1011
01:18:40,400 --> 01:18:41,760
know they sort of know their traditional

1012
01:18:41,760 --> 01:18:42,880
thing and they're going to go with that

1013
01:18:42,880 --> 01:18:43,840
so

1014
01:18:43,840 --> 01:18:45,440
yeah i would have for example not

1015
01:18:45,440 --> 01:18:47,120
thought of the knob slide i would have

1016
01:18:47,120 --> 01:18:48,800
thing or thought about okay which

1017
01:18:48,800 --> 01:18:51,199
function can i overwrite and when can i

1018
01:18:51,199 --> 01:18:53,199
call it or where does it do i return to

1019
01:18:53,199 --> 01:18:55,440
after maine or something you know i

1020
01:18:55,440 --> 01:18:56,800
would have thought about this way but oh

1021
01:18:56,800 --> 01:18:58,159
you're absolutely right and not slight

1022
01:18:58,159 --> 01:19:00,719
is just a brute force easy way but i

1023
01:19:00,719 --> 01:19:01,840
probably wouldn't have thought about

1024
01:19:01,840 --> 01:19:03,520
this in the moment yeah and i think

1025
01:19:03,520 --> 01:19:04,800
that's some of that's because like you

1026
01:19:04,800 --> 01:19:06,640
know in a ctf you don't see things like

1027
01:19:06,640 --> 01:19:08,239
not slides very often right like those

1028
01:19:08,239 --> 01:19:10,800
tend to be more like real worlds like uh

1029
01:19:10,800 --> 01:19:11,920
you know browser-based things or

1030
01:19:11,920 --> 01:19:13,199
something like that oftentimes where

1031
01:19:13,199 --> 01:19:16,080
like you you you've got to like you you

1032
01:19:16,080 --> 01:19:17,360
need that because you just don't have

1033
01:19:17,360 --> 01:19:18,560
the precision you otherwise want and

1034
01:19:18,560 --> 01:19:19,920
you're okay with like a probabilistic

1035
01:19:19,920 --> 01:19:22,560
exploit um and i think for for

1036
01:19:22,560 --> 01:19:24,320
just ctf players even challenge authors

1037
01:19:24,320 --> 01:19:25,920
like we like it to be really clean and

1038
01:19:25,920 --> 01:19:27,440
pretty pristine and like knops lives

1039
01:19:27,440 --> 01:19:29,440
feel so dirty like it's like uh ooh i

1040
01:19:29,440 --> 01:19:30,719
don't want to you know

1041
01:19:30,719 --> 01:19:32,320
have a lame knob slide in my in my

1042
01:19:32,320 --> 01:19:33,520
challenge

1043
01:19:33,520 --> 01:19:35,280
yeah but but yeah it's maybe what you

1044
01:19:35,280 --> 01:19:37,520
say what you say that

1045
01:19:37,520 --> 01:19:39,280
players are maybe not used to knob

1046
01:19:39,280 --> 01:19:40,880
slides i mean of of course these players

1047
01:19:40,880 --> 01:19:42,400
know about knobs like they understand

1048
01:19:42,400 --> 01:19:44,239
what that is but uh yeah they are not

1049
01:19:44,239 --> 01:19:46,000
used to it so maybe that's also kind of

1050
01:19:46,000 --> 01:19:47,679
the same reason why

1051
01:19:47,679 --> 01:19:49,440
they go for overwriting

1052
01:19:49,440 --> 01:19:51,920
the global offset table instead of

1053
01:19:51,920 --> 01:19:53,840
you know going the brute force way just

1054
01:19:53,840 --> 01:19:55,120
what they are used to from other

1055
01:19:55,120 --> 01:19:57,360
exploitation challenges

1056
01:19:57,360 --> 01:19:58,719
yeah so just looking through them i mean

1057
01:19:58,719 --> 01:20:00,400
it definitely seems like they clearly

1058
01:20:00,400 --> 01:20:02,320
both know exactly what to do and this is

1059
01:20:02,320 --> 01:20:03,920
just a race to see who can do it faster

1060
01:20:03,920 --> 01:20:05,760
right and i i think that's super fun

1061
01:20:05,760 --> 01:20:07,199
because it's it's frustrating when like

1062
01:20:07,199 --> 01:20:08,400
one player

1063
01:20:08,400 --> 01:20:09,840
doesn't see the vuln and you're just

1064
01:20:09,840 --> 01:20:11,120
like oh no they're you know they're way

1065
01:20:11,120 --> 01:20:13,520
behind uh this is just gonna be

1066
01:20:13,520 --> 01:20:14,320
i mean

1067
01:20:14,320 --> 01:20:15,520
of course i think it's pretty obvious

1068
01:20:15,520 --> 01:20:17,280
what you're supposed to do on this um

1069
01:20:17,280 --> 01:20:18,400
but yeah

1070
01:20:18,400 --> 01:20:20,239
neither one got got too sidetracked and

1071
01:20:20,239 --> 01:20:21,520
like i said i think because these are

1072
01:20:21,520 --> 01:20:23,199
like

1073
01:20:23,199 --> 01:20:25,760
ponable exploitation people when they

1074
01:20:25,760 --> 01:20:27,360
sit and look at this and they've got a a

1075
01:20:27,360 --> 01:20:28,480
right to a file they're like oh of

1076
01:20:28,480 --> 01:20:29,840
course i want to go for a proximal map

1077
01:20:29,840 --> 01:20:30,960
right it's like just the first thing

1078
01:20:30,960 --> 01:20:33,120
they would think of um yeah it was also

1079
01:20:33,120 --> 01:20:34,960
my first thought exactly and i think

1080
01:20:34,960 --> 01:20:36,320
other people might have been more like

1081
01:20:36,320 --> 01:20:38,159
looking for and i still i wouldn't be at

1082
01:20:38,159 --> 01:20:39,920
all surprised if there's a really clever

1083
01:20:39,920 --> 01:20:41,840
like you know write this file edit this

1084
01:20:41,840 --> 01:20:43,360
file as the user log into the user

1085
01:20:43,360 --> 01:20:44,639
normally change the password you know

1086
01:20:44,639 --> 01:20:47,600
set some other like add like an x off

1087
01:20:47,600 --> 01:20:49,679
file and now you can like you know

1088
01:20:49,679 --> 01:20:51,679
uh like remote x4 i don't know it's

1089
01:20:51,679 --> 01:20:52,560
something something weird like that

1090
01:20:52,560 --> 01:20:53,840
right like i wouldn't be surprised if

1091
01:20:53,840 --> 01:20:54,960
there's something

1092
01:20:54,960 --> 01:20:58,400
um that would that would work like that

1093
01:20:58,400 --> 01:21:00,560
yeah but no time for that in a in a

1094
01:21:00,560 --> 01:21:02,239
head-to-head competition like this one

1095
01:21:02,239 --> 01:21:04,320
which is pretty stressful so you go for

1096
01:21:04,320 --> 01:21:05,760
what you're what you are used to what

1097
01:21:05,760 --> 01:21:07,679
you know yeah well and and like you know

1098
01:21:07,679 --> 01:21:08,800
it's one of those like high-risk high

1099
01:21:08,800 --> 01:21:10,080
reward right like if you try something

1100
01:21:10,080 --> 01:21:12,320
crazy it might just work and you're done

1101
01:21:12,320 --> 01:21:14,080
but then there's also decent fails and

1102
01:21:14,080 --> 01:21:15,679
they both know like okay this clearly

1103
01:21:15,679 --> 01:21:18,000
was designed to be owned this way and i

1104
01:21:18,000 --> 01:21:19,199
just got to figure out exactly the right

1105
01:21:19,199 --> 01:21:22,719
mechanism for it uh we did

1106
01:21:23,040 --> 01:21:24,320
oh say

1107
01:21:24,320 --> 01:21:25,600
did you see something well i was just

1108
01:21:25,600 --> 01:21:27,040
going to reply to a comment chat

1109
01:21:27,040 --> 01:21:28,560
somebody mentioned that it's nice to see

1110
01:21:28,560 --> 01:21:30,480
that both screens are working today yes

1111
01:21:30,480 --> 01:21:33,120
we did we had replaced every component

1112
01:21:33,120 --> 01:21:35,679
of one of our capture setups uh except

1113
01:21:35,679 --> 01:21:37,920
for the hdmi cable and it was the hdmi

1114
01:21:37,920 --> 01:21:39,679
cable as soon as we replaced that

1115
01:21:39,679 --> 01:21:41,440
everything else worked we switched back

1116
01:21:41,440 --> 01:21:43,440
you know adapters and capture cars and

1117
01:21:43,440 --> 01:21:45,280
everything else was fine so just a bad

1118
01:21:45,280 --> 01:21:47,440
and you know brand new hdmi cable just

1119
01:21:47,440 --> 01:21:48,880
bad so

1120
01:21:48,880 --> 01:21:51,280
by the way jordan you cannot see me but

1121
01:21:51,280 --> 01:21:53,760
i saw you dressing up and proudly

1122
01:21:53,760 --> 01:21:55,679
wearing something very nice yesterday to

1123
01:21:55,679 --> 01:21:58,639
go for a real esports caster today you

1124
01:21:58,639 --> 01:22:00,639
don't see me on stream but i'm i i put

1125
01:22:00,639 --> 01:22:03,199
on a small um you know a small like

1126
01:22:03,199 --> 01:22:04,800
jacket

1127
01:22:04,800 --> 01:22:06,560
and now i see you sitting there with a

1128
01:22:06,560 --> 01:22:08,800
hoodie

1129
01:22:08,800 --> 01:22:11,840
i know i know i set this high bar in

1130
01:22:11,840 --> 01:22:14,080
this standard for uh for ctf i didn't

1131
01:22:14,080 --> 01:22:15,600
bring that many suits

1132
01:22:15,600 --> 01:22:17,440
so i was oh people are clapping because

1133
01:22:17,440 --> 01:22:18,560
they think that it was solved here but

1134
01:22:18,560 --> 01:22:20,320
that was they're playing in the room by

1135
01:22:20,320 --> 01:22:21,840
the way our last match because they want

1136
01:22:21,840 --> 01:22:22,960
the audience in here to be able to see

1137
01:22:22,960 --> 01:22:24,880
what's going on but we don't want the

1138
01:22:24,880 --> 01:22:26,480
competitors

1139
01:22:26,480 --> 01:22:29,040
wait oh no it was it was done

1140
01:22:29,040 --> 01:22:30,880
no because the video the clap because

1141
01:22:30,880 --> 01:22:32,480
the video

1142
01:22:32,480 --> 01:22:34,320
sorry about that yeah so i think

1143
01:22:34,320 --> 01:22:36,320
that's the downside to playing the video

1144
01:22:36,320 --> 01:22:38,719
uh in the background uh from the last

1145
01:22:38,719 --> 01:22:39,520
match

1146
01:22:39,520 --> 01:22:41,520
both teams are still going both just i

1147
01:22:41,520 --> 01:22:42,800
know i freaked out like wait no did they

1148
01:22:42,800 --> 01:22:44,320
actually do it but

1149
01:22:44,320 --> 01:22:46,080
both teams are still going

1150
01:22:46,080 --> 01:22:47,679
i was worried there for a second so yeah

1151
01:22:47,679 --> 01:22:48,480
so

1152
01:22:48,480 --> 01:22:51,040
i uh i just didn't bring enough suits um

1153
01:22:51,040 --> 01:22:52,239
and i didn't want to wear the same the

1154
01:22:52,239 --> 01:22:54,639
same suit three days in a row so today

1155
01:22:54,639 --> 01:22:57,440
i'm i'm in hacker garb i have my binge a

1156
01:22:57,440 --> 01:22:59,040
t-shirt and my hoodie

1157
01:22:59,040 --> 01:23:01,120
uh but we'll see i do want to i do want

1158
01:23:01,120 --> 01:23:03,520
that esports vibe going so

1159
01:23:03,520 --> 01:23:04,880
hopefully we get we'll get video figured

1160
01:23:04,880 --> 01:23:06,960
out later too we want to be able to have

1161
01:23:06,960 --> 01:23:08,400
uh

1162
01:23:08,400 --> 01:23:10,320
have our remote casters come in as well

1163
01:23:10,320 --> 01:23:12,320
and and be overlaid but

1164
01:23:12,320 --> 01:23:13,520
all right so let's

1165
01:23:13,520 --> 01:23:15,440
go ahead yeah they they went back also

1166
01:23:15,440 --> 01:23:18,159
again into uh looking at some assembly

1167
01:23:18,159 --> 01:23:20,480
code there i am i'm wondering what kind

1168
01:23:20,480 --> 01:23:22,320
of problem they they are facing right

1169
01:23:22,320 --> 01:23:24,400
now that that's confusing for them yeah

1170
01:23:24,400 --> 01:23:26,560
yeah see perfect root is in the debugger

1171
01:23:26,560 --> 01:23:28,480
and is in ida and they're kind of

1172
01:23:28,480 --> 01:23:30,000
flipping back and forth whereas it looks

1173
01:23:30,000 --> 01:23:31,920
like uh samurai

1174
01:23:31,920 --> 01:23:34,159
was in a vm like we're bringing a vm up

1175
01:23:34,159 --> 01:23:37,839
to to run and test probably

1176
01:23:38,080 --> 01:23:39,679
i think that's another interesting

1177
01:23:39,679 --> 01:23:41,679
difference between uh players approaches

1178
01:23:41,679 --> 01:23:43,280
right where some of them

1179
01:23:43,280 --> 01:23:44,960
will go straight to a debugger and then

1180
01:23:44,960 --> 01:23:46,159
some of them will build the whole

1181
01:23:46,159 --> 01:23:48,719
exploit just modeled from pure static

1182
01:23:48,719 --> 01:23:50,560
analysis and then throw it and it either

1183
01:23:50,560 --> 01:23:52,000
works or like to fix one thing or you

1184
01:23:52,000 --> 01:23:53,280
know there's very few

1185
01:23:53,280 --> 01:23:54,800
changes they need to make i'm one of

1186
01:23:54,800 --> 01:23:56,000
those i feel like

1187
01:23:56,000 --> 01:23:58,639
uh i'm a debugger style exploiter which

1188
01:23:58,639 --> 01:24:00,800
like i'm sloppy like i need to figure it

1189
01:24:00,800 --> 01:24:02,800
out on the fly and kind of see see it as

1190
01:24:02,800 --> 01:24:05,760
it goes no i i need the visual um

1191
01:24:05,760 --> 01:24:08,239
feedback as well yeah yeah i can relate

1192
01:24:08,239 --> 01:24:11,120
to that but then actually um uh rusty

1193
01:24:11,120 --> 01:24:13,440
who built the last challenge that we saw

1194
01:24:13,440 --> 01:24:14,719
uh is one of those he will write the

1195
01:24:14,719 --> 01:24:16,560
entire exploit and just throw it never

1196
01:24:16,560 --> 01:24:17,760
touching a debugger once and it just

1197
01:24:17,760 --> 01:24:20,000
works the first time and it's like

1198
01:24:20,000 --> 01:24:21,280
that's not fair you're not you're not

1199
01:24:21,280 --> 01:24:22,480
allowed to model the computer in your

1200
01:24:22,480 --> 01:24:24,000
head that closely you should have more

1201
01:24:24,000 --> 01:24:26,320
bugs

1202
01:24:27,280 --> 01:24:28,960
so let's see what do what do we look at

1203
01:24:28,960 --> 01:24:31,760
we're looking at uh samurai where

1204
01:24:31,760 --> 01:24:34,400
okay so we're test tracing it looks like

1205
01:24:34,400 --> 01:24:36,719
um

1206
01:24:36,719 --> 01:24:39,120
fail to open file though that that's an

1207
01:24:39,120 --> 01:24:41,280
interesting

1208
01:24:41,280 --> 01:24:45,040
response but they did read something no

1209
01:24:45,040 --> 01:24:47,440
no on uh

1210
01:24:47,440 --> 01:24:49,440
yeah so price of maps i think they have

1211
01:24:49,440 --> 01:24:51,360
problems with reading from prop self

1212
01:24:51,360 --> 01:24:52,800
maps

1213
01:24:52,800 --> 01:24:54,400
so this is maybe

1214
01:24:54,400 --> 01:24:57,400
yeah

1215
01:24:58,639 --> 01:25:01,040
so they are

1216
01:25:01,040 --> 01:25:02,800
they should have control over the mode

1217
01:25:02,800 --> 01:25:04,800
yeah if you specify the wrong mode in

1218
01:25:04,800 --> 01:25:06,880
the menu i believe

1219
01:25:06,880 --> 01:25:08,159
um

1220
01:25:08,159 --> 01:25:10,080
wow okay right so in fact this is

1221
01:25:10,080 --> 01:25:10,880
actually one of the things in our

1222
01:25:10,880 --> 01:25:12,880
testing that we ran across

1223
01:25:12,880 --> 01:25:17,280
this this in in like older um platforms

1224
01:25:17,280 --> 01:25:19,360
the the mode settings were like sloppier

1225
01:25:19,360 --> 01:25:20,480
it didn't really matter as much you

1226
01:25:20,480 --> 01:25:22,239
could like um

1227
01:25:22,239 --> 01:25:24,800
so like with mode you mean like uh for

1228
01:25:24,800 --> 01:25:27,040
the file open exactly yeah when you pass

1229
01:25:27,040 --> 01:25:28,159
in like you know is the opening for

1230
01:25:28,159 --> 01:25:29,280
reading or writing or pending or

1231
01:25:29,280 --> 01:25:30,400
whatever you know kind of changes you're

1232
01:25:30,400 --> 01:25:32,000
making to it um

1233
01:25:32,000 --> 01:25:33,360
and in the other different flags that

1234
01:25:33,360 --> 01:25:34,560
you can pass in

1235
01:25:34,560 --> 01:25:36,239
and so i think

1236
01:25:36,239 --> 01:25:38,840
so i haven't seen him looking for

1237
01:25:38,840 --> 01:25:40,800
um

1238
01:25:40,800 --> 01:25:43,120
so we're getting l trace okay so l trace

1239
01:25:43,120 --> 01:25:46,320
will show us that call to open

1240
01:25:46,320 --> 01:25:47,520
um

1241
01:25:47,520 --> 01:25:48,239
and

1242
01:25:48,239 --> 01:25:50,719
yeah we'll see if if uh

1243
01:25:50,719 --> 01:25:52,080
he catches that

1244
01:25:52,080 --> 01:25:55,639
and i'm actually looking

1245
01:25:55,760 --> 01:25:58,080
back at perfect root

1246
01:25:58,080 --> 01:26:00,400
yeah

1247
01:26:04,239 --> 01:26:05,840
okay so still looks like plumbing on on

1248
01:26:05,840 --> 01:26:09,840
the the perfect root side just kind of

1249
01:26:10,880 --> 01:26:13,360
they're parsing out the maps so they do

1250
01:26:13,360 --> 01:26:14,960
okay so they've got the map so i would

1251
01:26:14,960 --> 01:26:16,239
say perfect route is a little bit ahead

1252
01:26:16,239 --> 01:26:17,360
they're reading the map so we got it

1253
01:26:17,360 --> 01:26:19,120
working right so they were able to dump

1254
01:26:19,120 --> 01:26:20,320
that back out whereas it looks like

1255
01:26:20,320 --> 01:26:21,760
samurai is getting and

1256
01:26:21,760 --> 01:26:23,360
it's so frustrating right when it's like

1257
01:26:23,360 --> 01:26:25,600
a little little bug

1258
01:26:25,600 --> 01:26:27,600
and yeah you're just like what's going

1259
01:26:27,600 --> 01:26:28,320
on

1260
01:26:28,320 --> 01:26:30,480
and somewhere i tried to read the proxy

1261
01:26:30,480 --> 01:26:33,440
of maps but uh i had a an error again

1262
01:26:33,440 --> 01:26:34,800
and and then the

1263
01:26:34,800 --> 01:26:36,639
the screen was just blank and no mouse

1264
01:26:36,639 --> 01:26:38,000
movement for like 10 seconds i think

1265
01:26:38,000 --> 01:26:39,520
they were staring at the screen trying

1266
01:26:39,520 --> 01:26:41,280
to figure out what is wrong why can't i

1267
01:26:41,280 --> 01:26:44,560
not read uh proxy of mem at least

1268
01:26:44,560 --> 01:26:46,000
i think that at least that's my

1269
01:26:46,000 --> 01:26:47,600
interpretation of what what happened

1270
01:26:47,600 --> 01:26:48,719
there

1271
01:26:48,719 --> 01:26:49,920
yeah so i'm wondering how so i mean

1272
01:26:49,920 --> 01:26:51,679
they've got

1273
01:26:51,679 --> 01:26:53,520
i'm just trying to see where oh yeah

1274
01:26:53,520 --> 01:26:55,040
there we go there we go

1275
01:26:55,040 --> 01:26:56,560
okay yeah perfect rule is getting very

1276
01:26:56,560 --> 01:26:58,159
close now it looks like

1277
01:26:58,159 --> 01:27:01,199
um they might be already

1278
01:27:01,199 --> 01:27:03,040
the code is a bit small for me do you

1279
01:27:03,040 --> 01:27:05,360
see um how far the code is like what

1280
01:27:05,360 --> 01:27:06,800
they are trying to do

1281
01:27:06,800 --> 01:27:09,360
so they are specifically

1282
01:27:09,360 --> 01:27:11,199
trying to get out libsy and stack

1283
01:27:11,199 --> 01:27:12,960
addresses into separate variables right

1284
01:27:12,960 --> 01:27:15,040
so they're parsing out the the maps and

1285
01:27:15,040 --> 01:27:16,000
then they're going to get the base

1286
01:27:16,000 --> 01:27:18,239
address for each of those those regions

1287
01:27:18,239 --> 01:27:19,199
and they're trying to make sure so

1288
01:27:19,199 --> 01:27:20,880
they're they're already just parsing

1289
01:27:20,880 --> 01:27:22,639
maps essentially so once they've got

1290
01:27:22,639 --> 01:27:24,719
their map um

1291
01:27:24,719 --> 01:27:26,560
it should be pretty quick at that point

1292
01:27:26,560 --> 01:27:27,920
yeah this is this is definitely not one

1293
01:27:27,920 --> 01:27:29,040
i think we're gonna need sudden death

1294
01:27:29,040 --> 01:27:31,040
for they they're both

1295
01:27:31,040 --> 01:27:33,440
well on the way okay so they they know

1296
01:27:33,440 --> 01:27:35,120
the goal they yeah i mean

1297
01:27:35,120 --> 01:27:36,960
it's just technical implementation

1298
01:27:36,960 --> 01:27:40,239
struggles at this point

1299
01:27:40,960 --> 01:27:42,320
yeah and it is going to be actually i

1300
01:27:42,320 --> 01:27:44,800
look like i'm i am curious are they both

1301
01:27:44,800 --> 01:27:46,239
going to go for god override are they

1302
01:27:46,239 --> 01:27:47,840
both going to go for like a similar kind

1303
01:27:47,840 --> 01:27:49,120
of um

1304
01:27:49,120 --> 01:27:51,920
you know gadget or or once they have it

1305
01:27:51,920 --> 01:27:54,239
um i kind of get the sense actually you

1306
01:27:54,239 --> 01:27:55,920
know essentially i saw the the mention

1307
01:27:55,920 --> 01:27:57,120
of a stack

1308
01:27:57,120 --> 01:27:58,719
so it looks like we might actually see

1309
01:27:58,719 --> 01:28:01,360
like a um like a

1310
01:28:01,360 --> 01:28:04,159
some sort of stack uh exploit uh or

1311
01:28:04,159 --> 01:28:05,280
maybe

1312
01:28:05,280 --> 01:28:06,639
uh perfect who's just pulling that out

1313
01:28:06,639 --> 01:28:08,080
just just to make sure yeah maybe

1314
01:28:08,080 --> 01:28:09,760
instead of overriding

1315
01:28:09,760 --> 01:28:12,080
got they go just like for the return

1316
01:28:12,080 --> 01:28:14,880
address and then do a one gadget or

1317
01:28:14,880 --> 01:28:16,400
something yeah

1318
01:28:16,400 --> 01:28:17,360
yeah that's what that's one of the

1319
01:28:17,360 --> 01:28:18,639
things i really like about a challenge

1320
01:28:18,639 --> 01:28:19,840
like this right where it's like there's

1321
01:28:19,840 --> 01:28:21,760
an infinite number of ways to solve it

1322
01:28:21,760 --> 01:28:23,120
it doesn't like that you could you could

1323
01:28:23,120 --> 01:28:25,040
do so many different things

1324
01:28:25,040 --> 01:28:27,920
uh and then you kind of want to see like

1325
01:28:27,920 --> 01:28:29,840
okay so we're running the debugger

1326
01:28:29,840 --> 01:28:32,000
so

1327
01:28:38,800 --> 01:28:40,880
so yeah i really like how we've seen a

1328
01:28:40,880 --> 01:28:42,320
lot of teams doing this right like and

1329
01:28:42,320 --> 01:28:44,080
the the fact that like pawn tools really

1330
01:28:44,080 --> 01:28:45,840
lets you both not only switch between

1331
01:28:45,840 --> 01:28:47,600
your local uh version that you're

1332
01:28:47,600 --> 01:28:49,040
running and then throw it you know

1333
01:28:49,040 --> 01:28:51,840
remotely but also powerful break in

1334
01:28:51,840 --> 01:28:53,920
right in the debugger interactively

1335
01:28:53,920 --> 01:28:55,199
right so like you've got your script and

1336
01:28:55,199 --> 01:28:56,480
you're like okay right here actually i

1337
01:28:56,480 --> 01:28:58,159
want to stop and go ahead and break in

1338
01:28:58,159 --> 01:29:00,000
like

1339
01:29:00,000 --> 01:29:01,280
you know throwing remote versus local

1340
01:29:01,280 --> 01:29:02,880
has been around for for a long time but

1341
01:29:02,880 --> 01:29:04,639
the idea of like actually

1342
01:29:04,639 --> 01:29:05,840
specific like i used to have to pull

1343
01:29:05,840 --> 01:29:07,280
like sleeps in my shell code and then

1344
01:29:07,280 --> 01:29:08,960
attach a debugger separately like just

1345
01:29:08,960 --> 01:29:10,320
yeah writing

1346
01:29:10,320 --> 01:29:11,520
script yeah

1347
01:29:11,520 --> 01:29:13,199
right exactly particular challenge

1348
01:29:13,199 --> 01:29:15,360
exactly and this is just so much cleaner

1349
01:29:15,360 --> 01:29:16,719
to just be able to be like oh and right

1350
01:29:16,719 --> 01:29:17,760
here i wouldn't inspect the memory

1351
01:29:17,760 --> 01:29:19,520
especially like it sounds like this

1352
01:29:19,520 --> 01:29:21,120
where you're just overriding memory in

1353
01:29:21,120 --> 01:29:22,400
the process space right and you want to

1354
01:29:22,400 --> 01:29:24,800
be able to like just pause break in and

1355
01:29:24,800 --> 01:29:26,639
be like did my right work

1356
01:29:26,639 --> 01:29:28,320
did i hit the right place

1357
01:29:28,320 --> 01:29:30,800
and in a one-on-one uh fight like this

1358
01:29:30,800 --> 01:29:32,400
you know especially when they are

1359
01:29:32,400 --> 01:29:35,040
head-to-head like this every little

1360
01:29:35,040 --> 01:29:37,520
speed up you have in your process the

1361
01:29:37,520 --> 01:29:39,520
iteration process is just so much faster

1362
01:29:39,520 --> 01:29:41,920
you're just saving seconds every time

1363
01:29:41,920 --> 01:29:44,480
you have something small to check and

1364
01:29:44,480 --> 01:29:46,880
and that adds up in a challenge that's

1365
01:29:46,880 --> 01:29:49,360
just maybe 30 minutes yeah and even i

1366
01:29:49,360 --> 01:29:51,120
saw um

1367
01:29:51,120 --> 01:29:53,760
chris siegel from uh samurai uh he

1368
01:29:53,760 --> 01:29:55,920
already had his like throwing framework

1369
01:29:55,920 --> 01:29:56,880
like

1370
01:29:56,880 --> 01:29:59,280
he ca in this it is copy paste buffer so

1371
01:29:59,280 --> 01:30:00,800
like he literally had it set to go and

1372
01:30:00,800 --> 01:30:02,239
he even had like a little comment uh

1373
01:30:02,239 --> 01:30:04,320
what um i missed it i missed calling it

1374
01:30:04,320 --> 01:30:06,480
out uh on on stream but if he scrolls to

1375
01:30:06,480 --> 01:30:08,400
the top of his file again at all he put

1376
01:30:08,400 --> 01:30:09,679
like a little comment that said my

1377
01:30:09,679 --> 01:30:10,960
teammates abandoned me and they've made

1378
01:30:10,960 --> 01:30:13,360
me do live ctf help me a mommy

1379
01:30:13,360 --> 01:30:15,520
um

1380
01:30:15,520 --> 01:30:17,199
so well i think he kind of wanted to do

1381
01:30:17,199 --> 01:30:18,719
too he so he actually came up earlier

1382
01:30:18,719 --> 01:30:21,360
and was saying that he uh oh

1383
01:30:21,360 --> 01:30:22,639
where are we pulling out okay so yeah he

1384
01:30:22,639 --> 01:30:24,159
came up earlier and said

1385
01:30:24,159 --> 01:30:25,600
he was really excited about some of the

1386
01:30:25,600 --> 01:30:27,040
ones yesterday and then really concerned

1387
01:30:27,040 --> 01:30:28,159
about others he's like oh i really

1388
01:30:28,159 --> 01:30:29,840
wanted to do the very first one but i

1389
01:30:29,840 --> 01:30:31,600
did not want to do you know so it's

1390
01:30:31,600 --> 01:30:32,560
interesting that people are kind of

1391
01:30:32,560 --> 01:30:34,000
watching along in the audience like

1392
01:30:34,000 --> 01:30:35,120
thinking like what are we going to get

1393
01:30:35,120 --> 01:30:37,679
what are we going to have to solve and

1394
01:30:37,679 --> 01:30:40,159
it's it's so incredibly stressful and

1395
01:30:40,159 --> 01:30:42,000
it's it's a situation that none of these

1396
01:30:42,000 --> 01:30:44,159
players are used to yeah to

1397
01:30:44,159 --> 01:30:46,239
looking over the shoulder and you know

1398
01:30:46,239 --> 01:30:47,040
just

1399
01:30:47,040 --> 01:30:50,000
i have the my utmost respect for doing

1400
01:30:50,000 --> 01:30:52,239
this i appreciate it so much that they

1401
01:30:52,239 --> 01:30:53,840
agreed to doing this

1402
01:30:53,840 --> 01:30:56,000
um oh anybody that even tries right

1403
01:30:56,000 --> 01:30:57,679
anybody that even comes up here sits

1404
01:30:57,679 --> 01:30:59,040
down and you know you can see a little

1405
01:30:59,040 --> 01:31:00,400
bit on the camera here but just like

1406
01:31:00,400 --> 01:31:02,560
this room has like the best some of the

1407
01:31:02,560 --> 01:31:05,040
best ctf players in the world and you're

1408
01:31:05,040 --> 01:31:06,639
gonna go sit in the middle of them and

1409
01:31:06,639 --> 01:31:08,639
go one-on-one against somebody else like

1410
01:31:08,639 --> 01:31:10,080
with people standing around you looking

1411
01:31:10,080 --> 01:31:11,600
over your shoulder people watching your

1412
01:31:11,600 --> 01:31:12,719
screens like

1413
01:31:12,719 --> 01:31:14,320
yeah that it's a totally different

1414
01:31:14,320 --> 01:31:15,440
experience there are really really good

1415
01:31:15,440 --> 01:31:17,600
hackers who would not do well in this

1416
01:31:17,600 --> 01:31:19,280
like it's hard yeah and we know what

1417
01:31:19,280 --> 01:31:22,639
kind of dumb problems we always run into

1418
01:31:22,639 --> 01:31:23,840
yes

1419
01:31:23,840 --> 01:31:26,000
it could be something really dumb that

1420
01:31:26,000 --> 01:31:27,280
you need to google we had some

1421
01:31:27,280 --> 01:31:29,360
interesting google searches yesterday

1422
01:31:29,360 --> 01:31:31,679
that were just some basic searches but

1423
01:31:31,679 --> 01:31:34,400
yeah it's like um but that's what you do

1424
01:31:34,400 --> 01:31:36,719
and and you might feel embarrassed doing

1425
01:31:36,719 --> 01:31:38,400
it here on on stream but yeah it's

1426
01:31:38,400 --> 01:31:40,000
normal and what i love though and this

1427
01:31:40,000 --> 01:31:40,960
is actually one of the things i love

1428
01:31:40,960 --> 01:31:42,400
about your videos too right when you

1429
01:31:42,400 --> 01:31:44,000
show your like discovery process when

1430
01:31:44,000 --> 01:31:45,360
you show mistakes that you've made or

1431
01:31:45,360 --> 01:31:47,120
things that you've tried um and that's

1432
01:31:47,120 --> 01:31:48,400
the best part about this because we get

1433
01:31:48,400 --> 01:31:50,400
to see oh wow these people are amazing

1434
01:31:50,400 --> 01:31:52,159
they are epic both of these players are

1435
01:31:52,159 --> 01:31:54,800
far better at me at exploitation and and

1436
01:31:54,800 --> 01:31:57,280
yet you know i can i can still see and

1437
01:31:57,280 --> 01:31:58,639
learn and i can say oh okay they made

1438
01:31:58,639 --> 01:32:00,480
that mistake too i feel like it's both

1439
01:32:00,480 --> 01:32:02,239
encouraging but also

1440
01:32:02,239 --> 01:32:03,679
you also see like oh wow they're also

1441
01:32:03,679 --> 01:32:05,040
really fast also they really give their

1442
01:32:05,040 --> 01:32:06,159
tools and that's just because they've

1443
01:32:06,159 --> 01:32:08,080
practiced and they've worked at it and

1444
01:32:08,080 --> 01:32:09,440
it's achievable

1445
01:32:09,440 --> 01:32:10,960
i mean that's the most amazing thing of

1446
01:32:10,960 --> 01:32:13,040
life ctf and why i also of course like

1447
01:32:13,040 --> 01:32:15,199
my appreciation also goes out especially

1448
01:32:15,199 --> 01:32:17,199
to you i think has been carrying this a

1449
01:32:17,199 --> 01:32:18,960
lot but thanks for pulling this off

1450
01:32:18,960 --> 01:32:21,280
because being able to watch it these

1451
01:32:21,280 --> 01:32:23,360
professionals solving these challenges

1452
01:32:23,360 --> 01:32:25,280
seeing where they struggle and the

1453
01:32:25,280 --> 01:32:27,520
strategies they do it's it's

1454
01:32:27,520 --> 01:32:29,600
entertaining of course but it's also so

1455
01:32:29,600 --> 01:32:32,159
educational and uh you know my name

1456
01:32:32,159 --> 01:32:34,639
comes from because of these very early

1457
01:32:34,639 --> 01:32:36,320
life ctf that happened back in the day

1458
01:32:36,320 --> 01:32:38,960
so you know this is a special place in

1459
01:32:38,960 --> 01:32:41,679
my heart as well um to to be able to see

1460
01:32:41,679 --> 01:32:43,840
this here yeah well we're really really

1461
01:32:43,840 --> 01:32:45,600
happy to have you and i will i will be

1462
01:32:45,600 --> 01:32:48,159
clear that like i i kind of like bugged

1463
01:32:48,159 --> 01:32:49,600
a couple people into doing it but there

1464
01:32:49,600 --> 01:32:51,440
have been some serious heroes that like

1465
01:32:51,440 --> 01:32:52,400
i've only

1466
01:32:52,400 --> 01:32:53,840
worked on like one of these challenges

1467
01:32:53,840 --> 01:32:55,600
part of it like

1468
01:32:55,600 --> 01:32:57,760
a whole bunch of people on the team from

1469
01:32:57,760 --> 01:33:01,120
uh glenn and carl and uh josh that have

1470
01:33:01,120 --> 01:33:02,960
worked really really really hard and

1471
01:33:02,960 --> 01:33:04,480
done lots of challenges and lots of

1472
01:33:04,480 --> 01:33:06,560
stuff leading up to it so this has been

1473
01:33:06,560 --> 01:33:08,239
yeah this has been a blast i am seeing

1474
01:33:08,239 --> 01:33:09,840
so looking over it at perfect route yeah

1475
01:33:09,840 --> 01:33:10,639
like

1476
01:33:10,639 --> 01:33:13,199
they are pretty far they have lip c

1477
01:33:13,199 --> 01:33:15,760
bass league and they have been sh

1478
01:33:15,760 --> 01:33:17,040
offsets and everything and they've

1479
01:33:17,040 --> 01:33:18,320
actually they are building rock chains

1480
01:33:18,320 --> 01:33:19,440
so we you know we saw earlier they're

1481
01:33:19,440 --> 01:33:21,199
going after the stack and sure enough it

1482
01:33:21,199 --> 01:33:23,440
looks like that's that's their plan so

1483
01:33:23,440 --> 01:33:25,199
let's yeah at this point it seems like

1484
01:33:25,199 --> 01:33:26,639
they're just debugging their shell code

1485
01:33:26,639 --> 01:33:28,719
or their op chain um i guess everything

1486
01:33:28,719 --> 01:33:30,480
else seems to work

1487
01:33:30,480 --> 01:33:32,239
yeah that they they seem like they could

1488
01:33:32,239 --> 01:33:36,400
be real close and i see samurai over in

1489
01:33:36,400 --> 01:33:39,120
over in in ida still so that's generally

1490
01:33:39,120 --> 01:33:40,480
not a good so it depends i mean it could

1491
01:33:40,480 --> 01:33:41,520
be

1492
01:33:41,520 --> 01:33:42,480
have to wait till they pull up their

1493
01:33:42,480 --> 01:33:44,239
script again but i mean perfect rules

1494
01:33:44,239 --> 01:33:46,000
there's also opening either here all the

1495
01:33:46,000 --> 01:33:47,679
time that's true yeah you flip back and

1496
01:33:47,679 --> 01:33:49,679
forth you're right that's true

1497
01:33:49,679 --> 01:33:51,760
i i do wonder why though

1498
01:33:51,760 --> 01:33:54,000
i i also don't know the effects of

1499
01:33:54,000 --> 01:33:55,600
overwriting programming is that

1500
01:33:55,600 --> 01:33:56,719
immediately

1501
01:33:56,719 --> 01:33:58,719
visible does like how many instructions

1502
01:33:58,719 --> 01:34:00,719
does the cpu execute before like

1503
01:34:00,719 --> 01:34:03,600
caches are yeah yeah i have flashing

1504
01:34:03,600 --> 01:34:05,760
yeah i would be very worried about weird

1505
01:34:05,760 --> 01:34:07,280
side effects that happened because that

1506
01:34:07,280 --> 01:34:09,840
is like not typical like program

1507
01:34:09,840 --> 01:34:11,679
behavior you're here exactly right yeah

1508
01:34:11,679 --> 01:34:12,800
and so that is one of the things that we

1509
01:34:12,800 --> 01:34:14,719
debated on this exact thing was uh

1510
01:34:14,719 --> 01:34:17,520
dealing with flushing and um

1511
01:34:17,520 --> 01:34:20,239
you know one way to do that is to to i

1512
01:34:20,239 --> 01:34:22,320
think if if we if we keep an eye out and

1513
01:34:22,320 --> 01:34:24,320
next time they they bring it up

1514
01:34:24,320 --> 01:34:26,159
um i'm gonna look at

1515
01:34:26,159 --> 01:34:28,400
samurai real quick so samurai's got

1516
01:34:28,400 --> 01:34:31,040
business h string a system address

1517
01:34:31,040 --> 01:34:33,920
so yeah pretty far down as well yeah so

1518
01:34:33,920 --> 01:34:34,880
i think they're maybe a little bit

1519
01:34:34,880 --> 01:34:37,040
behind but like honestly very similarly

1520
01:34:37,040 --> 01:34:38,239
well but we'll see what their override

1521
01:34:38,239 --> 01:34:39,440
target is too right that i think you'll

1522
01:34:39,440 --> 01:34:40,960
see the question i think whoever gets an

1523
01:34:40,960 --> 01:34:42,960
override target to your point

1524
01:34:42,960 --> 01:34:44,880
yes cash flushing is a real issue that

1525
01:34:44,880 --> 01:34:46,320
they're going to have to they may have

1526
01:34:46,320 --> 01:34:47,520
to contend with depending on the

1527
01:34:47,520 --> 01:34:48,719
solution

1528
01:34:48,719 --> 01:34:49,679
so

1529
01:34:49,679 --> 01:34:51,840
um i i think though the the way that the

1530
01:34:51,840 --> 01:34:55,840
the script works is as soon as it um

1531
01:34:55,920 --> 01:34:58,000
as soon as it closes the file handle and

1532
01:34:58,000 --> 01:35:00,480
then the like there's a there's a retr i

1533
01:35:00,480 --> 01:35:02,239
forget exactly what it is but we'll

1534
01:35:02,239 --> 01:35:05,520
flush the cash but um

1535
01:35:05,520 --> 01:35:06,800
that is something they're gonna have to

1536
01:35:06,800 --> 01:35:08,719
worry about but that's i guess also

1537
01:35:08,719 --> 01:35:10,400
something if you have a huge knob slide

1538
01:35:10,400 --> 01:35:12,400
you don't care because at one point the

1539
01:35:12,400 --> 01:35:14,639
cash yeah will be flashed and then

1540
01:35:14,639 --> 01:35:16,560
suddenly you're not slightest there yeah

1541
01:35:16,560 --> 01:35:18,239
yep yeah that was one of the advantages

1542
01:35:18,239 --> 01:35:19,600
of that kind of approach which i i mean

1543
01:35:19,600 --> 01:35:21,199
i when i first

1544
01:35:21,199 --> 01:35:23,840
uh heard this challenge described my

1545
01:35:23,840 --> 01:35:25,280
assumption was that we would solve it

1546
01:35:25,280 --> 01:35:27,280
exactly like we're seeing on screen so i

1547
01:35:27,280 --> 01:35:28,560
do think it's interesting yeah i i

1548
01:35:28,560 --> 01:35:30,639
didn't think not slime either uh first

1549
01:35:30,639 --> 01:35:31,840
so

1550
01:35:31,840 --> 01:35:34,560
testing and testing in gdb

1551
01:35:34,560 --> 01:35:36,239
yeah this seems like they uh perfect

1552
01:35:36,239 --> 01:35:37,600
root is still striking i think with

1553
01:35:37,600 --> 01:35:39,440
parsing the maps i saw them fiddling

1554
01:35:39,440 --> 01:35:42,000
around with the the trying to leak the

1555
01:35:42,000 --> 01:35:43,760
stack value oh no he had the address

1556
01:35:43,760 --> 01:35:45,920
wrong maybe

1557
01:35:45,920 --> 01:35:49,040
yeah i it seems like yes maybe some

1558
01:35:49,040 --> 01:35:51,199
maybe you know the the maps might change

1559
01:35:51,199 --> 01:35:53,360
because of aslr like order might change

1560
01:35:53,360 --> 01:35:55,360
so maybe that breaks their

1561
01:35:55,360 --> 01:35:57,040
i don't know exactly yeah honestly well

1562
01:35:57,040 --> 01:35:58,000
it looked like they were a little

1563
01:35:58,000 --> 01:35:59,600
further ahead than samurai because of

1564
01:35:59,600 --> 01:36:02,320
like how many uh you know primitives and

1565
01:36:02,320 --> 01:36:03,679
and offsets and everything that they

1566
01:36:03,679 --> 01:36:05,440
kind of look like they had i'm not so

1567
01:36:05,440 --> 01:36:07,920
sure about the stack uh based attack

1568
01:36:07,920 --> 01:36:09,119
right like that might be a little

1569
01:36:09,119 --> 01:36:11,199
trickier um

1570
01:36:11,199 --> 01:36:13,280
and so yeah we'll see this actually

1571
01:36:13,280 --> 01:36:15,679
could be a chance for

1572
01:36:15,679 --> 01:36:16,560
uh

1573
01:36:16,560 --> 01:36:19,040
for samurai to catch up so let me look

1574
01:36:19,040 --> 01:36:21,520
over here at samurai

1575
01:36:21,520 --> 01:36:23,440
it is quite tough i mean you know the

1576
01:36:23,440 --> 01:36:25,679
stack base but uh

1577
01:36:25,679 --> 01:36:27,679
figuring out where exactly your return

1578
01:36:27,679 --> 01:36:30,400
pointer is to overwrite uh i mean you

1579
01:36:30,400 --> 01:36:32,400
you can kind of spam it with just a huge

1580
01:36:32,400 --> 01:36:34,480
pop chain kind of like a rob

1581
01:36:34,480 --> 01:36:36,800
yep return chain or whatever yeah

1582
01:36:36,800 --> 01:36:38,960
pop

1583
01:36:41,360 --> 01:36:44,000
yeah but um yeah i think it's very

1584
01:36:44,000 --> 01:36:46,000
difficult um on the stack just because

1585
01:36:46,000 --> 01:36:49,119
of how much yeah to find the right place

1586
01:36:49,119 --> 01:36:51,199
so

1587
01:36:51,199 --> 01:36:53,440
that could be quite a struggle i also

1588
01:36:53,440 --> 01:36:54,960
don't know the kind of mitigations

1589
01:36:54,960 --> 01:36:56,960
turned on you know the the the stack

1590
01:36:56,960 --> 01:36:58,239
offset kind of

1591
01:36:58,239 --> 01:37:00,239
stuff moving things around yeah i missed

1592
01:37:00,239 --> 01:37:02,560
the check stack results uh and i don't

1593
01:37:02,560 --> 01:37:04,560
remember uh some some of the challenges

1594
01:37:04,560 --> 01:37:06,400
that we we've specifically tell the

1595
01:37:06,400 --> 01:37:08,320
teams the exact compile flag that we use

1596
01:37:08,320 --> 01:37:10,960
because again for a speed live ctf kind

1597
01:37:10,960 --> 01:37:12,800
of event you want them to go as fast as

1598
01:37:12,800 --> 01:37:15,520
possible and you're not trying to to

1599
01:37:15,520 --> 01:37:16,960
make them waste time figuring that stuff

1600
01:37:16,960 --> 01:37:18,400
out

1601
01:37:18,400 --> 01:37:20,159
but i don't i don't think we did that in

1602
01:37:20,159 --> 01:37:22,159
this case and it may have been because

1603
01:37:22,159 --> 01:37:24,400
our particular exploit you know didn't

1604
01:37:24,400 --> 01:37:25,600
really matter so we didn't think about

1605
01:37:25,600 --> 01:37:26,480
that

1606
01:37:26,480 --> 01:37:27,440
um

1607
01:37:27,440 --> 01:37:29,040
and so it is actually it might be a

1608
01:37:29,040 --> 01:37:31,520
little bit harder for teams uh if

1609
01:37:31,520 --> 01:37:32,880
they're doing this more targeted attack

1610
01:37:32,880 --> 01:37:34,480
with without you know knowing which of

1611
01:37:34,480 --> 01:37:36,960
those things they can rely on so

1612
01:37:36,960 --> 01:37:40,320
we will see in fact actually i wonder if

1613
01:37:40,320 --> 01:37:41,119
i mean

1614
01:37:41,119 --> 01:37:43,119
might i think so we started a little bit

1615
01:37:43,119 --> 01:37:44,960
late normally we would be moving looking

1616
01:37:44,960 --> 01:37:46,080
at like a sudden death here soon we've

1617
01:37:46,080 --> 01:37:48,560
got a few extra minutes but um they're

1618
01:37:48,560 --> 01:37:50,560
so close and i don't even looking at

1619
01:37:50,560 --> 01:37:53,040
samurai i also see a stack variable lip

1620
01:37:53,040 --> 01:37:55,920
c bass and stack so maybe uh summarize

1621
01:37:55,920 --> 01:37:58,239
thinking about also going for or writing

1622
01:37:58,239 --> 01:38:00,320
something on the stack to be honest okay

1623
01:38:00,320 --> 01:38:03,840
so now we've got a file handle

1624
01:38:05,840 --> 01:38:07,360
oh okay there we go so we've got the

1625
01:38:07,360 --> 01:38:09,280
base for lib c

1626
01:38:09,280 --> 01:38:12,639
and that may have been

1627
01:38:15,600 --> 01:38:17,280
yeah they're they're converging you're

1628
01:38:17,280 --> 01:38:19,280
right i think on a very similar solution

1629
01:38:19,280 --> 01:38:20,560
so far

1630
01:38:20,560 --> 01:38:23,600
i also saw on uh uh was it samurai i'm

1631
01:38:23,600 --> 01:38:26,800
not sure uh looking at free hook so um

1632
01:38:26,800 --> 01:38:27,840
not

1633
01:38:27,840 --> 01:38:30,480
fh freehook so they thinking about

1634
01:38:30,480 --> 01:38:31,840
overriding

1635
01:38:31,840 --> 01:38:32,960
um you know

1636
01:38:32,960 --> 01:38:34,239
going

1637
01:38:34,239 --> 01:38:36,800
going that route uh getting um

1638
01:38:36,800 --> 01:38:40,159
redirecting the code execution um

1639
01:38:40,159 --> 01:38:42,159
not going over the stack i think i think

1640
01:38:42,159 --> 01:38:45,040
uh summer i changed their strategy

1641
01:38:45,040 --> 01:38:47,119
using trying to use freehook but i'm not

1642
01:38:47,119 --> 01:38:50,560
sure if it's called even uh

1643
01:38:50,560 --> 01:38:52,239
oh that's that with the sorry yes i

1644
01:38:52,239 --> 01:38:53,360
think i said file handle but you're

1645
01:38:53,360 --> 01:38:55,600
right for the fh was if that's freehook

1646
01:38:55,600 --> 01:38:58,080
yeah i saw them just before um they were

1647
01:38:58,080 --> 01:39:01,679
backing in in ida yeah at freehood

1648
01:39:01,679 --> 01:39:04,400
interesting so

1649
01:39:04,400 --> 01:39:07,920
or is that called always at the end like

1650
01:39:07,920 --> 01:39:10,880
when when the program exits from

1651
01:39:10,880 --> 01:39:12,800
is that only happening when free is

1652
01:39:12,800 --> 01:39:14,400
really cool only if there was only if

1653
01:39:14,400 --> 01:39:15,600
there was something allocated i would

1654
01:39:15,600 --> 01:39:18,159
think unless the unless like libsy in it

1655
01:39:18,159 --> 01:39:21,119
does some allocations uh in which case

1656
01:39:21,119 --> 01:39:22,400
maybe

1657
01:39:22,400 --> 01:39:24,320
yeah i don't know this is

1658
01:39:24,320 --> 01:39:25,760
oh man just look at all those like

1659
01:39:25,760 --> 01:39:27,920
pointers up top i wonder if they tried

1660
01:39:27,920 --> 01:39:29,760
something else first and they couldn't

1661
01:39:29,760 --> 01:39:31,600
do it because maybe of caching it didn't

1662
01:39:31,600 --> 01:39:33,280
trigger or something then they

1663
01:39:33,280 --> 01:39:34,880
started going for the

1664
01:39:34,880 --> 01:39:37,040
for for something else i wonder what the

1665
01:39:37,040 --> 01:39:39,280
reason was oh actually okay so i'm

1666
01:39:39,280 --> 01:39:40,719
actually back over here on perfect route

1667
01:39:40,719 --> 01:39:41,920
and we're seeing a number of interesting

1668
01:39:41,920 --> 01:39:43,280
guests so we've got like a pop rdi

1669
01:39:43,280 --> 01:39:45,440
gadget we've got a business h

1670
01:39:45,440 --> 01:39:47,520
block chain

1671
01:39:47,520 --> 01:39:51,119
yeah this is this is starting to look uh

1672
01:39:51,119 --> 01:39:53,040
um

1673
01:39:53,040 --> 01:39:55,199
man yeah this is this is just this is

1674
01:39:55,199 --> 01:39:56,320
kind of a slog here now they're just

1675
01:39:56,320 --> 01:39:57,600
trying to figure out like who's gonna

1676
01:39:57,600 --> 01:39:59,760
get something working first

1677
01:39:59,760 --> 01:40:02,320
um open file proc self mem they are

1678
01:40:02,320 --> 01:40:04,880
writing now so i think they are so um

1679
01:40:04,880 --> 01:40:06,560
confident now that the parsing of the

1680
01:40:06,560 --> 01:40:08,480
maps and the offsets and everything is

1681
01:40:08,480 --> 01:40:11,119
now fitting and they i think they feel

1682
01:40:11,119 --> 01:40:12,719
like they can go for their actual memory

1683
01:40:12,719 --> 01:40:14,080
right now it's it's funny because i mean

1684
01:40:14,080 --> 01:40:15,760
they both within maybe 30 seconds have

1685
01:40:15,760 --> 01:40:17,440
you either both changed their payloads

1686
01:40:17,440 --> 01:40:20,000
to write to them the memory right so

1687
01:40:20,000 --> 01:40:21,920
they were both uh pulling everything out

1688
01:40:21,920 --> 01:40:23,199
and now they both just switched to

1689
01:40:23,199 --> 01:40:24,239
writing

1690
01:40:24,239 --> 01:40:26,639
so we'll find out who has like the least

1691
01:40:26,639 --> 01:40:29,040
bugs

1692
01:40:29,440 --> 01:40:33,638
so looking at perfect root

1693
01:40:39,440 --> 01:40:42,239
yeah still constantly some python

1694
01:40:42,239 --> 01:40:44,960
exceptions uh still like and and there's

1695
01:40:44,960 --> 01:40:46,080
and now

1696
01:40:46,080 --> 01:40:47,840
perfect root has a problem their script

1697
01:40:47,840 --> 01:40:50,000
parsing maps just runs for like five

1698
01:40:50,000 --> 01:40:51,840
seconds before they see if they if the

1699
01:40:51,840 --> 01:40:54,159
next stage has an error and that just

1700
01:40:54,159 --> 01:40:56,480
costs time yeah every time 10 seconds

1701
01:40:56,480 --> 01:40:58,400
it's just yeah that's a good that's a

1702
01:40:58,400 --> 01:41:00,400
good point

1703
01:41:00,400 --> 01:41:02,000
yeah and this obviously could debug this

1704
01:41:02,000 --> 01:41:04,480
more with gdb local oh oh okay hold on

1705
01:41:04,480 --> 01:41:05,840
they're copying out the ip address

1706
01:41:05,840 --> 01:41:06,800
they're trying they're getting ready to

1707
01:41:06,800 --> 01:41:08,080
throw the remote

1708
01:41:08,080 --> 01:41:09,600
they just okay so let's look at let's

1709
01:41:09,600 --> 01:41:11,520
keep an eye perfect here yeah let's keep

1710
01:41:11,520 --> 01:41:14,239
an eye perfect route

1711
01:41:16,800 --> 01:41:18,400
i mean if usually you're ready to throw

1712
01:41:18,400 --> 01:41:19,760
remotely

1713
01:41:19,760 --> 01:41:23,360
you think you think you're about done

1714
01:41:28,960 --> 01:41:33,159
and again still looking in idaho

1715
01:41:45,199 --> 01:41:48,080
yeah it's it's i i think yeah i mean

1716
01:41:48,080 --> 01:41:49,520
if you switch to remote you think you're

1717
01:41:49,520 --> 01:41:50,960
close right like there's no reason to

1718
01:41:50,960 --> 01:41:52,560
like slow yourself down with a remote

1719
01:41:52,560 --> 01:41:53,920
and unless

1720
01:41:53,920 --> 01:41:55,840
i mean except maybe i i think it might

1721
01:41:55,840 --> 01:41:58,639
sense if you if you did your parsing

1722
01:41:58,639 --> 01:42:00,400
locally you want to check oh does your

1723
01:42:00,400 --> 01:42:02,960
maps parsing work remotely as well yeah

1724
01:42:02,960 --> 01:42:04,480
maybe just a sanity check if like

1725
01:42:04,480 --> 01:42:06,159
they're on the right path exact that

1726
01:42:06,159 --> 01:42:08,320
could be

1727
01:42:08,320 --> 01:42:09,920
but i mean they could have done it

1728
01:42:09,920 --> 01:42:11,520
previously they are already at the next

1729
01:42:11,520 --> 01:42:13,280
stage so

1730
01:42:13,280 --> 01:42:15,040
good question i would have also thought

1731
01:42:15,040 --> 01:42:16,159
that they are

1732
01:42:16,159 --> 01:42:17,679
feeling pretty confident now because

1733
01:42:17,679 --> 01:42:19,440
they they were working on on the right

1734
01:42:19,440 --> 01:42:20,960
yeah but but looking at it i'm not i'm

1735
01:42:20,960 --> 01:42:22,960
not so sure it is so funny to me though

1736
01:42:22,960 --> 01:42:24,400
too how just even watching some screen

1737
01:42:24,400 --> 01:42:25,280
especially when you're kind of going

1738
01:42:25,280 --> 01:42:26,719
back and forth

1739
01:42:26,719 --> 01:42:29,119
it's really hard to get a sense for like

1740
01:42:29,119 --> 01:42:31,040
how far along they are like you think

1741
01:42:31,040 --> 01:42:32,400
you understand and then suddenly they're

1742
01:42:32,400 --> 01:42:33,360
done you're like wait a minute or you

1743
01:42:33,360 --> 01:42:34,639
think that they're you know we saw it

1744
01:42:34,639 --> 01:42:37,040
yesterday we were looking at one stream

1745
01:42:37,040 --> 01:42:39,199
because we had the feeling they were so

1746
01:42:39,199 --> 01:42:40,960
far ahead and they might be able to pull

1747
01:42:40,960 --> 01:42:43,520
it off suddenly the winner message pops

1748
01:42:43,520 --> 01:42:45,280
up and we realized wait the other team

1749
01:42:45,280 --> 01:42:47,679
just won yeah uh yeah that's exactly

1750
01:42:47,679 --> 01:42:51,360
that's so quick quickly

1751
01:42:51,360 --> 01:42:53,119
all right so uh we did have a glance

1752
01:42:53,119 --> 01:42:56,080
there briefly of okay so samurai's uh

1753
01:42:56,080 --> 01:42:58,320
script

1754
01:42:58,320 --> 01:42:59,920
invalid choices yeah so they're still

1755
01:42:59,920 --> 01:43:01,679
just kind of working with the the

1756
01:43:01,679 --> 01:43:03,520
plumbing of making sure that all of

1757
01:43:03,520 --> 01:43:04,880
their

1758
01:43:04,880 --> 01:43:06,960
um and and that is that's the stuff

1759
01:43:06,960 --> 01:43:09,199
where nerves will get you right like the

1760
01:43:09,199 --> 01:43:10,800
the little like you're parsing of the

1761
01:43:10,800 --> 01:43:12,880
text you're sending of the data is it a

1762
01:43:12,880 --> 01:43:14,800
star is it an int did i hex encode it

1763
01:43:14,800 --> 01:43:16,719
did i not like that's the stuff

1764
01:43:16,719 --> 01:43:18,800
that like oh just like especially when

1765
01:43:18,800 --> 01:43:20,159
you're under fire like

1766
01:43:20,159 --> 01:43:21,600
yeah yeah yeah

1767
01:43:21,600 --> 01:43:24,080
i i the scripts can get quite ugly

1768
01:43:24,080 --> 01:43:25,199
parsing

1769
01:43:25,199 --> 01:43:27,679
leaking values parsing the response text

1770
01:43:27,679 --> 01:43:29,760
and stuff i mean pawn tools makes it

1771
01:43:29,760 --> 01:43:33,760
very nice for the general menu work yeah

1772
01:43:33,760 --> 01:43:34,960
which which almost all of these have

1773
01:43:34,960 --> 01:43:36,800
been right like all the livestreams is

1774
01:43:36,800 --> 01:43:38,400
like very straightforward like here's

1775
01:43:38,400 --> 01:43:40,159
some menus do your thing

1776
01:43:40,159 --> 01:43:42,080
yeah but then you have something like

1777
01:43:42,080 --> 01:43:44,000
maps and then uh

1778
01:43:44,000 --> 01:43:46,320
you you write your custom ugly python

1779
01:43:46,320 --> 01:43:49,119
string splitting whatever and then i

1780
01:43:49,119 --> 01:43:50,239
don't know

1781
01:43:50,239 --> 01:43:52,000
a small thing changes and it throws

1782
01:43:52,000 --> 01:43:54,639
everything thing off

1783
01:43:54,639 --> 01:43:56,880
so we are coming up on a time where we

1784
01:43:56,880 --> 01:43:58,159
could consider giving a hint or

1785
01:43:58,159 --> 01:43:59,440
something but i don't know if we want to

1786
01:43:59,440 --> 01:44:02,759
i mean i think

1787
01:44:10,159 --> 01:44:12,719
oh i think i lost audio

1788
01:44:12,719 --> 01:44:14,000
oh no sorry i'm just listening for a

1789
01:44:14,000 --> 01:44:15,760
second i was like yeah i was like so so

1790
01:44:15,760 --> 01:44:18,320
carl and i were discussing uh off

1791
01:44:18,320 --> 01:44:19,280
off

1792
01:44:19,280 --> 01:44:21,280
uh mike whether

1793
01:44:21,280 --> 01:44:22,960
uh whether we want to give a hint and if

1794
01:44:22,960 --> 01:44:24,560
we do give a hint

1795
01:44:24,560 --> 01:44:25,440
um

1796
01:44:25,440 --> 01:44:27,600
i think the the the biggest thing that's

1797
01:44:27,600 --> 01:44:29,760
that's yeah that's basically tripping at

1798
01:44:29,760 --> 01:44:31,840
both of these uh players

1799
01:44:31,840 --> 01:44:33,679
is that they just assumed by default of

1800
01:44:33,679 --> 01:44:35,040
course the nx is on that's why you're

1801
01:44:35,040 --> 01:44:37,040
seeing the stack overwrite right so they

1802
01:44:37,040 --> 01:44:39,360
didn't they didn't even consider

1803
01:44:39,360 --> 01:44:41,280
just blowing away some code

1804
01:44:41,280 --> 01:44:44,400
uh and writing some shell code directly

1805
01:44:44,400 --> 01:44:45,760
because

1806
01:44:45,760 --> 01:44:48,159
yeah

1807
01:44:48,159 --> 01:44:51,920
i mean proc self mem is not subject to

1808
01:44:51,920 --> 01:44:52,800
uh

1809
01:44:52,800 --> 01:44:54,560
right protection right like you can

1810
01:44:54,560 --> 01:44:57,040
overwrite your so so you program memory

1811
01:44:57,040 --> 01:44:58,719
but they might not realize this because

1812
01:44:58,719 --> 01:45:00,800
they are so used to well it's modified

1813
01:45:00,800 --> 01:45:02,800
it's not it's not that even it's if even

1814
01:45:02,800 --> 01:45:03,679
if you

1815
01:45:03,679 --> 01:45:05,119
um

1816
01:45:05,119 --> 01:45:07,600
if you modify it like where are you

1817
01:45:07,600 --> 01:45:09,760
writing and is what your is the place

1818
01:45:09,760 --> 01:45:11,280
that you're writing into like

1819
01:45:11,280 --> 01:45:12,480
if you not slide through something

1820
01:45:12,480 --> 01:45:14,000
that's not executable you see yourself

1821
01:45:14,000 --> 01:45:16,320
saying like if you do a big slide and

1822
01:45:16,320 --> 01:45:18,560
part of it was mark 10x it would stop it

1823
01:45:18,560 --> 01:45:19,679
and so you wouldn't be able to use that

1824
01:45:19,679 --> 01:45:21,040
reliably and it'd be harder to kind of

1825
01:45:21,040 --> 01:45:22,320
target your stuff

1826
01:45:22,320 --> 01:45:25,360
so maybe you still need maps then to uh

1827
01:45:25,360 --> 01:45:27,119
limit your that's true that's true

1828
01:45:27,119 --> 01:45:28,560
that's true maps maps is actually going

1829
01:45:28,560 --> 01:45:30,960
to give you all your segmentation so it

1830
01:45:30,960 --> 01:45:32,480
would give you that

1831
01:45:32,480 --> 01:45:33,360
um

1832
01:45:33,360 --> 01:45:35,520
yeah i mean but again like this this

1833
01:45:35,520 --> 01:45:38,880
approach should be possible

1834
01:45:38,880 --> 01:45:40,639
uh so we i sorry for missing we had a

1835
01:45:40,639 --> 01:45:42,800
couple chat messages oh yeah so so

1836
01:45:42,800 --> 01:45:44,880
roxanne is mentioning uh imagine if this

1837
01:45:44,880 --> 01:45:47,280
was arm with an instruction cache yeah

1838
01:45:47,280 --> 01:45:50,000
uh caching uh and like that where you

1839
01:45:50,000 --> 01:45:52,400
have split caches can be especially

1840
01:45:52,400 --> 01:45:54,080
especially annoying

1841
01:45:54,080 --> 01:45:55,840
um honestly if we had done that for

1842
01:45:55,840 --> 01:45:57,360
ictif we probably would have built in

1843
01:45:57,360 --> 01:45:59,199
some cash flush like menu option like

1844
01:45:59,199 --> 01:46:00,400
literally just something that's like

1845
01:46:00,400 --> 01:46:01,280
flush

1846
01:46:01,280 --> 01:46:02,400
um

1847
01:46:02,400 --> 01:46:05,679
that would have done it for them

1848
01:46:06,400 --> 01:46:08,639
uh and also the comments they made

1849
01:46:08,639 --> 01:46:10,639
earlier was that even printf or scanf

1850
01:46:10,639 --> 01:46:13,040
can do allocations for big inputs and so

1851
01:46:13,040 --> 01:46:15,280
free free is a pretty good target to go

1852
01:46:15,280 --> 01:46:17,199
after so that's a that's a great point

1853
01:46:17,199 --> 01:46:18,639
even if the

1854
01:46:18,639 --> 01:46:21,119
the program like ostensibly didn't do it

1855
01:46:21,119 --> 01:46:23,119
even you know just having a bunch of

1856
01:46:23,119 --> 01:46:24,719
printups or other things in there might

1857
01:46:24,719 --> 01:46:26,639
scan apps might have might have

1858
01:46:26,639 --> 01:46:28,800
triggered it

1859
01:46:28,800 --> 01:46:31,040
oh they were trying to check if their

1860
01:46:31,040 --> 01:46:32,639
shell works perfect root they were just

1861
01:46:32,639 --> 01:46:36,560
typing ls and it didn't work

1862
01:46:37,119 --> 01:46:38,560
oh so it is

1863
01:46:38,560 --> 01:46:40,239
they're checking if their soft script

1864
01:46:40,239 --> 01:46:42,320
works now and it's got to go through

1865
01:46:42,320 --> 01:46:46,440
let's go through paused

1866
01:46:59,679 --> 01:47:01,760
difficult to say oh so they were they

1867
01:47:01,760 --> 01:47:03,679
were actually getting a bunch of nulls

1868
01:47:03,679 --> 01:47:05,520
so the return whatever yeah i just saw a

1869
01:47:05,520 --> 01:47:07,199
bunch of like you know the ad whatever

1870
01:47:07,199 --> 01:47:09,199
uh disassembly which means that you've

1871
01:47:09,199 --> 01:47:11,440
you've landed on a run of null bytes uh

1872
01:47:11,440 --> 01:47:13,360
that your debugger is um triggering

1873
01:47:13,360 --> 01:47:16,000
exception on

1874
01:47:16,400 --> 01:47:19,760
so they're real close like they're

1875
01:47:19,760 --> 01:47:22,320
they're trying to align things looking

1876
01:47:22,320 --> 01:47:26,000
back over at samurai 2.

1877
01:47:27,440 --> 01:47:29,280
i mean hitting the correct offset on the

1878
01:47:29,280 --> 01:47:31,760
stack is pretty difficult without a red

1879
01:47:31,760 --> 01:47:35,119
slide because yeah of the environment

1880
01:47:35,119 --> 01:47:36,400
you have all these problems that you

1881
01:47:36,400 --> 01:47:38,159
have with regular like old-school buffer

1882
01:47:38,159 --> 01:47:40,719
overflows yeah just like just username

1883
01:47:40,719 --> 01:47:43,199
um being different right can you know a

1884
01:47:43,199 --> 01:47:45,440
longer sort of username can throw it off

1885
01:47:45,440 --> 01:47:47,920
all that stuff will

1886
01:47:47,920 --> 01:47:50,480
uh looks like a typo there in the script

1887
01:47:50,480 --> 01:47:51,760
yeah there we go

1888
01:47:51,760 --> 01:47:53,600
um

1889
01:47:53,600 --> 01:47:55,199
okay so so

1890
01:47:55,199 --> 01:47:57,440
yeah i i don't know i do think perfect

1891
01:47:57,440 --> 01:48:00,000
route feels a little closer to me but

1892
01:48:00,000 --> 01:48:02,080
um

1893
01:48:02,080 --> 01:48:05,199
yeah they've did so at the start for me

1894
01:48:05,199 --> 01:48:06,880
as well and then suddenly somewhere i

1895
01:48:06,880 --> 01:48:08,400
was there

1896
01:48:08,400 --> 01:48:11,920
parsing maps as well so yeah yeah i mean

1897
01:48:11,920 --> 01:48:14,400
it feels that way i agree but uh i i got

1898
01:48:14,400 --> 01:48:16,800
deceived too many times already exactly

1899
01:48:16,800 --> 01:48:18,639
right only few matches

1900
01:48:18,639 --> 01:48:21,280
i know i don't even want to even see

1901
01:48:21,280 --> 01:48:24,000
it's fun to guess okay so where are we

1902
01:48:24,000 --> 01:48:26,000
breaking are we still in

1903
01:48:26,000 --> 01:48:27,360
oh man the other thing that's

1904
01:48:27,360 --> 01:48:28,719
interesting too is that uh we talked

1905
01:48:28,719 --> 01:48:30,400
about next year we want to have like a

1906
01:48:30,400 --> 01:48:31,920
pause button right so we want to go to

1907
01:48:31,920 --> 01:48:33,920
like on just on our side

1908
01:48:33,920 --> 01:48:35,520
freeze the frame when they're looking at

1909
01:48:35,520 --> 01:48:37,600
like a debugger thing and because it's

1910
01:48:37,600 --> 01:48:38,880
so hard to keep up with the things that

1911
01:48:38,880 --> 01:48:40,320
they're looking at because they're going

1912
01:48:40,320 --> 01:48:41,840
as fast as possible and they know their

1913
01:48:41,840 --> 01:48:43,679
tools they know their layout

1914
01:48:43,679 --> 01:48:46,080
i was just talking to color because when

1915
01:48:46,080 --> 01:48:46,880
you

1916
01:48:46,880 --> 01:48:49,280
go and break between the challenges i on

1917
01:48:49,280 --> 01:48:51,360
my stream had the time to go back do the

1918
01:48:51,360 --> 01:48:53,679
freeze do the analysis and while i was

1919
01:48:53,679 --> 01:48:55,600
doing the commentary with kali like i

1920
01:48:55,600 --> 01:48:58,159
had no clue what was happening it went

1921
01:48:58,159 --> 01:49:00,320
all just too fast it really being able

1922
01:49:00,320 --> 01:49:02,639
then to use the time in between

1923
01:49:02,639 --> 01:49:04,639
slowly looking at the solutions the last

1924
01:49:04,639 --> 01:49:06,800
moments and so forth like that analysis

1925
01:49:06,800 --> 01:49:08,800
makes sense so so my suggestion actually

1926
01:49:08,800 --> 01:49:11,440
would be not to pause during i mean oh

1927
01:49:11,440 --> 01:49:12,880
yeah yeah it's more of like more of like

1928
01:49:12,880 --> 01:49:16,000
a recap yeah yeah like to have analysts

1929
01:49:16,000 --> 01:49:18,159
like coming in uh in between the matches

1930
01:49:18,159 --> 01:49:21,280
and and looking more precisely at those

1931
01:49:21,280 --> 01:49:22,800
interesting moments so so that's

1932
01:49:22,800 --> 01:49:24,400
actually it's interesting note one of

1933
01:49:24,400 --> 01:49:26,480
the when we tried this so i did this i

1934
01:49:26,480 --> 01:49:29,280
guess five years ago we we did a version

1935
01:49:29,280 --> 01:49:31,440
love live ctf kind of at uh defcon

1936
01:49:31,440 --> 01:49:33,440
finals when it was uh legit yes running

1937
01:49:33,440 --> 01:49:35,119
it and

1938
01:49:35,119 --> 01:49:37,040
uh we i messed up the audio which is

1939
01:49:37,040 --> 01:49:38,560
what kind of ruined ruin ruined the

1940
01:49:38,560 --> 01:49:40,159
whole the whole video unfortunately but

1941
01:49:40,159 --> 01:49:42,000
we had four players much more like pony

1942
01:49:42,000 --> 01:49:43,920
racing where we had four of them and we

1943
01:49:43,920 --> 01:49:45,360
knew that like

1944
01:49:45,360 --> 01:49:47,119
you know two people on camera trying to

1945
01:49:47,119 --> 01:49:49,360
watch four people is impossible and so

1946
01:49:49,360 --> 01:49:50,560
what we actually did was we had a

1947
01:49:50,560 --> 01:49:53,920
dedicated analyst watching every screen

1948
01:49:53,920 --> 01:49:55,599
and then they we had like an irc chat

1949
01:49:55,599 --> 01:49:57,599
that the the commentators uh were

1950
01:49:57,599 --> 01:49:59,360
reading and so someone would say hey

1951
01:49:59,360 --> 01:50:01,360
team so and so is doing such and such or

1952
01:50:01,360 --> 01:50:02,719
they miss this or they're making

1953
01:50:02,719 --> 01:50:03,760
progress in this or oh they're really

1954
01:50:03,760 --> 01:50:06,400
close and so we could see their summary

1955
01:50:06,400 --> 01:50:08,480
relay it to the to the stream but like

1956
01:50:08,480 --> 01:50:10,400
it takes so many people

1957
01:50:10,400 --> 01:50:12,239
and even then it's still so hard to like

1958
01:50:12,239 --> 01:50:13,520
to catch up because like yeah not being

1959
01:50:13,520 --> 01:50:14,719
able to pause

1960
01:50:14,719 --> 01:50:16,080
and you know take a second when they

1961
01:50:16,080 --> 01:50:17,360
when they flip to something so you can

1962
01:50:17,360 --> 01:50:19,040
kind of follow it's it's still it's

1963
01:50:19,040 --> 01:50:20,639
still tough

1964
01:50:20,639 --> 01:50:22,560
but that's what what i'm doing here the

1965
01:50:22,560 --> 01:50:24,080
cool thing about the youtube chat is

1966
01:50:24,080 --> 01:50:26,400
that and i encourage everybody on uh

1967
01:50:26,400 --> 01:50:28,000
watching doing this as well you can

1968
01:50:28,000 --> 01:50:30,400
pause the youtube stream and don't worry

1969
01:50:30,400 --> 01:50:31,920
about missing something because then you

1970
01:50:31,920 --> 01:50:34,080
can continue watching

1971
01:50:34,080 --> 01:50:36,480
set it on 1.5 speed and in no time you

1972
01:50:36,480 --> 01:50:38,560
caught up again with the stream so so if

1973
01:50:38,560 --> 01:50:39,679
if there's something happening

1974
01:50:39,679 --> 01:50:40,960
interesting on stream and you want to

1975
01:50:40,960 --> 01:50:42,560
look more closely at the code that they

1976
01:50:42,560 --> 01:50:44,960
are writing or at the disassembly uh

1977
01:50:44,960 --> 01:50:46,480
don't hesitate to pause and then set the

1978
01:50:46,480 --> 01:50:48,639
speed to 1.5 and catch up with the live

1979
01:50:48,639 --> 01:50:50,000
streaming that's a really good

1980
01:50:50,000 --> 01:50:51,920
suggestion yeah i really like that and

1981
01:50:51,920 --> 01:50:53,440
or even you can even watch a normal

1982
01:50:53,440 --> 01:50:54,960
speed and then when we break between

1983
01:50:54,960 --> 01:50:56,560
matches just just skip forward and go

1984
01:50:56,560 --> 01:50:58,960
live then too yeah those are both um

1985
01:50:58,960 --> 01:51:01,920
both both perfect all right so we are

1986
01:51:01,920 --> 01:51:03,840
definitely coming up on on longer than

1987
01:51:03,840 --> 01:51:06,560
we were hoping to run uh but dad they

1988
01:51:06,560 --> 01:51:08,800
have been struggling very long on on

1989
01:51:08,800 --> 01:51:10,320
they they all they both know the

1990
01:51:10,320 --> 01:51:12,159
solution that's really just technical

1991
01:51:12,159 --> 01:51:14,400
debugging issues

1992
01:51:14,400 --> 01:51:16,080
so so one option is i think we

1993
01:51:16,080 --> 01:51:18,000
definitely need to give them a hint

1994
01:51:18,000 --> 01:51:19,679
um so i'm going gonna let the production

1995
01:51:19,679 --> 01:51:22,960
crew figure out a hint uh for for us uh

1996
01:51:22,960 --> 01:51:24,480
and propose it

1997
01:51:24,480 --> 01:51:26,480
um so let the the two of them talk it

1998
01:51:26,480 --> 01:51:27,280
over

1999
01:51:27,280 --> 01:51:28,639
um because i think i think they need a

2000
01:51:28,639 --> 01:51:29,599
hint

2001
01:51:29,599 --> 01:51:31,920
my guess is will be something around so

2002
01:51:31,920 --> 01:51:34,400
part of the problem though is it good

2003
01:51:34,400 --> 01:51:35,760
i mean they they know the solution so

2004
01:51:35,760 --> 01:51:37,280
it's probably the hint more in what

2005
01:51:37,280 --> 01:51:40,159
makes it more reliable maybe hinting at

2006
01:51:40,159 --> 01:51:42,320
uh the the knob slide or something

2007
01:51:42,320 --> 01:51:44,080
that's that's exactly what i'm thinking

2008
01:51:44,080 --> 01:51:45,840
yeah just

2009
01:51:45,840 --> 01:51:48,719
letting them know that by the way like

2010
01:51:48,719 --> 01:51:50,320
you don't have to go after the stack

2011
01:51:50,320 --> 01:51:52,960
right like that's uh because especially

2012
01:51:52,960 --> 01:51:54,320
because they're both doing the same

2013
01:51:54,320 --> 01:51:55,920
thing right do we both see them trying

2014
01:51:55,920 --> 01:51:58,639
to do something with with a stack

2015
01:51:58,639 --> 01:52:00,960
based exploit

2016
01:52:00,960 --> 01:52:02,560
and that's definitely i think harder

2017
01:52:02,560 --> 01:52:04,400
mode uh if one of them had gotten lucky

2018
01:52:04,400 --> 01:52:06,400
or not not targeted that way

2019
01:52:06,400 --> 01:52:08,480
we uh might have seen a faster solution

2020
01:52:08,480 --> 01:52:10,400
but

2021
01:52:10,400 --> 01:52:12,320
yeah but but it's still interesting that

2022
01:52:12,320 --> 01:52:14,800
uh both are struggling at this point

2023
01:52:14,800 --> 01:52:16,639
with the same strategy which tells me

2024
01:52:16,639 --> 01:52:18,719
that that strategy is just kind of like

2025
01:52:18,719 --> 01:52:21,199
unreliable or has very unpredictable

2026
01:52:21,199 --> 01:52:22,080
weird

2027
01:52:22,080 --> 01:52:24,960
behaviors which throws off both of them

2028
01:52:24,960 --> 01:52:27,040
it's not that one of them is like bad at

2029
01:52:27,040 --> 01:52:28,639
coding or something absolutely a person

2030
01:52:28,639 --> 01:52:31,199
just pulls it off yeah there's some just

2031
01:52:31,199 --> 01:52:33,360
they both took the more difficult route

2032
01:52:33,360 --> 01:52:35,199
uh yeah through the binary and that's

2033
01:52:35,199 --> 01:52:36,719
and that's the thing is the the only

2034
01:52:36,719 --> 01:52:38,560
downside so sometimes when there's a

2035
01:52:38,560 --> 01:52:40,800
very constrained exploit there's only

2036
01:52:40,800 --> 01:52:42,159
one possible way through it that can

2037
01:52:42,159 --> 01:52:43,360
land it and actually even though it's

2038
01:52:43,360 --> 01:52:44,719
maybe harder

2039
01:52:44,719 --> 01:52:45,520
um

2040
01:52:45,520 --> 01:52:47,040
sometimes it's easier because you know

2041
01:52:47,040 --> 01:52:48,080
every step along the way you know

2042
01:52:48,080 --> 01:52:49,520
exactly what you're doing

2043
01:52:49,520 --> 01:52:53,920
the more options you have i feel like uh

2044
01:52:54,000 --> 01:52:56,159
yeah it's like

2045
01:52:56,159 --> 01:52:58,639
either either you imagine a plane and

2046
01:52:58,639 --> 01:53:00,159
you know exactly the rings you need to

2047
01:53:00,159 --> 01:53:02,719
fly through and yeah rings are small but

2048
01:53:02,719 --> 01:53:04,560
you know if you miss them you crash but

2049
01:53:04,560 --> 01:53:07,360
i mean you know the path or versus just

2050
01:53:07,360 --> 01:53:10,159
an open field and you need to find the

2051
01:53:10,159 --> 01:53:12,639
destination but yeah you don't see the

2052
01:53:12,639 --> 01:53:14,320
direction really yeah that can be more

2053
01:53:14,320 --> 01:53:15,520
confusing because you just feel like

2054
01:53:15,520 --> 01:53:17,040
well i could go anywhere who knows where

2055
01:53:17,040 --> 01:53:18,719
it could possibly be and this one's kind

2056
01:53:18,719 --> 01:53:20,400
of in between because at least

2057
01:53:20,400 --> 01:53:22,080
finding the vulnerability is very very

2058
01:53:22,080 --> 01:53:23,360
easy there's really you know it's built

2059
01:53:23,360 --> 01:53:25,199
in it's just a vulnerable service but

2060
01:53:25,199 --> 01:53:27,280
the question then is yeah but which path

2061
01:53:27,280 --> 01:53:28,480
do you take to exploit it because there

2062
01:53:28,480 --> 01:53:30,560
are you know several different ways you

2063
01:53:30,560 --> 01:53:31,520
could do it

2064
01:53:31,520 --> 01:53:33,440
but i find this also a great example of

2065
01:53:33,440 --> 01:53:35,679
like real world security work often

2066
01:53:35,679 --> 01:53:38,560
times it's easy to find sometimes

2067
01:53:38,560 --> 01:53:39,840
it's often hard to find bugs but

2068
01:53:39,840 --> 01:53:41,760
sometimes it's easy to find bugs but

2069
01:53:41,760 --> 01:53:43,760
then really exploiting it might be the

2070
01:53:43,760 --> 01:53:46,000
majority of the time and here

2071
01:53:46,000 --> 01:53:48,239
i mean time wise we have maybe one

2072
01:53:48,239 --> 01:53:50,320
minute finding the bug and yeah you know

2073
01:53:50,320 --> 01:53:52,639
how how far we are in we have 45 minutes

2074
01:53:52,639 --> 01:53:54,960
or so into trying to write the exploit

2075
01:53:54,960 --> 01:53:55,840
for it

2076
01:53:55,840 --> 01:53:58,800
um it's crazy what kind of a time it's

2077
01:53:58,800 --> 01:54:00,800
necessary maybe to develop something

2078
01:54:00,800 --> 01:54:02,239
like this so it looks like we have a

2079
01:54:02,239 --> 01:54:03,840
hint proposed i'm going to take it from

2080
01:54:03,840 --> 01:54:05,840
the production team here let me i want

2081
01:54:05,840 --> 01:54:07,920
to see the hints so i can i can read it

2082
01:54:07,920 --> 01:54:09,280
to chat so the hint we're going to give

2083
01:54:09,280 --> 01:54:10,159
them

2084
01:54:10,159 --> 01:54:12,239
is proc self mem does not care about

2085
01:54:12,239 --> 01:54:13,760
segment permissions

2086
01:54:13,760 --> 01:54:16,000
so we're we're telling them you can

2087
01:54:16,000 --> 01:54:18,080
overwrite directly into something that

2088
01:54:18,080 --> 01:54:21,119
would normally not be writable right so

2089
01:54:21,119 --> 01:54:22,960
that could be a good hit i really wonder

2090
01:54:22,960 --> 01:54:25,440
if that's like their mental model that

2091
01:54:25,440 --> 01:54:26,480
could be

2092
01:54:26,480 --> 01:54:28,080
it you know it's interesting some of

2093
01:54:28,080 --> 01:54:30,239
them you know it's entirely possible

2094
01:54:30,239 --> 01:54:31,360
they realize that and they just thought

2095
01:54:31,360 --> 01:54:32,880
this would be easier more reliable and

2096
01:54:32,880 --> 01:54:35,040
they once you once you go down that that

2097
01:54:35,040 --> 01:54:36,480
path you kind of feel like you're stuck

2098
01:54:36,480 --> 01:54:38,879
into it

2099
01:54:40,880 --> 01:54:43,040
okay go give them that get in him we got

2100
01:54:43,040 --> 01:54:45,679
a hint coming

2101
01:54:45,679 --> 01:54:47,119
so yeah we're gonna we're gonna send the

2102
01:54:47,119 --> 01:54:48,639
hint over

2103
01:54:48,639 --> 01:54:52,000
give uh and we'll give them that that

2104
01:54:52,000 --> 01:54:54,159
hints

2105
01:54:54,159 --> 01:54:57,360
we'll see if that helps them

2106
01:54:58,159 --> 01:55:01,040
see if that helps them

2107
01:55:06,159 --> 01:55:08,480
so it's so so i'm seeing here perfect

2108
01:55:08,480 --> 01:55:11,440
root was just um still debugging uh

2109
01:55:11,440 --> 01:55:14,320
their code uh um i i think they were if

2110
01:55:14,320 --> 01:55:15,920
i saw it correctly they were breaking on

2111
01:55:15,920 --> 01:55:17,280
system and then checking the first

2112
01:55:17,280 --> 01:55:20,480
parameter which was indeed been as age

2113
01:55:20,480 --> 01:55:22,159
so um

2114
01:55:22,159 --> 01:55:25,040
stuff seems to work but also not i i

2115
01:55:25,040 --> 01:55:27,360
have a hard time to figure out what why

2116
01:55:27,360 --> 01:55:28,960
it's not actually landing yeah that's a

2117
01:55:28,960 --> 01:55:31,679
good question so so we'll um

2118
01:55:31,679 --> 01:55:32,960
so i think what we're saying it looks

2119
01:55:32,960 --> 01:55:35,119
like um samurai is kind of considering

2120
01:55:35,119 --> 01:55:36,960
the new input and trying to figure out

2121
01:55:36,960 --> 01:55:38,639
should they rework and that's that was

2122
01:55:38,639 --> 01:55:39,760
the other question i debated about this

2123
01:55:39,760 --> 01:55:41,840
hint because this sort of says maybe you

2124
01:55:41,840 --> 01:55:43,199
could come up with a whole new style of

2125
01:55:43,199 --> 01:55:44,880
exploit but is it

2126
01:55:44,880 --> 01:55:47,119
better to keep trying to finish this one

2127
01:55:47,119 --> 01:55:48,639
or is it better to like rewrite to a

2128
01:55:48,639 --> 01:55:51,280
different approach

2129
01:55:51,760 --> 01:55:54,000
yeah i wonder if that hint influences

2130
01:55:54,000 --> 01:55:56,400
there this

2131
01:55:58,560 --> 01:56:02,560
this this are they done

2132
01:56:03,119 --> 01:56:04,639
this might be done

2133
01:56:04,639 --> 01:56:06,000
uh we're looking at perfect route

2134
01:56:06,000 --> 01:56:08,800
they're very close

2135
01:56:09,040 --> 01:56:12,440
let's see

2136
01:56:14,400 --> 01:56:16,239
yeah i cannot see what's going wrong

2137
01:56:16,239 --> 01:56:17,920
because from the debugger it kind of

2138
01:56:17,920 --> 01:56:19,199
looked oh

2139
01:56:19,199 --> 01:56:21,599
pretty good like they they print uh rdi

2140
01:56:21,599 --> 01:56:24,080
and it's been sh

2141
01:56:24,080 --> 01:56:25,280
um

2142
01:56:25,280 --> 01:56:27,199
i mean they they were

2143
01:56:27,199 --> 01:56:28,000
maybe

2144
01:56:28,000 --> 01:56:29,920
locally made it might be working but not

2145
01:56:29,920 --> 01:56:32,320
remotely i wonder what's well i think

2146
01:56:32,320 --> 01:56:33,679
that's what we saw earlier is we saw

2147
01:56:33,679 --> 01:56:35,599
them switch into a vm

2148
01:56:35,599 --> 01:56:36,960
um and they're running as roots so i

2149
01:56:36,960 --> 01:56:38,880
think they intentionally try i mean they

2150
01:56:38,880 --> 01:56:41,760
use hard-coded offsets from libsy which

2151
01:56:41,760 --> 01:56:43,360
maybe they have the wrong with c you

2152
01:56:43,360 --> 01:56:45,360
know we did give them lift c so every

2153
01:56:45,360 --> 01:56:48,080
single uh binary today i believe we gave

2154
01:56:48,080 --> 01:56:50,080
them a lib c because we wanted them to

2155
01:56:50,080 --> 01:56:52,080
have like even

2156
01:56:52,080 --> 01:56:53,199
the only downside is and some of the

2157
01:56:53,199 --> 01:56:54,560
binaries we really don't they need it

2158
01:56:54,560 --> 01:56:56,000
it's almost a distraction we don't want

2159
01:56:56,000 --> 01:56:58,400
them to like assume that it's required

2160
01:56:58,400 --> 01:57:01,280
um but we did give them a lipsy just for

2161
01:57:01,280 --> 01:57:03,520
all these if for nothing else so that

2162
01:57:03,520 --> 01:57:05,440
they could run it you know even in their

2163
01:57:05,440 --> 01:57:08,678
local environment

2164
01:57:11,199 --> 01:57:13,360
so let's see if this does it i this just

2165
01:57:13,360 --> 01:57:15,040
doesn't feel like one that we're going

2166
01:57:15,040 --> 01:57:16,639
to need sudden death on but we are

2167
01:57:16,639 --> 01:57:18,080
coming up on the time where i think

2168
01:57:18,080 --> 01:57:19,440
we're officially at sudden death time

2169
01:57:19,440 --> 01:57:21,440
because we started about 10 minutes late

2170
01:57:21,440 --> 01:57:22,800
um

2171
01:57:22,800 --> 01:57:26,080
but i've so uh perfect root did have a

2172
01:57:26,080 --> 01:57:28,000
shell error like a syntax error like

2173
01:57:28,000 --> 01:57:29,840
typical you know bin sh you pass in

2174
01:57:29,840 --> 01:57:31,280
something bad

2175
01:57:31,280 --> 01:57:33,599
um yeah but they're still adjusting

2176
01:57:33,599 --> 01:57:35,520
there's their actual rap chain which

2177
01:57:35,520 --> 01:57:36,880
doesn't

2178
01:57:36,880 --> 01:57:38,880
wait it seems like locally works but

2179
01:57:38,880 --> 01:57:41,199
maybe some offsets are just uh not right

2180
01:57:41,199 --> 01:57:44,799
uh for the for the remote

2181
01:57:47,920 --> 01:57:50,159
oh yeah our decision to call it off now

2182
01:57:50,159 --> 01:57:51,599
or not

2183
01:57:51,599 --> 01:57:53,760
i don't want to i know i'm glad i don't

2184
01:57:53,760 --> 01:57:55,520
have to decide this now

2185
01:57:55,520 --> 01:57:59,119
well we'll uh i i

2186
01:57:59,119 --> 01:58:01,199
i think we got to do it the good news is

2187
01:58:01,199 --> 01:58:02,480
i think we

2188
01:58:02,480 --> 01:58:05,199
we expect that um the next two

2189
01:58:05,199 --> 01:58:08,159
challenges are both

2190
01:58:08,239 --> 01:58:10,080
uh oh somebody's pointing at something

2191
01:58:10,080 --> 01:58:11,679
let me double check here

2192
01:58:11,679 --> 01:58:14,000
uh-oh

2193
01:58:14,000 --> 01:58:15,920
uh we might be close and perfect they're

2194
01:58:15,920 --> 01:58:19,040
trying to copy off the

2195
01:58:19,280 --> 01:58:20,560
yeah they're running remotely they're

2196
01:58:20,560 --> 01:58:22,000
running remotely

2197
01:58:22,000 --> 01:58:24,480
okay okay

2198
01:58:24,719 --> 01:58:26,719
where'd it go invalid choice what

2199
01:58:26,719 --> 01:58:28,960
happened

2200
01:58:29,440 --> 01:58:31,040
is this just oh that's the worst feeling

2201
01:58:31,040 --> 01:58:32,880
though if you've got a thing that runs

2202
01:58:32,880 --> 01:58:36,000
locally doesn't remote

2203
01:58:39,360 --> 01:58:41,840
were they just adjusting the this deck a

2204
01:58:41,840 --> 01:58:44,080
little bit trying to yeah

2205
01:58:44,080 --> 01:58:45,599
yeah i wonder if they didn't they

2206
01:58:45,599 --> 01:58:47,280
changed it and then changed it back and

2207
01:58:47,280 --> 01:58:48,320
so i'm wondering if they're actually

2208
01:58:48,320 --> 01:58:50,559
gonna

2209
01:58:52,320 --> 01:58:53,760
are they gonna rerun this with different

2210
01:58:53,760 --> 01:58:55,199
offsets and just brute force it i mean

2211
01:58:55,199 --> 01:58:57,520
i'm i'm fine with that if that's

2212
01:58:57,520 --> 01:59:00,239
i think that's what uh offset yeah there

2213
01:59:00,239 --> 01:59:03,839
it is yeah yeah yeah

2214
01:59:04,000 --> 01:59:06,239
that is that is frustrating when it's uh

2215
01:59:06,239 --> 01:59:09,519
oh no i think i am

2216
01:59:12,000 --> 01:59:13,760
i've got a pop-up

2217
01:59:13,760 --> 01:59:17,560
do i click that or not

2218
01:59:17,760 --> 01:59:20,480
don't click on pop-ups

2219
01:59:20,480 --> 01:59:22,000
at the battery life okay all right yeah

2220
01:59:22,000 --> 01:59:23,360
so unfortunately

2221
01:59:23,360 --> 01:59:24,800
how much battery life do i have on this

2222
01:59:24,800 --> 01:59:27,040
machine six percent so i'm about to lose

2223
01:59:27,040 --> 01:59:28,080
my

2224
01:59:28,080 --> 01:59:30,239
oh

2225
01:59:30,239 --> 01:59:32,119
there it is then we got a winner

2226
01:59:32,119 --> 01:59:34,080
congratulations oh

2227
01:59:34,080 --> 01:59:38,080
oh my stressful so stressful oh my god

2228
01:59:38,080 --> 01:59:40,080
that was very very close

2229
01:59:40,080 --> 01:59:41,840
just before canceling it but

2230
01:59:41,840 --> 01:59:43,760
congratulations

2231
01:59:43,760 --> 01:59:46,560
yeah all right so that was that was

2232
01:59:46,560 --> 01:59:48,400
fantastic we have a very short timetable

2233
01:59:48,400 --> 01:59:50,800
we gotta turn this one around so uh

2234
01:59:50,800 --> 01:59:53,440
we're gonna go ahead and

2235
01:59:53,440 --> 01:59:55,280
can you reset it let's put it back to

2236
01:59:55,280 --> 01:59:56,719
the break uh

2237
01:59:56,719 --> 01:59:58,400
well so we'll back shortly as soon as we

2238
01:59:58,400 --> 01:59:59,599
get the next teams up and try to get

2239
01:59:59,599 --> 02:00:00,800
back a little bit on schedule with a

2240
02:00:00,800 --> 02:00:02,719
quicker one so thanks everybody we'll

2241
02:00:02,719 --> 02:00:07,239
see you in uh just a few minutes

2242
02:00:07,870 --> 02:00:15,280
[Music]

2243
02:00:15,280 --> 02:00:17,440
so

2244
02:00:17,440 --> 02:00:47,440
[Music]

2245
02:00:47,440 --> 02:00:48,960
do

2246
02:00:48,960 --> 02:01:12,670
[Music]

2247
02:01:15,760 --> 02:01:17,470
so

2248
02:01:17,470 --> 02:01:24,389
[Music]

2249
02:01:28,470 --> 02:02:09,640
[Music]

2250
02:02:19,570 --> 02:02:22,769
[Music]

2251
02:02:24,320 --> 02:02:27,320
so

2252
02:02:30,610 --> 02:02:33,830
[Music]

2253
02:02:37,840 --> 02:02:40,760
so

2254
02:02:40,760 --> 02:02:50,000
[Music]

2255
02:02:50,000 --> 02:02:52,310
so

2256
02:02:52,310 --> 02:03:05,149
[Music]

2257
02:03:05,599 --> 02:03:06,700
so

2258
02:03:06,700 --> 02:03:09,760
[Music]

2259
02:03:14,130 --> 02:03:29,390
[Music]

2260
02:03:42,330 --> 02:04:00,800
[Music]

2261
02:04:00,800 --> 02:04:03,800
so

2262
02:04:04,080 --> 02:04:10,510
[Music]

2263
02:04:15,690 --> 02:04:32,719
[Music]

2264
02:04:32,719 --> 02:04:35,719
so

2265
02:04:37,490 --> 02:04:50,760
[Music]

2266
02:04:53,770 --> 02:04:57,109
[Music]

2267
02:04:57,280 --> 02:05:00,280
so

2268
02:05:04,850 --> 02:05:09,630
[Music]

2269
02:05:10,639 --> 02:05:13,340
so

2270
02:05:13,340 --> 02:05:27,040
[Music]

2271
02:05:27,040 --> 02:05:30,040
so

2272
02:05:32,390 --> 02:05:44,420
[Music]

2273
02:05:46,570 --> 02:06:32,549
[Music]

2274
02:06:34,960 --> 02:06:37,690
so

2275
02:06:37,690 --> 02:06:50,269
[Music]

2276
02:06:50,480 --> 02:06:52,380
so

2277
02:06:52,380 --> 02:06:56,770
[Music]

2278
02:06:56,770 --> 02:06:57,150
[Applause]

2279
02:06:57,150 --> 02:07:03,119
[Music]

2280
02:07:03,119 --> 02:07:06,119
so

2281
02:07:13,740 --> 02:07:45,800
[Music]

2282
02:07:48,280 --> 02:07:57,999
[Music]

2283
02:07:59,599 --> 02:08:02,599
so

2284
02:08:06,280 --> 02:08:40,809
[Music]

2285
02:08:50,000 --> 02:09:47,749
[Music]

2286
02:09:51,910 --> 02:10:53,660
[Music]

2287
02:10:54,719 --> 02:10:56,760
is

2288
02:10:56,760 --> 02:11:50,199
[Music]

2289
02:11:50,480 --> 02:11:53,360
hello welcome back to the third match of

2290
02:11:53,360 --> 02:11:56,079
the day uh from the live ctf uh i'm back

2291
02:11:56,079 --> 02:11:57,599
here in the commentary and i still have

2292
02:11:57,599 --> 02:11:59,119
live overflow with me

2293
02:11:59,119 --> 02:12:02,400
uh we are gonna start the match uh in

2294
02:12:02,400 --> 02:12:05,280
just a second if i get an okay from

2295
02:12:05,280 --> 02:12:07,360
production

2296
02:12:07,360 --> 02:12:09,599
there seems to be

2297
02:12:09,599 --> 02:12:10,800
a

2298
02:12:10,800 --> 02:12:12,880
slight something going on

2299
02:12:12,880 --> 02:12:15,040
but

2300
02:12:16,239 --> 02:12:20,759
oh no is that hdmi cable

2301
02:12:21,840 --> 02:12:23,360
oh no no no i think it's fine because i

2302
02:12:23,360 --> 02:12:24,639
have them both here on the monitor so

2303
02:12:24,639 --> 02:12:26,480
it's just like uh

2304
02:12:26,480 --> 02:12:28,799
uh

2305
02:12:29,440 --> 02:12:31,760
we yes it was just uh we needed to like

2306
02:12:31,760 --> 02:12:33,840
refresh the input in our production

2307
02:12:33,840 --> 02:12:36,719
software so we are ready to go so let us

2308
02:12:36,719 --> 02:12:40,000
all count down the third match uh

2309
02:12:40,000 --> 02:12:41,119
five

2310
02:12:41,119 --> 02:12:42,960
four three

2311
02:12:42,960 --> 02:12:43,840
two

2312
02:12:43,840 --> 02:12:47,440
one go good luck to the contestants

2313
02:12:47,440 --> 02:12:48,719
yeah so

2314
02:12:48,719 --> 02:12:50,400
this challenge challenge called yes the

2315
02:12:50,400 --> 02:12:52,320
challenge is called envons and this is

2316
02:12:52,320 --> 02:12:54,480
kind of like a reference to a sequence

2317
02:12:54,480 --> 02:12:56,079
of challenges that been going on for the

2318
02:12:56,079 --> 02:12:57,760
year called end cuts

2319
02:12:57,760 --> 02:12:58,880
uh

2320
02:12:58,880 --> 02:12:59,599
but

2321
02:12:59,599 --> 02:13:02,480
uh it's a bit of a meme uh challenge

2322
02:13:02,480 --> 02:13:03,280
where

2323
02:13:03,280 --> 02:13:05,760
uh we have just given them a menu

2324
02:13:05,760 --> 02:13:08,159
where uh they can just choose which type

2325
02:13:08,159 --> 02:13:09,599
of vulnerability they want to use so

2326
02:13:09,599 --> 02:13:11,360
we've said like in this menu like we

2327
02:13:11,360 --> 02:13:12,800
have a stack buffer overflow we have a

2328
02:13:12,800 --> 02:13:14,880
format string vulnerability we have a

2329
02:13:14,880 --> 02:13:16,880
you know uh local fight we even have

2330
02:13:16,880 --> 02:13:18,800
like you know some some jokes in there

2331
02:13:18,800 --> 02:13:20,960
there's like uh missing dmarc records

2332
02:13:20,960 --> 02:13:22,480
this in the menu and stuff like that as

2333
02:13:22,480 --> 02:13:23,360
well

2334
02:13:23,360 --> 02:13:25,599
um so yeah but when you say meme

2335
02:13:25,599 --> 02:13:28,079
challenge you don't mean stego challenge

2336
02:13:28,079 --> 02:13:28,880
no

2337
02:13:28,880 --> 02:13:31,520
i mean absolutely not uh it's it's it's

2338
02:13:31,520 --> 02:13:34,159
it's a legit challenge and it has like a

2339
02:13:34,159 --> 02:13:38,000
legit solution um so we can see here on

2340
02:13:38,000 --> 02:13:40,719
the uh water paddler side yes

2341
02:13:40,719 --> 02:13:42,480
they are running the binary uh you can

2342
02:13:42,480 --> 02:13:44,000
see this menu here you have the stack

2343
02:13:44,000 --> 02:13:45,199
buff the

2344
02:13:45,199 --> 02:13:47,520
command injection you have malloc free

2345
02:13:47,520 --> 02:13:50,159
use uh you have a sql injection you have

2346
02:13:50,159 --> 02:13:51,520
xss

2347
02:13:51,520 --> 02:13:54,400
and so definitely check out xss first

2348
02:13:54,400 --> 02:13:55,360
when i

2349
02:13:55,360 --> 02:13:56,960
yeah i mean this challenge that makes

2350
02:13:56,960 --> 02:13:58,639
perfect sense

2351
02:13:58,639 --> 02:14:00,400
yeah totally

2352
02:14:00,400 --> 02:14:02,880
um so there you can see them here doing

2353
02:14:02,880 --> 02:14:05,440
the the check sec uh looking at what uh

2354
02:14:05,440 --> 02:14:06,800
kind of uh

2355
02:14:06,800 --> 02:14:08,719
protections there are here

2356
02:14:08,719 --> 02:14:12,400
uh and uh you see we have no railroad uh

2357
02:14:12,400 --> 02:14:14,480
there's no cannery no pie so like a lot

2358
02:14:14,480 --> 02:14:16,320
of mitigations turned off

2359
02:14:16,320 --> 02:14:18,560
uh so you'll see that's important yeah

2360
02:14:18,560 --> 02:14:20,400
something like this could throw players

2361
02:14:20,400 --> 02:14:21,760
off it's important that they check this

2362
02:14:21,760 --> 02:14:22,960
at the beginning

2363
02:14:22,960 --> 02:14:25,520
definitely definitely i must say i like

2364
02:14:25,520 --> 02:14:28,079
the font that the water powder player is

2365
02:14:28,079 --> 02:14:29,920
uh using and like the color theme as

2366
02:14:29,920 --> 02:14:31,840
well pretty pretty nice

2367
02:14:31,840 --> 02:14:34,239
is that is that actually it looks like

2368
02:14:34,239 --> 02:14:36,480
kind of like compressed horizontally no

2369
02:14:36,480 --> 02:14:38,159
no it's a bit of a squished a bit of a

2370
02:14:38,159 --> 02:14:40,400
squished font yes

2371
02:14:40,400 --> 02:14:41,840
anyway you can see that they're already

2372
02:14:41,840 --> 02:14:44,239
writing their uh

2373
02:14:44,239 --> 02:14:46,159
yeah they have a wrapper already already

2374
02:14:46,159 --> 02:14:47,920
right yes

2375
02:14:47,920 --> 02:14:51,040
so uh we are switching to wikipedia and

2376
02:14:51,040 --> 02:14:52,560
we can see that they're also you know

2377
02:14:52,560 --> 02:14:55,040
writing their um

2378
02:14:55,040 --> 02:14:56,320
starting writing their exploit script

2379
02:14:56,320 --> 02:14:58,000
here and they started running the

2380
02:14:58,000 --> 02:15:00,880
command uh they are looking at the stack

2381
02:15:00,880 --> 02:15:02,480
buffer overflow

2382
02:15:02,480 --> 02:15:04,639
and trying to get that working uh

2383
02:15:04,639 --> 02:15:06,400
however uh they will not get that to

2384
02:15:06,400 --> 02:15:08,159
work because there's like a slight troll

2385
02:15:08,159 --> 02:15:10,000
in there where the program will call

2386
02:15:10,000 --> 02:15:12,880
exit after it has performed the buffer

2387
02:15:12,880 --> 02:15:14,719
overflow

2388
02:15:14,719 --> 02:15:17,520
so yes oh yeah they just see it now yeah

2389
02:15:17,520 --> 02:15:19,760
they just had the cursor on exit

2390
02:15:19,760 --> 02:15:21,040
hopefully they

2391
02:15:21,040 --> 02:15:23,040
hopefully they immediately

2392
02:15:23,040 --> 02:15:25,360
thrown away this idea now yes and don't

2393
02:15:25,360 --> 02:15:28,000
get caught up on that so so some of the

2394
02:15:28,000 --> 02:15:30,320
entries in the menu are just uh like

2395
02:15:30,320 --> 02:15:32,480
just we'll just print a joke message

2396
02:15:32,480 --> 02:15:35,199
some of the entries are kind of like a

2397
02:15:35,199 --> 02:15:36,480
uh you know it looks like a

2398
02:15:36,480 --> 02:15:37,679
vulnerability but it's not actually

2399
02:15:37,679 --> 02:15:39,360
vulnerability and there are some of the

2400
02:15:39,360 --> 02:15:41,119
entries where you can actually do

2401
02:15:41,119 --> 02:15:44,320
something uh useful

2402
02:15:44,400 --> 02:15:45,599
um

2403
02:15:45,599 --> 02:15:46,719
yeah

2404
02:15:46,719 --> 02:15:48,560
and uh how difficult is the expo is it a

2405
02:15:48,560 --> 02:15:50,800
buffer overflow is it a heap in the end

2406
02:15:50,800 --> 02:15:52,719
like which one of these menu items is

2407
02:15:52,719 --> 02:15:54,719
the one that they should that

2408
02:15:54,719 --> 02:15:56,480
yeah they are looking for

2409
02:15:56,480 --> 02:15:59,599
so uh oh i uh yeah so when we were

2410
02:15:59,599 --> 02:16:01,679
creating this challenge uh late last

2411
02:16:01,679 --> 02:16:04,400
night i can i can disclose that much uh

2412
02:16:04,400 --> 02:16:06,560
we had the different ideas for for the

2413
02:16:06,560 --> 02:16:09,599
solutions uh my reference solution

2414
02:16:09,599 --> 02:16:11,199
involves uh

2415
02:16:11,199 --> 02:16:12,239
so there's a command injection

2416
02:16:12,239 --> 02:16:14,239
vulnerability but your command injection

2417
02:16:14,239 --> 02:16:16,239
is limited to only a very few characters

2418
02:16:16,239 --> 02:16:17,679
i think you have like seven character

2419
02:16:17,679 --> 02:16:20,079
and we unset the path so you can't

2420
02:16:20,079 --> 02:16:22,400
really do the command injection uh like

2421
02:16:22,400 --> 02:16:25,040
by itself but that length is controlled

2422
02:16:25,040 --> 02:16:26,800
by a global variable and then we also

2423
02:16:26,800 --> 02:16:28,719
have another vulnerability which is an

2424
02:16:28,719 --> 02:16:30,400
array out of bounds so my reference

2425
02:16:30,400 --> 02:16:33,040
solution was to do like an array out of

2426
02:16:33,040 --> 02:16:35,519
bounce right and to modify that to make

2427
02:16:35,519 --> 02:16:37,040
the command injection longer and then do

2428
02:16:37,040 --> 02:16:39,200
the command injection

2429
02:16:39,200 --> 02:16:41,760
right okay

2430
02:16:41,840 --> 02:16:43,679
and and you you think that there are

2431
02:16:43,679 --> 02:16:45,120
multiple solutions when you because you

2432
02:16:45,120 --> 02:16:47,679
were like the way you came up with yes

2433
02:16:47,679 --> 02:16:49,439
definitely for example they have an

2434
02:16:49,439 --> 02:16:52,398
basically unrestricted format string

2435
02:16:52,398 --> 02:16:54,959
vulnerability in this as well so if one

2436
02:16:54,959 --> 02:16:56,318
if they want to go that route they can

2437
02:16:56,318 --> 02:16:57,599
definitely do that

2438
02:16:57,599 --> 02:16:58,799
um

2439
02:16:58,799 --> 02:17:00,318
i don't remember exactly what other

2440
02:17:00,318 --> 02:17:03,200
things we had but uh you can you can uh

2441
02:17:03,200 --> 02:17:05,599
read any file on the system uh so you

2442
02:17:05,599 --> 02:17:09,200
can do that to like leak proc self maps

2443
02:17:09,200 --> 02:17:11,679
i just saw a wrecker pic i think going

2444
02:17:11,679 --> 02:17:13,599
for the format string i saw a percentage

2445
02:17:13,599 --> 02:17:16,160
p there oh they are script code if you

2446
02:17:16,160 --> 02:17:18,160
switch over to their

2447
02:17:18,160 --> 02:17:19,040
uh

2448
02:17:19,040 --> 02:17:20,318
their screen

2449
02:17:20,318 --> 02:17:22,558
yeah um

2450
02:17:22,558 --> 02:17:26,398
so they found that one already yes

2451
02:17:26,398 --> 02:17:28,240
so this is the that could go very

2452
02:17:28,240 --> 02:17:29,599
quickly if they are good with format

2453
02:17:29,599 --> 02:17:32,000
strings uh and maybe even have automated

2454
02:17:32,000 --> 02:17:33,679
tools to make format string help them

2455
02:17:33,679 --> 02:17:35,679
with it it could go very quickly or are

2456
02:17:35,679 --> 02:17:37,040
there some restrictions on the format

2457
02:17:37,040 --> 02:17:39,200
string like the length of the buffer

2458
02:17:39,200 --> 02:17:41,040
no i think the format string one is

2459
02:17:41,040 --> 02:17:43,760
basically unrestricted uh

2460
02:17:43,760 --> 02:17:45,519
we

2461
02:17:45,519 --> 02:17:47,920
uh so do what you

2462
02:17:47,920 --> 02:17:50,799
yeah the copying in system right

2463
02:17:50,799 --> 02:17:52,959
offset already so this could go very

2464
02:17:52,959 --> 02:17:55,120
quickly yes so what you could do with

2465
02:17:55,120 --> 02:17:56,879
the format string then is since we have

2466
02:17:56,879 --> 02:17:59,439
railroad disabled you could go for uh

2467
02:17:59,439 --> 02:18:01,519
overwriting uh

2468
02:18:01,519 --> 02:18:03,679
the got entry of some function uh with

2469
02:18:03,679 --> 02:18:05,439
the system and then calling one like

2470
02:18:05,439 --> 02:18:07,120
making a call to that function through

2471
02:18:07,120 --> 02:18:08,318
one of the other things so that's

2472
02:18:08,318 --> 02:18:10,718
definitely a viable approach

2473
02:18:10,718 --> 02:18:12,080
even though they found the format string

2474
02:18:12,080 --> 02:18:14,080
now rekka pick also found what seems to

2475
02:18:14,080 --> 02:18:16,558
be the command injection um

2476
02:18:16,558 --> 02:18:18,160
i think i think this challenge could be

2477
02:18:18,160 --> 02:18:20,160
a bit evil in the sense that you could

2478
02:18:20,160 --> 02:18:21,679
easily get sidetracked because all of

2479
02:18:21,679 --> 02:18:24,478
them sound like very juicy vulnerability

2480
02:18:24,478 --> 02:18:25,679
so which

2481
02:18:25,679 --> 02:18:28,160
one seems to be the most reliable the

2482
02:18:28,160 --> 02:18:30,398
one that you can implement the fastest

2483
02:18:30,398 --> 02:18:33,679
uh yeah yeah it could be quite tricky

2484
02:18:33,679 --> 02:18:35,120
definitely maybe we should have like

2485
02:18:35,120 --> 02:18:38,000
classified this as like uh triaging as

2486
02:18:38,000 --> 02:18:40,160
the category or something because uh you

2487
02:18:40,160 --> 02:18:41,679
know you really need to kind of make a

2488
02:18:41,679 --> 02:18:43,519
judgment call on these one abilities

2489
02:18:43,519 --> 02:18:44,718
like is this

2490
02:18:44,718 --> 02:18:46,638
exploitable or not

2491
02:18:46,638 --> 02:18:48,638
but but jenny i think it's a good choice

2492
02:18:48,638 --> 02:18:51,120
uh format string is awesome to leak

2493
02:18:51,120 --> 02:18:53,679
addresses and offsets but writing a

2494
02:18:53,679 --> 02:18:55,760
format string exploit you know writing

2495
02:18:55,760 --> 02:18:57,200
to it is can be

2496
02:18:57,200 --> 02:18:58,478
a bit

2497
02:18:58,478 --> 02:19:00,160
finicky yes

2498
02:19:00,160 --> 02:19:01,200
so so

2499
02:19:01,200 --> 02:19:02,398
i i think

2500
02:19:02,398 --> 02:19:04,240
often ctf players like format strings

2501
02:19:04,240 --> 02:19:05,760
for leaking stuff but then use a

2502
02:19:05,760 --> 02:19:07,920
different vulnerability to use the leak

2503
02:19:07,920 --> 02:19:09,599
so maybe that's why they were

2504
02:19:09,599 --> 02:19:12,398
back in either looking for

2505
02:19:12,398 --> 02:19:15,120
maybe now something to use the the leak

2506
02:19:15,120 --> 02:19:16,160
they have

2507
02:19:16,160 --> 02:19:18,000
because they could have now continued on

2508
02:19:18,000 --> 02:19:19,519
the format string but instead they got

2509
02:19:19,519 --> 02:19:20,638
sidetracked now with the command

2510
02:19:20,638 --> 02:19:22,000
injection probably because they were

2511
02:19:22,000 --> 02:19:23,840
maybe looking for

2512
02:19:23,840 --> 02:19:24,638
yeah

2513
02:19:24,638 --> 02:19:27,200
something else now um definitely i

2514
02:19:27,200 --> 02:19:28,638
wonder if that was the right decision

2515
02:19:28,638 --> 02:19:30,240
because with the form string they could

2516
02:19:30,240 --> 02:19:32,799
solve it so but they decided to know

2517
02:19:32,799 --> 02:19:34,558
let's let's abandon this let's look at

2518
02:19:34,558 --> 02:19:36,240
something else yeah it looks like

2519
02:19:36,240 --> 02:19:37,920
they're looking at the command injection

2520
02:19:37,920 --> 02:19:39,359
and there's like looking how this how

2521
02:19:39,359 --> 02:19:41,760
this is structured and uh

2522
02:19:41,760 --> 02:19:43,920
you know seeing how this works so uh

2523
02:19:43,920 --> 02:19:45,120
maybe they're onto something this they

2524
02:19:45,120 --> 02:19:46,558
see this global variable called

2525
02:19:46,558 --> 02:19:50,240
injection size uh so

2526
02:19:50,240 --> 02:19:52,399
uh we're switching over to

2527
02:19:52,399 --> 02:19:53,840
water paddler

2528
02:19:53,840 --> 02:19:56,160
uh and we can see what are they up to

2529
02:19:56,160 --> 02:19:58,000
they have been doing like s traces of

2530
02:19:58,000 --> 02:20:00,160
the program to just figure out what it's

2531
02:20:00,160 --> 02:20:02,720
doing oh it looks like they just tested

2532
02:20:02,720 --> 02:20:04,399
all the entries in the like kind of

2533
02:20:04,399 --> 02:20:06,319
doing a little bit of fussing almost

2534
02:20:06,319 --> 02:20:08,000
which i think is a really cool uh

2535
02:20:08,000 --> 02:20:09,359
approach as well

2536
02:20:09,359 --> 02:20:10,880
yeah i guess with asteroids especially

2537
02:20:10,880 --> 02:20:12,479
if you have the vulnerable functions

2538
02:20:12,479 --> 02:20:14,319
kind of the represented you know the

2539
02:20:14,319 --> 02:20:15,359
print

2540
02:20:15,359 --> 02:20:18,479
or format string uh the free maybe uh

2541
02:20:18,479 --> 02:20:20,240
and things like this so you could very

2542
02:20:20,240 --> 02:20:22,399
easily with s trays just see

2543
02:20:22,399 --> 02:20:24,479
kind of the the vulnerabilities uh

2544
02:20:24,479 --> 02:20:26,560
dynamically without doing reverse

2545
02:20:26,560 --> 02:20:30,160
engineering right so it could be a okay

2546
02:20:30,160 --> 02:20:31,920
approach also for the command injection

2547
02:20:31,920 --> 02:20:34,000
seeing exactly what it's called you you

2548
02:20:34,000 --> 02:20:36,720
might notice exactly as well we should

2549
02:20:36,720 --> 02:20:38,479
like maybe clarify that for our viewers

2550
02:20:38,479 --> 02:20:40,240
who if you're not maybe familiar so s

2551
02:20:40,240 --> 02:20:43,280
trace is a program that will uh log all

2552
02:20:43,280 --> 02:20:45,520
the syscalls that your program is

2553
02:20:45,520 --> 02:20:48,399
performing so reads rights uh you know

2554
02:20:48,399 --> 02:20:50,720
execution of uh comma programs and and

2555
02:20:50,720 --> 02:20:53,280
so on uh will be uh logged by the s

2556
02:20:53,280 --> 02:20:55,840
trace command so it's a way to see how

2557
02:20:55,840 --> 02:20:57,520
your program is interacting with like

2558
02:20:57,520 --> 02:20:59,280
the rest of the system in a very easy

2559
02:20:59,280 --> 02:21:01,439
way

2560
02:21:02,080 --> 02:21:05,200
um we can see here on

2561
02:21:05,200 --> 02:21:07,439
the uh wikipedia

2562
02:21:07,439 --> 02:21:08,319
side

2563
02:21:08,319 --> 02:21:10,640
uh as we said they are

2564
02:21:10,640 --> 02:21:13,640
uh

2565
02:21:14,479 --> 02:21:16,319
what is command three now so they go

2566
02:21:16,319 --> 02:21:18,399
from menu item three what was that again

2567
02:21:18,399 --> 02:21:20,080
that was the command injection oh that

2568
02:21:20,080 --> 02:21:21,760
was the command injection okay so they

2569
02:21:21,760 --> 02:21:25,359
feel like that's the way to go now right

2570
02:21:25,359 --> 02:21:27,680
uh let's see ls is that enough

2571
02:21:27,680 --> 02:21:29,280
characters i guess they could that that

2572
02:21:29,280 --> 02:21:31,439
would fit probably uh let's see no

2573
02:21:31,439 --> 02:21:33,200
that's because the thing is that you

2574
02:21:33,200 --> 02:21:35,520
need as you're inside double quotes so

2575
02:21:35,520 --> 02:21:36,800
you need to do

2576
02:21:36,800 --> 02:21:40,560
either double quote semicolon or

2577
02:21:40,560 --> 02:21:42,720
backticks for a subshell

2578
02:21:42,720 --> 02:21:44,319
so those both of those kind of

2579
02:21:44,319 --> 02:21:46,560
operations will cost you two characters

2580
02:21:46,560 --> 02:21:49,040
you only really have five characters for

2581
02:21:49,040 --> 02:21:50,720
like your payload

2582
02:21:50,720 --> 02:21:53,439
uh yeah okay that's not enough here no

2583
02:21:53,439 --> 02:21:56,640
and uh we unset the path so you cannot

2584
02:21:56,640 --> 02:21:59,280
just do just like backtakes and sh for

2585
02:21:59,280 --> 02:22:00,800
example because

2586
02:22:00,800 --> 02:22:03,439
you need to do slash bin slash ssh or

2587
02:22:03,439 --> 02:22:06,000
something like this

2588
02:22:06,160 --> 02:22:08,960
um i saw on on water pattern stream they

2589
02:22:08,960 --> 02:22:10,399
were also going for the command inject

2590
02:22:10,399 --> 02:22:12,319
they were also setting up some functions

2591
02:22:12,319 --> 02:22:13,520
um

2592
02:22:13,520 --> 02:22:16,800
uh for for the command injection um

2593
02:22:16,800 --> 02:22:18,160
right they are looking at the command

2594
02:22:18,160 --> 02:22:19,760
injection i mean that command injection

2595
02:22:19,760 --> 02:22:22,399
does really look very juicy like

2596
02:22:22,399 --> 02:22:23,680
you know you know you're sitting there

2597
02:22:23,680 --> 02:22:25,760
wishing like what if this variable was

2598
02:22:25,760 --> 02:22:28,319
just like a little bit bigger and this

2599
02:22:28,319 --> 02:22:30,080
would be so easy right

2600
02:22:30,080 --> 02:22:30,960
yeah

2601
02:22:30,960 --> 02:22:32,720
but they're highlighting it so they see

2602
02:22:32,720 --> 02:22:35,040
that size they they they see okay this

2603
02:22:35,040 --> 02:22:37,040
the size is taken from somewhere i i

2604
02:22:37,040 --> 02:22:38,160
hope they

2605
02:22:38,160 --> 02:22:41,439
make this mental step forward to oh

2606
02:22:41,439 --> 02:22:43,200
i can use another vulnerability to

2607
02:22:43,200 --> 02:22:44,560
change that size

2608
02:22:44,560 --> 02:22:45,600
uh

2609
02:22:45,600 --> 02:22:46,880
yes

2610
02:22:46,880 --> 02:22:49,040
if they if they

2611
02:22:49,040 --> 02:22:50,080
yes

2612
02:22:50,080 --> 02:22:51,840
we also consider the possibility of

2613
02:22:51,840 --> 02:22:52,880
doing

2614
02:22:52,880 --> 02:22:55,359
dot slash s

2615
02:22:55,359 --> 02:22:56,319
star

2616
02:22:56,319 --> 02:22:58,960
space one which is but that's also one

2617
02:22:58,960 --> 02:23:00,399
character too many

2618
02:23:00,399 --> 02:23:03,040
uh for them to run so we the this seven

2619
02:23:03,040 --> 02:23:05,760
is is very carefully chosen to be you

2620
02:23:05,760 --> 02:23:07,200
know just oh do you see what they are

2621
02:23:07,200 --> 02:23:08,319
trying here

2622
02:23:08,319 --> 02:23:09,520
copy

2623
02:23:09,520 --> 02:23:10,800
star

2624
02:23:10,800 --> 02:23:13,119
x

2625
02:23:13,600 --> 02:23:14,880
oh

2626
02:23:14,880 --> 02:23:17,359
that's uh

2627
02:23:17,359 --> 02:23:20,000
that's interesting uh but it will not

2628
02:23:20,000 --> 02:23:22,080
work because that binary is a suit

2629
02:23:22,080 --> 02:23:23,520
binary so

2630
02:23:23,520 --> 02:23:26,399
uh if you copy it it even if that work

2631
02:23:26,399 --> 02:23:27,920
which i i'm not sure but even if you

2632
02:23:27,920 --> 02:23:29,520
copy it it will lose the

2633
02:23:29,520 --> 02:23:31,600
uh the suit properties

2634
02:23:31,600 --> 02:23:33,359
and it will not work

2635
02:23:33,359 --> 02:23:34,960
but it's the challenge itself is not

2636
02:23:34,960 --> 02:23:38,640
like to say uid the the actual

2637
02:23:38,640 --> 02:23:41,359
submitter code yes exactly because the

2638
02:23:41,359 --> 02:23:44,080
submitter program will read it's a set

2639
02:23:44,080 --> 02:23:46,319
uid binary it will read a config file in

2640
02:23:46,319 --> 02:23:48,560
the same directory to be able to contact

2641
02:23:48,560 --> 02:23:50,000
our uh like

2642
02:23:50,000 --> 02:23:51,920
winner server

2643
02:23:51,920 --> 02:23:53,920
ah that's unfortunate because uh to be

2644
02:23:53,920 --> 02:23:55,439
fair to defend

2645
02:23:55,439 --> 02:23:56,880
the the player here

2646
02:23:56,880 --> 02:23:58,880
let's say in a typical setup that the

2647
02:23:58,880 --> 02:24:01,040
target binary you exploit that gives you

2648
02:24:01,040 --> 02:24:03,120
the elevated privileges and you perform

2649
02:24:03,120 --> 02:24:05,200
in certain actions yeah

2650
02:24:05,200 --> 02:24:06,800
so uh

2651
02:24:06,800 --> 02:24:08,560
in in some sense they are able to do the

2652
02:24:08,560 --> 02:24:10,479
privileged action but yeah that's a bit

2653
02:24:10,479 --> 02:24:11,920
tricky with uh

2654
02:24:11,920 --> 02:24:13,680
that the submitter program do the

2655
02:24:13,680 --> 02:24:15,680
players know that it said you id that's

2656
02:24:15,680 --> 02:24:17,359
the way because i i don't know they

2657
02:24:17,359 --> 02:24:20,240
don't know that but the instructions are

2658
02:24:20,240 --> 02:24:22,399
clearly saying like you need to run this

2659
02:24:22,399 --> 02:24:24,880
specific command to win so

2660
02:24:24,880 --> 02:24:27,359
uh like it's a very literal

2661
02:24:27,359 --> 02:24:29,600
interpretation of that that's that

2662
02:24:29,600 --> 02:24:30,640
applies

2663
02:24:30,640 --> 02:24:32,720
fair enough yeah

2664
02:24:32,720 --> 02:24:35,280
um so very clever idea for sure because

2665
02:24:35,280 --> 02:24:36,880
when you have restricted shell stuff

2666
02:24:36,880 --> 02:24:39,359
it's sometimes really crazy what kind of

2667
02:24:39,359 --> 02:24:41,439
creative ideas they could come up with

2668
02:24:41,439 --> 02:24:42,720
and copying

2669
02:24:42,720 --> 02:24:44,319
uh this copy

2670
02:24:44,319 --> 02:24:46,240
command something i

2671
02:24:46,240 --> 02:24:48,479
like you know my brain was brainstorming

2672
02:24:48,479 --> 02:24:49,920
could i do something with just five

2673
02:24:49,920 --> 02:24:53,120
characters you know yeah writing

2674
02:24:53,120 --> 02:24:55,040
files slowly a script slowly or

2675
02:24:55,040 --> 02:24:56,399
something like that but

2676
02:24:56,399 --> 02:24:57,439
um

2677
02:24:57,439 --> 02:24:59,600
with a pending or something but

2678
02:24:59,600 --> 02:25:01,920
yeah yeah no i love it i love the i love

2679
02:25:01,920 --> 02:25:04,479
the idea unfortunately it will not work

2680
02:25:04,479 --> 02:25:06,000
but it's like you know you need to try

2681
02:25:06,000 --> 02:25:08,080
it right and we can see here here on

2682
02:25:08,080 --> 02:25:09,280
wreck your pig

2683
02:25:09,280 --> 02:25:11,040
um they are we're setting up some

2684
02:25:11,040 --> 02:25:13,359
debugging in their script uh they were

2685
02:25:13,359 --> 02:25:15,359
taking another option again option two

2686
02:25:15,359 --> 02:25:17,359
which is the format string so they did

2687
02:25:17,359 --> 02:25:19,359
put that back into their script again

2688
02:25:19,359 --> 02:25:21,120
they i guess they they must have

2689
02:25:21,120 --> 02:25:23,680
realized the um the length check maybe

2690
02:25:23,680 --> 02:25:25,280
and so they maybe come back to the

2691
02:25:25,280 --> 02:25:26,720
format string maybe

2692
02:25:26,720 --> 02:25:28,640
uh to change that because they still

2693
02:25:28,640 --> 02:25:29,439
have

2694
02:25:29,439 --> 02:25:32,080
um yeah the um yeah

2695
02:25:32,080 --> 02:25:33,040
they're

2696
02:25:33,040 --> 02:25:34,240
at least they're back on the form string

2697
02:25:34,240 --> 02:25:35,680
maybe they go for full format string

2698
02:25:35,680 --> 02:25:37,040
exploit or

2699
02:25:37,040 --> 02:25:40,080
um they they know the

2700
02:25:40,080 --> 02:25:42,240
the command line length the injection

2701
02:25:42,240 --> 02:25:45,120
length right let's see i have not seen

2702
02:25:45,120 --> 02:25:47,600
any of them look at the uh

2703
02:25:47,600 --> 02:25:49,920
out of bounds uh read and write yet

2704
02:25:49,920 --> 02:25:52,319
which is interesting because uh that was

2705
02:25:52,319 --> 02:25:54,240
the one i used in my reference uh

2706
02:25:54,240 --> 02:25:56,160
solution for this yeah and usually

2707
02:25:56,160 --> 02:25:57,840
that's a pretty powerful primitive

2708
02:25:57,840 --> 02:26:01,120
because you i i don't know exactly

2709
02:26:01,120 --> 02:26:02,640
what it's doing here but generally if

2710
02:26:02,640 --> 02:26:04,640
it's really like fully area out of bonds

2711
02:26:04,640 --> 02:26:06,720
it might as well be just a right

2712
02:26:06,720 --> 02:26:08,240
anything anywhere

2713
02:26:08,240 --> 02:26:10,080
which is a powerful primitive is it is

2714
02:26:10,080 --> 02:26:12,080
it that powerful is it has it some

2715
02:26:12,080 --> 02:26:13,920
restrictions yes it's really great and

2716
02:26:13,920 --> 02:26:15,920
it also defeats like uh you know the

2717
02:26:15,920 --> 02:26:18,399
aslr since it's relative so it's just

2718
02:26:18,399 --> 02:26:20,240
straight up we have a global variable

2719
02:26:20,240 --> 02:26:21,840
that's an array and you can just choose

2720
02:26:21,840 --> 02:26:23,600
any index on that array and choose any

2721
02:26:23,600 --> 02:26:25,840
value that's the vulnerability

2722
02:26:25,840 --> 02:26:27,359
okay so yeah that's a that's the most

2723
02:26:27,359 --> 02:26:29,200
powerful and easiest primitive and then

2724
02:26:29,200 --> 02:26:30,560
together with the format string even

2725
02:26:30,560 --> 02:26:33,280
aslr is not a problem uh through that

2726
02:26:33,280 --> 02:26:35,760
players know very well like how to leak

2727
02:26:35,760 --> 02:26:36,960
a value

2728
02:26:36,960 --> 02:26:38,399
through the format string and defeat

2729
02:26:38,399 --> 02:26:40,960
aslr so even that wouldn't be a problem

2730
02:26:40,960 --> 02:26:43,120
to if they want to go for like lip c or

2731
02:26:43,120 --> 02:26:44,640
something so i want to point out here

2732
02:26:44,640 --> 02:26:47,359
just that we see a percent n character

2733
02:26:47,359 --> 02:26:48,960
in the format string

2734
02:26:48,960 --> 02:26:50,720
uh script which means that they are

2735
02:26:50,720 --> 02:26:53,680
trying to write something to uh

2736
02:26:53,680 --> 02:26:55,680
some pointer and you see right after

2737
02:26:55,680 --> 02:26:58,080
that you saw like a pointer as well so

2738
02:26:58,080 --> 02:27:00,160
it really looks like they are trying to

2739
02:27:00,160 --> 02:27:03,920
uh write uh something and now they are

2740
02:27:03,920 --> 02:27:04,800
yeah

2741
02:27:04,800 --> 02:27:07,200
did you can you tell from the like the

2742
02:27:07,200 --> 02:27:08,720
offset that they are trying to write

2743
02:27:08,720 --> 02:27:11,200
here the amount of characters um what

2744
02:27:11,200 --> 02:27:13,200
that could be what they tried to target

2745
02:27:13,200 --> 02:27:15,359
uh yeah so i mean the the way this works

2746
02:27:15,359 --> 02:27:16,720
when you use percent end like is you

2747
02:27:16,720 --> 02:27:18,960
need your your the address of your

2748
02:27:18,960 --> 02:27:21,359
destination to be located on the stack

2749
02:27:21,359 --> 02:27:22,880
so that you can reference it with the

2750
02:27:22,880 --> 02:27:24,960
percent end thing and that's why they're

2751
02:27:24,960 --> 02:27:26,560
oh we have a winner

2752
02:27:26,560 --> 02:27:29,039
they did it

2753
02:27:29,280 --> 02:27:31,200
who won

2754
02:27:31,200 --> 02:27:32,800
everything was the wrecker pig they did

2755
02:27:32,800 --> 02:27:34,479
it yeah there was a recording it worked

2756
02:27:34,479 --> 02:27:36,960
with the with the format string thing so

2757
02:27:36,960 --> 02:27:40,319
a really great job there uh and uh they

2758
02:27:40,319 --> 02:27:41,600
did that so it's a format string

2759
02:27:41,600 --> 02:27:44,399
overwriting the got and then uh running

2760
02:27:44,399 --> 02:27:46,319
the binary uh if i understood that

2761
02:27:46,319 --> 02:27:48,319
correctly uh really

2762
02:27:48,319 --> 02:27:50,640
that was quick getting these offsets uh

2763
02:27:50,640 --> 02:27:52,000
correct

2764
02:27:52,000 --> 02:27:54,560
really nice i need to check back at the

2765
02:27:54,560 --> 02:27:56,399
script yeah yeah yeah

2766
02:27:56,399 --> 02:27:59,120
um so oh the the camera resets onto a

2767
02:27:59,120 --> 02:28:00,720
wide shot well let's fix that later but

2768
02:28:00,720 --> 02:28:03,200
anyway uh this was this match uh we will

2769
02:28:03,200 --> 02:28:04,880
go to an intermission uh live workflow

2770
02:28:04,880 --> 02:28:06,720
will you uh do your uh like

2771
02:28:06,720 --> 02:28:09,359
intermissions on your stream as well

2772
02:28:09,359 --> 02:28:11,760
yeah i mean i'm live on twitch live

2773
02:28:11,760 --> 02:28:13,920
overflow and i i will have a look at

2774
02:28:13,920 --> 02:28:16,240
great photo finish here awesome so head

2775
02:28:16,240 --> 02:28:19,120
over to uh twitch tv live overflow right

2776
02:28:19,120 --> 02:28:20,160
and uh

2777
02:28:20,160 --> 02:28:21,280
hang out there we are going to an

2778
02:28:21,280 --> 02:28:22,720
intermission our next match will start

2779
02:28:22,720 --> 02:28:26,319
in about half an hour

2780
02:28:26,319 --> 02:28:29,010
so

2781
02:28:29,010 --> 02:29:33,809
[Music]

2782
02:29:38,620 --> 02:29:45,529
[Music]

2783
02:29:46,160 --> 02:29:49,160
do

2784
02:29:49,600 --> 02:30:30,770
[Music]

2785
02:30:40,710 --> 02:30:43,910
[Music]

2786
02:30:51,750 --> 02:31:08,319
[Music]

2787
02:31:08,319 --> 02:31:11,190
so

2788
02:31:11,190 --> 02:31:18,080
[Music]

2789
02:31:18,080 --> 02:31:19,100
so

2790
02:31:19,100 --> 02:31:29,340
[Music]

2791
02:31:35,270 --> 02:31:50,530
[Music]

2792
02:32:03,470 --> 02:32:28,240
[Music]

2793
02:32:28,240 --> 02:32:31,240
so

2794
02:32:36,820 --> 02:32:41,810
[Music]

2795
02:32:45,070 --> 02:32:54,869
[Music]

2796
02:32:58,630 --> 02:33:11,900
[Music]

2797
02:33:14,900 --> 02:33:18,240
[Music]

2798
02:33:24,640 --> 02:33:25,990
so

2799
02:33:25,990 --> 02:34:05,559
[Music]

2800
02:34:07,710 --> 02:34:19,920
[Music]

2801
02:34:19,920 --> 02:34:21,470
so

2802
02:34:21,470 --> 02:34:34,639
[Music]

2803
02:34:34,800 --> 02:34:37,800
so

2804
02:34:40,240 --> 02:35:11,440
[Music]

2805
02:35:13,520 --> 02:35:17,860
[Music]

2806
02:35:17,860 --> 02:35:19,780
[Applause]

2807
02:35:19,780 --> 02:35:26,040
[Music]

2808
02:35:32,080 --> 02:35:34,880
so

2809
02:35:34,880 --> 02:36:06,939
[Music]

2810
02:36:09,420 --> 02:37:05,689
[Music]

2811
02:37:09,180 --> 02:37:48,100
[Music]

2812
02:37:51,840 --> 02:37:53,350
so

2813
02:37:53,350 --> 02:38:08,879
[Music]

2814
02:38:13,050 --> 02:39:22,469
[Music]

2815
02:39:25,200 --> 02:39:28,200
so

2816
02:39:30,380 --> 02:40:11,329
[Music]

2817
02:40:25,920 --> 02:40:33,950
[Music]

2818
02:40:40,880 --> 02:40:43,880
so

2819
02:40:47,700 --> 02:40:50,839
[Music]

2820
02:40:55,500 --> 02:40:58,799
[Music]

2821
02:41:01,670 --> 02:41:26,949
[Music]

2822
02:41:29,080 --> 02:41:43,990
[Music]

2823
02:41:46,060 --> 02:41:54,208
[Music]

2824
02:41:58,600 --> 02:42:03,780
[Music]

2825
02:42:07,800 --> 02:42:10,869
[Music]

2826
02:42:13,260 --> 02:42:17,329
[Music]

2827
02:42:28,310 --> 02:42:48,628
[Music]

2828
02:42:48,640 --> 02:42:51,640
so

2829
02:42:53,660 --> 02:42:59,530
[Music]

2830
02:43:03,190 --> 02:43:12,010
[Music]

2831
02:43:14,310 --> 02:43:17,469
[Music]

2832
02:43:19,660 --> 02:43:35,889
[Music]

2833
02:43:38,240 --> 02:43:49,619
[Music]

2834
02:43:52,910 --> 02:43:56,010
[Music]

2835
02:43:59,870 --> 02:44:02,999
[Music]

2836
02:44:29,460 --> 02:44:32,529
[Music]

2837
02:44:37,790 --> 02:44:42,709
[Music]

2838
02:44:52,750 --> 02:45:01,880
[Music]

2839
02:45:19,830 --> 02:45:39,620
[Music]

2840
02:45:47,270 --> 02:45:50,620
[Music]

2841
02:46:17,390 --> 02:46:24,090
[Music]

2842
02:46:26,300 --> 02:46:31,979
[Music]

2843
02:46:38,700 --> 02:46:56,249
[Music]

2844
02:47:02,650 --> 02:47:14,719
[Music]

2845
02:47:18,580 --> 02:47:24,059
[Music]

2846
02:47:34,730 --> 02:47:37,910
[Music]

2847
02:47:44,370 --> 02:47:47,999
[Music]

2848
02:47:57,040 --> 02:48:06,679
[Music]

2849
02:48:07,279 --> 02:48:10,279
so

2850
02:48:30,170 --> 02:48:33,340
[Music]

2851
02:48:40,410 --> 02:49:32,989
[Music]

2852
02:49:38,840 --> 02:49:41,979
[Music]

2853
02:49:48,319 --> 02:49:51,319
do

2854
02:50:01,950 --> 02:50:05,139
[Music]

2855
02:50:11,640 --> 02:50:56,930
[Music]

2856
02:51:02,330 --> 02:51:05,539
[Music]

2857
02:51:19,110 --> 02:51:24,760
[Music]

2858
02:51:35,600 --> 02:51:38,600
so

2859
02:51:59,250 --> 02:52:08,040
[Music]

2860
02:52:08,880 --> 02:52:10,630
so

2861
02:52:10,630 --> 02:52:21,920
[Music]

2862
02:52:21,920 --> 02:52:24,920
uh

2863
02:52:30,100 --> 02:52:38,370
[Music]

2864
02:53:24,399 --> 02:53:25,640
um

2865
02:53:25,640 --> 02:53:28,799
[Music]

2866
02:54:09,220 --> 02:54:30,349
[Music]

2867
02:54:52,780 --> 02:55:06,429
[Music]

2868
02:55:11,820 --> 02:55:14,920
[Music]

2869
02:55:19,439 --> 02:55:22,439
so

2870
02:55:24,830 --> 02:55:40,880
[Music]

2871
02:55:40,880 --> 02:55:42,610
me

2872
02:55:42,610 --> 02:56:30,459
[Music]

2873
02:56:31,040 --> 02:56:33,110
so

2874
02:56:33,110 --> 02:57:14,240
[Music]

2875
02:57:14,240 --> 02:57:17,180
do

2876
02:57:17,180 --> 02:58:26,629
[Music]

2877
02:58:30,180 --> 02:58:34,839
[Music]

2878
02:58:41,730 --> 02:58:44,809
[Music]

2879
02:58:48,280 --> 02:58:54,759
[Music]

2880
02:58:57,660 --> 02:59:01,090
[Music]

2881
02:59:18,520 --> 03:00:18,110
[Music]

2882
03:00:25,810 --> 03:00:28,980
[Music]

2883
03:00:35,440 --> 03:00:53,209
[Music]

2884
03:00:56,140 --> 03:00:59,208
[Music]

2885
03:01:04,430 --> 03:01:08,450
[Music]

2886
03:01:16,640 --> 03:01:19,799
[Music]

2887
03:01:26,670 --> 03:01:29,850
[Music]

2888
03:01:32,840 --> 03:01:41,549
[Music]

2889
03:01:46,360 --> 03:01:50,640
[Music]

2890
03:01:50,640 --> 03:01:53,220
[Applause]

2891
03:01:53,220 --> 03:02:32,479
[Music]

2892
03:02:39,080 --> 03:02:42,170
[Music]

2893
03:03:05,210 --> 03:03:09,719
[Music]

2894
03:03:12,630 --> 03:03:17,179
[Music]

2895
03:03:22,270 --> 03:03:25,429
[Music]

2896
03:03:28,730 --> 03:03:34,219
[Music]

2897
03:03:39,510 --> 03:03:54,620
[Music]

2898
03:03:59,860 --> 03:04:39,009
[Music]

2899
03:04:39,180 --> 03:04:39,750
[Applause]

2900
03:04:39,750 --> 03:04:47,850
[Music]

2901
03:04:51,010 --> 03:04:56,469
[Music]

2902
03:04:59,900 --> 03:05:17,200
[Music]

2903
03:05:17,200 --> 03:05:19,840
do

2904
03:05:28,120 --> 03:05:32,399
[Music]

2905
03:05:34,600 --> 03:05:38,389
[Music]

2906
03:05:38,800 --> 03:05:41,440
do

2907
03:05:41,440 --> 03:05:45,389
[Music]

2908
03:05:51,620 --> 03:05:54,669
[Music]

2909
03:06:14,490 --> 03:07:30,260
[Music]

2910
03:07:30,260 --> 03:07:33,370
[Applause]

2911
03:07:35,430 --> 03:07:38,569
[Music]

2912
03:07:41,310 --> 03:07:42,160
[Music]

2913
03:07:42,160 --> 03:07:56,280
[Applause]

2914
03:08:04,319 --> 03:08:06,870
okay

2915
03:08:06,870 --> 03:08:09,939
[Music]

2916
03:08:12,960 --> 03:08:15,960
oh

2917
03:08:20,100 --> 03:09:09,200
[Music]

2918
03:09:09,200 --> 03:09:11,220
so

2919
03:09:11,220 --> 03:09:20,039
[Music]

2920
03:09:21,359 --> 03:09:23,320
so

2921
03:09:23,320 --> 03:09:37,708
[Music]

2922
03:09:41,400 --> 03:10:17,869
[Music]

2923
03:10:19,040 --> 03:10:21,100
so

2924
03:10:21,100 --> 03:10:32,880
[Music]

2925
03:10:32,880 --> 03:10:35,880
do

2926
03:10:37,260 --> 03:10:40,979
[Music]

2927
03:10:44,970 --> 03:10:48,449
[Music]

2928
03:11:04,690 --> 03:11:16,120
[Music]

2929
03:11:20,730 --> 03:11:24,670
[Music]

2930
03:11:28,330 --> 03:11:32,709
[Music]

2931
03:11:34,850 --> 03:11:40,680
[Music]

2932
03:11:44,500 --> 03:11:48,780
[Music]

2933
03:11:54,000 --> 03:11:56,540
[Applause]

2934
03:11:56,540 --> 03:12:01,679
[Music]

2935
03:12:05,020 --> 03:12:08,889
[Music]

2936
03:12:10,130 --> 03:12:12,730
[Applause]

2937
03:12:12,730 --> 03:12:25,319
[Music]

2938
03:12:28,260 --> 03:12:33,629
[Music]

2939
03:12:38,000 --> 03:12:41,000
so

2940
03:12:56,390 --> 03:13:12,720
[Music]

2941
03:13:12,720 --> 03:13:15,720
foreign

2942
03:13:16,490 --> 03:13:19,990
[Music]

2943
03:13:22,760 --> 03:13:26,020
[Music]

2944
03:13:29,200 --> 03:13:31,040
hello and welcome back to another live

2945
03:13:31,040 --> 03:13:33,520
ctf uh i am ciphertext here and i'm

2946
03:13:33,520 --> 03:13:35,520
joined by lightning

2947
03:13:35,520 --> 03:13:36,640
welcome

2948
03:13:36,640 --> 03:13:38,720
so lightning you've been uh you're a

2949
03:13:38,720 --> 03:13:40,479
part of nautilus institute

2950
03:13:40,479 --> 03:13:42,479
so i think but different people are in

2951
03:13:42,479 --> 03:13:44,399
different stages of chaos right now but

2952
03:13:44,399 --> 03:13:45,600
you had a challenge that was fielded

2953
03:13:45,600 --> 03:13:47,680
yesterday and so you're kind of relaxed

2954
03:13:47,680 --> 03:13:48,800
now right

2955
03:13:48,800 --> 03:13:50,080
so you just had to come hang out with us

2956
03:13:50,080 --> 03:13:51,680
we're happy to have you and and you've

2957
03:13:51,680 --> 03:13:53,840
been doing challenges for for many years

2958
03:13:53,840 --> 03:13:55,200
too because you were also a part of uh

2959
03:13:55,200 --> 03:13:59,680
legibs right so old hat

2960
03:14:00,239 --> 03:14:02,000
back yeah we we were on the same team

2961
03:14:02,000 --> 03:14:03,200
together yeah for many years it goes to

2962
03:14:03,200 --> 03:14:04,399
choka so we've known each other for a

2963
03:14:04,399 --> 03:14:05,439
long time

2964
03:14:05,439 --> 03:14:08,080
and uh i think i would say i always tell

2965
03:14:08,080 --> 03:14:09,760
people you're known for making the most

2966
03:14:09,760 --> 03:14:12,960
uh painful challenges possible you love

2967
03:14:12,960 --> 03:14:14,399
it's not a bad thing it's just like your

2968
03:14:14,399 --> 03:14:17,040
flavor of challenge is like super super

2969
03:14:17,040 --> 03:14:20,239
uh like hard the top tier difficulty had

2970
03:14:20,239 --> 03:14:21,200
some great ones over the years in fact

2971
03:14:21,200 --> 03:14:22,800
you're responsible for

2972
03:14:22,800 --> 03:14:23,680
um

2973
03:14:23,680 --> 03:14:25,520
a special architecture one year at def

2974
03:14:25,520 --> 03:14:28,720
con as well

2975
03:14:35,040 --> 03:14:36,399
yes

2976
03:14:36,399 --> 03:14:38,080
uh

2977
03:14:38,080 --> 03:14:39,840
i told you a pure pain right like this

2978
03:14:39,840 --> 03:14:41,120
teams had to like figure out and do all

2979
03:14:41,120 --> 03:14:42,560
that stuff we'll talk more later we've

2980
03:14:42,560 --> 03:14:43,600
got time we're going to get the teams

2981
03:14:43,600 --> 03:14:45,520
going now first to let them count in so

2982
03:14:45,520 --> 03:14:46,800
teams we'll go ahead and count you in

2983
03:14:46,800 --> 03:14:47,920
you ready

2984
03:14:47,920 --> 03:14:50,560
five four three

2985
03:14:50,560 --> 03:14:51,359
two

2986
03:14:51,359 --> 03:14:53,680
one go

2987
03:14:53,680 --> 03:14:55,439
so the teams are going to be downloading

2988
03:14:55,439 --> 03:14:57,920
uh their binaries here and oh we'll

2989
03:14:57,920 --> 03:14:59,600
watch them um

2990
03:14:59,600 --> 03:15:02,160
get up to speed this challenge is called

2991
03:15:02,160 --> 03:15:03,359
quick cast

2992
03:15:03,359 --> 03:15:05,359
uh yes our angle's a little low on our

2993
03:15:05,359 --> 03:15:07,600
monitor it's kind of kind of dim

2994
03:15:07,600 --> 03:15:08,880
so we have to kind of squint for some of

2995
03:15:08,880 --> 03:15:09,840
these

2996
03:15:09,840 --> 03:15:11,840
um we've got so i always i was gonna

2997
03:15:11,840 --> 03:15:13,520
look oh we do have a binge user okay

2998
03:15:13,520 --> 03:15:15,600
good there's another binja we had a big

2999
03:15:15,600 --> 03:15:18,319
user one this morning and i was excited

3000
03:15:18,319 --> 03:15:19,439
um

3001
03:15:19,439 --> 03:15:21,840
and we've got another user over here

3002
03:15:21,840 --> 03:15:24,880
having used ninja way back under ctf

3003
03:15:24,880 --> 03:15:26,000
yeah

3004
03:15:26,000 --> 03:15:27,840
i've not used benches since then that's

3005
03:15:27,840 --> 03:15:29,200
because i've not been in a position to

3006
03:15:29,200 --> 03:15:30,800
actually have need of it yeah yeah

3007
03:15:30,800 --> 03:15:32,000
you've been doing other other kind of

3008
03:15:32,000 --> 03:15:34,399
tasking yeah so binary just started as a

3009
03:15:34,399 --> 03:15:37,439
ctf tool built actually really for this

3010
03:15:37,439 --> 03:15:40,560
yeah a lot of specs uh so in fact uh the

3011
03:15:40,560 --> 03:15:41,920
challenge author rusty is the challenge

3012
03:15:41,920 --> 03:15:44,479
author of uh this particular challenge

3013
03:15:44,479 --> 03:15:46,880
who also wrote the old ctf binary ninjas

3014
03:15:46,880 --> 03:15:49,120
the main binger devs so

3015
03:15:49,120 --> 03:15:51,359
um this particular binary is called

3016
03:15:51,359 --> 03:15:52,640
quickcast

3017
03:15:52,640 --> 03:15:55,040
and we told the teams it's just it's

3018
03:15:55,040 --> 03:15:57,040
opponentable um

3019
03:15:57,040 --> 03:15:58,560
but i did have something pointed out to

3020
03:15:58,560 --> 03:16:01,040
me that i didn't even notice right away

3021
03:16:01,040 --> 03:16:03,200
because the the challenge is like magic

3022
03:16:03,200 --> 03:16:04,560
theme there's like i think it's there's

3023
03:16:04,560 --> 03:16:06,000
a runescape or one like one of these

3024
03:16:06,000 --> 03:16:08,160
kind of online games but it's it's also

3025
03:16:08,160 --> 03:16:10,720
the name is quick cast

3026
03:16:10,720 --> 03:16:12,239
if you were to take that as a hint for

3027
03:16:12,239 --> 03:16:14,080
the type of challenge

3028
03:16:14,080 --> 03:16:15,760
do you have any like what type of

3029
03:16:15,760 --> 03:16:17,600
vulnerabilities might be related to

3030
03:16:17,600 --> 03:16:20,560
either of those words

3031
03:16:20,640 --> 03:16:21,359
so

3032
03:16:21,359 --> 03:16:23,520
my initial thought is potential c plus

3033
03:16:23,520 --> 03:16:26,239
plus or casting if not that you also

3034
03:16:26,239 --> 03:16:28,560
have the casting between

3035
03:16:28,560 --> 03:16:30,720
different types yeah more than likely an

3036
03:16:30,720 --> 03:16:32,239
object confusion

3037
03:16:32,239 --> 03:16:33,600
has a potential

3038
03:16:33,600 --> 03:16:34,880
the idea of c

3039
03:16:34,880 --> 03:16:37,040
so it's not c plus plus only because we

3040
03:16:37,040 --> 03:16:38,560
have to keep the time limit short right

3041
03:16:38,560 --> 03:16:39,600
so we're trying to kind of minimize the

3042
03:16:39,600 --> 03:16:42,319
time um and we're already seeing teams

3043
03:16:42,319 --> 03:16:44,479
kind of kind of make their way yeah this

3044
03:16:44,479 --> 03:16:45,359
is definitely funny because we're going

3045
03:16:45,359 --> 03:16:47,439
to watch them go back and forth but yeah

3046
03:16:47,439 --> 03:16:48,960
i mean that's we basically told them

3047
03:16:48,960 --> 03:16:50,880
that the volume in the name of

3048
03:16:50,880 --> 03:16:52,560
it it is a type confusion vulnerability

3049
03:16:52,560 --> 03:16:54,880
yep um and so we're going to see them

3050
03:16:54,880 --> 03:16:56,640
this is this is again we're going for

3051
03:16:56,640 --> 03:16:58,399
real simple straightforward

3052
03:16:58,399 --> 03:17:00,640
uh kind of kind of vulnerabilities and

3053
03:17:00,640 --> 03:17:02,880
we're gonna watch them uh this will be

3054
03:17:02,880 --> 03:17:03,680
interesting because we're gonna try to

3055
03:17:03,680 --> 03:17:06,239
see who can find the the type confusion

3056
03:17:06,239 --> 03:17:07,120
first

3057
03:17:07,120 --> 03:17:09,439
um but it's it's it's pretty obvious

3058
03:17:09,439 --> 03:17:11,200
because there's literally a type of

3059
03:17:11,200 --> 03:17:14,000
value number and text yeah in the middle

3060
03:17:14,000 --> 03:17:15,279
choice there so you can you can

3061
03:17:15,279 --> 03:17:16,560
literally see it

3062
03:17:16,560 --> 03:17:17,600
um

3063
03:17:17,600 --> 03:17:19,600
it's asking them uh and of course did we

3064
03:17:19,600 --> 03:17:21,760
see a check set uh yep there we go we

3065
03:17:21,760 --> 03:17:24,840
saw a check set as well on um

3066
03:17:24,840 --> 03:17:27,920
uh excuse me on uh cat spin right wait

3067
03:17:27,920 --> 03:17:29,600
am i i gotta make sure i'm

3068
03:17:29,600 --> 03:17:30,640
yes

3069
03:17:30,640 --> 03:17:33,279
nope no cat spin is cat spin is over on

3070
03:17:33,279 --> 03:17:34,319
your side there we go i always gotta

3071
03:17:34,319 --> 03:17:35,920
come straight

3072
03:17:35,920 --> 03:17:37,040
um

3073
03:17:37,040 --> 03:17:39,760
so cat's been in in straw hat all right

3074
03:17:39,760 --> 03:17:41,600
so check tech which we've seen several

3075
03:17:41,600 --> 03:17:44,160
uh several other competitors do as well

3076
03:17:44,160 --> 03:17:45,359
i'm not sure why someone's blowing an

3077
03:17:45,359 --> 03:17:47,200
air horn

3078
03:17:47,200 --> 03:17:48,640
oh there we go yeah see that's nice you

3079
03:17:48,640 --> 03:17:50,880
can see them kind of interacting with it

3080
03:17:50,880 --> 03:17:52,319
um

3081
03:17:52,319 --> 03:17:54,160
uh over here so they've they've actually

3082
03:17:54,160 --> 03:17:56,080
got the uh

3083
03:17:56,080 --> 03:17:57,279
service what it looks like so i think

3084
03:17:57,279 --> 03:17:59,600
it's pretty obvious too right we we

3085
03:17:59,600 --> 03:18:00,960
don't let them make them spend an hour

3086
03:18:00,960 --> 03:18:02,560
looking for the bug and then several

3087
03:18:02,560 --> 03:18:04,080
hours exporting it like we have to keep

3088
03:18:04,080 --> 03:18:05,600
the whole thing down fat you know so

3089
03:18:05,600 --> 03:18:07,279
they're tiny binaries where like the

3090
03:18:07,279 --> 03:18:09,439
only thing you can do is basically the

3091
03:18:09,439 --> 03:18:11,439
bug for for a lot of these

3092
03:18:11,439 --> 03:18:12,800
um

3093
03:18:12,800 --> 03:18:14,960
so it's interesting how different people

3094
03:18:14,960 --> 03:18:17,120
go after challenges yeah i mean some of

3095
03:18:17,120 --> 03:18:19,200
them start a challenge and

3096
03:18:19,200 --> 03:18:20,880
see what type of inputs winding up first

3097
03:18:20,880 --> 03:18:22,880
and starts beginning other ones dive

3098
03:18:22,880 --> 03:18:24,880
into the middle of the binary other ones

3099
03:18:24,880 --> 03:18:27,120
look for specific functions being used

3100
03:18:27,120 --> 03:18:28,319
first

3101
03:18:28,319 --> 03:18:29,920
find all the stir copies or mem copies

3102
03:18:29,920 --> 03:18:32,399
or yeah yeah yeah and there is no one

3103
03:18:32,399 --> 03:18:33,200
right

3104
03:18:33,200 --> 03:18:34,479
way there's no

3105
03:18:34,479 --> 03:18:36,160
right way to do it all yeah that will

3106
03:18:36,160 --> 03:18:38,239
always guarantee finding the bug

3107
03:18:38,239 --> 03:18:39,279
it's

3108
03:18:39,279 --> 03:18:41,120
in some ways turns into a guessing game

3109
03:18:41,120 --> 03:18:42,399
as to which one you think doesn't give

3110
03:18:42,399 --> 03:18:44,160
you the most benefit and you know

3111
03:18:44,160 --> 03:18:45,920
sometimes it changes on the challenge

3112
03:18:45,920 --> 03:18:48,239
author or the type of challenge or

3113
03:18:48,239 --> 03:18:50,800
yeah and this is this is one where

3114
03:18:50,800 --> 03:18:52,319
you could probably have run it and

3115
03:18:52,319 --> 03:18:53,840
instantly known the bug yeah so because

3116
03:18:53,840 --> 03:18:55,600
it asks you for this yeah so a challenge

3117
03:18:55,600 --> 03:18:57,359
like this where

3118
03:18:57,359 --> 03:18:58,720
a lot of challenge authors name their

3119
03:18:58,720 --> 03:19:00,880
challenges based on some form of hint

3120
03:19:00,880 --> 03:19:03,120
example i did that with kazad for the

3121
03:19:03,120 --> 03:19:05,920
dwarf bytecode bug

3122
03:19:05,920 --> 03:19:07,680
so

3123
03:19:07,680 --> 03:19:09,840
knowing that this one has a cast hint in

3124
03:19:09,840 --> 03:19:10,880
the name

3125
03:19:10,880 --> 03:19:12,239
i'd probably start at the beginning

3126
03:19:12,239 --> 03:19:13,920
because i'm not going to go looking for

3127
03:19:13,920 --> 03:19:16,720
common functions or print offs yep

3128
03:19:16,720 --> 03:19:19,040
so that leads into i need to understand

3129
03:19:19,040 --> 03:19:21,520
what's in the beginning for

3130
03:19:21,520 --> 03:19:22,720
what type of casting or damage

3131
03:19:22,720 --> 03:19:24,960
application is handling and probably at

3132
03:19:24,960 --> 03:19:26,399
least that run the binary at least wants

3133
03:19:26,399 --> 03:19:27,359
to see

3134
03:19:27,359 --> 03:19:29,520
what is that even wanting for input is

3135
03:19:29,520 --> 03:19:31,600
it pure text is it pure binary data or

3136
03:19:31,600 --> 03:19:33,600
similar and in this case because it is

3137
03:19:33,600 --> 03:19:35,680
so straightforward the second you run it

3138
03:19:35,680 --> 03:19:36,800
and you see

3139
03:19:36,800 --> 03:19:37,760
type

3140
03:19:37,760 --> 03:19:39,680
of text or string

3141
03:19:39,680 --> 03:19:41,920
uh it i think it definitely

3142
03:19:41,920 --> 03:19:43,520
would confirm that that guess that

3143
03:19:43,520 --> 03:19:44,880
intuition in terms in terms of what it

3144
03:19:44,880 --> 03:19:47,520
is so we we we do have over here actual

3145
03:19:47,520 --> 03:19:48,960
like solve scripts actually on both

3146
03:19:48,960 --> 03:19:50,960
sides this is great they're scripts

3147
03:19:50,960 --> 03:19:52,720
already and and we have seen i think

3148
03:19:52,720 --> 03:19:55,200
we've only had one competitor so far

3149
03:19:55,200 --> 03:19:57,760
didn't use pwn tools so everyone else

3150
03:19:57,760 --> 03:20:00,479
clearly it's not a surprise uh phone

3151
03:20:00,479 --> 03:20:03,439
tools is clear the the tool of choice

3152
03:20:03,439 --> 03:20:05,120
um so interesting enough i've never

3153
03:20:05,120 --> 03:20:07,760
actually used phone two's tools

3154
03:20:07,760 --> 03:20:08,960
now do you think that's because you

3155
03:20:08,960 --> 03:20:10,800
haven't been writing exploits because

3156
03:20:10,800 --> 03:20:11,760
you most of when you were doing

3157
03:20:11,760 --> 03:20:12,960
exploitation was further back and it

3158
03:20:12,960 --> 03:20:14,479
wasn't as i was trying to exploit before

3159
03:20:14,479 --> 03:20:16,479
phone twos was even around or common

3160
03:20:16,479 --> 03:20:18,239
yeah so i never got in the habit i

3161
03:20:18,239 --> 03:20:20,239
actually have a common exploit script in

3162
03:20:20,239 --> 03:20:21,680
fact it still has a comment in there

3163
03:20:21,680 --> 03:20:23,760
about the showcase ripped off of was it

3164
03:20:23,760 --> 03:20:26,080
eisenbonds or something oh ein bazin

3165
03:20:26,080 --> 03:20:28,560
yeah ein bazin that was good every time

3166
03:20:28,560 --> 03:20:30,479
i write x white script yeah that's still

3167
03:20:30,479 --> 03:20:31,680
in there because you're copying from the

3168
03:20:31,680 --> 03:20:33,200
same thing every time yeah that was that

3169
03:20:33,200 --> 03:20:34,800
was i believe that was a shell code

3170
03:20:34,800 --> 03:20:36,720
payload that they traded for points as

3171
03:20:36,720 --> 03:20:38,640
like there was a joke category of bribe

3172
03:20:38,640 --> 03:20:39,920
the organizers and ghosts in the shell

3173
03:20:39,920 --> 03:20:41,760
code years ago and they traded they

3174
03:20:41,760 --> 03:20:43,120
traded shell code

3175
03:20:43,120 --> 03:20:44,720
it was it was really good show good like

3176
03:20:44,720 --> 03:20:46,560
you know you still i'm still using it on

3177
03:20:46,560 --> 03:20:48,319
64-bit systems that's functional really

3178
03:20:48,319 --> 03:20:50,080
funny yeah that was fantastic yeah

3179
03:20:50,080 --> 03:20:51,600
because i think it was like 3264

3180
03:20:51,600 --> 03:20:53,600
compatible in a very short

3181
03:20:53,600 --> 03:20:56,399
uh short range there okay so we're

3182
03:20:56,399 --> 03:20:58,080
definitely exercising the vulnerability

3183
03:20:58,080 --> 03:21:01,760
right if we actually watch um

3184
03:21:01,760 --> 03:21:02,800
uh

3185
03:21:02,800 --> 03:21:04,239
uh in

3186
03:21:04,239 --> 03:21:06,080
i think you both are

3187
03:21:06,080 --> 03:21:07,600
they both are triggering yeah i mean

3188
03:21:07,600 --> 03:21:09,200
it's they're both just kind of

3189
03:21:09,200 --> 03:21:10,319
triggering back and forth it's going to

3190
03:21:10,319 --> 03:21:12,000
be interesting so like okay

3191
03:21:12,000 --> 03:21:13,520
walk me through now if you're given

3192
03:21:13,520 --> 03:21:14,800
these exploit primitives right you're

3193
03:21:14,800 --> 03:21:15,760
given

3194
03:21:15,760 --> 03:21:18,399
a type confusion between an integer and

3195
03:21:18,399 --> 03:21:20,160
a text text variable

3196
03:21:20,160 --> 03:21:22,000
what would you like how would you use

3197
03:21:22,000 --> 03:21:23,040
that

3198
03:21:23,040 --> 03:21:24,720
um to start building like an actual

3199
03:21:24,720 --> 03:21:26,239
exploit

3200
03:21:26,239 --> 03:21:26,730
um

3201
03:21:26,730 --> 03:21:28,560
[Music]

3202
03:21:28,560 --> 03:21:30,960
the first thing i do is i actually check

3203
03:21:30,960 --> 03:21:33,600
especially our simple binary like this i

3204
03:21:33,600 --> 03:21:35,520
just actually check and see if sex

3205
03:21:35,520 --> 03:21:38,800
executable it's not common anymore

3206
03:21:38,800 --> 03:21:40,080
but that's still something that can be

3207
03:21:40,080 --> 03:21:42,160
turned on yeah and we haven't several as

3208
03:21:42,160 --> 03:21:43,040
challengers so you're right that's

3209
03:21:43,040 --> 03:21:45,040
that's what you want to check if that is

3210
03:21:45,040 --> 03:21:45,920
there

3211
03:21:45,920 --> 03:21:49,200
then there's a lot of very easy

3212
03:21:49,200 --> 03:21:50,399
effectively

3213
03:21:50,399 --> 03:21:52,560
write the stack and just go

3214
03:21:52,560 --> 03:21:54,239
we did get a question in chat somebody

3215
03:21:54,239 --> 03:21:55,680
was asking for your twitter handle we

3216
03:21:55,680 --> 03:21:57,600
forgot to to publish that so we should

3217
03:21:57,600 --> 03:21:59,680
make sure we get your uh your twitter

3218
03:21:59,680 --> 03:22:01,520
handler updated

3219
03:22:01,520 --> 03:22:03,359
i believe it's manic lightning i have to

3220
03:22:03,359 --> 03:22:05,520
look it up though yeah i've used it it's

3221
03:22:05,520 --> 03:22:06,960
been a while or you don't even have to

3222
03:22:06,960 --> 03:22:08,720
do that if if you have something that

3223
03:22:08,720 --> 03:22:10,479
you want to be uh

3224
03:22:10,479 --> 03:22:12,399
want to be known as uh for for a twitter

3225
03:22:12,399 --> 03:22:14,560
handle we can we can update that but

3226
03:22:14,560 --> 03:22:16,800
uh no no worries either way manic

3227
03:22:16,800 --> 03:22:18,239
underscore lightning

3228
03:22:18,239 --> 03:22:19,520
okay there we go

3229
03:22:19,520 --> 03:22:20,960
do you see that manic underscore

3230
03:22:20,960 --> 03:22:22,239
lightning

3231
03:22:22,239 --> 03:22:23,600
is our twitter handle

3232
03:22:23,600 --> 03:22:24,720
all right

3233
03:22:24,720 --> 03:22:26,720
so yeah again we're there's this is just

3234
03:22:26,720 --> 03:22:28,000
to see basically which one of these

3235
03:22:28,000 --> 03:22:29,920
teams now can turn this like kind of

3236
03:22:29,920 --> 03:22:32,800
obvious primitive of this type confusion

3237
03:22:32,800 --> 03:22:34,640
in into a working bug um and this is

3238
03:22:34,640 --> 03:22:36,319
actually one that i haven't seen the

3239
03:22:36,319 --> 03:22:37,840
this i know we have a soft script we've

3240
03:22:37,840 --> 03:22:39,600
tested with it i actually haven't seen

3241
03:22:39,600 --> 03:22:42,560
the exact payload um but it if we oh

3242
03:22:42,560 --> 03:22:45,760
here we go this is a nice uh

3243
03:22:45,760 --> 03:22:48,399
look there and we've got yeah 256

3244
03:22:48,399 --> 03:22:49,760
bytes

3245
03:22:49,760 --> 03:22:50,720
they're going to get in when it's a

3246
03:22:50,720 --> 03:22:52,399
string

3247
03:22:52,399 --> 03:22:53,680
so we're looking for god entries to

3248
03:22:53,680 --> 03:22:55,439
overwrite yep so which one do we want

3249
03:22:55,439 --> 03:22:56,399
right here

3250
03:22:56,399 --> 03:22:58,720
they do very similar to how i tend to do

3251
03:22:58,720 --> 03:22:59,920
exploitation

3252
03:22:59,920 --> 03:23:01,840
in that starting to get some of the

3253
03:23:01,840 --> 03:23:03,760
payload together and throw it into a

3254
03:23:03,760 --> 03:23:06,640
debugger yeah yeah to make sure it

3255
03:23:06,640 --> 03:23:08,319
validate what you've done so far

3256
03:23:08,319 --> 03:23:09,920
i'm on the right tracking process before

3257
03:23:09,920 --> 03:23:11,680
i write what's the shell code and then

3258
03:23:11,680 --> 03:23:12,960
one and have triggered what's going

3259
03:23:12,960 --> 03:23:14,800
wrong yeah i started debugging part way

3260
03:23:14,800 --> 03:23:16,080
through the shell code itself we talked

3261
03:23:16,080 --> 03:23:17,120
a little bit in the last room there's

3262
03:23:17,120 --> 03:23:18,800
like there's there's a a lot of people

3263
03:23:18,800 --> 03:23:20,880
that will just write a complete exploit

3264
03:23:20,880 --> 03:23:22,239
never touching a debugger and then only

3265
03:23:22,239 --> 03:23:24,160
use it if they need to at the very end

3266
03:23:24,160 --> 03:23:25,920
and other people who use the debugger as

3267
03:23:25,920 --> 03:23:27,760
a part of the learning process and

3268
03:23:27,760 --> 03:23:29,279
validation while they're doing it and

3269
03:23:29,279 --> 03:23:31,200
yeah i do more the same same as you do

3270
03:23:31,200 --> 03:23:32,560
as well and it's usually because i'm

3271
03:23:32,560 --> 03:23:34,319
dealing with the harder more complex

3272
03:23:34,319 --> 03:23:35,920
things so

3273
03:23:35,920 --> 03:23:37,439
yeah you can write all the shell code

3274
03:23:37,439 --> 03:23:40,000
but one typo and everything falls apart

3275
03:23:40,000 --> 03:23:41,359
and you don't know why right and so you

3276
03:23:41,359 --> 03:23:42,640
want to kind of like do incremental

3277
03:23:42,640 --> 03:23:44,560
steps that are each verified and and

3278
03:23:44,560 --> 03:23:47,040
you're sure kind of as you go along with

3279
03:23:47,040 --> 03:23:48,319
these simpler ones you probably could

3280
03:23:48,319 --> 03:23:51,520
get away with the full write and go i i

3281
03:23:51,520 --> 03:23:52,880
certainly there are definitely people

3282
03:23:52,880 --> 03:23:53,840
that that

3283
03:23:53,840 --> 03:23:55,600
yes yeah but that's the thing is if it

3284
03:23:55,600 --> 03:23:56,960
doesn't then and you got to kind of back

3285
03:23:56,960 --> 03:23:59,760
it up if you've tested smaller bits

3286
03:23:59,760 --> 03:24:01,439
you have people like rusty that writes

3287
03:24:01,439 --> 03:24:04,399
assembly that write binary with pure hex

3288
03:24:04,399 --> 03:24:05,920
the shell code goes straight in from the

3289
03:24:05,920 --> 03:24:08,000
top of their head right exactly so he uh

3290
03:24:08,000 --> 03:24:09,840
he tends to not use a debugger very much

3291
03:24:09,840 --> 03:24:11,439
no he has used the hex editor yeah

3292
03:24:11,439 --> 03:24:13,840
that's that is his his phone script

3293
03:24:13,840 --> 03:24:15,200
all right so we are actually starting to

3294
03:24:15,200 --> 03:24:16,800
see um

3295
03:24:16,800 --> 03:24:19,279
a couple of kind of handlers here so

3296
03:24:19,279 --> 03:24:21,600
the uh the straw hat wait am i american

3297
03:24:21,600 --> 03:24:23,680
i keep i keep getting back around too

3298
03:24:23,680 --> 03:24:25,120
tired straw hat

3299
03:24:25,120 --> 03:24:28,399
and cospin yes straw height and cuspin

3300
03:24:28,399 --> 03:24:30,319
help me remember this chat chat will

3301
03:24:30,319 --> 03:24:31,920
make fun of me if i get it wrong so i

3302
03:24:31,920 --> 03:24:36,239
gotta get it right uh so straw hat is um

3303
03:24:36,239 --> 03:24:38,080
uh is again starting to kind of build

3304
03:24:38,080 --> 03:24:40,560
those those helpers um

3305
03:24:40,560 --> 03:24:44,319
and so we're seeing uh a prompt uh set

3306
03:24:44,319 --> 03:24:48,080
number and show string

3307
03:24:48,720 --> 03:24:51,120
so this is this is gonna let them uh

3308
03:24:51,120 --> 03:24:52,239
interact with these with these

3309
03:24:52,239 --> 03:24:53,600
perimeters all right so what do we what

3310
03:24:53,600 --> 03:24:55,760
are we doing we've got libsy addresses

3311
03:24:55,760 --> 03:24:57,359
we've got a pi offset so we're

3312
03:24:57,359 --> 03:25:01,279
calculating the the pi shift

3313
03:25:01,439 --> 03:25:03,439
and they're going to do

3314
03:25:03,439 --> 03:25:06,560
uh libsy start

3315
03:25:06,560 --> 03:25:08,160
so they're there are they leak they're

3316
03:25:08,160 --> 03:25:10,960
leaking ellipses start it looks like

3317
03:25:10,960 --> 03:25:12,239
so they're gonna they're gonna set the

3318
03:25:12,239 --> 03:25:13,279
number

3319
03:25:13,279 --> 03:25:14,880
to the offset for lipstick then they're

3320
03:25:14,880 --> 03:25:17,359
gonna show what that value is

3321
03:25:17,359 --> 03:25:18,880
um but they're just gonna do this

3322
03:25:18,880 --> 03:25:20,080
interactively right so then actually

3323
03:25:20,080 --> 03:25:22,080
saving it to a variable it looks like

3324
03:25:22,080 --> 03:25:24,000
yeah and that yeah however here they're

3325
03:25:24,000 --> 03:25:25,520
already they're working in the leak

3326
03:25:25,520 --> 03:25:27,200
right now

3327
03:25:27,200 --> 03:25:28,319
yeah i mean it looks like it is i'm

3328
03:25:28,319 --> 03:25:30,160
seeing they've got some destination

3329
03:25:30,160 --> 03:25:34,359
yeah leak value on the bomb

3330
03:25:36,160 --> 03:25:37,439
um

3331
03:25:37,439 --> 03:25:39,040
yeah they're not exactly sure which

3332
03:25:39,040 --> 03:25:40,720
value they're leaking probably lip c

3333
03:25:40,720 --> 03:25:42,239
though it's a common thing to go after

3334
03:25:42,239 --> 03:25:43,359
because they need to do a straight

3335
03:25:43,359 --> 03:25:44,560
system call

3336
03:25:44,560 --> 03:25:45,439
yeah actually you know that's a good

3337
03:25:45,439 --> 03:25:47,279
question i don't remember which uh flags

3338
03:25:47,279 --> 03:25:50,720
we compiled this on if this is uh aslrd

3339
03:25:50,720 --> 03:25:53,120
or if it's um

3340
03:25:53,120 --> 03:25:54,399
so so that would definitely i mean

3341
03:25:54,399 --> 03:25:56,479
although we did see teams uh run checks

3342
03:25:56,479 --> 03:25:57,760
like right because again the first thing

3343
03:25:57,760 --> 03:25:58,880
they want to do is don't make any

3344
03:25:58,880 --> 03:26:00,560
assumptions yeah see what it actually

3345
03:26:00,560 --> 03:26:02,560
does if it doesn't have aslr that can

3346
03:26:02,560 --> 03:26:04,080
make your choker a lot easier especially

3347
03:26:04,080 --> 03:26:05,840
on small ones like this it takes you all

3348
03:26:05,840 --> 03:26:07,920
of two seconds or unchecked sec yeah it

3349
03:26:07,920 --> 03:26:09,200
might save you multiple save your

3350
03:26:09,200 --> 03:26:10,800
several minutes of i mean which again

3351
03:26:10,800 --> 03:26:12,160
these with these primitives you could

3352
03:26:12,160 --> 03:26:13,359
certainly solve it either way right

3353
03:26:13,359 --> 03:26:15,040
there's no question you could it's all

3354
03:26:15,040 --> 03:26:16,239
both ways

3355
03:26:16,239 --> 03:26:17,520
you're in a race so in a couple of

3356
03:26:17,520 --> 03:26:18,960
seconds it may actually save you a lot

3357
03:26:18,960 --> 03:26:21,680
of time yeah exactly so all right uh

3358
03:26:21,680 --> 03:26:23,200
value is

3359
03:26:23,200 --> 03:26:24,880
we're stuck okay so now we're opening up

3360
03:26:24,880 --> 03:26:27,200
a lib c

3361
03:26:27,200 --> 03:26:29,200
someone is looking at the

3362
03:26:29,200 --> 03:26:30,800
uh they're dumping symbols from libsy

3363
03:26:30,800 --> 03:26:32,960
they're looking for lipsy start probably

3364
03:26:32,960 --> 03:26:35,359
sure enough

3365
03:26:35,359 --> 03:26:36,640
yep

3366
03:26:36,640 --> 03:26:38,399
and so straw has pulled out the lipsy

3367
03:26:38,399 --> 03:26:39,439
start

3368
03:26:39,439 --> 03:26:43,399
they've got their lipsy base

3369
03:26:46,640 --> 03:26:47,680
you know actually i was just remember i

3370
03:26:47,680 --> 03:26:49,040
think weren't you one of the were you

3371
03:26:49,040 --> 03:26:50,640
one of the spotters when we did the

3372
03:26:50,640 --> 03:26:51,439
other

3373
03:26:51,439 --> 03:26:52,800
live ctf at def con a couple years ago

3374
03:26:52,800 --> 03:26:54,640
we had people watching yes i was i

3375
03:26:54,640 --> 03:26:55,920
thought yeah i just realized that i

3376
03:26:55,920 --> 03:26:56,960
remember you were what because i was

3377
03:26:56,960 --> 03:26:58,640
describing in the last chat how we had

3378
03:26:58,640 --> 03:26:59,520
like

3379
03:26:59,520 --> 03:27:01,760
analysts specifically like watching

3380
03:27:01,760 --> 03:27:03,200
because because it is it's hard to like

3381
03:27:03,200 --> 03:27:04,560
switch back and forth yeah i was

3382
03:27:04,560 --> 03:27:06,960
watching and annoying what's frustrating

3383
03:27:06,960 --> 03:27:10,160
is that the guy was watching he had full

3384
03:27:10,160 --> 03:27:11,439
working shell code trying to call

3385
03:27:11,439 --> 03:27:14,720
business h for 10 minutes however

3386
03:27:14,720 --> 03:27:16,080
because it's running on android it's

3387
03:27:16,080 --> 03:27:19,279
just a user of an sh oh i forgot about

3388
03:27:19,279 --> 03:27:21,760
that one that's right like the one i was

3389
03:27:21,760 --> 03:27:23,840
watching like had it fully working

3390
03:27:23,840 --> 03:27:25,120
like 10 minutes trying to debug it until

3391
03:27:25,120 --> 03:27:26,800
someone else got it someone beat him to

3392
03:27:26,800 --> 03:27:28,720
like the final little bit it was so

3393
03:27:28,720 --> 03:27:30,800
devastating that's painful yeah that is

3394
03:27:30,800 --> 03:27:32,000
hard and we've seen a couple people in

3395
03:27:32,000 --> 03:27:33,840
fact uh we actually saw that earlier

3396
03:27:33,840 --> 03:27:35,920
where the samurai player here had a

3397
03:27:35,920 --> 03:27:38,000
working exploit but didn't know it was

3398
03:27:38,000 --> 03:27:39,359
working because they were breaking

3399
03:27:39,359 --> 03:27:41,120
before a flush was called that caused

3400
03:27:41,120 --> 03:27:42,080
that like there was a memory being

3401
03:27:42,080 --> 03:27:43,840
overwritten and they were breaking in in

3402
03:27:43,840 --> 03:27:45,439
the debugger i mean like oh it's not

3403
03:27:45,439 --> 03:27:46,640
working clearly i need to change my

3404
03:27:46,640 --> 03:27:48,239
exploit they literally just need to set

3405
03:27:48,239 --> 03:27:50,399
the break point after the flush and they

3406
03:27:50,399 --> 03:27:51,600
would have seen that it was it was

3407
03:27:51,600 --> 03:27:52,800
exceeding so

3408
03:27:52,800 --> 03:27:55,040
well that's the other fun part is

3409
03:27:55,040 --> 03:27:57,200
the way a lot of programs work with

3410
03:27:57,200 --> 03:27:59,040
networking and stuff it's very easy

3411
03:27:59,040 --> 03:28:01,359
forget about flush yep and have code

3412
03:28:01,359 --> 03:28:03,760
work local it doesn't work remote yep

3413
03:28:03,760 --> 03:28:05,200
oh yeah not something that runs the

3414
03:28:05,200 --> 03:28:06,640
works on my machine versus like you

3415
03:28:06,640 --> 03:28:08,479
can't throw that's a painful one for

3416
03:28:08,479 --> 03:28:10,000
whatever whatever the reason is offsets

3417
03:28:10,000 --> 03:28:11,760
or differentiation failing because i

3418
03:28:11,760 --> 03:28:13,040
screwed something up or the failing

3419
03:28:13,040 --> 03:28:14,880
because they altered the binary yeah

3420
03:28:14,880 --> 03:28:16,399
yeah or it's just a difference

3421
03:28:16,399 --> 03:28:18,640
or something

3422
03:28:19,279 --> 03:28:21,600
horrible yeah yeah that was bad in this

3423
03:28:21,600 --> 03:28:24,160
case we did do the flush it just the

3424
03:28:24,160 --> 03:28:25,760
break point was was set beforehand so

3425
03:28:25,760 --> 03:28:27,520
let's keep an eye on it so we're still

3426
03:28:27,520 --> 03:28:30,239
over here on uh um looks like they're

3427
03:28:30,239 --> 03:28:32,239
still working on the leak over here so

3428
03:28:32,239 --> 03:28:33,439
okay i think

3429
03:28:33,439 --> 03:28:35,760
it looks like they're actually ahead

3430
03:28:35,760 --> 03:28:38,080
yeah current observation yeah i think i

3431
03:28:38,080 --> 03:28:41,120
think straw hat has a working leak

3432
03:28:41,120 --> 03:28:42,800
and i have to be of course impartial

3433
03:28:42,800 --> 03:28:44,800
even though we have a binge user even

3434
03:28:44,800 --> 03:28:46,399
though we have a binge user i am

3435
03:28:46,399 --> 03:28:48,560
officially impartial yep

3436
03:28:48,560 --> 03:28:49,840
um

3437
03:28:49,840 --> 03:28:52,000
and we yeah we didn't build uh all sorts

3438
03:28:52,000 --> 03:28:53,600
of terrible like tool-breaking bugs into

3439
03:28:53,600 --> 03:28:54,880
these we just wanted these to be simple

3440
03:28:54,880 --> 03:28:56,960
straightforward challenges so

3441
03:28:56,960 --> 03:28:58,560
there's there was there was a debate

3442
03:28:58,560 --> 03:29:00,399
about how much we wanted to uh

3443
03:29:00,399 --> 03:29:01,680
put nasty things into it and there's

3444
03:29:01,680 --> 03:29:03,439
basically nothing that's

3445
03:29:03,439 --> 03:29:04,640
um

3446
03:29:04,640 --> 03:29:07,840
nothing that's that's tricky

3447
03:29:08,080 --> 03:29:09,840
oh you've got you've got a high mom

3448
03:29:09,840 --> 03:29:12,319
in chat

3449
03:29:12,319 --> 03:29:14,640
my oldest toddler

3450
03:29:14,640 --> 03:29:16,960
hi welcome wait we're yeah our videos

3451
03:29:16,960 --> 03:29:20,000
are on that's right

3452
03:29:20,000 --> 03:29:21,200
yeah i don't know if my family is tuned

3453
03:29:21,200 --> 03:29:23,439
in yet or not

3454
03:29:23,439 --> 03:29:24,960
they got a lot a lot of video to recap

3455
03:29:24,960 --> 03:29:26,640
if they catch up

3456
03:29:26,640 --> 03:29:28,960
all right so i see but

3457
03:29:28,960 --> 03:29:30,479
the leak was happening over here this i

3458
03:29:30,479 --> 03:29:31,359
feel like they've it's really

3459
03:29:31,359 --> 03:29:32,880
interesting this happened the last a

3460
03:29:32,880 --> 03:29:34,080
couple matches ago where they kind of

3461
03:29:34,080 --> 03:29:35,920
just slowed up they hit this point where

3462
03:29:35,920 --> 03:29:36,960
they've got other perimeters they got

3463
03:29:36,960 --> 03:29:38,720
the pieces and then they just kind of

3464
03:29:38,720 --> 03:29:40,080
are working through issues like what's

3465
03:29:40,080 --> 03:29:42,640
the gotcha what's kind of blocking them

3466
03:29:42,640 --> 03:29:43,840
um

3467
03:29:43,840 --> 03:29:45,040
and we'll see and now the other thing

3468
03:29:45,040 --> 03:29:46,239
we're trying to remember too is we're

3469
03:29:46,239 --> 03:29:47,279
trying to remember if we want to give

3470
03:29:47,279 --> 03:29:49,279
hints we're gonna do it earlier so let's

3471
03:29:49,279 --> 03:29:51,040
look at the production desk and let them

3472
03:29:51,040 --> 03:29:52,160
they're writing the value they're

3473
03:29:52,160 --> 03:29:54,080
calculating their offset for

3474
03:29:54,080 --> 03:29:55,279
where the right

3475
03:29:55,279 --> 03:29:57,200
over here

3476
03:29:57,200 --> 03:29:58,960
okay so so they already know the

3477
03:29:58,960 --> 03:30:01,600
override target

3478
03:30:01,600 --> 03:30:03,040
and there's gonna they're gonna change

3479
03:30:03,040 --> 03:30:06,000
that let's see where do we

3480
03:30:08,720 --> 03:30:11,680
environment offset interesting

3481
03:30:11,680 --> 03:30:13,840
huh

3482
03:30:13,840 --> 03:30:14,880
i don't know what they're doing with

3483
03:30:14,880 --> 03:30:18,000
that one so actually they're leaking

3484
03:30:18,000 --> 03:30:20,640
something about an environment offset

3485
03:30:20,640 --> 03:30:23,840
uh straw hat i don't know

3486
03:30:24,000 --> 03:30:27,680
it's easy way to adjust um

3487
03:30:27,680 --> 03:30:29,520
the remote yeah maybe

3488
03:30:29,520 --> 03:30:31,040
that's that's true verify that's not a

3489
03:30:31,040 --> 03:30:32,239
bad idea that makes sense just to make

3490
03:30:32,239 --> 03:30:33,920
sure that there's nothing else yeah and

3491
03:30:33,920 --> 03:30:35,760
that's an easy thing to do habit-wise

3492
03:30:35,760 --> 03:30:36,800
especially when you have multiple

3493
03:30:36,800 --> 03:30:38,000
different lib c's i've done that in my

3494
03:30:38,000 --> 03:30:39,760
own shell code where you want things to

3495
03:30:39,760 --> 03:30:42,160
adjust knowing that you may have a newer

3496
03:30:42,160 --> 03:30:44,560
version of c it's just a dot version or

3497
03:30:44,560 --> 03:30:46,479
or even just like run it and dump it you

3498
03:30:46,479 --> 03:30:47,520
only have to do anything with it

3499
03:30:47,520 --> 03:30:48,960
necessarily and that way if you see it's

3500
03:30:48,960 --> 03:30:50,239
changed you know you have to put like

3501
03:30:50,239 --> 03:30:51,120
you don't have to put the effort in to

3502
03:30:51,120 --> 03:30:53,120
make it account for it

3503
03:30:53,120 --> 03:30:54,720
right off the bat

3504
03:30:54,720 --> 03:30:58,039
but you could

3505
03:31:00,000 --> 03:31:02,399
validated their rights hit the

3506
03:31:02,399 --> 03:31:05,120
sterling like they wanted

3507
03:31:05,120 --> 03:31:06,800
okay so if we're good if we're close to

3508
03:31:06,800 --> 03:31:07,920
an override that's a good sign although

3509
03:31:07,920 --> 03:31:10,000
we are over in a vm in straw hat so

3510
03:31:10,000 --> 03:31:12,319
straw hats actually pulled up uh pulled

3511
03:31:12,319 --> 03:31:14,239
up the challenge in a vm

3512
03:31:14,239 --> 03:31:16,000
so they're they're trying to match the

3513
03:31:16,000 --> 03:31:17,200
and actually i do see they're also

3514
03:31:17,200 --> 03:31:19,359
running ubuntu 2204. i don't know if

3515
03:31:19,359 --> 03:31:20,640
they just

3516
03:31:20,640 --> 03:31:22,560
defaulted to that if they saw others on

3517
03:31:22,560 --> 03:31:24,399
the stream where we we did specifically

3518
03:31:24,399 --> 03:31:25,680
mention that that tends to be what we

3519
03:31:25,680 --> 03:31:26,479
use

3520
03:31:26,479 --> 03:31:30,560
uh i think my current vm is 2204. yeah

3521
03:31:30,560 --> 03:31:33,359
just a newer version

3522
03:31:33,359 --> 03:31:35,279
so they've they're wanting to make sure

3523
03:31:35,279 --> 03:31:38,239
that they've got it running

3524
03:31:38,560 --> 03:31:40,800
running in a debugger

3525
03:31:40,800 --> 03:31:44,160
running the challenge and

3526
03:31:44,880 --> 03:31:46,000
this actually this may be one of the

3527
03:31:46,000 --> 03:31:47,439
first ones in a while that they weren't

3528
03:31:47,439 --> 03:31:49,760
using phone tools oh no this is using

3529
03:31:49,760 --> 03:31:51,200
pawn tools phone tools they've just got

3530
03:31:51,200 --> 03:31:52,160
it popping up in the new terminal

3531
03:31:52,160 --> 03:31:53,920
separately but yeah that's uh that's

3532
03:31:53,920 --> 03:31:55,680
another thing that i so here's the

3533
03:31:55,680 --> 03:31:57,040
reason why you should use phone tools if

3534
03:31:57,040 --> 03:31:58,000
you knew if you're not in the habit of

3535
03:31:58,000 --> 03:31:58,640
it

3536
03:31:58,640 --> 03:32:00,399
being able to write your your payload

3537
03:32:00,399 --> 03:32:02,080
and write your script but then actually

3538
03:32:02,080 --> 03:32:03,600
just say like break here

3539
03:32:03,600 --> 03:32:05,200
right and get a debugger at that point

3540
03:32:05,200 --> 03:32:06,399
at that progress and not have to put

3541
03:32:06,399 --> 03:32:08,399
like a sleep or some other

3542
03:32:08,399 --> 03:32:09,840
you do you know the last time i actually

3543
03:32:09,840 --> 03:32:11,760
competed

3544
03:32:11,760 --> 03:32:13,600
a little while ago i would imagine

3545
03:32:13,600 --> 03:32:16,080
the very first year of legit bs okay so

3546
03:32:16,080 --> 03:32:17,279
that's before i joined them that's right

3547
03:32:17,279 --> 03:32:18,319
because yeah we played on the same team

3548
03:32:18,319 --> 03:32:19,439
that yeah didn't we yeah that's right

3549
03:32:19,439 --> 03:32:20,640
the last time i played

3550
03:32:20,640 --> 03:32:23,040
with you that's right

3551
03:32:23,040 --> 03:32:24,960
oh man i'm black cats i feel and so that

3552
03:32:24,960 --> 03:32:26,560
was like

3553
03:32:26,560 --> 03:32:28,960
10 years ago basically

3554
03:32:28,960 --> 03:32:30,880
just about so nine or ten

3555
03:32:30,880 --> 03:32:32,399
four five

3556
03:32:32,399 --> 03:32:33,840
cause because the legibs ran for five

3557
03:32:33,840 --> 03:32:36,800
years and then four over the overflow so

3558
03:32:36,800 --> 03:32:38,479
maybe eight eight or even four yeah yeah

3559
03:32:38,479 --> 03:32:39,920
it'd be eight yeah because the very

3560
03:32:39,920 --> 03:32:41,920
first year i was competing wasn't

3561
03:32:41,920 --> 03:32:44,319
actually running yeah

3562
03:32:44,319 --> 03:32:45,920
yeah that's right

3563
03:32:45,920 --> 03:32:48,000
but i brought a lot that's fun for you

3564
03:32:48,000 --> 03:32:49,600
for you guys to have fun with

3565
03:32:49,600 --> 03:32:50,479
yes

3566
03:32:50,479 --> 03:32:52,000
that's fun for you

3567
03:32:52,000 --> 03:32:54,080
oh the memories

3568
03:32:54,080 --> 03:32:55,359
actually i thankfully i don't think i

3569
03:32:55,359 --> 03:32:56,640
worked on that one i don't remember who

3570
03:32:56,640 --> 03:32:59,200
solved that one but it wasn't me

3571
03:32:59,200 --> 03:33:00,640
you guys didn't

3572
03:33:00,640 --> 03:33:02,160
you guys actually got screwed up with

3573
03:33:02,160 --> 03:33:03,760
that one yeah we may not have

3574
03:33:03,760 --> 03:33:06,000
rusty rusty got screwed up yeah it was

3575
03:33:06,000 --> 03:33:08,720
something that that blocked it

3576
03:33:08,720 --> 03:33:10,160
all right so oh here we go okay so now

3577
03:33:10,160 --> 03:33:11,279
we're starting our right over here on

3578
03:33:11,279 --> 03:33:12,640
straw head so straw heights actually got

3579
03:33:12,640 --> 03:33:15,200
a set string now right so they've

3580
03:33:15,200 --> 03:33:16,960
um

3581
03:33:16,960 --> 03:33:18,720
they've got their their leaks all

3582
03:33:18,720 --> 03:33:19,760
figured out they're pulling out of the

3583
03:33:19,760 --> 03:33:21,120
offsets but now they're just now

3584
03:33:21,120 --> 03:33:23,279
starting their their their right but

3585
03:33:23,279 --> 03:33:24,880
they're going to use the set string to

3586
03:33:24,880 --> 03:33:26,960
change a value in memory so

3587
03:33:26,960 --> 03:33:28,160
let's compare

3588
03:33:28,160 --> 03:33:29,520
so they're already doing the right with

3589
03:33:29,520 --> 03:33:31,520
the location of sterling that's going to

3590
03:33:31,520 --> 03:33:33,760
overwrite i do like that by the way this

3591
03:33:33,760 --> 03:33:35,439
is great because they are going for the

3592
03:33:35,439 --> 03:33:37,359
like just write the payload yep right so

3593
03:33:37,359 --> 03:33:38,560
we're seeing cat spin is like just write

3594
03:33:38,560 --> 03:33:40,239
the payload and straw hat's got like the

3595
03:33:40,239 --> 03:33:42,560
helper function and the utilities

3596
03:33:42,560 --> 03:33:45,200
um you got your three x's as a test so

3597
03:33:45,200 --> 03:33:46,640
do an overhead and see if the x's show

3598
03:33:46,640 --> 03:33:47,279
up

3599
03:33:47,279 --> 03:33:48,880
oh this is good so they're both right

3600
03:33:48,880 --> 03:33:50,640
now really close or they're both working

3601
03:33:50,640 --> 03:33:52,720
on their override and once it's done

3602
03:33:52,720 --> 03:33:56,319
uh they will yeah it's i i couldn't pick

3603
03:33:56,319 --> 03:33:57,600
i could not pick at this point this is

3604
03:33:57,600 --> 03:34:00,920
really close

3605
03:34:01,200 --> 03:34:04,080
we're back into ida

3606
03:34:04,080 --> 03:34:07,120
so what are we looking for

3607
03:34:08,800 --> 03:34:11,279
we've got gdb up

3608
03:34:11,279 --> 03:34:15,000
we got our break points

3609
03:34:16,239 --> 03:34:18,960
i don't do it so do we have um i think

3610
03:34:18,960 --> 03:34:19,920
they're getting

3611
03:34:19,920 --> 03:34:21,200
i may be mistaken but i think they're

3612
03:34:21,200 --> 03:34:22,720
getting ready to start playing show code

3613
03:34:22,720 --> 03:34:24,239
then

3614
03:34:24,239 --> 03:34:25,600
well if they're just are they just going

3615
03:34:25,600 --> 03:34:27,359
to go to like call a system they might

3616
03:34:27,359 --> 03:34:28,960
not even need any actual shell code if

3617
03:34:28,960 --> 03:34:30,160
they're going to overwrite like a system

3618
03:34:30,160 --> 03:34:32,160
pointer

3619
03:34:32,160 --> 03:34:34,640
they might just get a shell

3620
03:34:34,640 --> 03:34:36,000
i'm curious what this they have some

3621
03:34:36,000 --> 03:34:37,760
other values up top i didn't catch which

3622
03:34:37,760 --> 03:34:40,800
ones they are pointing to

3623
03:34:42,080 --> 03:34:42,960
if they're jumping straight to a

3624
03:34:42,960 --> 03:34:44,000
function i don't know what it would be

3625
03:34:44,000 --> 03:34:46,479
at the moment

3626
03:34:49,040 --> 03:34:50,399
all right here we go we're back into ida

3627
03:34:50,399 --> 03:34:53,119
over here

3628
03:34:53,600 --> 03:34:55,520
looking at the override

3629
03:34:55,520 --> 03:34:57,680
all right yeah i don't i mean they they

3630
03:34:57,680 --> 03:34:59,359
know what to do i don't know that they

3631
03:34:59,359 --> 03:35:00,640
need any hints at this point i think

3632
03:35:00,640 --> 03:35:02,399
we're just uh watching them put the

3633
03:35:02,399 --> 03:35:04,640
final polish on it here if they

3634
03:35:04,640 --> 03:35:05,840
it's going to be who

3635
03:35:05,840 --> 03:35:06,880
soon

3636
03:35:06,880 --> 03:35:08,080
as somebody had

3637
03:35:08,080 --> 03:35:12,399
somebody has a a right

3638
03:35:13,439 --> 03:35:14,960
that's just hanging now

3639
03:35:14,960 --> 03:35:17,358
they're uh

3640
03:35:18,319 --> 03:35:19,279
you know that might actually be one of

3641
03:35:19,279 --> 03:35:20,399
the issues where the framework is

3642
03:35:20,399 --> 03:35:21,520
hanging on the reed well that's what i

3643
03:35:21,520 --> 03:35:22,640
was gonna say one of the problems with

3644
03:35:22,640 --> 03:35:24,160
not doing a sort of like helper function

3645
03:35:24,160 --> 03:35:25,840
thing is that it's easy to mess up like

3646
03:35:25,840 --> 03:35:27,439
a new line or like you know you forgot

3647
03:35:27,439 --> 03:35:28,960
another input line so

3648
03:35:28,960 --> 03:35:30,560
that's we might be seeing the downside

3649
03:35:30,560 --> 03:35:32,080
of that approach i think they got that

3650
03:35:32,080 --> 03:35:34,479
payload faster and if it works

3651
03:35:34,479 --> 03:35:35,760
it'll be quicker but they're more likely

3652
03:35:35,760 --> 03:35:37,439
to have bugs

3653
03:35:37,439 --> 03:35:38,960
but we're still we're still over back

3654
03:35:38,960 --> 03:35:40,960
and neck at this point yeah yeah it's

3655
03:35:40,960 --> 03:35:42,560
it's they have the leak they know the

3656
03:35:42,560 --> 03:35:44,479
offsets they i think they they both know

3657
03:35:44,479 --> 03:35:46,479
that the address they want to target

3658
03:35:46,479 --> 03:35:48,239
and the value they want to put they're

3659
03:35:48,239 --> 03:35:50,560
just trying to like finish it out get

3660
03:35:50,560 --> 03:35:53,279
this right and that determines who moves

3661
03:35:53,279 --> 03:35:54,880
on to the round of eight so this is the

3662
03:35:54,880 --> 03:35:57,840
last round or that's match in round one

3663
03:35:57,840 --> 03:36:00,160
so we've got 16 teams uh we've already

3664
03:36:00,160 --> 03:36:02,399
identified the top seven

3665
03:36:02,399 --> 03:36:03,439
um

3666
03:36:03,439 --> 03:36:06,239
that are gonna move on and then one more

3667
03:36:06,239 --> 03:36:07,760
uh this this will be the last one we're

3668
03:36:07,760 --> 03:36:08,880
actually gonna take a little bit of a

3669
03:36:08,880 --> 03:36:10,239
break on the stream so we're gonna leave

3670
03:36:10,239 --> 03:36:11,760
like the intermission up after this one

3671
03:36:11,760 --> 03:36:12,880
a little longer

3672
03:36:12,880 --> 03:36:16,880
uh and let us recuperate um after

3673
03:36:16,880 --> 03:36:18,720
a long time

3674
03:36:18,720 --> 03:36:21,840
and uh we'll we'll we'll put up the the

3675
03:36:21,840 --> 03:36:22,960
rest of the schedule for the teams that

3676
03:36:22,960 --> 03:36:24,080
are here so they know when they're gonna

3677
03:36:24,080 --> 03:36:24,880
go

3678
03:36:24,880 --> 03:36:26,319
and uh we'll line up the challenges for

3679
03:36:26,319 --> 03:36:27,840
the rest of the day and from there on

3680
03:36:27,840 --> 03:36:29,600
out we have the just four more matches

3681
03:36:29,600 --> 03:36:31,200
this afternoon that'll take us all the

3682
03:36:31,200 --> 03:36:33,040
way down to a top four so we're gonna go

3683
03:36:33,040 --> 03:36:37,040
from uh 16 yesterday to just four coming

3684
03:36:37,040 --> 03:36:39,600
in tomorrow

3685
03:36:39,600 --> 03:36:40,880
very good i was half afraid somebody

3686
03:36:40,880 --> 03:36:42,080
would land it really quickly i was kind

3687
03:36:42,080 --> 03:36:43,600
of like you know talking about the

3688
03:36:43,600 --> 03:36:45,040
logistics but

3689
03:36:45,040 --> 03:36:47,359
um i'm seeing a

3690
03:36:47,359 --> 03:36:49,279
they're debugging their hang on the read

3691
03:36:49,279 --> 03:36:51,200
they're debugging here on a stack on a

3692
03:36:51,200 --> 03:36:52,000
yeah

3693
03:36:52,000 --> 03:36:53,920
um

3694
03:36:53,920 --> 03:36:55,600
is it the right or the yeah they've set

3695
03:36:55,600 --> 03:36:58,239
a breakpoint

3696
03:37:00,560 --> 03:37:01,840
yeah this is definitely the thing that i

3697
03:37:01,840 --> 03:37:03,279
also never really used prone tools for

3698
03:37:03,279 --> 03:37:04,960
and got into the routine of like being

3699
03:37:04,960 --> 03:37:06,239
able to like easily debug it it was

3700
03:37:06,239 --> 03:37:08,000
always much more painful for me to debug

3701
03:37:08,000 --> 03:37:09,520
like a half working so it's interesting

3702
03:37:09,520 --> 03:37:11,359
considering that i started the type of

3703
03:37:11,359 --> 03:37:14,080
work um 11 years ago the number of tools

3704
03:37:14,080 --> 03:37:15,600
have come out especially after cyber

3705
03:37:15,600 --> 03:37:17,920
grand challenge yeah there was such an

3706
03:37:17,920 --> 03:37:19,760
advancement in

3707
03:37:19,760 --> 03:37:21,279
the type of tools for this type of work

3708
03:37:21,279 --> 03:37:22,720
like automate well there's a i mean the

3709
03:37:22,720 --> 03:37:24,319
number of like rot finding you know

3710
03:37:24,319 --> 03:37:26,800
tools alone like it's uh we've seen a

3711
03:37:26,800 --> 03:37:29,600
couple teams working on before

3712
03:37:29,600 --> 03:37:31,600
yeah my my favorite for a long time my

3713
03:37:31,600 --> 03:37:33,359
favorite rock finding thing was grep and

3714
03:37:33,359 --> 03:37:35,600
object and that was all i ever did and

3715
03:37:35,600 --> 03:37:38,160
then prop gadget came out yup now i

3716
03:37:38,160 --> 03:37:40,000
learned several more of the last uh last

3717
03:37:40,000 --> 03:37:41,200
day as well

3718
03:37:41,200 --> 03:37:42,319
i'm sure there's more that i haven't

3719
03:37:42,319 --> 03:37:43,680
heard of because i haven't kept up on

3720
03:37:43,680 --> 03:37:45,520
them yeah yeah well this is why

3721
03:37:45,520 --> 03:37:46,640
something like this is a lot of fun

3722
03:37:46,640 --> 03:37:48,239
because you get to see

3723
03:37:48,239 --> 03:37:49,840
like what the what are the teams using

3724
03:37:49,840 --> 03:37:52,080
what are the best people currently um

3725
03:37:52,080 --> 03:37:54,800
the the tools in their tool bag

3726
03:37:54,800 --> 03:37:55,920
now this interesting are we open up

3727
03:37:55,920 --> 03:37:57,279
libsy

3728
03:37:57,279 --> 03:38:01,359
no we should just open up another tab oh

3729
03:38:02,319 --> 03:38:04,800
all right so we're going to lipsey

3730
03:38:04,800 --> 03:38:06,640
open too that's really interesting

3731
03:38:06,640 --> 03:38:08,000
they're both opening up let's see at the

3732
03:38:08,000 --> 03:38:09,760
same time

3733
03:38:09,760 --> 03:38:11,359
so is it because they're looking for the

3734
03:38:11,359 --> 03:38:13,920
the relative offset between um a pointer

3735
03:38:13,920 --> 03:38:15,279
that they've leaked and like system or

3736
03:38:15,279 --> 03:38:17,200
something like that

3737
03:38:17,200 --> 03:38:18,800
yeah let's keep an eye and see if we can

3738
03:38:18,800 --> 03:38:21,680
see if we can catch them looking at uh

3739
03:38:21,680 --> 03:38:23,359
that or are they just

3740
03:38:23,359 --> 03:38:24,479
actually it looks here like we might be

3741
03:38:24,479 --> 03:38:25,760
just looking at

3742
03:38:25,760 --> 03:38:28,399
the stack

3743
03:38:35,600 --> 03:38:36,960
yeah so we're looking at some stack

3744
03:38:36,960 --> 03:38:39,960
addresses

3745
03:38:42,160 --> 03:38:43,840
did we find it is this a function

3746
03:38:43,840 --> 03:38:47,520
pointer and there's an offset

3747
03:38:48,160 --> 03:38:49,600
uh that's not where you're looking

3748
03:38:49,600 --> 03:38:52,800
that's just gonna exit out

3749
03:38:52,880 --> 03:38:57,119
there we go look at the base address

3750
03:39:00,000 --> 03:39:01,199
yeah there's no i don't think there's a

3751
03:39:01,199 --> 03:39:02,640
hint we can give them at this point i

3752
03:39:02,640 --> 03:39:05,359
think they both know exactly what to do

3753
03:39:05,359 --> 03:39:06,800
yeah we're just waiting for the first

3754
03:39:06,800 --> 03:39:09,040
one to finish and etsy i mean time-wise

3755
03:39:09,040 --> 03:39:12,399
we're we're 30 minutes in so very within

3756
03:39:12,399 --> 03:39:14,800
expected ranges um we're not kind of in

3757
03:39:14,800 --> 03:39:17,760
a rush or freaking out i think and and

3758
03:39:17,760 --> 03:39:19,600
the second one of them gets that right i

3759
03:39:19,600 --> 03:39:21,199
think we're about one minute from being

3760
03:39:21,199 --> 03:39:22,640
done yeah

3761
03:39:22,640 --> 03:39:25,040
yeah just one one reliable right is is

3762
03:39:25,040 --> 03:39:27,760
all it's going to take

3763
03:39:30,880 --> 03:39:32,080
yeah it's one we have to be careful too

3764
03:39:32,080 --> 03:39:32,960
because this is this is the kind of

3765
03:39:32,960 --> 03:39:34,560
situation where they're both neck and

3766
03:39:34,560 --> 03:39:37,120
neck or both just like a little bit away

3767
03:39:37,120 --> 03:39:39,680
and if you're looking at the wrong one

3768
03:39:39,680 --> 03:39:42,319
when it happens

3769
03:39:43,760 --> 03:39:45,600
so having each of us here really helps

3770
03:39:45,600 --> 03:39:50,160
to make sure that nothing slips by us

3771
03:39:50,160 --> 03:39:51,359
oh here we go

3772
03:39:51,359 --> 03:39:53,199
so we've got a function called right

3773
03:39:53,199 --> 03:39:55,120
address

3774
03:39:55,120 --> 03:39:57,439
is it working they don't see

3775
03:39:57,439 --> 03:39:58,399
they're not typing like they're real

3776
03:39:58,399 --> 03:40:00,000
confident here

3777
03:40:00,000 --> 03:40:01,199
but we've actually got a function called

3778
03:40:01,199 --> 03:40:02,399
right so at this point when you start

3779
03:40:02,399 --> 03:40:04,239
getting this close to it you start

3780
03:40:04,239 --> 03:40:05,760
having to revalidate

3781
03:40:05,760 --> 03:40:07,439
all your assumptions only all your

3782
03:40:07,439 --> 03:40:09,199
assumptions but do i have all the right

3783
03:40:09,199 --> 03:40:10,239
offsets am i doing the right math

3784
03:40:10,239 --> 03:40:12,640
calculations did i swap any math

3785
03:40:12,640 --> 03:40:14,800
or two variables around so i subtract it

3786
03:40:14,800 --> 03:40:16,840
in the wrong

3787
03:40:16,840 --> 03:40:19,040
order trying to make sure not to get any

3788
03:40:19,040 --> 03:40:21,600
of that wrong

3789
03:40:21,600 --> 03:40:23,600
and even myself tends to slow down yeah

3790
03:40:23,600 --> 03:40:24,960
at this end of the shell code yeah this

3791
03:40:24,960 --> 03:40:26,479
is true because i know i have jokingly

3792
03:40:26,479 --> 03:40:29,359
stumped in or what the last step is yeah

3793
03:40:29,359 --> 03:40:31,199
it's that extra little bit of math

3794
03:40:31,199 --> 03:40:33,840
required

3795
03:40:35,439 --> 03:40:38,160
okay so we're getting a all right

3796
03:40:38,160 --> 03:40:41,279
so we're getting a string

3797
03:40:42,560 --> 03:40:44,160
okay so we've got a business h string

3798
03:40:44,160 --> 03:40:45,120
pointer

3799
03:40:45,120 --> 03:40:47,120
this is looking real close however they

3800
03:40:47,120 --> 03:40:49,840
have texas sterling on libsy

3801
03:40:49,840 --> 03:40:51,120
what's this oh so they're going to

3802
03:40:51,120 --> 03:40:53,760
override sterling

3803
03:40:53,760 --> 03:40:55,840
to the yeah this is i want to say they

3804
03:40:55,840 --> 03:40:58,239
have the sterling of libsy also

3805
03:40:58,239 --> 03:40:59,439
like they're

3806
03:40:59,439 --> 03:41:01,199
yeah all right we've got our business h

3807
03:41:01,199 --> 03:41:03,120
we've got our system

3808
03:41:03,120 --> 03:41:05,359
and now it's time to do the right

3809
03:41:05,359 --> 03:41:06,800
rough gadget there we go so here's

3810
03:41:06,800 --> 03:41:09,680
another one of the rap finding tools so

3811
03:41:09,680 --> 03:41:11,680
they're gonna scan it dump it all out

3812
03:41:11,680 --> 03:41:12,880
and let's see what they're gonna grab

3813
03:41:12,880 --> 03:41:15,839
for

3814
03:41:16,319 --> 03:41:16,960
so

3815
03:41:16,960 --> 03:41:19,439
are they looking for a pivot

3816
03:41:19,439 --> 03:41:22,640
because if they've got uh

3817
03:41:24,720 --> 03:41:26,319
yeah my guesses are going to look for a

3818
03:41:26,319 --> 03:41:27,680
stack pivot

3819
03:41:27,680 --> 03:41:29,279
right so if they get they got a stack

3820
03:41:29,279 --> 03:41:30,399
pivot

3821
03:41:30,399 --> 03:41:32,560
um

3822
03:41:34,000 --> 03:41:36,800
yeah what was it pop rdi red i think

3823
03:41:36,800 --> 03:41:38,640
yeah pop radio rat

3824
03:41:38,640 --> 03:41:42,599
yep stack pivot

3825
03:41:43,040 --> 03:41:44,800
uh or is it this is one of the things i

3826
03:41:44,800 --> 03:41:45,920
mentioned at the beginning it's like a

3827
03:41:45,920 --> 03:41:47,359
simple channels like this going straight

3828
03:41:47,359 --> 03:41:48,479
for stack

3829
03:41:48,479 --> 03:41:49,840
is the easiest way to go you're not

3830
03:41:49,840 --> 03:41:50,720
dealing with the heap or other

3831
03:41:50,720 --> 03:41:52,800
complexities

3832
03:41:52,800 --> 03:41:55,120
so the writing yeah the pop party eye to

3833
03:41:55,120 --> 03:41:56,479
the stack and then they're going to

3834
03:41:56,479 --> 03:41:58,000
write this section oh no yeah so that's

3835
03:41:58,000 --> 03:41:59,600
just going to get them

3836
03:41:59,600 --> 03:42:02,960
uh this could be it

3837
03:42:03,199 --> 03:42:05,279
okay so if this is if this is correct we

3838
03:42:05,279 --> 03:42:06,800
have a we have a working exploit there's

3839
03:42:06,800 --> 03:42:08,399
no bugs in any of this math so let's

3840
03:42:08,399 --> 03:42:09,439
find out

3841
03:42:09,439 --> 03:42:11,040
uh let's keep an eye on straw hat and

3842
03:42:11,040 --> 03:42:12,720
here it is this is their local attempt

3843
03:42:12,720 --> 03:42:14,479
so they're still not running the server

3844
03:42:14,479 --> 03:42:15,760
so we'll find out if anything else over

3845
03:42:15,760 --> 03:42:18,319
there but

3846
03:42:18,720 --> 03:42:20,960
um

3847
03:42:20,960 --> 03:42:23,359
let me call this still still debugging

3848
03:42:23,359 --> 03:42:26,319
are they switching to

3849
03:42:37,359 --> 03:42:38,640
are they going to make a red slide or

3850
03:42:38,640 --> 03:42:41,599
something they've got a rhett

3851
03:42:42,000 --> 03:42:43,359
i can't tell i can't see enough of the

3852
03:42:43,359 --> 03:42:45,680
screen yeah it's a it's a bad angle for

3853
03:42:45,680 --> 03:42:47,680
you so so right now they're working with

3854
03:42:47,680 --> 03:42:49,680
um working with their pop rdi gadget

3855
03:42:49,680 --> 03:42:52,239
they're working with a pointer to nsh

3856
03:42:52,239 --> 03:42:53,600
they're working with their system gadget

3857
03:42:53,600 --> 03:42:55,840
and they're using their right primitive

3858
03:42:55,840 --> 03:43:00,560
to overwrite uh the stack um

3859
03:43:01,359 --> 03:43:03,600
directly

3860
03:43:03,600 --> 03:43:04,800
for

3861
03:43:04,800 --> 03:43:06,640
there we go okay so they got a shell so

3862
03:43:06,640 --> 03:43:07,359
now they're going to switch it over

3863
03:43:07,359 --> 03:43:08,399
they're going to run it on the remote

3864
03:43:08,399 --> 03:43:10,399
server here it is that should do it if

3865
03:43:10,399 --> 03:43:13,358
if this works on

3866
03:43:14,880 --> 03:43:16,239
yeah so they're going to

3867
03:43:16,239 --> 03:43:18,399
add that last little bit here it is okay

3868
03:43:18,399 --> 03:43:19,600
double check make sure they're not close

3869
03:43:19,600 --> 03:43:20,640
that we're gonna miss it over there but

3870
03:43:20,640 --> 03:43:21,920
i think we're about to

3871
03:43:21,920 --> 03:43:23,439
they're still doing debugging over here

3872
03:43:23,439 --> 03:43:25,279
on their rights and over right i think

3873
03:43:25,279 --> 03:43:27,840
this is it i think we've

3874
03:43:27,840 --> 03:43:29,120
yep okay

3875
03:43:29,120 --> 03:43:30,399
all right

3876
03:43:30,399 --> 03:43:34,680
let's get ready very well done

3877
03:43:34,960 --> 03:43:38,720
yep put the remote connection in

3878
03:43:41,439 --> 03:43:45,120
let's see as long as this works remotely

3879
03:43:47,680 --> 03:43:50,080
uh-oh

3880
03:43:53,840 --> 03:43:55,520
oh no we talked about this earlier when

3881
03:43:55,520 --> 03:43:56,960
you're

3882
03:43:56,960 --> 03:43:58,960
the feeling when you're when your remote

3883
03:43:58,960 --> 03:44:00,399
uh

3884
03:44:00,399 --> 03:44:02,720
payload doesn't works local doesn't work

3885
03:44:02,720 --> 03:44:05,119
remote

3886
03:44:06,560 --> 03:44:07,600
yeah so they're going to double check

3887
03:44:07,600 --> 03:44:08,640
the leaks double check the environment

3888
03:44:08,640 --> 03:44:11,199
variables figure out

3889
03:44:11,199 --> 03:44:13,199
yeah so it definitely does look like the

3890
03:44:13,199 --> 03:44:15,120
that environment may have been important

3891
03:44:15,120 --> 03:44:16,960
so maybe i don't remember if when they

3892
03:44:16,960 --> 03:44:18,080
when they dump the environment if they

3893
03:44:18,080 --> 03:44:18,880
actually use that into their

3894
03:44:18,880 --> 03:44:20,160
calculations so they might now need to

3895
03:44:20,160 --> 03:44:21,920
go back and fix it up let's see if they

3896
03:44:21,920 --> 03:44:23,439
use the environment

3897
03:44:23,439 --> 03:44:25,439
now it's interesting though because

3898
03:44:25,439 --> 03:44:28,000
again uh we're using we're using docker

3899
03:44:28,000 --> 03:44:29,840
into 2204. it should be pretty simple

3900
03:44:29,840 --> 03:44:31,040
the environment shifts the stack

3901
03:44:31,040 --> 03:44:32,960
information around too yeah so if you

3902
03:44:32,960 --> 03:44:35,920
start messing with environment variables

3903
03:44:35,920 --> 03:44:37,120
that's right they screw you up that's

3904
03:44:37,120 --> 03:44:38,720
right in fact i remember like the poor

3905
03:44:38,720 --> 03:44:40,640
man's defense the day used to be you

3906
03:44:40,640 --> 03:44:41,680
would make a really really big

3907
03:44:41,680 --> 03:44:43,520
environment variable just to throw off

3908
03:44:43,520 --> 03:44:45,520
people's like you know stupid uh stupid

3909
03:44:45,520 --> 03:44:47,359
stat hardcoded stacks

3910
03:44:47,359 --> 03:44:48,560
um

3911
03:44:48,560 --> 03:44:50,000
so yeah it looks like we do still have a

3912
03:44:50,000 --> 03:44:51,520
little bit of work so that leaves the

3913
03:44:51,520 --> 03:44:52,880
door open

3914
03:44:52,880 --> 03:44:55,199
uh it is it is certainly still possible

3915
03:44:55,199 --> 03:44:59,680
at this point uh for

3916
03:44:59,680 --> 03:45:02,479
come back all right

3917
03:45:05,279 --> 03:45:08,560
come on binge users let's go

3918
03:45:08,560 --> 03:45:10,720
and they have all the pieces over there

3919
03:45:10,720 --> 03:45:12,160
yeah yeah yeah i think they don't have

3920
03:45:12,160 --> 03:45:14,399
any they're still working on

3921
03:45:14,399 --> 03:45:16,479
the right the right still not yeah

3922
03:45:16,479 --> 03:45:18,560
location now and are they writing are

3923
03:45:18,560 --> 03:45:19,760
they writing this here's the difference

3924
03:45:19,760 --> 03:45:20,800
though if they're not writing to the

3925
03:45:20,800 --> 03:45:22,239
stack

3926
03:45:22,239 --> 03:45:24,239
they may actually avoid some of the the

3927
03:45:24,239 --> 03:45:25,520
environment shifts right so it's nearly

3928
03:45:25,520 --> 03:45:27,120
possible even though they're behind now

3929
03:45:27,120 --> 03:45:28,319
if they take a different if they write

3930
03:45:28,319 --> 03:45:29,840
to something else

3931
03:45:29,840 --> 03:45:30,960
um

3932
03:45:30,960 --> 03:45:32,000
if they're able to figure out a way a

3933
03:45:32,000 --> 03:45:34,080
way to get a right that doesn't require

3934
03:45:34,080 --> 03:45:36,040
essentially a stack

3935
03:45:36,040 --> 03:45:40,120
pivot um

3936
03:45:40,160 --> 03:45:41,359
they would have to either get a

3937
03:45:41,359 --> 03:45:43,199
different gadget or

3938
03:45:43,199 --> 03:45:44,800
more than likely because they're doing

3939
03:45:44,800 --> 03:45:47,600
the sterling over here the idea is to do

3940
03:45:47,600 --> 03:45:48,479
a

3941
03:45:48,479 --> 03:45:50,399
um

3942
03:45:50,399 --> 03:45:52,880
pop esp rat so that the stack becomes

3943
03:45:52,880 --> 03:45:54,880
your buffer yeah you can remove all the

3944
03:45:54,880 --> 03:45:56,319
environment variable calculation issues

3945
03:45:56,319 --> 03:45:57,840
yeah

3946
03:45:57,840 --> 03:46:00,080
yeah that's a that's a good point

3947
03:46:00,080 --> 03:46:02,319
yeah that's yeah a safer pivot so if

3948
03:46:02,319 --> 03:46:03,520
they can pull that off i agree i think

3949
03:46:03,520 --> 03:46:04,560
you're right i think that's going to let

3950
03:46:04,560 --> 03:46:05,840
them

3951
03:46:05,840 --> 03:46:07,760
avoid some of the environmental like

3952
03:46:07,760 --> 03:46:10,720
flakiness that we're seeing over here so

3953
03:46:10,720 --> 03:46:12,720
oh man we might we might end up closer

3954
03:46:12,720 --> 03:46:14,080
than we thought

3955
03:46:14,080 --> 03:46:17,439
is that cis and lipsy i saw

3956
03:46:19,600 --> 03:46:20,720
yeah

3957
03:46:20,720 --> 03:46:23,600
point in the others for system lipsy

3958
03:46:23,600 --> 03:46:25,439
because then write buffers for your

3959
03:46:25,439 --> 03:46:27,279
command and call system on because you

3960
03:46:27,279 --> 03:46:30,239
play system sterling yep

3961
03:46:30,239 --> 03:46:34,119
replace sterling with system

3962
03:46:42,479 --> 03:46:44,239
what is oh man some of these colors are

3963
03:46:44,239 --> 03:46:46,000
hard to see on the screen

3964
03:46:46,000 --> 03:46:47,920
the commented out stuff

3965
03:46:47,920 --> 03:46:50,800
okay so we're about to see a 4i in range

3966
03:46:50,800 --> 03:46:52,399
so i'm wondering i suspect you're about

3967
03:46:52,399 --> 03:46:54,239
to see a brute force coming in here uh

3968
03:46:54,239 --> 03:46:56,640
which is also very valid in a in a live

3969
03:46:56,640 --> 03:46:58,160
ctf environment right like oh i don't

3970
03:46:58,160 --> 03:47:00,479
know what my what my offset is because

3971
03:47:00,479 --> 03:47:01,680
the username is a different length or

3972
03:47:01,680 --> 03:47:02,960
whatever it actually is that's throwing

3973
03:47:02,960 --> 03:47:04,319
off they're writing their style right

3974
03:47:04,319 --> 03:47:05,600
now

3975
03:47:05,600 --> 03:47:08,080
it looks like a overwrite of struggling

3976
03:47:08,080 --> 03:47:09,600
system and they just passing the state

3977
03:47:09,600 --> 03:47:11,439
straight into the buffer

3978
03:47:11,439 --> 03:47:12,399
so

3979
03:47:12,399 --> 03:47:15,199
we ours are back neck and neck again

3980
03:47:15,199 --> 03:47:16,720
honestly

3981
03:47:16,720 --> 03:47:18,960
this this could easily go either way

3982
03:47:18,960 --> 03:47:20,880
this is really close

3983
03:47:20,880 --> 03:47:22,319
so we're yeah we're looking at we've got

3984
03:47:22,319 --> 03:47:23,680
our we've got a brute force going over

3985
03:47:23,680 --> 03:47:25,439
uh here from straw hat

3986
03:47:25,439 --> 03:47:27,520
they're working on uh

3987
03:47:27,520 --> 03:47:28,960
just figuring out the offset between

3988
03:47:28,960 --> 03:47:30,720
their exploit that runs locally but

3989
03:47:30,720 --> 03:47:32,160
doesn't remotely because the environment

3990
03:47:32,160 --> 03:47:33,439
may be slightly different and the way

3991
03:47:33,439 --> 03:47:34,560
that they're doing the stack and they've

3992
03:47:34,560 --> 03:47:37,680
done the overwrite of cosbin's overton

3993
03:47:37,680 --> 03:47:39,199
sterling with system

3994
03:47:39,199 --> 03:47:41,199
and then passing business h directly you

3995
03:47:41,199 --> 03:47:43,199
just call system on it

3996
03:47:43,199 --> 03:47:46,640
okay yeah if they're avoided

3997
03:47:48,000 --> 03:47:51,359
yeah absolutely

3998
03:47:53,520 --> 03:47:55,040
yeah i like that that's a much cleaner

3999
03:47:55,040 --> 03:47:56,479
exploit i think that's a much better

4000
03:47:56,479 --> 03:47:57,439
idea

4001
03:47:57,439 --> 03:47:58,800
but

4002
03:47:58,800 --> 03:47:59,680
oh

4003
03:47:59,680 --> 03:48:02,319
which one

4004
03:48:02,640 --> 03:48:04,880
this is fantastic okay yeah i

4005
03:48:04,880 --> 03:48:07,760
they're both like real close

4006
03:48:07,760 --> 03:48:10,560
real close here

4007
03:48:12,640 --> 03:48:14,880
i think

4008
03:48:15,040 --> 03:48:16,080
what's that

4009
03:48:16,080 --> 03:48:18,160
they're trying to fix our python typos

4010
03:48:18,160 --> 03:48:20,080
oh no

4011
03:48:20,080 --> 03:48:21,279
and that's the other thing again just as

4012
03:48:21,279 --> 03:48:22,399
a reminder

4013
03:48:22,399 --> 03:48:24,479
for all you like looking at home oh here

4014
03:48:24,479 --> 03:48:26,399
we go sorry we had a couple of uh chat

4015
03:48:26,399 --> 03:48:29,399
questions

4016
03:48:29,520 --> 03:48:30,800
yeah we're able to watch both of the

4017
03:48:30,800 --> 03:48:32,720
teams at the same time

4018
03:48:32,720 --> 03:48:34,479
yep so so with the the stream is

4019
03:48:34,479 --> 03:48:35,760
switching back and forth between which

4020
03:48:35,760 --> 03:48:37,199
one is kind of the main one we have some

4021
03:48:37,199 --> 03:48:38,479
separate monitors here that we're

4022
03:48:38,479 --> 03:48:40,720
mirroring uh each team's display

4023
03:48:40,720 --> 03:48:42,319
directly so we can kind of watch both

4024
03:48:42,319 --> 03:48:44,239
and uh our production we have a couple

4025
03:48:44,239 --> 03:48:45,840
of folks in the production desk that are

4026
03:48:45,840 --> 03:48:46,800
also

4027
03:48:46,800 --> 03:48:47,760
um

4028
03:48:47,760 --> 03:48:48,800
keeping an eye on things and so

4029
03:48:48,800 --> 03:48:50,479
sometimes they'll they'll either listen

4030
03:48:50,479 --> 03:48:51,520
to us or if they see something

4031
03:48:51,520 --> 03:48:52,560
interesting they'll just kind of put it

4032
03:48:52,560 --> 03:48:54,000
up to make sure we

4033
03:48:54,000 --> 03:48:55,680
uh we don't miss something good for

4034
03:48:55,680 --> 03:48:57,680
y'all uh one of the things actually was

4035
03:48:57,680 --> 03:48:59,199
making note of for next year we should

4036
03:48:59,199 --> 03:49:00,800
we should do like a multi-camera youtube

4037
03:49:00,800 --> 03:49:01,920
stream approach you can actually do

4038
03:49:01,920 --> 03:49:04,640
multi-camera we could upload our audio

4039
03:49:04,640 --> 03:49:05,840
to all of it but then you could switch

4040
03:49:05,840 --> 03:49:07,439
and you could choose whose screen you

4041
03:49:07,439 --> 03:49:08,479
were watching directly which i think

4042
03:49:08,479 --> 03:49:09,359
would be

4043
03:49:09,359 --> 03:49:10,880
super neat um to let people choose

4044
03:49:10,880 --> 03:49:11,840
between them

4045
03:49:11,840 --> 03:49:13,920
so that'll be that'll be something for

4046
03:49:13,920 --> 03:49:16,880
something for next time

4047
03:49:17,120 --> 03:49:18,960
we're still so yeah we're still seeing

4048
03:49:18,960 --> 03:49:21,359
this this um brute force attack this

4049
03:49:21,359 --> 03:49:24,720
brute force attack uh

4050
03:49:24,720 --> 03:49:25,840
actually they've removed the brute force

4051
03:49:25,840 --> 03:49:27,680
attack so did they i didn't notice if

4052
03:49:27,680 --> 03:49:29,120
they actually calculated the offset

4053
03:49:29,120 --> 03:49:30,800
based on that uh it looks like they're

4054
03:49:30,800 --> 03:49:32,640
putting it back together

4055
03:49:32,640 --> 03:49:34,960
okay

4056
03:49:36,840 --> 03:49:38,399
uh-oh

4057
03:49:38,399 --> 03:49:40,000
uh the prompt they forgot the prop line

4058
03:49:40,000 --> 03:49:42,399
at the end

4059
03:49:45,840 --> 03:49:47,439
this so i'm a little surprised they're

4060
03:49:47,439 --> 03:49:49,760
setting up a debugger at the top of this

4061
03:49:49,760 --> 03:49:51,600
i'm not exactly sure why though why the

4062
03:49:51,600 --> 03:49:54,399
breaking is early

4063
03:49:59,279 --> 03:50:01,279
yeah so i i don't think they've actually

4064
03:50:01,279 --> 03:50:02,720
tried to send it remotely so i'm not

4065
03:50:02,720 --> 03:50:04,880
sure what they're

4066
03:50:04,880 --> 03:50:07,600
validating over here

4067
03:50:07,600 --> 03:50:10,239
i think they need their prompt uh

4068
03:50:10,239 --> 03:50:11,840
commands no no i think that's just the

4069
03:50:11,840 --> 03:50:12,960
prompt

4070
03:50:12,960 --> 03:50:14,479
ro was they were breaking earlier yeah

4071
03:50:14,479 --> 03:50:15,680
they missed a whole bunch of okay here

4072
03:50:15,680 --> 03:50:18,760
we go

4073
03:50:26,080 --> 03:50:28,160
tweaking offsets tweaking us that's

4074
03:50:28,160 --> 03:50:29,520
trying to get it to work here it is here

4075
03:50:29,520 --> 03:50:32,080
it is here it is here it is

4076
03:50:32,080 --> 03:50:33,199
double check the number double check the

4077
03:50:33,199 --> 03:50:34,399
number

4078
03:50:34,399 --> 03:50:37,199
congratulations

4079
03:50:37,199 --> 03:50:39,600
straw hat one

4080
03:50:39,600 --> 03:50:40,880
very good

4081
03:50:40,880 --> 03:50:42,800
very good uh

4082
03:50:42,800 --> 03:50:46,319
awesome so well done

4083
03:50:46,319 --> 03:50:48,160
well done straw hat that was a that was

4084
03:50:48,160 --> 03:50:49,600
a great match

4085
03:50:49,600 --> 03:50:52,000
uh thank you very much lightning for for

4086
03:50:52,000 --> 03:50:54,800
hanging out um thank you that was a

4087
03:50:54,800 --> 03:50:56,399
great time uh look forward to seeing

4088
03:50:56,399 --> 03:50:57,359
everybody else like i said we're gonna

4089
03:50:57,359 --> 03:50:58,720
leave the stream up and going but we're

4090
03:50:58,720 --> 03:50:59,760
gonna take a little bit longer break

4091
03:50:59,760 --> 03:51:02,479
between matches we'll be back in

4092
03:51:02,479 --> 03:51:04,640
about an hour and 10 minutes for our

4093
03:51:04,640 --> 03:51:07,600
next match and we'll see y'all then

4094
03:51:07,600 --> 03:51:11,399
have a good day cheers

4095
03:51:11,540 --> 03:51:17,119
[Music]

4096
03:51:17,760 --> 03:51:20,760
so

4097
03:51:21,110 --> 03:52:18,360
[Music]

4098
03:52:21,140 --> 03:52:28,069
[Music]

4099
03:52:32,140 --> 03:53:13,309
[Music]

4100
03:53:23,400 --> 03:53:26,449
[Music]

4101
03:53:28,479 --> 03:53:31,479
so

4102
03:53:34,290 --> 03:53:53,359
[Music]

4103
03:53:53,359 --> 03:53:56,010
so

4104
03:53:56,010 --> 03:54:13,440
[Music]

4105
03:54:17,810 --> 03:54:28,479
[Music]

4106
03:54:28,479 --> 03:54:29,890
god

4107
03:54:29,890 --> 03:54:33,070
[Music]

4108
03:54:35,439 --> 03:54:38,439
so

4109
03:54:46,010 --> 03:54:54,880
[Music]

4110
03:54:54,880 --> 03:54:56,880
so

4111
03:54:56,880 --> 03:55:04,000
[Music]

4112
03:55:04,000 --> 03:55:07,000
so

4113
03:55:07,760 --> 03:55:14,190
[Music]

4114
03:55:19,600 --> 03:55:22,600
so

4115
03:55:27,620 --> 03:55:37,420
[Music]

4116
03:55:41,170 --> 03:55:54,430
[Music]

4117
03:55:57,440 --> 03:56:00,780
[Music]

4118
03:56:00,880 --> 03:56:03,880
so

4119
03:56:08,520 --> 03:56:46,960
[Music]

4120
03:56:46,960 --> 03:56:49,960
so

4121
03:56:50,230 --> 03:56:53,600
[Music]

4122
03:56:55,520 --> 03:56:58,520
so

4123
03:57:00,470 --> 03:57:14,319
[Music]

4124
03:57:14,319 --> 03:57:17,319
so

4125
03:57:17,450 --> 03:57:53,969
[Music]

4126
03:57:54,160 --> 03:57:56,060
so

4127
03:57:56,060 --> 03:58:00,440
[Music]

4128
03:58:00,440 --> 03:58:00,830
[Applause]

4129
03:58:00,830 --> 03:58:07,840
[Music]

4130
03:58:07,840 --> 03:58:10,840
so

4131
03:58:21,040 --> 03:58:23,350
so

4132
03:58:23,350 --> 03:58:49,469
[Music]

4133
03:58:51,950 --> 03:59:44,479
[Music]

4134
03:59:44,960 --> 03:59:46,420
so

4135
03:59:46,420 --> 03:59:49,489
[Music]

4136
03:59:53,670 --> 04:00:51,409
[Music]

4137
04:00:55,580 --> 04:01:57,330
[Music]

4138
04:01:58,479 --> 04:02:00,430
and then

4139
04:02:00,430 --> 04:02:04,080
[Music]

4140
04:02:04,080 --> 04:02:06,290
so

4141
04:02:06,290 --> 04:02:53,859
[Music]

4142
04:03:03,199 --> 04:03:06,199
so

4143
04:03:08,450 --> 04:03:17,169
[Music]

4144
04:03:20,270 --> 04:03:26,399
[Music]

4145
04:03:30,230 --> 04:03:32,880
[Music]

4146
04:03:32,880 --> 04:03:35,880
do

4147
04:03:38,030 --> 04:03:41,329
[Music]

4148
04:03:44,200 --> 04:04:09,479
[Music]

4149
04:04:11,610 --> 04:04:36,780
[Music]

4150
04:04:41,130 --> 04:04:46,319
[Music]

4151
04:04:50,320 --> 04:04:53,399
[Music]

4152
04:04:55,780 --> 04:05:01,719
[Music]

4153
04:05:10,850 --> 04:05:31,170
[Music]

4154
04:05:36,190 --> 04:05:42,040
[Music]

4155
04:05:45,690 --> 04:05:54,530
[Music]

4156
04:06:02,190 --> 04:06:13,620
[Music]

4157
04:06:20,760 --> 04:06:32,169
[Music]

4158
04:06:35,440 --> 04:06:38,540
[Music]

4159
04:06:42,450 --> 04:06:45,529
[Music]

4160
04:07:11,990 --> 04:07:15,059
[Music]

4161
04:07:20,350 --> 04:07:25,240
[Music]

4162
04:07:35,290 --> 04:07:44,399
[Music]

4163
04:07:58,800 --> 04:08:01,800
so

4164
04:08:02,370 --> 04:08:27,350
[Music]

4165
04:08:29,800 --> 04:08:33,140
[Music]

4166
04:08:59,910 --> 04:09:06,619
[Music]

4167
04:09:08,830 --> 04:09:14,499
[Music]

4168
04:09:21,220 --> 04:09:38,778
[Music]

4169
04:09:45,170 --> 04:09:57,239
[Music]

4170
04:10:00,960 --> 04:10:03,960
so

4171
04:10:17,240 --> 04:10:20,420
[Music]

4172
04:10:27,210 --> 04:10:30,519
[Music]

4173
04:10:39,570 --> 04:10:49,208
[Music]

4174
04:10:57,390 --> 04:11:00,458
[Music]

4175
04:11:12,690 --> 04:11:15,860
[Music]

4176
04:11:22,940 --> 04:12:15,510
[Music]

4177
04:12:44,510 --> 04:12:47,669
[Music]

4178
04:12:54,170 --> 04:13:39,459
[Music]

4179
04:13:44,850 --> 04:13:48,059
[Music]

4180
04:14:03,600 --> 04:14:06,600
so

4181
04:14:31,540 --> 04:14:34,719
[Music]

4182
04:14:41,770 --> 04:15:04,440
[Music]

4183
04:15:13,640 --> 04:15:20,889
[Music]

4184
04:16:04,720 --> 04:16:07,720
uh

4185
04:16:50,080 --> 04:16:51,730
so

4186
04:16:51,730 --> 04:17:16,219
[Music]

4187
04:17:35,300 --> 04:17:48,939
[Music]

4188
04:17:54,320 --> 04:17:56,319
[Music]

4189
04:17:56,319 --> 04:17:59,319
so

4190
04:18:01,490 --> 04:18:05,170
[Music]

4191
04:18:07,330 --> 04:18:18,880
[Music]

4192
04:18:18,880 --> 04:18:20,930
oh

4193
04:18:20,930 --> 04:18:22,260
[Applause]

4194
04:18:22,260 --> 04:18:54,080
[Music]

4195
04:18:54,080 --> 04:18:57,080
do

4196
04:19:01,360 --> 04:19:08,560
[Music]

4197
04:19:08,560 --> 04:19:11,560
so

4198
04:19:13,070 --> 04:20:02,640
[Music]

4199
04:20:02,640 --> 04:20:04,380
so

4200
04:20:04,380 --> 04:21:09,128
[Music]

4201
04:21:12,690 --> 04:21:17,349
[Music]

4202
04:21:24,220 --> 04:21:27,310
[Music]

4203
04:21:30,770 --> 04:21:37,259
[Music]

4204
04:21:40,150 --> 04:21:43,570
[Music]

4205
04:22:01,020 --> 04:23:00,610
[Music]

4206
04:23:12,080 --> 04:23:15,149
[Music]

4207
04:23:17,350 --> 04:23:21,010
[Music]

4208
04:23:21,010 --> 04:23:21,950
[Applause]

4209
04:23:21,950 --> 04:23:35,709
[Music]

4210
04:23:38,640 --> 04:23:41,708
[Music]

4211
04:23:46,930 --> 04:23:50,940
[Music]

4212
04:23:59,130 --> 04:24:02,300
[Music]

4213
04:24:09,170 --> 04:24:12,329
[Music]

4214
04:24:15,120 --> 04:24:25,399
[Music]

4215
04:24:28,870 --> 04:24:33,130
[Music]

4216
04:24:33,130 --> 04:24:35,750
[Applause]

4217
04:24:35,750 --> 04:25:14,979
[Music]

4218
04:25:21,580 --> 04:25:24,670
[Music]

4219
04:25:47,720 --> 04:25:52,199
[Music]

4220
04:25:55,110 --> 04:25:59,660
[Music]

4221
04:26:04,760 --> 04:26:07,909
[Music]

4222
04:26:09,950 --> 04:26:34,670
[Music]

4223
04:26:42,880 --> 04:26:44,710
hmm

4224
04:26:44,710 --> 04:27:21,489
[Music]

4225
04:27:21,660 --> 04:27:22,230
[Applause]

4226
04:27:22,230 --> 04:27:30,319
[Music]

4227
04:27:30,319 --> 04:27:33,319
so

4228
04:27:33,490 --> 04:27:38,940
[Music]

4229
04:27:44,780 --> 04:28:00,720
[Music]

4230
04:28:00,720 --> 04:28:03,720
so

4231
04:28:10,600 --> 04:28:14,879
[Music]

4232
04:28:17,080 --> 04:28:27,870
[Music]

4233
04:28:34,100 --> 04:28:37,149
[Music]

4234
04:28:56,970 --> 04:29:21,500
[Music]

4235
04:29:22,319 --> 04:29:24,300
so

4236
04:29:24,300 --> 04:30:12,670
[Music]

4237
04:30:12,670 --> 04:30:15,850
[Applause]

4238
04:30:17,910 --> 04:30:19,840
[Music]

4239
04:30:19,840 --> 04:30:22,840
so

4240
04:30:23,790 --> 04:30:24,640
[Music]

4241
04:30:24,640 --> 04:30:35,010
[Applause]

4242
04:30:36,239 --> 04:30:39,239
um

4243
04:30:49,340 --> 04:30:50,640
[Music]

4244
04:30:50,640 --> 04:30:52,480
oh

4245
04:30:52,480 --> 04:30:57,040
[Music]

4246
04:30:57,040 --> 04:31:00,040
oh

4247
04:31:08,520 --> 04:31:11,999
[Music]

4248
04:31:15,020 --> 04:31:21,459
[Music]

4249
04:31:22,640 --> 04:31:25,640
[ __ ]

4250
04:31:26,720 --> 04:31:29,330
so

4251
04:31:29,330 --> 04:31:45,199
[Music]

4252
04:31:45,199 --> 04:31:48,199
so

4253
04:31:50,260 --> 04:32:20,170
[Music]

4254
04:32:22,490 --> 04:32:26,159
[Music]

4255
04:32:26,159 --> 04:32:28,620
so

4256
04:32:28,620 --> 04:32:55,279
[Music]

4257
04:32:55,279 --> 04:32:57,100
so

4258
04:32:57,100 --> 04:33:14,080
[Music]

4259
04:33:14,080 --> 04:33:15,090
you

4260
04:33:15,090 --> 04:33:23,470
[Music]

4261
04:33:27,450 --> 04:33:30,919
[Music]

4262
04:33:47,160 --> 04:33:50,320
[Music]

4263
04:33:50,320 --> 04:33:53,050
so

4264
04:33:53,050 --> 04:33:58,590
[Music]

4265
04:34:03,520 --> 04:34:06,520
so

4266
04:34:10,810 --> 04:34:15,179
[Music]

4267
04:34:18,080 --> 04:34:19,210
so

4268
04:34:19,210 --> 04:34:23,129
[Music]

4269
04:34:26,970 --> 04:34:31,240
[Music]

4270
04:34:31,278 --> 04:34:33,348
so

4271
04:34:33,348 --> 04:34:36,398
[Music]

4272
04:34:36,470 --> 04:34:39,020
[Applause]

4273
04:34:39,020 --> 04:34:44,150
[Music]

4274
04:34:45,438 --> 04:34:47,490
so

4275
04:34:47,490 --> 04:34:51,359
[Music]

4276
04:34:52,618 --> 04:34:55,200
[Applause]

4277
04:34:55,200 --> 04:34:59,118
[Music]

4278
04:34:59,118 --> 04:35:02,118
so

4279
04:35:02,640 --> 04:35:07,790
[Music]

4280
04:35:13,599 --> 04:35:16,599
so

4281
04:35:18,930 --> 04:35:23,240
[Music]

4282
04:35:38,750 --> 04:36:02,368
[Music]

4283
04:36:05,130 --> 04:36:10,480
[Music]

4284
04:36:10,480 --> 04:36:11,500
so

4285
04:36:11,500 --> 04:36:14,720
[Music]

4286
04:36:17,290 --> 04:36:23,278
[Music]

4287
04:36:23,278 --> 04:36:26,278
so

4288
04:36:30,438 --> 04:36:33,648
[Music]

4289
04:36:37,840 --> 04:36:40,840
so

4290
04:37:04,000 --> 04:37:07,090
[Music]

4291
04:37:14,830 --> 04:37:18,958
[Music]

4292
04:37:18,958 --> 04:37:21,958
so

4293
04:37:23,220 --> 04:37:26,389
[Music]

4294
04:37:29,830 --> 04:37:32,949
[Music]

4295
04:37:33,039 --> 04:37:36,039
so

4296
04:37:40,090 --> 04:37:43,229
[Music]

4297
04:37:47,520 --> 04:37:50,520
so

4298
04:37:52,710 --> 04:37:55,848
[Music]

4299
04:38:00,520 --> 04:38:03,919
[Music]

4300
04:38:07,040 --> 04:38:13,598
[Music]

4301
04:38:22,320 --> 04:38:44,868
[Music]

4302
04:38:49,630 --> 04:39:36,869
[Music]

4303
04:39:39,920 --> 04:39:42,920
so

4304
04:39:43,500 --> 04:40:37,569
[Music]

4305
04:40:40,400 --> 04:40:47,999
[Music]

4306
04:40:52,110 --> 04:40:59,209
[Music]

4307
04:41:07,070 --> 04:41:11,429
[Music]

4308
04:41:13,680 --> 04:42:01,280
[Music]

4309
04:42:01,280 --> 04:42:04,280
do

4310
04:42:08,110 --> 04:42:28,720
[Music]

4311
04:42:34,310 --> 04:42:40,509
[Music]

4312
04:42:43,880 --> 04:43:02,119
[Music]

4313
04:43:30,080 --> 04:43:32,350
hmm

4314
04:43:32,350 --> 04:44:07,529
[Music]

4315
04:44:10,300 --> 04:44:12,480
[Music]

4316
04:44:12,480 --> 04:44:14,710
my

4317
04:44:14,710 --> 04:44:27,180
[Music]

4318
04:45:03,600 --> 04:45:09,289
[Music]

4319
04:45:13,180 --> 04:45:16,290
[Music]

4320
04:45:22,490 --> 04:45:25,609
[Music]

4321
04:45:41,990 --> 04:45:48,709
[Music]

4322
04:45:51,370 --> 04:45:58,289
[Music]

4323
04:46:12,810 --> 04:46:17,710
[Music]

4324
04:46:17,710 --> 04:46:20,910
[Applause]

4325
04:46:27,530 --> 04:46:30,660
[Music]

4326
04:46:38,710 --> 04:46:41,829
[Music]

4327
04:46:49,870 --> 04:46:53,000
[Music]

4328
04:47:05,440 --> 04:47:26,240
[Music]

4329
04:47:26,240 --> 04:47:27,200
[Applause]

4330
04:47:27,200 --> 04:47:29,510
[Music]

4331
04:47:29,510 --> 04:47:29,930
[Applause]

4332
04:47:29,930 --> 04:47:36,339
[Music]

4333
04:47:38,540 --> 04:48:38,409
[Music]

4334
04:48:42,250 --> 04:48:50,369
[Music]

4335
04:48:52,460 --> 04:48:55,610
[Music]

4336
04:48:58,470 --> 04:49:03,169
[Music]

4337
04:49:05,880 --> 04:49:25,060
[Music]

4338
04:49:26,798 --> 04:49:29,630
so

4339
04:49:29,630 --> 04:49:40,529
[Music]

4340
04:49:41,760 --> 04:49:43,550
so

4341
04:49:43,550 --> 04:50:09,839
[Music]

4342
04:50:12,410 --> 04:51:00,689
[Music]

4343
04:51:03,560 --> 04:51:06,749
[Music]

4344
04:51:11,060 --> 04:51:40,820
[Music]

4345
04:51:48,878 --> 04:51:51,878
so

4346
04:51:52,620 --> 04:51:59,759
[Music]

4347
04:52:04,020 --> 04:52:12,450
[Music]

4348
04:52:12,450 --> 04:52:12,830
[Applause]

4349
04:52:12,830 --> 04:52:25,560
[Music]

4350
04:52:30,720 --> 04:52:40,159
[Music]

4351
04:52:45,340 --> 04:52:48,529
[Music]

4352
04:52:52,840 --> 04:53:11,029
[Music]

4353
04:53:22,900 --> 04:54:24,230
[Music]

4354
04:54:27,980 --> 04:54:49,060
[Music]

4355
04:54:51,900 --> 04:55:16,150
[Music]

4356
04:55:20,340 --> 04:55:26,349
[Music]

4357
04:55:31,970 --> 04:55:35,049
[Music]

4358
04:55:43,930 --> 04:55:46,958
[Music]

4359
04:55:46,958 --> 04:55:49,958
so

4360
04:55:49,960 --> 04:56:01,930
[Music]

4361
04:56:06,710 --> 04:56:09,879
[Music]

4362
04:56:33,810 --> 04:56:36,879
[Music]

4363
04:56:41,360 --> 04:56:44,360
so

4364
04:56:48,840 --> 04:56:51,900
[Music]

4365
04:57:06,800 --> 04:57:09,899
[Music]

4366
04:57:19,630 --> 04:57:22,729
[Music]

4367
04:57:24,860 --> 04:57:27,939
[Music]

4368
04:57:31,980 --> 04:57:35,189
[Music]

4369
04:57:39,780 --> 04:57:42,890
[Music]

4370
04:57:57,720 --> 04:58:01,440
[Music]

4371
04:58:01,440 --> 04:58:02,830
hmm

4372
04:58:02,830 --> 04:59:04,539
[Music]

4373
04:59:07,320 --> 04:59:14,239
[Music]

4374
04:59:18,320 --> 04:59:59,480
[Music]

4375
05:00:09,420 --> 05:00:12,449
[Music]

4376
05:00:20,450 --> 05:00:38,240
[Music]

4377
05:00:38,240 --> 05:00:39,900
so

4378
05:00:39,900 --> 05:00:59,619
[Music]

4379
05:01:06,160 --> 05:01:08,630
so

4380
05:01:08,630 --> 05:01:19,240
[Music]

4381
05:01:20,080 --> 05:01:23,080
so

4382
05:01:32,180 --> 05:02:00,349
[Music]

4383
05:02:05,530 --> 05:02:10,520
[Music]

4384
05:02:13,780 --> 05:02:24,090
[Music]

4385
05:02:27,340 --> 05:02:40,600
[Music]

4386
05:02:43,610 --> 05:02:46,950
[Music]

4387
05:02:54,690 --> 05:02:59,120
[Music]

4388
05:02:59,120 --> 05:03:01,220
so

4389
05:03:01,220 --> 05:03:13,280
[Music]

4390
05:03:13,280 --> 05:03:15,870
so

4391
05:03:15,870 --> 05:03:34,160
[Music]

4392
05:03:34,160 --> 05:03:36,400
minute

4393
05:03:36,400 --> 05:04:09,360
[Music]

4394
05:04:09,360 --> 05:04:11,120
so

4395
05:04:11,120 --> 05:04:37,280
[Music]

4396
05:04:37,280 --> 05:04:38,310
so

4397
05:04:38,310 --> 05:04:46,610
[Music]

4398
05:04:46,610 --> 05:04:47,000
[Applause]

4399
05:04:47,000 --> 05:04:50,320
[Music]

4400
05:04:50,320 --> 05:04:51,540
so

4401
05:04:51,540 --> 05:04:54,740
[Music]

4402
05:05:05,280 --> 05:05:08,280
so

4403
05:05:09,490 --> 05:05:35,640
[Music]

4404
05:05:38,110 --> 05:06:04,878
[Music]

4405
05:06:04,878 --> 05:06:07,600
hello and welcome back to live ctf uh

4406
05:06:07,600 --> 05:06:08,958
you're back with the original crew this

4407
05:06:08,958 --> 05:06:12,080
time uh cypher dexter jordan and hi carl

4408
05:06:12,080 --> 05:06:15,600
sita two so we have uh more uh

4409
05:06:15,600 --> 05:06:17,920
challenges ahead we are done with round

4410
05:06:17,920 --> 05:06:20,000
one we're under round two uh right away

4411
05:06:20,000 --> 05:06:21,200
let's just go ahead and kick it off let

4412
05:06:21,200 --> 05:06:23,200
our teams go behind us we have the new

4413
05:06:23,200 --> 05:06:25,360
organizers and we have team starbugs so

4414
05:06:25,360 --> 05:06:26,320
let's do it

4415
05:06:26,320 --> 05:06:28,080
five four

4416
05:06:28,080 --> 05:06:28,958
three

4417
05:06:28,958 --> 05:06:29,840
two

4418
05:06:29,840 --> 05:06:32,798
one go

4419
05:06:32,798 --> 05:06:34,560
so the round is live uh and now

4420
05:06:34,560 --> 05:06:36,240
everybody's an expert everyone in these

4421
05:06:36,240 --> 05:06:38,400
rounds has won one of these rounds they

4422
05:06:38,400 --> 05:06:40,240
know what the infrastructure is wow

4423
05:06:40,240 --> 05:06:43,040
that's like the fastest i think to like

4424
05:06:43,040 --> 05:06:45,680
decompilation i've seen so far

4425
05:06:45,680 --> 05:06:46,878
uh from

4426
05:06:46,878 --> 05:06:48,798
starbug there

4427
05:06:48,798 --> 05:06:49,760
right

4428
05:06:49,760 --> 05:06:53,840
so we have um

4429
05:06:54,480 --> 05:06:56,560
yes seems like you have a capture

4430
05:06:56,560 --> 05:06:59,200
problem with the starbucks on the on the

4431
05:06:59,200 --> 05:07:01,600
feed so we're going to go over to uh

4432
05:07:01,600 --> 05:07:04,638
organizers and we'll have production

4433
05:07:04,638 --> 05:07:06,798
reset the capture card in the meantime

4434
05:07:06,798 --> 05:07:08,400
uh no big deal

4435
05:07:08,400 --> 05:07:10,798
uh so we can see here

4436
05:07:10,798 --> 05:07:13,120
them using ida as well looking into the

4437
05:07:13,120 --> 05:07:14,638
designer i will say i'm glad they've got

4438
05:07:14,638 --> 05:07:15,920
different themes we've got a light theme

4439
05:07:15,920 --> 05:07:17,360
and a dark thing which actually makes it

4440
05:07:17,360 --> 05:07:19,280
really easy to see the difference so all

4441
05:07:19,280 --> 05:07:20,798
right thank you for the work production

4442
05:07:20,798 --> 05:07:22,878
we are back live with capture

4443
05:07:22,878 --> 05:07:24,718
we can see both of them now

4444
05:07:24,718 --> 05:07:26,000
um

4445
05:07:26,000 --> 05:07:26,798
so

4446
05:07:26,798 --> 05:07:29,120
uh this challenge is

4447
05:07:29,120 --> 05:07:31,440
called

4448
05:07:31,440 --> 05:07:34,480
story time right story time right

4449
05:07:34,480 --> 05:07:36,718
uh is this yeah this is the search i saw

4450
05:07:36,718 --> 05:07:39,360
it tell me tell me your story uh so i'm

4451
05:07:39,360 --> 05:07:41,440
thinking that's uh

4452
05:07:41,440 --> 05:07:42,718
that's the challenge but i kind of want

4453
05:07:42,718 --> 05:07:43,600
to look at it again make sure we don't

4454
05:07:43,600 --> 05:07:45,040
start talking about the wrong i have

4455
05:07:45,040 --> 05:07:46,240
nightmares that we like start talking

4456
05:07:46,240 --> 05:07:47,680
about the wrong challenge

4457
05:07:47,680 --> 05:07:49,600
yeah exactly

4458
05:07:49,600 --> 05:07:51,760
okay so this is story time although i

4459
05:07:51,760 --> 05:07:53,840
have not seen this version of story time

4460
05:07:53,840 --> 05:07:56,320
so i worked on an earlier version

4461
05:07:56,320 --> 05:07:58,000
but i know that we've we've been you

4462
05:07:58,000 --> 05:08:00,320
know iterating on these challenges

4463
05:08:00,320 --> 05:08:02,400
and i haven't seen this particular

4464
05:08:02,400 --> 05:08:03,760
iteration of it so i know it got

4465
05:08:03,760 --> 05:08:05,920
actually simplified a little bit

4466
05:08:05,920 --> 05:08:08,000
and uh we'll see what teams are doing

4467
05:08:08,000 --> 05:08:09,920
although i did notice

4468
05:08:09,920 --> 05:08:11,040
somebody looked like they were running

4469
05:08:11,040 --> 05:08:12,878
it on

4470
05:08:12,878 --> 05:08:14,240
uh

4471
05:08:14,240 --> 05:08:16,240
mac os directly i thought they ran x

4472
05:08:16,240 --> 05:08:17,200
adder

4473
05:08:17,200 --> 05:08:18,958
to make it executable

4474
05:08:18,958 --> 05:08:20,638
and then they ran it so it was but this

4475
05:08:20,638 --> 05:08:22,480
was still just a linux binary i thought

4476
05:08:22,480 --> 05:08:24,718
right yeah yeah okay so i i kind of

4477
05:08:24,718 --> 05:08:26,000
thought i was

4478
05:08:26,000 --> 05:08:27,120
missing something i'm not sure where

4479
05:08:27,120 --> 05:08:29,040
maybe they are like in ssh nor like in

4480
05:08:29,040 --> 05:08:30,958
the terminal or something like this yeah

4481
05:08:30,958 --> 05:08:31,680
yeah

4482
05:08:31,680 --> 05:08:34,400
um i know let's let's jump over to uh

4483
05:08:34,400 --> 05:08:37,040
starbucks and uh c again the ida with

4484
05:08:37,040 --> 05:08:38,638
the light theme also doing some

4485
05:08:38,638 --> 05:08:41,120
compilation they're looking at this um

4486
05:08:41,120 --> 05:08:42,958
function that looked a little bit

4487
05:08:42,958 --> 05:08:45,280
difficult to understand you said you

4488
05:08:45,280 --> 05:08:46,798
created like the original version of

4489
05:08:46,798 --> 05:08:49,120
this and then we did like a remix of it

4490
05:08:49,120 --> 05:08:51,040
yeah this was actually i would say i

4491
05:08:51,040 --> 05:08:53,280
worked on the one two versions ago also

4492
05:08:53,280 --> 05:08:55,680
this was probably the uh the challenge

4493
05:08:55,680 --> 05:08:58,480
uh i worked on the most originally and

4494
05:08:58,480 --> 05:08:59,840
it was a little bit too convoluted and

4495
05:08:59,840 --> 05:09:01,840
so we've we've iterated it a couple

4496
05:09:01,840 --> 05:09:05,440
times and i see that we already have uh

4497
05:09:05,440 --> 05:09:08,240
a uh controlled uh

4498
05:09:08,240 --> 05:09:10,320
function pointer if i didn't was that

4499
05:09:10,320 --> 05:09:12,400
that fast this could be i would love for

4500
05:09:12,400 --> 05:09:14,798
this to be a fast one i i might have

4501
05:09:14,798 --> 05:09:16,320
like i mean there was something running

4502
05:09:16,320 --> 05:09:18,320
in debugger i saw them run like you know

4503
05:09:18,320 --> 05:09:19,760
it was a break point at the call command

4504
05:09:19,760 --> 05:09:21,760
it was a calling and register and i

4505
05:09:21,760 --> 05:09:24,400
think i saw uh control of the uh

4506
05:09:24,400 --> 05:09:27,600
register value uh so uh we have some

4507
05:09:27,600 --> 05:09:29,040
shell code written

4508
05:09:29,040 --> 05:09:32,160
uh this is i mean this could be really

4509
05:09:32,160 --> 05:09:34,000
fast as if if this is going like this

4510
05:09:34,000 --> 05:09:36,320
i'm i'm down i'm here like i was i've

4511
05:09:36,320 --> 05:09:37,760
always said like look if every round is

4512
05:09:37,760 --> 05:09:39,120
five minutes long then we made them too

4513
05:09:39,120 --> 05:09:41,040
easy but like a couple that are just

4514
05:09:41,040 --> 05:09:43,280
pure pwn pure speed yeah

4515
05:09:43,280 --> 05:09:45,120
uh also as long as there's no auto punch

4516
05:09:45,120 --> 05:09:46,560
scripts we haven't seen anybody who like

4517
05:09:46,560 --> 05:09:48,080
one click solve something that would be

4518
05:09:48,080 --> 05:09:49,520
embarrassing as an organizer you could

4519
05:09:49,520 --> 05:09:51,760
see starbucks there you had the uh the

4520
05:09:51,760 --> 05:09:53,360
mitigations of the binary well they're

4521
05:09:53,360 --> 05:09:55,120
looking at win right now too there's a

4522
05:09:55,120 --> 05:09:56,480
function called win it looks right so

4523
05:09:56,480 --> 05:09:58,240
this one has a built-in win

4524
05:09:58,240 --> 05:10:00,480
this might be very very quick did they

4525
05:10:00,480 --> 05:10:01,920
well i can't see that top line on

4526
05:10:01,920 --> 05:10:04,400
there's uh what is that right there that

4527
05:10:04,400 --> 05:10:06,160
the long lines the long lines of shell

4528
05:10:06,160 --> 05:10:08,080
shell code okay and then you have some

4529
05:10:08,080 --> 05:10:10,320
uh kind of like long sequences of some

4530
05:10:10,320 --> 05:10:12,240
characters then sending one command and

4531
05:10:12,240 --> 05:10:15,120
then this like payload um they're trying

4532
05:10:15,120 --> 05:10:16,958
to run this doesn't seem to be working

4533
05:10:16,958 --> 05:10:18,560
quite yet

4534
05:10:18,560 --> 05:10:22,080
um let's check in with organizers

4535
05:10:22,080 --> 05:10:23,600
quickly yeah they are doing some

4536
05:10:23,600 --> 05:10:25,280
reversing of the

4537
05:10:25,280 --> 05:10:27,200
this function renaming some variables

4538
05:10:27,200 --> 05:10:28,878
thinking you know making sense of what's

4539
05:10:28,878 --> 05:10:30,000
going on

4540
05:10:30,000 --> 05:10:32,320
um

4541
05:10:32,480 --> 05:10:35,600
so uh so this so this function does have

4542
05:10:35,600 --> 05:10:37,200
uh some compression in it so there's a

4543
05:10:37,200 --> 05:10:39,040
compression and decompression uh

4544
05:10:39,040 --> 05:10:41,360
algorithms which that's where the bug

4545
05:10:41,360 --> 05:10:43,600
lies and that's uh what they've got to

4546
05:10:43,600 --> 05:10:44,878
do at least the original one i assume

4547
05:10:44,878 --> 05:10:47,360
that's still true i'm actually curious

4548
05:10:47,360 --> 05:10:48,878
uh we'll watch them and we'll figure it

4549
05:10:48,878 --> 05:10:50,798
out and see how it goes i

4550
05:10:50,798 --> 05:10:52,240
sometimes i like knowing and sometimes i

4551
05:10:52,240 --> 05:10:53,840
like not knowing yeah you know this is

4552
05:10:53,840 --> 05:10:55,360
like a different feel

4553
05:10:55,360 --> 05:10:56,878
that's kind of exciting like the you

4554
05:10:56,878 --> 05:10:57,600
know

4555
05:10:57,600 --> 05:10:59,120
saying uh

4556
05:10:59,120 --> 05:11:00,958
what's going on but we can clearly see

4557
05:11:00,958 --> 05:11:03,040
here that they are definitely putting

4558
05:11:03,040 --> 05:11:05,600
together some payload consisting of like

4559
05:11:05,600 --> 05:11:07,360
two different bytes like a long sequence

4560
05:11:07,360 --> 05:11:08,638
of one of them and another long sequence

4561
05:11:08,638 --> 05:11:10,160
of another one of them maybe this is

4562
05:11:10,160 --> 05:11:12,878
unrelated to the compression uh

4563
05:11:12,878 --> 05:11:15,600
uh i mean if that's still in place so

4564
05:11:15,600 --> 05:11:18,560
they're the compression implementation

4565
05:11:18,560 --> 05:11:20,638
does uh yeah being able to control

4566
05:11:20,638 --> 05:11:22,000
whether something is highly compressible

4567
05:11:22,000 --> 05:11:23,600
or highly uncompressible is is

4568
05:11:23,600 --> 05:11:25,760
absolutely something that um seems

4569
05:11:25,760 --> 05:11:27,200
likely and it depends on the

4570
05:11:27,200 --> 05:11:28,718
implementation right like is this a run

4571
05:11:28,718 --> 05:11:30,400
length encoding is this you know there's

4572
05:11:30,400 --> 05:11:31,920
a lot of different yeah compression

4573
05:11:31,920 --> 05:11:33,360
screen schemes

4574
05:11:33,360 --> 05:11:36,080
and i am actually curious um i suspect

4575
05:11:36,080 --> 05:11:37,280
if we look at the official hint that

4576
05:11:37,280 --> 05:11:38,480
we've got queued up for this one it

4577
05:11:38,480 --> 05:11:39,600
would probably be something like the

4578
05:11:39,600 --> 05:11:41,360
name of the compression algorithm uh

4579
05:11:41,360 --> 05:11:44,080
because that probably makes it easier um

4580
05:11:44,080 --> 05:11:46,560
uh to to land which they're doing so i

4581
05:11:46,560 --> 05:11:48,560
mean it does seem like starbuck is

4582
05:11:48,560 --> 05:11:49,760
really

4583
05:11:49,760 --> 05:11:51,440
like interacting a lot

4584
05:11:51,440 --> 05:11:54,000
they're doing a lot of stuff uh

4585
05:11:54,000 --> 05:11:54,878
i mean

4586
05:11:54,878 --> 05:11:56,798
sometimes you want to be thinking and

4587
05:11:56,798 --> 05:11:58,240
sometimes you want to be writing and i

4588
05:11:58,240 --> 05:11:59,600
think starbucks is more of the right

4589
05:11:59,600 --> 05:12:01,280
thing and the organizing is more on the

4590
05:12:01,280 --> 05:12:03,280
thinking side at the moment

4591
05:12:03,280 --> 05:12:04,160
um

4592
05:12:04,160 --> 05:12:05,840
and yeah i've seen i've seen a lot of

4593
05:12:05,840 --> 05:12:08,240
people just sit and stare at a binary

4594
05:12:08,240 --> 05:12:10,080
yeah think about it and then just write

4595
05:12:10,080 --> 05:12:12,958
out a complete exploit like one shot so

4596
05:12:12,958 --> 05:12:15,440
you see now organizers uh switching out

4597
05:12:15,440 --> 05:12:19,760
of ida uh going into

4598
05:12:20,000 --> 05:12:21,920
and and uh in fact the organizers uh

4599
05:12:21,920 --> 05:12:24,000
player did specifically ask us for lib c

4600
05:12:24,000 --> 05:12:25,360
so in the previous round you may have

4601
05:12:25,360 --> 05:12:26,240
remember

4602
05:12:26,240 --> 05:12:27,520
um that was one of the rounds where they

4603
05:12:27,520 --> 05:12:29,120
were trying to run the binary that was

4604
05:12:29,120 --> 05:12:30,320
provided and because they didn't have

4605
05:12:30,320 --> 05:12:32,240
the lib c they weren't able to run it so

4606
05:12:32,240 --> 05:12:33,920
we did actually update all of the rest

4607
05:12:33,920 --> 05:12:35,760
of the challenges and and we now do

4608
05:12:35,760 --> 05:12:37,600
include like the lip c even if they

4609
05:12:37,600 --> 05:12:39,360
don't need it to exploit it it might

4610
05:12:39,360 --> 05:12:41,040
just make it easier for them to run it

4611
05:12:41,040 --> 05:12:42,480
we don't want them to have to fiddle

4612
05:12:42,480 --> 05:12:44,240
around and find the exact vm in the

4613
05:12:44,240 --> 05:12:46,638
exact environment right

4614
05:12:46,638 --> 05:12:48,480
i want to switch back over to starbugs

4615
05:12:48,480 --> 05:12:51,120
and see now some of the debugging

4616
05:12:51,120 --> 05:12:53,840
that they're doing here um again they

4617
05:12:53,840 --> 05:12:55,360
have a

4618
05:12:55,360 --> 05:12:58,400
partial saw script in the works

4619
05:12:58,400 --> 05:13:01,840
uh we see this call to rdx and rdx looks

4620
05:13:01,840 --> 05:13:04,080
like a very controlled value that's not

4621
05:13:04,080 --> 05:13:05,120
like a

4622
05:13:05,120 --> 05:13:07,200
reasonable uh like function pointer

4623
05:13:07,200 --> 05:13:09,120
value so they have but it did look a

4624
05:13:09,120 --> 05:13:10,480
little bit messed up so it looks like

4625
05:13:10,480 --> 05:13:12,638
you know they have like kind of control

4626
05:13:12,638 --> 05:13:14,400
over it like there's compression yeah

4627
05:13:14,400 --> 05:13:16,160
maybe if it's post or pre you know that

4628
05:13:16,160 --> 05:13:17,360
that is gonna

4629
05:13:17,360 --> 05:13:19,200
to throw it off potentially and maybe

4630
05:13:19,200 --> 05:13:21,680
maybe this is

4631
05:13:21,680 --> 05:13:22,480
you know

4632
05:13:22,480 --> 05:13:24,400
could be a situation where

4633
05:13:24,400 --> 05:13:26,320
they might have gone a bit too fast into

4634
05:13:26,320 --> 05:13:28,160
the like trying to go for it actually

4635
05:13:28,160 --> 05:13:29,600
just understanding yeah yeah what's

4636
05:13:29,600 --> 05:13:31,760
happening yeah i gotcha uh but i mean

4637
05:13:31,760 --> 05:13:33,680
that's uh you know we that's uh we will

4638
05:13:33,680 --> 05:13:35,120
have the hindsight we won't know until

4639
05:13:35,120 --> 05:13:36,560
we're done yeah it's always hindsight's

4640
05:13:36,560 --> 05:13:38,638
2020 for sure

4641
05:13:38,638 --> 05:13:40,718
so yeah yeah so back over on the

4642
05:13:40,718 --> 05:13:42,798
organizers we have they have been

4643
05:13:42,798 --> 05:13:44,080
throwing together a script now so

4644
05:13:44,080 --> 05:13:45,760
they've actually got the start of a

4645
05:13:45,760 --> 05:13:46,878
script

4646
05:13:46,878 --> 05:13:49,200
um

4647
05:13:49,280 --> 05:13:51,760
and they're running locally yep

4648
05:13:51,760 --> 05:13:54,560
you can see here that pi is disabled on

4649
05:13:54,560 --> 05:13:55,440
the

4650
05:13:55,440 --> 05:13:56,958
binary so

4651
05:13:56,958 --> 05:13:58,240
if they're going to do

4652
05:13:58,240 --> 05:13:59,680
there was a win function right so they

4653
05:13:59,680 --> 05:14:01,440
would know exactly where in memory this

4654
05:14:01,440 --> 05:14:04,080
win function is located

4655
05:14:04,080 --> 05:14:05,520
there was one i saw i saw one that was

4656
05:14:05,520 --> 05:14:06,718
called wind so i don't know if somebody

4657
05:14:06,718 --> 05:14:08,240
had named it before we looked at it but

4658
05:14:08,240 --> 05:14:10,240
i do remember seeing wind on

4659
05:14:10,240 --> 05:14:12,000
uh starbucks screen earlier oh yeah yeah

4660
05:14:12,000 --> 05:14:14,480
i also saw it there so yes so i think i

4661
05:14:14,480 --> 05:14:16,160
i don't yeah like i said i haven't i

4662
05:14:16,160 --> 05:14:18,560
haven't actually analyzed this version

4663
05:14:18,560 --> 05:14:20,560
the final version the binary so

4664
05:14:20,560 --> 05:14:22,240
yeah we'll we'll see i'm seeing you know

4665
05:14:22,240 --> 05:14:24,958
we're in the create story oh

4666
05:14:24,958 --> 05:14:27,040
this is the first person who's used eye

4667
05:14:27,040 --> 05:14:28,400
to debugger

4668
05:14:28,400 --> 05:14:29,920
i'm actually really curious everybody

4669
05:14:29,920 --> 05:14:32,878
else has consistently been using so

4670
05:14:32,878 --> 05:14:34,878
um yeah

4671
05:14:34,878 --> 05:14:37,360
yeah i don't remember uh new organizers

4672
05:14:37,360 --> 05:14:39,040
uh doing this before when they came up

4673
05:14:39,040 --> 05:14:41,040
for a previous round uh but they're

4674
05:14:41,040 --> 05:14:42,958
using the decompiler together with the

4675
05:14:42,958 --> 05:14:44,798
debugger right to set breakpoints like

4676
05:14:44,798 --> 05:14:46,080
essentially the source code which is i

4677
05:14:46,080 --> 05:14:47,200
mean it's a nice experience when it

4678
05:14:47,200 --> 05:14:48,638
works well yeah that's the thing like in

4679
05:14:48,638 --> 05:14:50,798
principle i mean it's kind of obvious

4680
05:14:50,798 --> 05:14:52,480
that you should like integrate the the

4681
05:14:52,480 --> 05:14:55,040
like disassembler and the the debugger

4682
05:14:55,040 --> 05:14:57,600
uh in practice historically like that

4683
05:14:57,600 --> 05:14:59,280
hasn't worked very well people don't do

4684
05:14:59,280 --> 05:15:00,638
it very well no yeah

4685
05:15:00,638 --> 05:15:02,718
so that people resort to an external uh

4686
05:15:02,718 --> 05:15:04,560
debugger sometimes using some kind of

4687
05:15:04,560 --> 05:15:07,280
bridge between the two uh to various uh

4688
05:15:07,280 --> 05:15:09,040
degrees of success yeah yeah there's a

4689
05:15:09,040 --> 05:15:10,958
lot of little like sync scripts that

4690
05:15:10,958 --> 05:15:12,480
would all you know maybe just

4691
05:15:12,480 --> 05:15:14,958
sync the instruction pointer yeah um i

4692
05:15:14,958 --> 05:15:17,600
have used the ida debugger a few times

4693
05:15:17,600 --> 05:15:20,080
uh kind of successfully but it's still

4694
05:15:20,080 --> 05:15:23,520
not uh like in my standard uh playbook

4695
05:15:23,520 --> 05:15:24,878
yeah that's why it's why i remarked on

4696
05:15:24,878 --> 05:15:26,160
it because i don't know a lot of people

4697
05:15:26,160 --> 05:15:27,440
for whom that's their default choice

4698
05:15:27,440 --> 05:15:28,718
especially i feel like in the ctf

4699
05:15:28,718 --> 05:15:30,878
community i mean i feel like like jeff

4700
05:15:30,878 --> 05:15:32,240
and you know

4701
05:15:32,240 --> 05:15:33,920
you know peta and although i've actually

4702
05:15:33,920 --> 05:15:36,160
seen like lodb i'm waiting for lodb to

4703
05:15:36,160 --> 05:15:37,440
uh oh we're gonna switch over to

4704
05:15:37,440 --> 05:15:39,040
starbucks because yeah go ahead they are

4705
05:15:39,040 --> 05:15:40,718
connecting to the remotes

4706
05:15:40,718 --> 05:15:43,120
already uh it might i mean you know i

4707
05:15:43,120 --> 05:15:44,480
know it might be that they're just

4708
05:15:44,480 --> 05:15:46,400
validating that like some other so

4709
05:15:46,400 --> 05:15:47,360
that's a really good thing like if

4710
05:15:47,360 --> 05:15:49,040
you're developing your exploit locally

4711
05:15:49,040 --> 05:15:51,120
to sometimes just like check off uh

4712
05:15:51,120 --> 05:15:52,958
partial steps to see that you're seeing

4713
05:15:52,958 --> 05:15:54,958
kind of the same thing yeah yeah like if

4714
05:15:54,958 --> 05:15:57,040
you're doing a leak locally making sure

4715
05:15:57,040 --> 05:15:58,320
that like you can actually do oh no with

4716
05:15:58,320 --> 05:15:59,680
this they are doing the remote show and

4717
05:15:59,680 --> 05:16:01,840
it's whoa

4718
05:16:01,840 --> 05:16:03,680
winner chicken dinner

4719
05:16:03,680 --> 05:16:07,680
well that was fast congratulations

4720
05:16:07,680 --> 05:16:10,080
good work starbug um

4721
05:16:10,080 --> 05:16:11,520
jordan would you want to do a little bit

4722
05:16:11,520 --> 05:16:13,920
of outro here and uh i'm going to go

4723
05:16:13,920 --> 05:16:17,120
just absolutely that was fantastic yeah

4724
05:16:17,120 --> 05:16:20,560
so well done starbug that was

4725
05:16:20,560 --> 05:16:23,440
fastest match on record uh good work on

4726
05:16:23,440 --> 05:16:24,718
that one so we said we made that one a

4727
05:16:24,718 --> 05:16:26,798
little bit easier it clearly was easier

4728
05:16:26,798 --> 05:16:28,080
indeed

4729
05:16:28,080 --> 05:16:29,440
heartbreaking to lose but at the same

4730
05:16:29,440 --> 05:16:31,600
time we now have our first team that's

4731
05:16:31,600 --> 05:16:33,920
gonna make it on to the uh the next

4732
05:16:33,920 --> 05:16:35,200
round so

4733
05:16:35,200 --> 05:16:36,718
we're gonna go ahead and get back to the

4734
05:16:36,718 --> 05:16:38,638
intermission we have a little bit longer

4735
05:16:38,638 --> 05:16:40,400
break now we'll be back in about 45

4736
05:16:40,400 --> 05:16:43,680
minutes with our next round uh and we'll

4737
05:16:43,680 --> 05:16:45,440
see you all then and i gotta figure out

4738
05:16:45,440 --> 05:16:47,280
how to clear out this winter thing take

4739
05:16:47,280 --> 05:16:50,680
care everybody bye-bye

4740
05:16:52,670 --> 05:17:00,160
[Music]

4741
05:17:00,160 --> 05:17:02,260
so

4742
05:17:02,260 --> 05:17:59,489
[Music]

4743
05:18:02,280 --> 05:18:09,199
[Music]

4744
05:18:13,280 --> 05:18:54,440
[Music]

4745
05:19:04,380 --> 05:19:07,419
[Music]

4746
05:19:15,410 --> 05:19:33,840
[Music]

4747
05:19:33,840 --> 05:19:34,860
so

4748
05:19:34,860 --> 05:19:54,580
[Music]

4749
05:19:58,940 --> 05:20:02,560
[Music]

4750
05:20:02,560 --> 05:20:03,590
so

4751
05:20:03,590 --> 05:20:14,210
[Music]

4752
05:20:27,140 --> 05:20:45,040
[Music]

4753
05:20:45,040 --> 05:20:46,050
so

4754
05:20:46,050 --> 05:20:55,309
[Music]

4755
05:20:58,000 --> 05:21:00,490
so

4756
05:21:00,490 --> 05:21:06,279
[Music]

4757
05:21:08,740 --> 05:21:19,100
[Music]

4758
05:21:22,290 --> 05:21:35,560
[Music]

4759
05:21:38,570 --> 05:21:41,910
[Music]

4760
05:21:49,650 --> 05:21:53,840
[Music]

4761
05:21:53,840 --> 05:21:56,180
so

4762
05:21:56,180 --> 05:22:07,280
[Music]

4763
05:22:07,280 --> 05:22:10,280
so

4764
05:22:10,830 --> 05:22:29,229
[Music]

4765
05:22:31,350 --> 05:23:16,558
[Music]

4766
05:23:16,558 --> 05:23:19,558
so

4767
05:23:22,490 --> 05:23:41,570
[Music]

4768
05:23:41,570 --> 05:23:41,950
[Applause]

4769
05:23:41,950 --> 05:23:43,600
[Music]

4770
05:23:43,600 --> 05:23:46,510
so

4771
05:23:46,510 --> 05:23:49,699
[Music]

4772
05:23:58,638 --> 05:24:01,638
so

4773
05:24:04,380 --> 05:24:13,600
[Music]

4774
05:24:13,600 --> 05:24:16,600
so

4775
05:24:21,940 --> 05:24:30,599
[Music]

4776
05:24:33,080 --> 05:25:30,619
[Music]

4777
05:25:32,840 --> 05:26:32,540
[Music]

4778
05:26:36,710 --> 05:28:35,000
[Music]

4779
05:28:49,590 --> 05:28:53,499
[Music]

4780
05:29:01,400 --> 05:29:07,539
[Music]

4781
05:29:11,360 --> 05:29:14,490
[Music]

4782
05:29:19,170 --> 05:29:22,469
[Music]

4783
05:29:25,330 --> 05:29:50,619
[Music]

4784
05:29:52,740 --> 05:30:07,689
[Music]

4785
05:30:10,320 --> 05:30:17,880
[Music]

4786
05:30:18,240 --> 05:30:21,240
so

4787
05:30:22,260 --> 05:30:34,529
[Music]

4788
05:30:36,920 --> 05:30:40,980
[Music]

4789
05:30:51,990 --> 05:31:12,320
[Music]

4790
05:31:17,330 --> 05:31:25,249
[Music]

4791
05:31:30,590 --> 05:31:41,139
[Music]

4792
05:31:43,320 --> 05:31:59,550
[Music]

4793
05:32:01,900 --> 05:32:13,290
[Music]

4794
05:32:16,580 --> 05:32:19,669
[Music]

4795
05:32:23,530 --> 05:32:26,660
[Music]

4796
05:33:01,450 --> 05:33:06,720
[Music]

4797
05:33:16,420 --> 05:33:25,539
[Music]

4798
05:33:45,340 --> 05:34:03,279
[Music]

4799
05:34:10,930 --> 05:34:14,290
[Music]

4800
05:34:41,050 --> 05:34:47,759
[Music]

4801
05:34:49,930 --> 05:34:55,639
[Music]

4802
05:35:02,360 --> 05:35:23,910
[Music]

4803
05:35:26,310 --> 05:35:38,660
[Music]

4804
05:35:42,240 --> 05:35:47,719
[Music]

4805
05:35:58,390 --> 05:36:01,559
[Music]

4806
05:36:08,320 --> 05:36:11,660
[Music]

4807
05:36:20,700 --> 05:36:34,439
[Music]

4808
05:36:53,830 --> 05:36:56,999
[Music]

4809
05:37:04,070 --> 05:37:31,840
[Music]

4810
05:37:31,840 --> 05:37:33,090
so

4811
05:37:33,090 --> 05:37:56,650
[Music]

4812
05:38:25,610 --> 05:38:28,799
[Music]

4813
05:38:35,300 --> 05:38:54,558
[Music]

4814
05:38:54,558 --> 05:38:57,558
so

4815
05:38:58,250 --> 05:39:17,760
[Music]

4816
05:39:17,760 --> 05:39:19,840
foreign

4817
05:39:25,990 --> 05:39:29,199
[Music]

4818
05:39:45,010 --> 05:39:48,489
[Music]

4819
05:39:59,200 --> 05:40:01,840
so

4820
05:40:25,900 --> 05:40:33,600
[Music]

4821
05:40:33,600 --> 05:40:36,600
so

4822
05:40:38,260 --> 05:40:45,590
[Music]

4823
05:40:53,750 --> 05:41:02,040
[Music]

4824
05:41:44,960 --> 05:41:52,509
[Music]

4825
05:42:32,860 --> 05:42:57,360
[Music]

4826
05:43:16,440 --> 05:43:29,469
[Music]

4827
05:43:35,460 --> 05:43:38,570
[Music]

4828
05:43:42,640 --> 05:43:46,309
[Music]

4829
05:43:48,470 --> 05:44:15,069
[Music]

4830
05:44:16,400 --> 05:44:19,400
so

4831
05:44:20,270 --> 05:46:50,269
[Music]

4832
05:46:53,830 --> 05:46:58,489
[Music]

4833
05:47:05,370 --> 05:47:08,450
[Music]

4834
05:47:11,920 --> 05:47:18,049
[Music]

4835
05:47:21,300 --> 05:47:24,730
[Music]

4836
05:47:42,160 --> 05:48:02,240
[Music]

4837
05:48:02,240 --> 05:48:04,700
so

4838
05:48:04,700 --> 05:48:41,770
[Music]

4839
05:48:53,220 --> 05:48:56,279
[Music]

4840
05:48:59,070 --> 05:49:16,860
[Music]

4841
05:49:19,780 --> 05:49:22,849
[Music]

4842
05:49:28,080 --> 05:49:32,089
[Music]

4843
05:49:40,280 --> 05:49:43,460
[Music]

4844
05:49:50,320 --> 05:49:53,470
[Music]

4845
05:49:56,480 --> 05:50:06,549
[Music]

4846
05:50:10,000 --> 05:50:13,069
[Music]

4847
05:50:14,280 --> 05:50:16,860
[Applause]

4848
05:50:16,860 --> 05:50:56,119
[Music]

4849
05:51:02,730 --> 05:51:05,810
[Music]

4850
05:51:28,870 --> 05:51:33,340
[Music]

4851
05:51:36,250 --> 05:51:40,800
[Music]

4852
05:51:45,920 --> 05:51:49,140
[Music]

4853
05:51:52,350 --> 05:51:57,849
[Music]

4854
05:52:04,300 --> 05:52:18,239
[Music]

4855
05:52:23,480 --> 05:53:02,480
[Music]

4856
05:53:02,480 --> 05:53:05,480
uh

4857
05:53:10,300 --> 05:53:13,439
[Music]

4858
05:53:17,030 --> 05:53:20,079
[Music]

4859
05:53:22,270 --> 05:53:44,900
[Music]

4860
05:53:51,740 --> 05:53:56,019
[Music]

4861
05:53:58,220 --> 05:54:09,009
[Music]

4862
05:54:15,220 --> 05:54:18,289
[Music]

4863
05:54:18,320 --> 05:54:21,320
hmm

4864
05:54:38,110 --> 05:54:50,099
[Music]

4865
05:54:53,470 --> 05:55:53,880
[Music]

4866
05:55:53,880 --> 05:55:56,999
[Applause]

4867
05:55:57,440 --> 05:55:59,050
so

4868
05:55:59,050 --> 05:56:02,200
[Music]

4869
05:56:04,930 --> 05:56:05,780
[Music]

4870
05:56:05,780 --> 05:56:16,179
[Applause]

4871
05:56:17,440 --> 05:56:20,440
um

4872
05:56:29,200 --> 05:56:30,490
me

4873
05:56:30,490 --> 05:56:38,160
[Music]

4874
05:56:38,160 --> 05:56:41,160
so

4875
05:56:44,390 --> 05:56:53,200
[Music]

4876
05:56:56,170 --> 05:57:22,878
[Music]

4877
05:57:22,878 --> 05:57:24,570
so

4878
05:57:24,570 --> 05:57:36,958
[Music]

4879
05:57:36,958 --> 05:57:39,958
foreign

4880
05:57:40,560 --> 05:58:01,330
[Music]

4881
05:58:05,030 --> 05:58:17,360
[Music]

4882
05:58:17,360 --> 05:58:19,340
so

4883
05:58:19,340 --> 05:58:52,798
[Music]

4884
05:58:52,798 --> 05:58:55,798
uh

4885
05:58:55,960 --> 05:59:04,599
[Music]

4886
05:59:08,590 --> 05:59:11,200
[Music]

4887
05:59:11,200 --> 05:59:14,200
me

4888
05:59:29,280 --> 05:59:32,280
so

4889
05:59:34,200 --> 05:59:39,720
[Music]

4890
05:59:44,360 --> 05:59:48,279
[Music]

4891
05:59:51,940 --> 05:59:56,320
[Music]

4892
05:59:58,460 --> 06:00:04,280
[Music]

4893
06:00:08,110 --> 06:00:12,389
[Music]

4894
06:00:14,470 --> 06:00:17,509
[Music]

4895
06:00:17,600 --> 06:00:20,160
[Applause]

4896
06:00:20,160 --> 06:00:25,299
[Music]

4897
06:00:28,640 --> 06:00:32,509
[Music]

4898
06:00:33,760 --> 06:00:36,340
[Applause]

4899
06:00:36,340 --> 06:00:48,960
[Music]

4900
06:00:51,520 --> 06:00:54,520
so

4901
06:01:00,030 --> 06:01:05,749
[Music]

4902
06:01:19,890 --> 06:01:32,878
[Music]

4903
06:01:32,878 --> 06:01:35,878
so

4904
06:01:36,430 --> 06:01:43,509
[Music]

4905
06:01:46,400 --> 06:01:49,400
so

4906
06:01:49,800 --> 06:01:55,859
[Music]

4907
06:01:58,430 --> 06:02:02,558
[Music]

4908
06:02:02,558 --> 06:02:05,250
so

4909
06:02:05,250 --> 06:02:08,549
[Music]

4910
06:02:11,590 --> 06:02:14,790
[Music]

4911
06:02:15,920 --> 06:02:18,920
so

4912
06:02:43,300 --> 06:02:48,239
[Music]

4913
06:02:55,980 --> 06:02:58,480
[Music]

4914
06:02:58,480 --> 06:03:01,480
so

4915
06:03:04,360 --> 06:03:07,540
[Music]

4916
06:03:10,798 --> 06:03:13,798
so

4917
06:03:21,240 --> 06:03:24,379
[Music]

4918
06:03:25,920 --> 06:03:28,920
so

4919
06:03:33,850 --> 06:03:36,989
[Music]

4920
06:03:39,600 --> 06:03:41,660
so

4921
06:03:41,660 --> 06:03:45,060
[Music]

4922
06:03:48,210 --> 06:03:54,739
[Music]

4923
06:04:03,460 --> 06:04:26,020
[Music]

4924
06:04:30,760 --> 06:04:46,999
[Music]

4925
06:04:47,280 --> 06:04:49,920
welcome back to match two of round two

4926
06:04:49,920 --> 06:04:53,680
we are here uh cipherdex and carl hi

4927
06:04:53,680 --> 06:04:56,000
zeta2 yes uh jordan i don't know we keep

4928
06:04:56,000 --> 06:04:57,680
changing yeah uh maple mallard

4929
06:04:57,680 --> 06:04:59,280
magistrates versus shellfish let's go

4930
06:04:59,280 --> 06:05:01,040
ahead and count this off right away

4931
06:05:01,040 --> 06:05:03,520
five four three

4932
06:05:03,520 --> 06:05:04,320
two

4933
06:05:04,320 --> 06:05:06,558
one go

4934
06:05:06,558 --> 06:05:07,760
all right let's check them out they're

4935
06:05:07,760 --> 06:05:10,160
both downloading their challenge and

4936
06:05:10,160 --> 06:05:12,160
they're going so each team was told this

4937
06:05:12,160 --> 06:05:14,240
was a heap challenge yes and that's uh i

4938
06:05:14,240 --> 06:05:16,878
mean that's not false it's true yes but

4939
06:05:16,878 --> 06:05:18,400
it's not what they expect no exactly

4940
06:05:18,400 --> 06:05:20,240
yeah typically when you talk about heat

4941
06:05:20,240 --> 06:05:22,080
challenges we're talking about like

4942
06:05:22,080 --> 06:05:25,040
attacking the like glibc allocator like

4943
06:05:25,040 --> 06:05:27,600
the metadata structure is there this is

4944
06:05:27,600 --> 06:05:29,200
not going to be that difficult i think

4945
06:05:29,200 --> 06:05:31,120
yeah i feel a little bit mean especially

4946
06:05:31,120 --> 06:05:33,040
we didn't do this intentionally no but

4947
06:05:33,040 --> 06:05:34,638
it's especially somewhat mean because

4948
06:05:34,638 --> 06:05:36,400
shellfish in fact particularly the

4949
06:05:36,400 --> 06:05:37,840
shellfish player who is here is the

4950
06:05:37,840 --> 06:05:40,638
author of the how to heap github repo

4951
06:05:40,638 --> 06:05:41,840
yeah which is a great resource it's

4952
06:05:41,840 --> 06:05:43,680
fantastic it describes all the there's

4953
06:05:43,680 --> 06:05:45,200
just a myriad of number of heap attacks

4954
06:05:45,200 --> 06:05:46,718
and they're all fantastic

4955
06:05:46,718 --> 06:05:48,320
none of which are going to be used here

4956
06:05:48,320 --> 06:05:50,480
today yeah and this this was not

4957
06:05:50,480 --> 06:05:51,680
intentional like we did random

4958
06:05:51,680 --> 06:05:54,160
assignments of teams and challenges it

4959
06:05:54,160 --> 06:05:56,080
just so happened this way uh so let's go

4960
06:05:56,080 --> 06:05:57,440
and take a look at the challenges that

4961
06:05:57,440 --> 06:05:59,760
uh the teams are looking at let's uh

4962
06:05:59,760 --> 06:06:02,320
switch over to

4963
06:06:02,320 --> 06:06:04,160
oh my god both of them are having white

4964
06:06:04,160 --> 06:06:06,160
uh both white eyes we didn't fix the

4965
06:06:06,160 --> 06:06:09,680
names thanks yes uh new rule new rule is

4966
06:06:09,680 --> 06:06:11,440
that uh teams must use different theme

4967
06:06:11,440 --> 06:06:13,520
colors to match their their theme colors

4968
06:06:13,520 --> 06:06:15,600
oh we can create like custom

4969
06:06:15,600 --> 06:06:17,520
filters we can do color futures

4970
06:06:17,520 --> 06:06:18,878
like custom color themes for like you

4971
06:06:18,878 --> 06:06:20,878
know ida binder ninja yeah

4972
06:06:20,878 --> 06:06:25,520
live ctf uh anyway um so we are looking

4973
06:06:25,520 --> 06:06:28,638
at the mighty ducks or mmm here uh and

4974
06:06:28,638 --> 06:06:30,958
they're looking into you know

4975
06:06:30,958 --> 06:06:33,120
disassembling renaming some variables

4976
06:06:33,120 --> 06:06:34,638
just checking out what's going on well

4977
06:06:34,638 --> 06:06:36,798
the program was called stack right or

4978
06:06:36,798 --> 06:06:37,680
stacks

4979
06:06:37,680 --> 06:06:39,280
plural right because there are more i

4980
06:06:39,280 --> 06:06:40,638
guess multiple things like i think you

4981
06:06:40,638 --> 06:06:42,080
can like create a stack and then you can

4982
06:06:42,080 --> 06:06:44,638
add and remove things and if i remember

4983
06:06:44,638 --> 06:06:46,240
correctly it's some kind of like over

4984
06:06:46,240 --> 06:06:47,840
underflow thing maybe you can like pop

4985
06:06:47,840 --> 06:06:49,120
more elements that there are on the

4986
06:06:49,120 --> 06:06:50,480
stacks or

4987
06:06:50,480 --> 06:06:52,080
something like this i think but we will

4988
06:06:52,080 --> 06:06:53,840
we will see about that the repo that

4989
06:06:53,840 --> 06:06:56,558
you're looking for uh diego is how to

4990
06:06:56,558 --> 06:07:00,240
heap h-o-w underscore t-o underscore

4991
06:07:00,240 --> 06:07:00,958
heap

4992
06:07:00,958 --> 06:07:03,440
isn't it just how a digit two and then

4993
06:07:03,440 --> 06:07:05,280
here oh it might be the uh i just saw it

4994
06:07:05,280 --> 06:07:06,558
on the screen they both both teams

4995
06:07:06,558 --> 06:07:08,000
actually pulled up earlier google

4996
06:07:08,000 --> 06:07:10,080
shellfish how to heap you will find it

4997
06:07:10,080 --> 06:07:11,680
and it's on github yeah it'll be it'll

4998
06:07:11,680 --> 06:07:12,718
be right i'm sure somebody else will

4999
06:07:12,718 --> 06:07:14,638
find it in chat uh and paste in there

5000
06:07:14,638 --> 06:07:17,120
yes uh because it is it is quite common

5001
06:07:17,120 --> 06:07:18,798
this is this is a good matchup though

5002
06:07:18,798 --> 06:07:20,798
though because we've got two very

5003
06:07:20,798 --> 06:07:22,400
well-known teams right you've got

5004
06:07:22,400 --> 06:07:25,760
basically the pvp and and and friends uh

5005
06:07:25,760 --> 06:07:27,200
and shellfish of course has been around

5006
06:07:27,200 --> 06:07:29,120
for a very long time yeah so like this

5007
06:07:29,120 --> 06:07:31,040
is this is a i am excited as we move

5008
06:07:31,040 --> 06:07:32,958
into these these top matches definitely

5009
06:07:32,958 --> 06:07:35,680
we can see here on shellfish um

5010
06:07:35,680 --> 06:07:36,558
screen

5011
06:07:36,558 --> 06:07:38,240
that they oh wow that's quite a little

5012
06:07:38,240 --> 06:07:39,120
bit of

5013
06:07:39,120 --> 06:07:40,958
yeah they had already yeah they came

5014
06:07:40,958 --> 06:07:42,240
prepared

5015
06:07:42,240 --> 06:07:43,840
oh did they like

5016
06:07:43,840 --> 06:07:45,440
pre-bake

5017
06:07:45,440 --> 06:07:47,760
like a bunch of useful gadgets in each

5018
06:07:47,760 --> 06:07:50,798
type of lip see uh or something

5019
06:07:50,798 --> 06:07:52,480
because that's uh that's good for

5020
06:07:52,480 --> 06:07:54,320
actually brilliant yeah yeah i never

5021
06:07:54,320 --> 06:07:56,958
that's that's fantastic oh yeah

5022
06:07:56,958 --> 06:07:58,840
um

5023
06:07:58,840 --> 06:08:00,638
so

5024
06:08:00,638 --> 06:08:02,798
uh yeah that's a little bit trying to

5025
06:08:02,798 --> 06:08:04,080
see what they're doing although we'll

5026
06:08:04,080 --> 06:08:05,200
say they were a little worried when we

5027
06:08:05,200 --> 06:08:07,840
told them it was it was a heap challenge

5028
06:08:07,840 --> 06:08:09,680
and it was only 45 minutes to salt

5029
06:08:09,680 --> 06:08:10,878
before sudden death they were like

5030
06:08:10,878 --> 06:08:12,240
that's not even possible like keep

5031
06:08:12,240 --> 06:08:13,520
challenges take longer than that like

5032
06:08:13,520 --> 06:08:15,280
how what how are we supposed to do that

5033
06:08:15,280 --> 06:08:17,040
so well just wait you know you'll see so

5034
06:08:17,040 --> 06:08:18,798
hopefully that was a little bit of a

5035
06:08:18,798 --> 06:08:22,240
hint yes but uh that yeah we'll find out

5036
06:08:22,240 --> 06:08:23,280
obviously there's a question here from

5037
06:08:23,280 --> 06:08:24,878
uh endeavor wait is this ppp versus

5038
06:08:24,878 --> 06:08:27,120
shelves yes or i mean it's technically

5039
06:08:27,120 --> 06:08:30,000
mmm uh which is pvp plus friends

5040
06:08:30,000 --> 06:08:31,520
endeavor is oh he's right over there

5041
06:08:31,520 --> 06:08:32,798
he's a little oh that's why he's got

5042
06:08:32,798 --> 06:08:34,558
headphones on because so endeavor is

5043
06:08:34,558 --> 06:08:37,360
also a nautilus yes um

5044
06:08:37,360 --> 06:08:39,920
and uh so he's

5045
06:08:39,920 --> 06:08:41,520
working on the the main game over there

5046
06:08:41,520 --> 06:08:42,958
and apparently has time just to watch us

5047
06:08:42,958 --> 06:08:45,600
so things must be going really good yeah

5048
06:08:45,600 --> 06:08:47,120
over here listening to us

5049
06:08:47,120 --> 06:08:50,080
uh let's switch over to mmm

5050
06:08:50,080 --> 06:08:51,680
now we'll point out too this is actually

5051
06:08:51,680 --> 06:08:53,120
i think well we haven't had a whole lot

5052
06:08:53,120 --> 06:08:54,480
of repeat matches right this is only the

5053
06:08:54,480 --> 06:08:56,480
second match of round two

5054
06:08:56,480 --> 06:08:58,320
and we have already seen a substitution

5055
06:08:58,320 --> 06:09:00,320
so our player for mmm is not the same

5056
06:09:00,320 --> 06:09:03,440
player that we had for round ones

5057
06:09:03,520 --> 06:09:05,200
with robert came in for round one robert

5058
06:09:05,200 --> 06:09:07,200
show neo-nil legendary player

5059
06:09:07,200 --> 06:09:09,920
unbelievable yeah uh won this match and

5060
06:09:09,920 --> 06:09:11,520
now they have swapped them out and i

5061
06:09:11,520 --> 06:09:12,638
don't know if we scared them with heap

5062
06:09:12,638 --> 06:09:15,040
and so i do feel bad but again we we

5063
06:09:15,040 --> 06:09:17,040
decide the name descriptions independent

5064
06:09:17,040 --> 06:09:18,638
of the teams and

5065
06:09:18,638 --> 06:09:20,878
yeah that might also be like a strategic

5066
06:09:20,878 --> 06:09:23,040
move like you know maybe uh robert is

5067
06:09:23,040 --> 06:09:24,718
working on something in the other part

5068
06:09:24,718 --> 06:09:26,240
of the city right now that he was more

5069
06:09:26,240 --> 06:09:29,360
critical like who do you send like right

5070
06:09:29,360 --> 06:09:30,878
i know a couple of teams too even

5071
06:09:30,878 --> 06:09:32,718
debated strategies of like do we just

5072
06:09:32,718 --> 06:09:34,160
listen as long as we make it out of the

5073
06:09:34,160 --> 06:09:35,760
first or second round

5074
06:09:35,760 --> 06:09:37,520
we don't want to fight and get for the

5075
06:09:37,520 --> 06:09:39,040
top spots when i was worried about that

5076
06:09:39,040 --> 06:09:40,160
that was before the points were

5077
06:09:40,160 --> 06:09:42,638
available though

5078
06:09:42,638 --> 06:09:44,480
they they do know that the points the

5079
06:09:44,480 --> 06:09:46,558
teams were given point totals

5080
06:09:46,558 --> 06:09:48,400
and that the number one team wins four

5081
06:09:48,400 --> 06:09:50,240
thousand points

5082
06:09:50,240 --> 06:09:52,320
oh wow that's uh that's significant so

5083
06:09:52,320 --> 06:09:54,400
it is a lot for comparison

5084
06:09:54,400 --> 06:09:55,200
that's

5085
06:09:55,200 --> 06:09:57,760
almost the difference between last and

5086
06:09:57,760 --> 06:09:59,520
first place no no no no i mean that's

5087
06:09:59,520 --> 06:10:01,600
about seven thousand but yeah yeah yeah

5088
06:10:01,600 --> 06:10:04,638
like okay it's it's so from from 10th

5089
06:10:04,638 --> 06:10:07,520
place up to it's it's a lot now

5090
06:10:07,520 --> 06:10:08,638
by the end of the game there will be

5091
06:10:08,638 --> 06:10:10,558
more points there's more challenges sure

5092
06:10:10,558 --> 06:10:11,680
but

5093
06:10:11,680 --> 06:10:14,000
it is a lot of points so it is enough to

5094
06:10:14,000 --> 06:10:15,920
definitely move the scoreboard

5095
06:10:15,920 --> 06:10:16,798
uh

5096
06:10:16,798 --> 06:10:18,558
so yeah we'll give you a score update we

5097
06:10:18,558 --> 06:10:19,600
want to check on the teams to make sure

5098
06:10:19,600 --> 06:10:20,878
we're not not forgetting them we're

5099
06:10:20,878 --> 06:10:23,200
already seeing interaction

5100
06:10:23,200 --> 06:10:26,480
uh switching to a new stack

5101
06:10:26,878 --> 06:10:27,760
uh

5102
06:10:27,760 --> 06:10:30,480
so a small exploit script in the works

5103
06:10:30,480 --> 06:10:32,080
yeah trying out some interaction with

5104
06:10:32,080 --> 06:10:33,200
the program

5105
06:10:33,200 --> 06:10:34,638
again this is you know we talked about

5106
06:10:34,638 --> 06:10:36,480
this before on the stream but it's very

5107
06:10:36,480 --> 06:10:38,160
the typical situation where you might

5108
06:10:38,160 --> 06:10:40,798
want to go for a strategy where you kind

5109
06:10:40,798 --> 06:10:42,878
of build up these like abstractions in

5110
06:10:42,878 --> 06:10:44,958
your exploit script like you map

5111
06:10:44,958 --> 06:10:46,638
different actions within the program to

5112
06:10:46,638 --> 06:10:49,040
kind of like building blocks yeah and

5113
06:10:49,040 --> 06:10:50,558
then you can then call them in like

5114
06:10:50,558 --> 06:10:52,718
whatever order you need uh which can be

5115
06:10:52,718 --> 06:10:55,520
very useful uh there's some like initial

5116
06:10:55,520 --> 06:10:57,520
uh cost to doing that like in in terms

5117
06:10:57,520 --> 06:10:59,440
of time investment but

5118
06:10:59,440 --> 06:11:00,958
like gymnos very efficient because you

5119
06:11:00,958 --> 06:11:02,958
look at this they've got a cr dl like

5120
06:11:02,958 --> 06:11:05,040
two letter functions right so it's like

5121
06:11:05,040 --> 06:11:06,718
this is this load truly looks optimized

5122
06:11:06,718 --> 06:11:08,160
for speed where they're minimizing even

5123
06:11:08,160 --> 06:11:09,760
the amount of like the names of the

5124
06:11:09,760 --> 06:11:11,600
functions being called right if we

5125
06:11:11,600 --> 06:11:13,200
switch uh

5126
06:11:13,200 --> 06:11:16,840
back to

5127
06:11:16,878 --> 06:11:18,240
streamline so we might we might be a

5128
06:11:18,240 --> 06:11:19,760
little delayed i think i'm just on our

5129
06:11:19,760 --> 06:11:23,600
monitor oh okay sorry uh we are

5130
06:11:23,600 --> 06:11:26,240
uh what i wanted to do was to switch

5131
06:11:26,240 --> 06:11:28,400
over to shellfish to look at their

5132
06:11:28,400 --> 06:11:30,878
exploit script um when you know we were

5133
06:11:30,878 --> 06:11:31,920
talking about that they had like

5134
06:11:31,920 --> 06:11:34,000
pre-made like a bunch of gadgets and

5135
06:11:34,000 --> 06:11:35,760
stuff um

5136
06:11:35,760 --> 06:11:37,360
trying to see if they're doing like some

5137
06:11:37,360 --> 06:11:38,798
you know actual stuff related to the

5138
06:11:38,798 --> 06:11:40,160
challenge yet

5139
06:11:40,160 --> 06:11:43,120
uh i'm not quite seeing it it seems like

5140
06:11:43,120 --> 06:11:45,280
they are messing around with gadgets so

5141
06:11:45,280 --> 06:11:46,638
they might have a pretty good

5142
06:11:46,638 --> 06:11:48,638
understanding of what's going on

5143
06:11:48,638 --> 06:11:50,080
uh hard to like it feels like you

5144
06:11:50,080 --> 06:11:53,280
wouldn't do that unless uh you know

5145
06:11:53,280 --> 06:11:54,240
uh

5146
06:11:54,240 --> 06:11:56,240
you have the other building blocks uh

5147
06:11:56,240 --> 06:11:59,600
you need but yeah hard to tell

5148
06:11:59,600 --> 06:12:01,120
so

5149
06:12:01,120 --> 06:12:03,040
you can though see shellfish looking a

5150
06:12:03,040 --> 06:12:05,120
bit in the debugger here

5151
06:12:05,120 --> 06:12:09,040
uh confirming some values here on the

5152
06:12:09,040 --> 06:12:09,760
uh

5153
06:12:09,760 --> 06:12:12,080
some global variables i think something

5154
06:12:12,080 --> 06:12:15,120
called stack something called buff

5155
06:12:15,120 --> 06:12:15,920
and

5156
06:12:15,920 --> 06:12:18,080
you know trying to see i guess where

5157
06:12:18,080 --> 06:12:20,400
different inputs and stuff end up and so

5158
06:12:20,400 --> 06:12:21,920
on to you know

5159
06:12:21,920 --> 06:12:24,638
maybe you have some hypotheses about

5160
06:12:24,638 --> 06:12:26,160
this value might go in here and then you

5161
06:12:26,160 --> 06:12:27,520
do that in your exploit script but then

5162
06:12:27,520 --> 06:12:29,040
you want to verify the debugger that

5163
06:12:29,040 --> 06:12:30,400
things are actually behaving the way

5164
06:12:30,400 --> 06:12:32,000
you're expecting to yeah

5165
06:12:32,000 --> 06:12:32,958
yeah and it's you know one of the

5166
06:12:32,958 --> 06:12:34,400
interesting things is it's really hard

5167
06:12:34,400 --> 06:12:36,798
to make a challenge of exactly the same

5168
06:12:36,798 --> 06:12:37,920
difficulty

5169
06:12:37,920 --> 06:12:40,000
uh and so we just didn't try like it we

5170
06:12:40,000 --> 06:12:41,280
clearly have some challenge that we know

5171
06:12:41,280 --> 06:12:42,878
are easier than others and that's that's

5172
06:12:42,878 --> 06:12:45,520
gonna be the case um but what matters is

5173
06:12:45,520 --> 06:12:47,440
they're fair in the sense that each

5174
06:12:47,440 --> 06:12:49,520
round your opponent gets the exact same

5175
06:12:49,520 --> 06:12:51,040
information gets the exact same binary

5176
06:12:51,040 --> 06:12:52,840
they get told the exact same description

5177
06:12:52,840 --> 06:12:55,680
beforehand uh and so on any given binary

5178
06:12:55,680 --> 06:12:58,000
it may a given match it may be easier it

5179
06:12:58,000 --> 06:12:59,680
may be harder

5180
06:12:59,680 --> 06:13:01,280
but you are going to go and prove your

5181
06:13:01,280 --> 06:13:02,878
medal in in both of those situations

5182
06:13:02,878 --> 06:13:03,920
against the person you're playing with

5183
06:13:03,920 --> 06:13:05,040
although

5184
06:13:05,040 --> 06:13:06,400
again we're talking about these are some

5185
06:13:06,400 --> 06:13:08,320
legendary ctf players that we're seeing

5186
06:13:08,320 --> 06:13:09,600
kind of before us

5187
06:13:09,600 --> 06:13:10,400
and

5188
06:13:10,400 --> 06:13:11,280
it is

5189
06:13:11,280 --> 06:13:14,000
different to come and do this kind of an

5190
06:13:14,000 --> 06:13:15,040
event

5191
06:13:15,040 --> 06:13:17,920
than it is to do a normal long-term ctf

5192
06:13:17,920 --> 06:13:19,200
investigation right there's certainly

5193
06:13:19,200 --> 06:13:20,080
skills obviously there's a lot of

5194
06:13:20,080 --> 06:13:22,638
overlap but uh you can definitely

5195
06:13:22,638 --> 06:13:26,000
specialize in like a live ctf quick pune

5196
06:13:26,000 --> 06:13:28,080
style challenge and not be as focused on

5197
06:13:28,080 --> 06:13:30,638
the long term stuff too yeah no totally

5198
06:13:30,638 --> 06:13:32,160
that's uh

5199
06:13:32,160 --> 06:13:34,840
and we've seen like

5200
06:13:34,840 --> 06:13:37,920
um it's multiple occasions where players

5201
06:13:37,920 --> 06:13:39,120
have

5202
06:13:39,120 --> 06:13:41,920
you know missed uh crucial information

5203
06:13:41,920 --> 06:13:43,360
in the challenges

5204
06:13:43,360 --> 06:13:44,240
uh

5205
06:13:44,240 --> 06:13:46,000
leading to you know not being able to

5206
06:13:46,000 --> 06:13:48,240
solve them as fast and

5207
06:13:48,240 --> 06:13:50,000
these are like you know there are no

5208
06:13:50,000 --> 06:13:51,680
beginners these are top tier these are

5209
06:13:51,680 --> 06:13:54,080
absolutely s tier players every every

5210
06:13:54,080 --> 06:13:56,400
every single person playing this event

5211
06:13:56,400 --> 06:13:57,680
is nest here like there's just no

5212
06:13:57,680 --> 06:13:58,958
question right like these are all good

5213
06:13:58,958 --> 06:14:01,120
teams to even get here and then these

5214
06:14:01,120 --> 06:14:02,080
are the representatives the best

5215
06:14:02,080 --> 06:14:03,600
representative from each of the teams

5216
06:14:03,600 --> 06:14:05,280
yes to come play so yeah there's no

5217
06:14:05,280 --> 06:14:06,798
question i wouldn't stand a chance

5218
06:14:06,798 --> 06:14:08,878
against any of these folks i i i'm sure

5219
06:14:08,878 --> 06:14:11,280
that no it's uh

5220
06:14:11,280 --> 06:14:14,160
it's uh it's a bit scary uh definitely

5221
06:14:14,160 --> 06:14:15,680
and like

5222
06:14:15,680 --> 06:14:18,480
you're also kind of uh you know

5223
06:14:18,480 --> 06:14:20,000
feeling the pressure not only from the

5224
06:14:20,000 --> 06:14:21,680
opponent but from your own team like if

5225
06:14:21,680 --> 06:14:23,840
you go up as your representative

5226
06:14:23,840 --> 06:14:26,000
you know you're representing your team

5227
06:14:26,000 --> 06:14:27,600
and like you don't want to let your

5228
06:14:27,600 --> 06:14:30,480
teammates down it it does look like we

5229
06:14:30,480 --> 06:14:32,480
actually have another item debugger so

5230
06:14:32,480 --> 06:14:35,360
jimo over on the mighty ducks is uh

5231
06:14:35,360 --> 06:14:37,840
setting break points uh in ida using the

5232
06:14:37,840 --> 06:14:39,280
remote debugger so actually using the

5233
06:14:39,280 --> 06:14:40,958
remote service to

5234
06:14:40,958 --> 06:14:42,958
debug the linux binary

5235
06:14:42,958 --> 06:14:44,840
um

5236
06:14:44,840 --> 06:14:47,200
and uh they're running into problems

5237
06:14:47,200 --> 06:14:48,240
actually

5238
06:14:48,240 --> 06:14:49,840
with that so they tried to do the remote

5239
06:14:49,840 --> 06:14:50,798
debugger now they're trying to do a

5240
06:14:50,798 --> 06:14:52,480
local process

5241
06:14:52,480 --> 06:14:54,400
uh this is actually a good example of

5242
06:14:54,400 --> 06:14:56,480
where honestly just using your pundug

5243
06:14:56,480 --> 06:14:58,320
and jeff integration might have actually

5244
06:14:58,320 --> 06:15:00,320
been faster yeah because we're seeing

5245
06:15:00,320 --> 06:15:03,120
continued kind of kind of errors

5246
06:15:03,120 --> 06:15:05,200
um as a result and and you know remote

5247
06:15:05,200 --> 06:15:07,360
debugging can can be really uh difficult

5248
06:15:07,360 --> 06:15:09,120
too

5249
06:15:09,120 --> 06:15:11,360
there's a lot a lot of wrinkles to it

5250
06:15:11,360 --> 06:15:12,840
but there we go it looks like we have a

5251
06:15:12,840 --> 06:15:15,520
debugger i think we get that that nice

5252
06:15:15,520 --> 06:15:17,120
blue color in the background so now we

5253
06:15:17,120 --> 06:15:18,638
know they're debugging yes and you see

5254
06:15:18,638 --> 06:15:20,080
those you saw those two break points and

5255
06:15:20,080 --> 06:15:21,680
i think it was like jumping back and

5256
06:15:21,680 --> 06:15:23,280
forth between those two break points

5257
06:15:23,280 --> 06:15:24,878
probably a loop thing going on there as

5258
06:15:24,878 --> 06:15:27,878
well

5259
06:15:28,000 --> 06:15:29,600
yeah

5260
06:15:29,600 --> 06:15:31,760
um i want to switch back quickly a bit

5261
06:15:31,760 --> 06:15:33,600
to shellfish again looking a little bit

5262
06:15:33,600 --> 06:15:35,520
at their debugger you see that

5263
06:15:35,520 --> 06:15:36,798
they're building these abstraction

5264
06:15:36,798 --> 06:15:39,600
functions called like a lock delete next

5265
06:15:39,600 --> 06:15:42,638
so yeah uh these are kind of like your

5266
06:15:42,638 --> 06:15:44,798
primitive your primitive operations in

5267
06:15:44,798 --> 06:15:47,040
this like heap interaction

5268
06:15:47,040 --> 06:15:48,798
thing so and just for folks that maybe

5269
06:15:48,798 --> 06:15:50,400
aren't even familiar we should kind of

5270
06:15:50,400 --> 06:15:52,958
cover what like a heat vulnerability

5271
06:15:52,958 --> 06:15:54,798
typically looks like versus what like

5272
06:15:54,798 --> 06:15:56,878
you know what we're expecting from them

5273
06:15:56,878 --> 06:15:59,520
in this particular event totally so

5274
06:15:59,520 --> 06:16:02,160
um normally like i mean it's a broad

5275
06:16:02,160 --> 06:16:03,680
concept but normally when we're talking

5276
06:16:03,680 --> 06:16:06,558
about heap exploitation we're talking

5277
06:16:06,558 --> 06:16:07,360
about

5278
06:16:07,360 --> 06:16:09,600
one of the like mainstream allocators

5279
06:16:09,600 --> 06:16:11,680
like the glibc allocator or like the

5280
06:16:11,680 --> 06:16:14,240
windows uh allocator and these are just

5281
06:16:14,240 --> 06:16:15,680
allocators when a program needs a piece

5282
06:16:15,680 --> 06:16:16,718
of memory

5283
06:16:16,718 --> 06:16:18,480
and it doesn't even know maybe even in

5284
06:16:18,480 --> 06:16:19,760
advance how big it's going to be it can

5285
06:16:19,760 --> 06:16:21,200
say on the file like hey i need some

5286
06:16:21,200 --> 06:16:22,558
memory i need this much please give me

5287
06:16:22,558 --> 06:16:23,840
some memory i need more memory now give

5288
06:16:23,840 --> 06:16:24,958
me some more memory right and the

5289
06:16:24,958 --> 06:16:26,080
program can do whatever it wants with

5290
06:16:26,080 --> 06:16:27,520
that right and the operating system

5291
06:16:27,520 --> 06:16:30,240
typically only provides memories in like

5292
06:16:30,240 --> 06:16:32,958
full pages which is like usually way too

5293
06:16:32,958 --> 06:16:35,280
much compared to what you need so

5294
06:16:35,280 --> 06:16:36,798
then you have an allocator on top of

5295
06:16:36,798 --> 06:16:38,080
that which is responsible for like

5296
06:16:38,080 --> 06:16:40,000
chopping these pages up into smaller

5297
06:16:40,000 --> 06:16:41,920
bits handing it out to the program like

5298
06:16:41,920 --> 06:16:43,040
keeping track of them doing the

5299
06:16:43,040 --> 06:16:44,400
bookkeeping

5300
06:16:44,400 --> 06:16:46,160
like when the memory is freed up like

5301
06:16:46,160 --> 06:16:47,840
putting that back into the list of

5302
06:16:47,840 --> 06:16:50,400
available stuff and to do all that it it

5303
06:16:50,400 --> 06:16:52,080
stores a whole bunch of metadata about

5304
06:16:52,080 --> 06:16:53,920
the different memory regions and so on

5305
06:16:53,920 --> 06:16:56,798
and a lot of heap challenges are about

5306
06:16:56,798 --> 06:17:00,320
performing sequences of like illegal

5307
06:17:00,320 --> 06:17:03,040
heap operations to corrupt this uh

5308
06:17:03,040 --> 06:17:06,400
metadata about the allocated and free

5309
06:17:06,400 --> 06:17:08,638
memory regions to cause some kind of

5310
06:17:08,638 --> 06:17:10,480
like mismatch or confusion for example

5311
06:17:10,480 --> 06:17:11,360
you might

5312
06:17:11,360 --> 06:17:14,558
allocate uh memory and get a pointer to

5313
06:17:14,558 --> 06:17:15,920
something that's already allocated so

5314
06:17:15,920 --> 06:17:17,280
you have two pointers pointing to the

5315
06:17:17,280 --> 06:17:18,080
same

5316
06:17:18,080 --> 06:17:19,840
area that's like one example of like an

5317
06:17:19,840 --> 06:17:22,080
end result of this uh that's a very like

5318
06:17:22,080 --> 06:17:23,520
broad

5319
06:17:23,520 --> 06:17:25,040
description of this oh we missed it

5320
06:17:25,040 --> 06:17:26,718
somebody commented shellfish pulling an

5321
06:17:26,718 --> 06:17:28,240
inspector gadget

5322
06:17:28,240 --> 06:17:29,200
um

5323
06:17:29,200 --> 06:17:30,320
was this because there was an actual

5324
06:17:30,320 --> 06:17:32,480
tool called inspector gadget or uh or

5325
06:17:32,480 --> 06:17:34,240
did we miss something else i i wonder

5326
06:17:34,240 --> 06:17:36,320
yeah um maybe because they bring you

5327
06:17:36,320 --> 06:17:38,480
know also we have some comments here uh

5328
06:17:38,480 --> 06:17:40,958
they have like a uaf question mark so

5329
06:17:40,958 --> 06:17:43,440
you uaf stands for use after free uh

5330
06:17:43,440 --> 06:17:45,200
common uh

5331
06:17:45,200 --> 06:17:48,160
concept when it comes to like uh not

5332
06:17:48,160 --> 06:17:49,840
necessarily only heap stuff but

5333
06:17:49,840 --> 06:17:51,520
typically when we're talking heap

5334
06:17:51,520 --> 06:17:53,680
exploitation stuff yep and to answer

5335
06:17:53,680 --> 06:17:54,878
your question about binary ninja yep

5336
06:17:54,878 --> 06:17:56,558
binary ninja also does have a remote

5337
06:17:56,558 --> 06:17:58,480
debugger uh it can support a couple of

5338
06:17:58,480 --> 06:18:00,878
different styles of remote debugging too

5339
06:18:00,878 --> 06:18:02,240
but actually i don't know if in

5340
06:18:02,240 --> 06:18:03,680
particular

5341
06:18:03,680 --> 06:18:05,440
it supports the the style of debugging

5342
06:18:05,440 --> 06:18:06,638
being done and this challenge or not i'd

5343
06:18:06,638 --> 06:18:08,080
actually have to double check

5344
06:18:08,080 --> 06:18:08,958
yes

5345
06:18:08,958 --> 06:18:12,558
checking over with mmm uh they are i

5346
06:18:12,558 --> 06:18:14,480
mean still not that much code written in

5347
06:18:14,480 --> 06:18:15,760
their exploit script right i think i

5348
06:18:15,760 --> 06:18:16,878
think they're still working it out i

5349
06:18:16,878 --> 06:18:18,080
mean i think they built the the

5350
06:18:18,080 --> 06:18:20,240
interaction primitives they understand

5351
06:18:20,240 --> 06:18:22,000
that there's something going on that

5352
06:18:22,000 --> 06:18:24,000
they i i have not seen anything yet that

5353
06:18:24,000 --> 06:18:25,120
indicates to me somebody knows the

5354
06:18:25,120 --> 06:18:26,798
volume yet yeah like i'm still waiting

5355
06:18:26,798 --> 06:18:28,000
to see

5356
06:18:28,000 --> 06:18:30,400
uh some indication that they're they're

5357
06:18:30,400 --> 06:18:32,000
gonna

5358
06:18:32,000 --> 06:18:33,920
um do that and right now we're just

5359
06:18:33,920 --> 06:18:35,520
they're creating things and using them i

5360
06:18:35,520 --> 06:18:37,440
mean they may in their head know uh but

5361
06:18:37,440 --> 06:18:38,558
certainly from what we've seen in the

5362
06:18:38,558 --> 06:18:39,600
code

5363
06:18:39,600 --> 06:18:41,600
uh we're just seeing them understand it

5364
06:18:41,600 --> 06:18:42,958
right

5365
06:18:42,958 --> 06:18:44,478
i don't know conor does anger management

5366
06:18:44,478 --> 06:18:45,920
have a remote debugger that's a great

5367
06:18:45,920 --> 06:18:47,200
question

5368
06:18:47,200 --> 06:18:50,240
yeah you you would know right

5369
06:18:50,240 --> 06:18:51,680
better than i would

5370
06:18:51,680 --> 06:18:53,600
oh and conor is one of the

5371
06:18:53,600 --> 06:18:55,040
anger

5372
06:18:55,040 --> 06:18:56,000
developers

5373
06:18:56,000 --> 06:18:58,638
uh conor would you say you work in anger

5374
06:18:58,638 --> 06:19:01,840
i just i had to use the phrase

5375
06:19:02,240 --> 06:19:05,360
to to yeah joke big fan of anger it's a

5376
06:19:05,360 --> 06:19:08,558
binary analysis framework um

5377
06:19:08,558 --> 06:19:10,840
you can use it for symbolic execution

5378
06:19:10,840 --> 06:19:13,360
yeah a lot of automated program analysis

5379
06:19:13,360 --> 06:19:14,718
and there's a lot of research a lot of

5380
06:19:14,718 --> 06:19:16,718
cool research uh concepts that get

5381
06:19:16,718 --> 06:19:19,440
implemented on top of it well it's

5382
06:19:19,440 --> 06:19:20,558
it's from

5383
06:19:20,558 --> 06:19:22,080
you see

5384
06:19:22,080 --> 06:19:26,000
so lsb right uh i mean so shellfish

5385
06:19:26,000 --> 06:19:28,798
yeah is broadly associated with it um

5386
06:19:28,798 --> 06:19:31,440
and a lot of uh

5387
06:19:31,440 --> 06:19:33,120
uh asu folks as well actually i think

5388
06:19:33,120 --> 06:19:34,478
the majority of the work is is actually

5389
06:19:34,478 --> 06:19:36,160
over at asu now maybe okay um but

5390
06:19:36,160 --> 06:19:37,840
there's historically it's been it's been

5391
06:19:37,840 --> 06:19:40,878
usb ussb and that's now something think

5392
06:19:40,878 --> 06:19:41,680
uh

5393
06:19:41,680 --> 06:19:44,400
asu uh and thank you for that yeah it's

5394
06:19:44,400 --> 06:19:46,240
been it's been a wild amount of work

5395
06:19:46,240 --> 06:19:48,240
just even getting the logistics going

5396
06:19:48,240 --> 06:19:50,958
but yeah so far so good i have a a lot

5397
06:19:50,958 --> 06:19:52,958
of friends here in vegas i have not met

5398
06:19:52,958 --> 06:19:55,200
them nope uh there's a lot of people

5399
06:19:55,200 --> 06:19:56,798
that were like sorry we'll see you on

5400
06:19:56,798 --> 06:19:59,840
sunday maybe yeah so

5401
06:19:59,840 --> 06:20:02,160
but uh yeah so we uh you know

5402
06:20:02,160 --> 06:20:04,478
hope that we managed to bring you some

5403
06:20:04,478 --> 06:20:06,400
entertainment and education in these uh

5404
06:20:06,400 --> 06:20:09,040
streams that's that is the goal and so i

5405
06:20:09,040 --> 06:20:11,120
still haven't seen a debugger yeah all

5406
06:20:11,120 --> 06:20:13,600
right so back

5407
06:20:13,600 --> 06:20:16,160
in the ducks we're still seeing creation

5408
06:20:16,160 --> 06:20:18,478
and i wonder if they're trying to hit

5409
06:20:18,478 --> 06:20:21,440
a particular length size

5410
06:20:21,440 --> 06:20:23,040
on these operations so they're creating

5411
06:20:23,040 --> 06:20:25,840
creating creating

5412
06:20:28,558 --> 06:20:30,160
and it is a little funny that we told

5413
06:20:30,160 --> 06:20:31,360
them

5414
06:20:31,360 --> 06:20:33,360
that the challenges uh

5415
06:20:33,360 --> 06:20:35,120
got a heap

5416
06:20:35,120 --> 06:20:38,000
in it but the program name was stacks oh

5417
06:20:38,000 --> 06:20:39,600
yeah that's there's a little bit of

5418
06:20:39,600 --> 06:20:41,600
because you know the stack in in when

5419
06:20:41,600 --> 06:20:43,200
you're writing the code is like a stack

5420
06:20:43,200 --> 06:20:44,878
of plates where you put stuff on it and

5421
06:20:44,878 --> 06:20:46,080
then you pull it off in the reverse

5422
06:20:46,080 --> 06:20:48,160
order that you put it on yeah and and so

5423
06:20:48,160 --> 06:20:49,680
that's just a stack and it gets used a

5424
06:20:49,680 --> 06:20:51,920
lot in in computer science programs and

5425
06:20:51,920 --> 06:20:53,520
it's probably the most common data

5426
06:20:53,520 --> 06:20:55,120
source for a lot of types of storing of

5427
06:20:55,120 --> 06:20:56,798
data but then the heap is the the the

5428
06:20:56,798 --> 06:20:58,638
other one that gets used a lot for other

5429
06:20:58,638 --> 06:21:00,478
types of data so like they're kind of

5430
06:21:00,478 --> 06:21:02,320
like different

5431
06:21:02,320 --> 06:21:03,760
sort of you know regions of memory but

5432
06:21:03,760 --> 06:21:05,040
they're also different styles of

5433
06:21:05,040 --> 06:21:06,798
exploitation yep and we're just

5434
06:21:06,798 --> 06:21:08,400
combining two of them i mean most

5435
06:21:08,400 --> 06:21:10,160
programs use multiple but like that

5436
06:21:10,160 --> 06:21:12,000
we're in fact drawing that comparison i

5437
06:21:12,000 --> 06:21:13,760
think is i think it's funny yeah it's a

5438
06:21:13,760 --> 06:21:15,280
little bit funny yeah i mean that's as

5439
06:21:15,280 --> 06:21:17,120
an organizer you are often trying to

5440
06:21:17,120 --> 06:21:19,120
make a good joke really that's that's

5441
06:21:19,120 --> 06:21:20,798
why we make challenges oh yeah a lot of

5442
06:21:20,798 --> 06:21:22,798
the challenges we uh almost came up with

5443
06:21:22,798 --> 06:21:24,400
the name first and then figure out what

5444
06:21:24,400 --> 06:21:25,840
the bug should be there's no almost it

5445
06:21:25,840 --> 06:21:27,920
was 100 done several times

5446
06:21:27,920 --> 06:21:28,878
in this

5447
06:21:28,878 --> 06:21:32,718
uh okay so we are seeing some probing of

5448
06:21:32,718 --> 06:21:34,878
some mighty ducks

5449
06:21:34,878 --> 06:21:36,080
yeah so now we're looking at some

5450
06:21:36,080 --> 06:21:38,798
probing of sizes

5451
06:21:38,798 --> 06:21:41,680
and they're attaching to the debugger

5452
06:21:41,680 --> 06:21:43,680
they want to actually look at the stack

5453
06:21:43,680 --> 06:21:46,680
values

5454
06:21:48,878 --> 06:21:50,240
and we're kind of running it over and

5455
06:21:50,240 --> 06:21:51,360
over now it looks like they've stopped

5456
06:21:51,360 --> 06:21:52,718
to take a look at it so they were trying

5457
06:21:52,718 --> 06:21:53,920
something based on the result that they

5458
06:21:53,920 --> 06:21:55,040
were looking at

5459
06:21:55,040 --> 06:21:57,040
um they're yeah they're gonna have to

5460
06:21:57,040 --> 06:21:58,958
set the type to get this displayed

5461
06:21:58,958 --> 06:22:01,040
appropriately hit d a whole bunch of

5462
06:22:01,040 --> 06:22:04,240
times and get that um get that converted

5463
06:22:04,240 --> 06:22:05,680
yeah

5464
06:22:05,680 --> 06:22:07,200
so they're following through their their

5465
06:22:07,200 --> 06:22:09,200
results

5466
06:22:09,200 --> 06:22:11,200
we can switch over to shellfish again

5467
06:22:11,200 --> 06:22:12,478
we're seeing that here they are naming

5468
06:22:12,478 --> 06:22:13,760
their

5469
06:22:13,760 --> 06:22:15,360
trying there we go so they're also in

5470
06:22:15,360 --> 06:22:17,040
the debugger as well yes and now this is

5471
06:22:17,040 --> 06:22:19,280
interesting bmap found a unique crash oh

5472
06:22:19,280 --> 06:22:21,360
are they fussing they are fussing the

5473
06:22:21,360 --> 06:22:24,160
program that's 100 a great strategy

5474
06:22:24,160 --> 06:22:25,920
honestly with something this simple with

5475
06:22:25,920 --> 06:22:29,040
the menus or this this common that's not

5476
06:22:29,040 --> 06:22:31,200
terrible i would love to see a fuzzer

5477
06:22:31,200 --> 06:22:32,638
solve one of these no i mean i would

5478
06:22:32,638 --> 06:22:34,400
maybe i think it's awesome i just think

5479
06:22:34,400 --> 06:22:36,160
that like you know

5480
06:22:36,160 --> 06:22:37,520
you would have to be

5481
06:22:37,520 --> 06:22:40,638
fairly comfortable with a fussing

5482
06:22:40,638 --> 06:22:42,958
uh to

5483
06:22:42,958 --> 06:22:45,680
be able to like you know set that up

5484
06:22:45,680 --> 06:22:48,080
quickly enough for it to be uh you know

5485
06:22:48,080 --> 06:22:49,440
worth the investment well and beyond

5486
06:22:49,440 --> 06:22:51,200
that right the trade-off with fuzzing is

5487
06:22:51,200 --> 06:22:53,440
that you you get to a crash very quickly

5488
06:22:53,440 --> 06:22:54,638
yeah you don't necessarily get to

5489
06:22:54,638 --> 06:22:56,080
understanding to be able to turn that

5490
06:22:56,080 --> 06:22:57,920
crash into an exploit now right but the

5491
06:22:57,920 --> 06:22:59,120
binary the small maybe that's not a

5492
06:22:59,120 --> 06:23:01,200
problem so i think that would be

5493
06:23:01,200 --> 06:23:03,120
fantastic i'm like i'm actually yeah

5494
06:23:03,120 --> 06:23:04,320
there we go test crashes so it looks

5495
06:23:04,320 --> 06:23:06,240
like they're gonna triage the crash now

5496
06:23:06,240 --> 06:23:08,080
so they're trying to like take the input

5497
06:23:08,080 --> 06:23:09,520
that caused the crash

5498
06:23:09,520 --> 06:23:11,920
oh i'm i'm like i'm all in for this yeah

5499
06:23:11,920 --> 06:23:13,440
yeah yeah

5500
06:23:13,440 --> 06:23:14,400
this this would be great i'm gonna go

5501
06:23:14,400 --> 06:23:15,680
ahead and catch up on uh i should have

5502
06:23:15,680 --> 06:23:18,718
almost had uh uh brandon for uh you know

5503
06:23:18,718 --> 06:23:20,240
on commentary for this he would also

5504
06:23:20,240 --> 06:23:22,558
have uh oh we're missing out so gamoza

5505
06:23:22,558 --> 06:23:24,000
is gonna be joining us for the next uh

5506
06:23:24,000 --> 06:23:26,400
the last two streams of the day

5507
06:23:26,400 --> 06:23:29,280
and uh he is a a world-class expert in

5508
06:23:29,280 --> 06:23:30,878
fuzzing that would have been that would

5509
06:23:30,878 --> 06:23:32,798
have been super fun i'd love to uh hear

5510
06:23:32,798 --> 06:23:34,798
what he would have to say about it um so

5511
06:23:34,798 --> 06:23:36,160
we'll yeah we'll we'll see what his

5512
06:23:36,160 --> 06:23:38,160
thoughts are no i love it we've seen

5513
06:23:38,160 --> 06:23:40,558
like you know a range of tools being

5514
06:23:40,558 --> 06:23:43,040
used uh throughout this tournament like

5515
06:23:43,040 --> 06:23:45,600
we're seeing a faster here we saw uh c3

5516
06:23:45,600 --> 06:23:47,520
the constraint solver being used we even

5517
06:23:47,520 --> 06:23:49,520
saw like an online sudoku solver at some

5518
06:23:49,520 --> 06:23:51,840
point uh yeah you know we have a bunch

5519
06:23:51,840 --> 06:23:53,600
of different gadget finder tools they've

5520
06:23:53,600 --> 06:23:56,718
been like rap finders uh yeah raw

5521
06:23:56,718 --> 06:23:59,760
rp plus plus uh yeah rob gadgets

5522
06:23:59,760 --> 06:24:01,600
all of those a lot of phone tools

5523
06:24:01,600 --> 06:24:03,920
different debuggers different uh you

5524
06:24:03,920 --> 06:24:06,638
know uh

5525
06:24:06,638 --> 06:24:08,958
you know while there are kind of like

5526
06:24:08,958 --> 06:24:11,280
mainstream choices there are definitely

5527
06:24:11,280 --> 06:24:14,478
variations of like what you can use uh

5528
06:24:14,478 --> 06:24:16,000
and uh

5529
06:24:16,000 --> 06:24:17,680
yeah all of these skilled players having

5530
06:24:17,680 --> 06:24:19,440
having slightly different preferences

5531
06:24:19,440 --> 06:24:21,440
using slightly different tools

5532
06:24:21,440 --> 06:24:23,920
and uh still being able to like you know

5533
06:24:23,920 --> 06:24:25,200
perform at this

5534
06:24:25,200 --> 06:24:26,718
level i think we see a lot of like

5535
06:24:26,718 --> 06:24:28,400
variety in like their text editor but

5536
06:24:28,400 --> 06:24:29,760
not so much in their debuggers right

5537
06:24:29,760 --> 06:24:31,600
there's really only two they've used

5538
06:24:31,600 --> 06:24:34,320
most have predominantly been gdp yeah um

5539
06:24:34,320 --> 06:24:35,440
and then you've had a couple that are

5540
06:24:35,440 --> 06:24:37,600
using using ida's debugger we've not

5541
06:24:37,600 --> 06:24:39,680
seen the binary debugger yet not as a

5542
06:24:39,680 --> 06:24:41,520
debugger yeah yeah we've not seen i mean

5543
06:24:41,520 --> 06:24:44,000
giter now has a debugger as well

5544
06:24:44,000 --> 06:24:45,200
but we haven't we haven't seen that one

5545
06:24:45,200 --> 06:24:47,120
out but i mean radar has a debugger as

5546
06:24:47,120 --> 06:24:49,600
well right oh yeah yeah yeah um it does

5547
06:24:49,600 --> 06:24:51,200
as well too wait we actually yeah we

5548
06:24:51,200 --> 06:24:53,520
haven't seen any of our uh users yet

5549
06:24:53,520 --> 06:24:55,520
there i will say where our users are fun

5550
06:24:55,520 --> 06:24:57,120
to watch uh when they know it really

5551
06:24:57,120 --> 06:24:58,000
well

5552
06:24:58,000 --> 06:25:00,000
yeah it's um

5553
06:25:00,000 --> 06:25:01,520
i you know to not to say anything

5554
06:25:01,520 --> 06:25:04,000
offensive oh look i i saw somebody just

5555
06:25:04,000 --> 06:25:05,360
showed us the screenshot of the

5556
06:25:05,360 --> 06:25:07,920
shellfish team up in the room so uh here

5557
06:25:07,920 --> 06:25:10,240
put us put us on camera oh

5558
06:25:10,240 --> 06:25:12,638
let's uh let's let's wave hi hi to all

5559
06:25:12,638 --> 06:25:14,798
the shellfish folks up enjoying sorry if

5560
06:25:14,798 --> 06:25:16,400
we're sniping the rest of your pwning

5561
06:25:16,400 --> 06:25:18,958
that you're doing for the the event uh

5562
06:25:18,958 --> 06:25:20,718
but let's go back here let's give him

5563
06:25:20,718 --> 06:25:22,558
some extra time on uh

5564
06:25:22,558 --> 06:25:24,798
on kyle's screen just to uh yeah i want

5565
06:25:24,798 --> 06:25:26,240
to see that some that sweet sweet

5566
06:25:26,240 --> 06:25:27,680
fussing action yeah let's see if this

5567
06:25:27,680 --> 06:25:29,600
fuzzing is or i've gotten any results we

5568
06:25:29,600 --> 06:25:32,878
have a sig trust yeah um

5569
06:25:32,878 --> 06:25:36,478
so they were checking in the debugger

5570
06:25:37,600 --> 06:25:39,520
a little bit difficult to follow right

5571
06:25:39,520 --> 06:25:42,160
now what's going on they are

5572
06:25:42,160 --> 06:25:43,280
trying to write a couple of these

5573
06:25:43,280 --> 06:25:45,440
operations inspecting some memory they

5574
06:25:45,440 --> 06:25:47,120
have put some breakpoints in memory to

5575
06:25:47,120 --> 06:25:49,680
trying to analyze this um maybe we

5576
06:25:49,680 --> 06:25:52,478
should go over to uh

5577
06:25:52,478 --> 06:25:54,718
yeah so i've been watching mighty ducks

5578
06:25:54,718 --> 06:25:56,718
and uh and again to be clear the

5579
06:25:56,718 --> 06:25:59,120
official name is something along with ms

5580
06:25:59,120 --> 06:26:01,200
and mallard in it mallard magistrates

5581
06:26:01,200 --> 06:26:03,520
maple no maple mallard magistration yeah

5582
06:26:03,520 --> 06:26:05,360
yeah yeah i like mighty ducks so that's

5583
06:26:05,360 --> 06:26:06,878
that's that's what i've been saying

5584
06:26:06,878 --> 06:26:07,920
um

5585
06:26:07,920 --> 06:26:10,798
yeah or bops

5586
06:26:10,798 --> 06:26:12,558
or

5587
06:26:12,558 --> 06:26:13,680
yeah

5588
06:26:13,680 --> 06:26:15,920
oh here we go okay okay this looks

5589
06:26:15,920 --> 06:26:19,440
better right so we just saw

5590
06:26:19,440 --> 06:26:21,040
oh and then that was interesting so

5591
06:26:21,040 --> 06:26:22,958
we're actually seeing targeted uh make

5592
06:26:22,958 --> 06:26:25,120
an immediate value

5593
06:26:25,120 --> 06:26:27,280
okay

5594
06:26:27,280 --> 06:26:28,878
this looks like we actually have

5595
06:26:28,878 --> 06:26:30,320
something interesting there well that's

5596
06:26:30,320 --> 06:26:31,280
uh

5597
06:26:31,280 --> 06:26:33,440
so we went from looking at the got which

5598
06:26:33,440 --> 06:26:35,280
is very interesting you might something

5599
06:26:35,280 --> 06:26:37,840
you might want to overwrite uh i would

5600
06:26:37,840 --> 06:26:41,440
assume then that this is a no railroad

5601
06:26:41,440 --> 06:26:43,120
challenge and just to like you know

5602
06:26:43,120 --> 06:26:44,478
explain what that is uh one of the

5603
06:26:44,478 --> 06:26:46,160
mitigations that are available is

5604
06:26:46,160 --> 06:26:47,840
something called railroad or relocation

5605
06:26:47,840 --> 06:26:50,558
read only in which the

5606
06:26:50,558 --> 06:26:53,440
goth table can be made a read-only at

5607
06:26:53,440 --> 06:26:54,798
low time which prevents these kind of

5608
06:26:54,798 --> 06:26:56,478
like got overwriting

5609
06:26:56,478 --> 06:26:58,718
exploits that are um you know it's quite

5610
06:26:58,718 --> 06:27:01,440
a nice technique um

5611
06:27:01,440 --> 06:27:02,320
but

5612
06:27:02,320 --> 06:27:04,638
i as i said i don't think we have this

5613
06:27:04,638 --> 06:27:06,160
enabled for this challenge which does

5614
06:27:06,160 --> 06:27:08,718
allow you to

5615
06:27:08,718 --> 06:27:11,120
override these got entries and what you

5616
06:27:11,120 --> 06:27:13,200
then have to do is just to make that the

5617
06:27:13,200 --> 06:27:14,400
function that was originally in that

5618
06:27:14,400 --> 06:27:16,478
position have it being called

5619
06:27:16,478 --> 06:27:18,080
uh so you might you might say you have

5620
06:27:18,080 --> 06:27:20,160
like a sterling for example in your got

5621
06:27:20,160 --> 06:27:22,718
entry you replace it with system and

5622
06:27:22,718 --> 06:27:25,120
then the next time some something calls

5623
06:27:25,120 --> 06:27:27,200
sterling it instead calls system with

5624
06:27:27,200 --> 06:27:29,280
the same argument so that's a

5625
06:27:29,280 --> 06:27:32,320
quite nice way of doing exploitation uh

5626
06:27:32,320 --> 06:27:34,080
yeah this is this is like this is really

5627
06:27:34,080 --> 06:27:35,840
fun to watch like i'm really enjoying

5628
06:27:35,840 --> 06:27:37,760
just uh not having to talk for a second

5629
06:27:37,760 --> 06:27:39,120
while you explain railroads so i could

5630
06:27:39,120 --> 06:27:41,680
watch uh uh jimbo do this this has been

5631
06:27:41,680 --> 06:27:43,200
this has been pretty cool

5632
06:27:43,200 --> 06:27:44,958
um

5633
06:27:44,958 --> 06:27:45,920
so

5634
06:27:45,920 --> 06:27:48,080
yeah what the building these primitives

5635
06:27:48,080 --> 06:27:51,760
up uh live

5636
06:27:51,760 --> 06:27:54,240
yeah so did you say we have uh jinmo

5637
06:27:54,240 --> 06:27:55,920
playing i believe so yes i believe we

5638
06:27:55,920 --> 06:27:59,440
have right uh who's also like legendary

5639
06:27:59,440 --> 06:28:00,400
ctf

5640
06:28:00,400 --> 06:28:03,120
top top top um

5641
06:28:03,120 --> 06:28:05,200
back i used to run uh

5642
06:28:05,200 --> 06:28:06,878
something called pony racing on my

5643
06:28:06,878 --> 06:28:08,798
youtube channel which is like similar to

5644
06:28:08,798 --> 06:28:10,320
this we used to have four contestants

5645
06:28:10,320 --> 06:28:12,638
going heads up and genma was on one of

5646
06:28:12,638 --> 06:28:14,240
the episodes and

5647
06:28:14,240 --> 06:28:16,000
like usually our episodes used to last

5648
06:28:16,000 --> 06:28:18,000
like 60 to 90 minutes yeah uh he was

5649
06:28:18,000 --> 06:28:19,280
done with intense i think it was you

5650
06:28:19,280 --> 06:28:21,280
said it was the fastest solve ever no no

5651
06:28:21,280 --> 06:28:22,798
i like it usually in the beginning of

5652
06:28:22,798 --> 06:28:24,478
the episodes we do like a round where we

5653
06:28:24,478 --> 06:28:25,680
go like

5654
06:28:25,680 --> 06:28:27,280
through each of these kind of introduce

5655
06:28:27,280 --> 06:28:28,478
everything introduce the contest and

5656
06:28:28,478 --> 06:28:30,240
look at like what their tech stack looks

5657
06:28:30,240 --> 06:28:30,878
like

5658
06:28:30,878 --> 06:28:32,878
when we kind of like went the full

5659
06:28:32,878 --> 06:28:34,878
round and come came back to jinmo like

5660
06:28:34,878 --> 06:28:37,440
he was always all already like halfway

5661
06:28:37,440 --> 06:28:38,558
through this soul script but like two

5662
06:28:38,558 --> 06:28:39,680
thirds through yeah you're like all

5663
06:28:39,680 --> 06:28:40,798
right we can't go anywhere else because

5664
06:28:40,798 --> 06:28:42,558
we're gonna just so it was it was

5665
06:28:42,558 --> 06:28:44,638
absolutely ridiculous like usually we

5666
06:28:44,638 --> 06:28:46,240
stopped when someone sold it but for

5667
06:28:46,240 --> 06:28:48,240
this one we just continued until another

5668
06:28:48,240 --> 06:28:50,000
other people have a chance to yeah keep

5669
06:28:50,000 --> 06:28:52,000
working on it yeah

5670
06:28:52,000 --> 06:28:54,000
yeah i mean you can tell the the the

5671
06:28:54,000 --> 06:28:56,558
speed there is is really impressive so i

5672
06:28:56,558 --> 06:28:58,080
think um

5673
06:28:58,080 --> 06:28:59,360
i think that might even out the

5674
06:28:59,360 --> 06:29:01,280
advantage that shellfish might have

5675
06:29:01,280 --> 06:29:02,478
thought they were having with heaps but

5676
06:29:02,478 --> 06:29:04,878
i i still really like that fuzzing i

5677
06:29:04,878 --> 06:29:07,120
mean it's entirely possible that a

5678
06:29:07,120 --> 06:29:08,638
fuzzer gets you to

5679
06:29:08,638 --> 06:29:10,478
a workable close enough to an exploit

5680
06:29:10,478 --> 06:29:13,680
you could land it right um so so we'll

5681
06:29:13,680 --> 06:29:15,600
see we've got a couple of new we can

5682
06:29:15,600 --> 06:29:17,600
switch over to um

5683
06:29:17,600 --> 06:29:20,718
shellfish actually yeah and see that

5684
06:29:20,718 --> 06:29:23,600
they are again doing some debugging

5685
06:29:23,600 --> 06:29:24,798
um

5686
06:29:24,798 --> 06:29:25,840
they

5687
06:29:25,840 --> 06:29:26,878
are trying to run these different

5688
06:29:26,878 --> 06:29:28,160
commands they're interacting with the

5689
06:29:28,160 --> 06:29:29,280
program

5690
06:29:29,280 --> 06:29:30,478
um

5691
06:29:30,478 --> 06:29:32,558
trying to do some addition and it says

5692
06:29:32,558 --> 06:29:33,680
that this command has not been

5693
06:29:33,680 --> 06:29:35,680
implemented yet so

5694
06:29:35,680 --> 06:29:39,040
i'm not entirely sure what's going on

5695
06:29:39,040 --> 06:29:41,360
there

5696
06:29:41,360 --> 06:29:44,478
right so they are adding elements to the

5697
06:29:44,478 --> 06:29:48,718
to the stack with those additions um

5698
06:29:49,040 --> 06:29:51,280
yes here again we saw a glimpse of like

5699
06:29:51,280 --> 06:29:54,080
their faster uh output

5700
06:29:54,080 --> 06:29:56,240
and um

5701
06:29:56,240 --> 06:29:57,520
yeah

5702
06:29:57,520 --> 06:29:58,718
it's interesting to me just watching

5703
06:29:58,718 --> 06:30:01,440
demo like the number of times um

5704
06:30:01,440 --> 06:30:02,798
that there was a like

5705
06:30:02,798 --> 06:30:04,798
decimal value returned whether it was

5706
06:30:04,798 --> 06:30:08,080
copy it command run python enter hex

5707
06:30:08,080 --> 06:30:10,000
parentheses number paste it just feels

5708
06:30:10,000 --> 06:30:10,878
like something that should be like a

5709
06:30:10,878 --> 06:30:13,200
macro or a right right right um but it

5710
06:30:13,200 --> 06:30:14,558
was still done faster than i could have

5711
06:30:14,558 --> 06:30:16,400
made a macro hockey i think because it's

5712
06:30:16,400 --> 06:30:18,718
just very very quick uh

5713
06:30:18,718 --> 06:30:20,718
to watch that so

5714
06:30:20,718 --> 06:30:24,200
so setting

5715
06:30:25,040 --> 06:30:27,200
doing some more in interaction with the

5716
06:30:27,200 --> 06:30:28,320
program

5717
06:30:28,320 --> 06:30:29,760
oh that's funny they both they both

5718
06:30:29,760 --> 06:30:31,440
literally wrote the exact same line of

5719
06:30:31,440 --> 06:30:34,080
code at the exact same time split change

5720
06:30:34,080 --> 06:30:35,600
to a split view here and we're both

5721
06:30:35,600 --> 06:30:38,717
receiving for the same

5722
06:30:40,160 --> 06:30:41,440
because they're kind of doing uh

5723
06:30:41,440 --> 06:30:43,440
different approaches when it comes to

5724
06:30:43,440 --> 06:30:44,478
kind of like

5725
06:30:44,478 --> 06:30:46,878
finding the vulnerability it seems but i

5726
06:30:46,878 --> 06:30:49,520
wonder if like despite this they are uh

5727
06:30:49,520 --> 06:30:52,320
pretty close i mean it's i i couldn't

5728
06:30:52,320 --> 06:30:53,840
really tell you i just looking at the

5729
06:30:53,840 --> 06:30:54,878
source code that they were i think it

5730
06:30:54,878 --> 06:30:56,400
was just a coincidence they happen to be

5731
06:30:56,400 --> 06:30:58,080
in like the same

5732
06:30:58,080 --> 06:30:59,280
uh pattern that they were matching on

5733
06:30:59,280 --> 06:31:01,040
the inputs uh just sort of like one of

5734
06:31:01,040 --> 06:31:02,878
those coincidences but

5735
06:31:02,878 --> 06:31:05,120
uh

5736
06:31:05,120 --> 06:31:08,160
farewell uh-oh win farewell oh hold on

5737
06:31:08,160 --> 06:31:10,638
what was this

5738
06:31:11,360 --> 06:31:14,958
okay read handle command handle equation

5739
06:31:14,958 --> 06:31:17,360
yeah let's go over there to to to mmm

5740
06:31:17,360 --> 06:31:18,240
and see

5741
06:31:18,240 --> 06:31:19,680
uh you're seeing something there on

5742
06:31:19,680 --> 06:31:22,638
their screens just watching i mean just

5743
06:31:22,638 --> 06:31:24,240
even trying to keep up i will say the

5744
06:31:24,240 --> 06:31:26,160
downside of when somebody is so fast is

5745
06:31:26,160 --> 06:31:27,920
that you can barely follow along as

5746
06:31:27,920 --> 06:31:29,280
they're as they're doing things

5747
06:31:29,280 --> 06:31:31,440
switching between their exploits

5748
06:31:31,440 --> 06:31:32,558
so we've got a couple things going on

5749
06:31:32,558 --> 06:31:34,718
there is an s trace going on watching

5750
06:31:34,718 --> 06:31:36,400
what's going through the program

5751
06:31:36,400 --> 06:31:39,200
the um

5752
06:31:39,920 --> 06:31:42,239
uh

5753
06:31:43,120 --> 06:31:45,120
yeah this is this is like

5754
06:31:45,120 --> 06:31:46,400
i'm gonna need to we're gonna need to

5755
06:31:46,400 --> 06:31:47,840
have live overflow do like a

5756
06:31:47,840 --> 06:31:50,000
play-by-play of this like slow down and

5757
06:31:50,000 --> 06:31:51,360
recap so that we can kind of follow

5758
06:31:51,360 --> 06:31:52,558
what's going on because this is this is

5759
06:31:52,558 --> 06:31:54,080
like so hard to even kind of kind of

5760
06:31:54,080 --> 06:31:55,920
follow yeah we had some comments in the

5761
06:31:55,920 --> 06:31:57,280
chat someone said would be nice to have

5762
06:31:57,280 --> 06:31:58,798
like the contestants do like a walk

5763
06:31:58,798 --> 06:32:00,798
through after i would love to hear i

5764
06:32:00,798 --> 06:32:02,718
agree uh you know we're probably not

5765
06:32:02,718 --> 06:32:03,600
gonna get their time though because

5766
06:32:03,600 --> 06:32:04,958
they're in the middle of def con exactly

5767
06:32:04,958 --> 06:32:06,718
like it's still like we're already you

5768
06:32:06,718 --> 06:32:07,440
know

5769
06:32:07,440 --> 06:32:09,600
asking them to do this uh and they get a

5770
06:32:09,600 --> 06:32:11,920
lot of points they they do they do and i

5771
06:32:11,920 --> 06:32:13,520
mean i've heard positive feedback right

5772
06:32:13,520 --> 06:32:14,718
but you know

5773
06:32:14,718 --> 06:32:16,878
you should only push it so much we don't

5774
06:32:16,878 --> 06:32:18,638
want to yeah oversteer

5775
06:32:18,638 --> 06:32:20,320
but yeah actually that's a good point so

5776
06:32:20,320 --> 06:32:23,680
we have a live overflow uh you know um

5777
06:32:23,680 --> 06:32:25,360
famous content creator within the

5778
06:32:25,360 --> 06:32:28,160
security space uh he is uh i don't know

5779
06:32:28,160 --> 06:32:30,080
if he's online currently maybe he might

5780
06:32:30,080 --> 06:32:32,000
be he should be asleep at this point i

5781
06:32:32,000 --> 06:32:33,120
hope he is

5782
06:32:33,120 --> 06:32:35,600
but if not hi hi um

5783
06:32:35,600 --> 06:32:36,958
but uh

5784
06:32:36,958 --> 06:32:38,718
he has been doing like kind of watch

5785
06:32:38,718 --> 06:32:41,920
parties and uh

5786
06:32:41,920 --> 06:32:43,680
like recaps of the matches and then

5787
06:32:43,680 --> 06:32:46,558
doing some analysis and stuff and uh

5788
06:32:46,558 --> 06:32:47,840
i've heard some really positive feedback

5789
06:32:47,840 --> 06:32:49,840
on that as well so uh really good to

5790
06:32:49,840 --> 06:32:52,320
have that as well

5791
06:32:52,320 --> 06:32:54,400
so i think this uh this is a point at

5792
06:32:54,400 --> 06:32:56,240
which where we were if if we felt like

5793
06:32:56,240 --> 06:32:57,680
they weren't making progress we were

5794
06:32:57,680 --> 06:33:00,400
considering hints i just

5795
06:33:00,400 --> 06:33:02,718
looking at it i i think we're we're

5796
06:33:02,718 --> 06:33:04,958
we're chugging along but i will kind of

5797
06:33:04,958 --> 06:33:06,958
ask our production booth who has a like

5798
06:33:06,958 --> 06:33:08,558
a solid script to kind of compare to

5799
06:33:08,558 --> 06:33:10,400
potentially and look at like order right

5800
06:33:10,400 --> 06:33:11,600
right answer is

5801
06:33:11,600 --> 06:33:13,040
are we you think we need a hint or are

5802
06:33:13,040 --> 06:33:15,200
we thinking we're

5803
06:33:15,200 --> 06:33:17,920
it's hard to say

5804
06:33:18,000 --> 06:33:19,760
yeah i mean

5805
06:33:19,760 --> 06:33:21,920
i think um they don't look stuck they

5806
06:33:21,920 --> 06:33:23,920
don't look uh like they're going to dead

5807
06:33:23,920 --> 06:33:25,360
ends they look like they're just solving

5808
06:33:25,360 --> 06:33:28,080
it um so far so

5809
06:33:28,080 --> 06:33:29,920
uh i'm

5810
06:33:29,920 --> 06:33:31,840
uh i'm at this point happy to just to

5811
06:33:31,840 --> 06:33:33,360
kind of let them go

5812
06:33:33,360 --> 06:33:35,440
um we i i will say we have had our

5813
06:33:35,440 --> 06:33:38,798
sudden death uh binaries ready to go and

5814
06:33:38,798 --> 06:33:41,200
we haven't had to use them yet

5815
06:33:41,200 --> 06:33:42,160
um

5816
06:33:42,160 --> 06:33:43,920
but we have we have considered like the

5817
06:33:43,920 --> 06:33:45,600
end of today is probably the most likely

5818
06:33:45,600 --> 06:33:48,320
time where we might might uh need to use

5819
06:33:48,320 --> 06:33:49,520
one of those just because some of these

5820
06:33:49,520 --> 06:33:50,958
binaries are

5821
06:33:50,958 --> 06:33:52,718
are difficult and we don't have time so

5822
06:33:52,718 --> 06:33:54,080
tomorrow we have the chance for the

5823
06:33:54,080 --> 06:33:57,520
semi-finals in the finals yeah uh to

5824
06:33:57,520 --> 06:33:58,958
um

5825
06:33:58,958 --> 06:34:00,478
to spend a little bit more time on them

5826
06:34:00,478 --> 06:34:02,718
i'm just now noticing one thing is that

5827
06:34:02,718 --> 06:34:05,520
uh ginmo is using windows yep um

5828
06:34:05,520 --> 06:34:06,240
and

5829
06:34:06,240 --> 06:34:07,600
that's not something that we've seen too

5830
06:34:07,600 --> 06:34:08,958
much of there's been i think there's

5831
06:34:08,958 --> 06:34:11,280
been a couple but not a yeah not a

5832
06:34:11,280 --> 06:34:12,958
predominant i would say it has been

5833
06:34:12,958 --> 06:34:15,200
linux and mac pretty even yeah there's

5834
06:34:15,200 --> 06:34:16,878
been a lot of both of those

5835
06:34:16,878 --> 06:34:18,478
uh and then

5836
06:34:18,478 --> 06:34:20,160
a couple of windows but certainly not

5837
06:34:20,160 --> 06:34:22,400
the most common yeah i mean uh

5838
06:34:22,400 --> 06:34:24,878
windows has certainly been uh popular

5839
06:34:24,878 --> 06:34:26,558
like especially with like

5840
06:34:26,558 --> 06:34:29,280
reverse engineering uh scene windows

5841
06:34:29,280 --> 06:34:31,360
have been pretty cracked me yeah yeah

5842
06:34:31,360 --> 06:34:33,120
that's probably true uh pretty big there

5843
06:34:33,120 --> 06:34:35,120
uh like a lot of people there working on

5844
06:34:35,120 --> 06:34:37,600
you know maybe like you know game

5845
06:34:37,600 --> 06:34:40,558
game hacking game cracking stuff um

5846
06:34:40,558 --> 06:34:42,478
yeah

5847
06:34:42,478 --> 06:34:45,440
but especially with the addition of uh

5848
06:34:45,440 --> 06:34:48,718
wsl wsl yeah the windows popularity has

5849
06:34:48,718 --> 06:34:49,920
definitely increased within like the

5850
06:34:49,920 --> 06:34:51,200
hacking yeah i think i mean i think

5851
06:34:51,200 --> 06:34:52,798
windows became a much more viable

5852
06:34:52,798 --> 06:34:54,718
platform for doing this kind of work yes

5853
06:34:54,718 --> 06:34:56,718
when you could just like run a real

5854
06:34:56,718 --> 06:34:59,440
terminal and get a real you know um we

5855
06:34:59,440 --> 06:35:00,958
also have uh

5856
06:35:00,958 --> 06:35:02,000
ginville

5857
06:35:02,000 --> 06:35:05,280
also like famous ctf uh player who at

5858
06:35:05,280 --> 06:35:07,920
least for many many years uh used to

5859
06:35:07,920 --> 06:35:09,280
windows as his primary i think he did

5860
06:35:09,280 --> 06:35:10,558
actually switched kind of recently he

5861
06:35:10,558 --> 06:35:11,840
was considering i don't know if he did

5862
06:35:11,840 --> 06:35:13,760
or not or i think he has since switched

5863
06:35:13,760 --> 06:35:15,760
to like linux for his main os but yeah

5864
06:35:15,760 --> 06:35:17,840
he was like a prime example of our game

5865
06:35:17,840 --> 06:35:19,680
it sounds like live overflow is still is

5866
06:35:19,680 --> 06:35:22,958
still live okay uh yeah um good evening

5867
06:35:22,958 --> 06:35:24,478
good evening

5868
06:35:24,478 --> 06:35:26,400
yeah we look forward to chatting more

5869
06:35:26,400 --> 06:35:28,160
and seeing uh if you can help us

5870
06:35:28,160 --> 06:35:29,760
untangle some of these some of these

5871
06:35:29,760 --> 06:35:32,240
exploits in in hindsight as we you know

5872
06:35:32,240 --> 06:35:34,478
ask the uh the participants and

5873
06:35:34,478 --> 06:35:35,680
get a little more insight to what they

5874
06:35:35,680 --> 06:35:37,040
were doing and we have time to kind of

5875
06:35:37,040 --> 06:35:38,400
analyze them because it is it is

5876
06:35:38,400 --> 06:35:39,520
difficult

5877
06:35:39,520 --> 06:35:41,040
uh when you're trying to follow along

5878
06:35:41,040 --> 06:35:43,200
live as it happens so yeah we had live

5879
06:35:43,200 --> 06:35:45,200
overflow as well on commentary here

5880
06:35:45,200 --> 06:35:46,798
earlier today yeah so if you missed that

5881
06:35:46,798 --> 06:35:47,920
make sure to go back you can re-watch

5882
06:35:47,920 --> 06:35:50,558
the start of the stream uh right now

5883
06:35:50,558 --> 06:35:52,878
also if you are you watch if you didn't

5884
06:35:52,878 --> 06:35:55,600
watch yesterday uh yesterday we had a

5885
06:35:55,600 --> 06:35:57,280
change of resolution halfway through and

5886
06:35:57,280 --> 06:36:00,160
it split the stream so the day one video

5887
06:36:00,160 --> 06:36:01,520
that was originally uploaded only was

5888
06:36:01,520 --> 06:36:03,040
part two it only had like the end of the

5889
06:36:03,040 --> 06:36:04,718
stream the last match i believe the last

5890
06:36:04,718 --> 06:36:06,160
of the four

5891
06:36:06,160 --> 06:36:07,920
but we've since uploaded part one so if

5892
06:36:07,920 --> 06:36:09,200
you check our channel you'll actually

5893
06:36:09,200 --> 06:36:10,878
see the first three matches are also

5894
06:36:10,878 --> 06:36:12,320
online as well

5895
06:36:12,320 --> 06:36:14,478
at some point when we've recovered uh

5896
06:36:14,478 --> 06:36:15,920
we'll probably go back and add chapter

5897
06:36:15,920 --> 06:36:17,840
marks to make sure we time stamp them so

5898
06:36:17,840 --> 06:36:19,200
you know you'll be able to more quickly

5899
06:36:19,200 --> 06:36:22,240
navigate to each individual match uh but

5900
06:36:22,240 --> 06:36:23,360
it's gonna we're gonna need some

5901
06:36:23,360 --> 06:36:24,638
recuperation time i don't think there's

5902
06:36:24,638 --> 06:36:26,798
any question uh after after this weekend

5903
06:36:26,798 --> 06:36:29,600
oh yeah so um

5904
06:36:29,600 --> 06:36:32,478
we can see here shellfish uh still or i

5905
06:36:32,478 --> 06:36:34,958
mean again doing uh debugging

5906
06:36:34,958 --> 06:36:36,240
looking at these

5907
06:36:36,240 --> 06:36:37,520
global variables i think there are

5908
06:36:37,520 --> 06:36:38,878
global variables

5909
06:36:38,878 --> 06:36:40,798
the stack and the

5910
06:36:40,798 --> 06:36:43,600
and the buffer um considering these

5911
06:36:43,600 --> 06:36:45,760
different actions that you can take uh

5912
06:36:45,760 --> 06:36:47,280
within the program

5913
06:36:47,280 --> 06:36:49,600
and like um you know

5914
06:36:49,600 --> 06:36:52,080
see here looking at the uh oh creating

5915
06:36:52,080 --> 06:36:54,558
this uh struct here within ida so this

5916
06:36:54,558 --> 06:36:57,120
is like you know recovering the uh

5917
06:36:57,120 --> 06:36:58,400
different data structures that have been

5918
06:36:58,400 --> 06:37:00,718
used in memory uh trying to figure out

5919
06:37:00,718 --> 06:37:02,878
like what they look like and how they

5920
06:37:02,878 --> 06:37:03,760
are

5921
06:37:03,760 --> 06:37:05,120
evaluated or

5922
06:37:05,120 --> 06:37:06,958
used in memory

5923
06:37:06,958 --> 06:37:08,558
uh really helps your understanding and

5924
06:37:08,558 --> 06:37:11,680
helps you find where the bug or bugs

5925
06:37:11,680 --> 06:37:13,520
are

5926
06:37:13,520 --> 06:37:15,680
it's very important step of like reverse

5927
06:37:15,680 --> 06:37:17,440
engineering when we're like analyzing

5928
06:37:17,440 --> 06:37:18,878
your binary and trying to understand

5929
06:37:18,878 --> 06:37:21,520
what's going on

5930
06:37:22,958 --> 06:37:24,718
yeah it's going to take me i mean i'm

5931
06:37:24,718 --> 06:37:26,160
going to want to to really take some

5932
06:37:26,160 --> 06:37:28,478
time to even just to break down the

5933
06:37:28,478 --> 06:37:29,920
the tooling that the different teams

5934
06:37:29,920 --> 06:37:32,958
have been using uh as we watch uh

5935
06:37:32,958 --> 06:37:34,558
watch which which things are using and

5936
06:37:34,558 --> 06:37:35,840
watching you know watching even how like

5937
06:37:35,840 --> 06:37:39,120
for example the mighty ducks are uh

5938
06:37:39,120 --> 06:37:40,718
attaching the debugger

5939
06:37:40,718 --> 06:37:41,920
in the vm

5940
06:37:41,920 --> 06:37:42,958
and i keep seeing all these like

5941
06:37:42,958 --> 06:37:44,878
permission errors that just like blow

5942
06:37:44,878 --> 06:37:45,920
through they're

5943
06:37:45,920 --> 06:37:47,920
blowing by them so quickly

5944
06:37:47,920 --> 06:37:48,878
yep

5945
06:37:48,878 --> 06:37:52,958
so you can see here mmm

5946
06:37:52,958 --> 06:37:55,600
running the program did oh they're just

5947
06:37:55,600 --> 06:37:58,160
deleting their data database

5948
06:37:58,160 --> 06:38:00,718
oh having started cooling issues maybe

5949
06:38:00,718 --> 06:38:02,478
yeah i'm not sure if and yeah they're

5950
06:38:02,478 --> 06:38:03,680
restarting the debugger they had

5951
06:38:03,680 --> 06:38:05,520
problems with the debugger

5952
06:38:05,520 --> 06:38:06,718
and

5953
06:38:06,718 --> 06:38:09,120
man so fast

5954
06:38:09,120 --> 06:38:11,840
okay new new rule we need a genmo mode

5955
06:38:11,840 --> 06:38:13,760
on the stream it just slows it down

5956
06:38:13,760 --> 06:38:15,440
that's right that's right all it does is

5957
06:38:15,440 --> 06:38:16,638
run it like half speed for a little bit

5958
06:38:16,638 --> 06:38:18,798
so we can kind of catch up uh to be able

5959
06:38:18,798 --> 06:38:21,280
to to to watch it that is super fun to

5960
06:38:21,280 --> 06:38:22,320
watch

5961
06:38:22,320 --> 06:38:23,680
i feel a little bit like probably what

5962
06:38:23,680 --> 06:38:25,280
like my my parents feel like when they

5963
06:38:25,280 --> 06:38:27,040
see me you know like use a tool on a

5964
06:38:27,040 --> 06:38:29,040
computer that i know well like like i

5965
06:38:29,040 --> 06:38:30,558
understand some of these concepts i i

5966
06:38:30,558 --> 06:38:31,760
think i know what they're doing but just

5967
06:38:31,760 --> 06:38:34,400
trying to follow the specifics can be

5968
06:38:34,400 --> 06:38:35,920
it can be challenging oh it's crazy

5969
06:38:35,920 --> 06:38:37,760
sometimes you just like you just sit

5970
06:38:37,760 --> 06:38:41,760
back and enjoy the ride here

5971
06:38:45,360 --> 06:38:46,718
yes

5972
06:38:46,718 --> 06:38:49,440
so again working with either debugger

5973
06:38:49,440 --> 06:38:51,840
um

5974
06:38:52,718 --> 06:38:56,478
it would be interesting to like try to

5975
06:38:56,958 --> 06:38:58,558
you know gauge the the progress of the

5976
06:38:58,558 --> 06:39:00,320
players here but it's it's kind of it's

5977
06:39:00,320 --> 06:39:01,440
really difficult

5978
06:39:01,440 --> 06:39:03,680
now i will say okay we should absolutely

5979
06:39:03,680 --> 06:39:05,440
i think we're we knew what time we

5980
06:39:05,440 --> 06:39:06,718
started it was only maybe five minutes

5981
06:39:06,718 --> 06:39:08,558
later yeah so i think we're about 32

5982
06:39:08,558 --> 06:39:09,920
minutes into it so now it's definitely

5983
06:39:09,920 --> 06:39:12,080
hint territory yep um

5984
06:39:12,080 --> 06:39:13,920
if we want to try to give him a hint

5985
06:39:13,920 --> 06:39:14,878
um

5986
06:39:14,878 --> 06:39:17,680
so let's let's see if uh we can come up

5987
06:39:17,680 --> 06:39:19,200
with a good hint

5988
06:39:19,200 --> 06:39:21,120
um for this particular one and i think

5989
06:39:21,120 --> 06:39:23,360
the author is actually over there now so

5990
06:39:23,360 --> 06:39:25,520
yeah so maybe uh production can work

5991
06:39:25,520 --> 06:39:27,200
with the that's i think that's happening

5992
06:39:27,200 --> 06:39:27,920
over there i think that's what they're

5993
06:39:27,920 --> 06:39:30,160
doing okay see if we can come up with a

5994
06:39:30,160 --> 06:39:33,440
good a good hint for it that that we can

5995
06:39:33,440 --> 06:39:34,718
give amounts

5996
06:39:34,718 --> 06:39:38,000
and let me prepare our fancy hint system

5997
06:39:38,000 --> 06:39:40,240
otherwise known as a piece of paper that

5998
06:39:40,240 --> 06:39:42,080
we write hint on and we split into and

5999
06:39:42,080 --> 06:39:44,400
write the same message to both teams yes

6000
06:39:44,400 --> 06:39:46,160
you know i had uh i've been building

6001
06:39:46,160 --> 06:39:47,360
some of the infrastructure here and i

6002
06:39:47,360 --> 06:39:48,798
had like some you know interesting ideas

6003
06:39:48,798 --> 06:39:50,718
for oh how can we like send a message to

6004
06:39:50,718 --> 06:39:52,000
both the players at the same time and

6005
06:39:52,000 --> 06:39:54,080
that you know in the end we didn't have

6006
06:39:54,080 --> 06:39:55,680
time and it's like yeah let's do paper

6007
06:39:55,680 --> 06:39:58,000
slips but the challenge deployment the

6008
06:39:58,000 --> 06:39:59,840
solution that that stuff is working

6009
06:39:59,840 --> 06:40:02,160
which is right the main you know we went

6010
06:40:02,160 --> 06:40:03,520
for uh

6011
06:40:03,520 --> 06:40:04,478
the

6012
06:40:04,478 --> 06:40:07,440
the most uh important stuff first right

6013
06:40:07,440 --> 06:40:09,600
and then uh you know we can see uh

6014
06:40:09,600 --> 06:40:11,360
in future iterations of this what kind

6015
06:40:11,360 --> 06:40:13,200
of like extra stuff how we can improve

6016
06:40:13,200 --> 06:40:14,400
this uh

6017
06:40:14,400 --> 06:40:16,478
and uh you know like if you uh viewers

6018
06:40:16,478 --> 06:40:18,080
you know if you have any suggestions for

6019
06:40:18,080 --> 06:40:18,878
uh

6020
06:40:18,878 --> 06:40:20,478
how you know how you think this could be

6021
06:40:20,478 --> 06:40:22,240
improved further uh feel free to like

6022
06:40:22,240 --> 06:40:24,798
post it in the chat or like at us at on

6023
06:40:24,798 --> 06:40:27,120
twitter we have a live ctf twitter

6024
06:40:27,120 --> 06:40:28,718
account um

6025
06:40:28,718 --> 06:40:30,080
where we've been posting a little bit oh

6026
06:40:30,080 --> 06:40:31,040
yeah i don't think we actually put it on

6027
06:40:31,040 --> 06:40:34,240
the page because it's at livectf uh

6028
06:40:34,240 --> 06:40:36,080
org i think right yeah i think it's

6029
06:40:36,080 --> 06:40:38,878
actually at livectf.org yes um if i'm

6030
06:40:38,878 --> 06:40:40,878
remembering correctly

6031
06:40:40,878 --> 06:40:42,160
but i'm actually gonna go over and talk

6032
06:40:42,160 --> 06:40:43,920
to production real quick and get to that

6033
06:40:43,920 --> 06:40:46,798
i'll uh keep going here we're gonna go

6034
06:40:46,798 --> 06:40:48,478
over to shellfish because i saw some

6035
06:40:48,478 --> 06:40:50,878
more sweet fussing action and we always

6036
06:40:50,878 --> 06:40:52,798
want an in on that

6037
06:40:52,798 --> 06:40:55,200
um so they're looking into the crashes

6038
06:40:55,200 --> 06:40:56,878
we can see here that they are

6039
06:40:56,878 --> 06:40:58,958
uh wanting to iterate through all their

6040
06:40:58,958 --> 06:41:02,718
crash examples and kind of try to see uh

6041
06:41:02,718 --> 06:41:04,240
i'm just testing them out i think and

6042
06:41:04,240 --> 06:41:05,600
seeing how if they can recreate the

6043
06:41:05,600 --> 06:41:08,080
crashes

6044
06:41:08,080 --> 06:41:10,718
it's uh

6045
06:41:10,798 --> 06:41:12,958
uh yeah you can see here and then trying

6046
06:41:12,958 --> 06:41:15,280
to run a crash they had the wrong

6047
06:41:15,280 --> 06:41:16,638
uh file

6048
06:41:16,638 --> 06:41:18,478
sorry they're wrong a path to the

6049
06:41:18,478 --> 06:41:20,400
example

6050
06:41:20,400 --> 06:41:23,040
trying to get all their files sorted out

6051
06:41:23,040 --> 06:41:26,240
you know which which one is where

6052
06:41:26,240 --> 06:41:29,200
uh but here they had a uh

6053
06:41:29,200 --> 06:41:32,478
you know a systematic assertion

6054
06:41:32,478 --> 06:41:35,520
uh so this has caused the crash uh

6055
06:41:35,520 --> 06:41:36,798
you know

6056
06:41:36,798 --> 06:41:38,478
but here's another one it's a seeker

6057
06:41:38,478 --> 06:41:40,000
board

6058
06:41:40,000 --> 06:41:42,000
uh there's a

6059
06:41:42,000 --> 06:41:44,478
pop ebp instruction that tried to do

6060
06:41:44,478 --> 06:41:46,798
something that it shouldn't and we had a

6061
06:41:46,798 --> 06:41:49,040
crash on that

6062
06:41:49,040 --> 06:41:50,320
so that's a little bit what's going on

6063
06:41:50,320 --> 06:41:51,760
in the fusion so let's go ahead and

6064
06:41:51,760 --> 06:41:53,760
bring up uh the full screen view like

6065
06:41:53,760 --> 06:41:55,920
the actual true full screen yeah we're

6066
06:41:55,920 --> 06:41:57,680
gonna go up each of the teams just for a

6067
06:41:57,680 --> 06:41:58,798
second

6068
06:41:58,798 --> 06:42:00,478
uh

6069
06:42:00,478 --> 06:42:01,840
clean view there we go so we're gonna

6070
06:42:01,840 --> 06:42:04,000
pull this in this is actually to let our

6071
06:42:04,000 --> 06:42:05,760
our production crew

6072
06:42:05,760 --> 06:42:08,638
a little bit more easily uh hone in on

6073
06:42:08,638 --> 06:42:11,040
on these these saw scripts and

6074
06:42:11,040 --> 06:42:12,718
we've got the challenge author behind

6075
06:42:12,718 --> 06:42:14,320
the scenes who's going to look at it and

6076
06:42:14,320 --> 06:42:16,320
see if there's a good hint that we can

6077
06:42:16,320 --> 06:42:17,840
give just to make sure we we know where

6078
06:42:17,840 --> 06:42:20,160
teams are at yeah again i

6079
06:42:20,160 --> 06:42:21,680
i have less of a

6080
06:42:21,680 --> 06:42:23,040
awareness of this one too so i don't

6081
06:42:23,040 --> 06:42:24,400
know what the what the answer is either

6082
06:42:24,400 --> 06:42:25,760
we'll find out

6083
06:42:25,760 --> 06:42:27,360
um or it may be that they're just really

6084
06:42:27,360 --> 06:42:28,400
close and we just let them go and

6085
06:42:28,400 --> 06:42:29,920
they're gonna you know this is this is

6086
06:42:29,920 --> 06:42:31,360
one of those where i'm

6087
06:42:31,360 --> 06:42:33,040
at any moment we can solve and i would

6088
06:42:33,040 --> 06:42:35,920
have i really don't know i can't tell

6089
06:42:35,920 --> 06:42:37,840
uh certainly if we get something like

6090
06:42:37,840 --> 06:42:38,878
you know we can see a function point

6091
06:42:38,878 --> 06:42:40,240
over right we might get a hint like last

6092
06:42:40,240 --> 06:42:41,440
time

6093
06:42:41,440 --> 06:42:43,680
uh but

6094
06:42:43,680 --> 06:42:44,718
they certainly don't look like they're

6095
06:42:44,718 --> 06:42:46,638
out of ideas in terms of what they're

6096
06:42:46,638 --> 06:42:48,878
doing i just don't know if

6097
06:42:48,878 --> 06:42:51,200
so they've got a pointer to free

6098
06:42:51,200 --> 06:42:54,160
calculating offsets

6099
06:42:57,120 --> 06:42:58,320
i you could see something exciting

6100
06:42:58,320 --> 06:43:00,478
what's it called make jump the make

6101
06:43:00,478 --> 06:43:03,040
immediate make immediate okay

6102
06:43:03,040 --> 06:43:04,478
so uh

6103
06:43:04,478 --> 06:43:06,400
trying to

6104
06:43:06,400 --> 06:43:08,240
put the value what was the address that

6105
06:43:08,240 --> 06:43:10,558
we're looking at uh the address was the

6106
06:43:10,558 --> 06:43:13,440
the relative offset of free i believe

6107
06:43:13,440 --> 06:43:15,120
okay um

6108
06:43:15,120 --> 06:43:17,280
from from the base it looked like what

6109
06:43:17,280 --> 06:43:19,440
they were what they were calculating

6110
06:43:19,440 --> 06:43:21,360
so i think that's what what the mighty

6111
06:43:21,360 --> 06:43:24,400
ducks are doing

6112
06:43:24,798 --> 06:43:27,120
yeah here minus the address right so

6113
06:43:27,120 --> 06:43:29,120
calculating

6114
06:43:29,120 --> 06:43:30,718
offset calculation

6115
06:43:30,718 --> 06:43:32,000
actually used i use that actually in

6116
06:43:32,000 --> 06:43:34,638
binary a lot the whole like here uh

6117
06:43:34,638 --> 06:43:35,600
property

6118
06:43:35,600 --> 06:43:37,520
uh which it has as a function but the

6119
06:43:37,520 --> 06:43:38,718
same kind of thing that you can just

6120
06:43:38,718 --> 06:43:39,840
save the current address navigate

6121
06:43:39,840 --> 06:43:40,798
somewhere else and calculate the

6122
06:43:40,798 --> 06:43:42,478
difference between the two

6123
06:43:42,478 --> 06:43:44,400
uh really really trivially just kind of

6124
06:43:44,400 --> 06:43:45,840
up enter

6125
06:43:45,840 --> 06:43:48,000
so let's go ahead and see that was

6126
06:43:48,000 --> 06:43:50,080
uh one of our players let's switch over

6127
06:43:50,080 --> 06:43:53,120
to the shellfish uh yup full one

6128
06:43:53,120 --> 06:43:54,718
and take a look at what their solution

6129
06:43:54,718 --> 06:43:56,798
is too and then i'll go back and as as

6130
06:43:56,798 --> 06:43:58,400
you kind of keep an eye on these two

6131
06:43:58,400 --> 06:43:59,840
i'll i'll check with production see what

6132
06:43:59,840 --> 06:44:01,600
we're thinking on him yes so here we see

6133
06:44:01,600 --> 06:44:03,760
a whole lot of null bites from uh

6134
06:44:03,760 --> 06:44:04,798
shellfish

6135
06:44:04,798 --> 06:44:07,600
in the debugger they're inspecting this

6136
06:44:07,600 --> 06:44:10,798
failed assertion in the in the heap

6137
06:44:10,798 --> 06:44:13,200
trying to figure out like exactly

6138
06:44:13,200 --> 06:44:15,200
what kind of thing was corrupted what

6139
06:44:15,200 --> 06:44:17,280
they're like can control

6140
06:44:17,280 --> 06:44:20,399
and how to work with that

6141
06:44:21,920 --> 06:44:23,600
it looks like they're using this

6142
06:44:23,600 --> 06:44:25,360
function called heap info

6143
06:44:25,360 --> 06:44:27,920
so it's printing out so these like uh

6144
06:44:27,920 --> 06:44:29,680
metadata structures i was talking about

6145
06:44:29,680 --> 06:44:32,240
earlier within the uh

6146
06:44:32,240 --> 06:44:35,040
allocators you have uh some utilities

6147
06:44:35,040 --> 06:44:36,558
here to like parse those and kind of

6148
06:44:36,558 --> 06:44:39,600
like display the different uh lists and

6149
06:44:39,600 --> 06:44:42,478
stacks and stuff that

6150
06:44:42,558 --> 06:44:44,558
the allocator itself is making use of

6151
06:44:44,558 --> 06:44:46,080
and you can then use that to see like

6152
06:44:46,080 --> 06:44:48,718
what what here can i maybe like corrupt

6153
06:44:48,718 --> 06:44:50,320
or what values have i been able to

6154
06:44:50,320 --> 06:44:53,320
control

6155
06:44:53,440 --> 06:44:54,478
so

6156
06:44:54,478 --> 06:44:57,600
yeah that's

6157
06:44:58,240 --> 06:45:01,120
what's going on there

6158
06:45:01,280 --> 06:45:02,878
and we can see again you know they're

6159
06:45:02,878 --> 06:45:04,240
trying different things over and over

6160
06:45:04,240 --> 06:45:06,080
again making small adjustments running

6161
06:45:06,080 --> 06:45:07,040
it again

6162
06:45:07,040 --> 06:45:08,878
putting some break points in the malloc

6163
06:45:08,878 --> 06:45:10,798
and free functions to try to figure out

6164
06:45:10,798 --> 06:45:13,280
when things are allocated and freed up

6165
06:45:13,280 --> 06:45:14,958
again

6166
06:45:14,958 --> 06:45:15,840
so

6167
06:45:15,840 --> 06:45:17,360
this is important to like see the order

6168
06:45:17,360 --> 06:45:19,520
of operation that's going on within your

6169
06:45:19,520 --> 06:45:22,798
and that this corresponds to

6170
06:45:22,798 --> 06:45:23,920
your

6171
06:45:23,920 --> 06:45:25,520
uh you know exploit script and what

6172
06:45:25,520 --> 06:45:26,718
you're trying to do and that that's

6173
06:45:26,718 --> 06:45:30,000
actually happening in your

6174
06:45:32,000 --> 06:45:33,440
program in the debugger that you see

6175
06:45:33,440 --> 06:45:36,557
those actions happening

6176
06:45:37,360 --> 06:45:39,600
so

6177
06:45:40,958 --> 06:45:43,600
sorry about that

6178
06:45:44,958 --> 06:45:46,000
yeah

6179
06:45:46,000 --> 06:45:48,400
it's uh

6180
06:45:48,400 --> 06:45:51,120
so that's what's going on with shellfish

6181
06:45:51,120 --> 06:45:54,000
uh we can try to switch back to

6182
06:45:54,000 --> 06:45:56,798
mmm again but uh

6183
06:45:56,798 --> 06:45:57,840
you know

6184
06:45:57,840 --> 06:46:00,160
as we said before

6185
06:46:00,160 --> 06:46:02,080
it's going very fast so it's a bit

6186
06:46:02,080 --> 06:46:03,840
tricky to figure out exactly what's

6187
06:46:03,840 --> 06:46:06,000
going on but

6188
06:46:06,000 --> 06:46:07,600
you have this helper function it's

6189
06:46:07,600 --> 06:46:10,320
called make uh imm so make immediate

6190
06:46:10,320 --> 06:46:12,000
value

6191
06:46:12,000 --> 06:46:14,240
so this is used i guess to put these

6192
06:46:14,240 --> 06:46:16,558
values in somewhere in memory on an

6193
06:46:16,558 --> 06:46:17,840
appropriate

6194
06:46:17,840 --> 06:46:18,958
place

6195
06:46:18,958 --> 06:46:20,240
with the idea that these are going to be

6196
06:46:20,240 --> 06:46:21,920
used within the corruption

6197
06:46:21,920 --> 06:46:24,717
like the payload

6198
06:46:27,600 --> 06:46:29,200
so

6199
06:46:29,200 --> 06:46:30,718
you can see again they're like attaching

6200
06:46:30,718 --> 06:46:32,958
the debugger using the id

6201
06:46:32,958 --> 06:46:34,558
haida

6202
06:46:34,558 --> 06:46:38,000
uh debugger to analyze this program and

6203
06:46:38,000 --> 06:46:40,080
modifying their their oh we can see now

6204
06:46:40,080 --> 06:46:42,320
they're putting their uh

6205
06:46:42,320 --> 06:46:43,200
uh

6206
06:46:43,200 --> 06:46:44,638
sh

6207
06:46:44,638 --> 06:46:46,718
uh oh oh that looks like they have uh oh

6208
06:46:46,718 --> 06:46:48,638
my god let's see do they have a working

6209
06:46:48,638 --> 06:46:50,638
uh that looked like a shell they're

6210
06:46:50,638 --> 06:46:52,718
copying the ipm port we might see them

6211
06:46:52,718 --> 06:46:54,878
going for a solution here uh they they

6212
06:46:54,878 --> 06:46:56,320
are they have a remote expect working

6213
06:46:56,320 --> 06:46:58,558
they're running the submitter and

6214
06:46:58,558 --> 06:47:00,558
they need to run it yes there they have

6215
06:47:00,558 --> 06:47:03,440
it they are winning

6216
06:47:04,160 --> 06:47:06,240
that's impressive we have a win from gmo

6217
06:47:06,240 --> 06:47:08,000
from mmm they won the match really

6218
06:47:08,000 --> 06:47:09,600
impressive performance

6219
06:47:09,600 --> 06:47:12,718
uh really great by both the players

6220
06:47:12,718 --> 06:47:14,240
uh

6221
06:47:14,240 --> 06:47:16,160
this was a

6222
06:47:16,160 --> 06:47:18,958
really impressive match to see

6223
06:47:18,958 --> 06:47:21,440
we will be going to an intermission uh

6224
06:47:21,440 --> 06:47:23,440
as i said check out live overflow stream

6225
06:47:23,440 --> 06:47:26,320
if it's doing a recap we will be back on

6226
06:47:26,320 --> 06:47:28,470
the hour so in about 15 minutes

6227
06:47:28,470 --> 06:47:32,638
[Applause]

6228
06:47:32,638 --> 06:47:37,239
yeah i'll see you in a bit

6229
06:47:37,710 --> 06:47:43,290
[Music]

6230
06:47:43,680 --> 06:47:44,870
so

6231
06:47:44,870 --> 06:48:44,529
[Music]

6232
06:48:47,330 --> 06:48:54,229
[Music]

6233
06:48:58,310 --> 06:49:39,470
[Music]

6234
06:49:49,410 --> 06:49:52,439
[Music]

6235
06:50:00,440 --> 06:50:03,640
[Music]

6236
06:50:06,638 --> 06:50:09,638
so

6237
06:50:10,590 --> 06:50:41,330
[Music]

6238
06:50:43,960 --> 06:50:47,440
[Music]

6239
06:50:47,440 --> 06:50:48,750
so

6240
06:50:48,750 --> 06:50:59,220
[Music]

6241
06:51:00,080 --> 06:51:03,080
so

6242
06:51:12,170 --> 06:51:40,339
[Music]

6243
06:51:45,520 --> 06:52:04,080
[Music]

6244
06:52:07,330 --> 06:52:20,590
[Music]

6245
06:52:23,600 --> 06:52:26,940
[Music]

6246
06:52:34,680 --> 06:52:39,200
[Music]

6247
06:52:39,200 --> 06:52:41,210
so

6248
06:52:41,210 --> 06:52:52,718
[Music]

6249
06:52:52,718 --> 06:52:55,718
so

6250
06:52:55,860 --> 06:53:05,529
[Music]

6251
06:53:06,240 --> 06:53:07,570
so

6252
06:53:07,570 --> 06:53:14,259
[Music]

6253
06:53:16,390 --> 06:54:02,389
[Music]

6254
06:54:03,120 --> 06:54:06,120
so

6255
06:54:07,520 --> 06:54:17,280
[Music]

6256
06:54:17,280 --> 06:54:20,280
so

6257
06:54:22,220 --> 06:54:26,600
[Music]

6258
06:54:26,600 --> 06:54:26,980
[Applause]

6259
06:54:26,980 --> 06:54:32,878
[Music]

6260
06:54:32,878 --> 06:54:35,878
so

6261
06:54:43,570 --> 06:55:15,630
[Music]

6262
06:55:18,110 --> 06:56:15,639
[Music]

6263
06:56:17,840 --> 06:57:17,570
[Music]

6264
06:57:21,740 --> 06:58:18,160
[Music]

6265
06:58:18,160 --> 06:58:20,210
so

6266
06:58:20,210 --> 06:59:20,019
[Music]

6267
06:59:34,610 --> 06:59:42,639
[Music]

6268
06:59:46,430 --> 06:59:52,560
[Music]

6269
06:59:56,390 --> 06:59:59,470
[Music]

6270
07:00:04,200 --> 07:00:07,490
[Music]

6271
07:00:10,360 --> 07:00:35,639
[Music]

6272
07:00:36,160 --> 07:00:37,770
so

6273
07:00:37,770 --> 07:01:02,900
[Music]

6274
07:01:03,360 --> 07:01:06,360
so

6275
07:01:07,280 --> 07:01:12,469
[Music]

6276
07:01:16,480 --> 07:01:19,560
[Music]

6277
07:01:21,950 --> 07:01:27,140
[Music]

6278
07:01:37,000 --> 07:01:57,310
[Music]

6279
07:02:00,690 --> 07:02:11,369
[Music]

6280
07:02:15,620 --> 07:02:26,159
[Music]

6281
07:02:28,350 --> 07:02:39,779
[Music]

6282
07:02:46,920 --> 07:02:58,240
[Music]

6283
07:02:58,240 --> 07:03:00,240
hello everyone and welcome back to live

6284
07:03:00,240 --> 07:03:02,400
ctf we are in

6285
07:03:02,400 --> 07:03:05,440
round two match three of four we have

6286
07:03:05,440 --> 07:03:07,920
only one more uh left in this round

6287
07:03:07,920 --> 07:03:10,320
and uh we have let's get the countdown

6288
07:03:10,320 --> 07:03:11,360
right away let's let the team get going

6289
07:03:11,360 --> 07:03:12,080
and then we'll do the rest of the

6290
07:03:12,080 --> 07:03:14,718
explanation of what's going on so five

6291
07:03:14,718 --> 07:03:16,558
four three

6292
07:03:16,558 --> 07:03:17,440
two

6293
07:03:17,440 --> 07:03:20,557
one go

6294
07:03:20,798 --> 07:03:22,160
well i'm trying to clap nobody's gonna

6295
07:03:22,160 --> 07:03:24,558
clap yet oh so uh welcome back everyone

6296
07:03:24,558 --> 07:03:27,120
carl is not with me but i do have falk

6297
07:03:27,120 --> 07:03:30,000
on the line you might know him as gamozo

6298
07:03:30,000 --> 07:03:31,680
yeah so we don't have video for our

6299
07:03:31,680 --> 07:03:33,280
guest commentators i apologize everyone

6300
07:03:33,280 --> 07:03:34,160
for that

6301
07:03:34,160 --> 07:03:35,200
but that's fine because you'll see our

6302
07:03:35,200 --> 07:03:36,798
video anyways we're gonna be looking at

6303
07:03:36,798 --> 07:03:38,478
the teams most of the time

6304
07:03:38,478 --> 07:03:40,638
uh folk why don't you uh tell people

6305
07:03:40,638 --> 07:03:42,000
like where they may have seen you before

6306
07:03:42,000 --> 07:03:43,360
or what you like because you're uh you

6307
07:03:43,360 --> 07:03:44,558
know i think you're pretty popular at

6308
07:03:44,558 --> 07:03:45,440
this point

6309
07:03:45,440 --> 07:03:48,080
yeah apparently i am so my name is folk

6310
07:03:48,080 --> 07:03:50,160
i go by gamoza i stream on twitch i

6311
07:03:50,160 --> 07:03:52,160
stream random hacking things and i'm

6312
07:03:52,160 --> 07:03:54,400
super excited to be here and looking at

6313
07:03:54,400 --> 07:03:57,280
some ctf action it's been uh

6314
07:03:57,280 --> 07:03:59,040
maybe five or seven years since i've

6315
07:03:59,040 --> 07:04:01,920
done a ctf so i can't wait to see uh see

6316
07:04:01,920 --> 07:04:03,840
what the new state of the art is up to

6317
07:04:03,840 --> 07:04:05,280
well and and you were one of the

6318
07:04:05,280 --> 07:04:06,958
original people on a live ctf like i

6319
07:04:06,958 --> 07:04:08,400
think one of the very first ones with

6320
07:04:08,400 --> 07:04:09,840
geohi

6321
07:04:09,840 --> 07:04:11,120
was that when i

6322
07:04:11,120 --> 07:04:13,200
went heads up against geohot and he

6323
07:04:13,200 --> 07:04:15,360
completely slaughtered me you did it was

6324
07:04:15,360 --> 07:04:16,878
there was a little smack talk there was

6325
07:04:16,878 --> 07:04:19,040
some serious smack talk i watched it

6326
07:04:19,040 --> 07:04:20,160
yeah i was there when it was being set

6327
07:04:20,160 --> 07:04:21,920
up i think it was fantastic uh we all

6328
07:04:21,920 --> 07:04:23,840
had a lot of fun so oh another binge

6329
07:04:23,840 --> 07:04:25,360
user i'm so excited all right hold on we

6330
07:04:25,360 --> 07:04:26,798
got to go to let's go let's take a look

6331
07:04:26,798 --> 07:04:28,958
at sour cloud source cloud is one of our

6332
07:04:28,958 --> 07:04:30,798
binger users who made it on so of course

6333
07:04:30,798 --> 07:04:32,400
i'm gonna go check out their their

6334
07:04:32,400 --> 07:04:33,600
screen first

6335
07:04:33,600 --> 07:04:34,478
um

6336
07:04:34,478 --> 07:04:36,638
but uh this this particular challenge i

6337
07:04:36,638 --> 07:04:39,440
believe this was uh pac-man correct

6338
07:04:39,440 --> 07:04:41,360
so folk if i told you the challenge was

6339
07:04:41,360 --> 07:04:44,558
called pac-man p-a-c m-a-n

6340
07:04:44,558 --> 07:04:46,000
does that like what what do you think

6341
07:04:46,000 --> 07:04:47,680
about what you get is this is this an

6342
07:04:47,680 --> 07:04:49,600
arch linux by the way it's not arch

6343
07:04:49,600 --> 07:04:51,600
linux no pack isn't a package manager

6344
07:04:51,600 --> 07:04:54,160
that's that's one reasonable guess

6345
07:04:54,160 --> 07:04:56,240
what else oh it is a package manager i

6346
07:04:56,240 --> 07:04:58,478
see okay well at least according to that

6347
07:04:58,478 --> 07:05:01,200
was that a was that a windows

6348
07:05:01,200 --> 07:05:03,120
uh like like legacy theme looking at

6349
07:05:03,120 --> 07:05:05,600
that vm there is a yes there i saw that

6350
07:05:05,600 --> 07:05:06,878
too i don't know what's going on with

6351
07:05:06,878 --> 07:05:09,280
that one that has to be windows 7 right

6352
07:05:09,280 --> 07:05:10,718
that's their preferred hacking platform

6353
07:05:10,718 --> 07:05:11,760
i presume

6354
07:05:11,760 --> 07:05:14,160
but i mean yeah i mean it so if you

6355
07:05:14,160 --> 07:05:15,680
don't have mitigations on the host then

6356
07:05:15,680 --> 07:05:17,600
it makes it easier to to test your stuff

6357
07:05:17,600 --> 07:05:19,600
i guess it it is a package manager but

6358
07:05:19,600 --> 07:05:22,240
it's sorry it's also it is also a pun on

6359
07:05:22,240 --> 07:05:25,520
on it's an arm binary so oh

6360
07:05:25,520 --> 07:05:26,400
okay

6361
07:05:26,400 --> 07:05:29,680
arch has pack instructions so i i think

6362
07:05:29,680 --> 07:05:31,360
at least it's meant to be like a planned

6363
07:05:31,360 --> 07:05:33,520
workout no i see i don't know if it's

6364
07:05:33,520 --> 07:05:36,160
not it's not actual pack but there is a

6365
07:05:36,160 --> 07:05:37,520
pac-like

6366
07:05:37,520 --> 07:05:39,520
thing that they're going to encounter

6367
07:05:39,520 --> 07:05:41,680
okay i already saw the i already saw the

6368
07:05:41,680 --> 07:05:44,160
manual coming up for arm which is always

6369
07:05:44,160 --> 07:05:45,440
a good sign it looked like they were

6370
07:05:45,440 --> 07:05:47,360
looking up the intrinsic which is

6371
07:05:47,360 --> 07:05:48,558
interesting that means they must be

6372
07:05:48,558 --> 07:05:50,000
looking at the

6373
07:05:50,000 --> 07:05:51,840
uh il or the decompilation i can't

6374
07:05:51,840 --> 07:05:54,080
remember which window i saw that in yeah

6375
07:05:54,080 --> 07:05:56,080
uh yeah if the the intrinsic is coming

6376
07:05:56,080 --> 07:05:57,120
up it's something that binder ninja's

6377
07:05:57,120 --> 07:05:58,638
not actually handling so it's just gonna

6378
07:05:58,638 --> 07:06:00,240
just gonna show oh my my glasses on no

6379
07:06:00,240 --> 07:06:01,200
one right i can't see their screens

6380
07:06:01,200 --> 07:06:02,558
there we go

6381
07:06:02,558 --> 07:06:04,320
that helps oh and so we got so just yeah

6382
07:06:04,320 --> 07:06:05,680
to give you a little bit of context uh

6383
07:06:05,680 --> 07:06:07,440
so and to catch up our audience as well

6384
07:06:07,440 --> 07:06:08,558
who may not have been been watching

6385
07:06:08,558 --> 07:06:10,878
previously these are like real fast

6386
07:06:10,878 --> 07:06:12,080
matches right these are meant to be

6387
07:06:12,080 --> 07:06:15,520
speed matches uh this challenge

6388
07:06:15,520 --> 07:06:17,120
uh might be one of the bigger ones so

6389
07:06:17,120 --> 07:06:18,478
there's this is the challenge that we

6390
07:06:18,478 --> 07:06:20,000
like there's a there's a non-zero chance

6391
07:06:20,000 --> 07:06:22,000
we go to sudden death on this one uh

6392
07:06:22,000 --> 07:06:23,360
because the idea is that every round has

6393
07:06:23,360 --> 07:06:26,000
to like basically keep within an hour

6394
07:06:26,000 --> 07:06:27,840
um because we have just so many of these

6395
07:06:27,840 --> 07:06:30,958
things to do and so if the teams don't

6396
07:06:30,958 --> 07:06:33,760
solve it in like 45-15 minutes we go to

6397
07:06:33,760 --> 07:06:35,200
like this sudden death

6398
07:06:35,200 --> 07:06:37,360
totally simple simple binary like

6399
07:06:37,360 --> 07:06:39,040
separate binary we replace the original

6400
07:06:39,040 --> 07:06:40,638
one and say changed it go

6401
07:06:40,638 --> 07:06:43,280
uh so we hope and so far we've made it

6402
07:06:43,280 --> 07:06:44,958
through a whole bunch of rounds and

6403
07:06:44,958 --> 07:06:46,240
nobody we haven't had to use the sudden

6404
07:06:46,240 --> 07:06:47,360
death yet

6405
07:06:47,360 --> 07:06:49,200
uh so it's it's a good trend we'd like

6406
07:06:49,200 --> 07:06:51,200
to continue oh wait uh psych faults uh

6407
07:06:51,200 --> 07:06:52,400
that's the wrong kind of segfault

6408
07:06:52,400 --> 07:06:53,840
they're trying to run

6409
07:06:53,840 --> 07:06:57,600
kimu and kimi is just dying okay

6410
07:06:57,600 --> 07:06:59,600
although i'm glad i have uh i have folk

6411
07:06:59,600 --> 07:07:01,040
on the line because you've done i would

6412
07:07:01,040 --> 07:07:03,360
say a little bit with emulation uh as

6413
07:07:03,360 --> 07:07:04,638
probably

6414
07:07:04,638 --> 07:07:06,958
here there it whenever it's a solution

6415
07:07:06,958 --> 07:07:08,240
to a problem

6416
07:07:08,240 --> 07:07:09,680
it seems to me though that you often

6417
07:07:09,680 --> 07:07:11,360
find it as a solution to many problems

6418
07:07:11,360 --> 07:07:13,040
more so than most people

6419
07:07:13,040 --> 07:07:15,520
i i think at this point i just enjoy it

6420
07:07:15,520 --> 07:07:17,760
so i think i just bend the work to it i

6421
07:07:17,760 --> 07:07:19,360
don't know if i'm always using it

6422
07:07:19,360 --> 07:07:21,360
correctly or if i'm just justifying my

6423
07:07:21,360 --> 07:07:22,958
existence but i mean if it gets the job

6424
07:07:22,958 --> 07:07:24,718
done and you know if

6425
07:07:24,718 --> 07:07:25,920
everything you have is a hammer then

6426
07:07:25,920 --> 07:07:27,200
everything looks like a nail right like

6427
07:07:27,200 --> 07:07:28,400
that's uh

6428
07:07:28,400 --> 07:07:29,760
and and i will say you have solved some

6429
07:07:29,760 --> 07:07:31,040
really really fun problems with it so if

6430
07:07:31,040 --> 07:07:32,638
people have not watched your twitch uh

6431
07:07:32,638 --> 07:07:34,558
and or even some of your your

6432
07:07:34,558 --> 07:07:35,760
check out your github repo or your

6433
07:07:35,760 --> 07:07:37,440
youtube uh videos

6434
07:07:37,440 --> 07:07:39,360
uh they just absolutely should because

6435
07:07:39,360 --> 07:07:41,280
you do some fantastic stuff

6436
07:07:41,280 --> 07:07:42,878
uh so we've got some interesting things

6437
07:07:42,878 --> 07:07:44,478
we're trying to just get this binary up

6438
07:07:44,478 --> 07:07:46,320
and running in kimu it looks like from

6439
07:07:46,320 --> 07:07:47,760
r3k

6440
07:07:47,760 --> 07:07:49,040
yes i don't know if that's how you say

6441
07:07:49,040 --> 07:07:51,680
them recognize okay wreck-a-pig is the

6442
07:07:51,680 --> 07:07:52,798
team name

6443
07:07:52,798 --> 07:07:55,280
wreck-it pig becca pig yeah so the ease

6444
07:07:55,280 --> 07:07:57,280
you know it's lately speak for for an e

6445
07:07:57,280 --> 07:07:59,440
so we've got rekha pig as that team

6446
07:07:59,440 --> 07:08:01,200
and so i think i'm trying to remember

6447
07:08:01,200 --> 07:08:03,040
which i mean obviously just even looking

6448
07:08:03,040 --> 07:08:05,760
at the the character set uh it's a it's

6449
07:08:05,760 --> 07:08:08,240
a chinese or taiwanese team

6450
07:08:08,240 --> 07:08:10,798
yeah which is pretty crazy it's it's

6451
07:08:10,798 --> 07:08:13,200
very strange i've have not seen many

6452
07:08:13,200 --> 07:08:14,878
like chinese installations of like

6453
07:08:14,878 --> 07:08:16,878
vmware workstations seeing those venues

6454
07:08:16,878 --> 07:08:18,558
that i'm so used to seeing yeah in a

6455
07:08:18,558 --> 07:08:20,478
different language is actually fantastic

6456
07:08:20,478 --> 07:08:22,638
i i love seeing that there's just

6457
07:08:22,638 --> 07:08:24,798
it's really a glance into someone else's

6458
07:08:24,798 --> 07:08:26,638
work this is i mean that's the best part

6459
07:08:26,638 --> 07:08:29,040
about the live ctf being able to see

6460
07:08:29,040 --> 07:08:31,600
different tooling different workflows

6461
07:08:31,600 --> 07:08:33,680
different yeah and we have a lot of

6462
07:08:33,680 --> 07:08:35,120
international teams at finals this year

6463
07:08:35,120 --> 07:08:37,040
so there's a whole bunch of uh of teams

6464
07:08:37,040 --> 07:08:39,360
from all over the world in fact uh sour

6465
07:08:39,360 --> 07:08:41,200
cloud uh is from germany as a

6466
07:08:41,200 --> 07:08:43,680
predominantly german team and so we've

6467
07:08:43,680 --> 07:08:47,040
got uh you know quite a quite a mix uh

6468
07:08:47,040 --> 07:08:48,400
which is which is yeah which is which is

6469
07:08:48,400 --> 07:08:50,240
pretty neat so i s

6470
07:08:50,240 --> 07:08:52,240
looking at them oh we do have it running

6471
07:08:52,240 --> 07:08:54,798
now right so if we're looking uh

6472
07:08:54,798 --> 07:08:57,200
yeah in the vm all right so they got it

6473
07:08:57,200 --> 07:08:58,718
working which and i know that teams were

6474
07:08:58,718 --> 07:09:00,000
debating

6475
07:09:00,000 --> 07:09:01,280
um

6476
07:09:01,280 --> 07:09:02,718
you know hardware emulation somebody had

6477
07:09:02,718 --> 07:09:05,040
like a little uh like um

6478
07:09:05,040 --> 07:09:06,400
beaglebone i think uh that they were

6479
07:09:06,400 --> 07:09:08,638
considering like running it on uh so

6480
07:09:08,638 --> 07:09:10,478
people were interesting so we've got

6481
07:09:10,478 --> 07:09:12,000
some sort of a little script here it

6482
07:09:12,000 --> 07:09:13,320
looks like uh

6483
07:09:13,320 --> 07:09:15,440
exploit.pie it looks to be the name of

6484
07:09:15,440 --> 07:09:17,680
it there we go yeah so we see a lot of

6485
07:09:17,680 --> 07:09:19,440
these and it's oh i missed it was that

6486
07:09:19,440 --> 07:09:20,240
one

6487
07:09:20,240 --> 07:09:21,280
um

6488
07:09:21,280 --> 07:09:23,840
calling uh pawn tools because it's

6489
07:09:23,840 --> 07:09:25,920
predominantly yeah the vast majorities

6490
07:09:25,920 --> 07:09:27,840
are all using using phone tools

6491
07:09:27,840 --> 07:09:29,600
so we're singing they're launching an

6492
07:09:29,600 --> 07:09:32,240
eric 64 or kimu instance and then

6493
07:09:32,240 --> 07:09:34,080
they're remoting into it i'm guessing

6494
07:09:34,080 --> 07:09:36,718
that's i guess they're using gdb or pwn

6495
07:09:36,718 --> 07:09:38,718
tools for that connection i'm not too

6496
07:09:38,718 --> 07:09:40,400
familiar with phone tools to be honest i

6497
07:09:40,400 --> 07:09:41,440
actually don't know how it does the

6498
07:09:41,440 --> 07:09:43,120
cross-platform stuff with with chemo

6499
07:09:43,120 --> 07:09:44,478
that's a good question i've i've also

6500
07:09:44,478 --> 07:09:46,000
not used i mean i've used pro tools but

6501
07:09:46,000 --> 07:09:48,240
but not to do that before so i'm curious

6502
07:09:48,240 --> 07:09:49,200
yeah it looks like they're trying to

6503
07:09:49,200 --> 07:09:51,360
connect in with the debugger maybe i i

6504
07:09:51,360 --> 07:09:52,798
don't know i one of the one of the

6505
07:09:52,798 --> 07:09:54,240
windows they had open was covering it up

6506
07:09:54,240 --> 07:09:55,680
so i was curious what port they were

6507
07:09:55,680 --> 07:09:58,478
using yeah well i will say both teams

6508
07:09:58,478 --> 07:10:00,160
having looked at both of them now are

6509
07:10:00,160 --> 07:10:02,558
both running it right so relatively

6510
07:10:02,558 --> 07:10:05,280
quickly we've got like them actually oh

6511
07:10:05,280 --> 07:10:06,000
by the way i don't know if you're

6512
07:10:06,000 --> 07:10:07,360
watching chat you've got some love in

6513
07:10:07,360 --> 07:10:08,478
the chat

6514
07:10:08,478 --> 07:10:11,280
people people are excited uh to have you

6515
07:10:11,280 --> 07:10:12,240
here

6516
07:10:12,240 --> 07:10:14,718
so i mean we are too we're also very

6517
07:10:14,718 --> 07:10:16,160
very excited

6518
07:10:16,160 --> 07:10:17,760
i'm excited i've got a i've got a great

6519
07:10:17,760 --> 07:10:20,240
community somehow even even though we

6520
07:10:20,240 --> 07:10:22,320
just you know just have fun and goof

6521
07:10:22,320 --> 07:10:24,400
around i i i'm very proud of my

6522
07:10:24,400 --> 07:10:26,400
community no you haven't had any drama

6523
07:10:26,400 --> 07:10:28,558
any weird issues i just i can't keep up

6524
07:10:28,558 --> 07:10:30,160
with it you're so active and you like

6525
07:10:30,160 --> 07:10:31,520
people just hang out and chill with you

6526
07:10:31,520 --> 07:10:33,040
it's it's fantastic every time i dip in

6527
07:10:33,040 --> 07:10:34,478
there and like see it it's just very

6528
07:10:34,478 --> 07:10:35,840
cheap chat wouldn't think i'm very

6529
07:10:35,840 --> 07:10:36,798
active

6530
07:10:36,798 --> 07:10:38,638
they don't they i don't know i go i go

6531
07:10:38,638 --> 07:10:41,200
through three month disappearances

6532
07:10:41,200 --> 07:10:42,878
at a time and uh but they hang around

6533
07:10:42,878 --> 07:10:44,798
for you this day still

6534
07:10:44,798 --> 07:10:46,958
i know it's crazy that's awesome all

6535
07:10:46,958 --> 07:10:49,440
right so we've still got binja up from

6536
07:10:49,440 --> 07:10:51,760
sour cloud so we're looking

6537
07:10:51,760 --> 07:10:53,760
but we are so so yeah

6538
07:10:53,760 --> 07:10:56,558
package blob so they're creating

6539
07:10:56,558 --> 07:10:58,638
uh blobs and they're looking at the

6540
07:10:58,638 --> 07:10:59,600
types of things that are built so

6541
07:10:59,600 --> 07:11:01,040
they're they're

6542
07:11:01,040 --> 07:11:03,520
i would say they're in the like find the

6543
07:11:03,520 --> 07:11:06,080
bug phase of this right so yes most of

6544
07:11:06,080 --> 07:11:07,680
our other challenges

6545
07:11:07,680 --> 07:11:09,680
i mean we had just for for flavor we had

6546
07:11:09,680 --> 07:11:11,360
some other challenges that were like

6547
07:11:11,360 --> 07:11:12,878
open any file in the file system and

6548
07:11:12,878 --> 07:11:14,320
tell us what offset to write to and so

6549
07:11:14,320 --> 07:11:16,798
people like open proxel mem and just

6550
07:11:16,798 --> 07:11:18,240
like write

6551
07:11:18,240 --> 07:11:20,240
all over it right oh wow we're even

6552
07:11:20,240 --> 07:11:22,400
naming things in here which is pretty

6553
07:11:22,400 --> 07:11:24,160
interesting i know a lot of times when i

6554
07:11:24,160 --> 07:11:25,760
would do ctfs i would not name stuff

6555
07:11:25,760 --> 07:11:28,000
yeah we have seen a fair amount of folks

6556
07:11:28,000 --> 07:11:29,600
that are actually pretty pretty diligent

6557
07:11:29,600 --> 07:11:31,200
in like creating structures even uh

6558
07:11:31,200 --> 07:11:32,718
we've seen and and actually it's really

6559
07:11:32,718 --> 07:11:34,798
trying to do a good job understand uh

6560
07:11:34,798 --> 07:11:36,400
what these things are doing oh okay i

6561
07:11:36,400 --> 07:11:37,840
did just see if we look back over in

6562
07:11:37,840 --> 07:11:40,080
sour cloud um there's just a whole bunch

6563
07:11:40,080 --> 07:11:41,600
of a's which i mean come on you gotta

6564
07:11:41,600 --> 07:11:43,520
like you gotta try it you gotta you

6565
07:11:43,520 --> 07:11:45,440
never know if it works

6566
07:11:45,440 --> 07:11:47,520
you're gonna feel really badly exactly

6567
07:11:47,520 --> 07:11:49,360
exactly if you lose the competition to

6568
07:11:49,360 --> 07:11:50,320
a's

6569
07:11:50,320 --> 07:11:51,920
that's not a good luck we actually

6570
07:11:51,920 --> 07:11:54,160
missed you last the very last round uh

6571
07:11:54,160 --> 07:11:56,400
which was a challenge uh between

6572
07:11:56,400 --> 07:11:58,878
shellfish and mmm which is basically ppp

6573
07:11:58,878 --> 07:12:01,120
and a few other teams uh the names have

6574
07:12:01,120 --> 07:12:02,878
gotten combined what does mmm stand okay

6575
07:12:02,878 --> 07:12:06,000
so the full name is maple

6576
07:12:06,000 --> 07:12:08,400
mallard magistrates because it comes

6577
07:12:08,400 --> 07:12:10,638
from a team name that was like uh maple

6578
07:12:10,638 --> 07:12:13,440
bacon i think was the canadian team uh

6579
07:12:13,440 --> 07:12:14,558
and then

6580
07:12:14,558 --> 07:12:16,000
mallard was the duck there's a team

6581
07:12:16,000 --> 07:12:16,798
called the duck and of course

6582
07:12:16,798 --> 07:12:18,638
magistrates like ppp like

6583
07:12:18,638 --> 07:12:21,840
parliamentarians magic so it's mmm

6584
07:12:21,840 --> 07:12:23,520
i call them the mighty ducks i that's

6585
07:12:23,520 --> 07:12:24,958
that's

6586
07:12:24,958 --> 07:12:27,680
just much easier to say yeah exactly

6587
07:12:27,680 --> 07:12:29,600
um we all know that people don't get to

6588
07:12:29,600 --> 07:12:31,840
decide their handles that get used no

6589
07:12:31,840 --> 07:12:33,440
it's it is given to you the best

6590
07:12:33,440 --> 07:12:36,160
nicknames are earned not yeah not claims

6591
07:12:36,160 --> 07:12:37,120
exactly

6592
07:12:37,120 --> 07:12:38,558
oh interesting so they're trying to

6593
07:12:38,558 --> 07:12:40,240
figure out the arg to open there which

6594
07:12:40,240 --> 07:12:42,080
was interesting that they they manually

6595
07:12:42,080 --> 07:12:43,440
kind of specified that arc so they're

6596
07:12:43,440 --> 07:12:44,958
trying to like fix up the database and

6597
07:12:44,958 --> 07:12:46,558
make it a little bit more

6598
07:12:46,558 --> 07:12:48,558
readable which is which is interesting

6599
07:12:48,558 --> 07:12:50,718
because i know when i watched i tuned in

6600
07:12:50,718 --> 07:12:52,160
a little bit before and i i saw like

6601
07:12:52,160 --> 07:12:53,600
people writing scripts with like one

6602
07:12:53,600 --> 07:12:55,440
letter two letter function names yeah

6603
07:12:55,440 --> 07:12:57,280
just to really really speed through

6604
07:12:57,280 --> 07:13:00,000
stuff yep we've seen we've actually seen

6605
07:13:00,000 --> 07:13:01,840
a fair amount of like fairly robust

6606
07:13:01,840 --> 07:13:03,680
primitive creation too we've seen some

6607
07:13:03,680 --> 07:13:05,200
where it's like you know

6608
07:13:05,200 --> 07:13:06,878
send whatever you know so we've seen

6609
07:13:06,878 --> 07:13:08,638
some good full descriptions like things

6610
07:13:08,638 --> 07:13:10,558
that you could post after scripts not

6611
07:13:10,558 --> 07:13:12,000
allowed unless

6612
07:13:12,000 --> 07:13:13,760
oh okay so sauerkraut just hit something

6613
07:13:13,760 --> 07:13:15,200
that says scripts not allowed unless

6614
07:13:15,200 --> 07:13:17,280
pac-man unsafe equals one

6615
07:13:17,280 --> 07:13:18,478
is that some sort of environment

6616
07:13:18,478 --> 07:13:20,320
variable it looked like yeah now that

6617
07:13:20,320 --> 07:13:22,478
sounds super nice and if i've got a if

6618
07:13:22,478 --> 07:13:23,920
i've got the ability to create a package

6619
07:13:23,920 --> 07:13:25,680
that can run a script i've basically got

6620
07:13:25,680 --> 07:13:27,520
command injection

6621
07:13:27,520 --> 07:13:29,760
uh i would sure like to flip that so i

6622
07:13:29,760 --> 07:13:31,600
you know what like i really thought this

6623
07:13:31,600 --> 07:13:33,600
actually was arm pack

6624
07:13:33,600 --> 07:13:34,958
but maybe i may have just been

6625
07:13:34,958 --> 07:13:36,160
completely misremembering i'm not

6626
07:13:36,160 --> 07:13:38,400
wondering i was completely wrong i saw

6627
07:13:38,400 --> 07:13:41,040
some pack uh intrinsics in there

6628
07:13:41,040 --> 07:13:42,718
this is where it could be interesting

6629
07:13:42,718 --> 07:13:43,840
between

6630
07:13:43,840 --> 07:13:45,680
ida and bingham because i know binge is

6631
07:13:45,680 --> 07:13:47,040
going to show those intrinsics and i

6632
07:13:47,040 --> 07:13:48,558
don't know if ida is just gonna hide

6633
07:13:48,558 --> 07:13:50,558
those yeah yeah um

6634
07:13:50,558 --> 07:13:52,240
and that could throw someone off

6635
07:13:52,240 --> 07:13:53,680
potentially

6636
07:13:53,680 --> 07:13:55,520
in either way sometimes seeing the extra

6637
07:13:55,520 --> 07:13:57,520
info is scary and sometimes not seeing

6638
07:13:57,520 --> 07:14:00,240
it is scary you can there's no perfect

6639
07:14:00,240 --> 07:14:02,160
display that matches everyone's needs

6640
07:14:02,160 --> 07:14:03,760
right that's right that's true that's

6641
07:14:03,760 --> 07:14:04,638
why it's nice to be able to like

6642
07:14:04,638 --> 07:14:07,120
customize it or you know choose or

6643
07:14:07,120 --> 07:14:09,600
change settings so yeah i i'm one

6644
07:14:09,600 --> 07:14:11,680
actually you know what i think we should

6645
07:14:11,680 --> 07:14:13,760
probably hit an early hint on this one

6646
07:14:13,760 --> 07:14:15,120
because again this is one that i think

6647
07:14:15,120 --> 07:14:17,920
we're gonna need um to give people a

6648
07:14:17,920 --> 07:14:19,680
hint on it's one of the bigger harder

6649
07:14:19,680 --> 07:14:20,878
challenges

6650
07:14:20,878 --> 07:14:22,000
um

6651
07:14:22,000 --> 07:14:24,240
cmm copy into buff plus 20 and then i

6652
07:14:24,240 --> 07:14:27,200
see a massive access at buff plus 1028

6653
07:14:27,200 --> 07:14:28,798
so i'm guessing it's uh

6654
07:14:28,798 --> 07:14:31,120
it's a thousand hex in size so 4k in

6655
07:14:31,120 --> 07:14:33,600
size maybe an eight byte here there with

6656
07:14:33,600 --> 07:14:35,440
weird alignment stuff

6657
07:14:35,440 --> 07:14:37,920
so i'm that i mean obviously whenever

6658
07:14:37,920 --> 07:14:39,680
i'm doing a challenge if i if i see a

6659
07:14:39,680 --> 07:14:40,718
buffer

6660
07:14:40,718 --> 07:14:42,320
and it's being read into i'm just gonna

6661
07:14:42,320 --> 07:14:43,520
assume that's where the bug is in the

6662
07:14:43,520 --> 07:14:44,558
ctf

6663
07:14:44,558 --> 07:14:46,558
i mean binders are not that big here

6664
07:14:46,558 --> 07:14:48,000
right there's only so many things you

6665
07:14:48,000 --> 07:14:50,638
can do so yeah and looking at these

6666
07:14:50,638 --> 07:14:52,400
these look like they're dynamically

6667
07:14:52,400 --> 07:14:54,558
linked i see the the colorization

6668
07:14:54,558 --> 07:14:56,718
showing that those are imports for those

6669
07:14:56,718 --> 07:14:59,680
uh like standard lib libsy functions

6670
07:14:59,680 --> 07:15:00,558
and

6671
07:15:00,558 --> 07:15:02,798
they're not stripped so

6672
07:15:02,798 --> 07:15:03,920
this is

6673
07:15:03,920 --> 07:15:05,200
already a pretty good environment

6674
07:15:05,200 --> 07:15:06,958
compared to a lot of ctfs that i

6675
07:15:06,958 --> 07:15:08,240
remember where they would just strip it

6676
07:15:08,240 --> 07:15:09,600
so you have to run everything through

6677
07:15:09,600 --> 07:15:11,440
flirt sigs just yeah just to get

6678
07:15:11,440 --> 07:15:13,600
anything readable just because well it's

6679
07:15:13,600 --> 07:15:15,600
oh so it is part of it is i think

6680
07:15:15,600 --> 07:15:17,440
because you know our goal at last utf is

6681
07:15:17,440 --> 07:15:18,400
to be

6682
07:15:18,400 --> 07:15:19,840
really our aiming to be under an hour

6683
07:15:19,840 --> 07:15:21,120
and it's it's hard to make something

6684
07:15:21,120 --> 07:15:23,360
that's different unique and interesting

6685
07:15:23,360 --> 07:15:25,120
under an hour

6686
07:15:25,120 --> 07:15:26,798
and so you you have to give the the

6687
07:15:26,798 --> 07:15:28,320
players as much help as you can honestly

6688
07:15:28,320 --> 07:15:29,760
like you really we've we've given them

6689
07:15:29,760 --> 07:15:31,520
source on a couple of them or we're just

6690
07:15:31,520 --> 07:15:33,200
like listen we don't want you having to

6691
07:15:33,200 --> 07:15:34,878
decompile it like here's the here's the

6692
07:15:34,878 --> 07:15:37,680
source uh focus on like just the one

6693
07:15:37,680 --> 07:15:38,878
like interesting thing that we're trying

6694
07:15:38,878 --> 07:15:41,120
to get them to to hone in on ooh

6695
07:15:41,120 --> 07:15:43,840
sturcher oh i love starcher that's a

6696
07:15:43,840 --> 07:15:46,320
that's a fun function right there

6697
07:15:46,320 --> 07:15:48,718
searching searching randomly for in a

6698
07:15:48,718 --> 07:15:50,558
null terminated string for a character

6699
07:15:50,558 --> 07:15:54,200
with no other regards

6700
07:15:54,320 --> 07:15:55,280
um

6701
07:15:55,280 --> 07:15:56,878
definitely it seems like they took note

6702
07:15:56,878 --> 07:15:58,400
of that when they were highlighting it

6703
07:15:58,400 --> 07:16:00,160
yeah so i do like when people use their

6704
07:16:00,160 --> 07:16:01,760
mouse to like you know highlight stuff

6705
07:16:01,760 --> 07:16:02,798
and you can get a little sense of that

6706
07:16:02,798 --> 07:16:04,718
go ahead yup

6707
07:16:04,718 --> 07:16:06,878
i definitely do a lot of highlighting

6708
07:16:06,878 --> 07:16:09,760
when i'm playing around i know um i know

6709
07:16:09,760 --> 07:16:12,160
like i've always used plugins i think a

6710
07:16:12,160 --> 07:16:13,520
lot of tools now have like native

6711
07:16:13,520 --> 07:16:15,200
support for multiple highlight cursors

6712
07:16:15,200 --> 07:16:16,638
where you can just click and highlight

6713
07:16:16,638 --> 07:16:18,638
different things different colors

6714
07:16:18,638 --> 07:16:21,440
that i remember when ida added um

6715
07:16:21,440 --> 07:16:23,760
support for when you click like racks

6716
07:16:23,760 --> 07:16:25,680
that then started highlighting eax and

6717
07:16:25,680 --> 07:16:28,240
al and ax where i previously didn't do

6718
07:16:28,240 --> 07:16:29,920
that yeah i remember one that went in it

6719
07:16:29,920 --> 07:16:32,160
was like a game changer for for being

6720
07:16:32,160 --> 07:16:33,600
able to follow things but i guess now

6721
07:16:33,600 --> 07:16:36,638
everything so many a's so many a's

6722
07:16:36,638 --> 07:16:40,160
all the a's is that even 4096 a's

6723
07:16:40,160 --> 07:16:41,760
because they're gonna need at least that

6724
07:16:41,760 --> 07:16:44,718
it looks like ah that looks like 4096.

6725
07:16:44,718 --> 07:16:46,400
it might actually be yeah it's hard it's

6726
07:16:46,400 --> 07:16:47,920
hard to judge when it's it's that dense

6727
07:16:47,920 --> 07:16:51,360
but it it could be um so do you know the

6728
07:16:51,360 --> 07:16:52,718
the author of this challenge and a

6729
07:16:52,718 --> 07:16:53,680
little bit of backstory on this

6730
07:16:53,680 --> 07:16:55,840
challenge is a great question i should

6731
07:16:55,840 --> 07:16:57,120
have actually got more of the details on

6732
07:16:57,120 --> 07:16:58,958
the backstory but the author is ghost

6733
07:16:58,958 --> 07:17:01,200
who was one of our our guest authors who

6734
07:17:01,200 --> 07:17:03,360
who came in for us and i think

6735
07:17:03,360 --> 07:17:06,000
might even be on uh on the street oh

6736
07:17:06,000 --> 07:17:07,120
you've got by the way a couple people in

6737
07:17:07,120 --> 07:17:09,040
chat suggesting you should do this on

6738
07:17:09,040 --> 07:17:11,600
your stream too do a live ctf uh

6739
07:17:11,600 --> 07:17:13,440
run on your stream i don't think they

6740
07:17:13,440 --> 07:17:15,920
want you to play it in cts or to like

6741
07:17:15,920 --> 07:17:17,200
yeah

6742
07:17:17,200 --> 07:17:18,478
i forget that there's such a big

6743
07:17:18,478 --> 07:17:20,080
community around it and it's where a lot

6744
07:17:20,080 --> 07:17:22,160
of people go to learn it is especially i

6745
07:17:22,160 --> 07:17:23,120
mean there's so that's one of the things

6746
07:17:23,120 --> 07:17:24,320
that like we're focusing here but like a

6747
07:17:24,320 --> 07:17:25,840
lot of ctfs

6748
07:17:25,840 --> 07:17:27,680
yes defcon ctf is like the pinnacle and

6749
07:17:27,680 --> 07:17:29,280
like you don't just walk in and i

6750
07:17:29,280 --> 07:17:30,320
actually have had people walk into the

6751
07:17:30,320 --> 07:17:31,520
room here and be like how do i register

6752
07:17:31,520 --> 07:17:33,520
for the ctf and we're like yeah you you

6753
07:17:33,520 --> 07:17:34,718
missed the boat on that one several

6754
07:17:34,718 --> 07:17:37,840
months ago um but like there are so many

6755
07:17:37,840 --> 07:17:39,280
other ctfs that are really good for

6756
07:17:39,280 --> 07:17:40,718
helping people figure things out get

6757
07:17:40,718 --> 07:17:43,120
into it and learn so it is it is still a

6758
07:17:43,120 --> 07:17:44,638
pretty good community

6759
07:17:44,638 --> 07:17:46,240
i think that's why i like the knob cert

6760
07:17:46,240 --> 07:17:48,240
uh at infiltrate is you could just walk

6761
07:17:48,240 --> 07:17:50,798
in and join whenever and and yeah

6762
07:17:50,798 --> 07:17:52,478
that was a lot of fun

6763
07:17:52,478 --> 07:17:55,040
it really was so

6764
07:17:55,040 --> 07:17:56,240
oh there

6765
07:17:56,240 --> 07:17:58,398
so it looks like was that in a chemo

6766
07:17:58,398 --> 07:18:00,080
environment

6767
07:18:00,080 --> 07:18:01,440
was it

6768
07:18:01,440 --> 07:18:04,320
messaged quite well that was on um

6769
07:18:04,320 --> 07:18:05,680
on recompense i forget the names the

6770
07:18:05,680 --> 07:18:07,280
team sometimes and the windows seven one

6771
07:18:07,280 --> 07:18:08,718
oh i have notes in front of the monitors

6772
07:18:08,718 --> 07:18:10,958
that's the only way i keep them straight

6773
07:18:10,958 --> 07:18:12,240
that's my cheat sheet yeah it was the

6774
07:18:12,240 --> 07:18:14,478
non-heka pig team um

6775
07:18:14,478 --> 07:18:15,600
sauerkraut

6776
07:18:15,600 --> 07:18:17,040
so sauerkraut

6777
07:18:17,040 --> 07:18:19,680
the sauerkraut is binja and rekha pig is

6778
07:18:19,680 --> 07:18:22,718
the the windows 7 vm so i saw them

6779
07:18:22,718 --> 07:18:24,478
trying to s-trace something and it

6780
07:18:24,478 --> 07:18:26,558
failed and i'm curious if they are in a

6781
07:18:26,558 --> 07:18:29,920
kimo user to root because kimu

6782
07:18:29,920 --> 07:18:32,638
kimo user does not support s-trace or

6783
07:18:32,638 --> 07:18:34,878
debugging

6784
07:18:34,878 --> 07:18:36,718
gets in the way a lot yeah that's super

6785
07:18:36,718 --> 07:18:37,920
annoying

6786
07:18:37,920 --> 07:18:40,080
yeah so it can't even run s trace or

6787
07:18:40,080 --> 07:18:41,840
something that's one of the things we

6788
07:18:41,840 --> 07:18:43,520
talked about is like you know a team

6789
07:18:43,520 --> 07:18:44,798
wanted to use some real hardware and

6790
07:18:44,798 --> 07:18:46,000
we're like yeah if you want to set it up

6791
07:18:46,000 --> 07:18:47,360
and bring it with you so the only rules

6792
07:18:47,360 --> 07:18:49,280
where teams couldn't have interactive

6793
07:18:49,280 --> 07:18:50,958
help from other people

6794
07:18:50,958 --> 07:18:52,718
right so they were not allowed to have

6795
07:18:52,718 --> 07:18:55,280
active humans either locally or remotely

6796
07:18:55,280 --> 07:18:58,240
contribute in any way but any technology

6797
07:18:58,240 --> 07:19:00,320
any website resources any tools like

6798
07:19:00,320 --> 07:19:02,478
fair game right like they're welcome to

6799
07:19:02,478 --> 07:19:04,240
do it so they were allowed to bring up

6800
07:19:04,240 --> 07:19:05,920
um in fact i was gonna look behind me i

6801
07:19:05,920 --> 07:19:07,280
don't think they ended up doing it but

6802
07:19:07,280 --> 07:19:09,360
they did ask if they were allowed to

6803
07:19:09,360 --> 07:19:10,798
uh to bring hardwood used for some of

6804
07:19:10,798 --> 07:19:12,798
this stuff and we said yeah knock

6805
07:19:12,798 --> 07:19:14,080
yourself out

6806
07:19:14,080 --> 07:19:16,398
all right so look i i want to point out

6807
07:19:16,398 --> 07:19:18,558
one one second real quick how easy it

6808
07:19:18,558 --> 07:19:21,200
was for them in binary ninja to make a

6809
07:19:21,200 --> 07:19:23,120
structure there and they got a really

6810
07:19:23,120 --> 07:19:24,798
good structure shape when they used the

6811
07:19:24,798 --> 07:19:26,398
auto structuring and they just named a

6812
07:19:26,398 --> 07:19:27,840
couple of the fields and it looks really

6813
07:19:27,840 --> 07:19:29,680
good i didn't even have to pay you for

6814
07:19:29,680 --> 07:19:31,920
that i didn't i wasn't even looking at

6815
07:19:31,920 --> 07:19:32,878
that

6816
07:19:32,878 --> 07:19:34,718
i've been trying not to shield binja but

6817
07:19:34,718 --> 07:19:36,320
i am super excited that they're uh that

6818
07:19:36,320 --> 07:19:37,600
they're here and this is you're right

6819
07:19:37,600 --> 07:19:39,600
i'm just watching them like this is a

6820
07:19:39,600 --> 07:19:41,040
good use of it so you just hit that s

6821
07:19:41,040 --> 07:19:43,760
hotkey and you're gonna get uh

6822
07:19:43,760 --> 07:19:46,240
pretty nice uh i mean we we let let's be

6823
07:19:46,240 --> 07:19:47,680
honest it's not even chilling for

6824
07:19:47,680 --> 07:19:49,200
anything at this point we know that

6825
07:19:49,200 --> 07:19:50,878
creating structures in ida is one of the

6826
07:19:50,878 --> 07:19:53,360
most painful experiences of a life

6827
07:19:53,360 --> 07:19:54,638
it's like there's there's a couple of

6828
07:19:54,638 --> 07:19:56,878
advantages but uh you know i just still

6829
07:19:56,878 --> 07:19:58,638
has great decompilation i always want to

6830
07:19:58,638 --> 07:20:00,478
you know give credit where credit is due

6831
07:20:00,478 --> 07:20:02,000
oh for sure yeah

6832
07:20:02,000 --> 07:20:03,440
uh and and it is interesting actually a

6833
07:20:03,440 --> 07:20:05,200
good number of the teams are

6834
07:20:05,200 --> 07:20:07,760
uh are our heavy-eyed users uh but it is

6835
07:20:07,760 --> 07:20:09,680
fun that we do have like a like a binge

6836
07:20:09,680 --> 07:20:11,840
ida uh kind of comparison although

6837
07:20:11,840 --> 07:20:13,440
they're both dark themed too that's also

6838
07:20:13,440 --> 07:20:14,798
been fun when we see like which state do

6839
07:20:14,798 --> 07:20:17,840
our people light theme or dark theme

6840
07:20:17,840 --> 07:20:20,478
i wish the binge dark theme was darker

6841
07:20:20,478 --> 07:20:22,080
really yeah it is kind of great it's

6842
07:20:22,080 --> 07:20:23,440
actually not intentionally not like a

6843
07:20:23,440 --> 07:20:25,360
black uh yeah there might be some darker

6844
07:20:25,360 --> 07:20:26,798
ones kind of in there but

6845
07:20:26,798 --> 07:20:28,958
yeah that's a good question all right so

6846
07:20:28,958 --> 07:20:30,478
interesting there's the problem they're

6847
07:20:30,478 --> 07:20:32,478
missing a hint and we need to tell them

6848
07:20:32,478 --> 07:20:34,878
the uh hint so we're gonna um

6849
07:20:34,878 --> 07:20:37,200
we're gonna create a hint uh because i

6850
07:20:37,200 --> 07:20:40,000
just saw a note from from ghost who

6851
07:20:40,000 --> 07:20:41,360
mentioned that

6852
07:20:41,360 --> 07:20:43,040
uh

6853
07:20:43,040 --> 07:20:44,160
let's

6854
07:20:44,160 --> 07:20:45,440
i think we should probably just write

6855
07:20:45,440 --> 07:20:46,958
the word mem copy which is the hint that

6856
07:20:46,958 --> 07:20:49,520
we're supposed to give them um okay

6857
07:20:49,520 --> 07:20:51,440
because i just saw him mention that

6858
07:20:51,440 --> 07:20:53,200
unless uh

6859
07:20:53,200 --> 07:20:54,320
nick if you want to if you want to tell

6860
07:20:54,320 --> 07:20:55,360
us something specific you want to give

6861
07:20:55,360 --> 07:20:56,320
them to it we're going to run that hit

6862
07:20:56,320 --> 07:20:57,680
to them right now

6863
07:20:57,680 --> 07:20:59,040
to make sure that they get that because

6864
07:20:59,040 --> 07:21:01,680
yes i think if they're not seeing that

6865
07:21:01,680 --> 07:21:04,478
uh they're still i mean i look on the

6866
07:21:04,478 --> 07:21:05,680
one hand

6867
07:21:05,680 --> 07:21:06,478
um

6868
07:21:06,478 --> 07:21:07,920
yes okay we're just going to literally

6869
07:21:07,920 --> 07:21:09,200
just go give each team a hint it just

6870
07:21:09,200 --> 07:21:11,440
says mem copy that's all it says

6871
07:21:11,440 --> 07:21:15,280
perfect oh we're getting strings

6872
07:21:15,840 --> 07:21:18,000
what are we grepping for oh looking for

6873
07:21:18,000 --> 07:21:20,080
okay

6874
07:21:20,080 --> 07:21:22,798
interesting

6875
07:21:22,798 --> 07:21:24,398
that's an interesting way to figure out

6876
07:21:24,398 --> 07:21:27,040
what the loader is i i wonder what

6877
07:21:27,040 --> 07:21:28,798
they're having issues with

6878
07:21:28,798 --> 07:21:31,040
i mean and we did i so i believe we did

6879
07:21:31,040 --> 07:21:34,398
package up and give everyone the the ld

6880
07:21:34,398 --> 07:21:37,680
and the uh lib c that we used uh on each

6881
07:21:37,680 --> 07:21:39,840
of these so this isn't gonna change

6882
07:21:39,840 --> 07:21:41,120
people aren't gonna get thrown off by

6883
07:21:41,120 --> 07:21:43,520
that are they uh by giving so yeah that

6884
07:21:43,520 --> 07:21:45,200
was one thing i was concerned about with

6885
07:21:45,200 --> 07:21:46,798
because we didn't want to give them

6886
07:21:46,798 --> 07:21:47,840
those because they needed them for

6887
07:21:47,840 --> 07:21:49,440
exploitation we gave them because they

6888
07:21:49,440 --> 07:21:51,280
needed them to run them potentially

6889
07:21:51,280 --> 07:21:53,440
right right and so it is a little bit of

6890
07:21:53,440 --> 07:21:54,718
weird signal and that was something we

6891
07:21:54,718 --> 07:21:56,320
debated and we decided like you know

6892
07:21:56,320 --> 07:21:58,638
what what should we do uh how are they

6893
07:21:58,638 --> 07:22:00,240
immediately into that mem cop does that

6894
07:22:00,240 --> 07:22:02,080
hand out already yeah they hit the hit

6895
07:22:02,080 --> 07:22:03,840
went out to them so they definitely have

6896
07:22:03,840 --> 07:22:06,798
that uh so we should see them uh

6897
07:22:06,798 --> 07:22:08,718
redirect their attention pretty quickly

6898
07:22:08,718 --> 07:22:10,558
now and i'm gonna plug in my power to my

6899
07:22:10,558 --> 07:22:14,000
laptop here both of them have been

6900
07:22:14,000 --> 07:22:15,120
honestly

6901
07:22:15,120 --> 07:22:16,718
documenting their databases quite well

6902
07:22:16,718 --> 07:22:18,000
which is something that i was kind of

6903
07:22:18,000 --> 07:22:19,600
surprised with so they've made

6904
07:22:19,600 --> 07:22:22,320
structures i i saw that allocation the

6905
07:22:22,320 --> 07:22:24,160
calc of i think

6906
07:22:24,160 --> 07:22:27,760
10 018 hex bytes or 1020 hex bytes and

6907
07:22:27,760 --> 07:22:29,120
it seems like all of them have

6908
07:22:29,120 --> 07:22:31,840
completely defined the fields of of that

6909
07:22:31,840 --> 07:22:34,240
structure uh so they seem to really want

6910
07:22:34,240 --> 07:22:36,320
to understand exactly what this program

6911
07:22:36,320 --> 07:22:38,478
is doing yeah and you used to see more

6912
07:22:38,478 --> 07:22:40,320
like hacky stuff in ctfs right and so

6913
07:22:40,320 --> 07:22:42,080
even this being a speed round i think

6914
07:22:42,080 --> 07:22:43,520
people have realized we still need to do

6915
07:22:43,520 --> 07:22:45,760
a little bit of this work

6916
07:22:45,760 --> 07:22:49,280
that's a lot of x that's a lot of x's

6917
07:22:49,280 --> 07:22:50,798
what do we do we're just creating a

6918
07:22:50,798 --> 07:22:51,920
string so we're just doing a lot of

6919
07:22:51,920 --> 07:22:53,360
counts and are we gonna like save that

6920
07:22:53,360 --> 07:22:55,840
or we're just

6921
07:22:56,000 --> 07:22:57,840
interesting where are we sending that

6922
07:22:57,840 --> 07:22:59,440
but they're they're prepending that's an

6923
07:22:59,440 --> 07:23:02,877
interesting way to assemble a string

6924
07:23:04,160 --> 07:23:06,000
i would have just calculated the length

6925
07:23:06,000 --> 07:23:08,000
and padded it out to the the total

6926
07:23:08,000 --> 07:23:08,958
amount

6927
07:23:08,958 --> 07:23:11,840
i've never seen that z fill string ten

6928
07:23:11,840 --> 07:23:13,760
thousand dot z fill

6929
07:23:13,760 --> 07:23:16,558
command not found

6930
07:23:16,558 --> 07:23:18,478
left justify

6931
07:23:18,478 --> 07:23:21,360
are they are they manually doing uh like

6932
07:23:21,360 --> 07:23:23,040
string formatting

6933
07:23:23,040 --> 07:23:24,320
yeah that's that would have been a

6934
07:23:24,320 --> 07:23:25,920
simpler way to do this i think right

6935
07:23:25,920 --> 07:23:27,360
like

6936
07:23:27,360 --> 07:23:29,600
like this this this yells out to me like

6937
07:23:29,600 --> 07:23:31,680
uh c plus plus string formatting where

6938
07:23:31,680 --> 07:23:33,360
you have to see out and pipe everything

6939
07:23:33,360 --> 07:23:36,320
and use all the classes

6940
07:23:36,320 --> 07:23:38,398
so i think they're just trying to create

6941
07:23:38,398 --> 07:23:40,000
this this this

6942
07:23:40,000 --> 07:23:42,398
string shirt oh okay that matches the

6943
07:23:42,398 --> 07:23:43,760
the pack structure remember we saw

6944
07:23:43,760 --> 07:23:44,958
earlier when they were like dumping the

6945
07:23:44,958 --> 07:23:46,558
structure of those packages so they're

6946
07:23:46,558 --> 07:23:47,920
like they're create they're creating

6947
07:23:47,920 --> 07:23:49,680
this package type

6948
07:23:49,680 --> 07:23:52,478
no it's just file directory open file

6949
07:23:52,478 --> 07:23:54,320
command not found so is that after it's

6950
07:23:54,320 --> 07:23:55,600
it's hard to tell when there sometimes

6951
07:23:55,600 --> 07:23:56,718
when they run these commands it's really

6952
07:23:56,718 --> 07:23:58,638
hard to tell whether is the output of

6953
07:23:58,638 --> 07:24:00,080
the command like truncated and the rest

6954
07:24:00,080 --> 07:24:01,520
is going to the shell and so the shell

6955
07:24:01,520 --> 07:24:02,638
is telling the command that found which

6956
07:24:02,638 --> 07:24:04,160
is often the case or is it actually the

6957
07:24:04,160 --> 07:24:06,080
original program ooh what's that that's

6958
07:24:06,080 --> 07:24:07,840
doing it you got an open no such file or

6959
07:24:07,840 --> 07:24:10,958
directory so that's what i oh no an open

6960
07:24:10,958 --> 07:24:12,398
though would have to be from the

6961
07:24:12,398 --> 07:24:14,718
executable yeah right

6962
07:24:14,718 --> 07:24:17,360
that wouldn't be

6963
07:24:17,680 --> 07:24:19,840
that's curious to me why is the random

6964
07:24:19,840 --> 07:24:21,280
thing getting over yeah do they have the

6965
07:24:21,280 --> 07:24:22,958
ability to include or i guess there's

6966
07:24:22,958 --> 07:24:24,798
install package so maybe it's the name

6967
07:24:24,798 --> 07:24:27,120
of that file so we see that mem copy of

6968
07:24:27,120 --> 07:24:28,718
file path right there and i think that's

6969
07:24:28,718 --> 07:24:31,200
the like thousand hex plate buffer uh

6970
07:24:31,200 --> 07:24:33,440
it's hard to completely guess uh what it

6971
07:24:33,440 --> 07:24:35,520
is because these scroll by so fast oh

6972
07:24:35,520 --> 07:24:36,798
man you should some of these some of

6973
07:24:36,798 --> 07:24:38,398
these people are so hard to follow

6974
07:24:38,398 --> 07:24:39,600
because they're flipping around so

6975
07:24:39,600 --> 07:24:40,798
quickly and you kind of like get a

6976
07:24:40,798 --> 07:24:41,920
glimpse of something and then you have

6977
07:24:41,920 --> 07:24:44,080
to hope you can you can recognize it uh

6978
07:24:44,080 --> 07:24:45,760
one of those things it's kind of tough

6979
07:24:45,760 --> 07:24:47,520
to think about sometimes but like your

6980
07:24:47,520 --> 07:24:48,638
brain

6981
07:24:48,638 --> 07:24:50,718
knows kind of what it's about to do like

6982
07:24:50,718 --> 07:24:52,000
that's something i notice a lot when

6983
07:24:52,000 --> 07:24:54,320
watching like speedrunners as well is

6984
07:24:54,320 --> 07:24:56,558
you often can't see dialogues and stuff

6985
07:24:56,558 --> 07:24:58,478
because they are

6986
07:24:58,478 --> 07:25:00,478
they're expecting that i guess you did

6987
07:25:00,478 --> 07:25:02,320
rubik's cubing yeah yeah yeah you'll do

6988
07:25:02,320 --> 07:25:04,160
cue and you know like

6989
07:25:04,160 --> 07:25:05,920
you can't really watch someone make the

6990
07:25:05,920 --> 07:25:07,200
decisions because they already made the

6991
07:25:07,200 --> 07:25:09,280
decisions before before

6992
07:25:09,280 --> 07:25:11,200
it's just a smooth execution i'm still

6993
07:25:11,200 --> 07:25:13,040
not there yet i have pauses in my solves

6994
07:25:13,040 --> 07:25:14,558
right but yeah the good people like it

6995
07:25:14,558 --> 07:25:16,398
was it's already like a part of what

6996
07:25:16,398 --> 07:25:18,638
they're doing and yeah so yeah we've

6997
07:25:18,638 --> 07:25:20,240
seen that in several of the players here

6998
07:25:20,240 --> 07:25:21,440
one of the suggestions we got is well

6999
07:25:21,440 --> 07:25:23,120
could you release the binaries too so we

7000
07:25:23,120 --> 07:25:24,638
didn't have it logistically figured out

7001
07:25:24,638 --> 07:25:25,520
here

7002
07:25:25,520 --> 07:25:27,200
but it's an interesting idea we have to

7003
07:25:27,200 --> 07:25:29,520
be careful with you know teams cheating

7004
07:25:29,520 --> 07:25:30,160
and

7005
07:25:30,160 --> 07:25:32,000
and piling on and somehow slipping an

7006
07:25:32,000 --> 07:25:33,440
answer to a competitor while they're

7007
07:25:33,440 --> 07:25:34,558
doing it but

7008
07:25:34,558 --> 07:25:36,240
it would be great to have a format like

7009
07:25:36,240 --> 07:25:37,760
this where you absolutely could have a

7010
07:25:37,760 --> 07:25:40,000
chat and an audience although

7011
07:25:40,000 --> 07:25:42,718
you have to like doing it not on camera

7012
07:25:42,718 --> 07:25:44,798
is just way easier right it can be

7013
07:25:44,798 --> 07:25:47,120
really really uh hard

7014
07:25:47,120 --> 07:25:48,320
to uh

7015
07:25:48,320 --> 07:25:50,080
to uh to do this like just under the

7016
07:25:50,080 --> 07:25:51,520
pressure under the gun

7017
07:25:51,520 --> 07:25:52,958
uh and like i said i mean you've done

7018
07:25:52,958 --> 07:25:54,478
this you know what it's like and you

7019
07:25:54,478 --> 07:25:57,200
know you you sit on the on the hot seat

7020
07:25:57,200 --> 07:26:00,320
uh so the the consensus so far

7021
07:26:00,320 --> 07:26:02,638
from uh from ghost we just got a message

7022
07:26:02,638 --> 07:26:04,718
from the the challenge author is that it

7023
07:26:04,718 --> 07:26:07,280
looks like uh we've got sour cloud on

7024
07:26:07,280 --> 07:26:08,638
the right track

7025
07:26:08,638 --> 07:26:10,398
so okay which which i mean that makes

7026
07:26:10,398 --> 07:26:11,760
sense you see them building this kind of

7027
07:26:11,760 --> 07:26:13,120
package blob so they clearly know

7028
07:26:13,120 --> 07:26:14,478
something about the structure of it and

7029
07:26:14,478 --> 07:26:16,080
they're creating

7030
07:26:16,080 --> 07:26:17,520
um

7031
07:26:17,520 --> 07:26:19,120
creating something here

7032
07:26:19,120 --> 07:26:20,320
uh to

7033
07:26:20,320 --> 07:26:21,840
to

7034
07:26:21,840 --> 07:26:23,360
yeah they've got several different types

7035
07:26:23,360 --> 07:26:24,718
parsed

7036
07:26:24,718 --> 07:26:26,478
yeah it looks like what do we have in

7037
07:26:26,478 --> 07:26:29,200
here a type field some padding bytes

7038
07:26:29,200 --> 07:26:31,600
then a pointer to the buffer

7039
07:26:31,600 --> 07:26:33,840
a file data which is you in 64 and a

7040
07:26:33,840 --> 07:26:36,558
file path which is an n64 i'm guessing

7041
07:26:36,558 --> 07:26:37,760
those just haven't been filled that

7042
07:26:37,760 --> 07:26:39,280
probably hasn't been correctly typed

7043
07:26:39,280 --> 07:26:40,240
yeah

7044
07:26:40,240 --> 07:26:43,680
yeah i think that path is actually in

7045
07:26:43,680 --> 07:26:46,160
in line of that structure

7046
07:26:46,160 --> 07:26:48,398
that would that would be there

7047
07:26:48,398 --> 07:26:51,200
i think or a cowlick of uh

7048
07:26:51,200 --> 07:26:53,280
10 20 or something so if it's a yeah

7049
07:26:53,280 --> 07:26:54,558
it's just a fixed amount right and

7050
07:26:54,558 --> 07:26:55,600
they're not they're not adjusting it

7051
07:26:55,600 --> 07:26:56,638
based on

7052
07:26:56,638 --> 07:26:57,600
uh

7053
07:26:57,600 --> 07:26:59,840
no such file or directory parsing object

7054
07:26:59,840 --> 07:27:02,398
of type one okay so there are types

7055
07:27:02,398 --> 07:27:03,360
now

7056
07:27:03,360 --> 07:27:06,558
does it loop here um

7057
07:27:06,558 --> 07:27:08,558
trying to see if this is like a tlv or

7058
07:27:08,558 --> 07:27:09,840
something because it looks like they

7059
07:27:09,840 --> 07:27:11,760
have a type one and a type zero yeah and

7060
07:27:11,760 --> 07:27:13,920
the way i would interpret this is

7061
07:27:13,920 --> 07:27:15,440
there's like a there's like a one

7062
07:27:15,440 --> 07:27:17,280
million or a ten million there followed

7063
07:27:17,280 --> 07:27:20,958
by an eight yeah by the exit followed by

7064
07:27:21,680 --> 07:27:23,680
size the payload which is just a single

7065
07:27:23,680 --> 07:27:26,478
character or a string that's parsed and

7066
07:27:26,478 --> 07:27:28,160
then the second type so it looks like

7067
07:27:28,160 --> 07:27:30,638
you can have multiple types in here

7068
07:27:30,638 --> 07:27:32,398
well so is it those eight x's is

7069
07:27:32,398 --> 07:27:34,958
actually the eight uh x character string

7070
07:27:34,958 --> 07:27:40,638
or i i i don't know for sure yeah

7071
07:27:40,638 --> 07:27:42,320
sometimes that's tough to say sometimes

7072
07:27:42,320 --> 07:27:44,320
i like knowing the answer and what the

7073
07:27:44,320 --> 07:27:45,760
progress was doing sometimes i like

7074
07:27:45,760 --> 07:27:47,520
figuring it out with the competitors too

7075
07:27:47,520 --> 07:27:49,920
it's just interesting watching uh

7076
07:27:49,920 --> 07:27:51,120
watching them too see they're

7077
07:27:51,120 --> 07:27:52,798
handcrafting this message now they've

7078
07:27:52,798 --> 07:27:53,920
kind of

7079
07:27:53,920 --> 07:27:56,000
they seem a little frustrated okay

7080
07:27:56,000 --> 07:27:57,920
that's a hang on

7081
07:27:57,920 --> 07:28:01,040
oh oh it what okay

7082
07:28:01,040 --> 07:28:04,240
i i we've all done that a lot uh so what

7083
07:28:04,240 --> 07:28:05,440
was that i was looking at the screen

7084
07:28:05,440 --> 07:28:08,558
parsing object of type x so they um they

7085
07:28:08,558 --> 07:28:10,558
basically hand crafted the header and

7086
07:28:10,558 --> 07:28:12,958
then they pasted a bunch of the x's and

7087
07:28:12,958 --> 07:28:15,040
they seemed to oh they're going in for a

7088
07:28:15,040 --> 07:28:17,120
gdp approach and when you break out a

7089
07:28:17,120 --> 07:28:18,878
debugger you're really kind of getting

7090
07:28:18,878 --> 07:28:21,280
in there what's uh what is challenge

7091
07:28:21,280 --> 07:28:24,000
actually so challenge is the binary name

7092
07:28:24,000 --> 07:28:26,558
they are every just the way our bundler

7093
07:28:26,558 --> 07:28:28,958
wrapper script works is that every round

7094
07:28:28,958 --> 07:28:31,360
it will uh package up the

7095
07:28:31,360 --> 07:28:33,200
package up the the challenge it's just

7096
07:28:33,200 --> 07:28:34,638
called challenge this is literally kim

7097
07:28:34,638 --> 07:28:36,798
who just doesn't support this oh no yeah

7098
07:28:36,798 --> 07:28:37,760
this is exactly what you mentioned

7099
07:28:37,760 --> 07:28:39,120
earlier right that's exactly what you're

7100
07:28:39,120 --> 07:28:40,080
talking about

7101
07:28:40,080 --> 07:28:41,840
all right oh yeah let's go let's go take

7102
07:28:41,840 --> 07:28:44,478
a look at reconfig i don't wanna

7103
07:28:44,478 --> 07:28:45,680
yeah

7104
07:28:45,680 --> 07:28:47,040
they're gonna experience your pain no

7105
07:28:47,040 --> 07:28:48,080
they're not gonna be able to use the

7106
07:28:48,080 --> 07:28:51,760
debugger in their environment here yeah

7107
07:28:51,760 --> 07:28:55,680
and yeah it just it just doesn't support

7108
07:28:55,680 --> 07:28:57,360
uh p-trace now

7109
07:28:57,360 --> 07:28:58,878
it looks like they're trying to run

7110
07:28:58,878 --> 07:29:00,798
s-trace and

7111
07:29:00,798 --> 07:29:03,840
um you can do kimu under s-trace and

7112
07:29:03,840 --> 07:29:05,520
there's a built-in s trace it's a little

7113
07:29:05,520 --> 07:29:07,520
bit worse than normal estrogen better

7114
07:29:07,520 --> 07:29:08,878
than that

7115
07:29:08,878 --> 07:29:10,160
yeah

7116
07:29:10,160 --> 07:29:11,760
but that's that's kind of the way you

7117
07:29:11,760 --> 07:29:13,520
have to go if you want to go with this

7118
07:29:13,520 --> 07:29:16,798
approach um chemo user is a fantastic

7119
07:29:16,798 --> 07:29:18,240
environment to get things up and running

7120
07:29:18,240 --> 07:29:20,000
in but there are a lot of rough edges a

7121
07:29:20,000 --> 07:29:22,080
lot of bugs a lot of bugs a lot of

7122
07:29:22,080 --> 07:29:24,638
things just don't work yeah

7123
07:29:24,638 --> 07:29:25,760
well they're bringing they're bringing

7124
07:29:25,760 --> 07:29:26,798
their documents to stuff now so in the

7125
07:29:26,798 --> 07:29:28,000
meantime let's go back over to wreck a

7126
07:29:28,000 --> 07:29:29,360
big we haven't looked at them in a

7127
07:29:29,360 --> 07:29:30,878
little while so i just

7128
07:29:30,878 --> 07:29:34,320
i still see them in in ida and i feel

7129
07:29:34,320 --> 07:29:36,478
like at this point at you know 30

7130
07:29:36,478 --> 07:29:38,398
minutes in if you're not

7131
07:29:38,398 --> 07:29:40,000
like still looking around in ida is is

7132
07:29:40,000 --> 07:29:41,680
probably not a good sign like you you

7133
07:29:41,680 --> 07:29:43,360
should hopefully be if you're you know

7134
07:29:43,360 --> 07:29:46,320
using it as a rockering

7135
07:29:46,320 --> 07:29:49,200
yeah yeah oh no it's a good thing we got

7136
07:29:49,200 --> 07:29:50,718
a fast network here yeah we actually

7137
07:29:50,718 --> 07:29:52,558
have a pretty good connection honestly

7138
07:29:52,558 --> 07:29:54,638
because if it weren't there they're done

7139
07:29:54,638 --> 07:29:56,080
that would yeah the rest of the

7140
07:29:56,080 --> 07:29:57,440
competition i'm sorry you only had an

7141
07:29:57,440 --> 07:29:59,600
hour and that was your download

7142
07:29:59,600 --> 07:30:01,360
yeah wow

7143
07:30:01,360 --> 07:30:03,280
so it's it's interesting here that there

7144
07:30:03,280 --> 07:30:05,120
does seem to be a big difference in

7145
07:30:05,120 --> 07:30:07,200
approaches here by by wrecking pig and

7146
07:30:07,200 --> 07:30:08,958
and sour mm-hmm

7147
07:30:08,958 --> 07:30:11,520
sour something sauerkraut yep yeah

7148
07:30:11,520 --> 07:30:13,360
and and it looks like wreck-it pig might

7149
07:30:13,360 --> 07:30:15,040
be a little bit more on the static side

7150
07:30:15,040 --> 07:30:16,878
yeah and uh sauer might be a little bit

7151
07:30:16,878 --> 07:30:18,798
more on the dynamic side of things which

7152
07:30:18,798 --> 07:30:20,878
is where i find myself is normally

7153
07:30:20,878 --> 07:30:23,360
jamming things in seeing what messages i

7154
07:30:23,360 --> 07:30:25,040
get back yeah although with this though

7155
07:30:25,040 --> 07:30:26,718
where it's different architecture i can

7156
07:30:26,718 --> 07:30:28,000
totally see someone who normally goes

7157
07:30:28,000 --> 07:30:29,360
dynamic just not wanting to mess with

7158
07:30:29,360 --> 07:30:31,520
that right like that's not a crazy thing

7159
07:30:31,520 --> 07:30:32,398
when you've got to go do a different

7160
07:30:32,398 --> 07:30:33,760
architecture that you try to get more

7161
07:30:33,760 --> 07:30:35,600
static than you might normally

7162
07:30:35,600 --> 07:30:37,600
yeah so how big are these teams working

7163
07:30:37,600 --> 07:30:40,080
right now so the teams themselves we've

7164
07:30:40,080 --> 07:30:42,718
actually had a massive number of like

7165
07:30:42,718 --> 07:30:44,320
combinations so some of these teams are

7166
07:30:44,320 --> 07:30:46,160
100 people some of these teams are 40 60

7167
07:30:46,160 --> 07:30:48,080
people there's like a lot of really

7168
07:30:48,080 --> 07:30:49,920
large teams it's so the way that that

7169
07:30:49,920 --> 07:30:51,200
develops in fact there's even a whole

7170
07:30:51,200 --> 07:30:52,160
website

7171
07:30:52,160 --> 07:30:54,878
um maybe we can drop a link in in chat

7172
07:30:54,878 --> 07:30:55,920
um

7173
07:30:55,920 --> 07:30:57,920
uh for for folks or somebody else can

7174
07:30:57,920 --> 07:30:59,280
can post it

7175
07:30:59,280 --> 07:31:00,558
um

7176
07:31:00,558 --> 07:31:02,320
yeah we're getting some

7177
07:31:02,320 --> 07:31:06,080
spam uh in chat can you kill the spam

7178
07:31:06,080 --> 07:31:07,920
oh is this not spam oh this is the good

7179
07:31:07,920 --> 07:31:09,680
spam okay

7180
07:31:09,680 --> 07:31:10,558
oh are they supporting one of the

7181
07:31:10,558 --> 07:31:11,920
players or something

7182
07:31:11,920 --> 07:31:13,600
okay

7183
07:31:13,600 --> 07:31:15,520
this is the oh an esports meme see i i

7184
07:31:15,520 --> 07:31:17,360
need to uh

7185
07:31:17,360 --> 07:31:20,718
yup i need to be up on my memes um

7186
07:31:20,718 --> 07:31:21,680
so

7187
07:31:21,680 --> 07:31:23,120
the uh

7188
07:31:23,120 --> 07:31:24,798
i totally gotta start trying sour clouds

7189
07:31:24,798 --> 07:31:26,478
even installing a lot of packages as

7190
07:31:26,478 --> 07:31:28,240
well good thing you have good internet

7191
07:31:28,240 --> 07:31:30,080
because both of them have already blown

7192
07:31:30,080 --> 07:31:31,680
through their like hundred meg budgets

7193
07:31:31,680 --> 07:31:34,000
yeah they're uh they're um tethering

7194
07:31:34,000 --> 07:31:34,958
tethering would have been would have

7195
07:31:34,958 --> 07:31:37,040
been under the the expensive ones uh at

7196
07:31:37,040 --> 07:31:38,160
this point

7197
07:31:38,160 --> 07:31:40,240
so so yeah uh sauerkraut is actually 30

7198
07:31:40,240 --> 07:31:43,600
people here in vegas 20 people remote so

7199
07:31:43,600 --> 07:31:45,360
50 people total just on sauerkraut like

7200
07:31:45,360 --> 07:31:47,760
these are these are large teams and they

7201
07:31:47,760 --> 07:31:50,478
sent the best person from each team to

7202
07:31:50,478 --> 07:31:51,840
come here

7203
07:31:51,840 --> 07:31:55,120
right uh i'm looking for my paper

7204
07:31:55,120 --> 07:31:56,638
oh i think i gave it to you that had the

7205
07:31:56,638 --> 07:31:58,558
scores on the back oh no i can't give it

7206
07:31:58,558 --> 07:32:00,638
to one of the teams uh the hint page on

7207
07:32:00,638 --> 07:32:01,520
one of the teams actually gave this

7208
07:32:01,520 --> 07:32:03,280
course i was gonna so we've got the

7209
07:32:03,280 --> 07:32:04,878
point totals that each of the teams are

7210
07:32:04,878 --> 07:32:06,000
gonna get

7211
07:32:06,000 --> 07:32:07,920
for um

7212
07:32:07,920 --> 07:32:10,080
for like their placement in in the live

7213
07:32:10,080 --> 07:32:13,040
ctf so because again every team here

7214
07:32:13,040 --> 07:32:14,558
uh is

7215
07:32:14,558 --> 07:32:16,000
uh

7216
07:32:16,000 --> 07:32:18,398
is is here primarily for devco ctf and

7217
07:32:18,398 --> 07:32:20,000
then the live ctf is basically like this

7218
07:32:20,000 --> 07:32:22,000
extra bonus point pool that they can win

7219
07:32:22,000 --> 07:32:25,600
depending on how they do uh here and so

7220
07:32:25,600 --> 07:32:27,360
i think the exact number so i'll kind of

7221
07:32:27,360 --> 07:32:28,558
i'll kind of eyeball it but i think it

7222
07:32:28,558 --> 07:32:31,120
was uh if you were out in the very first

7223
07:32:31,120 --> 07:32:32,718
round so we started with 16 teams oh

7224
07:32:32,718 --> 07:32:34,958
we're done with our round one

7225
07:32:34,958 --> 07:32:36,798
and we're now into the second round and

7226
07:32:36,798 --> 07:32:38,718
we're working on uh when are we down

7227
07:32:38,718 --> 07:32:39,600
here

7228
07:32:39,600 --> 07:32:41,600
everybody who made it to the second town

7229
07:32:41,600 --> 07:32:43,440
uh every sorry everybody who's out in

7230
07:32:43,440 --> 07:32:44,878
the first round zero points everybody

7231
07:32:44,878 --> 07:32:46,080
who made it to the second round gets

7232
07:32:46,080 --> 07:32:48,718
like 668 or six six hundred something

7233
07:32:48,718 --> 07:32:51,440
points uh and then the

7234
07:32:51,440 --> 07:32:53,040
everybody who makes it

7235
07:32:53,040 --> 07:32:54,398
so that's that's gonna be like basically

7236
07:32:54,398 --> 07:32:55,680
four teams so we have eight in this

7237
07:32:55,680 --> 07:32:56,798
current round four of them are going to

7238
07:32:56,798 --> 07:32:58,398
get 600 because they don't move on they

7239
07:32:58,398 --> 07:33:00,878
just get the 600 for making it here the

7240
07:33:00,878 --> 07:33:02,638
next teams that are going to be third

7241
07:33:02,638 --> 07:33:05,280
and fourth uh uh are going to make i

7242
07:33:05,280 --> 07:33:07,200
think i want to say it's like 2 000

7243
07:33:07,200 --> 07:33:10,160
points so somewhere in the 2000 points

7244
07:33:10,160 --> 07:33:12,958
and then first and second are like uh

7245
07:33:12,958 --> 07:33:15,120
four and two or maybe it's a thousand

7246
07:33:15,120 --> 07:33:16,160
something and then it's two and three

7247
07:33:16,160 --> 07:33:18,160
four basically between

7248
07:33:18,160 --> 07:33:20,398
zero and four thousand points uh that

7249
07:33:20,398 --> 07:33:22,000
you can get and so it so we'll pull up

7250
07:33:22,000 --> 07:33:24,718
the exact uh the exact amount

7251
07:33:24,718 --> 07:33:28,000
um and for context so right now the

7252
07:33:28,000 --> 07:33:30,320
difference between the last place team

7253
07:33:30,320 --> 07:33:33,120
in the overall event and the top team

7254
07:33:33,120 --> 07:33:35,360
is about 7 000 points

7255
07:33:35,360 --> 07:33:36,398
so

7256
07:33:36,398 --> 07:33:38,798
4 000 points it's a pretty big deal it's

7257
07:33:38,798 --> 07:33:40,398
a pretty big deal it really is like

7258
07:33:40,398 --> 07:33:42,798
honestly we were closer i'm a little

7259
07:33:42,798 --> 07:33:44,478
worried that like we were we didn't want

7260
07:33:44,478 --> 07:33:46,478
to like completely disrupt the game but

7261
07:33:46,478 --> 07:33:47,840
we wanted teams to take it seriously and

7262
07:33:47,840 --> 07:33:49,280
i definitely think we're on the serious

7263
07:33:49,280 --> 07:33:51,840
side because honestly any of any of the

7264
07:33:51,840 --> 07:33:54,798
teams in the top eight uh at this point

7265
07:33:54,798 --> 07:33:58,558
that that solve this if if um

7266
07:33:58,558 --> 07:33:59,840
you know depending on who gets second

7267
07:33:59,840 --> 07:34:01,120
and third you know second and third and

7268
07:34:01,120 --> 07:34:03,120
fourth basically could easily kind of

7269
07:34:03,120 --> 07:34:04,240
get the win so although it is

7270
07:34:04,240 --> 07:34:06,958
interesting too the of the top uh eight

7271
07:34:06,958 --> 07:34:10,000
teams uh in the defcon ctf

7272
07:34:10,000 --> 07:34:12,320
seven of them were in the top eight in

7273
07:34:12,320 --> 07:34:13,520
our bracket

7274
07:34:13,520 --> 07:34:15,840
wow so this really strongly correlated

7275
07:34:15,840 --> 07:34:17,600
between people who did well which i mean

7276
07:34:17,600 --> 07:34:18,638
it kind of makes sense it turns out

7277
07:34:18,638 --> 07:34:19,920
they've got really good exploitation

7278
07:34:19,920 --> 07:34:21,600
really good people and they're coming

7279
07:34:21,600 --> 07:34:23,440
here

7280
07:34:23,440 --> 07:34:24,320
um

7281
07:34:24,320 --> 07:34:25,520
okay

7282
07:34:25,520 --> 07:34:26,718
so i'm i

7283
07:34:26,718 --> 07:34:29,520
we're we're still okay on time but i i'm

7284
07:34:29,520 --> 07:34:31,440
a little worried that we've got a lot of

7285
07:34:31,440 --> 07:34:32,798
uh there's

7286
07:34:32,798 --> 07:34:34,320
left to go in terms of even like

7287
07:34:34,320 --> 07:34:36,320
stabilizing this thing so

7288
07:34:36,320 --> 07:34:38,000
they both seem to be fighting a little

7289
07:34:38,000 --> 07:34:40,240
bit with their dynamic environment it

7290
07:34:40,240 --> 07:34:41,840
looks like a lot of them have the binary

7291
07:34:41,840 --> 07:34:43,600
running but neither of them seem to be

7292
07:34:43,600 --> 07:34:44,798
getting the introspection that they

7293
07:34:44,798 --> 07:34:47,040
really want to have yeah so so sour

7294
07:34:47,040 --> 07:34:49,920
cloud did just move back into uh like

7295
07:34:49,920 --> 07:34:51,840
actually building a payload so maybe

7296
07:34:51,840 --> 07:34:53,760
they they've got something i would that

7297
07:34:53,760 --> 07:34:56,958
would be great if they've got um

7298
07:34:56,958 --> 07:34:57,920
uh

7299
07:34:57,920 --> 07:35:00,840
some some progress but but i do think

7300
07:35:00,840 --> 07:35:02,398
um

7301
07:35:02,398 --> 07:35:04,080
yeah i do think that it's going to hurt

7302
07:35:04,080 --> 07:35:05,440
them not having a dynamic environment

7303
07:35:05,440 --> 07:35:06,638
that they can instrument right not

7304
07:35:06,638 --> 07:35:08,638
having a debugging and just intimidate

7305
07:35:08,638 --> 07:35:10,080
most of the matches that you kind of

7306
07:35:10,080 --> 07:35:12,478
take that for granted uh so i think in

7307
07:35:12,478 --> 07:35:15,040
in hindsight this challenge being both a

7308
07:35:15,040 --> 07:35:16,478
little bit more complex and being a

7309
07:35:16,478 --> 07:35:18,080
different architecture

7310
07:35:18,080 --> 07:35:19,360
this is unquestionably one of the

7311
07:35:19,360 --> 07:35:22,878
hardest challenges so we will see uh

7312
07:35:22,878 --> 07:35:24,718
crossing our fingers that uh we don't

7313
07:35:24,718 --> 07:35:26,398
have to go to a sudden death because i

7314
07:35:26,398 --> 07:35:28,478
think nobody wants that that

7315
07:35:28,478 --> 07:35:30,080
competitors want to solve it the tension

7316
07:35:30,080 --> 07:35:32,080
is so high in a sudden death yeah oh

7317
07:35:32,080 --> 07:35:33,840
yeah and it's just it feels a little

7318
07:35:33,840 --> 07:35:35,360
more luck based it feels a little more

7319
07:35:35,360 --> 07:35:36,958
like you know it's just too too quick

7320
07:35:36,958 --> 07:35:38,878
and too fast um

7321
07:35:38,878 --> 07:35:41,360
but uh it is still a very valid test of

7322
07:35:41,360 --> 07:35:43,120
skill because it's just all about the

7323
07:35:43,120 --> 07:35:44,478
speed which is very much kind of the

7324
07:35:44,478 --> 07:35:45,760
theme of this so

7325
07:35:45,760 --> 07:35:49,280
uh we'll see what we need to to do

7326
07:35:49,280 --> 07:35:51,600
p 64 s

7327
07:35:51,600 --> 07:35:54,478
so string v dot z fill eight i i haven't

7328
07:35:54,478 --> 07:35:55,680
seen much

7329
07:35:55,680 --> 07:35:58,718
python development well p64s is i'm

7330
07:35:58,718 --> 07:36:00,958
pretty sure that's a pawn tool uh

7331
07:36:00,958 --> 07:36:02,080
wrapper

7332
07:36:02,080 --> 07:36:05,120
uh okay that's gonna going to

7333
07:36:05,120 --> 07:36:07,360
is it's a pointer to string or string to

7334
07:36:07,360 --> 07:36:09,040
point it's something yeah i think i bet

7335
07:36:09,040 --> 07:36:10,638
you if we pull up the uh the pawn tools

7336
07:36:10,638 --> 07:36:13,120
docs we'd find that um because i have

7337
07:36:13,120 --> 07:36:14,398
seen that in some of the other scripts

7338
07:36:14,398 --> 07:36:17,280
although i clearly need to practice more

7339
07:36:17,280 --> 07:36:18,080
uh

7340
07:36:18,080 --> 07:36:19,280
i think you know what maybe we can have

7341
07:36:19,280 --> 07:36:21,360
carl come in and uh come on voice and

7342
07:36:21,360 --> 07:36:24,000
tell us what p64s is in pwntools if he

7343
07:36:24,000 --> 07:36:25,520
knows

7344
07:36:25,520 --> 07:36:27,280
p64s yeah so let's get him i mean they

7345
07:36:27,280 --> 07:36:30,080
have an implementation right there

7346
07:36:30,080 --> 07:36:31,920
oh do they implement oh no i'm sorry

7347
07:36:31,920 --> 07:36:34,000
that i'm i'm so foolish i thought it was

7348
07:36:34,000 --> 07:36:35,840
important it's not it's like on the

7349
07:36:35,840 --> 07:36:37,760
screen thank you

7350
07:36:37,760 --> 07:36:39,760
i should just read and they really like

7351
07:36:39,760 --> 07:36:41,920
their z field don't they

7352
07:36:41,920 --> 07:36:43,120
they really do

7353
07:36:43,120 --> 07:36:44,558
it's just strange because i don't think

7354
07:36:44,558 --> 07:36:46,558
i've ever even used that in my life

7355
07:36:46,558 --> 07:36:48,638
i've used a couple seriously what what

7356
07:36:48,638 --> 07:36:50,240
niche that's filling i'm gonna pull it

7357
07:36:50,240 --> 07:36:52,000
up in my pie doc right now

7358
07:36:52,000 --> 07:36:53,520
and just implement it real quick and see

7359
07:36:53,520 --> 07:36:54,478
what it

7360
07:36:54,478 --> 07:36:56,080
i just i think they could have easily

7361
07:36:56,080 --> 07:36:57,920
just done instead like a

7362
07:36:57,920 --> 07:36:58,958
uh

7363
07:36:58,958 --> 07:37:01,040
had a numeric string with zeros on the

7364
07:37:01,040 --> 07:37:03,120
left to fill a field with the given

7365
07:37:03,120 --> 07:37:05,120
width so so this is just

7366
07:37:05,120 --> 07:37:07,680
percent you know percent number

7367
07:37:07,680 --> 07:37:08,958
yeah

7368
07:37:08,958 --> 07:37:10,878
yeah

7369
07:37:10,878 --> 07:37:12,240
huh

7370
07:37:12,240 --> 07:37:16,558
interesting oh pad pad to 64. yeah

7371
07:37:16,558 --> 07:37:17,920
yeah

7372
07:37:17,920 --> 07:37:18,798
okay

7373
07:37:18,798 --> 07:37:21,120
so they're just because this can does

7374
07:37:21,120 --> 07:37:24,160
this feel like uh an a2i of like a very

7375
07:37:24,160 --> 07:37:26,958
specific length oh they do uh well d

7376
07:37:26,958 --> 07:37:30,240
print f a percent seven l u

7377
07:37:30,240 --> 07:37:31,680
that's writing the blob oh so they're

7378
07:37:31,680 --> 07:37:34,000
reading the code that produces

7379
07:37:34,000 --> 07:37:38,240
a block yeah

7380
07:37:38,240 --> 07:37:40,240
well i think it was have you seen the

7381
07:37:40,240 --> 07:37:42,000
mem copy yet because they're kind of i

7382
07:37:42,000 --> 07:37:43,760
haven't actually i did see a mem copy at

7383
07:37:43,760 --> 07:37:45,920
the end of the function that is handling

7384
07:37:45,920 --> 07:37:47,920
kind of the switch so they do have like

7385
07:37:47,920 --> 07:37:49,840
a right package blob in here which looks

7386
07:37:49,840 --> 07:37:52,000
like that they're implementing this

7387
07:37:52,000 --> 07:37:53,840
functionality in python right now right

7388
07:37:53,840 --> 07:37:55,680
just so they can create valid packages

7389
07:37:55,680 --> 07:37:58,398
there's the copy at the end

7390
07:37:58,398 --> 07:38:00,320
so right after it reads it it does

7391
07:38:00,320 --> 07:38:02,478
something with a mem copy and they seem

7392
07:38:02,478 --> 07:38:03,600
to be

7393
07:38:03,600 --> 07:38:05,680
interested in this so there's there are

7394
07:38:05,680 --> 07:38:08,000
stat canaries there's no pi there's no

7395
07:38:08,000 --> 07:38:09,680
uh there is nx

7396
07:38:09,680 --> 07:38:12,160
and the railroad shouldn't really matter

7397
07:38:12,160 --> 07:38:14,798
too much in this specific case

7398
07:38:14,798 --> 07:38:16,240
um

7399
07:38:16,240 --> 07:38:17,760
so i think they are this would

7400
07:38:17,760 --> 07:38:19,840
potentially be a heap overflow because

7401
07:38:19,840 --> 07:38:21,840
this this allocation from what it looks

7402
07:38:21,840 --> 07:38:24,320
like is in we have a couple mallocs in

7403
07:38:24,320 --> 07:38:26,320
there of sizes that i think are user

7404
07:38:26,320 --> 07:38:28,320
controlled and there was a cowlick at

7405
07:38:28,320 --> 07:38:30,398
the start for 1030 hex bytes which i

7406
07:38:30,398 --> 07:38:32,878
think is where the like big thing was

7407
07:38:32,878 --> 07:38:35,280
red interesting

7408
07:38:35,280 --> 07:38:37,360
they are doing something that i do a lot

7409
07:38:37,360 --> 07:38:39,360
is run it multiple times and see if it

7410
07:38:39,360 --> 07:38:41,360
somehow works the next time which never

7411
07:38:41,360 --> 07:38:43,920
is the case but it feels really good

7412
07:38:43,920 --> 07:38:46,558
it's just just maybe just just just

7413
07:38:46,558 --> 07:38:47,840
maybe

7414
07:38:47,840 --> 07:38:50,320
maybe the first run for some reason

7415
07:38:50,320 --> 07:38:51,680
you've heard the definition of there's

7416
07:38:51,680 --> 07:38:54,160
like a straight game that hit my my ram

7417
07:38:54,160 --> 07:38:55,840
flip some bits and you just you'd never

7418
07:38:55,840 --> 07:38:58,478
want that to be the reason you lost

7419
07:38:58,478 --> 07:39:00,320
so well i we did see a couple people

7420
07:39:00,320 --> 07:39:01,920
brute forcing offsets by running and

7421
07:39:01,920 --> 07:39:03,120
speaking which they would just wrap it

7422
07:39:03,120 --> 07:39:04,478
in a loop and like try the whole thing

7423
07:39:04,478 --> 07:39:06,240
at different offsets until it worked so

7424
07:39:06,240 --> 07:39:07,600
that's i mean but that's that's a tried

7425
07:39:07,600 --> 07:39:09,520
and true uh technique

7426
07:39:09,520 --> 07:39:11,680
it's tough because that sort of strategy

7427
07:39:11,680 --> 07:39:14,320
i think is the fastest approach like if

7428
07:39:14,320 --> 07:39:16,160
your goal is on speed if you're doing

7429
07:39:16,160 --> 07:39:19,360
something like uh like a knob cert it's

7430
07:39:19,360 --> 07:39:21,360
the fastest way to go but the risk is so

7431
07:39:21,360 --> 07:39:24,080
high because you build up no knowledge

7432
07:39:24,080 --> 07:39:27,200
by doing that yes so if you miss

7433
07:39:27,200 --> 07:39:29,360
you're back to square one yeah yep i you

7434
07:39:29,360 --> 07:39:31,680
know i totally agree uh and i love the

7435
07:39:31,680 --> 07:39:33,440
sort of game theory trade-offs so that

7436
07:39:33,440 --> 07:39:35,360
risk reward explorer exploit kind of

7437
07:39:35,360 --> 07:39:36,958
kind of thing uh so we do have a

7438
07:39:36,958 --> 07:39:40,000
question in chat uh from j3 about who

7439
07:39:40,000 --> 07:39:41,440
participated in the creation of all

7440
07:39:41,440 --> 07:39:43,520
these life challenges and how much time

7441
07:39:43,520 --> 07:39:46,320
do they create them uh the time varies

7442
07:39:46,320 --> 07:39:47,920
tremendously this this was definitely

7443
07:39:47,920 --> 07:39:49,760
one of the the i think the bigger

7444
07:39:49,760 --> 07:39:52,558
challenges that took a lot more time um

7445
07:39:52,558 --> 07:39:54,240
because it was obviously a little the

7446
07:39:54,240 --> 07:39:56,160
the structure of this and the the logic

7447
07:39:56,160 --> 07:39:58,240
behind it and creating the the working

7448
07:39:58,240 --> 07:40:00,398
exploit was was a little bit more work

7449
07:40:00,398 --> 07:40:02,478
uh compare that to like n volumes for

7450
07:40:02,478 --> 07:40:04,320
example which is the one earlier which

7451
07:40:04,320 --> 07:40:05,360
um

7452
07:40:05,360 --> 07:40:07,280
uh carl wrote last night as i sat next

7453
07:40:07,280 --> 07:40:09,280
to him we laughed our butts off because

7454
07:40:09,280 --> 07:40:11,680
it was it was just like we made a menu

7455
07:40:11,680 --> 07:40:13,280
of every volume type we could think of

7456
07:40:13,280 --> 07:40:14,478
and the ones that were jokes like

7457
07:40:14,478 --> 07:40:16,320
crosstalk scripting we just you know

7458
07:40:16,320 --> 07:40:17,920
printed a funny message and then there

7459
07:40:17,920 --> 07:40:18,878
was a bunch of other ones that we

7460
07:40:18,878 --> 07:40:19,840
actually built little primitive

7461
07:40:19,840 --> 07:40:21,120
prototypes you have a form of stream bug

7462
07:40:21,120 --> 07:40:22,080
you added this plugin so it was like

7463
07:40:22,080 --> 07:40:23,680
yeah there's a lot of bugs which one's

7464
07:40:23,680 --> 07:40:25,920
fastest i don't know figure it out

7465
07:40:25,920 --> 07:40:27,200
um and so like there was a couple of

7466
07:40:27,200 --> 07:40:29,200
trolls like there was a um

7467
07:40:29,200 --> 07:40:31,040
a stack baseball for overflow called

7468
07:40:31,040 --> 07:40:33,200
gets but then immediately exit before

7469
07:40:33,200 --> 07:40:35,840
your uh return and so

7470
07:40:35,840 --> 07:40:37,200
yeah you override a pointer that you

7471
07:40:37,200 --> 07:40:38,798
never got to it so there's a couple of

7472
07:40:38,798 --> 07:40:40,080
just little mean things i mean they

7473
07:40:40,080 --> 07:40:40,958
didn't bite on that one i think

7474
07:40:40,958 --> 07:40:43,200
everybody saw that and and caught it so

7475
07:40:43,200 --> 07:40:44,878
we definitely had um

7476
07:40:44,878 --> 07:40:46,320
a bit like that would took like an hour

7477
07:40:46,320 --> 07:40:48,000
to kind of kind of throw together maybe

7478
07:40:48,000 --> 07:40:49,840
uh even including like putting together

7479
07:40:49,840 --> 07:40:51,280
a little exploit knowing the intended

7480
07:40:51,280 --> 07:40:53,440
solution so some of them very quickly

7481
07:40:53,440 --> 07:40:55,440
someone take a lot longer time

7482
07:40:55,440 --> 07:40:57,520
what are people chasing for here there's

7483
07:40:57,520 --> 07:40:58,878
not like a key or anything because this

7484
07:40:58,878 --> 07:41:00,638
isn't server based so there's no hidden

7485
07:41:00,638 --> 07:41:02,240
secret so it's just

7486
07:41:02,240 --> 07:41:05,600
who gets oh this no so there is a server

7487
07:41:05,600 --> 07:41:07,360
here this is running on our

7488
07:41:07,360 --> 07:41:10,320
infrastructure and hey we have got it in

7489
07:41:10,320 --> 07:41:12,478
a community user as well inside a docker

7490
07:41:12,478 --> 07:41:14,718
and if they have an exploit working that

7491
07:41:14,718 --> 07:41:16,320
they run against our instance they get

7492
07:41:16,320 --> 07:41:17,600
they get a shell

7493
07:41:17,600 --> 07:41:20,398
and there's actually a suid binary

7494
07:41:20,398 --> 07:41:22,160
that they can run and each team can run

7495
07:41:22,160 --> 07:41:24,240
it with their like team id so depending

7496
07:41:24,240 --> 07:41:25,600
which side of the table they're sitting

7497
07:41:25,600 --> 07:41:26,878
on their team one or team two for each

7498
07:41:26,878 --> 07:41:28,878
event and it will actually automatically

7499
07:41:28,878 --> 07:41:31,120
trigger an obs overlay that we get a

7500
07:41:31,120 --> 07:41:32,638
little winter dialogue so occasionally

7501
07:41:32,638 --> 07:41:34,080
that's awesome yeah occasionally when

7502
07:41:34,080 --> 07:41:35,200
we're not paying attention we're looking

7503
07:41:35,200 --> 07:41:36,558
at one team and like the winner thing

7504
07:41:36,558 --> 07:41:38,080
pops up and we're like oh no we missed

7505
07:41:38,080 --> 07:41:39,040
it it was happening over the other

7506
07:41:39,040 --> 07:41:40,398
screen

7507
07:41:40,398 --> 07:41:41,760
shout out of course to all the people

7508
07:41:41,760 --> 07:41:43,600
doing challenges and logistics i know

7509
07:41:43,600 --> 07:41:45,840
how hard it is to put stuff like this on

7510
07:41:45,840 --> 07:41:47,760
so uh thank you everyone for for doing

7511
07:41:47,760 --> 07:41:48,958
all that that's

7512
07:41:48,958 --> 07:41:50,558
i'm sure it's been a stressful week for

7513
07:41:50,558 --> 07:41:52,558
a lot of people when defcon is a

7514
07:41:52,558 --> 07:41:55,040
vacation for many others it's been very

7515
07:41:55,040 --> 07:41:56,718
very busy okay so we got a hint by the

7516
07:41:56,718 --> 07:41:57,760
way that we're going to give to the

7517
07:41:57,760 --> 07:41:58,958
teams

7518
07:41:58,958 --> 07:42:03,200
from from ghost and so there's a

7519
07:42:03,200 --> 07:42:05,200
there's a hint that i it went by real

7520
07:42:05,200 --> 07:42:06,478
quick for me

7521
07:42:06,478 --> 07:42:07,360
um

7522
07:42:07,360 --> 07:42:08,958
but uh i think with the production crew

7523
07:42:08,958 --> 07:42:10,080
and so yeah let me just give a quick

7524
07:42:10,080 --> 07:42:11,280
summary of like some of the folks there

7525
07:42:11,280 --> 07:42:12,240
was also the question of who's been

7526
07:42:12,240 --> 07:42:14,000
working on challenges right so we had i

7527
07:42:14,000 --> 07:42:16,478
would say i think about six people i i

7528
07:42:16,478 --> 07:42:18,080
did like i said uh earlier i mentioned i

7529
07:42:18,080 --> 07:42:19,840
worked a little bit on story time but i

7530
07:42:19,840 --> 07:42:21,440
primarily

7531
07:42:21,440 --> 07:42:23,600
um did all of the streaming

7532
07:42:23,600 --> 07:42:26,958
infrastructure so the overlays the some

7533
07:42:26,958 --> 07:42:29,040
of the obs setup the camera the lights

7534
07:42:29,040 --> 07:42:30,638
the sound and like that was kind of my

7535
07:42:30,638 --> 07:42:32,478
responsibilities getting all that stuff

7536
07:42:32,478 --> 07:42:33,440
um

7537
07:42:33,440 --> 07:42:35,520
we had uh josh

7538
07:42:35,520 --> 07:42:37,600
uh and glenn who cranked out a bunch of

7539
07:42:37,600 --> 07:42:38,798
challenges worked on a bunch of that

7540
07:42:38,798 --> 07:42:40,398
stuff and also did a little bit of the

7541
07:42:40,398 --> 07:42:41,840
infrastructure for the game network for

7542
07:42:41,840 --> 07:42:43,440
like the thing that teams are throwing

7543
07:42:43,440 --> 07:42:45,920
against um carl did a whole lot of

7544
07:42:45,920 --> 07:42:47,200
everything so he wrote a lot of

7545
07:42:47,200 --> 07:42:49,280
challenges uh he also helped a little

7546
07:42:49,280 --> 07:42:51,440
bit with like the obs so the the binary

7547
07:42:51,440 --> 07:42:53,040
that triggers the overlay and some of

7548
07:42:53,040 --> 07:42:54,878
this some of the other obs stuff that

7549
07:42:54,878 --> 07:42:56,558
like automatically updates teams we

7550
07:42:56,558 --> 07:42:57,520
actually have separate infrastructure

7551
07:42:57,520 --> 07:42:59,040
that every round

7552
07:42:59,040 --> 07:43:00,478
automatically like pulls from a

7553
07:43:00,478 --> 07:43:02,398
challenge and we'll

7554
07:43:02,398 --> 07:43:04,398
uh update our brackets and update which

7555
07:43:04,398 --> 07:43:05,840
team is playing in each round and that's

7556
07:43:05,840 --> 07:43:07,440
like that's fully automated

7557
07:43:07,440 --> 07:43:09,120
um

7558
07:43:09,120 --> 07:43:11,440
he worked on that so yeah it's been it's

7559
07:43:11,440 --> 07:43:12,798
been a lot of people

7560
07:43:12,798 --> 07:43:15,280
uh and and you know just for context uh

7561
07:43:15,280 --> 07:43:16,320
this is like

7562
07:43:16,320 --> 07:43:19,040
a little bit little bit of the nautilus

7563
07:43:19,040 --> 07:43:20,718
institute's ctf game which is even a

7564
07:43:20,718 --> 07:43:22,638
much broader bigger they've got

7565
07:43:22,638 --> 07:43:24,478
twice the number of people that we do uh

7566
07:43:24,478 --> 07:43:25,680
that have making challenges for a long

7567
07:43:25,680 --> 07:43:27,680
time too so it's you know the teams have

7568
07:43:27,680 --> 07:43:29,600
gotten bigger but so has the organizers

7569
07:43:29,600 --> 07:43:31,120
so the number of people that are that

7570
07:43:31,120 --> 07:43:32,000
are playing

7571
07:43:32,000 --> 07:43:34,080
so yeah that's pretty crazy we are

7572
07:43:34,080 --> 07:43:35,840
coming i don't think recopy was putting

7573
07:43:35,840 --> 07:43:38,080
a bin sh in there for like a script or a

7574
07:43:38,080 --> 07:43:40,798
string so they they seem to have some

7575
07:43:40,798 --> 07:43:42,718
idea that they can maybe run a script or

7576
07:43:42,718 --> 07:43:44,798
run a command i don't know if that's the

7577
07:43:44,798 --> 07:43:47,280
case i i did see a system

7578
07:43:47,280 --> 07:43:49,200
so so there is a new real quick the hint

7579
07:43:49,200 --> 07:43:52,958
that's going in now says uh file data

7580
07:43:52,958 --> 07:43:54,240
give me the full text again because i

7581
07:43:54,240 --> 07:43:56,798
forgot already too little sleep file

7582
07:43:56,798 --> 07:43:59,600
data and script text overlap

7583
07:43:59,600 --> 07:44:00,878
so that's the team that hit the both

7584
07:44:00,878 --> 07:44:02,958
teams working the file data and text

7585
07:44:02,958 --> 07:44:05,360
script overlap so there's a union

7586
07:44:05,360 --> 07:44:07,040
between those two

7587
07:44:07,040 --> 07:44:10,160
and that's the next tint but i i i

7588
07:44:10,160 --> 07:44:11,600
actually really like this challenge i

7589
07:44:11,600 --> 07:44:13,360
think this is a really nice challenge i

7590
07:44:13,360 --> 07:44:15,280
just think it's a little large on one

7591
07:44:15,280 --> 07:44:17,600
screen right the basically all the logic

7592
07:44:17,600 --> 07:44:20,958
is there but i still think it's gonna be

7593
07:44:20,958 --> 07:44:23,280
too much for the time period so i i'm

7594
07:44:23,280 --> 07:44:24,798
predicting this might this is going to

7595
07:44:24,798 --> 07:44:26,558
end up a sudden death one

7596
07:44:26,558 --> 07:44:28,000
because i just don't see even with the

7597
07:44:28,000 --> 07:44:30,080
second hit i don't see anybody close i

7598
07:44:30,080 --> 07:44:32,718
mean we're seeing ben sh

7599
07:44:32,718 --> 07:44:34,718
but i don't yeah i don't know that

7600
07:44:34,718 --> 07:44:37,200
that's actually a wild guess yeah yeah i

7601
07:44:37,200 --> 07:44:38,798
don't think that they're actually i

7602
07:44:38,798 --> 07:44:40,558
would love to be wrong i would be

7603
07:44:40,558 --> 07:44:42,240
ecstatic if all of a sudden a winner

7604
07:44:42,240 --> 07:44:44,160
pops up and it's happened before

7605
07:44:44,160 --> 07:44:46,958
so i did see a failure to open a file

7606
07:44:46,958 --> 07:44:48,718
like file name too long which means that

7607
07:44:48,718 --> 07:44:50,558
they definitely passed

7608
07:44:50,558 --> 07:44:52,000
a bunch of a's i think that was cyber

7609
07:44:52,000 --> 07:44:54,638
cloud yeah passed a lot of a's into i

7610
07:44:54,638 --> 07:44:56,240
think they had that one open call i

7611
07:44:56,240 --> 07:44:57,520
think they had that one like 20 minutes

7612
07:44:57,520 --> 07:44:58,958
ago i think i remember seeing that same

7613
07:44:58,958 --> 07:45:01,200
exact error message uh earlier in the

7614
07:45:01,200 --> 07:45:03,520
stream so i i don't think they're like

7615
07:45:03,520 --> 07:45:05,680
hitting new stuff it it feels to me like

7616
07:45:05,680 --> 07:45:08,080
they're still

7617
07:45:08,080 --> 07:45:09,520
they they aren't moving with the

7618
07:45:09,520 --> 07:45:10,958
intensity of somebody who knows what

7619
07:45:10,958 --> 07:45:12,320
they want to do

7620
07:45:12,320 --> 07:45:14,718
right right like they're still exploring

7621
07:45:14,718 --> 07:45:16,718
so this is what i just feel like

7622
07:45:16,718 --> 07:45:19,040
they they don't have enough momentum to

7623
07:45:19,040 --> 07:45:21,200
to finish this one out and again this is

7624
07:45:21,200 --> 07:45:22,798
not because they're not good it's not

7625
07:45:22,798 --> 07:45:25,120
this is just a hard challenge to do on

7626
07:45:25,120 --> 07:45:28,638
the time pressure on on stage and so pig

7627
07:45:28,638 --> 07:45:30,638
has a comment saying overflow on that

7628
07:45:30,638 --> 07:45:32,958
mem copy i mean

7629
07:45:32,958 --> 07:45:34,000
well we did tell them to look at the

7630
07:45:34,000 --> 07:45:35,360
overflow all right look at the mem copy

7631
07:45:35,360 --> 07:45:36,558
so that's you know that's a reasonable

7632
07:45:36,558 --> 07:45:39,200
guess that's uh

7633
07:45:39,200 --> 07:45:40,878
and then it looks like there's a file

7634
07:45:40,878 --> 07:45:42,558
handler which is some sort of a a

7635
07:45:42,558 --> 07:45:43,840
function pointer so there's like some

7636
07:45:43,840 --> 07:45:45,840
sort of a dispatch maybe based on so

7637
07:45:45,840 --> 07:45:48,080
here's what we see

7638
07:45:48,080 --> 07:45:50,320
the there is some sort of like a tlv

7639
07:45:50,320 --> 07:45:52,958
structure and you can have multiple of

7640
07:45:52,958 --> 07:45:54,398
these types kind of

7641
07:45:54,398 --> 07:45:56,798
kind of you know together i wonder if

7642
07:45:56,798 --> 07:45:58,558
there's more of a type confusion bug if

7643
07:45:58,558 --> 07:46:01,360
there is an overlap there maybe you can

7644
07:46:01,360 --> 07:46:02,320
uh

7645
07:46:02,320 --> 07:46:04,718
cause the you can cause validation of a

7646
07:46:04,718 --> 07:46:06,798
path but then send it a script or vice

7647
07:46:06,798 --> 07:46:08,558
versa or something like that yeah that's

7648
07:46:08,558 --> 07:46:11,120
a that's a good point um i mean that

7649
07:46:11,120 --> 07:46:12,398
does make sense with the description the

7650
07:46:12,398 --> 07:46:13,440
hint that we just gave them right that

7651
07:46:13,440 --> 07:46:15,520
those data's overlap

7652
07:46:15,520 --> 07:46:18,798
that does seem like a good uh a good

7653
07:46:18,798 --> 07:46:20,638
hint that that might be the case okay so

7654
07:46:20,638 --> 07:46:22,638
back over there still running in keemu

7655
07:46:22,638 --> 07:46:24,798
so i think the current plan is we're

7656
07:46:24,798 --> 07:46:26,638
going to let him run so we do we start

7657
07:46:26,638 --> 07:46:28,240
exactly on time on this one do you guys

7658
07:46:28,240 --> 07:46:29,520
remember what time we started on this

7659
07:46:29,520 --> 07:46:30,558
one

7660
07:46:30,558 --> 07:46:33,120
i think we were pretty close

7661
07:46:33,120 --> 07:46:34,240
i think we're i think we're close to on

7662
07:46:34,240 --> 07:46:36,798
time on this one so we uh we can go a

7663
07:46:36,798 --> 07:46:38,398
little bit uh

7664
07:46:38,398 --> 07:46:39,680
yeah we don't have a whole lot of time

7665
07:46:39,680 --> 07:46:40,798
uh because we again we have to do the

7666
07:46:40,798 --> 07:46:42,000
last challenge so we're going to go to

7667
07:46:42,000 --> 07:46:42,878
them

7668
07:46:42,878 --> 07:46:45,440
uh in just like four minutes uh and i'm

7669
07:46:45,440 --> 07:46:46,398
going to give them the option and we're

7670
07:46:46,398 --> 07:46:47,840
going to say

7671
07:46:47,840 --> 07:46:49,600
we think it's time for for sudden death

7672
07:46:49,600 --> 07:46:51,120
now unless one of you unless you both

7673
07:46:51,120 --> 07:46:52,478
really want to keep working for a couple

7674
07:46:52,478 --> 07:46:53,680
more minutes and you think you're really

7675
07:46:53,680 --> 07:46:54,718
going to do it

7676
07:46:54,718 --> 07:46:56,478
because we do have a sun death that

7677
07:46:56,478 --> 07:46:57,760
probably is doable in less than five

7678
07:46:57,760 --> 07:47:00,878
minutes like we've got some easy ones um

7679
07:47:00,878 --> 07:47:03,840
so we can we can drop one of those uh

7680
07:47:03,840 --> 07:47:05,600
current state pretty lost how to leak

7681
07:47:05,600 --> 07:47:08,000
gdb is broken yeah yeah okay so that's

7682
07:47:08,000 --> 07:47:10,000
that's definitely a request for uh we're

7683
07:47:10,000 --> 07:47:11,120
gonna have to we're gonna have to go to

7684
07:47:11,120 --> 07:47:12,958
a sudden death um because i know that

7685
07:47:12,958 --> 07:47:15,520
given that cyber cloud is not willing to

7686
07:47:15,520 --> 07:47:16,478
to wait because they don't feel like

7687
07:47:16,478 --> 07:47:18,000
they have any progress

7688
07:47:18,000 --> 07:47:20,160
uh yeah yeah you can't gdp in that

7689
07:47:20,160 --> 07:47:21,920
environment now yeah you can't so you

7690
07:47:21,920 --> 07:47:23,680
can actually uh debug this in two

7691
07:47:23,680 --> 07:47:25,600
different ways you can use chemo under s

7692
07:47:25,600 --> 07:47:28,558
trace equals one to enable s tracing in

7693
07:47:28,558 --> 07:47:30,798
kimu to see like what's going on you can

7694
07:47:30,798 --> 07:47:33,200
also do kimu under gdb equals port

7695
07:47:33,200 --> 07:47:36,000
number and you can connect into that

7696
07:47:36,000 --> 07:47:36,798
um

7697
07:47:36,798 --> 07:47:39,440
gdb session that that yeah

7698
07:47:39,440 --> 07:47:40,958
you're using the gdp interface from

7699
07:47:40,958 --> 07:47:43,040
keemu itself right correct yeah yeah

7700
07:47:43,040 --> 07:47:44,958
yeah it's it's a little bit scuffed it

7701
07:47:44,958 --> 07:47:47,120
is i've tried to use that before yeah

7702
07:47:47,120 --> 07:47:49,360
it'll get you what you need

7703
07:47:49,360 --> 07:47:51,760
okay all right so it's not i don't think

7704
07:47:51,760 --> 07:47:54,558
that multi are oh hmm

7705
07:47:54,558 --> 07:47:56,320
all right i don't know we're gonna we're

7706
07:47:56,320 --> 07:47:58,240
gonna queue up it and that print does

7707
07:47:58,240 --> 07:48:01,680
look like it's a kimu sort of one but

7708
07:48:01,680 --> 07:48:03,440
we're well i think we're gonna try to do

7709
07:48:03,440 --> 07:48:05,360
chemo under gdp i think we got to go

7710
07:48:05,360 --> 07:48:07,520
sudden death right here so so let's let

7711
07:48:07,520 --> 07:48:09,040
me let me let me queue this up we're

7712
07:48:09,040 --> 07:48:10,160
going to make sure

7713
07:48:10,160 --> 07:48:13,280
uh sudden death is is coming up um

7714
07:48:13,280 --> 07:48:14,398
um

7715
07:48:14,398 --> 07:48:16,080
we are going to go to community no we

7716
07:48:16,080 --> 07:48:17,360
can just leave it on the camera i think

7717
07:48:17,360 --> 07:48:18,638
it'll be fine we don't have to go into

7718
07:48:18,638 --> 07:48:21,520
mission um we'll we'll uh we'll go over

7719
07:48:21,520 --> 07:48:22,878
there i'll tell the teams we're going to

7720
07:48:22,878 --> 07:48:24,478
sudden death unfortunately it was too

7721
07:48:24,478 --> 07:48:25,760
hard of a challenge we're going to

7722
07:48:25,760 --> 07:48:30,160
prepare a new one and um uh we'll we'll

7723
07:48:30,160 --> 07:48:31,200
unleash them on that so i'm gonna put my

7724
07:48:31,200 --> 07:48:32,478
headset off and i'll be right back all

7725
07:48:32,478 --> 07:48:33,440
right

7726
07:48:33,440 --> 07:48:36,638
yeah see you in a second

7727
07:48:43,280 --> 07:48:47,160
i think it's just me and y'all

7728
07:48:48,718 --> 07:48:50,080
how's everyone doing today people

7729
07:48:50,080 --> 07:48:54,240
enjoying the ctf content having some fun

7730
07:48:59,840 --> 07:49:01,440
i'm very curious to see what the sudden

7731
07:49:01,440 --> 07:49:03,440
death challenge is going to be that's

7732
07:49:03,440 --> 07:49:05,120
definitely going to be interesting it

7733
07:49:05,120 --> 07:49:06,878
sounds like they do have if they said

7734
07:49:06,878 --> 07:49:08,398
some things can be solved in less than

7735
07:49:08,398 --> 07:49:11,280
15 minutes i am very curious what kind

7736
07:49:11,280 --> 07:49:12,478
of challenges they're going to pull out

7737
07:49:12,478 --> 07:49:14,798
here they could just be

7738
07:49:14,798 --> 07:49:17,280
ridiculous you know standard stack

7739
07:49:17,280 --> 07:49:18,718
overflow sort of things i wonder if

7740
07:49:18,718 --> 07:49:20,320
there will be mitigations or cookies

7741
07:49:20,320 --> 07:49:25,520
stuff like that so i i can't wait to see

7742
07:49:25,600 --> 07:49:28,478
alone with gamoza hey how's it going

7743
07:49:28,478 --> 07:49:31,760
ctf content is fun for sure i i

7744
07:49:31,760 --> 07:49:33,600
it doesn't even cross my mind too much

7745
07:49:33,600 --> 07:49:35,200
you know when uh jordan reached out and

7746
07:49:35,200 --> 07:49:36,478
like do you want to do some commentary

7747
07:49:36,478 --> 07:49:39,600
in live ctf absolutely why not

7748
07:49:39,600 --> 07:49:41,040
sounds super fun

7749
07:49:41,040 --> 07:49:43,520
so i it's it's so fun to see people

7750
07:49:43,520 --> 07:49:45,200
working kind of in their own

7751
07:49:45,200 --> 07:49:47,600
environments uh i'm guessing those are

7752
07:49:47,600 --> 07:49:49,040
the competitors right there i actually

7753
07:49:49,040 --> 07:49:51,040
don't know i'm i'm not physically there

7754
07:49:51,040 --> 07:49:54,320
i'm in the i'm in my my my house

7755
07:49:54,320 --> 07:49:56,958
um but i'm guessing those

7756
07:49:56,958 --> 07:49:57,840
go ahead and do are the

7757
07:49:57,840 --> 07:49:59,680
five minutes we're gonna wait till five

7758
07:49:59,680 --> 07:50:02,478
more minutes uh the the the conversation

7759
07:50:02,478 --> 07:50:05,360
with the teams went uh rekha pig is is

7760
07:50:05,360 --> 07:50:06,638
convinced they got it they think they

7761
07:50:06,638 --> 07:50:07,600
have it

7762
07:50:07,600 --> 07:50:08,958
all right so

7763
07:50:08,958 --> 07:50:10,718
i love the confidence and we'll see if

7764
07:50:10,718 --> 07:50:12,478
they can do it sauerkraut's like i don't

7765
07:50:12,478 --> 07:50:13,760
think so but i'm willing to go for a few

7766
07:50:13,760 --> 07:50:14,958
more minutes

7767
07:50:14,958 --> 07:50:16,240
um

7768
07:50:16,240 --> 07:50:19,120
and so we might uh

7769
07:50:19,120 --> 07:50:20,958
so we'll just we'll keep an eye for five

7770
07:50:20,958 --> 07:50:22,240
more minutes but we're gonna be ready to

7771
07:50:22,240 --> 07:50:23,520
go because

7772
07:50:23,520 --> 07:50:25,200
uh we don't want to eat into our last

7773
07:50:25,200 --> 07:50:26,878
match uh too much because we're trying

7774
07:50:26,878 --> 07:50:28,080
to keep we're trying to keep on schedule

7775
07:50:28,080 --> 07:50:29,200
and be fair to

7776
07:50:29,200 --> 07:50:31,040
all the teams but

7777
07:50:31,040 --> 07:50:34,160
let's see let's see what they can do

7778
07:50:34,160 --> 07:50:35,520
someone asked have you learned anything

7779
07:50:35,520 --> 07:50:37,360
cool from this i i think that was

7780
07:50:37,360 --> 07:50:38,878
directed at me when i was kind of here

7781
07:50:38,878 --> 07:50:41,520
alone um the only thing that i saw here

7782
07:50:41,520 --> 07:50:42,798
that really stood out to me that i

7783
07:50:42,798 --> 07:50:45,120
really want to figure out is someone had

7784
07:50:45,120 --> 07:50:47,360
something that auto quoted a string they

7785
07:50:47,360 --> 07:50:48,878
were trying to convert like an actual

7786
07:50:48,878 --> 07:50:51,280
command line thing into the like the the

7787
07:50:51,280 --> 07:50:53,200
strings that you have to pass in as like

7788
07:50:53,200 --> 07:50:55,600
an array of strings and they like did

7789
07:50:55,600 --> 07:50:56,558
something

7790
07:50:56,558 --> 07:50:58,160
and they're in sublime so i don't know

7791
07:50:58,160 --> 07:50:59,520
if i can do that i mean obviously you

7792
07:50:59,520 --> 07:51:01,280
can do anything in them but i would like

7793
07:51:01,280 --> 07:51:03,440
to learn how to do that because i i

7794
07:51:03,440 --> 07:51:04,718
spend a lot of time putting quotes

7795
07:51:04,718 --> 07:51:06,798
around things i've i've seen a couple of

7796
07:51:06,798 --> 07:51:07,840
little tricks like that too yeah

7797
07:51:07,840 --> 07:51:10,240
somebody else earlier was using a uh

7798
07:51:10,240 --> 07:51:12,798
sublime with uh uh it was my one i

7799
07:51:12,798 --> 07:51:14,478
forgot what sex editor was maybe even

7800
07:51:14,478 --> 07:51:15,760
just visual studio but they were doing a

7801
07:51:15,760 --> 07:51:17,680
multi-cursor thing where they did the

7802
07:51:17,680 --> 07:51:19,360
multi-select actually it was carl last

7803
07:51:19,360 --> 07:51:20,958
night we were doing challenge creation

7804
07:51:20,958 --> 07:51:22,558
so yeah that's that's the best part

7805
07:51:22,558 --> 07:51:24,718
right it's not like the oh

7806
07:51:24,718 --> 07:51:26,080
i learned this new heap exploitation

7807
07:51:26,080 --> 07:51:27,920
technique sometimes it can be but like a

7808
07:51:27,920 --> 07:51:29,760
lot of it's just like oh i didn't know

7809
07:51:29,760 --> 07:51:30,958
about that command line tool i didn't

7810
07:51:30,958 --> 07:51:34,079
know about that that feature

7811
07:51:34,160 --> 07:51:36,320
so yeah this is interesting so they're

7812
07:51:36,320 --> 07:51:37,920
looking at the script handler so it

7813
07:51:37,920 --> 07:51:40,240
looks like rekha pick really is is set

7814
07:51:40,240 --> 07:51:41,600
on the script

7815
07:51:41,600 --> 07:51:43,920
side

7816
07:51:44,958 --> 07:51:47,360
all right let's let's ask i'm curious

7817
07:51:47,360 --> 07:51:49,360
too of a challenge author uh if nick is

7818
07:51:49,360 --> 07:51:50,878
still watching the stream as we're

7819
07:51:50,878 --> 07:51:53,760
focusing here on rekka pig oh sauerkraut

7820
07:51:53,760 --> 07:51:56,320
really wants to debug her oh i feel i

7821
07:51:56,320 --> 07:51:59,680
feel that pain i feel that pain

7822
07:51:59,680 --> 07:52:01,360
yeah

7823
07:52:01,360 --> 07:52:04,080
and i i don't think their gdb is broken

7824
07:52:04,080 --> 07:52:05,840
that string looks like the the command

7825
07:52:05,840 --> 07:52:08,638
that you get when you run

7826
07:52:08,638 --> 07:52:09,920
either they're in a weird environment

7827
07:52:09,920 --> 07:52:11,760
where p trace is not allowed or they're

7828
07:52:11,760 --> 07:52:14,398
trying to run that that gdb in in that

7829
07:52:14,398 --> 07:52:16,558
chemo environment and and chemo will not

7830
07:52:16,558 --> 07:52:18,398
take that yeah but they should be able

7831
07:52:18,398 --> 07:52:20,638
to do kimu under gdb

7832
07:52:20,638 --> 07:52:21,920
obviously that's going to be a hard one

7833
07:52:21,920 --> 07:52:24,080
to figure out i mean if they ran kimu-h

7834
07:52:24,080 --> 07:52:25,600
it would be right there in like 10 lines

7835
07:52:25,600 --> 07:52:30,080
of text yep and even just grab it uh but

7836
07:52:30,080 --> 07:52:31,040
that

7837
07:52:31,040 --> 07:52:33,040
maybe it's their actual host environment

7838
07:52:33,040 --> 07:52:34,638
that doesn't allow them allowing them to

7839
07:52:34,638 --> 07:52:37,040
debug but that message looks exactly

7840
07:52:37,040 --> 07:52:38,718
that p trace not supported

7841
07:52:38,718 --> 07:52:40,558
you literally predicted it you called

7842
07:52:40,558 --> 07:52:41,840
that from the very very beginning you

7843
07:52:41,840 --> 07:52:43,200
said oh they're gonna run into this and

7844
07:52:43,200 --> 07:52:44,798
sure enough they exactly did so i think

7845
07:52:44,798 --> 07:52:46,320
i think you're right okay so we did oh

7846
07:52:46,320 --> 07:52:47,360
all right so we're looking back over

7847
07:52:47,360 --> 07:52:49,520
here we got a segmentation fault but

7848
07:52:49,520 --> 07:52:51,840
are we looking for gadgets

7849
07:52:51,840 --> 07:52:54,718
i mean rekka pig

7850
07:52:54,718 --> 07:52:56,958
might be making progress here

7851
07:52:56,958 --> 07:52:58,958
they they were looking at that that

7852
07:52:58,958 --> 07:53:00,878
blicks right there and when i see them

7853
07:53:00,878 --> 07:53:03,120
looking at a it looked like they're just

7854
07:53:03,120 --> 07:53:05,040
looking for a gadget so oh is this

7855
07:53:05,040 --> 07:53:07,280
zigzag that is actually the correct way

7856
07:53:07,280 --> 07:53:09,760
to specify a debugger for for kimu so

7857
07:53:09,760 --> 07:53:11,840
this is gonna start a debugger that you

7858
07:53:11,840 --> 07:53:13,680
can then attach into

7859
07:53:13,680 --> 07:53:16,798
with target remote um so sorry sorry so

7860
07:53:16,798 --> 07:53:18,638
sour cloud is running it with the

7861
07:53:18,638 --> 07:53:20,638
debugger or rekka pig was was doing that

7862
07:53:20,638 --> 07:53:22,878
rekka pig okay yeah so they were

7863
07:53:22,878 --> 07:53:23,840
connected

7864
07:53:23,840 --> 07:53:25,200
they're connected into the kimono

7865
07:53:25,200 --> 07:53:27,760
debugger so they pass dash g

7866
07:53:27,760 --> 07:53:28,478
to

7867
07:53:28,478 --> 07:53:31,680
so kimu under gdb is the environment

7868
07:53:31,680 --> 07:53:33,120
variable but for

7869
07:53:33,120 --> 07:53:35,760
for chemouser you can specify basically

7870
07:53:35,760 --> 07:53:37,280
all of the arguments you can also

7871
07:53:37,280 --> 07:53:39,920
specify through environment variables

7872
07:53:39,920 --> 07:53:41,920
and that sometimes is really useful if

7873
07:53:41,920 --> 07:53:44,080
you're using if you're not familiar with

7874
07:53:44,080 --> 07:53:46,398
like bin format which allows you to dot

7875
07:53:46,398 --> 07:53:48,478
slash run executables that are from a

7876
07:53:48,478 --> 07:53:50,478
different architecture and it allows you

7877
07:53:50,478 --> 07:53:52,160
to pass those arguments even though

7878
07:53:52,160 --> 07:53:53,920
you're not invoking kimu where you can

7879
07:53:53,920 --> 07:53:56,080
pass the arguments in in this case they

7880
07:53:56,080 --> 07:53:59,280
just pass the g1234 standard port

7881
07:53:59,280 --> 07:54:00,718
everyone seems to use

7882
07:54:00,718 --> 07:54:02,638
um and then they can connect in here

7883
07:54:02,638 --> 07:54:04,320
with their debugger and they're actually

7884
07:54:04,320 --> 07:54:08,240
kind of seeing where they are so um

7885
07:54:08,240 --> 07:54:10,160
it is interesting i don't know are they

7886
07:54:10,160 --> 07:54:12,240
shipping up an address here yet i'm not

7887
07:54:12,240 --> 07:54:14,478
100 sure if they are

7888
07:54:14,478 --> 07:54:16,398
bad object type

7889
07:54:16,398 --> 07:54:18,478
um

7890
07:54:18,478 --> 07:54:21,440
so i i i think they're on their way it

7891
07:54:21,440 --> 07:54:22,718
does look like they're getting they're

7892
07:54:22,718 --> 07:54:24,398
getting some uh and at one point i mean

7893
07:54:24,398 --> 07:54:26,878
they had a

7894
07:54:28,478 --> 07:54:30,558
yeah and having a segfault you're

7895
07:54:30,558 --> 07:54:31,920
usually when you have a seg fault in the

7896
07:54:31,920 --> 07:54:33,840
ctf you're pretty you're pretty good

7897
07:54:33,840 --> 07:54:35,600
start

7898
07:54:35,600 --> 07:54:37,760
yeah so the author is is concurring that

7899
07:54:37,760 --> 07:54:39,040
they're they're honing in on it but the

7900
07:54:39,040 --> 07:54:40,718
question is

7901
07:54:40,718 --> 07:54:42,080
are they going to do the time available

7902
07:54:42,080 --> 07:54:43,760
and and we can't the problem is if we

7903
07:54:43,760 --> 07:54:46,080
keep letting it go

7904
07:54:46,080 --> 07:54:47,920
right

7905
07:54:47,920 --> 07:54:49,680
yeah if we you know it doesn't okay so

7906
07:54:49,680 --> 07:54:51,280
it's actually yeah listening to the

7907
07:54:51,280 --> 07:54:52,320
author it sounds like there's actually a

7908
07:54:52,320 --> 07:54:53,760
major component that's missing from this

7909
07:54:53,760 --> 07:54:55,360
exploit that we don't think is gonna do

7910
07:54:55,360 --> 07:54:57,600
it so we're gonna we're gonna cut over

7911
07:54:57,600 --> 07:54:59,120
in one minute we're gonna cut over to

7912
07:54:59,120 --> 07:55:01,600
our our sudden death and uh

7913
07:55:01,600 --> 07:55:03,600
challenge oh my gosh

7914
07:55:03,600 --> 07:55:04,798
well we're gonna let it go longer

7915
07:55:04,798 --> 07:55:06,320
because we do have to go to one of them

7916
07:55:06,320 --> 07:55:07,760
wins to move on

7917
07:55:07,760 --> 07:55:09,840
but this will just be a very very easy

7918
07:55:09,840 --> 07:55:12,080
challenge and it will be it'll be

7919
07:55:12,080 --> 07:55:13,680
stressful

7920
07:55:13,680 --> 07:55:15,760
they're looking at the the flag up there

7921
07:55:15,760 --> 07:55:17,600
the pointer off flag

7922
07:55:17,600 --> 07:55:20,478
and yeah you actually could see uh in in

7923
07:55:20,478 --> 07:55:22,398
um kimu they they were having problems

7924
07:55:22,398 --> 07:55:24,080
running this binary until they passed in

7925
07:55:24,080 --> 07:55:26,718
the correct dash cpu all arg which is

7926
07:55:26,718 --> 07:55:30,000
enabling all the feature sets of kimu

7927
07:55:30,000 --> 07:55:31,600
and i'm guessing the default cpu

7928
07:55:31,600 --> 07:55:34,878
probably doesn't actually support um

7929
07:55:34,878 --> 07:55:36,320
pointer authentication that would make

7930
07:55:36,320 --> 07:55:37,520
it make a ton of sense all right let me

7931
07:55:37,520 --> 07:55:38,958
go prepare the next one we're gonna

7932
07:55:38,958 --> 07:55:41,360
we're gonna cut over to the uh

7933
07:55:41,360 --> 07:55:45,360
uh to the new one so actually carl's are

7934
07:55:45,360 --> 07:55:46,638
sorry i'm gonna put my headset i'll be

7935
07:55:46,638 --> 07:55:49,120
back one second

7936
07:55:49,120 --> 07:55:53,557
wow this is this is really scary

7937
07:56:03,200 --> 07:56:04,478
you're not saying you knew the flag is

7938
07:56:04,478 --> 07:56:05,840
at the top of the help i've been working

7939
07:56:05,840 --> 07:56:06,718
with

7940
07:56:06,718 --> 07:56:08,320
kimu way too much keema users

7941
07:56:08,320 --> 07:56:09,760
specifically way too much for the past

7942
07:56:09,760 --> 07:56:11,680
like three months

7943
07:56:11,680 --> 07:56:13,600
shout out to cannoli the fast tracing

7944
07:56:13,600 --> 07:56:15,040
environment that i use

7945
07:56:15,040 --> 07:56:16,878
so it's that it's

7946
07:56:16,878 --> 07:56:19,520
kimu kimo makes things very difficult i

7947
07:56:19,520 --> 07:56:20,878
wasn't kidding when i said there's a lot

7948
07:56:20,878 --> 07:56:22,798
of bugs that's not that's not really

7949
07:56:22,798 --> 07:56:25,360
meant to be a dig at kimu it's just

7950
07:56:25,360 --> 07:56:27,760
it's a really rapidly you know uh

7951
07:56:27,760 --> 07:56:29,440
working environment and if you're not

7952
07:56:29,440 --> 07:56:31,520
familiar with keemu user it it passes

7953
07:56:31,520 --> 07:56:32,478
through

7954
07:56:32,478 --> 07:56:34,638
uh basically the guest systems to the

7955
07:56:34,638 --> 07:56:37,200
host so it has to like hook all of the

7956
07:56:37,200 --> 07:56:39,360
pointers fix everything up translate

7957
07:56:39,360 --> 07:56:40,718
things where there's

7958
07:56:40,718 --> 07:56:44,478
four three two one go all right we have

7959
07:56:44,478 --> 07:56:46,798
a new binary

7960
07:56:46,798 --> 07:56:48,160
uh sorry sorry what's it what's there

7961
07:56:48,160 --> 07:56:49,920
what's that is it stop sorry

7962
07:56:49,920 --> 07:56:51,520
he's gonna copy the stage

7963
07:56:51,520 --> 07:56:53,920
apologies

7964
07:56:53,920 --> 07:56:56,160
okay now go go

7965
07:56:56,160 --> 07:56:57,680
there's like two commands you've got to

7966
07:56:57,680 --> 07:56:58,958
run to replace the challenge i think you

7967
07:56:58,958 --> 07:57:00,958
ran the first and not the second oh no i

7968
07:57:00,958 --> 07:57:04,160
see yeah yeah so all right go ahead

7969
07:57:04,160 --> 07:57:06,080
to see how they are

7970
07:57:06,080 --> 07:57:08,320
but yeah go ahead and answer uh your the

7971
07:57:08,320 --> 07:57:09,440
other question sound like you were i cut

7972
07:57:09,440 --> 07:57:10,840
you off when you were you

7973
07:57:10,840 --> 07:57:12,398
were yeah i was trying to explain a

7974
07:57:12,398 --> 07:57:14,718
little bit about uh keemu user just that

7975
07:57:14,718 --> 07:57:17,040
environment and and how there are a lot

7976
07:57:17,040 --> 07:57:18,718
of edge cases there are a lot of issues

7977
07:57:18,718 --> 07:57:20,320
there are a lot of bugs

7978
07:57:20,320 --> 07:57:23,600
um and that that kind of you know it

7979
07:57:23,600 --> 07:57:25,520
makes sense it's it's really hard to do

7980
07:57:25,520 --> 07:57:27,680
imagine you have to intercept every

7981
07:57:27,680 --> 07:57:28,958
single system call you have to

7982
07:57:28,958 --> 07:57:30,558
understand all of the formats for the

7983
07:57:30,558 --> 07:57:33,520
arguments and one of the big problems in

7984
07:57:33,520 --> 07:57:35,600
linux is there's a lot of weird

7985
07:57:35,600 --> 07:57:37,920
interfaces where there's just flipped

7986
07:57:37,920 --> 07:57:39,520
arguments on different architectures

7987
07:57:39,520 --> 07:57:41,280
whether it's for padding or legacy

7988
07:57:41,280 --> 07:57:43,920
support or some weird bug fix because

7989
07:57:43,920 --> 07:57:47,440
some gnu software in 1983 wrote it that

7990
07:57:47,440 --> 07:57:49,280
way and they have to maintain it because

7991
07:57:49,280 --> 07:57:50,798
it would break too much stuff yeah and

7992
07:57:50,798 --> 07:57:52,798
don't even so kimu has to handle all of

7993
07:57:52,798 --> 07:57:54,160
those things translate them and

7994
07:57:54,160 --> 07:57:55,840
everything and it's it's a hard

7995
07:57:55,840 --> 07:57:57,600
environment but yeah you'll run into a

7996
07:57:57,600 --> 07:57:59,600
lot of weird issues p trace is not

7997
07:57:59,600 --> 07:58:01,120
necessarily a bug they literally just

7998
07:58:01,120 --> 07:58:02,798
don't implement it they just they

7999
07:58:02,798 --> 07:58:04,320
haven't bothered with that api because

8000
07:58:04,320 --> 07:58:05,920
it is one of the hardest

8001
07:58:05,920 --> 07:58:07,440
that's a lot of work yeah

8002
07:58:07,440 --> 07:58:09,360
okay so this challenge we saw this is uh

8003
07:58:09,360 --> 07:58:10,798
you've counted zero eggs how many groups

8004
07:58:10,798 --> 07:58:13,680
of eggs are you counted uh so

8005
07:58:13,680 --> 07:58:14,798
uh

8006
07:58:14,798 --> 07:58:16,240
uh yeah nick actually if you want to

8007
07:58:16,240 --> 07:58:18,478
drop a link to your solution into the

8008
07:58:18,478 --> 07:58:20,000
the chat you're welcome to at this point

8009
07:58:20,000 --> 07:58:20,958
that challenge is dead from a

8010
07:58:20,958 --> 07:58:22,718
competition perspective so if you're

8011
07:58:22,718 --> 07:58:24,160
interested in seeing that solution we

8012
07:58:24,160 --> 07:58:25,440
want to focus on the teams now because

8013
07:58:25,440 --> 07:58:26,638
we've got to see who's going to win but

8014
07:58:26,638 --> 07:58:27,440
uh

8015
07:58:27,440 --> 07:58:29,760
on the youtube chat and uh yeah number

8016
07:58:29,760 --> 07:58:31,440
one for loop

8017
07:58:31,440 --> 07:58:33,360
put it into an array oh yeah it can't be

8018
07:58:33,360 --> 07:58:35,520
that easy is it it is exactly that easy

8019
07:58:35,520 --> 07:58:37,760
this is this is wow this is a five

8020
07:58:37,760 --> 07:58:38,958
minute challenge right this is sudden

8021
07:58:38,958 --> 07:58:40,638
death so if we needed them this is what

8022
07:58:40,638 --> 07:58:42,398
we got oh this is this is really

8023
07:58:42,398 --> 07:58:44,718
intimidating like i i'm terrible at

8024
07:58:44,718 --> 07:58:45,920
challenges like this because i don't

8025
07:58:45,920 --> 07:58:47,200
have existing

8026
07:58:47,200 --> 07:58:48,080
tooling

8027
07:58:48,080 --> 07:58:50,478
like it's in a race especially you're

8028
07:58:50,478 --> 07:58:51,600
nervous you're afraid the other person

8029
07:58:51,600 --> 07:58:53,120
has some like autophone script right

8030
07:58:53,120 --> 07:58:55,760
that's just going to solve it um

8031
07:58:55,760 --> 07:58:57,600
so i feel i feel bad for the teams

8032
07:58:57,600 --> 07:58:59,280
because i we don't want to do this

8033
07:58:59,280 --> 07:59:00,558
either we would love for the main ones

8034
07:59:00,558 --> 07:59:02,878
to be solved but uh just

8035
07:59:02,878 --> 07:59:04,638
given we can't let each one go on

8036
07:59:04,638 --> 07:59:06,080
forever and ever so this is the back-up

8037
07:59:06,080 --> 07:59:07,600
plan that we do have to kind of keep on

8038
07:59:07,600 --> 07:59:09,680
schedule so

8039
07:59:09,680 --> 07:59:14,240
uh we'll see no stat canaries oh god

8040
07:59:14,240 --> 07:59:15,920
they both they both identified that

8041
07:59:15,920 --> 07:59:18,398
almost at the same time nice

8042
07:59:18,398 --> 07:59:19,280
that's fine

8043
07:59:19,280 --> 07:59:20,638
i'm actually watching the youtube stream

8044
07:59:20,638 --> 07:59:22,398
so i'm probably off from from where you

8045
07:59:22,398 --> 07:59:23,920
are i know i have it open in discord but

8046
07:59:23,920 --> 07:59:25,840
i i see the preview i see the obs window

8047
07:59:25,840 --> 07:59:27,360
and it's too small to read yeah that's

8048
07:59:27,360 --> 07:59:28,718
why i'm probably off on a lot of my

8049
07:59:28,718 --> 07:59:30,398
calls sorry no no you're you're good too

8050
07:59:30,398 --> 07:59:32,240
and it's uh i don't have a way to like

8051
07:59:32,240 --> 07:59:33,760
make that bigger unfortunately i wish

8052
07:59:33,760 --> 07:59:35,840
yeah yeah exactly for future future

8053
07:59:35,840 --> 07:59:37,280
issues for remote stuff we'll figure out

8054
07:59:37,280 --> 07:59:38,718
a way to actually one of the things

8055
07:59:38,718 --> 07:59:39,440
we're going to do is we're going to have

8056
07:59:39,440 --> 07:59:41,120
separate streams of both i want to have

8057
07:59:41,120 --> 07:59:42,718
youtube multi-camera because you can do

8058
07:59:42,718 --> 07:59:44,240
multiple streams to the same import yeah

8059
07:59:44,240 --> 07:59:46,240
you can and i would love to do that i

8060
07:59:46,240 --> 07:59:47,440
think that'd be super super fun so

8061
07:59:47,440 --> 07:59:49,280
that's all right so you give it a number

8062
07:59:49,280 --> 07:59:51,600
and i'm guessing you just pass that in

8063
07:59:51,600 --> 07:59:53,680
probably scanf or something

8064
07:59:53,680 --> 07:59:55,520
and it's just gonna loop through it and

8065
07:59:55,520 --> 07:59:57,760
it's gonna put num in there i don't i

8066
07:59:57,760 --> 08:00:00,798
haven't actually seen what num is i i

8067
08:00:00,798 --> 08:00:03,680
hope that's not a libsy api man numb

8068
08:00:03,680 --> 08:00:05,440
okay it's not it's about to say i don't

8069
08:00:05,440 --> 08:00:07,680
think i've ever seen numb so we're gonna

8070
08:00:07,680 --> 08:00:09,680
send a line down hundreds so that's the

8071
08:00:09,680 --> 08:00:10,958
number of things that we're gonna put in

8072
08:00:10,958 --> 08:00:11,760
there

8073
08:00:11,760 --> 08:00:13,200
and all you're really doing is you're

8074
08:00:13,200 --> 08:00:15,680
racing to find you're racing to find the

8075
08:00:15,680 --> 08:00:17,760
layout of that stack and really what

8076
08:00:17,760 --> 08:00:20,000
offset to to bang that into but it's

8077
08:00:20,000 --> 08:00:22,478
it's a classic stack overflow without a

8078
08:00:22,478 --> 08:00:26,080
cookie yup and yep for that in counts

8079
08:00:26,080 --> 08:00:28,638
and it's just uh send another line and

8080
08:00:28,638 --> 08:00:30,798
this is probably just another

8081
08:00:30,798 --> 08:00:32,798
uh another in so this is probably going

8082
08:00:32,798 --> 08:00:34,398
to crash

8083
08:00:34,398 --> 08:00:35,920
um but they're gonna this is probably

8084
08:00:35,920 --> 08:00:38,160
gonna crash by jumping to one would be

8085
08:00:38,160 --> 08:00:39,520
my guess unless they have to fix

8086
08:00:39,520 --> 08:00:41,600
anything else up but i don't think

8087
08:00:41,600 --> 08:00:43,520
that'll be the case

8088
08:00:43,520 --> 08:00:44,638
um

8089
08:00:44,638 --> 08:00:47,280
interesting did that not crash

8090
08:00:47,280 --> 08:00:49,840
interrupted stop process what happened i

8091
08:00:49,840 --> 08:00:50,958
didn't see what the end of their their

8092
08:00:50,958 --> 08:00:53,520
throwing script was receive until oh

8093
08:00:53,520 --> 08:00:55,200
they're not consuming the interactive

8094
08:00:55,200 --> 08:00:57,120
things so they're not getting the prompt

8095
08:00:57,120 --> 08:00:59,200
uh yeah yeah

8096
08:00:59,200 --> 08:01:00,798
they didn't really interesting read

8097
08:01:00,798 --> 08:01:02,000
enough bites

8098
08:01:02,000 --> 08:01:04,000
yeah that's a classic

8099
08:01:04,000 --> 08:01:06,478
that's a classic oh boy even even in the

8100
08:01:06,478 --> 08:01:08,638
five-minute challenges there's mistake

8101
08:01:08,638 --> 08:01:10,000
this is why we normally like i said the

8102
08:01:10,000 --> 08:01:12,160
original plan was at 15 minutes left we

8103
08:01:12,160 --> 08:01:14,878
cut over if we had to just because

8104
08:01:14,878 --> 08:01:15,840
there's all sorts of little stuff that

8105
08:01:15,840 --> 08:01:17,840
can get you now i'm not i'm not seeing

8106
08:01:17,840 --> 08:01:19,600
yet i'm still seeing reverse engineering

8107
08:01:19,600 --> 08:01:21,040
on the recopic side i just didn't see

8108
08:01:21,040 --> 08:01:23,200
the quick turnaround that you'd expect

8109
08:01:23,200 --> 08:01:24,558
but

8110
08:01:24,558 --> 08:01:27,200
because we're we're seeing bugs on sour

8111
08:01:27,200 --> 08:01:29,360
cloud i i still you know you can't

8112
08:01:29,360 --> 08:01:31,200
predict it i don't know if the first one

8113
08:01:31,200 --> 08:01:32,160
to like

8114
08:01:32,160 --> 08:01:34,080
get it clean and get it landed is gonna

8115
08:01:34,080 --> 08:01:35,280
be

8116
08:01:35,280 --> 08:01:36,878
is gonna be our winner

8117
08:01:36,878 --> 08:01:38,798
yeah yeah i mean they're trying to

8118
08:01:38,798 --> 08:01:40,558
figure out roughly the the land of that

8119
08:01:40,558 --> 08:01:43,040
stack which uh is actually really nice

8120
08:01:43,040 --> 08:01:43,920
in

8121
08:01:43,920 --> 08:01:46,000
in binja because binja has that

8122
08:01:46,000 --> 08:01:48,000
different they're based off of uh the

8123
08:01:48,000 --> 08:01:49,360
return address

8124
08:01:49,360 --> 08:01:50,878
yeah instead of the

8125
08:01:50,878 --> 08:01:53,920
frame pointer yup yup and that's just so

8126
08:01:53,920 --> 08:01:55,520
useful for when you're trying to do

8127
08:01:55,520 --> 08:01:57,120
these sorts of challenges i i think

8128
08:01:57,120 --> 08:01:58,160
people used to do it the other way

8129
08:01:58,160 --> 08:01:59,600
around but yeah it was that was a

8130
08:01:59,600 --> 08:02:00,878
conscious choice because again like that

8131
08:02:00,878 --> 08:02:03,520
was our ctf kind of origin so it made

8132
08:02:03,520 --> 08:02:04,958
sense that that was that was how it does

8133
08:02:04,958 --> 08:02:06,878
it i i do i think you're right though i

8134
08:02:06,878 --> 08:02:08,478
think that sort of

8135
08:02:08,478 --> 08:02:09,840
looking at stack layouts is one of those

8136
08:02:09,840 --> 08:02:12,240
things where i think dynamic excels just

8137
08:02:12,240 --> 08:02:14,320
throw it in the debugger and just look

8138
08:02:14,320 --> 08:02:16,718
just count try it and look at what what

8139
08:02:16,718 --> 08:02:18,240
uh your offset is pretty easy to find

8140
08:02:18,240 --> 08:02:19,680
your return addresses

8141
08:02:19,680 --> 08:02:21,520
i also like that binary ninja shows you

8142
08:02:21,520 --> 08:02:24,320
where the return is uh ida does not so

8143
08:02:24,320 --> 08:02:26,478
they already know from this minus 38 hex

8144
08:02:26,478 --> 08:02:28,398
so plus 38 hex from the start of their

8145
08:02:28,398 --> 08:02:31,360
buffer is the return address yup um

8146
08:02:31,360 --> 08:02:33,120
whereas in ida you're going to have to

8147
08:02:33,120 --> 08:02:34,638
know that there's an rbp there because

8148
08:02:34,638 --> 08:02:36,878
you can see the index for i but you have

8149
08:02:36,878 --> 08:02:39,120
to know there's rbp there which might

8150
08:02:39,120 --> 08:02:41,040
may or may not be in there you have to

8151
08:02:41,040 --> 08:02:42,798
just look for the prologue and then the

8152
08:02:42,798 --> 08:02:44,000
return address after that the

8153
08:02:44,000 --> 08:02:45,360
architecture is a little bit more

8154
08:02:45,360 --> 08:02:47,120
guesswork there and i know that's bit me

8155
08:02:47,120 --> 08:02:49,920
before in like not cert before

8156
08:02:49,920 --> 08:02:51,440
all right so

8157
08:02:51,440 --> 08:02:55,200
so we are seeing uh interactive from uh

8158
08:02:55,200 --> 08:02:56,478
sauerkraut so again they kind of went

8159
08:02:56,478 --> 08:02:57,840
debugger and they went interactive

8160
08:02:57,840 --> 08:03:00,080
they're looking at the counting

8161
08:03:00,080 --> 08:03:02,638
and we're still but i see i i i am not

8162
08:03:02,638 --> 08:03:04,638
ruling out rekka pig because i've seen

8163
08:03:04,638 --> 08:03:06,320
too many times where like the person

8164
08:03:06,320 --> 08:03:08,718
just looking at the decompilation

8165
08:03:08,718 --> 08:03:09,920
just stares at it and then all of a

8166
08:03:09,920 --> 08:03:12,000
sudden comes up with the

8167
08:03:12,000 --> 08:03:14,080
uh comes up with a solution so yeah just

8168
08:03:14,080 --> 08:03:16,160
as reminder for for chat we are in

8169
08:03:16,160 --> 08:03:17,520
sudden death mode

8170
08:03:17,520 --> 08:03:19,280
uh great challenge a really cool

8171
08:03:19,280 --> 08:03:20,878
challenge that i like last round but it

8172
08:03:20,878 --> 08:03:23,920
didn't uh what do we got

8173
08:03:24,160 --> 08:03:25,920
i'm i'm really ugh they're they're

8174
08:03:25,920 --> 08:03:28,558
getting so close yeah no no this i mean

8175
08:03:28,558 --> 08:03:30,558
it shouldn't uh

8176
08:03:30,558 --> 08:03:32,638
shouldn't take too much so we'll see

8177
08:03:32,638 --> 08:03:35,600
where they where they land

8178
08:03:35,840 --> 08:03:37,360
okay the right view here is actually

8179
08:03:37,360 --> 08:03:39,680
really nice uh it shows very obviously

8180
08:03:39,680 --> 08:03:41,920
what it's doing it just

8181
08:03:41,920 --> 08:03:43,440
how many groups of eggs so you give it

8182
08:03:43,440 --> 08:03:45,600
groups of eggs which is a number then

8183
08:03:45,600 --> 08:03:46,958
you have to give it a number eggs in the

8184
08:03:46,958 --> 08:03:48,878
group and then you have to give it all

8185
08:03:48,878 --> 08:03:50,878
of the eggs uh that it tallies up there

8186
08:03:50,878 --> 08:03:52,398
and i think

8187
08:03:52,398 --> 08:03:53,840
both of them

8188
08:03:53,840 --> 08:03:55,840
i think have been running into issues

8189
08:03:55,840 --> 08:03:57,120
where they're trying to like send stuff

8190
08:03:57,120 --> 08:03:59,520
but i think it's going to block until

8191
08:03:59,520 --> 08:04:00,798
you re

8192
08:04:00,798 --> 08:04:02,478
read that string depending on how you're

8193
08:04:02,478 --> 08:04:04,398
interacting with that process well and

8194
08:04:04,398 --> 08:04:05,360
that is the nice thing about you

8195
08:04:05,360 --> 08:04:07,120
mentioned earlier having like you know a

8196
08:04:07,120 --> 08:04:08,398
custom throwing framework or doing

8197
08:04:08,398 --> 08:04:09,600
one-offs or you know using something

8198
08:04:09,600 --> 08:04:11,040
like prone tools they're both using pawn

8199
08:04:11,040 --> 08:04:13,200
tools and right that can do a lot of

8200
08:04:13,200 --> 08:04:14,798
that for you right if you properly set

8201
08:04:14,798 --> 08:04:16,240
it up or it will just you know receive

8202
08:04:16,240 --> 08:04:18,160
until for you it makes a huge difference

8203
08:04:18,160 --> 08:04:19,200
instead of having to rewrite your own

8204
08:04:19,200 --> 08:04:20,558
each time or

8205
08:04:20,558 --> 08:04:22,240
uh pull it in you see that record pig is

8206
08:04:22,240 --> 08:04:24,240
trying to uh

8207
08:04:24,240 --> 08:04:27,760
they're trying to um

8208
08:04:27,760 --> 08:04:29,600
basically figure out what glib c version

8209
08:04:29,600 --> 08:04:31,120
that is so i don't know if they just

8210
08:04:31,120 --> 08:04:33,040
have pre-made payloads for basically all

8211
08:04:33,040 --> 08:04:34,638
of these

8212
08:04:34,638 --> 08:04:36,558
yeah i'm curious that's actually a good

8213
08:04:36,558 --> 08:04:38,558
question and they're

8214
08:04:38,558 --> 08:04:40,638
they're setting the contacts manually

8215
08:04:40,638 --> 08:04:42,558
and so they're gonna i

8216
08:04:42,558 --> 08:04:44,398
don't think i've seen a crash yet from

8217
08:04:44,398 --> 08:04:46,958
either side that's a great point yeah

8218
08:04:46,958 --> 08:04:48,478
that'll be when we know we're we're

8219
08:04:48,478 --> 08:04:49,520
close

8220
08:04:49,520 --> 08:04:51,840
right

8221
08:04:52,000 --> 08:04:54,398
and i i think the main issue that that

8222
08:04:54,398 --> 08:04:56,240
is happening here is probably just

8223
08:04:56,240 --> 08:04:57,440
sending those things in because i'm

8224
08:04:57,440 --> 08:04:58,798
pretty sure that just goes straight out

8225
08:04:58,798 --> 08:05:00,558
of bounds i think you have to give it no

8226
08:05:00,558 --> 08:05:02,240
check one group of eggs

8227
08:05:02,240 --> 08:05:04,000
a million eggs and then just give it the

8228
08:05:04,000 --> 08:05:05,920
egg values but i think they're just not

8229
08:05:05,920 --> 08:05:09,280
interacting with the program

8230
08:05:09,280 --> 08:05:10,638
yeah if it's gonna if it's gonna block

8231
08:05:10,638 --> 08:05:13,920
on that then there so

8232
08:05:14,398 --> 08:05:16,398
all right so we actually just uh saw

8233
08:05:16,398 --> 08:05:19,840
rekha pig is uh running um

8234
08:05:19,840 --> 08:05:22,080
ld directly

8235
08:05:22,080 --> 08:05:23,360
i didn't know you could do that yes you

8236
08:05:23,360 --> 08:05:25,360
can i have seen that that trick before

8237
08:05:25,360 --> 08:05:26,958
yeah you can evoke the loader directly

8238
08:05:26,958 --> 08:05:28,718
which if you're on a different you know

8239
08:05:28,718 --> 08:05:30,798
architecture but you've been provided

8240
08:05:30,798 --> 08:05:32,160
the loader you can just have it run it

8241
08:05:32,160 --> 08:05:33,760
for you to match the state yeah it's a

8242
08:05:33,760 --> 08:05:35,600
it's a cool trick huh i know that's what

8243
08:05:35,600 --> 08:05:37,360
happens under the hood but i guess i've

8244
08:05:37,360 --> 08:05:38,958
literally never tried never considered

8245
08:05:38,958 --> 08:05:41,040
like whatever you did manually yep yeah

8246
08:05:41,040 --> 08:05:42,478
that'll totally work

8247
08:05:42,478 --> 08:05:43,440
huh

8248
08:05:43,440 --> 08:05:44,878
all right so they've at least got like a

8249
08:05:44,878 --> 08:05:46,320
little interactive framework just to

8250
08:05:46,320 --> 08:05:48,718
like poke at it under the

8251
08:05:48,718 --> 08:05:50,878
under their but are they so i mean

8252
08:05:50,878 --> 08:05:52,558
i'm kind of wondering yeah they're

8253
08:05:52,558 --> 08:05:55,440
i have expected them to be on like a uh

8254
08:05:55,440 --> 08:05:57,440
like an m1 mac or something right like

8255
08:05:57,440 --> 08:05:59,680
if right why were they like running this

8256
08:05:59,680 --> 08:06:01,120
under

8257
08:06:01,120 --> 08:06:02,798
uh

8258
08:06:02,798 --> 08:06:04,478
uh that

8259
08:06:04,478 --> 08:06:05,920
so is that actually way is the context

8260
08:06:05,920 --> 08:06:08,558
there for emulation or is that oh what i

8261
08:06:08,558 --> 08:06:09,520
miss

8262
08:06:09,520 --> 08:06:11,840
did we get a crap there is a

8263
08:06:11,840 --> 08:06:14,398
call stack in reed

8264
08:06:14,398 --> 08:06:15,840
but i don't think it's a crash i think

8265
08:06:15,840 --> 08:06:17,840
that was maybe a break breaking in or

8266
08:06:17,840 --> 08:06:20,240
even manually uh interrupting

8267
08:06:20,240 --> 08:06:21,120
oh

8268
08:06:21,120 --> 08:06:23,840
come on tower

8269
08:06:26,160 --> 08:06:28,080
dropping into an interactive terminal is

8270
08:06:28,080 --> 08:06:29,760
definitely high energy that's not

8271
08:06:29,760 --> 08:06:31,200
something i normally do

8272
08:06:31,200 --> 08:06:33,040
i know i like i like the interactive

8273
08:06:33,040 --> 08:06:34,558
terminal like you can automate up to a

8274
08:06:34,558 --> 08:06:36,160
point and then drop in and then poke at

8275
08:06:36,160 --> 08:06:38,320
it uh and then and then

8276
08:06:38,320 --> 08:06:39,360
oh

8277
08:06:39,360 --> 08:06:42,398
wreck-a-pig's got a seg fault okay

8278
08:06:42,398 --> 08:06:44,478
and i'm guessing it's just gonna be pc

8279
08:06:44,478 --> 08:06:45,920
control there they're going to have

8280
08:06:45,920 --> 08:06:47,600
control of execution so they're attached

8281
08:06:47,600 --> 08:06:48,718
payload i didn't think they'd actually

8282
08:06:48,718 --> 08:06:50,798
written a bit of a payload yet

8283
08:06:50,798 --> 08:06:53,280
uh yeah i didn't even

8284
08:06:53,280 --> 08:06:54,798
fault in like the infrastructure i'm

8285
08:06:54,798 --> 08:06:56,798
just a little worried that it's like so

8286
08:06:56,798 --> 08:06:59,360
oh maybe they just did a manner manually

8287
08:06:59,360 --> 08:07:01,760
did this like fault manually or do they

8288
08:07:01,760 --> 08:07:04,638
oh yeah zero oh okay

8289
08:07:04,638 --> 08:07:06,000
they just done the interactive all right

8290
08:07:06,000 --> 08:07:08,320
so again as we said

8291
08:07:08,320 --> 08:07:11,280
that might be sufficient uh this

8292
08:07:11,280 --> 08:07:14,840
taking the time

8293
08:07:16,718 --> 08:07:18,320
yeah this is

8294
08:07:18,320 --> 08:07:21,440
oh come on ah this is nerve-wracking

8295
08:07:21,440 --> 08:07:24,080
yeah it really is

8296
08:07:24,080 --> 08:07:26,958
it looks like uh wreck-a-pig's going to

8297
08:07:26,958 --> 08:07:28,558
like trying to actually write a little

8298
08:07:28,558 --> 08:07:30,478
bit of their python right now

8299
08:07:30,478 --> 08:07:32,718
to probably construct that payload but i

8300
08:07:32,718 --> 08:07:34,080
think they're consistently getting a

8301
08:07:34,080 --> 08:07:36,478
crash yeah i have i still haven't

8302
08:07:36,478 --> 08:07:39,920
actually seen well

8303
08:07:40,558 --> 08:07:42,718
it is hard to tell with some of these uh

8304
08:07:42,718 --> 08:07:44,478
payloads where they're actually using uh

8305
08:07:44,478 --> 08:07:46,478
phone tools to prop open a separate

8306
08:07:46,478 --> 08:07:50,079
debugging process after

8307
08:07:50,478 --> 08:07:52,000
look at that they're looking for the end

8308
08:07:52,000 --> 08:07:54,000
of that specific string both of them i

8309
08:07:54,000 --> 08:07:56,160
think are fighting with the same issue

8310
08:07:56,160 --> 08:08:00,558
yeah they're just literally they they

8311
08:08:01,040 --> 08:08:03,840
i mean that's that f flusha of bss start

8312
08:08:03,840 --> 08:08:06,398
i'm guessing that is zero um which is

8313
08:08:06,398 --> 08:08:08,878
that's flushing standard out and that

8314
08:08:08,878 --> 08:08:13,360
flush might really be blocking

8315
08:08:13,360 --> 08:08:15,040
and they might need to consume the it

8316
08:08:15,040 --> 08:08:16,240
kind of depends on how you're

8317
08:08:16,240 --> 08:08:17,920
interacting with this if you have like

8318
08:08:17,920 --> 08:08:19,680
the output going to devno like that i

8319
08:08:19,680 --> 08:08:21,760
think would be my approach is just so

8320
08:08:21,760 --> 08:08:23,920
that's

8321
08:08:24,878 --> 08:08:26,160
here's where like if you really know

8322
08:08:26,160 --> 08:08:27,840
pawn tools i'm sure there's just

8323
08:08:27,840 --> 08:08:29,280
straight up an option in there to do

8324
08:08:29,280 --> 08:08:30,240
that

8325
08:08:30,240 --> 08:08:32,000
yeah and honestly that's actually one of

8326
08:08:32,000 --> 08:08:33,520
the funny things like they might be

8327
08:08:33,520 --> 08:08:35,600
better off just sending it directly and

8328
08:08:35,600 --> 08:08:37,440
then throwing everything away like from

8329
08:08:37,440 --> 08:08:38,958
the you could do this with echo and a

8330
08:08:38,958 --> 08:08:40,398
shell script right like it would

8331
08:08:40,398 --> 08:08:42,638
actually be better off

8332
08:08:42,638 --> 08:08:45,200
yeah because they have to consume that

8333
08:08:45,200 --> 08:08:48,718
information right now

8334
08:08:48,798 --> 08:08:50,478
and yeah i'm seeing like a

8335
08:08:50,478 --> 08:08:53,120
exception in the tubes uh over on sauro

8336
08:08:53,120 --> 08:08:54,478
cloud they

8337
08:08:54,478 --> 08:08:56,558
uh yeah so the tubes library being the

8338
08:08:56,558 --> 08:08:57,840
pawn tools thing that does a lot of this

8339
08:08:57,840 --> 08:09:00,240
kind of interaction stuff

8340
08:09:00,240 --> 08:09:02,240
i i don't think we expected to need a

8341
08:09:02,240 --> 08:09:04,798
hint in our our uh sudden death and i'm

8342
08:09:04,798 --> 08:09:06,638
hoping it goes

8343
08:09:06,638 --> 08:09:08,240
uh it goes quickly i think the hint

8344
08:09:08,240 --> 08:09:09,520
might be like

8345
08:09:09,520 --> 08:09:10,878
dev null

8346
08:09:10,878 --> 08:09:12,718
yeah that might probably just confuse

8347
08:09:12,718 --> 08:09:14,160
them because they're all fighting with

8348
08:09:14,160 --> 08:09:15,360
it you can see

8349
08:09:15,360 --> 08:09:17,280
both of them right now are trying to

8350
08:09:17,280 --> 08:09:19,360
find ways that they can consume that

8351
08:09:19,360 --> 08:09:21,760
output so they can actually provide

8352
08:09:21,760 --> 08:09:23,440
the command line in place i mean re

8353
08:09:23,440 --> 08:09:25,200
receive until should

8354
08:09:25,200 --> 08:09:26,718
should absolutely do it though right

8355
08:09:26,718 --> 08:09:28,798
they should be able to receive until

8356
08:09:28,798 --> 08:09:30,320
i don't know if they're just not doing

8357
08:09:30,320 --> 08:09:33,360
it or or again ignore it entirely like

8358
08:09:33,360 --> 08:09:36,160
either receive until or just absolutely

8359
08:09:36,160 --> 08:09:38,240
like send it ignore all the output toss

8360
08:09:38,240 --> 08:09:40,320
it away use something else

8361
08:09:40,320 --> 08:09:42,398
yeah so i think we're getting the first

8362
08:09:42,398 --> 08:09:44,000
throw attempt here

8363
08:09:44,000 --> 08:09:46,878
from wrecking back

8364
08:09:47,040 --> 08:09:51,200
there we go what do we have here

8365
08:09:51,600 --> 08:09:53,920
oh they're they're script

8366
08:09:53,920 --> 08:09:55,440
crash

8367
08:09:55,440 --> 08:09:57,280
i don't know how i think they just they

8368
08:09:57,280 --> 08:09:58,478
just well the one i'm watching they just

8369
08:09:58,478 --> 08:09:59,680
switched away they're back then back in

8370
08:09:59,680 --> 08:10:03,638
item for a little bit

8371
08:10:04,000 --> 08:10:06,320
all right we do actually have a hint

8372
08:10:06,320 --> 08:10:08,958
uh coming for sudden death

8373
08:10:08,958 --> 08:10:11,680
watch out for clobbered counters

8374
08:10:11,680 --> 08:10:12,718
do it

8375
08:10:12,718 --> 08:10:14,878
let's write it up

8376
08:10:14,878 --> 08:10:16,638
oh

8377
08:10:16,638 --> 08:10:18,240
so there's a side effect to what you're

8378
08:10:18,240 --> 08:10:20,798
overwriting and oh look at that we

8379
08:10:20,798 --> 08:10:23,520
actually see rekha pig in ida right now

8380
08:10:23,520 --> 08:10:25,200
naming those things on the stack and i

8381
08:10:25,200 --> 08:10:26,398
think they're figuring out that they

8382
08:10:26,398 --> 08:10:27,760
have to fill in those fields because

8383
08:10:27,760 --> 08:10:29,920
they are clobbering them okay they might

8384
08:10:29,920 --> 08:10:32,080
not even need the hints actually so if

8385
08:10:32,080 --> 08:10:33,360
if one of them

8386
08:10:33,360 --> 08:10:35,440
makes progress on it

8387
08:10:35,440 --> 08:10:38,240
uh i mean recopy just named every stack

8388
08:10:38,240 --> 08:10:39,440
variable and i think they're thinking

8389
08:10:39,440 --> 08:10:41,040
through what are the ramificati right

8390
08:10:41,040 --> 08:10:42,638
now yeah i see it in their mind right

8391
08:10:42,638 --> 08:10:45,840
now it's what are the ramifications to

8392
08:10:45,840 --> 08:10:49,680
overwriting the length the j and the i

8393
08:10:49,680 --> 08:10:50,958
and i think they're trying to figure out

8394
08:10:50,958 --> 08:10:52,718
what what that means

8395
08:10:52,718 --> 08:10:55,040
yes it's it's the problem is so we got

8396
08:10:55,040 --> 08:10:57,360
to decide do we give the hints anyways

8397
08:10:57,360 --> 08:10:59,200
because we don't know for certain that

8398
08:10:59,200 --> 08:11:02,080
they could just be like staring at it or

8399
08:11:02,080 --> 08:11:03,920
do we hold off because one team kind of

8400
08:11:03,920 --> 08:11:06,000
has an idea the other one doesn't this

8401
08:11:06,000 --> 08:11:08,000
is tough i would be really surprised

8402
08:11:08,000 --> 08:11:10,160
that frecka pig doesn't doesn't see this

8403
08:11:10,160 --> 08:11:13,680
right now they just wanted to name those

8404
08:11:13,680 --> 08:11:15,280
they they're looking at where they're

8405
08:11:15,280 --> 08:11:16,718
used yeah

8406
08:11:16,718 --> 08:11:18,240
specifically they're not looking where

8407
08:11:18,240 --> 08:11:19,920
their buffer is used they're looking at

8408
08:11:19,920 --> 08:11:21,600
where the things that they're clobbering

8409
08:11:21,600 --> 08:11:23,920
are being used i think they are entirely

8410
08:11:23,920 --> 08:11:25,840
aware of the fact that they are

8411
08:11:25,840 --> 08:11:27,840
damaging other locals

8412
08:11:27,840 --> 08:11:28,718
um

8413
08:11:28,718 --> 08:11:30,000
this is actually an interesting

8414
08:11:30,000 --> 08:11:32,798
challenge and that the uh a buffer that

8415
08:11:32,798 --> 08:11:34,398
you're copying into is actually at the

8416
08:11:34,398 --> 08:11:36,398
start of the stack and honestly i think

8417
08:11:36,398 --> 08:11:38,398
that's almost a dead giveaway because

8418
08:11:38,398 --> 08:11:40,160
that would never happen the compiler

8419
08:11:40,160 --> 08:11:42,638
would always put yeah the uh buffer at

8420
08:11:42,638 --> 08:11:44,558
the end of the stack especially any

8421
08:11:44,558 --> 08:11:46,958
modern um yeah anything that looks like

8422
08:11:46,958 --> 08:11:48,320
it's a large buffer and like that your

8423
08:11:48,320 --> 08:11:49,360
character or anything like that

8424
08:11:49,360 --> 08:11:51,040
automatically gets put there

8425
08:11:51,040 --> 08:11:52,320
right you would have to go out of your

8426
08:11:52,320 --> 08:11:54,638
way to put it ahead by like writing an

8427
08:11:54,638 --> 08:11:56,398
assembly or doing really weird command

8428
08:11:56,398 --> 08:11:58,638
line args and like setting that up so

8429
08:11:58,638 --> 08:12:00,398
you know that they intentionally put the

8430
08:12:00,398 --> 08:12:02,558
buffer before the stack locals which i

8431
08:12:02,558 --> 08:12:05,680
think is a pretty big giveaway of

8432
08:12:05,680 --> 08:12:07,760
hey there's something going on here you

8433
08:12:07,760 --> 08:12:08,878
know

8434
08:12:08,878 --> 08:12:10,638
these values on the stack are

8435
08:12:10,638 --> 08:12:12,080
intentionally after your buffer for a

8436
08:12:12,080 --> 08:12:14,558
reason so we're really going to need to

8437
08:12:14,558 --> 08:12:16,398
see them constructing something where

8438
08:12:16,398 --> 08:12:18,478
they're they're passing in

8439
08:12:18,478 --> 08:12:20,558
those correct fields that match up with

8440
08:12:20,558 --> 08:12:22,080
probably what they're actually sending

8441
08:12:22,080 --> 08:12:23,520
yeah they're sending a count they're

8442
08:12:23,520 --> 08:12:25,840
sending i think number of a number of

8443
08:12:25,840 --> 08:12:28,878
egg groups and number of eggs in a group

8444
08:12:28,878 --> 08:12:31,440
and i think we'll see them fixing those

8445
08:12:31,440 --> 08:12:34,000
up such that they overwrite them so that

8446
08:12:34,000 --> 08:12:35,680
they stay the same yeah and i'm even

8447
08:12:35,680 --> 08:12:38,478
looking even sour cloud is looking at uh

8448
08:12:38,478 --> 08:12:40,160
the stack

8449
08:12:40,160 --> 08:12:42,878
as they over right

8450
08:12:42,878 --> 08:12:44,638
they might be in a debugger trying to

8451
08:12:44,638 --> 08:12:46,718
trying to figure that out

8452
08:12:46,718 --> 08:12:48,240
yeah i want to see if they're doing they

8453
08:12:48,240 --> 08:12:50,160
might be doing something similar which

8454
08:12:50,160 --> 08:12:51,600
which which makes sense if you've got

8455
08:12:51,600 --> 08:12:54,958
this overwrite and it appears to be

8456
08:12:54,958 --> 08:12:57,680
and bones was easier than this yes

8457
08:12:57,680 --> 08:13:00,958
yes i think you're not wrong

8458
08:13:03,200 --> 08:13:05,520
oh come on yeah i i think i think both

8459
08:13:05,520 --> 08:13:07,520
teams are basically on the right path

8460
08:13:07,520 --> 08:13:10,080
now no hint is going to be necessary to

8461
08:13:10,080 --> 08:13:12,080
this is this is the knobser problem

8462
08:13:12,080 --> 08:13:14,000
where you are fighting your dev

8463
08:13:14,000 --> 08:13:16,000
environment yeah they're not actually

8464
08:13:16,000 --> 08:13:17,760
they all understand what the bug is they

8465
08:13:17,760 --> 08:13:19,040
might not fully understand the

8466
08:13:19,040 --> 08:13:21,040
ramifications of

8467
08:13:21,040 --> 08:13:23,520
that overflow we can see a break point

8468
08:13:23,520 --> 08:13:26,320
being set specifically on that sub-rsp

8469
08:13:26,320 --> 08:13:27,920
so where it's setting up the stack i

8470
08:13:27,920 --> 08:13:29,680
think they're confirming the exact

8471
08:13:29,680 --> 08:13:31,520
layout of the stack matches what they

8472
08:13:31,520 --> 08:13:33,360
expect i think sauerkraut's going the

8473
08:13:33,360 --> 08:13:35,120
more dynamic route to see what is

8474
08:13:35,120 --> 08:13:37,280
actually on that stack

8475
08:13:37,280 --> 08:13:39,040
um i'm waiting for somebody to do

8476
08:13:39,040 --> 08:13:41,600
something else like uh jiohat's kira

8477
08:13:41,600 --> 08:13:43,680
tool right where it was like

8478
08:13:43,680 --> 08:13:45,040
because honestly like being able to

8479
08:13:45,040 --> 08:13:46,798
actually just visualize and look at a

8480
08:13:46,798 --> 08:13:48,798
stack and something like this would be

8481
08:13:48,798 --> 08:13:50,320
really really neat because you could you

8482
08:13:50,320 --> 08:13:51,760
could look at it before you look after

8483
08:13:51,760 --> 08:13:52,878
you want to be able to rewind and pull

8484
08:13:52,878 --> 08:13:54,320
out those values and like figure out

8485
08:13:54,320 --> 08:13:55,920
where offset to put it into your payload

8486
08:13:55,920 --> 08:13:58,160
like you could just visually build your

8487
08:13:58,160 --> 08:14:00,398
your your exploit essentially that way

8488
08:14:00,398 --> 08:14:02,558
um i think one of the easier dynamic

8489
08:14:02,558 --> 08:14:04,478
approaches here would be there's no

8490
08:14:04,478 --> 08:14:05,760
pointers on the stack so that's pretty

8491
08:14:05,760 --> 08:14:08,478
easy uh i think that the easy approach

8492
08:14:08,478 --> 08:14:09,920
that i would go with is throw a

8493
08:14:09,920 --> 08:14:11,920
non-overflowing payload they know that

8494
08:14:11,920 --> 08:14:14,080
the size of that buffer is 20.

8495
08:14:14,080 --> 08:14:16,558
yeah so if you throw a non-overflowing

8496
08:14:16,558 --> 08:14:19,200
payload put a break point on rhett and

8497
08:14:19,200 --> 08:14:21,600
look at what the stack looks like

8498
08:14:21,600 --> 08:14:23,280
at the end of the function you know what

8499
08:14:23,280 --> 08:14:25,920
it is supposed to look like in a valid

8500
08:14:25,920 --> 08:14:27,440
function you can probably find your 20

8501
08:14:27,440 --> 08:14:30,080
hex patch that in and then

8502
08:14:30,080 --> 08:14:32,240
correctly fill in those stacks let's

8503
08:14:32,240 --> 08:14:34,160
just build it block by block where you

8504
08:14:34,160 --> 08:14:35,920
first like get to the local then you

8505
08:14:35,920 --> 08:14:37,280
then you include it in your overwrite

8506
08:14:37,280 --> 08:14:38,398
then you get to your next one and you

8507
08:14:38,398 --> 08:14:39,360
include it in your overwrite and then

8508
08:14:39,360 --> 08:14:40,958
you keep going through it one at a time

8509
08:14:40,958 --> 08:14:42,080
or actually you could probably just do a

8510
08:14:42,080 --> 08:14:43,520
straight shot look at them all

8511
08:14:43,520 --> 08:14:44,638
and then if they're all going to be

8512
08:14:44,638 --> 08:14:47,360
contiguous anyway it's only 20 hex bites

8513
08:14:47,360 --> 08:14:49,920
how many locals were there like 18 hecks

8514
08:14:49,920 --> 08:14:51,760
worth of locals which is

8515
08:14:51,760 --> 08:14:52,958
i miss that you know it's funny i was

8516
08:14:52,958 --> 08:14:54,240
mentioning keira and somebody in chat

8517
08:14:54,240 --> 08:14:55,440
pointed out that sauerkraut actually

8518
08:14:55,440 --> 08:14:57,600
used rr to do a rewind that's another

8519
08:14:57,600 --> 08:14:58,798
that is actually another way to do it

8520
08:14:58,798 --> 08:15:00,080
right like you can blow it out but then

8521
08:15:00,080 --> 08:15:01,600
you can rewind on the stack and look at

8522
08:15:01,600 --> 08:15:03,120
the value there too

8523
08:15:03,120 --> 08:15:05,680
that's okay uh sarah cloud right now at

8524
08:15:05,680 --> 08:15:07,680
least for me probably 10 seconds behind

8525
08:15:07,680 --> 08:15:10,080
they are um they're constructing they're

8526
08:15:10,080 --> 08:15:11,440
putting the right values on the stack

8527
08:15:11,440 --> 08:15:12,798
right now

8528
08:15:12,798 --> 08:15:14,318
or they're putting what they think are

8529
08:15:14,318 --> 08:15:16,318
the right values on the stack um i don't

8530
08:15:16,318 --> 08:15:18,000
know if they're right or not but they

8531
08:15:18,000 --> 08:15:19,360
they definitely are aware that they're

8532
08:15:19,360 --> 08:15:20,798
clobbering things that they need to fix

8533
08:15:20,798 --> 08:15:23,798
up

8534
08:15:24,080 --> 08:15:25,520
man i'm gonna need a good

8535
08:15:25,520 --> 08:15:27,920
good uh break for for this this stream

8536
08:15:27,920 --> 08:15:29,920
uh thankfully uh carl's gonna take over

8537
08:15:29,920 --> 08:15:32,000
and join you uh for the last one second

8538
08:15:32,000 --> 08:15:33,360
i'm gonna need to rest my voice this

8539
08:15:33,360 --> 08:15:35,840
one's been this one's been crazy uh

8540
08:15:35,840 --> 08:15:38,240
absolutely oh gosh it's really coming

8541
08:15:38,240 --> 08:15:41,120
down to the wire on this and it's it's

8542
08:15:41,120 --> 08:15:43,600
it's really fighting fighting tooling

8543
08:15:43,600 --> 08:15:46,318
here is what it really feels like a lot

8544
08:15:46,318 --> 08:15:48,398
of getting debuggers set up i mean sour

8545
08:15:48,398 --> 08:15:49,360
cloud

8546
08:15:49,360 --> 08:15:50,638
obviously was very frustrating they

8547
08:15:50,638 --> 08:15:52,718
couldn't get uh yeah a debugger running

8548
08:15:52,718 --> 08:15:54,478
on the keyboard

8549
08:15:54,478 --> 08:15:55,280
yep

8550
08:15:55,280 --> 08:15:57,760
yeah especially if that if you are more

8551
08:15:57,760 --> 08:15:59,520
dynamic and your debugger is not working

8552
08:15:59,520 --> 08:16:01,520
and that's that's where ctf's like this

8553
08:16:01,520 --> 08:16:04,000
can be really challenging is you go head

8554
08:16:04,000 --> 08:16:06,000
to head with someone who's static and

8555
08:16:06,000 --> 08:16:07,600
you do debuggers and your debugger

8556
08:16:07,600 --> 08:16:09,760
doesn't work yeah and i can guarantee

8557
08:16:09,760 --> 08:16:11,520
you their ida their binja whatever

8558
08:16:11,520 --> 08:16:13,040
they're using statically is going to

8559
08:16:13,040 --> 08:16:15,360
work yeah in every ctf challenge yeah

8560
08:16:15,360 --> 08:16:17,680
yeah very very few rarely rarely will

8561
08:16:17,680 --> 08:16:18,958
somebody build something designed to

8562
08:16:18,958 --> 08:16:19,920
break a tool like that which is

8563
08:16:19,920 --> 08:16:21,440
basically what it takes at this point to

8564
08:16:21,440 --> 08:16:23,280
make money when not usable

8565
08:16:23,280 --> 08:16:25,440
yeah exactly in chat uh we're saying

8566
08:16:25,440 --> 08:16:27,120
photo finish here i agree i mean that's

8567
08:16:27,120 --> 08:16:28,398
kind of the nature of a sudden death is

8568
08:16:28,398 --> 08:16:31,440
it you're you're likely to get it um

8569
08:16:31,440 --> 08:16:33,040
but we're looking at

8570
08:16:33,040 --> 08:16:35,200
yeah i

8571
08:16:35,200 --> 08:16:36,558
waiting to see this one happen this one

8572
08:16:36,558 --> 08:16:37,520
is

8573
08:16:37,520 --> 08:16:38,798
i guess i'm glad this didn't happen

8574
08:16:38,798 --> 08:16:39,840
earlier in the day because if that

8575
08:16:39,840 --> 08:16:41,120
happened the very very beginning we

8576
08:16:41,120 --> 08:16:42,160
would have been

8577
08:16:42,160 --> 08:16:43,760
a long day we do actually have the

8578
08:16:43,760 --> 08:16:46,080
option of actually moving our last match

8579
08:16:46,080 --> 08:16:47,440
of the day to tomorrow morning so it's

8580
08:16:47,440 --> 08:16:49,120
it's entirely possible that we actually

8581
08:16:49,120 --> 08:16:50,958
decide to to rearrange

8582
08:16:50,958 --> 08:16:52,878
and and and move that which might be a

8583
08:16:52,878 --> 08:16:54,478
little bit before your normal you know

8584
08:16:54,478 --> 08:16:57,280
waking hours folk but uh

8585
08:16:57,280 --> 08:16:59,440
it will be you were you were you were a

8586
08:16:59,440 --> 08:17:01,680
night owl even by west coast standards

8587
08:17:01,680 --> 08:17:02,798
so

8588
08:17:02,798 --> 08:17:04,478
i actually often see you like you're

8589
08:17:04,478 --> 08:17:07,360
awake you're awake and i'm uh

8590
08:17:07,360 --> 08:17:08,558
you know waking up in the morning and

8591
08:17:08,558 --> 08:17:10,080
we're interacting on like opposite

8592
08:17:10,080 --> 08:17:11,920
coasts and opposite days times a day

8593
08:17:11,920 --> 08:17:13,840
like relative yo yeah right now i'm

8594
08:17:13,840 --> 08:17:17,040
going to bed at like 6 or seven a.m so

8595
08:17:17,040 --> 08:17:19,200
it's uh it's rough i've been working on

8596
08:17:19,200 --> 08:17:22,798
a fun project though so ah

8597
08:17:23,280 --> 08:17:24,878
all right yeah actually having something

8598
08:17:24,878 --> 08:17:26,478
good to do and having something you're

8599
08:17:26,478 --> 08:17:28,398
excited about though actually absolutely

8600
08:17:28,398 --> 08:17:30,558
makes it harder to like to go to bed

8601
08:17:30,558 --> 08:17:32,318
early like you just it's too easy to get

8602
08:17:32,318 --> 08:17:36,000
consumed oh come on i see them creating

8603
08:17:36,000 --> 08:17:40,478
bite arrays uh calc known egg

8604
08:17:40,478 --> 08:17:44,478
yeah they're both they're both

8605
08:17:44,478 --> 08:17:46,160
i'm just really surprised because i'm

8606
08:17:46,160 --> 08:17:48,958
pretty sure my my view is that you could

8607
08:17:48,958 --> 08:17:49,920
just

8608
08:17:49,920 --> 08:17:51,600
you could throw something in bounds and

8609
08:17:51,600 --> 08:17:53,120
not corrupt the stack

8610
08:17:53,120 --> 08:17:55,040
and then just literally fill in

8611
08:17:55,040 --> 08:17:57,120
everything verbatim the way it existed

8612
08:17:57,120 --> 08:17:59,280
yeah max maximize the size of what it

8613
08:17:59,280 --> 08:18:01,200
could be without overflowing and then

8614
08:18:01,200 --> 08:18:03,360
use that to to just know which next

8615
08:18:03,360 --> 08:18:05,040
thing is in yeah yeah break there there

8616
08:18:05,040 --> 08:18:06,160
you go

8617
08:18:06,160 --> 08:18:08,000
so we got actually a chat question do

8618
08:18:08,000 --> 08:18:10,318
you get a sudden death sudden death

8619
08:18:10,318 --> 08:18:11,600
it certainly

8620
08:18:11,600 --> 08:18:14,080
wasn't planned uh in hindi we're gonna

8621
08:18:14,080 --> 08:18:16,638
switch to a challenge where it's just a

8622
08:18:16,638 --> 08:18:18,558
foot race first one to

8623
08:18:18,558 --> 08:18:20,240
reach the other end of the vegas strip

8624
08:18:20,240 --> 08:18:21,280
win

8625
08:18:21,280 --> 08:18:22,878
oh that would i'd rather do this

8626
08:18:22,878 --> 08:18:24,718
challenge than that for sure

8627
08:18:24,718 --> 08:18:27,440
uh respect yeah especially the the heat

8628
08:18:27,440 --> 08:18:29,440
it is right now in here it's crazy

8629
08:18:29,440 --> 08:18:31,120
so what what happened i heard there were

8630
08:18:31,120 --> 08:18:34,160
floods there is that true two nights ago

8631
08:18:34,160 --> 08:18:35,840
there was oh it was it was like this

8632
08:18:35,840 --> 08:18:38,000
massive like monsoon that just hit i

8633
08:18:38,000 --> 08:18:40,478
mean actually a month oh hold on process

8634
08:18:40,478 --> 08:18:43,040
stopped with code 11. six take v

8635
08:18:43,040 --> 08:18:45,600
hey i think that is sauer's first uh

8636
08:18:45,600 --> 08:18:48,079
segful

8637
08:18:48,558 --> 08:18:49,840
okay so

8638
08:18:49,840 --> 08:18:52,558
that's a good sign but i'm yeah

8639
08:18:52,558 --> 08:18:54,398
i'm i'm putting my okay i'm moving my

8640
08:18:54,398 --> 08:18:56,718
chips over in a sour but uh i might hold

8641
08:18:56,718 --> 08:18:59,120
some in reserve because rekka pig

8642
08:18:59,120 --> 08:19:00,558
i could see them

8643
08:19:00,558 --> 08:19:02,958
reckon pig is architecting yeah rekka

8644
08:19:02,958 --> 08:19:04,718
pig's going for the solution where

8645
08:19:04,718 --> 08:19:06,000
they're gonna run it and it's just gonna

8646
08:19:06,000 --> 08:19:08,398
work exactly exactly if it doesn't

8647
08:19:08,398 --> 08:19:10,000
that's when it really starts to be

8648
08:19:10,000 --> 08:19:11,360
frustrating because it's like oh what

8649
08:19:11,360 --> 08:19:12,558
did i do and now you're reading over

8650
08:19:12,558 --> 08:19:14,318
your code 50 times yeah exactly whereas

8651
08:19:14,318 --> 08:19:15,360
on the other hand source cloud it's kind

8652
08:19:15,360 --> 08:19:17,440
of incrementally like try and break and

8653
08:19:17,440 --> 08:19:19,440
try and break until it's gonna like just

8654
08:19:19,440 --> 08:19:20,958
all of a sudden like build up to a

8655
08:19:20,958 --> 08:19:23,040
correct solution so yeah

8656
08:19:23,040 --> 08:19:26,318
i i love to see the differences uh

8657
08:19:26,318 --> 08:19:29,280
it's a completely different approach

8658
08:19:29,280 --> 08:19:31,360
like programming as well of you know the

8659
08:19:31,360 --> 08:19:32,958
type of person who writes two thousand

8660
08:19:32,958 --> 08:19:35,520
lines of code then fixes the three 3000

8661
08:19:35,520 --> 08:19:36,718
compiler

8662
08:19:36,718 --> 08:19:38,718
yes or the person who every time they

8663
08:19:38,718 --> 08:19:40,000
change one byte in the code they

8664
08:19:40,000 --> 08:19:42,798
recompile their whole code yeah

8665
08:19:42,798 --> 08:19:45,440
or the very very rare people that write

8666
08:19:45,440 --> 08:19:47,280
500 lines of code and it's flawless and

8667
08:19:47,280 --> 08:19:49,040
you're just like how did you how does

8668
08:19:49,040 --> 08:19:50,398
your brain work like that i don't

8669
08:19:50,398 --> 08:19:52,878
understand

8670
08:19:53,200 --> 08:19:54,478
all right so we did yeah we did get a

8671
08:19:54,478 --> 08:19:57,600
question in in chat about uh uh not a

8672
08:19:57,600 --> 08:19:59,120
question but a response the flooding was

8673
08:19:59,120 --> 08:20:00,878
clearly because sauerkraut arrived that

8674
08:20:00,878 --> 08:20:02,718
happened so that's i think that's the

8675
08:20:02,718 --> 08:20:05,280
flooding i see uh you know there was

8676
08:20:05,280 --> 08:20:06,958
parking garages that people were like

8677
08:20:06,958 --> 08:20:09,360
swimming in like just flood water that

8678
08:20:09,360 --> 08:20:10,638
had like flowed through it there was

8679
08:20:10,638 --> 08:20:12,240
dripping in the hotels

8680
08:20:12,240 --> 08:20:15,200
oh it's uh it's been a little crazy

8681
08:20:15,200 --> 08:20:16,398
wow

8682
08:20:16,398 --> 08:20:18,718
oh man

8683
08:20:18,718 --> 08:20:20,240
yeah i think we needed a command

8684
08:20:20,240 --> 08:20:21,760
injection bug where you put semicolon

8685
08:20:21,760 --> 08:20:24,080
into a variable name and uh yeah i guess

8686
08:20:24,080 --> 08:20:27,040
so uh run it that way for our next one

8687
08:20:27,040 --> 08:20:29,200
so this was this was slightly harder

8688
08:20:29,200 --> 08:20:31,280
than although i will actually i will say

8689
08:20:31,280 --> 08:20:32,638
i think they're making this harder than

8690
08:20:32,638 --> 08:20:33,760
it has to be

8691
08:20:33,760 --> 08:20:36,638
and and i think yes yes this this is a

8692
08:20:36,638 --> 08:20:38,240
problem that that i definitely suffer

8693
08:20:38,240 --> 08:20:39,840
with when you go from a much more

8694
08:20:39,840 --> 08:20:42,080
difficult challenge into a simpler

8695
08:20:42,080 --> 08:20:43,600
challenge whether it's just life or

8696
08:20:43,600 --> 08:20:45,360
whatever in that mode you're still in

8697
08:20:45,360 --> 08:20:47,680
that mindset yep

8698
08:20:47,680 --> 08:20:49,120
and you're still in that we need to

8699
08:20:49,120 --> 08:20:51,120
architect this we need to

8700
08:20:51,120 --> 08:20:53,680
make everything nice and pretty and good

8701
08:20:53,680 --> 08:20:55,680
and sometimes that that fights you

8702
08:20:55,680 --> 08:20:57,200
because you end up

8703
08:20:57,200 --> 08:21:00,160
overthinking the the problem yeah i

8704
08:21:00,160 --> 08:21:02,958
agree and if i i think that in some ways

8705
08:21:02,958 --> 08:21:04,638
you know we didn't it compensate and

8706
08:21:04,638 --> 08:21:06,398
kind of in our game design think about

8707
08:21:06,398 --> 08:21:07,840
like the psychological effect if you

8708
08:21:07,840 --> 08:21:10,160
just spent an hour or 50 minutes on a

8709
08:21:10,160 --> 08:21:11,200
really hard challenge you're making

8710
08:21:11,200 --> 08:21:12,240
progress and also you get something

8711
08:21:12,240 --> 08:21:14,160
brand new like that's worse than

8712
08:21:14,160 --> 08:21:15,440
starting from zero that's like starting

8713
08:21:15,440 --> 08:21:17,360
from negative right so you were

8714
08:21:17,360 --> 08:21:19,040
had all this mental energy

8715
08:21:19,040 --> 08:21:20,000
like

8716
08:21:20,000 --> 08:21:21,440
focused on that one thing and now you

8717
08:21:21,440 --> 08:21:22,958
have to completely like step back into

8718
08:21:22,958 --> 08:21:24,080
something else

8719
08:21:24,080 --> 08:21:25,520
it is going to be even kind of kind of

8720
08:21:25,520 --> 08:21:27,600
something extra so i think if we had

8721
08:21:27,600 --> 08:21:28,958
if we had launched this from the start

8722
08:21:28,958 --> 08:21:30,718
they'd both be done by now i have no

8723
08:21:30,718 --> 08:21:31,680
doubt right like they would have

8724
08:21:31,680 --> 08:21:33,360
absolutely really curious what's going

8725
08:21:33,360 --> 08:21:34,798
on with wreck-it pig because they

8726
08:21:34,798 --> 08:21:37,680
haven't run anything

8727
08:21:37,680 --> 08:21:39,200
for like five minutes they are

8728
08:21:39,200 --> 08:21:42,478
architecting they are like yes reading

8729
08:21:42,478 --> 08:21:44,240
statically analyzing the code and they

8730
08:21:44,240 --> 08:21:46,798
are they are constructing that stack

8731
08:21:46,798 --> 08:21:49,040
perfectly well i will say rekha pig was

8732
08:21:49,040 --> 08:21:51,200
was frustrated i think by the end and

8733
08:21:51,200 --> 08:21:52,398
was thinking they had more time to

8734
08:21:52,398 --> 08:21:54,318
finish the other exploit i think so this

8735
08:21:54,318 --> 08:21:56,318
may have been a different so teams can

8736
08:21:56,318 --> 08:21:58,080
send a different team member between

8737
08:21:58,080 --> 08:21:59,440
rounds right and so some of the so

8738
08:21:59,440 --> 08:22:01,440
everybody who played in round one should

8739
08:22:01,440 --> 08:22:02,558
have already been very familiar coming

8740
08:22:02,558 --> 08:22:04,160
back they knew we you know they've been

8741
08:22:04,160 --> 08:22:06,160
out they've been told twice now about

8742
08:22:06,160 --> 08:22:07,360
the sudden death and they knew that kind

8743
08:22:07,360 --> 08:22:09,760
of setup of it um whereas it may not

8744
08:22:09,760 --> 08:22:11,360
they may not have been as aware as this

8745
08:22:11,360 --> 08:22:13,600
uh if this is their first round and so

8746
08:22:13,600 --> 08:22:15,120
this challenge though this is great this

8747
08:22:15,120 --> 08:22:16,718
is a fantastic challenge eggs and the

8748
08:22:16,718 --> 08:22:18,718
eggs in the basket this actually could

8749
08:22:18,718 --> 08:22:21,120
have been this is this is very uh i know

8750
08:22:21,120 --> 08:22:24,318
i keep saying it's very not sturdy yeah

8751
08:22:24,318 --> 08:22:25,520
it just

8752
08:22:25,520 --> 08:22:27,280
you see someone come in and sit down and

8753
08:22:27,280 --> 08:22:28,958
just do it in 30 seconds and it's like

8754
08:22:28,958 --> 08:22:31,280
oh god all right why was my approach so

8755
08:22:31,280 --> 08:22:32,558
bad yeah why couldn't i have done it

8756
08:22:32,558 --> 08:22:33,680
that way

8757
08:22:33,680 --> 08:22:36,240
yup yup exactly because everyone here

8758
08:22:36,240 --> 08:22:38,160
absolutely has the capacity to probably

8759
08:22:38,160 --> 08:22:39,920
solve this challenge in under a minute

8760
08:22:39,920 --> 08:22:43,120
oh like pop it up just

8761
08:22:43,120 --> 08:22:45,360
it's that mindset it's really where your

8762
08:22:45,360 --> 08:22:47,600
head's at it's it's the first issue that

8763
08:22:47,600 --> 08:22:50,080
you ran into that causes you to just

8764
08:22:50,080 --> 08:22:52,718
derail change that focus and really

8765
08:22:52,718 --> 08:22:54,558
really drive down a certain path and and

8766
08:22:54,558 --> 08:22:56,160
i don't know if uh if we switch back

8767
08:22:56,160 --> 08:22:58,240
over to the uh to the camera in the room

8768
08:22:58,240 --> 08:23:00,318
if we show that like if you can see

8769
08:23:00,318 --> 08:23:02,240
there is a crowd gathering kind of

8770
08:23:02,240 --> 08:23:04,398
around them like off to the side here

8771
08:23:04,398 --> 08:23:06,160
like there's actually let me see if i

8772
08:23:06,160 --> 08:23:08,240
can zoom out the camera a little bit

8773
08:23:08,240 --> 08:23:09,120
um

8774
08:23:09,120 --> 08:23:10,958
there is like wow

8775
08:23:10,958 --> 08:23:12,398
just off camera there's actually some

8776
08:23:12,398 --> 08:23:14,080
big groups of people here

8777
08:23:14,080 --> 08:23:16,958
um where they are like

8778
08:23:16,958 --> 08:23:18,558
kind of surrounded by people so that

8779
08:23:18,558 --> 08:23:19,920
really can be nerve-wracking like that

8780
08:23:19,920 --> 08:23:22,240
can add and amp up the

8781
08:23:22,240 --> 08:23:23,200
um

8782
08:23:23,200 --> 08:23:25,360
the the difficulty of like you know

8783
08:23:25,360 --> 08:23:26,638
you're just trying to solve a challenge

8784
08:23:26,638 --> 08:23:28,240
and you've got

8785
08:23:28,240 --> 08:23:30,000
people around you you just failed this

8786
08:23:30,000 --> 08:23:32,958
other challenge and this is uh yeah this

8787
08:23:32,958 --> 08:23:34,398
is this is rough

8788
08:23:34,398 --> 08:23:36,318
so i don't know ricky pick we've got

8789
08:23:36,318 --> 08:23:39,760
googling python bytes to array

8790
08:23:39,760 --> 08:23:42,160
oh no just use python 2.

8791
08:23:42,160 --> 08:23:43,760
we didn't have this problem

8792
08:23:43,760 --> 08:23:47,360
yes yes listen listen we i'm sorry that

8793
08:23:47,360 --> 08:23:49,600
ship has sailed it is time for three i

8794
08:23:49,600 --> 08:23:51,520
don't disagree it is worse for that

8795
08:23:51,520 --> 08:23:53,680
problem

8796
08:23:53,680 --> 08:23:55,360
but there's actually the python's gotten

8797
08:23:55,360 --> 08:23:57,520
better it's gotten a whole lot better

8798
08:23:57,520 --> 08:24:00,240
it really has i i yeah

8799
08:24:00,240 --> 08:24:02,798
i i switched to python 3 like six years

8800
08:24:02,798 --> 08:24:04,160
ago and and

8801
08:24:04,160 --> 08:24:06,240
it pains me how long it's taking others

8802
08:24:06,240 --> 08:24:07,840
to to shift

8803
08:24:07,840 --> 08:24:10,718
yeah uh although i now that both ida and

8804
08:24:10,718 --> 08:24:12,638
binja have fully deprecated python 2 i

8805
08:24:12,638 --> 08:24:14,558
think gitora is your only option if you

8806
08:24:14,558 --> 08:24:16,318
want to run python 2 and then you're

8807
08:24:16,318 --> 08:24:18,318
running python 2 through gython which is

8808
08:24:18,318 --> 08:24:20,240
which is its own monstrosity

8809
08:24:20,240 --> 08:24:22,958
yeah i mean

8810
08:24:23,760 --> 08:24:26,000
ninja over here uh for i think the first

8811
08:24:26,000 --> 08:24:27,680
time maybe we're i mean we're just just

8812
08:24:27,680 --> 08:24:30,718
disassembling graph view graph view is

8813
08:24:30,718 --> 08:24:31,520
is

8814
08:24:31,520 --> 08:24:34,638
personally what i always use like it's

8815
08:24:34,638 --> 08:24:35,680
it

8816
08:24:35,680 --> 08:24:38,080
you can infer a lot of what the program

8817
08:24:38,080 --> 08:24:39,840
is doing based on the shape of the graph

8818
08:24:39,840 --> 08:24:42,080
and you lose that in ielts you lose that

8819
08:24:42,080 --> 08:24:44,478
in disassembly decompilation

8820
08:24:44,478 --> 08:24:49,040
and uh guidra really really put the um

8821
08:24:49,040 --> 08:24:53,280
um the the well the code on the side and

8822
08:24:53,280 --> 08:24:55,520
the like disassembly on the other side

8823
08:24:55,520 --> 08:24:56,718
and now that's what i do in all my

8824
08:24:56,718 --> 08:24:58,878
environments i do that i do that side by

8825
08:24:58,878 --> 08:25:01,680
side with graph graph is like

8826
08:25:01,680 --> 08:25:03,120
mandatory and that's happening do you

8827
08:25:03,120 --> 08:25:04,798
have decompilation on one side and then

8828
08:25:04,798 --> 08:25:06,558
graph you disassembly on the other side

8829
08:25:06,558 --> 08:25:09,040
or yeah yeah yeah i still prefer

8830
08:25:09,040 --> 08:25:11,200
disassembly and craft view personally

8831
08:25:11,200 --> 08:25:14,160
really yeah like disassembly is is like

8832
08:25:14,160 --> 08:25:16,000
graphic oh sorry not for my default

8833
08:25:16,000 --> 08:25:17,200
right i want to have i want to have high

8834
08:25:17,200 --> 08:25:19,040
level idle as well but like if i'm

8835
08:25:19,040 --> 08:25:21,520
looking at a disassembly i want i still

8836
08:25:21,520 --> 08:25:23,520
want my graph view um

8837
08:25:23,520 --> 08:25:25,440
oh come on i think we're about to see

8838
08:25:25,440 --> 08:25:27,280
wreck a pig

8839
08:25:27,280 --> 08:25:29,120
like they're just

8840
08:25:29,120 --> 08:25:30,958
calc known egg they're they're calling

8841
08:25:30,958 --> 08:25:32,160
their funks they just spent a lot of

8842
08:25:32,160 --> 08:25:34,398
time constructing this function and now

8843
08:25:34,398 --> 08:25:36,878
they are using it yeah yeah and there's

8844
08:25:36,878 --> 08:25:38,718
a lot of math and a lot of constants and

8845
08:25:38,718 --> 08:25:40,478
a lot of numbers in here i have no idea

8846
08:25:40,478 --> 08:25:42,958
if it's right but ah right

8847
08:25:42,958 --> 08:25:45,120
it's it feels it feels

8848
08:25:45,120 --> 08:25:47,680
far over engineered versus just breaking

8849
08:25:47,680 --> 08:25:49,040
the debugger and then look at it but you

8850
08:25:49,040 --> 08:25:50,160
know what

8851
08:25:50,160 --> 08:25:52,318
you could just you could just like gdb

8852
08:25:52,318 --> 08:25:53,280
attach

8853
08:25:53,280 --> 08:25:55,760
right mem the stack load that up into

8854
08:25:55,760 --> 08:25:57,760
your thing and then write the first 40

8855
08:25:57,760 --> 08:26:00,080
bytes from an existing valid copy and

8856
08:26:00,080 --> 08:26:01,600
paste the buffer and just put it right

8857
08:26:01,600 --> 08:26:03,440
there what did we just get there we got

8858
08:26:03,440 --> 08:26:08,359
some sort of a crash from wreck-it pig

8859
08:26:09,040 --> 08:26:10,638
um

8860
08:26:10,638 --> 08:26:13,600
ooh did they crash on leave

8861
08:26:13,600 --> 08:26:14,638
no

8862
08:26:14,638 --> 08:26:15,920
they're on

8863
08:26:15,920 --> 08:26:18,318
oh i can't quite see it yeah okay we are

8864
08:26:18,318 --> 08:26:19,680
giving them a hint that tells them

8865
08:26:19,680 --> 08:26:22,240
exactly what the exploit is it is going

8866
08:26:22,240 --> 08:26:23,760
to basically say

8867
08:26:23,760 --> 08:26:25,440
too many bytes here

8868
08:26:25,440 --> 08:26:27,920
stack over stack smash and there's a win

8869
08:26:27,920 --> 08:26:29,840
function like no shell code there's a

8870
08:26:29,840 --> 08:26:31,440
win function built in

8871
08:26:31,440 --> 08:26:33,360
we're trying to give them like this did

8872
08:26:33,360 --> 08:26:35,200
we just crash

8873
08:26:35,200 --> 08:26:37,280
with rekka pig i think wreck a pig just

8874
08:26:37,280 --> 08:26:38,638
they either put a break point on the

8875
08:26:38,638 --> 08:26:40,160
right to see where they are or they just

8876
08:26:40,160 --> 08:26:44,798
crashed on it i saw them looking at it

8877
08:26:45,200 --> 08:26:47,120
now

8878
08:26:47,120 --> 08:26:48,958
yeah there we go just get the address of

8879
08:26:48,958 --> 08:26:51,200
it like copy address you know you gotta

8880
08:26:51,200 --> 08:26:52,638
look at it just run it you just gotta

8881
08:26:52,638 --> 08:26:54,958
run it

8882
08:26:54,958 --> 08:26:56,478
come on

8883
08:26:56,478 --> 08:26:58,798
no just copy the address of it oh yeah

8884
08:26:58,798 --> 08:27:01,280
there you go there you go there it is

8885
08:27:01,280 --> 08:27:03,520
my favorite hotkey images can uh command

8886
08:27:03,520 --> 08:27:05,440
shift a it's copy address

8887
08:27:05,440 --> 08:27:07,120
just going to say that copying addresses

8888
08:27:07,120 --> 08:27:09,760
and ida is so so hard yeah i always hit

8889
08:27:09,760 --> 08:27:11,360
and i hit space and then i go over and i

8890
08:27:11,360 --> 08:27:12,718
scroll and copy the side and binge it

8891
08:27:12,718 --> 08:27:14,638
it's like a default hotkey uh it's just

8892
08:27:14,638 --> 08:27:16,558
like copy current address

8893
08:27:16,558 --> 08:27:18,000
so they're throwing this against their

8894
08:27:18,000 --> 08:27:19,440
local run where they're debugging it and

8895
08:27:19,440 --> 08:27:22,398
stuff i'm guessing one second

8896
08:27:22,398 --> 08:27:24,878
on the producer's build

8897
08:27:24,878 --> 08:27:27,680
come on record there is pi

8898
08:27:27,680 --> 08:27:31,520
oh is pi what's killing them on uh

8899
08:27:31,520 --> 08:27:35,120
so are they partial overriding if so

8900
08:27:35,520 --> 08:27:36,958
well you have a solution script you can

8901
08:27:36,958 --> 08:27:39,760
look at what does that do

8902
08:27:39,760 --> 08:27:41,600
so there is pi i said i think i said

8903
08:27:41,600 --> 08:27:43,120
there isn't pi

8904
08:27:43,120 --> 08:27:45,360
this is not live overflow we've got

8905
08:27:45,360 --> 08:27:49,040
gambozo uh and i'm ciphertext jordan uh

8906
08:27:49,040 --> 08:27:52,478
uh well brandon gamozzo falk and jordan

8907
08:27:52,478 --> 08:27:55,040
cipherdex we are watching

8908
08:27:55,040 --> 08:27:58,958
yes envolons was was a true speedrun for

8909
08:27:58,958 --> 08:28:01,920
sure um

8910
08:28:01,920 --> 08:28:04,080
so they're they're working up on hints i

8911
08:28:04,080 --> 08:28:05,440
feel a little bad now because the hints

8912
08:28:05,440 --> 08:28:07,600
themselves are almost distracting

8913
08:28:07,600 --> 08:28:09,920
yeah but like

8914
08:28:09,920 --> 08:28:12,240
we are

8915
08:28:12,240 --> 08:28:15,600
we are really trying to uh

8916
08:28:15,600 --> 08:28:17,040
there is did the hint say there was no

8917
08:28:17,040 --> 08:28:18,240
player did i just say there was nobody

8918
08:28:18,240 --> 08:28:20,160
now i'm just i'm just confused too all

8919
08:28:20,160 --> 08:28:22,878
right this one is

8920
08:28:24,000 --> 08:28:25,040
go fix

8921
08:28:25,040 --> 08:28:27,200
deletion from wreck go fix it get a pen

8922
08:28:27,200 --> 08:28:28,398
or something i don't know what's going

8923
08:28:28,398 --> 08:28:29,760
okay i think the hint may have been

8924
08:28:29,760 --> 08:28:32,398
incorrect this is this is madness

8925
08:28:32,398 --> 08:28:33,760
this one no

8926
08:28:33,760 --> 08:28:37,520
oh no oh man i feel bad

8927
08:28:37,520 --> 08:28:39,760
i feel bad

8928
08:28:39,760 --> 08:28:41,680
i've been here so many times i will say

8929
08:28:41,680 --> 08:28:44,160
commentating this is a lot easier it is

8930
08:28:44,160 --> 08:28:46,160
right it's so much nicer than not being

8931
08:28:46,160 --> 08:28:48,080
sitting right here and and having to i'm

8932
08:28:48,080 --> 08:28:50,000
not feeling the pain myself

8933
08:28:50,000 --> 08:28:52,080
no but you still feel some empathy right

8934
08:28:52,080 --> 08:28:54,318
because you know i definitely feel the

8935
08:28:54,318 --> 08:28:57,280
uh what is it what is it called the

8936
08:28:57,280 --> 08:28:59,440
is it is it a german there's something

8937
08:28:59,440 --> 08:29:01,280
like when you feel the you pleasure at

8938
08:29:01,280 --> 08:29:02,878
not having to experience their pain or

8939
08:29:02,878 --> 08:29:05,760
something or like you you directly like

8940
08:29:05,760 --> 08:29:08,638
kind of feel their pain not not imp i

8941
08:29:08,638 --> 08:29:11,840
know what empathy is okay yeah yeah

8942
08:29:11,840 --> 08:29:13,680
but like there's there's a word for it i

8943
08:29:13,680 --> 08:29:14,878
think

8944
08:29:14,878 --> 08:29:16,240
gosh

8945
08:29:16,240 --> 08:29:17,440
there's a german word for everything so

8946
08:29:17,440 --> 08:29:19,360
of course well yeah there is so you're

8947
08:29:19,360 --> 08:29:20,958
getting questions in the chat if when

8948
08:29:20,958 --> 08:29:22,840
are they going to see you do ctf

8949
08:29:22,840 --> 08:29:25,040
challenges it's been this year this is

8950
08:29:25,040 --> 08:29:27,040
exactly what would happen if i do ctf

8951
08:29:27,040 --> 08:29:28,478
challenges and i'm going to feel really

8952
08:29:28,478 --> 08:29:30,398
bad about myself when i go to bed but

8953
08:29:30,398 --> 08:29:32,638
you would you would then get you'd get

8954
08:29:32,638 --> 08:29:34,718
better at it you'd practice it if you uh

8955
08:29:34,718 --> 08:29:36,958
segmentation fault number of eggs

8956
08:29:36,958 --> 08:29:39,520
i am i need a break if i was one of

8957
08:29:39,520 --> 08:29:41,200
these teammates i might just close my

8958
08:29:41,200 --> 08:29:42,718
eyes

8959
08:29:42,718 --> 08:29:44,958
start over like

8960
08:29:44,958 --> 08:29:46,798
man oh there we go so we've got some

8961
08:29:46,798 --> 08:29:48,478
translation

8962
08:29:48,478 --> 08:29:49,840
friend

8963
08:29:49,840 --> 08:29:53,440
frenchman i'm saying that wrong

8964
08:29:53,440 --> 08:29:57,359
this is secondhand embarrassment

8965
08:29:57,600 --> 08:29:59,920
this is

8966
08:29:59,920 --> 08:30:02,958
i think i have heard of that

8967
08:30:02,958 --> 08:30:04,638
yeah yeah to feel secondhand

8968
08:30:04,638 --> 08:30:08,080
embarrassment yup there we go thank you

8969
08:30:08,080 --> 08:30:10,958
chat this is what chat's for oh

8970
08:30:10,958 --> 08:30:13,440
so number of eggs dollar sign there's

8971
08:30:13,440 --> 08:30:16,318
lots of dollar sign eggs

8972
08:30:16,318 --> 08:30:20,000
we're running it in rr

8973
08:30:20,000 --> 08:30:22,478
oh my god i i do know like this is one

8974
08:30:22,478 --> 08:30:23,280
of the

8975
08:30:23,280 --> 08:30:25,280
validated poems we have a simple pwn

8976
08:30:25,280 --> 08:30:27,280
script that does solve this uh and i

8977
08:30:27,280 --> 08:30:28,718
thought it was pretty straightforward

8978
08:30:28,718 --> 08:30:31,600
but man i uh

8979
08:30:31,600 --> 08:30:33,360
i think we have we have broken our

8980
08:30:33,360 --> 08:30:35,360
players and i think you're back we

8981
08:30:35,360 --> 08:30:36,958
actually have we just need one of them

8982
08:30:36,958 --> 08:30:38,958
to win though and they can they can go

8983
08:30:38,958 --> 08:30:40,718
go rest and relax and we'll we'll pick

8984
08:30:40,718 --> 08:30:43,600
it up tomorrow with uh the next round

8985
08:30:43,600 --> 08:30:46,840
i i know exactly what these

8986
08:30:46,840 --> 08:30:50,160
um oh we got a little bit of spam

8987
08:30:50,160 --> 08:30:51,840
yeah and

8988
08:30:51,840 --> 08:30:55,040
doing this like uh

8989
08:30:55,040 --> 08:30:56,878
you know normally like in an actual ctf

8990
08:30:56,878 --> 08:30:58,240
at home

8991
08:30:58,240 --> 08:30:59,520
um

8992
08:30:59,520 --> 08:31:02,160
you you have the option of like stepping

8993
08:31:02,160 --> 08:31:04,160
away right and actually i'm trying a

8994
08:31:04,160 --> 08:31:05,680
different challenge and stepping away is

8995
08:31:05,680 --> 08:31:08,398
what saves you time it's but here

8996
08:31:08,398 --> 08:31:09,760
or like going to bed right same thing

8997
08:31:09,760 --> 08:31:11,120
you're a ctf and it's like no no you

8998
08:31:11,120 --> 08:31:12,718
just need sleep like you're actually not

8999
08:31:12,718 --> 08:31:13,840
being productive anymore you got to know

9000
08:31:13,840 --> 08:31:15,680
when to walk away you don't have that

9001
08:31:15,680 --> 08:31:18,160
option in this and so we're just yeah

9002
08:31:18,160 --> 08:31:20,160
we're seeing them like just really

9003
08:31:20,160 --> 08:31:21,520
struggle

9004
08:31:21,520 --> 08:31:24,000
and yeah again these are great players

9005
08:31:24,000 --> 08:31:26,160
they're good solvers this the challenges

9006
08:31:26,160 --> 08:31:27,520
are fine it's just

9007
08:31:27,520 --> 08:31:29,280
sometimes you get stuck in this rut and

9008
08:31:29,280 --> 08:31:30,878
your brain is

9009
08:31:30,878 --> 08:31:32,878
uh brand's working i think i've been

9010
08:31:32,878 --> 08:31:35,840
here so many times like i know exactly

9011
08:31:35,840 --> 08:31:37,120
like i

9012
08:31:37,120 --> 08:31:38,878
i know all of the emotions that are

9013
08:31:38,878 --> 08:31:40,160
going on

9014
08:31:40,160 --> 08:31:41,520
yes

9015
08:31:41,520 --> 08:31:43,120
i know i apologize we should put a

9016
08:31:43,120 --> 08:31:44,638
trigger warning apologist in chat for

9017
08:31:44,638 --> 08:31:45,760
all the anxiety that you guys are

9018
08:31:45,760 --> 08:31:47,680
getting into we're all like but listen

9019
08:31:47,680 --> 08:31:49,360
the relief is gonna be so good when we

9020
08:31:49,360 --> 08:31:51,600
see that winner logo when somebody gets

9021
08:31:51,600 --> 08:31:52,798
a shell

9022
08:31:52,798 --> 08:31:54,478
it's gonna feel real good

9023
08:31:54,478 --> 08:31:56,318
the problem is i know that when you lose

9024
08:31:56,318 --> 08:31:58,478
a challenge like this you just you think

9025
08:31:58,478 --> 08:31:59,680
about it for the next hour and you're

9026
08:31:59,680 --> 08:32:01,920
like i don't know what i could have done

9027
08:32:01,920 --> 08:32:03,120
i could have written

9028
08:32:03,120 --> 08:32:05,200
a two followed by a one followed by a

9029
08:32:05,200 --> 08:32:07,520
six and then a couple nulls and then a

9030
08:32:07,520 --> 08:32:09,360
return address and it'd be over yeah

9031
08:32:09,360 --> 08:32:11,440
yeah we had one earlier like we had one

9032
08:32:11,440 --> 08:32:13,040
earlier that chris eagle actually was in

9033
08:32:13,040 --> 08:32:14,638
where he lost the round

9034
08:32:14,638 --> 08:32:17,040
that he lost it because so uh i think i

9035
08:32:17,040 --> 08:32:18,878
mentioned this is the the file override

9036
08:32:18,878 --> 08:32:21,440
where you could write to proc self mem

9037
08:32:21,440 --> 08:32:22,240
and

9038
08:32:22,240 --> 08:32:23,680
he was getting stuck not letting it

9039
08:32:23,680 --> 08:32:27,040
flush right so by not oh no he like his

9040
08:32:27,040 --> 08:32:28,638
overwrite worked but his break point

9041
08:32:28,638 --> 08:32:30,558
when he went to go check it was before

9042
08:32:30,558 --> 08:32:32,080
the flush and so he's like oh it's just

9043
08:32:32,080 --> 08:32:33,360
not working what's wrong with my script

9044
08:32:33,360 --> 08:32:35,280
he was he was fighting something that

9045
08:32:35,280 --> 08:32:36,638
wasn't broken

9046
08:32:36,638 --> 08:32:38,000
because he just broke in at the wrong

9047
08:32:38,000 --> 08:32:40,398
time so like just stuff like that and

9048
08:32:40,398 --> 08:32:41,680
then you're just kicking yourself you

9049
08:32:41,680 --> 08:32:44,240
know the whole next time

9050
08:32:44,240 --> 08:32:46,638
wow so we don't cover psychiatrist cost

9051
08:32:46,638 --> 08:32:49,520
chat unfortunately that is not uh we our

9052
08:32:49,520 --> 08:32:51,040
business insurance doesn't cover we

9053
08:32:51,040 --> 08:32:52,160
don't have business insurance we're not

9054
08:32:52,160 --> 08:32:54,398
a business this is this is a non-profit

9055
08:32:54,398 --> 08:32:55,760
or not even a non-profit this is just

9056
08:32:55,760 --> 08:32:57,520
like a bunch of people doing something

9057
08:32:57,520 --> 08:32:58,558
for fun

9058
08:32:58,558 --> 08:33:00,160
so uh

9059
08:33:00,160 --> 08:33:02,000
i know you're you're joking i wish i

9060
08:33:02,000 --> 08:33:03,360
wish we could though we should give them

9061
08:33:03,360 --> 08:33:04,718
like

9062
08:33:04,718 --> 08:33:06,638
uh big bear pillows or something to like

9063
08:33:06,638 --> 08:33:09,360
you know squeeze afterwards yeah bring a

9064
08:33:09,360 --> 08:33:11,520
an empathy pet or something a dog they

9065
08:33:11,520 --> 08:33:13,440
can they're not they're not even being

9066
08:33:13,440 --> 08:33:15,120
actively heckled though and that's

9067
08:33:15,120 --> 08:33:16,718
that's what's really throwing me off

9068
08:33:16,718 --> 08:33:18,160
here

9069
08:33:18,160 --> 08:33:20,318
it could be worse it could be it could

9070
08:33:20,318 --> 08:33:22,878
be worse yeah and i think i think at the

9071
08:33:22,878 --> 08:33:25,200
you know eventually when live ctf gets

9072
08:33:25,200 --> 08:33:26,398
really really common and it's happened

9073
08:33:26,398 --> 08:33:27,760
all the time and people are really used

9074
08:33:27,760 --> 08:33:29,680
to it that's when we're going to amp up

9075
08:33:29,680 --> 08:33:30,958
the heckling that's when it's going to

9076
08:33:30,958 --> 08:33:32,798
be like oh no no take off the headphones

9077
08:33:32,798 --> 08:33:34,398
and we're just going to troll you well i

9078
08:33:34,398 --> 08:33:35,520
mean that's what like you know

9079
08:33:35,520 --> 08:33:36,798
infiltrate is like right when they would

9080
08:33:36,798 --> 08:33:38,398
do the knob serves

9081
08:33:38,398 --> 08:33:39,840
are you going to be going to offensive

9082
08:33:39,840 --> 08:33:40,718
con

9083
08:33:40,718 --> 08:33:43,200
in what is that february uh yeah that's

9084
08:33:43,200 --> 08:33:44,878
the plan uh we were just just talking

9085
08:33:44,878 --> 08:33:46,080
but yeah i'm looking looking forward to

9086
08:33:46,080 --> 08:33:47,760
going out there

9087
08:33:47,760 --> 08:33:49,600
maybe i've heard that that has the most

9088
08:33:49,600 --> 08:33:52,160
similar vibe to uh an infiltrate and i

9089
08:33:52,160 --> 08:33:54,160
need infiltrate back in my life i agree

9090
08:33:54,160 --> 08:33:56,398
with you i miss infiltrate strongly and

9091
08:33:56,398 --> 08:33:58,000
so far that's it the other one that

9092
08:33:58,000 --> 08:33:59,600
might be similar is coming up this year

9093
08:33:59,600 --> 08:34:02,000
which is in paris uh hexacon

9094
08:34:02,000 --> 08:34:04,160
in i want to say september or october so

9095
08:34:04,160 --> 08:34:05,920
you might want to check out that one

9096
08:34:05,920 --> 08:34:08,318
um that this year oh yeah yeah it's

9097
08:34:08,318 --> 08:34:09,760
coming up this year it may be still too

9098
08:34:09,760 --> 08:34:11,920
too soon to travel

9099
08:34:11,920 --> 08:34:13,280
i don't i would have to talk to my

9100
08:34:13,280 --> 08:34:15,920
employer uh he says it's fine

9101
08:34:15,920 --> 08:34:17,520
yeah you turned around and asked

9102
08:34:17,520 --> 08:34:19,360
yourself

9103
08:34:19,360 --> 08:34:21,360
isn't it nice

9104
08:34:21,360 --> 08:34:23,600
yeah it's got yeah there's certainly

9105
08:34:23,600 --> 08:34:25,360
pluses anyways

9106
08:34:25,360 --> 08:34:28,638
so let's see like i i saw a lot of code

9107
08:34:28,638 --> 08:34:31,120
being deleted from sarah cloud which is

9108
08:34:31,120 --> 08:34:32,958
really scary

9109
08:34:32,958 --> 08:34:34,798
rekha pig is really commit to this one

9110
08:34:34,798 --> 08:34:37,200
function and they just keep adding our

9111
08:34:37,200 --> 08:34:39,680
magic constants to it i it looks like a

9112
08:34:39,680 --> 08:34:42,160
crack me i don't i don't know

9113
08:34:42,160 --> 08:34:43,840
i don't know what's going on with that

9114
08:34:43,840 --> 08:34:45,280
um

9115
08:34:45,280 --> 08:34:46,798
they it's like the distinction the

9116
08:34:46,798 --> 08:34:49,760
madness i do and this is we did get a

9117
08:34:49,760 --> 08:34:51,680
a chat question of did the teams send

9118
08:34:51,680 --> 08:34:53,680
their web players no

9119
08:34:53,680 --> 08:34:56,478
these are good exploiters they really

9120
08:34:56,478 --> 08:34:58,080
yeah this is

9121
08:34:58,080 --> 08:34:58,840
this

9122
08:34:58,840 --> 08:35:01,840
is to the best of what top tier binary

9123
08:35:01,840 --> 08:35:04,080
exploitation people look like in in the

9124
08:35:04,080 --> 08:35:06,000
in the heat of it yeah it's just the the

9125
08:35:06,000 --> 08:35:07,600
the constraints that are under here are

9126
08:35:07,600 --> 08:35:08,718
very different than the contracts

9127
08:35:08,718 --> 08:35:10,240
they're normally under

9128
08:35:10,240 --> 08:35:12,398
and the the shift to sudden death this

9129
08:35:12,398 --> 08:35:14,160
is the very first time we've ever had to

9130
08:35:14,160 --> 08:35:16,318
do a sudden death and like that i think

9131
08:35:16,318 --> 08:35:17,840
it's thrown things off

9132
08:35:17,840 --> 08:35:19,600
um

9133
08:35:19,600 --> 08:35:24,318
so so we'll we'll see uh i think

9134
08:35:24,638 --> 08:35:26,160
yeah come on

9135
08:35:26,160 --> 08:35:27,680
where are we even at

9136
08:35:27,680 --> 08:35:29,440
where are we there's a lot of up arrow

9137
08:35:29,440 --> 08:35:32,160
enters and a lot of i think hope

9138
08:35:32,160 --> 08:35:34,318
all right are we gonna are we gonna like

9139
08:35:34,318 --> 08:35:36,000
recompile it gets and actually have a

9140
08:35:36,000 --> 08:35:37,520
sudden death sudden death i don't know

9141
08:35:37,520 --> 08:35:39,680
what uh

9142
08:35:39,680 --> 08:35:43,840
are we close yeah which on which one

9143
08:35:55,280 --> 08:35:56,318
i

9144
08:35:56,318 --> 08:35:57,760
i need a break

9145
08:35:57,760 --> 08:36:00,240
it's been high energy high energy so

9146
08:36:00,240 --> 08:36:03,360
we're now looking at the the memory maps

9147
08:36:03,360 --> 08:36:05,280
and trying to figure out i guess maybe

9148
08:36:05,280 --> 08:36:08,638
what these addresses are uh so in ida

9149
08:36:08,638 --> 08:36:11,200
the addresses are going to be based at

9150
08:36:11,200 --> 08:36:12,798
zero because this is uh like a

9151
08:36:12,798 --> 08:36:15,680
dynamically um moved thing

9152
08:36:15,680 --> 08:36:17,120
so i think right now they're actually

9153
08:36:17,120 --> 08:36:18,638
trying to figure out the true absolute

9154
08:36:18,638 --> 08:36:20,638
address of where these things are loaded

9155
08:36:20,638 --> 08:36:22,798
uh i've definitely clicked on addresses

9156
08:36:22,798 --> 08:36:24,318
a bunch of times highlighting them

9157
08:36:24,318 --> 08:36:27,600
hoping that hoping that it clicks

9158
08:36:27,600 --> 08:36:31,200
it's crazy because the same um

9159
08:36:31,200 --> 08:36:32,878
i i don't want to i don't want to say

9160
08:36:32,878 --> 08:36:34,718
ticks but like same ticks of like

9161
08:36:34,718 --> 08:36:36,798
clicking the same thing

9162
08:36:36,798 --> 08:36:39,120
yeah highlighting the address over and

9163
08:36:39,120 --> 08:36:41,520
over and over

9164
08:36:41,520 --> 08:36:43,760
you know we all do that yeah oh so the

9165
08:36:43,760 --> 08:36:45,280
the address offset somebody just earlier

9166
08:36:45,280 --> 08:36:47,280
showed me a trick that i hadn't seen

9167
08:36:47,280 --> 08:36:49,120
that was uh

9168
08:36:49,120 --> 08:36:51,600
the ability for jeff to automatically

9169
08:36:51,600 --> 08:36:54,080
like re-pointer stuff based on relative

9170
08:36:54,080 --> 08:36:56,958
addresses of of uh loads so

9171
08:36:56,958 --> 08:36:58,718
that was the thing really really nifty i

9172
08:36:58,718 --> 08:36:59,680
hadn't actually seen that one before

9173
08:36:59,680 --> 08:37:01,440
because usually i would either

9174
08:37:01,440 --> 08:37:03,680
rebase binge or ida right like at the

9175
08:37:03,680 --> 08:37:05,840
base like load address or just do a

9176
08:37:05,840 --> 08:37:07,600
bunch of math separately but

9177
08:37:07,600 --> 08:37:09,040
there's no reason here you can't do a

9178
08:37:09,040 --> 08:37:11,760
partial overwrite

9179
08:37:11,760 --> 08:37:13,120
you can do a two byte override of the

9180
08:37:13,120 --> 08:37:15,200
return address that is the exactly the

9181
08:37:15,200 --> 08:37:17,280
intended solution that is exactly what

9182
08:37:17,280 --> 08:37:18,958
you're supposed to do is that's why we

9183
08:37:18,958 --> 08:37:20,958
said there's a win you're trying to hit

9184
08:37:20,958 --> 08:37:21,840
the win

9185
08:37:21,840 --> 08:37:23,840
it it is pi

9186
08:37:23,840 --> 08:37:25,280
which was which was something clearly a

9187
08:37:25,280 --> 08:37:26,958
mistake you should have just uh although

9188
08:37:26,958 --> 08:37:28,318
although even still they would have

9189
08:37:28,318 --> 08:37:30,080
otherwise i mean you even then you would

9190
08:37:30,080 --> 08:37:31,200
want to do the partial override because

9191
08:37:31,200 --> 08:37:33,520
you don't have a pointer

9192
08:37:33,520 --> 08:37:35,440
uh you would actually server side yeah

9193
08:37:35,440 --> 08:37:38,160
yeah and so

9194
08:37:38,240 --> 08:37:40,718
uh come on

9195
08:37:40,718 --> 08:37:43,280
where are we at

9196
08:37:43,360 --> 08:37:46,080
it really comes down to how quickly can

9197
08:37:46,080 --> 08:37:48,718
you do stack math and like know the

9198
08:37:48,718 --> 08:37:50,160
layout of the stack in your head because

9199
08:37:50,160 --> 08:37:51,840
there's a lot of guessing every time you

9200
08:37:51,840 --> 08:37:53,840
see like a comma one adding something to

9201
08:37:53,840 --> 08:37:55,040
array

9202
08:37:55,040 --> 08:37:57,440
every time that happens i know exactly

9203
08:37:57,440 --> 08:37:58,798
it's like oh maybe there is a frame

9204
08:37:58,798 --> 08:38:00,558
former maybe i accounted for the frame

9205
08:38:00,558 --> 08:38:02,958
pointer i need to go one behind it yeah

9206
08:38:02,958 --> 08:38:04,160
just fiddling with all your stuff and

9207
08:38:04,160 --> 08:38:05,600
then you you fiddle with something that

9208
08:38:05,600 --> 08:38:07,040
was working and made it broken and then

9209
08:38:07,040 --> 08:38:08,398
later on you think yeah it is just

9210
08:38:08,398 --> 08:38:10,878
compounds i i think the most important

9211
08:38:10,878 --> 08:38:12,398
skill at this point is honestly just

9212
08:38:12,398 --> 08:38:15,120
resiliency it's like the ability to

9213
08:38:15,120 --> 08:38:17,280
to just

9214
08:38:17,280 --> 08:38:18,478
stay calm

9215
08:38:18,478 --> 08:38:20,638
stay focused kind of keep not let

9216
08:38:20,638 --> 08:38:22,160
yourself get like weighed down because i

9217
08:38:22,160 --> 08:38:23,120
think that's what we're seeing i think

9218
08:38:23,120 --> 08:38:24,478
we're seeing people just kind of like i

9219
08:38:24,478 --> 08:38:26,160
mean i was joking i said we broke our

9220
08:38:26,160 --> 08:38:28,558
players but i i feel a little bit like

9221
08:38:28,558 --> 08:38:30,000
that like we just kind of crushed them

9222
08:38:30,000 --> 08:38:31,120
too much

9223
08:38:31,120 --> 08:38:33,120
and and that's this is the result of it

9224
08:38:33,120 --> 08:38:34,478
and unfortunately

9225
08:38:34,478 --> 08:38:36,318
we other than another sudden death which

9226
08:38:36,318 --> 08:38:38,240
i feel like would they would just quit

9227
08:38:38,240 --> 08:38:40,000
and walk off

9228
08:38:40,000 --> 08:38:40,718
like

9229
08:38:40,718 --> 08:38:42,878
you know we don't have a lot of uh of

9230
08:38:42,878 --> 08:38:44,398
levers to pull so

9231
08:38:44,398 --> 08:38:45,840
we're gonna see him out although i will

9232
08:38:45,840 --> 08:38:49,280
i will say having had uh so far

9233
08:38:49,280 --> 08:38:52,000
um this is the 11th match i guess we've

9234
08:38:52,000 --> 08:38:53,600
had we had eight in the first round and

9235
08:38:53,600 --> 08:38:56,000
this is the uh third match of the second

9236
08:38:56,000 --> 08:38:56,878
round

9237
08:38:56,878 --> 08:38:58,638
um this is the first time we've had it

9238
08:38:58,638 --> 08:39:00,878
kind of go go to this point so

9239
08:39:00,878 --> 08:39:02,160
yeah it could have it could have been

9240
08:39:02,160 --> 08:39:03,920
worse i was this was my fears that we'd

9241
08:39:03,920 --> 08:39:05,680
end up in this kind of a situation on

9242
08:39:05,680 --> 08:39:07,840
all of them that's okay we can we can

9243
08:39:07,840 --> 08:39:09,600
make it fun and entertaining i mean it's

9244
08:39:09,600 --> 08:39:10,718
it's a

9245
08:39:10,718 --> 08:39:14,638
this this is the essence of ctf yes

9246
08:39:14,638 --> 08:39:16,878
if you can here's the thing when you're

9247
08:39:16,878 --> 08:39:18,478
in this situation it is the worst

9248
08:39:18,478 --> 08:39:20,160
feeling and then you get past it and

9249
08:39:20,160 --> 08:39:22,240
you're just like the relief and

9250
08:39:22,240 --> 08:39:23,840
relaxation yes

9251
08:39:23,840 --> 08:39:26,318
uh the valleys match the the the

9252
08:39:26,318 --> 08:39:27,760
mountains but so we got a question in

9253
08:39:27,760 --> 08:39:30,160
chat actually what's your right now

9254
08:39:30,160 --> 08:39:32,080
what's your bet who who do you think is

9255
08:39:32,080 --> 08:39:33,840
going to win we've got rekka that was i

9256
08:39:33,840 --> 08:39:34,958
felt behind but

9257
08:39:34,958 --> 08:39:36,878
because i see i see a lot of support

9258
08:39:36,878 --> 08:39:38,718
sarah cloud but i'm going with wreck-it

9259
08:39:38,718 --> 08:39:41,200
pig yeah yeah i mean i think their

9260
08:39:41,200 --> 08:39:43,440
approach i felt like for a while they

9261
08:39:43,440 --> 08:39:45,840
weren't making as much progress but i

9262
08:39:45,840 --> 08:39:47,520
right now

9263
08:39:47,520 --> 08:39:50,798
i just don't know

9264
08:39:51,040 --> 08:39:53,280
that almost

9265
08:39:53,280 --> 08:39:55,040
every time i'm seeing a terminal open

9266
08:39:55,040 --> 08:39:57,280
with rekka pig it's in like a a crash

9267
08:39:57,280 --> 08:39:59,360
call stack or a break point on the right

9268
08:39:59,360 --> 08:40:01,280
right and sarah cloud every time i'm

9269
08:40:01,280 --> 08:40:02,718
seeing them run in it it's not even

9270
08:40:02,718 --> 08:40:04,000
crashing

9271
08:40:04,000 --> 08:40:04,878
and i'm

9272
08:40:04,878 --> 08:40:06,000
i'm so

9273
08:40:06,000 --> 08:40:09,120
concerned i i think sour cloud went from

9274
08:40:09,120 --> 08:40:10,958
great start to

9275
08:40:10,958 --> 08:40:13,120
i'm just confused and now i'm lost and

9276
08:40:13,120 --> 08:40:14,478
now i'm off in the middle of weeds

9277
08:40:14,478 --> 08:40:16,080
trying random things without really

9278
08:40:16,080 --> 08:40:17,840
being intentional right so instead of

9279
08:40:17,840 --> 08:40:18,558
just

9280
08:40:18,558 --> 08:40:21,360
slow and steady and consistent and like

9281
08:40:21,360 --> 08:40:22,958
testing your assumptions measuring

9282
08:40:22,958 --> 08:40:25,040
things you know moving forward

9283
08:40:25,040 --> 08:40:25,840
um

9284
08:40:25,840 --> 08:40:28,000
yeah we're seeing i mean i would love to

9285
08:40:28,000 --> 08:40:30,080
be wrong i'd love to see see him see him

9286
08:40:30,080 --> 08:40:32,318
pull it out i mean that's that's it we

9287
08:40:32,318 --> 08:40:35,120
want to see that big flip yep but but

9288
08:40:35,120 --> 08:40:37,360
right now i think i think so so

9289
08:40:37,360 --> 08:40:39,280
we'll see yeah in chat what are your

9290
08:40:39,280 --> 08:40:41,120
bets i i want to hear uh i want to hear

9291
08:40:41,120 --> 08:40:44,558
the chats uh bots so a1 uh we have

9292
08:40:44,558 --> 08:40:47,520
rekapeg and we have uh team sauerkraut

9293
08:40:47,520 --> 08:40:49,440
our two teams you can the upper left

9294
08:40:49,440 --> 08:40:50,638
corner you can see a little bit

9295
08:40:50,638 --> 08:40:52,000
unfortunately wreck a pig they have like

9296
08:40:52,000 --> 08:40:53,840
a white title bar it misses part of the

9297
08:40:53,840 --> 08:40:55,440
title but you can see who's who's

9298
08:40:55,440 --> 08:40:56,798
competing usually when we've we've got

9299
08:40:56,798 --> 08:41:00,718
that uh uh that screen up there up

9300
08:41:00,718 --> 08:41:02,240
congratulations there we go did that do

9301
08:41:02,240 --> 08:41:04,638
it submitter two yes that's it

9302
08:41:04,638 --> 08:41:06,638
oh there it was rekha pig wanted

9303
08:41:06,638 --> 08:41:10,798
congratulations a brutal brutal

9304
08:41:10,798 --> 08:41:12,718
wow watching the the replay or more

9305
08:41:12,718 --> 08:41:14,318
specifically the youtube just a little

9306
08:41:14,318 --> 08:41:16,638
after and they're just fixing up oh

9307
08:41:16,638 --> 08:41:18,478
they're switching it over yeah and they

9308
08:41:18,478 --> 08:41:20,718
throw it back something there it is well

9309
08:41:20,718 --> 08:41:24,318
done ah that was that was probably wow

9310
08:41:24,318 --> 08:41:26,558
excellent well thanks uh so folks thank

9311
08:41:26,558 --> 08:41:28,558
you so much um maybe one of our later

9312
08:41:28,558 --> 08:41:29,920
matches today we'll we'll give them a

9313
08:41:29,920 --> 08:41:31,040
text so we can get you because i think

9314
08:41:31,040 --> 08:41:32,878
we are basically done uh for the day

9315
08:41:32,878 --> 08:41:34,240
here we've got the whole room is getting

9316
08:41:34,240 --> 08:41:35,600
shut down and so we gotta we gotta kind

9317
08:41:35,600 --> 08:41:38,558
of clear out here yeah no problem but it

9318
08:41:38,558 --> 08:41:39,840
was a blast hanging out with you thank

9319
08:41:39,840 --> 08:41:40,878
you very much for joining us everybody

9320
08:41:40,878 --> 08:41:43,680
in chat thanks for watching uh sure i

9321
08:41:43,680 --> 08:41:44,798
think we're great we're gonna go to

9322
08:41:44,798 --> 08:41:45,920
intermission for a little bit just to

9323
08:41:45,920 --> 08:41:47,680
let that kind of run out and what but i

9324
08:41:47,680 --> 08:41:48,638
don't think we're coming back today

9325
08:41:48,638 --> 08:41:51,040
we're probably going to move our last uh

9326
08:41:51,040 --> 08:41:53,120
match of this round to tomorrow morning

9327
08:41:53,120 --> 08:41:54,558
and we'll finish up the last four

9328
08:41:54,558 --> 08:41:58,000
matches of the whole event uh then

9329
08:41:58,000 --> 08:42:00,718
all righty thanks everybody cheers

9330
08:42:00,718 --> 08:42:02,000
thanks for coming by everyone take it

9331
08:42:02,000 --> 08:42:05,000
easy

9332
08:42:05,110 --> 08:43:11,929
[Music]

9333
08:43:14,720 --> 08:43:21,630
[Music]

9334
08:43:25,710 --> 08:44:06,879
[Music]

9335
08:44:09,680 --> 08:44:12,680
so

9336
08:44:16,810 --> 08:44:19,999
[Music]

9337
08:44:25,680 --> 08:44:27,840
so

9338
08:44:27,840 --> 08:45:00,478
[Music]

9339
08:45:00,478 --> 08:45:03,478
then

9340
08:45:03,930 --> 08:45:07,009
[Music]

9341
08:45:11,370 --> 08:45:20,480
[Music]

9342
08:45:23,440 --> 08:45:26,629
[Music]

9343
08:45:35,760 --> 08:45:38,760
so

9344
08:45:39,570 --> 08:45:49,520
[Music]

9345
08:45:49,520 --> 08:45:52,520
so

9346
08:45:53,500 --> 08:46:07,740
[Music]

9347
08:46:11,090 --> 08:46:18,710
[Music]

9348
08:46:18,798 --> 08:46:21,170
so

9349
08:46:21,170 --> 08:46:31,530
[Music]

9350
08:46:34,730 --> 08:46:47,989
[Music]

9351
08:46:51,000 --> 08:46:54,330
[Music]

9352
08:46:58,160 --> 08:47:01,160
so

9353
08:47:02,080 --> 08:47:12,878
[Music]

9354
08:47:12,878 --> 08:47:15,878
so

9355
08:47:19,670 --> 08:47:41,649
[Music]

9356
08:47:41,760 --> 08:47:43,780
so

9357
08:47:43,780 --> 08:48:36,149
[Music]

9358
08:48:37,040 --> 08:48:40,040
so

9359
08:48:42,230 --> 08:48:47,539
[Music]

9360
08:48:49,620 --> 08:48:51,120
[Music]

9361
08:48:51,120 --> 08:48:54,000
so

9362
08:48:54,000 --> 08:48:54,380
[Applause]

9363
08:48:54,380 --> 08:49:02,130
[Music]

9364
08:49:05,120 --> 08:49:08,120
so

9365
08:49:10,970 --> 08:49:18,000
[Music]

9366
08:49:18,000 --> 08:49:21,000
so

9367
08:49:23,230 --> 08:49:43,029
[Music]

9368
08:49:45,510 --> 08:50:41,829
[Music]

9369
08:50:45,270 --> 08:51:39,440
[Music]

9370
08:51:39,440 --> 08:51:41,910
so

9371
08:51:41,910 --> 08:51:44,970
[Music]

9372
08:51:49,160 --> 08:52:58,539
[Music]

9373
08:53:01,120 --> 08:53:04,120
so

9374
08:53:06,470 --> 08:53:47,419
[Music]

9375
08:54:02,020 --> 08:54:10,040
[Music]

9376
08:54:13,830 --> 08:54:19,969
[Music]

9377
08:54:23,800 --> 08:54:27,489
[Music]

9378
08:54:31,600 --> 08:54:34,899
[Music]

9379
08:54:37,760 --> 08:54:41,200
[Music]

9380
08:54:41,200 --> 08:54:44,200
so

9381
08:54:44,680 --> 08:55:03,049
[Music]

9382
08:55:05,150 --> 08:55:20,119
[Music]

9383
08:55:22,770 --> 08:55:30,330
[Music]

9384
08:55:34,690 --> 08:55:39,870
[Music]

9385
08:55:43,890 --> 08:55:47,000
[Music]

9386
08:55:49,350 --> 08:55:53,410
[Music]

9387
08:56:04,400 --> 08:56:24,750
[Music]

9388
08:56:29,760 --> 08:56:37,699
[Music]

9389
08:56:43,030 --> 08:56:48,099
[Music]

9390
08:56:55,750 --> 08:57:07,189
[Music]

9391
08:57:14,330 --> 08:57:25,720
[Music]

9392
08:57:29,010 --> 08:57:32,090
[Music]

9393
08:57:59,150 --> 08:58:02,179
[Music]

9394
08:58:13,880 --> 08:58:18,810
[Music]

9395
08:58:28,850 --> 08:58:37,979
[Music]

9396
08:58:52,500 --> 08:59:15,720
[Music]

9397
08:59:23,360 --> 08:59:26,709
[Music]

9398
08:59:53,460 --> 09:00:00,179
[Music]

9399
09:00:02,390 --> 09:00:08,069
[Music]

9400
09:00:14,790 --> 09:00:22,558
[Music]

9401
09:00:22,558 --> 09:00:24,878
hello everybody welcome to the last

9402
09:00:24,878 --> 09:00:27,280
quarterfinals of the live ctf

9403
09:00:27,280 --> 09:00:29,920
uh we are a bit behind on schedule but

9404
09:00:29,920 --> 09:00:31,760
we're going to do this match today

9405
09:00:31,760 --> 09:00:33,200
and uh

9406
09:00:33,200 --> 09:00:35,280
yeah uh we just heard the

9407
09:00:35,280 --> 09:00:37,440
the main ctf uh

9408
09:00:37,440 --> 09:00:40,558
day end but uh yeah we are gonna still

9409
09:00:40,558 --> 09:00:42,638
go on with this match so we're gonna

9410
09:00:42,638 --> 09:00:44,160
have the players ready we're ready with

9411
09:00:44,160 --> 09:00:46,160
production yes so we're gonna count this

9412
09:00:46,160 --> 09:00:49,920
in in five four three

9413
09:00:49,920 --> 09:00:50,718
two

9414
09:00:50,718 --> 09:00:52,558
one go

9415
09:00:52,558 --> 09:00:55,680
all right

9416
09:00:55,680 --> 09:00:57,680
so

9417
09:00:57,680 --> 09:00:58,958
thanks for staying with us everybody we

9418
09:00:58,958 --> 09:01:01,040
actually i apologize i told you wrong we

9419
09:01:01,040 --> 09:01:03,120
just tweeted out a correction but uh we

9420
09:01:03,120 --> 09:01:04,318
i thought we were gonna be done we were

9421
09:01:04,318 --> 09:01:05,840
a little bit behind but we decided it

9422
09:01:05,840 --> 09:01:09,040
was uh better to stay late finish it up

9423
09:01:09,040 --> 09:01:10,718
today and stay on schedule give us more

9424
09:01:10,718 --> 09:01:11,760
time tomorrow because tomorrow we're

9425
09:01:11,760 --> 09:01:13,680
gonna have some more fun challenges

9426
09:01:13,680 --> 09:01:15,920
interesting things so we don't want to

9427
09:01:15,920 --> 09:01:18,398
lose that time so here we are

9428
09:01:18,398 --> 09:01:20,798
cool and uh the challenge we are looking

9429
09:01:20,798 --> 09:01:23,520
at is uh one of my creations

9430
09:01:23,520 --> 09:01:26,638
uh it's called no roplum it's uh

9431
09:01:26,638 --> 09:01:28,160
i mean i think this is not the first

9432
09:01:28,160 --> 09:01:29,360
time is it gonna be is it gonna be a

9433
09:01:29,360 --> 09:01:31,120
problem uh well i mean it will be

9434
09:01:31,120 --> 09:01:32,718
hopefully only a slight problem yeah

9435
09:01:32,718 --> 09:01:34,398
like well they should have no problems

9436
09:01:34,398 --> 09:01:36,718
no exactly exactly yeah slight problem

9437
09:01:36,718 --> 09:01:38,638
right yeah yeah um

9438
09:01:38,638 --> 09:01:40,478
but um

9439
09:01:40,478 --> 09:01:42,478
it's an idea that's been around uh on

9440
09:01:42,478 --> 09:01:43,840
multiple like this is not the first time

9441
09:01:43,840 --> 09:01:45,360
it's it's inspired by previous

9442
09:01:45,360 --> 09:01:47,520
challenges in the same vein basically

9443
09:01:47,520 --> 09:01:50,398
get a more or less random blob of data

9444
09:01:50,398 --> 09:01:53,120
and you're supposed to

9445
09:01:53,120 --> 09:01:56,398
get rob gadgets out of that and uh

9446
09:01:56,398 --> 09:01:58,318
oh that's right so i

9447
09:01:58,318 --> 09:02:00,958
i'm excited because

9448
09:02:00,958 --> 09:02:02,718
i i don't know the rop tools i don't

9449
09:02:02,718 --> 09:02:04,080
know the current state of the art in the

9450
09:02:04,080 --> 09:02:06,160
rap tools and are people going to like

9451
09:02:06,160 --> 09:02:07,520
are they going to have smart searches

9452
09:02:07,520 --> 09:02:08,958
are they going to just grep are they

9453
09:02:08,958 --> 09:02:10,798
going to like actually

9454
09:02:10,798 --> 09:02:12,478
yeah so i'm curious to see what people

9455
09:02:12,478 --> 09:02:14,160
are going to end up doing

9456
09:02:14,160 --> 09:02:17,920
right in this we can start by going to

9457
09:02:17,920 --> 09:02:19,200
perfect root

9458
09:02:19,200 --> 09:02:22,000
one of our two teams in this match

9459
09:02:22,000 --> 09:02:24,558
they are opening up ida

9460
09:02:24,558 --> 09:02:25,520
uh

9461
09:02:25,520 --> 09:02:27,840
i think we gave them i mean we did give

9462
09:02:27,840 --> 09:02:29,200
them the source code as well for this

9463
09:02:29,200 --> 09:02:31,600
one i think however the source code

9464
09:02:31,600 --> 09:02:33,200
doesn't tell you the the full story

9465
09:02:33,200 --> 09:02:34,558
right you might want to know like

9466
09:02:34,558 --> 09:02:37,280
offsets and and so on so looking an item

9467
09:02:37,280 --> 09:02:39,440
might still be useful even though you

9468
09:02:39,440 --> 09:02:41,200
have the source code honestly sometimes

9469
09:02:41,200 --> 09:02:42,638
even i have source code and things i'll

9470
09:02:42,638 --> 09:02:44,478
use binges just for the cross reference

9471
09:02:44,478 --> 09:02:46,160
system being able to quickly navigate it

9472
09:02:46,160 --> 09:02:47,600
or if i want to script something that

9473
09:02:47,600 --> 09:02:48,958
may be it's harder if it's just pure

9474
09:02:48,958 --> 09:02:51,920
text right type stuff so anyway they're

9475
09:02:51,920 --> 09:02:53,360
taking they're also you can also see

9476
09:02:53,360 --> 09:02:55,280
them they're taking a look at the uh

9477
09:02:55,280 --> 09:02:57,440
source code uh let's switch over to

9478
09:02:57,440 --> 09:02:59,680
strawhat and see them doing basically

9479
09:02:59,680 --> 09:03:00,798
the same thing right they're looking at

9480
09:03:00,798 --> 09:03:02,638
source code getting a feel for the

9481
09:03:02,638 --> 09:03:04,478
challenge so

9482
09:03:04,478 --> 09:03:07,280
roughly the way this works is that

9483
09:03:07,280 --> 09:03:09,440
i i said more or less random

9484
09:03:09,440 --> 09:03:12,958
they uh they can provide a an encryption

9485
09:03:12,958 --> 09:03:13,840
key

9486
09:03:13,840 --> 09:03:15,120
which will

9487
09:03:15,120 --> 09:03:16,958
for all intensive purposes acts as a

9488
09:03:16,958 --> 09:03:17,840
random

9489
09:03:17,840 --> 09:03:19,520
seed

9490
09:03:19,520 --> 09:03:21,520
and then after we have generated that we

9491
09:03:21,520 --> 09:03:24,000
sprinkle a bunch of red

9492
09:03:24,000 --> 09:03:26,240
instructions into this to make sure that

9493
09:03:26,240 --> 09:03:28,718
there are appropriately sized gadgets if

9494
09:03:28,718 --> 09:03:31,040
something was truly random you'd expect

9495
09:03:31,040 --> 09:03:33,120
wretch to happen like only you know

9496
09:03:33,120 --> 09:03:35,760
yeah one in 255 right like you know and

9497
09:03:35,760 --> 09:03:37,600
so you would have not a whole lot of

9498
09:03:37,600 --> 09:03:39,280
functional gadgets

9499
09:03:39,280 --> 09:03:40,638
throughout it so it makes sense to you

9500
09:03:40,638 --> 09:03:42,798
know every end we're in is much smaller

9501
09:03:42,798 --> 09:03:44,398
than that you know you you're yeah yeah

9502
09:03:44,398 --> 09:03:46,638
yeah i think i did every 16

9503
09:03:46,638 --> 09:03:48,240
bytes yeah you just end up with much

9504
09:03:48,240 --> 09:03:50,478
more gadgets in the same space right and

9505
09:03:50,478 --> 09:03:51,920
they have like

9506
09:03:51,920 --> 09:03:55,040
a megabyte i think of gadgets as well

9507
09:03:55,040 --> 09:03:56,318
this is what i want to see i'm curious

9508
09:03:56,318 --> 09:03:58,160
how the rock finding tools work with

9509
09:03:58,160 --> 09:03:59,520
like a bigger blob of memory i know a

9510
09:03:59,520 --> 09:04:00,958
lot of ctf binaries tend to be pretty

9511
09:04:00,958 --> 09:04:02,000
small

9512
09:04:02,000 --> 09:04:03,520
right uh

9513
09:04:03,520 --> 09:04:05,520
yeah so this is i think where one of the

9514
09:04:05,520 --> 09:04:07,920
new tools uh ropper

9515
09:04:07,920 --> 09:04:10,478
uh really china really shined it i think

9516
09:04:10,478 --> 09:04:12,160
it crunched through the whole linux

9517
09:04:12,160 --> 09:04:13,760
kernel in like a couple of seconds oh

9518
09:04:13,760 --> 09:04:15,520
wow yeah so i have no problem with

9519
09:04:15,520 --> 09:04:18,478
something one meg no but yes this uh can

9520
09:04:18,478 --> 09:04:20,080
have been like a little bit of an issue

9521
09:04:20,080 --> 09:04:22,318
for some of uh you know the the older

9522
09:04:22,318 --> 09:04:24,240
tools any kind of pure python-based tool

9523
09:04:24,240 --> 09:04:25,520
for example it's not going to be very

9524
09:04:25,520 --> 09:04:27,440
performant oh yeah yeah just like you

9525
09:04:27,440 --> 09:04:28,318
know

9526
09:04:28,318 --> 09:04:29,440
when you have something that you just

9527
09:04:29,440 --> 09:04:31,200
want to process a large amount like

9528
09:04:31,200 --> 09:04:33,760
binary data like this then you probably

9529
09:04:33,760 --> 09:04:35,600
want something that's like compiled code

9530
09:04:35,600 --> 09:04:38,398
yeah yeah something something native so

9531
09:04:38,398 --> 09:04:40,080
we're already in a debugger

9532
09:04:40,080 --> 09:04:41,680
over a perfect route we can actually see

9533
09:04:41,680 --> 09:04:43,680
that they've got uh

9534
09:04:43,680 --> 09:04:45,920
got their jeff prompt up and they're

9535
09:04:45,920 --> 09:04:47,760
just rob gadget so they're gonna run rop

9536
09:04:47,760 --> 09:04:49,360
gadget on

9537
09:04:49,360 --> 09:04:51,360
on the binder they're checking the name

9538
09:04:51,360 --> 09:04:52,878
and yep i would say that's pretty quick

9539
09:04:52,878 --> 09:04:54,000
right

9540
09:04:54,000 --> 09:04:55,200
right so and there's the checks like

9541
09:04:55,200 --> 09:04:56,318
we've seen now checks like from both

9542
09:04:56,318 --> 09:04:57,840
teams i saw straw hair do it earlier so

9543
09:04:57,840 --> 09:04:59,120
they're both

9544
09:04:59,120 --> 09:05:01,360
i love i'm i'm so happy that nobody has

9545
09:05:01,360 --> 09:05:03,840
made the mistake of not running checks

9546
09:05:03,840 --> 09:05:05,280
tech that i've seen so far like they

9547
09:05:05,280 --> 09:05:06,718
seem to be pretty

9548
09:05:06,718 --> 09:05:08,478
pretty doing that right and the program

9549
09:05:08,478 --> 09:05:10,478
does have basically all mitigations

9550
09:05:10,478 --> 09:05:13,120
turned on but it doesn't really matter

9551
09:05:13,120 --> 09:05:15,120
uh we do give them the address of where

9552
09:05:15,120 --> 09:05:16,958
all of these gadgets are located so they

9553
09:05:16,958 --> 09:05:18,718
can easily calculate the addresses well

9554
09:05:18,718 --> 09:05:20,638
now wait a minute we lost the feed for a

9555
09:05:20,638 --> 09:05:22,000
little bit okay so

9556
09:05:22,000 --> 09:05:23,520
i'm a little confused though because

9557
09:05:23,520 --> 09:05:25,520
that i saw something that said 110

9558
09:05:25,520 --> 09:05:27,200
gadgets found were they looking for

9559
09:05:27,200 --> 09:05:29,040
gadgets in the binaries it must have

9560
09:05:29,040 --> 09:05:30,958
been looking gadgets in the binary yes

9561
09:05:30,958 --> 09:05:32,958
not in the payload it generates right

9562
09:05:32,958 --> 09:05:35,200
they need to actually first dump that re

9563
09:05:35,200 --> 09:05:36,638
or they either could just modify the

9564
09:05:36,638 --> 09:05:39,200
source code give it a fixed key and then

9565
09:05:39,200 --> 09:05:40,478
generate it or

9566
09:05:40,478 --> 09:05:41,920
yeah so now like

9567
09:05:41,920 --> 09:05:44,878
yeah i'm curious if they if teams elect

9568
09:05:44,878 --> 09:05:46,000
to

9569
09:05:46,000 --> 09:05:48,160
make it work with just one random key or

9570
09:05:48,160 --> 09:05:50,080
if they actually incorporate trying

9571
09:05:50,080 --> 09:05:51,360
different keys until they get one that

9572
09:05:51,360 --> 09:05:52,958
produces a really easily you know

9573
09:05:52,958 --> 09:05:54,638
gadgetable right you can basically

9574
09:05:54,638 --> 09:05:56,318
approach this challenge from like two

9575
09:05:56,318 --> 09:05:58,958
directions uh you can fix the key and

9576
09:05:58,958 --> 09:06:01,120
like make do what with what you have or

9577
09:06:01,120 --> 09:06:02,718
kind of set up restrictions on what

9578
09:06:02,718 --> 09:06:04,318
gadgets you need and then just to

9579
09:06:04,318 --> 09:06:06,478
randomize the key until you get those

9580
09:06:06,478 --> 09:06:07,440
things

9581
09:06:07,440 --> 09:06:10,718
i think the latter if executed properly

9582
09:06:10,718 --> 09:06:12,320
is probably more effective but you need

9583
09:06:12,320 --> 09:06:15,122
to kind of like formulate that the the

9584
09:06:15,122 --> 09:06:18,398
notion of i need some of these gadgets

9585
09:06:18,398 --> 09:06:20,000
into like a strict

9586
09:06:20,000 --> 09:06:21,758
thing that you can put into code yeah

9587
09:06:21,758 --> 09:06:22,800
because you have to be able to like

9588
09:06:22,800 --> 09:06:24,640
measure the fitness of whatever you're

9589
09:06:24,640 --> 09:06:26,877
producing because you might like you

9590
09:06:26,877 --> 09:06:29,438
might be like okay i need this or this

9591
09:06:29,438 --> 09:06:32,557
or this and this or this yeah like you

9592
09:06:32,557 --> 09:06:34,398
know i could even see kind of a hybrid

9593
09:06:34,398 --> 09:06:35,438
approach right where like i would

9594
09:06:35,438 --> 09:06:36,640
probably just think of like what is the

9595
09:06:36,640 --> 09:06:39,680
most complicated gadget right

9596
09:06:39,680 --> 09:06:41,278
yeah the one really hard thing and then

9597
09:06:41,278 --> 09:06:42,877
like everything else i can work around

9598
09:06:42,877 --> 09:06:44,237
like i can get things into registers

9599
09:06:44,237 --> 09:06:46,078
pretty easily right but what is going to

9600
09:06:46,078 --> 09:06:48,398
be the one that uh

9601
09:06:48,398 --> 09:06:50,000
stephen has really tall shoes on right

9602
09:06:50,000 --> 09:06:52,480
now i was i was very like wait a minute

9603
09:06:52,480 --> 09:06:54,557
that's not how it's all

9604
09:06:54,557 --> 09:06:56,237
all right

9605
09:06:56,237 --> 09:07:00,640
and just in time there we go yeah and um

9606
09:07:00,640 --> 09:07:02,640
so um

9607
09:07:02,640 --> 09:07:05,758
let's see we do have someone googling a

9608
09:07:05,758 --> 09:07:06,718
little bit

9609
09:07:06,718 --> 09:07:09,040
uh they are i think it was

9610
09:07:09,040 --> 09:07:12,078
were they looking at the rc4 no

9611
09:07:12,078 --> 09:07:15,040
yeah that's uh

9612
09:07:15,040 --> 09:07:17,519
not good not correct well

9613
09:07:17,519 --> 09:07:19,040
it's not that it's not correct it's just

9614
09:07:19,040 --> 09:07:21,438
not what we want them to be doing right

9615
09:07:21,438 --> 09:07:23,199
because the encryption we're using here

9616
09:07:23,199 --> 09:07:24,877
is rc4

9617
09:07:24,877 --> 09:07:26,398
uh it's a big it's a big favorite of

9618
09:07:26,398 --> 09:07:28,877
mine i i try to overuse it and stuff

9619
09:07:28,877 --> 09:07:30,480
because it's like it's so easy to

9620
09:07:30,480 --> 09:07:32,000
implement it's very very fast yeah you

9621
09:07:32,000 --> 09:07:33,360
actually don't even need a library for

9622
09:07:33,360 --> 09:07:35,199
it no no it's like uh

9623
09:07:35,199 --> 09:07:37,438
i think like in python you can implement

9624
09:07:37,438 --> 09:07:39,438
it in like three lines of python uh so

9625
09:07:39,438 --> 09:07:41,199
here's the thing is this implemented in

9626
09:07:41,199 --> 09:07:44,877
the program or and do does it so i i'm

9627
09:07:44,877 --> 09:07:46,877
yeah i'm a little worried

9628
09:07:46,877 --> 09:07:48,480
after last round

9629
09:07:48,480 --> 09:07:50,800
i'm worried about sinkhole teams into

9630
09:07:50,800 --> 09:07:52,480
like these dead ends or something so i

9631
09:07:52,480 --> 09:07:53,360
hope

9632
09:07:53,360 --> 09:07:55,438
right i'm just thinking i shouldn't have

9633
09:07:55,438 --> 09:07:56,960
10 minutes we might want to throw out a

9634
09:07:56,960 --> 09:07:58,800
hint i guess what i'm saying like this

9635
09:07:58,800 --> 09:08:00,718
is the encryption yeah that's not the

9636
09:08:00,718 --> 09:08:02,237
challenge yeah right like just don't

9637
09:08:02,237 --> 09:08:03,199
it's just

9638
09:08:03,199 --> 09:08:05,680
just random um but

9639
09:08:05,680 --> 09:08:08,237
uh we'll we'll see uh we'll see what we

9640
09:08:08,237 --> 09:08:10,557
end up with

9641
09:08:10,557 --> 09:08:13,438
so uh yeah because i think uh in the

9642
09:08:13,438 --> 09:08:15,758
function they are just named like

9643
09:08:15,758 --> 09:08:18,480
key scheduling algorithm and like prng

9644
09:08:18,480 --> 09:08:20,160
or something like something like that

9645
09:08:20,160 --> 09:08:22,078
and that's actually i mean it's also

9646
09:08:22,078 --> 09:08:24,160
it's it's just by chance i guess but

9647
09:08:24,160 --> 09:08:25,680
it's also because it doesn't really

9648
09:08:25,680 --> 09:08:27,598
matter like you just as long as you are

9649
09:08:27,598 --> 09:08:28,877
able to do

9650
09:08:28,877 --> 09:08:30,640
the same thing on your own if you're

9651
09:08:30,640 --> 09:08:33,040
using a brute forcing or whatever uh it

9652
09:08:33,040 --> 09:08:35,917
doesn't really matter well and and uh i

9653
09:08:35,917 --> 09:08:38,000
mean remembering back the some of my

9654
09:08:38,000 --> 09:08:39,680
crypto classes back in the day like you

9655
09:08:39,680 --> 09:08:41,438
know good encryption is functionally

9656
09:08:41,438 --> 09:08:43,598
identical from from a random c generator

9657
09:08:43,598 --> 09:08:46,800
anyways and so it you know it hopefully

9658
09:08:46,800 --> 09:08:48,800
is is it somewhat intuitive that that's

9659
09:08:48,800 --> 09:08:49,917
you know essentially kind of what

9660
09:08:49,917 --> 09:08:51,519
they're doing right that wasn't new

9661
09:08:51,519 --> 09:08:52,718
there's a website i hadn't seen for you

9662
09:08:52,718 --> 09:08:55,758
it was just asm.something dot

9663
09:08:55,758 --> 09:08:57,438
oh i didn't see that yeah they actually

9664
09:08:57,438 --> 09:08:58,718
yeah next time next time they bring that

9665
09:08:58,718 --> 09:09:00,320
up i'm gonna keep an eye on it so so it

9666
09:09:00,320 --> 09:09:02,480
looks like perfect roots using a website

9667
09:09:02,480 --> 09:09:03,758
i wonder if it's just a very fast

9668
09:09:03,758 --> 09:09:05,360
straight disassembler or disassemble at

9669
09:09:05,360 --> 09:09:08,718
every offset type thing interesting um

9670
09:09:08,718 --> 09:09:12,237
here using uh rob gadgets uh the same

9671
09:09:12,237 --> 09:09:13,438
one that i think we saw from purpose

9672
09:09:13,438 --> 09:09:14,800
right both of them are going like old

9673
09:09:14,800 --> 09:09:16,800
school things not using dropper which i

9674
09:09:16,800 --> 09:09:18,320
guess that's the new hotness right well

9675
09:09:18,320 --> 09:09:20,078
as yeah we talked about this throughout

9676
09:09:20,078 --> 09:09:22,078
the throughout the weekend uh

9677
09:09:22,078 --> 09:09:23,519
uh now so what are they running out down

9678
09:09:23,519 --> 09:09:24,718
here though here's the question is straw

9679
09:09:24,718 --> 09:09:26,877
hat running on a dump it looks like well

9680
09:09:26,877 --> 09:09:28,160
no you have you have

9681
09:09:28,160 --> 09:09:32,960
bend.ross it's 16 megs is that that's uh

9682
09:09:32,960 --> 09:09:34,960
well maybe they just dumped like too

9683
09:09:34,960 --> 09:09:37,438
much like you know the whole memory

9684
09:09:37,438 --> 09:09:39,040
segment that it was something like that

9685
09:09:39,040 --> 09:09:40,398
or maybe

9686
09:09:40,398 --> 09:09:43,122
it was actually 16 make uh

9687
09:09:43,122 --> 09:09:45,040
it could be could be that large yes well

9688
09:09:45,040 --> 09:09:47,438
i guess we'll find out how fast uh rap

9689
09:09:47,438 --> 09:09:49,598
gadget is so basically what we saw there

9690
09:09:49,598 --> 09:09:51,360
was that they have they have run the

9691
09:09:51,360 --> 09:09:54,557
program with some key uh generated this

9692
09:09:54,557 --> 09:09:57,040
collection of gadgets uh

9693
09:09:57,040 --> 09:09:59,839
dumped that memory to a file then they

9694
09:09:59,839 --> 09:10:01,598
run it through the rob gadget finder and

9695
09:10:01,598 --> 09:10:03,040
they since it's not an elf file the

9696
09:10:03,040 --> 09:10:04,800
program cannot automatically detect like

9697
09:10:04,800 --> 09:10:06,640
what is this so instead they manually

9698
09:10:06,640 --> 09:10:08,640
specify like this is

9699
09:10:08,640 --> 09:10:13,199
x86 uh 64-bit like trust me yeah and

9700
09:10:13,199 --> 09:10:14,557
you know we're not worried about virtual

9701
09:10:14,557 --> 09:10:15,917
offsets or addresses like just

9702
09:10:15,917 --> 09:10:17,758
disassemble at every office please yeah

9703
09:10:17,758 --> 09:10:20,000
you can see i'm doing it here again uh

9704
09:10:20,000 --> 09:10:21,519
just dumping into a text file so that

9705
09:10:21,519 --> 09:10:23,598
they can like easily search through this

9706
09:10:23,598 --> 09:10:26,877
and see uh what they have to work with

9707
09:10:26,877 --> 09:10:28,640
now they they last time they

9708
09:10:28,640 --> 09:10:30,078
backgrounded i didn't notice that are

9709
09:10:30,078 --> 09:10:31,758
they on a different tab so they just

9710
09:10:31,758 --> 09:10:33,278
like kick off multiple ones and letting

9711
09:10:33,278 --> 09:10:34,640
them go or the one finished and they ran

9712
09:10:34,640 --> 09:10:36,237
another one i'm not sure which it was

9713
09:10:36,237 --> 09:10:37,758
because i feel like that could go either

9714
09:10:37,758 --> 09:10:39,122
way oh and here we go we're looking at

9715
09:10:39,122 --> 09:10:41,199
the man page for rob gadget so yep same

9716
09:10:41,199 --> 09:10:42,800
kind of thing yeah they're both using

9717
09:10:42,800 --> 09:10:44,160
this type so you can see they're

9718
09:10:44,160 --> 09:10:46,078
hovering over the raw mode which is the

9719
09:10:46,078 --> 09:10:47,680
same they're looking for this like how

9720
09:10:47,680 --> 09:10:49,438
do i oh wait this actually no they're

9721
09:10:49,438 --> 09:10:51,680
using wrapper the man page was for rob

9722
09:10:51,680 --> 09:10:52,877
gadget before but now they're actually

9723
09:10:52,877 --> 09:10:54,237
running ropper

9724
09:10:54,237 --> 09:10:56,160
for sure was that not just like they

9725
09:10:56,160 --> 09:10:58,000
they had rapper on screen

9726
09:10:58,000 --> 09:10:59,917
they 100 were running so one of their

9727
09:10:59,917 --> 09:11:00,960
one of their terminals down here was

9728
09:11:00,960 --> 09:11:02,237
actually running ropper the other one

9729
09:11:02,237 --> 09:11:03,598
they're looking at the rop gadget man

9730
09:11:03,598 --> 09:11:04,718
page so i think they're hedging their

9731
09:11:04,718 --> 09:11:07,360
bets right and trying multiple

9732
09:11:07,360 --> 09:11:09,758
so yeah so now now now this is perfect

9733
09:11:09,758 --> 09:11:11,040
we're talking about here there's still

9734
09:11:11,040 --> 09:11:12,237
uh

9735
09:11:12,237 --> 09:11:13,122
um

9736
09:11:13,122 --> 09:11:14,960
checking there we go have it that was it

9737
09:11:14,960 --> 09:11:16,557
it was there i saw robert right so yeah

9738
09:11:16,557 --> 09:11:18,078
they definitely

9739
09:11:18,078 --> 09:11:19,040
uh

9740
09:11:19,040 --> 09:11:21,360
have it up i actually i like that idea i

9741
09:11:21,360 --> 09:11:22,800
like the idea of you know just run

9742
09:11:22,800 --> 09:11:24,800
multiple tools oh yeah yeah there's uh

9743
09:11:24,800 --> 09:11:26,078
there have been

9744
09:11:26,078 --> 09:11:28,237
situations where i think

9745
09:11:28,237 --> 09:11:30,718
one of the tools uh have found stuff

9746
09:11:30,718 --> 09:11:31,680
where

9747
09:11:31,680 --> 09:11:33,917
uh the other one hasn't uh i i don't

9748
09:11:33,917 --> 09:11:35,438
remember specific examples but you know

9749
09:11:35,438 --> 09:11:38,160
there are things tricky situations uh

9750
09:11:38,160 --> 09:11:39,278
where

9751
09:11:39,278 --> 09:11:42,078
like the different tools can like

9752
09:11:42,078 --> 09:11:44,718
differ in what they consider executable

9753
09:11:44,718 --> 09:11:46,877
code interesting yeah i mean with 13

9754
09:11:46,877 --> 09:11:48,237
just different disassembly libraries

9755
09:11:48,237 --> 09:11:49,598
right or have different

9756
09:11:49,598 --> 09:11:50,718
like you can even see them doing

9757
09:11:50,718 --> 09:11:51,917
different things with like the state

9758
09:11:51,917 --> 09:11:54,557
such that like you know one of them

9759
09:11:54,557 --> 09:11:56,320
sees memory that's not writable being

9760
09:11:56,320 --> 09:11:57,758
written to and then stops this you know

9761
09:11:57,758 --> 09:11:59,040
stops analysis after that whereas the

9762
09:11:59,040 --> 09:12:00,640
other one continues and it may or may

9763
09:12:00,640 --> 09:12:01,680
not be depending on your situation

9764
09:12:01,680 --> 09:12:02,877
whether that actually is a valid thing

9765
09:12:02,877 --> 09:12:04,398
to do so there's i can see a lot of

9766
09:12:04,398 --> 09:12:06,800
context mattering there right

9767
09:12:06,800 --> 09:12:08,320
so you see here

9768
09:12:08,320 --> 09:12:10,000
there we go yeah so they're just like

9769
09:12:10,000 --> 09:12:11,758
checking the documentation for like how

9770
09:12:11,758 --> 09:12:14,160
do i actually specify the parameters for

9771
09:12:14,160 --> 09:12:16,237
this raw mode now they got it um that's

9772
09:12:16,237 --> 09:12:17,438
just wrong so they're doing the same

9773
09:12:17,438 --> 09:12:20,480
thing as uh straw hat uh was doing i

9774
09:12:20,480 --> 09:12:21,758
think their arguments are out of order i

9775
09:12:21,758 --> 09:12:23,278
think they're putting the argument i bet

9776
09:12:23,278 --> 09:12:25,278
this thing has has

9777
09:12:25,278 --> 09:12:27,839
uh poor parsing oh yeah i see rappers

9778
09:12:27,839 --> 09:12:28,960
still going

9779
09:12:28,960 --> 09:12:29,839
okay

9780
09:12:29,839 --> 09:12:31,360
so they still got rapper going i think

9781
09:12:31,360 --> 09:12:32,718
they're

9782
09:12:32,718 --> 09:12:35,840
they're uh

9783
09:12:36,800 --> 09:12:38,640
okay so tell me a little about like the

9784
09:12:38,640 --> 09:12:40,877
you know in in your kind of approach to

9785
09:12:40,877 --> 09:12:42,078
solving this

9786
09:12:42,078 --> 09:12:44,557
um if you're you're i i would imagine

9787
09:12:44,557 --> 09:12:46,320
you're gonna look for

9788
09:12:46,320 --> 09:12:49,680
the shortest working payload

9789
09:12:49,680 --> 09:12:52,320
uh that you can come up with yeah i will

9790
09:12:52,320 --> 09:12:54,000
i mean you you always have the kind of

9791
09:12:54,000 --> 09:12:56,398
generic um

9792
09:12:56,398 --> 09:12:57,598
you know

9793
09:12:57,598 --> 09:13:00,398
map read and protect uh kind of rob

9794
09:13:00,398 --> 09:13:02,160
chain where you allocate the region of

9795
09:13:02,160 --> 09:13:05,040
memory you make that memory a readable

9796
09:13:05,040 --> 09:13:07,758
writable executable you read

9797
09:13:07,758 --> 09:13:09,917
shell code into it and jump to it

9798
09:13:09,917 --> 09:13:11,758
um that's like

9799
09:13:11,758 --> 09:13:13,040
a generic

9800
09:13:13,040 --> 09:13:14,237
approach

9801
09:13:14,237 --> 09:13:15,278
so

9802
09:13:15,278 --> 09:13:17,438
i would probably try to look for

9803
09:13:17,438 --> 09:13:19,199
something like this i mean you will need

9804
09:13:19,199 --> 09:13:21,438
some uh you need some pop gadgets

9805
09:13:21,438 --> 09:13:23,122
to populate the registers i mean that's

9806
09:13:23,122 --> 09:13:24,320
that's gonna be trivial they're gonna

9807
09:13:24,320 --> 09:13:25,917
they're gonna find a bunch of those yeah

9808
09:13:25,917 --> 09:13:27,278
just sitting around and it's there you

9809
09:13:27,278 --> 09:13:28,640
always have like a nice thing where like

9810
09:13:28,640 --> 09:13:30,480
it doesn't really matter if like maybe

9811
09:13:30,480 --> 09:13:32,160
you're popping another register as well

9812
09:13:32,160 --> 09:13:33,758
like as long as you just can just

9813
09:13:33,758 --> 09:13:35,917
rearrange those populations in the right

9814
09:13:35,917 --> 09:13:39,278
order it will not matter

9815
09:13:39,278 --> 09:13:41,360
and other than that you basically just

9816
09:13:41,360 --> 09:13:42,237
need

9817
09:13:42,237 --> 09:13:44,960
uh the syscall so in a sense you need

9818
09:13:44,960 --> 09:13:47,917
like well if you do the m map uh it's

9819
09:13:47,917 --> 09:13:49,680
like the that needs like all the

9820
09:13:49,680 --> 09:13:51,839
registers like the six uh so you need

9821
09:13:51,839 --> 09:13:54,000
like a couple of pops in a syscall uh

9822
09:13:54,000 --> 09:13:55,360
and from there i think you should be all

9823
09:13:55,360 --> 09:13:56,718
so i learned a new trick from chris

9824
09:13:56,718 --> 09:13:58,078
eagle yesterday which is why wouldn't

9825
09:13:58,078 --> 09:14:01,680
you just use break right but then uh

9826
09:14:01,680 --> 09:14:02,960
it's not gonna be executable it'll be a

9827
09:14:02,960 --> 09:14:04,557
rewrite data yes but it won't be

9828
09:14:04,557 --> 09:14:05,680
executed and it would have been a

9829
09:14:05,680 --> 09:14:07,040
perfect solution in that specific

9830
09:14:07,040 --> 09:14:08,718
context because you only needed read

9831
09:14:08,718 --> 09:14:10,160
writable in that case

9832
09:14:10,160 --> 09:14:12,800
in this case that means uh but it is

9833
09:14:12,800 --> 09:14:14,480
actually a good idea because then you

9834
09:14:14,480 --> 09:14:17,360
can split up the m up into a break and m

9835
09:14:17,360 --> 09:14:19,598
protect yeah uh so you need only need

9836
09:14:19,598 --> 09:14:22,000
like your control right three uh

9837
09:14:22,000 --> 09:14:24,718
arguments respectively yeah so yes that

9838
09:14:24,718 --> 09:14:27,278
is actually uh still probably a better

9839
09:14:27,278 --> 09:14:28,960
solution i think yeah than trying to

9840
09:14:28,960 --> 09:14:31,122
actually some of those like pop r8 or

9841
09:14:31,122 --> 09:14:33,360
something can be a bit uh annoying more

9842
09:14:33,360 --> 09:14:34,480
rare or you've got to deal with more

9843
09:14:34,480 --> 09:14:36,320
side effects and then you know right

9844
09:14:36,320 --> 09:14:37,758
again i'm curious to see as they start

9845
09:14:37,758 --> 09:14:40,557
looking so we've seen them uh

9846
09:14:40,557 --> 09:14:43,278
run this uh and dump this out but again

9847
09:14:43,278 --> 09:14:45,839
are they going to just treat that seed

9848
09:14:45,839 --> 09:14:47,519
as a fixed value are they gonna just

9849
09:14:47,519 --> 09:14:48,640
treat it as like i'm only gonna ever

9850
09:14:48,640 --> 09:14:49,917
look at one buffer

9851
09:14:49,917 --> 09:14:51,438
or are they gonna build a framework that

9852
09:14:51,438 --> 09:14:53,360
searches and finds and can try multiple

9853
09:14:53,360 --> 09:14:54,960
values until he gets a quote unquote

9854
09:14:54,960 --> 09:14:56,800
good one right

9855
09:14:56,800 --> 09:14:59,040
so

9856
09:14:59,839 --> 09:15:02,718
yeah i think uh

9857
09:15:02,718 --> 09:15:04,800
doing a variant where you like as long

9858
09:15:04,800 --> 09:15:06,160
as you have this just calling a few pops

9859
09:15:06,160 --> 09:15:08,557
like you're we can switch back to uh

9860
09:15:08,557 --> 09:15:10,640
strawhat and see that they have started

9861
09:15:10,640 --> 09:15:12,398
writing an expectation script here now

9862
09:15:12,398 --> 09:15:14,960
so uh using pawn tools like most of our

9863
09:15:14,960 --> 09:15:16,398
players have been doing

9864
09:15:16,398 --> 09:15:17,917
um

9865
09:15:17,917 --> 09:15:19,278
they are setting up the initial

9866
09:15:19,278 --> 09:15:21,122
interaction they are getting that leak

9867
09:15:21,122 --> 09:15:22,640
to get that base address where all the

9868
09:15:22,640 --> 09:15:24,320
gadgets will be located

9869
09:15:24,320 --> 09:15:26,237
that's the

9870
09:15:26,237 --> 09:15:28,000
the base that they will then need to add

9871
09:15:28,000 --> 09:15:29,758
a bunch of offsets to to get to these

9872
09:15:29,758 --> 09:15:32,078
different gadgets

9873
09:15:32,078 --> 09:15:33,278
and to clarify again like what the

9874
09:15:33,278 --> 09:15:35,438
program is doing it's

9875
09:15:35,438 --> 09:15:36,800
asking for a key from the user

9876
09:15:36,800 --> 09:15:38,640
generating these like six megabytes of

9877
09:15:38,640 --> 09:15:41,519
rob gadgets and then you basically just

9878
09:15:41,519 --> 09:15:43,680
can input large buffer and then it will

9879
09:15:43,680 --> 09:15:45,839
pivot the stack to this large buffer and

9880
09:15:45,839 --> 09:15:47,598
just it would be a rock chain so i don't

9881
09:15:47,598 --> 09:15:48,960
know if you know your anime well but one

9882
09:15:48,960 --> 09:15:50,800
of the chat questions is what anime is

9883
09:15:50,800 --> 09:15:52,480
that background from straw hat and i

9884
09:15:52,480 --> 09:15:54,557
actually don't know right i'm not much

9885
09:15:54,557 --> 09:15:55,680
of an animator i

9886
09:15:55,680 --> 09:15:56,480
have

9887
09:15:56,480 --> 09:15:58,078
seen

9888
09:15:58,078 --> 09:15:59,598
hey like

9889
09:15:59,598 --> 09:16:00,960
i don't know apart from like i don't

9890
09:16:00,960 --> 09:16:02,877
know can answer it faster than we can

9891
09:16:02,877 --> 09:16:04,557
yeah that's the apart from individual

9892
09:16:04,557 --> 09:16:06,160
episodes of stuff like the only like

9893
09:16:06,160 --> 09:16:08,237
full season of anything i've seen is uh

9894
09:16:08,237 --> 09:16:10,237
neon genesis evangelion yeah

9895
09:16:10,237 --> 09:16:11,917
when i was like 14. that was great i've

9896
09:16:11,917 --> 09:16:14,557
seen a couple ghosts in the shell and uh

9897
09:16:14,557 --> 09:16:16,480
yeah a few more one punch but

9898
09:16:16,480 --> 09:16:18,078
yeah not not a huge amount so

9899
09:16:18,078 --> 09:16:19,360
unfortunately i couldn't couldn't tell

9900
09:16:19,360 --> 09:16:21,839
you although i'm curious uh yeah so chat

9901
09:16:21,839 --> 09:16:23,278
will have to help us on that

9902
09:16:23,278 --> 09:16:24,320
um

9903
09:16:24,320 --> 09:16:25,598
all right so looking back at the source

9904
09:16:25,598 --> 09:16:26,718
code

9905
09:16:26,718 --> 09:16:29,758
uh please provide a key the toolbox area

9906
09:16:29,758 --> 09:16:30,839
okay so i

9907
09:16:30,839 --> 09:16:32,718
mean

9908
09:16:32,718 --> 09:16:35,122
yeah i

9909
09:16:35,278 --> 09:16:37,278
i'm really curious again i mean what is

9910
09:16:37,278 --> 09:16:39,519
the i i feel like this this should just

9911
09:16:39,519 --> 09:16:41,040
be doable with just syscall and

9912
09:16:41,040 --> 09:16:43,199
registers right like you really don't

9913
09:16:43,199 --> 09:16:44,640
well right so like here's the question

9914
09:16:44,640 --> 09:16:47,839
though look here yeah look here we have

9915
09:16:47,839 --> 09:16:50,160
uh over on strawhat's

9916
09:16:50,160 --> 09:16:52,320
side they are looking for the syscall

9917
09:16:52,320 --> 09:16:54,320
they're looking for the pop rdi so they

9918
09:16:54,320 --> 09:16:55,917
are like you know picking their

9919
09:16:55,917 --> 09:16:58,000
different uh pieces here

9920
09:16:58,000 --> 09:17:01,758
uh and uh yeah they are uh

9921
09:17:01,758 --> 09:17:03,278
getting slowly getting there i think i

9922
09:17:03,278 --> 09:17:04,960
think they they are on to that strategy

9923
09:17:04,960 --> 09:17:06,398
that i was talking about well we're

9924
09:17:06,398 --> 09:17:07,758
seeing the same thing i think from

9925
09:17:07,758 --> 09:17:08,960
perfect route they've got all the

9926
09:17:08,960 --> 09:17:10,480
register control first they haven't gone

9927
09:17:10,480 --> 09:17:12,480
for a syscall yet but um they're

9928
09:17:12,480 --> 09:17:14,237
actually going for some ads this is

9929
09:17:14,237 --> 09:17:15,839
interesting

9930
09:17:15,839 --> 09:17:17,199
yeah so how are they going to add the

9931
09:17:17,199 --> 09:17:20,000
base address to no um i'm trying to

9932
09:17:20,000 --> 09:17:21,438
think of what they

9933
09:17:21,438 --> 09:17:22,960
if there's a return address that comes

9934
09:17:22,960 --> 09:17:25,360
back from like map or break or something

9935
09:17:25,360 --> 09:17:27,680
are they going to add to i can't think

9936
09:17:27,680 --> 09:17:28,718
of a reason they would need to add to it

9937
09:17:28,718 --> 09:17:30,237
though they just need the it's a good

9938
09:17:30,237 --> 09:17:30,960
question you need to move it to a

9939
09:17:30,960 --> 09:17:32,320
different register really so they

9940
09:17:32,320 --> 09:17:34,557
already know that that reminds me of uh

9941
09:17:34,557 --> 09:17:36,000
one uh

9942
09:17:36,000 --> 09:17:38,000
difficulty of the if you would go for

9943
09:17:38,000 --> 09:17:41,278
the uh break and protect uh yes route

9944
09:17:41,278 --> 09:17:43,839
yeah is that uh with break you cannot uh

9945
09:17:43,839 --> 09:17:45,680
specify the address yourself you will

9946
09:17:45,680 --> 09:17:47,199
get the address back in the rx right

9947
09:17:47,199 --> 09:17:48,640
sure so you just change it to a

9948
09:17:48,640 --> 09:17:50,480
different register right yes

9949
09:17:50,480 --> 09:17:51,680
except actually what you might need is

9950
09:17:51,680 --> 09:17:53,040
to copy it to another register because

9951
09:17:53,040 --> 09:17:54,557
you may have to use it more than once

9952
09:17:54,557 --> 09:17:55,680
yeah because you're probably going to

9953
09:17:55,680 --> 09:17:57,839
have to do like some sort of jump to it

9954
09:17:57,839 --> 09:18:00,000
at the end as well so you actually save

9955
09:18:00,000 --> 09:18:01,519
a copy that yeah that's a good point you

9956
09:18:01,519 --> 09:18:02,800
actually might be better off with mmap

9957
09:18:02,800 --> 09:18:05,839
with the yeah so it depends on the flag

9958
09:18:05,839 --> 09:18:08,557
you're switching map for maybe like

9959
09:18:08,557 --> 09:18:11,519
five or so uh or more one of the things

9960
09:18:11,519 --> 09:18:13,040
that strikes me just now this is you

9961
09:18:13,040 --> 09:18:14,480
know it's funny that you don't think of

9962
09:18:14,480 --> 09:18:16,000
this right off the bat but you know when

9963
09:18:16,000 --> 09:18:17,199
i'm looking at

9964
09:18:17,199 --> 09:18:18,480
much like some of the earlier ones where

9965
09:18:18,480 --> 09:18:19,360
you're like oh here's a bunch of

9966
09:18:19,360 --> 09:18:20,557
syscalls and then it's like oh but

9967
09:18:20,557 --> 09:18:22,320
getting the string is hard in this case

9968
09:18:22,320 --> 09:18:24,480
you've got a bunch of um

9969
09:18:24,480 --> 09:18:26,640
uh you don't just have a rap payload

9970
09:18:26,640 --> 09:18:30,557
that you provided right um you are using

9971
09:18:30,557 --> 09:18:32,078
a payload that exists so you don't get

9972
09:18:32,078 --> 09:18:33,680
constant like constants which normally

9973
09:18:33,680 --> 09:18:36,320
are really easy right like a pop rdi is

9974
09:18:36,320 --> 09:18:37,199
great

9975
09:18:37,199 --> 09:18:39,917
except it's it's you don't you don't

9976
09:18:39,917 --> 09:18:41,278
control the stack that it's running from

9977
09:18:41,278 --> 09:18:43,040
right no no you are you oh you do

9978
09:18:43,040 --> 09:18:45,278
actually you you like you create a huge

9979
09:18:45,278 --> 09:18:46,718
buffer

9980
09:18:46,718 --> 09:18:48,320
whatever you want but well but do you

9981
09:18:48,320 --> 09:18:50,237
you'd have to find that value in the

9982
09:18:50,237 --> 09:18:51,839
stack is my point right so you're not

9983
09:18:51,839 --> 09:18:54,718
going to get necessarily all

9984
09:18:54,718 --> 09:18:57,199
random values in your 16 megabytes all

9985
09:18:57,199 --> 09:18:59,199
32-bit random values or 8-bit random

9986
09:18:59,199 --> 09:19:02,078
values oh no no like the the the gadget

9987
09:19:02,078 --> 09:19:04,640
area and your rope chain

9988
09:19:04,640 --> 09:19:07,680
are like oh two separate okay area so i

9989
09:19:07,680 --> 09:19:08,800
thought the rock chain was specified

9990
09:19:08,800 --> 09:19:11,278
based on offsets into the payload in

9991
09:19:11,278 --> 09:19:13,360
which case you can only use values that

9992
09:19:13,360 --> 09:19:15,436
exist in the

9993
09:19:15,436 --> 09:19:18,560
the the region oh no no no like you um

9994
09:19:18,560 --> 09:19:20,320
you provide basically you provide the

9995
09:19:20,320 --> 09:19:22,720
the like a normal normal rob chain

9996
09:19:22,720 --> 09:19:24,560
and then there is this 16 megabytes area

9997
09:19:24,560 --> 09:19:26,480
of random gadgets oh sure thank you

9998
09:19:26,480 --> 09:19:27,756
thank you i misunderstood that right

9999
09:19:27,756 --> 09:19:30,400
okay so yes so getting control over here

10000
09:19:30,400 --> 09:19:31,520
so that makes me want to do another

10001
09:19:31,520 --> 09:19:32,880
challenge though so maybe maybe a later

10002
09:19:32,880 --> 09:19:34,480
not this one obviously maybe later yeah

10003
09:19:34,480 --> 09:19:35,596
yeah a later one that'd be an

10004
09:19:35,596 --> 09:19:37,276
interesting variant

10005
09:19:37,276 --> 09:19:39,276
um

10006
09:19:39,276 --> 09:19:40,720
but yeah we can switch over to perfect

10007
09:19:40,720 --> 09:19:42,240
root and see that they are scrolling

10008
09:19:42,240 --> 09:19:44,240
through uh get it i think over like

10009
09:19:44,240 --> 09:19:45,360
there will be this will be a theme

10010
09:19:45,360 --> 09:19:46,400
throughout this challenge there would be

10011
09:19:46,400 --> 09:19:48,400
a lot of scrolling through gadgets yes

10012
09:19:48,400 --> 09:19:50,960
when you're searching for

10013
09:19:50,960 --> 09:19:53,120
gadgets yeah

10014
09:19:53,120 --> 09:19:55,916
i i'm curious uh

10015
09:19:55,916 --> 09:19:58,320
nobody came in and we did warn them this

10016
09:19:58,320 --> 09:20:01,360
is a rot payload yeah

10017
09:20:01,360 --> 09:20:02,640
and some of our stuff has been a little

10018
09:20:02,640 --> 09:20:05,120
cheeky like the stacks and the the the

10019
09:20:05,120 --> 09:20:06,720
heat versus you know heap exploitation

10020
09:20:06,720 --> 09:20:07,520
but

10021
09:20:07,520 --> 09:20:10,320
i will say that in this particular case

10022
09:20:10,320 --> 09:20:11,436
um

10023
09:20:11,436 --> 09:20:13,916
something you know a a rop compiler type

10024
09:20:13,916 --> 09:20:16,320
situation might have been pretty nice

10025
09:20:16,320 --> 09:20:18,480
especially when you can let it fail try

10026
09:20:18,480 --> 09:20:20,240
a new random seed until it succeeds you

10027
09:20:20,240 --> 09:20:21,756
could just sit back and let your tool do

10028
09:20:21,756 --> 09:20:23,520
all the work yeah i am a little curious

10029
09:20:23,520 --> 09:20:25,200
that nobody nobody came in with

10030
09:20:25,200 --> 09:20:26,640
something more automated this is

10031
09:20:26,640 --> 09:20:27,840
something i've actually on several

10032
09:20:27,840 --> 09:20:29,360
occasions thought about as like a very

10033
09:20:29,360 --> 09:20:31,120
interesting uh

10034
09:20:31,120 --> 09:20:33,756
programming project thing is to do like

10035
09:20:33,756 --> 09:20:34,560
a

10036
09:20:34,560 --> 09:20:37,520
constraint based automatic drop

10037
09:20:37,520 --> 09:20:39,436
chain builder thing like

10038
09:20:39,436 --> 09:20:41,436
um never really gotten around to it but

10039
09:20:41,436 --> 09:20:43,360
it's a problem i've been you know

10040
09:20:43,360 --> 09:20:44,560
you know when i'm in the bathroom or

10041
09:20:44,560 --> 09:20:45,596
something like thinking about the

10042
09:20:45,596 --> 09:20:47,596
problem like sure you take a shower and

10043
09:20:47,596 --> 09:20:48,880
you think about uh rock payload

10044
09:20:48,880 --> 09:20:50,320
generation yeah

10045
09:20:50,320 --> 09:20:52,720
yeah as one does yes yes

10046
09:20:52,720 --> 09:20:54,960
yeah of course there's uh

10047
09:20:54,960 --> 09:20:56,640
we're completely i still haven't seen

10048
09:20:56,640 --> 09:20:58,320
yeah this is this is not strange this is

10049
09:20:58,320 --> 09:21:00,800
not strange i promise yeah um

10050
09:21:00,800 --> 09:21:02,720
i still haven't seen a syscall yet from

10051
09:21:02,720 --> 09:21:04,160
perfect route which is interesting and i

10052
09:21:04,160 --> 09:21:05,916
haven't seen uh straw hats payload in a

10053
09:21:05,916 --> 09:21:07,040
while so i don't know if they're

10054
09:21:07,040 --> 09:21:08,160
building

10055
09:21:08,160 --> 09:21:08,960
right

10056
09:21:08,960 --> 09:21:10,960
a similar payload or not i actually one

10057
09:21:10,960 --> 09:21:12,000
of the things i really like though about

10058
09:21:12,000 --> 09:21:13,120
this particular challenge sometimes

10059
09:21:13,120 --> 09:21:15,436
again we have no idea of the state of a

10060
09:21:15,436 --> 09:21:16,480
challenge we don't know how far they've

10061
09:21:16,480 --> 09:21:18,160
got or what they've got but here where

10062
09:21:18,160 --> 09:21:20,080
they're just creating these gadgets it's

10063
09:21:20,080 --> 09:21:21,756
actually really quite nice to to get a

10064
09:21:21,756 --> 09:21:23,680
sense for kind of how far along they are

10065
09:21:23,680 --> 09:21:24,800
and

10066
09:21:24,800 --> 09:21:26,160
the players like we've been talking

10067
09:21:26,160 --> 09:21:28,240
about like whether it's you know the

10068
09:21:28,240 --> 09:21:30,160
finding the bugs that's difficult or

10069
09:21:30,160 --> 09:21:31,916
performing the exploitation right here

10070
09:21:31,916 --> 09:21:33,360
it's 100 percent like performing the

10071
09:21:33,360 --> 09:21:35,200
exploitation clearly yeah bug is just

10072
09:21:35,200 --> 09:21:37,120
handed to you you're told exactly how to

10073
09:21:37,120 --> 09:21:38,800
do it right the question is how do you

10074
09:21:38,800 --> 09:21:41,120
make it do something useful yes uh even

10075
09:21:41,120 --> 09:21:42,400
though you've got that

10076
09:21:42,400 --> 09:21:44,560
so i've mentioned earlier that a lot of

10077
09:21:44,560 --> 09:21:46,400
the challenges in this event a lot of

10078
09:21:46,400 --> 09:21:47,756
the work was done by a few people who

10079
09:21:47,756 --> 09:21:49,840
are not here on site we've had glenn off

10080
09:21:49,840 --> 09:21:52,160
camera but negasura and chad hey josh

10081
09:21:52,160 --> 09:21:54,640
thanks for hanging out with us it's the

10082
09:21:54,640 --> 09:21:56,240
i said it's not too late where you're at

10083
09:21:56,240 --> 09:21:57,040
but

10084
09:21:57,040 --> 09:21:58,880
uh good to see you josh has written

10085
09:21:58,880 --> 09:22:00,800
several of the challenges that uh are in

10086
09:22:00,800 --> 09:22:03,840
the competition yep happy to have you

10087
09:22:03,840 --> 09:22:05,040
and we miss you hope you're having a

10088
09:22:05,040 --> 09:22:08,320
good uh a good time thank you uh

10089
09:22:08,320 --> 09:22:09,520
slaughtered at least one of my

10090
09:22:09,520 --> 09:22:11,680
challenges uh right

10091
09:22:11,680 --> 09:22:13,840
uh in terms of rewriting it yes yo yeah

10092
09:22:13,840 --> 09:22:15,200
yeah yeah yeah josh has gone through and

10093
09:22:15,200 --> 09:22:16,720
fixed up several challenges that started

10094
09:22:16,720 --> 09:22:18,800
to look too hard and uh

10095
09:22:18,800 --> 09:22:20,880
trying to try to i'm saying i'm saying

10096
09:22:20,880 --> 09:22:22,560
slaughtered what i mean i really mean is

10097
09:22:22,560 --> 09:22:24,880
salvage yeah yeah made it yeah yes

10098
09:22:24,880 --> 09:22:27,916
fieldable yes oh he did it to mine too

10099
09:22:27,916 --> 09:22:29,360
so like i said i had started one that

10100
09:22:29,360 --> 09:22:31,680
was just pretty broken and so

10101
09:22:31,680 --> 09:22:33,756
all right so we're often we've got um

10102
09:22:33,756 --> 09:22:35,120
we've got a rock team come together so

10103
09:22:35,120 --> 09:22:36,720
we've got to pop racks looking at the

10104
09:22:36,720 --> 09:22:38,880
syscall reference rdi leak with am

10105
09:22:38,880 --> 09:22:40,720
they're going with the map routes

10106
09:22:40,720 --> 09:22:43,680
classic okay

10107
09:22:43,840 --> 09:22:45,520
so in the if that if that's the case

10108
09:22:45,520 --> 09:22:46,720
like if they're doing that that means

10109
09:22:46,720 --> 09:22:47,916
that they have all the compo like

10110
09:22:47,916 --> 09:22:50,320
because if you can do the this call you

10111
09:22:50,320 --> 09:22:51,840
can do all the cisco that you need like

10112
09:22:51,840 --> 09:22:53,276
you can populate all the registers

10113
09:22:53,276 --> 09:22:54,720
except they don't actually have what's

10114
09:22:54,720 --> 09:22:56,880
this call so i don't see azure for cisco

10115
09:22:56,880 --> 09:22:58,560
yet

10116
09:22:58,560 --> 09:23:00,640
yeah that's that's not going to be hard

10117
09:23:00,640 --> 09:23:01,840
no no there's going to be plenty and

10118
09:23:01,840 --> 09:23:02,720
whatever

10119
09:23:02,720 --> 09:23:04,560
just

10120
09:23:04,560 --> 09:23:07,436
statistics because that one doesn't even

10121
09:23:07,436 --> 09:23:08,480
need to be

10122
09:23:08,480 --> 09:23:09,360
like

10123
09:23:09,360 --> 09:23:11,596
uh

10124
09:23:11,680 --> 09:23:14,800
before like with a rat or like it can be

10125
09:23:14,800 --> 09:23:16,800
there's quite a little bit of leeway

10126
09:23:16,800 --> 09:23:18,800
what can come afterwards well it's yeah

10127
09:23:18,800 --> 09:23:21,436
it's also it's a cd80 what right for for

10128
09:23:21,436 --> 09:23:24,400
uh uh cisco yes all right it's two bytes

10129
09:23:24,400 --> 09:23:26,240
so it's two bytes but that's still not

10130
09:23:26,240 --> 09:23:29,276
65k random you know you know 50 chance

10131
09:23:29,276 --> 09:23:30,560
and whatever like it's

10132
09:23:30,560 --> 09:23:32,080
that's very doable especially 16

10133
09:23:32,080 --> 09:23:33,840
megabytes you're definitely going to get

10134
09:23:33,840 --> 09:23:35,360
some sys calls so that makes sense that

10135
09:23:35,360 --> 09:23:36,400
you would be

10136
09:23:36,400 --> 09:23:37,596
i mean i think if you wanted to play

10137
09:23:37,596 --> 09:23:39,596
games you could make it much smaller and

10138
09:23:39,596 --> 09:23:41,520
then then you make them really tackle

10139
09:23:41,520 --> 09:23:44,000
the problem of like how

10140
09:23:44,000 --> 09:23:45,756
many random seeds should they try to

10141
09:23:45,756 --> 09:23:48,080
create that hardest thing i was uh you

10142
09:23:48,080 --> 09:23:49,756
know considering going that route when

10143
09:23:49,756 --> 09:23:51,360
we were making this but i realized not

10144
09:23:51,360 --> 09:23:53,840
for life no yeah i think for for a

10145
09:23:53,840 --> 09:23:55,120
longer more interesting variant

10146
09:23:55,120 --> 09:23:56,720
absolutely that would be really cool i

10147
09:23:56,720 --> 09:23:58,560
would say oh it's only like you know

10148
09:23:58,560 --> 09:24:01,276
50k big or you know you know 100k yeah

10149
09:24:01,276 --> 09:24:02,480
yeah i was sitting there writing the

10150
09:24:02,480 --> 09:24:03,756
challenge and then you go to like okay

10151
09:24:03,756 --> 09:24:05,200
how large should this buffer be and i

10152
09:24:05,200 --> 09:24:06,960
just like you know wrapped in a large

10153
09:24:06,960 --> 09:24:08,640
number two ten put a bunch of numbers

10154
09:24:08,640 --> 09:24:10,640
yeah i think you did like x thousand

10155
09:24:10,640 --> 09:24:13,040
times six thousand because that's felt

10156
09:24:13,040 --> 09:24:14,480
cool

10157
09:24:14,480 --> 09:24:16,640
uh i'm gonna be real happy when i

10158
09:24:16,640 --> 09:24:18,800
finally see a perfect root put a uh a

10159
09:24:18,800 --> 09:24:20,160
syscall one because i'm just seeing a

10160
09:24:20,160 --> 09:24:22,240
lot of uh

10161
09:24:22,240 --> 09:24:23,916
yeah are they putting all of the

10162
09:24:23,916 --> 09:24:26,479
arguments

10163
09:24:26,720 --> 09:24:28,240
no no this is completely fine they're

10164
09:24:28,240 --> 09:24:30,800
building up the rock chain here

10165
09:24:30,800 --> 09:24:32,240
well they're missing the syscall thing

10166
09:24:32,240 --> 09:24:33,436
right they're just that's what i said

10167
09:24:33,436 --> 09:24:35,596
i'm going to be real happy when they

10168
09:24:35,596 --> 09:24:39,799
today i think they did they forget it

10169
09:24:42,480 --> 09:24:44,160
oh they're looking at the shell code as

10170
09:24:44,160 --> 09:24:47,520
well which they need to do like uh

10171
09:24:47,520 --> 09:24:49,276
after like after they've done this after

10172
09:24:49,276 --> 09:24:52,000
they've done the mmap uh read

10173
09:24:52,000 --> 09:24:53,680
uh they need to actually read the the

10174
09:24:53,680 --> 09:24:56,720
shell code but they they they haven't

10175
09:24:56,720 --> 09:24:57,680
right unless i'm missing something

10176
09:24:57,680 --> 09:24:59,596
there's still no syscall no but i want

10177
09:24:59,596 --> 09:25:01,520
to switch over to yeah

10178
09:25:01,520 --> 09:25:04,160
because i saw uh here they just tapped

10179
09:25:04,160 --> 09:25:05,520
away from it unfortunately but i saw

10180
09:25:05,520 --> 09:25:07,276
they were also looking at asus call

10181
09:25:07,276 --> 09:25:08,160
table

10182
09:25:08,160 --> 09:25:09,520
uh well and they pulled up they had a

10183
09:25:09,520 --> 09:25:10,880
system called gadget in particular

10184
09:25:10,880 --> 09:25:12,320
earlier so let's see how many of the

10185
09:25:12,320 --> 09:25:14,400
other gadgets they have you can see that

10186
09:25:14,400 --> 09:25:16,480
they have a rob 2 that takes t so and

10187
09:25:16,480 --> 09:25:18,400
then now we're up x x that takes c so

10188
09:25:18,400 --> 09:25:20,480
they might have switched the uh

10189
09:25:20,480 --> 09:25:22,160
around a little bit to try something

10190
09:25:22,160 --> 09:25:23,520
else yes

10191
09:25:23,520 --> 09:25:25,120
um yeah let's hang here hang with them

10192
09:25:25,120 --> 09:25:26,400
for a little bit just to see if we'll

10193
09:25:26,400 --> 09:25:28,160
get their their payload by the way with

10194
09:25:28,160 --> 09:25:31,756
this well since you have such a big uh

10195
09:25:31,756 --> 09:25:33,596
like drop chain yep something you can

10196
09:25:33,596 --> 09:25:35,680
actually go for here is actually a sig

10197
09:25:35,680 --> 09:25:37,200
return

10198
09:25:37,200 --> 09:25:39,436
uh to like pop

10199
09:25:39,436 --> 09:25:41,840
all kinds of stuff of the stack so i

10200
09:25:41,840 --> 09:25:43,520
think you could basically do this with

10201
09:25:43,520 --> 09:25:46,800
two gadgets you need a pop rex to set

10202
09:25:46,800 --> 09:25:48,480
the the cisco and then you need the

10203
09:25:48,480 --> 09:25:50,840
syscall and that's all you need

10204
09:25:50,840 --> 09:25:52,800
interesting yes

10205
09:25:52,800 --> 09:25:55,436
and there's even like a utility function

10206
09:25:55,436 --> 09:25:58,960
in pawn tools to build your sig return

10207
09:25:58,960 --> 09:26:01,680
frame that you put on really yes you

10208
09:26:01,680 --> 09:26:04,080
tell it which registers you want to

10209
09:26:04,080 --> 09:26:06,320
populate like which ones you care about

10210
09:26:06,320 --> 09:26:09,120
yeah and then you just like um serialize

10211
09:26:09,120 --> 09:26:10,960
this into the thing you put out on the

10212
09:26:10,960 --> 09:26:12,240
stage hint for the audience or for

10213
09:26:12,240 --> 09:26:14,320
somebody else uh who might have to

10214
09:26:14,320 --> 09:26:15,680
tackle a challenge like that one later

10215
09:26:15,680 --> 09:26:17,120
keep that keep that one in mind because

10216
09:26:17,120 --> 09:26:18,560
that's gonna solve some of the cts

10217
09:26:18,560 --> 09:26:19,756
challenge i guarantee you in the next

10218
09:26:19,756 --> 09:26:21,596
year yes like the good the good thing

10219
09:26:21,596 --> 09:26:23,200
with it is like really simple the bad

10220
09:26:23,200 --> 09:26:26,320
side is that it consumes a lot of space

10221
09:26:26,320 --> 09:26:28,320
because like it's it's like a you know

10222
09:26:28,320 --> 09:26:30,080
you're popping off like all the

10223
09:26:30,080 --> 09:26:33,276
registers of the stack basically yeah

10224
09:26:33,276 --> 09:26:34,640
but i mean uh

10225
09:26:34,640 --> 09:26:37,520
so even on like x64 it's not an absurd

10226
09:26:37,520 --> 09:26:39,756
amount no no no no no but but like you

10227
09:26:39,756 --> 09:26:41,520
know in in some rope situations you

10228
09:26:41,520 --> 09:26:43,200
might just have like a couple of

10229
09:26:43,200 --> 09:26:44,560
elements so it's not a it's not a silver

10230
09:26:44,560 --> 09:26:46,800
bullet yeah but or maybe something you

10231
09:26:46,800 --> 09:26:48,320
should be having your second stage kind

10232
09:26:48,320 --> 09:26:49,520
of thing right so your first stage is

10233
09:26:49,520 --> 09:26:50,960
going to pivot to a bigger region

10234
09:26:50,960 --> 09:26:52,560
potentially and then that's the one that

10235
09:26:52,560 --> 09:26:53,520
you feel

10236
09:26:53,520 --> 09:26:55,120
just because you can because one can be

10237
09:26:55,120 --> 09:26:56,480
constrained on space the other can be

10238
09:26:56,480 --> 09:26:58,080
constrained on the type of gadgets you

10239
09:26:58,080 --> 09:27:01,120
have actually available right

10240
09:27:01,200 --> 09:27:02,880
yeah we're losing one of our displays

10241
09:27:02,880 --> 09:27:06,240
here i don't know if it's

10242
09:27:07,520 --> 09:27:08,720
uh let me see if we do some

10243
09:27:08,720 --> 09:27:09,680
troubleshooting we've it's been

10244
09:27:09,680 --> 09:27:10,720
flickering enough now i don't know if

10245
09:27:10,720 --> 09:27:13,756
you have a bad cable or not

10246
09:27:13,840 --> 09:27:15,200
yes so

10247
09:27:15,200 --> 09:27:18,080
while jordan is looking at that

10248
09:27:18,080 --> 09:27:20,800
we will continue looking at straw hat

10249
09:27:20,800 --> 09:27:24,240
and they are putting their

10250
09:27:24,800 --> 09:27:27,276
exploit script together

10251
09:27:27,276 --> 09:27:29,520
so

10252
09:27:29,596 --> 09:27:33,040
we'll see maybe they are

10253
09:27:33,436 --> 09:27:35,360
getting a bit closer there they're

10254
09:27:35,360 --> 09:27:37,520
looking at variable attributes i'm not

10255
09:27:37,520 --> 09:27:39,276
entirely sure

10256
09:27:39,276 --> 09:27:41,276
what um

10257
09:27:41,276 --> 09:27:42,800
what that will be used for in this

10258
09:27:42,800 --> 09:27:46,240
context again looking for the rob gadget

10259
09:27:46,240 --> 09:27:49,520
tool looking at the uh

10260
09:27:50,160 --> 09:27:51,756
what do you call it documentation is the

10261
09:27:51,756 --> 09:27:53,916
name sorry i'm getting a bit tired here

10262
09:27:53,916 --> 09:27:55,120
um

10263
09:27:55,120 --> 09:27:56,080
but yes

10264
09:27:56,080 --> 09:27:59,360
i do see perfect through tear yes so we

10265
09:27:59,360 --> 09:28:02,000
have perfect root back uh on the stream

10266
09:28:02,000 --> 09:28:03,840
so let's check them out do they have a

10267
09:28:03,840 --> 09:28:05,680
syscall gadget

10268
09:28:05,680 --> 09:28:08,560
i don't see a syscall gadget but i also

10269
09:28:08,560 --> 09:28:10,880
only got like a very short glance uh at

10270
09:28:10,880 --> 09:28:14,160
the script

10271
09:28:14,160 --> 09:28:16,000
um

10272
09:28:16,000 --> 09:28:17,840
yeah still missing that cisco get it

10273
09:28:17,840 --> 09:28:19,200
right talk about and talk about nerves

10274
09:28:19,200 --> 09:28:20,560
in the middle because if that's right

10275
09:28:20,560 --> 09:28:22,080
you have like everything you've got

10276
09:28:22,080 --> 09:28:23,436
everything you've got everything for the

10277
09:28:23,436 --> 09:28:24,640
one thing

10278
09:28:24,640 --> 09:28:27,436
yeah yeah yeah really uh real estate

10279
09:28:27,436 --> 09:28:29,360
hold on hold on type s

10280
09:28:29,360 --> 09:28:32,000
no 41 space

10281
09:28:32,000 --> 09:28:32,960
i'll

10282
09:28:32,960 --> 09:28:34,960
wait address why are they searching for

10283
09:28:34,960 --> 09:28:36,400
are they looking for oh they're looking

10284
09:28:36,400 --> 09:28:39,120
for a constant

10285
09:28:39,120 --> 09:28:41,916
so they want to be able to

10286
09:28:43,040 --> 09:28:46,640
i'm not sure what that was about

10287
09:28:47,040 --> 09:28:48,160
yeah it's

10288
09:28:48,160 --> 09:28:51,276
i'm not entirely sure

10289
09:28:51,360 --> 09:28:52,480
so

10290
09:28:52,480 --> 09:28:54,240
well they they blew through looking for

10291
09:28:54,240 --> 09:28:56,720
building the right gadgets oh look here

10292
09:28:56,720 --> 09:28:58,400
i think this is uh that you saw that

10293
09:28:58,400 --> 09:29:00,160
they they changed the key from 16 bytes

10294
09:29:00,160 --> 09:29:02,160
to 15 bytes uh i think that's something

10295
09:29:02,160 --> 09:29:03,840
that been messing up their input because

10296
09:29:03,840 --> 09:29:06,800
uh i think i only read actually 15 bytes

10297
09:29:06,800 --> 09:29:08,640
of input for the key so that might be

10298
09:29:08,640 --> 09:29:10,960
then the 16 input byte might be spilling

10299
09:29:10,960 --> 09:29:12,240
over into the drop chain and messing

10300
09:29:12,240 --> 09:29:13,120
with them

10301
09:29:13,120 --> 09:29:14,560
so they're fixing that up and now you

10302
09:29:14,560 --> 09:29:16,720
can see they're stepping through the rob

10303
09:29:16,720 --> 09:29:17,596
chain

10304
09:29:17,596 --> 09:29:18,240
okay

10305
09:29:18,240 --> 09:29:19,040
so

10306
09:29:19,040 --> 09:29:20,960
it's all fine except they still don't

10307
09:29:20,960 --> 09:29:22,560
have a syscall well they should realize

10308
09:29:22,560 --> 09:29:23,596
that though as they actually walk

10309
09:29:23,596 --> 09:29:24,720
through that

10310
09:29:24,720 --> 09:29:27,040
right

10311
09:29:27,360 --> 09:29:30,240
uh oh no now they have a syscall

10312
09:29:30,240 --> 09:29:31,756
did they get it earlier no no they're

10313
09:29:31,756 --> 09:29:33,200
getting it out there we go oh there they

10314
09:29:33,200 --> 09:29:36,480
are okay so this is gonna be uh yeah i

10315
09:29:36,480 --> 09:29:39,200
mean this should be it this should be it

10316
09:29:39,200 --> 09:29:40,400
like is it there no there's still a

10317
09:29:40,400 --> 09:29:41,680
couple of pieces there's still there's

10318
09:29:41,680 --> 09:29:43,200
just several pieces

10319
09:29:43,200 --> 09:29:45,040
yes well okay they're not sending the

10320
09:29:45,040 --> 09:29:46,640
shell code yet but

10321
09:29:46,640 --> 09:29:48,560
uh let's see

10322
09:29:48,560 --> 09:29:49,680
no

10323
09:29:49,680 --> 09:29:50,800
well they've actually got to copy the

10324
09:29:50,800 --> 09:29:52,800
shell code to the buffer too right or do

10325
09:29:52,800 --> 09:29:54,240
they already do that no no so you're

10326
09:29:54,240 --> 09:29:56,640
like uh yeah that's the read uh

10327
09:29:56,640 --> 09:29:58,240
you see they're do doing two syscalls

10328
09:29:58,240 --> 09:29:59,040
like

10329
09:29:59,040 --> 09:30:00,400
at the top of the script you see the map

10330
09:30:00,400 --> 09:30:01,840
set up and then that's the read that's

10331
09:30:01,840 --> 09:30:04,560
it uh and then finally uh you see the

10332
09:30:04,560 --> 09:30:07,200
the the league plus 2000 that's where

10333
09:30:07,200 --> 09:30:09,596
the location oh they have a oh they have

10334
09:30:09,596 --> 09:30:11,756
off by one typo they have a typo it was

10335
09:30:11,756 --> 09:30:13,520
twenty thousand two thousand it's off by

10336
09:30:13,520 --> 09:30:15,680
one oh my god they're like one key

10337
09:30:15,680 --> 09:30:17,756
stroke basically away i think from uh

10338
09:30:17,756 --> 09:30:18,880
solving this

10339
09:30:18,880 --> 09:30:20,800
oh that's nerve-wracking

10340
09:30:20,800 --> 09:30:22,800
let's go to the split view at least we

10341
09:30:22,800 --> 09:30:24,240
can see a little bit of what's going on

10342
09:30:24,240 --> 09:30:26,640
with straw hat while they are debugging

10343
09:30:26,640 --> 09:30:28,480
that they are still finding different

10344
09:30:28,480 --> 09:30:31,596
drop gadgets uh not quite there i think

10345
09:30:31,596 --> 09:30:33,840
if perfect root can just figure out this

10346
09:30:33,840 --> 09:30:35,596
small little uh

10347
09:30:35,596 --> 09:30:36,480
yeah

10348
09:30:36,480 --> 09:30:38,560
you know issue what are they googling

10349
09:30:38,560 --> 09:30:39,680
now they are

10350
09:30:39,680 --> 09:30:40,640
here's the problem is once once

10351
09:30:40,640 --> 09:30:42,240
something's not working oh take all

10352
09:30:42,240 --> 09:30:44,120
sorts of other things yeah it's that's

10353
09:30:44,120 --> 09:30:46,400
annoying um

10354
09:30:46,400 --> 09:30:48,000
oh that was so important i mean maybe

10355
09:30:48,000 --> 09:30:49,680
there was some issue with the map call

10356
09:30:49,680 --> 09:30:51,756
as well they could be yeah but but there

10357
09:30:51,756 --> 09:30:55,360
was definitely a keystroke wrong there

10358
09:30:55,360 --> 09:30:56,560
um

10359
09:30:56,560 --> 09:30:59,436
so we have some some excellent puns here

10360
09:30:59,436 --> 09:31:01,360
in the chat by the way what do it is so

10361
09:31:01,360 --> 09:31:02,960
we have first it's

10362
09:31:02,960 --> 09:31:06,400
danganronpa gadget havoc i'm not sure i

10363
09:31:06,400 --> 09:31:07,756
take that reference

10364
09:31:07,756 --> 09:31:11,756
but we have a swap drop and roll

10365
09:31:11,756 --> 09:31:14,400
and a proper pun yeah

10366
09:31:14,400 --> 09:31:15,680
glenn you could tell it's the end of a

10367
09:31:15,680 --> 09:31:17,200
long day when you're you're putting puns

10368
09:31:17,200 --> 09:31:19,276
in the chat yeah uh i'm with you though

10369
09:31:19,276 --> 09:31:21,680
i mean i'm here for the puns right and

10370
09:31:21,680 --> 09:31:25,360
the s-rop is uh also the name of the

10371
09:31:25,360 --> 09:31:29,200
technique uh as well yeah so bonus

10372
09:31:29,200 --> 09:31:31,276
points for the specificity i suppose but

10373
09:31:31,276 --> 09:31:34,000
uh yeah i

10374
09:31:34,000 --> 09:31:37,596
i i think uh we've got a a clearly a

10375
09:31:37,596 --> 09:31:39,200
correct approach

10376
09:31:39,200 --> 09:31:41,276
yeah clearly uh see perfect debugging

10377
09:31:41,276 --> 09:31:43,596
their uh

10378
09:31:43,596 --> 09:31:45,436
rope chain yeah

10379
09:31:45,436 --> 09:31:46,960
yeah and then have we seen have we oh

10380
09:31:46,960 --> 09:31:50,880
wait did they start over straw hat

10381
09:31:50,880 --> 09:31:52,640
that's a real small

10382
09:31:52,640 --> 09:31:54,320
yeah let's look at the experience yeah

10383
09:31:54,320 --> 09:31:55,436
they think they are

10384
09:31:55,436 --> 09:31:58,480
you know a bit struggling with like

10385
09:31:58,480 --> 09:31:59,840
maybe they're trying to do something

10386
09:31:59,840 --> 09:32:01,756
more complicated um

10387
09:32:01,756 --> 09:32:03,360
but they are looking at the cisco table

10388
09:32:03,360 --> 09:32:04,080
so

10389
09:32:04,080 --> 09:32:06,640
it feels like you know it should be well

10390
09:32:06,640 --> 09:32:08,320
and yeah they've had the rap gadgets for

10391
09:32:08,320 --> 09:32:10,080
a while they've had a working payload

10392
09:32:10,080 --> 09:32:11,276
but they're kind of back backing off

10393
09:32:11,276 --> 09:32:13,680
from that right okay here we go

10394
09:32:13,680 --> 09:32:16,480
so switching back to perfect druid uh so

10395
09:32:16,480 --> 09:32:18,480
what we did not see on screen was that

10396
09:32:18,480 --> 09:32:19,840
oh they stepped through it and then they

10397
09:32:19,840 --> 09:32:21,756
checked the memory mappings probably to

10398
09:32:21,756 --> 09:32:22,480
see

10399
09:32:22,480 --> 09:32:26,160
whether um the map call uh succeeded or

10400
09:32:26,160 --> 09:32:26,960
not

10401
09:32:26,960 --> 09:32:29,200
and they're trying to figure out i guess

10402
09:32:29,200 --> 09:32:32,240
why it's not or uh yeah so just there's

10403
09:32:32,240 --> 09:32:34,160
just this call so they're checking the

10404
09:32:34,160 --> 09:32:35,120
arguments now they're comparing the

10405
09:32:35,120 --> 09:32:37,756
arguments here

10406
09:32:37,756 --> 09:32:39,200
oh i think this is an issue i think they

10407
09:32:39,200 --> 09:32:41,756
only put they took a syscall gadget that

10408
09:32:41,756 --> 09:32:43,520
was not followed by a wreck yeah so the

10409
09:32:43,520 --> 09:32:45,596
inline one earlier isn't going to work

10410
09:32:45,596 --> 09:32:46,640
right so

10411
09:32:46,640 --> 09:32:48,640
they will do the syscall

10412
09:32:48,640 --> 09:32:51,840
but then it will just continue

10413
09:32:51,840 --> 09:32:54,479
wait a minute

10414
09:32:55,120 --> 09:32:57,680
i think

10415
09:33:01,360 --> 09:33:04,916
but they are

10416
09:33:09,040 --> 09:33:11,596
right so they took another offset

10417
09:33:11,596 --> 09:33:13,276
was that to uh is this called with the

10418
09:33:13,276 --> 09:33:15,120
red though i didn't see yeah i think so

10419
09:33:15,120 --> 09:33:17,276
they put it from somewhere

10420
09:33:17,276 --> 09:33:18,960
so they might have been like you know

10421
09:33:18,960 --> 09:33:21,596
preparing some other stuff uh

10422
09:33:21,596 --> 09:33:23,200
earlier here when they're doing this you

10423
09:33:23,200 --> 09:33:24,240
can see they're stepping through to do

10424
09:33:24,240 --> 09:33:26,320
this school and now they're passing yeah

10425
09:33:26,320 --> 09:33:28,960
yeah on so now they have this working

10426
09:33:28,960 --> 09:33:30,240
that might be yes let's see if they just

10427
09:33:30,240 --> 09:33:32,880
continue and go for it or yeah i don't

10428
09:33:32,880 --> 09:33:35,360
remember if they actually pivoted to it

10429
09:33:35,360 --> 09:33:37,840
is this call i think they're just

10430
09:33:37,840 --> 09:33:40,400
trying to see here whether and now they

10431
09:33:40,400 --> 09:33:42,240
still have the typo they still have the

10432
09:33:42,240 --> 09:33:44,160
2000 versus the 20 000 so everything

10433
09:33:44,160 --> 09:33:46,880
else now they fixed but they still have

10434
09:33:46,880 --> 09:33:48,960
the 2000 versus 20 000. well and they're

10435
09:33:48,960 --> 09:33:50,080
going to notice that if they actually

10436
09:33:50,080 --> 09:33:52,080
check the arguments yes yes right that's

10437
09:33:52,080 --> 09:33:53,520
what this is like you know you won't

10438
09:33:53,520 --> 09:33:55,520
notice until until like you can get

10439
09:33:55,520 --> 09:33:57,040
really blind to these things right and

10440
09:33:57,040 --> 09:33:58,560
this is where having like i think in a

10441
09:33:58,560 --> 09:34:00,160
you know normal ctf when you're with a

10442
09:34:00,160 --> 09:34:01,756
team you've got other people that can

10443
09:34:01,756 --> 09:34:03,276
like pair program with right somebody

10444
09:34:03,276 --> 09:34:04,960
else catches that and just something i

10445
09:34:04,960 --> 09:34:07,276
also do when doing this kind of stuff is

10446
09:34:07,276 --> 09:34:09,436
like any offset i always put them in

10447
09:34:09,436 --> 09:34:12,080
variables like always always always

10448
09:34:12,080 --> 09:34:14,160
uh like i'm almost like on the pedantic

10449
09:34:14,160 --> 09:34:16,080
side where i would put the like the

10450
09:34:16,080 --> 09:34:18,800
memory protection constants like in

10451
09:34:18,800 --> 09:34:20,080
variables

10452
09:34:20,080 --> 09:34:22,400
or even use the pawn tools uh constant

10453
09:34:22,400 --> 09:34:24,640
library that they have for this

10454
09:34:24,640 --> 09:34:25,436
um

10455
09:34:25,436 --> 09:34:27,596
so like i would have like a variable

10456
09:34:27,596 --> 09:34:29,596
called like shell code offset or

10457
09:34:29,596 --> 09:34:30,880
something which would include that and

10458
09:34:30,880 --> 09:34:32,720
you would not have this issue yeah or

10459
09:34:32,720 --> 09:34:34,320
this is why like you have this trade-off

10460
09:34:34,320 --> 09:34:35,200
with like

10461
09:34:35,200 --> 09:34:36,880
how much of like proper software

10462
09:34:36,880 --> 09:34:38,720
development practices do you apply to

10463
09:34:38,720 --> 09:34:40,240
your expo yeah because if you put unit

10464
09:34:40,240 --> 09:34:41,680
tests in directions no way obviously

10465
09:34:41,680 --> 09:34:43,040
that's not a great use of your time sure

10466
09:34:43,040 --> 09:34:45,360
right i am there's a limit definitely on

10467
09:34:45,360 --> 09:34:47,200
the side of being like

10468
09:34:47,200 --> 09:34:50,400
you know overly uh formal in my uh

10469
09:34:50,400 --> 09:34:53,200
exploit scripts oh here we go so okay

10470
09:34:53,200 --> 09:34:54,720
they've got their checker and they're

10471
09:34:54,720 --> 09:34:55,840
going to compile it they're going to

10472
09:34:55,840 --> 09:34:57,840
look at the look at the arguments right

10473
09:34:57,840 --> 09:34:58,960
you're going to double check that the

10474
09:34:58,960 --> 09:35:01,040
constants are the numeric constants that

10475
09:35:01,040 --> 09:35:02,320
they're right they do have to check the

10476
09:35:02,320 --> 09:35:03,520
constants but the problem is it's not

10477
09:35:03,520 --> 09:35:04,480
the one that they're thinking about yeah

10478
09:35:04,480 --> 09:35:06,400
it's not the flags it's not a problem

10479
09:35:06,400 --> 09:35:07,916
it's the other type and funnily enough

10480
09:35:07,916 --> 09:35:10,400
if we look here over straw hat they are

10481
09:35:10,400 --> 09:35:13,436
also writing sometimes

10482
09:35:13,436 --> 09:35:14,880
probably yes you can see pointer equals

10483
09:35:14,880 --> 09:35:16,560
mmap they're gonna double check that

10484
09:35:16,560 --> 09:35:17,756
this is what they want like the

10485
09:35:17,756 --> 09:35:19,596
arguments are what they believe they

10486
09:35:19,596 --> 09:35:21,360
should be

10487
09:35:21,360 --> 09:35:25,040
um so yes definitely on the right track

10488
09:35:25,040 --> 09:35:27,040
it's it really comes down to whether

10489
09:35:27,040 --> 09:35:29,040
perfect root manages to discover this

10490
09:35:29,040 --> 09:35:30,880
yeah uh small type no it's needed

10491
09:35:30,880 --> 09:35:33,360
clearly clearly we've got uh oh yeah

10492
09:35:33,360 --> 09:35:36,480
this will be like the question is like

10493
09:35:36,480 --> 09:35:38,240
will it take one minute or ten minutes

10494
09:35:38,240 --> 09:35:40,080
but it will be there like yeah this this

10495
09:35:40,080 --> 09:35:42,000
feels like

10496
09:35:42,000 --> 09:35:43,680
i'm going to avoid a descent into

10497
09:35:43,680 --> 09:35:45,916
madness and keep this one

10498
09:35:45,916 --> 09:35:48,240
it is right oh come on oh yeah every

10499
09:35:48,240 --> 09:35:50,000
time you see the cursor go like right by

10500
09:35:50,000 --> 09:35:52,560
yeah yeah yeah uh

10501
09:35:52,560 --> 09:35:54,480
oh

10502
09:35:54,480 --> 09:35:56,640
so they are putting another address in

10503
09:35:56,640 --> 09:35:57,596
here

10504
09:35:57,596 --> 09:36:00,560
searing out some parts of it

10505
09:36:00,560 --> 09:36:02,560
uh

10506
09:36:02,560 --> 09:36:04,800
it's close it's close you can see

10507
09:36:04,800 --> 09:36:06,640
they're starting to type really fast now

10508
09:36:06,640 --> 09:36:07,436
the

10509
09:36:07,436 --> 09:36:09,040
i mean you can i can't even imagine the

10510
09:36:09,040 --> 09:36:11,680
pressure here right it's uh so hold on

10511
09:36:11,680 --> 09:36:13,916
okay

10512
09:36:15,680 --> 09:36:16,960
stepping through i can actually hear

10513
09:36:16,960 --> 09:36:18,480
them getting in or so hard behind yeah

10514
09:36:18,480 --> 09:36:20,320
yeah yeah this is like they are they are

10515
09:36:20,320 --> 09:36:22,800
roping so hard right they're rapping so

10516
09:36:22,800 --> 09:36:25,520
hard for sure

10517
09:36:26,240 --> 09:36:28,720
um

10518
09:36:30,560 --> 09:36:31,680
there it is

10519
09:36:31,680 --> 09:36:33,436
just fixed it okay they fixed it just

10520
09:36:33,436 --> 09:36:34,800
fixed they found the typo they just

10521
09:36:34,800 --> 09:36:36,480
fixed it okay what's that issue so they

10522
09:36:36,480 --> 09:36:38,400
have a local working solution they will

10523
09:36:38,400 --> 09:36:39,840
be going for the kill here they're

10524
09:36:39,840 --> 09:36:41,200
getting ready get ready they're doing

10525
09:36:41,200 --> 09:36:43,320
submitter and there it is

10526
09:36:43,320 --> 09:36:46,080
congratulations perfect route well done

10527
09:36:46,080 --> 09:36:49,520
well done well done perfect

10528
09:36:49,596 --> 09:36:52,000
great job

10529
09:36:52,000 --> 09:36:53,680
all right thanks for hanging with us

10530
09:36:53,680 --> 09:36:57,200
chad that was fantastic

10531
09:36:57,200 --> 09:36:59,276
yeah what a day what a day a lot of

10532
09:36:59,276 --> 09:37:01,520
great matches um

10533
09:37:01,520 --> 09:37:03,360
if you missed any of them uh you can go

10534
09:37:03,360 --> 09:37:04,400
check out the stream yeah you can check

10535
09:37:04,400 --> 09:37:06,560
out the stream uh we will back tomorrow

10536
09:37:06,560 --> 09:37:08,800
with the semi-finals and the finals uh

10537
09:37:08,800 --> 09:37:10,400
what time are we starting uh we start

10538
09:37:10,400 --> 09:37:12,240
tomorrow i believe it's 10 a.m 10 a.m

10539
09:37:12,240 --> 09:37:13,436
pacific time

10540
09:37:13,436 --> 09:37:16,240
yup um we will put up another youtube

10541
09:37:16,240 --> 09:37:18,160
event so you know you can just bookmark

10542
09:37:18,160 --> 09:37:20,160
it and put on the reminder thing

10543
09:37:20,160 --> 09:37:21,200
uh

10544
09:37:21,200 --> 09:37:23,596
yeah i know like

10545
09:37:23,596 --> 09:37:24,480
just

10546
09:37:24,480 --> 09:37:26,960
glad you all came here to watch uh and

10547
09:37:26,960 --> 09:37:28,080
uh

10548
09:37:28,080 --> 09:37:29,756
we'll see you tomorrow right sounds

10549
09:37:29,756 --> 09:37:31,916
perfect all right everybody take it easy

10550
09:37:31,916 --> 09:37:35,079
good night

10551
09:37:35,880 --> 09:38:00,799
[Music]

10552
09:38:01,360 --> 09:38:02,590
so

10553
09:38:02,590 --> 09:38:17,159
[Music]

10554
09:38:19,680 --> 09:38:22,680
so

10555
09:38:23,240 --> 09:38:42,699
[Music]

10556
09:38:45,500 --> 09:38:52,400
[Music]

10557
09:38:56,450 --> 09:39:37,640
[Music]

10558
09:39:41,840 --> 09:39:44,840
so

10559
09:39:47,580 --> 09:39:50,769
[Music]

10560
09:39:58,620 --> 09:40:37,780
[Music]

10561
09:40:42,140 --> 09:40:57,400
[Music]

10562
09:41:02,230 --> 09:41:05,259
[Music]

10563
09:41:06,240 --> 09:41:09,240
so

10564
09:41:10,340 --> 09:41:21,840
[Music]

10565
09:41:21,840 --> 09:41:24,840
so

10566
09:41:26,660 --> 09:41:38,510
[Music]

10567
09:41:43,690 --> 09:42:02,300
[Music]

10568
09:42:05,500 --> 09:42:18,769
[Music]

10569
09:42:21,780 --> 09:42:25,110
[Music]

10570
09:42:29,596 --> 09:42:32,596
so

10571
09:42:32,850 --> 09:42:44,240
[Music]

10572
09:42:44,240 --> 09:42:47,240
so

10573
09:42:50,430 --> 09:43:12,430
[Music]

10574
09:43:14,560 --> 09:43:41,509
[Music]

10575
09:43:42,320 --> 09:43:45,320
so

10576
09:43:46,850 --> 09:43:56,800
[Music]

10577
09:43:56,800 --> 09:43:59,800
so

10578
09:44:00,400 --> 09:44:06,919
[Music]

10579
09:44:09,360 --> 09:44:12,360
so

10580
09:44:12,390 --> 09:44:18,309
[Music]

10581
09:44:20,390 --> 09:44:23,276
[Music]

10582
09:44:23,276 --> 09:44:24,780
so

10583
09:44:24,780 --> 09:44:26,640
[Applause]

10584
09:44:26,640 --> 09:44:32,909
[Music]

10585
09:44:37,436 --> 09:44:40,436
so

10586
09:44:41,740 --> 09:45:13,809
[Music]

10587
09:45:16,290 --> 09:45:25,999
[Music]

10588
09:45:31,200 --> 09:45:34,200
so

10589
09:45:35,930 --> 09:46:13,819
[Music]

10590
09:46:16,020 --> 09:47:15,748
[Music]

10591
09:47:19,920 --> 09:48:29,320
[Music]

10592
09:48:33,840 --> 09:48:36,840
so

10593
09:48:37,240 --> 09:49:18,199
[Music]

10594
09:49:32,790 --> 09:49:40,820
[Music]

10595
09:49:44,600 --> 09:49:50,739
[Music]

10596
09:49:54,570 --> 09:49:57,680
[Music]

10597
09:50:02,370 --> 09:50:05,669
[Music]

10598
09:50:08,980 --> 09:50:33,819
[Music]

10599
09:50:36,380 --> 09:51:01,119
[Music]

10600
09:51:05,460 --> 09:51:10,649
[Music]

10601
09:51:14,650 --> 09:51:17,769
[Music]

10602
09:51:20,120 --> 09:51:25,309
[Music]

10603
09:51:35,170 --> 09:51:55,519
[Music]

10604
09:52:00,530 --> 09:52:08,670
[Music]

10605
09:52:13,800 --> 09:52:18,870
[Music]

10606
09:52:21,170 --> 09:52:24,339
[Music]

10607
09:52:26,530 --> 09:52:42,679
[Music]

10608
09:52:45,100 --> 09:52:49,100
[Music]

10609
09:52:50,880 --> 09:52:53,320
so

10610
09:52:53,320 --> 09:52:56,510
[Music]

10611
09:52:59,780 --> 09:53:02,860
[Music]

10612
09:53:36,330 --> 09:53:39,399
[Music]

10613
09:53:44,690 --> 09:53:49,919
[Music]

10614
09:53:59,620 --> 09:54:08,739
[Music]

10615
09:54:26,710 --> 09:54:47,289
[Music]

10616
09:54:54,130 --> 09:54:57,490
[Music]

10617
09:55:22,320 --> 09:55:24,230
so

10618
09:55:24,230 --> 09:55:30,949
[Music]

10619
09:55:33,160 --> 09:55:38,850
[Music]

10620
09:55:45,560 --> 09:55:49,436
[Music]

10621
09:55:49,436 --> 09:55:51,540
so

10622
09:55:51,540 --> 09:56:07,110
[Music]

10623
09:56:09,510 --> 09:56:21,580
[Music]

10624
09:56:24,800 --> 09:56:26,880
you

