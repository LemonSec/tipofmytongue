00:00:00.000-->00:00:03.604
>>Hey and with that, I’m going
to hand you over to Douglas
McKee. Douglas. [audience

00:00:03.604-->00:00:08.609
applauds] >>Thank you! [audience
applauds] Just want to thank you
for coming, and welcome you to

00:00:12.513-->00:00:16.783
our talk today. We’re really
excited to be here, and
hopefully you won’t find this

00:00:16.783-->00:00:22.022
too boring either. So First of
all, who’s the crazy guy
standing in front of you? Uhh My

00:00:22.022-->00:00:26.593
name is Douglas McKee. I’m
security research- researcher,
on McAfee’s advanced research

00:00:26.593-->00:00:31.832
team Uh and I think more
importantly for this talk is not
who I am but who I’m not. And in

00:00:31.832-->00:00:36.637
this case, I’m not a medical
doctor and uh don’t claim to be,
and, you’ll notice throughout

00:00:36.637-->00:00:40.040
the presentation I have very
little knowledge in the medical
field but we are working with

00:00:40.040-->00:00:44.645
medical devices. So With that I
brought with me a medical doctor
today. I would like to introduce

00:00:44.645-->00:00:48.916
you to Doctor Shaun Nordeck,
he’ll be interjecting throughout
the presentation, uh to provide

00:00:48.916-->00:00:52.786
real world scenarios for the
research in which we’ve done.
Now I’ll hand it over to Doc.

00:00:52.786-->00:00:57.791
Doc? [audience applauds]
>>Hello. Thank you. As Doug
said, I’m a medical doctor,

00:01:00.594-->00:01:04.998
specifically, I’m uh a surgical
resident, at a level 1 trauma
center. I got involved with this

00:01:04.998-->00:01:09.469
project, in my own free time,
I’m not a paid consultant, I
have no financial disclosures.

00:01:09.469-->00:01:13.240
So With that out of the way, I’m
kinda give you a review what we
are going to do, and I’m gonna

00:01:13.240-->00:01:17.311
provide you with little a bit of
background on the device and why
we chose it, as well as how it’s

00:01:17.311-->00:01:21.682
used in an actual medical
setting, then I’ll turn the talk
over to Doug, who’s gonna then

00:01:21.682-->00:01:26.219
cover the protocol, reversing
the protocol, how the attacks
were carried out, and give you

00:01:26.219-->00:01:30.624
some demonstrations of that. And
then I’m gonna give you a little
bit of insight on to what that

00:01:30.624-->00:01:34.594
that type of impact on these
potential attacks will have on
the medical setting. And Then

00:01:34.594-->00:01:39.166
we’re going to wrap it up with
Doug covering mitigation on how
the different vendors, as well

00:01:39.166-->00:01:46.073
as the facilities themselves can
mitigate potential attacks. So,
when we’re considering what to

00:01:46.073-->00:01:49.943
investigate, when we’re doing
our research, we wanted to make
sure it was gonna be impactful,

00:01:49.943-->00:01:54.581
and we already knew that, in
some pumps and as well as some
pacemakers, had already been

00:01:54.581-->00:01:59.086
hacked, but what else could we
hack that would have a lot of
impact? And So we came back to

00:01:59.086-->00:02:04.324
the fundamental, that is vital
signs. And Vital signs form the
foundation of every medical

00:02:04.324-->00:02:09.663
decision and clinical decision
that we make, as physicians. And
we rely on devices heavily for

00:02:09.663-->00:02:14.601
these vital signs. Rarely, will
you ever see a physician taking
your blood pressure manually or

00:02:14.601-->00:02:19.006
checking your pulse manually,
generally these are done by a
device. So we wanted to go and

00:02:19.006-->00:02:23.677
investigate uh patient monitors.
And Those are the devices that
you’ll see at the bedside which

00:02:23.677-->00:02:28.815
will obtain which your heart
rate and vital signs. Now I
agree with another speaker here,

00:02:28.815-->00:02:33.954
Doctor Jeff Tooley, when he
states that we trust these
devices implicitly to provide us

00:02:33.954-->00:02:38.992
accurate information.
Furthermore we don’t receive any
training in medical school or in

00:02:38.992-->00:02:44.564
our literature explaining the
potential threats that exist
with these devices. So you might

00:02:44.564-->00:02:48.035
be wondering what a patient
monitor is. A patient monitor is
a device that you will find in

00:02:48.035-->00:02:52.973
the emergency room as well as in
intensive care unit. And that’s
what these big boxes on top of

00:02:52.973-->00:02:57.778
the screen here. They’re gonna
obtain the heart rate, the heart
rhythm, as well as your blood

00:02:57.778-->00:03:02.282
pressure, oxygen saturation, and
many other different matrics,
that we use as physicians to

00:03:02.282-->00:03:06.286
make decisions on whether a
patient is sick, not sick,
whether they need to go to the

00:03:06.286-->00:03:10.157
OR immediately or not.
Basically, how well is this
patient doing, and they form the

00:03:10.157-->00:03:15.028
basis here. Now they can be
wireless or wired, and they even
come in a scaled down version

00:03:15.028-->00:03:19.499
called Slim Retreat Box, which
you see on the bottom. Those
provide increased mobility f-for

00:03:19.499-->00:03:23.203
patients to be kinda move around
while we still provide
continuous monitoring of their

00:03:23.203-->00:03:29.709
heart rate, their heart rhythm
as well as um things like oxygen
saturation. These contain

00:03:29.709-->00:03:34.781
patient identifiable information
as well, because obviously these
have to be linked back to who

00:03:34.781-->00:03:38.785
the patient is that they are
monitoring. And these
communicate to a central

00:03:38.785-->00:03:44.858
monitoring station. A central
monitoring station is basically
a pc that sits off-site in the

00:03:44.858-->00:03:49.496
emergency room, and intensive
care unit it usually sits at a
nursing station and what it does

00:03:49.496-->00:03:55.335
is receives all this input. On
full floor patients, it usually
sits in a specific room, called

00:03:55.335-->00:03:59.506
telemetry room and receives all
the input from multiple
different patient devices at one

00:03:59.506-->00:04:04.444
time. These central monitoring
stations have a a built in user
interface that is scaled down,

00:04:07.247-->00:04:12.252
they typically run uh XP or some
of the newer devices run Windows
7 and they are monitored either

00:04:14.855-->00:04:19.993
by a nurse for the like the
emergency room or the intensive
care or they are monitored by

00:04:19.993-->00:04:25.665
telemetry technicians someone
who is trained to monitor these
devices. These devices also have

00:04:25.665-->00:04:31.104
audible and visual alarms. They
have the capability to store 24
hours or more of a heart rhythm

00:04:31.104-->00:04:36.409
on a patient and they have the
ability to print off rhythms too
for for later review and storing

00:04:36.409-->00:04:41.014
inside of a patient’s medical
chart. We were able to secure
both of these devices to

00:04:41.014-->00:04:46.820
investigate rather cheaply off
the internet, and I’m gonna turn
the talk over now to Doug who’s

00:04:46.820-->00:04:52.692
able to kinda carry forth what
we did to investigate these.
>>Thanks Shaun, for that great

00:04:52.692-->00:04:58.865
overview. So as Shaun said once
we obtained these devices it was
time to start looking at what we

00:04:58.865-->00:05:02.435
wanted to do to attack them. And
as Shaun said in the beginning
it was really important for us

00:05:02.435-->00:05:06.173
to make sure we do a meaningful
attack. So we take a moment and
look at the different possible

00:05:06.173-->00:05:09.743
attack breakers that we have. If
we look at the central
monitoring station it’s very

00:05:09.743-->00:05:14.481
quick and easy to see that there
is the OS and the application.
Well as Shaun enumerated a lot

00:05:14.481-->00:05:18.451
of these OS’s that are on the
central monitoring stations are
running Windows XP and Windows

00:05:18.451-->00:05:21.955
7, and let’s face it, we all
know that Windows XP is a
vulnerability within itself and

00:05:21.955-->00:05:27.294
Windows 7 is really not that far
behind. So, and and that’s also
not, you know, specific to the

00:05:27.294-->00:05:30.764
medical community, so really
wasn’t a good target to look at,
at least not for what we were

00:05:30.764-->00:05:34.568
trying to accomplish. And next
you have the application that’s
running on there, and although

00:05:34.568-->00:05:39.372
that would be more specific to
the medical community I really
only attacked 1 of the 2 devices

00:05:39.372-->00:05:44.244
in which we were looking at and
being that it’s running on an
older operating system the

00:05:44.244-->00:05:47.214
vulnerabilities that we found
could more be linked to the
operating system than the

00:05:47.214-->00:05:51.952
application itself. So this left
the patient monitor itself and
you’ve got the firmware and the

00:05:51.952-->00:05:55.622
hardware, and these are great
targets to look at we can take
the device apart pull out the

00:05:55.622-->00:05:59.893
firmware, look for
vulnerabilities. Uh but again 2
things we didn’t like from that,

00:05:59.893-->00:06:05.198
the beginning was 1 it’s only
looking at 1 of the 2 devices,
the results may be very specific

00:06:05.198-->00:06:09.669
model that we look at, it
wouldn’t be very widespread, and
then also the chance that when

00:06:09.669-->00:06:13.273
you get to that level on the
device that your gonna destroy
the device. We wanted to be able

00:06:13.273-->00:06:19.179
to do more research, at least
initially. So, the easiest thing
to look at that that was between

00:06:19.179-->00:06:23.683
both devices was the networking.
And so I started talking to
Shaun about what are the

00:06:23.683-->00:06:28.755
possibilities were uh from
network perspective and we kinda
came to the conclusion that if

00:06:28.755-->00:06:32.993
we were able to modify patient
data as it went across the
network in real time, that this

00:06:32.993-->00:06:37.464
would be an impactful change and
would affect doctors uh Doctor
Nordeck sees on a regular basis

00:06:37.464-->00:06:41.201
because of these studies making
decisions in real time on this
data . So that really became the

00:06:41.201-->00:06:46.406
thesis statement for this, for
the rest of this presentation,
which goes to uh can we modify

00:06:46.406-->00:06:51.311
patient data in real time over
the network? So if that was
going to be our initial attack

00:06:51.311-->00:06:55.582
point then u-uh as a responsible
researcher, I scoured the
internet looking for different

00:06:55.582-->00:06:59.986
uh networking protocols that
were used by medical devices,
obviously more specifically with

00:06:59.986-->00:07:03.757
the ones we were able to
purchase, and I uh came across
uh something called the RWHAT

00:07:03.757-->00:07:07.460
protocol, and believe it or not
what you see in front of you on
the screen is the entirety of

00:07:07.460-->00:07:11.698
the information I was able to
find on the internet for the
RWHAT protocol. uh My point

00:07:11.698-->00:07:15.268
being is that you know I wasn’t
able to find a lot RFC’S there
wasn’t a whole lot of

00:07:15.268-->00:07:18.838
documentation out there and I
always find this amusing that in
the documentation it says

00:07:18.838-->00:07:22.175
there’s a lot of things in the
packets, so I was very
interested to see what are the

00:07:22.175-->00:07:27.180
things. So now it’s time to have
this testing set up. And it’s
pretty simple with the network,

00:07:30.784-->00:07:34.087
2 devices. We took the patient
monitor and the central
monitoring station and we

00:07:34.087-->00:07:39.125
plugged them into a switch, and
then I put a uh uh uh a computer
on there and a monitoring port

00:07:39.125-->00:07:43.763
so I could see what the network
traffic looked across across the
network. But there was one main

00:07:43.763-->00:07:48.868
component in which we were
missing, and that is user input.
So how do you get user input for

00:07:48.868-->00:07:53.573
most devices? Well on a lotta
research you know you build a
fuzzer or uh you know whatever

00:07:53.573-->00:07:57.711
the normal input is. Well for
us, that’s a patient. So I did
what any responsible researcher

00:07:57.711-->00:08:01.781
would do and I find myself a
patient. And so I had a
coworker, and I said come here

00:08:01.781-->00:08:06.486
for a second, I wanna test
something on you [chuckle] and
so we hooked, we hooked my buddy

00:08:06.486-->00:08:10.390
up here to the patient monitor,
and I was like ok great now I’m
gonna have user input to see how

00:08:10.390-->00:08:15.495
this system works but I’m
sitting there and uh I’m not
getting any heartbeat or

00:08:15.495-->00:08:19.566
anything to go across the
network, and I’m like what am I
doing wrong with this thing? So

00:08:19.566-->00:08:25.405
I called Doctor Nordeck and Doc
do wanna help me out here? What
was I doing wrong? >>So first

00:08:25.405-->00:08:29.943
off you got the leads almost
right but not quite and then
second [chuckle] you don’t have

00:08:29.943-->00:08:34.447
to have a half naked man all the
time just to test your equipment
[audience laughs] you can, you

00:08:34.447-->00:08:39.285
can use a device that they make
which is called an ECG
simulator, it’s a little box you

00:08:39.285-->00:08:43.823
hook your plugs up to and you
don’t don’t have to have this.
>>So did I mention that I’m not

00:08:43.823-->00:08:48.728
a doctor? [audience laughs] So
we decided to improve our
testing setup for some more

00:08:48.728-->00:08:52.932
reliable testing, and we brought
in this ECG simulator which uh
was less than 100 dollars on

00:08:52.932-->00:08:57.170
Ebay, and we hooked it up and
this became our very simplistic
test network. And I wanna point

00:08:57.170-->00:09:01.374
out here that uh for the rest of
the presentation we will focus
on a patient’s heartbeat but

00:09:01.374-->00:09:05.245
that is not limited to what this
research goes to anything that
the patient monitor can output

00:09:05.245-->00:09:09.182
whether it’s blood pressure, O2
levels, et cetera can also be
affected by the rest of the

00:09:09.182-->00:09:13.219
research but we will be focusing
on the heartbeat because it’s
the cheapest thing to emulate uh

00:09:13.219-->00:09:18.224
for for this research So now as
I go about the process doing of
my setup I wanted to make it as

00:09:20.293-->00:09:24.297
simple as possible again so I
wanted to look at 1 device at a
time so the first thing I did

00:09:24.297-->00:09:27.767
was power down the patient
monitor, power down the ECG
simulator, and i only looked at

00:09:27.767-->00:09:33.840
the central monitoring station
and I I uh I powered it up and
to a little bit to my surprise I

00:09:33.840-->00:09:37.877
actually already saw packets
going across the network and so
looking at wireshark this what

00:09:37.877-->00:09:43.183
we see and the first thing that
jumps out at me anyway was that
the source and destination port

00:09:43.183-->00:09:46.953
for the package going across the
network information pack was the
same it was port 7000. This will

00:09:46.953-->00:09:50.557
be the theme throughout the
presentation as well. The next
thing as you can notice is that

00:09:50.557-->00:09:54.694
it’s very easy to see that
approximately every 10 seconds
these packets are transmitted

00:09:54.694-->00:10:00.700
across the network and then
also, I’ve redacted some of
this, but uh name of the central

00:10:00.700-->00:10:06.573
monitoring station which we were
testing is in clear text these
packets which doesn’t confirm

00:10:06.573-->00:10:09.809
completely but gives us the
inclination that maybe we’re
dealing with an unencrypted

00:10:09.809-->00:10:15.915
protocol. Now because as Shaun
and I numerated that the central
monitoring station runs Windows

00:10:15.915-->00:10:20.420
XP and Windows 7 it was very
simple to pull the binaries off
of that and take a look at them

00:10:20.420-->00:10:24.524
and to kinda get a deeper
understanding of what these
packets are and to confirm what

00:10:24.524-->00:10:30.296
we see simply by looking at
Wireshark, so uh with the help
of IDA PRO and the decompilers,

00:10:30.296-->00:10:34.067
and the vendor for we wanna
thank you for leaving all the
debugging symbols in the names

00:10:34.067-->00:10:39.439
in the binaries that was
extremely helpful, uh so with a
little help of all that this is

00:10:39.439-->00:10:43.643
the IDLE that handles the
packets that in which you see
the on the network and first

00:10:43.643-->00:10:46.980
you’ll see at the top of the
loop there’s a function called
Broadcast Rwhat that’s the

00:10:46.980-->00:10:50.850
protocol being broadcast out and
then towards the bottom here
you’ll see something called

00:10:50.850-->00:10:54.888
GetRwhat Period function, if we
take a look at that function
what we end up seeing is a

00:10:54.888-->00:10:57.991
reason of value from the config
file which is an integer,
returns that integer and then

00:10:57.991-->00:11:02.629
depending on what that integer
is, it multiplies it by a
thousand in the Windows sleep

00:11:02.629-->00:11:06.799
function and that's how long the
function sleeps for. And so all
this does is confirm what we saw

00:11:06.799-->00:11:10.069
over wireshark, that we weren’t
making up these you know this
wasn’t a one time thing, this

00:11:10.069-->00:11:14.908
actually how it functions. So
now the next thing was to do was
power off the central monitoring

00:11:14.908-->00:11:18.778
system and to power on the
patient monitors, so that we
only again only had the patient

00:11:18.778-->00:11:22.782
monitor on on the network, and
once again we saw these
broadcast packets going across

00:11:22.782-->00:11:26.686
the network, and you can- we can
make some very similar
observations every 10 seconds

00:11:26.686-->00:11:31.791
approximately a packet is sent.
We noticed that the destination
port is the same, however the

00:11:31.791-->00:11:35.595
source port increments by one
every single time that uh one of
these packets is broadcast

00:11:35.595-->00:11:40.567
across the network also if you
stare hex long enough f-for one
of these packets, you notice

00:11:40.567-->00:11:45.572
that approximately 34 there’s a
count incremented by 10 each
time. A-a-and not coincidentally

00:11:48.274-->00:11:51.911
that’s the same as the number
seconds that that is that each
packet is sent. And then of

00:11:51.911-->00:11:57.450
course you can see clearly here
in plain text that there is uh
patient data going across the

00:11:57.450-->00:12:01.354
network, and again these are
broadcast packets, these are not
going directly to a single

00:12:01.354-->00:12:05.592
device. And uh uh My
understanding from Doctor
Nordeck is that when you combine

00:12:05.592-->00:12:11.297
a a patient’s name, their room
number and your their bed number
which is what this is, you’re

00:12:11.297-->00:12:16.536
now talking about HIPPA data. So
again I didn’t want to
completely disassemble the

00:12:16.536-->00:12:19.906
patient monitor, cause I wanted
to continue testing, so I didn’t
want to pull out the firmware to

00:12:19.906-->00:12:24.210
look at the binary for this,
however this data had to be
received by something, and so

00:12:24.210-->00:12:28.281
it’s not far fetched to believe
that it had been received by the
central monitoring station. So a

00:12:28.281-->00:12:32.418
little bit of digging once again
in IDA and the binaries that we
had, it’s very-ver you can

00:12:32.418-->00:12:36.656
determine the function that
received these packets off the
wire and again kinda confirm and

00:12:36.656-->00:12:40.526
learn a little bit more about
these packets. The first thing
you’ll notice up at the top is

00:12:40.526-->00:12:44.664
that there’s a function that
takes the payload plus 12 uh and
I’m not going to go back but if

00:12:44.664-->00:12:48.801
you add 12 to the beginning of
the payloads you’ll land exactly
where the patient name, and

00:12:48.801-->00:12:53.473
patient information starts. And
you can also see that that’s
passed to a function, that again

00:12:53.473-->00:12:56.843
I didn’t name this function,
this is because the debugging
symbols called parse logical

00:12:56.843-->00:13:01.714
name. You’ll see the second
parameter is 20 and hex are 32
bytes this tells us that there’s

00:13:01.714-->00:13:05.184
a limit to how much data fits in
there and we can start
diagramming out the packets it’s

00:13:05.184-->00:13:11.291
in there ok this field is this
large yada yada yada. [clears
throat] And then on top of that

00:13:11.291-->00:13:15.762
we see that there’s proper, uh
some decent handling being done
in case that the field is left

00:13:15.762-->00:13:19.699
empty, they handle the fact
looking for null, and then we
can see that this value is

00:13:19.699-->00:13:25.171
parsed out and then stored later
for use. Again all this does is
confirm what we saw of uh off

00:13:25.171-->00:13:29.842
the network traffic but it’s
kinda good to go back and have a
little bit of a foundation. So

00:13:29.842-->00:13:33.179
now that we looked at both the
central monitoring station and
the patient monitor

00:13:33.179-->00:13:37.050
independently, it’s time to plug
them in. So we plug them both
into the network, we turn on the

00:13:37.050-->00:13:41.020
ECG simulator and lo and behold
hey look we have a heartbeat
going across the network. It

00:13:41.020-->00:13:46.626
worked- works as intended and we
now have a fully functional live
system. [audience laughs] That

00:13:46.626-->00:13:51.230
bytheway makes a whole lot of
noise and your coworkers do not
appreciate. But now what does

00:13:51.230-->00:13:56.669
this look like in wireshark? So
in wireshark, now that we have 2
devices that can communicate,

00:13:56.669-->00:14:01.541
you can see here that we have
the patient monitor at 126 4 153
150 and we have the central

00:14:01.541-->00:14:07.346
monitoring station at 126 1 dot
1 dot 1 and without going into
any real deep dive, just at

00:14:07.346-->00:14:11.517
first glance you can see that we
have a bunch packets being sent
at approximately the same size.

00:14:11.517-->00:14:16.055
And These s-signify the data
packets or the heartbeat going
across the network. So now I

00:14:16.055-->00:14:19.559
threw a lot of information at
you, so let me take a fe- just
about 2 and a half seconds t-to

00:14:19.559-->00:14:23.429
repeat everything and see if you
come to the same conclusions
that I did. We have the UDP

00:14:23.429-->00:14:27.400
protocol going across the
network, it’s being sent to the
broadcast address, there’s a

00:14:27.400-->00:14:32.672
couple counters that we handle
there about 10 seconds apart,
we’ve got source ports that are

00:14:32.672-->00:14:37.677
anchoring and we have a bunch
unencrypted data, in life size
data packets. Now I don’t know

00:14:37.677-->00:14:42.715
about you but as a security
researcher that said me that’s a
simple replay attack. So that’s

00:14:42.715-->00:14:48.821
what I exactly started to do and
uh um I'm personally a big fan
of python scapy modules so I do

00:14:48.821-->00:14:53.226
a lot of my networking research
in scapy, so I tooks a just a
little bit of time and coded up

00:14:53.226-->00:14:58.131
uh uh a simple scapy strip that
would read in uh the packets
from wireshark captured to

00:14:58.131-->00:15:02.502
replay them back on the network
and with the patient monitor
disconnected to see if this

00:15:02.502-->00:15:07.707
would allow for the central
monitoring station to pick up my
fake patient monitor. Well that

00:15:07.707-->00:15:12.411
did not work exactly as planned,
uh I also did try a little bit
with UDP replay and couple of

00:15:12.411-->00:15:17.817
those programs. So that told me
I really needed to take an extra
minute and really understand

00:15:17.817-->00:15:21.287
what was going across, I wasn’t
going to get the easy way out on
this, plus it wasn’t doing what

00:15:21.287-->00:15:27.226
I wanted it to do anyway. So we
took a deeper dive into this
packets. Now, what I’m about to

00:15:27.226-->00:15:30.930
explain to you er uh I
understand that we’re working
with a UDP protocol and I’m not

00:15:30.930-->00:15:35.067
telling anybody this is doing a
TCP Handshake. What I am saying
is that there is a Handshake

00:15:35.067-->00:15:39.472
going across the network that is
very similar to TCP, so I’m
using it as an analogy. So

00:15:39.472-->00:15:43.409
[clears throat] what we got here
is we can first notice that
there’s a packet that goes

00:15:43.409-->00:15:48.681
across the wire from the central
monitoring station to the
patient monitor and we see that

00:15:48.681-->00:15:53.519
that packet is on port 2000 as a
destination. I’m gonna call that
the SYN packet. So that’s the

00:15:53.519-->00:15:57.824
first packet that goes across.
Then next we see the patient
monitor respond, and I’m gonna

00:15:57.824-->00:16:01.928
to refer that as the SYN, ACK
packet. The most important thing
to notice with this packet here,

00:16:01.928-->00:16:06.432
is that it responds to the same
port that was initially sent as
the source port from the SYN

00:16:06.432-->00:16:11.337
packet and if we continue to
follow this communication, we
now have the central monitoring

00:16:11.337-->00:16:16.676
station responds with what I’m
gonna refer to as the ACK packet
to the [clears throat] to the

00:16:16.676-->00:16:22.248
central monitoring station,
excuse me, on port 2000.
Following at this point, our

00:16:22.248-->00:16:26.619
hypothetical TCP handshake is
complete and of course you start
to see data. Well the first

00:16:26.619-->00:16:32.658
thing that we see from the
patient monitor is uhh yeah the
patient monitor is a packet that

00:16:32.658-->00:16:37.430
essentially is asking what port
do we want to use to send our
data packets through. And what

00:16:37.430-->00:16:42.668
we do is see a response from the
central monitoring station
saying hey! Use this packet 3627

00:16:42.668-->00:16:48.975
because that’s the source packet
of the packet of the previous
packet. So uh uhh then we thou-

00:16:48.975-->00:16:54.180
followed up by saying that we
see the 639 length packets that
are the data packets for the

00:16:54.180-->00:17:00.186
heartbeat. So with this
understanding it’s really easy
to update our scapy strip from

00:17:00.186-->00:17:04.724
before it’s very obvious it
wasn’t working because the port
numbers are changing and we need

00:17:04.724-->00:17:08.594
to account for that right? We
have to ask for the port number
and then once we get it, use the

00:17:08.594-->00:17:13.966
right port numbers in the data.
And that didn’t work either, so
now I’m throwing things in my

00:17:13.966-->00:17:17.236
lab because I don’t understand
why this isn’t working and I
decide to look at the packets a

00:17:17.236-->00:17:22.141
little bit more intently and so
I’m gonna go back for just a
moment and take a look at what I

00:17:22.141-->00:17:27.780
referred to as the SYN ACK
packet. So this is is this
packet here that goes across the

00:17:27.780-->00:17:32.752
network from the patient monitor
to the central monitoring
station and if we take a look at

00:17:32.752-->00:17:36.856
the payload of that packet and
you take a look at enough of
these you’ll notice that there

00:17:36.856-->00:17:41.394
is a counter and in this offset
over here that’s being
incremented by 1 each time. And

00:17:41.394-->00:17:46.899
more so that this packet isn’t
just the SYN ACK packet but it’s
actually sent every 10 data

00:17:46.899-->00:17:51.203
packets that go across the wire
and this counter has to be
correct otherwise you get reset

00:17:51.203-->00:17:55.374
packets. And basically
[stammers] what was going on and
the reason why it didn’t work

00:17:55.374-->00:17:58.511
for me the first time was I
wasn’t accounting for this, I
wasn’t resending this packet

00:17:58.511-->00:18:01.948
every 10 data packets, I was
getting it resent back because I
wasn’t doing that and I wasn’t

00:18:01.948-->00:18:06.452
incrementing this counter. And
there’s 1 more thing that I’d
like to point out in this which

00:18:06.452-->00:18:09.555
isn’t really relevant at the
moment but you’ll understand why
it’s relevant in the

00:18:09.555-->00:18:12.725
presentation. Don’t know if you
noticed or not but there’s
something that suspiciously

00:18:12.725-->00:18:16.696
looks like an IP address
inbedded in the payload. This is
not the TCP header this is the

00:18:16.696-->00:18:21.567
payload. And there’s an IP
address i- in 2 locations here.
A-as I said I’ll touch on that

00:18:21.567-->00:18:28.274
again here in a moment. So now
that I’ve found this counter I
was missing before, I update my

00:18:28.274-->00:18:33.479
scapy scripts, and so what do we
know, what do we have? So what
we have is, we have broadcast

00:18:33.479-->00:18:37.016
packets that we can easily
emulate sending across the
network that allows this the

00:18:37.016-->00:18:41.320
central monitoring station to
detect the device on the network
and then we know that we have to

00:18:41.320-->00:18:44.557
perform this handshake with the
correct port numbers, and the
correct counters and then we

00:18:44.557-->00:18:49.295
should be able to send captured
heartbeat packets all on the
wire and they should emulate a

00:18:49.295-->00:18:54.166
patient heartbeat. And even
though this really wasn’t the,
as I said, thesis statement for

00:18:54.166-->00:18:57.837
our research, it was a-a-an
important stepping stone,
because this is what allowed us

00:18:57.837-->00:19:01.907
to have the understanding on how
the packets worked, And lo and
behold, this works. So the first

00:19:01.907-->00:19:08.848
demo I’d like to show, uh
assuming the videos work, is a
demo of of this emulation. So

00:19:08.848-->00:19:12.284
what we have here on screen,
this is the central monitoring
stationing, you’ll notice

00:19:12.284-->00:19:16.589
there’s no patient monitors on
the network. And what I’ve done
is I’ve loaded my emulation

00:19:16.589-->00:19:21.060
scripts onto a raspberry pi and
they’re sent to load on to boot.
So now I’m gonna plug in the

00:19:21.060-->00:19:25.765
raspberry pi and as soon as the
raspberry pi boots up, and I’m
sending those broadcast packets

00:19:25.765-->00:19:30.336
and hey look it’s a patient
monitor on the network and then
the handshake is completed and

00:19:30.336-->00:19:35.474
t-hhis central monitoring
station says ok, great, thanks
for the data, here’s a a live

00:19:35.474-->00:19:39.745
patient. So at this point what
we’ve effectively done is
completely remove the patient

00:19:39.745-->00:19:43.616
monitor from the system and we
can use any device we want, as
something as simple, as small as

00:19:43.616-->00:19:48.621
a raspberry pi to become a
patient monitor. So why does
this matter? Well as I a a a

00:19:52.625-->00:19:57.830
[stammers] we haven’t modified
any patient data, we have
learned a whole lot a-about the

00:19:57.830-->00:20:04.170
protocol and the process, but
there are just a few attack
snares here that are least worth

00:20:04.170-->00:20:07.907
mentioning. If I was to walk
into a hospital with this
raspberry pi that I have loaded

00:20:07.907-->00:20:12.244
up and I put the correct vitals
for a patient sitting in the
patient room, and I unplug the

00:20:12.244-->00:20:16.582
patient monitor that was there
and I plug in my raspberry pi
instead, the central monitoring

00:20:16.582-->00:20:21.687
station u-uhh would receive the
same data over and over, and
over again. But let’s say the

00:20:21.687-->00:20:26.125
patient’s peacefully resting,
that’s good and it’s not gonna
cause any alarms. But now the

00:20:26.125-->00:20:30.229
patient does go into some type
oof uh critical condition, no
one’s going to be notified.

00:20:30.229-->00:20:33.699
There’s not going to be any
alarms going off, data’s not
going to make it there. Or if we

00:20:33.699-->00:20:36.535
wanted to get a little bit more
Hollywood on it, you know, what
if you wanted to kidnap a

00:20:36.535-->00:20:39.972
patient or kill a patient,
right? These are, uh a little
far fetched but uh uh they’re

00:20:39.972-->00:20:45.077
definitely plausible, given
what, given what we’ve found
here. And if you don’t like the

00:20:45.077-->00:20:50.683
raspberry pi idea, well I had a
coworker that was recently in
the hospital uh uhh who noticed

00:20:50.683-->00:20:57.523
that the gaming system in the in
the kids area was dual network
on the internet and the medical

00:20:57.523-->00:21:03.696
network. Now this give me a
remote tech factor, that I can
unload my scripts onto and now

00:21:03.696-->00:21:08.267
the gaming system can become a
patient monitor and it can
transpire down from there. And

00:21:08.267-->00:21:12.004
if you don’t like that scenario,
well I don’t know if you’ve ever
been to the hospital before but

00:21:12.004-->00:21:16.475
there’s computers all over the
place, and they’re not exactly
monitored. So once again

00:21:16.475-->00:21:21.013
t-t-there’s lots of ways to get
this code and to be able to,
potentially, cause havoc in a

00:21:21.013-->00:21:26.619
hospital. So, I showed this to
Doctor Nordeck and, quite
frankly, he was unimpressed, and

00:21:26.619-->00:21:29.989
said that this really wasn’t
what we’re looking to do and
there’s not a whole lot medical

00:21:29.989-->00:21:34.193
implication here and he really
tried to get me back on track
and said I wanted you to modify

00:21:34.193-->00:21:39.999
data in real time on the
network. So how can we take what
we learned and actually do that?

00:21:39.999-->00:21:44.036
It’s actually simpler than
emulating emulation. Emulation
you have to account for all this

00:21:44.036-->00:21:48.107
crazy stuff in handshake. Well,
the handshake is already
completed at this point and so

00:21:48.107-->00:21:52.945
we don’t have to do that. What
we do have to do is figure out
those port numbers that were uhh

00:21:52.945-->00:21:58.350
utilized in that handshake. And
uhh the simplest, th- th-the
simplest way to do that I think,

00:21:58.350-->00:22:01.620
most people can agree would be
an Arp spoof attack. I’m sure
there’s other ways we could

00:22:01.620-->00:22:06.492
accomplish the goal but this was
the easiest one for proven
concept. So what would happen if

00:22:06.492-->00:22:10.229
we Arp Spoof the patient
monitor, grabbed the information
that we need, and then send what

00:22:10.229-->00:22:15.134
we wanna send to the central
monitoring station? Well, let me
show you. First we would have

00:22:15.134-->00:22:20.906
the patient monitor once again
at 126 4 153 150 sending packets
across the wire. And again since

00:22:20.906-->00:22:25.978
this is unencrypted, we can find
that the heartbeat value is
throwing us off at 71. And that

00:22:25.978-->00:22:31.183
heartbeat value is 50 in hex or
80 in base 10, a-and bytheway we
used 80 just a-a-a starting

00:22:31.183-->00:22:36.622
point. Doctor said it was a
normal heartbeat and my
simulator used that. There’s no

00:22:36.622-->00:22:41.227
significance to 80. But anyway,
so we have this going across the
network, and then we to start do

00:22:41.227-->00:22:44.663
our Arp Spoof, and wireshark is
kind enough to tell us hey
there’s a duplicate Mac address

00:22:44.663-->00:22:50.102
on the network, thank you. Um,
anyway that’s our cali box and
then we send packets now from

00:22:50.102-->00:22:56.041
153 dot 153 not 150. However,
let’s go back and think about
what I said about the IP address

00:22:56.041-->00:23:00.646
being embedded in the payload.
It turns out that the central
monitoring station isn’t working

00:23:00.646-->00:23:06.885
at the TCP IP header, it’s
looking at the IP address that’s
stored in the payload. So that

00:23:06.885-->00:23:11.290
means that I don’t have to
actually spoof much of anything
because I can just leave the IP

00:23:11.290-->00:23:16.562
address of what it thought it
was in the first place u- um and
all I have to do now is change

00:23:16.562-->00:23:22.268
the heartbeat value. And it says
in this case that I’ve now
modified it to hex 78 or base 10

00:23:22.268-->00:23:27.273
120. So why not we give this a
whirl? So the first um I have 2
demo videos I’m gonna show and

00:23:30.509-->00:23:36.915
for the first demonstration uh
this is a little less practical
but it gets the point across. So

00:23:36.915-->00:23:41.854
here we have the patient monitor
beating at 80 beats per minute
an- huh uh the central monitor

00:23:41.854-->00:23:45.057
sitting, uhh the central
monitoring station I’m sorry,
sitting right next to it. So we

00:23:45.057-->00:23:49.128
go ahead in the central
monitoring station and load up
the patient monitor, and as we

00:23:49.128-->00:23:53.065
would expect to see, it’s
reporting the exact same data
that is seen on the patient uh

00:23:53.065-->00:23:56.969
patient monitor, 80 beats per
second. We’ll also take a brief
moment to point out, you may

00:23:56.969-->00:24:01.173
have noticed there was the delay
in loading information on the
screen and you’ll also notice

00:24:01.173-->00:24:05.411
that delay in the raspberry pi
emulation. So that delay is
normal, it was not an effect of

00:24:05.411-->00:24:11.350
my raspberry pi being too slow
or something. But now I’m going
to in- run my scapy scripts,an

00:24:11.350-->00:24:15.888
and do some Arch looping and
capture the ports I need and
send the packets I want to send

00:24:15.888-->00:24:20.426
to the central monitoring
station. Well and my coworkers
like to share that I have now

00:24:20.426-->00:24:23.762
killed the patient.[some
clapping in audience] and you
can see I zoom out here, so you

00:24:23.762-->00:24:28.467
can see it’s still the same
[audience applauds] thank you.
And I wanna point out, you see

00:24:28.467-->00:24:33.072
the red rim going around that’s
the alarms and that says saving.
Doctor Nordeck will speak on

00:24:33.072-->00:24:36.942
that in a few moments on why
that’s important. And then you
can also see all within a few

00:24:36.942-->00:24:41.046
moments of each other I can turn
the heartbeat back to what it
was. And again Doctor Nordeck

00:24:41.046-->00:24:46.352
will speak on why that’s
important. So that was a fun
scenario and I um [stutters]

00:24:46.352-->00:24:49.521
people joked with me all the
time about how many people I
killed doing this research but I

00:24:49.521-->00:24:54.126
promise nobody was harmed in the
making of this presentation. Uh
but now I consulted him again

00:24:54.126-->00:25:00.599
wi-with the Doc and he gives me
a lil little bit more realistic
scenario and so here we go

00:25:00.599-->00:25:05.771
again. And We have the uh the
patient monitor beating
peacefully at 80 beats per

00:25:05.771-->00:25:12.578
minute and we open up the uh
central monitoring station to
pull that information in and

00:25:12.578-->00:25:17.583
once again we see 80 beats per
minute going across the screen
[long pause] when it decides to

00:25:19.685-->00:25:23.722
do it, there we go. So Now we
have the heartbeat going across
the network, and what you’re

00:25:23.722-->00:25:27.626
about to see is, I’m going to
once again run my python
scripts, but I’m going to run

00:25:27.626-->00:25:31.697
them not to flatline the patient
but just to to change their
their heartbeat, and I’m going

00:25:31.697-->00:25:34.967
to change it twice in a very
short amount of time. Notice the
total amount of time it takes me

00:25:34.967-->00:25:40.105
to do this. So now I’m changing
it to 30 beats per minute you’ll
notice that the beat changes,

00:25:40.105-->00:25:44.777
the alarms go off, it’s saving,
again the patient monitor is
says what it is supposed to say

00:25:44.777-->00:25:48.380
80 beats per minute. Now what
I’m going to do is, I’m going to
let that patient recover a

00:25:48.380-->00:25:52.785
little bit, I’m gonna let it go
back to 80 beats per minute, and
now it’s back at 80 beats

00:25:52.785-->00:25:56.188
minute, and now I’m going to
start sending it a heartbeat
that’s too fast, that’s also

00:25:56.188-->00:26:00.926
alarming, I’m now gonna send it
180 beats per minute and again
you see the alarms go off and

00:26:00.926-->00:26:05.230
you see that it’s saving it to
the database. Er These are
important things for later and

00:26:05.230-->00:26:08.567
then all of a sudden it dawned
on me I’m going to make sure the
patient goes back to their

00:26:08.567-->00:26:12.037
original state because we don’t
like to leave things messed up
and now the patient is now

00:26:12.037-->00:26:18.010
beating once again 80 beats per
minute. So this is a more
realistic scenario, and I’m

00:26:18.010-->00:26:24.883
gonna turn the presentation over
to Doctor Nordeck and he can
explain uh how this impacts him

00:26:24.883-->00:26:31.457
in his everyday life. Doctor?
>>Thank you. So As you were to
see, we are able to kinda inject

00:26:31.457-->00:26:37.663
any type rhythm we want, and
while the asystole or the flat
rhythm is quite dramatic, it is

00:26:37.663-->00:26:43.602
great for Hollywood. To have a
patient become asystolic,
doesn’t really do a lot because

00:26:43.602-->00:26:47.506
I can easily go to their room
and check and the nurse can
check on them as well and

00:26:47.506-->00:26:52.377
clearly see that there’s a
patient who’s white- quite
frankly quite alive. So The

00:26:52.377-->00:26:56.615
concern becomes those
intermittent cardiac rhythms
though, when the heart rate

00:26:56.615-->00:27:03.355
drops too slow or becomes too
fast, or if we start getting
abnormal variations in that

00:27:03.355-->00:27:07.426
heart wave, the wave, that
little squiggly line that you
saw has important components to

00:27:07.426-->00:27:12.364
a physician because if we
changed different parts of that
wave form, it means different

00:27:12.364-->00:27:18.036
things, it can mean the heart is
very sick. And so when I start
getting abnormal rhythms, the

00:27:18.036-->00:27:21.673
first thing that is going to
happen is the tech or the nurse
whose monitoring that is going

00:27:21.673-->00:27:27.713
to page me, and let me know Hey
Doctor Nordeck, this patient’s
heart rate is 180! M-What can we

00:27:27.713-->00:27:30.983
do? And so, the thing that I’m
gonna do obviously, is say
alright, go check on the

00:27:30.983-->00:27:35.187
patient, what’s their blood
pressure, I’m going to order
EKG, and I’m on my way to go see

00:27:35.187-->00:27:38.590
them. Clearly, when I go into
the patient’s room and if they
have a bedside monitor, it’s

00:27:38.590-->00:27:43.495
going to be discongruent. So I’m
gonna go back and ask for the
teley tech to print me off that

00:27:43.495-->00:27:49.234
strip so I can look at it more
closely because I’m not able to
see what is going on real time

00:27:49.234-->00:27:53.405
in the room because they’re no
longer in that arrhythmia. So I
review that arrhythmia and I see

00:27:53.405-->00:27:57.109
are now normal, so now I need to
do something about it, and
that’s where it becomes

00:27:57.109-->00:28:03.882
concerning. Having these
fictitious rhythms that are over
legitimate quality when I’m

00:28:03.882-->00:28:08.220
printing them out, I need to do
something about that because
otherwise this patient could

00:28:08.220-->00:28:13.792
potentially go home and they
could have a fatal arrhythmia.
Now here’s the other thing too,

00:28:13.792-->00:28:18.764
you saw some pauses, right? So
whe-when you’re a student, you
catch these little gaps that

00:28:18.764-->00:28:24.269
happen, what do we do about
that? Well, those little gaps
don’t mean very much because as

00:28:24.269-->00:28:27.839
you saw on the monitor, the
monitor doesn’t even pick or
does an alarm on it. Because if

00:28:27.839-->00:28:32.377
it’s a brief interruption in the
connection, that happens all the
time. And patients will

00:28:32.377-->00:28:36.615
disconnect their their monitors
when they’re getting dressed or
rolling over in bed, so that

00:28:36.615-->00:28:42.754
doesn’t really have much of an
impact because it happens. As
long as they get reconnected,

00:28:42.754-->00:28:47.459
it’s not going to cause any
concerns. So the first scenario
where we emulate data and we can

00:28:47.459-->00:28:52.598
abscond a patient or in the
second scenario where we
modifying the heh heart rate,

00:28:52.598-->00:28:57.069
those 2 scenario if there’s a
pause even when I’m reviewing
it, I’m not going to be too

00:28:57.069-->00:29:02.140
concerned. I may catch onto it,
especially when I’m reviewing
several instances of this over

00:29:02.140-->00:29:06.979
and over again but there might
be something faulty with the the
equipment but still I have to

00:29:06.979-->00:29:12.417
trust what the equipment is
telling me, that it is factual.
So The other concern, what if my

00:29:12.417-->00:29:16.488
patient is unconscious? What if
I can’t go touch them and wake
them up and ask them, Hey are

00:29:16.488-->00:29:21.326
you having trouble breathing?
Does your heart feel funny? Are
you having chest pain? If that

00:29:21.326-->00:29:25.530
patient is unconscious, or if
they’re sedated or worse if
they’re a demented patient who

00:29:25.530-->00:29:30.469
has a known arrhythmia and they
can’t respond to me, I have to
trust again what this this

00:29:30.469-->00:29:37.009
equipment is telling me is true.
And we rely on this technology
quite heavily and so I wanna

00:29:37.009-->00:29:42.748
suggest to you that these small
changes have significant impact
on patient care. To be able to

00:29:42.748-->00:29:47.719
interject these different
rhythms and we only should you 2
different rhythms, but to be

00:29:47.719-->00:29:51.990
able to interject different
rhythms could potentially alter
the care for this patient. And

00:29:51.990-->00:29:57.462
that could lead to not only just
uhh resource consumption at a
minimum but could potentially

00:29:57.462-->00:30:01.800
lead to harm. But you don’t have
to trust me there’s guidelines
that actually tell us as

00:30:01.800-->00:30:06.004
physicians how we should treat
abnormal heart rhythms. So this
is the American Heart

00:30:06.004-->00:30:12.377
Association American College of
Cardiology's guideline of the
management of arrhythmias, and

00:30:12.377-->00:30:17.883
so while I only have 1 shown
here this is of management of
atrial tachycardias basically

00:30:17.883-->00:30:23.855
the 180 beats per minute rhythm
that you saw. This is only 1 of
several dozen different

00:30:23.855-->00:30:28.226
management guidelines that we
have. We like evidenced based
medicine and it is based on

00:30:28.226-->00:30:32.130
experts in the field who say
this is the best way to treat
somebody when you find that

00:30:32.130-->00:30:36.334
abnormal heart rhythm. So the
first thing that we have is, we
have that fictitious rhythm

00:30:36.334-->00:30:41.807
being sent intermittently and
now what do I do? Well the next
thing I do is are they

00:30:41.807-->00:30:45.877
hemodynamically stable? That
just simply means do they have a
normal blood pressure, if their

00:30:45.877-->00:30:50.182
blood pressure is low, and we
hit effect down on the patient
monitor, then we go down a

00:30:50.182-->00:30:54.152
different arm but since we
didn’t touch that, we’re going
to stick over on the right side

00:30:54.152-->00:30:58.123
of the arm here, so their heart
rate and their blood pressure’s
normal but they’re having these

00:30:58.123-->00:31:04.563
abnormal rhythms, so what do we
do? As you can see here, either
intervention, yes or no, we’re

00:31:04.563-->00:31:10.302
going to treat. Now, we have
documentation, because as I said
that central monitoring station

00:31:10.302-->00:31:15.540
records this information and
prints it off and we can store
it in the medical record. So we

00:31:15.540-->00:31:20.746
have documentation, so yes this
patient has an intermittent
rhythm, yes we’ve diagnosed this

00:31:20.746-->00:31:25.016
abnormal rhythm, now we need to
treat it and so we’re going to
put him on a medication to

00:31:25.016-->00:31:30.021
potentially fix that rhythm.
Well, I just thought I’d tell
you - I’d let you know all

00:31:30.021-->00:31:34.259
medications have side effects,
especially if you’re a healthy
patient that don’t- does not

00:31:34.259-->00:31:38.830
need this medication. So now we
have to deal with potential
adverse effects that these

00:31:38.830-->00:31:44.870
medications are being given to a
patient who doesn’t really need
them. And I don’t wanna say it’s

00:31:44.870-->00:31:49.341
all doom and gloom because
actually there’s a lot of
different things that go into

00:31:49.341-->00:31:55.046
this. But several other rhythms
that we have, have more serious
implications and would

00:31:55.046-->00:32:00.252
potentially mean we would need
to do an intervention like send
them to cardiac cath or do an

00:32:00.252-->00:32:05.390
electric mapping of their heart
and these are inventive, these
are invasive much more potential

00:32:05.390-->00:32:10.395
for harm to a patient. Or start
them on blood thinners which
could potentially cause bleeding

00:32:10.395-->00:32:13.865
inside the brain, or bleeding
internally in their GI tract.
There’s a lot of different

00:32:13.865-->00:32:18.770
scenarios and different
interventions. I’m only
proposing 1 here, which is the

00:32:18.770-->00:32:23.775
least harm to a patient but the
good news is, is this is not all
doom and gloom and there’s ways

00:32:27.078-->00:32:31.116
to mitigate this. So I’m going
to turn this back over to Doug
and he’s going explain some of

00:32:31.116-->00:32:36.121
the ways the industry, as well
as the facilities themselves can
protect themselves. >>2 Thanks,

00:32:39.391-->00:32:44.429
Doc. So as the doctor said,
let’s talk about some things
that would make this uh er

00:32:44.429-->00:32:49.334
mitigate this problem, so we can
all sleep a little bit better at
night. Uh uh I’m gonna approach

00:32:49.334-->00:32:55.106
this f-from 2 perspectives, what
can the vendor do of these
patient monitor devices, and

00:32:55.106-->00:32:59.611
what can uh the facilities do.
So let’s start with the vendor
because that’s uh a simple place

00:32:59.611-->00:33:04.015
to start and uh uh as you
noticed uh a you know it wasn’t
like we found some crazy zero

00:33:04.015-->00:33:08.887
day or went through a bunch of
memory corruption loops. We
simply looked at an unencrypted

00:33:08.887-->00:33:13.725
protocol that was
unauthenticated and unauthorized
and we manipulated it so I would

00:33:13.725-->00:33:19.130
consider that a design flaw. And
w-w-what we can do here is
simply encourage the vendors to

00:33:19.130-->00:33:22.801
utilize encryption the in the
medical field, for their
communications. You know we were

00:33:22.801-->00:33:27.939
using the broadcast address in
order to find these uh devices
on the network, so there was

00:33:27.939-->00:33:31.743
really no validity on whether
I’m a patient monitor or not
that’s the whole point of the

00:33:31.743-->00:33:36.514
emulation with the raspberry pi
um so i-if we could get the
medical vendors to implement

00:33:36.514-->00:33:42.087
some of this, this would
drastically reduce, if not in
some cases make it impossible

00:33:42.087-->00:33:47.259
for these attacks to be viable.
From a facilities perspective uh
[clears throat] I looked at

00:33:47.259-->00:33:52.230
several different uh vendor’s
patient monitors, uh uh
guidelines and every single

00:33:52.230-->00:33:57.235
vendor agrees that there are
certain best practices at the
hospital and uh uh critical

00:33:57.235-->00:34:02.274
facilities should be taking to
mitigate against problems. Uh 1
of them is isolation, you know

00:34:02.274-->00:34:05.777
like I used the gaming system
example earlier in the
presentation. You should never

00:34:05.777-->00:34:11.116
have your medical devices on the
same network as the internet
because all of sudden this

00:34:11.116-->00:34:16.755
simple uh physical, potential
attack is now remote attack, and
I think we can all agree that

00:34:16.755-->00:34:21.226
has even larger impact. So I
really want to encourage, you
know management in of hospitals

00:34:21.226-->00:34:25.463
facilities to follow these
guidelines, make sure that your
network is isolated. Make sure

00:34:25.463-->00:34:28.633
that you have Mac controls on
your access ports, or that
you’re locking the ports, not

00:34:28.633-->00:34:33.338
making them easily accessible.
Um and and that really
definitely doesn’t make the

00:34:33.338-->00:34:39.377
attack impossible but it
definitely helps provide a lower
risk um uhhh let’s face it, to

00:34:39.377-->00:34:43.949
some degree hospitals are almost
public places these days, you
don’t have to do a whole lot to

00:34:43.949-->00:34:47.686
work social engineer your way
into a hospital room, if you
wanted to mess with this, mess

00:34:47.686-->00:34:51.856
with one of those workstations
that are on wheels uh so uh i
think if we can get the

00:34:51.856-->00:34:55.193
facilities to follow the
guidelines and even better
coupled that with the vendor’s

00:34:55.193-->00:35:00.598
having a little bit extra, let’s
just call it 2018 protections I
think that would really help

00:35:00.598-->00:35:05.770
reduce this risk. A few other
things to consider uh with our
research and applying it to the

00:35:05.770-->00:35:10.675
real world is 1 we never
actually modified the bedside
monitor, we only modified the

00:35:10.675-->00:35:16.681
data on the central monitoring
station. Um al-also in order for
this to actually have any real

00:35:16.681-->00:35:21.586
effect the doctor not just to
slap the monitor a few times.
You know the the the information

00:35:21.586-->00:35:24.422
needs to be believable, and the
attacker has to have an
understanding of how this

00:35:24.422-->00:35:28.326
protocol works so this isn’t
something that you know that you
can just fire off in medical

00:35:28.326-->00:35:34.199
school like tomorrow there is a
little bit more to it than that
uh and with that I’d like to

00:35:34.199-->00:35:38.336
wrap up and uh give special
thanks to Doctor Shaun Nordeck
who was willing to come up here

00:35:38.336-->00:35:42.974
an- and present with me today
and I’d like to thank my
coworker Charles for allowing us

00:35:42.974-->00:35:47.579
to make a little bit of fun with
him on the screen from those
earlier pictures. Uh the McAfee

00:35:47.579-->00:35:51.483
production team did a wonderful
job helping me with my demos,
otherwise I would’ve cell phone

00:35:51.483-->00:35:55.754
version of how to record this
thing um and obviously the
support of the rest of my ATR

00:35:55.754-->00:36:00.959
team while doing this research.
Assuming we have a few more
minutes, which I think we do, uh

00:36:00.959-->00:36:05.397
we’re willing to open the floor
to any questions, anything
medically related we’ll pass on

00:36:05.397-->00:36:08.667
to Doctor Nordeck and I’ll be
happy to answer anything as far
as the protocol is concerned.

00:36:08.667-->00:36:13.672
>>[off mic question from
audience member] >>You want me
to do that one? >>You can if you

00:36:25.083-->00:36:32.023
want to >>Yeah so, so the
question was, is can we send
different variations of heart

00:36:32.023-->00:36:36.761
rates in the packets that we’re
sending? And so the information
that we captured was off of an

00:36:36.761-->00:36:43.401
ECG simulator so the 30 to the
180 to even asystole with no
heart rate, that’s all being

00:36:43.401-->00:36:49.240
generated by the uh the um
simulator. So that data was
captured and easily be able to

00:36:49.240-->00:36:54.079
sent in, in that packet. That
packet is what’s actually what
is translating everything, not

00:36:54.079-->00:36:57.682
just the heart rhythm but also
transmit the blood pressure,
everything that that monitor is

00:36:57.682-->00:37:04.189
i- oxygen saturation, the pulse,
all that information is packaged
in that packet, and sent across.

00:37:04.189-->00:37:09.461
So using in advance uh
simulator, such as the ones we
use for our medical training or

00:37:09.461-->00:37:14.532
advanced cardiovascular support
training were all of those
variations are built in low

00:37:14.532-->00:37:19.270
heart ra-, uh low blood
pressure, fast heart rate,
abnormal waveforms you can send

00:37:19.270-->00:37:24.442
that in a packet, and you can
easily capture that from a
simulator and have believable

00:37:24.442-->00:37:29.681
data sent in a packet. Does that
answer the question? >>Short
version, yes. >>Sorry,

00:37:29.681-->00:37:34.686
[chuckles]. >>I’ve got 2, 2
questions in the back there.
>>Well, um I was just asking,

00:37:38.223-->00:37:43.228
trying to figure out if there
was any sure fire way to, uh say
you do have a proprietary linux

00:37:47.765-->00:37:52.770
box on a hos- a single hospital
network but the hospital has
been affected by situations like

00:37:55.406-->00:38:00.345
this in the past, if there is
any advice you could give to us
on how to reassure hospital

00:38:02.947-->00:38:07.952
staff on getting us back our
networks? >>Is there any medical
devices that would reassure a

00:38:12.891-->00:38:19.264
hospital? That there they’re
permitting it back? Or err uhhh
>>Can I, the situ >>Err >>to be

00:38:19.264-->00:38:24.602
a bit more specific in our
situation we had a linux box on
that, was on that hospital

00:38:24.602-->00:38:29.140
networks and they were
compromised and they dealt with
it internally. Part of them

00:38:29.140-->00:38:34.145
doing clean up was kicking us
off their network and now our
system is uh not working at full

00:38:36.581-->00:38:42.420
capacity and if there is nothing
you can give for this I
understand. It’s kinda a oddball

00:38:42.420-->00:38:47.425
question. >>uhh uhh I’m not sure
I understand the- the question
>>From what I’m understanding it

00:38:51.029-->00:38:57.502
sounds like you had a linux box
that got compromised and trying
to find out with the with the

00:38:57.502-->00:39:02.507
way these monitors monitors set
up they broadcast on a general
system. Unfortunately that’s the

00:39:02.507-->00:39:08.613
vulnerability itself, I don’t
think there’s a way without
assigning individual port

00:39:08.613-->00:39:13.618
numbers and and identity
locations to prevent this, and
I’m not the technical guy so I’m

00:39:13.618-->00:39:18.656
going to have to defer >>Er er
>>I’m going to presume that, at
least with some hospitals I’ve

00:39:18.656-->00:39:23.728
worked on in the past, these
monitors they get changed out,
sometimes they take one monitor

00:39:23.728-->00:39:27.198
from the emergency room, and
then we need it the intensive
care unit, and take that monitor

00:39:27.198-->00:39:32.837
back to the emergency room so
they don’t ever assign them a
fixed IP address they uh they

00:39:32.837-->00:39:39.644
are on this general broadcast,
that is a vulnerability in
itself and have to be mitigated

00:39:39.644-->00:39:45.083
through the network setup um a-
>>Do- does that answer your
question? >>Yes, that answers it

00:39:45.083-->00:39:49.220
very good >>Ok, thank you. Sorry
I thought he was asking
something else >>Next up! >>6

00:39:49.220-->00:39:53.024
Excellent research, excellent
presentation sir, so thank you
guys both uh- >>Thank you >>The

00:39:53.024-->00:39:56.127
one question that I had, I
noticed that you mentioned that
you had gotten the devices that

00:39:56.127-->00:40:02.100
you tested off of ebay. And my
immediate thought when you say
that is that these are likely

00:40:02.100-->00:40:05.837
legacy or incompetent devices-
>>Good question >>So the
question that I had was are

00:40:05.837-->00:40:11.876
these representative of the
latest versions running in the
hospitals and if so, what if

00:40:11.876-->00:40:16.514
they’re not, then were you able
to do any research to identify
these clear text protocols are

00:40:16.514-->00:40:20.218
used in the latest versions?
>>First I want to thank you for
asking that, because I meant to

00:40:20.218-->00:40:23.988
mention that and totally forgot-
>>No worries >>[chuckles] so we
can answer that in 2, in in 2

00:40:23.988-->00:40:28.593
parts, I’m gonna let you >>Yeah
honestly these monitors we
tested they are monitors that

00:40:28.593-->00:40:36.167
are in play in multiple
hospitals uhhm and to answer
your question uh is the

00:40:36.167-->00:40:40.471
technology outdated or not. No
this- these these technology
models, they go through minor

00:40:40.471-->00:40:44.942
changes within the new versions
that get released. [cell phone
ping] It’s unlikely that the

00:40:44.942-->00:40:50.782
protocols changed, I can defer
that to Doug but the monitor we
tested as well as a central

00:40:50.782-->00:40:55.286
monitoring station, both of
those are actively used in
multiple hospitals currently.

00:40:55.286-->00:41:00.591
>>Yeah, yeah wh when we
purchased the devices we
verified, uh uh like we didn’t

00:41:00.591-->00:41:04.662
do a national study to figure
out how many are in use, but we
did take the time to verify with

00:41:04.662-->00:41:08.633
a couple local hospitals that
these are devices that they are
using on their network, and

00:41:08.633-->00:41:13.037
Doctor Nordeck confirmed that
he’s seen these devices in in
several hospitals um and as far

00:41:13.037-->00:41:19.110
as being uhh uh an issue with
the current devices I can’t
speak for sure, uh because we

00:41:19.110-->00:41:22.914
didn’t test any current devices
but as my understanding based on
the literature released online

00:41:22.914-->00:41:27.485
that that even though the
medical devices themselves have
been updated the networking

00:41:27.485-->00:41:31.756
protocol has not changed. And so
if the networking protocol has
not changed that would leave me

00:41:31.756-->00:41:35.026
to believe that, you know,
there’s no encryption and
nothing nothing else has been

00:41:35.026-->00:41:43.568
modified. So. >>So thank you
>>Good question. Do we still
have time for a couple more? Go

00:41:43.568-->00:41:54.379
ahead. >>[off mic audience
question] >>Excellent question.
So the question was would based

00:41:54.379-->00:41:59.283
on the quality care would a
physician actually implement a
treatment based off one time

00:41:59.283-->00:42:07.792
period basically you know one
one little um abnormal
variation, just one one blip of

00:42:07.792-->00:42:12.630
a change, one source of data.
So, so that’s an excellent
question, so the question would

00:42:12.630-->00:42:17.001
we do it from one source, so
just what we’re getting from the
central monitoring station. And

00:42:17.001-->00:42:22.073
The uh the answer is not likely,
no. And the reason is because
again I can go and see the

00:42:22.073-->00:42:26.911
patient and I can verify, and
I’m gonna do an EKG, and this it
isn’t going to happen. However I

00:42:26.911-->00:42:32.784
can’t say a 100 percent, no, and
the reason is, is intermittent
cardiac arrhythmias are going to

00:42:32.784-->00:42:37.121
do that, they’re gonna be
intermittent, they’re never
going to see, I may never see

00:42:37.121-->00:42:43.761
that rhythm occur on a 12 EKG
that I order so unfortunately if
this occurs with enough

00:42:43.761-->00:42:48.733
variation and enough times
throughout the course of that
hospital stay of that patient

00:42:48.733-->00:42:54.739
I’m I’m going to be more
inclined to act, now granted I’m
a uh surgical resident, so I’m

00:42:54.739-->00:42:59.777
likely to call cardiology, and
ask for additional input, we may
do some additional testing, like

00:42:59.777-->00:43:05.183
stress testing see if we can
provoke these arrhythmias but
there’s the likelihood is I

00:43:05.183-->00:43:11.389
guess to answer your question is
maybe. I mean uh there’s a high
potential we could treat because

00:43:11.389-->00:43:17.161
there are guidelines that
indicate that you should treat
them. >>Uh uh I think it’s

00:43:17.161-->00:43:21.132
important to mention that you
know administering uh eh
treatment change to the patient

00:43:21.132-->00:43:25.536
is the worst case scenario you
know uh uh uh at a very minimum
what you’re gonna do is cause

00:43:25.536-->00:43:28.706
resour- uhh extra resources
right? Because as the Doc says
he’s gonna order some other

00:43:28.706-->00:43:31.642
tests, well that’s gonna cost
insurance more money, right?
That’s gonna cost time, and at a

00:43:31.642-->00:43:38.116
the very minimum cause extra
resource consumption >>Yeah uh
the the resource consumption is

00:43:38.116-->00:43:45.590
is separate but we have in my
experience, that there has been
instances where we see umm heart

00:43:45.590-->00:43:50.728
rhythms that are occurring
intermittently enough that do
warrant treatment and they would

00:43:50.728-->00:43:55.867
be coming from one source.
Unfortunately in this case,
where the the central monitoring

00:43:55.867-->00:44:00.238
station on that telly box
because we put the patient on on
tel- telemetry anytime they have

00:44:00.238-->00:44:03.741
an abnormal heart rate or we put
them on anti-arrhythmic
medication or altered medical

00:44:03.741-->00:44:08.813
status. That’s an indication to
put them on telemetry. And if
that telemetry that’s being sent

00:44:08.813-->00:44:13.484
back to the central monitoring
station and being recorded at
intervals where they’re having,

00:44:13.484-->00:44:17.722
it depends on how long those
intervals are, whether they’re a
minute, 2 minutes, if they’re

00:44:17.722-->00:44:25.263
occuring once a day or 3 times a
day, it varies. So there’s gonna
be some clinical intuition that

00:44:25.263-->00:44:30.368
will have to be applied to this
and judgement before um a
treatment is going to be

00:44:30.368-->00:44:53.057
enacted. >>Uh la-last question.
We have time for one more. Sir?
>>[off mic audience question]

00:44:53.057-->00:44:56.327
>>Uh huh >>[off mic audience
question] >>So his question is
on those training boxes can you

00:44:56.327-->00:44:59.964
adjust the QTC interval which is
basically the part the big
middle stroke and so the

00:44:59.964-->00:45:06.404
simulator that we bought is very
basic but on advanced simulators
there are ways that you can, it

00:45:06.404-->00:45:11.275
depends on what level of money
you are willing to spend but I
believe- >>We were cheap >>More

00:45:11.275-->00:45:17.114
advanced uh [laughs] yeah our
budget was constrained [laugh]
>>We had a very small budget but

00:45:17.114-->00:45:22.053
there are simulators that you
can adjust different aspects,
the PR interval, the QTC and you

00:45:22.053-->00:45:31.228
can um in QT the ST changes you
can you can adjust different
things on different simulators.

00:45:31.228-->00:00:00.000
>>Ok thank you I think that’s
all we have time for. [audience
applauds and cheers]

