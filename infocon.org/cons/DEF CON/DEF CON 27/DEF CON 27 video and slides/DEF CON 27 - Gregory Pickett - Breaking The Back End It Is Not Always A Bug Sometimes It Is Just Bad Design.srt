00:00:00.000,00:00:05.005
>>Uh so welcome to the last uh
track speaker, here for track 3
for Friday uh we've got uh

00:00:09.610,00:00:14.615
Gregory Pickett uh going into
breaking the back end. So here
we go, Gregory. >> Hi.

00:00:18.385,00:00:23.390
[applause] Alright. Breaking the
back end. DefCon 27, got that
number right, right? Long day.

00:00:25.392,00:00:31.164
My name is uh as you said, I'm
Gregory Pickett with Hellfire
Security with the cybersecurity

00:00:31.164,00:00:36.169
operations groups. Our talk
today, alright, the transit
system our target. Reverse

00:00:41.008,00:00:47.381
engineering, the target.
Alright, the discoveries that I
made reverse engineering it.

00:00:47.381,00:00:52.619
Then of course the exploit, that
I developed, with what I
discovered. And of course,

00:00:52.619,00:00:58.525
lessons to be learned. Always
lessons. Without the lessons,
what's the point, right?

00:00:58.525,00:01:03.463
Alright, how is this different?
We're not sneaking in the
station, we're not hacking the

00:01:06.033,00:01:11.338
terminals. We aren't socially
engineering anyone or hacking
the wire to a wireless network.

00:01:11.338,00:01:16.343
It's not about the hardware.
We're not going to be breaking
any encryption. We're not going

00:01:18.712,00:01:23.717
to be cloning magstripes or NFC
cards. Instead this is about
flaws in application logic.

00:01:28.322,00:01:34.928
There is some cloning involved,
but it is not vulnerability
exploited. Instead we're using

00:01:34.928,00:01:39.933
AppSec to attack a complex
multilayered, real-world
solution. Okay. Our target, the

00:01:45.739,00:01:50.978
elevated train is the Bangkok
mass transit system. That's the
elevated uh train in Bangkok,

00:01:50.978,00:01:57.317
Thailand. Serves the greater
Bangkok area. Think about the
time I started this, 43

00:01:57.317,00:02:04.191
stations. Uh 2 lines but I
believe there are more now and
actually more being added uh as

00:02:04.191,00:02:09.196
we speak. That transit uses uh 2
different types of tickets.
Stored-Value card, using NFC.

00:02:15.702,00:02:20.707
And then a single pass journey
using a magstripe. Uh let's see.
Magstripe that we're gonna look

00:02:23.543,00:02:29.249
at. Those uh tickets have 2
magstripes, there's a hole
through one of the magstripes.

00:02:29.249,00:02:34.254
And it is only zero point 27
millimeters thick. Uh picture
there. At the top is the single

00:02:40.761,00:02:46.900
journey ticket. The bottom is
the all-day pass. You can mouse
over there, you can see the

00:02:46.900,00:02:51.905
little hole right there. Okay.
See how thin it is. You are not
going to be opening up a catalog

00:02:57.944,00:03:02.883
and ordering it, you're going to
be able to go down to the store
and ask for it. Alright. Course

00:03:05.252,00:03:09.623
the first thing you're gonna do
is read it. Alright, the
equipment there. Standard

00:03:09.623,00:03:14.561
reader/writer manufactured in
China before the tariff, so not
quite as expensive as it could

00:03:14.561,00:03:20.901
have been. Standards are raw
read so I would tell you, of
course, take the data and then

00:03:20.901,00:03:27.007
decode it according to uh
standards or just dump the data
in a raw read. Errors are rare.

00:03:27.007,00:03:32.112
It's able to handle that hole,
which I originally thought was a
1980s style copy protection. If

00:03:32.112,00:03:36.817
you're familiar with that uh
they used to damage a sector n
the discs so if you attempted to

00:03:36.817,00:03:41.388
copy an area, and error out and
of course you then couldn't copy
it and pass on the copy to a

00:03:41.388,00:03:46.993
friend. Turns out the hole is
just to make sure that the
ticket is properly aligned.

00:03:46.993,00:03:51.098
Alright. Turned up the right
direction and facing the other
right direction so it would be

00:03:51.098,00:03:56.103
going to the feeder properly.
And then there's reliable
performance. They're gonna start

00:03:56.103,00:04:00.107
analyzing any data you wanna
make sure the data is reliable
or otherwise you can't really

00:04:00.107,00:04:05.112
perform any analysis that way.
It's not reliable. First thing
you do is sit down in a lab and

00:04:07.247,00:04:11.885
you attempt to decode this
according to standards. Using uh
the international organization

00:04:11.885,00:04:16.590
for standardization. Uh there's
lot there actually, but it boils
down to 6 bit and 4 bit

00:04:16.590,00:04:22.028
characters, some with parity and
some without. I have attempted
to code this both forwards and

00:04:22.028,00:04:27.434
backwards. I am uh a
perfectionist uh somewhat anal
retentive I think is the term I

00:04:27.434,00:04:32.305
used to use . So I'm going over
and over again to make sure that
isn't wasn't the software making

00:04:32.305,00:04:37.010
a mistake, but I'm not making a
mistakes 'cause I would do it
with the software and also would

00:04:37.010,00:04:42.716
do it manually. So I finally
decided after doing this again
and again and again that it

00:04:42.716,00:04:47.053
wasn't using the standards. And
um maybe it's not encoded at
all, alright. Maybe it's just

00:04:47.053,00:04:52.058
raw data. So we'll see. Okay. So
I'm looking at the data, it's
not encrypted. There are

00:04:55.162,00:04:59.833
sections that repeat. If it's
repeating, it's not encrypted.
No parity checks. If you break

00:04:59.833,00:05:03.770
up the bits, you count that
parity and then you check the
ticket to see if it's

00:05:03.770,00:05:08.775
represented that way there on
the ticket. It's not. So now uh
no CRCS, no LRCs, and no time

00:05:11.144,00:05:17.284
stamps. If you buy a ticket and
you wait 10 seconds, nothing
increments by 10. So after this,

00:05:17.284,00:05:22.289
I think we can say it's just raw
data. But what does that data
mean, alright? Uh it's the field

00:05:24.391,00:05:29.863
work. You run that ticket to the
system, you vary the input each
time, and then you're gonna see

00:05:29.863,00:05:34.000
how the data changes. It's
gonna, you know, use those
changes to identify the meaning.

00:05:34.000,00:05:39.005
Okay. And before you do that
analysis you want to try to
reduce your workload, alright?

00:05:43.243,00:05:48.114
The less work you have to do the
better. So I talked about
duplication or duplicated

00:05:48.114,00:05:52.419
sections. The yellow sections up
there were essentially
duplicated. Didn't need to look

00:05:52.419,00:05:57.424
at them, then you just dump them
out. There's sections that uh
had utilitarian use. This data

00:05:59.859,00:06:05.732
actually sits in zeroes.
Alright. It gives the uh ticket
a chance to line up properly in

00:06:05.732,00:06:09.536
the reader, alright. So there's
basically a delay with those
zeroes. Well, that's a start

00:06:09.536,00:06:15.375
sentinel. It functions as a
start sentinel. It's a single
bit saying data is now coming.

00:06:15.375,00:06:19.412
So I don't really need to
analyze that. Knew it just
looking at it. That's another

00:06:19.412,00:06:24.618
benefit of going over the data
again and again earlier is that
you have some insights later on.

00:06:24.618,00:06:29.623
The 7826 which is the red uh.
You can't see that probably very
well. I was buying tickets and

00:06:33.627,00:06:37.897
taking a look at them. I would
have a one particular value for
the single journey and then I

00:06:37.897,00:06:42.602
have a different value for the
all-day pass, so quite obvious
at that point in time that

00:06:42.602,00:06:47.607
that's a ticket type. This here,
this little, this two little uh
these 2 nibbles there ended up

00:06:51.645,00:06:56.816
being a 100 plus the ticket
price. So all that jumped out at
me, I don't really need to do

00:06:56.816,00:07:01.788
any deeper analysis on that.
That leaves me with 4 sections.
This one here, this one here,

00:07:01.788,00:07:06.793
this one here, and this one
here. So it's a lot less work.
Now each of these of course is

00:07:09.496,00:07:13.199
different from ticket to ticket.
It's important to note also that
this here, and you probably

00:07:13.199,00:07:17.771
can't tell that, but it's blue.
Uh that actually changes as the
ticket is used, as it goes

00:07:17.771,00:07:22.776
through the system. Okay.
Alright, so after I observed
those changes, this is what I

00:07:26.313,00:07:31.318
found. Each ticket has a GUID
associated with it. And the
location. Initially it's in a

00:07:33.853,00:07:39.526
dispenser. And it's a GUID
associated with its arrival
there. When the ticket moves,

00:07:39.526,00:07:45.865
the location is updated to a
turnstile. There it is. Uh and
GUID associated with its arrival

00:07:45.865,00:07:50.870
there. When the ticket moves it
also changes state. Goes from
issued to used to collected.

00:07:56.443,00:08:00.613
When you buy it, it comes out of
that dispenser, it's in the
issued state. You go and use it

00:08:00.613,00:08:05.618
to enter, it goes through the
turnstile, now in the used
state. Then when you exit,

00:08:08.121,00:08:11.791
alright, it gets captured by the
turnstile, and it's then in the
collected state. Okay. There's

00:08:11.791,00:08:13.793
also some handling rules. To
enter, the ticket must have
previously been in the collected

00:08:13.793,00:08:15.795
state. Meaning it was just
sitting in a turnstile
somewhere. Previous uncollected

00:08:15.795,00:08:17.797
state, coming out of the
dispenser now currently in
issued state. Alright, that's

00:08:17.797,00:08:20.233
what the object uh was, where it
was and where it is now. Then of
course you can use it to enter.

00:08:20.233,00:08:25.238
To exit, the ticket must now be
in the used state. Okay. So
gonna look to exploit this

00:08:49.529,00:08:56.302
system. Gonna cover briefly, you
know, what we've learned so far.
Kind of summarize everything up.

00:08:56.302,00:09:01.474
Talk about uh system safeguards
that become evident as you
examine the system. The

00:09:01.474,00:09:06.079
assumptions that they must have
had uh when putting together the
safeguards. And then we'll talk

00:09:06.079,00:09:11.384
about attacks against their uh
assumptions. And then of course,
obviously, this is why I'm here,

00:09:11.384,00:09:18.158
there was an epic fail there. We
don't have regular fails here at
DefCon, we have epic fails.

00:09:18.158,00:09:23.263
Alright, so uh what we've
learned so far. It's an
object-based system. It has a

00:09:23.263,00:09:29.769
physical object and a database
object. We know this one because
uh, well I, primarily you go

00:09:29.769,00:09:34.374
ahead and try to modify any of
the data on the ticket, and the
little screen at the turnstile

00:09:34.374,00:09:37.710
says, go to the office. It's
like, you know, school. You do
something wrong and you go to

00:09:37.710,00:09:43.850
the office. Uh now I knew there
was a database representation.
Alright, a database object

00:09:43.850,00:09:47.120
because there was no integrity
checking on that ticket so there
had to be an external reference

00:09:47.120,00:09:51.424
and it's typically a database.
And each of these objects,
alright, whether it's physical

00:09:51.424,00:09:56.563
object, whether a database
object, has properties. There's
identification. There's a type

00:09:56.563,00:10:03.002
of value and a location. So
actually rather different uh
than most systems or transaction

00:10:03.002,00:10:08.708
base. This is more of an object
base. Okay. Alright and this
object also has states. Issued,

00:10:08.708,00:10:13.713
used, collected, and a history.
Alright. Now there's some system
safeguards that become evident.

00:10:17.684,00:10:23.022
Ticket composition and ticket
design. There was mirrored
physical object and a database

00:10:23.022,00:10:29.996
object. There were handling
rules and there's life cycle,
alright. It was only good for 24

00:10:29.996,00:10:35.001
hours, basically. And this
ticket will be collected after
you've used it, alright. There's

00:10:37.904,00:10:44.711
assumptions using these
particular safeguards is that no
one, right, no one will be able

00:10:44.711,00:10:49.716
to reproduce their ticket. And
their system has the only valid
objects, alright. Handler rules

00:10:53.253,00:10:57.824
will prevent concurrent use. I
can't hand this to my buddy,
alright. I go through and then

00:10:57.824,00:11:03.563
hand it back to someone. No one
can do that. At least that was
their assumption. Uh damage is

00:11:03.563,00:11:09.135
limited to life cycle, right? So
if somehow someone is able to
bypass these safeguards, well

00:11:09.135,00:11:15.508
what damage could they do in 24
hours? And finally after use,
the ticket will be in their

00:11:15.508,00:11:20.513
possession, right? You have in
your possession, now you feel
safe. Attacks against those

00:11:23.049,00:11:28.955
assumptions. First one, right,
acquire a suitable ticket. They
say, or they believe, that they,

00:11:28.955,00:11:33.059
no one else can make these
tickets. Let's find out if
that's true. Capture a valid

00:11:33.059,00:11:39.299
object. Bypass those handling
rules, and then uh extend the
attack to increase the damage.

00:11:39.299,00:11:44.304
Right. Get beyond that 24-hour,
it's probably a little shorter
than that, window. Okay. It was

00:11:46.439,00:11:51.544
indeed an epic fail there. I did
find someone to make blank
tickets. It took me a really

00:11:51.544,00:11:55.982
long time. Most companies said
you couldn't do it. But I was
persistent. Uh I also had

00:11:55.982,00:12:01.120
Alibaba. Anyone out here ever
use Alibaba? Familiar with it?
Yeah it's great, right? Um and

00:12:01.120,00:12:06.125
then I did copy a s**t ton, hmm,
of the objects, and I feel
comfortable enough to say that

00:12:08.361,00:12:12.365
here, s**t ton. Um in the issued
state, and I just found a flaw
in the handling rules. Alright?

00:12:12.365,00:12:19.005
What I found was the collected
state found in a current
lifestyle overrides all other

00:12:19.005,00:12:24.010
states, alright. So the object
is always seen as recently
collected. You run that virtual

00:12:26.446,00:12:32.986
ticket through, that recently uh
that recently collected, it's
stuck in there. So it doesn't

00:12:32.986,00:12:35.455
matter if you have all these
other tickets currently in use,
it doesn't see that, doesn't see

00:12:35.455,00:12:39.092
that it has a previous state,
doesn't see that there's
concurrency going on. It just

00:12:39.092,00:12:44.063
sees that one collected. You're
stuck in there until any of
these other copies that you use

00:12:44.063,00:12:50.470
out there they're all valid.
Alright. And I'll demonstrate
that. It's really simply. It's a

00:12:50.470,00:12:56.242
very simple attack. Um just have
to look at it, and but it's very
effective, alright. So in normal

00:12:56.242,00:13:01.080
circumstances, if there's
concurrency, other you know
multiple tickets or copies being

00:13:01.080,00:13:06.085
used, you attempt to use one of
them and it's just seen one. In
the uh in the used state, so now

00:13:09.055,00:13:14.627
it sees it in the issued state
and it says nope it does not
follow my handling rules. So

00:13:14.627,00:13:19.632
none of the copies would work.
Okay. But if you let it run
through, alright. Now just hand

00:13:21.934,00:13:26.939
it back to your buddy, let it go
all the way through and every
single copy then becomes valid.

00:13:30.309,00:13:35.548
It doesn't see concurrency.
Right. You could have 3 tickets,
4 tickets, 5 tickets, all the

00:13:35.548,00:13:40.186
same ones, it doesn't see that.
It doesn't see that they're
being used at it right now. It

00:13:40.186,00:13:44.624
just sees that 1, I was
previously collected and now I'm
issued and fine, go ahead and go

00:13:44.624,00:13:50.963
through. So 1, 2, 3, 5, 20, it
doesn't matter. It'll let all
these people go through with the

00:13:50.963,00:13:56.102
same ticket, okay. Of course you
can't just say this. You have to
have some data that backs it up.

00:13:56.102,00:14:01.040
And I'll have a video here in
just a second. Alright so we
have at the top there, this is

00:14:04.944,00:14:10.650
all the same ticket, alright.
This is an original and 2
copies. Have all the same GUID.

00:14:10.650,00:14:15.288
Coming out of the same dispenser
and at the very same instant
because it's the same ticket. So

00:14:15.288,00:14:19.992
it's got the same GUID and you
can see it's actually used 3
separate times. It's very hard

00:14:19.992,00:14:24.797
to make that out right, it's
very small hex letters. But you
can at least uh see that it's

00:14:24.797,00:14:29.535
different. So we have the same
ticket being used 3 separate
times, 3 separate turnstiles,

00:14:29.535,00:14:34.340
and actually I believe in one
instance, different uh station
altogether, with different

00:14:34.340,00:14:38.511
GUIDs. And same thing here for
these all-day passes. It's
actually the same all-day pass.

00:14:38.511,00:14:44.217
It's used 2 separate times in 2
separate stations and do it with
2 separate turnstiles, and uh 2

00:14:44.217,00:14:49.222
separate instances of the GUIDs.
And a video. Have it get it over
there though. I had, it's only

00:15:07.039,00:15:11.844
20 minutes. Uh originally it was
a 45-minute talk and there was a
lot more about Thailand uh this

00:15:11.844,00:15:18.017
was where the research was done,
obviously, in Bangkok. Uh they
are currently, they were at the

00:15:18.017,00:15:24.190
time and they're currently uh
currently still, okay get the
button there, uh run, the

00:15:24.190,00:15:30.730
country's run by junta, a
military dictatorship, guys in
machine guns uh with, you know,

00:15:30.730,00:15:35.735
no questions asked, you wanna be
arrested, okay, disappear. Um so
I was a bit skittish. We have an

00:15:38.771,00:15:43.776
error message? I can't really
see that. Let me have a few
minutes. Let me go and drag this

00:15:55.421,00:16:00.359
back over here. We can't.
Alright, I have no idea where
that's at. Do you guys know

00:16:18.477,00:16:23.482
where this stuff's at? We're
good on time, so, you know, we
can make mistakes. >>Um >>It

00:16:34.327,00:16:39.332
didn't bring it up, it just. We
can't play it, it's too bad
because most um most of it's my

00:16:46.072,00:16:51.077
feet. >>Supposed to be right
here? >>Yeah. Okay, let me pause
that. Yes, there's a lot of the

00:16:58.618,00:17:03.556
ground and my feet. See it here.
Hmm, there we go. Great sandals,
right? Here we are. So yes uh at

00:17:23.042,00:17:29.515
the time this research was done,
oh I forgot about the audio.
Junta was in charge, guys with

00:17:29.515,00:17:34.520
machine guns, so I was a little
worried I could be disappeared.
Um as I found, it's white men,

00:17:36.923,00:17:41.928
white guy uh in Thai. Lots of
privileges but no rights. Which
means, and you combine that with

00:17:43.930,00:17:48.935
junta, yeah it's quite easy, it
would be easy for them to make
me disappear. You'll see, here

00:17:50.970,00:17:56.709
we go, obviously not a genuine
ticket. Uh there we go. As I
said, that was mostly my feet

00:17:56.709,00:18:02.214
'cause I was worried about being
put in jail, disappeared. Uh so
I kept the phone by my side, as

00:18:02.214,00:18:06.819
you can tell. Um and then of
course, when it was time for the
money shot I pulled that up and

00:18:06.819,00:18:12.692
then and then see if you guys,
if anybody could uh see that
it's not a genuine ticket. It

00:18:12.692,00:18:19.131
was in fact a counterfeit, okay.
Um and you could run around with
5 of these, 10 of these, 20 of

00:18:19.131,00:18:24.136
these, it really um the system
would let all of them through at
that point. Okay. Alright, so

00:18:27.740,00:18:32.745
that was fun, right? Um but to
turn this into an exploit,
alright. From an exploit to an

00:18:40.720,00:18:46.759
attack, you have to have those
blank tickets and you have to
have a plan. Because we actually

00:18:46.759,00:18:52.999
have one more safeguard, right?
Get beyond that 24 hours. So I
did find someone, as I said, to

00:18:52.999,00:18:58.838
make these tickets. Took a long
time, many many months uh with
vendors, talking to them, trying

00:18:58.838,00:19:04.577
to get them to understand what I
wanted. And then try to get them
past, the no we can't make it.

00:19:04.577,00:19:09.582
So there are the tickets there.
So the plan is buy all day pass,
copy that ticket, and you're

00:19:14.086,00:19:18.557
gonna go ahead and then use the
original. Put that in that
state. And you have the copies,

00:19:18.557,00:19:25.197
have fun. Now you can do that
yourself, you can do that with
your friend and your pastor,

00:19:25.197,00:19:31.437
your monk, whatever, everyone
can ride, but they're actually,
it can turn into something more.

00:19:31.437,00:19:35.341
Uh, you can go beyond just a
couple of your friends there.
You know, 5 of ya. You can go

00:19:35.341,00:19:41.547
ahead, instead, make 10 or 20,
or a thousand. First uh time you
run the attack, it's about 3

00:19:41.547,00:19:46.719
dollars for the all-day pass.
You're buying your blanks for
about a 100 dollars. Um so a 105

00:19:46.719,00:19:52.558
dollars to do damage to the
[inaudible] organization of
about 5 thousand dollars. Lasts

00:19:52.558,00:19:55.694
the first day, but they're
all-day passes. You get to keep
the all-day pass. It actually,

00:19:55.694,00:20:00.366
you have to use it all day,
right? Well just keep it with
you at the end of your day,

00:20:00.366,00:20:06.138
don't bring it back. Um end your
day a little early and so you
use it again the next day so

00:20:06.138,00:20:11.677
each day of the attack is about
3 dollars to do about 5 thousand
dollars worth of damage. And you

00:20:11.677,00:20:18.050
can of course do that a whole
lot more. Uh if you're going uh
I hate to say cyber warfare but

00:20:18.050,00:20:22.988
if documenting undermining a
country, start making uh their
infrastructure unreliable.

00:20:22.988,00:20:29.295
Alright, reducing trust, trust
in these sorts of uh things that
people rely on. You could just

00:20:29.295,00:20:33.766
do this with a group of people,
you could do this over years,
you can very cheaply, do you

00:20:33.766,00:20:38.070
know uh 3 dollars every day
right, end up doing 8 million
dollars worth of damage. You

00:20:38.070,00:20:43.275
undermine their operations, and
you start looking at um really
hurting the company to the point

00:20:43.275,00:20:48.047
where they can't make their
repairs they need to make, where
the system becomes unreliable.

00:20:48.047,00:20:52.051
Um you could do the opposite.
You turn it into a PR nightmare
where you decide to go out with

00:20:52.051,00:20:55.855
10 thousand of these things and
start handing them out. And
mean, and after that, the system

00:20:55.855,00:20:59.425
shuts down because they have to
stop everyone to take a look at
their tickets. People can't get

00:20:59.425,00:21:04.363
to work, um it's a huge PR
nightmare to do it that way. So
a lot can be done with this. So

00:21:11.871,00:21:16.208
yes, you can extend the attack
beyond those, the 24-hour
window. You can do a lot more

00:21:16.208,00:21:21.213
damage that you think, that you
realize you can do. Okay. So
obviously, to avoid their fate,

00:21:24.650,00:21:30.089
test all layers of the solution.
Not just hardware despite, that
the fact that's your

00:21:30.089,00:21:33.692
interaction, alright bypassing
this ticket through a hardware
system. It's not just hardware,

00:21:33.692,00:21:36.962
there's software in there
somewhere. So you're gonna have
to at some point in time, test

00:21:36.962,00:21:41.967
for application solutions. And
more importantly, check your
assumptions. I suspect that many

00:21:44.236,00:21:49.708
years ago, when this was first
implemented, the assumptions
were mostly true. Mostly. Um but

00:21:49.708,00:21:53.913
things have changed and so you
have to check, that's why I
think, you know, good idea,

00:21:53.913,00:21:57.249
right? Do a pen test every
single year. Do some sort of
assessment every single year to

00:21:57.249,00:22:01.320
make sure your assumptions are
still valid. Okay. And then
compensating and mitigating

00:22:01.320,00:22:05.791
controls. I did this on and off.
I spent a lot of time in Asia. I
was doing this on and off for

00:22:05.791,00:22:12.064
two years. Alright. I think that
they were watching, if they had
any sort of monitoring going on,

00:22:12.064,00:22:16.235
they would have noticed. They
would have found the problem,
they would have resolved it.

00:22:16.235,00:22:20.239
Since they didn't, they must not
do any sort of monitoring, any
sort of oversight of their own

00:22:20.239,00:22:25.311
enterprise, their own system,
right? And it's a very bad, bad
idea. As we all know, people

00:22:25.311,00:22:31.250
eventually get in, so we have to
be ready when that, when they
do. Okay. So that's obvious that

00:22:31.250,00:22:34.620
they were not using
compensating, mitigating
control, so it's important that

00:22:34.620,00:22:39.625
we as practitioners, recommend
and do so ourselves. Don't end
up like them. And then links. I

00:22:42.595,00:22:48.000
do this lots of information and
that you can learn about from
the hardware. I use the

00:22:48.000,00:22:54.707
standards involved in uh, I
don't think I have it with me.
But uh I do. So you know, the

00:22:54.707,00:23:00.379
hardware involved. Um the
different talks prior to this
section, all that got cut was

00:23:00.379,00:23:06.185
the talks, these other talks,
other ways to looking at the
transit systems and attack them.

00:23:06.185,00:23:11.690
Um there is information about
our friends at the BTS, right?
Um and I say it's important to

00:23:11.690,00:23:16.929
look at these sort of things
because this was actually what I
got today from, still using

00:23:16.929,00:23:20.566
magstripe Lots of places are
using magstripe. So learn about
it. Look at other magstripes

00:23:20.566,00:23:25.571
that are out there. This came
from, does anyone recognize it?
Monorail, right. Um I wanna what

00:23:28.807,00:23:34.914
this is on this,right? What's, I
wanna look at this. Um, I'm
tempted to just to start carting

00:23:34.914,00:23:40.853
my magstripe reader everywhere I
go. Um just because you're done
seeing all these things. Um

00:23:40.853,00:23:44.323
there's lots of opportunities.
That is the talk. That's
everything. I think I'm out,

00:23:44.323,00:23:49.328
over early, right? Yeah. Any?
Yeah [applause]

