00:00:00.033,00:00:05.205
>>Without further ado, let’s,
you wanna get started? >>Sure.
>>Alright. Take. >>Well, thank

00:00:05.205,00:00:08.675
you for coming to my talk. I
appreciate it. I was kind of
worried there would only be like

00:00:08.675,00:00:10.677
two people, so I’m- I’m really
happy that there’s at least 20
people. [laughter] So yeah, um,

00:00:10.677,00:00:15.682
who am I? Alright, so my name is
Bill. If you didn’t know that.
Uh I turned 18 this past July.

00:00:25.058,00:00:30.063
Uh I love breaking applications
um, I graduated in uh from high
school back in June and I’ll be

00:00:32.165,00:00:37.170
attending RIT this fall.
[applause/audience cheering] So
what’s my research about. Um so

00:00:42.376,00:00:47.114
over the past 3 years in high
school I’ve really wanted to
look at my uh the different

00:00:47.114,00:00:53.053
software that my school uses. Uh
just because I think that it’s a
very valuable learning lesson.

00:00:53.053,00:00:57.357
Um and I’ve thought it was a
really fun way of learning
different aspects of web

00:00:57.357,00:01:02.296
application testing. By testing
it on a real target like my own
grading system. [laughter] Uh

00:01:05.499,00:01:10.504
yeah so I I kind of found um
more than I expected. That
wasn’t great. Uh so yeah, let’s

00:01:12.940,00:01:17.711
quickly go over the different
types of software I researched.
Uh the first piece of software I

00:01:17.711,00:01:23.817
researched, was the Follett
Student Information System. Uh
but this usually goes by Aspen.

00:01:23.817,00:01:28.989
Um, my school specifically used
them for you know grading,
schedules, transcripts, pretty

00:01:28.989,00:01:34.461
much everything that my school
needed to use a school uh
software for. Um and my research

00:01:34.461,00:01:39.766
into Follett Corporation was
primarily done, you know, maybe
a little bit in 9th grade, but

00:01:39.766,00:01:44.771
mostly in 10th, 11th and 12th
grade. Uh here’s a map of
Follett. Um and spec- espec-

00:01:48.008,00:01:53.914
specifically these schools that
were uh that were impacted by
any vulnerabilities I found. Uh

00:01:53.914,00:01:58.618
so they primarily you know have
a lot of schools in
Massachusetts and Rhode Island

00:01:58.618,00:02:03.223
um, but they did have a few
other schools uh in the United
States. I just didn’t think it

00:02:03.223,00:02:08.228
was um worth you know pulling up
an entire map, um just because
there’s so few. So uh the second

00:02:10.964,00:02:15.535
piece of software I researched
was blackboard community
engagement uh and so it was

00:02:15.535,00:02:20.540
advertised of being capable of
delivering news, academics,
lunch balances, athletic

00:02:20.540,00:02:26.079
details. Uh our school only used
the notifications portions of
the software, but I knew pretty

00:02:26.079,00:02:31.451
fast after some basic research
that other schools, you know,
they used the entire suite. Of

00:02:31.451,00:02:37.624
capabilities. Uh and the
research into Blackboard was
done in two parts. Uh first

00:02:37.624,00:02:42.629
during 2017 to 2018 and then
again near the end of 2018. So
blackboard does have a so called

00:02:46.533,00:02:51.538
bug bounty, um, where you can
they provide some sort of safe
harbour uh for reporters. Um,

00:02:54.074,00:02:59.079
but this didn’t really workout
as expected. Uh, so here is a
map of the Blackboard schools.

00:03:04.518,00:03:09.756
Um, this might not look as much
as Follett, but it definitely
is, I think it’s about 10 times

00:03:09.756,00:03:16.296
the schools uh Follett Aspen
had. So it’s pretty it’s pretty
prevalent in the United States.

00:03:16.296,00:03:20.534
Uh there were some schools
internationally, but it was
again only a few so, it wasn’t

00:03:20.534,00:03:25.539
worth putting them into map. So
to start off with um it starts
with Aspen, you know Follett

00:03:29.209,00:03:34.681
Student Information System. Uh
so for most users to applied
parameters uh Aspen filters them

00:03:34.681,00:03:39.286
for malicious input. Uh the
filter took the approach of
sanitizing and removing

00:03:39.286,00:03:45.192
malicious input rather than just
dropping the request as a whole.
Um, so what would happen is if

00:03:45.192,00:03:51.498
you gave it a malicious payload,
it would reflect back, um, the
payload stripped, uh of any you

00:03:51.498,00:03:56.736
know malicious components for
example a script tag. Uh and
then this was an interesting

00:03:56.736,00:04:00.607
opportunity because if we could
find a way to bypass the filter
since the request still goes

00:04:00.607,00:04:07.280
through, um it would allow us
maybe to do some attacks. Uh,
yeah, so it had a very big flaw

00:04:07.280,00:04:13.453
by design. So if you took you
know a basic string like script
prompt Hello world, uh Aspec

00:04:13.453,00:04:18.892
removed removed the script tags
because they black listed those.
And just print out prompt Hello

00:04:18.892,00:04:24.231
world. Uh, but the flaw was that
they only did this you know,
sanitizing run once. So what

00:04:24.231,00:04:29.903
would happen is, if I included a
black listed tag inside of a
script tag and then you know did

00:04:29.903,00:04:34.341
prompt, Hello World and did the
same thing with the end script,
it would actually reflect back

00:04:34.341,00:04:40.514
as script prompt Hello World.
This was a pretty simple
vulnerability, I mean, cross

00:04:40.514,00:04:45.252
site scripting vulnerabilities
are found you know all the time.
Uh the interesting part about

00:04:45.252,00:04:51.091
this one, was that this filter
was used throughout the entire
site. Uh so if for example, if

00:04:51.091,00:04:56.062
you were able to bypass your
little filter, you could pretty
much reflect any XSS payload

00:04:56.062,00:05:01.835
into a significant amount of
parameters that were reflected
into response. Uh, but also it

00:05:01.835,00:05:06.940
was because this was like my
first ever vulnerability in my
school’s grading system. And so

00:05:06.940,00:05:11.945
it was really motivating to me
to you know after finding one i-
really encouraged me to look

00:05:11.945,00:05:17.551
more, because it just felt like,
you know at when I was first
charting, I I would never be

00:05:17.551,00:05:21.121
able able to find s- a flaw and
someone you know with a
Bachelors degree in sci-

00:05:21.121,00:05:27.494
computer software uh- computer
science. Uh it just you know I
kind of felt hopeless. But then

00:05:27.494,00:05:31.598
after finding one it really made
me motivated that hey, if
there’s one mistake, maybe

00:05:31.598,00:05:37.804
there’s more. So the next
vulnerability was improper
access control. Um Aspen runs on

00:05:37.804,00:05:42.809
a spring framework. On Java and
so for those uninitiated um,
there it- Java Spring Framework

00:05:45.478,00:05:50.383
has these things called beans.
Uh from I interpreted it- it to
be it seemed like there were

00:05:50.383,00:05:56.723
structs or classes. Um, but for
example, you know students have
their own bean. And there is

00:05:56.723,00:06:01.661
instances of that bean um, so in
Aspen, a student bean has a name
of sisStudent and I think this

00:06:04.664,00:06:11.037
stands for student information
system. Uh, student. But the
issue again was that they had a

00:06:11.037,00:06:17.444
security design flaw. Uh so they
had a servlet called blobedit
dot do. And this servlet was

00:06:17.444,00:06:21.581
available for any logged in
user, so including students, so
you know, I was able to access

00:06:21.581,00:06:26.319
myself. Uh it took in three
parameters, it had a read only,
whether or not you wanted to

00:06:26.319,00:06:32.325
edit the blob. Uh it had an
object ID specifier where you
specify an object. Uh that you

00:06:32.325,00:06:36.930
wanted to get the property from.
And then propertyasstring is the
property name you actually

00:06:36.930,00:06:43.169
wanted to get. Um and so what
would happen is when you um, you
know access this blobedit, with

00:06:43.169,00:06:48.808
for example a sisstudent bean,
uh you could read properties of
that bean. And you could do this

00:06:48.808,00:06:53.813
for other uh, bean instances as
well. So when reading another
student’s uh bean instance, I

00:06:56.216,00:07:01.187
was expected to c- be greeted by
this insufficient privileges
exception, uh I saw before you

00:07:01.187,00:07:05.158
know when I was trying to do an
action, that I probably
shouldn’t be doing. It would uh

00:07:05.158,00:07:10.063
just raise this exception
saying, by the way, Bill, you
you can’t do this. Uh, but when

00:07:10.063,00:07:15.235
I tried it on, you know, my
friend’s bean instance I was, I
was saw that I actually could

00:07:15.235,00:07:20.707
access his properties, you know,
the properties of his bean. And
so after doing some

00:07:20.707,00:07:26.212
investigating, I found out that,
I can edit and write to my own
objects. You know objects I own.

00:07:26.212,00:07:31.751
And that I can read the
properties of any other object.
Um especially any other student

00:07:31.751,00:07:36.756
object. So most of the
properties of the SisStudent
being um were incremental in the

00:07:39.526,00:07:44.531
form of like Std field it would
be A through D and then a number
between zero to 110. Uh and so

00:07:46.566,00:07:52.405
this made it really easy to just
write a simple utility to dump
all the fields. Uh of a bean. Uh

00:07:52.405,00:07:58.211
especially a student bean. Um
and the key thing is to remember
is that if I had someones’s

00:07:58.211,00:08:04.484
student object ID, I could get
all these properties and these
student object IDs were um, they

00:08:04.484,00:08:09.956
were easily brute forceable. You
know it’s like, I actually
predicted, like it it’s very um,

00:08:09.956,00:08:14.961
it my personal student ID was
bean ID was std and then 7 0s
and then it was just NTASN. Uh

00:08:18.164,00:08:23.870
but you know the unique part of
that was only the NTASN, which
is 5 characters. So it wouldn’t

00:08:23.870,00:08:30.577
be that difficult to predict
someone else’s um, student ID um
student object ID either. But

00:08:30.577,00:08:36.716
um, you know I was able to
access plain text passwords. Um,
my uh birth city, birth country

00:08:36.716,00:08:41.154
whether or not I can speak
English, whether or not my
family was in the military.

00:08:41.154,00:08:45.859
Whether or not I had like
financial problems and I needed,
you know, assistance with lunch,

00:08:45.859,00:08:52.098
whe- whether or not I was
suspended. Um, my special
education status, my GPA. Uh the

00:08:52.098,00:08:56.870
funny part was that I could
actually a for my own objects,
like I said, I can edit it, so

00:08:56.870,00:09:01.808
like I can edit my own weighted
GPA. Which was pretty cool.
[laughter] And um, so the next

00:09:04.711,00:09:09.849
vulnerability was external XML
entity inclusion. Uh so there’s
another servlet they called

00:09:09.849,00:09:14.654
student recent activity dot do.
And it took in a parameter
called preferences. Now

00:09:14.654,00:09:20.960
preferences for some reason were
supplied with xml. Um, I don’t
know why they did that. But a

00:09:20.960,00:09:25.231
basically you know there’s be a
preference set that that would
be passed in and different

00:09:25.231,00:09:29.302
preferences you wanted to
update. Uh for example one of
them was a date range and it was

00:09:29.302,00:09:34.307
an integer, um, and you’d pass
in you, the date range you want
to see recent activity for. Um,

00:09:37.210,00:09:43.383
and Aspen did use Java’s
SAXParser to parse it. But the
issue was that um, they didn’t

00:09:43.383,00:09:48.221
again, they had a flaw by
design. Uh so in a secure
system, the SAXParser would

00:09:48.221,00:09:53.226
actually da- not allow da- da-
document types or you know XML,
external entities. Uh, but the

00:09:55.361,00:10:00.366
Follett Corporation forgot to do
so. So I was able to send my own
XML payload, where I could you

00:10:02.402,00:10:07.907
know, grab file content from a
system, you know, file path, I
could say like file colon slash,

00:10:07.907,00:10:12.912
slash, slash ATC slash password.
Um, and it would reflect back in
the date range um, what I’d be

00:10:14.948,00:10:20.920
setting for the date range
preference. Uh, so Aspen
actually had very verbose error

00:10:20.920,00:10:25.792
messages. Like whenever you uh
trick the server into doing
something. It would like print

00:10:25.792,00:10:31.498
out a full stack trace of what
happened. So um, it was pretty
simple when like I inputted file

00:10:31.498,00:10:37.303
content for date range, it would
try to parse it as an integer,
but you know file content’s

00:10:37.303,00:10:41.674
probably not gonna be just a
number. And so what would happen
is it would say, hey, I can’t

00:10:41.674,00:10:46.246
parse this thing thing as an
integer and end up actually
reflecting the file content in

00:10:46.246,00:10:51.684
the response. Uh so this was
nice because you know I didn’t
have to send my data, uh sorry,

00:10:51.684,00:10:56.389
file content over to like a
remote server, uh, which was a
little bit complicated because

00:10:56.389,00:11:02.095
of their internal firewall they
had. Um, but eh you know I made
a small utility that allowed me

00:11:02.095,00:11:06.733
to dump files and I found out
that the Tom Cat user you know I
had access to anything the Tom

00:11:06.733,00:11:11.437
Cat user had access to. And uh
having this you know file system
access was really dangerous for

00:11:11.437,00:11:16.242
them. Because it seemed like a
lot of instances of Aspen were
running on this w- one server.

00:11:19.112,00:11:24.417
So the next vulnerability was a
pretty straight forward local
file inclusion. And um how this

00:11:24.417,00:11:31.324
worked was, whenever you, um,
whenever you uh processed result
of a tool, like a schedule tool

00:11:31.324,00:11:36.629
or grade tool, you’d be
redirected to tool result dot do
and this servlet took in a get

00:11:36.629,00:11:43.269
parameter filename. And another
parameter called download. So
after running a tool so you say

00:11:43.269,00:11:48.541
like um, uh by or attempting to
download a file using you know
something that was generated by

00:11:48.541,00:11:53.913
a tool. You’d be redirected and
so what you could do is actually
um, use the relative path

00:11:53.913,00:11:59.185
escapes to escape you know the-
the filename would be something
like student schedule dot pdf.

00:11:59.185,00:12:03.523
And you can do you know dot dot
slash dot dot slash. A- couple
of times to get to the root

00:12:03.523,00:12:07.961
directory of the server and then
you can do slash ATC password.
And this really well

00:12:07.961,00:12:12.098
complimented the previous
vulnerability because what it
allowed me to do was access

00:12:12.098,00:12:17.236
binary files. Uh XXE you know
has some trouble doing that, ya
ya you can send it to remote

00:12:17.236,00:12:22.342
servers, but it gets a little
bit complicated there. And this
allowed me to get access to any

00:12:22.342,00:12:29.248
binary files too. So it was a
really neat vulnerability to um,
compliment the previous one. So

00:12:29.248,00:12:33.386
transitioning to blackboard, I
found some interesting pages
while doing some subdomains

00:12:33.386,00:12:39.092
scans. Two of them the app
manager and msupport subdomain
looked interesting. Because I

00:12:39.092,00:12:43.529
found out that they were running
a little bit outdated version of
Django. But nothing too serious

00:12:43.529,00:12:49.369
like critical remote code
execution. But whenever I went
to a page that didn’t existed, I

00:12:49.369,00:12:54.674
saw this neat a verbose message
saying that, the page was not
found. And it also told me

00:12:54.674,00:13:01.414
whatever you know what reg exits
I could use to match uh a page.
Ah on that root directory. And

00:13:01.414,00:13:07.220
so I noticed that it said at the
bottom, you’re seeing this
because debug is set to true.

00:13:07.220,00:13:12.358
Uh, so what blackboard had done
is you know, conveniently left
debug set to true on subdomains,

00:13:12.358,00:13:17.163
the appmanager and msupport
subdomain. Um, and so went I did
some research into Django

00:13:17.163,00:13:21.634
debugging, it apparently turns
out that leaving this enabled is
quite a serious issue, because

00:13:21.634,00:13:27.006
of how much Django prints out.
Uh so it turned out you know
whenever you have an exception

00:13:27.006,00:13:32.545
by code, it’ll be uh really nice
and actually print out the
metadata for that code. So it

00:13:32.545,00:13:36.949
would print out you know, uh,
whatever server you know
settings that are running for

00:13:36.949,00:13:43.589
that server instance. So the way
I actually caused an error by
code would be by using these two

00:13:43.589,00:13:48.361
brackets and what it would do is
it would tell the server, hey
I’m passing an array and since

00:13:48.361,00:13:52.598
it was expecting, you know, not
an area, just normal value. It
would throw an exception,

00:13:52.598,00:13:57.904
because it was trying to read a
value that was an array. Uh and
it wasn’t expecting that and so

00:13:57.904,00:14:02.442
when an exception occurred, it
would print out, you know all
the metadata and I found a lot

00:14:02.442,00:14:07.647
of interesting stuff inside of
that metadata. And the
appmanager subdomain, the

00:14:07.647,00:14:13.519
metadata included the Jenkins
instance URL and active API
Token to this Jenkins instance.

00:14:13.519,00:14:17.323
This Jenkins instance was
accessible to the public.
Meaning that you know I didn’t

00:14:17.323,00:14:21.928
have to go through their
internal firewall or network to
get to it. Uh I had unrestricted

00:14:21.928,00:14:26.766
API credentials to Blackboard
community engagement. They had
an API user that I think had

00:14:26.766,00:14:31.771
access to pretty much all
schools that were on the um
Blackboard instance. And um, I

00:14:31.771,00:14:36.809
got admin credentials for
msupport subdomain and
interesting enough, I found 27

00:14:36.809,00:14:41.948
credentials to Apple’s
Provisioning service. And you
know these were 27 different

00:14:41.948,00:14:48.287
districts. I think you know, the
subdomains suggested that, you
know appmanager. Um, that these

00:14:48.287,00:14:53.292
were school apps and school
accounts for publishing apps to
the app store. And so it was

00:14:53.292,00:14:57.964
interesting to see though all
this stuff just returned by
metadata uh and the settings for

00:14:57.964,00:15:04.570
the server. From the msupport
subdomain I found out that the
metadata included database

00:15:04.570,00:15:09.342
credentials for pretty much
every database Blackboard
Community engagement had. Admin

00:15:09.342,00:15:13.679
credentials for the appmanager
subdomain and Jenkins
credentials. Not an API key, but

00:15:13.679,00:15:18.785
an actual user credential. Uh
fortunately for Blackboard, the
databases were behind an

00:15:18.785,00:15:23.256
internal firewall. So you know
an attacker couldn’t just go and
connect with directly. But it

00:15:23.256,00:15:27.293
was really interesting to see
the passwords because um, let’s
just say they weren’t very

00:15:27.293,00:15:32.298
secure. One of them was like
Romania, but with an at for the
A. So going on to SQL Injection,

00:15:38.004,00:15:42.809
um back in April of 2017, uh
when I first learned that
Blackboard Community engagement

00:15:42.809,00:15:47.713
was l- uh used by our school, I
found that y- again it was for
used for emergencies and

00:15:47.713,00:15:54.387
notification and when I logged
in I could see that I had my
cafeteria balance on there. So I

00:15:54.387,00:15:58.257
knew that my school didn’t use
it at all. You know just very
small stuff. Maybe some

00:15:58.257,00:16:03.095
notifications or some cafeteria
stuff, but I I researched a
little bit into other schools

00:16:03.095,00:16:09.468
using it and I found out that a
lot of schools use it as a main
driver. So at the time I

00:16:09.468,00:16:14.807
actually started looking at
Blackboard I think was, mid to
late 10th grade, um, it was um,

00:16:14.807,00:16:18.377
you know I barely knew anything.
I knew a little bit of SQL
injection, a little bit of cross

00:16:18.377,00:16:24.317
site scripting, but I was so uh
very much a beginner. Uh and so
I I want to try to find a

00:16:24.317,00:16:28.754
vulnerability on this, because I
knew that there was a lot of
schools using this software. Uh

00:16:28.754,00:16:33.092
my method of finding
vulnerabilities was you know,
really um inadequate and

00:16:33.092,00:16:37.730
unprofessional. It was just
looking at pages I saw on Chrome
Web Tools and trying to mess the

00:16:37.730,00:16:42.735
parameters. I saw this error
message a lot, but unlike Aspen,
Blackboard didn’t have verbose

00:16:45.037,00:16:49.609
error messages, so I didn’t know
what was going on, whether or
not you know it’s an SQL error,

00:16:49.609,00:16:53.512
or was just some random code
error, like maybe it was
expecting i- a type of input

00:16:53.512,00:16:59.385
that I didn’t give. But what I
tried to do is um, uh for
parameters that responded to

00:16:59.385,00:17:03.856
characters commonly used in the
SQL injection, like I don’t know
apostrophe, uh double quotes.

00:17:03.856,00:17:10.196
Um, what I tried to do is I
tried to put them through SQL
map, uh so for the two people in

00:17:10.196,00:17:16.135
here who don’t know what SQL Map
is, um, it’s basically a tool
that you can use to automate SQL

00:17:16.135,00:17:20.907
injection. Uh and you give it a
parameter in the raw, it will
actually test the website for

00:17:20.907,00:17:25.444
you automatically for that
specific URL. You know it won’t
scan an entire website for you,

00:17:25.444,00:17:31.183
but it can really help you um,
actual write data and find any
vulnerabilities that might not

00:17:31.183,00:17:36.188
be as clear to manual injection.
Um, yeah so I was just starting
in InfoSec and I barely knew

00:17:38.190,00:17:42.828
anything, but I actually struck
gold and got an SQL injection.
In this case it was Boolean

00:17:42.828,00:17:47.900
Based blind. Which actually is
pretty good because um, time
base blind takes forever you

00:17:47.900,00:17:54.440
know to exfiltrate data, but
Boolean based actually let me,
you know go mildly quickly with

00:17:54.440,00:18:01.347
some multi-threading. So here’s
some very fun facts. Um, in
total, I found over four SQL

00:18:01.347,00:18:07.386
injection vulnerabilities. Um,
most of thes SQL vulnerabilities
were basic blind SQL injections

00:18:07.386,00:18:12.024
and parameters related to user
ID numbers. One of the SQL
injection vulnerabilities I

00:18:12.024,00:18:17.029
found in late 2018 was on the
same URL I reported and um and
patched in early 2018. So what

00:18:19.031,00:18:25.104
happened was in late 2018 um,
and early 2018, what happened, I
reported a page where there was

00:18:25.104,00:18:29.308
a parameter vulnerable, but I
guess I didn’t look at the
parameters for that page. Uh,

00:18:29.308,00:18:35.014
they patched that vulnerability,
but then you know, in the second
set of research, late 2018, uh I

00:18:35.014,00:18:40.086
found that another parameter on
the same page was vulnerable. So
they basically patched this one

00:18:40.086,00:18:45.091
parameter and like didn’t even
look at other source code that
was on the same page. Before we

00:18:47.893,00:18:53.065
can see what I was actually to
you know, the impact of the
vulnerability of the Injection.

00:18:53.065,00:18:59.772
Uh, I need to do some recon. Uh,
so 6 databases were accessible
um I found that that were the

00:18:59.772,00:19:04.443
two interesting ones were a
primary one and a backup one.
And the other one seemed to be

00:19:04.443,00:19:09.382
you know my SQL data, default
data, databases and there was a
temp one that had nothing in it.

00:19:11.817,00:19:16.822
Uh, the primary database had
over 250 tables. Uh and they had
very concerning names for sure.

00:19:19.325,00:19:25.464
Um, so you know, the basically
what it seemed like was that I
could access whatever the uh the

00:19:25.464,00:19:29.068
web server itself could access.
You know, what it requested. It
didn’t really seem to be that

00:19:29.068,00:19:33.773
many restrictions. Uh,
specifically the table’s exposed
includes uh school attendance

00:19:33.773,00:19:38.277
information, you know uh whether
or not students showed up at
class, you know bus information.

00:19:38.277,00:19:43.282
How they get home. Uh cafeteria
status and payment history.
Enrollment, enroll courses and

00:19:43.282,00:19:47.420
course history. Uh whether or
not they’ve ever been
disciplined before. Their grades

00:19:47.420,00:19:52.892
um their progress to graduating,
their photos uh some
immunization and vaccination

00:19:52.892,00:19:58.664
information. Uh library balance
and history. Course schedule, uh
whether or not they linked any

00:19:58.664,00:20:02.935
social media accounts. But I
don’t know any student that
would you know, do that. I don’t

00:20:02.935,00:20:07.973
know why you would ever think
that’s a good idea. Um, their
birth date, their hashed

00:20:07.973,00:20:12.978
password. They used Shaw1. Um,
[cheering] Yeah, um crack
station really helped with that.

00:20:15.281,00:20:20.286
Uh, pin numbers, the school
uploaded documents and contact
information. So there’s some

00:20:22.555,00:20:27.493
more fun facts I’d like to
share. There’s over 5 million
students and teachers in this

00:20:27.493,00:20:33.632
system. I did this by counting
the number of rows in the main
you know account table. Uh

00:20:33.632,00:20:38.204
there’s over 34 thousand
immunization records. Uh
Blackboard wanted me to say that

00:20:38.204,00:20:43.242
um, that apparently that in
their terms of service, they
don’t actually, they tell you

00:20:43.242,00:20:49.281
not to upload immunization table
information. But um, it turned
out that um, you know they they

00:20:49.281,00:20:54.120
dedicated a specific spot it in
the database. But they say in
the terms of service not to

00:20:54.120,00:21:00.426
upload anything. So I I don’t
know how exactly that works,
but. Um, there’s over 5 thousand

00:21:00.426,00:21:05.331
schools impacted and you know in
the map I showed you earlier.
Those are schools impacted. And

00:21:05.331,00:21:12.271
the database user’s password is
um the lowercase version of the
username. So it wasn’t very nice

00:21:12.271,00:21:18.010
to see that. Uh because it was
my data too in there and uh
seeing you know, bad practices

00:21:18.010,00:21:23.682
like that made me concerned. You
know what else was there. What
else did they do wrong? Uh, to

00:21:23.682,00:21:28.621
clarify though this is from
Information accessed in 2018, so
I’m sure there’s some more

00:21:28.621,00:21:32.992
students in there now. But um,
or more immunization records.
I’m not quite sure what’s going

00:21:32.992,00:21:38.798
on today. But um, this was the
status back um in March 2018,
when I first you know, right

00:21:38.798,00:21:44.703
before I reported it. So I think
it’s kind of important to
clarify, you know what I

00:21:44.703,00:21:50.009
accessed and what I didn’t
access. What my boundaries were.
Uh, so I never any accessed any

00:21:50.009,00:21:54.747
other student data, besides my
um, besides any authorized use.
For example, my own records I

00:21:54.747,00:22:00.186
did check to see that my
information was in the account
table. Um any other information

00:22:00.186,00:22:05.090
I gathered, was that, was either
metadata like number of rows,
that’s how I found out there was

00:22:05.090,00:22:09.595
over 5 million students and
teachers in the database. Or it
was not related to anyone’s

00:22:09.595,00:22:15.801
personal data. Like database
password hashes. Uh the primary
reason I kept investigating is

00:22:15.801,00:22:19.705
because, you know, these guys
were keeping my records as well
and I didn’t really feel

00:22:19.705,00:22:24.510
comfortable until I knew how bad
the situation was, just sending
it over and saying hey, here’s

00:22:24.510,00:22:28.981
the vulnerabilities. Um, you
know it just felt like this was
pretty crazy stuff that I was

00:22:28.981,00:22:33.986
starting to see and I needed to
see how much they really messed
up. So disclosure time. I had a

00:22:38.624,00:22:41.894
very very interesting time
trying to disclose
vulnerabilities to Follett

00:22:41.894,00:22:46.932
Corporation, uh I when I first
found the XSS filter bypass
vulnerabilities in 9th to 10th

00:22:46.932,00:22:52.171
grade, uh I tried to reach to
Follett through my then school’s
distric- director of technology.

00:22:52.171,00:22:57.042
Uh that pretty much led nowhere.
You know they they weren’t able
to get a clear answer uh back

00:22:57.042,00:23:02.281
from Follett. Um as I you know
discovered the improper access
control vulnerabilities. One of

00:23:02.281,00:23:06.552
them stuck out to me. Uh there
was a vulnerab- vulnerability
that allowed me to add a group

00:23:06.552,00:23:12.825
resource to the group resources
section. So Aspen has this group
resources section where the

00:23:12.825,00:23:17.029
school can upload helpful links
and information. Maybe the
student handbook or you know,

00:23:17.029,00:23:22.601
back to school information. And
uh, so I found out that part of
the i- improper access control

00:23:22.601,00:23:27.206
vulnerabilities was that I can
add more own group resource. So
this meant I can add you know,

00:23:27.206,00:23:32.211
text and share it with what I
thought was All Students. So
being an immature 11th grader,

00:23:35.681,00:23:41.720
uh, what I immediately did was I
made a group resource and sent
it out to everyone saying, Yeah,

00:23:41.720,00:23:48.494
Follett didn’t really care about
security. Um, haha and um, yeah,
so I did just you know, I did

00:23:48.494,00:23:53.499
lear- learn prompt a document
dot cookies there. Down there.
Uh and what would happen was

00:23:56.268,00:24:01.206
whenever you logged into Aspen,
you’d see uh this on the bottom
of your screen. Yeah. [applause]

00:24:12.751,00:24:18.157
So I set my name in there
because I didn’t want to make me
look like the bad guy, you know,

00:24:18.157,00:24:22.528
oh yeah, this student hacked
into our systems and you know
compromised student data. How

00:24:22.528,00:24:26.932
bad of person is he? Uh and so
what I did was you know, I
included my actual name and a

00:24:26.932,00:24:31.036
message and I told them, you
know, if they want to take it
down, just come straight to me.

00:24:31.036,00:24:36.275
Uh but what happened was I
thought it would go to all
students. It actually went to

00:24:36.275,00:24:42.281
everyone in my district.
[laughter] So, yeah, apparently
like the director of technology

00:24:42.281,00:24:48.053
got pulled out of their meetings
and uh wasn’t that good.
[laughter] I I, this is a

00:24:48.053,00:24:53.058
screenshot from my own phone and
I actually got a notification
saying, hey from me. [laughter]

00:24:57.129,00:25:02.234
So the school wasn’t really
happy about it. I can
understand. [laughter] Um. Ha. I

00:25:02.234,00:25:08.340
only got off with a 2 day
suspension and I was able to
convince them that I I didn’t

00:25:08.340,00:25:13.345
violate the acceptable use
policy, yeah, that’s a big.
[applause] Um, I got suspended

00:25:20.619,00:25:25.624
for creating a major disruption.
Um, Yeah, so. I- you know, 2
days off of school, I think it’s

00:25:29.228,00:25:35.834
a pretty win win. Um. [laughter]
Uh, so looking back at it though
now you know, a few years later,

00:25:35.834,00:25:41.507
it’s I understand it probably
wasn’t the best thing to do. Um
and for one of the biggest

00:25:41.507,00:25:46.678
reasons I thought it’d be good
idea, was because at the time
you know, I was just getting

00:25:46.678,00:25:50.315
into the industry. I didn’t
really know, so what do you do
if a vendor doesn’t have contact

00:25:50.315,00:25:54.887
information. Or what do you do
if a vendor, you know, doesn’t
even want to talk to you at all.

00:25:54.887,00:25:59.825
So, you know I wasn’t aware of
organizations like the CERT
Coordination Center and so I

00:25:59.825,00:26:04.763
took the mildly immature route
of making a global message. So
after tweeting images about what

00:26:07.766,00:26:11.970
I had done on Twitter. Ha.
Mentioning uh Follett learning
in an attempt to get their

00:26:11.970,00:26:17.042
attention, I actually got a
reply. Uh they’re really helpful
through direct messages and I’d

00:26:17.042,00:26:22.681
set up a message with um,
actually someone from the Aspen
technical team. Uh, but then my

00:26:22.681,00:26:28.420
school heard about this and they
actually told them directly,
don’t talk to Bill. Um and I

00:26:28.420,00:26:32.124
kind of feel bad for Follett,
because you know my school was
the one paying some of the

00:26:32.124,00:26:36.962
bills. So they couldn’t really
be like, no but we need to fix
these vulnerabilities. Uh but it

00:26:36.962,00:26:41.400
was kind of you know, shooting
themselves in the legs because
you know, I was trying to help

00:26:41.400,00:26:45.304
here and I was trying to get
these vulnerabilities patched
and they kind of delayed it for

00:26:45.304,00:26:50.309
another semester. In March 2018
after speaking with my
principal, I actually

00:26:53.479,00:26:59.485
coordinated with the district’s
director of technology. And to
setup a meeting with Aspen. Uh

00:26:59.485,00:27:05.057
so one thing I do have to note
is once I um, uh reached out to
my director of technology, uh

00:27:05.057,00:27:09.595
Follett actually had a meeting
setup, I think within a week. It
was pretty impressive response

00:27:09.595,00:27:15.968
time. Uh when I disclosed the
bugs they had to fix, you know,
I think three weeks later in

00:27:15.968,00:27:22.074
mid-April of 2018. But um,
overall the disclosure process
was painless and they handled it

00:27:22.074,00:27:25.611
pretty prof- professionally. You
know they weren’t like
threatening me, uh during our

00:27:25.611,00:27:29.047
meeting. They’re pretty chill
and they- they’re thankful for
me disclosing these

00:27:29.047,00:27:34.052
vulnerabilities. So fast forward
to 2019. After I discovered and
turned the impact of the XXE and

00:27:38.824,00:27:44.796
LFI vulnerabilities uh the
disclosure process was a lot
different. Um, so you know

00:27:44.796,00:27:48.433
school relation, me and the
school, it wasn’t that great of
a relationship. You know they

00:27:48.433,00:27:52.104
were kind of p****d off that I
was doing this security research
into software that they were

00:27:52.104,00:27:59.044
using. Uh they weren’t really on
board with that. Um ha, and um
so I was able to coordinate with

00:27:59.044,00:28:03.916
uh Carnegie Melon University’s
CERT Coordination Center. And
they actually helped me get in

00:28:03.916,00:28:09.955
touch with the director cyber
security and privacy at the
Follett Corporation. Uh, after a

00:28:09.955,00:28:14.660
quick call, uh things were
looking good, you know he seemed
happy to help and wanted to to

00:28:14.660,00:28:19.097
disclose these, wanted me to
disclose some vulnerabilities to
them. Uh he’s told me he was

00:28:19.097,00:28:23.735
going to setup a meeting with
the Aspen development team. It
might take a little bit, but um,

00:28:23.735,00:28:27.673
and I told him that
specifically, I didn’t want to
work with my school because like

00:28:27.673,00:28:32.678
I said, our relationship wasn’t
that great. Understandably. So
for a month all I got was delays

00:28:37.749,00:28:43.855
like, still working on the
process, trying to coordinate a
time, please stay tuned. Um and

00:28:43.855,00:28:47.459
before hitting a month of
delays, I sent like a serious
e-mail like dude, what’s going

00:28:47.459,00:28:52.898
on. Uh and I had critical
vulnerabilities to report. Um,
what thing I didn’t really

00:28:52.898,00:28:58.270
understand was that my school’s
own district tech eh- de-
director of technology was able

00:28:58.270,00:29:03.342
to get a meeting with Follett
within a week, but that was
through like a customer success

00:29:03.342,00:29:08.547
advocate. But now you’re telling
me the director of cybersecurity
can’t get a meeting in a month?

00:29:08.547,00:29:13.785
That just seemed like a bit
weird to me. You know, like
what’s going on here? And so,

00:29:13.785,00:29:17.756
what does the director do when I
tell them, you know what’s going
on? Well he tells my school

00:29:17.756,00:29:21.860
everything and he tells them,
hey Bill’s trying to report
these vulnerabilities with them

00:29:21.860,00:29:28.133
to use. Uh and luckily at this
time it was like, a few days
after I graduated, so I already

00:29:28.133,00:29:33.138
had my diploma and they couldn’t
do anything. I was really happy
about that. [applause] And so he

00:29:38.977,00:29:44.249
contacted them even though I
told him not to. Uh and the
school basically banned all my

00:29:44.249,00:29:50.055
accounts, even like unrelated
e-mail accounts. They were
really unhappy about it. Um and

00:29:50.055,00:29:53.592
so I was kind of tired of
working with Follett there. I
just sent a .pdf with all the

00:29:53.592,00:29:58.096
vulnerabilities and said here it
is, if you want to fix them, fix
them. Uh if not, that’s your

00:29:58.096,00:30:03.869
deal. Uh and so it actually you
know, after I sent that pdf,
they actually started paying

00:30:03.869,00:30:10.642
attention and started working on
fixes. Uh this was fixed back
si- back in the end of July t-

00:30:10.642,00:30:15.647
uh 2019 actually, uh right
before a DefCon. So going to
Blackboard. Uh back in mid 2017

00:30:19.184,00:30:24.289
when I found my first SQL
injection vulnerability, uh I
sent a report to Blackboard’s um

00:30:24.289,00:30:28.694
security e-mail. Uh and their
initial reply was good, they
were like, yeah we’re, thank you

00:30:28.694,00:30:32.197
so much for reporting this to
us. We’re going to do an
investigation. Uh, we’ll get

00:30:32.197,00:30:38.870
back to you when we’ve completed
it. After a month of no replies,
I sent a follow-up saying. Hey

00:30:38.870,00:30:44.676
guys what’s going on? Uh how’s
the investigation going? No
response. A half a month later

00:30:44.676,00:30:50.348
after that, I sent another
e-mail. No response. Um, so yeah
I wasn’t sure if I was just like

00:30:50.348,00:30:54.753
losing it. Maybe I wasn’t
e-mailing the right e-mail. This
was 10th grader me and I wasn’t

00:30:54.753,00:31:00.892
really used to vendors like
leaving me Unread, so um, yeah I
didn’t really take it well. So

00:31:00.892,00:31:06.264
what I did was I said, ok,
here’s I can tell if I’m crazy
or not. What if I ta- attach a

00:31:06.264,00:31:12.304
mail tracker. And so that’s what
I did. And it said, Learn
Security read your e-mail 7

00:31:12.304,00:31:17.309
times. Um, and so ha. What I got
really mad at this, right? Um,
cause this is 10th grader me,

00:31:21.246,00:31:25.751
like I think I was 16 at the
time. And these guys were
ghosting me. It didn’t really

00:31:25.751,00:31:30.756
feel good. It hurt my feelings
ok? [laughter] And so now
looking back at it, I was like,

00:31:34.292,00:31:40.932
wow am I really that bad back
then. Uh and this was definitely
one of those moments uh and so I

00:31:40.932,00:31:45.737
just wrote an e-mail completely
calling them out. Like guys, I
know you’re reading my e-mails.

00:31:45.737,00:31:51.910
Please respond to me. Um and
yeah, go- it was kind of bad too
because you know this wasn’t a

00:31:51.910,00:31:58.049
paid bug bounty program and it
was kind of just wasting my time
doing my research. Et cetera.

00:31:58.049,00:32:02.988
And of course, they read that
one too. [laughter] So when they
heard about this, uh, they

00:32:05.991,00:32:10.996
wanted me to include a um, fun
statement. So they wanted their
response to this entire thing

00:32:13.198,00:32:19.404
was uh, we’re always working
hard to improve, um, sorry for
ghosting you Bill. Uh and this

00:32:19.404,00:32:25.811
is their wonderful, wonderful
little statement they had me
say. So I never heard back from

00:32:25.811,00:32:32.517
that e ma- e-mail again, but I
didn’t give up. After disclosing
the full vulnerabilities, I

00:32:32.517,00:32:37.389
decided to try to continue my
disclosures and I wanted to work
with my school uh back in March

00:32:37.389,00:32:42.761
2018. Uh and I wanted to work
with them to try to report the
Blackboard vulnerabilities. Uh

00:32:42.761,00:32:47.799
so the issue was, you know, a
few slides again when I was
talking about all the databases,

00:32:47.799,00:32:52.270
all the tables, you know how
many rows there were, et cetera.
I kind of was worried that you

00:32:52.270,00:32:57.642
know, how are they going to take
this? Did I break the CFAA? Uh,
you know I didn’t really know

00:32:57.642,00:33:03.949
the law, but um, I knew that
probably wasn’t that cool what I
did. Uh in th- in the eyes of

00:33:03.949,00:33:09.554
the court. Um, so I said hey
guys, how about we negotiate a
contract, uh something that

00:33:09.554,00:33:14.559
would protect me from you know,
hopefully prosecution. Um and uh
so ha. They sent me an initial

00:33:17.729,00:33:24.202
contract within a week. But then
I read the first thing it said,
you know it said, as of

00:33:24.202,00:33:26.671
effective date, student agrees
not to discuss wi- the
vulnerability with any third

00:33:26.671,00:33:28.673
party. Uh and this was
definitely a no go for me. Uh
because you know, by the way

00:33:28.673,00:33:30.675
this didn’t go through cause I
couldn’t be here if I signed
this. Uh and so their own

00:33:30.675,00:33:35.947
security policy said that after
the vulnerabilities were
patched, you can talk about it.

00:33:35.947,00:33:40.952
So this was pretty crazy for me.
I was under a lot of pressure
from both my the school and my

00:33:49.294,00:33:54.633
parents, because my parents had
to cosign the agreement. I was
only like 16 at the time. And um

00:33:54.633,00:33:58.003
you know they were like getting
worried as well, like what are
you getting me into Bill. Um,

00:33:58.003,00:34:04.175
haha. And so, I compromised for
the second revision. Uh where it
says that I tell Blackboard

00:34:04.175,00:34:08.780
everything accessed uh and
vulnerabilities themselves. Uh I
don’t disclose the

00:34:08.780,00:34:13.852
vulnerabilities until they’ve
been patched. Uh I send any
publication 10 days in advance

00:34:13.852,00:34:18.657
and comply with edit requests
that can be so called,
reasonably deemed as exposing

00:34:18.657,00:34:24.129
Blackboard clients or end users
to security threats. Uh and
Blackboard agrees not to pursue

00:34:24.129,00:34:29.467
legal action as long as I um I
don’t disclose personal data
about other students or other

00:34:29.467,00:34:35.206
confidential information. So
Blackboard ND did read some of
the slides you’ve seen today. Uh

00:34:35.206,00:34:41.746
specifically they saw the SQL
injection galore slides and they
saw the disclosure part. Um and

00:34:41.746,00:34:45.684
they didn’t see the other set of
vulnerabilities like the sub
domain stuff because that was in

00:34:45.684,00:34:50.689
the second set of research that
I was doing. So after signing uh
disclosure was really stressful

00:34:53.124,00:34:56.995
because um, the school, they
weren’t like, they didn’t want
to be in the middle of

00:34:56.995,00:35:00.332
negotiations. I was kind of
making you know a big deal. I
was like, guys, this is not a

00:35:00.332,00:35:06.071
fair contract. Apparently the
school’s lawyer said, oh this is
a fair contract. And it was for

00:35:06.071,00:35:09.841
the school, but it wasn’t really
one for me. You know he wasn’t
really representing my

00:35:09.841,00:35:14.846
interests. Uh and you know th-
like I said, it wasn’t, they
weren’t really happy about it,

00:35:14.846,00:35:20.185
but um, after we signed a
contract and my parents signed,
uh it was pretty painless. You

00:35:20.185,00:35:24.222
know I I disclosed the
vulnerabilities in the meeting.
Uh the school grilled them a bit

00:35:24.222,00:35:29.728
on why they ghosted me. Um and
the vulnerabilities ended up
being patched in the end of

00:35:29.728,00:35:36.668
2018. April of 2018. And so the
next set of vulnerabilities
including even more SQL

00:35:36.668,00:35:42.374
injection and the information
disclosure bugs that we leaked
important credentials was done

00:35:42.374,00:35:46.511
with the help of the CERT
Coordination center at Carnegie
Melon University. Their software

00:35:46.511,00:35:51.883
engineer institute. Uh and they
got in touch with Blackboard
through their secure- security

00:35:51.883,00:35:55.954
e-mail. And we were able to work
with them to patch the
vulnerabilities. Uh something

00:35:55.954,00:36:00.558
kind of fun was that um, I
actually reported it anonymously
and uh Blackboard didn’t know

00:36:00.558,00:36:04.629
that I would, you know that I
was gonna disclose this third
vulnerabilities about until a

00:36:04.629,00:36:09.634
week ago. [laughter] Um, so,
let’s see what they think about
that. Ha. [laughter] Um, it took

00:36:12.504,00:36:18.410
a few months uh but at the end
of the day, the vulnerabilities
were patched. The process that

00:36:18.410,00:36:22.047
does uh isn’t that difficult and
if you guys ever have any
problems trying to contact the

00:36:22.047,00:36:25.550
vendor, I’d strongly suggest you
reach out to them because I
think they might be able to

00:36:25.550,00:36:30.555
help. So something kind of
strange I noticed was that, uh
in October la- of 2018 I was

00:36:33.892,00:36:39.464
trying to get a CVE for the
vulnerabilities I found. Uh and
so I was trying to get uh trying

00:36:39.464,00:36:44.569
to contact the CISO at the time
and when I e-mailed her sh- it
it said that this e-mail didn’t

00:36:44.569,00:36:48.673
exist in their system anymore.
So I googled, I thought you know
maybe someone got a you you

00:36:48.673,00:36:53.978
know, new CISO or something and
then I saw this job offer from
Blackboard. Uh and so the

00:36:53.978,00:36:59.484
interesting part about this was
that the CISO apparently left
right after my vulnerabilities

00:36:59.484,00:37:04.422
were disclosed. And fixed.
Something kind of interesting.
[cheering] Um. [applause] Uh but

00:37:10.128,00:37:15.467
you know a f- few friends said
Bill you should apply for it. Um
I decided not to. Uh I don’t I

00:37:15.467,00:37:21.639
don’t think I have the
qualifications for it yet. Maybe
in a year or two. Um, but um it

00:37:21.639,00:37:26.644
was so interesting to see that
they left the company after my
vulnerabilities. Um, so to wrap

00:37:32.951,00:37:39.257
up. A couple of suggestions for
what we should do to prevent
future incidents. First of all,

00:37:39.257,00:37:43.061
no matter the company, schools
should enforce companies to make
sure that the products they use

00:37:43.061,00:37:46.531
are safe. You know schools have
the most power here, because
they’re the ones actually

00:37:46.531,00:37:51.836
paying, you know, the st- school
software vendors. Uh and so they
can they have a lot of control

00:37:51.836,00:37:55.173
about what the schools do and
what the uh sorry what the
companies do and what the

00:37:55.173,00:37:59.911
companies don’t. Uh and schools
I think that they should require
third party auditing of

00:37:59.911,00:38:05.550
software. Uh where sensitive
information is stored. Um it
just you know feels like, when

00:38:05.550,00:38:09.621
we take health data so
seriously, but then we don’t
want to take the data of our own

00:38:09.621,00:38:15.760
children as seriously. It just
seems crazy to me. Because we’re
the next generation. Uh I think

00:38:15.760,00:38:19.397
we should hold companies
accountable when negligent uh
actions are taken. I hope the

00:38:19.397,00:38:24.402
public does this with the
revelation of my findings. Uh
and I think that we should

00:38:24.402,00:38:29.007
understand where sensitive
information is stored and not
fall for marketing talk. Know

00:38:29.007,00:38:33.044
that just because a company
says, yeah, we take care of your
data. Doesn’t actually mean that

00:38:33.044,00:38:39.951
they take care of my data. So
the reason I think this is such
an important thing to take care

00:38:39.951,00:38:44.989
of is because, the next
generation should be one of our
number one priorities. You know,

00:38:44.989,00:38:48.993
me included. It just feels like
children can’t defend
themselves. You know they don’t

00:38:48.993,00:38:52.564
know secure practices. They
don’t know how to make sure
their data is being held in

00:38:52.564,00:38:58.770
somewhere safe. And so I feel
like parents and schools should
be the ones making sure that ch-

00:38:58.770,00:39:02.740
children’s data are actually
being stored in a safe
environment. You know I just

00:39:02.740,00:39:07.045
can’t believe we have so much
regulation around health data
and we don’t have nearly as much

00:39:07.045,00:39:11.482
regulation around you know,
school data or student data.
Especially because you know,

00:39:11.482,00:39:17.088
it’s the data of minors. You
know. We shouldn’t expect them
to um, have their own data. Be

00:39:17.088,00:39:23.328
in control of their own data.
And so my my question is that,
if a 16 year old can find a

00:39:23.328,00:39:28.633
breech affecting millions of
student and teachers, what can a
nation sec find? Do you feel

00:39:28.633,00:39:35.440
comfortable with foreign nations
having the data of your
children? I wouldn’t. So some

00:39:35.440,00:39:41.679
thanks and their very massively
deserved is to the electronic
frontier foundation. Uh they’ve

00:39:41.679,00:39:46.184
been incredibly helpful
throughout my entire research
process and they offer m

00:39:46.184,00:39:51.189
pro-bono legal representation
throughout the whole thing. Uh
the second thanks goes-

00:40:00.698,00:40:04.168
[applause] The second piece of
thanks goes to the CERT
Coordination Center. Uh they

00:40:04.168,00:40:09.073
helped with finding points of
contact for both Follett and
Blackboard. Uh and assisting

00:40:09.073,00:40:14.078
with disclosure in every step of
the way. [applause] So I think
we have a few minutes if anyone

00:40:21.519,00:40:28.326
has some dying questions they
want to ask me. I think we can
ask them. Uh. So I don’t know if

00:40:28.326,00:40:33.331
my goon is here. The one running
my talk, but um, uh that. Ok. He
left. That’s that’s sad. Yeah.

00:40:38.469,00:40:41.939
Do you, do you we could uh, if
anyone has some questions, they
can come up and ask I guess.

00:40:46.644,00:40:51.649
Alright. No one has questions,
that’s always great.
[laughter/applause] Alright come

00:41:03.161,00:41:08.166
on. >>What uh what were your
parent’s views on what was going
on during this time. [laughter]

00:41:15.306,00:41:20.311
>>Um, they told me not to do it.
[laughter] Uh, they were really
unhappy with the contract, you

00:41:22.914,00:41:27.018
know, they didn’t feel they
wanted to be involved in
anything like that. So um, it

00:41:27.018,00:41:32.023
was a mixed feelings definitely.
>>What are you going to do next.
>>Start college. Maybe break

00:41:38.830,00:41:43.835
their software.
[laughter/applause] >>Did you
ever get around to changing your

00:41:51.075,00:41:56.080
grade? [laughter] >>I can’t
answer that question. [applause]
Alright, well, thanks again for

00:42:05.356,00:42:09.227
everyone coming out to my talk.
[applause][cheering]

