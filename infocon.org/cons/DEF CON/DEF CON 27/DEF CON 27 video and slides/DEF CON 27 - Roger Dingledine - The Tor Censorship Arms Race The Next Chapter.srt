00:00:00.100,00:00:04.605
>>Hi everybody, I’m Roger
Dingledine from TOR. Got some
really bright lights up here.

00:00:04.605,00:00:08.542
We’re still filing in, in the
back but I think I’m gonna get
started cause we got a lot of

00:00:08.542,00:00:14.948
stuff to talk about. So hi, I’m
Roger from TOR, uh and let me
get the clicker working. There

00:00:14.948,00:00:19.419
we go. So I’m going to start of
telling people a little bit
about how TOR works.. How many

00:00:19.419,00:00:24.658
people know quite a bit about
how TOR works already? Raise
your hand if… Great I see a lot

00:00:24.658,00:00:28.228
of hands, awesome. So I’m going
to blow through the beginning
introduction stuff and then

00:00:28.228,00:00:32.966
we’re going to talk more about
the censorship side of things.
So what is TOR? uh, TOR is a

00:00:32.966,00:00:38.472
free software project. TOR is a
non-profit. TOR is a protocol.
TOR is a network of volunteers

00:00:38.472,00:00:42.409
running relays around the world.
TOR is a bunch of researchers
trying to figure out how to

00:00:42.409,00:00:47.481
provide better privacy, and
better uh, anonymity and better
safety to people around the

00:00:47.481,00:00:51.752
world. And we’ve got some number
of users, it’s a bit hard to
tell cause it’s an anonymity or

00:00:51.752,00:00:56.690
privacy system, but one estimate
puts us at about two million
users a day and another more

00:00:56.690,00:01:01.895
recent estimate puts us at about
8 million users a day, which is
a HUGE network of people. At

00:01:01.895,00:01:06.967
this point the average TOR user
is the average internet user,
which is pretty cool. Ok, so

00:01:06.967,00:01:12.005
what are we trying to do here?
The easy, so the, the threat
model, the question is we’ve got

00:01:12.005,00:01:17.978
this user Alice, she’s trying to
go to some website Bob, or some
service Bob, and someone it

00:01:17.978,00:01:22.082
trying to learn who is going to
which place. So maybe somebody
is watching Alice’s local

00:01:22.082,00:01:26.153
network connection, maybe that
somebody is spying on the
Starbucks. Maybe the somebody

00:01:26.153,00:01:30.490
being Comcast or the local
Telco. Or maybe they’re watching
on the Bob side, maybe they’re

00:01:30.490,00:01:34.661
watching Wikileaks, and they
want to know who’s connecting to
it. Or maybe they’re somewhere

00:01:34.661,00:01:41.468
in between- maybe they’re NSA or
AT&T or something like that. So
the, this is the scenario we’re

00:01:41.468,00:01:46.273
trying to think about, an
important thing to consider-
anonymity is NOT encryption. You

00:01:46.273,00:01:49.576
should use encryption.
Encryption is good, but even
when you are using encryption,

00:01:49.576,00:01:54.548
somebody watching your traffic
gets to learn who you’re talking
to, when you’re talking to them,

00:01:54.548,00:01:59.419
ho much you’re talking to them,
and I keep talking to companies
who say ‘no I use a VPN, it’s

00:01:59.419,00:02:03.857
totally fine, I’ve got, I’ve got
encryption, I’m good. uh…
Whenever the intelligence

00:02:03.857,00:02:08.628
agencies are thinking about
figuring out who’s talking to
who, they draw their social

00:02:08.628,00:02:12.099
network graph, they figure out
who is in the middle, they
figure out whose house to break

00:02:12.099,00:02:16.903
into. So it’s not even about
breaking the encryption anymore.
It’s about drawing the social

00:02:16.903,00:02:21.908
graph and figuring out who is
interesting. So, another way of
looking at that, everybody here

00:02:21.908,00:02:27.647
knows Creepy NSA Dude? I hope, I
uh, so w’e kill people based on
Metadata’ is his quote from a

00:02:27.647,00:02:32.819
few years ago. So that Metadata
is EXACTLY the name of the game
on the TOR side. We try to

00:02:32.819,00:02:38.558
protect who is talking to who,
what websites you’re going to,
where you are in the world when

00:02:38.558,00:02:43.063
you’re using the internet,
things like that. So, I actually
only use the word ‘anonymity’

00:02:43.063,00:02:47.601
when i’m talking to uh other
researchers, when i’m talking
with my parents I tell them I’m

00:02:47.601,00:02:51.938
working on a ‘Privacy System’,
because privacy is a good
American value, but when I’m

00:02:51.938,00:02:55.709
talking to companies, I tell
them I’m working on
communication security, or

00:02:55.709,00:03:01.148
network security. ‘Cause I hear
privacy is dead, I hear
anonymity is scary, but you’re

00:03:01.148,00:03:05.218
right communication Security,
that’s a really important thing
to do. And when I’m talking to

00:03:05.218,00:03:11.691
Governments, I work on, Traffic
Analysis-Resistant Communication
Networks. And again it’s the

00:03:11.691,00:03:16.329
same system, the same security
system, the same users, but
they’re using it for different

00:03:16.329,00:03:20.400
reasons. and part of the goal of
this, is they’re trying to
figure out how to frame this for

00:03:20.400,00:03:24.571
different people, so they can
all blend together. You can’t
have a cancer survivors

00:03:24.571,00:03:28.942
anonymity system, where all the
users are cancer survivors,
because then everyone swill know

00:03:28.942,00:03:33.547
why you’re installing it, and
why you’re a user, so you need
this wide variety of people. And

00:03:33.547,00:03:37.084
then the fourth category of
people we’re gonna talk about
today is the reachability side

00:03:37.084,00:03:43.323
of things, uh people tryin to
uh, access websites like BBC and
GitHub from different parts

00:03:43.323,00:03:47.961
around the world. So the goal of
TOR is to blend all of these
different groups into the same

00:03:47.961,00:03:52.332
network. so they can provide
security for each other. So
how’s it work in a nutshell?

00:03:52.332,00:03:56.603
You’ve got a, we’ve got a
network of relays around the
world, and people build

00:03:56.603,00:04:00.907
circuits, people build paths
though three of the relays, and
the goal is that no single relay

00:04:00.907,00:04:06.646
gets to learn which user is
talking to which destination. So
that was actually only half of

00:04:06.646,00:04:11.852
it, that that was the network
level privacy half. There’s also
the browser level privacy half,

00:04:11.852,00:04:16.857
where uh, cookies and flash and
uh browser resolution and all
sorts of other things can give

00:04:19.826,00:04:23.697
you away, can make you
identifiable while you’re
browsing the web. So the second

00:04:23.697,00:04:29.469
half of TOR is TOR Browser which
is a version of Firefox that try
to fix all of these application

00:04:29.469,00:04:33.640
level issues. And there are
other ways of using TOR, there’s
an operating system called

00:04:33.640,00:04:37.978
Tails, which is Debian based,
which has everything you want,
preconfigured and nothing you

00:04:37.978,00:04:42.382
shouldn’t want and it’s a live
CD so when you’re done you pull
it back out and everything

00:04:42.382,00:04:48.455
disappears from your system. We
now have a TOR Browser Android,
which is awesome. So now that

00:04:48.455,00:04:52.826
Firefox actually works well on
Android we can have a TOR
Browser on Android, so there is

00:04:52.826,00:04:57.864
an actual first class TOR
Browser that does everything
that the normal TOR Browser

00:04:57.864,00:05:04.004
does, on Android, which is
great. So, another piece of, of
knowing about the TOR background

00:05:04.004,00:05:08.508
is how fast the network’s gotten
over time and we’ve got ah, so
the, the capaci.. the uh actual

00:05:08.508,00:05:12.212
load on the network is up to
like, 200 gigabits a second and
the capacity is something like

00:05:12.212,00:05:17.217
twice that. So we’re uh, on the
level of Wikipedia or something
like that so there’s a lot of

00:05:22.656,00:05:29.529
different traffic going through
the network from our millions of
our users. Ok, so, one of the

00:05:29.529,00:05:34.901
questions we think about in
terms of how to assess you know
whether TOR is doing it’s job is

00:05:34.901,00:05:39.839
the how do you measure safety,
how do you measure diversity,
how do you figure out whether

00:05:39.839,00:05:45.378
whether TOR is, is keeping
somebody safe and how do we
think about that? The diversity

00:05:45.378,00:05:50.417
of where the relays are. The
more relays we have around the
world, the safer it can be, the

00:05:50.417,00:05:55.622
less likely it is that a given
attacker is going to be able to
watch all the traffic going in

00:05:55.622,00:05:59.793
to the network, and also your
traffic going out of it. So for
example, French intelligence

00:05:59.793,00:06:03.730
probably isn’t in a good
position to be able to see
enough of the traffic on the

00:06:03.730,00:06:08.501
Internet to start correlating
people. So where the relays are,
is a, is an important first

00:06:08.501,00:06:13.273
piece. The second piece is
diversity in the types of users.
This goes back to the privacy,

00:06:13.273,00:06:19.279
anonymity, traffic analysis
resistant side where it’s not
just about how many people we

00:06:19.279,00:06:25.218
have, it’s about what kind of
people. So, for example, the
average TOR user in Iran is not

00:06:25.218,00:06:29.990
a political dissident trying to
take down their government, the
average TOR user in Iran is a

00:06:29.990,00:06:34.694
Facebook user trying to reach
Facebook. And that’s critical
for the safety and security of

00:06:34.694,00:06:38.999
the rest of em, because that
means you can’t, I mean if Iran
wanted to round up all of their

00:06:38.999,00:06:43.303
twenty year olds and kill them,
I guess they could do that, but
it wouldn’t actually work, it

00:06:43.303,00:06:47.707
wouldn’t actually get rid of the
political dissidents, it would
create more, we all know how

00:06:47.707,00:06:53.713
that works. So that the
normalness of using TOR is a key
piece of its security. And then

00:06:53.713,00:06:58.718
the last thing to think about
transparency is an really
important piece of how we build

00:06:58.718,00:07:04.758
TOR so we've got its open source
we give you specifications we
describe everything an and try

00:07:04.758,00:07:09.663
to work with the research
community to understand what
security properties we get and

00:07:09.663,00:07:14.467
we identify ourselves and go on
stage Hi I’m Roger I'm from TOR
and the key thing to remember

00:07:14.467,00:07:18.605
here a lot of people look at
this and they're like oh ha ha
the privacy people are talking

00:07:18.605,00:07:23.977
about transparency ha ha that's
so stupid. No privacy is about
choice privacy is about control

00:07:23.977,00:07:29.215
and we choose to be transparent
because it helps us build a
better community a better tool a

00:07:29.215,00:07:33.553
better software a better
protocol a better network of
relay volunteers around the

00:07:33.553,00:07:39.926
world. Okay so what am I going
to talk about today? Uh, we've
got I guess three different

00:07:39.926,00:07:45.632
pieces the first one is the
background of the censorship
side of things the second one is

00:07:45.632,00:07:50.437
what happened in the past couple
of years in terms of new attacks
from governments that are trying

00:07:50.437,00:07:56.109
to censor TOR and then the third
one is a bunch of new tools that
were working on that will

00:07:56.109,00:08:00.246
hopefully move us forward in the
arms race. Ok, so I’m going to
start with the background side

00:08:00.246,00:08:05.352
of things. How many people here
know about tor bridges and
pliable transports and phrases

00:08:05.352,00:08:10.957
like that? I see far fewer hands
than before. okay awesome .So
when you're trying to think

00:08:10.957,00:08:16.696
about a censorship resistance
tool there really two pieces to
the first piece is the relaying

00:08:16.696,00:08:21.801
component the encryption how you
build the paths stuff like that
and the second piece is the

00:08:21.801,00:08:27.841
discovery component where do you
learn the addresses or the
proxies or or whatever first

00:08:27.841,00:08:33.313
contact you have where do you
how do you learn how to connect
into the network in a way that

00:08:33.313,00:08:38.184
that you can get an address that
somebody else hasn't blocked
already? So the simple version

00:08:38.184,00:08:43.123
from the TOR side of the
discovery approach is we have a
centralized set of directory

00:08:43.123,00:08:47.727
authorities and they build a
list of all the relays and then
all the clients fetch that list

00:08:47.727,00:08:51.798
and it's great it's simple it's
easy to understand we can think
about the security of it but

00:08:51.798,00:08:58.037
it's not good from a censorship
side, because you the adversary
get the list of of all the

00:08:58.037,00:09:02.909
public relays and you block them
and that's the end of it. So
that's actually not how the

00:09:02.909,00:09:08.581
story started the first blocking
that we had was actually
blocking of TOR’s website back

00:09:08.581,00:09:15.055
in 2006 and then in two thousand
seven smart filter and web sense
started blocking the TOR HTTP

00:09:15.055,00:09:20.060
directory fetches because we
were using unencrypted HTTP back
then, so yeah, so that it it

00:09:22.262,00:09:26.533
started off not from a more
complicated thing it started off
from the blocking the website

00:09:26.533,00:09:30.837
and blocking the initial TOR
protocol and blocking the
website actually works really

00:09:30.837,00:09:35.809
well like, here are some
screenshots from back then of
the TOR website from various

00:09:35.809,00:09:41.848
countries around the world and
we got you know some fun ones
it's uh, here we are, uh this

00:09:41.848,00:09:47.787
website found, uh cannot be
accessed in the UAE. Here's
another one this site has been

00:09:47.787,00:09:52.125
blocked due to content that is
contrary to the laws of the
Sultanate and they’re you know

00:09:52.125,00:09:57.597
they're trying to make it fun we
got another one down here oops!
you know oops! we we blocked

00:09:57.597,00:10:04.270
this thing oops! were fascists
sorry this is this is fun at and
and there's this recurring theme

00:10:04.270,00:10:09.309
where people are trying to make
it fun they're not were not you
know totalitarian regimes were

00:10:09.309,00:10:14.314
just trying to help you out on
the internet there there this
friendly goofy people who are

00:10:14.314,00:10:18.518
who are the reason why this
website doesn't load it's all
fun what why are you all so

00:10:18.518,00:10:24.157
angry? So blocking the TOR
website actually worked pretty
well back then because at the

00:10:24.157,00:10:30.663
time everybody thought that
anonymizers or proxy tools were
websites that you go to, so

00:10:30.663,00:10:34.767
people would try going to the
TOR website it wouldn’t work and
they would say oh I guess TOR

00:10:34.767,00:10:39.072
doesn't work anymore and TOR
worked if you had a copy of it
there people in Iran who are

00:10:39.072,00:10:44.143
giving it out over usb keys or
something like that but blocking
website actually worked pretty

00:10:44.143,00:10:50.250
well. So fast forward a few
years the next interesting event
was uh, so does everybody

00:10:50.250,00:10:56.789
remember I guess ten years ago
there was an election in Iran
and this guy name Mousavi won

00:10:56.789,00:11:00.293
but then suddenly he wasn't in
charge and then there were a lot
of people are angry in the

00:11:00.293,00:11:06.299
streets at that point the
government did a lot of trying
to censor things and trying to

00:11:06.299,00:11:11.671
block things one of the key
steps that they took was
throttling SSL. So they bought

00:11:11.671,00:11:16.442
this fancy new Nokia Siemens
device and got somebody from
Russia to come in and then

00:11:16.442,00:11:22.916
configure it for them and they
detected SSL on the wire and
then turn down the bandwidth you

00:11:22.916,00:11:28.354
get for SSL and because TOR was
trying to look like SSL because
who would block SSL, they ended

00:11:28.354,00:11:34.327
up throttling TOR at the same
time without even uh taking any
extra steps to do that. So

00:11:34.327,00:11:39.332
that's actually one of the ways
lets, lets think about this more
thoroughly, there are four basic

00:11:39.332,00:11:44.070
ways of blocking TOR. The first
one those directory authorities
I talked about before? They’re

00:11:44.070,00:11:48.942
centralized, there are nine of
them, if you block them nobody
can bootstrap. The second one is

00:11:48.942,00:11:54.147
you get the list of the 7000
relays around the world and you
block all those by IP address.

00:11:54.147,00:11:58.751
The third one is you look at
TOR’s network fingerprints and
you do deep packet inspection to

00:11:58.751,00:12:04.357
try to figure out if this flow
that you're seeing is related to
TOR, Uh, the fourth one is you

00:12:04.357,00:12:08.595
block the website or prevent
people from getting the
software. So one of the fixes we

00:12:08.595,00:12:14.167
had at the time for this sort of
thing was we call TOR bridges
and the idea is let's get all of

00:12:14.167,00:12:19.172
the users who are in less
blocked areas to offer to be
secret relays, private relays

00:12:22.241,00:12:28.181
for censored users so the idea
is rather than here are 7000 IP
addresses and I want to keep

00:12:28.181,00:12:33.886
China from learning them,
instead here are thousands of
bridge addresses and there is no

00:12:33.886,00:12:38.458
public complete list of them and
now we want to give out bridge
addresses one at a time to the

00:12:38.458,00:12:42.929
good guys so the bad guys can’t
learn all of them and it turned
out to be a crappy arms race but

00:12:42.929,00:12:47.834
that was the first step that we
were thinking and how do you get
a bridge at the time? And this

00:12:47.834,00:12:52.739
is still basically the same
answer, you go to bridges dot
TOR dot org, solve the captcha

00:12:52.739,00:12:57.143
and it looks at what slash 16 of
the internet you're coming from
and gives you a different answer

00:12:57.143,00:13:03.282
based on where you are and what
day it is. And the goal of that
is every user is going to get a

00:13:03.282,00:13:07.420
few bridges but if you want to
learn all of them then you need
to come from a lot of different

00:13:07.420,00:13:12.492
places of the internet and be
consistent and persistent about
it. Another approach is you can

00:13:12.492,00:13:16.763
email us from your gmail account
and we’ll answer the same gmail
account the same way so you need

00:13:16.763,00:13:20.967
to build a lot of gmail accounts
in order to learn all of the
bridges that are given out

00:13:20.967,00:13:25.772
through that strategy, another
answer is I knew a great guy in
Shanghai and I sent him some

00:13:25.772,00:13:30.843
bridges and he sent them to his
people and and that was the
social network approach or you

00:13:30.843,00:13:34.614
can also just run your own
private bridge and just tell
your friends about it and we

00:13:34.614,00:13:39.619
don't even have to know about
it. So there's actually much
better interface inside TOR

00:13:39.619,00:13:44.023
browser for this at this point,
so I don't know how many people
can see the tiny font from back

00:13:44.023,00:13:49.195
there but basically there's a
interface for you to say my
government blocks TOR, and I

00:13:49.195,00:13:54.734
need to use a bridge and it says
either paste the bridge address
you know here or there's this

00:13:54.734,00:13:58.871
other cool approach which we
added recently, that uses domain
fronting, I’ll talk about what

00:13:58.871,00:14:04.844
that is later, but basically it
routes the traffic through Azure
Cloud into bridges dot TOR

00:14:04.844,00:14:10.850
project dot org, so that you can
automatically get a bridge from
inside TOR browser without

00:14:10.850,00:14:17.190
having to learn how, how the
bridge database works or even
how.., you know what you're

00:14:17.190,00:14:21.594
supposed to do you just go
inside TOR browser and you click
on it and you solve the captcha

00:14:21.594,00:14:28.301
and it magically gives you a
couple of bridges. So that was
cool back then, and the first

00:14:28.301,00:14:33.573
interesting attack from China
happened right about the time it
was like the 60th anniversary of

00:14:33.573,00:14:36.209
some dude becoming in charge in
China, they grabbed all the
public relays and blocked them

00:14:36.209,00:14:41.881
and they grabbed the HTTPS
version of the bridge
distribution mechanism so they

00:14:41.881,00:14:48.688
blocked a bunch of bridges but
it turns out they didn't block
the other distribution

00:14:48.688,00:14:53.626
mechanisms so we’d, I mean it’s
easy to block TOR from a public
perspective so we knew this was

00:14:53.626,00:14:58.564
coming so we designed a bridge
thing we rolled it out we'd
translated a bunch of stuff ito

00:14:58.564,00:15:03.669
chinese and the result was, so
here's a graph of the number of
people using one of the TOR

00:15:03.669,00:15:09.275
relays at the time and it sort
of plummeted write about the
60th anniversary, but at the

00:15:09.275,00:15:14.680
same time tens of thousands of
people switched over using
bridges from inside China. So

00:15:14.680,00:15:21.487
this is a pretty awesome example
of preparing for the arms race
and rolling out something and

00:15:21.487,00:15:26.492
then having it go the way that
you expected it to go that
that's the good news the bad

00:15:26.492,00:15:31.664
news is a little while later
China got the uh, the second one
the gmail one and at that point

00:15:31.664,00:15:36.702
we were down to social dis..
social network distribution or
run your own private one and

00:15:36.702,00:15:42.041
that's that's still kind of
where we are, I’ll talk more
later on in the talk about some

00:15:42.041,00:15:45.745
of the better approaches but one
of the big research questions
that still exists in the world

00:15:45.745,00:15:50.283
is how do we come up with really
good bridge distribution
mechanisms? Let's say you've got

00:15:50.283,00:15:55.822
thousands of private bridges and
you got a bunch of users around
the world who want to get some

00:15:55.822,00:16:00.860
and you got adversaries who are
well-funded and they want to
learn all of them, how do you

00:16:00.860,00:16:04.964
give out these bridges in a way
that the good guys are going to
get some and the bad guys aren’t

00:16:04.964,00:16:11.804
going to get all of them? Okay
so the next interesting attack
was Iran a few months after

00:16:11.804,00:16:16.075
that. They did not at all do
what we were expecting. You
think that they would get the

00:16:16.075,00:16:21.781
list of public relays and block
them? No they use their fancy
new Nokia Siemens device to DPI

00:16:21.781,00:16:27.053
for SSL and look for the
particular diffie-hellman
parameter prime that we were

00:16:27.053,00:16:33.359
using. So this was the very
first step that Iran used to
block TOR they DPI’d for our SSL

00:16:33.359,00:16:37.964
handshake and they looked for a
particular number in the
handshake and said you're using

00:16:37.964,00:16:43.736
a different prime then Firefox
and Apache use, so we’re going
to cut those connections. So we

00:16:43.736,00:16:48.107
started off making a list of
like 15 ways somebody can block
TOR and what we would do for

00:16:48.107,00:16:53.412
each one of them, boy was this
not on our list of 15 ways
people can block TOR. So the

00:16:53.412,00:16:57.984
feature of this that the good
feature was on since the
diffie-hellman parameter is a

00:16:57.984,00:17:02.521
server-side parameter it's in
the like the TLS certificate
that the server-side, that the

00:17:02.521,00:17:09.061
server supplies we could change
just the relay side, just the
bridge side and users didn't

00:17:09.061,00:17:13.766
have to update at all. So it was
just we change a couple relays
and suddenly things work again

00:17:13.766,00:17:18.671
so here's a graph of people who
were using TOR from Iran at the
time you can see when the

00:17:18.671,00:17:24.010
blocking happens and it was
actually a great guy from team
comeray who was messing around

00:17:24.010,00:17:27.413
in the TOR code and is like I
don’t know what this constant
is, but when I change this

00:17:27.413,00:17:32.852
constant it starts working again
so that was wonderful for him to
to find that and be able to fix

00:17:32.852,00:17:38.891
it in a week or two. So fast
forward a little bit more to
Egypt. There was a bunch of

00:17:38.891,00:17:43.029
interesting stuff happening
around the Arab Spring. You can
see in the graph where they

00:17:43.029,00:17:48.567
block facebook and you can see
in the graph where they unplug
the internet, and my favorite

00:17:48.567,00:17:53.239
part of this is there a lot more
people afterwards using TOR than
before, cause there were a lot

00:17:53.239,00:17:58.644
of people saying yeah yeah we
had a coup yeah .. a revolution
okay but the military still

00:17:58.644,00:18:02.415
watching everything they were
watching before, the
surveillance infrastructure is

00:18:02.415,00:18:07.653
still in place you're darn right
i'm to be trying to use him some
safety security tools. Okay so

00:18:07.653,00:18:14.260
fast forward a little bit more
uh, then they end up, Iran ended
up blocking toward using DPI

00:18:14.260,00:18:19.799
looking at a different TLS
parameter so.. that was, you can
see little red dot on the

00:18:19.799,00:18:24.670
right-hand side so there's a
much shorter event because I
happen to be at home at the time

00:18:24.670,00:18:28.674
looking at things somebody found
it, I figured out what it was,
we rolled out a patch like 12

00:18:28.674,00:18:34.146
hours later and it basically
didn't interrupt them much at
all.. and maybe that caused them

00:18:34.146,00:18:39.485
to not do that further arms race
but that's a crappy arms race in
general where we try to look

00:18:39.485,00:18:44.290
like SSL and we try to figure
out a way where we don't really
look like Firefox talking to

00:18:44.290,00:18:49.829
Apache, so we’ll come up with
with some better approaches but
in the meantime how many people

00:18:49.829,00:18:56.802
here know the horrible story of
Bluecoat in Syria? I see one
hand every time I ask there’s

00:18:56.802,00:19:01.273
one hand the matter the size of
the oh, oh three hands great so
a larger audience has three

00:19:01.273,00:19:06.812
people who know what it is. So
this is a story that everybody
should know about. Long ago in

00:19:06.812,00:19:12.318
2011 or something like that,
there were some folks from
Anonymous from tele comics who

00:19:12.318,00:19:17.323
found a misconfigured FTP server
in Syria with gigabytes of
Bluecoat logs on it and each

00:19:19.658,00:19:25.031
line in the log was this IP
address tried to access this
website and I allowed it or I

00:19:25.031,00:19:30.036
disallowed it. So it's just line
after line of line of IP address
and URL and whether it worked

00:19:32.238,00:19:36.542
and that's actually kind of
fucked up in general, that they
you know they have the

00:19:36.542,00:19:41.080
surveillance and censorship
infrastructure and that they
screwed up and put their logs

00:19:41.080,00:19:46.852
out but another piece of that is
serious actually, in the list of
places that American companies

00:19:46.852,00:19:51.357
aren’t supposed to sell their
stuff to. So these folks are
like hey, what you doing running

00:19:51.357,00:19:56.429
the surveillance censorship in
infrastructure in Syria and
Bluecoats like, oh no that's not

00:19:56.429,00:20:02.601
us and they’re like but the top
of the log lines says Bluecoat
version 1.5 point something and

00:20:02.601,00:20:07.606
they're like oh well yeah okay
we sold it to Dubai and how are
we supposed to know that the

00:20:07.606,00:20:13.179
Dubai resold it to Syria, and
said they’re like we we totally
shut off the auto update and

00:20:13.179,00:20:17.616
there's no way that that the
that these things are going to
continue getting their updates

00:20:17.616,00:20:22.021
so the folks from telecomics got
the serial number from the
Bluecoat device and connected to

00:20:22.021,00:20:26.559
the update server and they were
offered an update. So basically
Bluecoat lied every step of the

00:20:26.559,00:20:32.298
way and the the end of the story
is and then the state department
gave Bluecoat an award for their

00:20:32.298,00:20:37.369
cooperation in the
investigation. So it's kind of
sad story actually it continues

00:20:37.369,00:20:42.441
Bluecoat was sold to Symantec so
now Symantec runs the
surveillance and censorship

00:20:42.441,00:20:48.881
infrastructure and they probably
don't even know it. So this is a
recurring theme of these little

00:20:48.881,00:20:53.919
arms dealers in Sunnyvale
California who build these tools
and then their salespeople go

00:20:53.919,00:21:00.025
out and they try to sell it to
Burma and Syria and and and all
the other countries that they

00:21:00.025,00:21:04.763
can and it's even worse than
that so I was in a meeting a few
years ago with the German

00:21:04.763,00:21:09.969
foreign ministry and they were
trying to figure out what should
Europe do in terms of laws

00:21:09.969,00:21:16.709
about, like should we allow
Italian companies like a hacking
team to to deploy their stuff in

00:21:16.709,00:21:22.248
Saudi Arabia. What are the, what
are the constraints that we as
Europe should have? And one of

00:21:22.248,00:21:26.952
the meeting one of the
discussions I had was with the
telco engineer from UAE who was

00:21:26.952,00:21:32.992
like look you folks mandated the
back doors on all the routers,
you put all the lawful intercept

00:21:32.992,00:21:38.631
stuff in, and now you're angry
when my Prince plugs a port into
the lawful intercept port on the

00:21:38.631,00:21:44.436
router that you made.. you put
the back doors in there and now
you're upset when we use them so

00:21:44.436,00:21:50.276
there's a there's a big
discussion right now about how
about encryption and backdoors

00:21:50.276,00:21:56.348
and so on and one of the really
fucked up things is that nobody
arguing about encryption from

00:21:56.348,00:22:02.221
the FBI side, realizes there are
other countries in the world. So
once you build a tool and you

00:22:02.221,00:22:06.192
put your back door in it and
then other people use it and
they don't have the same

00:22:06.192,00:22:13.032
judicial process that we have,
even if ours were good, then
then you end up with a bunch of

00:22:13.032,00:22:17.269
different problems all around
the world. So part of the
challenge here is how do we

00:22:17.269,00:22:23.275
build tools that are safe no
matter which government is using
them and that don't enable

00:22:23.275,00:22:28.280
governments to start hurting
people even more. Okay so
speaking of that I had a really

00:22:30.783,00:22:35.487
interesting meeting with the
fellow in charge of the Tunisia
internet right after their

00:22:35.487,00:22:40.426
revolution so before revolution
he was like a mid-level engineer
and suddenly he was in charge of

00:22:40.426,00:22:44.597
the whole thing afterwards which
is awesome and he was the first
one, he gave a speech while I

00:22:44.597,00:22:49.134
was there, in french as that was
the language he was comfortable
with saying yes we use smart

00:22:49.134,00:22:53.973
filter and yes we pay them a
million dollars a year and
imagine how much food we could

00:22:53.973,00:22:57.509
buy for our country if we
weren't spending a million
dollars a year on the stupid

00:22:57.509,00:23:02.414
censorship stuff. So that was
awesome as the very first
country to admit to be censoring

00:23:02.414,00:23:08.487
and another interesting part of
that they don’t actually operate
smart filter themselves they

00:23:08.487,00:23:12.758
outsource the smart filter
operation to some foreign
company he wouldn't tell me

00:23:12.758,00:23:16.695
which one but I assume they're
in France or something so
there's some French company the

00:23:16.695,00:23:22.134
gets to see and decide what the
Tunisian military can do on the
internet? That's not just a

00:23:22.134,00:23:26.405
privacy thing, that's not just a
censorship thing, that's a
that's a national security thing

00:23:26.405,00:23:30.709
that the national sovereignty
thing where you outsource what
your internet looks like to some

00:23:30.709,00:23:35.881
foreign company and that happens
over and over around the world.
In the last interesting part of

00:23:35.881,00:23:41.120
the Tunisia story, apparently
they only pay a million dollars
cause then smart filter went to

00:23:41.120,00:23:47.559
Saudi Arabia and said it works
in Tunisia, you pay full price.
So there's a a lot of

00:23:47.559,00:23:53.666
interesting discussion to be had
about those companies. Okay so
moving on from the that that

00:23:53.666,00:23:59.305
particular Arab Spring world the
arms race with TLS is a crappy
one we can't just keep on

00:23:59.305,00:24:02.808
pretending to look like SSL
because it's they’re going to go
back and forth finding little

00:24:02.808,00:24:07.212
thing we fixed little thing the
real answer is what we call
pluggable transports the real

00:24:07.212,00:24:12.885
answer is you leave the privacy
anonymity side for TOR and then
separately you have modules that

00:24:12.885,00:24:18.691
you can pop in the transform the
TOR traffic into something that
people are are less likely to be

00:24:18.691,00:24:22.895
willing to block people
something that the people expect
or that they can't afford to

00:24:22.895,00:24:27.900
block or something like that,
and there are two successful
pluggable transports right now

00:24:27.900,00:24:32.338
they're deployed in the world
the first one is called
obfsproxy, obfuscating proxy and

00:24:32.338,00:24:37.042
the basic idea is you add
another layer of encryption on
top and the goal is that

00:24:37.042,00:24:42.648
somebody doing DPI to figure out
what protocol you're talking the
answer is I don’t recognize this

00:24:42.648,00:24:48.253
and had they’re forced to choose
do I block everything that I
can't classify in which case

00:24:48.253,00:24:54.293
this can be a huge false
positive, uh side or do I allow
things that I can classify and

00:24:54.293,00:25:00.499
then obfsproxy goes in, and the
other piece of it is called meek
or domain fronting and the idea

00:25:00.499,00:25:05.771
is that you row your traffic to
Google Cloud or Amazon Cloud or
Azure or something like that,

00:25:05.771,00:25:10.843
and from there you reach through
the TOR network using the cloud
services and that way there

00:25:10.843,00:25:15.781
forced either block Google or
not block Google. Ok, so that
was the background side of

00:25:15.781,00:25:21.887
things and i'm going to speed up
a little bit to cover some more
things. Okay so the next step uh

00:25:21.887,00:25:27.493
China again did a thing we were
not expecting it's called active
probing so we were thinking you

00:25:27.493,00:25:32.197
know the blocks are more bridges
they’ll DPI for other stuff, no
they looked at all the

00:25:32.197,00:25:37.403
connections that looked like
they might've been TOR like SSL
of some sort and then they make

00:25:37.403,00:25:42.441
a follow-up TOR connection of
their own to that destination
and talk the TOR protocol to it

00:25:42.441,00:25:47.880
and if the other side says yes
i'm a TOR bridge by talking the
TOR protocol then they cut that

00:25:47.880,00:25:52.618
connection and blacklist that ip
address so they can’t, they
basically have infrastructure

00:25:52.618,00:25:59.191
running at the nation level in a
backbone level in, in China
being able to make all these

00:25:59.191,00:26:05.998
outgoing connections ah, within
a second or so of when they see
something and so the fix is

00:26:05.998,00:26:10.335
another iteration of obfsproxy
where the client needs to prove
knowledge of some secret some

00:26:10.335,00:26:14.406
password so when you give out
the bridge line it comes with a
bunch more parameters including

00:26:14.406,00:26:20.112
a secret and if the client
connecting to the obfsproxy
doesn't know the secret then the

00:26:20.112,00:26:25.117
job of the obfsproxy bridge is
to act natural whatever that
means and act natural is kind of

00:26:27.653,00:26:31.657
like what do I do, what do I do
so that there's no fingerprint
and the best answer we have

00:26:31.657,00:26:36.161
right now is we wait for a
random number of seconds and we
hang up, because if we ever

00:26:36.161,00:26:40.933
provided an error that would be
a fingerprint, so we need to
come up with something that that

00:26:40.933,00:26:45.437
blends in with a lot of
background traffic in a way
that, that isn’t going to be

00:26:45.437,00:26:50.576
recognizable later. Okay so
their bunch of other interesting
stories that I’m happy to tell

00:26:50.576,00:26:55.581
you about later, Ethiopia for a
while DPI’d again on the SSL
handshake and they stopped, uh

00:26:59.084,00:27:04.990
Russia has an interesting story
so here's a graph of people
connecting into the TOR network

00:27:04.990,00:27:11.196
from Russia during a couple of
years ago and the fun part of
this graph is people inside

00:27:11.196,00:27:16.068
Facebook apparently have the
exact inverse of this graph of
Russia people connecting to

00:27:16.068,00:27:21.940
Facebook, so this was when
Russia blocked Facebook twice,
three times and then a bunch of

00:27:21.940,00:27:28.046
people in Russia decided to use
the TOR network in order to
reach Facebook safely. And then

00:27:28.046,00:27:32.584
Turkey’s been doing some weird
stuff that we still don't fully
understand there's definitely

00:27:32.584,00:27:37.022
DPI involved I don't think
there's IP address blocking,
they do it and then they stop

00:27:37.022,00:27:41.093
and then they started and they
do something else so they been
they been experimenting with a

00:27:41.093,00:27:47.199
lot of things recently and then
Venezuela is another fun example
they have an ISP called cantv

00:27:47.199,00:27:52.104
which is sort of their like
Comcast equivalent and it
blocked the public TOR relays

00:27:52.104,00:27:58.277
and a small set of public TOR
bridges but it didn't do any DPI
so it was just blocking by IP

00:27:58.277,00:28:03.215
address. Okay so another
challenge that we've got in
China right now there are a

00:28:06.618,00:28:11.189
couple of other circumvention
tool projects is one called
lantern that actually reuses the

00:28:11.189,00:28:15.360
obfsproxy design and the idea
it's supposed to be modular it
doesn't have to be just TOR it

00:28:15.360,00:28:20.232
could be anything at so they
they give out these bridges to
their people after while the

00:28:20.232,00:28:23.969
bridges stop working as well are
they being throttled is somebody
learning about them, how are

00:28:23.969,00:28:28.340
they learning about them, so
there's a bunch of mysteries and
design questions to solve there

00:28:28.340,00:28:35.213
but the important lesson is this
feedback loop is really bad so
you you do a thing and it's not

00:28:35.213,00:28:38.717
really clear whether they
blocked a thing or not so you
don't know whether you need to

00:28:38.717,00:28:43.288
change so that the tighter
feedback loop we can have and
the more certainty we can have

00:28:43.288,00:28:48.293
about what's going on the better
everything works, and recently..
so used to be that China looked

00:28:51.863,00:28:57.302
for a particular TLS pattern,
something in the certificate,
something in the cipher suites

00:28:57.302,00:29:02.774
of the clients are offering and
if both of those match then it
trigger the active probing we've

00:29:02.774,00:29:06.745
changed the cipher suites to try
to look like the more recent
Firefox and the more recent

00:29:06.745,00:29:11.750
Apache and some combination of
patterns doesn't trigger the act
of probing right now, so are

00:29:14.052,00:29:19.958
they not following up as closely
as they could? There's a lot to
be researched in there. And then

00:29:19.958,00:29:26.698
another piece let's not forget
the like the political side of
things, so couple of years ago

00:29:26.698,00:29:32.838
apparently there were these
folks from the CIA who had their
own anonymity system and Iran

00:29:32.838,00:29:36.174
learned about it and then
watched who was using it, and
then killed everybody and also

00:29:36.174,00:29:41.480
they told China about it so then
China did the same thing to the
spies there, so there's one of

00:29:41.480,00:29:47.152
the lessons there is don't have
your own anonymity system
because then everybody who uses

00:29:47.152,00:29:52.791
it is going to be you and if
they find some users and they
start learning how works so you

00:29:52.791,00:29:57.863
need a lot of different groups
to blend in with but the more
important lesson from the the

00:29:57.863,00:30:03.669
censorship side of things.
Australia censors their internet
England has this thing called

00:30:03.669,00:30:06.905
the internet watch foundation
which is part of their
government which censors the

00:30:06.905,00:30:12.778
internet, Denmark censors the
internet, Sweden censors the
internet so when governments go

00:30:12.778,00:30:17.849
to China and say hey you're
being a bad government by by
preventing people from reaching

00:30:17.849,00:30:22.854
BBC, China quite reasonably says
look were just keeping our
citizens safe just like

00:30:22.854,00:30:27.325
everybody else. Why why are you
picking on us were were
protecting our users from the

00:30:27.325,00:30:33.732
internet and so one lesson there
is maybe we should work on
cleaning up what we consider,

00:30:33.732,00:30:38.236
you know western countries and
the fact that they are excited
to be censoring their internet

00:30:38.236,00:30:43.442
and if we can't solve the fact
that Australia was a sensor how
on earth arena solve the fact

00:30:43.442,00:30:49.147
that Saudi Arabia wants to
censor. And speaking of the
political side these are the

00:30:49.147,00:30:55.253
actual honest to god cyber
police in China these are the
official cyber police in China

00:30:55.253,00:31:00.559
and this goes back to the yo
know making it fun side of
things we’re not a regime out to

00:31:00.559,00:31:06.264
stop things we’re just you know
keepin the internet safe cause
this is fun and if you see one

00:31:06.264,00:31:11.470
of these people on some of the
websites you go to then it helps
remind you about what websites

00:31:11.470,00:31:15.640
you should go to and what
websites you shouldn't go to so
it's not just about censorship

00:31:15.640,00:31:20.212
it's about creating an awareness
among the users that they are
being watched and then they can

00:31:20.212,00:31:25.217
control themselves. And I should
also mention so there's a
province of China called East

00:31:27.819,00:31:32.524
Turkestan, they actually call it
New Province in Chinese and
right now the people in China

00:31:32.524,00:31:37.529
are basically wiping out the
folks who live there it's at the
point where the, the folks who

00:31:40.432,00:31:44.436
live there have a live in Han
Chinese person who lives in
their house and watches them and

00:31:44.436,00:31:49.207
reports on them and they take
the kids away and they put them
in reeducation camps and you get

00:31:49.207,00:31:53.612
to see your kid for one hour a
week on the other side of the
chain-link fence but your kid

00:31:53.612,00:31:59.251
spends the whole hour yelling at
you about how you’re bad Chinese
person so they are genocide-ing

00:31:59.251,00:32:04.623
the people who live there and I
was talking to some folks there
and i'm like so here's PGP and

00:32:04.623,00:32:09.861
here's TOR in there like you I
can't go a block without showing
papers that I don't have, they

00:32:09.861,00:32:16.668
take away my devices and install
things on them, they’re living
in my house so here's an

00:32:16.668,00:32:22.174
important example where a tool
for internet privacy is not
going to solve some of the

00:32:22.174,00:32:28.980
really bad things that are
happening around the world. Okay
so what are some of the newer

00:32:28.980,00:32:34.119
things were they were deploying
in terms of of tools that can be
helpful for later one of the

00:32:34.119,00:32:40.625
really interesting ones is
called snowflake the idea, so in
the past for obfsproxy you.. you

00:32:40.625,00:32:45.363
find a nice person who knows
what Linux is and they apt-get
install obfs for proxy apt-get

00:32:45.363,00:32:50.735
install TOR, they added a text
file, maybe opened a port and if
you knew all those words you're

00:32:50.735,00:32:54.806
in good shape but most people in
the world don't do that, so the
cooler way to do that, 10

00:32:54.806,00:32:58.043
minutes awesome, the cooler way
to do that is a tool called
snowflake which is Javascript

00:32:58.043,00:32:59.978
that runs in your browser, so
i'm a helpful person in an
non-censored area I wanna help

00:32:59.978,00:33:01.980
out the TOR world so I installed
the snowflake extension or I go
to a website which gives me some

00:33:01.980,00:33:06.985
javascript and suddenly i'm a
TOR bridge without installing
any new software, it's all

00:33:16.761,00:33:22.567
running inside my browser and
uses webrtc so it does NAT
piercing correctly and the goal

00:33:22.567,00:33:28.773
there is to have a blizzard of
snowflakes all around the world
where blocking them by IP

00:33:28.773,00:33:33.011
address isn't going to make
sense because you can end up
blocking every browser on the

00:33:33.011,00:33:38.516
internet and blocking them by
DPI doesn't make sense because
webrtc is what google hangouts

00:33:38.516,00:33:45.023
uses its what a bunch of video
chat things use so if we can
actually use the real webrtc the

00:33:45.023,00:33:51.296
normal browsers use when they're
talking to each other and doing
video chat and if we can get an

00:33:51.296,00:33:57.702
army of millions of snowflakes
then then hopefully this will be
a cool new move forward in the

00:33:57.702,00:34:03.541
arms race. So you can install
the Firefox extension,
snowflake, right now and it will

00:34:03.541,00:34:07.779
turn you into one of these
volunteers so used to be a few
years ago that we didn't need

00:34:07.779,00:34:12.817
the extension side there's just
a website you serve some
javascript and you could put it

00:34:12.817,00:34:18.356
on your Facebook page you could
put it in an ad if you're evil
which were not, So you basically

00:34:18.356,00:34:22.460
all sorts of different ways of
giving people the javascript
except the browser world is

00:34:22.460,00:34:27.399
moving to not running things in
the background if there's a tab
and it’s not the primary tab

00:34:27.399,00:34:31.803
that’s open, then it doesn't run
the javascript there so we need
to shift to a world where you

00:34:31.803,00:34:37.709
install an extension and then
you're opting in it's all above
board and you're volunteering to

00:34:37.709,00:34:42.314
be one of these relays, so
please install the snowflake
extension and were working on

00:34:42.314,00:34:46.384
coming up with a better GUI and
better visualization and
feedback about how many

00:34:46.384,00:34:51.022
snowflakes there are in the
world. And if you're a chrome
person rather than Firefox

00:34:51.022,00:34:55.360
person there's another one
called Cupcake that's been
around for longer and now has

00:34:55.360,00:35:01.700
snowflake built-in as well and
it's got this cool ah, uh icons
that tell you how your cupcake

00:35:01.700,00:35:06.838
is doing are you helping or is
it sad is it happy stuff like
that, so we love some help on

00:35:06.838,00:35:12.978
the development side of
snowflake and cupcake. At the
same time we need more obsfor

00:35:12.978,00:35:18.450
bridges so here's a URL
community.org
project.org/relay/set up/bridge

00:35:18.450,00:35:23.621
and please go there and follow
the instructions, If you're a
Debian person it's all pretty

00:35:23.621,00:35:28.627
easy the most complicated thing
is opening a, a port on your
firewall or maybe you have a

00:35:28.627,00:35:33.598
computer on the real internet
and you don't even have to do
that step so it be wonderful to

00:35:33.598,00:35:38.303
have some more obfs bridges so
that we can have more
flexibility about giving out

00:35:38.303,00:35:43.041
more addresses in more ways
without getting blocked as
quickly, and the future were

00:35:43.041,00:35:47.879
experimenting with a apt-install
TOR servers that like gives you
a decision tree sort of thing

00:35:47.879,00:35:51.249
where it says you want to be a
bridge and you say yes and it
says do you want to open this

00:35:51.249,00:35:55.820
and you say yes and then you
don’t have to know what a text
file is in order to be helping

00:35:55.820,00:36:02.227
out and running and obsfor
bridge. Okay so i'm gonna skip a
couple more, i'll briefly talk

00:36:02.227,00:36:06.998
about some of these things and
then we'll get to the end, so
one of the important pieces.. we

00:36:06.998,00:36:12.103
need some sort of feedback cycle
for how, so we’re trying to give
out bridges and we want to give

00:36:12.103,00:36:17.308
them out in a way that works
what does works mean? One of the
answers is imagine you have a

00:36:17.308,00:36:22.580
bunch of different bridge
distribution channels and each
channel it's maybe you give it

00:36:22.580,00:36:28.353
out over gmail maybe you give it
to a nice guy in shanghai there
bunch of different possible

00:36:28.353,00:36:33.358
approaches to a distribution
channel and let’s see, great. So
let's think about for each

00:36:37.295,00:36:42.634
channel how much use do the
bridges get that we give out
over that channel? Did they end

00:36:42.634,00:36:46.771
up being used a lot before it
gets blocked? Does it never get
blocked? Does it get blocked

00:36:46.771,00:36:52.510
quickly? Does it never get used
much but also it never gets
blocked? And then let's figure

00:36:52.510,00:36:57.749
out how quickly the blocking
actually happens and then let's
reward the channels that end up

00:36:57.749,00:37:02.053
giving out bridges well so if
they're a bunch of channels that
get bridges blocked quickly they

00:37:02.053,00:37:05.590
don't get more bridges if their
bunch of channels that work
really well and they end up

00:37:05.590,00:37:10.462
having a lot of users and
they’re working well then we
shift more bridges to being

00:37:10.462,00:37:14.599
allocated through that. So in
theory there could be like a
dynamic feedback process where

00:37:14.599,00:37:19.170
we automatically learn which
distribution channels are
working well and automatically

00:37:19.170,00:37:24.175
give the bridges out to those..
turns out that measuring bridge
reachability is really hard, do

00:37:26.778,00:37:32.050
we install a computer in China
and scan all the bridges and
hope that China never notices

00:37:32.050,00:37:37.989
that were doing that? Do we give
out a few addresses to each
volunteer or let them scan then

00:37:37.989,00:37:42.827
hope that the volunteers are the
bad guys trying to learn them so
there is a project called ooni

00:37:42.827,00:37:49.267
the open observatory for network
interference that is basically
of a mobile app that lets you

00:37:49.267,00:37:54.405
test a bunch of things from your
local network, its main goal is
to figure out how am I being

00:37:54.405,00:38:00.378
censored but maybe we can also
use this as an infrastructure
for learning about which bridges

00:38:00.378,00:38:05.884
are blocked where and in what
how reachability works. So there
couple other interesting

00:38:05.884,00:38:10.655
upcoming things, there's a tool
called format transforming
encryption or marionette and the

00:38:10.655,00:38:16.161
idea is that it transforms the
traffic into whatever regular
expression you describe, so if

00:38:16.161,00:38:22.734
you can describe HTTP as a regex
then it will transform toward
traffic into what looks like

00:38:22.734,00:38:27.806
legitimate unencrypted HTTP
traffic on the wire and if you
got a DPI engine that has a

00:38:27.806,00:38:33.111
classifier for HTTP and it says
yes this is HTTP then the
classifier thinks it should let

00:38:33.111,00:38:36.848
it through, let normal
unencrypted web browsing
through, another approach the

00:38:36.848,00:38:42.020
people working on is called
decoy routing and the idea is
that the user does an SSL

00:38:42.020,00:38:46.491
connection somewhere and
something in the middle of the
network running it like an ISP

00:38:46.491,00:38:53.298
like verizon or something, looks
at a stenographic tag inside the
SSL handshake and says aaah this

00:38:53.298,00:38:59.137
is decoy routing traffic i'm
going to reroute it internally
to the TOR network or to some

00:38:59.137,00:39:05.443
circumvention tool in a way that
the local uh ISP for the user
thinks that they're talking to

00:39:05.443,00:39:11.316
the decoy destination but
actually the traffic is being
routed redirected to somewhere

00:39:11.316,00:39:16.321
else. Okay so arms races, the
censorship arms race sucks
because China has billions of

00:39:18.623,00:39:23.161
dollars and there a lot of
companies like Cisco and
Bluecoat and so on who are

00:39:23.161,00:39:27.265
building tools like this the
surveillance arms race is worth
at least in the censorship case

00:39:27.265,00:39:32.937
you try a thing, it doesn't work
you change it it works! great
we, the cycle is pretty simple.

00:39:32.937,00:39:38.209
From the surveillance side you
try a thing, you don't know if
they saw you, so you don't know

00:39:38.209,00:39:43.348
if you need to change it and
then there's no feedback loop so
maybe we need a new Ed Snowden

00:39:43.348,00:39:47.952
coming out every week with a new
set of documents, I don't know
how to end up with that feedback

00:39:47.952,00:39:53.091
loop in a way that you can tell
whether the surveillance is
working. Okay so how can you

00:39:53.091,00:39:57.996
help on this side of things? So
run an obfs for bridge, we
mentioned that, be a snowflake,

00:39:57.996,00:40:04.402
we mentioned that. Please teach
your friends all about TOR there
a lot of mainstream journalism

00:40:04.402,00:40:10.141
places that want to scare people
about the internet with pictures
of icebergs and discussions of

00:40:10.141,00:40:16.614
you know 99 other internets out
there and dark webs and so on so
please help us teach the world

00:40:16.614,00:40:22.220
what TOR actually is how TOR
actually works why privacy is
important on the internet and

00:40:22.220,00:40:27.659
there's a research community pet
symposium.org the rights a bunch
of interesting research papers,

00:40:27.659,00:40:32.563
if you want to do grad school on
TOR or you're in grad school and
you want to work on TOR love to

00:40:32.563,00:40:37.935
chat with you more and speaking
of the donation side we are
running a bug smash fund this

00:40:37.935,00:40:42.874
August all of the month of
August and the goal is, a lot of
our normal funders only want to

00:40:42.874,00:40:47.345
fund some shiny new feature and
we actually want to go through
and fix all the bugs and make

00:40:47.345,00:40:53.017
things stable and actually make
it reliable and work the way
that everybody expected it to

00:40:53.017,00:40:57.455
and funders don't really want to
fund that sort of thing so we
love to have your help getting

00:40:57.455,00:41:02.393
the word out about us about the
bug smash fund, And then we have
an awesome new onion badge that

00:41:06.197,00:41:12.203
a great volunteer made we also
have a booth for the first time
ever in the vendor area so if

00:41:12.203,00:41:18.176
you want to see the onion badges
I believe that $40 I think is
what they said for getting one

00:41:18.176,00:41:23.448
of these cool and i'll turn on
the the blinky lights as it's
going, happy to show you this

00:41:23.448,00:41:29.821
more later and then, again we
mention the booth for the first
time ever were in the vendor

00:41:29.821,00:41:34.525
area I hear there's a mob right
there right now and i'm going to
answer a few questions in the

00:41:34.525,00:41:39.030
back with my bright green shirt
and then i'm gonna lead the mob
over the vendor area and i'm in

00:41:39.030,00:41:43.067
a be hanging out there for the
rest of the day in my bright
green shirt answering your TOR

00:41:43.067,00:41:48.072
questions Thank you!

