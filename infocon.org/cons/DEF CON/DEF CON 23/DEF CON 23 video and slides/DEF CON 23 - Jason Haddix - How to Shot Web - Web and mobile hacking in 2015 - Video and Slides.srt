00:00:00.033 --> 00:00:03.504
this is how to shot web web
hacking and mobile hacking in

00:00:03.504 --> 00:00:07.374
2015. I really appreciate
everyone being here he's way

00:00:07.374 --> 00:00:13.981
smarter than me this is me I
work for bug crowd I'm director

00:00:13.981 --> 00:00:18.085
-- I manage a team of hackers
behind the scenes by bounty can

00:00:18.085 --> 00:00:24.057
you write the program. In 2014 I
participated as a researcher.

00:00:24.057 --> 00:00:27.694
This talk is about my mend I use
to do web hack king as well as

00:00:27.694 --> 00:00:33.567
stuff I learned from other
researchers while doing this

00:00:33.567 --> 00:00:40.140
work. What is this really about.
It's just -- I put a lot of --

00:00:40.140 --> 00:00:46.146
my wife says it's okay. So more
specifically what I did I

00:00:51.351 --> 00:00:55.188
started off with my mend which
is a pen tester mend when I

00:00:55.188 --> 00:01:00.160
started doing this, application
assessment. And so, I then went

00:01:00.160 --> 00:01:04.998
out manually parse d out all of
the public researchers of all

00:01:04.998 --> 00:01:08.936
the badasses bug hunter I new
about a hundred visit -- -- as

00:01:08.936 --> 00:01:11.238
well as people I new were good
at it I went through ever

00:01:11.238 --> 00:01:17.244
article from the beginning of
the crowd source bug bounty seen

00:01:25.986 --> 00:01:28.689
and also all of the Google and
Facebook plans inter Bryce -- I

00:01:28.689 --> 00:01:33.694
created a presentation what I
disstilled around that

00:01:33.694 --> 00:01:37.564
knowledge. This is kind of the
stuff I'm going to bring in this

00:01:37.564 --> 00:01:40.467
presentation. Bug bounty testing
from web -- discovery

00:01:40.467 --> 00:01:46.473
techniques, parameters often a
tack useful fuzz strings, by

00:01:51.645 --> 00:01:58.251
pacer filter and some too long I
think is cooler than other too

00:01:58.251 --> 00:02:02.255
long. Cool. So the first
sections philosophy. So the

00:02:02.255 --> 00:02:06.059
differences between kind of bug
bounty hunting and being a web

00:02:06.059 --> 00:02:12.332
pen test templet both sides and
they are both right but when you

00:02:12.332 --> 00:02:16.970
get down to the practical work
you introduce a lot of stuff

00:02:16.970 --> 00:02:21.041
here, up under dues time ton to
a security tester they are not

00:02:21.041 --> 00:02:23.310
use to exesion when you are
doing this kind of stuff unless

00:02:23.310 --> 00:02:28.248
you are playing in CTF I played
in CFF's I was kind of used to

00:02:28.248 --> 00:02:36.189
it. You are only -- for what you
find and not the hours you put

00:02:36.189 --> 00:02:39.559
in, so, I mean this is a basic
overview of how they differ the

00:02:39.559 --> 00:02:42.195
talk is more about the technical
stuff. Yeah, you basically

00:02:42.195 --> 00:02:47.034
tailor method based around
finding stuff in 20 percent as

00:02:47.034 --> 00:02:50.904
opposed top 80 percent
application assessment we'll go

00:02:50.904 --> 00:02:57.811
into how that 80/20 rule kind of
fits in the rest of the slides.

00:02:57.811 --> 00:03:00.847
So if you are doing regular web
app assess. -- this is usually

00:03:00.847 --> 00:03:04.217
what you are trained from and
what your internal method is

00:03:04.217 --> 00:03:09.089
built off mostly any of the good
consultants use and authors are

00:03:09.089 --> 00:03:11.691
you know super great testers,
right but these take from you A

00:03:11.691 --> 00:03:19.332
to Z and you even though them
find good bugs they take a long

00:03:19.332 --> 00:03:26.706
time to complete in full scale.
So bug bounties are different if

00:03:26.706 --> 00:03:30.143
you want to do web hack and
these are what you go for my

00:03:30.143 --> 00:03:35.615
talk as little bit different.
Let's talk about discovery in

00:03:35.615 --> 00:03:40.120
web application assessment for a
bounty. What you want to do is

00:03:40.120 --> 00:03:44.491
basically find the road less
traveled if you are aiming to

00:03:44.491 --> 00:03:49.129
get paid I think so, you can a
tack the flag ship application

00:03:49.129 --> 00:03:51.765
that the company has, right.
That's not where the

00:03:51.765 --> 00:03:56.603
vulnerability is going to be
that application has been tested

00:03:56.603 --> 00:03:59.740
by a pen test team probably had
a bug bounty on it for a long

00:03:59.740 --> 00:04:03.110
time. Was really want to find
part of the -- maybe has been

00:04:03.110 --> 00:04:08.181
secure web servers on different
ports. You what about to find

00:04:08.181 --> 00:04:13.453
acquisition maybe the company
had recently that came from a

00:04:13.453 --> 00:04:18.592
different development team and
they might have a whole view of

00:04:18.592 --> 00:04:21.428
problems that came from a whole
different group. You want to

00:04:21.428 --> 00:04:25.499
look at functional will the
changes and redesigns on sites.

00:04:25.499 --> 00:04:28.835
Mobile websites because you are
set to renter differently on

00:04:28.835 --> 00:04:31.905
your phone. And also a new
mobile app version when you are

00:04:31.905 --> 00:04:35.742
testing. We are going to go into
tools and stuff I used to find

00:04:35.742 --> 00:04:43.283
for you to a tack. So recouldn't
MG is this tool that a lose to

00:04:43.283 --> 00:04:50.824
you do -- one part has all these
modules to do subdomain

00:04:50.824 --> 00:04:55.362
discovery. Now subdomain
discovery is a big part of

00:04:55.362 --> 00:04:59.232
finding application left out
there marketing spins up a

00:04:59.232 --> 00:05:05.172
sight, -- DEF -- finding those
and hacking those code execution

00:05:08.975 --> 00:05:12.445
through those sites is kind of
where you can get big pay

00:05:12.445 --> 00:05:16.082
outside. So this script what it
does is it scrapes Google for

00:05:16.082 --> 00:05:21.988
all -- given web property so
let's say Acme.com this will --

00:05:21.988 --> 00:05:27.394
for everything that is in ACME
and remove those result until

00:05:27.394 --> 00:05:32.799
you are down to this long list
of subdomains. Also scrapes

00:05:32.799 --> 00:05:37.704
being -- net craft, subdomains
like common fires tool would

00:05:37.704 --> 00:05:44.578
this is on get had you been wrap
around reCON installed if to you

00:05:44.578 --> 00:05:50.417
use -- you can pop the script in
and go. Yes, so this is the

00:05:50.417 --> 00:05:53.253
output of something like that
against the company like this.

00:05:53.253 --> 00:05:58.258
You can see -- probably a lot of
domains here that have gone

00:05:58.258 --> 00:06:05.532
under assessed as far as you go,
so, -- this is that idea of it

00:06:05.532 --> 00:06:09.369
rating through Google to find
subdomains here you have sight

00:06:09.369 --> 00:06:14.274
then minus dub dub dub sites I
found on its first hit sand box

00:06:14.274 --> 00:06:17.944
I removed that this is the
scraping that the cool -- tool

00:06:17.944 --> 00:06:23.049
-- is doing. You get credit
plier, business or shopping or

00:06:23.049 --> 00:06:28.321
advertising and you just keep on
removing these until you have

00:06:28.321 --> 00:06:33.360
all of them. Then you -- then
you end up with a huge list of

00:06:33.360 --> 00:06:37.998
sites to assess. Then you want
to go through and on your entity

00:06:37.998 --> 00:06:40.900
that you are attacking you want
to find mergers or acquisition

00:06:40.900 --> 00:06:45.071
that may be on -- they just
purchased accompany, purchased

00:06:45.071 --> 00:06:47.407
by Facebook they got popped as
soon as they were a choired they

00:06:47.407 --> 00:06:53.413
were not under Facebook six
month rule I don't know if it's

00:06:59.219 --> 00:07:02.455
six month I can't remember how
long. But yeah they got popped

00:07:02.455 --> 00:07:04.924
immediate until was a whole
different DEF team. They got hit

00:07:04.924 --> 00:07:08.328
with injection and custom header
that was great well not great

00:07:08.328 --> 00:07:14.334
but it was good for the bounty
hunter. Wikipedia, update these

00:07:18.038 --> 00:07:20.573
things for stock reasons so keep
an eye on these if you are --

00:07:20.573 --> 00:07:25.345
your company has to purchase
something else they have new

00:07:25.345 --> 00:07:31.351
domain may not be in the bug
about tea -- there's also a

00:07:37.090 --> 00:07:43.163
repository of links of ever kind
of -- that's comes out on pay

00:07:43.163 --> 00:07:48.268
pal and Googled. This one is
post -- hosted and Facebook I

00:07:48.268 --> 00:07:53.406
have no idea its linked it has
everything high percent linked

00:07:53.406 --> 00:07:58.578
these are the blog articles. Why
is this important if somebody

00:07:58.578 --> 00:08:02.182
already found these bugs.
Because, bugs get represented

00:08:02.182 --> 00:08:04.651
across the domain In different
places. So you can tell a lot

00:08:04.651 --> 00:08:08.455
about an organization once you
read these articles and find the

00:08:08.455 --> 00:08:12.092
same bug in other locations like
the subdomains may be rogue --

00:08:12.092 --> 00:08:16.062
how they filter out input you
get a lot of in tell around the

00:08:16.062 --> 00:08:23.203
application, so, you no really
doing a lot of research on your

00:08:23.203 --> 00:08:27.907
target can help but it's not the
fast stuff so so port scanning I

00:08:27.907 --> 00:08:30.443
mentioned port scanning, it's
not just for net pen, so, yeah,

00:08:30.443 --> 00:08:35.448
I mean how I hacked Facebook
there was an article by Ryan I

00:08:35.448 --> 00:08:39.819
started out port scanning found
a weird server he got in --

00:08:39.819 --> 00:08:45.759
simple as that 8 --> 000 dollar bug
right or even more I don't

00:08:45.759 --> 00:08:51.765
remember. So, I asked do the net
the Microsoft domain that you

00:08:54.401 --> 00:09:00.340
know -- that already opened to
the world with MS12 zero 20 on

00:09:00.340 --> 00:09:04.978
it vulnerable so that was a
thing. Go ahead and use simple

00:09:04.978 --> 00:09:09.416
map syntax to start port
standing all of your sites make

00:09:09.416 --> 00:09:13.453
sure you check all those
services this syntax will port

00:09:13.453 --> 00:09:18.958
scan for all ports on a domain
as well as pull out any HTTP

00:09:18.958 --> 00:09:24.964
servers and display those it's a
sin scan and OS -- so. So

00:09:27.434 --> 00:09:31.204
mapping so you found all of
these new servers right like

00:09:31.204 --> 00:09:33.606
maybe subdomains or maybe you
found an acquisition and

00:09:33.606 --> 00:09:37.544
something like that now you want
to move you want to move into

00:09:37.544 --> 00:09:40.380
mapping an individual
application, so, and take and

00:09:40.380 --> 00:09:43.917
notes is really important when
you are doing this whether

00:09:43.917 --> 00:09:48.521
inside of like note pad or you
know just using pen and paper

00:09:48.521 --> 00:09:53.660
like I use ever note all my bugs
or in Temples I can copy and

00:09:53.660 --> 00:09:57.597
paste disclosure E-mail. So
these are mapping tips that I

00:09:57.597 --> 00:10:01.034
use right away. Google is
actually your friend you can get

00:10:01.034 --> 00:10:04.404
a lot of information -- I know
there's parameter par sink

00:10:04.404 --> 00:10:11.611
scripts I couldn't find a good
one for this presentation you

00:10:11.611 --> 00:10:17.484
know just parse parameters out
of the Google like catch stuff

00:10:17.484 --> 00:10:21.221
but really the next big thing is
directory reinforcing finding

00:10:21.221 --> 00:10:24.691
unlinked content content that's
not supposed to be there. A lot

00:10:24.691 --> 00:10:28.628
of beam use content discovery
for this kind of thing that's

00:10:28.628 --> 00:10:32.565
good they are good list but
those list were created by going

00:10:32.565 --> 00:10:35.869
out spider the internet and then
prioritizing them. There's some

00:10:35.869 --> 00:10:40.139
other lifts that are better for
this type of work, so, the list

00:10:40.139 --> 00:10:44.611
or these list that came out of
talk maybe four or five years

00:10:44.611 --> 00:10:49.449
ago raft was application proxy
it was a decent one but since

00:10:49.449 --> 00:10:55.455
been discontinued its list for
directory reinforcing has lived

00:10:58.992 --> 00:11:03.463
on. They are a spider of the
internet robot do the text files

00:11:03.463 --> 00:11:06.232
everything that everybody
doesn't want you to see is in

00:11:06.232 --> 00:11:10.036
this directory group forcing
list super sick I can't tell you

00:11:10.036 --> 00:11:13.339
how many bugs I found just using
this list like couldn't figure

00:11:13.339 --> 00:11:17.677
files all over the place.
There's another list like this

00:11:17.677 --> 00:11:24.317
they went out and spider all the
project if your sight or target

00:11:24.317 --> 00:11:30.423
is open source place you can
take all the paths have have

00:11:30.423 --> 00:11:35.495
been -- get application or find
config files. So after you do

00:11:35.495 --> 00:11:39.032
some unlink content discovery or
directory re-- you can try to

00:11:39.032 --> 00:11:45.738
identify platform. So, there's
just some really simple wins

00:11:45.738 --> 00:11:53.513
here -- you can alcoholic and
looking at the heeders the

00:11:53.513 --> 00:11:58.451
comments in the pages analytic
things that have been integrated

00:11:58.451 --> 00:12:01.487
they will give you the whole
server stack they will give you

00:12:01.487 --> 00:12:04.524
version numbers if they can
identify them. Retire do the JS

00:12:04.524 --> 00:12:12.498
one of my new favorite it will
profile all of the server side

00:12:12.498 --> 00:12:17.870
Java script -- as well as give
you all the vul never viability

00:12:17.870 --> 00:12:23.009
before that patch or your
vulnerable -- list of prioritize

00:12:23.009 --> 00:12:30.617
process script tig. Once you
identify all of these server

00:12:30.617 --> 00:12:35.054
version numbers check nor CVE
and server type stuff that's

00:12:35.054 --> 00:12:39.225
standard that's web stuff. But
these are good -- tools. Have

00:12:39.225 --> 00:12:42.161
you happen tho come across SMS
you want to use these two tools

00:12:42.161 --> 00:12:49.836
curative scan for word compress
a lot of people use this

00:12:49.836 --> 00:12:54.340
already. It will identify all
plug ins and users for word

00:12:54.340 --> 00:12:57.744
compress install as well as look
up any bones that are associated

00:12:57.744 --> 00:13:01.314
with those plug ins that have
been disclosed. And then SMS map

00:13:01.314 --> 00:13:06.719
for -- and what is the other SMS
-- so those are the two that

00:13:06.719 --> 00:13:12.725
have really yielded any value
for me across SMS. You see a

00:13:15.795 --> 00:13:22.001
screen shot of curative scan.
And its you know found aversion

00:13:22.001 --> 00:13:25.405
of a plug in or theme that has a
file -- sometimes there's false

00:13:25.405 --> 00:13:31.110
positives honestly for what this
script does it provides so much

00:13:31.110 --> 00:13:36.449
value so its great. So the
directory we talked about a

00:13:36.449 --> 00:13:39.886
little bit earlier the work flow
for this a lot of people do I

00:13:39.886 --> 00:13:42.522
just put this slide in here
because I see a lot of people do

00:13:42.522 --> 00:13:46.359
it a little bit weird I see
people -- off the top level path

00:13:46.359 --> 00:13:49.929
a lot and then just stop right
they'll get errors don't know

00:13:49.929 --> 00:13:56.703
what to do with it they'll go to
Acme.com and go to 200, 404, and

00:13:56.703 --> 00:14:00.973
more 404 you know there's
nothing there then they'll hit

00:14:00.973 --> 00:14:04.677
control panel and see 401 I
can't do anything I'm not

00:14:04.677 --> 00:14:08.047
authorized right so they --
after control panel there's so

00:14:08.047 --> 00:14:11.951
many like messed up access
control on web server bugs you

00:14:11.951 --> 00:14:15.321
can explicit if you route -- I
just see this a lot where people

00:14:15.321 --> 00:14:19.492
stop after the top level domain
that's kind of the work flow you

00:14:19.492 --> 00:14:25.665
are doing there. Some other
things that you can do is

00:14:25.665 --> 00:14:28.801
mapping and bone discovery using
open source intelligence. Five

00:14:28.801 --> 00:14:32.305
sites six methods that you can
use to find already publish bugs

00:14:32.305 --> 00:14:34.307
or almost all right public bugs
I guess they are considered --

00:14:34.307 --> 00:14:40.179
or whatever access .com, punk
spider a burden of proof engine

00:14:40.179 --> 00:14:46.185
that scans the internet if your
car get is a high profile sight

00:14:52.825 --> 00:14:55.394
information might all right be
in here you can pull it out and

00:14:55.394 --> 00:14:59.265
use it to your van tach. Even if
those bugs have already been

00:14:59.265 --> 00:15:02.969
disclosed. I found bugs on here
not dis-- that's actually worked

00:15:02.969 --> 00:15:06.672
before it was like a super easy
win. Help you get a feeling for

00:15:06.672 --> 00:15:10.343
what the company has faced
before as far as prevalent

00:15:10.343 --> 00:15:14.747
across side -- file up loads and
then you can do regression

00:15:14.747 --> 00:15:18.384
testing on all the domains up
found earlier in the

00:15:18.384 --> 00:15:22.421
presentation. Go out and use
these resources to try and find

00:15:22.421 --> 00:15:26.459
bugs in the platter form as
quickly as possible they are

00:15:26.459 --> 00:15:30.863
free and out L the customer
should know about them any way

00:15:30.863 --> 00:15:35.568
its the responsible thing to do.
Okay. So this is my intern Ben,

00:15:35.568 --> 00:15:39.338
he's never spoken before at DEF
CON neither have I this is my

00:15:39.338 --> 00:15:43.676
first speaking but he did an
awesome project and he's going

00:15:43.676 --> 00:15:49.248
to talk about it for a couple
seconds I really like it so. >>

00:15:55.421 --> 00:15:58.724
[Applause] >> So hello everyone
my name is Ben. I'm on Jason's

00:15:58.724 --> 00:16:04.664
team. For the past couple months
we actually gathered a bunch of

00:16:06.966 --> 00:16:11.470
files that includes all the date
to for each Bugs Bunny program

00:16:11.470 --> 00:16:16.142
that's out there 200 visit plus
programs that are included in

00:16:16.142 --> 00:16:22.181
this project they include how
much a minimum is how much a

00:16:22.181 --> 00:16:28.187
maximum is, what's not included
in the scope of the program as

00:16:28.187 --> 00:16:32.892
well. We use all this data and
fed it into different scripts

00:16:32.892 --> 00:16:36.896
like CC on -- it just went
through every single one of

00:16:36.896 --> 00:16:44.337
those programs and -- for
subdomains. And this also is

00:16:44.337 --> 00:16:47.573
available on get had you been
account and everyone can be in

00:16:47.573 --> 00:16:54.480
and use it if they want to. This
is Yahoo's program a couple

00:16:54.480 --> 00:17:00.486
months ago -- what we have is
record that shows that's the

00:17:00.486 --> 00:17:03.089
Yahoo.com all -- end flicker and
all supplements of flicker

00:17:03.089 --> 00:17:09.095
included in scope as well as all
mobile apps included as well you

00:17:11.597 --> 00:17:16.335
can see there's two dope
maintenance which is Yahoo do

00:17:16.335 --> 00:17:20.473
the net and subdomains and
Yahoo.com itself not included in

00:17:20.473 --> 00:17:24.877
the scope of the program. What
we ended up doing with this

00:17:24.877 --> 00:17:32.585
using Ruby we wrote a script fed
ever -- file and we crawl them

00:17:32.585 --> 00:17:37.523
and using -- for example for
this one we -- and you can see

00:17:37.523 --> 00:17:41.027
there was disclose a dough --
just close a domain there's a

00:17:41.027 --> 00:17:46.999
you bunch of sites out there
that you can easily report and

00:17:46.999 --> 00:17:54.807
report to venture. Taking it
further we, same idea use all --

00:17:54.807 --> 00:18:01.113
and we fit that into in treating
which in treating is API

00:18:01.113 --> 00:18:05.084
framework that is for
intelligence gathering and it

00:18:05.084 --> 00:18:07.620
does a bunch of tasks that you
can see on the left side of the

00:18:07.620 --> 00:18:13.159
screen includes doing -- web
spider end map and you name it

00:18:13.159 --> 00:18:17.229
we can do it with in treating.
Also in treating is available on

00:18:17.229 --> 00:18:21.801
get H U B as well go ahead and
commit to it if you need to.

00:18:21.801 --> 00:18:27.340
What we ended up doing for in
treating we parse d every file

00:18:27.340 --> 00:18:34.246
with -- and you can see it says
R, we are taking the task DNS

00:18:34.246 --> 00:18:41.954
boot sub-- and give it an entity
and option all included in the

00:18:41.954 --> 00:18:47.660
manual and we are running that
for Jason file the bottom shows

00:18:47.660 --> 00:18:51.097
its being assigned an ID that
you can just go in local host

00:18:51.097 --> 00:18:54.500
and check it out and see what in
treating has found. So for

00:18:54.500 --> 00:18:59.038
example we did in treating IO
and for DNS root force you can

00:18:59.038 --> 00:19:02.441
see all those subdomains that
have been out there that in

00:19:02.441 --> 00:19:08.848
treating found with IPI addresss
as well. And make sure you guys

00:19:08.848 --> 00:19:14.320
check it out like I said it's on
line -- the possibility, -- you

00:19:14.320 --> 00:19:17.923
can do whatever you can think of
it. Being a bug bounty hunter I

00:19:17.923 --> 00:19:21.761
think it's huge for -- useful
for everybody out there. >>

00:19:24.730 --> 00:19:29.402
[Applause] >> Yeah. That's a
sick tool and sick framework

00:19:29.402 --> 00:19:35.274
both wrapping and reCON entry
facility you've used -- I love

00:19:35.274 --> 00:19:41.280
both those tools using them both
if you can in treating is going

00:19:43.783 --> 00:19:48.921
to be sick you guys should check
it out so. Okay. So onto I'm

00:19:48.921 --> 00:19:52.558
going to have to blow through
some of this. This presentations

00:19:52.558 --> 00:19:55.728
long. The one thing I want to
say these are low -- the problem

00:19:55.728 --> 00:19:57.763
is if people start not paying
attention to them you can't --

00:19:57.763 --> 00:20:01.000
multiple bugs or I've have
multiple bugs where where we've

00:20:01.000 --> 00:20:03.636
had a couple small issues like
with pass pass or resets

00:20:03.636 --> 00:20:07.206
something like that we chain
them to make like a critical

00:20:07.206 --> 00:20:14.980
account taker these are really
important these are the kind of

00:20:14.980 --> 00:20:20.986
bugs that a lot of people see
and like the hash tag beg a

00:20:24.990 --> 00:20:30.563
bounty people really don't like
them. Don't discount them just

00:20:30.563 --> 00:20:33.666
note them if they that are out
of scope don't discount them.

00:20:33.666 --> 00:20:35.901
That's what I have to say about
some of these. So session -- the

00:20:35.901 --> 00:20:42.775
kind of same thing failure to --
new -- no new cookies -- these

00:20:42.775 --> 00:20:50.149
are all things are going to be
able to use later a lot of times

00:20:50.149 --> 00:20:54.386
they are out of scope so either
you are out of scope or

00:20:54.386 --> 00:20:57.623
unappreciated or due or
something like that yeah, you

00:20:57.623 --> 00:21:02.461
should keep them in mind when
you continue testing they can

00:21:02.461 --> 00:21:05.798
be. So the big part of this one
is tackle fuzzingville -- we are

00:21:05.798 --> 00:21:12.738
going to talk about cross sight
scripting some really good

00:21:12.738 --> 00:21:17.643
people have done the core idea
of process scripting page

00:21:17.643 --> 00:21:20.346
functional will the display to
the user that's kind of the

00:21:20.346 --> 00:21:23.616
question I ask myself you know
can I get refreaks somehow with

00:21:23.616 --> 00:21:29.522
Java script so you can do manual
test king Q which is great you

00:21:29.522 --> 00:21:34.860
can enter in your many character
and see if they return but

00:21:34.860 --> 00:21:36.929
really when I'm trying to work
fast in a bug BON -- so, you

00:21:36.929 --> 00:21:40.499
probably used them before the
technical definition for them is

00:21:40.499 --> 00:21:42.501
web POLLY -- first one you will
recognize they used to call it

00:21:42.501 --> 00:21:44.503
the R snake battering ram came
out of -- you probably used this

00:21:44.503 --> 00:21:50.509
before you pray that you get
across sight scripting this is

00:22:01.720 --> 00:22:07.726
multi context fillet by pass --
it's a mouthful I know. Its

00:22:12.698 --> 00:22:16.368
designed to evade filter it's a
loud to execute In different web

00:22:16.368 --> 00:22:20.773
couldn't Detective and it's
really cool so I have three of

00:22:20.773 --> 00:22:23.943
these that eyesight here that if
you are just doing bug down tea

00:22:23.943 --> 00:22:28.147
hunting you can use and just
kind of move a along on critical

00:22:28.147 --> 00:22:31.917
functions in the sight S this
one is from a researcher he does

00:22:31.917 --> 00:22:34.253
cross sight -- I think he did
Ph.D in cross sight scripting

00:22:34.253 --> 00:22:37.122
which to me mows my mind. This
is a multi context -- so you can

00:22:37.122 --> 00:22:42.261
see here that he's trying to to
markup in a whole burning of

00:22:42.261 --> 00:22:48.267
different context he's got like
an at sign here to like trick

00:22:52.671 --> 00:22:55.941
trick E-mail like filter or
maybe -- so he actually ran this

00:22:55.941 --> 00:22:59.245
along like top one hundred and
like 80 percent of them

00:22:59.245 --> 00:23:02.481
vulnerable with search
parameters with this string more

00:23:02.481 --> 00:23:05.551
AMMO. This one is done by MATH
-- so he did a whole

00:23:05.551 --> 00:23:10.923
presentation on this idea of
multi or payloads on websites so

00:23:10.923 --> 00:23:16.295
this is his multi context so
this is one that I use now so

00:23:16.295 --> 00:23:22.301
thank you. Other observation
when I started parse sink bug

00:23:33.345 --> 00:23:35.914
bounty work is important so
finding cost missable themes or

00:23:35.914 --> 00:23:39.518
profiles that you -- trick them
into using Java -- any

00:23:39.518 --> 00:23:42.421
application that deals with
those type of things you are a

00:23:42.421 --> 00:23:48.427
pull things from U RI and render
it for some reason. Import ting

00:23:51.697 --> 00:23:57.703
from a third party like Facebook
immigration where there may be

00:24:03.575 --> 00:24:09.348
-- displace Facebook data in
line so you can set your name on

00:24:09.348 --> 00:24:14.153
Facebook to script alert and
will alert this sight. -- that

00:24:14.153 --> 00:24:20.659
didn't -- a lot of people
discount web services right away

00:24:20.659 --> 00:24:25.297
because they think the content
time won't execute across sight

00:24:25.297 --> 00:24:29.902
scripting won't execute Java
script so you have to really

00:24:29.902 --> 00:24:32.004
check and make sure they are
returning otherwise you can get

00:24:32.004 --> 00:24:35.908
-- and a lot of -- file up load
names try to change it to script

00:24:35.908 --> 00:24:40.646
alert whatever like that its --
a of the places up loaded files

00:24:40.646 --> 00:24:46.885
themselves this as huge one
actually that's all over the

00:24:46.885 --> 00:24:51.256
place so compiled file or HTML
file and you basically a tack a

00:24:51.256 --> 00:24:54.993
file up load and so a lot of you
know file up loads there's a

00:24:54.993 --> 00:24:58.664
whole section about file up
loads we'll talk about it more

00:24:58.664 --> 00:25:01.467
in a little bit. Custom error
pages where they are he can

00:25:01.467 --> 00:25:05.838
company winning what you can't
find. Make parameters -- put it

00:25:05.838 --> 00:25:09.341
into your response and then log
in and figure out password

00:25:09.341 --> 00:25:13.078
forms. Also, this is a swift
parameter access that is a huge

00:25:13.078 --> 00:25:19.051
thing I don't think I've ever
found a swift file that I

00:25:19.051 --> 00:25:22.054
decompiled that hasn't been
vulnerable or remote file

00:25:22.054 --> 00:25:28.427
include actually Dennis here is
like the guy I ask question all

00:25:28.427 --> 00:25:32.698
the time. So, yeah, so, things
like J player and all of these

00:25:32.698 --> 00:25:37.102
software that are swift files
that do media or whatever like

00:25:37.102 --> 00:25:41.774
so there's a whole -- on the
common programs that these

00:25:41.774 --> 00:25:45.911
players use and then also the
injection strong you have to do

00:25:45.911 --> 00:25:49.715
more manual analysis to do that
manual oh I use this flash bang

00:25:49.715 --> 00:25:55.487
which I think is awesome you
drop a swift file on the on the

00:25:55.487 --> 00:25:58.857
end cups out all the program --
dash displace them along with if

00:25:58.857 --> 00:26:02.728
they are going to execute out of
the context of the swift file I

00:26:02.728 --> 00:26:06.598
highly suggest this tool if you
are going to do some swift

00:26:06.598 --> 00:26:14.440
hacking way better than like a
lot of the old once. Cool. So --

00:26:14.440 --> 00:26:20.446
does the page look like it might
need to call or stored data

00:26:23.449 --> 00:26:28.320
obviously. SQL I where it will
execute in single quote, double

00:26:28.320 --> 00:26:34.493
quote and straight into --
context. I've seen a lot of --

00:26:34.493 --> 00:26:36.562
remember these are things that
actually scanners are starting

00:26:36.562 --> 00:26:38.797
to do they don't want to send a
-- you have ate million

00:26:38.797 --> 00:26:42.367
parameters on a page takes
forever to scan things, right.

00:26:42.367 --> 00:26:49.308
So I imagine a lot of scanners
will start to pick up on this

00:26:49.308 --> 00:26:55.781
kind of thing the idea of these
multi context injection strong

00:26:55.781 --> 00:27:02.454
this is awesome as well. So for
injection to kind of go through

00:27:02.454 --> 00:27:05.424
and fuzz things I use SECT list
project its got a bunch of

00:27:05.424 --> 00:27:11.063
fuzzing list and all this crazy
stuff Daniel here actually

00:27:11.063 --> 00:27:17.069
helped me curate it we designed
it together and its it's in

00:27:20.939 --> 00:27:26.345
valuable right its got like buy
type of injection if you want to

00:27:26.345 --> 00:27:29.615
do a log in by pass in my shekel
its got all those K -- C. RATED

00:27:29.615 --> 00:27:32.518
I highly suggest using this when
I want to attack a form or

00:27:32.518 --> 00:27:35.621
something like that some
parameter I think ses vulnerable

00:27:35.621 --> 00:27:41.627
so. -- so other observations to
blind is the predominant -- you

00:27:47.900 --> 00:27:50.936
hardly ever get -- in those
cases bench mark strong and

00:27:50.936 --> 00:27:56.275
stuff to make the page take a
long time to load that's how you

00:27:56.275 --> 00:28:03.348
identify whether you take it the
whole explicit way up to you we

00:28:03.348 --> 00:28:07.886
have a lot of researchers just
want to identify and move on I

00:28:07.886 --> 00:28:12.724
like to run see y'all map it's
still king there's no other tool

00:28:12.724 --> 00:28:15.527
that does it as good as SEQ U EL
map. Everybody uses the map at

00:28:15.527 --> 00:28:17.529
some point. So, yeah, some tips
tore the map basically when you

00:28:17.529 --> 00:28:19.565
are doing this you can actually
parse a whole burden of proof

00:28:19.565 --> 00:28:25.571
blog file parse fuzz the whole
file it takes forever it's not

00:28:35.414 --> 00:28:38.684
like the greatest way to do
things its offering a lot of

00:28:38.684 --> 00:28:42.154
coverage. If you are up against
some kind of black list or

00:28:42.154 --> 00:28:46.325
something like that it has
tamper scrips you can use in

00:28:46.325 --> 00:28:51.863
code all of your - you can evade
black list. There's a good guide

00:28:51.863 --> 00:28:58.170
on there, its somewhere on the
form DBMS specific syntax -- so

00:28:58.170 --> 00:29:05.644
if you are going up against --
there's a simple string you can

00:29:05.644 --> 00:29:11.650
pass into map and get past black
list A really fast way to in

00:29:13.752 --> 00:29:19.558
instrument the map is --
basically allows to you right

00:29:19.558 --> 00:29:24.329
alcoholic any window and Burp
and request that to API running

00:29:24.329 --> 00:29:28.066
on local box you can be inside a
Burp right click and start

00:29:28.066 --> 00:29:31.169
searching CLICK and start
searching. Currency value item

00:29:31.169 --> 00:29:35.407
number values sorting parameters
I'm not going to go through all

00:29:35.407 --> 00:29:40.812
these they are along lt slide
this ses going to be on the hub

00:29:40.812 --> 00:29:46.618
any way you can grab it and use
it if you think its useful these

00:29:46.618 --> 00:29:50.589
are the kind of place where I
saw the most injection and --

00:29:50.589 --> 00:29:54.226
this is sore right click on a
request send it pi scan now that

00:29:54.226 --> 00:30:00.232
Burp -- -- doesn't look like
this anymore but you get the

00:30:08.740 --> 00:30:13.478
idea. So this is my cheat sheet
of S U L when I do broken down

00:30:13.478 --> 00:30:15.814
by my skill type these are cheat
seats that let you know manual

00:30:15.814 --> 00:30:20.752
syntax a lot of these people pen
test -- you have to use these

00:30:20.752 --> 00:30:26.758
you have to have them handy when
you are doing injection, access

00:30:33.732 --> 00:30:35.734
who use access that suction,
[indiscernible]. So, I keep

00:30:35.734 --> 00:30:42.874
those handy in May ever note
when I'm doing S U L injection

00:30:42.874 --> 00:30:49.114
testing when I see errors
something like that I just I

00:30:49.114 --> 00:30:54.653
start you know getting in that
mowed. So file up loads and file

00:30:54.653 --> 00:30:56.655
inclusions next area. So local
file inclusion the core idea is

00:30:56.655 --> 00:31:01.626
does it or kit interact with
server file system.

00:31:01.626 --> 00:31:08.600
[indiscernible] obviously you
can do it manually I have

00:31:08.600 --> 00:31:12.370
allomorph LFI scripting stuff
up. You can see here like I

00:31:12.370 --> 00:31:17.542
tried a bunch of black list
bypass to try to get common

00:31:17.542 --> 00:31:22.881
system files this is on the
project. Common parameters or

00:31:22.881 --> 00:31:27.619
injection funds for this type of
stuff you would think of this

00:31:27.619 --> 00:31:30.922
but its good to have it in the
list file location, locale,

00:31:30.922 --> 00:31:33.692
path, display load, read or
retrieve these are the most

00:31:33.692 --> 00:31:38.530
common parameters that you will
find those in. Malicious file up

00:31:38.530 --> 00:31:41.399
loads. This is an important --
doing this type of testing not

00:31:41.399 --> 00:31:47.606
only just to up load swift file
and get SS -- you can -- one of

00:31:47.606 --> 00:31:52.778
the ones I like a lot it's a DOS
basically answering image? >>

00:31:52.778 --> 00:31:58.383
Specifies itself to be large but
isn't you can up load it in the

00:31:58.383 --> 00:32:03.121
server we'll allocate all of
this space not that big of zoo

00:32:03.121 --> 00:32:07.926
file you can dos the application
server there's a whole blog on

00:32:07.926 --> 00:32:11.897
it. And then, you can you can
actually one the things I think

00:32:11.897 --> 00:32:14.666
is interesting I'm into the
going to go into it interesting

00:32:14.666 --> 00:32:20.472
buy passing security zones and
store ring Malware so there's as

00:32:20.472 --> 00:32:26.011
well as poll -- payloads there's
also files that can execute code

00:32:26.011 --> 00:32:33.718
In different context you think
of a parse or reading a file it

00:32:33.718 --> 00:32:39.724
basically will look until it
finds what it wants and execute

00:32:45.297 --> 00:32:48.633
that you can create ajar that is
subtle so if I make executable

00:32:48.633 --> 00:32:51.503
-- allow ajar is that -- well I
don't know you can storing

00:32:51.503 --> 00:32:55.073
Malware on your - I can send --
to go retrieve it can you do

00:32:55.073 --> 00:32:57.909
anything about that right. And
cut stuff out I don't think so

00:32:57.909 --> 00:33:00.212
that's kind of hard to do.
Interesting question there it's

00:33:00.212 --> 00:33:02.981
kind of another road. Dan
Crawley did a presentation on it

00:33:02.981 --> 00:33:05.684
here at DEF CON it was super
sweet so -- you should check

00:33:05.684 --> 00:33:11.690
that out. Oh, no. Technical
errors. That came at the perfect

00:33:20.866 --> 00:33:26.872
time, actually. Oh wow. That's
what we're doing. >> So who a --

00:33:30.775 --> 00:33:38.083
he's a first time speaker.
There's a story while we getting

00:33:38.083 --> 00:33:44.089
ready. I guess he mentioned that
DEF CON16 he met someone. >> I

00:33:47.959 --> 00:33:53.965
met Julia my wife here. >> He
met withs his wife here. Give

00:33:57.969 --> 00:34:03.909
him a hand, huh. >> [Applause]
>> Cheers. Now back to the show

00:34:11.983 --> 00:34:15.954
I mean if I can deal with the
laptop issue. Are these guys

00:34:15.954 --> 00:34:18.356
doing all right. Should I kick
them off the stage or do you

00:34:18.356 --> 00:34:22.160
want to keep listening to them
you want to keep listening. All

00:34:22.160 --> 00:34:26.631
right. I guess you can stay. >>
Okay. All right. Can you give me

00:34:26.631 --> 00:34:32.637
a second until my throat stops
burning. >> No. >> All right.

00:34:34.873 --> 00:34:41.379
All right see if this works. --
all right let's -- so follow-up

00:34:41.379 --> 00:34:45.016
load attacks are a thing I've
never seen any better

00:34:45.016 --> 00:34:49.387
presentation along the road file
up load attacks than this guy,

00:34:49.387 --> 00:34:54.793
if I mess up your names I'm
sorry I love all these guys they

00:34:54.793 --> 00:34:57.929
are bug hunters just like me.
This includes doing new and

00:34:57.929 --> 00:35:03.034
attacks as well as old attacks.
Up load by passing extension

00:35:03.034 --> 00:35:09.140
trickery I'm trying to give you
resources as well as the ones I

00:35:09.140 --> 00:35:16.181
would use so a lot of this I
think got parse d into the new

00:35:16.181 --> 00:35:19.751
testing guide most of it at
least. So, I would check that

00:35:19.751 --> 00:35:23.188
out too. As an intro to
malicious file up loads and

00:35:23.188 --> 00:35:28.760
getting shells so -- oh this is
what I talked about Dan I don't

00:35:28.760 --> 00:35:34.933
know that guys real name, but,
yeah, these are the types of

00:35:34.933 --> 00:35:37.902
files that can execute In
different ways. So you can see

00:35:37.902 --> 00:35:43.308
they have like a PDF that's a
zip or NBR interesting research

00:35:43.308 --> 00:35:47.145
here coming out I would like to
see interesting bugs come out of

00:35:47.145 --> 00:35:51.416
it. So, remote file includes and
redirect, common parameters

00:35:51.416 --> 00:35:56.755
there destination continue
redirect, U RI window next.

00:35:56.755 --> 00:36:00.925
Common black list by passes,
these are all kind of escaping

00:36:00.925 --> 00:36:05.597
tricks you use normally in web
stuff these are the most common

00:36:05.597 --> 00:36:11.036
once I found these are also in
SECT list that I use often. So

00:36:11.036 --> 00:36:15.306
for RFI these are the common
parameters file folder pass file

00:36:15.306 --> 00:36:20.378
template yes yes yes yes. So,
these are where I saw the most

00:36:20.378 --> 00:36:23.481
bugs or you know other
researchers published data

00:36:23.481 --> 00:36:28.520
around their RA -- RFI these are
the type of parameters you can

00:36:28.520 --> 00:36:32.991
do. I think eventually the thing
you do here, as you right a -- I

00:36:32.991 --> 00:36:36.995
haven't yet but that automates
any time you see these it sends

00:36:36.995 --> 00:36:42.333
it to -- so you can just go test
them later. I haven't done it I

00:36:42.333 --> 00:36:46.638
do it with eyeballs it's
probably the bet way to do it is

00:36:46.638 --> 00:36:50.975
write an extension to do this
work. How much time do I have

00:36:50.975 --> 00:36:55.313
ten minutes okay I think I can
do it. If everybody knows about

00:36:55.313 --> 00:36:58.650
see suffer you find some
function in the website that

00:36:58.650 --> 00:37:01.719
does something, right, and it's
a security related function

00:37:01.719 --> 00:37:04.055
change password or whatever
right there's a list latest

00:37:04.055 --> 00:37:06.925
function then you write
alcoholic and Burp that's -- so

00:37:06.925 --> 00:37:12.931
what you have to focus on is C
-- so common buy passes in my

00:37:18.937 --> 00:37:22.941
research yielded removing the
toe Ken from the request,

00:37:22.941 --> 00:37:26.111
removing the parameter value
from the request adding control

00:37:26.111 --> 00:37:34.018
dashed -- or changing the
requested method. So check this

00:37:34.018 --> 00:37:37.255
out. This tool has gotten no
love I don't know why I think

00:37:37.255 --> 00:37:39.724
it's been out two -- for two
years. Any of you used this tool

00:37:39.724 --> 00:37:45.330
before no good give you
something to take away. What it

00:37:45.330 --> 00:37:51.002
does you enforced able -- and
you crawl a sight that -- in it

00:37:51.002 --> 00:37:58.977
like a C -- you create this
template tell it what the TOKEN

00:37:58.977 --> 00:38:03.815
was what an air page looks like
this is really easy to add. This

00:38:03.815 --> 00:38:08.153
has been out for I think two
years already I don't understand

00:38:08.153 --> 00:38:13.792
why people want to use this
super sweet right you write this

00:38:13.792 --> 00:38:17.829
it's a pie Anthony script then
you run his PYTHON request all

00:38:17.829 --> 00:38:20.832
those across the whole domain,
yes, sir request with those

00:38:20.832 --> 00:38:25.203
first three attacks then it
produces HTMB -- L report which

00:38:25.203 --> 00:38:31.209
one gave error messages pry or
-- sew made a lot of money doing

00:38:34.012 --> 00:38:41.286
this to Facebook and at this
time because it wasn't direct

00:38:41.286 --> 00:38:45.089
extension it didn't get a lot of
notice Iran dimly found out and

00:38:45.089 --> 00:38:48.593
I said sweet this is awesome
this is part of the extreme

00:38:48.593 --> 00:38:52.530
output here's the base request
here's the first drafted request

00:38:52.530 --> 00:38:55.833
and response and then you get a
report back saying if they came

00:38:55.833 --> 00:38:59.504
back the same. So, I highly
suggest that tool its linked in

00:38:59.504 --> 00:39:06.044
the talk. Another way to do it
just to check for every request

00:39:06.044 --> 00:39:10.448
across a whole file that didn't
have the TOKEN in it. The actual

00:39:10.448 --> 00:39:14.185
parameter so this is another
scripted that does that its

00:39:14.185 --> 00:39:18.156
another script that runs on a
file that went undetected kind

00:39:18.156 --> 00:39:21.993
of a little bit super sweet. I
use these all the time it finds

00:39:21.993 --> 00:39:27.899
bugs all the time so. So just a
common critical function like

00:39:27.899 --> 00:39:31.269
add and up load file, you know,
password change, E-mail change

00:39:31.269 --> 00:39:34.372
transfer money country tea,
delete a file, add a profile,

00:39:34.372 --> 00:39:41.079
things like that, so these are
commonly where you see it.

00:39:41.079 --> 00:39:44.249
Privilege transport and logic
kind of get mashed into a

00:39:44.249 --> 00:39:50.255
section. So, privilege, you
know, -- but my testing thing

00:39:52.290 --> 00:39:56.227
you have administrative user you
need a couple counts to do this

00:39:56.227 --> 00:39:59.797
then you have a low privilege
user the low privilege user

00:39:59.797 --> 00:40:03.668
tries to -- pretty simple. Ought
mate that across multiple

00:40:03.668 --> 00:40:10.775
function you might need too long
this is what I use for is it

00:40:10.775 --> 00:40:15.046
this one is available on Burp
store and basically you spider a

00:40:15.046 --> 00:40:20.351
site completely. You run through
it. All of your post requests as

00:40:20.351 --> 00:40:25.556
as ADMIN user then go in as a
lower user and you give that

00:40:25.556 --> 00:40:31.829
information -- was able to
access that the ADMIN user I was

00:40:31.829 --> 00:40:36.968
also able to access you look
through those in your output. So

00:40:36.968 --> 00:40:40.438
common function or views that I
check for privilege escalation

00:40:40.438 --> 00:40:43.107
or anything like that these can
be combined with last two

00:40:43.107 --> 00:40:47.412
seconds add a user delete a user
start project change account

00:40:47.412 --> 00:40:52.183
info, view customer -- there's a
page that tells everything about

00:40:52.183 --> 00:40:56.955
what that site does you want to
try that view. Payment

00:40:56.955 --> 00:41:00.758
processing view like receipts or
any view any with PI on it you

00:41:00.758 --> 00:41:04.362
want to focus on this is what
that looks like. Again with low

00:41:04.362 --> 00:41:07.899
privilege user request
everything gives you pry or

00:41:07.899 --> 00:41:13.905
advertised output. Prioritized
look. >> Game mink head phones a

00:41:20.978 --> 00:41:25.717
couple months back, so, I found
a bug in a really cool company

00:41:25.717 --> 00:41:29.754
and I had to disclose it and
ended up call them on the phone

00:41:29.754 --> 00:41:31.756
and their help desk guy was I
have no idea what you are

00:41:31.756 --> 00:41:36.027
talking about. Thing I actually
linked -- of the IT group of

00:41:36.027 --> 00:41:40.631
that company finally someone
accepted I told him I'm

00:41:40.631 --> 00:41:45.770
legitimated I just want to tell
you this exist because I was

00:41:45.770 --> 00:41:51.275
buying a pair of head phones
already and they may fix this

00:41:51.275 --> 00:41:56.347
bug. So, yeah and so the receipt
function -- you could it rate up

00:41:56.347 --> 00:41:59.817
and down and fine other people's
receipts with credit card on it.

00:41:59.817 --> 00:42:03.821
They sent me two free pair of
head phones I have one one goes

00:42:03.821 --> 00:42:08.493
to Daniel for his birthday but I
forgot to bring it. I'm sorry,

00:42:08.493 --> 00:42:14.899
Dan. But there's -- any way five
minutes. Okay. Cool. Increment,

00:42:14.899 --> 00:42:22.206
key crash., sense five tongues,
stewing user ideas these are how

00:42:22.206 --> 00:42:25.977
you test. These are common
functions user fires that deal

00:42:25.977 --> 00:42:28.379
with [indiscernible] everything
from the table everything that

00:42:28.379 --> 00:42:30.782
says user hash E-mail images
that are supposed to be private

00:42:30.782 --> 00:42:36.821
so you can go through the slides
and kind of go through this all

00:42:36.821 --> 00:42:43.528
of this is going to be on --
this as simple, I don't know why

00:42:43.528 --> 00:42:49.333
I put -- you see this newspaper
-- new miracle -- this is

00:42:49.333 --> 00:42:53.438
exactly what I did. This were
you what a disclosed bag that

00:42:53.438 --> 00:42:59.444
was patched. Transport --
there's this awesome script that

00:43:02.814 --> 00:43:07.919
will take up blog file again
request ever request in your

00:43:07.919 --> 00:43:13.925
sight tree -- so you can see
what's going over on unsecure

00:43:17.361 --> 00:43:19.597
channels instead of having to
sort columns and all that stuff

00:43:19.597 --> 00:43:22.733
I find this useful try to
downgrade everything then you

00:43:22.733 --> 00:43:28.739
report this is SSL downgrade
attack or whatever. Logic, logic

00:43:28.739 --> 00:43:34.245
are us usually manual, the one I
see a lot of styting hash

00:43:34.245 --> 00:43:36.247
parameters where there's --
they've -- irreversible or I'm

00:43:36.247 --> 00:43:38.716
too dumb to reverse it just
finding another item -- and so

00:43:38.716 --> 00:43:44.722
doing that is usually yield the
product for less money so, step

00:43:54.332 --> 00:43:58.469
manipulation this is like the
bread and butter example

00:43:58.469 --> 00:44:03.441
everybody gives multiple steps
order or put things in -- check

00:44:03.441 --> 00:44:07.512
out, pay, ship, so you just skip
or you like put everything in

00:44:07.512 --> 00:44:11.115
your cart and you just ship
because you have the whole

00:44:11.115 --> 00:44:14.152
process, so you just skip a
process. Using negative

00:44:14.152 --> 00:44:17.321
quantities in -- or using
negative in quantity value so

00:44:17.321 --> 00:44:19.490
actually had websites pay me
credit because I put in a

00:44:19.490 --> 00:44:25.496
negative value on some pricing
or or negative quantity right

00:44:28.566 --> 00:44:32.103
like order number equals one
usually I want to buy one thing

00:44:32.103 --> 00:44:35.773
I put in negative 20 now they
dread Ted my account like a

00:44:35.773 --> 00:44:39.944
thousands or something like
that. So application level DOS

00:44:39.944 --> 00:44:43.014
this is interesting not actual
DOS, right I'm not add

00:44:43.014 --> 00:44:47.018
indicating bug BONNTY I've seen
sites that can't handle just

00:44:47.018 --> 00:44:53.024
like parse go a parameter with
you know 40 zero or me putting

00:44:55.626 --> 00:44:59.063
in a math function as a
parameter value server like I

00:44:59.063 --> 00:45:00.998
don't know what to do so those
are interesting and then timing

00:45:00.998 --> 00:45:04.769
attacks I think there was a DEF
CON talk about -- mobile I'm

00:45:04.769 --> 00:45:11.809
running into -- check these
files for data storage as well

00:45:11.809 --> 00:45:17.081
as logging this is the best tool
to get spun up. Basically jail

00:45:17.081 --> 00:45:20.451
-- it gives you full list of the
hand her of all of the files all

00:45:20.451 --> 00:45:26.457
of the encryption val use. If
it's using explicit -- most

00:45:29.694 --> 00:45:34.732
functional tool. I think it's
partly based off of talk I gave

00:45:34.732 --> 00:45:38.236
a long time ago and he made it
in rube be and its super sick

00:45:38.236 --> 00:45:42.240
its the best way to get into IOS
testing if you've never done it

00:45:42.240 --> 00:45:45.276
before. This is a thing
babblings we got to go there's

00:45:45.276 --> 00:45:50.081
other -- I repeat them don't
discard them. Security head did

00:45:50.081 --> 00:45:55.353
he path disclosure keep them in
your pocket later to escalate if

00:45:55.353 --> 00:46:00.157
you can use them. This is one
idea of like you know if I have

00:46:00.157 --> 00:46:02.893
five or 30 minutes or something
like that, what can I do so I

00:46:02.893 --> 00:46:07.531
try to time myself wimpled using
this stuff in here so in 15 to

00:46:07.531 --> 00:46:11.802
30 minutes I can doomiest of
this using Burp and the

00:46:11.802 --> 00:46:15.873
automation maybe an hour depend
how motivated I am these are the

00:46:15.873 --> 00:46:20.778
steps I go through, I register
hit password resetting do all

00:46:20.778 --> 00:46:25.316
the forms go to security
function check the cookie, I do

00:46:25.316 --> 00:46:31.022
like like perform enumerate or U
ID I see in U RD, using one of

00:46:31.022 --> 00:46:35.893
the short list in the background
up load a file if it had up load

00:46:35.893 --> 00:46:40.131
win 30 minutes or an hour I can
usually find some pretty corner

00:46:40.131 --> 00:46:43.434
good bugs. Crowd source is
different. It's a the same but

00:46:43.434 --> 00:46:48.339
different. You find like 20
percent of the stuff instead of

00:46:48.339 --> 00:46:53.978
80 percent a lot of stuff goes
quick of the data analysis is

00:46:53.978 --> 00:46:57.848
cool. You can probably do a 15
to 20 minute web test done --

00:46:57.848 --> 00:47:01.952
[indiscernible] and follow all
of the bug bounty people on the

00:47:01.952 --> 00:47:08.359
list. I put them on a list for
you you can watch them hack

00:47:08.359 --> 00:47:12.797
things and talk about their find
and. There's a lot of stuff that

00:47:12.797 --> 00:47:17.034
didn't get put opinion here
there's a lot of data visit

00:47:17.034 --> 00:47:22.039
percent of the data is still
unparsed I'm going to put it up

00:47:22.039 --> 00:47:25.843
as or maybe just mark down and
you guys can contribute to it if

00:47:25.843 --> 00:47:28.245
you care enough if you just want
to ticket and use it that's

00:47:28.245 --> 00:47:33.451
fine. Stuff to go in there more
too long that I found XXE, meant

00:47:33.451 --> 00:47:35.453
to say [indiscernible]
techniques, more detail and to

00:47:35.453 --> 00:47:41.459
add an toyed mobile tools that I
use often. -- we good. Thanks.

00:47:49.066 --> 00:47:51.435
These are bug hunters that did
-- who did things in this

00:47:51.435 --> 00:47:55.473
presentation all of them are
awesome I respect every single

00:47:55.473 --> 00:48:01.412
one of them or who made tools.
Also my team John Todd, Patrick,

00:48:04.248 --> 00:48:07.618
Katie, Kim consideration case
see criss and Sam everybody in

00:48:07.618 --> 00:48:10.488
the -- I love doing this. So
that's it.

