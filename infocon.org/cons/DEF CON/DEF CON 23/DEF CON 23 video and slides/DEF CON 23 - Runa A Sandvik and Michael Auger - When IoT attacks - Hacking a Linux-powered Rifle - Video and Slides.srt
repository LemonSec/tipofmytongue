00:00:00.000 --> 00:00:06.006
Thank you for coming. Are we
good? Okay. So this is a 45

00:00:10.210 --> 00:00:17.818
minute presentation where we sum
up a full year of research on a

00:00:17.818 --> 00:00:23.524
Linux powered rifle. My name is
Runa Sandvik and this is Michael

00:00:23.524 --> 00:00:27.861
Auger. Wired covered a lot of
stuff about this research and so

00:00:27.861 --> 00:00:33.300
in this presentation we want to
try and focus on how we did the

00:00:33.300 --> 00:00:37.170
research. How we found the
different issues. We have some

00:00:37.170 --> 00:00:40.974
cool demos to show and we also
got some distant pieces that

00:00:40.974 --> 00:00:47.681
wired didn't cover last week. So
checking point was widely

00:00:47.681 --> 00:00:51.618
covered in the media over the
past two years, three years.

00:00:51.618 --> 00:00:58.458
It's a Linux powered rifle that
allows you to actually take

00:00:58.458 --> 00:01:03.764
accurate shots even if you've
never shot a firearm before.

00:01:03.764 --> 00:01:09.069
Then it has mobile apps and all
sorts of cool things to go with

00:01:09.069 --> 00:01:15.575
it. Journalists on CNN last week
asked me why we decided to hack

00:01:15.575 --> 00:01:21.581
a firearm. And I told them it's
because cars are boring. But in

00:01:28.689 --> 00:01:34.561
reality it's because it's fun,
the technology is there, and it

00:01:34.561 --> 00:01:39.232
seemed like something that was
worth poking at? >> So the

00:01:39.232 --> 00:01:42.569
platform we decided to work with
was the TrackingPoint TP750.

00:01:42.569 --> 00:01:46.106
It's a Remington 708
multi-action as the baseline

00:01:46.106 --> 00:01:49.943
firearm. The hardware, the piece
that cracking point designed and

00:01:49.943 --> 00:01:53.680
made was the scope. The platform
on ours is called cascade. They

00:01:53.680 --> 00:01:56.249
do have a smaller platform
called Aries which is on some of

00:01:56.249 --> 00:01:59.753
their shorter range rifles. A
lot of the things we found here,

00:01:59.753 --> 00:02:02.322
there is a very good possibility
in all likelihood that they will

00:02:02.322 --> 00:02:06.193
also affect Aries as well. The
hardware itself, it's modified,

00:02:06.193 --> 00:02:09.863
running in a modified version of
Angstrom Linux, these come with

00:02:09.863 --> 00:02:14.434
beagle and blacks (ph.). The
hardware itself is very similar

00:02:14.434 --> 00:02:20.207
to a beagle and black. 250 ram,
150 arm CPU. There is 16

00:02:20.207 --> 00:02:24.978
megflash George and a 4 gig
flash chip that holds the file

00:02:24.978 --> 00:02:29.750
system. The way this system is
intended to work, there is two

00:02:29.750 --> 00:02:34.888
modes. A traditional mode which
is now just a rifle with a fancy

00:02:34.888 --> 00:02:37.557
scope with a range finder on it.
So you can tag a target, see how

00:02:37.557 --> 00:02:40.494
far away it is, you have cross
hairs and you can make

00:02:40.494 --> 00:02:43.230
adjustments manually and do what
you're going to do. You can push

00:02:43.230 --> 00:02:47.100
a button and kick the scope into
advanced mode. And in advanced

00:02:47.100 --> 00:02:50.604
mode you have what they call tag
track exact. So the first frame

00:02:50.604 --> 00:02:53.807
here, you're lining up to your
target. You push a small button

00:02:53.807 --> 00:02:57.277
in front of the trigger and it
tags that target. The scope

00:02:57.277 --> 00:03:00.280
calculates the ballistics to
calculate the target where you

00:03:00.280 --> 00:03:02.682
tagged it, and the cross hairs
will move accordingly. You hold

00:03:02.682 --> 00:03:06.953
down the trigger and the gun
will not fire. There is a

00:03:06.953 --> 00:03:10.524
triggering action between the
scope and the trigger that holds

00:03:10.524 --> 00:03:13.627
the firing pin so you pull down
the trigger and line up the

00:03:13.627 --> 00:03:16.329
shot. As soon as the cross hairs
are lined up on the tag that you

00:03:16.329 --> 00:03:20.333
have on your target, the firing
pin releases and it fires with a

00:03:20.333 --> 00:03:22.736
very high likelihood of hitting
the target where you tagged it

00:03:22.736 --> 00:03:28.375
on the first shot. >> There's a
couple of things to keep in mind

00:03:28.375 --> 00:03:33.780
about the research. Is that --
do require the wireless network

00:03:33.780 --> 00:03:37.984
on the rifle to be on. It comes
off by default. You have to turn

00:03:37.984 --> 00:03:42.756
it on for any of this to
actually work. We cannot fire

00:03:42.756 --> 00:03:46.159
the rifle remotely. We can do a
lot of fun things like lock the

00:03:46.159 --> 00:03:50.764
trigger so you cannot fire, but
we cannot fire remotely. And

00:03:50.764 --> 00:03:53.500
lastly the TP750 is a firearm
even without the scope. So if

00:03:53.500 --> 00:03:59.506
the owner decides not to use the
scope at all, you can still use

00:04:01.908 --> 00:04:06.046
the TP750 as a standard rifle
but you can't -- you have no

00:04:06.046 --> 00:04:13.520
good way of aiming at that
point. So when we were putting

00:04:13.520 --> 00:04:16.790
together this presentation, we
were trying to figure out how we

00:04:16.790 --> 00:04:20.293
wanted to tell the story. We
really wanted to focus on how we

00:04:20.293 --> 00:04:24.898
did the research. So it really
came down to sort of three

00:04:24.898 --> 00:04:28.568
different rounds where we tried
a lot of different things. For

00:04:28.568 --> 00:04:34.107
round one it was basically when
we bought the rifle, we got it,

00:04:34.107 --> 00:04:38.078
we took it out of the box. And
this is what the scope that sits

00:04:38.078 --> 00:04:41.014
on top of the rifle looks like.
You have a couple of physical

00:04:41.014 --> 00:04:47.020
buttons. There is focus, there
is wind. Zoom. Couple of other

00:04:49.222 --> 00:04:53.326
things. Two USB ports as well.
And it also has a microphone.

00:04:53.326 --> 00:04:57.864
When you're in advanced mode and
you're tagging your targets and

00:04:57.864 --> 00:05:01.902
firing, it will record a video
and also audio at the same time

00:05:01.902 --> 00:05:07.474
and save it on the scope. So
that's what that is used for. So

00:05:07.474 --> 00:05:11.611
what we did after looking at the
physical buttons and trying to

00:05:11.611 --> 00:05:16.449
figure out what was there, we
started it up and we did a port

00:05:16.449 --> 00:05:18.952
scan as you do when you have a
rifle with a wifi. And we found

00:05:18.952 --> 00:05:22.489
it runs two services. There is a
web server or port 80 and a

00:05:22.489 --> 00:05:30.130
streaming service that runs as
well. And that was it. We tried

00:05:30.130 --> 00:05:36.336
a lot of different things like
assigning ourselves a different

00:05:36.336 --> 00:05:39.773
IP address and doing another
port scan just to see if maybe

00:05:39.773 --> 00:05:41.775
something else popped up. But we
could never really find anything

00:05:41.775 --> 00:05:46.746
interesting. It seems like these
are the two services that are

00:05:46.746 --> 00:05:52.385
running and that's it. So after
that we jumped to looking at the

00:05:52.385 --> 00:05:55.622
two mobile apps that
TrackingPoint created for use

00:05:55.622 --> 00:06:02.662
with this rifle. There is one
called shot view which is just

00:06:02.662 --> 00:06:05.865
the stream. It allows you to see
exactly what the shooter is

00:06:05.865 --> 00:06:13.240
seeing inside the scope. But it
doesn't give you any controls

00:06:13.240 --> 00:06:17.644
whatsoever. The second app and
more interesting one is called

00:06:17.644 --> 00:06:21.715
TrackingPoints. That's the app
that will allow you to change

00:06:21.715 --> 00:06:27.854
wind, temperature, the type of
ammo used. It will allow you to

00:06:27.854 --> 00:06:32.292
download media, so videos off of
the scope and it will allow you

00:06:32.292 --> 00:06:38.298
to do software updates from your
phone. So we downloaded the app

00:06:40.500 --> 00:06:43.637
from the Google play store, we
decompiled them. Tried to figure

00:06:43.637 --> 00:06:46.439
out exactly what the
communications between the S and

00:06:46.439 --> 00:06:53.013
the scope looks like. There is a
WP2 key for the wireless network

00:06:53.013 --> 00:06:58.952
that is a default very guessable
key but it's still there. We

00:06:58.952 --> 00:07:03.523
found that the apps to
communicate between your phone

00:07:03.523 --> 00:07:09.195
and the scope is HTTP only which
isn't that big of a deal when

00:07:09.195 --> 00:07:14.200
you have WP2. We got really
excited when we saw that the

00:07:14.200 --> 00:07:17.771
TrackingPoint app uses HTTP to
pull software updates from

00:07:17.771 --> 00:07:21.308
TrackingPoints website. From
trackingpoint .com but then we

00:07:21.308 --> 00:07:25.345
realized that the updates are
encrypted and signed with HTTP

00:07:25.345 --> 00:07:28.848
with the passwords that we don't
have. So that didn't really seem

00:07:28.848 --> 00:07:35.455
like a big sort of problem
either. When we then took a

00:07:35.455 --> 00:07:39.059
closer look at the mobile apps
we found this public API. That

00:07:39.059 --> 00:07:43.163
is all the options that you have
available to you within the

00:07:43.163 --> 00:07:46.633
mobile app. Which you can set
wind, you can set temperature,

00:07:46.633 --> 00:07:51.071
you can set factoring defaults
and a couple of other things but

00:07:51.071 --> 00:07:56.309
it seemed fairly locked down. It
also seemed like the app was

00:07:56.309 --> 00:08:00.113
validating the input that we
were trying to give it. So you

00:08:00.113 --> 00:08:05.852
can't set this crazy value for
wind for example. So at this

00:08:05.852 --> 00:08:11.558
point we were sort of, we were
hitting a wall. It seemed like a

00:08:11.558 --> 00:08:14.127
fun project initially. It seemed
like something that would be

00:08:14.127 --> 00:08:18.765
easy to do. But we got to this
point and we just couldn't seem

00:08:18.765 --> 00:08:24.704
to find a way in. So we did what
we usually do, we tried a lot of

00:08:24.704 --> 00:08:28.575
different things. We tried the
port scans. Tried to poke some

00:08:28.575 --> 00:08:32.345
more at the different apps. We
tried pushing all sorts of

00:08:32.345 --> 00:08:36.383
random buttons on top of the
scope. >> We also quite

00:08:36.383 --> 00:08:38.818
literally tried [indiscernible]
codes with the buttons trying to

00:08:38.818 --> 00:08:44.190
do something. It did nothing. >>
We couldn't really find a way

00:08:44.190 --> 00:08:50.730
in. So after all of this, the
sort of findings is the SSID for

00:08:50.730 --> 00:08:53.099
the wireless network contains
the serial number of the

00:08:53.099 --> 00:08:57.704
firearm. So in our case it was
TP750 under score the serial

00:08:57.704 --> 00:09:02.909
number. And you cannot change
that. The WP2 key to get onto

00:09:02.909 --> 00:09:08.014
the wifi is an easy to guess --
for us anyways -- key that you

00:09:08.014 --> 00:09:15.088
cannot change either. And NTSB
(ph.) -- the scope view. That is

00:09:15.088 --> 00:09:20.660
not a massive problem. We found
nah the API is unauthenticated

00:09:20.660 --> 00:09:25.432
and anyone who can get on the
wireless network can change

00:09:25.432 --> 00:09:29.335
values and use the mobile app
the same way you would use it.

00:09:29.335 --> 00:09:33.606
But it does validate input. If
you try to change the type of

00:09:33.606 --> 00:09:37.076
ammo used for example for our
rifle, you'll get a drop down

00:09:37.076 --> 00:09:41.948
box with only two values. If you
try to pass it a value that

00:09:41.948 --> 00:09:45.718
aren't either of those two
values, the scope will just

00:09:45.718 --> 00:09:49.689
reject it because there is
something on the back end that

00:09:49.689 --> 00:09:53.560
is validating the input. We
found out that for advanced

00:09:53.560 --> 00:09:57.197
mode, when you want to jump into
the tag and track mode, you can

00:09:57.197 --> 00:10:02.502
set a four-digit pin. So when
you boot the rifle, when you

00:10:02.502 --> 00:10:05.672
boot the scope, before you can
even get into advanced mode you

00:10:05.672 --> 00:10:10.443
have to enter this 4-digit pin.
4 digits is easy to brute force

00:10:10.443 --> 00:10:16.115
and we also found that the API
set factory defaults and will

00:10:16.115 --> 00:10:19.986
also set the lock. So if someone
has the lock set on the rifle,

00:10:19.986 --> 00:10:24.624
you can use that API call and it
will just reset it. And the

00:10:24.624 --> 00:10:27.193
updates are HTTP (ph.) encrypted
and signed as well. >> Quick

00:10:27.193 --> 00:10:30.363
note on the pin lock as well.
When you're loading up the

00:10:30.363 --> 00:10:32.999
TrackingPoint application on the
phone, the first thing it does

00:10:32.999 --> 00:10:37.504
is check to see if a pin is set.
If one is set it won't even let

00:10:37.504 --> 00:10:40.673
you into the app. But again,
when you do that set factory

00:10:40.673 --> 00:10:43.843
defaults it ignores all of that
and just resets, so you're good

00:10:43.843 --> 00:10:47.647
to go. So at this point we've
been treating this as kind of a

00:10:47.647 --> 00:10:51.050
black box. We've been poking at
it, seeing what is available.

00:10:51.050 --> 00:10:53.786
There wasn't really much there.
The footprint was very small.

00:10:53.786 --> 00:10:57.457
There is not much to attack. So
it was time to dig into it a

00:10:57.457 --> 00:10:59.692
little bit more and start
looking at the hardware. So

00:10:59.692 --> 00:11:02.795
first thing we did was start
looking at some recon, kind of

00:11:02.795 --> 00:11:04.797
digging around on
TrackingPoint's website to get

00:11:04.797 --> 00:11:07.834
some idea of what to expect when
we tore this open before

00:11:07.834 --> 00:11:10.270
actually tearing it open. This
picture here came right off the

00:11:10.270 --> 00:11:13.072
website as part of their
marketing. Looks an awful like a

00:11:13.072 --> 00:11:16.009
CAD diagram. If you look there's
some screws, you can see pin

00:11:16.009 --> 00:11:19.379
outs and a couple other things.
Dig around a bit more and found

00:11:19.379 --> 00:11:22.782
a white paper that they put out
with the same type idea. Looks

00:11:22.782 --> 00:11:25.518
like a CAD diagram but from the
other side. And you can see the

00:11:25.518 --> 00:11:28.187
cable that goes down to interact
with the trigger, you can see

00:11:28.187 --> 00:11:30.690
the trigger assembly in the PCD
(ph.) as well as that red button

00:11:30.690 --> 00:11:34.427
that you use to tag the targets
in advanced mode. So once you

00:11:34.427 --> 00:11:37.363
tear it open, it looks an awful
lot like those CAD diagrams.

00:11:37.363 --> 00:11:41.634
They use them in their markets
which was useful. It was nice to

00:11:41.634 --> 00:11:45.171
have some idea what I was
jumping into when pulling things

00:11:45.171 --> 00:11:48.074
apart. Digging around some more
on TrackingPoint's You Tube

00:11:48.074 --> 00:11:51.945
channel they have a video that
actually shows some of the fab

00:11:51.945 --> 00:11:55.515
process. You can see these five
PCBs laid out. Those yellow

00:11:55.515 --> 00:11:58.885
strips in between there are a
flexible, basically a cap tape,

00:11:58.885 --> 00:12:02.589
same type idea. If you use 3D
printing or anything else that

00:12:02.589 --> 00:12:05.124
allows the circuit boards to
take different shapes beyond

00:12:05.124 --> 00:12:08.561
just a circuit board. So when
this is fully assembled here is

00:12:08.561 --> 00:12:10.930
a view of what it looks like
inside. It doesn't actually come

00:12:10.930 --> 00:12:13.800
through up here very well. All
the circuit boards are double

00:12:13.800 --> 00:12:17.804
sided. And they're in this 3D
assembly, meaning simple things

00:12:17.804 --> 00:12:21.074
like I'm going to probe this pin
and see what it does, start to

00:12:21.074 --> 00:12:24.410
become very difficult because
even getting to them requires

00:12:24.410 --> 00:12:28.448
hours of de-sodderring. Here is
a close up of one of the sides.

00:12:28.448 --> 00:12:31.117
On the left side there you can
see a patch of pins underneath

00:12:31.117 --> 00:12:34.454
the focus knob. There are 20 or
30 pins there. Underneath the

00:12:34.454 --> 00:12:38.424
ribbon cable there is another 20
pins that are even smaller. And

00:12:38.424 --> 00:12:40.426
you see the red and black wire
and all of that has to be

00:12:40.426 --> 00:12:44.964
sodderred in order to get this
PCB assembly out. And there's so

00:12:44.964 --> 00:12:47.033
many watchdogs and other things
in the system that when things

00:12:47.033 --> 00:12:49.836
aren't present it doesn't
function anymore. All the things

00:12:49.836 --> 00:12:52.338
I need isn't present and it
shuts down. So the only way to

00:12:52.338 --> 00:12:55.642
test things is having everything
hooked up. So this very simple

00:12:55.642 --> 00:12:59.312
task, oh, I'm going to probe
this really quickly become very

00:12:59.312 --> 00:13:04.317
long, intense tasks. If it works
awesome. If it doesn't, oh, I

00:13:04.317 --> 00:13:06.653
get to spend another two hours
fixing it and trying something

00:13:06.653 --> 00:13:12.258
else. Looking at close up of
this. TrackingPoint was nice.

00:13:12.258 --> 00:13:14.927
They labeled pretty much
everything on this circuit

00:13:14.927 --> 00:13:18.564
board. With this silkscreening
here we can see this patch of 40

00:13:18.564 --> 00:13:22.101
pins. There is two pins labeled
TX and RX and we looked at that

00:13:22.101 --> 00:13:24.971
and said, hey, that looks like
it could be U art (ph.) hooked

00:13:24.971 --> 00:13:29.742
up to it with a bus pirate.
Loaded up a terminal. Turned on

00:13:29.742 --> 00:13:32.779
the scope and this is what we
saw. It was a very exciting

00:13:32.779 --> 00:13:36.683
moment. Takes a minute to boot.
We're going this is great. We've

00:13:36.683 --> 00:13:39.252
seen those projects where people
hook up to U art and they turn

00:13:39.252 --> 00:13:41.254
the thing on and it dumps strait
to a root shell and we're like,

00:13:41.254 --> 00:13:44.924
yes, we're in. Then I finished
booting and came to this. Here

00:13:44.924 --> 00:13:47.593
is a close up for those that
can't quite see that. Strait to

00:13:47.593 --> 00:13:52.198
a password problem. So that was
an emotional roller coaster,

00:13:52.198 --> 00:13:56.669
that moment. Tried all the
things you would expect, blank

00:13:56.669 --> 00:14:00.006
password, password, the top ten
most common passwords. They say

00:14:00.006 --> 00:14:05.278
this on their website, let's try
that word. None of that worked.

00:14:05.278 --> 00:14:10.783
So we also found with the U art
it was running you boot.

00:14:10.783 --> 00:14:14.087
Probably can't see it in there
but there is a thing that says

00:14:14.087 --> 00:14:17.323
press a key to interrupt and
dump into U boot. With you boot

00:14:17.323 --> 00:14:21.694
there is a function to download
memory, so you can put in a set

00:14:21.694 --> 00:14:25.732
of address space and it will
dump out the memory. With some

00:14:25.732 --> 00:14:28.067
project ifs the memory that it's
pulling from happens to be the

00:14:28.067 --> 00:14:32.538
file system as well, you can
dump everything that way. It's a

00:14:32.538 --> 00:14:36.743
tedious process. Takes a long
time. You're doing it at the

00:14:36.743 --> 00:14:39.912
speed of U art which isn't
particularly quick. But it does

00:14:39.912 --> 00:14:43.449
end up working. We tried doing
this. Did I mention this runs

00:14:43.449 --> 00:14:47.854
off of batteries? We tried the
first time and it's running and

00:14:47.854 --> 00:14:51.057
it's running and it's running
and all of a sudden it's off.

00:14:51.057 --> 00:14:55.928
We're like, oh, that's not good.
And we look at the size of the

00:14:55.928 --> 00:15:01.467
dump and it's 15.5 meg and the
full dump is 16 meg. So that was

00:15:01.467 --> 00:15:07.073
very unfortunate. So ran to the
electronic's supply store,

00:15:07.073 --> 00:15:10.243
bought a bench power supply,
hooked that up. No batteries

00:15:10.243 --> 00:15:14.347
required anymore. We were able
to get the dump. And looking

00:15:14.347 --> 00:15:16.749
like the dump we're like suite,
this runs bit 1, we'll find the

00:15:16.749 --> 00:15:19.452
[indiscernible] and extract it
and get in and all we see is

00:15:19.452 --> 00:15:22.255
four Linux kernels, nothing
else. Not to mention 16 meg

00:15:22.255 --> 00:15:24.857
seems awful small for a file
system for something that's

00:15:24.857 --> 00:15:28.394
recording videos. So it turns
out this is when we learned

00:15:28.394 --> 00:15:33.466
there is another chip somewhere
that has a file system on it.

00:15:33.466 --> 00:15:38.004
Round two findings, the console
axis is password protected and

00:15:38.004 --> 00:15:41.474
the initial cursory stuff, the
kernels are on one chip and the

00:15:41.474 --> 00:15:46.646
file systems are on a separate
chip someplace. So time for

00:15:46.646 --> 00:15:49.482
round three. At this point we've
been nice to it. At this point

00:15:49.482 --> 00:15:54.620
we've been trying not to break
anything and to be gentle. After

00:15:54.620 --> 00:15:57.056
banging our heads against the
wall repeatedly, it was time to

00:15:57.056 --> 00:16:00.193
get a little more destructive.
So we ended up pulling the whole

00:16:00.193 --> 00:16:07.800
thing out. Met with Bob Giovati
(ph.), he was nice enough to

00:16:07.800 --> 00:16:11.537
de-sodder some stuff for us.
Spent a weekend with us working

00:16:11.537 --> 00:16:15.208
on this. He noticed the big chip
on the top there is an FPGA.

00:16:15.208 --> 00:16:19.312
There is an empty slot next to
that or empty square, there was

00:16:19.312 --> 00:16:22.048
a chip there. When we were
looking at it, we could see

00:16:22.048 --> 00:16:24.550
another chip. We're like that's
another memory chip, file system

00:16:24.550 --> 00:16:27.653
chip, all right, that must be it
and the failure to read the data

00:16:27.653 --> 00:16:32.124
sheet and not comprehend that
512 mega bits is not 512 mega

00:16:32.124 --> 00:16:37.463
bytes. So yes, 32 meg chip that
programs the FPGA that is

00:16:37.463 --> 00:16:40.199
sitting there. So as fun as that
was to pull that off and dump

00:16:40.199 --> 00:16:44.170
it, it did absolutely nothing
for us. Looking at this next

00:16:44.170 --> 00:16:48.107
torn apart lovely piece of
circuitty here, you can see the

00:16:48.107 --> 00:16:50.376
file system chip in here. I'll
give everybody a moment to try

00:16:50.376 --> 00:16:56.048
and find this. Anybody find it
yet? That's where it's sitting.

00:16:56.048 --> 00:17:00.086
It's underneath a massive
capacitor. On its own also made

00:17:00.086 --> 00:17:02.455
it interesting to try to find
because it's very well hidden

00:17:02.455 --> 00:17:05.892
unless you're at the right
angle. And then you see these --

00:17:05.892 --> 00:17:10.229
this five -- five character
string there which is a short

00:17:10.229 --> 00:17:12.899
code that micron uses for their
BPGA (ph.) packages.

00:17:12.899 --> 00:17:15.801
Unfortunately because this was a
BGF (ph.) package the initial

00:17:15.801 --> 00:17:19.538
plan was, once we find the file
system we can tap onto the pins

00:17:19.538 --> 00:17:23.109
and be able to dump it that way.
The BGA (ph.) package not so

00:17:23.109 --> 00:17:25.711
much. There is all sorts of
obscure ways to try to do that

00:17:25.711 --> 00:17:30.449
but it's not easy. So at this
point we were just set, pull the

00:17:30.449 --> 00:17:33.586
stupid chip off and dump it that
way. We know this can be done.

00:17:33.586 --> 00:17:35.988
This will get us what we want.
It may not work when we're done,

00:17:35.988 --> 00:17:38.858
don't care. Got a hold of some
people in Portland, they were

00:17:38.858 --> 00:17:42.228
like, yes, we can help you do
that but you're aware it may not

00:17:42.228 --> 00:17:45.598
work. And we're like we don't
care as long as we get what we

00:17:45.598 --> 00:17:48.267
need. We packed everything up
and flew to Portland to meet

00:17:48.267 --> 00:17:51.938
with them and they luckily know
more about hardware than we did.

00:17:51.938 --> 00:17:54.674
So they saw this silkscreening
and said these pins look

00:17:54.674 --> 00:17:59.845
familiar, these look like
actually EMMC access pins. That

00:17:59.845 --> 00:18:06.352
PA0 to DA7 maps directly to
accessing an EMMC chip. They

00:18:06.352 --> 00:18:08.354
called around to a couple of
their friends after trying a

00:18:08.354 --> 00:18:10.356
couple of other things to try
and get it, one of their friends

00:18:10.356 --> 00:18:15.895
happened to have this. Ali Babba
special, $118. It's an EMMC to

00:18:15.895 --> 00:18:21.701
USB adapter. The socket that is
on here is worth probably $100

00:18:21.701 --> 00:18:24.804
on its own. It comes in this
nice package, so if you do

00:18:24.804 --> 00:18:27.139
de-sodder the chip you can drop
it in that socket, plug it in,

00:18:27.139 --> 00:18:30.710
you have now a really clunky USB
thumb drive. But there is also

00:18:30.710 --> 00:18:34.847
these pins in between the socket
and the USB port which map to

00:18:34.847 --> 00:18:39.652
that DA0 to DA7 command. So we
hooked it up. We were able to

00:18:39.652 --> 00:18:43.155
dump the file system this way.
Plugged it in. We got all five

00:18:43.155 --> 00:18:49.795
volumes of it. It was a very
good day. First thing we did

00:18:49.795 --> 00:18:52.264
short of looking at the ESE
(ph.) password file which did

00:18:52.264 --> 00:18:56.235
nothing for us, was look at the
root for the web server. And

00:18:56.235 --> 00:18:58.637
there's a whole admin API that
we hadn't been able to find yet.

00:18:58.637 --> 00:19:01.474
This isn't all the commands that
we found but some of the stuff

00:19:01.474 --> 00:19:07.446
in here is interesting. This set
wifi lets you change the wifi AP

00:19:07.446 --> 00:19:11.584
name and password. SHS accept
sounds interesting. Running that

00:19:11.584 --> 00:19:16.022
gives you access to SSHN, it
opens up a port for you. >> One

00:19:16.022 --> 00:19:22.428
of the admin API codes that we
also found allows you to

00:19:22.428 --> 00:19:27.233
communicate directly with a
system back end. The part of the

00:19:27.233 --> 00:19:31.537
Linux system that does the
ballistics calculations for the

00:19:31.537 --> 00:19:37.376
rifle. It actually connecting to
it requires the admin call that

00:19:37.376 --> 00:19:40.813
opens a port in the firewall.
You can then just connect it to

00:19:40.813 --> 00:19:46.452
a set of socket ands talk to it
there. While the mobile apps

00:19:46.452 --> 00:19:50.356
will validate the input, so like
I said if you're trying to

00:19:50.356 --> 00:19:53.325
select a type of ammo, you will
only have two options. The

00:19:53.325 --> 00:19:57.997
system back end will happily
accept any value you set. So

00:19:57.997 --> 00:20:03.002
when we did the demo with wired
that came out last week, what we

00:20:03.002 --> 00:20:07.640
did there is instead of the
default value for the bullet

00:20:07.640 --> 00:20:10.910
grain or the weight of the
bullet, we set that -- we

00:20:10.910 --> 00:20:15.514
changed it from 175 to 500 --> 000
and the system just happily

00:20:15.514 --> 00:20:18.017
accepted that? >> If you do the
math on that it's like 72

00:20:18.017 --> 00:20:22.121
pounds, by the way. >> It will
happily take negative values.

00:20:22.121 --> 00:20:29.428
There are options in there that
are for sort of future type

00:20:29.428 --> 00:20:33.332
stuff that we can't use but it's
definitely in there. We can do

00:20:33.332 --> 00:20:37.703
things like tell the scope that
it's -- that it attached to a

00:20:37.703 --> 00:20:42.775
different type of rifle. Or a
different type of firearm. We

00:20:42.775 --> 00:20:48.581
can tell it that the solenoids
is disconnected so you cannot

00:20:48.581 --> 00:20:54.019
fire. It has one option for
default or [indiscernible] which

00:20:54.019 --> 00:20:58.190
deletes the whole thing. >> It's
really fun to do when someone is

00:20:58.190 --> 00:21:02.161
playing with it. They're lining
up for their shot and it

00:21:02.161 --> 00:21:05.297
reboots. >> So with, when you're
interacting directly with the

00:21:05.297 --> 00:21:08.834
system back end you can make
temporary changes to the system.

00:21:08.834 --> 00:21:12.972
You can do anything you want
within that sort of system back

00:21:12.972 --> 00:21:17.276
end but that is only for the
part that does the ballistics.

00:21:17.276 --> 00:21:21.547
It's not really the full Linux
system. We have a demo, it's

00:21:21.547 --> 00:21:25.885
similar to the one that was in
Wired but it's shot from a

00:21:25.885 --> 00:21:30.923
couple of different angles. >>
So this first video is normal

00:21:30.923 --> 00:21:34.426
operation. So we'll be tagging
the target, lining up for the

00:21:34.426 --> 00:21:36.729
shot, taking the shot. We're
aiming at the target on the

00:21:36.729 --> 00:21:44.670
right here. Here it goes. Line
up. There we go. We have the

00:21:44.670 --> 00:21:48.007
tag. The cross hairs drop. Pull
the triggerment once we're lined

00:21:48.007 --> 00:21:52.344
back up it fires. There we go.
Hit pretty much exactly where

00:21:52.344 --> 00:21:57.349
that tag was. Nice and easy? >>
That is from about 50-yards. >>

00:21:57.349 --> 00:22:01.487
Looked pretty easy even without
this. But for the sake of Wired

00:22:01.487 --> 00:22:05.424
we were at 50-yards. Here is
what happens when you set that

00:22:05.424 --> 00:22:10.496
bullet weight to 500 --> 000 instead
of 175. So aiming at the same

00:22:10.496 --> 00:22:17.303
target on the right but watch
the cross hairs. Quite the

00:22:17.303 --> 00:22:23.509
difference in ballistics there.
So lines up, takes the shot,

00:22:23.509 --> 00:22:25.511
come back in. We can see -- I
don't know if you can site in

00:22:25.511 --> 00:22:27.813
the back but there is now a
white target on the left. So

00:22:27.813 --> 00:22:31.650
we'll do these side by side so
you can see them better. The

00:22:31.650 --> 00:22:37.056
first one here is the one on the
left. It's normal operation. And

00:22:37.056 --> 00:22:40.859
as it lines up, takes a shot,
pull the trigger to line up. Now

00:22:40.859 --> 00:22:45.497
the second one calculates a
whole different ballistics and

00:22:45.497 --> 00:22:49.435
we line up, both take the shot.
The one on the left hit where we

00:22:49.435 --> 00:22:51.670
were aiming. The one on the
right hit the target on the left

00:22:51.670 --> 00:22:56.242
instead. We we've essentially
controlled from the shooter's

00:22:56.242 --> 00:22:58.510
perspective they thought they
were aiming at the target on the

00:22:58.510 --> 00:23:01.380
right. The bullet actually hit
the target on the left? >> So

00:23:01.380 --> 00:23:05.184
the only indication to the
shooter that something is off

00:23:05.184 --> 00:23:11.023
is, one, the wifi icon inside
the hood has the No. 1 or the

00:23:11.023 --> 00:23:14.193
No. 2 depending on how many
people have connections. I can

00:23:14.193 --> 00:23:18.397
say from experience that when I
was lining up for a shot I did

00:23:18.397 --> 00:23:20.799
not really pay attention to
anything else in the hood

00:23:20.799 --> 00:23:24.970
besides where the target was. An
experienced shooter might

00:23:24.970 --> 00:23:29.975
actually see that change. >> Do
you guys want to see the video

00:23:29.975 --> 00:23:36.949
again? All right. We'll do it
one more time. There you go. The

00:23:36.949 --> 00:23:43.222
target on the left. Normal
operation. And now on this one,

00:23:43.222 --> 00:23:46.525
pay close attention to where the
cross hairs go. Quite the

00:23:46.525 --> 00:23:52.031
difference. >> And that's the
other thing, the cross hairs

00:23:52.031 --> 00:23:56.502
will jump and then you have to
readjust. So again for anyone

00:23:56.502 --> 00:23:59.571
who's not a very experienced
shooter you chock it up to I

00:23:59.571 --> 00:24:03.409
just bumped the rifle a bit and
have to realign. >> Keep in mind

00:24:03.409 --> 00:24:06.145
all of this can be done with
zero authentication short of

00:24:06.145 --> 00:24:12.017
getting on the wifi. >> So we
got the system back in. We got

00:24:12.017 --> 00:24:15.554
this sort of demo that was at
the top of our list where we

00:24:15.554 --> 00:24:18.157
wanted to make the shooter miss
the shot but we also wanted to

00:24:18.157 --> 00:24:22.795
get root axis on the Linux
system. So we found a way to do

00:24:22.795 --> 00:24:26.465
that by using the software
update functionality. Once we

00:24:26.465 --> 00:24:29.668
got access to the file system,
we had to look at the update

00:24:29.668 --> 00:24:33.572
script. We found that
TrackingPoint operates with two

00:24:33.572 --> 00:24:40.379
DBG keys. One that it holds at
HQ I guess and one key that is

00:24:40.379 --> 00:24:44.950
on the scope. And the updated
script will verify the signature

00:24:44.950 --> 00:24:48.320
of the package but it will not
check to see which of the two

00:24:48.320 --> 00:24:52.524
keys actually signed it. So if
you have access to the private

00:24:52.524 --> 00:24:56.628
key that is on the scope, you
can create a software update

00:24:56.628 --> 00:25:00.065
that will be verified by any
TrackingPoint firearm out there.

00:25:00.065 --> 00:25:05.104
By using that private key we
decrypted the software updates

00:25:05.104 --> 00:25:08.140
that we had already downloaded
from TrackingPoint's website,

00:25:08.140 --> 00:25:12.711
modified them, reencrypted and
signed and pushed it up to the

00:25:12.711 --> 00:25:15.714
scope with the updated script
was happily accepting it. With

00:25:15.714 --> 00:25:19.051
the software updates we can make
permanent changes to the system.

00:25:19.051 --> 00:25:23.355
We only need access to a wifi
once to do this and then we can

00:25:23.355 --> 00:25:26.558
change everything, all the
ballistics values and everything

00:25:26.558 --> 00:25:30.195
we can do on the back end we can
now make permanent changes on

00:25:30.195 --> 00:25:35.467
the Linux system and we can get
root access this way as well? >>

00:25:35.467 --> 00:25:40.105
So here is a demonstration of
that. So first part here, we're

00:25:40.105 --> 00:25:44.076
going to try SSH to the scope.
Probably nobody in the back can

00:25:44.076 --> 00:25:48.213
see this or the front, because I
can barely see it. The first

00:25:48.213 --> 00:25:51.717
call that it's doing here is
hitting the SSH under score

00:25:51.717 --> 00:25:55.220
accept. This is basically having
the scope literally pass an IP

00:25:55.220 --> 00:25:59.358
tables command to open up port
22. Then SSH as the user hacker

00:25:59.358 --> 00:26:03.162
to 291.268.1.1 which is the
scope. And it comes back as

00:26:03.162 --> 00:26:06.999
expected. We're going to up load
the package update, run this,

00:26:06.999 --> 00:26:09.468
this is what you see in the hud
when the update is happening.

00:26:09.468 --> 00:26:15.474
Modified a few other things
instead of just adding a user.

00:26:21.146 --> 00:26:28.087
The package is finished
applying, the scope will reboot.

00:26:28.087 --> 00:26:31.190
No sound on this. We don't have
the audio for it. When the scope

00:26:31.190 --> 00:26:35.561
is booting it does a trigger
check. It pings the solenoids.

00:26:35.561 --> 00:26:39.531
So the gun is going click click.
It's interesting when we were

00:26:39.531 --> 00:26:42.568
working on this, the gun was up
and we're doing things and we

00:26:42.568 --> 00:26:45.003
hear click click. Wait, was that
you? Did you do that? What just

00:26:45.003 --> 00:26:48.974
happened? That was pretty
entertaining. The second part,

00:26:48.974 --> 00:26:54.012
here we go. Scopes back up,
reconnected to the wifi. Hit SSH

00:26:54.012 --> 00:26:58.584
under score accept again. Opens
up port 22. Now we SSH in as the

00:26:58.584 --> 00:27:05.457
user hacker. And no password and
we're in. Who am I? Can anybody

00:27:05.457 --> 00:27:10.028
see or read any of that? Anybody
in the back, you're screwed, you

00:27:10.028 --> 00:27:13.966
should have gotten here earlier.
So yea, using this package

00:27:13.966 --> 00:27:19.972
updates, full access to the gun.
>> So to summarize round three,

00:27:22.574 --> 00:27:28.580
we found that the admin API is
unauthenticated. You need to be

00:27:33.051 --> 00:27:36.755
on the wireless network and you
need to know about the admin API

00:27:36.755 --> 00:27:41.627
calls but that's it. So these
API calls are present on any

00:27:41.627 --> 00:27:44.096
TrackingPoint firearms so if you
know about them you can use them

00:27:44.096 --> 00:27:49.835
on any of them. The system back
end is authenticated again, full

00:27:49.835 --> 00:27:54.973
access to anyone that knows
about them. It does not validate

00:27:54.973 --> 00:27:58.477
any input. Whether you tell it
that the bullet weighs 500 --> 000

00:27:58.477 --> 00:28:04.016
or minus 500 --> 000, it will
happily accept that information.

00:28:04.016 --> 00:28:07.619
And the GPD key on the scope can
encrypt and assign updates that

00:28:07.619 --> 00:28:11.890
other TrackingPoint firearms
will happily accept and apply as

00:28:11.890 --> 00:28:17.563
well? >> At this point as great
as it is to get root, the

00:28:17.563 --> 00:28:20.299
attacker would have had to have
access to one of these guns,

00:28:20.299 --> 00:28:23.702
dumped out this GPG cert. Made
their own package. We weren't

00:28:23.702 --> 00:28:28.273
really happy with that. So
worked with some really smart

00:28:28.273 --> 00:28:31.510
people in Portland, Kenny and
Jessie. Asked, we have one more

00:28:31.510 --> 00:28:35.380
thing for you. I don't know how
many of you made a firearm

00:28:35.380 --> 00:28:39.217
routable on the internet, but we
have. Kind of awesome. So

00:28:39.217 --> 00:28:44.356
they're working in Portland and
we're in DC working and we have

00:28:44.356 --> 00:28:48.226
full remote code execution now.
Leveraging the package update.

00:28:48.226 --> 00:28:51.663
Everybody back there you're
screwed. Leveraging the full

00:28:51.663 --> 00:28:55.500
package update, we have a shell
script that basically passes

00:28:55.500 --> 00:28:57.736
commands to it. You run it, it
tells you to open up the net cat

00:28:57.736 --> 00:29:01.440
listener on a specific port. You
go back and hit any key. It up

00:29:01.440 --> 00:29:06.278
loads a package. Run the package
and jump [indiscernible] command

00:29:06.278 --> 00:29:12.084
and dumps a remote shell back to
the net CAD listener. Now

00:29:12.084 --> 00:29:15.954
instantly route on any
TrackingPoint rifle, no access

00:29:15.954 --> 00:29:21.760
previously required. Dumps in, I
can make a new user across the

00:29:21.760 --> 00:29:26.732
board. ...(applause)...? >> So
it's not all that bad I'd say

00:29:26.732 --> 00:29:31.770
after having the remotes. Quid
execution, remote updates and

00:29:31.770 --> 00:29:38.243
direct access to the system back
end. But when you compare what

00:29:38.243 --> 00:29:40.245
TrackingPoint did to what a lot
of other inventors of inventive

00:29:40.245 --> 00:29:44.016
devices do, TrackingPoint did do
a lot of good things in securing

00:29:44.016 --> 00:29:47.686
the system. So early on I
mentioned that the scope has two

00:29:47.686 --> 00:29:51.757
USB ports. They're disabled
during boot so you can't do

00:29:51.757 --> 00:29:55.093
anything with them. The media
that is on the scope, so if

00:29:55.093 --> 00:29:58.397
you're been out, fired a couple
of shots, the media is deleted

00:29:58.397 --> 00:30:02.501
from the scope as soon as you
downloaded it onto your phone.

00:30:02.501 --> 00:30:07.105
So if you at any point have to
send your firearm to someone or

00:30:07.105 --> 00:30:11.843
back to TrackingPoint, there's
not going to be any media on it.

00:30:11.843 --> 00:30:15.681
There is a WPA2 (ph.) key even
if it is guess able and you

00:30:15.681 --> 00:30:20.318
cannot change it, it's still
there. The EPI validates user

00:30:20.318 --> 00:30:24.990
inputs. We have a star next to
it because the API, the one that

00:30:24.990 --> 00:30:28.126
you're interacting with when
you're using the mobile app will

00:30:28.126 --> 00:30:31.363
verify that the input you're
giving it is within this allowed

00:30:31.363 --> 00:30:35.667
range. The only part of the
public API that does not

00:30:35.667 --> 00:30:39.237
validate the user input is the
software update functionality.

00:30:39.237 --> 00:30:42.774
Instead of giving it a package,
you just tell it to execute a

00:30:42.774 --> 00:30:45.110
command. Console access is
password protected and software

00:30:45.110 --> 00:30:50.282
updates are GPD encrypted and
signed even though the

00:30:50.282 --> 00:30:55.454
implementation is not as good as
we would like it to be? >> So

00:30:55.454 --> 00:30:57.856
will this get better for
TrackingPoint? We did reach out

00:30:57.856 --> 00:31:00.125
to them starting in April to
talk to them about the stuff we

00:31:00.125 --> 00:31:02.894
were finding, we had zero
replies up until Andy Greenburg

00:31:02.894 --> 00:31:04.996
wrote the Wired piece. At which
point we immediately got a phone

00:31:04.996 --> 00:31:08.767
call since he got off the phone
with them, one of the

00:31:08.767 --> 00:31:11.937
TrackingPoint founders called us
up. Said we were doing great

00:31:11.937 --> 00:31:14.673
work. We knew somebody would do
it actually. They were just

00:31:14.673 --> 00:31:17.109
happy to work with us. So we're
working on a patch for all of

00:31:17.109 --> 00:31:22.481
this. As far as the vendor goes,
they've been great to work with.

00:31:22.481 --> 00:31:25.617
>> So somewhere you probably saw
this on Twitter. A couple of

00:31:25.617 --> 00:31:29.387
days ago TrackingPoint updated
their website with this little

00:31:29.387 --> 00:31:32.824
notice. It says that they're
working with us in fixing the

00:31:32.824 --> 00:31:38.830
issues which is great. It also
says that your gun can only be

00:31:41.633 --> 00:31:44.703
compromised if the hacker is
physically with you. It goes

00:31:44.703 --> 00:31:49.274
onto say that you can continue
to use the wifi if you're

00:31:49.274 --> 00:31:55.280
confident no hackers are within
100 feet. >> I'd like to point

00:32:00.986 --> 00:32:05.590
out they're wrong. We've all
seen the wifi shoot out that

00:32:05.590 --> 00:32:09.094
hits 50-miles or something like
that at this point. Or if

00:32:09.094 --> 00:32:11.830
somebody using the gun has a
compromised device on them, that

00:32:11.830 --> 00:32:15.200
can do it as well. But at least
they're trying. >> I've got a

00:32:15.200 --> 00:32:18.837
lot of photos of Pringles cans
in my Twitter feed pringles

00:32:18.837 --> 00:32:21.206
saying this screen shot. >>
Overall as an industry vendors

00:32:21.206 --> 00:32:25.410
need to level up. People have
been saying this in the industry

00:32:25.410 --> 00:32:29.514
for a long time. But it's still
true. The issues found here with

00:32:29.514 --> 00:32:33.018
this product are not unique to
this product. Too many vendors

00:32:33.018 --> 00:32:35.954
are ignoring the low-hanging
fruit. So things like password

00:32:35.954 --> 00:32:39.624
protecting U art for example.
It's a simple thing for vendors

00:32:39.624 --> 00:32:42.894
to do and most of them are not
doing it. Really simple things

00:32:42.894 --> 00:32:45.864
that are overlooked. We tried to
find some resources to recommend

00:32:45.864 --> 00:32:48.466
to people that are doing
inventive system design or

00:32:48.466 --> 00:32:50.869
security on embedded systems,
there currently is nothing we

00:32:50.869 --> 00:32:53.805
could find. The best things we
could find currently are build a

00:32:53.805 --> 00:32:56.808
secure link. Which has a lot of
general device around building

00:32:56.808 --> 00:33:01.413
system securely. And the OIS
(ph.) top ten, given this has

00:33:01.413 --> 00:33:04.216
the API and all of that. A lot
of these issues would have been

00:33:04.216 --> 00:33:08.186
taken care of if they had
adhered to that top ten as well.

00:33:08.186 --> 00:33:12.691
So if anybody is add Venn rows,
our people that give trainings

00:33:12.691 --> 00:33:15.193
and things like that, they talk
about things that you should be

00:33:15.193 --> 00:33:17.963
doing when you're thinking about
it. But there is no solidified

00:33:17.963 --> 00:33:21.199
resource. So if anybody works
someplace that has a lot of sway

00:33:21.199 --> 00:33:24.169
in these area, it's something
that definitely needs to be out

00:33:24.169 --> 00:33:27.939
there and more vendors need to
pay attention to. Huge thanks to

00:33:27.939 --> 00:33:31.843
everybody on this list. Couldn't
have done this without these

00:33:31.843 --> 00:33:35.013
people. They were a huge help.
This is definitely a community

00:33:35.013 --> 00:33:37.782
project and I definitely
recommend to anybody that is

00:33:37.782 --> 00:33:40.318
thinking about doing something
but not sure if they can, go

00:33:40.318 --> 00:33:43.421
ahead and do it anyway. Start
reaching out to the community.

00:33:43.421 --> 00:33:46.558
When you start hitting walls,
asking people, people are really

00:33:46.558 --> 00:33:49.761
great about helping out. So just
because you may not know how to

00:33:49.761 --> 00:33:52.330
do something end to end, don't
let that stop you when you're

00:33:52.330 --> 00:33:55.400
trying to do something? >> I
just want to add that when we

00:33:55.400 --> 00:33:57.836
started this project and when we
reached out to these people,

00:33:57.836 --> 00:34:00.805
most of them I had never met
before this project. They were

00:34:00.805 --> 00:34:05.277
happy to take the time to sit
down and work with us and help

00:34:05.277 --> 00:34:09.881
us put together a great
presentation and actually

00:34:09.881 --> 00:34:13.418
complete the project and get the
info that we wanted. So thank

00:34:13.418 --> 00:34:17.155
you. >> That's everything we got
for you guys so any questions

00:34:17.155 --> 00:34:23.161
we're happy to take those.
...(applause)... >> Yes. So

00:34:30.268 --> 00:34:36.274
we'll get a microphone if anyone
has any questions. >> I got a

00:34:53.592 --> 00:35:00.932
question. Have you tried to put
it on any other things like

00:35:00.932 --> 00:35:05.603
adapt into a bow or something.
>> Into what? >> Adapt the scope

00:35:05.603 --> 00:35:10.408
into another device, like a bow
or a grappling gun. >> It could

00:35:10.408 --> 00:35:15.046
be done you have to adjust all
the ballistics for the things

00:35:15.046 --> 00:35:19.651
that you're using it with. Given
the access that you have it's

00:35:19.651 --> 00:35:22.087
definitely doable but it's
nothing we bothered looking

00:35:22.087 --> 00:35:25.323
into. >> Thank you. >> What
ballistics value were you

00:35:25.323 --> 00:35:29.127
changing to achieve the offset
to the left. You talked about

00:35:29.127 --> 00:35:33.298
changing the grain size of the
bullet. It seems you get a

00:35:33.298 --> 00:35:36.768
horizontal adjustment rather
than a -- >> Yes. We discovered

00:35:36.768 --> 00:35:39.571
that was happening. We were
using the shot, looking through

00:35:39.571 --> 00:35:41.673
it and getting access to the
back end, oh, I can adjust these

00:35:41.673 --> 00:35:46.344
variables. And you adjust them
and the cross hairs jump live.

00:35:46.344 --> 00:35:49.881
So when I adjusted the weight I
was expecting that. Oh, the

00:35:49.881 --> 00:35:51.883
bullet weight, cool, that could
go up and down and all of a

00:35:51.883 --> 00:35:55.487
sudden we adjusted like 1 --> 000
not much. 10 --> 000 it jumps to the

00:35:55.487 --> 00:35:58.890
right. That seems awkward. But
there's been a couple of people

00:35:58.890 --> 00:36:01.926
that reached out nicely or
otherwise to explain that we're

00:36:01.926 --> 00:36:05.363
idiots for not looking up how
ballistics effects are done and

00:36:05.363 --> 00:36:08.767
Coriolis effects and all that.
And all these reasons to which

00:36:08.767 --> 00:36:12.303
I'm like that's cool, I'm really
curious about that but in the

00:36:12.303 --> 00:36:14.372
end I don't really care all that
much because in the end I got it

00:36:14.372 --> 00:36:19.344
to do what I wanted regardless.
But, yes, that was the exact

00:36:19.344 --> 00:36:25.350
train of thought we had. >>
Thank you. >> You said that the

00:36:27.585 --> 00:36:31.089
key from the rifle could sign
updates for any other rifle or

00:36:31.089 --> 00:36:35.593
just it? >> For any other rifle.
The GPG key that is on the

00:36:35.593 --> 00:36:40.198
scope, they use the same key on
all the other scopes as well. >>

00:36:40.198 --> 00:36:47.439
Okay. Thank you. >> Sorry? >>
Good question. The question is

00:36:47.439 --> 00:36:52.143
why would they do that. >>
Because they can. >> You guys

00:36:52.143 --> 00:36:57.982
made any attempt to find the
algorithm used for WPASSID or

00:36:57.982 --> 00:37:04.155
the SSID as well as the WPA2
key? >> So algorithm, there

00:37:04.155 --> 00:37:08.593
isn't one. It's a hard set key
value which literally is some

00:37:08.593 --> 00:37:11.362
words. The way we found it, we
didn't have to correct that. We

00:37:11.362 --> 00:37:13.631
needed to have the manual. So
it's like use this key to

00:37:13.631 --> 00:37:17.001
connect. It's hard velocity.
There are a couple other systems

00:37:17.001 --> 00:37:20.271
they have. So previous to making
these weapons they didn't make

00:37:20.271 --> 00:37:23.074
the Remington 2020 which is a
scope that you can buy for any

00:37:23.074 --> 00:37:27.712
weapon or any rifle. The way
that the SSID is generated for

00:37:27.712 --> 00:37:31.516
those is REM underscore and the
last 4 digits of the serial

00:37:31.516 --> 00:37:35.286
number on the gun. So that is
unique to each scope. And the

00:37:35.286 --> 00:37:38.656
WPA key was a similar type idea
for those. So they definitely

00:37:38.656 --> 00:37:41.693
know of ways to do it better
than what they did. There is a

00:37:41.693 --> 00:37:45.830
usability trade off. When most
of your users are not technical

00:37:45.830 --> 00:37:48.933
you want to make it as easy for
them with as few barriers as

00:37:48.933 --> 00:37:52.303
possible to use the product. So
definitely one of the things we

00:37:52.303 --> 00:37:57.876
looked at when we saw that is
this is horrible and did the

00:37:57.876 --> 00:38:03.848
risk models on it and thought
it's really not that bad. But as

00:38:03.848 --> 00:38:09.420
far as any algorithms, will is
none. It's just hard set like

00:38:09.420 --> 00:38:14.993
that? >> Thank you. >> Someone
wanted to replay a video? The

00:38:14.993 --> 00:38:21.499
update video? >> Yes. >> Can we
play it? >> There you go, this

00:38:21.499 --> 00:38:24.669
is the software update one more
sometime for those that missed

00:38:24.669 --> 00:38:29.874
it. Or they really like Duck
Hunt, either way. >> We can take

00:38:29.874 --> 00:38:36.181
questions at the same time. >>
You said that you could not make

00:38:36.181 --> 00:38:41.319
the rifle fire without the user
input, right? >> Correct. >>

00:38:41.319 --> 00:38:44.923
Pulling the trigger. Why? Is
there any mechanical interlock

00:38:44.923 --> 00:38:47.892
that prevents you from doing
that? >> Is no mechanical lock.

00:38:47.892 --> 00:38:51.563
It's the way a gun trigger
mechanism works. You need a

00:38:51.563 --> 00:38:54.566
mechanical interaction and the
way they're interfacing with

00:38:54.566 --> 00:38:57.502
that, it doesn't remove that
need. So the way they're

00:38:57.502 --> 00:39:00.438
interfacing with it, you have
the trigger assembly and when

00:39:00.438 --> 00:39:02.874
you pull the trigger, normally
the firing pin would release.

00:39:02.874 --> 00:39:05.877
They have a solenoids that stops
that release from occurring. So

00:39:05.877 --> 00:39:08.112
you pull the trigger and instead
of it releasing it's held by a

00:39:08.112 --> 00:39:11.783
solenoids instead of by the
trigger. Now when you line up it

00:39:11.783 --> 00:39:15.887
releases the solenoids and the
weapon fires. >> Could the --

00:39:15.887 --> 00:39:19.591
rifle be acting as a
[indiscernible] and then fire.

00:39:19.591 --> 00:39:22.894
>> The solenoids they use is
normally open. So unless there

00:39:22.894 --> 00:39:25.396
is power, it's going to stay
open. If you were to switch

00:39:25.396 --> 00:39:27.899
aground and put a solenoids that
is normally closed and requires

00:39:27.899 --> 00:39:32.770
power to open it, then it would
have that effect. >> Thank you.

00:39:32.770 --> 00:39:35.073
>> Actually I kind of had the
same question he did. But

00:39:35.073 --> 00:39:38.943
wouldn't the software stop you
from firing the the weapon? >>

00:39:38.943 --> 00:39:42.614
It's nothing in the software.
It's the fact that you need the

00:39:42.614 --> 00:39:45.383
mechanical interaction, period.
>> Okay. >> We can prematurely

00:39:45.383 --> 00:39:48.086
cause the solenoids to release
if somebody is already doing it

00:39:48.086 --> 00:39:51.122
but that's still -- at that
point somebody is trying to take

00:39:51.122 --> 00:39:53.524
a shot. So they're lined up
hopefully in the direction of

00:39:53.524 --> 00:39:56.628
the thing they're trying to
shoot in any way. So while it's

00:39:56.628 --> 00:39:58.630
a surprising behavior for
somebody that is trying to take

00:39:58.630 --> 00:40:01.899
the shot, it's still not
particularly bad. It's not going

00:40:01.899 --> 00:40:08.906
to cause any major issues. >>
You say you looked at the public

00:40:08.906 --> 00:40:14.178
API documentation to look at the
HTP calls that are made. Did you

00:40:14.178 --> 00:40:19.250
also man in the middle the
mobile app? >> Yes. Less about

00:40:19.250 --> 00:40:21.519
documentation and more about
decompiling the apps and

00:40:21.519 --> 00:40:24.022
snipping what was going on with
the network. And the fact it was

00:40:24.022 --> 00:40:27.925
all HTTP made our lives a lot
easier. But, yeah, also got to

00:40:27.925 --> 00:40:30.795
learn how to decrypt WPH
wrapping in the process of doing

00:40:30.795 --> 00:40:36.801
this which was fun. >> Any other
questions? Nope. Okay. Thank

00:40:44.542 --> 00:40:47.578
you. >> Thanks again.
...(applause)...

