00:00:00.000 --> 00:00:04.471
How is everybody doing?
(Applause) All right. Boy, this

00:00:04.471 --> 00:00:09.977
conference would be more fun if
more people came, right? A

00:00:09.977 --> 00:00:15.983
couple of notes. How many first
time attendees do we have here?

00:00:15.983 --> 00:00:19.820
That is awesome! Awesome! This
is DEF CON. This is not like a

00:00:19.820 --> 00:00:22.956
conference that you usually have
been to. There are shenanigans

00:00:22.956 --> 00:00:27.361
happening. Shenanigan may be
encouraged. Some may involve

00:00:27.361 --> 00:00:32.132
your badge. You never know. I
have seen people wandering

00:00:32.132 --> 00:00:35.235
around with paper badges. That
means if you have one of these

00:00:35.235 --> 00:00:39.206
fancy badges, they are probably
going to be in high demand.

00:00:39.206 --> 00:00:43.543
Right? Now one challenge that we
had with the badge as you

00:00:43.543 --> 00:00:46.046
probably already figured out is,
how in the world do I wear this

00:00:46.046 --> 00:00:50.684
thing around my neck? Let me
release a zero day vulnerability

00:00:50.684 --> 00:00:55.289
in the badge. If you are
clipping this with the little

00:00:55.289 --> 00:01:00.527
clip, that is a bad idea. They
will fall off or somebody will

00:01:00.527 --> 00:01:04.731
take them and jerk them and take
them. So if you are or have the

00:01:04.731 --> 00:01:08.702
paper around there, that's dumb.
Harden your badge while sitting

00:01:08.702 --> 00:01:11.438
here, poke the laniard through
the hole, find a cord or

00:01:11.438 --> 00:01:15.375
something like that. The other
thing is, yes, it's big. It may

00:01:15.375 --> 00:01:20.347
not be fun to wear, but you need
be wearing your badge at all

00:01:20.347 --> 00:01:26.386
times. Otherwise, you're going
to be getting some feedback from

00:01:26.386 --> 00:01:31.024
the sock goons. And as you might
be able to tell based on the

00:01:31.024 --> 00:01:35.329
situations in the hallway, they
might be a little bit grumpy.

00:01:35.329 --> 00:01:39.533
All right? So, wear your badge
at all times. Secure your badge

00:01:39.533 --> 00:01:42.669
and we'll be good. I want to
thank you guys for being so

00:01:42.669 --> 00:01:45.906
cooperative in moving around and
getting plenty of people in. We

00:01:45.906 --> 00:01:50.043
have a lot of great, great talks
today. And this is the point

00:01:50.043 --> 00:01:52.479
where we are going to transition
from talking about things that

00:01:52.479 --> 00:01:56.183
are broken, that we already know
are broken like our trust of the

00:01:56.183 --> 00:02:02.155
government, and our regulatory
system, and we are going to

00:02:02.155 --> 00:02:04.725
start moving into where we are
going to start breaking stuff.

00:02:04.725 --> 00:02:12.032
And that is awesome. How many
people feel like bricking stuff?

00:02:12.032 --> 00:02:14.968
(Applause) And we are going to
start breaking some really

00:02:14.968 --> 00:02:18.572
expensive stuff too. Not that.
That's expense itch but we won't

00:02:18.572 --> 00:02:21.842
break that. We will break other
things. So you probably have

00:02:21.842 --> 00:02:27.381
read about this sock in the
press. Just like many talks in

00:02:27.381 --> 00:02:31.518
this track. Samy heads been
doing really, really interesting

00:02:31.518 --> 00:02:36.990
stuff and I think we are all
really excited to see some of

00:02:36.990 --> 00:02:41.795
this research in person. I want
you guys to give a big welcome

00:02:41.795 --> 00:02:47.801
to Samy. (Applause) Have a good
talk >> SAMY KAMKAR: Everyone

00:02:53.840 --> 00:02:59.613
hear me okay? Okay. Man, I'm so
excited! It's been years since I

00:02:59.613 --> 00:03:04.785
have been at DEF CON. It's five
years ago. So today, you are at

00:03:04.785 --> 00:03:08.021
drive it like you hacked it. So
we are going to talk about cars.

00:03:08.021 --> 00:03:12.693
And I'm super excited about
this. My name is Samy Kamkar. I

00:03:12.693 --> 00:03:17.264
am a security researcher, as
that's pretty much what I look

00:03:17.264 --> 00:03:20.901
like when I wake up. And I
pretty much spend my time doing

00:03:20.901 --> 00:03:24.204
research. There are so many
really cool areas of devices.

00:03:24.204 --> 00:03:27.507
All sorts of security from
networks to physical. I worked

00:03:27.507 --> 00:03:30.277
on a couple of different
projects. These are some of the

00:03:30.277 --> 00:03:34.414
fun ones. I'll be doing a quick
talk tomorrow if you have kids,

00:03:34.414 --> 00:03:38.685
it's kids only. I will be
showing the convo breaker, a 3D

00:03:38.685 --> 00:03:42.823
printed -- you can break any
combination lock in like 30

00:03:42.823 --> 00:03:46.293
seconds. So, we are going to
talk about car hacking

00:03:46.293 --> 00:03:51.731
specifically I'm interested in a
lot of the like radio and some

00:03:51.731 --> 00:03:54.901
portions of the connected
computers we have within our

00:03:54.901 --> 00:03:59.139
devices, within our cars. I
think we first need to talk

00:03:59.139 --> 00:04:02.976
about the awesome work from some
other people. (Applause) Who

00:04:02.976 --> 00:04:08.248
heard about Charlie miller and
Chris? If you haven't heard

00:04:08.248 --> 00:04:14.087
about them, I feel bad for your
son or daughter. But Charlie

00:04:14.087 --> 00:04:17.290
miller and Chris have actually,
their work probably in the last

00:04:17.290 --> 00:04:22.362
few years has gotten me into
this just seeing them like make

00:04:22.362 --> 00:04:28.435
Andy greenburg go scared over
and over again. And there is so

00:04:28.435 --> 00:04:31.037
much other really interesting
research. They have been

00:04:31.037 --> 00:04:34.341
attacking all sorts of things
over the mobile network, car,

00:04:34.341 --> 00:04:39.713
Dan vass. There is some cool
research in 2010 from the

00:04:39.713 --> 00:04:42.415
University of Washington where
they are seeing what else they

00:04:42.415 --> 00:04:48.788
can do to a car from the CD
player, from BlueTooth, from any

00:04:48.788 --> 00:04:52.659
other wireless communication.
Recently talk about

00:04:52.659 --> 00:04:55.562
amplification attacks, which is
super interesting. It's

00:04:55.562 --> 00:04:58.098
basically saying a lot of our
cars, we have keys that we can

00:04:58.098 --> 00:05:02.068
put in our pocket and go to our
car and hit a button on the car

00:05:02.068 --> 00:05:05.338
and that will unlock the vehicle
as long as the key fob is near

00:05:05.338 --> 00:05:08.341
us. So what is cool about this
is that the car sends a radio

00:05:08.341 --> 00:05:13.780
signal to your key fob. It's a
keyless entry system. And your

00:05:13.780 --> 00:05:16.783
key fob will see that signal and
respond. Essentially a challenge

00:05:16.783 --> 00:05:21.221
response. When it sees that it
responds with a proper code and

00:05:21.221 --> 00:05:24.090
the car will unlock. As you get
in the car, a couple of

00:05:24.090 --> 00:05:27.694
receivers inside the car are
then sending a signal when the

00:05:27.694 --> 00:05:31.431
hit the start button. When you
hit start engine, it will send a

00:05:31.431 --> 00:05:35.969
signal to your key fob and your
fob is responding. That is

00:05:35.969 --> 00:05:38.705
really cool. So, what people
have divides and there is a

00:05:38.705 --> 00:05:40.974
paper on this, what they have
been able to relay that

00:05:40.974 --> 00:05:45.312
communication hundreds of meters
away. Either wirelessly or

00:05:45.312 --> 00:05:49.749
wired. And you can basically
take a wireless device go up to

00:05:49.749 --> 00:05:52.819
the vehicle and have a friend
with another wireless device

00:05:52.819 --> 00:05:56.456
near the car key, so someone in
their house, someone in a park,

00:05:56.456 --> 00:06:01.628
some of you at DEF CON, sorry,
and can actually hit the start

00:06:01.628 --> 00:06:05.265
button and that will trigger the
system will send a signal to

00:06:05.265 --> 00:06:08.468
your key, the key will see it
because it's amplified by this

00:06:08.468 --> 00:06:12.639
device, radio device,
transmitting much further. The

00:06:12.639 --> 00:06:17.377
key responds and normally, the
RSSI or the signal within the

00:06:17.377 --> 00:06:20.380
car is actually, the receiver
within the car are looking for

00:06:20.380 --> 00:06:24.818
the signal, RSSI, to see how
strong that signal is. And if it

00:06:24.818 --> 00:06:28.888
is strong enough inside the car,
the car turns on. The key is not

00:06:28.888 --> 00:06:32.892
in the car. The amplifier is.
It's near the car. So that

00:06:32.892 --> 00:06:36.396
amplifies the signal and now the
car turns on. So this is

00:06:36.396 --> 00:06:40.000
existing research. People are
getting their cars jacked like

00:06:40.000 --> 00:06:42.936
this. I'm excited about the
Tesla talk later today. That's

00:06:42.936 --> 00:06:47.907
pretty cool. There has been
cryptographic attacks on key

00:06:47.907 --> 00:06:50.777
lock. It's a rolling code system
we'll talk about later. It's

00:06:50.777 --> 00:06:54.981
been cracked over and over again
in pretty cool ways specifically

00:06:54.981 --> 00:07:01.521
on the cryptocide. A lot of cars
have RFID immobilizers as well.

00:07:01.521 --> 00:07:06.860
So some keys will have a passive
RFID device inside so when you

00:07:06.860 --> 00:07:12.399
put your key in the ignition and
turn, it is sending a low

00:07:12.399 --> 00:07:20.106
frequency, 125, 134 signal to
your key. The passive RFID key

00:07:20.106 --> 00:07:26.413
fob response. So it has to be
within a few inches. You may be

00:07:26.413 --> 00:07:29.883
able to do amplification attacks
using penetration testing

00:07:29.883 --> 00:07:34.187
toolkit that is awesome if
you're interested in RFID, you

00:07:34.187 --> 00:07:40.260
can do so much crazy stuff. Cool
keys coming out at DEF CON that

00:07:40.260 --> 00:07:44.097
is pretty exciting. Also cool
work from opening garages. And

00:07:44.097 --> 00:07:47.867
other things. Check that out if
you're interested in car

00:07:47.867 --> 00:07:51.738
research. Also wanted to thank
the E if. F. I supported them

00:07:51.738 --> 00:07:56.042
for a long time and a few months
ago I reached out and said, I

00:07:56.042 --> 00:08:01.081
don't want to get sued. And I
mean 10 years ago I released

00:08:01.081 --> 00:08:04.250
something called the MySpace
Worm and I ended up not being

00:08:04.250 --> 00:08:06.586
able to touch a computer for
about three years of my life.

00:08:06.586 --> 00:08:10.190
So, I want to prevent that from
happening again. So I'm not

00:08:10.190 --> 00:08:16.463
releasing worms anymore. Not
under my name ( Laughs ) And I

00:08:16.463 --> 00:08:22.369
did use a image without asking.
I hope that's okay, EFF. Please

00:08:22.369 --> 00:08:25.905
don't sue me. So let's start
talking about car hacking.

00:08:25.905 --> 00:08:29.476
Nothing we all want to be more
like Nicholas cage -- we all --

00:08:29.476 --> 00:08:33.380
the first thing to get to the a
car from what I learned in gone

00:08:33.380 --> 00:08:36.783
in 60 seconds. You need to
locate the car and get into it.

00:08:36.783 --> 00:08:40.520
I know there is pretty sweet
cars behind this garage. How do

00:08:40.520 --> 00:08:45.458
we get behind it? We will take a
look at garage doors. Who has a

00:08:45.458 --> 00:08:52.432
garage door with a clicker?
Everyone? Hold on. Got it. So we

00:08:52.432 --> 00:08:58.171
are going to talk about basic RF
research. So the first thing you

00:08:58.171 --> 00:09:00.206
want to do, I'm going to walk
you through from start to

00:09:00.206 --> 00:09:03.009
finish. I have like a garage
door opener here. If you have

00:09:03.009 --> 00:09:06.546
any device, even if you pull
your phone out right now, you'll

00:09:06.546 --> 00:09:11.217
see on the back, it will say,
FCCID and an ID number. I want

00:09:11.217 --> 00:09:14.854
to learn what this garage door
is sending. What is this clicker

00:09:14.854 --> 00:09:19.192
sending to my garage that makes
it open and how can we open it?

00:09:19.192 --> 00:09:21.961
So if you take your clicker on
your phone, you will see that

00:09:21.961 --> 00:09:26.599
number on the back. Take that
SSCID and it puts up, publishes

00:09:26.599 --> 00:09:30.537
all the data about that device
online. If you have the device

00:09:30.537 --> 00:09:33.473
in your hand, you won't always
have it in your hand but you can

00:09:33.473 --> 00:09:38.244
take that number and we can go
to a website called SCC.IO. That

00:09:38.244 --> 00:09:40.413
website is awful. You can go to
FCC.IO/whatever the ID is, and

00:09:40.413 --> 00:09:46.419
it will pull up the page. Access
everything from the SCC on that.

00:09:54.527 --> 00:09:58.331
So if we do that, there is a
couple of cool things we see

00:09:58.331 --> 00:10:02.902
here the first thing is we have
the frequency. We can see the

00:10:02.902 --> 00:10:05.705
frequency this is sending on. If
you have a device and you don't

00:10:05.705 --> 00:10:09.943
have an SSSID you can use a
frequency scanner. This is 390

00:10:09.943 --> 00:10:16.549
megahertz for example. So it
also has other stuff like

00:10:16.549 --> 00:10:20.887
internal photos is always really
interesting. They will open it

00:10:20.887 --> 00:10:24.057
up and a small percentage of the
time if you're lucky, you can

00:10:24.057 --> 00:10:26.960
see the chips they are using.
You can see the name of the chip

00:10:26.960 --> 00:10:30.196
set that is being used. Without
even having the device in your

00:10:30.196 --> 00:10:34.467
hand, you can find the data
sheet of that device, learn all

00:10:34.467 --> 00:10:38.638
about it. Another thing that
happens is there is a test

00:10:38.638 --> 00:10:43.309
report. So the FCC tests every
device they authorize. What is

00:10:43.309 --> 00:10:46.679
awesome is they are putting
information about the signal,

00:10:46.679 --> 00:10:51.818
the frequency, the modulation, a
lot of you can see from the way

00:10:51.818 --> 00:10:55.288
that their test report look
because they are showing a

00:10:55.288 --> 00:10:59.893
spectrograph of the way form
that the device is creating. So

00:10:59.893 --> 00:11:03.830
here it looks like amplitude
modulation or amplitude shift

00:11:03.830 --> 00:11:09.035
key. So I want to tell you about
the hardware I use to do a lot

00:11:09.035 --> 00:11:13.273
of this development. And
research. Hacker F1 is pretty

00:11:13.273 --> 00:11:18.278
invaluable to me. This is an
incredible device for software

00:11:18.278 --> 00:11:21.981
defined radio or SCR. It's a
little over 3 helped dollars.

00:11:21.981 --> 00:11:24.817
Extremely powerful. I mean some
of the comparable stuff out

00:11:24.817 --> 00:11:29.222
there is 1000 dollars and up. It
can receive and transmit between

00:11:29.222 --> 00:11:34.661
one megahertz and 6 gigahertz.
You can get raw IQ samples. You

00:11:34.661 --> 00:11:39.165
can record, demodulate, use all
sorts of really cool software.

00:11:39.165 --> 00:11:43.403
If you know nothing about SDR,
like I didn't earlier this year,

00:11:43.403 --> 00:11:48.641
you can just be cool and use
hacker F transfer, a consulate

00:11:48.641 --> 00:11:52.111
and just record and replay
signals. Half the garages out

00:11:52.111 --> 00:11:56.115
there, just type hacker F
transfer. The free see we saw

00:11:56.115 --> 00:11:59.919
and then save to a file and
later when you want to open that

00:11:59.919 --> 00:12:04.691
garage, hit replay. You don't
need to know about the

00:12:04.691 --> 00:12:08.895
modulation or any about the
schemes. It's like copy and

00:12:08.895 --> 00:12:14.434
paste. It's amazing. Another
tool I use is RTLSDR. Another

00:12:14.434 --> 00:12:20.106
software defined radio. The chip
set inside someone discovered

00:12:20.106 --> 00:12:24.177
can be used as a software
defined radio. So you can see

00:12:24.177 --> 00:12:28.481
all sorts of cool stuff on the
spectrum. This is a much -- you

00:12:28.481 --> 00:12:32.952
get a smaller range like 24-1.7
gigahertz. Get up to 2.2

00:12:32.952 --> 00:12:38.024
gigahertz -- there is an E4000
version. It only receives so you

00:12:38.024 --> 00:12:42.829
can't transmit with this and it
has a smaller sample rate. And

00:12:42.829 --> 00:12:45.531
then another piece of software
that a lot of people use is the

00:12:45.531 --> 00:12:48.334
new radio, which I haven't used
because like this -- I don't

00:12:48.334 --> 00:12:51.938
understand all these boxes. You
need to like draw a lot of boxes

00:12:51.938 --> 00:12:55.274
to do stuff and I just don't
understand that. But most people

00:12:55.274 --> 00:12:58.878
use it. So, I'm going have to
learn that soon. Another tool I

00:12:58.878 --> 00:13:03.983
have been using is GQRX, a few
tool for Linux and OSXT looks

00:13:03.983 --> 00:13:07.920
pretty. I like pretty
applications. It makes it very

00:13:07.920 --> 00:13:14.327
easy to see signals. You can
test that in a second. If you're

00:13:14.327 --> 00:13:20.333
on windows, man, I don't know if
this happened to anyone trying

00:13:20.333 --> 00:13:24.170
to install. Something happened.
It locks like nothing is

00:13:24.170 --> 00:13:29.409
happening. If you're on windows
you can use SER sharp. It also

00:13:29.409 --> 00:13:32.378
sort ever kind of works on OSX.
I tried to compile with mono,

00:13:32.378 --> 00:13:34.480
but it looks awful at that
point. Another tool I use is

00:13:34.480 --> 00:13:40.486
RTLFMT is a console app you can
use RTLSD R and demodulate a

00:13:42.989 --> 00:13:47.994
signal. We'll talk about that in
a second. These are all the

00:13:47.994 --> 00:13:54.000
tools I'm using. The cost of the
tools, look HackRF 3000 dollars.

00:13:56.736 --> 00:14:00.907
RTLSDR20 dollars. That's about
it. This is very in expensive

00:14:00.907 --> 00:14:03.476
and my research is always
focused on making this stuff

00:14:03.476 --> 00:14:06.446
super in expensive. I want
everyone to be able to access

00:14:06.446 --> 00:14:10.883
this stuff. So that's why
everyone is open source, fully

00:14:10.883 --> 00:14:13.886
documenting everything and I
hope more of you will get into

00:14:13.886 --> 00:14:19.092
this research because there is
so many things that are -- we

00:14:19.092 --> 00:14:23.296
can demonstrate the crazy
security weaknesses everywhere.

00:14:23.296 --> 00:14:26.933
Let's get back to this and check
out the SCC document for a

00:14:26.933 --> 00:14:31.571
garage door opener. So this says
ask. Modulation type. Ask is

00:14:31.571 --> 00:14:36.509
amplitude shift key to send
digital data. So, what that

00:14:36.509 --> 00:14:41.848
looks like is here we have a
signal. At the top we have our

00:14:41.848 --> 00:14:46.119
binary signal. So 0011001100.
And amplitude shift key signal

00:14:46.119 --> 00:14:50.356
looks like the ask version there
in green. So basically when you

00:14:50.356 --> 00:14:54.127
want to send a signal, send a 1,
you go high. When you don't, you

00:14:54.127 --> 00:14:57.830
send nothing. Frequency shift
key changes the frequency. Now

00:14:57.830 --> 00:15:01.901
amplitude shift keying is like
a.m. radio. It's amplitude

00:15:01.901 --> 00:15:07.373
modulation. So when you listen
to a.m. radio in your car it's

00:15:07.373 --> 00:15:11.177
doing amplitude modulation
changing based off the frequency

00:15:11.177 --> 00:15:14.714
of the sound it is trying to
send. Where frequencies f.m.

00:15:14.714 --> 00:15:21.754
radio, is doing what FSKs do for
digital data. TS and a couple of

00:15:21.754 --> 00:15:25.291
other modulation sweeps. This is
what it looks like F you're

00:15:25.291 --> 00:15:29.061
taking a device you have no idea
what it looks like, and half the

00:15:29.061 --> 00:15:31.697
time I'm looking at signals I
don't wherein they are coming

00:15:31.697 --> 00:15:34.333
from or what they are, you want
to figure out what they look

00:15:34.333 --> 00:15:38.805
like. So here is an example of
two. It means the frequency

00:15:38.805 --> 00:15:42.275
shifting is between two
different frequencies. You can

00:15:42.275 --> 00:15:46.546
have like 4FSK and other
variations. So what you'll see

00:15:46.546 --> 00:15:50.283
in something like GQRX or wart
fall view is you'll see two

00:15:50.283 --> 00:15:54.687
separate signals going back and
forth. For amplitude shift

00:15:54.687 --> 00:16:00.526
keying, or OOK on off keying,
you'll see like on off, on off,

00:16:00.526 --> 00:16:04.030
that's why it's called on off
keying. I'm going to like at

00:16:04.030 --> 00:16:09.435
tab. Maybe we can open GQRX and
see if that works. So, I have a

00:16:09.435 --> 00:16:17.243
remote here. Is there a Spike?
Sweet. That's remote. So that is

00:16:17.243 --> 00:16:24.183
amplitude shift keying. We can
see actively what that looks

00:16:24.183 --> 00:16:30.189
like and we can just record
that. So we can do that. Now

00:16:34.760 --> 00:16:39.599
with RTLFM or GQRX, you can save
that data as an audio file and

00:16:39.599 --> 00:16:46.672
look tat on free audio viewer.
Why don't we do that too. Should

00:16:46.672 --> 00:16:51.878
we? Okay. Let's do that. We'll
do it live. Let's open up

00:16:51.878 --> 00:16:57.884
something here. So we'll do -- I
can't do that. RTL -- I'll put

00:17:03.623 --> 00:17:09.161
on your screen in a sec. We know
this is 300 megahertz and then

00:17:09.161 --> 00:17:13.766
RTV a simple program that swaps
between RTL f.m. and hacker f.m.

00:17:13.766 --> 00:17:17.270
depending on which I have
plugged in. And we'll call it

00:17:20.339 --> 00:17:24.443
DEF CON.waive. I'm reporting a
signal and I'm going to hit

00:17:24.443 --> 00:17:30.783
something and control C and open
this directory and I'm going to

00:17:30.783 --> 00:17:36.789
take that file and put it on
that audacity. Cool. So, here we

00:17:43.796 --> 00:17:46.532
have the signal and if we zoom
in, zoom, zoom, zoom. Enhance.

00:17:46.532 --> 00:17:49.201
Enhance. Enhance. Cool. So, we
see -- you see some cool stuff

00:17:49.201 --> 00:17:51.637
here. What just happened? So
what you're seeing is if you

00:17:51.637 --> 00:17:54.874
look closely, zoom in more if I
can. You can't see that screen.

00:17:54.874 --> 00:18:00.813
I lost my mouse. Okay. I'll zoom
in a little bit more here so you

00:18:12.525 --> 00:18:18.531
can see it really clearly. He
refuses to zoom. So what can you

00:18:24.971 --> 00:18:28.808
see here is sort of long signals
and short signals. Now if I open

00:18:28.808 --> 00:18:33.312
this key, I will actually see
those long signals as ones or

00:18:33.312 --> 00:18:37.383
ons in your key. Who seen these
remotes with dip switching in

00:18:37.383 --> 00:18:41.420
them? The garage remotes. They
have a bunch of dip switching

00:18:41.420 --> 00:18:44.690
and that is your code. That's on
a fixed code garage. What is

00:18:44.690 --> 00:18:47.526
happening is the long signals
are a 1 and the short ones are

00:18:47.526 --> 00:18:51.964
zero. It's easy to understand
what is happening here. We just

00:18:51.964 --> 00:18:56.002
recorded that live. Let's go
back to the presentation. That

00:18:56.002 --> 00:18:58.804
is essentially what we see here.
We see the dip switches within

00:18:58.804 --> 00:19:01.974
the remote control are exactly
correlating to what we have

00:19:01.974 --> 00:19:05.077
here. Now this is after doing
amplitude shift key demodulation

00:19:05.077 --> 00:19:09.348
from RTL f.m. T does it for you.
You say I want to record at 300

00:19:09.348 --> 00:19:13.886
megahertz and demodulate and
that's what we did. Let's think

00:19:13.886 --> 00:19:18.257
about this for a moment. All of
us have garages. There is most

00:19:18.257 --> 00:19:24.263
garages have 12 or 10 bit dip
switches. If we think about

00:19:26.298 --> 00:19:29.935
that, we will see that that
means there is two to the 12

00:19:29.935 --> 00:19:35.574
possible combinations which is
not a lot. Let's calculate that

00:19:35.574 --> 00:19:39.945
real quick. 4000 possible
combinations for garages. So

00:19:39.945 --> 00:19:43.249
that's on the 12-bit garage.
4000 combinations. If you have a

00:19:43.249 --> 00:19:46.519
two letter password for a
website with alpha numeric and a

00:19:46.519 --> 00:19:50.489
couple of keys on top, that will
be more secure than your 12 bit

00:19:50.489 --> 00:19:54.627
garage code. So, let's see how
we can crack that. We don't even

00:19:54.627 --> 00:19:59.899
know if you have a 12 bit or a 8
bit garage code. So let's say we

00:19:59.899 --> 00:20:04.070
want to bit code the whole
space. Each signal is two

00:20:04.070 --> 00:20:06.572
milliseconds plus a two
millisecond delay and every time

00:20:06.572 --> 00:20:12.578
I hit the button it trans 5
times. If we do that for every

00:20:14.613 --> 00:20:19.051
type of dip switch then it will
take about 30 minutes to open a

00:20:19.051 --> 00:20:22.154
fixed code garage. This does not
apply to rolling code garages.

00:20:22.154 --> 00:20:27.326
Like Intel's code, genie, a
couple other use rolling codes.

00:20:27.326 --> 00:20:32.364
We'll talk about that later. So
this will take 30 minutes to

00:20:32.364 --> 00:20:35.734
brute force. But, I didn't want
to stand outside for 30 minutes

00:20:35.734 --> 00:20:38.370
and my neighbors are looking at
me because I live with a bunch

00:20:38.370 --> 00:20:42.408
of other units and I'm always
outside with my computer. And

00:20:42.408 --> 00:20:49.048
the garages randomly opening and
closing and opening and closing.

00:20:49.048 --> 00:20:51.984
So if we take a look that the
signal closer, we see this, we

00:20:51.984 --> 00:20:56.288
can actually remove -- instead
of taking the 5 transmissions we

00:20:56.288 --> 00:20:59.592
see on top. We only need to send
one. No point in sending the

00:20:59.592 --> 00:21:03.529
code over and over. The reason
devices do that is because they

00:21:03.529 --> 00:21:08.067
are cheap and sometimes the
signal is hard to hear and there

00:21:08.067 --> 00:21:11.871
may be interference so sending
more times insures the signal

00:21:11.871 --> 00:21:14.840
will be heard. If are hacking we
assume we have something good

00:21:14.840 --> 00:21:19.712
enough that transmits well and
we'll get it. So we orangey do

00:21:19.712 --> 00:21:23.883
it one time per code. So divide
by 5 and you get 6 minutes to

00:21:23.883 --> 00:21:29.021
open any fixed code garage. From
there, I was chatting in the

00:21:29.021 --> 00:21:33.492
Uber tooth IRC channel and Mike
Ryan subjected I take away the

00:21:33.492 --> 00:21:39.632
wait times. So you see at the
top there is a signal on the top

00:21:39.632 --> 00:21:43.035
left and then a wait period
before the next signal. So he

00:21:43.035 --> 00:21:45.704
suggested just removing the wait
period and send them, red,

00:21:45.704 --> 00:21:50.009
green, purple, blue, in sequence
without that wait period. So

00:21:50.009 --> 00:21:53.379
that removed another 50% of the
time that would take to open

00:21:53.379 --> 00:21:59.084
that. That reduced down to 3
minutes. Also he is doing an

00:21:59.084 --> 00:22:02.922
awesome talk on hacking electric
skateboards where he takes over

00:22:02.922 --> 00:22:06.325
your skateboard. I'm excited
about that talk with Michael and

00:22:06.325 --> 00:22:10.396
en Rico. I believe that is
Saturday at 3 p.m. track 2.

00:22:10.396 --> 00:22:13.766
Right here. Check that out. So
that is pretty cool. But as I

00:22:13.766 --> 00:22:16.168
was looking at the signal, there
is something interesting about

00:22:16.168 --> 00:22:20.172
the signal. There is no preamble
or order. Nothing to delineate

00:22:20.172 --> 00:22:23.075
and tell the garage door that
this is the beginning of a

00:22:23.075 --> 00:22:25.644
garage code. It just raw data.
It's like sending a packet

00:22:25.644 --> 00:22:28.280
without TCPIP hitter and sending
a HTP request without an IP

00:22:28.280 --> 00:22:33.886
header. It doesn't know where it
is going. The garage is blindly

00:22:33.886 --> 00:22:39.325
listening. How does it know
where one code starts and the

00:22:39.325 --> 00:22:42.928
other ends in I thought maybe it
is using a bit chip register. It

00:22:42.928 --> 00:22:47.499
is something that will take in a
sequence of bits and as the

00:22:47.499 --> 00:22:52.271
buffer fills, once you have more
bit available, it only drops one

00:22:52.271 --> 00:22:55.274
bit and then pulls in the next
one and drops one bit and pulls

00:22:55.274 --> 00:22:58.611
in the next one. So what if I
could do that with a garage?

00:22:58.611 --> 00:23:04.283
What if I could send 12 bits for
one garage and 24 bits for two

00:23:04.283 --> 00:23:08.287
codes, what if I sent 13 bits?
If it's a bit chip register,

00:23:08.287 --> 00:23:11.223
we'll have 12 bits that go in,
it checks, is that the correct

00:23:11.223 --> 00:23:14.693
code? It will say no and then
shifts on one bit and pushing

00:23:14.693 --> 00:23:17.596
everything over one bit and
takes in the next bit, the 13th

00:23:17.596 --> 00:23:23.102
bit and tests a brand new 12-bit
code. So there must be an

00:23:23.102 --> 00:23:28.574
efficient way to do this and
there is a guy named deBrian.

00:23:28.574 --> 00:23:32.978
How do I pronounce his name?
DeBrian. Okay. He was a

00:23:32.978 --> 00:23:36.315
mathematician who came up with a
sequence to efficiently produce

00:23:36.315 --> 00:23:40.819
every unique combination of a
number or series of numbers so

00:23:40.819 --> 00:23:43.956
you produce every possible
overlapping code. So here we see

00:23:43.956 --> 00:23:47.693
if I want let's say the garage
was two bits long, then I would

00:23:47.693 --> 00:23:51.330
send 8 bits to cover everything.
But with this sequence, we can

00:23:51.330 --> 00:23:58.304
send 5 bits 00110. Because
everyone overlaps. Garage will

00:23:58.304 --> 00:24:02.174
test 00 then it will test 01 in
blue and then 11 in red and then

00:24:02.174 --> 00:24:08.447
10. So if we do that with 12
bits, it takes eight seconds.

00:24:08.447 --> 00:24:14.453
(Applause) Now, theoretically we
know how to do it so we have to

00:24:22.261 --> 00:24:25.097
implement this. So one of the
things I love using is the art

00:24:25.097 --> 00:24:29.668
-- this is another device from
Michael. There will be for sale

00:24:29.668 --> 00:24:36.642
soon. You can always use
something CC111EMK. This device

00:24:36.642 --> 00:24:40.379
has something called the CC111
chip set from Texas Instruments.

00:24:40.379 --> 00:24:43.582
It basically -- we'll talk about
that in a bit. But it's a sub

00:24:43.582 --> 00:24:48.821
gigahertz radio. It can receive
and transmit. And the software I

00:24:48.821 --> 00:24:53.092
use a lot for this testing is RF
cap. Also a talk later today at

00:24:53.092 --> 00:24:57.629
5 p.m. and I'm excited about
that. It is awesome. It's a

00:24:57.629 --> 00:25:01.200
console app no boxes like where
you're dragging and dropping

00:25:01.200 --> 00:25:05.170
with your mouse. Who uses a
mouse anyway? With this, you can

00:25:05.170 --> 00:25:09.441
just talk to this command line.
The python command line and do,

00:25:09.441 --> 00:25:14.813
near says set frequency to 43
megahertz and sends on off

00:25:14.813 --> 00:25:20.152
keying and set the packet length
and then transmit hello. Sted of

00:25:20.152 --> 00:25:23.856
hello. We can transmit some
binary. The garage code for

00:25:23.856 --> 00:25:26.792
example. We need to set our baud
rate to the baud rate of the

00:25:26.792 --> 00:25:30.863
garage. And another tool I have
been using is from one of the

00:25:30.863 --> 00:25:36.869
most heinous devious companies
out there. Mattel ( Laughs ) so,

00:25:40.339 --> 00:25:47.780
a couple of years ago, I hacker
found that the Mattel IME has

00:25:47.780 --> 00:25:51.350
something called the Texas
Instruments chip con 1101 chip

00:25:51.350 --> 00:25:56.522
set. It is a sub gigahertz
transceiver and has a screen. It

00:25:56.522 --> 00:26:00.459
has a backlight and a keyboard
and has a little buzzer. It is

00:26:00.459 --> 00:26:04.596
battery-powered and conveniently
there are pins for reprogramming

00:26:04.596 --> 00:26:09.368
on the back when you open it up.
It's not protected. You can

00:26:09.368 --> 00:26:12.905
rewrite everything. So, this is
actually a picture of spectrum

00:26:12.905 --> 00:26:16.542
analyzer built. A couple of
people have done awesome work on

00:26:16.542 --> 00:26:21.513
this. Dave originally found that
you could hack it and reflash it

00:26:21.513 --> 00:26:24.483
and amazing thing is Mattel
created this. So they did batch

00:26:24.483 --> 00:26:29.321
creation of this essentially 20
dollar toy for kids to

00:26:29.321 --> 00:26:31.924
communicate, for texting your
friends with this dis -- device.

00:26:31.924 --> 00:26:33.926
It's discontinued so now really
cheap, wenty 30 dollars. Travis

00:26:33.926 --> 00:26:35.928
sends me a ton of work. This is
a spectrum analyzer. Here is the

00:26:35.928 --> 00:26:37.930
-- I used to get that for all
sorts of things for 2.4

00:26:37.930 --> 00:26:39.932
gigahertz hardware hacking. It's
an open source J tag a at that

00:26:39.932 --> 00:26:41.934
pointer. Ultimately, I don't
want to have to use the

00:26:41.934 --> 00:26:43.936
yardstick one in my computer to
transmit because it's like, I

00:26:43.936 --> 00:26:45.938
already wear a ski mask all the
time. I don't want to have to

00:26:45.938 --> 00:26:47.940
sit with a laptop as well so
instead I just program the IME

00:26:47.940 --> 00:26:49.942
to do that 8 second ark tack.
And that's I call open sesame.

00:26:49.942 --> 00:26:51.944
Let's see if the video plays for
an example of it in action.

00:26:51.944 --> 00:26:53.946
(Laughs) (Applause) By the way,
how much time do I have because

00:26:53.946 --> 00:26:59.952
I keep going out of my thing so
it keeps resetting the clock.

00:27:33.652 --> 00:27:39.658
What time am I god until? Like
1:45, 1:50? What time am I good

00:27:42.528 --> 00:27:48.200
for? How much time? 20 minutes?
Cool. I want to know what time

00:27:48.200 --> 00:27:52.838
to end. Cool. 1:50. So you can
buy these IMEs unfortunately I

00:27:52.838 --> 00:27:56.375
released all the source for open
sesame. I ripped it slightly

00:27:56.375 --> 00:28:00.012
something everyone here could
probably fix but common thieves

00:28:00.012 --> 00:28:04.550
and criminals wouldn't be able
to unless they learned a code.

00:28:04.550 --> 00:28:08.687
That is great. They probably
will just get a job.

00:28:08.687 --> 00:28:13.225
Unfortunately, after a released
it, the prices went up a little

00:28:13.225 --> 00:28:18.096
bit ( Laughs ) So, I do have a
brand new one that I programmed

00:28:18.096 --> 00:28:23.602
with Michael spectrum analyzer
so it's on here. Would anyone

00:28:23.602 --> 00:28:30.576
like this? It's a 900 dollar
value ( Laughs ) cool, I'll just

00:28:30.576 --> 00:28:35.080
run out and give it to somebody
here. Who wants it? Oh, my God!

00:28:35.080 --> 00:28:41.086
Someone has to come up here. All
right. Someone in the second

00:28:43.655 --> 00:28:49.661
row. Second row. All right. Yes.
You. Do it. Don't sell it S so

00:29:06.078 --> 00:29:08.880
that has a spectrum analyze or
it. I use it all the time. It's

00:29:08.880 --> 00:29:11.650
more convenient than anything
else I use. It's in your pocket

00:29:11.650 --> 00:29:15.921
and portable and my favorite
color. So what we learned from

00:29:15.921 --> 00:29:19.992
this? If you're implementing a
garage door system or similar

00:29:19.992 --> 00:29:24.429
system based off radio signals,
don't use a small key space.

00:29:24.429 --> 00:29:30.168
That's just like -- no. Don't
use fixed codes at all. Use like

00:29:30.168 --> 00:29:35.374
a preamble or sync word so the
deBrian attack doesn't work. Or

00:29:35.374 --> 00:29:40.579
use a rolling code. So, now we
are in the garage. We opened it

00:29:40.579 --> 00:29:45.417
up. We are able to see all these
awesome cars. And let's -- if I

00:29:45.417 --> 00:29:50.956
use my special VR headset, I can
see all these connected cars.

00:29:50.956 --> 00:29:54.860
Amazing connected cars. So I
started looking at some of these

00:29:54.860 --> 00:29:57.663
basic connections. Just the
basic stuff that some of these

00:29:57.663 --> 00:30:03.402
devices have. This is a screen
graph of the on star remote link

00:30:03.402 --> 00:30:08.306
app. So remote link is really
cool mobile app for Android IOS

00:30:08.306 --> 00:30:13.045
and windows. It allows you to
locate your car wherever it is

00:30:13.045 --> 00:30:20.452
via GPS. Lock, unlock, remote
start, horn and lights, the most

00:30:20.452 --> 00:30:26.058
fun. And also graph all sorts of
PII from the owner. So you can

00:30:26.058 --> 00:30:31.596
see your name, e-mail address,
your phone number, your home

00:30:31.596 --> 00:30:34.966
address, some billing
information. So, I was taking a

00:30:34.966 --> 00:30:37.269
look that the because my friend
had a car that had this remote

00:30:37.269 --> 00:30:43.175
link app and I thought okay,
it's obviously going over the

00:30:43.175 --> 00:30:46.044
network, let's see if we can see
that network traffic. So I got

00:30:46.044 --> 00:30:50.248
out my IOS device and I
installed a certificate of

00:30:50.248 --> 00:30:52.818
authority. I wanted to do some
man in the middle sniffing. I

00:30:52.818 --> 00:30:57.422
always have an SSL man in the
middle certificate authority on

00:30:57.422 --> 00:31:01.126
there so I can sniff. So I
started sniffing this and this

00:31:01.126 --> 00:31:05.497
is a log in request that we see.
It's pretty much an HTPS post

00:31:05.497 --> 00:31:11.470
and there is some basic encoding
here. When we unzip or when we

00:31:11.470 --> 00:31:16.508
remove basic we see user name
and password. I have a

00:31:16.508 --> 00:31:20.579
certificate of authority this is
my own phone and then I

00:31:20.579 --> 00:31:24.516
remembered I just reflashed my
IOS device and never installed

00:31:24.516 --> 00:31:29.087
that certificate of authority.
So, I was man in the middling

00:31:29.087 --> 00:31:33.725
SSL connection with an in valid
certificate that my phone

00:31:33.725 --> 00:31:37.596
essentially behaving as a fresh
phone didn't even know about. So

00:31:37.596 --> 00:31:40.699
there is no certificate
handling. There is no

00:31:40.699 --> 00:31:44.703
certificate checking at all. And
what that means is, if I'm on

00:31:44.703 --> 00:31:47.939
let's say if I'm on your
network, I can then essentially

00:31:47.939 --> 00:31:53.945
DNS scoop and -- who is texting
me. DNS scoop, and take over

00:31:57.015 --> 00:32:01.787
that API connection. Do an SSL
man in the middle and no

00:32:01.787 --> 00:32:05.423
certificate warning, no issues,
just for that host, and we'll be

00:32:05.423 --> 00:32:08.960
able to see all the traffic such
as user name and password. So,

00:32:08.960 --> 00:32:15.333
we can do this pretty easily. We
can take -- I took a raspberry

00:32:15.333 --> 00:32:20.806
pie, a GSM board and used
Mallory, an open source SSL man

00:32:20.806 --> 00:32:25.177
in the middle toolkit. I DNS
scooped this because instead of

00:32:28.180 --> 00:32:32.784
e-mailing old traffic, if you
open up Safari or app store, I

00:32:32.784 --> 00:32:37.022
want it to, who. I don't want a
man in the middle that because

00:32:37.022 --> 00:32:40.325
then it will either not work or
get certificate warping. So now

00:32:40.325 --> 00:32:44.496
if I can get you on to my Wi-Fi
network, I can do this. I also

00:32:44.496 --> 00:32:51.102
used the IP tables and alpha
cards for Wi-Fi dongles and a

00:32:51.102 --> 00:32:57.542
SIM card that you can put into
the GSM board and the nights

00:32:57.542 --> 00:33:00.278
thing is you can get free paid
sim cars. T-Mobile has a two G

00:33:00.278 --> 00:33:03.315
network you can get a prepaid
SIM card so if you're a

00:33:03.315 --> 00:33:05.517
criminal, you don't have to give
up any information. Just get

00:33:05.517 --> 00:33:11.857
prepaid everything. One way to
potentially do this attack is

00:33:11.857 --> 00:33:18.196
put this under something else.
And then I can create a network.

00:33:18.196 --> 00:33:21.900
So what say network I can get
them to use? I thought by

00:33:21.900 --> 00:33:26.605
default, I'll use ATT Wi-Fi. If
you ever connected your phone to

00:33:26.605 --> 00:33:30.675
ATT Wi-Fi, you will connect to
my device. As I woke up this

00:33:30.675 --> 00:33:36.715
morning, I saw ATT Wi-Fi in the
hotel. I also saw NSA honey pot

00:33:36.715 --> 00:33:42.821
number 42. Which is funny
because clearly NSA honey pot is

00:33:42.821 --> 00:33:47.125
probably like somebody's phone
and ATT Wi-Fi was probably NSA

00:33:47.125 --> 00:33:52.530
honey pot. (Laughs) That is cool
but no guarantee they are going

00:33:52.530 --> 00:33:56.368
to jump on to ATT Wi-Fi. Never
they never been to Starbuck's.

00:33:58.503 --> 00:34:03.675
And instead, what I have done is
I now sniff for requests. So

00:34:03.675 --> 00:34:05.877
using the alpha card we can see
guests on your phone. Your phone

00:34:05.877 --> 00:34:08.446
will send out Wi-Fi requests to
networks it connected to in the

00:34:08.446 --> 00:34:10.849
past. Saying I contacted here.
Are you there. I can see the

00:34:10.849 --> 00:34:14.386
name of a network you connected
to the on the past and on the

00:34:14.386 --> 00:34:20.392
fly generate that Wi-Fi network.
So as soon as you go up to your

00:34:23.728 --> 00:34:29.768
car where I theft device
underneath, then your phone

00:34:29.768 --> 00:34:33.104
sends a request. My device says
I'll make a Wi-Fi network with

00:34:33.104 --> 00:34:38.310
my name, your phone jumps on. I
man in the middle and then

00:34:38.310 --> 00:34:41.513
automatically require from a
remote link. If you ever opened

00:34:41.513 --> 00:34:45.517
the app, and indefinitely I then
have access to your car. Here is

00:34:45.517 --> 00:34:49.721
the hardware I use and again
raspberry pie, the alpha, the

00:34:49.721 --> 00:34:54.492
Wi-Fi dongle and a phone and GSM
board and this device I called,

00:34:54.492 --> 00:35:00.432
own star. (Laughs) Tested it on
my friend's bolt here. It's a

00:35:04.970 --> 00:35:06.972
cool car. I was pretty happy
with that. Let's see if that

00:35:06.972 --> 00:35:12.978
works. It says like only remote
start when it is safe and legal.

00:35:21.586 --> 00:35:23.822
Which is true. You should only
do that. Fortunately, I reach

00:35:23.822 --> 00:35:27.792
out to GM before releasing
details of this and they were

00:35:27.792 --> 00:35:31.496
while very difficult to get to
anyone, who knew anything about

00:35:31.496 --> 00:35:35.033
security or technology. I was
going through like support --

00:35:35.033 --> 00:35:37.302
oh, man. They were trying to
tell me, no sir, your password

00:35:37.302 --> 00:35:42.707
is safe. Your password is safe.
Trying to like escalate from

00:35:42.707 --> 00:35:47.345
support at G some impossible.
However, I finally got to a

00:35:47.345 --> 00:35:52.050
cybersecurity executive over
there and it sounds like he was

00:35:52.050 --> 00:35:54.486
awesome and very easy to work
with. They fixed it within days.

00:35:54.486 --> 00:35:58.690
So I was happy about that. They
did a great job. Within a day,

00:35:58.690 --> 00:36:04.095
just mentioning this was going
to be part of my talk today,

00:36:04.095 --> 00:36:08.667
they had already resolved it.
(Laughs) On about 3 million

00:36:08.667 --> 00:36:13.705
remote link apps. So what did we
learn? Validate your search.

00:36:13.705 --> 00:36:17.275
Like always validate a
certificate from a CA. Now if

00:36:17.275 --> 00:36:19.911
you don't trust the Hong Kong
post office which has a

00:36:19.911 --> 00:36:22.414
certificate, which is a
certificate of authority by the

00:36:22.414 --> 00:36:25.216
way, and trusted in most
browsers, use your own

00:36:25.216 --> 00:36:30.789
certificate. Use certificate
pinging that way you will only

00:36:30.789 --> 00:36:36.895
ever use your certificate. Even
if the CA, even if they are Hong

00:36:36.895 --> 00:36:40.598
Kong says this certificate is
legit, your dice, your mobile

00:36:40.598 --> 00:36:45.070
app will ignore it and only use
yours. Also harsh your

00:36:45.070 --> 00:36:51.242
passwords. Always assume the
network you're on is hostile.

00:36:51.242 --> 00:36:53.511
Because someone here is going to
make that network hostile if it

00:36:53.511 --> 00:36:57.882
wasn't before. It doesn't matter
if you're on a mobile network,

00:36:57.882 --> 00:37:03.822
cellular or Wi-Fi. You are -- it
is a hostile network. So, sweet.

00:37:05.990 --> 00:37:12.297
We did that. That affected
Chevy, Cadillac, GMC, Buick, but

00:37:12.297 --> 00:37:15.800
one other thing I wanted to talk
briefly about. And that is key

00:37:15.800 --> 00:37:18.670
fobs. Which are pretty cool.
Most people have a key fob.

00:37:18.670 --> 00:37:22.741
Raise your hand if you have a
car key fob that unlocks and

00:37:22.741 --> 00:37:25.877
does cool stuff with your car.
Sweet. Hold on. Scanning.

00:37:25.877 --> 00:37:32.517
Scanning. Amplification. So here
is one that I took a look at. I

00:37:32.517 --> 00:37:38.757
took a look at a couple. This is
NM95HS01 or 02. Semi-conductor

00:37:38.757 --> 00:37:43.194
called a high security rolling
code generator. And this is a

00:37:43.194 --> 00:37:47.632
signal. There is a lot more like
births of data here. Also

00:37:47.632 --> 00:37:49.801
modulated a little bit
differently so with our previous

00:37:49.801 --> 00:37:54.172
garage signal, we learned that a
long signal is 1 and a short was

00:37:54.172 --> 00:37:58.877
0. We'll that you can do that in
a sec. What is a rolling code?

00:37:58.877 --> 00:38:05.183
Let's say you have a car key.
Essentially it has a pseudo

00:38:05.183 --> 00:38:08.319
random number generator inside
and the same is in your car. So

00:38:08.319 --> 00:38:10.388
when you hit this the button, it
will send a code to that car.

00:38:10.388 --> 00:38:12.390
Now the next time you hit that
button on your key, it will send

00:38:12.390 --> 00:38:15.059
the next code in the HRG based
off your initial seed. Now as

00:38:15.059 --> 00:38:17.829
long as the car and the key have
the same seed, what will happen

00:38:17.829 --> 00:38:19.831
is, the key or car will also
continue to down that logical

00:38:19.831 --> 00:38:21.833
progression of the seed. And you
always matchup. However, if

00:38:21.833 --> 00:38:23.835
you're accidently or if you like
have a key in your pocket and

00:38:23.835 --> 00:38:25.837
accidently press it, you will
then be out of sync with the

00:38:25.837 --> 00:38:31.609
car. So the car also has an
allowance. So the car will allow

00:38:31.609 --> 00:38:37.615
something like 200 to 1000
additional codes. That may seem

00:38:47.759 --> 00:38:51.663
like a lot but fortunately, most
rolling code systems use such a

00:38:51.663 --> 00:38:56.301
large key space that 1000 is
really negligible. I'm seeing

00:38:56.301 --> 00:39:01.739
typically like 40-60 bits for
the rolling codes. So that 1000

00:39:01.739 --> 00:39:04.809
doesn't really help us. It helps
us like guess a little bit but

00:39:04.809 --> 00:39:07.378
not much. We are not going to
guess that code in this lifetime

00:39:07.378 --> 00:39:10.615
unless we have a crypto graphic
attack on the rolling code. So

00:39:10.615 --> 00:39:14.285
it hits a button and sends a
code and then the next code. If

00:39:14.285 --> 00:39:16.588
you don't know the rolling code,
you're not going to figure out

00:39:16.588 --> 00:39:20.959
what those numbers are unless
you find it. This prevents a

00:39:20.959 --> 00:39:23.428
replay attack it's when we can
sniff and replay the same

00:39:23.428 --> 00:39:28.099
signal. So with the fixed code
garages, if we sniff the signal

00:39:28.099 --> 00:39:31.636
we can replay it later. It's
irrelevant because it takes 8

00:39:31.636 --> 00:39:35.273
seconds to brute force every
garage out there but this

00:39:35.273 --> 00:39:39.377
prevents that. One thing you can
do about replaying rolling codes

00:39:39.377 --> 00:39:43.281
is you can capture a signal
while the remote is out of

00:39:43.281 --> 00:39:47.452
range. And you use that. So if I
broke into your home, press your

00:39:47.452 --> 00:39:50.421
remote control and recorded
that, I can go to your car and

00:39:50.421 --> 00:39:53.124
unlock it, for example this is
super lame because you need

00:39:53.124 --> 00:39:59.264
physical access to the device.
And also, as soon as the key is

00:39:59.264 --> 00:40:01.499
pressed again, let's say the
owner of the cargoes to the car

00:40:01.499 --> 00:40:05.169
and locks or unlocks, that will
in validate all previous codes.

00:40:05.169 --> 00:40:10.208
So, what if there is another way
to get that code from the user?

00:40:10.208 --> 00:40:15.413
And I found -- and this has been
known and talked about for years

00:40:15.413 --> 00:40:18.783
and years and years and years.
And I never seen actually

00:40:18.783 --> 00:40:21.719
demonstrated. I never seen any
code or examples of this. What

00:40:21.719 --> 00:40:28.026
if we jammed the signal? What if
I'm at your car and I'm jamming

00:40:28.026 --> 00:40:30.561
that, let's say it's 350
megahertz and I'm jamming that

00:40:30.561 --> 00:40:34.332
signal so when the user goes
their car and they hit unlock,

00:40:34.332 --> 00:40:37.101
the signal sends, my jamming
device is sending a signal as

00:40:37.101 --> 00:40:40.705
well and the car won't hear it
because now it is seeing so much

00:40:40.705 --> 00:40:47.378
data. Simultaneously, what I can
do is I found that most -- when

00:40:47.378 --> 00:40:52.583
I say most, every vehicle I
tested, we'll just say all

00:40:52.583 --> 00:40:55.720
vehicles have essentially a
receive window of a frequency

00:40:55.720 --> 00:40:59.090
they are looking at. So if
you're key is 350 megahertz and

00:40:59.090 --> 00:41:02.160
your car is listening on that,
technically it's listening

00:41:02.160 --> 00:41:06.698
probably between 314.5 and
315.5. So this is receive window

00:41:06.698 --> 00:41:12.470
of one megahertz. So, 500
kilohertz plus or Mina us from

00:41:12.470 --> 00:41:16.307
the primary frequency. So if I'm
jamming somewhere in that

00:41:16.307 --> 00:41:21.212
frequency range, your car won't
be able to listen to the key. So

00:41:21.212 --> 00:41:25.283
I jam that signal and you hit
the key and then I have a

00:41:25.283 --> 00:41:29.520
receiver as well. And my
receiver has a nice good chip

00:41:29.520 --> 00:41:33.057
and has a much tighter receiver
bandwidth. So my filter

00:41:33.057 --> 00:41:36.427
bandwidth is so much smaller
that I'm evading or avoiding any

00:41:36.427 --> 00:41:39.797
jamming signal and I see your
key code, your rolling code very

00:41:39.797 --> 00:41:43.568
clearly. So I now have a rolling
code your car didn't hear and I

00:41:43.568 --> 00:41:46.971
can use that at my leisure
because they are nonexpiring.

00:41:46.971 --> 00:41:50.108
Now let's say I stop jamming and
I have this code and I'm happy.

00:41:50.108 --> 00:41:54.178
What will happen is, it's like
that didn't work so they hit

00:41:54.178 --> 00:41:57.749
unlock again and it works and
they drive away. My code is now

00:41:57.749 --> 00:42:01.819
in validated so again it will in
validate as soon as another

00:42:01.819 --> 00:42:05.223
code, a future code has been
set. All previous codes are in

00:42:05.223 --> 00:42:10.094
validated. Instead, what if I
jammed twice? What do you do

00:42:10.094 --> 00:42:15.733
when your button doesn't work on
your car key? You hit it again.

00:42:15.733 --> 00:42:21.139
Now I have two codes. So with
two codes, we have -- I now have

00:42:21.139 --> 00:42:24.842
two codes and then I stop
jamming and I replay the first

00:42:24.842 --> 00:42:27.678
one because we automate this.
This happened in under one

00:42:27.678 --> 00:42:31.716
second. You hit unlock and that
didn't work so you hit it again.

00:42:31.716 --> 00:42:35.620
The device within a second stops
jamming and plays the first one

00:42:35.620 --> 00:42:39.323
and leaves me with a future code
the car has not heard this

00:42:39.323 --> 00:42:43.227
applies to garages as well any
garage with rolling codes. We

00:42:43.227 --> 00:42:47.965
now covered all the garages. We
can just jam, listen, jam

00:42:47.965 --> 00:42:51.002
listen, replay the first code,
abuse the next code later on.

00:42:53.171 --> 00:42:55.673
This is pretty incredible
because it means I can go to

00:42:55.673 --> 00:42:59.911
your car later and do whatever I
want to it. Depending on -- when

00:42:59.911 --> 00:43:03.181
I say do whatever I want, based
off the key. Another thing I

00:43:03.181 --> 00:43:06.417
found is that this works on
remote start vehicles. So, keys

00:43:06.417 --> 00:43:12.290
with remote start, this works.
One thing I found that -- so

00:43:12.290 --> 00:43:14.992
people described this attack and
another issue I found is let's

00:43:14.992 --> 00:43:19.297
say you want to steal stuff from
their car. Go up to their car

00:43:19.297 --> 00:43:24.068
and break-in. If they hit lock,
if the last thing they hit was

00:43:24.068 --> 00:43:29.407
lock, and you -- the last signal
have you is a lock signal. If

00:43:29.407 --> 00:43:32.477
you replay that. All you're
going to do is lock the car.

00:43:32.477 --> 00:43:35.746
Most signals have the data field
separate from the rolling code.

00:43:35.746 --> 00:43:38.850
So as long as you know the
rolling code, you can change the

00:43:38.850 --> 00:43:42.520
lock sill nag and weaponize it
into a unlocked signal and open

00:43:42.520 --> 00:43:48.526
their car. This is roll jam.
This is device releasing the

00:43:50.862 --> 00:43:56.400
full source and probably won't
be putting any specific cars in

00:43:56.400 --> 00:43:59.770
it implementing cars, but this
is the device you can use these

00:43:59.770 --> 00:44:03.975
chips. One will do the jamming
and one will do the replaying

00:44:03.975 --> 00:44:08.679
whenever you hit had the button
or use a remote to trigger it.

00:44:08.679 --> 00:44:13.417
So if you put it under a vehicle
for example it will perform this

00:44:13.417 --> 00:44:20.458
full attack. I think that is
about it. I'm out of time. I

00:44:20.458 --> 00:44:28.199
worked on every car I tested. It
felt really good ( Laughs ) So

00:44:28.199 --> 00:44:33.337
the basic lessons, in crept or
harsh your button. Use H mack to

00:44:33.337 --> 00:44:35.740
prevent flipping. Use a
time-based algoriyhm. We had

00:44:35.740 --> 00:44:40.044
rolling codes for at least 20
years. I couldn't find how old

00:44:40.044 --> 00:44:44.782
they were. I couldn't find one.
Now we have dual key lock which

00:44:44.782 --> 00:44:49.654
came out last year which also
solves this. This has been an

00:44:49.654 --> 00:44:52.190
issue we known about for over 20
years that's been solved 20

00:44:52.190 --> 00:44:55.126
years ago yet virtually every
manufacturer is implementing

00:44:55.126 --> 00:44:59.497
this poor implementation.
Another way is to use a

00:44:59.497 --> 00:45:03.434
challenge response. So use a
transceiver ran just

00:45:03.434 --> 00:45:07.805
transmitting, will you say I
want to unlock and the car will

00:45:07.805 --> 00:45:10.608
say, okay, here is my challenge.
And then your key can receive

00:45:10.608 --> 00:45:14.178
that and respond appropriately.
That is the best way to handle

00:45:14.178 --> 00:45:22.153
this stuff. I'll be releasing
this stuff shortly. Thank you

00:45:22.153 --> 00:45:28.159
very much. (Applause)

