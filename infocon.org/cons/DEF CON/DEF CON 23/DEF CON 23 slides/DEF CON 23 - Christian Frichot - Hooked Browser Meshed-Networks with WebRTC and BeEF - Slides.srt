00:00:00.033 --> 00:00:03.770
Good after noon, thank you all
for being in here, you are in

00:00:03.770 --> 00:00:11.411
track 3 and this is hooked
browser network web RTC and --

00:00:11.411 --> 00:00:13.413
without further a -- Christira
Frichot. >> Hello everybody.

00:00:13.413 --> 00:00:19.419
Awesome someone is going to fine
me a beer later on that will be

00:00:31.932 --> 00:00:37.938
really fantastic. My name is
Christia -- I'm one of the co --

00:00:48.849 --> 00:00:52.019
beef prefect or I'm also an
Australian. Well exAustralian I

00:00:52.019 --> 00:00:55.055
just relocated with the family
up to California so what that

00:00:55.055 --> 00:01:01.061
basically means I have no idea
how hot it is and -- I'm like

00:01:09.937 --> 00:01:12.172
what the fuck does that mean. So
what we are going to be talking

00:01:12.172 --> 00:01:18.178
about this afternoon. There are
a few things we are going to be

00:01:28.355 --> 00:01:34.361
brushing across. I apologize in
advance. Kind of social

00:01:40.934 --> 00:01:46.940
engineering testing. Frame work
-- hands up here people who have

00:01:49.710 --> 00:01:53.747
heard of beef before? Awesome.
Keep your hand up if you have

00:01:53.747 --> 00:01:59.252
used it before? Okay, keep your
hand up if you were authorize to

00:01:59.252 --> 00:02:05.359
use beef as a security
engagement. Another thing I'm

00:02:05.359 --> 00:02:11.365
going to talk about -- is into a
browser how you maintain those

00:02:15.535 --> 00:02:21.541
and finally integrating. Into
beef and then I'm going to have

00:02:23.577 --> 00:02:29.583
a demo of some variety. So let's
kick this off. So I'm when wade

00:02:32.319 --> 00:02:38.859
another created brief he
basically came up with he just

00:02:38.859 --> 00:02:43.697
wanted to not pop alert dialogue
anymore and people still do this

00:02:43.697 --> 00:02:49.703
all the time. How many of you do
engagement and the first thing

00:02:51.772 --> 00:02:57.778
you do is 1 (colon is the first
thing. Like the reaction. And

00:03:00.414 --> 00:03:05.986
soon they're going this means
absolutely Dick to everyone. Is

00:03:05.986 --> 00:03:11.992
use less for the developer? The
business owner is not going to

00:03:15.629 --> 00:03:21.635
understand what it is. Insight
of the browser context. We

00:03:26.606 --> 00:03:30.610
started to see people I guess
targeting users more and more.

00:03:30.610 --> 00:03:33.713
Obviously as the internet grows
so do the use of browser tech

00:03:33.713 --> 00:03:39.719
nomad this is a very interesting
content. You guys will all

00:03:45.759 --> 00:03:49.362
definitely probably have a smart
phone will have one or more web

00:03:49.362 --> 00:03:55.902
browsers. If you guys have your
lab top here with multiple tabs

00:03:55.902 --> 00:04:01.908
and you may have more than one
compute if you start to break

00:04:06.747 --> 00:04:11.251
that down. Is enormous thing
that is can go wrong and you

00:04:11.251 --> 00:04:16.389
know browser development is a
fantastic thing. When you open

00:04:16.389 --> 00:04:23.096
up chrome it has 3 bottoms. The
bigger and back ward and

00:04:23.096 --> 00:04:29.836
refresher and it look super
simple like my mom can and does

00:04:29.836 --> 00:04:35.842
use it but chrome is seriously
complicated. Text surfaces --

00:04:41.782 --> 00:04:47.787
wade calls it this really
interesting risk -- and oh yeah

00:05:06.072 --> 00:05:09.810
and the prime resurface. And we
can't bet whether or not is

00:05:09.810 --> 00:05:15.815
secure or not. It sounds pretty
risky. That you have -- at the

00:05:19.786 --> 00:05:25.792
same time multiple tabs running
in the background. I guess

00:05:41.708 --> 00:05:45.979
another one of the things that
we are saying is happen and why

00:05:45.979 --> 00:05:49.049
we're saying more people shifted
this job. Thick browser

00:05:49.049 --> 00:05:55.055
technology disappearing. So who
has an uninstall flash?

00:05:59.359 --> 00:06:05.365
Whatever. And so like most of
the thick web technology that we

00:06:07.734 --> 00:06:15.408
did have flash and silver line
is replace almost future by

00:06:15.408 --> 00:06:19.980
future well as far as I know it
doesn't mean anything except

00:06:19.980 --> 00:06:22.649
crazier java script. So what the
fridge browser hacking so when I

00:06:22.649 --> 00:06:24.651
guess we talk about browser
hacking we basically talk about

00:06:24.651 --> 00:06:26.653
-- object model and then using
java script ma lesion ally -- or

00:06:26.653 --> 00:06:28.655
trick the user into information
using social engineering tech

00:06:28.655 --> 00:06:30.657
nicks, whatever. The browser
handbook and here are the two

00:06:30.657 --> 00:06:32.659
other call office. Makala
doesn't like -- I'm so happy

00:06:32.659 --> 00:06:34.661
that you saw this slide and wade
actual like pants. Someone has

00:06:34.661 --> 00:06:40.667
injected and controlling a piece
of java script. Inside of a

00:07:20.140 --> 00:07:26.146
browser or not necessarily --
but also -- exist within the

00:07:29.015 --> 00:07:33.453
browser. Plug in and so on and
in the book we define -- when --

00:07:33.453 --> 00:07:39.459
I think stages what where he are
try together achieve. Trying to

00:07:41.628 --> 00:07:47.000
do to make people who did it
sorts of assessment. Obviously

00:07:47.000 --> 00:07:53.006
there is the -- pull -- could be
man in the middle or pushing

00:08:01.748 --> 00:08:06.753
attacks or whatever. Obviously
executing a piece of java script

00:08:06.753 --> 00:08:09.689
unless you can maintain. So the
next phases is obviously feature

00:08:09.689 --> 00:08:13.326
that control. And stable manner
ask then you can move on -- most

00:08:13.326 --> 00:08:19.332
of this talk is just about the
feature of control so I'm not

00:08:29.042 --> 00:08:31.978
going to be dropping -- that
found in anything. Any 0 days. I

00:08:31.978 --> 00:08:37.984
a apologize. So let introduce
beef. That's a picture that

00:08:46.326 --> 00:08:50.697
doesn't really show or help you.
In what beef is at all but I

00:08:50.697 --> 00:08:54.667
guess the idea that the hook --
is called hook by default you

00:08:54.667 --> 00:09:00.106
can obviously change that to be
called whatever. And once you

00:09:00.106 --> 00:09:05.578
basically get that java script
executing within a document it

00:09:05.578 --> 00:09:08.815
will stop pulling back to server
so you can hook a bunch of

00:09:08.815 --> 00:09:14.821
resources -- to execute within
the document object model and

00:09:18.525 --> 00:09:23.062
you obviously have like a
preusers. This is the serious

00:09:23.062 --> 00:09:28.768
part of the talk because of a
virgin DEFCON talker. Obviously

00:09:28.768 --> 00:09:34.774
the way beef maintains -- 2 2
and half primary data channels.

00:09:44.584 --> 00:09:48.421
And these are pretty much like
dynamic. And I guess the

00:09:48.421 --> 00:09:53.393
important comes down to why you
would need to feature

00:09:53.393 --> 00:09:58.398
communication channels for a
long period of time. You want to

00:09:58.398 --> 00:10:04.304
retain that home for as long as
you can because -- time to

00:10:04.304 --> 00:10:06.773
complete and a really good
example that I like to talk

00:10:06.773 --> 00:10:09.509
about and did some research -- a
couple of years ago.

00:10:09.509 --> 00:10:15.515
Discontribruted blond. Using
multiple browser -- >> I just

00:10:24.624 --> 00:10:28.461
wanted to say thank you to
everyone staying here late to

00:10:28.461 --> 00:10:35.001
see a new speaker. How is he
doing? Is he doing well? >> That

00:10:35.001 --> 00:10:41.007
dude sucks. >> Can you
understand anything he is

00:10:43.576 --> 00:10:49.582
saying? >> No. >> Dude, thank
you. >> He said he is going to

00:10:53.453 --> 00:10:58.258
make a boiling maker. Any way I
think you know the drill to new

00:10:58.258 --> 00:11:04.264
speakers to DEFCON. Thank you
for coming. >> As you were -- >>

00:11:14.007 --> 00:11:17.610
So obviously if are you kind of
doing these sorts of attacks the

00:11:17.610 --> 00:11:25.084
longer you can maintain that
communication channel, sometimes

00:11:25.084 --> 00:11:29.923
you'll need the time -- the
second channel is obviously web

00:11:29.923 --> 00:11:35.929
sockets. Channel -- thing that
introduce also another piece

00:11:41.000 --> 00:11:46.205
awesome software engineers and
also DNA. I want to show you

00:11:46.205 --> 00:11:52.211
guys you probably can't read
this are showing some of the

00:11:55.248 --> 00:12:01.254
beef -- java script -- we
actually do is just and you can

00:12:07.227 --> 00:12:10.263
see this is -- what happens in
polling period. The browser is

00:12:10.263 --> 00:12:14.300
-- to send request -- not too
complicated. Basically how Gmail

00:12:14.300 --> 00:12:19.172
works. And what you see here
right in the middle there is

00:12:19.172 --> 00:12:24.444
basically an event handle for --
through -- the UI -- it will

00:12:24.444 --> 00:12:28.481
basically send through. And
there a lot of different views

00:12:28.481 --> 00:12:32.552
you will see the record response
that sort of communication

00:12:32.552 --> 00:12:36.389
channel. Web sockets are pretty
cool. Also kind of hit and miss

00:12:36.389 --> 00:12:38.524
depending on what you are
talking about. Quite often it is

00:12:38.524 --> 00:12:44.530
does and it pretty interesting.
So this is a relatively new --

00:13:17.430 --> 00:13:23.436
basically there is a couple so
if you to send data back to beef

00:13:28.107 --> 00:13:33.980
you kind of brake it down and
you dynamically build imagines

00:13:33.980 --> 00:13:37.050
which are put into the dome and
those imagines are domain which

00:13:37.050 --> 00:13:43.056
are automatically generated.
Listed as a DNS. It will start

00:13:46.192 --> 00:13:52.131
beef. As well. So you can see
they'll be a send function by --

00:13:52.131 --> 00:13:58.137
imagine source. Blah, blah,
blah. Now there is a problem

00:14:01.841 --> 00:14:04.577
with each of these communication
problems and if you look at this

00:14:04.577 --> 00:14:07.547
if I capture is obvious.
Whatever. All your traffic goes

00:14:07.547 --> 00:14:13.553
to your server from a defender
use -- terrible -- all cows lead

00:14:24.664 --> 00:14:30.670
to run. Now there is a couple of
ways you can get around this.

00:14:33.005 --> 00:14:39.011
You can set up multiple beef
service. It achieve by multiple

00:14:44.951 --> 00:14:50.957
interceptions. And that's not
the human there. [ LAUGHTER ] >>

00:14:57.697 --> 00:15:03.703
And that's what I said. And
American people -- maybe it knew

00:15:08.508 --> 00:15:14.247
what I us going to say before I
was going to say it. Or you can

00:15:14.247 --> 00:15:16.716
set up proxy service. That's
another interesting channel.

00:15:16.716 --> 00:15:19.819
Distribute them around different
places. There is a bunch of

00:15:19.819 --> 00:15:25.825
different ways. But it -- so I
said by default a sec now beef

00:15:34.233 --> 00:15:40.239
kind of work but is not going to
be as useful. We also have

00:15:42.708 --> 00:15:48.714
evasion and extension within the
platform as well which is really

00:15:51.851 --> 00:15:54.554
cool. Every time you are
rendering a job -- before sent

00:15:54.554 --> 00:16:01.994
-- to the client. But that
doesn't help -- can you use GFS

00:16:01.994 --> 00:16:08.000
which is not going to help. Or
you can do something crazy. Like

00:16:10.803 --> 00:16:15.308
that. Like let's make a browser
stop talking to beef server

00:16:15.308 --> 00:16:22.281
because they don't like beef.
Like what? So the first time I

00:16:22.281 --> 00:16:26.485
started looking into web RTC,
bull shit this stuff works. So

00:16:26.485 --> 00:16:32.491
this is a -- web browser with
real-time communication. And --

00:16:36.429 --> 00:16:40.533
they made it so you web chat to
each other. Andon maybe

00:16:40.533 --> 00:16:45.638
something they were into or
something. Is actually really

00:16:45.638 --> 00:16:51.277
cool and then the technology
mature ask we're doing things

00:16:51.277 --> 00:16:56.916
like we are making thing that
your browser -- similar

00:16:56.916 --> 00:16:59.619
technology. Hands up, has
anybody played with web RTC --

00:16:59.619 --> 00:17:05.625
yeah. To work this 3 primary.
Kind of why it was used in the

00:17:14.133 --> 00:17:19.472
first place. I don't really
touch on that. RTC connection is

00:17:19.472 --> 00:17:24.176
where it starts to get
interesting and data channel

00:17:24.176 --> 00:17:29.649
which tells you a lot. So the
media stream on this little java

00:17:29.649 --> 00:17:35.655
script allows sent some
constrains in what's happening

00:17:39.125 --> 00:17:45.865
in the browser and what happens
-- access your camera. And if

00:17:45.865 --> 00:17:51.871
you put yes that will be a blog
stream data inside which is

00:18:00.146 --> 00:18:03.616
basically feeding from your
camera phone. By default is not

00:18:03.616 --> 00:18:08.254
going to do anything your lock
will be on but it has access to

00:18:08.254 --> 00:18:15.861
your media. Interface is where
we start -- handler. Like a

00:18:15.861 --> 00:18:21.867
remote stream for example like a
-- so you actually see the video

00:18:26.105 --> 00:18:32.111
from somewhere. I'll go into
more detail if a bit. And then

00:18:35.548 --> 00:18:41.554
the data channel is kind of what
it sounds like if you establish

00:18:45.791 --> 00:18:51.797
the PA connection. From --
browser to browser. This is like

00:18:54.467 --> 00:18:57.670
there is actually -- really
interesting uses like examples

00:18:57.670 --> 00:19:03.676
web RTC so if you go into the
web site some guys set up PFP

00:19:06.312 --> 00:19:13.352
web transfer over RTC. So first
person has goes to web site and

00:19:13.352 --> 00:19:20.526
generate a unique URL. You give
it to your friend and you with

00:19:20.526 --> 00:19:25.765
grab and -- to each other and it
doesn't go through the server.

00:19:25.765 --> 00:19:31.504
The fact that it works I fine
surprising. This is all java

00:19:31.504 --> 00:19:37.510
script products freaking crazy.
And so it really bugged me that

00:19:41.881 --> 00:19:45.151
you can have 2 browsers that are
talking to each other. Go home

00:19:45.151 --> 00:19:51.157
java script you're drunk. Now
obviously there is a lot more

00:19:57.396 --> 00:20:02.168
moving procs on how this works.
One of the things the session

00:20:02.168 --> 00:20:08.174
constriction. You'll recognize
this sort of stuff. SDP is

00:20:14.947 --> 00:20:18.417
needed within the web RTCP
connection because the two

00:20:18.417 --> 00:20:22.421
browse need to talk to each
other. Because they do talk to

00:20:22.421 --> 00:20:27.026
each other. Now web RTC doesn't
actually how you share -- just

00:20:27.026 --> 00:20:34.166
say that you are do in fact have
to share it. So in many instants

00:20:34.166 --> 00:20:38.938
there will be a web application.
You'll share signaling data

00:20:38.938 --> 00:20:42.174
through there. We actually have
use this capable within beef for

00:20:42.174 --> 00:20:48.180
a couple years. So when this
first came out in chrome they

00:20:50.449 --> 00:20:58.290
get internal RT web -- was
created because for web RTC --

00:20:58.290 --> 00:21:04.296
session -- also internet IP
addresses. So fire fox and

00:21:08.934 --> 00:21:14.940
chrome -- so in case you didn't
know like if you using those

00:21:19.678 --> 00:21:22.915
browser and I think New York
Time recently using this

00:21:22.915 --> 00:21:28.921
technology and organization is
-- by default. Through the

00:21:33.459 --> 00:21:38.264
internet. This is more java
script that's just the nit.

00:21:38.264 --> 00:21:42.968
Basically what's happening here
down to bottom the java script

00:21:42.968 --> 00:21:50.276
is creating -- basically -- kick
off a bunch like a request

00:21:50.276 --> 00:21:58.117
within the browser to figure out
local STP -- out of -- so this

00:21:58.117 --> 00:22:01.620
appear stuff really great but
obviously browser are separated

00:22:01.620 --> 00:22:09.061
by files. Contact to browser as
a firewall. This is -- reaction

00:22:09.061 --> 00:22:13.432
that firewalls we trust. I said
-- that's a line. Female line

00:22:13.432 --> 00:22:19.438
and some baby that's completely
-- that's a duck. I can't see

00:22:23.242 --> 00:22:28.347
from up here. So in an idea
world this is how kind of -- IP

00:22:28.347 --> 00:22:34.353
-- works. You have -- the first
of which is -- session reversal

00:22:48.334 --> 00:22:54.340
utility. And basically is a set
-- ability for a browser to get

00:23:02.314 --> 00:23:08.854
information. Google -- and I did
and my demo so you don't need to

00:23:08.854 --> 00:23:13.959
create these, these exist. And
are out there. Now if gnat

00:23:13.959 --> 00:23:19.965
between these two devices is not
symmetry -- is still stuck. And

00:23:24.837 --> 00:23:27.406
this is where the second
component. Temp service are not

00:23:27.406 --> 00:23:33.512
necessary free. There are some
in the internet. Some of them

00:23:33.512 --> 00:23:40.052
you may be able to get on
without paying money. Some of

00:23:40.052 --> 00:23:42.621
them maybe you have to pay
money. How -- cunning you are.

00:23:42.621 --> 00:23:44.623
Maybe. There is also open source
software. Spend it for yourself

00:23:44.623 --> 00:23:50.629
if you want. I didn't touch it
in my demo. Basically these

00:24:02.808 --> 00:24:05.477
things can take the handshake --
the browser thinks their next to

00:24:05.477 --> 00:24:09.248
each other but they're not. So
this is all pretty complicated.

00:24:09.248 --> 00:24:16.655
We're about the use this
technology called -- or ice. And

00:24:16.655 --> 00:24:22.661
basically helps you determine
the best way to communicate from

00:24:29.101 --> 00:24:35.974
here to here. Kind of like the
chrome way. Let's make an it as

00:24:35.974 --> 00:24:41.981
simply as possible as we K.
shifted you are going to try and

00:24:45.150 --> 00:24:52.124
exploit and do some
fingerprinting. And you know

00:24:52.124 --> 00:24:57.096
you're allowed to use a tool. So
step one, obviously hook the

00:24:57.096 --> 00:25:03.702
browser. So exploit us -- put a
java script -- beef server. This

00:25:03.702 --> 00:25:09.708
point with the web RTC enable to
start to congressman. So at this

00:25:13.112 --> 00:25:19.118
point. Want to be the receiver.
And call -- is session

00:25:22.654 --> 00:25:28.660
information and sense the
signaling information backing

00:25:31.630 --> 00:25:37.636
out. Which is sent back down to
the receiver. I'm going to build

00:25:39.838 --> 00:25:45.844
my own session to get my own IP
information. Back up to and that

00:25:50.149 --> 00:25:53.419
point both browsers have enough
information able each other they

00:25:53.419 --> 00:25:59.425
can start talking to each other
directly. They do. And they can

00:26:01.560 --> 00:26:04.563
also do things like establish a
data channel so that's after PA

00:26:04.563 --> 00:26:11.303
connection is establish you have
another event handle to pull up

00:26:11.303 --> 00:26:15.174
your data channel. But the
browser is still hook. They're

00:26:15.174 --> 00:26:17.576
still talking to your beef
server. There still a problem.

00:26:17.576 --> 00:26:23.582
So this is where java script you
can use commands at put into the

00:26:31.323 --> 00:26:35.427
web RTC extension inside a beef
to tell one browser to command

00:26:35.427 --> 00:26:42.034
another to -- stop talk together
beef server. And you can

00:26:42.034 --> 00:26:47.106
obviously use that beef server.
Enough talking let's look at

00:26:47.106 --> 00:26:54.480
this thing. This is going to be
fun. What? You wish man. I see

00:26:54.480 --> 00:27:00.486
you do that that did not end
well. So we started beef but

00:27:10.596 --> 00:27:13.866
browser side by side here so the
one on the left will be browser

00:27:13.866 --> 00:27:19.872
one and the one on the right
will be browser 2. So I turn on

00:27:23.842 --> 00:27:27.112
both me massager to see stuff
happen. And if you -- if it

00:27:27.112 --> 00:27:29.982
doesn't say yes it didn't work.
I think Safari works I'm not

00:27:29.982 --> 00:27:35.988
sure. So I go on chrome on
different computer. And on

00:27:40.859 --> 00:27:46.865
Android as well. Now the first
time I did this research I could

00:27:53.705 --> 00:27:59.711
not get this to work now I have
gotten pass that problem. Now it

00:28:07.553 --> 00:28:14.660
works fine. So about five
browser hooks. That's lovely and

00:28:14.660 --> 00:28:18.697
we have some new UI options and
then select as a receive. And

00:28:18.697 --> 00:28:24.703
then click on a browser and in
in there you can see a list of

00:28:28.373 --> 00:28:34.379
connectivity. And once that kind
of connective has occur you can

00:28:37.583 --> 00:28:41.720
see the connected status so they
now have a connection between

00:28:41.720 --> 00:28:45.924
each other. So I walk through
what's happening with the PA

00:28:45.924 --> 00:28:51.463
connection. Both messages is
relatively useful so this

00:28:51.463 --> 00:28:59.137
browser on the left -- and then
basically starts to try and make

00:28:59.137 --> 00:29:05.143
the call and to do that it has
to make the session -- IP

00:29:11.183 --> 00:29:14.453
addresses and IPP ports. So is
the beef and then it will wait

00:29:14.453 --> 00:29:22.361
for -- to answer back. So
obviously the reserve starts

00:29:22.361 --> 00:29:28.367
receiving those messages. And
then finally it goes awesome I'm

00:29:36.541 --> 00:29:41.780
now ready to keep off my own PI
connection object. Sign session

00:29:41.780 --> 00:29:47.786
sends back an answer. This is
how you can talk to me. That

00:29:50.922 --> 00:29:55.360
signal again ahead back. I'm
surprise this stuff works. So at

00:29:55.360 --> 00:30:00.198
this point each has enough
information about each other

00:30:00.198 --> 00:30:02.701
they can start talking to each
other. They're actually

00:30:02.701 --> 00:30:08.707
connected. So these two browsers
now -- have yeah. And what we

00:30:15.313 --> 00:30:21.319
are going to is like a star.
Browser number one and you'll

00:30:23.989 --> 00:30:29.995
see slowly. Getting fire fox to
work was a real pain in the ass.

00:30:40.205 --> 00:30:46.211
Maybe 5 months -- I got re drunk
and I tried it when I was sober

00:30:48.613 --> 00:30:54.619
and I got to work. Whether every
or not that's scientific proof

00:30:54.619 --> 00:30:58.457
you get more stuff done with
alcohol. I don't know I'm only a

00:30:58.457 --> 00:31:04.463
computer sign scientist. -- Tab
on the rest of the browser you

00:31:07.299 --> 00:31:13.305
see they're connected to just to
number one. Now what we can do

00:31:18.977 --> 00:31:22.347
from here is we couldn't do
previous. -- Module ID -- send

00:31:22.347 --> 00:31:26.551
commands -- out standing over
the data channel. Executed on

00:31:26.551 --> 00:31:31.456
the PI back. Browser one, detect
the last pause was there. Can

00:31:31.456 --> 00:31:33.458
you deal with ups away. So
browser 2 is running that

00:31:33.458 --> 00:31:35.460
command and is going yes, I have
last pass. And that browser has

00:31:35.460 --> 00:31:37.462
last pass. So that's basically a
command module which is kind of

00:31:37.462 --> 00:31:39.464
cool and the last pass module is
pretty interesting as well. But

00:31:39.464 --> 00:31:41.466
obviously after these browser
are still online talk together

00:31:41.466 --> 00:31:43.468
beef server. So command the PA
to go to still so what we start

00:31:43.468 --> 00:31:45.470
to see now is each of these
browser is talk together beef

00:31:45.470 --> 00:31:47.472
server and basically drop --
like a timing or ton period 30

00:31:47.472 --> 00:31:49.474
secs so they take a little bit.
You'll see me refresh the

00:31:49.474 --> 00:31:51.476
browser. And once the browser is
still it starts to send a

00:31:51.476 --> 00:31:57.482
message -- so you'll see
eventually they'll fall off the

00:32:03.021 --> 00:32:09.027
online folder and into the
offline folder except for number

00:32:14.866 --> 00:32:20.872
one. But they still and we can
communicate. Jump into the

00:32:29.114 --> 00:32:31.817
browser -- you see on the still
browser they're not making any

00:32:31.817 --> 00:32:37.823
web request. Network browser 1
is obviously talking to beef and

00:33:37.449 --> 00:33:43.455
browser two will no longer send
request. Java script is pretty

00:33:49.060 --> 00:33:55.066
cool. And just to demonstrate
there is like a -- data channel

00:33:57.535 --> 00:34:01.239
available I use the silly prom
command. I'll send -- is not

00:34:01.239 --> 00:34:07.245
settle but is one step. After
command module and -- because

00:34:21.927 --> 00:34:26.164
the way we built the actual
command module inside of SKF is

00:34:26.164 --> 00:34:32.170
horrible. I'm pretty sure -- is
terrible. Numbers you see the

00:34:37.075 --> 00:34:44.482
doll pop up and are like hay how
are you doing. What? Sweet. Deaf

00:34:44.482 --> 00:34:51.890
con and I'll send it back.
Results put that data back and

00:34:51.890 --> 00:34:54.693
you'll notice that the browser
did not send any data to beef

00:34:54.693 --> 00:35:00.699
server. Your network -- that
browser is not talking to the

00:35:03.401 --> 00:35:09.407
beef server. Like also I like to
show one of my favorite beef

00:35:13.144 --> 00:35:19.150
servers. Searching for the term
Rik. That's my favorite. What?

00:35:32.697 --> 00:35:38.703
That sucks. [ APPLAUSE ] >>
Yeah. So there are a few things

00:35:45.210 --> 00:35:52.317
happening under the hook for
beef to behave in this way. Some

00:35:52.317 --> 00:35:58.323
terrible rub by I have done. The
first thing we have establish

00:36:01.893 --> 00:36:07.899
new data base. To able to handle
signaling message. Specific RTC

00:36:10.669 --> 00:36:16.041
stuff to browser. This is
another one of the data models.

00:36:16.041 --> 00:36:22.414
Then we have done like API hook.
Actually for those who have not

00:36:22.414 --> 00:36:28.019
developed in beef what you like
about it super extendable. I was

00:36:28.019 --> 00:36:34.025
able to interact with the hook
-- dynamic -- if you are doing

00:36:37.896 --> 00:36:40.632
research. Java scripture. I
definitely check out. So this

00:36:40.632 --> 00:36:46.638
RTC signal to body function and
one beneath it runs every time

00:36:51.242 --> 00:36:54.279
the hook is generate and had it
will add signal messages. The

00:36:54.279 --> 00:37:00.285
handle defend new beef server.
So these are the end points that

00:37:04.756 --> 00:37:08.693
when the browser -- we have some
rest APR so most of that you can

00:37:08.693 --> 00:37:14.699
actually do. Do it all from the
rest IPR. When I first

00:37:19.237 --> 00:37:22.440
demonstrated this I was doing it
in the console -- but that shit

00:37:22.440 --> 00:37:28.446
is -- threats and job and stuff.
And obviously can you wrap it up

00:37:32.884 --> 00:37:39.257
beef extension and set
everything else out to work. Now

00:37:39.257 --> 00:37:44.028
the last piece of the pie the --
java script magic. And I'm like

00:37:44.028 --> 00:37:50.034
a terrible developer. I like to
think I know what I'm doing, but

00:37:52.103 --> 00:37:55.540
if I'm doing software
development I'm in the computer

00:37:55.540 --> 00:38:01.546
with my elbows is like 6 hundred
lines of java script. Seriously

00:38:04.582 --> 00:38:10.588
frequent kill me. And in that
part. Right in the middle is

00:38:15.160 --> 00:38:20.665
these events logic. So if I
receive a data channel. I'm

00:38:20.665 --> 00:38:27.705
going to go into the still mode
and click a bunch of time. If I

00:38:27.705 --> 00:38:31.142
receive an in still I'm going to
come out of that state. Execute

00:38:31.142 --> 00:38:37.382
java script or whatever. Now
there is a bunch of issues with

00:38:37.382 --> 00:38:44.088
this. This one -- so there was
issue with chrome and fire fox.

00:38:44.088 --> 00:38:50.829
I got over that hurdle. Right at
the beginning there is a

00:38:50.829 --> 00:38:54.332
reliability option that you
would use. When I was first

00:38:54.332 --> 00:39:01.773
doing this they would recommend
set -- between the browsers. Now

00:39:01.773 --> 00:39:07.779
I never had problems with it. I
had PS connected for hours and

00:39:10.348 --> 00:39:12.951
hours without a problem. A --
Internet explorer sucks. H does

00:39:12.951 --> 00:39:14.953
not help. Microsoft if -- from
just so they can bring Skype to

00:39:14.953 --> 00:39:16.955
browsers. And that's it? And
like chrome fire fox have had

00:39:16.955 --> 00:39:18.957
this for 2 or 3 years. Is kind
of the structure. Now obviously

00:39:18.957 --> 00:39:20.959
one other thing is the signaling
compiles communicating if a

00:39:20.959 --> 00:39:22.961
browser itself -- so if browser
starts to move around and it

00:39:22.961 --> 00:39:24.963
start to change the code
currently does not handle that

00:39:24.963 --> 00:39:26.965
gracefully at all. Is terrible.
And obviously you have touched

00:39:26.965 --> 00:39:28.967
the beef once or twice. You got
to let it lick you in the face

00:39:28.967 --> 00:39:30.969
at least once or twice. Have you
seen how long that guys tongue

00:39:30.969 --> 00:39:32.971
is? You so not happy. And also
if you are into -- response this

00:39:32.971 --> 00:39:34.973
stuff is pretty tricky. This is
another one of -- incident

00:39:34.973 --> 00:39:36.975
response relates -- Carol. If
you monitor your egress you spot

00:39:36.975 --> 00:39:38.977
your browser. Obviously in my
response configuration you can

00:39:38.977 --> 00:39:40.979
do some things. I'm going to
talk to beef. I'm going to run a

00:39:40.979 --> 00:39:42.981
command module. If I lose a peer
it doesn't matter. So this stuff

00:39:42.981 --> 00:39:48.987
can be more advance. From time
to time this might hit a one or

00:39:55.593 --> 00:39:57.595
a two. Same thing signature. --
the cooks that were done. His

00:39:57.595 --> 00:39:59.597
like make a change and two hours
later he makes another change.

00:39:59.597 --> 00:40:01.599
His like we're not doing this
anymore. Because really we're

00:40:01.599 --> 00:40:03.601
just going what java script is
meant to do. There is open

00:40:03.601 --> 00:40:09.607
source tan implementation. If
you go behind firewall. Handle

00:42:12.029 --> 00:42:18.035
to prevent. Like that stuff I'm
got thing. And I've actually run

00:42:22.540 --> 00:42:26.344
in a bunch corporate and I'm
always surprise it finds it ways

00:42:26.344 --> 00:42:33.751
out. Behind maybe more active
proxy style environment. That

00:42:33.751 --> 00:42:37.855
could be interesting. And that
kind comes to the end of my talk

00:42:37.855 --> 00:42:44.929
I need to call some shout outs.
Wade who's not here who is

00:42:44.929 --> 00:42:48.866
frequent lovely dude. Makell who
is here. -- everybody who is

00:42:48.866 --> 00:42:53.304
here and say I'll buy you a beer
I fucking love you guys. Shout

00:42:53.304 --> 00:42:57.775
out to everybody in Australia. I
love you guys. I think I have 2

00:42:57.775 --> 00:43:01.245
minutes for question so if
anybody has a question. I can

00:43:01.245 --> 00:43:04.749
hear you. So the question was.
You're really handsome how do

00:43:04.749 --> 00:43:08.886
you maintain those stunning good
look and how do work and have a

00:43:08.886 --> 00:43:12.690
family and shit and basically is
beer and is -- any other

00:43:12.690 --> 00:43:16.260
questions? Okay so the question
what tool does I use about java

00:43:16.260 --> 00:43:18.329
script. That's a really
interesting question. I did a

00:43:18.329 --> 00:43:21.065
little beef talk and I basically
said most of the java script

00:43:21.065 --> 00:43:24.268
inside of beef is kind of --
these java scripts -- 6 and all

00:43:24.268 --> 00:43:27.472
the -- that's coming out we are
not using a bunch of that. Using

00:43:27.472 --> 00:43:29.974
a lot of technology that people
use. Browser define. Like we

00:43:29.974 --> 00:43:33.177
don't. Like some of the guys --
I D bug it. Like console dot

00:43:33.177 --> 00:43:35.913
logging. And opening up a con
sol log. I'm getting thumbs up.

00:43:35.913 --> 00:43:38.649
I think is one of those things
because mostly people are trying

00:43:38.649 --> 00:43:41.919
to squeeze stuff out and -- the
use XJS is really -- there is

00:43:41.919 --> 00:43:47.925
not been love as much for
project over the last couple of

00:44:06.143 --> 00:44:12.149
years as it probably should be.
Amakeli has been doing a lot of

00:44:33.437 --> 00:44:35.973
-- so -- that's the biggest
thing we over the last couple of

00:44:35.973 --> 00:44:41.979
years. But non -- I frequent
love and hate java script. Ruby

00:45:40.905 --> 00:45:46.911
I'm the same there. And I'm like
-- I computer really good. Fuck

00:45:52.783 --> 00:45:58.789
it, any other questions? No I'm
out. All right guys, thank you

00:46:03.728 --> 00:46:08.599
so much [ APPLAUSE ]

