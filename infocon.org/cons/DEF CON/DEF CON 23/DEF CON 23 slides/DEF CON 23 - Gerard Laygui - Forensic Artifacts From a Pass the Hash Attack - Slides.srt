00:00:00.033 --> 00:00:02.936
All right. So next Gerald is
going to talk about some

00:00:02.936 --> 00:00:04.938
computer forensic stuff. How
many people do forensic stuff

00:00:04.938 --> 00:00:10.043
here? I do. I do. Yeah. And pass
the hash tags, how many people

00:00:10.043 --> 00:00:14.081
have used pass the hash tag
before, raise the other hand.

00:00:14.081 --> 00:00:18.519
Yeah, everybody's got a reason
to listen to this. This is going

00:00:18.519 --> 00:00:22.623
to be pretty interesting and a
bonus, this is a Linux lap top

00:00:22.623 --> 00:00:25.559
that hooked up to the projector
the first time. That's big.

00:00:25.559 --> 00:00:28.562
That's big. Can't believe that.
Let's give Gerald a big hand.

00:00:37.237 --> 00:00:39.406
[Applause] >> Hi. My name is
Gerard Laygui and I am hear to

00:00:39.406 --> 00:00:42.276
talk about Forensic Artifacts
from the Pass the Hash Attack.

00:00:42.276 --> 00:00:44.378
Before I start I would like to
thank the organizer of DefCon

00:00:44.378 --> 00:00:49.549
for allowing me to present this
topic at DefCon 23. Um, standard

00:00:49.549 --> 00:00:52.653
disclaimer, the views and
opinions expressed in this

00:00:52.653 --> 00:00:54.988
presentation are those of the
Author and does not necessarily

00:00:54.988 --> 00:01:00.127
represent the official policy or
position of the company that the

00:01:00.127 --> 00:01:05.365
Author works for, so I have to
read this. I have to read this

00:01:05.365 --> 00:01:10.137
in order to present. So what's a
hash? Basically the hash is any

00:01:10.137 --> 00:01:15.008
function that can be used to map
digital data of arbitrary size

00:01:15.008 --> 00:01:19.880
to digital data fixed size. In
the case of windows a password

00:01:19.880 --> 00:01:25.152
is stored in either a LAN hash
or HTML hash format. Okay. So

00:01:25.152 --> 00:01:28.188
basically you type in your
password. A password is not

00:01:28.188 --> 00:01:32.192
stored on the system in plain
text. What happens is it's

00:01:32.192 --> 00:01:35.796
converted to a hash function. A
hash function goes through it

00:01:35.796 --> 00:01:38.432
and that's what's saved in your
system so basically hash equals

00:01:38.432 --> 00:01:44.037
password. Where the hash is
stored, there are a bunch of

00:01:44.037 --> 00:01:51.745
places where they're stored. And
here they are. I don't have to

00:01:51.745 --> 00:01:55.916
read it for you. Here are some
of the best examples so the best

00:01:55.916 --> 00:02:00.220
examples I have ever heard of
hashes in what they look like in

00:02:00.220 --> 00:02:03.824
the real world would be the
coffee cup. When I was doing any

00:02:03.824 --> 00:02:07.060
CISSP, Sean Harris talked about
this where you get a coffee cup,

00:02:07.060 --> 00:02:10.530
that's your plain text password.
When you drop it, that's the

00:02:10.530 --> 00:02:12.666
mathematical function that it's
going through. When it hits the

00:02:12.666 --> 00:02:16.903
ground, that's your hash. So
when you log into a Windows

00:02:16.903 --> 00:02:20.340
system, it's not comparing your
coffee cup. It's comparing the

00:02:20.340 --> 00:02:23.410
splash on the ground. The
splashes on the ground match,

00:02:23.410 --> 00:02:30.117
you're in. So pass the hash is a
hacking technique that allows an

00:02:30.117 --> 00:02:32.486
attacker to authenticate to a
remote servers service by using

00:02:32.486 --> 00:02:39.559
the underlying NTLM or LAN man
hash in a user's password. The

00:02:39.559 --> 00:02:44.564
associated plain text password.
Like I said before in this case,

00:02:44.564 --> 00:02:48.001
hash is equals to password. You
can get your hands on that hash,

00:02:48.001 --> 00:02:53.173
you really don't need that
person's password. So one of the

00:02:53.173 --> 00:02:56.176
things that I have done in my
demo environment was I did a

00:02:56.176 --> 00:03:01.748
bunch of log-in changes. Out of
the box if you do not change the

00:03:01.748 --> 00:03:05.018
log in, you will not catch
anything. Microsoft even goes as

00:03:05.018 --> 00:03:09.623
far as to tell you that. That's
why I actually included the KP

00:03:09.623 --> 00:03:12.726
article that says this. So
basically they give you, hey,

00:03:12.726 --> 00:03:15.195
you might want to turn this on,
you might want to turn that on.

00:03:15.195 --> 00:03:19.266
Because if you don't, you're not
going to catch anything. So a

00:03:19.266 --> 00:03:21.735
lot of these artifacts that I'm
going to show you guys, some of

00:03:21.735 --> 00:03:27.374
them don't even appear unless
you turn on the log-in. The

00:03:27.374 --> 00:03:31.878
log-in doesn't add that much to
your logs and also because

00:03:31.878 --> 00:03:35.215
you're going to put more stuff
in your logs, you need to

00:03:35.215 --> 00:03:37.217
increase the log file size.
Microsoft also gives

00:03:37.217 --> 00:03:43.223
recommendation on that. Okay. So
in my demo domain, I was going

00:03:48.862 --> 00:03:52.733
to do a live demo but the
problem is the screen size is

00:03:52.733 --> 00:03:58.572
not going to work so the demo, I
will show a video and it's

00:03:58.572 --> 00:04:02.042
Windows 2012 Native Mode Domain.
So the people that are admins

00:04:02.042 --> 00:04:05.645
out there, it's native mode.
That means the LM hash don't

00:04:05.645 --> 00:04:10.150
even use that. That hash is
weak. So this is MTLM. The

00:04:10.150 --> 00:04:13.286
domain name all knows thats
internal. So for this one over

00:04:13.286 --> 00:04:16.490
here, you're going to see the
boxes that I'm going to be

00:04:16.490 --> 00:04:21.828
playing with are Windows 7
client, member server, Win2K 8

00:04:21.828 --> 00:04:26.466
R2 and Win2k 12 Domain
Controller. Theres going to

00:04:26.466 --> 00:04:29.669
be a user, called Im a user.
He basically has access to the

00:04:29.669 --> 00:04:33.073
client box and hes the admin
on the client box and hes

00:04:33.073 --> 00:04:35.842
also an admin for an application
on the member server. This is

00:04:38.044 --> 00:04:40.747
like a lot of people out there,
a lot of corporations, a lot of

00:04:40.747 --> 00:04:45.118
businesses have users that have
to administer applications on

00:04:45.118 --> 00:04:50.190
servers. So this is, you know,
this is what's out there. The

00:04:50.190 --> 00:04:52.959
admin domain admin, even though
he has access to all the stuff

00:04:52.959 --> 00:04:55.128
in the domain, usually you'll
see him on the Win2K, youll

00:04:55.128 --> 00:04:58.098
see him on the domain
controllers and every now and

00:04:58.098 --> 00:05:00.767
then you will see him on the
domain servers on the member

00:05:00.767 --> 00:05:05.338
servers rather. That might look
cool because you're saving and

00:05:05.338 --> 00:05:07.674
you don't have to make a
separate account. But for this

00:05:07.674 --> 00:05:11.144
attack this is what's going to
catch you is your domain admin

00:05:11.144 --> 00:05:15.115
doing work on a member server.
It's that intersection that you

00:05:15.115 --> 00:05:20.554
get caught. Also for people have
that tab in small, medium or

00:05:20.554 --> 00:05:23.924
even large corporations what
happens is they have what's

00:05:23.924 --> 00:05:26.793
called a golden image. On this
golden image what they do is

00:05:26.793 --> 00:05:31.264
they have the same local admin
password so for all the clients

00:05:31.264 --> 00:05:34.868
out there, hey, they have the
same -- we call it the SID 500.

00:05:34.868 --> 00:05:39.639
If you look in Microsoft stuff
for well-known SIDs, anything

00:05:39.639 --> 00:05:43.476
that has the 500 at the end of
it, that's the administrator

00:05:43.476 --> 00:05:46.479
account. So what you could
probably do is that I'm going to

00:05:46.479 --> 00:05:49.349
show it to you later on when I
dump the hashes, you're going to

00:05:49.349 --> 00:05:51.384
see an account that says
administrator but it doesn't

00:05:51.384 --> 00:05:55.355
have 500 on it and there's going
to be another account with my

00:05:55.355 --> 00:05:58.692
name on it that has 500 on it.
The one that has my name on it,

00:05:58.692 --> 00:06:00.894
that's the real local
administrator account that's

00:06:00.894 --> 00:06:04.564
just been renamed. Same thing
goes for the servers also,

00:06:04.564 --> 00:06:08.535
people do golden images and the
reason why I mentioned this is

00:06:08.535 --> 00:06:11.271
when you pass the hash,
Microsoft fixed this last year

00:06:11.271 --> 00:06:17.043
you can't pass the hash using
local accounts except for the

00:06:17.043 --> 00:06:20.814
500 account. That's the reason
why you need to know 500

00:06:20.814 --> 00:06:25.952
accounts so when you talk about
hash-to-hash sequence, what

00:06:25.952 --> 00:06:29.756
happens is usually there is a
compromise that comes to -- that

00:06:29.756 --> 00:06:35.729
hits one of your clients. I use
the social engineering tool

00:06:35.729 --> 00:06:39.432
kits, that I owe Dave a hug and
a beer and a bar just so you

00:06:39.432 --> 00:06:46.206
guys know. Basically if you use
-- so what happens after you do

00:06:46.206 --> 00:06:48.975
a compromise, they're going to
elevate privileges, right?

00:06:48.975 --> 00:06:51.177
They're going to go from the
user -- because usually when you

00:06:51.177 --> 00:06:54.614
do a compromise, the compromise
usually takes place in the scary

00:06:54.614 --> 00:06:57.584
context of the user. The
attacker is then going to

00:06:57.584 --> 00:07:03.790
elevate privileges. Scrape
hashes and do recon at that time

00:07:03.790 --> 00:07:07.560
too. Once he's on the recon,once
hes on the recon hes going

00:07:07.560 --> 00:07:11.398
to try to either remunerate the
domain or find out places where

00:07:11.398 --> 00:07:18.338
he wants to pass the hash to.
Once you pass the hash to the

00:07:18.338 --> 00:07:21.174
next pass you do, what's you
going to do next is the same

00:07:21.174 --> 00:07:24.644
thing that you usually do which
is elevate [indiscernible]

00:07:24.644 --> 00:07:29.949
recon. All these boxes that you
pass through, here are some

00:07:29.949 --> 00:07:33.586
optional stuff, leave back in or
you can leave back doors just in

00:07:33.586 --> 00:07:37.357
case you want to visit that box
again. You can crack hashes.

00:07:37.357 --> 00:07:41.861
Cracking hashes, yeah, they're
kind of cool cracking hashes.

00:07:41.861 --> 00:07:45.565
Once you have done all of these
events, what you're prepping for

00:07:45.565 --> 00:07:49.736
is the final assault. The final
thing you want to do is get a

00:07:49.736 --> 00:07:54.240
domain admin hash. You want to
pass that hash to the domain

00:07:54.240 --> 00:07:56.976
controller. Once you're on the
domain controller what you're

00:07:56.976 --> 00:07:59.813
going to do is actually abstract
active directory. Once youve

00:07:59.813 --> 00:08:03.817
actually abstracted active
directory, you can do some

00:08:03.817 --> 00:08:09.823
really cool attacks such as
golden tickets and skeleton key

00:08:09.823 --> 00:08:12.959
attacks and those are I think
of them as ultimate persistent

00:08:12.959 --> 00:08:19.466
attacks. So what I'm going to do
is I'm going to try to pull out

00:08:19.466 --> 00:08:25.472
my video and I'm hoping that
it's going to show... let's see.

00:08:33.580 --> 00:08:39.819
Trying to put full screen so
maybe you guys can see it. Is it

00:08:39.819 --> 00:08:43.623
not working? Can you guys see
the words that I'm typing out

00:08:43.623 --> 00:08:49.262
there? I mean, on the video or
-- no? Or is it good?

00:08:51.831 --> 00:08:56.970
[Inaudible] Okay. So what I'm
going to try to do is I'm going

00:08:56.970 --> 00:08:58.972
to try to play it as fast as I
can. So the demo on this thing

00:08:58.972 --> 00:09:03.810
because the resolution is not as
good as it should be, full

00:09:03.810 --> 00:09:10.383
screen it? Okay. No. Thats,
no that was full screen. [

00:09:10.383 --> 00:09:17.390
LAUGHTER ] >> Okay. That's about
as full as it's going to get for

00:09:17.390 --> 00:09:20.460
me. Sorry, guys. So basically
what I have done is already

00:09:20.460 --> 00:09:24.397
compromised the box. I go in
through my back door. What my

00:09:24.397 --> 00:09:29.002
back door does is it's kind of
like a sticky key thing or a

00:09:29.002 --> 00:09:33.740
variation of it so as you can
tell I already feed to the box

00:09:33.740 --> 00:09:36.342
and I get a shell. Every time I
already feed through the box,

00:09:36.342 --> 00:09:40.213
using certain key strokes I get
a shell. And what I'm doing I'm

00:09:40.213 --> 00:09:44.884
going to try to extract the
hashes, okay. So when I try to

00:09:44.884 --> 00:09:48.221
extract the hashes, I have a
script on the box that I pre-put

00:09:48.221 --> 00:09:52.826
on there that I put on the
boxes. I'll have these videos by

00:09:52.826 --> 00:09:55.495
the way so you guys can see it
and I'll post it to my friend's

00:09:55.495 --> 00:09:58.865
website at the end of this so
you guys can actually see it and

00:09:58.865 --> 00:10:05.238
I do narrate on it what I'm
doing. Sorry about that. So what

00:10:05.238 --> 00:10:09.209
I do is I run my script. Dump
the hashes. I'm going to notice

00:10:09.209 --> 00:10:13.213
that hey, I don't have the
domain admin hash. Okay. So what

00:10:13.213 --> 00:10:16.282
I do is I say let's put the
domain admin hash on my box and

00:10:16.282 --> 00:10:22.288
I log in as the domain admin on
one of these boxes. So once I

00:10:28.561 --> 00:10:32.031
log in as the domain admin,
what's going to happen is I'm

00:10:32.031 --> 00:10:35.134
going to go back to my counting
box and I'm going to scrape the

00:10:35.134 --> 00:10:39.072
hash again and once I scrape the
hash, it's going to show that

00:10:39.072 --> 00:10:42.575
it's there. What you should have
been seeing is that 500 thing.

00:10:42.575 --> 00:10:49.315
Unfortunately I can't show it to
you. So basically when I run the

00:10:49.315 --> 00:10:53.219
hash scraper again, this time
it's going to show up and I'm

00:10:53.219 --> 00:10:59.225
going to grab that hash. So I
really apologize that you guys

00:11:06.933 --> 00:11:09.969
can't see it. But basically it's
going to grab -- it's going to

00:11:09.969 --> 00:11:13.139
show the hash over there. At
that point, I'm going to grab

00:11:13.139 --> 00:11:19.145
the hash and then once I grab
that hash. Let me stop this.

00:11:26.853 --> 00:11:31.991
There is a script from Core
Impact, has a python script so

00:11:31.991 --> 00:11:37.497
you can use. So what I do is I
got the hashes and hopefully you

00:11:37.497 --> 00:11:40.767
guys can see these hashes a
little bit clearer. What Im

00:11:40.767 --> 00:11:45.138
going to do is Im going to
run a tool on core impact and

00:11:45.138 --> 00:11:51.778
what it's going to do is it's
going to hash, that hash all the

00:11:51.778 --> 00:11:56.416
domain admin account to the
domain controller. Once it does

00:11:56.416 --> 00:12:00.587
that, what's going to happen is
that, you know, I'll be able to

00:12:00.587 --> 00:12:04.324
extract the active directory
information database. The way

00:12:04.324 --> 00:12:07.460
that this particular script does
it is that it goes through the

00:12:07.460 --> 00:12:13.066
dialing channel copy and once
again, we can't see nothing. I'm

00:12:13.066 --> 00:12:19.439
so sorry. One of the things that
I was going to talk about if you

00:12:19.439 --> 00:12:22.408
listen to the video, I'm going
to talk about something called

00:12:22.408 --> 00:12:29.449
the care-V TTG account and it
creates all the curveers tickets

00:12:29.449 --> 00:12:32.752
so once something gets on top of
your domain controller, they can

00:12:32.752 --> 00:12:35.888
actually, once they have this
hash, they can make golden

00:12:35.888 --> 00:12:38.524
tickets where they can
impersonate any particular --

00:12:38.524 --> 00:12:41.894
any user in your network and you
will never know anything about

00:12:41.894 --> 00:12:45.064
it. So basically once the
attacker gets to the domain

00:12:45.064 --> 00:12:48.701
controller, it's over. It's
pretty much over. Your domain is

00:12:48.701 --> 00:12:53.373
unreliable. Microsoft won't come
out and say it. But you know you

00:12:53.373 --> 00:12:58.311
can do some things, but there's
other attacks that you can do so

00:12:58.311 --> 00:13:01.047
that you can maintain
persistence in the domain once

00:13:01.047 --> 00:13:04.817
you get to the domain
controller. I'm just going to

00:13:04.817 --> 00:13:06.919
skip these videos already
because I can't see nothing.

00:13:06.919 --> 00:13:12.925
Okay. So...okay, so at this
point I'm just going to start

00:13:19.866 --> 00:13:23.903
talking about forensic evidence.
So there's two types of forensic

00:13:23.903 --> 00:13:27.140
evidence out there: Volatile and
nonvolatile evidence. Volatile

00:13:27.140 --> 00:13:32.612
stuff is when you turn off the
PC, it's gone forever. When you

00:13:32.612 --> 00:13:37.250
go to a PC or a server that
you're going to grab evidence

00:13:37.250 --> 00:13:40.153
from at the very least, these
are some of the very least

00:13:40.153 --> 00:13:43.489
things that I usually grab. The
best thing is grabbing the Ram

00:13:43.489 --> 00:13:46.893
view or Ram cap, hibernating the
box so you get a hiber fill

00:13:46.893 --> 00:13:51.597
[indiscernible] if it's a
VM-ware image, you can suspend

00:13:51.597 --> 00:13:57.837
the VM and use the VM file for
it. For nonvolatile stuff, at

00:13:57.837 --> 00:14:02.241
the very least you can log and
retrace some info, best get a

00:14:02.241 --> 00:14:05.745
disk image. That's one of the
best things to grab for

00:14:05.745 --> 00:14:11.751
nonvolatile stuff. For VM ware,
just grab the DMVK. For the

00:14:15.321 --> 00:14:19.726
analysis tools for volatile
stuff, I've used the FD pro and

00:14:19.726 --> 00:14:22.829
mandate [indiscernible] to dump
memory. There is a bunch of

00:14:22.829 --> 00:14:27.200
tools out there. If you look at
memory dumpers. To analyze

00:14:27.200 --> 00:14:33.906
memory, volatility. Cool. It's
free. It's great. It's the right

00:14:33.906 --> 00:14:38.077
size to actually do a lot of --
most of the analysis for most of

00:14:38.077 --> 00:14:40.680
the stuff that you need.
Volatility is great. If you need

00:14:40.680 --> 00:14:46.786
to go deeper HP [indiscernible]
Pro is a very expensive program.

00:14:46.786 --> 00:14:50.556
But most of the work you can do,
most of the IOCs you can find,

00:14:50.556 --> 00:14:53.226
you can find it with volatility
and it's free. So

00:14:53.226 --> 00:15:00.733
$10 --> 000...free. Okay. So
creating disk images a lot of

00:15:00.733 --> 00:15:05.872
times a lot of people will just
pull out the disk. You can use

00:15:05.872 --> 00:15:10.009
Linux to just, you know use DET
to grab the image of it. Really

00:15:10.009 --> 00:15:12.845
nice or you can use N case or
FTK Editor, those things are

00:15:12.845 --> 00:15:17.250
nice also. To analyze it, you
know [indiscernbile] autopsy,

00:15:17.250 --> 00:15:20.186
locked time. I kind of like log
to time line. It's great. Puts

00:15:20.186 --> 00:15:24.724
everything together for you. N
case and FTK, those are pricey

00:15:24.724 --> 00:15:31.164
things again. What I'm going to
start doing is start showing you

00:15:31.164 --> 00:15:34.567
guys what kind of pieces of
evidence you're going to find as

00:15:34.567 --> 00:15:37.170
you go through those stages that
I talked about like the

00:15:37.170 --> 00:15:40.273
compromise stage and all those
other stages so for this one,

00:15:40.273 --> 00:15:43.643
the compromise stages, Windows
security event log, processes a

00:15:43.643 --> 00:15:46.679
lot of success. If you guys turn
this on, this is what you'll

00:15:46.679 --> 00:15:54.187
see. Any time somebody does
something, you'll see a --

00:15:54.187 --> 00:16:00.259
you'll see a process creation
followed by who, created that

00:16:00.259 --> 00:16:04.897
process and what's the image of
it right here. What was the name

00:16:04.897 --> 00:16:08.701
of the file that was executed?
This is really cool, from this

00:16:08.701 --> 00:16:11.671
one over here, this is when I
used Kali I believe to create a

00:16:11.671 --> 00:16:13.673
you know, to create and
interpreter shell. That's what

00:16:13.673 --> 00:16:19.312
it looks like. You know, left
this artifact out there. For the

00:16:19.312 --> 00:16:23.149
compromise part II, what you can
do is look through the disk for

00:16:23.149 --> 00:16:26.519
something called the pre-fetch.
Every time a computer program

00:16:26.519 --> 00:16:30.289
runs, a disk artifact is created
in the Pre-fetch for client

00:16:30.289 --> 00:16:35.127
systems. For service systems,
they don't use pre-fetch. If you

00:16:35.127 --> 00:16:39.465
get an SSD on a client system,
there will be no pre-fetch. I

00:16:39.465 --> 00:16:41.467
mean, there will be the
pre-fetch directory, but there

00:16:41.467 --> 00:16:45.605
will be no artifacts. Okay. For
this one over here, for this

00:16:45.605 --> 00:16:48.474
example, this is what it looks
like in N case for me when I

00:16:48.474 --> 00:16:53.813
look at it. You can, here is the
base entires over there on the

00:16:53.813 --> 00:16:57.183
timestamps. If you look on the
left side, youll see that

00:16:57.183 --> 00:17:02.021
hey, ping was run along with
PowerShell. That might be normal

00:17:02.021 --> 00:17:05.191
for some systems but if you're
talking about your admin systems

00:17:05.191 --> 00:17:07.193
running these program, that's
bad. Another thing that you can

00:17:07.193 --> 00:17:13.199
talk about, so like if you don't
have the pre-fetch, how can you

00:17:17.069 --> 00:17:20.940
prove that something ran on your
system. SHIM cache and it's

00:17:20.940 --> 00:17:23.976
called the application
compatibility cache but the

00:17:23.976 --> 00:17:26.546
nickname for the SIM cache --
the reason why it's nicknamed

00:17:26.546 --> 00:17:30.349
the SHIM Cache is because of
what it does and when a program

00:17:30.349 --> 00:17:33.786
executes, when you want to
execute a program, the operating

00:17:33.786 --> 00:17:38.391
systems takes a look at it and
tries to shim it to work with

00:17:38.391 --> 00:17:41.627
the current operating system.
Now, the shimming process is

00:17:41.627 --> 00:17:46.265
saved in memory, okay. It's
usually saved in memory. Once

00:17:46.265 --> 00:17:51.070
the system powers down
gracefully, notice the word

00:17:51.070 --> 00:17:57.076
gracefully, that part of memory
is purged to disk, to the

00:17:57.076 --> 00:18:01.314
registry. Okay. So what you can
do is you can parse it using

00:18:01.314 --> 00:18:04.283
volatility if it's still in
memory and if the system has

00:18:04.283 --> 00:18:07.119
been shut down already, you can
use something like called

00:18:07.119 --> 00:18:09.989
Regreper. Regreper is something
with a bunch of pro script out

00:18:09.989 --> 00:18:15.094
there. It's free. Free. Free is
good. And this is what it looks

00:18:15.094 --> 00:18:19.665
like in Regreper over here. It's
pretty cool because this one

00:18:19.665 --> 00:18:25.237
over here it was from -- this
was also from, oh maybe it was

00:18:25.237 --> 00:18:28.708
another slide. On this one over
here you can see that the

00:18:28.708 --> 00:18:34.780
program -- this one tells you
that this executable, this right

00:18:34.780 --> 00:18:40.486
here, this time was executed on
the system. So that's one of

00:18:40.486 --> 00:18:43.322
those things I give you proof,
that hey, this actually ran on

00:18:43.322 --> 00:18:50.429
your system. So another thing
that you can use is volatility

00:18:50.429 --> 00:18:52.999
is this thing called the Map I
command. Its a pretty cool

00:18:52.999 --> 00:18:57.269
program. Pretty cool --
volatility is that it goes

00:18:57.269 --> 00:19:03.209
through looking for executables.
Okay so the MZ header means that

00:19:03.209 --> 00:19:08.347
for people that dont know,
means that it's an executable so

00:19:08.347 --> 00:19:13.919
what we have here is a program
with something injected into it,

00:19:13.919 --> 00:19:16.722
you know, so the first part it's
kind of -- it's already Hokey to

00:19:16.722 --> 00:19:19.659
begin with and the second part
that inside this hokey program

00:19:19.659 --> 00:19:22.328
thats executable, there is
another program nested within

00:19:22.328 --> 00:19:26.265
it. So these things are pretty
cool because a lot of times if

00:19:26.265 --> 00:19:31.003
you use certain programs you'll
find that the DL host or SPC

00:19:31.003 --> 00:19:34.340
host you'll see so many process
hallow and put a program in

00:19:34.340 --> 00:19:41.313
there, you'll see that MZ
header. Back doors, a lot of

00:19:41.313 --> 00:19:45.251
times what I have seen so for
back doors some people, what

00:19:45.251 --> 00:19:48.387
they -- you know, they don't
want to do anything special,

00:19:48.387 --> 00:19:50.890
dont want to put any malware in
the systems, so what do you do?

00:19:50.890 --> 00:19:54.660
Make a user on the system.
That's kind of cool, but one of

00:19:54.660 --> 00:19:57.029
the things is that you can make
a user and just get into the

00:19:57.029 --> 00:20:00.599
system later on. Make a local
user. Making domains is hard.

00:20:00.599 --> 00:20:02.802
Making a local user is easy
because you have already

00:20:02.802 --> 00:20:06.505
compromised the system. What
this log entry will tell you is,

00:20:06.505 --> 00:20:12.778
hey, which user created the back
door and gives you the time and

00:20:12.778 --> 00:20:15.714
date stamp so that's pretty cool
so a lot of people -- some

00:20:15.714 --> 00:20:21.721
people will do this just to get
around security. Another thing

00:20:25.991 --> 00:20:31.297
that a lot of malware tends to
do is put bug keys out there.

00:20:31.297 --> 00:20:34.333
What the run keys will do is
that -- well, when the system

00:20:34.333 --> 00:20:37.736
starts up, it will execute their
malware to do whatever it needs

00:20:37.736 --> 00:20:41.907
to do like call home or open at
port or something, you know.

00:20:41.907 --> 00:20:46.312
Another thing that happens also
is that a lot of people like to

00:20:46.312 --> 00:20:49.915
install services on the system
so that when the services are on

00:20:49.915 --> 00:20:53.252
the system, what we can do is
use Redgreper to find out what

00:20:53.252 --> 00:20:58.090
is the last time these services
were created and this way we can

00:20:58.090 --> 00:21:01.827
find any of the back doors that
were created as the attacker is

00:21:01.827 --> 00:21:04.563
passing their hash through. A
lot of times you can't pass the

00:21:04.563 --> 00:21:08.300
hash in one day. That's why
they're called ADP. It takes

00:21:08.300 --> 00:21:11.537
several months to just keep
winding and winding through your

00:21:11.537 --> 00:21:19.178
network. So when I talk about
privilege escalation, we're

00:21:19.178 --> 00:21:22.281
talking about going all the way
to the local system account. So

00:21:22.281 --> 00:21:25.651
usually when you pop a box using
a java exploit or if a user

00:21:25.651 --> 00:21:30.055
clicks on, hey, UPS bill has
arrived by ACP, you know,

00:21:30.055 --> 00:21:33.959
usually they're users. Youre
in the user context, so what you

00:21:33.959 --> 00:21:38.164
have to do is sometimes have to
escalate to the administrator

00:21:38.164 --> 00:21:41.066
account and from the
administrator account you can

00:21:41.066 --> 00:21:43.068
escalate all the way through the
local system account. Once

00:21:43.068 --> 00:21:46.038
you're in the local system
account, you'll be able to

00:21:46.038 --> 00:21:48.474
scrape hashes. You can't be
administrator. You got to be the

00:21:48.474 --> 00:21:55.748
system account to scrape those
hashes. Because of that -- oh,

00:21:55.748 --> 00:21:59.885
by the way, somebody wants to
ask me how do do it in Kali so I

00:21:59.885 --> 00:22:03.989
actually put this in the slide
deck so if anybody wants to,

00:22:03.989 --> 00:22:08.327
basically you have to pop the
box first. Once you're a user,

00:22:08.327 --> 00:22:10.863
you can do these steps to
escalate yourself all the way up

00:22:10.863 --> 00:22:17.770
the system. So for privilege
escalation, this is what it

00:22:17.770 --> 00:22:22.107
looks like when you privilege
escalate on a system. This event

00:22:22.107 --> 00:22:26.245
ID by itself is not bad. You
know, basically when you

00:22:26.245 --> 00:22:32.151
privilege escalate, you'll get a
46-11 and a consent UI and you

00:22:32.151 --> 00:22:36.388
know you get this little detail
thing over here. By itself it's

00:22:36.388 --> 00:22:40.693
not bad. When you patch your
systems, you'll see this. Now

00:22:40.693 --> 00:22:45.297
the trick is looking at it, you
say hey, I got this, but where

00:22:45.297 --> 00:22:49.068
is my patching? And that's when
you start looking for those

00:22:49.068 --> 00:22:53.606
artifacts to find out, hey, why
did the consent IU get popped so

00:22:53.606 --> 00:22:57.009
those are the things like so for
forensically, there's not one

00:22:57.009 --> 00:22:59.945
thing that says you see this
thing, it's bad. It doesn't work

00:22:59.945 --> 00:23:05.951
that way. You have to look at it
and check the context of it. On

00:23:08.687 --> 00:23:10.689
this one over here where I'm
scraping the hashes is used

00:23:10.689 --> 00:23:13.492
something called the Windows
Credential Editor. So a lot of

00:23:13.492 --> 00:23:17.696
people are contesters, they like
to use other peoples' tools but

00:23:17.696 --> 00:23:21.467
they don't understand what
happens behind the scenes. So if

00:23:21.467 --> 00:23:25.804
you have advanced log-in, what
is is that certain artifacts get

00:23:25.804 --> 00:23:31.710
left in the event log. On this
one over here whenever you run

00:23:31.710 --> 00:23:34.713
the Windows credential Editor,
something gets left in the

00:23:34.713 --> 00:23:41.320
system event log an event ID
70-45 and when you do that

00:23:41.320 --> 00:23:44.390
itll say hey, servers got
installed, only in the context

00:23:44.390 --> 00:23:48.961
of the local system. And it will
also tell you what program is it

00:23:48.961 --> 00:23:54.600
pointing at to run. So just
remember that somebody's running

00:23:54.600 --> 00:23:58.504
like off-the-shelf malware,like
Windows Credential Editor,

00:23:58.504 --> 00:24:02.875
you'll see these type of
artifacts can populate into your

00:24:02.875 --> 00:24:05.344
event log. But also just
remember though in order to see

00:24:05.344 --> 00:24:08.314
this you have to turn up the
log-in from the default. If you

00:24:08.314 --> 00:24:12.251
don't turn up the log-in from
the default, you will never see

00:24:12.251 --> 00:24:18.257
this event ID. Ooh... >> Keep
talking. >> Okay. Okay. I will

00:24:23.462 --> 00:24:29.568
not break the tradition. So once
you run the Windows credentials

00:24:29.568 --> 00:24:35.708
editor, you will see the service
key installed. The service

00:24:35.708 --> 00:24:37.710
starting and the service
stopping. So what they're doing

00:24:37.710 --> 00:24:39.712
is scraping the hashes. If you
look at it though they're doing

00:24:39.712 --> 00:24:43.082
it as the system account. So
when they do it as the system

00:24:43.082 --> 00:24:48.187
account what happens is that
like I said before you have to

00:24:48.187 --> 00:24:54.193
scrape hashes as system. Yes.
Meme cats. One of my favorite

00:24:59.365 --> 00:25:06.739
tools. And Im supposed to be
a White Hat. But Meme Cats is a

00:25:06.739 --> 00:25:09.808
really cool tool. Anyone whos
every used Meme Cats will know

00:25:09.808 --> 00:25:13.412
you can scrape cases with it
right? Like over here, when I

00:25:13.412 --> 00:25:18.150
use meme cats, I got the unknown
user, windows and his hash, NTL

00:25:18.150 --> 00:25:23.689
hash -- >> Now it's time to stop
talking. >> Okay. >> Give me

00:25:23.689 --> 00:25:27.960
that. All right. Who knows
what's going on here? [CHEERS].

00:25:33.232 --> 00:25:37.436
>> So we understand that it is
your first time speaking at

00:25:37.436 --> 00:25:40.873
DEFCON. >>Yes, it is. >>Well,
congratulations. It's very tough

00:25:40.873 --> 00:25:43.842
to get in here. So how about a
round of applause for the new

00:25:43.842 --> 00:25:49.848
speaker. [Applause]. [CHEERS].
>> Now -- oh, I'm sorry. [

00:25:57.322 --> 00:26:05.130
LAUGHTER ] >> Really, wow... no,
not yet. >> Okay. Go ahead. >>

00:26:05.130 --> 00:26:08.867
Okay. So with meme cats, it's a
pretty cool tool. When you use

00:26:08.867 --> 00:26:13.038
volatility one of the key things
you can do is use the console

00:26:13.038 --> 00:26:15.641
command. It's just like right
behind the typing, okay. >> You

00:26:15.641 --> 00:26:21.413
just ran on like nothing
happened. That's just amazing.

00:26:21.413 --> 00:26:27.419
He'll be coming back I'm pretty
sure. [Applause]. >> Okay. So

00:26:32.791 --> 00:26:35.527
these tools by the way, you can
find them, if you just, you

00:26:35.527 --> 00:26:40.065
know, if you just Google it, you
can find it. You will, however,

00:26:40.065 --> 00:26:43.302
need to turn off the malware
prevention plan on your Google

00:26:43.302 --> 00:26:46.972
Chrome, or Firefox, they will
not let you download this thing

00:26:46.972 --> 00:26:50.542
for some odd reason. [Laughter]
One of the cool things about

00:26:50.542 --> 00:26:55.214
this is like I said though is
that it will scrape, it will go

00:26:55.214 --> 00:26:58.517
through memory, scrape stuff for
you. One of the additional

00:26:58.517 --> 00:27:01.053
things that I have seen meme
cats do that is really awesome,

00:27:01.053 --> 00:27:04.423
is it will scrape something
called the web digest process or

00:27:04.423 --> 00:27:06.458
the W digest process. The W
digest process, if youll

00:27:06.458 --> 00:27:11.396
notice here, I got that user.
Here is my user. Here is my

00:27:11.396 --> 00:27:16.702
domain. But look, there's my
password. It's not crypted. So

00:27:16.702 --> 00:27:23.942
it's going to -- you know, meme
cats has the ability to scrape

00:27:23.942 --> 00:27:28.580
plain text passwords from your
system. So if you ever see meme

00:27:28.580 --> 00:27:34.586
cats on your system...ahhh.
Okay. And please don't on the

00:27:38.257 --> 00:27:41.393
console command, when you want
meme cat, it goes into its own

00:27:41.393 --> 00:27:45.964
shell. Most of the console
commands actually shows you

00:27:45.964 --> 00:27:49.434
what's going on inside that
shell. So that's one of the cool

00:27:49.434 --> 00:27:53.539
things about the console
command. Remember when I said

00:27:53.539 --> 00:27:57.342
about one of the optional
activities you guys can do is

00:27:57.342 --> 00:28:02.447
crack hashes. Many, many years
ago I used John the Ripper,

00:28:02.447 --> 00:28:07.986
which is a CPU cracker and it
took one weekend to crack a

00:28:07.986 --> 00:28:12.457
nine-word cracker password which
was a simple one too. On the

00:28:12.457 --> 00:28:17.296
weekend I was like, oh, my God,
that's too long and then I

00:28:17.296 --> 00:28:21.600
discovered something called OCL
hash cat. OCL hash cat. Here is

00:28:21.600 --> 00:28:25.003
the numbers off their box. If
you're using a Bunto 424 box,

00:28:25.003 --> 00:28:27.005
using 8 [indiscernible]. 8 of
those [indiscernible], each one

00:28:27.005 --> 00:28:32.544
is about 500 bucks so if you
think about it, for about 10 to

00:28:32.544 --> 00:28:38.817
20 grand, you can hash at 183
trillion times hash per second.

00:28:38.817 --> 00:28:44.957
That's Awesome. Put it into
context, 8 character passwords,

00:28:44.957 --> 00:28:50.862
nine hours with just one box. If
you have a cluster of these

00:28:50.862 --> 00:28:54.433
boxes, do what you call a meet
in the middle attack, 9

00:28:54.433 --> 00:28:57.469
character, 8 character password
is really quick. There's also

00:28:57.469 --> 00:28:59.571
rainbow tables out there for
these 8-character passwords. So

00:28:59.571 --> 00:29:01.573
scale it up to what a nation
state could do and how fast they

00:29:01.573 --> 00:29:08.580
can crack something and you will
expect to see that this is kind

00:29:08.580 --> 00:29:14.586
of bad. [Laughter] Okay. So on
this one over here I use the

00:29:17.889 --> 00:29:22.694
consoles and command scan again
to how I recon the boxes. So

00:29:22.694 --> 00:29:28.133
when I did a read out, as soon
as I compromised the box, what I

00:29:28.133 --> 00:29:32.070
did is I looked at certain
artifacts on the box, you know,

00:29:32.070 --> 00:29:34.840
just because you have somebody's
hash, you need to know hey,

00:29:34.840 --> 00:29:38.343
where can I pass this guy's hash
to, right? Some of the things I

00:29:38.343 --> 00:29:42.948
looked at is something called a
default RDP. Default RDP states

00:29:42.948 --> 00:29:46.218
the last place you actually
already RDP to. Why is that

00:29:46.218 --> 00:29:49.354
important? Well, think about it
this way, if you can RDP into a

00:29:49.354 --> 00:29:53.692
box, more than likely you are
the administrator of that server

00:29:53.692 --> 00:29:58.096
and that's why things that I do
as a -- somebody that's doing

00:29:58.096 --> 00:30:02.834
recon. Another thing I look at
is I look at shares. If I see

00:30:02.834 --> 00:30:08.340
you mapped to a dollar sign
share, you're probably admin on

00:30:08.340 --> 00:30:10.876
that box. So that's a box that I
probably want to pass my hash

00:30:10.876 --> 00:30:16.415
to. Another thing that I usually
do is, you know, I enumerate the

00:30:16.415 --> 00:30:19.151
domain and I try to find out
where every single domain

00:30:19.151 --> 00:30:21.753
control is and in this
environment there's only one

00:30:21.753 --> 00:30:25.991
domain controller. So it shows
up over here and it tells me

00:30:25.991 --> 00:30:29.194
it's the PDC immolator. So
there's five boxes on here,

00:30:29.194 --> 00:30:32.531
there's five roles that windows
administrators know about. It's

00:30:32.531 --> 00:30:35.567
called the Fismo. Fismo is a
single master of the operation

00:30:35.567 --> 00:30:40.839
roles. One of them is the PDC
immolator. If you going to do a

00:30:40.839 --> 00:30:44.276
skeleton key attack, PDC
immolator is the best place to

00:30:44.276 --> 00:30:47.746
do it from because what the
skeleton key attack does is

00:30:47.746 --> 00:30:51.783
basically everybody has two
passwords. Their own and the

00:30:51.783 --> 00:30:56.054
password that I set and this is
the best one -- usually once you

00:30:56.054 --> 00:30:58.390
do a skeleton key attack, you
get all these replication

00:30:58.390 --> 00:31:02.294
issues. But if you do it from
the PDC immolator, less chance

00:31:02.294 --> 00:31:08.300
of that. And one of my friends,
I won't say where he's from, he

00:31:11.036 --> 00:31:14.606
actually showed me an APT some
of the commands that the APTs

00:31:14.606 --> 00:31:19.344
used to do. This kind of data is
2011 time stamped on the side.

00:31:19.344 --> 00:31:23.181
But if you look at the commands
that they're doing, what the APT

00:31:23.181 --> 00:31:27.786
is doing is they are looking at
the domain, enumerating the

00:31:27.786 --> 00:31:31.089
domain and finding out who the
domain admins are. You want to

00:31:31.089 --> 00:31:33.925
find those out, you want to find
out where every controller is

00:31:33.925 --> 00:31:37.629
and every computer out there and
every user out there because if

00:31:37.629 --> 00:31:40.565
you can find all the users and
all that, you can find which

00:31:40.565 --> 00:31:44.603
people, you know, which command
are admins and stuff like that.

00:31:44.603 --> 00:31:49.207
So this is some of the things
that people do for recon. These

00:31:49.207 --> 00:31:54.246
commands by the way do not work
on a Windows 7 box anymore. But

00:31:54.246 --> 00:31:57.449
you can still PowerShell and get
the same things from -- you can

00:31:57.449 --> 00:32:01.019
still PowerShell on a Windows 7
box and get all this information

00:32:01.019 --> 00:32:07.759
here that this thing was doing,
okay. Lateral movement...so some

00:32:07.759 --> 00:32:10.295
of the things that we do, once
somebody has compromised the

00:32:10.295 --> 00:32:14.933
boxes and passes hashes, they
look at the user so that's the

00:32:14.933 --> 00:32:18.837
bad thing. Once they grab your
hash, they look like you. They

00:32:18.837 --> 00:32:22.441
are you for all intensive
purposes so you, who knows, you

00:32:22.441 --> 00:32:26.278
could get busted for doing
something you never did.

00:32:26.278 --> 00:32:29.080
Somebody can impersonate you.
Once they have your hash, they

00:32:29.080 --> 00:32:31.116
can do whatever you can do. They
can read your e-mail for all

00:32:31.116 --> 00:32:36.588
they care. If you look at this
one over here, ID 2624 log-on

00:32:36.588 --> 00:32:41.059
when you log into a system, you
get these type log-on types.

00:32:41.059 --> 00:32:44.963
Type 2 is interactive. 3 is
network log-in. Here is a lot of

00:32:44.963 --> 00:32:47.599
things that a lot of people
don't know is on the domain

00:32:47.599 --> 00:32:51.736
controllers it makes it really
hard because when every time you

00:32:51.736 --> 00:32:56.875
log into the domain controller
what happens is that you have to

00:32:56.875 --> 00:33:00.912
get into the script directory to
run log-in scripts. That results

00:33:00.912 --> 00:33:05.584
in a type 3 log-in on the domain
controller so it makes it really

00:33:05.584 --> 00:33:09.721
hard if you're trying to trace
if it's the person logging in or

00:33:09.721 --> 00:33:15.293
if it's a real attacker doing
stuff on your domain controller.

00:33:15.293 --> 00:33:18.964
Also another thing too is that
if you RDP into the box, that's

00:33:18.964 --> 00:33:22.400
a type 10. So a lot of people
like to do RDP pivots once you

00:33:22.400 --> 00:33:26.304
crack hashes. RDP pivoting is
the way to go because if you

00:33:26.304 --> 00:33:32.377
think about it, your IDS is RDP.
That's normal, thats normal

00:33:32.377 --> 00:33:35.213
background stuff so a lot of
times a lot of people what

00:33:35.213 --> 00:33:38.316
Ive seen a lot of attackers,
what Ive seen them so is if

00:33:38.316 --> 00:33:42.921
they can get, if they can crack
your credentials and pass -- you

00:33:42.921 --> 00:33:45.123
know, they don't need to pass
hash, they can just pivot using

00:33:45.123 --> 00:33:51.363
RDP. One of the things I am
going to talk about is on this

00:33:51.363 --> 00:33:55.033
one over here it will tell you
which workstation you came in

00:33:55.033 --> 00:33:59.237
from. So and you know what IP.
So that's how you can track,

00:33:59.237 --> 00:34:07.178
thats how you can backtrack
their lateral movement. Okay.

00:34:07.178 --> 00:34:11.716
Other logs in Microsoft land.
Usually people think of logs as

00:34:11.716 --> 00:34:18.089
security application and system
logs. Microsoft introduced a

00:34:18.089 --> 00:34:23.728
bunch more logs and some of
these logs, I have it listed

00:34:23.728 --> 00:34:27.532
over here, but what they list is
when you RDP into a box, they'll

00:34:27.532 --> 00:34:31.670
tell you who the user is and get
the important part right here,

00:34:31.670 --> 00:34:35.307
they'll tell you that IP address
they came from so that's another

00:34:35.307 --> 00:34:37.375
way you can trace when
somebody's pivoting into your

00:34:37.375 --> 00:34:42.714
network. Another thing too is
that with the RDP pivots, they

00:34:42.714 --> 00:34:46.217
tend to leave artifacts behind.
So if you got a person that's

00:34:46.217 --> 00:34:50.689
never ever used RDP before, when
they use RDP and default their

00:34:50.689 --> 00:34:53.725
RDP file, the RDP gets created
and in there it lists down the

00:34:53.725 --> 00:34:58.697
last IP that they RDPed to. So
in that case, you know, you can

00:34:58.697 --> 00:35:00.699
find out where they have been
to. You can also look at

00:35:00.699 --> 00:35:03.168
something called shell bags
which I won't get into it. What

00:35:03.168 --> 00:35:07.105
the shell bags can do is that
they'll tell you -- you ever

00:35:07.105 --> 00:35:10.442
notice when you have RDP, you
know, you keep RDPing, all these

00:35:10.442 --> 00:35:14.579
short cuts get created? Well,
same thing happens to an

00:35:14.579 --> 00:35:18.116
attacker that's using your box.
All these shells are created so

00:35:18.116 --> 00:35:23.655
you can find out where theyve
been and lastly what we'll talk

00:35:23.655 --> 00:35:26.491
about is something called the
BMC cache. A lot of people don't

00:35:26.491 --> 00:35:31.029
know about this. But when you
RDP to a box, one of the things

00:35:31.029 --> 00:35:33.932
that it does is it stores bit
map images so it doesn't have to

00:35:33.932 --> 00:35:38.570
send it all over again. So what
we can do is we can parse that

00:35:38.570 --> 00:35:42.307
file and take a look at that
picture of what the attacker was

00:35:42.307 --> 00:35:46.478
looking at. So I grabbed one of
these pictures over here from

00:35:46.478 --> 00:35:49.214
something that I have seen
before. And you can tell over

00:35:49.214 --> 00:35:53.952
here, that this is prime for an
attacker, right? Remember the

00:35:53.952 --> 00:35:55.954
thing I said about the dollar
sign shares -- the dollar sign

00:35:55.954 --> 00:36:01.393
shares? Next thing is if I saw
this picture on a box that was

00:36:01.393 --> 00:36:04.829
compromised, I'm going to look
at those boxes because they're

00:36:04.829 --> 00:36:07.699
most likely been compromised
also. The attacker, you know, we

00:36:07.699 --> 00:36:09.701
have got pictures here that
shows the attacker might have

00:36:09.701 --> 00:36:13.371
been there. Another thing too is
that you see the see user

00:36:13.371 --> 00:36:17.075
directory over there? If they
switched user context, we could

00:36:17.075 --> 00:36:22.347
catch him and if you look at the
bottom, that's somebody's inbox

00:36:22.347 --> 00:36:25.250
in Microsoft Outlook so that
means that the attacker was

00:36:25.250 --> 00:36:32.590
reading that guy's e-mail. So in
closing, these are some of the

00:36:32.590 --> 00:36:38.229
artifacts that you can find when
you pass the hash. You know,

00:36:38.229 --> 00:36:40.598
hopefully if there's one thing
that you want to take away from

00:36:40.598 --> 00:36:44.235
this is turn up logging. If you
leave it at the default,

00:36:44.235 --> 00:36:49.808
youll never see if somebody's
going through your network. How

00:36:49.808 --> 00:36:55.447
much time do I have left seven
minutes? Okay. Any questions?

00:37:10.762 --> 00:37:12.764
[Inaudible question from
audience] No. Then pretty much

00:37:12.764 --> 00:37:17.936
escalate up. No. You can. So
what you would do is you'd find

00:37:17.936 --> 00:37:22.540
a way to get the user to admin.
You know, you might use a 0 Day

00:37:22.540 --> 00:37:26.478
or some other thing to move up
to become an admin on that box

00:37:26.478 --> 00:37:31.216
and then [indiscernible] the
system, so just -- it does help

00:37:31.216 --> 00:37:35.019
though. I'm going to tell you
right now, taking admin, making

00:37:35.019 --> 00:37:38.389
sure that all your users are not
admins on their boxes really

00:37:38.389 --> 00:37:42.627
helps a lot. Most malware over
there, they're scripted so that

00:37:42.627 --> 00:37:45.163
they take advantage of the fact
that most people are lazy and

00:37:45.163 --> 00:37:48.700
are admins on their boxes. So if
you take like for all my kids

00:37:48.700 --> 00:37:52.137
and their network and my network
at home, none of them have

00:37:52.137 --> 00:37:55.240
admin. I don't have admin. And
so, you know, I don't have

00:37:55.240 --> 00:37:57.842
admin. I don't have flash. I
don't have java on mine.

00:37:57.842 --> 00:38:03.348
Everything I do -- [Applause].
>> Yeah, everything I do is in

00:38:03.348 --> 00:38:06.551
the VM. Everything I do is in
the VM. When I'm done looking at

00:38:06.551 --> 00:38:10.155
the stuff I need to look at, I
roll it back. As far as the

00:38:10.155 --> 00:38:13.825
privileged escalation goes,
yeah. It really helps but to

00:38:13.825 --> 00:38:18.263
determine attacker, it will not
stop them. But it really helps.

00:38:18.263 --> 00:38:22.033
Things like, you know, if you're
going against people that use,

00:38:22.033 --> 00:38:24.836
you know, automated malware
like, you know, like Zeus and

00:38:24.836 --> 00:38:28.740
stuff like that, banking
malware, they usually don't go

00:38:28.740 --> 00:38:34.045
that extra step to see if you
can compromise the beyond user,

00:38:34.045 --> 00:38:40.051
which is good. Yes, over here.
[Inaudible question from

00:38:44.455 --> 00:38:51.162
audience] >> There's what? Laps?
[Inaudible] Oh, I have never

00:38:51.162 --> 00:38:57.168
used that. I have used Emit.
[Inaudible] That probably works

00:39:02.273 --> 00:39:07.378
pretty good. Huh? >> Can you
repeat the question? >>How good

00:39:07.378 --> 00:39:12.951
is it to use Laps, right?
[Inaudible] >>Oh, how efficient

00:39:12.951 --> 00:39:16.321
of a counter measure is it to
use Laps? Laps is pretty good

00:39:16.321 --> 00:39:18.556
from what you've been explaining
to me. It's a good policy that

00:39:18.556 --> 00:39:21.359
scrambling the local
administrator account, right, so

00:39:21.359 --> 00:39:23.361
if it scrambles the local
administrator account, so you

00:39:23.361 --> 00:39:27.065
can't pass hash from workstation
to workstation because the 500

00:39:27.065 --> 00:39:31.102
account, the local admin account
is scrambled but that means also

00:39:31.102 --> 00:39:35.873
that nobody else can use it if
it's scrambled. Okay. And like a

00:39:35.873 --> 00:39:38.943
lot of people that are in IT,
some odd reason they kind of

00:39:38.943 --> 00:39:43.281
fixate on that 500 account and
they kind of like it and that's

00:39:43.281 --> 00:39:49.287
one of the bad things. Last
question right there. [Inaudible

00:40:13.044 --> 00:40:15.046
comment from audience] >> Oh,
okay. I didn't know that. I

00:40:15.046 --> 00:40:17.048
haven't been in admin for a
while, so -- [ LAUGHTER ] >>

00:40:17.048 --> 00:40:23.888
Okay. And that concludes my
thing. I think I'm out of time

00:40:23.888 --> 00:40:29.894
and thank you for coming to
listen to me. [Applause]. 

