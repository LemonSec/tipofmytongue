00:00:00.234 --> 00:00:02.502
All right so these guys are
going to do some really cool

00:00:02.502 --> 00:00:08.575
shit they have really big piece
of wood in here that does a lot

00:00:08.575 --> 00:00:14.581
cool shit. So we are going to do
a Q and A mic. After we are
going

00:00:20.554 --> 00:00:26.560
to take them to the hall way if
you have questions after that.

00:00:32.699 --> 00:00:38.705
So with that the floor is yours.
>> Is not working. Hello. Good

00:00:44.845 --> 00:00:49.783
after noon everybody. All right
does anybody in the audience, do

00:00:49.783 --> 00:00:55.956
you like Hynes movies. Yeah
cool, how many like surveillance

00:00:55.956 --> 00:01:01.962
cameras? Everybody who cheered
is a fed. So my name is Eric. By

00:01:07.935 --> 00:01:13.941
night we turn into hackers and
our most resent project was

00:01:22.649 --> 00:01:28.822
working on surveillance.
Hopefully -- if you are not here

00:01:28.822 --> 00:01:36.363
to see that you should probably
stay any way because you'll hurt

00:01:36.363 --> 00:01:42.769
my feels if you leave. Today in
this talk we are going to talk

00:01:42.769 --> 00:01:45.005
about a few different view
things. We are going to move

00:01:45.005 --> 00:01:51.378
along to -- my after that we are
going to look how we made a

00:01:51.378 --> 00:01:57.384
piece of hardware. Once we have
control of that data we conclude

00:02:03.457 --> 00:02:06.827
what network -- and then we are
going to talk about the software

00:02:06.827 --> 00:02:14.735
stalk. Decodes those layers. And
then hopefully throughout this

00:02:14.735 --> 00:02:20.741
entire talk where he going to be
running live demo. Cool prior

00:02:25.245 --> 00:02:28.615
art. So we did extensive
research before and after

00:02:28.615 --> 00:02:34.621
embarking on this project. Jus
TV -- printing it out and taping

00:02:41.028 --> 00:02:48.502
the camera. This seemed a little
too low tech for us. This type

00:02:48.502 --> 00:02:54.508
involved take your highest teem
hacker guy, telling to find the

00:03:00.514 --> 00:03:06.453
either net cable. We found
number -- on the right is a

00:03:16.296 --> 00:03:19.232
little bit more realistic
example. This is national

00:03:19.232 --> 00:03:25.238
treasure. We create our own
device as close to the Moe vies

00:03:33.380 --> 00:03:38.385
to see how practical this attack
really is. This is the system we

00:03:38.385 --> 00:03:41.555
are trying to attack. Start with
a surveillance camera. We don't

00:03:41.555 --> 00:03:47.561
care what is connected there. As
long there is an E connect

00:03:55.902 --> 00:04:03.210
table. So up on stage let me
show what we have here. Over

00:04:03.210 --> 00:04:06.413
here we have the vault that we
are going to try to break into

00:04:06.413 --> 00:04:09.483
here. Here we have the
surveillance camera. Is

00:04:09.483 --> 00:04:15.155
connected via either net through
this long coil through the

00:04:15.155 --> 00:04:21.161
security guards computer. Which
has gone to sleep. And so let me

00:04:25.565 --> 00:04:30.103
real quick. This is up to date.
You can see the security guard

00:04:30.103 --> 00:04:34.875
camera. Pretty much live there
is a little delay. I cannot

00:04:34.875 --> 00:04:37.377
still the money from the vault
because they'll come arrest me.

00:04:37.377 --> 00:04:43.383
By the way. The rest of the demo
is to aid in presenting this.

00:04:49.689 --> 00:04:53.360
The picture from using another
cam are. A little bit silly I

00:04:53.360 --> 00:04:59.366
know but it helps to show we
really don't need cable access.

00:05:02.502 --> 00:05:08.909
Just one either net able. All
right so what's inside the E

00:05:08.909 --> 00:05:14.915
connects cable. Any cat 6.
You're going find with 4 twisted

00:05:18.185 --> 00:05:23.423
pairs. There a lot various
interest -- 100 bases T. These

00:05:23.423 --> 00:05:30.297
two are quite simple in the way
they work. They use only 2 of

00:05:30.297 --> 00:05:36.937
the 4 pairs to send data. They
device which one is going to

00:05:36.937 --> 00:05:44.311
talk. This the neat because you
can just sort off top in the

00:05:44.311 --> 00:05:50.317
middle of the cable. Alligator
-- now split tile. Now the wire

00:05:52.819 --> 00:05:57.390
are twisted together to minimize
interfere -- receive. Now I is

00:05:57.390 --> 00:05:59.526
an these network have a
termination resistant around

00:05:59.526 --> 00:06:03.697
them. This prevents reflection
and loads the cable. A very nice

00:06:03.697 --> 00:06:06.633
way that makings all happy so if
you sort of blindly. You are --

00:06:06.633 --> 00:06:08.868
which is going to heavily degree
the signal and cause data lost.

00:06:08.868 --> 00:06:11.104
So the possible to tap -- with
another internet card which is a

00:06:11.104 --> 00:06:17.110
little bit invasive -- we want
to be a little bit more update.

00:06:32.092 --> 00:06:38.098
So in 1999 gigabyte introduce,
they have to be at least current

00:06:57.917 --> 00:07:03.857
gigabit internet. They use all 4
pair to send data in all at the

00:07:08.161 --> 00:07:12.666
same time. Doesn't get mixed up?
Yes it does. Here's how it

00:07:12.666 --> 00:07:18.672
works. What I do I write the
data I want to send into the

00:07:24.477 --> 00:07:30.483
line and read back when I see on
the line subtract out what I

00:07:33.653 --> 00:07:38.825
know what I send and the result
is what the other person send is

00:07:38.825 --> 00:07:44.831
pretty clever. I certainly don't
know the way the only way to

00:07:52.005 --> 00:07:56.810
read the data is to become one
of the ends, that is if you are

00:07:56.810 --> 00:08:00.613
in the middle of the cable you
need to cut that cable, add your

00:08:00.613 --> 00:08:02.615
own network and now basically
become the ends of e -- now

00:08:02.615 --> 00:08:08.555
there is a lot of different 10
base -- either -- I don't want

00:08:19.599 --> 00:08:25.605
to implement these proto calls.
Namely the people who make

00:08:28.274 --> 00:08:33.546
network interface cards and so
in order to insert myself into

00:08:33.546 --> 00:08:36.316
the middle of this cable I
really don't know to learn how

00:08:36.316 --> 00:08:38.685
internet works just a way to
reroute where the signals are

00:08:38.685 --> 00:08:45.191
going. Take the cable is and
change the of the data. He is

00:08:45.191 --> 00:08:51.197
known expose the 4 twisted pair.
Green, brown, and blue. So the

00:09:07.714 --> 00:09:11.451
device that we made to redirect
the flow of the data is call it

00:09:11.451 --> 00:09:19.125
had tap port. I can show you on
the camera too. This is the tap

00:09:19.125 --> 00:09:23.930
port. Now the tap port has a lot
of cool features. Hate has 8

00:09:23.930 --> 00:09:27.600
lashes relay. Which is use the
reroute the signal? These are 1

00:09:27.600 --> 00:09:33.606
gig -- only use -- 125. 16 pun
connecters. And to connecting to

00:09:54.494 --> 00:09:58.431
medal inside. You don't need to
break the connection. On the

00:09:58.431 --> 00:10:00.633
board there are several traces
where the flow -- just like

00:10:00.633 --> 00:10:07.240
these -- this is cool because if
you attach our board and you're

00:10:07.240 --> 00:10:13.246
a cable network -- we were not
able to get our hands on these.

00:10:19.052 --> 00:10:24.557
Nobody new had one but we feel
that we strongly believe that

00:10:24.557 --> 00:10:27.861
this board would be basically
invisible to a cable tester. It

00:10:27.861 --> 00:10:33.867
will show up without very much
dis -- lastly, USB you can

00:10:36.436 --> 00:10:39.906
connect it to a come and -- can
you control the routing from

00:10:39.906 --> 00:10:42.976
across the internet. With your
victims network cables and

00:10:42.976 --> 00:10:45.545
stuff. So let's take a quick
look at what Zach has been doing

00:10:45.545 --> 00:10:51.551
over here. What he has done he
is working on slicing the cable

00:11:06.132 --> 00:11:11.371
into the tap board. Using the
punch line tool. What he is

00:11:11.371 --> 00:11:17.443
doing displacing the wire,
making electrical connections to

00:11:17.443 --> 00:11:22.115
the board without interrupting
the data that is send. You can

00:11:22.115 --> 00:11:24.117
see the time stamp up there
still. So far we have not

00:11:24.117 --> 00:11:26.119
interrupted the camera feed. Now
by default or let me start.

00:11:26.119 --> 00:11:32.125
There are 4 parts. Device under
test A and test B. Passive

00:11:49.175 --> 00:11:56.849
configuration. Now the way that
you attach to this tab board is

00:11:56.849 --> 00:12:00.353
first of all is slicing your own
man in the middle. Tap A and tap

00:12:00.353 --> 00:12:06.292
B. Then -- and you remember the
UT be are connected together by

00:12:10.496 --> 00:12:13.800
default sol what have you done
is two possible signal paths. By

00:12:13.800 --> 00:12:15.802
punching down the Ethernet. This
means you can remove one of them

00:12:15.802 --> 00:12:17.804
cut the twisted the pair leaving
the signal routed. You can do

00:12:17.804 --> 00:12:19.806
this without ever interesting
the signal. Zach is finish punch

00:12:19.806 --> 00:12:21.808
the UTA and UTB the camera feed
is still going. Can you waive

00:12:21.808 --> 00:12:23.810
your hand in front it. Now we
are going to start to remove

00:12:23.810 --> 00:12:29.616
this cable. Tap port so let's
look at the video. You can see

00:12:29.616 --> 00:12:32.752
the time stamp still ticking
away. Almost done. No

00:12:32.752 --> 00:12:36.189
disturbance yet. Again, video.
And there we go we completed

00:12:36.189 --> 00:12:38.224
remove the middle of the
Ethernet cable. [ APPLAUSE ] >>

00:12:38.224 --> 00:12:40.393
So what do we do know that we
slice the middle. Well first let

00:12:40.393 --> 00:12:42.528
me talk a little bit more how it
works. This tap board has cool

00:12:42.528 --> 00:12:44.530
features. It has fail safer. The
cable looks identical how it was

00:12:44.530 --> 00:12:46.532
before. But the board suddenly
loose -- this board has a fail

00:12:46.532 --> 00:12:49.235
feature. What's going to happen
is that blue light to blink. If

00:12:49.235 --> 00:12:52.572
that's what you want. Another
cool feature of the tap port.

00:12:52.572 --> 00:12:56.242
The tap port is tamper evident
there is an excel roomer. This

00:12:56.242 --> 00:12:59.612
will detect if the board is
jostle or otherwise disturb. So

00:12:59.612 --> 00:13:03.216
with we have a short little
program here. But of course you

00:13:03.216 --> 00:13:05.952
can actually connect this to
something that phones home

00:13:05.952 --> 00:13:09.622
because sometimes I imagine you
may be using this board in a

00:13:09.622 --> 00:13:12.692
critical application where is
very important that you have not

00:13:12.692 --> 00:13:16.663
disturb it. This gives you a
piece of mind. The cop per as

00:13:16.663 --> 00:13:20.933
they were the original cable. We
want it to be to connect -- tap

00:13:20.933 --> 00:13:24.904
A and tap B. This the sort of
critical step. This is where;

00:13:24.904 --> 00:13:28.574
take control of the Ethernet
cable so this is going to cause

00:13:28.574 --> 00:13:32.245
a little bit packet loss. But we
found it doesn't cause TCB

00:13:32.245 --> 00:13:35.281
connections to drop and it
causes very minimal interrupt to

00:13:35.281 --> 00:13:38.184
lower level traffic. So let's
show that right now. We are

00:13:38.184 --> 00:13:40.186
going to run this command. Flip
the relays and switch the boxes.

00:13:40.186 --> 00:13:42.188
So let's do that. Let's show
this board. You with see --

00:13:42.188 --> 00:13:44.190
actively tapping the traffic and
the guard computer went to

00:13:44.190 --> 00:13:46.192
sleep. But if we that's up to
date. You can see that camera

00:13:46.192 --> 00:13:48.194
feed is still ticking away. So
brine is giving thumbs up. Now

00:13:48.194 --> 00:13:50.196
we have complete control over
the network cable. [ APPLAUSE ]

00:13:50.196 --> 00:13:52.198
>> With that I'm going to hand
the mic to Zach here. >> Great.

00:13:52.198 --> 00:13:54.200
I guess -- now we have basically
complete control. Wait. Great.

00:13:54.200 --> 00:13:56.202
Now we have complete control
over the traffic going between

00:13:56.202 --> 00:13:58.204
the camera and our security
guard computer. We are really

00:13:58.204 --> 00:14:00.206
close to being to -- before we
get into that. How the video is

00:14:00.206 --> 00:14:02.208
trance mitted. So sort of like
obvious things do, to record all

00:14:02.208 --> 00:14:04.143
the traffic that is going
through the cable and same set

00:14:04.143 --> 00:14:06.145
of hack over and over. That
doesn't work it turns out there

00:14:06.145 --> 00:14:08.147
is sequence number and things
that involved in the data. Also

00:14:08.147 --> 00:14:10.149
there is might be traffic going
on and or security guards can

00:14:10.149 --> 00:14:12.151
access -- either way we heed the
examine our video data. So the

00:14:12.151 --> 00:14:14.153
video is encoded with -- code,
just dump over the network is

00:14:14.153 --> 00:14:16.155
wrapped up -- is this better?
Great. Okay. So the video is not

00:14:16.155 --> 00:14:20.093
just the H 264 packet is not
dumped over the network. Which

00:14:20.093 --> 00:14:24.864
is wrapped IPP 4 if you are in
90 and then wrapped in Ethernet

00:14:24.864 --> 00:14:29.302
so in order to understand what
it is we need to decompose all

00:14:29.302 --> 00:14:33.740
these packets? We build our own
man in the middle stance. Like 2

00:14:33.740 --> 00:14:37.510
face network stat and able to
decodes all these proto calls

00:14:37.510 --> 00:14:42.281
that we need to do video looping
and a few other and divine the

00:14:42.281 --> 00:14:46.386
be a trance present as possible.
TCP stuff because the way that

00:14:46.386 --> 00:14:50.123
imbedded device might look a
little bit different and we want

00:14:50.123 --> 00:14:52.859
our attack to be as
undistinguishable as possible.

00:14:52.859 --> 00:14:56.963
Because we have done this wire
trick. We do not need additional

00:14:56.963 --> 00:15:00.366
traffic to the network and
letting them someone is try

00:15:00.366 --> 00:15:04.737
together do put a man in the
middle attack. That we can use

00:15:04.737 --> 00:15:08.841
to filter data or run things
through FMM peg or make loops

00:15:08.841 --> 00:15:12.912
that are video streams. This is
really useful to just make cool

00:15:12.912 --> 00:15:16.682
applications using this stack.
So let's take a look how we

00:15:16.682 --> 00:15:20.419
might use lens in a different
example from video. Let's look

00:15:20.419 --> 00:15:23.823
how we might implement
extension. So the way that it

00:15:23.823 --> 00:15:27.260
works you're reading tech news
and are terribly boring. Cloud

00:15:27.260 --> 00:15:32.064
with my butt /PAEUB it will be
worth reading. So normally this

00:15:32.064 --> 00:15:35.501
is done in your browser and is
all nice but. So let's take a

00:15:35.501 --> 00:15:41.507
look at our software. We are
going to need to decode,

00:15:49.282 --> 00:15:55.288
Ethernet and TCP and HTTP so we
can exact just the body on after

00:16:09.235 --> 00:16:15.241
HTTP request. From there, yeah,
okay. From there we are going to

00:16:26.419 --> 00:16:32.425
take the body of an HTTP request
and run it through the layer

00:16:45.037 --> 00:16:51.043
that replaces everything with
cloud with butt. Pretty simple.

00:16:58.751 --> 00:17:04.690
So now if we have this stacks
set up when we -- >> I'm almost

00:17:19.739 --> 00:17:21.741
there. >> When he we have this
stack up. If the security guard

00:17:21.741 --> 00:17:23.743
lab top trying to open up --
we'll see something a little bit

00:17:23.743 --> 00:17:25.745
different. >> Maybe, the
internet here has been a little

00:17:25.745 --> 00:17:27.747
bit flaky all day I blame the
internet. >> Not our fault at

00:17:27.747 --> 00:17:29.749
all. >> There we go [ APPLAUSE ]
>> Some really great ahead lines

00:17:29.749 --> 00:17:31.751
here. Okay. So we can do this to
modify. This just shows we can

00:17:31.751 --> 00:17:33.753
modify TCP streams on your fly.
Now we can use this to make

00:17:33.753 --> 00:17:35.755
camera loops. So to loop video
is little bit more complicated

00:17:35.755 --> 00:17:37.757
than ETP request. RTP real-time
proto call. It involved a few

00:17:37.757 --> 00:17:39.759
other things. Session data and
playing -- unrelatetive and just

00:17:39.759 --> 00:17:41.761
sort of tells you some encode
information, things we don't

00:17:41.761 --> 00:17:43.763
actually care ability. And
finally we have RTP and this is

00:17:43.763 --> 00:17:45.765
the meat we care about. RTP is
the H 264 data we want to loop.

00:17:45.765 --> 00:17:47.767
So here you can see this is like
a graph of all the layers that

00:17:47.767 --> 00:17:49.769
we have to decode everything in
a video session. In RTP session.

00:17:49.769 --> 00:17:51.771
So we have the UDP layer which
in this video filters out the

00:17:51.771 --> 00:17:53.773
traffic -- and H 264 stream that
we can pass out. Peg is really

00:17:53.773 --> 00:17:55.775
great, we're going to use it a
lot because it lets perform a

00:17:55.775 --> 00:17:57.777
lot of trance formation. We can
do looping like cool color

00:17:57.777 --> 00:17:59.779
effects or you know maybe
something really -- when it

00:17:59.779 --> 00:18:01.781
comes down to live stream. This
is live. But if we can do that

00:18:01.781 --> 00:18:03.716
we really can loop video. So all
we need to do is just record

00:18:03.716 --> 00:18:05.718
some of this L 624 data. And
then we're going to -- use FM

00:18:05.718 --> 00:18:07.720
peg and then we'll take the
stream. And forge packets to

00:18:07.720 --> 00:18:09.722
look like they're from the
camera. And then when we have

00:18:09.722 --> 00:18:11.724
that the security is just going
to show our loop and we can do

00:18:11.724 --> 00:18:13.726
whatever we want after wards in
front of the states. Whatever

00:18:13.726 --> 00:18:15.728
that would be. Probably very
legal. Okay so we are just going

00:18:15.728 --> 00:18:17.730
to demonstrate that here. We are
using that same set up I just

00:18:17.730 --> 00:18:19.732
show. We have going to start
recording some video. Of course

00:18:19.732 --> 00:18:21.734
some packets. So we recorded our
loop. Know we are going to

00:18:21.734 --> 00:18:23.736
actually loop this video and
we're using a slightly different

00:18:23.736 --> 00:18:25.738
set up here. Is actually looping
if we look at our security guard

00:18:25.738 --> 00:18:27.740
camera. >> You can see. >> So if
you put your hand in here is not

00:18:27.740 --> 00:18:29.742
showing here and if you paid
careful attention time stamp.

00:18:29.742 --> 00:18:31.744
The time stamp will go in
circle. Yup [ APPLAUSE ] >> So

00:18:31.744 --> 00:18:33.746
yeah that's pretty great. But we
can do one better. So that pesky

00:18:33.746 --> 00:18:37.783
time stamp it would be nice we
could generate that. Where she

00:18:37.783 --> 00:18:41.854
data the camera is still
streaming data to our box we are

00:18:41.854 --> 00:18:46.225
just throwing that out. But if
we use FM peg -- like nothing

00:18:46.225 --> 00:18:50.262
else important in there. Pace
that over our video and so when

00:18:50.262 --> 00:18:54.300
we put that loop together the
time stamp will still be going

00:18:54.300 --> 00:18:59.705
up. And so Eric set this up now.
>> Is a little off screen but is

00:18:59.705 --> 00:19:03.676
there. >> The time stamper is
sticking up. Great. And if you

00:19:03.676 --> 00:19:08.080
notice Eric is at work you know
braking into the -- and nothing

00:19:08.080 --> 00:19:12.451
the showing up. [ APPLAUSE ] >>
The time stamp is still going

00:19:12.451 --> 00:19:17.156
and we have all the money. So
greet yeah. So where do we go

00:19:17.156 --> 00:19:21.894
from here. Now that we run away
with our cash. What else can we

00:19:21.894 --> 00:19:25.931
do with our box. One thing,
there is no encrypt shun going

00:19:25.931 --> 00:19:29.301
on in here. However I'm not
particular concern ability well

00:19:29.301 --> 00:19:33.339
implement SSL. Is a really hard
problem so we are glossing over

00:19:33.339 --> 00:19:37.743
that? Besides that this tap port
we -- for sending data HDMI. We

00:19:37.743 --> 00:19:40.479
just have not come up with any
good use with man in the middle

00:19:40.479 --> 00:19:46.485
at HDMI but maybe you have
something in mind. We also have

00:19:46.485 --> 00:19:52.525
a cool, handful of other demos
that are unrelated but we figure

00:19:52.525 --> 00:19:58.531
they were fun application so why
not make them. All right so we

00:20:05.938 --> 00:20:11.944
loaded up this web comic which
may look a little familiar to

00:20:18.350 --> 00:20:24.356
some people and so a fun thing
with this web comic have you

00:20:31.797 --> 00:20:37.803
some people using your internet,
why not just flip all our

00:20:43.142 --> 00:20:50.416
imagines over HTTP so their
experience is really flowing and

00:20:50.416 --> 00:20:56.422
trust me having use the upside
down internet. You don't know

00:21:11.937 --> 00:21:17.943
what's going on. Is really hard
to use. So we basically have

00:21:35.494 --> 00:21:41.500
some clockwork -- HTT
approximate and flip it and

00:21:46.572 --> 00:21:49.108
before sending it to the
browser. >> This one is taking

00:21:49.108 --> 00:21:51.243
another second to work. >> We
are having demo problems. Blame

00:21:51.243 --> 00:21:54.013
it on the internet which is a
hard thing to rely on. >> Does

00:21:54.013 --> 00:21:56.549
anybody know any jokes. >> Okay
we are going to try that one

00:21:56.549 --> 00:21:58.918
again because we had internet
issues. >> There we go. >> Okay,

00:21:58.918 --> 00:22:01.253
yeah, so here. The imagines are
flipped upside down. And so, you

00:22:01.253 --> 00:22:04.123
know -- one of these things --
there we go. Is near. >> Oh my

00:22:04.123 --> 00:22:06.492
god. Stop being clever. >> But
somebody is live editing the TCP

00:22:06.492 --> 00:22:08.494
screen. So we have another
layer, we have another program

00:22:08.494 --> 00:22:10.996
set up but basically lets up
edit save TCP screens live. So.

00:22:10.996 --> 00:22:13.732
>> There you go. >> Open up the
real editor like -- and you can

00:22:13.732 --> 00:22:16.268
add expert thing to the HTML.
Yup. So you can just open up

00:22:16.268 --> 00:22:18.837
them and once you write out the
file. It send to the computer.

00:22:18.837 --> 00:22:20.839
This doesn't have any practical
purpose other than making

00:22:20.839 --> 00:22:22.841
yourself cooler but that's --
basically we have some more

00:22:22.841 --> 00:22:25.311
demos coming up. We have all the
source for our project up on gig

00:22:25.311 --> 00:22:27.846
hash, the hardware. And get hub
and you should get hub if you

00:22:27.846 --> 00:22:30.583
want to reach us and contact us.
But yeah. So we have some extra

00:22:30.583 --> 00:22:33.118
demo using the video again. So
the thing about -- you want to

00:22:33.118 --> 00:22:35.487
switch back? So yeah. You rob
the safe, taken all the goods

00:22:35.487 --> 00:22:38.424
out. Gone on the clean get way.
And you just want to go back and

00:22:38.424 --> 00:22:41.160
rub it in. Well, when we robbing
the safe we were recorded so we

00:22:41.160 --> 00:22:44.096
can play it back later. And so
now they go try to chase you now

00:22:44.096 --> 00:22:46.465
and stop the robbery while you
are 100 miles away and they're

00:22:46.465 --> 00:22:48.801
wondering what's going on. [
APPLAUSE ] >> That's the end of

00:22:48.801 --> 00:22:51.370
our clock. That's the bases of
what we wanted to talk about. So

00:22:51.370 --> 00:22:53.505
if anybody has any questionings
it will be great. How much

00:22:53.505 --> 00:22:55.674
processing power that is the
attack computer -- >> You want

00:22:55.674 --> 00:22:58.210
to answer that? >> You should
answer that -- I'm going to set

00:22:58.210 --> 00:23:01.146
this up. >> Can you hear me? We
have not tried running this on a

00:23:01.146 --> 00:23:07.253
pie, is not very -- which is not
64 big. Is nice a platform to

00:23:07.253 --> 00:23:13.859
work on fiscally -- >> How frame
work or -- >> We built our own.

00:23:13.859 --> 00:23:19.598
Sorry ab. We built our own frame
work. Because we wanted to be

00:23:19.598 --> 00:23:25.304
able to mimic how I they are end
of the connecter would handle

00:23:25.304 --> 00:23:29.708
the TCP screen. >> The only
piece in here that leaves any

00:23:29.708 --> 00:23:35.714
sort of evidence is that re --
so my question is possible to

00:23:50.429 --> 00:23:56.435
set the nicks on your type site
to be appropriate con figure

00:24:09.481 --> 00:24:15.487
rate. Probably not, tell me why.
>> If I go back a bunch slides I

00:24:33.405 --> 00:24:39.411
was going to talk about this but
Zach goes too fast as punch down

00:24:55.728 --> 00:25:01.734
the table. But what happens, tap
A and tap B are connected

00:25:14.813 --> 00:25:20.819
together. This is to -- some
other path way what sort of the

00:25:29.695 --> 00:25:31.697
proto/KAL you're dealing with.
Pairs and -- you can con figure

00:25:31.697 --> 00:25:33.699
that on the nicks that you are
going -- that way -- we sort of

00:25:33.699 --> 00:25:35.701
rain of time. But we feel like
the hardware support is there

00:25:35.701 --> 00:25:41.707
and we are very -- as you flow
the switches. [ APPLAUSE ] >> Is

00:25:58.090 --> 00:26:04.029
always worth knowing that you
can throw the switching in such

00:26:18.410 --> 00:26:24.416
a way that you can -- pass the
connections if that's what you

00:26:42.468 --> 00:26:48.474
are into. >> All right so when
you are not injected power to

00:26:55.614 --> 00:27:01.620
pigtail how well does it handle
-- there is a little handshake.

00:27:03.555 --> 00:27:09.561
>> I am not honestly don't know
about PO and that handshake. I

00:27:12.631 --> 00:27:18.637
know if you are using without
any additional data. If you --

00:27:21.874 --> 00:27:27.880
can you figure out which side is
giving power connect using --

00:27:45.063 --> 00:27:51.069
and then add your PO injector on
within of the tap nick and when

00:28:04.983 --> 00:28:10.989
the relay switch gives powers
just a very small -- >> So --

00:28:13.692 --> 00:28:19.698
you should be able to leave
those clams all the way through.

00:28:22.401 --> 00:28:27.739
>> Definitely that will
certainly work. I have heard

00:28:27.739 --> 00:28:33.745
there are a lot of standards --
>> Is either 4 -- so I guess you

00:28:38.450 --> 00:28:44.456
kind of but -- >> Sorry. This is
-- the other gentlemen asked. As

00:28:47.826 --> 00:28:55.167
is currently running -- is that
happening in real-time. >> We

00:28:55.167 --> 00:29:01.173
pretend to the Mac addresses of
the 2 devices. We are able to

00:29:03.809 --> 00:29:07.045
spoof Ethernet pass that look
like they're coming from those

00:29:07.045 --> 00:29:09.047
mac addresses. >> That is so
well done. Really cool. >> Thank

00:29:09.047 --> 00:29:11.049
you. >> If you are leaving,
please do not go out that side

00:29:11.049 --> 00:29:13.051
of the room goes out through the
back. Your right is no your left

00:29:13.051 --> 00:29:15.053
is yes. Blah blah. >> So you
guys clearly rehearse this and

00:29:15.053 --> 00:29:17.055
it was well presented. Now one
question, having it so well

00:29:17.055 --> 00:29:19.057
rehearse and how many times have
you done this and how fast can

00:29:19.057 --> 00:29:21.059
you do it we need to know so you
can tell the team. >> This is

00:29:21.059 --> 00:29:27.599
the fastest we have ever gotten
to it. >> There was some

00:29:27.599 --> 00:29:33.605
adrenaline involve. >> Is worth
noting that you know animals

00:29:38.477 --> 00:29:44.116
were harm in the making of this
talk but many Ethernet cables

00:29:44.116 --> 00:29:49.254
were. >> -- leave it untouched.
>> Actually make little boxes

00:29:49.254 --> 00:29:54.393
that just have the same punch
down connections and when you

00:29:54.393 --> 00:29:59.998
cut the wire, leave enough that
you can repunch them down and

00:29:59.998 --> 00:30:05.637
you then cut out our board. So
is totally possible to remove

00:30:05.637 --> 00:30:10.308
from our Ethernet cable without
disturbing it. >> I was

00:30:10.308 --> 00:30:14.980
wondering is the tap port
compatible with the Ethernet. >>

00:30:14.980 --> 00:30:21.520
The short answer is yes. If you
add your own PO injector on the

00:30:21.520 --> 00:30:27.526
proper side. Interesting. As it
is now, we can't is power over

00:31:13.305 --> 00:31:19.311
USB because the tap port doesn't
work without a host computer to

00:34:29.134 --> 00:34:35.140
feed it off from. >> Great
that's it. >> Thanks a lot for

00:39:31.369 --> 00:39:37.375
coming. >> Thank you.

