00:00:00.267 --> 00:00:03.604
 >> All right. As we said,
welcome to track 1. And -- yeah,

00:00:03.604 --> 00:00:07.741
this is 1:00 talk as you well
know. We have Colby Moore who is

00:00:07.741 --> 00:00:11.311
going to talk about Satcom
hacking. He apparently found

00:00:11.311 --> 00:00:16.717
some vulnerabilities. In some
satellites. This is a rerun of

00:00:16.717 --> 00:00:23.757
his talk that he gave at Black
Hat so please help me welcome

00:00:23.757 --> 00:00:29.730
Colby Moore. [ cheers and
applause ] >> Thanks, guys. Good

00:00:29.730 --> 00:00:33.300
afternoon DEF CON, thanks for
coming out. Today we're going to

00:00:33.300 --> 00:00:36.637
talk about spread spectrum
signals and hacking the

00:00:36.637 --> 00:00:42.943
GlobalStar simplex data service.
First, I'm mechanical engineer

00:00:42.943 --> 00:00:47.080
that loves computer security.
I'm currently working on the R&D

00:00:47.080 --> 00:00:50.384
team. I got interested in
satellites and radios a long

00:00:50.384 --> 00:00:54.721
time ago when I got my ham radio
license, yes, ladies, that's my

00:00:54.721 --> 00:01:00.928
call sign. Radio me, I'm single.
What is this company that I work

00:01:00.928 --> 00:01:06.633
for? Basically we're a new spin
on security for the enterprise.

00:01:06.633 --> 00:01:09.736
We have Army of vetted security
researchers out there and hacker

00:01:09.736 --> 00:01:12.873
clients on basis for pretty
crazy pay outs in my opinion.

00:01:12.873 --> 00:01:17.644
So, if you have spare cycles
want to make some money join our

00:01:17.644 --> 00:01:21.014
red team. If you are concerned
about security in your

00:01:21.014 --> 00:01:24.718
enterprise comes talk to us as
well. But anyway, a little

00:01:24.718 --> 00:01:28.155
introduction here. Why aim doing
this? I wanted to try something

00:01:28.155 --> 00:01:31.091
new and was pretty frustrated
with the lack of diversity in

00:01:31.091 --> 00:01:34.461
the talks lately, satellites are
kind of the ultimate hack,

00:01:34.461 --> 00:01:37.998
making a satellite talk just
about every year they are

00:01:37.998 --> 00:01:41.668
theoretical. I wanted to try to
do something a little bit more

00:01:41.668 --> 00:01:46.440
concrete. Location-based privacy
in -- location monitoring

00:01:46.440 --> 00:01:52.179
satellite seemed like a good
fit. Bottom line is I wanted to

00:01:52.179 --> 00:01:54.181
take a stab at something
different and hopefully inspire

00:01:54.181 --> 00:01:59.019
collaboration on future research
in this unexplored area. I'll be

00:01:59.019 --> 00:02:01.555
releasing some tools after the
talk hopefully we can

00:02:01.555 --> 00:02:06.426
collaborate a little bit. What
we are going to do, we'll talk

00:02:06.426 --> 00:02:09.663
about RF signals and modulation,
what is spread spectrum, we'll

00:02:09.663 --> 00:02:13.000
select a target and hopefully
we'll reverse engineer it and

00:02:13.000 --> 00:02:15.736
hopefully exploit it if
everything goes well. The goal

00:02:15.736 --> 00:02:19.706
of my research is to do it for
less than a thousand dollars. It

00:02:19.706 --> 00:02:22.175
started as a side project. I
wanted to do it on the cheap. So

00:02:22.175 --> 00:02:25.612
hopefully you guys will be ail
to do it too. Quite a bit of

00:02:25.612 --> 00:02:29.916
material to cover but I'll zip
through it, if you guys need to

00:02:29.916 --> 00:02:35.722
look later you can e-mail me,
whatever. Prerequisites. Tend to

00:02:35.722 --> 00:02:39.559
keep it high level at first but
with enough detail to get you

00:02:39.559 --> 00:02:43.130
guys started really all you need
to is a high school mathematical

00:02:43.130 --> 00:02:46.967
knowledge to start taking a look
at the stuff. So, for you guys

00:02:46.967 --> 00:02:51.104
that came to my talk last year
we like to define some key terms

00:02:51.104 --> 00:02:55.409
up front. So we have the term,
Vegas interpretation then its

00:02:55.409 --> 00:02:59.179
hacker meaning. So here for a
chip it's a pulse of a spread

00:02:59.179 --> 00:03:03.216
spectrum code not a poker chip.
Coverage, we're not referring to

00:03:03.216 --> 00:03:09.222
the size of your bikini it's the
area in which the satellite

00:03:11.758 --> 00:03:14.127
service is available. Recovery,
I'm sure you guys are recovering

00:03:14.127 --> 00:03:16.463
this morning but we'll be
recovering the unknown PN code

00:03:16.463 --> 00:03:19.166
of spreading code of the
signals. And bent pipe if not

00:03:19.166 --> 00:03:23.003
normal pipe it's -- refers to
type of satellite system that

00:03:23.003 --> 00:03:26.239
repeats the data when September
up it comes right back down. I'm

00:03:26.239 --> 00:03:29.309
sampling I'm sure you did a lot
of sampling last night but we're

00:03:29.309 --> 00:03:34.147
just going to be recording a
signal digitally. So, targeting

00:03:34.147 --> 00:03:37.384
how do we choose our target.
There's a lot of potential

00:03:37.384 --> 00:03:41.788
targets out there. There doesn't
even cover them all thinking the

00:03:41.788 --> 00:03:45.158
right one was key. Commercial,
military, bottom line the

00:03:45.158 --> 00:03:48.462
technology needed to be consumer
accessible and cheap, we're just

00:03:48.462 --> 00:03:51.198
going to do this side project.
But I wanted something to be

00:03:51.198 --> 00:03:54.668
popular have a really high
impact. You want vulnerabilities

00:03:54.668 --> 00:03:58.305
to be worthwhile. So familiar
with GlobalStar spot line of

00:03:58.305 --> 00:04:01.808
computer projects, I use them
when I'm out backpacking,

00:04:01.808 --> 00:04:06.179
they're pretty great. They make
trackers for track can your car

00:04:06.179 --> 00:04:10.050
or yacht. And first locator dash
da personal locator beacons to

00:04:10.050 --> 00:04:13.887
call for help when you're lost
out in the wild or your ship is

00:04:13.887 --> 00:04:16.890
sinking at sea or something like
that. Start looking deeper,

00:04:16.890 --> 00:04:20.327
turns out that commercial offer
little use the same offering.

00:04:20.327 --> 00:04:24.364
Basically you can buy a $50 dirt
cheap consumer device for

00:04:24.364 --> 00:04:27.200
research and research translate
directly to all enterprise

00:04:27.200 --> 00:04:31.037
devices out there. Not to
mention anything high impact

00:04:31.037 --> 00:04:37.110
it's pretty widely deployed.
Where is this technology used?

00:04:37.110 --> 00:04:39.813
Really it's used everywhere.
Designed to be integrated

00:04:39.813 --> 00:04:43.116
anywhere you below bandwidth off
the grid. Used in systems, big

00:04:43.116 --> 00:04:49.556
gas and oil operations, military
and predominantly asset

00:04:49.556 --> 00:04:52.926
tracking, ship contapers,
armored cars, expensive things.

00:04:52.926 --> 00:04:58.098
So all this tech operates on
what's called the simplex data

00:04:58.098 --> 00:05:02.669
service, how does that work. The
case of asset trackers, devices

00:05:02.669 --> 00:05:05.672
can also send back arbitrary
information as well, the tracker

00:05:05.672 --> 00:05:09.576
gets this location from GPS
satellites and then it beams

00:05:09.576 --> 00:05:12.746
that data some other metadata up
to the GlobalStar satellites. It

00:05:12.746 --> 00:05:15.782
repeats the data back down into
the GlobalStar ground station

00:05:15.782 --> 00:05:18.685
which interprets the data
packets, forwards the data over

00:05:18.685 --> 00:05:21.821
the Internet to global star
backing up the structure or to

00:05:21.821 --> 00:05:24.558
the customer infrastructure for
processings. I kind of like --

00:05:24.558 --> 00:05:29.062
think of SMS for the satellite
world, just really small concise

00:05:29.062 --> 00:05:35.335
messages. So, GlobalStar system
is series of low earth orbit

00:05:35.335 --> 00:05:39.840
bent pipe satellites. The way it
works whatever signal goes up

00:05:39.840 --> 00:05:42.342
it's simply repeats it, ships it
to a different frequency sends

00:05:42.342 --> 00:05:44.778
it right back down to be
received by the ground stations.

00:05:44.778 --> 00:05:48.615
This keeps the cost of satellite
low and future visibility

00:05:48.615 --> 00:05:54.621
flexible. Notices data link is
one direction, simplex, simplex

00:05:54.621 --> 00:05:57.924
data network, how the heck is
that reliable? Turns out that

00:05:57.924 --> 00:06:00.260
each data packet is sent
multiple times to ensure

00:06:00.260 --> 00:06:04.998
successful transmission. So
what's the deal with these

00:06:04.998 --> 00:06:07.734
ground stations? Turns out
there's hundreds of them all

00:06:07.734 --> 00:06:10.770
around the globe and they handle
reception of the satellite data

00:06:10.770 --> 00:06:13.673
there's also two main control
centers, one is in San Jose,

00:06:13.673 --> 00:06:16.910
California, forget where the
other one is. They're in charge

00:06:16.910 --> 00:06:19.479
much operating the satellites
sand positioning them and such.

00:06:21.548 --> 00:06:24.351
So here is the coverage map from
GlobalStar website, you can see

00:06:24.351 --> 00:06:27.153
if there is patches with no
coverage out in the ocean, and

00:06:27.153 --> 00:06:30.156
Antarctica, no ground station
there to receive the date the

00:06:30.156 --> 00:06:34.461
from the satellite. Each ground
station provides up to a couple

00:06:34.461 --> 00:06:38.598
thousand miles window, radius,
for reception. So you can see

00:06:38.598 --> 00:06:42.769
down in South Africa there's a
nice blob down there they

00:06:42.769 --> 00:06:46.573
actually just added this one
maybe couple months ago. Data

00:06:46.573 --> 00:06:50.043
coverage down there. So, before
I started working I like to do a

00:06:50.043 --> 00:06:53.079
little bit of ground work to get
the idea of a client's general

00:06:53.079 --> 00:06:56.549
security posture, I look at
their website, having issues

00:06:56.549 --> 00:07:00.720
signing up for an account,
locking in, try to log in and

00:07:00.720 --> 00:07:04.991
looks to me like potential SQL
injection. I did not get the

00:07:04.991 --> 00:07:10.664
warm fuzzy hacker, this is going
to be a fun target to hack on.

00:07:10.664 --> 00:07:13.833
So I dig a little deeper turns
out data from the ground

00:07:13.833 --> 00:07:18.538
stations appears before the
clients over FTP and HTP there's

00:07:18.538 --> 00:07:22.742
no S on there. Maybe just data
over the Internet we'll try to

00:07:22.742 --> 00:07:26.813
do it over the air just for the
hell of it. So things are

00:07:26.813 --> 00:07:29.983
looking pretty good in general,
some sort of bug. Let's dig

00:07:29.983 --> 00:07:33.920
deeper into the actual satellite
system itself. But where we look

00:07:33.920 --> 00:07:36.623
for information on GlobalStar's
hardware? Of course, Google, I

00:07:36.623 --> 00:07:41.294
think we all do it. But the SEC
database turned out to be the

00:07:41.294 --> 00:07:45.098
best wealth of information. If
you have an RF transmitting

00:07:45.098 --> 00:07:48.134
device you need to register with
the FCC to make sure you're not

00:07:48.134 --> 00:07:54.140
stepping on anyone's toes. There
are lot of academic papers on

00:07:59.779 --> 00:08:01.715
GlobalStar as well and I found a
lot of integrated spec sheets,

00:08:01.715 --> 00:08:03.717
proprietary information that was
just left out there. So that

00:08:03.717 --> 00:08:05.719
helped a lot. But I want to make
sure someone else hasn't already

00:08:05.719 --> 00:08:07.721
broke the system. I looked for
prior research. Turns out Travis

00:08:07.721 --> 00:08:10.657
goodspeed looked at the
Bluetooth protocol of one of the

00:08:10.657 --> 00:08:14.761
devices awhile back. Cool
research. And some guy, maybe

00:08:14.761 --> 00:08:20.166
he's here, looked at the GPS to
micro control interface on board

00:08:20.166 --> 00:08:25.171
an old spot personal locator
beacon I wanted to dive deeper,

00:08:25.171 --> 00:08:29.709
it didn't deal with the device
to satellite communications. So,

00:08:29.709 --> 00:08:33.146
again, looking at the FCC
database, a chip called the STX3

00:08:33.146 --> 00:08:37.650
coming up will be referenced.
One of the transmitters used by

00:08:37.650 --> 00:08:40.353
the simplex data network it was
designed for an integrater to

00:08:40.353 --> 00:08:42.856
put in their creation the low
cost, low power, it's wicked

00:08:42.856 --> 00:08:46.393
tiny. That's the chip itself
that talks to the satellite. So

00:08:46.393 --> 00:08:50.230
there's nice diagrams that came
with this chip on the diagrams

00:08:50.230 --> 00:08:54.401
kept seeing this DSSS and BPSK
coming up we'll talk about that

00:08:54.401 --> 00:08:59.639
more in a minute. I had no idea
what it was at the time but

00:08:59.639 --> 00:09:03.743
turns out to be critical to what
we're doing. So, the databases

00:09:03.743 --> 00:09:07.247
also came up with GlobalStar's
various frequency ranges as well

00:09:07.247 --> 00:09:10.750
as Pacific range for GlobalStar
simplex data network which we

00:09:10.750 --> 00:09:14.554
need to demo in this case the
devices we're looking at

00:09:14.554 --> 00:09:18.391
operated around 1.6 gigahertz in
frequency. So, I kept digging,

00:09:18.391 --> 00:09:21.261
and I found this leaked
manufacturer spec sheet from a

00:09:21.261 --> 00:09:24.464
company called Axon. They used
to make data chips for

00:09:24.464 --> 00:09:27.934
GlobalStar. Reference these
parameters I couldn't help feel

00:09:27.934 --> 00:09:31.905
like we're important but I had
no idea what they were. Of note

00:09:31.905 --> 00:09:36.109
let's see what it says here. We
see DSSS again, something called

00:09:36.109 --> 00:09:41.614
a 255 chip NP sequence at rate
of 1.25 megachips per second

00:09:41.614 --> 00:09:45.585
then reference to data rate
1060.4 bits per second. After a

00:09:45.585 --> 00:09:48.087
little reading turns out these
are parameters for certain type

00:09:48.087 --> 00:09:50.657
of spread spectrum. We'll talk
more about that in a minute.

00:09:53.059 --> 00:09:56.229
Before we talk about spread
spectrum basic review of waves

00:09:56.229 --> 00:10:00.567
and modulation for those that
aren't familiar. Remember that

00:10:00.567 --> 00:10:03.937
radio signals are transmitted on
radio waves. And data is

00:10:03.937 --> 00:10:07.540
included on waves by modulating
various parameters of that wave.

00:10:07.540 --> 00:10:10.477
Remember that waves have three
main characteristics that we can

00:10:10.477 --> 00:10:13.279
modify they have the wave length
essentially the frequency how

00:10:13.279 --> 00:10:16.749
many cycles per second the wave
moves. The phase, position of

00:10:16.749 --> 00:10:21.454
the wave relative to a fixed
point. As well as the amplitude,

00:10:21.454 --> 00:10:24.724
the height of the wave. We can
look at waves in few different

00:10:24.724 --> 00:10:28.995
ways. Probably familiar with the
time domain representation of a

00:10:28.995 --> 00:10:32.432
wave. Where time is on the X
axis and amplitude on Y axis.

00:10:32.432 --> 00:10:35.602
Often we're working with signals
-- when we're working with

00:10:35.602 --> 00:10:38.738
signals look at the frequency
domain representation. Where

00:10:38.738 --> 00:10:43.443
it's on the X axis. This shows
us what frequency components

00:10:43.443 --> 00:10:47.680
make of a signal. If you look
the at the frequency domain

00:10:47.680 --> 00:10:51.184
representation of say 100
kilohertz sine wave on this it

00:10:51.184 --> 00:10:54.387
would show a sharp spike at 100
kilohertz on the frequency

00:10:54.387 --> 00:10:57.657
domain graph. Oftentimes signals
may contain other frequency

00:10:57.657 --> 00:11:01.594
components. This graph may take
on very unique look for

00:11:01.594 --> 00:11:05.965
different types of signals we're
looking at. So, let's start and

00:11:05.965 --> 00:11:08.401
see kind of how analog
modulation is done. We'll look

00:11:08.401 --> 00:11:12.305
A.M. and F.M. both of which you
guys use on radio regular basis

00:11:12.305 --> 00:11:15.642
in your car radios. So send
analog A.M. signal, essentially

00:11:15.642 --> 00:11:21.314
carry a wave at the desired
frequency that you want to

00:11:21.314 --> 00:11:25.952
transmit on. Then vary the
amplitude according to your

00:11:25.952 --> 00:11:29.622
data, the modulating signal. And
the resulting signal is what

00:11:29.622 --> 00:11:32.492
gets sent out over the air and
transmits whatever. Notice how

00:11:32.492 --> 00:11:35.495
we vary one parameter in this
case the amplitude to send the

00:11:35.495 --> 00:11:39.265
data over the area. In said of
modulating the carrier analogly

00:11:39.265 --> 00:11:43.102
we could have varied between two
different amplitudes to encode

00:11:43.102 --> 00:11:47.140
digital data signal instead.
Then sending digital data is

00:11:47.140 --> 00:11:53.947
signal over A.M. is called OOK
for on/off or ASK or amplitude

00:11:53.947 --> 00:11:58.151
shift keying. To do the same
thing to your frequency modulate

00:11:58.151 --> 00:12:03.990
data. We varied the carrier
frequency according to the

00:12:03.990 --> 00:12:08.761
signal instead of the amplitude.
So, again we could have shifted

00:12:08.761 --> 00:12:12.632
between the frequencies to
encode digital data on this wave

00:12:12.632 --> 00:12:16.169
and method of encoding, digital
encoding on frequency modulator

00:12:16.169 --> 00:12:20.440
is FSK for frequency shift
keying. As we talked about^

00:12:20.440 --> 00:12:27.046
digital A.M. is ASK or OOK and
digital F.M. called FSK. We can

00:12:27.046 --> 00:12:32.118
also vary the third parameter,
the phase. Called phase shift

00:12:32.118 --> 00:12:37.023
keying. Do this to encode
digital on a wave. This talk

00:12:37.023 --> 00:12:41.794
we'll focus on BPSK we saw that
earlier. Binary phase shift

00:12:41.794 --> 00:12:46.466
keying. Basically alternating a
wave 180 degrees in and out of

00:12:46.466 --> 00:12:53.640
phase in order to ebb code
binary data on this wave. In 180

00:12:53.640 --> 00:12:55.642
degree phase shift simply
achieved by splitting the wave

00:12:55.642 --> 00:12:57.644
upside down or just multiplying
by negative one. So here each

00:12:57.644 --> 00:13:03.883
cycle of the wave corresponds to
one symbol. A bit in this case.

00:13:03.883 --> 00:13:06.319
I know it's brief but we have
the necessary knowledge on how

00:13:06.319 --> 00:13:09.455
signals are modulated gets go
one step deeper talk about

00:13:09.455 --> 00:13:15.395
spread spectrum. Spread spectrum
is basically way to take narrow

00:13:15.395 --> 00:13:17.830
band signal one that doesn't
take up too much bandwidth to

00:13:17.830 --> 00:13:21.134
transmit and spreads out over
much, much wider frequency

00:13:21.134 --> 00:13:25.104
range. This gives ability to be
much more jam resistant,

00:13:25.104 --> 00:13:28.941
introduces a property called
processing gain. Essentially

00:13:28.941 --> 00:13:33.379
processing gain the more you
spread this signal the more gain

00:13:33.379 --> 00:13:37.684
you get at the receiving ends.
You can transmit further. The

00:13:37.684 --> 00:13:41.220
processing gain actually allows
for spread signal to be received

00:13:41.220 --> 00:13:44.123
even if it's below the noise
floor at the receiving point.

00:13:44.123 --> 00:13:48.161
Spreading the signal allows for
what is called CDMA properties

00:13:48.161 --> 00:13:50.730
this stands for code division
multiple access. You probably

00:13:50.730 --> 00:13:54.233
heard about it reference to your
cell phones. What this means is

00:13:54.233 --> 00:13:57.036
that multiple devices can
transmit on the same frequency

00:13:57.036 --> 00:14:00.540
at the same time and all the
data can still get through. This

00:14:00.540 --> 00:14:03.042
is achieved through the use of
each device having a unique what

00:14:03.042 --> 00:14:06.479
we call spreading code. Remember
we saw in the tech talk called

00:14:06.479 --> 00:14:12.885
PN sequence or PN code this is
the same thing. Now there's two

00:14:12.885 --> 00:14:16.322
types of spread spectrum, the
difference is that the DSSS

00:14:16.322 --> 00:14:21.160
operates around one frequency as
shown on the left. Where as the

00:14:21.160 --> 00:14:25.164
FHSS hops between multiple
frequencies you can see on the

00:14:25.164 --> 00:14:30.803
four peaks on the right. For the
sake of this talk we'll focus on

00:14:30.803 --> 00:14:35.208
DSSS as that was what was
referenced in the Doc. Create

00:14:35.208 --> 00:14:39.245
DSS signal in this case
relatively slow BPSK signal in

00:14:39.245 --> 00:14:44.050
the case of the transmitters,
100 bits per second mixed with a

00:14:44.050 --> 00:14:47.286
very, very fast pseudorandom
signal. The resulting signal

00:14:47.286 --> 00:14:51.290
contains all the information
that is spread out over much

00:14:51.290 --> 00:14:56.295
larger bandwidth. So here you
can see the data, the signal is

00:14:56.295 --> 00:15:00.900
then spread to 1.235 megahertz
that's 12,500 sometimes wider.

00:15:00.900 --> 00:15:03.136
Notice the shape of the wave
forms are very similar in these

00:15:03.136 --> 00:15:07.473
two. This is going to be
important later. So here is a

00:15:07.473 --> 00:15:11.444
more concrete example. Our data
signal is just 0 and 1 modulated

00:15:11.444 --> 00:15:15.581
very slowly. Our pseudosequence
is binary signal that changes

00:15:15.581 --> 00:15:18.785
much, much faster the higher
frequency shown there in green.

00:15:18.785 --> 00:15:22.789
We mix those two signals
together to get a resulting

00:15:22.789 --> 00:15:26.793
signal with much higher
frequency. You see there in the

00:15:26.793 --> 00:15:31.197
red. How do we recover the data?
Simply mix the signal with the

00:15:31.197 --> 00:15:34.734
pseudo-random signal one more
time the original data falls

00:15:34.734 --> 00:15:40.640
right back out. So that's how
this whole DSS thing works. Now

00:15:40.640 --> 00:15:43.910
we talked about the PM
sequences, basically all they

00:15:43.910 --> 00:15:48.714
are that periodic binary codes
have strong auto properties.

00:15:48.714 --> 00:15:53.519
Meaning that they're binary
sequence that repeats over and

00:15:53.519 --> 00:15:56.489
over. Just interesting piece of
information if you guys end up

00:15:56.489 --> 00:15:58.891
trying some of this at home
commonly generated using linear

00:15:58.891 --> 00:16:03.729
registers. So this research
we'll look at specific type of

00:16:03.729 --> 00:16:06.632
PN sequence called M sequence.
Again we saw this in the the

00:16:06.632 --> 00:16:09.502
original spec doc. What is
interesting they correlate

00:16:09.502 --> 00:16:12.605
strongly with themselves as
phase shift of zero, very poorly

00:16:12.605 --> 00:16:17.176
in other phase shift. Let's take
a look. Up there on the left

00:16:17.176 --> 00:16:20.346
we're comparing very short M
sequence, 0001. We're comparing

00:16:20.346 --> 00:16:24.584
to itself. A phase shift to zero
has perfect correlation of four

00:16:24.584 --> 00:16:28.588
that we shiftivity once to the
left. Correlation goes to zero.

00:16:28.588 --> 00:16:31.457
Stays at zero until we bring it
back into phase. This is nice

00:16:31.457 --> 00:16:35.294
because makes searching for this
PN sequence any other signal

00:16:35.294 --> 00:16:41.033
very easy just look for it using
correlation. So, spread spectrum

00:16:41.033 --> 00:16:46.038
is simple in theory but really
more difficult in practice. In

00:16:46.038 --> 00:16:49.141
theory simply mix the signal
with the appropriate MP sequence

00:16:49.141 --> 00:16:55.147
data signal will emerge. In a
perfect world our transmitter

00:17:01.787 --> 00:17:05.558
and receiver going to have --
going to be tuned -- not going

00:17:05.558 --> 00:17:08.995
to be tuned to the exact same
frequency we need to accommodate

00:17:08.995 --> 00:17:11.597
for this frequency differential
somehow. Also remember that if

00:17:11.597 --> 00:17:15.067
the FN is not properly aligned
with itself in incoming data it

00:17:15.067 --> 00:17:18.804
won't work. Just get a garbage
signal out. We need a way to

00:17:18.804 --> 00:17:21.674
phase align with PN sequences.
It uses those auto correlation

00:17:21.674 --> 00:17:25.144
properties we talked about just
a second ago. All right. We got

00:17:25.144 --> 00:17:28.614
a little rough idea of the
theory but now to put into

00:17:28.614 --> 00:17:31.784
practice we need to build
hardware and do something. To do

00:17:31.784 --> 00:17:35.288
this I use software along with
python and the code. Also needed

00:17:35.288 --> 00:17:39.058
an appropriate antenna that I
got off of eBay and so for those

00:17:39.058 --> 00:17:43.796
that at home GlobalStar antennas
are left hand circular polarized

00:17:43.796 --> 00:17:47.099
a specific type of antenna that
you need to look up. But that's

00:17:47.099 --> 00:17:52.939
a little bit out of the scope of
this talk. For those of you who

00:17:52.939 --> 00:17:57.577
are familiar with RTL and SDR
the software, you won't be able

00:17:57.577 --> 00:18:02.581
to use for this it doesn't cover
enough bandwidth I use USRP to

00:18:02.581 --> 00:18:07.687
get for about 600 bucks, I think
all other works just fine also.

00:18:07.687 --> 00:18:09.889
We also needed low noise
amplifier for receiving some

00:18:09.889 --> 00:18:13.159
weak signals and supporting
cable and voltage regulators I

00:18:13.159 --> 00:18:16.762
got this LNA off of company
called mini circuits, it was

00:18:16.762 --> 00:18:24.437
$150. Not too bad. So this point
I package up into a box these

00:18:24.437 --> 00:18:28.607
things are pretty fragile and
package or clumsy and I didn't

00:18:28.607 --> 00:18:30.910
really want to break the
hardware. So anyway, I am

00:18:30.910 --> 00:18:34.113
outside the box we can take this
thing places and aim it at

00:18:34.113 --> 00:18:38.250
things I had it up in my tower
was aiming over at McCarron,

00:18:38.250 --> 00:18:42.421
sniffing up data from the
airport. We'll get to try that

00:18:42.421 --> 00:18:45.925
out. How does this hardware
work? Essentially the software

00:18:45.925 --> 00:18:49.762
radio, radio waves which are
analog coming in converts them

00:18:49.762 --> 00:18:54.400
to digital data that a computer
can process. Does this by taking

00:18:54.400 --> 00:18:58.070
samples of the wave. So this guy
named Nyquist came up to

00:18:58.070 --> 00:19:02.208
realization that sampling you
need to sample at least twice as

00:19:02.208 --> 00:19:04.643
fast as signal's highest
frequency in order to accurately

00:19:04.643 --> 00:19:08.214
reproduce the signal while
sampling. A real world example

00:19:08.214 --> 00:19:11.083
is that the human ear can't hear
frequencies higher than 20

00:19:11.083 --> 00:19:13.686
kilohertz. If you recall CD
audio, if you still use CDs,

00:19:13.686 --> 00:19:20.660
sampled at 44.12 kilohertz
that's just over twice the human

00:19:20.660 --> 00:19:25.097
frequency hearing range. Also
should know that software

00:19:25.097 --> 00:19:30.136
defined radio hardware uses IQ
sampling or modulation. To

00:19:30.136 --> 00:19:34.173
receive and send these signals.
This top sick a little too much

00:19:34.173 --> 00:19:38.611
to get into for now but for each
sample data taken, two values

00:19:38.611 --> 00:19:42.648
are recorded. The I and Q. Using
this IQ modulation has strong

00:19:42.648 --> 00:19:45.584
benefits for processing signals
in software. But if you're

00:19:45.584 --> 00:19:49.188
interested I suggest you check
out this YouTube video, it does

00:19:49.188 --> 00:19:53.125
really good job explaining much
better than I'll be able to do.

00:19:53.125 --> 00:19:56.729
Bottom line is you don't need to
understand this unless you're

00:19:56.729 --> 00:20:00.366
going to try this research at
home. First step to decoding

00:20:00.366 --> 00:20:03.302
satellite transmissions to
figure out that PN sequence to

00:20:03.302 --> 00:20:07.239
extract the data from the waves.
So let's put our hardware to

00:20:07.239 --> 00:20:10.509
work. Remember that we're
looking for a signal, the PN

00:20:10.509 --> 00:20:14.313
sequence that is 255 bits in
length, repeats over and over

00:20:14.313 --> 00:20:18.751
and over again. And repeats at
rate of 1.25 million chips per

00:20:18.751 --> 00:20:23.089
second. Mention that a chip is
same thing as a bit. We just

00:20:23.089 --> 00:20:25.624
name it differently to
distinguish it from actual data

00:20:25.624 --> 00:20:32.565
bits. Now interestingly enough
we can treat less spectrum the

00:20:32.565 --> 00:20:37.970
same as we treat BPSK. Check out
this graph. It's hard to show.

00:20:37.970 --> 00:20:41.941
But we can see that the BPSK
signal above shifts the wave but

00:20:41.941 --> 00:20:46.278
once every several wave cycles.
The DSSS signal shifts the wave

00:20:46.278 --> 00:20:52.585
much, much faster but in the
same way as BPSK signal. We can

00:20:52.585 --> 00:20:57.189
use ordinary modulate tore
receive the spread data now the

00:20:57.189 --> 00:21:00.960
downside of doing this is that
receiving data this way that we

00:21:00.960 --> 00:21:02.962
don't receive any of the
processing gain benefit we

00:21:02.962 --> 00:21:06.665
talked about from the signal.
Technique only works over really

00:21:06.665 --> 00:21:11.237
short distances. I was able to
do this across the room maybe

00:21:11.237 --> 00:21:17.376
100 feet away. So to accurately
receive the data we need to set

00:21:17.376 --> 00:21:21.313
our hardware to sample the data
correctly. We have to meet a few

00:21:21.313 --> 00:21:25.951
different criteria. First, the
USRP the radio I using only

00:21:25.951 --> 00:21:30.189
sample multiples of 32
megahertz. We also need to

00:21:30.189 --> 00:21:33.759
sample twice as fast as the
highest frequency component in

00:21:33.759 --> 00:21:37.229
this case that's the PN sequence
and signal 1.25 megahertz. We

00:21:37.229 --> 00:21:42.935
also need to sample rate that
even number of samples for

00:21:42.935 --> 00:21:49.241
symbol. Even number of samples
per chip. So we achieve all this

00:21:49.241 --> 00:21:54.046
by sampling at rate of 4
megahertz then resampling the

00:21:54.046 --> 00:21:58.851
signal just interpolating data
points to get up sample signal

00:21:58.851 --> 00:22:03.088
of five megahertz. What is
special about this five

00:22:03.088 --> 00:22:07.126
megahertz. Which is even number.
But now how do we get the actual

00:22:07.126 --> 00:22:10.162
PN sequence out of this date
that that we receive? What we

00:22:10.162 --> 00:22:13.132
know from doing calculations
that the MN sequence repeats 49

00:22:13.132 --> 00:22:17.203
times for each bit of data sent.
Since the sequence doesn't cross

00:22:17.203 --> 00:22:19.872
any bit boundaries would be --
we can X the -- first bit of

00:22:19.872 --> 00:22:25.878
data result is the actual PN
code. So let's use to decode the

00:22:28.380 --> 00:22:34.019
signal as BPSK and appropriate
in output the appropriate data

00:22:34.019 --> 00:22:40.626
disk. So here you can see a flow
graph, I used to do this, you

00:22:40.626 --> 00:22:43.729
can see the PSK modulator. PSK
modulator to output to binary

00:22:43.729 --> 00:22:50.035
file that will examine it. So if
you look at data in the editor

00:22:50.035 --> 00:22:56.942
we clearly see that repeating
sequence of data, 255 bits long.

00:22:56.942 --> 00:22:59.878
Starting to sound familiar.
Turns out that repeating

00:22:59.878 --> 00:23:03.716
sequence of data is the PN code.
And turns out this is pretty

00:23:03.716 --> 00:23:06.552
much the keys to the kingdom for
intercepting all this data. Code

00:23:06.552 --> 00:23:09.922
is used by all simplex data
devices to encode the data

00:23:09.922 --> 00:23:14.760
center over the air. Now that we
have the code let's try

00:23:14.760 --> 00:23:18.764
despreading some data. You
remember we need to mix the PN

00:23:18.764 --> 00:23:21.800
code with incoming signal to
receive the information and if

00:23:21.800 --> 00:23:24.937
all goes well expect output
signal to contain very strong

00:23:24.937 --> 00:23:29.208
narrow band signal shown as
asharp peak in the graph below.

00:23:29.208 --> 00:23:35.214
Above is what the normal simplex
data network signal looks like,

00:23:38.617 --> 00:23:42.054
the lumpy thing, the graphic
shows what we should see, just a

00:23:42.054 --> 00:23:45.958
nice sharp spike in there. Now
before -- again it's important

00:23:45.958 --> 00:23:49.328
to know that working with the
signals is a very

00:23:49.328 --> 00:23:51.664
computationally intense
procedure. Receiving a signal at

00:23:51.664 --> 00:23:55.000
four megahertz with software
defined works out to data rate

00:23:55.000 --> 00:23:59.004
of 30.5 megabytes per second so
for the purposes of this work

00:23:59.004 --> 00:24:01.941
we'll record the data then post
process later. Eventually

00:24:01.941 --> 00:24:05.311
possible to use more robust
custom hardware, FPGAs to do

00:24:05.311 --> 00:24:09.315
this work in realtime. That
sounds like a pain in the butt

00:24:09.315 --> 00:24:13.319
we'll just record and do it
later. Big thanks to my interns

00:24:13.319 --> 00:24:16.655
for helping me optimize this
code, used to take a minute to

00:24:16.655 --> 00:24:21.293
run now takes about like 40
seconds. How do woe we spread

00:24:21.293 --> 00:24:25.564
the data? First lock on to the
mixed sequence. We do this by

00:24:25.564 --> 00:24:29.001
correlating the receive data
signal against the recovered PN

00:24:29.001 --> 00:24:32.471
at every single point in time
we're sliding the PN against the

00:24:32.471 --> 00:24:35.007
receive data signal and
correlating. If we plot the

00:24:35.007 --> 00:24:38.043
correlation over time when the
PN is perfectly aligned we'll

00:24:38.043 --> 00:24:40.412
see a sharp spike in the core
lakes that's what you're seeing

00:24:40.412 --> 00:24:44.516
up there. This is know when to
mix the data together. If we

00:24:44.516 --> 00:24:49.254
align the PN on the first
correlation spike only, do this

00:24:49.254 --> 00:24:53.592
on frequency mismatch we'll pull
out correlation over time. As

00:24:53.592 --> 00:24:57.463
shown on the left. We fix this
by adjusting the PN four ward to

00:24:57.463 --> 00:24:59.999
backward at each and every
correlation peak to ensure it's

00:24:59.999 --> 00:25:03.535
alignment. At this point once
we're in alignment we simply mix

00:25:03.535 --> 00:25:08.374
the data together and the signal
should fall out. Let's try that.

00:25:08.374 --> 00:25:11.010
After compensating for the
frequency differential you you

00:25:11.010 --> 00:25:13.545
can see on the left the
correlation over time stays

00:25:13.545 --> 00:25:16.715
pretty constant with the slight
oscillation, that's okay. If we

00:25:16.715 --> 00:25:19.885
zoom out really far we can see
the correlation over a whole

00:25:19.885 --> 00:25:23.989
data packet you can see the
negative and positive

00:25:23.989 --> 00:25:26.725
correlations actually
representing actual data bits

00:25:26.725 --> 00:25:29.962
flying over the air. So if you
look at the signal coming out of

00:25:29.962 --> 00:25:32.931
our software sure enough we see
that sharp spike in the center

00:25:32.931 --> 00:25:36.402
indicative of our signal in
question, this means we despread

00:25:36.402 --> 00:25:39.772
our data successfully
theoretically. Zooming way in on

00:25:39.772 --> 00:25:43.008
that sharp peak we can see that
the wave form looks like BPSK

00:25:43.008 --> 00:25:47.613
signal, operating around 100
hertz and we know that the data

00:25:47.613 --> 00:25:49.615
rate in question that we're
looking for, things are looking

00:25:49.615 --> 00:25:53.352
pretty promising. All right. Now
that we're maybe receiving data

00:25:53.352 --> 00:25:57.823
let's try to decode it like
what's inside. If you look at

00:25:57.823 --> 00:26:01.493
the time demain representation
of the signal you can clearly

00:26:01.493 --> 00:26:05.597
see there's actual data bits
coming over the air. That is

00:26:05.597 --> 00:26:09.701
satellite date. That now signal
and do something with it. Namely

00:26:09.701 --> 00:26:14.606
just low pass filter it type it
into a PS data modulator. That

00:26:14.606 --> 00:26:17.443
point the data pretty much falls
right now you can see the top,

00:26:17.443 --> 00:26:21.447
nice binary string out of that
data we need to validate it. I

00:26:21.447 --> 00:26:25.017
found spec sheet that references
the data packet format which is

00:26:25.017 --> 00:26:28.587
shown right up there it starts
with the preamble a constant

00:26:28.587 --> 00:26:31.824
unique binary sequence that
tells the severe when the pack

00:26:31.824 --> 00:26:34.726
set starting then this
manufacture I.D. as well as

00:26:34.726 --> 00:26:38.363
bunch more data. So if we
convert that manufacturer I.D.

00:26:38.363 --> 00:26:42.668
set of bits to decimal sure
enough it lines up with written

00:26:42.668 --> 00:26:45.737
on the back of the device. I'm
pretty sure that means we're

00:26:45.737 --> 00:26:51.543
doing something right. So now
data packets also contain just

00:26:51.543 --> 00:26:55.881
about any information you want.
This is kind of up to the

00:26:55.881 --> 00:26:59.485
integrator thee devices are send
location data in asset trackers.

00:26:59.485 --> 00:27:03.722
So everyone uses the same data
format, it can be adjusted on

00:27:03.722 --> 00:27:06.992
the same. After extensive
comparison with the help of

00:27:06.992 --> 00:27:12.164
intern freed up the 8 to 32
latitude and 32 to 56 longitude.

00:27:12.164 --> 00:27:15.601
Simply convert those binary bits
to decimal and multiply by

00:27:15.601 --> 00:27:19.071
degree per count value that will
give you the actual. You have to

00:27:19.071 --> 00:27:24.276
sniff into the code, be online
later if you want to craft your

00:27:24.276 --> 00:27:27.579
own pockets. We'll talk more
about that. The data packets

00:27:27.579 --> 00:27:31.917
also contain a checksum. We
figure out not only validate

00:27:31.917 --> 00:27:37.589
packets we should be able to
create our own. From what we saw

00:27:37.589 --> 00:27:41.927
the comparison and devices we
looked at there was no

00:27:41.927 --> 00:27:45.564
encryption no signing no other
protection. Theoretically we can

00:27:45.564 --> 00:27:50.068
inject our own data back into
the satellite network. So,

00:27:50.068 --> 00:27:53.405
recall that we're doing all this
interception here on the data up

00:27:53.405 --> 00:27:56.208
link from the device to the
satellite. But the bent pipe

00:27:56.208 --> 00:27:59.244
nature of the GlobalStar
satellites the down link is

00:27:59.244 --> 00:28:02.514
exactly the same as the data on
the uplink. Except we just need

00:28:02.514 --> 00:28:05.584
compensate for few other things
like Doppler shift and

00:28:05.584 --> 00:28:08.987
multi-path interference. This is
an avenue for future research if

00:28:08.987 --> 00:28:12.457
anyone of you guys are
interested. A bigger dish, a

00:28:12.457 --> 00:28:15.227
little better hardware we can
start receiving a ton more data

00:28:15.227 --> 00:28:19.865
doing this same method. But all
right, now we figure the out

00:28:19.865 --> 00:28:23.302
these data packets, can we
inject it back into the network?

00:28:23.302 --> 00:28:28.574
Seriously, don't transmit on
GlobalStar frequencies, it's

00:28:28.574 --> 00:28:31.076
probably illegal where you live,
and it might interfere with

00:28:31.076 --> 00:28:33.946
critical emergency
communications, fortunately the

00:28:33.946 --> 00:28:37.015
simplex frequencies aren't used
for satellite control, per se,

00:28:37.015 --> 00:28:39.785
it's not like you're going to
make fly sideways or anything.

00:28:39.785 --> 00:28:45.791
But if you wanted to transmit,
that's actually the easy part. [

00:28:51.129 --> 00:28:54.099
laughter ] [Applause] Don't try
this at home. Wink, wink. All

00:28:54.099 --> 00:28:58.070
you do really simply mix the
data together with the PN

00:28:58.070 --> 00:29:01.607
sequence and carrier all at the
appropriate rates which are

00:29:01.607 --> 00:29:05.911
listed here in this talk, I'm
not going to be providing my

00:29:05.911 --> 00:29:09.881
code that I designed but if
you're savvy enough you should

00:29:09.881 --> 00:29:14.920
be able to do it. All you need
is about .2 watts of power,

00:29:14.920 --> 00:29:18.523
appropriate amplifier on the
Internet for 200 bucks and you

00:29:18.523 --> 00:29:22.494
can write the code, it's pretty
simple. What if there was

00:29:22.494 --> 00:29:26.765
seesier way. GlobalStar provides
OSX update utility for one of

00:29:26.765 --> 00:29:31.269
their spot trace devices their
personal asset trackers, inside

00:29:31.269 --> 00:29:33.972
the application package there's
a tool, spot three firm wear

00:29:33.972 --> 00:29:37.809
tool and contains all sorts of
interesting functionality that

00:29:37.809 --> 00:29:41.913
never called by the actual
consumer up data app. If you

00:29:41.913 --> 00:29:46.551
look in the jar, there's bug
console which references

00:29:46.551 --> 00:29:50.355
something in the spot device
class called, right ESP,

00:29:50.355 --> 00:29:54.192
electronic serial number. What
if we wrote java app to call

00:29:54.192 --> 00:29:58.730
that console. Sure enough
functionality, right there. In

00:29:58.730 --> 00:30:02.300
the software on their website.
Bug console left us update the

00:30:02.300 --> 00:30:05.704
ESN of any of these spot trace
devices out there we can change

00:30:05.704 --> 00:30:08.573
the serial number of these
devices, essentially cloning it.

00:30:08.573 --> 00:30:12.377
Think cloning cell phones,
whatever. To prove this I cloned

00:30:12.377 --> 00:30:15.981
one of my spot trackers, which
the others ESN told it to

00:30:15.981 --> 00:30:19.651
transmit and sure enough I got a
tracking back that confirmed we

00:30:19.651 --> 00:30:24.389
were able to clone the device.
For $50 you can clone satellite

00:30:24.389 --> 00:30:28.627
network devices and maybe
coordinates and shenanigans. But

00:30:28.627 --> 00:30:33.432
besides the obvious of using
network to transmit your own

00:30:33.432 --> 00:30:36.835
data or expanding capabilities
of your service, maybe sending

00:30:36.835 --> 00:30:39.404
more packets than you're allowed
to per hour, what can we do with

00:30:39.404 --> 00:30:44.609
the data transmission
capability. Can we get in bit

00:30:44.609 --> 00:30:47.813
more trouble? First these
devices are used very commonly

00:30:47.813 --> 00:30:51.116
in emergency response. One
scenario, what if an attacker

00:30:51.116 --> 00:30:54.319
spoofed thousands of false
emergencies and jammed um the

00:30:54.319 --> 00:30:57.189
emergency response center
preventing aid from getting to

00:30:57.189 --> 00:31:00.358
an actual emergency. Or what
about monitoring for help

00:31:00.358 --> 00:31:03.595
requests in these devices just
cancelling the help request.

00:31:03.595 --> 00:31:08.633
Kind of of a Dick move but
someone might do it. I talked to

00:31:08.633 --> 00:31:12.204
a really, really well-known
reporter couple days ago and she

00:31:12.204 --> 00:31:16.875
used to work out of the middle
east as a correspondent for ten

00:31:16.875 --> 00:31:20.812
years, she said that journalists
use these spot devices to track

00:31:20.812 --> 00:31:23.348
their whereabouts in case
they're kidnapped. They're

00:31:23.348 --> 00:31:27.285
relying on these devices, some
people know where they are. Was

00:31:27.285 --> 00:31:30.889
sniffing up this data, people
using these for their safety,

00:31:30.889 --> 00:31:35.193
that's not cool. Turns out these
chips are also used in access

00:31:35.193 --> 00:31:38.063
control systems, by law
enforcement even for animal

00:31:38.063 --> 00:31:42.334
tracking, I think it would be
hilarious to say that a wild

00:31:42.334 --> 00:31:46.004
grizzly had relocates itself to
suburban California then see

00:31:46.004 --> 00:31:49.508
what they say. I also forgot to
mention that they're used

00:31:49.508 --> 00:31:53.278
heavily in data systems. I'm not
naming specifics, you guys are

00:31:53.278 --> 00:31:57.048
bunch of hooligans who probably
get in trouble but commonly used

00:31:57.048 --> 00:32:00.051
in water quality sensors,
pipeline monitoring, lot of big

00:32:00.051 --> 00:32:04.156
oil and gas operations. I was
thinking what if there's a big

00:32:04.156 --> 00:32:07.926
rival oil company that wanted to
figure out where the competitor

00:32:07.926 --> 00:32:12.030
was drilling, just fire up your
own base station just have look

00:32:12.030 --> 00:32:15.100
for yourself. But wait, there's
more. Lockheed Martin flight

00:32:15.100 --> 00:32:18.203
services, the contractor that
handle flight planning for the

00:32:18.203 --> 00:32:22.641
FAA allows these spot devices to
be used to track any VFR flight.

00:32:22.641 --> 00:32:26.044
What if an attacker made
airplane appear to deviate from

00:32:26.044 --> 00:32:29.481
its original flight plan into
tightly controlled air space. I

00:32:29.481 --> 00:32:33.585
haven't tried this, but it would
be interesting to see see what

00:32:33.585 --> 00:32:36.655
happened. Demonstrate some of
this, I built a little

00:32:36.655 --> 00:32:40.425
capability, which I'll talk a
little bit about. The way it

00:32:40.425 --> 00:32:44.462
works is that I sit with the
device in the uplink path of the

00:32:44.462 --> 00:32:47.632
transmitter. This is what I was
doing a couple nights ago. Over

00:32:47.632 --> 00:32:50.268
time I'm able to pick up
countless transmissions from

00:32:50.268 --> 00:32:55.340
asset trackers. I did some
research a year ago talking

00:32:55.340 --> 00:32:58.710
about mapping patterns from
mobile vulnerability location

00:32:58.710 --> 00:33:02.447
tracking. And able to monitor
users over a fixed period of

00:33:02.447 --> 00:33:06.585
time and figure out where is
home, where is work, just by

00:33:06.585 --> 00:33:10.722
where they are different times
of the day. It's key to tracking

00:33:10.722 --> 00:33:14.626
somebody. This makes it really
easy to identify what a target

00:33:14.626 --> 00:33:17.729
is and where it goes, in this
case we'll monitor an armored

00:33:17.729 --> 00:33:22.834
car route. Now that I know where
the armored car is I know where

00:33:22.834 --> 00:33:27.672
to hijack it. And I hijack the
car, disable and begin spoofing

00:33:27.672 --> 00:33:30.508
their beacon's I.D. with my
transmitter and spoof GPS

00:33:30.508 --> 00:33:33.945
coordinates that the armored car
is on route when in reality I'm

00:33:33.945 --> 00:33:38.250
driving it somewhere else and
robbing the bank blind. Think

00:33:38.250 --> 00:33:41.920
"Fast and furious." So you might
ask, does this work. Short

00:33:41.920 --> 00:33:45.991
answer is yes. I needed high
vantage point, only solution to

00:33:45.991 --> 00:33:48.159
go out start working on my
private pilot license to

00:33:48.159 --> 00:33:51.062
intercept the data from the air.
I've been flying with this

00:33:51.062 --> 00:33:53.732
thing, we'll see where it's
going, results are pretty

00:33:53.732 --> 00:33:59.137
promising so far. I'm going to
do a little demo, show you how

00:33:59.137 --> 00:34:02.941
this works. Decided not to tempt
the live demo gods but I broke

00:34:02.941 --> 00:34:07.679
it up step by step to talk about
it a little bit. Bear with me

00:34:07.679 --> 00:34:13.685
here while I fire up the video.
Is it up there full screen?

00:34:17.022 --> 00:34:23.028
We're going to wait for data
signal from an attacker or from

00:34:25.630 --> 00:34:30.669
someone that transmits.
Intercepting the data right

00:34:30.669 --> 00:34:33.872
there. And so captures the data,
writes the data out to disk.

00:34:33.872 --> 00:34:37.943
We're going to throw that data
in our despreading python

00:34:37.943 --> 00:34:41.746
program here, kind of cropped
the video it takes a minute to

00:34:41.746 --> 00:34:46.318
analyze the data packet. And,
okay, it locks on to the PN

00:34:46.318 --> 00:34:52.324
signal in the signal and starts
despreading. I'll finish up

00:34:52.324 --> 00:34:55.994
here. Then we can see, pretty
constant correlation over time

00:34:55.994 --> 00:34:58.096
that's what we're looking for.
It means we locked on to the PN

00:34:58.096 --> 00:35:03.368
signal successfully. Then that
back to radio code to visualize

00:35:03.368 --> 00:35:06.171
what we got. And you're going to
be able to see that sharp peak

00:35:06.171 --> 00:35:08.740
in the middle we'll zoom in up
there, be able to see the live

00:35:08.740 --> 00:35:15.280
data bits flying by. Then
meanwhile this is writing the

00:35:15.280 --> 00:35:21.286
data bits out to disk for us to
analyze. Then we're going to go

00:35:24.222 --> 00:35:27.459
ahead analyze those data bits,
we should get the binary packet

00:35:27.459 --> 00:35:30.695
data out if all goes well. So
there's the binary of the

00:35:30.695 --> 00:35:35.033
packet. Let's throw that into
the packet decoder and verifier

00:35:35.033 --> 00:35:39.237
through successfully validate a
packet print out parameters.

00:35:39.237 --> 00:35:41.906
This can all be all line as well
more to dive in into the user's

00:35:41.906 --> 00:35:46.978
specific data, translate that to
latitude and longitude. Let's go

00:35:46.978 --> 00:35:52.917
back to the presentation. All
right. Couple conclusions. Few

00:35:52.917 --> 00:35:54.986
parting thoughts for you guys. I
GlobalStar senior engineering

00:35:54.986 --> 00:35:57.589
staff about 180 days ago they
were actually really friendly in

00:35:57.589 --> 00:36:00.825
response and seemed very
concerned I get the impression

00:36:00.825 --> 00:36:04.029
they don't deal with a lot of
these disclosures, not very

00:36:04.029 --> 00:36:10.035
typical. I provided indepth ten
fold detail for them hoping of

00:36:13.571 --> 00:36:17.308
helping out never really heard
back. After we spoke they issued

00:36:17.308 --> 00:36:20.812
statement taking privacy very
seriously monitoring in place to

00:36:20.812 --> 00:36:24.115
detect these sort of attacks,
unfortunately half the attack is

00:36:24.115 --> 00:36:27.852
passive no way that can be
detected. The transmitting

00:36:27.852 --> 00:36:30.188
portion if targeted really has a
low probability of being

00:36:30.188 --> 00:36:33.892
detected. So, in some of the
recent statements, GlobalStar

00:36:33.892 --> 00:36:36.561
seemed quite defensive I don't
know about you guys I tend to

00:36:36.561 --> 00:36:39.464
get a little bit upset when
manufacturers get this way

00:36:39.464 --> 00:36:42.801
rather than addressing the
actual issue at hand. He in my

00:36:42.801 --> 00:36:45.837
experience these vulnerabilities
are always discovered one way or

00:36:45.837 --> 00:36:48.840
another. It's better to get them
addressed sooner than later last

00:36:48.840 --> 00:36:50.909
year I disclosed a bug to
grinder about being able to

00:36:50.909 --> 00:36:53.445
track their super mobile data
app they said it wasn't an

00:36:53.445 --> 00:36:56.715
issue, didn't patch it. Six
months later the Egyptian police

00:36:56.715 --> 00:36:59.984
got ahold of that bug began
using to arrest gay men in

00:36:59.984 --> 00:37:04.289
Egypt. I really hate for these
vulnerabilities to be used for

00:37:04.289 --> 00:37:07.492
bad I'd rather see these get
patched and we're able to make

00:37:07.492 --> 00:37:10.495
the systems a lot safer for the
end users. So, I sincerely hope

00:37:10.495 --> 00:37:13.898
that GlobalStar is serious about
their statement of issues, I

00:37:13.898 --> 00:37:16.968
hope other manufacturers are
paying attention as well. But

00:37:16.968 --> 00:37:20.472
I'm really looking forward to
seeing the solutions or seeing

00:37:20.472 --> 00:37:22.907
what solutions come out of the
community. Bottom line is

00:37:22.907 --> 00:37:27.011
there's still a lot of work to
be done. I'm using my code on

00:37:27.011 --> 00:37:30.014
GetHub, I apologize I don't have
it up yet it's been crazy here

00:37:30.014 --> 00:37:33.384
at the conference, parties and
things. But it will be up soon.

00:37:33.384 --> 00:37:38.757
And I love to collaborate on the
whole system maybe intercepting

00:37:38.757 --> 00:37:42.026
data on the downlink, let's work
on this together if you're

00:37:42.026 --> 00:37:44.028
interested. I have feeling this
is only the tip of the iceberg

00:37:44.028 --> 00:37:46.397
of seeing where this thing is
used we'll start seeing a lot of

00:37:46.397 --> 00:37:51.603
interesting things fall out. If
you're interested, help out. In

00:37:51.603 --> 00:37:54.372
conclusion I still believe
GlobalStar makes a good product.

00:37:54.372 --> 00:37:57.308
But couple much take-aways. I
remember that the air space

00:37:57.308 --> 00:37:59.944
products in satellites in
airplanes have long life cycle

00:37:59.944 --> 00:38:02.480
and we're stuck with them for
years to come. And the way that

00:38:02.480 --> 00:38:05.783
GlobalStar system is implemented
it's not really patchable or

00:38:05.783 --> 00:38:09.154
easily patchable. A lot of the
devices don't support upgrades

00:38:09.154 --> 00:38:13.725
or so far out in the boonies
it's not realistic. The best

00:38:13.725 --> 00:38:17.762
thing a layer of encryption on
top of the protocol and remember

00:38:17.762 --> 00:38:21.633
that obscurity is not security.
It won't protect your data.

00:38:21.633 --> 00:38:28.540
Consumers, just assume can act
accordingly we hear this a lot.

00:38:28.540 --> 00:38:31.976
Hold them to a higher standard,
demand security. And if not,

00:38:31.976 --> 00:38:36.414
demand to know how you're date
is being transmitted is it

00:38:36.414 --> 00:38:40.885
encrypted, if not, how so. Big
thanks to the interns over

00:38:40.885 --> 00:38:45.757
there. For helping out. With
testing and code authorization.

00:38:45.757 --> 00:38:48.993
[ Applause ] Yeah. Thanks, guys.
Then for funding this different,

00:38:48.993 --> 00:38:54.265
crazy research. But it will be
live later, hit me up if it

00:38:54.265 --> 00:38:59.137
doesn't come up. Feel free to
e-mail me, tweet me, I'm always

00:38:59.137 --> 00:39:03.808
happy to talk. Thanks for coming
out. Questions, comments, we got

00:39:03.808 --> 00:39:09.814
five minutes. [ inaudible ] >>
Can we use the do -- from one

00:39:15.954 --> 00:39:18.022
location to another sneak in
some formation? >> We use the

00:39:18.022 --> 00:39:22.560
bent pipe to send other
information. That's a great

00:39:22.560 --> 00:39:28.266
question. And you certainly can.
I don't recommend it. There's

00:39:28.266 --> 00:39:32.237
nothing -- someone probably is,
you have to speculate. But,

00:39:32.237 --> 00:39:36.641
yeah, repeats anything it hears
on the range and beams back down

00:39:36.641 --> 00:39:39.143
in 7 gigahertz you can build
your own receiver and use your

00:39:39.143 --> 00:39:44.816
own personal satellite network.
>> Does it need to be on a

00:39:44.816 --> 00:39:48.920
protocol or packet or it
transmits anything that it

00:39:48.920 --> 00:39:53.124
receives? >> I missed that. >>
Does it need to be in coded in a

00:39:53.124 --> 00:39:58.196
specific format or not -- >> The
data can really be any format.

00:39:58.196 --> 00:40:01.966
Bent pipe doesn't do any
interpretation, it reads a

00:40:01.966 --> 00:40:04.502
repeater. Probably need to be
some sort of spread spectrum to

00:40:04.502 --> 00:40:08.339
get it over that distance, but
you can use model very similar

00:40:08.339 --> 00:40:14.312
to what they're doing here. >>
Thank you. Anyone else? Fee

00:40:14.312 --> 00:40:22.153
Friel to come up after. Cool,
thanks, guys. Appreciate it.

00:40:22.153 --> 00:40:24.155
[ Applause ]

