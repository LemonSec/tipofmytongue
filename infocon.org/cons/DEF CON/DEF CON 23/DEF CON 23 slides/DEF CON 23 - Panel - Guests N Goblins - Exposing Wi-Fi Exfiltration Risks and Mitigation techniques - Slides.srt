00:00:00.267 --> 00:00:03.804
presentation is called "Guests
N' Goblins: Exposing Wi-Fi

00:00:03.804 --> 00:00:10.577
Exfiltration and Mitigration
Techniques." With me is Pete and

00:00:10.577 --> 00:00:16.583
Naveed. We work for a company
called TELUS. And we are a tele

00:00:18.952 --> 00:00:24.291
communication company and we are
based out of Canada. Again, my

00:00:24.291 --> 00:00:31.098
name is Josh and I have been
working on my book and I enjoy

00:00:31.098 --> 00:00:35.936
watching movies that nobody
should watch in their right mind

00:00:35.936 --> 00:00:43.710
what so ever. On to Pete. >> I'm
Pete. I live in a cave. I don't

00:00:43.710 --> 00:00:49.716
get out that much. I don't know
how to talk, that's why I have

00:00:53.954 --> 00:00:59.960
these two guys with me. Thanks,
guys. By day, I'm a security

00:01:18.812 --> 00:01:23.517
analyst and by night, I like to
break things and my hobbies is

00:01:23.517 --> 00:01:29.523
breaking more things. I always
end up with more screws. Damned

00:01:32.492 --> 00:01:39.032
screws. And here is Naveed. >>
My name is Naveed and I work

00:01:39.032 --> 00:01:45.038
with the security department. My
job is to work on the outside of

00:01:48.442 --> 00:01:54.448
the network. I keep an eye on
the customer parameter and I

00:01:58.552 --> 00:02:04.491
collect intelligent analyst and
what is happening on the inside.

00:02:07.194 --> 00:02:11.865
Keeping an eye on all of the
IP's that are coming this is

00:02:11.865 --> 00:02:17.404
part of my job. A little bit of
background. A lot of people know

00:02:17.404 --> 00:02:19.406
about Tor and Hula. They are
getting popularity. They hide

00:02:19.406 --> 00:02:21.408
your IP address. The question is
what is a fingerprint? If you

00:02:21.408 --> 00:02:24.778
are not on a network, your
fingerprint is going to be the

00:02:24.778 --> 00:02:26.780
Tor network and adding
complexity, we are going to talk

00:02:26.780 --> 00:02:28.782
about Wi-Fi. Anyone here heard
of proxy M? Anyone heard of

00:02:28.782 --> 00:02:30.784
them? We all know that security
is a big concern and if you are

00:02:30.784 --> 00:02:32.786
an enterprise and deploying a
Wi-Fi network and you try and

00:02:32.786 --> 00:02:34.788
isolate and try and employ the
latest encryption and however,

00:02:34.788 --> 00:02:36.790
is it really secure? And helping
you in the future. One of the

00:02:36.790 --> 00:02:38.792
features is to deploy all of the
Wi-Fi networks is for

00:02:38.792 --> 00:02:40.794
convenience and for the public
space, I'm going to switch to

00:02:40.794 --> 00:02:42.796
Josh. >> So, just a quick
question for everybody. How many

00:02:42.796 --> 00:02:44.798
people here use Wi-Fi. Hands up.
All right. How many people trust

00:02:44.798 --> 00:02:46.800
Wi-Fi? But we all use it. It is
a little weird when you think

00:02:46.800 --> 00:02:51.271
about it. Any ways, as our
presentation is titled -- one of

00:02:51.271 --> 00:02:57.277
the problems is people getting
into your Wi-Fi and doing that

00:03:04.951 --> 00:03:10.957
stuff. TELUS has open Wi-Fi for
people to get on and also,

00:03:16.463 --> 00:03:19.800
secure. Maybe, you can wiggle
around. With exfiltration and

00:03:19.800 --> 00:03:21.802
not a lot of people are
monitoring outside traffic.

00:03:21.802 --> 00:03:23.804
People are monitoring people
coming in and not a lot of

00:03:23.804 --> 00:03:25.806
people monitoring outside going
in. And let's create a quick

00:03:25.806 --> 00:03:27.808
scenario. TELUS has Wi-Fi and a
major competitor up in Canada is

00:03:27.808 --> 00:03:29.810
Rogers and what happens if
someone jumped on our network

00:03:29.810 --> 00:03:31.812
and launched a form of attack to
our network to Rogers and the

00:03:31.812 --> 00:03:33.814
smear campaign would read that
Rogers were implicated in a

00:03:33.814 --> 00:03:35.816
massive attack against TELUS and
even though, they have not done

00:03:35.816 --> 00:03:41.822
a major attack, it is in the
news and people are going to

00:03:52.466 --> 00:03:56.870
lose faith in TELUS. We were
quite concerned about that. >>

00:03:56.870 --> 00:04:00.707
Branding, in general is
something that a lot of

00:04:00.707 --> 00:04:04.177
companies and corporations spend
millions and millions dollars

00:04:04.177 --> 00:04:08.915
for. Besides the whole TELUS
thing, it could be anybody. It

00:04:08.915 --> 00:04:14.121
takes one small incident and
having it out there and you are

00:04:14.121 --> 00:04:19.759
done. >> And on to Naveed. >> A
person supplies an email address

00:04:19.759 --> 00:04:24.965
and you have to basically trust
them. You have to send a

00:04:24.965 --> 00:04:30.604
verification code in the email
and how can you check it if your

00:04:30.604 --> 00:04:35.442
customer can't access the email
address? So, we provide an email

00:04:35.442 --> 00:04:41.448
address that we trust and let
the guest join the network and

00:05:09.609 --> 00:05:15.615
there we go. That's a big
problem. And SSL is a problem.

00:05:46.746 --> 00:05:52.752
You cannot provide monitoring of
what is going out from your

00:06:20.714 --> 00:06:26.720
guest network. On top of it, the
Mac addresses and if you have

00:06:48.308 --> 00:06:54.314
allowed someone and you can have
someone spoofing your Mac

00:07:00.820 --> 00:07:06.826
address taking the identity.
Introduction to our concept. >>

00:07:12.966 --> 00:07:20.340
Our concept, we have developed a
system that has two servers and

00:07:20.340 --> 00:07:22.375
dedicated IP's and they scan for
Wi-Fi and if there is anything

00:07:22.375 --> 00:07:24.744
that a guest needs a page to
logon to. For the sake of this,

00:07:24.744 --> 00:07:26.780
it is straight open. It tags the
location and learns about the

00:07:26.780 --> 00:07:28.782
network, and collects the public
fingerprints and syncs with the

00:07:28.782 --> 00:07:30.784
central server. There is a list
of stuff that we have spent many

00:07:30.784 --> 00:07:32.786
weekends banging our heads
against the wall. And Josh has

00:07:32.786 --> 00:07:34.788
gone through the tools. The
analytics and the Android

00:07:34.788 --> 00:07:36.790
phones. The tool kit or suite is
broken up in two pieces. Garble

00:07:36.790 --> 00:07:38.792
is data connectivity and data
connection and the repo is the

00:07:38.792 --> 00:07:40.794
results of all of the
collecting. >> So, back to me.

00:07:40.794 --> 00:07:42.796
This is my part. What is it in a
nutshell? It is basically a

00:07:42.796 --> 00:07:44.798
Wi-Fi scanner with spilled radon
built into it. It gathers core

00:07:44.798 --> 00:07:46.800
information and the encryption
uses and anything that it can't

00:07:46.800 --> 00:07:52.739
find, it will store. First, scan
for the access points and then,

00:07:52.739 --> 00:07:58.745
the values. Like your ESS ID
etc. And flexible values, so

00:08:03.650 --> 00:08:08.922
your location and signal
strength. I'm going to come back

00:08:08.922 --> 00:08:14.928
to that later, just to explain
why that is why it is. And

00:08:49.162 --> 00:08:55.168
three, we enhance the location
data and compare to the existing

00:09:23.129 --> 00:09:29.135
data and through the process, we
select it. Let's go to the

00:09:52.392 --> 00:09:55.728
flexible data information. When
you first connect to an access

00:09:55.728 --> 00:09:57.997
point, it is going to tell you
how strong that signal is. We

00:09:57.997 --> 00:09:59.999
are going to take it one-step
further and while you are

00:09:59.999 --> 00:10:02.202
walking, it is going to take
samples and as it is going i

00:10:02.202 --> 00:10:04.204
long and as the signal
increases, it is going to find

00:10:04.204 --> 00:10:06.206
the access point and where it
actually exists and then, it is

00:10:06.206 --> 00:10:08.208
going to dip into that location.
There are (Indiscernible) with

00:10:08.208 --> 00:10:10.210
this technique that I will cover
at the end of the presentation.

00:10:10.210 --> 00:10:12.212
It actually is working pretty
darn good by just using bits.

00:10:12.212 --> 00:10:15.348
How do we select the candidate?
First, do we have any results

00:10:15.348 --> 00:10:19.419
what so ever? If the answer is
yeah, we go to the access point.

00:10:19.419 --> 00:10:25.425
If the answer is yes, we pass it
off to Pete scripts and if it is

00:10:36.202 --> 00:10:38.204
weakened, maybe, we can pass it
to Pete's scripts and stuff can

00:10:38.204 --> 00:10:40.206
happen. We may store the
information for later usage and

00:10:40.206 --> 00:10:42.208
you may have the strong access
points and you are only going to

00:10:42.208 --> 00:10:44.210
be able to connect to one
because let's face it; Android

00:10:44.210 --> 00:10:46.212
phones don't have networks
bouncing off of the side of it.

00:10:46.212 --> 00:10:48.214
Usually, just one. Here's a
screen of the app itself. This

00:10:48.214 --> 00:10:54.220
is something that we picked up
last night. If you would like a

00:11:18.678 --> 00:11:24.684
live demo of this later on, come
and find me. I'm going to be

00:11:39.265 --> 00:11:45.271
hanging around and if it is on
my phone, it is in limited

00:12:13.299 --> 00:12:17.770
capacity to make sure that it is
not doing anything iffy. And

00:12:17.770 --> 00:12:23.776
now, to garble. >> And once
that's done, it is passed on to

00:12:30.016 --> 00:12:36.022
me or my module and I look for
open networks. I connect to that

00:12:38.291 --> 00:12:42.629
same network and find out your
public gateway from the inside

00:12:42.629 --> 00:12:50.003
and I make an inbound connection
and to determine which ports are

00:12:50.003 --> 00:12:55.842
open based on a range or port
specified or configed. What I

00:12:55.842 --> 00:13:00.313
mean is port loud outside.
Whatever is allowed out bound

00:13:00.313 --> 00:13:06.586
from a policies, gateway,
firewalls, etc. I store them in

00:13:06.586 --> 00:13:10.089
a database and for the parsing
and the plotting. And then, hand

00:13:10.089 --> 00:13:12.892
it off to Naveed. And then, it,
it works with Python sockets and

00:13:12.892 --> 00:13:17.263
left crying. [ LAUGHTER ] This
one here, I will get back to

00:13:17.263 --> 00:13:23.269
you, again, a little part of it.
Basically, this is one section

00:13:25.305 --> 00:13:31.310
of some of the sets that we have
collected and just to go over

00:13:41.721 --> 00:13:46.359
quickly. We have collected the
Mac addresses of the AP's and

00:13:46.359 --> 00:13:52.365
the names of them. The SSID's
and the off mode and in this

00:13:55.068 --> 00:14:02.342
particular app, there is WPA,
ISM and it also gets the

00:14:02.342 --> 00:14:08.347
latitude and longitude and it is
taken from the phone or the

00:14:10.383 --> 00:14:16.389
device itself. And then, the
public gateway. Naveed is going

00:14:24.731 --> 00:14:30.737
to talk, but those are the
longitudes and the latitudes of

00:14:38.511 --> 00:14:44.684
the gateway, which later, you
will see why it is important. >>

00:14:44.684 --> 00:14:50.690
Mine part is the utilization of
the data. This is the basic idea

00:14:56.496 --> 00:15:02.502
of the device collection. There
is a second part to it, which is

00:15:02.502 --> 00:15:08.107
the reversal scan engine. In
addition to this (Indiscernible)

00:15:08.107 --> 00:15:12.078
latitude and longitude applying
and the server or the public

00:15:12.078 --> 00:15:17.083
side of the connection. We have
a server that responds to all of

00:15:17.083 --> 00:15:22.255
the ports that you ask for. The
server scans and gets the scans

00:15:22.255 --> 00:15:27.527
of the open ports that are
available. This is running a

00:15:27.527 --> 00:15:30.096
(Indiscernible), which responds
to a range, which is configured

00:15:30.096 --> 00:15:32.165
into it. The basically plan was
to have IP (Indiscernible) and

00:15:32.165 --> 00:15:34.400
let's give it a try with new
technologies. It does let you

00:15:34.400 --> 00:15:36.402
have a real-time on the front
end. Longer (Indiscernible) is

00:15:36.402 --> 00:15:39.539
or noted and feel free to try it
out. This is basically, what you

00:15:39.539 --> 00:15:45.545
plot. Once you have the IP and
it is on the Internet and the

00:15:57.924 --> 00:15:59.926
location. If you are connected
here to the monitoring people

00:15:59.926 --> 00:16:01.861
who are monitoring your traffic,
you are going to appear here.

00:16:01.861 --> 00:16:03.863
This scan for the reversal and I
will tell you that if you are

00:16:03.863 --> 00:16:05.865
using this open Wi-Fi
connection, you are allowed to

00:16:05.865 --> 00:16:07.867
go out on 1 --> 000 to 1500 to 72,
as an example. This is a fixed

00:16:07.867 --> 00:16:09.869
range. It goes to any port that
you want. Now, to a demo. Right?

00:16:09.869 --> 00:16:12.038
How much time do we have? [
Laughs ] Okay, the tool is a

00:16:12.038 --> 00:16:14.040
meteor instance of a real-time
belt. I'm going to start it

00:16:14.040 --> 00:16:16.142
here. Is the screen big enough?
>> No. >> Yep. Hold on a second.

00:16:16.142 --> 00:16:18.211
[ LAUGHTER ] >> This is what
happens when you use a Mac, I

00:16:18.211 --> 00:16:20.213
guess. [ LAUGHTER ] [ Yay ] [
APPLAUSE ] >> Once, we have the

00:16:20.213 --> 00:16:22.215
meteor run and the website up,
and then, (Indiscernible) okay.

00:16:22.215 --> 00:16:27.453
So, what Pete gives us, it
collects that data from Josh and

00:16:27.453 --> 00:16:32.024
attaches the coordinates and
once the data is compiled in the

00:16:32.024 --> 00:16:39.031
file, it creates the file. You
can up load to the system. The

00:16:39.031 --> 00:16:45.605
system is going to keep an eye
on the folder. Once the system

00:16:45.605 --> 00:16:48.140
is detected, it is going to
compile it. There is also

00:16:48.140 --> 00:16:54.146
another way and that's manual
and I'm going to show you right

00:17:00.853 --> 00:17:08.361
now. This is what we scanned
before coming here. The file has

00:17:08.361 --> 00:17:11.364
been uploaded. You can see it is
reading the port information

00:17:11.364 --> 00:17:14.934
from this scan. Once it is done,
I'm going to refresh the page.

00:17:14.934 --> 00:17:18.504
It is the same from the previous
slide and this guest network and

00:17:18.504 --> 00:17:20.973
you are appearing here
basically, in GTA from Richmond

00:17:20.973 --> 00:17:24.544
Hill. A better example, however,
Josh was taking a ride on B rail

00:17:24.544 --> 00:17:27.580
and I'm going to open this
camera and once it's processed.

00:17:27.580 --> 00:17:30.850
Yep. I'm going to refresh the
page here. And you can see,

00:17:30.850 --> 00:17:33.619
real-time in Union Station
Toronto. >> Basically, I was on

00:17:33.619 --> 00:17:37.189
a trip and I decided to poke
around and see where we are

00:17:37.189 --> 00:17:40.192
actually exiting. While I was
waiting for the train to move,

00:17:40.192 --> 00:17:44.297
my exit point for the free Wi-Fi
on the train was saying I was in

00:17:44.297 --> 00:17:47.600
Ottawa and we also get Amtrak.
Where does that exit? Does it

00:17:47.600 --> 00:17:51.437
exit in the states? I have not
tried it as much I should, I

00:17:51.437 --> 00:17:53.439
guess. But thinking about
multinational companies and

00:17:53.439 --> 00:17:56.676
where do their access points
actually exit? Do they set it up

00:17:56.676 --> 00:17:59.912
local? In some cases, yes. Do
they set it up remotely and

00:17:59.912 --> 00:18:05.017
tunnel across the network. Quite
possibly. If you want to have an

00:18:05.017 --> 00:18:11.157
entry point from one country to
another and this is why we are

00:18:11.157 --> 00:18:17.263
concerned about this thing to
keep an eye on this. >> Just to

00:18:17.263 --> 00:18:22.935
add, once it is imported, we
refresh it. >> This is what

00:18:22.935 --> 00:18:28.107
happens when you have to make
data manually in the last

00:18:28.107 --> 00:18:33.312
minute. >> Thanks, Pete. Exit
point in different point in the

00:18:33.312 --> 00:18:38.951
world. That's part of the server
side. For the client side, the

00:18:38.951 --> 00:18:44.957
one that detects the port on the
traffic. I'm going to show you

00:18:54.333 --> 00:19:00.272
here. This is the Python Script
that talks to the server. If you

00:19:14.420 --> 00:19:16.956
run it, the server responding on
the other side is telling us

00:19:16.956 --> 00:19:19.692
that this port is allowed and we
are making a list and the

00:19:19.692 --> 00:19:21.827
mapping based on the script
here. The interesting side of

00:19:21.827 --> 00:19:24.363
the story, you don't need Python
or any other server side script.

00:19:24.363 --> 00:19:26.899
The whole scan can be done on
the client side using belt

00:19:26.899 --> 00:19:29.635
pockets. I think that I have
written a code here that I can

00:19:29.635 --> 00:19:31.771
show you. I have an older
instance that is running

00:19:31.771 --> 00:19:34.306
locally. It is not listening to
all of the ports on this

00:19:34.306 --> 00:19:37.043
machine, but you will get the
idea. If I run the command in

00:19:37.043 --> 00:19:39.812
the browser, local IP and the
port range and it is going to

00:19:39.812 --> 00:19:42.548
tell me all of the port sockets
that are blocked and the ones

00:19:42.548 --> 00:19:45.317
that are allowed. So, let me
turn this on. I'm going to turn

00:19:45.317 --> 00:19:48.487
it on, on one port only and read
my scan. You can see that the

00:19:48.487 --> 00:19:50.823
client detected 1337 as an open
port. You can map this

00:19:50.823 --> 00:19:53.125
(Indiscernible). Okay. Off to
Josh. >> All right. So, like you

00:19:53.125 --> 00:19:55.261
can see, we are quite concerned
about this. Full disclosure.

00:19:55.261 --> 00:19:57.363
This was not the actually the
first convention that we

00:19:57.363 --> 00:20:00.032
submitted this presentation to.
This is the second one. The

00:20:00.032 --> 00:20:02.802
first one was sector is more for
the people that we end up

00:20:02.802 --> 00:20:04.804
working with nine times out of
ten. We presented this to them

00:20:04.804 --> 00:20:06.806
and you should watch the traffic
that is leaving your network and

00:20:06.806 --> 00:20:08.808
you could be implicated and bad
things are happening and people

00:20:08.808 --> 00:20:10.810
are using it for weird things
and please let us tell our story

00:20:10.810 --> 00:20:12.812
and we got a meh, which was
disheartening really. It happens

00:20:12.812 --> 00:20:14.814
more often than not. If it is
not shiny and flashy, people

00:20:14.814 --> 00:20:16.816
just are not interested. The
things that we like to present

00:20:16.816 --> 00:20:18.818
as an option to hold back this.
Prior the review of our traffic

00:20:18.818 --> 00:20:20.820
and firewall policies, both
ways. A lot of people do it one

00:20:20.820 --> 00:20:22.822
way on a somewhat frequent
basis. Egress is done when they

00:20:22.822 --> 00:20:24.824
install a device and that's
about it. For your applications

00:20:24.824 --> 00:20:26.826
and with my work with SIEMs and
I see a lot of logs and the

00:20:26.826 --> 00:20:28.828
power is plugged in and it is
doing something and that's it.

00:20:28.828 --> 00:20:30.830
That's really bad. We need to
make sure that you are tuned

00:20:30.830 --> 00:20:32.832
into looking at the right
information and it is actually

00:20:32.832 --> 00:20:34.834
collecting accurate information.
The third point and segment your

00:20:34.834 --> 00:20:36.836
infrastructure and isolate your
access points entirely and with

00:20:36.836 --> 00:20:38.838
the presentation when we got the
resounding meh from people, was

00:20:38.838 --> 00:20:40.840
listen to your minute I don't
knows. We said we are concerned

00:20:40.840 --> 00:20:42.842
about this. People can get hurt.
Please do something about it.

00:20:42.842 --> 00:20:44.844
Well, we hear, it is not in the
budget. How severe is it? Well,

00:20:44.844 --> 00:20:46.846
it is bad. And secondly, know
your clients and who is

00:20:46.846 --> 00:20:48.848
connected to your wireless
network and making sure that

00:20:48.848 --> 00:20:50.850
everything is properly
segmented. If you don't know who

00:20:50.850 --> 00:20:52.852
is connected to you, how are you
going to stop them from doing

00:20:52.852 --> 00:20:54.854
things they shouldn't be doing?
>> I blame POC's for vendors a

00:20:54.854 --> 00:20:56.856
lot of time. It is exactly what
Josh said. Vendors and great

00:20:56.856 --> 00:20:58.858
products and whatnot and they go
in and to catch the cooperation

00:20:58.858 --> 00:21:00.793
and they drop in said IPS and
said firewall and oh, it has

00:21:00.793 --> 00:21:02.795
caught everything. We are going
to leave it the way it is. We

00:21:02.795 --> 00:21:04.797
are secure. You need to
understand that port wise and

00:21:04.797 --> 00:21:06.799
policies and there is more to a
few things and for example, some

00:21:06.799 --> 00:21:08.801
protocols have suites and there
are five plus ports that you can

00:21:08.801 --> 00:21:10.803
use. To talk about our points
and okay, we are blocked from

00:21:10.803 --> 00:21:12.805
the other site coming in. But
port 5900 and I have a guest

00:21:12.805 --> 00:21:14.807
network and I can segment my
stuff and after doing my bad

00:21:14.807 --> 00:21:16.809
deeds, I can shovel that port
outside or put it somewhere else

00:21:16.809 --> 00:21:18.811
and capture what I need. To
drive the point home, where is

00:21:18.811 --> 00:21:20.813
your presentation? It is here.
When I was talking about the ESS

00:21:20.813 --> 00:21:22.815
ID's now, think about what we
just talked and apply it to

00:21:22.815 --> 00:21:24.817
corporations. If it is a bank, a
hospital, a gas company. These

00:21:24.817 --> 00:21:26.819
are common targets these days
and what most of us are

00:21:26.819 --> 00:21:28.821
responsible for defending and a
lot of times when we print out

00:21:28.821 --> 00:21:30.823
those reports and you know what,
MTP, you have out bound? No. DNS

00:21:30.823 --> 00:21:32.825
if you have to go out, do you
have at least a trusted or

00:21:32.825 --> 00:21:34.827
isolated policy? No. Look at how
many DNS attacks there are. No

00:21:34.827 --> 00:21:36.829
one is taking into consideration
there is a lot of bad things

00:21:36.829 --> 00:21:38.831
happening and it is big and
damage things really, really

00:21:38.831 --> 00:21:40.833
big. It can take only one-half.
>> To give you a light at the

00:21:40.833 --> 00:21:42.835
end of the tunnel. We have
roadmaps of the software that we

00:21:42.835 --> 00:21:44.837
have written and that will help
other people. First off, I want

00:21:44.837 --> 00:21:46.839
to do better triangulation
algorithms and detecting where

00:21:46.839 --> 00:21:48.841
you are. It is based on a static
value that some guy that was

00:21:48.841 --> 00:21:50.843
working on Android shoveled on
in and all strengths are based

00:21:50.843 --> 00:21:52.845
off of that value. Like a
real-time Wi-Fi map and if you

00:21:52.845 --> 00:21:54.847
have two people walking around
with this stuff, it can

00:21:54.847 --> 00:21:56.849
complement each other's stuff. I
like to absorb a lot of the

00:21:56.849 --> 00:21:58.851
scripts that Pete was showing
from the Python and straight on

00:21:58.851 --> 00:22:00.786
into Java and the Android app
itself. It turns out that a lot

00:22:00.786 --> 00:22:02.788
of the stuff that he is doing;
you can do if you are a little

00:22:02.788 --> 00:22:04.790
creative with the default
libraries that Android provides.

00:22:04.790 --> 00:22:06.792
Also, I would like to do easier
integration points for any other

00:22:06.792 --> 00:22:08.794
tool to just this information
somehow. >> For the other module

00:22:08.794 --> 00:22:10.796
and map scanning, it is done and
beautifully. We couldn't do it

00:22:10.796 --> 00:22:12.798
this time. I would like to make
this section more modular and

00:22:12.798 --> 00:22:14.800
instead of using the -- what do
you call it? The cellular

00:22:14.800 --> 00:22:16.802
section and you can take pieces
of it and put it in your network

00:22:16.802 --> 00:22:18.804
for mission critical servers
that need to talk to each other

00:22:18.804 --> 00:22:20.806
only and it is amazing what goes
through there without anyone

00:22:20.806 --> 00:22:22.808
else knowing. Maybe, shoot an
email and automate it and run it

00:22:22.808 --> 00:22:24.810
and send an email to your CFO's
managers or whatnot and keep

00:22:24.810 --> 00:22:26.812
track of any outstanding issues
and your plans to fix things.

00:22:26.812 --> 00:22:28.814
The last one. The deployment and
trying to make the garble a

00:22:28.814 --> 00:22:30.816
little bit evil and kind of
drive points home and another

00:22:30.816 --> 00:22:32.818
step and about to make it a
little bit more aggressive.

00:22:32.818 --> 00:22:34.820
There is a framework that is
done. It is in its infancy

00:22:34.820 --> 00:22:36.822
stages and hopefully we come
back with a more finished

00:22:36.822 --> 00:22:38.824
product. >> For my part, I have
a plan to integrate all of the

00:22:38.824 --> 00:22:40.826
new features that Naveed and
Josh are going to have. A

00:22:40.826 --> 00:22:42.828
centralized system and if you
are trying to analyze a source

00:22:42.828 --> 00:22:44.830
output for your day-to-day
analytics and know that this

00:22:44.830 --> 00:22:46.832
public fingerprint could mean
that the sources could be

00:22:46.832 --> 00:22:48.867
anywhere and we should be able
to identify them. That feature

00:22:48.867 --> 00:22:56.342
would be nice. A browser-based
scanner would be a cool edition.

00:22:56.342 --> 00:23:03.115
I showed you it works
flawlessly. Go to the website

00:23:03.115 --> 00:23:10.589
and anyone that is trying to
analyze your network from a

00:23:10.589 --> 00:23:16.061
security perspective. Lastly, I
node to do securitization

00:23:16.061 --> 00:23:22.401
checks. When you parse the CSP
files, it is subject to attacks.

00:23:22.401 --> 00:23:28.407
That work still has to be done.
This code that we are working on

00:23:48.961 --> 00:23:54.967
is going to be available on
GitHelp and anyone can have a

00:24:07.946 --> 00:24:13.952
copy of it. That's it. Open for
questions. >> (Indiscernible).

00:24:25.397 --> 00:24:31.403
>> We talked to our lawyer. >>
Yeah, we have a legal team at

00:24:46.051 --> 00:24:52.057
TELUS. [ LAUGHTER ] >> The
scanning is not allowed.

00:25:01.867 --> 00:25:07.873
Legally, it shouldn't be done.
This is a full implantation

00:25:17.750 --> 00:25:23.756
tester. You need to have the
authorization from the network

00:25:33.599 --> 00:25:39.605
that you are trying to scan. But
I think that hackers don't

00:25:52.651 --> 00:25:58.657
practice legal or laws, right?
We have to be aware of them,

00:26:03.862 --> 00:26:09.868
right. >> (Indiscernible). >>
Yeah. >> We are hopefully,

00:26:13.172 --> 00:26:19.178
looking to change the name of
the product to something better.

00:26:24.516 --> 00:26:30.522
Thanks guys for your time and we
appreciate it. If you have any

00:26:37.596 --> 00:26:42.401
questions let us know. [
APPLAUSE ]

