00:00:00.033 --> 00:00:03.103
the talk I want to give today,
is called hacker in the wires,

00:00:03.103 --> 00:00:07.941
so it's a little bit about this
guy here, it's called a Catch

00:00:07.941 --> 00:00:11.645
Wire. And we'll tell you a
little bit more about this

00:00:11.645 --> 00:00:17.317
device, but essentially it is a
little computer, let live on

00:00:17.317 --> 00:00:23.323
your network, and hack people,
do fun stuff. So what's this

00:00:38.872 --> 00:00:41.508
talk? It's about a hacking
device that lives on a -- [

00:00:41.508 --> 00:00:43.510
Indiscernible ] gigabit Ethernet
wire, and it's the Catch Wire,

00:00:43.510 --> 00:00:45.512
it's made by WAW technologies,
and it's running Deck Linux. So

00:00:45.512 --> 00:00:47.514
some of you might be familiar
with Deck Linux. I've given some

00:00:47.514 --> 00:00:49.616
talks at DEFCON before. I've
lied, it's not my first time at

00:00:49.616 --> 00:00:52.853
DEFCON but I describe, How you
can build some of these little

00:00:52.853 --> 00:00:57.324
things, and this talk is about
hoarding some of that stuff that

00:00:57.324 --> 00:01:02.663
I did with BeagleBone to work on
this new device. So why would

00:01:02.663 --> 00:01:07.968
you want to do this? You can do
multiple things with it. You can

00:01:07.968 --> 00:01:11.805
use some command control, and
exfiltration, using different

00:01:11.805 --> 00:01:17.344
options. You can do things on
the network, that you've

00:01:17.344 --> 00:01:21.682
installed this too. You can also
remote control it, using some

00:01:21.682 --> 00:01:25.118
XBee radios, talk a little bit
that, and of course, you could

00:01:25.118 --> 00:01:29.523
use some other technology, such
as cellular networks. So why

00:01:29.523 --> 00:01:35.195
should you care about this stuff
anyway? Well, a Catch Wire

00:01:35.195 --> 00:01:41.001
running the Deck Linux is small.
I mean, you can literally fit it

00:01:41.001 --> 00:01:46.239
in your palm. It's pretty
flexible. And you can network it

00:01:46.239 --> 00:01:50.777
together with other devices, you
know, such as some of the

00:01:50.777 --> 00:01:53.914
BeagleBone-based devices I've
talked about at previous DEFCONs

00:01:53.914 --> 00:01:58.719
and you can easily take this guy
and install them a couple of

00:01:58.719 --> 00:02:03.156
places. Right. So you could put
it in your data center, so you

00:02:03.156 --> 00:02:07.260
have a client, we'll just call
them the target client. And if

00:02:07.260 --> 00:02:11.732
you can get into their data
center, particular if they have

00:02:11.732 --> 00:02:15.068
power over Ethernet you can take
one of these little guys, you

00:02:15.068 --> 00:02:19.639
can plug it in, and you're
having fun, right? You're

00:02:19.639 --> 00:02:23.644
getting all the packets. You
might want to narrow it down a

00:02:23.644 --> 00:02:26.780
little bit more. You could put
it on a land segment. Maybe

00:02:26.780 --> 00:02:30.317
there's only one land segment
that's of interest to you. Of

00:02:30.317 --> 00:02:34.821
course, you could also inline a
single PC, if that's what you

00:02:34.821 --> 00:02:40.894
wanted to do. You know, if you
can find unused desk, slap it

00:02:40.894 --> 00:02:47.367
under there. And be on their
network. Some of you have seen

00:02:47.367 --> 00:02:51.271
me around, professor at
Bloomsburg University in

00:02:51.271 --> 00:02:55.409
Pennsylvania, I teach pen
testing information security,

00:02:55.409 --> 00:03:01.415
digital forensics. Wrote books,
book is one of them. Hacking and

00:03:01.415 --> 00:03:06.353
Penetration Testing with Low
Power Devices. We actually have

00:03:06.353 --> 00:03:11.291
a new book that we're releasing
through pentester academy

00:03:11.291 --> 00:03:16.697
tomorrow on Linux forensics, so
if that's interest to you, come

00:03:16.697 --> 00:03:20.534
by their booth. I've been
programming since I was about

00:03:20.534 --> 00:03:26.506
eight, in assembly since ten.
Hacking hardware around 12 or

00:03:26.506 --> 00:03:32.245
so, also been known to fly,
build planes, do some other

00:03:32.245 --> 00:03:36.416
aviation stuff. Course author
for pentester academy and some

00:03:36.416 --> 00:03:42.055
others as well. So what are we
going to talk about? Going to

00:03:42.055 --> 00:03:46.860
talk a little bit about the
Catch Wire. What is it? Talk a

00:03:46.860 --> 00:03:52.399
little bit about Deck Linux.
Some of the attacks you can do

00:03:52.399 --> 00:03:58.972
with this device, or BeagleBone.
Some of the things you can do

00:03:58.972 --> 00:04:04.978
specific to the Catch Wire. Some
ideas or future directions that

00:04:04.978 --> 00:04:10.650
you might want. So the Catch
Wire. What is it? It used to be

00:04:10.650 --> 00:04:15.088
called the Luna, the little
universal network appliance.

00:04:15.088 --> 00:04:18.592
Kickstarter, last year, I
believe. And they changed the

00:04:18.592 --> 00:04:23.697
name after the Kickstarter for
some legal reasons. And it's

00:04:23.697 --> 00:04:29.436
essentially like the BeagleBone
Black, except it's got two

00:04:29.436 --> 00:04:35.142
gigabit Ethernet interfaces on
it, supports power over Ethernet

00:04:35.142 --> 00:04:43.016
and nice integrated FTDI, USB to
your chip. What it doesn't have,

00:04:43.016 --> 00:04:49.790
the beagle has, it doesn't have
the HDMI output or GPIO headers,

00:04:49.790 --> 00:04:54.027
so in terms of the software,
it's very similar, something

00:04:54.027 --> 00:05:00.700
that made it very easy for me to
port what I had done with

00:05:00.700 --> 00:05:04.971
BeagleBone over to this new
platform. Here's a block

00:05:04.971 --> 00:05:10.577
diagram. You can see, it's got a
TI processor, and if you look at

00:05:10.577 --> 00:05:14.381
this, and you compare it to
BeagleBone Black, you will see

00:05:14.381 --> 00:05:20.387
that it's very similar, other
than having Ethernet stuff. The

00:05:24.057 --> 00:05:30.063
board looks kind of like this.
You can see it's got a couple of

00:05:32.866 --> 00:05:36.503
Ethernet ports. You've got a
power over Ethernet pass through

00:05:36.503 --> 00:05:40.840
module, so you can go ahead and
pass through the power through

00:05:40.840 --> 00:05:44.411
the device, if you want, or not.
And that's what those headers

00:05:44.411 --> 00:05:50.550
that say J1 headers are for. And
the bottom of the board you have

00:05:50.550 --> 00:05:54.454
processor, memory, and some
other stuff as well. Including a

00:05:54.454 --> 00:06:00.026
microSD card slot that you can
use if you want to load up

00:06:00.026 --> 00:06:04.130
something like Deck Linux. So
speaking of Deck Linux, what is

00:06:04.130 --> 00:06:10.537
it? Deck Linux is something I
made a while back, and it's

00:06:10.537 --> 00:06:15.876
essentially built on 1404 and
it's optimized for pen testing

00:06:15.876 --> 00:06:21.214
with things like Beagle Black,
Catch Wire and similar things,

00:06:21.214 --> 00:06:28.188
so you can use this as a Dropbox
or a hacking console, remote

00:06:28.188 --> 00:06:33.526
hacking drone, a lot of
different uses for these little

00:06:33.526 --> 00:06:38.031
devices. It has over 4 --> 000
packages preinstalled, and I

00:06:38.031 --> 00:06:42.736
will say this. Unlike certain
other pentesting oriented

00:06:42.736 --> 00:06:46.740
distributions, which I won't
name, it's pretty much fluff

00:06:46.740 --> 00:06:51.111
free, right? It's got 4 --> 000
packages that people actually

00:06:51.111 --> 00:06:55.615
use, not something that someone
wrote ten years ago, and used it

00:06:55.615 --> 00:07:02.555
since. To that base OS I've
added some extra things. And

00:07:02.555 --> 00:07:05.859
have these different modules
such as the mesh deck, so the

00:07:05.859 --> 00:07:10.463
mesh deck allows you to remotely
command and control these

00:07:10.463 --> 00:07:16.536
devices using XBee or ZigBee
mesh networking. It allows you

00:07:16.536 --> 00:07:20.774
to command and control and
coordinate attacks. You can

00:07:20.774 --> 00:07:26.179
attack from up to 2 miles away.
I've also developed an Airdeck

00:07:26.179 --> 00:07:32.619
so it's a flying hacking drone.
It's a flying hacking drone that

00:07:32.619 --> 00:07:40.393
I built it on top of a quad
shot, if any of you are familiar

00:07:40.393 --> 00:07:43.963
with that. It's a nice flying
platform capable of vertical

00:07:43.963 --> 00:07:48.268
takeoffs and landings, picture
here as well. And you know, so I

00:07:48.268 --> 00:07:51.171
have that as another
possibility. Let's say you don't

00:07:51.171 --> 00:07:54.708
have good physical access, you
can actually fly in your hacking

00:07:54.708 --> 00:07:59.245
hardware, land on your target's
roof, hack the crap out of them,

00:07:59.245 --> 00:08:04.484
fly away. Also developed the
four deck, which is a forensics

00:08:04.484 --> 00:08:09.589
module that lets you do USB
right blocking, things like

00:08:09.589 --> 00:08:15.695
that. And I developed something
new, called the U deck, the USB

00:08:15.695 --> 00:08:20.300
deck, or USB based, and that's
what my other talk is tomorrow,

00:08:20.300 --> 00:08:26.906
so tomorrow I'm going to sell
this as the first ever Friday

00:08:26.906 --> 00:08:31.845
night key note presentation at
DEFCON, which basically means,

00:08:31.845 --> 00:08:37.117
somebody asked, can we bump you
to 7 p.m. on a Friday? And I

00:08:37.117 --> 00:08:40.987
said, oh, okay. So I'm the only
person talking at 7 o'clock

00:08:40.987 --> 00:08:44.724
tomorrow. Bored, not eating
dinner, come by. We'll talk USB

00:08:44.724 --> 00:08:50.296
attacks. So the Catch Wire, how
are you going to power this

00:08:50.296 --> 00:08:54.401
thing? If you have power over
Ethernet, you're golden. That's

00:08:54.401 --> 00:08:59.639
the best option ever. Just plug
it in. You're good to go. As I

00:08:59.639 --> 00:09:03.276
said before, you can pass
through the power, using the

00:09:03.276 --> 00:09:10.116
jumpers on the device. You can
also use a DC adapter. So it has

00:09:10.116 --> 00:09:15.488
a -- a plug on the end, for DC
power. That's the second best

00:09:15.488 --> 00:09:20.727
option. And you can also use USB
power. So there's a USB port,

00:09:20.727 --> 00:09:26.433
you can use it to power the
device via a charge. If you're

00:09:26.433 --> 00:09:31.771
going to do this, you should
have a 2-amp or greater charger.

00:09:31.771 --> 00:09:36.242
You can power it from a PC, so
if you hook it into a PC, you

00:09:36.242 --> 00:09:40.113
can power it that way, but be
careful, because normally,

00:09:40.113 --> 00:09:45.752
you're limited to 500-milliamps
with a USB 2.0 device, and

00:09:45.752 --> 00:09:52.859
that's not enough to power up
the Catch Wire, couple gigabit

00:09:52.859 --> 00:09:59.165
Ethernet ports and maybe
wireless adapter will attach to

00:09:59.165 --> 00:10:05.805
it. How do you configure one of
these guys? So if you want to do

00:10:05.805 --> 00:10:11.611
some hacking with your Catch
Wire, all you have to do is grab

00:10:11.611 --> 00:10:17.083
the image, so I hack the image
hosted at my faculty page,

00:10:17.083 --> 00:10:22.021
Bloomsburg, and there's a nice
little script, just download the

00:10:22.021 --> 00:10:27.427
whole thing. And you can create
a micro SD card, using the

00:10:27.427 --> 00:10:30.763
provided script. You're going to
need at least a 16 gig card,

00:10:30.763 --> 00:10:35.902
because it will not fit on an
eight gig card. And honestly,

00:10:35.902 --> 00:10:41.808
I'd recommend 32 gig card,
because it's a little bit tight

00:10:41.808 --> 00:10:45.945
at 16 gig. There's a lot of
hacking goodness built into

00:10:45.945 --> 00:10:50.250
this. So you know, once you've
created this, if you get a nice

00:10:50.250 --> 00:10:54.754
fast card, I recommend at least
a class ten card or faster. You

00:10:54.754 --> 00:11:00.927
can create the card in about a
half hour or so. Install it into

00:11:00.927 --> 00:11:05.632
the Catch Wire. And in order to
do that, it's pretty easy. Just

00:11:05.632 --> 00:11:10.003
take the screws off from the end
that has the micro USB and it

00:11:10.003 --> 00:11:14.174
pulls out, stick in the card and
good to go. You can connect the

00:11:14.174 --> 00:11:20.180
PC to a PC, via the USB, and you
can just log in, if you want to

00:11:25.652 --> 00:11:31.925
do some initial configuration as
going to, with password temp BWD

00:11:31.925 --> 00:11:39.365
and just add stuff as you need,
before you deploy. So what does

00:11:39.365 --> 00:11:46.205
it look like? It looks kind of
like this. Cross your fingers,

00:11:46.205 --> 00:11:52.512
everyone. Like this. connect to
the Catch Wire. Before I do

00:11:52.512 --> 00:12:00.486
that, I need to set up my serial
port. This is from a UBUNTU

00:12:00.486 --> 00:12:07.360
system >> SPEAKER: I will change
-- zero. No flow control. I'll

00:12:07.360 --> 00:12:15.068
plug in the device. And here we
can see some of the boot

00:12:15.068 --> 00:12:19.906
sequence. Now this will take a
little bit longer than the --

00:12:19.906 --> 00:12:25.745
sequence if you're booting the
standard version of Linux that

00:12:25.745 --> 00:12:31.751
comes with a Catch Wire. And the
reason for that is that I am

00:12:33.853 --> 00:12:41.427
booting up the Deck Linux here,
and that has an awful lot of

00:12:41.427 --> 00:12:47.567
extra stuff that is coming up.
And you can see here where it

00:12:47.567 --> 00:12:53.573
came up, and it started a bridge
process that bridges the two

00:12:59.646 --> 00:13:05.652
Ethernet adapters and here we
are bringing up some additional

00:13:09.689 --> 00:13:14.861
stuff. Now I can go ahead and
log in. Default log in as

00:13:14.861 --> 00:13:20.333
UBUNTU. Tap PWD as displayed in
the banner message. I've managed

00:13:20.333 --> 00:13:26.305
to boot Deck Linux. So that's
pretty easy. By the way, the

00:13:26.305 --> 00:13:32.779
first time that you boot it, it
might take a little bit longer,

00:13:32.779 --> 00:13:39.052
because it has to set up on SD
card. Do not write protect the

00:13:39.052 --> 00:13:43.923
SD card, just a little hint
there it can cause some

00:13:43.923 --> 00:13:49.195
problems. Okay. So you know, I
talked a little bit about

00:13:49.195 --> 00:13:55.668
ridging net connections. That's
the default on the Catch Wire.

00:13:55.668 --> 00:14:00.106
It will come with some network
flow monitoring software, and

00:14:00.106 --> 00:14:04.544
everything pre-installed and the
kernel options are going to have

00:14:04.544 --> 00:14:08.347
this bridge setup but if for
some reason, if you wanted to

00:14:08.347 --> 00:14:12.518
split, you can, it's pretty
easy, you just change to the

00:14:12.518 --> 00:14:17.824
boot, U boot to ‚Äî directory.
If you're not familiar with

00:14:17.824 --> 00:14:22.762
these things, stands for device
tree binaries, device tree

00:14:22.762 --> 00:14:28.601
binaries are a clever and
elegant way of accounting for

00:14:28.601 --> 00:14:31.671
all the different kinds of
hardware you can have on your

00:14:31.671 --> 00:14:37.143
systems, especially ARM-based
systems. All you need to do is

00:14:37.143 --> 00:14:42.115
change that overlay, that binary
that describes the device and

00:14:42.115 --> 00:14:49.188
you just copy the D Mac version
over the Luna version and common

00:14:49.188 --> 00:14:53.693
out some lines in the udev rules
as I indicated here. If you want

00:14:53.693 --> 00:14:58.564
to go back, just reverse the
process. Uncomment the lines and

00:14:58.564 --> 00:15:00.566
you change it back to the LUNA
dash, switch. Something else you

00:15:00.566 --> 00:15:08.141
might consider doing, you might
consider installing the mesh

00:15:08.141 --> 00:15:14.147
deck. Why would you want to do
that? Because it's cool, right?

00:15:18.818 --> 00:15:22.688
You can command a control,
slash, exfiltrate some data from

00:15:22.688 --> 00:15:27.693
up to 2 miles away without using
any kinds of gateways or

00:15:27.693 --> 00:15:33.699
extenders. If you want to use a
gateway, you could be on the

00:15:37.970 --> 00:15:40.373
other side of the world. All
right. If you have XBee to

00:15:40.373 --> 00:15:42.809
internet gateway of some sort,
and it's also out of band. You

00:15:42.809 --> 00:15:46.746
know, yes, you can use an
interface on the target‚Äôs

00:15:46.746 --> 00:15:52.018
network, when you connect the
Catch Wire, but people see that

00:15:52.018 --> 00:15:55.721
traffic. People don't see the
traffic on the ZigBee, unless

00:15:55.721 --> 00:15:58.124
they're using ZigBee and even
then they probably don't notice,

00:15:58.124 --> 00:16:01.194
honestly. It's pretty easy to
use Catch Wire into multi device

00:16:01.194 --> 00:16:07.200
pentest. Maybe you have your
case full of a bunch of

00:16:09.468 --> 00:16:15.474
BeagleBone Black and a few other
bits of equipment. And you can

00:16:18.477 --> 00:16:23.983
use either mesh networking or
ZigBee networking or use a start

00:16:23.983 --> 00:16:31.157
and that's an easy choice to
make. So to do, just get a USB

00:16:31.157 --> 00:16:38.164
adapter, plug in the XBee to
that. Plug in the Catch Wire and

00:16:38.164 --> 00:16:42.101
if you want details on that, if
you go back, and look at my

00:16:42.101 --> 00:16:48.574
DEFCON 21 talk, again, I lied,
it's not my first time at

00:16:48.574 --> 00:16:52.612
DEFCON. And you can get some
more details in that talk. You

00:16:52.612 --> 00:17:00.086
can also, you know, if you had
to read my book, you can read my

00:17:00.086 --> 00:17:05.391
book. And another nice thing
about installing the mesh, maybe

00:17:05.391 --> 00:17:10.129
there's some blocking, some
firewalls that are going to

00:17:10.129 --> 00:17:14.367
prevent you from easily
accessing that built in

00:17:14.367 --> 00:17:19.639
interface on the target network
from wherever you are, whereas

00:17:19.639 --> 00:17:25.978
the XBee is not going to be
blocked by a firewall. So

00:17:25.978 --> 00:17:32.318
another plus for it. I'm going
to start with an old friend.

00:17:32.318 --> 00:17:38.658
Here's using an old friend maybe
abusing an old friend with the

00:17:38.658 --> 00:17:45.531
Catch Wire. I've gone ahead, and
I run up, menace on Catch Wire

00:17:45.531 --> 00:17:52.405
and one of the first things I
want is just verify that I‚Äôm

00:17:52.405 --> 00:17:59.812
connected to my database. And I
can go ahead and run a DB, and

00:17:59.812 --> 00:18:06.152
map and we can see that it's
finished. Also notice that this

00:18:06.152 --> 00:18:12.191
house here, 123, looks look it
has some interesting services,

00:18:12.191 --> 00:18:18.764
it‚Äôs got a FTP server, an HTTP
server, and some Windows files,

00:18:18.764 --> 00:18:25.271
so it looks like it might have
some interesting opportunities

00:18:25.271 --> 00:18:32.411
in order to exploit things on
that sheet, and of course,

00:18:32.411 --> 00:18:38.417
command, I can also run my
services, so now that I have my

00:18:40.886 --> 00:18:48.694
list of posts and services --
another look at this, and find

00:18:48.694 --> 00:18:54.700
something we might want to try
to attack. So I see right here,

00:18:57.169 --> 00:19:03.676
free float FTP server, which
could be vulnerable and other

00:19:03.676 --> 00:19:10.850
things that are vulnerable as
well. But let's start with good

00:19:10.850 --> 00:19:16.856
old friend, good old MSO8O67, so
I'm going to try and run up this

00:19:19.959 --> 00:19:27.767
exploit. MSO8O67 -- >> SPEAKER:
It's not a security -- >>

00:19:27.767 --> 00:19:34.273
SPEAKER: Yeah -- >> SPEAKER:
Show options. Set. our host, to.

00:19:34.273 --> 00:19:40.279
192, 168. One -- 123. Now I'm
going to set my -- show options

00:19:43.382 --> 00:19:49.388
again. And we will our local
host is -- ready to run our

00:19:51.857 --> 00:19:58.998
exploit. And there you have it.
We just opened an interpreter

00:19:58.998 --> 00:20:06.172
session on a Windows machine,
using our old friend, MSO8067 I

00:20:06.172 --> 00:20:12.178
can go ahead, do a screenshot,
there we go. And all the usual

00:20:14.647 --> 00:20:20.286
commands. So it's pretty fun.
You know, it's a good chunk of

00:20:20.286 --> 00:20:24.723
fun to take a little handheld
device and PWN Windows boxes.

00:20:24.723 --> 00:20:31.097
Maybe it's just me. So some
other stuff you can do, let's do

00:20:31.097 --> 00:20:37.069
a little bit of sniffing. I
mean, obviously this is an

00:20:37.069 --> 00:20:41.440
awesome device for doing
sniffing on a wired segment. So

00:20:41.440 --> 00:20:45.044
you know, we notice that there
was an FTP server running. So

00:20:45.044 --> 00:20:50.049
let's go ahead and we will sniff
some traffic. And the host --

00:20:50.049 --> 00:20:57.189
the command we're going to use,
just going to use a TCP dump, on

00:20:57.189 --> 00:21:03.295
a particular host, so the
command is TCP dump dash N, and

00:21:03.295 --> 00:21:09.935
host, and the name of the host,
dash V, which says, hey, please

00:21:09.935 --> 00:21:16.041
be the ‚Äî dash A, which says,
dump pockets -- sorry can't

00:21:16.041 --> 00:21:20.646
speak today. Early, it's only
Thursday. I haven't been

00:21:20.646 --> 00:21:27.253
drinking, I promise. And -- what
we're going to look for is the

00:21:27.253 --> 00:21:32.158
USER prompt where they sent
their username, or where they

00:21:32.158 --> 00:21:35.928
sent their password of course,
FTP it‚Äôs all in clear text.

00:21:35.928 --> 00:21:42.601
let's give this a try. So we
have a host that's running an

00:21:42.601 --> 00:21:48.607
FTP server, and we can verify
that with pen map, 168, one,

00:21:51.110 --> 00:21:57.716
120. Which is a system that we
previously identified as running

00:21:57.716 --> 00:22:04.123
FTP. We can then use the Catch
Wire to capture all the pockets

00:22:04.123 --> 00:22:09.528
to or from the system. Again,
the Catch Wire is installed in

00:22:09.528 --> 00:22:13.732
line to this land segment, so I
can pretty much do whatever I

00:22:13.732 --> 00:22:19.505
want. And here we see, sure
enough, yes, there is an FTP

00:22:19.505 --> 00:22:25.511
server running. So I will go
ahead, run, TCP dump and I give

00:22:28.581 --> 00:22:34.587
it the dash N host. And the
name, or IP address. Please be

00:22:37.022 --> 00:22:43.462
host‚Äî and dash, capital A
says, take all of your stuff and

00:22:43.462 --> 00:22:49.902
send it to ASCII, so give me an
ASCII representation packets. I

00:22:49.902 --> 00:22:56.909
will pipe that to -- and I will
look for either user, uppercase,

00:22:56.909 --> 00:23:03.883
and then a space, or paths in
uppercase, and then a space. So

00:23:03.883 --> 00:23:10.890
once I do that, it will start
listening, and I can go to

00:23:10.890 --> 00:23:17.863
another machine in my network,
and then I can log in via FTP,

00:23:17.863 --> 00:23:23.802
and Wala, there you have it.
User Joe logged in with

00:23:23.802 --> 00:23:30.776
password, password one. I'd say,
not bad and do we even have to

00:23:30.776 --> 00:23:37.216
write a script? It's like one
line on the command line. So,

00:23:37.216 --> 00:23:42.922
you know, loads of fun. What
about other stuff that you might

00:23:42.922 --> 00:23:46.225
want to do? like, what if you
want to use Wireshark? Like,

00:23:46.225 --> 00:23:51.563
what's with all these console
apps? You can use Wireshark with

00:23:51.563 --> 00:23:55.501
a Catch Wire as well. So
something you can do, use the

00:23:55.501 --> 00:24:01.006
Catch Wire to capture packet,
and then you can send those on

00:24:01.006 --> 00:24:05.611
to Wireshark. Now, before you
can do this, however, you're

00:24:05.611 --> 00:24:10.849
going to have to let log in, so
normally, route is not allowed

00:24:10.849 --> 00:24:14.219
to log in, which is a good
thing, so you're going to have

00:24:14.219 --> 00:24:19.858
to go in and edit an config file
that allows route to log in. Why

00:24:19.858 --> 00:24:24.763
not? Why not let route log in
through SSH? Well, route is a

00:24:24.763 --> 00:24:29.702
very well known user ID so you
only have to guess the password

00:24:29.702 --> 00:24:34.606
itself. You can figure that one
out. It's not a good idea to

00:24:34.606 --> 00:24:39.511
have it enabled. We'll say about
this, I don't do this in this

00:24:39.511 --> 00:24:44.249
demo, but you should probably
use some filters, even the most

00:24:44.249 --> 00:24:48.287
clueless sys admin might get a
little suspicious if there's

00:24:48.287 --> 00:24:53.225
suddenly this double traffic and
it's all flowing out of his

00:24:53.225 --> 00:24:58.163
network. All right. So you know,
maybe filter a little bit,

00:24:58.163 --> 00:25:04.403
narrow that focus a little bit.
All you have to do, SSH in, so

00:25:04.403 --> 00:25:10.075
here's the command, SSH, in as
route, at, catch, whatever your

00:25:10.075 --> 00:25:15.180
Catch Wire address is, and give
it something to run. TCP dump

00:25:15.180 --> 00:25:20.753
dash, SO, capture all those
packets, dash W, write them out,

00:25:20.753 --> 00:25:25.858
dash, please write standard out,
pipe it, to Wireshark-K, which

00:25:25.858 --> 00:25:31.597
means please run right away,
dash I, the interface will be

00:25:31.597 --> 00:25:38.370
dash. Right? So you want to do
some sniffing on the Catch Wire

00:25:38.370 --> 00:25:43.575
and have it displayed on your
workstation elsewhere. So how

00:25:43.575 --> 00:25:51.383
can you do this? The first thing
you need to do is you need to

00:25:51.383 --> 00:25:58.123
enable route to log in, the
reason you need to do this is

00:25:58.123 --> 00:26:04.897
that by default, Route is not
allowed to log in. So you need

00:26:04.897 --> 00:26:12.171
to go to the etsi, config file,
and in that file you'll find a

00:26:12.171 --> 00:26:17.910
line that says, permit route log
in, which I've already changed

00:26:17.910 --> 00:26:23.115
to yes. Previously it said
without password. So if you

00:26:23.115 --> 00:26:29.888
wanted to set up keys, it was
allowable, but if you wanted to

00:26:29.888 --> 00:26:37.396
use a password, it was not. So
now that that's been done, quit,

00:26:37.396 --> 00:26:44.803
and go ahead and show you how to
run this. So on your

00:26:44.803 --> 00:26:50.275
workstation, not the Catch Wire
device, you'll need to bring up

00:26:50.275 --> 00:26:56.248
a terminal, and run this
command. So the command is going

00:26:56.248 --> 00:27:03.622
to be SSH route, and again you
want to run this as route,

00:27:03.622 --> 00:27:09.261
because being prompted for a
password is problematic, and you

00:27:09.261 --> 00:27:16.068
need to be route in order to run
TCP dump appropriately. Here's

00:27:16.068 --> 00:27:24.009
the address for my Catch Wire.
Here I have the full path to TCP

00:27:24.009 --> 00:27:30.782
dump. I'm going to output full
packets. I'm going to write them

00:27:30.782 --> 00:27:37.589
to dash, which means standard
out. I piped that, Char dash K,

00:27:37.589 --> 00:27:44.396
means immediately run this, dash
I, dash, so it's going to accept

00:27:44.396 --> 00:27:51.203
input from standard in and take
that input and display it. So

00:27:51.203 --> 00:27:58.076
I'll go ahead and press enter,
notice that Wireshark popped up,

00:27:58.076 --> 00:28:03.382
prompted for my route password,
and now I'm listening. Not much

00:28:03.382 --> 00:28:07.686
is happening at this moment. But
as I start generating some

00:28:07.686 --> 00:28:13.258
traffic it will. So I can go
ahead and repeat my previous,

00:28:13.258 --> 00:28:20.065
demo, and I'm going to go ahead
and I'm going to log in to my

00:28:20.065 --> 00:28:25.971
FTP server. I've logged in, I'm
going to go ahead and stop my

00:28:25.971 --> 00:28:31.410
capture here, and I'm going to
do a search where my target

00:28:31.410 --> 00:28:35.914
address is 120, and what do I
have here? There's a request

00:28:35.914 --> 00:28:41.587
user Joe, password, password
one, so there you have it, in

00:28:41.587 --> 00:28:47.759
another way that I can sniff
some traffic, this case I am

00:28:47.759 --> 00:28:51.363
exporting this traffic remotely
to another workstation.

00:28:51.363 --> 00:28:56.301
Remember, okay, so you know, if
‚Äî if that one line on the

00:28:56.301 --> 00:28:59.471
command line, with that Grupp
command was too much, you don't

00:28:59.471 --> 00:29:02.808
have to write anything, right?
Just type the Wireshark, a

00:29:02.808 --> 00:29:06.912
couple filters and you can do
the same thing. All right. Well,

00:29:06.912 --> 00:29:09.615
that was kind of fun. But I
think we could have some more

00:29:09.615 --> 00:29:16.555
fun. So here's what I'm going do
with this next demo. I'm going

00:29:16.555 --> 00:29:22.561
to run up meta display on the
Catch Wire, and I'm going to use

00:29:25.530 --> 00:29:31.136
my XBee connection on the Catch
Wire to find you know, services,

00:29:31.136 --> 00:29:35.307
find what's vulnerable, and run
up Metasploit, another machine,

00:29:35.307 --> 00:29:40.445
maybe a machine back in my
office, maybe intern or somebody

00:29:40.445 --> 00:29:44.650
that is back there waiting,
waiting for inbound connections

00:29:44.650 --> 00:29:49.755
from my pentest and they're
going to run a multi handler,

00:29:49.755 --> 00:29:55.227
and I can either have my exploit
on the Catch Wire I'm going to

00:29:55.227 --> 00:29:59.498
run directly, or alternatively I
could drop some sort of a pay

00:29:59.498 --> 00:30:05.537
load using Metasploit in order
to do the same thing. Let's see

00:30:05.537 --> 00:30:12.711
how this looks. Let's do a demo
to Catch Wire that is connected

00:30:12.711 --> 00:30:19.484
to my workstation via, the
network, so I've gone ahead and

00:30:19.484 --> 00:30:25.490
installed the mesh deck add on
and I have plugged in my USB

00:30:27.526 --> 00:30:35.167
adapter. To control my Catch
Wire from up to 2 miles away,

00:30:35.167 --> 00:30:38.403
and again, another thing to keep
in mind, why would you want to

00:30:38.403 --> 00:30:43.475
do this? You can do this because
you might be blocked by

00:30:43.475 --> 00:30:48.413
firewalls and such, and in
addition to that, it might be

00:30:48.413 --> 00:30:52.484
very suspicious if there's
suddenly a bunch of traffic

00:30:52.484 --> 00:30:57.422
growing out of your target's
network, so I'm going to go

00:30:57.422 --> 00:31:03.695
ahead and run up the mesh deck
server, and I've set up my Catch

00:31:03.695 --> 00:31:08.233
Wire to be on device three. I'll
run a quick test, just to make

00:31:08.233 --> 00:31:15.674
sure everything is working
properly. By running a D message

00:31:15.674 --> 00:31:21.680
command, and it is. I can also
check my networking config and I

00:31:24.816 --> 00:31:31.123
can see that this device has
attached itself at address 120.

00:31:31.123 --> 00:31:37.129
Again, if I used this, I need to
be aware that I might have

00:31:39.164 --> 00:31:45.504
issues with detection from my
target. Let's run Nmab on a

00:31:45.504 --> 00:31:52.377
machine in this network, and I
can see this machine is running

00:31:52.377 --> 00:31:59.284
FTP server, a web server, and
appears to be doing Windows file

00:31:59.284 --> 00:32:04.523
sharing, and has some other
things running as well. So let's

00:32:04.523 --> 00:32:10.529
have some fun with metasploit.
Going to run a metasploit

00:32:13.832 --> 00:32:19.838
command and we'll just pop up a
simple shell. I don't really

00:32:25.110 --> 00:32:30.215
type this fast, by the way, just
so you know. And you can also

00:32:30.215 --> 00:32:35.620
see how I fat finger stuff
occasionally. So now let's have

00:32:35.620 --> 00:32:42.461
a look at another machine I set
up multi handler. I set the pay

00:32:42.461 --> 00:32:45.897
load appropriately, reverse
shell, set up parameters.

00:32:45.897 --> 00:32:50.802
Exploit pretty soon, I get a
shell that's created. However,

00:32:50.802 --> 00:32:55.207
it almost immediately dies
because of some problem, which

00:32:55.207 --> 00:32:59.644
is not unusual in metasploit.
Occasionally things don't work

00:32:59.644 --> 00:33:06.017
so I hit it again, and this time
I successfully created a reverse

00:33:06.017 --> 00:33:12.390
shell. I can interact with it in
metasploit and from there I can

00:33:12.390 --> 00:33:19.231
run -- commands, such as a quick
IP config, just to verify I'm on

00:33:19.231 --> 00:33:25.136
the machine I think I am and how
it's connected to everything

00:33:25.136 --> 00:33:31.510
else. So, again, so the exploit
as being run on the Catch Wire

00:33:31.510 --> 00:33:36.414
that's in the network and then
it's redirecting that victim

00:33:36.414 --> 00:33:41.319
machine to your multi handler
that's running who knows where,

00:33:41.319 --> 00:33:46.191
right? Somewhere out on the
internet. In your office. Et

00:33:46.191 --> 00:33:53.064
cetera. And I didn't do it, I
didn't do a demo of this, but

00:33:53.064 --> 00:33:59.337
again, you could just as easily
take your Catch Wire and drop a

00:33:59.337 --> 00:34:03.575
pay load instead. I'm saying,
please start a reverse shell or

00:34:03.575 --> 00:34:09.581
interpreter shell. Et cetera.
Here's some ideas for some other

00:34:12.784 --> 00:34:17.122
possibilities. You know, I just
briefly touched on using the

00:34:17.122 --> 00:34:21.526
mesh deck with the Catch Wire.
Again, if you go back to my

00:34:21.526 --> 00:34:26.264
DEFCON 21 talk, you can get a
lot more details on that system

00:34:26.264 --> 00:34:30.468
and how that works. You might
get some further ideas. You

00:34:30.468 --> 00:34:35.774
could use the mesh deck for
toggling on and off. If you want

00:34:35.774 --> 00:34:41.613
to do some sniffing or you want
to target your focus, it could

00:34:41.613 --> 00:34:48.653
be useful for that. And, hey,
just sniff, inject some packets.

00:34:48.653 --> 00:34:54.392
Nobody says you can't do that
too. You might also want to use

00:34:54.392 --> 00:34:58.697
the mesh deck to communicate
things like cracked passwords to

00:34:58.697 --> 00:35:03.902
other hacking drones in your
pentest. There's a facility in

00:35:03.902 --> 00:35:08.073
the mesh deck, not just for
running commands. There's also a

00:35:08.073 --> 00:35:12.377
facility for transferring files
both directions and there's a

00:35:12.377 --> 00:35:16.014
facility for sending
announcements both directions.

00:35:16.014 --> 00:35:19.784
So it's pretty easy. On your
Catch Wire or your other hacking

00:35:19.784 --> 00:35:23.688
drone, just to say, okay, please
send an announcement back to the

00:35:23.688 --> 00:35:26.825
command console saying, guess
what, I just hacked this

00:35:26.825 --> 00:35:33.732
password. ‚Äî Could also do some
online password cracking, tool

00:35:33.732 --> 00:35:40.271
like hydra. I didn't have a demo
for that today. You can do some

00:35:40.271 --> 00:35:45.343
other attacks, social
engineering. Social engineering

00:35:45.343 --> 00:35:52.083
is always fun, who likes social
engineering? Yeah. Maybe add

00:35:52.083 --> 00:35:55.053
some cool stickers from your IT
Department, right? Do not touch

00:35:55.053 --> 00:36:01.059
IT. Whatever. I don't recommend
hacker con stickers -- okay. You

00:36:08.266 --> 00:36:11.603
could sell it to people. It's a
network extender, or performance

00:36:11.603 --> 00:36:16.341
enhancer. Right. It's going to
enhance my performance as a

00:36:16.341 --> 00:36:21.413
pentester, but you not so much
as a victim. So you know, I just

00:36:21.413 --> 00:36:25.683
-- hopefully I'll given you a
few ideas of some of the things

00:36:25.683 --> 00:36:31.089
you can do. Now, if you do have
any questions about this stuff,

00:36:31.089 --> 00:36:38.797
I am doing a demo lab Saturday
from noon to 2:00, or 1200 to

00:36:38.797 --> 00:36:45.970
1400, if you prefer that format.
Also, I will be spending about

00:36:45.970 --> 00:36:51.142
-- a lot of time at the
pentester academy booth, the

00:36:51.142 --> 00:36:56.014
security booth, in the vendor
area. If I'm not there, ask.

00:36:56.014 --> 00:37:03.588
I'll be around soon. And of
course, the best reason to stop

00:37:03.588 --> 00:37:10.161
by, win some free stuff. Anyone
like free stuff? All right. I

00:37:10.161 --> 00:37:15.834
like free stuff too. So here's
one of the cool things you can

00:37:15.834 --> 00:37:22.140
win. Actually, the people at WAW
were nice enough to donate, not

00:37:22.140 --> 00:37:29.514
one, but two of these suckers,
so in this case is -- first of

00:37:29.514 --> 00:37:35.053
all, kudos to them. This is nice
proper case, right? They don't

00:37:35.053 --> 00:37:41.559
just, hey, here's some stuff in
a baggy, have fun. You know,

00:37:41.559 --> 00:37:45.330
they have a Catch Wire in here.
There's a alpha adapter in here.

00:37:45.330 --> 00:37:51.336
A couple XBee pro radios. And
don't worry, there's more. Also

00:37:55.940 --> 00:37:59.711
donated a couple copies of my
book to go along with it. So,

00:37:59.711 --> 00:38:05.717
umm, definitely come by security
two, register for a chance to

00:38:13.958 --> 00:38:16.227
win that. Also I think we're
going to give away a couple

00:38:16.227 --> 00:38:18.329
copies of my new Linux forensics
book coming up tomorrow again,

00:38:18.329 --> 00:38:20.798
limited copies here. I will say
this for those of you that are

00:38:20.798 --> 00:38:23.501
paranoid, especially those who
said you liked social

00:38:23.501 --> 00:38:26.137
engineering, there will be a QR
code that you can scan. There's

00:38:26.137 --> 00:38:31.576
one required question, what is
your e-mail address? It goes to

00:38:31.576 --> 00:38:36.881
me. It doesn't go to anybody
else. Okay. So unless you check

00:38:36.881 --> 00:38:41.853
the other optional boxes. We're
not going to spam you, all

00:38:41.853 --> 00:38:47.892
right? I just want to give you
stuff, really. It's not a social

00:38:47.892 --> 00:38:52.564
engineering attack. Or anything
like that. So -- anyway, thank

00:38:52.564 --> 00:38:59.070
you for coming to my talk and
hope you have a good DEFCON. [

00:38:59.070 --> 00:39:01.072
Applause ]

