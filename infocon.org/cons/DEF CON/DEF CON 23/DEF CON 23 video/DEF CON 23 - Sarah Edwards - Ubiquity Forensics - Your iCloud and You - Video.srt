00:00:00.000 --> 00:00:06.139
Good morning. You did not party
enough apparently. Sunday

00:00:06.139 --> 00:00:12.145
speakers are worried that no one
is going to show up. This is

00:00:15.048 --> 00:00:21.922
ubiquity forensics. Your iCloud
and you. A PSA announcement. Who

00:00:21.922 --> 00:00:27.928
am I? I'm Sarah Edwards. I'm a
test engineer by day. We do

00:00:30.831 --> 00:00:35.802
government contracting work for
other people. We are hiring. I

00:00:35.802 --> 00:00:40.641
know the -- village has been
very popular and it's closing up

00:00:40.641 --> 00:00:47.014
soon after this talk, if you're
interested, go and talk to these

00:00:47.014 --> 00:00:53.420
people. They're great. Fantastic
to work with. By night I'm a --

00:00:53.420 --> 00:00:58.759
instructor. I created a Mac
course. I have different dates

00:00:58.759 --> 00:01:03.497
that I listed here including
September. If you haven't gotten

00:01:03.497 --> 00:01:09.569
enough Vegas yet, come back next
month. Latest and greatest

00:01:09.569 --> 00:01:14.474
version of this presentation
will be at my website. If I do

00:01:14.474 --> 00:01:20.480
updates or additional research,
you'll have the most up to date

00:01:22.683 --> 00:01:29.389
presentation at Mcforensics.com.
The scope of what I'm presenting

00:01:29.389 --> 00:01:36.096
today. ICloud basics. Getting
into acquisition and storage of

00:01:36.096 --> 00:01:40.667
the data. Synced presences.
Configuration files that are

00:01:40.667 --> 00:01:46.740
synced to the iCloud. And I'm
going to go over application

00:01:46.740 --> 00:01:50.844
data. Let's start off with the
basics. Apple uses the term

00:01:50.844 --> 00:01:55.849
ubiquity. Ubiquity means
everything everywhere, iCloud.

00:01:55.849 --> 00:02:02.656
You get your word document,
email, contacts, messages,

00:02:02.656 --> 00:02:09.563
reference, configurations and
all sorts of stuff ..(audio

00:02:09.563 --> 00:02:14.634
blipped).. Hidden under a lot of
the underbelly of OS 10. I'm

00:02:14.634 --> 00:02:22.476
here to say, if you use iCloud
and I do. I like it. I find it

00:02:22.476 --> 00:02:26.847
convenient to use, you should
know what else it's syncing.

00:02:26.847 --> 00:02:32.486
Things you do not have the
choice to opt out of. I will

00:02:32.486 --> 00:02:38.592
point that out in a couple of
places. Moving on. The OS 10, I

00:02:38.592 --> 00:02:44.698
have a lot of Screenshots in
here. OS on the left side and IS

00:02:44.698 --> 00:02:49.936
on the right side. They tend to
look similar GUI-based and you

00:02:49.936 --> 00:02:53.840
can select and deselect various
components. There are some

00:02:53.840 --> 00:02:58.645
things not listed here that get
synced automatically. I want you

00:02:58.645 --> 00:03:03.383
to be aware of that. Just
another overview. You can access

00:03:03.383 --> 00:03:09.056
it over the web. This is iCloud
.com. If you're running Linux or

00:03:09.056 --> 00:03:13.827
other operating system that is
not iCloud friendly this is the

00:03:13.827 --> 00:03:19.299
way to interact with this data.
And Windows. I had to boot up my

00:03:19.299 --> 00:03:23.870
old Windows BM, do a million
different updates. Way too many.

00:03:23.870 --> 00:03:30.077
To get a bunch of these
Screenshots done. This is iCloud

00:03:30.077 --> 00:03:35.749
for Windows. The options are
slightly less user based. You

00:03:35.749 --> 00:03:41.088
get certain things like iCloud
drive and photos and bookmarks

00:03:41.088 --> 00:03:44.825
with chrome which is a weird
option to have but it's

00:03:44.825 --> 00:03:51.965
available. So different account
identifiers. We have the Apple

00:03:51.965 --> 00:03:58.038
ID. This is going to be what you
sign into, your iTunes account,

00:03:58.038 --> 00:04:01.675
Mac app store account to
download various applications.

00:04:01.675 --> 00:04:06.346
Using an email address of some
sort. This email address

00:04:06.346 --> 00:04:10.984
associates a person ID with it,
numeric. I redacted mine

00:04:10.984 --> 00:04:16.123
throughout the slides here but
you can see 274 or something

00:04:16.123 --> 00:04:22.162
like that. A numeric ID which is
important once we look at these

00:04:22.162 --> 00:04:27.534
files on disk. So now also with
iCloud you can have associated E

00:04:27.534 --> 00:04:31.538
mail addresses, vetted aliases.
Different email addresses that

00:04:31.538 --> 00:04:36.276
you might want to have the same
information synced to or

00:04:36.276 --> 00:04:40.580
different phone numbers that you
want synced to throughout the

00:04:40.580 --> 00:04:44.885
iCloud data. Credentials. We're
going to talk about how we

00:04:44.885 --> 00:04:49.156
access this information. There
is a couple of different ways.

00:04:49.156 --> 00:04:53.126
The Apple ID and password, we
can use two factor

00:04:53.126 --> 00:04:57.631
authentication if it's enabled.
It's not enabled by default. The

00:04:57.631 --> 00:05:00.400
last time I checked there was a
three-day waiting period to

00:05:00.400 --> 00:05:05.338
enable it. I'm not sure that's
the best option. If I see

00:05:05.338 --> 00:05:10.143
something I'm going to have to
wait for three days. Hopefully

00:05:10.143 --> 00:05:14.948
Apple can make that more
available to us and fix that.

00:05:14.948 --> 00:05:20.620
There is a token. A token is
basically a data blob, a file

00:05:20.620 --> 00:05:25.425
that is associated. I log into
my OS 10 machine. ..(audio

00:05:25.425 --> 00:05:28.895
blipped).. in the background.
Not doing authentication each

00:05:28.895 --> 00:05:33.867
and every time it syncs. There
is a token file that does the

00:05:33.867 --> 00:05:38.138
authentication for me. We can
take that file off and ..(audio

00:05:38.138 --> 00:05:45.278
blipped).. How much data can we
have? We're looking at 5 gigs.

00:05:45.278 --> 00:05:50.650
You can purchase up to a
terabyte. Downloading this

00:05:50.650 --> 00:05:56.223
information from the iCloud
server. This can take a long

00:05:56.223 --> 00:06:01.595
time to download. If there is 1
terabyte in various graphs, it's

00:06:01.595 --> 00:06:03.830
going to take a really long time
to download all that

00:06:03.830 --> 00:06:10.203
information. System
configuration, this is how you

00:06:10.203 --> 00:06:13.440
check a system real quickly to
see if it has iCloud enabled or

00:06:13.440 --> 00:06:17.777
not. There are different data
paths. As well as a registry

00:06:17.777 --> 00:06:22.782
key. There is a lot of different
files, file path and different

00:06:22.782 --> 00:06:27.754
locations on the file system you
can check. These are the quick

00:06:27.754 --> 00:06:31.491
and dirty places. Throughout
this presentation I throw in

00:06:31.491 --> 00:06:35.662
incredibly long file names and
paths. This is purely for

00:06:35.662 --> 00:06:40.233
documentation. I'm not going to
read out these file paths for

00:06:40.233 --> 00:06:46.072
you because I will trip over my
words. But I like to document my

00:06:46.072 --> 00:06:49.809
presentations well. If you go
back and do forensics

00:06:49.809 --> 00:06:54.781
investigations, go to these data
paths in your own systems and on

00:06:54.781 --> 00:06:57.284
your investigative systems
..(audio blipped).. security

00:06:57.284 --> 00:07:01.855
type things and look at these
files. See what data is leaking

00:07:01.855 --> 00:07:06.359
from these files. I think you
might be worried about what some

00:07:06.359 --> 00:07:10.864
of the data might be leaking
from your enterprise

00:07:10.864 --> 00:07:16.336
environment. Let's get to the
iCloud data. So on disk, disk

00:07:16.336 --> 00:07:19.839
images, forensics related,
relatively easy to case.

00:07:19.839 --> 00:07:24.844
Whatever your favorite imaging
tool is. OS 10, Windows, no

00:07:24.844 --> 00:07:30.350
problem, we can get the data.
You might have encryption or

00:07:30.350 --> 00:07:35.355
whatever, that's another talk.
OS is the interesting one. We

00:07:35.355 --> 00:07:40.860
can do physical acquisition type
analysis now. It's going to be

00:07:40.860 --> 00:07:46.366
most important to get physical
access. So 64 bit and data

00:07:46.366 --> 00:07:51.338
protection and all that stuff
has limited forensics. But it's

00:07:51.338 --> 00:07:54.874
not impossible. If there is a
jailbreak out there, you can get

00:07:54.874 --> 00:07:59.746
this data. Jailbreak your phone,
look at the logical file system,

00:07:59.746 --> 00:08:04.784
grab the files that you need. I
do tend to like Alcom soft. It's

00:08:04.784 --> 00:08:11.458
a piece of Russian software buzz
it's used to do a physical

00:08:11.458 --> 00:08:16.363
logical which is a tar ball of
all the user related files. Not

00:08:16.363 --> 00:08:22.635
a full physical but enough to
get the job done. ICloud .com.

00:08:22.635 --> 00:08:27.874
We're going to go over various
download tools. Some more

00:08:27.874 --> 00:08:32.045
sketchy than others. And other
downloadable storage types.

00:08:32.045 --> 00:08:37.817
ICloud back ups. Those are very
similar to iTunes style back

00:08:37.817 --> 00:08:43.556
ups. It bundles files up,
renames them with a hash. And

00:08:43.556 --> 00:08:48.628
then stores them up in the
iCloud. Versus say on your

00:08:48.628 --> 00:08:52.499
system, on the Windows system or
OS 10 system through iTunes. It

00:08:52.499 --> 00:08:57.871
has very similar data structures
in there. We have iCloud

00:08:57.871 --> 00:09:02.675
specific data. Stuff that is not
put into the iCloud back up.

00:09:02.675 --> 00:09:06.312
Mobile documents, photos, synced
preferences. I'm going to point

00:09:06.312 --> 00:09:10.383
these two locations out there.
For instance iCloud back ups,

00:09:10.383 --> 00:09:14.854
you might have certain back ups,
snapshots in time. You might

00:09:14.854 --> 00:09:20.126
have one from a year ago, that
is going to be different than

00:09:20.126 --> 00:09:25.698
one that you did today. You can
have 3, 4, 5, 10 different back

00:09:25.698 --> 00:09:31.938
up files. So back up tools. Some
are more sketchy than others. If

00:09:31.938 --> 00:09:37.310
you do a Google search for
iCloud back up or iCloud

00:09:37.310 --> 00:09:42.215
download, you're going to get a
ton of different ..(audio

00:09:42.215 --> 00:09:48.588
blipped).. these cost from 10 to
50 to 80 bucks. It does download

00:09:48.588 --> 00:09:54.961
your software. How much do you
trust a lot of these tools. Is

00:09:54.961 --> 00:10:00.333
it taking your credentials and
storing them for later on. We

00:10:00.333 --> 00:10:06.239
have to look into that further.
Less sketchy we have I loop

00:10:06.239 --> 00:10:10.777
which was created --
open-sourced and is useful. As

00:10:10.777 --> 00:10:15.849
well as the forensic level. This
is going to be Alcon soft, phone

00:10:15.849 --> 00:10:20.520
breaker, [indiscernible] I will
get into each of these in more

00:10:20.520 --> 00:10:26.459
detail. I loop you have to have
the Apple ID. It does not have

00:10:26.459 --> 00:10:31.130
two factor support, doesn't have
token support. It does run on

00:10:31.130 --> 00:10:36.236
python. While I make a Mac fan
girl ..(audio blipped).. on a

00:10:36.236 --> 00:10:40.206
Mac. Those Windows users and
Linux users can pull down iCloud

00:10:40.206 --> 00:10:46.212
data. Command only. Open-source.
Nobody complained about that.

00:10:48.481 --> 00:10:51.317
And it's free which is
excellent. If you're doing

00:10:51.317 --> 00:10:55.555
research you want to play around
with you own data and see what

00:10:55.555 --> 00:10:59.325
this looks like, use it. It's
very, very useful. But it does

00:10:59.325 --> 00:11:01.995
not have two-factor support.
..(audio blipped).. you can't

00:11:01.995 --> 00:11:09.602
get the data. So what does have
two-factor support is the Alcon

00:11:09.602 --> 00:11:17.510
phone breaker. This -- password
and authentication, supports

00:11:17.510 --> 00:11:21.214
two-factor authentication as
well. ..(audio blipped).. type

00:11:21.214 --> 00:11:25.952
of data identifiers and pass
codes and things that you have.

00:11:25.952 --> 00:11:31.224
You should be good to go. It
does cost quite a bit more. --

00:11:31.224 --> 00:11:36.763
charge hundreds of dollars more.
We're looking at 200 to $800.

00:11:36.763 --> 00:11:41.801
This runs on Mac or Windows.
Each version has different

00:11:41.801 --> 00:11:47.840
capabilities to it. They came
out with the Mac version a few

00:11:47.840 --> 00:11:51.377
months ago. Windows and
professional versions have

00:11:51.377 --> 00:11:55.915
slightly more capability with
breaking iTunes back ups and

00:11:55.915 --> 00:12:01.888
encrypted back ups and things
like that. Take a look at it.

00:12:01.888 --> 00:12:06.926
That's the basics. Now we're
going to get into the

00:12:06.926 --> 00:12:13.499
nitty-gritty of the data. A lot
of P lists. If you have never

00:12:13.499 --> 00:12:19.539
done Mac analysis before there
are files called P lists. I can

00:12:19.539 --> 00:12:24.577
only compare them to registry
type files. Key data values.

00:12:24.577 --> 00:12:29.616
Basically describing a lot of
the configuration and data saved

00:12:29.616 --> 00:12:36.189
across the systems. These are
found on OS 10 and I OS. So

00:12:36.189 --> 00:12:40.226
synced references. These are
data files for configurations.

00:12:40.226 --> 00:12:43.730
Saving variation preferences and
weather configurations, stock

00:12:43.730 --> 00:12:47.767
configurations. Those are the
relatively more boring ones.

00:12:47.767 --> 00:12:53.840
Let's get into a few of these.
So email. ICloud saves your

00:12:53.840 --> 00:12:59.879
recent email information. So in
the data paths above you can see

00:12:59.879 --> 00:13:06.819
a lot of these P list files.
Example of one here. So under

00:13:06.819 --> 00:13:12.825
the values key, you see this GP
or MR under score and some hash

00:13:12.825 --> 00:13:17.096
like value. Under each one of
these keys holds a lot more

00:13:17.096 --> 00:13:21.300
different pieces of data. Now
this one is called mail, come

00:13:21.300 --> 00:13:26.506
Apple mail dot reasons dot P
list. I have an arrow there

00:13:26.506 --> 00:13:31.277
showing how many recent ..(audio
blipped).. it stores a lot. It's

00:13:31.277 --> 00:13:36.115
combing through the mail and
breaking out and storing that

00:13:36.115 --> 00:13:41.587
information in there. I don't
email a lot. But it's saving 680

00:13:41.587 --> 00:13:46.759
different conversations. Let me
get into this in more detail.

00:13:46.759 --> 00:13:53.533
The MR is data for a single
contact. So if I'm talking point

00:13:53.533 --> 00:13:59.739
to point with one other person,
that data is stored in there.

00:13:59.739 --> 00:14:05.912
For group emails it uses GP. It
marks these things in relatively

00:14:05.912 --> 00:14:11.050
easy way. I have two examples on
the screen. Example on the left

00:14:11.050 --> 00:14:15.021
shows us a point to point
contact. I'm talking with

00:14:15.021 --> 00:14:19.625
heather, it saves all of this
information associated with it.

00:14:19.625 --> 00:14:24.530
Who I contacted, when I
contacted them, best I can tell

00:14:24.530 --> 00:14:28.968
it's the last five, the most
recent five dates associated

00:14:28.968 --> 00:14:33.873
with that contact. And that's
messages going to and from. So

00:14:33.873 --> 00:14:38.778
not just to a certain person,
but ..(audio blipped).. It has

00:14:38.778 --> 00:14:44.117
the client that's been used. In
this case it's Com Apple mail

00:14:44.117 --> 00:14:49.355
which is the default mail
application on OS 10. On the

00:14:49.355 --> 00:14:52.992
right of the screen we have
similar data. Looks very close

00:14:52.992 --> 00:14:59.565
to being the same. T value here,
I'm going to try to -- T value

00:14:59.565 --> 00:15:02.902
here holds the different times
and dates for all of the recent

00:15:02.902 --> 00:15:08.841
contacts -- this particular
group three different times. Mac

00:15:08.841 --> 00:15:15.515
of five here. Down here we have
the key over here. This holds

00:15:15.515 --> 00:15:19.519
the contact information. In this
group conversation, who was I

00:15:19.519 --> 00:15:24.724
having it with. With Henry,
talking with Rob. I do a lot of

00:15:24.724 --> 00:15:28.728
sand stuff and I have to
communicate with multiple people

00:15:28.728 --> 00:15:31.964
often. It stores all that
information in there. Nice

00:15:31.964 --> 00:15:36.869
information to have if you're
trying to track who is talking

00:15:36.869 --> 00:15:42.675
with who. You can set up VIP
senders. This is a default Mac

00:15:42.675 --> 00:15:47.113
mail type of thing. You
basically star a certain contact

00:15:47.113 --> 00:15:52.885
and they are now your VIP. Their
emails get bumped up or flagged

00:15:52.885 --> 00:15:58.224
or whatever, just to draw your
attention to them. Same mark up

00:15:58.224 --> 00:16:02.395
here. T for time, A for address,
and some other information

00:16:02.395 --> 00:16:08.000
associated. So it does have the
VIP underscore flag here, you

00:16:08.000 --> 00:16:13.005
can tell it's a VIP contact.
..(audio blipped).. in reality,

00:16:13.005 --> 00:16:20.646
but the data is there. Just we
mail messages, text messages,

00:16:20.646 --> 00:16:27.320
SMS, jabber, aim messages. All
of those messages get the same

00:16:27.320 --> 00:16:33.726
data associated with them. So in
the app Com Apple messages list

00:16:33.726 --> 00:16:39.198
depending on the operating
system that you're looking on,

00:16:39.198 --> 00:16:45.872
it stores the same data. The GP
underscore, the MR underscore.

00:16:45.872 --> 00:16:50.109
It's storing the same
information. The times and dates

00:16:50.109 --> 00:16:54.146
that that contact was last
messaged. This is not just I

00:16:54.146 --> 00:16:58.317
message. I want to make a note
of that. I want to highlight

00:16:58.317 --> 00:17:04.257
this iMessage here and mobile
SMS here. Different protocols

00:17:07.059 --> 00:17:10.263
show you different data within
the property list files. The

00:17:10.263 --> 00:17:15.067
same format, the address, the
times T protocol. And with

00:17:15.067 --> 00:17:20.373
messaging you get phone numbers
and email addresses. I can send

00:17:20.373 --> 00:17:24.377
an iMessage to someone else's
phone number because that's how

00:17:24.377 --> 00:17:31.450
the protocol works. Good data
collection there. If you open a

00:17:31.450 --> 00:17:37.456
bunch of tabs on the OS system,
you open the iPad and it syncs

00:17:41.861 --> 00:17:47.867
all the tabs down. You can see
in the Screenshots to the right,

00:17:51.771 --> 00:17:55.575
the different tabs open on
different systems. If I open one

00:17:55.575 --> 00:17:59.178
tab on one, I move to a
different device, I can open

00:17:59.178 --> 00:18:05.184
that same tab. That is getting
synced in realtime. So under the

00:18:05.184 --> 00:18:10.656
sync tabs, it's another P list.
I often say you get sick of P

00:18:10.656 --> 00:18:13.659
lists quick but then you find
the value in them. In the sync

00:18:13.659 --> 00:18:19.665
tabs we get a bunch of different
Goit. Under each is a different

00:18:22.735 --> 00:18:28.607
device. Under the value here,
modified and device name. I call

00:18:28.607 --> 00:18:34.714
my mini my pad, mini my pad.
That is the device name I

00:18:34.714 --> 00:18:39.385
provided it. So and so's Mac
book or mini or something like

00:18:39.385 --> 00:18:45.091
that. You have a time and date
it was last synced you can do

00:18:45.091 --> 00:18:50.496
temporal correlation with that
as well. So now we're going to

00:18:50.496 --> 00:18:56.702
get into this tab's key here.
Under the tab's key is data for

00:18:56.702 --> 00:19:01.741
each tab open. That's relatively
simple data. The title of the

00:19:01.741 --> 00:19:04.844
page and the URL it was for.
Think about this. If you're

00:19:04.844 --> 00:19:10.516
being investigated for whatever
bad thing, the cops come back

00:19:10.516 --> 00:19:17.923
and they get a copy of your
iPhone. You still have say 5

00:19:17.923 --> 00:19:22.728
different other Mac devices or I
devices that they don't know

00:19:22.728 --> 00:19:25.765
about. If you're using iCloud
and you're syncing all that

00:19:25.765 --> 00:19:29.802
data, they can potentially see
what safari tabs you have open

00:19:29.802 --> 00:19:34.940
at a given period because it's
syncing in realtime. Maybe you

00:19:34.940 --> 00:19:40.312
opened tabs on your web browser
at home that you shouldn't have.

00:19:40.312 --> 00:19:46.152
Whatever the case may be. That
is synced down. If they have a

00:19:46.152 --> 00:19:52.425
copy of one, they might as well
have a copy of all of them.

00:19:52.425 --> 00:19:56.028
Synced access points. Wi-Fi
configurations are synced across

00:19:56.028 --> 00:20:01.400
the various devices. OS 10, this
is the Screenshot to the right.

00:20:01.400 --> 00:20:05.438
You can see the ..(audio
blipped).. that you have

00:20:05.438 --> 00:20:09.475
connected to, attempted to
connect to. It saves this

00:20:09.475 --> 00:20:14.013
information for all time until
you delete it or do a complete

00:20:14.013 --> 00:20:20.586
clean reinstall. So in this
Wi-Fi panel you can see I

00:20:20.586 --> 00:20:25.324
contacted to Hyatt guest room,
airports and hotels and all

00:20:25.324 --> 00:20:28.894
sorts of stuff. There are other
ones that I do not show you here

00:20:28.894 --> 00:20:32.998
that can be more sensitive.
Maybe to corporate environments

00:20:32.998 --> 00:20:38.637
or internal Wi-Fi, places that
are very specific that have an

00:20:38.637 --> 00:20:43.476
access point name that is --
could be sensitive. Could be

00:20:43.476 --> 00:20:46.378
considered sensitive
information. Naturally this is

00:20:46.378 --> 00:20:51.050
synced across all devices.
Couple other P lists here. On

00:20:51.050 --> 00:20:56.755
the left you can see all the
things that I've connected to

00:20:56.755 --> 00:21:01.093
fairly recently. I like to keep
a lot of my data in here purely

00:21:01.093 --> 00:21:04.530
for science. I do not like to
keep this up here, but I do like

00:21:04.530 --> 00:21:08.634
to have good data to show you
all when I do my presentations.

00:21:08.634 --> 00:21:14.240
So let's take a look at Reagan
national Wi-Fi. I'm from the DC

00:21:14.240 --> 00:21:19.845
area and hang out at the airport
and like to connect to their

00:21:19.845 --> 00:21:25.017
free Wi-Fi. Why not. This is
synced back. What kind of data

00:21:25.017 --> 00:21:29.722
is synced? The AP mode and all
that good stuff. But

00:21:29.722 --> 00:21:33.826
specifically about the device
information, we get the name of

00:21:33.826 --> 00:21:38.731
the guys, in this case it's my
phone 5S. As well as when this

00:21:38.731 --> 00:21:43.636
was synced. Added at. So this
string here basically says, I

00:21:43.636 --> 00:21:47.840
was at national airport on
February 9th 2014 at a very

00:21:47.840 --> 00:21:52.244
specific time. This is very,
very specific. Now if you look

00:21:52.244 --> 00:21:55.848
at all the access points you do
data correlation, you can make a

00:21:55.848 --> 00:21:59.285
beautiful time line of ever
where this person connected to

00:21:59.285 --> 00:22:05.791
at a certain point in time. Very
scary stuff. So next up we have

00:22:05.791 --> 00:22:11.664
map information. I was always
kind ..(audio blipped).. I don't

00:22:11.664 --> 00:22:19.338
find it particularly useful. But
I guess I sort of brought it in

00:22:19.338 --> 00:22:26.846
to sync all the iCloud map data
with. I use maps on my iPhone,

00:22:26.846 --> 00:22:31.817
sometimes better off than others
and I use Apple maps. Not the

00:22:31.817 --> 00:22:37.823
most reliable but I do use it.
That data gets synced to OS 10

00:22:40.326 --> 00:22:46.332
maps on my laptop and desktop
systems at home. So favorite

00:22:49.301 --> 00:22:53.672
locations. These are user
created favorite locations. Your

00:22:53.672 --> 00:22:57.943
home address, your work address,
whatever places you want to just

00:22:57.943 --> 00:23:02.014
go to very quickly. That is
saved in its own list. It's a P

00:23:02.014 --> 00:23:08.687
list file. Under sync underscore
bookmark an item and a goit. A

00:23:08.687 --> 00:23:14.793
lot of these are based upon good
identifying information. We can

00:23:14.793 --> 00:23:20.366
search across the drive for
various GOITs to find the

00:23:20.366 --> 00:23:27.573
information as well. The meat is
under the data key. This is a

00:23:27.573 --> 00:23:32.511
proprietary data blob you can
say. Apple does this every once

00:23:32.511 --> 00:23:36.081
in a while. I haven't taken the
time out to pars it. You can see

00:23:36.081 --> 00:23:39.718
what the data is supposed to be
using the strings on there. I

00:23:39.718 --> 00:23:44.089
through it into a hex editor. I
was in Denmark and doing some

00:23:44.089 --> 00:23:50.095
tourist stuff. If you have not
been to copen hay again, I

00:23:53.599 --> 00:23:57.603
highly recommend it. Are you
from there? Awesome. It's a

00:23:57.603 --> 00:24:04.977
beautiful place. Touristy but
pretty. Map data. Recent

00:24:04.977 --> 00:24:11.483
addresses and recent location
and searches. One note on the

00:24:11.483 --> 00:24:15.688
recent addresses, this is not
user driven. This is being

00:24:15.688 --> 00:24:19.591
extracted from your email files.
Various web addressed and

00:24:19.591 --> 00:24:25.464
extracted from all sorts of
stuff. I have a couple of

00:24:25.464 --> 00:24:29.935
examples in here. I was condo
searching and hooked up with red

00:24:29.935 --> 00:24:34.273
fin and looking at different
condos wherever. Every time I

00:24:34.273 --> 00:24:39.912
got a red fin email and those
things come in daily, it's

00:24:39.912 --> 00:24:44.583
scraping the addresses for all
those emails and throwing them

00:24:44.583 --> 00:24:50.689
into this database. This is not
a choice of that the user can

00:24:50.689 --> 00:24:54.660
disable. Be aware of that.
Recent location and searches.

00:24:54.660 --> 00:24:58.630
That is something that the user
can do. Wherever they search,

00:24:58.630 --> 00:25:06.205
maybe looking for a pharmacy in
San Diego or a burger place

00:25:06.205 --> 00:25:12.711
directions in Fairfax, all sorts
of good tracking information in

00:25:12.711 --> 00:25:16.048
there. Where has this person
been. So extracted information.

00:25:16.048 --> 00:25:22.020
Follows the same structure we've
seen in other property list

00:25:22.020 --> 00:25:27.760
files before. The date and times
of the emails. So it's

00:25:27.760 --> 00:25:32.998
extracting that time stamp from
them. The core recents. Under

00:25:32.998 --> 00:25:38.937
this P here, basically it's
showing us this information was

00:25:38.937 --> 00:25:45.411
scraped from a red fin email on
April 26, 2015. There's the URL.

00:25:45.411 --> 00:25:53.052
There's the information that was
scraped. The subject of the

00:25:53.052 --> 00:25:57.923
email and all sort of related
information. So recent location

00:25:57.923 --> 00:26:01.427
and searches. This file is the
same ..(audio blipped).. weird

00:26:01.427 --> 00:26:06.465
proprietary data blob. You can
look at it and look at the

00:26:06.465 --> 00:26:10.669
strings and say, look, this
person was searching for a

00:26:10.669 --> 00:26:15.340
pharmacy in San Diego. Time
stamps as well and you can go

00:26:15.340 --> 00:26:18.911
back and figure out when was
this person specifically looking

00:26:18.911 --> 00:26:24.917
for a pharmacy in San Diego. So
moving onto some more

00:26:26.952 --> 00:26:32.324
application level data. So
various applications, mail,

00:26:32.324 --> 00:26:36.128
notes, various documents, all
that stuff, also gets synced

00:26:36.128 --> 00:26:42.134
through iCloud. So just to give
you a Screenshot of what the

00:26:42.134 --> 00:26:48.173
document might look like. We
have the OS 10 Screenshot of me

00:26:48.173 --> 00:26:54.213
saving a document to my iCloud
drive. You can save it through

00:26:54.213 --> 00:26:59.751
the text iCloud drive or just
..(audio blipped).. and I'll get

00:26:59.751 --> 00:27:05.724
into that more in a few more
Screenshots. If you're on the

00:27:05.724 --> 00:27:10.229
other side you see different
file folders, pre-populated in

00:27:10.229 --> 00:27:14.266
there for various document
formats. Numbers, keynotes. You

00:27:14.266 --> 00:27:19.805
can just drag files into that
white space. Works very much

00:27:19.805 --> 00:27:24.910
like Dropbox might work. So all
these documents are really under

00:27:24.910 --> 00:27:30.048
a directory called mobile
documents both on the OS 10

00:27:30.048 --> 00:27:34.520
operating system and the
underlying file system. Pages

00:27:34.520 --> 00:27:39.525
and keynotes get their own
directory. COMTilde is for

00:27:39.525 --> 00:27:44.563
pages. Pre-populated by apple.
The other category at the

00:27:44.563 --> 00:27:51.236
bottom, that is for anything
that -- not a pages document or

00:27:51.236 --> 00:27:57.910
a keynote document. If I want to
throw a PDF or Windows

00:27:57.910 --> 00:28:03.982
executable or whatever file, it
will take it. Very Dropbox like.

00:28:03.982 --> 00:28:10.122
Not Apple specific documents. So
looking more on the disk. Taking

00:28:10.122 --> 00:28:16.795
a more forensic look at this.
These are all stored in that

00:28:16.795 --> 00:28:21.266
mobile documents directory under
the specific application. Now

00:28:21.266 --> 00:28:27.406
the one thing about I work type
documents is they're bundled

00:28:27.406 --> 00:28:32.978
files. They're a directory of
other files. They are presented

00:28:32.978 --> 00:28:38.984
as a single file but when you --
look in the terminal there are a

00:28:41.320 --> 00:28:46.892
bunch of other files associated
with it. Different pictures and

00:28:46.892 --> 00:28:54.132
data and meta data, all bundled
into one. That is why you might

00:28:54.132 --> 00:29:00.205
see multiple files under one
document. I OS followed the same

00:29:00.205 --> 00:29:05.243
file structure. Mobile library
you have the mobile documents

00:29:05.243 --> 00:29:12.484
directory. It's going to look
similar to what we saw in OS 10.

00:29:12.484 --> 00:29:18.056
COMTILDE or whatever app you
might have. On Windows. Same

00:29:18.056 --> 00:29:25.297
thing. This is one of the few
things that syncs down to a

00:29:25.297 --> 00:29:29.868
Window's device. Same similar
structure, the mobile documents

00:29:29.868 --> 00:29:36.274
directory. Under your user
directory through Windows. So

00:29:36.274 --> 00:29:43.148
photos. This application is
probably more popular than not.

00:29:43.148 --> 00:29:46.385
If you have an iPhone you tend
to take a lot of photos. We can

00:29:46.385 --> 00:29:52.491
get giant disks now, up to 128
gigs and people love to fill

00:29:52.491 --> 00:29:56.628
them up with pictures of the
kids, the cats, foods, whatever

00:29:56.628 --> 00:30:00.866
is happening in Vegas last
night. They're synced up and

00:30:00.866 --> 00:30:07.639
stored. There are two
applications now for photos. The

00:30:07.639 --> 00:30:15.147
legacy photos application and
photos that came out in 10.10.2

00:30:15.147 --> 00:30:21.987
or 3. I can't recall now. Two
different applications and on

00:30:21.987 --> 00:30:26.091
the underlying side they look
completely different to us. I'm

00:30:26.091 --> 00:30:30.796
going to go over the legacy one
first. People are still using

00:30:30.796 --> 00:30:35.467
it. It's not that old to begin
with. There is this data

00:30:35.467 --> 00:30:39.004
structure under applications for
..(audio blipped).. management.

00:30:39.004 --> 00:30:43.542
Under this particular directory
is all the iCloud related

00:30:43.542 --> 00:30:47.112
information associated with
photos. One particular database,

00:30:47.112 --> 00:30:53.685
this is a SQL like database.
This is where the bulk of the

00:30:53.685 --> 00:30:59.758
meta data for each photo is
stored and we're going to get

00:30:59.758 --> 00:31:06.798
into that more in depth in a
slide or two. You also have the

00:31:06.798 --> 00:31:11.336
photos located underneath here.
That assets directory which has

00:31:11.336 --> 00:31:16.408
pub, sub, sub share. Holds the
photo information. This is

00:31:16.408 --> 00:31:20.979
different. This iLife asset
management database. Holds a ton

00:31:20.979 --> 00:31:25.517
of different pieces of meta
data. Height, width, iCloud

00:31:25.517 --> 00:31:31.590
person ID. We can associate it
to a particular user. The photo

00:31:31.590 --> 00:31:36.161
UUID, the device UUID. This is
particularly interesting because

00:31:36.161 --> 00:31:42.734
we can tie it back to a certain
device. File name, size, time

00:31:42.734 --> 00:31:47.806
stamps, all sorts of great meta
data associated with each

00:31:47.806 --> 00:31:52.878
particular photo. You have photo
stream photos. Those are your

00:31:52.878 --> 00:31:58.950
photos stored in slash sub. If
you have a shared album, those

00:31:58.950 --> 00:32:05.457
are sub dash share and each is
stored under this hash. This is

00:32:05.457 --> 00:32:11.029
that UUID for each particular
photo. If you're looking for a

00:32:11.029 --> 00:32:16.101
particular one, you find some
interesting meta data in the

00:32:16.101 --> 00:32:22.707
database, you can find it by the
UDID. Search for the file name

00:32:22.707 --> 00:32:27.746
and directory and you have the
photo that is particularly

00:32:27.746 --> 00:32:32.317
interesting to you. The new
photos application, this one

00:32:32.317 --> 00:32:37.889
stored in a bundle. Has photos
with other stuff underneath it.

00:32:37.889 --> 00:32:43.361
The photos library, again, those
bundled files. Underneath here

00:32:43.361 --> 00:32:47.332
we have all sorts of stuff.
Stuff I haven't had the time to

00:32:47.332 --> 00:32:50.902
take a look at. Attachments,
masters, plug ins, previews

00:32:50.902 --> 00:32:54.673
whatever. The new photos
application stores information

00:32:54.673 --> 00:33:01.546
for all the photo stuff on that
OS 10 disk. The previous one

00:33:01.546 --> 00:33:06.918
stored information just for the
iCloud photos. ICloud is now

00:33:06.918 --> 00:33:11.223
more integrated. So now it's
containing everything associated

00:33:11.223 --> 00:33:15.894
with it. So the actual photos
are stored under the masters

00:33:15.894 --> 00:33:19.164
directory. Maybe stored under
other directories if there were

00:33:19.164 --> 00:33:24.336
edits made to them or modified
in some way. Maybe added text to

00:33:24.336 --> 00:33:29.474
it or something like that. But
the general -- themselves are

00:33:29.474 --> 00:33:34.012
under the masters directory. We
have time stamped file paths

00:33:34.012 --> 00:33:37.449
which makes it easy to find
photos that were taken for a

00:33:37.449 --> 00:33:41.887
certain time period. How do we
actually tell, because this is

00:33:41.887 --> 00:33:45.924
all the photos, how do we tell
which are iCloud specific

00:33:45.924 --> 00:33:51.496
photos. I can have a digital SLR
and hook it up and those photos

00:33:51.496 --> 00:33:55.300
would be in those directory
PSFTP the extended attributes we

00:33:55.300 --> 00:33:59.237
can tell if it's an iCloud photo
or not. My favorite commands is

00:33:59.237 --> 00:34:06.945
XXTTR. I like the flags X and L.
We can see what this quarantine

00:34:06.945 --> 00:34:11.917
value is. The COM Apple
quarantine, the metadata values

00:34:11.917 --> 00:34:18.023
are populated every time you
download a file, every time an

00:34:18.023 --> 00:34:24.095
attachment comes in. This COM
Apple core chain is tagged with

00:34:24.095 --> 00:34:29.100
specific files. Forensically
speaking this is gold. It tells

00:34:29.100 --> 00:34:35.740
you when it was downloaded. That
is a time stamp. What process

00:34:35.740 --> 00:34:41.846
downloaded this photo. In this
instance we see cloud photos D.

00:34:41.846 --> 00:34:47.919
Say it's downloaded from safari
or FireFox, it shows you that.

00:34:47.919 --> 00:34:54.025
On a side note, forensically
speaking take a look at this

00:34:54.025 --> 00:34:59.564
information. It's one of my
favorite pieces. Meta data. On

00:34:59.564 --> 00:35:05.036
the legacy photos application we
have the iLife photo database.

00:35:05.036 --> 00:35:11.676
That stored all the metadata of
each photo. Here we have a

00:35:11.676 --> 00:35:16.681
library [indiscernible] file.
This is SQL like database. If

00:35:16.681 --> 00:35:24.422
you see anything on Mac it's a P
list file or SQL like database.

00:35:24.422 --> 00:35:31.096
Everything is one of those two
file types. So the photos. We

00:35:31.096 --> 00:35:37.736
get a lot more meta data on the
photos app application. Time

00:35:37.736 --> 00:35:42.173
stamps, height, width. But also
locational information. We're

00:35:42.173 --> 00:35:49.114
getting a reverse DNS look up of
this particular data. We don't

00:35:49.114 --> 00:35:52.617
have to pull that information
from XF data and throw it into

00:35:52.617 --> 00:35:56.121
Google or whatever, it's showing
us. This photo came from Denmark

00:35:56.121 --> 00:36:03.194
on a certain date and time. So
really good information in

00:36:03.194 --> 00:36:08.400
there. We can scroll through the
database and find a picture from

00:36:08.400 --> 00:36:11.503
a certain location that is of
particular interest and look for

00:36:11.503 --> 00:36:17.509
that without doing a lot of the
background work for it. So the

00:36:19.644 --> 00:36:24.215
new photos application. All that
photo data, photo stream data is

00:36:24.215 --> 00:36:28.887
stored in these particular
files. I have an example here of

00:36:28.887 --> 00:36:32.290
I OS. A lot of the data is
stored in here as well. The

00:36:32.290 --> 00:36:38.096
height, width, the other meta
data associated with. The stuff

00:36:38.096 --> 00:36:44.903
weave seen in OS 10 and on I OS.
Shared albums. We have certain

00:36:44.903 --> 00:36:50.408
file paths for them. It does
contain the same information. I

00:36:50.408 --> 00:36:55.380
can see who shared this
photoalbum with me and other

00:36:55.380 --> 00:37:00.485
information, my email address or
theirs, when they shared it,

00:37:00.485 --> 00:37:04.222
identifying information
associated with it. As well as

00:37:04.222 --> 00:37:10.428
the title of the shared album.
Now on Windows, one of the few

00:37:10.428 --> 00:37:16.434
things that is synced down to
Windows. You still have my photo

00:37:18.536 --> 00:37:24.642
stream and shared directories.
This is under the photos

00:37:24.642 --> 00:37:28.947
directory on Windows. Another
Screenshot of my photo stream.

00:37:28.947 --> 00:37:35.153
These files are stored in a JPEG
or PIN format depending on what

00:37:35.153 --> 00:37:42.127
it .S pretty easy to get to. If
it's a shared album you find

00:37:42.127 --> 00:37:47.165
it's in another hash type thing.
We can correlate this back to

00:37:47.165 --> 00:37:53.304
other databases as well. So
passbook passes. This is

00:37:53.304 --> 00:37:57.776
interesting. I use passbook a
lot. I do a lot of travel. I use

00:37:57.776 --> 00:38:03.715
united to basically get my
passbook, my pass to get onto

00:38:05.950 --> 00:38:10.255
certain flights. Each flight I
take has a ticket associated

00:38:10.255 --> 00:38:15.927
with that. All those are stored
in the ubiquity cards directory.

00:38:15.927 --> 00:38:20.665
In this directory we have these
PK pass directories. So in these

00:38:20.665 --> 00:38:23.768
directories stores all the
information associated with each

00:38:23.768 --> 00:38:28.039
card. Now these can be airline
cards or Starbucks gift cards,

00:38:28.039 --> 00:38:33.178
target cards, what have you. You
won't see Apple pay related

00:38:33.178 --> 00:38:39.250
information. You won't see your
MasterCard or your AMX card or

00:38:39.250 --> 00:38:43.688
anything like that. That is not
Apple pay specific information.

00:38:43.688 --> 00:38:48.827
In these files we have
[indiscernible] this is a JSON

00:38:48.827 --> 00:38:52.764
file. Not an XML or anything or
a P list file, but a JSON file.

00:38:52.764 --> 00:38:58.069
Apple has to switch it up. This
stores all the meta data

00:38:58.069 --> 00:39:03.441
associated with each pass. This
shows what flight I was on, what

00:39:03.441 --> 00:39:07.512
seat, my united mileage plus
number, the gate I was at. All

00:39:07.512 --> 00:39:11.316
sorts of meta data. ..(audio
blipped).. each note that you

00:39:11.316 --> 00:39:18.022
take, whether on I OS or android
or OS 10 you see the same

00:39:18.022 --> 00:39:23.294
information synced up. You can
choose to make it a ..(audio

00:39:23.294 --> 00:39:28.099
blipped).. or not. But many
people do. It's like an

00:39:28.099 --> 00:39:32.804
automatic back up of that data.
So all that data is stored in

00:39:32.804 --> 00:39:38.209
these particular directories in
a SQL like database. I OS or OS

00:39:38.209 --> 00:39:44.082
10 is very, very similar. I've
done a query here to show you

00:39:44.082 --> 00:39:47.685
general information. Each note
has associated time stamps. When

00:39:47.685 --> 00:39:52.924
the note was created, last
modified and an HTML rendering

00:39:52.924 --> 00:39:57.195
of the Notacon tent. So very
easy to get to that data.

00:39:57.195 --> 00:40:02.333
Calendar and reminders. While
two separate applications on OS

00:40:02.333 --> 00:40:09.707
10 and I OS they're integrated
as one on the backend. I've done

00:40:09.707 --> 00:40:15.947
the same thing. SQL like
database. You can pull out quick

00:40:15.947 --> 00:40:22.186
information out of them. So when
was the calendar item created.

00:40:22.186 --> 00:40:28.426
What was the reminder for. Alarm
information, all sorts of meta

00:40:28.426 --> 00:40:33.031
data. These databases are
incredibly large. Really makes

00:40:33.031 --> 00:40:39.337
for awful screenshots. Thus I
made a tiny query to show the

00:40:39.337 --> 00:40:43.241
general information. Contact
information. All the Apple

00:40:43.241 --> 00:40:47.145
contacts. All the phone
contacts. The messaging contacts

00:40:47.145 --> 00:40:54.485
are all synced to back up to the
iCloud. So every time you sync a

00:40:54.485 --> 00:40:59.891
contact, they're pushed up to
the iCloud and saved on your

00:40:59.891 --> 00:41:06.164
systems at home and stored in a
SQL like database. I pulled out

00:41:06.164 --> 00:41:11.536
the records and the information
associated with it. While here I

00:41:11.536 --> 00:41:16.941
have a creation date, first,
last name for Andrew and I

00:41:16.941 --> 00:41:22.313
blocked out his number otherwise
he would receive calls but there

00:41:22.313 --> 00:41:26.718
can be a ton more information
associated. Social media

00:41:26.718 --> 00:41:30.621
accounts, physical addresses,
digital addresses. All sort of

00:41:30.621 --> 00:41:35.026
great contact information
depending on what the person put

00:41:35.026 --> 00:41:39.931
in there. Now we're down to
third-party applications. If you

00:41:39.931 --> 00:41:45.503
looked at some Screenshots
you've seen things like iCloud

00:41:45.503 --> 00:41:50.708
COM get Dropbox. Microsoft
office PowerPoint, one note, sky

00:41:50.708 --> 00:41:56.080
drive. It looks like these could
be reserved for future use. I

00:41:56.080 --> 00:42:00.118
looked at mine and tried playing
with the application to populate

00:42:00.118 --> 00:42:04.756
the data but they all seem to be
empty. Even the absence of data

00:42:04.756 --> 00:42:10.428
can tell us something. You can
see what applications I use just

00:42:10.428 --> 00:42:15.333
by looking at this. Maybe you
don't have my iPhone but you can

00:42:15.333 --> 00:42:21.439
tell some of the applications
that I use. I'm assuming this is

00:42:21.439 --> 00:42:27.011
reserved for future use. And
last but not least, iCloud key

00:42:27.011 --> 00:42:31.182
chain. This can be extremely
useful, people do not like

00:42:31.182 --> 00:42:35.553
typing in passwords on their I
OS devices. I can barely type on

00:42:35.553 --> 00:42:39.557
these things. I have small hands
and I don't like to do it. Maybe

00:42:39.557 --> 00:42:42.493
I want to save all my passwords
to Amazon or social media

00:42:42.493 --> 00:42:47.465
accounts into this database.
This key chain two dot DB is a

00:42:47.465 --> 00:42:52.270
SQL like database. You can look
in there and find strings of

00:42:52.270 --> 00:42:56.541
interest. If you get access to
the users OS 10 system and

00:42:56.541 --> 00:43:03.080
password, you can dump their
iCloud key chain which is useful

00:43:03.080 --> 00:43:09.086
to do. I have not found a way to
do it on an I OS specific

00:43:12.690 --> 00:43:20.498
device. But if you get access to
the users desktop or laptop it's

00:43:20.498 --> 00:43:25.303
easier. Email accounts, certs,
keys, credit card information,

00:43:25.303 --> 00:43:32.510
saved form data, addresses.
There is no limit to what can be

00:43:32.510 --> 00:43:36.113
saved. It works like the key
chain on OS 10. Just a

00:43:36.113 --> 00:43:42.120
Screenshot of the key chain
access program. So if you do

00:43:44.455 --> 00:43:48.292
have the user's password you can
click this lock up at the top,

00:43:48.292 --> 00:43:52.463
input the password and you've
unlocked the key chain and you

00:43:52.463 --> 00:43:55.266
can browse the data at your
leisure. That's it for the

00:43:55.266 --> 00:43:58.302
presentation. I do thank you for
coming to the presentation. If

00:43:58.302 --> 00:44:02.273
you have any questions for me, I
will be here for a couple

00:44:02.273 --> 00:44:08.279
minutes and then outside in the
hall. Feel free to email me any

00:44:10.314 --> 00:44:16.254
questions you might have. I'm on
Twitter. I do a lot of the

00:44:16.254 --> 00:44:19.824
Twittering, if you will. It's
probably the only social thing

00:44:19.824 --> 00:44:23.995
that I probably do. Feel free to
hit me up on that as well. Thank

00:44:23.995 --> 00:44:30.368
you for coming. I hope this was
informative and I hope you have

00:44:30.368 --> 00:44:33.304
a great rest of the conference.

