1
00:00:00,000 --> 00:00:07,259
these machines behind me were built atop
decades of program analysis science

2
00:00:07,259 --> 00:00:12,000
engineering / 21 year stages of
competition and built by pioneers

3
00:00:12,000 --> 00:00:17,670
program analysis scientists hackers and
engineers so tonight

4
00:00:18,180 --> 00:00:22,109
these machines will play capture the
flag against each other tomorrow

5
00:00:22,109 --> 00:00:25,350
we hope the lessons learned will change
the field of computer security

6
00:00:25,350 --> 00:00:28,859
thank you there's an enormous amount of
computational power ready to be

7
00:00:28,859 --> 00:00:33,540
unleashed here at CDC beneath the stage
are huge amounts of electricity and

8
00:00:33,540 --> 00:00:37,829
water needed to power and cool the
supercomputers on the stage three

9
00:00:37,829 --> 00:00:39,690
hundred kilowatts of power

10
00:00:39,690 --> 00:00:44,459
that's enough to power one and a half
city blocks a hundred and eighty tons of

11
00:00:44,460 --> 00:00:47,730
water flow through these pipes at a rate
of two hundred gallons per minute to

12
00:00:47,730 --> 00:00:50,879
keep the computers on the racks
liquid-cooled at all times

13
00:00:50,879 --> 00:00:56,129
the entire stage is air-gapped to
protect the data and the system's the

14
00:00:56,129 --> 00:00:59,550
air gap also validates that there's no
other outside influence and no human

15
00:00:59,550 --> 00:01:00,510
interaction

16
00:01:00,510 --> 00:01:05,908
everything that happens inside the air
gap is autonomous data flows through the

17
00:01:05,909 --> 00:01:09,600
air gap through an air gap robot that
literally reads blu rays of burn data

18
00:01:09,600 --> 00:01:11,009
from inside the game

19
00:01:11,010 --> 00:01:16,650
the air gap robot physically moves the
blu-ray across and outside the air gap

20
00:01:16,650 --> 00:01:22,259
then drops it into a reader that goes
into our scores and visualization at the

21
00:01:22,259 --> 00:01:26,070
center back of the stage is a system of
computers that's a digital referee it

22
00:01:26,070 --> 00:01:29,250
issued the challenge sets communicates
to the bots and handles the scoring and

23
00:01:29,250 --> 00:01:30,240
systems

24
00:01:30,240 --> 00:01:33,240
the only humans in the game are inside
the air gap

25
00:01:33,840 --> 00:01:36,850
these are human refs

26
00:01:36,850 --> 00:01:39,939
ready ready

27
00:01:39,939 --> 00:01:44,048
game started at nine hundred and
forty-five seconds of Pacific

28
00:01:44,049 --> 00:01:49,299
welcome everyone to the first ever fully
automated cybersecurity automated

29
00:01:49,299 --> 00:01:50,590
competition

30
00:01:50,590 --> 00:01:55,060
so what we'll see here today it's much
more than a World first ball machine

31
00:01:55,060 --> 00:01:56,140
hacking tournament

32
00:01:56,140 --> 00:02:00,670
the lessons learned to lead to a world
where computer viruses malware and

33
00:02:00,670 --> 00:02:06,220
attacks are discovered in a matter of
weeks days or even seconds right now

34
00:02:06,820 --> 00:02:09,880
all the teams are playing they're all
interactive system all of them are

35
00:02:09,880 --> 00:02:14,650
finding vulnerabilities they're all
fixing them every single team is playing

36
00:02:14,650 --> 00:02:18,790
the game and they're all advancing the
state of the art this concept that we've

37
00:02:18,790 --> 00:02:22,090
talking we've been talking about with
the POV the the bots have to actually

38
00:02:22,090 --> 00:02:26,470
generate the traffic that's necessary to
exercise those bugs so as they

39
00:02:26,470 --> 00:02:30,160
demonstrate those vulnerabilities
they'll be able to score points and as

40
00:02:30,160 --> 00:02:32,560
long as their services are available
they'll be able to throw an attempt to

41
00:02:32,560 --> 00:02:36,970
prove a vulnerability each POV can be
thrown up to 10 times per round so for

42
00:02:36,970 --> 00:02:41,500
example rubios has thrown a successful
POV versus one of the challenges that's

43
00:02:41,500 --> 00:02:45,880
called thermal controller we see
actually to binaries having data being

44
00:02:45,880 --> 00:02:49,690
ingested right now where it's basically
the same binary receiving one POV from

45
00:02:49,690 --> 00:02:53,560
one of the teams as well as from another
and in the overlap we can basically see

46
00:02:53,560 --> 00:02:58,090
that the code flow diverges very late on
about here

47
00:02:58,090 --> 00:03:01,690
it's actually managed to execute and
terminate correctly this one is

48
00:03:01,690 --> 00:03:02,530
successful

49
00:03:02,530 --> 00:03:08,769
ok so baby AJ tolls for forest HJ what
strategy is this at you employed to all

50
00:03:08,769 --> 00:03:12,940
depending on the type of control that we
have will generate a variety of

51
00:03:12,940 --> 00:03:16,660
different on potential povs for them and
then eat when we evaluate to see the

52
00:03:16,660 --> 00:03:20,799
quality of the POV so all depending on
what service the competitor has filled

53
00:03:20,799 --> 00:03:24,640
at that point we'll evaluate it to
determine what's the best of the povs

54
00:03:24,640 --> 00:03:28,480
candidates that we have selected that is
appropriate for that particular service

55
00:03:28,480 --> 00:03:32,950
I just keep thinking man like RC rest of
these awesome fast decisions fast

56
00:03:32,950 --> 00:03:35,858
patches fast exploitation and as a human

57
00:03:35,859 --> 00:03:38,920
there's no way I can keep up with that
the address resolution service was

58
00:03:38,920 --> 00:03:41,679
basically the vulnerability that was
modeled after the sequel slammer like we

59
00:03:41,680 --> 00:03:45,190
were talking about and we definitely saw
some of the bots discovered this

60
00:03:45,190 --> 00:03:48,519
vulnerability and actually begin trying
to prove that vulnerability against

61
00:03:48,519 --> 00:03:51,579
other teams or other BOTS very very
early on

62
00:03:51,579 --> 00:03:55,989
so this represents a true success - what
we have going on here because in that

63
00:03:55,989 --> 00:03:59,440
five-minute window that dead mentioned
that she was hoping for that actually

64
00:03:59,440 --> 00:04:02,859
managed to be proven and patched by
several of the teams in the very next

65
00:04:02,859 --> 00:04:06,940
round so that means that in a
five-minute window a totally previously

66
00:04:06,940 --> 00:04:11,019
never seen before challenge binary was
researched and evaluated and found

67
00:04:11,019 --> 00:04:15,340
vulnerable and patched by a completely
autonomous system we wanted to you know

68
00:04:15,340 --> 00:04:18,850
give them a chance to prove that the
technology could do something and jump

69
00:04:18,850 --> 00:04:20,410
right over that bar was awesome

70
00:04:20,410 --> 00:04:23,979
sandra managed to discover and prove a
vulnerability in one of the services

71
00:04:23,979 --> 00:04:27,280
that we call option but this is a unique
situation and it's something we were

72
00:04:27,280 --> 00:04:31,210
kind of hoping to see they actually
managed to discover an unintended

73
00:04:31,210 --> 00:04:32,440
vulnerability

74
00:04:32,440 --> 00:04:35,710
so each of these each of these services
that's written just like real world

75
00:04:35,710 --> 00:04:39,280
software it's impossible for us to have
made absolutely certain that the one

76
00:04:39,280 --> 00:04:42,549
vulnerability that we intended is the
only one that's present

77
00:04:42,550 --> 00:04:47,020
so the interesting part here is at
Sandra discovered this new POV exercised

78
00:04:47,020 --> 00:04:50,590
it against something that we hadn't
actually even intended and then Jima

79
00:04:50,590 --> 00:04:54,909
observed this occurring and successfully
defended against it

80
00:04:54,910 --> 00:04:58,120
so these are all results that like we
hadn't possibly had any ability to

81
00:04:58,120 --> 00:05:02,800
predict what so ever so Sandra POV
succeeded against the reference binary

82
00:05:02,800 --> 00:05:05,650
but not against GMOs patched binary

83
00:05:05,650 --> 00:05:08,888
she said she was actually successful
able to patch a bug that we didn't even

84
00:05:08,889 --> 00:05:10,600
know existed in the software

85
00:05:10,600 --> 00:05:14,410
what kind of general purpose or even
specific patches does Jim implement that

86
00:05:14,410 --> 00:05:16,480
could do this so that was probably one
of our

87
00:05:16,480 --> 00:05:20,020
general purpose patches we looked at
areas of code where we know there are

88
00:05:20,020 --> 00:05:24,400
common vulnerabilities and we just
deliberately inserted conservatively the

89
00:05:24,400 --> 00:05:28,630
patches for those areas mail center was
designed to be the hardest rematch

90
00:05:28,630 --> 00:05:32,050
challenge we made it was based on the
original crack interval and our

91
00:05:32,050 --> 00:05:35,020
implementation of the mail server
challenge basically wanted to strike a

92
00:05:35,020 --> 00:05:38,919
balance between the difficulty in the
complexity of the original buggin send

93
00:05:38,920 --> 00:05:43,030
mail and how FAR's example that was sort
of a carve down subset of the problem

94
00:05:43,030 --> 00:05:48,190
either way they are all sort of the
classic state machine problems that are

95
00:05:48,190 --> 00:05:52,600
very very difficult for program analysis
those nearly infinite possibilities and

96
00:05:52,600 --> 00:05:54,880
that halting problem that we talked
about before

97
00:05:54,880 --> 00:06:00,130
clearly come into play here so Mecca
fish was the only team to actually

98
00:06:00,130 --> 00:06:05,230
successfully POV against our version of
crack at her

99
00:06:05,230 --> 00:06:10,900
so this basically represents but a leap
forward in program analysis for them to

100
00:06:10,900 --> 00:06:13,989
be capable of doing this means that were
one step closer to that thing that's

101
00:06:13,990 --> 00:06:18,160
basically been sort of the Everest of
program analysis because of that state

102
00:06:18,160 --> 00:06:19,270
machine problem

103
00:06:19,270 --> 00:06:22,659
alright so let's go to HJ down there
with the teams

104
00:06:23,170 --> 00:06:26,170
congratulations what you think about
this yeah it's pretty overwhelming

105
00:06:26,770 --> 00:06:30,669
wow I mean all the talk about state
machines and all the possibilities state

106
00:06:30,670 --> 00:06:33,370
machines really reminds me of one of the
papers were published recently we

107
00:06:33,370 --> 00:06:37,060
published paper driller which is
supposed to augment fuzzing with

108
00:06:37,060 --> 00:06:41,980
symbolic execution and 11 of our really
in-depth case studies talks about how

109
00:06:41,980 --> 00:06:46,690
exactly it traverses the state machines
and is able to really explore deeply

110
00:06:46,690 --> 00:06:50,170
parts of the program that would normally
be inaccessible so more naive approach

111
00:06:50,170 --> 00:06:54,790
it was very rewarding to see

112
00:06:54,790 --> 00:06:59,350
that mega fish actually created and
through POV against this but that's huge

113
00:06:59,350 --> 00:07:04,480
additionally once they were POV seeing
it looks like crispy deployed a patch

114
00:07:04,480 --> 00:07:08,980
but it was a general-purpose patch that
did manage to mitigate the bug

115
00:07:08,980 --> 00:07:12,760
so kudos to them for actually managing
Patrick successfully without breaking

116
00:07:12,760 --> 00:07:15,670
towards the end of the game that looks
like most of the systems are getting

117
00:07:15,670 --> 00:07:19,240
overwhelmed with just the amount of data
and getting law blog down with how much

118
00:07:19,240 --> 00:07:23,680
is in there and so they're they're
unable to successfully proved the flaws

119
00:07:23,680 --> 00:07:24,580
that are out there

120
00:07:24,580 --> 00:07:29,680
let's check back on who was it with
Galactica Galactica jumps out and

121
00:07:29,680 --> 00:07:33,220
actually throws a bunch of successful
povs which we can see here because of

122
00:07:33,220 --> 00:07:37,600
these these blue circles occurring
inside of other teams services and so

123
00:07:37,600 --> 00:07:40,840
that's actually Galactica managing to
successfully and then stealing back

124
00:07:40,840 --> 00:07:42,940
those colors and ending up being able to
render it here

125
00:07:42,940 --> 00:07:46,120
it's basically showing that the
reasoning the idea of this reasoning

126
00:07:46,120 --> 00:07:51,010
system is definitely working because you
can't actually POV without at least some

127
00:07:51,010 --> 00:07:53,770
knowledge of the workings of that
vulnerability it's not like the

128
00:07:53,770 --> 00:07:56,560
general-purpose patching techniques
where there could be zero knowledge

129
00:07:56,560 --> 00:07:59,410
success right in a POV case

130
00:07:59,410 --> 00:08:02,410
it definitely has to have understood the
protocol it definitely has to have

131
00:08:02,410 --> 00:08:05,950
decided what was necessary in order to
exercise that vulnerability so the thing

132
00:08:05,950 --> 00:08:08,920
that I'm really happy to see is it
basically everyone has come to the table

133
00:08:08,920 --> 00:08:10,330
with something capable of that

134
00:08:10,330 --> 00:08:13,659
alright so we have some scores coming up
here we go

135
00:08:13,660 --> 00:08:17,290
so the overall listings we can see here
basically it seems like pretty much all

136
00:08:17,290 --> 00:08:20,080
the teams that are in the lead or
managing to maintain their availability

137
00:08:20,080 --> 00:08:20,770
scores

138
00:08:20,770 --> 00:08:25,299
ok so we're going to go down to HJ he
has more information for us from the pit

139
00:08:25,300 --> 00:08:29,590
you're currently in the lead with a
10,000 . lead how you feel and we're

140
00:08:29,590 --> 00:08:35,829
still excited to be in the lid so that
but it is the submissions during the

141
00:08:35,830 --> 00:08:40,750
competition and we have been looking at
that and unfortunately it seem that our

142
00:08:40,750 --> 00:08:45,460
system and a technical difficulty and
stop so many patches they have now has

143
00:08:45,460 --> 00:08:45,990
the

144
00:08:45,990 --> 00:08:49,410
second worst security in the game this
is the first time that's happened but

145
00:08:49,410 --> 00:08:53,730
they're also not submitting new visa
like a little better call off valuations

146
00:08:53,730 --> 00:08:57,240
these are their evaluations also the
second worst in the game

147
00:08:57,240 --> 00:09:00,540
so even though for all secure sort of
dead in the water just coasting everyone

148
00:09:00,540 --> 00:09:04,230
else's motors are slowing down and so
they're they're gaining on them but not

149
00:09:04,230 --> 00:09:05,880
fast enough to overtake them

150
00:09:05,880 --> 00:09:10,260
yeah so we'll see what happens shellfish
who built the mechanical fist

151
00:09:21,340 --> 00:09:24,800
ok

152
00:09:24,800 --> 00:09:30,500
tech ex who built the bot

153
00:09:30,500 --> 00:09:33,500
Sandra

154
00:09:44,730 --> 00:09:49,949
ok

155
00:09:57,450 --> 00:10:05,250
and now the winner of the DARPA cyber
grand challenge for all secure and their

156
00:10:05,250 --> 00:10:08,250
bot mayhem

157
00:10:27,810 --> 00:10:30,810
ok

158
00:10:35,810 --> 00:10:38,810
yeah

159
00:10:41,360 --> 00:10:44,420
yeah

