1
00:00:00,000 --> 00:00:05,417
>> Thank you. Okay, thank you
for coming. I will be talking
about hacking traffic control

2
00:00:05,417 --> 00:00:11,417
systems from U.S. and a few
other countries. So this is
quickly about me, just to make a

3
00:00:16,708 --> 00:00:22,958
point that I'm not new in the
security business/industry. I
have been around for a long

4
00:00:22,958 --> 00:00:29,792
time. I've been doing different
kinds of research and this is my
last research. And I want to

5
00:00:29,792 --> 00:00:33,333
give thanks because I got a lot
of help from some people, from
my company, and when you put

6
00:00:33,333 --> 00:00:36,917
everything together, it's a lot
of help and it allows you to
save a lot of time. Are you

7
00:00:36,917 --> 00:00:40,917
curious when you go on the roads
of the highway and you look at
the highway signs and stuff? You

8
00:00:40,917 --> 00:00:46,917
will see a lot of different
devices. Most common are the
traffic signals and the traffic

9
00:00:50,042 --> 00:00:56,042
cameras. But if you pay
attention, you will find a lot
more different devices around.

10
00:01:12,917 --> 00:01:18,917
And I was curious about that and
I wanted to research some of
them and I didn't know anything

11
00:01:21,917 --> 00:01:27,917
about that, so I took a look
around. And when I was looking
around, I found some news that

12
00:01:36,333 --> 00:01:43,917
the Department of Transport from
London was going to implement
some traffic wireless detection

13
00:01:43,917 --> 00:01:51,917
system and it got my attention
because London is a big city and
these devices are wireless. So

14
00:01:51,917 --> 00:01:59,833
it's an interesting technology
and possible attack vector. So I
started to look around

15
00:01:59,833 --> 00:02:04,667
specifically for this
technology. It took me a while
because they were aquiring the

16
00:02:04,667 --> 00:02:10,667
devices from [indiscernible] so
is I kept digging and I found
out that the vendor name, the

17
00:02:13,792 --> 00:02:20,917
maker. It was very interesting
because when I kept searching, I
found out that it was really

18
00:02:20,917 --> 00:02:27,417
widely deployed, mostly in the
U.S., but also in a few more
countries, so this is

19
00:02:27,417 --> 00:02:33,708
information from the customers.
They have more than 250
customers worldwide. The

20
00:02:33,708 --> 00:02:41,458
customers were like city
Department of Transport, State
Department of Transport. And in

21
00:02:41,458 --> 00:02:47,458
the last piece of news from the
vendor, I saw that they state
they have 200 thousand wireless

22
00:02:53,083 --> 00:02:59,083
sensors deployed worldwide. Most
of them are in the U.S. So you
can see, this is an image from

23
00:03:03,083 --> 00:03:08,833
the vendor, the deployment
around the U.S. You can see most
of the important cities are

24
00:03:08,833 --> 00:03:14,833
there, including Las Vegas. For
instance, one popular deployment
is Washington, D.C. They say

25
00:03:27,667 --> 00:03:33,667
1,300 are installed there in
Washington, D.C. When you
research, you find documentation

26
00:03:39,625 --> 00:03:45,625
and I found a manual, a 100 page
user manual and it has just one
paragraph about security. So it

27
00:03:50,625 --> 00:03:58,042
was a really good indicators
that probably these devices
weren't really secure. So there

28
00:03:58,042 --> 00:04:05,250
was a challenge to cultivate the
device because the device is not
something you can easily buy

29
00:04:05,250 --> 00:04:11,250
around because customers are
usually Governments. So what we
did was social engineer the

30
00:04:15,292 --> 00:04:21,292
vendor saying we needed to do
some testing and we needed a
couple of devices. Which is

31
00:04:25,875 --> 00:04:31,875
weird because when they get
involved, they get them by the
hundreds. So after some talks,

32
00:04:34,042 --> 00:04:41,583
they agreed, so we got a couple
of devices and at that time I
was in Puerto Rico so I then I

33
00:04:41,583 --> 00:04:47,375
shipped them and then came to
the U.S. with the devices and
then returned to the Argentina

34
00:04:47,375 --> 00:04:50,917
and then the U.S. and then
Argentina and then back to the
U.S. The point is you can easily

35
00:04:50,917 --> 00:04:53,750
travel around with these devices
without any problems. So what
are the devices? I have one

36
00:04:53,750 --> 00:04:59,750
here, you can see this small
device. So this goes in the
road, so basically they are

37
00:05:21,583 --> 00:05:27,583
magnetometers, so they detect.
They are normally in the natural
magnetic field of the Earth and

38
00:05:32,833 --> 00:05:39,708
that way it can detect when a
car goes over it. So for the
technology, you have to make a

39
00:05:39,708 --> 00:05:45,708
hole in the road with the sensor
and then it's filled with epoxy.
So the battery life is ten

40
00:05:49,917 --> 00:05:55,917
years. This is what the vendor
says. And it TI transceiver,
which is CC‑2430 which is pretty

41
00:06:00,708 --> 00:06:06,708
common for the specifications.
It runs on 2.4gHz and it has a
microcontroller by is the

42
00:06:11,500 --> 00:06:18,000
MSP430, which is also pretty
common. I lost my notes but I
think they run TinyOS. So this

43
00:06:18,000 --> 00:06:24,000
is, like, a view of how
internally the sensor, you have
the ‑‑ in the top, the antenna.

44
00:06:39,042 --> 00:06:45,042
So below is the electronic board
and then the battery and then
the plastic that's protecting

45
00:06:47,042 --> 00:06:53,042
it. So we open it and there you
can see the antenna at the top.
Here, we'll push it out between

46
00:06:55,833 --> 00:07:01,833
the board, and here is the
battery. Here is the transceiver
and the microcontroller and then

47
00:07:05,167 --> 00:07:07,167
the device that is used for
detecting the magnetic
inference. And then we have the

48
00:07:07,167 --> 00:07:13,167
access point, which is this wide
box, as you can see here. You
can usually find this on a pole

49
00:07:27,625 --> 00:07:33,625
next to the traffic light or
sometimes another pole around.
So basically what the access

50
00:07:35,792 --> 00:07:42,833
point does is get the wireless
data from the sensor from the
traffic detection and relays it

51
00:07:42,833 --> 00:07:48,833
to the traffic control systems.
It has a Coldfire processer and
also runs software and

52
00:07:52,875 --> 00:07:59,042
interfaces with the traffic
controller with a pressure car
in order to communicate with the

53
00:07:59,042 --> 00:08:05,042
traffic systems. Then we have
repeaters. I don't have one of
that, but it's similar to the

54
00:08:12,625 --> 00:08:18,375
access points and the wide box.
And basically what it does is to
extend the range when the

55
00:08:18,375 --> 00:08:24,667
sensors are too far away from
the access point. So they
transmit on two different

56
00:08:24,667 --> 00:08:30,958
channels. One channel they get
the information from the sensor
and in the other channel they

57
00:08:30,958 --> 00:08:36,958
relay the data to the access
point. So this is the range for
the communication between the

58
00:08:40,750 --> 00:08:47,542
sensors and the access point,
which is a maximum 150 feet. And
then if you want to extend the

59
00:08:47,542 --> 00:08:53,542
range, you add the repeaters and
the maximum range by vendor
recommendation is 1,000 feet. Of

60
00:08:55,708 --> 00:09:01,708
course, I mean, if you have
equipment antenna, you can
probably go further away. How

61
00:09:04,125 --> 00:09:10,500
these devices work, well, like I
said, the sensor goes in the
road, there are configurations.

62
00:09:10,500 --> 00:09:16,500
One of those ‑‑ this one, it is
at an intersection. So here you
have a set of sensors that are

63
00:09:20,958 --> 00:09:27,792
used for stop detection. That
means that once a car is
detected as stopping, they are

64
00:09:27,792 --> 00:09:33,792
waiting for the signal, the
sensor will detect it. And then
you have advanced detection to

65
00:09:33,792 --> 00:09:40,667
detect when the car is coming
and is waiting far away from the
stop bar. So the sensor sends

66
00:09:40,667 --> 00:09:44,000
the data to the access point. So
basically the traffic system
uses this information to know

67
00:09:44,000 --> 00:09:51,500
how to best set the timing, for
instance, for the green light.
If they see there's a lot of

68
00:09:51,500 --> 00:09:57,500
traffic, they will set the
timing longer, maybe 20 or 30
seconds, depends on the

69
00:10:08,000 --> 00:10:14,000
configuration. Also some
intersections, probably most of
you, some of you have seen these

70
00:10:16,250 --> 00:10:22,083
late night, sometimes you are
waiting at that intersection and
the traffic light won't change

71
00:10:22,083 --> 00:10:27,875
or will take a lot to change.
Sometimes that's because the
detection mechanism is not

72
00:10:27,875 --> 00:10:35,167
working very well. So that's the
stop bar detection. So when a
car is waiting, the traffic

73
00:10:35,167 --> 00:10:40,875
control system will set some
parameters so that the traffic
light will change faster and you

74
00:10:40,875 --> 00:10:47,750
get the green light and you can
go. This is called the access
point connect to the traffic

75
00:10:47,750 --> 00:10:53,750
controler by the [indiscernible]
and can also connect to some
internal network. Another

76
00:10:56,042 --> 00:11:02,042
configuration is metering. So
this one, you have the detection
that will detect when the car is

77
00:11:08,875 --> 00:11:16,542
waiting, and also queue
detection to measure the length
of the queue. Then at the

78
00:11:16,542 --> 00:11:24,375
freeway, you have several
wireless sensors to ensure that
the traffic is in the freeway

79
00:11:24,375 --> 00:11:30,375
just before the access ramp to
the freeway. So this way the
traffic control system knows how

80
00:11:32,542 --> 00:11:39,625
to set the proper timing to the
ramp meter. If they see there's
no traffic at this freeway, they

81
00:11:39,625 --> 00:11:46,583
will turn off maybe the ramp
meter or they may allow the cars
to go faster on the freeway. If

82
00:11:46,583 --> 00:11:54,500
there's a lot of traffic, they
will allow the cars to go slower
on the freeway. Another kind of

83
00:11:54,500 --> 00:12:01,917
use is for travel times. So
basically you get an array of
sensors at some point on the

84
00:12:01,917 --> 00:12:08,875
freeway and then maybe or two
miles away another array of
sensors. What they can do with

85
00:12:08,875 --> 00:12:16,000
this technology is to identify a
car. So basically they detect
the car, they do some possible

86
00:12:16,000 --> 00:12:22,000
assessing, and they will create
a fingerprint of the car. So
after a mile or two, they will

87
00:12:24,125 --> 00:12:30,583
re-identify the car so they can
know what the travel time for
that lane. So that information

88
00:12:30,583 --> 00:12:37,333
is the information that you
later see on the electronic
signals on the freeway. And also

89
00:12:37,333 --> 00:12:43,333
it can assess the speed limit.
If they see there's a very low
speed in some lane, they could

90
00:12:47,958 --> 00:12:53,958
slow down just a little. So in
order to configure the device is
to access the Windows software

91
00:12:57,958 --> 00:13:03,958
that basically we have over
here. So it is very easy to
compile. You get the source

92
00:13:12,625 --> 00:13:18,625
code. You get the hard coded
root for the access point. So
you connect to the access point

93
00:13:23,625 --> 00:13:29,625
with this software and then you
can access the sensors, too. And
you can configure them, install

94
00:13:32,875 --> 00:13:38,875
update work, et cetera. And then
you have some server software
that you can use to concentrate

95
00:13:41,833 --> 00:13:48,958
all of the configurations
interest the access points from
the different intersections. And

96
00:13:48,958 --> 00:13:54,958
also the vendor provides a SaaS
that allows you to connect to
any access point worldwide and

97
00:13:58,375 --> 00:14:04,375
look at some information and set
some specific configuration. I
didn't touch this because it is

98
00:14:14,708 --> 00:14:20,542
server-side and of course would
be illegal. So the access point
goes to a location and it is

99
00:14:20,542 --> 00:14:26,542
connected with a traffic system.
So basically they don't have any
encryption. So all of the

100
00:14:31,708 --> 00:14:37,708
wireless communication is
cleartext. This was interesting
because it took me a while to

101
00:14:43,750 --> 00:14:51,958
make this thing work because, I
don't know, it took me a while,
but when I saw there was no

102
00:14:51,958 --> 00:15:06,750
encryption, I told them and they
said, yes, it is doing
encryption. And the only

103
00:15:06,750 --> 00:15:16,875
paragraph I mentioned earlier
that I found in the user guide
was the next one. So you can

104
00:15:16,875 --> 00:15:22,792
read it there. So basically they
said the information doesn't
carry any comments, it's only

105
00:15:22,792 --> 00:15:31,667
data, there's, like, nothing
here so there's nothing to
attack. That's what I understood

106
00:15:31,667 --> 00:15:36,000
because it's really difficult to
understand what they tried to
say there, but that's the only

107
00:15:36,000 --> 00:15:46,250
paragraph about security in the
whole user manual. So when I
continued insisting that I

108
00:15:46,250 --> 00:15:53,208
wasn't seeing any encryption any
place, that I wasn't looking at
the communication and there was

109
00:15:53,208 --> 00:16:00,125
no encryption, they came back
after many e‑mails with this
answer. You can read it.  	>>

110
00:16:00,125 --> 00:16:12,500
[Laughter]  	>> Right. It's
funny because the customers are
Government.  	>> [Laughter].

111
00:16:12,500 --> 00:16:21,375
 	>> And I don't know if it's
intentional or just a lie from
the vendor because the vendor

112
00:16:21,375 --> 00:16:25,750
was lying all the time, but this
is a really crazy answer. It
works at the sign, so there is

113
00:16:25,750 --> 00:16:31,125
no issue there.  	>> [Laughter].
 	>> So the other issue is no
authentication. So nothing

114
00:16:31,125 --> 00:16:45,792
prevents an attacker to access a
sensor or to access a repeater.
I mean, access point I protect

115
00:16:45,792 --> 00:16:52,042
because you have to ascertain
the internal network, but
sensors and repeaters can be

116
00:16:52,042 --> 00:17:03,333
accessed wirelessly. Also, the
connection point doesn't
indicate the sensor or the

117
00:17:03,333 --> 00:17:11,292
repeater, so the access point
gave any data that matched the
protocol and that matched the

118
00:17:11,292 --> 00:17:20,625
address of the sensor, then they
would just accept it as data and
trust it. So another issue is

119
00:17:20,625 --> 00:17:28,708
that the P1 update are not
encrypted at all. So basically
you can go and change the wire

120
00:17:28,708 --> 00:17:41,125
on the sensor or the repeaters.
So when I told all of this to
the vendor ‑‑ well, this is from

121
00:17:41,125 --> 00:17:50,000
‑‑ the communication from the
vendor, when I was looking at
different communications for the

122
00:17:50,000 --> 00:17:55,667
presentation, I thought, this is
what they said to me when I
reported the issue. What they

123
00:17:55,667 --> 00:18:05,583
said to me when I reported the
issue was they were encrypting
it in the next version. But

124
00:18:05,583 --> 00:18:18,500
what's the problem? If these
sensors are built in the road
worldwide, because of the

125
00:18:18,500 --> 00:18:25,750
architecture being nonexistent,
hopefully they update it with
encryption without actually

126
00:18:25,750 --> 00:18:35,000
changing the sensor. So
basically they will have to do a
physical replacement to have a

127
00:18:35,000 --> 00:18:52,000
secure update. So is let's see
about the protocol they used. So
basically the standard is 250

128
00:18:52,000 --> 00:19:01,958
port physical level. It's the
same as CV and other wireless
possibilities. It's very low

129
00:19:01,958 --> 00:19:14,667
rate. And this is because it's
very low power consumption. And
it has 16 channels from 2.4 GFS.

130
00:19:14,667 --> 00:19:21,833
And they have their own protocol
which is the sensor are wireless
protocol, which is a kind of a

131
00:19:21,833 --> 00:19:34,958
media access protocol. It's kind
of a ‑‑ it's very similar and
it's used TDMA. So they divide

132
00:19:34,958 --> 00:19:43,625
the timeframe in 64 slots, so
the access point to one sensor,
okay, you have to transmit with

133
00:19:43,625 --> 00:19:55,208
every sensor. They do that and
also to optimize the power
consumption, so the sensor

134
00:19:55,208 --> 00:20:06,708
doesn't need to be awake all the
time. So sensors will only
listen and transmit during a

135
00:20:06,708 --> 00:20:11,250
specific time slot, but the
access point will get data at
any point. It will get it and

136
00:20:11,250 --> 00:20:21,375
process it. So if there is no
detection, there's no car
around, then it will stop it.

137
00:20:21,375 --> 00:20:34,417
The access points just
acknowledge when they get
detection data from the sensor.

138
00:20:34,417 --> 00:20:43,500
If there is not knowledge, then
the sensor will retransmit a few
times and then will get to

139
00:20:43,500 --> 00:20:51,792
sleep. So basically
[indiscernible] so these are for
the kind of packet, and then the

140
00:20:51,792 --> 00:21:02,375
other is for the sequence
number. The sequence of packets
in its transmission. And the

141
00:21:02,375 --> 00:21:06,875
following two bytes are for the
address of the sensor because
the sensors are identified by

142
00:21:06,875 --> 00:21:15,292
these two bytes. So the access
point knows from where the data
is coming. And then it's the

143
00:21:15,292 --> 00:21:22,333
data part. So this is for the
type of packet, as you can see.
And then there's a space from

144
00:21:22,333 --> 00:21:34,917
the access point side, they used
what they call hollow code which
is used so the sensors can know

145
00:21:34,917 --> 00:21:42,000
if they are getting information
from the right access point.
Because the access point doesn't

146
00:21:42,000 --> 00:21:47,583
have a specific address, the
sensors will know they are
getting the right information by

147
00:21:47,583 --> 00:22:05,833
the color‑code. By the channel
and the color‑code. So the data
is 4 to 50 bytes. So the data

148
00:22:05,833 --> 00:22:10,083
that the sensor sends, sometimes
the battery level, the thin wire
version, the detection of the

149
00:22:10,083 --> 00:22:15,875
car, if there is traffic or not,
and then from the access point
to the sensors and repeaters,

150
00:22:15,875 --> 00:22:25,292
you get some configuration data
and also configuration
information, and also updates.

151
00:22:25,292 --> 00:22:34,042
This is 100 packet from the
sensor to the access point. That
means there is no detection in

152
00:22:34,042 --> 00:22:46,750
any event, so basically they
transmit every 50 seconds. And
this is a slightly different

153
00:22:46,750 --> 00:22:52,292
packet which means there's a
detection of a car. This is also
interest the sensor to the

154
00:22:52,292 --> 00:22:56,417
access point when they send the
information, like configuration
information. Sometimes you can

155
00:22:56,417 --> 00:23:08,917
query the sensors with the
access point to know how they
are configured. So is here they

156
00:23:08,917 --> 00:23:13,458
send the channel, the physical
address this they get from the
factory that you can change, so

157
00:23:13,458 --> 00:23:19,667
they receive all this
information. And finally, from
the access point to the sensor,

158
00:23:19,667 --> 00:23:25,792
this is used to synchronize when
they say use this timing. So for
the [indiscernible], they

159
00:23:25,792 --> 00:23:32,250
provide the [indiscernible]
which is a format that looks
this way. So these two bytes are

160
00:23:32,250 --> 00:23:42,583
the address of it. They have it
twice. Because when it's running
the device, it will copy it to

161
00:23:42,583 --> 00:23:59,583
the address which is specified
here. If it's running
[indiscernible], it will copy

162
00:23:59,583 --> 00:24:05,500
the update to the other address
and then they will reroute and
change. So basically the

163
00:24:05,500 --> 00:24:21,292
security mechanism is just one
check at the end of each line,
which is a very simple check and

164
00:24:21,292 --> 00:24:29,167
then you have a check for all of
the thin wire which is also an
excerpt. So basically you

165
00:24:29,167 --> 00:24:39,083
engineer it and then you can
update it. The packets for the
three‑wire update is very

166
00:24:39,083 --> 00:24:45,875
simple, it's just applying the
thin wire to the access point,
hit the sensors in PY update

167
00:24:45,875 --> 00:24:59,125
mode and then you have to
broadcast it by the access
point. So basically they

168
00:24:59,125 --> 00:25:07,792
broadcast every line of the
file. You can see here the file
‑‑ okay, that's one line as you

169
00:25:07,792 --> 00:25:30,583
can see there, and that is what
is broadcasting. So in order to
do this research, I needed some

170
00:25:30,583 --> 00:25:45,458
hardware because you need the
wireless communication and then
you have to be able to modify

171
00:25:45,458 --> 00:25:57,167
packets, so basically I got USB
dongle for sniffing to 802.15.4
protocol, which is this device,

172
00:25:57,167 --> 00:26:05,833
it's very small. You can see it
here. It's pretty good. You just
plug it and it will start

173
00:26:05,833 --> 00:26:27,042
working with the dongle
provided. And then I go to the
programming board, all from

174
00:26:27,042 --> 00:26:30,708
Texas Instruments, so you get
the programming board, you get
the radio transceiver and a

175
00:26:30,708 --> 00:26:59,917
sniffer. Just plug in the
programming board by USB to the
computer and then you have the

176
00:26:59,917 --> 00:27:03,625
framework to program it, which
is the IAR and then you have the
studio and the software. You can

177
00:27:03,625 --> 00:27:08,625
see the software, it is for
sniffing. So you can see you can
start getting the packet. You

178
00:27:08,625 --> 00:27:13,333
get the packet from the access
point to the sensor. And here
you can see the data. And if you

179
00:27:13,333 --> 00:27:19,167
know the protocol, you know it's
Clear Text because all of the
information is there, you have

180
00:27:19,167 --> 00:27:25,375
the options. So just look at the
type of protocol you want to
capture and then set up the

181
00:27:25,375 --> 00:27:42,042
radio channel here. And then
with the [indiscernible], you
have the RF studio, which is

182
00:27:42,042 --> 00:27:47,667
pretty cool, you just choose the
right receiver and you can
manually craft packets. You can

183
00:27:47,667 --> 00:27:55,583
also get packets, too. It's just
like a complete packet and you
can just send one or 100. And

184
00:27:55,583 --> 00:28:06,542
finally, the software for
programming the device is just
coded in C and you can upload

185
00:28:06,542 --> 00:28:25,250
the device. It's very simple. So
the vendor says there's over 200
thousand worldwide. Most of them

186
00:28:25,250 --> 00:28:43,167
in the U.S., I would say, based
on my research, maybe 80% are in
the U.S. And then you have

187
00:28:43,167 --> 00:28:47,083
repeaters also. I have seen the
price of the sensors, $500,
$600, the access point is $4000,

188
00:28:47,083 --> 00:28:55,708
and the repeaters are $1,000 or
more. So we're talking about 100
million or more worth of

189
00:28:55,708 --> 00:29:09,458
equipment, that probably can be
bricked. So you can see there's
a huge money impact here. And,

190
00:29:09,458 --> 00:29:15,708
of course, you can cause traffic
because you can influence the
traffic controller system.

191
00:29:15,708 --> 00:29:20,833
Because you can lie to the
system. You can send fake data
and say there's a lot of data

192
00:29:20,833 --> 00:29:24,292
here and maybe there isn't any
traffic there. Or you can say
there's no traffic and in fact

193
00:29:24,292 --> 00:29:30,125
there is a lot of traffic. So
you can create a whole mess. I
remember a years ago there was a

194
00:29:30,125 --> 00:29:39,958
conflict with Los Angeles
Department of Transportation
over the transport traffic

195
00:29:39,958 --> 00:30:02,458
machinery and a couple of them
had 2 or 4 intersections, but
they were the main intersections

196
00:30:02,458 --> 00:30:06,750
of the Los Angeles and they
created a chaos for 2 days just
hacking 2 or 4 intersections.

197
00:30:06,750 --> 00:30:10,125
Because, you know, when there's
a problem at the intersection,
it promulgates over the other

198
00:30:10,125 --> 00:30:15,125
intersections and if they are
the main of the city, then you
have a big mess. Of course, it

199
00:30:15,125 --> 00:30:21,417
is based on the traffic
configuration. So you can have a
simple accident or a really

200
00:30:21,417 --> 00:30:28,333
large accident because, you
know, when people say they are
waiting at the red light and the

201
00:30:28,333 --> 00:30:39,167
red light doesn't change and you
have there one minute. Okay, one
minute is fine. Two minutes, two

202
00:30:39,167 --> 00:30:43,750
minutes is still fine. More than
two minutes, the cars will start
to go anyway. And in that way,

203
00:30:43,750 --> 00:30:54,833
you get accidents. So what the
U.S. Department of
Transportation said, they said

204
00:30:54,833 --> 00:31:01,250
that sensors and signal failures
increase motorist time and
delays, making accidents. This

205
00:31:01,250 --> 00:31:11,625
is what the U.S. DOT says. Not
me. I have an issue with the
vendor because with the

206
00:31:11,625 --> 00:31:19,083
communication, what they get
back from the vendor was lie.
They were saying, there is

207
00:31:19,083 --> 00:31:27,542
encryption. I said there is none
and they came back and said,
yes, there is. So they were

208
00:31:27,542 --> 00:31:36,292
lying and saying stupid things.
I had a conflict because I did
the testing at home with these

209
00:31:36,292 --> 00:31:45,083
devices, which is a
nonproduction system, so I don't
like to make a statement saying,

210
00:31:45,083 --> 00:31:51,375
okay, this devices are insecure
and maybe when you go to a
[indiscernible] side you see

211
00:31:51,375 --> 00:31:56,292
that the configurations can be
different or they may have
different options and what you

212
00:31:56,292 --> 00:32:09,667
found is completely inaccurate.
So what I did was, with the
devices in my backpack and I

213
00:32:09,667 --> 00:32:17,833
made them portable because the
access point is power over
ethernet and I made it USB, so I

214
00:32:17,833 --> 00:32:25,875
connected to the portable
batteries and then I connected
it to the portable Wi‑Fi router,

215
00:32:25,875 --> 00:32:36,458
so I point the access point in
my backpack and I could access
it wirelessly. So I went to

216
00:32:36,458 --> 00:32:46,167
Seattle, New York, and when I
tested it, it was a testing
site, it wasn't a production

217
00:32:46,167 --> 00:32:56,792
site, so it wasn't very sure.
The same in New York. But when I
went to DC, which is a big

218
00:32:56,792 --> 00:33:01,625
deployment there, it was a
production site, so I did some
testing there that I will show

219
00:33:01,625 --> 00:33:17,792
you now. So this is New York. It
was good because I was next to
the New York police.  	>>

220
00:33:17,792 --> 00:33:23,625
[Laughter]. 	>> Traffic. So here
you can see the marks from the
sensors in the street. Those

221
00:33:23,625 --> 00:33:32,208
circles are the mark and then in
the pole, here is the access
point. And this is just, like,

222
00:33:32,208 --> 00:33:55,042
three blocks away from the
Empire State. So there I
basically was pointing with my

223
00:33:55,042 --> 00:33:59,292
backpack the sensor because of
the directional antenna, so I
was pointing with my backpack

224
00:33:59,292 --> 00:34:05,500
the sensor.  	>> [Laughter].
 	>> And I was able to access
the sensor. I was able to see

225
00:34:05,500 --> 00:34:10,833
the configuration of that. And
if I wanted, I can could have
compromised them, changed it.

226
00:34:10,833 --> 00:34:17,750
Which I didn't do it.  	>>
[Laughter].  	>> So there is ‑‑
we see this later, this is the

227
00:34:17,750 --> 00:34:25,875
software from the vendor. I put
the access point in discovery
mode, which queried for some

228
00:34:25,875 --> 00:34:35,542
specific channel. So the sensor
started to appear on the
graphical interface. This is a

229
00:34:35,542 --> 00:34:50,750
line, you can see green, that's
my sensor which I carried in my
backpack. But then, there you

230
00:34:50,750 --> 00:35:18,208
can see three more sensors that
were there in the road. I can't
find ‑‑ okay, I wanted to show

231
00:35:18,208 --> 00:35:43,208
there was like 5. So I went to
DC and just when we get out
there to Union Station, I found

232
00:35:43,208 --> 00:35:47,875
a nice surprise because I didn't
know there were those in there.
So I was looking around outside

233
00:35:47,875 --> 00:35:58,375
Union Station and I think it was
around the exit ramp and we
found some sensors there. There

234
00:35:58,375 --> 00:36:05,667
you can see the mark of the
sensor. Because maybe if you
have been there, it is a really

235
00:36:05,667 --> 00:36:12,833
complex intersection. There are,
I don't know, how many streets
there. And there you can see the

236
00:36:12,833 --> 00:36:18,625
access point. So with that
configuration, it's for
detecting that a car is waiting

237
00:36:18,625 --> 00:36:25,125
there at the ramp trying to
exit, so it would put faster the
green light or if there's no

238
00:36:25,125 --> 00:36:29,875
car, it won't get the green
light. So you can see that by
pointing the sensor. And there I

239
00:36:29,875 --> 00:36:35,542
was able to look at the
configuration. Basically the
wireless data, I could display

240
00:36:35,542 --> 00:36:44,458
it in a graphical interface and
because I know how to do this, I
can see all of the configuration

241
00:36:44,458 --> 00:36:50,958
options. So the traffic I was
seeing from the access point to
the sensor and from the sensor

242
00:36:50,958 --> 00:37:02,542
to the access point. But there
is another part we went to do
some testing, there were a lot

243
00:37:02,542 --> 00:37:14,333
of sensors there and a repeater,
too. You can see here every line
is a sensor expect for one which

244
00:37:14,333 --> 00:37:19,792
is a repeater. These are all
sensors and this one is the
repeater. So just with one I can

245
00:37:19,792 --> 00:37:26,292
access there, changes the
configuration, do anything,
change the channel. And this

246
00:37:26,292 --> 00:37:44,625
was, as you can see, two blocks
from the Capitol. I mean, there
were some weird people that gave

247
00:37:44,625 --> 00:37:50,583
us the spooks, but we didn't get
any problem. It was weird. The
access point and here on the

248
00:37:50,583 --> 00:38:03,583
street, the mark of the sensors,
and there was a repeater here.
So in this way I could prove

249
00:38:03,583 --> 00:38:18,292
that I was right with what I was
saying, what I informed. So what
are the possible attacks? So

250
00:38:18,292 --> 00:38:21,875
basically you can do
[indiscernible] which is
[indiscernible] so you can

251
00:38:21,875 --> 00:38:32,875
change the sensor, change the
frequency channel, change the
thin wire, probably brick them,

252
00:38:32,875 --> 00:38:40,833
take packets, but, of course, I
will be getting the traffic
data. Because if you know how it

253
00:38:40,833 --> 00:38:56,292
works and how the guys
communicate, you can just send
fake data. And in order to do

254
00:38:56,292 --> 00:39:00,000
that, I built a special device
which I will show you later.
It's basically data saying there

255
00:39:00,000 --> 00:39:09,625
is traffic here. So in the real
world, it's kind of easy because
there's a lot of vendor

256
00:39:09,625 --> 00:39:14,917
recommendation, press releases,
where they say we are
implementing this in New York

257
00:39:14,917 --> 00:39:22,208
and DC. Based on a lot of public
documents, also, from the
Government. And the good part is

258
00:39:22,208 --> 00:39:30,250
you can specifically know the
coordinates of the devices using
Google Street view.  	>>

259
00:39:30,250 --> 00:39:38,667
[Laughter].  	>> Here are a
couple of repeaters and here are
the sensors. This is New York.

260
00:39:38,667 --> 00:39:53,083
So you know specifically the GPA
is where they are located. So
for vendor specification, you

261
00:39:53,083 --> 00:40:02,208
need to be at least 1000 feet
away in order to attack them, to
be able to connect. So one

262
00:40:02,208 --> 00:40:11,333
option to connect is being
on‑site. So being near the
devices so you can send fake

263
00:40:11,333 --> 00:40:20,375
data. So what I did was with
these, we programmed a sample
proof-of-concept I can show you

264
00:40:20,375 --> 00:40:35,917
here. So basically, here is the
screen, I put the menu there.
These are different attacks. One

265
00:40:35,917 --> 00:40:48,208
is from creating fake sensors.
The other one is to send fake
data. I did some ASCII art and

266
00:40:48,208 --> 00:41:00,500
you can see.  	>> [Laughter].
 	>> And then I also can send
fake data about configuration. I

267
00:41:00,500 --> 00:41:19,208
will show you now. So I have
here the vendor software, so I
will connect to the access point

268
00:41:19,208 --> 00:41:28,000
now. So basically here in every
line you get the devices which
are the sensors there. And you

269
00:41:28,000 --> 00:41:36,000
can see there isn't any device
there. So just one, which is my
sensor. So now I will create a

270
00:41:36,000 --> 00:41:42,625
fake sensor. It will be
replacing an existing one, maybe
[indiscernible] and sending fake

271
00:41:42,625 --> 00:41:52,417
data. I will push this button
here and you will see the
sensors being created. So you

272
00:41:52,417 --> 00:42:02,250
can see I'm sending fake data to
the access point and it is
accepting it as valid data.

273
00:42:02,250 --> 00:42:11,250
There are a couple of columns
here. Which is that there is a
car present at the sensor. And

274
00:42:11,250 --> 00:42:22,333
the other is the number of cars
being detected. So now what I
will do is send fake data about

275
00:42:22,333 --> 00:42:40,875
car detection, about traffic. So
I push "now" and you will see
here the detection number to be

276
00:42:40,875 --> 00:42:44,833
increased a lot.  	>>
[Laughter]. [Applause].  	>> So
basically the access point is

277
00:42:44,833 --> 00:42:51,167
taking this data which is fake,
it's made up, and processing it.
So this is the data that I would

278
00:42:51,167 --> 00:43:05,958
get the traffic control system
to make decisions. So if you
don't want to be on‑site, what

279
00:43:05,958 --> 00:43:16,917
you can do is just program ‑‑
you can see where a transceiver
to with a GPS is when you set up

280
00:43:16,917 --> 00:43:22,667
the coordinates of the device
is, to a car or whatever and
just let it go. Because on this

281
00:43:22,667 --> 00:43:27,167
you have the map where the buses
load, so you can know where to
launch the attack automatically

282
00:43:27,167 --> 00:43:38,500
by the attached device. Another
one I tested and works is from
the guy. This is a new service

283
00:43:38,500 --> 00:43:43,792
where you can rent drones if you
don't have one. So in this case,
I attached this to my drone and

284
00:43:43,792 --> 00:43:56,000
make it fly at like 350 feet and
it worked. And when you have
light outside and you have a

285
00:43:56,000 --> 00:44:07,125
good antenna, you can go 1,000
feet or more in the sky and
launch the attack. Another

286
00:44:07,125 --> 00:44:10,125
attack could be to do a thin
wire update. So basically you
change the firmware and make a

287
00:44:10,125 --> 00:44:29,125
worm. And it will detect the
sensors that are near, or maybe
not near because the sensors

288
00:44:29,125 --> 00:44:36,417
will propagate worm, too. When
you have the fewer compromises,
there's no way to know if you

289
00:44:36,417 --> 00:44:39,250
have compromised or not unless
you look at the code and see.
But if you just use the

290
00:44:39,250 --> 00:44:42,708
functionality, you never know if
it's compromised or not.
Basically you can know in

291
00:44:42,708 --> 00:44:48,708
realtime, you can see some
media, GPS coordinates on
pictures, so you can search

292
00:44:46,875 --> 00:45:03,875
people in New York, like right
now, and you can compromise the
SmartPhone and from the

293
00:45:03,875 --> 00:45:11,167
SmartPhone launch an attack.
Right now I think it's kind of
[indiscernible] but maybe a

294
00:45:11,167 --> 00:45:28,875
radio that can be modified by
using this protocol and you can
have someone else with his cell

295
00:45:28,875 --> 00:45:33,042
phone attacking this device.
Another kind of creative attack,
this is based on immunity. You

296
00:45:33,042 --> 00:45:38,083
can use these as a trigger to a
bomb. So you finger print one
car and then use that later and

297
00:45:38,083 --> 00:45:53,292
set that as a trigger to a bomb.
So because you see Washington,
D.C., maybe you can finger print

298
00:45:53,292 --> 00:46:00,375
cadillac one. My final
conclusion is that any field guy
like me, I live in a small town,

299
00:46:00,375 --> 00:46:06,750
many miles from here, can get
these devices that are used in
other countries and hack them

300
00:46:06,750 --> 00:46:16,167
and then you want to hack the
U.S. or other countries, the
attack tools would cost you $100

301
00:46:16,167 --> 00:46:27,625
or less to build if you buy the
part and program it. It's cheap.
The Government is buying devices

302
00:46:27,625 --> 00:46:34,875
that are being used without
testing the security of them.
They are just assaulting the

303
00:46:34,875 --> 00:46:45,792
crazy claims from the vendors
and they are putting it critical
infrastructure on and that is

304
00:46:45,792 --> 00:46:51,250
happening right now. And
finally, when we talk about
being smart, if you get devices

305
00:46:51,250 --> 00:47:00,500
like this that blindly trust the
data, then the city is not very
smart is. Kind of stupid.  	>>

306
00:47:00,500 --> 00:47:10,500
[Laughter].  	>> And finally, it
is cheap. I'm part of Build It
Securley where trying to help

307
00:47:10,500 --> 00:47:15,792
the smart vendors to improve the
security of the devices. And if
you don't know about this, you

308
00:47:15,792 --> 00:47:24,042
can check the site and there are
step‑by‑step instructions to
build secure protocols, et

309
00:47:24,042 --> 00:00:00,000
cetera. And that's it. I hope
you like it.  	>> [Applause].

