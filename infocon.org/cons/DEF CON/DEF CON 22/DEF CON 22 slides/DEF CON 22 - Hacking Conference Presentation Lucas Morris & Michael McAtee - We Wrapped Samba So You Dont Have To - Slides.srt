1
00:47:38,375 --> 00:47:45,583
 Good morning. Good afternoon. I
guess at this point ‑‑ We are
Lucas, Michael or McAtee. We are

2
00:47:45,583 --> 00:47:50,750
here to talk to you about
Microsoft Windows Shares and how
we use them on our internal

3
00:47:50,750 --> 00:47:57,708
pens. Briefly about us, my name
is Lucas. I'm manager for a
company called Crowe Horwath an

4
00:47:57,708 --> 00:48:04,667
accounting and consulting firm.
We work as part of the security
and privacy group inside that.

5
00:48:04,667 --> 00:48:11,750
I'm manager, in quotes. I don't
manage a lot. When I do im
probably bad at it I'm also a

6
00:48:11,750 --> 00:48:16,875
pen tester an ultimately a code
monkey. I write a lot of script
a lot of tool and other things.

7
00:48:16,875 --> 00:48:22,833
>> And my name is Michael McAtee
and I'm a senior consultant a
Crowe as well, an pentester and

8
00:48:22,833 --> 00:48:27,792
was a sys admin before that. so
that's why this talk is on the
Windows Share and we couldn't

9
00:48:27,792 --> 00:48:33,000
think of anything funny We just
left a placeholder for something
funny so insert your won joke

10
00:48:33,000 --> 00:48:37,542
there. And then please to
contact us this is the
obligatory go to the page or

11
00:48:37,542 --> 00:48:44,625
tweet us. >> Quick overview of
what we're going to talk about.
We will start off with a

12
00:48:44,625 --> 00:48:49,833
refresher on SMB and CIFS and
Microsoft Windows Share with
kind of as the same base

13
00:48:49,833 --> 00:48:55,667
understands the problem we were
running into and why we built
this tool and why we use this as

14
00:48:55,667 --> 00:49:03,125
one of our primary go to
methodologies in pentesting now
We will dive into how permission

15
00:49:03,125 --> 00:49:09,333
in window share work, share
permissions version NTFS, how
those are stored, what they

16
00:49:09,333 --> 00:49:13,583
mean, what we're pulling, what
the tool is actually putting
out, all that nitty gritty

17
00:49:13,583 --> 00:49:18,583
stuff. The problem we found,
when we started using this data
they end up troubles with other

18
00:49:18,583 --> 00:49:24,458
tools great at what they do but
didn't do what we need them to
do, and then we'll kind of

19
00:49:24,458 --> 00:49:30,000
detail our methodology, what we
look for, why we look at shares,
and tools, hopefully at demo or

20
00:49:30,000 --> 00:49:35,208
maybe a video instead. We will
see how it goes. >> lets see if
the Sacrifices for the demo gods

21
00:49:35,208 --> 00:49:41,500
were successful  ‑‑ >> Yeah. >>
So, start off with CIFS, common
Internet file system this was

22
00:49:41,500 --> 00:49:45,875
microsoft nice and pretty name
put on SMB when they want it to
make it a standard, and went

23
00:49:45,875 --> 00:49:50,750
ahead and sent the nice draft
off to standardize it and let it
expire and never made any other

24
00:49:50,750 --> 00:49:56,667
changes so It is almost open and
almost to standard, but it's
what everything its published

25
00:49:56,667 --> 00:50:02,167
against theres not a great
define, here's how you implement
cifs, its more heres how you get

26
00:50:02,167 --> 00:50:09,167
close enough that you can get a
file share and figure out the
bugs as you go along. Since

27
00:50:09,167 --> 00:50:15,167
Windows 3.1 Microsoft has had
networking built in to Windows,
and some kind of an SMB, SMB was

28
00:50:15,167 --> 00:50:20,625
originally developed by IBM and
Microsoft took it and ran with
it. Pretty much every major

29
00:50:20,625 --> 00:50:26,917
version of Windows with the
release brings a new version of
SMB. Especially here in the past

30
00:50:26,917 --> 00:50:33,250
few years with Windows 7 and 8,
Microsoft was pushed hard on
this as the core technology, not

31
00:50:33,250 --> 00:50:38,292
just for file shares and things
of that nature. but they're
backing hyper B‑clusters with

32
00:50:38,292 --> 00:50:45,083
it. i recommend it over using
I-scuzzy or NFS And they put a
lot of effort into cleaning up

33
00:50:45,083 --> 00:50:50,417
the performance. If you look at
the specifications from 1 to 2,
they dropped the number of

34
00:50:50,417 --> 00:50:57,375
commands from over a 100 to 19.
so really cleaning up the spec
trying to make it better. We'll

35
00:50:57,375 --> 00:51:04,167
get the sample later. and kind
of start to follow that process
just a little bit behind. So

36
00:51:04,167 --> 00:51:08,875
share types. Probably everyone
has seen these before. if you
see a share with the dollar at

37
00:51:08,875 --> 00:51:12,958
the end unless someone has done
something funny that typically
means it's hidden. Doesn't show

38
00:51:12,958 --> 00:51:18,375
up unless you go looking for it
or have a tool that looks for it
specifically. Another share that

39
00:51:18,375 --> 00:51:24,083
you'll see everywhere is the
IPC$, its inter process
communication. This is where all

40
00:51:24,083 --> 00:51:28,958
SMB session start. SMB is used
for a couple of things, not just
file shares but also printer

41
00:51:28,958 --> 00:51:36,167
sharing. You can also share
serial ports, apparently over
it. Microsoft has all sorts of

42
00:51:36,167 --> 00:51:44,000
random calls IPC$ is how you
pull ‑‑ where R P C endpoints
are in a windows environment. If

43
00:51:44,000 --> 00:51:48,042
you have a bunch SQL server
instances running on a microsoft
machine you are going to connect

44
00:51:48,042 --> 00:51:53,208
through SMB to IPC$ make calls
against that and give you the
information you need to

45
00:51:53,208 --> 00:51:57,542
go connect that so it's all that
automatic finding fun stuff that
happens all kind that goes

46
00:51:57,542 --> 00:52:04,917
through IPC$ . That's starting
point of any Microsoft window
SMB connection. The next is

47
00:52:04,917 --> 00:52:10,833
admin$. This is a special share
that is kind of a core part of
our methodology. So well get to

48
00:52:10,833 --> 00:52:15,708
those specifics. but this is on
by default every version of
Windows and it takes you to

49
00:52:15,708 --> 00:52:22,000
Windows system 32. It's supposed
to be an admin shares. Some
tools use it. for instance

50
00:52:22,000 --> 00:52:26,875
PsExec uses this. so if you use
PsExec and you upload an
executable its gonna drop that

51
00:52:26,875 --> 00:52:31,583
executable into admin$ sharing.
you can open up wireshark you
can actually see it mapped and

52
00:52:31,583 --> 00:52:39,083
drop and drop the file. Along
that same line is other admin
shares, C$, D$,E$, however many

53
00:52:39,083 --> 00:52:44,542
drives we have will pop up. and
those are just administrative
that are locked down by default

54
00:52:44,542 --> 00:52:52,292
to local administrators. They
will allow you to gain access to
the various drives. Here, until

55
00:52:52,292 --> 00:52:57,625
recently, you couldn't turn
those off. You could disable.
When you reboot, they come back.

56
00:52:57,625 --> 00:53:03,958
Microsoft, has released a hotfix
though to fully disable them. A
nice fix for work stations if

57
00:53:03,958 --> 00:53:07,542
you know they shouldn't be
sharing anything. You don't want
anybody to set something up they

58
00:53:07,542 --> 00:53:11,750
didn't know about. You can run
this on all of your work
stations and no more file

59
00:53:11,750 --> 00:53:17,750
sharing. Make sure you're not
using them [Laughter] tools you
will not expect to use them >>

60
00:53:20,167 --> 00:53:26,125
So if we start looking at a
little bit more detail of share
permision, there's actually a

61
00:53:26,125 --> 00:53:31,333
few things that we wanted to
talk about. The first here is
what's called the DACL,

62
00:53:31,333 --> 00:53:38,167
discretionary access control
lift. A mouth full. This is how
Microsoft stores permission for

63
00:53:38,167 --> 00:53:44,167
everything. It's part of called
the SDDL, and basically it keeps
permission for random stuffs,

64
00:53:46,542 --> 00:53:54,042
shares, files, services,
processes,threads all have DACLS
that can be associated with

65
00:53:54,042 --> 00:54:00,125
them. I was surprised when we
started digging into this all of
the places that these were

66
00:54:00,125 --> 00:54:06,917
applied. Basically, the way
they're put together you can see
here, it's just stored obviously

67
00:54:06,917 --> 00:54:12,917
when you print it, you get a
string like this, and it is just
key colon value, coma separated.

68
00:54:15,875 --> 00:54:20,583
And you will see a lot of
different things. This case the
example is for a share, and you

69
00:54:20,583 --> 00:54:26,583
will find the revisions well as
basically the owner, the group
that owns it as well as the ACL.

70
00:54:26,583 --> 00:54:33,583
This is actually the DACL as
part of this. What this comes
down to is all the stuff you can

71
00:54:33,583 --> 00:54:40,458
set in security tab is all this,
condensed down into a computer.
So inside the DACL we have the

72
00:54:40,458 --> 00:54:47,167
ACL, and each ACL has a single
line called an ace or an access
control entity. What an ace has

73
00:54:47,167 --> 00:54:53,167
is a principal. This stored as a
SID. We reverse those because
who wants to read SID's all day.

74
00:54:57,458 --> 00:55:04,083
It's the SID, and a colon. First
number says allow or deny. In
this case it's going to allow

75
00:55:04,083 --> 00:55:10,667
because it's a zero. This is
what most people use. I feel
most we do, we always see allow.

76
00:55:10,667 --> 00:55:16,542
Sometimes we do see a deny. It
would be a 1. The second number
after the slash is basically

77
00:55:16,542 --> 00:55:21,708
flags that are on this ace. The
ones you see the most and the
ones only relevant to what we're

78
00:55:21,708 --> 00:55:28,000
doing here are we inheriting
this from above? Are we forcing
a propagation down, those sort

79
00:55:28,000 --> 00:55:34,000
of settings. Finally, we have
the access mask. It is a 32‑bit
mask that we use for all of

80
00:55:37,958 --> 00:55:45,333
the various settings what's
important is this, the way this
works is unified across all the

81
00:55:45,333 --> 00:55:51,667
different types of objects that
Microsoft keeps permission for.
Individual items within might

82
00:55:51,667 --> 00:55:57,667
change, but not necessarily
beyond the specifications. Let's
talk a little bit about files

83
00:56:01,000 --> 00:56:05,875
and shares specifically. Shares
have permission, files have
permission. In the end it takes

84
00:56:05,875 --> 00:56:09,542
whatever the lowest privilege is
that you've been given. so if
you have a share thats read

85
00:56:09,542 --> 00:56:12,542
only, but if your NTFS
permission gives you full
control, you are only going to

86
00:56:12,542 --> 00:56:16,917
be able to read from it. Shares,
the permissions are pretty
limited, limited to what we

87
00:56:16,917 --> 00:56:22,417
would do in old DOS days. We
could read, change, execute.
what you basically see is

88
00:56:22,417 --> 00:56:29,375
read,change and full control. On
NTFS we have a lot more
granularity that we can put in.

89
00:56:29,375 --> 00:56:33,417
These are the main ones,
probably pretty
self‑explanatory. but If you

90
00:56:33,417 --> 00:56:39,417
look at special permissions a
lot, and with each new each new
version of windows, you get even

91
00:56:42,333 --> 00:56:48,333
more I mean, a lot of stuff that
they store. >> well how many
people have ever opened up this

92
00:56:50,375 --> 00:56:54,375
security tab and what so special
with .. well im not gonna mess
with it right now. when you

93
00:56:54,375 --> 00:56:59,667
check that all these get enabled
by default. That's why, so when
you hit full control in that box

94
00:56:59,667 --> 00:57:03,583
is the only one that get's added
from having read and write,
that's all of these thats

95
00:57:03,583 --> 00:57:11,458
adding. >> Be aware. >> In
addition to N T F S permission,
also attributes that can be set.

96
00:57:11,458 --> 00:57:17,792
From the old days of DOS. They
are still there, and basically
the two that we really care

97
00:57:17,792 --> 00:57:23,708
about or read only and hidden.
There are several others.
Actually sometimes you will find

98
00:57:23,708 --> 00:57:28,167
some interesting things with
archives because you can pull
things back and do some other

99
00:57:28,167 --> 00:57:31,708
stuff if people changed
versions. you maybe able to do
some stuff with security

100
00:57:31,708 --> 00:57:37,792
controls. In general, read only
and hidden are the only ones we
care about, Shares and

101
00:57:37,792 --> 00:57:41,417
directories as well as files can
all be flagged, so although
mentioned earlier have a dollar

102
00:57:41,417 --> 00:57:46,917
sign after a share, that's
likely how most people make it
hidden. You can flag it. and

103
00:57:46,917 --> 00:57:51,875
although it gets a little weird
when you look at it in Explorer.
It will cause it to be hidden.

104
00:57:51,875 --> 00:57:56,583
The same thing with read only,
if you have permission set, it
will only be read only. It's a

105
00:57:56,583 --> 00:58:04,125
weird interaction between old
DOS days and new days and
keeping stuff backward

106
00:58:04,125 --> 00:58:09,708
compatible that you have these
permissions. In addition to the
DOS mode, recently they've

107
00:58:09,708 --> 00:58:15,042
started adding extended
attributes or EAs. These things
that are entirely accustomed.

108
00:58:15,042 --> 00:58:20,542
They can be added by different
programs, extensions. We have
seen back‑up programs that use

109
00:58:20,542 --> 00:58:25,042
it to flag you know when they've
last passed this handle
incrementals, anti‑virus

110
00:58:25,042 --> 00:58:31,042
programs. Lots of things can. In
the end, for us, as pen testers,
is ‑‑ it's not as much of a

111
00:58:33,208 --> 00:58:38,750
problem, it's not as big of a
deal. These are things we are
seeing in user space. We haven't

112
00:58:38,750 --> 00:58:43,042
seen any vulnerabilities or
anything that we've done with
it. There's probably some

113
00:58:43,042 --> 00:58:47,750
potential there. It would be
awesome some someone dove into
that. >> Especially going

114
00:58:47,750 --> 00:58:53,292
forward as Microsoft starts to
dig it some more. >> A lots of
internal tools and other things

115
00:58:53,292 --> 00:59:00,125
are using it. >> So if we get
into the ultimate nitty gritty
of DACL's and permissions. this

116
00:59:00,125 --> 00:59:07,625
is what an access mask looks
like As mentioned before, it's
32‑bits. In the end, it all

117
00:59:07,625 --> 00:59:14,333
comes down to this in the
center, in the green, you will
actually see what are the global

118
00:59:14,333 --> 00:59:21,125
or standard access rights. These
are available on every single
type of object. So the rights

119
00:59:21,125 --> 00:59:26,792
that you have are pretty
generic. The first one,
synchronize, basically what it

120
00:59:26,792 --> 00:59:31,375
says is are we allowed to access
this object, synchronously or in
asynchronously. did my thread

121
00:59:31,375 --> 00:59:37,833
have to hold or not,its not one
or we've ever been worried
about, from a file and directory

122
00:59:37,833 --> 00:59:41,500
perspective, you are pretty much
always allowed to do it always
synchronously , otherwise the

123
00:59:41,500 --> 00:59:47,083
system will break. The next
one ‑‑ so the next one is are we
allowed to write the owner? Can

124
00:59:47,083 --> 00:59:50,000
I change the owner of this
object? Pretty straight forward.
We also have can I write the

125
00:59:50,000 --> 00:59:53,083
DACL? Are we allowed to change
the access permission and alter
the ACL. so its a little meta

126
00:59:53,083 --> 00:59:57,208
and that the ACL includes the
permission on can someone modify
itself. We also have can I write

127
00:59:57,208 --> 01:00:03,208
to extend the attributes and can
I read extended attributes? or
read and write attributes? This

128
01:00:08,667 --> 01:00:14,667
is not extended attributes. This
is the attributes talking about
before, the DOS. This is hidden,

129
01:00:22,333 --> 01:00:29,708
read only, that sort of thing.
Are we allowed to modify them?
And then, finally, most

130
01:00:29,708 --> 01:00:35,708
self‑explanatory out there, can
we delete the object? So those
green ones are always there. The

131
01:00:38,542 --> 01:00:44,667
ones ‑‑ so the further to the
left, in black is one that
also ‑‑ is global. Always

132
01:00:44,667 --> 01:00:51,917
available. It says can I access
the system access mask? This is
one you don't see often. but

133
01:00:51,917 --> 01:00:55,958
basically There are DACLs and
the there are SACL's. What a
SACL is the name is misnomer in

134
01:00:55,958 --> 01:01:01,958
my mind is that it basically
says am I going to audit when
something happens? It drives a

135
01:01:03,958 --> 01:01:09,542
lot of stuff that goes into the
Windows event log, that goes
into other extended logs you

136
01:01:09,542 --> 01:01:15,542
have and turn on. It's not one
we see often or worry about from
our testing perspective, but it

137
01:01:20,125 --> 01:01:26,125
is certainly one just to keep in
mind. Finally, [Laughter] if you
look on the right. Not you, if

138
01:01:28,750 --> 01:01:34,250
you look on the right in the
orange ‑‑ [Laughter]. >> If you
look on the right in the orange,

139
01:01:34,250 --> 01:01:40,167
these are the ones the that are
specific to files and
directories. This is where you

140
01:01:40,167 --> 01:01:46,458
will see more of the stuff you
will expect to see from a
permissions perspective? Can I

141
01:01:46,458 --> 01:01:52,417
read and write extended
attributes? Can I delete the
file? Can I write new files? The

142
01:01:52,417 --> 01:01:58,333
ones you see listed up here are
for files, the names are
different for directories. The

143
01:01:58,333 --> 01:02:03,333
object type is different. Can
you do a shot? >> Of course.
[Laughter]. >> Give a round of

144
01:02:03,333 --> 01:02:09,333
applause. (Applause). >> And
this is where the presentation
went downhill. >> Give me about

145
01:02:20,208 --> 01:02:26,208
10 minutes and then we'll see.
[Laughter]. >> Okay. So in the
orange, the one that you see up

146
01:02:36,833 --> 01:02:41,125
here are what you'd expect. As I
said, with files, those are the
names you see listed here. With

147
01:02:41,125 --> 01:02:45,708
directories, well honestly on
the file if it says can i write
to the file? the permission on

148
01:02:45,708 --> 01:02:51,125
the directory says can I create
the file? They map. They are
standard. In some of the stuff

149
01:02:51,125 --> 01:02:55,042
we've done we don't even bother
keeping the two names, but just
in case you might decide to look

150
01:02:55,042 --> 01:02:59,917
at this in Microsoft
documentation A, I'm sorry, B,
note that the names are

151
01:02:59,917 --> 01:03:05,917
different. >> It is extensive
documentation. >> i Made him do
it. >> Go back. >> Sorry. >>

152
01:03:09,083 --> 01:03:14,792
Finally, the four blue on the
right are kind meta permissions.
These are the ones you would

153
01:03:14,792 --> 01:03:19,167
expect to see. you have write,
you have read, you have full
control, you have change So,

154
01:03:19,167 --> 01:03:26,625
really, if someone sets these,
it sets all the other flags.
They are assumed, though, that

155
01:03:26,625 --> 01:03:32,125
typically almost every program
will implement it. If you pick
the read flag, I think bit, 31.

156
01:03:32,125 --> 01:03:38,125
If you pick the read one,
technically you have all the
read ones. It doesn't bother to

157
01:03:40,583 --> 01:03:45,833
look at the rest of them. Pretty
much every program on the planet
will set the fact that you can

158
01:03:45,833 --> 01:03:51,083
read files, list directories, it
sets synchronously, it sets
reads extended attributes. So

159
01:03:51,083 --> 01:03:57,083
those are there also. Also
important to note. This is ‑‑ A
lot of time spent figuring out

160
01:04:01,958 --> 01:04:07,958
what the right document was.
When we found it, it was
actually quite easy. Okay. So we

161
01:04:10,083 --> 01:04:16,875
had to go re‑learn some of that
and learn for the first time a
lot of it because of a problem.

162
01:04:16,875 --> 01:04:21,167
Share scanning we keep finding
as kind of a pentesters best
friend. One its where all the

163
01:04:21,167 --> 01:04:25,708
information is typically. You
are going to go after it for
that. find somebody's Password

164
01:04:25,708 --> 01:04:31,708
.txt things like that. Images,
pull creds out, all that fun
stuff. There's other stuff you

165
01:04:33,917 --> 01:04:40,417
can do too. What we found was
the tools weren't built to do
everything we need them to do.

166
01:04:40,417 --> 01:04:44,167
There were some problems with
some the tools that existed
because they had been built to

167
01:04:44,167 --> 01:04:49,333
do this or that and didn't take
into consideration some of the
things. Some of those problems

168
01:04:49,333 --> 01:04:54,417
ran into. Some of the tools have
immature or incomplete
authentication libraries. so

169
01:04:54,417 --> 01:05:00,417
while they'll may not support LM
or NTLMv1, they may not support
v2 or maybe they don't

170
01:05:00,417 --> 01:05:06,167
appropriately handle NTLMSSP
that the security provider
process. Even though library may

171
01:05:06,167 --> 01:05:11,833
support v2, they never get
prompted for v2. it wont ever
just kick in We ran this with a

172
01:05:11,833 --> 01:05:17,500
couple of tools. It includes
often times these tools aren't
share scanning tools. They are

173
01:05:17,500 --> 01:05:23,167
support scanner, vulnerability
scanner, a generalized security
framework. We will go through

174
01:05:23,167 --> 01:05:30,375
some of the tools later. They do
other things. Inmaps, scans for
open ports before it does any of

175
01:05:30,375 --> 01:05:35,875
the scripting stuff, ENS does
some checks to see what kind of
system it's testing so if you

176
01:05:35,875 --> 01:05:40,750
check don't scan printers and
all that stuff, it knows it's
not a printer. There's a lot of

177
01:05:40,750 --> 01:05:45,125
traffic that isn't share
traffic. It will often time can
tip somebody off on What is

178
01:05:45,125 --> 01:05:52,042
going on in the network
something weird and malicious.
We wanted it to be as clean. and

179
01:05:52,042 --> 01:05:57,083
all legitimate traffic so It's
much harder to detect. >> We
don't like getting caught. >>

180
01:05:57,083 --> 01:06:02,917
No. The other thing is slow.
Other tools just wrap other
existing tools like SMP client,

181
01:06:02,917 --> 01:06:08,583
some are written in scripting
languages, whole library are, a
crazy feet, kudos to the people

182
01:06:08,583 --> 01:06:13,458
who wrote those. They are
slower. How many times you've
gone to window file share,and

183
01:06:13,458 --> 01:06:19,542
slow and thats all written in C
and optimized for years by
Microsoft. Somebody implementing

184
01:06:19,542 --> 01:06:25,542
that in a scripting line, it is
slow. We need it to be fast. And
finally, almost none of the

185
01:06:28,333 --> 01:06:35,542
tools would go down to 3. If you
have a folder structure that has
120,000 objects file and

186
01:06:35,542 --> 01:06:40,167
directories and all that stuff,
these tools wouldn't find those
for you. They will give you the

187
01:06:40,167 --> 01:06:45,167
share permissions, maybe the
share permissions plus upload a
file to tell you if you have the

188
01:06:45,167 --> 01:06:52,667
right access. They didn't give
us all the information we
wanted. So here's some of the

189
01:06:52,667 --> 01:06:58,125
reasons that we share. First one
is obvious. This is why everyone
looks at share sensitive data.

190
01:06:58,125 --> 01:07:03,875
You look for H.R. share. Check
out the salary, the person who
hired you. What is he or she

191
01:07:03,875 --> 01:07:08,500
making? What is the IT person
yelling at you that you broke
this or you broke that, what

192
01:07:08,500 --> 01:07:11,458
he's making, all that fun stuff.
you look for IT shares The
Windows administrator has that

193
01:07:11,458 --> 01:07:17,458
big installer package for SCCM,
and you download it, now its
gonna get to server installed

194
01:07:21,667 --> 01:07:27,667
on. he's working 12 hours that
day,so he just opens a share in
his documents. Opens it up and

195
01:07:27,667 --> 01:07:32,083
dumps it in an application share
somewhere. Now this has become a
dumping ground. and just all his

196
01:07:32,083 --> 01:07:37,708
stuff is all in there Scripts,
pass words, all that stuff. All
of them come from Windows

197
01:07:37,708 --> 01:07:45,167
maintenance at 2am . >> Exactly.
[Chuckles]. >> Backups. We see
this all the time. A backup

198
01:07:45,167 --> 01:07:50,042
folder that if a permission was
opened up, the tool X, Y Z can
go and grab a visual machine and

199
01:07:50,042 --> 01:07:53,167
make a backup or do a backup of
the specific share, or all these
different things, and they dump

200
01:07:53,167 --> 01:08:00,792
it to a regular share or some
piece of storage storage. No one
ever goes and lock down those

201
01:08:00,792 --> 01:08:08,417
permissions. We have got in
control of several admin
passwords by grabbing a backup

202
01:08:08,417 --> 01:08:13,625
and dumping that out into a
Windows image file or V ranger
or something like that and

203
01:08:13,625 --> 01:08:18,292
pulling local admin creds,
pulling sometimes cash
credentials anything you can

204
01:08:18,292 --> 01:08:23,750
pull off a hard drive system,
you can pull off these back up
images typically. Finally one of

205
01:08:23,750 --> 01:08:27,667
the more fun ones, source code a
lot in shares. Source code for
vendor tools or stuff created by

206
01:08:27,667 --> 01:08:33,667
those tools, one the ones that
was interesting is we found a
very large help desk system that

207
01:08:39,833 --> 01:08:45,292
let you attach and track changes
tickets and all this by default
when you set it up creates a

208
01:08:45,292 --> 01:08:49,458
share that you can map and
everyone has access to that
contains all of those

209
01:08:49,458 --> 01:08:55,625
attachments. If you're change
control system, putting here's
our original router and here's

210
01:08:55,625 --> 01:09:02,250
the change we're going to make,
a nonredacted configuration
internal, we could get those. We

211
01:09:02,250 --> 01:09:07,833
did dump ‑‑ we dumped
configuration for switches and
routers, firewall

212
01:09:07,833 --> 01:09:09,833
configurations. >> Passwords. >>
Yeah, new passwords. Audit for
service accounts. We know eight

213
01:09:09,833 --> 01:09:15,833
passwords, we can't change them,
and here they are. Common stuff
you can find. That's only a

214
01:09:27,167 --> 01:09:32,333
portion of what we do. Typically
it's do after we have taken over
a network. The goal is not to

215
01:09:32,333 --> 01:09:39,833
take over the network. This is
the other stuff we go through.
Paragraph. >> I was going to say

216
01:09:39,833 --> 01:09:46,333
admin is fine. You come to a
bank with every account number,
they listen. >> So the first

217
01:09:46,333 --> 01:09:52,000
thing we always do before is
system fingerprinting. Once you
have authentication. Anybody

218
01:09:52,000 --> 01:09:55,583
know the two shares that own
every domain controller?
Anybody? SYSVOL and log-on, You

219
01:09:55,583 --> 01:10:01,583
see those, you are looking at a
domain controller. It tells you
what that system is. If you see

220
01:10:15,875 --> 01:10:19,375
WDS, Windows deployment
services, that kicks in.
Deployment share is that one.

221
01:10:19,375 --> 01:10:25,375
SCCM, default shares hat they
have put enabled. Older versions
of IIS. Find the H.R. system,

222
01:10:29,667 --> 01:10:36,542
look for the IT share on one
server or the H.R. share on one
serve somewhere. You want to see

223
01:10:36,542 --> 01:10:42,542
where everybody's files are?
Profile or users on has
everybody's stuff. Sometimes

224
01:10:46,583 --> 01:10:52,542
those permissions aren't right.
It will tell you a ton of what
you are looking at. >> As a side

225
01:10:52,542 --> 01:10:58,000
note, if youre trying to be
really stealthy, you can't do
anything to actively identify

226
01:10:58,000 --> 01:11:04,000
Windows host use something like
NBTEnum user info winfo and go
to the domain computer groups,

227
01:11:04,000 --> 01:11:11,000
remove the dollar from the end,
that will give you pretty much a
full list of every work station

228
01:11:11,000 --> 01:11:16,042
and server in the domain. It's
not going to get caught. >> You
are not going to get caught. the

229
01:11:16,042 --> 01:11:21,667
only problem you're going to
have with that is that if the
dont clean their environment

230
01:11:21,667 --> 01:11:25,292
which no one does You will have
half of them, disabled three
years ago and don't exist. You

231
01:11:25,292 --> 01:11:31,292
can clean that up too. Okay.
Beyond that, beyond what is the
obvious shares, we have also

232
01:11:36,333 --> 01:11:42,125
found a couple of unique uses
for us. We were actually talking
earlier, probably about half of

233
01:11:42,125 --> 01:11:49,250
our attack vector two domain on
all of our Pentest involve this.
We will probably start to

234
01:11:49,250 --> 01:11:54,875
change, but the first one, the
big one is, is the local
administrator password reused?

235
01:11:54,875 --> 01:12:02,583
Remember the admin share. If you
popped a box, got one work
station, let's say it's through

236
01:12:02,583 --> 01:12:08,583
social engineering Or I don't
know, you've got a share with
WDS images and a local admin

237
01:12:11,167 --> 01:12:17,000
password. The next question is
where is it re‑used? You can do
a lot of different tools to find

238
01:12:17,000 --> 01:12:23,000
that. That's going to look like
a log‑on attempt. It may get you
caught. It may rise above the

239
01:12:26,333 --> 01:12:33,792
back beyond and radiation of the
network. It's really simple, try
and mount admin dollar on every

240
01:12:33,792 --> 01:12:39,542
work station with that account.
If it works, bam, you know where
it's re‑used. We're on pens all

241
01:12:39,542 --> 01:12:45,792
the time a thousand or 2,000
work stations, what we will find
is sometimes clients are pretty

242
01:12:45,792 --> 01:12:51,625
good. Maybe put I T local
administrator password, maybe
H.R. and everybody the same one,

243
01:12:51,625 --> 01:12:59,417
at that point, if I can control
1900 of your 200 work stations,
it's only a matter of time. The

244
01:12:59,417 --> 01:13:05,417
domain will log in. You have got
to be patient. The other piece
that you can actually help out

245
01:13:08,708 --> 01:13:12,292
with is you can start to learn
is it rename this in the same
place everywhere. AdminwhaAdmin

246
01:13:12,292 --> 01:13:18,167
is one that we found. >> That is
my favorite local administrator.
Everyone should use this,

247
01:13:18,167 --> 01:13:24,167
adminwhatadmin. >> My favorite
is still ‑‑ we have had several
clients, per our recommendation,

248
01:13:26,917 --> 01:13:31,750
renamed the admin account or
disabled it, which is good.
Disabling the admin account

249
01:13:31,750 --> 01:13:37,625
prevents a lot of lateral
expansion of your access. Then
they will go around and create 3

250
01:13:37,625 --> 01:13:43,500
new ones, help desk, one for
anti virus updates and patching,
and they're all local admins. We

251
01:13:43,500 --> 01:13:49,750
give them a blank stare, being
like, okay, did you think this
through? So we also find that

252
01:13:49,750 --> 01:13:54,458
all the time, where there's
local account that are reused.
Sometimes they're local users.

253
01:13:54,458 --> 01:14:00,458
We can work with that. but more
often theyre not local admins,
That's just bad. Also, we will

254
01:14:02,833 --> 01:14:08,833
also find where if we get one
usage set of credentials,
responder, you know about that?

255
01:14:11,833 --> 01:14:16,625
It's really cool. I suggest look
into it. We will get a
credential from that and manage

256
01:14:16,625 --> 01:14:24,250
to crack it. Maybe we will get
some local cash cred, thru
mimikatz that have come to us.

257
01:14:24,250 --> 01:14:30,667
sadly theyre Regular domain
user. No one important. But, you
will often find again, you have

258
01:14:30,667 --> 01:14:36,375
2,000 work stations. How often
do you think the admins have
gone through every single work

259
01:14:36,375 --> 01:14:40,667
station and make sure that
people aren't on local admin on
it?. How can you make sure that

260
01:14:40,667 --> 01:14:46,125
work station haven't been up
graded from windows N T and has
the everyone group in the local

261
01:14:46,125 --> 01:14:52,417
administrators? It turns out
pretty often that's the case. I
would say consistently we will

262
01:14:52,417 --> 01:14:57,833
find one or two work stations,
or maybe a server where everyone
is a local admin or domain users

263
01:14:57,833 --> 01:15:03,833
have been put in that group. We
are now immediately escalated
up. We do something to get

264
01:15:06,125 --> 01:15:13,042
credentials. Half the time there
aren't any in there. Again, what
we will do here is as soon we

265
01:15:13,042 --> 01:15:19,000
get creds, passwords whatever,
we start scanning for the admin
dollar share across all of these

266
01:15:19,000 --> 01:15:25,000
systems to see where we have
admin access. There's one more
step. >> Before we start writing

267
01:15:27,792 --> 01:15:32,792
these tools, these are the
tools, with the exception of
winshare, we kind of have access

268
01:15:32,792 --> 01:15:37,875
too. Nmap has the NSC script.
they have been working on the on
the authentication piece. it

269
01:15:37,875 --> 01:15:45,833
gives you the default
permissions for that share.
Upload a file to see if you can

270
01:15:45,833 --> 01:15:51,833
write to it, let's you know if
you can read to it. It's a port
scanner. It does port scanning

271
01:15:54,750 --> 01:16:02,125
beforehand. It checks for random
ports aren't related to Windows
traffic. It's easy to look for

272
01:16:02,125 --> 01:16:08,125
traffic. to see if it is an
actual share mounting. System
internal sharEnum , very hard

273
01:16:11,167 --> 01:16:18,000
for a pen tester to use it. It's
finicky. If you are a Windows
admin and your wanting to review

274
01:16:18,000 --> 01:16:23,000
your own share permissions and
look at things, it's a great
tool. It's hard for us to use

275
01:16:23,000 --> 01:16:29,833
this at scale if looking at
2,000 Windows system. We don't
have a domain machine to run it.

276
01:16:29,833 --> 01:16:35,833
>> It won't let you put in
creds. >> and then Nessus, our
bigger complaint is slow. Faster

277
01:16:39,042 --> 01:16:45,833
in the last year. It will go to
some level of recursion. It's
not clear how far it will go

278
01:16:45,833 --> 01:16:51,333
down. It will pull some files
and folders and tell you
permissions there. It will tell

279
01:16:51,333 --> 01:16:54,667
you if you have write
permission. Upload a file to
verify if you have write

280
01:16:54,667 --> 01:16:58,917
permission. It's a vulnerability
scanner. If it's a novel system.
It's pretty obvious that

281
01:16:58,917 --> 01:17:04,917
something that's not a Windows
Shares is going on. >> The
plug‑in will actually look for

282
01:17:12,083 --> 01:17:18,833
several common share names, so
it's also easy to identify. It
will try invalid shares just to

283
01:17:18,833 --> 01:17:24,417
see if they exist >> Mataspoint
has a couple of different
modules that we used to we use

284
01:17:24,417 --> 01:17:31,458
this before we wrote shareEnum.
You can try log on, which is
just failed log on attempts. If

285
01:17:31,458 --> 01:17:38,167
you don't do it write.
Successful log on attempts if no
activity. Suspicious if across a

286
01:17:38,167 --> 01:17:44,167
thousand work stations. It will
try to mount or try to upload a
file to see if you have write

287
01:17:51,000 --> 01:17:58,125
permissions. And it is also used
to be slow. and now the threaded
their's because they rewrote

288
01:17:58,125 --> 01:18:04,125
their SMB libraries.
WinShareEnum is one that we
found while we were writing this

289
01:18:07,792 --> 01:18:13,792
tools it runs on dot net 4.5, I
believe. It's difficult to get
running, when it does, it's

290
01:18:18,750 --> 01:18:23,833
works. but It if it gives failed
access attempt it will retry
just to make sure if it really

291
01:18:23,833 --> 01:18:28,417
got the failed access Again,
that just looks ‑‑ it looks
malicious if you you are looking

292
01:18:28,417 --> 01:18:34,417
at logs, why four failed log ins
in a row. It will try to bind
whether you gave creds or not.

293
01:18:40,292 --> 01:18:44,458
It's not necessarily what we
want. We want to some clean
information from it without

294
01:18:44,458 --> 01:18:50,792
being too noisy. Finally, you
can always use explorer net use
and SMB client. If you don't

295
01:18:50,792 --> 01:18:56,833
use SMB client if you have used
a command line FTP client, that
is SMB client, you can list the

296
01:18:56,833 --> 01:19:02,833
shares, you can connect to them,
and you can do M get, M put, it
doesn't say the permissions, you

297
01:19:05,083 --> 01:19:09,917
don't have permission, it yells
at you. If you have permission,
it will download or whatever it

298
01:19:09,917 --> 01:19:15,917
does. That will take forever. >>
Okay. These are a lot of the
tools that we use. They were

299
01:19:18,667 --> 01:19:24,667
great tools, but they didn't
meet the need that we had which
was to do it in bulk without

300
01:19:24,667 --> 01:19:30,917
sending a lot of traffic. We
thought to ourselves we could be
like a lot of other hackers and

301
01:19:30,917 --> 01:19:36,917
do it ourselves. We are not
crazy. We don't want to
implement SMB or ruby or pearl.

302
01:19:39,417 --> 01:19:44,083
At that time that really wasn't
there. There actually is a group
of people that have done this

303
01:19:44,083 --> 01:19:51,125
already and done a damn good job
at it. and thats Samba, They
have Samba 4 can emulate a

304
01:19:51,125 --> 01:19:58,458
domain controller. I have one
client that handed it in ‑‑
They're crazy, but, smart.

305
01:19:58,458 --> 01:20:04,458
Basically what we decided is use
the same library that SMB client
does. An extraction library

306
01:20:06,833 --> 01:20:12,833
which provides a lot of
functions that you can use to
call all of these different

307
01:20:15,250 --> 01:20:22,125
things. It's a lot faster. They
have compiled I D L's that
allows them to make RPCcalls

308
01:20:22,125 --> 01:20:27,958
quickly. More native and written
in C, so in general it's going
to be just faster than using A

309
01:20:27,958 --> 01:20:34,875
and interpreted language The
other really nice benefit here
is Samba team worked hard to

310
01:20:34,875 --> 01:20:40,292
make sure they can support all
of the same stuff that Microsoft
does. They are behind because

311
01:20:40,292 --> 01:20:44,833
they had to implement specifics
after my company soft comes out.
It's open source. They don't

312
01:20:44,833 --> 01:20:51,042
have the army of programmers
that Microsoft does. It supports
all the cool stuff we need

313
01:20:51,042 --> 01:20:58,042
NTLMV2… NTLMSSP. Our tool
doesn't do it. If we wanted it
to, it would support cobra soft.

314
01:20:58,042 --> 01:21:04,042
If you have it, good for you. We
are not implementing it until we
find someone who does It made

315
01:21:08,542 --> 01:21:16,375
this a lot easier for us. >> It
works everywhere, almost every
printer. You will find the Samba

316
01:21:16,375 --> 01:21:22,042
code in various versions on
almost every code out there. It
has been battle tested and

317
01:21:22,042 --> 01:21:27,833
optimized by everybody Windows
Share. >> A side note, a remote
exploitation in command

318
01:21:27,833 --> 01:21:33,833
objection vulnerability in
NETBIOS name damon for Samba
that was released this week. It

319
01:21:35,917 --> 01:21:41,917
might be interesting to take a
look at. We gather the DACL's
and parse the aces and nice SCB

320
01:21:46,750 --> 01:21:52,750
so you can go to your
spreadsheet of choice and filter
everything out. We do also

321
01:21:55,875 --> 01:22:02,125
recursively go and go as deep as
you want. We have actually
pulled every permission from a

322
01:22:02,125 --> 01:22:09,500
file server that had over half a
million objects on it. It took
about 30 minutes. It was a

323
01:22:09,500 --> 01:22:16,375
gigantic C S C file excel
complaint. We also support
anonymous. We can use regular

324
01:22:16,375 --> 01:22:22,375
creds. We support the DACL
that's out there. So we do have
a demo. >> At least a video,

325
01:22:25,292 --> 01:22:32,875
hopefully a demo. >> Hopefully
this is easy to read. >> Is it
good? >> Can everybody see. >>

326
01:22:32,875 --> 01:22:38,875
We are irritated when people
throw up a terminal and its 12
point font, black background on

327
01:22:43,208 --> 01:22:49,208
green. [Laughter]. >> Okay. So.
Push print here, again. We have
a nice menu that tells you all

328
01:22:54,708 --> 01:23:01,167
the flags. Updates. Make it big
so you can see what we're
typing. Not as nicely formatted.

329
01:23:01,167 --> 01:23:08,625
The first one is just
enumerating share, we have a set
of creds, a list, a 1 IT or host

330
01:23:08,625 --> 01:23:14,625
name for line file of the
targets we want. Get that. >>
Hosting a Test lab. >> one of

331
01:23:16,833 --> 01:23:22,833
these creds have access to what
shares are out there. >> We do
sharEnum. We give it a user. You

332
01:23:26,583 --> 01:23:32,583
can do without the domain, but I
will do the domain. Escape. if
you you type it right you will

333
01:23:37,042 --> 01:23:43,708
have lockout count. >> Yeah.
Yeah. We have locked out counts
too. >> The password. Super

334
01:23:43,708 --> 01:23:49,708
strong password. We give it an
output file just a C S V and
provide the targets we give that

335
01:23:55,917 --> 01:24:02,083
a run. You will see nice pretty
colors. >> It pauses too to make
sure you put the password in

336
01:24:02,083 --> 01:24:09,125
right. >> You will see it goes
through and telling you what it
is actually getting. If it has

337
01:24:09,125 --> 01:24:15,083
some errors because you didn't
have access, it will tell you
that. If it pulled objects and

338
01:24:15,083 --> 01:24:20,833
information, it will tell you
that. We give you color to see
if you are getting red X's or

339
01:24:20,833 --> 01:24:26,833
getting some data back. We will
show you what that looks like
here. >> While he's pulling that

340
01:24:31,417 --> 01:24:35,167
up, for each of these demos
we're also going to talk about
steps if you are on the other

341
01:24:35,167 --> 01:24:40,708
side. We like breaking into
things. Both used to be admins
in the past. We understand we

342
01:24:40,708 --> 01:24:45,167
don't want to come and break
everything and leave. And say
here. [Chuckles]. >> We prefer

343
01:24:45,167 --> 01:24:51,167
to at least help you along the
way. So let's talk about this
one. This is very difficult. You

344
01:24:55,792 --> 01:25:00,833
need shares enabled. Something
one of our client did, took
surprise. They actually logged

345
01:25:00,833 --> 01:25:06,833
whenever someone used C dollar
or admin dollar. Basically if
they saw more than five in a

346
01:25:08,958 --> 01:25:15,083
time period, C product,
generated an order. That stopped
us real quick. That's tough. >>

347
01:25:15,083 --> 01:25:21,083
Have the six up here. Provide a
lot of information, some headers
of the user you ran the account

348
01:25:23,917 --> 01:25:30,417
with. So if you're combining
these into a lot to you have
this, you can tell what user you

349
01:25:30,417 --> 01:25:35,625
ran it with, the host, what the
share name is, what type it is.
Right now it will just show file

350
01:25:35,625 --> 01:25:41,625
shares. It will say whether
its's a directory or a file. We
pull the D A C L's we talked

351
01:25:44,125 --> 01:25:50,125
about. Authenticated users. You
can actually go through and
filter it. If we want to look

352
01:25:52,417 --> 01:25:58,500
for all those admins we talked
about, now we can tell where
this user has local

353
01:25:58,500 --> 01:26:03,625
administrator access. If this
was a pen test, we would go to
the system and pull the local

354
01:26:03,625 --> 01:26:09,625
administrator test, which we've
done for you. If I can use the
screens. Again, this same user

355
01:26:14,208 --> 01:26:21,625
account we have provided the
credential. This is the format,
the same one that metaspoint

356
01:26:21,625 --> 01:26:29,417
uses, the LM hash colon, the M T
L M hash. You provide it that.
You copy it straight out of P W.

357
01:26:29,417 --> 01:26:35,417
Make sure there's no space
password. Make sure you put
that. Tool left that run. You

358
01:26:38,917 --> 01:26:44,917
will see we're pulling results
again for each of the host with
a hash there. If we look at that

359
01:26:49,083 --> 01:26:55,083
output, again we can filter this
up, make it with the same user.
Still this one account. If we

360
01:27:03,625 --> 01:27:09,417
had run it with it with actual
local administrator, we would
see that admin share every

361
01:27:09,417 --> 01:27:15,250
where. I tend to running a big
host, I will have him open just
looking for admi$ with right

362
01:27:15,250 --> 01:27:20,458
access. That will tell you, you
have a system where you have
local admin. >> Let's take a

363
01:27:20,458 --> 01:27:28,292
minute to talk about local admin
access. This is difficult. More
often than not we find our

364
01:27:28,292 --> 01:27:33,417
client are using it
accidentally. It's not a
situation where they wanted

365
01:27:33,417 --> 01:27:39,417
everyone to have local admin. It
was a situation they needed it.
They set it up once and turned

366
01:27:39,417 --> 01:27:45,167
it off. This is where were doing
that review, a whole lot of
tools you can do to do groups.

367
01:27:45,167 --> 01:27:51,417
We listed a few that do a share.
You can filter on admin$ dollar.
It's a good review. You can do

368
01:27:51,417 --> 01:27:56,958
it probably once on your
network. It will take a while if
you have a large network. If you

369
01:27:56,958 --> 01:28:04,458
want to get more granular, you
can use expert pro, nesus will
do it, pull the group membership

370
01:28:04,458 --> 01:28:10,083
on every system. A couple of
hours, I know that's a couple of
hours most of us don't have. To

371
01:28:10,083 --> 01:28:15,750
be honest, keeping people from
having local admin is one where
I say three top things to

372
01:28:15,750 --> 01:28:21,750
recommend. Keep your pen testers
frustrated. >> So the next demo
here is the recursion. You will

373
01:28:25,583 --> 01:28:31,667
see we added same thing as
before, password user name.
Added R flag. Go 10 levels deep.

374
01:28:31,667 --> 01:28:37,833
We will ride it against one
host. There's a third way you
can provide hosting. You can

375
01:28:37,833 --> 01:28:43,833
provide a file that is one gear
host name per line. You can
provide one target the host name

376
01:28:46,833 --> 01:28:50,708
and whatever system you want to
look at. It will go on
everything in that system. That

377
01:28:50,708 --> 01:28:58,250
is what we will do here and let
that run. The last one you will
see in a second is limit it to a

378
01:28:58,250 --> 01:29:04,250
share to 10 folders deep in a
share. You can give it the full
path where you want it to go. It

379
01:29:06,625 --> 01:29:13,208
will go and do a recursion
against those. Will you see
there, theres 1300 objects it

380
01:29:13,208 --> 01:29:18,792
found. We will open that guy up.
Paragraph. >> While he's doing
that, the last mitigate we

381
01:29:18,792 --> 01:29:25,083
wanted to talk about was admin
passwords reuse. I would put
this in my top three. When

382
01:29:25,083 --> 01:29:31,208
clients have basically.. you are
pulling from an image or you
have it set in group policy and

383
01:29:31,208 --> 01:29:37,208
preferences setting the local
admin. If I take over one work
station, I am effectively taking

384
01:29:43,667 --> 01:29:47,083
over all, which is bad.
Ultimately all networks getting
broken into every day. We have

385
01:29:47,083 --> 01:29:50,958
to accept that. It's our goal to
contain people. One of the first
lines of defense you can do that

386
01:29:50,958 --> 01:29:54,958
is preventing them from getting
access to other work stations.
If your users are running as

387
01:29:54,958 --> 01:29:59,792
regular user was U A C set to 4
and everything is perfect, I can
still, hopefully, get access to

388
01:29:59,792 --> 01:30:02,458
the local admin hash and the
local admin credentials. From
there, you prevented regular

389
01:30:02,458 --> 01:30:07,292
users from doing things there,
the attacker can get access to
every station. The optimal

390
01:30:07,292 --> 01:30:13,292
solution here is to disable the
account, coz that could be
difficult unless you're

391
01:30:16,208 --> 01:30:22,208
reimaging the system, if they
fall off the domain, you are
screwed. You will not get it

392
01:30:26,042 --> 01:30:30,583
back. There are a few other
things. One prevent that account
from logging on over the

393
01:30:30,583 --> 01:30:36,667
network. That way got at local
console, if the system falls off
domain. You prevented an

394
01:30:36,667 --> 01:30:42,958
attacker from using it over the
network. It works well.
Sometimes you can't do that.

395
01:30:42,958 --> 01:30:50,167
Some people haven't been able to
get to it work. Networks are
complex species. The next best

396
01:30:50,167 --> 01:30:55,292
option is to start to group
them, have a pass word for
admins, for I T, H.R., have a

397
01:30:55,292 --> 01:31:01,292
pass word for accounting, so
that at least you contained your
access, to only access the only

398
01:31:03,917 --> 01:31:09,292
information they already had.
You want to get crazy, Microsoft
theres actually some power soft

399
01:31:09,292 --> 01:31:13,000
script that you can get that
they've put out that will set
every password on every system

400
01:31:13,000 --> 01:31:18,333
in your domain to a random
value. >> They released it as
part of when they pushed that

401
01:31:18,333 --> 01:31:24,333
update to quote unquote kill
pass the hash. They, and far PGP
update disables the ability to

402
01:31:27,750 --> 01:31:34,208
store password and group policy.
They provided a power source
script that go through every

403
01:31:34,208 --> 01:31:39,875
work station. It will run
against it set the local pass
word to something random and

404
01:31:39,875 --> 01:31:45,875
dump it and throw in a key pass
and some encrypted store, if you
have to log in, there is it. You

405
01:31:48,708 --> 01:31:54,708
will not need it that often, so
it's fine. You will see here, C
S V have directories files, file

406
01:31:57,833 --> 01:32:03,833
shares, the permission for each
and who has permission. Same
thing, some format for each one.

407
01:32:05,958 --> 01:32:13,583
In this one that object file
start to give us full
directories 10 levels deep. Our

408
01:32:13,583 --> 01:32:20,917
last demo here, you will see ‑‑
so we will give it a specific
path. If you would look through

409
01:32:20,917 --> 01:32:26,958
the results that we have before
you, a folder Smith. looks like
a user directory, i wanna know

410
01:32:26,958 --> 01:32:30,958
everything what this user has in
his user directory, We are going
to run a hundred levels of

411
01:32:30,958 --> 01:32:36,958
recursion and run against this
share. This has bitten me before
where there's a file serve and

412
01:32:41,292 --> 01:32:47,375
go deep on one share, but they
also have 10 other shares that
are massive and it will never

413
01:32:47,375 --> 01:32:53,375
finish if it has to run against
all of them. You should be as
specific as you want to be. So

414
01:32:57,667 --> 01:33:03,417
we've pulled that there. You
notice that when you do a
specific path , you have to do a

415
01:33:03,417 --> 01:33:09,417
SMB-colon-slash -slash which is
standard. You have to add that.
Let me pull up ‑‑ no. >> You're

416
01:33:19,583 --> 01:33:25,583
fine. >> Okay. >> So by the
numbers. Right now this is some
of the numbers we've pulled with

417
01:33:29,042 --> 01:33:33,792
the current version to see how
fast it runs. It takes about 6
seconds for a standard host and

418
01:33:33,792 --> 01:33:41,000
that includes Samba warming up
and tools warming up. It will
give a pause before you lock

419
01:33:41,000 --> 01:33:48,042
everything out. One host with
some recursion for about 6200
objects takes about 2 minutes, 2

420
01:33:48,042 --> 01:33:54,208
and a half minutes. This isn't
quite as fast as we like it to
be. We will try to make it

421
01:33:54,208 --> 01:34:01,625
faster. For what we're doing
it's quicker. Finally a small
network with limited lan links.

422
01:34:01,625 --> 01:34:07,625
We have remote locations
connectivity. It took about 13
or 14 minutes to do 165 window

423
01:34:12,167 --> 01:34:18,292
cells. We have used this in
networks as large as 6, 7,000
work station servers. It will

424
01:34:18,292 --> 01:34:24,292
keep running. Sometimes it takes
a little bit. >> As far as
challenges, Samba is a big

425
01:34:26,375 --> 01:34:31,583
beast. There's a lot of stuff to
it. More importantly, there's a
patch that we are having to

426
01:34:31,583 --> 01:34:37,458
issue through Samba itself. The
reason being if you try to do
pass the hash, it supports it,

427
01:34:37,458 --> 01:34:44,125
but there is one portion where
you pull extended attribute,
DACL, start treating the pass

428
01:34:44,125 --> 01:34:51,917
word hash again and locks out
accounts, so not good. Also it's
written in C, haven't written in

429
01:34:51,917 --> 01:34:57,917
C in a long time, so terrible.
Anybody has any questions, we
will be around. Anybody here has

430
01:35:00,000 --> 01:35:06,250
written RPC code for Samba, we
would like to buy you a beer. We
have some questions for some

431
01:35:06,250 --> 01:35:13,875
other tools. Here is the contact
info. Thanks, everybody.
(Applause) . "This text is being

432
01:35:13,875 --> 01:35:15,875
provided in a rough draft
format.  Communication Access
Realtime Translation (CART) is

433
01:35:15,875 --> 01:35:17,875
provided in order to facilitate
communication accessibility and
may not be a totally verbatim

434
01:35:17,875 --> 01:35:19,875
record of the proceedings." 

