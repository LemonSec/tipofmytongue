1
00:00:00,458 --> 00:00:06,458
[Applause]. Hello everyone I'm
Ryan Lackey and Marc Rogers and
the Grugq not here as you can

2
00:00:12,708 --> 00:00:18,708
see. I think he had severe
traveling difficulties and
there's sketchy details so I'm

3
00:00:29,583 --> 00:00:35,917
not too filled in on it but we
worked with him on this project
for the last year and awhile

4
00:00:35,917 --> 00:00:41,917
have been in contact with him
so... I actually work for Cloud
Farea company that does CDN DDoS

5
00:00:45,083 --> 00:00:50,708
stuff. Marc looks for Look Out.
Working on this as kind of a
side project, a fun thing. The

6
00:00:50,708 --> 00:00:57,000
Grugq is an OpSec consultant and
works on a variety of cool
projects. >> I'm mostly the head

7
00:00:57,000 --> 00:01:04,500
of security here so I apologize
for shouting at you. >> Laughter
>> So we're excited to be here

8
00:01:04,500 --> 00:01:10,500
and show off this cool thing
we've been working on. So we're
going to go over why you want to

9
00:01:13,000 --> 00:01:17,208
hide. We're using software that
will let you hide in network
traffic. We're going over

10
00:01:17,208 --> 00:01:23,000
principles of operational
security which is really Grugq's
main area of study and he's the

11
00:01:23,000 --> 00:01:28,083
pretty much the most interesting
person in the field taking how
larger organizations learn about

12
00:01:28,083 --> 00:01:34,083
op sec and applying it to the
hacker and activist community
and other groups that don't have

13
00:01:36,375 --> 00:01:41,792
a huge intelligence arm or
anything. We will go over
serious op sec fails and what

14
00:01:41,792 --> 00:01:46,917
happens to people then how
technical counter measures are
used against people, existing

15
00:01:46,917 --> 00:01:50,083
tools, travel routers, and how
to use these things for safety
measures of the tools and then

16
00:01:50,083 --> 00:01:54,125
we're going to bring in the
exciting new technology the
travel routers. So, just to

17
00:01:54,125 --> 00:02:01,917
start why would you ever want to
hide? If you're doing normal
stuff we're not talking about

18
00:02:01,917 --> 00:02:07,083
helping people hide from doing
all sorts of bad stuff. You're
in your normal life. There's a

19
00:02:07,083 --> 00:02:10,333
lot of reasons why you would
want to hide. A lot has become
much more clear in the last

20
00:02:10,333 --> 00:02:16,042
couple years. Especially post
Snowden. But even before that it
was fairly widely understood at

21
00:02:16,042 --> 00:02:22,375
least within this community.
Part is to avoid a global drag
net. You want to make sure that

22
00:02:22,375 --> 00:02:25,833
if somebody is monitoring all
the communications that you're
not swept up in that. Because

23
00:02:25,833 --> 00:02:31,000
the problem is, while you might
be doing nothing at all wrong
somebody next to you or somebody

24
00:02:31,000 --> 00:02:38,625
you have a phone call from or in
any loosely connected way might
do something and due to how

25
00:02:38,625 --> 00:02:43,292
software works and scoring that
plus another interaction plus
something else depending on

26
00:02:43,292 --> 00:02:48,042
where you live could actually
get you droned. Not just on a
watch list but signature strike

27
00:02:48,042 --> 00:02:54,667
or something like that. Prevents
all sorts of problems but really
it's like none of your business.

28
00:02:54,667 --> 00:02:58,708
Why would you want to be
monitored? It doesn't benefit
you in any way so if you can

29
00:02:58,708 --> 00:03:04,708
avoid it you should possibly do
it. 	>> There's also the fact
that you are doing something you

30
00:03:07,583 --> 00:03:13,458
don't want people to watch.
Maybe it's illegal, maybe it's
just something you want to

31
00:03:13,458 --> 00:03:19,292
maintain OPSEC for your project,
OPSEC for your company. People
are actively trying to steal

32
00:03:19,292 --> 00:03:25,000
secrets for both national
security reasons and security
reasons and because they want to

33
00:03:25,000 --> 00:03:29,042
steal your secrets. >> And the
crazy thing is people that were
in various illegal activities

34
00:03:29,042 --> 00:03:34,917
knew this and people that were
in the hacker community knew
this but now there's a whole new

35
00:03:34,917 --> 00:03:39,167
realm of people that really need
to worry about this kind of
thing that you would never think

36
00:03:39,167 --> 00:03:46,208
of as spies or hackers.
Journalists giving any kind of
activism in an environment where

37
00:03:46,208 --> 00:03:51,875
their adversaries are well
resourced these people have this
as a serious concern and it's

38
00:03:51,875 --> 00:03:57,917
crazy and it's an asymmetric
problem where there's people
that have problems now and don't

39
00:03:57,917 --> 00:04:04,417
have the resources. >> There's
two important takeaways we get
from this. One number OPSEC not

40
00:04:04,417 --> 00:04:11,417
new. We like to talk about OPSEC
as though it is a new thing that
we've discovered. It's probably

41
00:04:11,417 --> 00:04:19,375
as old as mankind. And many of
the techniques to protect are
just as old. The other one is

42
00:04:19,375 --> 00:04:24,417
the tools and stuff we're
talking about there's no rocket
science here. We are talking

43
00:04:24,417 --> 00:04:29,208
about using exiting tools,
existing technique. [Inaudible].
The difference is we're showing

44
00:04:29,208 --> 00:04:35,000
you how you can use it in a
seamless way so you don't have
to think about it and you avoid

45
00:04:35,000 --> 00:04:41,000
the number 1 problem, human
error. >> So Grugq has sort of
distilled OPSEC basic principles

46
00:04:43,625 --> 00:04:48,875
which are listed here. We're not
going to go over them but he's
done this many, many times and

47
00:04:48,875 --> 00:04:54,875
it's  okay. So Biggy Small
actually had a great song about
how drug dealers apply OPSEC to

48
00:05:02,333 --> 00:05:09,000
selling crack and it's been
analyzed by law professors and
everyone else as pretty good

49
00:05:09,000 --> 00:05:15,625
actionable advice for people
involved in any sort of activity
and it's not just crack dealers

50
00:05:15,625 --> 00:05:21,500
that need these. It's people
involved in complaining about
spying systems being installed

51
00:05:21,500 --> 00:05:27,500
in their loan port system in
Oakland or Human Rights abuses
or really anything. So it's a

52
00:05:32,542 --> 00:05:38,542
pretty universal kind of problem
a lot of people have. But on the
other hand what happens when it

53
00:05:41,292 --> 00:05:47,292
goes wrong? This is a photo from
Somalia where the U.S. Marines
were going in to intervene and

54
00:05:50,250 --> 00:05:55,333
try to distribute aid and food
and stuff and get rid of war
Lord' s. They did this opposed

55
00:05:55,333 --> 00:06:01,333
beach landing which they hadn't
done since Normandy in World War
II but it was a big opposed

56
00:06:04,042 --> 00:06:09,708
beach landing. And unfortunately
the media knew about it in
advance so they were doing this

57
00:06:09,708 --> 00:06:14,708
landing with a bunch of little
rubber boats and everything else
with a bunch of journalists

58
00:06:14,708 --> 00:06:18,542
sitting there with cameras
waiting for them on the beach
putting the things live on

59
00:06:18,542 --> 00:06:24,542
satellite TV that all the war
lards saw. So that could
definitely have gone a lot

60
00:06:28,625 --> 00:06:34,292
worse. And... Yeah. Then we've
got other examples of basic
OPSEC failures bringing down an

61
00:06:34,292 --> 00:06:40,125
organization that many people
think was sort of a libertarian
commercial market. >> When you

62
00:06:40,125 --> 00:06:47,833
look at many of the big busts,
issues that have happened
recently you will see the OPSEC

63
00:06:47,833 --> 00:06:55,458
failures behind them are basic.
Really, really basic. Take for
example Silk Road, the largest

64
00:06:55,458 --> 00:07:01,458
most successful online could not
band, 957,000 user accounts,
9.5 million coins and the guy

65
00:07:06,417 --> 00:07:11,417
behind it allegedly runs over
it. Russ Albrect (sp.) used his
personal Gmail account when

66
00:07:11,417 --> 00:07:18,167
setting up an account that he
then used as the administrator,
an account with Altoid. He then

67
00:07:18,167 --> 00:07:23,542
used that Altoid account to host
jobs, advertise for people to
come in and do coding for Silk

68
00:07:23,542 --> 00:07:31,083
Road related projects. He also
advertised Silk Road using this
same account. He later on kind

69
00:07:31,083 --> 00:07:37,083
of caught up to this and changed
his handle, changed his Gmail
handle to Frosty.com but once

70
00:07:39,750 --> 00:07:46,250
you've opened the door the
information is out there. The
internet doesn't forget. And if

71
00:07:46,250 --> 00:07:51,625
you start then building it all
becomes fruit of the poisonous
tree and everything you do from

72
00:07:51,625 --> 00:07:57,625
that point onwards is tainted.
Next one. Sabu - Even worse.
Sabu, a skilled hacker knew what

73
00:08:02,833 --> 00:08:08,833
he was doing. Except every now
and then he would forget and log
into IRC. Just once is enough in

74
00:08:11,208 --> 00:08:16,208
this day and age. It used to be
you could get away with one
mistake but now in this world

75
00:08:16,208 --> 00:08:22,292
where it's possible for people
to wholesale, capture and store
just in case there's something

76
00:08:22,292 --> 00:08:29,708
interesting that one mistake
will hang you. Perhaps even
worse than that he also used his

77
00:08:29,708 --> 00:08:36,000
home address to use stolen
credit cards to buy car parts
and had them shipped to his home

78
00:08:36,000 --> 00:08:43,417
address. These kinds of OPSEC
failures are really obvious. Not
surprisingly he was busted. Mark

79
00:08:43,417 --> 00:08:49,417
Karpeles, allegedly we don't
know exactly what's going on but
we do know around the time that

80
00:08:52,167 --> 00:08:58,167
they had completely run out of
money there were things he used
to prove that they still had

81
00:09:01,542 --> 00:09:07,542
liquidity. Those accounts are
still around and active. So
people started looking at them

82
00:09:09,542 --> 00:09:15,250
and guess what? You follow the
chain and looked to them, they
still had money in them. Way

83
00:09:15,250 --> 00:09:20,458
more than he allegedly had.
Unsurprisingly when people
started talking about it he

84
00:09:20,458 --> 00:09:26,458
miraculously found another pile
of bit code that he didn't know
about. >> So what are the common

85
00:09:26,458 --> 00:09:30,167
mistakes and vulnerabilities
here? These are just three
examples. There's a bunch more.

86
00:09:30,167 --> 00:09:35,000
Insider threat is the most
difficult to resolve and also
the easiest to find in almost

87
00:09:35,000 --> 00:09:41,000
any organization. People making
mistake, human error and data
leakage. People using the wrong

88
00:09:45,625 --> 00:09:50,333
channels for the wrong kind of
data. Then there's more serious
technical threats. You have

89
00:09:50,333 --> 00:09:56,083
people tearing down either
seizing your hardware or getting
semi rather access or going live

90
00:09:56,083 --> 00:10:02,750
or cold analysis on it. You have
people doing network or RF
monitoring of your systems. You

91
00:10:02,750 --> 00:10:08,583
have people tearing down remote
servers. Then you have acts of
tampering. These are pretty

92
00:10:08,583 --> 00:10:14,167
sheers threats and maybe it's
not worth trying to mitigate the
most difficult thing. Start with

93
00:10:14,167 --> 00:10:19,375
the easy things. Then of course
there's the financial audit
trails left by any system people

94
00:10:19,375 --> 00:10:25,375
interact with. >> One of the
most important things you can't
take care of everything. You

95
00:10:28,000 --> 00:10:33,833
can't think about everything.
But if you can automatically
catch the low hanging fruit and

96
00:10:33,833 --> 00:10:39,417
protect a certain segment of
your stuff that you don't have
to thinking about you can then

97
00:10:39,417 --> 00:10:46,500
focus the rest of your resources
on the more complex problems. >>
So network forensic pretty

98
00:10:46,500 --> 00:10:52,792
widely understood. Metadata of
course being the target of
almost everything. Metadata is

99
00:10:52,792 --> 00:10:56,958
so much easier to process from
the attacker side. They don't
need to bother translating it

100
00:10:56,958 --> 00:11:02,042
into the native language or
normal lies the data. It's there
and automated and trusted and

101
00:11:02,042 --> 00:11:08,458
reliable. So we've seen a lot of
recent attacks where metadata
really was the focus of the

102
00:11:08,458 --> 00:11:14,000
attack. >> And it is very much
the low hanging fruit. As we saw
from the talk that was given.

103
00:11:14,000 --> 00:11:20,458
Even data that you think is
encrypted such as some of your
personal information on the

104
00:11:20,458 --> 00:11:25,750
iPhone is not because when the
device is running certain
segments of device are

105
00:11:25,750 --> 00:11:31,750
unencrypted. That means it's
accessible and in fact the only
time the iPhone is secure is

106
00:11:35,167 --> 00:11:41,125
when it's powered off. >> So
there's all this data you would
attack from a desktop system,

107
00:11:41,125 --> 00:11:46,833
any sort of server you're
attacking. It's pretty clear.
And on cell phones which are

108
00:11:46,833 --> 00:11:51,958
basically computers you have
fairly similar kinds of targets.
They have some additional threat

109
00:11:51,958 --> 00:11:58,625
factors because they connect to
telephone networks and we can
tell you horror stories and the

110
00:11:58,625 --> 00:12:01,792
fact they're with you at all
times and taken out of secure
spaces and taken back into

111
00:12:01,792 --> 00:12:07,792
secure spaces and taken out over
and over again it's a more
interesting threat but it's not

112
00:12:10,250 --> 00:12:17,333
really terribly novel. >> This
is all low hanging fruit. This
is easy stuff that can be

113
00:12:17,333 --> 00:12:23,167
gotten. Almost every cell phone
with commonly available tools
without expending too much

114
00:12:23,167 --> 00:12:28,458
effort. >> All this stuff used
to be hard. People haven't taken
that into account that it's

115
00:12:28,458 --> 00:12:33,750
changed and become a lot easier
to go after. Used to be you had
one agency in the U.S. and one

116
00:12:33,750 --> 00:12:39,000
in the Soviet Union to worry
about. Now pretty much everybody
with RF equipment can be your

117
00:12:39,000 --> 00:12:43,875
threat. Anybody with a network
router in your path can be your
threat. Anybody running a

118
00:12:43,875 --> 00:12:47,917
service can be a threat. Anybody
that gets access to your
equipment. So it's a much, much

119
00:12:47,917 --> 00:12:51,583
wider population of people
tracking you. If you're not
attractive to the government as

120
00:12:51,583 --> 00:12:57,208
a target, perhaps you are to a
different government or to an
individual or organization. It's

121
00:12:57,208 --> 00:13:03,875
really the democrazation of
SIGNIT and attacks. >> One
interesting thing from the slide

122
00:13:03,875 --> 00:13:10,875
is everyone is talking about
Snowden and how everyone is
moving to more encrypted. It has

123
00:13:10,875 --> 00:13:18,542
had an effect on the traffic on
the internet. We've gone from in
the U.S. 2.2% was deemed to be

124
00:13:18,542 --> 00:13:24,542
SSL traffic. Today it's 3.8.
That's a really big increase.
Right? >> A lot of that traffic

125
00:13:28,958 --> 00:13:35,375
is unencrypted which leaves all
this data available. Even if the
data is encrypted you can get a

126
00:13:35,375 --> 00:13:39,583
lot of information from pure
traffic analysis. You can see
source and destination of

127
00:13:39,583 --> 00:13:45,333
target. You can see the type of
traffic in a flow and you can
actually in a lot of cases get

128
00:13:45,333 --> 00:13:51,375
content information from the
size of packets because it's not
data dependent and it's pretty

129
00:13:51,375 --> 00:13:57,125
terrifying. >> What you have to
realize is you don't have
control over this. Vast majority

130
00:13:57,125 --> 00:14:01,000
of this traffic is backend
traffic. This is your
application talking to

131
00:14:01,000 --> 00:14:07,042
application server. You don't
have a choice to say I'll only
use encryption to the dev that

132
00:14:07,042 --> 00:14:13,667
built your app. >> It's pretty
bad when you pop up a commercial
operating system on a new

133
00:14:13,667 --> 00:14:18,833
computer the first time and has
all this software you're not
familiar with and you don't

134
00:14:18,833 --> 00:14:25,000
really know what's phoning home
when. Cell phones are even
scarier because you actually do

135
00:14:25,000 --> 00:14:28,333
have pretty good information
that they're phoning home all
the time. They're always in

136
00:14:28,333 --> 00:14:34,167
contact with the tower and
they're relaying an awful lot of
information you don't really see

137
00:14:34,167 --> 00:14:40,167
as a user but it's there and is
a threat. And the scary thing is
while you might trust your

138
00:14:40,167 --> 00:14:45,542
operator and you might trust
your phone vendor over the air a
lot of this data can be gathered

139
00:14:45,542 --> 00:14:52,958
just from passive monitoring and
anybody else over the air can do
a lot of the stuff. Then we've

140
00:14:52,958 --> 00:14:58,083
got examples of when you travel
to places like China. It's a
great place to visit but they

141
00:14:58,083 --> 00:15:02,167
have a fairly restrictive
international firewall. The
great firewall and you don't

142
00:15:02,167 --> 00:15:07,042
really know where  it's not
really one firewall. It's
different in every province and

143
00:15:07,042 --> 00:15:10,542
different operators have
different policies but in
addition to being monitored

144
00:15:10,542 --> 00:15:15,958
there's just a basic problem of
stuff is blocked and it's really
annoying when you go and you

145
00:15:15,958 --> 00:15:20,208
want to connect to your
services. You want to basically
operate like you would at home.

146
00:15:20,208 --> 00:15:26,042
You would think just a VPN would
protect you and allow you to
bypass this stuff but it's like

147
00:15:26,042 --> 00:15:29,125
a whack a mole game they play
where they block things all the
time, it's a pain to deal with.

148
00:15:29,125 --> 00:15:35,125
>> One last thing on the Chinese
firewall they are getting smart
on how they look out for VPN's.

149
00:15:40,667 --> 00:15:47,083
Before it was identification VPN
end points, then they get
blocked. Now as we see with Tor

150
00:15:47,083 --> 00:15:54,042
since 2011 they're actively
scanning suspected nodes and
they're doing things like

151
00:15:54,042 --> 00:16:02,042
talking Tor to suspected nodes
and they can block it. Now that
makes it real difficult, now you

152
00:16:02,042 --> 00:16:07,042
have folks who are actively
looking for your all your tools
and blocking. So whatever you

153
00:16:07,042 --> 00:16:12,083
have to do has to be robust
enough to protect it. >> So
there are a bunch of tools

154
00:16:12,083 --> 00:16:18,333
people use to protect
themselves. Basic principles
that make certain tools easier

155
00:16:18,333 --> 00:16:24,833
to use and more privacy
protecting than others. Tools
generally are tools used by

156
00:16:24,833 --> 00:16:29,875
smaller communities rather than
a wider tool are going more
likely to work in a given

157
00:16:29,875 --> 00:16:36,042
scenario. Although there's an
engineering quality issue of a
tool not used by many users

158
00:16:36,042 --> 00:16:40,875
generally not of high quality.
Generally I like things that
aren't realtime, things

159
00:16:40,875 --> 00:16:45,917
asynchronous like email based
systems, rather than connection
oriented systems. However we

160
00:16:45,917 --> 00:16:52,792
really moved to the World Wide
Web and everybody was connection
based systems. And then

161
00:16:52,792 --> 00:16:57,000
encryption even if it doesn't
provide you with full protection
it provides with you a little

162
00:16:57,000 --> 00:17:03,542
bit of contact protection in a
lot of cases even if it's not
implemented fully. So if you

163
00:17:03,542 --> 00:17:08,208
have the choice always add
encryption. And there's a lot of
common tools that can be

164
00:17:08,208 --> 00:17:14,750
reconfigured. VPN's were never
intended as an anonymity
technology, it just happened to

165
00:17:14,750 --> 00:17:19,250
be useful in certain
circumstances. They do provide
some privacy and some firewall

166
00:17:19,250 --> 00:17:24,583
busting just because people
don't want to block all VPNs
because it will block a lot of

167
00:17:24,583 --> 00:17:29,625
business traffic. It's an
interesting thing. And then the
really interesting thing is that

168
00:17:29,625 --> 00:17:34,667
cheap hardware has gotten so
cheap that you can dedicate
hardware to a certain task. It's

169
00:17:34,667 --> 00:17:36,667
hard to build a secure multiuser
multiapplication operating
system. It's really much simpler

170
00:17:36,667 --> 00:17:42,667
challenge to build a single
purpose device and dedicate it
to a certain thing. >> Before we

171
00:17:48,333 --> 00:17:53,750
move off of VPN's one amusing
thing came up in our discovery
as we were playing around. We

172
00:17:53,750 --> 00:17:59,750
discovered that you can actually
weaponize it - great firewall
works and detects a node doing

173
00:18:03,250 --> 00:18:08,667
something it doesn't like it
floods it with reset packets.
And it's not really doing much

174
00:18:08,667 --> 00:18:14,667
to validate the source address
so...  [Laughing]. It's also
quite nice it floods it with

175
00:18:18,000 --> 00:18:25,583
reset packets for sometimes up
to 30 seconds. So it's an
amplifier. So oh I was just

176
00:18:25,583 --> 00:18:33,000
playing around like I mentioned
and I watched as the great
firewall flooded him for the

177
00:18:33,000 --> 00:18:39,000
next couple of hours. And he
couldn't do anything.
[Applause]. >> I think not

178
00:18:44,375 --> 00:18:50,375
demoing that live on the stage
is a good idea. >> Although,I
highly advocate doing this. But

179
00:18:56,583 --> 00:19:02,583
carefully. >> So yeah we've got
things  the other thing is Java
script. You have to have a

180
00:19:04,917 --> 00:19:10,917
separation between your data and
code, bad things happen with
that and when the addressing

181
00:19:15,583 --> 00:19:21,875
information is completed with
the messages so the OSI stack
isn't kept as separate as it

182
00:19:21,875 --> 00:19:27,875
should be or where code is mixed
with data this leads to bad
stuff. As we said cheap hardware

183
00:19:32,375 --> 00:19:38,000
is great. Prevents a lot of user
errors. The problem with a lot
of these secure systems is users

184
00:19:38,000 --> 00:19:43,167
use them incorrectly and if you
give somebody a single device
and say that's to talk to go one

185
00:19:43,167 --> 00:19:48,458
other person it's a much easier
user model then you need to
enter in code every time you use

186
00:19:48,458 --> 00:19:54,167
it and authenticate them and do
all sorts of other stuff. >> A
great real life example of this

187
00:19:54,167 --> 00:20:00,167
literally yesterday as part of
my goon job, I had to provide
protection for John Mc. We were

188
00:20:02,875 --> 00:20:10,167
walking around with John who is
a colorful character. With his
security detail who are even

189
00:20:10,167 --> 00:20:16,167
more colorful. Especially the
one who remembers faces. And he
is talking about security of his

190
00:20:19,042 --> 00:20:25,250
phone. He said he always uses
burner phones, I'm very careful.
Once I used a phone for a

191
00:20:25,250 --> 00:20:31,542
certain amount of time I attach
it to a (Unknown) and it goes
off all around the country and

192
00:20:31,542 --> 00:20:37,167
they can follow that and they
always track me down within a
couple days and they can follow

193
00:20:37,167 --> 00:20:43,917
me. I had a chance and I said by
any chance do you regularly call
the same kinds of numbers. He

194
00:20:43,917 --> 00:20:51,167
said yes. That would be why. It
doesn't matter if you're
changing your phone if you keep

195
00:20:51,167 --> 00:20:57,167
calling your mom. >> So one of
the issues is again if you go
buy this hardware and order,

196
00:21:06,375 --> 00:21:13,625
this whole problem if you order
hardware if you're receiving it
internationally, say you're the

197
00:21:13,625 --> 00:21:20,500
Grugg, it's going to be high
that, that hardware will not
come as the hardware vendor

198
00:21:20,500 --> 00:21:26,042
intended it and you probably
want to start buying stuff off
the shelf that's preconfigured

199
00:21:26,042 --> 00:21:31,208
or sort of a commodity thing.
It's unlikely they will back
door every hardware but the one

200
00:21:31,208 --> 00:21:39,167
piece of hardware that Grugg
orders that could very likely be
back doored and cash is great.

201
00:21:39,167 --> 00:21:45,167
[Indiscernible]. And the same
thing applied to accounts. So
VPN's are sort of near and dear

202
00:21:49,792 --> 00:21:53,833
to my heart. I ran a VPN
provider for a year. Then we
shut it down when the

203
00:21:53,833 --> 00:21:58,500
(indiscernible) happened.
They're definitely a useful
tool. There are some concerns.

204
00:21:58,500 --> 00:22:04,875
They're not really designed for
anonymity so they don't give it.
You have to use them correctly

205
00:22:04,875 --> 00:22:11,292
for stuff like that. Of course
there's the problem if you trust
the operator of service to one

206
00:22:11,292 --> 00:22:18,833
operating in a certain way. And
two it's really, really a bad
idea to expect a third party to

207
00:22:18,833 --> 00:22:26,208
break the law on your behalf for
like $3 a month. It's not going
to happen. So you will have data

208
00:22:26,208 --> 00:22:30,708
turned over. The third party
doctrine in the U.S. means a
third party has little tool

209
00:22:30,708 --> 00:22:36,708
protect their customer data if
it's sought by another customer.
Tor is a great tool. It can keep

210
00:22:43,542 --> 00:22:50,792
you anonymous. I believe Snowden
has it's endorsed, others have
endorsed it. It has a

211
00:22:50,792 --> 00:22:56,792
recognizable signature, high
profile. Lots of people looking
for it. And it's pretty

212
00:22:59,292 --> 00:23:05,750
complicated and not really so
simple for users to understand.
So you have to build systems on

213
00:23:05,750 --> 00:23:13,125
top of it to make it useable.
Tor browser, bundle, are great,
but you pretty much need

214
00:23:13,125 --> 00:23:21,042
additional tools to make it a
useful tool. However it's gotten
myself. If you try to use it in

215
00:23:21,042 --> 00:23:24,792
like China they're getting
better and better at if it's the
default Tor protocal blocking

216
00:23:24,792 --> 00:23:30,792
it. D packet inspection can
block it and of course if you
have exfiltrated data network

217
00:23:37,250 --> 00:23:43,000
that logs everything there might
be a human analyst and the
traffic will be obvious so

218
00:23:43,000 --> 00:23:49,000
whoever sent the tour
traffic... So people realize
this is a problem and there's

219
00:23:52,292 --> 00:23:58,292
transports which are great
tools. There's 7 alive. Think is
still accurate and there's a

220
00:24:00,917 --> 00:24:06,875
couple much more popular than
the others. >> The benefit of
the Tor transports is they're

221
00:24:06,875 --> 00:24:12,042
recognized there is no one tool
that will solve the problem.
There's no silver bullet.

222
00:24:12,042 --> 00:24:16,042
Whatever solution you use needs
to be variable because if you
keep doing the same thing

223
00:24:16,042 --> 00:24:22,042
eventually someone will catch on
to it. Plus you will get some
real genius and some of these

224
00:24:27,167 --> 00:24:29,708
travel transports are
phenomenal. The general concept
of this is transform traffic so

225
00:24:29,708 --> 00:24:35,708
it doesn't look like it and the
next level is take the traffic
and make it look like some other

226
00:24:45,500 --> 00:24:51,500
form of traffic. >> I will go
through this really quickly. A
lot of the censorship tools out

227
00:25:06,833 --> 00:25:13,500
there are quite crude. What they
do is use regular expressions to
look at the protocol and make

228
00:25:13,500 --> 00:25:19,500
judgments as to what they think
it is. If you use those same
expressions yourself you can

229
00:25:21,708 --> 00:25:28,250
play to them and make your
traffic look like whatever you
want. The screen here is

230
00:25:28,250 --> 00:25:35,875
transformed traffic that has
been put through a transform
that makes I look like an SSH.

231
00:25:35,875 --> 00:25:41,875
While it won't stand up to
immediate scrutiny. The point is
with this vast volume of traffic

232
00:25:48,083 --> 00:25:53,125
going through the only people
who will get that special extra
special scrutiny are people that

233
00:25:53,125 --> 00:25:58,708
popped the red flag. This is
about not popping up the red
flag. So if your traffic hides

234
00:25:58,708 --> 00:26:03,042
amongst the general Tor traffic,
there's going to be no reason
for them to dive deep enough for

235
00:26:03,042 --> 00:26:07,500
them to say this is suspicious.
>> And there's an additional
tool, where if you have a

236
00:26:07,500 --> 00:26:12,167
cooperating end point on the
other end, you can actually,
like Google App Engine, I've

237
00:26:12,167 --> 00:26:16,125
talked about this with Cloud
Flare. Various providers, you
can encode your traffic as

238
00:26:16,125 --> 00:26:22,917
normal HTTP traffic, put it
inside HTTPS, you can make it
look like it's going to a

239
00:26:22,917 --> 00:26:27,958
regular website and do cool
stuff there so... Then I guess
the ultimate thing is to make it

240
00:26:27,958 --> 00:26:34,458
look like natural language.
Banana phone does this.
Obviously it won't stand up to a

241
00:26:34,458 --> 00:26:38,917
human analyst looking at this
after the fact. If you aren't
routinely sending literature

242
00:26:38,917 --> 00:26:44,917
back and forth to someone but
you can imagine a scenario where
there's an automated or you

243
00:26:48,125 --> 00:26:56,125
built a system on top of that.
And there's of course the
classic network tools that are

244
00:26:56,125 --> 00:27:01,458
primarily used for getting
around like captive portal,
authentication systems where DSL

245
00:27:01,458 --> 00:27:08,583
huddle, at a hotel such as the
Rio and these are pretty cool.
>> The point of going through

246
00:27:08,583 --> 00:27:14,625
these is these are the tools we
looked at for building the
travel router. The travel router

247
00:27:14,625 --> 00:27:20,500
itself there really isn't that
much to it. We looked at all the
best tools out there and built

248
00:27:20,500 --> 00:27:25,583
them into this as a library so
you have an OS build that's
going to sit on a device. You

249
00:27:25,583 --> 00:27:31,583
can carry it anywhere. It's tiny
and all these things will be
available to you to choose. And

250
00:27:36,500 --> 00:27:43,667
we're hoping to build some
intelligence on to it as well so
it makes choices for you to say

251
00:27:43,667 --> 00:27:49,833
are you sure you wanted to
select that? That might not be
the best thing here. >> There's

252
00:27:49,833 --> 00:27:54,667
not silver bullet so it's a
bunch of separate tools
combined, So as we were thinking

253
00:27:54,667 --> 00:27:58,250
of this, we tried to figure out
because we had the practical
concern we travel a lot and go

254
00:27:58,250 --> 00:28:03,750
to places and we're not the most
interesting targets. I know a
lot of people that are greater

255
00:28:03,750 --> 00:28:09,417
targets and it's really
difficult I can build something
I can use myself mostly out of

256
00:28:09,417 --> 00:28:14,250
existing software. But building
something I can have somebody
else use that's easy for them to

257
00:28:14,250 --> 00:28:19,792
use, simple that I don't have to
then go with them all the time
is a much harder problem. We

258
00:28:19,792 --> 00:28:27,750
looked at a lot of VM systems.
VMs are great, but the problem
is, if something gets subverted

259
00:28:27,750 --> 00:28:33,125
the top level operating system
there's problems. Fingerprinting
stays the same then there's

260
00:28:33,125 --> 00:28:39,375
really no way to know that the
system is intac. I work with TPM
and it's still not quite there.

261
00:28:39,375 --> 00:28:45,375
And the other problem is this
stuff is expensive if you build
is out of pure software on

262
00:28:47,875 --> 00:28:53,250
dedicated high end laptops,
virtualization with bunch of 16
giga ram Mac Book Pros, you

263
00:28:53,250 --> 00:28:58,500
can't afford it. Most of the
people really that need this
stuff are also people that are

264
00:28:58,500 --> 00:29:04,458
not rich. They're also not
willing to throw away a
3,000dollar laptop. So it wasn't

265
00:29:04,458 --> 00:29:11,250
really the most ideal target. So
we looked at something that
would be providing much of the

266
00:29:11,250 --> 00:29:16,458
same protection but be a lot
cheaper a lot easier to support.
Ideally something people already

267
00:29:16,458 --> 00:29:20,833
have to use and we came up with
a secured travel router being
the sweet spot. They're pretty

268
00:29:20,833 --> 00:29:25,875
awesome. They're , I have a
whole box of them. They'are
about $20-100 each. They are

269
00:29:25,875 --> 00:29:30,125
about made by a bunch of
vendors, TP Link, Linksys,
DLink. All the low end network

270
00:29:30,125 --> 00:29:35,125
companies make this stuff.
They're available everywhere.
But a lot of people use them

271
00:29:35,125 --> 00:29:40,875
when you go to a hotel and you
have to pay per WiFi device this
lets you share a wired

272
00:29:40,875 --> 00:29:44,917
connection in a hotel with a lot
of a lot of connections. There's
a lot of really cool stuff you

273
00:29:44,917 --> 00:29:50,583
can do, but they weren't
explored as a security tool very
much. >> One of the problems we

274
00:29:50,583 --> 00:29:58,250
have is the hardware is
variable. So some of them have
flash memory, some have no flash

275
00:29:58,250 --> 00:30:04,250
memory. So the code, we, the
next version is going to have
another kitchen tool and what

276
00:30:10,000 --> 00:30:16,125
you'll do is put in the version
of travel router you're working
with, how much resources it has

277
00:30:16,125 --> 00:30:21,542
and it will can look it up in
the library and it will tell you
which modules you can then

278
00:30:21,542 --> 00:30:27,375
select. So you can have Tor plus
these transforms and if you
don't have secure voice you can

279
00:30:27,375 --> 00:30:33,375
have these other things added in
just enough to squeeze it in
without filling it up. >> We've

280
00:30:35,542 --> 00:30:41,542
used a lot on that. There's a
lot of open source firmware. I
think the 54D was the grand

281
00:30:48,792 --> 00:30:54,792
daddy where it came with crappy
firmware. Fortunately wireless
hardware has moved on to newer

282
00:30:58,167 --> 00:31:05,958
stuff. That whole wireless
hacking community has been going
on for a while. The EFF started

283
00:31:05,958 --> 00:31:11,958
working on a project to make
secure routers for home use.
Primarily focused on protecting

284
00:31:15,750 --> 00:31:19,417
them from outside threats as
opposed to using them for
security tools themselves and

285
00:31:19,417 --> 00:31:24,792
that's a huge improvement over
the status quo even a year ago.
The problem with these things is

286
00:31:24,792 --> 00:31:29,250
they're embedded systems like a
billion different ones of them.
They're too weak and it's a

287
00:31:29,250 --> 00:31:35,042
pain. It's not a huge pain like
dealing with true very minimal
resources embedded stuff but

288
00:31:35,042 --> 00:31:42,125
still not the easiest thing to
use. Other people worked on this
before. There's a safe plug

289
00:31:42,125 --> 00:31:48,125
which is cool. They have 4. They
don't do pluggable transports.
It's more for home use. Onion

290
00:31:50,833 --> 00:31:56,833
pie which another company has is
like a learn how to do something
project. It uses a device,

291
00:31:59,542 --> 00:32:03,667
raspberry pie and has external
hardware and I have been looking
at this stuff individually and

292
00:32:03,667 --> 00:32:07,833
he talked to Grugq and I
realized the guy that was
working on it I talked to so it

293
00:32:14,625 --> 00:32:20,625
was an obvious thing to do. >>
There is only one Grugq. >> It's
not that rare of a name. So we

294
00:32:23,417 --> 00:32:29,333
worked on this. The original
portal from a couple years ago
have pluggable transports but it

295
00:32:29,333 --> 00:32:36,875
was a pain to install. And it
did a lot of stuff but it wasn't
like an all in one thing. So out

296
00:32:36,875 --> 00:32:40,958
of this full range of hardware
we needed to come up with an
initial piece that we needed to

297
00:32:40,958 --> 00:32:46,958
support. It was awesome but the
problem is  it's an awesome
piece of hardware. We wanted to

298
00:32:57,042 --> 00:33:03,750
have a prebuilt image with
multiple ports and wanted to
power off the USB because you

299
00:33:03,750 --> 00:33:09,750
can use USB batteries and power
off your lap top and you can use
the Nexis7 or cell phone and you

300
00:33:13,250 --> 00:33:19,417
want your mobile phone to talk
to this device which has a WiFi
connection or a 3G connection

301
00:33:19,417 --> 00:33:23,542
plugged into it. So having
something that can be battery
powered is great but putting a

302
00:33:23,542 --> 00:33:27,542
battery in a small cheap device
is more of a consumer
engineering challenge. So we're

303
00:33:27,542 --> 00:33:33,833
not all hardware guys so we try
to make it as simple as
possible. And obviously needs to

304
00:33:33,833 --> 00:33:41,708
be easy to use. But there's some
problems. A lot of the hardware
is designed to be as cheap as

305
00:33:41,708 --> 00:33:47,208
possible when you make it in
like million unit quantities.
The price difference between

306
00:33:47,208 --> 00:33:54,833
like 64mg chip is snacks the
quantities so they put the
minimum on a ram, absolute

307
00:33:54,833 --> 00:34:01,625
tiniest flash they can do and we
wanted to have multiple radios
and Ethernet. It wasn't really a

308
00:34:01,625 --> 00:34:09,458
common use. The other problem is
we're in the middle and USB2 is
still the most wide spread power

309
00:34:09,458 --> 00:34:15,458
protocol we can use so we're
limited to 500 milliamps.
Quality is really, really bad.

310
00:34:18,625 --> 00:34:24,625
They're using antennas and then
we wanted to make it ourselves
but making quantity like a

311
00:34:27,458 --> 00:34:33,250
thousand  making quantities is
easy because you can make it
yourself. Making a hundred

312
00:34:33,250 --> 00:34:37,000
thousand or a million of
something is also fairly easy
because you can justify

313
00:34:37,000 --> 00:34:44,792
amortizing your debt costs but
making a thousand of them or
5,000 is still a pain point. And

314
00:34:44,792 --> 00:34:48,792
we looked at the cost of making
them and you can buy the travel
routers for a hundred bucks, $20

315
00:34:48,792 --> 00:34:55,208
or whatever. For us to make a
small quantity would be really
expensive and if we make the

316
00:34:55,208 --> 00:34:59,333
special secret spy router, one
we have to distribute it to the
people that want it and it's

317
00:34:59,333 --> 00:35:04,750
suspicious. So the guy carrying
around the super secret spy
device will get special

318
00:35:04,750 --> 00:35:11,125
attention and that's the last
thing you want in any of the
states. So we were kind of  >>

319
00:35:11,125 --> 00:35:15,250
Speaking of someone who gets
special attention every time he
goes to the airport I can tell

320
00:35:15,250 --> 00:35:21,500
you it's a real drag. >> So we
really had no idea I've been
working on this as a hardware

321
00:35:21,500 --> 00:35:26,917
thing and ended up selling. I
was looking at doing something
and I ended up selling my

322
00:35:26,917 --> 00:35:32,750
company instead. So it was like
a back burner thing then I was
like oh what are we going to do.

323
00:35:32,750 --> 00:35:36,417
Then we were saved by China.
There's apparently a company in
China that makes the perfect

324
00:35:36,417 --> 00:35:41,792
device. It appears to be a clone
of a much more popular device
but it happens to have a huge

325
00:35:41,792 --> 00:35:49,208
amount of ram and rom and
they're really cheap. It's this
box, the good life GLI net box.

326
00:35:49,208 --> 00:35:55,583
You can buy them for about $215
for 10 of them. You get them in
3 days. They're awesome. It does

327
00:35:55,583 --> 00:36:00,125
everything you want. It's pretty
much the perfect packing
platform for this kind of

328
00:36:00,125 --> 00:36:06,125
hardware. It's got two ethernet
ports on it, USB and micro spkr
power. It's a pretty good deal,

329
00:36:08,583 --> 00:36:15,458
and the RAM that we need. So we
have portal.com, we have tools
loading up there that will let

330
00:36:15,458 --> 00:36:22,542
you use the old portal chain and
additional pluggable transports
on it. Building the service is

331
00:36:22,542 --> 00:36:27,083
maybe a little ambitious at this
point but definitely the client
side of the hardware will work

332
00:36:27,083 --> 00:36:33,083
with existing services. >>
That's it. >> We would actually
like questions at this point. It

333
00:36:38,667 --> 00:36:44,667
would be great to talk to
people. >> Obviously we welcome
a ton of feedback because we

334
00:36:47,458 --> 00:36:54,542
want to shape this into a tool
that's genuinely useable. This
is no good if it's hard to work

335
00:36:54,542 --> 00:36:58,625
with, it doesn't quite meet all
the cases. We want this to be
the kind of thing you put in

336
00:36:58,625 --> 00:37:03,917
your pocket and a journalist can
take and go to a foreign country
and use it for secure coms

337
00:37:03,917 --> 00:37:08,083
without even thinking about it.
Thank you. >> Open source of
course not commercial.

338
00:37:25,958 --> 00:37:31,958
[Applause]. >> If anyone has
questions we'll be happy to
answer them.

