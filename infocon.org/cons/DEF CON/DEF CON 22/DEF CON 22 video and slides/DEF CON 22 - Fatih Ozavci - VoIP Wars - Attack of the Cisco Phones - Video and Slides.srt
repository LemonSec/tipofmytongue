1
00:00:00,000 --> 00:00:04,250
>>How is everybody how holding
up? Way better, okay.
[Applause]. Okay so this is

2
00:00:04,250 --> 00:00:07,542
Fatih and he's going to be
talking about VioP Wars, let's
give him a big DEF CON welcome.

3
00:00:07,542 --> 00:00:12,780
>> [Applause] >>

4
00:00:12,780 --> 00:00:21,500
>> Thank you. I appreciate it,
for lasting and saying hello. My
name is Fatih Ozavci and I will

5
00:00:21,500 --> 00:00:29,125
talk about VoIP wars today. What
we need we kind of previously on
Voice over IP Wars. Because I

6
00:00:29,125 --> 00:00:36,333
had another presentation last
year and we had Voice over IP
wars, return of the SIP and we

7
00:00:36,333 --> 00:00:43,333
talked about session initiation
protocol attacks. I provided
Viproy; it's a kind of next

8
00:00:43,333 --> 00:00:48,750
generation Voice over IP testing
tool. It is developed for only
pen testing, not for attackers.

9
00:00:48,750 --> 00:00:56,333
So basically you can omit
your tasks but attackers may
not. I will not talk about SIP

10
00:00:56,333 --> 00:01:05,413
too much today because I already
talk and if you are curious
about SIP security, you can get

11
00:01:05,417 --> 00:01:13,125
the talk but I will talk about
Voice over IP solutions to your
security and some Cisco and

12
00:01:13,125 --> 00:01:18,625
voice solutions products and
newer novelties. I will provide
a few new techniques; I will

13
00:01:18,625 --> 00:01:25,542
provide a few new attack
services. A few new novelties
almost for you novelties and

14
00:01:25,542 --> 00:01:33,500
three of them still unpatched.
And I will provide new tools and
new features also developed new

15
00:01:33,500 --> 00:01:43,160
interface for you as well. >>Ah,
yeah, we are starting now. >>I
am Fatih Ozavci, Security

16
00:01:43,167 --> 00:01:50,500
Consultant and I am working for
Sense of Security. I'm proud to
be part of this team and thanks

17
00:01:50,500 --> 00:01:57,333
for them. Also my interests are
voice over IP mobile
applications, network

18
00:01:57,333 --> 00:02:02,583
infrastructure, I am a
penetration tester so I can pen
test anything, that's why I am

19
00:02:02,583 --> 00:02:10,542
pen testing voice over IP. I
missed some skills in this
presentation so the key word is

20
00:02:10,542 --> 00:02:19,700
combining and merging the
skills. I....voice over IP
penetration testing tool

21
00:02:19,700 --> 00:02:29,292
kit. It is actually a Vulcan-ish word
that means call, so this tool
will have new feature and those

22
00:02:29,292 --> 00:02:35,292
features are skinny attacks,
skinny libraries, voice special
attacks, STP features,

23
00:02:35,292 --> 00:02:42,333
encryption features, and vander
extensions. My agenda is talking
about host voice over IP

24
00:02:42,333 --> 00:02:49,750
services and giving some basic
information. I am sure you don't
need it but let me try.

25
00:02:49,750 --> 00:02:55,625
Furthermore we will talk about
network attacks, Cisco unified
communication domain

26
00:02:55,625 --> 00:03:02,708
manager attacks, Cisco
inter...manager attacks. We will
have three different lines.

27
00:03:02,708 --> 00:03:08,292
First one is attacking SIP
services and we will talk about
Cisco specific SIP problems.

28
00:03:08,292 --> 00:03:14,375
Furthermore we will talk about
attacking lines and we will talk
about skinny attacks. This is a

29
00:03:14,375 --> 00:03:21,292
basic infrastructure for hosted
voice over IP services. Hosted
voice over IP services are multi

30
00:03:21,292 --> 00:03:26,500
tenant environments. So,
basically multi tenant
environments, pro-wide talent

31
00:03:26,500 --> 00:03:36,917
specific services. Sandbox items
and sandbox services are fully
dedicated to this tenant. But

32
00:03:36,917 --> 00:03:43,458
shell services, they are
available for all talents, not
specific ones. So basically they

33
00:03:43,458 --> 00:03:51,292
may have IP phones, soft phones,
teleconference systems, some
other third party connections

34
00:03:51,292 --> 00:03:58,667
but they will use sandbox items,
sand box objects for all voice
over IP communication. Which are

35
00:03:58,667 --> 00:04:05,417
STP, RTP and SIP servers,
unified communication servers
and some CDR servers and data

36
00:04:05,417 --> 00:04:10,958
base servers, of course.
Furthermore, they have shell
services. Shell services are IP

37
00:04:10,958 --> 00:04:15,917
phone services, client
management, tent environment
management or PBX connections

38
00:04:15,917 --> 00:04:24,117
such as land line connections
and GSN connections. Furthermore
they have shells to each as well,

39
00:04:24,125 --> 00:04:29,167
but it depends on the
infrastructure and
configuration. If we want to

40
00:04:29,167 --> 00:04:36,667
attack one single talent, we
should use sandbox items. If you
want to attack all the

41
00:04:36,667 --> 00:04:42,792
environments, if we want to
compromise all talents we should
attack directly to the shared

42
00:04:42,792 --> 00:04:49,250
services. I will show some jail
breaking attacks here. I will
talk about Cisco and VOSS

43
00:04:49,250 --> 00:04:58,458
solutions, VOSS solutions,
basically hosted a voice over IP
provider and Cisco is a partner so

44
00:04:58,458 --> 00:05:06,000
basically they will provide this
hosted voice over IP environment
for many customers. We will talk

45
00:05:09,060 --> 00:05:17,792
about Cisco and VOSS today but
these attacks can be cloned as
well. Also known as voice over

46
00:05:17,792 --> 00:05:27,032
...... as well, so you can use
this extension as well. We will
talk about these services.

47
00:05:27,042 --> 00:05:34,792
Services are basically separated
into two sections. First one is
web based services to support

48
00:05:34,792 --> 00:05:41,458
and manage all tenant platforms.
The second one is Voice over IP
services to provide essential

49
00:05:41,458 --> 00:05:47,875
services. And we will attack
almost all of them. Our goal is
discovering the network, finding

50
00:05:47,875 --> 00:05:55,542
the box, defining the errors,
learning the design and
attacking those objects. They

51
00:05:55,542 --> 00:06:02,167
think hosted voice over IP
environments are secure, it is
physically but they are not. We

52
00:06:02,167 --> 00:06:07,708
have physical pen testing and
they showed me, even military
grade operations, they are not

53
00:06:07,708 --> 00:06:16,167
secure. Their physical security
is kind of insufficient for
those services. We can use a

54
00:06:16,167 --> 00:06:25,625
tenant connection, local form or
comprehensiary forms; we may
have PC port connections behind

55
00:06:25,625 --> 00:06:32,708
the forms. Furthermore we may
impersonate a technical guy or
another, a cable guy and we can

56
00:06:32,708 --> 00:06:42,080
get an access. Also we can
manipulate a physical access and we
can get a connection, a kind of

57
00:06:42,080 --> 00:06:48,080
access for voice re-land but we
should know voice re-land and
that is why we have CDP attacks,

58
00:06:48,083 --> 00:06:54,792
DDP attacks and Arp spoofing
attacks as well. I do hope to
raise a simple model for Viproy;

59
00:06:54,792 --> 00:07:00,292
it is called a discovery
protocol model. It is available
on Viproy package and you can

60
00:07:00,292 --> 00:07:09,792
use it on Metasploit, actually I
used VoIP Hopper .... too many times,
too many years. But I needed a

61
00:07:09,792 --> 00:07:14,708
cross path, a kind of
customization which is why I
loved this model so, if you have

62
00:07:14,708 --> 00:07:23,000
a Linux you should use VoIP hopper, if
you do not have a customized
engagement, you should use this

63
00:07:23,000 --> 00:07:31,840
model to customize it. Also you
can use this model to far.....
And after all do you have

64
00:07:31,840 --> 00:07:37,833
voice vLAN ID. And we will have a
kind of connection but we should
keep it persistent, we should

65
00:07:37,833 --> 00:07:47,413
add a kind of modified form or
wiretapping object. This is why
I think about Tapberry Pi. Tapberry Pi

66
00:07:47,417 --> 00:08:00,917
is basic Raspberry PI in the IP form.
This is Cisco IP form, 7940. I
disassembled it and I saw that

67
00:08:00,920 --> 00:08:09,220
there's another board on it and
this board is a basic board and
it provides broken actions.

68
00:08:09,220 --> 00:08:14,820
Those network connections are PC
port connections, talent connection
and a kind of auxillary

69
00:08:14,820 --> 00:08:21,240
connection as well. Furthermore,
they have power source, when I
extract this board I saw that it

70
00:08:21,250 --> 00:08:26,500
is connected using a wide
circuit. You can use this
circuit to connect or

71
00:08:26,500 --> 00:08:34,958
disconnect. When I extracted I
saw that this internet
connection, RJ45 connection has

72
00:08:34,958 --> 00:08:47,498
pins behind the card. So
basically we can use these pins.
I used a basic cable kit 5 and I

73
00:08:47,500 --> 00:08:55,333
created a basic clone of the
transpart. If this phone will be
attached to the voice land we

74
00:08:55,340 --> 00:09:06,920
can create and connect Raspberry Pi
to the same network. And yeah,
there are two spaces inside the

75
00:09:06,920 --> 00:09:12,917
phone. First one is on this
board and the second one is
speaker space. I put my... to

76
00:09:12,917 --> 00:09:18,625
the speaker space and you can
use the other one as well. You
may need the other one for

77
00:09:18,625 --> 00:09:24,875
battery because power on the
internet may have to choose in
the same environment because it

78
00:09:24,875 --> 00:09:30,875
needs, actually the IP phone
will use electricity.
Furthermore ...needs electricity

79
00:09:33,125 --> 00:09:40,292
as well. But power over internet
may support only two power
supplies at the same time. And

80
00:09:40,292 --> 00:09:45,792
as you know IP phone needs more
electricity. This way you need
another power source. You can

81
00:09:45,792 --> 00:09:51,542
use a cell battery or you can
try your chance with a current IP
phone. For example, if you

82
00:09:51,542 --> 00:09:58,250
extract speaker you will see a
battery connection right there.
And yes, it has electricity so

83
00:09:58,250 --> 00:10:03,833
you can use this electricity to
your Raspberry Pi. It is not completed
yet and I am still working on it

84
00:10:03,833 --> 00:10:11,375
and I will provide a blog on it.
Actually we will not talk about
hardware attacks we will talk

85
00:10:11,375 --> 00:10:17,708
about the modern protocol
attacks and service level
attacks. All of this environment

86
00:10:17,708 --> 00:10:25,000
must be managed. This is why we
have Cisco Host Calibration
suite. This Cisco Host

87
00:10:25,000 --> 00:10:30,000
Calibration suite contains Cisco
unified communication domain
manager. Also know as Wahl

88
00:10:30,000 --> 00:10:39,040
Solutions. It has IP phone
services, self care, talent
user's management and their

89
00:10:39,042 --> 00:10:44,625
services, furthermore talent
services management. The
difference is Tenant uses will

90
00:10:44,625 --> 00:10:50,292
use self care. Tenant
administrators will use Tenant
Services administration.

91
00:10:50,292 --> 00:10:54,917
Furthermore, unified
communication manager will be
used for all voice over IP based

92
00:10:54,917 --> 00:11:05,077
services. We have reported
almost 40 vulnerability to Cisco.
Cisco reported that some of them

93
00:11:05,083 --> 00:11:12,542
they are not vulnerability, some of
them, yes they are vulnerability
but their impact is very limited.

94
00:11:12,542 --> 00:11:22,840
And yes, some of them are a
vulnerability. And Cisco published a
few advisories. I will share

95
00:11:22,840 --> 00:11:28,833
those references at the end of
the presentation. But, here is
the thing, we have another

96
00:11:28,833 --> 00:11:34,833
security advisory. This security
advisory contains two different
unpatched vulnerabilities and one real

97
00:11:37,250 --> 00:11:43,875
vulnerability. Two unpatched ones
are vulnerabilities. We found them on
VOSS solutions IP phone examiner

98
00:11:43,875 --> 00:11:49,833
services. It is still unpatched
and will be patched in
September, maybe the second

99
00:11:49,840 --> 00:12:00,240
week. The other one is embedded,
maybe you already know that, but
the product is pretty expensive

100
00:12:00,240 --> 00:12:07,860
so you cannot get this product
easily. So, I have no priority
right now. If you have this

101
00:12:07,860 --> 00:12:15,500
product you can extract SSH key
easily using this exit file.
Cisco unified communication

102
00:12:15,500 --> 00:12:23,200
domain measure also for
embedded. VOSS ....is a basic
client platform and this

103
00:12:23,200 --> 00:12:29,440
platform contains some scripting
novelties and yeah they are
stored scripting novelties and

104
00:12:29,440 --> 00:12:36,792
you can affect other users of
the same tenant. But domain
manager actually management

105
00:12:36,792 --> 00:12:43,833
services for tenant it is a good
attack surface for us. We can
get an administrative user

106
00:12:43,833 --> 00:12:50,250
easily by using features.
Furthermore if we have a user we
can elevate our privileges as

107
00:12:50,250 --> 00:12:57,125
well. We have multiple privilege
escalations. Also we have some
stored scripting novelties. We

108
00:12:57,125 --> 00:13:04,000
have potential injections and software
escalations as well and we will
talk about them. A basic user is

109
00:13:04,000 --> 00:13:13,417
here, if you use device user you
will have a response and you can
create this easily. But if you

110
00:13:13,417 --> 00:13:22,737
use upload features and if you
send a bogus file which contains
injections or a few bogus

111
00:13:22,750 --> 00:13:28,875
contents as well you will have
this error message. This error
message contains some additional

112
00:13:28,875 --> 00:13:34,875
errors, for example, sop errors, some
SQL errors. Cisco says that it fixed
this bug but it is not a vulnerability

113
00:13:37,625 --> 00:13:46,125
because there is no SQL injection
here. I could not test it
because all of them was a part

114
00:13:46,125 --> 00:13:53,125
of a project in an engagement.
During the engagement I had only
5 days to test all this

115
00:13:53,125 --> 00:13:59,667
environment. HCS, infrastructure
also unified communication
system as well. This is why I

116
00:13:59,667 --> 00:14:04,750
could not try SQL injections. If
you believe Cisco it is fine but
if you do not believe you can

117
00:14:04,750 --> 00:14:13,833
try using insecure file out put
features. It leaks; it has CGI
tools so you can create the

118
00:14:13,833 --> 00:14:19,417
qualified inclusion attacks and
execution as well. But they are
potential attacks, you can

119
00:14:19,417 --> 00:14:28,833
attack. Escalation is easy, you
can modify a user if you have
basic access, you will be a kind

120
00:14:28,833 --> 00:14:35,542
of location administrator of the
talent. You can modify the
environment and modify the user

121
00:14:35,542 --> 00:14:43,167
and add a different role on it
and add role for example talent
administration, division

122
00:14:43,167 --> 00:14:49,792
administrator or infrastructure
administrator. Furthermore if
you want to add a user you can

123
00:14:49,792 --> 00:14:57,750
use user type as well. If you
use user type, you can use admin
user and you can add a new admin

124
00:14:57,750 --> 00:15:04,167
from scratch. Furthermore we can
manipulate number translation to
redirect all calls or all

125
00:15:04,167 --> 00:15:11,000
extensions to us. So, basically,
we have many attacks. However we
have another measure service

126
00:15:11,000 --> 00:15:18,917
here and the services are
perform management feature of
VOSS solutions. VOSS solutions

127
00:15:18,917 --> 00:15:27,792
provide IP phone examine
services. This service is a
shell service. It is a family, a

128
00:15:27,792 --> 00:15:36,692
basic tool set, but it is a
basic shell object for all
tenants. All phones, IP phones

129
00:15:36,708 --> 00:15:42,792
or cell phones or teleconference
room phones, or devises, it
doesn't matter. They will use

130
00:15:42,792 --> 00:15:48,417
this service. So basically we
can attack the service to get
additional access or compromise

131
00:15:48,417 --> 00:15:56,000
all tenants. We can use
additional attacks on it. For
example, call forwarding, speed

132
00:15:56,000 --> 00:16:04,417
dialing manipulation, voice mail
access, pin changing, it is
still unpatched. Second week of

133
00:16:04,417 --> 00:16:13,237
September it will be in use.
This URL is the basic attack
service; SRV is the service type

134
00:16:13,250 --> 00:16:20,458
and service name. Device ID,
make and address and you can
easily get it. An action may be

135
00:16:20,458 --> 00:16:31,498
call forwarding or updating
basic speed dial. It is very
secure, binary, unrecordable

136
00:16:31,500 --> 00:16:40,000
protocol. So it does not need
any authentication authorization
feature. Who can't record a XML

137
00:16:40,000 --> 00:16:49,740
file, right? Basically this
service works on an XML content.
You can not record an XML file,

138
00:16:49,750 --> 00:16:56,625
right. This is why I developed
two different models to exploit
this vulnerability. I will not share

139
00:16:56,625 --> 00:17:05,333
this exploit on my software
package but I will share here.
Furthermore I will show the

140
00:17:05,333 --> 00:17:11,583
service in a different way.
First problem is this product is
expensive. I have mentioned yet?

141
00:17:11,583 --> 00:17:17,792
Okay. But the thing is I cannot
provide a live demo on this
product because I have no Cisco

142
00:17:17,792 --> 00:17:24,958
UCDM here, that's why I
developed a fake service for it.
So basically I will use my

143
00:17:24,958 --> 00:17:34,958
exploits to this fake service. I
hope it will work, I hope you do
as well. But, we will see. Okay,

144
00:17:34,960 --> 00:17:43,100
we have a cheat sheet here and
basic Wahl's demos. This service
provides MAC based

145
00:17:43,100 --> 00:17:49,980
identamanagement, after that it
all services such as call
forwarding or speed dial. At

146
00:17:49,980 --> 00:18:00,200
this demo I will use the call
forwarding feature. I have this
service here, probably one of

147
00:18:00,200 --> 00:18:10,700
them. Ahh, here. This is our
fact service. We can copy on
past our code. Basically we us a

148
00:18:10,700 --> 00:18:19,860
model call forwarding, 4.1 which
is me my port and action and it
seems we have a target. If the

149
00:18:24,583 --> 00:18:31,583
MAC address is valid we will
have a display name of the faint
number. Faint number is eunuch

150
00:18:31,583 --> 00:18:36,250
in this environment. But this
faint number is basically
exemption. If you want to

151
00:18:36,250 --> 00:18:42,250
redirect it you should update
this faint number. So basically,
we will update it. For example

152
00:18:45,333 --> 00:18:52,973
set action, forward two. See, it
seems okay. Our display name is
007. Furthermore, we are talking

153
00:19:02,250 --> 00:19:07,083
about Cisco environments. Right?
We are not talking about IP
phones. We are talking about

154
00:19:07,083 --> 00:19:13,750
everything which means we have
jeopardy interface as well.
Jeopardy interface provides

155
00:19:13,750 --> 00:19:21,292
additional connectivity for
third party items as well such
as Cisco Jabber or regular Cisco

156
00:19:21,292 --> 00:19:29,652
clients. Furthermore, SDK for
all other third party clients
such as Microsoft Link. At this

157
00:19:29,667 --> 00:19:36,792
point we can use forwarding just
like this as well. For example
set forward to James Bond. And

158
00:19:36,792 --> 00:19:47,952
we can use name, as you see name
is updated. I am showing this
because Microsoft Link and other

159
00:19:47,958 --> 00:19:55,208
products may need email address
to handle a message or call. So
this is basic call forwarding we

160
00:19:55,208 --> 00:20:04,000
can update all tenants and we
can redirect all phones to us
and we can redirect just like a

161
00:20:04,000 --> 00:20:12,740
basic internet exchange server.
We have additional speed dials.
Those phones need a speed dial

162
00:20:12,750 --> 00:20:19,792
service because they have no
speed dial on SIP protocol. That
is why they need a kind of

163
00:20:19,792 --> 00:20:27,992
protocol to provide this speed
dial access. That's why we have
another model here. Viproy was

164
00:20:28,000 --> 00:20:37,833
speed dial. Okay? Here we go. We
have three different speed dials
for this MAC address. MAC

165
00:20:37,833 --> 00:20:45,042
address can be obtained using
scan attacks as well. So we can
get a kind of communication map

166
00:20:45,042 --> 00:20:53,202
of the tenant or all tenants. So
we will have a communication
path. We can add or remove a

167
00:20:53,208 --> 00:21:03,488
content for example, add Viproy
to third position. Set action
list and run. See, Viproy is in

168
00:21:06,292 --> 00:21:12,332
the third position. We can try
to add Viproy to a specific
position, for example one. That

169
00:21:17,208 --> 00:21:23,208
position is not available
because it is in use. But, we
can modify this as well. So, get

170
00:21:30,250 --> 00:21:40,500
the list again, Viproy is in the
position now. This service is a
kind of dangerous service but

171
00:21:40,500 --> 00:21:45,333
the thing is it has been used
for all tenants, we can jail
break all platforms here. We can

172
00:21:45,333 --> 00:21:53,233
redirect everybody, every user
of all talents. Okay, if we go
back. We have additional

173
00:21:56,583 --> 00:22:04,042
features. We talked about web
based attacks. But the thing is,
sorry; I should show the fact

174
00:22:04,042 --> 00:22:11,750
services code and my exploit code
here. My expert is, actually it
is pretty complicated. Actually

175
00:22:11,750 --> 00:22:17,292
it has bypass and depth bypass
issues as well. So, basically
you should very careful. Agency

176
00:22:17,292 --> 00:22:25,412
this is the exploit part. This
is my shell code and as you see,
this is ASR bypass feature,

177
00:22:25,417 --> 00:22:31,917
provide their name, field number
and forward to. If you do not
use forward to, you will not

178
00:22:31,917 --> 00:22:37,667
bypass sandbox and AS alarm and
dep as well. So basically
exploit is very complicated. I

179
00:22:37,667 --> 00:22:44,417
will not share this exploit
because it can be pretty
dangerous. However, I can share

180
00:22:44,417 --> 00:22:53,417
my fake service so you can find
how it works. Right? It is
already available on Viproy so

181
00:22:53,417 --> 00:23:02,037
basically you can work on this
fake web service to understand
how it works. Okay. We should

182
00:23:02,042 --> 00:23:09,167
continue. Sufficiently attacks,
we have additional voice over
web attacks here. Those are

183
00:23:09,167 --> 00:23:15,417
unified communication attacks.
We have TDM, PSDM and they are
old they think SIP is next

184
00:23:15,417 --> 00:23:21,917
generation and they think SIP is
ready to use for all unified
communication systems. However,

185
00:23:21,917 --> 00:23:31,792
they do not agree about features
of SIP that's why they modified
SIP. Not even Cisco. Cisco,

186
00:23:31,792 --> 00:23:41,152
Microsoft and all third party
vendors, because SIP has message
metals. It has invite as well.

187
00:23:41,167 --> 00:23:50,583
But, the thing is they use
secure sharing, adding file
transfer or a kind of voice mail

188
00:23:50,583 --> 00:23:56,583
using sample, Wildfire, etc.
Those are very complicated
things. You cannot use SIP just

189
00:23:56,583 --> 00:24:02,583
like that. That's why they
modified it. But they modified
SIP, regular SIP protocol. They

190
00:24:02,583 --> 00:24:12,917
have additional exemptions. We
will talk about a few ones. The
thing is Cisco has

191
00:24:12,917 --> 00:24:19,292
authentication problems about
SIP. Microsoft has a few
additional features on SIP.

192
00:24:19,292 --> 00:24:25,125
Yeah, we will talk about Cisco
now but we can talk about
Microsoft later. It is basically

193
00:24:25,125 --> 00:24:30,917
a Linux operating system so if
you will first remove the Cisco
unified communication and if you

194
00:24:30,917 --> 00:24:36,792
have a novelty you can execute
the code on a regular Linux
server. Keep the same

195
00:24:36,792 --> 00:24:42,750
formations. We should discover
web services using our regular
features such as Viproy

196
00:24:42,750 --> 00:24:50,240
discovery features, registry,
other tools. Furthermore, .....
are in the group tool, it is in

197
00:24:50,240 --> 00:24:56,958
use and developed by Zander
Gucci, thanks to him I have used
this tool for many years. After

198
00:24:56,958 --> 00:25:01,667
that I developed Viproy because
I needed additional
authentication features because

199
00:25:01,667 --> 00:25:08,500
attacking SIP services it
needs some kind of
authentication. After

200
00:25:08,500 --> 00:25:14,500
authentication you may have
additional features. For example
registration, yeah you can get

201
00:25:18,583 --> 00:25:24,208
that kind of access on this SIP
server. And we talked about SIP
service attacks last year, and I

202
00:25:24,208 --> 00:25:33,880
actually demonstrated a few
advance attacks. But the thing
is Cisco SIP authentication is

203
00:25:33,880 --> 00:25:42,740
somehow different. It needs
address, device type and
exzantion. Three of them must be

204
00:25:42,750 --> 00:25:51,083
valid to authenticate you as a
form. If you want to use user
name and password it is fine, it

205
00:25:51,083 --> 00:25:57,083
is supported for third party IP
phones as well. Furthermore,
Cisco suggests that security

206
00:25:57,083 --> 00:26:03,292
deployment is essential for
voice over IP environment. So,
they can use digital certificate

207
00:26:03,292 --> 00:26:11,232
base for authentication. Cisco
unified communication provides
additional user name and you can

208
00:26:11,240 --> 00:26:19,160
use these errors. Register and
subscribe it is very easy task.
You can use Viproy; you check my

209
00:26:19,167 --> 00:26:27,833
presentation last year. You can
use or change your phone number
and address or regular text and

210
00:26:27,833 --> 00:26:34,250
we can use them. Furthermore I
have demonstrated additional
advanced attacks such as SIPro

211
00:26:34,250 --> 00:26:41,730
advanced attack. We can use
remote SIPro, other services to
attack. It was what we

212
00:26:43,375 --> 00:26:49,417
demonstrated last year.
Furthermore, we can use it to
attack other servers. For

213
00:26:49,417 --> 00:26:58,292
example, they provide four or
three billion messages which is
too much. If you send a bogus

214
00:26:58,292 --> 00:27:09,832
message you have errors. If you
use IP spoofing you can use
basic DoS attacks. Also we

215
00:27:11,800 --> 00:27:18,540
can use hacking SIP trust
relationships. We can use IP
spoofing, we can get a

216
00:27:18,542 --> 00:27:25,500
communication. After that, we
can add IP addresses in the
field. Find which IP address and

217
00:27:25,500 --> 00:27:33,500
port is trusted. I demonstrated
this last year this, and we
initiated a base call. Also, we

218
00:27:33,500 --> 00:27:40,000
can attack mobile applications
using this as well. But the
thing is.... is somehow

219
00:27:40,000 --> 00:27:44,458
different in the same
environment. First of all Cisco
UCM accepts addresses as

220
00:27:44,458 --> 00:27:51,958
identity and it doesn't need
further authentication for many
SIP based IP phones, and our own

221
00:27:51,958 --> 00:28:01,738
skinny environment. Also, we can
find raw waste in the same
environment, it will provide for

222
00:28:01,750 --> 00:28:09,042
users, antennas and all the
other environments. However,
they need citrons connections,

223
00:28:09,042 --> 00:28:16,083
that's why they use additional,
some connections are looters.
That's why we can use them to

224
00:28:16,083 --> 00:28:22,583
initiate calls because they have
no identification by default. We
can use custom headers, we can

225
00:28:22,583 --> 00:28:29,833
add specific headers. Here is
the thing, remote party ID is
where generic header and Cisco

226
00:28:29,833 --> 00:28:41,193
accepts remote party ID because
it is a kind of compatibility
issue. So, if add a basic remote

227
00:28:41,208 --> 00:28:47,083
party ID in our current
connection, authenticated
connection, Cisco will accept

228
00:28:47,083 --> 00:28:57,083
remote party ID as an identity.
So we call everywhere with a
fake identity. Caller ID

229
00:28:57,083 --> 00:29:03,125
spoofing, yes, it bypasses the
billing features furthermore we
can access voice mail and third

230
00:29:03,125 --> 00:29:11,292
party operators. Here is the
thing; we have public real world
attacks such as caller ID fraud

231
00:29:11,292 --> 00:29:19,083
for all operators. If we had a
vulnerable operator we can initiate
our attack, caller ID spoofing

232
00:29:19,083 --> 00:29:27,623
attack. Initiate a call through
the land line connections to
call the third party GSM

233
00:29:27,625 --> 00:29:36,500
operator to access a voice mail
account without a pin. It's all
caller identity, it's an attack

234
00:29:36,500 --> 00:29:43,250
and it is in use. Also we can
send call back messages, we can
send fake messages, we can use

235
00:29:43,250 --> 00:29:51,667
spam, we can use this attack
against other operators and we
can use for other terms. And

236
00:29:51,667 --> 00:29:57,583
this is a basic demonstration of
an attack. I already
demonstrated other SIP attacks,

237
00:29:57,583 --> 00:30:03,583
you find my last presentation,
voice over IP, it is on you tube
as well. I will use a basic SIP

238
00:30:09,792 --> 00:30:19,872
connection here. We will use our
invite model and we have two
different clients here. First

239
00:30:22,125 --> 00:30:29,625
one and second one and they are
connected through a Cisco
server. It is a trial edition so

240
00:30:29,625 --> 00:30:39,458
basically we will have a trial
access and yes it works. I have
registered forms here and I will

241
00:30:39,458 --> 00:30:47,875
use invite model with proto TCP.
We have TCP on tailor support
now so we can use it.

242
00:30:47,875 --> 00:30:54,625
Furthermore we will use specific
phone number and log in
features, furthermore we have

243
00:30:54,625 --> 00:31:02,000
different log in metals, I
choose register. Furthermore, we
have vander extensions and it

244
00:31:02,000 --> 00:31:09,542
must be used. Vander extensions
first one is Cisco device. If
you want to register yourself as

245
00:31:09,542 --> 00:31:17,333
an IP phone such as 7940 or 41
you should use Cisco device with
application. If you want to use

246
00:31:17,333 --> 00:31:23,917
third party device such as third
party clients you should use
Cisco unification header, after

247
00:31:23,917 --> 00:31:31,957
that my user name and password.
This is not a vulnerability, see we
have a call. And yeah, the thing

248
00:31:31,958 --> 00:31:43,458
is it is one of thirteen. Let me
explain why. If I had set the
remote party header it will have

249
00:31:43,458 --> 00:31:56,358
a call from 2001 which is my
original one, right, see. But
the thing is we can set custom IDs.

250
00:32:01,160 --> 00:32:07,160
For example from James Bond
or we can use a current client
for example, 1013. Also we have

251
00:32:15,840 --> 00:32:21,840
additional features here, for
example sending a message. We
have no public tool to send a

252
00:32:25,320 --> 00:32:33,500
message. We should manipulate or
we should prepare our tools such
as SIP and after that we can

253
00:32:33,500 --> 00:32:37,875
send a message, right? But we
can manipulate message features
such as message tie or message

254
00:32:37,875 --> 00:32:44,208
content that is used for
additional sharing features of
third party clients such as

255
00:32:44,208 --> 00:32:52,708
Cisco jabber. So basically we
can change this content to
attack different clients using

256
00:32:52,708 --> 00:32:59,750
different scale. For example
message tie, fuzz 2000, it is
possible as well. But I will use

257
00:32:59,750 --> 00:33:11,000
this sample for a basic search
engine feature. Operators hack
the operator because bypassed

258
00:33:11,000 --> 00:33:18,542
authentication. Furthermore, it
is the basic HTML feature, HTML
message. So basically we can

259
00:33:18,542 --> 00:33:26,542
send this message to the real
phone as well. If it receives
this message, if it is a smart

260
00:33:26,542 --> 00:33:32,542
phone as well, this can be good.
Furthermore, we can change
message content, for example

261
00:33:38,083 --> 00:33:47,923
message tie, it is still text
and plain but message content
could be fast 500, fast 5000. It

262
00:33:55,833 --> 00:34:03,333
depends on you. Some of the
clients they are really
vulnerable such as Cisco Jabber

263
00:34:03,333 --> 00:34:09,333
or for example XLight or you
know Microsoft Link. Yeah, we
will continue with other

264
00:34:15,750 --> 00:34:23,500
attacks, because we can attack
clients. I mentioned client
attacks last year so I will pass

265
00:34:23,500 --> 00:34:29,833
this slide I already provided
this slide on my presentation so
you can check them as well. And

266
00:34:29,833 --> 00:34:34,708
Cisco has different clients and
we can attack all of them we can
use attacks as well. And I have

267
00:34:34,708 --> 00:34:40,917
a tool for it. Reproxy is
another tool I have developed
for TCP, TNS interception.

268
00:34:40,917 --> 00:34:48,833
Furthermore, it supports custom
digital search features. It has
low feature it has multiple

269
00:34:48,833 --> 00:34:54,833
duplication as well. It is a
fork of proxy. So basically we
have used this tool to

270
00:34:57,667 --> 00:35:05,083
manipulate other clients. It has
multithread issues; sorry about
that but I will fix it in a few

271
00:35:05,083 --> 00:35:12,125
months. You can fix it as well,
it is available on Viproy. I
would appreciate a few patches.

272
00:35:12,125 --> 00:35:20,460
This is a basic SIP fishing demo
and I already showed it. Basic
client attack demos, we can use

273
00:35:20,460 --> 00:35:30,360
them as well. I have crashed an
IOS application last year using
only spoofing, so we can attack.

274
00:35:30,360 --> 00:35:37,610
But, this is not the case. We
should talk about skinny as
well. Skinny is a generic

275
00:35:37,620 --> 00:35:43,620
protocol. Cisco uses it for all
local environments. Even for
hosted voice over IP services.

276
00:35:43,625 --> 00:35:51,083
It is a kind of compatibility
requirement because they will
use SIP by default. They will

277
00:35:51,083 --> 00:36:01,917
use skinny for regular SIP
phones, regular Cisco IP phones.
It is a kind of protocol so

278
00:36:01,917 --> 00:36:09,542
basically you should use many
packages to register yourself.
We can use basic attacks, when I

279
00:36:09,542 --> 00:36:17,000
search, VoIP or SIP attacks or
skinny attacks; I sell always
one single name, Jace Nostrom.

280
00:36:17,000 --> 00:36:25,040
He has a passion about VoIP but
not only VoIP as well he helped
me too much for this

281
00:36:25,042 --> 00:36:32,580
presentation, thank you for him
again. Of course Viper and Spara
they have published some tools

282
00:36:32,580 --> 00:36:42,160
and vulnerabilities on skinny. I am
not sure about Viper 11 as
skinny support because I saw a

283
00:36:42,160 --> 00:36:48,160
documentation but I am not sure
because there is no information
on their page and yeah. Also

284
00:36:48,167 --> 00:36:54,917
Felix found a few novelties on
skinny protocol. But we have no
public skinny analyzer or skinny

285
00:36:54,917 --> 00:37:03,333
tool. That is why I decoded this
protocol using Wireshark, just
like it. But the thing is it is

286
00:37:03,333 --> 00:37:12,613
different versions, such as 17,
19, 20, so some of the packages
and samples are not available on

287
00:37:12,625 --> 00:37:18,542
Wireshark consult. So basically
you cannot decode them. There is
one item of this library, right

288
00:37:18,542 --> 00:37:25,708
side basic skinny passer, it has
many different options for many
different responses from server

289
00:37:25,708 --> 00:37:34,583
and left side is a basic sample.
Signing the register, it is
pretty easy. Everybody develops

290
00:37:34,583 --> 00:37:41,208
a basic skinny model. But the
thing is, developing a skinny
model; yes it is easy, such as

291
00:37:41,208 --> 00:37:50,980
register or call. It is pretty
easy. But if you need more, you
can develop using same library

292
00:37:50,980 --> 00:37:56,980
as well, because I provide a
basic library through
Metasploit. So you can basically

293
00:37:56,980 --> 00:38:03,420
develop your own fuzzer on skinny.
I have a basic fuzzer. It is not
good right now. But, think about

294
00:38:05,708 --> 00:38:13,167
it, register needs no
authentication, right? First
register packages. So basically,

295
00:38:13,167 --> 00:38:19,167
many fuzzers fuzz it, but
nobody fuzzes, for example,
get-button templates

296
00:38:20,420 --> 00:38:23,792
or nobody fuzzes
the remote server
during a call.

297
00:38:23,792 --> 00:38:30,667
So you can do it because all
packages and all comments very
easy for example prep, open,

298
00:38:30,667 --> 00:38:36,667
receive channel. And you can use
a bogus device app here or a
port. So it's a kind of new

299
00:38:38,917 --> 00:38:46,458
attack surface for you. But I
have a demo as well. If you
register it to a specific mega

300
00:38:46,458 --> 00:38:52,750
address we can use regular
clients as well such as Cisco IP
Communicator, it supports device

301
00:38:52,750 --> 00:38:59,250
name, custom device name and you
can use your device name here,
if you have a registration. Here

302
00:38:59,250 --> 00:39:10,710
is the demo. I have Cisco
communicator right side. I have
Cisco UCM, I have Cisco UCM 912.

303
00:39:11,458 --> 00:39:19,618
But I tested all the novelties
on 10.5.1, 10.5.2 and lower
versions so it works with them.

304
00:39:19,625 --> 00:39:25,042
It has two different options
Cisco IP Communicator or regular
Cisco IP phone. You can use all

305
00:39:25,042 --> 00:39:30,833
of them. In this sample, I have
two different clients; let me
check they can call each other.

306
00:39:32,875 --> 00:39:44,235
They can call, good and they
called, and yeah. Now we will
use skinny attacks. This is a

307
00:39:44,250 --> 00:39:50,250
basic register plug in.
Basically we will use remote
target MAC address and IP

308
00:39:57,083 --> 00:40:02,750
address, that's all. IP
addresses, server IP address MAC
addresses, IP phones MAC

309
00:40:02,750 --> 00:40:12,333
address. After that we can
register. As you see, I can
attribute information of this

310
00:40:12,333 --> 00:40:19,542
MAC address such as line ID's.
But the thing is I am not using
MAC spoofing here. I am using

311
00:40:19,542 --> 00:40:24,333
MAC address in the connection as
an identity, that's all. There
is no MAC spoofing here. So, I

312
00:40:24,333 --> 00:40:33,573
can use other MAC addresses such
as this MAC address. When I use
this MAC address as you see lift up

313
00:40:33,583 --> 00:40:39,583
our first line. It is
disconnected now. It's a kind of
service for older versions. I

314
00:40:41,958 --> 00:40:48,417
reviewed the information which
line is available for this MAC
address and I am one of them.

315
00:40:48,417 --> 00:40:58,237
But the thing is we can insure
the call here. For example, I
can call anyone. This is another

316
00:41:01,180 --> 00:41:09,240
model, Viproy skinny call and I
will use another MAC address and
my target is 1,013. When I use

317
00:41:09,250 --> 00:41:17,083
it, it will be registered first
and the Agency it is here. I do
not fix this error. It is

318
00:41:17,083 --> 00:41:23,125
necessary because if the other
client, real client, will try to
connect, re-connect, you will

319
00:41:23,125 --> 00:41:26,750
have this error. Because your
PTC connection will be
terminated, that will be only

320
00:41:26,750 --> 00:41:33,792
one single client. This is why I
keep this error. This says the
remote client is trying to

321
00:41:33,792 --> 00:41:39,792
reconnect. We will try it again,
see it will work. So, it is
registering now and we are

322
00:41:42,958 --> 00:41:52,498
getting confirmation and we are
calling, see from 1001. Okay,
register called we can

323
00:41:52,500 --> 00:41:59,083
additional features such as call
forwarding, it is more useable
one. It is still trying to

324
00:41:59,083 --> 00:42:08,623
register, but if you try to
redirect this phone number 1001 to
1013, it will be really good for

325
00:42:08,625 --> 00:42:14,292
us, right? Because, we can
redirect all phones to us, after
that we can redirect them to

326
00:42:14,292 --> 00:42:23,992
anywhere. It is connected right?
When I try to register it is
disconnected again. It may try a

327
00:42:28,458 --> 00:42:38,538
few times but it will have
success. Lines open for call
forwarding, 1013 numbers dialed

328
00:42:38,542 --> 00:42:47,582
and see it is forwarded. This is
my skinny model and you can use
basic features such as register,

329
00:42:47,583 --> 00:42:54,417
call or call forwarding or you
can turn it as a kind of
advanced pauser so you can

330
00:42:54,417 --> 00:43:02,537
attack remote Cisco UCM's using
this attack. As you see I did
not talk about toll fraud too

331
00:43:02,542 --> 00:43:10,702
much because we have a good
speaker here. Patrick McNeil
provided a really good, maybe

332
00:43:10,708 --> 00:43:18,333
best toll fraud speech ever,
this afternoon, sorry this
morning. And it was really good

333
00:43:18,333 --> 00:43:25,875
and you should get a video or
presentation and please visit
our register 436. Am I right?

334
00:43:25,875 --> 00:43:32,208
Okay good. So he has a really
good toll fraud speech. And I am
talking about other attacks. So

335
00:43:32,208 --> 00:43:37,167
basically, we can attack
network, we can attack Cisco
UCM, we can attack Cisco Unified

336
00:43:37,167 --> 00:43:42,125
Communication Domain Manager
clients, skinny protocol, SIP,
we can attack everywhere.

337
00:43:42,125 --> 00:43:49,667
Solutions, our solutions
published by Cisco and we have
additional suggestions. First of

338
00:43:49,667 --> 00:43:57,417
all, IP phone examiner service
or remote party ID. This ..and
they are yeah, they are still

339
00:43:57,417 --> 00:44:02,750
unpatched and you can attack
these servers using remote party
ID or IP phone examiner

340
00:44:02,750 --> 00:44:08,750
services. Furthermore, you can
use other novelties and starting
from 3277 to 3283. Furthermore,

341
00:44:12,917 --> 00:44:22,792
a few additional novelties and
92, sorry 97 and 32 sorry 3302
and we have yeah, many novelties

342
00:44:22,792 --> 00:44:28,583
here almost twelfth series
assigned, some of them not here
because they are information

343
00:44:28,583 --> 00:44:35,458
level. And yeah, basically you
should secure your design we
have attack services on

344
00:44:35,458 --> 00:44:41,167
everywhere we can attack server,
we can attack protocols, we can
attack lines and we can attack

345
00:44:41,167 --> 00:44:49,707
web applications as well.
Basically security deployment
and good design they may help

346
00:44:49,708 --> 00:44:56,583
you to secure the network.
That's all. And yeah, I have
references that you can download

347
00:44:56,583 --> 00:45:03,625
that you were here. I have a 15
minute training video, also I
have another Def Con video you

348
00:45:03,625 --> 00:45:12,205
can use you tube to find it. And
we have agency attacks there.
Furthermore, I really

349
00:45:12,208 --> 00:45:18,208
appreciated a Sense of Security
team they supported me too much
actually. They encouraged me

350
00:45:20,875 --> 00:45:26,583
again and again here.
Furthermore Jeff Norstrom helped
me too much about this

351
00:45:26,583 --> 00:45:37,000
presentation. Furthermore, some
good suggestions about my point
of view. Also, Mark, Paul Henry

352
00:45:37,000 --> 00:45:44,958
and Sandro, of course. This is
my presentation, this is what I
have. Do you have any questions

353
00:45:44,958 --> 00:45:50,958
related with this topic? I
cannot see by the way. Do you
have any questions? No question?

354
00:45:57,760 --> 00:46:03,760
You do not give any questions
here, okay? Okay, thank you.
(Applause) 

