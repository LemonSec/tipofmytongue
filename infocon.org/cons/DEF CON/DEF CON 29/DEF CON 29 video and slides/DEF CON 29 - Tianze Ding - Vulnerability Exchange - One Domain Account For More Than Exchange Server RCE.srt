1
00:00:02,290 --> 00:00:03,300
- [Tianze] Hello, everyone.

2
00:00:03,300 --> 00:00:04,770
Welcome to my talk.

3
00:00:04,770 --> 00:00:06,730
Today I'm going to share my research

4
00:00:06,730 --> 00:00:09,700
about how to attack
Microsoft Exchange servers

5
00:00:09,700 --> 00:00:13,393
in Active Directory with
only a normal domain account.

6
00:00:15,360 --> 00:00:19,160
I'm Tianze Ding, I'm from
Tencent Security Xuanwu Lab,

7
00:00:19,160 --> 00:00:22,070
and focusing on Active Directory Security,

8
00:00:22,070 --> 00:00:25,753
Red Team operations and
web applications security.

9
00:00:26,590 --> 00:00:28,740
I have reported some vulnerabilities

10
00:00:28,740 --> 00:00:30,990
to several well known companies,

11
00:00:30,990 --> 00:00:34,300
such as Microsoft, Apple and Google.

12
00:00:34,300 --> 00:00:38,650
I have also shared my
research at Black Hat Asia

13
00:00:38,650 --> 00:00:40,603
or Black Hat USA Arsenal.

14
00:00:42,680 --> 00:00:44,970
Here is the agenda of this talk.

15
00:00:44,970 --> 00:00:47,300
First, I will give a brief overview

16
00:00:47,300 --> 00:00:50,800
of the attack surface of
Microsoft Exchange Server.

17
00:00:50,800 --> 00:00:54,080
Next, I will share two
new vulnerabilities.

18
00:00:54,080 --> 00:00:57,370
I will show you how I can
take over any Exchange mailbox

19
00:00:57,370 --> 00:01:00,761
and how I take RCE servers.

20
00:01:00,761 --> 00:01:04,080
And then, I will detail
new methods to help you

21
00:01:04,080 --> 00:01:08,331
preform lateral movement
and escalate your privileges

22
00:01:08,331 --> 00:01:11,713
to domain means after
exchange server asks me.

23
00:01:13,390 --> 00:01:15,720
You may ask why I chose Exchange Server

24
00:01:15,720 --> 00:01:17,320
as a research target.

25
00:01:17,320 --> 00:01:19,660
Microsoft Exchange
Server is one of the most

26
00:01:19,660 --> 00:01:21,700
famous mail servers in the world,

27
00:01:21,700 --> 00:01:23,995
especially for enterprise users.

28
00:01:23,995 --> 00:01:28,480
It stores large amounts of
sensitive corporate information,

29
00:01:28,480 --> 00:01:32,930
such as emails, email
attachments, contacts,

30
00:01:32,930 --> 00:01:35,373
calendars of all users in your company.

31
00:01:36,440 --> 00:01:39,300
Emails, they may be
something that attackers

32
00:01:39,300 --> 00:01:42,218
are very interested in,
such as business price,

33
00:01:42,218 --> 00:01:45,600
work arrangements, customer information,

34
00:01:45,600 --> 00:01:47,433
and even contacts passwords.

35
00:01:50,570 --> 00:01:53,410
Small Business server is highly integrated

36
00:01:53,410 --> 00:01:57,730
with Microsoft Active Directory server you

37
00:01:57,730 --> 00:02:00,720
this activity or theory
for user asked mutation

38
00:02:00,720 --> 00:02:04,180
and mailbox user user growth management.

39
00:02:04,180 --> 00:02:05,615
And it also stores almost

40
00:02:05,615 --> 00:02:08,370
all configuration in Active Directory,

41
00:02:08,370 --> 00:02:10,820
especially single server not communicating

42
00:02:10,820 --> 00:02:13,150
with activity directory to
retrieve information about the

43
00:02:13,150 --> 00:02:17,480
recipients and information
about other external servers.

44
00:02:17,480 --> 00:02:19,740
So Active Directory must be available

45
00:02:19,740 --> 00:02:22,283
for exchange to function practically.

46
00:02:23,639 --> 00:02:25,989
There are also some high
privilege idea of Jack's

47
00:02:25,989 --> 00:02:28,540
along with extra servers.

48
00:02:28,540 --> 00:02:31,380
Here already, you'll need
to use enterprise admins

49
00:02:31,380 --> 00:02:36,190
to install your first agent
server in our organization.

50
00:02:36,190 --> 00:02:40,145
So they're maybe enterprise
the domains centralized on

51
00:02:40,145 --> 00:02:44,090
servers if an attacker
compromised you internet service

52
00:02:44,090 --> 00:02:46,800
and they also have ability to compromise

53
00:02:46,800 --> 00:02:48,000
in the price of domains.

54
00:02:49,160 --> 00:02:50,910
In all the versions or servers,

55
00:02:50,910 --> 00:02:52,760
the essential windows permission

56
00:02:52,760 --> 00:02:54,912
group has wrapped the STL rights on

57
00:02:54,912 --> 00:02:58,003
the name of that domain object.

58
00:02:59,020 --> 00:03:02,020
If our attacker compromised
server, Heiko the grant

59
00:03:02,020 --> 00:03:04,350
himself this sync rise and

60
00:03:04,350 --> 00:03:09,350
then escalate his
privileges to domain admins.

61
00:03:09,470 --> 00:03:11,920
So Exchange Server normally stores a large

62
00:03:11,920 --> 00:03:15,080
amount of sensitive corporate
information, but also

63
00:03:15,080 --> 00:03:19,173
effective way to actually
escalate privileges to Domain.

64
00:03:20,580 --> 00:03:23,060
So it has become a highly new target for

65
00:03:23,060 --> 00:03:25,513
both AP groups and writings.

66
00:03:28,495 --> 00:03:31,520
If looking for vulnerabilities,
we should have an

67
00:03:31,520 --> 00:03:35,780
overview of exchange server
architecture and attack surface

68
00:03:35,780 --> 00:03:38,040
pay more attention to those attack surface

69
00:03:38,040 --> 00:03:40,253
that are enjoyed by other researchers.

70
00:03:41,438 --> 00:03:44,030
As a mouse server, our new server

71
00:03:44,030 --> 00:03:46,210
has many new client access services,

72
00:03:46,210 --> 00:03:49,720
such as, for instance HTTPS endpoints.

73
00:03:49,720 --> 00:03:51,310
Some traditional mail services

74
00:03:51,310 --> 00:03:54,750
like POP3, IMAP, and SMTP.

75
00:03:54,750 --> 00:03:58,960
And the Unified Messaging
Service for telephone.

76
00:03:58,960 --> 00:04:02,250
This is postal services,
a favorite of attackers,

77
00:04:02,250 --> 00:04:04,380
especially the web series.

78
00:04:04,380 --> 00:04:08,190
There are lots of agent
endpoints available to attackers,

79
00:04:08,190 --> 00:04:10,770
such as OWA and ECP,

80
00:04:10,770 --> 00:04:13,350
which you can access
directly with a browser.

81
00:04:13,350 --> 00:04:15,560
Another endpoints like these

82
00:04:15,560 --> 00:04:17,509
EWS and maybe MAPI, et cetera,

83
00:04:17,509 --> 00:04:20,663
which are mainly used by other looks.

84
00:04:24,008 --> 00:04:29,008
In the past few months, some
high risk vulnerabilities

85
00:04:29,095 --> 00:04:31,710
in Exchange Server have been exposed.

86
00:04:31,710 --> 00:04:36,040
Most of them violate tax
vulnerable in ASP.NET code

87
00:04:36,040 --> 00:04:37,973
running on IIS Server.

88
00:04:38,840 --> 00:04:42,610
But architecture of External
Server is complicated.

89
00:04:42,610 --> 00:04:46,013
Is there any other attack
surface Exchange Server?

90
00:04:48,080 --> 00:04:51,500
In my opinion, the
architecture of a single server

91
00:04:51,500 --> 00:04:54,530
also contains the IIS server.

92
00:04:54,530 --> 00:04:58,550
Based on my password a
cursory research experiments

93
00:04:58,550 --> 00:05:01,120
as their very constitution
that's the red server

94
00:05:01,120 --> 00:05:05,350
was misconfigured by their
verification developers.

95
00:05:05,350 --> 00:05:07,860
So maybe there will be
some misconfiguration

96
00:05:07,860 --> 00:05:11,130
on the exchange IIS Server too.

97
00:05:11,130 --> 00:05:14,210
A Windows Server is
also our attack surface.

98
00:05:14,210 --> 00:05:17,988
There are some services
available to attackers

99
00:05:17,988 --> 00:05:21,130
in activity accurate environments.

100
00:05:21,130 --> 00:05:24,917
But in this server also suppose
all balancing architecture.

101
00:05:24,917 --> 00:05:28,740
There may be more than
one Exchange servers

102
00:05:28,740 --> 00:05:30,900
in Active Directory which may also

103
00:05:30,900 --> 00:05:33,031
bring new attack surfaces.

104
00:05:33,031 --> 00:05:36,700
And as soon as server is highly integrated

105
00:05:36,700 --> 00:05:38,360
with Active Directory,

106
00:05:38,360 --> 00:05:40,970
this may also bring your tech surface

107
00:05:40,970 --> 00:05:43,980
to both Exchange servers
and Active Directory.

108
00:05:43,980 --> 00:05:47,923
I will discuss this attack
service in the following talk.

109
00:05:50,550 --> 00:05:54,160
Next, let's talk about the
story of how to take over

110
00:05:54,160 --> 00:05:56,260
Arbitrary Exchange Mailbox

111
00:05:56,260 --> 00:05:58,083
with only a normal domain account.

112
00:05:59,370 --> 00:06:01,480
When I was researching
the Exchange Server,

113
00:06:01,480 --> 00:06:03,370
I found many ECP operations

114
00:06:03,370 --> 00:06:06,260
and exchange PowerShell Cmdlets

115
00:06:06,260 --> 00:06:10,203
support users to use UNC paths for access.

116
00:06:11,700 --> 00:06:15,800
So this means if we have
access to this ACP operations,

117
00:06:15,800 --> 00:06:17,880
or this PowerShell Cmdlets,

118
00:06:17,880 --> 00:06:19,770
we can trigger our UNC feature

119
00:06:19,770 --> 00:06:21,893
from Exchange server to an SMB server.

120
00:06:24,890 --> 00:06:26,650
Next, we need to figure out

121
00:06:26,650 --> 00:06:28,770
which users credential will be used

122
00:06:28,770 --> 00:06:30,730
in the SMB connection.

123
00:06:30,730 --> 00:06:34,790
Mystery server user system
accounts always surface.

124
00:06:34,790 --> 00:06:37,350
The system account is a local town's.

125
00:06:37,350 --> 00:06:39,990
The Active Directory or process running

126
00:06:39,990 --> 00:06:42,480
with the system system accounts for us

127
00:06:42,480 --> 00:06:45,040
to perform networker indication.

128
00:06:45,040 --> 00:06:47,410
The credential of the machine accounts

129
00:06:47,410 --> 00:06:49,483
are used for the identification.

130
00:06:50,550 --> 00:06:53,880
I will show in Wireshark
their Access Server

131
00:06:53,880 --> 00:06:56,920
while using server machine
accounts, essential and older,

132
00:06:56,920 --> 00:06:58,850
to confront NTLM authentication

133
00:06:58,850 --> 00:07:00,250
in the authentic connection.

134
00:07:01,380 --> 00:07:03,050
So, what can we do

135
00:07:04,050 --> 00:07:07,520
with SMB connection or
NTLM authentication?

136
00:07:07,520 --> 00:07:08,793
How you're storing dates?

137
00:07:11,710 --> 00:07:14,560
Let's talk about the
NTLM protocol, firstly.

138
00:07:14,560 --> 00:07:18,020
NTLM is a very old authentication protocol

139
00:07:18,020 --> 00:07:19,460
in Windows system.

140
00:07:19,460 --> 00:07:23,680
But it's well widely deployed
in Microsoft ecosystem

141
00:07:23,680 --> 00:07:26,510
in order to maintain compatibility

142
00:07:26,510 --> 00:07:29,230
with Laxey class and servers.

143
00:07:29,230 --> 00:07:32,110
An NTLM still plays an important role

144
00:07:32,110 --> 00:07:34,760
in Active Directory authentication.

145
00:07:34,760 --> 00:07:37,160
NTLM is an embedded protocol

146
00:07:37,160 --> 00:07:39,250
which means it can be embedded

147
00:07:39,250 --> 00:07:40,600
in other protocols which is

148
00:07:40,600 --> 00:07:44,560
which need identification functionalities,

149
00:07:44,560 --> 00:07:49,517
such as NTLM over SMB,
NTLM over HTTP, and so on.

150
00:07:49,517 --> 00:07:53,017
And there is a terrorist
attack about NTLM codes.

151
00:07:53,017 --> 00:07:56,140
But NTLM relay attack is really old,

152
00:07:56,140 --> 00:07:59,083
but various for you writing operations.

153
00:08:00,437 --> 00:08:04,080
NTLM relay attack works like this.

154
00:08:04,080 --> 00:08:06,464
If the victim is somehow tricked it to

155
00:08:06,464 --> 00:08:10,000
into accessing a malicious SMB server

156
00:08:10,000 --> 00:08:11,820
hosted by the attacker,

157
00:08:11,820 --> 00:08:15,380
the victim will syndicated
to the attacker,

158
00:08:15,380 --> 00:08:18,903
it will say hey, let me
log in to the SMB server,

159
00:08:18,903 --> 00:08:20,910
the attacker can relay the message

160
00:08:20,910 --> 00:08:23,300
from the victim to the tactic targets

161
00:08:23,300 --> 00:08:26,663
and say, hey, I want to log
into the vulnerable service.

162
00:08:27,712 --> 00:08:29,680
The targeted target will send

163
00:08:29,680 --> 00:08:32,392
an NTLM challenge message to the attacker

164
00:08:32,392 --> 00:08:35,040
and say; Hey, here's a challenge three,

165
00:08:35,040 --> 00:08:37,053
please hash it with your password.

166
00:08:37,053 --> 00:08:40,440
The attacker relay this
message to the victim,

167
00:08:40,440 --> 00:08:43,730
hey victim here is a challenge
from a targeted target

168
00:08:43,730 --> 00:08:46,188
hash with your password.

169
00:08:46,188 --> 00:08:49,300
Then directing users a password

170
00:08:49,300 --> 00:08:51,400
to calculate our challenge response

171
00:08:51,400 --> 00:08:53,150
and send it to the attacker.

172
00:08:53,150 --> 00:08:54,810
The attacker related
the challenge response

173
00:08:54,810 --> 00:08:56,620
directly to the targeted target

174
00:08:56,620 --> 00:08:59,680
and the tactic target check

175
00:08:59,680 --> 00:09:02,116
whether the challenge response is correct

176
00:09:02,116 --> 00:09:05,223
with the NETLOGON protocol.

177
00:09:07,271 --> 00:09:10,810
Finally, the attacker
successfully looks into

178
00:09:10,810 --> 00:09:13,300
the verbal surveys on the targeted targets

179
00:09:13,300 --> 00:09:16,150
as domain tax inspecting.

180
00:09:16,150 --> 00:09:19,150
You're the victim has a
special blevet privilege

181
00:09:19,150 --> 00:09:20,857
on targeted target.

182
00:09:20,857 --> 00:09:23,410
The attacker can do something sensitive

183
00:09:23,410 --> 00:09:26,397
or some kind to some sensitive operations

184
00:09:26,397 --> 00:09:29,903
with the victim's identity either as he.

185
00:09:32,240 --> 00:09:35,650
So, now we can trigger NTLM authentication

186
00:09:35,650 --> 00:09:38,680
of the external service machine accounts.

187
00:09:38,680 --> 00:09:40,650
However from a NTLM relay attack.

188
00:09:40,650 --> 00:09:45,050
Here are some preconditions
for NTLM relay attack.

189
00:09:45,050 --> 00:09:46,850
Firstly, we need to pick out;

190
00:09:46,850 --> 00:09:49,690
Are there any vulnerable
services or external servers

191
00:09:49,690 --> 00:09:52,980
as the target of account relay attacks?

192
00:09:52,980 --> 00:09:56,380
Then, does the Exchange
Server machine account

193
00:09:56,380 --> 00:09:59,763
has any special privileges
on these services?

194
00:10:01,090 --> 00:10:03,630
As Exchange Server is highly integrated

195
00:10:03,630 --> 00:10:06,436
with Microsoft Active Directory,

196
00:10:06,436 --> 00:10:09,010
there are many essential endpoints

197
00:10:09,010 --> 00:10:10,991
post anti-augment indication,

198
00:10:10,991 --> 00:10:15,991
such as the MAPI, EWS,
RPC or Autodiscover, etc.

199
00:10:17,840 --> 00:10:21,040
Some of these endpoints
are used by outlook,

200
00:10:21,040 --> 00:10:25,310
which means that if an attacker
can log into this endpoints,

201
00:10:25,310 --> 00:10:27,750
they can perform almost any operations

202
00:10:27,750 --> 00:10:29,423
like a normal outlook.

203
00:10:31,650 --> 00:10:35,053
Can we relay NTLM authentication
to these endpoints?

204
00:10:37,630 --> 00:10:41,900
If the victim and the attacked
target are the same machine,

205
00:10:41,900 --> 00:10:45,193
then NTLM will attack is
also called NTLM reflection.

206
00:10:46,111 --> 00:10:48,300
If there is only one external server

207
00:10:48,300 --> 00:10:49,990
in the Active Directory.

208
00:10:49,990 --> 00:10:52,603
How we perform the NTLM reflection attack,

209
00:10:52,603 --> 00:10:55,077
can we relate it was indication

210
00:10:55,077 --> 00:10:57,770
of the machine account exchange

211
00:10:57,770 --> 00:11:00,820
and power back to Exchange 1?

212
00:11:00,820 --> 00:11:03,420
The answer is of course, no,

213
00:11:03,420 --> 00:11:07,077
a patch of CVE-2018-8581

214
00:11:08,580 --> 00:11:11,170
remote disable loopback check

215
00:11:11,170 --> 00:11:14,190
configuration from Exchange server.

216
00:11:14,190 --> 00:11:18,003
So again, on the reflection
is disabled on a server.

217
00:11:20,143 --> 00:11:22,910
And what if there is more than one

218
00:11:23,890 --> 00:11:25,507
Exchange Server in the AD?

219
00:11:27,380 --> 00:11:28,990
In my research operations,

220
00:11:28,990 --> 00:11:31,720
its a very common situation.

221
00:11:31,720 --> 00:11:34,460
In the past environments, says there are

222
00:11:34,460 --> 00:11:38,060
more than one Exchange server
in our Active Directory

223
00:11:38,060 --> 00:11:41,123
because of the need for load balancing.

224
00:11:42,500 --> 00:11:44,816
So we can relate the NTLM identification

225
00:11:44,816 --> 00:11:47,910
from one Exchange server to another,

226
00:11:47,910 --> 00:11:51,037
but there is protection called EPA.

227
00:11:53,100 --> 00:11:53,933
What is EPA?

228
00:11:53,933 --> 00:11:57,750
EPA is extended protection
for authentication.

229
00:11:57,750 --> 00:12:01,700
It's a protection to defend
against NTLM relay attacks.

230
00:12:01,700 --> 00:12:03,223
For SSAR connection.

231
00:12:04,180 --> 00:12:07,825
There is protection called
Channel Binding EPA.

232
00:12:07,825 --> 00:12:10,610
Your channel binding is
enabled in a web server,

233
00:12:10,610 --> 00:12:13,210
the client needs to calculate
a Channel Binding Token

234
00:12:13,210 --> 00:12:17,020
based on a TLS Certificate
of the NTLM server

235
00:12:17,020 --> 00:12:19,203
and a user's NT hash.

236
00:12:20,270 --> 00:12:24,210
And as a token to there NTLM auth message.

237
00:12:24,210 --> 00:12:26,140
If the Channel Binding Token is wrong,

238
00:12:26,140 --> 00:12:29,350
the server will not allow
the client protection.

239
00:12:29,350 --> 00:12:32,980
Attackers cannot forge
Channel Binding Token

240
00:12:32,980 --> 00:12:36,603
without knowing the users NT hash.

241
00:12:38,330 --> 00:12:40,840
Channel Binding token in NTLMSSP

242
00:12:40,840 --> 00:12:43,240
over SMB all zero by default.

243
00:12:43,240 --> 00:12:45,557
So if EPA is enabled, we can't

244
00:12:45,557 --> 00:12:48,680
we can't relay NTLM authentication

245
00:12:48,680 --> 00:12:50,990
to a singe server and the points.

246
00:12:50,990 --> 00:12:54,330
But fortunately, EPA is disabled

247
00:12:54,330 --> 00:12:57,063
on these Exchange endpoints by default.

248
00:12:58,385 --> 00:13:02,420
Normally, most machine
accounts in Active Directory

249
00:13:02,420 --> 00:13:05,000
are low privileged accounts.

250
00:13:05,000 --> 00:13:07,650
Pastor or channel server machine accounts.

251
00:13:07,650 --> 00:13:10,760
Does Exchange Server $1 has any

252
00:13:10,760 --> 00:13:13,493
special privileges on these endpoints?

253
00:13:15,162 --> 00:13:18,996
The answer is yes.
Exchange machine account

254
00:13:18,996 --> 00:13:23,996
has extended rights called
MS-Exch-EPI-Token-Serialization.

255
00:13:26,580 --> 00:13:29,070
I say all the posts out
there get AD permission

256
00:13:29,070 --> 00:13:30,206
command shots.

257
00:13:30,206 --> 00:13:32,740
All members of the Exchange Server group

258
00:13:32,740 --> 00:13:34,960
have token serialization rights

259
00:13:34,960 --> 00:13:38,570
on all Exchange Servers
in the Active Directory.

260
00:13:38,570 --> 00:13:39,900
Thanks to the machine accounts,

261
00:13:39,900 --> 00:13:43,570
all the members of the
Exchange server group.

262
00:13:43,570 --> 00:13:46,287
This means they're
essential machine accounts

263
00:13:46,287 --> 00:13:48,313
have this special extended rights.

264
00:13:51,810 --> 00:13:53,750
Following up on the point,

265
00:13:53,750 --> 00:13:55,910
if there's sterilizer security contest

266
00:13:55,910 --> 00:13:58,460
filled XML HTTP request.

267
00:13:58,460 --> 00:14:01,170
EWS tries to create security access tokens

268
00:14:01,170 --> 00:14:03,210
based on the value of this field.

269
00:14:03,210 --> 00:14:06,270
Even the plan user has
token serialization rights,

270
00:14:06,270 --> 00:14:09,900
they can use serialized
security context to force it

271
00:14:09,900 --> 00:14:13,100
to allow us to impersonate
other external users,

272
00:14:13,100 --> 00:14:15,390
which means essentially machine accounts

273
00:14:15,390 --> 00:14:18,663
can impersonate other Exchange
users on EWS endpoint.

274
00:14:21,630 --> 00:14:24,150
An XML request always serializes

275
00:14:24,150 --> 00:14:26,060
the security context is lighter.

276
00:14:26,060 --> 00:14:28,250
You need to set UserSid of

277
00:14:28,250 --> 00:14:30,410
the user you want to impersonate

278
00:14:30,410 --> 00:14:32,596
in serialized security context.

279
00:14:32,596 --> 00:14:36,060
And if you have a domain
controller Active Directory,

280
00:14:36,060 --> 00:14:38,700
or domain user or domain computer account,

281
00:14:38,700 --> 00:14:41,980
you can easily without
the UserSid, so is LDAP.

282
00:14:43,014 --> 00:14:45,860
You can also use syntactic exchange of UI

283
00:14:45,860 --> 00:14:47,693
to read our active mailboxes

284
00:14:47,693 --> 00:14:49,783
and corresponding UserSids.

285
00:14:51,590 --> 00:14:52,763
Object cleaner UserSids.

286
00:14:53,620 --> 00:14:57,355
You can set UserSids in the
serialized security context

287
00:14:57,355 --> 00:15:00,353
and impersonate any
external user you want.

288
00:15:04,340 --> 00:15:06,741
So what can I do after logging in to

289
00:15:06,741 --> 00:15:10,839
the EWS endpoint as any
incident zero there?

290
00:15:10,839 --> 00:15:13,753
EWS is used by other logs for Mac OS.

291
00:15:14,924 --> 00:15:19,924
So EWS is the host of most
operations supported by outlook,

292
00:15:21,450 --> 00:15:26,450
such as FindFolder; used
to find all pre-defined

293
00:15:26,640 --> 00:15:28,403
and accustomed folders of MacBook Users.

294
00:15:30,929 --> 00:15:34,346
FindItem; can get emails in this folders.

295
00:15:35,334 --> 00:15:37,417
GetItem; can read emails.

296
00:15:40,590 --> 00:15:42,813
So if you can relate entailment

297
00:15:42,813 --> 00:15:46,700
and creation of a central
machine accounts to EWS,

298
00:15:46,700 --> 00:15:49,370
you can impersonate an external users.

299
00:15:49,370 --> 00:15:52,970
And use this with our EWS API

300
00:15:52,970 --> 00:15:56,017
to read emails, download
email attachments,

301
00:15:56,017 --> 00:15:58,473
sending emails as any external user.

302
00:16:01,871 --> 00:16:03,230
So we've discussed before,

303
00:16:03,230 --> 00:16:04,860
we can trigger SME connections

304
00:16:04,860 --> 00:16:06,530
with some ECB operations,

305
00:16:06,530 --> 00:16:08,280
or some PowerShell commandlets.

306
00:16:08,280 --> 00:16:10,260
But all these methods are recorded

307
00:16:10,260 --> 00:16:11,930
high privilege to the users,

308
00:16:11,930 --> 00:16:15,220
we can trigger, can we
trigger NTLM authentication

309
00:16:15,220 --> 00:16:16,810
with only a normal domain user

310
00:16:16,810 --> 00:16:19,490
without any special privileges?

311
00:16:19,490 --> 00:16:21,230
The Printer Bug can do this.

312
00:16:21,230 --> 00:16:23,720
Typically found there's
obviously a function

313
00:16:23,720 --> 00:16:26,440
called RBC remote for the first printer

314
00:16:26,440 --> 00:16:30,159
change notification in the print RTC.

315
00:16:30,159 --> 00:16:32,210
And this function is accessible

316
00:16:32,210 --> 00:16:34,760
by all the main users
and the main computers.

317
00:16:34,760 --> 00:16:37,090
So I need the main users
of the machine accounts

318
00:16:37,090 --> 00:16:39,157
in the Active Directory can make a request

319
00:16:39,157 --> 00:16:41,970
to the printer server
and said there appears

320
00:16:41,970 --> 00:16:44,693
a local machine to a UNC path.

321
00:16:44,693 --> 00:16:47,410
Until the server is running
with the system account,

322
00:16:47,410 --> 00:16:49,344
you know, we are immediately connected

323
00:16:49,344 --> 00:16:52,390
to their UNC path and as indicated to each

324
00:16:52,390 --> 00:16:54,780
with the machine account.

325
00:16:54,780 --> 00:16:57,447
So we can make a request
to external server

326
00:16:57,447 --> 00:16:59,260
and the folder edition and

327
00:16:59,260 --> 00:17:00,860
the foster external machine account

328
00:17:00,860 --> 00:17:02,323
to authenticate to us.

329
00:17:05,840 --> 00:17:08,470
So let's check them out together.

330
00:17:08,470 --> 00:17:12,380
The XLAB/Attacker is normal domain user

331
00:17:12,380 --> 00:17:14,430
without any special privileges.

332
00:17:14,430 --> 00:17:17,508
I can tell to extend
the wire with print bug.

333
00:17:17,508 --> 00:17:19,800
AS in the wire, it was indicated to me

334
00:17:19,800 --> 00:17:22,120
as external $1 accounts.

335
00:17:22,120 --> 00:17:25,438
There's a reason why
establish authentic connection

336
00:17:25,438 --> 00:17:28,397
with a malicious SMB server
hosted by the attacker

337
00:17:28,397 --> 00:17:32,460
send an invocation message to each.

338
00:17:32,460 --> 00:17:34,890
Attacker directly relates to an indication

339
00:17:34,890 --> 00:17:39,170
to the EWS endpoints are present

340
00:17:39,170 --> 00:17:42,903
to are successfully
logged in as a single $1.

341
00:17:44,109 --> 00:17:48,410
A single $1 has token
serialization right sounder EWS,

342
00:17:48,410 --> 00:17:52,000
so attacker can impersonate
any external users,

343
00:17:52,000 --> 00:17:53,670
which means the attacker

344
00:17:53,670 --> 00:17:56,310
can read mails download attachments,

345
00:17:56,310 --> 00:17:58,763
send emails as an external folder.

346
00:18:02,522 --> 00:18:05,163
I created a tool based on exchange relay X

347
00:18:05,163 --> 00:18:09,493
to exploit this vulnerability.
And here's a demo.

348
00:18:15,500 --> 00:18:18,533
There are two external servers
in the Active Directory.

349
00:18:32,880 --> 00:18:37,347
The attacker has set Exchange2
as the attacked target.

350
00:18:46,645 --> 00:18:49,000
The attacker can trigger an SMB connection

351
00:18:49,000 --> 00:18:52,333
from Exchange1 to the attackers
machine with sprint back.

352
00:19:16,110 --> 00:19:19,993
Next, the attacker can dump
all mailboxes and the user IDs.

353
00:19:27,660 --> 00:19:30,603
The attacker try to take
over a victim's mailbox.

354
00:19:40,850 --> 00:19:42,907
The attacker can read victims emails.

355
00:19:48,080 --> 00:19:50,053
Download their email attachment.

356
00:20:06,030 --> 00:20:08,420
The emails read by the
attacker are the same

357
00:20:08,420 --> 00:20:11,003
as the emails in their victims outlook.

358
00:20:16,490 --> 00:20:20,350
As their contents of the
attachment is also the same.

359
00:20:31,747 --> 00:20:33,296
Next, the attacker will try

360
00:20:33,296 --> 00:20:36,296
to take over administrators mailbox.

361
00:20:49,300 --> 00:20:53,383
The attacker can read the
administrator's emails.

362
00:21:01,990 --> 00:21:04,159
Next, the attacker will try to send email

363
00:21:04,159 --> 00:21:07,063
to victim as the administrator.

364
00:21:38,580 --> 00:21:41,210
The victim successfully received the email

365
00:21:41,210 --> 00:21:42,453
sent by the attacker.

366
00:21:46,810 --> 00:21:48,200
Let's talk about the patches.

367
00:21:48,200 --> 00:21:50,470
The April patch breaks are exploit chain,

368
00:21:50,470 --> 00:21:52,470
because the patches no longer allows

369
00:21:52,470 --> 00:21:55,090
machine accounts to log
in to Exchange endpoints

370
00:21:55,090 --> 00:21:57,020
and the vulnerability familiar was based

371
00:21:57,020 --> 00:21:59,440
on actual stage right to assign

372
00:21:59,440 --> 00:22:04,440
a serial number CVE-2021-33768.

373
00:22:04,530 --> 00:22:06,664
In conclusion, if you have compromised

374
00:22:06,664 --> 00:22:09,340
normal domain accounts, admin user,

375
00:22:09,340 --> 00:22:10,640
or machine accounts,

376
00:22:10,640 --> 00:22:12,063
and if there is more
than one Exchange server

377
00:22:12,063 --> 00:22:14,140
in the Active Directory,

378
00:22:14,140 --> 00:22:17,123
you can takeover any Arbitrary Mailbox.

379
00:22:21,130 --> 00:22:25,250
So, as you earn the trust to
achieve RCE Exchange server

380
00:22:25,250 --> 00:22:27,403
with similar attack methods.

381
00:22:30,301 --> 00:22:32,880
When the server was originally installed

382
00:22:32,880 --> 00:22:35,150
it occurred a high privileged group

383
00:22:35,150 --> 00:22:39,420
named Exchange Trusted
Subsystem for Active Directory.

384
00:22:39,420 --> 00:22:40,730
All members in this group

385
00:22:40,730 --> 00:22:42,940
have local administrator privileges

386
00:22:42,940 --> 00:22:45,133
on all Exchange Servers in Active domain.

387
00:22:46,480 --> 00:22:48,870
That external server
machine accounts are members

388
00:22:48,870 --> 00:22:51,250
of this high privileged groups.

389
00:22:51,250 --> 00:22:54,820
If we can relate NTLM
authentication of external server

390
00:22:54,820 --> 00:22:56,953
machine accounts to some
remote management server

391
00:22:56,953 --> 00:23:00,147
stronger than windows,
maybe we can achieve ACE.

392
00:23:01,630 --> 00:23:03,210
Someone might say that

393
00:23:03,210 --> 00:23:05,540
maybe we can relay NTLM authentication

394
00:23:05,540 --> 00:23:07,770
to the SMB and do something about PSC.

395
00:23:07,770 --> 00:23:09,290
Yeah, cause you see.

396
00:23:09,290 --> 00:23:11,930
But unfortunately, SMB signing is enabled

397
00:23:11,930 --> 00:23:14,470
by default on Exchange
server, so we can't relay

398
00:23:14,470 --> 00:23:19,180
NTLM authentications to SMB
or another agent server.

399
00:23:19,180 --> 00:23:20,430
There are also some other

400
00:23:20,430 --> 00:23:23,330
remote measurement protocols like WinRM.

401
00:23:23,330 --> 00:23:26,030
WinRM also supports NTLM authentication.

402
00:23:26,030 --> 00:23:28,830
By signing and sealing an AI Bot.

403
00:23:28,830 --> 00:23:31,948
On this HTTP service, the channel binding

404
00:23:31,948 --> 00:23:34,640
is enabled is HTTPS channel.

405
00:23:34,640 --> 00:23:39,640
So relay and authentication
to WinRM is also impossible.

406
00:23:41,440 --> 00:23:43,940
MSRPC is the remote produce call protocol

407
00:23:43,940 --> 00:23:47,880
implemented by Microsoft
based on this PCRPC.

408
00:23:47,880 --> 00:23:50,670
MSRPC supports normal RBC types,

409
00:23:50,670 --> 00:23:53,700
the most common types that can be accessed

410
00:23:53,700 --> 00:23:56,533
remotely over the network NCACN_NP,

411
00:23:58,012 --> 00:24:00,440
and NCNCN_IP_TCP can relay

412
00:24:00,440 --> 00:24:04,420
to NTLM over SMB to Microsoft RPC.

413
00:24:04,420 --> 00:24:08,610
NCACN_NP use SMB as
there transport protocol.

414
00:24:08,610 --> 00:24:12,503
Obviously, it cannot
be our attacked target.

415
00:24:14,095 --> 00:24:18,650
NCACN_IP_TCP use Port 135

416
00:24:18,650 --> 00:24:22,380
and a dynamic port assigned by the EPM,

417
00:24:22,380 --> 00:24:25,920
to accept connections from RPC clients.

418
00:24:25,920 --> 00:24:29,580
There are many RPC
interfaces available for us.

419
00:24:29,580 --> 00:24:31,830
RPC clients, can set the auth type

420
00:24:31,830 --> 00:24:36,830
to RPC_C_AUTHN_WINNT to use NTLMSSP

421
00:24:37,600 --> 00:24:40,853
to authenticate to this
obviously interfaces.

422
00:24:44,400 --> 00:24:46,640
Some security researchers have disclosed

423
00:24:46,640 --> 00:24:49,010
some obviously interfaces
that are affected

424
00:24:49,010 --> 00:24:51,080
by the NTLM relay attack,

425
00:24:51,080 --> 00:24:53,243
such as the CVE_2020_1113.

426
00:24:54,210 --> 00:24:59,210
MS-TSCH vulnerability exists
in the Task Scheduler service.

427
00:25:00,242 --> 00:25:02,603
An attacker can rely NTLM authentication

428
00:25:02,603 --> 00:25:04,740
to Task Scheduler RPC.

429
00:25:04,740 --> 00:25:07,540
And finally, SQL commands remotely.

430
00:25:07,540 --> 00:25:12,540
CVE_2021_1678 is NTLM
relay vulnerabilities

431
00:25:13,737 --> 00:25:16,043
existing in the printer spooler service.

432
00:25:17,020 --> 00:25:19,020
Tiger can relay account modification

433
00:25:19,020 --> 00:25:20,740
to print spooler obviously.

434
00:25:20,740 --> 00:25:23,993
And finally converts any
fails on the remote system.

435
00:25:26,790 --> 00:25:29,410
DCOM is built on top of MSRPC.

436
00:25:29,410 --> 00:25:30,630
So allows COM.

437
00:25:30,630 --> 00:25:33,183
Is there NTLM live on reata in DCOM.

438
00:25:33,183 --> 00:25:34,800
Let's take a look.

439
00:25:34,800 --> 00:25:37,170
A common DCOM connection goes like this,

440
00:25:37,170 --> 00:25:40,071
a client's first select
Connect to the porch 135

441
00:25:40,071 --> 00:25:43,860
on a DCOM server and send
there ER location to it.

442
00:25:43,860 --> 00:25:46,100
After a successful login,
the client will make

443
00:25:46,100 --> 00:25:48,260
a remote create instance request,

444
00:25:48,260 --> 00:25:52,470
and the request includes
poster CLSID and interface ID.

445
00:25:52,470 --> 00:25:54,750
Then the remote service control manager

446
00:25:54,750 --> 00:25:56,580
on the DCOM server will become responsible

447
00:25:56,580 --> 00:25:59,107
for the DCOM object activation.

448
00:25:59,107 --> 00:26:02,482
If the remote object is well activated,

449
00:26:02,482 --> 00:26:04,820
interface pointer of OBJREF

450
00:26:04,820 --> 00:26:06,807
will be sent back to the clients.

451
00:26:06,807 --> 00:26:09,633
The OBJREF has a field
called StringBindings

452
00:26:09,633 --> 00:26:11,980
and the DCOM client courage,

453
00:26:11,980 --> 00:26:15,610
courage the Object Explorer
with certain bindings.

454
00:26:15,610 --> 00:26:18,120
The clients will then
connect it to their IP

455
00:26:18,120 --> 00:26:20,910
and approach according
to the string bindings

456
00:26:20,910 --> 00:26:23,723
and send a authentication
identification to the server.

457
00:26:25,360 --> 00:26:27,640
After a successful
communication the client

458
00:26:27,640 --> 00:26:29,670
can send an object RPC request

459
00:26:29,670 --> 00:26:31,703
to use the remote COM object.

460
00:26:34,214 --> 00:26:37,480
The MS-RPC supports several
authentication levels.

461
00:26:37,480 --> 00:26:40,950
The RPC_C_AUTHN_LEVEL_CONNECT
authentication level

462
00:26:40,950 --> 00:26:42,867
indicates that the authentication level

463
00:26:42,867 --> 00:26:45,910
needs to be encrypted and signed.

464
00:26:45,910 --> 00:26:47,480
The signing and sealing are not

465
00:26:47,480 --> 00:26:49,542
force enabled on DCOM servers.

466
00:26:49,542 --> 00:26:51,714
Authentication levels of RPC connection

467
00:26:51,714 --> 00:26:55,383
can be completely determined
by their DCOM clients.

468
00:26:56,510 --> 00:27:00,230
So but hackers can also
set the RBC auth level

469
00:27:00,230 --> 00:27:04,620
to RPC auth level connect to
avoid equipping or signing

470
00:27:04,620 --> 00:27:09,263
on the relay and NTLM
authentication over SMB to DCOM.

471
00:27:12,790 --> 00:27:15,780
Now we can relate your
multiplication to DCOM.

472
00:27:15,780 --> 00:27:18,500
When you are calling
rejected callback is skewed

473
00:27:18,500 --> 00:27:20,390
commands on the remote system.

474
00:27:20,390 --> 00:27:24,690
As a well known technology
based on DCOM, established WMI.

475
00:27:24,690 --> 00:27:26,180
It allows administrators

476
00:27:26,180 --> 00:27:29,160
to manage remote system
and skilled commands

477
00:27:29,160 --> 00:27:30,860
on the remote systems.

478
00:27:30,860 --> 00:27:34,440
But the protocol of WMI
is a bit complicated.

479
00:27:34,440 --> 00:27:36,950
There are also some simple combo jacks

480
00:27:36,950 --> 00:27:39,219
and all of them cambios
to execute commands

481
00:27:39,219 --> 00:27:41,270
on the remote system.

482
00:27:41,270 --> 00:27:44,508
Here we'll choose an MMC20
application to help us

483
00:27:44,508 --> 00:27:46,770
execute master remote system.

484
00:27:46,770 --> 00:27:48,793
Ultra successful authentication relay.

485
00:27:50,950 --> 00:27:54,624
MMC20 application has our API
called a Secure Shell command,

486
00:27:54,624 --> 00:27:58,530
which can be used to execute
commands on a remote system.

487
00:27:58,530 --> 00:28:01,990
Why finally chose to use
MMC20 to execute commands.

488
00:28:01,990 --> 00:28:04,690
Compared to shell window on
the shell browser window,

489
00:28:04,690 --> 00:28:07,900
MMC20 application is still available

490
00:28:07,900 --> 00:28:09,600
on Linux, the Windows Server 2019.

491
00:28:10,598 --> 00:28:11,997
And compared to data online.

492
00:28:11,997 --> 00:28:14,240
Data online occurs as unappealing

493
00:28:14,240 --> 00:28:16,560
to too many of these interfaces,

494
00:28:16,560 --> 00:28:20,003
but as a MMC20 only
will occur twice a day.

495
00:28:21,200 --> 00:28:23,090
Just like the Wireshark shows,

496
00:28:23,090 --> 00:28:25,129
the MMC20 needs to allocate it to

497
00:28:25,129 --> 00:28:27,710
the AI system activity interface

498
00:28:27,710 --> 00:28:29,960
and IDispatch interface.

499
00:28:29,960 --> 00:28:32,750
It's friendly to the exposed development.

500
00:28:32,750 --> 00:28:35,623
So I'm going MMC20 is
the best choice for us.

501
00:28:37,290 --> 00:28:39,640
So let's check try out together.

502
00:28:39,640 --> 00:28:42,550
The XLAB/Attacker is a normal domain user

503
00:28:42,550 --> 00:28:44,880
without any special privileges.

504
00:28:44,880 --> 00:28:47,807
I can talk through the
Exchange1 or sprint back,

505
00:28:47,807 --> 00:28:52,434
But Exchange1 was indicated
to me as it's our $1 account.

506
00:28:52,434 --> 00:28:55,933
Then the Exchange1 sends out
the authentication message

507
00:28:55,933 --> 00:28:58,020
to the administrators SMB server

508
00:28:58,020 --> 00:29:00,450
also hosted by the attacker,

509
00:29:00,450 --> 00:29:03,520
as there can be multiple ATR modifications

510
00:29:03,520 --> 00:29:05,120
in a SMB connection.

511
00:29:05,120 --> 00:29:07,010
So the attacker doesn't need

512
00:29:07,010 --> 00:29:08,626
to send a second profile request

513
00:29:08,626 --> 00:29:11,730
to trigger a second NTLM authentication.

514
00:29:11,730 --> 00:29:14,310
Attacker can de-activate a relay first

515
00:29:14,310 --> 00:29:16,373
NTLM authentication to the DCOM

516
00:29:16,373 --> 00:29:20,050
ISystemActivator interface
on your Exchange2

517
00:29:20,050 --> 00:29:22,580
and CreateRemoteInstance to active

518
00:29:22,580 --> 00:29:25,330
the remotes MMC20 Application Object

519
00:29:25,330 --> 00:29:29,300
and relay the second NTLM authentication

520
00:29:29,300 --> 00:29:31,470
to the DCOM IDispatch interface.

521
00:29:31,470 --> 00:29:33,650
And find their ExecuteShellCommand

522
00:29:33,650 --> 00:29:36,783
and invoke h to execute commands remotely.

523
00:29:39,670 --> 00:29:40,813
Here's a demo.

524
00:29:46,670 --> 00:29:48,953
There's no calculator
process on Exchange1.

525
00:29:54,185 --> 00:29:58,185
And there is no calculator
process on Exchange2.

526
00:30:05,990 --> 00:30:08,993
First, start attacking Exchange2.

527
00:30:16,510 --> 00:30:18,780
Attacker can trigger an SMB connection

528
00:30:18,780 --> 00:30:21,173
from Exchange1 to
attacker with sprint back.

529
00:30:34,920 --> 00:30:39,297
Now the calculator has been
a executed on Exchange2.

530
00:30:43,400 --> 00:30:47,157
Next, we'll start attacking Exchange1.

531
00:30:52,749 --> 00:30:57,749
Trigger an SMB connection
from Exchange2 to attacker.

532
00:31:01,077 --> 00:31:03,903
And calculator has been
executed on Exchange1.

533
00:31:07,900 --> 00:31:12,900
Actually, this vulnerability
exists in Windows DCOM.

534
00:31:13,280 --> 00:31:14,880
Notes in the Exchange Server.

535
00:31:14,880 --> 00:31:17,930
But we can use it to
attack external servers.

536
00:31:17,930 --> 00:31:19,700
This vulnerability has been fixed

537
00:31:19,700 --> 00:31:24,083
and assigned CVE-2021-26414.

538
00:31:25,000 --> 00:31:26,580
But, after installing the patch,

539
00:31:26,580 --> 00:31:28,543
you will need to manually to set

540
00:31:29,846 --> 00:31:33,330
RequireIntegrityActivationAuthenticationLevel

541
00:31:33,330 --> 00:31:35,347
to 1 in the registry to be enable

542
00:31:35,347 --> 00:31:37,310
the protection for DCOM.

543
00:31:37,310 --> 00:31:39,249
This protection will of course enable

544
00:31:39,249 --> 00:31:42,489
RPC_C_AUTHN_LEVEL_PKT_INTEGRITY.

545
00:31:42,489 --> 00:31:46,530
After Q4 2021, this
protection will be enabled

546
00:31:46,530 --> 00:31:47,963
by default on Windows.

547
00:31:49,140 --> 00:31:51,460
In conclusion, if you have compromised

548
00:31:51,460 --> 00:31:53,810
a normal domain accounts or domain user,

549
00:31:53,810 --> 00:31:55,180
or machine accounts,

550
00:31:55,180 --> 00:31:57,860
and if there is more than one server

551
00:31:57,860 --> 00:31:59,890
in the Active Directory,

552
00:31:59,890 --> 00:32:01,690
you can execute any commands remotely

553
00:32:01,690 --> 00:32:03,633
on this exchange server.

554
00:32:06,560 --> 00:32:09,970
RCE is only the beginning for red teams.

555
00:32:09,970 --> 00:32:12,480
This part is going to
introduced a new method

556
00:32:12,480 --> 00:32:14,680
to help you perform lateral movements

557
00:32:14,680 --> 00:32:17,590
and privilege escalation
from domain to domain

558
00:32:17,590 --> 00:32:19,833
after using the exchange server.

559
00:32:23,225 --> 00:32:26,500
(mumbles) originally thought it configures

560
00:32:26,500 --> 00:32:30,252
and grants itself extensive
Active Directory permissions,

561
00:32:30,252 --> 00:32:32,640
the permissions providers to access

562
00:32:32,640 --> 00:32:35,083
that Exchange server may ever need.

563
00:32:35,083 --> 00:32:37,353
Yeah, some privilege escalation models

564
00:32:37,353 --> 00:32:40,313
with this permission
such as abusing WriteDACL

565
00:32:40,313 --> 00:32:44,240
on a domain object and
abusing the DNS Admins group.

566
00:32:44,240 --> 00:32:47,703
As this attack passes
had been fixed in 2019.

567
00:32:48,569 --> 00:32:50,910
There are also some
lateral movement methods

568
00:32:50,910 --> 00:32:54,730
such as abusing ForceChainPassword
rights on domain users

569
00:32:54,730 --> 00:32:56,480
to force change users passwords.

570
00:32:56,480 --> 00:32:58,640
That attackers can only recover

571
00:32:58,640 --> 00:33:00,970
the victim users original passwords

572
00:33:00,970 --> 00:33:02,810
because they don't know
the plain text passwords

573
00:33:02,810 --> 00:33:04,750
of the big teams.

574
00:33:04,750 --> 00:33:08,502
Attackers could also
lose the right PSL rights

575
00:33:08,502 --> 00:33:10,718
on the mailing list and the set SPN

576
00:33:10,718 --> 00:33:15,590
on domain users and perform
the Kerberoasting attack.

577
00:33:15,590 --> 00:33:18,720
That sometimes is hard
to brute force passwords,

578
00:33:18,720 --> 00:33:21,033
user has complex password policy.

579
00:33:22,460 --> 00:33:25,100
I think that there are no easy to use

580
00:33:25,100 --> 00:33:26,267
lateral movement methods

581
00:33:26,267 --> 00:33:31,267
and no privilege escalation
methods after a service fee.

582
00:33:31,800 --> 00:33:33,863
So let's introduce a new one.

583
00:33:37,490 --> 00:33:40,680
Let us produce the Exploit Primitives.

584
00:33:40,680 --> 00:33:44,226
Firstly, suppose the
attacker already compromised

585
00:33:44,226 --> 00:33:46,820
the exchange server, he had taken a folic

586
00:33:46,820 --> 00:33:50,713
and chose the extensor
machine call to exchange$1

587
00:33:50,713 --> 00:33:53,608
taken down the user hash of the exchange$1

588
00:33:53,608 --> 00:33:56,130
and anything for exchange$1.

589
00:33:56,130 --> 00:34:00,692
The exchange$1 is a member
of a central state subsystem.

590
00:34:00,692 --> 00:34:03,630
And Exchange Trusted Subsystem

591
00:34:03,630 --> 00:34:06,200
is a member of self awareness permission.

592
00:34:06,200 --> 00:34:08,250
Essentially this
permission can add a member

593
00:34:08,250 --> 00:34:11,040
to Group Policy create owners

594
00:34:11,040 --> 00:34:13,800
and assume trustees to our systems,

595
00:34:13,800 --> 00:34:15,800
so the attacker can add users

596
00:34:15,800 --> 00:34:20,693
to this three high privileged,
high privileged groups.

597
00:34:22,190 --> 00:34:24,980
The members of exchange
windows permission group

598
00:34:24,980 --> 00:34:28,030
can create new organizational units

599
00:34:28,030 --> 00:34:29,600
in Active Directory.

600
00:34:29,600 --> 00:34:33,860
And the members of Group
Policy credit owners group

601
00:34:33,860 --> 00:34:37,863
can create new group policy
objects in Active Directory.

602
00:34:39,553 --> 00:34:42,950
The members of exchange
witness permission group

603
00:34:42,950 --> 00:34:46,190
has rights to distinguish
the name, write name,

604
00:34:46,190 --> 00:34:48,600
write name and delete object.

605
00:34:48,600 --> 00:34:52,300
Rights on domain owners
and domain computers.

606
00:34:52,300 --> 00:34:54,380
With this right, exchange
windows permission

607
00:34:54,380 --> 00:34:57,800
group will carry (unintelligible) out of

608
00:34:57,800 --> 00:35:00,143
domain computers to other computers.

609
00:35:01,770 --> 00:35:04,880
Next, let's design a new
lateral movement model.

610
00:35:04,880 --> 00:35:07,610
First, the attacker can add himself

611
00:35:07,610 --> 00:35:09,377
to exchange trusted subsystem group,

612
00:35:09,377 --> 00:35:12,330
on the Group Policy creator owners group.

613
00:35:12,330 --> 00:35:14,730
They then have the okay
to the same permissions

614
00:35:14,730 --> 00:35:17,373
as this two high privileged groups.

615
00:35:18,310 --> 00:35:21,985
Then the attacker can create
an Evil OU and an Evil GPO.

616
00:35:21,985 --> 00:35:24,160
Next, they can create a gP Link

617
00:35:24,160 --> 00:35:26,680
from the Evil OU to the Evil GPO.

618
00:35:26,680 --> 00:35:29,610
This allows policies in the Evil GPO

619
00:35:29,610 --> 00:35:31,700
to take effort out of Evil OU.

620
00:35:32,991 --> 00:35:36,450
As an attacker, you need
a User Immediate Task

621
00:35:36,450 --> 00:35:38,060
to the Evil GPO.

622
00:35:38,060 --> 00:35:42,380
Which is guide to a
skilled attackers commands.

623
00:35:42,380 --> 00:35:44,453
Here is problem calculator.

624
00:35:46,060 --> 00:35:48,260
That attacker can move the victim user

625
00:35:48,260 --> 00:35:50,700
to their Evil OU.

626
00:35:50,700 --> 00:35:54,020
And just wait for the
group policy to refresh.

627
00:35:54,020 --> 00:35:56,061
When a group policy is refreshed,

628
00:35:56,061 --> 00:35:58,513
the victim will pop up a calculator.

629
00:35:59,850 --> 00:36:01,780
The waiting time will be longer

630
00:36:01,780 --> 00:36:03,790
than the GPO refresh time

631
00:36:03,790 --> 00:36:06,760
because to GPO group policy engine

632
00:36:06,760 --> 00:36:10,090
need to sync the audio
information of the victim

633
00:36:10,090 --> 00:36:12,740
with the Active Directory firstly.

634
00:36:12,740 --> 00:36:14,850
After the attack, the attacker can move

635
00:36:14,850 --> 00:36:18,317
their victim to his
original OU or they remove

636
00:36:18,317 --> 00:36:21,233
their evil OU and then their evil GPO.

637
00:36:23,970 --> 00:36:25,643
I did not find a writing tool

638
00:36:25,643 --> 00:36:27,570
that they can manipulate
GPO remote trends.

639
00:36:27,570 --> 00:36:30,260
So I created a new one called SharpGPO.

640
00:36:30,260 --> 00:36:32,310
You can find it in my GitHub.

641
00:36:32,310 --> 00:36:34,947
We can use SharpGPO to create or use GPO's

642
00:36:34,947 --> 00:36:37,920
and gP Links in Active Directory.

643
00:36:37,920 --> 00:36:41,940
We can use SharpGPOAbuse to
create malicious group policies

644
00:36:41,940 --> 00:36:44,077
such as user immediate tasks

645
00:36:44,077 --> 00:36:46,453
and computer immediate tasks.

646
00:36:49,000 --> 00:36:49,860
Here's a demo.

647
00:36:49,860 --> 00:36:52,470
I will show how the
attacker moves laterally

648
00:36:52,470 --> 00:36:56,553
to their victim and pops
calculator as their victim user.

649
00:36:59,780 --> 00:37:02,443
The computer here on the
left side is the victim.

650
00:37:03,384 --> 00:37:06,063
The computer on the right
side is the attacker.

651
00:37:08,730 --> 00:37:11,693
Now the attacker is a
member of domain users.

652
00:37:14,926 --> 00:37:19,164
The attacker can add himself
to high privileged groups

653
00:37:19,164 --> 00:37:22,223
if he has compromised exchange$1.

654
00:37:37,330 --> 00:37:40,170
Now the attacker has been added to this

655
00:37:40,170 --> 00:37:42,653
two high privileged groups.

656
00:37:49,129 --> 00:37:53,123
The attacker can create an
evil OU and an evil GPO.

657
00:38:02,820 --> 00:38:06,913
And link the evil GPO to their evil OU.

658
00:38:14,557 --> 00:38:17,185
And add a malicious user immediate task

659
00:38:17,185 --> 00:38:18,683
to their evil GPO.

660
00:38:25,050 --> 00:38:27,643
Next, move the victim to the Evil OU.

661
00:38:31,390 --> 00:38:34,570
And just wait for the
group policy to refresh

662
00:38:34,570 --> 00:38:37,333
or wait for the victim to log in again.

663
00:38:44,803 --> 00:38:47,923
When our victim logs in successfully,

664
00:38:48,810 --> 00:38:50,763
the group policy will be refreshed.

665
00:38:58,510 --> 00:39:01,903
As a calculator is executed.

666
00:39:03,947 --> 00:39:07,253
After the attack, the
attacker can move victim

667
00:39:07,253 --> 00:39:09,760
to his original OU.

668
00:39:09,760 --> 00:39:13,093
And then remove the evil OU and evil GPO.

669
00:39:16,710 --> 00:39:19,730
You may ask how escalate our
privilege to domain admins?

670
00:39:19,730 --> 00:39:22,230
How I move their domain
admins to the evil OU.

671
00:39:22,230 --> 00:39:26,040
The answer is; we can't
because of the AdminSDHolder.

672
00:39:26,040 --> 00:39:29,790
AdminSDHolder provides
a permission template

673
00:39:29,790 --> 00:39:32,640
for the protected accounts and groups.

674
00:39:32,640 --> 00:39:34,210
All domain admins have

675
00:39:34,210 --> 00:39:36,850
their admin account attribute set to 1.

676
00:39:36,850 --> 00:39:40,633
Which means they are
protected by AdminSDHolder.

677
00:39:41,580 --> 00:39:44,697
Well a new domain admins
created in the Active Directory

678
00:39:44,697 --> 00:39:46,568
the exchange does have permission

679
00:39:46,568 --> 00:39:48,023
to move it to the Evil OU.

680
00:39:49,140 --> 00:39:53,160
By about, 60 minutes later,

681
00:39:53,160 --> 00:39:55,390
the permission will be removed

682
00:39:55,390 --> 00:39:57,330
because of AdminSDhHolder.

683
00:39:57,330 --> 00:39:59,325
So we'll catch a malicious group policies

684
00:39:59,325 --> 00:40:01,330
to permit admins.

685
00:40:01,330 --> 00:40:03,940
Unfortunately, the coming of attacks

686
00:40:03,940 --> 00:40:06,990
in domain controllers
group are not protected

687
00:40:06,990 --> 00:40:07,943
by AdminSDHolder.

688
00:40:12,270 --> 00:40:16,470
So, the attacker can
create a new OU, a new GPO,

689
00:40:16,470 --> 00:40:18,660
and create a gP Link as before.

690
00:40:18,660 --> 00:40:22,027
Next, add a malicious
computer immediate task

691
00:40:22,027 --> 00:40:24,770
to the evil computer GPO.

692
00:40:24,770 --> 00:40:28,590
Then move the domain controller
to the evil computer OU,

693
00:40:28,590 --> 00:40:31,540
and just wait for the
group policy to refresh

694
00:40:31,540 --> 00:40:33,260
on the domain controller.

695
00:40:33,260 --> 00:40:35,266
When group policy is refreshed,

696
00:40:35,266 --> 00:40:38,420
a calculator will be
executed on domain controller

697
00:40:38,420 --> 00:40:40,390
with the system accounts.

698
00:40:40,390 --> 00:40:42,940
Now the attacker can't fully control

699
00:40:42,940 --> 00:40:47,390
the domain controller under
entire Active Directory.

700
00:40:47,390 --> 00:40:50,220
If you are worried about that,

701
00:40:50,220 --> 00:40:53,050
moving the domain controller to a new OU

702
00:40:53,050 --> 00:40:56,320
will affect the functionality of it.

703
00:40:56,320 --> 00:40:57,670
You can apply so original

704
00:40:57,670 --> 00:41:00,470
or your default domain controller policy

705
00:41:00,470 --> 00:41:02,760
to your computer OU.

706
00:41:02,760 --> 00:41:05,987
After the attack, the attacker can move

707
00:41:05,987 --> 00:41:08,370
the domain controller to its original OU.

708
00:41:08,370 --> 00:41:11,613
And you remove the evil
OU and the evil GPO.

709
00:41:12,942 --> 00:41:13,880
Here's the demo.

710
00:41:13,880 --> 00:41:15,480
I will show an attacker that moves

711
00:41:15,480 --> 00:41:17,710
laterally to the domain controller.

712
00:41:17,710 --> 00:41:20,610
I post calculators with
the system account.

713
00:41:23,550 --> 00:41:26,543
The computer on the left side
is the domain controller.

714
00:41:30,290 --> 00:41:34,380
Now there is no calculator
process under domain controller.

715
00:41:40,480 --> 00:41:41,813
Next we want to look to check

716
00:41:41,813 --> 00:41:44,153
whether the calculator is executed.

717
00:41:46,579 --> 00:41:50,237
The computer on the right
side is the attacker.

718
00:41:54,470 --> 00:41:56,893
Now the attacker is a
member of domain users.

719
00:41:59,510 --> 00:42:02,940
Attacker can add himself
to high-privileged groups

720
00:42:02,940 --> 00:42:05,890
if he has compromised exchange$1.

721
00:42:21,301 --> 00:42:23,870
Now the attacker has been added to these

722
00:42:23,870 --> 00:42:25,753
two high privileged groups.

723
00:42:41,260 --> 00:42:45,388
Next, the attacker can
create a evil computer OU

724
00:42:45,388 --> 00:42:50,388
and a evil computer GPO.

725
00:42:59,096 --> 00:43:01,402
Add the link to the EvilComputerGPO

726
00:43:01,402 --> 00:43:03,235
to the EvilComputerOU.

727
00:43:14,120 --> 00:43:18,380
Next, add our malicious
computer immediate task

728
00:43:18,380 --> 00:43:20,380
to the EvilComputerGPO.

729
00:43:29,065 --> 00:43:33,648
And move their domain controller
to the EvilComputerOU.

730
00:43:36,765 --> 00:43:39,600
Just wait for the group policy to refresh

731
00:43:39,600 --> 00:43:40,850
on the domain controller.

732
00:43:43,020 --> 00:43:44,993
About 30 minutes later.

733
00:43:47,410 --> 00:43:50,603
The calculator is executed
with the system account.

734
00:43:53,690 --> 00:43:55,347
After the attack, the attacker can move

735
00:43:55,347 --> 00:43:58,230
the domain controller to its original OU,

736
00:43:58,230 --> 00:44:02,250
and remove their EvilComputerOU
and EvilComputerGPO.

737
00:44:05,410 --> 00:44:07,000
Here's the mitigation,

738
00:44:07,000 --> 00:44:08,600
you can switch your external server

739
00:44:08,600 --> 00:44:11,810
to Active Directory
split permissions model.

740
00:44:11,810 --> 00:44:15,654
This model effectively
limits our exchange rights

741
00:44:15,654 --> 00:44:17,260
in Active Directory.

742
00:44:17,260 --> 00:44:20,232
Attackers cannot use the
methods we talked about

743
00:44:20,232 --> 00:44:23,243
to perform lateral movement
and privilege escalation,

744
00:44:25,750 --> 00:44:27,403
Conclusion and takeaways.

745
00:44:30,494 --> 00:44:32,280
For red teams, in this talk,

746
00:44:32,280 --> 00:44:35,143
I discussed the two new
Exchange Server vulnerabilities.

747
00:44:36,310 --> 00:44:39,760
The first one, we started with
arbitrary mailbox takeover,

748
00:44:39,760 --> 00:44:42,840
attackers can read emails,
download attachments,

749
00:44:42,840 --> 00:44:45,403
send emails, etc. as any scenario.

750
00:44:46,610 --> 00:44:48,880
The second one can lead
to remote code execution

751
00:44:48,880 --> 00:44:50,800
on exchange servers.

752
00:44:50,800 --> 00:44:52,860
I also introduced a new method

753
00:44:52,860 --> 00:44:54,390
to help your lateral movement

754
00:44:54,390 --> 00:44:56,930
and help you escalate your privileges

755
00:44:56,930 --> 00:44:59,793
to domain admins, after exchange RC.

756
00:45:01,490 --> 00:45:03,250
For blue teams, you'll need to patch all

757
00:45:03,250 --> 00:45:05,050
your vulnerable Exchange Servers

758
00:45:05,050 --> 00:45:08,960
and the Windows Servers
they are running on,

759
00:45:08,960 --> 00:45:10,090
and if possible,

760
00:45:10,090 --> 00:45:12,590
switch your Exchange
Servers to Active Directory

761
00:45:12,590 --> 00:45:15,560
split permissions model
to prevent attackers

762
00:45:15,560 --> 00:45:17,623
from escalating privileges.

763
00:45:18,654 --> 00:45:21,570
Restrict NTLM usage as much as possible,

764
00:45:21,570 --> 00:45:25,763
to prevent some NTLM related
attacks, it's also useful.

765
00:45:27,660 --> 00:45:29,417
Thanks to all the security researchers

766
00:45:29,417 --> 00:45:32,960
and their amazing work,
their work inspired me a lot.

767
00:45:32,960 --> 00:45:35,700
And also thanks to MSRC
for their hard work

768
00:45:35,700 --> 00:45:37,777
in fixing these vulnerabilities.

769
00:45:41,815 --> 00:45:44,148
Okay, thanks for listening.

