1
00:00:00,400 --> 00:00:01,240
- [Instructor] So for this demo,

2
00:00:01,240 --> 00:00:03,710
we built an IoT security camera device.

3
00:00:03,710 --> 00:00:05,390
It takes pictures every few minutes,

4
00:00:05,390 --> 00:00:06,900
just like a real security camera

5
00:00:06,900 --> 00:00:09,830
and posts them to a
publicly accessible website.

6
00:00:09,830 --> 00:00:10,663
So the only thing,

7
00:00:10,663 --> 00:00:13,210
keeping an attacker from
being able to view your photos

8
00:00:13,210 --> 00:00:14,350
is that each file is named

9
00:00:14,350 --> 00:00:16,700
with this long random file name here,

10
00:00:16,700 --> 00:00:18,280
chosen by the camera.

11
00:00:18,280 --> 00:00:19,410
Now, before you go thinking

12
00:00:19,410 --> 00:00:21,640
that this is unrealistically vulnerable,

13
00:00:21,640 --> 00:00:22,890
this is how Discord works

14
00:00:22,890 --> 00:00:24,980
and lots of other applications like it.

15
00:00:24,980 --> 00:00:26,500
Anytime you take a photo

16
00:00:26,500 --> 00:00:28,480
and send it to a friend over Discord,

17
00:00:28,480 --> 00:00:30,080
it's publicly accessible.

18
00:00:30,080 --> 00:00:32,060
The long random file
name is the only thing

19
00:00:32,060 --> 00:00:34,610
that's keeping people
from seeing your photos.

20
00:00:34,610 --> 00:00:35,630
Our device, however,

21
00:00:35,630 --> 00:00:40,020
is built using Contiki-NG, a
popular IoT operating system.

22
00:00:40,020 --> 00:00:42,700
When you call the operating
system to get a random number,

23
00:00:42,700 --> 00:00:45,190
it will use the hardware RNG on board,

24
00:00:45,190 --> 00:00:49,100
but only to see the insecure
libsyn rand function.

25
00:00:49,100 --> 00:00:51,030
So we don't know what the seed is,

26
00:00:51,030 --> 00:00:53,535
but we don't have to
because we can derive it.

27
00:00:53,535 --> 00:00:55,040
So suppose one day,

28
00:00:55,040 --> 00:00:56,570
you take a photo with your camera

29
00:00:56,570 --> 00:00:58,220
and post it on social media.

30
00:00:58,220 --> 00:01:00,200
Wow. What a cool camera you bought!

31
00:01:00,200 --> 00:01:01,340
How fun!

32
00:01:01,340 --> 00:01:02,380
But what you didn't know is

33
00:01:02,380 --> 00:01:04,000
that an attacker can use this file name

34
00:01:04,000 --> 00:01:05,960
to derive with the original seed was

35
00:01:05,960 --> 00:01:07,130
that generated it.

36
00:01:07,130 --> 00:01:10,430
That's because that's how the
libsyn rand function works.

37
00:01:10,430 --> 00:01:12,270
Our attacker here uses Untwister

38
00:01:12,270 --> 00:01:13,560
to find the seed.

39
00:01:13,560 --> 00:01:14,870
Once they have,

40
00:01:14,870 --> 00:01:17,280
they can use that seed
to determine every past

41
00:01:17,280 --> 00:01:19,580
and future value from the R and G.

42
00:01:19,580 --> 00:01:22,270
So our attacker can just
plug in some of those numbers

43
00:01:22,270 --> 00:01:23,640
back into the camera website

44
00:01:23,640 --> 00:01:24,970
and view every photo

45
00:01:24,970 --> 00:01:27,040
that the camera has ever taken,

46
00:01:27,040 --> 00:01:28,953
even if they've never been shared before.

