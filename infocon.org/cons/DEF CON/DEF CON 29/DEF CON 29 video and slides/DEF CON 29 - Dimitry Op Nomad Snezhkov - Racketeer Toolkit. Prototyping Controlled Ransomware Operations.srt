1
00:00:02,250 --> 00:00:03,090
- Hello Defcon,

2
00:00:03,090 --> 00:00:04,120
welcome to my talk,

3
00:00:04,120 --> 00:00:08,360
Racketeer Prototyping Control
Ransomware Operations.

4
00:00:08,360 --> 00:00:09,940
My name is Dimitry Snezhkov.

5
00:00:09,940 --> 00:00:13,780
I work at Protiviti on attack
and penetration testing team,

6
00:00:13,780 --> 00:00:15,830
we have a chance to do tooling,

7
00:00:15,830 --> 00:00:18,340
offensive research and automation.

8
00:00:18,340 --> 00:00:20,970
And today we're gonna
talk about ransomware.

9
00:00:20,970 --> 00:00:23,100
Specifically we're gonna talk about

10
00:00:23,100 --> 00:00:27,100
simulating the lifecycle of
ransomware, injecting into it,

11
00:00:27,100 --> 00:00:29,850
understanding it and emulating the steps

12
00:00:29,850 --> 00:00:32,713
that need to happen to properly test it.

13
00:00:33,870 --> 00:00:36,250
Our talk is gonna be split in two phases.

14
00:00:36,250 --> 00:00:37,083
The first phase,

15
00:00:37,083 --> 00:00:39,470
we're gonna talk about the problem,

16
00:00:39,470 --> 00:00:43,470
construction of a solution
from architectural perspective.

17
00:00:43,470 --> 00:00:47,700
And then the second part of the talk

18
00:00:47,700 --> 00:00:50,530
is going to be the demo where we dive in

19
00:00:50,530 --> 00:00:52,200
how the operation happens,

20
00:00:52,200 --> 00:00:56,050
what makes the Racketeer toolkit tick.

21
00:00:56,050 --> 00:00:56,910
Let's start.

22
00:00:56,910 --> 00:01:00,360
So ransomware is definitely
a technical issue.

23
00:01:00,360 --> 00:01:02,050
It's implemented in technology,

24
00:01:02,050 --> 00:01:04,940
but what fascinates me about ransomware

25
00:01:04,940 --> 00:01:07,750
is it's just a, such
a good business model.

26
00:01:07,750 --> 00:01:10,240
It is just an efficient
economic exit activity

27
00:01:10,240 --> 00:01:13,510
from cyber attack.

28
00:01:13,510 --> 00:01:17,460
Imagine that the bar of entry
is low on the technical side

29
00:01:17,460 --> 00:01:20,260
and tooling is available,

30
00:01:20,260 --> 00:01:23,450
and the encryption of the files,

31
00:01:23,450 --> 00:01:25,940
locking of the files can
happen almost immediately

32
00:01:25,940 --> 00:01:29,700
once the dropper actually
gets onto the box.

33
00:01:29,700 --> 00:01:34,020
So you don't really need
as an ransomware deployer

34
00:01:34,020 --> 00:01:37,190
actually go to the second or
third tier in the network,

35
00:01:37,190 --> 00:01:38,160
on the customer network,

36
00:01:38,160 --> 00:01:40,860
you can actually monetize
right there and then.

37
00:01:40,860 --> 00:01:42,670
Also, all the features

38
00:01:42,670 --> 00:01:46,150
that the cost of deploying
a ransomware is much smaller

39
00:01:46,150 --> 00:01:49,220
than a lot of other cyber offensives

40
00:01:49,220 --> 00:01:51,380
and with advent

41
00:01:51,380 --> 00:01:55,970
or actually use of crypto
monetization activation path

42
00:01:55,970 --> 00:01:57,150
is fast, right?

43
00:01:57,150 --> 00:02:00,810
You can actually say
that even the attribution

44
00:02:00,810 --> 00:02:04,850
is getting much more
fragmented than before.

45
00:02:04,850 --> 00:02:08,240
And obviously with such a business model,

46
00:02:08,240 --> 00:02:10,810
there's no wonder that ransomware

47
00:02:10,810 --> 00:02:15,810
has grown about 330%
year over year growth.

48
00:02:16,220 --> 00:02:20,760
So if that's such a good business model,

49
00:02:20,760 --> 00:02:23,310
how do we emulate the testing for it?

50
00:02:23,310 --> 00:02:25,170
How do we inject into this

51
00:02:25,170 --> 00:02:28,900
and how do we make sure
we can actually trace

52
00:02:28,900 --> 00:02:29,733
what's going on,

53
00:02:29,733 --> 00:02:33,450
understand its capabilities
and react to it?

54
00:02:33,450 --> 00:02:36,130
Well, traditionally,
obviously we need to contain,

55
00:02:36,130 --> 00:02:40,820
we need to keep on with
preventative and detection controls

56
00:02:40,820 --> 00:02:45,080
because ransomware is just
another variation of offensive

57
00:02:45,080 --> 00:02:47,045
on your network.

58
00:02:47,045 --> 00:02:49,390
You absolutely need to go across teams

59
00:02:49,390 --> 00:02:51,273
for disaster recovery drills,

60
00:02:52,320 --> 00:02:54,230
do your incident response triage.

61
00:02:54,230 --> 00:02:58,910
And one more thing is to
add external negotiation

62
00:02:58,910 --> 00:03:00,630
with the ransomware party

63
00:03:00,630 --> 00:03:03,330
as part of your tabletop exercises.

64
00:03:03,330 --> 00:03:05,240
But so just like everything else,

65
00:03:05,240 --> 00:03:08,130
a lot of times you can
detect or prevent things,

66
00:03:08,130 --> 00:03:12,190
you can actually minimize
mean time between failures.

67
00:03:12,190 --> 00:03:16,810
And this is what racketeer
tooling is attempting to do,

68
00:03:16,810 --> 00:03:17,643
is achieve,

69
00:03:17,643 --> 00:03:20,920
is essentially trying to emulate the path

70
00:03:20,920 --> 00:03:22,990
and the lifecycle of ransomware

71
00:03:22,990 --> 00:03:26,390
and allow the teams to kinda
get in the middle of that.

72
00:03:26,390 --> 00:03:29,830
And the way you do this
is obviously you need

73
00:03:29,830 --> 00:03:33,630
to know your assets and data
that ransomware may target

74
00:03:33,630 --> 00:03:36,590
and you need to perform
simulation and feedback.

75
00:03:36,590 --> 00:03:38,180
And that simulation and feedback

76
00:03:38,180 --> 00:03:40,180
is what we're gonna talk about.

77
00:03:40,180 --> 00:03:41,500
But before we move on,

78
00:03:41,500 --> 00:03:44,240
let's just distill the
lifecycle of ransomware

79
00:03:44,240 --> 00:03:46,300
into three things literally.

80
00:03:46,300 --> 00:03:48,330
Is the persistence where the dropper

81
00:03:48,330 --> 00:03:51,570
actually executes the task on the assets,

82
00:03:51,570 --> 00:03:54,220
be it files or anything else.

83
00:03:54,220 --> 00:03:56,680
Then there is an extortion capability

84
00:03:56,680 --> 00:04:00,220
which may or may not happen in sequence

85
00:04:00,220 --> 00:04:02,600
and you can have offline negotiation,

86
00:04:02,600 --> 00:04:07,570
you can have online kinda
IOCs popped in that says,

87
00:04:07,570 --> 00:04:11,650
hey you have t-minus 48
hours to pay us or else...

88
00:04:11,650 --> 00:04:13,779
And then from the ransomware perspective,

89
00:04:13,779 --> 00:04:17,110
there's a destage or decryption capability

90
00:04:17,110 --> 00:04:20,583
that has to happen and
potentially cleanup, right?

91
00:04:20,583 --> 00:04:23,680
If you care about leaving
the network intact,

92
00:04:23,680 --> 00:04:26,240
not causing denial of service.

93
00:04:26,240 --> 00:04:30,210
And so the objective of
racketeer tooling is to refine

94
00:04:30,210 --> 00:04:33,080
that process of injecting
into this lifecycle

95
00:04:33,080 --> 00:04:36,370
to help teams on whatever
side of the story,

96
00:04:36,370 --> 00:04:39,320
whether it's the tabletop to support

97
00:04:39,320 --> 00:04:41,400
the incident response and triage,

98
00:04:41,400 --> 00:04:44,660
whether it's providing optics into TTPs

99
00:04:44,660 --> 00:04:49,280
and actually doing collection
of indicators of compromise,

100
00:04:49,280 --> 00:04:51,773
they can, the teams can learn from,

101
00:04:52,670 --> 00:04:55,960
and obviously play
towards the red team side

102
00:04:55,960 --> 00:04:59,320
where the objective is to
implement the last mile delivery

103
00:04:59,320 --> 00:05:02,963
of ransomware in your objectives
through your campaigns.

104
00:05:03,860 --> 00:05:06,323
Obviously, for us as testers,

105
00:05:07,340 --> 00:05:10,850
we have to abide by SLAs
and it's good practice

106
00:05:10,850 --> 00:05:13,600
to keep the network intact.

107
00:05:13,600 --> 00:05:16,990
Not perform denial of service on it

108
00:05:16,990 --> 00:05:18,710
or cause denial in our service.

109
00:05:18,710 --> 00:05:22,360
And so this is why we're
calling our toolkit

110
00:05:22,360 --> 00:05:24,500
controlled prototype of ransomware, right?

111
00:05:24,500 --> 00:05:27,500
It's a controlled run where
we have precise targets,

112
00:05:27,500 --> 00:05:31,910
where you have kind of a
balance of stealth and openness.

113
00:05:31,910 --> 00:05:35,760
So you can both showcase the capability,

114
00:05:35,760 --> 00:05:39,303
but also open it up to defenders
to kind of inspect things.

115
00:05:40,200 --> 00:05:42,960
So if it is a ransomware simulation,

116
00:05:42,960 --> 00:05:46,030
what technical features
does it need to have?

117
00:05:46,030 --> 00:05:47,890
Well, as we talked about before,

118
00:05:47,890 --> 00:05:50,630
we need to be correct
and reliable in locking

119
00:05:50,630 --> 00:05:53,950
and unlocking assets
because we went to make sure

120
00:05:53,950 --> 00:05:55,393
that the customer stays up,

121
00:05:58,380 --> 00:06:03,380
real-time encryption versus
offline decryption of assets.

122
00:06:03,510 --> 00:06:06,570
Very useful because
there are circumstances

123
00:06:06,570 --> 00:06:07,810
in ransomware campaigns

124
00:06:07,810 --> 00:06:11,680
where decryption and
encryption happens separately,

125
00:06:11,680 --> 00:06:12,810
or the agent dies,

126
00:06:12,810 --> 00:06:14,720
and you should be able
to bring the assets back

127
00:06:14,720 --> 00:06:17,433
into the unencrypted
form, as much as you can.

128
00:06:18,330 --> 00:06:22,120
Obviously, dormancy and
activation dropping the agent

129
00:06:22,120 --> 00:06:26,040
on the network does not
mean it's gonna get active

130
00:06:26,040 --> 00:06:28,040
and start encrypting things, right?

131
00:06:28,040 --> 00:06:29,500
We have to manage that.

132
00:06:29,500 --> 00:06:31,950
And because of that, we
have to have flexibility

133
00:06:31,950 --> 00:06:34,700
in communications and specifying targets,

134
00:06:34,700 --> 00:06:35,840
and all that good stuff.

135
00:06:35,840 --> 00:06:37,453
So let, just try to build one.

136
00:06:38,700 --> 00:06:42,280
What would be the good
agent for our purposes?

137
00:06:42,280 --> 00:06:44,100
Well, let's just start get Windows

138
00:06:44,100 --> 00:06:46,240
because it's the most prevalent

139
00:06:46,240 --> 00:06:48,240
kind of target for
ransomware, historically,

140
00:06:48,240 --> 00:06:50,110
obviously that can be adapted to Linux

141
00:06:50,110 --> 00:06:52,193
or cross-platform.

142
00:06:53,470 --> 00:06:55,060
But in this case,

143
00:06:55,060 --> 00:06:57,420
we're gonna take a look at
encrypting the local files

144
00:06:57,420 --> 00:07:01,730
on Windows and also encrypting
remote files on Windows,

145
00:07:01,730 --> 00:07:04,440
by going across the network.

146
00:07:04,440 --> 00:07:07,520
For example, you can
remote into a different box

147
00:07:07,520 --> 00:07:10,050
through that agent and
kinda do the encryption

148
00:07:10,050 --> 00:07:11,500
of assets there.

149
00:07:11,500 --> 00:07:13,840
And obviously we need to
have control of execution

150
00:07:13,840 --> 00:07:15,140
as we've mentioned before.

151
00:07:16,440 --> 00:07:19,280
The other technical tactical
features that we want to have

152
00:07:19,280 --> 00:07:23,230
in this agent is lifetime key management

153
00:07:23,230 --> 00:07:24,470
and key generation.

154
00:07:24,470 --> 00:07:26,210
Has to happen offline

155
00:07:26,210 --> 00:07:27,960
as far as generation because of

156
00:07:28,810 --> 00:07:30,560
both stealth and convenience

157
00:07:30,560 --> 00:07:33,140
if you want to have offline
capability to decrypt

158
00:07:33,140 --> 00:07:36,000
the assets, you should be able to do that.

159
00:07:36,000 --> 00:07:38,380
And then we work through policies,

160
00:07:38,380 --> 00:07:40,300
we load policies into the agent.

161
00:07:40,300 --> 00:07:42,330
The policies have to be flexible.

162
00:07:42,330 --> 00:07:44,280
They need to carry profiles with them,

163
00:07:44,280 --> 00:07:46,760
as far as how you connect to the box,

164
00:07:46,760 --> 00:07:48,480
what user ID are you using,

165
00:07:48,480 --> 00:07:51,030
how do you shield credentials?

166
00:07:51,030 --> 00:07:52,570
All that good stuff.

167
00:07:52,570 --> 00:07:54,680
We mentioned offline asset recovery

168
00:07:54,680 --> 00:07:56,730
and because of that,

169
00:07:56,730 --> 00:08:00,820
we actually have an operation
on the hub and spoke model

170
00:08:00,820 --> 00:08:03,350
where a commander accepts the agent

171
00:08:03,350 --> 00:08:04,823
and then manages it there.

172
00:08:05,780 --> 00:08:10,780
So from the construction
of those features,

173
00:08:10,790 --> 00:08:11,960
what else?

174
00:08:11,960 --> 00:08:14,640
We have to have communication emulation,

175
00:08:14,640 --> 00:08:17,380
how ransomware usually interacts,

176
00:08:17,380 --> 00:08:20,000
obviously encryption
non-transmission layer,

177
00:08:20,000 --> 00:08:24,120
but also application level
message encryption for the agent.

178
00:08:24,120 --> 00:08:25,400
That's become very prevalent

179
00:08:25,400 --> 00:08:29,260
and we need to be able
to kind inject into that.

180
00:08:29,260 --> 00:08:33,040
It operates on or emulates an ransomware

181
00:08:33,040 --> 00:08:35,640
that does arrest communication,

182
00:08:35,640 --> 00:08:39,170
that your pub/sub type of deal,

183
00:08:39,170 --> 00:08:43,180
where you come in and ask for the task,

184
00:08:43,180 --> 00:08:45,850
execute it, upload the
results and whatnot, right?

185
00:08:45,850 --> 00:08:48,690
So everything is sort of
distributed in this way.

186
00:08:48,690 --> 00:08:49,800
What else do we need to do?

187
00:08:49,800 --> 00:08:52,240
Well, we mentioned the policy,

188
00:08:52,240 --> 00:08:54,150
but it also needs to be hot patching.

189
00:08:54,150 --> 00:08:57,120
So we need to be able
to encrypt the assets,

190
00:08:57,120 --> 00:08:59,550
but we also need to be able to back out

191
00:08:59,550 --> 00:09:00,670
from the same policy,

192
00:09:00,670 --> 00:09:03,920
so we don't lose correlation of the keys.

193
00:09:03,920 --> 00:09:08,280
Again, real-time or remote,
whichever the case may be,

194
00:09:08,280 --> 00:09:10,040
if we are testing customers

195
00:09:10,040 --> 00:09:12,100
and we are soliciting for credentials,

196
00:09:12,100 --> 00:09:14,020
if we need to, for example,

197
00:09:14,020 --> 00:09:17,783
impersonate the user to go to
a remote box on the network,

198
00:09:18,670 --> 00:09:21,770
IE laterally move to it.

199
00:09:21,770 --> 00:09:26,770
We want to make sure we put
security on credentials, right?

200
00:09:26,960 --> 00:09:29,280
We don't want a clear text crass.

201
00:09:29,280 --> 00:09:32,070
So we're doing some encryption

202
00:09:32,070 --> 00:09:37,030
on that, credential shielding, all right?

203
00:09:37,030 --> 00:09:40,590
And then obviously we need to be flexible

204
00:09:40,590 --> 00:09:43,400
in how identification maps happen.

205
00:09:43,400 --> 00:09:45,830
If we're going from one
domain to another domain,

206
00:09:45,830 --> 00:09:47,600
from non-domain to domain,

207
00:09:47,600 --> 00:09:49,700
we should be able to
employ various profiles

208
00:09:49,700 --> 00:09:51,953
for connectivity on the network itself.

209
00:09:53,570 --> 00:09:56,410
So that place still flexible operations.

210
00:09:56,410 --> 00:09:57,243
What else?

211
00:09:57,243 --> 00:10:01,850
We also want to have mutual authentication

212
00:10:01,850 --> 00:10:04,380
between a C2 or a commander if you will,

213
00:10:04,380 --> 00:10:07,570
and the agent so that the agent knows

214
00:10:07,570 --> 00:10:12,570
who their C2 is at the time
of deployment and creation.

215
00:10:12,680 --> 00:10:15,350
And also C2 wants to
accept only the agents

216
00:10:15,350 --> 00:10:17,040
that it knows about.

217
00:10:17,040 --> 00:10:20,720
And so that kinda plays
into the delivery options

218
00:10:20,720 --> 00:10:22,440
and how agents get triggered.

219
00:10:22,440 --> 00:10:25,240
Sometimes you hard-code
the policy into the agent

220
00:10:25,240 --> 00:10:29,300
to let's say, get moving
on air gap network

221
00:10:29,300 --> 00:10:30,790
without C2 interaction,

222
00:10:30,790 --> 00:10:33,010
where you can drop in,

223
00:10:33,010 --> 00:10:35,800
you can have an agent on the network

224
00:10:35,800 --> 00:10:38,210
and kinda start encrypting
things right away

225
00:10:38,210 --> 00:10:41,100
without accepting tasks from C2.

226
00:10:41,100 --> 00:10:44,220
Or you can go the old route

227
00:10:44,220 --> 00:10:47,210
where you're dormant
until activated, right?

228
00:10:47,210 --> 00:10:52,040
Some notes on a stealth
versus transparency.

229
00:10:52,040 --> 00:10:54,280
One of the problems in ransomware

230
00:10:54,280 --> 00:10:58,600
is not knowing what's going
on once agents are deployed.

231
00:10:58,600 --> 00:11:01,290
So we want to make sure
we know at all times

232
00:11:01,290 --> 00:11:02,470
what's going on.

233
00:11:02,470 --> 00:11:05,740
So we run logs on the agent,

234
00:11:05,740 --> 00:11:09,290
but those logs are in memory
and we're able to retrieve

235
00:11:09,290 --> 00:11:13,240
and kinda introspect, get some
optics into what's going on.

236
00:11:13,240 --> 00:11:16,390
And then obviously, one of
the interesting features

237
00:11:16,390 --> 00:11:18,210
or needed features in our testing

238
00:11:18,210 --> 00:11:23,210
is to be able to kind of
clean up after ourselves,

239
00:11:23,800 --> 00:11:25,670
killing the agent,

240
00:11:25,670 --> 00:11:27,570
popping up notification
that it has been killed,

241
00:11:27,570 --> 00:11:31,150
or whatever the case may be,

242
00:11:31,150 --> 00:11:34,073
removing the threat from
the network on their own.

243
00:11:35,980 --> 00:11:38,890
So we've talked a lot about the policy.

244
00:11:38,890 --> 00:11:42,560
And so the policy is what ties
everything together, right?

245
00:11:42,560 --> 00:11:45,380
You have flexible connectivity to C2s,

246
00:11:45,380 --> 00:11:47,230
you have profiles and connectivity,

247
00:11:47,230 --> 00:11:49,320
you've got authentication maps

248
00:11:49,320 --> 00:11:53,630
that match credential triplets to hosts

249
00:11:53,630 --> 00:11:57,210
that they go to, on a domain or not.

250
00:11:57,210 --> 00:12:00,450
You also have a flexibility
on key generation

251
00:12:00,450 --> 00:12:03,760
and whether you're encrypting
assets with one key per host,

252
00:12:03,760 --> 00:12:07,410
or you can have flexibility
where you have separate keys

253
00:12:07,410 --> 00:12:11,860
for each file or mix there are of,

254
00:12:11,860 --> 00:12:14,170
you can have situations

255
00:12:14,170 --> 00:12:18,740
where you can kinda tier
the priority on file,

256
00:12:18,740 --> 00:12:22,810
files of one keys are
covered, the other one stays.

257
00:12:22,810 --> 00:12:26,030
Mistakes kinda encrypted as well.

258
00:12:26,030 --> 00:12:30,860
So this brings us to a demo

259
00:12:30,860 --> 00:12:33,830
where we can talk about
specifics of deployment

260
00:12:33,830 --> 00:12:36,340
and operations of a racketeer toolkit,

261
00:12:36,340 --> 00:12:38,840
and we'll come back to
discuss other things later.

262
00:12:39,900 --> 00:12:42,650
Let's take a look at the
operations of Racketeer.

263
00:12:42,650 --> 00:12:44,750
Here, we have four windows,

264
00:12:44,750 --> 00:12:46,580
there's a C2.

265
00:12:46,580 --> 00:12:50,300
there is a utility box that
helps manage encryption,

266
00:12:50,300 --> 00:12:53,060
and a master key site IDs,

267
00:12:53,060 --> 00:12:56,570
as well as encrypted files offline.

268
00:12:56,570 --> 00:12:58,070
And on top of there are two windows

269
00:12:58,070 --> 00:13:01,090
that represent simulated attacked network.

270
00:13:02,310 --> 00:13:04,690
There is a non-domain joined machine

271
00:13:04,690 --> 00:13:06,560
and there is a domain joined machine.

272
00:13:06,560 --> 00:13:10,430
And so our task for Racketeer is to go out

273
00:13:10,430 --> 00:13:12,580
and use the agent that gets deployed

274
00:13:12,580 --> 00:13:16,570
on the non-domain machine
to manage IE encrypt

275
00:13:16,570 --> 00:13:17,650
the assets on it

276
00:13:17,650 --> 00:13:20,060
and then pivot over to the domain box

277
00:13:20,060 --> 00:13:22,690
and do exactly that on the other side.

278
00:13:22,690 --> 00:13:25,240
So before we talk about
the execution of it,

279
00:13:25,240 --> 00:13:29,150
we'll like you to take a
look at the policy file.

280
00:13:29,150 --> 00:13:30,100
So the policy file,

281
00:13:30,100 --> 00:13:33,620
as we've discussed as the
one that ties the tasks,

282
00:13:33,620 --> 00:13:35,700
communication, encryption keys,

283
00:13:35,700 --> 00:13:38,470
and authentication profiles for the agent

284
00:13:38,470 --> 00:13:42,470
as seen by the operator from the outside.

285
00:13:42,470 --> 00:13:45,130
And there are multiple sections to it.

286
00:13:45,130 --> 00:13:48,030
There's connectivity section
with various profiles

287
00:13:48,030 --> 00:13:49,730
and security of communications.

288
00:13:49,730 --> 00:13:53,760
There is arrest profile and endpoints

289
00:13:53,760 --> 00:13:55,230
that are used to talk to,

290
00:13:55,230 --> 00:13:56,587
there are keys such as MasterKey

291
00:13:56,587 --> 00:13:59,410
and the identifier of
the site for the agent.

292
00:13:59,410 --> 00:14:02,670
And there are also a series
of authentication profiles

293
00:14:02,670 --> 00:14:05,200
that take the triplets,
username, password,

294
00:14:05,200 --> 00:14:08,740
and then domain or
operate in a local asset.

295
00:14:08,740 --> 00:14:11,550
And then there is array of hosts

296
00:14:11,550 --> 00:14:15,360
and files that file connector,

297
00:14:15,360 --> 00:14:18,570
or the agent is able to operate on mixing

298
00:14:18,570 --> 00:14:22,240
and matching host keys with file keys.

299
00:14:22,240 --> 00:14:24,530
You can repeat these
sections as many times

300
00:14:24,530 --> 00:14:25,730
as you would like to.

301
00:14:25,730 --> 00:14:28,550
This is very contained operations.

302
00:14:28,550 --> 00:14:33,550
And so in order for us to
task the agent with execution,

303
00:14:33,670 --> 00:14:35,510
first, we need to start the agent.

304
00:14:35,510 --> 00:14:37,370
On the remote box, it starts up,

305
00:14:37,370 --> 00:14:40,990
and then we can see that
it's running under PID 1940.

306
00:14:40,990 --> 00:14:41,940
Okay?

307
00:14:41,940 --> 00:14:45,570
Then what we can do, we can activate it.

308
00:14:45,570 --> 00:14:47,190
Right now, it's in the pendency state

309
00:14:47,190 --> 00:14:48,783
let's activate the agent.

310
00:14:50,360 --> 00:14:55,360
And what we're gonna do is,
we're gonna accept the agent

311
00:14:55,640 --> 00:14:58,130
to be as part of our communication,

312
00:14:58,130 --> 00:15:00,380
which means that we only accept the agents

313
00:15:00,380 --> 00:15:04,510
that are the ones that we know about.

314
00:15:04,510 --> 00:15:05,770
Okay?

315
00:15:05,770 --> 00:15:08,780
Then what we can do is,

316
00:15:08,780 --> 00:15:13,780
we can authentic the agent to the C2

317
00:15:14,370 --> 00:15:16,900
and the C2 to the agent by
specifying the master key

318
00:15:16,900 --> 00:15:18,990
you've created before.

319
00:15:18,990 --> 00:15:21,480
And so we can send the
masterkey to the agent

320
00:15:21,480 --> 00:15:24,800
at which point it will know
that it's talking to the C2

321
00:15:24,800 --> 00:15:29,790
that it knows about and has
been kinda paired up with.

322
00:15:29,790 --> 00:15:31,810
And then what we can do,

323
00:15:31,810 --> 00:15:34,320
we can actually do send the policy,

324
00:15:34,320 --> 00:15:36,023
which we have specified before.

325
00:15:36,990 --> 00:15:41,000
This policy is going to encrypt
the assets across the board.

326
00:15:41,000 --> 00:15:43,320
It will take a while for it to respond.

327
00:15:43,320 --> 00:15:46,010
Usually within the profile
that you've specified,

328
00:15:46,010 --> 00:15:47,950
five to 10 seconds or more.

329
00:15:47,950 --> 00:15:48,970
And as you can see,

330
00:15:48,970 --> 00:15:52,620
the agent actually operates
on the assets locally

331
00:15:52,620 --> 00:15:55,030
and then goes out using
the authentication profile

332
00:15:55,030 --> 00:15:58,870
to the domain and encrypting
the assets on the other side.

333
00:15:58,870 --> 00:16:00,320
Then as you can see,

334
00:16:00,320 --> 00:16:03,020
those assets are encrypted,

335
00:16:03,020 --> 00:16:04,810
as we're gonna see in the moment.

336
00:16:04,810 --> 00:16:06,820
They are locked

337
00:16:06,820 --> 00:16:11,312
and the customer is
kinda forced to operate

338
00:16:11,312 --> 00:16:13,120
under those conditions.

339
00:16:13,120 --> 00:16:15,220
And the same thing happens here.

340
00:16:15,220 --> 00:16:18,160
But the other thing that
we need to be able to do,

341
00:16:18,160 --> 00:16:21,870
if we're not ready to decrypt offline,

342
00:16:21,870 --> 00:16:24,160
is we're actually reversing the policy.

343
00:16:24,160 --> 00:16:27,720
And the reverse of the policy
is just a matter of specifying

344
00:16:27,720 --> 00:16:28,730
the operation style.

345
00:16:28,730 --> 00:16:31,329
Flip the bit on encryption and decryption.

346
00:16:31,329 --> 00:16:32,470
And so what we're gonna do,

347
00:16:32,470 --> 00:16:36,257
we're gonna flip that policy
back into decryption mode.

348
00:16:38,470 --> 00:16:43,110
Same thing, polexec, file decryption

349
00:16:43,110 --> 00:16:44,750
with the same keys that you specified,

350
00:16:44,750 --> 00:16:46,380
or you can do one by one,

351
00:16:46,380 --> 00:16:49,860
decrypt one file, all the
files, none of the files.

352
00:16:49,860 --> 00:16:51,420
This should work.

353
00:16:51,420 --> 00:16:55,300
And once after decrypting the file,

354
00:16:55,300 --> 00:16:58,380
we will be able to see the content

355
00:16:58,380 --> 00:17:00,330
as it was there before.

356
00:17:00,330 --> 00:17:04,810
And essentially everything
should be back to normal.

357
00:17:04,810 --> 00:17:06,540
One other thing that I
would like to mention

358
00:17:06,540 --> 00:17:09,100
is the execution profile and the memory.

359
00:17:09,100 --> 00:17:11,371
So we can get the logs.

360
00:17:11,371 --> 00:17:14,371
(keyboard clutters)

361
00:17:16,760 --> 00:17:17,890
Logs set debug

362
00:17:20,150 --> 00:17:20,983
on the logs,

363
00:17:20,983 --> 00:17:23,070
which means that they will
increase the verbosity

364
00:17:23,070 --> 00:17:27,160
of the agent and we can
do logs to get on it.

365
00:17:27,160 --> 00:17:30,310
And we'll be able to see
what it's doing there.

366
00:17:30,310 --> 00:17:33,860
And obviously, to align
with our directives

367
00:17:33,860 --> 00:17:37,020
of working with perhaps triage teams,

368
00:17:37,020 --> 00:17:40,280
what we can do again, kick
off a tabletop exercising

369
00:17:40,280 --> 00:17:44,560
by popping up a notification message

370
00:17:44,560 --> 00:17:46,050
on the agent

371
00:17:46,050 --> 00:17:51,003
or on the host where the agent
resides that basically says,

372
00:17:53,180 --> 00:17:54,700
I am here.

373
00:17:54,700 --> 00:17:58,860
Why don't you start taking
care of what I'm doing here.

374
00:17:58,860 --> 00:18:03,860
And we can do this with
unhiding console message,

375
00:18:05,760 --> 00:18:07,850
which will basically lock the box,

376
00:18:07,850 --> 00:18:10,820
show the notification,

377
00:18:10,820 --> 00:18:13,100
and then the triage process happens.

378
00:18:13,100 --> 00:18:15,240
You know, obviously last but not least

379
00:18:15,240 --> 00:18:18,510
is that we can agent self terminate

380
00:18:21,660 --> 00:18:25,293
to clean up after ourselves.

381
00:18:26,330 --> 00:18:29,670
This we'll destage the
agent and it will be,

382
00:18:29,670 --> 00:18:33,997
the box will be clean
with all the assets intact

383
00:18:33,997 --> 00:18:38,663
or the variation on the theme
is when agents are locked

384
00:18:39,560 --> 00:18:40,393
or the files are locked

385
00:18:40,393 --> 00:18:42,690
and the agent is no longer in memory.

386
00:18:42,690 --> 00:18:45,100
How do you recover your assets

387
00:18:45,100 --> 00:18:47,030
as you talk to the ransomware team

388
00:18:47,030 --> 00:18:49,710
and the ransomware team
by using the utilities

389
00:18:49,710 --> 00:18:52,910
and the utility box are
able to use the keys

390
00:18:52,910 --> 00:18:55,640
that they've specified in
the policy to decrypt files

391
00:18:55,640 --> 00:18:58,210
one by one or all.

392
00:18:58,210 --> 00:19:00,473
This is Racketeer toolkit.

393
00:19:03,630 --> 00:19:04,670
Okay, we're back.

394
00:19:04,670 --> 00:19:06,660
So what can we do to...

395
00:19:06,660 --> 00:19:08,490
What does it tell us?

396
00:19:08,490 --> 00:19:11,200
It tells us that we are
able to kind of simulate

397
00:19:11,200 --> 00:19:14,230
the life cycle of controlled
ransomware, right?

398
00:19:14,230 --> 00:19:18,420
We are able to maintain SLA
and our time on the network,

399
00:19:18,420 --> 00:19:21,210
tried to deliver the last
mile monetization module

400
00:19:21,210 --> 00:19:24,200
for the teams that need it

401
00:19:24,200 --> 00:19:27,310
and kinda plug in into
the response process

402
00:19:27,310 --> 00:19:30,050
either to support it or kick it off,

403
00:19:30,050 --> 00:19:32,210
and also learn more about the ransomware

404
00:19:32,210 --> 00:19:37,210
and how the deficiencies are
in the capacity of it is.

405
00:19:37,800 --> 00:19:41,160
So for defenders,

406
00:19:41,160 --> 00:19:43,330
I think it's safe to say that,

407
00:19:43,330 --> 00:19:44,700
let's not signature this tool,

408
00:19:44,700 --> 00:19:49,010
but do pay attention to
behaviors because artifacts

409
00:19:49,010 --> 00:19:52,950
maybe minimum because
it's all in memory rate,

410
00:19:52,950 --> 00:19:55,330
but TTPs still exists.

411
00:19:55,330 --> 00:19:56,320
The lateral movement,

412
00:19:56,320 --> 00:19:58,960
the sequential encryption of the files.

413
00:19:58,960 --> 00:20:01,010
So all of that is still present.

414
00:20:01,010 --> 00:20:04,830
So bottom line is that IOCs
are tied to implementation

415
00:20:05,960 --> 00:20:08,950
and the agent has been
deliberately weakened

416
00:20:08,950 --> 00:20:12,840
to showcase the kind
of the injection points

417
00:20:12,840 --> 00:20:14,360
and analysis points.

418
00:20:14,360 --> 00:20:16,880
And obviously, instrument
your environments,

419
00:20:16,880 --> 00:20:19,080
where you correlate
operational performance

420
00:20:19,080 --> 00:20:20,920
and security messages.

421
00:20:20,920 --> 00:20:23,980
And with that, I wanna thank
everybody who's listened,

422
00:20:23,980 --> 00:20:26,220
looked at the demo,

423
00:20:26,220 --> 00:20:27,951
watched the demo rather,

424
00:20:27,951 --> 00:20:32,951
here's the link to open
source code for the Racketeer.

425
00:20:33,680 --> 00:20:34,973
Thank you very much.

