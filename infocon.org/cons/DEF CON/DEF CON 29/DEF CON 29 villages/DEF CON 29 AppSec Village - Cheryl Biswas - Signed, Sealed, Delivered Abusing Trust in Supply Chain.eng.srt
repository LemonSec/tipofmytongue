1
00:00:02,800 --> 00:00:04,319
hi there

2
00:00:04,319 --> 00:00:06,399
i'm cheryl viswas you may know me as

3
00:00:06,399 --> 00:00:08,240
encrypted online

4
00:00:08,240 --> 00:00:11,840
i am honored to present at absec village

5
00:00:11,840 --> 00:00:14,559
welcome to my talk today signed sealed

6
00:00:14,559 --> 00:00:15,440
delivered

7
00:00:15,440 --> 00:00:17,680
abusing trust in software supply chain

8
00:00:17,680 --> 00:00:21,198
attacks i hope you enjoy

9
00:00:22,000 --> 00:00:24,880
a little bit about me i'm a threat intel

10
00:00:24,880 --> 00:00:25,599
specialist

11
00:00:25,599 --> 00:00:28,160
with a major bank here in canada shout

12
00:00:28,160 --> 00:00:30,160
out to my awesome team

13
00:00:30,160 --> 00:00:32,640
i'm also a founding member of the diana

14
00:00:32,640 --> 00:00:33,840
initiative

15
00:00:33,840 --> 00:00:36,000
where we support diversity and inclusion

16
00:00:36,000 --> 00:00:37,840
in our field

17
00:00:37,840 --> 00:00:41,200
much love to the terrific staff

18
00:00:41,200 --> 00:00:43,600
volunteers and supporters who helped

19
00:00:43,600 --> 00:00:44,640
make another

20
00:00:44,640 --> 00:00:47,200
amazing event happen this year i

21
00:00:47,200 --> 00:00:48,719
sincerely hope we can all

22
00:00:48,719 --> 00:00:51,840
meet together next year

23
00:00:51,840 --> 00:00:54,559
and now for the obligatory disclaimer

24
00:00:54,559 --> 00:00:56,079
the views expressed here today

25
00:00:56,079 --> 00:00:58,800
are mine mine alone and not those of my

26
00:00:58,800 --> 00:00:59,600
employer

27
00:00:59,600 --> 00:01:03,039
okay let's get started

28
00:01:03,680 --> 00:01:06,479
in this talk i want to explain what

29
00:01:06,479 --> 00:01:08,080
software supply chain attacks

30
00:01:08,080 --> 00:01:11,040
are and the growing threat they pose

31
00:01:11,040 --> 00:01:13,119
we'll look at how code dependency is a

32
00:01:13,119 --> 00:01:14,080
factor

33
00:01:14,080 --> 00:01:15,640
compounded by mistakes and

34
00:01:15,640 --> 00:01:17,280
misconfigurations

35
00:01:17,280 --> 00:01:19,600
then we'll look at a brief history of

36
00:01:19,600 --> 00:01:21,040
some major attacks

37
00:01:21,040 --> 00:01:23,759
and the state-sponsored actors involved

38
00:01:23,759 --> 00:01:26,000
to talk about who's been watching and

39
00:01:26,000 --> 00:01:27,520
what they leverage

40
00:01:27,520 --> 00:01:30,320
finally we'll wrap up with what we could

41
00:01:30,320 --> 00:01:31,360
do better

42
00:01:31,360 --> 00:01:34,640
and some suggestions

43
00:01:35,200 --> 00:01:37,680
we don't fully appreciate just how

44
00:01:37,680 --> 00:01:39,360
interconnected we are

45
00:01:39,360 --> 00:01:42,079
and how that translates into software

46
00:01:42,079 --> 00:01:43,600
code dependencies

47
00:01:43,600 --> 00:01:45,520
it took an event like the solarwinds

48
00:01:45,520 --> 00:01:46,640
orion attack

49
00:01:46,640 --> 00:01:49,680
to rattle the bars on that cage and wake

50
00:01:49,680 --> 00:01:50,320
us up

51
00:01:50,320 --> 00:01:52,960
to what's been going on for some time

52
00:01:52,960 --> 00:01:54,479
the reality

53
00:01:54,479 --> 00:01:56,560
is that software supply chain attacks

54
00:01:56,560 --> 00:01:58,399
are not something new

55
00:01:58,399 --> 00:02:00,719
they've been around for many years and

56
00:02:00,719 --> 00:02:02,560
we've been watching that check engine

57
00:02:02,560 --> 00:02:03,200
light

58
00:02:03,200 --> 00:02:06,799
but not really addressing the issues

59
00:02:06,799 --> 00:02:08,720
my hope is that the knowledge i share

60
00:02:08,720 --> 00:02:10,000
here today

61
00:02:10,000 --> 00:02:12,400
gives you some new insight and awareness

62
00:02:12,400 --> 00:02:14,000
so that you can go back

63
00:02:14,000 --> 00:02:17,680
and better secure your projects

64
00:02:18,480 --> 00:02:21,760
what a year even before we got out of

65
00:02:21,760 --> 00:02:22,080
the

66
00:02:22,080 --> 00:02:25,680
gate the tone was set solarwinds was

67
00:02:25,680 --> 00:02:28,160
truly unprecedented it's the kind of

68
00:02:28,160 --> 00:02:29,040
event that we

69
00:02:29,040 --> 00:02:31,760
talk about for decades we build off of

70
00:02:31,760 --> 00:02:33,280
it and we learn from it

71
00:02:33,280 --> 00:02:36,160
however as you're going to see there

72
00:02:36,160 --> 00:02:36,560
have

73
00:02:36,560 --> 00:02:38,480
been a lot of software supply chain

74
00:02:38,480 --> 00:02:42,480
shenanigans just over 2021.

75
00:02:44,800 --> 00:02:47,360
these types of attacks are an abusive

76
00:02:47,360 --> 00:02:48,480
trust

77
00:02:48,480 --> 00:02:52,319
their compromise right at the source

78
00:02:52,319 --> 00:02:55,120
the insertion of malicious code into

79
00:02:55,120 --> 00:02:56,480
legitimate software

80
00:02:56,480 --> 00:02:59,519
and then distributed on mass

81
00:02:59,519 --> 00:03:03,040
to trusting customers this can create

82
00:03:03,040 --> 00:03:05,680
access points into the networks of those

83
00:03:05,680 --> 00:03:06,959
customers

84
00:03:06,959 --> 00:03:09,440
up to the tens of thousands as was

85
00:03:09,440 --> 00:03:12,159
demonstrated by solarwinds orion

86
00:03:12,159 --> 00:03:14,480
and as we've learned nobody is

87
00:03:14,480 --> 00:03:16,080
untouchable

88
00:03:16,080 --> 00:03:21,200
everyone everyone is a potential target

89
00:03:22,879 --> 00:03:25,840
software supply chain attacks take time

90
00:03:25,840 --> 00:03:26,959
resources

91
00:03:26,959 --> 00:03:29,840
and skill to plan this is the purview of

92
00:03:29,840 --> 00:03:32,879
state-sponsored threat actors notably

93
00:03:32,879 --> 00:03:35,519
russian or chinese-backed groups but

94
00:03:35,519 --> 00:03:37,120
both cyber criminal

95
00:03:37,120 --> 00:03:39,360
and state-sponsored groups target the

96
00:03:39,360 --> 00:03:40,959
technology industry

97
00:03:40,959 --> 00:03:43,599
because these companies are relied on by

98
00:03:43,599 --> 00:03:46,080
many organizations and individuals and

99
00:03:46,080 --> 00:03:47,680
that can have wide-ranging

100
00:03:47,680 --> 00:03:50,640
impact attacks on tech companies can

101
00:03:50,640 --> 00:03:51,120
enable

102
00:03:51,120 --> 00:03:53,439
third-party compromise of enterprise

103
00:03:53,439 --> 00:03:54,879
customers

104
00:03:54,879 --> 00:03:57,120
via updates through software supply

105
00:03:57,120 --> 00:03:58,720
chains

106
00:03:58,720 --> 00:04:01,840
for example china has actively targeted

107
00:04:01,840 --> 00:04:03,920
tech companies in taiwan with these

108
00:04:03,920 --> 00:04:05,360
types of attacks

109
00:04:05,360 --> 00:04:07,120
because they see them as major

110
00:04:07,120 --> 00:04:09,280
competition

111
00:04:09,280 --> 00:04:12,239
now another important disclaimer i am

112
00:04:12,239 --> 00:04:13,599
not a coder

113
00:04:13,599 --> 00:04:15,840
or a developer and i'm not going to

114
00:04:15,840 --> 00:04:17,358
pretend to be one

115
00:04:17,358 --> 00:04:19,279
i am presenting this talk from my

116
00:04:19,279 --> 00:04:21,040
experience as a threat

117
00:04:21,040 --> 00:04:23,680
intel researcher and what i do plays a

118
00:04:23,680 --> 00:04:25,120
key role because

119
00:04:25,120 --> 00:04:28,320
we watch the geopolitics play out and we

120
00:04:28,320 --> 00:04:29,520
reach back for

121
00:04:29,520 --> 00:04:31,919
historical context on patterns of

122
00:04:31,919 --> 00:04:33,040
behavior

123
00:04:33,040 --> 00:04:36,160
because history repeats and actions

124
00:04:36,160 --> 00:04:40,000
have consequences ian pratt

125
00:04:40,000 --> 00:04:42,320
the global head of security for personal

126
00:04:42,320 --> 00:04:45,199
systems at hp had this to say

127
00:04:45,199 --> 00:04:47,600
whether they are a direct target or a

128
00:04:47,600 --> 00:04:49,840
stepping stone to gain access to bigger

129
00:04:49,840 --> 00:04:50,880
targets

130
00:04:50,880 --> 00:04:53,199
as we have seen with the upstream supply

131
00:04:53,199 --> 00:04:53,919
chain attack

132
00:04:53,919 --> 00:04:57,040
against solarwinds organizations of all

133
00:04:57,040 --> 00:04:57,919
sizes

134
00:04:57,919 --> 00:05:01,680
need to be cognizant of this risk

135
00:05:02,880 --> 00:05:04,960
there's nothing like getting some

136
00:05:04,960 --> 00:05:06,880
historical context

137
00:05:06,880 --> 00:05:10,720
so let's start with this in 2009

138
00:05:10,720 --> 00:05:13,280
operation aurora was a wake-up call when

139
00:05:13,280 --> 00:05:15,440
chinese state-sponsored group apt

140
00:05:15,440 --> 00:05:18,560
17 targeted google adobe

141
00:05:18,560 --> 00:05:20,240
and other tech companies for their

142
00:05:20,240 --> 00:05:22,479
source code management systems

143
00:05:22,479 --> 00:05:25,520
to alter the source code and this is at

144
00:05:25,520 --> 00:05:26,080
the heart

145
00:05:26,080 --> 00:05:28,479
of a software supply chain attack if you

146
00:05:28,479 --> 00:05:29,840
control the source code

147
00:05:29,840 --> 00:05:32,880
well imagine what you could do

148
00:05:32,880 --> 00:05:36,160
this event led google to implement

149
00:05:36,160 --> 00:05:40,000
zero trust to track lateral movement

150
00:05:40,000 --> 00:05:41,759
and to put in place better

151
00:05:41,759 --> 00:05:43,600
infrastructure

152
00:05:43,600 --> 00:05:46,880
interestingly enough google was not part

153
00:05:46,880 --> 00:05:47,600
of the mass

154
00:05:47,600 --> 00:05:52,160
fallout during solarwinds orion

155
00:05:52,160 --> 00:05:56,400
and then in 2017 there was nopetja

156
00:05:56,400 --> 00:05:58,560
an elite russian hacking team known as

157
00:05:58,560 --> 00:05:59,440
sandworm

158
00:05:59,440 --> 00:06:01,840
part of the gru military intelligence

159
00:06:01,840 --> 00:06:02,960
service

160
00:06:02,960 --> 00:06:05,199
compromised and took over software

161
00:06:05,199 --> 00:06:06,400
updates

162
00:06:06,400 --> 00:06:09,039
of a mandatory accounting package known

163
00:06:09,039 --> 00:06:10,000
as

164
00:06:10,000 --> 00:06:12,400
medoc now this software was used

165
00:06:12,400 --> 00:06:14,160
throughout the ukraine

166
00:06:14,160 --> 00:06:16,080
at tax time and they didn't have the

167
00:06:16,080 --> 00:06:18,720
plethora of choices that that we enjoy

168
00:06:18,720 --> 00:06:22,639
it was pretty much that or bust

169
00:06:22,639 --> 00:06:25,840
russia has used ukraine as a cyber petri

170
00:06:25,840 --> 00:06:26,319
dish

171
00:06:26,319 --> 00:06:29,120
for years to test weaponized cyber

172
00:06:29,120 --> 00:06:30,240
weapons in what

173
00:06:30,240 --> 00:06:33,360
has been a rather hostile relationship

174
00:06:33,360 --> 00:06:36,400
russia has control issues

175
00:06:36,400 --> 00:06:39,600
so sand worm used midoc to

176
00:06:39,600 --> 00:06:41,759
distribute a destructive malware known

177
00:06:41,759 --> 00:06:43,600
as not pecha

178
00:06:43,600 --> 00:06:45,680
which was supposed to be a punitive

179
00:06:45,680 --> 00:06:48,319
measure against ukraine for daring to

180
00:06:48,319 --> 00:06:50,720
leave the mothership

181
00:06:50,720 --> 00:06:54,080
but instead that spread to infect

182
00:06:54,080 --> 00:06:56,880
major companies like maersk as

183
00:06:56,880 --> 00:06:58,800
unintended consequences

184
00:06:58,800 --> 00:07:01,599
and the costs amounted to more than 10

185
00:07:01,599 --> 00:07:02,080
billion

186
00:07:02,080 --> 00:07:06,880
dollars globally in january of 2019

187
00:07:06,880 --> 00:07:09,199
a sophisticated supply chain attack was

188
00:07:09,199 --> 00:07:10,639
discovered targeting

189
00:07:10,639 --> 00:07:13,840
the asus live update utility

190
00:07:13,840 --> 00:07:16,960
now this is a pre-installed utility on

191
00:07:16,960 --> 00:07:19,039
most asus computers

192
00:07:19,039 --> 00:07:20,960
to automatically update certain

193
00:07:20,960 --> 00:07:22,800
components like the bios

194
00:07:22,800 --> 00:07:26,560
uefi drivers and applications

195
00:07:26,560 --> 00:07:28,960
it's very convenient something that end

196
00:07:28,960 --> 00:07:30,160
users would

197
00:07:30,160 --> 00:07:33,759
implicitly trust and there are a lot of

198
00:07:33,759 --> 00:07:35,440
asus end users

199
00:07:35,440 --> 00:07:38,560
in fact according to gartner in 2017

200
00:07:38,560 --> 00:07:41,039
asus was the world's fifth largest pc

201
00:07:41,039 --> 00:07:42,400
vendor

202
00:07:42,400 --> 00:07:44,319
that would make it an extremely

203
00:07:44,319 --> 00:07:45,840
attractive target

204
00:07:45,840 --> 00:07:48,560
for apts advanced persistent threat

205
00:07:48,560 --> 00:07:49,120
groups

206
00:07:49,120 --> 00:07:51,199
who might want to take advantage of that

207
00:07:51,199 --> 00:07:52,479
user base

208
00:07:52,479 --> 00:07:56,319
in this case that apt was chinese threat

209
00:07:56,319 --> 00:07:57,039
group

210
00:07:57,039 --> 00:08:00,479
apt 17 also known as barium who happened

211
00:08:00,479 --> 00:08:01,840
to have been behind

212
00:08:01,840 --> 00:08:03,440
a number of software supply chain

213
00:08:03,440 --> 00:08:05,840
attacks

214
00:08:07,919 --> 00:08:11,120
nick weaver a security researcher at uc

215
00:08:11,120 --> 00:08:11,680
berkeley

216
00:08:11,680 --> 00:08:14,720
international computer science institute

217
00:08:14,720 --> 00:08:17,280
shares this

218
00:08:18,000 --> 00:08:20,639
you're trusting every vendor whose code

219
00:08:20,639 --> 00:08:22,080
is on your machine

220
00:08:22,080 --> 00:08:24,319
and you're trusting every vendor's

221
00:08:24,319 --> 00:08:25,680
vendor

222
00:08:25,680 --> 00:08:27,680
we're grappling with the growing sense

223
00:08:27,680 --> 00:08:29,840
of complexity in tech

224
00:08:29,840 --> 00:08:32,080
it's not just what corporations deploy

225
00:08:32,080 --> 00:08:34,080
in their own environments

226
00:08:34,080 --> 00:08:36,080
but how they are incorporating

227
00:08:36,080 --> 00:08:38,240
third-party tech

228
00:08:38,240 --> 00:08:40,958
according to windows snyder the product

229
00:08:40,958 --> 00:08:41,760
assumes

230
00:08:41,760 --> 00:08:43,839
all the security risk of all the

231
00:08:43,839 --> 00:08:47,440
components that it incorporates

232
00:08:52,640 --> 00:08:55,839
so let's have a talk about our code

233
00:08:55,839 --> 00:08:57,120
dependency

234
00:08:57,120 --> 00:08:59,440
sorry

235
00:09:01,200 --> 00:09:03,040
the fact is that applications

236
00:09:03,040 --> 00:09:04,399
increasingly depend on

237
00:09:04,399 --> 00:09:07,200
external software to work proprietary

238
00:09:07,200 --> 00:09:08,160
code

239
00:09:08,160 --> 00:09:11,760
open source components third-party apis

240
00:09:11,760 --> 00:09:14,000
modern applications are just too big for

241
00:09:14,000 --> 00:09:15,279
one developer to do

242
00:09:15,279 --> 00:09:17,920
on their own and software reuse has

243
00:09:17,920 --> 00:09:19,600
become the norm

244
00:09:19,600 --> 00:09:22,080
popular open source projects are used as

245
00:09:22,080 --> 00:09:23,440
dependencies

246
00:09:23,440 --> 00:09:25,920
and these are attractive targets for an

247
00:09:25,920 --> 00:09:26,640
attacker

248
00:09:26,640 --> 00:09:29,040
to add malicious code to and then claim

249
00:09:29,040 --> 00:09:31,760
the users of those dependencies

250
00:09:31,760 --> 00:09:33,760
we need to appreciate the increasing

251
00:09:33,760 --> 00:09:34,880
complexity

252
00:09:34,880 --> 00:09:38,160
of library use in applications how the

253
00:09:38,160 --> 00:09:40,160
functions of one library

254
00:09:40,160 --> 00:09:42,640
rely on a number of other libraries in

255
00:09:42,640 --> 00:09:44,640
order to be implemented

256
00:09:44,640 --> 00:09:48,080
this creates complex dependency trees

257
00:09:48,080 --> 00:09:50,560
that developers won't remove or update

258
00:09:50,560 --> 00:09:52,000
because of the possible

259
00:09:52,000 --> 00:09:55,519
downstream consequences

260
00:09:56,399 --> 00:10:00,399
so let's take a look at some numbers

261
00:10:00,399 --> 00:10:03,040
the average app has 118 open source

262
00:10:03,040 --> 00:10:05,519
libraries

263
00:10:05,519 --> 00:10:10,720
the average library is 2.6 years old

264
00:10:11,279 --> 00:10:16,480
the average java app has 50 open source

265
00:10:16,839 --> 00:10:18,160
vulnerabilities

266
00:10:18,160 --> 00:10:21,760
99 of organizations have one or more

267
00:10:21,760 --> 00:10:25,279
high-risk java licenses

268
00:10:26,160 --> 00:10:28,880
and what are the false positivity rates

269
00:10:28,880 --> 00:10:30,560
using legacy

270
00:10:30,560 --> 00:10:33,839
sca tools

271
00:10:34,640 --> 00:10:38,480
java has 23.net 13

272
00:10:38,480 --> 00:10:42,320
and node 69

273
00:10:43,200 --> 00:10:45,760
per github security researcher maya

274
00:10:45,760 --> 00:10:47,440
kazurowski

275
00:10:47,440 --> 00:10:50,560
85 to 97 of enterprise

276
00:10:50,560 --> 00:10:52,640
software code bases come from open

277
00:10:52,640 --> 00:10:54,240
source components

278
00:10:54,240 --> 00:10:56,240
with the average project having up to

279
00:10:56,240 --> 00:10:58,800
203 dependencies

280
00:10:58,800 --> 00:11:00,720
and given how sophisticated those

281
00:11:00,720 --> 00:11:02,160
attacks can get

282
00:11:02,160 --> 00:11:04,560
any projects that don't incorporate even

283
00:11:04,560 --> 00:11:06,720
basic protections like code signing

284
00:11:06,720 --> 00:11:10,560
put themselves at real risk because

285
00:11:10,560 --> 00:11:13,040
we're using other people's technology

286
00:11:13,040 --> 00:11:15,839
it's a trust issue

287
00:11:17,600 --> 00:11:20,240
let's take a look at the four elements

288
00:11:20,240 --> 00:11:22,480
of a software supply chain

289
00:11:22,480 --> 00:11:24,320
there's what you write custom code

290
00:11:24,320 --> 00:11:26,320
that's developed in-house

291
00:11:26,320 --> 00:11:28,560
there's what you build with software

292
00:11:28,560 --> 00:11:30,399
development tools

293
00:11:30,399 --> 00:11:32,720
there's what you buy off the shelf

294
00:11:32,720 --> 00:11:34,800
software as a service apps

295
00:11:34,800 --> 00:11:37,519
and there's what you use third-party

296
00:11:37,519 --> 00:11:39,040
libraries

297
00:11:39,040 --> 00:11:42,560
so we need to understand areas of risk

298
00:11:42,560 --> 00:11:44,240
around open source libraries and

299
00:11:44,240 --> 00:11:46,720
frameworks which can come from

300
00:11:46,720 --> 00:11:49,120
active or inactive libraries or library

301
00:11:49,120 --> 00:11:50,720
classes

302
00:11:50,720 --> 00:11:54,240
the age of the library licensing

303
00:11:54,240 --> 00:11:57,360
and of course vulnerabilities but that's

304
00:11:57,360 --> 00:11:58,639
hard to do when you

305
00:11:58,639 --> 00:12:01,440
don't have visibility into the libraries

306
00:12:01,440 --> 00:12:04,240
and classes being used by the software

307
00:12:04,240 --> 00:12:06,959
or when you're only relying on static

308
00:12:06,959 --> 00:12:07,920
scans from

309
00:12:07,920 --> 00:12:11,200
legacy security code analysis tools that

310
00:12:11,200 --> 00:12:13,760
go out of date as soon as that library

311
00:12:13,760 --> 00:12:16,800
changes or updates

312
00:12:18,480 --> 00:12:21,760
this is from the 2021 contrast labs

313
00:12:21,760 --> 00:12:24,800
open source security report there's a

314
00:12:24,800 --> 00:12:26,240
lot here to take in

315
00:12:26,240 --> 00:12:29,440
but the key points are these one

316
00:12:29,440 --> 00:12:31,360
if you're using open source code you

317
00:12:31,360 --> 00:12:32,480
need to be paying

318
00:12:32,480 --> 00:12:35,600
more attention than you have been what

319
00:12:35,600 --> 00:12:36,560
we're doing

320
00:12:36,560 --> 00:12:38,240
and what we've been doing to identify

321
00:12:38,240 --> 00:12:39,760
and remediate risks

322
00:12:39,760 --> 00:12:41,680
it's not comprehensive enough we're

323
00:12:41,680 --> 00:12:44,160
missing stuff

324
00:12:44,160 --> 00:12:47,440
and the legacy security tools in use

325
00:12:47,440 --> 00:12:53,839
aren't securing us we've got to level up

326
00:12:55,200 --> 00:12:58,639
this is a lifetime a timeline a lifetime

327
00:12:58,639 --> 00:13:00,880
no it's a timeline of software package

328
00:13:00,880 --> 00:13:01,920
repositories

329
00:13:01,920 --> 00:13:04,399
that have been in supply chain attacks

330
00:13:04,399 --> 00:13:06,160
it's really easy to just

331
00:13:06,160 --> 00:13:08,079
get code from various projects online

332
00:13:08,079 --> 00:13:09,760
and then incorporate that into

333
00:13:09,760 --> 00:13:12,880
other software here's the risk

334
00:13:12,880 --> 00:13:15,200
some of those open source projects are

335
00:13:15,200 --> 00:13:16,399
widely used

336
00:13:16,399 --> 00:13:18,639
but not well maintained or they've even

337
00:13:18,639 --> 00:13:20,399
been abandoned

338
00:13:20,399 --> 00:13:23,040
code reeves is a deliberate strategy

339
00:13:23,040 --> 00:13:25,200
it's seen as a key differentiator for

340
00:13:25,200 --> 00:13:26,320
efficiency

341
00:13:26,320 --> 00:13:28,639
innovation speed and application

342
00:13:28,639 --> 00:13:29,600
development

343
00:13:29,600 --> 00:13:32,160
but at the cost of being vulnerable to

344
00:13:32,160 --> 00:13:33,120
compromised

345
00:13:33,120 --> 00:13:35,440
off-the-shelf components now some

346
00:13:35,440 --> 00:13:36,959
repurposed code comes from

347
00:13:36,959 --> 00:13:40,079
internal repos but a lot of it comes

348
00:13:40,079 --> 00:13:42,320
from open source libraries

349
00:13:42,320 --> 00:13:45,360
third parties for an attacker

350
00:13:45,360 --> 00:13:47,760
compromising a software supply chain can

351
00:13:47,760 --> 00:13:48,639
be through

352
00:13:48,639 --> 00:13:50,720
manipulation of the application source

353
00:13:50,720 --> 00:13:51,839
code

354
00:13:51,839 --> 00:13:54,079
manipulating the updater distribution

355
00:13:54,079 --> 00:13:55,279
methods

356
00:13:55,279 --> 00:13:58,880
or by replacing compiled releases with a

357
00:13:58,880 --> 00:14:01,680
modified version targets can range from

358
00:14:01,680 --> 00:14:02,079
either

359
00:14:02,079 --> 00:14:04,880
a very specific and limited group to a

360
00:14:04,880 --> 00:14:05,839
very wide

361
00:14:05,839 --> 00:14:08,240
number

362
00:14:10,079 --> 00:14:12,800
stuff happens

363
00:14:13,199 --> 00:14:15,839
and that brings us here the continuous

364
00:14:15,839 --> 00:14:16,639
integration

365
00:14:16,639 --> 00:14:19,199
continuous development pipeline which is

366
00:14:19,199 --> 00:14:20,560
a best practice

367
00:14:20,560 --> 00:14:23,120
for devops to deliver code to change

368
00:14:23,120 --> 00:14:24,000
frequently

369
00:14:24,000 --> 00:14:28,639
and reliably ci is a coding philosophy

370
00:14:28,639 --> 00:14:30,800
it's a set of practices to drive

371
00:14:30,800 --> 00:14:32,079
development teams to

372
00:14:32,079 --> 00:14:34,560
implement small changes and then check

373
00:14:34,560 --> 00:14:35,199
and code

374
00:14:35,199 --> 00:14:37,040
to version control repositories

375
00:14:37,040 --> 00:14:38,320
frequently

376
00:14:38,320 --> 00:14:41,440
it's a consistent automated way to build

377
00:14:41,440 --> 00:14:44,720
package and then test applications

378
00:14:44,720 --> 00:14:48,160
it's good except you're using

379
00:14:48,160 --> 00:14:52,160
other people's technology and

380
00:14:52,160 --> 00:14:55,199
mistakes will be made

381
00:14:56,720 --> 00:14:59,760
in november of 2020 the fbi issued a

382
00:14:59,760 --> 00:15:00,720
flash alert

383
00:15:00,720 --> 00:15:02,880
warning that threat actors had been

384
00:15:02,880 --> 00:15:04,480
actively targeting

385
00:15:04,480 --> 00:15:06,720
vulnerable sonar cube instances since

386
00:15:06,720 --> 00:15:08,079
april of that year

387
00:15:08,079 --> 00:15:10,399
to access source code repos and

388
00:15:10,399 --> 00:15:12,079
exfiltrate proprietary

389
00:15:12,079 --> 00:15:15,199
code from us government agencies

390
00:15:15,199 --> 00:15:18,320
and private organizations the fbi found

391
00:15:18,320 --> 00:15:21,040
multiple potential computer intrusions

392
00:15:21,040 --> 00:15:22,639
that corresponded with leaks

393
00:15:22,639 --> 00:15:25,279
associated with the sonar cube

394
00:15:25,279 --> 00:15:26,079
configuration

395
00:15:26,079 --> 00:15:28,399
vulnerabilities that had been under

396
00:15:28,399 --> 00:15:31,040
exploit since april

397
00:15:31,040 --> 00:15:33,759
in august of that year unknown threat

398
00:15:33,759 --> 00:15:35,040
actors leaked

399
00:15:35,040 --> 00:15:37,759
internal data from two organizations

400
00:15:37,759 --> 00:15:38,720
through a public

401
00:15:38,720 --> 00:15:42,720
lifecycle repository tool they scanned

402
00:15:42,720 --> 00:15:46,800
online for exposure via a default port

403
00:15:46,800 --> 00:15:52,639
9000 a publicly accessible ip address

404
00:15:52,639 --> 00:15:57,040
and default admin creds

405
00:16:00,079 --> 00:16:03,440
several of those sources had those

406
00:16:03,440 --> 00:16:06,160
as hard-coded credentials which opened

407
00:16:06,160 --> 00:16:06,880
the door

408
00:16:06,880 --> 00:16:08,880
to accessing other resources and

409
00:16:08,880 --> 00:16:11,839
expanding the breach

410
00:16:14,320 --> 00:16:17,279
per sakhar sarakai who wrote in the

411
00:16:17,279 --> 00:16:21,040
mcafee blog from july 31st of 2020

412
00:16:21,040 --> 00:16:23,440
regarding the sonar cube source code

413
00:16:23,440 --> 00:16:24,720
leak

414
00:16:24,720 --> 00:16:36,079
because mistakes will be made

415
00:16:36,079 --> 00:16:38,880
so let's talk about several major

416
00:16:38,880 --> 00:16:40,800
software supply chain attacks from the

417
00:16:40,800 --> 00:16:42,000
past

418
00:16:42,000 --> 00:16:44,720
and about lessons that maybe went

419
00:16:44,720 --> 00:16:47,199
unlearned

420
00:16:48,880 --> 00:16:52,000
if that looks busy it is

421
00:16:52,000 --> 00:16:54,320
the identity theft resource center or

422
00:16:54,320 --> 00:16:55,839
the itrc

423
00:16:55,839 --> 00:16:59,040
stated that 137 organizations

424
00:16:59,040 --> 00:17:01,600
reported they were impacted by supply

425
00:17:01,600 --> 00:17:02,800
chain attacks

426
00:17:02,800 --> 00:17:06,079
at 27 different third-party vendors

427
00:17:06,079 --> 00:17:08,959
that's an increase of 42 percent from

428
00:17:08,959 --> 00:17:11,839
the last quarter of 2020.

429
00:17:11,839 --> 00:17:13,760
attackers will manipulate software

430
00:17:13,760 --> 00:17:16,240
dependencies and development tools

431
00:17:16,240 --> 00:17:19,119
to compromise data or systems before

432
00:17:19,119 --> 00:17:21,199
those reach the recipient

433
00:17:21,199 --> 00:17:24,000
and as we've seen they go after source

434
00:17:24,000 --> 00:17:24,959
code

435
00:17:24,959 --> 00:17:27,760
in the case of solarwinds microsoft said

436
00:17:27,760 --> 00:17:28,720
that attackers

437
00:17:28,720 --> 00:17:31,120
gained access to some of the source code

438
00:17:31,120 --> 00:17:32,720
for exchange

439
00:17:32,720 --> 00:17:36,559
azure and intune having the source code

440
00:17:36,559 --> 00:17:38,799
gives adversaries the advantage

441
00:17:38,799 --> 00:17:41,600
because then they can go look for

442
00:17:41,600 --> 00:17:43,360
undiscovered vulnerabilities

443
00:17:43,360 --> 00:17:46,240
and be the first to exploit them the

444
00:17:46,240 --> 00:17:48,000
attackers also go after

445
00:17:48,000 --> 00:17:51,440
certificates stolen code signing

446
00:17:51,440 --> 00:17:52,720
certificates let them

447
00:17:52,720 --> 00:17:55,280
evade detection and deliver malware

448
00:17:55,280 --> 00:17:56,960
payloads as though those come from

449
00:17:56,960 --> 00:17:59,520
a legitimate source and certificate

450
00:17:59,520 --> 00:18:00,480
abuse

451
00:18:00,480 --> 00:18:02,720
is an ongoing component in all kinds of

452
00:18:02,720 --> 00:18:05,120
attacks

453
00:18:07,440 --> 00:18:10,559
and let's talk about attacks

454
00:18:10,559 --> 00:18:12,799
there is vendor compromise that's the

455
00:18:12,799 --> 00:18:15,840
most sophisticated

456
00:18:16,559 --> 00:18:18,240
there's exploiting third party

457
00:18:18,240 --> 00:18:19,840
applications so

458
00:18:19,840 --> 00:18:22,000
finding and exploiting vulnerabilities

459
00:18:22,000 --> 00:18:24,080
especially zero days

460
00:18:24,080 --> 00:18:26,320
these bugs can enable an attacker to

461
00:18:26,320 --> 00:18:28,000
manipulate the software to do things

462
00:18:28,000 --> 00:18:28,720
that it was

463
00:18:28,720 --> 00:18:31,840
never intended for including

464
00:18:31,840 --> 00:18:33,679
credential theft or accessing

465
00:18:33,679 --> 00:18:36,240
information

466
00:18:37,280 --> 00:18:40,799
there's exploiting open source libraries

467
00:18:40,799 --> 00:18:43,200
now these can also have vulnerabilities

468
00:18:43,200 --> 00:18:44,640
to exploit

469
00:18:44,640 --> 00:18:47,679
but unlike software packages

470
00:18:47,679 --> 00:18:50,000
it's harder to update and maintain open

471
00:18:50,000 --> 00:18:51,520
source code

472
00:18:51,520 --> 00:18:54,559
and because that source code is openly

473
00:18:54,559 --> 00:18:55,600
available

474
00:18:55,600 --> 00:18:58,080
attackers then can easily study it and

475
00:18:58,080 --> 00:18:59,520
practice on it

476
00:18:59,520 --> 00:19:01,840
for example the apache struts 2

477
00:19:01,840 --> 00:19:03,039
framework

478
00:19:03,039 --> 00:19:05,760
that had 13 critical zero day

479
00:19:05,760 --> 00:19:06,720
disclosures

480
00:19:06,720 --> 00:19:11,039
just over 5 years

481
00:19:11,039 --> 00:19:13,280
there's dependency confusion we're going

482
00:19:13,280 --> 00:19:16,799
to talk about this a little later on

483
00:19:18,000 --> 00:19:21,200
and then there's hostile takeover

484
00:19:21,200 --> 00:19:24,640
an example is from 2018 known as event

485
00:19:24,640 --> 00:19:25,520
stream

486
00:19:25,520 --> 00:19:28,880
and involving node.js

487
00:19:28,880 --> 00:19:31,440
when the original owner was approached

488
00:19:31,440 --> 00:19:33,200
by another community member who was

489
00:19:33,200 --> 00:19:34,720
willing to take over the management of

490
00:19:34,720 --> 00:19:36,000
his project

491
00:19:36,000 --> 00:19:38,320
well they handed it over in good faith

492
00:19:38,320 --> 00:19:41,679
they transferred all that control

493
00:19:41,679 --> 00:19:44,559
in a few weeks malicious code was being

494
00:19:44,559 --> 00:19:45,679
downloaded

495
00:19:45,679 --> 00:19:48,000
via automated build tools and then

496
00:19:48,000 --> 00:19:49,039
deployed in

497
00:19:49,039 --> 00:19:52,320
numerous software applications this code

498
00:19:52,320 --> 00:19:53,760
was designed to steal

499
00:19:53,760 --> 00:19:57,600
credentials from copay bitcoin wallets

500
00:19:57,600 --> 00:20:00,000
it used encryption to hide its

501
00:20:00,000 --> 00:20:01,360
functionality

502
00:20:01,360 --> 00:20:03,919
and the stolen credential data was sent

503
00:20:03,919 --> 00:20:06,240
to a remote server

504
00:20:06,240 --> 00:20:09,440
fortunately some mistakes caught the

505
00:20:09,440 --> 00:20:11,679
attention of managers of the node.js

506
00:20:11,679 --> 00:20:12,640
repo

507
00:20:12,640 --> 00:20:14,080
and they thought that there was a bug in

508
00:20:14,080 --> 00:20:17,360
the package and they looked further

509
00:20:17,360 --> 00:20:18,880
so this is a good lesson about the

510
00:20:18,880 --> 00:20:21,039
abusive trust

511
00:20:21,039 --> 00:20:23,440
the assumption that the software supply

512
00:20:23,440 --> 00:20:25,120
chain is trustworthy

513
00:20:25,120 --> 00:20:28,080
and that anyone can create or contribute

514
00:20:28,080 --> 00:20:28,880
with no

515
00:20:28,880 --> 00:20:35,280
formal vetting process

516
00:20:35,280 --> 00:20:38,000
this is a good depiction of how an

517
00:20:38,000 --> 00:20:38,960
attack uses

518
00:20:38,960 --> 00:20:41,760
dependency trees i'll just let you take

519
00:20:41,760 --> 00:20:43,039
a look at it and

520
00:20:43,039 --> 00:20:46,400
not get into the weeds

521
00:20:47,600 --> 00:20:49,039
this is from something known as the

522
00:20:49,039 --> 00:20:50,640
backstabbers knife collection

523
00:20:50,640 --> 00:20:53,520
and the link is there

524
00:20:57,039 --> 00:21:00,240
solar winds december 14 2020

525
00:21:00,240 --> 00:21:02,240
a lot of us remember where we were that

526
00:21:02,240 --> 00:21:03,280
day

527
00:21:03,280 --> 00:21:05,039
what we were doing and what we wound up

528
00:21:05,039 --> 00:21:07,360
doing

529
00:21:07,440 --> 00:21:09,919
solarwinds orion is trusted network

530
00:21:09,919 --> 00:21:11,760
management and monitoring software

531
00:21:11,760 --> 00:21:15,440
used by the government fortune 500s

532
00:21:15,440 --> 00:21:19,200
microsoft fireeye and nobody knew

533
00:21:19,200 --> 00:21:21,840
anything was wrong it's been described

534
00:21:21,840 --> 00:21:22,400
as

535
00:21:22,400 --> 00:21:25,440
the most significant attack of our time

536
00:21:25,440 --> 00:21:27,360
what's distinctive about it is the

537
00:21:27,360 --> 00:21:29,520
degree of stealth

538
00:21:29,520 --> 00:21:32,720
and the ability the total ability

539
00:21:32,720 --> 00:21:34,559
of the attackers to conceal their

540
00:21:34,559 --> 00:21:37,039
actions they had wicked good opsec

541
00:21:37,039 --> 00:21:38,799
and the length of time it took for

542
00:21:38,799 --> 00:21:40,080
discovery

543
00:21:40,080 --> 00:21:42,000
this was an operation that took time and

544
00:21:42,000 --> 00:21:44,159
precision to do the reconnaissance

545
00:21:44,159 --> 00:21:48,960
sophistication to tailor it and patience

546
00:21:50,799 --> 00:21:53,120
the attackers targeted and compromised

547
00:21:53,120 --> 00:21:54,640
the software build environment

548
00:21:54,640 --> 00:21:56,400
and code signing infrastructure for

549
00:21:56,400 --> 00:21:59,280
orion they modified the source code to

550
00:21:59,280 --> 00:22:00,320
add a back door

551
00:22:00,320 --> 00:22:03,440
and they signed it they leveraged the

552
00:22:03,440 --> 00:22:04,159
existing

553
00:22:04,159 --> 00:22:06,799
software release management system and

554
00:22:06,799 --> 00:22:07,840
then they used

555
00:22:07,840 --> 00:22:10,400
stolen certificates to laterally move

556
00:22:10,400 --> 00:22:10,880
through

557
00:22:10,880 --> 00:22:13,840
chains of trust

558
00:22:16,480 --> 00:22:19,919
dependency confusion as promised

559
00:22:19,919 --> 00:22:23,840
this is a very interesting

560
00:22:23,840 --> 00:22:27,039
attack security researcher alex berson

561
00:22:27,039 --> 00:22:28,960
shot a bright light on a scary

562
00:22:28,960 --> 00:22:30,720
possibility

563
00:22:30,720 --> 00:22:32,880
he took a hypothesis about a supply

564
00:22:32,880 --> 00:22:35,039
chain substitution attack

565
00:22:35,039 --> 00:22:36,960
where a software installer script is

566
00:22:36,960 --> 00:22:39,039
tricked into pulling a malicious code

567
00:22:39,039 --> 00:22:41,679
file from a public repository

568
00:22:41,679 --> 00:22:44,240
instead of getting that intended file

569
00:22:44,240 --> 00:22:46,400
with the same name

570
00:22:46,400 --> 00:22:49,919
from a trusted internal repository

571
00:22:49,919 --> 00:22:52,559
then he went on to target apple

572
00:22:52,559 --> 00:22:53,600
microsoft

573
00:22:53,600 --> 00:22:56,480
tesla and 32 other companies so that he

574
00:22:56,480 --> 00:22:57,520
could execute

575
00:22:57,520 --> 00:22:59,520
unauthorized code inside of their

576
00:22:59,520 --> 00:23:02,400
networks to prove this worked

577
00:23:02,400 --> 00:23:04,559
it did and within 48 hours of

578
00:23:04,559 --> 00:23:06,159
publication of this

579
00:23:06,159 --> 00:23:08,080
a lot of other parties thought it was a

580
00:23:08,080 --> 00:23:09,679
good idea too

581
00:23:09,679 --> 00:23:12,240
so without permission they targeted some

582
00:23:12,240 --> 00:23:14,320
more companies in march of this year

583
00:23:14,320 --> 00:23:17,200
and those included microsoft amazon

584
00:23:17,200 --> 00:23:18,320
slack

585
00:23:18,320 --> 00:23:22,720
lyft zillow and more here's the issue

586
00:23:22,720 --> 00:23:25,679
existing dependency scanners typically

587
00:23:25,679 --> 00:23:28,240
don't detect if a dependency executes

588
00:23:28,240 --> 00:23:29,679
malicious code

589
00:23:29,679 --> 00:23:31,919
since these tools are limited to

590
00:23:31,919 --> 00:23:34,840
identifying dependencies with known

591
00:23:34,840 --> 00:23:37,840
vulnerabilities

592
00:23:37,840 --> 00:23:41,120
now this prompted a study by researchers

593
00:23:41,120 --> 00:23:44,960
at red hunt labs and what did they find

594
00:23:44,960 --> 00:23:47,760
93 repositories out of the top 1000

595
00:23:47,760 --> 00:23:49,600
github organizations

596
00:23:49,600 --> 00:23:52,159
are using a package that does not exist

597
00:23:52,159 --> 00:23:54,480
on a public package index

598
00:23:54,480 --> 00:23:56,880
this can be claimed by an attacker to

599
00:23:56,880 --> 00:23:59,640
cause a supply chain attack

600
00:23:59,640 --> 00:24:02,240
169 repositories were found to be

601
00:24:02,240 --> 00:24:03,760
installing dependencies

602
00:24:03,760 --> 00:24:06,799
from a host that is not reachable over

603
00:24:06,799 --> 00:24:09,360
the internet

604
00:24:09,400 --> 00:24:12,400
126 repositories were

605
00:24:12,400 --> 00:24:15,520
installing packages owned by a github or

606
00:24:15,520 --> 00:24:16,799
get lab user

607
00:24:16,799 --> 00:24:20,799
that doesn't exist and of the top 1000

608
00:24:20,799 --> 00:24:22,760
organizations scanned

609
00:24:22,760 --> 00:24:25,840
212 had at least one dependency

610
00:24:25,840 --> 00:24:27,120
confusion related

611
00:24:27,120 --> 00:24:30,000
misconfiguration in their code base now

612
00:24:30,000 --> 00:24:31,679
this matters because

613
00:24:31,679 --> 00:24:34,320
according to the researchers much of our

614
00:24:34,320 --> 00:24:36,720
open source ecosystem depends on

615
00:24:36,720 --> 00:24:38,960
these particular companies and we know

616
00:24:38,960 --> 00:24:40,559
that these repositories

617
00:24:40,559 --> 00:24:43,679
have a lot of users so

618
00:24:43,679 --> 00:24:46,640
if any of the projects get affected

619
00:24:46,640 --> 00:24:48,480
there is a high probability

620
00:24:48,480 --> 00:24:50,640
that potentially millions of users could

621
00:24:50,640 --> 00:24:53,600
be at risk

622
00:24:54,640 --> 00:24:58,000
xcode spy we know that attackers

623
00:24:58,000 --> 00:25:00,400
are targeting developers they're

624
00:25:00,400 --> 00:25:02,159
targeting those shared sites

625
00:25:02,159 --> 00:25:04,400
the repositories where code is uploaded

626
00:25:04,400 --> 00:25:06,559
for use by others

627
00:25:06,559 --> 00:25:09,200
in march of this year a new malware

628
00:25:09,200 --> 00:25:10,400
variant was observed

629
00:25:10,400 --> 00:25:13,279
targeting ios developers in a supply

630
00:25:13,279 --> 00:25:13,760
chain

631
00:25:13,760 --> 00:25:16,880
attack to install a back door on

632
00:25:16,880 --> 00:25:19,200
developers computers

633
00:25:19,200 --> 00:25:22,480
this is a malicious project and it's

634
00:25:22,480 --> 00:25:23,039
taking

635
00:25:23,039 --> 00:25:25,360
advantage in abusing this free

636
00:25:25,360 --> 00:25:26,240
application

637
00:25:26,240 --> 00:25:29,600
development environment it's abusing a

638
00:25:29,600 --> 00:25:31,760
common behavior by developers

639
00:25:31,760 --> 00:25:34,000
to share their projects online with

640
00:25:34,000 --> 00:25:35,600
other users

641
00:25:35,600 --> 00:25:37,919
and the threat actors behind this abuse

642
00:25:37,919 --> 00:25:38,799
that norm

643
00:25:38,799 --> 00:25:41,279
and they used a legitimate development

644
00:25:41,279 --> 00:25:43,279
environment created by apple

645
00:25:43,279 --> 00:25:45,760
to fool their victims into adding an

646
00:25:45,760 --> 00:25:47,440
online project

647
00:25:47,440 --> 00:25:50,320
to their app that would in effect

648
00:25:50,320 --> 00:25:51,840
compromise their systems in

649
00:25:51,840 --> 00:25:55,440
a supply chain attack

650
00:25:55,440 --> 00:25:58,640
it's an abusive trust

651
00:25:59,919 --> 00:26:03,840
codecov this is an online platform

652
00:26:03,840 --> 00:26:06,320
used for hosting code testing reports

653
00:26:06,320 --> 00:26:07,679
and statistics

654
00:26:07,679 --> 00:26:10,159
it provides developers with tools to

655
00:26:10,159 --> 00:26:11,600
help them quantify

656
00:26:11,600 --> 00:26:13,440
how much source code gets executed

657
00:26:13,440 --> 00:26:15,360
during testing

658
00:26:15,360 --> 00:26:18,480
now they serve over 29 000 customers

659
00:26:18,480 --> 00:26:19,279
globally

660
00:26:19,279 --> 00:26:21,600
and many of those are enterprise level

661
00:26:21,600 --> 00:26:22,559
they include

662
00:26:22,559 --> 00:26:25,679
companies like godaddy atlassian royal

663
00:26:25,679 --> 00:26:26,880
bank of canada

664
00:26:26,880 --> 00:26:30,559
procter and gamble but the impact went

665
00:26:30,559 --> 00:26:31,840
beyond them

666
00:26:31,840 --> 00:26:34,080
to thousands of public development

667
00:26:34,080 --> 00:26:35,600
projects things like

668
00:26:35,600 --> 00:26:40,159
ansible kubernetes pi test

669
00:26:40,159 --> 00:26:43,200
and victims included twilio

670
00:26:43,200 --> 00:26:46,320
rapid seven and the e-commerce platform

671
00:26:46,320 --> 00:26:50,240
mercari on april first of this year

672
00:26:50,240 --> 00:26:53,039
kodkov reported that a supply chain

673
00:26:53,039 --> 00:26:53,760
attack

674
00:26:53,760 --> 00:26:55,440
had actually occurred back in late

675
00:26:55,440 --> 00:26:57,039
january

676
00:26:57,039 --> 00:26:59,440
what happened was this attackers

677
00:26:59,440 --> 00:27:01,440
leveraged an error in the process that

678
00:27:01,440 --> 00:27:02,720
creates kodkov's

679
00:27:02,720 --> 00:27:06,000
docker image so this allowed for them to

680
00:27:06,000 --> 00:27:08,960
extract credentials which protect the

681
00:27:08,960 --> 00:27:11,760
modification of the bash uploader script

682
00:27:11,760 --> 00:27:14,559
that's a tool that's used by customers

683
00:27:14,559 --> 00:27:16,640
to send their code coverage reports

684
00:27:16,640 --> 00:27:19,760
to the platform there's a lot of stuff

685
00:27:19,760 --> 00:27:20,880
included

686
00:27:20,880 --> 00:27:24,000
in those code coverage reports now the

687
00:27:24,000 --> 00:27:25,520
script was modified

688
00:27:25,520 --> 00:27:27,440
to deliver details from the customer

689
00:27:27,440 --> 00:27:29,840
environments to a server that was

690
00:27:29,840 --> 00:27:34,000
outside of codecov and then attackers

691
00:27:34,000 --> 00:27:37,440
could export credentials tokens

692
00:27:37,440 --> 00:27:40,640
or keys that passed through codecov's

693
00:27:40,640 --> 00:27:44,080
continuous integration environment

694
00:27:44,080 --> 00:27:45,760
and then they could use those to access

695
00:27:45,760 --> 00:27:47,520
services data stores

696
00:27:47,520 --> 00:27:50,960
or even application code

697
00:27:52,640 --> 00:27:54,559
what were you doing on the july long

698
00:27:54,559 --> 00:27:55,919
weekend

699
00:27:55,919 --> 00:27:59,200
yeah a whole lot of us were doing this

700
00:27:59,200 --> 00:28:02,399
kaseya is an i.t solutions developer

701
00:28:02,399 --> 00:28:04,880
for managed services providers and

702
00:28:04,880 --> 00:28:07,279
enterprise level organizations

703
00:28:07,279 --> 00:28:10,000
over 40 000 reportedly use at least one

704
00:28:10,000 --> 00:28:11,919
cassaya product

705
00:28:11,919 --> 00:28:14,399
they offer something known as vsa which

706
00:28:14,399 --> 00:28:16,000
is a unified remote

707
00:28:16,000 --> 00:28:18,320
monitoring and management tool for

708
00:28:18,320 --> 00:28:20,159
networks and endpoints

709
00:28:20,159 --> 00:28:23,520
yeah it sounds familiar doesn't it which

710
00:28:23,520 --> 00:28:26,080
happens to have a high level of trust on

711
00:28:26,080 --> 00:28:28,159
customer devices

712
00:28:28,159 --> 00:28:30,960
so much so that attached clients will do

713
00:28:30,960 --> 00:28:32,960
whatever they are told

714
00:28:32,960 --> 00:28:35,520
and therefore that's likely one of the

715
00:28:35,520 --> 00:28:38,559
reasons that casey was targeted

716
00:28:38,559 --> 00:28:41,520
so on july 2nd rival ransomware

717
00:28:41,520 --> 00:28:42,880
operators delivered a

718
00:28:42,880 --> 00:28:46,080
fake vsa update sending a ransomware

719
00:28:46,080 --> 00:28:46,960
payload from

720
00:28:46,960 --> 00:28:50,240
compromised vsa servers to vsa agents

721
00:28:50,240 --> 00:28:51,120
that were running on

722
00:28:51,120 --> 00:28:54,159
managed windows devices let's

723
00:28:54,159 --> 00:28:57,760
talk trust issues initial compromise

724
00:28:57,760 --> 00:29:00,240
through a trusted channel that further

725
00:29:00,240 --> 00:29:01,600
exploited the trust

726
00:29:01,600 --> 00:29:05,279
in that vsa agent code

727
00:29:07,360 --> 00:29:09,760
initial access came from exploited

728
00:29:09,760 --> 00:29:12,480
zero-day vulnerabilities

729
00:29:12,480 --> 00:29:14,799
in cassaya's vsa software and it

730
00:29:14,799 --> 00:29:16,000
leveraged those against

731
00:29:16,000 --> 00:29:19,520
a number of msps the attack was

732
00:29:19,520 --> 00:29:20,159
triggered

733
00:29:20,159 --> 00:29:22,240
via an authentication bypass

734
00:29:22,240 --> 00:29:23,520
vulnerability

735
00:29:23,520 --> 00:29:26,640
in the casea vsa web interface

736
00:29:26,640 --> 00:29:28,480
and then this allowed for the attackers

737
00:29:28,480 --> 00:29:32,159
to circumvent authentication controls

738
00:29:32,159 --> 00:29:34,880
they got an authenticated session they

739
00:29:34,880 --> 00:29:36,159
used that to upload

740
00:29:36,159 --> 00:29:38,240
upload their malicious payload and then

741
00:29:38,240 --> 00:29:40,000
they executed commands via

742
00:29:40,000 --> 00:29:43,200
sql injection achieving code execution

743
00:29:43,200 --> 00:29:45,120
in the process

744
00:29:45,120 --> 00:29:46,799
the malicious update was dubbed the

745
00:29:46,799 --> 00:29:49,919
cassette vsa agent hotfix

746
00:29:49,919 --> 00:29:53,679
so trust issues well that hotfix was

747
00:29:53,679 --> 00:29:56,240
already good to go thanks to

748
00:29:56,240 --> 00:29:57,679
anti-malware software

749
00:29:57,679 --> 00:30:00,320
exclusions that got set up for cassaya

750
00:30:00,320 --> 00:30:02,880
at the time of installation

751
00:30:02,880 --> 00:30:04,960
and then the attackers attempted to

752
00:30:04,960 --> 00:30:07,120
disable ms defender

753
00:30:07,120 --> 00:30:11,440
using a signed certificate shown here

754
00:30:11,440 --> 00:30:14,559
the current tally is about 50 casseya

755
00:30:14,559 --> 00:30:16,159
direct customers

756
00:30:16,159 --> 00:30:19,440
and anywhere from 800 to 1500

757
00:30:19,440 --> 00:30:21,520
small to medium-sized businesses along

758
00:30:21,520 --> 00:30:22,640
that chain

759
00:30:22,640 --> 00:30:25,360
who got infected some of these weren't

760
00:30:25,360 --> 00:30:27,919
even cassay's customers

761
00:30:27,919 --> 00:30:30,640
the thing is from an impact standpoint

762
00:30:30,640 --> 00:30:32,640
these are smaller companies

763
00:30:32,640 --> 00:30:34,799
they don't have the financial or

764
00:30:34,799 --> 00:30:36,000
personnel resources

765
00:30:36,000 --> 00:30:39,440
that enterprises do to deal with

766
00:30:39,440 --> 00:30:42,880
a major ransomware attack

767
00:30:44,640 --> 00:30:48,159
so let's talk now about who's maximizing

768
00:30:48,159 --> 00:30:51,840
these opportunities

769
00:30:52,480 --> 00:30:55,760
of all the state-sponsored adversaries

770
00:30:55,760 --> 00:30:58,880
chinese cyber espionage groups have been

771
00:30:58,880 --> 00:31:01,600
and will continue to be i think the

772
00:31:01,600 --> 00:31:03,679
biggest threat to tech

773
00:31:03,679 --> 00:31:06,399
because they conduct economic espionage

774
00:31:06,399 --> 00:31:09,279
and intellectual property theft

775
00:31:09,279 --> 00:31:11,200
technology companies as we know are rich

776
00:31:11,200 --> 00:31:12,880
targets just on their own

777
00:31:12,880 --> 00:31:15,519
but these groups leverage them to infect

778
00:31:15,519 --> 00:31:16,640
supply chains

779
00:31:16,640 --> 00:31:20,159
and go after those customers they are

780
00:31:20,159 --> 00:31:22,399
definitely the leaders of the pack in

781
00:31:22,399 --> 00:31:23,279
terms of

782
00:31:23,279 --> 00:31:27,760
the number of attacks and capabilities

783
00:31:29,120 --> 00:31:32,320
now this chart is from

784
00:31:32,320 --> 00:31:34,480
the report broken trust that was issued

785
00:31:34,480 --> 00:31:36,000
earlier this year by the atlantic

786
00:31:36,000 --> 00:31:37,840
council

787
00:31:37,840 --> 00:31:40,720
and in it they reported 36 other cases

788
00:31:40,720 --> 00:31:40,960
of

789
00:31:40,960 --> 00:31:43,279
intruders successfully targeting

790
00:31:43,279 --> 00:31:46,240
software updates from about 138 recorded

791
00:31:46,240 --> 00:31:48,720
supply chain attacks and vulnerability

792
00:31:48,720 --> 00:31:50,320
disclosures

793
00:31:50,320 --> 00:31:54,159
of these 36 15 had similar access

794
00:31:54,159 --> 00:31:56,559
to build or update the infrastructure

795
00:31:56,559 --> 00:31:58,559
and half of those 15

796
00:31:58,559 --> 00:32:02,799
could be attributed to nation states

797
00:32:04,159 --> 00:32:06,640
these are some of the most well-known

798
00:32:06,640 --> 00:32:09,279
supply chain attacks involving

799
00:32:09,279 --> 00:32:12,720
chinese state-sponsored threat actors

800
00:32:12,720 --> 00:32:15,600
while russian adversaries are formidable

801
00:32:15,600 --> 00:32:16,720
oh yeah

802
00:32:16,720 --> 00:32:20,320
solarwinds orion you really don't want

803
00:32:20,320 --> 00:32:23,200
chinese apts in your network they play

804
00:32:23,200 --> 00:32:25,279
the long game better than anybody else

805
00:32:25,279 --> 00:32:28,240
they're masters of stealth and they are

806
00:32:28,240 --> 00:32:30,159
ruthlessly dedicated

807
00:32:30,159 --> 00:32:33,840
to eliminating the competition

808
00:32:36,480 --> 00:32:40,799
we'll talk about ccleaner from 2017.

809
00:32:40,799 --> 00:32:43,440
this one has been linked to apt-17 we

810
00:32:43,440 --> 00:32:45,440
mentioned them earlier

811
00:32:45,440 --> 00:32:47,760
and more specifically a subgroup known

812
00:32:47,760 --> 00:32:49,200
as axiom

813
00:32:49,200 --> 00:32:51,279
again historically engaged in supply

814
00:32:51,279 --> 00:32:52,720
chain attacks

815
00:32:52,720 --> 00:32:54,640
the sea cleaner attack showcases

816
00:32:54,640 --> 00:32:56,159
technical knowledge

817
00:32:56,159 --> 00:32:59,519
preparation and patience the timing was

818
00:32:59,519 --> 00:33:00,399
strategically

819
00:33:00,399 --> 00:33:03,519
advantageous because the original owner

820
00:33:03,519 --> 00:33:06,159
piriform was in the process of selling

821
00:33:06,159 --> 00:33:07,200
to avast

822
00:33:07,200 --> 00:33:09,760
anybody who's ever sold the car or more

823
00:33:09,760 --> 00:33:10,240
important

824
00:33:10,240 --> 00:33:11,600
let's say you're selling your house you

825
00:33:11,600 --> 00:33:14,159
know what goes on

826
00:33:14,159 --> 00:33:15,679
there's a lot of distraction and

827
00:33:15,679 --> 00:33:17,279
confusion

828
00:33:17,279 --> 00:33:20,159
so it would be easy to miss things in

829
00:33:20,159 --> 00:33:21,120
the network

830
00:33:21,120 --> 00:33:24,640
that didn't belong there the attackers

831
00:33:24,640 --> 00:33:25,760
took their time

832
00:33:25,760 --> 00:33:27,919
to move laterally in the network during

833
00:33:27,919 --> 00:33:28,960
off hours

834
00:33:28,960 --> 00:33:31,840
to avoid detection and within a month

835
00:33:31,840 --> 00:33:33,120
they had installed a

836
00:33:33,120 --> 00:33:36,240
modified version of shadowpad backdoor

837
00:33:36,240 --> 00:33:37,279
malware

838
00:33:37,279 --> 00:33:39,760
to escalate their privileges and then

839
00:33:39,760 --> 00:33:42,000
they distributed a cryptographically

840
00:33:42,000 --> 00:33:43,440
signed version

841
00:33:43,440 --> 00:33:46,559
of the modified ccleaner product

842
00:33:46,559 --> 00:33:50,000
no one suspected anything

843
00:33:51,360 --> 00:33:52,960
so let's take a little walk through that

844
00:33:52,960 --> 00:33:55,200
a text step by step

845
00:33:55,200 --> 00:33:57,679
for initial compromise they accessed

846
00:33:57,679 --> 00:33:59,360
unattended workstations

847
00:33:59,360 --> 00:34:02,480
of a ccleaner developer

848
00:34:02,480 --> 00:34:04,399
just this one actually which was

849
00:34:04,399 --> 00:34:06,000
connected to the piriform network

850
00:34:06,000 --> 00:34:09,679
via teamviewer teamviewer for the win

851
00:34:09,679 --> 00:34:12,960
remote they've reused credentials

852
00:34:12,960 --> 00:34:14,719
we've talked about this many times

853
00:34:14,719 --> 00:34:17,040
haven't we from previous database

854
00:34:17,040 --> 00:34:17,599
breaches

855
00:34:17,599 --> 00:34:20,159
and they used those to access that teen

856
00:34:20,159 --> 00:34:22,399
viewer account

857
00:34:22,399 --> 00:34:24,320
they delivered malware then using

858
00:34:24,320 --> 00:34:25,918
vbscript

859
00:34:25,918 --> 00:34:28,000
and they went on to develop their

860
00:34:28,000 --> 00:34:29,918
malicious version of the ccleaner

861
00:34:29,918 --> 00:34:31,359
product

862
00:34:31,359 --> 00:34:34,320
using rdp they opened a back door on a

863
00:34:34,320 --> 00:34:34,879
second

864
00:34:34,879 --> 00:34:38,079
unattended but connected computer there

865
00:34:38,079 --> 00:34:40,399
they dropped a binary and a malicious

866
00:34:40,399 --> 00:34:42,480
payload of second stage malware

867
00:34:42,480 --> 00:34:45,119
and this was delivered to 40 ccleaner

868
00:34:45,119 --> 00:34:46,399
users

869
00:34:46,399 --> 00:34:48,159
and then they compiled a customized

870
00:34:48,159 --> 00:34:50,159
version of the shadow pad

871
00:34:50,159 --> 00:34:53,119
backdoor to allow for further malicious

872
00:34:53,119 --> 00:34:54,159
downloads

873
00:34:54,159 --> 00:34:57,119
and data theft in preparation for the

874
00:34:57,119 --> 00:34:58,400
third stage

875
00:34:58,400 --> 00:35:00,839
where they installed their third stage

876
00:35:00,839 --> 00:35:03,839
payload

877
00:35:04,400 --> 00:35:07,200
that malicious version had multi-stage

878
00:35:07,200 --> 00:35:08,480
malware

879
00:35:08,480 --> 00:35:10,720
to steal data and send it back to the

880
00:35:10,720 --> 00:35:13,680
command and control

881
00:35:13,839 --> 00:35:16,480
as for action on objectives well all

882
00:35:16,480 --> 00:35:17,520
that data

883
00:35:17,520 --> 00:35:19,920
probably went into future espionage

884
00:35:19,920 --> 00:35:22,400
projects

885
00:35:24,240 --> 00:35:28,720
in 2018 apt 17

886
00:35:28,720 --> 00:35:32,400
well sorry 2017 apt-17

887
00:35:32,400 --> 00:35:34,320
also known as barium delivered shadow

888
00:35:34,320 --> 00:35:35,440
pad malware

889
00:35:35,440 --> 00:35:39,040
to in fact enterprise networks via a

890
00:35:39,040 --> 00:35:40,000
product known as

891
00:35:40,000 --> 00:35:43,040
netsurang now netsurance specializes in

892
00:35:43,040 --> 00:35:44,880
server management and security

893
00:35:44,880 --> 00:35:46,480
connectivity software

894
00:35:46,480 --> 00:35:48,560
that was used globally by major

895
00:35:48,560 --> 00:35:50,240
organizations

896
00:35:50,240 --> 00:35:52,000
we've heard about that stuff before it

897
00:35:52,000 --> 00:35:55,119
seems to be a popular choice

898
00:35:55,119 --> 00:35:58,160
a module hidden in a code library was

899
00:35:58,160 --> 00:35:58,640
making

900
00:35:58,640 --> 00:36:02,320
suspicious dns requests and sending data

901
00:36:02,320 --> 00:36:04,880
back to the operators who then decided

902
00:36:04,880 --> 00:36:05,520
if they

903
00:36:05,520 --> 00:36:08,720
wanted to go ahead with it if they did

904
00:36:08,720 --> 00:36:10,800
they would send a malware payload with a

905
00:36:10,800 --> 00:36:12,320
full back door

906
00:36:12,320 --> 00:36:15,599
to take over the system

907
00:36:17,680 --> 00:36:20,240
we talked about shadowhammer earlier

908
00:36:20,240 --> 00:36:26,400
that was the asus live update attack

909
00:36:26,400 --> 00:36:29,599
2020 able desktop

910
00:36:29,599 --> 00:36:32,000
so this involved the chinese apt group

911
00:36:32,000 --> 00:36:33,040
lucky mouse

912
00:36:33,040 --> 00:36:35,760
who went after chat software used by the

913
00:36:35,760 --> 00:36:37,599
mongolian government

914
00:36:37,599 --> 00:36:39,200
agencies as well as some private

915
00:36:39,200 --> 00:36:40,720
businesses

916
00:36:40,720 --> 00:36:43,200
they hijacked updates in the software

917
00:36:43,200 --> 00:36:45,040
supply chain

918
00:36:45,040 --> 00:36:48,079
now the attackers didn't need to steal

919
00:36:48,079 --> 00:36:51,359
or forge an updated signature

920
00:36:51,359 --> 00:36:57,119
because able's updates were not signed

921
00:36:59,839 --> 00:37:03,200
in 2020 there was operation sign site

922
00:37:03,200 --> 00:37:05,200
this targeted the vietnamese

923
00:37:05,200 --> 00:37:08,320
government's certificate authority

924
00:37:08,320 --> 00:37:11,200
so this was a targeted software supply

925
00:37:11,200 --> 00:37:12,480
chain intrusion

926
00:37:12,480 --> 00:37:14,480
that could affect a wide range of both

927
00:37:14,480 --> 00:37:16,880
public and private entities

928
00:37:16,880 --> 00:37:19,680
who used the digital signature software

929
00:37:19,680 --> 00:37:21,040
which provided

930
00:37:21,040 --> 00:37:23,520
certificates of validation and software

931
00:37:23,520 --> 00:37:24,560
suites

932
00:37:24,560 --> 00:37:28,320
to handle digital document signatures

933
00:37:28,320 --> 00:37:30,640
that software is widely used throughout

934
00:37:30,640 --> 00:37:31,440
vietnam

935
00:37:31,440 --> 00:37:34,960
it's even mandated in some cases

936
00:37:34,960 --> 00:37:39,680
key point here is abusing

937
00:37:39,680 --> 00:37:43,040
and targeting something against

938
00:37:43,040 --> 00:37:46,560
a service oligopoly

939
00:37:47,280 --> 00:37:50,160
it's not clear who exactly among the

940
00:37:50,160 --> 00:37:52,000
chinese state-sponsored groups was

941
00:37:52,000 --> 00:37:52,800
behind this

942
00:37:52,800 --> 00:37:55,400
but they're possibly the group known as

943
00:37:55,400 --> 00:37:56,560
ta-428

944
00:37:56,560 --> 00:37:58,800
who happen to have a track record of

945
00:37:58,800 --> 00:38:00,079
targeting

946
00:38:00,079 --> 00:38:02,839
east asian countries like mongolia and

947
00:38:02,839 --> 00:38:04,079
vietnam

948
00:38:04,079 --> 00:38:08,560
for these supply chain attacks

949
00:38:10,400 --> 00:38:13,119
now this is a very interesting attack

950
00:38:13,119 --> 00:38:13,680
with

951
00:38:13,680 --> 00:38:18,400
similarities to napeta

952
00:38:18,400 --> 00:38:20,720
it just lacks the destructive malware

953
00:38:20,720 --> 00:38:22,400
component thankfully

954
00:38:22,400 --> 00:38:25,359
golden spy malware was embedded in

955
00:38:25,359 --> 00:38:26,720
required tax

956
00:38:26,720 --> 00:38:29,040
payment software that's issued to

957
00:38:29,040 --> 00:38:30,560
corporations who would like to do

958
00:38:30,560 --> 00:38:31,119
business

959
00:38:31,119 --> 00:38:34,720
in china and the chinese banks require

960
00:38:34,720 --> 00:38:36,800
businesses to install something known as

961
00:38:36,800 --> 00:38:38,880
intelligent tax in order to pay the

962
00:38:38,880 --> 00:38:40,400
local taxes

963
00:38:40,400 --> 00:38:42,560
this is produced by the golden tax

964
00:38:42,560 --> 00:38:46,240
department of the isino corporation yep

965
00:38:46,240 --> 00:38:48,240
it sounds familiar doesn't it

966
00:38:48,240 --> 00:38:50,720
the malware installed a back door on

967
00:38:50,720 --> 00:38:51,599
systems

968
00:38:51,599 --> 00:38:53,839
which enabled a remote thread actor then

969
00:38:53,839 --> 00:38:55,920
to execute windows commands or

970
00:38:55,920 --> 00:38:59,040
upload and execute any binary

971
00:38:59,040 --> 00:39:02,320
that could include ransomware or trojans

972
00:39:02,320 --> 00:39:04,720
and the malware provided system level

973
00:39:04,720 --> 00:39:06,320
privileges

974
00:39:06,320 --> 00:39:09,599
with the capability of executing any

975
00:39:09,599 --> 00:39:10,560
software

976
00:39:10,560 --> 00:39:13,200
on any system where it's installed and

977
00:39:13,200 --> 00:39:14,960
interestingly enough

978
00:39:14,960 --> 00:39:16,800
just because you removed the tax

979
00:39:16,800 --> 00:39:18,640
software you did not remove

980
00:39:18,640 --> 00:39:21,760
the golden spy malware back door it

981
00:39:21,760 --> 00:39:22,720
connected

982
00:39:22,720 --> 00:39:26,839
to a cnc that was distinct from the tax

983
00:39:26,839 --> 00:39:29,839
software

984
00:39:32,960 --> 00:39:36,560
so what have we learned

985
00:39:38,160 --> 00:39:40,560
well there is a new executive order

986
00:39:40,560 --> 00:39:43,200
which is a great starting point

987
00:39:43,200 --> 00:39:45,280
but as you've probably seen this picture

988
00:39:45,280 --> 00:39:49,040
is far bigger than we realize

989
00:39:49,599 --> 00:39:56,079
there's a whole lot of dependencies

990
00:39:56,079 --> 00:39:58,720
what can we do

991
00:39:59,280 --> 00:40:02,400
well package management is an ongoing

992
00:40:02,400 --> 00:40:03,359
challenge

993
00:40:03,359 --> 00:40:06,240
that we can do better a registry of

994
00:40:06,240 --> 00:40:07,920
record will help us to

995
00:40:07,920 --> 00:40:11,599
improve reliability in that chain

996
00:40:11,599 --> 00:40:15,040
code signing is important

997
00:40:15,359 --> 00:40:18,960
following the practices of making text

998
00:40:18,960 --> 00:40:21,200
secure by default

999
00:40:21,200 --> 00:40:23,040
using something that we're talking a lot

1000
00:40:23,040 --> 00:40:25,280
more about known as a software bill of

1001
00:40:25,280 --> 00:40:27,920
materials

1002
00:40:28,480 --> 00:40:31,520
eric sheehan of semantic who happen to

1003
00:40:31,520 --> 00:40:33,280
be integral in helping investigate and

1004
00:40:33,280 --> 00:40:34,960
decode stuxnet

1005
00:40:34,960 --> 00:40:37,440
likens this to finding a needle in a

1006
00:40:37,440 --> 00:40:38,960
haystack

1007
00:40:38,960 --> 00:40:41,280
having the right security telemetry and

1008
00:40:41,280 --> 00:40:42,960
visibility

1009
00:40:42,960 --> 00:40:45,599
at the right control points in your

1010
00:40:45,599 --> 00:40:48,400
organization

1011
00:40:51,200 --> 00:40:54,480
so here are some takeaways

1012
00:40:54,880 --> 00:40:57,839
we need to be paying more attention to

1013
00:40:57,839 --> 00:41:01,440
the open source code that we use

1014
00:41:02,480 --> 00:41:04,240
it's time to change what we've been

1015
00:41:04,240 --> 00:41:07,280
doing to identify and remediate risks

1016
00:41:07,280 --> 00:41:10,400
because we're missing things

1017
00:41:11,680 --> 00:41:14,720
those legacy security tools in use

1018
00:41:14,720 --> 00:41:17,839
they're not securing us

1019
00:41:19,440 --> 00:41:22,480
here's something new i'll share with you

1020
00:41:22,480 --> 00:41:26,240
and this because

1021
00:41:26,240 --> 00:41:29,520
it's time to level up

1022
00:41:32,079 --> 00:41:34,800
sigstor is from the linux foundation and

1023
00:41:34,800 --> 00:41:37,040
it seeks to empower software developers

1024
00:41:37,040 --> 00:41:37,520
to

1025
00:41:37,520 --> 00:41:40,480
securely sign software artifacts things

1026
00:41:40,480 --> 00:41:40,880
like

1027
00:41:40,880 --> 00:41:44,880
release files container images binaries

1028
00:41:44,880 --> 00:41:47,680
bill of material manifests etc the

1029
00:41:47,680 --> 00:41:50,079
signing materials get stored in a tamper

1030
00:41:50,079 --> 00:41:51,760
resistant public log of

1031
00:41:51,760 --> 00:41:54,800
all activity for accountability of

1032
00:41:54,800 --> 00:41:58,560
every submission and it's free for use

1033
00:41:58,560 --> 00:42:01,839
by all developers and software providers

1034
00:42:01,839 --> 00:42:05,040
and you can see the link there

1035
00:42:06,160 --> 00:42:08,560
package hunter is a new tool from get

1036
00:42:08,560 --> 00:42:11,200
lab that you can use to detect malicious

1037
00:42:11,200 --> 00:42:12,319
code

1038
00:42:12,319 --> 00:42:15,040
and also behavior that you're not

1039
00:42:15,040 --> 00:42:15,680
expecting

1040
00:42:15,680 --> 00:42:18,800
in your dependencies because as we know

1041
00:42:18,800 --> 00:42:20,079
there could be a lot of malicious

1042
00:42:20,079 --> 00:42:22,000
packages in the wild

1043
00:42:22,000 --> 00:42:25,839
this is free and it's open source

1044
00:42:26,560 --> 00:42:30,160
so i will end with this i love podcasts

1045
00:42:30,160 --> 00:42:33,839
and one of my go-to's is risky business

1046
00:42:33,839 --> 00:42:35,920
they had an excellent segment about

1047
00:42:35,920 --> 00:42:37,119
operation aurora

1048
00:42:37,119 --> 00:42:39,280
with mark rogers from octa whom i've

1049
00:42:39,280 --> 00:42:41,040
referenced a few times in here

1050
00:42:41,040 --> 00:42:44,319
and i will again now

1051
00:42:44,319 --> 00:42:47,520
if you can gain a position of trust

1052
00:42:47,520 --> 00:42:51,040
you can exploit it think service or

1053
00:42:51,040 --> 00:42:53,040
non-person ids

1054
00:42:53,040 --> 00:42:56,400
accounts that nobody really scrutinizes

1055
00:42:56,400 --> 00:42:59,359
with enough privilege to leverage to do

1056
00:42:59,359 --> 00:43:00,480
e-discovery

1057
00:43:00,480 --> 00:43:02,960
and to find all the stuff you need for

1058
00:43:02,960 --> 00:43:04,640
an attack

1059
00:43:04,640 --> 00:43:06,880
because your chain is only as good as

1060
00:43:06,880 --> 00:43:09,040
its weakest link

1061
00:43:09,040 --> 00:43:11,200
and there are more ways to abuse the

1062
00:43:11,200 --> 00:43:12,319
chain of trust

1063
00:43:12,319 --> 00:43:15,680
than people realize let me leave that

1064
00:43:15,680 --> 00:43:18,000
with you

1065
00:43:18,800 --> 00:43:21,119
thank you so very much for attending my

1066
00:43:21,119 --> 00:43:21,920
talk

1067
00:43:21,920 --> 00:43:23,599
for the opportunity to share this with

1068
00:43:23,599 --> 00:43:25,119
you

1069
00:43:25,119 --> 00:43:27,280
those are my details there and thank you

1070
00:43:27,280 --> 00:43:33,280
to apsec village

