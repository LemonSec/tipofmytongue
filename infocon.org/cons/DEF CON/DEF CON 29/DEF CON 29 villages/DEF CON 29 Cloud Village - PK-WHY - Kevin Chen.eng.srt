1
00:00:00,240 --> 00:00:03,360
uh my talk is about certificate and the

2
00:00:03,360 --> 00:00:06,399
pki which is public key infrastructure

3
00:00:06,399 --> 00:00:09,760
um it's usually hard um and from kind of

4
00:00:09,760 --> 00:00:12,799
anecdotal like evidence i know a lot of

5
00:00:12,799 --> 00:00:14,799
smart people who've avoided this

6
00:00:14,799 --> 00:00:16,480
particular rabbit hole for a whole long

7
00:00:16,480 --> 00:00:17,760
time

8
00:00:17,760 --> 00:00:19,119
and prior to my current role i've

9
00:00:19,119 --> 00:00:21,359
avoided this as well you know and felt

10
00:00:21,359 --> 00:00:23,760
the some shame for not knowing more the

11
00:00:23,760 --> 00:00:25,840
obvious result was this vicious cycle i

12
00:00:25,840 --> 00:00:28,160
was too embarrassed to ask questions so

13
00:00:28,160 --> 00:00:29,439
i never learned

14
00:00:29,439 --> 00:00:31,519
eventually i was forced to learn

15
00:00:31,519 --> 00:00:34,480
uh the stuff because i joined well a pki

16
00:00:34,480 --> 00:00:35,520
open or

17
00:00:35,520 --> 00:00:37,920
open core company called small step

18
00:00:37,920 --> 00:00:39,920
uh check us out you know open source

19
00:00:39,920 --> 00:00:42,840
stuff on github

20
00:00:42,840 --> 00:00:44,559
github.comsmallstep.com but you know i

21
00:00:44,559 --> 00:00:45,760
really wish that i learned all this

22
00:00:45,760 --> 00:00:47,280
stuff sooner would have helped my career

23
00:00:47,280 --> 00:00:48,800
when i was working heavily in the

24
00:00:48,800 --> 00:00:51,120
service mesh space and network

25
00:00:51,120 --> 00:00:54,000
connectivity with proxies so let's dive

26
00:00:54,000 --> 00:00:57,600
into the how and the whys for pkis so

27
00:00:57,600 --> 00:00:59,199
jeff if you could do next slide for me

28
00:00:59,199 --> 00:01:00,480
please

29
00:01:00,480 --> 00:01:02,480
yeah so you know before i get started

30
00:01:02,480 --> 00:01:04,799
here's a brief intro my name is kevin i

31
00:01:04,799 --> 00:01:06,799
work as a developer advocate at

32
00:01:06,799 --> 00:01:09,520
smallstep and focusing primarily on

33
00:01:09,520 --> 00:01:12,000
building out our open source toolkit and

34
00:01:12,000 --> 00:01:13,119
community

35
00:01:13,119 --> 00:01:15,840
i really like to nap so this photo

36
00:01:15,840 --> 00:01:18,159
really captures me in my natural state

37
00:01:18,159 --> 00:01:21,200
um so you know if you saw me at defcon

38
00:01:21,200 --> 00:01:23,920
in person over these past three days you

39
00:01:23,920 --> 00:01:25,759
know i was probably the one passed out

40
00:01:25,759 --> 00:01:27,840
in the corner i meant to say hi but i'm

41
00:01:27,840 --> 00:01:28,799
sorry

42
00:01:28,799 --> 00:01:32,240
all right next slide here

43
00:01:33,600 --> 00:01:33,970
um

44
00:01:33,970 --> 00:01:36,880
[Music]

45
00:01:36,880 --> 00:01:38,479
what okay

46
00:01:38,479 --> 00:01:40,799
more problems all right we're just gonna

47
00:01:40,799 --> 00:01:43,439
jeff do you want to just let's just

48
00:01:43,439 --> 00:01:45,119
yeah we'll just use my face as the main

49
00:01:45,119 --> 00:01:47,680
screen it's okay pkis i can make this

50
00:01:47,680 --> 00:01:49,360
fun without slides because honestly

51
00:01:49,360 --> 00:01:51,360
slides make things more boring anyways

52
00:01:51,360 --> 00:01:53,840
right so back to

53
00:01:53,840 --> 00:01:56,960
um fundamentally the math is complicated

54
00:01:56,960 --> 00:01:59,119
and my i'm terrible at math but the core

55
00:01:59,119 --> 00:02:01,200
concepts are really really simple and

56
00:02:01,200 --> 00:02:02,399
i'm going to try to make them as simple

57
00:02:02,399 --> 00:02:03,600
as possible

58
00:02:03,600 --> 00:02:06,479
um to simplify things right certificates

59
00:02:06,479 --> 00:02:09,280
are a way we identify code and devices

60
00:02:09,280 --> 00:02:11,599
and identity is super useful especially

61
00:02:11,599 --> 00:02:13,360
in this kind of distributed

62
00:02:13,360 --> 00:02:15,920
architecture age for stuff like security

63
00:02:15,920 --> 00:02:18,879
monitoring metrics million other things

64
00:02:18,879 --> 00:02:21,120
and using certificates not hard but

65
00:02:21,120 --> 00:02:22,640
before we can even talk about the

66
00:02:22,640 --> 00:02:24,959
certificates we want to use we have to

67
00:02:24,959 --> 00:02:26,720
talk about signatures

68
00:02:26,720 --> 00:02:29,440
signatures as in digital signatures are

69
00:02:29,440 --> 00:02:31,760
really a lot like the physical world

70
00:02:31,760 --> 00:02:34,239
signatures that you know we use they are

71
00:02:34,239 --> 00:02:36,640
used to verify who sent a message

72
00:02:36,640 --> 00:02:38,879
and they use in the digital space public

73
00:02:38,879 --> 00:02:40,879
key cryptography or asymmetric

74
00:02:40,879 --> 00:02:42,640
cryptography we don't do that in real

75
00:02:42,640 --> 00:02:43,920
life thank god it would be a pain in the

76
00:02:43,920 --> 00:02:44,720
butt

77
00:02:44,720 --> 00:02:47,360
so what it lets you do is that you can

78
00:02:47,360 --> 00:02:49,280
prove that someone knows

79
00:02:49,280 --> 00:02:51,120
their private key the private key

80
00:02:51,120 --> 00:02:53,519
without knowing the private key yourself

81
00:02:53,519 --> 00:02:55,519
how does this work let's kind of use

82
00:02:55,519 --> 00:02:57,440
example right you can use a public key

83
00:02:57,440 --> 00:03:00,000
to prove someone knows their private key

84
00:03:00,000 --> 00:03:01,680
and that becomes really important for

85
00:03:01,680 --> 00:03:04,239
authentication you know which is really

86
00:03:04,239 --> 00:03:06,239
what most people are using certificates

87
00:03:06,239 --> 00:03:09,040
for proving who sent a message

88
00:03:09,040 --> 00:03:12,560
uh because you know to you to generate a

89
00:03:12,560 --> 00:03:14,720
certificate you uh you need a private

90
00:03:14,720 --> 00:03:16,720
key but to verify signature you only

91
00:03:16,720 --> 00:03:19,040
need the public key and you can't

92
00:03:19,040 --> 00:03:21,280
generate a signature using the public

93
00:03:21,280 --> 00:03:22,959
key only the private key right keep that

94
00:03:22,959 --> 00:03:24,799
in mind there's two set of keys and this

95
00:03:24,799 --> 00:03:27,040
key pair is really really important for

96
00:03:27,040 --> 00:03:28,720
signatures

97
00:03:28,720 --> 00:03:30,640
so i might be the only person who knows

98
00:03:30,640 --> 00:03:32,959
a particular private key and all of you

99
00:03:32,959 --> 00:03:35,519
my audience if you all knew my publicly

100
00:03:35,519 --> 00:03:37,920
i can sign something and you all can

101
00:03:37,920 --> 00:03:39,599
verify the signature

102
00:03:39,599 --> 00:03:41,599
and you can know that the only way the

103
00:03:41,599 --> 00:03:45,200
signature was produced is because me uh

104
00:03:45,200 --> 00:03:47,120
is by me because i'm the only one who

105
00:03:47,120 --> 00:03:49,120
holds the private key

106
00:03:49,120 --> 00:03:50,799
another example we talked about you know

107
00:03:50,799 --> 00:03:52,159
from another perspective let's say

108
00:03:52,159 --> 00:03:54,239
there's an audience member called cindy

109
00:03:54,239 --> 00:03:56,560
right i know cindy's public key

110
00:03:56,560 --> 00:03:58,640
uh i can know if i'm actually talking to

111
00:03:58,640 --> 00:04:01,360
cindy by using this kind of key pair the

112
00:04:01,360 --> 00:04:03,120
way i might do that is just to generate

113
00:04:03,120 --> 00:04:05,680
let's say random big big number

114
00:04:05,680 --> 00:04:08,640
uh and say and tell cindy hey cindy

115
00:04:08,640 --> 00:04:10,319
please sign this for me

116
00:04:10,319 --> 00:04:12,480
if the number is big enough it's very

117
00:04:12,480 --> 00:04:15,360
very unlikely that anyone has produced a

118
00:04:15,360 --> 00:04:17,918
signature over this random number that i

119
00:04:17,918 --> 00:04:19,279
generated

120
00:04:19,279 --> 00:04:21,519
so if i get a signature over that random

121
00:04:21,519 --> 00:04:24,639
number back that verifies i basically

122
00:04:24,639 --> 00:04:27,120
challenged cindy and got a response for

123
00:04:27,120 --> 00:04:29,040
her knowing that okay i'm talking to the

124
00:04:29,040 --> 00:04:30,720
right person

125
00:04:30,720 --> 00:04:32,880
uh this is you know the core of how

126
00:04:32,880 --> 00:04:35,520
certificate based authentication works

127
00:04:35,520 --> 00:04:38,000
um it's just using this kind of key pair

128
00:04:38,000 --> 00:04:40,160
signing protocol the math is complicated

129
00:04:40,160 --> 00:04:42,400
we're not gonna dive into it you can

130
00:04:42,400 --> 00:04:43,759
easily search on your own if you're more

131
00:04:43,759 --> 00:04:45,280
interested but you know if you want to

132
00:04:45,280 --> 00:04:46,720
use certificates that's really all you

133
00:04:46,720 --> 00:04:47,759
have to know

134
00:04:47,759 --> 00:04:49,440
um

135
00:04:49,440 --> 00:04:51,759
let's see so that's the easiest way i

136
00:04:51,759 --> 00:04:53,600
can really boil down certificate based

137
00:04:53,600 --> 00:04:56,080
authentication with uh asymmetric

138
00:04:56,080 --> 00:04:58,479
cryptography to authenticate a personal

139
00:04:58,479 --> 00:04:59,919
device or whatnot

140
00:04:59,919 --> 00:05:01,840
but there is a problem right that we

141
00:05:01,840 --> 00:05:03,440
need to address

142
00:05:03,440 --> 00:05:05,759
to authenticate someone you need to know

143
00:05:05,759 --> 00:05:07,919
their public key so

144
00:05:07,919 --> 00:05:09,600
if you're talking to a lot of people

145
00:05:09,600 --> 00:05:11,199
you're going to need to know the public

146
00:05:11,199 --> 00:05:13,039
key of every single person

147
00:05:13,039 --> 00:05:14,639
and the second problem that kind of

148
00:05:14,639 --> 00:05:16,880
follows that is the way you learn the

149
00:05:16,880 --> 00:05:18,880
public key has to be secure

150
00:05:18,880 --> 00:05:21,759
right if we go back to the cindy example

151
00:05:21,759 --> 00:05:23,600
if someone lied to me right and they say

152
00:05:23,600 --> 00:05:26,479
tell me that cindy's public key is x y z

153
00:05:26,479 --> 00:05:28,639
uh but instead of telling their public

154
00:05:28,639 --> 00:05:30,479
key they actually use their own public

155
00:05:30,479 --> 00:05:31,919
key right

156
00:05:31,919 --> 00:05:34,160
they can pretend to be cindy

157
00:05:34,160 --> 00:05:35,840
because now i'm confused about what

158
00:05:35,840 --> 00:05:38,479
cindy's public key actually is so if you

159
00:05:38,479 --> 00:05:40,240
have a lot of people like you have to

160
00:05:40,240 --> 00:05:42,720
talk to a lot of people or more commonly

161
00:05:42,720 --> 00:05:45,039
you know as you know architects of big

162
00:05:45,039 --> 00:05:47,039
systems we're talking about like big

163
00:05:47,039 --> 00:05:49,360
systems we have a lot of components

164
00:05:49,360 --> 00:05:50,880
talking to each other right not

165
00:05:50,880 --> 00:05:52,560
necessarily people

166
00:05:52,560 --> 00:05:55,039
every component needs to know every

167
00:05:55,039 --> 00:05:57,039
other components publicly

168
00:05:57,039 --> 00:05:59,039
publicly

169
00:05:59,039 --> 00:06:00,319
and that can be really challenging and

170
00:06:00,319 --> 00:06:03,199
we have to do that in a secure manner

171
00:06:03,199 --> 00:06:05,759
and this is where certificates enter the

172
00:06:05,759 --> 00:06:06,720
picture

173
00:06:06,720 --> 00:06:09,919
and certificates can be intimidating but

174
00:06:09,919 --> 00:06:11,840
fundamentally also really simple and

175
00:06:11,840 --> 00:06:14,160
here's my kind of eli five example like

176
00:06:14,160 --> 00:06:16,240
explain like on five

177
00:06:16,240 --> 00:06:18,960
definition certificates are like

178
00:06:18,960 --> 00:06:20,800
driver's license right we all have them

179
00:06:20,800 --> 00:06:23,759
they are driver's license or passports

180
00:06:23,759 --> 00:06:25,680
you know for your computer encode if

181
00:06:25,680 --> 00:06:27,600
you've never met me before and you trust

182
00:06:27,600 --> 00:06:28,800
the dmv

183
00:06:28,800 --> 00:06:30,000
you can use my license for

184
00:06:30,000 --> 00:06:32,160
authentication you can verify that

185
00:06:32,160 --> 00:06:34,000
license is valid you can look at my

186
00:06:34,000 --> 00:06:36,639
photo here read my name you know it says

187
00:06:36,639 --> 00:06:37,600
kevin

188
00:06:37,600 --> 00:06:39,199
computers use certificates to do the

189
00:06:39,199 --> 00:06:40,720
exact same thing

190
00:06:40,720 --> 00:06:43,039
if you've never met some computer before

191
00:06:43,039 --> 00:06:44,880
you can trust the same certificate

192
00:06:44,880 --> 00:06:48,319
authority aka you know the dmv uh and

193
00:06:48,319 --> 00:06:50,240
you can use the certificate for

194
00:06:50,240 --> 00:06:52,080
authentication verifying that the

195
00:06:52,080 --> 00:06:53,759
certificate is valid based on their

196
00:06:53,759 --> 00:06:56,479
signature look at their public key

197
00:06:56,479 --> 00:06:59,440
reading their names etc right

198
00:06:59,440 --> 00:07:01,919
so essentially a certificate is a data

199
00:07:01,919 --> 00:07:04,800
structure much like our id that binds a

200
00:07:04,800 --> 00:07:06,720
name to a public key

201
00:07:06,720 --> 00:07:08,639
the purpose is to learn someone's public

202
00:07:08,639 --> 00:07:10,960
key if you don't already know it

203
00:07:10,960 --> 00:07:13,120
and then we have to go back how does

204
00:07:13,120 --> 00:07:15,120
this solve the whole secure problem of

205
00:07:15,120 --> 00:07:17,199
learning people's public key well this

206
00:07:17,199 --> 00:07:20,479
is where the dmv or in the digital space

207
00:07:20,479 --> 00:07:22,319
our certificate authority comes into

208
00:07:22,319 --> 00:07:23,680
play

209
00:07:23,680 --> 00:07:25,120
if you can trust the certificate

210
00:07:25,120 --> 00:07:26,400
authority which is what signs

211
00:07:26,400 --> 00:07:28,720
certificates

212
00:07:28,720 --> 00:07:30,880
you can trust what cindy

213
00:07:30,880 --> 00:07:34,080
is and who she says she is

214
00:07:34,080 --> 00:07:36,560
and we can dive a little deeper into our

215
00:07:36,560 --> 00:07:38,160
our certificate you'll see it's you know

216
00:07:38,160 --> 00:07:40,880
represented by bits and bytes this part

217
00:07:40,880 --> 00:07:42,400
is actually you know annoyingly

218
00:07:42,400 --> 00:07:45,599
complicated in fact i i suspect that

219
00:07:45,599 --> 00:07:47,759
the poorly defined manner in which

220
00:07:47,759 --> 00:07:49,680
certificates and keys are encoded is

221
00:07:49,680 --> 00:07:51,840
probably the source of most confusions

222
00:07:51,840 --> 00:07:54,319
at least i can say most of my confusion

223
00:07:54,319 --> 00:07:56,639
and frustration when i approach pkis at

224
00:07:56,639 --> 00:08:00,240
the start but just know that when people

225
00:08:00,240 --> 00:08:02,240
talk about certificates usually without

226
00:08:02,240 --> 00:08:04,319
any additional qualifications

227
00:08:04,319 --> 00:08:06,800
they're referring to the x 509 b3

228
00:08:06,800 --> 00:08:08,160
certificate

229
00:08:08,160 --> 00:08:10,479
and to make this more relatable they're

230
00:08:10,479 --> 00:08:12,319
referring to some the sort of

231
00:08:12,319 --> 00:08:14,879
certificate that browsers understand and

232
00:08:14,879 --> 00:08:19,680
use for https which is http over tls

233
00:08:19,680 --> 00:08:21,520
there are obviously other certificate

234
00:08:21,520 --> 00:08:25,120
formats notably the ssh and gpg

235
00:08:25,120 --> 00:08:26,479
both have their own

236
00:08:26,479 --> 00:08:28,400
but we're going to focus on the x 509

237
00:08:28,400 --> 00:08:30,319
for the remainder of the talk if you can

238
00:08:30,319 --> 00:08:32,479
understand x 509 you'll figure out

239
00:08:32,479 --> 00:08:33,679
you'll be able to figure out everything

240
00:08:33,679 --> 00:08:36,159
else by yourself

241
00:08:36,159 --> 00:08:39,440
and since these certificates are x509s

242
00:08:39,440 --> 00:08:41,440
are so broadly supported they have you

243
00:08:41,440 --> 00:08:42,799
know you can trust that there's a good

244
00:08:42,799 --> 00:08:44,080
amount of libraries that you know

245
00:08:44,080 --> 00:08:46,320
support them and they use in a lot of

246
00:08:46,320 --> 00:08:48,880
different contexts

247
00:08:48,880 --> 00:08:52,160
all right let me check on time

248
00:08:52,160 --> 00:08:53,920
i'm here i'm the time keeper and guess

249
00:08:53,920 --> 00:08:55,920
what you've got two minutes my friend oh

250
00:08:55,920 --> 00:08:57,760
boy technically all right let's let's

251
00:08:57,760 --> 00:09:00,640
let's speed things to right okay so

252
00:09:00,640 --> 00:09:02,640
x79 was actually blah blah blah i'm

253
00:09:02,640 --> 00:09:03,760
going to skip through this little fun

254
00:09:03,760 --> 00:09:05,440
tidbit it was created back in like the

255
00:09:05,440 --> 00:09:07,680
1980s for phone books you know you don't

256
00:09:07,680 --> 00:09:09,760
really need to know that but what what i

257
00:09:09,760 --> 00:09:11,519
want to get into is that pki is really

258
00:09:11,519 --> 00:09:13,200
the umbrella term for all the stuff

259
00:09:13,200 --> 00:09:15,200
right the issue distributes store use

260
00:09:15,200 --> 00:09:17,839
and verify revoke uh and interact with

261
00:09:17,839 --> 00:09:19,680
certificate and keys

262
00:09:19,680 --> 00:09:21,760
a vague like database infrastructure

263
00:09:21,760 --> 00:09:23,440
because it really encompasses a lot and

264
00:09:23,440 --> 00:09:25,120
you know stuff like the jobs the

265
00:09:25,120 --> 00:09:27,040
protocols conventions clients and

266
00:09:27,040 --> 00:09:28,240
servers

267
00:09:28,240 --> 00:09:30,720
cron jobs what not but just know that

268
00:09:30,720 --> 00:09:33,120
the pki kind of encompasses this kind of

269
00:09:33,120 --> 00:09:34,320
signature

270
00:09:34,320 --> 00:09:37,279
certificate signing kind of space

271
00:09:37,279 --> 00:09:38,880
all right skip through the build your

272
00:09:38,880 --> 00:09:41,040
own versus buy i would advocate by using

273
00:09:41,040 --> 00:09:42,959
open source for to start

274
00:09:42,959 --> 00:09:46,240
and blah blah blah sorry to skip a punch

275
00:09:46,240 --> 00:09:48,800
all right so let's let's get back here

276
00:09:48,800 --> 00:09:52,560
to uh web tki's okay so what pki uses

277
00:09:52,560 --> 00:09:54,000
you know

278
00:09:54,000 --> 00:09:56,720
x509 and the beauty about you know

279
00:09:56,720 --> 00:10:00,160
there's two kind of pkis is that there

280
00:10:00,160 --> 00:10:01,600
is the web pca which is what you're

281
00:10:01,600 --> 00:10:03,600
commonly familiar with but there's also

282
00:10:03,600 --> 00:10:05,040
something that i want to advocate for

283
00:10:05,040 --> 00:10:07,040
and what my talk is really about is

284
00:10:07,040 --> 00:10:08,880
internal pkis

285
00:10:08,880 --> 00:10:10,560
internal pki is what you run for your

286
00:10:10,560 --> 00:10:12,160
own stuff production infrastructure like

287
00:10:12,160 --> 00:10:16,240
services containers and vms uh corporate

288
00:10:16,240 --> 00:10:17,920
endpoints stuff that you know you don't

289
00:10:17,920 --> 00:10:21,120
want to rely on a web pki for because

290
00:10:21,120 --> 00:10:22,800
you're running an internal pki gives you

291
00:10:22,800 --> 00:10:24,640
a lot more control and flexibility it

292
00:10:24,640 --> 00:10:26,720
allows you to authenticate and

293
00:10:26,720 --> 00:10:28,800
establish channels on your own stuff to

294
00:10:28,800 --> 00:10:30,839
run like secure communications

295
00:10:30,839 --> 00:10:33,279
anywhere and you know the problem is

296
00:10:33,279 --> 00:10:35,760
that the web pci was not designed to

297
00:10:35,760 --> 00:10:37,760
support internal use cases right the

298
00:10:37,760 --> 00:10:39,600
last thing i want to mention is that

299
00:10:39,600 --> 00:10:41,839
even with a ca like let's encrypt which

300
00:10:41,839 --> 00:10:44,000
offer free certificates and automated

301
00:10:44,000 --> 00:10:45,519
provisioning you still have to deal with

302
00:10:45,519 --> 00:10:47,920
stuff like rate limit and availability

303
00:10:47,920 --> 00:10:49,440
uh additionally

304
00:10:49,440 --> 00:10:51,279
uh web key guys

305
00:10:51,279 --> 00:10:54,320
by default have a lot of trusted cas so

306
00:10:54,320 --> 00:10:56,959
do you really want your you know your

307
00:10:56,959 --> 00:11:00,000
your internal like services and devices

308
00:11:00,000 --> 00:11:00,959
to

309
00:11:00,959 --> 00:11:03,839
be authenticated based off uh external

310
00:11:03,839 --> 00:11:05,519
cias that are run by other orgs and

311
00:11:05,519 --> 00:11:07,200
located perhaps in countries that you

312
00:11:07,200 --> 00:11:09,360
don't trust as much or just outside your

313
00:11:09,360 --> 00:11:12,079
own like infrastructure

314
00:11:12,079 --> 00:11:12,959
so

315
00:11:12,959 --> 00:11:15,279
what i want to kind of sum up is

316
00:11:15,279 --> 00:11:17,760
use your own like run your own internal

317
00:11:17,760 --> 00:11:20,240
pki sorry for not getting screen share

318
00:11:20,240 --> 00:11:22,240
to work and having to rush through this

319
00:11:22,240 --> 00:11:24,800
check out github you know there is a lot

320
00:11:24,800 --> 00:11:26,959
of open source scenarios small step is a

321
00:11:26,959 --> 00:11:29,200
great one and you can hear let me write

322
00:11:29,200 --> 00:11:31,040
i think i read that yeah if you have any

323
00:11:31,040 --> 00:11:32,800
questions go to kevin you can email me

324
00:11:32,800 --> 00:11:35,200
at kevin at smallstep.com

325
00:11:35,200 --> 00:11:37,200
or you can find me on twitter at dev

326
00:11:37,200 --> 00:11:39,040
avocado which is you know

327
00:11:39,040 --> 00:11:41,440
right there dab cut out i'll i'll put

328
00:11:41,440 --> 00:11:43,440
this in like the comment section

329
00:11:43,440 --> 00:11:46,800
jeff back to you we try

