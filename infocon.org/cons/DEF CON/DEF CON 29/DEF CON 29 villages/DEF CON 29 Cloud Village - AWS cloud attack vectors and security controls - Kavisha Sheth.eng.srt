1
00:00:03,439 --> 00:00:05,120
hi everyone so today we're going to

2
00:00:05,120 --> 00:00:08,160
discuss about aws cloud regulators and

3
00:00:08,160 --> 00:00:10,160
the security guidelines that can be

4
00:00:10,160 --> 00:00:11,840
applied

5
00:00:11,840 --> 00:00:13,200
so

6
00:00:13,200 --> 00:00:15,440
uh before we get started uh that's a

7
00:00:15,440 --> 00:00:16,560
little bit

8
00:00:16,560 --> 00:00:19,359
about me i'm a security analyst at app

9
00:00:19,359 --> 00:00:20,880
cycle

10
00:00:20,880 --> 00:00:23,680
i just love to break my application api

11
00:00:23,680 --> 00:00:25,680
and cloud security

12
00:00:25,680 --> 00:00:27,519
i'm a member of different communities

13
00:00:27,519 --> 00:00:28,480
such as

14
00:00:28,480 --> 00:00:31,199
infrastructure

15
00:00:33,380 --> 00:00:36,409
[Music]

16
00:00:43,280 --> 00:00:46,640
agenda of the today talk is what are the

17
00:00:46,640 --> 00:00:49,360
possible article vectors for the ews

18
00:00:49,360 --> 00:00:51,120
cloud

19
00:00:51,120 --> 00:00:53,920
recognition that help to identify those

20
00:00:53,920 --> 00:00:55,680
articulators

21
00:00:55,680 --> 00:00:58,480
some of uh misconceptions like i am

22
00:00:58,480 --> 00:01:01,680
misconfiguration s3 misconception easy

23
00:01:01,680 --> 00:01:03,760
to means configuration we're going to

24
00:01:03,760 --> 00:01:05,438
discuss today

25
00:01:05,438 --> 00:01:09,119
the detection that can help to identify

26
00:01:09,119 --> 00:01:11,280
those misconfiguration

27
00:01:11,280 --> 00:01:14,720
and the security controls

28
00:01:14,720 --> 00:01:17,920
so what are the possible adapters right

29
00:01:17,920 --> 00:01:20,720
first is lift credentials

30
00:01:20,720 --> 00:01:23,439
second instance misconfiguration like

31
00:01:23,439 --> 00:01:25,600
you found the

32
00:01:25,600 --> 00:01:28,400
snapshot is publicly accessible

33
00:01:28,400 --> 00:01:31,200
ami is publicly accessible of the

34
00:01:31,200 --> 00:01:33,280
instance right

35
00:01:33,280 --> 00:01:34,960
then

36
00:01:34,960 --> 00:01:37,600
pc2 instance having the

37
00:01:37,600 --> 00:01:40,479
cv against it or the particular ec2

38
00:01:40,479 --> 00:01:43,040
instance is publicly available right

39
00:01:43,040 --> 00:01:46,079
those are the instance misconfiguration

40
00:01:46,079 --> 00:01:49,680
in using default settings for example

41
00:01:49,680 --> 00:01:52,399
uh you didn't enable that

42
00:01:52,399 --> 00:01:54,640
for the s3 bucket right there you having

43
00:01:54,640 --> 00:01:56,719
the sensitive information and you know

44
00:01:56,719 --> 00:02:01,040
and enable s3 with kms encryption then

45
00:02:01,040 --> 00:02:03,520
it's again issue because what if someone

46
00:02:03,520 --> 00:02:07,280
get your sd bucket data and that is even

47
00:02:07,280 --> 00:02:09,119
in the playing text right like for

48
00:02:09,119 --> 00:02:10,959
example not encrypted

49
00:02:10,959 --> 00:02:13,760
for example it's having the

50
00:02:13,760 --> 00:02:16,319
credit card details or the

51
00:02:16,319 --> 00:02:20,000
credentials right so

52
00:02:20,080 --> 00:02:22,319
like you should use but one of the

53
00:02:22,319 --> 00:02:24,560
reason it's default setting and

54
00:02:24,560 --> 00:02:27,120
another is like you have

55
00:02:27,120 --> 00:02:30,400
you haven't used the imdf vs2 version

56
00:02:30,400 --> 00:02:32,730
and that leads to the

57
00:02:32,730 --> 00:02:35,200
[Music]

58
00:02:35,200 --> 00:02:36,640
extreme ssrs

59
00:02:36,640 --> 00:02:40,800
like allowing public access or allowing

60
00:02:40,800 --> 00:02:44,560
any user of the ews to perform any

61
00:02:44,560 --> 00:02:49,440
action on s3 right so s3ms configuration

62
00:02:49,440 --> 00:02:51,920
then access control mix configuration

63
00:02:51,920 --> 00:02:54,239
like you didn't mention hey

64
00:02:54,239 --> 00:02:57,840
uh this particular user should has only

65
00:02:57,840 --> 00:03:00,080
this much access and you are ending up

66
00:03:00,080 --> 00:03:01,920
giving more privilege that that

67
00:03:01,920 --> 00:03:05,040
particular user supposed to do and

68
00:03:05,040 --> 00:03:08,400
that can leads to the external attack

69
00:03:08,400 --> 00:03:11,440
vector and as well as internal threat

70
00:03:11,440 --> 00:03:13,680
right

71
00:03:13,920 --> 00:03:17,280
exposure of the resources via firewall

72
00:03:17,280 --> 00:03:19,680
right so

73
00:03:19,680 --> 00:03:21,840
if you didn't configure the firewall

74
00:03:21,840 --> 00:03:25,120
properly you ended up

75
00:03:25,519 --> 00:03:27,920
giving your

76
00:03:27,920 --> 00:03:29,280
resource

77
00:03:29,280 --> 00:03:32,319
access to any user over the internet

78
00:03:32,319 --> 00:03:35,440
that's most dangerous

79
00:03:35,440 --> 00:03:38,000
time network security misconfiguration

80
00:03:38,000 --> 00:03:40,080
if the rppc

81
00:03:40,080 --> 00:03:42,799
uh is not properly configured or your

82
00:03:42,799 --> 00:03:45,200
inbound output rules is not properly

83
00:03:45,200 --> 00:03:47,360
configured right then it's an issue

84
00:03:47,360 --> 00:03:50,959
anyone on the internet can access

85
00:03:50,959 --> 00:03:52,640
right

86
00:03:52,640 --> 00:03:55,680
insecure custom application

87
00:03:55,680 --> 00:03:56,560
so

88
00:03:56,560 --> 00:03:57,840
if the

89
00:03:57,840 --> 00:04:00,799
web application hosted on ec2 is not

90
00:04:00,799 --> 00:04:02,319
properly

91
00:04:02,319 --> 00:04:04,959
configured or it's vulnerable to

92
00:04:04,959 --> 00:04:07,920
like ssrf or lfi then

93
00:04:07,920 --> 00:04:10,239
that's again issue because attacker can

94
00:04:10,239 --> 00:04:15,640
get access to your aws relationships

95
00:04:16,399 --> 00:04:18,560
so you know that hey these are the

96
00:04:18,560 --> 00:04:20,959
possible attack vectors now how can i

97
00:04:20,959 --> 00:04:23,040
find those for that you have to perform

98
00:04:23,040 --> 00:04:24,720
reconnaissance

99
00:04:24,720 --> 00:04:27,199
and i have covered different ways to

100
00:04:27,199 --> 00:04:28,400
perform

101
00:04:28,400 --> 00:04:31,680
recognitions for finding credentials for

102
00:04:31,680 --> 00:04:34,000
finding the easy to instance or to

103
00:04:34,000 --> 00:04:37,360
finding s3 bucket

104
00:04:37,360 --> 00:04:39,360
finding credentials

105
00:04:39,360 --> 00:04:41,520
look for the hard-coded

106
00:04:41,520 --> 00:04:43,840
stored in javascript

107
00:04:43,840 --> 00:04:46,720
and ews cognito credentials in the

108
00:04:46,720 --> 00:04:50,400
response you can find it

109
00:04:50,479 --> 00:04:51,280
if

110
00:04:51,280 --> 00:04:52,080
like

111
00:04:52,080 --> 00:04:54,000
how do you find it i i have attached

112
00:04:54,000 --> 00:04:56,720
this in screenshot i'm going to discuss

113
00:04:56,720 --> 00:04:59,600
how can you find it right

114
00:04:59,600 --> 00:05:02,479
then if the web application hosted easy

115
00:05:02,479 --> 00:05:05,520
to instance it's vulnerable to ssr lfi

116
00:05:05,520 --> 00:05:07,759
then also article can find those

117
00:05:07,759 --> 00:05:10,240
predictions

118
00:05:10,240 --> 00:05:13,199
food repositories such as big bucket and

119
00:05:13,199 --> 00:05:15,680
github

120
00:05:15,759 --> 00:05:19,199
on that also you can find that in public

121
00:05:19,199 --> 00:05:22,240
for example nowadays many companies uh

122
00:05:22,240 --> 00:05:24,880
publicly expose that code on github

123
00:05:24,880 --> 00:05:26,800
that's all right but if you are

124
00:05:26,800 --> 00:05:29,600
storing the credential on the repository

125
00:05:29,600 --> 00:05:31,680
then it's done it's an issue you can

126
00:05:31,680 --> 00:05:34,080
just uh order any ethical thing find the

127
00:05:34,080 --> 00:05:36,080
credential on github and you are ending

128
00:05:36,080 --> 00:05:38,160
up

129
00:05:38,160 --> 00:05:40,320
like

130
00:05:40,320 --> 00:05:42,639
getting expose your credential on the

131
00:05:42,639 --> 00:05:44,160
publicly

132
00:05:44,160 --> 00:05:48,240
repository such as gita benefit bucket

133
00:05:48,240 --> 00:05:50,880
and aws error messages

134
00:05:50,880 --> 00:05:54,000
such as x is denied and in the re

135
00:05:54,000 --> 00:05:56,880
sometimes if the properly not configured

136
00:05:56,880 --> 00:06:00,160
right uh it just uh disclosing that hey

137
00:06:00,160 --> 00:06:02,560
this is denied but your credentials are

138
00:06:02,560 --> 00:06:03,840
this right

139
00:06:03,840 --> 00:06:06,800
so that's issue

140
00:06:06,800 --> 00:06:10,560
publicly bs snapshot

141
00:06:10,560 --> 00:06:13,280
then emi that emi related credential

142
00:06:13,280 --> 00:06:14,479
been lit

143
00:06:14,479 --> 00:06:16,560
in the public images

144
00:06:16,560 --> 00:06:20,080
that s3 bucket is also sometimes

145
00:06:20,080 --> 00:06:22,720
organization stored that employed

146
00:06:22,720 --> 00:06:25,280
credentials all the admin credentials

147
00:06:25,280 --> 00:06:28,000
being stored in this bucket right then

148
00:06:28,000 --> 00:06:29,919
it's again issue

149
00:06:29,919 --> 00:06:31,919
we're gonna discuss an upcoming slide

150
00:06:31,919 --> 00:06:35,520
that how can you find those

151
00:06:35,520 --> 00:06:38,080
then rds public snapshot

152
00:06:38,080 --> 00:06:41,199
in those you can find the rds

153
00:06:41,199 --> 00:06:42,479
related

154
00:06:42,479 --> 00:06:44,560
credential database credential

155
00:06:44,560 --> 00:06:47,199
information

156
00:06:47,280 --> 00:06:50,160
then people looking for help online

157
00:06:50,160 --> 00:06:52,479
ending up copy pasting that complete

158
00:06:52,479 --> 00:06:55,520
information like they say hey i want

159
00:06:55,520 --> 00:06:57,680
that i'm facing this issue this is some

160
00:06:57,680 --> 00:07:00,319
micro credential or user id can you

161
00:07:00,319 --> 00:07:02,960
please help me out and that ending up or

162
00:07:02,960 --> 00:07:05,680
getting addicted that day is

163
00:07:05,680 --> 00:07:07,360
what radiation belongs to this

164
00:07:07,360 --> 00:07:09,680
particular user so these are the

165
00:07:09,680 --> 00:07:11,440
standard recon

166
00:07:11,440 --> 00:07:13,599
techniques that can help you to

167
00:07:13,599 --> 00:07:15,199
get started

168
00:07:15,199 --> 00:07:17,919
with the finding credentials right

169
00:07:17,919 --> 00:07:19,759
so one of the i have mentioned right

170
00:07:19,759 --> 00:07:22,319
that uh in the response

171
00:07:22,319 --> 00:07:24,960
the company top credential

172
00:07:24,960 --> 00:07:28,638
so this is how it looked like

173
00:07:29,680 --> 00:07:32,240
now for the simple

174
00:07:32,240 --> 00:07:34,639
um misconfiguration right so how can you

175
00:07:34,639 --> 00:07:36,160
find the

176
00:07:36,160 --> 00:07:38,400
public ec2 instance right for that you

177
00:07:38,400 --> 00:07:40,319
need to have the access right

178
00:07:40,319 --> 00:07:41,199
so

179
00:07:41,199 --> 00:07:45,120
compute one ew amazon aws.com you

180
00:07:45,120 --> 00:07:46,879
mentioned in the census and you will

181
00:07:46,879 --> 00:07:50,639
have the list of ec2 instance and see if

182
00:07:50,639 --> 00:07:53,120
this is those other ec2 instances

183
00:07:53,120 --> 00:07:55,919
publicly accessible right

184
00:07:55,919 --> 00:07:58,960
and you can use google doc

185
00:07:58,960 --> 00:08:00,319
you can use

186
00:08:00,319 --> 00:08:02,960
showdown as well same search

187
00:08:02,960 --> 00:08:04,479
you can apply

188
00:08:04,479 --> 00:08:06,319
and you can customize the result based

189
00:08:06,319 --> 00:08:07,440
on the

190
00:08:07,440 --> 00:08:10,319
what you want right so very based on

191
00:08:10,319 --> 00:08:13,319
that

192
00:08:15,759 --> 00:08:17,360
accessible to

193
00:08:17,360 --> 00:08:21,120
uh this ip address right then

194
00:08:21,120 --> 00:08:23,520
and therefore there is no prevention

195
00:08:23,520 --> 00:08:26,080
against it for the ssh right then you

196
00:08:26,080 --> 00:08:29,120
can just do a ssh on that particular

197
00:08:29,120 --> 00:08:30,240
series

198
00:08:30,240 --> 00:08:32,880
same way you can access the mysql

199
00:08:32,880 --> 00:08:35,838
database also

200
00:08:35,919 --> 00:08:38,159
now you must be thinking hey

201
00:08:38,159 --> 00:08:40,559
how can i found the rbs endpoint

202
00:08:40,559 --> 00:08:43,599
basically you can mention scientists and

203
00:08:43,599 --> 00:08:49,600
rds amazon aws.com so use the google doc

204
00:08:49,600 --> 00:08:52,240
for finding s3 bucket you can use google

205
00:08:52,240 --> 00:08:55,360
search google doc showdown

206
00:08:55,360 --> 00:08:56,720
senses

207
00:08:56,720 --> 00:09:01,920
use osm tools such as sublister and amaz

208
00:09:01,920 --> 00:09:05,120
of meaning like very standard phase of

209
00:09:05,120 --> 00:09:07,440
for test bucket right naming convection

210
00:09:07,440 --> 00:09:08,720
is that

211
00:09:08,720 --> 00:09:09,839
s3

212
00:09:09,839 --> 00:09:12,959
like site s3 amazon.com

213
00:09:12,959 --> 00:09:14,399
right r

214
00:09:14,399 --> 00:09:16,560
s3 amazon

215
00:09:16,560 --> 00:09:20,240
s3 site amazon ews right so these are

216
00:09:20,240 --> 00:09:22,720
the standards so you can just uh propose

217
00:09:22,720 --> 00:09:24,800
it

218
00:09:24,800 --> 00:09:27,600
or in the dns record

219
00:09:27,600 --> 00:09:30,240
right you can also find the sd bucket

220
00:09:30,240 --> 00:09:33,040
related information

221
00:09:33,040 --> 00:09:34,080
and

222
00:09:34,080 --> 00:09:37,120
certification and transparency law

223
00:09:37,120 --> 00:09:38,880
time you can use

224
00:09:38,880 --> 00:09:41,680
numerous bucket or finder scripts such

225
00:09:41,680 --> 00:09:44,160
as there are so many uh scripts

226
00:09:44,160 --> 00:09:45,760
available on the internet such as

227
00:09:45,760 --> 00:09:47,839
laziest pocket file

228
00:09:47,839 --> 00:09:51,200
right so you can use those as well and

229
00:09:51,200 --> 00:09:54,320
greyhead what bucket sauce

230
00:09:54,320 --> 00:09:58,880
you can use to finding the extra bucket

231
00:09:59,120 --> 00:10:01,200
uh i have mentioned that how can you

232
00:10:01,200 --> 00:10:04,560
find the s3 bucket using google docs so

233
00:10:04,560 --> 00:10:08,320
this is the way you can find it

234
00:10:08,320 --> 00:10:10,320
after knowing that what are the other

235
00:10:10,320 --> 00:10:12,320
factors and how can you perform the

236
00:10:12,320 --> 00:10:14,160
recurrences

237
00:10:14,160 --> 00:10:15,839
uh you should look for the

238
00:10:15,839 --> 00:10:19,120
misconfiguration related issue right

239
00:10:19,120 --> 00:10:21,360
so one of the

240
00:10:21,360 --> 00:10:23,600
i have covered is misconfigured s3

241
00:10:23,600 --> 00:10:25,279
bucket now

242
00:10:25,279 --> 00:10:28,240
why it's a misconfigured because

243
00:10:28,240 --> 00:10:31,440
of the policy okay so one is this you

244
00:10:31,440 --> 00:10:36,000
are allowing public access to any so far

245
00:10:36,000 --> 00:10:38,959
explicitly you saying that object can be

246
00:10:38,959 --> 00:10:41,519
public so anyone on internet can access

247
00:10:41,519 --> 00:10:42,320
this

248
00:10:42,320 --> 00:10:43,839
bucket

249
00:10:43,839 --> 00:10:46,000
most strangers one is defining full

250
00:10:46,000 --> 00:10:49,040
access to authenticate aws in source

251
00:10:49,040 --> 00:10:50,000
group

252
00:10:50,000 --> 00:10:52,160
so i think anyone

253
00:10:52,160 --> 00:10:54,959
with having the valid ews credential or

254
00:10:54,959 --> 00:10:57,680
the authenticated user

255
00:10:57,680 --> 00:11:02,320
can access my bucket and even perform

256
00:11:02,320 --> 00:11:04,399
copy read

257
00:11:04,399 --> 00:11:06,000
and delete operations so you are

258
00:11:06,000 --> 00:11:09,519
basically affecting whole cia triangle

259
00:11:09,519 --> 00:11:12,160
right so it's most stranger one

260
00:11:12,160 --> 00:11:15,839
policy to be then bucket policy with the

261
00:11:15,839 --> 00:11:18,000
rate access policies so some

262
00:11:18,000 --> 00:11:20,640
organizations say hey we have allowed

263
00:11:20,640 --> 00:11:23,200
access policy but you are having in the

264
00:11:23,200 --> 00:11:25,600
bucket uh the sensitive information such

265
00:11:25,600 --> 00:11:30,399
as pia or the purchases to information

266
00:11:30,399 --> 00:11:31,760
are

267
00:11:31,760 --> 00:11:34,320
credentials itself right so you should

268
00:11:34,320 --> 00:11:38,000
our bucket with the read access policy

269
00:11:38,000 --> 00:11:40,399
then you almost forget about encrypting

270
00:11:40,399 --> 00:11:43,519
your aws duplicates so for example

271
00:11:43,519 --> 00:11:45,519
the bucket having the sensitive

272
00:11:45,519 --> 00:11:47,120
information

273
00:11:47,120 --> 00:11:50,399
and someone got access right

274
00:11:50,399 --> 00:11:52,880
and download the data like purchase

275
00:11:52,880 --> 00:11:56,240
history of the credential and your

276
00:11:56,240 --> 00:11:59,040
bucket is not encrypted then they can

277
00:11:59,040 --> 00:12:01,360
have the whole bunch of the credential

278
00:12:01,360 --> 00:12:03,440
that has been stored or bi information

279
00:12:03,440 --> 00:12:05,279
or credit card details

280
00:12:05,279 --> 00:12:07,279
which is stored in the

281
00:12:07,279 --> 00:12:10,399
bucket but what if you have applied the

282
00:12:10,399 --> 00:12:12,639
encryption technique then even though

283
00:12:12,639 --> 00:12:14,800
they got the bucket

284
00:12:14,800 --> 00:12:17,680
but they are not able to

285
00:12:17,680 --> 00:12:19,839
get the data that hey what are the data

286
00:12:19,839 --> 00:12:22,399
available because the article is not

287
00:12:22,399 --> 00:12:25,200
having the master cape so you should use

288
00:12:25,200 --> 00:12:27,519
like

289
00:12:28,160 --> 00:12:29,120
so

290
00:12:29,120 --> 00:12:31,760
what attack vectors we have covered for

291
00:12:31,760 --> 00:12:34,160
the like why i still miss configuration

292
00:12:34,160 --> 00:12:36,079
happened right so far

293
00:12:36,079 --> 00:12:38,880
so allowing public access to bucket

294
00:12:38,880 --> 00:12:41,120
defining full access control to

295
00:12:41,120 --> 00:12:43,680
authenticate it in a place in your group

296
00:12:43,680 --> 00:12:45,600
defining bucket with the raid access

297
00:12:45,600 --> 00:12:46,880
policy

298
00:12:46,880 --> 00:12:48,959
enabling the right access to everyone

299
00:12:48,959 --> 00:12:49,920
group

300
00:12:49,920 --> 00:12:54,320
forgetting to encrypt your aws resources

301
00:12:54,320 --> 00:12:56,880
now you've got to know hey this happened

302
00:12:56,880 --> 00:12:58,320
now how do you

303
00:12:58,320 --> 00:13:00,720
investigate or what

304
00:13:00,720 --> 00:13:02,880
can be done to investigate or what

305
00:13:02,880 --> 00:13:05,040
configuration or what services can be

306
00:13:05,040 --> 00:13:08,320
used right so guard duty help to finding

307
00:13:08,320 --> 00:13:12,480
s3 will list an s3 bucket and bucket

308
00:13:12,480 --> 00:13:15,680
arn and even the bucket owner

309
00:13:15,680 --> 00:13:18,000
in the finding details so you might have

310
00:13:18,000 --> 00:13:21,920
the fair understanding okay uh

311
00:13:21,920 --> 00:13:25,279
what's the arn of that particular bucket

312
00:13:25,279 --> 00:13:28,000
and who is the owner of this bucket

313
00:13:28,000 --> 00:13:31,200
right then you can use aws cloud trail

314
00:13:31,200 --> 00:13:33,920
log like at what time the request being

315
00:13:33,920 --> 00:13:36,639
made from which ip the request being

316
00:13:36,639 --> 00:13:38,399
made right

317
00:13:38,399 --> 00:13:41,440
uh you can use trusted advisor

318
00:13:41,440 --> 00:13:43,040
if you configure

319
00:13:43,040 --> 00:13:45,519
your s3 bucket right and you have allow

320
00:13:45,519 --> 00:13:49,040
the public access that if

321
00:13:51,279 --> 00:13:54,079
this is not how you configure right

322
00:13:54,079 --> 00:13:56,720
then cloud watch metric is again the

323
00:13:56,720 --> 00:14:01,600
best you can use to get the alert right

324
00:14:01,600 --> 00:14:04,000
for example uh

325
00:14:04,000 --> 00:14:06,320
that is get request happen put requests

326
00:14:06,320 --> 00:14:08,959
happen all the delete requests happen

327
00:14:08,959 --> 00:14:12,320
uh for your s3 bucket cloud if you

328
00:14:12,320 --> 00:14:14,320
configure the cloud watch metric then

329
00:14:14,320 --> 00:14:16,480
you will get the alert that hey this is

330
00:14:16,480 --> 00:14:18,480
a request being made from this

331
00:14:18,480 --> 00:14:21,040
particular resources right so it's good

332
00:14:21,040 --> 00:14:24,160
to have enable contact

333
00:14:24,160 --> 00:14:27,680
the aws manage rule there are two rules

334
00:14:27,680 --> 00:14:30,800
you can choose s3 bucket read prohibited

335
00:14:30,800 --> 00:14:32,240
and s3

336
00:14:32,240 --> 00:14:34,880
bucket public right probability based on

337
00:14:34,880 --> 00:14:37,199
what

338
00:14:37,199 --> 00:14:39,600
applicable to your

339
00:14:39,600 --> 00:14:41,839
organization right so based on that you

340
00:14:41,839 --> 00:14:43,760
should configure

341
00:14:43,760 --> 00:14:45,360
all this

342
00:14:45,360 --> 00:14:47,600
now you configure all this but how do

343
00:14:47,600 --> 00:14:49,519
you investigate that hey

344
00:14:49,519 --> 00:14:51,920
this s3 misconfiguration happen how can

345
00:14:51,920 --> 00:14:54,320
i investigate so you should have proper

346
00:14:54,320 --> 00:14:58,800
logging mechanism in the place

347
00:14:58,800 --> 00:15:01,120
now after investigate or all the

348
00:15:01,120 --> 00:15:03,360
alerting in the place what security

349
00:15:03,360 --> 00:15:06,320
controls can help to prevent

350
00:15:06,320 --> 00:15:10,399
from the estimates consideration

351
00:15:10,399 --> 00:15:12,880
implement list privilege access right

352
00:15:12,880 --> 00:15:16,959
don't allow any authenticated user or

353
00:15:16,959 --> 00:15:20,399
any public user to have access to your

354
00:15:20,399 --> 00:15:21,839
sd bucket

355
00:15:21,839 --> 00:15:24,880
use im rules for application and the aws

356
00:15:24,880 --> 00:15:29,519
service that require amazon s3 access

357
00:15:29,759 --> 00:15:33,279
then enable multi-factor authentication

358
00:15:33,279 --> 00:15:35,920
at least for the delete operation so

359
00:15:35,920 --> 00:15:38,160
even though attacker

360
00:15:38,160 --> 00:15:40,639
got the credential and able to delete

361
00:15:40,639 --> 00:15:45,279
your bucket but he might not able to

362
00:15:45,279 --> 00:15:48,320
uh delete your bucket right he can just

363
00:15:48,320 --> 00:15:51,600
only get the data so availability part

364
00:15:51,600 --> 00:15:55,199
will be not being compromised

365
00:15:55,199 --> 00:15:59,199
consider encryption at data rest because

366
00:15:59,199 --> 00:16:02,320
even though attacker will get the

367
00:16:02,320 --> 00:16:05,839
bucket right but the data itself

368
00:16:05,839 --> 00:16:07,360
it's

369
00:16:07,360 --> 00:16:09,680
encrypted right so and the article is

370
00:16:09,680 --> 00:16:11,440
not having the master

371
00:16:11,440 --> 00:16:14,240
so this is how it can uh prevent your

372
00:16:14,240 --> 00:16:17,240
confidentiality

373
00:16:18,399 --> 00:16:22,560
and closing ssl no standard practice

374
00:16:22,560 --> 00:16:25,120
consider vpc endpoint for amazon has to

375
00:16:25,120 --> 00:16:27,440
be accessed for if you are having large

376
00:16:27,440 --> 00:16:30,000
organization or any organization and you

377
00:16:30,000 --> 00:16:33,199
are saying that hey this s3 bucket only

378
00:16:33,199 --> 00:16:34,800
accessible

379
00:16:34,800 --> 00:16:37,279
this organization employee so you should

380
00:16:37,279 --> 00:16:41,680
uh consider mentioning vpc and right so

381
00:16:41,680 --> 00:16:43,600
as i mentioned that is the bucket having

382
00:16:43,600 --> 00:16:46,480
sensitive information it can be having

383
00:16:46,480 --> 00:16:49,440
cloud reload as well right so

384
00:16:49,440 --> 00:16:52,639
yeah one of the things

385
00:16:52,720 --> 00:16:55,040
consider sq object log

386
00:16:55,040 --> 00:16:56,240
so

387
00:16:56,240 --> 00:16:57,600
it prevent

388
00:16:57,600 --> 00:16:59,759
being the

389
00:16:59,759 --> 00:17:02,320
like object data being deleted which is

390
00:17:02,320 --> 00:17:05,839
present in a script right so s3 object

391
00:17:05,839 --> 00:17:07,359
log

392
00:17:07,359 --> 00:17:10,319
pre-signed url you can

393
00:17:10,319 --> 00:17:13,439
assign to the authenticated user so only

394
00:17:13,439 --> 00:17:14,240
the

395
00:17:14,240 --> 00:17:16,959
user having pre-signed up can only

396
00:17:16,959 --> 00:17:19,679
access this estimate

397
00:17:19,679 --> 00:17:21,199
most

398
00:17:21,199 --> 00:17:23,839
preferable

399
00:17:24,160 --> 00:17:26,400
then enable versioning if any change

400
00:17:26,400 --> 00:17:28,240
happen that new version will create so

401
00:17:28,240 --> 00:17:31,360
this is how can you track the s related

402
00:17:31,360 --> 00:17:33,840
operation

403
00:17:34,160 --> 00:17:36,880
second is you found the credit show okay

404
00:17:36,880 --> 00:17:38,720
you might be thinking hey i found the

405
00:17:38,720 --> 00:17:40,320
credentials

406
00:17:40,320 --> 00:17:42,960
am i just supposed to pilot or say hey i

407
00:17:42,960 --> 00:17:46,400
found the direction that's it no you

408
00:17:46,400 --> 00:17:49,280
should enumerate the permission

409
00:17:49,280 --> 00:17:52,160
so this is the standard flow

410
00:17:52,160 --> 00:17:53,600
i follow

411
00:17:53,600 --> 00:17:55,440
got the credit check i try to integrate

412
00:17:55,440 --> 00:17:57,760
the permission and see what

413
00:17:57,760 --> 00:18:00,880
kind of access i'm having right although

414
00:18:00,880 --> 00:18:03,520
what kind of access i'm having using

415
00:18:03,520 --> 00:18:05,600
victim credentials

416
00:18:05,600 --> 00:18:08,720
if i'm having any extra bucket related

417
00:18:08,720 --> 00:18:10,640
or they see two instances and try to get

418
00:18:10,640 --> 00:18:12,640
sensitive information

419
00:18:12,640 --> 00:18:16,160
after that is that having anything that

420
00:18:16,160 --> 00:18:19,360
i can perform the privilege escalation

421
00:18:19,360 --> 00:18:21,679
yes so this is you should also taking

422
00:18:21,679 --> 00:18:23,360
care of it

423
00:18:23,360 --> 00:18:25,440
if not sensitive information is that

424
00:18:25,440 --> 00:18:28,080
policies uh not assigned properly to

425
00:18:28,080 --> 00:18:30,160
that particular user

426
00:18:30,160 --> 00:18:32,240
and if i can perform the privilege

427
00:18:32,240 --> 00:18:34,000
escalation and get the sensitive

428
00:18:34,000 --> 00:18:36,480
information so this is what your

429
00:18:36,480 --> 00:18:38,559
attack flow looked like when you got the

430
00:18:38,559 --> 00:18:41,120
potential

431
00:18:41,440 --> 00:18:43,919
so yeah uh

432
00:18:43,919 --> 00:18:45,600
as an article i got the victim

433
00:18:45,600 --> 00:18:47,600
credential

434
00:18:47,600 --> 00:18:50,480
now try to enumerate the permission and

435
00:18:50,480 --> 00:18:52,640
found that

436
00:18:52,640 --> 00:18:57,840
the user having the i am related and the

437
00:18:58,000 --> 00:19:01,360
user can list anything

438
00:19:01,360 --> 00:19:04,720
but what interesting to me that

439
00:19:04,720 --> 00:19:08,160
is having sts permission okay

440
00:19:08,160 --> 00:19:10,320
but still it's not having like i can

441
00:19:10,320 --> 00:19:13,440
have the access to s3 or just download

442
00:19:13,440 --> 00:19:17,200
the data or do what i want to do

443
00:19:17,200 --> 00:19:18,160
so

444
00:19:18,160 --> 00:19:19,520
what can be done

445
00:19:19,520 --> 00:19:20,320
so

446
00:19:20,320 --> 00:19:23,360
we are aware that uh

447
00:19:23,360 --> 00:19:26,880
we can use the sds so try to get who is

448
00:19:26,880 --> 00:19:28,880
the user and is there any policy

449
00:19:28,880 --> 00:19:30,799
attached to that user right

450
00:19:30,799 --> 00:19:33,840
so yeah this is the way i found the user

451
00:19:33,840 --> 00:19:35,919
and the policy being attached to that

452
00:19:35,919 --> 00:19:37,760
particular user

453
00:19:37,760 --> 00:19:40,080
then try to get the policy and see what

454
00:19:40,080 --> 00:19:42,799
kind of policy it has and

455
00:19:42,799 --> 00:19:45,200
what is the default policy so default

456
00:19:45,200 --> 00:19:48,160
policies version one

457
00:19:48,160 --> 00:19:50,480
then list out to all the policy

458
00:19:50,480 --> 00:19:53,120
available for that particular user so

459
00:19:53,120 --> 00:19:55,280
that might having older

460
00:19:55,280 --> 00:19:58,160
or the misconfigured policy or the

461
00:19:58,160 --> 00:20:00,559
overly permissive policy that might help

462
00:20:00,559 --> 00:20:02,480
us so you should look for all the

463
00:20:02,480 --> 00:20:04,400
possible policy

464
00:20:04,400 --> 00:20:06,320
so we found that hey there are five

465
00:20:06,320 --> 00:20:08,480
policy available

466
00:20:08,480 --> 00:20:10,480
then integrate different policies so

467
00:20:10,480 --> 00:20:12,559
that you can have the identity what kind

468
00:20:12,559 --> 00:20:15,600
of access you have so previously we had

469
00:20:15,600 --> 00:20:19,120
the get and list permission but we found

470
00:20:19,120 --> 00:20:21,440
that hey if i having the admin level

471
00:20:21,440 --> 00:20:23,840
access why admin level because action

472
00:20:23,840 --> 00:20:25,919
start resource start that

473
00:20:25,919 --> 00:20:27,760
explicitly saying that you can perform

474
00:20:27,760 --> 00:20:30,799
anything on any resources so admin level

475
00:20:30,799 --> 00:20:32,640
access

476
00:20:32,640 --> 00:20:34,559
now at again send me hey

477
00:20:34,559 --> 00:20:36,880
what can be done

478
00:20:36,880 --> 00:20:39,200
make this policy as a default policy

479
00:20:39,200 --> 00:20:40,080
right

480
00:20:40,080 --> 00:20:40,460
so

481
00:20:40,460 --> 00:20:41,600
[Music]

482
00:20:41,600 --> 00:20:44,320
i just made this policy as a default

483
00:20:44,320 --> 00:20:46,000
policy and

484
00:20:46,000 --> 00:20:48,880
no error message came so

485
00:20:48,880 --> 00:20:51,600
we sure the idea we are able to make

486
00:20:51,600 --> 00:20:54,000
this policies a default policy and the

487
00:20:54,000 --> 00:20:57,280
privilege escalation happen how from get

488
00:20:57,280 --> 00:20:58,799
to the

489
00:20:58,799 --> 00:21:00,400
uh read write

490
00:21:00,400 --> 00:21:02,480
and update operation

491
00:21:02,480 --> 00:21:04,559
we have right like you can do anything

492
00:21:04,559 --> 00:21:07,360
on any recent source

493
00:21:07,360 --> 00:21:12,480
uh this is the poc for that like how

494
00:21:12,480 --> 00:21:13,760
what kind of

495
00:21:13,760 --> 00:21:17,760
privilege i got after making that policy

496
00:21:17,760 --> 00:21:20,080
as a default policy

497
00:21:20,080 --> 00:21:21,600
so

498
00:21:21,600 --> 00:21:23,840
yeah

499
00:21:25,039 --> 00:21:27,360
so what was the approach so far you

500
00:21:27,360 --> 00:21:30,640
found a hardcoded credential like one of

501
00:21:30,640 --> 00:21:32,320
that effective was you found the hard

502
00:21:32,320 --> 00:21:34,320
coded credential you try to integrate

503
00:21:34,320 --> 00:21:37,520
the permission when you got to i am

504
00:21:37,520 --> 00:21:40,080
related access you try to enumerate the

505
00:21:40,080 --> 00:21:41,520
policy

506
00:21:41,520 --> 00:21:42,799
and

507
00:21:42,799 --> 00:21:45,280
one of the policy was having only

508
00:21:45,280 --> 00:21:47,440
permissive permission

509
00:21:47,440 --> 00:21:50,720
uh like admin level access and

510
00:21:50,720 --> 00:21:52,640
and we tried to make it as a different

511
00:21:52,640 --> 00:21:55,840
policy and it was success so

512
00:21:55,840 --> 00:21:58,000
when you find the credential and that

513
00:21:58,000 --> 00:22:00,559
was not having the too much access don't

514
00:22:00,559 --> 00:22:03,039
give up see what else you can do so this

515
00:22:03,039 --> 00:22:05,679
is how we can go beyond

516
00:22:05,679 --> 00:22:09,360
uh one of the testings

517
00:22:09,679 --> 00:22:11,840
so after

518
00:22:11,840 --> 00:22:14,080
so i have included the poc that how can

519
00:22:14,080 --> 00:22:15,520
you do

520
00:22:15,520 --> 00:22:16,960
the same

521
00:22:16,960 --> 00:22:19,679
actions from the management console

522
00:22:19,679 --> 00:22:21,600
basically i am doing the same

523
00:22:21,600 --> 00:22:23,760
thing from the manager management

524
00:22:23,760 --> 00:22:26,480
console

525
00:22:26,480 --> 00:22:28,720
see this is the week four here having

526
00:22:28,720 --> 00:22:31,039
the admin level access and i will try to

527
00:22:31,039 --> 00:22:34,240
make it as a default policy and see the

528
00:22:34,240 --> 00:22:36,799
permission now i'm having

529
00:22:36,799 --> 00:22:39,120
is a admin label right

530
00:22:39,120 --> 00:22:40,720
so

531
00:22:40,720 --> 00:22:44,159
now all things you found that hey

532
00:22:44,159 --> 00:22:46,960
my credentials been compromised

533
00:22:46,960 --> 00:22:50,960
uh this policy was only permissive right

534
00:22:50,960 --> 00:22:53,120
so

535
00:22:53,440 --> 00:22:57,600
to avoid this right so what can be uh

536
00:22:57,600 --> 00:22:59,600
investigation

537
00:22:59,600 --> 00:23:02,080
or the detection services

538
00:23:02,080 --> 00:23:04,080
for the investigation or detection

539
00:23:04,080 --> 00:23:06,480
purpose you can use the services or the

540
00:23:06,480 --> 00:23:08,400
tools to identify

541
00:23:08,400 --> 00:23:11,440
or to get alert right so for that you

542
00:23:11,440 --> 00:23:13,919
can use trusted advisor or the check i

543
00:23:13,919 --> 00:23:16,080
am threading should report to check

544
00:23:16,080 --> 00:23:17,440
or like

545
00:23:17,440 --> 00:23:21,280
when the last credential being used at

546
00:23:21,280 --> 00:23:24,159
what date at what time to use right

547
00:23:24,159 --> 00:23:25,120
then

548
00:23:25,120 --> 00:23:27,919
use im tools such as i am policy

549
00:23:27,919 --> 00:23:30,799
simulator so that you can just see

550
00:23:30,799 --> 00:23:32,880
like you can simulate the policy and see

551
00:23:32,880 --> 00:23:38,080
what kind of access this user have right

552
00:23:38,159 --> 00:23:42,000
use config rule to uh see what are the

553
00:23:42,000 --> 00:23:45,600
policy in the use that so you can i use

554
00:23:45,600 --> 00:23:48,480
this rule i am policy news that conflict

555
00:23:48,480 --> 00:23:51,279
rule that checks whether i am policy arn

556
00:23:51,279 --> 00:23:54,240
is attached to i am user right i

557
00:23:54,240 --> 00:23:56,159
basically specific this

558
00:23:56,159 --> 00:23:59,200
poly uh rule because this is uh relate

559
00:23:59,200 --> 00:24:00,799
to our attack

560
00:24:00,799 --> 00:24:03,120
scenario right you can apply many rules

561
00:24:03,120 --> 00:24:05,360
i just mentioned one of that

562
00:24:05,360 --> 00:24:07,840
then you can use access advisor

563
00:24:07,840 --> 00:24:08,640
to

564
00:24:08,640 --> 00:24:11,840
get the information about a last access

565
00:24:11,840 --> 00:24:13,600
information right and what kind of

566
00:24:13,600 --> 00:24:15,840
access happens

567
00:24:15,840 --> 00:24:18,720
use crowd rail for the logging like api

568
00:24:18,720 --> 00:24:21,600
request obviously being made right then

569
00:24:21,600 --> 00:24:23,440
at what time

570
00:24:23,440 --> 00:24:25,679
from which ip has

571
00:24:25,679 --> 00:24:28,000
been requested right so you will have

572
00:24:28,000 --> 00:24:30,960
the login information for investigate

573
00:24:30,960 --> 00:24:35,520
and analysis and to take step further

574
00:24:35,520 --> 00:24:38,880
you can use uh monitor cloud watch

575
00:24:38,880 --> 00:24:42,720
alarms to prevent or

576
00:24:42,720 --> 00:24:45,520
to get alerted in the future

577
00:24:45,520 --> 00:24:46,880
right

578
00:24:46,880 --> 00:24:49,360
so for example you can enable for group

579
00:24:49,360 --> 00:24:52,480
logins if any i am policy changes happen

580
00:24:52,480 --> 00:24:54,799
that is also you can record

581
00:24:54,799 --> 00:24:56,480
right so you

582
00:24:56,480 --> 00:24:58,960
get alarm that hey this policy change so

583
00:24:58,960 --> 00:25:01,360
you can directly perform action in this

584
00:25:01,360 --> 00:25:03,600
case policy change

585
00:25:03,600 --> 00:25:06,960
and i made it uh admit so you should

586
00:25:06,960 --> 00:25:09,520
just uh hide the uh

587
00:25:09,520 --> 00:25:11,760
cloud watch alarm active that you've

588
00:25:11,760 --> 00:25:14,320
been notified for saying

589
00:25:14,320 --> 00:25:16,720
then seeing unauthorized api calls

590
00:25:16,720 --> 00:25:18,799
happen then

591
00:25:18,799 --> 00:25:20,400
i mean you can

592
00:25:20,400 --> 00:25:22,880
bring alerted cloud configuration

593
00:25:22,880 --> 00:25:24,240
changes happen

594
00:25:24,240 --> 00:25:26,240
authentication fellow all these you

595
00:25:26,240 --> 00:25:29,840
should be taking care of it

596
00:25:30,559 --> 00:25:33,120
now you are being alerted and detected

597
00:25:33,120 --> 00:25:35,120
hey my credential being clicked or

598
00:25:35,120 --> 00:25:37,918
compromised

599
00:25:38,159 --> 00:25:40,159
you will be like what should be done

600
00:25:40,159 --> 00:25:42,960
right so for that

601
00:25:42,960 --> 00:25:44,880
you can just basically create the new

602
00:25:44,880 --> 00:25:46,480
credentials

603
00:25:46,480 --> 00:25:48,799
and disable the previous compromise

604
00:25:48,799 --> 00:25:51,440
credential and remove it but making sure

605
00:25:51,440 --> 00:25:52,880
that you are

606
00:25:52,880 --> 00:25:56,720
first creating the new credential

607
00:25:56,720 --> 00:25:59,279
and then uh

608
00:25:59,279 --> 00:26:00,559
make uh

609
00:26:00,559 --> 00:26:02,240
deactive

610
00:26:02,240 --> 00:26:05,200
the older credentials so that if

611
00:26:05,200 --> 00:26:06,960
if you directly remove write the

612
00:26:06,960 --> 00:26:08,240
credential

613
00:26:08,240 --> 00:26:09,200
then you

614
00:26:09,200 --> 00:26:12,159
you might be your website maybe break

615
00:26:12,159 --> 00:26:15,120
down or not uh

616
00:26:15,120 --> 00:26:17,279
like web application will not work

617
00:26:17,279 --> 00:26:19,360
properly right so making sure that you

618
00:26:19,360 --> 00:26:21,120
follow this standard

619
00:26:21,120 --> 00:26:23,279
approach

620
00:26:23,279 --> 00:26:25,919
so so far what we have done that uh

621
00:26:25,919 --> 00:26:28,080
we create the new credentials disable

622
00:26:28,080 --> 00:26:30,400
the older credentials so that no longer

623
00:26:30,400 --> 00:26:33,200
used to your access account

624
00:26:33,200 --> 00:26:35,440
apply list privilege to that particular

625
00:26:35,440 --> 00:26:38,159
user and our creating user with

626
00:26:38,159 --> 00:26:40,720
accessibility

627
00:26:40,720 --> 00:26:42,640
now security controls that can be

628
00:26:42,640 --> 00:26:44,559
applied to prevent

629
00:26:44,559 --> 00:26:47,760
from this kind of issue use secret

630
00:26:47,760 --> 00:26:49,600
manager to store your credentials

631
00:26:49,600 --> 00:26:53,200
securely grant list privilege access

632
00:26:53,200 --> 00:26:56,400
use access levels to you i am permission

633
00:26:56,400 --> 00:26:57,279
right

634
00:26:57,279 --> 00:26:59,919
configure a multi-factor authentication

635
00:26:59,919 --> 00:27:02,080
for your most sensitive information like

636
00:27:02,080 --> 00:27:04,000
delete or

637
00:27:04,000 --> 00:27:06,000
removing the cloud rate

638
00:27:06,000 --> 00:27:07,919
of cloud tray configuration changes

639
00:27:07,919 --> 00:27:08,799
right

640
00:27:08,799 --> 00:27:11,440
and you will multi-factor authentication

641
00:27:11,440 --> 00:27:14,880
rotate your credential accurately

642
00:27:14,880 --> 00:27:17,520
and ensure log metric filter alarm

643
00:27:17,520 --> 00:27:20,559
exists for im policy so you just get

644
00:27:20,559 --> 00:27:23,360
alert and you take the action

645
00:27:23,360 --> 00:27:25,679
right so these are the controls you can

646
00:27:25,679 --> 00:27:27,760
apply

647
00:27:27,760 --> 00:27:30,640
now another scenario i have covered that

648
00:27:30,640 --> 00:27:34,960
what if you found the public id

649
00:27:35,120 --> 00:27:38,960
now how why i'm finding this right so

650
00:27:38,960 --> 00:27:40,559
a possible is

651
00:27:40,559 --> 00:27:41,440
a

652
00:27:41,440 --> 00:27:43,679
misconfigured firewall happen

653
00:27:43,679 --> 00:27:46,320
right no properly inbound outbound rule

654
00:27:46,320 --> 00:27:48,159
has been mentioned so that's why c2

655
00:27:48,159 --> 00:27:52,559
instance is publicly accessible to you

656
00:27:52,880 --> 00:27:54,640
now you got the

657
00:27:54,640 --> 00:27:57,679
public ip of these for instance what

658
00:27:57,679 --> 00:28:00,159
should be your next

659
00:28:00,159 --> 00:28:03,200
step look like right is there any

660
00:28:03,200 --> 00:28:06,320
default configuration being used

661
00:28:06,320 --> 00:28:09,200
is there any ports are open

662
00:28:09,200 --> 00:28:11,120
is web application running on this

663
00:28:11,120 --> 00:28:13,520
particular ip

664
00:28:13,520 --> 00:28:15,840
this is uh you should must look for

665
00:28:15,840 --> 00:28:16,880
right

666
00:28:16,880 --> 00:28:20,000
uh i will uh give you overview why

667
00:28:20,000 --> 00:28:21,919
because i have covered one of the

668
00:28:21,919 --> 00:28:24,159
scenario

669
00:28:24,159 --> 00:28:25,200
so

670
00:28:25,200 --> 00:28:28,880
okay so i found that uh um i got the ip

671
00:28:28,880 --> 00:28:32,000
and this particular ip having the web

672
00:28:32,000 --> 00:28:35,039
application running on port number 80

673
00:28:35,039 --> 00:28:37,520
but it's saying that url must be string

674
00:28:37,520 --> 00:28:39,600
not defined okay so i thought that hey

675
00:28:39,600 --> 00:28:40,720
something

676
00:28:40,720 --> 00:28:44,159
url parameter being used

677
00:28:44,159 --> 00:28:48,399
so here i say url ifconfig.com

678
00:28:48,399 --> 00:28:49,919
and i got the

679
00:28:49,919 --> 00:28:51,600
ip address

680
00:28:51,600 --> 00:28:52,720
okay

681
00:28:52,720 --> 00:28:55,600
so i said okay this is vulnerable to

682
00:28:55,600 --> 00:28:56,880
ssri

683
00:28:56,880 --> 00:28:59,520
okay so

684
00:28:59,520 --> 00:29:01,600
but you should not limit selfie hey i

685
00:29:01,600 --> 00:29:03,600
found the ssr if your application is

686
00:29:03,600 --> 00:29:05,440
vulnerable to yourself you should start

687
00:29:05,440 --> 00:29:07,520
digging into it uh this particular

688
00:29:07,520 --> 00:29:10,000
vulnerability that hey web application

689
00:29:10,000 --> 00:29:11,600
vulnerability

690
00:29:11,600 --> 00:29:14,399
is it's posted on ec2 instance

691
00:29:14,399 --> 00:29:16,880
okay rule is attached to it and try to

692
00:29:16,880 --> 00:29:19,360
get the ibm role credential on on see

693
00:29:19,360 --> 00:29:20,880
what kind of level

694
00:29:20,880 --> 00:29:23,120
access you might ending up finding admin

695
00:29:23,120 --> 00:29:26,080
level or s3 bucket data so this is how

696
00:29:26,080 --> 00:29:28,559
you escalate uh

697
00:29:28,559 --> 00:29:31,760
security severity right

698
00:29:31,760 --> 00:29:34,080
so here we did same and we found that

699
00:29:34,080 --> 00:29:35,919
hey uh

700
00:29:35,919 --> 00:29:37,840
this is what the role attached to it and

701
00:29:37,840 --> 00:29:41,760
this are the security credential

702
00:29:41,760 --> 00:29:44,399
after getting credentials enumerate

703
00:29:44,399 --> 00:29:47,039
permission and we found that hey

704
00:29:47,039 --> 00:29:50,080
ex3 related permission and that also

705
00:29:50,080 --> 00:29:52,960
having the credit card details and the

706
00:29:52,960 --> 00:29:55,840
admin

707
00:29:56,080 --> 00:29:59,760
credential in it right so you just using

708
00:29:59,760 --> 00:30:01,360
command to

709
00:30:01,360 --> 00:30:04,159
copy all the cat data in your system and

710
00:30:04,159 --> 00:30:07,600
i was able to get the admin data right

711
00:30:07,600 --> 00:30:10,399
so now you can think of like what kind

712
00:30:10,399 --> 00:30:11,520
of

713
00:30:11,520 --> 00:30:14,880
access i am having as i mean so

714
00:30:14,880 --> 00:30:17,600
just moving to ip to the admin level

715
00:30:17,600 --> 00:30:20,399
access right

716
00:30:20,559 --> 00:30:23,840
so just let's do a text surface analysis

717
00:30:23,840 --> 00:30:26,720
why this happen

718
00:30:26,720 --> 00:30:28,880
one of the factor default configuration

719
00:30:28,880 --> 00:30:31,679
setting usage like you are just allowing

720
00:30:31,679 --> 00:30:32,559
to

721
00:30:32,559 --> 00:30:34,159
easy to instance

722
00:30:34,159 --> 00:30:37,679
publicly available misconfigure firewall

723
00:30:37,679 --> 00:30:40,159
web application hosted on ec2 was

724
00:30:40,159 --> 00:30:42,880
vulnerable to ssrf right like no input

725
00:30:42,880 --> 00:30:44,480
validation uh

726
00:30:44,480 --> 00:30:48,080
was there on the web application

727
00:30:48,080 --> 00:30:51,279
rule was having uh

728
00:30:51,279 --> 00:30:54,559
two access to work with the s3 bucket

729
00:30:54,559 --> 00:30:57,760
and the data storage in ews s3 was not

730
00:30:57,760 --> 00:30:59,919
encrypted so for example even though

731
00:30:59,919 --> 00:31:01,039
article

732
00:31:01,039 --> 00:31:03,840
able to get the s3 bucket but if it's

733
00:31:03,840 --> 00:31:04,960
encrypted

734
00:31:04,960 --> 00:31:07,360
how do he get the

735
00:31:07,360 --> 00:31:11,360
like credit card details or

736
00:31:11,760 --> 00:31:15,039
admin credentials right so that you can

737
00:31:15,039 --> 00:31:16,720
you could have

738
00:31:16,720 --> 00:31:19,840
like prevented

739
00:31:20,559 --> 00:31:22,799
sensitive information being stored on

740
00:31:22,799 --> 00:31:25,600
extra bucket you should not exactly

741
00:31:25,600 --> 00:31:28,720
store the admin credential or any source

742
00:31:28,720 --> 00:31:30,840
credential and save

743
00:31:30,840 --> 00:31:34,159
okay so you may feel like hey this is

744
00:31:34,159 --> 00:31:36,880
most similar uh sound to like capital

745
00:31:36,880 --> 00:31:37,679
one

746
00:31:37,679 --> 00:31:40,799
yes so in the capital one bridge the

747
00:31:40,799 --> 00:31:43,279
similar scenario was that misconfigured

748
00:31:43,279 --> 00:31:45,600
firework attacker was able to gaining

749
00:31:45,600 --> 00:31:49,360
access to an ec2 instance and uh

750
00:31:49,360 --> 00:31:51,840
that is vulnerable to the ssrf and

751
00:31:51,840 --> 00:31:53,360
gaining the

752
00:31:53,360 --> 00:31:55,679
im rule that is x

753
00:31:55,679 --> 00:31:59,600
that is allowed to access sd bucket and

754
00:31:59,600 --> 00:32:02,399
in the s3 bucket he found the credit

755
00:32:02,399 --> 00:32:05,039
card details of the users like millions

756
00:32:05,039 --> 00:32:07,679
of users

757
00:32:08,480 --> 00:32:11,039
so for this particular scenario what was

758
00:32:11,039 --> 00:32:13,679
the factors web application hosted on

759
00:32:13,679 --> 00:32:14,880
instagram

760
00:32:14,880 --> 00:32:17,760
is vulnerable to ssrf

761
00:32:17,760 --> 00:32:22,080
uh imdb imdbs version one being used in

762
00:32:22,080 --> 00:32:25,039
proper market policy storing sensitive

763
00:32:25,039 --> 00:32:26,960
information in

764
00:32:26,960 --> 00:32:29,519
the bucket forgetting to encrypt s3

765
00:32:29,519 --> 00:32:31,039
bucket data right

766
00:32:31,039 --> 00:32:33,760
so i can summarize that misconfigure

767
00:32:33,760 --> 00:32:34,960
firewall

768
00:32:34,960 --> 00:32:37,279
right one of the attack vector

769
00:32:37,279 --> 00:32:40,399
s3 miss configuration right why is

770
00:32:40,399 --> 00:32:42,720
configuration those are the explanation

771
00:32:42,720 --> 00:32:47,120
for that default setting uses see

772
00:32:47,120 --> 00:32:48,480
and the

773
00:32:48,480 --> 00:32:50,720
vulnerable web application

774
00:32:50,720 --> 00:32:53,039
this is available to us so this is how

775
00:32:53,039 --> 00:32:57,399
the you can correlate the articles

776
00:32:59,519 --> 00:33:01,200
like

777
00:33:01,200 --> 00:33:04,000
in future how can you detect right so

778
00:33:04,000 --> 00:33:06,960
you can use the duty

779
00:33:06,960 --> 00:33:09,200
uh if there is any see to

780
00:33:09,200 --> 00:33:11,600
misconfiguration or compromise happen

781
00:33:11,600 --> 00:33:13,360
guard duty will it

782
00:33:13,360 --> 00:33:15,360
like help you to identify

783
00:33:15,360 --> 00:33:19,039
conflict rules that uh specific foreign

784
00:33:19,039 --> 00:33:21,120
base version to check

785
00:33:21,120 --> 00:33:23,600
it basically checked that

786
00:33:23,600 --> 00:33:25,840
if ec2 instance metadata version is

787
00:33:25,840 --> 00:33:28,080
configured with the instance metadata

788
00:33:28,080 --> 00:33:29,840
service version 2

789
00:33:29,840 --> 00:33:32,240
right so that is the most

790
00:33:32,240 --> 00:33:34,640
important thing to prevent from the

791
00:33:34,640 --> 00:33:35,679
getting

792
00:33:35,679 --> 00:33:38,320
i am role credential

793
00:33:38,320 --> 00:33:42,080
then security hub it will just give you

794
00:33:42,080 --> 00:33:43,760
whole analysis

795
00:33:43,760 --> 00:33:48,559
help you to identify that uh related to

796
00:33:48,559 --> 00:33:52,720
config rule i am access analyzer

797
00:33:52,720 --> 00:33:54,559
all the findings you can get in the

798
00:33:54,559 --> 00:33:57,120
security hub so you should use security

799
00:33:57,120 --> 00:34:00,399
about flow locks like to see like ppc

800
00:34:00,399 --> 00:34:03,440
logs from where the traffic is coming

801
00:34:03,440 --> 00:34:04,640
from by

802
00:34:04,640 --> 00:34:07,360
system manager to further properly

803
00:34:07,360 --> 00:34:11,118
configure ec2 instance right

804
00:34:12,239 --> 00:34:14,320
now you are aware that your easy to

805
00:34:14,320 --> 00:34:16,800
install is compromised but what step you

806
00:34:16,800 --> 00:34:18,800
should take right

807
00:34:18,800 --> 00:34:21,280
for that invalidate your temporary

808
00:34:21,280 --> 00:34:23,839
security credential immediately stop

809
00:34:23,839 --> 00:34:27,199
compromise easy to install take this

810
00:34:27,199 --> 00:34:30,560
snapshot of the eps volume so that uh

811
00:34:30,560 --> 00:34:33,679
and deploy that particular instance in

812
00:34:33,679 --> 00:34:36,719
isolated environment that is

813
00:34:36,719 --> 00:34:38,480
being compromised

814
00:34:38,480 --> 00:34:40,480
isolated basically

815
00:34:40,480 --> 00:34:43,679
new internet access and ideally private

816
00:34:43,679 --> 00:34:44,960
subnet

817
00:34:44,960 --> 00:34:47,119
and then read through the logs to figure

818
00:34:47,119 --> 00:34:48,480
out why

819
00:34:48,480 --> 00:34:50,719
right

820
00:34:51,359 --> 00:34:54,639
to prevent this kind of attacks in

821
00:34:54,639 --> 00:34:57,359
future or misconfiguration in future you

822
00:34:57,359 --> 00:34:59,359
can use the input validation to prevent

823
00:34:59,359 --> 00:35:00,960
from ssrf

824
00:35:00,960 --> 00:35:03,839
update your aws ec2 instance metadata

825
00:35:03,839 --> 00:35:06,000
services so even though it's vulnerable

826
00:35:06,000 --> 00:35:08,240
to ssr if you are

827
00:35:08,240 --> 00:35:10,720
still the user will not get the improved

828
00:35:10,720 --> 00:35:13,839
credential right then implementalist

829
00:35:13,839 --> 00:35:16,480
privilege permission

830
00:35:16,480 --> 00:35:18,079
so that

831
00:35:18,079 --> 00:35:18,880
the

832
00:35:18,880 --> 00:35:21,520
attribute will have the least privilege

833
00:35:21,520 --> 00:35:22,640
access

834
00:35:22,640 --> 00:35:25,599
consider encryption of data address

835
00:35:25,599 --> 00:35:28,079
i'll mention that why i mentioned

836
00:35:28,079 --> 00:35:30,720
then constantly monitor only permissive

837
00:35:30,720 --> 00:35:32,880
security use

838
00:35:32,880 --> 00:35:35,359
groups use your control driver for the

839
00:35:35,359 --> 00:35:37,599
separate logging activity and normal

840
00:35:37,599 --> 00:35:39,920
account activity

841
00:35:39,920 --> 00:35:43,280
security groups buy its matter because

842
00:35:43,280 --> 00:35:46,720
you can just uh mention that only

843
00:35:46,720 --> 00:35:48,800
the user which are present in the

844
00:35:48,800 --> 00:35:52,160
security group that only allowed to

845
00:35:52,160 --> 00:35:54,560
access this ec2 instance so you can

846
00:35:54,560 --> 00:35:57,040
avoid the publicly

847
00:35:57,040 --> 00:35:59,040
available easy to instance

848
00:35:59,040 --> 00:36:00,240
and

849
00:36:00,240 --> 00:36:02,400
why do you separate logging so even the

850
00:36:02,400 --> 00:36:06,320
article got access to your

851
00:36:06,320 --> 00:36:08,240
credential but

852
00:36:08,240 --> 00:36:09,040
he

853
00:36:09,040 --> 00:36:12,000
or she cannot remove the

854
00:36:12,000 --> 00:36:15,760
cloud trail or any logging mechanism

855
00:36:15,760 --> 00:36:18,880
and then use security hub

856
00:36:18,880 --> 00:36:19,599
i

857
00:36:19,599 --> 00:36:23,920
like to have the whole analysis on it

858
00:36:25,119 --> 00:36:26,560
so

859
00:36:26,560 --> 00:36:29,520
things to not that

860
00:36:29,520 --> 00:36:32,320
to get to know about the attack vectors

861
00:36:32,320 --> 00:36:35,359
right you reconnections and the os end

862
00:36:35,359 --> 00:36:37,520
are the key to finding those added

863
00:36:37,520 --> 00:36:39,520
vectors

864
00:36:39,520 --> 00:36:42,240
post exploitation has no limit with the

865
00:36:42,240 --> 00:36:45,599
cloud so you should like uh keep looking

866
00:36:45,599 --> 00:36:47,359
for the attack

867
00:36:47,359 --> 00:36:49,520
additional services like destroy

868
00:36:49,520 --> 00:36:52,000
blogging and make code changes to

869
00:36:52,000 --> 00:36:54,880
attacking source right like uh

870
00:36:54,880 --> 00:36:57,920
like internet security teams can check

871
00:36:57,920 --> 00:37:00,720
what can be done so that in future what

872
00:37:00,720 --> 00:37:01,920
if we are traditionally being

873
00:37:01,920 --> 00:37:04,240
compromised and another outsider

874
00:37:04,240 --> 00:37:05,599
attacker do

875
00:37:05,599 --> 00:37:10,000
anything with your services right

876
00:37:10,000 --> 00:37:11,359
so

877
00:37:11,359 --> 00:37:13,280
yeah

878
00:37:13,280 --> 00:37:16,000
making sure that you always apply that

879
00:37:16,000 --> 00:37:18,400
least privilege access to

880
00:37:18,400 --> 00:37:20,720
any user role group

881
00:37:20,720 --> 00:37:23,760
so that you at least avoid the attack

882
00:37:23,760 --> 00:37:26,240
surface area

883
00:37:26,240 --> 00:37:29,440
and the most common things we have found

884
00:37:29,440 --> 00:37:31,920
the misconfiguration of services in

885
00:37:31,920 --> 00:37:34,800
secure programming practice and

886
00:37:34,800 --> 00:37:37,119
insecure permission

887
00:37:37,119 --> 00:37:39,599
like what permissive

888
00:37:39,599 --> 00:37:42,400
policy has been there and that leads to

889
00:37:42,400 --> 00:37:44,480
the whole

890
00:37:44,480 --> 00:37:46,400
account takeover

891
00:37:46,400 --> 00:37:49,440
fall and

892
00:37:49,520 --> 00:37:52,560
mustang the follow ewa security best

893
00:37:52,560 --> 00:37:54,000
practices

894
00:37:54,000 --> 00:37:58,640
to avoid or to being prevent from

895
00:37:59,119 --> 00:38:00,000
being

896
00:38:00,000 --> 00:38:01,599
compromised

897
00:38:01,599 --> 00:38:03,520
or any

898
00:38:03,520 --> 00:38:05,839
we went from being getting rich in

899
00:38:05,839 --> 00:38:08,640
future right

900
00:38:09,040 --> 00:38:11,119
i just mentioned some guidelines and

901
00:38:11,119 --> 00:38:13,359
tools that can help

902
00:38:13,359 --> 00:38:14,160
so

903
00:38:14,160 --> 00:38:16,960
these are the guidelines uh aws white

904
00:38:16,960 --> 00:38:19,359
papers having the good documentation

905
00:38:19,359 --> 00:38:20,960
around it

906
00:38:20,960 --> 00:38:24,079
aws security audit guidelines

907
00:38:24,079 --> 00:38:26,560
then scout suit for the

908
00:38:26,560 --> 00:38:29,119
automated

909
00:38:30,079 --> 00:38:31,680
cis

910
00:38:31,680 --> 00:38:34,240
auditing right benchmark auditing for

911
00:38:34,240 --> 00:38:36,800
the multicult multi-cloud

912
00:38:36,800 --> 00:38:38,720
roller is basically

913
00:38:38,720 --> 00:38:42,880
automated auditing specific for aws s3

914
00:38:42,880 --> 00:38:45,359
inspector to analysis what kind of

915
00:38:45,359 --> 00:38:46,640
permission

916
00:38:46,640 --> 00:38:48,079
having

917
00:38:48,079 --> 00:38:50,000
right like you got the credential and

918
00:38:50,000 --> 00:38:52,720
you want to see okay what kind of you

919
00:38:52,720 --> 00:38:54,480
don't want to go manually you can just

920
00:38:54,480 --> 00:38:56,079
use this tool and see what kind of

921
00:38:56,079 --> 00:38:57,520
permission

922
00:38:57,520 --> 00:38:59,599
you have like it's publicly accessible

923
00:38:59,599 --> 00:39:02,560
or it's having the authenticated any

924
00:39:02,560 --> 00:39:04,400
authentication user can perform any

925
00:39:04,400 --> 00:39:06,720
action right so it will give you

926
00:39:06,720 --> 00:39:09,040
information around it enumerate i am you

927
00:39:09,040 --> 00:39:11,359
can just illuminate the

928
00:39:11,359 --> 00:39:12,720
what kind of

929
00:39:12,720 --> 00:39:15,040
user like what kind of access the

930
00:39:15,040 --> 00:39:17,760
particular user having and paco for the

931
00:39:17,760 --> 00:39:19,920
penetration testing purpose it's a

932
00:39:19,920 --> 00:39:22,880
penetration distance

933
00:39:22,880 --> 00:39:25,359
if any question i ask

934
00:39:25,359 --> 00:39:27,440
question and answer

935
00:39:27,440 --> 00:39:30,160
i'll move on for the question and answer

936
00:39:30,160 --> 00:39:32,079
and you can connect

937
00:39:32,079 --> 00:39:35,320
in another

