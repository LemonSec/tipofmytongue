1
00:00:10,320 --> 00:00:11,840
hi everyone

2
00:00:11,840 --> 00:00:14,559
i'm mike and uh today i wanted to speak

3
00:00:14,559 --> 00:00:15,360
with you

4
00:00:15,360 --> 00:00:17,520
about velociraptor i wanted to go

5
00:00:17,520 --> 00:00:19,439
through a few examples of how we can use

6
00:00:19,439 --> 00:00:22,320
velociraptor in a in a real dfir case

7
00:00:22,320 --> 00:00:25,519
you must have heard of velociraptor

8
00:00:25,519 --> 00:00:28,640
velociraptor is a unique dfir tool

9
00:00:28,640 --> 00:00:31,760
that gives you the user the power

10
00:00:31,760 --> 00:00:34,559
uh to be very flexible about the way

11
00:00:34,559 --> 00:00:35,840
that we collect

12
00:00:35,840 --> 00:00:38,480
uh artifacts or information from

13
00:00:38,480 --> 00:00:39,280
endpoints

14
00:00:39,280 --> 00:00:40,800
and the thing that makes it really cool

15
00:00:40,800 --> 00:00:42,960
is that it has this very powerful

16
00:00:42,960 --> 00:00:44,960
velociraptor query language

17
00:00:44,960 --> 00:00:46,559
and i'm going to show you today how we

18
00:00:46,559 --> 00:00:48,079
can use that to

19
00:00:48,079 --> 00:00:50,160
do some advanced hunting so it's a very

20
00:00:50,160 --> 00:00:51,440
short talk so we're going to go

21
00:00:51,440 --> 00:00:53,199
and skip a lot of the information but

22
00:00:53,199 --> 00:00:54,559
there's going to be some references at

23
00:00:54,559 --> 00:00:56,000
the end so you can have a look at some

24
00:00:56,000 --> 00:00:58,239
more information about this

25
00:00:58,239 --> 00:00:59,840
so let's just take a quick look at the

26
00:00:59,840 --> 00:01:01,600
overview what does velociraptor look

27
00:01:01,600 --> 00:01:02,079
like

28
00:01:02,079 --> 00:01:04,400
so it's an agent-based system we have an

29
00:01:04,400 --> 00:01:06,479
agent running on different assets

30
00:01:06,479 --> 00:01:08,479
and we have the velociraptor server

31
00:01:08,479 --> 00:01:10,560
usually it's deployed in the cloud

32
00:01:10,560 --> 00:01:13,680
and the um admin ui which is what we're

33
00:01:13,680 --> 00:01:15,040
going to be using today

34
00:01:15,040 --> 00:01:18,000
we can use that to um to task and

35
00:01:18,000 --> 00:01:20,159
control the the server

36
00:01:20,159 --> 00:01:21,600
the nice thing about it is it has

37
00:01:21,600 --> 00:01:23,200
persistent communication

38
00:01:23,200 --> 00:01:24,560
to the to the endpoint so we don't

39
00:01:24,560 --> 00:01:26,080
really have to pull or anything we can

40
00:01:26,080 --> 00:01:27,200
just go ahead and

41
00:01:27,200 --> 00:01:29,840
and query the endpoints interactively in

42
00:01:29,840 --> 00:01:31,520
seconds so i'm just going to go through

43
00:01:31,520 --> 00:01:34,479
a quick tour of the the um the

44
00:01:34,479 --> 00:01:36,320
velociraptor ui because i'm not

45
00:01:36,320 --> 00:01:38,159
going to show you guys how to install it

46
00:01:38,159 --> 00:01:39,520
because we have a lot of references

47
00:01:39,520 --> 00:01:40,640
about installing it

48
00:01:40,640 --> 00:01:44,399
uh already um but i just wanted to just

49
00:01:44,399 --> 00:01:46,320
point out that it's a very fast very

50
00:01:46,320 --> 00:01:46,880
efficient

51
00:01:46,880 --> 00:01:49,439
scalable system and typically uh we're

52
00:01:49,439 --> 00:01:50,399
looking at about 10

53
00:01:50,399 --> 00:01:53,600
000 endpoints on one server so it is

54
00:01:53,600 --> 00:01:55,200
actually pretty efficient we can do some

55
00:01:55,200 --> 00:01:57,680
very very fast hunting with that

56
00:01:57,680 --> 00:01:59,200
so let me just show you a quick

57
00:01:59,200 --> 00:02:00,960
velociraptor gui tour

58
00:02:00,960 --> 00:02:03,680
um let me switch to the ui so this is

59
00:02:03,680 --> 00:02:05,360
the velociraptor ui once you have it

60
00:02:05,360 --> 00:02:06,880
installed

61
00:02:06,880 --> 00:02:08,720
and the first thing that you can do is

62
00:02:08,720 --> 00:02:10,959
you can search for different machines

63
00:02:10,959 --> 00:02:14,239
uh let me just show you the sidebar here

64
00:02:14,239 --> 00:02:16,480
uh the home page is the dashboard we'll

65
00:02:16,480 --> 00:02:19,520
just have a look at the dashboard here

66
00:02:19,520 --> 00:02:21,760
and you can see that i have this server

67
00:02:21,760 --> 00:02:23,760
running for a while

68
00:02:23,760 --> 00:02:26,959
um and it has this is the memory usage

69
00:02:26,959 --> 00:02:29,200
of the server just a bit of monitoring

70
00:02:29,200 --> 00:02:31,920
and this server has about 2 000 clients

71
00:02:31,920 --> 00:02:33,360
connected to it we're going to do some

72
00:02:33,360 --> 00:02:34,319
hunting

73
00:02:34,319 --> 00:02:37,040
in in just a minute uh what i will do is

74
00:02:37,040 --> 00:02:38,239
first i'll show all the

75
00:02:38,239 --> 00:02:40,720
all the machines there's a whole bunch

76
00:02:40,720 --> 00:02:42,959
of them and it just goes on for ages

77
00:02:42,959 --> 00:02:44,319
uh but we can actually search for

78
00:02:44,319 --> 00:02:46,480
specific machines by label so we can

79
00:02:46,480 --> 00:02:48,319
label a machine

80
00:02:48,319 --> 00:02:50,879
and we just we just kind of highlight it

81
00:02:50,879 --> 00:02:52,560
here and add a label

82
00:02:52,560 --> 00:02:54,319
uh and that allows us to kind of group

83
00:02:54,319 --> 00:02:55,840
machines into uh

84
00:02:55,840 --> 00:02:58,560
into groups so we can hunt hunt uh in a

85
00:02:58,560 --> 00:02:59,920
more targeted way

86
00:02:59,920 --> 00:03:01,280
i have a machine here which is my

87
00:03:01,280 --> 00:03:03,760
machine here which i've labeled uh

88
00:03:03,760 --> 00:03:07,680
as mike the labels mic

89
00:03:07,680 --> 00:03:12,640
so let me just find it

90
00:03:12,640 --> 00:03:14,958
come on

91
00:03:16,959 --> 00:03:21,200
let's label it enable mic

92
00:03:22,959 --> 00:03:26,640
okay um i'll just find i'll just

93
00:03:26,640 --> 00:03:28,480
show you on another machine let me just

94
00:03:28,480 --> 00:03:30,799
quickly have a look here the dashboard

95
00:03:30,799 --> 00:03:32,640
we've seen that

96
00:03:32,640 --> 00:03:35,120
yeah and we can investigate individual

97
00:03:35,120 --> 00:03:35,840
clients

98
00:03:35,840 --> 00:03:37,280
interactively so let's just pick a

99
00:03:37,280 --> 00:03:39,599
client and so

100
00:03:39,599 --> 00:03:41,680
this is just some information about this

101
00:03:41,680 --> 00:03:42,959
client

102
00:03:42,959 --> 00:03:45,440
if we have a look at the vfs we can

103
00:03:45,440 --> 00:03:47,120
actually go and interact with files on

104
00:03:47,120 --> 00:03:48,400
the machine so we can you know go

105
00:03:48,400 --> 00:03:49,360
through

106
00:03:49,360 --> 00:03:51,680
and at the moment uh this is just

107
00:03:51,680 --> 00:03:52,560
showing us what

108
00:03:52,560 --> 00:03:54,400
information the server has on this on

109
00:03:54,400 --> 00:03:56,400
this machine so we can just

110
00:03:56,400 --> 00:04:00,400
uh refresh that by

111
00:04:00,400 --> 00:04:01,840
clicking that that just syncs that

112
00:04:01,840 --> 00:04:03,599
directory listing so we can see what's

113
00:04:03,599 --> 00:04:05,040
what's on there

114
00:04:05,040 --> 00:04:06,879
we can also do a recursive directory

115
00:04:06,879 --> 00:04:08,640
listing and you know see

116
00:04:08,640 --> 00:04:11,840
a whole bunch of files uh and on that

117
00:04:11,840 --> 00:04:12,400
machine

118
00:04:12,400 --> 00:04:15,840
and you know we can we can go in and

119
00:04:15,840 --> 00:04:17,918
you know download individual files or

120
00:04:17,918 --> 00:04:20,079
whatever right from from that machine

121
00:04:20,079 --> 00:04:23,120
so when we look at a file let's say

122
00:04:23,120 --> 00:04:26,560
end user that this one

123
00:04:26,560 --> 00:04:28,960
we can simply click collect from client

124
00:04:28,960 --> 00:04:30,160
and then it just collects that

125
00:04:30,160 --> 00:04:32,800
that file from the from the machine and

126
00:04:32,800 --> 00:04:34,000
then uh and then we can

127
00:04:34,000 --> 00:04:37,840
you know look at it uh let me just stop

128
00:04:37,840 --> 00:04:39,360
that

129
00:04:39,360 --> 00:04:41,520
okay so i'm just gonna go through that

130
00:04:41,520 --> 00:04:43,040
part very quickly because i wanted to

131
00:04:43,040 --> 00:04:44,240
show you guys

132
00:04:44,240 --> 00:04:48,880
uh a cl example of what we actually use

133
00:04:48,880 --> 00:04:50,800
uh oh i just wanted to show you quickly

134
00:04:50,800 --> 00:04:52,639
the uh

135
00:04:52,639 --> 00:04:55,199
interactive shell feature that we can

136
00:04:55,199 --> 00:04:56,560
actually go through

137
00:04:56,560 --> 00:04:59,120
and we can get a shell on that machine

138
00:04:59,120 --> 00:04:59,680
at

139
00:04:59,680 --> 00:05:01,520
any time so for instance in this case if

140
00:05:01,520 --> 00:05:02,720
i wanted to know what

141
00:05:02,720 --> 00:05:05,440
uh what are the local users on that

142
00:05:05,440 --> 00:05:06,080
machine

143
00:05:06,080 --> 00:05:08,960
you know i have a little powershell

144
00:05:08,960 --> 00:05:10,720
little powershell snippet here

145
00:05:10,720 --> 00:05:14,240
i can simply paste that here and

146
00:05:14,240 --> 00:05:15,680
and collect that and that that just

147
00:05:15,680 --> 00:05:17,039
basically runs the file shell on the

148
00:05:17,039 --> 00:05:17,759
machine and

149
00:05:17,759 --> 00:05:19,840
we get back the responses so you know in

150
00:05:19,840 --> 00:05:21,280
this case this particular

151
00:05:21,280 --> 00:05:22,880
powershell just tells us what the local

152
00:05:22,880 --> 00:05:27,199
admin users are so so we've got this um

153
00:05:27,199 --> 00:05:31,759
yeah okay so let me um

154
00:05:31,759 --> 00:05:34,560
go through and so we've seen how we can

155
00:05:34,560 --> 00:05:35,600
fetch files

156
00:05:35,600 --> 00:05:37,759
and interact with the machine but what's

157
00:05:37,759 --> 00:05:39,520
really cool about velociraptor is

158
00:05:39,520 --> 00:05:41,199
because we have that query language

159
00:05:41,199 --> 00:05:43,520
that we can use to uh to really

160
00:05:43,520 --> 00:05:45,360
customize the way that we are actually

161
00:05:45,360 --> 00:05:47,039
interacting with the machine and

162
00:05:47,039 --> 00:05:48,240
querying things

163
00:05:48,240 --> 00:05:50,880
i just wanted to show you an example of

164
00:05:50,880 --> 00:05:53,440
uh what we call a forensic artifact or a

165
00:05:53,440 --> 00:05:55,199
velociraptor artifact

166
00:05:55,199 --> 00:05:57,919
uh and we we use that term a lot and

167
00:05:57,919 --> 00:05:58,960
you'll see that a lot in the

168
00:05:58,960 --> 00:05:59,840
documentation

169
00:05:59,840 --> 00:06:03,520
of the artifact the term artifact

170
00:06:03,520 --> 00:06:06,800
so when you look here in the ui we have

171
00:06:06,800 --> 00:06:09,120
our artifact viewer and you can just

172
00:06:09,120 --> 00:06:10,240
click on any of these

173
00:06:10,240 --> 00:06:13,120
artifacts randomly you'll see that these

174
00:06:13,120 --> 00:06:15,199
artifacts are essentially just queries

175
00:06:15,199 --> 00:06:18,240
that are packaged up inside a yaml file

176
00:06:18,240 --> 00:06:19,919
i'm not going to go really into details

177
00:06:19,919 --> 00:06:21,919
about the query language itself in this

178
00:06:21,919 --> 00:06:22,400
talk

179
00:06:22,400 --> 00:06:24,080
but you just need to know that these

180
00:06:24,080 --> 00:06:25,919
artifacts are just queries

181
00:06:25,919 --> 00:06:28,800
that are named so they have a name and

182
00:06:28,800 --> 00:06:30,240
so we can actually just

183
00:06:30,240 --> 00:06:33,120
use those queries and just ask the

184
00:06:33,120 --> 00:06:34,800
endpoint about them

185
00:06:34,800 --> 00:06:37,360
at any time so just to give you an

186
00:06:37,360 --> 00:06:38,240
example of

187
00:06:38,240 --> 00:06:41,039
how useful it is having these uh

188
00:06:41,039 --> 00:06:42,479
artifacts in the yaml

189
00:06:42,479 --> 00:06:45,199
form allows us to interchange them and

190
00:06:45,199 --> 00:06:46,720
share them with the community

191
00:06:46,720 --> 00:06:48,080
so i'm just going to go through an

192
00:06:48,080 --> 00:06:50,080
example as a really quick one and this

193
00:06:50,080 --> 00:06:51,120
is just something that i just put

194
00:06:51,120 --> 00:06:52,720
together in the last few days because

195
00:06:52,720 --> 00:06:53,680
it's actually like

196
00:06:53,680 --> 00:06:55,440
a current zero day you know that at the

197
00:06:55,440 --> 00:06:56,960
time of recording at least

198
00:06:56,960 --> 00:06:59,360
um it is the serious sam or hive

199
00:06:59,360 --> 00:07:00,639
nightmare example

200
00:07:00,639 --> 00:07:02,720
so let me just go through that uh and

201
00:07:02,720 --> 00:07:03,680
you can see that

202
00:07:03,680 --> 00:07:06,479
there is a a uh cve for it and there's

203
00:07:06,479 --> 00:07:07,680
an advisory out

204
00:07:07,680 --> 00:07:10,000
and you know we can have a look at you

205
00:07:10,000 --> 00:07:11,280
know the different

206
00:07:11,280 --> 00:07:12,960
resources there are many resources that

207
00:07:12,960 --> 00:07:14,240
explain this vulnerability but

208
00:07:14,240 --> 00:07:15,120
essentially

209
00:07:15,120 --> 00:07:17,680
what this vulnerability is if you read

210
00:07:17,680 --> 00:07:18,720
the details

211
00:07:18,720 --> 00:07:21,280
is that there is just a weak permission

212
00:07:21,280 --> 00:07:22,960
on the sam file

213
00:07:22,960 --> 00:07:25,919
so if you look at it the built-in users

214
00:07:25,919 --> 00:07:26,639
group

215
00:07:26,639 --> 00:07:30,080
has read permission on the sander

216
00:07:30,080 --> 00:07:31,440
on the directory where the sam is

217
00:07:31,440 --> 00:07:33,759
contained and that allows you to

218
00:07:33,759 --> 00:07:35,599
allows low privileged users to just read

219
00:07:35,599 --> 00:07:37,680
the sam crack the hashes and

220
00:07:37,680 --> 00:07:40,080
escalate to domain admin from there so

221
00:07:40,080 --> 00:07:41,280
it is actually quite a serious

222
00:07:41,280 --> 00:07:43,039
vulnerability

223
00:07:43,039 --> 00:07:44,879
and so you might have you know a whole

224
00:07:44,879 --> 00:07:46,319
bunch of machines and you can say oh

225
00:07:46,319 --> 00:07:47,280
well how do i

226
00:07:47,280 --> 00:07:49,680
how do i fix that well you can see the

227
00:07:49,680 --> 00:07:51,199
the advisories and microsoft has

228
00:07:51,199 --> 00:07:53,199
released an advisory about it

229
00:07:53,199 --> 00:07:55,840
and we need to check the acls but how do

230
00:07:55,840 --> 00:07:58,160
i do that to 2000 machines

231
00:07:58,160 --> 00:08:00,080
how do i check that you know 2000

232
00:08:00,080 --> 00:08:02,240
machines are patched or whatever

233
00:08:02,240 --> 00:08:04,879
so this is where a query language really

234
00:08:04,879 --> 00:08:05,680
shines right

235
00:08:05,680 --> 00:08:07,599
i can the idea is that i could write a

236
00:08:07,599 --> 00:08:08,879
query

237
00:08:08,879 --> 00:08:11,759
right now and run it on all my 2000

238
00:08:11,759 --> 00:08:12,879
machines

239
00:08:12,879 --> 00:08:15,360
and then see the results uh in seconds

240
00:08:15,360 --> 00:08:16,639
right so

241
00:08:16,639 --> 00:08:19,039
um so let's let's have a look at some at

242
00:08:19,039 --> 00:08:19,840
our

243
00:08:19,840 --> 00:08:22,160
public artifact reference which is a

244
00:08:22,160 --> 00:08:24,160
public place where we can share

245
00:08:24,160 --> 00:08:26,879
these kind of uh artifacts these queries

246
00:08:26,879 --> 00:08:28,720
so we this is our website our

247
00:08:28,720 --> 00:08:30,400
documentation website and we have a

248
00:08:30,400 --> 00:08:32,159
thing called the artifact exchange

249
00:08:32,159 --> 00:08:34,080
the artifact exchange is a place where

250
00:08:34,080 --> 00:08:35,200
we can change

251
00:08:35,200 --> 00:08:38,799
uh information about current threats

252
00:08:38,799 --> 00:08:40,958
and people can write different queries

253
00:08:40,958 --> 00:08:42,159
different artifacts

254
00:08:42,159 --> 00:08:43,839
that we can share with the community so

255
00:08:43,839 --> 00:08:45,600
you most of the time you don't really

256
00:08:45,600 --> 00:08:47,760
need to be able to write your own vql

257
00:08:47,760 --> 00:08:49,680
you can just uh have a look at the

258
00:08:49,680 --> 00:08:51,279
artifact exchange to see whether there's

259
00:08:51,279 --> 00:08:52,399
something similar

260
00:08:52,399 --> 00:08:54,160
you see we've already got something here

261
00:08:54,160 --> 00:08:55,600
but the one that i just wanted to show

262
00:08:55,600 --> 00:08:56,560
you today was this

263
00:08:56,560 --> 00:08:59,839
uh access control list uh artifact which

264
00:08:59,839 --> 00:09:00,320
is

265
00:09:00,320 --> 00:09:03,600
uh allow which basically pauses

266
00:09:03,600 --> 00:09:05,920
uses uh powershell to get the access to

267
00:09:05,920 --> 00:09:08,240
the acls of the um

268
00:09:08,240 --> 00:09:11,839
of of the sam uh um

269
00:09:11,839 --> 00:09:14,480
the sam files right so i'm not going to

270
00:09:14,480 --> 00:09:16,399
go again into too much details here but

271
00:09:16,399 --> 00:09:18,480
all you have to do is really just

272
00:09:18,480 --> 00:09:20,000
find the artifact that you're interested

273
00:09:20,000 --> 00:09:22,640
in and then you just

274
00:09:22,640 --> 00:09:25,440
copy it from here and then we're just

275
00:09:25,440 --> 00:09:26,160
going to go

276
00:09:26,160 --> 00:09:29,519
back to our server into the artifact

277
00:09:29,519 --> 00:09:32,000
viewer and we're just going to paste

278
00:09:32,000 --> 00:09:33,680
that artifact into our server right so

279
00:09:33,680 --> 00:09:34,640
this is

280
00:09:34,640 --> 00:09:37,120
very simple we just click the plus

281
00:09:37,120 --> 00:09:38,399
button here

282
00:09:38,399 --> 00:09:42,000
highlight delete you know paste

283
00:09:42,000 --> 00:09:44,240
and and that just pastes the artifact

284
00:09:44,240 --> 00:09:45,200
from the

285
00:09:45,200 --> 00:09:48,080
artifact exchange so so you can just

286
00:09:48,080 --> 00:09:49,600
directly use it i mean if you

287
00:09:49,600 --> 00:09:51,760
you can pretty much see that that's the

288
00:09:51,760 --> 00:09:53,680
first part that's the powershell

289
00:09:53,680 --> 00:09:56,320
script a very small partial thing and

290
00:09:56,320 --> 00:09:57,760
then we wrap it

291
00:09:57,760 --> 00:10:00,320
in vql and then we do some filtering

292
00:10:00,320 --> 00:10:01,839
there with uh with extra

293
00:10:01,839 --> 00:10:04,000
extra processing right so it's a pretty

294
00:10:04,000 --> 00:10:05,519
straightforward

295
00:10:05,519 --> 00:10:08,560
approach but now when we save it

296
00:10:08,560 --> 00:10:11,440
then you'll see that it actually we have

297
00:10:11,440 --> 00:10:13,200
a customized artifact

298
00:10:13,200 --> 00:10:15,200
it's part of the ui part of vel's raptor

299
00:10:15,200 --> 00:10:16,399
and we can just use it

300
00:10:16,399 --> 00:10:17,920
in any context that any of the other

301
00:10:17,920 --> 00:10:19,839
artifacts can be used in

302
00:10:19,839 --> 00:10:21,920
so uh let's go back to our to our

303
00:10:21,920 --> 00:10:23,279
machine

304
00:10:23,279 --> 00:10:25,600
let's see if we can find it again yep so

305
00:10:25,600 --> 00:10:26,480
this is my

306
00:10:26,480 --> 00:10:28,320
mic label right so this is a machine

307
00:10:28,320 --> 00:10:30,320
here and

308
00:10:30,320 --> 00:10:32,560
now i'm just going to look at that one

309
00:10:32,560 --> 00:10:34,000
machine here

310
00:10:34,000 --> 00:10:36,480
um over here on the top i've got the

311
00:10:36,480 --> 00:10:38,079
name the host name of the machine and it

312
00:10:38,079 --> 00:10:40,160
says connect it so it's now connected to

313
00:10:40,160 --> 00:10:41,839
the machine so we don't really

314
00:10:41,839 --> 00:10:44,240
pull we are directly connected to it so

315
00:10:44,240 --> 00:10:45,200
when we task it

316
00:10:45,200 --> 00:10:48,480
we can immediately um immediately uh

317
00:10:48,480 --> 00:10:50,640
get information from it so i'm just

318
00:10:50,640 --> 00:10:52,560
going to go to the collected artifacts

319
00:10:52,560 --> 00:10:54,000
and velociraptor just deals with

320
00:10:54,000 --> 00:10:56,000
artifacts that's all it knows about

321
00:10:56,000 --> 00:10:58,160
so this is a list of the artifacts that

322
00:10:58,160 --> 00:10:59,040
are collected

323
00:10:59,040 --> 00:11:01,680
when when we first start we collect this

324
00:11:01,680 --> 00:11:04,000
information general information artifact

325
00:11:04,000 --> 00:11:05,120
but what i'm going to do now is i'm

326
00:11:05,120 --> 00:11:07,760
going to click this plus button here

327
00:11:07,760 --> 00:11:09,360
and we're going to collect that new

328
00:11:09,360 --> 00:11:11,600
custom artifact that we've created

329
00:11:11,600 --> 00:11:13,360
which is the access control list so i'm

330
00:11:13,360 --> 00:11:14,880
just going to select that

331
00:11:14,880 --> 00:11:17,839
i can search for it first and it again

332
00:11:17,839 --> 00:11:19,440
shows me a bit of a description of it

333
00:11:19,440 --> 00:11:20,560
reminds me about it

334
00:11:20,560 --> 00:11:21,839
but you can see that there are a couple

335
00:11:21,839 --> 00:11:23,760
of parameters here that i can use to

336
00:11:23,760 --> 00:11:25,519
customize this artifact that i've got

337
00:11:25,519 --> 00:11:26,000
from

338
00:11:26,000 --> 00:11:28,320
the artifact exchange so i'm just going

339
00:11:28,320 --> 00:11:30,079
to configure those

340
00:11:30,079 --> 00:11:31,920
and you can see that i can change the

341
00:11:31,920 --> 00:11:34,320
glob so i can you know check for other

342
00:11:34,320 --> 00:11:36,160
files and access controls in this case

343
00:11:36,160 --> 00:11:37,360
i'm interested in the sam

344
00:11:37,360 --> 00:11:39,120
specifically so it's it's going to be in

345
00:11:39,120 --> 00:11:40,399
this directory with an

346
00:11:40,399 --> 00:11:44,240
s star and this is the acl filter

347
00:11:44,240 --> 00:11:45,920
that i'm specifically looking for i'm

348
00:11:45,920 --> 00:11:48,240
only interested in files that have that

349
00:11:48,240 --> 00:11:50,079
uh that permission that filter so

350
00:11:50,079 --> 00:11:51,279
because this is the vulnerable

351
00:11:51,279 --> 00:11:52,160
permissions

352
00:11:52,160 --> 00:11:54,639
so once i do that and configure it then

353
00:11:54,639 --> 00:11:56,000
i can just launch it

354
00:11:56,000 --> 00:11:57,760
and uh and off it goes so this is going

355
00:11:57,760 --> 00:11:59,519
to go to the endpoint to that endpoint

356
00:11:59,519 --> 00:12:01,360
and run this powershell thing

357
00:12:01,360 --> 00:12:03,920
and uh and then it will come back with a

358
00:12:03,920 --> 00:12:06,000
result that would just be all of the

359
00:12:06,000 --> 00:12:09,519
um oh see it's finished and

360
00:12:09,519 --> 00:12:11,760
it's uploaded four rows so just like

361
00:12:11,760 --> 00:12:13,680
velociraptor is a query language

362
00:12:13,680 --> 00:12:15,680
really queries only just return rows let

363
00:12:15,680 --> 00:12:17,440
me click on the results

364
00:12:17,440 --> 00:12:20,800
and we can see here that it's showing me

365
00:12:20,800 --> 00:12:22,880
the sam

366
00:12:22,880 --> 00:12:24,240
this is the owner administrator but

367
00:12:24,240 --> 00:12:26,000
these are the acls on it

368
00:12:26,000 --> 00:12:29,440
and you can see that this is the kind of

369
00:12:29,440 --> 00:12:32,160
problematic acl here so this machine is

370
00:12:32,160 --> 00:12:33,040
vulnerable

371
00:12:33,040 --> 00:12:36,320
to this to this uh hive nightmare

372
00:12:36,320 --> 00:12:39,680
uh zero day so so that's cool and so i

373
00:12:39,680 --> 00:12:41,360
could i could do that and i could

374
00:12:41,360 --> 00:12:42,560
and i'll show you in a minute how you

375
00:12:42,560 --> 00:12:44,639
can do a hunt over thousands of machines

376
00:12:44,639 --> 00:12:45,519
and find out

377
00:12:45,519 --> 00:12:48,399
in which ones uh of your machines are

378
00:12:48,399 --> 00:12:50,079
vulnerable in seconds

379
00:12:50,079 --> 00:12:52,000
but uh now what am i going to do about

380
00:12:52,000 --> 00:12:53,440
this i mean like okay so i know this

381
00:12:53,440 --> 00:12:54,639
machine is actually

382
00:12:54,639 --> 00:12:56,800
so this is just a big of a recap to show

383
00:12:56,800 --> 00:12:59,200
you just the general structure of this

384
00:12:59,200 --> 00:13:02,160
uh vql query and how we adjusted the

385
00:13:02,160 --> 00:13:04,240
parameters and we could see the

386
00:13:04,240 --> 00:13:06,480
uh the vulnerable thing so how do we

387
00:13:06,480 --> 00:13:07,760
what are we going to do about this this

388
00:13:07,760 --> 00:13:09,440
machine is now vulnerable so we actually

389
00:13:09,440 --> 00:13:10,880
really need to remediate it

390
00:13:10,880 --> 00:13:12,399
now i mean of course we can always log

391
00:13:12,399 --> 00:13:14,079
into that machine and use our

392
00:13:14,079 --> 00:13:15,360
remediation steps

393
00:13:15,360 --> 00:13:16,880
and in fact if we look at our references

394
00:13:16,880 --> 00:13:19,120
there are some remediation guides

395
00:13:19,120 --> 00:13:20,720
and particularly we need to run this

396
00:13:20,720 --> 00:13:22,480
command here

397
00:13:22,480 --> 00:13:25,120
but this command uh so you know we can

398
00:13:25,120 --> 00:13:26,720
do that to one or two machines but we

399
00:13:26,720 --> 00:13:28,079
want to really be able to do it

400
00:13:28,079 --> 00:13:29,519
to many machines and this is where the

401
00:13:29,519 --> 00:13:31,360
velociraptor can really help us

402
00:13:31,360 --> 00:13:34,079
because we can just change this vql to

403
00:13:34,079 --> 00:13:36,399
add that extra command here

404
00:13:36,399 --> 00:13:38,800
the extra remediation step and then and

405
00:13:38,800 --> 00:13:39,839
then we can use that

406
00:13:39,839 --> 00:13:42,399
to remediate that machine so let's let's

407
00:13:42,399 --> 00:13:44,639
give that a try

408
00:13:44,639 --> 00:13:48,240
okay so this is the remediation step

409
00:13:48,240 --> 00:13:49,519
and what we're going to do is we're

410
00:13:49,519 --> 00:13:51,920
going to go back to our

411
00:13:51,920 --> 00:13:55,040
artifact here and uh and instead of we

412
00:13:55,040 --> 00:13:56,720
can now customize that so the one that

413
00:13:56,720 --> 00:13:58,000
we copied from the

414
00:13:58,000 --> 00:14:00,639
uh from from the artifact exchange is is

415
00:14:00,639 --> 00:14:02,160
good it just tells us about it

416
00:14:02,160 --> 00:14:03,519
but we want to change it so we're going

417
00:14:03,519 --> 00:14:06,000
to just click the pencil button here to

418
00:14:06,000 --> 00:14:07,199
customize

419
00:14:07,199 --> 00:14:09,040
and and what we're going to call it is

420
00:14:09,040 --> 00:14:10,800
uh you know remediate

421
00:14:10,800 --> 00:14:12,480
for example we change the name so it's

422
00:14:12,480 --> 00:14:14,320
going to be a different artifact but

423
00:14:14,320 --> 00:14:16,560
it's very similar right like essentially

424
00:14:16,560 --> 00:14:17,360
the same thing

425
00:14:17,360 --> 00:14:19,040
except we're going to add that that

426
00:14:19,040 --> 00:14:21,040
thing here um and

427
00:14:21,040 --> 00:14:22,240
what we're going to do is we're just

428
00:14:22,240 --> 00:14:24,639
going to um

429
00:14:24,639 --> 00:14:28,000
uh out let me just check this uh

430
00:14:28,000 --> 00:14:30,079
this format what it was supposed to be

431
00:14:30,079 --> 00:14:31,600
out null okay so

432
00:14:31,600 --> 00:14:34,399
this one basically just runs it without

433
00:14:34,399 --> 00:14:35,920
uh

434
00:14:35,920 --> 00:14:37,920
without any output because we don't want

435
00:14:37,920 --> 00:14:39,360
to mess up the um

436
00:14:39,360 --> 00:14:41,360
the json that we are we are extracting

437
00:14:41,360 --> 00:14:42,880
right so so we're just gonna

438
00:14:42,880 --> 00:14:44,880
as an extra step run this extra

439
00:14:44,880 --> 00:14:46,320
remediation step and then

440
00:14:46,320 --> 00:14:47,920
we're going to look at the permission so

441
00:14:47,920 --> 00:14:49,360
hopefully that will show us the

442
00:14:49,360 --> 00:14:50,720
permissions have been fixed

443
00:14:50,720 --> 00:14:52,240
after we do this so we're going to save

444
00:14:52,240 --> 00:14:54,880
this so now this is the remediation step

445
00:14:54,880 --> 00:14:56,800
and i mean generally we want to be very

446
00:14:56,800 --> 00:14:58,480
careful we're doing remediation because

447
00:14:58,480 --> 00:15:00,079
you know we don't really want to mess up

448
00:15:00,079 --> 00:15:02,160
the uh the system right

449
00:15:02,160 --> 00:15:05,760
but let's let's have a look so uh so

450
00:15:05,760 --> 00:15:07,680
we're going to do a new collection i'm

451
00:15:07,680 --> 00:15:09,360
going to collect this new one

452
00:15:09,360 --> 00:15:11,680
this is the remediation one and we're

453
00:15:11,680 --> 00:15:12,880
just going to launch that so

454
00:15:12,880 --> 00:15:14,240
it's doing the same thing except it's

455
00:15:14,240 --> 00:15:16,079
going to do that extra powershell

456
00:15:16,079 --> 00:15:16,959
snippets

457
00:15:16,959 --> 00:15:19,040
to just clean up the machine and then

458
00:15:19,040 --> 00:15:20,000
hopefully

459
00:15:20,000 --> 00:15:22,560
uh once we once we finish uh we should

460
00:15:22,560 --> 00:15:23,519
see that

461
00:15:23,519 --> 00:15:27,440
uh that uses one uh disappears so um

462
00:15:27,440 --> 00:15:30,800
that's hopefully it worked

463
00:15:30,800 --> 00:15:34,560
let's remediate it sorry

464
00:15:34,560 --> 00:15:37,599
let's check that again

465
00:15:38,160 --> 00:15:40,880
and hopefully that that would have

466
00:15:40,880 --> 00:15:42,000
worked

467
00:15:42,000 --> 00:15:44,639
so this gives us an idea of how we uh oh

468
00:15:44,639 --> 00:15:45,920
it's still there

469
00:15:45,920 --> 00:15:48,000
maybe that remediation is not working

470
00:15:48,000 --> 00:15:50,399
too well

471
00:15:52,839 --> 00:15:55,839
uh

472
00:15:58,320 --> 00:16:01,040
it should run the remediation step maybe

473
00:16:01,040 --> 00:16:03,199
it's

474
00:16:07,199 --> 00:16:12,000
oh yeah that's right sorry

475
00:16:12,560 --> 00:16:14,399
this remediation is not for powershell

476
00:16:14,399 --> 00:16:16,320
so we're just going to do this

477
00:16:16,320 --> 00:16:19,839
windows system32

478
00:16:20,880 --> 00:16:22,800
okay so let's do the remediation one we

479
00:16:22,800 --> 00:16:24,560
can copy it again

480
00:16:24,560 --> 00:16:26,639
and launch it around the same thing but

481
00:16:26,639 --> 00:16:28,079
with the modified one

482
00:16:28,079 --> 00:16:30,240
and this time we should expect to see

483
00:16:30,240 --> 00:16:31,360
that command

484
00:16:31,360 --> 00:16:34,160
worked and yeah it returned zero rows so

485
00:16:34,160 --> 00:16:36,240
it actually worked correctly

486
00:16:36,240 --> 00:16:39,040
and there's no more results so now if we

487
00:16:39,040 --> 00:16:39,519
do that

488
00:16:39,519 --> 00:16:41,519
access control is check again so we just

489
00:16:41,519 --> 00:16:44,000
copy that same artifact collect it again

490
00:16:44,000 --> 00:16:47,440
second time uh and then it should return

491
00:16:47,440 --> 00:16:50,160
zero rows because now we have no uh

492
00:16:50,160 --> 00:16:52,079
vulnerable sam the sam is no longer

493
00:16:52,079 --> 00:16:53,600
vulnerable right so it doesn't have that

494
00:16:53,600 --> 00:16:54,240
acl

495
00:16:54,240 --> 00:16:57,120
on it because we've we've fixed it right

496
00:16:57,120 --> 00:16:57,600
so

497
00:16:57,600 --> 00:16:59,440
again we have to use the correct

498
00:16:59,440 --> 00:17:01,600
powershell version of the

499
00:17:01,600 --> 00:17:04,400
of the of the fix but once we do that we

500
00:17:04,400 --> 00:17:05,919
just edit it through partial and it just

501
00:17:05,919 --> 00:17:07,520
goes off and does it so we can now do a

502
00:17:07,520 --> 00:17:07,919
hunt

503
00:17:07,919 --> 00:17:11,359
to uh to remediate all of these machines

504
00:17:11,359 --> 00:17:13,919
okay so that's that was pretty cool um

505
00:17:13,919 --> 00:17:14,559
so let's

506
00:17:14,559 --> 00:17:16,559
have a look at the second example and

507
00:17:16,559 --> 00:17:18,640
this one is a little bit more involved

508
00:17:18,640 --> 00:17:21,520
and it it basically uses a bit of

509
00:17:21,520 --> 00:17:22,480
research

510
00:17:22,480 --> 00:17:24,319
so in this second example is about

511
00:17:24,319 --> 00:17:26,319
disabling log files

512
00:17:26,319 --> 00:17:29,360
and uh and you might not know

513
00:17:29,360 --> 00:17:32,559
that you can actually download things

514
00:17:32,559 --> 00:17:34,480
in windows using the beats downloader

515
00:17:34,480 --> 00:17:35,760
that's a pretty common

516
00:17:35,760 --> 00:17:37,360
this one's a pretty common uh

517
00:17:37,360 --> 00:17:39,200
persistence that a lot of

518
00:17:39,200 --> 00:17:42,720
a lot of people people use right so

519
00:17:42,720 --> 00:17:44,880
attackers use so here's an example of a

520
00:17:44,880 --> 00:17:46,799
command line and it uses something

521
00:17:46,799 --> 00:17:47,440
called

522
00:17:47,440 --> 00:17:50,000
the bits service right so the bit

523
00:17:50,000 --> 00:17:52,080
service is used to download the windows

524
00:17:52,080 --> 00:17:52,960
updates and

525
00:17:52,960 --> 00:17:54,880
various other updates but essentially

526
00:17:54,880 --> 00:17:56,799
it's like curl basically those often

527
00:17:56,799 --> 00:17:57,919
downloads

528
00:17:57,919 --> 00:18:00,080
stuff from the network now if you have

529
00:18:00,080 --> 00:18:01,600
something like an edr

530
00:18:01,600 --> 00:18:03,760
that watches to see you know oh is is

531
00:18:03,760 --> 00:18:05,200
there a powershell connecting out to the

532
00:18:05,200 --> 00:18:06,080
network and

533
00:18:06,080 --> 00:18:07,840
it could be suspicious so a lot of

534
00:18:07,840 --> 00:18:09,600
attackers use this beats admin

535
00:18:09,600 --> 00:18:12,720
to download their malware because uh

536
00:18:12,720 --> 00:18:14,799
it just bits admin is part of windows

537
00:18:14,799 --> 00:18:16,480
and it just it's usually whitelisted

538
00:18:16,480 --> 00:18:18,960
and signed and so it goes off and a lot

539
00:18:18,960 --> 00:18:20,400
of videos just let it go

540
00:18:20,400 --> 00:18:22,080
because they don't uh monitor what

541
00:18:22,080 --> 00:18:23,440
exactly it's downloading so you can

542
00:18:23,440 --> 00:18:24,720
actually use it to download

543
00:18:24,720 --> 00:18:26,640
anything including you know any any

544
00:18:26,640 --> 00:18:28,400
powershell or whatever you want

545
00:18:28,400 --> 00:18:31,679
as as a a download cradle

546
00:18:31,679 --> 00:18:35,200
so let me just uh try to uh to do this

547
00:18:35,200 --> 00:18:40,559
as an example so we'll just open up a

548
00:18:40,840 --> 00:18:42,080
shell

549
00:18:42,080 --> 00:18:44,080
and what we're going to do is we're just

550
00:18:44,080 --> 00:18:45,919
going to download uh

551
00:18:45,919 --> 00:18:48,960
let me just put it in mic test

552
00:18:48,960 --> 00:18:51,120
okay and if i just run this command then

553
00:18:51,120 --> 00:18:52,240
it's going to go and it's going to

554
00:18:52,240 --> 00:18:53,280
create

555
00:18:53,280 --> 00:18:55,679
a bits job and goes off and downloads

556
00:18:55,679 --> 00:18:56,559
this

557
00:18:56,559 --> 00:18:59,600
google.com into uh

558
00:18:59,600 --> 00:19:02,880
see users like test

559
00:19:02,880 --> 00:19:06,640
dot oops dot ps1 right so that

560
00:19:06,640 --> 00:19:08,160
that is what it went off and downloaded

561
00:19:08,160 --> 00:19:09,760
that now so

562
00:19:09,760 --> 00:19:11,120
this is actually kind of suspicious

563
00:19:11,120 --> 00:19:12,320
thing and a lot of people know about

564
00:19:12,320 --> 00:19:12,880
this so

565
00:19:12,880 --> 00:19:15,600
usually you actually can monitor for

566
00:19:15,600 --> 00:19:16,240
that

567
00:19:16,240 --> 00:19:18,400
using the event viewer so if you look at

568
00:19:18,400 --> 00:19:19,760
the event viewer uh

569
00:19:19,760 --> 00:19:22,960
then often you will see an

570
00:19:22,960 --> 00:19:26,080
event and the event is in windows beats

571
00:19:26,080 --> 00:19:28,000
clients operational right so you see the

572
00:19:28,000 --> 00:19:28,640
event

573
00:19:28,640 --> 00:19:30,320
and this is pretty suspicious a lot of

574
00:19:30,320 --> 00:19:32,000
people have like event forwarding

575
00:19:32,000 --> 00:19:35,200
and they forward that to their theme and

576
00:19:35,200 --> 00:19:36,559
you know and then there's alerts and all

577
00:19:36,559 --> 00:19:37,919
this kind of stuff and it escalates

578
00:19:37,919 --> 00:19:39,200
right because this is actually pretty

579
00:19:39,200 --> 00:19:40,160
suspicious

580
00:19:40,160 --> 00:19:42,240
when you look at uh at this event you

581
00:19:42,240 --> 00:19:43,600
can actually see

582
00:19:43,600 --> 00:19:46,400
who downloaded it oops the username and

583
00:19:46,400 --> 00:19:47,440
you can also see

584
00:19:47,440 --> 00:19:49,679
um in one of the other events where it

585
00:19:49,679 --> 00:19:51,200
was downloaded from

586
00:19:51,200 --> 00:19:53,760
and who created it so you can see this

587
00:19:53,760 --> 00:19:55,200
is the url

588
00:19:55,200 --> 00:19:56,960
that we downloaded from this is what

589
00:19:56,960 --> 00:19:58,720
they downloaded and that would

590
00:19:58,720 --> 00:20:00,320
set off a lot of flags with powershell

591
00:20:00,320 --> 00:20:01,919
is coming from the internet so but

592
00:20:01,919 --> 00:20:03,120
i'm not going to talk to you about this

593
00:20:03,120 --> 00:20:04,640
bits thing because it's well known what

594
00:20:04,640 --> 00:20:06,559
i am going to talk to you about today

595
00:20:06,559 --> 00:20:08,640
is this very interesting uh thing that a

596
00:20:08,640 --> 00:20:10,000
lot of people don't realize is you could

597
00:20:10,000 --> 00:20:11,280
just turn the logs off

598
00:20:11,280 --> 00:20:13,360
so if i right click on this and if i

599
00:20:13,360 --> 00:20:14,320
just

600
00:20:14,320 --> 00:20:18,240
disable the log like so very easy

601
00:20:18,240 --> 00:20:20,640
and if i just clear this log i'm gonna

602
00:20:20,640 --> 00:20:22,640
i'm gonna clear this log

603
00:20:22,640 --> 00:20:25,919
and do it again and show you that

604
00:20:25,919 --> 00:20:28,799
now the log is not logging right because

605
00:20:28,799 --> 00:20:30,240
the log is disabled

606
00:20:30,240 --> 00:20:33,440
so if i had an event uh forwarding type

607
00:20:33,440 --> 00:20:35,360
seem that i'm just gonna you know

608
00:20:35,360 --> 00:20:36,880
forward events from this then i'm just

609
00:20:36,880 --> 00:20:38,000
now completely blind

610
00:20:38,000 --> 00:20:39,520
and all it takes is you just right click

611
00:20:39,520 --> 00:20:41,919
on this thing and you know just disables

612
00:20:41,919 --> 00:20:43,679
the log it's not a big deal right

613
00:20:43,679 --> 00:20:45,760
and so you know if attackers about to do

614
00:20:45,760 --> 00:20:47,200
this they're just you know they can do

615
00:20:47,200 --> 00:20:49,039
that they can disable the login off we

616
00:20:49,039 --> 00:20:49,840
go

617
00:20:49,840 --> 00:20:51,919
so what we would like to know as

618
00:20:51,919 --> 00:20:53,520
defenders is like

619
00:20:53,520 --> 00:20:55,919
has anyone done this has anyone disabled

620
00:20:55,919 --> 00:20:57,280
the log what was the baseline what

621
00:20:57,280 --> 00:20:58,080
should it be

622
00:20:58,080 --> 00:21:00,240
the baseline so first the first step is

623
00:21:00,240 --> 00:21:01,120
figuring out

624
00:21:01,120 --> 00:21:04,000
you know what is going on when i disable

625
00:21:04,000 --> 00:21:04,799
this log

626
00:21:04,799 --> 00:21:07,520
and when i disable this log um what

627
00:21:07,520 --> 00:21:08,480
happens is

628
00:21:08,480 --> 00:21:10,720
that so let's see if i don't know what

629
00:21:10,720 --> 00:21:12,480
it is so usually i would just

630
00:21:12,480 --> 00:21:15,600
uh run proc mode so i have pokemon over

631
00:21:15,600 --> 00:21:16,559
here

632
00:21:16,559 --> 00:21:19,840
and i would start it up and uh

633
00:21:19,840 --> 00:21:23,120
and then just you know

634
00:21:23,120 --> 00:21:26,159
do this disable log business maybe i'll

635
00:21:26,159 --> 00:21:27,679
just re-enable it again now

636
00:21:27,679 --> 00:21:30,880
enable and then i can stop

637
00:21:30,880 --> 00:21:34,000
procmon stop capturing

638
00:21:34,000 --> 00:21:36,240
and i can add a filter i've already

639
00:21:36,240 --> 00:21:38,799
added a filter here just for this talk

640
00:21:38,799 --> 00:21:41,520
the filter is looking for an operation

641
00:21:41,520 --> 00:21:42,480
which is a reg

642
00:21:42,480 --> 00:21:44,640
set value so basically when i change

643
00:21:44,640 --> 00:21:46,320
this in ui something is going to set a

644
00:21:46,320 --> 00:21:46,799
value

645
00:21:46,799 --> 00:21:48,720
somewhere in the registry and i don't

646
00:21:48,720 --> 00:21:49,840
know exactly where

647
00:21:49,840 --> 00:21:52,320
so i'm just going to see a filter for

648
00:21:52,320 --> 00:21:53,039
those

649
00:21:53,039 --> 00:21:54,480
and you can see it very quickly that

650
00:21:54,480 --> 00:21:56,480
when i turned the

651
00:21:56,480 --> 00:21:58,720
event log on or off disabled it then

652
00:21:58,720 --> 00:22:00,000
you'll see a particular key

653
00:22:00,000 --> 00:22:03,520
uh somewhere here uh which

654
00:22:03,520 --> 00:22:06,320
corresponds to that that setting uh

655
00:22:06,320 --> 00:22:07,200
where is it

656
00:22:07,200 --> 00:22:10,400
here this one right so this event

657
00:22:10,400 --> 00:22:12,400
is a windows current version we need vt

658
00:22:12,400 --> 00:22:14,080
channels microsoft bits clients so this

659
00:22:14,080 --> 00:22:16,000
is a typical example of

660
00:22:16,000 --> 00:22:17,760
somehow the attacker is misconfiguring

661
00:22:17,760 --> 00:22:20,080
this system and we want to know

662
00:22:20,080 --> 00:22:21,840
uh what's going on right so we want to

663
00:22:21,840 --> 00:22:23,520
write an artifact here that just detects

664
00:22:23,520 --> 00:22:24,559
this across

665
00:22:24,559 --> 00:22:27,120
across our system so let's uh let's have

666
00:22:27,120 --> 00:22:28,720
a look at this example so this is the

667
00:22:28,720 --> 00:22:30,880
example i have here

668
00:22:30,880 --> 00:22:34,080
um so we did this we looked through uh

669
00:22:34,080 --> 00:22:37,039
we checked about the disabling we did

670
00:22:37,039 --> 00:22:37,760
procmon

671
00:22:37,760 --> 00:22:41,440
we checked this value and in the end

672
00:22:41,440 --> 00:22:43,520
we can write an artifact to check for

673
00:22:43,520 --> 00:22:44,640
that key that

674
00:22:44,640 --> 00:22:46,960
specific registry key and again in this

675
00:22:46,960 --> 00:22:49,440
talk we don't have a lot of time to

676
00:22:49,440 --> 00:22:54,559
to be able to see which uh

677
00:22:54,559 --> 00:22:57,440
to work out how to write this this query

678
00:22:57,440 --> 00:22:58,960
so i'm just going to paste it

679
00:22:58,960 --> 00:23:01,360
so we can actually run this query as it

680
00:23:01,360 --> 00:23:02,080
is

681
00:23:02,080 --> 00:23:05,200
uh and create an artifact from it but

682
00:23:05,200 --> 00:23:06,400
let me just show you

683
00:23:06,400 --> 00:23:08,240
what that query looks like we're just

684
00:23:08,240 --> 00:23:10,720
going to run the query in the ui

685
00:23:10,720 --> 00:23:13,280
so in the ui uh we have a thing called a

686
00:23:13,280 --> 00:23:15,360
notebook which we can create

687
00:23:15,360 --> 00:23:19,840
a new new notebook here test

688
00:23:19,840 --> 00:23:21,919
and in this in this notebook we can

689
00:23:21,919 --> 00:23:24,559
write any vql that we want we can run

690
00:23:24,559 --> 00:23:26,080
different pql so

691
00:23:26,080 --> 00:23:29,280
uh let me create a new cell

692
00:23:29,280 --> 00:23:32,960
pql cell and paste again i'm not going

693
00:23:32,960 --> 00:23:34,320
to show you how to

694
00:23:34,320 --> 00:23:35,840
actually write this in this talk because

695
00:23:35,840 --> 00:23:37,600
it's not enough time but you can see

696
00:23:37,600 --> 00:23:38,000
that

697
00:23:38,000 --> 00:23:39,280
here's the registry key that we are

698
00:23:39,280 --> 00:23:41,120
looking for there's a glob here so

699
00:23:41,120 --> 00:23:42,000
there's a star

700
00:23:42,000 --> 00:23:44,240
so we're looking at all the events uh

701
00:23:44,240 --> 00:23:45,039
all the

702
00:23:45,039 --> 00:23:46,640
logs and then looking to see whether

703
00:23:46,640 --> 00:23:48,080
they're enabled or not so we can run

704
00:23:48,080 --> 00:23:49,200
this query

705
00:23:49,200 --> 00:23:51,039
and what it will do is it will basically

706
00:23:51,039 --> 00:23:53,279
show us which query is enabled and which

707
00:23:53,279 --> 00:23:54,559
query is disabled

708
00:23:54,559 --> 00:23:55,919
right so we can actually write this

709
00:23:55,919 --> 00:23:58,240
artifact using this query

710
00:23:58,240 --> 00:24:00,480
to know which which event log is enabled

711
00:24:00,480 --> 00:24:02,880
which event log is disabled

712
00:24:02,880 --> 00:24:06,559
right so so let's let's uh let's do that

713
00:24:06,559 --> 00:24:08,799
so we'll write an artifact so this time

714
00:24:08,799 --> 00:24:10,880
we're going to create an artifact out of

715
00:24:10,880 --> 00:24:12,080
this query

716
00:24:12,080 --> 00:24:14,960
so just like we did before but this time

717
00:24:14,960 --> 00:24:16,640
we're going to create a new artifact so

718
00:24:16,640 --> 00:24:17,120
we're going to go

719
00:24:17,120 --> 00:24:20,000
to the artifact viewing the artifact

720
00:24:20,000 --> 00:24:20,960
viewer

721
00:24:20,960 --> 00:24:22,559
and we're going to add a new artifact

722
00:24:22,559 --> 00:24:24,320
but remember before we just copied it

723
00:24:24,320 --> 00:24:25,919
from the artifact exchange

724
00:24:25,919 --> 00:24:27,279
but now we're just going to write our

725
00:24:27,279 --> 00:24:29,120
own artifacts so

726
00:24:29,120 --> 00:24:31,600
we just need to give it a name so it's

727
00:24:31,600 --> 00:24:33,679
going to be a windows

728
00:24:33,679 --> 00:24:38,000
event log event log enabled

729
00:24:38,000 --> 00:24:40,960
i don't know we just

730
00:24:41,120 --> 00:24:44,720
give it a name description and so forth

731
00:24:44,720 --> 00:24:47,279
but really the most important thing is

732
00:24:47,279 --> 00:24:48,159
to paste

733
00:24:48,159 --> 00:24:51,520
our query here oops and

734
00:24:51,520 --> 00:24:53,120
because this is yaml we have to kind of

735
00:24:53,120 --> 00:24:54,720
like tab it over a bit and you see as

736
00:24:54,720 --> 00:24:56,240
soon as i do that the the syntax

737
00:24:56,240 --> 00:24:57,679
highlighting helps me

738
00:24:57,679 --> 00:24:59,600
here i have the preconditions so that's

739
00:24:59,600 --> 00:25:01,039
telling me that it's only

740
00:25:01,039 --> 00:25:03,120
this artifact is only running on windows

741
00:25:03,120 --> 00:25:04,960
so i'm just going to delete that

742
00:25:04,960 --> 00:25:07,120
and i don't really want any parameters

743
00:25:07,120 --> 00:25:08,559
here so

744
00:25:08,559 --> 00:25:11,120
i'm just going to just do that so that's

745
00:25:11,120 --> 00:25:12,880
that's my new artifact i just create

746
00:25:12,880 --> 00:25:13,679
that

747
00:25:13,679 --> 00:25:16,559
and there we go we have a new custom

748
00:25:16,559 --> 00:25:18,400
windows enabled event log enables

749
00:25:18,400 --> 00:25:20,480
artifact so now we can simply collect it

750
00:25:20,480 --> 00:25:23,360
from our endpoints right so we can

751
00:25:23,360 --> 00:25:25,520
simply go back to our endpoint

752
00:25:25,520 --> 00:25:28,799
collect that artifact just as we did

753
00:25:28,799 --> 00:25:29,279
before

754
00:25:29,279 --> 00:25:30,559
remember there's no parameters this time

755
00:25:30,559 --> 00:25:32,799
so we just hit launch and off it goes

756
00:25:32,799 --> 00:25:34,080
and that's going to tell us basically

757
00:25:34,080 --> 00:25:36,000
which um

758
00:25:36,000 --> 00:25:38,799
which uh clients are which logs are

759
00:25:38,799 --> 00:25:40,559
enabled or disabled

760
00:25:40,559 --> 00:25:43,039
here we go so the same thing so so we've

761
00:25:43,039 --> 00:25:44,000
gone from

762
00:25:44,000 --> 00:25:46,960
an observation of uh something weeds

763
00:25:46,960 --> 00:25:47,679
going on

764
00:25:47,679 --> 00:25:50,559
how do we hunt for it and then we create

765
00:25:50,559 --> 00:25:50,960
uh

766
00:25:50,960 --> 00:25:52,799
an artifact for it so this is the the

767
00:25:52,799 --> 00:25:55,440
standard word workflow in velociraptor

768
00:25:55,440 --> 00:25:57,120
it's the hunting workflow so we start

769
00:25:57,120 --> 00:25:58,559
off with an idea

770
00:25:58,559 --> 00:26:01,200
we explore the idea in our vql in our

771
00:26:01,200 --> 00:26:02,880
queries once we come up with a query

772
00:26:02,880 --> 00:26:03,840
that we like

773
00:26:03,840 --> 00:26:06,559
then we simply convert it to an artifact

774
00:26:06,559 --> 00:26:08,159
and then we can go hunting this is the

775
00:26:08,159 --> 00:26:10,000
part i wanted to show you right now is

776
00:26:10,000 --> 00:26:12,000
how we can go hunting for this

777
00:26:12,000 --> 00:26:15,440
so what is normal and if you look at

778
00:26:15,440 --> 00:26:16,960
the event log you'll see that a lot of

779
00:26:16,960 --> 00:26:18,799
them are enabled a lot of them disabled

780
00:26:18,799 --> 00:26:20,159
and you don't know which one's supposed

781
00:26:20,159 --> 00:26:21,919
to be enabled that's not enabled which

782
00:26:21,919 --> 00:26:23,440
one's supposed to be disabled that's not

783
00:26:23,440 --> 00:26:23,919
a name

784
00:26:23,919 --> 00:26:26,080
disabled right so you you don't you what

785
00:26:26,080 --> 00:26:27,440
you want to know is whether one of them

786
00:26:27,440 --> 00:26:28,559
has been changed

787
00:26:28,559 --> 00:26:30,320
but you don't know what's normal so if

788
00:26:30,320 --> 00:26:31,360
you don't know what's normal that's

789
00:26:31,360 --> 00:26:33,440
called baselining where we need to guess

790
00:26:33,440 --> 00:26:35,679
get a baseline of what's going on and in

791
00:26:35,679 --> 00:26:36,720
order to do that

792
00:26:36,720 --> 00:26:38,240
what we want to do is we want to collect

793
00:26:38,240 --> 00:26:39,919
this information of all the logs that

794
00:26:39,919 --> 00:26:41,279
are enabled all the logs that are

795
00:26:41,279 --> 00:26:42,720
currently disabled

796
00:26:42,720 --> 00:26:44,480
from all the hosts so we want to do a

797
00:26:44,480 --> 00:26:46,799
hunt a hunt is basically when we go

798
00:26:46,799 --> 00:26:47,200
through

799
00:26:47,200 --> 00:26:49,200
and we collect that same artifact this

800
00:26:49,200 --> 00:26:52,480
one across the entire network

801
00:26:52,480 --> 00:26:54,640
at once so at the moment we've just

802
00:26:54,640 --> 00:26:55,679
collected it from this

803
00:26:55,679 --> 00:26:57,840
one machine here the mic machine but we

804
00:26:57,840 --> 00:27:01,120
want to do it across the entire network

805
00:27:01,120 --> 00:27:03,919
so let's just for the sake of our

806
00:27:03,919 --> 00:27:05,200
argument

807
00:27:05,200 --> 00:27:07,279
let's have a look at this look so this

808
00:27:07,279 --> 00:27:08,400
log here

809
00:27:08,400 --> 00:27:11,039
is enabled right so that's enabled let

810
00:27:11,039 --> 00:27:11,440
me

811
00:27:11,440 --> 00:27:14,480
uh just quickly check my other machine

812
00:27:14,480 --> 00:27:15,600
here

813
00:27:15,600 --> 00:27:17,600
and this is my other machine this is the

814
00:27:17,600 --> 00:27:18,960
mics machine and i'm going to disable

815
00:27:18,960 --> 00:27:20,080
the log just on the

816
00:27:20,080 --> 00:27:21,919
one machine so i'm going to see like

817
00:27:21,919 --> 00:27:23,520
this is going to be the one that stands

818
00:27:23,520 --> 00:27:24,799
out right

819
00:27:24,799 --> 00:27:27,360
and let's go and do a hunt and see which

820
00:27:27,360 --> 00:27:27,919
one

821
00:27:27,919 --> 00:27:29,919
is disabled a lot of machines are

822
00:27:29,919 --> 00:27:31,840
enabled this if this log is enabled by

823
00:27:31,840 --> 00:27:33,440
default but we're just going to disable

824
00:27:33,440 --> 00:27:34,480
it so we're going to go to the hunt

825
00:27:34,480 --> 00:27:36,720
manager this is the hunt manager

826
00:27:36,720 --> 00:27:38,080
and we're just going to create a new

827
00:27:38,080 --> 00:27:39,760
hunt so we're going to add

828
00:27:39,760 --> 00:27:41,200
another artifact we can give it a

829
00:27:41,200 --> 00:27:43,440
description so you know events

830
00:27:43,440 --> 00:27:46,960
logs select the artifact that we want to

831
00:27:46,960 --> 00:27:48,640
collect so it's just this one whether

832
00:27:48,640 --> 00:27:50,320
it's enabled or disabled

833
00:27:50,320 --> 00:27:52,320
and literally just launch it in this

834
00:27:52,320 --> 00:27:53,600
case because there's no parameters it

835
00:27:53,600 --> 00:27:54,559
just goes ahead

836
00:27:54,559 --> 00:27:57,600
when we create the hunt it's paused so

837
00:27:57,600 --> 00:27:59,360
we're just going to launch

838
00:27:59,360 --> 00:28:02,240
start it run it and you'll see that as

839
00:28:02,240 --> 00:28:03,760
soon as that happens

840
00:28:03,760 --> 00:28:06,080
the endpoints are starting to get

841
00:28:06,080 --> 00:28:07,039
scheduled

842
00:28:07,039 --> 00:28:09,039
and they're starting to that number will

843
00:28:09,039 --> 00:28:10,559
increase as they're getting scheduled

844
00:28:10,559 --> 00:28:12,080
each one is going to go off and check

845
00:28:12,080 --> 00:28:14,640
its event logs and send back the results

846
00:28:14,640 --> 00:28:16,320
and then and then it will be finished

847
00:28:16,320 --> 00:28:17,679
right so it's going to be scheduled and

848
00:28:17,679 --> 00:28:18,720
then finished

849
00:28:18,720 --> 00:28:20,480
and and that goes off and this is

850
00:28:20,480 --> 00:28:22,399
basically how we go off and hunt through

851
00:28:22,399 --> 00:28:24,320
all our machines right so once this is

852
00:28:24,320 --> 00:28:24,799
happening

853
00:28:24,799 --> 00:28:26,159
this you know we don't really even need

854
00:28:26,159 --> 00:28:27,919
to wait for it it's going to be

855
00:28:27,919 --> 00:28:30,720
uh we have 2000 machines on this on this

856
00:28:30,720 --> 00:28:31,120
uh

857
00:28:31,120 --> 00:28:32,480
system so it's going to take a couple of

858
00:28:32,480 --> 00:28:34,640
minutes but we can immediately start

859
00:28:34,640 --> 00:28:37,200
uh and analyze the results so this is

860
00:28:37,200 --> 00:28:37,679
the

861
00:28:37,679 --> 00:28:40,399
processing step in the notebook and the

862
00:28:40,399 --> 00:28:41,279
notebook is

863
00:28:41,279 --> 00:28:43,440
where we can write different vql and we

864
00:28:43,440 --> 00:28:45,120
can analyze the results so you see for

865
00:28:45,120 --> 00:28:46,080
example this is

866
00:28:46,080 --> 00:28:47,679
the results that came back from this

867
00:28:47,679 --> 00:28:49,360
machine 87

868
00:28:49,360 --> 00:28:51,760
and you know it has some zeros and ones

869
00:28:51,760 --> 00:28:53,679
but we don't really know which one is

870
00:28:53,679 --> 00:28:56,320
um which one is valid or not so we want

871
00:28:56,320 --> 00:28:58,559
to basically just do a group by we want

872
00:28:58,559 --> 00:28:59,760
to do a stacking

873
00:28:59,760 --> 00:29:02,399
we want to stack all of our results and

874
00:29:02,399 --> 00:29:04,480
then see which ones are different

875
00:29:04,480 --> 00:29:06,880
so um so what we really want to do is we

876
00:29:06,880 --> 00:29:09,679
want to do a group by

877
00:29:09,679 --> 00:29:12,880
uh and then we want to we want to count

878
00:29:12,880 --> 00:29:18,080
right count as count

879
00:29:18,080 --> 00:29:21,039
and then we have the log all the

880
00:29:21,039 --> 00:29:22,399
different log

881
00:29:22,399 --> 00:29:26,960
and the value right um and

882
00:29:26,960 --> 00:29:30,080
the hostname uh

883
00:29:30,080 --> 00:29:32,640
that's the hostname here and then what

884
00:29:32,640 --> 00:29:34,159
we want to do is we want to group by the

885
00:29:34,159 --> 00:29:35,279
combination

886
00:29:35,279 --> 00:29:38,399
of log and value right so

887
00:29:38,399 --> 00:29:40,320
group by basically counts together all

888
00:29:40,320 --> 00:29:42,640
the unique ones of the same value

889
00:29:42,640 --> 00:29:44,640
uh combination so for example this bit

890
00:29:44,640 --> 00:29:46,399
client operational is one

891
00:29:46,399 --> 00:29:48,240
on one machine and then it's zero on

892
00:29:48,240 --> 00:29:50,080
another machine that's a different group

893
00:29:50,080 --> 00:29:52,720
so we wanna just do that right so um so

894
00:29:52,720 --> 00:29:54,159
then when we do that so

895
00:29:54,159 --> 00:29:56,559
uh it's gonna go off and and essentially

896
00:29:56,559 --> 00:29:58,000
just count them

897
00:29:58,000 --> 00:30:00,159
and this way we will be able to see

898
00:30:00,159 --> 00:30:01,520
which ones are common

899
00:30:01,520 --> 00:30:04,159
and which ones are not uh not common

900
00:30:04,159 --> 00:30:05,840
because they'll sort of stand out

901
00:30:05,840 --> 00:30:07,600
this is a pretty classic hunting

902
00:30:07,600 --> 00:30:08,880
technique called you know

903
00:30:08,880 --> 00:30:11,520
stacking where we can just count just

904
00:30:11,520 --> 00:30:12,880
counting different things and we can see

905
00:30:12,880 --> 00:30:13,440
that

906
00:30:13,440 --> 00:30:15,919
some machines are a bit different to uh

907
00:30:15,919 --> 00:30:16,720
other machines

908
00:30:16,720 --> 00:30:18,399
it's going to take a couple of uh

909
00:30:18,399 --> 00:30:19,679
seconds while it's doing that let me

910
00:30:19,679 --> 00:30:20,000
just

911
00:30:20,000 --> 00:30:22,720
jump onto the presentation to just see

912
00:30:22,720 --> 00:30:23,760
what

913
00:30:23,760 --> 00:30:26,080
uh we're doing here so again what we've

914
00:30:26,080 --> 00:30:27,679
done is we we've done a stacking

915
00:30:27,679 --> 00:30:29,760
exercise across all the groups

916
00:30:29,760 --> 00:30:31,440
and we counted all of them oh we should

917
00:30:31,440 --> 00:30:33,200
have also ordered by a little bit

918
00:30:33,200 --> 00:30:36,320
but maybe we'll find when we order by we

919
00:30:36,320 --> 00:30:37,840
can see the counts uh

920
00:30:37,840 --> 00:30:39,440
you know in order so we can see the ones

921
00:30:39,440 --> 00:30:41,600
that are a bit different

922
00:30:41,600 --> 00:30:43,919
um so that's going to take a couple of

923
00:30:43,919 --> 00:30:45,120
seconds while it's

924
00:30:45,120 --> 00:30:47,600
collecting the data from the endpoints

925
00:30:47,600 --> 00:30:49,039
but typically this is what you see

926
00:30:49,039 --> 00:30:50,720
you'll see that that one machine that

927
00:30:50,720 --> 00:30:51,039
has

928
00:30:51,039 --> 00:30:53,840
it disabled so the value is zero it

929
00:30:53,840 --> 00:30:54,799
stands out right

930
00:30:54,799 --> 00:30:57,360
and then the other ones are all the same

931
00:30:57,360 --> 00:30:59,519
so that's more or less the baseline

932
00:30:59,519 --> 00:31:01,760
and then that one is the one that stands

933
00:31:01,760 --> 00:31:02,799
out

934
00:31:02,799 --> 00:31:06,159
all right um so uh

935
00:31:06,159 --> 00:31:07,919
we only have a couple of extra seconds

936
00:31:07,919 --> 00:31:09,279
so i'm not going to show you how to do

937
00:31:09,279 --> 00:31:11,120
this but i'm just going to tell you

938
00:31:11,120 --> 00:31:14,559
uh how we can turn that artifact into

939
00:31:14,559 --> 00:31:17,200
a detection rule and uh this is a little

940
00:31:17,200 --> 00:31:17,600
bit

941
00:31:17,600 --> 00:31:20,799
uh of a more advanced use case

942
00:31:20,799 --> 00:31:23,120
i would say uh and in vql you can

943
00:31:23,120 --> 00:31:24,720
actually create event queries so you can

944
00:31:24,720 --> 00:31:26,480
actually write monitoring rules

945
00:31:26,480 --> 00:31:29,200
that use the query to detect when

946
00:31:29,200 --> 00:31:30,320
something happens

947
00:31:30,320 --> 00:31:32,480
in the future and this is kind of what

948
00:31:32,480 --> 00:31:33,600
it looks like in

949
00:31:33,600 --> 00:31:35,200
on the end point we have the query

950
00:31:35,200 --> 00:31:36,720
running and

951
00:31:36,720 --> 00:31:38,399
it basically ends up sending partial

952
00:31:38,399 --> 00:31:40,159
results as as

953
00:31:40,159 --> 00:31:42,640
as as it happens i'm just going to skip

954
00:31:42,640 --> 00:31:43,840
to the

955
00:31:43,840 --> 00:31:46,720
architecture so we can see that event

956
00:31:46,720 --> 00:31:48,640
queries are running on the client

957
00:31:48,640 --> 00:31:50,960
and then they're getting buffered and

958
00:31:50,960 --> 00:31:52,000
they're sent off

959
00:31:52,000 --> 00:31:53,919
to the server when the when the client

960
00:31:53,919 --> 00:31:55,760
is back online so we can write a query

961
00:31:55,760 --> 00:31:58,720
that simply uh you know detects whenever

962
00:31:58,720 --> 00:32:00,880
this log file is changing

963
00:32:00,880 --> 00:32:04,399
and this is an example uh of this is

964
00:32:04,399 --> 00:32:06,720
an advanced over the typical you know

965
00:32:06,720 --> 00:32:07,760
ultra loop

966
00:32:07,760 --> 00:32:11,679
in in a normal edr type sim system

967
00:32:11,679 --> 00:32:13,200
you you have basically a whole bunch of

968
00:32:13,200 --> 00:32:14,960
events that are going into the scene

969
00:32:14,960 --> 00:32:17,120
and then we have escalation and then it

970
00:32:17,120 --> 00:32:18,000
goes back

971
00:32:18,000 --> 00:32:19,519
through and and then the user and

972
00:32:19,519 --> 00:32:21,440
operator actually goes back to collect

973
00:32:21,440 --> 00:32:22,559
extra information

974
00:32:22,559 --> 00:32:24,720
but we can actually do that on the on

975
00:32:24,720 --> 00:32:26,799
the endpoint by simply adding

976
00:32:26,799 --> 00:32:30,000
a query an event query that runs through

977
00:32:30,000 --> 00:32:31,519
it so to give you an example in this

978
00:32:31,519 --> 00:32:32,559
case

979
00:32:32,559 --> 00:32:33,919
we have i'm just going to skip through

980
00:32:33,919 --> 00:32:35,840
because we are out of time

981
00:32:35,840 --> 00:32:38,559
we can add this particular event

982
00:32:38,559 --> 00:32:39,840
artifact to

983
00:32:39,840 --> 00:32:42,799
to velociraptor that will simply check

984
00:32:42,799 --> 00:32:43,760
uh whether

985
00:32:43,760 --> 00:32:46,080
the event logs are enabled or disabled

986
00:32:46,080 --> 00:32:47,039
periodically

987
00:32:47,039 --> 00:32:49,519
and when they become disabled uh then

988
00:32:49,519 --> 00:32:51,120
there will be a difference

989
00:32:51,120 --> 00:32:53,519
and the and the event will and the query

990
00:32:53,519 --> 00:32:55,279
will basically report a row that would

991
00:32:55,279 --> 00:32:56,080
be different

992
00:32:56,080 --> 00:32:59,519
so an event log has been disabled um

993
00:32:59,519 --> 00:33:01,440
so i think we're out of time to actually

994
00:33:01,440 --> 00:33:03,039
demonstrate that particular

995
00:33:03,039 --> 00:33:06,240
um uh one so we're just going to

996
00:33:06,240 --> 00:33:08,960
uh just show you a screenshot when that

997
00:33:08,960 --> 00:33:09,519
happens

998
00:33:09,519 --> 00:33:11,200
um basically once we install that

999
00:33:11,200 --> 00:33:13,120
artifact here uh

1000
00:33:13,120 --> 00:33:15,600
then we will see whenever someone added

1001
00:33:15,600 --> 00:33:16,559
or removed

1002
00:33:16,559 --> 00:33:20,080
a uh an entry from the event logs

1003
00:33:20,080 --> 00:33:21,760
uh from from the registry key so

1004
00:33:21,760 --> 00:33:23,200
whenever the registry key changes we

1005
00:33:23,200 --> 00:33:24,000
will see

1006
00:33:24,000 --> 00:33:26,960
on the server and event raised and so

1007
00:33:26,960 --> 00:33:28,559
that's how we can turn vql into a

1008
00:33:28,559 --> 00:33:30,159
monitoring type system

1009
00:33:30,159 --> 00:33:32,240
so we didn't cover a lot of stuff it was

1010
00:33:32,240 --> 00:33:33,600
really quick uh

1011
00:33:33,600 --> 00:33:35,840
a really quick talk so i do encourage

1012
00:33:35,840 --> 00:33:37,200
you to go and have a look at all the

1013
00:33:37,200 --> 00:33:39,440
resources that velociraptor has

1014
00:33:39,440 --> 00:33:40,960
so there's many many things that we

1015
00:33:40,960 --> 00:33:42,720
didn't cover

1016
00:33:42,720 --> 00:33:45,440
and you know we only just introduced it

1017
00:33:45,440 --> 00:33:46,880
so hopefully this will give you a bit of

1018
00:33:46,880 --> 00:33:49,039
a taste to see how you can scale up

1019
00:33:49,039 --> 00:33:52,559
dfir and be able to uh to uh

1020
00:33:52,559 --> 00:33:54,159
collect information from thousands of

1021
00:33:54,159 --> 00:33:56,240
machines in seconds uh and then in the

1022
00:33:56,240 --> 00:33:56,960
last

1023
00:33:56,960 --> 00:33:59,760
slide here i have uh a whole bunch of

1024
00:33:59,760 --> 00:34:01,120
references here

1025
00:34:01,120 --> 00:34:04,159
but really docs.velociraptor.app

1026
00:34:04,159 --> 00:34:07,120
is a website it's uh if you go there you

1027
00:34:07,120 --> 00:34:07,600
know there's

1028
00:34:07,600 --> 00:34:09,119
lots of resources here we've got

1029
00:34:09,119 --> 00:34:10,960
training packages announcement uh

1030
00:34:10,960 --> 00:34:12,239
documentation

1031
00:34:12,239 --> 00:34:14,000
and the artifact exchange you could use

1032
00:34:14,000 --> 00:34:15,440
that to

1033
00:34:15,440 --> 00:34:17,440
submit to it and so on it's an open

1034
00:34:17,440 --> 00:34:18,960
source project

1035
00:34:18,960 --> 00:34:20,719
found on github you can visit us on

1036
00:34:20,719 --> 00:34:22,079
github file issues

1037
00:34:22,079 --> 00:34:25,679
and also uh we are always on discord so

1038
00:34:25,679 --> 00:34:28,480
you know help help out any questions uh

1039
00:34:28,480 --> 00:34:29,918
or anything like that

1040
00:34:29,918 --> 00:34:32,879
so uh thanks for thanks for your time um

1041
00:34:32,879 --> 00:34:34,000
and uh and and

1042
00:34:34,000 --> 00:34:38,480
have a good conference thank you

