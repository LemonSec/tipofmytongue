1
00:00:10,320 --> 00:00:11,759
hi this talk will be about

2
00:00:11,759 --> 00:00:13,440
what machine learning can and can't do

3
00:00:13,440 --> 00:00:15,519
for security

4
00:00:15,519 --> 00:00:18,720
so my name is my name is wendy edwards

5
00:00:18,720 --> 00:00:20,400
let me start by introducing myself i'm

6
00:00:20,400 --> 00:00:22,320
from urbana illinois which is about 200

7
00:00:22,320 --> 00:00:24,160
kilometers south of chicago

8
00:00:24,160 --> 00:00:26,320
it is probably most famous as the

9
00:00:26,320 --> 00:00:30,320
birthplace of hail 9000 in 2001.

10
00:00:30,320 --> 00:00:32,238
so i work in my day job as a software

11
00:00:32,238 --> 00:00:34,399
developer i'm part of the nasa data

12
00:00:34,399 --> 00:00:36,079
knots which is what gave me an interest

13
00:00:36,079 --> 00:00:38,719
in data science and machine learning and

14
00:00:38,719 --> 00:00:41,280
i also got to participate in the 2017

15
00:00:41,280 --> 00:00:44,399
um sans women's academy and on twitter

16
00:00:44,399 --> 00:00:47,440
i'm wayward 710 and my pronouns are she

17
00:00:47,440 --> 00:00:49,520
and her

18
00:00:49,520 --> 00:00:50,719
so what are we going to talk about let's

19
00:00:50,719 --> 00:00:52,640
start with terminology and concepts and

20
00:00:52,640 --> 00:00:53,280
we'll have some

21
00:00:53,280 --> 00:00:54,879
examples and we'll also talk about the

22
00:00:54,879 --> 00:00:58,399
limitations of machine learning

23
00:00:58,399 --> 00:01:01,120
so first probably a lot of you've

24
00:01:01,120 --> 00:01:02,800
already heard of artificial intelligence

25
00:01:02,800 --> 00:01:04,159
machine learning

26
00:01:04,159 --> 00:01:06,560
and deep learning and they kind of and

27
00:01:06,560 --> 00:01:07,439
they're essential

28
00:01:07,439 --> 00:01:09,360
essentially kind of nested within each

29
00:01:09,360 --> 00:01:11,920
other um ai is the broadest category and

30
00:01:11,920 --> 00:01:14,479
machine learning and then deporting

31
00:01:14,479 --> 00:01:17,520
so basically artificial intelligence

32
00:01:17,520 --> 00:01:20,799
um if you recall since i'm from urbana

33
00:01:20,799 --> 00:01:22,159
which is the birthplace

34
00:01:22,159 --> 00:01:24,560
of um hail 9000's here is a picture of

35
00:01:24,560 --> 00:01:27,360
hell 9000 um

36
00:01:27,360 --> 00:01:29,200
and artificial intelligence which would

37
00:01:29,200 --> 00:01:30,479
include hail would be the

38
00:01:30,479 --> 00:01:32,479
branch of computer science uh that

39
00:01:32,479 --> 00:01:34,000
basically attempts to emulate human

40
00:01:34,000 --> 00:01:36,640
intelligence

41
00:01:36,799 --> 00:01:38,880
and slightly more narrowly defined we

42
00:01:38,880 --> 00:01:41,200
get machine learning

43
00:01:41,200 --> 00:01:42,799
so machine learning machine learning is

44
00:01:42,799 --> 00:01:46,479
really actually a lot of math

45
00:01:46,479 --> 00:01:49,119
um so you and you can have um and it

46
00:01:49,119 --> 00:01:51,280
looks for patterns and inferences

47
00:01:51,280 --> 00:01:53,280
and um you can have something called

48
00:01:53,280 --> 00:01:54,880
soup you've got things called supervised

49
00:01:54,880 --> 00:01:56,640
and unsupervised learning those are the

50
00:01:56,640 --> 00:01:56,960
uh

51
00:01:56,960 --> 00:01:59,840
main categories and so supervised

52
00:01:59,840 --> 00:02:01,759
learning um probably anybody in stats

53
00:02:01,759 --> 00:02:03,360
may have heard about uh prior

54
00:02:03,360 --> 00:02:05,759
probability called uh bayesian asian

55
00:02:05,759 --> 00:02:06,960
modeling and that

56
00:02:06,960 --> 00:02:10,160
is heavily used by um by uh supervised

57
00:02:10,160 --> 00:02:12,560
learning

58
00:02:15,760 --> 00:02:18,080
and with with unsupervised learning

59
00:02:18,080 --> 00:02:19,280
you're basically drawing

60
00:02:19,280 --> 00:02:22,239
abstractions from unlabeled data sets so

61
00:02:22,239 --> 00:02:23,280
for example with the

62
00:02:23,280 --> 00:02:24,800
supervised learning you tend to have

63
00:02:24,800 --> 00:02:26,400
label data sets which means you have the

64
00:02:26,400 --> 00:02:26,959
answers

65
00:02:26,959 --> 00:02:29,599
um unsupervised learning you don't have

66
00:02:29,599 --> 00:02:30,560
the data sets

67
00:02:30,560 --> 00:02:32,080
you don't have the answers the data sets

68
00:02:32,080 --> 00:02:34,080
are not necessarily labeled

69
00:02:34,080 --> 00:02:36,640
and you could draw so you can draw

70
00:02:36,640 --> 00:02:38,480
abstractions through these uh unlabeled

71
00:02:38,480 --> 00:02:40,000
data sets

72
00:02:40,000 --> 00:02:43,040
um so of course uh one challenge with

73
00:02:43,040 --> 00:02:44,879
with unsupervised learning could be uh

74
00:02:44,879 --> 00:02:48,079
making sure that you have it right

75
00:02:49,200 --> 00:02:52,400
and then we'll talk about um

76
00:02:52,400 --> 00:02:54,400
so uh we'll talk about deep learning

77
00:02:54,400 --> 00:02:56,239
which also use the concept of

78
00:02:56,239 --> 00:02:59,120
neural networking so neural networks are

79
00:02:59,120 --> 00:03:00,319
actually not a new thing they were

80
00:03:00,319 --> 00:03:03,760
invented in 1942.

81
00:03:03,760 --> 00:03:06,400
so they're basically uh modeled on the

82
00:03:06,400 --> 00:03:07,200
whole idea

83
00:03:07,200 --> 00:03:09,200
of layers of neurons so they're modeled

84
00:03:09,200 --> 00:03:11,040
after the human brain

85
00:03:11,040 --> 00:03:12,959
so the layers are made out of nodes and

86
00:03:12,959 --> 00:03:14,959
so the nodes is basically just where

87
00:03:14,959 --> 00:03:16,800
computation happens

88
00:03:16,800 --> 00:03:19,120
which is kind of how a neuron works and

89
00:03:19,120 --> 00:03:20,959
essentially it fires where it can

90
00:03:20,959 --> 00:03:24,159
encounter sufficient stimuli

91
00:03:24,159 --> 00:03:26,640
um so the node combines um input from

92
00:03:26,640 --> 00:03:28,319
data with a set of coefficients or

93
00:03:28,319 --> 00:03:30,239
weights that either amplify or gambling

94
00:03:30,239 --> 00:03:32,000
input so it's like um

95
00:03:32,000 --> 00:03:33,680
do you want more of this input or less

96
00:03:33,680 --> 00:03:35,680
of that input

97
00:03:35,680 --> 00:03:37,280
in the l so the algorithm by going

98
00:03:37,280 --> 00:03:38,959
through this process is trying to learn

99
00:03:38,959 --> 00:03:42,000
uh what will get the uh kind of

100
00:03:42,000 --> 00:03:43,680
how what will bring you the closest to

101
00:03:43,680 --> 00:03:46,879
the right answer

102
00:03:46,879 --> 00:03:48,720
and here we have a picture of a neural

103
00:03:48,720 --> 00:03:50,400
network so you've got

104
00:03:50,400 --> 00:03:53,360
in this case we have it's it is it's

105
00:03:53,360 --> 00:03:54,400
what's called a

106
00:03:54,400 --> 00:03:57,360
forward neural network um so you have it

107
00:03:57,360 --> 00:03:57,840
in

108
00:03:57,840 --> 00:04:00,640
you have a input layer then in this case

109
00:04:00,640 --> 00:04:02,319
you have one hidden layer with four

110
00:04:02,319 --> 00:04:04,239
neurons but you can have

111
00:04:04,239 --> 00:04:06,959
more or less neurons or uh more or less

112
00:04:06,959 --> 00:04:08,080
hidden

113
00:04:08,080 --> 00:04:10,000
um hidden layers and you have an output

114
00:04:10,000 --> 00:04:11,439
layer so that is essentially just what

115
00:04:11,439 --> 00:04:12,640
they're talking about and now we're

116
00:04:12,640 --> 00:04:13,120
gonna look

117
00:04:13,120 --> 00:04:17,839
at some um videos of

118
00:04:17,839 --> 00:04:22,560
some videos showing neural networks

119
00:04:24,160 --> 00:04:28,560
let's see

120
00:04:28,560 --> 00:04:30,400
so you can kind of see i don't think the

121
00:04:30,400 --> 00:04:32,560
animation works you can kind of see

122
00:04:32,560 --> 00:04:34,800
it's gradually getting it's actually

123
00:04:34,800 --> 00:04:38,160
it's gradually getting better and better

124
00:04:38,160 --> 00:04:39,199
so as you would because you're talking

125
00:04:39,199 --> 00:04:40,720
about the test loss and training loss

126
00:04:40,720 --> 00:04:42,160
and you want those losses to be as small

127
00:04:42,160 --> 00:04:44,080
as possible but you kind of see

128
00:04:44,080 --> 00:04:47,199
it's it's actually just trying to add um

129
00:04:47,199 --> 00:04:49,280
accurately categorize the dots in the

130
00:04:49,280 --> 00:04:50,800
picture you can see it's getting closer

131
00:04:50,800 --> 00:04:52,000
and closer this is

132
00:04:52,000 --> 00:04:54,240
basically the tensorflow program which

133
00:04:54,240 --> 00:04:57,440
like anybody can use

134
00:04:57,440 --> 00:04:59,440
it's just a very interesting way to see

135
00:04:59,440 --> 00:05:02,960
neural networks in an action

136
00:05:08,840 --> 00:05:11,840
see

137
00:05:13,840 --> 00:05:16,400
so uh so um when you talk about neural

138
00:05:16,400 --> 00:05:17,680
networks here i'm gonna talk about uh

139
00:05:17,680 --> 00:05:19,440
tweaking parameters and that means you

140
00:05:19,440 --> 00:05:20,400
might

141
00:05:20,400 --> 00:05:22,400
adjust your you may adjust your inputs

142
00:05:22,400 --> 00:05:24,320
you might adjust your layers to have

143
00:05:24,320 --> 00:05:25,759
more or less

144
00:05:25,759 --> 00:05:27,759
and so here let's see what happens if we

145
00:05:27,759 --> 00:05:29,520
tweak it by just adjusting the input a

146
00:05:29,520 --> 00:05:39,840
little bit

147
00:05:44,000 --> 00:05:46,000
so by doing that we actually added we uh

148
00:05:46,000 --> 00:05:47,120
we we

149
00:05:47,120 --> 00:05:48,639
see with only one hidden layer four

150
00:05:48,639 --> 00:05:50,880
neural networks we added more

151
00:05:50,880 --> 00:05:53,120
we added more um features which is which

152
00:05:53,120 --> 00:05:53,919
are more inputs

153
00:05:53,919 --> 00:05:55,440
and if you watched it with closely you

154
00:05:55,440 --> 00:05:58,000
can see it was very accurate but

155
00:05:58,000 --> 00:06:00,720
it uh worked a lot more quickly than the

156
00:06:00,720 --> 00:06:02,319
previous one

157
00:06:02,319 --> 00:06:03,759
and that could be that could be actually

158
00:06:03,759 --> 00:06:05,039
very significant like when you have big

159
00:06:05,039 --> 00:06:07,840
data

160
00:06:10,880 --> 00:06:12,319
and then this in here we're actually

161
00:06:12,319 --> 00:06:14,160
going to look um at

162
00:06:14,160 --> 00:06:17,360
just a slightly different kind of

163
00:06:18,840 --> 00:06:21,840
pattern

164
00:06:22,240 --> 00:06:23,600
and then actually that if i recall

165
00:06:23,600 --> 00:06:25,440
correctly moves works a lot more quickly

166
00:06:25,440 --> 00:06:27,360
if you have fewer input layers

167
00:06:27,360 --> 00:06:30,000
but that is just a neural network um in

168
00:06:30,000 --> 00:06:31,120
action and you can kind of see for the

169
00:06:31,120 --> 00:06:32,560
weights of the line

170
00:06:32,560 --> 00:06:34,960
which in which inputs are weighted

171
00:06:34,960 --> 00:06:38,560
higher or which inputs are way or more

172
00:06:40,800 --> 00:06:42,080
so essentially deep learning when you

173
00:06:42,080 --> 00:06:43,840
talk about it's they

174
00:06:43,840 --> 00:06:45,759
it could also be called stacks neural

175
00:06:45,759 --> 00:06:47,840
networks so we've got a network composed

176
00:06:47,840 --> 00:06:49,759
of several layers um

177
00:06:49,759 --> 00:06:52,720
big data is a very big challenge one

178
00:06:52,720 --> 00:06:54,080
thing that's helped with uh

179
00:06:54,080 --> 00:06:56,000
with neural networks is advancements in

180
00:06:56,000 --> 00:06:58,319
gpu processing um

181
00:06:58,319 --> 00:07:00,720
gpu processing is a graphical processing

182
00:07:00,720 --> 00:07:02,720
unit and that's you that's often used in

183
00:07:02,720 --> 00:07:06,319
um basically big computing

184
00:07:06,319 --> 00:07:08,880
so it's not a silver bullet because so

185
00:07:08,880 --> 00:07:11,039
it needs an extensively labeled data set

186
00:07:11,039 --> 00:07:11,360
and

187
00:07:11,360 --> 00:07:15,840
and that is a lot easier to say than do

188
00:07:15,840 --> 00:07:18,560
and then um but if but if you can get

189
00:07:18,560 --> 00:07:20,319
that if you could get such a thing

190
00:07:20,319 --> 00:07:21,520
there are a whole lot of things you can

191
00:07:21,520 --> 00:07:23,440
do with it you can use computer vision

192
00:07:23,440 --> 00:07:25,280
speech recognition natural language

193
00:07:25,280 --> 00:07:26,560
processing

194
00:07:26,560 --> 00:07:28,160
uh machine translation i don't know if

195
00:07:28,160 --> 00:07:30,319
you've ever used like google translate

196
00:07:30,319 --> 00:07:30,639
or

197
00:07:30,639 --> 00:07:35,440
dbell.com but those are machine learning

198
00:07:35,759 --> 00:07:39,680
and and it is for security

199
00:07:39,680 --> 00:07:42,800
it's also uh can also detect anomalies

200
00:07:42,800 --> 00:07:44,639
in user and network elements and that's

201
00:07:44,639 --> 00:07:45,759
good and that's going to be very

202
00:07:45,759 --> 00:07:48,160
important

203
00:07:51,120 --> 00:07:52,560
so basically when you use machine

204
00:07:52,560 --> 00:07:56,639
learning um what do you do with the data

205
00:07:56,639 --> 00:07:58,160
so with data selection and sampling

206
00:07:58,160 --> 00:08:00,000
you're deciding okay so

207
00:08:00,000 --> 00:08:01,360
you've got a data set like let's say

208
00:08:01,360 --> 00:08:02,960
you've got a pcap file you've got

209
00:08:02,960 --> 00:08:03,520
something

210
00:08:03,520 --> 00:08:06,960
um so what part what information in this

211
00:08:06,960 --> 00:08:07,759
thing do you

212
00:08:07,759 --> 00:08:10,080
do you care about uh what do you want to

213
00:08:10,080 --> 00:08:11,599
represent

214
00:08:11,599 --> 00:08:13,280
and that's often considered that's often

215
00:08:13,280 --> 00:08:16,318
called your feature set

216
00:08:17,759 --> 00:08:20,160
and um another the most machine learning

217
00:08:20,160 --> 00:08:21,280
algorithms you're going to need to

218
00:08:21,280 --> 00:08:22,800
encode the data in some kind of

219
00:08:22,800 --> 00:08:24,639
mathematical faction a

220
00:08:24,639 --> 00:08:26,400
mathematical fashion like just dumping

221
00:08:26,400 --> 00:08:28,000
the raw data

222
00:08:28,000 --> 00:08:31,280
usually is not going to work

223
00:08:32,479 --> 00:08:34,080
and then uh then there's um

224
00:08:34,080 --> 00:08:35,760
normalization like you're

225
00:08:35,760 --> 00:08:37,919
um so normalization essentially you're

226
00:08:37,919 --> 00:08:40,240
transforming values into a range

227
00:08:40,240 --> 00:08:44,399
um in between zero and one

228
00:08:44,399 --> 00:08:45,920
and those and this is just some things

229
00:08:45,920 --> 00:08:47,760
you do to get your data ready for

230
00:08:47,760 --> 00:08:48,240
machine

231
00:08:48,240 --> 00:08:49,600
to plug into a machine learning

232
00:08:49,600 --> 00:08:52,160
algorithm and then this would be an

233
00:08:52,160 --> 00:08:53,839
example of normalization like you're

234
00:08:53,839 --> 00:08:55,440
looking at the number of requests per

235
00:08:55,440 --> 00:08:56,080
serve

236
00:08:56,080 --> 00:08:58,800
per second in your cpu utilization

237
00:08:58,800 --> 00:09:00,000
percentage

238
00:09:00,000 --> 00:09:01,360
and that and that could be that could

239
00:09:01,360 --> 00:09:02,560
tell you like if you're being hammered

240
00:09:02,560 --> 00:09:03,600
by a ddos

241
00:09:03,600 --> 00:09:07,680
attack um is is a bitcoin miner

242
00:09:07,680 --> 00:09:09,519
embracing your gracing you on your

243
00:09:09,519 --> 00:09:10,800
server with this presence

244
00:09:10,800 --> 00:09:14,000
is something wrong going on so for

245
00:09:14,000 --> 00:09:16,320
so in here the requests per second uh

246
00:09:16,320 --> 00:09:18,160
feature have arranged 10 times larger

247
00:09:18,160 --> 00:09:20,560
than those of the cpu percentage feature

248
00:09:20,560 --> 00:09:22,399
and so if we didn't normalize those

249
00:09:22,399 --> 00:09:23,760
values the distance

250
00:09:23,760 --> 00:09:26,160
calculation would be really skewed and

251
00:09:26,160 --> 00:09:28,000
so we just address it we basically

252
00:09:28,000 --> 00:09:29,680
address this by normalizing both

253
00:09:29,680 --> 00:09:31,120
features to the uh

254
00:09:31,120 --> 00:09:33,920
zero to one frame zero to one rank which

255
00:09:33,920 --> 00:09:37,839
is a pretty simple map

256
00:09:39,920 --> 00:09:41,600
so essentially one big thing in machine

257
00:09:41,600 --> 00:09:43,519
learning is pattern recognition so

258
00:09:43,519 --> 00:09:44,480
you're trying to discover

259
00:09:44,480 --> 00:09:48,080
explicit or latent character acidic tape

260
00:09:48,080 --> 00:09:51,600
hidden in the data um and uh

261
00:09:51,600 --> 00:09:53,760
i think about that is one thing about

262
00:09:53,760 --> 00:09:55,600
that is that you can use an algorithm to

263
00:09:55,600 --> 00:09:56,160
recognize

264
00:09:56,160 --> 00:09:59,279
other forms of the data uh the ex it's

265
00:09:59,279 --> 00:10:01,600
the same characteristics like for

266
00:10:01,600 --> 00:10:03,279
example um

267
00:10:03,279 --> 00:10:05,200
uh botnets or command and control

268
00:10:05,200 --> 00:10:07,040
channels uh you very often see similar

269
00:10:07,040 --> 00:10:08,160
behavior

270
00:10:08,160 --> 00:10:10,320
um you also see like similar patterns

271
00:10:10,320 --> 00:10:13,120
saying malware

272
00:10:17,120 --> 00:10:19,839
so essentially um clustering um

273
00:10:19,839 --> 00:10:21,279
clustering the whole idea behind

274
00:10:21,279 --> 00:10:23,120
clustering is that bad things happen

275
00:10:23,120 --> 00:10:25,519
together

276
00:10:26,240 --> 00:10:28,399
so so with cl so with clustering you may

277
00:10:28,399 --> 00:10:29,360
be you want to

278
00:10:29,360 --> 00:10:31,040
find how do you group things into

279
00:10:31,040 --> 00:10:32,640
clusters

280
00:10:32,640 --> 00:10:34,160
and you want to group things in a

281
00:10:34,160 --> 00:10:36,160
cluster so that they're more similar to

282
00:10:36,160 --> 00:10:37,519
other things in the uh

283
00:10:37,519 --> 00:10:39,600
to things the same cluster than they are

284
00:10:39,600 --> 00:10:40,880
to other things

285
00:10:40,880 --> 00:10:42,079
and there are a couple there are

286
00:10:42,079 --> 00:10:44,720
different techniques you could use um

287
00:10:44,720 --> 00:10:47,600
k-means and db scan are two big ones um

288
00:10:47,600 --> 00:10:48,880
db scan

289
00:10:48,880 --> 00:10:50,480
the advantage of db scan is that you

290
00:10:50,480 --> 00:10:52,160
don't have to start with a

291
00:10:52,160 --> 00:10:55,600
preset number of clusters

292
00:10:55,680 --> 00:11:00,000
so let's talk about a clustering example

293
00:11:00,000 --> 00:11:02,240
this is good i just put the the url i'll

294
00:11:02,240 --> 00:11:03,279
post the slides

295
00:11:03,279 --> 00:11:07,440
uh this is where they're uh

296
00:11:07,440 --> 00:11:08,880
they're clustering they're clustering

297
00:11:08,880 --> 00:11:11,040
incidents to incidents together they

298
00:11:11,040 --> 00:11:11,519
actually

299
00:11:11,519 --> 00:11:14,800
i believe incorporated splunk um so you

300
00:11:14,800 --> 00:11:15,120
could

301
00:11:15,120 --> 00:11:17,279
you could recognize similar instances

302
00:11:17,279 --> 00:11:18,959
and keep track of response

303
00:11:18,959 --> 00:11:20,720
people tracking responses they could

304
00:11:20,720 --> 00:11:24,000
respond in a similar manner

305
00:11:27,680 --> 00:11:29,120
so let's have your stock you're going to

306
00:11:29,120 --> 00:11:30,959
have um a lot of these disparate input

307
00:11:30,959 --> 00:11:32,720
inputs coming from different sources

308
00:11:32,720 --> 00:11:34,480
um so that so you'll get all your

309
00:11:34,480 --> 00:11:35,920
sources you'll collect

310
00:11:35,920 --> 00:11:38,399
and then this will allow them to uh this

311
00:11:38,399 --> 00:11:43,839
will basically group them into incidents

312
00:11:45,519 --> 00:11:47,519
so an incident is basically a collection

313
00:11:47,519 --> 00:11:49,360
of events happening on the same machine

314
00:11:49,360 --> 00:11:52,720
at the same time they may have the same

315
00:11:52,720 --> 00:11:54,880
root cause and so so basically you can

316
00:11:54,880 --> 00:11:56,800
find these similar incidents maybe not

317
00:11:56,800 --> 00:11:58,240
on the same machine maybe across your

318
00:11:58,240 --> 00:11:59,120
network

319
00:11:59,120 --> 00:12:01,040
that could save the soc analyst a whole

320
00:12:01,040 --> 00:12:02,160
lot of time because the

321
00:12:02,160 --> 00:12:04,240
um soc analysts sometimes often get to

322
00:12:04,240 --> 00:12:05,519
spend their time

323
00:12:05,519 --> 00:12:11,839
doing a lot of very tedious stuff

324
00:12:12,000 --> 00:12:14,560
so clustering uh takeaways you can ex

325
00:12:14,560 --> 00:12:16,320
you can apply it to a lot of different

326
00:12:16,320 --> 00:12:17,279
kinds of data

327
00:12:17,279 --> 00:12:19,519
um you do need to you need some

328
00:12:19,519 --> 00:12:20,800
statistical

329
00:12:20,800 --> 00:12:24,079
uh validation and um it's very useful

330
00:12:24,079 --> 00:12:26,240
in when you have a whole art a lot of

331
00:12:26,240 --> 00:12:28,079
data and you that you need to find a way

332
00:12:28,079 --> 00:12:28,560
to

333
00:12:28,560 --> 00:12:31,279
sift through more efficiently so that is

334
00:12:31,279 --> 00:12:33,839
clustering

335
00:12:35,519 --> 00:12:39,200
say classification

336
00:12:39,200 --> 00:12:40,480
so classification is a little bit

337
00:12:40,480 --> 00:12:41,839
differently because classifications

338
00:12:41,839 --> 00:12:44,079
you've got these predefined class

339
00:12:44,079 --> 00:12:45,360
and you're trying to figure out what

340
00:12:45,360 --> 00:12:47,360
what the odds are that a sample will be

341
00:12:47,360 --> 00:12:48,000
part of these

342
00:12:48,000 --> 00:12:51,360
part of this class classified

343
00:12:51,360 --> 00:12:52,800
classification is an example of

344
00:12:52,800 --> 00:12:54,320
supervised learning which means you have

345
00:12:54,320 --> 00:12:56,000
to start with a pre-labeled

346
00:12:56,000 --> 00:12:58,720
set uh data set and what that one point

347
00:12:58,720 --> 00:13:00,480
is that a sample can belong to multiple

348
00:13:00,480 --> 00:13:02,399
classes at the same time

349
00:13:02,399 --> 00:13:04,480
like for example um a mango could be

350
00:13:04,480 --> 00:13:08,639
part of yellow tropical whatever

351
00:13:10,720 --> 00:13:14,000
and it's like so so for example

352
00:13:14,000 --> 00:13:16,320
an example of classification one really

353
00:13:16,320 --> 00:13:18,880
big very common classification problem

354
00:13:18,880 --> 00:13:21,279
related security is uh classifying email

355
00:13:21,279 --> 00:13:23,040
is uh spam

356
00:13:23,040 --> 00:13:25,440
or uh benign or possibly phishing

357
00:13:25,440 --> 00:13:26,720
sometimes fishing gets its own

358
00:13:26,720 --> 00:13:29,519
classification

359
00:13:30,639 --> 00:13:32,560
so let's talk just some examples that

360
00:13:32,560 --> 00:13:34,000
you might do classification

361
00:13:34,000 --> 00:13:35,680
and security you might look for a botnet

362
00:13:35,680 --> 00:13:36,720
because there's just a lot of

363
00:13:36,720 --> 00:13:38,240
commonalities with that

364
00:13:38,240 --> 00:13:42,320
um and then this is this is uh what this

365
00:13:42,320 --> 00:13:44,240
is basically

366
00:13:44,240 --> 00:13:47,040
what a microsoft study did they they

367
00:13:47,040 --> 00:13:49,360
basically uh

368
00:13:49,360 --> 00:13:51,519
so they they took uh they issued a bunch

369
00:13:51,519 --> 00:13:54,160
of set http requests to these uh servers

370
00:13:54,160 --> 00:13:56,000
they were looking for a very specific

371
00:13:56,000 --> 00:13:58,399
set of uh bot software

372
00:13:58,399 --> 00:14:00,560
to be honest it wasn't catching any kind

373
00:14:00,560 --> 00:14:02,320
of bot it was sketching a kind with a

374
00:14:02,320 --> 00:14:02,720
very

375
00:14:02,720 --> 00:14:05,199
uh common bot related control panel that

376
00:14:05,199 --> 00:14:07,680
used wordpress

377
00:14:07,680 --> 00:14:09,519
and so they were querying it and they

378
00:14:09,519 --> 00:14:10,639
then they were using it and they were

379
00:14:10,639 --> 00:14:12,560
creating a uh decision they were using a

380
00:14:12,560 --> 00:14:15,279
decision free model

381
00:14:15,279 --> 00:14:18,160
um like like so for example like they

382
00:14:18,160 --> 00:14:18,480
were

383
00:14:18,480 --> 00:14:20,639
sending sending requests to path the

384
00:14:20,639 --> 00:14:21,600
paths that were

385
00:14:21,600 --> 00:14:24,000
kind of consistent with known um sketchy

386
00:14:24,000 --> 00:14:26,320
sites

387
00:14:26,320 --> 00:14:27,839
and then this for example might be what

388
00:14:27,839 --> 00:14:29,440
a decision tree could look like if

389
00:14:29,440 --> 00:14:30,480
you're trying to

390
00:14:30,480 --> 00:14:33,680
categorize a an unknown a website

391
00:14:33,680 --> 00:14:37,040
as a botnet command and control

392
00:14:37,040 --> 00:14:40,160
site whether whether um not

393
00:14:40,160 --> 00:14:41,680
like you could say do you have a whole

394
00:14:41,680 --> 00:14:43,519
lot of daily visitors if you

395
00:14:43,519 --> 00:14:46,880
if yes it's probably not yeah has it

396
00:14:46,880 --> 00:14:47,519
made your

397
00:14:47,519 --> 00:14:50,800
alexa top site list if yes probably not

398
00:14:50,800 --> 00:14:54,399
um well but maybe it's it's not getting

399
00:14:54,399 --> 00:14:55,120
many uh

400
00:14:55,120 --> 00:14:59,120
visitors and your urls auto-generated

401
00:14:59,120 --> 00:15:02,560
uh that's a bad um it's not on your list

402
00:15:02,560 --> 00:15:04,399
and there's an existing threat intel

403
00:15:04,399 --> 00:15:05,279
report on it

404
00:15:05,279 --> 00:15:06,639
uh that's not good either that's

405
00:15:06,639 --> 00:15:08,320
probably a bot or there's probably a

406
00:15:08,320 --> 00:15:10,800
block notch

407
00:15:11,440 --> 00:15:14,560
just classification taking ways um so

408
00:15:14,560 --> 00:15:17,120
classic agent again is a super uh

409
00:15:17,120 --> 00:15:18,880
supervised learning model there's a

410
00:15:18,880 --> 00:15:21,120
four phases of that training validation

411
00:15:21,120 --> 00:15:23,360
testing and deployment

412
00:15:23,360 --> 00:15:25,199
so a lot of times with a classification

413
00:15:25,199 --> 00:15:26,880
classification you you have to break

414
00:15:26,880 --> 00:15:27,440
your data

415
00:15:27,440 --> 00:15:31,839
into uh training and testing data

416
00:15:31,839 --> 00:15:33,920
and one thing with with uh classifiers

417
00:15:33,920 --> 00:15:35,759
is that it's it's not necessarily an

418
00:15:35,759 --> 00:15:37,199
absolute oracle it's

419
00:15:37,199 --> 00:15:38,720
it's not telling you that it definitely

420
00:15:38,720 --> 00:15:40,240
is or it's definitely not it's telling

421
00:15:40,240 --> 00:15:42,160
you what how likely it is that something

422
00:15:42,160 --> 00:15:45,120
belongs to a particular category

423
00:15:45,120 --> 00:15:47,199
like so for example um like in your

424
00:15:47,199 --> 00:15:48,480
email um

425
00:15:48,480 --> 00:15:51,040
you know how like that uh benign email

426
00:15:51,040 --> 00:15:51,920
some students get

427
00:15:51,920 --> 00:15:53,759
caught in your spam filter and spam

428
00:15:53,759 --> 00:15:55,279
sometimes get through

429
00:15:55,279 --> 00:15:57,360
uh that's an example of it not being uh

430
00:15:57,360 --> 00:16:00,480
for not being perfect

431
00:16:02,079 --> 00:16:04,240
so another example like finding finding

432
00:16:04,240 --> 00:16:06,720
um malicious powershell scripts so one

433
00:16:06,720 --> 00:16:08,480
of the things that

434
00:16:08,480 --> 00:16:11,360
people powershells the attackers using

435
00:16:11,360 --> 00:16:12,399
hardship like to do

436
00:16:12,399 --> 00:16:14,399
is um obfuscate their scripts like for

437
00:16:14,399 --> 00:16:17,360
example any idea what this means

438
00:16:17,360 --> 00:16:23,680
uh yeah me neither

439
00:16:23,680 --> 00:16:25,279
so what they so what they did was they

440
00:16:25,279 --> 00:16:27,680
took a whole a whole lot of uh

441
00:16:27,680 --> 00:16:29,040
powershell scripts and they used

442
00:16:29,040 --> 00:16:30,720
something called and this is

443
00:16:30,720 --> 00:16:32,720
this is a very interesting example of

444
00:16:32,720 --> 00:16:34,480
machine learning uses natural language

445
00:16:34,480 --> 00:16:35,440
processing

446
00:16:35,440 --> 00:16:38,480
so there's all these techniques and llp

447
00:16:38,480 --> 00:16:40,720
it can extract meaning out of uh they

448
00:16:40,720 --> 00:16:41,519
could

449
00:16:41,519 --> 00:16:43,680
attempt to extract meaning um out of

450
00:16:43,680 --> 00:16:45,519
words and so they used what a well-known

451
00:16:45,519 --> 00:16:46,720
one called a

452
00:16:46,720 --> 00:16:49,279
word to back algorithm they were able to

453
00:16:49,279 --> 00:16:51,199
actually extract these tokens

454
00:16:51,199 --> 00:16:52,959
and represent them in a way that showed

455
00:16:52,959 --> 00:16:54,800
the context

456
00:16:54,800 --> 00:16:57,120
and this is just the graphic is just an

457
00:16:57,120 --> 00:16:58,800
example of some clusters they found

458
00:16:58,800 --> 00:17:01,439
doing this way

459
00:17:03,120 --> 00:17:05,760
so they they uh see so what they

460
00:17:05,760 --> 00:17:06,720
basically did was they

461
00:17:06,720 --> 00:17:10,000
they had a very large um

462
00:17:10,000 --> 00:17:12,079
set of uh trading scripts that were

463
00:17:12,079 --> 00:17:13,839
already labeled uh

464
00:17:13,839 --> 00:17:17,760
clean or malicious um and

465
00:17:17,760 --> 00:17:20,559
and basically project workforce well it

466
00:17:20,559 --> 00:17:21,039
it did

467
00:17:21,039 --> 00:17:23,039
really well with uh recognizing aliases

468
00:17:23,039 --> 00:17:25,119
which are pretty commonly used

469
00:17:25,119 --> 00:17:28,240
um powershell

470
00:17:28,240 --> 00:17:32,559
um and uh

471
00:17:32,559 --> 00:17:35,200
so and uh it yeah yeah it was pretty

472
00:17:35,200 --> 00:17:37,760
successful

473
00:17:39,600 --> 00:17:41,120
so another thing you're doing is anomaly

474
00:17:41,120 --> 00:17:43,039
detection um

475
00:17:43,039 --> 00:17:44,320
so essentially you've got to think about

476
00:17:44,320 --> 00:17:46,320
what what represents normal

477
00:17:46,320 --> 00:17:48,799
so what it what is normal what described

478
00:17:48,799 --> 00:17:50,160
your in your data set could be anything

479
00:17:50,160 --> 00:17:51,840
it could be like your network

480
00:17:51,840 --> 00:17:55,120
your network logs uh your your logs uh

481
00:17:55,120 --> 00:17:56,960
your network flow whatever

482
00:17:56,960 --> 00:17:58,640
and then if something is happening

483
00:17:58,640 --> 00:18:00,320
that's outside normal that's considered

484
00:18:00,320 --> 00:18:02,000
outliers

485
00:18:02,000 --> 00:18:05,200
um and so a lot of times um unusual is

486
00:18:05,200 --> 00:18:09,360
not necessarily bad but it often is

487
00:18:09,360 --> 00:18:12,000
it's like so it often might suggest uh

488
00:18:12,000 --> 00:18:14,799
fraud or something like that

489
00:18:14,799 --> 00:18:17,039
so you have an intrusion detection

490
00:18:17,039 --> 00:18:19,200
system or also like an ids

491
00:18:19,200 --> 00:18:21,039
uh what do you want you want uh low

492
00:18:21,039 --> 00:18:23,280
false positives and false negatives like

493
00:18:23,280 --> 00:18:24,559
a false positive will

494
00:18:24,559 --> 00:18:27,760
waste your stock analyst time a false

495
00:18:27,760 --> 00:18:28,960
negative

496
00:18:28,960 --> 00:18:31,520
you'll miss a threat um you want a

497
00:18:31,520 --> 00:18:32,960
reasonable learning curve

498
00:18:32,960 --> 00:18:34,559
um you want something that could keep up

499
00:18:34,559 --> 00:18:37,360
because security changes constantly

500
00:18:37,360 --> 00:18:39,039
and you probably will have only a

501
00:18:39,039 --> 00:18:41,280
limited amount of resources and then

502
00:18:41,280 --> 00:18:43,600
um explainable alerts like for example

503
00:18:43,600 --> 00:18:45,760
um if you get an alert

504
00:18:45,760 --> 00:18:47,679
um you don't you don't want to like

505
00:18:47,679 --> 00:18:49,120
disable somebody's account without

506
00:18:49,120 --> 00:18:51,600
knowing why

507
00:18:54,640 --> 00:18:56,320
and then this is and then these are just

508
00:18:56,320 --> 00:18:57,840
some um things you would look for in a

509
00:18:57,840 --> 00:18:58,480
host

510
00:18:58,480 --> 00:19:00,960
host intrusion detecting system your

511
00:19:00,960 --> 00:19:01,919
processes

512
00:19:01,919 --> 00:19:04,799
um do you have a sketchy new user

513
00:19:04,799 --> 00:19:05,600
account

514
00:19:05,600 --> 00:19:08,160
um do you have an unusual kernel modules

515
00:19:08,160 --> 00:19:08,640
loaded

516
00:19:08,640 --> 00:19:13,039
are you um looking up uh i don't know

517
00:19:13,039 --> 00:19:16,320
are you looking up sites that are

518
00:19:16,320 --> 00:19:19,679
known bad doing dns look up to on sites

519
00:19:19,679 --> 00:19:20,720
that are problem

520
00:19:20,720 --> 00:19:22,880
unusual network connection or have there

521
00:19:22,880 --> 00:19:24,720
been unexplained changes made to your

522
00:19:24,720 --> 00:19:25,679
registry

523
00:19:25,679 --> 00:19:28,880
let's just look for that kind of thing

524
00:19:28,880 --> 00:19:30,720
there's a fairly there's a pretty useful

525
00:19:30,720 --> 00:19:32,080
tool tool for

526
00:19:32,080 --> 00:19:34,240
most intrusive data inspection called os

527
00:19:34,240 --> 00:19:35,520
query

528
00:19:35,520 --> 00:19:38,799
um so i mean it can

529
00:19:38,799 --> 00:19:40,480
it can measure reliability in appliance

530
00:19:40,480 --> 00:19:41,840
but it's often used for intrusion

531
00:19:41,840 --> 00:19:43,840
detection

532
00:19:43,840 --> 00:19:46,960
um so for example um

533
00:19:46,960 --> 00:19:48,720
for example like you can schedule it you

534
00:19:48,720 --> 00:19:50,559
can populate queries to be

535
00:19:50,559 --> 00:19:53,760
cables to be queried later um

536
00:19:53,760 --> 00:19:56,240
one limitation is it is not built to

537
00:19:56,240 --> 00:19:58,640
operate a known trusted environment

538
00:19:58,640 --> 00:19:59,919
and it does not have any built-in

539
00:19:59,919 --> 00:20:01,840
orchestration but it can work with sure

540
00:20:01,840 --> 00:20:06,480
ansible public whatever that so network

541
00:20:06,480 --> 00:20:07,679
intrusion detection

542
00:20:07,679 --> 00:20:11,520
um okay so you've got to compromise post

543
00:20:11,520 --> 00:20:13,360
it's probably going to need to um

544
00:20:13,360 --> 00:20:15,520
initiate com uh communication somehow

545
00:20:15,520 --> 00:20:17,039
because a lot of times like a firewall

546
00:20:17,039 --> 00:20:18,400
is not going to let you

547
00:20:18,400 --> 00:20:21,120
go in and make a uh and establish a

548
00:20:21,120 --> 00:20:24,080
connection with that host

549
00:20:30,240 --> 00:20:32,000
so so examples some examples that are

550
00:20:32,000 --> 00:20:33,280
like your botnets

551
00:20:33,280 --> 00:20:36,240
uh ept your adware your spyware you've

552
00:20:36,240 --> 00:20:38,559
got and we're tools you use uh tcp

553
00:20:38,559 --> 00:20:40,320
basically will capture all your network

554
00:20:40,320 --> 00:20:42,240
traffic um

555
00:20:42,240 --> 00:20:45,679
snort is a rules-based engine um

556
00:20:45,679 --> 00:20:47,360
zeke which is all formerly known as

557
00:20:47,360 --> 00:20:49,200
royal supports uh deep

558
00:20:49,200 --> 00:20:50,640
deep packet inspection that's fact that

559
00:20:50,640 --> 00:20:53,280
i got its own programming language it's

560
00:20:53,280 --> 00:20:55,280
traditionally it's used uh it's used

561
00:20:55,280 --> 00:20:56,480
signatures but that can be kind of a

562
00:20:56,480 --> 00:20:58,320
limitation

563
00:20:58,320 --> 00:21:00,240
um for example like when you're doing a

564
00:21:00,240 --> 00:21:01,600
dealing with a zero day or something

565
00:21:01,600 --> 00:21:02,480
ahead that

566
00:21:02,480 --> 00:21:05,520
does not have a signature

567
00:21:06,320 --> 00:21:07,919
and this and then these would be some of

568
00:21:07,919 --> 00:21:09,679
the things you would look for

569
00:21:09,679 --> 00:21:12,320
in web application intrusion detection

570
00:21:12,320 --> 00:21:12,799
um

571
00:21:12,799 --> 00:21:16,000
your basically unusual ip

572
00:21:16,000 --> 00:21:18,400
addresses like um you've got you've got

573
00:21:18,400 --> 00:21:19,919
maybe like a

574
00:21:19,919 --> 00:21:21,360
website that's just local and you're

575
00:21:21,360 --> 00:21:22,799
suddenly getting like a lot of traffic

576
00:21:22,799 --> 00:21:24,640
from china and russia or iran

577
00:21:24,640 --> 00:21:27,200
why um basically if you're getting

578
00:21:27,200 --> 00:21:30,240
really strange url um

579
00:21:30,240 --> 00:21:32,080
entities they maybe try they may be

580
00:21:32,080 --> 00:21:33,600
trying to uh

581
00:21:33,600 --> 00:21:36,400
they may be trying to fuzz it um if

582
00:21:36,400 --> 00:21:38,240
they're using strange characters they

583
00:21:38,240 --> 00:21:38,720
may be

584
00:21:38,720 --> 00:21:42,159
looking for vulnerabilities uh or

585
00:21:42,159 --> 00:21:44,400
other things could suggest sql and sql

586
00:21:44,400 --> 00:21:45,760
injection um

587
00:21:45,760 --> 00:21:47,520
user agent patterns like it like for

588
00:21:47,520 --> 00:21:48,799
example

589
00:21:48,799 --> 00:21:50,080
if you do if you're doing automated

590
00:21:50,080 --> 00:21:51,840
access if you're using curl or something

591
00:21:51,840 --> 00:21:53,360
you don't sell your user writing agent

592
00:21:53,360 --> 00:21:53,840
it'll

593
00:21:53,840 --> 00:21:57,360
it won't show one um

594
00:21:57,360 --> 00:21:59,120
then malware analysis that's kind of

595
00:21:59,120 --> 00:22:01,200
group like that's

596
00:22:01,200 --> 00:22:02,880
basically group by family and you've got

597
00:22:02,880 --> 00:22:04,320
a couple of ways you can

598
00:22:04,320 --> 00:22:07,280
analyze your static it's traditionally

599
00:22:07,280 --> 00:22:07,679
been

600
00:22:07,679 --> 00:22:09,200
identified by signature matching but

601
00:22:09,200 --> 00:22:11,520
that won't catch your zero days um

602
00:22:11,520 --> 00:22:13,840
typically a static analysis is when you

603
00:22:13,840 --> 00:22:15,760
look at code maybe you decompile it

604
00:22:15,760 --> 00:22:17,520
your dynamic analysis is when you run it

605
00:22:17,520 --> 00:22:19,760
in a sandbox

606
00:22:19,760 --> 00:22:20,960
and then these would just be some of the

607
00:22:20,960 --> 00:22:22,640
things you would see in android mail

608
00:22:22,640 --> 00:22:23,039
where

609
00:22:23,039 --> 00:22:26,320
your string strings uh

610
00:22:26,320 --> 00:22:29,600
api calls network

611
00:22:29,600 --> 00:22:31,200
um like for example you might see

612
00:22:31,200 --> 00:22:33,200
references to system binaries server

613
00:22:33,200 --> 00:22:34,080
addresses

614
00:22:34,080 --> 00:22:35,520
um checks to see if you're running an

615
00:22:35,520 --> 00:22:36,960
emulated environment like you've got

616
00:22:36,960 --> 00:22:37,760
malware

617
00:22:37,760 --> 00:22:38,720
maybe they want to know if you're

618
00:22:38,720 --> 00:22:40,320
running it into sand docks and again

619
00:22:40,320 --> 00:22:41,840
like we talked about a previous

620
00:22:41,840 --> 00:22:44,959
example obfuscation

621
00:22:45,520 --> 00:22:47,600
and i've got to show my gen xiness i

622
00:22:47,600 --> 00:22:49,120
don't know if anybody recognizes this

623
00:22:49,120 --> 00:22:49,919
guy but this is

624
00:22:49,919 --> 00:22:52,720
bob seaver and the silver bullet band so

625
00:22:52,720 --> 00:22:54,480
basically it's no slope of a bullet

626
00:22:54,480 --> 00:22:55,600
as you talked about before we've

627
00:22:55,600 --> 00:22:57,919
explained ability like um do you always

628
00:22:57,919 --> 00:23:00,880
do you know why it is or why it's giving

629
00:23:00,880 --> 00:23:01,600
an alert

630
00:23:01,600 --> 00:23:03,600
uh there's a whole lot of human

631
00:23:03,600 --> 00:23:04,720
knowledge

632
00:23:04,720 --> 00:23:07,200
to represent others problems called

633
00:23:07,200 --> 00:23:08,720
overfitting underfitting

634
00:23:08,720 --> 00:23:10,240
um underfitting is like when it doesn't

635
00:23:10,240 --> 00:23:12,320
fit your data very your data very well

636
00:23:12,320 --> 00:23:14,880
period um overfitting is like for

637
00:23:14,880 --> 00:23:16,159
example when it matches your training

638
00:23:16,159 --> 00:23:17,919
data too well but not your real world

639
00:23:17,919 --> 00:23:18,480
data

640
00:23:18,480 --> 00:23:20,880
um garbage in garbage out which means

641
00:23:20,880 --> 00:23:23,039
you start with bad data or

642
00:23:23,039 --> 00:23:26,320
um or if your ai system is being

643
00:23:26,320 --> 00:23:28,000
attacked which it can be uh like

644
00:23:28,000 --> 00:23:29,440
sometimes

645
00:23:29,440 --> 00:23:31,360
directing a bunch of crap and machine

646
00:23:31,360 --> 00:23:32,720
learning system as a kind of z

647
00:23:32,720 --> 00:23:35,360
form of attack

648
00:23:35,760 --> 00:23:37,120
so basically your takeaway you've got

649
00:23:37,120 --> 00:23:39,120
the potential to automate some tasks and

650
00:23:39,120 --> 00:23:39,600
if it

651
00:23:39,600 --> 00:23:42,640
increase efficiency um

652
00:23:42,640 --> 00:23:44,400
so the ability to look for anomaly

653
00:23:44,400 --> 00:23:45,760
detection or stuff that's going on

654
00:23:45,760 --> 00:23:47,279
strange is very useful for

655
00:23:47,279 --> 00:23:49,279
zero days or apds or stuff that does not

656
00:23:49,279 --> 00:23:50,720
have signatures established

657
00:23:50,720 --> 00:23:54,880
um uh risk of error um

658
00:23:54,880 --> 00:23:57,840
like i mean one example like one example

659
00:23:57,840 --> 00:24:00,240
i feel like we all saw was uh facebook

660
00:24:00,240 --> 00:24:01,760
tried to automate some of its content

661
00:24:01,760 --> 00:24:03,520
management you saw it doing

662
00:24:03,520 --> 00:24:04,880
and i think a lot of us saw it doing

663
00:24:04,880 --> 00:24:06,720
some really strange things

664
00:24:06,720 --> 00:24:09,440
so this is so there's always a risk of

665
00:24:09,440 --> 00:24:09,919
error

666
00:24:09,919 --> 00:24:12,960
and we'll we will i think we'll always

667
00:24:12,960 --> 00:24:13,360
need

668
00:24:13,360 --> 00:24:15,120
competent security professionals this

669
00:24:15,120 --> 00:24:17,520
isn't going to replace us

670
00:24:17,520 --> 00:24:19,520
and then these are just some examples of

671
00:24:19,520 --> 00:24:22,400
machine learning software you could use

672
00:24:22,400 --> 00:24:24,000
and i'm going to give some credits to my

673
00:24:24,000 --> 00:24:25,679
sources

674
00:24:25,679 --> 00:24:28,480
and list some additional resources and

675
00:24:28,480 --> 00:24:32,240
thank you so much for your time

