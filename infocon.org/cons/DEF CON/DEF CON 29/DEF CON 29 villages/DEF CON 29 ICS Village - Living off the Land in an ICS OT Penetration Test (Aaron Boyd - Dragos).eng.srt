1
00:00:01,040 --> 00:00:03,040
greetings ics village

2
00:00:03,040 --> 00:00:05,200
thank you all so much for joining me

3
00:00:05,200 --> 00:00:06,240
today

4
00:00:06,240 --> 00:00:08,720
i hope you're all doing well and your

5
00:00:08,720 --> 00:00:09,679
families are

6
00:00:09,679 --> 00:00:12,719
staying safe and healthy i'm very

7
00:00:12,719 --> 00:00:14,799
excited to be here today to talk to you

8
00:00:14,799 --> 00:00:15,360
about

9
00:00:15,360 --> 00:00:19,279
living off the land in an ics ot

10
00:00:19,279 --> 00:00:22,160
penetration test

11
00:00:22,960 --> 00:00:25,199
so brief introduction on myself my name

12
00:00:25,199 --> 00:00:26,640
is aaron boyd

13
00:00:26,640 --> 00:00:28,880
i'm a senior industrial penetration

14
00:00:28,880 --> 00:00:30,640
tester here at dragos

15
00:00:30,640 --> 00:00:34,079
i live in denver colorado my background

16
00:00:34,079 --> 00:00:36,559
is mainly been in security architecture

17
00:00:36,559 --> 00:00:39,600
type roles in verticals such as oil and

18
00:00:39,600 --> 00:00:40,160
gas

19
00:00:40,160 --> 00:00:43,920
manufacturing and aerospace i do hold a

20
00:00:43,920 --> 00:00:46,399
couple of cyber security certifications

21
00:00:46,399 --> 00:00:50,000
mostly in the offensive discipline

22
00:00:50,000 --> 00:00:53,680
and let's just jump right into it so

23
00:00:53,680 --> 00:00:56,160
talking about an example ics environment

24
00:00:56,160 --> 00:00:58,559
is really difficult because

25
00:00:58,559 --> 00:01:01,760
as penetration testers we never know

26
00:01:01,760 --> 00:01:03,920
what type of environment we're dropping

27
00:01:03,920 --> 00:01:04,799
into

28
00:01:04,799 --> 00:01:07,760
whether remotely are on site we have no

29
00:01:07,760 --> 00:01:10,000
idea what type of configurations we're

30
00:01:10,000 --> 00:01:11,360
going to be up against

31
00:01:11,360 --> 00:01:15,040
what kind of architecture is in place

32
00:01:15,040 --> 00:01:17,040
but there are typically two

33
00:01:17,040 --> 00:01:19,360
commonalities that we see

34
00:01:19,360 --> 00:01:22,640
more often than not and

35
00:01:22,640 --> 00:01:24,720
the first of the commonalities is

36
00:01:24,720 --> 00:01:26,080
there's usually

37
00:01:26,080 --> 00:01:28,159
no internet access at least we hope

38
00:01:28,159 --> 00:01:30,400
there's not any internet access

39
00:01:30,400 --> 00:01:32,560
and with no internet access we don't

40
00:01:32,560 --> 00:01:33,680
have a way to

41
00:01:33,680 --> 00:01:36,960
download our payloads or our scripts or

42
00:01:36,960 --> 00:01:38,799
establish connectivity to our

43
00:01:38,799 --> 00:01:40,320
centralized command and control

44
00:01:40,320 --> 00:01:42,000
infrastructure

45
00:01:42,000 --> 00:01:44,320
in addition to no internet access there

46
00:01:44,320 --> 00:01:46,240
is usually

47
00:01:46,240 --> 00:01:49,439
usb restrictions whether usb itself is

48
00:01:49,439 --> 00:01:50,240
completely

49
00:01:50,240 --> 00:01:53,119
disabled through the machine bios or

50
00:01:53,119 --> 00:01:55,119
there's group policy objects and

51
00:01:55,119 --> 00:01:58,000
enforcing the restriction of removable

52
00:01:58,000 --> 00:01:59,439
media

53
00:01:59,439 --> 00:02:02,320
so with these two things we have no real

54
00:02:02,320 --> 00:02:02,880
way

55
00:02:02,880 --> 00:02:06,240
to get data to the environment get data

56
00:02:06,240 --> 00:02:11,440
from the environment so what do we do

57
00:02:11,599 --> 00:02:14,640
we live off the land and i'm going to be

58
00:02:14,640 --> 00:02:15,520
talking about

59
00:02:15,520 --> 00:02:18,560
one of these techniques today but first

60
00:02:18,560 --> 00:02:20,319
let's talk about what living of the land

61
00:02:20,319 --> 00:02:21,599
actually is

62
00:02:21,599 --> 00:02:24,480
so living off the land is a broad term

63
00:02:24,480 --> 00:02:25,040
that

64
00:02:25,040 --> 00:02:27,280
describes the use of pre-existing

65
00:02:27,280 --> 00:02:28,400
utilities

66
00:02:28,400 --> 00:02:31,280
on windows operating systems or networks

67
00:02:31,280 --> 00:02:32,000
that are known

68
00:02:32,000 --> 00:02:35,599
and trusted with legitimate capabilities

69
00:02:35,599 --> 00:02:38,480
but we flip that script and use it for

70
00:02:38,480 --> 00:02:40,560
nefarious purposes

71
00:02:40,560 --> 00:02:41,760
and there's a link here in the

72
00:02:41,760 --> 00:02:44,560
presentation to a drago's white paper

73
00:02:44,560 --> 00:02:46,319
that talks a little bit more in depth

74
00:02:46,319 --> 00:02:48,640
about living off the land in ics

75
00:02:48,640 --> 00:02:52,000
or ot cyber security but as far as this

76
00:02:52,000 --> 00:02:54,239
presentation goes i wanted to touch on

77
00:02:54,239 --> 00:02:56,640
four key points about living off the

78
00:02:56,640 --> 00:02:58,319
land

79
00:02:58,319 --> 00:03:00,879
first point being living off the land is

80
00:03:00,879 --> 00:03:02,840
likely not going to be detected by

81
00:03:02,840 --> 00:03:04,000
antivirus

82
00:03:04,000 --> 00:03:07,200
as most of us know some ics environments

83
00:03:07,200 --> 00:03:08,640
may not have any of ours

84
00:03:08,640 --> 00:03:11,760
if at all and if there is antivirus

85
00:03:11,760 --> 00:03:13,680
leveraging the existing tools and

86
00:03:13,680 --> 00:03:16,239
utilities on the machines or network

87
00:03:16,239 --> 00:03:18,319
prevents us having to download files to

88
00:03:18,319 --> 00:03:19,360
the disk

89
00:03:19,360 --> 00:03:22,159
which prevents us from getting detected

90
00:03:22,159 --> 00:03:23,840
quickly

91
00:03:23,840 --> 00:03:26,239
in addition to that these living off the

92
00:03:26,239 --> 00:03:27,040
land

93
00:03:27,040 --> 00:03:29,599
binaries are commonly used in a lot of

94
00:03:29,599 --> 00:03:31,040
environments

95
00:03:31,040 --> 00:03:34,159
so if monitoring has been implemented

96
00:03:34,159 --> 00:03:36,799
we do hope that the monitoring is tuned

97
00:03:36,799 --> 00:03:38,239
to your environment

98
00:03:38,239 --> 00:03:40,640
because a lot of these things generate a

99
00:03:40,640 --> 00:03:41,680
fairly significant

100
00:03:41,680 --> 00:03:44,400
amount of logs and with that those

101
00:03:44,400 --> 00:03:46,480
looking at those logs

102
00:03:46,480 --> 00:03:49,760
the risk is increased for alert fatigue

103
00:03:49,760 --> 00:03:54,560
or false positives being decided

104
00:03:54,560 --> 00:03:57,599
additionally a lot of these are trusted

105
00:03:57,599 --> 00:03:59,439
by default because they're

106
00:03:59,439 --> 00:04:01,599
windows operating system binaries

107
00:04:01,599 --> 00:04:02,879
natively

108
00:04:02,879 --> 00:04:06,159
on the disk that are digitally signed by

109
00:04:06,159 --> 00:04:07,280
microsoft

110
00:04:07,280 --> 00:04:08,640
and if they're not natively in the

111
00:04:08,640 --> 00:04:10,480
operating system they can be downloaded

112
00:04:10,480 --> 00:04:12,799
directly from the microsoft website

113
00:04:12,799 --> 00:04:14,879
so if you have antivirus in your

114
00:04:14,879 --> 00:04:16,160
environment or you have

115
00:04:16,160 --> 00:04:18,720
application whitelisting with a rule

116
00:04:18,720 --> 00:04:19,600
that blocks

117
00:04:19,600 --> 00:04:22,560
executables binaries or scripts from

118
00:04:22,560 --> 00:04:25,280
unknown or untrusted publishers

119
00:04:25,280 --> 00:04:28,880
this gets around that defense mechanism

120
00:04:28,880 --> 00:04:30,720
and another one that doesn't get a whole

121
00:04:30,720 --> 00:04:32,320
lot of attention when talking about

122
00:04:32,320 --> 00:04:33,680
living off the land

123
00:04:33,680 --> 00:04:36,080
techniques but it does happen is the

124
00:04:36,080 --> 00:04:38,320
trust relationship with vendors

125
00:04:38,320 --> 00:04:41,360
so sometimes work is performed in an

126
00:04:41,360 --> 00:04:43,440
environment from a trusted vendor

127
00:04:43,440 --> 00:04:45,280
and this can be done from either an

128
00:04:45,280 --> 00:04:47,840
implementation or support standpoint

129
00:04:47,840 --> 00:04:50,000
so when we drop into an environment and

130
00:04:50,000 --> 00:04:53,040
we see tools a vendor is leveraging

131
00:04:53,040 --> 00:04:54,800
a lot of times there's potential for us

132
00:04:54,800 --> 00:04:56,560
to use those tools

133
00:04:56,560 --> 00:04:58,800
so because you're already accustomed to

134
00:04:58,800 --> 00:05:00,479
them you trust them

135
00:05:00,479 --> 00:05:03,120
you expect to see it we can leverage it

136
00:05:03,120 --> 00:05:04,240
and it'll just look like

137
00:05:04,240 --> 00:05:07,759
normal behavior so as i mentioned

138
00:05:07,759 --> 00:05:09,440
there's lots and lots of different

139
00:05:09,440 --> 00:05:11,120
living off the land techniques

140
00:05:11,120 --> 00:05:13,919
and i was going to focus on one today

141
00:05:13,919 --> 00:05:15,440
and it's one that

142
00:05:15,440 --> 00:05:18,800
i personally have had more consistent

143
00:05:18,800 --> 00:05:20,160
success with

144
00:05:20,160 --> 00:05:23,840
and that is bits

145
00:05:23,840 --> 00:05:26,639
bits admin is a command line tool to

146
00:05:26,639 --> 00:05:27,600
manage

147
00:05:27,600 --> 00:05:29,360
the background intelligent transfer

148
00:05:29,360 --> 00:05:31,759
service and microsoft windows

149
00:05:31,759 --> 00:05:35,120
so bits admin is used to either

150
00:05:35,120 --> 00:05:38,479
create jobs to either download upload

151
00:05:38,479 --> 00:05:41,600
copy or transfer files and

152
00:05:41,600 --> 00:05:43,680
it can also be used to monitor the

153
00:05:43,680 --> 00:05:46,639
progress of already existing jobs

154
00:05:46,639 --> 00:05:49,280
and the native binary location for bits

155
00:05:49,280 --> 00:05:53,039
admin is your system 32 or sis wow 64

156
00:05:53,039 --> 00:05:56,000
directories and in addition to that

157
00:05:56,000 --> 00:05:56,800
there's also

158
00:05:56,800 --> 00:05:59,280
some powershell commandlets for

159
00:05:59,280 --> 00:06:00,400
interacting with

160
00:06:00,400 --> 00:06:03,360
bits admin and the bit service so

161
00:06:03,360 --> 00:06:04,160
talking about

162
00:06:04,160 --> 00:06:07,680
bits from a high level i'm going to ask

163
00:06:07,680 --> 00:06:11,199
three questions first

164
00:06:11,199 --> 00:06:14,160
do you pat your systems if you do

165
00:06:14,160 --> 00:06:14,880
there's a

166
00:06:14,880 --> 00:06:17,039
strong possibility that whatever

167
00:06:17,039 --> 00:06:18,160
solution you use

168
00:06:18,160 --> 00:06:20,960
leverages bits to download and apply

169
00:06:20,960 --> 00:06:21,759
updates

170
00:06:21,759 --> 00:06:24,240
for example on your enterprise machines

171
00:06:24,240 --> 00:06:25,520
you have google chrome

172
00:06:25,520 --> 00:06:27,840
browser of choice periodically checks

173
00:06:27,840 --> 00:06:28,960
for updates

174
00:06:28,960 --> 00:06:30,720
if you look at your windows event viewer

175
00:06:30,720 --> 00:06:33,759
logs for operational bits client data

176
00:06:33,759 --> 00:06:36,560
you will see both these browsers

177
00:06:36,560 --> 00:06:38,560
periodically checking for updates

178
00:06:38,560 --> 00:06:40,240
i'll get in the windows event viewer a

179
00:06:40,240 --> 00:06:41,919
little bit later in detail

180
00:06:41,919 --> 00:06:44,240
but because that behavior is expected at

181
00:06:44,240 --> 00:06:45,680
normal

182
00:06:45,680 --> 00:06:48,319
chances are it's going to be successful

183
00:06:48,319 --> 00:06:50,080
do you have application whitelisting

184
00:06:50,080 --> 00:06:52,000
implemented

185
00:06:52,000 --> 00:06:53,840
with a lot of application whitelisting

186
00:06:53,840 --> 00:06:56,560
solutions it's not uncommon for there to

187
00:06:56,560 --> 00:06:56,880
be

188
00:06:56,880 --> 00:06:58,880
a default rule to either automatically

189
00:06:58,880 --> 00:07:00,319
trust execute or

190
00:07:00,319 --> 00:07:03,039
elevate microsoft signed applications or

191
00:07:03,039 --> 00:07:04,160
binaries

192
00:07:04,160 --> 00:07:06,400
like i touched on if you've got a rule

193
00:07:06,400 --> 00:07:07,680
to block unknown

194
00:07:07,680 --> 00:07:10,319
untrusted publishers the fact that a lot

195
00:07:10,319 --> 00:07:12,720
of these living off the land binaries

196
00:07:12,720 --> 00:07:14,560
bits admin for example signed by

197
00:07:14,560 --> 00:07:16,960
microsoft gets around that defense

198
00:07:16,960 --> 00:07:18,960
mechanism

199
00:07:18,960 --> 00:07:22,240
and just another homage to antivirus

200
00:07:22,240 --> 00:07:25,360
a lot of times or sometimes antivirus

201
00:07:25,360 --> 00:07:26,800
may not be installed in a lot of

202
00:07:26,800 --> 00:07:27,759
environments

203
00:07:27,759 --> 00:07:30,479
or if it is it has a lot of exceptions

204
00:07:30,479 --> 00:07:30,960
to not

205
00:07:30,960 --> 00:07:34,240
interrupt the process and

206
00:07:34,240 --> 00:07:36,479
i will say that some antivirus providers

207
00:07:36,479 --> 00:07:37,919
are getting better

208
00:07:37,919 --> 00:07:40,479
with detecting abuse of a lot of these

209
00:07:40,479 --> 00:07:42,240
living off the land techniques

210
00:07:42,240 --> 00:07:43,680
for example i know the latest

211
00:07:43,680 --> 00:07:45,360
definitions and updates for windows

212
00:07:45,360 --> 00:07:46,319
defender

213
00:07:46,319 --> 00:07:48,960
if you execute bits admin.exe to create

214
00:07:48,960 --> 00:07:49,759
a job

215
00:07:49,759 --> 00:07:52,080
it's going to trigger on that in windows

216
00:07:52,080 --> 00:07:52,879
defender

217
00:07:52,879 --> 00:07:54,720
there are ways around that i'm not going

218
00:07:54,720 --> 00:07:56,879
to get into detail on that here

219
00:07:56,879 --> 00:07:59,599
but the potential is there so i'm

220
00:07:59,599 --> 00:08:01,039
talking about bits admin

221
00:08:01,039 --> 00:08:03,599
you're probably asking me do i have an

222
00:08:03,599 --> 00:08:04,879
example

223
00:08:04,879 --> 00:08:07,360
of course i do so let's paint the

224
00:08:07,360 --> 00:08:07,919
following

225
00:08:07,919 --> 00:08:10,840
scenario we have access to an operator

226
00:08:10,840 --> 00:08:13,360
workstation this operator workstation

227
00:08:13,360 --> 00:08:15,840
could be running an hmi or a dcs that's

228
00:08:15,840 --> 00:08:17,840
running in full screen view

229
00:08:17,840 --> 00:08:19,759
there's not an easy way to get rid of it

230
00:08:19,759 --> 00:08:21,520
if you are able to get rid of it

231
00:08:21,520 --> 00:08:23,360
then you've got group policy objects

232
00:08:23,360 --> 00:08:25,360
applying at the machine level

233
00:08:25,360 --> 00:08:27,360
applying other restrictions preventing

234
00:08:27,360 --> 00:08:29,280
you from traversing the file system on

235
00:08:29,280 --> 00:08:30,479
the machine

236
00:08:30,479 --> 00:08:33,679
or other restrictions that we commonly

237
00:08:33,679 --> 00:08:34,799
see

238
00:08:34,799 --> 00:08:36,559
we do have ways around a lot of this

239
00:08:36,559 --> 00:08:38,320
again i'm not going to go into detail on

240
00:08:38,320 --> 00:08:39,200
any of these

241
00:08:39,200 --> 00:08:40,719
but for the sake of time let's just

242
00:08:40,719 --> 00:08:42,559
assume we bypassed

243
00:08:42,559 --> 00:08:44,880
all these restrictions and now we've

244
00:08:44,880 --> 00:08:45,760
attained

245
00:08:45,760 --> 00:08:49,040
a powershell prompt at this point we

246
00:08:49,040 --> 00:08:51,120
start enumerating the machine

247
00:08:51,120 --> 00:08:53,200
we look at the host information we look

248
00:08:53,200 --> 00:08:54,959
at the user information

249
00:08:54,959 --> 00:08:58,800
we look for things like startup scripts

250
00:08:58,800 --> 00:09:01,839
if the machine is domain joined

251
00:09:01,839 --> 00:09:04,399
startup scripts log on scripts log on

252
00:09:04,399 --> 00:09:04,959
log off

253
00:09:04,959 --> 00:09:07,519
startup shutdown are commonly configured

254
00:09:07,519 --> 00:09:09,519
through active directory group policy

255
00:09:09,519 --> 00:09:12,000
objects with the scripts being located

256
00:09:12,000 --> 00:09:14,560
on their domain controllers depending on

257
00:09:14,560 --> 00:09:16,959
the importance of those logon scripts

258
00:09:16,959 --> 00:09:18,560
there's a good chance that those scripts

259
00:09:18,560 --> 00:09:20,080
are also going to be locally stored on

260
00:09:20,080 --> 00:09:21,440
these machines

261
00:09:21,440 --> 00:09:23,600
and that's just an extra set of

262
00:09:23,600 --> 00:09:25,279
redundancy in case the domain

263
00:09:25,279 --> 00:09:26,240
controllers

264
00:09:26,240 --> 00:09:28,080
or domain goes down for any reason those

265
00:09:28,080 --> 00:09:29,600
scripts still run

266
00:09:29,600 --> 00:09:31,360
the function of those scripts can vary

267
00:09:31,360 --> 00:09:33,519
greatly but the more common ones i've

268
00:09:33,519 --> 00:09:34,560
come across are

269
00:09:34,560 --> 00:09:36,720
mapping network drives checking the

270
00:09:36,720 --> 00:09:38,560
context of the user that's logging in

271
00:09:38,560 --> 00:09:40,160
applying restrictions

272
00:09:40,160 --> 00:09:43,839
just to be an extra layer of security

273
00:09:43,839 --> 00:09:45,680
so with those scripts locally on the

274
00:09:45,680 --> 00:09:47,839
machine a lot of times there's

275
00:09:47,839 --> 00:09:49,760
access control lists or other

276
00:09:49,760 --> 00:09:52,080
whitelisting type mechanisms

277
00:09:52,080 --> 00:09:54,880
implemented on those directories where

278
00:09:54,880 --> 00:09:56,399
the contents are protected

279
00:09:56,399 --> 00:09:59,360
from non-administrative users so let's

280
00:09:59,360 --> 00:10:00,959
actually go through the process

281
00:10:00,959 --> 00:10:04,240
of discovering the startup script

282
00:10:04,240 --> 00:10:06,399
so as mentioned we've got the powershell

283
00:10:06,399 --> 00:10:07,279
prompt

284
00:10:07,279 --> 00:10:09,760
and we can pass this get item command to

285
00:10:09,760 --> 00:10:11,440
enumerate the registry

286
00:10:11,440 --> 00:10:14,640
to look for items that run at logon and

287
00:10:14,640 --> 00:10:16,320
in this case we find one

288
00:10:16,320 --> 00:10:19,279
called bat located in the scripts

289
00:10:19,279 --> 00:10:20,240
directory

290
00:10:20,240 --> 00:10:23,120
on the c drive so curious about what

291
00:10:23,120 --> 00:10:25,040
that script is and what it contains we

292
00:10:25,040 --> 00:10:26,880
pass the type command on it

293
00:10:26,880 --> 00:10:29,120
to see the contents in this case it's

294
00:10:29,120 --> 00:10:30,640
just a simple

295
00:10:30,640 --> 00:10:32,880
demo script that says this is a startup

296
00:10:32,880 --> 00:10:36,560
script demo for living off the land

297
00:10:36,560 --> 00:10:38,399
once we see the startup script we look

298
00:10:38,399 --> 00:10:40,000
at the permissions on the script with

299
00:10:40,000 --> 00:10:41,200
icackles

300
00:10:41,200 --> 00:10:43,680
to see who's got permissions to either

301
00:10:43,680 --> 00:10:45,680
modify it make changes

302
00:10:45,680 --> 00:10:48,720
etc and in this case only the nt

303
00:10:48,720 --> 00:10:51,120
authority system of the machine itself

304
00:10:51,120 --> 00:10:53,360
and administrators on the machine have

305
00:10:53,360 --> 00:10:54,720
full access

306
00:10:54,720 --> 00:10:57,839
to the script so in

307
00:10:57,839 --> 00:11:00,640
wondering this operator user we have a

308
00:11:00,640 --> 00:11:02,079
powershell prompt on

309
00:11:02,079 --> 00:11:03,920
are they inadvertently added to the

310
00:11:03,920 --> 00:11:05,760
administrators group

311
00:11:05,760 --> 00:11:08,480
and through using the net user command

312
00:11:08,480 --> 00:11:09,360
we can

313
00:11:09,360 --> 00:11:12,079
see that the user is not a member of the

314
00:11:12,079 --> 00:11:13,680
administrator group

315
00:11:13,680 --> 00:11:15,680
so therefore the account will unlikely

316
00:11:15,680 --> 00:11:17,200
be able to make changes

317
00:11:17,200 --> 00:11:20,480
to that script i always like to do an

318
00:11:20,480 --> 00:11:22,480
extra set or just a second piece of

319
00:11:22,480 --> 00:11:23,920
verification

320
00:11:23,920 --> 00:11:25,680
just in case there's something else

321
00:11:25,680 --> 00:11:27,120
running in the background

322
00:11:27,120 --> 00:11:29,760
to overwrite access control lists and in

323
00:11:29,760 --> 00:11:30,480
this case

324
00:11:30,480 --> 00:11:33,040
that did not work because i opened the

325
00:11:33,040 --> 00:11:34,320
script in notepad

326
00:11:34,320 --> 00:11:36,240
i tried to make a change just by

327
00:11:36,240 --> 00:11:37,920
appending a test

328
00:11:37,920 --> 00:11:40,320
before that pause command and attempting

329
00:11:40,320 --> 00:11:41,120
to save it

330
00:11:41,120 --> 00:11:44,079
we can confirm we don't have permission

331
00:11:44,079 --> 00:11:46,240
to that file

332
00:11:46,240 --> 00:11:49,200
however we do have the permission to

333
00:11:49,200 --> 00:11:51,200
copy that file

334
00:11:51,200 --> 00:11:54,240
save it on our desktop and then make

335
00:11:54,240 --> 00:11:55,279
changes to it

336
00:11:55,279 --> 00:11:57,760
which is exactly what i did here so i

337
00:11:57,760 --> 00:12:00,000
copied that script put it on my desktop

338
00:12:00,000 --> 00:12:02,320
added those two lines to create a new

339
00:12:02,320 --> 00:12:03,519
local user

340
00:12:03,519 --> 00:12:05,519
and add it to the local administrators

341
00:12:05,519 --> 00:12:07,440
group on the machine

342
00:12:07,440 --> 00:12:09,120
so now that i have this script on my

343
00:12:09,120 --> 00:12:12,160
desktop the registry key says

344
00:12:12,160 --> 00:12:14,240
run the script in the scripts directory

345
00:12:14,240 --> 00:12:16,000
so i need to find a way to take the

346
00:12:16,000 --> 00:12:18,320
contents of the script on my desktop

347
00:12:18,320 --> 00:12:20,480
and have it be placed over writing the

348
00:12:20,480 --> 00:12:22,800
script in the scripts directory

349
00:12:22,800 --> 00:12:26,639
here's where bits admin comes into play

350
00:12:26,639 --> 00:12:29,839
so with bits admin hike it runs in an

351
00:12:29,839 --> 00:12:32,079
elevated context on this machine

352
00:12:32,079 --> 00:12:34,160
it runs as either administrator or

353
00:12:34,160 --> 00:12:36,720
system because of those auto trust

354
00:12:36,720 --> 00:12:38,959
application whitelisting rules so even

355
00:12:38,959 --> 00:12:40,399
though the context of the user i'm

356
00:12:40,399 --> 00:12:41,279
running the command

357
00:12:41,279 --> 00:12:43,200
doesn't have permission of that file

358
00:12:43,200 --> 00:12:45,440
because bits admin runs in an elevated

359
00:12:45,440 --> 00:12:46,320
context

360
00:12:46,320 --> 00:12:48,320
it should overwrite the permissions of

361
00:12:48,320 --> 00:12:49,519
the user

362
00:12:49,519 --> 00:12:51,760
so in this case i basically am telling

363
00:12:51,760 --> 00:12:52,560
bits admin

364
00:12:52,560 --> 00:12:55,120
create a transfer job and call it dragos

365
00:12:55,120 --> 00:12:56,880
if you're doing this on an engagement

366
00:12:56,880 --> 00:12:59,839
be mindful of the job you're naming it

367
00:12:59,839 --> 00:13:00,800
because

368
00:13:00,800 --> 00:13:03,360
bits admin and bits client in general

369
00:13:03,360 --> 00:13:04,320
natively

370
00:13:04,320 --> 00:13:06,160
stores these logs in windows event

371
00:13:06,160 --> 00:13:07,839
viewer like i mentioned earlier and like

372
00:13:07,839 --> 00:13:09,440
i'll mention again later

373
00:13:09,440 --> 00:13:10,959
where if you're naming it something

374
00:13:10,959 --> 00:13:12,480
blatantly obvious

375
00:13:12,480 --> 00:13:13,839
it's going to stick out like a sore

376
00:13:13,839 --> 00:13:17,839
thumb if somebody's monitoring the logs

377
00:13:17,839 --> 00:13:20,079
so once creating the job called dragos

378
00:13:20,079 --> 00:13:21,279
which we can see that happens

379
00:13:21,279 --> 00:13:22,480
successfully

380
00:13:22,480 --> 00:13:24,800
i'm adding a file to that job with

381
00:13:24,800 --> 00:13:26,560
source and destination

382
00:13:26,560 --> 00:13:28,720
so i'm telling the drago's pit's admin

383
00:13:28,720 --> 00:13:31,279
job to add this file

384
00:13:31,279 --> 00:13:33,279
source file being that startup script on

385
00:13:33,279 --> 00:13:35,519
my desktop with a destination

386
00:13:35,519 --> 00:13:37,760
overwriting what's existing in the

387
00:13:37,760 --> 00:13:39,279
scripts directory

388
00:13:39,279 --> 00:13:42,320
and as we see it was able to add

389
00:13:42,320 --> 00:13:43,760
the source and destination file

390
00:13:43,760 --> 00:13:45,440
successfully because we weren't

391
00:13:45,440 --> 00:13:46,160
presented

392
00:13:46,160 --> 00:13:49,279
with an access denied message so

393
00:13:49,279 --> 00:13:52,240
once i saw that happen now we can resume

394
00:13:52,240 --> 00:13:53,040
the job

395
00:13:53,040 --> 00:13:55,120
which is our way of telling bits admin

396
00:13:55,120 --> 00:13:56,720
we've got no further changes to the

397
00:13:56,720 --> 00:13:57,839
drago's job

398
00:13:57,839 --> 00:13:59,519
just go ahead and add it to the queue

399
00:13:59,519 --> 00:14:01,199
for processing

400
00:14:01,199 --> 00:14:03,120
depending how bits is configured in the

401
00:14:03,120 --> 00:14:04,880
environment it could either process it

402
00:14:04,880 --> 00:14:05,839
immediately

403
00:14:05,839 --> 00:14:08,160
or process it on a predetermined time

404
00:14:08,160 --> 00:14:09,199
frequency

405
00:14:09,199 --> 00:14:11,360
in this case for the proof of concept

406
00:14:11,360 --> 00:14:12,240
and the demo

407
00:14:12,240 --> 00:14:14,480
i wanted it to go right now so i told

408
00:14:14,480 --> 00:14:16,480
bits admin just go complete this job

409
00:14:16,480 --> 00:14:17,600
called dragos

410
00:14:17,600 --> 00:14:21,440
and we're able to see the job completed

411
00:14:21,440 --> 00:14:23,680
to validate there's no other jobs in the

412
00:14:23,680 --> 00:14:24,480
queue

413
00:14:24,480 --> 00:14:27,040
or just bits admin already did my

414
00:14:27,040 --> 00:14:28,320
bidding i'm good

415
00:14:28,320 --> 00:14:30,800
i'll pass bits admin reset just to clear

416
00:14:30,800 --> 00:14:31,839
the queue

417
00:14:31,839 --> 00:14:33,760
in case there were any other jobs hung

418
00:14:33,760 --> 00:14:36,160
up in this case there were none

419
00:14:36,160 --> 00:14:38,560
so to really confirm this worked the way

420
00:14:38,560 --> 00:14:39,600
i intended

421
00:14:39,600 --> 00:14:41,839
i now type the output of the drago's

422
00:14:41,839 --> 00:14:42,800
batch script in the

423
00:14:42,800 --> 00:14:45,440
scripts directory and we can now see

424
00:14:45,440 --> 00:14:47,120
those two lines appended

425
00:14:47,120 --> 00:14:49,279
to create a new local user and add it to

426
00:14:49,279 --> 00:14:52,160
the administrators group

427
00:14:52,160 --> 00:14:53,600
now even though we were able to

428
00:14:53,600 --> 00:14:55,440
successfully overwrite this script using

429
00:14:55,440 --> 00:14:56,480
bits admin

430
00:14:56,480 --> 00:14:59,680
we still have another hurdle to get over

431
00:14:59,680 --> 00:15:01,920
so in order to add users to a machine

432
00:15:01,920 --> 00:15:04,000
and add them to the administrators group

433
00:15:04,000 --> 00:15:05,360
we need to have administrative

434
00:15:05,360 --> 00:15:07,279
permissions on the machine

435
00:15:07,279 --> 00:15:10,480
which our operator does not have so for

436
00:15:10,480 --> 00:15:11,519
proof of concept

437
00:15:11,519 --> 00:15:15,040
just assuming this is a penetration test

438
00:15:15,040 --> 00:15:16,720
we would then reach out to our point of

439
00:15:16,720 --> 00:15:18,399
contact with the client

440
00:15:18,399 --> 00:15:20,880
and say something along the lines of

441
00:15:20,880 --> 00:15:21,440
like hey

442
00:15:21,440 --> 00:15:24,000
something might not be working the way

443
00:15:24,000 --> 00:15:25,440
intended we're not sure if this is a

444
00:15:25,440 --> 00:15:26,000
restriction

445
00:15:26,000 --> 00:15:27,920
on our account or something wasn't

446
00:15:27,920 --> 00:15:29,120
configured properly

447
00:15:29,120 --> 00:15:31,360
would you mind logging in just checking

448
00:15:31,360 --> 00:15:33,360
we have the access you intended us to

449
00:15:33,360 --> 00:15:34,000
have

450
00:15:34,000 --> 00:15:35,600
and everything is working properly

451
00:15:35,600 --> 00:15:37,120
before we proceed

452
00:15:37,120 --> 00:15:40,160
with our engagement a lot of times

453
00:15:40,160 --> 00:15:41,360
they'll say yeah sure

454
00:15:41,360 --> 00:15:43,519
not realizing that this request is part

455
00:15:43,519 --> 00:15:45,519
of the engagement

456
00:15:45,519 --> 00:15:49,279
which happens a lot so they log in with

457
00:15:49,279 --> 00:15:50,399
their administrative

458
00:15:50,399 --> 00:15:53,199
permissions and the script executes

459
00:15:53,199 --> 00:15:54,480
successfully

460
00:15:54,480 --> 00:15:56,959
as we can see with the image on the left

461
00:15:56,959 --> 00:15:58,240
there's the context

462
00:15:58,240 --> 00:16:00,320
you know it's a startup script demo

463
00:16:00,320 --> 00:16:01,600
living out the land

464
00:16:01,600 --> 00:16:04,639
the command completed successfully twice

465
00:16:04,639 --> 00:16:06,959
so we can assume that dragos was the

466
00:16:06,959 --> 00:16:08,480
dragos user was created

467
00:16:08,480 --> 00:16:09,440
and they were added to the

468
00:16:09,440 --> 00:16:11,759
administrators group now to someone

469
00:16:11,759 --> 00:16:12,399
that's seen

470
00:16:12,399 --> 00:16:15,600
the output of the script many many times

471
00:16:15,600 --> 00:16:17,360
it's safe to say they would either just

472
00:16:17,360 --> 00:16:18,720
minimize it or close it because they've

473
00:16:18,720 --> 00:16:20,160
seen it so many times

474
00:16:20,160 --> 00:16:22,160
they expected no changes they wouldn't

475
00:16:22,160 --> 00:16:24,560
notice command completed successfully in

476
00:16:24,560 --> 00:16:25,360
this prompts

477
00:16:25,360 --> 00:16:28,079
if they weren't aware so once that

478
00:16:28,079 --> 00:16:28,959
script runs

479
00:16:28,959 --> 00:16:30,800
they do their thing they check and make

480
00:16:30,800 --> 00:16:32,079
sure they tell us

481
00:16:32,079 --> 00:16:34,160
yeah everything is working as intended

482
00:16:34,160 --> 00:16:36,079
we say okay thank you for validating

483
00:16:36,079 --> 00:16:37,360
you know we're good to go from here

484
00:16:37,360 --> 00:16:39,519
we'll continue with the engagement

485
00:16:39,519 --> 00:16:41,199
so we'll log back in with the operator

486
00:16:41,199 --> 00:16:43,279
account achieve that powershell prompt

487
00:16:43,279 --> 00:16:44,240
again

488
00:16:44,240 --> 00:16:46,000
now we run the net users command to see

489
00:16:46,000 --> 00:16:47,440
the users on the machine

490
00:16:47,440 --> 00:16:50,639
and we can confirm dragos is a user

491
00:16:50,639 --> 00:16:52,720
so now we can run powershell as the

492
00:16:52,720 --> 00:16:54,160
dragos user

493
00:16:54,160 --> 00:16:56,240
and you can tell by the prompt below we

494
00:16:56,240 --> 00:16:58,639
ran a who am i just to confirm

495
00:16:58,639 --> 00:17:00,720
and enumerated the local administrators

496
00:17:00,720 --> 00:17:02,000
group on that machine

497
00:17:02,000 --> 00:17:04,799
and confirmed dragos is an admin we now

498
00:17:04,799 --> 00:17:07,439
have admin on that box

499
00:17:07,439 --> 00:17:09,679
so assuming this machine is domain

500
00:17:09,679 --> 00:17:10,640
joined

501
00:17:10,640 --> 00:17:13,439
we can now turn off a lot of those usb

502
00:17:13,439 --> 00:17:14,640
device restrictions

503
00:17:14,640 --> 00:17:17,679
if they were being applied through gpo

504
00:17:17,679 --> 00:17:20,640
and interact with the lsas.exe process

505
00:17:20,640 --> 00:17:22,640
creating a memory dump of it

506
00:17:22,640 --> 00:17:24,799
extracting it offline looking to harvest

507
00:17:24,799 --> 00:17:26,480
and tlm hashes

508
00:17:26,480 --> 00:17:27,919
hopefully there's going to be a domain

509
00:17:27,919 --> 00:17:29,600
account we're able to see for

510
00:17:29,600 --> 00:17:31,840
lateral movement that we can harvest for

511
00:17:31,840 --> 00:17:33,600
past the hash activities

512
00:17:33,600 --> 00:17:36,640
or we can extract you know the the sam

513
00:17:36,640 --> 00:17:38,400
security system hives

514
00:17:38,400 --> 00:17:41,520
out of hkey local machine for impacted

515
00:17:41,520 --> 00:17:45,200
secret stump or um

516
00:17:45,200 --> 00:17:47,600
we can enable w digest on the machine

517
00:17:47,600 --> 00:17:48,720
and reboot it

518
00:17:48,720 --> 00:17:50,559
and try to capture credentials and clear

519
00:17:50,559 --> 00:17:51,760
text

520
00:17:51,760 --> 00:17:54,880
for next logon attempts so as i

521
00:17:54,880 --> 00:17:56,000
mentioned

522
00:17:56,000 --> 00:17:57,840
there are so many living off the land

523
00:17:57,840 --> 00:18:00,320
techniques and what i demonstrated today

524
00:18:00,320 --> 00:18:01,200
with bits admin

525
00:18:01,200 --> 00:18:04,240
is just one example of the capabilities

526
00:18:04,240 --> 00:18:08,000
of using it for nefarious purposes

527
00:18:08,000 --> 00:18:09,760
so assuming we're in an environment with

528
00:18:09,760 --> 00:18:11,039
internet access

529
00:18:11,039 --> 00:18:13,360
we can also use bits admin to download

530
00:18:13,360 --> 00:18:14,880
files from the internet

531
00:18:14,880 --> 00:18:18,000
and execute them immediately and

532
00:18:18,000 --> 00:18:20,039
another living off the lan technique run

533
00:18:20,039 --> 00:18:21,600
dll32

534
00:18:21,600 --> 00:18:24,720
we can download our malicious dll file

535
00:18:24,720 --> 00:18:27,360
replace an existing legitimate one and

536
00:18:27,360 --> 00:18:28,320
execute it

537
00:18:28,320 --> 00:18:30,960
achieving a callback to our centralized

538
00:18:30,960 --> 00:18:32,720
command and control server

539
00:18:32,720 --> 00:18:34,320
or if you really wanted to get fancy

540
00:18:34,320 --> 00:18:36,799
with it you can by creating one-liners

541
00:18:36,799 --> 00:18:38,960
to either run a command or a sequence of

542
00:18:38,960 --> 00:18:40,880
command

543
00:18:40,880 --> 00:18:42,640
and one of the common questions i get

544
00:18:42,640 --> 00:18:44,080
asked when

545
00:18:44,080 --> 00:18:46,960
presenting conversations like this is

546
00:18:46,960 --> 00:18:48,000
aaron why are you

547
00:18:48,000 --> 00:18:50,640
telling us all about your ttps you know

548
00:18:50,640 --> 00:18:52,400
if it's successful for you why are you

549
00:18:52,400 --> 00:18:54,799
risking it getting burned

550
00:18:54,799 --> 00:18:56,960
as penetration testers at dragos we're

551
00:18:56,960 --> 00:18:59,039
not here to point fingers we're not here

552
00:18:59,039 --> 00:19:00,000
to judge

553
00:19:00,000 --> 00:19:02,640
we're here to raise awareness and

554
00:19:02,640 --> 00:19:03,120
there's

555
00:19:03,120 --> 00:19:05,760
a lot of belief especially me personally

556
00:19:05,760 --> 00:19:06,880
that there's been

557
00:19:06,880 --> 00:19:09,679
so much attention put on the prevention

558
00:19:09,679 --> 00:19:11,120
of these things from happening

559
00:19:11,120 --> 00:19:13,840
and not enough attention on monitoring

560
00:19:13,840 --> 00:19:15,200
and detecting it

561
00:19:15,200 --> 00:19:18,000
because as you saw there was an access

562
00:19:18,000 --> 00:19:18,799
control list

563
00:19:18,799 --> 00:19:22,080
on that scripts directory where an

564
00:19:22,080 --> 00:19:24,080
operator or owner would think only

565
00:19:24,080 --> 00:19:25,919
admins can make changes to this

566
00:19:25,919 --> 00:19:27,039
directory

567
00:19:27,039 --> 00:19:31,039
or good i demonstrated pretty quickly

568
00:19:31,039 --> 00:19:34,080
no i was able to get around that so with

569
00:19:34,080 --> 00:19:34,400
that

570
00:19:34,400 --> 00:19:36,080
if something were to happen if you

571
00:19:36,080 --> 00:19:38,080
weren't monitoring or looking for it

572
00:19:38,080 --> 00:19:39,679
you'd have a tough time answering the

573
00:19:39,679 --> 00:19:41,760
questions how did it happen

574
00:19:41,760 --> 00:19:44,880
when did it happen who did it so with

575
00:19:44,880 --> 00:19:45,760
that

576
00:19:45,760 --> 00:19:48,559
i want to jump into how you can detect

577
00:19:48,559 --> 00:19:50,240
this activity

578
00:19:50,240 --> 00:19:52,080
and one of the ways to do that is

579
00:19:52,080 --> 00:19:54,160
monitoring windows event logs

580
00:19:54,160 --> 00:19:56,160
because like i mentioned this is enabled

581
00:19:56,160 --> 00:19:57,600
and turned on by default

582
00:19:57,600 --> 00:19:59,360
in the microsoft windows operating

583
00:19:59,360 --> 00:20:02,000
system and the event log captures

584
00:20:02,000 --> 00:20:04,480
everything related to the bit service

585
00:20:04,480 --> 00:20:06,159
and these logs are located

586
00:20:06,159 --> 00:20:08,480
in this location of the event viewer

587
00:20:08,480 --> 00:20:10,480
applications and services logs

588
00:20:10,480 --> 00:20:13,440
microsoft windows bits client

589
00:20:13,440 --> 00:20:15,520
operational

590
00:20:15,520 --> 00:20:18,320
and there's five event ids i recommend

591
00:20:18,320 --> 00:20:18,880
paying

592
00:20:18,880 --> 00:20:21,919
particularly close attention to so event

593
00:20:21,919 --> 00:20:22,720
id3

594
00:20:22,720 --> 00:20:25,520
is bitservice created in your job this

595
00:20:25,520 --> 00:20:27,799
is the equivalent of me doing

596
00:20:27,799 --> 00:20:30,880
bitsammon.exe forward slash create

597
00:20:30,880 --> 00:20:33,280
dragos that's me creating the drago's

598
00:20:33,280 --> 00:20:35,200
job this would show up in event viewer

599
00:20:35,200 --> 00:20:36,400
event id3

600
00:20:36,400 --> 00:20:40,240
drago's job was created event id4

601
00:20:40,240 --> 00:20:43,280
transfer job is complete again that's me

602
00:20:43,280 --> 00:20:46,000
forcing it to go ahead run it right now

603
00:20:46,000 --> 00:20:48,400
don't worry about the queue there should

604
00:20:48,400 --> 00:20:49,760
be no user

605
00:20:49,760 --> 00:20:52,880
manually creating or completing job

606
00:20:52,880 --> 00:20:56,799
jobs with bits admin event id5

607
00:20:56,799 --> 00:20:59,120
the job is cancelled like i had

608
00:20:59,120 --> 00:21:00,880
mentioned if there's someone trying to

609
00:21:00,880 --> 00:21:01,360
get

610
00:21:01,360 --> 00:21:03,520
bits having to work it's not working the

611
00:21:03,520 --> 00:21:04,960
way they think they created

612
00:21:04,960 --> 00:21:07,120
numerous jobs they're just sitting there

613
00:21:07,120 --> 00:21:09,280
hanging they want to clear it all and do

614
00:21:09,280 --> 00:21:10,480
a clean slate

615
00:21:10,480 --> 00:21:13,360
they do bits admin exe cancel to wipe

616
00:21:13,360 --> 00:21:15,200
out all the jobs from the queue

617
00:21:15,200 --> 00:21:17,840
if anyone does that on a machine

618
00:21:17,840 --> 00:21:18,880
something's going on

619
00:21:18,880 --> 00:21:22,400
right then and there and then event ids

620
00:21:22,400 --> 00:21:24,640
59 and 60

621
00:21:24,640 --> 00:21:26,799
will just word it as starting and

622
00:21:26,799 --> 00:21:28,240
stopping the job

623
00:21:28,240 --> 00:21:29,760
but the interesting thing about both

624
00:21:29,760 --> 00:21:31,360
these ids is

625
00:21:31,360 --> 00:21:33,280
they also contain the download or upload

626
00:21:33,280 --> 00:21:35,840
urls that might be interesting

627
00:21:35,840 --> 00:21:37,679
so if the machine does have internet

628
00:21:37,679 --> 00:21:40,080
access looking at these event ids will

629
00:21:40,080 --> 00:21:40,640
tell you

630
00:21:40,640 --> 00:21:43,280
where bits is going to download jobs so

631
00:21:43,280 --> 00:21:44,080
something is being

632
00:21:44,080 --> 00:21:45,919
downloaded from a source that's not

633
00:21:45,919 --> 00:21:48,240
normal you'd be able to see that in the

634
00:21:48,240 --> 00:21:49,120
event viewer

635
00:21:49,120 --> 00:21:53,280
natively if you're not capturing windows

636
00:21:53,280 --> 00:21:55,039
event viewers assuming you've got some

637
00:21:55,039 --> 00:21:56,960
other type of log aggregator

638
00:21:56,960 --> 00:21:59,840
whether it's syslog sysmon or you've got

639
00:21:59,840 --> 00:22:00,720
another sim

640
00:22:00,720 --> 00:22:03,280
like splunk pay attention to the command

641
00:22:03,280 --> 00:22:05,760
line options like i demonstrated

642
00:22:05,760 --> 00:22:08,480
so transfer is the transfer of a file

643
00:22:08,480 --> 00:22:10,480
from one location to another

644
00:22:10,480 --> 00:22:13,120
and the example i did i just copied it

645
00:22:13,120 --> 00:22:14,000
so it's still

646
00:22:14,000 --> 00:22:16,080
maintained on my desktop but let's

647
00:22:16,080 --> 00:22:18,000
assume there's a dll file

648
00:22:18,000 --> 00:22:21,200
in a trusted directory and i don't want

649
00:22:21,200 --> 00:22:23,360
to have it anywhere else i just want it

650
00:22:23,360 --> 00:22:24,080
there

651
00:22:24,080 --> 00:22:26,720
or in another location i can run bits

652
00:22:26,720 --> 00:22:27,919
admin transfer

653
00:22:27,919 --> 00:22:30,000
to physically move it from one location

654
00:22:30,000 --> 00:22:31,840
to another

655
00:22:31,840 --> 00:22:33,600
again like i mentioned there should be

656
00:22:33,600 --> 00:22:36,080
no users going in manually creating or

657
00:22:36,080 --> 00:22:38,400
adding files to jobs

658
00:22:38,400 --> 00:22:41,120
and the set notify the set minimum retry

659
00:22:41,120 --> 00:22:43,520
set custom headers

660
00:22:43,520 --> 00:22:46,000
all those are defense evasion techniques

661
00:22:46,000 --> 00:22:48,320
so if you've got community rules

662
00:22:48,320 --> 00:22:50,880
snort anything like that that's looking

663
00:22:50,880 --> 00:22:52,799
for common headers found

664
00:22:52,799 --> 00:22:56,159
in iocs attackers can pass that set

665
00:22:56,159 --> 00:22:58,400
custom headers to set a custom header

666
00:22:58,400 --> 00:23:01,360
to evade that defense mechanism and

667
00:23:01,360 --> 00:23:02,080
resume

668
00:23:02,080 --> 00:23:04,400
like i had mentioned no user should be

669
00:23:04,400 --> 00:23:06,559
going in manually doing these jobs

670
00:23:06,559 --> 00:23:08,480
and like i mentioned earlier bits admin

671
00:23:08,480 --> 00:23:10,240
can also be interacted with

672
00:23:10,240 --> 00:23:12,880
through powershell so also pay attention

673
00:23:12,880 --> 00:23:13,520
to your

674
00:23:13,520 --> 00:23:16,720
powershell logs or other admin type logs

675
00:23:16,720 --> 00:23:18,320
that can also contain information

676
00:23:18,320 --> 00:23:19,919
relating to bits activity

677
00:23:19,919 --> 00:23:22,240
i know turning on those powershell logs

678
00:23:22,240 --> 00:23:23,760
can be super tedious

679
00:23:23,760 --> 00:23:25,520
but at least you can just look for these

680
00:23:25,520 --> 00:23:27,360
commands that i've highlighted on the

681
00:23:27,360 --> 00:23:28,000
screen here

682
00:23:28,000 --> 00:23:31,919
as it relates to bits admin

683
00:23:31,919 --> 00:23:33,840
so like i mentioned there's tons of

684
00:23:33,840 --> 00:23:36,320
living off the land binaries and scripts

685
00:23:36,320 --> 00:23:38,960
bits admin is only one of them we've

686
00:23:38,960 --> 00:23:40,240
used

687
00:23:40,240 --> 00:23:42,159
a handful of others actually many others

688
00:23:42,159 --> 00:23:43,440
in our engagements

689
00:23:43,440 --> 00:23:45,600
successfully so if you're leaving here

690
00:23:45,600 --> 00:23:46,559
curious

691
00:23:46,559 --> 00:23:48,480
what other types of binaries and scripts

692
00:23:48,480 --> 00:23:50,400
are out there for living off the land

693
00:23:50,400 --> 00:23:51,360
techniques

694
00:23:51,360 --> 00:23:53,600
i will share this project with you it's

695
00:23:53,600 --> 00:23:55,760
open source and community driven

696
00:23:55,760 --> 00:23:58,159
where they talk about other potential

697
00:23:58,159 --> 00:24:00,080
binaries or scripts used in living off

698
00:24:00,080 --> 00:24:01,600
the land techniques

699
00:24:01,600 --> 00:24:03,679
and the site is interesting not only

700
00:24:03,679 --> 00:24:05,120
because it talks about

701
00:24:05,120 --> 00:24:06,880
how they are and how they're leveraged

702
00:24:06,880 --> 00:24:08,559
but they also post

703
00:24:08,559 --> 00:24:10,720
if applicable mitigation or detection

704
00:24:10,720 --> 00:24:12,240
strategies with them

705
00:24:12,240 --> 00:24:14,080
so if you are curious and other living

706
00:24:14,080 --> 00:24:15,520
off the land techniques

707
00:24:15,520 --> 00:24:17,520
detections and mitigation strategies for

708
00:24:17,520 --> 00:24:19,679
them i highly encourage you to go visit

709
00:24:19,679 --> 00:24:20,480
the site

710
00:24:20,480 --> 00:24:23,600
bookmark it check it on a periodic basis

711
00:24:23,600 --> 00:24:26,640
because it is being updated as new ttps

712
00:24:26,640 --> 00:24:30,159
are discovered so with that

713
00:24:30,159 --> 00:24:31,520
i'd like to thank you for being here

714
00:24:31,520 --> 00:24:33,279
with me today hopefully i didn't ramble

715
00:24:33,279 --> 00:24:34,960
too fast for you

716
00:24:34,960 --> 00:24:36,880
please feel free to reach out to me with

717
00:24:36,880 --> 00:24:38,400
any questions you have

718
00:24:38,400 --> 00:24:41,039
i can be reached by my drago's email

719
00:24:41,039 --> 00:24:43,279
which is a boy to dragos.com

720
00:24:43,279 --> 00:24:45,039
or feel free to reach out to me and

721
00:24:45,039 --> 00:24:46,559
connect with me on twitter

722
00:24:46,559 --> 00:24:49,440
my handle is at ics underscore blitz and

723
00:24:49,440 --> 00:24:50,799
i'd be happy to answer

724
00:24:50,799 --> 00:24:54,799
any questions that you may have

725
00:24:55,360 --> 00:24:57,039
again thank you for being here with me

726
00:24:57,039 --> 00:24:58,400
today thank you to

727
00:24:58,400 --> 00:25:00,880
defcon and the ics village for giving me

728
00:25:00,880 --> 00:25:02,720
the opportunity to be here

729
00:25:02,720 --> 00:25:04,559
i hope you and your families all stay

730
00:25:04,559 --> 00:25:06,799
safe and healthy and i hope to be able

731
00:25:06,799 --> 00:25:07,840
to meet with you all

732
00:25:07,840 --> 00:25:14,320
one day soon take care

