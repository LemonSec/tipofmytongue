1
00:00:00,240 --> 00:00:02,560
hello and welcome to our talk top down

2
00:00:02,560 --> 00:00:04,880
and bottom up exploiting vulnerabilities

3
00:00:04,880 --> 00:00:06,799
in the ot cloud era

4
00:00:06,799 --> 00:00:09,280
um before we begin let's uh talk a

5
00:00:09,280 --> 00:00:10,480
little bit about

6
00:00:10,480 --> 00:00:14,559
who we are so um

7
00:00:14,880 --> 00:00:16,960
my name is sharon brazinov i'm a

8
00:00:16,960 --> 00:00:18,480
vulnerability team res

9
00:00:18,480 --> 00:00:19,920
vulnerability research team lead at

10
00:00:19,920 --> 00:00:23,519
clarity uh and with me is uri katz

11
00:00:23,519 --> 00:00:25,599
our senior security researcher at

12
00:00:25,599 --> 00:00:26,880
clarity

13
00:00:26,880 --> 00:00:30,160
and we're part of a team that

14
00:00:30,160 --> 00:00:32,719
researching and trying to find

15
00:00:32,719 --> 00:00:33,840
vulnerabilities

16
00:00:33,840 --> 00:00:36,800
in ot equipment so you can see in our

17
00:00:36,800 --> 00:00:37,440
background

18
00:00:37,440 --> 00:00:39,680
in the in the picture in front of you

19
00:00:39,680 --> 00:00:40,640
our cool

20
00:00:40,640 --> 00:00:42,960
lab this is our playground where we're

21
00:00:42,960 --> 00:00:44,559
trying to find and exploit

22
00:00:44,559 --> 00:00:46,559
vulnerabilities uh we're working with

23
00:00:46,559 --> 00:00:47,920
different vendors

24
00:00:47,920 --> 00:00:50,160
to find vulnerabilities disclose the

25
00:00:50,160 --> 00:00:52,079
vulnerabilities to the vendors

26
00:00:52,079 --> 00:00:55,680
and basically we are working with them

27
00:00:55,680 --> 00:00:58,160
to fix any security issues that we're

28
00:00:58,160 --> 00:00:59,359
finding

29
00:00:59,359 --> 00:01:02,000
and eventually we're publishing our

30
00:01:02,000 --> 00:01:02,960
research

31
00:01:02,960 --> 00:01:04,959
on the vulnerabilities that we're

32
00:01:04,959 --> 00:01:06,720
finding so you can see

33
00:01:06,720 --> 00:01:08,880
the table in front of you of some of the

34
00:01:08,880 --> 00:01:10,560
vulnerability that we found

35
00:01:10,560 --> 00:01:13,680
in many of the ics vendors

36
00:01:13,680 --> 00:01:16,000
we're also participating in different

37
00:01:16,000 --> 00:01:17,119
competitions

38
00:01:17,119 --> 00:01:20,159
uh we've participated in pawn to own in

39
00:01:20,159 --> 00:01:21,119
2020

40
00:01:21,119 --> 00:01:25,520
uh we've participated in defcon ics

41
00:01:25,520 --> 00:01:28,159
ctf where we won the first place and

42
00:01:28,159 --> 00:01:28,960
we're doing

43
00:01:28,960 --> 00:01:31,520
conducting uh lots of research and

44
00:01:31,520 --> 00:01:32,400
competitions

45
00:01:32,400 --> 00:01:35,680
in those areas so with

46
00:01:35,680 --> 00:01:38,479
that we would like to discuss uh today a

47
00:01:38,479 --> 00:01:40,560
little bit about

48
00:01:40,560 --> 00:01:43,920
scada infrastructure in the cloud so we

49
00:01:43,920 --> 00:01:45,520
would like to just

50
00:01:45,520 --> 00:01:49,280
describe what it means of ics

51
00:01:49,280 --> 00:01:52,720
security uh in the cloud what it means

52
00:01:52,720 --> 00:01:53,280
to have

53
00:01:53,280 --> 00:01:56,399
infrastructure uh in the cloud and how

54
00:01:56,399 --> 00:01:57,119
can

55
00:01:57,119 --> 00:02:00,399
devices ics devices and ot equipment

56
00:02:00,399 --> 00:02:03,280
can communicate with uh cloud

57
00:02:03,280 --> 00:02:04,479
infrastructure

58
00:02:04,479 --> 00:02:07,439
outside the perimeter and outside the lt

59
00:02:07,439 --> 00:02:08,160
network

60
00:02:08,160 --> 00:02:12,560
so let's start uh with

61
00:02:12,560 --> 00:02:16,239
what is a typical scada infrastructure

62
00:02:16,239 --> 00:02:19,360
so we have the purdue model as you're

63
00:02:19,360 --> 00:02:22,400
all aware of we have a

64
00:02:22,400 --> 00:02:24,640
couple of layers that in each layer we

65
00:02:24,640 --> 00:02:26,560
have different devices with different

66
00:02:26,560 --> 00:02:27,760
capabilities

67
00:02:27,760 --> 00:02:31,120
and roles in the lowest level in level

68
00:02:31,120 --> 00:02:33,120
zero we have a field devices field

69
00:02:33,120 --> 00:02:34,959
devices or actuators

70
00:02:34,959 --> 00:02:38,160
and sensors they are communicating

71
00:02:38,160 --> 00:02:41,519
they're sensing and uh

72
00:02:41,519 --> 00:02:44,560
doing actual and physical work

73
00:02:44,560 --> 00:02:47,920
in our world above that we have

74
00:02:47,920 --> 00:02:50,480
plcs so we have the brains plc's and

75
00:02:50,480 --> 00:02:51,680
rtus

76
00:02:51,680 --> 00:02:54,239
and above that we have hmis and

77
00:02:54,239 --> 00:02:55,680
engineering stations

78
00:02:55,680 --> 00:02:58,080
that are controlling and interacting

79
00:02:58,080 --> 00:02:59,200
with the plcs

80
00:02:59,200 --> 00:03:02,159
so for example if i would like to

81
00:03:02,159 --> 00:03:03,120
download code

82
00:03:03,120 --> 00:03:06,239
to the plc i would use a generic station

83
00:03:06,239 --> 00:03:07,440
to program

84
00:03:07,440 --> 00:03:10,720
uh the the logic and transfer it to the

85
00:03:10,720 --> 00:03:12,640
plc

86
00:03:12,640 --> 00:03:16,319
in which the plc will digest the logic

87
00:03:16,319 --> 00:03:18,400
will execute the logic and control the

88
00:03:18,400 --> 00:03:20,480
field devices the sensors and the

89
00:03:20,480 --> 00:03:21,440
actuators

90
00:03:21,440 --> 00:03:24,319
so if we're taking this image or the

91
00:03:24,319 --> 00:03:26,799
purdue model to be very concise we can

92
00:03:26,799 --> 00:03:28,799
see here just engineering station and

93
00:03:28,799 --> 00:03:29,440
hmi

94
00:03:29,440 --> 00:03:32,959
communicating and interacting with plc's

95
00:03:32,959 --> 00:03:36,239
and the plc's are connected to valves

96
00:03:36,239 --> 00:03:38,959
in this example and the plc's are

97
00:03:38,959 --> 00:03:39,760
actually

98
00:03:39,760 --> 00:03:42,400
doing something physical sorry the

99
00:03:42,400 --> 00:03:44,159
valves are doing something physical in

100
00:03:44,159 --> 00:03:44,959
our world

101
00:03:44,959 --> 00:03:46,959
where the plcs are controlling those

102
00:03:46,959 --> 00:03:49,280
valves and the humans the engineers

103
00:03:49,280 --> 00:03:50,480
still paradorus

104
00:03:50,480 --> 00:03:52,720
are controlling the plc's through the

105
00:03:52,720 --> 00:03:53,760
engineering station

106
00:03:53,760 --> 00:03:56,400
and the hmi the engineering station is

107
00:03:56,400 --> 00:03:57,599
meant

108
00:03:57,599 --> 00:04:00,640
for programming and configuration

109
00:04:00,640 --> 00:04:04,080
mostly while the hmi is mostly for data

110
00:04:04,080 --> 00:04:05,120
acquisition

111
00:04:05,120 --> 00:04:06,799
and for the engineers to understand

112
00:04:06,799 --> 00:04:09,519
what's going on within the process

113
00:04:09,519 --> 00:04:13,439
so if we're if we're taking this further

114
00:04:13,439 --> 00:04:16,478
today there is a huge trend to move

115
00:04:16,478 --> 00:04:19,199
everything to the cloud it started with

116
00:04:19,199 --> 00:04:20,478
it infrastructure

117
00:04:20,478 --> 00:04:23,520
servers are no longer physical boxes

118
00:04:23,520 --> 00:04:25,759
they're kind of a server somewhere in

119
00:04:25,759 --> 00:04:26,639
the cloud

120
00:04:26,639 --> 00:04:30,240
and it's starting to get into the ics

121
00:04:30,240 --> 00:04:31,600
and ot networks too

122
00:04:31,600 --> 00:04:34,160
and we're seeing more and more devices

123
00:04:34,160 --> 00:04:35,840
starting to be controlled

124
00:04:35,840 --> 00:04:38,160
and managed by cloud-based

125
00:04:38,160 --> 00:04:39,199
infrastructure

126
00:04:39,199 --> 00:04:41,440
and we're also seeing this through

127
00:04:41,440 --> 00:04:43,040
cloud-based infra

128
00:04:43,040 --> 00:04:45,680
cloud-based scada infrastructure as well

129
00:04:45,680 --> 00:04:46,639
so

130
00:04:46,639 --> 00:04:48,960
why do people want to move to the cloud

131
00:04:48,960 --> 00:04:50,240
there are a couple of reasons

132
00:04:50,240 --> 00:04:53,600
first of all telemetry so

133
00:04:53,600 --> 00:04:56,160
all the devices are transmitting

134
00:04:56,160 --> 00:04:56,960
telemetry

135
00:04:56,960 --> 00:04:59,759
always to the cloud so it's very easy to

136
00:04:59,759 --> 00:05:01,520
control and understand what's going on

137
00:05:01,520 --> 00:05:03,280
in all of the devices there are nice

138
00:05:03,280 --> 00:05:04,400
dashboards and

139
00:05:04,400 --> 00:05:06,720
trends and graphs so it's easier to

140
00:05:06,720 --> 00:05:07,680
understand what's going

141
00:05:07,680 --> 00:05:10,560
on in terms of telemetry and logs the

142
00:05:10,560 --> 00:05:12,560
management of logic

143
00:05:12,560 --> 00:05:16,000
can be done through the cloud so usually

144
00:05:16,000 --> 00:05:18,479
there is a console management that you

145
00:05:18,479 --> 00:05:19,120
can

146
00:05:19,120 --> 00:05:22,639
go into and manage all of the devices

147
00:05:22,639 --> 00:05:23,680
that are being

148
00:05:23,680 --> 00:05:25,520
controlled by the the cloud

149
00:05:25,520 --> 00:05:27,039
infrastructure which means

150
00:05:27,039 --> 00:05:29,759
we can download logic through the cloud

151
00:05:29,759 --> 00:05:31,759
to all of the devices at once so it's

152
00:05:31,759 --> 00:05:33,919
very easy setup

153
00:05:33,919 --> 00:05:36,080
we can have lots of diagnostics and

154
00:05:36,080 --> 00:05:37,600
troubleshooting because

155
00:05:37,600 --> 00:05:39,520
everything is connected to the cloud you

156
00:05:39,520 --> 00:05:42,000
don't need to be inside then the network

157
00:05:42,000 --> 00:05:43,039
you can be

158
00:05:43,039 --> 00:05:45,600
somewhere in the internet just go online

159
00:05:45,600 --> 00:05:46,560
to the website

160
00:05:46,560 --> 00:05:49,360
the console management that is exposed

161
00:05:49,360 --> 00:05:50,479
to the internet

162
00:05:50,479 --> 00:05:53,600
and diagnose and do some troubleshooting

163
00:05:53,600 --> 00:05:56,720
get all the logs and manage the

164
00:05:56,720 --> 00:05:59,840
uh the fingers manage the logic of the

165
00:05:59,840 --> 00:06:00,720
devices

166
00:06:00,720 --> 00:06:03,919
and control the devices remotely without

167
00:06:03,919 --> 00:06:06,240
the need to be physically inside the

168
00:06:06,240 --> 00:06:06,960
network

169
00:06:06,960 --> 00:06:09,840
and obvious obviously it's a centralized

170
00:06:09,840 --> 00:06:11,199
view of processes

171
00:06:11,199 --> 00:06:13,360
and redundancy so when we're talking

172
00:06:13,360 --> 00:06:15,680
about cloud-based

173
00:06:15,680 --> 00:06:18,720
infrastructure we're we're usually

174
00:06:18,720 --> 00:06:21,039
talking about lots of instances in

175
00:06:21,039 --> 00:06:22,960
different regions so we have lots of

176
00:06:22,960 --> 00:06:24,080
redundancy

177
00:06:24,080 --> 00:06:26,160
and we can control and manage all of the

178
00:06:26,160 --> 00:06:28,960
devices that are directly connected

179
00:06:28,960 --> 00:06:31,759
to the cloud so if we're taking this a

180
00:06:31,759 --> 00:06:32,160
bit

181
00:06:32,160 --> 00:06:35,919
further and we're reevaluating the new

182
00:06:35,919 --> 00:06:37,759
produce model so basically it's all

183
00:06:37,759 --> 00:06:39,120
broken we don't have

184
00:06:39,120 --> 00:06:41,520
these layers anymore because all the

185
00:06:41,520 --> 00:06:43,280
plc's

186
00:06:43,280 --> 00:06:45,759
and when we're talking about ics

187
00:06:45,759 --> 00:06:47,280
infrastructure that is connected to the

188
00:06:47,280 --> 00:06:47,759
cloud

189
00:06:47,759 --> 00:06:50,560
all the plc's all the hmis all the the

190
00:06:50,560 --> 00:06:51,599
generic stations

191
00:06:51,599 --> 00:06:54,080
are basically controlled and managed

192
00:06:54,080 --> 00:06:55,120
through the cloud

193
00:06:55,120 --> 00:06:57,280
so there is no longer need for the

194
00:06:57,280 --> 00:06:58,720
purdue module because

195
00:06:58,720 --> 00:07:01,440
everything is connected and managed

196
00:07:01,440 --> 00:07:02,000
through the

197
00:07:02,000 --> 00:07:04,560
cloud all the plc's are connected to the

198
00:07:04,560 --> 00:07:06,000
cloud from one side

199
00:07:06,000 --> 00:07:09,280
and the cloud or the management console

200
00:07:09,280 --> 00:07:11,120
which is basically a website

201
00:07:11,120 --> 00:07:14,319
in the cloud uh of which engineers

202
00:07:14,319 --> 00:07:18,000
operators administrators can log in to

203
00:07:18,000 --> 00:07:19,039
the internet

204
00:07:19,039 --> 00:07:22,400
uh in to the webpage in the internet

205
00:07:22,400 --> 00:07:23,199
somewhere

206
00:07:23,199 --> 00:07:26,400
uh in the cloud we're seeing and control

207
00:07:26,400 --> 00:07:28,160
and manage these devices

208
00:07:28,160 --> 00:07:31,919
so if we reevaluating the

209
00:07:31,919 --> 00:07:33,680
the little screenshot that we've seen

210
00:07:33,680 --> 00:07:35,919
before so the engineering the hminder

211
00:07:35,919 --> 00:07:36,800
plc

212
00:07:36,800 --> 00:07:39,280
now we don't need to be in the same

213
00:07:39,280 --> 00:07:40,080
network

214
00:07:40,080 --> 00:07:43,919
because the plc's are connected directly

215
00:07:43,919 --> 00:07:44,639
outside

216
00:07:44,639 --> 00:07:46,960
to the parameter connected directly to

217
00:07:46,960 --> 00:07:47,840
the cloud

218
00:07:47,840 --> 00:07:50,800
which is a server somewhat somewhere in

219
00:07:50,800 --> 00:07:51,919
one of the

220
00:07:51,919 --> 00:07:55,280
cloud providers such as aws azure

221
00:07:55,280 --> 00:07:58,879
or google computer compute gcp

222
00:07:58,879 --> 00:08:01,520
so we're having the functionality of the

223
00:08:01,520 --> 00:08:02,160
hmi

224
00:08:02,160 --> 00:08:04,800
and engineering provided through the

225
00:08:04,800 --> 00:08:06,240
console management

226
00:08:06,240 --> 00:08:09,280
in the cloud where engineers can just go

227
00:08:09,280 --> 00:08:11,199
online to one of the websites

228
00:08:11,199 --> 00:08:13,840
and manage the devices that are

229
00:08:13,840 --> 00:08:15,440
controlled by the

230
00:08:15,440 --> 00:08:17,520
management console and the scada

231
00:08:17,520 --> 00:08:19,280
infrastructure through the cloud

232
00:08:19,280 --> 00:08:22,080
so everything is much easier for

233
00:08:22,080 --> 00:08:23,039
engineers

234
00:08:23,039 --> 00:08:25,520
and asset owners because now they can

235
00:08:25,520 --> 00:08:26,400
control

236
00:08:26,400 --> 00:08:28,879
all the equipment through the cloud

237
00:08:28,879 --> 00:08:29,759
which means

238
00:08:29,759 --> 00:08:31,840
through the internet and they don't have

239
00:08:31,840 --> 00:08:33,360
to be physically

240
00:08:33,360 --> 00:08:36,559
present inside the network

241
00:08:36,559 --> 00:08:39,519
so what kind of roles do we have with

242
00:08:39,519 --> 00:08:41,519
this kind of new infrastructures

243
00:08:41,519 --> 00:08:44,560
so we have the same old roles

244
00:08:44,560 --> 00:08:47,839
such as programmers that are writing the

245
00:08:47,839 --> 00:08:48,560
logic

246
00:08:48,560 --> 00:08:51,920
we have management which are uh kind of

247
00:08:51,920 --> 00:08:54,320
uh the

248
00:08:54,320 --> 00:08:57,839
people are managing the the ot managers

249
00:08:57,839 --> 00:09:00,160
that are managing the operations and

250
00:09:00,160 --> 00:09:01,680
managing the process

251
00:09:01,680 --> 00:09:04,640
so they're doing kind of uh view reports

252
00:09:04,640 --> 00:09:06,640
with kind of hmi functionality

253
00:09:06,640 --> 00:09:08,480
or device commissioning when they're

254
00:09:08,480 --> 00:09:10,880
buying new devices and we're also having

255
00:09:10,880 --> 00:09:12,399
the administration

256
00:09:12,399 --> 00:09:15,200
uh level which is responsible for

257
00:09:15,200 --> 00:09:16,800
creating new accounts and they're

258
00:09:16,800 --> 00:09:18,480
responsible for security so

259
00:09:18,480 --> 00:09:20,839
all of these different walls are

260
00:09:20,839 --> 00:09:22,000
communicating

261
00:09:22,000 --> 00:09:24,720
uh to the cloud-based management console

262
00:09:24,720 --> 00:09:25,200
so

263
00:09:25,200 --> 00:09:26,959
they're communicating with the

264
00:09:26,959 --> 00:09:28,560
management console somewhere in the

265
00:09:28,560 --> 00:09:29,360
cloud

266
00:09:29,360 --> 00:09:32,399
basically and usually it's a website

267
00:09:32,399 --> 00:09:33,440
where they can

268
00:09:33,440 --> 00:09:37,760
go online log in and then

269
00:09:37,760 --> 00:09:39,600
depending the functionality they can

270
00:09:39,600 --> 00:09:41,440
program they can upload

271
00:09:41,440 --> 00:09:44,320
a program or logic to be transferred to

272
00:09:44,320 --> 00:09:45,040
the end

273
00:09:45,040 --> 00:09:48,080
device to the edge device or they can

274
00:09:48,080 --> 00:09:51,920
view reports it's kind of a hmi screen

275
00:09:51,920 --> 00:09:54,880
you would say or do some kind of

276
00:09:54,880 --> 00:09:56,240
administration

277
00:09:56,240 --> 00:09:59,279
processes such as creating new accounts

278
00:09:59,279 --> 00:10:02,839
for uh engineers or ot managers

279
00:10:02,839 --> 00:10:06,000
or fix uh

280
00:10:06,000 --> 00:10:08,800
permissions and policy for other users

281
00:10:08,800 --> 00:10:09,360
so

282
00:10:09,360 --> 00:10:11,760
all of these work roles or different

283
00:10:11,760 --> 00:10:12,880
personas

284
00:10:12,880 --> 00:10:16,000
in uh in the this infrastructure are

285
00:10:16,000 --> 00:10:16,959
communicating

286
00:10:16,959 --> 00:10:20,480
with one entity which is the cloud-based

287
00:10:20,480 --> 00:10:21,680
management console

288
00:10:21,680 --> 00:10:24,560
and everything from there is flowing to

289
00:10:24,560 --> 00:10:27,040
the plc's or to the end devices

290
00:10:27,040 --> 00:10:30,720
which can be other devices than plc's

291
00:10:30,720 --> 00:10:34,560
and control and manage these end devices

292
00:10:34,560 --> 00:10:37,200
through the management console so this

293
00:10:37,200 --> 00:10:37,680
is

294
00:10:37,680 --> 00:10:39,839
the new era where everything is

295
00:10:39,839 --> 00:10:42,240
connected directly to the internet

296
00:10:42,240 --> 00:10:46,399
and there is no no longer need for vpn

297
00:10:46,399 --> 00:10:47,360
accesses

298
00:10:47,360 --> 00:10:50,320
or other kind of uh phys being

299
00:10:50,320 --> 00:10:51,279
physically

300
00:10:51,279 --> 00:10:54,720
present inside the ot network this is

301
00:10:54,720 --> 00:10:57,920
the modern era now let's

302
00:10:57,920 --> 00:11:00,959
we want to give you an example because

303
00:11:00,959 --> 00:11:03,279
all we said up until now is kind of

304
00:11:03,279 --> 00:11:05,440
abstract there are plcs and devices

305
00:11:05,440 --> 00:11:06,079
connected

306
00:11:06,079 --> 00:11:08,800
to a cloud-based management console and

307
00:11:08,800 --> 00:11:10,000
we have

308
00:11:10,000 --> 00:11:12,160
engineers communicating with this

309
00:11:12,160 --> 00:11:14,800
console to control the end devices but

310
00:11:14,800 --> 00:11:18,320
let's give a a real example and we have

311
00:11:18,320 --> 00:11:19,279
codices

312
00:11:19,279 --> 00:11:22,480
so cordyce's is

313
00:11:22,480 --> 00:11:25,600
european company it's a it's a great

314
00:11:25,600 --> 00:11:28,399
vendor we're working closely with

315
00:11:28,399 --> 00:11:30,880
and they're developing uh their

316
00:11:30,880 --> 00:11:32,320
development system which

317
00:11:32,320 --> 00:11:34,800
enables programming and configurations

318
00:11:34,800 --> 00:11:36,079
of plcs

319
00:11:36,079 --> 00:11:39,040
so you can you can use their platform to

320
00:11:39,040 --> 00:11:39,519
create

321
00:11:39,519 --> 00:11:42,160
logic and download this logic to the

322
00:11:42,160 --> 00:11:43,040
plcs

323
00:11:43,040 --> 00:11:46,560
the plcs are usually running the codesys

324
00:11:46,560 --> 00:11:47,519
runtime

325
00:11:47,519 --> 00:11:51,440
which analyzes and dissect the the logic

326
00:11:51,440 --> 00:11:54,320
that you the engineers are writing using

327
00:11:54,320 --> 00:11:56,320
the codesys development system

328
00:11:56,320 --> 00:12:00,240
and the plc using the codesys runtime

329
00:12:00,240 --> 00:12:02,880
can execute the logic to control field

330
00:12:02,880 --> 00:12:04,240
devices

331
00:12:04,240 --> 00:12:07,360
such as actuators and sensors there is

332
00:12:07,360 --> 00:12:10,160
a variety of plcs and vendors that are

333
00:12:10,160 --> 00:12:11,519
using codices

334
00:12:11,519 --> 00:12:14,639
as part of their uh runtime

335
00:12:14,639 --> 00:12:17,360
engine so we have wagon we have abb

336
00:12:17,360 --> 00:12:19,839
ac500 we have plc next

337
00:12:19,839 --> 00:12:22,560
and and many more and codices can even

338
00:12:22,560 --> 00:12:24,639
run on raspberry pi

339
00:12:24,639 --> 00:12:28,240
and and other platforms as well so

340
00:12:28,240 --> 00:12:31,279
here is an example of codices ide

341
00:12:31,279 --> 00:12:34,079
as you can see it's kind of a basic idea

342
00:12:34,079 --> 00:12:35,519
where you have the target

343
00:12:35,519 --> 00:12:38,639
the plc target and you have

344
00:12:38,639 --> 00:12:41,279
the ide interface where you can write

345
00:12:41,279 --> 00:12:42,000
the logic

346
00:12:42,000 --> 00:12:43,920
it can be a lighter diagram where it can

347
00:12:43,920 --> 00:12:45,760
be structured text

348
00:12:45,760 --> 00:12:48,560
or other ics related programming

349
00:12:48,560 --> 00:12:49,360
languages

350
00:12:49,360 --> 00:12:51,760
and you can compile the logic and

351
00:12:51,760 --> 00:12:54,560
transfer it to the codesys runtime which

352
00:12:54,560 --> 00:12:57,680
it sits on one of the supported plcs and

353
00:12:57,680 --> 00:12:58,639
platforms

354
00:12:58,639 --> 00:13:01,760
so this is a cartesian's

355
00:13:01,760 --> 00:13:05,120
ide and codices development system

356
00:13:05,120 --> 00:13:08,959
now codesys took this one step further

357
00:13:08,959 --> 00:13:12,399
and created their own automation server

358
00:13:12,399 --> 00:13:15,440
so instead of managing plc's

359
00:13:15,440 --> 00:13:18,800
uh back to back kind of uh with

360
00:13:18,800 --> 00:13:22,560
uh with the necess necessity to be in

361
00:13:22,560 --> 00:13:23,760
the same network

362
00:13:23,760 --> 00:13:25,120
they've created the corresponds

363
00:13:25,120 --> 00:13:27,680
automation server which allows

364
00:13:27,680 --> 00:13:29,440
codices supported devices to be

365
00:13:29,440 --> 00:13:31,600
connected to a centralized

366
00:13:31,600 --> 00:13:34,639
uh cloud-based management console

367
00:13:34,639 --> 00:13:37,760
where asset owners can manage plc's

368
00:13:37,760 --> 00:13:39,199
remotely so basically

369
00:13:39,199 --> 00:13:41,680
they can just like we discard discussed

370
00:13:41,680 --> 00:13:43,440
previously they can manage

371
00:13:43,440 --> 00:13:46,639
and control all of the supported plc's

372
00:13:46,639 --> 00:13:47,600
remotely

373
00:13:47,600 --> 00:13:50,000
through the cloud for every instance

374
00:13:50,000 --> 00:13:52,000
every every device that is

375
00:13:52,000 --> 00:13:56,079
uh linked and associated with the cloud

376
00:13:56,079 --> 00:13:59,279
and codices are providing lots

377
00:13:59,279 --> 00:14:02,480
of features above this cloud platform so

378
00:14:02,480 --> 00:14:03,279
basically

379
00:14:03,279 --> 00:14:06,240
they're offering hmi capabilities with

380
00:14:06,240 --> 00:14:07,040
their

381
00:14:07,040 --> 00:14:10,800
with their uh web visual platform so

382
00:14:10,800 --> 00:14:12,720
basically you can create screens

383
00:14:12,720 --> 00:14:16,240
uh that that you can see

384
00:14:16,240 --> 00:14:19,120
through the the a kind of a nice gui of

385
00:14:19,120 --> 00:14:20,720
what's going on in the process because

386
00:14:20,720 --> 00:14:21,760
the plc

387
00:14:21,760 --> 00:14:24,000
is sending telemetry and data all the

388
00:14:24,000 --> 00:14:25,279
time to the cloud

389
00:14:25,279 --> 00:14:28,560
so you can visualize all the process

390
00:14:28,560 --> 00:14:31,839
you're using their web visio features

391
00:14:31,839 --> 00:14:34,399
and you can also use their kind of

392
00:14:34,399 --> 00:14:35,199
engineering

393
00:14:35,199 --> 00:14:38,639
working station capabilities to

394
00:14:38,639 --> 00:14:42,160
create logic using using their ide

395
00:14:42,160 --> 00:14:46,000
transfer it to the cloud based platform

396
00:14:46,000 --> 00:14:48,000
which is the automation server and

397
00:14:48,000 --> 00:14:50,560
download the logic and configuration to

398
00:14:50,560 --> 00:14:52,160
all the connected plcs

399
00:14:52,160 --> 00:14:55,279
again everything through the internet so

400
00:14:55,279 --> 00:14:58,720
basically when you're setting up your

401
00:14:58,720 --> 00:14:59,680
account in cody's

402
00:14:59,680 --> 00:15:01,839
automation server you will receive your

403
00:15:01,839 --> 00:15:04,480
own aws based instance

404
00:15:04,480 --> 00:15:07,279
you can see here an example of such an

405
00:15:07,279 --> 00:15:08,079
instance

406
00:15:08,079 --> 00:15:11,600
and this is a personal instance for each

407
00:15:11,600 --> 00:15:12,560
account

408
00:15:12,560 --> 00:15:15,199
that you can just go online to this

409
00:15:15,199 --> 00:15:16,720
instance and control

410
00:15:16,720 --> 00:15:19,760
all the associated linked devices

411
00:15:19,760 --> 00:15:22,160
so let's see an example real quick here

412
00:15:22,160 --> 00:15:23,600
is an example to

413
00:15:23,600 --> 00:15:26,320
devices that are being controlled

414
00:15:26,320 --> 00:15:27,120
through this

415
00:15:27,120 --> 00:15:28,959
platform so basically what you're seeing

416
00:15:28,959 --> 00:15:30,639
here is a website somewhere in the

417
00:15:30,639 --> 00:15:31,440
internet

418
00:15:31,440 --> 00:15:35,120
using one of the instances that codec is

419
00:15:35,120 --> 00:15:38,160
created for the account and you have

420
00:15:38,160 --> 00:15:41,839
all your linked devices to control so

421
00:15:41,839 --> 00:15:42,880
you can

422
00:15:42,880 --> 00:15:46,160
go in into one of the devices and do

423
00:15:46,160 --> 00:15:48,000
a download logic you can change

424
00:15:48,000 --> 00:15:49,920
configuration you can change

425
00:15:49,920 --> 00:15:52,320
settings on these devices and everything

426
00:15:52,320 --> 00:15:53,040
will be

427
00:15:53,040 --> 00:15:55,759
transferred and downloaded to the plc

428
00:15:55,759 --> 00:15:56,320
because

429
00:15:56,320 --> 00:15:58,639
the plc is directly connected to the

430
00:15:58,639 --> 00:15:59,440
cloud

431
00:15:59,440 --> 00:16:02,720
platform now codices

432
00:16:02,720 --> 00:16:05,600
took this even one step further and

433
00:16:05,600 --> 00:16:07,360
created the codices

434
00:16:07,360 --> 00:16:10,079
store so basically it's like the apple

435
00:16:10,079 --> 00:16:10,800
store

436
00:16:10,800 --> 00:16:12,959
or the google play store where you can

437
00:16:12,959 --> 00:16:14,399
download applications

438
00:16:14,399 --> 00:16:18,480
but just for your code in your process

439
00:16:18,480 --> 00:16:21,680
so basically you can download examples

440
00:16:21,680 --> 00:16:22,240
of

441
00:16:22,240 --> 00:16:24,399
already created applications or you can

442
00:16:24,399 --> 00:16:27,440
download libraries or you can download

443
00:16:27,440 --> 00:16:30,800
clients that will be run on the plc

444
00:16:30,800 --> 00:16:34,240
and you can use the store to accelerate

445
00:16:34,240 --> 00:16:37,759
the development cycle and use code

446
00:16:37,759 --> 00:16:40,000
that other people wrote without invading

447
00:16:40,000 --> 00:16:41,279
inventing the wheel

448
00:16:41,279 --> 00:16:45,440
so if someone else wrote the code to

449
00:16:45,440 --> 00:16:48,320
process some kind of a mathematical

450
00:16:48,320 --> 00:16:49,279
algorithm

451
00:16:49,279 --> 00:16:51,920
so you can just download the the library

452
00:16:51,920 --> 00:16:53,279
that he created

453
00:16:53,279 --> 00:16:55,759
and maybe pay for this if they're

454
00:16:55,759 --> 00:16:56,639
selling this

455
00:16:56,639 --> 00:16:59,440
with by money or not or you can download

456
00:16:59,440 --> 00:17:00,240
for free

457
00:17:00,240 --> 00:17:03,440
if uh the developers are offering this

458
00:17:03,440 --> 00:17:05,599
for free but the basic idea is the same

459
00:17:05,599 --> 00:17:07,359
you can just

460
00:17:07,359 --> 00:17:10,160
as a developer you can offer your own

461
00:17:10,160 --> 00:17:11,599
code or libraries or

462
00:17:11,599 --> 00:17:14,319
programs that others can download and

463
00:17:14,319 --> 00:17:16,959
use in their projects

464
00:17:16,959 --> 00:17:20,959
uh so this is an example of aws iot core

465
00:17:20,959 --> 00:17:24,640
client that is being offered for

466
00:17:24,640 --> 00:17:27,919
free as you can see here and other

467
00:17:27,919 --> 00:17:30,080
developers and asset owners can

468
00:17:30,080 --> 00:17:32,720
download and use this library for free

469
00:17:32,720 --> 00:17:33,600
to integrate

470
00:17:33,600 --> 00:17:38,400
their plc with aws iot platform

471
00:17:38,400 --> 00:17:40,400
and the final feature that we want to

472
00:17:40,400 --> 00:17:41,440
discuss uh

473
00:17:41,440 --> 00:17:44,240
regarding codices is the web visual so

474
00:17:44,240 --> 00:17:46,400
it's a visualization

475
00:17:46,400 --> 00:17:49,360
kind of a hmi in the internet browser

476
00:17:49,360 --> 00:17:49,760
via

477
00:17:49,760 --> 00:17:52,880
html5 so you can create all these kind

478
00:17:52,880 --> 00:17:53,600
of different

479
00:17:53,600 --> 00:17:56,960
screens to interact with

480
00:17:56,960 --> 00:18:00,000
so basically the plc's that are linked

481
00:18:00,000 --> 00:18:02,559
to the cloud are sending telemetry and

482
00:18:02,559 --> 00:18:04,160
data all the time

483
00:18:04,160 --> 00:18:07,919
about trends about tags about

484
00:18:07,919 --> 00:18:10,080
any anything that was configured in the

485
00:18:10,080 --> 00:18:11,520
logic and

486
00:18:11,520 --> 00:18:13,760
you can create screens that will take

487
00:18:13,760 --> 00:18:14,559
all of the

488
00:18:14,559 --> 00:18:18,080
aggregated data to present

489
00:18:18,080 --> 00:18:21,919
in a very nicely presented view and gui

490
00:18:21,919 --> 00:18:25,360
just like a normal hmi just in the cloud

491
00:18:25,360 --> 00:18:29,360
just in a screen

492
00:18:29,360 --> 00:18:32,559
that is based on html5 and it's very

493
00:18:32,559 --> 00:18:34,160
easy to control and create

494
00:18:34,160 --> 00:18:37,200
nice screens that anyone can access

495
00:18:37,200 --> 00:18:40,480
with the proper acls

496
00:18:40,480 --> 00:18:44,160
so we have engineering working station

497
00:18:44,160 --> 00:18:46,880
and we have hmi and we even have the

498
00:18:46,880 --> 00:18:48,240
codices

499
00:18:48,240 --> 00:18:51,919
store to create download applications

500
00:18:51,919 --> 00:18:54,880
and we have every all these services in

501
00:18:54,880 --> 00:18:56,960
one platform that is connected

502
00:18:56,960 --> 00:18:58,720
through the cloud through the internet

503
00:18:58,720 --> 00:19:00,799
and all the connected plcs can be

504
00:19:00,799 --> 00:19:01,360
managed

505
00:19:01,360 --> 00:19:04,559
controlled and present information

506
00:19:04,559 --> 00:19:06,400
everything directly through the internet

507
00:19:06,400 --> 00:19:08,000
so this is a great example

508
00:19:08,000 --> 00:19:10,640
uh to what we discussed earlier now we

509
00:19:10,640 --> 00:19:11,919
would like to discuss

510
00:19:11,919 --> 00:19:15,200
wago so wago is a german company

511
00:19:15,200 --> 00:19:15,760
european

512
00:19:15,760 --> 00:19:18,799
company they have uh two main product

513
00:19:18,799 --> 00:19:20,880
plc products uh which

514
00:19:20,880 --> 00:19:25,200
are the 750 and 750 exterior and the pfc

515
00:19:25,200 --> 00:19:29,200
series pfc 100 and pfc 200

516
00:19:29,200 --> 00:19:33,919
we mainly focused on pfc 100 and 200

517
00:19:33,919 --> 00:19:38,400
and this is this is an example for a plc

518
00:19:38,400 --> 00:19:41,679
that is linux based and it

519
00:19:41,679 --> 00:19:44,960
it is running the codices runtime so it

520
00:19:44,960 --> 00:19:45,440
has

521
00:19:45,440 --> 00:19:48,559
a great integration with codices and

522
00:19:48,559 --> 00:19:50,480
all the great features that i mentioned

523
00:19:50,480 --> 00:19:52,720
earlier can be used with logo

524
00:19:52,720 --> 00:19:55,600
so basically wago runs the codices

525
00:19:55,600 --> 00:19:56,720
runtime

526
00:19:56,720 --> 00:20:00,080
and the codices runtime can communicate

527
00:20:00,080 --> 00:20:02,559
with other currencies related platforms

528
00:20:02,559 --> 00:20:03,600
and systems

529
00:20:03,600 --> 00:20:06,559
so this means that we can control our

530
00:20:06,559 --> 00:20:07,120
wago

531
00:20:07,120 --> 00:20:11,120
pfc 100 200 using codices automation

532
00:20:11,120 --> 00:20:11,600
server

533
00:20:11,600 --> 00:20:13,840
and basically manage all of our wago

534
00:20:13,840 --> 00:20:14,880
plc's

535
00:20:14,880 --> 00:20:18,080
through the cloud so the wagon pfc 100

536
00:20:18,080 --> 00:20:20,720
200 is a is a basic

537
00:20:20,720 --> 00:20:24,320
plc it runs it has lots of functionality

538
00:20:24,320 --> 00:20:27,520
that uh most of uh plc's

539
00:20:27,520 --> 00:20:29,520
uh contain this day support of all

540
00:20:29,520 --> 00:20:30,559
standard field bus

541
00:20:30,559 --> 00:20:33,120
protocols and ethernet standards such as

542
00:20:33,120 --> 00:20:35,520
profibus modbus profinet etc

543
00:20:35,520 --> 00:20:39,480
and it has lots of interfaces such as rs

544
00:20:39,480 --> 00:20:42,320
485 and rs-232

545
00:20:42,320 --> 00:20:45,760
and as i've mentioned it is running

546
00:20:45,760 --> 00:20:48,559
the codices runtime which means it has

547
00:20:48,559 --> 00:20:50,080
great integration with all of the

548
00:20:50,080 --> 00:20:51,440
codices platforms

549
00:20:51,440 --> 00:20:54,559
and even the programming can be done

550
00:20:54,559 --> 00:20:56,880
through codices and we will show you a

551
00:20:56,880 --> 00:20:58,320
couple of examples

552
00:20:58,320 --> 00:21:03,120
very soon so let's take a look at how

553
00:21:03,120 --> 00:21:04,080
the attack surface

554
00:21:04,080 --> 00:21:08,480
is changed after moving to the cloud

555
00:21:08,880 --> 00:21:10,240
and to do that we first need to

556
00:21:10,240 --> 00:21:12,320
understand what attackers are trying to

557
00:21:12,320 --> 00:21:13,200
achieve

558
00:21:13,200 --> 00:21:15,360
and it's pretty easy in the ics world

559
00:21:15,360 --> 00:21:16,400
attackers are

560
00:21:16,400 --> 00:21:19,440
either trying to gain money or to cause

561
00:21:19,440 --> 00:21:21,360
damage

562
00:21:21,360 --> 00:21:23,440
and attackers reaching an ot network

563
00:21:23,440 --> 00:21:24,799
have a few options

564
00:21:24,799 --> 00:21:26,880
they can start by shutting down

565
00:21:26,880 --> 00:21:28,400
equipment randomly

566
00:21:28,400 --> 00:21:31,760
stopping plc's and this is sometimes

567
00:21:31,760 --> 00:21:32,640
effective

568
00:21:32,640 --> 00:21:36,159
and really noisy more complex attackers

569
00:21:36,159 --> 00:21:38,640
will try to modify parameters

570
00:21:38,640 --> 00:21:41,360
and that requires a bit more knowledge

571
00:21:41,360 --> 00:21:42,960
about the operation itself and knowing

572
00:21:42,960 --> 00:21:44,880
what to change

573
00:21:44,880 --> 00:21:47,919
another thing we can we see is the

574
00:21:47,919 --> 00:21:50,320
attackers wiping data or encrypting data

575
00:21:50,320 --> 00:21:51,760
and this is mostly

576
00:21:51,760 --> 00:21:54,240
for money we see that in the latest

577
00:21:54,240 --> 00:21:57,039
transformer attacks

578
00:21:57,039 --> 00:22:01,039
so how a traditional ics attack looks

579
00:22:01,039 --> 00:22:01,520
like

580
00:22:01,520 --> 00:22:04,799
is uh first attackers need to bypass

581
00:22:04,799 --> 00:22:06,880
many protections and firewall to even

582
00:22:06,880 --> 00:22:07,360
reach

583
00:22:07,360 --> 00:22:10,840
the alternate wall and even if they

584
00:22:10,840 --> 00:22:14,080
reach a computer inside the network

585
00:22:14,080 --> 00:22:17,360
they have some challenges most of the

586
00:22:17,360 --> 00:22:18,400
equipment

587
00:22:18,400 --> 00:22:22,640
is backed up or has redundant equipment

588
00:22:22,640 --> 00:22:25,039
to take its place so if an attacker

589
00:22:25,039 --> 00:22:27,360
stops one plc

590
00:22:27,360 --> 00:22:30,159
the redundant redundant one will start

591
00:22:30,159 --> 00:22:31,600
working

592
00:22:31,600 --> 00:22:34,159
and there are also many safety checks

593
00:22:34,159 --> 00:22:35,679
along the way

594
00:22:35,679 --> 00:22:39,840
so attackers really need to have a good

595
00:22:39,840 --> 00:22:40,720
coverage of

596
00:22:40,720 --> 00:22:43,679
over the rt network in a in order to

597
00:22:43,679 --> 00:22:47,039
really cause damage

598
00:22:47,440 --> 00:22:50,400
in cloud attacks the thing that

599
00:22:50,400 --> 00:22:52,000
separates attackers from the

600
00:22:52,000 --> 00:22:54,559
ot network is usually just username and

601
00:22:54,559 --> 00:22:55,919
password

602
00:22:55,919 --> 00:22:58,799
and when attackers gain access to a

603
00:22:58,799 --> 00:22:59,600
cloud

604
00:22:59,600 --> 00:23:02,000
they have a full view of the operation

605
00:23:02,000 --> 00:23:02,960
and can

606
00:23:02,960 --> 00:23:06,880
instantly modify parameters and

607
00:23:06,880 --> 00:23:10,799
change values in plcs

608
00:23:11,440 --> 00:23:13,280
in our research we developed two main

609
00:23:13,280 --> 00:23:16,000
methodologies for cloud attacks

610
00:23:16,000 --> 00:23:18,559
the top down in the bottom up the top

611
00:23:18,559 --> 00:23:20,480
down starts with attacking an

612
00:23:20,480 --> 00:23:22,000
engineering station

613
00:23:22,000 --> 00:23:24,720
then going up to the cloud and attacking

614
00:23:24,720 --> 00:23:26,320
all of the managed

615
00:23:26,320 --> 00:23:30,240
plc's the bottom up attack starts with

616
00:23:30,240 --> 00:23:31,600
the plc

617
00:23:31,600 --> 00:23:34,000
then we climb our way up the cloud to

618
00:23:34,000 --> 00:23:34,880
take

619
00:23:34,880 --> 00:23:38,960
control over the entire operation

620
00:23:39,039 --> 00:23:41,520
so let's start with the bottom up attack

621
00:23:41,520 --> 00:23:42,400
we use the

622
00:23:42,400 --> 00:23:45,600
wago device to demonstrate this attack

623
00:23:45,600 --> 00:23:48,799
and drug devices have a a configuration

624
00:23:48,799 --> 00:23:51,840
port open on port 6626

625
00:23:51,840 --> 00:23:53,279
and this is used for the initial

626
00:23:53,279 --> 00:23:55,200
configuration like setting the hostname

627
00:23:55,200 --> 00:23:57,520
or subnet for the device

628
00:23:57,520 --> 00:23:59,919
this port remains open after the initial

629
00:23:59,919 --> 00:24:01,600
configuration which gives us

630
00:24:01,600 --> 00:24:05,120
a big attack surface

631
00:24:05,120 --> 00:24:07,600
so we found two vulnerabilities in the i

632
00:24:07,600 --> 00:24:10,559
objective process

633
00:24:10,559 --> 00:24:12,720
a shared memory overflow and the stack

634
00:24:12,720 --> 00:24:14,640
buffer overflow

635
00:24:14,640 --> 00:24:16,159
let's start with the shared memory

636
00:24:16,159 --> 00:24:17,679
overflow

637
00:24:17,679 --> 00:24:19,919
the io check d has a write register

638
00:24:19,919 --> 00:24:22,320
command which writes to a certain

639
00:24:22,320 --> 00:24:25,279
memory location and this is limited by

640
00:24:25,279 --> 00:24:27,679
the count parameter

641
00:24:27,679 --> 00:24:29,520
we found out that that the count

642
00:24:29,520 --> 00:24:31,039
parameter is checked for

643
00:24:31,039 --> 00:24:32,799
every table that you can write for

644
00:24:32,799 --> 00:24:35,039
except for table 99

645
00:24:35,039 --> 00:24:38,159
which is also stored in the shared

646
00:24:38,159 --> 00:24:41,039
memory region

647
00:24:41,200 --> 00:24:44,320
so we were actually able to use the

648
00:24:44,320 --> 00:24:46,559
white register command to write

649
00:24:46,559 --> 00:24:49,679
more than the size of table 99 and

650
00:24:49,679 --> 00:24:54,320
overflow it into another memory region

651
00:24:54,320 --> 00:24:56,799
the memory region is in the shared

652
00:24:56,799 --> 00:24:57,919
memory so

653
00:24:57,919 --> 00:25:02,400
by itself this is not that useful

654
00:25:02,400 --> 00:25:05,840
the second vulnerability we found

655
00:25:05,840 --> 00:25:09,440
is in the response for the read variable

656
00:25:09,440 --> 00:25:11,919
command

657
00:25:12,559 --> 00:25:14,880
the read variable command assumes that

658
00:25:14,880 --> 00:25:18,159
the maximum size is 1400 bytes

659
00:25:18,159 --> 00:25:22,320
and this is the maximum count

660
00:25:22,960 --> 00:25:26,400
this is the maximum count size

661
00:25:26,400 --> 00:25:29,919
but if we are able to write more

662
00:25:29,919 --> 00:25:33,620
than 1400 bytes we are able to

663
00:25:33,620 --> 00:25:34,799
[Music]

664
00:25:34,799 --> 00:25:37,600
read more than that so the read register

665
00:25:37,600 --> 00:25:39,600
command for table 99

666
00:25:39,600 --> 00:25:43,039
can return more than 1400 bytes and copy

667
00:25:43,039 --> 00:25:43,840
that

668
00:25:43,840 --> 00:25:47,600
to the stack buffer of the response

669
00:25:47,600 --> 00:25:50,640
and in that way we can write our payload

670
00:25:50,640 --> 00:25:53,520
using the write register command and

671
00:25:53,520 --> 00:25:55,279
while reading it with a read

672
00:25:55,279 --> 00:25:58,320
register command overflow the buffer

673
00:25:58,320 --> 00:26:01,360
with our payload

674
00:26:02,000 --> 00:26:05,039
so this is the the output of the script

675
00:26:05,039 --> 00:26:05,919
that runs

676
00:26:05,919 --> 00:26:11,200
the full remote code execution

677
00:26:11,200 --> 00:26:13,679
so after we got our remote code

678
00:26:13,679 --> 00:26:15,840
execution we started looking for ways

679
00:26:15,840 --> 00:26:19,039
to get up to the cloud and we discovered

680
00:26:19,039 --> 00:26:22,159
the codesys web visual option

681
00:26:22,159 --> 00:26:24,960
this option lets you write javascript

682
00:26:24,960 --> 00:26:26,559
and html pages

683
00:26:26,559 --> 00:26:30,480
on the plc and present them remotely

684
00:26:30,480 --> 00:26:33,360
this option is also open to from the

685
00:26:33,360 --> 00:26:34,240
cloud

686
00:26:34,240 --> 00:26:37,840
which means that any operator viewing it

687
00:26:37,840 --> 00:26:41,120
will have a cloud cooking

688
00:26:41,120 --> 00:26:43,919
so if you have control over the plc

689
00:26:43,919 --> 00:26:45,039
itself

690
00:26:45,039 --> 00:26:47,600
and we can change the javascript for

691
00:26:47,600 --> 00:26:49,039
example

692
00:26:49,039 --> 00:26:52,000
we can change it to get the cookie from

693
00:26:52,000 --> 00:26:53,679
the person viewing it

694
00:26:53,679 --> 00:26:55,840
and create a user for the cloud where we

695
00:26:55,840 --> 00:26:59,120
control the username and the password

696
00:26:59,120 --> 00:27:01,600
so this gives us a new user in our

697
00:27:01,600 --> 00:27:02,400
control

698
00:27:02,400 --> 00:27:06,000
in the cloud so let's

699
00:27:06,000 --> 00:27:08,240
chain it all together we start with a

700
00:27:08,240 --> 00:27:11,360
read and write register buffer overflow

701
00:27:11,360 --> 00:27:14,640
and that gains us remote code execution

702
00:27:14,640 --> 00:27:16,480
on the ribbon plc

703
00:27:16,480 --> 00:27:20,399
then we change the javascript to

704
00:27:20,399 --> 00:27:23,360
create a new user in the cloud and we

705
00:27:23,360 --> 00:27:23,919
use

706
00:27:23,919 --> 00:27:25,760
that cloud to take over the entire

707
00:27:25,760 --> 00:27:27,600
operation

708
00:27:27,600 --> 00:27:31,120
so starting from plc

709
00:27:31,120 --> 00:27:34,240
and going up to the cloud and

710
00:27:34,240 --> 00:27:37,919
using that to manage and

711
00:27:37,919 --> 00:27:41,520
control the entire operation

712
00:27:44,240 --> 00:27:46,640
the second method we developed is the

713
00:27:46,640 --> 00:27:48,880
top down attack

714
00:27:48,880 --> 00:27:50,799
the top-down approach starts with

715
00:27:50,799 --> 00:27:53,120
targeting an engineering station

716
00:27:53,120 --> 00:27:56,399
and we decided to look at the codesys

717
00:27:56,399 --> 00:27:59,440
packages packages are just

718
00:27:59,440 --> 00:28:02,240
normal zip files which contains

719
00:28:02,240 --> 00:28:03,200
dependencies

720
00:28:03,200 --> 00:28:06,880
and sometimes even dlls we discovered

721
00:28:06,880 --> 00:28:07,279
that

722
00:28:07,279 --> 00:28:10,240
those packages are not signed and we can

723
00:28:10,240 --> 00:28:10,799
change

724
00:28:10,799 --> 00:28:13,919
them to contain our malicious code

725
00:28:13,919 --> 00:28:17,200
so we actually made a package that when

726
00:28:17,200 --> 00:28:19,279
an engineer installs that

727
00:28:19,279 --> 00:28:21,919
would get his cloud connect credentials

728
00:28:21,919 --> 00:28:24,080
from the engineering station and send it

729
00:28:24,080 --> 00:28:26,799
back to us

730
00:28:27,840 --> 00:28:29,919
so once we have access to the cloud we

731
00:28:29,919 --> 00:28:32,720
can change running modes of the plc's

732
00:28:32,720 --> 00:28:36,480
stop them or even change process values

733
00:28:36,480 --> 00:28:38,960
but the holy grail of attacks is to

734
00:28:38,960 --> 00:28:39,679
actually run

735
00:28:39,679 --> 00:28:43,520
native code on the plcs this is

736
00:28:43,520 --> 00:28:46,080
not yet published so we can't speak

737
00:28:46,080 --> 00:28:47,600
about details here but

738
00:28:47,600 --> 00:28:50,720
we actually managed to run

739
00:28:50,720 --> 00:28:53,360
native code on the wago plc's from the

740
00:28:53,360 --> 00:28:54,000
cloud

741
00:28:54,000 --> 00:28:56,559
so once we have the cloud credentials we

742
00:28:56,559 --> 00:28:57,679
were able to

743
00:28:57,679 --> 00:29:01,360
execute code on all of the plc's in the

744
00:29:01,360 --> 00:29:04,000
operation

745
00:29:06,080 --> 00:29:09,520
so a quick recap on the top down attack

746
00:29:09,520 --> 00:29:11,840
we create a malicious package uploaded

747
00:29:11,840 --> 00:29:13,760
to the code system

748
00:29:13,760 --> 00:29:16,960
operators installed this package and

749
00:29:16,960 --> 00:29:19,120
the cloud credentials of the operators

750
00:29:19,120 --> 00:29:20,799
are sent back to us

751
00:29:20,799 --> 00:29:23,679
then we can do whatever we want with the

752
00:29:23,679 --> 00:29:24,320
uh

753
00:29:24,320 --> 00:29:27,440
with the operation we can stop plcs we

754
00:29:27,440 --> 00:29:28,799
can run code we can do

755
00:29:28,799 --> 00:29:32,080
anything we want with the operation so

756
00:29:32,080 --> 00:29:35,439
starting from an engineer

757
00:29:35,919 --> 00:29:38,640
moving to the cloud and then to all of

758
00:29:38,640 --> 00:29:39,039
the

759
00:29:39,039 --> 00:29:42,960
devices in the operation

760
00:29:42,960 --> 00:29:44,720
that's it for today thank you everyone

761
00:29:44,720 --> 00:29:47,520
who attended our talk in defcon 29 scs

762
00:29:47,520 --> 00:29:49,360
village we apprehend

763
00:29:49,360 --> 00:29:52,720
we hope you enjoyed our uh talk about

764
00:29:52,720 --> 00:29:55,760
attacking a cloud-based infrastructure

765
00:29:55,760 --> 00:29:59,440
in ics and if you have any questions now

766
00:29:59,440 --> 00:30:00,080
it's the time

767
00:30:00,080 --> 00:30:02,720
thank you very much

