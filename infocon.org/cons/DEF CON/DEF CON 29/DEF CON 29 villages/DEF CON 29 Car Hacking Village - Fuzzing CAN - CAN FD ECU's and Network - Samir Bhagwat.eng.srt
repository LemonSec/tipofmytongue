1
00:00:16,160 --> 00:00:17,039
hi everyone

2
00:00:17,039 --> 00:00:19,359
uh this is samir from introfit control

3
00:00:19,359 --> 00:00:20,800
systems

4
00:00:20,800 --> 00:00:23,199
welcome to this talk uh about can about

5
00:00:23,199 --> 00:00:24,480
fuzzing can and can

6
00:00:24,480 --> 00:00:28,480
fd automotive ecu's and networks

7
00:00:28,480 --> 00:00:30,640
uh fuzzing when applied to automotive

8
00:00:30,640 --> 00:00:32,800
systems can make the systems

9
00:00:32,800 --> 00:00:36,000
safer and more secure uh

10
00:00:36,000 --> 00:00:37,920
i hope this presentation helps today

11
00:00:37,920 --> 00:00:40,480
share some concepts and see what all

12
00:00:40,480 --> 00:00:43,920
is on offer for fuzzing automotive ecu's

13
00:00:43,920 --> 00:00:46,480
and networks

14
00:00:49,200 --> 00:00:52,160
so this will be my agenda today i'm

15
00:00:52,160 --> 00:00:53,600
going to talk about

16
00:00:53,600 --> 00:00:56,559
these four items here today first i will

17
00:00:56,559 --> 00:00:57,120
briefly

18
00:00:57,120 --> 00:01:00,559
discuss what fuzzing is and why fuzzing

19
00:01:00,559 --> 00:01:01,520
is already becoming

20
00:01:01,520 --> 00:01:03,359
a part of standard verification and

21
00:01:03,359 --> 00:01:05,119
testing

22
00:01:05,119 --> 00:01:08,640
for oems and ecu manufacturers

23
00:01:08,640 --> 00:01:10,799
in the second part of the presentation

24
00:01:10,799 --> 00:01:12,320
we will discuss some of the techniques

25
00:01:12,320 --> 00:01:13,200
and methods

26
00:01:13,200 --> 00:01:15,439
uh for can and can of defuzzing and this

27
00:01:15,439 --> 00:01:16,560
should be really interesting

28
00:01:16,560 --> 00:01:18,960
for you know automotive uh you know

29
00:01:18,960 --> 00:01:20,159
people are interested in automotive

30
00:01:20,159 --> 00:01:21,439
world

31
00:01:21,439 --> 00:01:23,600
third i will show how some specific

32
00:01:23,600 --> 00:01:25,520
products from infrared control systems

33
00:01:25,520 --> 00:01:26,000
which i have

34
00:01:26,000 --> 00:01:29,759
used can help you with your can and can

35
00:01:29,759 --> 00:01:30,479
have the fuzzing

36
00:01:30,479 --> 00:01:32,799
needs these are the tools i have

37
00:01:32,799 --> 00:01:33,759
primarily used

38
00:01:33,759 --> 00:01:36,400
for developing fuzzing capabilities for

39
00:01:36,400 --> 00:01:39,280
oems and clear suppliers so

40
00:01:39,280 --> 00:01:40,640
this information will be also pretty

41
00:01:40,640 --> 00:01:42,479
useful for uh people who are interested

42
00:01:42,479 --> 00:01:44,240
in these areas

43
00:01:44,240 --> 00:01:47,200
uh last i will discuss quickest way to

44
00:01:47,200 --> 00:01:47,600
get

45
00:01:47,600 --> 00:01:49,360
you know onboarding on can and kind of

46
00:01:49,360 --> 00:01:50,720
be fuzzing

47
00:01:50,720 --> 00:01:53,439
in you know for automotive ecu uh

48
00:01:53,439 --> 00:01:55,119
software development life cycle

49
00:01:55,119 --> 00:01:56,719
uh this has been a question asked to me

50
00:01:56,719 --> 00:01:58,320
in various times in the past that hey

51
00:01:58,320 --> 00:01:59,600
how can i start you know how

52
00:01:59,600 --> 00:02:01,040
what is fuzzing you know what we want to

53
00:02:01,040 --> 00:02:02,560
do so i'm gonna discuss some of those

54
00:02:02,560 --> 00:02:02,960
things

55
00:02:02,960 --> 00:02:06,960
uh as last part of my presentation

56
00:02:07,280 --> 00:02:10,479
uh fuzzing concepts and definitions so

57
00:02:10,479 --> 00:02:13,520
fuzzing as defined uh by

58
00:02:13,520 --> 00:02:16,239
os for open web application uh security

59
00:02:16,239 --> 00:02:16,720
project

60
00:02:16,720 --> 00:02:18,800
is essentially uh this that's the

61
00:02:18,800 --> 00:02:20,959
definition defined by os

62
00:02:20,959 --> 00:02:24,160
so basically idea is to send unusual

63
00:02:24,160 --> 00:02:27,360
malformed unexpected and error

64
00:02:27,360 --> 00:02:31,040
induced data to the target dud

65
00:02:31,040 --> 00:02:32,959
specific to the dut functionality and

66
00:02:32,959 --> 00:02:35,519
performance requirement

67
00:02:35,519 --> 00:02:38,319
a closed-loop control can then monitor

68
00:02:38,319 --> 00:02:39,760
the duties

69
00:02:39,760 --> 00:02:43,440
for any anomaly or any problems in the

70
00:02:43,440 --> 00:02:44,160
duty

71
00:02:44,160 --> 00:02:46,720
so fuzzing has been widely used to find

72
00:02:46,720 --> 00:02:47,840
security issues

73
00:02:47,840 --> 00:02:50,800
and bugs in iit software from actually

74
00:02:50,800 --> 00:02:52,160
many many years

75
00:02:52,160 --> 00:02:55,360
so the concept is not really new uh its

76
00:02:55,360 --> 00:02:57,200
application to automotive is interesting

77
00:02:57,200 --> 00:02:59,680
so that's why we we kind of you know

78
00:02:59,680 --> 00:03:00,480
like to add

79
00:03:00,480 --> 00:03:02,640
for you know to define what automotive

80
00:03:02,640 --> 00:03:04,080
ecu fuzzing is

81
00:03:04,080 --> 00:03:05,920
so it's a highly recommended last mile

82
00:03:05,920 --> 00:03:07,760
test to reveal

83
00:03:07,760 --> 00:03:11,360
uh any any possible

84
00:03:11,360 --> 00:03:15,120
vulnerabilities in the network easy use

85
00:03:15,120 --> 00:03:18,000
for can and can fd or there is a design

86
00:03:18,000 --> 00:03:19,920
step or you know for can canopy design

87
00:03:19,920 --> 00:03:21,040
strategies

88
00:03:21,040 --> 00:03:23,920
or implementation and it performed as

89
00:03:23,920 --> 00:03:25,599
part of product design development and

90
00:03:25,599 --> 00:03:27,360
validation cycles so that's where

91
00:03:27,360 --> 00:03:30,799
industry is going uh in our experiences

92
00:03:30,799 --> 00:03:33,599
this does not necessarily mean that

93
00:03:33,599 --> 00:03:34,239
tests should

94
00:03:34,239 --> 00:03:37,040
only be done at the end of the design or

95
00:03:37,040 --> 00:03:39,599
development and validation cycles

96
00:03:39,599 --> 00:03:41,840
uh fuzzing essentially is now being

97
00:03:41,840 --> 00:03:43,599
considered as part of a software

98
00:03:43,599 --> 00:03:45,440
development lifecycle

99
00:03:45,440 --> 00:03:47,599
and so it is even you know a better

100
00:03:47,599 --> 00:03:50,080
strategy to include this testing

101
00:03:50,080 --> 00:03:51,760
as part of milestone releases of

102
00:03:51,760 --> 00:03:54,480
software uh during the entire cycle

103
00:03:54,480 --> 00:03:56,560
uh and that is how the importance of you

104
00:03:56,560 --> 00:03:58,319
know fuzziness is there for in

105
00:03:58,319 --> 00:03:59,360
automotive

106
00:03:59,360 --> 00:04:01,040
it's actually well understood fact you

107
00:04:01,040 --> 00:04:02,720
know by we all of know

108
00:04:02,720 --> 00:04:04,560
all of us know that you know it's a fact

109
00:04:04,560 --> 00:04:06,720
of cost of fixing a bug

110
00:04:06,720 --> 00:04:09,519
uh exponentially increases if discovered

111
00:04:09,519 --> 00:04:10,000
later

112
00:04:10,000 --> 00:04:13,200
in the development cycle uh in fact this

113
00:04:13,200 --> 00:04:14,159
additional testing

114
00:04:14,159 --> 00:04:16,478
uh may not be a large impact on the cost

115
00:04:16,478 --> 00:04:17,358
you know and you know

116
00:04:17,358 --> 00:04:19,199
people trying to assess hey you know if

117
00:04:19,199 --> 00:04:20,639
we do can fuzzing you know kind of

118
00:04:20,639 --> 00:04:21,680
defusing

119
00:04:21,680 --> 00:04:23,840
uh you know and you know test you know

120
00:04:23,840 --> 00:04:25,360
perform this kind of testing is it going

121
00:04:25,360 --> 00:04:27,199
to be very expensive for me

122
00:04:27,199 --> 00:04:29,840
uh so that's not entirely true the

123
00:04:29,840 --> 00:04:31,280
impact on cost

124
00:04:31,280 --> 00:04:33,919
is actually lowest if your existing tool

125
00:04:33,919 --> 00:04:34,479
chains

126
00:04:34,479 --> 00:04:37,199
support such testing and you know some

127
00:04:37,199 --> 00:04:39,120
of the companies like ours like intrepid

128
00:04:39,120 --> 00:04:40,560
we have recognized this

129
00:04:40,560 --> 00:04:44,160
uh pretty early in the game and

130
00:04:44,160 --> 00:04:45,840
this is alongside working alongside with

131
00:04:45,840 --> 00:04:48,320
customers so today there are readily

132
00:04:48,320 --> 00:04:48,960
available

133
00:04:48,960 --> 00:04:51,120
tools for canon canopy advanced level

134
00:04:51,120 --> 00:04:52,080
fuzzing

135
00:04:52,080 --> 00:04:54,800
this means for existing users of such

136
00:04:54,800 --> 00:04:55,360
tools

137
00:04:55,360 --> 00:04:58,800
the adaptation is actually easy and

138
00:04:58,800 --> 00:05:00,240
and for the new customers it is

139
00:05:00,240 --> 00:05:02,240
something they can try to look into

140
00:05:02,240 --> 00:05:03,680
for you know for advanced level of

141
00:05:03,680 --> 00:05:07,280
fuzzing on cam and canopy

142
00:05:08,240 --> 00:05:10,800
so let's look at you know some some of

143
00:05:10,800 --> 00:05:12,960
the frequently encountered terms

144
00:05:12,960 --> 00:05:15,039
uh and i'm gonna just you know uh you

145
00:05:15,039 --> 00:05:16,320
know talk about

146
00:05:16,320 --> 00:05:19,039
you know as a concept here uh these

147
00:05:19,039 --> 00:05:20,800
terms actually are very common

148
00:05:20,800 --> 00:05:22,560
in world of information technology very

149
00:05:22,560 --> 00:05:24,000
common you know this is nothing

150
00:05:24,000 --> 00:05:25,520
new you know and most of the audience

151
00:05:25,520 --> 00:05:27,440
here i'm sure is very familiar with

152
00:05:27,440 --> 00:05:29,520
these terms but the concepts are

153
00:05:29,520 --> 00:05:30,960
important for people who are coming from

154
00:05:30,960 --> 00:05:32,400
automobile world you know for

155
00:05:32,400 --> 00:05:34,320
the things going on in the industry

156
00:05:34,320 --> 00:05:35,600
right now so

157
00:05:35,600 --> 00:05:36,880
let's look at these four you know

158
00:05:36,880 --> 00:05:38,720
conceptual terms you know so to learn

159
00:05:38,720 --> 00:05:40,160
what they mean

160
00:05:40,160 --> 00:05:42,240
vulnerability so vulnerability is a

161
00:05:42,240 --> 00:05:44,320
weakness in a system

162
00:05:44,320 --> 00:05:46,639
so it could be for example a result from

163
00:05:46,639 --> 00:05:47,919
a design deficiency

164
00:05:47,919 --> 00:05:51,280
or an implementation bug a vulnerability

165
00:05:51,280 --> 00:05:51,759
then

166
00:05:51,759 --> 00:05:54,160
actually could be exploited to obtain

167
00:05:54,160 --> 00:05:55,600
unauthorized access

168
00:05:55,600 --> 00:05:59,039
to the system and and then affect the

169
00:05:59,039 --> 00:06:01,039
system

170
00:06:01,039 --> 00:06:02,720
one of the examples i can do is for

171
00:06:02,720 --> 00:06:05,680
example an unsecured diagnostic code

172
00:06:05,680 --> 00:06:09,440
or a weakness in a gateway module

173
00:06:09,440 --> 00:06:11,520
which could lead to unsecured access to

174
00:06:11,520 --> 00:06:14,000
an sub network ecu

175
00:06:14,000 --> 00:06:16,639
that wouldn't be good right so you don't

176
00:06:16,639 --> 00:06:18,000
want your

177
00:06:18,000 --> 00:06:20,319
you know down down the stream ecu's to

178
00:06:20,319 --> 00:06:21,919
be accessed through gateway

179
00:06:21,919 --> 00:06:25,120
unauthorized so exploit

180
00:06:25,120 --> 00:06:27,520
expert refers to an action that takes

181
00:06:27,520 --> 00:06:28,479
the advantage

182
00:06:28,479 --> 00:06:30,720
you know of a vulnerability an exploit

183
00:06:30,720 --> 00:06:32,880
may reveal a behavior in the system

184
00:06:32,880 --> 00:06:35,600
which was not a design or implementation

185
00:06:35,600 --> 00:06:37,039
intent

186
00:06:37,039 --> 00:06:39,280
in penetration testing we want to expose

187
00:06:39,280 --> 00:06:40,960
maximum possible number of

188
00:06:40,960 --> 00:06:42,960
vulnerabilities and exploit them

189
00:06:42,960 --> 00:06:44,560
you know that's that's the purpose of

190
00:06:44,560 --> 00:06:46,400
you know penetration testing on canon

191
00:06:46,400 --> 00:06:48,080
canopy you want to exploit all the

192
00:06:48,080 --> 00:06:50,160
vulnerabilities before

193
00:06:50,160 --> 00:06:53,840
uh an adversary does it attack vector

194
00:06:53,840 --> 00:06:55,840
attack vectors basically these are

195
00:06:55,840 --> 00:06:57,440
mechanisms these are this refer to the

196
00:06:57,440 --> 00:06:58,080
mechanism

197
00:06:58,080 --> 00:07:00,560
and the targets or the paths an attacker

198
00:07:00,560 --> 00:07:01,520
can use

199
00:07:01,520 --> 00:07:04,720
to exploit a vulnerability so for

200
00:07:04,720 --> 00:07:06,960
instance you know an exploit may use

201
00:07:06,960 --> 00:07:09,120
an unsecured message vulnerability this

202
00:07:09,120 --> 00:07:11,039
means the message on the pass on the can

203
00:07:11,039 --> 00:07:12,560
bus is not secured

204
00:07:12,560 --> 00:07:14,880
and so does it makes it it makes it

205
00:07:14,880 --> 00:07:16,319
vulnerable

206
00:07:16,319 --> 00:07:19,199
and it could use attack vectors such as

207
00:07:19,199 --> 00:07:20,960
you know network management frames

208
00:07:20,960 --> 00:07:23,919
or if there is time dependency of normal

209
00:07:23,919 --> 00:07:25,759
mode transactions between the nodes for

210
00:07:25,759 --> 00:07:27,120
correct operations

211
00:07:27,120 --> 00:07:29,919
so those are the things a in adversary

212
00:07:29,919 --> 00:07:30,639
can use

213
00:07:30,639 --> 00:07:33,759
and confuse the network or even cause

214
00:07:33,759 --> 00:07:36,720
problems in the in the safe operation of

215
00:07:36,720 --> 00:07:39,120
the system in the car

216
00:07:39,120 --> 00:07:41,360
attack surface is a set of attack

217
00:07:41,360 --> 00:07:42,880
vectors you know essentially a group of

218
00:07:42,880 --> 00:07:44,800
attack vectors you know identified

219
00:07:44,800 --> 00:07:47,599
and uh you know they are loosely related

220
00:07:47,599 --> 00:07:48,080
uh

221
00:07:48,080 --> 00:07:51,520
to achieve an unexpected behavior in

222
00:07:51,520 --> 00:07:54,400
in a in a duty or an ecu or a on a

223
00:07:54,400 --> 00:07:55,360
network

224
00:07:55,360 --> 00:07:57,680
so attack server surface is essentially

225
00:07:57,680 --> 00:07:59,520
a group of attack vectors

226
00:07:59,520 --> 00:08:02,000
uh you know which are kind of related

227
00:08:02,000 --> 00:08:03,599
with each other for a specific

228
00:08:03,599 --> 00:08:06,560
uh you know identifying an unexpected

229
00:08:06,560 --> 00:08:10,160
behavior in the duty

230
00:08:11,759 --> 00:08:13,599
let's look at fuzzing concepts you know

231
00:08:13,599 --> 00:08:14,800
what are the objectives and what are the

232
00:08:14,800 --> 00:08:16,400
definitions you know you know some basic

233
00:08:16,400 --> 00:08:18,240
things before we get into you know deep

234
00:08:18,240 --> 00:08:20,560
dive into more into automotive things

235
00:08:20,560 --> 00:08:24,720
uh so fuzzing in information technology

236
00:08:24,720 --> 00:08:26,560
has been prevalent for many many years

237
00:08:26,560 --> 00:08:28,400
it's nothing new you know it's been done

238
00:08:28,400 --> 00:08:29,039
there

239
00:08:29,039 --> 00:08:32,000
uh many many times but with modern cars

240
00:08:32,000 --> 00:08:34,080
in the complex eda's in autonomous

241
00:08:34,080 --> 00:08:35,440
systems

242
00:08:35,440 --> 00:08:37,360
they run millions of lines of safety

243
00:08:37,360 --> 00:08:38,799
critical code

244
00:08:38,799 --> 00:08:40,479
fuzzing is actually now becoming

245
00:08:40,479 --> 00:08:42,159
extremely relevant for this

246
00:08:42,159 --> 00:08:43,919
automotive manufacturers and we can feel

247
00:08:43,919 --> 00:08:46,080
it being part of this you know community

248
00:08:46,080 --> 00:08:49,839
working with oems and tier suppliers uh

249
00:08:49,839 --> 00:08:52,640
with fuzzing essentially in the so my

250
00:08:52,640 --> 00:08:53,760
talk here is gonna

251
00:08:53,760 --> 00:08:55,760
you know kind of relate what it means

252
00:08:55,760 --> 00:08:56,800
for automotive world

253
00:08:56,800 --> 00:08:59,360
uh to do a penetration testing using can

254
00:08:59,360 --> 00:09:00,480
fuzzy

255
00:09:00,480 --> 00:09:01,920
so when with fuzzy we are challenging

256
00:09:01,920 --> 00:09:04,959
the software design and implementation

257
00:09:04,959 --> 00:09:08,480
through injecting most unexpected

258
00:09:08,480 --> 00:09:11,760
you know semi-malformed frames

259
00:09:11,760 --> 00:09:14,000
it's important to note this concept in

260
00:09:14,000 --> 00:09:14,959
the terms for

261
00:09:14,959 --> 00:09:18,240
automotive we do not want the frames to

262
00:09:18,240 --> 00:09:20,000
be rejected at electrical level

263
00:09:20,000 --> 00:09:21,600
otherwise it's meaningless the fuzzing

264
00:09:21,600 --> 00:09:23,519
will be meaningless if the electrical

265
00:09:23,519 --> 00:09:26,000
system rejects those frames

266
00:09:26,000 --> 00:09:29,760
uh we do want this we don't we do want

267
00:09:29,760 --> 00:09:30,560
to have

268
00:09:30,560 --> 00:09:34,000
enough validity in canon canopy frames

269
00:09:34,000 --> 00:09:37,040
for them to reach to the transfer layer

270
00:09:37,040 --> 00:09:39,920
and ultimately you know to the

271
00:09:39,920 --> 00:09:41,839
application layer and they should pass

272
00:09:41,839 --> 00:09:44,000
they should go past the object layer so

273
00:09:44,000 --> 00:09:45,360
it should reach the application

274
00:09:45,360 --> 00:09:48,480
so we want enough validity around that

275
00:09:48,480 --> 00:09:50,880
you know so otherwise uh the fuzzing is

276
00:09:50,880 --> 00:09:52,320
not not much relevant

277
00:09:52,320 --> 00:09:56,080
to can it must be noted that

278
00:09:56,080 --> 00:09:58,320
most of such frames are still protocol

279
00:09:58,320 --> 00:09:59,920
compliant you know when we are sending a

280
00:09:59,920 --> 00:10:01,680
cam frame for fuzzing it's gonna be

281
00:10:01,680 --> 00:10:03,360
protocol complex

282
00:10:03,360 --> 00:10:06,560
and so this is what we call as

283
00:10:06,560 --> 00:10:09,760
protocol aware fuzzy and in fact this is

284
00:10:09,760 --> 00:10:12,000
most relevant to can technology

285
00:10:12,000 --> 00:10:15,360
because can inherently in itself is

286
00:10:15,360 --> 00:10:17,680
very robust at controller and electrical

287
00:10:17,680 --> 00:10:18,640
level

288
00:10:18,640 --> 00:10:20,720
and it has excellent fault confinement

289
00:10:20,720 --> 00:10:23,760
so can itself is very well protected

290
00:10:23,760 --> 00:10:26,000
so you know so what should be our key

291
00:10:26,000 --> 00:10:27,519
objectives when it comes to

292
00:10:27,519 --> 00:10:29,440
automotive fuzzing essentially first you

293
00:10:29,440 --> 00:10:30,560
know uh

294
00:10:30,560 --> 00:10:32,880
early identification of security gaps

295
00:10:32,880 --> 00:10:33,839
and software parts

296
00:10:33,839 --> 00:10:36,000
you know it's paramount to reduce the

297
00:10:36,000 --> 00:10:38,160
number of field updates

298
00:10:38,160 --> 00:10:40,240
because of software issues and bugs we

299
00:10:40,240 --> 00:10:41,600
all know that because

300
00:10:41,600 --> 00:10:44,240
you know they are not cheap they are

301
00:10:44,240 --> 00:10:46,160
very expensive you know

302
00:10:46,160 --> 00:10:49,600
and so for example to have an ota

303
00:10:49,600 --> 00:10:51,600
or a photo campaign or their update

304
00:10:51,600 --> 00:10:53,120
campaign for a bug

305
00:10:53,120 --> 00:10:56,000
fix is really least desirable you know

306
00:10:56,000 --> 00:10:57,680
nobody wants to

307
00:10:57,680 --> 00:11:00,959
you know do an ota campaign uh to bug

308
00:11:00,959 --> 00:11:02,800
to fix a bug you know that's not

309
00:11:02,800 --> 00:11:04,240
something uh you know

310
00:11:04,240 --> 00:11:06,160
ota campaign should be focused on ota

311
00:11:06,160 --> 00:11:07,760
campaigns are really to provide new

312
00:11:07,760 --> 00:11:10,000
features to the customers

313
00:11:10,000 --> 00:11:12,480
there is tremendous need of testing

314
00:11:12,480 --> 00:11:14,959
these ot updates before

315
00:11:14,959 --> 00:11:16,959
they're deployed in the cars and that's

316
00:11:16,959 --> 00:11:20,320
when the can and can fd fuzzing

317
00:11:20,320 --> 00:11:23,360
is very important thus the

318
00:11:23,360 --> 00:11:24,959
recommendation essentially

319
00:11:24,959 --> 00:11:28,320
is to add the fuzzing first testing as

320
00:11:28,320 --> 00:11:30,560
part of sdlc or software development and

321
00:11:30,560 --> 00:11:31,839
release cycle

322
00:11:31,839 --> 00:11:34,399
uh and automation tools are the most you

323
00:11:34,399 --> 00:11:34,959
know

324
00:11:34,959 --> 00:11:36,480
you know most important in this case

325
00:11:36,480 --> 00:11:38,240
vehicle spy software is a good software

326
00:11:38,240 --> 00:11:39,120
to

327
00:11:39,120 --> 00:11:40,560
integrate the automation testing in

328
00:11:40,560 --> 00:11:43,200
automated integrated testing for

329
00:11:43,200 --> 00:11:45,519
running the fuzzer tests at every

330
00:11:45,519 --> 00:11:46,480
release

331
00:11:46,480 --> 00:11:50,240
cycle and that would be very prudent

332
00:11:50,240 --> 00:11:53,040
to do this to identify security gaps or

333
00:11:53,040 --> 00:11:54,079
software bugs

334
00:11:54,079 --> 00:11:56,160
in the target ecu's or nodes and

335
00:11:56,160 --> 00:11:58,000
networks

336
00:11:58,000 --> 00:12:01,279
uh second fuzzing can be extremely

337
00:12:01,279 --> 00:12:02,079
useful tool

338
00:12:02,079 --> 00:12:04,560
to try to provide robustness to the

339
00:12:04,560 --> 00:12:05,440
system level

340
00:12:05,440 --> 00:12:08,320
validation or the system level fails

341
00:12:08,320 --> 00:12:10,720
safe mechanisms good enough

342
00:12:10,720 --> 00:12:14,480
against an adversary getting partial or

343
00:12:14,480 --> 00:12:15,760
full control

344
00:12:15,760 --> 00:12:18,560
of critical messaging between subsystem

345
00:12:18,560 --> 00:12:20,560
nodes

346
00:12:20,560 --> 00:12:22,720
that's why system level first testing is

347
00:12:22,720 --> 00:12:24,720
also very very you know important

348
00:12:24,720 --> 00:12:28,320
to be done third uh

349
00:12:28,320 --> 00:12:30,880
idea is essentially again you know to to

350
00:12:30,880 --> 00:12:32,800
look for vulnerabilities on can and can

351
00:12:32,800 --> 00:12:33,360
fd

352
00:12:33,360 --> 00:12:35,600
node and networks and before somebody

353
00:12:35,600 --> 00:12:37,519
else finds it essentially you know

354
00:12:37,519 --> 00:12:39,279
hack into your own network find out all

355
00:12:39,279 --> 00:12:40,560
the exploits you know use all the

356
00:12:40,560 --> 00:12:41,600
exploits

357
00:12:41,600 --> 00:12:44,639
before somebody else does it uh and

358
00:12:44,639 --> 00:12:46,240
so yeah that's that's one of the

359
00:12:46,240 --> 00:12:47,680
important objectives

360
00:12:47,680 --> 00:12:50,320
uh in automotive uh world for using can

361
00:12:50,320 --> 00:12:52,800
and kind of defuzzing

362
00:12:52,800 --> 00:12:55,760
uh lastly you know it's great test to

363
00:12:55,760 --> 00:12:57,120
just test the network

364
00:12:57,120 --> 00:13:00,240
and note performance against extreme uh

365
00:13:00,240 --> 00:13:02,079
i would say unusual traffic you know

366
00:13:02,079 --> 00:13:04,480
it's in itself it brings the robustness

367
00:13:04,480 --> 00:13:05,040
you know

368
00:13:05,040 --> 00:13:07,839
so you know adding robust robustness to

369
00:13:07,839 --> 00:13:10,079
this in vehicle network performance

370
00:13:10,079 --> 00:13:12,800
is extremely you know useful technique

371
00:13:12,800 --> 00:13:13,600
and you know

372
00:13:13,600 --> 00:13:15,920
that's why penetration testing using can

373
00:13:15,920 --> 00:13:17,600
uh can fuzzing is

374
00:13:17,600 --> 00:13:21,839
getting more grounds uh

375
00:13:21,839 --> 00:13:24,399
let's look at uh some of the techniques

376
00:13:24,399 --> 00:13:25,680
and you know methods

377
00:13:25,680 --> 00:13:28,320
of how you can do can canf defuzzing so

378
00:13:28,320 --> 00:13:28,800
i'm gonna

379
00:13:28,800 --> 00:13:32,079
talk about few of them today and this

380
00:13:32,079 --> 00:13:33,760
some of these come from our experience

381
00:13:33,760 --> 00:13:34,959
working with you know a lot of our

382
00:13:34,959 --> 00:13:35,600
customers

383
00:13:35,600 --> 00:13:38,000
you know and you know doing some

384
00:13:38,000 --> 00:13:39,120
research on my own

385
00:13:39,120 --> 00:13:40,720
so i'm kind of sharing some of the

386
00:13:40,720 --> 00:13:42,320
things which you know the

387
00:13:42,320 --> 00:13:44,560
which is being you know practicing in

388
00:13:44,560 --> 00:13:46,160
the industry right now

389
00:13:46,160 --> 00:13:47,680
so let's become aware of some of the key

390
00:13:47,680 --> 00:13:49,440
mechanisms when we are fuzzing

391
00:13:49,440 --> 00:13:53,279
uh ecu's or can and can fd networks

392
00:13:53,279 --> 00:13:55,680
can and canopy networks as i said are

393
00:13:55,680 --> 00:13:56,480
inherently

394
00:13:56,480 --> 00:14:00,079
highly fault tolerant buses uh also note

395
00:14:00,079 --> 00:14:00,639
that

396
00:14:00,639 --> 00:14:03,519
traditional automotive networks have

397
00:14:03,519 --> 00:14:03,839
been

398
00:14:03,839 --> 00:14:07,120
embedded device networks which have many

399
00:14:07,120 --> 00:14:10,399
electromechanical sensing and actuation

400
00:14:10,399 --> 00:14:11,199
systems

401
00:14:11,199 --> 00:14:14,240
under their control thus the

402
00:14:14,240 --> 00:14:16,399
identification of attack vectors

403
00:14:16,399 --> 00:14:18,639
and careful identification of first

404
00:14:18,639 --> 00:14:19,519
scenarios

405
00:14:19,519 --> 00:14:22,240
is probably where the most focus needs

406
00:14:22,240 --> 00:14:22,720
to be

407
00:14:22,720 --> 00:14:24,639
you know we're to be very carefully

408
00:14:24,639 --> 00:14:26,880
identifying all the attack vectors

409
00:14:26,880 --> 00:14:29,360
because these ecu's control the vehicle

410
00:14:29,360 --> 00:14:31,600
operation the automotive operation

411
00:14:31,600 --> 00:14:35,279
and it's important to identify all those

412
00:14:35,279 --> 00:14:38,399
possibilities for example you know

413
00:14:38,399 --> 00:14:40,320
we all know about denial of service

414
00:14:40,320 --> 00:14:41,519
situation

415
00:14:41,519 --> 00:14:43,440
in i.t world but how do you define or

416
00:14:43,440 --> 00:14:45,199
how do you can you can we envision a

417
00:14:45,199 --> 00:14:46,959
denial of service situation

418
00:14:46,959 --> 00:14:50,160
in the context of ecu cluster

419
00:14:50,160 --> 00:14:52,560
or more importantly how do we design

420
00:14:52,560 --> 00:14:53,600
fuzzing

421
00:14:53,600 --> 00:14:55,760
so that we find all the vulnerabilities

422
00:14:55,760 --> 00:14:58,399
before an adversary fines

423
00:14:58,399 --> 00:15:01,920
on an ecu cluster so some of the methods

424
00:15:01,920 --> 00:15:02,959
and techniques uh

425
00:15:02,959 --> 00:15:05,440
which you know we could look into is you

426
00:15:05,440 --> 00:15:07,519
know uh

427
00:15:07,519 --> 00:15:10,720
are here so for example uh it's

428
00:15:10,720 --> 00:15:12,079
important that we

429
00:15:12,079 --> 00:15:15,040
thoroughly study to identify all

430
00:15:15,040 --> 00:15:16,880
possible attack service surfaces you

431
00:15:16,880 --> 00:15:18,959
know some of the examples i can give

432
00:15:18,959 --> 00:15:22,160
is focus on payload data

433
00:15:22,160 --> 00:15:23,600
bytes for example the payload the

434
00:15:23,600 --> 00:15:25,680
content itself of the frame the payload

435
00:15:25,680 --> 00:15:27,839
which is going to be consumed by

436
00:15:27,839 --> 00:15:30,959
different nodes uh frame priorities

437
00:15:30,959 --> 00:15:32,079
you know those are based on the

438
00:15:32,079 --> 00:15:34,480
arbitration ids on can

439
00:15:34,480 --> 00:15:37,680
so can we see a situation where

440
00:15:37,680 --> 00:15:41,360
a design was dependent on a priority and

441
00:15:41,360 --> 00:15:45,440
an adversary attack changes the priority

442
00:15:45,440 --> 00:15:48,639
of that frame critical factors

443
00:15:48,639 --> 00:15:50,560
like dependency of internal ecu

444
00:15:50,560 --> 00:15:51,920
algorithms

445
00:15:51,920 --> 00:15:54,880
on for example a periodicity of frame uh

446
00:15:54,880 --> 00:15:55,199
with

447
00:15:55,199 --> 00:15:57,600
needed data such as these are the things

448
00:15:57,600 --> 00:15:58,959
you know we need to look into and

449
00:15:58,959 --> 00:16:00,079
identify and study

450
00:16:00,079 --> 00:16:01,920
you know if is my algorithm totally

451
00:16:01,920 --> 00:16:04,480
dependent on a you know fixed frequency

452
00:16:04,480 --> 00:16:05,440
can data

453
00:16:05,440 --> 00:16:08,560
and can the adversary attack that and

454
00:16:08,560 --> 00:16:10,079
affect the algorithm

455
00:16:10,079 --> 00:16:12,399
and make a wrong decision in the car

456
00:16:12,399 --> 00:16:14,000
these are good pointers to direct your

457
00:16:14,000 --> 00:16:14,959
first test

458
00:16:14,959 --> 00:16:18,160
and to cover all the you know aspects

459
00:16:18,160 --> 00:16:20,399
some of the mechanisms which would be

460
00:16:20,399 --> 00:16:22,000
useful uh

461
00:16:22,000 --> 00:16:24,079
include monitoring the nodes for their

462
00:16:24,079 --> 00:16:26,079
abnormal outputs

463
00:16:26,079 --> 00:16:28,720
and such as you know like through

464
00:16:28,720 --> 00:16:30,480
diagnostic queries you can query the

465
00:16:30,480 --> 00:16:31,680
diagnostics

466
00:16:31,680 --> 00:16:34,079
or you can stimulate the ios for example

467
00:16:34,079 --> 00:16:36,000
and then observe the response on the

468
00:16:36,000 --> 00:16:36,800
network

469
00:16:36,800 --> 00:16:39,360
while you're conducting the fuss or the

470
00:16:39,360 --> 00:16:42,320
first test serving run

471
00:16:43,120 --> 00:16:45,600
in ecu world you know getting a feedback

472
00:16:45,600 --> 00:16:46,720
from the system

473
00:16:46,720 --> 00:16:48,560
is the key to make sure you know the

474
00:16:48,560 --> 00:16:50,000
fuzzing actually

475
00:16:50,000 --> 00:16:52,240
use the relevant results out uh

476
00:16:52,240 --> 00:16:54,079
classical pervasive definitions in

477
00:16:54,079 --> 00:16:55,680
fuzzing like uh

478
00:16:55,680 --> 00:16:58,000
like generational techniques uh there

479
00:16:58,000 --> 00:16:59,920
are generation techniques there are

480
00:16:59,920 --> 00:17:02,000
uh there are mutational fuzzing there is

481
00:17:02,000 --> 00:17:03,360
you know randomization

482
00:17:03,360 --> 00:17:05,599
so for example in generational fuzzer

483
00:17:05,599 --> 00:17:06,400
new frames

484
00:17:06,400 --> 00:17:08,160
are actually created by the first tool

485
00:17:08,160 --> 00:17:09,520
that's the concept in generational

486
00:17:09,520 --> 00:17:11,199
fuzzer you know where you generate

487
00:17:11,199 --> 00:17:14,640
the two the new new frames from the

488
00:17:14,640 --> 00:17:18,240
first tool this means an intelligent

489
00:17:18,240 --> 00:17:18,880
fuzzer

490
00:17:18,880 --> 00:17:22,160
uh can establish a

491
00:17:22,160 --> 00:17:25,199
closer relation between generated first

492
00:17:25,199 --> 00:17:26,559
frame

493
00:17:26,559 --> 00:17:28,480
to the normally present frames on the

494
00:17:28,480 --> 00:17:32,080
network and that's an important concept

495
00:17:32,080 --> 00:17:35,440
to to deceive a system the frame should

496
00:17:35,440 --> 00:17:36,960
appear to be very normal

497
00:17:36,960 --> 00:17:38,880
but carrying you know causing abnormal

498
00:17:38,880 --> 00:17:41,120
effects on the bus

499
00:17:41,120 --> 00:17:44,240
so thus making such injected frames

500
00:17:44,240 --> 00:17:45,919
they have to be more valued from the

501
00:17:45,919 --> 00:17:47,919
duty perspective

502
00:17:47,919 --> 00:17:50,320
uh this kind of protocol aware fuzzing

503
00:17:50,320 --> 00:17:52,480
is actually most relevant for can or can

504
00:17:52,480 --> 00:17:53,760
fd nodes

505
00:17:53,760 --> 00:17:56,080
uh in that i've been talking about that

506
00:17:56,080 --> 00:17:58,559
you know in this presentation

507
00:17:58,559 --> 00:18:01,600
uh mutational fuzzing also needs

508
00:18:01,600 --> 00:18:04,080
to be protocol aware uh when it comes to

509
00:18:04,080 --> 00:18:05,840
applying applying to automotive networks

510
00:18:05,840 --> 00:18:07,520
you know that is not that much relevant

511
00:18:07,520 --> 00:18:08,559
when it comes to

512
00:18:08,559 --> 00:18:11,280
for example i.t networks for automotive

513
00:18:11,280 --> 00:18:13,840
networks even the mutational fuzzing

514
00:18:13,840 --> 00:18:15,520
you know technique needs to be protocol

515
00:18:15,520 --> 00:18:17,600
aware

516
00:18:17,600 --> 00:18:20,400
so how do you do that you introduce

517
00:18:20,400 --> 00:18:22,799
minute variations in the data

518
00:18:22,799 --> 00:18:26,000
through automated mechanism uh in a tool

519
00:18:26,000 --> 00:18:28,559
in automation and you inject those

520
00:18:28,559 --> 00:18:30,400
minute variation of the data

521
00:18:30,400 --> 00:18:34,080
on the bus and so essentially

522
00:18:34,080 --> 00:18:37,280
uh to see whether the relevant nodes and

523
00:18:37,280 --> 00:18:38,320
ecu's

524
00:18:38,320 --> 00:18:41,679
understand and can take you know write

525
00:18:41,679 --> 00:18:44,720
actions uh when the data is not the real

526
00:18:44,720 --> 00:18:46,480
data

527
00:18:46,480 --> 00:18:49,120
but looks like real data uh with

528
00:18:49,120 --> 00:18:50,160
randomizer

529
00:18:50,160 --> 00:18:52,720
for example a unique it's a unique black

530
00:18:52,720 --> 00:18:53,760
box you know

531
00:18:53,760 --> 00:18:58,400
technique uh where you can realize

532
00:18:58,400 --> 00:19:00,640
you can realize the first frame can

533
00:19:00,640 --> 00:19:02,000
really create totally

534
00:19:02,000 --> 00:19:04,400
agnostic uh situation to the you know

535
00:19:04,400 --> 00:19:07,360
arbitration ids or dlcs

536
00:19:07,360 --> 00:19:08,960
and you know you can in the

537
00:19:08,960 --> 00:19:10,880
randomization you can actually on the

538
00:19:10,880 --> 00:19:11,360
fly

539
00:19:11,360 --> 00:19:14,080
switch between canon canopy frames to

540
00:19:14,080 --> 00:19:14,480
see

541
00:19:14,480 --> 00:19:16,640
you know how the reaction is from the

542
00:19:16,640 --> 00:19:17,840
network

543
00:19:17,840 --> 00:19:20,080
and there are tools like vehicle spy and

544
00:19:20,080 --> 00:19:21,840
you know there are hardware tools from

545
00:19:21,840 --> 00:19:24,160
us you know we have family hardware

546
00:19:24,160 --> 00:19:27,039
which allow you know they're very

547
00:19:27,039 --> 00:19:29,679
helpful in realizing

548
00:19:29,679 --> 00:19:34,160
you know random randomizer for fuzzing

549
00:19:36,480 --> 00:19:38,960
let's look at some more techniques here

550
00:19:38,960 --> 00:19:40,080
as i mentioned before

551
00:19:40,080 --> 00:19:42,160
it's important to understand if the duty

552
00:19:42,160 --> 00:19:43,679
response is valid

553
00:19:43,679 --> 00:19:46,320
or is it invalid or unexpected or

554
00:19:46,320 --> 00:19:47,600
abnormal you know

555
00:19:47,600 --> 00:19:50,400
so in automotive world rest bus

556
00:19:50,400 --> 00:19:51,120
awareness

557
00:19:51,120 --> 00:19:53,679
is the key you know how is the rest bus

558
00:19:53,679 --> 00:19:55,280
behaving how are the other nodes

559
00:19:55,280 --> 00:19:56,320
behaving when i am

560
00:19:56,320 --> 00:19:59,360
for example doing a mutational fuzzer so

561
00:19:59,360 --> 00:20:00,880
it's very important to get the

562
00:20:00,880 --> 00:20:03,360
feedback from the network you know

563
00:20:03,360 --> 00:20:05,120
another important aspect is what is

564
00:20:05,120 --> 00:20:05,760
called as

565
00:20:05,760 --> 00:20:08,159
what essentially it's a new phrase you

566
00:20:08,159 --> 00:20:09,520
know phrase which is

567
00:20:09,520 --> 00:20:10,960
you know quite decent is perpetual

568
00:20:10,960 --> 00:20:13,280
fuzzing so this again comes from the

569
00:20:13,280 --> 00:20:14,240
automotive concept

570
00:20:14,240 --> 00:20:16,640
you know in perpetual fuzzing this means

571
00:20:16,640 --> 00:20:17,280
the first

572
00:20:17,280 --> 00:20:20,159
testing is a part of your development

573
00:20:20,159 --> 00:20:21,360
life cycle

574
00:20:21,360 --> 00:20:24,240
uh in these fuzzing configurations

575
00:20:24,240 --> 00:20:24,799
improv

576
00:20:24,799 --> 00:20:27,679
can be continuously improvised by adding

577
00:20:27,679 --> 00:20:28,080
uh

578
00:20:28,080 --> 00:20:31,120
more and more unusual scenarios one

579
00:20:31,120 --> 00:20:33,440
aspect of can and kind of defusing it

580
00:20:33,440 --> 00:20:35,600
is you know it's conceptually that these

581
00:20:35,600 --> 00:20:36,640
tests

582
00:20:36,640 --> 00:20:38,640
actually do not directly depend on the

583
00:20:38,640 --> 00:20:39,919
duty

584
00:20:39,919 --> 00:20:41,520
i mean duty specifications and

585
00:20:41,520 --> 00:20:43,200
requirements do not

586
00:20:43,200 --> 00:20:46,400
affect the can first test this means

587
00:20:46,400 --> 00:20:47,200
first

588
00:20:47,200 --> 00:20:48,799
first test could be independently

589
00:20:48,799 --> 00:20:50,240
created as issued

590
00:20:50,240 --> 00:20:53,520
to apply to various different duties uh

591
00:20:53,520 --> 00:20:56,480
some parts of such first test mechanisms

592
00:20:56,480 --> 00:20:58,320
as feedback measurement may only need to

593
00:20:58,320 --> 00:21:00,400
really change depending on what ecu we

594
00:21:00,400 --> 00:21:02,159
are talking to

595
00:21:02,159 --> 00:21:05,120
for example if it's an abs ecu i could

596
00:21:05,120 --> 00:21:05,760
measure

597
00:21:05,760 --> 00:21:08,080
its performance differently than if it's

598
00:21:08,080 --> 00:21:10,240
an airbag ecu

599
00:21:10,240 --> 00:21:11,760
i'm going to talk more about this you

600
00:21:11,760 --> 00:21:13,360
know you know more about vehicle spy

601
00:21:13,360 --> 00:21:14,240
software

602
00:21:14,240 --> 00:21:16,720
which has capability to run uh first

603
00:21:16,720 --> 00:21:17,679
test

604
00:21:17,679 --> 00:21:20,080
uh you know first test execution engine

605
00:21:20,080 --> 00:21:21,679
and the measurement engine

606
00:21:21,679 --> 00:21:23,679
in parallel you know that's the key for

607
00:21:23,679 --> 00:21:25,200
vehicles you know that's the key which

608
00:21:25,200 --> 00:21:26,960
i've seen in vehicle spy software

609
00:21:26,960 --> 00:21:28,960
i should be able to run my fuzzer

610
00:21:28,960 --> 00:21:30,000
execution engine

611
00:21:30,000 --> 00:21:32,400
in parallel to my measurement engine

612
00:21:32,400 --> 00:21:33,200
that gives

613
00:21:33,200 --> 00:21:36,480
uh that gives very good control on

614
00:21:36,480 --> 00:21:39,360
on the tests and this remains i think a

615
00:21:39,360 --> 00:21:40,799
critical feature

616
00:21:40,799 --> 00:21:45,840
for successful capturing of the failures

617
00:21:47,200 --> 00:21:49,679
lastly a thorough consideration is

618
00:21:49,679 --> 00:21:50,640
needed

619
00:21:50,640 --> 00:21:52,880
if duty is a gateway device and you'll

620
00:21:52,880 --> 00:21:54,640
see a lot of gateways these days you

621
00:21:54,640 --> 00:21:55,039
know

622
00:21:55,039 --> 00:21:58,159
new network architecture has you know

623
00:21:58,159 --> 00:21:59,840
ota updates you know so there is a

624
00:21:59,840 --> 00:22:01,679
generally gateway module a telematics

625
00:22:01,679 --> 00:22:04,480
module uh and a gateway module and these

626
00:22:04,480 --> 00:22:06,000
are very special

627
00:22:06,000 --> 00:22:08,000
characteristics we you know i have had

628
00:22:08,000 --> 00:22:09,520
experience and we have you know

629
00:22:09,520 --> 00:22:11,039
tremendous amount of experience working

630
00:22:11,039 --> 00:22:12,720
with gateway modules

631
00:22:12,720 --> 00:22:16,159
for very complex scenarios and testings

632
00:22:16,159 --> 00:22:18,720
and these gateway modules have special

633
00:22:18,720 --> 00:22:19,440
character

634
00:22:19,440 --> 00:22:22,799
characteristics like photo or

635
00:22:22,799 --> 00:22:25,679
firmware over the air updates or if it

636
00:22:25,679 --> 00:22:26,000
could

637
00:22:26,000 --> 00:22:27,919
it could be like a telematics ec or a

638
00:22:27,919 --> 00:22:30,080
v2x ecu's

639
00:22:30,080 --> 00:22:33,200
in these scenarios uh fuzzing could be a

640
00:22:33,200 --> 00:22:35,039
lot more complex

641
00:22:35,039 --> 00:22:38,080
and and it may require

642
00:22:38,080 --> 00:22:40,960
to run your first scenarios across

643
00:22:40,960 --> 00:22:42,400
multiple of clusters

644
00:22:42,400 --> 00:22:44,400
or networks at the same time because

645
00:22:44,400 --> 00:22:46,400
gateway module connects to maybe let's

646
00:22:46,400 --> 00:22:47,440
say eight subnet

647
00:22:47,440 --> 00:22:50,159
sub networks and it's important to be

648
00:22:50,159 --> 00:22:51,919
able to monitor all of them

649
00:22:51,919 --> 00:22:53,919
while you are attacking the gateway

650
00:22:53,919 --> 00:22:56,799
module for your first testing

651
00:22:56,799 --> 00:22:59,520
so in such cases the response monitoring

652
00:22:59,520 --> 00:23:00,799
also requires

653
00:23:00,799 --> 00:23:02,960
pretty advanced setups because you need

654
00:23:02,960 --> 00:23:04,720
you could have a downstream ecu on a

655
00:23:04,720 --> 00:23:06,559
sixth scan network

656
00:23:06,559 --> 00:23:08,640
misbehaving because we did the first

657
00:23:08,640 --> 00:23:10,880
test or we did the first attack on the

658
00:23:10,880 --> 00:23:12,640
gateway module

659
00:23:12,640 --> 00:23:14,720
uh so these are all the things uh

660
00:23:14,720 --> 00:23:16,159
happening in the industry and you know

661
00:23:16,159 --> 00:23:16,880
i'm

662
00:23:16,880 --> 00:23:18,400
i'm happy to share with this community

663
00:23:18,400 --> 00:23:21,600
here my concluding observation

664
00:23:21,600 --> 00:23:24,400
on this particular part is fuzzing for

665
00:23:24,400 --> 00:23:26,240
automotive is more design oriented you

666
00:23:26,240 --> 00:23:28,400
know

667
00:23:28,559 --> 00:23:30,159
to be effective it has to be design

668
00:23:30,159 --> 00:23:32,400
oriented there has to be design idea

669
00:23:32,400 --> 00:23:35,200
behind how we want to first simply

670
00:23:35,200 --> 00:23:36,000
sending random

671
00:23:36,000 --> 00:23:38,000
frames without like a closed loop

672
00:23:38,000 --> 00:23:40,880
control and without the ecu behavior

673
00:23:40,880 --> 00:23:44,480
aware monitors may not necessarily yield

674
00:23:44,480 --> 00:23:47,039
desired outcomes we need to minutely

675
00:23:47,039 --> 00:23:48,799
observe what ecu's are doing what

676
00:23:48,799 --> 00:23:50,559
network is doing when we

677
00:23:50,559 --> 00:23:54,240
perform this fast testing

678
00:23:54,240 --> 00:23:56,799
uh but the technique itself is doubtless

679
00:23:56,799 --> 00:23:59,200
in the industry now you know is required

680
00:23:59,200 --> 00:24:00,720
you know for the for the robustness of

681
00:24:00,720 --> 00:24:02,480
the vehicles and the you know

682
00:24:02,480 --> 00:24:04,720
uh the performance of the vehicles in

683
00:24:04,720 --> 00:24:07,440
the you know in the field

684
00:24:07,440 --> 00:24:10,080
uh you you know you finding a single

685
00:24:10,080 --> 00:24:11,120
vulnerability

686
00:24:11,120 --> 00:24:13,360
of in a post-production environment when

687
00:24:13,360 --> 00:24:15,039
vehicles doing on the road

688
00:24:15,039 --> 00:24:17,360
it's very expensive to update it's very

689
00:24:17,360 --> 00:24:18,400
expensive

690
00:24:18,400 --> 00:24:21,120
and it could be you know a safety issue

691
00:24:21,120 --> 00:24:21,440
for

692
00:24:21,440 --> 00:24:24,559
uh for people

693
00:24:24,960 --> 00:24:28,240
uh with here you know i want to

694
00:24:28,240 --> 00:24:29,840
i have spent a lot of time working on

695
00:24:29,840 --> 00:24:31,760
you know interpret vehicle spy

696
00:24:31,760 --> 00:24:34,159
tool and i want to share my experience

697
00:24:34,159 --> 00:24:35,120
uh

698
00:24:35,120 --> 00:24:38,320
in using this tool for can fuzzing uh

699
00:24:38,320 --> 00:24:41,279
this this mostly this tool you know use

700
00:24:41,279 --> 00:24:42,720
it has been used you know i've been

701
00:24:42,720 --> 00:24:44,480
using this tool with automotive oems and

702
00:24:44,480 --> 00:24:46,720
tier suppliers to you know see

703
00:24:46,720 --> 00:24:49,520
you know how how they can first their

704
00:24:49,520 --> 00:24:51,360
networks and ecu's

705
00:24:51,360 --> 00:24:53,760
yeah so interpret you know has created a

706
00:24:53,760 --> 00:24:55,600
set of tools and a framework

707
00:24:55,600 --> 00:24:57,039
the framework is pretty involved

708
00:24:57,039 --> 00:25:00,320
framework where you know uh

709
00:25:00,320 --> 00:25:02,640
you could set up a bench for a feedback

710
00:25:02,640 --> 00:25:04,240
loop mechanism from the ecu

711
00:25:04,240 --> 00:25:06,320
from the duties and you can perform

712
00:25:06,320 --> 00:25:07,360
extensive fuzz

713
00:25:07,360 --> 00:25:10,400
frame injection and execute the first

714
00:25:10,400 --> 00:25:14,000
tests on these networks uh

715
00:25:14,000 --> 00:25:16,000
so some of the advantages which i have

716
00:25:16,000 --> 00:25:17,360
seen uh for

717
00:25:17,360 --> 00:25:20,240
from using uh vehicle spy and neo vi

718
00:25:20,240 --> 00:25:21,760
family of hardware

719
00:25:21,760 --> 00:25:24,000
is that vehicle spy has a ui driven

720
00:25:24,000 --> 00:25:24,960
fuzzing engine

721
00:25:24,960 --> 00:25:28,400
this means even associating a complex

722
00:25:28,400 --> 00:25:31,200
complex test script with the first test

723
00:25:31,200 --> 00:25:32,559
doesn't require

724
00:25:32,559 --> 00:25:34,480
like a whole team of python programmers

725
00:25:34,480 --> 00:25:36,080
you know that is the benefit i have seen

726
00:25:36,080 --> 00:25:37,520
our customers using and you know

727
00:25:37,520 --> 00:25:40,000
myself using it for my own fuzzing

728
00:25:40,000 --> 00:25:41,200
research

729
00:25:41,200 --> 00:25:43,039
uh you don't need like tons of script

730
00:25:43,039 --> 00:25:44,880
creators or programmers you know

731
00:25:44,880 --> 00:25:46,559
work on creating this you know thousands

732
00:25:46,559 --> 00:25:48,720
of scenarios uh which you can easily

733
00:25:48,720 --> 00:25:49,279
create

734
00:25:49,279 --> 00:25:52,799
in automation uh and in in the

735
00:25:52,799 --> 00:25:54,159
in the perspective of you know

736
00:25:54,159 --> 00:25:56,240
automotive all of these things

737
00:25:56,240 --> 00:25:58,159
must sit well with the current

738
00:25:58,159 --> 00:25:59,279
verification valid

739
00:25:59,279 --> 00:26:02,320
valid validation teams uh they need to

740
00:26:02,320 --> 00:26:04,000
be onboarded immediately with this

741
00:26:04,000 --> 00:26:06,080
you can develop a whole team who just

742
00:26:06,080 --> 00:26:07,520
does the cam fuzzing

743
00:26:07,520 --> 00:26:10,480
so vehicles fire allows those kind of

744
00:26:10,480 --> 00:26:11,600
capabilities

745
00:26:11,600 --> 00:26:15,120
in the tool itself and interpret

746
00:26:15,120 --> 00:26:17,360
you know we as a company have been doing

747
00:26:17,360 --> 00:26:19,039
automotive networks for i think almost

748
00:26:19,039 --> 00:26:20,559
26 years now

749
00:26:20,559 --> 00:26:23,279
and you know although ems have been our

750
00:26:23,279 --> 00:26:24,720
customers we've been working with them

751
00:26:24,720 --> 00:26:25,919
from years so

752
00:26:25,919 --> 00:26:29,039
we have i mean we have applied all that

753
00:26:29,039 --> 00:26:30,159
extensive experience

754
00:26:30,159 --> 00:26:32,880
working with ecu's and networks and you

755
00:26:32,880 --> 00:26:34,559
know building high-end you know

756
00:26:34,559 --> 00:26:37,919
high-speed fpga based tools

757
00:26:37,919 --> 00:26:39,840
in our tooling for fuzzer is also

758
00:26:39,840 --> 00:26:42,240
designed totally around automotive ecu's

759
00:26:42,240 --> 00:26:44,559
and networks

760
00:26:44,559 --> 00:26:47,600
one of the biggest factor for

761
00:26:47,600 --> 00:26:49,919
automotive ecu's fuzzing is diagnostics

762
00:26:49,919 --> 00:26:51,039
you know diagnostics

763
00:26:51,039 --> 00:26:54,400
is also an integral part of an ecu and

764
00:26:54,400 --> 00:26:56,080
also an ethical part of vehicle spy

765
00:26:56,080 --> 00:26:57,120
software

766
00:26:57,120 --> 00:26:59,679
so while you're fuzzing you can do your

767
00:26:59,679 --> 00:27:02,240
diagnostics on the diagnostic channel

768
00:27:02,240 --> 00:27:05,600
and query the ecu at the same time

769
00:27:05,600 --> 00:27:09,520
you can also essentially uh

770
00:27:09,520 --> 00:27:12,559
fuzz the diagnostic channel itself

771
00:27:12,559 --> 00:27:13,919
and that's the beauty of you know some

772
00:27:13,919 --> 00:27:15,120
of the things which we have done with

773
00:27:15,120 --> 00:27:16,320
the you know

774
00:27:16,320 --> 00:27:19,679
our customers so

775
00:27:19,679 --> 00:27:22,159
we the native support for a transport

776
00:27:22,159 --> 00:27:23,520
layer is already there

777
00:27:23,520 --> 00:27:26,080
native support for obd or worldwide

778
00:27:26,080 --> 00:27:28,159
harmonized obd is already there

779
00:27:28,159 --> 00:27:29,919
uh some of these tools are already

780
00:27:29,919 --> 00:27:31,600
supported in vehicle spy and we were

781
00:27:31,600 --> 00:27:32,480
able to leverage

782
00:27:32,480 --> 00:27:35,679
all of that for our further

783
00:27:35,679 --> 00:27:37,919
with inherent capability in these tools

784
00:27:37,919 --> 00:27:40,480
for multiple channel fuzzing

785
00:27:40,480 --> 00:27:43,039
is very important if duty is a gateway

786
00:27:43,039 --> 00:27:44,720
node i do want to monitor

787
00:27:44,720 --> 00:27:47,200
all the subnets at the same time you

788
00:27:47,200 --> 00:27:48,159
know in the same

789
00:27:48,159 --> 00:27:49,760
you know in the same context when the

790
00:27:49,760 --> 00:27:52,159
same tests are running

791
00:27:52,159 --> 00:27:54,960
at the same time the tooling also need

792
00:27:54,960 --> 00:27:56,640
to be able to simulate

793
00:27:56,640 --> 00:27:59,039
some of the rest bus behavior because

794
00:27:59,039 --> 00:28:00,159
you know

795
00:28:00,159 --> 00:28:02,240
some of the ecu's depend their operation

796
00:28:02,240 --> 00:28:04,159
on the rest bus being perfectly fine

797
00:28:04,159 --> 00:28:05,360
else it's going to shut down its

798
00:28:05,360 --> 00:28:07,120
transceiver if it shut downs it

799
00:28:07,120 --> 00:28:08,399
transceiver we are not going to be able

800
00:28:08,399 --> 00:28:09,520
to fuzz anymore

801
00:28:09,520 --> 00:28:12,080
so we have to kind of keep the ecu awake

802
00:28:12,080 --> 00:28:14,240
to a certain point where it accepts our

803
00:28:14,240 --> 00:28:16,960
you know first frames uh developed and

804
00:28:16,960 --> 00:28:19,120
then you can attack the ecu so

805
00:28:19,120 --> 00:28:21,200
rest bus simulation is also extremely

806
00:28:21,200 --> 00:28:22,320
important when you're fuzzing so

807
00:28:22,320 --> 00:28:23,919
remember that you know if your network

808
00:28:23,919 --> 00:28:25,760
of ecu's make sure

809
00:28:25,760 --> 00:28:28,159
you have also the capability to make

810
00:28:28,159 --> 00:28:29,360
sure the issues

811
00:28:29,360 --> 00:28:32,960
are awake and you know you simulate

812
00:28:32,960 --> 00:28:34,799
the rest bus behavior to make them

813
00:28:34,799 --> 00:28:37,039
active enough to accept

814
00:28:37,039 --> 00:28:40,240
our frames and

815
00:28:40,240 --> 00:28:42,080
at the same time there is also support

816
00:28:42,080 --> 00:28:43,760
for measurement you know

817
00:28:43,760 --> 00:28:45,919
of physical quantities or physical

818
00:28:45,919 --> 00:28:48,000
signals and ios for example i want to

819
00:28:48,000 --> 00:28:48,799
see

820
00:28:48,799 --> 00:28:50,880
if the ecu went through a running reset

821
00:28:50,880 --> 00:28:51,919
you know i can measure

822
00:28:51,919 --> 00:28:54,559
the current on the on the on the battery

823
00:28:54,559 --> 00:28:55,120
life

824
00:28:55,120 --> 00:28:57,200
i can measure how much is the voltage

825
00:28:57,200 --> 00:28:59,039
drop across a certain point

826
00:28:59,039 --> 00:29:01,039
across you know certain connections on

827
00:29:01,039 --> 00:29:02,880
the ecu

828
00:29:02,880 --> 00:29:05,120
so all those capabilities are also

829
00:29:05,120 --> 00:29:06,480
important when you're fuzzing on

830
00:29:06,480 --> 00:29:07,679
automotive

831
00:29:07,679 --> 00:29:11,200
networks uh

832
00:29:11,200 --> 00:29:13,200
some of the other features which i have

833
00:29:13,200 --> 00:29:14,320
used in the tool in

834
00:29:14,320 --> 00:29:17,039
you know in vehicle spy is uh i was able

835
00:29:17,039 --> 00:29:18,399
to generate you know

836
00:29:18,399 --> 00:29:21,440
thousands of test cases from uh

837
00:29:21,440 --> 00:29:24,320
the database files and this process

838
00:29:24,320 --> 00:29:25,120
itself

839
00:29:25,120 --> 00:29:27,840
if done manually could really take

840
00:29:27,840 --> 00:29:29,120
months and you know months

841
00:29:29,120 --> 00:29:31,520
of you know efforts by team uh but

842
00:29:31,520 --> 00:29:32,799
vehicle spy

843
00:29:32,799 --> 00:29:35,840
allow allows to create automatic signal

844
00:29:35,840 --> 00:29:36,320
attack

845
00:29:36,320 --> 00:29:39,520
from the dbc file you know and you can

846
00:29:39,520 --> 00:29:41,200
create various different generational

847
00:29:41,200 --> 00:29:42,480
fuzzing test cases

848
00:29:42,480 --> 00:29:44,080
so you can generate any kind of frames

849
00:29:44,080 --> 00:29:45,840
you want uh

850
00:29:45,840 --> 00:29:47,919
and you know for mutational fuzzing you

851
00:29:47,919 --> 00:29:50,320
can make a small variation

852
00:29:50,320 --> 00:29:52,559
in the payload as an input of the duty

853
00:29:52,559 --> 00:29:55,360
try to override the real data

854
00:29:55,360 --> 00:29:57,600
and then you you do these minor

855
00:29:57,600 --> 00:29:59,440
mutations minor variations

856
00:29:59,440 --> 00:30:01,520
and uh you know see what how it goes and

857
00:30:01,520 --> 00:30:03,200
vehicle spy has a lot of

858
00:30:03,200 --> 00:30:05,200
inherent capabilities i found and i've

859
00:30:05,200 --> 00:30:06,480
been using

860
00:30:06,480 --> 00:30:09,279
to support extensive test design around

861
00:30:09,279 --> 00:30:11,200
mutating known inputs

862
00:30:11,200 --> 00:30:15,360
and uh that's a very powerful use

863
00:30:15,360 --> 00:30:17,440
in vehicle spy the few other types of

864
00:30:17,440 --> 00:30:19,520
fuzzer techniques like randomization and

865
00:30:19,520 --> 00:30:21,039
some other techniques are very unique to

866
00:30:21,039 --> 00:30:22,480
vehicle spy if you know

867
00:30:22,480 --> 00:30:24,320
you end up using it you know feel free

868
00:30:24,320 --> 00:30:25,520
to use those

869
00:30:25,520 --> 00:30:27,760
uh you can you can give your own seat

870
00:30:27,760 --> 00:30:28,960
for randomizer

871
00:30:28,960 --> 00:30:31,520
uh you can have a vehicle spy generated

872
00:30:31,520 --> 00:30:32,720
you know there are many various other

873
00:30:32,720 --> 00:30:34,840
things possible in this

874
00:30:34,840 --> 00:30:37,279
software one other thing i found is

875
00:30:37,279 --> 00:30:39,200
support for database and i just

876
00:30:39,200 --> 00:30:41,039
you know i did mention a little bit on

877
00:30:41,039 --> 00:30:43,760
air xml supporting ar xml supporting

878
00:30:43,760 --> 00:30:45,039
dbc's

879
00:30:45,039 --> 00:30:47,360
for automotives are extremely important

880
00:30:47,360 --> 00:30:49,039
because that's the real way

881
00:30:49,039 --> 00:30:51,360
of being actually be able to affect the

882
00:30:51,360 --> 00:30:52,159
performance

883
00:30:52,159 --> 00:30:55,840
of the device or the ecu's

884
00:30:55,840 --> 00:30:57,600
uh again you know the classical question

885
00:30:57,600 --> 00:30:59,120
i've been always i had to add this slide

886
00:30:59,120 --> 00:31:00,399
just to make sure you know

887
00:31:00,399 --> 00:31:02,159
how you actually do all these things you

888
00:31:02,159 --> 00:31:03,679
know seeing some pictures

889
00:31:03,679 --> 00:31:05,679
you know helps understanding what can be

890
00:31:05,679 --> 00:31:07,440
done you know if you're design you know

891
00:31:07,440 --> 00:31:08,640
you're thinking to do you know

892
00:31:08,640 --> 00:31:10,399
interaction testing on can

893
00:31:10,399 --> 00:31:12,159
uh what are the actual things i'm gonna

894
00:31:12,159 --> 00:31:14,720
do so how and where one could start with

895
00:31:14,720 --> 00:31:15,120
can

896
00:31:15,120 --> 00:31:16,880
and can fd fuzzing for production

897
00:31:16,880 --> 00:31:18,480
vehicles or ecu's

898
00:31:18,480 --> 00:31:21,200
or your bench networks you know so you

899
00:31:21,200 --> 00:31:22,720
could start with some of these products

900
00:31:22,720 --> 00:31:24,320
you know they're available in the market

901
00:31:24,320 --> 00:31:26,399
you know so vehicle spa enterprise plus

902
00:31:26,399 --> 00:31:27,519
for example

903
00:31:27,519 --> 00:31:28,960
is the software which has full fledged

904
00:31:28,960 --> 00:31:31,600
support for can fuzzing

905
00:31:31,600 --> 00:31:34,880
you could uh uh you know you put nearly

906
00:31:34,880 --> 00:31:36,720
a fire too again the device here

907
00:31:36,720 --> 00:31:39,360
you know uh has eight can network so you

908
00:31:39,360 --> 00:31:39,919
can

909
00:31:39,919 --> 00:31:42,880
uh simultaneously you know fuzz devices

910
00:31:42,880 --> 00:31:43,519
on eight

911
00:31:43,519 --> 00:31:45,120
can networks you know so this is the one

912
00:31:45,120 --> 00:31:46,880
you know i typically use this one of my

913
00:31:46,880 --> 00:31:48,799
favorite two

914
00:31:48,799 --> 00:31:52,159
and uh so it's widely vegas five has

915
00:31:52,159 --> 00:31:53,600
been widely used in automotive software

916
00:31:53,600 --> 00:31:55,279
development for more than you know 20

917
00:31:55,279 --> 00:31:55,919
years

918
00:31:55,919 --> 00:31:59,039
so our focus remains on the customers

919
00:31:59,039 --> 00:32:01,360
and you know all the capabilities you

920
00:32:01,360 --> 00:32:02,799
see in maker spies

921
00:32:02,799 --> 00:32:04,480
because we've been work working with our

922
00:32:04,480 --> 00:32:06,240
you know customers for a pretty long

923
00:32:06,240 --> 00:32:07,919
period of time now

924
00:32:07,919 --> 00:32:11,360
uh about neo via fire 2 hardware

925
00:32:11,360 --> 00:32:14,399
uh this has a multi-channel can can fd

926
00:32:14,399 --> 00:32:15,039
and in fact

927
00:32:15,039 --> 00:32:18,480
it also has support it also has

928
00:32:18,480 --> 00:32:20,880
uh which i also use very frequently is

929
00:32:20,880 --> 00:32:23,120
it has inbuilt data logger

930
00:32:23,120 --> 00:32:25,600
what that means is if i am i'm fuzzing

931
00:32:25,600 --> 00:32:26,880
in the vehicle itself

932
00:32:26,880 --> 00:32:30,320
i can record the entire traffic in an sd

933
00:32:30,320 --> 00:32:32,399
card inside the device

934
00:32:32,399 --> 00:32:34,880
and if i happen to cause an issue in the

935
00:32:34,880 --> 00:32:35,519
car

936
00:32:35,519 --> 00:32:37,679
uh shut down the car or put it in you

937
00:32:37,679 --> 00:32:39,440
know for example lymphoma mode or

938
00:32:39,440 --> 00:32:41,279
what have you or caused some multiple

939
00:32:41,279 --> 00:32:42,559
you know uh

940
00:32:42,559 --> 00:32:46,159
dtc's then uh you can record everything

941
00:32:46,159 --> 00:32:48,080
in the device itself so you have the

942
00:32:48,080 --> 00:32:49,840
least latencies from recording on

943
00:32:49,840 --> 00:32:50,480
windows

944
00:32:50,480 --> 00:32:52,960
or you know other pc or other mechanisms

945
00:32:52,960 --> 00:32:55,519
so fire2 remains very useful device for

946
00:32:55,519 --> 00:32:56,960
in vehicle level fuzzing and also

947
00:32:56,960 --> 00:32:59,600
actually bench level

948
00:32:59,679 --> 00:33:03,679
uh this year intrepid also launched our

949
00:33:03,679 --> 00:33:06,000
latest you know platform agnostic uh

950
00:33:06,000 --> 00:33:08,000
very advanced tool that we call it it's

951
00:33:08,000 --> 00:33:10,399
real next generation tool uh

952
00:33:10,399 --> 00:33:12,320
and it's like advanced automation and

953
00:33:12,320 --> 00:33:14,559
testing for in-vehicle networks

954
00:33:14,559 --> 00:33:16,720
uh it's called vehicle spy x you'll hear

955
00:33:16,720 --> 00:33:17,600
a lot about that

956
00:33:17,600 --> 00:33:20,640
in uh in this event and

957
00:33:20,640 --> 00:33:23,120
so i was also asked a question hey you

958
00:33:23,120 --> 00:33:24,320
know

959
00:33:24,320 --> 00:33:26,720
can vehicle spy be used as can first

960
00:33:26,720 --> 00:33:28,240
tool you know and i'm going to answer

961
00:33:28,240 --> 00:33:28,640
that

962
00:33:28,640 --> 00:33:32,000
in you know the next slide

963
00:33:32,960 --> 00:33:36,159
so i summed up a lot of information

964
00:33:36,159 --> 00:33:39,519
i collected a test i did with you know

965
00:33:39,519 --> 00:33:40,799
working with the customers you know

966
00:33:40,799 --> 00:33:42,559
internal bench level setups and

967
00:33:42,559 --> 00:33:45,120
things like that and here is uh you know

968
00:33:45,120 --> 00:33:46,480
my compiled information

969
00:33:46,480 --> 00:33:48,080
and i think you know it's available for

970
00:33:48,080 --> 00:33:50,000
you guys to use it

971
00:33:50,000 --> 00:33:52,000
and i compared the current capability

972
00:33:52,000 --> 00:33:53,200
support in

973
00:33:53,200 --> 00:33:55,840
three different situations you know i

974
00:33:55,840 --> 00:33:57,440
didn't do a lot of open source tooling

975
00:33:57,440 --> 00:33:59,120
myself but this is the feedback i get

976
00:33:59,120 --> 00:34:00,080
from you know

977
00:34:00,080 --> 00:34:01,840
you know from the engineers using open

978
00:34:01,840 --> 00:34:03,840
source tooling and methods to do fuzzing

979
00:34:03,840 --> 00:34:05,279
on automotive

980
00:34:05,279 --> 00:34:06,559
and so i'm gonna go through some of

981
00:34:06,559 --> 00:34:09,040
these things uh with you guys here

982
00:34:09,040 --> 00:34:12,320
and uh so

983
00:34:12,320 --> 00:34:14,800
so the support for like dedicated can

984
00:34:14,800 --> 00:34:16,639
can have the fuzzing support so i

985
00:34:16,639 --> 00:34:20,079
my observation is it's a it's low in

986
00:34:20,079 --> 00:34:21,918
vehicle spy x currently

987
00:34:21,918 --> 00:34:24,639
uh open source tooling is really you

988
00:34:24,639 --> 00:34:25,280
know

989
00:34:25,280 --> 00:34:27,760
limited and it's exceptionally high in

990
00:34:27,760 --> 00:34:29,599
vehicle spy 3 enterprise edition you

991
00:34:29,599 --> 00:34:30,960
know it's really exceptionally high

992
00:34:30,960 --> 00:34:31,679
because

993
00:34:31,679 --> 00:34:33,760
there is a set of tools which are canvas

994
00:34:33,760 --> 00:34:35,040
tools

995
00:34:35,040 --> 00:34:37,119
uh for scripting i've seen python

996
00:34:37,119 --> 00:34:38,719
support we have very powerful support

997
00:34:38,719 --> 00:34:40,560
for python in basic spy

998
00:34:40,560 --> 00:34:44,399
x and uh and you know of course the open

999
00:34:44,399 --> 00:34:46,159
source truly use python extensively and

1000
00:34:46,159 --> 00:34:47,760
they use other languages in other

1001
00:34:47,760 --> 00:34:49,199
programming environments

1002
00:34:49,199 --> 00:34:51,440
in vehicle spy 3 it's a ui based

1003
00:34:51,440 --> 00:34:53,918
scripting engine called function blocks

1004
00:34:53,918 --> 00:34:56,320
and you can also do cc plus plus

1005
00:34:56,320 --> 00:34:56,960
programming

1006
00:34:56,960 --> 00:35:00,079
inside vehicle spy for scripting as far

1007
00:35:00,079 --> 00:35:01,920
as maturity i have seen very high

1008
00:35:01,920 --> 00:35:02,640
maturity

1009
00:35:02,640 --> 00:35:03,920
when it comes to vehicles piping

1010
00:35:03,920 --> 00:35:06,560
enterprise again for canon canopy

1011
00:35:06,560 --> 00:35:08,880
uh and for fuzzing you know like how

1012
00:35:08,880 --> 00:35:10,400
much automation is there how much

1013
00:35:10,400 --> 00:35:12,240
support native support is there

1014
00:35:12,240 --> 00:35:14,720
so for vs5x it's under development you

1015
00:35:14,720 --> 00:35:17,118
know because

1016
00:35:18,160 --> 00:35:20,480
and automatic generation of first

1017
00:35:20,480 --> 00:35:22,240
scenarios is right now not supported in

1018
00:35:22,240 --> 00:35:23,200
vehicles by x

1019
00:35:23,200 --> 00:35:25,440
but it is fully supported in vehicles by

1020
00:35:25,440 --> 00:35:27,200
three enterprise edition so you could

1021
00:35:27,200 --> 00:35:29,040
generate thousands of thousands of test

1022
00:35:29,040 --> 00:35:30,240
scenarios

1023
00:35:30,240 --> 00:35:33,040
possibly through a single click and

1024
00:35:33,040 --> 00:35:34,400
again i was told you know

1025
00:35:34,400 --> 00:35:36,640
that in vehicle spy x the team is going

1026
00:35:36,640 --> 00:35:37,760
to use the same

1027
00:35:37,760 --> 00:35:39,839
technology in vehicle 5x in upcoming

1028
00:35:39,839 --> 00:35:41,440
releases

1029
00:35:41,440 --> 00:35:43,520
now air xml bbc support very powerful

1030
00:35:43,520 --> 00:35:45,599
support for you know in vehicle spy

1031
00:35:45,599 --> 00:35:48,560
x and vehicle spy 3 enterprise edition

1032
00:35:48,560 --> 00:35:49,760
uh i haven't seen

1033
00:35:49,760 --> 00:35:51,359
really very native support in you know

1034
00:35:51,359 --> 00:35:52,880
there is open source grid project to

1035
00:35:52,880 --> 00:35:55,200
read a dbc file or a xml

1036
00:35:55,200 --> 00:35:56,960
but being able to put like you know

1037
00:35:56,960 --> 00:35:58,960
zeros across entire payload for

1038
00:35:58,960 --> 00:36:00,560
all the received messages in a single

1039
00:36:00,560 --> 00:36:02,560
click you know that kind of support

1040
00:36:02,560 --> 00:36:05,359
lacks in open source tooling uh

1041
00:36:05,359 --> 00:36:07,599
programming flexibility and development

1042
00:36:07,599 --> 00:36:09,680
very high i would say in vehicle spy x

1043
00:36:09,680 --> 00:36:11,280
because you have full control on

1044
00:36:11,280 --> 00:36:14,480
each layer independently

1045
00:36:14,480 --> 00:36:16,240
through programming environment through

1046
00:36:16,240 --> 00:36:17,520
api calls through

1047
00:36:17,520 --> 00:36:20,720
you know different layered

1048
00:36:20,720 --> 00:36:22,720
you know call through using python so

1049
00:36:22,720 --> 00:36:23,760
very very much

1050
00:36:23,760 --> 00:36:25,200
very powerful very programmatic

1051
00:36:25,200 --> 00:36:27,680
programmatic in this

1052
00:36:27,680 --> 00:36:29,839
in vehicle spy x i have seen the same

1053
00:36:29,839 --> 00:36:31,680
thing in open source tooling because you

1054
00:36:31,680 --> 00:36:33,040
have really a programming environment

1055
00:36:33,040 --> 00:36:35,040
there is nothing automatically done

1056
00:36:35,040 --> 00:36:38,400
there you have to develop everything in

1057
00:36:38,400 --> 00:36:40,320
in vehicle spy 3 there is limitation of

1058
00:36:40,320 --> 00:36:42,160
not being able to use python

1059
00:36:42,160 --> 00:36:43,920
but personally i'm a c programmer so i'm

1060
00:36:43,920 --> 00:36:46,400
happy with you know vehicles by 3.

1061
00:36:46,400 --> 00:36:48,640
uh automotive native protocol support

1062
00:36:48,640 --> 00:36:51,760
like xcp uds or autosar etc they're

1063
00:36:51,760 --> 00:36:52,800
fully supported

1064
00:36:52,800 --> 00:36:55,839
in again maker spy 3 and there is a

1065
00:36:55,839 --> 00:36:58,480
reasonably good support in vehicle spy x

1066
00:36:58,480 --> 00:36:59,760
but again like you know

1067
00:36:59,760 --> 00:37:02,000
looking for a uds based support in a

1068
00:37:02,000 --> 00:37:03,680
open source environment is kind of

1069
00:37:03,680 --> 00:37:04,240
difficult

1070
00:37:04,240 --> 00:37:06,800
and complex to create in itself so i

1071
00:37:06,800 --> 00:37:08,000
have not seen much support

1072
00:37:08,000 --> 00:37:10,560
on that front report generation we have

1073
00:37:10,560 --> 00:37:12,320
very good support in fact in vehicles by

1074
00:37:12,320 --> 00:37:12,720
x

1075
00:37:12,720 --> 00:37:14,480
uh there is a good support in vegas by

1076
00:37:14,480 --> 00:37:15,839
three this is again you know

1077
00:37:15,839 --> 00:37:18,640
i would say this is a area where we are

1078
00:37:18,640 --> 00:37:19,280
focused

1079
00:37:19,280 --> 00:37:21,680
and like i seen both of these tools you

1080
00:37:21,680 --> 00:37:22,880
know next

1081
00:37:22,880 --> 00:37:25,040
next releases will bring a lot of you

1082
00:37:25,040 --> 00:37:26,960
know test reporting

1083
00:37:26,960 --> 00:37:30,240
uh like potential for a tool to be part

1084
00:37:30,240 --> 00:37:32,160
of the development and design uh

1085
00:37:32,160 --> 00:37:34,160
scenarios uh vehicle spy

1086
00:37:34,160 --> 00:37:36,320
x is defined you know designed around it

1087
00:37:36,320 --> 00:37:37,599
you know you could actually

1088
00:37:37,599 --> 00:37:40,320
run your first test in your development

1089
00:37:40,320 --> 00:37:40,960
pipeline

1090
00:37:40,960 --> 00:37:43,760
through using vehicle spy x uh in all

1091
00:37:43,760 --> 00:37:44,560
those

1092
00:37:44,560 --> 00:37:47,119
capabilities will run in the pipeline

1093
00:37:47,119 --> 00:37:47,599
while

1094
00:37:47,599 --> 00:37:50,960
you are actually developing your ecu's

1095
00:37:50,960 --> 00:37:53,280
this means you make a change in the ecu

1096
00:37:53,280 --> 00:37:55,200
software and your first test could be

1097
00:37:55,200 --> 00:37:55,680
run

1098
00:37:55,680 --> 00:37:58,640
on in the pipeline on vspy x and test

1099
00:37:58,640 --> 00:37:59,040
out

1100
00:37:59,040 --> 00:38:01,440
in all your first scenarios so this is

1101
00:38:01,440 --> 00:38:02,480
very

1102
00:38:02,480 --> 00:38:04,160
this is an exceptional support for this

1103
00:38:04,160 --> 00:38:05,839
uh to be able to do that

1104
00:38:05,839 --> 00:38:07,359
and i've seen very there is almost

1105
00:38:07,359 --> 00:38:09,119
negligible support for that in vehicles

1106
00:38:09,119 --> 00:38:10,079
by three

1107
00:38:10,079 --> 00:38:12,079
this you still have to do drive through

1108
00:38:12,079 --> 00:38:14,240
a text api or something

1109
00:38:14,240 --> 00:38:17,119
uh in your pipeline so i would say the

1110
00:38:17,119 --> 00:38:19,680
support is low here

1111
00:38:19,680 --> 00:38:22,640
cost wise uh both the tools have a cost

1112
00:38:22,640 --> 00:38:23,920
uh but i think you know

1113
00:38:23,920 --> 00:38:25,599
as i say you know bang for buck and

1114
00:38:25,599 --> 00:38:27,280
that's highest for bspi x

1115
00:38:27,280 --> 00:38:30,160
because in future you reduce the amount

1116
00:38:30,160 --> 00:38:31,920
of time your validation team is going to

1117
00:38:31,920 --> 00:38:34,320
write first spss or run the test cases

1118
00:38:34,320 --> 00:38:36,480
and look into the results all of those

1119
00:38:36,480 --> 00:38:38,240
things we are going to eliminate through

1120
00:38:38,240 --> 00:38:41,040
vspy x for future so it's a good

1121
00:38:41,040 --> 00:38:42,320
investment now

1122
00:38:42,320 --> 00:38:43,359
but of course you know that's why i

1123
00:38:43,359 --> 00:38:44,800
listed all the things here you know

1124
00:38:44,800 --> 00:38:45,520
based on what

1125
00:38:45,520 --> 00:38:48,079
where you are what your scenarios you

1126
00:38:48,079 --> 00:38:49,119
are going to do

1127
00:38:49,119 --> 00:38:50,800
and based on that you could choose one

1128
00:38:50,800 --> 00:38:52,400
of these mechanisms to

1129
00:38:52,400 --> 00:38:55,839
do your can buzzing uh one thing i

1130
00:38:55,839 --> 00:38:57,599
should talk about is the os support

1131
00:38:57,599 --> 00:39:00,000
vehicle spy 3 only supports windows so

1132
00:39:00,000 --> 00:39:01,680
if you are running your

1133
00:39:01,680 --> 00:39:04,240
uh for example virtual ecu which you

1134
00:39:04,240 --> 00:39:05,280
want to fuzz

1135
00:39:05,280 --> 00:39:07,119
you do want to go for vehicles by x in

1136
00:39:07,119 --> 00:39:08,960
that case because you know we support

1137
00:39:08,960 --> 00:39:12,320
vehicle spy x runs on linux mac

1138
00:39:12,320 --> 00:39:15,280
or windows at the same time oh i mean

1139
00:39:15,280 --> 00:39:16,320
all three oss

1140
00:39:16,320 --> 00:39:20,640
are supported uh

1141
00:39:20,640 --> 00:39:23,200
hopefully this is uh you know this may

1142
00:39:23,200 --> 00:39:24,560
help knowing what capabilities are

1143
00:39:24,560 --> 00:39:26,720
available now in different ruling

1144
00:39:26,720 --> 00:39:28,240
and how you know industry is doing

1145
00:39:28,240 --> 00:39:30,079
they're fuzzing and what are pros and

1146
00:39:30,079 --> 00:39:31,280
cons

1147
00:39:31,280 --> 00:39:33,760
i hope this presentation was useful to

1148
00:39:33,760 --> 00:39:34,960
learn more things

1149
00:39:34,960 --> 00:39:39,040
for you guys and well that's

1150
00:39:39,040 --> 00:39:41,599
it from me now for now i think this last

1151
00:39:41,599 --> 00:39:43,440
slide of my presentation

1152
00:39:43,440 --> 00:39:47,599
and thank you very much for your time to

1153
00:39:47,599 --> 00:39:48,480
listen this

1154
00:39:48,480 --> 00:39:50,400
if you have questions you know uh just

1155
00:39:50,400 --> 00:39:52,800
ask me if you have fuzzing experience

1156
00:39:52,800 --> 00:39:53,920
you have worked on

1157
00:39:53,920 --> 00:39:55,359
you want to share with me you know if

1158
00:39:55,359 --> 00:39:58,320
you found a issue in the ecu let me know

1159
00:39:58,320 --> 00:40:00,160
i'm very excited to know all about that

1160
00:40:00,160 --> 00:40:02,800
you know and just share your experiences

1161
00:40:02,800 --> 00:40:04,960
with me my email id is here and if you

1162
00:40:04,960 --> 00:40:06,240
have more questions on some of these

1163
00:40:06,240 --> 00:40:09,520
products i work very frequently

1164
00:40:09,520 --> 00:40:12,400
then just send me a message thank you

1165
00:40:12,400 --> 00:40:21,359
for your time

