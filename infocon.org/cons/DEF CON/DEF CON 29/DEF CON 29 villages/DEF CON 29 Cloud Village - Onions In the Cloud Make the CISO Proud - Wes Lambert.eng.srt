1
00:00:00,080 --> 00:00:02,399
everybody's had a a great day listening

2
00:00:02,399 --> 00:00:04,720
to all the great talks and

3
00:00:04,720 --> 00:00:07,120
uh hopefully um you know participating

4
00:00:07,120 --> 00:00:09,599
in some other workshops i'm super glad

5
00:00:09,599 --> 00:00:11,280
to be here and thankful to be here today

6
00:00:11,280 --> 00:00:13,599
cloud village presenting on security

7
00:00:13,599 --> 00:00:16,720
onion and using it in the cloud and uh

8
00:00:16,720 --> 00:00:19,119
you know making that cso or that ciso

9
00:00:19,119 --> 00:00:22,800
proud right um or if you are a cso um

10
00:00:22,800 --> 00:00:24,480
you know learning how you can leverage

11
00:00:24,480 --> 00:00:26,960
security and in the cloud to get better

12
00:00:26,960 --> 00:00:29,679
visibility over all your cloud resources

13
00:00:29,679 --> 00:00:32,479
and uh and really just better visibility

14
00:00:32,479 --> 00:00:34,719
over your entire enterprise because we

15
00:00:34,719 --> 00:00:38,160
do like to kind of pitch the notion of

16
00:00:38,160 --> 00:00:40,399
uh enterprise security monitoring to

17
00:00:40,399 --> 00:00:42,800
include things like authentication data

18
00:00:42,800 --> 00:00:45,120
cloud data and then all the other

19
00:00:45,120 --> 00:00:46,719
network and host data that you might

20
00:00:46,719 --> 00:00:48,719
find in an enterprise

21
00:00:48,719 --> 00:00:51,520
so uh again my name is wes lambert i'm a

22
00:00:51,520 --> 00:00:53,840
principal engineer at security indian

23
00:00:53,840 --> 00:00:55,520
solutions and

24
00:00:55,520 --> 00:00:57,280
you can find me on twitter at the real w

25
00:00:57,280 --> 00:00:59,600
lambert and um you know feel free to hit

26
00:00:59,600 --> 00:01:01,120
me up if you have any questions after

27
00:01:01,120 --> 00:01:03,039
this workshop but otherwise we'll

28
00:01:03,039 --> 00:01:04,799
continue through and get this thing

29
00:01:04,799 --> 00:01:07,119
going

30
00:01:08,080 --> 00:01:10,000
all right so on the agenda what we have

31
00:01:10,000 --> 00:01:13,119
today is an introduction to

32
00:01:13,119 --> 00:01:14,799
well the cloud this is cloud village so

33
00:01:14,799 --> 00:01:15,840
we're going to talk a little bit about

34
00:01:15,840 --> 00:01:17,439
the cloud right

35
00:01:17,439 --> 00:01:18,960
we're going to give an introduction to

36
00:01:18,960 --> 00:01:21,119
security onion itself and then how it

37
00:01:21,119 --> 00:01:22,799
can be leveraged in the cloud to

38
00:01:22,799 --> 00:01:26,280
increase that visibility

39
00:01:26,560 --> 00:01:29,040
and so when we talk about the cloud and

40
00:01:29,040 --> 00:01:30,799
you know kind of all of the data that it

41
00:01:30,799 --> 00:01:32,720
contains and uh you know where things

42
00:01:32,720 --> 00:01:34,240
are stored and

43
00:01:34,240 --> 00:01:37,520
um you know how things happen how data

44
00:01:37,520 --> 00:01:39,759
flows and communication happens between

45
00:01:39,759 --> 00:01:41,600
applications

46
00:01:41,600 --> 00:01:42,799
typically

47
00:01:42,799 --> 00:01:44,640
these are just some examples just kind

48
00:01:44,640 --> 00:01:46,560
of get the brain flow in but

49
00:01:46,560 --> 00:01:48,560
in aws you might have things like s3

50
00:01:48,560 --> 00:01:50,720
buckets or dynamodb

51
00:01:50,720 --> 00:01:53,040
you might have azure blob storage or use

52
00:01:53,040 --> 00:01:55,280
event hubs for uh you know forwarding or

53
00:01:55,280 --> 00:01:56,560
storing data

54
00:01:56,560 --> 00:01:59,520
and then in google cloud platform or gcp

55
00:01:59,520 --> 00:02:01,200
you might uh you know again storage

56
00:02:01,200 --> 00:02:05,200
buckets um just buckets usually um and

57
00:02:05,200 --> 00:02:06,880
then you know there may be other

58
00:02:06,880 --> 00:02:10,000
mechanisms uh in addition to the

59
00:02:10,000 --> 00:02:11,680
you know the application

60
00:02:11,680 --> 00:02:14,640
or uh a machine or an instances uh

61
00:02:14,640 --> 00:02:16,959
network traffic uh the data that's going

62
00:02:16,959 --> 00:02:19,120
back and forth between those systems

63
00:02:19,120 --> 00:02:20,640
right so

64
00:02:20,640 --> 00:02:22,640
talk about all this data and all this

65
00:02:22,640 --> 00:02:24,720
stuff going uh back and forth in the

66
00:02:24,720 --> 00:02:27,120
cloud

67
00:02:27,440 --> 00:02:30,080
and you know a lot of times

68
00:02:30,080 --> 00:02:31,360
obviously this is why we talk about

69
00:02:31,360 --> 00:02:33,360
security monitoring the cloud this data

70
00:02:33,360 --> 00:02:36,000
is exploited and and can be abused right

71
00:02:36,000 --> 00:02:38,480
or the access to this data can be abused

72
00:02:38,480 --> 00:02:41,680
uh for example in aws uh s3 scanner is a

73
00:02:41,680 --> 00:02:43,760
popular one or has been in the past for

74
00:02:43,760 --> 00:02:46,480
looking for open s3 buckets uh as well

75
00:02:46,480 --> 00:02:47,519
as a

76
00:02:47,519 --> 00:02:49,440
saw another one uh called i'm not sure

77
00:02:49,440 --> 00:02:51,120
how you pronounce it um

78
00:02:51,120 --> 00:02:52,959
pacu or paku

79
00:02:52,959 --> 00:02:54,640
um

80
00:02:54,640 --> 00:02:57,599
it's an aws exploitation framework right

81
00:02:57,599 --> 00:02:59,360
where uh you know maybe you're looking

82
00:02:59,360 --> 00:03:01,360
for those open cloud buckets or you're

83
00:03:01,360 --> 00:03:03,599
looking for weak permissions

84
00:03:03,599 --> 00:03:05,519
and things like that and kind of going

85
00:03:05,519 --> 00:03:07,840
from there and and really you know

86
00:03:07,840 --> 00:03:09,599
breaking into someone's cloud

87
00:03:09,599 --> 00:03:12,720
infrastructure from that point

88
00:03:12,720 --> 00:03:15,280
and similarly with azure we have uh

89
00:03:15,280 --> 00:03:17,680
micro burst and you know with microverse

90
00:03:17,680 --> 00:03:19,200
you can perform things like azure

91
00:03:19,200 --> 00:03:21,120
services discovery uh look for weak

92
00:03:21,120 --> 00:03:24,319
configuration and let me see where uh

93
00:03:24,319 --> 00:03:26,879
some post exploitation could occur

94
00:03:26,879 --> 00:03:28,400
and uh you know get into some other

95
00:03:28,400 --> 00:03:31,519
frameworks as a result of that

96
00:03:31,519 --> 00:03:35,200
in gcp uh gcp i am privileged escalation

97
00:03:35,200 --> 00:03:37,920
uh these by rhino security labs uh is

98
00:03:37,920 --> 00:03:39,680
great for things like permissions

99
00:03:39,680 --> 00:03:42,640
enumeration uh you know also um you know

100
00:03:42,640 --> 00:03:44,879
looking for that privacy moment uh the

101
00:03:44,879 --> 00:03:46,720
gcp bucket break

102
00:03:46,720 --> 00:03:48,799
you know enumerating those cloud buckets

103
00:03:48,799 --> 00:03:51,200
determining what access is there

104
00:03:51,200 --> 00:03:53,120
and uh determining the best place to get

105
00:03:53,120 --> 00:03:55,120
a foothold in that infrastructure and

106
00:03:55,120 --> 00:03:57,040
pivot from there

107
00:03:57,040 --> 00:03:59,439
into you know more maybe more sensitive

108
00:03:59,439 --> 00:04:01,519
components or you know

109
00:04:01,519 --> 00:04:04,480
something more valuable

110
00:04:06,319 --> 00:04:08,080
and we also talk about you know aside

111
00:04:08,080 --> 00:04:09,840
from getting at the data

112
00:04:09,840 --> 00:04:12,159
you know how credentials like aws

113
00:04:12,159 --> 00:04:14,560
credentials you know these things can

114
00:04:14,560 --> 00:04:16,000
can really uh

115
00:04:16,000 --> 00:04:18,238
pretty easily be obtained by by phishing

116
00:04:18,238 --> 00:04:19,759
efforts right

117
00:04:19,759 --> 00:04:22,079
by going after folks administrators i.t

118
00:04:22,079 --> 00:04:23,360
admins

119
00:04:23,360 --> 00:04:24,720
you know trying to get im account

120
00:04:24,720 --> 00:04:27,360
credentials or root account credentials

121
00:04:27,360 --> 00:04:30,000
or trying to get those access keys right

122
00:04:30,000 --> 00:04:31,440
to

123
00:04:31,440 --> 00:04:33,440
basically not have to log into the

124
00:04:33,440 --> 00:04:35,919
environment right but have programmatic

125
00:04:35,919 --> 00:04:37,280
or have

126
00:04:37,280 --> 00:04:38,639
you know

127
00:04:38,639 --> 00:04:40,880
kind of a more silent method

128
00:04:40,880 --> 00:04:43,360
of uh access right or something a little

129
00:04:43,360 --> 00:04:45,840
bit easier especially if uh otherwise

130
00:04:45,840 --> 00:04:47,520
these are accounts are locked down with

131
00:04:47,520 --> 00:04:49,040
mfa

132
00:04:49,040 --> 00:04:51,120
you know we can get by that obviously if

133
00:04:51,120 --> 00:04:52,880
we have the access keys the root access

134
00:04:52,880 --> 00:04:56,600
keys or things like that

135
00:04:56,639 --> 00:04:58,639
uh similarly uh you know creating new

136
00:04:58,639 --> 00:05:02,400
policy policy versions uh is is one way

137
00:05:02,400 --> 00:05:04,720
in which uh you know those credentials

138
00:05:04,720 --> 00:05:07,120
could be used for privileged escalation

139
00:05:07,120 --> 00:05:09,680
uh you can create user access keys for

140
00:05:09,680 --> 00:05:11,759
yourself or you know for your friends

141
00:05:11,759 --> 00:05:14,160
right um you could even add like a

142
00:05:14,160 --> 00:05:16,160
malicious lambda layer to an existing

143
00:05:16,160 --> 00:05:17,120
function

144
00:05:17,120 --> 00:05:19,360
and if that's not well audited and you

145
00:05:19,360 --> 00:05:21,120
know it'd look pretty normal if you have

146
00:05:21,120 --> 00:05:21,840
these

147
00:05:21,840 --> 00:05:24,240
pre-existing lambdas uh that you already

148
00:05:24,240 --> 00:05:26,400
use and that just function normally

149
00:05:26,400 --> 00:05:28,080
if you're not paying attention and

150
00:05:28,080 --> 00:05:31,039
tracking uh auditing activity

151
00:05:31,039 --> 00:05:33,600
uh like you should be or or could be

152
00:05:33,600 --> 00:05:35,520
um you know those things could be pretty

153
00:05:35,520 --> 00:05:39,840
sneaky and get past the door

154
00:05:39,840 --> 00:05:42,160
and so you know we have all these ways

155
00:05:42,160 --> 00:05:44,320
to kind of exploit or potentially

156
00:05:44,320 --> 00:05:46,479
exploit and abuse this data

157
00:05:46,479 --> 00:05:49,600
and um you know how do we how do we

158
00:05:49,600 --> 00:05:50,960
monitor for that or what are some

159
00:05:50,960 --> 00:05:54,479
challenges um with monitoring for that

160
00:05:54,479 --> 00:05:56,479
um you know typically

161
00:05:56,479 --> 00:05:59,199
uh you know from my uh you know from my

162
00:05:59,199 --> 00:06:00,960
experience uh but kind of before the

163
00:06:00,960 --> 00:06:03,840
cloud was as popular right and still uh

164
00:06:03,840 --> 00:06:05,680
even some folks maybe not as much in the

165
00:06:05,680 --> 00:06:06,560
cloud

166
00:06:06,560 --> 00:06:08,400
traditionally we use platforms that

167
00:06:08,400 --> 00:06:10,639
perform network security monitoring

168
00:06:10,639 --> 00:06:12,560
and we're able to tap that network

169
00:06:12,560 --> 00:06:13,759
infrastructure

170
00:06:13,759 --> 00:06:16,560
and get a copy that traffic you know via

171
00:06:16,560 --> 00:06:18,639
span port or via tap

172
00:06:18,639 --> 00:06:20,720
and copy that off and be able to monitor

173
00:06:20,720 --> 00:06:22,479
that pretty easily

174
00:06:22,479 --> 00:06:23,600
well there are some monitoring

175
00:06:23,600 --> 00:06:25,280
challenges when you come into the cloud

176
00:06:25,280 --> 00:06:26,479
with nsm

177
00:06:26,479 --> 00:06:28,720
uh you know that have to be addressed in

178
00:06:28,720 --> 00:06:31,199
some way shape or form

179
00:06:31,199 --> 00:06:33,199
and some of those challenges are going

180
00:06:33,199 --> 00:06:34,639
to include things like vxlan

181
00:06:34,639 --> 00:06:37,520
encapsulation right some applications

182
00:06:37,520 --> 00:06:39,600
are not going to be able to

183
00:06:39,600 --> 00:06:42,000
decapsulate that traffic we can record

184
00:06:42,000 --> 00:06:43,520
the traffic maybe

185
00:06:43,520 --> 00:06:45,440
in some form

186
00:06:45,440 --> 00:06:46,960
but you know will those applications be

187
00:06:46,960 --> 00:06:48,479
able to handle it will they be able to

188
00:06:48,479 --> 00:06:51,360
know what is inside of this vxlan tunnel

189
00:06:51,360 --> 00:06:53,120
that's you know this data that's all

190
00:06:53,120 --> 00:06:56,240
wrapped up in another package

191
00:06:56,240 --> 00:06:57,759
then there are things like segmentation

192
00:06:57,759 --> 00:07:00,160
and ephemerality uh you know services in

193
00:07:00,160 --> 00:07:02,080
the cloud frequently spin up and spin

194
00:07:02,080 --> 00:07:03,919
down so sometimes that's difficult to

195
00:07:03,919 --> 00:07:06,319
monitor if certain characteristics of

196
00:07:06,319 --> 00:07:08,880
those instances change uh you know

197
00:07:08,880 --> 00:07:12,160
unique uh identifiers we may lose that

198
00:07:12,160 --> 00:07:14,560
instance or where the instance was what

199
00:07:14,560 --> 00:07:16,639
instance it was when something happens

200
00:07:16,639 --> 00:07:18,000
so that's that's kind of another thing

201
00:07:18,000 --> 00:07:19,440
that we run into

202
00:07:19,440 --> 00:07:21,199
uh when we start to monitor these things

203
00:07:21,199 --> 00:07:22,880
sometimes

204
00:07:22,880 --> 00:07:24,479
and then in some cases

205
00:07:24,479 --> 00:07:27,199
there's no native really scalable

206
00:07:27,199 --> 00:07:30,080
mechanism for monitoring the network and

207
00:07:30,080 --> 00:07:31,759
i highlighted azure here and i'm not

208
00:07:31,759 --> 00:07:34,479
trying to poke fun at azure um but you

209
00:07:34,479 --> 00:07:36,319
know i know back in the day they had the

210
00:07:36,319 --> 00:07:38,479
virtual tab preview that never really

211
00:07:38,479 --> 00:07:40,160
went anywhere

212
00:07:40,160 --> 00:07:41,199
to now

213
00:07:41,199 --> 00:07:43,120
um you know hopefully that gets revived

214
00:07:43,120 --> 00:07:46,560
and going you know public soon

215
00:07:46,560 --> 00:07:48,639
but you know for some cloud platforms

216
00:07:48,639 --> 00:07:51,199
that capability is just not there

217
00:07:51,199 --> 00:07:53,120
i know azure does have

218
00:07:53,120 --> 00:07:55,199
uh some other there's some partners that

219
00:07:55,199 --> 00:07:57,280
do this through like a set of agents and

220
00:07:57,280 --> 00:07:58,720
suddenly sending it through their own

221
00:07:58,720 --> 00:08:00,879
vxlan tunnel and that sort of thing but

222
00:08:00,879 --> 00:08:03,120
again there's no native mechanism to do

223
00:08:03,120 --> 00:08:04,800
that and you know there are many other

224
00:08:04,800 --> 00:08:07,759
services like that

225
00:08:08,479 --> 00:08:10,800
so this is where security engine kind of

226
00:08:10,800 --> 00:08:14,080
comes in right

227
00:08:16,400 --> 00:08:18,319
so security ending was created by doug

228
00:08:18,319 --> 00:08:19,919
burtz in 2008.

229
00:08:19,919 --> 00:08:22,560
uh doug is my boss he's super nice dude

230
00:08:22,560 --> 00:08:24,479
make sure to check him out on twitter at

231
00:08:24,479 --> 00:08:27,840
uh doug burks um

232
00:08:27,840 --> 00:08:30,000
but uh so what doug did he created

233
00:08:30,000 --> 00:08:32,240
security in and out of a need of his own

234
00:08:32,240 --> 00:08:34,399
and analysts that he knew that um you

235
00:08:34,399 --> 00:08:35,760
know they were trying to get a sensor

236
00:08:35,760 --> 00:08:37,919
platform up and running quickly

237
00:08:37,919 --> 00:08:40,479
and you know back in the day you were

238
00:08:40,479 --> 00:08:42,080
compiling all this stuff

239
00:08:42,080 --> 00:08:43,279
uh you know trying to get all these

240
00:08:43,279 --> 00:08:45,600
dependencies right and um what doug want

241
00:08:45,600 --> 00:08:47,519
to do is was really make that into a

242
00:08:47,519 --> 00:08:49,440
nice little neat package to be able to

243
00:08:49,440 --> 00:08:51,040
click and deploy

244
00:08:51,040 --> 00:08:53,279
and go from there and you know spend

245
00:08:53,279 --> 00:08:55,120
more time monitoring your network and

246
00:08:55,120 --> 00:08:57,440
less time administering it or setting up

247
00:08:57,440 --> 00:08:58,160
the

248
00:08:58,160 --> 00:09:00,240
mechanism to do so

249
00:09:00,240 --> 00:09:00,959
so

250
00:09:00,959 --> 00:09:02,959
uh in doing that uh security onion

251
00:09:02,959 --> 00:09:04,880
became this uh this free and open

252
00:09:04,880 --> 00:09:07,519
platform for intrusion detection

253
00:09:07,519 --> 00:09:09,360
enterprise security monitoring and log

254
00:09:09,360 --> 00:09:10,640
management

255
00:09:10,640 --> 00:09:11,440
so

256
00:09:11,440 --> 00:09:14,399
we record that traffic off the network

257
00:09:14,399 --> 00:09:16,720
we can also pull in host telemetry and

258
00:09:16,720 --> 00:09:19,200
then also just perform if you're just

259
00:09:19,200 --> 00:09:20,880
you know using it for log management you

260
00:09:20,880 --> 00:09:23,120
can send different types of log data via

261
00:09:23,120 --> 00:09:25,600
firewall and other stuff there as well

262
00:09:25,600 --> 00:09:27,279
and it can be installed from right now

263
00:09:27,279 --> 00:09:30,240
we have a centos 7 based iso image

264
00:09:30,240 --> 00:09:32,320
and packages are also available for

265
00:09:32,320 --> 00:09:35,519
ubuntu 1804 or centos 7.

266
00:09:35,519 --> 00:09:37,360
so if you want to install it

267
00:09:37,360 --> 00:09:39,440
install your own ubuntu or your own

268
00:09:39,440 --> 00:09:41,120
centos 7 install and then install

269
00:09:41,120 --> 00:09:43,040
security and on top of that you can

270
00:09:43,040 --> 00:09:44,720
absolutely do that

271
00:09:44,720 --> 00:09:48,160
and we completely support both methods

272
00:09:48,160 --> 00:09:49,920
so that's a little bit about security in

273
00:09:49,920 --> 00:09:51,760
itself and and i'll get into some of the

274
00:09:51,760 --> 00:09:55,360
the components of security in here

275
00:09:55,680 --> 00:09:57,279
and one of those uh one of those types

276
00:09:57,279 --> 00:09:58,640
of data that we get out of security i

277
00:09:58,640 --> 00:10:01,360
mean uh is going to be alert data and

278
00:10:01,360 --> 00:10:03,120
this is some of that uh you know that

279
00:10:03,120 --> 00:10:05,360
data that tells us that something is

280
00:10:05,360 --> 00:10:07,120
wrong here or that something could be

281
00:10:07,120 --> 00:10:09,760
wrong right and some of the mechanisms

282
00:10:09,760 --> 00:10:11,760
or tools that we use to gather that

283
00:10:11,760 --> 00:10:14,000
alert data are going to be wazoo which

284
00:10:14,000 --> 00:10:15,760
is a host-based intrusion detection

285
00:10:15,760 --> 00:10:16,800
system

286
00:10:16,800 --> 00:10:18,480
formerly known as osec and some of the

287
00:10:18,480 --> 00:10:20,480
binaries even are still called osec so

288
00:10:20,480 --> 00:10:22,240
you may know that already

289
00:10:22,240 --> 00:10:24,800
but it does things like sit does things

290
00:10:24,800 --> 00:10:27,120
like sit on the host and it can do file

291
00:10:27,120 --> 00:10:29,600
integrity monitoring um you know

292
00:10:29,600 --> 00:10:32,399
pick up windows logs ship those ship

293
00:10:32,399 --> 00:10:34,560
application logs other things like that

294
00:10:34,560 --> 00:10:35,839
but that's going to be the host-based

295
00:10:35,839 --> 00:10:37,680
component of that alert data that's

296
00:10:37,680 --> 00:10:41,120
generated and provided in security

297
00:10:41,120 --> 00:10:43,440
circada right now in

298
00:10:43,440 --> 00:10:45,440
security and in provides that needs

299
00:10:45,440 --> 00:10:47,360
functionality so

300
00:10:47,360 --> 00:10:49,279
there's alerts that you get you know

301
00:10:49,279 --> 00:10:50,640
from ids

302
00:10:50,640 --> 00:10:53,120
that's circada um well at least in this

303
00:10:53,120 --> 00:10:54,560
case so

304
00:10:54,560 --> 00:10:56,240
if you see some network traffic or if

305
00:10:56,240 --> 00:10:58,399
circada sees it and thinks it's bad

306
00:10:58,399 --> 00:11:00,399
based on the signatures that it has

307
00:11:00,399 --> 00:11:02,000
loaded then it will generate a nits

308
00:11:02,000 --> 00:11:04,959
alert and that's what you see here

309
00:11:04,959 --> 00:11:06,800
uh along with these source and

310
00:11:06,800 --> 00:11:08,320
destination ip addresses and i just

311
00:11:08,320 --> 00:11:10,320
realized this is actually an older image

312
00:11:10,320 --> 00:11:12,560
that i've not updated to ship but

313
00:11:12,560 --> 00:11:14,959
uh playbook is another way that we can

314
00:11:14,959 --> 00:11:16,240
alert on

315
00:11:16,240 --> 00:11:18,880
uh log data that we pull in or even

316
00:11:18,880 --> 00:11:21,360
network data just events that are in

317
00:11:21,360 --> 00:11:23,519
elasticsearch uh we can generate

318
00:11:23,519 --> 00:11:26,480
elastomer queries and then alert on that

319
00:11:26,480 --> 00:11:28,880
uh using playbook what playbook does is

320
00:11:28,880 --> 00:11:31,920
take in native sigma rules from the

321
00:11:31,920 --> 00:11:34,320
sigma repo and then we can convert those

322
00:11:34,320 --> 00:11:36,240
to a last alert rules and use those for

323
00:11:36,240 --> 00:11:37,920
detections and alerting inside of

324
00:11:37,920 --> 00:11:40,000
security

325
00:11:40,000 --> 00:11:41,760
stroke is going to provide the file

326
00:11:41,760 --> 00:11:44,079
based component so if you've uh if

327
00:11:44,079 --> 00:11:45,360
you've worked with the aura before you

328
00:11:45,360 --> 00:11:47,760
know that it works with files strobe

329
00:11:47,760 --> 00:11:50,320
code can also use yara to

330
00:11:50,320 --> 00:11:52,399
take those files that are extracted from

331
00:11:52,399 --> 00:11:53,760
network streams

332
00:11:53,760 --> 00:11:54,720
and

333
00:11:54,720 --> 00:11:56,560
perform some analysis on those and also

334
00:11:56,560 --> 00:11:58,959
run your rules against those files

335
00:11:58,959 --> 00:12:01,279
and then generate an alert based on that

336
00:12:01,279 --> 00:12:02,959
so that's super useful to be able to

337
00:12:02,959 --> 00:12:06,719
have that type of data at our fingertips

338
00:12:07,519 --> 00:12:09,920
and speaking to some other types of data

339
00:12:09,920 --> 00:12:11,760
that we collect and that provide

340
00:12:11,760 --> 00:12:13,519
available to you in security and in are

341
00:12:13,519 --> 00:12:16,240
going to be that of network metadata via

342
00:12:16,240 --> 00:12:18,240
ciracada or zeek

343
00:12:18,240 --> 00:12:20,560
zeke formerly known as bro has been a

344
00:12:20,560 --> 00:12:22,000
pretty popular

345
00:12:22,000 --> 00:12:25,600
way to policy neutral ids uh way to get

346
00:12:25,600 --> 00:12:27,760
that network metadata and be able to

347
00:12:27,760 --> 00:12:30,560
stack it and really see what's going on

348
00:12:30,560 --> 00:12:32,079
in the network

349
00:12:32,079 --> 00:12:34,320
uh lots and lots of different logs there

350
00:12:34,320 --> 00:12:36,800
from zeke and both cerakata sirikata can

351
00:12:36,800 --> 00:12:38,880
now perform that same kind of collection

352
00:12:38,880 --> 00:12:42,639
so things like dns activity http smb

353
00:12:42,639 --> 00:12:45,600
dc rpc tons and tons of protocols

354
00:12:45,600 --> 00:12:48,800
available for both of those

355
00:12:49,680 --> 00:12:52,240
along with the full content or full

356
00:12:52,240 --> 00:12:53,920
packet capture data from google

357
00:12:53,920 --> 00:12:56,480
stenographer we use google stenographer

358
00:12:56,480 --> 00:12:59,120
to record that data off the wire

359
00:12:59,120 --> 00:13:02,320
and we store that as indexed pcapp so

360
00:13:02,320 --> 00:13:03,920
it's very

361
00:13:03,920 --> 00:13:05,600
it's it's a little more efficient than

362
00:13:05,600 --> 00:13:07,839
storing raw pcap files so

363
00:13:07,839 --> 00:13:10,480
the files on disk are stored as an index

364
00:13:10,480 --> 00:13:11,200
or

365
00:13:11,200 --> 00:13:13,279
are indexed and then we go and retrieve

366
00:13:13,279 --> 00:13:14,880
that via our

367
00:13:14,880 --> 00:13:17,120
pcap application and security in it and

368
00:13:17,120 --> 00:13:19,040
we can carve that pcap pretty quickly

369
00:13:19,040 --> 00:13:20,240
since it's indexed and we're able to

370
00:13:20,240 --> 00:13:21,680
refer to that

371
00:13:21,680 --> 00:13:24,320
and with that pcap we get that complete

372
00:13:24,320 --> 00:13:27,120
transcript or the complete goings-on

373
00:13:27,120 --> 00:13:29,519
of whatever unencrypted traffic that we

374
00:13:29,519 --> 00:13:31,360
can see obviously things that are

375
00:13:31,360 --> 00:13:33,120
encrypted we're not going to

376
00:13:33,120 --> 00:13:34,800
peer into unless you're performing some

377
00:13:34,800 --> 00:13:37,839
type of inspection beforehand right

378
00:13:37,839 --> 00:13:41,120
excuse me let me get some water

379
00:13:42,800 --> 00:13:44,000
all right

380
00:13:44,000 --> 00:13:46,240
so continuing from that full content

381
00:13:46,240 --> 00:13:48,720
data that full packet capture

382
00:13:48,720 --> 00:13:50,560
we have other supplementary data that we

383
00:13:50,560 --> 00:13:52,480
can feed security in it

384
00:13:52,480 --> 00:13:53,360
and

385
00:13:53,360 --> 00:13:56,079
we recently made this a lot easier but

386
00:13:56,079 --> 00:13:58,320
we can use filebeat modules from elastic

387
00:13:58,320 --> 00:14:00,480
and what those 5b modules allow us to do

388
00:14:00,480 --> 00:14:02,399
is pull in a ton of different already

389
00:14:02,399 --> 00:14:04,079
supported

390
00:14:04,079 --> 00:14:06,399
log sources or you know other forms of

391
00:14:06,399 --> 00:14:07,839
telemetry

392
00:14:07,839 --> 00:14:09,040
things like

393
00:14:09,040 --> 00:14:11,920
you know fortinet logs

394
00:14:11,920 --> 00:14:14,399
let's see you can pull in threat data

395
00:14:14,399 --> 00:14:17,360
you can pull in gcp logs aws

396
00:14:17,360 --> 00:14:19,920
um all sorts of stuff there

397
00:14:19,920 --> 00:14:22,480
in addition to i mentioned wazoo for

398
00:14:22,480 --> 00:14:25,199
host data as well as when log be the

399
00:14:25,199 --> 00:14:28,880
elastic uh you know windows log beat for

400
00:14:28,880 --> 00:14:31,839
uh elastic itself the elastic stack

401
00:14:31,839 --> 00:14:34,639
and then also os query so with os query

402
00:14:34,639 --> 00:14:36,880
you can query those hosts uh like kind

403
00:14:36,880 --> 00:14:39,040
of like a relational database seeing all

404
00:14:39,040 --> 00:14:40,959
different types of things about the host

405
00:14:40,959 --> 00:14:44,480
what's going on processes users uh all

406
00:14:44,480 --> 00:14:46,880
sorts of good stuff there and we manage

407
00:14:46,880 --> 00:14:50,560
that with fleet dm here in security

408
00:14:51,279 --> 00:14:53,440
now let's talk a little bit about um you

409
00:14:53,440 --> 00:14:55,680
know traffic mirroring itself in the

410
00:14:55,680 --> 00:14:59,839
cloud and how that might occur

411
00:15:02,560 --> 00:15:05,600
so with aws uh traffic mirroring kind of

412
00:15:05,600 --> 00:15:08,399
happens like this right so we have these

413
00:15:08,399 --> 00:15:09,920
mirror sources

414
00:15:09,920 --> 00:15:11,360
which are going to be these elastic

415
00:15:11,360 --> 00:15:13,120
network interfaces and these are going

416
00:15:13,120 --> 00:15:14,160
to be

417
00:15:14,160 --> 00:15:16,079
essentially those instances they're

418
00:15:16,079 --> 00:15:19,440
nitro based instances in aws

419
00:15:19,440 --> 00:15:22,079
and what's going to happen with those is

420
00:15:22,079 --> 00:15:24,800
entire inside of a thing called a mirror

421
00:15:24,800 --> 00:15:27,600
session those e and i's are going to

422
00:15:27,600 --> 00:15:29,680
flow through a mirror filter

423
00:15:29,680 --> 00:15:31,759
and this mirror filter basically tells

424
00:15:31,759 --> 00:15:35,680
us uh or tells aws um what do you want

425
00:15:35,680 --> 00:15:39,120
to see right so i only want to see

426
00:15:39,120 --> 00:15:41,360
you know dns or i only want to see http

427
00:15:41,360 --> 00:15:43,440
or i want to see everything

428
00:15:43,440 --> 00:15:45,440
right and then once that filters in

429
00:15:45,440 --> 00:15:46,320
place

430
00:15:46,320 --> 00:15:48,240
that traffic flows through and then hits

431
00:15:48,240 --> 00:15:50,000
that mirror target which is going to be

432
00:15:50,000 --> 00:15:52,399
our security in an instance which is

433
00:15:52,399 --> 00:15:54,959
comprised of a management interface and

434
00:15:54,959 --> 00:15:57,120
a sniffing interface and this right here

435
00:15:57,120 --> 00:15:58,639
this mirror target is going to be that

436
00:15:58,639 --> 00:16:00,399
sniffing interface so it's going to

437
00:16:00,399 --> 00:16:02,399
listen to all of that traffic all that

438
00:16:02,399 --> 00:16:04,160
goodness and pull that in the security

439
00:16:04,160 --> 00:16:07,040
engine excuse me and make it so that we

440
00:16:07,040 --> 00:16:10,240
can review that data and see you know

441
00:16:10,240 --> 00:16:12,079
real attackers and all sorts of things

442
00:16:12,079 --> 00:16:13,120
like that

443
00:16:13,120 --> 00:16:15,120
so you know this is again a brief

444
00:16:15,120 --> 00:16:16,880
diagram of how that aws traffic

445
00:16:16,880 --> 00:16:18,800
mirroring works and we'll dive into that

446
00:16:18,800 --> 00:16:22,599
in just a little bit

447
00:16:23,279 --> 00:16:25,920
so here's an example um you know you can

448
00:16:25,920 --> 00:16:28,000
run security engine in the cloud uh we

449
00:16:28,000 --> 00:16:31,040
do have a security and an amazon machine

450
00:16:31,040 --> 00:16:33,040
image now that you can use so you can

451
00:16:33,040 --> 00:16:35,040
run it as a standalone instance or a

452
00:16:35,040 --> 00:16:36,880
complete distributed install in the

453
00:16:36,880 --> 00:16:38,320
cloud

454
00:16:38,320 --> 00:16:40,959
all by itself all on zlonesum

455
00:16:40,959 --> 00:16:42,959
or you can also set up security and in

456
00:16:42,959 --> 00:16:44,880
as a cloud node

457
00:16:44,880 --> 00:16:46,079
so

458
00:16:46,079 --> 00:16:48,000
when i say a cloud node i'm meaning a

459
00:16:48,000 --> 00:16:49,279
sensor

460
00:16:49,279 --> 00:16:51,040
in the cloud right so

461
00:16:51,040 --> 00:16:53,040
we essentially have we can have a

462
00:16:53,040 --> 00:16:54,880
manager that's local

463
00:16:54,880 --> 00:16:56,399
to our you know maybe we have an on-prem

464
00:16:56,399 --> 00:16:58,000
environment where we have a manager and

465
00:16:58,000 --> 00:16:59,600
a search node which is going to house

466
00:16:59,600 --> 00:17:01,440
most of the elastic data

467
00:17:01,440 --> 00:17:03,519
and then we have a local sensor maybe we

468
00:17:03,519 --> 00:17:05,679
have local traffic that we're monitoring

469
00:17:05,679 --> 00:17:07,760
but we also want to have that cloud

470
00:17:07,760 --> 00:17:09,199
traffic brought in we want to perform

471
00:17:09,199 --> 00:17:11,439
that traffic mirroring capture that

472
00:17:11,439 --> 00:17:13,599
we can absolutely do that using you know

473
00:17:13,599 --> 00:17:16,640
something like direct connect or openvpn

474
00:17:16,640 --> 00:17:19,119
we can connect a tunnel up there

475
00:17:19,119 --> 00:17:21,199
and then we can have that

476
00:17:21,199 --> 00:17:23,119
in our deployment essentially as if it

477
00:17:23,119 --> 00:17:25,280
were a local node and see that data all

478
00:17:25,280 --> 00:17:27,039
the same

479
00:17:27,039 --> 00:17:29,039
so it's super awesome to be able to do

480
00:17:29,039 --> 00:17:30,480
that right it's

481
00:17:30,480 --> 00:17:32,000
so you get the best of both worlds

482
00:17:32,000 --> 00:17:33,760
you're getting uh you know the local

483
00:17:33,760 --> 00:17:34,880
coverage you're getting the cloud

484
00:17:34,880 --> 00:17:36,320
coverage and you're able to view that

485
00:17:36,320 --> 00:17:38,720
through that single pane of glass

486
00:17:38,720 --> 00:17:40,000
so it's super

487
00:17:40,000 --> 00:17:44,320
uh super useful to have that capability

488
00:17:45,760 --> 00:17:48,880
now going into that uh that bpc

489
00:17:48,880 --> 00:17:50,799
mirroring or that traffic mirroring aws

490
00:17:50,799 --> 00:17:52,320
a little bit more

491
00:17:52,320 --> 00:17:54,000
uh i mentioned one of the components is

492
00:17:54,000 --> 00:17:56,160
that traffic mirror target uh one of

493
00:17:56,160 --> 00:17:58,080
those components of that mirror session

494
00:17:58,080 --> 00:18:00,480
right and that traffic mirror target

495
00:18:00,480 --> 00:18:02,160
again is going to define the target

496
00:18:02,160 --> 00:18:03,679
interface where we want to send that

497
00:18:03,679 --> 00:18:04,799
traffic

498
00:18:04,799 --> 00:18:06,559
right and in our instance it's going to

499
00:18:06,559 --> 00:18:08,400
be the interface that's associated with

500
00:18:08,400 --> 00:18:10,960
security engine

501
00:18:10,960 --> 00:18:13,360
so here's just a screenshot here of what

502
00:18:13,360 --> 00:18:14,799
that looks like when you go into the

503
00:18:14,799 --> 00:18:16,720
console we'll dig into that in just a

504
00:18:16,720 --> 00:18:18,080
little bit here

505
00:18:18,080 --> 00:18:19,440
but you can see the target settings

506
00:18:19,440 --> 00:18:21,200
there you can add a tag if you want to

507
00:18:21,200 --> 00:18:22,160
and then

508
00:18:22,160 --> 00:18:24,160
you can choose typically it's going to

509
00:18:24,160 --> 00:18:26,720
be the network interface and the target

510
00:18:26,720 --> 00:18:29,200
of the security onion sniffing interface

511
00:18:29,200 --> 00:18:31,679
right there

512
00:18:32,640 --> 00:18:34,559
and then another component that traffic

513
00:18:34,559 --> 00:18:36,480
mirror filter which is

514
00:18:36,480 --> 00:18:38,240
filtering what traffic is actually going

515
00:18:38,240 --> 00:18:39,520
to be sent

516
00:18:39,520 --> 00:18:41,600
to security and in

517
00:18:41,600 --> 00:18:45,120
data's here as well so um

518
00:18:45,120 --> 00:18:46,400
basically you're defining those

519
00:18:46,400 --> 00:18:48,000
protocols and that traffic that you want

520
00:18:48,000 --> 00:18:49,360
to be mirrored and then you can filter

521
00:18:49,360 --> 00:18:50,880
anything else out

522
00:18:50,880 --> 00:18:52,799
or you can just again take it all and

523
00:18:52,799 --> 00:18:56,840
send it all to security engine

524
00:18:57,919 --> 00:18:59,520
and then that traffic mirror session

525
00:18:59,520 --> 00:19:01,280
again is comprised of that source

526
00:19:01,280 --> 00:19:02,320
interface

527
00:19:02,320 --> 00:19:04,080
um that you know that nitra instance

528
00:19:04,080 --> 00:19:07,120
maybe a linux box maybe a windows server

529
00:19:07,120 --> 00:19:08,880
and that target interface that security

530
00:19:08,880 --> 00:19:10,720
and sniffing interface

531
00:19:10,720 --> 00:19:12,559
and again that mirror filter which is

532
00:19:12,559 --> 00:19:14,559
filtering the traffic

533
00:19:14,559 --> 00:19:16,160
whatever you're determining you want to

534
00:19:16,160 --> 00:19:18,799
have in there

535
00:19:22,240 --> 00:19:24,400
now some notes on traffic mirroring with

536
00:19:24,400 --> 00:19:27,840
aws um ciracata we we run these versions

537
00:19:27,840 --> 00:19:29,840
above these versions but i just wanted

538
00:19:29,840 --> 00:19:32,799
to note that circada uh you know 4.1.5

539
00:19:32,799 --> 00:19:34,960
and above can natively decapitate vxlan

540
00:19:34,960 --> 00:19:35,919
traffic

541
00:19:35,919 --> 00:19:38,880
so because it can support that and we're

542
00:19:38,880 --> 00:19:41,120
recording network data off the wire uh

543
00:19:41,120 --> 00:19:42,960
it's able to inspect that and generate

544
00:19:42,960 --> 00:19:45,200
alerts accordingly if it needs to

545
00:19:45,200 --> 00:19:46,840
and the same wizik

546
00:19:46,840 --> 00:19:50,640
3.0.x and up can also natively decap

547
00:19:50,640 --> 00:19:53,280
vxlan so we have that capability as well

548
00:19:53,280 --> 00:19:55,120
and again that traffic mirroring is

549
00:19:55,120 --> 00:19:57,200
capable only with the nitro based

550
00:19:57,200 --> 00:19:59,440
instances so you cannot use just any

551
00:19:59,440 --> 00:20:01,039
instance or you cannot mirror traffic

552
00:20:01,039 --> 00:20:03,039
from just any instance it would need to

553
00:20:03,039 --> 00:20:04,799
be one of those natural based instances

554
00:20:04,799 --> 00:20:06,159
so that's something you want to be aware

555
00:20:06,159 --> 00:20:07,280
of if

556
00:20:07,280 --> 00:20:08,799
you know you're building out your cloud

557
00:20:08,799 --> 00:20:10,799
infrastructure or you're considering a

558
00:20:10,799 --> 00:20:12,880
reorganization or

559
00:20:12,880 --> 00:20:14,480
if you have these plans to go monitor

560
00:20:14,480 --> 00:20:16,159
this traffic you need to keep that in

561
00:20:16,159 --> 00:20:17,679
mind that

562
00:20:17,679 --> 00:20:19,280
it is supported only for those nitro

563
00:20:19,280 --> 00:20:22,158
based instances

564
00:20:23,440 --> 00:20:28,000
now let's talk a little bit about gcp

565
00:20:29,600 --> 00:20:33,679
also known as google cloud platform

566
00:20:33,679 --> 00:20:35,760
so with gcp

567
00:20:35,760 --> 00:20:37,840
we can also perform traffic mirroring or

568
00:20:37,840 --> 00:20:39,840
they call it packet mirroring

569
00:20:39,840 --> 00:20:40,640
um

570
00:20:40,640 --> 00:20:42,559
and those components uh it's going to be

571
00:20:42,559 --> 00:20:45,280
a little bit different than aws but the

572
00:20:45,280 --> 00:20:47,600
end goal is essentially the same

573
00:20:47,600 --> 00:20:49,520
right so get that traffic from one point

574
00:20:49,520 --> 00:20:51,200
to another

575
00:20:51,200 --> 00:20:53,200
and it consists of a packet mirroring

576
00:20:53,200 --> 00:20:56,000
policy which determines basically which

577
00:20:56,000 --> 00:20:58,000
interfaces or

578
00:20:58,000 --> 00:20:59,520
which instances are going to be

579
00:20:59,520 --> 00:21:02,240
participating in that traffic mirroring

580
00:21:02,240 --> 00:21:03,520
and that traffic will be mirrored

581
00:21:03,520 --> 00:21:04,880
accordingly

582
00:21:04,880 --> 00:21:06,720
when that traffic gets mirrored it has

583
00:21:06,720 --> 00:21:10,000
to go to a tcp udp load balancer and

584
00:21:10,000 --> 00:21:11,919
what this load balancer does is it

585
00:21:11,919 --> 00:21:13,600
distributes that traffic that's mirrored

586
00:21:13,600 --> 00:21:15,200
from those instances

587
00:21:15,200 --> 00:21:17,840
and it takes it and splits it up across

588
00:21:17,840 --> 00:21:20,080
a collector destination

589
00:21:20,080 --> 00:21:22,400
and that collector destination it can be

590
00:21:22,400 --> 00:21:23,440
one

591
00:21:23,440 --> 00:21:25,520
instance or it can be multiple it can be

592
00:21:25,520 --> 00:21:27,840
an instance group right where you have

593
00:21:27,840 --> 00:21:30,480
these instances that spin up and

594
00:21:30,480 --> 00:21:32,799
each handle a certain part of the load

595
00:21:32,799 --> 00:21:35,039
that's what the purpose of this is it's

596
00:21:35,039 --> 00:21:37,520
to allow you to distribute that across

597
00:21:37,520 --> 00:21:40,080
the nodes equally or to be able to have

598
00:21:40,080 --> 00:21:43,200
some priority in that if you need to

599
00:21:43,200 --> 00:21:45,440
so again it's a little bit different um

600
00:21:45,440 --> 00:21:48,000
as far as is how you do it uh for the

601
00:21:48,000 --> 00:21:49,679
packet mirroring policy

602
00:21:49,679 --> 00:21:52,159
this is going to essentially take those

603
00:21:52,159 --> 00:21:54,559
source interfaces and

604
00:21:54,559 --> 00:21:55,760
that

605
00:21:55,760 --> 00:21:57,520
filter that i mentioned before and

606
00:21:57,520 --> 00:21:59,919
combine that into one

607
00:21:59,919 --> 00:22:01,360
and this collector destination is going

608
00:22:01,360 --> 00:22:03,039
to take the place of that other mirror

609
00:22:03,039 --> 00:22:04,880
target that i mentioned before

610
00:22:04,880 --> 00:22:06,799
and this load balancer is actually just

611
00:22:06,799 --> 00:22:08,960
a kind of a different concept altogether

612
00:22:08,960 --> 00:22:11,600
right you can use a load balancer on aws

613
00:22:11,600 --> 00:22:15,120
i'm just not covering that at the moment

614
00:22:16,400 --> 00:22:19,280
so here is a diagram of what that might

615
00:22:19,280 --> 00:22:20,480
look like

616
00:22:20,480 --> 00:22:22,400
here we have a single project and a

617
00:22:22,400 --> 00:22:24,720
single vpc network and this is taken

618
00:22:24,720 --> 00:22:27,360
straight from their documentation

619
00:22:27,360 --> 00:22:28,799
so i have the link there if you want to

620
00:22:28,799 --> 00:22:30,000
check that out

621
00:22:30,000 --> 00:22:32,720
but uh it is again in a single region

622
00:22:32,720 --> 00:22:34,960
and you can see that this mirrored vm

623
00:22:34,960 --> 00:22:35,840
here

624
00:22:35,840 --> 00:22:37,600
is you know there's traffic traversing

625
00:22:37,600 --> 00:22:39,840
the internet and an on-prem network and

626
00:22:39,840 --> 00:22:41,440
some google services

627
00:22:41,440 --> 00:22:44,720
and all of this stuff right here this

628
00:22:44,720 --> 00:22:47,440
subnet right here is basically via that

629
00:22:47,440 --> 00:22:49,840
packet mirroring policy is going to be

630
00:22:49,840 --> 00:22:52,960
mirrored because this vm is in here

631
00:22:52,960 --> 00:22:54,640
it's going to mirror that traffic and

632
00:22:54,640 --> 00:22:56,320
according to the map packet mirroring

633
00:22:56,320 --> 00:22:59,200
policy it says it needs to go to uh

634
00:22:59,200 --> 00:23:01,039
we're going to send it to this internal

635
00:23:01,039 --> 00:23:03,840
tcpdp load bouncer and then this

636
00:23:03,840 --> 00:23:06,640
distribute yeah distributes it

637
00:23:06,640 --> 00:23:09,679
into all of the collectors or instances

638
00:23:09,679 --> 00:23:12,240
we have here in the collector subnet

639
00:23:12,240 --> 00:23:14,240
and this is where the security union

640
00:23:14,240 --> 00:23:16,640
instances sniffing interface would come

641
00:23:16,640 --> 00:23:18,080
into play

642
00:23:18,080 --> 00:23:18,960
so

643
00:23:18,960 --> 00:23:21,840
um something to note is that you know in

644
00:23:21,840 --> 00:23:24,320
google cloud or in tcp

645
00:23:24,320 --> 00:23:26,480
you cannot have two interfaces in the

646
00:23:26,480 --> 00:23:28,880
same network on the same instance

647
00:23:28,880 --> 00:23:30,559
so you would have

648
00:23:30,559 --> 00:23:32,640
that one interface in this network

649
00:23:32,640 --> 00:23:34,080
performing this function the snipping

650
00:23:34,080 --> 00:23:34,880
one

651
00:23:34,880 --> 00:23:36,480
then you would have another interface

652
00:23:36,480 --> 00:23:38,080
for the security engine box in a

653
00:23:38,080 --> 00:23:40,240
separate network uh which really would

654
00:23:40,240 --> 00:23:42,320
be best practice anyway uh and then

655
00:23:42,320 --> 00:23:44,240
controlling it from there managing it

656
00:23:44,240 --> 00:23:45,360
from there

657
00:23:45,360 --> 00:23:47,520
so that's how that would look and come

658
00:23:47,520 --> 00:23:49,520
into play there with the gcp packet

659
00:23:49,520 --> 00:23:51,840
mirroring

660
00:23:53,600 --> 00:23:55,279
and i mentioned that here just kind of

661
00:23:55,279 --> 00:23:57,600
again mentioned that an instance in gcp

662
00:23:57,600 --> 00:23:58,720
cannot have more than one network

663
00:23:58,720 --> 00:24:00,159
interface that resides within the same

664
00:24:00,159 --> 00:24:02,000
network in vpc

665
00:24:02,000 --> 00:24:03,440
right

666
00:24:03,440 --> 00:24:04,799
so that security engine management

667
00:24:04,799 --> 00:24:07,039
interface again should reside in its own

668
00:24:07,039 --> 00:24:10,720
network or vpc

669
00:24:13,120 --> 00:24:16,159
now some ways um you know

670
00:24:16,159 --> 00:24:18,320
you might spin these things out in the

671
00:24:18,320 --> 00:24:20,080
cloud and you might be wondering okay

672
00:24:20,080 --> 00:24:21,760
well how can i test to make sure this is

673
00:24:21,760 --> 00:24:24,000
working uh make sure my packet nearing

674
00:24:24,000 --> 00:24:25,200
is working my traffic mirroring is

675
00:24:25,200 --> 00:24:27,120
working as i think it is

676
00:24:27,120 --> 00:24:30,000
tm nids is a great way to do that

677
00:24:30,000 --> 00:24:32,240
it's traditionally used with you know

678
00:24:32,240 --> 00:24:34,559
you can use it on-prem or in the cloud

679
00:24:34,559 --> 00:24:37,360
um but it would test circuit alerts

680
00:24:37,360 --> 00:24:39,760
basically for you so you can use it

681
00:24:39,760 --> 00:24:41,760
it's basically a command or a script

682
00:24:41,760 --> 00:24:44,159
written by thiago farya super great guy

683
00:24:44,159 --> 00:24:45,039
um

684
00:24:45,039 --> 00:24:46,880
three-quarter second tiago they put out

685
00:24:46,880 --> 00:24:48,880
a ton of great open source tools you

686
00:24:48,880 --> 00:24:50,320
should make sure to check those out on

687
00:24:50,320 --> 00:24:52,640
the github check them out on twitter

688
00:24:52,640 --> 00:24:53,600
um

689
00:24:53,600 --> 00:24:57,200
but you can use tnids or test my nids

690
00:24:57,200 --> 00:24:59,120
kind of a supercharged version if you

691
00:24:59,120 --> 00:25:01,919
used test my ids back in the day

692
00:25:01,919 --> 00:25:04,080
of that so you can run the command and

693
00:25:04,080 --> 00:25:04,960
then

694
00:25:04,960 --> 00:25:06,400
hopefully if all your packet mirroring

695
00:25:06,400 --> 00:25:08,000
is set up correctly it will generate

696
00:25:08,000 --> 00:25:09,919
alerts like you see here

697
00:25:09,919 --> 00:25:11,360
and we'll we'll go through that here in

698
00:25:11,360 --> 00:25:14,760
just a little bit

699
00:25:14,799 --> 00:25:16,880
another tool that's really cool really

700
00:25:16,880 --> 00:25:18,559
awesome to use with aws if you're

701
00:25:18,559 --> 00:25:20,799
performing that traffic mirroring uh and

702
00:25:20,799 --> 00:25:23,200
it's again another open source tool by

703
00:25:23,200 --> 00:25:25,919
thiago and team is uh three corsac auto

704
00:25:25,919 --> 00:25:27,039
mirror

705
00:25:27,039 --> 00:25:28,400
and what this does

706
00:25:28,400 --> 00:25:31,039
is it's an application uh previously it

707
00:25:31,039 --> 00:25:32,960
was a lambda function but i think now

708
00:25:32,960 --> 00:25:34,880
it's an app a serverless app and the app

709
00:25:34,880 --> 00:25:37,360
repository that you can install

710
00:25:37,360 --> 00:25:39,760
and what you do is you install that and

711
00:25:39,760 --> 00:25:42,480
you tag your instances you can have this

712
00:25:42,480 --> 00:25:43,919
come up as part of your instance

713
00:25:43,919 --> 00:25:45,919
creation procedure if you want to

714
00:25:45,919 --> 00:25:48,000
monitor it right so that way when people

715
00:25:48,000 --> 00:25:49,760
are rolling out your team it is rolling

716
00:25:49,760 --> 00:25:52,240
out instances you can append this mirror

717
00:25:52,240 --> 00:25:54,720
true tag and what auto mirror will do it

718
00:25:54,720 --> 00:25:57,279
will see that and it will create a

719
00:25:57,279 --> 00:25:58,960
corresponding

720
00:25:58,960 --> 00:26:00,880
configuration a corresponding mirror

721
00:26:00,880 --> 00:26:03,360
session for that automatically that

722
00:26:03,360 --> 00:26:04,960
means you don't have to go to the mirror

723
00:26:04,960 --> 00:26:05,840
session

724
00:26:05,840 --> 00:26:08,240
go manually add all these interfaces

725
00:26:08,240 --> 00:26:10,799
it knows basically um you know based on

726
00:26:10,799 --> 00:26:13,919
those tags what to add um to the mirror

727
00:26:13,919 --> 00:26:16,320
session that you have and if you need to

728
00:26:16,320 --> 00:26:17,919
uh you know configure a new mirror

729
00:26:17,919 --> 00:26:19,600
session if you hit the limit

730
00:26:19,600 --> 00:26:21,440
for mirror sessions and

731
00:26:21,440 --> 00:26:22,960
that's another thing entirely there are

732
00:26:22,960 --> 00:26:24,640
some considerations there that you'll

733
00:26:24,640 --> 00:26:25,919
want to look at

734
00:26:25,919 --> 00:26:28,320
make sure to review aws documentation on

735
00:26:28,320 --> 00:26:32,159
the limitations for mirror sessions but

736
00:26:32,159 --> 00:26:33,679
i digress

737
00:26:33,679 --> 00:26:34,400
so

738
00:26:34,400 --> 00:26:36,400
we'll continue from there but uh be sure

739
00:26:36,400 --> 00:26:38,960
to check out tm nids and auto mirror

740
00:26:38,960 --> 00:26:41,039
because they are again very useful tools

741
00:26:41,039 --> 00:26:42,640
to have in your

742
00:26:42,640 --> 00:26:45,120
toolkit

743
00:26:45,360 --> 00:26:47,039
all right so

744
00:26:47,039 --> 00:26:48,480
kind of poured through that i wanted to

745
00:26:48,480 --> 00:26:50,400
get to the lab uh you know in somewhat

746
00:26:50,400 --> 00:26:52,960
decent time so give me just a second

747
00:26:52,960 --> 00:26:55,600
here and we'll get started with that

748
00:26:55,600 --> 00:26:58,480
hopefully you guys have

749
00:26:58,480 --> 00:27:01,679
had the prerequisites in place and aws

750
00:27:01,679 --> 00:27:04,240
accounts and uh you don't necessarily

751
00:27:04,240 --> 00:27:05,919
need the access key

752
00:27:05,919 --> 00:27:07,760
for this workshop since

753
00:27:07,760 --> 00:27:08,960
i'm not sure if we're going to be

754
00:27:08,960 --> 00:27:11,440
performing that just yet or not but

755
00:27:11,440 --> 00:27:14,640
you will need an aws account and

756
00:27:14,640 --> 00:27:16,080
you will need to sign up for the

757
00:27:16,080 --> 00:27:18,000
security onion ami if you want to do

758
00:27:18,000 --> 00:27:18,799
that

759
00:27:18,799 --> 00:27:21,600
you don't necessarily have to

760
00:27:21,600 --> 00:27:23,919
in the documentation if you look at the

761
00:27:23,919 --> 00:27:26,720
prerequisites guide there

762
00:27:26,720 --> 00:27:29,440
you can absolutely set up an ubuntu 1804

763
00:27:29,440 --> 00:27:31,360
or centos 7

764
00:27:31,360 --> 00:27:33,440
install and then secure install security

765
00:27:33,440 --> 00:27:34,960
engine on top of that if you're

766
00:27:34,960 --> 00:27:36,720
comfortable with that but for the

767
00:27:36,720 --> 00:27:38,720
simplicity of the the lab and everything

768
00:27:38,720 --> 00:27:40,240
and getting everything going quickly we

769
00:27:40,240 --> 00:27:43,279
are going to use the ami

770
00:27:43,279 --> 00:27:44,720
so yeah just feel free let me know if

771
00:27:44,720 --> 00:27:46,320
you have any questions about that but i

772
00:27:46,320 --> 00:27:47,840
will spin that up here in just a second

773
00:27:47,840 --> 00:27:51,199
let me get one more drink

774
00:27:54,159 --> 00:27:55,520
all right

775
00:27:55,520 --> 00:27:58,320
so this lab

776
00:27:58,559 --> 00:28:02,480
let's see see if i get any questions

777
00:28:02,480 --> 00:28:05,039
comments

778
00:28:06,000 --> 00:28:08,640
all right cool

779
00:28:10,240 --> 00:28:13,039
okay so wrong way

780
00:28:13,039 --> 00:28:15,039
all right so if we're going through here

781
00:28:15,039 --> 00:28:18,559
again this is if um the link should be

782
00:28:18,559 --> 00:28:20,559
uh should be provided already but this

783
00:28:20,559 --> 00:28:21,360
is the

784
00:28:21,360 --> 00:28:22,799
uh instructions here if you want to get

785
00:28:22,799 --> 00:28:24,640
set up with aws

786
00:28:24,640 --> 00:28:26,720
and then if you scroll down

787
00:28:26,720 --> 00:28:28,559
to follow along with the step-by-step we

788
00:28:28,559 --> 00:28:31,039
have uh instructions here

789
00:28:31,039 --> 00:28:32,399
and then

790
00:28:32,399 --> 00:28:34,000
let's see

791
00:28:34,000 --> 00:28:35,440
let me see okay sorry i was just making

792
00:28:35,440 --> 00:28:37,039
sure i was still sharing there

793
00:28:37,039 --> 00:28:39,039
we have uh some other stuff here that

794
00:28:39,039 --> 00:28:42,000
will follow through in just a little bit

795
00:28:42,000 --> 00:28:44,159
but i'm gonna have this opened up on my

796
00:28:44,159 --> 00:28:47,760
side so let me make sure i get that

797
00:28:47,840 --> 00:28:50,240
okay got that ready to roll

798
00:28:50,240 --> 00:28:53,679
and now i am in

799
00:28:53,679 --> 00:28:55,919
aws right now so let me go ahead and

800
00:28:55,919 --> 00:28:58,159
delete this this is just an old vpc i

801
00:28:58,159 --> 00:29:01,200
don't need this thing

802
00:29:01,600 --> 00:29:04,240
get out of here

803
00:29:04,240 --> 00:29:06,080
all right so if you're starting from the

804
00:29:06,080 --> 00:29:08,000
vpc dashboard this is where we're going

805
00:29:08,000 --> 00:29:10,240
to start and create our vpc

806
00:29:10,240 --> 00:29:12,240
and we'll go through the wizard here oh

807
00:29:12,240 --> 00:29:14,080
actually let me go back

808
00:29:14,080 --> 00:29:15,840
sorry

809
00:29:15,840 --> 00:29:17,120
let me get back you don't want to start

810
00:29:17,120 --> 00:29:18,159
here it's a little bit easier if you

811
00:29:18,159 --> 00:29:20,880
actually launch the vpc wizard

812
00:29:20,880 --> 00:29:22,399
and we're going to do for simplicity's

813
00:29:22,399 --> 00:29:24,080
sake for this demo we're going to launch

814
00:29:24,080 --> 00:29:27,840
with a single public subnet

815
00:29:30,799 --> 00:29:31,840
all right and i'll give you guys a

816
00:29:31,840 --> 00:29:33,760
second there and what we're gonna do

817
00:29:33,760 --> 00:29:37,600
here is specify our um

818
00:29:37,600 --> 00:29:40,080
our cider for the uh for the public

819
00:29:40,080 --> 00:29:41,840
subnet and actually that's

820
00:29:41,840 --> 00:29:42,960
let's see

821
00:29:42,960 --> 00:29:44,240
i don't think you actually need to do

822
00:29:44,240 --> 00:29:46,480
this but

823
00:29:46,480 --> 00:29:49,200
this okay

824
00:29:49,200 --> 00:29:51,520
all right and then what we'll do from

825
00:29:51,520 --> 00:29:53,039
there is we'll just go ahead and create

826
00:29:53,039 --> 00:29:55,760
the vpc

827
00:29:55,760 --> 00:29:57,840
and take a minute here

828
00:29:57,840 --> 00:29:58,799
okay

829
00:29:58,799 --> 00:30:01,039
it's been successfully created there

830
00:30:01,039 --> 00:30:02,640
then we'll take a look at that we see it

831
00:30:02,640 --> 00:30:04,000
in here

832
00:30:04,000 --> 00:30:06,880
our vpc just some basic details here so

833
00:30:06,880 --> 00:30:08,720
now let's just go over to security

834
00:30:08,720 --> 00:30:10,399
groups

835
00:30:10,399 --> 00:30:12,399
and i actually have this modified if i

836
00:30:12,399 --> 00:30:14,000
remember correctly

837
00:30:14,000 --> 00:30:15,760
already let me see oh no that's right

838
00:30:15,760 --> 00:30:18,399
deleted vpc all right so what we'll do

839
00:30:18,399 --> 00:30:20,000
here is we're going to add exceptions

840
00:30:20,000 --> 00:30:23,200
for ssh and https for your ip address

841
00:30:23,200 --> 00:30:23,919
there

842
00:30:23,919 --> 00:30:25,279
i'm just going to add it for a range

843
00:30:25,279 --> 00:30:27,679
here i'm going to edit the default

844
00:30:27,679 --> 00:30:31,200
security group click edit inbound rules

845
00:30:31,200 --> 00:30:32,240
and i'm just going to delete this

846
00:30:32,240 --> 00:30:35,279
default one it has here

847
00:30:35,279 --> 00:30:37,840
and

848
00:30:38,000 --> 00:30:40,399
add ssh

849
00:30:40,399 --> 00:30:41,200
and

850
00:30:41,200 --> 00:30:43,279
i'm just going to do custom

851
00:30:43,279 --> 00:30:46,320
double check this always

852
00:30:46,320 --> 00:30:48,399
okay and you'll be adding yours here you

853
00:30:48,399 --> 00:30:52,320
will not be adding this range

854
00:30:52,320 --> 00:30:54,960
and you you really can just click my ip

855
00:30:54,960 --> 00:30:55,760
there

856
00:30:55,760 --> 00:31:00,240
to uh to use your own ring too

857
00:31:00,960 --> 00:31:02,080
whoops

858
00:31:02,080 --> 00:31:03,039
i

859
00:31:03,039 --> 00:31:04,640
right so

860
00:31:04,640 --> 00:31:05,519
that's

861
00:31:05,519 --> 00:31:10,080
we'll also add another rule for http

862
00:31:12,000 --> 00:31:14,240
let's

863
00:31:17,360 --> 00:31:20,480
there see

864
00:31:20,480 --> 00:31:24,880
i'm sorry https not http what am i doing

865
00:31:24,880 --> 00:31:27,360
there we go

866
00:31:27,840 --> 00:31:29,039
alrighty

867
00:31:29,039 --> 00:31:33,559
and i'll just do the same thing here

868
00:31:34,559 --> 00:31:35,919
alrighty

869
00:31:35,919 --> 00:31:39,039
let's save those rules

870
00:31:39,039 --> 00:31:40,880
all right so now we're just modifying

871
00:31:40,880 --> 00:31:43,360
again so we can have that ssh and web

872
00:31:43,360 --> 00:31:44,799
access from

873
00:31:44,799 --> 00:31:46,559
externally from our

874
00:31:46,559 --> 00:31:48,320
uh own machine

875
00:31:48,320 --> 00:31:49,919
and what i'm gonna do here i'm going to

876
00:31:49,919 --> 00:31:52,720
go over to the ec2 instances

877
00:31:52,720 --> 00:31:55,600
and spin up a security enemy box

878
00:31:55,600 --> 00:31:57,279
all right so i've got zero instances

879
00:31:57,279 --> 00:32:00,240
running here

880
00:32:00,240 --> 00:32:02,320
and i will click launch instances and

881
00:32:02,320 --> 00:32:04,080
again all of this is

882
00:32:04,080 --> 00:32:06,080
uh in this documentation

883
00:32:06,080 --> 00:32:08,960
and uh you know this will be recorded so

884
00:32:08,960 --> 00:32:10,480
you should be able to refer back to this

885
00:32:10,480 --> 00:32:14,679
if you feel going a little too fast

886
00:32:14,720 --> 00:32:16,240
all right and you'll search security

887
00:32:16,240 --> 00:32:17,679
engine and you'll see three results in

888
00:32:17,679 --> 00:32:19,519
the aws marketplace

889
00:32:19,519 --> 00:32:21,440
we're going to choose security on in2

890
00:32:21,440 --> 00:32:23,679
here

891
00:32:24,399 --> 00:32:26,000
all right and you can review the pricing

892
00:32:26,000 --> 00:32:27,919
details if you wish

893
00:32:27,919 --> 00:32:31,200
we charge it's 15 cents an hour but um

894
00:32:31,200 --> 00:32:32,399
it's 30

895
00:32:32,399 --> 00:32:35,039
30 days first 30 30 days are free please

896
00:32:35,039 --> 00:32:36,799
make sure to delete your vms after this

897
00:32:36,799 --> 00:32:40,159
so you're not charged unnecessarily

898
00:32:40,159 --> 00:32:43,120
but again it is 30 days uh free for that

899
00:32:43,120 --> 00:32:44,799
image and

900
00:32:44,799 --> 00:32:46,720
again feel free if you want to spin up

901
00:32:46,720 --> 00:32:49,919
your own ubuntu or centos image

902
00:32:49,919 --> 00:32:52,320
you're more than welcome to do that

903
00:32:52,320 --> 00:32:54,320
for my purposes i'm going to choose the

904
00:32:54,320 --> 00:32:57,679
t2 2x large you should be able to

905
00:32:57,679 --> 00:32:59,840
choose that one or you can choose the x

906
00:32:59,840 --> 00:33:01,440
large if you wish both of them should

907
00:33:01,440 --> 00:33:02,320
work

908
00:33:02,320 --> 00:33:04,240
just uh just adding a little extra

909
00:33:04,240 --> 00:33:07,440
horsepower there for this demo so

910
00:33:07,440 --> 00:33:08,960
i'm going to go to configure instance

911
00:33:08,960 --> 00:33:12,159
details and most of these defaults

912
00:33:12,159 --> 00:33:14,960
should be good um since we only have one

913
00:33:14,960 --> 00:33:16,880
public subnet here

914
00:33:16,880 --> 00:33:19,039
but otherwise let's see we'll scroll

915
00:33:19,039 --> 00:33:21,440
down to network interfaces

916
00:33:21,440 --> 00:33:23,279
since we have everything else here in

917
00:33:23,279 --> 00:33:25,840
place

918
00:33:26,320 --> 00:33:28,000
and we're going to add a network

919
00:33:28,000 --> 00:33:30,399
interface

920
00:33:30,559 --> 00:33:32,240
and we'll just leave it like that

921
00:33:32,240 --> 00:33:34,000
it's going to go with that you know just

922
00:33:34,000 --> 00:33:35,039
like that

923
00:33:35,039 --> 00:33:36,240
and then from there what we're going to

924
00:33:36,240 --> 00:33:39,519
do is we're going to click add storage

925
00:33:39,519 --> 00:33:41,519
and i believe with this image it does

926
00:33:41,519 --> 00:33:43,120
require that you specify a throughput

927
00:33:43,120 --> 00:33:45,600
value you can specify as little as like

928
00:33:45,600 --> 00:33:48,159
two uh you know 200 megabytes or i'm

929
00:33:48,159 --> 00:33:50,159
sorry yeah megabytes per second or i'm

930
00:33:50,159 --> 00:33:52,000
just going to specify a thousand here

931
00:33:52,000 --> 00:33:54,240
it's completely up to you

932
00:33:54,240 --> 00:33:56,240
i will say that the installer prefers

933
00:33:56,240 --> 00:33:59,440
that you use 200 gigs but uh you know

934
00:33:59,440 --> 00:34:02,080
you can certainly get by using 100 gigs

935
00:34:02,080 --> 00:34:03,200
with this

936
00:34:03,200 --> 00:34:04,720
i'm just going to use 200 for the time

937
00:34:04,720 --> 00:34:07,519
being but you should be fine just using

938
00:34:07,519 --> 00:34:10,320
uh 100 if you choose to do so

939
00:34:10,320 --> 00:34:14,159
i'm just going to click add tags oops

940
00:34:14,159 --> 00:34:18,200
i guess i can't choose that many

941
00:34:20,159 --> 00:34:21,359
okay

942
00:34:21,359 --> 00:34:23,359
so we'll go there i'm not going to add

943
00:34:23,359 --> 00:34:26,159
any tags here um

944
00:34:26,159 --> 00:34:27,679
you know i'll just continue without

945
00:34:27,679 --> 00:34:29,040
adding the tag there i'm going to

946
00:34:29,040 --> 00:34:31,119
configure the security group

947
00:34:31,119 --> 00:34:32,239
and then i'm going to select that

948
00:34:32,239 --> 00:34:33,760
existing security group for that

949
00:34:33,760 --> 00:34:34,719
instance

950
00:34:34,719 --> 00:34:36,879
and select default because again i want

951
00:34:36,879 --> 00:34:39,599
to be able to reset the ssh in

952
00:34:39,599 --> 00:34:41,760
https so that's what we're going to do

953
00:34:41,760 --> 00:34:43,918
here i'm going to review and launch that

954
00:34:43,918 --> 00:34:45,440
instance

955
00:34:45,440 --> 00:34:47,359
and it's going to pull up the summary

956
00:34:47,359 --> 00:34:49,760
here and i'll have to click launch once

957
00:34:49,760 --> 00:34:51,199
again

958
00:34:51,199 --> 00:34:53,119
and now it's going to prompt me for a

959
00:34:53,119 --> 00:34:55,119
key pair to use with this

960
00:34:55,119 --> 00:34:56,879
now what you'll want to do is if you

961
00:34:56,879 --> 00:34:58,800
don't already have an existing key pair

962
00:34:58,800 --> 00:35:00,880
as you want to create one and then

963
00:35:00,880 --> 00:35:02,480
download that

964
00:35:02,480 --> 00:35:03,839
keep here

965
00:35:03,839 --> 00:35:05,599
and then from there

966
00:35:05,599 --> 00:35:07,599
uh you know you can we can perform that

967
00:35:07,599 --> 00:35:10,000
ssh access that we'll get in to in just

968
00:35:10,000 --> 00:35:11,280
a minute but

969
00:35:11,280 --> 00:35:12,960
i'm going to choose an existing key pair

970
00:35:12,960 --> 00:35:14,240
for mine

971
00:35:14,240 --> 00:35:17,200
i've got this security demo cv right

972
00:35:17,200 --> 00:35:18,320
here

973
00:35:18,320 --> 00:35:20,400
and this is one that i created before

974
00:35:20,400 --> 00:35:22,160
and i'm just going to use it again

975
00:35:22,160 --> 00:35:24,160
um and this is what tells the instance

976
00:35:24,160 --> 00:35:26,240
what keypair to use so please make sure

977
00:35:26,240 --> 00:35:28,000
you use the appropriate one

978
00:35:28,000 --> 00:35:31,119
that you're intending to ssh with um

979
00:35:31,119 --> 00:35:32,960
so i'll choose that and i'll acknowledge

980
00:35:32,960 --> 00:35:35,119
that if i don't use the right key pair

981
00:35:35,119 --> 00:35:37,119
or if i don't have that i won't be able

982
00:35:37,119 --> 00:35:38,720
to access the instance at least in a

983
00:35:38,720 --> 00:35:40,560
traditional fashion

984
00:35:40,560 --> 00:35:44,359
we'll click launch instances

985
00:35:49,599 --> 00:35:51,040
all right so it's launching that

986
00:35:51,040 --> 00:35:53,759
instance right now

987
00:35:54,320 --> 00:35:56,480
okay we can view the launch log or we

988
00:35:56,480 --> 00:35:59,040
can go look at the instance itself

989
00:35:59,040 --> 00:35:59,920
okay

990
00:35:59,920 --> 00:36:02,000
so it shows that it's running

991
00:36:02,000 --> 00:36:03,680
right and we can scroll down to the

992
00:36:03,680 --> 00:36:05,760
bottom of the pane and uh if we click on

993
00:36:05,760 --> 00:36:07,440
the instance

994
00:36:07,440 --> 00:36:09,760
and click on where is it

995
00:36:09,760 --> 00:36:12,760
networking

996
00:36:13,520 --> 00:36:15,920
let's see

997
00:36:16,560 --> 00:36:18,079
view instances like the security an

998
00:36:18,079 --> 00:36:20,240
instance going down the bottom

999
00:36:20,240 --> 00:36:23,240
okay

1000
00:36:26,320 --> 00:36:27,839
where is the

1001
00:36:27,839 --> 00:36:30,400
interface

1002
00:36:33,040 --> 00:36:35,040
there we go all right

1003
00:36:35,040 --> 00:36:37,680
so the interface uh that we're going to

1004
00:36:37,680 --> 00:36:39,280
look at here the primary network

1005
00:36:39,280 --> 00:36:40,560
interface

1006
00:36:40,560 --> 00:36:42,240
what we're going to do here is we're

1007
00:36:42,240 --> 00:36:44,160
going to actually assign an elastic ip

1008
00:36:44,160 --> 00:36:46,560
to this

1009
00:36:46,640 --> 00:36:49,200
and so you can see here

1010
00:36:49,200 --> 00:36:51,359
if you click there if you go to actions

1011
00:36:51,359 --> 00:36:55,560
manage ip address for that interface

1012
00:36:58,960 --> 00:37:01,599
and then

1013
00:37:01,920 --> 00:37:03,920
we must allocate an elastic ip address

1014
00:37:03,920 --> 00:37:05,920
and associate it okay so we're going to

1015
00:37:05,920 --> 00:37:08,880
allocate an ip and actually have some

1016
00:37:08,880 --> 00:37:11,119
here already but um

1017
00:37:11,119 --> 00:37:13,760
so you can you can go there right

1018
00:37:13,760 --> 00:37:15,119
in the documentation there if you need

1019
00:37:15,119 --> 00:37:17,040
to refer to that and then click allocate

1020
00:37:17,040 --> 00:37:19,280
elastic ip address i'm going to use

1021
00:37:19,280 --> 00:37:21,200
amazon's pool of ip addresses right

1022
00:37:21,200 --> 00:37:23,680
allocate

1023
00:37:23,680 --> 00:37:25,760
and then i'm going to go back here

1024
00:37:25,760 --> 00:37:26,720
and

1025
00:37:26,720 --> 00:37:28,720
hit cancel

1026
00:37:28,720 --> 00:37:31,280
i'm going to click manage ip addresses

1027
00:37:31,280 --> 00:37:33,599
again

1028
00:37:33,839 --> 00:37:37,359
okay and allocate

1029
00:37:37,359 --> 00:37:38,640
whoops i guess i should have done that

1030
00:37:38,640 --> 00:37:40,640
already okay whoop my bad

1031
00:37:40,640 --> 00:37:42,320
okay

1032
00:37:42,320 --> 00:37:44,560
wait let me get back oops sorry wrong

1033
00:37:44,560 --> 00:37:46,000
one

1034
00:37:46,000 --> 00:37:47,920
keep going back and forth okay so we

1035
00:37:47,920 --> 00:37:49,200
need to actually get an actions and

1036
00:37:49,200 --> 00:37:52,400
associate elastic ip address i'm sorry

1037
00:37:52,400 --> 00:37:55,200
and we'll choose this instance

1038
00:37:55,200 --> 00:37:58,400
choose that and then associate that

1039
00:37:58,400 --> 00:38:00,960
let's see oh okay i think i have that

1040
00:38:00,960 --> 00:38:02,720
already associated with something

1041
00:38:02,720 --> 00:38:04,720
all right let me go back

1042
00:38:04,720 --> 00:38:07,839
and just close this

1043
00:38:07,839 --> 00:38:11,599
go to network interfaces

1044
00:38:13,119 --> 00:38:16,119
okay

1045
00:38:19,040 --> 00:38:20,000
okay

1046
00:38:20,000 --> 00:38:20,960
so

1047
00:38:20,960 --> 00:38:22,400
you need to go to one that's not

1048
00:38:22,400 --> 00:38:24,320
allocated i've already had some of these

1049
00:38:24,320 --> 00:38:25,280
uh

1050
00:38:25,280 --> 00:38:27,599
available before so

1051
00:38:27,599 --> 00:38:29,040
just need to use one that's not

1052
00:38:29,040 --> 00:38:30,480
allocated

1053
00:38:30,480 --> 00:38:31,599
okay

1054
00:38:31,599 --> 00:38:33,440
there we go

1055
00:38:33,440 --> 00:38:35,520
all right so now my public ip address is

1056
00:38:35,520 --> 00:38:38,400
going to be 3.13.20.208

1057
00:38:38,400 --> 00:38:40,240
okay

1058
00:38:40,240 --> 00:38:42,240
and now so if we go down we should be

1059
00:38:42,240 --> 00:38:45,119
able to ssh to that box now

1060
00:38:45,119 --> 00:38:47,440
so if i go over here

1061
00:38:47,440 --> 00:38:49,599
i'm just going to paste that it's not

1062
00:38:49,599 --> 00:38:51,040
the right one

1063
00:38:51,040 --> 00:38:54,800
go back and copy that ip address

1064
00:38:55,599 --> 00:38:57,520
ah

1065
00:38:57,520 --> 00:39:01,400
okay we'll copy that

1066
00:39:01,680 --> 00:39:03,680
and now i've already copied that uh

1067
00:39:03,680 --> 00:39:06,079
security engine pen file so if i look

1068
00:39:06,079 --> 00:39:08,400
here you can see that and one thing that

1069
00:39:08,400 --> 00:39:10,960
you'll need to do is you'll need to do a

1070
00:39:10,960 --> 00:39:14,480
chmod 400 on that file uh more than

1071
00:39:14,480 --> 00:39:16,000
likely when you first start using it

1072
00:39:16,000 --> 00:39:18,320
because the permissions will be to open

1073
00:39:18,320 --> 00:39:20,240
so make sure you do that before you try

1074
00:39:20,240 --> 00:39:23,280
to use it but otherwise we'll do an ssh

1075
00:39:23,280 --> 00:39:24,720
dash i

1076
00:39:24,720 --> 00:39:27,200
and we'll specify the pen file and the

1077
00:39:27,200 --> 00:39:30,400
default user for that onion user will be

1078
00:39:30,400 --> 00:39:32,880
uh onion i'm sorry oops

1079
00:39:32,880 --> 00:39:34,880
here we go see if i can go back and get

1080
00:39:34,880 --> 00:39:37,040
that

1081
00:39:38,400 --> 00:39:40,960
come on now

1082
00:39:41,280 --> 00:39:43,760
oh my goodness

1083
00:39:43,760 --> 00:39:45,440
there we go just making sure it's my

1084
00:39:45,440 --> 00:39:48,079
copy paste buffer

1085
00:39:48,079 --> 00:39:49,680
being difficult

1086
00:39:49,680 --> 00:39:50,960
okay

1087
00:39:50,960 --> 00:39:52,960
now

1088
00:39:52,960 --> 00:39:54,839
i'll take that

1089
00:39:54,839 --> 00:39:58,160
off you know it could be so hard ssh all

1090
00:39:58,160 --> 00:39:58,880
right

1091
00:39:58,880 --> 00:40:00,880
so yes

1092
00:40:00,880 --> 00:40:02,880
and now what will happen it'll pop us

1093
00:40:02,880 --> 00:40:04,560
into setup here in our security in an

1094
00:40:04,560 --> 00:40:05,839
instance and we're going to go ahead and

1095
00:40:05,839 --> 00:40:07,839
run through this

1096
00:40:07,839 --> 00:40:10,240
so we'll say we would like to continue

1097
00:40:10,240 --> 00:40:12,400
yes we would like to continue

1098
00:40:12,400 --> 00:40:15,680
and we'll choose a standalone note

1099
00:40:15,680 --> 00:40:18,079
and all of this um it's fairly

1100
00:40:18,079 --> 00:40:20,160
straightforward so again uh you know if

1101
00:40:20,160 --> 00:40:21,760
you feel like i'm moving kind of fast

1102
00:40:21,760 --> 00:40:22,880
feel free

1103
00:40:22,880 --> 00:40:25,040
uh if you um

1104
00:40:25,040 --> 00:40:26,640
i feel like you can

1105
00:40:26,640 --> 00:40:27,839
i feel like it's moving a little too

1106
00:40:27,839 --> 00:40:31,599
fast it will be recorded again

1107
00:40:32,880 --> 00:40:34,800
okay it's gonna call this box security

1108
00:40:34,800 --> 00:40:36,960
onion aws and i'm gonna map a host file

1109
00:40:36,960 --> 00:40:39,280
entry after this

1110
00:40:39,280 --> 00:40:40,079
okay

1111
00:40:40,079 --> 00:40:41,520
we're gonna

1112
00:40:41,520 --> 00:40:44,400
assume all this other stuff like dns h

1113
00:40:44,400 --> 00:40:45,760
you know everything else is already set

1114
00:40:45,760 --> 00:40:47,920
up we'll just select yes here

1115
00:40:47,920 --> 00:40:49,839
and because we use dhcp in here we're

1116
00:40:49,839 --> 00:40:51,839
just gonna let amazon handle all of that

1117
00:40:51,839 --> 00:40:54,560
and we're going to specify e0 as our

1118
00:40:54,560 --> 00:40:56,960
management interface

1119
00:40:56,960 --> 00:40:58,400
and then setup's going to go through and

1120
00:40:58,400 --> 00:41:00,000
it's going to initialize some networking

1121
00:41:00,000 --> 00:41:01,680
components there

1122
00:41:01,680 --> 00:41:03,200
we're going to choose the direct option

1123
00:41:03,200 --> 00:41:04,160
here

1124
00:41:04,160 --> 00:41:07,480
hit enter

1125
00:41:15,440 --> 00:41:16,720
all right so it's just going to check a

1126
00:41:16,720 --> 00:41:17,920
couple of things real quick and it's

1127
00:41:17,920 --> 00:41:20,400
going to go back to the rest of setup

1128
00:41:20,400 --> 00:41:22,480
let's use our monitor interface this is

1129
00:41:22,480 --> 00:41:23,839
that sniffing interface here that we'll

1130
00:41:23,839 --> 00:41:24,800
be using

1131
00:41:24,800 --> 00:41:26,880
to sniff that network traffic

1132
00:41:26,880 --> 00:41:29,520
and we'll pretty much tab through most

1133
00:41:29,520 --> 00:41:32,000
of these

1134
00:41:32,160 --> 00:41:32,880
and

1135
00:41:32,880 --> 00:41:35,280
so some of these i'm going to disable

1136
00:41:35,280 --> 00:41:37,119
for the time uh just because we're not

1137
00:41:37,119 --> 00:41:38,720
going to be using these but these are

1138
00:41:38,720 --> 00:41:40,319
some other components that we run so i

1139
00:41:40,319 --> 00:41:42,240
mentioned some of these already but the

1140
00:41:42,240 --> 00:41:43,839
hive is another component that we run

1141
00:41:43,839 --> 00:41:45,520
with security

1142
00:41:45,520 --> 00:41:46,800
and um

1143
00:41:46,800 --> 00:41:48,880
and that is available for escalating

1144
00:41:48,880 --> 00:41:50,880
cases and doing that kind of thing uh

1145
00:41:50,880 --> 00:41:52,960
super powerful tool if you haven't

1146
00:41:52,960 --> 00:41:55,040
heard about it or checked it out already

1147
00:41:55,040 --> 00:41:57,119
but uh i'm gonna actually i'm just gonna

1148
00:41:57,119 --> 00:41:59,839
keep wazzu but i'll do the rest right

1149
00:41:59,839 --> 00:42:02,839
here

1150
00:42:02,960 --> 00:42:04,720
okay

1151
00:42:04,720 --> 00:42:06,480
and i'll select yes for the default

1152
00:42:06,480 --> 00:42:07,680
docker range

1153
00:42:07,680 --> 00:42:09,680
and you can specify anything here for

1154
00:42:09,680 --> 00:42:11,280
the username i'm just going to do user

1155
00:42:11,280 --> 00:42:13,680
test.local

1156
00:42:13,680 --> 00:42:17,560
and i'm going to enter in a password

1157
00:42:17,760 --> 00:42:20,000
and for this this web access portion

1158
00:42:20,000 --> 00:42:22,160
this is pretty important you'll want to

1159
00:42:22,160 --> 00:42:25,839
choose other here because this is how

1160
00:42:25,839 --> 00:42:27,760
it how the web application knows to

1161
00:42:27,760 --> 00:42:29,920
refer to itself and other components so

1162
00:42:29,920 --> 00:42:31,599
we'll need to be able to point it to a

1163
00:42:31,599 --> 00:42:33,839
dns name or something that we have

1164
00:42:33,839 --> 00:42:36,400
mapped a name like security in aws

1165
00:42:36,400 --> 00:42:38,160
because otherwise the external ip and

1166
00:42:38,160 --> 00:42:39,839
the internal ip there can be some

1167
00:42:39,839 --> 00:42:42,079
confusion there so we'll do security in

1168
00:42:42,079 --> 00:42:44,400
aws for now

1169
00:42:44,400 --> 00:42:46,720
and we'll specify a password for the so

1170
00:42:46,720 --> 00:42:48,000
remote user

1171
00:42:48,000 --> 00:42:50,240
and this is really only used if you uh

1172
00:42:50,240 --> 00:42:52,240
use a distributed deployment but it's

1173
00:42:52,240 --> 00:42:54,560
there in case you extend yourself your

1174
00:42:54,560 --> 00:42:56,960
deployment to one so that's available to

1175
00:42:56,960 --> 00:42:58,400
you

1176
00:42:58,400 --> 00:43:00,400
it's going to tab through a number of

1177
00:43:00,400 --> 00:43:01,680
these

1178
00:43:01,680 --> 00:43:03,680
and now we get to the esso allow

1179
00:43:03,680 --> 00:43:06,160
component and what esso allow does is it

1180
00:43:06,160 --> 00:43:07,680
opens up some ports on a local

1181
00:43:07,680 --> 00:43:09,280
host-based firewall for you to be able

1182
00:43:09,280 --> 00:43:11,839
to access components of security onion

1183
00:43:11,839 --> 00:43:14,720
and what we want to do here is because

1184
00:43:14,720 --> 00:43:16,000
i'm letting

1185
00:43:16,000 --> 00:43:18,720
amazon handle the firewall here

1186
00:43:18,720 --> 00:43:21,040
i'm actually not going to

1187
00:43:21,040 --> 00:43:23,440
go against best practices here and

1188
00:43:23,440 --> 00:43:25,839
for simplicity's sake and demo god's

1189
00:43:25,839 --> 00:43:27,839
sake i'm gonna do

1190
00:43:27,839 --> 00:43:31,520
quad zero here and hit okay

1191
00:43:31,520 --> 00:43:32,960
and then

1192
00:43:32,960 --> 00:43:34,400
it's gonna hit yes and then it's gonna

1193
00:43:34,400 --> 00:43:36,400
go through setup uh that's gonna take a

1194
00:43:36,400 --> 00:43:38,000
little bit so we're gonna continue on to

1195
00:43:38,000 --> 00:43:39,200
some other things as it goes through

1196
00:43:39,200 --> 00:43:40,640
setup

1197
00:43:40,640 --> 00:43:42,160
and uh you know we'll continue from

1198
00:43:42,160 --> 00:43:44,000
there and continue on with the workshop

1199
00:43:44,000 --> 00:43:47,200
as that's going in the background

1200
00:43:47,599 --> 00:43:49,599
so let me get back

1201
00:43:49,599 --> 00:43:51,599
over here into aws

1202
00:43:51,599 --> 00:43:55,839
and catch up on these notes here

1203
00:43:58,240 --> 00:43:59,520
okay

1204
00:43:59,520 --> 00:44:01,520
all right so once setup's running we're

1205
00:44:01,520 --> 00:44:03,760
going to go back to the instances tab

1206
00:44:03,760 --> 00:44:05,119
that we have here

1207
00:44:05,119 --> 00:44:06,400
all right we can see our one security

1208
00:44:06,400 --> 00:44:07,760
engine instance

1209
00:44:07,760 --> 00:44:10,079
and we're gonna add another instance uh

1210
00:44:10,079 --> 00:44:12,720
i think maybe just an amazon linux

1211
00:44:12,720 --> 00:44:13,760
instance

1212
00:44:13,760 --> 00:44:16,720
um and then we'll go with uh because now

1213
00:44:16,720 --> 00:44:17,599
um

1214
00:44:17,599 --> 00:44:19,440
t3 i believe

1215
00:44:19,440 --> 00:44:22,160
if we go to the

1216
00:44:22,160 --> 00:44:26,160
ws supported nitro

1217
00:44:27,599 --> 00:44:30,560
let's see if

1218
00:44:32,800 --> 00:44:36,359
intro instances

1219
00:44:38,880 --> 00:44:42,079
let's see natural system okay so again i

1220
00:44:42,079 --> 00:44:43,599
mentioned this here all the instances

1221
00:44:43,599 --> 00:44:45,520
based on the nitro system so we'll start

1222
00:44:45,520 --> 00:44:48,560
with the lowest of those a t3

1223
00:44:48,560 --> 00:44:51,280
and we'll go over here and launch our

1224
00:44:51,280 --> 00:44:53,839
instance with a t3 micro uh pretty much

1225
00:44:53,839 --> 00:44:55,760
the smallest that we need here

1226
00:44:55,760 --> 00:44:58,960
we'll configure those instance details

1227
00:44:58,960 --> 00:45:00,319
right and uh it'll be pretty

1228
00:45:00,319 --> 00:45:01,920
straightforward here we're just going to

1229
00:45:01,920 --> 00:45:04,400
set up some some basic things here

1230
00:45:04,400 --> 00:45:06,560
allow the auto assignment of a public ip

1231
00:45:06,560 --> 00:45:08,400
address and it's being able to auto

1232
00:45:08,400 --> 00:45:10,000
assign now because we only have one

1233
00:45:10,000 --> 00:45:11,839
interface here

1234
00:45:11,839 --> 00:45:13,760
so that's what we're going to do we're

1235
00:45:13,760 --> 00:45:16,480
going to click add storage

1236
00:45:16,480 --> 00:45:18,880
i'm going to click just make it you

1237
00:45:18,880 --> 00:45:20,400
don't really need to add storage here

1238
00:45:20,400 --> 00:45:21,920
i'm just gonna do 20

1239
00:45:21,920 --> 00:45:23,760
for fun

1240
00:45:23,760 --> 00:45:25,839
um i'm gonna click configure security

1241
00:45:25,839 --> 00:45:27,760
group and again all this is inside of

1242
00:45:27,760 --> 00:45:29,520
that documentation

1243
00:45:29,520 --> 00:45:32,400
and i'm gonna select an existing group

1244
00:45:32,400 --> 00:45:34,480
i'm sorry now i'm going to create a new

1245
00:45:34,480 --> 00:45:36,400
security group and what we're going to

1246
00:45:36,400 --> 00:45:37,599
call this

1247
00:45:37,599 --> 00:45:40,240
is security

1248
00:45:40,240 --> 00:45:41,520
onion

1249
00:45:41,520 --> 00:45:43,359
snipping group

1250
00:45:43,359 --> 00:45:44,880
right and this will be the the group

1251
00:45:44,880 --> 00:45:46,480
that the network interface

1252
00:45:46,480 --> 00:45:47,839
belongs to

1253
00:45:47,839 --> 00:45:50,560
um that's uh and we want to be able to

1254
00:45:50,560 --> 00:45:53,119
route all internal traffic to security

1255
00:45:53,119 --> 00:45:55,680
and be able to monitor all that traffic

1256
00:45:55,680 --> 00:45:58,240
so what we'll do is add an inbound rule

1257
00:45:58,240 --> 00:45:59,119
here

1258
00:45:59,119 --> 00:46:01,359
and we're going to specify it for all

1259
00:46:01,359 --> 00:46:03,119
traffic here

1260
00:46:03,119 --> 00:46:05,520
all right and then the custom source

1261
00:46:05,520 --> 00:46:08,800
here what we're going to use is that uh

1262
00:46:08,800 --> 00:46:11,839
ip range that we use for our

1263
00:46:11,839 --> 00:46:16,960
subnet so if i go back here and i go to

1264
00:46:16,960 --> 00:46:19,680
there's a subnet here

1265
00:46:19,680 --> 00:46:22,079
let me check the

1266
00:46:22,079 --> 00:46:25,599
go back to instances

1267
00:46:26,240 --> 00:46:29,839
check the internal ip

1268
00:46:31,040 --> 00:46:33,359
click on this

1269
00:46:33,359 --> 00:46:36,640
yes okay so i may have transposed it in

1270
00:46:36,640 --> 00:46:38,480
the documentation but it will be either

1271
00:46:38,480 --> 00:46:43,520
in your case 100.0 or 0.100 um okay so

1272
00:46:43,520 --> 00:46:46,720
uh in my case uh 10.0.100

1273
00:46:46,720 --> 00:46:49,200
right so i want to do that here it's not

1274
00:46:49,200 --> 00:46:50,960
zero that 100.

1275
00:46:50,960 --> 00:46:54,000
zero at 24.

1276
00:46:55,200 --> 00:46:57,760
right or what was it

1277
00:46:57,760 --> 00:47:00,000
yep

1278
00:47:01,580 --> 00:47:04,480
[Music]

1279
00:47:04,480 --> 00:47:06,640
okay and then what we'll do there is for

1280
00:47:06,640 --> 00:47:09,280
the outbound rules we'll also specify a

1281
00:47:09,280 --> 00:47:12,800
rule there but we're going to do is

1282
00:47:12,800 --> 00:47:16,000
and roll whoops

1283
00:47:17,359 --> 00:47:19,040
actually hold on

1284
00:47:19,040 --> 00:47:22,359
and make sure

1285
00:47:25,920 --> 00:47:27,680
oh you know what okay let me let me get

1286
00:47:27,680 --> 00:47:29,680
out of this i'm sorry i'm probably

1287
00:47:29,680 --> 00:47:32,000
confusing people um

1288
00:47:32,000 --> 00:47:33,520
i'm just gonna review and launch this

1289
00:47:33,520 --> 00:47:35,440
instance oops with the default security

1290
00:47:35,440 --> 00:47:37,359
ending group or the default security

1291
00:47:37,359 --> 00:47:39,119
group

1292
00:47:39,119 --> 00:47:41,520
and then we'll go back to the instances

1293
00:47:41,520 --> 00:47:42,960
dashboard here

1294
00:47:42,960 --> 00:47:46,160
so if we go back here

1295
00:47:47,359 --> 00:47:48,720
do it oh i didn't actually want to see

1296
00:47:48,720 --> 00:47:50,800
it since i'm sorry

1297
00:47:50,800 --> 00:47:52,720
okay i'm going to choose the same keep

1298
00:47:52,720 --> 00:47:54,319
here here

1299
00:47:54,319 --> 00:47:55,839
under choose an existing key pair i'm

1300
00:47:55,839 --> 00:47:58,960
going to choose the security and demo cv

1301
00:47:58,960 --> 00:48:02,520
the launch instances

1302
00:48:06,000 --> 00:48:08,000
okay and if we flip back over to our

1303
00:48:08,000 --> 00:48:10,000
instances we should then see that

1304
00:48:10,000 --> 00:48:11,119
running

1305
00:48:11,119 --> 00:48:14,240
okay so now what we're gonna do is under

1306
00:48:14,240 --> 00:48:16,800
the ec2 security groups

1307
00:48:16,800 --> 00:48:18,880
we're gonna create that security group

1308
00:48:18,880 --> 00:48:22,800
for security onion

1309
00:48:22,800 --> 00:48:24,319
smithing

1310
00:48:24,319 --> 00:48:25,839
group right

1311
00:48:25,839 --> 00:48:28,960
okay we're gonna add a rule for all

1312
00:48:28,960 --> 00:48:31,520
traffic here

1313
00:48:31,520 --> 00:48:35,520
then we're going to use

1314
00:48:35,520 --> 00:48:37,440
sorry that 10 dot

1315
00:48:37,440 --> 00:48:40,480
i'll just do the 10 dot

1316
00:48:40,480 --> 00:48:43,359
here just to be good

1317
00:48:43,680 --> 00:48:45,520
you would do the corresponding subnet

1318
00:48:45,520 --> 00:48:47,119
here

1319
00:48:47,119 --> 00:48:50,240
all right so all traffic here

1320
00:48:50,240 --> 00:48:54,160
i'm sorry that's not not 24.

1321
00:48:54,720 --> 00:48:57,598
yeah let's do that

1322
00:49:01,200 --> 00:49:04,079
it's all right cool all right

1323
00:49:04,079 --> 00:49:05,599
so we'll do that there and then we'll

1324
00:49:05,599 --> 00:49:07,839
just click uh create security group

1325
00:49:07,839 --> 00:49:09,280
right here so this is allowing all

1326
00:49:09,280 --> 00:49:11,599
traffic essentially to go across

1327
00:49:11,599 --> 00:49:14,480
uh you know these internal um internal

1328
00:49:14,480 --> 00:49:15,760
traffic you would

1329
00:49:15,760 --> 00:49:17,280
you would tighten this down a little bit

1330
00:49:17,280 --> 00:49:19,040
in your environment obviously

1331
00:49:19,040 --> 00:49:20,640
if you were to go do this in a

1332
00:49:20,640 --> 00:49:22,319
traditional case

1333
00:49:22,319 --> 00:49:24,240
but whoops need to specify the

1334
00:49:24,240 --> 00:49:25,599
description

1335
00:49:25,599 --> 00:49:30,000
security onion sniffing right here

1336
00:49:30,000 --> 00:49:33,040
create that security group

1337
00:49:34,000 --> 00:49:36,319
all right and now what we'll do is we're

1338
00:49:36,319 --> 00:49:38,079
going to

1339
00:49:38,079 --> 00:49:40,400
select the security in instance right

1340
00:49:40,400 --> 00:49:41,520
here

1341
00:49:41,520 --> 00:49:43,599
so we go back to instances

1342
00:49:43,599 --> 00:49:46,240
and we look at the security onion

1343
00:49:46,240 --> 00:49:48,879
instance here

1344
00:49:49,599 --> 00:49:52,960
we get a networking we'll see these two

1345
00:49:52,960 --> 00:49:55,839
network interfaces right here

1346
00:49:55,839 --> 00:49:58,800
and where is

1347
00:49:58,800 --> 00:50:00,000
trying to see where it says like east

1348
00:50:00,000 --> 00:50:00,960
one and

1349
00:50:00,960 --> 00:50:02,720
see if i can bring this up a little bit

1350
00:50:02,720 --> 00:50:05,200
it's a little easier to view uh

1351
00:50:05,200 --> 00:50:06,720
so right now we see the primary network

1352
00:50:06,720 --> 00:50:08,559
interface and then we see the secondary

1353
00:50:08,559 --> 00:50:10,319
interface we want to select that

1354
00:50:10,319 --> 00:50:13,920
secondary interface and then we'll

1355
00:50:13,920 --> 00:50:16,720
take that interface and we will change

1356
00:50:16,720 --> 00:50:19,440
the security group on that

1357
00:50:19,440 --> 00:50:21,440
so we'll change that to the security and

1358
00:50:21,440 --> 00:50:22,880
sniffing group

1359
00:50:22,880 --> 00:50:24,720
because that's what we want it to be

1360
00:50:24,720 --> 00:50:26,000
able to do we want to be able to get

1361
00:50:26,000 --> 00:50:27,599
traffic from the other

1362
00:50:27,599 --> 00:50:28,559
uh

1363
00:50:28,559 --> 00:50:30,720
the i'm sorry the other note

1364
00:50:30,720 --> 00:50:32,079
right the linux instance that we

1365
00:50:32,079 --> 00:50:33,359
launched there

1366
00:50:33,359 --> 00:50:35,839
okay so we'll close out of that

1367
00:50:35,839 --> 00:50:38,240
and we'll just do this right here

1368
00:50:38,240 --> 00:50:40,000
and we'll go back we'll view the

1369
00:50:40,000 --> 00:50:41,760
instances it's trying to consolidate

1370
00:50:41,760 --> 00:50:44,400
tabs here

1371
00:50:44,720 --> 00:50:45,920
all right so

1372
00:50:45,920 --> 00:50:48,160
now we've got both instances running um

1373
00:50:48,160 --> 00:50:50,160
we've associated the security union

1374
00:50:50,160 --> 00:50:52,160
sniffing interface to the sniffing group

1375
00:50:52,160 --> 00:50:54,400
and we need to do the same thing with

1376
00:50:54,400 --> 00:50:56,640
the interface for

1377
00:50:56,640 --> 00:50:59,280
uh for the other instance right so

1378
00:50:59,280 --> 00:51:02,680
click on that

1379
00:51:09,760 --> 00:51:12,480
let's see all right

1380
00:51:12,480 --> 00:51:14,400
and we'll click let's see all right so

1381
00:51:14,400 --> 00:51:18,000
we did the one for each one

1382
00:51:18,079 --> 00:51:20,160
oh i'm sorry let me go back to the the

1383
00:51:20,160 --> 00:51:23,520
mirror session okay so okay so so far

1384
00:51:23,520 --> 00:51:25,920
what we've done is we've created these

1385
00:51:25,920 --> 00:51:27,599
two instances

1386
00:51:27,599 --> 00:51:28,400
this

1387
00:51:28,400 --> 00:51:30,720
linux instance here i'm sorry there's a

1388
00:51:30,720 --> 00:51:33,040
linux instance here and this security

1389
00:51:33,040 --> 00:51:34,400
instance right here

1390
00:51:34,400 --> 00:51:36,720
and we have this two uh you know those

1391
00:51:36,720 --> 00:51:38,720
interfaces the one with the security in

1392
00:51:38,720 --> 00:51:42,079
an instance in that uh sniffing group

1393
00:51:42,079 --> 00:51:45,359
and then we also have uh from the the t3

1394
00:51:45,359 --> 00:51:48,480
micro in the regular group here so we

1395
00:51:48,480 --> 00:51:49,680
want to be able to access that from the

1396
00:51:49,680 --> 00:51:50,800
internet

1397
00:51:50,800 --> 00:51:52,640
all right and so all the security groups

1398
00:51:52,640 --> 00:51:54,319
and everything are good to go now we're

1399
00:51:54,319 --> 00:51:58,720
going to go configure the vpc mirroring

1400
00:52:01,680 --> 00:52:03,839
and let's check on that instance okay so

1401
00:52:03,839 --> 00:52:05,359
security engines still go on the install

1402
00:52:05,359 --> 00:52:06,400
there

1403
00:52:06,400 --> 00:52:09,760
and on the vpc uh dashboard under

1404
00:52:09,760 --> 00:52:11,440
traffic mirroring

1405
00:52:11,440 --> 00:52:12,880
what we're going to do is we're going to

1406
00:52:12,880 --> 00:52:15,680
go to create a traffic mirror filter

1407
00:52:15,680 --> 00:52:17,200
and actually have one created here

1408
00:52:17,200 --> 00:52:20,240
already but what we can go do is click

1409
00:52:20,240 --> 00:52:22,480
create traffic mirror filter

1410
00:52:22,480 --> 00:52:24,559
right and then we would specify in here

1411
00:52:24,559 --> 00:52:27,040
for all protocols so we would add an

1412
00:52:27,040 --> 00:52:28,559
inbound rule

1413
00:52:28,559 --> 00:52:30,720
and an outbound rule for all protocols

1414
00:52:30,720 --> 00:52:33,720
here

1415
00:52:35,359 --> 00:52:36,880
oh protocols

1416
00:52:36,880 --> 00:52:38,240
right

1417
00:52:38,240 --> 00:52:40,079
and then for the source and destination

1418
00:52:40,079 --> 00:52:43,079
cider

1419
00:52:55,200 --> 00:52:57,359
just like that and then you would create

1420
00:52:57,359 --> 00:52:58,800
that there

1421
00:52:58,800 --> 00:53:01,040
all right so because i already had that

1422
00:53:01,040 --> 00:53:03,119
here i can go and

1423
00:53:03,119 --> 00:53:06,160
oh that's not what i want

1424
00:53:06,319 --> 00:53:08,160
you gonna show me

1425
00:53:08,160 --> 00:53:10,000
i guess i can't do that all right well

1426
00:53:10,000 --> 00:53:13,200
so i've got that anyway in there so i'm

1427
00:53:13,200 --> 00:53:15,119
going to use that mirror filter

1428
00:53:15,119 --> 00:53:16,640
and then what we're going to do here is

1429
00:53:16,640 --> 00:53:18,640
we're going to create a mirror target

1430
00:53:18,640 --> 00:53:21,200
right and so for the mirror target

1431
00:53:21,200 --> 00:53:22,400
um we're going to create a traffic

1432
00:53:22,400 --> 00:53:24,319
mirror target here

1433
00:53:24,319 --> 00:53:26,960
and we're going to call it

1434
00:53:26,960 --> 00:53:29,760
security

1435
00:53:29,760 --> 00:53:33,839
let's see we call it mirror target

1436
00:53:34,160 --> 00:53:35,440
and you can add a description if you

1437
00:53:35,440 --> 00:53:37,359
want to you don't necessarily have to

1438
00:53:37,359 --> 00:53:39,359
i'm going to choose network interface

1439
00:53:39,359 --> 00:53:40,400
and then we're going to choose that

1440
00:53:40,400 --> 00:53:42,319
primary interface i'm sorry the

1441
00:53:42,319 --> 00:53:43,920
secondary interface of the security

1442
00:53:43,920 --> 00:53:45,280
engine instance and that's going to be

1443
00:53:45,280 --> 00:53:47,280
the only one here that is not a primary

1444
00:53:47,280 --> 00:53:49,119
network interface

1445
00:53:49,119 --> 00:53:51,359
so we'll select that there

1446
00:53:51,359 --> 00:53:54,799
all right and we'll click create

1447
00:53:55,040 --> 00:53:57,599
all right so security mirror target is

1448
00:53:57,599 --> 00:54:00,000
the one that we're going to use here

1449
00:54:00,000 --> 00:54:01,599
and in your case it would be sa demo

1450
00:54:01,599 --> 00:54:03,520
mirror target one that's uh i already

1451
00:54:03,520 --> 00:54:04,800
have created there but i just wanted to

1452
00:54:04,800 --> 00:54:06,800
go through the process here again

1453
00:54:06,800 --> 00:54:09,200
all right so we created that and now

1454
00:54:09,200 --> 00:54:10,960
what we're gonna do is create the mirror

1455
00:54:10,960 --> 00:54:12,720
session

1456
00:54:12,720 --> 00:54:14,640
and we'll click create traffic mirrors

1457
00:54:14,640 --> 00:54:17,279
session here

1458
00:54:19,040 --> 00:54:21,040
all right and i'm just gonna call it uh

1459
00:54:21,040 --> 00:54:23,040
you know you can call it essay demo

1460
00:54:23,040 --> 00:54:24,160
mirror session i'm going to call it

1461
00:54:24,160 --> 00:54:27,440
security in a mirror session

1462
00:54:27,520 --> 00:54:29,760
right and what we're going to do here is

1463
00:54:29,760 --> 00:54:31,839
we're going to do the mirror source is

1464
00:54:31,839 --> 00:54:33,280
going to be that

1465
00:54:33,280 --> 00:54:35,839
network interface of that

1466
00:54:35,839 --> 00:54:38,319
instance there that's uh linux instance

1467
00:54:38,319 --> 00:54:40,400
so if we go back

1468
00:54:40,400 --> 00:54:43,520
let's see if i can actually

1469
00:54:43,520 --> 00:54:46,880
go back to the instances here

1470
00:54:49,119 --> 00:54:50,839
go back and

1471
00:54:50,839 --> 00:54:53,920
look we see this t3 micro right here i'm

1472
00:54:53,920 --> 00:54:55,040
just going to label these to make these

1473
00:54:55,040 --> 00:54:56,319
little easier

1474
00:54:56,319 --> 00:54:58,799
clinics

1475
00:55:01,599 --> 00:55:04,160
and security

1476
00:55:04,160 --> 00:55:05,359
alright

1477
00:55:05,359 --> 00:55:07,599
so we can see if we click on this linux

1478
00:55:07,599 --> 00:55:10,400
instance here we can get the

1479
00:55:10,400 --> 00:55:12,960
the id for the network interface by

1480
00:55:12,960 --> 00:55:15,680
clicking networking and going down and

1481
00:55:15,680 --> 00:55:17,599
grabbing that right if we just want to

1482
00:55:17,599 --> 00:55:19,680
grab that and copy and paste that or

1483
00:55:19,680 --> 00:55:22,640
just make note of that one

1484
00:55:22,640 --> 00:55:25,359
now i'm just going to enter that here

1485
00:55:25,359 --> 00:55:26,799
just to make sure that i got the right

1486
00:55:26,799 --> 00:55:27,839
interface

1487
00:55:27,839 --> 00:55:29,200
and then we're going to point it to that

1488
00:55:29,200 --> 00:55:31,599
mirror target

1489
00:55:31,599 --> 00:55:33,359
okay so again that mirror source is

1490
00:55:33,359 --> 00:55:35,520
going to be that linux instances primary

1491
00:55:35,520 --> 00:55:36,319
uh

1492
00:55:36,319 --> 00:55:38,319
network card and the mirror target is

1493
00:55:38,319 --> 00:55:39,839
going to be that uh security and

1494
00:55:39,839 --> 00:55:41,359
sniffing interface

1495
00:55:41,359 --> 00:55:43,280
and we have to specify something here

1496
00:55:43,280 --> 00:55:45,200
for the session number you can just put

1497
00:55:45,200 --> 00:55:46,799
one for priority

1498
00:55:46,799 --> 00:55:48,160
um and then everything else you can

1499
00:55:48,160 --> 00:55:49,839
really just leave blank unless you wish

1500
00:55:49,839 --> 00:55:52,720
to uh to populate that

1501
00:55:52,720 --> 00:55:54,640
oops i'm sorry now you have to specify

1502
00:55:54,640 --> 00:55:56,640
the filter yeah so you actually have to

1503
00:55:56,640 --> 00:55:58,400
specify the mirror filter that's going

1504
00:55:58,400 --> 00:55:59,760
to be applied

1505
00:55:59,760 --> 00:56:03,559
to this session here

1506
00:56:04,160 --> 00:56:06,240
and create

1507
00:56:06,240 --> 00:56:07,839
all right so now we've got that mirror

1508
00:56:07,839 --> 00:56:09,280
session created we have the mirror

1509
00:56:09,280 --> 00:56:11,280
target that mirrored filter the mirror

1510
00:56:11,280 --> 00:56:14,160
source all inside of that mirror session

1511
00:56:14,160 --> 00:56:15,200
okay

1512
00:56:15,200 --> 00:56:18,000
and so what we'll do here

1513
00:56:18,000 --> 00:56:21,920
is just go through my notes here

1514
00:56:23,599 --> 00:56:26,160
all right

1515
00:56:27,040 --> 00:56:30,640
we created that now let's flip back over

1516
00:56:30,640 --> 00:56:32,720
to security engine it's verifying setup

1517
00:56:32,720 --> 00:56:33,920
right now

1518
00:56:33,920 --> 00:56:35,920
but while it's doing that

1519
00:56:35,920 --> 00:56:40,240
what we can do is open a new tab

1520
00:56:40,240 --> 00:56:42,240
and i'm just going to go to my host

1521
00:56:42,240 --> 00:56:46,319
where i am sshing uh to all these boxes

1522
00:56:46,319 --> 00:56:49,759
and i'm gonna log on there real quick

1523
00:56:50,160 --> 00:56:52,480
okay

1524
00:56:53,280 --> 00:56:54,960
all right so

1525
00:56:54,960 --> 00:56:57,359
here i am i'm just gonna do this i'm

1526
00:56:57,359 --> 00:57:01,040
going to prep my command to log into the

1527
00:57:01,040 --> 00:57:02,720
linux box and again we're going to

1528
00:57:02,720 --> 00:57:06,400
specify our key file our pin file here

1529
00:57:06,400 --> 00:57:07,920
and this will be a little bit different

1530
00:57:07,920 --> 00:57:09,920
if you're using windows or um or

1531
00:57:09,920 --> 00:57:11,200
something else you may not be able to

1532
00:57:11,200 --> 00:57:12,640
use a pinball directly you may have to

1533
00:57:12,640 --> 00:57:14,319
convert it with putty

1534
00:57:14,319 --> 00:57:15,200
and

1535
00:57:15,200 --> 00:57:16,960
if you did look at those prerequisites

1536
00:57:16,960 --> 00:57:19,359
the instructions were there to

1537
00:57:19,359 --> 00:57:22,160
to do that as well

1538
00:57:22,160 --> 00:57:24,880
okay so i'm going to grab the public ip

1539
00:57:24,880 --> 00:57:28,000
address and go back to the

1540
00:57:28,000 --> 00:57:32,160
instances and the ec2 dashboard

1541
00:57:36,559 --> 00:57:39,280
i'm going to grab the ip for the linux

1542
00:57:39,280 --> 00:57:40,720
instance

1543
00:57:40,720 --> 00:57:43,040
and did i not choose i guess i did not

1544
00:57:43,040 --> 00:57:44,640
choose auto assign

1545
00:57:44,640 --> 00:57:45,920
because

1546
00:57:45,920 --> 00:57:48,319
i am down okay so i'm going to allocate

1547
00:57:48,319 --> 00:57:51,119
an ip address for this

1548
00:57:51,119 --> 00:57:52,480
so let me go

1549
00:57:52,480 --> 00:57:54,000
and do that but if you had chosen

1550
00:57:54,000 --> 00:57:55,599
according to the directions follow the

1551
00:57:55,599 --> 00:57:57,119
directions like you should like i did

1552
00:57:57,119 --> 00:57:57,920
not

1553
00:57:57,920 --> 00:57:59,599
then you should not need to do this but

1554
00:57:59,599 --> 00:58:02,240
um i'll go to the network interface for

1555
00:58:02,240 --> 00:58:04,959
this instance

1556
00:58:06,079 --> 00:58:10,720
and okay a ip

1557
00:58:14,240 --> 00:58:16,079
d d

1558
00:58:16,079 --> 00:58:17,200
d d

1559
00:58:17,200 --> 00:58:18,880
68

1560
00:58:18,880 --> 00:58:21,200
all right are we in business or what

1561
00:58:21,200 --> 00:58:22,480
okay

1562
00:58:22,480 --> 00:58:24,880
now i will take this

1563
00:58:24,880 --> 00:58:27,119
and we'll move on so over here again at

1564
00:58:27,119 --> 00:58:28,400
the terminal

1565
00:58:28,400 --> 00:58:30,799
uh the amazon linux

1566
00:58:30,799 --> 00:58:34,559
the default user is ec2 user for uh for

1567
00:58:34,559 --> 00:58:35,839
linux

1568
00:58:35,839 --> 00:58:38,000
i'm sorry for amazon linux and uh we'll

1569
00:58:38,000 --> 00:58:41,280
paste in that ip address or host there

1570
00:58:41,280 --> 00:58:43,119
and just select yes

1571
00:58:43,119 --> 00:58:45,520
we logged in and uh we're in our amazon

1572
00:58:45,520 --> 00:58:48,079
linux now an instance now

1573
00:58:48,079 --> 00:58:49,200
um

1574
00:58:49,200 --> 00:58:51,839
and let's flip back

1575
00:58:51,839 --> 00:58:54,079
just prepping that up okay so our

1576
00:58:54,079 --> 00:58:56,240
standalone install finished uh hopefully

1577
00:58:56,240 --> 00:58:58,000
yours finished hey

1578
00:58:58,000 --> 00:58:58,880
yeah

1579
00:58:58,880 --> 00:59:01,200
uh would you be able to uh increase the

1580
00:59:01,200 --> 00:59:03,760
font size on the terminal oh yeah yeah

1581
00:59:03,760 --> 00:59:05,040
sorry i did that on the other one i just

1582
00:59:05,040 --> 00:59:06,640
forgot to do that on this one yeah

1583
00:59:06,640 --> 00:59:08,880
absolutely perfect um

1584
00:59:08,880 --> 00:59:10,640
let me do that

1585
00:59:10,640 --> 00:59:12,559
sorry i know it's probably tiny

1586
00:59:12,559 --> 00:59:14,480
um

1587
00:59:14,480 --> 00:59:16,400
there we go

1588
00:59:16,400 --> 00:59:19,720
is that better

1589
00:59:20,480 --> 00:59:21,680
yep thanks

1590
00:59:21,680 --> 00:59:22,400
cool

1591
00:59:22,400 --> 00:59:24,079
all right so

1592
00:59:24,079 --> 00:59:26,000
finish that

1593
00:59:26,000 --> 00:59:29,440
i'm gonna let that reboot for a minute

1594
00:59:29,440 --> 00:59:32,799
okay but we're gonna go back over here

1595
00:59:32,799 --> 00:59:34,400
and so

1596
00:59:34,400 --> 00:59:37,280
this this tool that i mentioned before

1597
00:59:37,280 --> 00:59:41,440
uh let's see tm needs so

1598
00:59:42,720 --> 00:59:44,319
we go over here

1599
00:59:44,319 --> 00:59:47,599
to the github repo it's github.com and

1600
00:59:47,599 --> 00:59:49,359
the link again is in the

1601
00:59:49,359 --> 00:59:50,960
slides and i guess you don't have the

1602
00:59:50,960 --> 00:59:53,520
slides but if you go to github.com and

1603
00:59:53,520 --> 00:59:58,400
slash zero xtf slash testmynids.org

1604
00:59:58,400 --> 01:00:00,319
uh you can get that there and i will

1605
01:00:00,319 --> 01:00:02,480
paste that actually into

1606
01:00:02,480 --> 01:00:05,760
uh into here

1607
01:00:06,480 --> 01:00:08,559
make it easier um

1608
01:00:08,559 --> 01:00:09,440
okay

1609
01:00:09,440 --> 01:00:11,599
so that's there and what we'll do here

1610
01:00:11,599 --> 01:00:14,240
is copy this command and i'll actually

1611
01:00:14,240 --> 01:00:16,319
paste this in here as well

1612
01:00:16,319 --> 01:00:19,839
well that didn't oil me

1613
01:00:20,079 --> 01:00:22,079
there all right so you can copy and

1614
01:00:22,079 --> 01:00:25,200
paste that into the

1615
01:00:26,839 --> 01:00:29,920
terminal all right and so we got tm nids

1616
01:00:29,920 --> 01:00:31,760
right so um

1617
01:00:31,760 --> 01:00:33,440
we've got that ready to roll i'm not

1618
01:00:33,440 --> 01:00:35,520
going to fire it off just yet i want to

1619
01:00:35,520 --> 01:00:37,119
wait for that security in an instance to

1620
01:00:37,119 --> 01:00:39,200
come up but um you know once that's up

1621
01:00:39,200 --> 01:00:40,640
and running we can fire that off and

1622
01:00:40,640 --> 01:00:42,400
then test and make sure that z consumer

1623
01:00:42,400 --> 01:00:44,319
kata and everything else are are looking

1624
01:00:44,319 --> 01:00:47,520
good for security ending

1625
01:00:48,960 --> 01:00:51,440
let's see

1626
01:00:51,599 --> 01:00:54,720
ssh back in oh yeah so you may get this

1627
01:00:54,720 --> 01:00:57,040
too because it changes the host key

1628
01:00:57,040 --> 01:00:59,359
uh so you might just have to run the uh

1629
01:00:59,359 --> 01:01:01,760
ssh keygen dash f

1630
01:01:01,760 --> 01:01:03,920
to remove that from the known host file

1631
01:01:03,920 --> 01:01:06,079
so it's not associated with that anymore

1632
01:01:06,079 --> 01:01:08,799
and then just go back and ssh into it

1633
01:01:08,799 --> 01:01:11,839
after doing that

1634
01:01:12,000 --> 01:01:15,359
so ssh into there

1635
01:01:15,440 --> 01:01:19,520
and just run an essay status

1636
01:01:20,400 --> 01:01:22,160
and because it's going to take a minute

1637
01:01:22,160 --> 01:01:24,480
here for everything to start up uh so

1638
01:01:24,480 --> 01:01:26,480
i'll give that a minute there

1639
01:01:26,480 --> 01:01:29,040
but um i will i guess i'll pause for

1640
01:01:29,040 --> 01:01:30,240
just a moment

1641
01:01:30,240 --> 01:01:33,680
and see if there are any questions c629

1642
01:01:33,680 --> 01:01:35,359
not any questions as of 10 minutes ago

1643
01:01:35,359 --> 01:01:36,799
approximately

1644
01:01:36,799 --> 01:01:38,960
but i will give the chance now

1645
01:01:38,960 --> 01:01:41,440
okay just for a minute or two as we wait

1646
01:01:41,440 --> 01:01:44,880
and i'll get a sip of water

1647
01:01:49,520 --> 01:01:52,759
all right

1648
01:01:54,000 --> 01:01:56,160
and again um so this is all orchestrated

1649
01:01:56,160 --> 01:01:57,839
by salt and what it's doing it's

1650
01:01:57,839 --> 01:01:59,599
applying different states and starting

1651
01:01:59,599 --> 01:02:01,440
these services right now

1652
01:02:01,440 --> 01:02:03,200
and uh we'll see that status change so

1653
01:02:03,200 --> 01:02:04,240
they come up

1654
01:02:04,240 --> 01:02:06,079
again you can see some of them changing

1655
01:02:06,079 --> 01:02:08,880
already hitting okay

1656
01:02:08,880 --> 01:02:14,000
and once we have uh let's see nginx and

1657
01:02:14,000 --> 01:02:16,240
sock up we'll try to hit that web

1658
01:02:16,240 --> 01:02:18,640
interface um so i guess in the time

1659
01:02:18,640 --> 01:02:21,440
being while we wait uh if you don't have

1660
01:02:21,440 --> 01:02:24,559
dns resolution or anything like that

1661
01:02:24,559 --> 01:02:27,359
you will want to add the ip address of

1662
01:02:27,359 --> 01:02:28,480
the

1663
01:02:28,480 --> 01:02:29,680
quizzes again

1664
01:02:29,680 --> 01:02:31,920
uh the ip address of the security and

1665
01:02:31,920 --> 01:02:32,960
inbox

1666
01:02:32,960 --> 01:02:34,720
um

1667
01:02:34,720 --> 01:02:36,880
let me exit out of here to that host

1668
01:02:36,880 --> 01:02:39,599
file as security i mean aws and i'll

1669
01:02:39,599 --> 01:02:42,319
give an example here

1670
01:02:42,319 --> 01:02:44,558
okay

1671
01:02:46,079 --> 01:02:49,079
so

1672
01:02:57,280 --> 01:03:00,160
i'm just editing my localhost file

1673
01:03:00,160 --> 01:03:01,680
and i've got quite a few in here as you

1674
01:03:01,680 --> 01:03:03,760
can see because i'm crazy and

1675
01:03:03,760 --> 01:03:05,200
unorganized

1676
01:03:05,200 --> 01:03:07,359
so

1677
01:03:08,000 --> 01:03:09,440
put that there in our host file so that

1678
01:03:09,440 --> 01:03:10,960
we can resolve that

1679
01:03:10,960 --> 01:03:12,880
and uh so everything will be kosher

1680
01:03:12,880 --> 01:03:14,640
whenever we go to try to access the web

1681
01:03:14,640 --> 01:03:15,760
interface

1682
01:03:15,760 --> 01:03:18,079
and we've already run so allow or so

1683
01:03:18,079 --> 01:03:20,160
dash allow remember to allow that web

1684
01:03:20,160 --> 01:03:22,240
access from the host base firewall

1685
01:03:22,240 --> 01:03:24,240
perspective

1686
01:03:24,240 --> 01:03:26,880
and we should be allowed from the amazon

1687
01:03:26,880 --> 01:03:30,079
firewall perspective based on the you

1688
01:03:30,079 --> 01:03:31,760
know ip address that you've given and

1689
01:03:31,760 --> 01:03:34,240
the range that i've given

1690
01:03:34,240 --> 01:03:36,559
so let me ssh back in

1691
01:03:36,559 --> 01:03:38,480
see where those services are again it

1692
01:03:38,480 --> 01:03:40,799
can take a few minutes uh looks like

1693
01:03:40,799 --> 01:03:42,319
sock is up

1694
01:03:42,319 --> 01:03:44,960
so what we'll do here is actually pivot

1695
01:03:44,960 --> 01:03:48,400
back over to the web

1696
01:03:50,000 --> 01:03:51,280
and

1697
01:03:51,280 --> 01:03:54,160
three onion

1698
01:03:54,799 --> 01:03:57,119
all right that looks good it's returning

1699
01:03:57,119 --> 01:03:59,200
so it means the firewall firebrick's

1700
01:03:59,200 --> 01:04:00,240
working

1701
01:04:00,240 --> 01:04:02,319
and we'll click advanced and uh you may

1702
01:04:02,319 --> 01:04:04,240
need to do some mumbo jumbo here with

1703
01:04:04,240 --> 01:04:06,000
your browser depending

1704
01:04:06,000 --> 01:04:08,000
uh i'll just log in with those creds

1705
01:04:08,000 --> 01:04:10,240
that i specify during setup

1706
01:04:10,240 --> 01:04:12,880
in my case that was user at test.local

1707
01:04:12,880 --> 01:04:14,640
and if you've specified the same you can

1708
01:04:14,640 --> 01:04:17,759
use those credentials here

1709
01:04:17,920 --> 01:04:20,000
and now we're logged in to the security

1710
01:04:20,000 --> 01:04:22,160
engine interface uh this is called sock

1711
01:04:22,160 --> 01:04:23,920
and it's the main interface of security

1712
01:04:23,920 --> 01:04:25,680
and in security

1713
01:04:25,680 --> 01:04:26,960
or uh you know really the next

1714
01:04:26,960 --> 01:04:28,640
generation of security

1715
01:04:28,640 --> 01:04:30,160
and you can see here we've got a lot of

1716
01:04:30,160 --> 01:04:31,839
different things here on the side we've

1717
01:04:31,839 --> 01:04:34,079
got things like alerts a place where we

1718
01:04:34,079 --> 01:04:36,400
can hunt a place where we can pull pcapp

1719
01:04:36,400 --> 01:04:38,480
uh we see an alert on grid

1720
01:04:38,480 --> 01:04:42,559
uh this is uh probably this is a known

1721
01:04:42,559 --> 01:04:43,520
uh

1722
01:04:43,520 --> 01:04:46,079
none little bugger at the moment but uh

1723
01:04:46,079 --> 01:04:48,160
so we can just ignore that for now but

1724
01:04:48,160 --> 01:04:49,119
um

1725
01:04:49,119 --> 01:04:50,559
this downloads right here is where we

1726
01:04:50,559 --> 01:04:51,920
can download

1727
01:04:51,920 --> 01:04:54,960
uh any clients things like that um but

1728
01:04:54,960 --> 01:04:57,760
for the time being i'm just going to uh

1729
01:04:57,760 --> 01:04:59,520
you know just kind of go back to this

1730
01:04:59,520 --> 01:05:00,799
overview and then we're going to pivot

1731
01:05:00,799 --> 01:05:02,079
back over

1732
01:05:02,079 --> 01:05:04,160
uh and and try to generate some traffic

1733
01:05:04,160 --> 01:05:05,920
with tm heads and see if that's

1734
01:05:05,920 --> 01:05:09,520
witnessed by security in it

1735
01:05:11,599 --> 01:05:14,720
so let's make sure that everything is up

1736
01:05:14,720 --> 01:05:16,559
we're getting scragglers no scragglers

1737
01:05:16,559 --> 01:05:18,480
all right everything looks good we're

1738
01:05:18,480 --> 01:05:19,520
all green

1739
01:05:19,520 --> 01:05:21,200
ready for a go

1740
01:05:21,200 --> 01:05:24,319
so we're going to run test eleven we're

1741
01:05:24,319 --> 01:05:26,880
gonna cause some chaos and i mean not

1742
01:05:26,880 --> 01:05:28,720
really any causing the chaos but

1743
01:05:28,720 --> 01:05:30,240
uh this is what it's called and what it

1744
01:05:30,240 --> 01:05:32,240
does is essentially runs all of these

1745
01:05:32,240 --> 01:05:34,799
tests that you see here right so one

1746
01:05:34,799 --> 01:05:37,760
through 10. we'll do that

1747
01:05:37,760 --> 01:05:39,680
and actually before we do that from a

1748
01:05:39,680 --> 01:05:43,200
network perspective let's see this um

1749
01:05:43,200 --> 01:05:46,480
so let's perform a tcp dump

1750
01:05:46,480 --> 01:05:48,799
on the interface so in our case it

1751
01:05:48,799 --> 01:05:50,640
should be east one for the sniffing

1752
01:05:50,640 --> 01:05:52,319
interface

1753
01:05:52,319 --> 01:05:55,039
and we want to specify the ip address

1754
01:05:55,039 --> 01:05:57,200
the local ip address

1755
01:05:57,200 --> 01:06:00,799
our internal ip so for the ipa here

1756
01:06:00,799 --> 01:06:02,880
it's going to grab the ip address of

1757
01:06:02,880 --> 01:06:04,799
this instance right here

1758
01:06:04,799 --> 01:06:07,680
it's linux instance

1759
01:06:10,559 --> 01:06:12,640
and

1760
01:06:12,640 --> 01:06:15,520
paste that in here

1761
01:06:16,240 --> 01:06:17,680
we're going to type oh so you can speed

1762
01:06:17,680 --> 01:06:20,319
down this all right

1763
01:06:22,160 --> 01:06:25,200
what am i doing oh host johnny okay yeah

1764
01:06:25,200 --> 01:06:28,000
you need host i'm being silly um so you

1765
01:06:28,000 --> 01:06:29,839
need to host there

1766
01:06:29,839 --> 01:06:32,960
and then if we go back here run the tmid

1767
01:06:32,960 --> 01:06:35,359
command

1768
01:06:35,359 --> 01:06:38,640
back see if we see anything

1769
01:06:38,640 --> 01:06:39,680
it's going to give you a little bit

1770
01:06:39,680 --> 01:06:42,240
there and it may not necessarily

1771
01:06:42,240 --> 01:06:44,079
be that we're looking for it may have

1772
01:06:44,079 --> 01:06:47,599
been the external ip but let's see if we

1773
01:06:47,599 --> 01:06:50,960
go into smd and if we configured

1774
01:06:50,960 --> 01:06:54,000
the traffic mirroring correctly

1775
01:06:54,000 --> 01:06:56,559
and

1776
01:06:56,720 --> 01:07:01,839
i don't think i have let's see

1777
01:07:03,520 --> 01:07:06,319
let me go back

1778
01:07:08,559 --> 01:07:11,119
all right so now if you've configured it

1779
01:07:11,119 --> 01:07:12,480
correctly you should be seeing that

1780
01:07:12,480 --> 01:07:14,400
traffic but uh what we're gonna do here

1781
01:07:14,400 --> 01:07:18,160
is double check our mirror config

1782
01:07:18,160 --> 01:07:18,960
okay

1783
01:07:18,960 --> 01:07:21,280
so if we go back here we're gonna look

1784
01:07:21,280 --> 01:07:24,079
at this uh interface here

1785
01:07:24,079 --> 01:07:28,200
the where is it

1786
01:07:33,200 --> 01:07:35,119
all right and let's go to the linux

1787
01:07:35,119 --> 01:07:37,680
interface and make sure

1788
01:07:37,680 --> 01:07:40,319
that it's part of that security group

1789
01:07:40,319 --> 01:07:44,400
i'm going to go to the instances

1790
01:07:52,799 --> 01:07:55,799
networking

1791
01:07:56,319 --> 01:07:59,359
network interfaces

1792
01:08:00,400 --> 01:08:02,240
okay and we're going to change security

1793
01:08:02,240 --> 01:08:04,000
groups

1794
01:08:04,000 --> 01:08:06,319
okay so it looks like

1795
01:08:06,319 --> 01:08:08,880
maybe we did not add

1796
01:08:08,880 --> 01:08:10,799
this see the correct security group

1797
01:08:10,799 --> 01:08:11,920
after all

1798
01:08:11,920 --> 01:08:15,200
so let me do that

1799
01:08:18,640 --> 01:08:23,000
didn't i just change it hold on

1800
01:08:25,600 --> 01:08:28,238
oh i need to remove it okay

1801
01:08:28,238 --> 01:08:29,359
that's cute

1802
01:08:29,359 --> 01:08:31,198
i can't read

1803
01:08:31,198 --> 01:08:32,080
okay

1804
01:08:32,080 --> 01:08:35,040
so now if we go back

1805
01:08:35,040 --> 01:08:36,719
and this is uh you will run into this

1806
01:08:36,719 --> 01:08:38,319
more than likely that you did not add it

1807
01:08:38,319 --> 01:08:40,080
to the correct security group and things

1808
01:08:40,080 --> 01:08:41,600
of that nature so

1809
01:08:41,600 --> 01:08:44,719
um to confirm we will look at those

1810
01:08:44,719 --> 01:08:46,560
interfaces again

1811
01:08:46,560 --> 01:08:48,640
and i'm actually going to look here

1812
01:08:48,640 --> 01:08:50,319
because a little bit easier

1813
01:08:50,319 --> 01:08:53,839
and yes we confirm that that's in there

1814
01:08:53,839 --> 01:08:56,158
okay

1815
01:08:57,679 --> 01:09:00,399
so now

1816
01:09:02,158 --> 01:09:05,120
we go back here

1817
01:09:05,439 --> 01:09:07,279
and we'll do a little stuff there there

1818
01:09:07,279 --> 01:09:08,880
we go

1819
01:09:08,880 --> 01:09:11,120
sweat from the brow good

1820
01:09:11,120 --> 01:09:13,439
all right so we now see some traffic all

1821
01:09:13,439 --> 01:09:15,279
right it's coming across it's being it's

1822
01:09:15,279 --> 01:09:17,439
hitting that security and an interface

1823
01:09:17,439 --> 01:09:19,600
uh that sniffing interface um being

1824
01:09:19,600 --> 01:09:21,520
mirrored from that other amazon linux

1825
01:09:21,520 --> 01:09:22,560
instance

1826
01:09:22,560 --> 01:09:24,319
and you know when you start doing this

1827
01:09:24,319 --> 01:09:26,319
at scale um you can see how something

1828
01:09:26,319 --> 01:09:28,560
like auto mirror would be very helpful

1829
01:09:28,560 --> 01:09:30,080
so you're not going in here and manually

1830
01:09:30,080 --> 01:09:31,839
adding stuff and then making mistakes

1831
01:09:31,839 --> 01:09:34,399
potentially and that kind of thing so um

1832
01:09:34,399 --> 01:09:35,759
i would definitely take a look at auto

1833
01:09:35,759 --> 01:09:37,920
mirror if you're using aws so make sure

1834
01:09:37,920 --> 01:09:39,279
you check that out

1835
01:09:39,279 --> 01:09:41,359
and you will also see some cool stuff at

1836
01:09:41,359 --> 01:09:42,719
the near the end of the presentation

1837
01:09:42,719 --> 01:09:45,759
that you can leverage with that

1838
01:09:45,759 --> 01:09:46,719
okay

1839
01:09:46,719 --> 01:09:50,719
so now let me get out of here

1840
01:09:50,719 --> 01:09:51,920
all right look at that all right we've

1841
01:09:51,920 --> 01:09:54,320
got some more logs okay much better

1842
01:09:54,320 --> 01:09:56,159
we've got connection records we've got

1843
01:09:56,159 --> 01:09:59,280
files going across dns http

1844
01:09:59,280 --> 01:10:01,280
lots and lots of good stuff here

1845
01:10:01,280 --> 01:10:03,600
and if we go over it may take a minute

1846
01:10:03,600 --> 01:10:05,440
or two before we're able to view it in

1847
01:10:05,440 --> 01:10:07,280
security

1848
01:10:07,280 --> 01:10:09,920
but now if we go to alerts we can

1849
01:10:09,920 --> 01:10:11,840
actually see alerts uh you know

1850
01:10:11,840 --> 01:10:13,520
generated from that network traffic in

1851
01:10:13,520 --> 01:10:15,600
mcleod from that vxlan encapsulated

1852
01:10:15,600 --> 01:10:17,120
traffic we're able to appear through

1853
01:10:17,120 --> 01:10:19,280
that tunnel and see that traffic you

1854
01:10:19,280 --> 01:10:21,600
know see what's going on

1855
01:10:21,600 --> 01:10:23,360
so it's really super powerful to be able

1856
01:10:23,360 --> 01:10:24,400
to do that

1857
01:10:24,400 --> 01:10:27,120
if we want to drill down we can drill

1858
01:10:27,120 --> 01:10:29,600
down into a single event

1859
01:10:29,600 --> 01:10:32,159
and look at some other details i'm not

1860
01:10:32,159 --> 01:10:34,159
going to go into that a whole lot

1861
01:10:34,159 --> 01:10:35,520
but you know just really trying to give

1862
01:10:35,520 --> 01:10:37,760
you an idea of how you might be able to

1863
01:10:37,760 --> 01:10:40,400
to leverage this right so if i go from

1864
01:10:40,400 --> 01:10:42,880
this alert and i pivot on the community

1865
01:10:42,880 --> 01:10:46,320
id which is basically a hash of you know

1866
01:10:46,320 --> 01:10:47,760
the network

1867
01:10:47,760 --> 01:10:49,679
source destination ip

1868
01:10:49,679 --> 01:10:51,760
uh port uh you know source port

1869
01:10:51,760 --> 01:10:53,840
destination port and protocol

1870
01:10:53,840 --> 01:10:55,280
uh then

1871
01:10:55,280 --> 01:10:58,640
if i actually hunt for this value

1872
01:10:58,640 --> 01:11:00,159
you can do this in security and it's

1873
01:11:00,159 --> 01:11:01,600
going to give me all of the records that

1874
01:11:01,600 --> 01:11:03,600
were associated with this so i can see

1875
01:11:03,600 --> 01:11:05,360
there was a circle alert that we just

1876
01:11:05,360 --> 01:11:06,239
saw

1877
01:11:06,239 --> 01:11:08,080
i can see there was some z traffic a

1878
01:11:08,080 --> 01:11:10,239
connection record and then also some z

1879
01:11:10,239 --> 01:11:12,960
http traffic and you know if i wanted to

1880
01:11:12,960 --> 01:11:14,640
pivot the p cap uh maybe i'll look at

1881
01:11:14,640 --> 01:11:16,640
the con record

1882
01:11:16,640 --> 01:11:18,480
and see

1883
01:11:18,480 --> 01:11:20,080
you know i can review those various

1884
01:11:20,080 --> 01:11:21,280
details

1885
01:11:21,280 --> 01:11:25,199
then if i want to go look at the pcap

1886
01:11:25,199 --> 01:11:27,120
i can go pull that right there and this

1887
01:11:27,120 --> 01:11:29,600
is in the cloud right that's amazing

1888
01:11:29,600 --> 01:11:31,199
we're we're looking at this traffic

1889
01:11:31,199 --> 01:11:32,880
we're performing that vxlan

1890
01:11:32,880 --> 01:11:34,719
encapsulation and behind the scenes

1891
01:11:34,719 --> 01:11:36,640
we're having to do uh kind of some crazy

1892
01:11:36,640 --> 01:11:39,760
stuff uh tying back zeke uh parent and

1893
01:11:39,760 --> 01:11:41,360
child connection relationships and the

1894
01:11:41,360 --> 01:11:43,440
tunnels and everything but it's awesome

1895
01:11:43,440 --> 01:11:44,880
that you're able to see

1896
01:11:44,880 --> 01:11:46,640
the full transcript you know in the

1897
01:11:46,640 --> 01:11:49,440
cloud with this kind of traffic in aws

1898
01:11:49,440 --> 01:11:50,960
so it really shows you

1899
01:11:50,960 --> 01:11:52,719
um you know the power that you can have

1900
01:11:52,719 --> 01:11:54,560
in your investigations and how you can

1901
01:11:54,560 --> 01:11:56,320
leverage these tools

1902
01:11:56,320 --> 01:11:57,360
right

1903
01:11:57,360 --> 01:12:00,159
so um again that's that's just one of

1904
01:12:00,159 --> 01:12:02,159
the ways that you can monitor that

1905
01:12:02,159 --> 01:12:03,760
traffic and perform that traffic

1906
01:12:03,760 --> 01:12:06,880
mirroring with that linux host

1907
01:12:06,880 --> 01:12:10,880
okay so uh if we go back let's see let

1908
01:12:10,880 --> 01:12:14,560
me move back to the slides here

1909
01:12:16,640 --> 01:12:18,560
and i'll break for just a minute we're

1910
01:12:18,560 --> 01:12:22,000
going to go over to cloud logs here i'm

1911
01:12:22,000 --> 01:12:24,480
going to play that from the start oh no

1912
01:12:24,480 --> 01:12:26,400
wrong one

1913
01:12:26,400 --> 01:12:29,199
allow logs

1914
01:12:31,520 --> 01:12:34,960
all right play from current slide

1915
01:12:34,960 --> 01:12:38,480
all right and grab a sip of water

1916
01:12:40,719 --> 01:12:42,320
and actually let me get back and check

1917
01:12:42,320 --> 01:12:43,760
um

1918
01:12:43,760 --> 01:12:47,600
there any questions no questions okay

1919
01:12:47,600 --> 01:12:49,679
uh why don't i keep doing that

1920
01:12:49,679 --> 01:12:52,560
misery is my companion

1921
01:12:52,560 --> 01:12:55,679
okay cloud logs

1922
01:12:55,679 --> 01:12:56,719
okay

1923
01:12:56,719 --> 01:12:58,640
so let's talk about cloud logs and one

1924
01:12:58,640 --> 01:13:00,640
of those being azure data

1925
01:13:00,640 --> 01:13:03,360
um i mentioned azure briefly and you

1926
01:13:03,360 --> 01:13:06,159
know kind of the difficulty without a

1927
01:13:06,159 --> 01:13:09,920
kind of a licensed um partnered solution

1928
01:13:09,920 --> 01:13:12,320
in azure for that network uh you know

1929
01:13:12,320 --> 01:13:14,000
recording and

1930
01:13:14,000 --> 01:13:16,159
um network metadata and things like that

1931
01:13:16,159 --> 01:13:18,239
but there are lots and lots of logs in

1932
01:13:18,239 --> 01:13:19,840
azure that you can tie in and that you

1933
01:13:19,840 --> 01:13:23,120
can bring into things like event hubs

1934
01:13:23,120 --> 01:13:25,440
and then pull in via security engine

1935
01:13:25,440 --> 01:13:26,880
that's pulled in using those file b

1936
01:13:26,880 --> 01:13:28,080
modules

1937
01:13:28,080 --> 01:13:30,560
now there's activity logs in azure

1938
01:13:30,560 --> 01:13:32,400
tracking the activity of

1939
01:13:32,400 --> 01:13:35,040
um action by management personnel uh

1940
01:13:35,040 --> 01:13:36,880
along the control plane

1941
01:13:36,880 --> 01:13:38,480
we can bring that in right that's a

1942
01:13:38,480 --> 01:13:40,800
another layer to our context uh

1943
01:13:40,800 --> 01:13:42,560
diagnostic or auditing logs for the

1944
01:13:42,560 --> 01:13:45,280
platform um if there's some reason you

1945
01:13:45,280 --> 01:13:48,159
know i've used security in the past many

1946
01:13:48,159 --> 01:13:50,080
times for not just threat hunting or

1947
01:13:50,080 --> 01:13:52,719
intrusion detection but actually you

1948
01:13:52,719 --> 01:13:54,640
know helping to resolve issues in the

1949
01:13:54,640 --> 01:13:56,560
network or with applications and that

1950
01:13:56,560 --> 01:13:58,400
can help do that as well

1951
01:13:58,400 --> 01:14:01,120
or clue you in onto into something uh

1952
01:14:01,120 --> 01:14:02,719
that an attacker might be doing and

1953
01:14:02,719 --> 01:14:04,560
cause those kind of issues

1954
01:14:04,560 --> 01:14:06,400
um so we can bring those in as well as

1955
01:14:06,400 --> 01:14:07,679
sign in logs so if they're

1956
01:14:07,679 --> 01:14:09,840
authenticating signing in

1957
01:14:09,840 --> 01:14:12,560
and then also azure id audit logs uh

1958
01:14:12,560 --> 01:14:14,080
things from the ad perspective that we

1959
01:14:14,080 --> 01:14:16,239
can bring in we can bring all of that in

1960
01:14:16,239 --> 01:14:18,080
uh using that file beat module in

1961
01:14:18,080 --> 01:14:20,320
security

1962
01:14:20,320 --> 01:14:21,679
and i'm not going to go through this a

1963
01:14:21,679 --> 01:14:23,520
whole lot but here's really a summary

1964
01:14:23,520 --> 01:14:25,040
and some links if you want to go off and

1965
01:14:25,040 --> 01:14:26,560
do that on your own

1966
01:14:26,560 --> 01:14:28,960
you can absolutely do that um but again

1967
01:14:28,960 --> 01:14:30,400
it would be using that azure file beat

1968
01:14:30,400 --> 01:14:32,239
module once you have everything set up

1969
01:14:32,239 --> 01:14:34,560
you can pull all of that data in have

1970
01:14:34,560 --> 01:14:36,719
that alongside your on-prem data or your

1971
01:14:36,719 --> 01:14:39,280
other cloud data if you have azure and

1972
01:14:39,280 --> 01:14:40,800
you know

1973
01:14:40,800 --> 01:14:43,199
gcp and aws you can have them all in

1974
01:14:43,199 --> 01:14:45,920
there in the same single pane of glass

1975
01:14:45,920 --> 01:14:47,600
so it's really they also be able to do

1976
01:14:47,600 --> 01:14:49,760
that

1977
01:14:51,280 --> 01:14:53,440
and same thing with gcp data

1978
01:14:53,440 --> 01:14:56,080
audit logs right those can be published

1979
01:14:56,080 --> 01:14:58,800
to uh pub sub topic uh same thing with

1980
01:14:58,800 --> 01:15:01,600
vpc flow logs right looking at not

1981
01:15:01,600 --> 01:15:03,840
necessarily packet capture but

1982
01:15:03,840 --> 01:15:05,840
uh you know just some flow data some

1983
01:15:05,840 --> 01:15:08,080
kind of back and forth connections z

1984
01:15:08,080 --> 01:15:11,360
connection style records that you can

1985
01:15:11,360 --> 01:15:14,000
look at from the authoritative source

1986
01:15:14,000 --> 01:15:16,239
right from the vpc

1987
01:15:16,239 --> 01:15:17,679
itself and

1988
01:15:17,679 --> 01:15:19,440
you can pull that in using the fopi

1989
01:15:19,440 --> 01:15:21,679
modules

1990
01:15:21,679 --> 01:15:23,520
and here's some here's some

1991
01:15:23,520 --> 01:15:24,880
configuration here i'm not going to go

1992
01:15:24,880 --> 01:15:26,320
over that a little bit but if you want

1993
01:15:26,320 --> 01:15:27,679
to review the slides later which i'll

1994
01:15:27,679 --> 01:15:28,960
have posted

1995
01:15:28,960 --> 01:15:30,640
you can absolutely do that and set that

1996
01:15:30,640 --> 01:15:34,159
up with 5v modules as well

1997
01:15:34,159 --> 01:15:36,880
similarly with aws in addition to all of

1998
01:15:36,880 --> 01:15:39,199
the great traffic mirroring you can pull

1999
01:15:39,199 --> 01:15:41,360
in stuff like cloudtrail logs cloudwatch

2000
01:15:41,360 --> 01:15:42,640
ec2

2001
01:15:42,640 --> 01:15:44,000
vpc flow

2002
01:15:44,000 --> 01:15:47,199
all of it into s3 and sqs pull that in

2003
01:15:47,199 --> 01:15:49,280
using those 5v modules that are tied in

2004
01:15:49,280 --> 01:15:53,520
with security and the elastic sac

2005
01:15:53,520 --> 01:15:56,719
let's check in time

2006
01:15:56,719 --> 01:15:57,220
okay

2007
01:15:57,220 --> 01:16:00,239
[Music]

2008
01:16:00,239 --> 01:16:01,600
and so

2009
01:16:01,600 --> 01:16:03,120
here's some example cloudtrail

2010
01:16:03,120 --> 01:16:05,360
configuration um

2011
01:16:05,360 --> 01:16:07,040
let's see what was

2012
01:16:07,040 --> 01:16:09,040
sorry uh so yeah you can configure

2013
01:16:09,040 --> 01:16:12,320
cloudtrail to send obviously to s3 and

2014
01:16:12,320 --> 01:16:13,120
then

2015
01:16:13,120 --> 01:16:15,120
um you know from there s3 would notify

2016
01:16:15,120 --> 01:16:17,600
sqs and then you can kind of use sqs as

2017
01:16:17,600 --> 01:16:20,239
a pointer to get that data from um from

2018
01:16:20,239 --> 01:16:22,320
s3 right and then we can sift through

2019
01:16:22,320 --> 01:16:25,120
all of that data and hunt and uh maybe

2020
01:16:25,120 --> 01:16:26,640
if we want to alert on certain data from

2021
01:16:26,640 --> 01:16:28,960
there we can absolutely do that

2022
01:16:28,960 --> 01:16:30,640
and we have some documentation there

2023
01:16:30,640 --> 01:16:31,760
down at the bottom for you to walk

2024
01:16:31,760 --> 01:16:32,800
through if you want to walk through that

2025
01:16:32,800 --> 01:16:35,840
as well

2026
01:16:36,800 --> 01:16:39,360
all right so now i've got another lab

2027
01:16:39,360 --> 01:16:40,560
here

2028
01:16:40,560 --> 01:16:42,080
what we're going to do is we're going to

2029
01:16:42,080 --> 01:16:43,920
stay in aws

2030
01:16:43,920 --> 01:16:46,640
we're going to configure

2031
01:16:46,640 --> 01:16:49,360
the cloudtrail logs and see if we can

2032
01:16:49,360 --> 01:16:51,120
pull those in the security engine and

2033
01:16:51,120 --> 01:16:53,760
get some additional context uh so again

2034
01:16:53,760 --> 01:16:55,920
this is just another way to besides the

2035
01:16:55,920 --> 01:16:57,679
traffic mirroring if you're not able to

2036
01:16:57,679 --> 01:16:59,440
see the traffic

2037
01:16:59,440 --> 01:17:02,239
or you simply want more telemetry right

2038
01:17:02,239 --> 01:17:04,560
you want more contextual data

2039
01:17:04,560 --> 01:17:07,280
we can pull in those cloudshare logs and

2040
01:17:07,280 --> 01:17:09,760
uh and go from there we can see stuff

2041
01:17:09,760 --> 01:17:11,679
you know if there have been keys deleted

2042
01:17:11,679 --> 01:17:13,280
or users added

2043
01:17:13,280 --> 01:17:14,960
management functions things like that we

2044
01:17:14,960 --> 01:17:17,120
can see that through cloudtrail

2045
01:17:17,120 --> 01:17:18,800
all right and so we'll pivot over to

2046
01:17:18,800 --> 01:17:19,920
there

2047
01:17:19,920 --> 01:17:23,199
and what we'll do is

2048
01:17:25,040 --> 01:17:27,120
i'm going to paste this let me double

2049
01:17:27,120 --> 01:17:31,400
check the requirements doc here

2050
01:17:31,760 --> 01:17:34,800
okay so get to the cloud log ingestion

2051
01:17:34,800 --> 01:17:36,320
now

2052
01:17:36,320 --> 01:17:38,400
that will be

2053
01:17:38,400 --> 01:17:41,120
let me make sure that's the one i have

2054
01:17:41,120 --> 01:17:44,320
yeah okay so on that cloud log ingestion

2055
01:17:44,320 --> 01:17:47,760
doc um what we're doing is let me make

2056
01:17:47,760 --> 01:17:50,560
another millions tab

2057
01:17:50,560 --> 01:17:52,400
we're going to create an im user and

2058
01:17:52,400 --> 01:17:54,159
that user is going to be used instead of

2059
01:17:54,159 --> 01:17:57,120
a root user to delegate access

2060
01:17:57,120 --> 01:17:59,840
to those cloudtrail logs in sqs

2061
01:17:59,840 --> 01:18:00,640
okay

2062
01:18:00,640 --> 01:18:02,239
so we're going to create that user we're

2063
01:18:02,239 --> 01:18:04,960
going to go over here to

2064
01:18:04,960 --> 01:18:06,640
iam

2065
01:18:06,640 --> 01:18:10,920
and search iam over here

2066
01:18:12,560 --> 01:18:14,320
all right and you can see we have users

2067
01:18:14,320 --> 01:18:16,559
here

2068
01:18:18,000 --> 01:18:20,080
all right and so what i'm going to do

2069
01:18:20,080 --> 01:18:21,679
here is i'm just going to i've got a

2070
01:18:21,679 --> 01:18:24,400
couple users here i'm going to say cloud

2071
01:18:24,400 --> 01:18:26,880
trail well actually let me just click

2072
01:18:26,880 --> 01:18:29,440
add users first i'm done all right there

2073
01:18:29,440 --> 01:18:31,760
we go all right so add users

2074
01:18:31,760 --> 01:18:34,560
cloud trail

2075
01:18:35,360 --> 01:18:37,760
demo user right you can specify your

2076
01:18:37,760 --> 01:18:39,600
name whatever whatever you wish to add

2077
01:18:39,600 --> 01:18:41,360
there i'm going to click enable

2078
01:18:41,360 --> 01:18:42,400
programming

2079
01:18:42,400 --> 01:18:44,560
programmatic access right this will

2080
01:18:44,560 --> 01:18:47,040
allow us to programmatically access uh

2081
01:18:47,040 --> 01:18:48,719
stuff instead of having to log into the

2082
01:18:48,719 --> 01:18:49,920
console

2083
01:18:49,920 --> 01:18:52,239
i'm going to specify permissions here

2084
01:18:52,239 --> 01:18:55,199
i'm going to search for that aws lambda

2085
01:18:55,199 --> 01:18:58,000
execution role

2086
01:19:01,520 --> 01:19:04,400
oh okay i'm sorry create group and then

2087
01:19:04,400 --> 01:19:06,159
search for it

2088
01:19:06,159 --> 01:19:08,320
i'm going to add that keep that selected

2089
01:19:08,320 --> 01:19:10,640
for this group

2090
01:19:10,640 --> 01:19:12,880
and then i'm going to

2091
01:19:12,880 --> 01:19:14,400
add

2092
01:19:14,400 --> 01:19:17,840
amazon s3 read only access and again

2093
01:19:17,840 --> 01:19:19,679
uh these are in that dock so be sure you

2094
01:19:19,679 --> 01:19:23,760
refer to those oops uh available

2095
01:19:23,760 --> 01:19:24,800
okay so

2096
01:19:24,800 --> 01:19:25,760
cloud

2097
01:19:25,760 --> 01:19:27,440
trail

2098
01:19:27,440 --> 01:19:29,040
users is going to be the name of my

2099
01:19:29,040 --> 01:19:30,400
group

2100
01:19:30,400 --> 01:19:32,640
create group

2101
01:19:32,640 --> 01:19:34,960
all right

2102
01:19:34,960 --> 01:19:36,560
okay so we can see that group is now

2103
01:19:36,560 --> 01:19:39,199
created we can choose if he wants uh and

2104
01:19:39,199 --> 01:19:40,800
selected for the user that we're

2105
01:19:40,800 --> 01:19:42,800
creating

2106
01:19:42,800 --> 01:19:44,640
let's click that in tags if we want i

2107
01:19:44,640 --> 01:19:46,320
don't really care

2108
01:19:46,320 --> 01:19:47,920
um let's click create user for the

2109
01:19:47,920 --> 01:19:51,760
cloudtrail demo user

2110
01:19:51,760 --> 01:19:53,280
then it's going to give me an access key

2111
01:19:53,280 --> 01:19:55,679
and a secret access key and

2112
01:19:55,679 --> 01:19:58,080
i'm going to ask obviously that

2113
01:19:58,080 --> 01:20:00,239
you guys this will only be used for this

2114
01:20:00,239 --> 01:20:02,560
demo presentation but um

2115
01:20:02,560 --> 01:20:05,840
you know be sure to uh use your access

2116
01:20:05,840 --> 01:20:08,480
key into your access key only

2117
01:20:08,480 --> 01:20:10,080
and uh

2118
01:20:10,080 --> 01:20:12,639
and we should be good from there

2119
01:20:12,639 --> 01:20:13,520
right

2120
01:20:13,520 --> 01:20:14,400
so

2121
01:20:14,400 --> 01:20:15,840
we're gonna keep those i'm gonna save

2122
01:20:15,840 --> 01:20:18,000
this offer i'm just gonna keep this page

2123
01:20:18,000 --> 01:20:19,600
pinned right here

2124
01:20:19,600 --> 01:20:20,960
so i'll come back to that in just a

2125
01:20:20,960 --> 01:20:22,400
moment

2126
01:20:22,400 --> 01:20:23,440
all right and then what we're going to

2127
01:20:23,440 --> 01:20:25,920
do we're going to follow along

2128
01:20:25,920 --> 01:20:30,560
with this document right here

2129
01:20:30,560 --> 01:20:32,480
so we haven't walked through here

2130
01:20:32,480 --> 01:20:34,080
on aws cloud

2131
01:20:34,080 --> 01:20:37,280
cloud trail logs and uh cai and shang

2132
01:20:37,280 --> 01:20:38,960
and elastic had a really great uh

2133
01:20:38,960 --> 01:20:40,560
document that kind of tied in with this

2134
01:20:40,560 --> 01:20:42,719
that you can review right there

2135
01:20:42,719 --> 01:20:44,000
um but

2136
01:20:44,000 --> 01:20:45,440
since we have our iam user and

2137
01:20:45,440 --> 01:20:46,800
everything set up

2138
01:20:46,800 --> 01:20:50,239
we're gonna go create our queue

2139
01:20:52,080 --> 01:20:53,199
all right

2140
01:20:53,199 --> 01:20:55,920
so we're gonna go to amazon sqsqs and

2141
01:20:55,920 --> 01:20:58,080
create a queue

2142
01:20:58,080 --> 01:21:02,000
so let's just search for sqs

2143
01:21:03,760 --> 01:21:07,840
and we're going to create q

2144
01:21:08,080 --> 01:21:10,159
and now we'll have a prompt we're going

2145
01:21:10,159 --> 01:21:12,400
to keep the standard queue

2146
01:21:12,400 --> 01:21:15,280
and we're going to name it uh ccd demo

2147
01:21:15,280 --> 01:21:17,519
cube

2148
01:21:18,159 --> 01:21:19,760
put our name on

2149
01:21:19,760 --> 01:21:21,520
and then i'm going to change this policy

2150
01:21:21,520 --> 01:21:23,040
here because there are some things that

2151
01:21:23,040 --> 01:21:24,960
need to happen for s3 to be able to

2152
01:21:24,960 --> 01:21:27,120
publish to this queue

2153
01:21:27,120 --> 01:21:30,320
okay and that's where i'll go over here

2154
01:21:30,320 --> 01:21:32,000
if i go to

2155
01:21:32,000 --> 01:21:34,800
filebeat page

2156
01:21:35,600 --> 01:21:38,719
and i copy

2157
01:21:40,320 --> 01:21:42,320
this right here so i'm going to copy

2158
01:21:42,320 --> 01:21:43,600
this and i'm going to edit it here in

2159
01:21:43,600 --> 01:21:47,280
just a moment so copy

2160
01:21:48,480 --> 01:21:50,320
and just paste that in there and what i

2161
01:21:50,320 --> 01:21:51,920
want to do i'm going to take my account

2162
01:21:51,920 --> 01:21:55,120
id and i'm going to put it in there

2163
01:21:55,679 --> 01:21:58,639
and my region is going to be us east 2

2164
01:21:58,639 --> 01:22:00,880
so you would enter yours accordingly

2165
01:22:00,880 --> 01:22:04,239
enter my account id here

2166
01:22:05,920 --> 01:22:07,520
and the queue name here which is going

2167
01:22:07,520 --> 01:22:10,000
to be cbgmoq

2168
01:22:10,000 --> 01:22:12,400
let me just grab that count id

2169
01:22:12,400 --> 01:22:13,440
yep

2170
01:22:13,440 --> 01:22:15,280
okay again these are all for demo

2171
01:22:15,280 --> 01:22:17,520
purposes

2172
01:22:17,520 --> 01:22:19,280
okay so that's kind of how i'm going to

2173
01:22:19,280 --> 01:22:21,120
choose to do that so basically anything

2174
01:22:21,120 --> 01:22:22,960
from the account right now at this

2175
01:22:22,960 --> 01:22:25,520
moment can send to this queue uh you may

2176
01:22:25,520 --> 01:22:27,040
choose to change this in your

2177
01:22:27,040 --> 01:22:28,800
organization um you know back down the

2178
01:22:28,800 --> 01:22:31,199
hatches a bit make it a little more um

2179
01:22:31,199 --> 01:22:32,719
you know

2180
01:22:32,719 --> 01:22:34,960
tight-knit uh so

2181
01:22:34,960 --> 01:22:37,199
i'm gonna save that and click create

2182
01:22:37,199 --> 01:22:38,560
queue

2183
01:22:38,560 --> 01:22:40,719
and then go back here all right so after

2184
01:22:40,719 --> 01:22:42,639
it's created you'll be redirected to the

2185
01:22:42,639 --> 01:22:44,639
summary screen

2186
01:22:44,639 --> 01:22:46,560
and we'll want to save the url value

2187
01:22:46,560 --> 01:22:48,560
here we'll use that for our filebeat

2188
01:22:48,560 --> 01:22:50,880
configuration on security

2189
01:22:50,880 --> 01:22:53,600
but first we're going to create a trail

2190
01:22:53,600 --> 01:22:55,520
so make sure you save that right here

2191
01:22:55,520 --> 01:22:57,679
this url

2192
01:22:57,679 --> 01:22:58,639
all right i'm just going to keep the

2193
01:22:58,639 --> 01:23:01,520
page up and pinned

2194
01:23:03,040 --> 01:23:04,000
okay

2195
01:23:04,000 --> 01:23:06,159
so if we go back we are going to create

2196
01:23:06,159 --> 01:23:08,159
that trail using the aws cloud trail

2197
01:23:08,159 --> 01:23:09,520
console

2198
01:23:09,520 --> 01:23:11,360
so we'll go

2199
01:23:11,360 --> 01:23:14,880
search for cloud trip

2200
01:23:17,040 --> 01:23:18,480
whoops what am i doing i'm not even in

2201
01:23:18,480 --> 01:23:20,719
the console i'm being silly

2202
01:23:20,719 --> 01:23:21,760
all right

2203
01:23:21,760 --> 01:23:22,960
we'll go to

2204
01:23:22,960 --> 01:23:25,440
you can search for this up above

2205
01:23:25,440 --> 01:23:27,679
um

2206
01:23:27,679 --> 01:23:29,040
let me go ahead and copy this off

2207
01:23:29,040 --> 01:23:31,679
actually this url

2208
01:23:31,679 --> 01:23:34,400
copy that over here to the side just for

2209
01:23:34,400 --> 01:23:35,760
fun dudes

2210
01:23:35,760 --> 01:23:37,040
and

2211
01:23:37,040 --> 01:23:40,639
we'll search for cloudtrail here

2212
01:23:41,840 --> 01:23:45,280
all right now let's create a trail

2213
01:23:45,280 --> 01:23:46,880
right and we can name it whatever we

2214
01:23:46,880 --> 01:23:49,360
want you know for my purposes i'm just

2215
01:23:49,360 --> 01:23:52,159
going to say tv demo trail

2216
01:23:52,159 --> 01:23:54,159
it's going to create an associated

2217
01:23:54,159 --> 01:23:56,239
bucket and folder with that and you can

2218
01:23:56,239 --> 01:23:58,159
see what the name is going to be here

2219
01:23:58,159 --> 01:24:02,519
so just click create trail

2220
01:24:03,600 --> 01:24:04,880
and then

2221
01:24:04,880 --> 01:24:07,760
so if we go here and click that

2222
01:24:07,760 --> 01:24:09,760
we can edit the trail if we want so i'll

2223
01:24:09,760 --> 01:24:12,639
just click edit to see the details

2224
01:24:12,639 --> 01:24:13,760
and

2225
01:24:13,760 --> 01:24:15,520
we can see that

2226
01:24:15,520 --> 01:24:16,719
you know

2227
01:24:16,719 --> 01:24:18,480
stuff right here we're using this s3

2228
01:24:18,480 --> 01:24:19,440
bucket

2229
01:24:19,440 --> 01:24:21,360
right

2230
01:24:21,360 --> 01:24:23,199
just some general details

2231
01:24:23,199 --> 01:24:26,320
and management events

2232
01:24:26,880 --> 01:24:28,560
we click on this

2233
01:24:28,560 --> 01:24:31,120
we'll see that uh we are auditing uh

2234
01:24:31,120 --> 01:24:33,360
read and write api activity events and

2235
01:24:33,360 --> 01:24:34,800
management events so we'll just save

2236
01:24:34,800 --> 01:24:36,159
that so we should be good to go from

2237
01:24:36,159 --> 01:24:37,920
that perspective

2238
01:24:37,920 --> 01:24:38,800
right

2239
01:24:38,800 --> 01:24:41,920
and then if we go back

2240
01:24:42,800 --> 01:24:44,400
just depending on you know how we

2241
01:24:44,400 --> 01:24:46,560
created it it may ask us uh certain

2242
01:24:46,560 --> 01:24:49,040
things right so we just created that one

2243
01:24:49,040 --> 01:24:51,040
and we're not using a key with that one

2244
01:24:51,040 --> 01:24:51,840
but

2245
01:24:51,840 --> 01:24:55,040
uh we'll just take the defaults there

2246
01:24:55,040 --> 01:24:57,520
and so we see the status now if we go

2247
01:24:57,520 --> 01:24:58,480
back

2248
01:24:58,480 --> 01:24:59,760
not here

2249
01:24:59,760 --> 01:25:01,600
but to here

2250
01:25:01,600 --> 01:25:04,639
we should see the status as logging

2251
01:25:04,639 --> 01:25:07,040
which we do

2252
01:25:07,040 --> 01:25:08,480
okay

2253
01:25:08,480 --> 01:25:10,000
all right and now what we'll need to do

2254
01:25:10,000 --> 01:25:11,600
is we'll need to ensure bucket is

2255
01:25:11,600 --> 01:25:13,440
configured correctly right so we're

2256
01:25:13,440 --> 01:25:17,280
going to go to s3 now

2257
01:25:21,520 --> 01:25:22,480
okay

2258
01:25:22,480 --> 01:25:24,480
and we're going to select the bucket

2259
01:25:24,480 --> 01:25:26,400
right and we're actually uh

2260
01:25:26,400 --> 01:25:28,159
what we'll do here is we'll just click

2261
01:25:28,159 --> 01:25:29,360
on the bucket

2262
01:25:29,360 --> 01:25:32,639
and then we'll select properties

2263
01:25:32,639 --> 01:25:34,719
and we'll drill down

2264
01:25:34,719 --> 01:25:36,480
we want to know

2265
01:25:36,480 --> 01:25:39,520
if the bucket is accessed and

2266
01:25:39,520 --> 01:25:42,080
we'll do here is just choose our bucket

2267
01:25:42,080 --> 01:25:44,639
we'll publish to our own bucket

2268
01:25:44,639 --> 01:25:46,719
that's accessed you could alternatively

2269
01:25:46,719 --> 01:25:48,719
publish to a different bucket for uh you

2270
01:25:48,719 --> 01:25:50,000
know server access and that kind of

2271
01:25:50,000 --> 01:25:52,159
thing

2272
01:25:52,480 --> 01:25:54,960
all right and then uh what we'll do here

2273
01:25:54,960 --> 01:25:56,000
is

2274
01:25:56,000 --> 01:25:59,520
we'll add an event notification

2275
01:25:59,520 --> 01:26:02,000
let's say cv event

2276
01:26:02,000 --> 01:26:04,239
notification here

2277
01:26:04,239 --> 01:26:05,679
okay

2278
01:26:05,679 --> 01:26:07,600
and we can add additional details if we

2279
01:26:07,600 --> 01:26:10,080
want but you don't necessarily have to

2280
01:26:10,080 --> 01:26:12,400
and we'll select all object create

2281
01:26:12,400 --> 01:26:14,320
events here

2282
01:26:14,320 --> 01:26:16,639
okay so anytime basically

2283
01:26:16,639 --> 01:26:19,520
something is added to that s3 bucket

2284
01:26:19,520 --> 01:26:23,000
will be notified

2285
01:26:26,639 --> 01:26:28,000
okay

2286
01:26:28,000 --> 01:26:29,840
and now this is important we're going to

2287
01:26:29,840 --> 01:26:31,280
choose our destination here and our

2288
01:26:31,280 --> 01:26:33,760
destination is going to be an sqs queue

2289
01:26:33,760 --> 01:26:37,199
the one that we set up so we'll we don't

2290
01:26:37,199 --> 01:26:38,719
have to enter the arn we can actually

2291
01:26:38,719 --> 01:26:40,239
choose

2292
01:26:40,239 --> 01:26:42,719
choose cv demo queue here

2293
01:26:42,719 --> 01:26:44,560
we'll save changes and assuming the

2294
01:26:44,560 --> 01:26:46,239
permissions were correct and everything

2295
01:26:46,239 --> 01:26:47,520
and it can actually

2296
01:26:47,520 --> 01:26:49,600
send to the queue it will actually fail

2297
01:26:49,600 --> 01:26:52,880
at run time here um if it's if it cannot

2298
01:26:52,880 --> 01:26:53,760
um

2299
01:26:53,760 --> 01:26:55,920
at least i believe it will so

2300
01:26:55,920 --> 01:26:57,040
um

2301
01:26:57,040 --> 01:26:59,120
we'll go from there as far as um you

2302
01:26:59,120 --> 01:27:00,080
know

2303
01:27:00,080 --> 01:27:01,840
hopefully for now it should be working

2304
01:27:01,840 --> 01:27:02,800
well

2305
01:27:02,800 --> 01:27:04,719
or working as intended

2306
01:27:04,719 --> 01:27:06,159
right so

2307
01:27:06,159 --> 01:27:07,760
now what we'll do since we've configured

2308
01:27:07,760 --> 01:27:09,760
that is we'll configure the security

2309
01:27:09,760 --> 01:27:11,600
image configuration

2310
01:27:11,600 --> 01:27:13,840
right so we'll take that access key and

2311
01:27:13,840 --> 01:27:15,600
then access key id

2312
01:27:15,600 --> 01:27:18,159
and some other details like the queue

2313
01:27:18,159 --> 01:27:19,840
the queue name

2314
01:27:19,840 --> 01:27:21,440
and we'll go over here

2315
01:27:21,440 --> 01:27:23,520
to security engine

2316
01:27:23,520 --> 01:27:24,560
and

2317
01:27:24,560 --> 01:27:26,159
backup

2318
01:27:26,159 --> 01:27:30,000
you can opt so salt stack

2319
01:27:31,199 --> 01:27:34,719
oh you actually might need to

2320
01:27:34,719 --> 01:27:36,719
elevate so

2321
01:27:36,719 --> 01:27:38,800
so salt stack

2322
01:27:38,800 --> 01:27:40,880
and inside the local directory there

2323
01:27:40,880 --> 01:27:43,440
there is a pillar directory and this is

2324
01:27:43,440 --> 01:27:44,239
where

2325
01:27:44,239 --> 01:27:46,400
we house and salt configuration and

2326
01:27:46,400 --> 01:27:48,159
where you would uh configure certain

2327
01:27:48,159 --> 01:27:50,480
things in security in it

2328
01:27:50,480 --> 01:27:52,320
so i'm just going to

2329
01:27:52,320 --> 01:27:54,560
go into the minions directory this is

2330
01:27:54,560 --> 01:27:56,960
where uh configuration for a specific

2331
01:27:56,960 --> 01:27:59,280
node security in a node would live so

2332
01:27:59,280 --> 01:28:01,760
even the manager if you have a manager

2333
01:28:01,760 --> 01:28:05,520
node would have this configuration

2334
01:28:06,400 --> 01:28:08,159
and then i'm going to go down all the

2335
01:28:08,159 --> 01:28:09,520
way to the bottom

2336
01:28:09,520 --> 01:28:11,360
i'm going to paste in

2337
01:28:11,360 --> 01:28:14,480
some configuration here

2338
01:28:14,480 --> 01:28:17,040
and so

2339
01:28:17,760 --> 01:28:21,360
i'm just going to copy this right here

2340
01:28:21,440 --> 01:28:24,320
i'm going to paste that in there

2341
01:28:24,320 --> 01:28:25,600
and it's wrapping a little bit just

2342
01:28:25,600 --> 01:28:29,679
because of the fonts but rest assured

2343
01:28:29,679 --> 01:28:32,080
what we'll do here is

2344
01:28:32,080 --> 01:28:32,960
we'll

2345
01:28:32,960 --> 01:28:35,440
specify our account id and demo queue

2346
01:28:35,440 --> 01:28:37,678
here

2347
01:28:37,840 --> 01:28:40,400
and then our access key id and then our

2348
01:28:40,400 --> 01:28:43,360
access key here

2349
01:28:43,360 --> 01:28:44,800
okay so i'm just going to paste this in

2350
01:28:44,800 --> 01:28:48,400
first since i have those available

2351
01:28:48,960 --> 01:28:51,120
at least i have the url available i'm

2352
01:28:51,120 --> 01:28:52,159
sorry

2353
01:28:52,159 --> 01:28:55,519
i'll have to go back and get those

2354
01:28:55,760 --> 01:28:57,520
that url that you copied before you

2355
01:28:57,520 --> 01:29:01,360
would simply paste that into here

2356
01:29:02,239 --> 01:29:04,320
and then i will go and grab

2357
01:29:04,320 --> 01:29:08,199
the key and candy

2358
01:29:12,480 --> 01:29:13,520
okay

2359
01:29:13,520 --> 01:29:15,600
copy

2360
01:29:15,600 --> 01:29:19,440
i'll paste that key id here

2361
01:29:19,840 --> 01:29:21,679
all right

2362
01:29:21,679 --> 01:29:24,800
and i will

2363
01:29:24,800 --> 01:29:27,360
cappy

2364
01:29:35,280 --> 01:29:36,400
all right

2365
01:29:36,400 --> 01:29:38,880
save that all right so let's double

2366
01:29:38,880 --> 01:29:41,679
check let's go back to this dock here

2367
01:29:41,679 --> 01:29:44,080
okay so we added this uh we modified

2368
01:29:44,080 --> 01:29:45,520
that configuration

2369
01:29:45,520 --> 01:29:48,480
now we need to restart file b uh on the

2370
01:29:48,480 --> 01:29:50,480
node so

2371
01:29:50,480 --> 01:29:53,839
let's do that

2372
01:29:55,360 --> 01:29:57,920
so file be restart and depending on if

2373
01:29:57,920 --> 01:30:00,159
other commands are being run sometimes

2374
01:30:00,159 --> 01:30:02,560
it may take a few minutes to

2375
01:30:02,560 --> 01:30:05,520
to run this and for this to complete

2376
01:30:05,520 --> 01:30:08,320
so uh that went pretty well so far so uh

2377
01:30:08,320 --> 01:30:10,320
you know we're we're good there

2378
01:30:10,320 --> 01:30:12,000
um

2379
01:30:12,000 --> 01:30:14,400
now what we'll do here

2380
01:30:14,400 --> 01:30:17,360
is we'll just do an esso status which

2381
01:30:17,360 --> 01:30:18,880
everything looks good

2382
01:30:18,880 --> 01:30:21,600
okay everything's still running good

2383
01:30:21,600 --> 01:30:23,520
i'm actually gonna check from the data

2384
01:30:23,520 --> 01:30:24,800
perspective

2385
01:30:24,800 --> 01:30:26,080
um

2386
01:30:26,080 --> 01:30:28,400
and so

2387
01:30:28,400 --> 01:30:30,320
this is one command that you can run to

2388
01:30:30,320 --> 01:30:32,840
check and see what indexes are

2389
01:30:32,840 --> 01:30:35,040
actually in

2390
01:30:35,040 --> 01:30:37,520
um you know for inelastic search from

2391
01:30:37,520 --> 01:30:40,159
the command line

2392
01:30:40,159 --> 01:30:42,400
pasted that there into the

2393
01:30:42,400 --> 01:30:44,719
dock

2394
01:30:45,040 --> 01:30:46,400
all right so i see a whole bunch of

2395
01:30:46,400 --> 01:30:47,679
stuff it's kind of hard to read though

2396
01:30:47,679 --> 01:30:48,480
so

2397
01:30:48,480 --> 01:30:52,320
i can sort or i'm going to grab

2398
01:30:52,320 --> 01:30:54,080
this okay

2399
01:30:54,080 --> 01:30:56,639
cool so i see an aws

2400
01:30:56,639 --> 01:30:58,800
index was created

2401
01:30:58,800 --> 01:31:02,320
okay i don't see any documents just yet

2402
01:31:02,320 --> 01:31:06,239
but uh i do see that uh you know it was

2403
01:31:06,239 --> 01:31:07,920
started to pull that data in and it may

2404
01:31:07,920 --> 01:31:09,280
take a few minutes before we start

2405
01:31:09,280 --> 01:31:11,360
seeing anything we may have to perform

2406
01:31:11,360 --> 01:31:12,800
some activity

2407
01:31:12,800 --> 01:31:15,280
but actually see some there now so

2408
01:31:15,280 --> 01:31:17,360
let me actually back off

2409
01:31:17,360 --> 01:31:20,000
this font a little bit so be a little

2410
01:31:20,000 --> 01:31:22,719
bit easier to see

2411
01:31:23,280 --> 01:31:25,520
so this is actually the doc count here

2412
01:31:25,520 --> 01:31:27,280
the document counts

2413
01:31:27,280 --> 01:31:29,040
that you would have in that index so

2414
01:31:29,040 --> 01:31:30,400
that shows us that there are some

2415
01:31:30,400 --> 01:31:34,080
documents in that elastic search index

2416
01:31:34,080 --> 01:31:37,280
so then if we go over here

2417
01:31:37,280 --> 01:31:40,320
to something like hunt

2418
01:31:40,320 --> 01:31:43,120
research event dot module

2419
01:31:43,120 --> 01:31:45,600
aws

2420
01:31:45,600 --> 01:31:47,920
we should see some data okay cool

2421
01:31:47,920 --> 01:31:49,760
and then we can

2422
01:31:49,760 --> 01:31:52,880
also group similarly kind of like splunk

2423
01:31:52,880 --> 01:31:54,719
uh we can group by the event action

2424
01:31:54,719 --> 01:31:55,920
there

2425
01:31:55,920 --> 01:31:59,040
and then we can see all of these actions

2426
01:31:59,040 --> 01:32:00,960
that are occurring

2427
01:32:00,960 --> 01:32:02,800
right and we can slice and dice that all

2428
01:32:02,800 --> 01:32:05,040
day right so if we wanted to add

2429
01:32:05,040 --> 01:32:06,800
additional fields to that

2430
01:32:06,800 --> 01:32:09,360
we can go up and put that in the uh in

2431
01:32:09,360 --> 01:32:10,639
the group i

2432
01:32:10,639 --> 01:32:12,480
up there in the search bar

2433
01:32:12,480 --> 01:32:13,440
or

2434
01:32:13,440 --> 01:32:18,480
uh if i want to go through and let's see

2435
01:32:19,280 --> 01:32:21,679
you know filter on something else i can

2436
01:32:21,679 --> 01:32:23,760
you know i can filter on the key

2437
01:32:23,760 --> 01:32:24,719
whatever

2438
01:32:24,719 --> 01:32:26,639
i can include that well that's actually

2439
01:32:26,639 --> 01:32:29,280
a filter i'm sorry that's not a group by

2440
01:32:29,280 --> 01:32:30,560
um so that would actually be an

2441
01:32:30,560 --> 01:32:32,400
inclusive filter

2442
01:32:32,400 --> 01:32:33,679
but if i wanted to group by something

2443
01:32:33,679 --> 01:32:35,440
else like the key

2444
01:32:35,440 --> 01:32:38,080
um you know the cipher suite is a pretty

2445
01:32:38,080 --> 01:32:39,920
bad example but you would just add that

2446
01:32:39,920 --> 01:32:41,360
to the group eye

2447
01:32:41,360 --> 01:32:42,639
right and then you can see that

2448
01:32:42,639 --> 01:32:44,880
alongside it right there

2449
01:32:44,880 --> 01:32:47,520
and then you can also pair this

2450
01:32:47,520 --> 01:32:50,159
right with that other traffic right so

2451
01:32:50,159 --> 01:32:51,600
if you wanted to see

2452
01:32:51,600 --> 01:32:53,040
a certain activity you can

2453
01:32:53,040 --> 01:32:54,880
cross-correlate that with the other

2454
01:32:54,880 --> 01:32:56,800
traffic

2455
01:32:56,800 --> 01:32:58,400
so again it's really super powerful to

2456
01:32:58,400 --> 01:33:00,320
be able to do that and

2457
01:33:00,320 --> 01:33:02,159
you know be able to essentially

2458
01:33:02,159 --> 01:33:03,920
aggregate all of that traffic and all of

2459
01:33:03,920 --> 01:33:05,120
those logs

2460
01:33:05,120 --> 01:33:08,639
within security engine

2461
01:33:08,639 --> 01:33:09,600
okay

2462
01:33:09,600 --> 01:33:11,920
so i know that was a quick lab i'll stop

2463
01:33:11,920 --> 01:33:14,000
there for a minute maybe to to let uh

2464
01:33:14,000 --> 01:33:15,600
folks catch up if they're still working

2465
01:33:15,600 --> 01:33:17,920
on that um if they're following along

2466
01:33:17,920 --> 01:33:19,360
or if there are any questions let me go

2467
01:33:19,360 --> 01:33:23,839
ahead and check the stream yard here

2468
01:33:28,639 --> 01:33:31,040
okay

2469
01:33:31,040 --> 01:33:33,360
all right no questions

2470
01:33:33,360 --> 01:33:35,040
let me get so it's a little scratchy

2471
01:33:35,040 --> 01:33:37,840
here

2472
01:33:39,360 --> 01:33:40,960
all right

2473
01:33:40,960 --> 01:33:41,760
now

2474
01:33:41,760 --> 01:33:43,760
let's see if i can do it this time play

2475
01:33:43,760 --> 01:33:46,000
from current slide look at that

2476
01:33:46,000 --> 01:33:48,080
learn something new

2477
01:33:48,080 --> 01:33:49,760
all right so let's talk about some

2478
01:33:49,760 --> 01:33:51,360
additional tools

2479
01:33:51,360 --> 01:33:52,400
um

2480
01:33:52,400 --> 01:33:55,120
i'm just going to touch on these briefly

2481
01:33:55,120 --> 01:33:57,440
i mentioned uh you know the

2482
01:33:57,440 --> 01:33:59,520
auto auto mirror

2483
01:33:59,520 --> 01:34:01,760
right uh three quarter sec auto mirror

2484
01:34:01,760 --> 01:34:03,440
um definitely check that out um in

2485
01:34:03,440 --> 01:34:04,800
addition to

2486
01:34:04,800 --> 01:34:07,120
um you know tm nids

2487
01:34:07,120 --> 01:34:08,560
but other additional tools you might

2488
01:34:08,560 --> 01:34:09,679
check out

2489
01:34:09,679 --> 01:34:12,080
uh vxlan to pcap

2490
01:34:12,080 --> 01:34:14,080
is a tool that i actually wrote a little

2491
01:34:14,080 --> 01:34:15,600
while back

2492
01:34:15,600 --> 01:34:17,520
when we didn't have the ability to pull

2493
01:34:17,520 --> 01:34:19,440
pcap like we do now

2494
01:34:19,440 --> 01:34:21,679
with security engine but

2495
01:34:21,679 --> 01:34:23,120
in some cases

2496
01:34:23,120 --> 01:34:24,480
you know there's still going to be many

2497
01:34:24,480 --> 01:34:26,480
environments where

2498
01:34:26,480 --> 01:34:28,480
you're not able to you know maybe tools

2499
01:34:28,480 --> 01:34:30,840
don't know vxlan

2500
01:34:30,840 --> 01:34:32,719
or um

2501
01:34:32,719 --> 01:34:34,480
or you know you have to be able to kind

2502
01:34:34,480 --> 01:34:37,120
of unwrap that tunnel um and this allows

2503
01:34:37,120 --> 01:34:38,800
you to do that basically you run the

2504
01:34:38,800 --> 01:34:41,280
command just like this

2505
01:34:41,280 --> 01:34:43,199
and then it will output

2506
01:34:43,199 --> 01:34:45,360
a pcap that has been stripped of that

2507
01:34:45,360 --> 01:34:47,119
the excellent encapsulation

2508
01:34:47,119 --> 01:34:49,520
so if you're on a case or uh you're

2509
01:34:49,520 --> 01:34:51,840
pulling pcapp from a box in the cloud

2510
01:34:51,840 --> 01:34:54,639
and it's aws or another partner solution

2511
01:34:54,639 --> 01:34:57,040
that does the excellent encapsulation

2512
01:34:57,040 --> 01:34:58,320
that can absolutely help you in that

2513
01:34:58,320 --> 01:34:59,360
case

2514
01:34:59,360 --> 01:35:01,040
and it's pretty pretty nifty tool to

2515
01:35:01,040 --> 01:35:03,280
have

2516
01:35:04,639 --> 01:35:07,760
also uh not necessarily a tool but maybe

2517
01:35:07,760 --> 01:35:09,360
i would say it's a tool just maybe not

2518
01:35:09,360 --> 01:35:11,679
software um it's

2519
01:35:11,679 --> 01:35:14,239
the cloud matrix for miter attack right

2520
01:35:14,239 --> 01:35:16,639
is a great way to kind of map your

2521
01:35:16,639 --> 01:35:19,280
coverage across the cloud platforms

2522
01:35:19,280 --> 01:35:21,199
you can create detections i mentioned

2523
01:35:21,199 --> 01:35:22,639
playbook so

2524
01:35:22,639 --> 01:35:25,760
i know thiago and three corsec have some

2525
01:35:25,760 --> 01:35:27,760
cloud trail rules out there

2526
01:35:27,760 --> 01:35:29,520
that they use i think these are a little

2527
01:35:29,520 --> 01:35:30,719
bit different maybe with like the

2528
01:35:30,719 --> 01:35:33,040
elastic detections but you can still use

2529
01:35:33,040 --> 01:35:36,320
that relevant sigma rule and uh and map

2530
01:35:36,320 --> 01:35:38,960
those um across you know

2531
01:35:38,960 --> 01:35:40,800
or map your detection coverage using

2532
01:35:40,800 --> 01:35:42,560
that right so

2533
01:35:42,560 --> 01:35:46,239
again another useful tool to have

2534
01:35:47,679 --> 01:35:49,280
so i'm not going to cover this in the

2535
01:35:49,280 --> 01:35:52,560
workshop but feel free if you want to

2536
01:35:52,560 --> 01:35:54,880
explore on your own

2537
01:35:54,880 --> 01:35:56,960
some automated deployment or testing of

2538
01:35:56,960 --> 01:35:58,480
security ending

2539
01:35:58,480 --> 01:36:01,360
uh one of the ways that we can do that

2540
01:36:01,360 --> 01:36:04,080
is going to be using terraform

2541
01:36:04,080 --> 01:36:06,480
and so we have a repo here just at this

2542
01:36:06,480 --> 01:36:07,440
link

2543
01:36:07,440 --> 01:36:09,119
and again these slides will be sent out

2544
01:36:09,119 --> 01:36:11,199
but i'll i will put that oh

2545
01:36:11,199 --> 01:36:12,159
[ __ ]

2546
01:36:12,159 --> 01:36:13,840
so i can actually copy that right here

2547
01:36:13,840 --> 01:36:16,400
i'll put that

2548
01:36:16,400 --> 01:36:17,679
in

2549
01:36:17,679 --> 01:36:19,440
here as well

2550
01:36:19,440 --> 01:36:20,880
the appendix for you if you want to

2551
01:36:20,880 --> 01:36:23,119
check that out that's a huge font these

2552
01:36:23,119 --> 01:36:24,880
louise

2553
01:36:24,880 --> 01:36:26,239
all right

2554
01:36:26,239 --> 01:36:30,320
so i'll flip back here

2555
01:36:30,639 --> 01:36:33,520
okay and so if you want to test that out

2556
01:36:33,520 --> 01:36:36,400
what it does is it spins up

2557
01:36:36,400 --> 01:36:39,440
an optional ubuntu node and a security

2558
01:36:39,440 --> 01:36:41,119
in a node and it automatically

2559
01:36:41,119 --> 01:36:43,840
configures auto mirror so that uh those

2560
01:36:43,840 --> 01:36:45,920
instances come up already ready to be

2561
01:36:45,920 --> 01:36:48,159
mirrored or already mirroring traffic

2562
01:36:48,159 --> 01:36:50,080
and then you're ready to do your testing

2563
01:36:50,080 --> 01:36:53,600
or or whatever right do your lab

2564
01:36:53,600 --> 01:36:55,280
so it's pretty cool to have that that

2565
01:36:55,280 --> 01:36:57,520
capability uh and do that really quickly

2566
01:36:57,520 --> 01:37:00,000
and easily

2567
01:37:01,600 --> 01:37:03,840
this way all right and the same thing

2568
01:37:03,840 --> 01:37:06,560
you can do the exact same thing with gcp

2569
01:37:06,560 --> 01:37:08,639
um right now although

2570
01:37:08,639 --> 01:37:10,560
i will say the

2571
01:37:10,560 --> 01:37:12,960
the terraform config does by default uh

2572
01:37:12,960 --> 01:37:14,080
use the

2573
01:37:14,080 --> 01:37:16,159
um the ami so

2574
01:37:16,159 --> 01:37:18,880
you know after after that trial period

2575
01:37:18,880 --> 01:37:20,880
if you don't want to continue using that

2576
01:37:20,880 --> 01:37:22,960
i would make sure that anything you spin

2577
01:37:22,960 --> 01:37:23,600
up

2578
01:37:23,600 --> 01:37:26,159
you change the uh

2579
01:37:26,159 --> 01:37:28,080
the ami used and that's you can do that

2580
01:37:28,080 --> 01:37:30,000
within the terraform config described in

2581
01:37:30,000 --> 01:37:31,679
the repo

2582
01:37:31,679 --> 01:37:33,600
and then so with gcp you can do the same

2583
01:37:33,600 --> 01:37:34,880
thing again

2584
01:37:34,880 --> 01:37:37,280
now we don't necessarily have a

2585
01:37:37,280 --> 01:37:39,920
an official google image or azure image

2586
01:37:39,920 --> 01:37:41,840
at the moment but um you know there are

2587
01:37:41,840 --> 01:37:43,520
lots of cloud things that we're working

2588
01:37:43,520 --> 01:37:46,560
on uh very diligently so um you know i

2589
01:37:46,560 --> 01:37:48,880
would keep an ear out for that good news

2590
01:37:48,880 --> 01:37:50,560
at some point

2591
01:37:50,560 --> 01:37:52,639
um but be sure you know if you're a gcp

2592
01:37:52,639 --> 01:37:55,040
shop if you're aws try and spin it up

2593
01:37:55,040 --> 01:37:58,719
and and check it out if you can

2594
01:38:00,800 --> 01:38:03,040
and that is pretty much it unless there

2595
01:38:03,040 --> 01:38:05,199
are questions that that we can uh you

2596
01:38:05,199 --> 01:38:07,440
know direct towards more

2597
01:38:07,440 --> 01:38:10,000
uh lab time or activity that's that's

2598
01:38:10,000 --> 01:38:12,639
pretty much all i had i know um it was

2599
01:38:12,639 --> 01:38:14,719
kind of fast-paced i just wanted to make

2600
01:38:14,719 --> 01:38:17,280
sure that's um you know we're good on

2601
01:38:17,280 --> 01:38:19,600
time here and i wanted to make sure that

2602
01:38:19,600 --> 01:38:22,400
um you know you guys have the resources

2603
01:38:22,400 --> 01:38:25,040
uh to go back and review this later so

2604
01:38:25,040 --> 01:38:26,239
again you should have everything you

2605
01:38:26,239 --> 01:38:28,320
need um you know if you want to replay

2606
01:38:28,320 --> 01:38:30,239
the video or go back to the slides all

2607
01:38:30,239 --> 01:38:31,920
of the resources should be there for you

2608
01:38:31,920 --> 01:38:33,679
to be able to do all of this

2609
01:38:33,679 --> 01:38:35,520
on your own and be successful doing that

2610
01:38:35,520 --> 01:38:36,639
and

2611
01:38:36,639 --> 01:38:38,639
obviously if you still need help feel

2612
01:38:38,639 --> 01:38:40,639
free to reach out to the real w lambert

2613
01:38:40,639 --> 01:38:42,719
on on twitter or

2614
01:38:42,719 --> 01:38:44,480
if you think security engine is cool

2615
01:38:44,480 --> 01:38:46,000
make sure to hit up security engine or

2616
01:38:46,000 --> 01:38:48,800
doug burks on twitter um you know if you

2617
01:38:48,800 --> 01:38:50,719
want to download it or uh you know want

2618
01:38:50,719 --> 01:38:52,480
to see the documentation

2619
01:38:52,480 --> 01:38:54,159
all that's there as well as well as the

2620
01:38:54,159 --> 01:38:57,840
link to the ami and cloud resources

2621
01:38:57,840 --> 01:39:00,080
again i just want to say thank you for

2622
01:39:00,080 --> 01:39:02,639
allowing me to present here today and

2623
01:39:02,639 --> 01:39:04,719
and perform this brief workshop with you

2624
01:39:04,719 --> 01:39:06,400
guys and kind of get you exposed to

2625
01:39:06,400 --> 01:39:08,080
security and in the cloud and how you

2626
01:39:08,080 --> 01:39:09,360
might leverage it

2627
01:39:09,360 --> 01:39:11,600
um again if you guys have any questions

2628
01:39:11,600 --> 01:39:14,000
i'll be glad to answer those now or

2629
01:39:14,000 --> 01:39:16,400
later if you prefer so thank you guys

2630
01:39:16,400 --> 01:39:19,280
again

