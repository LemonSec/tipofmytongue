1
00:00:01,285 --> 00:00:03,570
- Hello everyone, and
welcome to my DEF CON talk

2
00:00:03,570 --> 00:00:07,370
all about locks and keying
systems and how to hack them.

3
00:00:07,370 --> 00:00:09,610
There's gonna be a lot of math
and problem solving involved

4
00:00:09,610 --> 00:00:10,570
in what we're talking about today.

5
00:00:10,570 --> 00:00:12,340
So those of you who
like that sort of thing,

6
00:00:12,340 --> 00:00:14,410
I think you're going to
really like this talk.

7
00:00:14,410 --> 00:00:16,620
For those of you who
don't like that as much,

8
00:00:16,620 --> 00:00:18,930
I'll be releasing a number
of software applications

9
00:00:18,930 --> 00:00:20,993
that will do all the hard work for you.

10
00:00:21,970 --> 00:00:23,470
This is all about decoding locks,

11
00:00:23,470 --> 00:00:25,310
despite the very verbose title,

12
00:00:25,310 --> 00:00:28,120
so taking all the information
available and creating a key

13
00:00:28,120 --> 00:00:30,885
for a lock where we
didn't otherwise have one.

14
00:00:30,885 --> 00:00:33,620
It is a fairly long talk,
so if you're watching this

15
00:00:33,620 --> 00:00:36,240
on YouTube after I'll put
a comment below with links

16
00:00:36,240 --> 00:00:38,700
to times and the video, so
you can skip to the parts

17
00:00:38,700 --> 00:00:40,700
of the talk that happen to interest you.

18
00:00:41,680 --> 00:00:43,850
I will just mention this
feels incredibly weird,

19
00:00:43,850 --> 00:00:46,630
the energy is so low
compared to giving a talk

20
00:00:46,630 --> 00:00:48,300
on the main stage at DEF CON.

21
00:00:48,300 --> 00:00:50,900
So I will do my absolute
best to stay engaged

22
00:00:50,900 --> 00:00:53,470
and keep you awake and
to stay awake myself.

23
00:00:53,470 --> 00:00:56,980
But the good news here is
that this talk involves a lot

24
00:00:56,980 --> 00:00:59,250
of software demos and me
going through the software

25
00:00:59,250 --> 00:01:00,500
I'll be releasing,

26
00:01:00,500 --> 00:01:03,130
that would have been
absolutely terrifying to do

27
00:01:03,130 --> 00:01:05,600
on a main stage at DEF CON.

28
00:01:05,600 --> 00:01:08,140
So what you get out of that
is the speaker who is gonna

29
00:01:08,140 --> 00:01:11,373
be a lot less stressed out and
making a lot fewer mistakes.

30
00:01:12,920 --> 00:01:15,780
So take a look at your key
ring and see the keys on there

31
00:01:15,780 --> 00:01:18,690
and see how much you understand
about what they are beyond

32
00:01:18,690 --> 00:01:22,080
just shapes of metal and how
they interact with the lock.

33
00:01:22,080 --> 00:01:24,010
And that's what we're
going to be talking about

34
00:01:24,010 --> 00:01:25,500
all through today.

35
00:01:25,500 --> 00:01:28,170
The way we're going to attack
that is looking at how locks

36
00:01:28,170 --> 00:01:30,360
and keys work and the
introduction to the tools

37
00:01:30,360 --> 00:01:32,440
I'm releasing to analyze them.

38
00:01:32,440 --> 00:01:34,470
We'll look at the
economics and practicality

39
00:01:34,470 --> 00:01:36,517
of brute forcing all possible keys

40
00:01:36,517 --> 00:01:39,870
and reading the pins in a lock
to get information from that,

41
00:01:39,870 --> 00:01:41,490
we'll improve on impressioning

42
00:01:41,490 --> 00:01:43,650
by applying the extra
information that we have,

43
00:01:43,650 --> 00:01:46,330
and we'll look at keyed alike
systems and lock disassembly

44
00:01:46,330 --> 00:01:47,990
to get information,

45
00:01:47,990 --> 00:01:50,360
we'll then formally
introduce information theory

46
00:01:50,360 --> 00:01:53,360
and see how it applies to
mechanical locks and keys.

47
00:01:53,360 --> 00:01:57,000
We'll introduce master keying
systems and derive master keys

48
00:01:57,000 --> 00:01:58,730
from multiple low-level keys and perform

49
00:01:58,730 --> 00:02:02,410
other rights amplification
attacks to create a master key

50
00:02:02,410 --> 00:02:04,190
where we didn't have one before.

51
00:02:04,190 --> 00:02:05,570
We'll look at a couple of special cases,

52
00:02:05,570 --> 00:02:07,610
like construction keying, IC cores,

53
00:02:07,610 --> 00:02:09,310
and high security secondary systems

54
00:02:09,310 --> 00:02:10,980
like Medeco and Mul-T-Lock.

55
00:02:10,980 --> 00:02:13,400
And finally, we'll talk
about what blue team can do

56
00:02:13,400 --> 00:02:15,930
to remediate from these attacks.

57
00:02:15,930 --> 00:02:17,670
All of the software that I'm releasing

58
00:02:17,670 --> 00:02:20,680
as a part of this talk can
be found at these links here,

59
00:02:20,680 --> 00:02:23,560
both, a version that you can
try right in your web browser,

60
00:02:23,560 --> 00:02:25,580
as well as the source down below.

61
00:02:25,580 --> 00:02:27,320
So before we jump into the new content,

62
00:02:27,320 --> 00:02:29,610
we'll give a very brief
overview of how locks work,

63
00:02:29,610 --> 00:02:31,860
for those who might not be familiar.

64
00:02:31,860 --> 00:02:34,480
So we have a key and it enters the lock

65
00:02:34,480 --> 00:02:37,220
and interfaces with a number of pins.

66
00:02:37,220 --> 00:02:39,480
We have key pins close to the key

67
00:02:39,480 --> 00:02:41,370
and driver pins higher up.

68
00:02:41,370 --> 00:02:44,690
And if they all line up
with the top of this plug,

69
00:02:44,690 --> 00:02:46,920
it will allow the plug to turn.

70
00:02:46,920 --> 00:02:47,753
What do I mean by that?

71
00:02:47,753 --> 00:02:49,380
Well, let's take a look at a 3D model

72
00:02:49,380 --> 00:02:50,900
for what this is representing.

73
00:02:50,900 --> 00:02:55,900
So here is a familiar
lock and this inner insert

74
00:02:57,140 --> 00:03:00,130
called, the plug, when all pins line up,

75
00:03:00,130 --> 00:03:01,510
it allows it to turn.

76
00:03:01,510 --> 00:03:06,510
So if we look at the
cross section of it here,

77
00:03:06,710 --> 00:03:08,610
when those pins line up, as I showed

78
00:03:08,610 --> 00:03:10,350
in the two dimensional diagram,

79
00:03:10,350 --> 00:03:13,650
that's what then allows that to happen.

80
00:03:13,650 --> 00:03:16,240
And if any of those pins
are not at the right height,

81
00:03:16,240 --> 00:03:20,220
so we have a driver pin
into the plug or a key pin

82
00:03:20,220 --> 00:03:22,380
up into the drive or up in to the housing,

83
00:03:22,380 --> 00:03:24,320
then that will not allow it to turn,

84
00:03:24,320 --> 00:03:26,750
and the lock remains locked.

85
00:03:26,750 --> 00:03:30,610
Within the plug, we have holes
for the key pins to go into,

86
00:03:30,610 --> 00:03:32,600
and those holes don't go all the way down.

87
00:03:32,600 --> 00:03:34,860
So that's what stops the pins from falling

88
00:03:34,860 --> 00:03:36,033
right out of the lock.

89
00:03:37,400 --> 00:03:40,690
And so in this cross section,
we see here, this is where

90
00:03:40,690 --> 00:03:43,100
the key enters, and then
this is where the pins are.

91
00:03:43,100 --> 00:03:45,720
And that's what we're representing in our

92
00:03:45,720 --> 00:03:50,490
two dimensional facsimile
that we have here.

93
00:03:50,490 --> 00:03:53,600
So the key goes in, it raises
the pins to the right height,

94
00:03:53,600 --> 00:03:55,530
the lock opens.

95
00:03:55,530 --> 00:04:00,280
If some of these pins or
these key cuts are too high

96
00:04:00,280 --> 00:04:04,620
or too low, then it will not
open because we have a driver

97
00:04:04,620 --> 00:04:06,610
pin or a key pin in the way,

98
00:04:06,610 --> 00:04:09,660
and we can see these shear
lines are now binding,

99
00:04:09,660 --> 00:04:12,000
the lock does not open.

100
00:04:12,000 --> 00:04:16,020
It's worth noting that
the positions in the key

101
00:04:16,020 --> 00:04:17,650
are all discrete.

102
00:04:17,650 --> 00:04:22,210
So we can have a set number
of intervals or depths

103
00:04:22,210 --> 00:04:24,420
that these positions can take on,

104
00:04:24,420 --> 00:04:28,570
and that is defined by
what type of lock it is

105
00:04:28,570 --> 00:04:30,670
as well as the position
of pins, of course,

106
00:04:30,670 --> 00:04:33,010
is defined by what type of lock it is.

107
00:04:33,010 --> 00:04:34,880
So you can play around
with this software yourself

108
00:04:34,880 --> 00:04:39,160
to understand what that top
profile of a key actually means

109
00:04:39,160 --> 00:04:43,163
in terms of what key code it creates.

110
00:04:45,389 --> 00:04:49,140
So this is an example of
what the core or a plug

111
00:04:49,140 --> 00:04:51,510
cut in half actually
looks like. So we can see

112
00:04:51,510 --> 00:04:54,163
where the pins go and
where the key goes in here.

113
00:04:55,010 --> 00:04:58,850
A key itself is just
mechanically encoded information,

114
00:04:58,850 --> 00:05:02,130
so I showed how we can change
the code to different heights,

115
00:05:02,130 --> 00:05:04,530
key codes are a number
that represents that.

116
00:05:04,530 --> 00:05:08,500
So this is a Schlage key, we
read it from shoulder to tip.

117
00:05:08,500 --> 00:05:12,130
So in pin one, we have
from zero down to nine,

118
00:05:12,130 --> 00:05:16,130
so this is an E-cut and we
can get a seven, et cetera.

119
00:05:16,130 --> 00:05:18,350
So here's a two, we have 012,

120
00:05:18,350 --> 00:05:22,003
and from that we can get the
full bitting code of 87527.

121
00:05:23,320 --> 00:05:25,460
And that makes sense when we look at

122
00:05:25,460 --> 00:05:29,630
the profile of this key,
deep, shallower, shallower,

123
00:05:29,630 --> 00:05:32,340
very shallow and back to deep again.

124
00:05:32,340 --> 00:05:35,480
The thickness of the key
from the base to the points

125
00:05:35,480 --> 00:05:38,760
of this cut here, is given by this chart

126
00:05:38,760 --> 00:05:40,320
for the Schlage system.

127
00:05:40,320 --> 00:05:44,970
So an eight cuts is
going to be 0.215 inches,

128
00:05:44,970 --> 00:05:47,120
from these two positions.

129
00:05:47,120 --> 00:05:50,600
Here's another example
we can see, So 52864,

130
00:05:50,600 --> 00:05:53,810
We can see it makes about sense,
there's five in the middle,

131
00:05:53,810 --> 00:05:56,187
a two is high up, eight is low cut,

132
00:05:56,187 --> 00:05:59,100
and then it's increasing from there.

133
00:05:59,100 --> 00:06:00,500
One thing we need to be aware of

134
00:06:00,500 --> 00:06:03,270
is the maximum adjacent cut specification.

135
00:06:03,270 --> 00:06:06,940
We can't have a very shallow
cut beside a very deep cut

136
00:06:06,940 --> 00:06:09,650
or in one case, it's going to be too steep

137
00:06:09,650 --> 00:06:11,930
and we can't put the key in or get it out.

138
00:06:11,930 --> 00:06:14,910
Or in another case, we're
going to start impinging

139
00:06:14,910 --> 00:06:17,090
on the neighboring cuts.

140
00:06:17,090 --> 00:06:20,066
So if you look at how a
key is actually originated,

141
00:06:20,066 --> 00:06:22,470
(machine roars)

142
00:06:22,470 --> 00:06:25,000
So we can see in this
lower left corner here,

143
00:06:25,000 --> 00:06:28,230
this cutter wheel, that's
taking bites out of the key,

144
00:06:28,230 --> 00:06:31,927
and so we're moving it along
to find positions along the key

145
00:06:31,927 --> 00:06:34,650
and then cutting down to
predefined depths into the key.

146
00:06:34,650 --> 00:06:39,130
In this case, we're cutting it
to the bitting code 1-2-3-4-5

147
00:06:39,130 --> 00:06:40,873
So here we are on the fifth position,

148
00:06:40,873 --> 00:06:43,583
cutting it down to a five down.

149
00:06:44,760 --> 00:06:47,030
We can see that the way that cutter wheel

150
00:06:47,030 --> 00:06:52,030
cuts into the pins, actually
creates a sloped angle.

151
00:06:53,190 --> 00:06:55,940
And so here's an example of one key

152
00:06:55,940 --> 00:06:58,103
where we have a code, 0-4-0-3-7,

153
00:06:59,070 --> 00:07:01,363
so that's again, from shoulder to tip.

154
00:07:02,260 --> 00:07:06,080
If we wanted to bring pin
two down so that it matches

155
00:07:06,080 --> 00:07:08,100
not this shear line, but this upper one,

156
00:07:08,100 --> 00:07:10,390
we can start cutting the
four down, and it works,

157
00:07:10,390 --> 00:07:12,870
down to a five, down to a six, is fine.

158
00:07:12,870 --> 00:07:17,870
But now these shallow
sloped sides around it

159
00:07:18,020 --> 00:07:20,070
are getting very close to the neighbors.

160
00:07:20,070 --> 00:07:22,230
And in fact, when you
put it down to a seven,

161
00:07:22,230 --> 00:07:25,440
those neighbors are now lowered by that,

162
00:07:25,440 --> 00:07:27,973
so that's a bit of a problem for us.

163
00:07:28,890 --> 00:07:33,660
It means that we cannot have a
zero cut next to a seven cut,

164
00:07:33,660 --> 00:07:36,190
zero next to six is okay, but not seven.

165
00:07:36,190 --> 00:07:40,730
So that's our maximum adjacent
cut specification, is six.

166
00:07:40,730 --> 00:07:43,190
Likewise, we can't have
a one next to a seven

167
00:07:43,190 --> 00:07:45,770
or next to an eight, but
it can be next to a seven,

168
00:07:45,770 --> 00:07:46,980
so the difference there is six,

169
00:07:46,980 --> 00:07:49,830
that's okay, because it's maximum.

170
00:07:49,830 --> 00:07:54,070
And that's a property of
almost all pin tumbler locks,

171
00:07:54,070 --> 00:07:57,743
and that's gonna limit where
our key space is as well.

172
00:08:00,950 --> 00:08:03,760
Here's a chart of the most
common MACS that we see.

173
00:08:03,760 --> 00:08:06,700
So most of them seven, they have,

174
00:08:06,700 --> 00:08:09,170
in the case of Schlage,
Sargent, Yale and Weiser,

175
00:08:09,170 --> 00:08:11,240
they have 10 different
depths that are allowable,

176
00:08:11,240 --> 00:08:13,420
so it's seven, that's fairly permissive,

177
00:08:13,420 --> 00:08:16,460
Kwikset only has six, so
that means that our MACS

178
00:08:16,460 --> 00:08:18,363
is a little bit less, at four.

179
00:08:20,320 --> 00:08:21,460
Now that we understand MACS,

180
00:08:21,460 --> 00:08:23,830
we can start to look at the key spaces.

181
00:08:23,830 --> 00:08:27,270
So the total number of differs
or number of possible keys

182
00:08:27,270 --> 00:08:29,350
that exists on a system.

183
00:08:29,350 --> 00:08:31,650
And naively, it's the number of depths

184
00:08:31,650 --> 00:08:33,890
to the power of the number of spaces.

185
00:08:33,890 --> 00:08:35,560
So for a Schlage key, there are 10 depths

186
00:08:35,560 --> 00:08:38,000
to the power of five or six spaces,

187
00:08:38,000 --> 00:08:41,620
for five or six pins is
100,000 to a million.

188
00:08:41,620 --> 00:08:44,910
And for Medeco, it's six depths
to the power of five or six,

189
00:08:44,910 --> 00:08:47,770
so 7000 or 46,000.

190
00:08:47,770 --> 00:08:50,560
So we can calculate
that fairly easily here,

191
00:08:50,560 --> 00:08:53,270
a Schlage system with
five pins and 10 depths,

192
00:08:53,270 --> 00:08:56,270
we have 100,000 possibilities,

193
00:08:56,270 --> 00:08:59,230
and six pins is going to be a million.

194
00:08:59,230 --> 00:09:02,830
And if it's a Medeco lock
with six pins, six depths,

195
00:09:02,830 --> 00:09:06,930
that's 46,000 and that's
six of the power of six.

196
00:09:06,930 --> 00:09:09,430
We can also add in our MACS here,

197
00:09:09,430 --> 00:09:12,610
so let's say that this is a Kwikset key,

198
00:09:12,610 --> 00:09:15,410
with five pins and six depths,

199
00:09:15,410 --> 00:09:19,300
we can now scroll down and
add some rules to this system

200
00:09:19,300 --> 00:09:21,260
to limit what our key space would be.

201
00:09:21,260 --> 00:09:24,860
So we start with 7000,
we find, under MACS,

202
00:09:24,860 --> 00:09:29,440
and add a MACS of four, for
it being a Kwikset system,

203
00:09:29,440 --> 00:09:33,400
and that now limits it to 6306.

204
00:09:33,400 --> 00:09:38,400
And we can see that the number
of possible differs is less

205
00:09:38,640 --> 00:09:42,130
with cuts, very shallow and very deep.

206
00:09:42,130 --> 00:09:46,510
So this number here, 941,
means that 941 total differs

207
00:09:46,510 --> 00:09:49,060
have a zero cut in pin one.

208
00:09:49,060 --> 00:09:51,310
That's smaller than the
number that can have a one cut

209
00:09:51,310 --> 00:09:55,810
in pin one, because a zero
cut can go up to four,

210
00:09:55,810 --> 00:09:59,040
that's within MACS, but it
can't go all the way to a five.

211
00:09:59,040 --> 00:10:00,900
That would be too much of a difference,

212
00:10:00,900 --> 00:10:02,810
that would be a MACS violation.

213
00:10:02,810 --> 00:10:06,070
This one here, can go to anything
because it's close enough

214
00:10:06,070 --> 00:10:08,683
to everything that it
will not violate MACS.

215
00:10:09,620 --> 00:10:12,470
To take this would be
extreme, we can reduce MACS

216
00:10:12,470 --> 00:10:15,650
down to one, and so we now
see the impact that has,

217
00:10:15,650 --> 00:10:17,823
we're down to only 340 possible keys.

218
00:10:18,884 --> 00:10:22,330
And if by some decoding, that
we'll talk about going forward

219
00:10:22,330 --> 00:10:25,440
we know that, say the shear
line in pin one is a three,

220
00:10:25,440 --> 00:10:29,730
we now see that pin two can
only be a two, three or four,

221
00:10:29,730 --> 00:10:31,280
anything else is too far from it,

222
00:10:31,280 --> 00:10:34,620
it's a MACS violation and
that extends outwards.

223
00:10:34,620 --> 00:10:36,720
So that is severely limiting now,

224
00:10:36,720 --> 00:10:39,280
the number of possible keys
that are in our key space,

225
00:10:39,280 --> 00:10:41,500
and we'll look at how
to derive these rules

226
00:10:41,500 --> 00:10:43,060
throughout the rest of this talk.

227
00:10:43,060 --> 00:10:46,330
In this case, we're down to
74 possible keys in our space,

228
00:10:46,330 --> 00:10:49,660
and so it's enumerating all
of those key codes here.

229
00:10:49,660 --> 00:10:52,450
So these are the bitting codes,
we could cut a key to these

230
00:10:52,450 --> 00:10:55,863
and try them, and it
might work in this lock.

231
00:10:59,400 --> 00:11:02,430
We can take a brief look
at keys versus passwords

232
00:11:02,430 --> 00:11:05,060
in terms of the brute
force ability of them.

233
00:11:05,060 --> 00:11:08,340
So the cost to try a password
is very close to zero,

234
00:11:08,340 --> 00:11:09,630
not quite negligible,

235
00:11:09,630 --> 00:11:11,350
in the case of a key it's quite expensive.

236
00:11:11,350 --> 00:11:13,510
We have to pay for the
blank and cutting the key

237
00:11:13,510 --> 00:11:16,620
and our time to actually
go and physically try it.

238
00:11:16,620 --> 00:11:19,948
That's all quite expensive
and time consuming.

239
00:11:19,948 --> 00:11:23,900
Passwords can be an unlimited
length and complexity,

240
00:11:23,900 --> 00:11:27,680
keys are severely limited in
both length and complexity

241
00:11:27,680 --> 00:11:30,710
due to the mechanical nature of them.

242
00:11:30,710 --> 00:11:34,200
And a password, if it gets
compromised, it's easy to change,

243
00:11:34,200 --> 00:11:36,860
and a key is very costly
and time consuming.

244
00:11:36,860 --> 00:11:39,240
So what this means is
with mechanical keys,

245
00:11:39,240 --> 00:11:42,090
things are harder for both the
red team and the blue team.

246
00:11:42,090 --> 00:11:43,760
It's harder to brute force

247
00:11:43,760 --> 00:11:45,860
and try a whole bunch of combinations,

248
00:11:45,860 --> 00:11:50,860
but if a vulnerability is
discovered by the red team,

249
00:11:51,730 --> 00:11:54,420
it's a lot harder for the blue
team to actually mitigate it

250
00:11:54,420 --> 00:11:55,673
and work against that.

251
00:11:57,480 --> 00:12:00,140
To try a brute force attack economically,

252
00:12:00,140 --> 00:12:02,520
if we look at just the cost of the blank,

253
00:12:02,520 --> 00:12:05,090
and we assume that if
we own a cutting machine

254
00:12:05,090 --> 00:12:08,240
the marginal cost of
cutting a new key on it

255
00:12:08,240 --> 00:12:09,980
is just your time,

256
00:12:09,980 --> 00:12:12,880
so keys are not particularly
expensive in that case,

257
00:12:12,880 --> 00:12:14,333
between $0.13 and $3.

258
00:12:15,220 --> 00:12:17,640
And if you don't, you would
have to use a locksmith

259
00:12:17,640 --> 00:12:19,970
who might do it for $3
to $10, possibly more

260
00:12:19,970 --> 00:12:21,700
for high security keys.

261
00:12:21,700 --> 00:12:24,070
So for instance, if we
can reduce the key space

262
00:12:24,070 --> 00:12:26,990
of a given lock down
to 1000 possible keys,

263
00:12:26,990 --> 00:12:28,360
using the software that I showed you

264
00:12:28,360 --> 00:12:31,480
and applying rules that we're
going to learn about soon,

265
00:12:31,480 --> 00:12:36,480
we might be able to try all
of those 1000 keys for $450,

266
00:12:36,500 --> 00:12:40,030
if we own a code machine, if
the blanks are $0.45 each.

267
00:12:40,030 --> 00:12:43,400
If we have to go to a
locksmith to get them cut,

268
00:12:43,400 --> 00:12:47,270
then he might charge $4 each for $4000.

269
00:12:47,270 --> 00:12:49,270
And at that price, we're
better off just buying

270
00:12:49,270 --> 00:12:50,403
our own code machine.

271
00:12:52,070 --> 00:12:54,690
What's important about this
though, is that if whatever's

272
00:12:54,690 --> 00:12:59,140
being protected within that
room is worth less than $4,000,

273
00:12:59,140 --> 00:13:02,660
it now becomes an economical
attack to actually brute force

274
00:13:02,660 --> 00:13:05,503
all of these possible
keys in the key space.

275
00:13:06,760 --> 00:13:09,770
One really good example of
a lock where this is not

276
00:13:09,770 --> 00:13:12,120
just possible, but imminently feasible,

277
00:13:12,120 --> 00:13:15,360
is the Sargent and Greenleaf
environmental padlock.

278
00:13:15,360 --> 00:13:18,700
It's a very well built beefy padlock

279
00:13:18,700 --> 00:13:21,350
meant for highly punishing
outdoor environments,

280
00:13:21,350 --> 00:13:24,750
and there's very few small
parts inside as well.

281
00:13:24,750 --> 00:13:26,850
It's a disc detainer lock,
so it looks a bit different

282
00:13:26,850 --> 00:13:28,610
than the keys we've looked at so far,

283
00:13:28,610 --> 00:13:30,910
but we can analyze it exactly the same.

284
00:13:30,910 --> 00:13:34,360
It has three different
discs and the key can be cut

285
00:13:34,360 --> 00:13:37,530
to either 180 degrees, as
we see in the middle here,

286
00:13:37,530 --> 00:13:40,800
135 degrees or 90 degrees.

287
00:13:40,800 --> 00:13:44,880
So three disks and three
different positions

288
00:13:44,880 --> 00:13:46,693
that each one can be cut to.

289
00:13:47,770 --> 00:13:50,330
Let's put that into
our key space software,

290
00:13:50,330 --> 00:13:55,330
so get rid of those rules,
and this is a disc detainer,

291
00:13:55,410 --> 00:14:00,340
one based with three discs and
three possible depths each.

292
00:14:00,340 --> 00:14:05,090
And we see 27 is our total
key space, that is everything

293
00:14:05,090 --> 00:14:07,000
that that Sargent and
Greenleaf environmental

294
00:14:07,000 --> 00:14:08,533
can possibly take on.

295
00:14:10,539 --> 00:14:12,750
And that was three to the
third power, that makes sense,

296
00:14:12,750 --> 00:14:15,143
and we see them all enumerated here.

297
00:14:16,340 --> 00:14:19,070
It's a little bit more
complicated than that

298
00:14:19,070 --> 00:14:23,070
because if we insert
this key and we turn it

299
00:14:23,070 --> 00:14:25,900
and open that lock, one design
feature is that they want it

300
00:14:25,900 --> 00:14:28,310
to be key retaining, we
can't pull the key out,

301
00:14:28,310 --> 00:14:29,990
if the lock is open.

302
00:14:29,990 --> 00:14:33,250
If this were, say cut, 180, 180, 180,

303
00:14:33,250 --> 00:14:36,133
that would be possible to
do, and we don't want that.

304
00:14:37,030 --> 00:14:40,160
So we actually wanna remove
all of these key combinations

305
00:14:40,160 --> 00:14:42,707
that would not be key retaining
that we can pull that key

306
00:14:42,707 --> 00:14:44,570
out of the lock for.

307
00:14:44,570 --> 00:14:46,750
So, 111, is no good,

308
00:14:46,750 --> 00:14:50,130
112 is no good, because
two was lower than one,

309
00:14:50,130 --> 00:14:53,570
so it has to go up least
once. So 121 is good,

310
00:14:53,570 --> 00:14:57,263
131 is good, 132 is, but 133 is not

311
00:14:57,263 --> 00:15:01,650
because it doesn't go back up
at least once throughout it.

312
00:15:01,650 --> 00:15:04,240
So we can add a rule for
that, under MACS and stuff,

313
00:15:04,240 --> 00:15:06,320
we can add a rule for key retaining,

314
00:15:06,320 --> 00:15:11,320
and that's gonna reduce that
key space to remove differs

315
00:15:12,950 --> 00:15:15,610
that are not going to be key retaining

316
00:15:15,610 --> 00:15:17,030
in this particular case.

317
00:15:17,030 --> 00:15:21,470
And so we can see now that
there's more with a deeper cut

318
00:15:21,470 --> 00:15:24,830
in disc one and a shallower in disc three.

319
00:15:24,830 --> 00:15:28,080
And that's because if it
steps down from one, two

320
00:15:28,080 --> 00:15:32,180
to three, that's not
going to be key retaining.

321
00:15:32,180 --> 00:15:35,860
So we could create all 17
of these possible keys,

322
00:15:35,860 --> 00:15:37,750
and that might make
sense cause it will work

323
00:15:37,750 --> 00:15:40,680
on all Sargent and Greenleaf
environmental locks.

324
00:15:40,680 --> 00:15:42,480
If we have say a budget limitation,

325
00:15:42,480 --> 00:15:45,530
we don't wanna pay for 17
blanks, which would be...

326
00:15:46,370 --> 00:15:48,600
We've put 41 here, it would
actually be a bit more

327
00:15:48,600 --> 00:15:50,370
'cause these blanks are worth more,

328
00:15:50,370 --> 00:15:53,310
but this is just an order
of magnitude calculation.

329
00:15:53,310 --> 00:15:56,330
You can click down here and
click brute force, save blanks.

330
00:15:56,330 --> 00:15:57,650
Where it'll run a little algorithm

331
00:15:57,650 --> 00:15:59,660
to try to optimize for you,

332
00:15:59,660 --> 00:16:02,010
cutting one blank and then filing it down.

333
00:16:02,010 --> 00:16:05,850
So 121, files 131, to 132 et cetera,

334
00:16:05,850 --> 00:16:08,140
and that way we can test
out the entire key space

335
00:16:08,140 --> 00:16:10,430
in as few blanks as possible.

336
00:16:10,430 --> 00:16:14,110
This particular algorithm here,
to find the optimal solution

337
00:16:14,110 --> 00:16:16,960
turns out to be an NP complete problem,

338
00:16:16,960 --> 00:16:19,090
it ends up being reducible to,

339
00:16:19,090 --> 00:16:20,883
would be set cover problem.

340
00:16:21,790 --> 00:16:25,700
But we have a somewhat
suboptimal greedy algorithm

341
00:16:25,700 --> 00:16:27,090
that I've implemented here,

342
00:16:27,090 --> 00:16:29,610
that empirically I've found is good enough

343
00:16:29,610 --> 00:16:32,870
for getting us a decent algorithm

344
00:16:32,870 --> 00:16:34,970
of saving ourselves some blanks.

345
00:16:34,970 --> 00:16:39,970
So in this case, it goes
from $41 to get all 17 blanks

346
00:16:40,250 --> 00:16:44,850
down to just $12, since we
only need five blanks now.

347
00:16:44,850 --> 00:16:47,560
So that's the Sargent and
Greenleaf environmental padlock,

348
00:16:47,560 --> 00:16:49,990
it's a very good padlock
for what it's designed for,

349
00:16:49,990 --> 00:16:52,920
it's not really designed for
security of the key space

350
00:16:53,870 --> 00:16:54,703
and that's okay.

351
00:16:54,703 --> 00:16:58,490
It was used for a number
of years back before people

352
00:16:58,490 --> 00:17:00,640
knew this, and so it sort
of benefited from security

353
00:17:00,640 --> 00:17:04,560
by obscurity, but for that
reason, this particular lock

354
00:17:04,560 --> 00:17:08,690
is not used for high security
applications anymore.

355
00:17:08,690 --> 00:17:11,500
So let's shift gears a
little bit and look at locks

356
00:17:11,500 --> 00:17:13,900
where we can try the entire key space,

357
00:17:13,900 --> 00:17:16,700
not by reducing possible differs,

358
00:17:16,700 --> 00:17:19,220
but by trying multiple at once.

359
00:17:19,220 --> 00:17:22,080
So this is the Kwikset smart key lock.

360
00:17:22,080 --> 00:17:24,490
It's smart key, so to speak,
because it has this hole,

361
00:17:24,490 --> 00:17:27,040
you can insert a special
tool to re-key the lock

362
00:17:27,040 --> 00:17:30,560
without ever taking it
apart. Kind of a cool design.

363
00:17:30,560 --> 00:17:32,490
Unfortunately it's manufactured

364
00:17:32,490 --> 00:17:35,350
with extremely loose tolerances.

365
00:17:35,350 --> 00:17:38,820
And what that allows, is us
to actually try half heights.

366
00:17:38,820 --> 00:17:41,450
So normally if you have a one cut

367
00:17:41,450 --> 00:17:44,470
in a particular pin position,

368
00:17:44,470 --> 00:17:46,410
that will work if the pin is a one,

369
00:17:46,410 --> 00:17:47,563
or a two will work for two.

370
00:17:47,563 --> 00:17:50,060
What this lets you do is
cut it to one and a half,

371
00:17:50,060 --> 00:17:52,763
and that will work for
both a one and a two.

372
00:17:54,680 --> 00:17:57,500
So by allowing us to do
that, we can reduce it

373
00:17:57,500 --> 00:18:01,750
down to 200 and some odd possibilities.

374
00:18:01,750 --> 00:18:06,750
So let's simulate that in
our key space software here.

375
00:18:07,260 --> 00:18:11,000
So Kwikset locks, it has
five pins and six depths,

376
00:18:11,000 --> 00:18:16,000
and then six to five is
7700, as we looked at before,

377
00:18:16,300 --> 00:18:18,890
when we have to try
all of one through six.

378
00:18:18,890 --> 00:18:20,420
When half Heights work though,

379
00:18:20,420 --> 00:18:22,870
it turns into three to the five,

380
00:18:22,870 --> 00:18:25,910
because we can use 1.5, 3.5 and 5.5

381
00:18:25,910 --> 00:18:28,390
to try everything from one to six.

382
00:18:28,390 --> 00:18:31,860
And so we can see here that
trying out all of these

383
00:18:31,860 --> 00:18:34,610
half height keys to exhaust
the entire key space

384
00:18:34,610 --> 00:18:38,370
would cost about $500 to make all of them.

385
00:18:38,370 --> 00:18:42,870
And there actually exists
commercial sets you can buy

386
00:18:42,870 --> 00:18:45,123
that costs on that order as well,

387
00:18:46,020 --> 00:18:49,150
to try all of these different options.

388
00:18:49,150 --> 00:18:53,313
So that is something that's
out there for the Kwikset keys,

389
00:18:54,810 --> 00:18:56,920
the Kwikset smart key in particular,

390
00:18:56,920 --> 00:19:01,620
and that is something that
usually wouldn't be your go to

391
00:19:01,620 --> 00:19:04,220
attack methodology because
the Kwikset smart key,

392
00:19:04,220 --> 00:19:09,220
by virtue of those loose
tolerances, is easy to pick.

393
00:19:09,550 --> 00:19:13,280
But if you wanted to use
it, say to determine the key

394
00:19:13,280 --> 00:19:15,760
for one lock and then you
could get in very quickly

395
00:19:15,760 --> 00:19:20,760
in future, or if you had
multiple locks that, you know,

396
00:19:20,990 --> 00:19:22,953
were all keyed alike, once you
figure out the key for one,

397
00:19:22,953 --> 00:19:24,610
it's going to work for the rest.

398
00:19:24,610 --> 00:19:26,770
That's something that you can do.

399
00:19:26,770 --> 00:19:31,550
Let's examine, for a few
minutes, why this actually works

400
00:19:31,550 --> 00:19:34,370
and why locks sometimes accept keys

401
00:19:34,370 --> 00:19:37,020
that are cut incorrectly.

402
00:19:37,020 --> 00:19:39,510
So in this particular case,

403
00:19:39,510 --> 00:19:42,550
we have a set of
probability distributions.

404
00:19:42,550 --> 00:19:47,203
So this is the one cut,
two, three, four to six,

405
00:19:48,100 --> 00:19:53,010
for a Kwikset lock.
And we can notice that,

406
00:19:53,010 --> 00:19:54,010
this is where it's supposed to be,

407
00:19:54,010 --> 00:19:56,000
where it's supposed to be cut at,

408
00:19:56,000 --> 00:19:58,520
and if we're a little bit
above that or below that

409
00:19:58,520 --> 00:20:01,930
the probability falls
off relatively slowly,

410
00:20:01,930 --> 00:20:05,280
so that if we go exactly between two cuts,

411
00:20:05,280 --> 00:20:08,240
it still has a very high
chance of actually working

412
00:20:08,240 --> 00:20:10,423
on either the lower or the upper.

413
00:20:11,340 --> 00:20:14,293
This distribution here, a
fairly normal looking one,

414
00:20:15,200 --> 00:20:18,110
exists because the Kwikset smart key lock

415
00:20:18,110 --> 00:20:20,720
is a type of wafer tumbler.

416
00:20:20,720 --> 00:20:24,100
So wafers are symmetric and
what they'll actually accept,

417
00:20:24,100 --> 00:20:28,670
and it's also one with
very bad tolerances.

418
00:20:28,670 --> 00:20:32,880
If we pump that down a little
bit, we start to get it

419
00:20:32,880 --> 00:20:36,330
accepting less and less,
and so a lower probability

420
00:20:36,330 --> 00:20:41,020
of actually having a key that's
cut halfway in between work.

421
00:20:41,020 --> 00:20:45,270
And we can also look at what
happens with a pin tumbler lock

422
00:20:45,270 --> 00:20:48,760
in particular, when have pins involved,

423
00:20:48,760 --> 00:20:52,910
it becomes a much faster fall off

424
00:20:52,910 --> 00:20:55,330
when the key is cut too high.

425
00:20:55,330 --> 00:20:59,660
And the reason for that
is because if we look at

426
00:21:00,570 --> 00:21:05,240
what a pin tumbler lock
looks like on the inside,

427
00:21:05,240 --> 00:21:09,300
if that pin is too high,
it's going to stick out

428
00:21:09,300 --> 00:21:12,840
above this core here,
and when it sticks out

429
00:21:12,840 --> 00:21:16,590
above that core, it is
now physically blocked

430
00:21:16,590 --> 00:21:18,880
by the housing.

431
00:21:18,880 --> 00:21:21,410
It needs to stick up into this,

432
00:21:21,410 --> 00:21:24,830
and so we cannot turn that core at all.

433
00:21:24,830 --> 00:21:28,140
If it's more than 0.001
or 0.002 inches too high.

434
00:21:28,140 --> 00:21:31,670
So both the falloff on the
probability distribution

435
00:21:31,670 --> 00:21:35,930
is significantly faster, as
well as the amount too high

436
00:21:35,930 --> 00:21:38,270
it can be, before it starts falling off,

437
00:21:38,270 --> 00:21:41,040
is also significantly lower.

438
00:21:41,040 --> 00:21:43,080
Oops, that was the wrong slider there.

439
00:21:43,080 --> 00:21:46,700
And so we get a probability distribution

440
00:21:46,700 --> 00:21:50,460
that looks something a lot more like this,

441
00:21:50,460 --> 00:21:52,040
for a pin tumbler lock.

442
00:21:52,040 --> 00:21:54,920
So this would be a Kwikset
probability distribution

443
00:21:54,920 --> 00:21:59,240
for accepting a one cut key,

444
00:21:59,240 --> 00:22:01,500
so if it's a little bit too
high, it falls off quickly,

445
00:22:01,500 --> 00:22:03,680
if it's a bit low, it works out okay,

446
00:22:03,680 --> 00:22:06,253
and then two through six as well.

447
00:22:07,950 --> 00:22:11,450
In the case of a Schlage, we have 10 cuts

448
00:22:11,450 --> 00:22:14,060
and they're much more
closely spaced together.

449
00:22:14,060 --> 00:22:16,460
So now we have, even though
it's a pin tumbler lock,

450
00:22:16,460 --> 00:22:18,470
which generally has better tolerances,

451
00:22:18,470 --> 00:22:23,000
now we have a much higher
probability of it working.

452
00:22:23,000 --> 00:22:27,670
If we are somewhat between
these two positions.

453
00:22:27,670 --> 00:22:30,440
As that Schlage lock gets worn out,

454
00:22:30,440 --> 00:22:33,550
that increases as well significantly.

455
00:22:33,550 --> 00:22:38,530
So a very worn out pin
tumbler lock will now accept

456
00:22:38,530 --> 00:22:40,820
even if it's a full height below,

457
00:22:40,820 --> 00:22:44,290
it'll still let it work a lot easier.

458
00:22:44,290 --> 00:22:47,830
The way that that actually happens is,

459
00:22:47,830 --> 00:22:52,370
if we look at a lock here and
we cut one height too low,

460
00:22:52,370 --> 00:22:55,590
we can see that as that key
jiggles and moves in and out

461
00:22:55,590 --> 00:22:57,190
of the lock a little bit,

462
00:22:57,190 --> 00:23:00,330
it only has to bump this
driver pin up a tiny bit

463
00:23:00,330 --> 00:23:03,430
for it to actually get
lodged in the housing

464
00:23:03,430 --> 00:23:05,150
and allow this key to turn.

465
00:23:05,150 --> 00:23:07,410
And so that's something that does not have

466
00:23:07,410 --> 00:23:10,060
this hard mechanical
constraint of the housing,

467
00:23:10,060 --> 00:23:11,880
it just has to bump up a bit,

468
00:23:11,880 --> 00:23:13,810
and that's why if a key is cut too low

469
00:23:13,810 --> 00:23:16,930
for a pin tumbler lock,
it's a lot more permissive

470
00:23:16,930 --> 00:23:19,100
for what it will actually allow.

471
00:23:19,100 --> 00:23:21,440
So for a very worn Schlage lock,

472
00:23:21,440 --> 00:23:23,650
these are very close together.

473
00:23:23,650 --> 00:23:26,280
And so being close together means that

474
00:23:26,280 --> 00:23:30,840
the probability distributions
overlap by a lot,

475
00:23:30,840 --> 00:23:33,630
as well as, it's quite
wide in a worn lock,

476
00:23:33,630 --> 00:23:37,240
we get it to be somewhat
permissive as well

477
00:23:37,240 --> 00:23:38,440
for what it will accept.

478
00:23:42,830 --> 00:23:45,980
So that's lock tolerances,
that's sort of an interesting

479
00:23:45,980 --> 00:23:49,020
aside there, this particular
mathematical model

480
00:23:49,020 --> 00:23:52,030
that we've derived is
from both theoretical

481
00:23:52,030 --> 00:23:56,680
and then empirical confirmation,
that this is actually how

482
00:23:56,680 --> 00:24:00,620
locks behave when the keys are
slightly too high and too low

483
00:24:00,620 --> 00:24:03,020
And this is of course an
N dimensional distribution

484
00:24:03,020 --> 00:24:05,870
where they're N pins, so
what I was showing here

485
00:24:05,870 --> 00:24:08,483
is a slight simplification of that.

486
00:24:10,125 --> 00:24:13,400
So 243 keys is possible to brute force,

487
00:24:13,400 --> 00:24:16,860
but not practical in many situations.

488
00:24:16,860 --> 00:24:18,980
So what can we do to actually reduce

489
00:24:18,980 --> 00:24:20,470
that key space even further?

490
00:24:20,470 --> 00:24:23,200
One thing we can possibly
do is get a photograph

491
00:24:23,200 --> 00:24:24,400
of that key.

492
00:24:24,400 --> 00:24:27,140
So oftentimes you see
security guards and users

493
00:24:27,140 --> 00:24:30,190
leaving keys, lying out on
the desk in the public view.

494
00:24:30,190 --> 00:24:32,230
This is one of the most egregious cases,

495
00:24:32,230 --> 00:24:35,480
of these key Watchers
with transparent windows,

496
00:24:35,480 --> 00:24:39,460
behind a publicly accessible
desk with the facilities keys

497
00:24:39,460 --> 00:24:42,740
visible and photographable through that.

498
00:24:42,740 --> 00:24:44,270
And of course, people like to wear keys

499
00:24:44,270 --> 00:24:47,440
on their belt as well and that
can be photographed as well.

500
00:24:47,440 --> 00:24:49,610
If you can get a good enough photograph,

501
00:24:49,610 --> 00:24:52,700
you can superimpose these
depth and spacing lines

502
00:24:52,700 --> 00:24:54,780
and determine directly from the photo,

503
00:24:54,780 --> 00:24:56,170
what that key code is.

504
00:24:56,170 --> 00:24:58,730
And this is something that
I've got another talk coming

505
00:24:58,730 --> 00:25:00,760
in the next year or so about,

506
00:25:00,760 --> 00:25:03,540
all about how to do this and how to work

507
00:25:03,540 --> 00:25:07,550
with poor quality photographs
and releasing software

508
00:25:07,550 --> 00:25:10,493
to do this as well. But
that's not this talk.

509
00:25:11,530 --> 00:25:16,530
What happens though, if that
photograph is not great quality

510
00:25:17,420 --> 00:25:19,110
and how can we use other information

511
00:25:19,110 --> 00:25:21,420
to help deduce what it is?

512
00:25:21,420 --> 00:25:26,070
So here's an example of a vehicle
key that's left on a desk,

513
00:25:26,070 --> 00:25:29,090
photographed at a
distance of about 10 feet.

514
00:25:29,090 --> 00:25:31,540
We can try zooming in, but
that doesn't do much for us.

515
00:25:31,540 --> 00:25:32,850
This is incredibly grainy,

516
00:25:32,850 --> 00:25:35,800
there is not a whole lot
that we can tell from it.

517
00:25:35,800 --> 00:25:37,173
So what can we do?

518
00:25:38,090 --> 00:25:42,980
So let's first recognize that
this is a Ford vehicle key,

519
00:25:42,980 --> 00:25:47,240
and by looking it up,
we can find that it is

520
00:25:48,760 --> 00:25:53,760
eight positions by five possible depths.

521
00:25:53,800 --> 00:25:58,073
And it is a wafer tumbler lock,

522
00:25:58,983 --> 00:26:00,730
and of course, half heights,

523
00:26:00,730 --> 00:26:03,490
we'll visit in a few minutes about this,

524
00:26:03,490 --> 00:26:05,370
we will come back to that.

525
00:26:05,370 --> 00:26:10,370
But we have naively now
390,000 possible key differs

526
00:26:10,410 --> 00:26:12,430
for this particular key.

527
00:26:12,430 --> 00:26:15,210
Based on the photo, we
can't get a whole lot,

528
00:26:15,210 --> 00:26:16,630
but we can get something from it.

529
00:26:16,630 --> 00:26:21,630
So we can go on over to our
photos tab here and add a rule,

530
00:26:21,950 --> 00:26:23,980
basically looking at
that picture and saying,

531
00:26:23,980 --> 00:26:27,370
well, we know that one pin
is a little bit high cut,

532
00:26:27,370 --> 00:26:29,920
one is low and see if
we can narrow it down

533
00:26:29,920 --> 00:26:31,663
a little bit from there.

534
00:26:32,670 --> 00:26:37,280
So we have eight pins here,
we can see in the middle,

535
00:26:37,280 --> 00:26:40,010
these two, there's this
is number four and five

536
00:26:40,010 --> 00:26:44,320
are lining up with the top blank height.

537
00:26:44,320 --> 00:26:47,480
So this four and five, we
can be relatively confident,

538
00:26:47,480 --> 00:26:50,083
even from this poor quality
picture, is a one cut.

539
00:26:51,090 --> 00:26:53,860
And then six, seven, eight is beyond that,

540
00:26:53,860 --> 00:26:58,860
six is fairly deep, it looks
to be a three or deeper,

541
00:26:58,899 --> 00:27:00,803
but it's not the deepest because we have

542
00:27:00,803 --> 00:27:04,270
one that's deeper here, so
this is a three or a four.

543
00:27:04,270 --> 00:27:08,480
And then beyond that it's fairly
shallow, it might be a one,

544
00:27:08,480 --> 00:27:10,830
it might be a two, it's likely not a three

545
00:27:10,830 --> 00:27:12,490
or anything deeper than that.

546
00:27:12,490 --> 00:27:16,230
So we can start adding those rules in.

547
00:27:16,230 --> 00:27:20,090
So four and five are both one cuts,

548
00:27:20,090 --> 00:27:24,880
six is fairly deep, but not the deepest,

549
00:27:24,880 --> 00:27:28,570
and then seven and eight
are fairly high cut

550
00:27:28,570 --> 00:27:31,820
but we don't know exactly what.

551
00:27:31,820 --> 00:27:33,070
Popping back to our picture

552
00:27:33,070 --> 00:27:36,470
and looking at the first few
pins. We see one, two and three

553
00:27:36,470 --> 00:27:38,820
kind of make this bite pattern here.

554
00:27:38,820 --> 00:27:42,630
So this pin two is fairly deep,

555
00:27:42,630 --> 00:27:44,350
we don't know if it's
the absolute deepest,

556
00:27:44,350 --> 00:27:48,560
but let's say a three, four
or a five, and then pin three.

557
00:27:48,560 --> 00:27:49,830
Well, we know is not the shallowest,

558
00:27:49,830 --> 00:27:52,700
we know it's not the deepest,
that's about all we can tell,

559
00:27:52,700 --> 00:27:55,770
and pin one, well, we
know it's fairly shallow,

560
00:27:55,770 --> 00:27:59,000
so we can add that here as well.

561
00:27:59,000 --> 00:28:01,830
So pin two is quite deep
at three, four or five,

562
00:28:01,830 --> 00:28:04,930
pin three, we know it's not
the shallowest or the deepest

563
00:28:04,930 --> 00:28:07,950
and pin one is quite shallow.

564
00:28:07,950 --> 00:28:10,840
And we can add that rule
here, and we now get,

565
00:28:10,840 --> 00:28:15,840
there's 390,000
possibilities reduced to 216.

566
00:28:16,090 --> 00:28:20,820
That's pretty good, but
that's still a lot to try.

567
00:28:20,820 --> 00:28:23,390
The other thing that we can look at doing

568
00:28:23,390 --> 00:28:27,340
is recognizing that this
system is actually on

569
00:28:27,340 --> 00:28:29,310
what's called code books.

570
00:28:29,310 --> 00:28:34,310
So this particular type of
Ford key is one of only a few

571
00:28:36,020 --> 00:28:38,500
different differs that
will be manufactured,

572
00:28:38,500 --> 00:28:41,663
not all 390,000 possible ones.

573
00:28:42,620 --> 00:28:47,130
And that's just done to make
keying the locks up easier

574
00:28:47,130 --> 00:28:49,280
at the factory effectively.

575
00:28:49,280 --> 00:28:52,670
So we can add a rule for that
as well, under code books,

576
00:28:52,670 --> 00:28:57,020
this is a Ford fleet keying system.

577
00:28:57,020 --> 00:29:01,080
And by adding that, we now
see that there's only one key

578
00:29:01,080 --> 00:29:04,490
that's actually in the code
books that follows these rules

579
00:29:04,490 --> 00:29:08,170
that we determined and that's the 0151X

580
00:29:09,370 --> 00:29:11,750
And so, getting a better picture,

581
00:29:11,750 --> 00:29:14,070
if we're able to come back and get one,

582
00:29:14,070 --> 00:29:16,890
we would see that it is indeed an 0151X

583
00:29:16,890 --> 00:29:18,460
that we were photographing.

584
00:29:18,460 --> 00:29:20,900
And we can see now from
this much better picture,

585
00:29:20,900 --> 00:29:22,610
we can read off the code.

586
00:29:22,610 --> 00:29:26,150
So we have a two cut here,
it's slightly below the blank,

587
00:29:26,150 --> 00:29:28,800
followed by a very deep,
this is a four or a five,

588
00:29:28,800 --> 00:29:30,017
followed by 311322.

589
00:29:32,970 --> 00:29:36,270
And so we can see from looking at it here,

590
00:29:36,270 --> 00:29:41,270
that that is indeed what we
found for this particular key.

591
00:29:41,310 --> 00:29:46,310
So that is a combination of
both the photograph limitations

592
00:29:46,720 --> 00:29:49,180
that we found as well as
knowing that it must be

593
00:29:49,180 --> 00:29:51,670
in the code books. So
if you remove this rule,

594
00:29:51,670 --> 00:29:52,810
we can see that the code books

595
00:29:52,810 --> 00:29:55,710
actually only have 1700 possibilities.

596
00:29:55,710 --> 00:29:58,590
So that gives us a lot of narrowing down

597
00:29:58,590 --> 00:30:01,840
of what that particular key
can be, and in pin eight,

598
00:30:01,840 --> 00:30:05,930
it can never be a one depth
because it starts to taper off

599
00:30:05,930 --> 00:30:07,180
at the tip of the key there,

600
00:30:07,180 --> 00:30:10,483
so one will more
physically fit on that key.

601
00:30:11,420 --> 00:30:15,490
So that's sort of a cool
example of combining code books

602
00:30:15,490 --> 00:30:20,490
with photographs to determine
what a keys' final code is.

603
00:30:22,440 --> 00:30:24,880
We can also combine it
with these half heights

604
00:30:24,880 --> 00:30:26,680
that we talked about before.

605
00:30:26,680 --> 00:30:29,350
So if half heights are available

606
00:30:29,350 --> 00:30:32,630
for this particular type of key,

607
00:30:32,630 --> 00:30:35,030
if cutting it halfway between
a one and a two will work

608
00:30:35,030 --> 00:30:37,890
for both a one and a two,
we can see the effect

609
00:30:37,890 --> 00:30:39,580
that would have, and that would reduce it

610
00:30:39,580 --> 00:30:43,470
from 1700 possibilities to 460,

611
00:30:43,470 --> 00:30:46,000
that would tryout all possible locks

612
00:30:46,000 --> 00:30:49,410
that would be manufactured
based on these code books.

613
00:30:49,410 --> 00:30:52,630
And for many vehicle locks,
because they're wafer tumblers,

614
00:30:52,630 --> 00:30:55,000
they have relatively loose tolerances.

615
00:30:55,000 --> 00:30:57,600
That is actually the case,
you have both code books

616
00:30:57,600 --> 00:31:01,270
and half heights will
work, and so you have many

617
00:31:01,270 --> 00:31:04,790
of what's called tryout
key sets for vehicle locks.

618
00:31:04,790 --> 00:31:09,790
Which is a number of keys
that will try out most or all

619
00:31:10,060 --> 00:31:12,910
of the code book keys that are possible,

620
00:31:12,910 --> 00:31:15,680
that will let you then
determine what key is used

621
00:31:15,680 --> 00:31:19,503
in a particular vehicle or a
particular fleet of vehicles.

622
00:31:21,000 --> 00:31:25,330
Auto jigglers are sort of the
next stage down from that,

623
00:31:25,330 --> 00:31:27,540
and so they are not keys at all,

624
00:31:27,540 --> 00:31:30,850
they allow you to move them
up and down and angle them

625
00:31:30,850 --> 00:31:33,660
and sort of do some fuzzing to try

626
00:31:33,660 --> 00:31:35,840
even more combinations quickly.

627
00:31:35,840 --> 00:31:39,560
And the high quality auto
jigglers were somewhat

628
00:31:39,560 --> 00:31:43,160
intelligently designed to be effectively,

629
00:31:43,160 --> 00:31:47,710
these tryout key sets, except
adding that degree of freedom

630
00:31:47,710 --> 00:31:52,710
for up, down, in, out,
tilt, tilt so that we have,

631
00:31:53,090 --> 00:31:58,010
rather than 80 or 400,
we have only 10 of them

632
00:31:58,010 --> 00:32:01,520
that can work on many automotive locks

633
00:32:01,520 --> 00:32:03,880
and not manufacturer specific either.

634
00:32:03,880 --> 00:32:07,230
And of course, further down
that continuum is raking,

635
00:32:07,230 --> 00:32:09,380
which works in a similar way.

636
00:32:09,380 --> 00:32:11,780
So what happens if we don't
have a key to photograph

637
00:32:11,780 --> 00:32:13,400
or other information like that?

638
00:32:13,400 --> 00:32:16,870
Well, then we can decode by
looking at the lock itself.

639
00:32:16,870 --> 00:32:19,200
So here's sort of a funny
example where the key pin

640
00:32:19,200 --> 00:32:22,050
is visible in it's entirety
through the front of the lock,

641
00:32:22,050 --> 00:32:24,130
and so from this, we can tell
the length of the key pin

642
00:32:24,130 --> 00:32:27,440
and therefore the depth of
the first cut on that key.

643
00:32:27,440 --> 00:32:30,290
We can look deeper in the
lock using this device here,

644
00:32:30,290 --> 00:32:31,520
which is called a lock scope.

645
00:32:31,520 --> 00:32:33,530
So it's like the auto scopes that are used

646
00:32:33,530 --> 00:32:36,590
to look into your ear
at the doctor's office,

647
00:32:36,590 --> 00:32:39,670
and they shine light through
the back of this lock,

648
00:32:39,670 --> 00:32:42,020
and we can see then every pin through it

649
00:32:42,020 --> 00:32:44,740
with a little magnifier
that's inside of it.

650
00:32:44,740 --> 00:32:47,500
So this is cool, we can't
tell a whole lot from this,

651
00:32:47,500 --> 00:32:49,450
wouldn't it be nice if just
by looking at the bottom

652
00:32:49,450 --> 00:32:50,790
of the pins, we could actually tell

653
00:32:50,790 --> 00:32:54,190
how long they were in terms
of their total length.

654
00:32:54,190 --> 00:32:57,520
Well, enter colored painting kits.

655
00:32:57,520 --> 00:33:00,230
I kid you not, and they are colored,

656
00:33:00,230 --> 00:33:02,880
I kid you not, by length.

657
00:33:02,880 --> 00:33:06,930
So by seeing the color of the
pins that we actually look at

658
00:33:06,930 --> 00:33:10,540
in this lock scope, we can
tell how long our key pins are

659
00:33:10,540 --> 00:33:12,783
and therefore the key code.

660
00:33:13,797 --> 00:33:18,430
So that last picture was a
locksmith's re-keying version,

661
00:33:18,430 --> 00:33:21,290
this is for an end user and
we see colored pins as well,

662
00:33:21,290 --> 00:33:23,070
it makes it a little bit easier to use,

663
00:33:23,070 --> 00:33:25,890
but you can read the pins from that.

664
00:33:25,890 --> 00:33:28,720
So here's an example of
looking down a Sargent lock

665
00:33:28,720 --> 00:33:31,140
with that lock scope, and we can see

666
00:33:31,140 --> 00:33:34,350
there's gold, green, gold, green, gold.

667
00:33:34,350 --> 00:33:35,540
It's a little hard to see at the end,

668
00:33:35,540 --> 00:33:38,023
but that's a purple pen at the very end,

669
00:33:38,960 --> 00:33:40,820
Looking at the Sargent chart,

670
00:33:40,820 --> 00:33:43,330
we can see that a gold bottom pin must be

671
00:33:43,330 --> 00:33:45,450
a one, four, seven or a zero,

672
00:33:45,450 --> 00:33:48,610
which is what Sargent
calls, it's 10 depth.

673
00:33:48,610 --> 00:33:53,610
Green is 3,6,9, and purple is 2,5,8.

674
00:33:55,410 --> 00:33:57,810
So based on that, we can actually go ahead

675
00:33:57,810 --> 00:34:01,220
and severely limit what
the key could possibly be

676
00:34:01,220 --> 00:34:03,073
for this particular system.

677
00:34:03,910 --> 00:34:08,620
So this is a Sargent system,
it has six pins and 10 depths,

678
00:34:08,620 --> 00:34:11,023
and we use one based numbering.

679
00:34:12,240 --> 00:34:14,010
And we'll go ahead and under photos,

680
00:34:14,010 --> 00:34:16,540
we can add that particular rule.

681
00:34:16,540 --> 00:34:19,650
And so we tell it that
it is a Sargent system

682
00:34:19,650 --> 00:34:24,650
and that we have gold, green,
gold, green, gold, purple,

683
00:34:27,270 --> 00:34:31,363
and that reduces our key space
from a million down to 1728.

684
00:34:32,260 --> 00:34:34,260
It's worth noting
incidentally, that half height

685
00:34:34,260 --> 00:34:36,540
is not gonna help us here
even if this lock accepts it,

686
00:34:36,540 --> 00:34:40,140
which it doesn't, because
half heights would not be able

687
00:34:40,140 --> 00:34:43,350
to try both of two
combinations three apart,

688
00:34:43,350 --> 00:34:45,710
and so we get 1728 as well

689
00:34:45,710 --> 00:34:48,063
with just a slightly squished chart there.

690
00:34:48,980 --> 00:34:51,560
So this is not bad, it's a
lot better than a million,

691
00:34:51,560 --> 00:34:53,160
but we need to do a bit better than that

692
00:34:53,160 --> 00:34:55,277
to get a single working key.

693
00:34:55,277 --> 00:34:58,780
The one thing we can notice is
that if this pin one is zero,

694
00:34:58,780 --> 00:35:00,840
then pin two cannot be a nine,

695
00:35:00,840 --> 00:35:02,630
that would be a MACS violation.

696
00:35:02,630 --> 00:35:06,030
So Sargent has a MACS of
seven, we can go ahead

697
00:35:06,030 --> 00:35:09,880
and add that on in there, and
so now we've reduced to 1166,

698
00:35:09,880 --> 00:35:12,040
that's getting a little bit better.

699
00:35:12,040 --> 00:35:14,970
What else can we do? Well,
remember looking at this lock,

700
00:35:14,970 --> 00:35:17,900
we have this shear line
visible, and so that tells us

701
00:35:17,900 --> 00:35:22,530
that this is a zero cut in
this particular position,

702
00:35:22,530 --> 00:35:27,530
so a very high cut depth on that key.

703
00:35:29,410 --> 00:35:32,380
We can go further and use
a lock pick to lift up

704
00:35:32,380 --> 00:35:34,840
that first pin and look at
the second to see if we can

705
00:35:34,840 --> 00:35:37,500
see something similar, and we don't.

706
00:35:37,500 --> 00:35:40,390
But, so here's the lock pick in there,

707
00:35:40,390 --> 00:35:44,673
but on the third pin, we
do, we can see a shear line

708
00:35:46,150 --> 00:35:48,300
at that same position telling
us that that third pin

709
00:35:48,300 --> 00:35:49,537
is also a one cut.

710
00:35:49,537 --> 00:35:52,080
And we can continue
backwards through the lock,

711
00:35:52,080 --> 00:35:53,750
seeing that there are not any visible

712
00:35:53,750 --> 00:35:55,453
shear lines beyond that.

713
00:35:56,460 --> 00:36:00,750
So how does that apply to
the lock that we have here?

714
00:36:00,750 --> 00:36:02,480
Well, we can go to known shear lines,

715
00:36:02,480 --> 00:36:05,420
and we know that pin one,
has one as a shear line,

716
00:36:05,420 --> 00:36:07,880
pin three has a one you can add that rule,

717
00:36:07,880 --> 00:36:11,450
and now that severely limits
our key space down to 44.

718
00:36:11,450 --> 00:36:13,350
Moreover, because we
looked all the way back,

719
00:36:13,350 --> 00:36:16,630
we know that pin five does
not have a shear line at one.

720
00:36:16,630 --> 00:36:20,183
So it's only possibilities
are 4, 7 and 10.

721
00:36:21,150 --> 00:36:24,283
So we can put that into there,

722
00:36:25,610 --> 00:36:28,360
and now we're down to 32 different keys.

723
00:36:28,360 --> 00:36:30,740
This is something that's
very brute forcible,

724
00:36:30,740 --> 00:36:33,180
it's easy to make 32 and try it,

725
00:36:33,180 --> 00:36:36,070
that will cost us about
$10 and take three minutes

726
00:36:36,070 --> 00:36:40,900
to try 32 keys out. Not bad,
but we can do better than that.

727
00:36:40,900 --> 00:36:43,280
And the way we can do better
than that is impressioning,

728
00:36:43,280 --> 00:36:45,620
in particular with this extra information

729
00:36:45,620 --> 00:36:46,893
that's available to us.

730
00:36:47,870 --> 00:36:49,480
Before we talk about how to impression

731
00:36:49,480 --> 00:36:51,940
this particular lock
with extra information,

732
00:36:51,940 --> 00:36:52,870
let's talk a little bit

733
00:36:52,870 --> 00:36:55,630
about how impressioning works in general.

734
00:36:55,630 --> 00:36:59,800
So we put the key in,
we put a blank key in.

735
00:36:59,800 --> 00:37:03,151
So this was cut all zero bitted,
the highest possible cuts.

736
00:37:03,151 --> 00:37:06,290
And when we turn the key, there's
a couple of pins that bind

737
00:37:06,290 --> 00:37:08,560
that don't let the lock turn.

738
00:37:08,560 --> 00:37:11,050
If we turn it really, really hard,

739
00:37:11,050 --> 00:37:14,440
then those pins are going
to bind really, really hard.

740
00:37:14,440 --> 00:37:16,720
And if we then wiggle the key in and out,

741
00:37:16,720 --> 00:37:19,780
up and down a little bit,
those pins that are binding

742
00:37:19,780 --> 00:37:22,840
really hard are gonna
leave a mark on the key

743
00:37:22,840 --> 00:37:24,523
that we can then look at.

744
00:37:25,830 --> 00:37:28,808
So if we impression this, one
of these pins that's binding

745
00:37:28,808 --> 00:37:31,960
is gonna leave a mark,
and we take the key out

746
00:37:31,960 --> 00:37:35,280
and look at that mark and
see it's in position two.

747
00:37:35,280 --> 00:37:38,650
So cut two is not a zero
cut, because if it were,

748
00:37:38,650 --> 00:37:41,270
if that were a shear line, then
the pin would not have bound

749
00:37:41,270 --> 00:37:42,910
it wouldn't have left that mark.

750
00:37:42,910 --> 00:37:46,360
So we cut it down, put the
key in and impression again,

751
00:37:46,360 --> 00:37:48,930
and we take it out and we
see now there's no more mark

752
00:37:48,930 --> 00:37:50,910
on pin two, but there's one on pin four,

753
00:37:50,910 --> 00:37:54,260
which tells us that pin four
is binding, it's not a zero.

754
00:37:54,260 --> 00:37:57,520
We cut it down and we repeat the process,

755
00:37:57,520 --> 00:38:00,650
and so pin four is still
leaving an impression mark,

756
00:38:00,650 --> 00:38:03,950
so we file it down one
more time, impression it,

757
00:38:03,950 --> 00:38:06,150
take it out, pin four is still
leaving an impression mark,

758
00:38:06,150 --> 00:38:09,800
file it down one more time,
take it out, impression it,

759
00:38:09,800 --> 00:38:12,240
and now we see the pin five
is the only one binding.

760
00:38:12,240 --> 00:38:14,530
So pin four has stopped
leaving an impression mark

761
00:38:14,530 --> 00:38:18,320
and pin five is now, so we
know it's not as zero cut.

762
00:38:18,320 --> 00:38:21,690
We file it down, and then we're
going to repeat that process

763
00:38:21,690 --> 00:38:23,940
filing until when we try to impression

764
00:38:23,940 --> 00:38:27,833
and it's the right code, the
lock is just going to open.

765
00:38:28,690 --> 00:38:30,240
So that's how impressioning
works in general,

766
00:38:30,240 --> 00:38:35,040
starting from a blank and
ending with any particular lock

767
00:38:35,040 --> 00:38:36,940
or with a key for that particular lock.

768
00:38:36,940 --> 00:38:39,212
One piece of software that I'm releasing

769
00:38:39,212 --> 00:38:43,300
a modification of this, is a
little game that you can try.

770
00:38:43,300 --> 00:38:46,510
So you put it in and you could
make the lock visible or not,

771
00:38:46,510 --> 00:38:48,910
as you see fit, impression it

772
00:38:48,910 --> 00:38:50,730
and take the key back out again.

773
00:38:50,730 --> 00:38:52,900
And then you can sort of
practice your impressioning

774
00:38:52,900 --> 00:38:55,650
that way until you eventually
get the key for it.

775
00:38:55,650 --> 00:38:57,360
So that's something you might enjoy,

776
00:38:57,360 --> 00:38:59,310
But let's look at how that applies

777
00:38:59,310 --> 00:39:01,840
to this particular system here.

778
00:39:01,840 --> 00:39:04,260
If you wanted impression this lock,

779
00:39:04,260 --> 00:39:06,323
so let's start by creating a lock here.

780
00:39:07,380 --> 00:39:09,850
We don't actually need
to start with a blank

781
00:39:09,850 --> 00:39:14,587
because if we look at our
key space, a 111 et cetera,

782
00:39:15,520 --> 00:39:17,170
cannot possibly be the code.

783
00:39:17,170 --> 00:39:20,287
The highest cut our code can be is 131342,

784
00:39:23,274 --> 00:39:25,980
and in our impressioning
tab, it tells us that.

785
00:39:25,980 --> 00:39:30,009
So that's what we actually wanna
start by cutting our key to

786
00:39:30,009 --> 00:39:34,460
131342, and we put it into the lock.

787
00:39:34,460 --> 00:39:37,816
Now this lock, to give it
a couple examples for what

788
00:39:37,816 --> 00:39:41,700
our actual code is inside the lock,

789
00:39:41,700 --> 00:39:43,380
might be a, 161348,

790
00:39:51,520 --> 00:39:54,490
So that's what the key is,
we're ultimately searching for,

791
00:39:54,490 --> 00:39:56,990
but of course, we don't know that yet.

792
00:39:56,990 --> 00:40:00,120
So we're gonna impression
this key and take it out,

793
00:40:00,120 --> 00:40:03,370
and we see that position two is binding,

794
00:40:03,370 --> 00:40:07,363
so position two is not
actually the correct cut.

795
00:40:08,197 --> 00:40:12,620
And so what we'll do is scroll
on up and say that pin two

796
00:40:12,620 --> 00:40:13,940
is not at depth three.

797
00:40:13,940 --> 00:40:16,540
It's not at depth three because
it was cut to depth three

798
00:40:16,540 --> 00:40:17,980
and it's leaving an impression mark.

799
00:40:17,980 --> 00:40:22,400
So we'll add that rule, that's
telling us to try a six, next

800
00:40:22,400 --> 00:40:24,080
And we know a six is going to work

801
00:40:24,080 --> 00:40:27,540
because it's the only position
left that pin two can be,

802
00:40:27,540 --> 00:40:29,780
so our impression mark should
show up somewhere else.

803
00:40:29,780 --> 00:40:32,890
So we're gonna file our
key down to a six depth,

804
00:40:32,890 --> 00:40:37,220
put it in, and impression
it, and take it out again.

805
00:40:37,220 --> 00:40:40,230
And we now see that pin five is binding,

806
00:40:40,230 --> 00:40:42,980
and pin five is now leaving a mark.

807
00:40:42,980 --> 00:40:46,860
So we can scroll on up
and tell it that pin five,

808
00:40:46,860 --> 00:40:49,620
which was cut to a two has...

809
00:40:50,550 --> 00:40:54,150
Sorry, not pin five, my
apologies, pin six, the last pin.

810
00:40:54,150 --> 00:40:56,200
So pin six, that was cut to a two

811
00:40:56,200 --> 00:40:57,550
has no shear line line there

812
00:40:57,550 --> 00:40:59,470
because it leaves an impression mark.

813
00:40:59,470 --> 00:41:01,530
And so we'll add that rule to the system,

814
00:41:01,530 --> 00:41:03,170
no shear line there.

815
00:41:03,170 --> 00:41:06,463
And it tells us the next tryout is 161345,

816
00:41:07,890 --> 00:41:11,073
because five is the next value
that pin six can take on.

817
00:41:11,930 --> 00:41:13,970
So we try that, pin six, we'll cut it down

818
00:41:13,970 --> 00:41:18,970
from a two to a five and we'll
put it in, and impression it.

819
00:41:19,830 --> 00:41:22,000
And when we take it out,
we'll see this impression mark

820
00:41:22,000 --> 00:41:23,310
left on pin six.

821
00:41:23,310 --> 00:41:27,280
So we know that pin six is
not a five depth either,

822
00:41:27,280 --> 00:41:30,340
and so we'll tell it that,
no shear line at depth five.

823
00:41:30,340 --> 00:41:32,960
And so it tells us to try an eight now,

824
00:41:32,960 --> 00:41:35,120
and we can see that this
has to be what pin six is.

825
00:41:35,120 --> 00:41:37,430
So if this doesn't work,
we've done something wrong.

826
00:41:37,430 --> 00:41:41,170
So we'll file it down to an
eight and we'll put our key in

827
00:41:41,170 --> 00:41:42,420
and we'll hit impression.

828
00:41:43,619 --> 00:41:44,860
And this time the lock opens

829
00:41:44,860 --> 00:41:47,160
because we found the correct code.

830
00:41:47,160 --> 00:41:49,183
So as we can see, 161348.

831
00:41:51,120 --> 00:41:54,810
This was done in only
three impressioning steps,

832
00:41:54,810 --> 00:41:57,980
whereas it would have taken 19 to get down

833
00:41:57,980 --> 00:42:01,520
to this particular code
using impressioning

834
00:42:01,520 --> 00:42:02,950
with no other information,

835
00:42:02,950 --> 00:42:06,690
just going down one at a time, at a time.

836
00:42:06,690 --> 00:42:11,680
So very, very powerful tool
that will let us decode locks

837
00:42:11,680 --> 00:42:13,610
with the impressioning technique.

838
00:42:13,610 --> 00:42:15,050
So let's look at another arrangement

839
00:42:15,050 --> 00:42:17,510
that can be useful to us,
which is keyed alike systems.

840
00:42:17,510 --> 00:42:20,820
So password reuse is generally
accepted to be a poor form,

841
00:42:20,820 --> 00:42:23,600
key reuse is common and called keyed alike

842
00:42:23,600 --> 00:42:27,680
and seen in many cases, so
there's a whole big old list here

843
00:42:27,680 --> 00:42:30,610
Many of them, if you're interested
in this, I encourage you

844
00:42:30,610 --> 00:42:33,787
to check out Howard Payne and
Deviant Ollam's amazing talk,

845
00:42:33,787 --> 00:42:36,717
"This key is your key, this
he is my key" at Hope 11.

846
00:42:36,717 --> 00:42:40,040
And it touches on a whole bunch
of these and what they do.

847
00:42:40,040 --> 00:42:41,400
Here's a couple that I've discovered,

848
00:42:41,400 --> 00:42:43,050
that wasn't mentioned in that talk

849
00:42:43,050 --> 00:42:44,440
that I think are interesting.

850
00:42:44,440 --> 00:42:47,420
So one is construction cores,

851
00:42:47,420 --> 00:42:49,660
so if you ever see an interchangeable core

852
00:42:49,660 --> 00:42:53,515
that's got a color on
it, black, red or green,

853
00:42:53,515 --> 00:42:55,930
that's usually a construction core,

854
00:42:55,930 --> 00:42:57,920
it's just used when the
buildings under construction,

855
00:42:57,920 --> 00:42:59,960
and it gets swapped out once it's done.

856
00:42:59,960 --> 00:43:03,860
These are all keyed alike, so
if you find say a green best,

857
00:43:03,860 --> 00:43:06,510
or a black Schlage, you can
look up what the code is

858
00:43:06,510 --> 00:43:08,380
and kind of cut a key for that

859
00:43:08,380 --> 00:43:11,210
without doing any more decoding.

860
00:43:11,210 --> 00:43:13,700
Traffic controller boxes
are like that as well,

861
00:43:13,700 --> 00:43:16,330
this little upper box is
for emergency services

862
00:43:16,330 --> 00:43:17,880
to manually control the light,

863
00:43:17,880 --> 00:43:20,650
and those keys are universal
across North America.

864
00:43:20,650 --> 00:43:23,720
And then this lower key hole
is for maintaining the system,

865
00:43:23,720 --> 00:43:26,150
and there's only a couple
of those different keys

866
00:43:26,150 --> 00:43:29,210
that are used across North America.

867
00:43:29,210 --> 00:43:31,940
Here's a great example, from a
bunch of keyed alike systems.

868
00:43:31,940 --> 00:43:35,350
So we have an enter phone box
here, this is a mere com box.

869
00:43:35,350 --> 00:43:37,470
So opening it up to service the box,

870
00:43:37,470 --> 00:43:40,930
this is a mere com 549
key and that's universal

871
00:43:40,930 --> 00:43:43,020
for all of these mere com boxes.

872
00:43:43,020 --> 00:43:46,410
It's also got a postal key
here so that the post worker

873
00:43:46,410 --> 00:43:49,650
can open the box or can
open the door and get in

874
00:43:49,650 --> 00:43:51,870
and deliver your mail.

875
00:43:51,870 --> 00:43:54,440
This box beside it is a little key box

876
00:43:54,440 --> 00:43:56,762
that the power company uses to get in

877
00:43:56,762 --> 00:43:59,190
because presumably this
particular facility

878
00:43:59,190 --> 00:44:01,500
will have a customer
owned transformer vault,

879
00:44:01,500 --> 00:44:03,410
somewhere inside.

880
00:44:03,410 --> 00:44:07,140
We also see these two building owned keys,

881
00:44:07,140 --> 00:44:09,370
we don't know what they're
for, but lots of ways

882
00:44:09,370 --> 00:44:10,330
to get through this door,

883
00:44:10,330 --> 00:44:13,220
three of which are key to like systems.

884
00:44:13,220 --> 00:44:15,680
Here's an example of a postal lock box,

885
00:44:15,680 --> 00:44:17,357
this one is an abloy postal box.

886
00:44:18,500 --> 00:44:21,640
So in Canada, our postal
service use abloy,

887
00:44:21,640 --> 00:44:23,230
very, very good choice.

888
00:44:23,230 --> 00:44:27,100
It's somewhat negated by
this Dorking lock here,

889
00:44:27,100 --> 00:44:29,990
which is not only a poor
tolerance wafer lock,

890
00:44:29,990 --> 00:44:33,810
but it's also keyed alike,
and these Dorking keys,

891
00:44:33,810 --> 00:44:36,380
any of them will open it.

892
00:44:36,380 --> 00:44:38,640
If it's not something
that we already know,

893
00:44:38,640 --> 00:44:40,580
what the key is, for
the keyed alike system,

894
00:44:40,580 --> 00:44:42,060
we can determine what that key is,

895
00:44:42,060 --> 00:44:43,750
by disassembling the lock.

896
00:44:43,750 --> 00:44:45,283
And then once we get the key for one lock,

897
00:44:45,283 --> 00:44:48,630
it's gonna work for all of
them, if they're keyed alike.

898
00:44:48,630 --> 00:44:53,150
So to do that, we need to
get the lock out somehow.

899
00:44:53,150 --> 00:44:56,030
So once the door is open, you can unscrew

900
00:44:56,030 --> 00:44:58,860
the retaining screw and
then unscrew the lock,

901
00:44:58,860 --> 00:45:01,740
at which point we can
take off the tailpiece

902
00:45:01,740 --> 00:45:04,390
and get these pins to shear line somehow.

903
00:45:04,390 --> 00:45:06,990
Either shimming through
the back or picking,

904
00:45:06,990 --> 00:45:09,230
and then we can look at what the pins are

905
00:45:09,230 --> 00:45:10,770
on the inside of it.

906
00:45:10,770 --> 00:45:14,210
So in this particular
case, we have a lock,

907
00:45:14,210 --> 00:45:16,514
we can see how long these pins are

908
00:45:16,514 --> 00:45:18,390
and that particular pattern

909
00:45:18,390 --> 00:45:20,160
that the pins make if we invert it.

910
00:45:20,160 --> 00:45:21,753
So it's upside down, that's gonna give us

911
00:45:21,753 --> 00:45:23,180
what the key looks like.

912
00:45:23,180 --> 00:45:25,020
And so we can see, we put the key in

913
00:45:25,020 --> 00:45:27,190
and it doesn't need work
and we can figure out

914
00:45:27,190 --> 00:45:30,563
what exactly that key is going
to look like from the lock.

915
00:45:31,490 --> 00:45:33,410
If you don't wanna have to
shimmer through the back,

916
00:45:33,410 --> 00:45:35,260
you can also take off this brass plate,

917
00:45:35,260 --> 00:45:38,680
which is an awful task
to do, but it does work.

918
00:45:38,680 --> 00:45:40,880
And if you wanna have a bit more time

919
00:45:40,880 --> 00:45:43,290
to do this decoding and disassembly,

920
00:45:43,290 --> 00:45:46,090
one thing you can do
as well is replace it,

921
00:45:46,090 --> 00:45:49,610
temporarily at least, with
a lock that looks like this.

922
00:45:49,610 --> 00:45:53,780
And that's going to work no
matter what key enters the lock.

923
00:45:53,780 --> 00:45:57,650
So anyone that tries to get
in is not going to be blocked

924
00:45:57,650 --> 00:45:58,960
and no one's going to be the wiser

925
00:45:58,960 --> 00:46:01,713
while you have the lock
out for disassembly.

926
00:46:03,310 --> 00:46:05,070
Medecos are very nice to us,

927
00:46:05,070 --> 00:46:07,600
they have these nice
set screws at the top,

928
00:46:07,600 --> 00:46:10,270
and so we can pull that
out and dump the pin stack.

929
00:46:10,270 --> 00:46:13,210
And so we can see in this pin
stack here, we have a key pin,

930
00:46:13,210 --> 00:46:18,200
we can read both the angle
and the depth of it from that.

931
00:46:18,200 --> 00:46:19,920
This one happens to
have some master wafer,

932
00:46:19,920 --> 00:46:20,960
so it's not keyed alike

933
00:46:20,960 --> 00:46:22,640
and we'll talk about how
to handle that later,

934
00:46:22,640 --> 00:46:27,070
but we can see a 0.025 inch, one wafer

935
00:46:27,070 --> 00:46:28,810
and a 0.05, two wafer.

936
00:46:28,810 --> 00:46:31,560
In this case, we only needed to remove

937
00:46:31,560 --> 00:46:36,220
these first two pin stacks
because we got some information

938
00:46:36,220 --> 00:46:38,930
about the lock already, and
the first two pin stacks

939
00:46:38,930 --> 00:46:41,830
are the only things that we
needed more information about.

940
00:46:42,880 --> 00:46:44,820
And of course, because
of these set screws,

941
00:46:44,820 --> 00:46:47,040
we don't have to worry
about this awful brass piece

942
00:46:47,040 --> 00:46:49,380
or shimming it, et cetera.

943
00:46:49,380 --> 00:46:50,770
If you're interested
in this sort of thing,

944
00:46:50,770 --> 00:46:52,260
I strongly recommend you check out

945
00:46:52,260 --> 00:46:54,840
Mollack's amazing talk,
"Please do not duplicate

946
00:46:54,840 --> 00:46:57,470
attacking the Knox box," from DEF CON 26.

947
00:46:57,470 --> 00:46:59,870
It's all about doing attacks like this,

948
00:46:59,870 --> 00:47:03,070
taking locks apart and looking
at the Knox box systems,

949
00:47:03,070 --> 00:47:06,600
which is keyed alike
across many jurisdictions

950
00:47:06,600 --> 00:47:08,670
in North America.

951
00:47:08,670 --> 00:47:11,810
So that's keyed alike systems,
what we can do with that

952
00:47:11,810 --> 00:47:16,350
is start to analyze everything
that we've looked at so far

953
00:47:16,350 --> 00:47:20,250
and figure out how to formalize
it and how to determine

954
00:47:20,250 --> 00:47:22,140
what the best next step is,

955
00:47:22,140 --> 00:47:24,973
and we can do that by looking
at information theory.

956
00:47:26,270 --> 00:47:28,730
So you've likely heard of the concept

957
00:47:28,730 --> 00:47:31,310
of at entropy of a password before,

958
00:47:31,310 --> 00:47:33,380
we'll talk a bit about
what exactly that means.

959
00:47:33,380 --> 00:47:35,900
So information is stuff we know

960
00:47:35,900 --> 00:47:38,580
and entropy is stuff we don't know.

961
00:47:38,580 --> 00:47:40,960
So in the case of a stoplight,
it's either red or green

962
00:47:40,960 --> 00:47:44,470
and that is information that's,
in the case of red or green,

963
00:47:44,470 --> 00:47:47,460
one bit of information
because it's a zero or a one,

964
00:47:47,460 --> 00:47:49,056
that's ignoring yellow.

965
00:47:49,056 --> 00:47:52,317
When it's a random variable,
that's something we don't know,

966
00:47:52,317 --> 00:47:54,120
and so that's entropy.

967
00:47:54,120 --> 00:47:56,180
And so a key or a password has entropy

968
00:47:56,180 --> 00:47:58,920
because we do not know it, and
we're trying to determine it

969
00:47:58,920 --> 00:48:01,283
to get into that particular lock.

970
00:48:02,500 --> 00:48:05,350
So how do we measure the
entropy? So it's in bits,

971
00:48:05,350 --> 00:48:07,020
so a coin flip is a zero or a one,

972
00:48:07,020 --> 00:48:08,600
so it has one bit of entropy,

973
00:48:08,600 --> 00:48:11,850
a random number from zero
to 255 has eight bits,

974
00:48:11,850 --> 00:48:15,530
since eight bits gonna
code number is zero to 255,

975
00:48:15,530 --> 00:48:20,440
a random number one to 10, has 3.32 bits.

976
00:48:20,440 --> 00:48:23,720
Well, how do we have a
fractional number of bits?

977
00:48:23,720 --> 00:48:26,260
Well, we can think of
it like the following;

978
00:48:26,260 --> 00:48:28,580
We have three random numbers, one to 10,

979
00:48:28,580 --> 00:48:31,620
that is a three digit number,
and so that can be encoded

980
00:48:31,620 --> 00:48:34,870
with one to 1000, or zero to 999,

981
00:48:34,870 --> 00:48:37,160
and that fits very well into 10 bits,

982
00:48:37,160 --> 00:48:42,155
which can encode zero to 1023,
so two to the 10 minus one.

983
00:48:42,155 --> 00:48:46,030
So 10 bits will easily
and code zero to 999

984
00:48:46,030 --> 00:48:48,230
with not a whole lot leftover.

985
00:48:48,230 --> 00:48:49,603
And so 10 bits divided by three

986
00:48:49,603 --> 00:48:52,650
because we're storing three
random numbers inside of it,

987
00:48:52,650 --> 00:48:56,890
is 3.33, which is very
close to that 3.32 figure.

988
00:48:56,890 --> 00:48:59,400
If we extend the number
that we're storing,

989
00:48:59,400 --> 00:49:01,390
so instead of three random
numbers, we try to store

990
00:49:01,390 --> 00:49:04,690
six or nine or 1000, as
that tends to infinity,

991
00:49:04,690 --> 00:49:06,903
this number tends to 3.32.

992
00:49:09,780 --> 00:49:13,340
This is mathematically
represented with a log,

993
00:49:13,340 --> 00:49:17,540
so the entropy of a piece of
information can be thought of

994
00:49:17,540 --> 00:49:20,350
as the number of bits it
takes to write it down

995
00:49:20,350 --> 00:49:25,350
or write down a number from
zero to the total value

996
00:49:25,570 --> 00:49:28,590
that that information can possibly be.

997
00:49:28,590 --> 00:49:32,023
And so that would be the
log base two of that number.

998
00:49:32,880 --> 00:49:35,280
So the number of bits of
entropy which is represented

999
00:49:35,280 --> 00:49:38,710
by the Greek letter, Eta in modern Greek,

1000
00:49:38,710 --> 00:49:40,950
for a random variable with N outcomes,

1001
00:49:40,950 --> 00:49:43,550
is just log base two of N.

1002
00:49:43,550 --> 00:49:46,510
So a fair coin flip has
two possible outcomes,

1003
00:49:46,510 --> 00:49:49,950
Log base two of two is, that
should not say two bits,

1004
00:49:49,950 --> 00:49:52,193
that is a typo, one bit.

1005
00:49:52,193 --> 00:49:57,193
A random number from zero to
255 is log base two of 256

1006
00:49:57,430 --> 00:50:00,191
because zero is not counted here,

1007
00:50:00,191 --> 00:50:04,050
or is counting here, so
that's 256 possible options,

1008
00:50:04,050 --> 00:50:07,050
which is eight bits, and a
random number of one to 10

1009
00:50:07,050 --> 00:50:10,003
is log base two of 10, which is 3.322,

1010
00:50:11,127 --> 00:50:13,010
what we looked at before.

1011
00:50:13,010 --> 00:50:15,443
So a couple of examples
of entropy within keys,

1012
00:50:17,010 --> 00:50:19,477
that is the number of bits,
the piece of information,

1013
00:50:19,477 --> 00:50:20,510
so the key or the password,

1014
00:50:20,510 --> 00:50:22,450
once we do have that information.

1015
00:50:22,450 --> 00:50:24,310
So an eight character ASCII password,

1016
00:50:24,310 --> 00:50:27,900
so that's eight bytes
times eight bits per byte

1017
00:50:27,900 --> 00:50:30,450
is 256 bits of entropy.

1018
00:50:30,450 --> 00:50:33,320
This, many of you will be
screaming at your monitor,

1019
00:50:33,320 --> 00:50:37,040
is wrong, because some characters

1020
00:50:37,040 --> 00:50:38,220
are more likely than others.

1021
00:50:38,220 --> 00:50:41,880
Some characters are not used
at all in most passwords

1022
00:50:41,880 --> 00:50:45,010
and of course, dictionary attacks exists,

1023
00:50:45,010 --> 00:50:48,040
so certain passwords are
more common than others.

1024
00:50:48,040 --> 00:50:49,790
And so that does reduce the entropy,

1025
00:50:49,790 --> 00:50:52,460
we'll look at why in a little bit.

1026
00:50:52,460 --> 00:50:54,770
For a 10 digit passcode,
three characters long,

1027
00:50:54,770 --> 00:50:56,930
assuming all combinations
are equally likely,

1028
00:50:56,930 --> 00:51:00,350
we have 9.97 bits, which makes
sense, a 1000 combinations,

1029
00:51:00,350 --> 00:51:03,090
they are a little bit shy of 1024,

1030
00:51:03,090 --> 00:51:05,200
which would be exactly 10 bits.

1031
00:51:05,200 --> 00:51:09,290
And EVA MCS, so that's the
magnetic coding system key.

1032
00:51:09,290 --> 00:51:13,230
It has four rotors and eight
positions each for each rotor.

1033
00:51:13,230 --> 00:51:15,140
So that's eight to the power of four,

1034
00:51:15,140 --> 00:51:18,400
4096 or 12 bits exactly, of entropy,

1035
00:51:18,400 --> 00:51:21,420
and a Schlage five pin system
has five to the power of 10

1036
00:51:21,420 --> 00:51:26,420
or a 100,000 combinations, log
two of 100,000 is 16.6 bits.

1037
00:51:27,050 --> 00:51:31,680
So that's a couple of
examples of how much entropy

1038
00:51:31,680 --> 00:51:33,420
is in a system.

1039
00:51:33,420 --> 00:51:35,220
In the software that we have here,

1040
00:51:35,220 --> 00:51:38,300
it gives you that at
the start and at the end

1041
00:51:38,300 --> 00:51:40,010
of the rules that you've applied.

1042
00:51:40,010 --> 00:51:43,670
So in this particular case, if
we look at a Schlage system,

1043
00:51:43,670 --> 00:51:44,610
oopsies,

1044
00:51:44,610 --> 00:51:48,470
five pins with 10 possible
depths, so 100,000

1045
00:51:48,470 --> 00:51:52,480
and then we have 16.6 right there.

1046
00:51:52,480 --> 00:51:54,580
And you can play around with
that to see what happens

1047
00:51:54,580 --> 00:51:58,223
as you change the number
of depths and pins.

1048
00:51:59,785 --> 00:52:02,990
So if they're N possibilities
and all possibilities

1049
00:52:02,990 --> 00:52:06,000
are equally likely, then
the entropy is given by

1050
00:52:06,000 --> 00:52:07,170
log two of N.

1051
00:52:07,170 --> 00:52:10,810
But if some possibilities
are more likely than others,

1052
00:52:10,810 --> 00:52:12,090
entropy goes down.

1053
00:52:12,090 --> 00:52:15,420
So in a dictionary based
attack on passwords,

1054
00:52:15,420 --> 00:52:18,410
because they follow these
dictionaries, it is easier

1055
00:52:18,410 --> 00:52:21,433
to guess that there's less
entropy in those passwords.

1056
00:52:22,550 --> 00:52:24,623
And so in the example of keys,

1057
00:52:25,620 --> 00:52:28,370
we see many key systems
avoiding very deep cuts

1058
00:52:28,370 --> 00:52:31,093
because that makes the key
more prone to breaking.

1059
00:52:32,340 --> 00:52:35,440
And there's other ways
that you can do keys

1060
00:52:35,440 --> 00:52:38,350
to make it harder to pick, and
so that does slightly reduce

1061
00:52:38,350 --> 00:52:40,540
the amount of entropy present in your key,

1062
00:52:40,540 --> 00:52:44,200
the fact that certain differs
are less probable than others.

1063
00:52:44,200 --> 00:52:47,400
So to look at a very simple example here,

1064
00:52:47,400 --> 00:52:50,840
we have a master key that we've decoded

1065
00:52:50,840 --> 00:52:55,560
as either a, 14767, or 94767.

1066
00:52:55,560 --> 00:52:58,550
So looking at these two
options naively we have,

1067
00:52:58,550 --> 00:53:01,260
or we could say there
might be a 50/50 chance

1068
00:53:01,260 --> 00:53:03,520
of each of these two options.

1069
00:53:03,520 --> 00:53:06,040
And so since there's two,
it's a zero or a one,

1070
00:53:06,040 --> 00:53:08,260
this is one bit of entropy.

1071
00:53:08,260 --> 00:53:10,740
We can expand this
calculation a little bit

1072
00:53:11,840 --> 00:53:14,560
by looking at the individual probability.

1073
00:53:14,560 --> 00:53:18,540
So there's a probability
of 0.5 of it being 14767

1074
00:53:19,376 --> 00:53:21,830
and 0.5 of nine,

1075
00:53:21,830 --> 00:53:25,800
so we have minus 0.5 log two of 0.5,

1076
00:53:25,800 --> 00:53:27,890
that's the probability of the first one.

1077
00:53:27,890 --> 00:53:29,830
Then the exact same thing,
because the probability

1078
00:53:29,830 --> 00:53:31,780
of the second is the same.

1079
00:53:31,780 --> 00:53:35,470
And we do a little bit of
arithmetic using our log rules,

1080
00:53:35,470 --> 00:53:39,060
and we find that simplifies
to log base two of two

1081
00:53:39,060 --> 00:53:39,893
or one bit.

1082
00:53:41,040 --> 00:53:43,890
The question is though,
are these equiprobable?

1083
00:53:43,890 --> 00:53:48,780
And so if this were a non
master key, then it might be,

1084
00:53:48,780 --> 00:53:50,213
but knowing that this is a master key,

1085
00:53:50,213 --> 00:53:52,990
there's a couple of cues we can take.

1086
00:53:52,990 --> 00:53:55,060
So here's our 14767,

1087
00:53:55,060 --> 00:53:57,640
This is very typical of what master keys,

1088
00:53:57,640 --> 00:53:59,838
very frequently, look like.

1089
00:53:59,838 --> 00:54:01,610
When we take this down to a nine,

1090
00:54:01,610 --> 00:54:03,010
there's a number of problems with it.

1091
00:54:03,010 --> 00:54:05,870
One is, it has a very deep cut in pin one,

1092
00:54:05,870 --> 00:54:08,180
this is prone to breaking off in the lock

1093
00:54:08,180 --> 00:54:09,760
and generally you want to avoid

1094
00:54:09,760 --> 00:54:13,540
keys breaking off in locks,
but especially master keys,

1095
00:54:13,540 --> 00:54:15,930
because if that gets stuck
in there and a bad actor

1096
00:54:15,930 --> 00:54:18,810
is able to get it out,
that's a problem for you.

1097
00:54:18,810 --> 00:54:20,880
The other thing that
happens here is this is now

1098
00:54:20,880 --> 00:54:22,630
a very low cut key.

1099
00:54:22,630 --> 00:54:24,730
And for reasons we'll talk about shortly,

1100
00:54:24,730 --> 00:54:28,580
having a low cut master key is
something you want to avoid.

1101
00:54:28,580 --> 00:54:33,030
So it's highly unlikely that this 94767,

1102
00:54:33,030 --> 00:54:35,350
would be the code that a locksmith chose

1103
00:54:35,350 --> 00:54:37,900
to be the master key.

1104
00:54:37,900 --> 00:54:42,900
So we can assess perhaps a
95% chance that it's one cut

1105
00:54:43,063 --> 00:54:46,870
and a 5% chance that it's this nine cut.

1106
00:54:46,870 --> 00:54:49,660
And crunching those numbers, we have 0.95,

1107
00:54:49,660 --> 00:54:51,610
so in probability times log two of 0.95

1108
00:54:52,897 --> 00:54:56,340
plus 0.05 times log two of 0.05,

1109
00:54:56,340 --> 00:55:01,340
and we find our entropy is
now 0.2 bits, 0.3 rounding.

1110
00:55:01,950 --> 00:55:06,950
So that is significantly lower
owing to this high difference

1111
00:55:07,010 --> 00:55:10,600
in probabilities between
these two options.

1112
00:55:10,600 --> 00:55:13,000
In the extreme case, so
we can sort of intuitively

1113
00:55:13,000 --> 00:55:15,470
understand this, if one option is certain

1114
00:55:15,470 --> 00:55:17,450
and the other option is impossible,

1115
00:55:17,450 --> 00:55:18,870
we'll have zero bits of entropy

1116
00:55:18,870 --> 00:55:22,283
because there's nothing
unknown in this case.

1117
00:55:23,130 --> 00:55:27,690
So in general, the entropy
where the probabilities

1118
00:55:27,690 --> 00:55:32,331
are not equal is going to be
the sum of each probability

1119
00:55:32,331 --> 00:55:37,070
times the log two of each
probability, and then minus that

1120
00:55:37,070 --> 00:55:39,480
because log of a number less than one

1121
00:55:39,480 --> 00:55:40,793
is going to be a negative.

1122
00:55:42,210 --> 00:55:45,470
And so this definition
is a fairly beautiful

1123
00:55:45,470 --> 00:55:48,450
derivation of it that I won't go into now,

1124
00:55:48,450 --> 00:55:51,490
for obvious reasons, but I
encourage you to look it up.

1125
00:55:51,490 --> 00:55:53,780
So we can now extend this concept

1126
00:55:53,780 --> 00:55:56,210
and do a little bit more useful with it

1127
00:55:56,210 --> 00:55:58,810
by looking at joint
and conditional entropy

1128
00:55:58,810 --> 00:56:02,230
and mutual information for
different rules in terms

1129
00:56:02,230 --> 00:56:06,300
of which ones are giving us
more and less information.

1130
00:56:06,300 --> 00:56:08,440
So let's just get rid
of this lock to start.

1131
00:56:08,440 --> 00:56:12,090
So what we'll do here is
consider a very simple system

1132
00:56:12,090 --> 00:56:16,750
with only three pins and only
two possible depths for each.

1133
00:56:16,750 --> 00:56:19,840
And so we can see that this has
three bits of entropy in it,

1134
00:56:19,840 --> 00:56:24,450
and that makes sense, we
have a zero or a one, 0101,

1135
00:56:24,450 --> 00:56:26,350
three times over, so that's three bits,

1136
00:56:26,350 --> 00:56:29,670
and we've enumerated all of the
eight possible options here.

1137
00:56:29,670 --> 00:56:32,080
And of course, log base
two of eight is three,

1138
00:56:32,080 --> 00:56:34,293
so that also makes a lot of sense.

1139
00:56:35,390 --> 00:56:38,190
So let's say that we have,
say a photograph of the key

1140
00:56:38,190 --> 00:56:41,810
or something, but that
photograph only shows us pin one,

1141
00:56:41,810 --> 00:56:44,843
and that tells us that pin one is a zero.

1142
00:56:46,280 --> 00:56:48,660
So that now tells us,
well, pin one is a zero,

1143
00:56:48,660 --> 00:56:51,030
we don't know anything
about pin two or pin three,

1144
00:56:51,030 --> 00:56:53,710
that gives us one bit of
information, it makes sense.

1145
00:56:53,710 --> 00:56:56,007
And we're now down to two
bits of conditional entropy,

1146
00:56:56,007 --> 00:57:00,350
that's conditional on this
rule being the case here.

1147
00:57:00,350 --> 00:57:02,490
And then we get another
photo and it's a bit better,

1148
00:57:02,490 --> 00:57:06,600
it shows us that pin one is a
zero and pinned two is a zero,

1149
00:57:06,600 --> 00:57:08,520
and so now we've limited
pin one and pin two,

1150
00:57:08,520 --> 00:57:09,980
to zero, zero.

1151
00:57:09,980 --> 00:57:12,420
and so we have one bit of entropy left

1152
00:57:12,420 --> 00:57:14,170
because this rule has given us two.

1153
00:57:16,460 --> 00:57:19,610
And if we have a third photograph,

1154
00:57:19,610 --> 00:57:21,810
say that shows that pin
three is limited to zero,

1155
00:57:21,810 --> 00:57:24,280
but we can't see pin one or pin two,

1156
00:57:24,280 --> 00:57:26,260
now we have the final key because we know

1157
00:57:26,260 --> 00:57:29,010
that they're all zero, zero, zero.

1158
00:57:29,010 --> 00:57:32,280
So this is fairly simplistic
and fairly obvious, I assume,

1159
00:57:32,280 --> 00:57:35,230
but we can analyze it in terms
of the information content

1160
00:57:35,230 --> 00:57:37,970
provided in each of these three rules.

1161
00:57:37,970 --> 00:57:39,690
So looking at it intuitively,

1162
00:57:39,690 --> 00:57:42,410
rule one gave us one bit of information,

1163
00:57:42,410 --> 00:57:45,620
rule two gives us two, and
rule three gives us one,

1164
00:57:45,620 --> 00:57:50,620
as well as, rule two shares
one bit with rule one.

1165
00:57:51,680 --> 00:57:55,380
In terms of the conditional
entropy given by rule one,

1166
00:57:55,380 --> 00:57:57,170
relative to rule two.

1167
00:57:57,170 --> 00:57:59,120
So given everything
that rule two gives us,

1168
00:57:59,120 --> 00:58:01,420
rule one gives us nothing extra,

1169
00:58:01,420 --> 00:58:03,180
given everything that rule one gives us,

1170
00:58:03,180 --> 00:58:05,840
rule two gives us one bit extra,

1171
00:58:05,840 --> 00:58:09,590
and they share one bit,
common to both of them,

1172
00:58:09,590 --> 00:58:12,860
and rule three of course shares
nothing with the other two.

1173
00:58:12,860 --> 00:58:16,960
So we can analyze this
automatically with the software here

1174
00:58:16,960 --> 00:58:20,690
by clicking calculate
conditional entropies down below

1175
00:58:20,690 --> 00:58:24,710
and let's compare rules
one and two just to start.

1176
00:58:24,710 --> 00:58:27,200
And we see exactly what I mentioned there.

1177
00:58:27,200 --> 00:58:30,803
So rule one within this circle,
we see it gives us one bit,

1178
00:58:31,783 --> 00:58:36,500
and rule two, within it's
circle, gives us two bits.

1179
00:58:36,500 --> 00:58:39,650
One bit is shared with rule
one and one bit is on its own,

1180
00:58:39,650 --> 00:58:42,710
and so that one on its own
is of course, position two,

1181
00:58:42,710 --> 00:58:44,320
where this is the only one that tells us

1182
00:58:44,320 --> 00:58:46,700
anything about pin two.

1183
00:58:46,700 --> 00:58:50,120
And then the total
information given by both

1184
00:58:50,120 --> 00:58:51,330
is the sum of what's in here.

1185
00:58:51,330 --> 00:58:54,993
So that's the joint entropy
reduction which is two bits.

1186
00:58:55,960 --> 00:58:59,310
Comparing rule one and rule
three, we see that they both

1187
00:58:59,310 --> 00:59:01,970
give us one bit and there's
nothing shared between them,

1188
00:59:01,970 --> 00:59:02,803
which makes sense,

1189
00:59:02,803 --> 00:59:05,620
we have pin one and pin
three not being shared.

1190
00:59:05,620 --> 00:59:08,450
Now we can compare all of
them, and so we see now

1191
00:59:08,450 --> 00:59:12,400
that within these, we have
a total of three bits given,

1192
00:59:12,400 --> 00:59:14,700
and for insistence it
started out as three bits,

1193
00:59:14,700 --> 00:59:17,520
that will reduce us to a final key.

1194
00:59:17,520 --> 00:59:20,560
And those three bits,
one of which is shared

1195
00:59:20,560 --> 00:59:22,393
between rules one and two,

1196
00:59:23,750 --> 00:59:26,800
one of which is just given by rule two,

1197
00:59:26,800 --> 00:59:29,200
one of which is just given by rule three.

1198
00:59:29,200 --> 00:59:31,180
And then there's nothing, say
that's shared by all three

1199
00:59:31,180 --> 00:59:34,963
of them, or that's just
given by rule one, et cetera.

1200
00:59:36,340 --> 00:59:39,910
So this is a fairly useful
way of analyzing the rules

1201
00:59:39,910 --> 00:59:42,030
that we've determined
that limit the system,

1202
00:59:42,030 --> 00:59:45,030
and determining which
one is most useful to us,

1203
00:59:45,030 --> 00:59:47,240
and are we sharing a lot of information.

1204
00:59:47,240 --> 00:59:49,790
If we are, that indicates that
we're not being particularly

1205
00:59:49,790 --> 00:59:51,970
efficient with what work we're doing

1206
00:59:51,970 --> 00:59:54,420
to find out this information,
to put into this system.

1207
00:59:54,420 --> 00:59:57,270
Ideally, the less shared information,

1208
00:59:57,270 --> 01:00:00,717
the more total information
we're actually going to get out

1209
01:00:00,717 --> 01:00:04,093
of all of the rules in
this particular system.

1210
01:00:05,970 --> 01:00:09,250
So that is conditional entropy,

1211
01:00:09,250 --> 01:00:11,904
mutual information, by the
way, is the term that we use

1212
01:00:11,904 --> 01:00:16,140
to talk about the information that is,

1213
01:00:16,140 --> 01:00:19,860
well, mutual between two
different random variables,

1214
01:00:19,860 --> 01:00:21,720
or in this case, two different rules

1215
01:00:21,720 --> 01:00:24,113
that impose a constraint on the system.

1216
01:00:28,060 --> 01:00:29,820
So in the case that we looked at before,

1217
01:00:29,820 --> 01:00:34,820
with this 0151X key, we have
the conditional entropy given

1218
01:00:36,720 --> 01:00:39,880
by the code book is a
lot, almost nine bits,

1219
01:00:39,880 --> 01:00:40,713
which makes sense,

1220
01:00:40,713 --> 01:00:45,080
we're going from 390,000
to 1700 possibilities.

1221
01:00:45,080 --> 01:00:46,873
And given by the photo
is a fair bit as well,

1222
01:00:46,873 --> 01:00:51,010
because we were able to
determine some severe limitations

1223
01:00:51,010 --> 01:00:53,150
on many of the pins that exist.

1224
01:00:53,150 --> 01:00:55,040
And there's not a lot
of shared information,

1225
01:00:55,040 --> 01:00:58,090
and the results of that is,
between these two rules,

1226
01:00:58,090 --> 01:01:02,210
they give us all of the
entropy that existed

1227
01:01:02,210 --> 01:01:03,683
in that particular key.

1228
01:01:05,040 --> 01:01:06,440
There's a good reason
that they don't share

1229
01:01:06,440 --> 01:01:07,410
a lot of information,

1230
01:01:07,410 --> 01:01:10,340
and that is because, well,
what is the uncertainty

1231
01:01:10,340 --> 01:01:12,130
that exists in a photo?

1232
01:01:12,130 --> 01:01:15,470
Well, the uncertainty is, you
know, is this, a two or three,

1233
01:01:15,470 --> 01:01:18,090
you know, it's one position off.

1234
01:01:18,090 --> 01:01:19,810
In the case of a code book,

1235
01:01:19,810 --> 01:01:21,900
what they do with code
books is very different.

1236
01:01:21,900 --> 01:01:26,810
They're not going to make a
code that's off by just one cut

1237
01:01:26,810 --> 01:01:29,940
in one pin from another
item in the code book,

1238
01:01:29,940 --> 01:01:31,400
they're all gonna be wildly different,

1239
01:01:31,400 --> 01:01:34,870
if you're reducing
390,000 possible differs

1240
01:01:34,870 --> 01:01:37,710
into 1700 in the code book.

1241
01:01:37,710 --> 01:01:39,420
So because they're wildly different,

1242
01:01:39,420 --> 01:01:41,870
the information given
to us by the code book

1243
01:01:41,870 --> 01:01:44,010
is very, very different,

1244
01:01:44,010 --> 01:01:45,730
the information given by the photo,

1245
01:01:45,730 --> 01:01:48,453
there's not a lot of
overlap, and as a result,

1246
01:01:50,100 --> 01:01:52,790
these two rules put
together are very useful

1247
01:01:52,790 --> 01:01:56,920
to give us a lot of
information about this system.

1248
01:01:56,920 --> 01:01:58,227
So we've talked about loads of techniques

1249
01:01:58,227 --> 01:02:00,280
to determine the key for a lock

1250
01:02:00,280 --> 01:02:01,750
when don't have a key at all.

1251
01:02:01,750 --> 01:02:03,630
How about if we have a key for some lock

1252
01:02:03,630 --> 01:02:07,150
on some mastered system
and we want to turn it into

1253
01:02:07,150 --> 01:02:08,890
a Grandmaster key, that's going to work

1254
01:02:08,890 --> 01:02:10,220
for all of those locks.

1255
01:02:10,220 --> 01:02:12,860
To understand how to do
that, let's look a little bit

1256
01:02:12,860 --> 01:02:15,340
at how mastering works in general.

1257
01:02:15,340 --> 01:02:17,120
Any lock on a mastered system

1258
01:02:17,120 --> 01:02:19,410
is going to accept multiple keys.

1259
01:02:19,410 --> 01:02:21,790
And it does that by having
more than one shear lines

1260
01:02:21,790 --> 01:02:23,720
in at least some of the pins.

1261
01:02:23,720 --> 01:02:26,910
So in this case, we have two
shear lines in every pin stack,

1262
01:02:26,910 --> 01:02:28,730
one of these shear lines in each pin stack

1263
01:02:28,730 --> 01:02:30,920
is for the change key,

1264
01:02:30,920 --> 01:02:33,770
and one is going to be for the master key.

1265
01:02:33,770 --> 01:02:35,740
So there's two different shear lines,

1266
01:02:35,740 --> 01:02:38,340
and a different one is
always gonna be used,

1267
01:02:38,340 --> 01:02:41,400
one for change, and one for master.

1268
01:02:41,400 --> 01:02:43,970
Master key actually is necessary

1269
01:02:43,970 --> 01:02:46,600
in the context of multiple locks.

1270
01:02:46,600 --> 01:02:50,520
So in here we have Alice's
lock and her key A1,

1271
01:02:50,520 --> 01:02:53,133
and it's going to work in her lock.

1272
01:02:54,340 --> 01:02:59,130
And we're also going to
have a sub master MKA,

1273
01:02:59,130 --> 01:03:02,090
that will work in her
lock and a grandmaster.

1274
01:03:02,090 --> 01:03:04,410
But Bob can't put his key in her lock,

1275
01:03:04,410 --> 01:03:05,830
it's not going to work.

1276
01:03:05,830 --> 01:03:09,480
It binds in pin three and
Charlie's is completely off,

1277
01:03:09,480 --> 01:03:11,410
it's also not going to work.

1278
01:03:11,410 --> 01:03:13,320
So that's what works in Alice's lock.

1279
01:03:13,320 --> 01:03:18,180
In Bobs lock Alice's
key is not going to work

1280
01:03:18,180 --> 01:03:22,690
because it's not the right
key, it's just a change key.

1281
01:03:22,690 --> 01:03:27,340
But Bob's key of course
will, Charlie's key won't

1282
01:03:27,340 --> 01:03:31,160
and the master MKA will
because Bob is on the A system,

1283
01:03:31,160 --> 01:03:36,160
he's A2, and the grandmaster
is going to work as well.

1284
01:03:37,120 --> 01:03:40,000
In Charlie's lock, he's on the B system,

1285
01:03:40,000 --> 01:03:42,903
so MKA is not going to work.

1286
01:03:45,060 --> 01:03:47,680
Alice's key, of course, and Bob's key,

1287
01:03:47,680 --> 01:03:50,470
are both also not going to work.

1288
01:03:50,470 --> 01:03:52,520
Charlie's key will of course,

1289
01:03:52,520 --> 01:03:56,180
and the Grandmaster will as well.

1290
01:03:56,180 --> 01:03:59,760
So what we have is a two
level hierarchy system

1291
01:03:59,760 --> 01:04:02,410
where we have a master key, MKA

1292
01:04:02,410 --> 01:04:04,490
that works for Alice's and Bob's lock,

1293
01:04:04,490 --> 01:04:06,900
which are on the A system,
but not for Charlie's,

1294
01:04:06,900 --> 01:04:09,890
which is on the B system
and a grandmaster key

1295
01:04:09,890 --> 01:04:11,930
that works for all of them.

1296
01:04:11,930 --> 01:04:14,070
The way that this happens
is the Grandmaster key

1297
01:04:14,070 --> 01:04:16,930
uses the grandmaster shear
lines in all positions

1298
01:04:16,930 --> 01:04:18,280
on all locks.

1299
01:04:18,280 --> 01:04:21,580
The MKA uses the grandmaster shear lines

1300
01:04:21,580 --> 01:04:25,160
in just these last three
positions, but not the first two.

1301
01:04:25,160 --> 01:04:27,920
So that way you can tell,
is this on the A system,

1302
01:04:27,920 --> 01:04:31,290
and all A system locks
start with three, one.

1303
01:04:31,290 --> 01:04:35,470
So Alice's key does, as does Bob's key.

1304
01:04:35,470 --> 01:04:39,100
It starts with three
one, and therefore MKA,

1305
01:04:39,100 --> 01:04:40,560
which also starts with three, one,

1306
01:04:40,560 --> 01:04:43,050
is going to work on Bob's lock.

1307
01:04:43,050 --> 01:04:47,180
If we try MKA in Charlie's
lock, it's going to work

1308
01:04:47,180 --> 01:04:50,937
on the last three pins because
MKA is at the master level

1309
01:04:50,937 --> 01:04:54,140
on these three pins, notice that it shares

1310
01:04:54,140 --> 01:04:56,930
the last three pins with
the grandmaster key.

1311
01:04:56,930 --> 01:04:59,500
But it is not going to
work in Charlie's lock

1312
01:04:59,500 --> 01:05:04,040
because MKA is not the master
depth in these first two pins,

1313
01:05:04,040 --> 01:05:07,010
we need the Grandmaster key for that.

1314
01:05:07,010 --> 01:05:11,020
So we have a multilevel mastering system

1315
01:05:11,020 --> 01:05:15,990
that allows certain master
keys to open only some locks,

1316
01:05:15,990 --> 01:05:18,060
the individual keys only open their own

1317
01:05:18,060 --> 01:05:22,430
and a top level master
key that opens everything.

1318
01:05:22,430 --> 01:05:25,680
So that is an example
of a three level system,

1319
01:05:25,680 --> 01:05:27,690
this is two level with just a master

1320
01:05:27,690 --> 01:05:29,580
and change keys below it.

1321
01:05:29,580 --> 01:05:32,570
This is what we just looked
at, so a grandmaster key,

1322
01:05:32,570 --> 01:05:34,810
under which we have
MKA and there would be,

1323
01:05:34,810 --> 01:05:36,980
hypothetically, an MKB as well,

1324
01:05:36,980 --> 01:05:38,620
and then change keys under that.

1325
01:05:38,620 --> 01:05:42,930
So here's Alice and Bob, and
Charlie is somewhere over here.

1326
01:05:42,930 --> 01:05:46,610
We can have higher levels and
this requires splitting up

1327
01:05:46,610 --> 01:05:49,175
the pins more in the
way that we showed you,

1328
01:05:49,175 --> 01:05:51,653
or using secondary locking elements.

1329
01:05:53,420 --> 01:05:56,700
So looking at our Sargent lock again,

1330
01:05:56,700 --> 01:06:00,010
it had this visible shear line here

1331
01:06:00,010 --> 01:06:02,450
and above it is this red pin.

1332
01:06:02,450 --> 01:06:07,000
A red driver pin is only
used for key pin, 4, 5, 6,

1333
01:06:07,000 --> 01:06:08,080
we see that this is a zero,

1334
01:06:08,080 --> 01:06:11,100
so we know that it's
actually a master pin.

1335
01:06:11,100 --> 01:06:14,420
So we can start to determine
what the other shear line is

1336
01:06:14,420 --> 01:06:16,680
in this particular Sargent lock,

1337
01:06:16,680 --> 01:06:19,230
and once we know what
both shear lines are,

1338
01:06:19,230 --> 01:06:21,280
we can then start to determine which one

1339
01:06:21,280 --> 01:06:22,600
is going to be the master,

1340
01:06:22,600 --> 01:06:24,900
and deducing the master key from that.

1341
01:06:24,900 --> 01:06:26,680
When we lift up the first two pins

1342
01:06:26,680 --> 01:06:31,680
and see that the master
wafer on pin three is gold,

1343
01:06:32,700 --> 01:06:36,300
we can do the same
thing and determine that

1344
01:06:36,300 --> 01:06:38,770
the second shear line is going to match

1345
01:06:38,770 --> 01:06:41,440
one of three, four or eight,

1346
01:06:41,440 --> 01:06:44,343
plus the one that we
know is in there already.

1347
01:06:46,060 --> 01:06:49,167
If we have a lock on a master system

1348
01:06:49,167 --> 01:06:52,230
and a key for that lock,
we can use that key

1349
01:06:52,230 --> 01:06:54,380
to actually disassemble the lock.

1350
01:06:54,380 --> 01:06:56,380
And it's a whole lot easier
'cause we can use the key

1351
01:06:56,380 --> 01:06:59,520
to open the door and to
then unscrew the lock

1352
01:06:59,520 --> 01:07:00,510
from an open door.

1353
01:07:00,510 --> 01:07:02,320
We can also put the key in and use it

1354
01:07:02,320 --> 01:07:04,310
to remove the core from the lock,

1355
01:07:04,310 --> 01:07:06,690
and then we can look at the pins and see

1356
01:07:06,690 --> 01:07:11,080
what they actually say.
So to look at a demo,

1357
01:07:11,080 --> 01:07:12,837
in this case we have our mastered system

1358
01:07:12,837 --> 01:07:17,837
and our change key here
and the mastered pinned up,

1359
01:07:18,140 --> 01:07:20,880
so we find are, 2824 et cetera,

1360
01:07:20,880 --> 01:07:23,930
and we get this from
reading these pins here.

1361
01:07:23,930 --> 01:07:28,930
If we put that into our analysis
software, 282435 et cetera,

1362
01:07:29,640 --> 01:07:32,020
we find that now the
master key can take on

1363
01:07:32,020 --> 01:07:36,050
one of each of these two
positions in the lock.

1364
01:07:36,050 --> 01:07:38,960
And so there's five bits of
entropy, which makes sense,

1365
01:07:38,960 --> 01:07:42,200
there's two positions in the five pins,

1366
01:07:42,200 --> 01:07:45,180
and that gives us 32 possible keys

1367
01:07:45,180 --> 01:07:48,913
that could work as the master
key for this locking system.

1368
01:07:49,860 --> 01:07:53,600
We can of course create
all 32 and try them,

1369
01:07:53,600 --> 01:07:57,610
we can create only some,
10 and then file them down

1370
01:07:57,610 --> 01:08:00,320
until we've tried all 32 of these.

1371
01:08:00,320 --> 01:08:01,840
But we can do better than that

1372
01:08:01,840 --> 01:08:05,350
because we have the change key code,

1373
01:08:05,350 --> 01:08:07,837
and we know that it's a change key, 24531.

1374
01:08:09,860 --> 01:08:12,234
And so we know that whichever shear lines

1375
01:08:12,234 --> 01:08:15,670
that change key interacts
with when it's using the lock

1376
01:08:15,670 --> 01:08:17,800
is not going to be the master shear lines,

1377
01:08:17,800 --> 01:08:21,730
therefore, the other shear
lines will be the master.

1378
01:08:21,730 --> 01:08:26,013
So if we take the change key, 24531

1379
01:08:28,360 --> 01:08:32,080
and we put that into
our analysis software,

1380
01:08:32,080 --> 01:08:36,750
so knowing change key, 24531,

1381
01:08:36,750 --> 01:08:41,750
is going to remove, 24531
from the possible depths

1382
01:08:44,270 --> 01:08:48,250
that this master key could be,

1383
01:08:48,250 --> 01:08:50,390
and it's going to leave us
with the other remaining

1384
01:08:50,390 --> 01:08:51,400
one in each pin stack,

1385
01:08:51,400 --> 01:08:56,080
which will be a single
master key left, 82399.

1386
01:08:56,080 --> 01:08:59,510
And in fact, that is what
we find as the master key

1387
01:08:59,510 --> 01:09:02,803
in this particular system.
So that's pretty neat,

1388
01:09:04,010 --> 01:09:08,500
given just a key for a mastered lock

1389
01:09:08,500 --> 01:09:10,140
and access to the lock itself,

1390
01:09:10,140 --> 01:09:14,090
we can actually derive the
master key entirely from that.

1391
01:09:14,090 --> 01:09:14,923
The other thing we can do

1392
01:09:14,923 --> 01:09:18,120
if we don't want to disassemble
locks, is we can combine

1393
01:09:18,120 --> 01:09:22,610
information from a number of
these low level change keys,

1394
01:09:22,610 --> 01:09:25,640
and use that to determine
what the master key

1395
01:09:25,640 --> 01:09:28,250
could possibly be in a system.

1396
01:09:28,250 --> 01:09:31,320
So let's say we have a Schlage system,

1397
01:09:31,320 --> 01:09:34,570
so five pins and 10 depths each,

1398
01:09:34,570 --> 01:09:36,433
and schlage is zero-based numbering,

1399
01:09:37,990 --> 01:09:39,280
the master key in this system

1400
01:09:39,280 --> 01:09:42,490
could be anyone of 100,000 possibilities.

1401
01:09:42,490 --> 01:09:47,453
If we know what one change
key is, let's say its, 26350,

1402
01:09:49,690 --> 01:09:52,483
and we go ahead and add that as a rule.

1403
01:09:53,960 --> 01:09:57,000
We now have, instead of 10 to the five,

1404
01:09:57,000 --> 01:10:00,660
we have nine to the five, so
a little better but not great.

1405
01:10:00,660 --> 01:10:04,430
What we do see though, is
that in a schlage system,

1406
01:10:04,430 --> 01:10:07,057
remember I talked about
how if we have a pin

1407
01:10:07,057 --> 01:10:10,330
that's one too low or
a little bit too high,

1408
01:10:10,330 --> 01:10:13,730
the lock might still accept
it for a very worn out lock.

1409
01:10:13,730 --> 01:10:17,190
And that would be a bad thing
for a lock to accidentally

1410
01:10:17,190 --> 01:10:20,990
accept a key that's not a
master key as if it were.

1411
01:10:20,990 --> 01:10:22,630
So what schlage does to avoid that,

1412
01:10:22,630 --> 01:10:25,350
is uses what's called a two step system.

1413
01:10:25,350 --> 01:10:30,350
Every position that any key
in this system will take,

1414
01:10:31,850 --> 01:10:34,670
in pin one it's going to be
even, pin two will be even,

1415
01:10:34,670 --> 01:10:36,510
pin three will be odd, et cetera.

1416
01:10:36,510 --> 01:10:40,230
So we're always skipping
every other depth to make sure

1417
01:10:40,230 --> 01:10:42,180
that we don't have
anything that's too close,

1418
01:10:42,180 --> 01:10:45,260
and is going to create problems with keys

1419
01:10:45,260 --> 01:10:48,140
operating locks they're not supposed to.

1420
01:10:48,140 --> 01:10:50,980
So what that means, when we
turn on the two step system here

1421
01:10:50,980 --> 01:10:54,440
is it severely limits our key space.

1422
01:10:54,440 --> 01:10:57,877
Now pin one must be even, so, 02468,

1423
01:10:58,870 --> 01:11:02,000
but it can't be a two because
that's what our change key is.

1424
01:11:02,000 --> 01:11:03,710
And then we do that for
the rest of the pins

1425
01:11:03,710 --> 01:11:08,690
and we get 1024 possibilities,
so four to the power of five.

1426
01:11:08,690 --> 01:11:11,113
We can get another change key,

1427
01:11:12,110 --> 01:11:14,930
and so this was gonna be
two step as well, of course.

1428
01:11:14,930 --> 01:11:16,843
So that's, let's say, 64132,

1429
01:11:19,550 --> 01:11:22,030
so if we have another
person conspiring to get

1430
01:11:22,030 --> 01:11:24,410
in on this plan to derive the master key,

1431
01:11:24,410 --> 01:11:27,440
and now we have only
three possibilities each.

1432
01:11:27,440 --> 01:11:30,733
And if two more people sign on, so, 42796

1433
01:11:34,490 --> 01:11:38,150
and we've eliminated even
more of the possibilities,

1434
01:11:38,150 --> 01:11:39,943
and finally, 86318.

1435
01:11:43,800 --> 01:11:47,050
And we've now got it down to
only four possible master keys,

1436
01:11:47,050 --> 01:11:49,540
so we could absolutely just
make these four and try them out

1437
01:11:49,540 --> 01:11:52,330
and hope that one is going
to work, well, we know

1438
01:11:52,330 --> 01:11:55,610
one's going to work, but
we can do better than that.

1439
01:11:55,610 --> 01:11:58,330
We know that pin one is a zero cut,

1440
01:11:58,330 --> 01:12:00,540
pin two is a zero or an eight,

1441
01:12:00,540 --> 01:12:02,550
but an eight is a MACS violation,

1442
01:12:02,550 --> 01:12:05,240
It's too far from pin one, which is zero,

1443
01:12:05,240 --> 01:12:07,520
so we know it's zero as well.

1444
01:12:07,520 --> 01:12:09,040
And now if you look at pin three,

1445
01:12:09,040 --> 01:12:10,560
it could be a five or a nine,

1446
01:12:10,560 --> 01:12:13,270
but a nine now, is too far from a zero,

1447
01:12:13,270 --> 01:12:14,870
which we know a pin two is.

1448
01:12:14,870 --> 01:12:19,870
So in fact, the master
key is going to be, 00574.

1449
01:12:20,040 --> 01:12:22,770
And if we add this MACS rule of seven,

1450
01:12:22,770 --> 01:12:24,830
we find that that's the case.

1451
01:12:24,830 --> 01:12:27,020
So by combining these
multiple change keys,

1452
01:12:27,020 --> 01:12:29,230
we've been able to derive the master key

1453
01:12:29,230 --> 01:12:30,840
without taking the lock apart,

1454
01:12:30,840 --> 01:12:35,440
just by using the information
on those change keys.

1455
01:12:35,440 --> 01:12:38,290
From an information theory perspective,

1456
01:12:38,290 --> 01:12:40,470
we can calculate these
conditional entropies

1457
01:12:40,470 --> 01:12:42,870
from the rules that we've been looking at.

1458
01:12:42,870 --> 01:12:45,820
And we see that we have a
lot of shared information

1459
01:12:45,820 --> 01:12:48,350
between them, that's
because each of these rules

1460
01:12:48,350 --> 01:12:50,160
tells us that it's on the two step system,

1461
01:12:50,160 --> 01:12:53,250
which knocks out one out
of every two position

1462
01:12:53,250 --> 01:12:55,090
in every single pin.

1463
01:12:55,090 --> 01:12:57,180
So that's a lot of
information that gives us,

1464
01:12:57,180 --> 01:13:00,132
four and a half bits, as
well as we're knocking out

1465
01:13:00,132 --> 01:13:03,110
an additional depth from each pin,

1466
01:13:03,110 --> 01:13:05,110
from each of these keys that we have,

1467
01:13:05,110 --> 01:13:06,920
and so that's these two bits here.

1468
01:13:06,920 --> 01:13:10,680
So between all that, it
gives us a lot of information

1469
01:13:10,680 --> 01:13:12,800
that we can then use to determine

1470
01:13:12,800 --> 01:13:15,720
what that master code actually is.

1471
01:13:15,720 --> 01:13:19,070
So we can actually derive
the master key for a system

1472
01:13:19,070 --> 01:13:22,210
using just one lock and
one key for that lock

1473
01:13:22,210 --> 01:13:24,430
without ever taking that lock apart,

1474
01:13:24,430 --> 01:13:27,410
using a technique called
Rights Amplification.

1475
01:13:27,410 --> 01:13:30,140
So this has been known to
locksmiths for decades,

1476
01:13:30,140 --> 01:13:32,730
and it was first made known
in the InfoSec community

1477
01:13:32,730 --> 01:13:35,740
with a 2003 paper by Matt Blaze.

1478
01:13:35,740 --> 01:13:38,310
The general technique looks like this,

1479
01:13:38,310 --> 01:13:40,530
So Alice has a key for her lock,

1480
01:13:40,530 --> 01:13:42,270
and of course it works in her lock,

1481
01:13:42,270 --> 01:13:45,150
and she knows that the
master key, whatever it is,

1482
01:13:45,150 --> 01:13:47,970
is going to operate on
different shear lines

1483
01:13:47,970 --> 01:13:50,360
than her key does. So she needs to find

1484
01:13:50,360 --> 01:13:53,230
what the other shear
lines are in her lock.

1485
01:13:53,230 --> 01:13:56,950
The way she can do that, is
we're looking at her key,

1486
01:13:56,950 --> 01:13:58,890
it has a zero cut in pin three.

1487
01:13:58,890 --> 01:14:03,360
So that's a good place to start
because we can start varying

1488
01:14:03,360 --> 01:14:06,410
what that depth is just in pin three.

1489
01:14:06,410 --> 01:14:07,760
And if we leave everything else the same

1490
01:14:07,760 --> 01:14:10,760
we know what's going to work,
so if the lock does not open,

1491
01:14:10,760 --> 01:14:12,800
it's only because of the pin three,

1492
01:14:12,800 --> 01:14:16,040
and if it does, we know we
found a shear line in pin three.

1493
01:14:16,040 --> 01:14:18,270
So cut zero is what her key is,

1494
01:14:18,270 --> 01:14:20,250
so it's definitely going to work.

1495
01:14:20,250 --> 01:14:23,630
She brings it down who
cut one, can we try it?

1496
01:14:23,630 --> 01:14:26,550
And it doesn't work, so she pulls it out

1497
01:14:26,550 --> 01:14:30,070
and tries to cut two and
tries it in her lock.

1498
01:14:30,070 --> 01:14:33,060
And it does work, so now Alice
knows that she's actually

1499
01:14:33,060 --> 01:14:37,403
deduced the master
shear line in pin three,

1500
01:14:38,970 --> 01:14:41,320
and that's because it's
the other shear line

1501
01:14:41,320 --> 01:14:43,050
that works in her lock.

1502
01:14:43,050 --> 01:14:46,620
So she can take her modified
key, so Alice's key,

1503
01:14:46,620 --> 01:14:51,170
and file it down to a two
and try it in Bob's lock.

1504
01:14:51,170 --> 01:14:54,830
And it also works, because
Bob's lock is very close to hers

1505
01:14:54,830 --> 01:14:57,793
on the same system. Bob
is a two, she is a one.

1506
01:14:59,090 --> 01:15:02,500
Alice can then go and take
her modified lock key,

1507
01:15:02,500 --> 01:15:06,600
so we take Alice's key and we modify it

1508
01:15:06,600 --> 01:15:09,100
from a zero down to a two.

1509
01:15:09,100 --> 01:15:12,640
Now we can try it in Charlie's
lock and it doesn't work,

1510
01:15:12,640 --> 01:15:15,460
which is no surprise,
Charlie's lock is B34,

1511
01:15:15,460 --> 01:15:17,720
it's very far from Alice's.

1512
01:15:17,720 --> 01:15:20,770
And she's only found one
of the master depths,

1513
01:15:20,770 --> 01:15:23,330
so she's going to need to repeat this.

1514
01:15:23,330 --> 01:15:25,767
Her new sub master keys, 31234,

1515
01:15:27,500 --> 01:15:30,420
she can get a new key cut that's at, 01234

1516
01:15:32,200 --> 01:15:36,190
and try zero cut to see if
it might be a shear line.

1517
01:15:36,190 --> 01:15:37,903
And as it turns out, it is.

1518
01:15:38,810 --> 01:15:42,807
So we now have a master
depth in zero, in pin one

1519
01:15:42,807 --> 01:15:46,383
and pin three, so now
we get a key cut, 00234,

1520
01:15:49,307 --> 01:15:50,563
and we try that.

1521
01:15:52,110 --> 01:15:55,440
It does not work in her
lock, so she pulls it out

1522
01:15:55,440 --> 01:15:59,570
and files it down to a one
to try the next position.

1523
01:15:59,570 --> 01:16:00,610
And of course it does work,

1524
01:16:00,610 --> 01:16:04,440
which we knew because that was
what her key was originally.

1525
01:16:04,440 --> 01:16:09,440
So we take it down to a two
and we try it, it doesn't work.

1526
01:16:10,730 --> 01:16:13,960
Take it down to a three,
try that in her lock

1527
01:16:13,960 --> 01:16:15,000
and it does work.

1528
01:16:15,000 --> 01:16:20,000
So now we found the master
depths for pin one, two and three

1529
01:16:21,610 --> 01:16:24,920
in Alice's lock by finding
the other shear lines.

1530
01:16:24,920 --> 01:16:28,060
We can keep going, 03234,

1531
01:16:28,060 --> 01:16:32,180
we're gonna get a new key
cut with four as the highest.

1532
01:16:32,180 --> 01:16:37,180
So, 02304, and we'll put that in,

1533
01:16:38,380 --> 01:16:40,110
and she tries it and it doesn't work.

1534
01:16:40,110 --> 01:16:42,250
And so she files it down into a one,

1535
01:16:42,250 --> 01:16:43,940
tries it, it doesn't work,

1536
01:16:43,940 --> 01:16:46,170
two, tries, doesn't work,

1537
01:16:46,170 --> 01:16:50,650
three, tries, it does work.
But we sort of knew that

1538
01:16:50,650 --> 01:16:55,150
that was what her key was
originally, so we keep going.

1539
01:16:55,150 --> 01:16:58,500
A four, we try it, doesn't work,

1540
01:16:58,500 --> 01:17:01,260
file it down to a five, we
try it and it does work.

1541
01:17:01,260 --> 01:17:04,110
So now Alice has found the master depth

1542
01:17:04,110 --> 01:17:07,660
in pins one through four using her lock.

1543
01:17:07,660 --> 01:17:12,600
And so now we have, 0325,
is our master depths,

1544
01:17:12,600 --> 01:17:15,750
and then we want to find
out what the master is

1545
01:17:15,750 --> 01:17:18,800
in pin five as well,
so we put it to a zero,

1546
01:17:18,800 --> 01:17:22,040
but that's a MACS violation,
so we put it to a one.

1547
01:17:22,040 --> 01:17:25,931
And we try that, and it does not work.

1548
01:17:25,931 --> 01:17:28,620
We put it down to a two, and it does work.

1549
01:17:28,620 --> 01:17:30,750
And Alice's key originally was a four,

1550
01:17:30,750 --> 01:17:35,750
so we now have a two as our
master depth in pin five.

1551
01:17:35,760 --> 01:17:38,313
So our master code should be 03252.

1552
01:17:41,270 --> 01:17:44,403
Alice can try this in Bob's
lock as a sanity check,

1553
01:17:45,420 --> 01:17:46,623
so 03252,

1554
01:17:51,840 --> 01:17:53,340
and she tries it and it does work,

1555
01:17:53,340 --> 01:17:54,900
so that's a very good sign.

1556
01:17:54,900 --> 01:17:57,727
And then Charlie's lock,
here's the real test,

1557
01:17:57,727 --> 01:17:58,560
03252,

1558
01:18:04,732 --> 01:18:08,410
and she tries that, and it
works in Charlie's lock as well.

1559
01:18:08,410 --> 01:18:13,410
So by sweeping all
possible depths in each pin

1560
01:18:14,520 --> 01:18:18,000
within Alice's lock and
seeing if it still works

1561
01:18:18,000 --> 01:18:20,170
on each depth, Alice is able to discover

1562
01:18:20,170 --> 01:18:22,870
what the other shear lines are in her lock

1563
01:18:22,870 --> 01:18:26,390
by modifying her currently
working key and in doing so,

1564
01:18:26,390 --> 01:18:30,410
deduce the grand master
key, that is going to work

1565
01:18:30,410 --> 01:18:33,200
in every lock on this system.

1566
01:18:33,200 --> 01:18:35,340
So one additional interesting
lock configuration

1567
01:18:35,340 --> 01:18:36,840
that gives us a little bit of information,

1568
01:18:36,840 --> 01:18:39,290
is a construction keyed system.

1569
01:18:39,290 --> 01:18:42,110
So let's take a look at
what that actually is.

1570
01:18:42,110 --> 01:18:44,340
In a construction lock system we have,

1571
01:18:44,340 --> 01:18:48,190
instead of one master wafer,
a smaller ball bearing.

1572
01:18:48,190 --> 01:18:50,610
And that acts as a master
wafer while the building

1573
01:18:50,610 --> 01:18:51,980
is under construction,

1574
01:18:51,980 --> 01:18:54,420
being used by the construction master key.

1575
01:18:54,420 --> 01:18:57,160
So it goes in and it works,
and that ball bearing

1576
01:18:57,160 --> 01:18:58,430
is below the shear line,

1577
01:18:58,430 --> 01:19:02,040
and so it operates as a master wafer.

1578
01:19:02,040 --> 01:19:05,160
What happens though,
when construction is done

1579
01:19:05,160 --> 01:19:08,480
and the user comes along
with the grandmaster key,

1580
01:19:08,480 --> 01:19:11,730
is it is a little bit higher by the width

1581
01:19:11,730 --> 01:19:14,217
of that ball bearing than
the construction master.

1582
01:19:14,217 --> 01:19:16,600
And it goes in and it
lifts that ball bearing

1583
01:19:16,600 --> 01:19:18,380
above the shear line.

1584
01:19:18,380 --> 01:19:21,730
Well, what happens then,
the construction core

1585
01:19:21,730 --> 01:19:24,590
is a little bit special as well.

1586
01:19:24,590 --> 01:19:29,150
It contains a number of holes in it

1587
01:19:29,150 --> 01:19:33,420
that are going to line up
with the top of the pin stack,

1588
01:19:33,420 --> 01:19:35,490
when that core starts to get turned,

1589
01:19:35,490 --> 01:19:38,880
that ball bearing that's
now in the upper pin stack

1590
01:19:38,880 --> 01:19:43,630
is actually going to get
dropped into one of these holes,

1591
01:19:43,630 --> 01:19:46,833
at which point it stays
trapped there forever.

1592
01:19:49,690 --> 01:19:52,470
So in the lock, when the
new user of the building

1593
01:19:52,470 --> 01:19:56,170
turns this key, this ball
bearing is going to drop out

1594
01:19:56,170 --> 01:20:00,160
and it stays gone forever or
stays trapped in that hole.

1595
01:20:00,160 --> 01:20:05,160
At which point it's like that
shear line no longer exists.

1596
01:20:05,530 --> 01:20:08,090
So the grandmaster key continues to work,

1597
01:20:08,090 --> 01:20:10,780
but if the construction
worker ever comes back

1598
01:20:10,780 --> 01:20:13,100
and tries to get the
construction master to work,

1599
01:20:13,100 --> 01:20:15,550
it's not going to, it's going
to bind in the shear line

1600
01:20:15,550 --> 01:20:17,233
'cause that ball bearing is gone.

1601
01:20:18,330 --> 01:20:20,410
So there's two things we can do with this;

1602
01:20:20,410 --> 01:20:22,760
One is if a construction worker still has

1603
01:20:22,760 --> 01:20:25,820
the construction master and
wants to make it work again,

1604
01:20:25,820 --> 01:20:28,330
all he has to do is know
that there was a ball bearing

1605
01:20:28,330 --> 01:20:31,140
in pin one and its depth was four.

1606
01:20:31,140 --> 01:20:32,503
And so from, 64943,

1607
01:20:33,680 --> 01:20:35,483
we can get a key cut to 24943,

1608
01:20:39,060 --> 01:20:42,450
so that's four higher in
pin one, and that is now

1609
01:20:42,450 --> 01:20:45,910
going to match the new GMK shear line

1610
01:20:45,910 --> 01:20:47,980
and it is going to work.

1611
01:20:47,980 --> 01:20:49,540
The second thing that we can notice

1612
01:20:49,540 --> 01:20:52,970
is that for our new grand master key,

1613
01:20:52,970 --> 01:20:56,900
it can't be deeper than a cut six,

1614
01:20:56,900 --> 01:21:00,370
because if it is deeper than a cut six,

1615
01:21:00,370 --> 01:21:02,270
then the construction key
that must've gone with it

1616
01:21:02,270 --> 01:21:04,100
is four less than that.

1617
01:21:04,100 --> 01:21:06,190
Well, four less than six is a 10 cut,

1618
01:21:06,190 --> 01:21:09,450
and that's not possible
in this particular system,

1619
01:21:09,450 --> 01:21:10,903
which goes from one to 10.

1620
01:21:12,120 --> 01:21:14,950
So we can add that to our rule set.

1621
01:21:14,950 --> 01:21:19,390
We have 10,000 possibilities
reduced to 80,000 after MACS

1622
01:21:19,390 --> 01:21:21,690
and we add a construction keying rule,

1623
01:21:21,690 --> 01:21:25,190
that in pin one there was a
ball bearing with thickness four

1624
01:21:25,190 --> 01:21:28,150
and the master construction
key also has to have

1625
01:21:28,150 --> 01:21:31,390
a MACS of seven and
it'll take the computer

1626
01:21:31,390 --> 01:21:32,750
a few seconds to crunch that,

1627
01:21:32,750 --> 01:21:35,010
and we see that these
bottom four positions

1628
01:21:35,010 --> 01:21:37,070
cannot be that master key

1629
01:21:37,070 --> 01:21:39,440
because there would have been
no possible construction key

1630
01:21:39,440 --> 01:21:41,850
to make from it.

1631
01:21:41,850 --> 01:21:44,410
The MACS requirement
for the construction key

1632
01:21:44,410 --> 01:21:45,580
and the grand master key

1633
01:21:45,580 --> 01:21:47,950
with a difference of four in pin one,

1634
01:21:47,950 --> 01:21:52,370
further limits what lock or
what key differs are available

1635
01:21:52,370 --> 01:21:54,413
to be our master key.

1636
01:21:55,990 --> 01:21:58,540
So that's one interesting type of system.

1637
01:21:58,540 --> 01:22:02,150
another is what's called
interchangeable core systems.

1638
01:22:02,150 --> 01:22:04,400
So if you have ever seen
locks that look like this,

1639
01:22:04,400 --> 01:22:07,040
they have a figure
eight shape around them.

1640
01:22:07,040 --> 01:22:10,150
That's because that figure eight
shape is actually removable

1641
01:22:10,150 --> 01:22:12,670
and there's a little locking
lug that keeps it in place,

1642
01:22:12,670 --> 01:22:15,170
but with a special key
called a control key,

1643
01:22:15,170 --> 01:22:16,143
we can remove it.

1644
01:22:16,990 --> 01:22:21,990
So the way that this works
is we have our IC core,

1645
01:22:23,330 --> 01:22:26,090
that looks something like this.

1646
01:22:26,090 --> 01:22:28,703
And when we normally operate it,

1647
01:22:30,510 --> 01:22:34,670
it's going to turn just the
plug and the core stays in place

1648
01:22:34,670 --> 01:22:36,233
But when we use a special control key,

1649
01:22:36,233 --> 01:22:41,233
it's going to turn slightly
and retract this IC locking lug

1650
01:22:43,940 --> 01:22:47,390
The way that that works is if we look at

1651
01:22:51,360 --> 01:22:55,500
just the core and the IC
collar, we have two shear lines.

1652
01:22:55,500 --> 01:22:59,620
One is matching where the plug is

1653
01:22:59,620 --> 01:23:01,600
and one is a little bit higher

1654
01:23:01,600 --> 01:23:04,460
and it's going to be
just for the IC collar.

1655
01:23:04,460 --> 01:23:08,640
So if our pins have a shear
line, all matching the plug,

1656
01:23:08,640 --> 01:23:13,610
then the plug is going to
turn, but the collar will not,

1657
01:23:13,610 --> 01:23:17,080
and so this is a standard
unlocking of this lock.

1658
01:23:17,080 --> 01:23:19,560
If, however, the pins extend up

1659
01:23:19,560 --> 01:23:21,660
and we have a shear line
across these two pins

1660
01:23:21,660 --> 01:23:26,290
and then the upper shear
line on the IC collar,

1661
01:23:26,290 --> 01:23:28,200
and then these two as well,

1662
01:23:28,200 --> 01:23:30,740
then what happens is our
interchangeable collar

1663
01:23:30,740 --> 01:23:34,280
gets retracted, and it allows us to remove

1664
01:23:34,280 --> 01:23:35,713
this particular lock.

1665
01:23:37,030 --> 01:23:40,860
This is very interesting
when we look at systems

1666
01:23:40,860 --> 01:23:42,960
that do not have an IC collar that extends

1667
01:23:42,960 --> 01:23:44,220
across all the pins.

1668
01:23:44,220 --> 01:23:47,717
In this case, it only
uses pins three and four,

1669
01:23:47,717 --> 01:23:51,780
and that creates a number
of interesting properties.

1670
01:23:51,780 --> 01:23:54,230
So one of those properties is,

1671
01:23:54,230 --> 01:23:57,680
let's make this into a Medeco system.

1672
01:24:01,510 --> 01:24:03,950
We can see this collar here,

1673
01:24:03,950 --> 01:24:07,920
and so we have this lower
shear line with the plug

1674
01:24:07,920 --> 01:24:10,260
and this upper shear
line for the IC collar.

1675
01:24:10,260 --> 01:24:13,040
And that's what we're going
to look at when we examine

1676
01:24:13,040 --> 01:24:15,763
how these locks work in
terms of the bitting.

1677
01:24:18,540 --> 01:24:20,900
So what's powerful about how they work,

1678
01:24:20,900 --> 01:24:24,900
in terms of the bitting, in
terms of getting us information,

1679
01:24:24,900 --> 01:24:27,240
is the way many locksmiths do it up.

1680
01:24:27,240 --> 01:24:30,410
And so we'll use Medeco as an
example, because as we'll see,

1681
01:24:30,410 --> 01:24:34,240
it creates a very restricted
set of possible master keys

1682
01:24:34,240 --> 01:24:37,710
for IC core systems in many, many cases.

1683
01:24:37,710 --> 01:24:42,370
So we have our change key
and we put it into the lock

1684
01:24:42,370 --> 01:24:47,370
and it unlocks to the regular shear line.

1685
01:24:47,830 --> 01:24:51,190
And so we turn the key,
it unlocks regularly,

1686
01:24:51,190 --> 01:24:54,900
and our master key is completely
different bits, of course,

1687
01:24:54,900 --> 01:24:56,126
completely different heights,

1688
01:24:56,126 --> 01:24:59,450
but it also unlocks to
our regular shear line,

1689
01:24:59,450 --> 01:25:02,700
and the interchangeable shear line binds,

1690
01:25:02,700 --> 01:25:05,300
so that does not actually open.

1691
01:25:05,300 --> 01:25:08,580
However, when we put in
our core removed key,

1692
01:25:08,580 --> 01:25:12,149
it now binds between the
core and the IC collar,

1693
01:25:12,149 --> 01:25:15,290
but has a shear line at
the top of the IC collar.

1694
01:25:15,290 --> 01:25:18,630
And we turn that, it's
gonna turn the IC collar

1695
01:25:18,630 --> 01:25:22,430
and release it, and allow
us to remove that IC core,

1696
01:25:22,430 --> 01:25:26,280
and we see now that it works
on this upper shear line,

1697
01:25:26,280 --> 01:25:27,670
as well as of course the lower ones

1698
01:25:27,670 --> 01:25:30,043
have to work for the plug to turn as well.

1699
01:25:31,660 --> 01:25:34,750
What many locksmiths do in order to avoid

1700
01:25:34,750 --> 01:25:37,170
having to have multiple
shear lines in a pin stack

1701
01:25:37,170 --> 01:25:40,590
and also avoid limitations
on the mastering system,

1702
01:25:40,590 --> 01:25:43,910
is they will have the
change key, or sorry,

1703
01:25:43,910 --> 01:25:48,490
the core remove key simply
be three positions higher

1704
01:25:48,490 --> 01:25:53,210
than the master key in those
two IC collar control pins.

1705
01:25:53,210 --> 01:25:55,760
It doesn't have to be done this way,

1706
01:25:55,760 --> 01:25:57,800
we could do something
a little bit different.

1707
01:25:57,800 --> 01:25:59,810
We could have our core remove key,

1708
01:25:59,810 --> 01:26:03,250
say be something a bit lower

1709
01:26:03,250 --> 01:26:08,250
and then have our core control
position be an eight cut,

1710
01:26:11,670 --> 01:26:14,250
so that wouldn't be ever possible
to create a key that deep,

1711
01:26:14,250 --> 01:26:16,520
but it will remove the core.

1712
01:26:16,520 --> 01:26:19,550
But many locksmiths don't do that

1713
01:26:19,550 --> 01:26:22,973
because it requires more
pins as well as it restricts

1714
01:26:22,973 --> 01:26:26,120
the size of your mastering system.

1715
01:26:26,120 --> 01:26:28,669
And this is true, particularly for Medeco,

1716
01:26:28,669 --> 01:26:32,250
We see empirically about
two thirds of the time

1717
01:26:32,250 --> 01:26:35,180
this being done with the Grandmaster key

1718
01:26:35,180 --> 01:26:37,830
and the core remove key
just being three positions

1719
01:26:37,830 --> 01:26:41,333
different in those two middle positions.

1720
01:26:42,310 --> 01:26:46,470
In Medeco, that becomes
incredibly powerful actually,

1721
01:26:46,470 --> 01:26:51,470
for deducing what the
master key is going to be.

1722
01:26:52,350 --> 01:26:57,350
So, in a 12 cut Medeco key,
so Medeco can have two cuts,

1723
01:26:58,310 --> 01:27:01,570
double cuts in some
positions or all of them

1724
01:27:01,570 --> 01:27:03,240
to create a high level master key,

1725
01:27:03,240 --> 01:27:04,730
and we'll talk a little bit more later

1726
01:27:04,730 --> 01:27:07,057
about what that specifically means,

1727
01:27:07,057 --> 01:27:09,340
but because these double cuts are so wide,

1728
01:27:09,340 --> 01:27:11,460
the MACS is very small,

1729
01:27:11,460 --> 01:27:16,020
it's a two between a double
cut and a double cut.

1730
01:27:16,020 --> 01:27:18,380
And so that already, that MACS of two,

1731
01:27:18,380 --> 01:27:22,400
severely limits what a
Medeco system can take on.

1732
01:27:22,400 --> 01:27:26,233
So a Medeco system would have
six depths, usually six pins,

1733
01:27:27,550 --> 01:27:32,550
and it has a MACS of only
two, and so that reduces us

1734
01:27:32,773 --> 01:27:37,773
from 46,000 down to only
7300 possible combinations.

1735
01:27:40,310 --> 01:27:45,310
But what the IC core does, is
significantly more restrictive

1736
01:27:46,060 --> 01:27:50,740
because if we want to
make the IC control key

1737
01:27:50,740 --> 01:27:53,510
three higher than the master key,

1738
01:27:53,510 --> 01:27:56,800
that means that the master key
can't be a one, two or three

1739
01:27:56,800 --> 01:28:01,170
in pins three and four,
and so we'll add that rule

1740
01:28:01,170 --> 01:28:05,470
there as well, and the master
control key has to adhere

1741
01:28:05,470 --> 01:28:07,260
to MACS in addition.

1742
01:28:07,260 --> 01:28:10,530
So we'll see the effect that
that has when we add this rule

1743
01:28:10,530 --> 01:28:13,080
and it'll take a second to compute.

1744
01:28:13,080 --> 01:28:16,696
And so what we see is, these
three positions cannot be held

1745
01:28:16,696 --> 01:28:19,070
by pin three or four in the master system.

1746
01:28:19,070 --> 01:28:22,380
So the master is forced
down to four, five and six.

1747
01:28:22,380 --> 01:28:25,010
In addition, pin two, can't be a one

1748
01:28:25,010 --> 01:28:26,750
because that's a MACS violation,

1749
01:28:26,750 --> 01:28:28,710
a master must be four or lower,

1750
01:28:28,710 --> 01:28:32,161
so it can't go up three, it acts as two.

1751
01:28:32,161 --> 01:28:36,630
Pin two and pin of five,
can't be a six depth

1752
01:28:36,630 --> 01:28:38,410
because that would be a MACS violation

1753
01:28:38,410 --> 01:28:41,810
for the interchangeable core control key.

1754
01:28:41,810 --> 01:28:45,510
If our Grandmaster key is
the deepest, it's a six cut,

1755
01:28:45,510 --> 01:28:48,837
that means our IC core is
three higher or a three cut,

1756
01:28:48,837 --> 01:28:51,160
and we can't have a six beside a three

1757
01:28:51,160 --> 01:28:54,400
in our interchangeable core master key.

1758
01:28:54,400 --> 01:28:57,810
So that significantly reduces
the key space available

1759
01:28:57,810 --> 01:29:00,420
in these types of Medeco systems.

1760
01:29:00,420 --> 01:29:03,730
Right now it's down to 784,

1761
01:29:03,730 --> 01:29:05,980
it gets even more restricted than that,

1762
01:29:05,980 --> 01:29:08,120
for the following reason.

1763
01:29:08,120 --> 01:29:11,040
it's generally a good idea
to have our master key

1764
01:29:11,040 --> 01:29:14,520
use at least one pin in
the highest position.

1765
01:29:14,520 --> 01:29:17,660
And that way we can make sure
that none of our change keys

1766
01:29:17,660 --> 01:29:20,900
will be able to be filed
down into a master key.

1767
01:29:20,900 --> 01:29:22,370
We could have one a bit lower,

1768
01:29:22,370 --> 01:29:24,700
but that's then gonna restrict
how large our master system

1769
01:29:24,700 --> 01:29:27,860
can grow while adhering to that rule.

1770
01:29:27,860 --> 01:29:30,280
If we look at the limitations imposed

1771
01:29:30,280 --> 01:29:32,060
by this particular system,

1772
01:29:32,060 --> 01:29:34,160
we'll see that there's only two places

1773
01:29:34,160 --> 01:29:39,160
that that one cut can
go, pin one or pin six.

1774
01:29:39,640 --> 01:29:44,640
So if we add a requirement
that one pin must be high cut,

1775
01:29:44,940 --> 01:29:47,970
and it'll take a minute
to compute that as well,

1776
01:29:47,970 --> 01:29:49,270
we're gonna see that we're now down

1777
01:29:49,270 --> 01:29:53,540
to 159 possible master keys.

1778
01:29:53,540 --> 01:29:55,780
That is a significant limitation,

1779
01:29:55,780 --> 01:29:58,820
and that's given very little information

1780
01:29:58,820 --> 01:30:01,770
about our Medeco system.

1781
01:30:01,770 --> 01:30:06,490
It's given that we have a large facility,

1782
01:30:06,490 --> 01:30:08,150
so we can assume that they were planning

1783
01:30:08,150 --> 01:30:11,980
for potentially needing
to expand to a master key

1784
01:30:11,980 --> 01:30:14,430
that's double cut in all positions.

1785
01:30:14,430 --> 01:30:17,260
And we see at least one
interchangeable core

1786
01:30:17,260 --> 01:30:20,423
somewhere on that system, and that's it.

1787
01:30:21,530 --> 01:30:24,240
Knowing those two
things, we can infer that

1788
01:30:24,240 --> 01:30:26,460
with about of two thirds probability,

1789
01:30:26,460 --> 01:30:28,330
our master key is going to be limited

1790
01:30:28,330 --> 01:30:32,610
to one of these 159. It
gets even less than that,

1791
01:30:32,610 --> 01:30:37,610
because it usually makes
sense to put your one depth

1792
01:30:38,640 --> 01:30:41,380
in pin one, and that way
the key is nice and sturdy.

1793
01:30:41,380 --> 01:30:42,570
It's not gonna break.

1794
01:30:42,570 --> 01:30:44,560
We don't wanna put a very deep cut pin one

1795
01:30:44,560 --> 01:30:48,740
or that grandmaster key
is liable to break off.

1796
01:30:48,740 --> 01:30:52,063
And so when we add that
particular requirement,

1797
01:30:53,073 --> 01:30:56,930
it then is only 84 differs
that follow through

1798
01:30:56,930 --> 01:30:59,030
in pin one, and we can see MACS

1799
01:30:59,030 --> 01:31:01,650
restricts this incredibly tightly.

1800
01:31:01,650 --> 01:31:06,060
So there's the 84 possible
situations that could exist

1801
01:31:06,060 --> 01:31:09,330
if locksmiths do what a lot of them do

1802
01:31:09,330 --> 01:31:10,930
when designing Medeco systems,

1803
01:31:10,930 --> 01:31:12,840
which is follow these constraints.

1804
01:31:12,840 --> 01:31:15,560
It limits the key space significantly.

1805
01:31:15,560 --> 01:31:16,820
Now they don't need to,

1806
01:31:16,820 --> 01:31:20,180
they don't need to use a
pin at the highest one,

1807
01:31:20,180 --> 01:31:22,100
they could put it in pin six instead,

1808
01:31:22,100 --> 01:31:24,440
and of course, they could
do up their IC system

1809
01:31:24,440 --> 01:31:27,440
so that it doesn't require
their master key to be low

1810
01:31:27,440 --> 01:31:29,206
in pins three and four.

1811
01:31:29,206 --> 01:31:31,664
But most locksmiths
don't really think about

1812
01:31:31,664 --> 01:31:34,830
the key space reduction
that they are creating

1813
01:31:34,830 --> 01:31:37,230
in terms of brute forcing this master key,

1814
01:31:37,230 --> 01:31:39,170
when they're designing that system,

1815
01:31:39,170 --> 01:31:42,543
and so that's why this is
something that's so common to see.

1816
01:31:44,090 --> 01:31:46,190
A couple other things that we can note

1817
01:31:46,190 --> 01:31:48,000
about this particular system,

1818
01:31:48,000 --> 01:31:52,800
is that if we have a master
key or even a change key,

1819
01:31:52,800 --> 01:31:54,530
so just this change key.

1820
01:31:54,530 --> 01:31:56,650
Now, all we need to do is vary

1821
01:31:56,650 --> 01:32:00,910
and do rights amplification
on these two middle pins

1822
01:32:00,910 --> 01:32:02,980
to determine what the core remove key is.

1823
01:32:02,980 --> 01:32:06,620
So in this case, pin three is a five,

1824
01:32:06,620 --> 01:32:09,220
and so if we add three to it,

1825
01:32:09,220 --> 01:32:11,230
it goes to four, three, two,

1826
01:32:11,230 --> 01:32:15,310
and now we've hit the IC control line.

1827
01:32:15,310 --> 01:32:20,040
And then pin four, we can
vary in either direction

1828
01:32:20,040 --> 01:32:23,370
to try to hit the IC
control line for it as well.

1829
01:32:23,370 --> 01:32:25,670
So we only actually have to vary one pin

1830
01:32:25,670 --> 01:32:30,510
to go from our change key
to an operable control key.

1831
01:32:30,510 --> 01:32:32,440
It's just going to be for this lock,

1832
01:32:32,440 --> 01:32:35,480
but what it lets us do
is remove the IC core

1833
01:32:35,480 --> 01:32:36,860
and then we can take it apart,

1834
01:32:36,860 --> 01:32:40,150
and disassembly of the lock
then will let us derive

1835
01:32:40,150 --> 01:32:41,943
the master key from that.

1836
01:32:43,520 --> 01:32:46,760
Other types of locks
have a similar situation,

1837
01:32:46,760 --> 01:32:51,760
So Schlage and Yale control keys use

1838
01:32:52,340 --> 01:32:54,250
a slightly different technology.

1839
01:32:54,250 --> 01:32:57,220
They have a special
seventh pin in the back,

1840
01:32:57,220 --> 01:32:59,570
where if the key is a bit
longer in the case of Schlage,

1841
01:32:59,570 --> 01:33:02,420
it has this special nose
on it, sticking out,

1842
01:33:02,420 --> 01:33:04,624
it's going to actuate, that seventh pin,

1843
01:33:04,624 --> 01:33:07,700
which will pull in this
little retaining log,

1844
01:33:07,700 --> 01:33:10,610
and when it does that, you
can then remove the core.

1845
01:33:10,610 --> 01:33:14,530
So if you have an operable
key for this particular lock,

1846
01:33:14,530 --> 01:33:16,900
all you need to do is copy that key

1847
01:33:16,900 --> 01:33:19,680
onto a slightly longer blank that contains

1848
01:33:19,680 --> 01:33:22,610
this little nose on it,
and you can use that key

1849
01:33:22,610 --> 01:33:24,600
to remove the core, at which point

1850
01:33:24,600 --> 01:33:28,010
you can then disassemble it
and deduce the master key.

1851
01:33:28,010 --> 01:33:30,580
So let's look at some
rights amplification attacks

1852
01:33:30,580 --> 01:33:33,390
in some special secondary locking systems.

1853
01:33:33,390 --> 01:33:36,140
So we'll start with Mul-T-Lock,
which has got a nice

1854
01:33:36,140 --> 01:33:39,560
pin in pin system, that we
can attack using all the other

1855
01:33:39,560 --> 01:33:41,950
techniques that we've
talked about in this talk.

1856
01:33:41,950 --> 01:33:45,710
But it also has side pins,
they're used for mastering,

1857
01:33:45,710 --> 01:33:47,990
and effectively, these
side pins are going to fit

1858
01:33:47,990 --> 01:33:50,890
into these side dimples
drilled into the key.

1859
01:33:50,890 --> 01:33:53,180
And in this case, we have a correct key,

1860
01:33:53,180 --> 01:33:54,397
the side dimples are all there,

1861
01:33:54,397 --> 01:33:57,120
and so the side pins
are able to fit into it.

1862
01:33:57,120 --> 01:33:59,820
We can turn the key and
they don't impede rotation

1863
01:33:59,820 --> 01:34:01,070
of the plug.

1864
01:34:01,070 --> 01:34:04,200
When an incorrect key is
inserted, there are no dimples,

1865
01:34:04,200 --> 01:34:06,710
and so the slide pins are
forced out into the plug

1866
01:34:06,710 --> 01:34:10,140
and that's actually gonna
stop us for rotating that key.

1867
01:34:10,140 --> 01:34:12,040
This is used for mastering,

1868
01:34:12,040 --> 01:34:13,160
so we have, in this case,

1869
01:34:13,160 --> 01:34:16,450
a key that's got four of
the five holes drilled,

1870
01:34:16,450 --> 01:34:20,500
this is its correct lock, so
these four pins are present

1871
01:34:20,500 --> 01:34:22,510
and the key is able to turn.

1872
01:34:22,510 --> 01:34:24,810
For a lock that is not
supposed to be able to open,

1873
01:34:24,810 --> 01:34:27,220
there'll be a pin populated here as well.

1874
01:34:27,220 --> 01:34:31,020
And this lack of a hole prevents
that pin from moving out

1875
01:34:31,020 --> 01:34:36,020
of the housing and it will
stop the key from turning.

1876
01:34:36,040 --> 01:34:39,170
This is of course a
trivial thing to amplify,

1877
01:34:39,170 --> 01:34:41,430
we just drill an additional hole,

1878
01:34:41,430 --> 01:34:44,320
and now all of the mastering that's done

1879
01:34:44,320 --> 01:34:46,510
with these side pins has been defeated,

1880
01:34:46,510 --> 01:34:48,860
this key will work in anything
regardless of the side pins.

1881
01:34:48,860 --> 01:34:51,710
And then we just have to
use the other techniques

1882
01:34:51,710 --> 01:34:55,430
to rights amplify the top cuts as well.

1883
01:34:55,430 --> 01:34:59,310
So that's a very simple
rights amplification attack.

1884
01:34:59,310 --> 01:35:02,110
You can do something very, very
similar by filing metal off

1885
01:35:02,110 --> 01:35:03,800
of sectional key ways.

1886
01:35:03,800 --> 01:35:07,280
So sometimes mastering is
done by having a key way

1887
01:35:07,280 --> 01:35:09,583
that will not enter the
key way of some other lock

1888
01:35:09,583 --> 01:35:12,560
it's not supposed to
open or a key that won't,

1889
01:35:12,560 --> 01:35:14,880
but then we have a master blank,

1890
01:35:14,880 --> 01:35:16,830
that's going to enter both of these locks

1891
01:35:16,830 --> 01:35:18,780
because it's got metal missing from it.

1892
01:35:19,835 --> 01:35:22,200
And so what we need to do
to rights amplify there,

1893
01:35:22,200 --> 01:35:27,200
is take our key that works on
one of the low level key ways,

1894
01:35:27,410 --> 01:35:31,690
and just copy that bitting code
onto our all section blank,

1895
01:35:31,690 --> 01:35:33,730
at which point it's going to then enter

1896
01:35:33,730 --> 01:35:36,863
all of these locks and will
be able to open them as well.

1897
01:35:38,040 --> 01:35:41,483
With Medeco biaxial we see
something quite similar.

1898
01:35:42,780 --> 01:35:46,483
So Medeco biaxial has
potential for double cuts,

1899
01:35:47,610 --> 01:35:51,360
and what we can have is, in
a particular pin position,

1900
01:35:51,360 --> 01:35:54,090
the pin has got this beveled edge to it,

1901
01:35:54,090 --> 01:35:56,700
so it goes to one side or another.

1902
01:35:56,700 --> 01:35:58,800
It can bevel towards
the shoulder of the key

1903
01:35:58,800 --> 01:36:01,207
and be a fore cut, or
towards the tip of the key

1904
01:36:01,207 --> 01:36:02,643
and be an aft cut.

1905
01:36:03,680 --> 01:36:06,360
In a master key, that's got double cuts,

1906
01:36:06,360 --> 01:36:08,340
regardless of whether
the lock that we're in

1907
01:36:08,340 --> 01:36:12,390
has a fore pin or an aft
pin, it's going to interact

1908
01:36:12,390 --> 01:36:16,086
with that key properly and open it up.

1909
01:36:16,086 --> 01:36:18,600
And Medeco uses this
for mastering as well.

1910
01:36:18,600 --> 01:36:21,840
So a lower level key,
or a lower level master

1911
01:36:21,840 --> 01:36:24,053
might be missing one of these cuts.

1912
01:36:24,950 --> 01:36:27,260
We can very easily rights amplify that

1913
01:36:27,260 --> 01:36:29,700
if we have some mid-level master.

1914
01:36:29,700 --> 01:36:33,267
So here's MKA, it's got five single cuts

1915
01:36:33,267 --> 01:36:35,690
and a double cut in pin six,

1916
01:36:35,690 --> 01:36:39,350
and then we have any
old key on the B system.

1917
01:36:39,350 --> 01:36:43,360
And so what we see for
instance, is this pin six,

1918
01:36:43,360 --> 01:36:47,530
that is a double cut,
pin five we have an aft,

1919
01:36:47,530 --> 01:36:50,090
and it's a right cut.

1920
01:36:50,090 --> 01:36:53,440
In this key on a B system, in pin five,

1921
01:36:53,440 --> 01:36:56,710
we have a fore and it's a left cut.

1922
01:36:56,710 --> 01:36:58,930
So what we can do is take a left cut

1923
01:36:58,930 --> 01:37:02,810
and add it to the fore
position on our MKA,

1924
01:37:02,810 --> 01:37:05,680
at these same master
depths, and that's actually

1925
01:37:05,680 --> 01:37:09,330
going to amplify this key into a full GMK,

1926
01:37:09,330 --> 01:37:13,300
that's going to work on all
locks, even if it has an aft pin

1927
01:37:13,300 --> 01:37:16,760
in that position, sorry, a
fore pin in that position.

1928
01:37:16,760 --> 01:37:19,360
And so we do that for all other positions

1929
01:37:19,360 --> 01:37:24,340
where the fore aft of our
B key differs from our MKA

1930
01:37:24,340 --> 01:37:28,630
and we've effectively now
amplified the power of our MKA key

1931
01:37:28,630 --> 01:37:32,330
to be a full GMK using the information

1932
01:37:32,330 --> 01:37:37,070
of these angles that we
see on this key here.

1933
01:37:37,070 --> 01:37:39,630
So now that we understand how the basics

1934
01:37:39,630 --> 01:37:42,160
of Medeco biaxial works,
we can add a few tools

1935
01:37:42,160 --> 01:37:46,370
to our arsenal to decode
non-mastered Medeco systems.

1936
01:37:46,370 --> 01:37:48,730
So if we start with a
six pin Medeco system,

1937
01:37:48,730 --> 01:37:49,703
if it's non-mastered,

1938
01:37:49,703 --> 01:37:53,050
it's going to follow Medeco's code books.

1939
01:37:53,050 --> 01:37:55,340
And so the depths are going
to follow those code books,

1940
01:37:55,340 --> 01:37:57,620
give the computer a second to compute,

1941
01:37:57,620 --> 01:38:01,360
And what we see immediately
is that pin one, two, five,

1942
01:38:01,360 --> 01:38:04,990
and six will never be a one
in a non-mastered system,

1943
01:38:04,990 --> 01:38:07,510
at least for this version of code books

1944
01:38:07,510 --> 01:38:09,330
that we're going to be looking at today,

1945
01:38:09,330 --> 01:38:12,690
which is true for just
about every Medeco system

1946
01:38:12,690 --> 01:38:15,370
created before 2008.

1947
01:38:15,370 --> 01:38:18,708
So immediately we see that
if we wanted to impression

1948
01:38:18,708 --> 01:38:21,680
this lock, and you can
impression Medeco locks,

1949
01:38:21,680 --> 01:38:23,077
we'd start with 221122.

1950
01:38:24,537 --> 01:38:26,750
And as we went through impressioning this,

1951
01:38:26,750 --> 01:38:29,870
we would end up skipping a
whole bunch increasingly so,

1952
01:38:29,870 --> 01:38:32,593
as we get closer and
closer to the final key.

1953
01:38:33,620 --> 01:38:35,197
So the code book helps with that,

1954
01:38:35,197 --> 01:38:37,820
and of course if we have
a photo that's close,

1955
01:38:37,820 --> 01:38:41,700
but isn't quite enough
to get the exact bitting,

1956
01:38:41,700 --> 01:38:44,330
combining that with code
books is usually enough

1957
01:38:44,330 --> 01:38:46,773
to determine what the depths are.

1958
01:38:47,700 --> 01:38:50,060
Medeco also has angles though,

1959
01:38:50,060 --> 01:38:53,700
and the angles also have code books.

1960
01:38:53,700 --> 01:38:56,460
So if we add, that the
code books must follow

1961
01:38:56,460 --> 01:38:59,120
Medeco's non-mastered angle books,

1962
01:38:59,120 --> 01:39:02,680
we see that right away, some
of them are given already.

1963
01:39:02,680 --> 01:39:06,800
So if we happen to have a pin
three in the aft position,

1964
01:39:06,800 --> 01:39:08,293
it's going to be a right cut.

1965
01:39:09,538 --> 01:39:12,810
This can be useful, now that we have this,

1966
01:39:12,810 --> 01:39:17,430
if we know whether a particular
lock is a fore or an aft

1967
01:39:17,430 --> 01:39:19,470
in each position.

1968
01:39:19,470 --> 01:39:22,290
How do we tell that? Well,
here is a little device

1969
01:39:22,290 --> 01:39:24,980
that we designed that does exactly that.

1970
01:39:24,980 --> 01:39:28,410
So here's one version
where you take a blank,

1971
01:39:28,410 --> 01:39:32,000
you cut a little notch into
the sixth aft position,

1972
01:39:32,000 --> 01:39:33,790
and then you stick it into the lock

1973
01:39:33,790 --> 01:39:36,360
and it will clunk, clunk,
clunk all the way along

1974
01:39:36,360 --> 01:39:40,220
as each pin fits into it,
based on how far it clunks,

1975
01:39:40,220 --> 01:39:43,330
if it aligns with these
lines for the fores or not,

1976
01:39:43,330 --> 01:39:45,450
you can tell which is for an aft.

1977
01:39:45,450 --> 01:39:47,750
Here's another design that
can be cut down from any key,

1978
01:39:47,750 --> 01:39:51,230
not just a blank, we have
a little tip at the end

1979
01:39:51,230 --> 01:39:54,210
with a notch in it, again,
at a six aft position,

1980
01:39:54,210 --> 01:39:56,140
and we can clunk, clunk, clunk it along

1981
01:39:56,140 --> 01:40:00,070
and make some marker marks on the key

1982
01:40:00,070 --> 01:40:02,990
and then decode it
afterwards and determine

1983
01:40:02,990 --> 01:40:06,823
whether this means fore and
aft in each of these positions.

1984
01:40:08,133 --> 01:40:12,820
So for instance, if we
know that we have a lock

1985
01:40:12,820 --> 01:40:15,740
in front of us and we've
decoded the fore and aft,

1986
01:40:15,740 --> 01:40:18,110
and if we find it to be, let's say,

1987
01:40:18,110 --> 01:40:23,110
aft, fore, aft, fore, fore, aft.

1988
01:40:24,825 --> 01:40:28,420
In that particular case,
what actually happens is,

1989
01:40:28,420 --> 01:40:33,420
we completely get the angle
sidebar code figured out for us.

1990
01:40:34,360 --> 01:40:35,440
We're just gonna remove the depths

1991
01:40:35,440 --> 01:40:38,310
cause they kill the compute time, for now.

1992
01:40:38,310 --> 01:40:41,500
If we aren't so lucky,
this is the only case,

1993
01:40:41,500 --> 01:40:43,160
the fores and afts where that happens,

1994
01:40:43,160 --> 01:40:46,120
let's say we get a fore
here and an aft there,

1995
01:40:46,120 --> 01:40:48,700
so now we have a number of possibilities,

1996
01:40:48,700 --> 01:40:52,250
we can help to decode what
those angles are based on

1997
01:40:52,250 --> 01:40:56,040
an innovation that Mark Webber
Tobias and Tobias Bluzsmanis

1998
01:40:56,040 --> 01:40:57,960
came out with a number of years ago,

1999
01:40:57,960 --> 01:40:59,730
which is Medeco bump keys,

2000
01:40:59,730 --> 01:41:03,043
which takes advantage of flaws
in their angle code books.

2001
01:41:04,030 --> 01:41:06,340
But these bump keys, there's
a set of four of them,

2002
01:41:06,340 --> 01:41:10,180
and if we can get one of them
to work once on this lock,

2003
01:41:10,180 --> 01:41:12,470
then we can use that to
create a key that will work

2004
01:41:12,470 --> 01:41:17,310
very easily forevermore by identifying,

2005
01:41:17,310 --> 01:41:19,163
well one of these bump keys worked,

2006
01:41:20,930 --> 01:41:24,100
and that's gonna go ahead and figure out

2007
01:41:24,100 --> 01:41:26,980
what those remaining unknown
angles are based on the fact

2008
01:41:26,980 --> 01:41:29,130
that that particular
version of the bump key

2009
01:41:29,130 --> 01:41:30,323
happened to work.

2010
01:41:31,220 --> 01:41:34,040
If say, even that isn't enough for us,

2011
01:41:34,040 --> 01:41:37,630
so in this case, pin six, it could be a Q,

2012
01:41:37,630 --> 01:41:40,467
which is a right cut or a
B which is a center cut.

2013
01:41:41,470 --> 01:41:44,550
Right, is 20 degree
angle and center is zero,

2014
01:41:44,550 --> 01:41:47,960
and another thing that the
Tobias's found out is that,

2015
01:41:47,960 --> 01:41:50,370
like I mentioned before
with some blocks being able

2016
01:41:50,370 --> 01:41:53,210
to accept half height cuts in the heights,

2017
01:41:53,210 --> 01:41:55,360
it'll accept half angle cuts.

2018
01:41:55,360 --> 01:41:57,660
So I can make a key at 10 degrees,

2019
01:41:57,660 --> 01:41:59,850
halfway between center and right,

2020
01:41:59,850 --> 01:42:03,290
and that will actually operate this lock.

2021
01:42:03,290 --> 01:42:06,300
So a number of techniques
that we can use to

2022
01:42:06,300 --> 01:42:09,460
decode Medeco systems.

2023
01:42:09,460 --> 01:42:11,860
So we've covered a lot of techniques

2024
01:42:11,860 --> 01:42:13,930
for how to use various
sources of information

2025
01:42:13,930 --> 01:42:16,130
to come down to a bitting code.

2026
01:42:16,130 --> 01:42:19,260
So a number that represents
what the key should be cut to,

2027
01:42:19,260 --> 01:42:20,810
what depth it should be,

2028
01:42:20,810 --> 01:42:22,390
but how do we take that and turn that

2029
01:42:22,390 --> 01:42:24,610
into an actual usable key?

2030
01:42:24,610 --> 01:42:26,440
Well, we could start with the key blank

2031
01:42:26,440 --> 01:42:28,130
and file it down ourselves manually.

2032
01:42:28,130 --> 01:42:30,420
That's a perfectly valid way of doing it.

2033
01:42:30,420 --> 01:42:32,650
We can also use a machine, if we happen

2034
01:42:32,650 --> 01:42:35,790
to own a key machine,
but many of us don't,

2035
01:42:35,790 --> 01:42:38,360
and we could also try using a locksmith.

2036
01:42:38,360 --> 01:42:42,060
So the general procedure for
that is to identify the blank,

2037
01:42:42,060 --> 01:42:43,440
it's often printed right on it.

2038
01:42:43,440 --> 01:42:47,930
So WR5 for this Weiser
or Y1 for this Yale,

2039
01:42:47,930 --> 01:42:49,500
determine the bitting code that you want

2040
01:42:49,500 --> 01:42:51,400
using the techniques we've talked about,

2041
01:42:51,400 --> 01:42:52,500
and go to a locksmith.

2042
01:42:52,500 --> 01:42:54,840
So not a hardware store or a 7-Eleven,

2043
01:42:54,840 --> 01:42:58,010
and ask if they can cut a
key by code. If they say yes,

2044
01:42:58,010 --> 01:42:59,840
give them the blank name and the code,

2045
01:42:59,840 --> 01:43:04,840
such as a Schlage SC-1, with
bitting code, 0-4-2-8-5,

2046
01:43:05,040 --> 01:43:06,800
and they will usually cut it for you

2047
01:43:06,800 --> 01:43:08,530
for the duplicating rates.

2048
01:43:08,530 --> 01:43:10,880
If they happen to say
that key is restricted,

2049
01:43:10,880 --> 01:43:14,040
I can't cut you that, check
out the talk that myself

2050
01:43:14,040 --> 01:43:16,127
and my brother Bobby
gave last year, entitled

2051
01:43:16,127 --> 01:43:20,093
"Duplicating Restricted
Mechanical Keys", at DEF CON 27.

2052
01:43:21,490 --> 01:43:23,240
We'll talk a little bit about defenses,

2053
01:43:23,240 --> 01:43:26,059
which is a huge field and
could be a talk on its own,

2054
01:43:26,059 --> 01:43:29,910
but the most salient points there is avoid

2055
01:43:29,910 --> 01:43:32,440
very large mastering systems.

2056
01:43:32,440 --> 01:43:35,050
If the only reason you have
building A and building B

2057
01:43:35,050 --> 01:43:37,560
mastered together is so
that the superintendent

2058
01:43:37,560 --> 01:43:41,091
can carry one GMK instead of
two, that's really not worth

2059
01:43:41,091 --> 01:43:44,120
the added risk for that added convenience.

2060
01:43:44,120 --> 01:43:46,140
You also don't wanna master high security

2061
01:43:46,140 --> 01:43:48,960
and low security facilities on one system.

2062
01:43:48,960 --> 01:43:51,676
So I've seen cases
where a nuclear facility

2063
01:43:51,676 --> 01:43:55,820
was mastered together
with public washrooms.

2064
01:43:55,820 --> 01:43:57,860
The access control of
those public washrooms

2065
01:43:57,860 --> 01:44:00,340
is significantly less and
information from those locks

2066
01:44:00,340 --> 01:44:03,470
can be used to infiltrate
the nuclear facility,

2067
01:44:03,470 --> 01:44:05,730
that's absolutely something
that you wanna be separating

2068
01:44:05,730 --> 01:44:07,911
in your mastering system.

2069
01:44:07,911 --> 01:44:11,400
A missing lock is as bad as a missing GMK,

2070
01:44:11,400 --> 01:44:13,910
so if a lock goes missing and
it can't be accounted for,

2071
01:44:13,910 --> 01:44:15,330
you need to consider the possibility

2072
01:44:15,330 --> 01:44:18,330
that someone has
disassembled and decoded it

2073
01:44:18,330 --> 01:44:19,910
and made the key.

2074
01:44:19,910 --> 01:44:22,320
You can consider alternatives
to the two step system

2075
01:44:22,320 --> 01:44:24,120
and other various systems
that we've talked about

2076
01:44:24,120 --> 01:44:26,208
that can be exploited.

2077
01:44:26,208 --> 01:44:29,700
Specific to those attacks,
this is somewhat dependent

2078
01:44:29,700 --> 01:44:31,800
on whether it's actually
on your threat model,

2079
01:44:31,800 --> 01:44:33,090
this is not in the threat model

2080
01:44:33,090 --> 01:44:35,800
for the majority of applications.

2081
01:44:35,800 --> 01:44:37,390
You can use a restricted keying system,

2082
01:44:37,390 --> 01:44:39,463
it won't stop a determined attacker,

2083
01:44:40,410 --> 01:44:43,400
but it can slow them down
and it can drive the cost up

2084
01:44:43,400 --> 01:44:48,400
and potentially deter them
from carrying out the attack

2085
01:44:48,570 --> 01:44:51,520
in certain cases and
your facility, ultimately

2086
01:44:51,520 --> 01:44:54,490
should be secure even if
an attacker has the GMK.

2087
01:44:54,490 --> 01:44:58,260
So you wanna use
secondary security systems

2088
01:44:58,260 --> 01:45:01,270
such as guards and alarms
and a proper detection

2089
01:45:01,270 --> 01:45:03,130
and response mechanism.

2090
01:45:03,130 --> 01:45:04,780
All that a mechanical lock does

2091
01:45:04,780 --> 01:45:06,540
is keep honest people, honest,

2092
01:45:06,540 --> 01:45:08,300
and there's loads of ways past it,

2093
01:45:08,300 --> 01:45:11,540
both keying and forcible entry

2094
01:45:11,540 --> 01:45:15,623
and all sorts of other methods
that DEF CON is all about.

2095
01:45:16,740 --> 01:45:19,970
And use interchangeable core
or electronic components

2096
01:45:19,970 --> 01:45:23,110
or something to make re-keying easier,

2097
01:45:23,110 --> 01:45:25,550
if that becomes necessary.

2098
01:45:25,550 --> 01:45:27,500
You wanna have a response plan in place

2099
01:45:27,500 --> 01:45:31,450
for if the unthinkable
happens and your GMK

2100
01:45:31,450 --> 01:45:35,943
or a key to a particular
important area gets compromised.

2101
01:45:37,340 --> 01:45:39,880
If you see something like
this, so a lock goes missing

2102
01:45:39,880 --> 01:45:42,100
and you're not sure how that happened,

2103
01:45:42,100 --> 01:45:46,030
you wanna take that seriously
and for heaven sakes,

2104
01:45:46,030 --> 01:45:48,050
don't do this.

2105
01:45:48,050 --> 01:45:52,500
So thank you very much, I
encourage you to go try it.

2106
01:45:52,500 --> 01:45:54,580
Here are all the links to the applications

2107
01:45:54,580 --> 01:45:56,600
that I'm releasing, try
them out for yourself

2108
01:45:56,600 --> 01:45:58,330
and see what you can discover with them.

2109
01:45:58,330 --> 01:46:00,710
I'd like to extend an enormous thank you,

2110
01:46:00,710 --> 01:46:03,150
to Josh, Karen, and Jenny
and Bobby for their help

2111
01:46:03,150 --> 01:46:04,980
in getting this talk prepared,

2112
01:46:04,980 --> 01:46:07,530
in particular to Jenny, she
absolutely saved the day

2113
01:46:07,530 --> 01:46:10,460
with editing this video
at the last minute.

2114
01:46:10,460 --> 01:46:12,620
And I'd be happy to take your questions.

2115
01:46:12,620 --> 01:46:13,653
Thank you very much.

