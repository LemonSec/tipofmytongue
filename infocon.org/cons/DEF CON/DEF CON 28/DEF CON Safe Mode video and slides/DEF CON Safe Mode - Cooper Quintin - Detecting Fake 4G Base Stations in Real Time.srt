1
00:00:00,380 --> 00:00:01,890
- My name is Cooper Quintin

2
00:00:01,890 --> 00:00:03,777
and thank you for coming to my talk

3
00:00:03,777 --> 00:00:06,847
"Detecting 4G Base Stations in Real Time."

4
00:00:07,960 --> 00:00:09,460
First a little about me.

5
00:00:09,460 --> 00:00:13,483
I am a senior security
researcher at the EFF Threat Lab.

6
00:00:14,340 --> 00:00:16,560
I have a toddler, so
you'll have to forgive

7
00:00:16,560 --> 00:00:19,940
the dad jokes and possible
baby noises in the background.

8
00:00:19,940 --> 00:00:21,673
I'm also a former teenage phone phreak.

9
00:00:21,673 --> 00:00:25,100
I may have built some boxes
to do some nefarious things

10
00:00:25,100 --> 00:00:26,290
back in the day, which might explain

11
00:00:26,290 --> 00:00:28,223
why I got into the work that I do now.

12
00:00:30,110 --> 00:00:32,170
If you're not familiar with EFF,

13
00:00:32,170 --> 00:00:34,410
we are a member supported nonprofit.

14
00:00:34,410 --> 00:00:38,560
Over half of our annual funding
comes from small donations

15
00:00:38,560 --> 00:00:41,060
from our members, individual donations.

16
00:00:41,060 --> 00:00:43,430
And we defend civil liberties online.

17
00:00:43,430 --> 00:00:44,840
So we think that when you get online,

18
00:00:44,840 --> 00:00:46,130
your rights come with you

19
00:00:46,130 --> 00:00:48,130
and that when you're using technology,

20
00:00:48,130 --> 00:00:50,010
you still have rights
such as freedom of speech

21
00:00:50,010 --> 00:00:51,240
and the right to privacy.

22
00:00:51,240 --> 00:00:53,470
And we've been doing this
work for 30 years this year,

23
00:00:53,470 --> 00:00:55,640
we started in 1990.

24
00:00:55,640 --> 00:00:58,820
So we've been, we have a lot
of experience under our belt.

25
00:00:58,820 --> 00:01:00,130
We've been defending the internet

26
00:01:00,130 --> 00:01:02,030
and defending hackers for a long time.

27
00:01:03,230 --> 00:01:05,950
I work in the EFF Threat Lab
and I'll talk a little bit more

28
00:01:05,950 --> 00:01:07,640
about that in a second.

29
00:01:07,640 --> 00:01:10,863
But I want to first
introduce my colleague Yomna.

30
00:01:11,740 --> 00:01:14,640
She can't be here with me
on the DEF CON stage today,

31
00:01:14,640 --> 00:01:16,900
but none of this research
would have been possible

32
00:01:16,900 --> 00:01:18,700
without her hard work.

33
00:01:18,700 --> 00:01:20,870
This is as much her project as it is mine,

34
00:01:20,870 --> 00:01:24,080
and she is incredibly smart,
incredibly talented person.

35
00:01:24,080 --> 00:01:27,880
So if you see her in the virtual
halls of DEF CON Safe Mode,

36
00:01:27,880 --> 00:01:31,010
please buy her a virtual beer
or follow her on Twitter.

37
00:01:31,010 --> 00:01:34,510
Her name is @rival_elf and
she is a giant sentient

38
00:01:34,510 --> 00:01:35,580
very excitable radish.

39
00:01:35,580 --> 00:01:37,790
So don't be scared when you meet her.

40
00:01:37,790 --> 00:01:39,343
This is an actual photo of her.

41
00:01:41,070 --> 00:01:42,370
A bit about Threat Lab.

42
00:01:42,370 --> 00:01:45,820
We look at technology that
targets at-risk people.

43
00:01:45,820 --> 00:01:49,980
So by at-risk I mean
people who are at-risk

44
00:01:49,980 --> 00:01:52,050
of harm just for being who they are

45
00:01:52,050 --> 00:01:53,620
or having the beliefs that they do.

46
00:01:53,620 --> 00:01:56,330
And this includes activists,
human rights defenders,

47
00:01:56,330 --> 00:01:59,280
journalists, domestic
abuse victims, immigrants,

48
00:01:59,280 --> 00:02:02,280
sex workers, minority groups,

49
00:02:02,280 --> 00:02:04,810
political dissidents, and so on.

50
00:02:04,810 --> 00:02:07,470
Basically anybody who is at-risk.

51
00:02:07,470 --> 00:02:09,763
So this is the sort of
technology that we research

52
00:02:09,763 --> 00:02:12,497
and try to get a handle on.

53
00:02:12,497 --> 00:02:17,380
And we do this work because
even though cyber security teams

54
00:02:17,380 --> 00:02:20,010
and antivirus companies
are doing a good job

55
00:02:20,010 --> 00:02:23,180
of what they do, they mostly
care about the types of malware

56
00:02:23,180 --> 00:02:24,740
that affect their customers,

57
00:02:24,740 --> 00:02:26,500
which are usually enterprise customers.

58
00:02:26,500 --> 00:02:29,863
And this is things like
ransomware, banking trojans,

59
00:02:30,910 --> 00:02:33,570
things that steal
sensitive corporate data,

60
00:02:33,570 --> 00:02:35,870
things that affect bigger businesses.

61
00:02:35,870 --> 00:02:38,870
And we get to care about
the types of technology

62
00:02:38,870 --> 00:02:40,760
that infringe on civil
liberties and human rights

63
00:02:40,760 --> 00:02:44,600
of at-risk people
because these people that

64
00:02:44,600 --> 00:02:48,840
don't necessarily have the
budget to pay a security team.

65
00:02:48,840 --> 00:02:51,970
But we also, by virtue of
working for a nonprofit,

66
00:02:51,970 --> 00:02:54,270
don't have to worry about
meeting a bottom line

67
00:02:54,270 --> 00:02:55,280
at the end of the day.

68
00:02:55,280 --> 00:02:57,580
So we like to think of
ourselves as the security team

69
00:02:57,580 --> 00:03:00,763
for people who need it most and
yet can afford it the least.

70
00:03:02,520 --> 00:03:04,660
Our goals in this work are
of course first and foremost

71
00:03:04,660 --> 00:03:05,493
to protect people.

72
00:03:05,493 --> 00:03:07,300
We want to make sure that the people

73
00:03:07,300 --> 00:03:10,660
in the communities that
we work with are safe

74
00:03:10,660 --> 00:03:12,220
and able to express themselves

75
00:03:12,220 --> 00:03:15,990
and able to exercise their human rights.

76
00:03:15,990 --> 00:03:18,040
We want to broaden the
community's understanding

77
00:03:18,040 --> 00:03:19,740
of the sorts of threats they faces,

78
00:03:19,740 --> 00:03:22,117
who the threat actors are,
what their capabilities are,

79
00:03:22,117 --> 00:03:24,717
and what sorts of technologies
they might be facing.

80
00:03:26,220 --> 00:03:27,940
And we want them to better understand

81
00:03:27,940 --> 00:03:31,230
their defenses as well, how
they can protect themselves,

82
00:03:31,230 --> 00:03:33,090
in what ways and what sort of measures

83
00:03:33,090 --> 00:03:34,740
they might need to take.

84
00:03:34,740 --> 00:03:38,140
We want to expose bad
actors, such as nation states

85
00:03:38,140 --> 00:03:41,470
or companies or
cyber-mercenaries that are going

86
00:03:41,470 --> 00:03:44,790
after people and, that
are building technology

87
00:03:44,790 --> 00:03:47,687
to spy on civilians and
violate human rights.

88
00:03:47,687 --> 00:03:49,210
And we want to make better laws.

89
00:03:49,210 --> 00:03:51,160
Because we're a legal nonprofit
at the end of the day,

90
00:03:51,160 --> 00:03:53,030
we want to make better
norms and better laws

91
00:03:53,030 --> 00:03:57,550
and better norms in civil
society so that these sorts

92
00:03:57,550 --> 00:04:00,520
of things don't keep
happening again and again.

93
00:04:00,520 --> 00:04:02,420
What I want to talk to you about today

94
00:04:02,420 --> 00:04:04,550
is cell-site simulators also known

95
00:04:04,550 --> 00:04:06,493
as Stingrays or IMSI Catchers.

96
00:04:07,815 --> 00:04:09,170
I want to talk about how they work,

97
00:04:09,170 --> 00:04:11,720
some previous efforts to detect them,

98
00:04:11,720 --> 00:04:13,780
and why I think that those
efforts aren't so great

99
00:04:13,780 --> 00:04:15,600
and a new method that we've come up with

100
00:04:15,600 --> 00:04:17,650
to detect them here at EFF.

101
00:04:17,650 --> 00:04:20,530
And also how to fix the
problem of cell-site simulators

102
00:04:20,530 --> 00:04:21,380
once and for all.

103
00:04:23,470 --> 00:04:25,720
First, a little bit of terminology.

104
00:04:25,720 --> 00:04:29,038
The UE is the phone, it's just the phone.

105
00:04:29,038 --> 00:04:30,990
It stands for user equipment,
but it's just the phone,

106
00:04:30,990 --> 00:04:33,349
the thing you're making the calls on.

107
00:04:33,349 --> 00:04:36,360
The IMSI is the International
Mobile Subscriber ID.

108
00:04:36,360 --> 00:04:39,200
This is the ID that is
burned into the SIM card

109
00:04:39,200 --> 00:04:41,000
and unique for each SIM card.

110
00:04:41,000 --> 00:04:43,690
The IMEI is the International
Mobile Equipment ID

111
00:04:43,690 --> 00:04:46,520
and this is the unique ID for the hardware

112
00:04:46,520 --> 00:04:49,340
that's burned into the
hardware and can't be changed.

113
00:04:49,340 --> 00:04:52,630
The eNodeB, or the base
station, this is what the UE

114
00:04:52,630 --> 00:04:54,770
or user equipment, again, the phone,

115
00:04:54,770 --> 00:04:58,050
this is what the UE is
actually communicating with.

116
00:04:58,050 --> 00:05:00,830
This is the thing that's
at the end of the antennas

117
00:05:00,830 --> 00:05:01,980
that you're talking to.

118
00:05:04,222 --> 00:05:06,894
The EARFCN or E-A-R-F-C-N,

119
00:05:06,894 --> 00:05:08,710
this is the frequency that the UE

120
00:05:08,710 --> 00:05:11,203
and the eNodeB are communicating on.

121
00:05:12,100 --> 00:05:15,470
The sector is a specific
antenna that is attached

122
00:05:15,470 --> 00:05:18,010
to the base station or
eNodeB and the eNodeB

123
00:05:18,010 --> 00:05:22,650
can have multiple sectors
and each sector basically

124
00:05:22,650 --> 00:05:25,000
is an antenna pointing
in a specific direction.

125
00:05:25,920 --> 00:05:29,100
The MIB or Master Information
Block is broadcast

126
00:05:29,100 --> 00:05:33,450
by the eNodeB and tells
phones where to find the SIB

127
00:05:33,450 --> 00:05:35,330
or System Information Block,

128
00:05:35,330 --> 00:05:38,390
which contains more
details about the eNodeB

129
00:05:38,390 --> 00:05:42,360
such as the cell ID, the MCC, MNC, and TAC

130
00:05:42,360 --> 00:05:45,440
which are the Mobile Country
Code, the Mobile Network Code,

131
00:05:45,440 --> 00:05:47,680
and the Tracking Area Code respectively.

132
00:05:47,680 --> 00:05:50,810
So finally, I'm gonna use
the terms IMSI Catchers,

133
00:05:50,810 --> 00:05:53,430
Stingray, Hailstorm, fake base station,

134
00:05:53,430 --> 00:05:56,030
and cell-site simulator all
kind of interchangeably.

135
00:05:57,010 --> 00:05:59,680
These don't mean exactly the same thing.

136
00:05:59,680 --> 00:06:01,920
A cell-site simulator
and a fake base station

137
00:06:01,920 --> 00:06:04,063
are fake cell towers.

138
00:06:05,100 --> 00:06:07,930
A Stingray and Hailstorm are two brands

139
00:06:07,930 --> 00:06:09,447
of cell-site simulator,

140
00:06:09,447 --> 00:06:11,530
and IMSI Catcher is sort of a common term

141
00:06:11,530 --> 00:06:14,560
for one of the things that
cell-site simulators do

142
00:06:14,560 --> 00:06:17,380
although not all IMSI
Catchers are cell-sites

143
00:06:17,380 --> 00:06:20,263
that fully emulate a cell-site.

144
00:06:21,120 --> 00:06:22,620
Sometimes you kinda can just run passively

145
00:06:22,620 --> 00:06:24,160
and not actually transmit anything

146
00:06:24,160 --> 00:06:26,400
that's not emulating a cell-site.

147
00:06:26,400 --> 00:06:29,160
But for our purposes, we're
gonna use them interchangeably,

148
00:06:29,160 --> 00:06:31,460
and that's okay for the
purposes of this talk.

149
00:06:34,030 --> 00:06:38,750
So here we have a diagram
of the 4G network.

150
00:06:38,750 --> 00:06:40,340
This is a pretty high level diagram,

151
00:06:40,340 --> 00:06:43,880
but you can see here that the
user equipment, the phone,

152
00:06:43,880 --> 00:06:48,150
connects to the eNodeB
using the LTE protocol

153
00:06:48,150 --> 00:06:50,700
through the uplink that
eNodeBs can talk to each other

154
00:06:50,700 --> 00:06:51,970
through another protocol.

155
00:06:51,970 --> 00:06:55,133
And the eNodeBs exist in a
network called the E-UTRAN.

156
00:06:56,170 --> 00:07:00,260
And then you have a network
called the Enhanced Packet Core,

157
00:07:00,260 --> 00:07:01,770
which is behind the eNodeBs.

158
00:07:01,770 --> 00:07:06,040
And this contains the MME or
Mobility Management Engine,

159
00:07:06,040 --> 00:07:08,570
the Serving Gateway,
which, and the PDN Gateway,

160
00:07:08,570 --> 00:07:10,970
which connect to the Public Data Network,

161
00:07:10,970 --> 00:07:14,240
which connect to the,
back to the phone network.

162
00:07:14,240 --> 00:07:16,610
And the EPC is also responsible

163
00:07:16,610 --> 00:07:19,350
for authenticating the
user, billing, et cetera.

164
00:07:19,350 --> 00:07:21,780
We're not gonna focus on the EPC today.

165
00:07:21,780 --> 00:07:25,230
There are issues there
that we could talk about,

166
00:07:25,230 --> 00:07:27,400
but it's out of scope for this talk.

167
00:07:27,400 --> 00:07:30,830
We're instead gonna focus
specifically on the communication

168
00:07:30,830 --> 00:07:33,171
between the user equipment and the eNodeB

169
00:07:33,171 --> 00:07:35,771
and then sort of the area
inside of this red circle.

170
00:07:38,920 --> 00:07:41,780
So we started this project

171
00:07:41,780 --> 00:07:45,253
because we already knew
a lot about the Stingray.

172
00:07:46,810 --> 00:07:50,124
Some law enforcement agencies
had had the Stingray,

173
00:07:50,124 --> 00:07:51,760
the Stingray had been around for awhile,

174
00:07:51,760 --> 00:07:55,260
and it was pretty well
understood how it worked.

175
00:07:55,260 --> 00:07:57,200
Kristin Paget did a really great talk

176
00:07:57,200 --> 00:07:59,080
at DEF CON several years ago

177
00:07:59,080 --> 00:08:02,370
where she demonstrated building
her own homemade Stingray

178
00:08:02,370 --> 00:08:05,780
and it's pretty well
understood the vulnerabilities.

179
00:08:05,780 --> 00:08:08,560
But what we were noticing
was that law enforcement

180
00:08:08,560 --> 00:08:13,560
was starting to upgrade their
cell-site simulator devices

181
00:08:14,130 --> 00:08:16,540
to newer devices, such as the Hailstorm,

182
00:08:16,540 --> 00:08:19,573
which purported to be able
to operate natively in 4G.

183
00:08:20,940 --> 00:08:25,100
And we started wondering, well,
we have a pretty good idea

184
00:08:25,100 --> 00:08:27,720
of how the Stingray
works, but we have no idea

185
00:08:27,720 --> 00:08:29,560
of how the Hailstorm,
and these newer devices

186
00:08:29,560 --> 00:08:32,610
operating in 4G, how they might work.

187
00:08:32,610 --> 00:08:35,650
So let's dig into this and
let's start by figuring out

188
00:08:35,650 --> 00:08:38,010
how they could possibly work.

189
00:08:38,010 --> 00:08:39,660
And the first thing we want to look at

190
00:08:39,660 --> 00:08:42,900
is what changed between 2G and 4G.

191
00:08:42,900 --> 00:08:45,080
And there are three significant changes

192
00:08:45,080 --> 00:08:49,403
that affect the way that a
cell-site simulator might work.

193
00:08:50,380 --> 00:08:54,186
The first and most
important is that the eNodeB

194
00:08:54,186 --> 00:08:57,463
and the UE in 4G mutually
authenticate each other.

195
00:08:59,650 --> 00:09:04,177
In 2G, the user equipment or the phone

196
00:09:04,177 --> 00:09:05,960
had to authenticate itself

197
00:09:05,960 --> 00:09:07,970
to the eNodeB or the base station.

198
00:09:07,970 --> 00:09:10,210
But the base station never had to prove

199
00:09:10,210 --> 00:09:12,160
that it was a real base station.

200
00:09:12,160 --> 00:09:14,040
And this was the source of a lot of

201
00:09:14,040 --> 00:09:15,970
fake base station attacks such as the ones

202
00:09:15,970 --> 00:09:19,490
that the Stingray used in 2G.

203
00:09:19,490 --> 00:09:22,210
And with 4G, this is no longer a problem.

204
00:09:22,210 --> 00:09:26,330
Also in 2G you had terrible encryption.

205
00:09:26,330 --> 00:09:29,640
The base station would
dictate to the user equipment

206
00:09:29,640 --> 00:09:32,490
what cipher to use,
and it can even dictate

207
00:09:32,490 --> 00:09:34,590
that the user equipment use a null cipher.

208
00:09:36,030 --> 00:09:39,210
What's more, the ciphers
that were used by 2G

209
00:09:39,210 --> 00:09:41,300
were actually quite
weak and could be broken

210
00:09:41,300 --> 00:09:44,230
in real time or in near real time

211
00:09:44,230 --> 00:09:47,070
by anybody recording the packets

212
00:09:47,070 --> 00:09:50,120
between the base station and the phone

213
00:09:50,120 --> 00:09:52,360
without even having to transmit anything.

214
00:09:52,360 --> 00:09:54,180
This is no longer the case in 4G

215
00:09:54,180 --> 00:09:57,730
now that eNodeB and UE mutually agree

216
00:09:57,730 --> 00:09:59,500
on what encryption to use

217
00:09:59,500 --> 00:10:01,533
and the ciphers are much, much better.

218
00:10:02,760 --> 00:10:05,760
Also in 2G, the phone
would always just connect

219
00:10:05,760 --> 00:10:07,740
to the strongest tower that it could see.

220
00:10:07,740 --> 00:10:11,790
And 2G could even, in
2G you can even dictate

221
00:10:11,790 --> 00:10:13,840
how strong your signal was,

222
00:10:13,840 --> 00:10:16,580
telling the phone to ignore
the actual signal strength,

223
00:10:16,580 --> 00:10:20,420
and just trust what you were
saying the signal strength was.

224
00:10:20,420 --> 00:10:23,160
Neither of these are
the case anymore in 4G.

225
00:10:23,160 --> 00:10:25,410
The phone no longer naively
connects to the strongest tower.

226
00:10:25,410 --> 00:10:28,560
Instead, there are a set
of cell selection criteria

227
00:10:28,560 --> 00:10:29,603
that it follows.

228
00:10:30,820 --> 00:10:33,120
So great, we've solved
all the problems, right?

229
00:10:33,120 --> 00:10:35,260
Well, clearly not because there are still

230
00:10:35,260 --> 00:10:38,033
cell-site simulators that
are operating natively in 4G.

231
00:10:39,120 --> 00:10:42,090
So me and Yomna set to work reading all

232
00:10:42,090 --> 00:10:44,270
of the academic literature that we could

233
00:10:44,270 --> 00:10:47,840
about vulnerabilities in 4G

234
00:10:47,840 --> 00:10:50,770
and what could possibly
be making cell-site sim,

235
00:10:50,770 --> 00:10:52,973
next generation cell-site simulators work.

236
00:10:54,350 --> 00:10:58,360
And after several months of reading,

237
00:10:58,360 --> 00:10:59,990
over a year of reading really,

238
00:10:59,990 --> 00:11:02,397
Yomna wrote a really amazing paper called,

239
00:11:02,397 --> 00:11:03,840
"Gotta Catch 'Em All,"

240
00:11:03,840 --> 00:11:06,290
which summarizes all of our findings,

241
00:11:06,290 --> 00:11:10,270
everything that we learned
about what vulnerabilities

242
00:11:10,270 --> 00:11:13,293
next gen CSS's might
be taking advantage of.

243
00:11:14,140 --> 00:11:18,950
And we really figured out
that there's one specific area

244
00:11:18,950 --> 00:11:21,193
where 4G is extremely vulnerable.

245
00:11:22,930 --> 00:11:25,190
So 4G has a bit of a glass jaw.

246
00:11:25,190 --> 00:11:28,170
Even though the UE
authenticates with the tower

247
00:11:28,170 --> 00:11:30,540
or authenticates the tower now,

248
00:11:30,540 --> 00:11:32,900
there are still several
messages that get sent

249
00:11:32,900 --> 00:11:36,020
and received and trusted
before that authentication

250
00:11:36,020 --> 00:11:38,020
ever happens or without authentication

251
00:11:38,020 --> 00:11:39,980
ever happening in the first place.

252
00:11:39,980 --> 00:11:42,630
And this is the weak spot
in which the vast majority

253
00:11:42,630 --> 00:11:44,193
of 4G attacks happen.

254
00:11:45,040 --> 00:11:47,070
I'm not gonna get into
those attacks here today

255
00:11:47,070 --> 00:11:49,880
because Yomna has already
done a really excellent job

256
00:11:49,880 --> 00:11:52,030
summarizing those in that paper,

257
00:11:52,030 --> 00:11:53,690
and I highly suggest that you go read it.

258
00:11:53,690 --> 00:11:54,893
It's an excellent paper.

259
00:11:56,790 --> 00:11:58,633
But to give a high level summary,

260
00:11:59,713 --> 00:12:02,810
this is the handshake protocol
between the user equipment,

261
00:12:02,810 --> 00:12:04,793
the phone, again, and the base station.

262
00:12:06,010 --> 00:12:08,150
And it starts with the user equipment

263
00:12:08,150 --> 00:12:10,350
looking on EARFCN, or frequency,

264
00:12:10,350 --> 00:12:13,990
for a frame synchronization
signal from a base station.

265
00:12:13,990 --> 00:12:16,160
Once it finds synchronization signals,

266
00:12:16,160 --> 00:12:19,280
it is able to find the MIB,
Master Information Block,

267
00:12:19,280 --> 00:12:22,650
and decode that, which lets it
find the SIB and decode that,

268
00:12:22,650 --> 00:12:24,690
which gives it enough information

269
00:12:24,690 --> 00:12:29,340
about the Mobile Country
Code, the Mobile Network Code,

270
00:12:29,340 --> 00:12:30,930
to decide whether it wants to connect

271
00:12:30,930 --> 00:12:33,510
and then send an RRC,
Radio Resource Control,

272
00:12:33,510 --> 00:12:36,550
RRC connection request.

273
00:12:36,550 --> 00:12:38,200
It start, it does that handshake,

274
00:12:38,200 --> 00:12:40,510
and then it begins the attach request.

275
00:12:40,510 --> 00:12:42,910
And here in step seven

276
00:12:42,910 --> 00:12:46,220
is where the authentication
finally starts.

277
00:12:46,220 --> 00:12:50,740
All of the messages before
that are never authenticated.

278
00:12:50,740 --> 00:12:53,780
And some of the messages
that get sent in that area

279
00:12:53,780 --> 00:12:58,200
can contain things like
the IMSI of the phone

280
00:12:58,200 --> 00:13:01,140
allowing you to uniquely identify it.

281
00:13:01,140 --> 00:13:03,930
It can contain even the GPS
coordinates of the phone,

282
00:13:03,930 --> 00:13:07,070
allowing you to locate it,
and a bunch of other things.

283
00:13:07,070 --> 00:13:09,750
Attacks that allow you
to downgrade it to 2G

284
00:13:09,750 --> 00:13:12,550
or allow you to kick it off
the mobile network entirely.

285
00:13:13,560 --> 00:13:17,170
So this is where the heart of
all of the vulnerabilities lie

286
00:13:17,170 --> 00:13:20,313
in 4G, and this is the part
that we find really interesting.

287
00:13:21,260 --> 00:13:24,840
So now that we had a pretty good handle

288
00:13:24,840 --> 00:13:29,523
on how 4G cell-site simulators
are probably being used,

289
00:13:30,870 --> 00:13:34,243
we wanted to get an idea of
how often they're being used.

290
00:13:35,770 --> 00:13:37,750
And if we want to learn how
often they're being used

291
00:13:37,750 --> 00:13:39,570
by U.S. law enforcement,

292
00:13:39,570 --> 00:13:42,963
the best way to do this
is to file FOIA requests.

293
00:13:44,540 --> 00:13:47,860
ACLU filed a really
excellent FOIA request,

294
00:13:47,860 --> 00:13:51,790
which came back, which just
got published this year in 2020

295
00:13:51,790 --> 00:13:55,827
about ICE and DHS's use
of cell-site simulators.

296
00:13:55,827 --> 00:13:58,350
And in it, they discovered that ICE

297
00:13:58,350 --> 00:14:00,920
or U.S. Immigration and
Customs Enforcement,

298
00:14:00,920 --> 00:14:04,600
used cell-site simulators
between 2017 and 2019

299
00:14:04,600 --> 00:14:09,600
a total of 466 times,
hundreds of times per year.

300
00:14:10,120 --> 00:14:13,250
DHS on the other hand used
their cell-site simulator

301
00:14:13,250 --> 00:14:18,250
1,885 times between 2013 and 2017.

302
00:14:18,730 --> 00:14:22,420
We also found out that Customs
and Border Patrol or CBP

303
00:14:22,420 --> 00:14:25,730
owns 33 cell-site
simulators, which is a ton.

304
00:14:25,730 --> 00:14:28,470
And we don't know how
often they're being used,

305
00:14:28,470 --> 00:14:30,160
but we can assume that it's probably

306
00:14:30,160 --> 00:14:32,163
on par with ICE and DHS.

307
00:14:34,120 --> 00:14:37,410
Oakland, on the other
hand, the Oakland PD,

308
00:14:37,410 --> 00:14:41,850
Oakland's local police
department in California,

309
00:14:41,850 --> 00:14:43,860
they used their cell-site simulator,

310
00:14:43,860 --> 00:14:47,660
which is a Hailstorm, three times in 2017.

311
00:14:47,660 --> 00:14:49,700
In 2018 it was used four times,

312
00:14:49,700 --> 00:14:52,543
and in 2019 it was used only once.

313
00:14:53,860 --> 00:14:57,380
But on the other hand, Santa Barbara PD,

314
00:14:57,380 --> 00:15:00,580
the local police department
for Santa Barbara, California

315
00:15:00,580 --> 00:15:05,460
used their cell-site
simulator 231 times in 2017,

316
00:15:05,460 --> 00:15:08,980
roughly matching up with the
numbers from ICE and DHS.

317
00:15:08,980 --> 00:15:11,700
So what makes Oakland so
much different in this case?

318
00:15:11,700 --> 00:15:14,070
Well, we think that it's because Oakland

319
00:15:14,070 --> 00:15:16,450
has stronger privacy laws.

320
00:15:16,450 --> 00:15:19,400
Oakland has pretty strong regulations

321
00:15:19,400 --> 00:15:22,790
about when and where the
cell-site simulator can be used,

322
00:15:22,790 --> 00:15:25,710
how it can be used, and
what sort of reporting,

323
00:15:25,710 --> 00:15:28,670
public reporting, needs
to happen afterwards.

324
00:15:28,670 --> 00:15:31,850
And we think that that
has really kept Oakland PD

325
00:15:31,850 --> 00:15:34,160
on a leash as far as their use

326
00:15:34,160 --> 00:15:36,010
of cell-site simulators is concerned.

327
00:15:37,740 --> 00:15:40,330
So we encourage other communities

328
00:15:40,330 --> 00:15:42,970
to come up with similar
rules and regulations

329
00:15:42,970 --> 00:15:45,090
about how these can be used.

330
00:15:45,090 --> 00:15:48,640
But of course, not everybody
using the cell-site simulator

331
00:15:48,640 --> 00:15:51,890
is going follow rules and regulations,

332
00:15:51,890 --> 00:15:54,070
nor can they be FOIA'd.

333
00:15:54,070 --> 00:15:57,110
We have pretty good
evidence that foreign spies

334
00:15:57,110 --> 00:15:58,870
are using cell-site simulators.

335
00:15:58,870 --> 00:16:00,210
The Department of Homeland Security

336
00:16:00,210 --> 00:16:03,050
put out a report last year
where they demonstrated

337
00:16:03,050 --> 00:16:04,980
that they found several
cell-site simulators

338
00:16:04,980 --> 00:16:08,347
around the White House and
around Washington, D.C.,

339
00:16:09,470 --> 00:16:12,890
which almost certainly
belonged to foreign spies

340
00:16:12,890 --> 00:16:15,963
trying to spy on the political
class in Washington, D.C.

341
00:16:17,420 --> 00:16:20,120
We also have reason to believe
that cyber-mercenaries,

342
00:16:20,120 --> 00:16:23,050
such as NSO Group, have access
to cell-site simulators.

343
00:16:23,050 --> 00:16:25,280
A report from Amnesty International

344
00:16:26,220 --> 00:16:28,370
that was put out this year in 2020

345
00:16:30,450 --> 00:16:33,583
detailed a campaign against
a Moroccan journalist,

346
00:16:34,813 --> 00:16:36,980
to spy on Moroccan
journalists by NSO Group

347
00:16:36,980 --> 00:16:39,770
where they also use cell-site simulators

348
00:16:39,770 --> 00:16:41,830
to intercept his calls.

349
00:16:41,830 --> 00:16:44,360
And finally, we think that
just straight up criminals

350
00:16:44,360 --> 00:16:45,310
have access to these.

351
00:16:45,310 --> 00:16:48,810
There's rumors that
drug cartels have access

352
00:16:48,810 --> 00:16:51,430
to a cell-site simulator,
and it makes sense.

353
00:16:51,430 --> 00:16:53,690
Cell-site simulators are pretty easy

354
00:16:53,690 --> 00:16:56,260
and pretty cheap to build at this point.

355
00:16:56,260 --> 00:16:57,510
And if you don't want to build one,

356
00:16:57,510 --> 00:17:00,620
you can acquire them
from companies in Israel,

357
00:17:00,620 --> 00:17:02,790
companies in Saudi Arabia.

358
00:17:02,790 --> 00:17:07,360
They're really pretty ubiquitous
and pretty easy to acquire.

359
00:17:07,360 --> 00:17:09,850
And of course, these
people can't be FOIA'd.

360
00:17:09,850 --> 00:17:12,450
We can't ask them how
often they're being used,

361
00:17:12,450 --> 00:17:15,483
so we have no idea how often
these groups are using these.

362
00:17:16,920 --> 00:17:19,840
So that being the case, our next step

363
00:17:19,840 --> 00:17:22,420
is we start to think about, okay,

364
00:17:22,420 --> 00:17:25,470
how can we detect cell-site simulators?

365
00:17:25,470 --> 00:17:30,470
And there are two schools of thought

366
00:17:31,650 --> 00:17:33,733
for how to detect cell-site simulators.

367
00:17:35,380 --> 00:17:39,540
One is app based, and this is applications

368
00:17:39,540 --> 00:17:42,970
like AIMSICD or
Android-IMSI-Catcher-Detector,

369
00:17:42,970 --> 00:17:44,903
Snoop Snitch, or Darshak.

370
00:17:46,340 --> 00:17:48,790
The strengths of these
are that they're cheap.

371
00:17:48,790 --> 00:17:51,660
It's an app, you install
it on your Android phone,

372
00:17:51,660 --> 00:17:53,070
and they're easy to use.

373
00:17:53,070 --> 00:17:56,570
You start the app, you let it
run, it lets you know what,

374
00:17:56,570 --> 00:17:59,630
if it finds something that's suspicious.

375
00:17:59,630 --> 00:18:01,630
All you need is an Android phone

376
00:18:01,630 --> 00:18:03,130
and it might need to be rooted,

377
00:18:03,130 --> 00:18:05,400
it might need to be a
specific type of phone,

378
00:18:05,400 --> 00:18:06,330
but you don't really,

379
00:18:06,330 --> 00:18:08,430
as long as you have that phone already,

380
00:18:08,430 --> 00:18:10,530
you don't have to spend any further money.

381
00:18:11,870 --> 00:18:13,470
The weaknesses of these are that

382
00:18:13,470 --> 00:18:15,900
you're gonna get very limited data.

383
00:18:15,900 --> 00:18:19,670
AIMSICD only gives you if, on
an unrooted phone at least,

384
00:18:19,670 --> 00:18:22,083
only gives you the MCC, MNC,

385
00:18:25,000 --> 00:18:26,350
and the location area code,

386
00:18:27,640 --> 00:18:29,740
and some information
about the signal strength.

387
00:18:29,740 --> 00:18:31,830
Snoop Snitch and Darshark get more info

388
00:18:31,830 --> 00:18:33,830
because they're able to baseband messages

389
00:18:33,830 --> 00:18:35,500
on the phones that they support.

390
00:18:35,500 --> 00:18:37,840
But still, you're only getting the info

391
00:18:37,840 --> 00:18:42,310
about cells that your
phone is connected to.

392
00:18:42,310 --> 00:18:44,940
And you're getting a lot of information

393
00:18:44,940 --> 00:18:46,670
about weird things happening,

394
00:18:46,670 --> 00:18:49,010
but a lot of those end
up being false positives

395
00:18:49,010 --> 00:18:53,720
because many of the things
that could be indicators

396
00:18:53,720 --> 00:18:58,010
of cell-site simulators
are also just weird,

397
00:18:58,010 --> 00:19:01,010
these sorts of weird things that happen

398
00:19:01,010 --> 00:19:04,050
in the cell network quite often.

399
00:19:04,050 --> 00:19:06,130
And because of that, it's,

400
00:19:06,130 --> 00:19:07,630
you get a lot of false positives

401
00:19:07,630 --> 00:19:11,240
and it's hard to tell what is
actually a cell-site simulator

402
00:19:11,240 --> 00:19:15,180
and what is maybe just the cell network

403
00:19:15,180 --> 00:19:16,330
being the cell network.

404
00:19:18,260 --> 00:19:20,760
The other school of
thought is radio-based.

405
00:19:20,760 --> 00:19:23,910
And this is basically things

406
00:19:23,910 --> 00:19:27,060
where you have a software-defined
radio or a cellular modem

407
00:19:27,060 --> 00:19:28,360
and you're getting information

408
00:19:28,360 --> 00:19:30,310
about all of the towers around you,

409
00:19:30,310 --> 00:19:31,750
and you're putting that in a database

410
00:19:31,750 --> 00:19:35,300
and running some heuristics to
determine what's suspicious.

411
00:19:35,300 --> 00:19:37,493
Projects that are examples
of this are SeaGlass

412
00:19:37,493 --> 00:19:41,230
from the University of
Washington, SITCH from Ash Wilson,

413
00:19:41,230 --> 00:19:44,020
and Overwatch, which is
a commercial product.

414
00:19:44,020 --> 00:19:46,240
The strengths of these are
that you can get better data.

415
00:19:46,240 --> 00:19:48,730
You can get data from all
of the towers in an area,

416
00:19:48,730 --> 00:19:51,320
not just the ones that
you're connecting to.

417
00:19:51,320 --> 00:19:53,750
You can also get lower level information.

418
00:19:53,750 --> 00:19:56,920
You can get as low level
information as you want,

419
00:19:56,920 --> 00:19:59,000
based on, you know, how,

420
00:19:59,000 --> 00:20:01,223
what you can program
with your radio, right?

421
00:20:02,410 --> 00:20:06,910
The weaknesses of these are
that they're harder to set up.

422
00:20:06,910 --> 00:20:08,650
They can be harder to use and interpret

423
00:20:08,650 --> 00:20:12,300
because you maybe have to
run Linux and set up a server

424
00:20:12,300 --> 00:20:14,510
and you have to put together some hardware

425
00:20:14,510 --> 00:20:17,070
and maybe even have to know
a little bit of programming.

426
00:20:17,070 --> 00:20:19,370
Also the weakness is that
you have to buy that hardware

427
00:20:19,370 --> 00:20:21,520
and hardware can be expensive.

428
00:20:21,520 --> 00:20:23,510
You might have to spend
a couple hundred dollars

429
00:20:23,510 --> 00:20:25,870
to get running, whereas the app is free.

430
00:20:25,870 --> 00:20:28,943
So there are strengths and
weaknesses to both of these.

431
00:20:30,420 --> 00:20:35,390
But armed with this knowledge,
we started hearing rumors

432
00:20:35,390 --> 00:20:37,900
about cell-site simulators being used

433
00:20:37,900 --> 00:20:40,760
at the Standing Rock protest

434
00:20:40,760 --> 00:20:45,380
or at the Dakota Access Pipeline protest

435
00:20:45,380 --> 00:20:48,420
in Standing Rock, North Dakota.

436
00:20:48,420 --> 00:20:51,010
And given that we had some ideas

437
00:20:51,010 --> 00:20:53,807
about how maybe one could
detect cell-site simulators

438
00:20:53,807 --> 00:20:56,670
and we wanted to know if they
were being used at protests,

439
00:20:56,670 --> 00:20:58,580
we decided to go down to Standing Rock

440
00:20:58,580 --> 00:21:00,460
and see what we could find.

441
00:21:00,460 --> 00:21:04,380
So I armed my phone with
Snoop Snitch and AIMSICD,

442
00:21:04,380 --> 00:21:07,250
and I brought along a couple of RTL-SDRs,

443
00:21:07,250 --> 00:21:10,300
which I figured I could do
some spectrum analysis with,

444
00:21:10,300 --> 00:21:12,323
and made my way down to Standing Rock.

445
00:21:13,180 --> 00:21:18,090
And what I figured out
was that I had no idea

446
00:21:18,090 --> 00:21:19,690
what I was doing.

447
00:21:19,690 --> 00:21:23,000
And by the way, this dog is, I don't know,

448
00:21:23,000 --> 00:21:25,210
are Patronus's canceled now?

449
00:21:25,210 --> 00:21:26,960
If not, this dog is my Patronus,

450
00:21:26,960 --> 00:21:30,630
I very much identify with this dog.

451
00:21:30,630 --> 00:21:33,650
But we had no idea what we were doing.

452
00:21:33,650 --> 00:21:35,410
When we got there, what we realized

453
00:21:35,410 --> 00:21:40,130
was there were no 2G towers
anywhere to be found,

454
00:21:40,130 --> 00:21:44,370
and whether they be
legitimate or illegitimate.

455
00:21:44,370 --> 00:21:46,500
And all of our detection methods

456
00:21:46,500 --> 00:21:50,010
were focused on detecting 2G towers.

457
00:21:50,010 --> 00:21:53,710
If a 2G cell had shown up all of a sudden,

458
00:21:53,710 --> 00:21:55,800
that would have been a
pretty strong indicator.

459
00:21:55,800 --> 00:21:59,620
But we weren't able to find
any evidence of 2G cells

460
00:21:59,620 --> 00:22:01,323
while we were at Standing Rock.

461
00:22:02,520 --> 00:22:07,000
And the conclusion that we came to

462
00:22:07,000 --> 00:22:09,670
is that if cell-site
simulators were being used

463
00:22:09,670 --> 00:22:12,680
at Standing Rock, they
must be next generation

464
00:22:12,680 --> 00:22:16,580
cell-site simulators that
were operating natively on 4G.

465
00:22:16,580 --> 00:22:18,900
Which leaves us with the question,

466
00:22:18,900 --> 00:22:23,040
how can we detect 4G-based
cell-site simulators

467
00:22:23,040 --> 00:22:26,180
and how can we improve
on previous attempts

468
00:22:26,180 --> 00:22:29,080
to detect cell-site simulators?

469
00:22:29,080 --> 00:22:32,960
Well, first off I think
that the radio-based

470
00:22:32,960 --> 00:22:34,660
method is solid.

471
00:22:34,660 --> 00:22:37,740
SeaGlass had already put up
some pretty interesting results

472
00:22:37,740 --> 00:22:40,520
and the idea of getting
information about all

473
00:22:40,520 --> 00:22:43,720
of the cells in an area,
everything that's broadcasting,

474
00:22:43,720 --> 00:22:45,960
not just the ones that
your phone's connecting to,

475
00:22:45,960 --> 00:22:48,660
and comparing that data over time

476
00:22:48,660 --> 00:22:50,600
I think are really interesting.

477
00:22:50,600 --> 00:22:52,640
So let's add on top of that,

478
00:22:52,640 --> 00:22:57,390
looking specifically at 4G transmissions,

479
00:22:57,390 --> 00:23:01,510
having heuristics based on
what we've learned from Yomna

480
00:23:01,510 --> 00:23:04,410
and my, mine and Yomna's research,

481
00:23:04,410 --> 00:23:06,370
and let's verify the results.

482
00:23:06,370 --> 00:23:09,890
When we find a suspicious
tower, let's go track it down

483
00:23:09,890 --> 00:23:12,450
and see what it actually is.

484
00:23:12,450 --> 00:23:14,800
Is it on top of a cell tower?

485
00:23:14,800 --> 00:23:16,650
Yeah, great, it's probably fine.

486
00:23:16,650 --> 00:23:18,730
Is it on top of a building?

487
00:23:18,730 --> 00:23:21,060
Yeah, that's fine, it's
probably a small cell.

488
00:23:21,060 --> 00:23:22,720
Is that building an embassy?

489
00:23:22,720 --> 00:23:25,380
Well, that's a lot more suspicious.

490
00:23:25,380 --> 00:23:28,130
And finally, is it in an unmarked van

491
00:23:28,130 --> 00:23:31,040
or in a van surrounded by police officers?

492
00:23:31,040 --> 00:23:32,733
Well, that's very suspicious.

493
00:23:34,030 --> 00:23:37,793
So without further ado, I
introduce to you Crocodile Hunter.

494
00:23:38,990 --> 00:23:42,400
Crocodile Hunter is an open source project

495
00:23:42,400 --> 00:23:44,070
that we've been working on at EFF

496
00:23:44,070 --> 00:23:47,100
for the last couple of
years and are releasing here

497
00:23:47,100 --> 00:23:49,393
at Virtual Black Hat
and DEF CON this week.

498
00:23:50,260 --> 00:23:53,710
Hunter, Crocodile Hunter is a
hardware and software based.

499
00:23:53,710 --> 00:23:56,540
It uses an SDR and this software.

500
00:23:56,540 --> 00:23:59,140
The backend is based on SRSLTE

501
00:23:59,140 --> 00:24:01,800
which is an open source LTE software stack

502
00:24:01,800 --> 00:24:04,763
that's able to emulate both
the Enhanced Packet Core,

503
00:24:06,769 --> 00:24:10,410
the eNodeB and also the
user equipment which we use

504
00:24:10,410 --> 00:24:13,533
to measure the cell network in the area.

505
00:24:14,580 --> 00:24:19,390
It's written in C++ and we wrote a program

506
00:24:19,390 --> 00:24:24,250
in the SRSLTE API to do, to
scan the cell network for us.

507
00:24:24,250 --> 00:24:28,410
The frontend which it communicates
with over a local socket

508
00:24:29,740 --> 00:24:31,343
is written in Python 3.

509
00:24:32,200 --> 00:24:34,430
The frontend is responsible
for getting data

510
00:24:34,430 --> 00:24:39,310
from the socket, from SRSLTE,
adding it to the database,

511
00:24:39,310 --> 00:24:43,100
running heuristics and
displaying tower locations.

512
00:24:43,100 --> 00:24:46,890
And we also have an API so
that if you want to gather data

513
00:24:46,890 --> 00:24:50,220
from multiple sensors or
if you want to share data

514
00:24:50,220 --> 00:24:52,120
between multiple researchers, you can.

515
00:24:53,890 --> 00:24:56,570
Here's an example of what the
user interface looks like.

516
00:24:56,570 --> 00:24:59,680
This is from a scan
that me and my colleague

517
00:24:59,680 --> 00:25:02,010
Dave Moss did in Downtown San Francisco

518
00:25:02,010 --> 00:25:04,160
during the Dreamforce
Conference last year.

519
00:25:06,100 --> 00:25:09,640
Each of these points on
this map is, we think,

520
00:25:09,640 --> 00:25:11,920
the probable location of a cell

521
00:25:11,920 --> 00:25:14,660
in Downtown San Francisco on that day.

522
00:25:14,660 --> 00:25:17,010
The orange points are
cells that we didn't find

523
00:25:17,010 --> 00:25:19,420
to be suspicious, and the black skulls

524
00:25:19,420 --> 00:25:21,840
are cells that we did
think were suspicious.

525
00:25:21,840 --> 00:25:24,050
And I should note here that certainly

526
00:25:24,050 --> 00:25:27,340
there's no way that each
of these black skulls

527
00:25:27,340 --> 00:25:29,030
is a cell-site simulator.

528
00:25:29,030 --> 00:25:33,070
In fact, probably none of
them are cell-site simulators,

529
00:25:33,070 --> 00:25:34,530
but we think they're suspicious

530
00:25:34,530 --> 00:25:36,283
and require further checking on.

531
00:25:38,570 --> 00:25:41,100
And I'll go into more
depth about that later.

532
00:25:41,100 --> 00:25:44,870
On the hardware side, the
hardware stack is a laptop

533
00:25:44,870 --> 00:25:48,270
or a Raspberry Pi running
Ubuntu, and you need a battery

534
00:25:48,270 --> 00:25:50,390
for the Pi if you want it to be mobile,

535
00:25:50,390 --> 00:25:55,390
a USB GPS dongle, and an
SDR with some LTE antennas.

536
00:25:55,870 --> 00:25:57,500
For the SDRs, we've tested it

537
00:25:57,500 --> 00:26:00,650
with a BladeRF and an Ettus B200.

538
00:26:00,650 --> 00:26:04,100
It should support all
models of Ettus and BladeRF.

539
00:26:04,100 --> 00:26:07,100
It also theoretically
could support a LimeSDR

540
00:26:07,100 --> 00:26:09,040
which is significantly cheaper.

541
00:26:09,040 --> 00:26:11,500
I think the BladeRF
will run you about $500

542
00:26:11,500 --> 00:26:14,350
whereas a LimeSDR will run you about 250,

543
00:26:14,350 --> 00:26:16,400
but we have not tested it with that.

544
00:26:16,400 --> 00:26:18,870
But that is on the roadmap
because we would like

545
00:26:18,870 --> 00:26:20,770
for this hardware stack to be cheaper.

546
00:26:22,310 --> 00:26:23,460
Here's what the hardware looks like

547
00:26:23,460 --> 00:26:25,300
sitting on my kitchen counter.

548
00:26:25,300 --> 00:26:26,830
As you can see, it's
actually pretty compact

549
00:26:26,830 --> 00:26:29,800
and you can easily put it into a backpack

550
00:26:29,800 --> 00:26:33,903
or loaded into your car and go
for a drive around your city.

551
00:26:35,150 --> 00:26:37,843
And it's pretty, and you
can do it pretty discreetly.

552
00:26:40,340 --> 00:26:43,060
So the general workflow
is we start by scanning

553
00:26:43,060 --> 00:26:46,060
all of the frequencies that we
know about and decoding them,

554
00:26:46,060 --> 00:26:48,080
each MIB and SIB that we find.

555
00:26:48,080 --> 00:26:49,650
We record those into a database,

556
00:26:49,650 --> 00:26:52,910
we map the probable
location of those cells,

557
00:26:52,910 --> 00:26:54,800
we look for any anomalies in the readings,

558
00:26:54,800 --> 00:26:58,070
and then we locate suspicious
cells and confirm the results.

559
00:26:58,070 --> 00:27:01,250
And I'll go into each one
of those in more depth.

560
00:27:01,250 --> 00:27:04,270
So we start by scanning
a list of the EARFCNS,

561
00:27:04,270 --> 00:27:05,600
again, frequencies.

562
00:27:05,600 --> 00:27:08,290
We start by scanning a list
of the EARFCNS that we get

563
00:27:08,290 --> 00:27:10,963
from an open source database called WiGLE.

564
00:27:10,963 --> 00:27:14,200
WiGLE is an open source
database of wardriving readings

565
00:27:14,200 --> 00:27:17,640
of Wi-Fi networks and
also of cell networks.

566
00:27:17,640 --> 00:27:19,320
So we get all of the EARFCNS

567
00:27:19,320 --> 00:27:22,436
for the given geographical
region that you're in,

568
00:27:22,436 --> 00:27:23,800
and then we scan each of those.

569
00:27:23,800 --> 00:27:26,300
And our theory behind this is that

570
00:27:26,300 --> 00:27:27,900
we think that a cell-site simulator

571
00:27:27,900 --> 00:27:30,970
is going to have to operate
on the same frequencies

572
00:27:30,970 --> 00:27:34,180
that real cells are so that
phones will be more inclined

573
00:27:34,180 --> 00:27:35,130
to connect to them.

574
00:27:36,260 --> 00:27:40,070
So we scan each of these
frequencies and if we find a MIB,

575
00:27:40,070 --> 00:27:42,050
we decode the MIB and the SIB,

576
00:27:42,050 --> 00:27:44,400
and we send it to the
frontend over our socket.

577
00:27:45,851 --> 00:27:47,880
The frontend stores the
information in a database,

578
00:27:47,880 --> 00:27:52,090
and it stores in that database
the Mobile Country Code,

579
00:27:52,090 --> 00:27:54,200
the network code, and
the Tracking Area Code,

580
00:27:54,200 --> 00:27:57,250
the cell ID, physical ID, and EARFCN,

581
00:27:57,250 --> 00:28:00,070
the latitude and longitude of
where the reading was made,

582
00:28:00,070 --> 00:28:03,470
the time stamp, the signal
strength, the eNodeB ID,

583
00:28:03,470 --> 00:28:05,640
the sector ID, and a few other IDs,

584
00:28:05,640 --> 00:28:07,950
and finally the raw data from the SIB1.

585
00:28:11,950 --> 00:28:13,660
And then the next step is that we try

586
00:28:13,660 --> 00:28:15,683
to map out the antennas in real time.

587
00:28:16,930 --> 00:28:20,000
And we map them out using a
process called trilateration

588
00:28:21,410 --> 00:28:24,440
which is a process where
we have distance estimates

589
00:28:24,440 --> 00:28:26,600
that we're able to get from a combination

590
00:28:26,600 --> 00:28:28,190
of the frequency of the transmission

591
00:28:28,190 --> 00:28:31,210
and the signal strength, we
can estimate the distance

592
00:28:31,210 --> 00:28:32,890
and then with multiple readings,

593
00:28:32,890 --> 00:28:34,870
figure out where the towers are.

594
00:28:34,870 --> 00:28:38,010
And then we can compare
this to a ground truth

595
00:28:38,010 --> 00:28:41,610
such as WiGLE or opencellID
or the FCC database

596
00:28:41,610 --> 00:28:43,930
to see if other people have seen the cell

597
00:28:43,930 --> 00:28:47,123
with those identifiers in
that area, historically.

598
00:28:48,710 --> 00:28:52,020
A quick explanation of
trilateration versus triangulation,

599
00:28:52,020 --> 00:28:55,890
so trilateration is where
you have a measurement

600
00:28:55,890 --> 00:28:59,430
of the distance away from
a transmitter that you are

601
00:28:59,430 --> 00:29:02,330
but not what direction
the transmitter is in.

602
00:29:02,330 --> 00:29:06,930
So you draw a circle around
the point where you're at

603
00:29:06,930 --> 00:29:09,470
and somewhere on the edge of that circle

604
00:29:09,470 --> 00:29:11,970
is where the transmitter is gonna be.

605
00:29:11,970 --> 00:29:14,160
Once you've made three measurements,

606
00:29:14,160 --> 00:29:16,370
you can draw three circles.

607
00:29:16,370 --> 00:29:19,720
And the place where those
three circles intersect

608
00:29:19,720 --> 00:29:23,290
is the place where the transmitter
is going to be located.

609
00:29:23,290 --> 00:29:25,150
Triangulation, on the other hand,

610
00:29:25,150 --> 00:29:28,010
is where you have a bearing,
that is to say a direction,

611
00:29:28,010 --> 00:29:33,010
of the signal but you don't
know how far away the signal is.

612
00:29:33,300 --> 00:29:36,510
With triangulation, you get two readings

613
00:29:39,505 --> 00:29:41,350
with a bearing, with a direction,

614
00:29:41,350 --> 00:29:45,030
and then you can make
a triangle between the,

615
00:29:45,030 --> 00:29:47,630
with one line between the two readings

616
00:29:47,630 --> 00:29:49,937
and the other two sides being
the direction of the readings

617
00:29:49,937 --> 00:29:52,880
and where those two directions intersect

618
00:29:52,880 --> 00:29:57,293
is where the location
of the tower will be.

619
00:29:58,410 --> 00:29:59,720
So triangulation is good

620
00:29:59,720 --> 00:30:03,130
if you have direction but not distance,

621
00:30:03,130 --> 00:30:04,200
and trilateration is good

622
00:30:04,200 --> 00:30:06,400
if you have distance, but not direction.

623
00:30:06,400 --> 00:30:07,830
For trilateration, you only need

624
00:30:07,830 --> 00:30:09,950
one omnidirectional antenna.

625
00:30:09,950 --> 00:30:12,420
But for triangulation, you either need

626
00:30:12,420 --> 00:30:14,800
three omnidirectional antennas with all

627
00:30:14,800 --> 00:30:18,410
of their clocks synced so
that you can actually measure

628
00:30:18,410 --> 00:30:20,850
the angle that the signal is coming from,

629
00:30:20,850 --> 00:30:23,980
or you need a directional antenna
that's constantly spinning

630
00:30:26,254 --> 00:30:28,400
so that you can figure out where,

631
00:30:28,400 --> 00:30:30,320
which direction it points
has the strongest signal,

632
00:30:30,320 --> 00:30:32,043
and thus figure out the bearing.

633
00:30:34,370 --> 00:30:36,280
Given that we figured
most people running this

634
00:30:36,280 --> 00:30:38,220
would only have one
omnidirectional antenna

635
00:30:38,220 --> 00:30:41,380
and not a spinning antenna or
three clock-synced antennas,

636
00:30:41,380 --> 00:30:43,950
and thus three clock-synced radios,

637
00:30:43,950 --> 00:30:46,343
we figured the trilateration
was our best bet.

638
00:30:47,710 --> 00:30:49,880
So finally, we look for anomalies

639
00:30:49,880 --> 00:30:52,430
and what are we looking
for in terms of anomalies?

640
00:30:52,430 --> 00:30:53,950
We're, well, looking for things

641
00:30:53,950 --> 00:30:56,840
like cells that move over time,

642
00:30:56,840 --> 00:30:59,210
cells where the signal strength changes,

643
00:30:59,210 --> 00:31:01,230
cells that aren't where they
should be, in other words,

644
00:31:01,230 --> 00:31:04,513
cells that are here and
also across the city,

645
00:31:05,950 --> 00:31:08,310
cells that change parameters.

646
00:31:08,310 --> 00:31:10,770
Suddenly this eNodeB ID is broadcasting

647
00:31:10,770 --> 00:31:12,900
in a different country code
or a different network code

648
00:31:12,900 --> 00:31:15,890
or a different, or
suddenly it's broadcasting

649
00:31:15,890 --> 00:31:19,130
a different bandwidth
or something like that.

650
00:31:19,130 --> 00:31:21,777
We're also looking for
cells that are missing

651
00:31:21,777 --> 00:31:24,070
some of the more obscure
parameters in the SIB,

652
00:31:24,070 --> 00:31:25,590
or higher SIBs.

653
00:31:25,590 --> 00:31:28,140
And we're looking for new
cells that are showing up.

654
00:31:28,140 --> 00:31:29,580
And again, it's important to mention here

655
00:31:29,580 --> 00:31:31,970
that just because we find an anomaly

656
00:31:31,970 --> 00:31:34,150
doesn't mean we have found
a cell-site simulator.

657
00:31:34,150 --> 00:31:36,213
We actually need to go verify it.

658
00:31:39,180 --> 00:31:41,890
If you know anything about 4G attacks

659
00:31:41,890 --> 00:31:44,607
and know how they work, you
might be thinking at this point,

660
00:31:44,607 --> 00:31:47,587
"But there's a lot of
heuristics that you could have

661
00:31:47,587 --> 00:31:50,880
"if you could actually
connect to the tower."

662
00:31:50,880 --> 00:31:52,240
And that is true.

663
00:31:52,240 --> 00:31:54,970
There are a lot of really cool
heuristics that we could get.

664
00:31:54,970 --> 00:31:56,860
If we could connect to a cell,

665
00:31:56,860 --> 00:31:58,750
we could see if we got a reject message

666
00:31:58,750 --> 00:32:00,150
or we could see if it accepted us.

667
00:32:00,150 --> 00:32:02,470
Either one of those might be interesting.

668
00:32:02,470 --> 00:32:05,020
We could see if it was missing
some of the higher level

669
00:32:05,020 --> 00:32:09,260
or more esoteric parts of
the LTE stack, or we could,

670
00:32:09,260 --> 00:32:11,350
we could, there's all sorts
of things we can measure.

671
00:32:11,350 --> 00:32:13,340
We can see how many paging
messages it's sending out

672
00:32:13,340 --> 00:32:17,120
or how many other UEs are
connected to the cell.

673
00:32:17,120 --> 00:32:20,010
But all of those would
require connecting to the cell

674
00:32:20,010 --> 00:32:24,000
and connecting to the cell
requires transmitting.

675
00:32:24,000 --> 00:32:25,600
We thought it'd be a great idea

676
00:32:25,600 --> 00:32:29,320
until the EFF lawyers pointed
out that that's illegal.

677
00:32:29,320 --> 00:32:32,930
Because we're using a
software defined radio,

678
00:32:32,930 --> 00:32:35,340
it's not actually licensed to communicate

679
00:32:35,340 --> 00:32:39,700
on the cell, or to transmit
on the cellular bandwidths.

680
00:32:39,700 --> 00:32:42,410
Whereas your cellular modem in your phone

681
00:32:42,410 --> 00:32:44,740
is licensed to transmit
on those bandwidths.

682
00:32:44,740 --> 00:32:47,830
So we can't transmit on those
bandwidths without violate,

683
00:32:47,830 --> 00:32:49,900
on those bands, on those frequencies

684
00:32:49,900 --> 00:32:51,560
without violating the law.

685
00:32:51,560 --> 00:32:53,090
And we don't want to go to jail,

686
00:32:53,090 --> 00:32:54,773
so we decided not to transmit.

687
00:32:56,060 --> 00:33:00,430
But despite that, we
still got some results.

688
00:33:00,430 --> 00:33:02,600
So what we've found so far,

689
00:33:02,600 --> 00:33:05,450
our first test was at the
Dreamforce Conference,

690
00:33:05,450 --> 00:33:06,500
which I had mentioned previously,

691
00:33:06,500 --> 00:33:08,530
with my colleague, Dave Moss.

692
00:33:08,530 --> 00:33:10,780
Me and Dave spent all day running around

693
00:33:10,780 --> 00:33:11,850
Downtown San Francisco.

694
00:33:11,850 --> 00:33:13,060
And for those of you who aren't familiar

695
00:33:13,060 --> 00:33:14,993
with Dreamforce, lucky you.

696
00:33:16,230 --> 00:33:18,500
Dreamforce takes over all
of Downtown San Francisco

697
00:33:18,500 --> 00:33:22,963
and there's sales people
running around everywhere.

698
00:33:23,910 --> 00:33:25,580
We wandered around the main park

699
00:33:25,580 --> 00:33:26,740
where Dreamforce was happening,

700
00:33:26,740 --> 00:33:31,380
and we noticed this little
cluster of suspicious cells

701
00:33:31,380 --> 00:33:36,380
here on the park near the, where
the event was taking place.

702
00:33:36,460 --> 00:33:39,160
So we started walking down 3rd Street

703
00:33:39,160 --> 00:33:42,240
and then getting to the
point where we thought

704
00:33:42,240 --> 00:33:44,237
the suspicious cells
were and we're thinking,

705
00:33:44,237 --> 00:33:46,870
"Hey, yeah, I think it's
probably right about here."

706
00:33:46,870 --> 00:33:49,980
When we looked up and saw
this giant black truck

707
00:33:49,980 --> 00:33:51,970
with a satellite dish on top of it.

708
00:33:51,970 --> 00:33:53,890
The satellite dish was
pointing at a building

709
00:33:53,890 --> 00:33:56,160
about a block away that had
a couple of cell antennas

710
00:33:56,160 --> 00:33:58,683
on top of it that we had noted previously.

711
00:34:00,950 --> 00:34:03,630
After looking at the truck,
looking up the company

712
00:34:03,630 --> 00:34:05,150
that was listed on the side of the truck,

713
00:34:05,150 --> 00:34:07,190
and talking to the guys in the truck,

714
00:34:07,190 --> 00:34:10,190
we determined that this is
in fact a cell on wheels

715
00:34:10,190 --> 00:34:12,400
and not a cell-site simulator.

716
00:34:12,400 --> 00:34:15,890
A cell on wheels is a portable
cell, portable cell tower,

717
00:34:15,890 --> 00:34:19,790
that people bring out, companies bring out

718
00:34:19,790 --> 00:34:23,530
to expand the cellular
capacity in a given area,

719
00:34:23,530 --> 00:34:24,810
usually for large events.

720
00:34:24,810 --> 00:34:27,060
In fact, there was even
one at Standing Rock.

721
00:34:29,300 --> 00:34:31,267
We don't think that this
was a cell-site simulator.

722
00:34:31,267 --> 00:34:34,450
And in fact, cells on
wheels are pretty common.

723
00:34:34,450 --> 00:34:36,820
But they have some
interesting similarities

724
00:34:36,820 --> 00:34:39,053
to cell-site simulators in,

725
00:34:41,900 --> 00:34:43,780
namely in that they are

726
00:34:43,780 --> 00:34:47,340
a portable cell that shows
up that isn't usually there

727
00:34:47,340 --> 00:34:49,053
is suddenly there and then leaves,

728
00:34:53,460 --> 00:34:56,680
and that they are acting
like legitimate cells.

729
00:34:56,680 --> 00:35:00,210
The main differences are
that they're not actually

730
00:35:00,210 --> 00:35:04,090
trying to exploit any
of the characteristics

731
00:35:04,090 --> 00:35:06,780
of the 4G network and
the people operating them

732
00:35:06,780 --> 00:35:09,373
are probably not using them to spy on.

733
00:35:10,780 --> 00:35:14,320
But we still think that
this was a successful test.

734
00:35:14,320 --> 00:35:16,010
We were able to use our heuristics

735
00:35:16,010 --> 00:35:19,090
to find a new cell that
had just showed up.

736
00:35:19,090 --> 00:35:22,560
And we were able to use our
map to actually track that down

737
00:35:22,560 --> 00:35:24,420
and see what it was.

738
00:35:24,420 --> 00:35:26,360
If we had just been using an app,

739
00:35:26,360 --> 00:35:27,970
maybe that app would have called this out

740
00:35:27,970 --> 00:35:28,890
and maybe it wouldn't have.

741
00:35:28,890 --> 00:35:30,300
And even if it had called it out,

742
00:35:30,300 --> 00:35:32,910
we wouldn't have known what to go look for

743
00:35:32,910 --> 00:35:34,850
or what it might've been.

744
00:35:34,850 --> 00:35:37,163
So we considered this a success.

745
00:35:38,810 --> 00:35:41,350
Earlier this year we did a second test

746
00:35:42,350 --> 00:35:44,513
at ShmooCon in Washington, D.C.

747
00:35:46,490 --> 00:35:51,410
So I loaded up Crocodile
Hunter on a Raspberry Pi,

748
00:35:51,410 --> 00:35:53,470
running around ShmooCon with it

749
00:35:53,470 --> 00:35:55,630
in my backpack for the entire time.

750
00:35:55,630 --> 00:35:57,830
And what we discovered at ShmooCon

751
00:35:57,830 --> 00:36:00,050
was two really interesting sets

752
00:36:00,050 --> 00:36:04,150
of two different eNodeBs
that would occasionally

753
00:36:04,150 --> 00:36:07,100
broadcast instead of the
country code and network code

754
00:36:07,100 --> 00:36:11,710
of 310-410 which maps to U.S.A. and AT&T,

755
00:36:11,710 --> 00:36:14,170
would broadcast a completely
different country code

756
00:36:14,170 --> 00:36:16,170
and a completely different network code.

757
00:36:17,090 --> 00:36:21,690
Looking into it further, the first one

758
00:36:21,690 --> 00:36:23,870
was broadcasting on the same EARFCN

759
00:36:23,870 --> 00:36:26,730
as what we think is the legitimate tower

760
00:36:26,730 --> 00:36:29,850
but would broadcast a
different MCC and an MNC

761
00:36:29,850 --> 00:36:31,343
of 350 and 490.

762
00:36:32,320 --> 00:36:35,900
350 is the country code for Bermuda

763
00:36:35,900 --> 00:36:40,900
and the MNC 490 is not used
by any network in Bermuda.

764
00:36:41,280 --> 00:36:44,020
In the U.S., it's used
by Sprint and T-Mobile,

765
00:36:44,020 --> 00:36:47,090
but again, this is an AT&T network.

766
00:36:47,090 --> 00:36:49,723
It was also broadcasting
the same physical ID,

767
00:36:50,680 --> 00:36:53,030
but a different sector ID

768
00:36:53,030 --> 00:36:54,870
and a different Tracking Area Code.

769
00:36:54,870 --> 00:36:56,763
So we found this really interesting.

770
00:36:58,720 --> 00:37:02,780
In another instance,
there was another eNodeB

771
00:37:02,780 --> 00:37:05,330
broadcasting on the same
EARFCN as what we think

772
00:37:05,330 --> 00:37:08,370
is a legitimate eNodeB,
this time broadcasting

773
00:37:08,370 --> 00:37:11,830
a country code of 308 for
Saint Pierre and Miquelon,

774
00:37:11,830 --> 00:37:13,630
which if you need a point of reference,

775
00:37:13,630 --> 00:37:15,190
these are a couple of small islands

776
00:37:15,190 --> 00:37:16,970
off the coast of Nova Scotia.

777
00:37:16,970 --> 00:37:17,967
I was also not aware of them

778
00:37:17,967 --> 00:37:20,470
'til I looked them up for this talk.

779
00:37:20,470 --> 00:37:24,300
And the country, and the
network code 451 is not used

780
00:37:24,300 --> 00:37:28,670
by any network for anything
ever, anywhere in the world.

781
00:37:28,670 --> 00:37:32,610
This network was also
broadcasting the same physical ID.

782
00:37:32,610 --> 00:37:35,340
And in this case, was
broadcasting the same Sector ID

783
00:37:35,340 --> 00:37:37,860
as the legitimate tower and
the same Tracking Area Code

784
00:37:37,860 --> 00:37:39,440
as the legitimate tower.

785
00:37:39,440 --> 00:37:41,450
So these were really interesting.

786
00:37:41,450 --> 00:37:44,640
Unfortunately, I, as I
said, was running around

787
00:37:44,640 --> 00:37:46,720
with the Crocodile Hunter in my backpack

788
00:37:46,720 --> 00:37:49,890
and didn't notice these
results until after the fact.

789
00:37:49,890 --> 00:37:52,890
So I didn't get a chance
to go track them down.

790
00:37:52,890 --> 00:37:55,454
So hopefully in the future,
we'll find something like this

791
00:37:55,454 --> 00:37:57,423
and actually get to go
physically locate it.

792
00:37:59,640 --> 00:38:01,120
We do have ongoing tests though.

793
00:38:01,120 --> 00:38:03,270
Our partners in Latin America

794
00:38:03,270 --> 00:38:05,910
with the Fake Antenna Detection Project.

795
00:38:05,910 --> 00:38:08,640
I have previously run around Mexico City

796
00:38:08,640 --> 00:38:11,680
and other places with SeaGlass

797
00:38:11,680 --> 00:38:14,000
and I've gotten some really
interesting results there,

798
00:38:14,000 --> 00:38:15,960
and are planning next to run around there

799
00:38:15,960 --> 00:38:18,300
with Crocodile Hunter and
see what they can find.

800
00:38:18,300 --> 00:38:20,750
And I'm really excited
for what they will find.

801
00:38:20,750 --> 00:38:24,070
We also have partners
running Crocodile Hunter

802
00:38:24,070 --> 00:38:27,160
in Washington, D.C. and in New York City.

803
00:38:27,160 --> 00:38:29,550
And we hope now that the
project is open source,

804
00:38:29,550 --> 00:38:32,250
that you'll want to run this
in your hometown as well.

805
00:38:35,720 --> 00:38:38,850
In the future, we hope
to get better heuristics

806
00:38:38,850 --> 00:38:40,530
for Crocodile Hunter.

807
00:38:40,530 --> 00:38:43,740
Some of the heuristics I
have right now aren't great,

808
00:38:43,740 --> 00:38:46,910
and I think that there are
other ones that we could do.

809
00:38:46,910 --> 00:38:48,283
We have a lot of ideas.

810
00:38:49,489 --> 00:38:51,700
We also can improve these
once we get a better sense

811
00:38:51,700 --> 00:38:54,720
of how IMSI Catchers
and cell-site simulators

812
00:38:54,720 --> 00:38:56,850
are operating in the wild.

813
00:38:56,850 --> 00:38:59,590
Speaking of heuristics, once
we get a lot of readings,

814
00:38:59,590 --> 00:39:02,090
we think that we can start
to do some machine learning

815
00:39:02,090 --> 00:39:06,330
to build a classifier for what
towers are behaving normally

816
00:39:06,330 --> 00:39:07,740
and giving normal characteristics

817
00:39:07,740 --> 00:39:09,910
and what towers are suspicious,

818
00:39:09,910 --> 00:39:13,570
maybe in ways that a
human wouldn't notice.

819
00:39:13,570 --> 00:39:15,460
I also want to get
better location finding.

820
00:39:15,460 --> 00:39:17,420
Right now my location
finding can sometimes

821
00:39:17,420 --> 00:39:21,330
be about 50 meters off
and that's not great.

822
00:39:21,330 --> 00:39:23,370
It's still pretty close
and I'm okay with it.

823
00:39:23,370 --> 00:39:25,380
I think it's good enough,

824
00:39:25,380 --> 00:39:26,810
but I would like to get it much better.

825
00:39:26,810 --> 00:39:31,810
And that means we need
better distance estimates,

826
00:39:33,090 --> 00:39:34,920
which is beyond my math

827
00:39:34,920 --> 00:39:36,400
and physics knowledge, unfortunately.

828
00:39:36,400 --> 00:39:39,010
So, and the other thing we need

829
00:39:39,010 --> 00:39:40,580
is we want to port it to cheaper hardware.

830
00:39:40,580 --> 00:39:44,890
Like I said, the BladeRF
will run you about 500 bucks.

831
00:39:44,890 --> 00:39:47,550
We think that it can work on the LimeSDR,

832
00:39:47,550 --> 00:39:49,330
which is cheaper at 250.

833
00:39:49,330 --> 00:39:52,240
I would love, I mean my
dream is that it would work

834
00:39:52,240 --> 00:39:56,190
on the RTL-SDR which it'd cost like $20,

835
00:39:56,190 --> 00:39:59,350
but I'm not convinced that
the RTL-SDR and Raspberry Pi

836
00:39:59,350 --> 00:40:02,480
are actually powerful
enough or have the bandwidth

837
00:40:02,480 --> 00:40:03,870
to do what we need them to do.

838
00:40:03,870 --> 00:40:06,240
So that's, that's still up in the air.

839
00:40:07,847 --> 00:40:09,830
And finally what's with the name?

840
00:40:09,830 --> 00:40:13,870
Well, you may remember
that one of the brand names

841
00:40:13,870 --> 00:40:17,120
for a cell-site simulator is the Stingray.

842
00:40:17,120 --> 00:40:20,680
You may also remember that
the stingray is the animal

843
00:40:20,680 --> 00:40:24,400
that finally killed Steve
Irwin, the Crocodile Hunter.

844
00:40:24,400 --> 00:40:28,053
So we named it Crocodile
Hunter to press F for Steve.

845
00:40:30,600 --> 00:40:34,260
Finally, what can we do to
stop cell-site simulators?

846
00:40:34,260 --> 00:40:38,740
Well, we can start by having a toggle

847
00:40:38,740 --> 00:40:42,270
on iOS and Android to turn off 2G support.

848
00:40:42,270 --> 00:40:46,520
One of the main attacks for
native 4G cell-site simulators

849
00:40:46,520 --> 00:40:49,400
is to use that pre-authentication area

850
00:40:49,400 --> 00:40:51,480
to downgrade your connection to 2G.

851
00:40:51,480 --> 00:40:54,340
And once your phone is
downgraded to a 2G connection,

852
00:40:54,340 --> 00:40:57,280
they can do things like inspect content

853
00:40:57,280 --> 00:40:59,960
or do passive attacks
to decrypt the messages

854
00:40:59,960 --> 00:41:01,890
between you and the cell tower,

855
00:41:01,890 --> 00:41:05,610
or they can emulate a 2G base station.

856
00:41:05,610 --> 00:41:09,820
So your phone still supports
2G, and the reason for that,

857
00:41:09,820 --> 00:41:11,160
there's a good reason for that.

858
00:41:11,160 --> 00:41:15,210
It's because many people in
the world still use 2G cells

859
00:41:15,210 --> 00:41:17,360
as their primary form of communication.

860
00:41:17,360 --> 00:41:19,393
And lots of 2G networks are still up.

861
00:41:20,837 --> 00:41:25,490
So iOS and Android can't
just disable 2G by default.

862
00:41:25,490 --> 00:41:27,520
But what they could do
is build in a toggle

863
00:41:27,520 --> 00:41:29,570
for users who are concerned about this

864
00:41:29,570 --> 00:41:33,420
to be able to turn off their
2G radios if they wish.

865
00:41:33,420 --> 00:41:36,773
And we've written a blog post
that encourages them to do so.

866
00:41:38,370 --> 00:41:39,750
The main thing we need to fix, though,

867
00:41:39,750 --> 00:41:41,950
is these pre-authentication messages,

868
00:41:41,950 --> 00:41:44,590
all of the messages that
happen after your phone

869
00:41:44,590 --> 00:41:48,720
connects to the tower but before
the authentication starts.

870
00:41:48,720 --> 00:41:51,090
And that's a problem, not in 4G, but if,

871
00:41:51,090 --> 00:41:54,170
not just in 4G, but in 5G as well.

872
00:41:54,170 --> 00:41:56,210
There's a pretty interesting proposal

873
00:41:58,508 --> 00:42:02,580
for covering the, all of the messages

874
00:42:02,580 --> 00:42:04,390
or authenticating all of the messages

875
00:42:04,390 --> 00:42:07,650
between the tower and the
user equipment with TLS.

876
00:42:07,650 --> 00:42:10,018
There's a pretty good paper about this,

877
00:42:10,018 --> 00:42:12,520
and it will be linked here in the notes

878
00:42:12,520 --> 00:42:15,820
for this presentation,
that proposes a way,

879
00:42:15,820 --> 00:42:17,490
and it's still in its infancy

880
00:42:17,490 --> 00:42:18,560
and it's gonna take some more work,

881
00:42:18,560 --> 00:42:21,573
but we really think that
longterm, that's the solution.

882
00:42:22,801 --> 00:42:24,930
But that's gonna be,
have to be implemented

883
00:42:24,930 --> 00:42:27,563
by a standards body, such as the 3GPP.

884
00:42:28,486 --> 00:42:30,410
And the 3GPP is the standards body

885
00:42:30,410 --> 00:42:33,100
that makes all of the
standards for cell networks.

886
00:42:33,100 --> 00:42:34,450
It's also gonna have to be implemented

887
00:42:34,450 --> 00:42:36,910
by carriers, manufacturers, and OEMs,

888
00:42:36,910 --> 00:42:40,210
and we need more incentives
for the standards orgs,

889
00:42:40,210 --> 00:42:45,210
the carriers, and the OEMs
to care about user privacy.

890
00:42:45,600 --> 00:42:47,520
Right now, it often feels as though

891
00:42:47,520 --> 00:42:50,090
user privacy is an
afterthought and connectivity

892
00:42:50,090 --> 00:42:51,700
is really the most important,

893
00:42:51,700 --> 00:42:55,763
the primary goal of these,
of these organizations.

894
00:42:56,758 --> 00:42:58,670
And we need to change that.

895
00:42:58,670 --> 00:43:02,700
The 3GPP costs several tens
of thousands of dollars

896
00:43:02,700 --> 00:43:04,060
to get a seat on.

897
00:43:04,060 --> 00:43:06,300
And as such, there are no representations

898
00:43:06,300 --> 00:43:08,880
from civil society, from
privacy organizations,

899
00:43:08,880 --> 00:43:11,540
and from nonprofits, and
that needs to change.

900
00:43:11,540 --> 00:43:14,450
None of these solutions are
gonna be foolproof, of course,

901
00:43:14,450 --> 00:43:17,760
and our detection, and Crocodile
Hunter isn't foolproof,

902
00:43:17,760 --> 00:43:20,300
but we're not even doing
the bare minimum yet.

903
00:43:20,300 --> 00:43:22,800
And I think that we should
be doing at least that.

904
00:43:25,020 --> 00:43:27,610
So what do I want you
to take away from this?

905
00:43:27,610 --> 00:43:29,230
Well, we have a pretty good understanding

906
00:43:29,230 --> 00:43:31,480
of the vulnerabilities in 4G

907
00:43:31,480 --> 00:43:34,230
which commercial cell-site
simulators might exploit.

908
00:43:34,230 --> 00:43:35,640
And if you want to read more about those,

909
00:43:35,640 --> 00:43:37,777
I really highly suggest
you read Yomna's paper

910
00:43:37,777 --> 00:43:39,540
"Gotta Catch 'Em All."

911
00:43:39,540 --> 00:43:41,950
None of the previous IMSI
Catcher Detector apps

912
00:43:41,950 --> 00:43:43,410
really do the job anymore.

913
00:43:43,410 --> 00:43:47,910
SeaGlass could certainly still
detect older IMSI Catchers,

914
00:43:47,910 --> 00:43:51,130
but none of them were able to
detect newer IMSI Catchers.

915
00:43:51,130 --> 00:43:52,510
But we've come up with a method

916
00:43:52,510 --> 00:43:56,790
similar to established methods,
but targeting 4G natively.

917
00:43:56,790 --> 00:44:00,700
And we think that the
worst problems of CSS abuse

918
00:44:00,700 --> 00:44:02,750
can be solved with a
little bit of elbow grease

919
00:44:02,750 --> 00:44:03,963
and a lot of politics.

920
00:44:05,890 --> 00:44:07,867
Finally, thanks to the following people.

921
00:44:07,867 --> 00:44:10,300
Yomna, of course, I couldn't
have done this project

922
00:44:10,300 --> 00:44:12,180
without her and she did
so much amazing work.

923
00:44:12,180 --> 00:44:13,740
Thanks so much to Yomna.

924
00:44:13,740 --> 00:44:16,570
And please buy her a virtual beer,

925
00:44:16,570 --> 00:44:17,990
or just challenge her to a game

926
00:44:17,990 --> 00:44:20,672
of Dance Dance Revolution if you see her.

927
00:44:20,672 --> 00:44:22,080
And of course, thanks
to the whole EFF crew

928
00:44:22,080 --> 00:44:23,780
and especially Threat Lab

929
00:44:23,780 --> 00:44:25,920
who have been a huge
support throughout this.

930
00:44:25,920 --> 00:44:27,750
Huge thanks to Andy and Bob at WiGLE

931
00:44:27,750 --> 00:44:29,810
for a lot of programming
help, and a lot of,

932
00:44:29,810 --> 00:44:32,770
for giving me unfettered
access to their API.

933
00:44:32,770 --> 00:44:34,420
Thanks to Roger Piqueras Jover

934
00:44:34,420 --> 00:44:37,300
who is one of the smartest
people in the world

935
00:44:37,300 --> 00:44:38,133
about cell networks.

936
00:44:38,133 --> 00:44:41,010
He really knows his stuff
and he gave a lot of advice

937
00:44:41,010 --> 00:44:42,800
and a lot of encouragement.

938
00:44:42,800 --> 00:44:45,790
Thanks to my test crew,
Nima Fatemi with Kandoo

939
00:44:45,790 --> 00:44:48,980
and Surya Mattu and Simon from The Markup,

940
00:44:48,980 --> 00:44:50,853
Simon Fondrie-Teitler, thank you.

941
00:44:51,760 --> 00:44:53,420
Carlos with the FADE Project

942
00:44:53,420 --> 00:44:55,740
and everybody else involved
on the FADE Project,

943
00:44:55,740 --> 00:44:59,640
thanks for running Crocodile
Hunter in South America.

944
00:44:59,640 --> 00:45:01,590
Karl Kosher and Peter Ney and others

945
00:45:01,590 --> 00:45:04,670
at the University of Washington
who authored SeaGlass

946
00:45:04,670 --> 00:45:07,760
as well as giving me tons of advice,

947
00:45:07,760 --> 00:45:10,590
tons of support, coming out
to Standing Rock with me,

948
00:45:10,590 --> 00:45:12,950
really fantastic people.

949
00:45:12,950 --> 00:45:15,400
And of course, thanks to Ash
Wilson, the author of SITCH,

950
00:45:15,400 --> 00:45:17,610
and Eric Escobar of DEFCON JusticeBeaver

951
00:45:17,610 --> 00:45:19,900
who also gave me a lot of
inspiration and advice.

952
00:45:19,900 --> 00:45:22,090
And last but not least
thanks to Kristin Paget

953
00:45:22,090 --> 00:45:24,830
for doing all the original
research on cell-site simulators

954
00:45:24,830 --> 00:45:26,470
and really paving the way for hackers

955
00:45:26,470 --> 00:45:27,380
to start looking at these.

956
00:45:27,380 --> 00:45:30,520
And also thanks for the
Nokia phones, Kristin.

957
00:45:30,520 --> 00:45:32,820
And finally, thank you
for coming to the talk.

