1
00:00:02,830 --> 00:00:21,930
[Music]

2
00:00:18,890 --> 00:00:24,750
welcome everybody<font color="#CCCCCC"> to our next talk it's</font>

3
00:00:21,930 --> 00:00:26,369
the talk wallet fail<font color="#CCCCCC"> as you all know</font>

4
00:00:24,750 --> 00:00:28,980
when you<font color="#CCCCCC"> have something valuable</font><font color="#E5E5E5"> you put</font>

5
00:00:26,369 --> 00:00:31,410
it somewhere<font color="#E5E5E5"> safe</font><font color="#CCCCCC"> but as we as hackers</font>

6
00:00:28,980 --> 00:00:34,350
also<font color="#E5E5E5"> know there is no place that</font><font color="#CCCCCC"> is</font>

7
00:00:31,410 --> 00:00:36,809
<font color="#E5E5E5">really safe in our three speakers</font><font color="#CCCCCC"> tomas</font>

8
00:00:34,350 --> 00:00:38,190
<font color="#CCCCCC">Dimitri and Josh are now going to</font>

9
00:00:36,809 --> 00:00:40,589
<font color="#E5E5E5">demonstrate in the</font><font color="#CCCCCC"> next hour</font>

10
00:00:38,190 --> 00:00:42,718
the art of completely<font color="#E5E5E5"> breaking something</font>

11
00:00:40,590 --> 00:00:44,910
apart<font color="#E5E5E5"> so please give a big</font><font color="#CCCCCC"> round of</font>

12
00:00:42,719 --> 00:00:52,860
applause<font color="#CCCCCC"> for Thomas Dimitri and Josh and</font>

13
00:00:44,910 --> 00:00:54,089
<font color="#E5E5E5">have a lot</font><font color="#CCCCCC"> of fun so just just the start</font>

14
00:00:52,860 --> 00:00:55,890
<font color="#E5E5E5">I'm curious how many people</font><font color="#CCCCCC"> here</font>

15
00:00:54,090 --> 00:00:59,760
actually<font color="#E5E5E5"> own</font><font color="#CCCCCC"> crypto currency raise your</font>

16
00:00:55,890 --> 00:01:03,629
hand<font color="#E5E5E5"> and how many of you store it on</font>

17
00:00:59,760 --> 00:01:05,869
<font color="#CCCCCC">Hardware</font><font color="#E5E5E5"> wallet so we're very sorry to</font>

18
00:01:03,629 --> 00:01:10,470
<font color="#E5E5E5">everyone who who has their their hand up</font>

19
00:01:05,869 --> 00:01:13,680
<font color="#E5E5E5">okay so it's not just me it's me Josh</font>

20
00:01:10,470 --> 00:01:15,810
<font color="#E5E5E5">and Thomas</font><font color="#CCCCCC"> so we're all hardware people</font>

21
00:01:13,680 --> 00:01:19,080
<font color="#E5E5E5">we do low-level</font><font color="#CCCCCC"> Hardware stuff in</font>

22
00:01:15,810 --> 00:01:21,119
varying degrees<font color="#CCCCCC"> and we got into</font><font color="#E5E5E5"> crypto</font>

23
00:01:19,080 --> 00:01:22,649
<font color="#E5E5E5">currency and so I can recommend to</font>

24
00:01:21,119 --> 00:01:24,930
<font color="#E5E5E5">everyone sitting in this room if you're</font>

25
00:01:22,650 --> 00:01:26,640
a<font color="#E5E5E5"> security person</font><font color="#CCCCCC"> there's</font><font color="#E5E5E5"> not a lot of</font>

26
00:01:24,930 --> 00:01:30,170
people<font color="#CCCCCC"> doing security and cryptocurrency</font>

27
00:01:26,640 --> 00:01:32,430
<font color="#CCCCCC">as much as that's painful to hear so</font>

28
00:01:30,170 --> 00:01:33,900
yeah I mean<font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> this is based on</font>

29
00:01:32,430 --> 00:01:36,180
reverse engineering

30
00:01:33,900 --> 00:01:38,670
we love<font color="#CCCCCC"> cryptocurrency I mean for us</font>

31
00:01:36,180 --> 00:01:41,850
crypto also stands for<font color="#E5E5E5"> cryptography not</font>

32
00:01:38,670 --> 00:01:44,189
just<font color="#CCCCCC"> crypto currency</font><font color="#E5E5E5"> but no offense to</font>

33
00:01:41,850 --> 00:01:45,780
anyone with this talk it's just

34
00:01:44,189 --> 00:01:47,669
<font color="#E5E5E5">something that it's a category that we</font>

35
00:01:45,780 --> 00:01:50,159
looked<font color="#E5E5E5"> at and so the results kind</font><font color="#CCCCCC"> of</font>

36
00:01:47,670 --> 00:01:51,960
speak for<font color="#E5E5E5"> themselves and again this</font>

37
00:01:50,159 --> 00:01:53,549
wouldn't be<font color="#CCCCCC"> possible alone so we have a</font>

38
00:01:51,960 --> 00:01:56,280
lot of people<font color="#CCCCCC"> to</font><font color="#E5E5E5"> think I'm not gonna go</font>

39
00:01:53,549 --> 00:01:57,960
<font color="#E5E5E5">through</font><font color="#CCCCCC"> all of them individually just be</font>

40
00:01:56,280 --> 00:02:01,829
known that we're<font color="#E5E5E5"> thankful to everyone on</font>

41
00:01:57,960 --> 00:02:03,990
this on<font color="#E5E5E5"> this slide</font><font color="#CCCCCC"> so yeah so we started</font>

42
00:02:01,829 --> 00:02:05,369
this about<font color="#E5E5E5"> six months ago</font><font color="#CCCCCC"> so we wanted</font>

43
00:02:03,990 --> 00:02:07,350
to<font color="#E5E5E5"> take a look at</font><font color="#CCCCCC"> crypto currency</font>

44
00:02:05,369 --> 00:02:09,479
because we own some crypto currency

45
00:02:07,350 --> 00:02:12,329
ourselves and we saw<font color="#CCCCCC"> that everyone's</font>

46
00:02:09,479 --> 00:02:13,830
using<font color="#CCCCCC"> crypto currency wallets</font><font color="#E5E5E5"> it's more</font>

47
00:02:12,330 --> 00:02:16,350
and more<font color="#E5E5E5"> the thing that you do</font>

48
00:02:13,830 --> 00:02:19,650
so we started<font color="#CCCCCC"> a group chat as you do</font>

49
00:02:16,350 --> 00:02:24,210
nowadays<font color="#CCCCCC"> and we have 50,000 messages now</font>

50
00:02:19,650 --> 00:02:27,120
and<font color="#CCCCCC"> 1,100 images and I had my first I</font>

51
00:02:24,210 --> 00:02:28,920
had<font color="#E5E5E5"> my son</font><font color="#CCCCCC"> in the</font><font color="#E5E5E5"> meantime as well so</font>

52
00:02:27,120 --> 00:02:35,430
it's a really long time<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> spent</font>

53
00:02:28,920 --> 00:02:36,780
<font color="#CCCCCC">looking at this</font><font color="#E5E5E5"> etc okay so what do we</font>

54
00:02:35,430 --> 00:02:38,670
<font color="#E5E5E5">want to achieve though because</font><font color="#CCCCCC"> people</font>

55
00:02:36,780 --> 00:02:40,350
don't give the kinds<font color="#CCCCCC"> of</font><font color="#E5E5E5"> attacks so you</font>

56
00:02:38,670 --> 00:02:42,329
<font color="#E5E5E5">can</font><font color="#CCCCCC"> actually perform against</font><font color="#E5E5E5"> a</font>

57
00:02:40,350 --> 00:02:44,489
<font color="#E5E5E5">cryptocurrency</font><font color="#CCCCCC"> Wold cent of credit so</font>

58
00:02:42,330 --> 00:02:47,070
first attack<font color="#CCCCCC"> is supply chain attacks</font>

59
00:02:44,490 --> 00:02:48,480
where you are able to<font color="#E5E5E5"> manipulate the</font>

60
00:02:47,070 --> 00:02:50,880
devices before<font color="#E5E5E5"> they get to the end</font>

61
00:02:48,480 --> 00:02:52,260
customer for more vulnerabilities where

62
00:02:50,880 --> 00:02:53,910
you find a<font color="#CCCCCC"> vulnerability in the firm</font>

63
00:02:52,260 --> 00:02:55,260
rank and somehow<font color="#E5E5E5"> either in fact or</font><font color="#CCCCCC"> do</font>

64
00:02:53,910 --> 00:02:58,140
something<font color="#E5E5E5"> something else with the device</font>

65
00:02:55,260 --> 00:02:59,370
<font color="#CCCCCC">side-channel attacks of course I think</font>

66
00:02:58,140 --> 00:03:01,290
that's one of<font color="#E5E5E5"> the more obvious ones that</font>

67
00:02:59,370 --> 00:03:02,790
<font color="#E5E5E5">people are familiar with and also chip</font>

68
00:03:01,290 --> 00:03:04,980
level vulnerability so we were able<font color="#CCCCCC"> to</font>

69
00:03:02,790 --> 00:03:06,239
find one<font color="#CCCCCC"> of each of these</font><font color="#E5E5E5"> and so that's</font>

70
00:03:04,980 --> 00:03:08,970
the talk<font color="#E5E5E5"> that we're going to talk</font><font color="#CCCCCC"> about</font>

71
00:03:06,240 --> 00:03:10,890
<font color="#E5E5E5">each one of these individually so but</font>

72
00:03:08,970 --> 00:03:13,170
<font color="#E5E5E5">first what's a what's a wallet just in</font>

73
00:03:10,890 --> 00:03:15,600
case you are<font color="#CCCCCC"> not</font><font color="#E5E5E5"> 100% familiar with them</font>

74
00:03:13,170 --> 00:03:17,399
so a wallet<font color="#E5E5E5"> and in general</font>

75
00:03:15,600 --> 00:03:19,290
<font color="#E5E5E5">cryptocurrency how do you do this it's</font>

76
00:03:17,400 --> 00:03:21,750
<font color="#E5E5E5">just</font><font color="#CCCCCC"> asymmetric cryptography so you have</font>

77
00:03:19,290 --> 00:03:24,359
a private key and a public<font color="#CCCCCC"> key the</font>

78
00:03:21,750 --> 00:03:26,489
public key basically it<font color="#E5E5E5"> gives you the</font>

79
00:03:24,360 --> 00:03:28,530
address<font color="#CCCCCC"> you can derive the address from</font>

80
00:03:26,489 --> 00:03:30,959
this the<font color="#E5E5E5"> address is nothing other than</font>

81
00:03:28,530 --> 00:03:32,459
<font color="#E5E5E5">the public key of the wallet and you</font>

82
00:03:30,959 --> 00:03:34,680
have the private key<font color="#E5E5E5"> and you need this</font>

83
00:03:32,459 --> 00:03:36,959
to send<font color="#E5E5E5"> transactions so to actually</font>

84
00:03:34,680 --> 00:03:38,730
operate with the<font color="#E5E5E5"> cryptocurrency</font><font color="#CCCCCC"> so this</font>

85
00:03:36,959 --> 00:03:40,560
the private<font color="#CCCCCC"> key is what needs</font><font color="#E5E5E5"> to be kept</font>

86
00:03:38,730 --> 00:03:42,238
<font color="#CCCCCC">secret the</font><font color="#E5E5E5"> public key is something that</font>

87
00:03:40,560 --> 00:03:44,550
everyone can<font color="#E5E5E5"> know so that they can send</font>

88
00:03:42,239 --> 00:03:46,590
cryptocurrency<font color="#CCCCCC"> to you but it kind of</font>

89
00:03:44,550 --> 00:03:49,170
sucks<font color="#E5E5E5"> to have separate for each</font>

90
00:03:46,590 --> 00:03:50,760
<font color="#E5E5E5">cryptocurrency pair or for each wallet</font>

91
00:03:49,170 --> 00:03:53,760
maybe you want multiple wallets it sucks

92
00:03:50,760 --> 00:03:57,090
to generate<font color="#CCCCCC"> a new new new cryptographic</font>

93
00:03:53,760 --> 00:03:59,670
<font color="#CCCCCC">pair for</font><font color="#E5E5E5"> each one of them so the people</font>

94
00:03:57,090 --> 00:04:01,800
the wonderful people<font color="#E5E5E5"> behind</font><font color="#CCCCCC"> Bitcoin have</font>

95
00:03:59,670 --> 00:04:05,670
thought of<font color="#E5E5E5"> something for this and it's</font>

96
00:04:01,800 --> 00:04:07,380
called BIP 32-bit 44 and so what it is

97
00:04:05,670 --> 00:04:11,549
is you have<font color="#CCCCCC"> a cryptographic</font><font color="#E5E5E5"> seed and you</font>

98
00:04:07,380 --> 00:04:13,290
can<font color="#CCCCCC"> actually derive the accounts from</font>

99
00:04:11,550 --> 00:04:15,320
from a single seed so you<font color="#E5E5E5"> basically</font>

100
00:04:13,290 --> 00:04:18,180
store one seed and<font color="#E5E5E5"> you're</font><font color="#CCCCCC"> able to</font>

101
00:04:15,320 --> 00:04:21,358
<font color="#E5E5E5">implement and do unlimited amount of</font>

102
00:04:18,180 --> 00:04:23,550
wallets<font color="#CCCCCC"> okay so basically</font><font color="#E5E5E5"> you do key</font>

103
00:04:21,358 --> 00:04:24,900
derivation<font color="#CCCCCC"> you add some data</font><font color="#E5E5E5"> do key</font>

104
00:04:23,550 --> 00:04:27,090
derivation<font color="#CCCCCC"> and you can have an unlimited</font>

105
00:04:24,900 --> 00:04:27,539
<font color="#E5E5E5">amount of wallets while storing a single</font>

106
00:04:27,090 --> 00:04:29,130
<font color="#E5E5E5">so</font>

107
00:04:27,540 --> 00:04:31,620
and this is what you're using when

108
00:04:29,130 --> 00:04:33,450
you're using a hardware wallet<font color="#E5E5E5"> so and of</font>

109
00:04:31,620 --> 00:04:34,590
course for each key derivation there

110
00:04:33,450 --> 00:04:36,060
will be a new<font color="#E5E5E5"> private key and a public</font>

111
00:04:34,590 --> 00:04:37,739
<font color="#CCCCCC">key but it'll be generated in a</font>

112
00:04:36,060 --> 00:04:39,630
<font color="#E5E5E5">predictable manner</font><font color="#CCCCCC"> and you only need to</font>

113
00:04:37,740 --> 00:04:41,700
store<font color="#E5E5E5"> one secret seed so you</font><font color="#CCCCCC"> only have</font>

114
00:04:39,630 --> 00:04:43,380
to<font color="#E5E5E5"> store the seed you can write it down</font>

115
00:04:41,700 --> 00:04:44,640
<font color="#E5E5E5">and that's the</font><font color="#CCCCCC"> advantage</font><font color="#E5E5E5"> but it's</font>

116
00:04:43,380 --> 00:04:48,780
difficult<font color="#E5E5E5"> to write down because it's</font>

117
00:04:44,640 --> 00:04:51,390
<font color="#CCCCCC">binary data so come</font><font color="#E5E5E5"> bit 39 which</font><font color="#CCCCCC"> is what</font>

118
00:04:48,780 --> 00:04:52,650
you're most used to which is<font color="#E5E5E5"> a format</font><font color="#CCCCCC"> in</font>

119
00:04:51,390 --> 00:04:54,840
which<font color="#CCCCCC"> you can take</font><font color="#E5E5E5"> that cryptographic</font>

120
00:04:52,650 --> 00:04:56,609
seed that<font color="#CCCCCC"> binary data</font><font color="#E5E5E5"> and actually</font>

121
00:04:54,840 --> 00:04:58,650
convert<font color="#CCCCCC"> it to a set of dictionary words</font>

122
00:04:56,610 --> 00:05:00,420
that you can<font color="#E5E5E5"> then easily write down on a</font>

123
00:04:58,650 --> 00:05:02,190
piece<font color="#CCCCCC"> of</font><font color="#E5E5E5"> paper and store it at your</font>

124
00:05:00,420 --> 00:05:03,660
mother's house or store<font color="#E5E5E5"> half of it at</font>

125
00:05:02,190 --> 00:05:05,280
your mother's house and<font color="#E5E5E5"> half of</font><font color="#CCCCCC"> it at</font>

126
00:05:03,660 --> 00:05:07,320
your<font color="#E5E5E5"> grandmother's house and that way</font>

127
00:05:05,280 --> 00:05:09,530
<font color="#E5E5E5">somebody would</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to go</font><font color="#CCCCCC"> into both</font>

128
00:05:07,320 --> 00:05:14,280
houses simultaneously to get your words

129
00:05:09,530 --> 00:05:15,840
<font color="#CCCCCC">so</font><font color="#E5E5E5"> yeah so what's a hardware wallet so</font>

130
00:05:14,280 --> 00:05:17,219
we<font color="#E5E5E5"> just talked about</font><font color="#CCCCCC"> what's a wallet</font><font color="#E5E5E5"> so</font>

131
00:05:15,840 --> 00:05:20,039
why do<font color="#CCCCCC"> you</font><font color="#E5E5E5"> even need a hardware wallet</font>

132
00:05:17,220 --> 00:05:22,140
well the problem is of course<font color="#E5E5E5"> computers</font>

133
00:05:20,040 --> 00:05:23,670
can get backdoored<font color="#CCCCCC"> have malware running</font>

134
00:05:22,140 --> 00:05:25,620
on them and this<font color="#E5E5E5"> is what you want to</font>

135
00:05:23,670 --> 00:05:27,450
<font color="#E5E5E5">prevent against how do you do this you</font>

136
00:05:25,620 --> 00:05:29,880
<font color="#CCCCCC">have a security</font><font color="#E5E5E5"> device you store your</font>

137
00:05:27,450 --> 00:05:31,950
seeds externally<font color="#E5E5E5"> usually this is a USB</font>

138
00:05:29,880 --> 00:05:34,469
<font color="#E5E5E5">connected device that you store your</font>

139
00:05:31,950 --> 00:05:36,960
your crypto on and so you<font color="#E5E5E5"> can trust this</font>

140
00:05:34,470 --> 00:05:39,090
even if<font color="#E5E5E5"> you can't trust your computer</font><font color="#CCCCCC"> is</font>

141
00:05:36,960 --> 00:05:41,310
the idea<font color="#E5E5E5"> so what happens is the computer</font>

142
00:05:39,090 --> 00:05:42,929
sends the transaction to the device<font color="#E5E5E5"> the</font>

143
00:05:41,310 --> 00:05:45,120
<font color="#CCCCCC">device gets the transaction it can</font>

144
00:05:42,930 --> 00:05:46,740
<font color="#CCCCCC">actually confirm or deny the transaction</font>

145
00:05:45,120 --> 00:05:48,210
it also displays<font color="#CCCCCC"> the transaction</font><font color="#E5E5E5"> so</font>

146
00:05:46,740 --> 00:05:50,310
before you do any cryptographic signing

147
00:05:48,210 --> 00:05:52,229
<font color="#E5E5E5">you can see is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> actually what I was</font>

148
00:05:50,310 --> 00:05:54,810
doing or was my computer<font color="#CCCCCC"> owned and is it</font>

149
00:05:52,230 --> 00:05:58,410
initiating the transaction<font color="#E5E5E5"> for me so you</font>

150
00:05:54,810 --> 00:06:00,030
sign the transaction<font color="#CCCCCC"> and yet</font><font color="#E5E5E5"> also yeah</font>

151
00:05:58,410 --> 00:06:01,860
the seed never leaves the transaction

152
00:06:00,030 --> 00:06:03,690
but the<font color="#E5E5E5"> hardware science a transaction</font>

153
00:06:01,860 --> 00:06:05,400
for you you send it back<font color="#CCCCCC"> to the computer</font>

154
00:06:03,690 --> 00:06:08,730
<font color="#E5E5E5">and the computer</font><font color="#CCCCCC"> can actually</font><font color="#E5E5E5"> take</font><font color="#CCCCCC"> that</font>

155
00:06:05,400 --> 00:06:11,820
<font color="#E5E5E5">and send it</font><font color="#CCCCCC"> to the</font><font color="#E5E5E5"> Internet okay so</font>

156
00:06:08,730 --> 00:06:13,950
that's the quick rundown of how crypto

157
00:06:11,820 --> 00:06:15,060
or sorry how<font color="#E5E5E5"> Hardware wallets work so</font>

158
00:06:13,950 --> 00:06:17,039
the first thing<font color="#CCCCCC"> that we looked at was</font>

159
00:06:15,060 --> 00:06:26,160
supply chain attacks<font color="#E5E5E5"> which is where Josh</font>

160
00:06:17,040 --> 00:06:27,570
<font color="#CCCCCC">is gonna pick up you have a Mike things</font>

161
00:06:26,160 --> 00:06:29,130
<font color="#E5E5E5">I want to leave you with as we go</font>

162
00:06:27,570 --> 00:06:31,479
<font color="#E5E5E5">through the supply chain attacks</font><font color="#CCCCCC"> our</font>

163
00:06:29,130 --> 00:06:33,460
stickers are<font color="#E5E5E5"> for laptops</font><font color="#CCCCCC"> there</font>

164
00:06:31,479 --> 00:06:36,370
for security<font color="#CCCCCC"> so we're gonna be talking</font>

165
00:06:33,460 --> 00:06:38,049
<font color="#CCCCCC">about stickers today</font><font color="#E5E5E5"> they're there for</font>

166
00:06:36,370 --> 00:06:41,289
laptop decorations<font color="#E5E5E5"> they're not for</font>

167
00:06:38,050 --> 00:06:42,669
security<font color="#CCCCCC"> supply chain tags</font><font color="#E5E5E5"> are easy to</font>

168
00:06:41,289 --> 00:06:45,099
perform<font color="#CCCCCC"> but they're quite hard to</font>

169
00:06:42,669 --> 00:06:47,109
<font color="#E5E5E5">perform at scale and the last takeaway</font>

170
00:06:45,099 --> 00:06:48,639
<font color="#CCCCCC">that I hope you leave you with is that</font>

171
00:06:47,110 --> 00:06:50,949
<font color="#E5E5E5">the vendors threat model may</font><font color="#CCCCCC"> not</font>

172
00:06:48,639 --> 00:06:53,379
actually be<font color="#E5E5E5"> your threat model</font><font color="#CCCCCC"> so</font>

173
00:06:50,949 --> 00:06:55,059
security<font color="#E5E5E5"> stickers so some of the wallet</font>

174
00:06:53,379 --> 00:06:57,129
vendors are using them I have seen them

175
00:06:55,059 --> 00:07:00,009
on other products<font color="#CCCCCC"> they seem to be quite</font>

176
00:06:57,129 --> 00:07:01,960
popular<font color="#E5E5E5"> I have a friend</font><font color="#CCCCCC"> and colleague</font>

177
00:07:00,009 --> 00:07:04,539
<font color="#E5E5E5">named Joe Fitzpatrick he also</font><font color="#CCCCCC"> likes</font>

178
00:07:01,960 --> 00:07:06,609
<font color="#E5E5E5">stickers so the the stickers that he</font>

179
00:07:04,539 --> 00:07:08,229
makes are<font color="#CCCCCC"> the same as we'd find on a</font>

180
00:07:06,610 --> 00:07:10,990
security<font color="#CCCCCC"> product they have Holograms</font>

181
00:07:08,229 --> 00:07:12,938
<font color="#CCCCCC">they have unique</font><font color="#E5E5E5"> serial numbers and they</font>

182
00:07:10,990 --> 00:07:15,849
<font color="#E5E5E5">leave you with that nice warm fuzzy</font>

183
00:07:12,939 --> 00:07:19,139
security feeling and so Joe makes some

184
00:07:15,849 --> 00:07:21,039
funny ones<font color="#CCCCCC"> you can get a FIPS 140-2</font>

185
00:07:19,139 --> 00:07:22,749
<font color="#CCCCCC">proof stickers you don't have to pay all</font>

186
00:07:21,039 --> 00:07:23,318
<font color="#E5E5E5">the money for the FIPS one just get the</font>

187
00:07:22,749 --> 00:07:27,159
<font color="#CCCCCC">Fitz one</font>

188
00:07:23,319 --> 00:07:28,749
so the first device<font color="#CCCCCC"> that I looked at</font><font color="#E5E5E5"> was</font>

189
00:07:27,159 --> 00:07:31,930
the<font color="#E5E5E5"> Tresser one and so the treasurer one</font>

190
00:07:28,749 --> 00:07:34,839
actually has two levels of<font color="#E5E5E5"> protection on</font>

191
00:07:31,930 --> 00:07:38,139
the packaging there's the hologram

192
00:07:34,839 --> 00:07:41,589
sticker then the actual<font color="#E5E5E5"> box is enclosed</font>

193
00:07:38,139 --> 00:07:42,729
with a with a<font color="#CCCCCC"> Mickey civ so it's</font>

194
00:07:41,589 --> 00:07:44,620
supposed to be<font color="#E5E5E5"> that you actually have to</font>

195
00:07:42,729 --> 00:07:46,539
<font color="#E5E5E5">rip open the box to get into it but if</font>

196
00:07:44,620 --> 00:07:48,370
you use a<font color="#CCCCCC"> hot-air gun or a hairdryer</font>

197
00:07:46,539 --> 00:07:50,770
it's actually quite easy<font color="#CCCCCC"> to remove and</font>

198
00:07:48,370 --> 00:07:52,349
so if you see<font color="#E5E5E5"> on the left there that's</font>

199
00:07:50,770 --> 00:07:55,120
the<font color="#E5E5E5"> original package and on the right</font>

200
00:07:52,349 --> 00:07:57,580
<font color="#CCCCCC">this is a box that</font><font color="#E5E5E5"> I opened and put</font>

201
00:07:55,120 --> 00:07:59,439
everything back into and if you look

202
00:07:57,580 --> 00:08:01,060
closely there<font color="#CCCCCC"> is a little bit of gap</font>

203
00:07:59,439 --> 00:08:02,800
there the sticker<font color="#E5E5E5"> has a little bit of</font>

204
00:08:01,060 --> 00:08:05,259
great but this was a first<font color="#E5E5E5"> try and it's</font>

205
00:08:02,800 --> 00:08:08,020
pretty<font color="#E5E5E5"> close so trust me taking a</font>

206
00:08:05,259 --> 00:08:09,550
sticker off is not<font color="#E5E5E5"> very hard now if you</font>

207
00:08:08,020 --> 00:08:11,469
remember<font color="#E5E5E5"> this picture of the stickers</font>

208
00:08:09,550 --> 00:08:13,539
we're going to come<font color="#E5E5E5"> back to it so but</font>

209
00:08:11,469 --> 00:08:15,279
<font color="#E5E5E5">for the vendor is this is actually</font><font color="#CCCCCC"> a</font>

210
00:08:13,539 --> 00:08:17,560
real problem<font color="#CCCCCC"> so treszura did put a blog</font>

211
00:08:15,279 --> 00:08:18,580
post out that one<font color="#E5E5E5"> of the challenges</font><font color="#CCCCCC"> they</font>

212
00:08:17,560 --> 00:08:20,889
face<font color="#E5E5E5"> is that</font><font color="#CCCCCC"> they're facing</font>

213
00:08:18,580 --> 00:08:22,539
counterfeiting<font color="#E5E5E5"> of their devices</font><font color="#CCCCCC"> so this</font>

214
00:08:20,889 --> 00:08:23,830
is from their<font color="#E5E5E5"> blog posts</font><font color="#CCCCCC"> they say hey</font>

215
00:08:22,539 --> 00:08:25,959
you know we've noticed that<font color="#E5E5E5"> there's</font>

216
00:08:23,830 --> 00:08:27,639
counterfeit devices<font color="#E5E5E5"> you have</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> look at</font>

217
00:08:25,959 --> 00:08:30,039
the stickers<font color="#CCCCCC"> to see that they're legit</font>

218
00:08:27,639 --> 00:08:32,019
<font color="#E5E5E5">so I said remember</font><font color="#CCCCCC"> a look at that</font>

219
00:08:30,039 --> 00:08:32,559
sticker so I bought<font color="#E5E5E5"> that case I bought a</font>

220
00:08:32,019 --> 00:08:34,419
year and

221
00:08:32,559 --> 00:08:36,279
<font color="#CCCCCC">though for my previous stuff Conn</font><font color="#E5E5E5"> talk</font>

222
00:08:34,419 --> 00:08:38,740
<font color="#E5E5E5">and it's the same sticker that they're</font>

223
00:08:36,279 --> 00:08:40,330
saying<font color="#E5E5E5"> is speak here so I've been on</font>

224
00:08:38,740 --> 00:08:41,590
their wiki<font color="#E5E5E5"> it's very confusing because</font>

225
00:08:40,330 --> 00:08:43,510
<font color="#E5E5E5">there's three sets of</font><font color="#CCCCCC"> stickers so</font>

226
00:08:41,590 --> 00:08:45,580
basically yeah stickers<font color="#E5E5E5"> are very</font>

227
00:08:43,510 --> 00:08:48,160
confusing<font color="#E5E5E5"> they cause</font><font color="#CCCCCC"> problems for end</font>

228
00:08:45,580 --> 00:08:50,560
users<font color="#E5E5E5"> and I was not even</font><font color="#CCCCCC"> sure if I</font>

229
00:08:48,160 --> 00:08:53,860
bought a<font color="#E5E5E5"> real</font><font color="#CCCCCC"> transer</font><font color="#E5E5E5"> right clone one so</font>

230
00:08:50,560 --> 00:08:56,430
this morning I got out<font color="#CCCCCC"> a new case and</font>

231
00:08:53,860 --> 00:08:58,839
<font color="#E5E5E5">just to make sure</font><font color="#CCCCCC"> I took</font><font color="#E5E5E5"> off the sticker</font>

232
00:08:56,430 --> 00:09:00,750
using very<font color="#E5E5E5"> sophisticated of equipment</font>

233
00:08:58,839 --> 00:09:02,920
including<font color="#CCCCCC"> a very expensive</font><font color="#E5E5E5"> Dyson</font>

234
00:09:00,750 --> 00:09:05,470
<font color="#E5E5E5">hairdryer that</font><font color="#CCCCCC"> was included in the</font><font color="#E5E5E5"> air</font>

235
00:09:02,920 --> 00:09:08,229
<font color="#E5E5E5">B&B and I was able to remove the sticker</font>

236
00:09:05,470 --> 00:09:11,560
<font color="#E5E5E5">so it comes off without any zero</font>

237
00:09:08,230 --> 00:09:13,660
<font color="#E5E5E5">resident out with zero residue so yes</font>

238
00:09:11,560 --> 00:09:15,579
stickers do not provide<font color="#E5E5E5"> any security on</font>

239
00:09:13,660 --> 00:09:17,439
the treasure<font color="#CCCCCC"> T they switched</font><font color="#E5E5E5"> it from the</font>

240
00:09:15,580 --> 00:09:19,720
box<font color="#E5E5E5"> and now the Box can be open</font><font color="#CCCCCC"> easily</font>

241
00:09:17,440 --> 00:09:22,839
<font color="#E5E5E5">but now there's a sticker on the</font><font color="#CCCCCC"> USBC</font>

242
00:09:19,720 --> 00:09:24,700
<font color="#CCCCCC">port</font><font color="#E5E5E5"> again</font><font color="#CCCCCC"> as you would expect</font><font color="#E5E5E5"> you use</font>

243
00:09:22,839 --> 00:09:27,610
hot<font color="#E5E5E5"> air and you can</font><font color="#CCCCCC"> easily</font><font color="#E5E5E5"> remove</font><font color="#CCCCCC"> it</font>

244
00:09:24,700 --> 00:09:30,010
protip<font color="#E5E5E5"> don't set the hot air rework that</font>

245
00:09:27,610 --> 00:09:32,170
high<font color="#CCCCCC"> i had a set for lead-free reworking</font>

246
00:09:30,010 --> 00:09:33,700
<font color="#E5E5E5">and i actually melted the enclosure so</font>

247
00:09:32,170 --> 00:09:36,189
if you're going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> this kind of</font>

248
00:09:33,700 --> 00:09:37,900
supply team attack<font color="#CCCCCC"> maybe you know set</font>

249
00:09:36,190 --> 00:09:39,750
the<font color="#CCCCCC"> heat a little lower but if you just</font>

250
00:09:37,900 --> 00:09:44,380
google how to remove stickers the same

251
00:09:39,750 --> 00:09:46,240
attack methods work<font color="#E5E5E5"> so so this causes a</font>

252
00:09:44,380 --> 00:09:49,450
bit of<font color="#CCCCCC"> confusion because the</font><font color="#E5E5E5"> ledger</font>

253
00:09:46,240 --> 00:09:52,150
device has a very I will say

254
00:09:49,450 --> 00:09:53,589
<font color="#CCCCCC">in-your-face piece of paper when you</font>

255
00:09:52,150 --> 00:09:57,189
open the box that says there are no

256
00:09:53,589 --> 00:10:00,339
stickers in this box<font color="#E5E5E5"> however I combed</font>

257
00:09:57,190 --> 00:10:02,530
through<font color="#E5E5E5"> about</font><font color="#CCCCCC"> 250 one-star amazon</font>

258
00:10:00,339 --> 00:10:04,900
reviews and a lot<font color="#CCCCCC"> of them have to do</font>

259
00:10:02,530 --> 00:10:07,480
with confusion about the<font color="#E5E5E5"> stickers so</font>

260
00:10:04,900 --> 00:10:09,310
some of them are<font color="#E5E5E5"> actually quite funny</font><font color="#CCCCCC"> so</font>

261
00:10:07,480 --> 00:10:11,110
this is was this one started out note<font color="#E5E5E5"> to</font>

262
00:10:09,310 --> 00:10:13,150
wallet<font color="#CCCCCC"> hacker so I was</font><font color="#E5E5E5"> really into this</font>

263
00:10:11,110 --> 00:10:16,089
so it's<font color="#E5E5E5"> like okay I pro tip what's this</font>

264
00:10:13,150 --> 00:10:17,410
guy have to say<font color="#E5E5E5"> and basically he was</font>

265
00:10:16,089 --> 00:10:18,820
complaining<font color="#CCCCCC"> that there's fingerprints</font><font color="#E5E5E5"> on</font>

266
00:10:17,410 --> 00:10:21,900
the device so that's<font color="#E5E5E5"> how he knew that</font>

267
00:10:18,820 --> 00:10:24,160
was hacked<font color="#CCCCCC"> another one complained that</font>

268
00:10:21,900 --> 00:10:26,140
the fingerprints were on<font color="#E5E5E5"> the wallet</font><font color="#CCCCCC"> end</font>

269
00:10:24,160 --> 00:10:27,850
was a hair underneath<font color="#E5E5E5"> so if you're doing</font>

270
00:10:26,140 --> 00:10:30,400
<font color="#E5E5E5">supply chain attacks be sure to remove</font>

271
00:10:27,850 --> 00:10:32,800
<font color="#E5E5E5">any evidence of via fingerprints or her</font>

272
00:10:30,400 --> 00:10:35,470
hair so anyway stickers don't work

273
00:10:32,800 --> 00:10:37,120
<font color="#E5E5E5">that's all I want to say about that once</font>

274
00:10:35,470 --> 00:10:38,620
you get through<font color="#E5E5E5"> this enclosure though</font>

275
00:10:37,120 --> 00:10:40,780
you then have<font color="#CCCCCC"> to have the challenge of</font>

276
00:10:38,620 --> 00:10:42,030
<font color="#CCCCCC">actually opening the</font><font color="#E5E5E5"> enclosure</font><font color="#CCCCCC"> these are</font>

277
00:10:40,780 --> 00:10:43,800
three different wallet devices

278
00:10:42,030 --> 00:10:45,870
<font color="#E5E5E5">leisure</font><font color="#CCCCCC"> nano</font><font color="#E5E5E5"> on the left the</font><font color="#CCCCCC"> Kaiser</font><font color="#E5E5E5"> one</font>

279
00:10:43,800 --> 00:10:47,729
and the<font color="#E5E5E5"> treasure T on the bottom</font>

280
00:10:45,870 --> 00:10:50,820
all of which actually opened pretty

281
00:10:47,730 --> 00:10:52,440
easily so<font color="#CCCCCC"> the treasure one</font><font color="#E5E5E5"> even so this</font>

282
00:10:50,820 --> 00:10:54,780
I'm<font color="#E5E5E5"> still not sure</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> the counter</font>

283
00:10:52,440 --> 00:10:56,250
to the real one but I get on the on the

284
00:10:54,780 --> 00:10:58,170
real one today I was able<font color="#E5E5E5"> to pop open</font>

285
00:10:56,250 --> 00:10:59,790
the enclosure so it is ultrasonically

286
00:10:58,170 --> 00:11:02,040
welded but you can pry it in there and

287
00:10:59,790 --> 00:11:05,099
<font color="#E5E5E5">open it the ledger</font><font color="#CCCCCC"> nano</font><font color="#E5E5E5"> opens very</font>

288
00:11:02,040 --> 00:11:06,599
<font color="#E5E5E5">easily like without any equipment but</font>

289
00:11:05,100 --> 00:11:08,610
once you do this you know<font color="#E5E5E5"> what do you do</font>

290
00:11:06,600 --> 00:11:11,250
once it's opened<font color="#CCCCCC"> so the attack basically</font>

291
00:11:08,610 --> 00:11:12,450
<font color="#E5E5E5">is you take the microcontroller and you</font>

292
00:11:11,250 --> 00:11:13,770
<font color="#E5E5E5">rework it so you've removed the</font>

293
00:11:12,450 --> 00:11:15,240
microcontroller from the printed circuit

294
00:11:13,770 --> 00:11:17,100
board<font color="#CCCCCC"> and you put on a</font><font color="#E5E5E5"> new one that you</font>

295
00:11:15,240 --> 00:11:18,780
bought<font color="#E5E5E5"> from a distributor</font><font color="#CCCCCC"> once you've</font>

296
00:11:17,100 --> 00:11:20,940
done that on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> treasurer devices you</font>

297
00:11:18,780 --> 00:11:23,939
can put your compromised bootloader on

298
00:11:20,940 --> 00:11:25,380
<font color="#E5E5E5">there so this is I did not go as</font><font color="#CCCCCC"> far to</font>

299
00:11:23,940 --> 00:11:26,490
<font color="#E5E5E5">make the compromise</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> loader but I did</font>

300
00:11:25,380 --> 00:11:28,380
confirm<font color="#E5E5E5"> that once I switch the</font>

301
00:11:26,490 --> 00:11:31,320
microcontroller<font color="#CCCCCC"> I can connect with a</font>

302
00:11:28,380 --> 00:11:33,390
debugger<font color="#E5E5E5"> over a</font><font color="#CCCCCC"> swd and I have free</font>

303
00:11:31,320 --> 00:11:35,130
access to<font color="#E5E5E5"> the chip so some</font><font color="#CCCCCC"> of the parts</font>

304
00:11:33,390 --> 00:11:38,730
got blown off<font color="#E5E5E5"> when I was we working but</font>

305
00:11:35,130 --> 00:11:40,439
the<font color="#E5E5E5"> SDM runs fine so yeah so you just</font>

306
00:11:38,730 --> 00:11:43,380
<font color="#E5E5E5">rework</font><font color="#CCCCCC"> free flash and then you put</font>

307
00:11:40,440 --> 00:11:45,690
everything back together so next I want

308
00:11:43,380 --> 00:11:47,280
to<font color="#E5E5E5"> talk about Hardware implants so well</font>

309
00:11:45,690 --> 00:11:49,200
you may remember the<font color="#CCCCCC"> story that</font><font color="#E5E5E5"> came out</font>

310
00:11:47,280 --> 00:11:51,000
there was<font color="#E5E5E5"> this big fight Bloomberg about</font>

311
00:11:49,200 --> 00:11:52,620
<font color="#E5E5E5">Hardware implants I want to make a</font>

312
00:11:51,000 --> 00:11:55,290
hardware implant<font color="#E5E5E5"> I also want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have a</font>

313
00:11:52,620 --> 00:11:57,510
little<font color="#CCCCCC"> bit of fun</font><font color="#E5E5E5"> with this so we are in</font>

314
00:11:55,290 --> 00:11:59,219
honor of the<font color="#E5E5E5"> Bloomberg story</font><font color="#CCCCCC"> we just</font>

315
00:11:57,510 --> 00:12:01,200
have some<font color="#CCCCCC"> you know may have</font><font color="#E5E5E5"> some issues</font>

316
00:11:59,220 --> 00:12:03,930
with<font color="#CCCCCC"> it I</font><font color="#E5E5E5"> were about to talk</font><font color="#CCCCCC"> about the</font>

317
00:12:01,200 --> 00:12:06,990
Bloomberg allure<font color="#E5E5E5"> which is a Super Micro</font>

318
00:12:03,930 --> 00:12:09,030
fun<font color="#CCCCCC"> impact</font><font color="#E5E5E5"> so the goals for this implant</font>

319
00:12:06,990 --> 00:12:10,500
is I wanted this implant to happen after

320
00:12:09,030 --> 00:12:12,810
receipt so it's both a supply chain

321
00:12:10,500 --> 00:12:14,580
attack and a physical<font color="#CCCCCC"> one</font><font color="#E5E5E5"> like a red</font>

322
00:12:12,810 --> 00:12:16,109
team can perform<font color="#E5E5E5"> this a malicious</font>

323
00:12:14,580 --> 00:12:19,560
insider could also<font color="#E5E5E5"> perform this attack</font>

324
00:12:16,110 --> 00:12:21,270
<font color="#E5E5E5">zero for wear because more fun</font><font color="#CCCCCC"> it has</font>

325
00:12:19,560 --> 00:12:23,489
<font color="#CCCCCC">the fit</font><font color="#E5E5E5"> inside of a hardware wallet so</font>

326
00:12:21,270 --> 00:12:25,260
it has to be small it has<font color="#E5E5E5"> to also bypass</font>

327
00:12:23,490 --> 00:12:27,330
a<font color="#CCCCCC"> for</font><font color="#E5E5E5"> security function</font><font color="#CCCCCC"> otherwise it's</font>

328
00:12:25,260 --> 00:12:29,340
not<font color="#CCCCCC"> in the plan</font><font color="#E5E5E5"> very few components I</font>

329
00:12:27,330 --> 00:12:31,740
<font color="#E5E5E5">what I have a thousand of them with me</font>

330
00:12:29,340 --> 00:12:33,780
so I wanted to<font color="#E5E5E5"> be able to for the makers</font>

331
00:12:31,740 --> 00:12:37,140
and<font color="#CCCCCC"> the DIY RS that participate in the</font>

332
00:12:33,780 --> 00:12:38,760
hardware implant<font color="#CCCCCC"> fund so what kind of</font>

333
00:12:37,140 --> 00:12:40,740
implant did I end up<font color="#CCCCCC"> with</font><font color="#E5E5E5"> well I decided</font>

334
00:12:38,760 --> 00:12:43,319
to do it basically<font color="#E5E5E5"> an RF triggered</font>

335
00:12:40,740 --> 00:12:45,360
switch<font color="#CCCCCC"> and so the idea is</font>

336
00:12:43,320 --> 00:12:47,280
on these devices<font color="#CCCCCC"> there's a</font><font color="#E5E5E5"> button and</font>

337
00:12:45,360 --> 00:12:49,710
the button is the last line of<font color="#E5E5E5"> defense</font>

338
00:12:47,280 --> 00:12:51,270
<font color="#CCCCCC">so all the vendors assume that the host</font>

339
00:12:49,710 --> 00:12:52,470
is going<font color="#E5E5E5"> to be compromised</font><font color="#CCCCCC"> they just</font>

340
00:12:51,270 --> 00:12:54,960
assume that's<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to be easy because</font>

341
00:12:52,470 --> 00:12:57,030
that software and so once<font color="#E5E5E5"> you have a</font>

342
00:12:54,960 --> 00:12:59,190
<font color="#E5E5E5">compromised</font><font color="#CCCCCC"> host</font><font color="#E5E5E5"> you have to send it</font><font color="#CCCCCC"> to</font>

343
00:12:57,030 --> 00:13:00,030
the<font color="#E5E5E5"> device and then</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> human so humans</font>

344
00:12:59,190 --> 00:13:02,160
are<font color="#E5E5E5"> still needed</font>

345
00:13:00,030 --> 00:13:04,050
humans have to<font color="#E5E5E5"> look at it and say is</font>

346
00:13:02,160 --> 00:13:06,000
this the<font color="#E5E5E5"> right transaction or not they</font>

347
00:13:04,050 --> 00:13:08,880
have to<font color="#E5E5E5"> say yes or no so now with this</font>

348
00:13:06,000 --> 00:13:10,830
implant I can<font color="#E5E5E5"> through RF I can trigger</font>

349
00:13:08,880 --> 00:13:12,450
the yes button<font color="#E5E5E5"> so a human is not</font>

350
00:13:10,830 --> 00:13:14,430
<font color="#E5E5E5">required to send transactions I can</font>

351
00:13:12,450 --> 00:13:16,200
remotely<font color="#E5E5E5"> trigger</font><font color="#CCCCCC"> it basically</font><font color="#E5E5E5"> the RF</font>

352
00:13:14,430 --> 00:13:17,729
comes in through the antenna<font color="#E5E5E5"> it goes</font>

353
00:13:16,200 --> 00:13:19,440
through a<font color="#E5E5E5"> single transistor which is</font><font color="#CCCCCC"> the</font>

354
00:13:17,730 --> 00:13:22,140
main component<font color="#E5E5E5"> and it pulls the button</font>

355
00:13:19,440 --> 00:13:23,850
<font color="#E5E5E5">load and I'm sorry to say</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Bill</font>

356
00:13:22,140 --> 00:13:26,730
<font color="#CCCCCC">of Materials is quite expensive</font><font color="#E5E5E5"> at three</font>

357
00:13:23,850 --> 00:13:28,200
dollars<font color="#CCCCCC"> and sixteen cents</font><font color="#E5E5E5"> two dollars</font>

358
00:13:26,730 --> 00:13:31,140
and 61 cents of<font color="#CCCCCC"> that is this</font>

359
00:13:28,200 --> 00:13:33,990
potentiometer<font color="#E5E5E5"> I had to use so it's a</font>

360
00:13:31,140 --> 00:13:35,880
little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> expensive I'm sorry also why</font>

361
00:13:33,990 --> 00:13:37,470
is this so big<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> this is an</font>

362
00:13:35,880 --> 00:13:39,990
American time I can fit<font color="#E5E5E5"> two on them</font>

363
00:13:37,470 --> 00:13:42,630
<font color="#E5E5E5">what's the deal why is it so big well I</font>

364
00:13:39,990 --> 00:13:44,520
<font color="#E5E5E5">opt amaizing it for hand assembly so it</font>

365
00:13:42,630 --> 00:13:46,260
would be more<font color="#CCCCCC"> fun to use but you</font>

366
00:13:44,520 --> 00:13:48,210
<font color="#E5E5E5">basically put the antenna in and then</font>

367
00:13:46,260 --> 00:13:50,310
there's an out button and whatever

368
00:13:48,210 --> 00:13:52,440
<font color="#E5E5E5">thousand with me</font><font color="#CCCCCC"> so just</font><font color="#E5E5E5"> for scale this</font>

369
00:13:50,310 --> 00:13:54,689
<font color="#E5E5E5">is how it fits on the alleged</font><font color="#CCCCCC"> nano</font><font color="#E5E5E5"> this</font>

370
00:13:52,440 --> 00:13:56,850
is how it fits on<font color="#E5E5E5"> the Tresser it is also</font>

371
00:13:54,690 --> 00:13:58,740
because breadboard friendly is<font color="#CCCCCC"> the thing</font>

372
00:13:56,850 --> 00:14:02,160
<font color="#E5E5E5">so</font><font color="#CCCCCC"> we've made it breadboard friendly so</font>

373
00:13:58,740 --> 00:14:03,840
you<font color="#E5E5E5"> can also play along very easily so</font>

374
00:14:02,160 --> 00:14:05,280
then the last challenge<font color="#E5E5E5"> with an RF</font>

375
00:14:03,840 --> 00:14:07,050
implant is how do you design an antenna

376
00:14:05,280 --> 00:14:08,880
<font color="#CCCCCC">to fit in there</font><font color="#E5E5E5"> and so the big thing</font>

377
00:14:07,050 --> 00:14:10,979
<font color="#E5E5E5">there with an SMA connector is the first</font>

378
00:14:08,880 --> 00:14:13,350
prototype I did experimented with a few

379
00:14:10,980 --> 00:14:15,870
antenna designs but<font color="#E5E5E5"> remember it all has</font>

380
00:14:13,350 --> 00:14:17,280
<font color="#CCCCCC">to fit</font><font color="#E5E5E5"> inside</font><font color="#CCCCCC"> the legend</font><font color="#E5E5E5"> so that's</font>

381
00:14:15,870 --> 00:14:20,340
actually<font color="#E5E5E5"> quite</font><font color="#CCCCCC"> easy because the</font><font color="#E5E5E5"> ledger</font>

382
00:14:17,280 --> 00:14:23,760
<font color="#E5E5E5">manoa has plenty</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> room to</font><font color="#CCCCCC"> insert extra</font>

383
00:14:20,340 --> 00:14:26,490
circuitry<font color="#CCCCCC"> and so it quite</font><font color="#E5E5E5"> fits easily in</font>

384
00:14:23,760 --> 00:14:28,050
the<font color="#E5E5E5"> legend</font><font color="#CCCCCC"> annamund and then</font><font color="#E5E5E5"> so I did</font>

385
00:14:26,490 --> 00:14:30,180
the implant<font color="#E5E5E5"> and then I started to go</font>

386
00:14:28,050 --> 00:14:32,430
through<font color="#E5E5E5"> the wallet process I got to his</font>

387
00:14:30,180 --> 00:14:34,620
<font color="#E5E5E5">check that said</font><font color="#CCCCCC"> these might you know is</font>

388
00:14:32,430 --> 00:14:35,790
the ledger device genuine and here I

389
00:14:34,620 --> 00:14:37,830
actually got a<font color="#E5E5E5"> little bit</font><font color="#CCCCCC"> nervous</font>

390
00:14:35,790 --> 00:14:39,510
<font color="#E5E5E5">because it wasn't</font><font color="#CCCCCC"> working</font><font color="#E5E5E5"> and so it</font>

391
00:14:37,830 --> 00:14:40,830
<font color="#E5E5E5">wasn't working</font><font color="#CCCCCC"> I was</font><font color="#E5E5E5"> like how maybe that</font>

392
00:14:39,510 --> 00:14:42,360
maybe<font color="#E5E5E5"> they're checking this you know how</font>

393
00:14:40,830 --> 00:14:44,460
how<font color="#CCCCCC"> did they detect it</font>

394
00:14:42,360 --> 00:14:46,590
don't worry<font color="#E5E5E5"> it was only Linux so it just</font>

395
00:14:44,460 --> 00:14:48,810
<font color="#E5E5E5">doesn't work on Linux so that was no</font>

396
00:14:46,590 --> 00:14:50,910
problem<font color="#E5E5E5"> I didn't this on Windows and no</font>

397
00:14:48,810 --> 00:14:53,459
problems<font color="#CCCCCC"> device</font><font color="#E5E5E5"> is genuine I was able</font><font color="#CCCCCC"> to</font>

398
00:14:50,910 --> 00:14:55,469
move on so the thing is<font color="#E5E5E5"> this is a very</font>

399
00:14:53,460 --> 00:14:58,290
crude receiver<font color="#E5E5E5"> but the attacker can</font>

400
00:14:55,470 --> 00:15:00,630
always use<font color="#CCCCCC"> more power so here I have</font>

401
00:14:58,290 --> 00:15:03,120
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> my antenna setup in the basement</font>

402
00:15:00,630 --> 00:15:05,100
and with a<font color="#E5E5E5"> 50 watt transmitter</font><font color="#CCCCCC"> I could</font>

403
00:15:03,120 --> 00:15:07,530
remotely<font color="#E5E5E5"> trigger the button at 11 meters</font>

404
00:15:05,100 --> 00:15:09,180
and at this point<font color="#E5E5E5"> I'm just limited</font><font color="#CCCCCC"> by my</font>

405
00:15:07,530 --> 00:15:10,740
basement size I'm pretty I'm very

406
00:15:09,180 --> 00:15:15,180
confident that<font color="#E5E5E5"> I'd be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to remotely</font>

407
00:15:10,740 --> 00:15:16,650
trigger this thing further yeah so here

408
00:15:15,180 --> 00:15:17,939
we're<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to see a demo of what</font><font color="#CCCCCC"> it</font>

409
00:15:16,650 --> 00:15:19,740
looks like and<font color="#E5E5E5"> so the other problem you</font>

410
00:15:17,940 --> 00:15:21,600
have with<font color="#E5E5E5"> Hardware implants is how do</font>

411
00:15:19,740 --> 00:15:23,850
<font color="#CCCCCC">you know you have the implanted device</font>

412
00:15:21,600 --> 00:15:25,770
<font color="#E5E5E5">so you have to label it some way</font><font color="#CCCCCC"> ledger</font>

413
00:15:23,850 --> 00:15:28,620
has this kind of<font color="#E5E5E5"> Latin phrase that</font>

414
00:15:25,770 --> 00:15:30,210
Scrolls<font color="#CCCCCC"> I wanted my own</font><font color="#E5E5E5"> Latin phrase</font><font color="#CCCCCC"> and</font>

415
00:15:28,620 --> 00:15:32,339
so this is how I know this is my

416
00:15:30,210 --> 00:15:34,080
implanted device<font color="#E5E5E5"> so what you're going</font><font color="#CCCCCC"> to</font>

417
00:15:32,339 --> 00:15:35,910
see is<font color="#CCCCCC"> that the</font><font color="#E5E5E5"> transaction screen</font><font color="#CCCCCC"> is</font>

418
00:15:34,080 --> 00:15:37,200
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> show up this</font><font color="#CCCCCC"> is and I'm and</font>

419
00:15:35,910 --> 00:15:38,699
basically<font color="#CCCCCC"> I'm going to</font><font color="#E5E5E5"> trigger this</font>

420
00:15:37,200 --> 00:15:40,620
<font color="#E5E5E5">remotely so I'm going to show the radio</font>

421
00:15:38,700 --> 00:15:44,270
come<font color="#E5E5E5"> in and then it's going to approve</font>

422
00:15:40,620 --> 00:15:47,280
the transaction<font color="#E5E5E5"> without any hands so</font>

423
00:15:44,270 --> 00:15:48,780
this is the transaction<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> the</font>

424
00:15:47,280 --> 00:15:51,150
screen<font color="#E5E5E5"> going this is the way you're</font>

425
00:15:48,780 --> 00:15:54,089
supposed<font color="#E5E5E5"> to verify there's the radio</font>

426
00:15:51,150 --> 00:15:55,260
coming at 443 megahertz<font color="#E5E5E5"> and then it's</font>

427
00:15:54,089 --> 00:15:59,430
going<font color="#E5E5E5"> to proceed to the next screen</font>

428
00:15:55,260 --> 00:16:01,530
without<font color="#E5E5E5"> me touching the button there you</font>

429
00:15:59,430 --> 00:16:03,479
go so this<font color="#E5E5E5"> is remotely triggered and</font>

430
00:16:01,530 --> 00:16:04,829
that would have sent<font color="#E5E5E5"> a transaction so if</font>

431
00:16:03,480 --> 00:16:06,900
you think<font color="#CCCCCC"> about</font><font color="#E5E5E5"> the context that you</font>

432
00:16:04,830 --> 00:16:08,700
have a malicious<font color="#E5E5E5"> software implant</font><font color="#CCCCCC"> that</font>

433
00:16:06,900 --> 00:16:11,189
sent it to a wrong address<font color="#CCCCCC"> the attacker</font>

434
00:16:08,700 --> 00:16:13,390
now can remotely accept that<font color="#E5E5E5"> and bypass</font>

435
00:16:11,190 --> 00:16:14,090
the<font color="#CCCCCC"> security</font><font color="#E5E5E5"> model</font>

436
00:16:13,390 --> 00:16:16,140
[Applause]

437
00:16:14,090 --> 00:16:16,390
[Music]

438
00:16:16,140 --> 00:16:17,680
[Applause]

439
00:16:16,390 --> 00:16:19,520
[Music]

440
00:16:17,680 --> 00:16:21,949
[Applause]

441
00:16:19,520 --> 00:16:24,199
<font color="#CCCCCC">oh yeah on the recaps securities are</font>

442
00:16:21,950 --> 00:16:26,480
first stickers are for laptops<font color="#E5E5E5"> not for</font>

443
00:16:24,200 --> 00:16:28,160
security<font color="#CCCCCC"> supply</font><font color="#E5E5E5"> chain packs are very</font>

444
00:16:26,480 --> 00:16:30,100
easy to<font color="#CCCCCC"> do</font><font color="#E5E5E5"> at a hardware level but</font>

445
00:16:28,160 --> 00:16:32,209
they're quite hard to do at scale<font color="#E5E5E5"> and</font>

446
00:16:30,100 --> 00:16:33,860
when the vendor says<font color="#E5E5E5"> that the device is</font>

447
00:16:32,210 --> 00:16:46,700
genuine that may mean different<font color="#CCCCCC"> things</font>

448
00:16:33,860 --> 00:16:49,130
<font color="#CCCCCC">so that's something that I found kind of</font>

449
00:16:46,700 --> 00:16:51,410
funny and it's almost correct<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> put</font>

450
00:16:49,130 --> 00:16:53,300
funny constants in<font color="#CCCCCC"> your code</font><font color="#E5E5E5"> they will</font>

451
00:16:51,410 --> 00:16:55,910
end up<font color="#E5E5E5"> on</font><font color="#CCCCCC"> DEFCON slides and they won't</font>

452
00:16:53,300 --> 00:16:57,589
<font color="#E5E5E5">be</font><font color="#CCCCCC"> laughing with you</font><font color="#E5E5E5"> small mistake they</font>

453
00:16:55,910 --> 00:17:02,300
won't end up at DEFCON there will be<font color="#E5E5E5"> at</font>

454
00:16:57,590 --> 00:17:04,430
CCC and so introducing the food<font color="#E5E5E5"> pipe</font>

455
00:17:02,300 --> 00:17:08,359
vulnerability it's a<font color="#E5E5E5"> bootloader</font>

456
00:17:04,430 --> 00:17:10,370
vulnerability<font color="#CCCCCC"> and the legend on OS we</font>

457
00:17:08,359 --> 00:17:11,929
did not come<font color="#CCCCCC"> up with this constant</font><font color="#E5E5E5"> it's</font>

458
00:17:10,369 --> 00:17:15,079
literally in the code as<font color="#E5E5E5"> well see</font><font color="#CCCCCC"> later</font>

459
00:17:11,930 --> 00:17:19,780
so the name was<font color="#CCCCCC"> not ours but we liked it</font>

460
00:17:15,079 --> 00:17:19,780
so we also bought the domain food baby

461
00:17:20,470 --> 00:17:25,670
<font color="#E5E5E5">The Legend on OS is a very simple wallet</font>

462
00:17:23,480 --> 00:17:28,190
it simply has a<font color="#E5E5E5"> small display it has</font><font color="#CCCCCC"> a</font>

463
00:17:25,670 --> 00:17:30,800
<font color="#E5E5E5">USB port and two buttons that's really</font>

464
00:17:28,190 --> 00:17:33,050
all there<font color="#CCCCCC"> is and if you take it</font><font color="#E5E5E5"> apart</font>

465
00:17:30,800 --> 00:17:36,680
you<font color="#E5E5E5"> see it's just some</font><font color="#CCCCCC"> pieces</font><font color="#E5E5E5"> of plastic</font>

466
00:17:33,050 --> 00:17:38,450
the display<font color="#E5E5E5"> and the PCB and looking at</font>

467
00:17:36,680 --> 00:17:41,420
the PCB it kind<font color="#CCCCCC"> of has an interesting</font>

468
00:17:38,450 --> 00:17:43,330
architecture where<font color="#CCCCCC"> you have an stm32</font>

469
00:17:41,420 --> 00:17:46,250
which<font color="#E5E5E5"> is just a general-purpose</font>

470
00:17:43,330 --> 00:17:48,230
microcontroller<font color="#E5E5E5"> and an SD 31 which is</font><font color="#CCCCCC"> a</font>

471
00:17:46,250 --> 00:17:50,960
secure element that is for example<font color="#CCCCCC"> used</font>

472
00:17:48,230 --> 00:17:55,100
in pay TV<font color="#E5E5E5"> and so on and is regarded</font><font color="#CCCCCC"> as a</font>

473
00:17:50,960 --> 00:17:57,080
<font color="#CCCCCC">very high security chip basically and if</font>

474
00:17:55,100 --> 00:17:58,310
<font color="#E5E5E5">you turn the PCB around you see that</font>

475
00:17:57,080 --> 00:18:01,580
they were nice enough<font color="#CCCCCC"> to leave</font><font color="#E5E5E5"> the</font>

476
00:17:58,310 --> 00:18:05,590
<font color="#E5E5E5">programming part for the stm32</font><font color="#CCCCCC"> opened to</font>

477
00:18:01,580 --> 00:18:08,770
us enabled

478
00:18:05,590 --> 00:18:13,449
and this has been suspected<font color="#CCCCCC"> by other</font>

479
00:18:08,770 --> 00:18:14,790
people we verified it<font color="#CCCCCC"> but you know you</font>

480
00:18:13,450 --> 00:18:17,590
have to go through it and<font color="#E5E5E5"> obviously</font>

481
00:18:14,790 --> 00:18:19,360
<font color="#CCCCCC">ledger is aware of</font><font color="#E5E5E5"> this and so let's</font>

482
00:18:17,590 --> 00:18:22,780
look<font color="#CCCCCC"> at the</font><font color="#E5E5E5"> security model that the</font>

483
00:18:19,360 --> 00:18:25,030
legend<font color="#E5E5E5"> on</font><font color="#CCCCCC"> OSS</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> basic idea is that if</font>

484
00:18:22,780 --> 00:18:28,210
<font color="#E5E5E5">we look at this device we we kind of</font>

485
00:18:25,030 --> 00:18:30,280
have this schematic of the stm32 being

486
00:18:28,210 --> 00:18:32,410
on the<font color="#E5E5E5"> left and the SC 31 on the right</font>

487
00:18:30,280 --> 00:18:35,350
and as<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> see all peripherals are</font>

488
00:18:32,410 --> 00:18:37,870
connected to the stm32<font color="#E5E5E5"> that is because</font>

489
00:18:35,350 --> 00:18:39,969
the<font color="#CCCCCC"> st 31 does not have enough pins to</font>

490
00:18:37,870 --> 00:18:42,820
connect peripherals<font color="#E5E5E5"> it literally only</font>

491
00:18:39,970 --> 00:18:45,240
has a one pin interface which is<font color="#E5E5E5"> for the</font>

492
00:18:42,820 --> 00:18:47,740
<font color="#CCCCCC">smart</font><font color="#E5E5E5"> card protocols basically and so</font>

493
00:18:45,240 --> 00:18:51,310
all the heavy<font color="#E5E5E5"> lifting is done by the</font>

494
00:18:47,740 --> 00:18:53,910
stm32 and<font color="#E5E5E5"> ledger splits this up</font><font color="#CCCCCC"> into the</font>

495
00:18:51,310 --> 00:18:57,070
<font color="#E5E5E5">unsecured part and the secure part and</font>

496
00:18:53,910 --> 00:18:58,960
the idea is that<font color="#CCCCCC"> the stm32 acts as a</font>

497
00:18:57,070 --> 00:19:00,730
proxy<font color="#E5E5E5"> so it's basically the hardware</font>

498
00:18:58,960 --> 00:19:02,860
driver for the button for<font color="#E5E5E5"> the display</font>

499
00:19:00,730 --> 00:19:05,950
for the USB similar to a<font color="#CCCCCC"> North Bridge in</font>

500
00:19:02,860 --> 00:19:07,990
your standard computer and when<font color="#E5E5E5"> you take</font>

501
00:19:05,950 --> 00:19:10,630
a<font color="#E5E5E5"> computer and want to make a</font>

502
00:19:07,990 --> 00:19:15,130
<font color="#CCCCCC">transaction you create your</font><font color="#E5E5E5"> transaction</font>

503
00:19:10,630 --> 00:19:18,370
on the computer<font color="#E5E5E5"> it goes through USB to</font>

504
00:19:15,130 --> 00:19:23,410
the stm32 and the stm32 then forwards it

505
00:19:18,370 --> 00:19:25,270
to the<font color="#CCCCCC"> St 31 the st 31 then says oh a</font>

506
00:19:23,410 --> 00:19:27,670
new transaction<font color="#CCCCCC"> I want to ask</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> user</font>

507
00:19:25,270 --> 00:19:30,190
to<font color="#E5E5E5"> confirm it so it sends a display</font>

508
00:19:27,670 --> 00:19:33,130
<font color="#E5E5E5">command to the stm32 which in turn</font>

509
00:19:30,190 --> 00:19:35,770
displays it on<font color="#E5E5E5"> the screen and then you</font>

510
00:19:33,130 --> 00:19:38,500
press<font color="#CCCCCC"> the yes button again</font><font color="#E5E5E5"> it goes the</font>

511
00:19:35,770 --> 00:19:40,629
<font color="#CCCCCC">same route to the St 31 which then</font>

512
00:19:38,500 --> 00:19:43,360
<font color="#E5E5E5">internally signs the transaction</font><font color="#CCCCCC"> so the</font>

513
00:19:40,630 --> 00:19:45,970
seat never leaves the device and our

514
00:19:43,360 --> 00:19:50,050
<font color="#E5E5E5">signed transaction goes back through</font><font color="#CCCCCC"> the</font>

515
00:19:45,970 --> 00:19:53,050
STM through<font color="#E5E5E5"> USB to the computer to us</font>

516
00:19:50,050 --> 00:19:55,899
<font color="#E5E5E5">this means if this chip is compromised</font>

517
00:19:53,050 --> 00:19:59,560
we can send malicious transactions to

518
00:19:55,900 --> 00:20:01,960
<font color="#CCCCCC">the</font><font color="#E5E5E5"> SD 31 and confirm them ourselves or</font>

519
00:19:59,560 --> 00:20:03,879
we can<font color="#CCCCCC"> even go and</font><font color="#E5E5E5"> show a different</font>

520
00:20:01,960 --> 00:20:07,120
transaction on the<font color="#E5E5E5"> screen then we're</font>

521
00:20:03,880 --> 00:20:08,530
<font color="#E5E5E5">actually sending to the SD 31 and</font><font color="#CCCCCC"> letter</font>

522
00:20:07,120 --> 00:20:11,530
is aware<font color="#CCCCCC"> of this and we'll talk about</font>

523
00:20:08,530 --> 00:20:13,570
<font color="#E5E5E5">how they try to mitigate this later but</font>

524
00:20:11,530 --> 00:20:16,030
first we have<font color="#E5E5E5"> to find an exploit because</font>

525
00:20:13,570 --> 00:20:17,059
while we do have debugging access to the

526
00:20:16,030 --> 00:20:19,219
chip

527
00:20:17,059 --> 00:20:22,399
hardware access<font color="#E5E5E5"> is sometimes kind of</font>

528
00:20:19,219 --> 00:20:25,009
buggy no<font color="#CCCCCC"> offense</font><font color="#E5E5E5"> so we we wanted to have</font>

529
00:20:22,399 --> 00:20:27,309
a software bug<font color="#E5E5E5"> and so we started reverse</font>

530
00:20:25,009 --> 00:20:32,269
engineering<font color="#E5E5E5"> the firmware</font><font color="#CCCCCC"> upgrade process</font>

531
00:20:27,309 --> 00:20:34,039
<font color="#E5E5E5">and when you look at the at the</font>

532
00:20:32,269 --> 00:20:36,409
<font color="#CCCCCC">bootloader the</font><font color="#E5E5E5"> bootloader for the letter</font>

533
00:20:34,039 --> 00:20:38,449
used to be<font color="#CCCCCC"> open-source and back then</font>

534
00:20:36,409 --> 00:20:40,039
they didn't<font color="#CCCCCC"> have any verification of the</font>

535
00:20:38,449 --> 00:20:41,929
firmware so if you you could basically

536
00:20:40,039 --> 00:20:44,149
boot the<font color="#CCCCCC"> device into</font><font color="#E5E5E5"> bootloader mode</font>

537
00:20:41,929 --> 00:20:46,999
<font color="#E5E5E5">flash whatever from where you want and</font>

538
00:20:44,149 --> 00:20:48,918
then it would run it<font color="#E5E5E5"> after someone</font>

539
00:20:46,999 --> 00:20:50,629
<font color="#CCCCCC">Salima in this case wrote about this</font>

540
00:20:48,919 --> 00:20:53,689
<font color="#CCCCCC">they changed it</font><font color="#E5E5E5"> and they changed it to</font>

541
00:20:50,629 --> 00:20:55,609
<font color="#CCCCCC">do some cryptographic measure and we</font>

542
00:20:53,689 --> 00:20:57,409
were too lazy to reverse engineer<font color="#CCCCCC"> that</font>

543
00:20:55,609 --> 00:20:59,989
cryptographic measure<font color="#E5E5E5"> because it's very</font>

544
00:20:57,409 --> 00:21:01,849
<font color="#E5E5E5">time consuming</font><font color="#CCCCCC"> very hard so we looked</font>

545
00:20:59,989 --> 00:21:03,529
<font color="#CCCCCC">more at the</font><font color="#E5E5E5"> part surrounding it and how</font>

546
00:21:01,849 --> 00:21:06,499
we can<font color="#CCCCCC"> maybe find a back in the</font>

547
00:21:03,529 --> 00:21:10,159
bootloader to break it and<font color="#E5E5E5"> it turns out</font>

548
00:21:06,499 --> 00:21:10,639
<font color="#E5E5E5">then when you when you when</font><font color="#CCCCCC"> you try to</font>

549
00:21:10,159 --> 00:21:12,619
<font color="#CCCCCC">opt</font>

550
00:21:10,639 --> 00:21:14,629
<font color="#CCCCCC">when you try to upgrade</font><font color="#E5E5E5"> your letter</font><font color="#CCCCCC"> you</font>

551
00:21:12,619 --> 00:21:16,579
it accepts<font color="#CCCCCC"> four different</font><font color="#E5E5E5"> commands one</font>

552
00:21:14,629 --> 00:21:19,218
is select segment<font color="#E5E5E5"> which allows you to</font>

553
00:21:16,579 --> 00:21:21,678
<font color="#E5E5E5">select</font><font color="#CCCCCC"> the address</font><font color="#E5E5E5"> space at which your</font>

554
00:21:19,219 --> 00:21:23,269
firmware<font color="#E5E5E5"> will be flashed one is the load</font>

555
00:21:21,679 --> 00:21:26,599
command<font color="#E5E5E5"> which</font><font color="#CCCCCC"> allows you to write data</font>

556
00:21:23,269 --> 00:21:28,549
to<font color="#E5E5E5"> flash</font><font color="#CCCCCC"> then you have the flash</font><font color="#E5E5E5"> command</font>

557
00:21:26,599 --> 00:21:29,989
which<font color="#E5E5E5"> is basically like</font><font color="#CCCCCC"> F sync on Linux</font>

558
00:21:28,549 --> 00:21:32,839
and writes your changes to<font color="#E5E5E5"> the</font>

559
00:21:29,989 --> 00:21:34,639
non-volatile memory and you have the

560
00:21:32,839 --> 00:21:37,729
boot command which verifies the flash

561
00:21:34,639 --> 00:21:39,408
the<font color="#E5E5E5"> flash code and starts booting it so</font>

562
00:21:37,729 --> 00:21:42,259
to us the boot command is the<font color="#CCCCCC"> most</font>

563
00:21:39,409 --> 00:21:44,599
interesting because it provides all<font color="#E5E5E5"> the</font>

564
00:21:42,259 --> 00:21:47,659
verification and<font color="#E5E5E5"> attempts to ensure that</font>

565
00:21:44,599 --> 00:21:50,749
<font color="#E5E5E5">no malicious image is booted and it</font>

566
00:21:47,659 --> 00:21:53,449
turns out<font color="#E5E5E5"> that if you issue the boot</font>

567
00:21:50,749 --> 00:21:55,219
command<font color="#CCCCCC"> it compares</font><font color="#E5E5E5"> the whole image to</font>

568
00:21:53,449 --> 00:21:57,919
whatever<font color="#CCCCCC"> cryptographic</font><font color="#E5E5E5"> little function</font>

569
00:21:55,219 --> 00:22:00,319
they use and if it's successfully

570
00:21:57,919 --> 00:22:04,279
verified<font color="#E5E5E5"> they write a constant to the</font>

571
00:22:00,319 --> 00:22:09,109
address 0 X 800<font color="#CCCCCC"> 3000</font><font color="#E5E5E5"> and that constant</font>

572
00:22:04,279 --> 00:22:11,209
is<font color="#E5E5E5"> food paper</font><font color="#CCCCCC"> and so to not have to</font>

573
00:22:09,109 --> 00:22:14,928
verify<font color="#CCCCCC"> the entire flash on each boot</font>

574
00:22:11,209 --> 00:22:17,889
they just do<font color="#E5E5E5"> this once</font><font color="#CCCCCC"> so only after</font>

575
00:22:14,929 --> 00:22:17,889
<font color="#E5E5E5">firmware upgrade</font>

576
00:22:18,490 --> 00:22:23,260
so basically if you<font color="#E5E5E5"> boot up</font><font color="#CCCCCC"> the ledger</font>

577
00:22:20,530 --> 00:22:25,030
<font color="#E5E5E5">it boots it weights 500 milliseconds</font><font color="#CCCCCC"> it</font>

578
00:22:23,260 --> 00:22:26,470
checks if you have a button pressed<font color="#E5E5E5"> if</font>

579
00:22:25,030 --> 00:22:29,290
yes it goes to bootloader

580
00:22:26,470 --> 00:22:33,160
otherwise<font color="#CCCCCC"> it lowest notes the constant</font>

581
00:22:29,290 --> 00:22:35,260
at 0 X 800<font color="#CCCCCC"> 3000</font><font color="#E5E5E5"> and if it's food babe</font><font color="#CCCCCC"> it</font>

582
00:22:33,160 --> 00:22:38,950
boots the<font color="#CCCCCC"> firmware so our goal is to</font>

583
00:22:35,260 --> 00:22:42,100
write food babe to that<font color="#E5E5E5"> at address first</font>

584
00:22:38,950 --> 00:22:44,440
<font color="#E5E5E5">attempt we just issue a select</font><font color="#CCCCCC"> segment</font>

585
00:22:42,100 --> 00:22:48,760
command<font color="#CCCCCC"> to</font><font color="#E5E5E5"> exactly</font><font color="#CCCCCC"> that address</font><font color="#E5E5E5"> we just</font>

586
00:22:44,440 --> 00:22:53,380
<font color="#E5E5E5">write food paper to it</font><font color="#CCCCCC"> flush</font><font color="#E5E5E5"> and reset</font>

587
00:22:48,760 --> 00:22:55,290
the device<font color="#E5E5E5"> didn't work</font><font color="#CCCCCC"> unfortunately</font><font color="#E5E5E5"> so</font>

588
00:22:53,380 --> 00:22:57,610
we have to do more reverse engineering

589
00:22:55,290 --> 00:22:59,980
it turns out that they use an

590
00:22:57,610 --> 00:23:01,929
interesting<font color="#E5E5E5"> approach to</font><font color="#CCCCCC"> ensure that</font><font color="#E5E5E5"> you</font>

591
00:22:59,980 --> 00:23:02,470
<font color="#E5E5E5">don't accidentally flash over the</font>

592
00:23:01,930 --> 00:23:04,300
bootloader

593
00:23:02,470 --> 00:23:06,760
so they basically blacklist<font color="#CCCCCC"> a whole</font>

594
00:23:04,300 --> 00:23:11,980
<font color="#E5E5E5">memory region so if you try to flash</font>

595
00:23:06,760 --> 00:23:14,950
from 0 X 800<font color="#E5E5E5"> for x 0 up</font><font color="#CCCCCC"> to 0 X 800</font><font color="#E5E5E5"> 3000</font>

596
00:23:11,980 --> 00:23:17,170
it returns an error if you<font color="#CCCCCC"> try to</font>

597
00:23:14,950 --> 00:23:18,910
directly write<font color="#E5E5E5"> to food babe they thought</font>

598
00:23:17,170 --> 00:23:22,450
about<font color="#E5E5E5"> it</font><font color="#CCCCCC"> and they have a very specific</font>

599
00:23:18,910 --> 00:23:24,750
code path to prevent that so they mem

600
00:23:22,450 --> 00:23:27,550
set it to<font color="#CCCCCC"> 0 and you're screwed again and</font>

601
00:23:24,750 --> 00:23:30,940
then finally<font color="#CCCCCC"> it writes assuming you</font>

602
00:23:27,550 --> 00:23:32,710
didn't<font color="#CCCCCC"> error out but it turns</font><font color="#E5E5E5"> out that</font>

603
00:23:30,940 --> 00:23:36,100
<font color="#CCCCCC">the stm32 has kind of an</font><font color="#E5E5E5"> interesting</font>

604
00:23:32,710 --> 00:23:38,380
memory map and on a lot of<font color="#E5E5E5"> chips</font><font color="#CCCCCC"> you can</font>

605
00:23:36,100 --> 00:23:40,719
<font color="#E5E5E5">not only map your flash to one address</font>

606
00:23:38,380 --> 00:23:43,120
<font color="#E5E5E5">but you can also have it mapped to</font>

607
00:23:40,720 --> 00:23:45,460
another address<font color="#E5E5E5"> and in this case the</font>

608
00:23:43,120 --> 00:23:51,610
flash is indeed<font color="#E5E5E5"> also mapped to the</font>

609
00:23:45,460 --> 00:23:53,140
address 0<font color="#E5E5E5"> and so the bootloader uses a</font>

610
00:23:51,610 --> 00:23:57,310
blacklisting approach so it only

611
00:23:53,140 --> 00:23:58,930
excludes certain memory areas but it

612
00:23:57,310 --> 00:24:00,970
doesn't use<font color="#CCCCCC"> whitelisting where you could</font>

613
00:23:58,930 --> 00:24:03,550
<font color="#E5E5E5">only explicitly write to this memory</font>

614
00:24:00,970 --> 00:24:08,350
<font color="#E5E5E5">region so they do not like writing to 0</font>

615
00:24:03,550 --> 00:24:12,700
<font color="#E5E5E5">X 0 profit</font><font color="#CCCCCC"> second attempt</font><font color="#E5E5E5"> we just select</font>

616
00:24:08,350 --> 00:24:17,260
the segment<font color="#E5E5E5"> at</font><font color="#CCCCCC"> 3,000 which maps to 0 X</font>

617
00:24:12,700 --> 00:24:19,860
800<font color="#CCCCCC"> 3000 we right foot babe</font><font color="#E5E5E5"> to it we</font>

618
00:24:17,260 --> 00:24:22,770
flush<font color="#E5E5E5"> reset</font>

619
00:24:19,860 --> 00:24:25,770
and we can<font color="#E5E5E5"> flush custom firmware awesome</font>

620
00:24:22,770 --> 00:24:25,770
<font color="#E5E5E5">so</font>

621
00:24:30,160 --> 00:24:34,940
what do you do when you<font color="#E5E5E5"> have a device</font>

622
00:24:32,450 --> 00:24:40,190
that where the display is<font color="#E5E5E5"> not big enough</font>

623
00:24:34,940 --> 00:24:42,170
<font color="#E5E5E5">to</font><font color="#CCCCCC"> run</font><font color="#E5E5E5"> doom with</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> custom firmware so in</font>

624
00:24:40,190 --> 00:24:43,730
this case it's an original<font color="#CCCCCC"> ledger press</font>

625
00:24:42,170 --> 00:24:45,440
the button put it into<font color="#E5E5E5"> bootloader mode</font>

626
00:24:43,730 --> 00:24:47,590
<font color="#CCCCCC">which is part of the</font><font color="#E5E5E5"> normal operation</font>

627
00:24:45,440 --> 00:24:47,590
<font color="#E5E5E5">and</font>

628
00:24:58,920 --> 00:25:06,130
if you want to play a bit<font color="#CCCCCC"> of snake come</font>

629
00:25:01,720 --> 00:25:07,930
by<font color="#E5E5E5"> later so how are they protecting</font>

630
00:25:06,130 --> 00:25:11,170
against this I've mentioned before<font color="#CCCCCC"> Leger</font>

631
00:25:07,930 --> 00:25:13,600
is aware that<font color="#CCCCCC"> you can reflash</font><font color="#E5E5E5"> this stm32</font>

632
00:25:11,170 --> 00:25:16,030
and they are they put in some measures

633
00:25:13,600 --> 00:25:18,340
<font color="#CCCCCC">to prevent you and doing malicious stuff</font>

634
00:25:16,030 --> 00:25:20,920
<font color="#E5E5E5">and</font><font color="#CCCCCC"> basically what they do and</font><font color="#E5E5E5"> this is</font>

635
00:25:18,340 --> 00:25:23,470
<font color="#E5E5E5">very simplified and we did not bother</font><font color="#CCCCCC"> to</font>

636
00:25:20,920 --> 00:25:25,960
fully<font color="#CCCCCC"> reverse-engineered</font><font color="#E5E5E5"> because we</font>

637
00:25:23,470 --> 00:25:28,060
didn't<font color="#CCCCCC"> need to basically</font><font color="#E5E5E5"> when when the</font>

638
00:25:25,960 --> 00:25:30,790
chip boots it sends its entire firmware

639
00:25:28,060 --> 00:25:33,280
to the<font color="#E5E5E5"> ste 31 which then performs some</font>

640
00:25:30,790 --> 00:25:35,200
kind of hashing also verifies that the

641
00:25:33,280 --> 00:25:37,629
firmware<font color="#E5E5E5"> is authentic and it also</font>

642
00:25:35,200 --> 00:25:39,670
measures<font color="#CCCCCC"> the time it</font><font color="#E5E5E5"> takes to Center</font>

643
00:25:37,630 --> 00:25:42,100
firmware this is to prevent you from

644
00:25:39,670 --> 00:25:47,920
just running<font color="#CCCCCC"> a</font><font color="#E5E5E5"> compression algorithm on</font>

645
00:25:42,100 --> 00:25:52,540
the stm32 and send it very slowly how do

646
00:25:47,920 --> 00:25:54,430
we bypass this so our idea<font color="#E5E5E5"> was because</font>

647
00:25:52,540 --> 00:25:58,030
we don't only have flash we also have

648
00:25:54,430 --> 00:26:01,660
<font color="#CCCCCC">run so what if we create a compromised</font>

649
00:25:58,030 --> 00:26:06,370
and compressed firmware<font color="#CCCCCC"> that copies</font>

650
00:26:01,660 --> 00:26:09,670
itself to<font color="#CCCCCC"> ram we jump to it</font><font color="#E5E5E5"> and then it</font>

651
00:26:06,370 --> 00:26:13,060
writes its entire compressed<font color="#E5E5E5"> firmware</font><font color="#CCCCCC"> to</font>

652
00:26:09,670 --> 00:26:14,650
flash and compress in that case and then

653
00:26:13,060 --> 00:26:18,250
<font color="#E5E5E5">we just call the</font><font color="#CCCCCC"> original code on a</font>

654
00:26:14,650 --> 00:26:20,050
<font color="#E5E5E5">secure element it will verify the</font>

655
00:26:18,250 --> 00:26:24,340
firmware<font color="#CCCCCC"> it will run with a real timing</font>

656
00:26:20,050 --> 00:26:26,290
and boots<font color="#E5E5E5"> irregularly and so we</font>

657
00:26:24,340 --> 00:26:28,720
attempted<font color="#CCCCCC"> this it took quite</font><font color="#E5E5E5"> quite a</font>

658
00:26:26,290 --> 00:26:31,090
while to achieve because<font color="#CCCCCC"> basically</font><font color="#E5E5E5"> you</font>

659
00:26:28,720 --> 00:26:33,100
can't do zip you can't do lzma because

660
00:26:31,090 --> 00:26:34,899
even if you compress<font color="#CCCCCC"> the image you</font><font color="#E5E5E5"> don't</font>

661
00:26:33,100 --> 00:26:38,230
have enough space<font color="#E5E5E5"> for complex compressor</font>

662
00:26:34,900 --> 00:26:41,170
so you our<font color="#E5E5E5"> attempt was</font><font color="#CCCCCC"> to find duplicate</font>

663
00:26:38,230 --> 00:26:42,820
bytes squeeze them together and make

664
00:26:41,170 --> 00:26:44,770
space for<font color="#E5E5E5"> our custom payload and</font>

665
00:26:42,820 --> 00:26:47,409
basically we just<font color="#E5E5E5"> have a table that says</font>

666
00:26:44,770 --> 00:26:49,600
<font color="#E5E5E5">ok now you will have</font><font color="#CCCCCC"> six</font><font color="#E5E5E5"> zeros or</font>

667
00:26:47,410 --> 00:26:52,840
something and our each table entry only

668
00:26:49,600 --> 00:26:55,330
<font color="#E5E5E5">takes a single byte so and it's only</font>

669
00:26:52,840 --> 00:26:57,040
<font color="#E5E5E5">like</font><font color="#CCCCCC"> 10 instructions in a sampler to run</font>

670
00:26:55,330 --> 00:26:58,870
this<font color="#CCCCCC"> decompressor so you don't have a</font>

671
00:26:57,040 --> 00:27:01,149
large code base it's very easy<font color="#E5E5E5"> to use</font>

672
00:26:58,870 --> 00:27:03,969
and it turns out<font color="#E5E5E5"> that even with a very</font>

673
00:27:01,150 --> 00:27:05,560
<font color="#E5E5E5">simple detector like in this case we</font>

674
00:27:03,970 --> 00:27:08,500
<font color="#CCCCCC">rerun</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> script to find the</font><font color="#E5E5E5"> longest</font>

675
00:27:05,560 --> 00:27:11,080
<font color="#CCCCCC">applicate data</font><font color="#E5E5E5"> and you can</font><font color="#CCCCCC"> see on the</font>

676
00:27:08,500 --> 00:27:11,410
first<font color="#E5E5E5"> try we get like 260 bytes of space</font>

677
00:27:11,080 --> 00:27:14,770
for

678
00:27:11,410 --> 00:27:17,200
payload which is enough for<font color="#CCCCCC"> a lot of</font>

679
00:27:14,770 --> 00:27:20,050
<font color="#E5E5E5">things let's say and we have a working</font>

680
00:27:17,200 --> 00:27:22,390
<font color="#E5E5E5">proof of concept of this and we would go</font>

681
00:27:20,050 --> 00:27:25,930
into a lot of details but<font color="#E5E5E5"> if we we</font><font color="#CCCCCC"> only</font>

682
00:27:22,390 --> 00:27:27,550
got<font color="#E5E5E5"> an hour</font><font color="#CCCCCC"> and so we we will release</font>

683
00:27:25,930 --> 00:27:29,260
after this talk and non-offensive<font color="#E5E5E5"> an</font>

684
00:27:27,550 --> 00:27:31,780
example of this that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can look at how</font>

685
00:27:29,260 --> 00:27:34,750
<font color="#E5E5E5">does it work what can you do</font><font color="#CCCCCC"> even if</font>

686
00:27:31,780 --> 00:27:37,180
you're from<font color="#E5E5E5"> where is attempting to be</font>

687
00:27:34,750 --> 00:27:38,770
verified<font color="#E5E5E5"> and we also and this</font><font color="#CCCCCC"> is very</font>

688
00:27:37,180 --> 00:27:41,410
<font color="#E5E5E5">exciting we</font><font color="#CCCCCC"> are working with</font><font color="#E5E5E5"> youtuber</font>

689
00:27:38,770 --> 00:27:43,690
<font color="#CCCCCC">Life</font><font color="#E5E5E5"> overflow and he created a</font><font color="#CCCCCC"> 20</font><font color="#E5E5E5"> minute</font>

690
00:27:41,410 --> 00:27:46,630
video<font color="#E5E5E5"> on walking through this entire</font>

691
00:27:43,690 --> 00:27:49,870
<font color="#E5E5E5">foot</font><font color="#CCCCCC"> pipe vulnerability how the</font>

692
00:27:46,630 --> 00:27:51,700
verification works and how to bypass<font color="#CCCCCC"> it</font>

693
00:27:49,870 --> 00:27:54,310
<font color="#E5E5E5">to a certain</font><font color="#CCCCCC"> degree we don't want to</font>

694
00:27:51,700 --> 00:27:56,230
<font color="#E5E5E5">weaponize it so we did not we will not</font>

695
00:27:54,310 --> 00:27:58,570
<font color="#E5E5E5">release the first</font><font color="#CCCCCC"> there the full thing</font>

696
00:27:56,230 --> 00:28:00,610
but yeah very<font color="#E5E5E5"> excited for this stay</font>

697
00:27:58,570 --> 00:28:03,790
tuned<font color="#E5E5E5"> on</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> Twitter and we'll link it</font>

698
00:28:00,610 --> 00:28:05,740
<font color="#E5E5E5">for sure as part of this we also</font><font color="#CCCCCC"> have a</font>

699
00:28:03,790 --> 00:28:07,540
lot of<font color="#CCCCCC"> software that</font><font color="#E5E5E5"> we will release so</font>

700
00:28:05,740 --> 00:28:09,790
public release will release the snake

701
00:28:07,540 --> 00:28:11,139
firmware so hopefully this evening

702
00:28:09,790 --> 00:28:13,960
you'll be able<font color="#E5E5E5"> to play snake on</font><font color="#CCCCCC"> your</font>

703
00:28:11,140 --> 00:28:16,120
letter if you bought with some Bitcoin

704
00:28:13,960 --> 00:28:19,720
at<font color="#E5E5E5"> 20,000 an hour bankrupt you can at</font>

705
00:28:16,120 --> 00:28:22,929
least<font color="#E5E5E5"> play snake we will open source the</font>

706
00:28:19,720 --> 00:28:25,570
compressor and<font color="#E5E5E5"> the extractor we build</font>

707
00:28:22,930 --> 00:28:27,970
logic analyzer<font color="#CCCCCC"> plugin for</font><font color="#E5E5E5"> the smart</font><font color="#CCCCCC"> cut</font>

708
00:28:25,570 --> 00:28:30,010
protocol and we<font color="#E5E5E5"> build</font><font color="#CCCCCC"> a software that</font>

709
00:28:27,970 --> 00:28:33,130
<font color="#E5E5E5">analyzes the communication between the</font>

710
00:28:30,010 --> 00:28:35,379
stm32 and the<font color="#E5E5E5"> st 31 on the ledger</font>

711
00:28:33,130 --> 00:28:37,420
specific data<font color="#E5E5E5"> and you can just dump it</font>

712
00:28:35,380 --> 00:28:41,430
<font color="#E5E5E5">so if you guys are interested in for</font>

713
00:28:37,420 --> 00:28:46,540
<font color="#E5E5E5">example</font><font color="#CCCCCC"> trying</font><font color="#E5E5E5"> to break into the st 31</font>

714
00:28:41,430 --> 00:28:48,700
please have a go<font color="#E5E5E5"> and letter has a second</font>

715
00:28:46,540 --> 00:28:50,980
<font color="#E5E5E5">device which is called the</font><font color="#CCCCCC"> ledger blue</font>

716
00:28:48,700 --> 00:28:52,900
we<font color="#E5E5E5"> assume the</font><font color="#CCCCCC"> reason it's called</font><font color="#E5E5E5"> the</font>

717
00:28:50,980 --> 00:28:56,110
ledger blue is because it<font color="#E5E5E5"> contains</font>

718
00:28:52,900 --> 00:28:57,670
<font color="#E5E5E5">bluetooth but they never enabled</font>

719
00:28:56,110 --> 00:29:00,129
<font color="#E5E5E5">bluetooth so it's basically just a</font>

720
00:28:57,670 --> 00:29:03,490
regular letter with a color<font color="#CCCCCC"> display and</font>

721
00:29:00,130 --> 00:29:06,220
<font color="#CCCCCC">a big</font><font color="#E5E5E5"> battery in it and we call this</font>

722
00:29:03,490 --> 00:29:08,460
part fantastic signals and<font color="#CCCCCC"> how to find</font>

723
00:29:06,220 --> 00:29:08,460
<font color="#E5E5E5">them</font>

724
00:29:09,750 --> 00:29:14,950
because when we open up this device<font color="#E5E5E5"> and</font>

725
00:29:12,789 --> 00:29:16,510
we were chatting<font color="#CCCCCC"> we have this nice</font>

726
00:29:14,950 --> 00:29:20,440
telegram<font color="#E5E5E5"> chat room where we are chatting</font>

727
00:29:16,510 --> 00:29:22,029
24/7<font color="#E5E5E5"> while doing this and we open up the</font>

728
00:29:20,440 --> 00:29:24,130
device<font color="#E5E5E5"> and the first thing like</font>

729
00:29:22,029 --> 00:29:27,130
literally five<font color="#CCCCCC"> minutes after opening it</font>

730
00:29:24,130 --> 00:29:29,679
I saw that<font color="#E5E5E5"> you have the secure element</font>

731
00:29:27,130 --> 00:29:30,970
on the left<font color="#E5E5E5"> and the stm32 on the right</font>

732
00:29:29,679 --> 00:29:34,750
you<font color="#CCCCCC"> have some other stuff</font><font color="#E5E5E5"> like the</font>

733
00:29:30,970 --> 00:29:38,350
<font color="#E5E5E5">Bluetooth module and so on the trace</font>

734
00:29:34,750 --> 00:29:40,450
<font color="#E5E5E5">between the secure element and the</font>

735
00:29:38,350 --> 00:29:44,709
microcontroller<font color="#E5E5E5"> is pretty long and</font>

736
00:29:40,450 --> 00:29:46,630
contains a pretty fast signal so what is

737
00:29:44,710 --> 00:29:53,590
the long conductor with a fast changing

738
00:29:46,630 --> 00:30:00,659
current anyone got a clue<font color="#E5E5E5"> correct</font><font color="#CCCCCC"> it's</font>

739
00:29:53,590 --> 00:30:03,129
an antenna<font color="#CCCCCC"> so I pulled out my hack RF</font>

740
00:30:00,659 --> 00:30:06,820
software-defined radio this<font color="#E5E5E5"> is just a</font>

741
00:30:03,130 --> 00:30:09,220
very more sophisticated<font color="#E5E5E5"> RTL SDR so you</font>

742
00:30:06,820 --> 00:30:12,010
can just sniff arbitrary signals with it

743
00:30:09,220 --> 00:30:16,080
I got a random<font color="#CCCCCC"> city telescope antenna on</font>

744
00:30:12,010 --> 00:30:18,700
Amazon and I have my ledger blue and so

745
00:30:16,080 --> 00:30:21,549
on this screen<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can see the blue</font>

746
00:30:18,700 --> 00:30:24,639
thing is the radio spectrum around 169

747
00:30:21,549 --> 00:30:26,590
megahertz<font color="#E5E5E5"> and if we start entering our</font>

748
00:30:24,639 --> 00:30:29,340
pin<font color="#E5E5E5"> we can see that</font><font color="#CCCCCC"> there is</font><font color="#E5E5E5"> a weak</font>

749
00:30:26,590 --> 00:30:29,340
<font color="#E5E5E5">signal</font>

750
00:30:29,710 --> 00:30:35,039
you guys see<font color="#E5E5E5"> where this is going on the</font>

751
00:30:32,500 --> 00:30:38,820
on the radio

752
00:30:35,039 --> 00:30:43,590
unfortunately that signal is pretty weak

753
00:30:38,820 --> 00:30:46,480
luckily they included<font color="#E5E5E5"> in antenna okay</font>

754
00:30:43,590 --> 00:30:50,470
they call it USB cable but<font color="#E5E5E5"> I'm not so</font>

755
00:30:46,480 --> 00:30:52,860
sure<font color="#E5E5E5"> about</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> so this time with USB</font>

756
00:30:50,470 --> 00:30:58,149
<font color="#E5E5E5">connected and we do the same thing again</font>

757
00:30:52,860 --> 00:30:59,649
<font color="#E5E5E5">you can see like crazy radio spikes and</font>

758
00:30:58,149 --> 00:31:02,260
this is right next<font color="#E5E5E5"> to</font><font color="#CCCCCC"> each other</font><font color="#E5E5E5"> but</font>

759
00:30:59,649 --> 00:31:05,770
<font color="#CCCCCC">even if you go a couple of meters I</font><font color="#E5E5E5"> was</font>

760
00:31:02,260 --> 00:31:07,840
<font color="#E5E5E5">limited as Josh by my living</font><font color="#CCCCCC"> room space</font>

761
00:31:05,770 --> 00:31:11,649
you get a couple<font color="#E5E5E5"> of meters</font><font color="#CCCCCC"> of decent</font>

762
00:31:07,840 --> 00:31:14,830
reception so our goal was to<font color="#E5E5E5"> find out</font>

763
00:31:11,649 --> 00:31:17,049
<font color="#E5E5E5">what is this signal and if we</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> look</font>

764
00:31:14,830 --> 00:31:20,460
<font color="#CCCCCC">at the recorded amplitude of the signal</font>

765
00:31:17,049 --> 00:31:22,720
we get this and if you do a lot<font color="#CCCCCC"> of</font>

766
00:31:20,460 --> 00:31:27,100
probing<font color="#E5E5E5"> and so on you immediately see</font>

767
00:31:22,720 --> 00:31:28,690
<font color="#E5E5E5">okay there are spikes and</font><font color="#CCCCCC"> there are 11</font>

768
00:31:27,100 --> 00:31:30,309
of them and then there's a pause and

769
00:31:28,690 --> 00:31:32,169
<font color="#E5E5E5">then there's more spikes so this is</font>

770
00:31:30,309 --> 00:31:35,590
probably some kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> protocol</font><font color="#CCCCCC"> that</font>

771
00:31:32,169 --> 00:31:38,380
first sends<font color="#CCCCCC"> 11 bytes of data</font><font color="#E5E5E5"> then pauses</font>

772
00:31:35,590 --> 00:31:39,789
and<font color="#E5E5E5"> then sends more data so we looked at</font>

773
00:31:38,380 --> 00:31:42,220
the back of<font color="#CCCCCC"> the device started</font><font color="#E5E5E5"> probing</font>

774
00:31:39,789 --> 00:31:44,140
<font color="#E5E5E5">every single connection and try to</font>

775
00:31:42,220 --> 00:31:47,500
figure<font color="#E5E5E5"> out is this the secure element</font><font color="#CCCCCC"> is</font>

776
00:31:44,140 --> 00:31:49,830
this whatever and they<font color="#E5E5E5"> turned</font><font color="#CCCCCC"> out to be</font>

777
00:31:47,500 --> 00:31:51,909
the display bus<font color="#CCCCCC"> so we can sniff</font>

778
00:31:49,830 --> 00:31:56,379
information on what is sent to the

779
00:31:51,909 --> 00:31:58,600
display remotely and if you if we look

780
00:31:56,380 --> 00:32:00,490
at the signal that<font color="#E5E5E5"> gets sent in blue is</font>

781
00:31:58,600 --> 00:32:03,399
the<font color="#E5E5E5"> signal that gets sent when you press</font>

782
00:32:00,490 --> 00:32:05,830
the letter<font color="#CCCCCC"> zero on the pin</font><font color="#E5E5E5"> pad and in</font>

783
00:32:03,399 --> 00:32:08,709
orange when you press the letter<font color="#E5E5E5"> seven</font>

784
00:32:05,830 --> 00:32:10,418
so we can see a<font color="#CCCCCC"> very</font><font color="#E5E5E5"> clear difference at</font>

785
00:32:08,710 --> 00:32:13,179
certain points on the signal which

786
00:32:10,419 --> 00:32:15,340
<font color="#E5E5E5">confirmed our suspicions but building</font>

787
00:32:13,179 --> 00:32:18,309
<font color="#E5E5E5">software for</font><font color="#CCCCCC"> this is kind</font><font color="#E5E5E5"> of boring like</font>

788
00:32:15,340 --> 00:32:21,789
digital signal processing is not really

789
00:32:18,309 --> 00:32:23,320
my<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> so what do we do and we wanted</font>

790
00:32:21,789 --> 00:32:24,850
to increase<font color="#CCCCCC"> the password load in our</font>

791
00:32:23,320 --> 00:32:29,559
talk a bit and so<font color="#E5E5E5"> we are hacking</font>

792
00:32:24,850 --> 00:32:31,799
<font color="#E5E5E5">blockchain IOT devices using artificial</font>

793
00:32:29,559 --> 00:32:31,799
intelligence

794
00:32:32,250 --> 00:32:35,700
in the clouds

795
00:32:40,350 --> 00:32:46,179
so our idea<font color="#E5E5E5"> was we record training</font>

796
00:32:44,740 --> 00:32:48,970
signals<font color="#E5E5E5"> we</font><font color="#CCCCCC"> use some</font><font color="#E5E5E5"> kind of</font>

797
00:32:46,180 --> 00:32:53,800
pre-filtering<font color="#E5E5E5"> we train an</font><font color="#CCCCCC"> AI on it</font>

798
00:32:48,970 --> 00:32:55,990
<font color="#E5E5E5">profit literally problem is getting</font>

799
00:32:53,800 --> 00:32:57,340
<font color="#E5E5E5">training data really sucks because</font><font color="#CCCCCC"> you</font>

800
00:32:55,990 --> 00:33:00,880
don't want to sit there<font color="#CCCCCC"> for 10 hours</font>

801
00:32:57,340 --> 00:33:02,830
<font color="#CCCCCC">pressing the same key on a</font><font color="#E5E5E5"> pin</font><font color="#CCCCCC"> pad it</font>

802
00:33:00,880 --> 00:33:10,240
really<font color="#E5E5E5"> doesn't sound like fun</font><font color="#CCCCCC"> and so</font>

803
00:33:02,830 --> 00:33:12,669
this needs automation so we took an

804
00:33:10,240 --> 00:33:14,920
Arduino we took a roll of masking<font color="#E5E5E5"> tape a</font>

805
00:33:12,670 --> 00:33:17,620
piece of acrylic glass a piece of advice

806
00:33:14,920 --> 00:33:22,990
<font color="#CCCCCC">and this is a who have</font><font color="#E5E5E5"> a pen for the</font>

807
00:33:17,620 --> 00:33:24,790
extra amount<font color="#CCCCCC"> of Chinese back door and</font><font color="#E5E5E5"> we</font>

808
00:33:22,990 --> 00:33:30,160
let this run for<font color="#CCCCCC"> a couple of hours and</font>

809
00:33:24,790 --> 00:33:32,230
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can actually</font><font color="#E5E5E5"> see that every time it</font>

810
00:33:30,160 --> 00:33:35,200
presses down you can see<font color="#CCCCCC"> that the digit</font>

811
00:33:32,230 --> 00:33:36,940
that you pressed is highlighted and the

812
00:33:35,200 --> 00:33:39,760
difference in the signal we saw earlier

813
00:33:36,940 --> 00:33:41,740
is probably the x and y-coordinate<font color="#E5E5E5"> of</font>

814
00:33:39,760 --> 00:33:44,230
where it highlights the button and

815
00:33:41,740 --> 00:33:48,970
<font color="#E5E5E5">that's the difference we can see in the</font>

816
00:33:44,230 --> 00:33:51,190
train<font color="#CCCCCC"> and</font><font color="#E5E5E5"> in the in the trace and so we</font>

817
00:33:48,970 --> 00:33:54,910
had a lot of recorded<font color="#E5E5E5"> data now we</font><font color="#CCCCCC"> create</font>

818
00:33:51,190 --> 00:33:58,300
<font color="#E5E5E5">a training set we created a test set</font><font color="#CCCCCC"> pre</font>

819
00:33:54,910 --> 00:34:02,740
<font color="#CCCCCC">processing</font><font color="#E5E5E5"> tens of</font><font color="#CCCCCC"> flow AI model</font><font color="#E5E5E5"> it's</font>

820
00:33:58,300 --> 00:34:05,320
<font color="#E5E5E5">really easy surprisingly and we tried</font>

821
00:34:02,740 --> 00:34:08,469
our test set<font color="#E5E5E5"> did a prediction and so the</font>

822
00:34:05,320 --> 00:34:11,350
big question<font color="#CCCCCC"> how accurate is it and it</font>

823
00:34:08,469 --> 00:34:14,379
turns out so this<font color="#CCCCCC"> is the the result of a</font>

824
00:34:11,350 --> 00:34:17,350
cut of the<font color="#E5E5E5"> test set and if we zoom in on</font>

825
00:34:14,379 --> 00:34:19,389
this<font color="#E5E5E5"> this basically tells you we have</font>

826
00:34:17,350 --> 00:34:22,839
the the signal this<font color="#E5E5E5"> gray thing</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> just a</font>

827
00:34:19,389 --> 00:34:26,320
picture<font color="#E5E5E5"> representation</font><font color="#CCCCCC"> of the signal</font><font color="#E5E5E5"> and</font>

828
00:34:22,840 --> 00:34:28,419
<font color="#E5E5E5">it tells you how sure it is what digit</font>

829
00:34:26,320 --> 00:34:30,970
is<font color="#E5E5E5"> in this case it's</font><font color="#CCCCCC"> seven with</font>

830
00:34:28,418 --> 00:34:33,009
<font color="#CCCCCC">ninety-eight</font><font color="#E5E5E5"> percent likelihood so</font>

831
00:34:30,969 --> 00:34:34,779
pretty<font color="#CCCCCC"> good in our</font><font color="#E5E5E5"> test set we only have</font>

832
00:34:33,010 --> 00:34:36,760
one wrong result

833
00:34:34,780 --> 00:34:40,480
and overall we<font color="#E5E5E5"> get around</font><font color="#CCCCCC"> 90</font><font color="#E5E5E5"> percent</font>

834
00:34:36,760 --> 00:34:42,929
<font color="#CCCCCC">accuracy</font><font color="#E5E5E5"> and to move this in the cloud</font>

835
00:34:40,480 --> 00:34:46,300
we are hosting<font color="#E5E5E5"> this on the Google cloud</font>

836
00:34:42,929 --> 00:34:48,129
as the<font color="#CCCCCC"> letter AI for</font><font color="#E5E5E5"> you guys to play</font>

837
00:34:46,300 --> 00:34:50,290
with and<font color="#CCCCCC"> we'll publish it online</font><font color="#E5E5E5"> with a</font>

838
00:34:48,129 --> 00:34:52,589
limited data set that<font color="#E5E5E5"> is trained on</font><font color="#CCCCCC"> a</font>

839
00:34:50,290 --> 00:34:55,259
very closed space you cannot do

840
00:34:52,590 --> 00:34:56,790
something super malicious with it<font color="#E5E5E5"> but</font>

841
00:34:55,260 --> 00:35:00,120
it's nice<font color="#CCCCCC"> to</font><font color="#E5E5E5"> play around and see how</font>

842
00:34:56,790 --> 00:35:00,870
<font color="#E5E5E5">this was done</font><font color="#CCCCCC"> and this brings us to the</font>

843
00:35:00,120 --> 00:35:12,720
<font color="#E5E5E5">next part</font>

844
00:35:00,870 --> 00:35:14,490
glitch me if you can<font color="#E5E5E5"> thank you so now</font>

845
00:35:12,720 --> 00:35:17,310
we're going<font color="#CCCCCC"> to talk about the silicon</font>

846
00:35:14,490 --> 00:35:20,910
level vulnerability glitching attacks

847
00:35:17,310 --> 00:35:22,590
<font color="#E5E5E5">objection so to review we'll be talking</font>

848
00:35:20,910 --> 00:35:24,600
about the<font color="#E5E5E5"> treasure one and so I just</font>

849
00:35:22,590 --> 00:35:26,310
want<font color="#E5E5E5"> to go over</font><font color="#CCCCCC"> very quickly</font><font color="#E5E5E5"> what the</font>

850
00:35:24,600 --> 00:35:29,279
<font color="#E5E5E5">architecture is of the treasure one and</font>

851
00:35:26,310 --> 00:35:32,130
some previous work<font color="#CCCCCC"> that was done so the</font>

852
00:35:29,280 --> 00:35:34,980
treasure one is a quite a simple

853
00:35:32,130 --> 00:35:38,850
embedded device it consists of only a

854
00:35:34,980 --> 00:35:40,710
few<font color="#E5E5E5"> components it</font><font color="#CCCCCC"> has a OLED display it</font>

855
00:35:38,850 --> 00:35:43,549
has some buttons and<font color="#E5E5E5"> has a USB connector</font>

856
00:35:40,710 --> 00:35:47,820
that are all externally facing

857
00:35:43,550 --> 00:35:51,290
internally<font color="#E5E5E5"> it's has its main brain if</font>

858
00:35:47,820 --> 00:35:54,390
you<font color="#CCCCCC"> will as the spm</font><font color="#E5E5E5"> 32f 205</font>

859
00:35:51,290 --> 00:35:56,220
microcontroller which controls all<font color="#CCCCCC"> the</font>

860
00:35:54,390 --> 00:35:59,310
other<font color="#E5E5E5"> operations on the Tresser the</font>

861
00:35:56,220 --> 00:36:02,359
display the USB<font color="#E5E5E5"> and the two buttons so</font>

862
00:35:59,310 --> 00:36:05,250
last year we gave a<font color="#E5E5E5"> talk at Def Con</font>

863
00:36:02,360 --> 00:36:07,470
<font color="#CCCCCC">breaking Bitcoin</font><font color="#E5E5E5"> hardware wallets here</font>

864
00:36:05,250 --> 00:36:09,480
we<font color="#CCCCCC"> use</font><font color="#E5E5E5"> the chip</font><font color="#CCCCCC"> Whisperer</font><font color="#E5E5E5"> to mainly do</font>

865
00:36:07,470 --> 00:36:12,899
the glitching attacks the conclusions

866
00:36:09,480 --> 00:36:16,080
from last year is that<font color="#E5E5E5"> the</font><font color="#CCCCCC"> eff 205 was</font>

867
00:36:12,900 --> 00:36:17,970
vulnerable to fault injection<font color="#CCCCCC"> but we it</font>

868
00:36:16,080 --> 00:36:21,240
was inconclusive<font color="#CCCCCC"> if we could do a</font>

869
00:36:17,970 --> 00:36:23,490
exploit via the fault so this year we

870
00:36:21,240 --> 00:36:27,390
have a different<font color="#CCCCCC"> result but the output</font>

871
00:36:23,490 --> 00:36:29,939
of<font color="#E5E5E5"> that work was this board was called</font>

872
00:36:27,390 --> 00:36:31,680
<font color="#E5E5E5">the breaking Bitcoin board</font><font color="#CCCCCC"> basically it</font>

873
00:36:29,940 --> 00:36:34,620
was a<font color="#E5E5E5"> treasure clone that just made it</font>

874
00:36:31,680 --> 00:36:36,990
easy<font color="#E5E5E5"> to</font><font color="#CCCCCC"> attach wires and probes</font><font color="#E5E5E5"> and so</font>

875
00:36:34,620 --> 00:36:38,900
we meet<font color="#E5E5E5"> this board the design schematics</font>

876
00:36:36,990 --> 00:36:42,060
are all<font color="#E5E5E5"> online</font><font color="#CCCCCC"> it's open source</font><font color="#E5E5E5"> hardware</font>

877
00:36:38,900 --> 00:36:43,500
now this is the chip<font color="#CCCCCC"> whisper setup that</font>

878
00:36:42,060 --> 00:36:45,150
<font color="#E5E5E5">we were using so we made the board</font>

879
00:36:43,500 --> 00:36:48,450
<font color="#E5E5E5">specifically to fit on the chip</font><font color="#CCCCCC"> list</font><font color="#E5E5E5"> for</font>

880
00:36:45,150 --> 00:36:49,860
<font color="#E5E5E5">a target board and this is just what</font><font color="#CCCCCC"> it</font>

881
00:36:48,450 --> 00:36:52,080
looks<font color="#CCCCCC"> like when you use</font><font color="#E5E5E5"> the chip</font><font color="#CCCCCC"> whisper</font>

882
00:36:49,860 --> 00:36:54,030
GUI<font color="#E5E5E5"> to perform MacLeish and here we were</font>

883
00:36:52,080 --> 00:36:56,910
<font color="#CCCCCC">doing Apple application level code so it</font>

884
00:36:54,030 --> 00:37:04,290
was<font color="#E5E5E5"> very different but I</font><font color="#CCCCCC"> gave</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> talk</font>

885
00:36:56,910 --> 00:37:07,259
and then I<font color="#CCCCCC"> met Dimitri tons yeah so</font>

886
00:37:04,290 --> 00:37:09,750
fortunately<font color="#E5E5E5"> we had Josh to do the talk</font>

887
00:37:07,260 --> 00:37:11,070
last<font color="#E5E5E5"> year and to kind of exhaust a lot</font>

888
00:37:09,750 --> 00:37:13,830
of the firmware vulnerabilities that

889
00:37:11,070 --> 00:37:15,000
were actually<font color="#E5E5E5"> hardware vulnerabilities</font>

890
00:37:13,830 --> 00:37:16,830
in the<font color="#CCCCCC"> firmware that</font><font color="#E5E5E5"> might have been</font>

891
00:37:15,000 --> 00:37:19,410
there<font color="#CCCCCC"> so we immediately knew that</font><font color="#E5E5E5"> we</font>

892
00:37:16,830 --> 00:37:20,430
could<font color="#E5E5E5"> exclude this and so you can start</font>

893
00:37:19,410 --> 00:37:22,290
<font color="#E5E5E5">looking</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> underlying</font>

894
00:37:20,430 --> 00:37:24,240
<font color="#E5E5E5">microcontroller so in this case it's the</font>

895
00:37:22,290 --> 00:37:26,100
stm32 microcontroller that<font color="#E5E5E5"> they use</font>

896
00:37:24,240 --> 00:37:29,009
inside<font color="#CCCCCC"> of it and it controls everything</font>

897
00:37:26,100 --> 00:37:31,920
so compromising<font color="#CCCCCC"> to stm32 microcontroller</font>

898
00:37:29,010 --> 00:37:35,970
<font color="#E5E5E5">means that you can compromise</font><font color="#CCCCCC"> you can</font>

899
00:37:31,920 --> 00:37:37,770
compromise the device so the I mean so

900
00:37:35,970 --> 00:37:39,330
there's a couple<font color="#E5E5E5"> of</font><font color="#CCCCCC"> papers that</font><font color="#E5E5E5"> have</font>

901
00:37:37,770 --> 00:37:41,610
covered<font color="#E5E5E5"> some of the</font><font color="#CCCCCC"> vulnerabilities in</font>

902
00:37:39,330 --> 00:37:43,529
the stm32 specifically there's one which

903
00:37:41,610 --> 00:37:47,340
describes a UV attack which lets you

904
00:37:43,530 --> 00:37:49,590
down grade<font color="#E5E5E5"> the security on the stm32 so</font>

905
00:37:47,340 --> 00:37:52,110
we determined that paper<font color="#E5E5E5"> unfortunately</font>

906
00:37:49,590 --> 00:37:54,000
does<font color="#CCCCCC"> not apply to to our result because</font>

907
00:37:52,110 --> 00:37:56,550
the<font color="#CCCCCC"> traceur is smart enough when it</font>

908
00:37:54,000 --> 00:37:59,400
boots<font color="#E5E5E5"> to check the value stored in</font><font color="#CCCCCC"> flash</font>

909
00:37:56,550 --> 00:38:01,410
and if it has been altered<font color="#CCCCCC"> in</font><font color="#E5E5E5"> any way to</font>

910
00:37:59,400 --> 00:38:03,240
set it<font color="#CCCCCC"> correctly</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> they actually</font><font color="#E5E5E5"> even</font>

911
00:38:01,410 --> 00:38:05,580
protect that against this kind<font color="#E5E5E5"> of attack</font>

912
00:38:03,240 --> 00:38:07,620
<font color="#CCCCCC">but</font><font color="#E5E5E5"> nevertheless you</font><font color="#CCCCCC"> can see that there</font>

913
00:38:05,580 --> 00:38:10,350
are some vulnerabilities so there's

914
00:38:07,620 --> 00:38:11,970
another paper<font color="#CCCCCC"> which unfortunately has</font>

915
00:38:10,350 --> 00:38:13,290
not been<font color="#E5E5E5"> published yet and we couldn't</font>

916
00:38:11,970 --> 00:38:14,549
<font color="#E5E5E5">get in touch with the authors yet that</font>

917
00:38:13,290 --> 00:38:17,250
should be<font color="#E5E5E5"> coming out in</font><font color="#CCCCCC"> January</font>

918
00:38:14,550 --> 00:38:23,040
hopefully which describes glitches

919
00:38:17,250 --> 00:38:27,600
against the stm32 f1 and the stm32f4 the

920
00:38:23,040 --> 00:38:30,210
f1 and f3<font color="#CCCCCC"> and so basically here's the</font>

921
00:38:27,600 --> 00:38:33,089
product matrix<font color="#E5E5E5"> so three of</font><font color="#CCCCCC"> them are</font>

922
00:38:30,210 --> 00:38:36,200
<font color="#CCCCCC">already vulnerable so but we're</font><font color="#E5E5E5"> looking</font>

923
00:38:33,090 --> 00:38:38,790
at the stm32 f2 and potentially the

924
00:38:36,200 --> 00:38:42,240
stm32f4 if we're<font color="#CCCCCC"> talking</font><font color="#E5E5E5"> about the trees</font>

925
00:38:38,790 --> 00:38:45,270
or<font color="#CCCCCC"> model-t so those we do not have</font>

926
00:38:42,240 --> 00:38:47,370
<font color="#CCCCCC">vulnerabilities for yet so let's take a</font>

927
00:38:45,270 --> 00:38:51,420
look at how how it works really<font color="#E5E5E5"> quickly</font>

928
00:38:47,370 --> 00:38:54,990
so the way that STM implements security

929
00:38:51,420 --> 00:38:56,940
on the stm32 is that they store an

930
00:38:54,990 --> 00:39:00,029
option<font color="#E5E5E5"> bite and the option bite the</font>

931
00:38:56,940 --> 00:39:02,310
thing to<font color="#E5E5E5"> remember is on on a cortex m3</font>

932
00:39:00,030 --> 00:39:04,320
or m4 microcontroller<font color="#CCCCCC"> that you don't</font>

933
00:39:02,310 --> 00:39:06,360
<font color="#E5E5E5">have anything other than flash so even</font>

934
00:39:04,320 --> 00:39:08,670
though they call it option<font color="#E5E5E5"> bite or refer</font>

935
00:39:06,360 --> 00:39:10,770
<font color="#CCCCCC">to this as fusing</font><font color="#E5E5E5"> or being permanent and</font>

936
00:39:08,670 --> 00:39:12,600
<font color="#CCCCCC">hardware</font><font color="#E5E5E5"> it's still stored in flash</font>

937
00:39:10,770 --> 00:39:14,160
just like the user application is stored

938
00:39:12,600 --> 00:39:15,900
in flash so it's the same exact same

939
00:39:14,160 --> 00:39:19,020
non-volatile memory<font color="#E5E5E5"> that's otherwise</font>

940
00:39:15,900 --> 00:39:22,380
used<font color="#E5E5E5"> so basically the when you get a new</font>

941
00:39:19,020 --> 00:39:24,120
stm32<font color="#CCCCCC"> it's shipped in state where you</font>

942
00:39:22,380 --> 00:39:27,000
have<font color="#E5E5E5"> full</font><font color="#CCCCCC"> access</font><font color="#E5E5E5"> so that's how Josh was</font>

943
00:39:24,120 --> 00:39:30,600
able<font color="#CCCCCC"> to rework a board and flash up with</font>

944
00:39:27,000 --> 00:39:32,820
new firmware<font color="#CCCCCC"> and there's the</font><font color="#E5E5E5"> ultimate</font>

945
00:39:30,600 --> 00:39:35,220
<font color="#CCCCCC">securities</font><font color="#E5E5E5"> what's called</font><font color="#CCCCCC"> our db2</font><font color="#E5E5E5"> so</font>

946
00:39:32,820 --> 00:39:37,740
there you<font color="#CCCCCC"> have no</font><font color="#E5E5E5"> access but you can see</font>

947
00:39:35,220 --> 00:39:40,950
that<font color="#E5E5E5"> basically if you have a value other</font>

948
00:39:37,740 --> 00:39:45,359
<font color="#CCCCCC">than a</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> CC which correspond to our DP</font>

949
00:39:40,950 --> 00:39:48,120
<font color="#E5E5E5">0 and our db2 respectfully</font><font color="#CCCCCC"> then you have</font>

950
00:39:45,360 --> 00:39:49,380
what's called our DP 1<font color="#E5E5E5"> and this is</font>

951
00:39:48,120 --> 00:39:51,000
interesting because<font color="#CCCCCC"> it doesn't give you</font>

952
00:39:49,380 --> 00:39:52,530
access to the flash<font color="#E5E5E5"> which is actually</font>

953
00:39:51,000 --> 00:39:54,270
where<font color="#E5E5E5"> the cryptographic seed is stored</font>

954
00:39:52,530 --> 00:39:58,740
on the<font color="#E5E5E5"> traceur but it gives you access</font>

955
00:39:54,270 --> 00:40:00,150
to<font color="#E5E5E5"> ram Egizi access to the registers but</font>

956
00:39:58,740 --> 00:40:01,410
it doesn't give you a flash access like

957
00:40:00,150 --> 00:40:03,300
<font color="#E5E5E5">I said and it doesn't even give you</font>

958
00:40:01,410 --> 00:40:05,009
single stepping<font color="#E5E5E5"> as well so connecting a</font>

959
00:40:03,300 --> 00:40:07,290
debugger in this mode will actually

960
00:40:05,010 --> 00:40:10,170
cause the hardware<font color="#CCCCCC"> too hard fault</font><font color="#E5E5E5"> which</font>

961
00:40:07,290 --> 00:40:11,940
we'll see in a second so basically what

962
00:40:10,170 --> 00:40:14,280
we want to<font color="#E5E5E5"> try</font><font color="#CCCCCC"> to do is to downgrade our</font>

963
00:40:11,940 --> 00:40:17,100
DP<font color="#CCCCCC"> 2 which is what the trace or is set</font>

964
00:40:14,280 --> 00:40:19,860
to and we<font color="#E5E5E5"> want to be able to</font><font color="#CCCCCC"> access the</font>

965
00:40:17,100 --> 00:40:24,870
device<font color="#E5E5E5"> at our DP 1 which is somewhat</font>

966
00:40:19,860 --> 00:40:27,300
vulnerable<font color="#E5E5E5"> state so this so I should say</font>

967
00:40:24,870 --> 00:40:30,180
<font color="#E5E5E5">that this</font><font color="#CCCCCC"> is this is</font><font color="#E5E5E5"> the correct way to</font>

968
00:40:27,300 --> 00:40:32,640
approach this<font color="#E5E5E5"> and it's great</font><font color="#CCCCCC"> for doing</font>

969
00:40:30,180 --> 00:40:34,919
<font color="#E5E5E5">an educational talk but in all honesty</font>

970
00:40:32,640 --> 00:40:37,620
there's three of us<font color="#E5E5E5"> and so we did this</font>

971
00:40:34,920 --> 00:40:40,320
<font color="#CCCCCC">completely in the dark</font><font color="#E5E5E5"> over up over</font>

972
00:40:37,620 --> 00:40:42,509
three<font color="#CCCCCC"> months trying</font><font color="#E5E5E5"> different parameters</font>

973
00:40:40,320 --> 00:40:44,700
on our<font color="#CCCCCC"> glitch setups which I'll show</font>

974
00:40:42,510 --> 00:40:46,530
later<font color="#E5E5E5"> and we're able to find this but</font>

975
00:40:44,700 --> 00:40:49,140
I'm here to explain it to<font color="#CCCCCC"> all of you</font><font color="#E5E5E5"> so</font>

976
00:40:46,530 --> 00:40:51,900
that it's easy<font color="#CCCCCC"> to reproduce</font><font color="#E5E5E5"> so if you</font>

977
00:40:49,140 --> 00:40:53,819
actually watch the<font color="#CCCCCC"> stm32 f2 boot</font><font color="#E5E5E5"> you'll</font>

978
00:40:51,900 --> 00:40:56,070
see that it's relatively<font color="#E5E5E5"> slow and it's</font>

979
00:40:53,820 --> 00:40:58,160
only this slow after you power<font color="#CCCCCC"> cycle the</font>

980
00:40:56,070 --> 00:41:00,330
board so it takes approximately 1.8

981
00:40:58,160 --> 00:41:02,310
milliseconds to boot which<font color="#CCCCCC"> is in</font>

982
00:41:00,330 --> 00:41:04,319
microcontroller terms pretty slow so<font color="#CCCCCC"> you</font>

983
00:41:02,310 --> 00:41:05,790
can<font color="#E5E5E5"> see there's the power supply there's</font>

984
00:41:04,320 --> 00:41:08,040
the<font color="#CCCCCC"> eye open</font><font color="#E5E5E5"> and that's approximately</font>

985
00:41:05,790 --> 00:41:10,230
<font color="#E5E5E5">how</font><font color="#CCCCCC"> long it takes to boot the firmware</font>

986
00:41:08,040 --> 00:41:12,630
so you can see that's where the i/o

987
00:41:10,230 --> 00:41:14,510
actually toggles so 1.8 milliseconds

988
00:41:12,630 --> 00:41:17,130
later so we<font color="#E5E5E5"> just</font><font color="#CCCCCC"> wrote some firmware to</font>

989
00:41:14,510 --> 00:41:19,050
basically turn toggle one of the pins

990
00:41:17,130 --> 00:41:20,910
measured it with<font color="#E5E5E5"> an oscilloscope</font><font color="#CCCCCC"> now we</font>

991
00:41:19,050 --> 00:41:23,370
have the timing<font color="#CCCCCC"> of how long that</font><font color="#E5E5E5"> takes</font>

992
00:41:20,910 --> 00:41:24,600
so that's not super interesting because

993
00:41:23,370 --> 00:41:26,790
<font color="#E5E5E5">that's not really</font>

994
00:41:24,600 --> 00:41:29,009
a trigger and each one<font color="#E5E5E5"> of these</font>

995
00:41:26,790 --> 00:41:31,740
microcontrollers internally it<font color="#CCCCCC"> has a</font>

996
00:41:29,010 --> 00:41:33,540
<font color="#E5E5E5">boot rum so it has some some ROM</font>

997
00:41:31,740 --> 00:41:35,370
read-only memory right it's not

998
00:41:33,540 --> 00:41:38,610
non-volatile memory it's not the flash

999
00:41:35,370 --> 00:41:41,130
<font color="#E5E5E5">it's literally a ROM which is inside</font><font color="#CCCCCC"> the</font>

1000
00:41:38,610 --> 00:41:43,470
chip itself<font color="#CCCCCC"> it's it's hard coded it</font>

1001
00:41:41,130 --> 00:41:45,930
cannot be<font color="#CCCCCC"> fixed or patched</font><font color="#E5E5E5"> that gets</font>

1002
00:41:43,470 --> 00:41:47,819
<font color="#CCCCCC">executed first so we wanted</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> actually</font>

1003
00:41:45,930 --> 00:41:49,440
attack that because anything else<font color="#E5E5E5"> is the</font>

1004
00:41:47,820 --> 00:41:52,380
user application and<font color="#CCCCCC"> that's what Josh</font>

1005
00:41:49,440 --> 00:41:54,390
said<font color="#E5E5E5"> last year so you can kind of start</font>

1006
00:41:52,380 --> 00:41:56,190
to<font color="#E5E5E5"> fiddle this down so you</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> that one</font>

1007
00:41:54,390 --> 00:41:58,589
<font color="#E5E5E5">point four milliseconds of the reboot</font>

1008
00:41:56,190 --> 00:42:00,690
nothing actually happens<font color="#E5E5E5"> because this is</font>

1009
00:41:58,590 --> 00:42:02,190
now the reset<font color="#CCCCCC"> line and so</font><font color="#E5E5E5"> the reset</font><font color="#CCCCCC"> line</font>

1010
00:42:00,690 --> 00:42:03,600
goes high<font color="#E5E5E5"> after one point four in</font>

1011
00:42:02,190 --> 00:42:05,330
milliseconds so you can ignore<font color="#CCCCCC"> the first</font>

1012
00:42:03,600 --> 00:42:08,580
one point four in milliseconds<font color="#E5E5E5"> after</font><font color="#CCCCCC"> you</font>

1013
00:42:05,330 --> 00:42:10,500
cycle<font color="#CCCCCC"> the power</font><font color="#E5E5E5"> so now the next step</font>

1014
00:42:08,580 --> 00:42:11,850
<font color="#CCCCCC">that you</font><font color="#E5E5E5"> can actually do is you</font><font color="#CCCCCC"> can</font>

1015
00:42:10,500 --> 00:42:14,970
connect what's called a shunt resistor

1016
00:42:11,850 --> 00:42:17,220
so in<font color="#CCCCCC"> the U you I mean so oscilloscopes</font>

1017
00:42:14,970 --> 00:42:18,779
are there to measure<font color="#CCCCCC"> voltage and so you</font>

1018
00:42:17,220 --> 00:42:20,370
want<font color="#E5E5E5"> to actually measure current to be</font>

1019
00:42:18,780 --> 00:42:22,290
able<font color="#CCCCCC"> to know how much</font><font color="#E5E5E5"> power consumption</font>

1020
00:42:20,370 --> 00:42:23,850
<font color="#CCCCCC">I mean how much power is being consumed</font>

1021
00:42:22,290 --> 00:42:25,290
<font color="#E5E5E5">by device so you do what's called a</font>

1022
00:42:23,850 --> 00:42:28,230
shunt measurement and that's what I have

1023
00:42:25,290 --> 00:42:29,640
on<font color="#E5E5E5"> this slide right</font><font color="#CCCCCC"> here so you</font><font color="#E5E5E5"> have the</font>

1024
00:42:28,230 --> 00:42:31,440
blue signal is now<font color="#CCCCCC"> actually the power</font>

1025
00:42:29,640 --> 00:42:33,660
consumption<font color="#CCCCCC"> and so now you</font><font color="#E5E5E5"> can actually</font>

1026
00:42:31,440 --> 00:42:35,640
<font color="#E5E5E5">look and see</font><font color="#CCCCCC"> what's happening</font><font color="#E5E5E5"> so the</font>

1027
00:42:33,660 --> 00:42:37,470
first thing<font color="#CCCCCC"> that happens is we have the</font>

1028
00:42:35,640 --> 00:42:39,060
<font color="#E5E5E5">execution of the boot</font><font color="#CCCCCC"> ROM</font><font color="#E5E5E5"> so you can see</font>

1029
00:42:37,470 --> 00:42:41,129
the in the power consumption curve you

1030
00:42:39,060 --> 00:42:44,580
<font color="#CCCCCC">can clearly see</font><font color="#E5E5E5"> this moment in time then</font>

1031
00:42:41,130 --> 00:42:47,190
you<font color="#E5E5E5"> have basically where the flash and</font>

1032
00:42:44,580 --> 00:42:49,560
option bytes actually get read somewhat

1033
00:42:47,190 --> 00:42:51,750
at least<font color="#E5E5E5"> within the boot</font><font color="#CCCCCC"> ROM and finally</font>

1034
00:42:49,560 --> 00:42:54,090
the third<font color="#E5E5E5"> distinctive moment in time is</font>

1035
00:42:51,750 --> 00:42:57,030
where the application actually<font color="#E5E5E5"> begins to</font>

1036
00:42:54,090 --> 00:42:58,980
execute so now we've taken this<font color="#E5E5E5"> 1.8</font>

1037
00:42:57,030 --> 00:43:01,830
milliseconds which is<font color="#E5E5E5"> a relatively long</font>

1038
00:42:58,980 --> 00:43:03,480
<font color="#CCCCCC">time and reduced it to 200 microseconds</font>

1039
00:43:01,830 --> 00:43:05,880
that we're actually<font color="#E5E5E5"> interested in and</font>

1040
00:43:03,480 --> 00:43:07,830
<font color="#E5E5E5">not only that the we know that we're</font>

1041
00:43:05,880 --> 00:43:09,810
<font color="#E5E5E5">actually interested in having slightly</font>

1042
00:43:07,830 --> 00:43:11,970
<font color="#CCCCCC">higher power consumption than the normal</font>

1043
00:43:09,810 --> 00:43:15,720
execution of the bootloader<font color="#E5E5E5"> or of the</font>

1044
00:43:11,970 --> 00:43:18,450
boot<font color="#CCCCCC"> ROM rather and this is somewhere</font>

1045
00:43:15,720 --> 00:43:21,270
between let's say 170 microseconds and

1046
00:43:18,450 --> 00:43:22,980
200 microseconds<font color="#CCCCCC"> so this is the time at</font>

1047
00:43:21,270 --> 00:43:25,140
which<font color="#CCCCCC"> we actually need to glitch and</font>

1048
00:43:22,980 --> 00:43:27,300
this is<font color="#E5E5E5"> also reasonable parameters if</font>

1049
00:43:25,140 --> 00:43:30,029
you're trying<font color="#E5E5E5"> to reproduce this at home</font>

1050
00:43:27,300 --> 00:43:33,120
<font color="#E5E5E5">so what do you need to reproduce this</font>

1051
00:43:30,030 --> 00:43:35,280
<font color="#E5E5E5">thing so I the greatest thing</font><font color="#CCCCCC"> that came</font>

1052
00:43:33,120 --> 00:43:37,410
out<font color="#E5E5E5"> in the last</font><font color="#CCCCCC"> couple of years is</font><font color="#E5E5E5"> the</font>

1053
00:43:35,280 --> 00:43:38,530
these cheap Chinese power supplies where

1054
00:43:37,410 --> 00:43:41,200
you take

1055
00:43:38,530 --> 00:43:43,360
<font color="#CCCCCC">a cheap you know</font><font color="#E5E5E5"> old wall wart from one</font>

1056
00:43:41,200 --> 00:43:44,799
of your old Linksys routers<font color="#E5E5E5"> you plug it</font>

1057
00:43:43,360 --> 00:43:47,560
in and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> you actually have a</font>

1058
00:43:44,800 --> 00:43:49,570
controllable power supply with with

1059
00:43:47,560 --> 00:43:51,850
voltage and current and you can<font color="#CCCCCC"> adjust</font>

1060
00:43:49,570 --> 00:43:53,950
this and<font color="#E5E5E5"> control this and so that's what</font>

1061
00:43:51,850 --> 00:43:55,990
we're<font color="#CCCCCC"> using here the second</font><font color="#E5E5E5"> thing that I</font>

1062
00:43:53,950 --> 00:43:57,549
have on<font color="#CCCCCC"> the I mean the second thing that</font>

1063
00:43:55,990 --> 00:43:59,740
I have to<font color="#CCCCCC"> actually control the</font><font color="#E5E5E5"> timing is</font>

1064
00:43:57,550 --> 00:44:01,630
an<font color="#E5E5E5"> FPGA</font><font color="#CCCCCC"> I mean I use that PGA's for</font>

1065
00:43:59,740 --> 00:44:03,790
everything and this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> something that</font>

1066
00:44:01,630 --> 00:44:06,490
<font color="#E5E5E5">was easiest to put together with an FPGA</font>

1067
00:44:03,790 --> 00:44:09,820
because<font color="#E5E5E5"> FPGAs have constant timing so</font>

1068
00:44:06,490 --> 00:44:11,529
finally we have<font color="#CCCCCC"> a multiplexer there as</font>

1069
00:44:09,820 --> 00:44:13,840
well and the multiplexer is actually

1070
00:44:11,530 --> 00:44:17,110
switching between<font color="#E5E5E5"> two voltages</font><font color="#CCCCCC"> between</font>

1071
00:44:13,840 --> 00:44:19,510
ground<font color="#E5E5E5"> so completely cutting the voltage</font>

1072
00:44:17,110 --> 00:44:21,910
off and the normal operating voltage<font color="#CCCCCC"> of</font>

1073
00:44:19,510 --> 00:44:23,980
the<font color="#E5E5E5"> microcontroller and finally we have</font>

1074
00:44:21,910 --> 00:44:26,770
a debugger<font color="#CCCCCC"> the j-link</font>

1075
00:44:23,980 --> 00:44:30,250
<font color="#E5E5E5">which is highly advised if you want to</font>

1076
00:44:26,770 --> 00:44:32,590
ever do<font color="#CCCCCC"> JTAG stuff so it's just a JTAG</font>

1077
00:44:30,250 --> 00:44:34,870
debugger<font color="#E5E5E5"> and basically what happens is</font>

1078
00:44:32,590 --> 00:44:37,360
<font color="#E5E5E5">you let this run</font><font color="#CCCCCC"> for a while and it</font>

1079
00:44:34,870 --> 00:44:40,569
looks like<font color="#E5E5E5"> this it's not</font><font color="#CCCCCC"> really super</font>

1080
00:44:37,360 --> 00:44:42,550
super eventful<font color="#CCCCCC"> so you can see that that</font>

1081
00:44:40,570 --> 00:44:43,780
the voltage<font color="#E5E5E5"> the yellow signal is</font>

1082
00:44:42,550 --> 00:44:45,040
actually<font color="#CCCCCC"> the voltage</font><font color="#E5E5E5"> and you can see</font>

1083
00:44:43,780 --> 00:44:45,960
we're<font color="#CCCCCC"> just dipping</font><font color="#E5E5E5"> the voltage at</font>

1084
00:44:45,040 --> 00:44:47,650
different points in time<font color="#CCCCCC"> and</font>

1085
00:44:45,960 --> 00:44:51,370
simultaneously<font color="#E5E5E5"> we have a Python script</font>

1086
00:44:47,650 --> 00:44:53,770
checking if we have<font color="#CCCCCC"> JTAG access or</font><font color="#E5E5E5"> not</font>

1087
00:44:51,370 --> 00:44:55,630
and some pro tip<font color="#E5E5E5"> to all the new dads</font><font color="#CCCCCC"> if</font>

1088
00:44:53,770 --> 00:44:58,060
you do<font color="#E5E5E5"> this at home</font><font color="#CCCCCC"> you can turn your</font>

1089
00:44:55,630 --> 00:44:59,230
oscilloscope<font color="#E5E5E5"> towards the door so</font><font color="#CCCCCC"> that</font>

1090
00:44:58,060 --> 00:45:01,240
<font color="#E5E5E5">you when you get up at night because</font><font color="#CCCCCC"> the</font>

1091
00:44:59,230 --> 00:45:03,760
<font color="#E5E5E5">baby's crying you can see if it's still</font>

1092
00:45:01,240 --> 00:45:06,459
running<font color="#E5E5E5"> or not so it's it's very it's</font>

1093
00:45:03,760 --> 00:45:08,500
highly advised<font color="#E5E5E5"> so now Thomas is</font><font color="#CCCCCC"> gonna</font>

1094
00:45:06,460 --> 00:45:15,070
tell<font color="#CCCCCC"> us how how to get the seed into</font>

1095
00:45:08,500 --> 00:45:17,530
into<font color="#CCCCCC"> RAM so we had this</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> running</font>

1096
00:45:15,070 --> 00:45:19,650
for<font color="#E5E5E5"> three months roughly across three</font>

1097
00:45:17,530 --> 00:45:21,670
continents<font color="#E5E5E5"> because josh is in America</font>

1098
00:45:19,650 --> 00:45:24,460
<font color="#CCCCCC">Dimitri</font><font color="#E5E5E5"> is in Russia and I'm in Germany</font>

1099
00:45:21,670 --> 00:45:26,410
<font color="#CCCCCC">and so it took us three months to get a</font>

1100
00:45:24,460 --> 00:45:28,200
successful<font color="#E5E5E5"> glitch and even then we</font>

1101
00:45:26,410 --> 00:45:31,029
didn't<font color="#E5E5E5"> believe it at</font><font color="#CCCCCC"> first because we</font>

1102
00:45:28,200 --> 00:45:33,939
exhausted<font color="#E5E5E5"> everything basically</font><font color="#CCCCCC"> and the</font>

1103
00:45:31,030 --> 00:45:36,190
only reason we finally got<font color="#E5E5E5"> it</font><font color="#CCCCCC"> working</font><font color="#E5E5E5"> is</font>

1104
00:45:33,940 --> 00:45:39,910
that<font color="#E5E5E5"> we did a mistake where we mistook</font>

1105
00:45:36,190 --> 00:45:41,740
<font color="#CCCCCC">17 microseconds with 170 microseconds</font>

1106
00:45:39,910 --> 00:45:43,359
<font color="#CCCCCC">and had it run for a longer time</font><font color="#E5E5E5"> and</font>

1107
00:45:41,740 --> 00:45:45,609
that's<font color="#E5E5E5"> how we found out that the boot</font>

1108
00:45:43,360 --> 00:45:47,200
<font color="#CCCCCC">rom is actually super slow to boot on</font>

1109
00:45:45,610 --> 00:45:48,940
this device

1110
00:45:47,200 --> 00:45:52,890
but and<font color="#E5E5E5"> so once we</font><font color="#CCCCCC"> have this downgrade</font>

1111
00:45:48,940 --> 00:45:56,530
<font color="#E5E5E5">from our</font><font color="#CCCCCC"> db2 to</font><font color="#E5E5E5"> our</font><font color="#CCCCCC"> ep-1</font><font color="#E5E5E5"> we were able to</font>

1112
00:45:52,890 --> 00:45:59,020
read the<font color="#CCCCCC"> RAM but we cannot read the</font>

1113
00:45:56,530 --> 00:46:02,920
flash which actually contains the<font color="#CCCCCC"> seed</font>

1114
00:45:59,020 --> 00:46:04,930
and so how do<font color="#E5E5E5"> we find this and our idea</font>

1115
00:46:02,920 --> 00:46:07,210
was we start reviewing the upgrade

1116
00:46:04,930 --> 00:46:09,700
procedure<font color="#E5E5E5"> because on the</font><font color="#CCCCCC"> tracer</font>

1117
00:46:07,210 --> 00:46:11,740
the way the bootloader works is it

1118
00:46:09,700 --> 00:46:13,328
<font color="#CCCCCC">doesn't</font><font color="#E5E5E5"> require your</font><font color="#CCCCCC"> PIN or anything to</font>

1119
00:46:11,740 --> 00:46:14,770
upgrade the firmware<font color="#E5E5E5"> which makes sense</font>

1120
00:46:13,329 --> 00:46:16,900
because let's<font color="#E5E5E5"> say you have a buck and</font>

1121
00:46:14,770 --> 00:46:19,570
the<font color="#E5E5E5"> pin function</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> want to somehow be</font>

1122
00:46:16,900 --> 00:46:21,970
<font color="#E5E5E5">able to get rid of it right</font><font color="#CCCCCC"> and the</font>

1123
00:46:19,570 --> 00:46:24,339
other<font color="#E5E5E5"> thing is if</font><font color="#CCCCCC"> you flash</font><font color="#E5E5E5"> a fully</font>

1124
00:46:21,970 --> 00:46:28,450
valid firmware<font color="#E5E5E5"> it retains</font><font color="#CCCCCC"> the data it</font>

1125
00:46:24,339 --> 00:46:31,299
retains<font color="#E5E5E5"> your seat if you flash and</font>

1126
00:46:28,450 --> 00:46:34,960
<font color="#E5E5E5">non-genuine one it</font><font color="#CCCCCC"> actually will erase</font>

1127
00:46:31,300 --> 00:46:36,490
your<font color="#E5E5E5"> seat and so on and the big and they</font>

1128
00:46:34,960 --> 00:46:38,950
do a<font color="#E5E5E5"> really good job on the firmware</font>

1129
00:46:36,490 --> 00:46:40,359
verification we reviewed it for days and

1130
00:46:38,950 --> 00:46:43,118
days<font color="#CCCCCC"> and days and</font><font color="#E5E5E5"> didn't</font><font color="#CCCCCC"> find anything</font>

1131
00:46:40,359 --> 00:46:46,270
<font color="#E5E5E5">but</font><font color="#CCCCCC"> so how does this upgrade procedure</font>

1132
00:46:43,119 --> 00:46:48,280
work how is the seat retained<font color="#E5E5E5"> and so</font>

1133
00:46:46,270 --> 00:46:50,440
when you review the<font color="#E5E5E5"> relevant code you</font>

1134
00:46:48,280 --> 00:46:53,470
see that there's a call<font color="#CCCCCC"> to back up</font>

1135
00:46:50,440 --> 00:46:56,079
<font color="#E5E5E5">metadata which sounds like you're just</font>

1136
00:46:53,470 --> 00:46:58,689
going<font color="#CCCCCC"> to retain</font><font color="#E5E5E5"> somehow your data and</font>

1137
00:46:56,079 --> 00:47:01,060
indeed<font color="#E5E5E5"> you can see that it's literally a</font>

1138
00:46:58,690 --> 00:47:05,230
mem copy from<font color="#E5E5E5"> the data on flash</font><font color="#CCCCCC"> we're</font>

1139
00:47:01,060 --> 00:47:07,869
interested<font color="#E5E5E5"> in</font><font color="#CCCCCC"> into rum</font><font color="#E5E5E5"> and so our basic</font>

1140
00:47:05,230 --> 00:47:10,690
<font color="#E5E5E5">procedure was we go into a boot loader</font>

1141
00:47:07,869 --> 00:47:12,430
<font color="#E5E5E5">we started firmware upgrade and we we</font>

1142
00:47:10,690 --> 00:47:14,619
<font color="#CCCCCC">stopped it before the run</font><font color="#E5E5E5"> gets cleared</font>

1143
00:47:12,430 --> 00:47:16,930
because<font color="#E5E5E5"> if you finish the</font><font color="#CCCCCC"> upgrade</font>

1144
00:47:14,619 --> 00:47:19,420
procedure<font color="#E5E5E5"> the treasurer actually clears</font>

1145
00:47:16,930 --> 00:47:22,029
its memory again<font color="#E5E5E5"> which is a very decent</font>

1146
00:47:19,420 --> 00:47:23,800
way to do it but<font color="#E5E5E5"> we</font><font color="#CCCCCC"> found a</font><font color="#E5E5E5"> way to</font>

1147
00:47:22,030 --> 00:47:25,540
retain<font color="#CCCCCC"> it</font><font color="#E5E5E5"> and run so it turns out that</font>

1148
00:47:23,800 --> 00:47:26,490
when<font color="#CCCCCC"> you start the firmware</font><font color="#E5E5E5"> upgrade</font>

1149
00:47:25,540 --> 00:47:29,589
process

1150
00:47:26,490 --> 00:47:33,009
it eventually asks you to verify<font color="#E5E5E5"> the</font>

1151
00:47:29,589 --> 00:47:35,470
checksum of<font color="#E5E5E5"> what you just</font><font color="#CCCCCC"> flashed</font><font color="#E5E5E5"> and it</font>

1152
00:47:33,010 --> 00:47:38,650
turns out<font color="#E5E5E5"> that at this point in time the</font>

1153
00:47:35,470 --> 00:47:39,040
seed is still in RAM<font color="#E5E5E5"> and we can read it</font>

1154
00:47:38,650 --> 00:47:43,119
out

1155
00:47:39,040 --> 00:47:45,849
we are<font color="#E5E5E5"> RDP</font><font color="#CCCCCC"> - and this</font><font color="#E5E5E5"> is relatively</font>

1156
00:47:43,119 --> 00:47:48,460
<font color="#E5E5E5">simple simple to you once you</font><font color="#CCCCCC"> actually</font>

1157
00:47:45,849 --> 00:47:50,560
<font color="#CCCCCC">managed to glitch the device you</font>

1158
00:47:48,460 --> 00:47:54,010
<font color="#CCCCCC">basically just run open OCD dump image</font>

1159
00:47:50,560 --> 00:47:56,940
you<font color="#E5E5E5"> get an image of the SRAM</font><font color="#CCCCCC"> and you</font>

1160
00:47:54,010 --> 00:48:01,750
have the whole<font color="#CCCCCC"> Ram contents and so</font>

1161
00:47:56,940 --> 00:48:04,030
how what are we gonna do Thomas<font color="#E5E5E5"> what</font>

1162
00:48:01,750 --> 00:48:07,810
<font color="#E5E5E5">what</font><font color="#CCCCCC"> high-tech hacking tool will we be</font>

1163
00:48:04,030 --> 00:48:09,730
using today<font color="#E5E5E5"> to extract the</font><font color="#CCCCCC"> C so we</font>

1164
00:48:07,810 --> 00:48:13,060
actually before<font color="#E5E5E5"> we were</font><font color="#CCCCCC"> successful we</font>

1165
00:48:09,730 --> 00:48:15,730
had hours of<font color="#E5E5E5"> talks on how do we how is</font>

1166
00:48:13,060 --> 00:48:17,890
this heat stored and so on<font color="#CCCCCC"> and we</font><font color="#E5E5E5"> found</font>

1167
00:48:15,730 --> 00:48:20,920
this super<font color="#E5E5E5"> sophisticated</font><font color="#CCCCCC"> heat extraction</font>

1168
00:48:17,890 --> 00:48:22,109
tool that only<font color="#E5E5E5"> runs on POSIX and POSIX</font>

1169
00:48:20,920 --> 00:48:28,630
like systems

1170
00:48:22,110 --> 00:48:30,280
it's called strings<font color="#E5E5E5"> right and so</font>

1171
00:48:28,630 --> 00:48:32,830
basically it turns<font color="#E5E5E5"> out then when you</font>

1172
00:48:30,280 --> 00:48:36,250
have a firmware dump as sweet if you

1173
00:48:32,830 --> 00:48:41,020
have a<font color="#CCCCCC"> random as we do now</font><font color="#E5E5E5"> and we go to</font>

1174
00:48:36,250 --> 00:48:43,090
we<font color="#CCCCCC"> just run strings on the dump</font><font color="#E5E5E5"> we get a</font>

1175
00:48:41,020 --> 00:48:47,050
<font color="#E5E5E5">couple of really nice words and I don't</font>

1176
00:48:43,090 --> 00:48:49,650
<font color="#E5E5E5">know if you remember the intro but this</font>

1177
00:48:47,050 --> 00:48:49,650
is your seat

1178
00:48:53,440 --> 00:48:57,100
and you might<font color="#E5E5E5"> be wondering what what</font>

1179
00:48:55,390 --> 00:49:00,240
<font color="#E5E5E5">this little</font><font color="#CCCCCC"> number is this is your PIN</font>

1180
00:48:57,100 --> 00:49:00,240
to the device

1181
00:49:01,320 --> 00:49:12,670
that was a great day<font color="#E5E5E5"> and so Josh or one</font>

1182
00:49:09,040 --> 00:49:16,210
of Josh employees<font color="#E5E5E5"> took all this mess we</font>

1183
00:49:12,670 --> 00:49:18,550
created on<font color="#E5E5E5"> our desks and made it into</font>

1184
00:49:16,210 --> 00:49:21,160
this nice device which is basically<font color="#E5E5E5"> a</font>

1185
00:49:18,550 --> 00:49:27,180
socket<font color="#E5E5E5"> where you put in your chip and</font>

1186
00:49:21,160 --> 00:49:27,180
<font color="#E5E5E5">then we can read out the</font><font color="#CCCCCC"> seed and so on</font>

1187
00:49:27,510 --> 00:49:32,320
including the<font color="#E5E5E5"> board design the</font><font color="#CCCCCC"> fpga</font>

1188
00:49:30,490 --> 00:49:33,970
codes for the very<font color="#CCCCCC"> locker that we</font><font color="#E5E5E5"> used I</font>

1189
00:49:32,320 --> 00:49:35,710
mean<font color="#CCCCCC"> if</font><font color="#E5E5E5"> somebody wants to they can apply</font>

1190
00:49:33,970 --> 00:49:37,359
it and do the<font color="#E5E5E5"> same thing with one of the</font>

1191
00:49:35,710 --> 00:49:39,940
ice sticks<font color="#E5E5E5"> or one of the more</font>

1192
00:49:37,360 --> 00:49:42,490
<font color="#CCCCCC">open-source friendly</font><font color="#E5E5E5"> fpga boards this</font>

1193
00:49:39,940 --> 00:49:45,160
just happens to<font color="#E5E5E5"> be the one that we all</font>

1194
00:49:42,490 --> 00:49:47,200
had lying<font color="#E5E5E5"> around and could reproduce the</font>

1195
00:49:45,160 --> 00:49:49,299
work<font color="#E5E5E5"> with you can go ahead and do it I</font>

1196
00:49:47,200 --> 00:49:50,740
mean we suspect<font color="#CCCCCC"> I think Thomas said</font><font color="#E5E5E5"> we</font>

1197
00:49:49,300 --> 00:49:52,600
suspect you might be able<font color="#CCCCCC"> to do with an</font>

1198
00:49:50,740 --> 00:49:55,859
Arduino as well because the actual

1199
00:49:52,600 --> 00:49:58,390
glitch pulse is only approximately<font color="#E5E5E5"> 60</font>

1200
00:49:55,860 --> 00:50:00,550
<font color="#E5E5E5">microseconds or sorry</font><font color="#CCCCCC"> six six</font>

1201
00:49:58,390 --> 00:50:02,020
<font color="#E5E5E5">microseconds and in time so it's a</font>

1202
00:50:00,550 --> 00:50:04,240
relatively<font color="#E5E5E5"> slow signal as well so it</font>

1203
00:50:02,020 --> 00:50:05,800
should be<font color="#E5E5E5"> relatively repeatable even</font>

1204
00:50:04,240 --> 00:50:09,399
with even<font color="#CCCCCC"> with</font><font color="#E5E5E5"> something cheaper than</font>

1205
00:50:05,800 --> 00:50:10,930
this but this<font color="#CCCCCC"> is a way to automate this</font>

1206
00:50:09,400 --> 00:50:13,000
even<font color="#E5E5E5"> better and to not have dangling</font>

1207
00:50:10,930 --> 00:50:15,490
wires<font color="#E5E5E5"> or any of the small soldering that</font>

1208
00:50:13,000 --> 00:50:16,720
<font color="#E5E5E5">was required to do it in</font><font color="#CCCCCC"> C dough in the</font>

1209
00:50:15,490 --> 00:50:19,689
device which we had<font color="#CCCCCC"> on the previous</font>

1210
00:50:16,720 --> 00:50:22,990
<font color="#E5E5E5">slide so all</font><font color="#CCCCCC"> that we're</font><font color="#E5E5E5"> gonna have on</font>

1211
00:50:19,690 --> 00:50:26,470
github and so I think the<font color="#CCCCCC"> the final the</font>

1212
00:50:22,990 --> 00:50:31,509
<font color="#CCCCCC">final thing what's one</font><font color="#E5E5E5"> more thing before</font>

1213
00:50:26,470 --> 00:50:34,299
<font color="#E5E5E5">we are sorry one more thing so this</font>

1214
00:50:31,510 --> 00:50:36,190
breaks a lot of the the<font color="#E5E5E5"> treasure</font>

1215
00:50:34,300 --> 00:50:38,680
security but there is a way<font color="#CCCCCC"> to protect</font>

1216
00:50:36,190 --> 00:50:41,920
<font color="#CCCCCC">your seat against this so if you use a</font>

1217
00:50:38,680 --> 00:50:45,399
passphrase<font color="#E5E5E5"> on your device</font><font color="#CCCCCC"> the way we</font>

1218
00:50:41,920 --> 00:50:47,320
understood it it<font color="#CCCCCC"> basically doesn't allow</font>

1219
00:50:45,400 --> 00:50:48,580
somebody<font color="#E5E5E5"> with hardware</font><font color="#CCCCCC"> access to steal</font>

1220
00:50:47,320 --> 00:50:51,550
all<font color="#CCCCCC"> your funds so if you add a</font>

1221
00:50:48,580 --> 00:50:53,410
passphrase<font color="#CCCCCC"> to your treasure a good</font>

1222
00:50:51,550 --> 00:50:56,530
passphrase<font color="#E5E5E5"> and your machine</font><font color="#CCCCCC"> has not</font>

1223
00:50:53,410 --> 00:50:58,839
already<font color="#E5E5E5"> owned you can somehow you can</font>

1224
00:50:56,530 --> 00:51:01,960
somewhat<font color="#E5E5E5"> protect against this but a lot</font>

1225
00:50:58,840 --> 00:51:04,710
<font color="#CCCCCC">of</font><font color="#E5E5E5"> people don't so we are</font><font color="#CCCCCC"> really sorry</font>

1226
00:51:01,960 --> 00:51:08,490
<font color="#E5E5E5">we didn't mean any</font><font color="#CCCCCC"> harm</font>

1227
00:51:04,710 --> 00:51:12,359
so I mean yeah<font color="#E5E5E5"> that's the conclusion I</font>

1228
00:51:08,490 --> 00:51:13,589
would<font color="#E5E5E5"> say so so yeah</font><font color="#CCCCCC"> I mean we</font><font color="#E5E5E5"> so all</font>

1229
00:51:12,359 --> 00:51:16,078
this stuff<font color="#E5E5E5"> we're gonna put online</font><font color="#CCCCCC"> I</font>

1230
00:51:13,589 --> 00:51:19,380
guess I said<font color="#E5E5E5"> so you can follow us for</font>

1231
00:51:16,079 --> 00:51:19,829
the links on the online<font color="#E5E5E5"> so</font><font color="#CCCCCC"> wallet not</font>

1232
00:51:19,380 --> 00:51:21,480
fail

1233
00:51:19,829 --> 00:51:24,660
it's a domain<font color="#CCCCCC"> name it believe it or not</font>

1234
00:51:21,480 --> 00:51:26,609
fail is a TLD<font color="#E5E5E5"> so you can go to</font>

1235
00:51:24,660 --> 00:51:29,000
github.com<font color="#CCCCCC"> well</font><font color="#E5E5E5"> let that fail Twitter</font><font color="#CCCCCC"> go</font>

1236
00:51:26,609 --> 00:51:32,160
calm while it fail you<font color="#E5E5E5"> can follow me</font>

1237
00:51:29,000 --> 00:51:34,170
Thomas and Josh on Twitter as<font color="#CCCCCC"> well and</font>

1238
00:51:32,160 --> 00:51:36,240
like I said we'll be releasing all this

1239
00:51:34,170 --> 00:51:38,760
stuff so<font color="#CCCCCC"> it'll go up slowly</font><font color="#E5E5E5"> just cuz I</font>

1240
00:51:36,240 --> 00:51:41,009
think<font color="#E5E5E5"> when we set out six months</font><font color="#CCCCCC"> ago we</font>

1241
00:51:38,760 --> 00:51:43,619
did<font color="#CCCCCC"> not expect us</font><font color="#E5E5E5"> to have 100% success</font>

1242
00:51:41,010 --> 00:51:47,490
<font color="#E5E5E5">in everything that we were planning to</font>

1243
00:51:43,619 --> 00:51:48,660
<font color="#E5E5E5">do so that's a first</font><font color="#CCCCCC"> for me this has us</font>

1244
00:51:47,490 --> 00:51:50,990
part is that we have more

1245
00:51:48,660 --> 00:51:54,930
vulnerabilities<font color="#CCCCCC"> to other wallet</font><font color="#E5E5E5"> to add</font>

1246
00:51:50,990 --> 00:51:56,700
only<font color="#CCCCCC"> one</font><font color="#E5E5E5"> hour and so we also have some</font>

1247
00:51:54,930 --> 00:51:58,770
<font color="#E5E5E5">stuff</font><font color="#CCCCCC"> to give out so we have the</font>

1248
00:51:56,700 --> 00:52:01,290
hardware implant PCBs we have<font color="#CCCCCC"> a thousand</font>

1249
00:51:58,770 --> 00:52:04,500
<font color="#E5E5E5">of them</font><font color="#CCCCCC"> if you want to get some</font><font color="#E5E5E5"> money</font><font color="#CCCCCC"> -</font>

1250
00:52:01,290 --> 00:52:08,700
yeah we even have components<font color="#E5E5E5"> for them</font>

1251
00:52:04,500 --> 00:52:12,200
for like 100<font color="#CCCCCC"> devices so hit us up and we</font>

1252
00:52:08,700 --> 00:52:12,200
can do something<font color="#E5E5E5"> thank you</font>

1253
00:52:15,280 --> 00:52:18,419
[Music]

1254
00:52:22,820 --> 00:52:27,060
amazing talk I feel<font color="#E5E5E5"> really inspired</font><font color="#CCCCCC"> to</font>

1255
00:52:25,410 --> 00:52:29,310
break things<font color="#E5E5E5"> apart in a very creative</font>

1256
00:52:27,060 --> 00:52:31,590
way<font color="#CCCCCC"> we have some time left for</font><font color="#E5E5E5"> questions</font>

1257
00:52:29,310 --> 00:52:34,799
so<font color="#CCCCCC"> if you have questions please</font><font color="#E5E5E5"> line up</font>

1258
00:52:31,590 --> 00:52:55,860
at<font color="#E5E5E5"> the microphones we're going to start</font>

1259
00:52:34,800 --> 00:52:58,590
with a question<font color="#E5E5E5"> from the</font><font color="#CCCCCC"> internet so</font>

1260
00:52:55,860 --> 00:53:00,570
maybe let's start with bit<font color="#E5E5E5"> fee so we</font>

1261
00:52:58,590 --> 00:53:03,480
only<font color="#E5E5E5"> talked</font><font color="#CCCCCC"> about somewhat secured</font>

1262
00:53:00,570 --> 00:53:06,390
wallets we didn't want<font color="#E5E5E5"> to use the</font>

1263
00:53:03,480 --> 00:53:10,620
Chinese<font color="#E5E5E5"> phone in this talk</font><font color="#CCCCCC"> so we</font><font color="#E5E5E5"> love</font>

1264
00:53:06,390 --> 00:53:12,629
pretty hard and we<font color="#E5E5E5"> ordered some but yeah</font>

1265
00:53:10,620 --> 00:53:15,180
yeah and<font color="#E5E5E5"> I mean this was covered</font>

1266
00:53:12,630 --> 00:53:16,830
<font color="#E5E5E5">extensively so so another guy who you</font>

1267
00:53:15,180 --> 00:53:19,620
<font color="#CCCCCC">should follow on Twitter cyber Gibbons</font>

1268
00:53:16,830 --> 00:53:21,090
<font color="#E5E5E5">gave a talk at</font><font color="#CCCCCC"> Hardware do on on the</font>

1269
00:53:19,620 --> 00:53:22,500
topic<font color="#CCCCCC"> of the bit fight</font><font color="#E5E5E5"> he was</font>

1270
00:53:21,090 --> 00:53:23,730
summarizing research that he did in

1271
00:53:22,500 --> 00:53:25,500
<font color="#E5E5E5">conjunction</font><font color="#CCCCCC"> with a bunch of</font><font color="#E5E5E5"> other people</font>

1272
00:53:23,730 --> 00:53:27,210
<font color="#E5E5E5">as well</font><font color="#CCCCCC"> so if you're</font><font color="#E5E5E5"> interested</font><font color="#CCCCCC"> in the</font>

1273
00:53:25,500 --> 00:53:30,680
<font color="#CCCCCC">bid file you should go</font><font color="#E5E5E5"> look at them so</font>

1274
00:53:27,210 --> 00:53:33,300
the second question<font color="#CCCCCC"> was about</font><font color="#E5E5E5"> ARM based</font>

1275
00:53:30,680 --> 00:53:35,549
controllers I mean all<font color="#CCCCCC"> of these were ARM</font>

1276
00:53:33,300 --> 00:53:38,160
based<font color="#E5E5E5"> every single chip as far as I know</font>

1277
00:53:35,550 --> 00:53:40,230
that<font color="#CCCCCC"> we looked</font><font color="#E5E5E5"> at was was ARM based in</font>

1278
00:53:38,160 --> 00:53:42,029
one way<font color="#E5E5E5"> or another yeah and there's so</font>

1279
00:53:40,230 --> 00:53:43,980
if you're<font color="#E5E5E5"> interested in this look at</font>

1280
00:53:42,030 --> 00:53:46,290
glitching<font color="#E5E5E5"> the Nintendo switch where they</font>

1281
00:53:43,980 --> 00:53:48,240
glitch the<font color="#E5E5E5"> Tegra used in the Nintendo</font>

1282
00:53:46,290 --> 00:53:50,190
switch which<font color="#E5E5E5"> is very interesting and</font>

1283
00:53:48,240 --> 00:53:53,759
<font color="#CCCCCC">will give a lot of</font><font color="#E5E5E5"> inspiration in that</font>

1284
00:53:50,190 --> 00:53:56,960
regard basically<font color="#E5E5E5"> thank you a question</font>

1285
00:53:53,760 --> 00:53:56,960
for microphone<font color="#CCCCCC"> for please</font>

1286
00:53:57,980 --> 00:54:04,820
city of you first thank you<font color="#CCCCCC"> for the</font>

1287
00:54:02,720 --> 00:54:07,580
issues as soon<font color="#CCCCCC"> as I recollected rocks</font>

1288
00:54:04,820 --> 00:54:11,750
<font color="#E5E5E5">and if anyone is</font><font color="#CCCCCC"> interested</font><font color="#E5E5E5"> in affecting</font>

1289
00:54:07,580 --> 00:54:13,069
other words which<font color="#CCCCCC"> you really</font><font color="#E5E5E5"> Thursday it</font>

1290
00:54:11,750 --> 00:54:15,770
<font color="#CCCCCC">working</font><font color="#E5E5E5"> me to write an article</font>

1291
00:54:13,070 --> 00:54:18,900
cooperated<font color="#E5E5E5"> and we have a responsive of</font>

1292
00:54:15,770 --> 00:54:22,110
disclosure<font color="#E5E5E5"> program you mentioned</font>

1293
00:54:18,900 --> 00:54:25,390
supply<font color="#CCCCCC"> chain effects but real solutions</font>

1294
00:54:22,110 --> 00:54:28,539
<font color="#E5E5E5">so let me give you my like</font>

1295
00:54:25,390 --> 00:54:33,900
there's a regional resource<font color="#E5E5E5"> and it can</font>

1296
00:54:28,539 --> 00:54:33,900
be a<font color="#CCCCCC"> source and</font>

1297
00:54:35,620 --> 00:54:42,529
this kind of<font color="#CCCCCC"> attacks but my question is</font>

1298
00:54:39,500 --> 00:54:45,220
is<font color="#CCCCCC"> there any other solution except for</font>

1299
00:54:42,530 --> 00:54:45,220
building

1300
00:54:48,869 --> 00:54:55,059
so maybe<font color="#CCCCCC"> first off thank you one thing</font>

1301
00:54:53,410 --> 00:54:57,308
we should<font color="#E5E5E5"> mention is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> when we looked</font>

1302
00:54:55,059 --> 00:54:59,499
at<font color="#E5E5E5"> the treasure code the reason we had</font>

1303
00:54:57,309 --> 00:55:00,729
<font color="#CCCCCC">to end up glitching this</font><font color="#E5E5E5"> ship for three</font>

1304
00:54:59,499 --> 00:55:03,249
months is that<font color="#E5E5E5"> we couldn't break the</font>

1305
00:55:00,729 --> 00:55:10,089
firmware otherwise so they do a great

1306
00:55:03,249 --> 00:55:12,368
<font color="#CCCCCC">job and it's</font><font color="#E5E5E5"> really awesome so I mean</font>

1307
00:55:10,089 --> 00:55:14,828
yes the the<font color="#E5E5E5"> firmware on</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> treasure is</font>

1308
00:55:12,369 --> 00:55:16,869
is something<font color="#CCCCCC"> to look at</font><font color="#E5E5E5"> I mean I</font>

1309
00:55:14,829 --> 00:55:18,819
recommend that<font color="#E5E5E5"> I mean we all do</font>

1310
00:55:16,869 --> 00:55:20,589
consulting work<font color="#CCCCCC"> as well</font><font color="#E5E5E5"> and so it's</font>

1311
00:55:18,819 --> 00:55:23,109
something<font color="#CCCCCC"> that I</font><font color="#E5E5E5"> recommend that people</font>

1312
00:55:20,589 --> 00:55:25,569
<font color="#CCCCCC">who are</font><font color="#E5E5E5"> interested in looking at how to</font>

1313
00:55:23,109 --> 00:55:27,430
prevent certain<font color="#CCCCCC"> do mitigations and</font>

1314
00:55:25,569 --> 00:55:29,259
hardware it's an excellent<font color="#E5E5E5"> project</font><font color="#CCCCCC"> to</font>

1315
00:55:27,430 --> 00:55:30,940
look<font color="#E5E5E5"> at and so treasure should be</font>

1316
00:55:29,259 --> 00:55:32,890
commended<font color="#CCCCCC"> on that</font><font color="#E5E5E5"> but at the end of the</font>

1317
00:55:30,940 --> 00:55:35,109
day it doesn't<font color="#E5E5E5"> mean that the chip that</font>

1318
00:55:32,890 --> 00:55:36,640
the<font color="#CCCCCC"> treasurer uses is secure against</font>

1319
00:55:35,109 --> 00:55:39,009
these kinds of<font color="#CCCCCC"> attacks</font><font color="#E5E5E5"> and that's where</font>

1320
00:55:36,640 --> 00:55:40,989
we had a<font color="#CCCCCC"> fallback</font><font color="#E5E5E5"> to looking for silicon</font>

1321
00:55:39,009 --> 00:55:43,479
vulnerabilities against against a

1322
00:55:40,989 --> 00:55:45,719
triplet or<font color="#CCCCCC"> Sario wallet like the</font>

1323
00:55:43,479 --> 00:55:45,718
treasure

1324
00:56:08,000 --> 00:56:15,240
another question from microphone<font color="#CCCCCC"> 3</font>

1325
00:56:10,790 --> 00:56:16,680
actually<font color="#CCCCCC"> I have a suggestion I make it</font>

1326
00:56:15,240 --> 00:56:21,299
short though because<font color="#E5E5E5"> usually you just</font>

1327
00:56:16,680 --> 00:56:24,480
<font color="#E5E5E5">take questions</font><font color="#CCCCCC"> one sentence a few</font><font color="#E5E5E5"> MC use</font>

1328
00:56:21,300 --> 00:56:28,500
actually have<font color="#CCCCCC"> JTAC connected hardware</font>

1329
00:56:24,480 --> 00:56:31,500
fuses<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> so this might</font><font color="#CCCCCC"> be used</font><font color="#E5E5E5"> to at</font>

1330
00:56:28,500 --> 00:56:35,490
<font color="#E5E5E5">least slow</font><font color="#CCCCCC"> down which Inc attacks I</font>

1331
00:56:31,500 --> 00:56:37,320
think I agree<font color="#CCCCCC"> but these are not cortex-m</font>

1332
00:56:35,490 --> 00:56:40,680
microcontrollers I can tell you that

1333
00:56:37,320 --> 00:56:42,660
with 100% certainty<font color="#CCCCCC"> yeah it has the new</font>

1334
00:56:40,680 --> 00:56:44,069
a lot<font color="#E5E5E5"> with the fact that the the</font>

1335
00:56:42,660 --> 00:56:46,379
<font color="#CCCCCC">microcontrollers that are being used in</font>

1336
00:56:44,070 --> 00:56:48,330
<font color="#E5E5E5">these devices they're built to spec to</font>

1337
00:56:46,380 --> 00:56:49,770
the spec that<font color="#CCCCCC"> arms specified that</font><font color="#E5E5E5"> arm</font>

1338
00:56:48,330 --> 00:56:52,830
thinks would<font color="#E5E5E5"> be</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> good set</font><font color="#CCCCCC"> of features</font>

1339
00:56:49,770 --> 00:56:55,410
for<font color="#CCCCCC"> this class of device</font><font color="#E5E5E5"> or rather for</font>

1340
00:56:52,830 --> 00:56:57,150
the for the CPUs for the class<font color="#E5E5E5"> of device</font>

1341
00:56:55,410 --> 00:56:59,609
<font color="#CCCCCC">that they ended up getting put in so</font>

1342
00:56:57,150 --> 00:57:02,280
anything cortex-m<font color="#E5E5E5"> is gonna have boner</font>

1343
00:56:59,610 --> 00:57:04,170
abilities that<font color="#E5E5E5"> are more</font><font color="#CCCCCC"> or less like the</font>

1344
00:57:02,280 --> 00:57:06,540
silicon vulnerabilities that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have</font>

1345
00:57:04,170 --> 00:57:08,910
it's<font color="#E5E5E5"> just a I mean if you ask me I</font><font color="#CCCCCC"> think</font>

1346
00:57:06,540 --> 00:57:10,380
<font color="#E5E5E5">it's a matter of time just to sit</font><font color="#CCCCCC"> there</font>

1347
00:57:08,910 --> 00:57:12,660
<font color="#E5E5E5">I mean fortunately we had something</font><font color="#CCCCCC"> like</font>

1348
00:57:10,380 --> 00:57:15,600
three months of just<font color="#CCCCCC"> fletching to be</font>

1349
00:57:12,660 --> 00:57:19,080
<font color="#CCCCCC">able</font><font color="#E5E5E5"> to find find these bugs but if you</font>

1350
00:57:15,600 --> 00:57:21,089
can apply<font color="#CCCCCC"> that much</font><font color="#E5E5E5"> to find a silicon</font>

1351
00:57:19,080 --> 00:57:22,710
attack<font color="#CCCCCC"> you might be able</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> find</font><font color="#E5E5E5"> this</font>

1352
00:57:21,090 --> 00:57:25,200
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of vulnerability</font><font color="#E5E5E5"> as well in other</font>

1353
00:57:22,710 --> 00:57:27,990
cortex-m products<font color="#E5E5E5"> only if three minutes</font>

1354
00:57:25,200 --> 00:57:31,490
<font color="#CCCCCC">oh good</font><font color="#E5E5E5"> another</font><font color="#CCCCCC"> question</font><font color="#E5E5E5"> from microphone</font>

1355
00:57:27,990 --> 00:57:31,490
<font color="#E5E5E5">for please so</font>

1356
00:57:32,559 --> 00:57:38,539
love these devices did you find<font color="#E5E5E5"> that</font>

1357
00:57:35,569 --> 00:57:42,710
<font color="#CCCCCC">Deborah was in any</font><font color="#E5E5E5"> way obfuscated or</font>

1358
00:57:38,539 --> 00:57:44,089
<font color="#CCCCCC">inverted</font><font color="#E5E5E5"> so basically you on these chips</font>

1359
00:57:42,710 --> 00:57:47,960
<font color="#E5E5E5">you cannot really encrypt the firmware</font>

1360
00:57:44,089 --> 00:57:50,180
on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> st 31 you can encrypt it but we</font>

1361
00:57:47,960 --> 00:57:51,769
didn't have to look<font color="#E5E5E5"> at it because the</font>

1362
00:57:50,180 --> 00:57:54,049
<font color="#CCCCCC">sts-31 is not something you have to</font>

1363
00:57:51,769 --> 00:57:55,999
break but so no there was no real

1364
00:57:54,049 --> 00:57:57,529
obfuscation that we could see<font color="#E5E5E5"> but we</font>

1365
00:57:55,999 --> 00:57:59,660
also don't<font color="#CCCCCC"> have the code in the case of</font>

1366
00:57:57,529 --> 00:58:01,900
letter so<font color="#CCCCCC"> I just stared at</font><font color="#E5E5E5"> Ida Pro for</font>

1367
00:57:59,660 --> 00:58:15,410
hours and yeah

1368
00:58:01,900 --> 00:58:19,400
the next person a microphone for I mean

1369
00:58:15,410 --> 00:58:21,828
<font color="#E5E5E5">so we</font><font color="#CCCCCC"> already covered</font><font color="#E5E5E5"> how</font><font color="#CCCCCC"> the treasurer</font>

1370
00:58:19,400 --> 00:58:24,739
works<font color="#E5E5E5"> so there is only one chip and it's</font>

1371
00:58:21,829 --> 00:58:26,749
the stm32<font color="#E5E5E5"> so I know that there was a</font>

1372
00:58:24,739 --> 00:58:28,700
known issue with<font color="#CCCCCC"> treszura back in the</font>

1373
00:58:26,749 --> 00:58:31,640
day where they<font color="#CCCCCC"> weren't</font><font color="#E5E5E5"> seeding the</font>

1374
00:58:28,700 --> 00:58:35,029
basically the RNG correctly

1375
00:58:31,640 --> 00:58:37,249
but this was<font color="#CCCCCC"> fixed</font><font color="#E5E5E5"> but for our attacks</font>

1376
00:58:35,029 --> 00:58:40,009
this<font color="#CCCCCC"> wasn't this wasn't</font><font color="#E5E5E5"> an issue</font><font color="#CCCCCC"> I mean</font>

1377
00:58:37,249 --> 00:58:41,779
if you were concerned about<font color="#E5E5E5"> how strong</font>

1378
00:58:40,009 --> 00:58:44,180
these are how<font color="#CCCCCC"> strong the random number</font>

1379
00:58:41,779 --> 00:58:47,150
generators are for creating a seed<font color="#E5E5E5"> you</font>

1380
00:58:44,180 --> 00:58:49,519
could actually create<font color="#E5E5E5"> a bit 39 wallet</font>

1381
00:58:47,150 --> 00:58:51,140
outside of of any one of these<font color="#E5E5E5"> and then</font>

1382
00:58:49,519 --> 00:58:52,669
<font color="#CCCCCC">just use them for</font><font color="#E5E5E5"> their hardware</font>

1383
00:58:51,140 --> 00:58:55,848
features and yeah<font color="#E5E5E5"> I mean</font>

1384
00:58:52,670 --> 00:58:57,229
get get get the seed<font color="#E5E5E5"> from outside and if</font>

1385
00:58:55,849 --> 00:58:59,119
you have a question<font color="#CCCCCC"> do move to the</font>

1386
00:58:57,229 --> 00:59:00,169
microphone if you're<font color="#CCCCCC"> able to but first</font>

1387
00:58:59,119 --> 00:59:01,089
we have another question<font color="#CCCCCC"> from the</font>

1388
00:59:00,170 --> 00:59:04,239
<font color="#CCCCCC">internet</font>

1389
00:59:01,089 --> 00:59:04,239
thank you

1390
00:59:05,119 --> 00:59:11,599
you know but if<font color="#E5E5E5"> you send it to us we are</font>

1391
00:59:09,769 --> 00:59:34,459
<font color="#E5E5E5">happy to look at</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know sorry oh</font>

1392
00:59:11,599 --> 00:59:36,920
<font color="#E5E5E5">you did I mean</font><font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> on that note I</font>

1393
00:59:34,460 --> 00:59:38,809
<font color="#CCCCCC">would say that in</font><font color="#E5E5E5"> terms of looking at</font>

1394
00:59:36,920 --> 00:59:41,269
<font color="#E5E5E5">the what wallets are actually being used</font>

1395
00:59:38,809 --> 00:59:43,039
<font color="#CCCCCC">you'll find that the I</font><font color="#E5E5E5"> mean so the</font>

1396
00:59:41,269 --> 00:59:44,930
legend<font color="#E5E5E5"> is of a very</font><font color="#CCCCCC"> popular wallet the</font>

1397
00:59:43,039 --> 00:59:47,150
true source a very popular wallet but

1398
00:59:44,930 --> 00:59:50,480
since the<font color="#E5E5E5"> Tresor is open-source</font><font color="#CCCCCC"> there's</font>

1399
00:59:47,150 --> 00:59:53,809
a lot<font color="#E5E5E5"> of clones and forks of the Tresor</font>

1400
00:59:50,480 --> 00:59:55,999
<font color="#E5E5E5">and when I say that not</font><font color="#CCCCCC"> all of them run</font>

1401
00:59:53,809 --> 00:59:58,099
the<font color="#CCCCCC"> latest</font><font color="#E5E5E5"> security patches that have</font>

1402
00:59:55,999 --> 01:00:00,259
<font color="#CCCCCC">been applied to the truce or code base</font>

1403
00:59:58,099 --> 01:00:02,210
<font color="#CCCCCC">so that's also something that you can do</font>

1404
01:00:00,259 --> 01:00:04,849
is basically dip the<font color="#CCCCCC"> project's and see</font>

1405
01:00:02,210 --> 01:00:07,009
which one of them<font color="#CCCCCC"> which ones are staying</font>

1406
01:00:04,849 --> 01:00:08,809
up<font color="#E5E5E5"> to</font><font color="#CCCCCC"> date in which</font><font color="#E5E5E5"> art your question is</font>

1407
01:00:07,009 --> 01:00:12,499
<font color="#CCCCCC">to be the very last</font><font color="#E5E5E5"> one today to speak</font>

1408
01:00:08,809 --> 01:00:16,640
<font color="#E5E5E5">directly through the microphone even</font>

1409
01:00:12,499 --> 01:00:22,879
<font color="#E5E5E5">closer to the light seeing as this is</font>

1410
01:00:16,640 --> 01:00:26,720
<font color="#E5E5E5">the first CCC for many of us and some of</font>

1411
01:00:22,880 --> 01:00:28,489
<font color="#E5E5E5">us might not have</font><font color="#CCCCCC"> making</font><font color="#E5E5E5"> that much</font>

1412
01:00:26,720 --> 01:00:31,879
<font color="#E5E5E5">experience in hardware hacking do you</font>

1413
01:00:28,489 --> 01:00:35,450
have any tips<font color="#CCCCCC"> for beginners yeah</font><font color="#E5E5E5"> lots of</font>

1414
01:00:31,880 --> 01:00:38,569
<font color="#E5E5E5">them so by now do we know</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> learn</font>

1415
01:00:35,450 --> 01:00:41,058
what mistakes you<font color="#E5E5E5"> do with it</font><font color="#CCCCCC"> and what</font>

1416
01:00:38,569 --> 01:00:43,940
<font color="#E5E5E5">learn learn</font><font color="#CCCCCC"> how Hardware works basically</font>

1417
01:00:41,059 --> 01:00:45,349
watch a lot<font color="#CCCCCC"> of online videos</font><font color="#E5E5E5"> and I think</font>

1418
01:00:43,940 --> 01:00:48,289
you<font color="#E5E5E5"> gave presentations you gave</font>

1419
01:00:45,349 --> 01:00:51,019
presentations<font color="#E5E5E5"> I gave some presentations</font>

1420
01:00:48,289 --> 01:00:52,910
so just watch talks watch Life<font color="#E5E5E5"> overflow</font>

1421
01:00:51,019 --> 01:00:55,640
<font color="#CCCCCC">Life overflow great great YouTube</font>

1422
01:00:52,910 --> 01:00:58,339
channel<font color="#E5E5E5"> on exactly this stuff and yeah</font>

1423
01:00:55,640 --> 01:01:00,589
<font color="#E5E5E5">and also don't hesitate</font><font color="#CCCCCC"> to reach out to</font>

1424
01:00:58,339 --> 01:01:03,140
us if<font color="#CCCCCC"> you have a question always contact</font>

1425
01:01:00,589 --> 01:01:05,210
us info at wallet fail on Twitter

1426
01:01:03,140 --> 01:01:07,490
<font color="#E5E5E5">wherever we</font><font color="#CCCCCC"> are happy to talk to you it</font>

1427
01:01:05,210 --> 01:01:10,540
might take a while but yeah

1428
01:01:07,490 --> 01:01:10,540
[Music]

1429
01:01:16,800 --> 01:01:24,340
but I'll say I started with Arduino - I

1430
01:01:20,290 --> 01:01:25,960
mean<font color="#E5E5E5"> I've hidden me buddy</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> thank</font>

1431
01:01:24,340 --> 01:01:28,120
you<font color="#CCCCCC"> guys so much for</font><font color="#E5E5E5"> the very nice</font>

1432
01:01:25,960 --> 01:01:30,250
<font color="#E5E5E5">question</font><font color="#CCCCCC"> and you guys for the amazing</font>

1433
01:01:28,120 --> 01:01:31,750
and inspiring<font color="#E5E5E5"> job thank you so much</font>

1434
01:01:30,250 --> 01:01:36,730
[Music]

1435
01:01:31,750 --> 01:01:36,730
[Applause]

1436
01:01:36,950 --> 01:01:44,129
[Music]

1437
01:01:46,200 --> 01:01:58,870
[Music]

