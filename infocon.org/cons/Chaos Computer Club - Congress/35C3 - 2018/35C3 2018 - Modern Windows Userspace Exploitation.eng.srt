1
00:00:02,830 --> 00:00:15,470
[Music]

2
00:00:17,210 --> 00:00:23,010
so our<font color="#E5E5E5"> next speaker is going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be</font>

3
00:00:19,920 --> 00:00:25,830
talking<font color="#CCCCCC"> about modern windows user space</font>

4
00:00:23,010 --> 00:00:29,130
exploitation<font color="#E5E5E5"> he is a security researcher</font>

5
00:00:25,830 --> 00:00:30,810
<font color="#CCCCCC">at nsrc</font><font color="#E5E5E5"> Israel please give a big</font><font color="#CCCCCC"> round</font>

6
00:00:29,130 --> 00:00:37,260
of applause to<font color="#CCCCCC"> sow</font>

7
00:00:30,810 --> 00:00:40,439
[Applause]

8
00:00:37,260 --> 00:00:40,439
[Music]

9
00:00:43,610 --> 00:00:49,290
<font color="#E5E5E5">okay</font>

10
00:00:44,760 --> 00:00:52,769
hi so so first of all and thanks a lot

11
00:00:49,290 --> 00:00:55,290
<font color="#CCCCCC">for all of you and to come up here</font><font color="#E5E5E5"> I</font>

12
00:00:52,770 --> 00:00:59,370
<font color="#E5E5E5">know that there is</font><font color="#CCCCCC"> a great competition</font>

13
00:00:55,290 --> 00:01:02,820
so I really really<font color="#CCCCCC"> appreciate it and</font><font color="#E5E5E5"> so</font>

14
00:00:59,370 --> 00:01:08,910
<font color="#E5E5E5">my name is a</font><font color="#CCCCCC"> llama I'm it's the</font><font color="#E5E5E5"> MSMC</font>

15
00:01:02,820 --> 00:01:10,610
<font color="#CCCCCC">and like based in Israel and so actually</font>

16
00:01:08,910 --> 00:01:13,320
<font color="#E5E5E5">I'm able</font><font color="#CCCCCC"> to talk with you</font><font color="#E5E5E5"> today</font>

17
00:01:10,610 --> 00:01:17,280
like about<font color="#CCCCCC"> how we can execute I would</font>

18
00:01:13,320 --> 00:01:19,169
record on latest<font color="#E5E5E5"> Windows</font><font color="#CCCCCC"> system and so</font>

19
00:01:17,280 --> 00:01:20,880
just a little<font color="#E5E5E5"> bit like about myself I am</font>

20
00:01:19,170 --> 00:01:22,610
<font color="#E5E5E5">a security researcher my whole point in</font>

21
00:01:20,880 --> 00:01:25,920
life is about reversing and exploiting

22
00:01:22,610 --> 00:01:29,420
vulnerabilities<font color="#E5E5E5"> and I'm also highly</font>

23
00:01:25,920 --> 00:01:32,880
addicted to CPF<font color="#E5E5E5"> I'm in</font><font color="#CCCCCC"> Austin CTF team</font>

24
00:01:29,420 --> 00:01:35,759
which I hope that you like probably

25
00:01:32,880 --> 00:01:37,589
<font color="#CCCCCC">heard</font><font color="#E5E5E5"> of the husband</font><font color="#CCCCCC"> now and and I</font>

26
00:01:35,759 --> 00:01:41,640
actually<font color="#CCCCCC"> account to a</font><font color="#E5E5E5"> kick</font><font color="#CCCCCC"> off the talk</font>

27
00:01:37,590 --> 00:01:44,460
which very important like a<font color="#E5E5E5"> question so</font>

28
00:01:41,640 --> 00:01:47,040
like what do you<font color="#CCCCCC"> think the point in life</font>

29
00:01:44,460 --> 00:01:51,089
<font color="#E5E5E5">is so so of</font><font color="#CCCCCC"> course the point</font><font color="#E5E5E5"> in life is</font>

30
00:01:47,040 --> 00:01:52,890
to execute<font color="#CCCCCC"> arbitrary code da and and</font>

31
00:01:51,090 --> 00:01:54,420
there is<font color="#CCCCCC"> actually a</font><font color="#E5E5E5"> very</font><font color="#CCCCCC"> simple and</font>

32
00:01:52,890 --> 00:01:56,010
trivial process<font color="#E5E5E5"> for that white I mean</font>

33
00:01:54,420 --> 00:01:58,229
<font color="#CCCCCC">all you need to do is to find some</font>

34
00:01:56,010 --> 00:02:00,840
really<font color="#E5E5E5"> awesome cake</font><font color="#CCCCCC"> a zero-day</font>

35
00:01:58,229 --> 00:02:03,840
vulnerability and you have<font color="#E5E5E5"> something in</font>

36
00:02:00,840 --> 00:02:07,260
the<font color="#CCCCCC"> middle it'll profit and back then</font>

37
00:02:03,840 --> 00:02:10,110
<font color="#E5E5E5">about</font><font color="#CCCCCC"> 200 years ago it was really really</font>

38
00:02:07,260 --> 00:02:11,489
<font color="#CCCCCC">easy I do hope that</font><font color="#E5E5E5"> you all do it all</font>

39
00:02:10,110 --> 00:02:15,209
the times that they stuck in the<font color="#CCCCCC"> heap</font>

40
00:02:11,489 --> 00:02:17,760
<font color="#CCCCCC">will well executable and everything is</font>

41
00:02:15,209 --> 00:02:19,560
<font color="#CCCCCC">fixed and</font><font color="#E5E5E5"> you have no SLA whatsoever and</font>

42
00:02:17,760 --> 00:02:21,120
you can<font color="#E5E5E5"> collapse function pointers and</font>

43
00:02:19,560 --> 00:02:21,650
jump to them and basically<font color="#CCCCCC"> nothing stops</font>

44
00:02:21,120 --> 00:02:25,709
you

45
00:02:21,650 --> 00:02:27,930
well those<font color="#E5E5E5"> times were fun easy but also</font>

46
00:02:25,709 --> 00:02:30,120
really<font color="#CCCCCC"> really dangerous</font><font color="#E5E5E5"> well we don't</font>

47
00:02:27,930 --> 00:02:31,980
have<font color="#CCCCCC"> that anymore right since we</font>

48
00:02:30,120 --> 00:02:36,870
mitigations who have mitigations

49
00:02:31,980 --> 00:02:41,970
<font color="#CCCCCC">everywhere and actually we</font><font color="#E5E5E5"> have quite</font>

50
00:02:36,870 --> 00:02:43,739
bunch of them and and<font color="#CCCCCC"> they think that</font><font color="#E5E5E5"> I</font>

51
00:02:41,970 --> 00:02:46,220
really want<font color="#E5E5E5"> to do</font><font color="#CCCCCC"> today is to talk about</font>

52
00:02:43,739 --> 00:02:48,980
<font color="#E5E5E5">the internals of</font><font color="#CCCCCC"> the mitigations</font><font color="#E5E5E5"> and</font>

53
00:02:46,220 --> 00:02:51,260
they'll spend<font color="#E5E5E5"> them and most importantly</font>

54
00:02:48,980 --> 00:02:52,790
<font color="#CCCCCC">see all of the</font>

55
00:02:51,260 --> 00:02:55,399
all of the equities that<font color="#E5E5E5"> you need to</font>

56
00:02:52,790 --> 00:02:57,920
gain in order to<font color="#CCCCCC"> bypass them since it's</font>

57
00:02:55,400 --> 00:03:02,239
really<font color="#E5E5E5"> not it's really</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> a trivial</font>

58
00:02:57,920 --> 00:03:04,250
<font color="#CCCCCC">process and I feel personally that the</font>

59
00:03:02,239 --> 00:03:06,650
<font color="#E5E5E5">best way in order</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> achieve that is</font><font color="#CCCCCC"> to</font>

60
00:03:04,250 --> 00:03:09,319
find one single<font color="#E5E5E5"> vulnerability and to</font>

61
00:03:06,650 --> 00:03:11,299
<font color="#CCCCCC">exploit it on many different operating</font>

62
00:03:09,319 --> 00:03:14,899
systems with increasing and increasing

63
00:03:11,299 --> 00:03:16,819
amounts of different<font color="#E5E5E5"> mitigation so</font>

64
00:03:14,900 --> 00:03:19,909
that's exactly what<font color="#CCCCCC"> we are</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do</font>

65
00:03:16,819 --> 00:03:22,399
right<font color="#CCCCCC"> now and so actually my intentions</font>

66
00:03:19,909 --> 00:03:25,459
were to take a<font color="#CCCCCC"> real Windows corner</font>

67
00:03:22,400 --> 00:03:28,069
ability and to exploit it<font color="#E5E5E5"> because it's</font>

68
00:03:25,459 --> 00:03:29,599
fun<font color="#E5E5E5"> but</font><font color="#CCCCCC"> certainly I saw</font><font color="#E5E5E5"> that if I would</font>

69
00:03:28,069 --> 00:03:31,578
the talk will probably last three<font color="#E5E5E5"> hours</font>

70
00:03:29,599 --> 00:03:34,399
<font color="#E5E5E5">and we don't have time because there is</font>

71
00:03:31,579 --> 00:03:38,989
a great like<font color="#CCCCCC"> MCTS</font><font color="#E5E5E5"> that is going</font><font color="#CCCCCC"> right</font>

72
00:03:34,400 --> 00:03:41,420
now<font color="#CCCCCC"> and I have to</font><font color="#E5E5E5"> go and but instead we</font>

73
00:03:38,989 --> 00:03:44,629
will take a like really really<font color="#E5E5E5"> awesome</font>

74
00:03:41,420 --> 00:03:49,940
<font color="#E5E5E5">Windows CTF challenge from the insomniac</font>

75
00:03:44,629 --> 00:03:52,518
<font color="#E5E5E5">CTF diesel from 2017</font><font color="#CCCCCC"> and on the way we</font>

76
00:03:49,940 --> 00:03:55,419
will send the message<font color="#E5E5E5"> that I personally</font>

77
00:03:52,519 --> 00:03:58,400
<font color="#E5E5E5">like really want to see more</font><font color="#CCCCCC"> windows CTF</font>

78
00:03:55,419 --> 00:04:01,669
challenges is in<font color="#CCCCCC"> system so please</font><font color="#E5E5E5"> do</font>

79
00:03:58,400 --> 00:04:05,269
that and we<font color="#E5E5E5"> are going to achieve code</font>

80
00:04:01,669 --> 00:04:07,519
execution<font color="#E5E5E5"> on many different</font><font color="#CCCCCC"> unlike</font><font color="#E5E5E5"> many</font>

81
00:04:05,269 --> 00:04:09,769
different of any systems and<font color="#CCCCCC"> text</font>

82
00:04:07,519 --> 00:04:13,400
<font color="#E5E5E5">together the Germany</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> bypassed many</font>

83
00:04:09,769 --> 00:04:15,109
many mitigations<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so what we are</font>

84
00:04:13,400 --> 00:04:17,780
dealing<font color="#E5E5E5"> here with the</font><font color="#CCCCCC"> win</font><font color="#E5E5E5"> World</font>

85
00:04:15,109 --> 00:04:18,668
<font color="#E5E5E5">Challenge it was</font><font color="#CCCCCC"> a great challenge based</font>

86
00:04:17,779 --> 00:04:21,619
on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> west-world</font>

87
00:04:18,668 --> 00:04:23,599
<font color="#E5E5E5">TV series</font><font color="#CCCCCC"> say they didn't watch it's</font><font color="#E5E5E5"> is</font>

88
00:04:21,620 --> 00:04:26,680
I was extremely busy in the last two

89
00:04:23,599 --> 00:04:29,599
<font color="#CCCCCC">years just</font><font color="#E5E5E5"> like reversing hyper-v but</font>

90
00:04:26,680 --> 00:04:31,970
but the challenge is the<font color="#E5E5E5"> clinical it's</font>

91
00:04:29,599 --> 00:04:34,340
basically<font color="#CCCCCC"> try to</font><font color="#E5E5E5"> implement some</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of</font>

92
00:04:31,970 --> 00:04:36,949
<font color="#CCCCCC">narrator which is which</font><font color="#E5E5E5"> basically like</font>

93
00:04:34,340 --> 00:04:39,320
ratio creates both robots<font color="#E5E5E5"> and humans and</font>

94
00:04:36,949 --> 00:04:41,060
you can move<font color="#E5E5E5"> them</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> on some map and</font>

95
00:04:39,320 --> 00:04:43,280
you<font color="#E5E5E5"> can make them talk to each other in</font>

96
00:04:41,060 --> 00:04:46,820
interact with each other<font color="#E5E5E5"> and fight and</font>

97
00:04:43,280 --> 00:04:49,340
do like<font color="#CCCCCC"> awesome stuff and</font><font color="#E5E5E5"> and important</font>

98
00:04:46,820 --> 00:04:54,020
note<font color="#CCCCCC"> here is that</font><font color="#E5E5E5"> both robots and humans</font>

99
00:04:49,340 --> 00:04:59,510
<font color="#CCCCCC">have like M Bey like a best class</font><font color="#E5E5E5"> shared</font>

100
00:04:54,020 --> 00:05:01,789
<font color="#E5E5E5">which is person and the interface simply</font>

101
00:04:59,510 --> 00:05:04,250
<font color="#E5E5E5">like let you do those actions</font><font color="#CCCCCC"> those</font>

102
00:05:01,789 --> 00:05:05,270
operations on any<font color="#E5E5E5"> personal instance each</font>

103
00:05:04,250 --> 00:05:09,319
<font color="#E5E5E5">time that I will state</font>

104
00:05:05,270 --> 00:05:11,930
instance<font color="#E5E5E5"> I mean of course</font><font color="#CCCCCC"> a like both</font>

105
00:05:09,319 --> 00:05:15,889
like robot home<font color="#E5E5E5"> no human they have</font>

106
00:05:11,930 --> 00:05:18,550
simply<font color="#E5E5E5"> inheritance from person now this</font>

107
00:05:15,889 --> 00:05:21,800
is not a how to find vulnerabilities<font color="#CCCCCC"> doc</font>

108
00:05:18,550 --> 00:05:25,009
<font color="#E5E5E5">this is a an exploitation talk so let's</font>

109
00:05:21,800 --> 00:05:26,960
cut to<font color="#CCCCCC"> the chase and dump all of the</font>

110
00:05:25,009 --> 00:05:29,569
vulnerabilities so vulnerability number

111
00:05:26,960 --> 00:05:31,489
one<font color="#E5E5E5"> we have an an and we have an</font>

112
00:05:29,569 --> 00:05:35,240
uninitialized<font color="#E5E5E5"> attribute in the person</font>

113
00:05:31,490 --> 00:05:37,550
instance and each person has<font color="#CCCCCC"> a like a</font>

114
00:05:35,240 --> 00:05:40,130
member of<font color="#CCCCCC"> a is conscious let's tell you</font>

115
00:05:37,550 --> 00:05:43,490
if the<font color="#CCCCCC"> person is conscious</font><font color="#E5E5E5"> or it isn't</font>

116
00:05:40,130 --> 00:05:45,919
<font color="#CCCCCC">and the person comes then so the person</font>

117
00:05:43,490 --> 00:05:48,620
constructor keeps in mind to initialize

118
00:05:45,919 --> 00:05:50,840
that value to false<font color="#E5E5E5"> but the person copy</font>

119
00:05:48,620 --> 00:05:52,520
<font color="#CCCCCC">course facto forgets its so if you can</font>

120
00:05:50,840 --> 00:05:54,710
trigger the person copy post facto and

121
00:05:52,520 --> 00:05:57,109
<font color="#CCCCCC">of like of course</font><font color="#E5E5E5"> you can you have a nun</font>

122
00:05:54,710 --> 00:05:58,909
initials we have an uninitialized value

123
00:05:57,110 --> 00:06:03,710
which takes<font color="#CCCCCC"> whatever was on the</font><font color="#E5E5E5"> heap</font>

124
00:05:58,909 --> 00:06:08,599
before<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is cool and we have also a</font>

125
00:06:03,710 --> 00:06:12,109
use after free<font color="#E5E5E5"> bug in the challenge we</font>

126
00:06:08,599 --> 00:06:14,479
need<font color="#E5E5E5"> to share to</font><font color="#CCCCCC"> like share pointers to</font>

127
00:06:12,110 --> 00:06:16,940
<font color="#CCCCCC">post on in some sense and like between</font>

128
00:06:14,479 --> 00:06:20,150
<font color="#E5E5E5">many many different objects and like</font>

129
00:06:16,940 --> 00:06:22,520
<font color="#E5E5E5">combine like component and but it's kind</font>

130
00:06:20,150 --> 00:06:25,758
of<font color="#E5E5E5"> like problem since since you have to</font>

131
00:06:22,520 --> 00:06:28,310
know when you<font color="#E5E5E5"> can free the shank so so</font>

132
00:06:25,759 --> 00:06:31,280
the challenge is a short pointers which

133
00:06:28,310 --> 00:06:34,580
is kind<font color="#E5E5E5"> of some like repair for point L</font>

134
00:06:31,280 --> 00:06:36,888
which has like like the<font color="#CCCCCC"> M ref count</font>

135
00:06:34,580 --> 00:06:39,258
which like simply counts<font color="#E5E5E5"> they like</font>

136
00:06:36,889 --> 00:06:41,840
amount of objects<font color="#CCCCCC"> that took a reference</font>

137
00:06:39,259 --> 00:06:43,969
to you<font color="#E5E5E5"> so each time some other objects</font>

138
00:06:41,840 --> 00:06:45,979
took a reference to it increment the

139
00:06:43,969 --> 00:06:49,610
pointer by<font color="#E5E5E5"> one each time</font><font color="#CCCCCC"> it Livio</font><font color="#E5E5E5"> it's</font>

140
00:06:45,979 --> 00:06:52,190
the a track deck the pointer by one and

141
00:06:49,610 --> 00:06:56,000
when the ref count like reaches zero the

142
00:06:52,190 --> 00:06:58,729
<font color="#CCCCCC">object can be freed the problem is that</font>

143
00:06:56,000 --> 00:07:01,130
there is some flow in the challenge that

144
00:06:58,729 --> 00:07:03,800
you can take care<font color="#E5E5E5"> about and to transform</font>

145
00:07:01,130 --> 00:07:06,020
it to human<font color="#E5E5E5"> and now this is</font><font color="#CCCCCC"> really cool</font>

146
00:07:03,800 --> 00:07:09,650
but<font color="#E5E5E5"> the problem</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> decode that</font><font color="#E5E5E5"> does</font>

147
00:07:06,020 --> 00:07:10,969
<font color="#E5E5E5">that use STD move which actually</font>

148
00:07:09,650 --> 00:07:13,580
duplicates the object and those

149
00:07:10,969 --> 00:07:15,320
duplicate the short pointer<font color="#CCCCCC"> now this is</font>

150
00:07:13,580 --> 00:07:17,270
really<font color="#E5E5E5"> really one because this actually</font>

151
00:07:15,320 --> 00:07:18,980
breaks<font color="#E5E5E5"> the whole point of</font><font color="#CCCCCC"> show pointers</font>

152
00:07:17,270 --> 00:07:21,830
<font color="#E5E5E5">the right things to do</font>

153
00:07:18,980 --> 00:07:24,950
is<font color="#CCCCCC"> to intimate the restaurant and</font><font color="#E5E5E5"> that's</font>

154
00:07:21,830 --> 00:07:26,659
<font color="#E5E5E5">it and instead you duplicate the</font>

155
00:07:24,950 --> 00:07:29,210
<font color="#CCCCCC">sharepoint l and you have two</font><font color="#E5E5E5"> different</font>

156
00:07:26,660 --> 00:07:32,060
shared pointer which points to<font color="#CCCCCC"> the same</font>

157
00:07:29,210 --> 00:07:34,789
chunk in memory and<font color="#E5E5E5"> of course</font><font color="#CCCCCC"> this is</font>

158
00:07:32,060 --> 00:07:37,750
really really<font color="#E5E5E5"> want since when a one of</font>

159
00:07:34,790 --> 00:07:40,490
those<font color="#CCCCCC"> share pointer will reach zero the</font>

160
00:07:37,750 --> 00:07:42,620
<font color="#CCCCCC">person chunk</font><font color="#E5E5E5"> in memory will be freed and</font>

161
00:07:40,490 --> 00:07:45,080
you have a dangling pointer from<font color="#E5E5E5"> the</font>

162
00:07:42,620 --> 00:07:53,510
<font color="#CCCCCC">other shared pointer to a free chunk</font><font color="#E5E5E5"> and</font>

163
00:07:45,080 --> 00:07:55,669
then<font color="#CCCCCC"> the fun begins so cool awesome</font><font color="#E5E5E5"> so</font>

164
00:07:53,510 --> 00:07:57,740
yeah<font color="#E5E5E5"> the problem is that you can say</font>

165
00:07:55,670 --> 00:07:59,390
that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have a</font><font color="#CCCCCC"> vulnerability if you</font>

166
00:07:57,740 --> 00:08:02,870
don't have<font color="#CCCCCC"> a reflow right you have to</font>

167
00:07:59,390 --> 00:08:05,840
<font color="#E5E5E5">trigger the flow so we</font><font color="#CCCCCC"> actually can do</font>

168
00:08:02,870 --> 00:08:07,490
it by taking robot into<font color="#CCCCCC"> two n to</font>

169
00:08:05,840 --> 00:08:09,770
transform into human just<font color="#E5E5E5"> like I told</font>

170
00:08:07,490 --> 00:08:13,880
you<font color="#E5E5E5"> and this happens when you have</font><font color="#CCCCCC"> both</font>

171
00:08:09,770 --> 00:08:16,400
<font color="#E5E5E5">robots and human in the center of of</font><font color="#CCCCCC"> the</font>

172
00:08:13,880 --> 00:08:19,760
maze<font color="#CCCCCC"> okay and you</font><font color="#E5E5E5"> have those</font>

173
00:08:16,400 --> 00:08:21,979
preconditions<font color="#E5E5E5"> to be met and you see that</font>

174
00:08:19,760 --> 00:08:25,370
one of the preconditions is that the

175
00:08:21,980 --> 00:08:29,090
person is<font color="#CCCCCC"> Corson's will be set meaning</font>

176
00:08:25,370 --> 00:08:32,240
<font color="#E5E5E5">not false</font><font color="#CCCCCC"> and we can do that by the</font>

177
00:08:29,090 --> 00:08:34,939
first vulnerability of the<font color="#E5E5E5"> an initialize</font>

178
00:08:32,240 --> 00:08:37,840
value so combine those two<font color="#CCCCCC"> abilities</font>

179
00:08:34,940 --> 00:08:41,030
<font color="#CCCCCC">together we can make the flow of</font>

180
00:08:37,840 --> 00:08:43,000
transform the<font color="#E5E5E5"> robots to human and we</font>

181
00:08:41,030 --> 00:08:47,290
have<font color="#CCCCCC"> delve in pointer from</font><font color="#E5E5E5"> the other</font>

182
00:08:43,000 --> 00:08:50,600
<font color="#E5E5E5">shelter</font><font color="#CCCCCC"> Intel to a free chunk in memory</font>

183
00:08:47,290 --> 00:08:53,569
<font color="#CCCCCC">okay and now</font><font color="#E5E5E5"> after that we armed with</font>

184
00:08:50,600 --> 00:08:57,800
<font color="#CCCCCC">say use after free</font><font color="#E5E5E5"> vulnerability</font><font color="#CCCCCC"> let's</font>

185
00:08:53,570 --> 00:09:00,080
the actual fun begin<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so let's so</font>

186
00:08:57,800 --> 00:09:02,689
let's<font color="#E5E5E5"> all</font><font color="#CCCCCC"> talk</font><font color="#E5E5E5"> we start with execute</font>

187
00:09:00,080 --> 00:09:04,280
code<font color="#E5E5E5"> on Windows</font><font color="#CCCCCC"> 7 the</font><font color="#E5E5E5"> first thing</font><font color="#CCCCCC"> that</font>

188
00:09:02,690 --> 00:09:05,870
we need<font color="#CCCCCC"> to do is to understand the</font>

189
00:09:04,280 --> 00:09:08,270
<font color="#E5E5E5">alligator right because you have like</font>

190
00:09:05,870 --> 00:09:10,460
<font color="#E5E5E5">use after free</font><font color="#CCCCCC"> bug and like trivially</font>

191
00:09:08,270 --> 00:09:13,340
the change that we like<font color="#E5E5E5"> need to do first</font>

192
00:09:10,460 --> 00:09:15,590
is to trigger some allocation<font color="#E5E5E5"> some idle</font>

193
00:09:13,340 --> 00:09:18,290
object allocation to fall in the exact

194
00:09:15,590 --> 00:09:20,600
same spot<font color="#E5E5E5"> on the hip that the last</font>

195
00:09:18,290 --> 00:09:22,790
<font color="#E5E5E5">person chunk gottfried okay</font>

196
00:09:20,600 --> 00:09:25,130
<font color="#E5E5E5">this is usually how it's not</font><font color="#CCCCCC"> used after</font>

197
00:09:22,790 --> 00:09:27,380
<font color="#CCCCCC">three bugs</font><font color="#E5E5E5"> and the problem is that you</font>

198
00:09:25,130 --> 00:09:29,870
we have many many different Aloka toes

199
00:09:27,380 --> 00:09:32,750
and<font color="#E5E5E5"> each a locator wave has its own</font>

200
00:09:29,870 --> 00:09:34,040
logic<font color="#E5E5E5"> in the way tracks free chance and</font>

201
00:09:32,750 --> 00:09:36,710
<font color="#CCCCCC">you have to understand the allocator</font>

202
00:09:34,040 --> 00:09:38,480
<font color="#E5E5E5">that you're dealing</font><font color="#CCCCCC"> with and if you want</font>

203
00:09:36,710 --> 00:09:40,850
to<font color="#CCCCCC"> exploit</font><font color="#E5E5E5"> their vulnerability so of</font>

204
00:09:38,480 --> 00:09:43,700
course we have in<font color="#E5E5E5"> Windows so we work</font>

205
00:09:40,850 --> 00:09:48,010
with<font color="#CCCCCC"> the</font><font color="#E5E5E5"> lfh the low fragmentation hip</font>

206
00:09:43,700 --> 00:09:52,280
<font color="#CCCCCC">and this is the font and allocate Oh in</font>

207
00:09:48,010 --> 00:09:54,439
<font color="#CCCCCC">an accuser</font><font color="#E5E5E5"> space since Windows Vista now</font>

208
00:09:52,280 --> 00:09:56,750
I don't want<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about lfh internals</font>

209
00:09:54,440 --> 00:09:59,030
is in highly documented or like

210
00:09:56,750 --> 00:10:01,130
basically<font color="#CCCCCC"> all over the Internet I will</font>

211
00:09:59,030 --> 00:10:06,260
simply<font color="#CCCCCC"> say that that is really like</font><font color="#E5E5E5"> the</font>

212
00:10:01,130 --> 00:10:08,120
<font color="#CCCCCC">malloc if you are familiar and they and</font>

213
00:10:06,260 --> 00:10:10,790
<font color="#CCCCCC">your destruct switch called</font><font color="#E5E5E5"> user blocks</font>

214
00:10:08,120 --> 00:10:13,010
<font color="#E5E5E5">which is a pool of same size chunks in</font>

215
00:10:10,790 --> 00:10:14,750
the hip<font color="#E5E5E5"> and every time you do a malloc</font>

216
00:10:13,010 --> 00:10:17,450
<font color="#E5E5E5">you get a charge from there and like</font>

217
00:10:14,750 --> 00:10:20,210
every<font color="#E5E5E5"> time you free the chunks like goes</font>

218
00:10:17,450 --> 00:10:23,780
back and<font color="#E5E5E5"> you have no coalescing no</font>

219
00:10:20,210 --> 00:10:27,530
consolidate no fragmentation like like

220
00:10:23,780 --> 00:10:31,339
whatsoever<font color="#E5E5E5"> and cool the problem is that</font>

221
00:10:27,530 --> 00:10:32,900
in back then<font color="#CCCCCC"> in Windows 7 we have like a</font>

222
00:10:31,340 --> 00:10:35,110
<font color="#CCCCCC">meta data which called free entry</font>

223
00:10:32,900 --> 00:10:37,819
offsets<font color="#E5E5E5"> which set in the first</font><font color="#CCCCCC"> two bytes</font>

224
00:10:35,110 --> 00:10:40,400
<font color="#E5E5E5">inside the free chunk after the header</font>

225
00:10:37,820 --> 00:10:42,490
which means that it has<font color="#CCCCCC"> no encoding and</font>

226
00:10:40,400 --> 00:10:45,260
also and no protection<font color="#CCCCCC"> whatsoever</font><font color="#E5E5E5"> and</font>

227
00:10:42,490 --> 00:10:45,860
this<font color="#E5E5E5"> lack metadata indicates to the</font>

228
00:10:45,260 --> 00:10:48,880
<font color="#CCCCCC">allocator</font>

229
00:10:45,860 --> 00:10:51,700
which chunk needs to be returned to<font color="#CCCCCC"> the</font>

230
00:10:48,880 --> 00:10:55,130
to the user in<font color="#E5E5E5"> the next</font><font color="#CCCCCC"> allocation</font><font color="#E5E5E5"> and</font>

231
00:10:51,700 --> 00:10:57,950
simply like co-opting this field is like

232
00:10:55,130 --> 00:11:01,160
give you extremely strong primitive and

233
00:10:57,950 --> 00:11:03,130
the<font color="#CCCCCC"> second problem is that the nfh in</font>

234
00:11:01,160 --> 00:11:06,740
<font color="#E5E5E5">the</font><font color="#CCCCCC"> windows</font><font color="#E5E5E5"> 7 it allocates chunks</font>

235
00:11:03,130 --> 00:11:09,650
continuously<font color="#E5E5E5"> in my movie so</font><font color="#CCCCCC"> shopping nfh</font>

236
00:11:06,740 --> 00:11:13,010
<font color="#E5E5E5">in like</font><font color="#CCCCCC"> windows</font><font color="#E5E5E5"> 7 is basically not</font>

237
00:11:09,650 --> 00:11:17,300
really<font color="#E5E5E5"> a problem</font><font color="#CCCCCC"> and you can see it if</font>

238
00:11:13,010 --> 00:11:21,770
you take some some<font color="#CCCCCC"> tester</font><font color="#E5E5E5"> and execute it</font>

239
00:11:17,300 --> 00:11:23,060
<font color="#E5E5E5">on</font><font color="#CCCCCC"> like a Windows 7 machine and so you</font>

240
00:11:21,770 --> 00:11:25,220
can see on the left<font color="#E5E5E5"> side</font><font color="#CCCCCC"> that I see</font>

241
00:11:23,060 --> 00:11:27,170
misplaced on<font color="#E5E5E5"> size on the hip and on and</font>

242
00:11:25,220 --> 00:11:31,339
on the<font color="#E5E5E5"> right side you</font><font color="#CCCCCC"> can see that all</font>

243
00:11:27,170 --> 00:11:33,370
of the chunks<font color="#E5E5E5"> all of the locations for</font>

244
00:11:31,339 --> 00:11:37,900
one after the other very<font color="#E5E5E5"> very nicely</font>

245
00:11:33,370 --> 00:11:40,880
<font color="#E5E5E5">everything is like everything is that</font>

246
00:11:37,900 --> 00:11:42,890
predictable<font color="#CCCCCC"> and the</font><font color="#E5E5E5"> most fun point here</font>

247
00:11:40,880 --> 00:11:46,040
is that thanks to the free entry offset

248
00:11:42,890 --> 00:11:46,939
the lfh<font color="#E5E5E5"> keeps free chunk in last in</font>

249
00:11:46,040 --> 00:11:49,550
first out fresh

250
00:11:46,940 --> 00:11:52,190
so this<font color="#E5E5E5"> table like</font><font color="#CCCCCC"> my Oxley my luck will</font>

251
00:11:49,550 --> 00:11:54,680
will<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> sure retelling the</font>

252
00:11:52,190 --> 00:11:55,610
<font color="#CCCCCC">same chunk</font><font color="#E5E5E5"> so we can exploit the use</font>

253
00:11:54,680 --> 00:11:59,359
after free<font color="#CCCCCC"> buggy</font>

254
00:11:55,610 --> 00:12:01,850
very<font color="#E5E5E5"> very easily</font><font color="#CCCCCC"> okay now that we can</font>

255
00:11:59,360 --> 00:12:04,940
allocate some other objects on the same

256
00:12:01,850 --> 00:12:06,800
fleet person name<font color="#E5E5E5"> address in memory we</font>

257
00:12:04,940 --> 00:12:08,360
can<font color="#E5E5E5"> start like any primitives because if</font>

258
00:12:06,800 --> 00:12:10,069
we want and of course<font color="#CCCCCC"> we want</font><font color="#E5E5E5"> because</font>

259
00:12:08,360 --> 00:12:12,290
it's the goal in life<font color="#E5E5E5"> to get arbitrary</font>

260
00:12:10,070 --> 00:12:15,250
code execution<font color="#CCCCCC"> we need to gain probably</font>

261
00:12:12,290 --> 00:12:18,290
an declarative or arbitrary<font color="#E5E5E5"> read right</font>

262
00:12:15,250 --> 00:12:20,960
so each person<font color="#E5E5E5"> has a name is</font><font color="#CCCCCC"> the string</font>

263
00:12:18,290 --> 00:12:23,660
name<font color="#E5E5E5"> and the interface simply like</font><font color="#CCCCCC"> lets</font>

264
00:12:20,960 --> 00:12:27,290
you dump the name it's printed<font color="#E5E5E5"> over the</font>

265
00:12:23,660 --> 00:12:30,949
<font color="#E5E5E5">sockets with the info command but the</font>

266
00:12:27,290 --> 00:12:32,930
name<font color="#E5E5E5"> is that simply is like a steady</font>

267
00:12:30,950 --> 00:12:35,150
stream is<font color="#E5E5E5"> a pointer in the present</font>

268
00:12:32,930 --> 00:12:37,579
<font color="#CCCCCC">instance but</font><font color="#E5E5E5"> I can allocate whatever I</font>

269
00:12:35,150 --> 00:12:39,860
want there like<font color="#E5E5E5"> string even which I</font>

270
00:12:37,580 --> 00:12:43,220
basically can control every single<font color="#E5E5E5"> byte</font>

271
00:12:39,860 --> 00:12:46,430
<font color="#E5E5E5">still so I can fake the</font><font color="#CCCCCC"> name pointer and</font>

272
00:12:43,220 --> 00:12:50,180
set it<font color="#E5E5E5"> to fixed address in memory after</font>

273
00:12:46,430 --> 00:12:53,449
<font color="#CCCCCC">the address</font><font color="#E5E5E5"> for my choice and then I can</font>

274
00:12:50,180 --> 00:12:55,459
dump it the great thing here<font color="#E5E5E5"> is that the</font>

275
00:12:53,450 --> 00:12:57,770
length of the name is<font color="#CCCCCC"> also a field in</font>

276
00:12:55,460 --> 00:12:59,750
the<font color="#CCCCCC"> STD strain which it's in the person</font>

277
00:12:57,770 --> 00:13:03,170
instance so we<font color="#E5E5E5"> basically have arbitrary</font>

278
00:12:59,750 --> 00:13:05,990
<font color="#CCCCCC">red</font><font color="#E5E5E5"> with a</font><font color="#CCCCCC"> maternity length</font><font color="#E5E5E5"> and it's</font><font color="#CCCCCC"> an</font>

279
00:13:03,170 --> 00:13:07,939
its goal<font color="#E5E5E5"> in the very same</font><font color="#CCCCCC"> way in</font><font color="#E5E5E5"> the</font>

280
00:13:05,990 --> 00:13:09,860
<font color="#CCCCCC">very same fashion</font><font color="#E5E5E5"> we have out red lights</font>

281
00:13:07,940 --> 00:13:11,600
without<font color="#E5E5E5"> revealing right because the</font>

282
00:13:09,860 --> 00:13:15,770
interface<font color="#E5E5E5"> basically lets you to</font><font color="#CCCCCC"> update a</font>

283
00:13:11,600 --> 00:13:17,990
name as well so yeah it's cool<font color="#E5E5E5"> and now</font>

284
00:13:15,770 --> 00:13:19,640
that's that's that's<font color="#CCCCCC"> like not enough</font>

285
00:13:17,990 --> 00:13:21,710
<font color="#CCCCCC">because we want to</font><font color="#E5E5E5"> execute code so we</font>

286
00:13:19,640 --> 00:13:24,230
can corrupt some pointers<font color="#E5E5E5"> but it's</font>

287
00:13:21,710 --> 00:13:25,880
actually way way easier<font color="#CCCCCC"> we have a</font>

288
00:13:24,230 --> 00:13:29,810
<font color="#E5E5E5">function</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> virtual function in the</font>

289
00:13:25,880 --> 00:13:32,000
class is<font color="#E5E5E5"> not even in in in the</font><font color="#CCCCCC"> VTA Abell</font>

290
00:13:29,810 --> 00:13:34,099
you don't need to deal<font color="#CCCCCC"> with double D</font>

291
00:13:32,000 --> 00:13:35,630
references<font color="#E5E5E5"> its function pointer inside</font>

292
00:13:34,100 --> 00:13:37,700
the class called<font color="#CCCCCC"> own encounter which get</font>

293
00:13:35,630 --> 00:13:41,390
triggered<font color="#CCCCCC"> each time</font><font color="#E5E5E5"> two different</font>

294
00:13:37,700 --> 00:13:45,170
persons made on mates<font color="#E5E5E5"> on the map so</font><font color="#CCCCCC"> by</font>

295
00:13:41,390 --> 00:13:46,220
<font color="#CCCCCC">by</font><font color="#E5E5E5"> like basically spray string sets in</font>

296
00:13:45,170 --> 00:13:48,380
the relevant<font color="#E5E5E5"> offsets</font>

297
00:13:46,220 --> 00:13:52,160
fixed address and then move to different

298
00:13:48,380 --> 00:13:54,470
<font color="#E5E5E5">persons to the same spots we have the</font>

299
00:13:52,160 --> 00:13:59,670
ability to jump to arbitrary address and

300
00:13:54,470 --> 00:14:02,770
<font color="#CCCCCC">again like execute code okay cool</font>

301
00:13:59,670 --> 00:14:05,079
but I know that<font color="#E5E5E5"> I will</font><font color="#CCCCCC"> probably need to</font>

302
00:14:02,770 --> 00:14:06,579
read more<font color="#CCCCCC"> than one address right</font><font color="#E5E5E5"> you</font>

303
00:14:05,080 --> 00:14:09,760
will probably<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to read like more</font>

304
00:14:06,580 --> 00:14:11,890
than once<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we can make a really really</font>

305
00:14:09,760 --> 00:14:14,470
elegant trick<font color="#CCCCCC"> I really like this stuff</font>

306
00:14:11,890 --> 00:14:16,750
in exploits<font color="#CCCCCC"> is wreckin illegal and you</font>

307
00:14:14,470 --> 00:14:18,850
can<font color="#CCCCCC"> corrupt</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> own encounter function</font>

308
00:14:16,750 --> 00:14:21,910
to put two points to<font color="#E5E5E5"> actually get s and</font>

309
00:14:18,850 --> 00:14:24,520
then move persons on<font color="#E5E5E5"> the map and each</font>

310
00:14:21,910 --> 00:14:26,770
time they<font color="#E5E5E5"> meet they get s function will</font>

311
00:14:24,520 --> 00:14:29,500
be trigger as<font color="#CCCCCC"> their own encounter</font>

312
00:14:26,770 --> 00:14:32,260
function but it's really cool<font color="#E5E5E5"> since they</font>

313
00:14:29,500 --> 00:14:34,600
get<font color="#CCCCCC"> s gets the</font><font color="#E5E5E5"> first argument that on</font>

314
00:14:32,260 --> 00:14:36,910
encounter with God which is<font color="#E5E5E5"> a person</font>

315
00:14:34,600 --> 00:14:40,210
address in memory<font color="#E5E5E5"> so I can send that</font>

316
00:14:36,910 --> 00:14:42,400
<font color="#CCCCCC">over the socket which will write</font><font color="#E5E5E5"> on</font>

317
00:14:40,210 --> 00:14:45,850
honor<font color="#E5E5E5"> or or like all the fields all the</font>

318
00:14:42,400 --> 00:14:47,740
attributes<font color="#CCCCCC"> of the person instance and I</font>

319
00:14:45,850 --> 00:14:49,480
do that without trigger any other

320
00:14:47,740 --> 00:14:51,580
vulnerability whatsoever

321
00:14:49,480 --> 00:14:54,430
okay<font color="#E5E5E5"> I like sim I like simply like</font>

322
00:14:51,580 --> 00:14:57,430
trigger the devil ability once<font color="#E5E5E5"> and then</font>

323
00:14:54,430 --> 00:14:59,680
I can write<font color="#E5E5E5"> on all of the fields of the</font>

324
00:14:57,430 --> 00:15:01,930
structure like over the<font color="#CCCCCC"> socket</font><font color="#E5E5E5"> which is</font>

325
00:14:59,680 --> 00:15:04,089
like a lyrical<font color="#E5E5E5"> tricks like that</font><font color="#CCCCCC"> it is</font>

326
00:15:01,930 --> 00:15:07,020
the exact stuff that make exploits

327
00:15:04,090 --> 00:15:09,670
reliable and<font color="#E5E5E5"> it's really</font><font color="#CCCCCC"> really</font>

328
00:15:07,020 --> 00:15:11,380
important to<font color="#E5E5E5"> make sure that we trigger</font>

329
00:15:09,670 --> 00:15:14,199
they will never bility as few times as

330
00:15:11,380 --> 00:15:16,720
possible<font color="#E5E5E5"> okay fantastic</font>

331
00:15:14,200 --> 00:15:19,090
let's keep going and so we have

332
00:15:16,720 --> 00:15:22,390
<font color="#E5E5E5">arbitrary readwrite jump</font><font color="#CCCCCC"> limit Eve's</font>

333
00:15:19,090 --> 00:15:25,420
it's cool<font color="#E5E5E5"> yeah basically</font><font color="#CCCCCC"> life is easy</font>

334
00:15:22,390 --> 00:15:27,640
but we have a<font color="#CCCCCC"> salaam</font><font color="#E5E5E5"> everything is under</font>

335
00:15:25,420 --> 00:15:30,939
SLR the<font color="#CCCCCC"> dll</font><font color="#E5E5E5"> is the main binary the heap</font>

336
00:15:27,640 --> 00:15:34,060
the<font color="#E5E5E5"> stock we don't know where everything</font>

337
00:15:30,940 --> 00:15:36,190
is<font color="#CCCCCC"> and so we need to start like flicking</font>

338
00:15:34,060 --> 00:15:38,229
pointers<font color="#E5E5E5"> the problem is that I don't</font>

339
00:15:36,190 --> 00:15:40,780
have<font color="#E5E5E5"> the primitive to read something</font>

340
00:15:38,230 --> 00:15:42,430
relative to me I read absolute<font color="#E5E5E5"> addresses</font>

341
00:15:40,780 --> 00:15:45,579
and I don't<font color="#E5E5E5"> know which address to put</font>

342
00:15:42,430 --> 00:15:46,959
them so I so I probably need<font color="#CCCCCC"> to trigger</font>

343
00:15:45,580 --> 00:15:50,790
some<font color="#CCCCCC"> allocation</font><font color="#E5E5E5"> of some other</font><font color="#CCCCCC"> object</font>

344
00:15:46,960 --> 00:15:53,740
<font color="#CCCCCC">which it's the</font><font color="#E5E5E5"> same offset</font><font color="#CCCCCC"> is the</font>

345
00:15:50,790 --> 00:15:55,750
ssed name in the person<font color="#E5E5E5"> class it has</font>

346
00:15:53,740 --> 00:15:58,480
some<font color="#E5E5E5"> other pointer to him to start to</font>

347
00:15:55,750 --> 00:15:58,990
<font color="#E5E5E5">label way to Lagrangian pointer whatever</font>

348
00:15:58,480 --> 00:16:03,370
you want

349
00:15:58,990 --> 00:16:06,280
well<font color="#E5E5E5"> sed vector actually meets those dos</font>

350
00:16:03,370 --> 00:16:09,910
a as Adam<font color="#E5E5E5"> and so by</font><font color="#CCCCCC"> basically trigger SD</font>

351
00:16:06,280 --> 00:16:10,540
vector we<font color="#CCCCCC"> can do this trick</font><font color="#E5E5E5"> and now</font>

352
00:16:09,910 --> 00:16:12,760
<font color="#CCCCCC">apparently</font>

353
00:16:10,540 --> 00:16:15,579
<font color="#E5E5E5">person in reality have</font>

354
00:16:12,760 --> 00:16:18,040
<font color="#E5E5E5">okay and like person in the challenge</font>

355
00:16:15,580 --> 00:16:20,560
<font color="#E5E5E5">also have friends</font><font color="#CCCCCC"> and each person has a</font>

356
00:16:18,040 --> 00:16:23,020
<font color="#E5E5E5">vector of all of its friends</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> but so</font>

357
00:16:20,560 --> 00:16:25,239
by simply taking<font color="#CCCCCC"> single person and like</font>

358
00:16:23,020 --> 00:16:28,150
<font color="#CCCCCC">II D</font><font color="#E5E5E5"> seven different friends to its</font>

359
00:16:25,240 --> 00:16:30,310
there's the vector<font color="#E5E5E5"> this a containing all</font>

360
00:16:28,150 --> 00:16:33,760
<font color="#CCCCCC">of its</font><font color="#E5E5E5"> friends will be the exact</font><font color="#CCCCCC"> same</font>

361
00:16:30,310 --> 00:16:35,170
<font color="#E5E5E5">size as the person instance and it's</font>

362
00:16:33,760 --> 00:16:39,150
really really<font color="#E5E5E5"> important because we are</font>

363
00:16:35,170 --> 00:16:41,829
<font color="#CCCCCC">in the lfh and and a chance tagalog</font>

364
00:16:39,150 --> 00:16:45,490
<font color="#CCCCCC">organize together when they are in the</font>

365
00:16:41,830 --> 00:16:49,720
<font color="#E5E5E5">same size so we can trigger the location</font>

366
00:16:45,490 --> 00:16:52,930
of some SED vector dump the name of the

367
00:16:49,720 --> 00:16:55,120
person and we get the<font color="#CCCCCC"> v table of density</font>

368
00:16:52,930 --> 00:16:58,780
vector which<font color="#CCCCCC"> is in the</font><font color="#E5E5E5"> other data</font>

369
00:16:55,120 --> 00:17:01,120
section of the main binary well that's

370
00:16:58,780 --> 00:17:03,459
easy<font color="#E5E5E5"> but the problem is that i from</font>

371
00:17:01,120 --> 00:17:05,079
<font color="#E5E5E5">obvious reasons</font><font color="#CCCCCC"> i can control on the</font>

372
00:17:03,460 --> 00:17:08,470
fields on<font color="#E5E5E5"> the attributes of</font><font color="#CCCCCC"> this V</font>

373
00:17:05,079 --> 00:17:11,589
vector so the length of the fake length

374
00:17:08,470 --> 00:17:15,760
of the name will be huge number and I

375
00:17:11,589 --> 00:17:18,550
don't<font color="#E5E5E5"> have any control over that so</font><font color="#CCCCCC"> I do</font>

376
00:17:15,760 --> 00:17:21,819
<font color="#CCCCCC">leak the pointer but the process dies</font>

377
00:17:18,550 --> 00:17:23,829
during<font color="#E5E5E5"> the copy now this is fine</font><font color="#CCCCCC"> because</font>

378
00:17:21,819 --> 00:17:27,819
<font color="#CCCCCC">we are</font><font color="#E5E5E5"> in a CTF and the process</font>

379
00:17:23,829 --> 00:17:30,580
basically<font color="#CCCCCC"> lunches and thanks to the</font><font color="#E5E5E5"> fact</font>

380
00:17:27,819 --> 00:17:32,530
that in like use<font color="#CCCCCC"> of</font><font color="#E5E5E5"> space and all of the</font>

381
00:17:30,580 --> 00:17:35,050
details and<font color="#E5E5E5"> all of the binaries get</font>

382
00:17:32,530 --> 00:17:38,110
randomized in<font color="#CCCCCC"> Boots that's correct but</font>

383
00:17:35,050 --> 00:17:40,360
they still but but they still were they

384
00:17:38,110 --> 00:17:44,590
are individual memory<font color="#E5E5E5"> for the entire</font>

385
00:17:40,360 --> 00:17:46,810
system<font color="#CCCCCC"> lifetime</font><font color="#E5E5E5"> so the process dies it</font>

386
00:17:44,590 --> 00:17:47,320
relaunched<font color="#E5E5E5"> in every pointer that you</font>

387
00:17:46,810 --> 00:17:50,560
<font color="#CCCCCC">leak</font>

388
00:17:47,320 --> 00:17:52,330
stay where it was excess of course for

389
00:17:50,560 --> 00:17:54,250
the stock in<font color="#E5E5E5"> the hip that gets like</font>

390
00:17:52,330 --> 00:17:56,649
<font color="#E5E5E5">randomized</font><font color="#CCCCCC"> in the process creation</font><font color="#E5E5E5"> but</font>

391
00:17:54,250 --> 00:18:00,870
all of the details in the main binary

392
00:17:56,650 --> 00:18:03,910
will stay<font color="#E5E5E5"> will stay well they will okay</font>

393
00:18:00,870 --> 00:18:06,729
now we need<font color="#E5E5E5"> to choose the cost to</font>

394
00:18:03,910 --> 00:18:08,620
execute<font color="#CCCCCC"> I would record right</font><font color="#E5E5E5"> well we can</font>

395
00:18:06,730 --> 00:18:10,660
<font color="#CCCCCC">come out</font><font color="#E5E5E5"> function pointers with tables</font>

396
00:18:08,620 --> 00:18:13,000
we can<font color="#E5E5E5"> crop the stock in the warp we can</font>

397
00:18:10,660 --> 00:18:15,310
basically even load some deal and some

398
00:18:13,000 --> 00:18:20,140
unsightly<font color="#E5E5E5"> ll with our code and it</font><font color="#CCCCCC"> will</font>

399
00:18:15,310 --> 00:18:22,929
be<font color="#E5E5E5"> executed and we can we</font><font color="#CCCCCC"> can to</font>

400
00:18:20,140 --> 00:18:25,330
allocate a<font color="#E5E5E5"> read write execute</font><font color="#CCCCCC"> chant we</font>

401
00:18:22,930 --> 00:18:26,149
can do basically what whatever<font color="#E5E5E5"> we want</font>

402
00:18:25,330 --> 00:18:31,218
<font color="#E5E5E5">in</font>

403
00:18:26,149 --> 00:18:34,309
stops us so<font color="#CCCCCC"> and let's do the lope</font><font color="#E5E5E5"> okay</font>

404
00:18:31,219 --> 00:18:36,799
<font color="#E5E5E5">and let's say let's let's create some</font>

405
00:18:34,309 --> 00:18:39,529
chunk<font color="#CCCCCC"> rid</font><font color="#E5E5E5"> of execute the right shellcode</font>

406
00:18:36,799 --> 00:18:44,899
and<font color="#CCCCCC"> jump to it and now it's time for</font>

407
00:18:39,529 --> 00:18:46,959
demo<font color="#E5E5E5"> and I do hope that on stage</font><font color="#CCCCCC"> the</font>

408
00:18:44,899 --> 00:18:51,379
<font color="#E5E5E5">devil behave just like they did</font>

409
00:18:46,959 --> 00:18:54,649
<font color="#E5E5E5">downstairs if not we I will publish all</font>

410
00:18:51,379 --> 00:18:56,178
<font color="#E5E5E5">of the code and</font><font color="#CCCCCC"> you can execute it at</font>

411
00:18:54,649 --> 00:19:00,049
home please

412
00:18:56,179 --> 00:19:03,439
please do so so let's go to the to the

413
00:19:00,049 --> 00:19:07,689
like Windows<font color="#E5E5E5"> 7 exploits and I have the</font>

414
00:19:03,439 --> 00:19:12,019
IP right here somewhere<font color="#CCCCCC"> okay awesome and</font>

415
00:19:07,689 --> 00:19:16,279
let's launch the VM<font color="#CCCCCC"> and since we are in</font>

416
00:19:12,019 --> 00:19:20,419
<font color="#CCCCCC">a CTF I simply decided that they</font><font color="#E5E5E5"> like</font>

417
00:19:16,279 --> 00:19:24,319
arbitrary code that we will execute will

418
00:19:20,419 --> 00:19:27,039
be<font color="#E5E5E5"> to like read the flag and the flag is</font>

419
00:19:24,319 --> 00:19:33,499
<font color="#CCCCCC">I elevator since we all love Ada</font><font color="#E5E5E5"> and</font>

420
00:19:27,039 --> 00:19:37,869
<font color="#E5E5E5">let's execute the challenge just to make</font>

421
00:19:33,499 --> 00:19:44,089
<font color="#CCCCCC">sure what's happening okay</font><font color="#E5E5E5"> yeah</font>

422
00:19:37,869 --> 00:19:47,149
84 let's hope<font color="#E5E5E5"> that again the physics on</font>

423
00:19:44,089 --> 00:19:50,059
stage is<font color="#CCCCCC"> like just</font><font color="#E5E5E5"> like down stuff so we</font>

424
00:19:47,149 --> 00:19:51,408
<font color="#CCCCCC">leaked</font><font color="#E5E5E5"> the address of the main binary we</font>

425
00:19:50,059 --> 00:19:54,289
leave the<font color="#CCCCCC"> address of the utility</font><font color="#E5E5E5"> base</font>

426
00:19:51,409 --> 00:19:57,379
since I have some like<font color="#CCCCCC"> pivots</font><font color="#E5E5E5"> Dale</font><font color="#CCCCCC"> came</font>

427
00:19:54,289 --> 00:20:01,399
<font color="#CCCCCC">at 32 they heap the</font><font color="#E5E5E5"> stock and if we do</font>

428
00:19:57,379 --> 00:20:04,569
up we have the flag<font color="#CCCCCC"> okay so the first</font>

429
00:20:01,399 --> 00:20:04,569
demo box thank you

430
00:20:08,720 --> 00:20:17,160
awesome<font color="#E5E5E5"> yeah the</font><font color="#CCCCCC"> postal caches of</font><font color="#E5E5E5"> course</font>

431
00:20:11,580 --> 00:20:19,949
<font color="#E5E5E5">it's like a CTF it's it's cool and we go</font>

432
00:20:17,160 --> 00:20:23,550
to the<font color="#CCCCCC"> Germany</font><font color="#E5E5E5"> to the</font><font color="#CCCCCC"> next operating</font>

433
00:20:19,950 --> 00:20:26,030
system we understand<font color="#CCCCCC"> pressured one so we</font>

434
00:20:23,550 --> 00:20:30,060
take the very<font color="#CCCCCC"> simple C that we executed</font>

435
00:20:26,030 --> 00:20:33,090
<font color="#E5E5E5">like just now we and if you try to</font>

436
00:20:30,060 --> 00:20:35,730
execute it trust<font color="#E5E5E5"> me it will fail and it</font>

437
00:20:33,090 --> 00:20:38,550
will fail<font color="#CCCCCC"> since</font><font color="#E5E5E5"> the shapefiles and the</font>

438
00:20:35,730 --> 00:20:40,800
ship<font color="#E5E5E5"> failed since we have a lot of</font>

439
00:20:38,550 --> 00:20:43,470
change a massive<font color="#E5E5E5"> change like between the</font>

440
00:20:40,800 --> 00:20:48,510
<font color="#E5E5E5">allocated lfh between Windows 7 and</font>

441
00:20:43,470 --> 00:20:50,970
Windows 8<font color="#E5E5E5"> and seriously like a lot of</font>

442
00:20:48,510 --> 00:20:53,250
<font color="#E5E5E5">really cool and awesome engineers</font>

443
00:20:50,970 --> 00:20:56,370
<font color="#E5E5E5">looking like they invested like a lot of</font>

444
00:20:53,250 --> 00:20:59,820
time in deaths and the lfh looks

445
00:20:56,370 --> 00:21:01,649
extremely different<font color="#E5E5E5"> and first of all we</font>

446
00:20:59,820 --> 00:21:04,639
<font color="#CCCCCC">don't have</font><font color="#E5E5E5"> this free entry offset field</font>

447
00:21:01,650 --> 00:21:07,770
<font color="#E5E5E5">which which</font><font color="#CCCCCC"> is really really good</font>

448
00:21:04,640 --> 00:21:09,540
instead we have<font color="#E5E5E5"> a bitmap which simply</font>

449
00:21:07,770 --> 00:21:12,560
indicates or each<font color="#CCCCCC"> ant in the user blocks</font>

450
00:21:09,540 --> 00:21:15,420
<font color="#E5E5E5">if it's allocated or if it's freed and</font>

451
00:21:12,560 --> 00:21:18,179
moreover all of them all of<font color="#E5E5E5"> their</font>

452
00:21:15,420 --> 00:21:21,390
locations are randomized<font color="#E5E5E5"> the order of</font>

453
00:21:18,180 --> 00:21:24,000
the<font color="#E5E5E5"> allocations cannot be predicted</font><font color="#CCCCCC"> so</font>

454
00:21:21,390 --> 00:21:26,160
easily<font color="#E5E5E5"> as it was before and if you take</font>

455
00:21:24,000 --> 00:21:30,000
the very<font color="#E5E5E5"> same tester that you had in</font>

456
00:21:26,160 --> 00:21:33,090
Windows 7<font color="#E5E5E5"> and execute it on like Windows</font>

457
00:21:30,000 --> 00:21:34,980
10 threshold 108<font color="#E5E5E5"> yeah it's it's like</font>

458
00:21:33,090 --> 00:21:37,139
risk is the<font color="#E5E5E5"> same you</font><font color="#CCCCCC"> can see on the</font>

459
00:21:34,980 --> 00:21:39,000
right<font color="#CCCCCC"> side that</font><font color="#E5E5E5"> all of the addresses are</font>

460
00:21:37,140 --> 00:21:41,700
in<font color="#E5E5E5"> complete chaos you can't know what</font>

461
00:21:39,000 --> 00:21:45,090
<font color="#E5E5E5">comes afterwards and the state is really</font>

462
00:21:41,700 --> 00:21:47,220
not predictable<font color="#CCCCCC"> it as it was before now</font>

463
00:21:45,090 --> 00:21:49,110
since we<font color="#CCCCCC"> don't have</font><font color="#E5E5E5"> the free entry</font>

464
00:21:47,220 --> 00:21:51,090
offset<font color="#E5E5E5"> field they stopped like</font>

465
00:21:49,110 --> 00:21:52,919
monochromatic want<font color="#CCCCCC"> won't</font><font color="#E5E5E5"> return in the</font>

466
00:21:51,090 --> 00:21:55,530
same chunk<font color="#E5E5E5"> right because the allocation</font>

467
00:21:52,920 --> 00:21:58,410
are<font color="#E5E5E5"> randomized so it's not that</font><font color="#CCCCCC"> reveal</font>

468
00:21:55,530 --> 00:22:00,270
anymore to<font color="#CCCCCC"> calm</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> lock and to get the</font>

469
00:21:58,410 --> 00:22:02,970
last<font color="#E5E5E5"> free chunk actually with extremely</font>

470
00:22:00,270 --> 00:22:07,379
high probability<font color="#E5E5E5"> you won't get this</font>

471
00:22:02,970 --> 00:22:09,120
<font color="#CCCCCC">chance ok cool now I want to I pass it</font>

472
00:22:07,380 --> 00:22:11,010
<font color="#CCCCCC">right because</font><font color="#E5E5E5"> we agree together that the</font>

473
00:22:09,120 --> 00:22:13,199
point in in<font color="#E5E5E5"> in life is to execute</font>

474
00:22:11,010 --> 00:22:16,590
arbitrary code<font color="#E5E5E5"> so we need to bypass the</font>

475
00:22:13,200 --> 00:22:19,590
mitigation and<font color="#E5E5E5"> like otherwise we don't</font>

476
00:22:16,590 --> 00:22:21,070
<font color="#E5E5E5">have like a reason to live</font><font color="#CCCCCC"> so um</font><font color="#E5E5E5"> in</font>

477
00:22:19,590 --> 00:22:23,800
<font color="#E5E5E5">order to bypass the mitigation</font>

478
00:22:21,070 --> 00:22:27,370
we have done<font color="#E5E5E5"> to like to work understand</font>

479
00:22:23,800 --> 00:22:31,680
the implementation<font color="#CCCCCC"> and</font><font color="#E5E5E5"> and to see where</font>

480
00:22:27,370 --> 00:22:34,629
the random comes from<font color="#E5E5E5"> okay so it's</font>

481
00:22:31,680 --> 00:22:36,940
really<font color="#CCCCCC"> really interesting and from now</font>

482
00:22:34,630 --> 00:22:39,360
<font color="#CCCCCC">on we have the bitmap which indicates</font>

483
00:22:36,940 --> 00:22:43,000
for each chunk<font color="#E5E5E5"> if it's freed or if it up</font>

484
00:22:39,360 --> 00:22:45,669
like<font color="#E5E5E5"> allocated so the locator choose a</font>

485
00:22:43,000 --> 00:22:48,280
random position on the bitmap<font color="#E5E5E5"> it scans</font>

486
00:22:45,670 --> 00:22:51,130
from there in a linear fashion<font color="#E5E5E5"> until it</font>

487
00:22:48,280 --> 00:22:53,230
sees bits that indicates free chunk it

488
00:22:51,130 --> 00:22:56,170
simply flip the<font color="#E5E5E5"> bits and</font><font color="#CCCCCC"> return</font><font color="#E5E5E5"> this</font>

489
00:22:53,230 --> 00:22:58,150
chance to<font color="#E5E5E5"> the user and there you go and</font>

490
00:22:56,170 --> 00:23:00,280
of course since the<font color="#CCCCCC"> position in the</font>

491
00:22:58,150 --> 00:23:02,350
bitmap is random the allocation order

492
00:23:00,280 --> 00:23:06,220
will be random but<font color="#CCCCCC"> the question</font><font color="#E5E5E5"> remains</font>

493
00:23:02,350 --> 00:23:08,080
how the random<font color="#E5E5E5"> position is chosen so we</font>

494
00:23:06,220 --> 00:23:10,360
have a looking like a new symbol in a

495
00:23:08,080 --> 00:23:13,510
<font color="#E5E5E5">tidy</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> RTL pillow</font><font color="#CCCCCC"> foggy random data</font>

496
00:23:10,360 --> 00:23:16,629
which is a fixed<font color="#CCCCCC"> address of a hundred</font>

497
00:23:13,510 --> 00:23:18,280
hex values which are random truly random

498
00:23:16,630 --> 00:23:20,380
since the guys this is not<font color="#CCCCCC"> the issue</font>

499
00:23:18,280 --> 00:23:22,930
<font color="#E5E5E5">okay all those values are simply</font>

500
00:23:20,380 --> 00:23:26,290
<font color="#CCCCCC">decorated</font><font color="#E5E5E5"> from Krypton</font><font color="#CCCCCC"> 32 and ohm in</font>

501
00:23:22,930 --> 00:23:29,580
<font color="#CCCCCC">captivity</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the DLL and let's find</font>

502
00:23:26,290 --> 00:23:33,220
<font color="#CCCCCC">there a cryptographic random dip and</font>

503
00:23:29,580 --> 00:23:35,230
each time we hold a pointer to<font color="#E5E5E5"> this</font>

504
00:23:33,220 --> 00:23:38,950
random<font color="#CCCCCC"> dot array</font><font color="#E5E5E5"> and every time you do a</font>

505
00:23:35,230 --> 00:23:41,230
<font color="#CCCCCC">maroc</font><font color="#E5E5E5"> I take the current like random</font>

506
00:23:38,950 --> 00:23:46,000
value from<font color="#E5E5E5"> the array and this random</font>

507
00:23:41,230 --> 00:23:48,370
<font color="#E5E5E5">value is used as</font><font color="#CCCCCC"> the index for</font><font color="#E5E5E5"> skin in</font>

508
00:23:46,000 --> 00:23:52,510
the bitmap so of course you can<font color="#CCCCCC"> see from</font>

509
00:23:48,370 --> 00:23:55,300
here that the<font color="#CCCCCC"> allocation of like audio</font>

510
00:23:52,510 --> 00:23:58,180
will<font color="#E5E5E5"> be random</font><font color="#CCCCCC"> let's see this happens so</font>

511
00:23:55,300 --> 00:24:00,399
sorry<font color="#E5E5E5"> so here</font><font color="#CCCCCC"> so here on the lock right</font>

512
00:23:58,180 --> 00:24:03,820
side you<font color="#CCCCCC"> see the like user blocks which</font>

513
00:24:00,400 --> 00:24:06,220
are the chunks on the hip and and you

514
00:24:03,820 --> 00:24:08,679
can see the bitmap which describe it<font color="#E5E5E5"> now</font>

515
00:24:06,220 --> 00:24:11,530
let's let's call<font color="#CCCCCC"> malloc okay so we</font>

516
00:24:08,680 --> 00:24:14,350
choose some like random position in the

517
00:24:11,530 --> 00:24:17,410
bitmap and we start to<font color="#E5E5E5"> scan from there</font>

518
00:24:14,350 --> 00:24:18,760
now we like happen to choose<font color="#CCCCCC"> 0 which</font>

519
00:24:17,410 --> 00:24:21,190
like indicates free chunk

520
00:24:18,760 --> 00:24:22,210
we simply<font color="#CCCCCC"> fit</font><font color="#E5E5E5"> flip the bits and return</font>

521
00:24:21,190 --> 00:24:24,340
<font color="#E5E5E5">on the channel to the user</font>

522
00:24:22,210 --> 00:24:27,730
now we call another<font color="#E5E5E5"> malach and we take</font>

523
00:24:24,340 --> 00:24:30,580
<font color="#E5E5E5">another random value this</font><font color="#CCCCCC"> llegando</font><font color="#E5E5E5"> value</font>

524
00:24:27,730 --> 00:24:33,670
like it happens to be a allocated chunk

525
00:24:30,580 --> 00:24:34,509
right there<font color="#CCCCCC"> so we start to scan</font><font color="#E5E5E5"> from</font>

526
00:24:33,670 --> 00:24:37,049
<font color="#E5E5E5">there in</font>

527
00:24:34,509 --> 00:24:40,719
in<font color="#E5E5E5"> a fashion until we see free chunk and</font>

528
00:24:37,049 --> 00:24:43,779
<font color="#E5E5E5">then we flip the</font><font color="#CCCCCC"> beat and return</font><font color="#E5E5E5"> in the</font>

529
00:24:40,719 --> 00:24:46,239
trunk<font color="#E5E5E5"> to the user now of course there is</font>

530
00:24:43,779 --> 00:24:49,929
a serious very serious issue here

531
00:24:46,239 --> 00:24:52,509
<font color="#E5E5E5">because</font><font color="#CCCCCC"> they all of the random</font><font color="#E5E5E5"> values</font>

532
00:24:49,929 --> 00:24:53,259
are in static<font color="#E5E5E5"> array which size of</font>

533
00:24:52,509 --> 00:24:55,629
handled Hicks

534
00:24:53,259 --> 00:24:57,699
so what's<font color="#E5E5E5"> happen if we try to like</font>

535
00:24:55,629 --> 00:24:59,649
allocate more than like Heather the hex

536
00:24:57,699 --> 00:25:00,999
allocations which basically happen

537
00:24:59,649 --> 00:25:02,668
really really<font color="#E5E5E5"> fast like even if you</font>

538
00:25:00,999 --> 00:25:04,809
<font color="#CCCCCC">don't do it your process will probably</font>

539
00:25:02,669 --> 00:25:08,079
<font color="#CCCCCC">does</font><font color="#E5E5E5"> allocations all the time</font>

540
00:25:04,809 --> 00:25:12,789
so the<font color="#CCCCCC"> pointer will wrap around</font><font color="#E5E5E5"> the</font>

541
00:25:08,079 --> 00:25:15,789
<font color="#E5E5E5">array but they've but the values will</font>

542
00:25:12,789 --> 00:25:18,779
run them before but<font color="#CCCCCC"> they stay intact in</font>

543
00:25:15,789 --> 00:25:22,719
this and<font color="#CCCCCC"> they're the exact same values</font>

544
00:25:18,779 --> 00:25:27,219
<font color="#CCCCCC">so if you try</font><font color="#E5E5E5"> to execute this</font><font color="#CCCCCC"> plc which</font>

545
00:25:22,719 --> 00:25:29,799
which which which like simply does

546
00:25:27,219 --> 00:25:33,549
allocation<font color="#CCCCCC"> free the chunk</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then for</font>

547
00:25:29,799 --> 00:25:36,609
<font color="#E5E5E5">FF x do like unlock flee a</font><font color="#CCCCCC"> log 3 a lock</font>

548
00:25:33,549 --> 00:25:38,679
free and do the location<font color="#CCCCCC"> again the</font>

549
00:25:36,609 --> 00:25:41,168
second<font color="#CCCCCC"> allocation after the loop</font><font color="#E5E5E5"> will</font>

550
00:25:38,679 --> 00:25:43,569
use the exact same random<font color="#E5E5E5"> value from the</font>

551
00:25:41,169 --> 00:25:45,819
array in the bitmap and those for sure

552
00:25:43,569 --> 00:25:48,609
<font color="#CCCCCC">by</font><font color="#E5E5E5"> definition it will return to</font><font color="#CCCCCC"> you the</font>

553
00:25:45,819 --> 00:25:51,639
<font color="#E5E5E5">exact same chunk that</font><font color="#CCCCCC"> would like</font><font color="#E5E5E5"> return</font>

554
00:25:48,609 --> 00:25:53,978
in the first allocation the whole point

555
00:25:51,639 --> 00:25:55,899
of the loop is just<font color="#E5E5E5"> to increment the</font>

556
00:25:53,979 --> 00:25:58,179
pointer on<font color="#E5E5E5"> the random</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> and to make</font>

557
00:25:55,899 --> 00:26:02,018
it available<font color="#CCCCCC"> that's it and this</font><font color="#E5E5E5"> is</font>

558
00:25:58,179 --> 00:26:04,719
really really<font color="#E5E5E5"> deterministic</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> this kind</font>

559
00:26:02,019 --> 00:26:06,940
<font color="#E5E5E5">of flag bypasses is is like really</font>

560
00:26:04,719 --> 00:26:09,789
<font color="#E5E5E5">really</font><font color="#CCCCCC"> cool it's extremely like makes me</font>

561
00:26:06,940 --> 00:26:13,659
<font color="#E5E5E5">happy to see tricks like that and of</font>

562
00:26:09,789 --> 00:26:16,658
<font color="#E5E5E5">course this exactly solve my problem</font>

563
00:26:13,659 --> 00:26:19,329
since<font color="#E5E5E5"> I can execute this</font><font color="#CCCCCC"> PLC and you see</font>

564
00:26:16,659 --> 00:26:22,479
that it works perfectly with probability

565
00:26:19,329 --> 00:26:25,209
<font color="#CCCCCC">1 we get the same junk</font><font color="#E5E5E5"> ok awesome</font>

566
00:26:22,479 --> 00:26:26,769
so we solve the shape issue<font color="#E5E5E5"> and now we</font>

567
00:26:25,209 --> 00:26:28,529
can<font color="#E5E5E5"> continue with the exploit because</font>

568
00:26:26,769 --> 00:26:32,079
<font color="#CCCCCC">this is the point of</font><font color="#E5E5E5"> the talk right and</font>

569
00:26:28,529 --> 00:26:34,359
so yeah<font color="#CCCCCC"> and</font><font color="#E5E5E5"> now we need to like execute</font>

570
00:26:32,079 --> 00:26:36,009
code<font color="#E5E5E5"> so I only want to call to some</font>

571
00:26:34,359 --> 00:26:39,249
function<font color="#CCCCCC"> which we lick me the like</font>

572
00:26:36,009 --> 00:26:42,059
address of the stock since it is easy to

573
00:26:39,249 --> 00:26:44,499
<font color="#E5E5E5">lick all of the</font><font color="#CCCCCC"> DNA else</font><font color="#E5E5E5"> and I mean</font><font color="#CCCCCC"> oh</font>

574
00:26:42,059 --> 00:26:47,079
and like the main binary<font color="#E5E5E5"> just like I did</font>

575
00:26:44,499 --> 00:26:48,370
but in<font color="#E5E5E5"> the heap of course it's again</font>

576
00:26:47,079 --> 00:26:51,220
<font color="#CCCCCC">it's pretty</font><font color="#E5E5E5"> easy to</font><font color="#CCCCCC"> lick this</font>

577
00:26:48,370 --> 00:26:52,929
 em is like a<font color="#E5E5E5"> little more</font>

578
00:26:51,220 --> 00:26:55,540
<font color="#CCCCCC">complicated in this challenge</font>

579
00:26:52,930 --> 00:26:57,670
so let's call<font color="#CCCCCC"> two of TLP get stuck</font>

580
00:26:55,540 --> 00:27:03,520
limits<font color="#E5E5E5"> in a</font><font color="#CCCCCC"> caddy deal</font><font color="#E5E5E5"> it should make me</font>

581
00:26:57,670 --> 00:27:05,740
the stock crush into<font color="#CCCCCC"> 29</font><font color="#E5E5E5"> and in 29 is</font><font color="#CCCCCC"> the</font>

582
00:27:03,520 --> 00:27:08,080
first<font color="#E5E5E5"> fill feature we have</font><font color="#CCCCCC"> it since</font>

583
00:27:05,740 --> 00:27:12,520
<font color="#E5E5E5">Windows 8 and basically if you process</font>

584
00:27:08,080 --> 00:27:14,500
<font color="#E5E5E5">does that it means hey dude</font><font color="#CCCCCC"> I detected</font>

585
00:27:12,520 --> 00:27:16,180
some really inappropriate<font color="#CCCCCC"> views or</font>

586
00:27:14,500 --> 00:27:18,340
something<font color="#E5E5E5"> really really bad happened I</font>

587
00:27:16,180 --> 00:27:18,970
<font color="#E5E5E5">don't know like what</font><font color="#CCCCCC"> to do it</font><font color="#E5E5E5"> game</font><font color="#CCCCCC"> over</font>

588
00:27:18,340 --> 00:27:26,428
I'm out

589
00:27:18,970 --> 00:27:30,280
<font color="#CCCCCC">bye and yeah if if you forces does that</font>

590
00:27:26,429 --> 00:27:31,480
something<font color="#E5E5E5"> would happen</font><font color="#CCCCCC"> okay and</font><font color="#E5E5E5"> okay</font>

591
00:27:30,280 --> 00:27:34,230
<font color="#E5E5E5">let's go</font>

592
00:27:31,480 --> 00:27:36,790
simple<font color="#E5E5E5"> beats up in the stock</font><font color="#CCCCCC"> and see</font>

593
00:27:34,230 --> 00:27:39,850
like where it comes from<font color="#E5E5E5"> and it comes</font>

594
00:27:36,790 --> 00:27:41,620
from<font color="#CCCCCC"> gal check I call F</font><font color="#E5E5E5"> PTR and it's</font>

595
00:27:39,850 --> 00:27:44,020
kind of interesting since the first

596
00:27:41,620 --> 00:27:46,090
argument to<font color="#E5E5E5"> this function was</font><font color="#CCCCCC"> the</font>

597
00:27:44,020 --> 00:27:49,840
<font color="#CCCCCC">address</font><font color="#E5E5E5"> that I</font><font color="#CCCCCC"> try to</font><font color="#E5E5E5"> jump to you see</font>

598
00:27:46,090 --> 00:27:52,270
that is actual<font color="#CCCCCC"> bytecode in anti DLL</font><font color="#E5E5E5"> so</font>

599
00:27:49,840 --> 00:27:55,240
we have safety<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is control flow</font>

600
00:27:52,270 --> 00:27:59,050
<font color="#E5E5E5">girl and the job of</font><font color="#CCCCCC"> CFG is to basically</font>

601
00:27:55,240 --> 00:28:01,900
a make sure that every indirect<font color="#E5E5E5"> bunch is</font>

602
00:27:59,050 --> 00:28:05,919
<font color="#E5E5E5">okay in the sense that every time that</font>

603
00:28:01,900 --> 00:28:08,500
you try to jump<font color="#CCCCCC"> or call</font><font color="#E5E5E5"> to some address</font>

604
00:28:05,920 --> 00:28:11,460
<font color="#E5E5E5">to function pointer again</font><font color="#CCCCCC"> in direct</font>

605
00:28:08,500 --> 00:28:13,929
branch call of the<font color="#CCCCCC"> X</font><font color="#E5E5E5"> caller bakes and</font>

606
00:28:11,460 --> 00:28:16,000
symbols in your binary<font color="#E5E5E5"> you have a</font>

607
00:28:13,929 --> 00:28:18,250
whitelist of function<font color="#E5E5E5"> that the address</font>

608
00:28:16,000 --> 00:28:21,490
that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> try to jump to has to be in</font>

609
00:28:18,250 --> 00:28:24,250
this whitelist<font color="#E5E5E5"> if he doesn't about and</font>

610
00:28:21,490 --> 00:28:27,730
this exactly<font color="#E5E5E5"> what's happened here and</font>

611
00:28:24,250 --> 00:28:30,790
there are many knowing like<font color="#E5E5E5"> why</font><font color="#CCCCCC"> persist</font>

612
00:28:27,730 --> 00:28:32,890
and workarounds for<font color="#CCCCCC"> it</font><font color="#E5E5E5"> and jovially gave</font>

613
00:28:30,790 --> 00:28:35,730
a great<font color="#CCCCCC"> an</font><font color="#E5E5E5"> awesome talk about it in the</font>

614
00:28:32,890 --> 00:28:37,960
<font color="#E5E5E5">last offensive</font><font color="#CCCCCC"> con</font><font color="#E5E5E5"> about CFG</font><font color="#CCCCCC"> CFI</font>

615
00:28:35,730 --> 00:28:38,650
internals<font color="#E5E5E5"> issues we have there</font><font color="#CCCCCC"> how to</font>

616
00:28:37,960 --> 00:28:40,870
<font color="#E5E5E5">fix them</font>

617
00:28:38,650 --> 00:28:44,800
if you are into it please<font color="#E5E5E5"> check</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> out</font>

618
00:28:40,870 --> 00:28:48,040
it's really really awesome talk<font color="#E5E5E5"> okay</font>

619
00:28:44,800 --> 00:28:49,720
but<font color="#E5E5E5"> again they put in life execute</font>

620
00:28:48,040 --> 00:28:53,350
arbitrary code and like all of<font color="#CCCCCC"> this</font>

621
00:28:49,720 --> 00:28:56,830
stuff<font color="#E5E5E5"> we need to bypass safe G and it's</font>

622
00:28:53,350 --> 00:28:58,870
not that<font color="#E5E5E5"> bad</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> CFG does make the</font>

623
00:28:56,830 --> 00:29:01,960
life way way harder because we<font color="#E5E5E5"> don't</font>

624
00:28:58,870 --> 00:29:03,699
<font color="#CCCCCC">have any people</font><font color="#E5E5E5"> try</font><font color="#CCCCCC"> today I can jump</font>

625
00:29:01,960 --> 00:29:05,950
to the middle of function because for

626
00:29:03,700 --> 00:29:08,860
sure<font color="#E5E5E5"> it's not in the white list</font><font color="#CCCCCC"> I can't</font>

627
00:29:05,950 --> 00:29:11,440
jump to<font color="#E5E5E5"> up to like out to</font><font color="#CCCCCC"> like LTL</font>

628
00:29:08,860 --> 00:29:15,820
<font color="#CCCCCC">Bristol context and all of the functions</font>

629
00:29:11,440 --> 00:29:18,760
<font color="#E5E5E5">they'd say give me controlling of</font><font color="#CCCCCC"> all</font>

630
00:29:15,820 --> 00:29:21,580
<font color="#CCCCCC">faded of the RSP</font><font color="#E5E5E5"> or the click it to me</font>

631
00:29:18,760 --> 00:29:25,510
and all<font color="#CCCCCC"> of the problematic functions</font><font color="#E5E5E5"> of</font>

632
00:29:21,580 --> 00:29:28,750
like forbidden now<font color="#E5E5E5"> okay but we don't</font>

633
00:29:25,510 --> 00:29:30,669
<font color="#CCCCCC">have yet</font><font color="#E5E5E5"> some finger did they check the</font>

634
00:29:28,750 --> 00:29:33,460
integrity<font color="#CCCCCC"> of the return</font><font color="#E5E5E5"> addresses on the</font>

635
00:29:30,669 --> 00:29:35,649
stack<font color="#CCCCCC"> so if we lick the stack and use</font>

636
00:29:33,460 --> 00:29:37,779
the arbitrary<font color="#E5E5E5"> right primitive that we</font>

637
00:29:35,649 --> 00:29:39,840
have already and<font color="#CCCCCC"> right what it's fine</font>

638
00:29:37,779 --> 00:29:42,429
<font color="#CCCCCC">because we don't</font><font color="#E5E5E5"> have yet something that</font>

639
00:29:39,840 --> 00:29:45,760
validate the integrity of the return

640
00:29:42,429 --> 00:29:48,010
<font color="#E5E5E5">addresses</font><font color="#CCCCCC"> okay so let's do it</font>

641
00:29:45,760 --> 00:29:54,059
<font color="#E5E5E5">again it's really it's really really</font>

642
00:29:48,010 --> 00:29:56,559
important<font color="#CCCCCC"> to see a demo we I had some</font>

643
00:29:54,059 --> 00:30:00,779
random going on with like threshold<font color="#E5E5E5"> one</font>

644
00:29:56,559 --> 00:30:03,760
VM<font color="#CCCCCC"> Hill and something happened there I</font>

645
00:30:00,779 --> 00:30:06,130
hope<font color="#E5E5E5"> that on stage it will be fine</font><font color="#CCCCCC"> if</font>

646
00:30:03,760 --> 00:30:09,010
not<font color="#CCCCCC"> again the code will be published</font><font color="#E5E5E5"> you</font>

647
00:30:06,130 --> 00:30:13,049
can<font color="#E5E5E5"> execute it at home and see that it</font>

648
00:30:09,010 --> 00:30:17,529
<font color="#E5E5E5">is cool so let's</font><font color="#CCCCCC"> go to threshold one</font>

649
00:30:13,049 --> 00:30:22,658
again we are in like a CTF<font color="#E5E5E5"> so we should</font>

650
00:30:17,529 --> 00:30:25,870
have a flag and of course post<font color="#E5E5E5"> and</font>

651
00:30:22,659 --> 00:30:28,500
because the stem yeah<font color="#E5E5E5"> I love either</font>

652
00:30:25,870 --> 00:30:32,370
blah blah blah<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so we do have a flag</font>

653
00:30:28,500 --> 00:30:35,620
let's try to execute<font color="#E5E5E5"> the</font><font color="#CCCCCC"> tape you see</font>

654
00:30:32,370 --> 00:30:38,070
this is the<font color="#E5E5E5"> right IP yeah and again</font>

655
00:30:35,620 --> 00:30:40,870
let's hope that everything<font color="#E5E5E5"> will be fine</font>

656
00:30:38,070 --> 00:30:47,559
okay so we<font color="#CCCCCC"> leaked</font><font color="#E5E5E5"> the address of them in</font>

657
00:30:40,870 --> 00:30:54,059
binary<font color="#CCCCCC"> and we leaked the address of the</font>

658
00:30:47,559 --> 00:30:55,330
UCL<font color="#CCCCCC"> T ntdll whoop oh man</font><font color="#E5E5E5"> okay</font>

659
00:30:54,059 --> 00:30:59,200
interesting

660
00:30:55,330 --> 00:31:01,779
yeah sometimes<font color="#E5E5E5"> the VM does</font><font color="#CCCCCC"> like some</font>

661
00:30:59,200 --> 00:31:05,529
problems this try<font color="#E5E5E5"> it again</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> okay</font>

662
00:31:01,779 --> 00:31:09,970
yeah the<font color="#E5E5E5"> VM does does does like some</font>

663
00:31:05,529 --> 00:31:12,039
problems<font color="#E5E5E5"> okay sorry but you can execute</font>

664
00:31:09,970 --> 00:31:15,760
it at home and extract it out there

665
00:31:12,039 --> 00:31:18,640
<font color="#E5E5E5">let's see if now it will work</font>

666
00:31:15,760 --> 00:31:21,280
yeah<font color="#E5E5E5"> code his random so this is why we</font>

667
00:31:18,640 --> 00:31:26,500
have vulnerabilities right

668
00:31:21,280 --> 00:31:28,560
and again<font color="#E5E5E5"> the leaks</font><font color="#CCCCCC"> worked fine</font><font color="#E5E5E5"> wave the</font>

669
00:31:26,500 --> 00:31:28,560
<font color="#E5E5E5">flag</font>

670
00:31:35,750 --> 00:31:41,070
honestly I think that<font color="#E5E5E5"> I'm about to have</font>

671
00:31:38,220 --> 00:31:46,710
a heart attack so sorry for<font color="#E5E5E5"> that</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> it</font>

672
00:31:41,070 --> 00:31:50,340
works eventually so cool<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> fantastic</font>

673
00:31:46,710 --> 00:31:52,549
<font color="#CCCCCC">hey I</font><font color="#E5E5E5"> love either so much and</font><font color="#CCCCCC"> hyper V is</font>

674
00:31:50,340 --> 00:31:59,039
the best thing ever<font color="#CCCCCC"> is a great flag</font>

675
00:31:52,549 --> 00:32:02,160
indeed<font color="#E5E5E5"> okay so let's keep</font><font color="#CCCCCC"> going and</font>

676
00:31:59,039 --> 00:32:06,179
<font color="#CCCCCC">windows</font><font color="#E5E5E5"> 10 let's</font><font color="#CCCCCC"> turn</font><font color="#E5E5E5"> five the</font><font color="#CCCCCC"> less</font><font color="#E5E5E5"> test</font>

677
00:32:02,160 --> 00:32:09,600
<font color="#E5E5E5">kind of if we try again to execute this</font>

678
00:32:06,179 --> 00:32:12,350
<font color="#CCCCCC">PLC on</font><font color="#E5E5E5"> like a different file you see</font>

679
00:32:09,600 --> 00:32:16,678
that it will fail<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it will fails</font>

680
00:32:12,350 --> 00:32:19,830
deterministically<font color="#E5E5E5"> and and this is</font>

681
00:32:16,679 --> 00:32:24,419
because the shape fails<font color="#E5E5E5"> again and we</font>

682
00:32:19,830 --> 00:32:26,039
fixed the issue in the random in the lfh

683
00:32:24,419 --> 00:32:28,230
<font color="#E5E5E5">it's both service of course because</font><font color="#CCCCCC"> it's</font>

684
00:32:26,039 --> 00:32:32,580
is a<font color="#E5E5E5"> very serious issue</font><font color="#CCCCCC"> and since build</font>

685
00:32:28,230 --> 00:32:35,370
<font color="#E5E5E5">16 179</font><font color="#CCCCCC"> we don't have this issue anymore</font>

686
00:32:32,580 --> 00:32:37,439
<font color="#CCCCCC">and the random got fixed</font><font color="#E5E5E5"> if you want to</font>

687
00:32:35,370 --> 00:32:39,418
check it out all of the internals<font color="#CCCCCC"> being</font>

688
00:32:37,440 --> 00:32:42,150
different<font color="#E5E5E5"> stuff you can see in this</font>

689
00:32:39,419 --> 00:32:44,100
<font color="#CCCCCC">tweet</font><font color="#E5E5E5"> link</font><font color="#CCCCCC"> I like what</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> it's you</font>

690
00:32:42,150 --> 00:32:49,140
have<font color="#E5E5E5"> everything there and please check</font>

691
00:32:44,100 --> 00:32:51,809
<font color="#E5E5E5">it out but again</font><font color="#CCCCCC"> we need to</font><font color="#E5E5E5"> bypass the</font>

692
00:32:49,140 --> 00:32:54,659
random now please keep<font color="#E5E5E5"> in</font><font color="#CCCCCC"> mind that's</font>

693
00:32:51,809 --> 00:32:57,690
<font color="#E5E5E5">the demand that I have here is not</font>

694
00:32:54,659 --> 00:32:59,909
really<font color="#E5E5E5"> - it's not to restrict right I</font>

695
00:32:57,690 --> 00:33:02,039
don't<font color="#E5E5E5"> have</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> take</font><font color="#CCCCCC"> two different chunks</font>

696
00:32:59,909 --> 00:33:05,330
and<font color="#E5E5E5"> they need to be continuously one</font>

697
00:33:02,039 --> 00:33:09,120
after the other<font color="#E5E5E5"> all I need is to spray</font>

698
00:33:05,330 --> 00:33:11,309
some allocations<font color="#E5E5E5"> and I just want to one</font>

699
00:33:09,120 --> 00:33:14,280
<font color="#CCCCCC">of them to fall in the person free</font>

700
00:33:11,309 --> 00:33:17,010
charge that's it<font color="#E5E5E5"> okay so even if you</font>

701
00:33:14,280 --> 00:33:18,990
have random<font color="#CCCCCC"> I can try</font><font color="#E5E5E5"> to spray and see</font>

702
00:33:17,010 --> 00:33:22,530
if it will succeed<font color="#E5E5E5"> right now of course</font>

703
00:33:18,990 --> 00:33:24,720
<font color="#CCCCCC">the</font><font color="#E5E5E5"> two on a location won't do it</font><font color="#CCCCCC"> 10/10</font>

704
00:33:22,530 --> 00:33:27,450
<font color="#CCCCCC">a</font><font color="#E5E5E5"> location probably not a menial</font>

705
00:33:24,720 --> 00:33:29,640
allocations<font color="#E5E5E5"> will definitely work so the</font>

706
00:33:27,450 --> 00:33:32,130
question is where that where is the

707
00:33:29,640 --> 00:33:34,530
<font color="#CCCCCC">threshold and for Delta is like simply</font>

708
00:33:32,130 --> 00:33:37,500
<font color="#CCCCCC">worth some pestle okay those are</font><font color="#E5E5E5"> the</font>

709
00:33:34,530 --> 00:33:40,440
<font color="#E5E5E5">numbers of the locations</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I hate to</font>

710
00:33:37,500 --> 00:33:42,840
spray in order to catch<font color="#CCCCCC"> the last free</font>

711
00:33:40,440 --> 00:33:48,150
chunk<font color="#E5E5E5"> and you see that the</font><font color="#CCCCCC"> next numbers</font>

712
00:33:42,840 --> 00:33:51,689
aren't so bad<font color="#E5E5E5"> right</font><font color="#CCCCCC"> and okay</font><font color="#E5E5E5"> so</font>

713
00:33:48,150 --> 00:33:57,720
simply<font color="#E5E5E5"> try sorry for that</font>

714
00:33:51,690 --> 00:33:59,550
let's try to<font color="#E5E5E5"> to to play not FF doubled</font>

715
00:33:57,720 --> 00:34:01,460
<font color="#E5E5E5">and that works great</font>

716
00:33:59,550 --> 00:34:04,139
<font color="#CCCCCC">again</font><font color="#E5E5E5"> he</font><font color="#CCCCCC"> liked the times when Chile</font><font color="#E5E5E5"> and</font>

717
00:34:01,460 --> 00:34:07,860
practice<font color="#CCCCCC"> meet and it's basically</font><font color="#E5E5E5"> work</font>

718
00:34:04,140 --> 00:34:10,169
<font color="#E5E5E5">with multiply the two counts of this</font>

719
00:34:07,860 --> 00:34:13,859
<font color="#E5E5E5">play in the code and like that's it</font>

720
00:34:10,168 --> 00:34:16,049
so the shape<font color="#E5E5E5"> works and now we try</font><font color="#CCCCCC"> to</font>

721
00:34:13,860 --> 00:34:18,140
execute arbitrary code<font color="#E5E5E5"> just like we did</font>

722
00:34:16,050 --> 00:34:21,090
before<font color="#CCCCCC"> when everything should be</font><font color="#E5E5E5"> fine</font>

723
00:34:18,139 --> 00:34:24,719
<font color="#CCCCCC">we're</font><font color="#E5E5E5"> not we have in</font><font color="#CCCCCC"> twenty nine again</font>

724
00:34:21,090 --> 00:34:26,970
and we crash and in life he said because

725
00:34:24,719 --> 00:34:29,069
we have<font color="#CCCCCC"> a CG which stands for</font><font color="#E5E5E5"> arbitrary</font>

726
00:34:26,969 --> 00:34:31,469
<font color="#E5E5E5">code</font><font color="#CCCCCC"> god this resignation</font><font color="#E5E5E5"> does exactly</font>

727
00:34:29,070 --> 00:34:33,540
what its<font color="#CCCCCC"> name suggests okay it's</font>

728
00:34:31,469 --> 00:34:39,629
basically for<font color="#E5E5E5"> widget to execute</font><font color="#CCCCCC"> I would</font>

729
00:34:33,540 --> 00:34:42,630
record<font color="#E5E5E5"> by by by like by like introduces</font>

730
00:34:39,630 --> 00:34:44,399
two new restrictions the first is the

731
00:34:42,630 --> 00:34:47,310
sorry the first<font color="#E5E5E5"> one is that</font><font color="#CCCCCC"> you can't</font>

732
00:34:44,399 --> 00:34:50,399
allocate<font color="#E5E5E5"> and you can aim up a plus</font><font color="#CCCCCC"> X</font>

733
00:34:47,310 --> 00:34:52,770
pages<font color="#E5E5E5"> at all</font><font color="#CCCCCC"> it will suit film visual</font>

734
00:34:50,399 --> 00:34:55,710
<font color="#CCCCCC">Allah key X will fence</font><font color="#E5E5E5"> if you try to</font>

735
00:34:52,770 --> 00:34:58,020
give<font color="#CCCCCC"> it a the flag of page execute this</font>

736
00:34:55,710 --> 00:35:00,810
exactly what<font color="#E5E5E5"> would happen if you try to</font>

737
00:34:58,020 --> 00:35:03,120
like execute this district<font color="#CCCCCC"> you'll</font><font color="#E5E5E5"> say</font><font color="#CCCCCC"> ok</font>

738
00:35:00,810 --> 00:35:06,180
<font color="#CCCCCC">I</font><font color="#E5E5E5"> don't have time for that but I will</font>

739
00:35:03,120 --> 00:35:09,089
<font color="#E5E5E5">publish it and the second restriction is</font>

740
00:35:06,180 --> 00:35:13,169
is that you can<font color="#E5E5E5"> edit the permissions of</font>

741
00:35:09,090 --> 00:35:16,050
existing code<font color="#CCCCCC"> so come so to so</font><font color="#E5E5E5"> those new</font>

742
00:35:13,170 --> 00:35:18,360
restrictions combined<font color="#CCCCCC"> you can't execute</font>

743
00:35:16,050 --> 00:35:20,970
arbitrary code unless<font color="#E5E5E5"> you bypass the</font>

744
00:35:18,360 --> 00:35:23,430
mitigations<font color="#E5E5E5"> you know there were some</font>

745
00:35:20,970 --> 00:35:26,220
some like<font color="#CCCCCC"> know</font><font color="#E5E5E5"> and cold</font><font color="#CCCCCC"> bypasses for</font>

746
00:35:23,430 --> 00:35:28,890
<font color="#CCCCCC">that in other versions</font><font color="#E5E5E5"> they of course</font>

747
00:35:26,220 --> 00:35:31,379
<font color="#E5E5E5">got</font><font color="#CCCCCC"> service and fixed and but</font><font color="#E5E5E5"> gives it</font>

748
00:35:28,890 --> 00:35:33,660
but keep<font color="#E5E5E5"> in</font><font color="#CCCCCC"> mind that again there is</font>

749
00:35:31,380 --> 00:35:35,730
<font color="#E5E5E5">nothing that make sure the integrity of</font>

750
00:35:33,660 --> 00:35:40,830
the return<font color="#CCCCCC"> addresses</font><font color="#E5E5E5"> on the</font><font color="#CCCCCC"> stack so</font>

751
00:35:35,730 --> 00:35:43,950
<font color="#CCCCCC">whoa so what on the stack walks mm since</font>

752
00:35:40,830 --> 00:35:48,180
ago it works<font color="#E5E5E5"> today and it's still cool</font>

753
00:35:43,950 --> 00:35:51,330
and<font color="#CCCCCC"> now it's</font><font color="#E5E5E5"> not really problem right</font>

754
00:35:48,180 --> 00:35:53,879
because<font color="#CCCCCC"> I can</font><font color="#E5E5E5"> call load library</font><font color="#CCCCCC"> X and</font>

755
00:35:51,330 --> 00:35:56,310
try to load some<font color="#E5E5E5"> some unsightly ll</font>

756
00:35:53,880 --> 00:35:59,460
so I have CAG which is called integrity

757
00:35:56,310 --> 00:36:01,920
<font color="#CCCCCC">guard which basically for with you to</font>

758
00:35:59,460 --> 00:36:03,839
load<font color="#CCCCCC"> and side the Ln okay</font><font color="#E5E5E5"> we make sure</font>

759
00:36:01,920 --> 00:36:08,880
that the digital<font color="#E5E5E5"> signature is fine and</font>

760
00:36:03,839 --> 00:36:11,279
<font color="#E5E5E5">if not about so loads unsightly ll want</font>

761
00:36:08,880 --> 00:36:13,349
<font color="#E5E5E5">to do the trick now I really wanted</font><font color="#CCCCCC"> to</font>

762
00:36:11,280 --> 00:36:16,410
talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> edge since edge is a really</font>

763
00:36:13,349 --> 00:36:21,780
<font color="#E5E5E5">really cool use case for that edge has</font>

764
00:36:16,410 --> 00:36:25,170
CAG CAG<font color="#CCCCCC"> a CG</font><font color="#E5E5E5"> CFG and many many XY G's in</font>

765
00:36:21,780 --> 00:36:29,099
in its many many guards<font color="#E5E5E5"> but I don't have</font>

766
00:36:25,170 --> 00:36:31,680
the time and go am<font color="#E5E5E5"> a great shout out for</font>

767
00:36:29,099 --> 00:36:34,049
<font color="#CCCCCC">amphoteric from</font><font color="#E5E5E5"> Google project zero</font><font color="#CCCCCC"> I</font>

768
00:36:31,680 --> 00:36:39,480
found many bypasses<font color="#E5E5E5"> really really cool</font>

769
00:36:34,049 --> 00:36:42,359
and and need any like quotes<font color="#CCCCCC"> a really</font>

770
00:36:39,480 --> 00:36:44,369
cool PDF<font color="#E5E5E5"> about it and please check it</font>

771
00:36:42,359 --> 00:36:46,078
out<font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> have like time for that it</font>

772
00:36:44,369 --> 00:36:47,790
will be<font color="#E5E5E5"> he'll I publish the slides and</font>

773
00:36:46,079 --> 00:36:50,700
all of the<font color="#E5E5E5"> links so you can see it at</font>

774
00:36:47,790 --> 00:36:54,299
home<font color="#E5E5E5"> and Alex</font><font color="#CCCCCC"> and ESCO my best buddy I</font>

775
00:36:50,700 --> 00:36:57,089
found a really cool<font color="#CCCCCC"> Cole bypass for</font><font color="#E5E5E5"> a CG</font>

776
00:36:54,299 --> 00:37:00,359
not just for edge<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> he found a really</font>

777
00:36:57,089 --> 00:37:03,569
cool bypass<font color="#E5E5E5"> for</font><font color="#CCCCCC"> a CG inside the</font>

778
00:37:00,359 --> 00:37:05,940
operating system<font color="#E5E5E5"> and he had a great talk</font>

779
00:37:03,569 --> 00:37:07,290
<font color="#CCCCCC">about it every talk of Alex is awesome</font>

780
00:37:05,940 --> 00:37:12,240
<font color="#E5E5E5">so check</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> out</font>

781
00:37:07,290 --> 00:37:14,279
Alex I love<font color="#E5E5E5"> you and and now we have to</font>

782
00:37:12,240 --> 00:37:18,240
go back to the<font color="#E5E5E5"> point in life up with</font>

783
00:37:14,280 --> 00:37:24,299
record and stuff so let's bypass a CG

784
00:37:18,240 --> 00:37:25,140
and CAG so just to make<font color="#CCCCCC"> sure that we can</font>

785
00:37:24,299 --> 00:37:26,940
do<font color="#E5E5E5"> something</font>

786
00:37:25,140 --> 00:37:28,379
let's do<font color="#CCCCCC"> hope on the stock</font><font color="#E5E5E5"> but they</font>

787
00:37:26,940 --> 00:37:30,900
don't want<font color="#E5E5E5"> to do a very</font><font color="#CCCCCC"> don't go up</font>

788
00:37:28,380 --> 00:37:33,690
<font color="#E5E5E5">chain because it's not to</font><font color="#CCCCCC"> maintain and</font>

789
00:37:30,900 --> 00:37:36,420
officer change and it's cool like in CTF

790
00:37:33,690 --> 00:37:38,970
when you have a very short<font color="#CCCCCC"> roof chain</font>

791
00:37:36,420 --> 00:37:41,369
<font color="#E5E5E5">but in like real</font><font color="#CCCCCC"> war scenario probably</font>

792
00:37:38,970 --> 00:37:44,759
you want<font color="#E5E5E5"> to do some complex stuff and</font>

793
00:37:41,369 --> 00:37:48,839
<font color="#E5E5E5">and try to implement a long logic in</font>

794
00:37:44,760 --> 00:37:51,059
envelope it's it's not<font color="#CCCCCC"> like it's not</font>

795
00:37:48,839 --> 00:37:53,880
<font color="#E5E5E5">like redefine it's very dirty work we do</font>

796
00:37:51,059 --> 00:37:56,309
it in like iOS exploits<font color="#E5E5E5"> all the time but</font>

797
00:37:53,880 --> 00:37:58,470
if I can avoid<font color="#E5E5E5"> it</font><font color="#CCCCCC"> I want so let's try to</font>

798
00:37:56,309 --> 00:38:00,900
calculate process<font color="#E5E5E5"> shell execute the X</font>

799
00:37:58,470 --> 00:38:04,078
system<font color="#CCCCCC"> like something like</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> to</font>

800
00:38:00,900 --> 00:38:08,190
<font color="#E5E5E5">make sure</font><font color="#CCCCCC"> that we still can control</font>

801
00:38:04,079 --> 00:38:14,160
what's like going on here so we<font color="#CCCCCC"> have the</font>

802
00:38:08,190 --> 00:38:15,910
<font color="#CCCCCC">redstone 5vm let's get let's let's kick</font>

803
00:38:14,160 --> 00:38:21,160
it<font color="#E5E5E5"> off and</font>

804
00:38:15,910 --> 00:38:25,589
<font color="#CCCCCC">- less</font><font color="#E5E5E5"> than five</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> let's try to call</font>

805
00:38:21,160 --> 00:38:28,649
system<font color="#E5E5E5"> I have the</font><font color="#CCCCCC"> IPO is something</font><font color="#E5E5E5"> okay</font>

806
00:38:25,589 --> 00:38:35,440
<font color="#E5E5E5">and we have the exploitable system and</font>

807
00:38:28,650 --> 00:38:37,299
again<font color="#CCCCCC"> I I will publish</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> POC</font><font color="#E5E5E5"> and you</font>

808
00:38:35,440 --> 00:38:41,769
can actually see that the<font color="#CCCCCC"> POC is</font><font color="#E5E5E5"> like</font>

809
00:38:37,299 --> 00:38:45,150
really really really<font color="#CCCCCC"> elegant and</font><font color="#E5E5E5"> and you</font>

810
00:38:41,769 --> 00:38:50,979
can see that the what<font color="#E5E5E5"> sorry for that</font><font color="#CCCCCC"> and</font>

811
00:38:45,150 --> 00:38:55,630
the vault is simply called<font color="#E5E5E5"> system</font><font color="#CCCCCC"> ok</font>

812
00:38:50,980 --> 00:38:59,049
system with<font color="#CCCCCC"> a</font><font color="#E5E5E5"> command type flag</font><font color="#CCCCCC"> ok so</font>

813
00:38:55,630 --> 00:39:01,680
let's do<font color="#CCCCCC"> it and this is the VM</font><font color="#E5E5E5"> yeah of</font>

814
00:38:59,049 --> 00:39:07,660
<font color="#E5E5E5">course we don't have memory ok cool</font>

815
00:39:01,680 --> 00:39:12,399
good point and<font color="#CCCCCC"> are we ready</font>

816
00:39:07,660 --> 00:39:23,348
sorry for the<font color="#E5E5E5"> delay come on come on it</font>

817
00:39:12,400 --> 00:39:30,039
was<font color="#E5E5E5"> possible</font><font color="#CCCCCC"> phone yeah</font><font color="#E5E5E5"> ok so yes</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> no</font>

818
00:39:23,349 --> 00:39:32,380
so so the flag right now will be<font color="#E5E5E5"> aaaa</font>

819
00:39:30,039 --> 00:39:40,660
<font color="#CCCCCC">ok because</font><font color="#E5E5E5"> we don't have time for that</font>

820
00:39:32,380 --> 00:39:43,349
<font color="#E5E5E5">and fantastic type flag</font><font color="#CCCCCC"> ok I show that</font>

821
00:39:40,660 --> 00:39:48,970
<font color="#E5E5E5">you will see the</font><font color="#CCCCCC"> AAA like once it leaked</font>

822
00:39:43,349 --> 00:39:54,039
we have the challenge and we try the POC

823
00:39:48,970 --> 00:40:04,240
out yeah

824
00:39:54,039 --> 00:40:07,630
the IP is 93 not 83<font color="#CCCCCC"> ok let's hope again</font>

825
00:40:04,240 --> 00:40:10,269
that<font color="#E5E5E5"> the physics is like still fine the</font>

826
00:40:07,630 --> 00:40:16,420
base of of<font color="#E5E5E5"> them in binary</font><font color="#CCCCCC"> and the base</font>

827
00:40:10,269 --> 00:40:20,049
<font color="#CCCCCC">of the</font><font color="#E5E5E5"> UC LT</font><font color="#CCCCCC"> c'mon fantastic and I also</font>

828
00:40:16,420 --> 00:40:25,109
need ntdll<font color="#E5E5E5"> and now before</font><font color="#CCCCCC"> we execute the</font>

829
00:40:20,049 --> 00:40:28,000
vote<font color="#E5E5E5"> please please just</font><font color="#CCCCCC"> let me execute</font>

830
00:40:25,109 --> 00:40:29,110
<font color="#E5E5E5">when debug into like a touch the process</font>

831
00:40:28,000 --> 00:40:31,950
because I

832
00:40:29,110 --> 00:40:37,720
feeling let's say we will need it<font color="#CCCCCC"> and</font>

833
00:40:31,950 --> 00:40:39,850
let's break point on system<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> where</font>

834
00:40:37,720 --> 00:40:42,149
the black<font color="#E5E5E5"> ones is I'm I'm so sorry for</font>

835
00:40:39,850 --> 00:40:45,460
the team it's it's like<font color="#E5E5E5"> inside the VM</font>

836
00:40:42,150 --> 00:40:49,000
<font color="#CCCCCC">call vault and we have a Heat's on</font>

837
00:40:45,460 --> 00:40:52,330
<font color="#E5E5E5">system and of course</font><font color="#CCCCCC"> I do expect that</font>

838
00:40:49,000 --> 00:40:54,370
<font color="#E5E5E5">the first argument will be type flag now</font>

839
00:40:52,330 --> 00:40:58,569
if we do go we need<font color="#E5E5E5"> to see the flag</font>

840
00:40:54,370 --> 00:41:03,839
right access violation and the process

841
00:40:58,570 --> 00:41:09,520
dies<font color="#E5E5E5"> and we are inside system are you</font>

842
00:41:03,840 --> 00:41:13,900
<font color="#E5E5E5">okay yeah yeah</font><font color="#CCCCCC"> yeah so</font><font color="#E5E5E5"> what's what's the</font>

843
00:41:09,520 --> 00:41:18,040
<font color="#E5E5E5">heck is going on here so of course we</font>

844
00:41:13,900 --> 00:41:21,910
have another mitigation<font color="#E5E5E5"> if the</font><font color="#CCCCCC"> sly will</font>

845
00:41:18,040 --> 00:41:24,640
walk<font color="#CCCCCC"> in it works fantastic</font><font color="#E5E5E5"> yeah child</font>

846
00:41:21,910 --> 00:41:27,279
process restriction this<font color="#E5E5E5"> is the exact</font>

847
00:41:24,640 --> 00:41:29,710
behavior that<font color="#E5E5E5"> I expect to</font><font color="#CCCCCC"> see because</font>

848
00:41:27,280 --> 00:41:31,870
<font color="#E5E5E5">you really don't be allowed to call</font>

849
00:41:29,710 --> 00:41:33,640
<font color="#E5E5E5">system in like many processes you don't</font>

850
00:41:31,870 --> 00:41:35,589
have a very<font color="#E5E5E5"> good</font><font color="#CCCCCC"> reason to do it I</font><font color="#E5E5E5"> mean</font>

851
00:41:33,640 --> 00:41:37,839
I have because I exploit vulnerabilities

852
00:41:35,590 --> 00:41:40,870
but you at home<font color="#E5E5E5"> don't really want this</font>

853
00:41:37,840 --> 00:41:42,970
<font color="#CCCCCC">elses</font><font color="#E5E5E5"> will be</font><font color="#CCCCCC"> able to whole system it's</font>

854
00:41:40,870 --> 00:41:46,779
really<font color="#CCCCCC"> not</font><font color="#E5E5E5"> points in order to do that</font>

855
00:41:42,970 --> 00:41:48,549
<font color="#E5E5E5">and so child process restriction is</font><font color="#CCCCCC"> a</font>

856
00:41:46,780 --> 00:41:52,090
really really<font color="#CCCCCC"> cool</font><font color="#E5E5E5"> mitigation because</font>

857
00:41:48,550 --> 00:41:54,100
<font color="#E5E5E5">it's very very simple</font><font color="#CCCCCC"> it's one bit in</font>

858
00:41:52,090 --> 00:41:57,160
the process<font color="#CCCCCC"> this forbids the process to</font>

859
00:41:54,100 --> 00:42:00,279
create<font color="#E5E5E5"> a children is</font><font color="#CCCCCC"> subprocessors</font>

860
00:41:57,160 --> 00:42:02,259
that's it it's really<font color="#E5E5E5"> really cold</font>

861
00:42:00,280 --> 00:42:04,900
<font color="#E5E5E5">because it's</font><font color="#CCCCCC"> kill a lot of these</font><font color="#E5E5E5"> friend</font>

862
00:42:02,260 --> 00:42:10,840
exploits and make of course<font color="#E5E5E5"> the life way</font>

863
00:42:04,900 --> 00:42:14,020
way way way difficult of<font color="#E5E5E5"> course I can't</font>

864
00:42:10,840 --> 00:42:17,650
say not<font color="#E5E5E5"> lick the flag in</font><font color="#CCCCCC"> front of you on</font>

865
00:42:14,020 --> 00:42:20,620
<font color="#E5E5E5">the</font><font color="#CCCCCC"> cliffs on</font><font color="#E5E5E5"> five so let's make</font><font color="#CCCCCC"> sure</font>

866
00:42:17,650 --> 00:42:24,910
<font color="#CCCCCC">that we still have the AAA</font><font color="#E5E5E5"> we do and we</font>

867
00:42:20,620 --> 00:42:28,480
have<font color="#CCCCCC"> an exploit</font><font color="#E5E5E5"> let's make the flag ah</font>

868
00:42:24,910 --> 00:42:32,920
sorry<font color="#CCCCCC"> thank you and now you</font><font color="#E5E5E5"> should see</font>

869
00:42:28,480 --> 00:42:37,240
it<font color="#CCCCCC"> okay awesome and yeah the laptop</font>

870
00:42:32,920 --> 00:42:40,450
doesn't<font color="#E5E5E5"> response</font><font color="#CCCCCC"> sorry</font><font color="#E5E5E5"> is everything</font>

871
00:42:37,240 --> 00:42:42,640
<font color="#CCCCCC">fine</font><font color="#E5E5E5"> okay so the so so where do we</font><font color="#CCCCCC"> am</font>

872
00:42:40,450 --> 00:42:46,868
<font color="#CCCCCC">entered exploits</font><font color="#E5E5E5"> now</font>

873
00:42:42,640 --> 00:42:49,690
you you kind of already know how I like

874
00:42:46,869 --> 00:42:51,609
about to lick the flag right we saw all

875
00:42:49,690 --> 00:42:54,700
of the mitigations<font color="#CCCCCC"> we see how much</font>

876
00:42:51,609 --> 00:42:58,359
harder it gets but I always<font color="#E5E5E5"> get to</font><font color="#CCCCCC"> the</font>

877
00:42:54,700 --> 00:43:01,538
same<font color="#CCCCCC"> tech technique I'd</font><font color="#E5E5E5"> do up on the</font>

878
00:42:58,359 --> 00:43:05,769
stack<font color="#CCCCCC"> so instead of</font><font color="#E5E5E5"> the very simple</font><font color="#CCCCCC"> wolf</font>

879
00:43:01,539 --> 00:43:07,990
data that I<font color="#CCCCCC"> just show you it's very</font><font color="#E5E5E5"> very</font>

880
00:43:05,769 --> 00:43:09,519
short it's very elegant<font color="#CCCCCC"> like one</font><font color="#E5E5E5"> of the</font>

881
00:43:07,990 --> 00:43:12,339
shortest<font color="#E5E5E5"> swabs</font><font color="#CCCCCC"> I ever did</font>

882
00:43:09,519 --> 00:43:17,169
just<font color="#E5E5E5"> called system instead of of dots</font><font color="#CCCCCC"> I</font>

883
00:43:12,339 --> 00:43:19,420
have a different drop<font color="#E5E5E5"> again</font><font color="#CCCCCC"> the main</font>

884
00:43:17,170 --> 00:43:21,819
looks the same<font color="#CCCCCC"> just lick the</font><font color="#E5E5E5"> like</font>

885
00:43:19,420 --> 00:43:28,450
address and<font color="#E5E5E5"> and like the what but the</font>

886
00:43:21,819 --> 00:43:31,480
Rope now<font color="#E5E5E5"> do open</font><font color="#CCCCCC"> wait and put s</font><font color="#E5E5E5"> flash</font>

887
00:43:28,450 --> 00:43:34,240
<font color="#E5E5E5">all in order to lick the flag so the</font>

888
00:43:31,480 --> 00:43:36,490
<font color="#CCCCCC">Rope is like way way longer and still</font>

889
00:43:34,240 --> 00:43:39,788
it's fine because it's a city F in will

890
00:43:36,490 --> 00:43:42,578
world<font color="#CCCCCC"> this kind of like approach to</font>

891
00:43:39,789 --> 00:43:44,109
implement everything<font color="#CCCCCC"> like in</font><font color="#E5E5E5"> what works</font>

892
00:43:42,579 --> 00:43:46,450
but it's really<font color="#E5E5E5"> really kind of last</font>

893
00:43:44,109 --> 00:43:54,069
resort<font color="#E5E5E5"> right I really</font><font color="#CCCCCC"> want to do more</font>

894
00:43:46,450 --> 00:43:57,368
like<font color="#E5E5E5"> elegant stuff okay um again physics</font>

895
00:43:54,069 --> 00:44:00,670
<font color="#E5E5E5">on stage like a lot of</font><font color="#CCCCCC"> random should</font>

896
00:43:57,369 --> 00:44:07,380
<font color="#CCCCCC">define and let's lick the address of the</font>

897
00:44:00,670 --> 00:44:07,380
main binary<font color="#E5E5E5"> done you</font><font color="#CCCCCC"> CLT base come on</font>

898
00:44:09,210 --> 00:44:16,170
the<font color="#CCCCCC"> stake ntdll pop</font><font color="#E5E5E5"> a</font>

899
00:44:21,510 --> 00:44:27,390
thank you thank<font color="#CCCCCC"> you</font><font color="#E5E5E5"> so much again</font>

900
00:44:24,960 --> 00:44:29,090
everything will be published<font color="#CCCCCC"> it's a</font><font color="#E5E5E5"> city</font>

901
00:44:27,390 --> 00:44:34,040
of challenge but of course the point is

902
00:44:29,090 --> 00:44:38,010
to learn<font color="#CCCCCC"> how to do it and to do it like</font>

903
00:44:34,040 --> 00:44:41,750
in a<font color="#E5E5E5"> good way and so this is for the</font>

904
00:44:38,010 --> 00:44:45,420
table<font color="#E5E5E5"> okay</font>

905
00:44:41,750 --> 00:44:48,810
so what's<font color="#E5E5E5"> going on right</font><font color="#CCCCCC"> now before we</font>

906
00:44:45,420 --> 00:44:51,080
<font color="#E5E5E5">go back to the city</font><font color="#CCCCCC"> F and there is much</font>

907
00:44:48,810 --> 00:44:53,520
<font color="#E5E5E5">more than I could've told you in this</font>

908
00:44:51,080 --> 00:44:56,069
<font color="#CCCCCC">4560 like mini stock I really wanted to</font>

909
00:44:53,520 --> 00:44:58,770
talk<font color="#E5E5E5"> about</font><font color="#CCCCCC"> age and about like a lot of</font>

910
00:44:56,070 --> 00:45:00,960
stuff but<font color="#E5E5E5"> I didn't but somebody but I</font>

911
00:44:58,770 --> 00:45:04,710
didn't have<font color="#E5E5E5"> the time and</font><font color="#CCCCCC"> you can always</font>

912
00:45:00,960 --> 00:45:06,750
like DM me on on<font color="#CCCCCC"> twitter come and talk</font>

913
00:45:04,710 --> 00:45:11,400
<font color="#CCCCCC">to me</font><font color="#E5E5E5"> like that now come to Tel Aviv</font>

914
00:45:06,750 --> 00:45:13,920
<font color="#E5E5E5">wave great food and we can talk and yeah</font>

915
00:45:11,400 --> 00:45:16,410
we have containers<font color="#E5E5E5"> and</font><font color="#CCCCCC"> like same</font><font color="#E5E5E5"> boxing</font>

916
00:45:13,920 --> 00:45:18,980
<font color="#CCCCCC">we are actually</font><font color="#E5E5E5"> like walking right now</font>

917
00:45:16,410 --> 00:45:22,350
<font color="#E5E5E5">or some really serious if like</font>

918
00:45:18,980 --> 00:45:23,310
improvements from<font color="#CCCCCC"> safe G it's it</font>

919
00:45:22,350 --> 00:45:26,310
<font color="#CCCCCC">actually be awesome</font>

920
00:45:23,310 --> 00:45:28,859
<font color="#CCCCCC">I will keep</font><font color="#E5E5E5"> you posted</font><font color="#CCCCCC"> and I kept</font>

921
00:45:26,310 --> 00:45:31,619
telling I kept like telling you<font color="#E5E5E5"> that say</font>

922
00:45:28,859 --> 00:45:33,600
we yet we have nothing<font color="#E5E5E5"> that checks the</font>

923
00:45:31,619 --> 00:45:37,170
integrity of the<font color="#E5E5E5"> return</font><font color="#CCCCCC"> analysis</font><font color="#E5E5E5"> on the</font>

924
00:45:33,600 --> 00:45:39,270
stock<font color="#CCCCCC"> yet</font><font color="#E5E5E5"> we tried our F G which is</font>

925
00:45:37,170 --> 00:45:42,600
returning<font color="#E5E5E5"> flow guard</font><font color="#CCCCCC"> it just like crap</font>

926
00:45:39,270 --> 00:45:45,240
in<font color="#E5E5E5"> Linux</font><font color="#CCCCCC"> okay but we had to pull it off</font>

927
00:45:42,600 --> 00:45:47,509
actually<font color="#E5E5E5"> since we had a very reliable</font>

928
00:45:45,240 --> 00:45:51,299
<font color="#CCCCCC">built</font><font color="#E5E5E5"> in rest condition</font>

929
00:45:47,510 --> 00:45:54,000
in the future it was really really

930
00:45:51,300 --> 00:45:56,550
reliable to export it basically trivial

931
00:45:54,000 --> 00:45:59,369
<font color="#E5E5E5">a job</font><font color="#CCCCCC"> really great way to talk about it</font>

932
00:45:56,550 --> 00:46:02,400
with the<font color="#CCCCCC"> POC with</font><font color="#E5E5E5"> the example internal</font>

933
00:45:59,369 --> 00:46:06,600
details<font color="#E5E5E5"> again check</font><font color="#CCCCCC"> his talk it's really</font>

934
00:46:02,400 --> 00:46:11,010
awesome<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we are like waiting for sets</font>

935
00:46:06,600 --> 00:46:13,560
by Intel<font color="#E5E5E5"> and basically</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> FG did very</font>

936
00:46:11,010 --> 00:46:15,869
very simple trick<font color="#E5E5E5"> it's implemented</font>

937
00:46:13,560 --> 00:46:18,000
shadow stack which is a separate strike

938
00:46:15,869 --> 00:46:20,640
for<font color="#CCCCCC"> only the</font><font color="#E5E5E5"> return addresses in</font>

939
00:46:18,000 --> 00:46:24,270
software<font color="#E5E5E5"> and then when you do wet in</font>

940
00:46:20,640 --> 00:46:26,549
<font color="#CCCCCC">your code you you'll</font><font color="#E5E5E5"> a compel the return</font>

941
00:46:24,270 --> 00:46:28,259
address for the main<font color="#CCCCCC"> stack and the</font>

942
00:46:26,550 --> 00:46:30,330
return other saved on the shadow stack

943
00:46:28,260 --> 00:46:32,369
and you<font color="#CCCCCC"> don't know where the shadow</font>

944
00:46:30,330 --> 00:46:35,009
stack is and if they like addresses are

945
00:46:32,369 --> 00:46:35,460
different<font color="#E5E5E5"> about and again</font><font color="#CCCCCC"> we hit some</font>

946
00:46:35,010 --> 00:46:38,430
trees

947
00:46:35,460 --> 00:46:40,350
<font color="#E5E5E5">condition there so I pulled off but set</font>

948
00:46:38,430 --> 00:46:43,259
by<font color="#CCCCCC"> Intel is a shadow stock in the</font>

949
00:46:40,350 --> 00:46:46,140
process so in the<font color="#E5E5E5"> process of itself</font><font color="#CCCCCC"> so</font>

950
00:46:43,260 --> 00:46:50,550
it should like mitigate swaps<font color="#E5E5E5"> or like</font>

951
00:46:46,140 --> 00:46:53,069
<font color="#CCCCCC">altogether</font><font color="#E5E5E5"> actually I really really like</font>

952
00:46:50,550 --> 00:46:55,770
caramel<font color="#E5E5E5"> and like below caramels and</font><font color="#CCCCCC"> like</font>

953
00:46:53,070 --> 00:46:59,850
hypervisors and we have<font color="#E5E5E5"> also stuff going</font>

954
00:46:55,770 --> 00:47:01,830
in<font color="#CCCCCC"> rings</font><font color="#E5E5E5"> zero we actually</font><font color="#CCCCCC"> introduces nfh</font>

955
00:46:59,850 --> 00:47:04,890
<font color="#E5E5E5">in the kernel space which is a life</font>

956
00:47:01,830 --> 00:47:08,130
changer for<font color="#E5E5E5"> canonical options really</font>

957
00:47:04,890 --> 00:47:11,490
seriously<font color="#CCCCCC"> a life change of since</font><font color="#E5E5E5"> the lfh</font>

958
00:47:08,130 --> 00:47:13,920
is way way secure than the way they like

959
00:47:11,490 --> 00:47:17,879
<font color="#CCCCCC">windows supports work</font><font color="#E5E5E5"> before we have VBS</font>

960
00:47:13,920 --> 00:47:20,970
and via same which is crazy<font color="#CCCCCC"> and</font><font color="#E5E5E5"> we</font>

961
00:47:17,880 --> 00:47:24,630
actually have<font color="#CCCCCC"> smart only for</font><font color="#E5E5E5"> plus up</font>

962
00:47:20,970 --> 00:47:26,609
<font color="#E5E5E5">dispatcher flows because it's kind of</font>

963
00:47:24,630 --> 00:47:29,730
like<font color="#CCCCCC"> limited like right now but it</font><font color="#E5E5E5"> is a</font>

964
00:47:26,610 --> 00:47:32,190
start and<font color="#CCCCCC"> it's works</font><font color="#E5E5E5"> great there is</font>

965
00:47:29,730 --> 00:47:34,200
great documentation<font color="#E5E5E5"> about it all all</font>

966
00:47:32,190 --> 00:47:37,140
over<font color="#E5E5E5"> the place all over the Internet's</font>

967
00:47:34,200 --> 00:47:40,169
<font color="#E5E5E5">check it out but one importantly is</font><font color="#CCCCCC"> that</font>

968
00:47:37,140 --> 00:47:42,900
<font color="#CCCCCC">we want</font><font color="#E5E5E5"> to help so I don't know I just</font>

969
00:47:40,170 --> 00:47:45,090
love to wake<font color="#CCCCCC"> up in</font><font color="#E5E5E5"> the morning and talk</font>

970
00:47:42,900 --> 00:47:47,910
to awesome<font color="#CCCCCC"> people about</font><font color="#E5E5E5"> awesome stuff</font>

971
00:47:45,090 --> 00:47:50,700
that<font color="#CCCCCC"> I rebel</font><font color="#E5E5E5"> so if you find some cool</font>

972
00:47:47,910 --> 00:47:54,210
bypass talk to us it's<font color="#E5E5E5"> like hella cool</font>

973
00:47:50,700 --> 00:47:55,350
<font color="#E5E5E5">and you can always</font><font color="#CCCCCC"> DME</font><font color="#E5E5E5"> and Twitter mail</font>

974
00:47:54,210 --> 00:47:57,870
come to me<font color="#E5E5E5"> right now</font>

975
00:47:55,350 --> 00:48:01,020
<font color="#CCCCCC">I really</font><font color="#E5E5E5"> really like open to stuff and I</font>

976
00:47:57,870 --> 00:48:04,100
and I like love<font color="#CCCCCC"> to talk</font><font color="#E5E5E5"> to like cool</font>

977
00:48:01,020 --> 00:48:08,280
<font color="#CCCCCC">people about about</font><font color="#E5E5E5"> like whole exploits</font>

978
00:48:04,100 --> 00:48:12,240
<font color="#E5E5E5">so do that and there is something else</font>

979
00:48:08,280 --> 00:48:14,220
that that<font color="#E5E5E5"> we try to do and it</font><font color="#CCCCCC"> actually</font>

980
00:48:12,240 --> 00:48:17,040
works great and there is the approach of

981
00:48:14,220 --> 00:48:20,069
try to<font color="#E5E5E5"> kill a bug class</font><font color="#CCCCCC"> altogether okay</font>

982
00:48:17,040 --> 00:48:22,830
<font color="#CCCCCC">if you saw</font><font color="#E5E5E5"> Joe</font><font color="#CCCCCC"> Bialik tweeted about is</font>

983
00:48:20,070 --> 00:48:24,690
in it<font color="#E5E5E5"> all mitigation which basically do</font>

984
00:48:22,830 --> 00:48:27,600
like<font color="#CCCCCC"> memset zero for all</font><font color="#E5E5E5"> of the</font>

985
00:48:24,690 --> 00:48:31,980
structures<font color="#E5E5E5"> it should kill a lot of</font>

986
00:48:27,600 --> 00:48:34,890
information<font color="#E5E5E5"> disclosure it</font>

987
00:48:31,980 --> 00:48:38,730
<font color="#CCCCCC">Nichole's great</font><font color="#E5E5E5"> and the guy awwe which</font>

988
00:48:34,890 --> 00:48:44,279
is awesome great challenge so in his

989
00:48:38,730 --> 00:48:46,290
<font color="#CCCCCC">write up</font><font color="#E5E5E5"> he actually wrote</font><font color="#CCCCCC"> that in in</font>

990
00:48:44,280 --> 00:48:48,870
the first<font color="#E5E5E5"> place the challenge like did</font>

991
00:48:46,290 --> 00:48:49,170
<font color="#E5E5E5">it work because Visual Studio 2015 by</font>

992
00:48:48,870 --> 00:48:52,078
<font color="#CCCCCC">thief</font>

993
00:48:49,170 --> 00:48:54,839
fault is<font color="#E5E5E5"> the slash</font><font color="#CCCCCC"> SDL combination flag</font>

994
00:48:52,079 --> 00:48:56,309
<font color="#E5E5E5">in which memset</font><font color="#CCCCCC"> zero or of the structure</font>

995
00:48:54,839 --> 00:48:58,140
so the first vulnerability of the

996
00:48:56,309 --> 00:49:00,359
uninitialized value of the<font color="#E5E5E5"> east</font>

997
00:48:58,140 --> 00:49:01,828
conscience in depends on didn't work it

998
00:49:00,359 --> 00:49:04,200
simply<font color="#CCCCCC"> did it</font><font color="#E5E5E5"> happen you have the</font>

999
00:49:01,829 --> 00:49:07,349
vulnerability<font color="#E5E5E5"> but it's basically have</font>

1000
00:49:04,200 --> 00:49:10,410
zeros<font color="#E5E5E5"> so he heads to disable the flag</font>

1001
00:49:07,349 --> 00:49:13,109
<font color="#CCCCCC">and</font><font color="#E5E5E5"> so it's a</font><font color="#CCCCCC"> critical to see that we</font>

1002
00:49:10,410 --> 00:49:18,899
don't intend and cool stuff<font color="#CCCCCC"> like that</font>

1003
00:49:13,109 --> 00:49:24,180
happen so yeah and it's time from<font color="#CCCCCC"> shots</font>

1004
00:49:18,900 --> 00:49:26,660
<font color="#E5E5E5">out so again a so a so aw is the guy who</font>

1005
00:49:24,180 --> 00:49:30,390
<font color="#E5E5E5">votes the challenge in the</font><font color="#CCCCCC"> write-up</font><font color="#E5E5E5"> good</font>

1006
00:49:26,660 --> 00:49:33,629
again<font color="#CCCCCC"> like great</font><font color="#E5E5E5"> work and please do more</font>

1007
00:49:30,390 --> 00:49:36,660
like<font color="#CCCCCC"> windows CTF challenges to mosh</font><font color="#E5E5E5"> my</font>

1008
00:49:33,630 --> 00:49:38,130
best friend for exploits whiskey and the

1009
00:49:36,660 --> 00:49:41,549
<font color="#CCCCCC">both</font><font color="#E5E5E5"> girls thank you for all of your</font>

1010
00:49:38,130 --> 00:49:44,460
<font color="#E5E5E5">help and thank you for all</font><font color="#CCCCCC"> of the</font>

1011
00:49:41,549 --> 00:49:46,559
<font color="#E5E5E5">brilliant engineers that they actually</font>

1012
00:49:44,460 --> 00:49:48,690
keep track<font color="#E5E5E5"> of</font><font color="#CCCCCC"> treat ale see all of</font><font color="#E5E5E5"> the</font>

1013
00:49:46,559 --> 00:49:51,440
stuff<font color="#E5E5E5"> to</font><font color="#CCCCCC"> devote and keep fixing that's</font>

1014
00:49:48,690 --> 00:49:54,059
<font color="#E5E5E5">it's really cool and we have many many</font>

1015
00:49:51,440 --> 00:49:55,950
<font color="#E5E5E5">example that I like</font><font color="#CCCCCC"> simply</font><font color="#E5E5E5"> tweet</font>

1016
00:49:54,059 --> 00:49:57,630
something<font color="#E5E5E5"> and like three months later</font>

1017
00:49:55,950 --> 00:50:01,200
<font color="#E5E5E5">I've been different I see it fixed</font>

1018
00:49:57,630 --> 00:50:04,740
it's like<font color="#E5E5E5"> wasn't even some kind of</font>

1019
00:50:01,200 --> 00:50:07,890
serious but<font color="#CCCCCC"> like vulnerability but they</font>

1020
00:50:04,740 --> 00:50:11,520
do also<font color="#E5E5E5"> some stuff so so keep do that</font>

1021
00:50:07,890 --> 00:50:14,009
<font color="#E5E5E5">and you have some some reference for all</font>

1022
00:50:11,520 --> 00:50:17,009
of the stuff<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we did here and I</font>

1023
00:50:14,010 --> 00:50:20,900
think<font color="#CCCCCC"> that the last</font><font color="#E5E5E5"> link goes down like</font>

1024
00:50:17,010 --> 00:50:24,480
<font color="#E5E5E5">a week</font><font color="#CCCCCC"> before I send a message to the</font>

1025
00:50:20,900 --> 00:50:27,150
insomniac<font color="#E5E5E5"> I updates it will be</font><font color="#CCCCCC"> hard if</font>

1026
00:50:24,480 --> 00:50:31,790
<font color="#CCCCCC">not we we we asked them they are really</font>

1027
00:50:27,150 --> 00:50:36,760
<font color="#CCCCCC">really nice guys and</font><font color="#E5E5E5"> thanks</font>

1028
00:50:31,790 --> 00:50:36,759
[Applause]

1029
00:50:36,870 --> 00:50:44,049
[Music]

1030
00:50:46,120 --> 00:50:58,779
[Music]

