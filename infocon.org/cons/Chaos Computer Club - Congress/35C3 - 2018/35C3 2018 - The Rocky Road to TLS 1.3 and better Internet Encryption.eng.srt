1
00:00:02,830 --> 00:00:15,470
[Music]

2
00:00:17,840 --> 00:00:25,430
all right<font color="#E5E5E5"> now it's my very big pleasure</font>

3
00:00:22,320 --> 00:00:28,740
to introduce<font color="#CCCCCC"> Hanna back to our</font><font color="#E5E5E5"> you he's</font>

4
00:00:25,430 --> 00:00:31,710
no stranger to<font color="#E5E5E5"> the chaos crowd he's been</font>

5
00:00:28,740 --> 00:00:35,100
through several<font color="#E5E5E5"> Easter</font><font color="#CCCCCC"> hex</font><font color="#E5E5E5"> and at</font>

6
00:00:31,710 --> 00:00:38,550
several<font color="#E5E5E5"> other chaos events today he's</font>

7
00:00:35,100 --> 00:00:42,120
here to talk<font color="#CCCCCC"> about TLS 1.3 what it's all</font>

8
00:00:38,550 --> 00:00:44,040
about<font color="#CCCCCC"> how it came to be and what the</font>

9
00:00:42,120 --> 00:00:48,500
future of<font color="#E5E5E5"> it is gonna</font><font color="#CCCCCC"> look like please</font>

10
00:00:44,040 --> 00:00:48,500
give<font color="#CCCCCC"> a</font><font color="#E5E5E5"> huge applause and welcome hello</font>

11
00:00:54,519 --> 00:00:59,610
yeah

12
00:00:56,550 --> 00:00:59,610
[Music]

13
00:01:20,530 --> 00:01:23,689
[Music]

14
00:01:32,820 --> 00:01:42,508
[Music]

15
00:01:34,700 --> 00:01:47,100
so the very first<font color="#CCCCCC"> ssl</font><font color="#E5E5E5"> which back then</font>

16
00:01:42,509 --> 00:01:49,830
was released<font color="#E5E5E5"> in 1995 by</font><font color="#CCCCCC"> netscape</font><font color="#E5E5E5"> and it</font>

17
00:01:47,100 --> 00:01:53,399
was quickly followed<font color="#E5E5E5"> up with version 3</font>

18
00:01:49,830 --> 00:01:57,630
which is<font color="#E5E5E5"> still very</font><font color="#CCCCCC"> similar to the TLS</font>

19
00:01:53,399 --> 00:02:00,509
1.2 that we mostly use today<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then in</font>

20
00:01:57,630 --> 00:02:02,580
1999<font color="#E5E5E5"> it</font><font color="#CCCCCC"> was kind</font><font color="#E5E5E5"> of taking over</font><font color="#CCCCCC"> from</font>

21
00:02:00,509 --> 00:02:04,830
<font color="#CCCCCC">Netscape 2 the IETF which was the</font>

22
00:02:02,580 --> 00:02:08,820
<font color="#CCCCCC">internet standardization organization</font>

23
00:02:04,830 --> 00:02:11,940
and they renamed it<font color="#E5E5E5"> to TLS and so that's</font>

24
00:02:08,820 --> 00:02:13,890
kind of the history we<font color="#E5E5E5"> had SSL and I've</font>

25
00:02:11,940 --> 00:02:16,530
marked<font color="#E5E5E5"> it in red</font><font color="#CCCCCC"> because these two</font>

26
00:02:13,890 --> 00:02:19,200
<font color="#E5E5E5">versions are broken by design</font>

27
00:02:16,530 --> 00:02:21,209
you cannot really use them in a<font color="#E5E5E5"> way</font><font color="#CCCCCC"> that</font>

28
00:02:19,200 --> 00:02:23,250
is secure<font color="#E5E5E5"> these days because</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> know</font>

29
00:02:21,209 --> 00:02:28,950
<font color="#E5E5E5">Werner abilities that</font><font color="#CCCCCC"> are part of the</font>

30
00:02:23,250 --> 00:02:32,790
protocol<font color="#CCCCCC"> then we had in 1999 worst</font><font color="#E5E5E5"> yet</font>

31
00:02:28,950 --> 00:02:34,920
<font color="#E5E5E5">renamed to TLS</font><font color="#CCCCCC"> and TLS is kind of still</font>

32
00:02:32,790 --> 00:02:37,380
kind of<font color="#CCCCCC"> ok if you do everything right</font>

33
00:02:34,920 --> 00:02:39,450
<font color="#CCCCCC">but</font><font color="#E5E5E5"> that's really</font><font color="#CCCCCC"> tricky so it's kind of</font>

34
00:02:37,380 --> 00:02:40,440
a<font color="#E5E5E5"> dangerous protocol but maybe not</font>

35
00:02:39,450 --> 00:02:44,518
<font color="#CCCCCC">totally broken</font>

36
00:02:40,440 --> 00:02:46,769
same with years 1.1 TLS 1.2 is what<font color="#E5E5E5"> we</font>

37
00:02:44,519 --> 00:02:48,750
still<font color="#E5E5E5"> mostly use today and TLS 1.3 is</font>

38
00:02:46,769 --> 00:02:51,660
the new one<font color="#CCCCCC"> and what you can</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> here</font>

39
00:02:48,750 --> 00:02:55,920
for<font color="#E5E5E5"> example</font><font color="#CCCCCC"> is that the the biggest gap</font>

40
00:02:51,660 --> 00:02:58,620
here is between<font color="#E5E5E5"> 1.2</font><font color="#CCCCCC"> and 1.3 so it was a</font>

41
00:02:55,920 --> 00:03:05,310
<font color="#E5E5E5">very long time where we had no new</font>

42
00:02:58,620 --> 00:03:06,860
development here<font color="#CCCCCC"> ok you've probably</font>

43
00:03:05,310 --> 00:03:09,319
<font color="#E5E5E5">heard that we had plenty of</font>

44
00:03:06,860 --> 00:03:14,030
vulnerabilities<font color="#E5E5E5"> in TLS around</font>

45
00:03:09,319 --> 00:03:19,219
<font color="#CCCCCC">yes</font><font color="#E5E5E5"> and also these days</font><font color="#CCCCCC"> good variability</font>

46
00:03:14,030 --> 00:03:21,139
<font color="#CCCCCC">always</font><font color="#E5E5E5"> has a logo and a nice name and I</font>

47
00:03:19,219 --> 00:03:24,170
want<font color="#CCCCCC"> to go into one</font><font color="#E5E5E5"> vulnerability which</font>

48
00:03:21,139 --> 00:03:26,420
doesn't have a look not one of<font color="#E5E5E5"> the</font>

49
00:03:24,170 --> 00:03:29,958
<font color="#E5E5E5">variants</font><font color="#CCCCCC"> I'm I was very surprised</font><font color="#E5E5E5"> when I</font>

50
00:03:26,420 --> 00:03:33,429
realized that<font color="#E5E5E5"> but that so-called padding</font>

51
00:03:29,959 --> 00:03:35,900
<font color="#CCCCCC">oracles</font><font color="#E5E5E5"> they are in CBC mode which is</font>

52
00:03:33,430 --> 00:03:40,030
<font color="#E5E5E5">encryption we use for the actual data</font>

53
00:03:35,900 --> 00:03:44,090
encryption the symmetric data encryption

54
00:03:40,030 --> 00:03:47,030
<font color="#E5E5E5">so and the thing</font><font color="#CCCCCC"> is when we encrypt data</font>

55
00:03:44,090 --> 00:03:51,739
what we<font color="#CCCCCC"> usually use our so called block</font>

56
00:03:47,030 --> 00:03:56,239
ciphers and they encrypt<font color="#E5E5E5"> one block of a</font>

57
00:03:51,739 --> 00:04:01,159
specific size of data<font color="#E5E5E5"> it's usually</font><font color="#CCCCCC"> 16</font>

58
00:03:56,239 --> 00:04:04,629
bytes and this CBC mode was the common

59
00:04:01,159 --> 00:04:08,030
way<font color="#E5E5E5"> to encrypt in past TLS versions and</font>

60
00:04:04,629 --> 00:04:10,040
this is roughly<font color="#E5E5E5"> how it</font><font color="#CCCCCC"> looks like</font><font color="#E5E5E5"> so we</font>

61
00:04:08,030 --> 00:04:12,079
have some<font color="#E5E5E5"> initialization vector which</font>

62
00:04:10,040 --> 00:04:14,679
should be random<font color="#E5E5E5"> wasn't</font><font color="#CCCCCC"> always but</font>

63
00:04:12,079 --> 00:04:17,780
that's another story

64
00:04:14,680 --> 00:04:20,720
and then we encrypt a block of<font color="#CCCCCC"> data and</font>

65
00:04:17,779 --> 00:04:26,570
then we XOR that<font color="#CCCCCC"> encrypting into the</font>

66
00:04:20,720 --> 00:04:28,550
next plaintext<font color="#E5E5E5"> and encrypted again now</font>

67
00:04:26,570 --> 00:04:30,800
one<font color="#CCCCCC"> thing here is that</font><font color="#E5E5E5"> because these are</font>

68
00:04:28,550 --> 00:04:33,800
<font color="#E5E5E5">blocks of data and our data may</font><font color="#CCCCCC"> not</font>

69
00:04:30,800 --> 00:04:36,979
always be<font color="#E5E5E5"> in 16 byte blocks it may just</font>

70
00:04:33,800 --> 00:04:39,020
be<font color="#E5E5E5"> 5 bytes or whatever we need</font><font color="#CCCCCC"> to fill</font>

71
00:04:36,979 --> 00:04:45,258
<font color="#E5E5E5">up that</font><font color="#CCCCCC"> space</font><font color="#E5E5E5"> so we need some kind</font><font color="#CCCCCC"> of</font>

72
00:04:39,020 --> 00:04:48,680
padding<font color="#CCCCCC"> and in TLS what was done was</font>

73
00:04:45,259 --> 00:04:50,599
<font color="#E5E5E5">that first of all we had some data then</font>

74
00:04:48,680 --> 00:04:53,449
we added a Mac which is<font color="#E5E5E5"> something that</font>

75
00:04:50,599 --> 00:04:55,840
guarantees the<font color="#E5E5E5"> the correctness of the</font>

76
00:04:53,449 --> 00:04:58,759
data the authentication of<font color="#E5E5E5"> the data and</font>

77
00:04:55,840 --> 00:05:01,580
then we<font color="#CCCCCC"> Pat it up to a block size and</font>

78
00:04:58,759 --> 00:05:04,180
then we<font color="#E5E5E5"> encrypt it</font><font color="#CCCCCC"> and this order of</font>

79
00:05:01,580 --> 00:05:08,530
things turned out<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> very problematic</font>

80
00:05:04,180 --> 00:05:11,740
<font color="#CCCCCC">so this padding is a very simple</font>

81
00:05:08,530 --> 00:05:13,989
it<font color="#E5E5E5"> if we have one by to fill up we make</font>

82
00:05:11,740 --> 00:05:17,830
a zero<font color="#CCCCCC"> zero if we have</font><font color="#E5E5E5"> two bytes to fill</font>

83
00:05:13,990 --> 00:05:20,430
<font color="#E5E5E5">up will you make one</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> three bytes</font><font color="#CCCCCC"> two</font>

84
00:05:17,830 --> 00:05:26,070
<font color="#CCCCCC">two two two two three</font><font color="#E5E5E5"> and so on so</font>

85
00:05:20,430 --> 00:05:28,480
that's easy to understand right<font color="#CCCCCC"> now</font>

86
00:05:26,070 --> 00:05:32,560
<font color="#CCCCCC">let's for a moment assume</font><font color="#E5E5E5"> a situation</font>

87
00:05:28,480 --> 00:05:36,580
where an attacker can manipulate data

88
00:05:32,560 --> 00:05:39,880
and<font color="#E5E5E5"> can see whether the server receives</font>

89
00:05:36,580 --> 00:05:44,340
a bad padding or whether it receives bad

90
00:05:39,880 --> 00:05:48,700
data<font color="#E5E5E5"> where this</font><font color="#CCCCCC"> match check goes wrong</font>

91
00:05:44,340 --> 00:05:53,380
<font color="#CCCCCC">and here is the decryption with</font><font color="#E5E5E5"> CBC mode</font>

92
00:05:48,700 --> 00:05:55,150
and what an attacker can do here so<font color="#E5E5E5"> the</font>

93
00:05:53,380 --> 00:05:57,969
first<font color="#E5E5E5"> thing the attacker does it throws</font>

94
00:05:55,150 --> 00:06:00,130
one block away<font color="#E5E5E5"> at the end it just blocks</font>

95
00:05:57,970 --> 00:06:04,450
the transmission of that<font color="#E5E5E5"> block and then</font>

96
00:06:00,130 --> 00:06:06,219
<font color="#CCCCCC">it changes</font><font color="#E5E5E5"> something here so what we</font>

97
00:06:04,450 --> 00:06:11,110
<font color="#E5E5E5">assume here is the attacker wants to</font>

98
00:06:06,220 --> 00:06:14,050
know this<font color="#E5E5E5"> decrypted bytes because it may</font>

99
00:06:11,110 --> 00:06:17,020
contain some interesting data<font color="#E5E5E5"> so what he</font>

100
00:06:14,050 --> 00:06:21,960
can do is he can manipulate this byte

101
00:06:17,020 --> 00:06:25,810
with the<font color="#E5E5E5"> guess and by this only 256</font>

102
00:06:21,960 --> 00:06:31,030
<font color="#E5E5E5">waves of various</font><font color="#CCCCCC"> the byte can have so he</font>

103
00:06:25,810 --> 00:06:33,430
can guess enough times and exhaust it

104
00:06:31,030 --> 00:06:36,880
with this value<font color="#CCCCCC"> and if you think about</font>

105
00:06:33,430 --> 00:06:39,250
<font color="#E5E5E5">it we XOR it here with the plaintext</font>

106
00:06:36,880 --> 00:06:43,030
<font color="#CCCCCC">that means if we end up</font><font color="#E5E5E5"> with a</font><font color="#CCCCCC"> zero</font><font color="#E5E5E5"> here</font>

107
00:06:39,250 --> 00:06:45,370
then the padding<font color="#E5E5E5"> is valid</font><font color="#CCCCCC"> if we end up</font>

108
00:06:43,030 --> 00:06:49,479
<font color="#E5E5E5">with some garbage</font><font color="#CCCCCC"> value here then the</font>

109
00:06:45,370 --> 00:06:52,450
<font color="#E5E5E5">padding is probably invalid so by making</font>

110
00:06:49,480 --> 00:06:56,050
enough guesses the attacker can decrypt

111
00:06:52,450 --> 00:06:58,300
a<font color="#CCCCCC"> byte here under the condition that</font><font color="#E5E5E5"> he</font>

112
00:06:56,050 --> 00:07:01,690
<font color="#CCCCCC">learned somehow whether</font><font color="#E5E5E5"> the padding is</font>

113
00:06:58,300 --> 00:07:05,320
valid or not so he could decrypt one

114
00:07:01,690 --> 00:07:06,550
byte<font color="#E5E5E5"> but he can go on let's assume we we</font>

115
00:07:05,320 --> 00:07:09,969
learned that one byte

116
00:07:06,550 --> 00:07:14,500
we have decrypted<font color="#E5E5E5"> it and then we can</font><font color="#CCCCCC"> go</font>

117
00:07:09,970 --> 00:07:15,580
on<font color="#CCCCCC"> with</font><font color="#E5E5E5"> the next byte so we XOR this</font>

118
00:07:14,500 --> 00:07:19,600
byte<font color="#E5E5E5"> on the right</font>

119
00:07:15,580 --> 00:07:21,609
with with the<font color="#CCCCCC"> guests we are</font><font color="#E5E5E5"> with what we</font>

120
00:07:19,600 --> 00:07:25,000
<font color="#CCCCCC">already</font><font color="#E5E5E5"> know that it is and with the one</font>

121
00:07:21,610 --> 00:07:29,200
<font color="#E5E5E5">and then we XOR this next</font><font color="#CCCCCC"> byte with our</font>

122
00:07:25,000 --> 00:07:32,230
guests and also<font color="#CCCCCC"> a</font><font color="#E5E5E5"> one and if this ends</font>

123
00:07:29,200 --> 00:07:35,320
up being 1 1 then again<font color="#CCCCCC"> we have a valid</font>

124
00:07:32,230 --> 00:07:37,030
padding so the<font color="#CCCCCC"> attacker learnt the next</font>

125
00:07:35,320 --> 00:07:42,280
<font color="#E5E5E5">byte and he can do this for other bytes</font>

126
00:07:37,030 --> 00:07:46,630
<font color="#E5E5E5">this this was originally discovered in</font>

127
00:07:42,280 --> 00:07:47,950
2002 by<font color="#CCCCCC"> Sergey</font><font color="#E5E5E5"> moodini</font><font color="#CCCCCC"> but it was kind</font>

128
00:07:46,630 --> 00:07:51,370
<font color="#E5E5E5">of only theoretical</font>

129
00:07:47,950 --> 00:07:54,070
so one thing here is that TLS has<font color="#E5E5E5"> these</font>

130
00:07:51,370 --> 00:07:57,400
error messages<font color="#E5E5E5"> and this there are</font>

131
00:07:54,070 --> 00:08:00,640
<font color="#E5E5E5">different kinds of errors and if you</font>

132
00:07:57,400 --> 00:08:04,479
read up<font color="#E5E5E5"> in the TLS 1.0 standard if</font>

133
00:08:00,640 --> 00:08:07,419
there's a if<font color="#CCCCCC"> the padding is wrong then</font>

134
00:08:04,480 --> 00:08:09,940
you get this<font color="#E5E5E5"> decryption failed error and</font>

135
00:08:07,420 --> 00:08:12,310
if the Mac is wrong so the data has<font color="#CCCCCC"> a</font>

136
00:08:09,940 --> 00:08:14,710
modification<font color="#E5E5E5"> then you get this bad</font>

137
00:08:12,310 --> 00:08:16,570
record<font color="#E5E5E5"> Mac error so you could say this</font>

138
00:08:14,710 --> 00:08:18,870
would allow this padding Oracle attack

139
00:08:16,570 --> 00:08:23,380
because there are these error messages

140
00:08:18,870 --> 00:08:25,840
<font color="#E5E5E5">but the attacker cannot see them</font><font color="#CCCCCC"> because</font>

141
00:08:23,380 --> 00:08:28,030
they are encrypted<font color="#E5E5E5"> so this was kind</font><font color="#CCCCCC"> of</font>

142
00:08:25,840 --> 00:08:32,650
only<font color="#E5E5E5"> a theoretical attack which didn't</font>

143
00:08:28,030 --> 00:08:35,079
<font color="#E5E5E5">really work on a real TLS connection but</font>

144
00:08:32,650 --> 00:08:37,329
then<font color="#E5E5E5"> there was a later paper which made</font>

145
00:08:35,080 --> 00:08:39,760
this attack practical<font color="#E5E5E5"> by measuring the</font>

146
00:08:37,330 --> 00:08:42,100
timing difference from these different

147
00:08:39,760 --> 00:08:47,770
kinds of errors<font color="#E5E5E5"> and this allowed</font>

148
00:08:42,100 --> 00:08:50,950
practical decryption<font color="#E5E5E5"> of TLS traffic then</font>

149
00:08:47,770 --> 00:08:54,490
in later<font color="#CCCCCC"> versions</font><font color="#E5E5E5"> of TLS this was fixed</font>

150
00:08:50,950 --> 00:08:57,250
or kind of fixed<font color="#E5E5E5"> but there's a warning</font>

151
00:08:54,490 --> 00:08:59,440
<font color="#E5E5E5">in the standard which says so this is</font>

152
00:08:57,250 --> 00:09:02,140
right<font color="#E5E5E5"> from the standard text this leaves</font>

153
00:08:59,440 --> 00:09:03,300
a small timing channel<font color="#E5E5E5"> but it is not</font>

154
00:09:02,140 --> 00:09:06,930
believed<font color="#E5E5E5"> to be large</font>

155
00:09:03,300 --> 00:09:09,899
to be<font color="#E5E5E5"> exploitable if you read something</font>

156
00:09:06,930 --> 00:09:15,660
like<font color="#E5E5E5"> that it sounds</font><font color="#CCCCCC"> maybe suspicious</font>

157
00:09:09,899 --> 00:09:17,850
<font color="#E5E5E5">maybe dangerous and actually in 2013</font>

158
00:09:15,660 --> 00:09:20,219
there was the so-called<font color="#E5E5E5"> lucky 13 attack</font>

159
00:09:17,850 --> 00:09:22,800
where a team<font color="#CCCCCC"> of researchers</font><font color="#E5E5E5"> actually</font>

160
00:09:20,220 --> 00:09:25,860
managed to exploit that<font color="#E5E5E5"> small timing</font>

161
00:09:22,800 --> 00:09:27,390
<font color="#E5E5E5">side channel that the designers of</font><font color="#CCCCCC"> the</font>

162
00:09:25,860 --> 00:09:33,060
standard believed was not large enough

163
00:09:27,390 --> 00:09:36,089
to be exploitable<font color="#E5E5E5"> but and it is in</font>

164
00:09:33,060 --> 00:09:37,920
theory possible to to implement<font color="#CCCCCC"> TLS in a</font>

165
00:09:36,089 --> 00:09:40,709
way that is safe from this timing

166
00:09:37,920 --> 00:09:42,899
attacks<font color="#E5E5E5"> but it adds a lot of complexity</font>

167
00:09:40,709 --> 00:09:45,268
<font color="#E5E5E5">this to the coach</font><font color="#CCCCCC"> if you just look at</font>

168
00:09:42,899 --> 00:09:47,279
<font color="#E5E5E5">when lucky 13 was fixed it just made the</font>

169
00:09:45,269 --> 00:09:51,899
code much longer and<font color="#E5E5E5"> much harder to</font>

170
00:09:47,279 --> 00:09:54,149
understand then there was another

171
00:09:51,899 --> 00:09:59,250
<font color="#E5E5E5">pending Oracle which was called</font><font color="#CCCCCC"> portal</font>

172
00:09:54,149 --> 00:10:02,100
which was in the old version<font color="#E5E5E5"> SSL 3</font><font color="#CCCCCC"> and</font>

173
00:09:59,250 --> 00:10:03,810
this was kind<font color="#CCCCCC"> of by design so the the</font>

174
00:10:02,100 --> 00:10:05,820
protocol was<font color="#E5E5E5"> built in a way that you</font>

175
00:10:03,810 --> 00:10:10,290
could<font color="#E5E5E5"> not</font><font color="#CCCCCC"> allow</font><font color="#E5E5E5"> to avoid this padding</font>

176
00:10:05,820 --> 00:10:12,779
Oracle<font color="#CCCCCC"> then it turned out that there was</font>

177
00:10:10,290 --> 00:10:15,959
also<font color="#E5E5E5"> kind of a TLS variation of this</font>

178
00:10:12,779 --> 00:10:19,470
poodle attack<font color="#E5E5E5"> and the reason here was</font>

179
00:10:15,959 --> 00:10:23,099
that<font color="#E5E5E5"> the only major change between SSL</font>

180
00:10:19,470 --> 00:10:26,760
version 3 and TLS<font color="#E5E5E5"> version 1 was that the</font>

181
00:10:23,100 --> 00:10:28,709
padding was fixed<font color="#CCCCCC"> to specific value were</font>

182
00:10:26,760 --> 00:10:31,260
in the past it<font color="#E5E5E5"> could have any value and</font>

183
00:10:28,709 --> 00:10:33,029
turned out they were<font color="#CCCCCC"> CLS implementations</font>

184
00:10:31,260 --> 00:10:40,230
<font color="#CCCCCC">that were not checking that enabling</font>

185
00:10:33,029 --> 00:10:41,880
this poodle attack<font color="#E5E5E5"> also in TLS then</font>

186
00:10:40,230 --> 00:10:44,579
there was the so-called lucky

187
00:10:41,880 --> 00:10:48,510
microseconds attack which was basically

188
00:10:44,579 --> 00:10:50,489
the one of the<font color="#E5E5E5"> people who who</font><font color="#CCCCCC"> has</font><font color="#E5E5E5"> found</font>

189
00:10:48,510 --> 00:10:52,050
the lucky 13 attack<font color="#CCCCCC"> he looked at</font>

190
00:10:50,490 --> 00:10:54,420
implementations and so as they have

191
00:10:52,050 --> 00:10:57,310
fixed<font color="#E5E5E5"> lucky 13 properly and they looked</font>

192
00:10:54,420 --> 00:10:59,529
at<font color="#CCCCCC"> an s 2 n which is a</font>

193
00:10:57,310 --> 00:11:02,050
a library from Amazon and they found

194
00:10:59,529 --> 00:11:03,250
<font color="#CCCCCC">okay they tried to make countermeasures</font>

195
00:11:02,050 --> 00:11:05,020
against this attack but these

196
00:11:03,250 --> 00:11:08,080
<font color="#E5E5E5">countermeasures didn't really work and</font>

197
00:11:05,020 --> 00:11:13,569
they had still<font color="#CCCCCC"> a timing</font><font color="#E5E5E5"> attack that they</font>

198
00:11:08,080 --> 00:11:17,740
could perform<font color="#CCCCCC"> then there was a</font><font color="#E5E5E5"> back open</font>

199
00:11:13,570 --> 00:11:20,080
SSL which<font color="#E5E5E5"> was kind of funny because when</font>

200
00:11:17,740 --> 00:11:22,420
Optimus I'll try to fix this<font color="#E5E5E5"> lucky 13</font>

201
00:11:20,080 --> 00:11:25,000
attack<font color="#E5E5E5"> they introduced another padding</font>

202
00:11:22,420 --> 00:11:30,640
Oracle attack which was<font color="#CCCCCC"> actually much</font>

203
00:11:25,000 --> 00:11:31,920
easier<font color="#E5E5E5"> to exploit so yeah we had plenty</font>

204
00:11:30,640 --> 00:11:35,380
of<font color="#CCCCCC"> padding Oracle's</font>

205
00:11:31,920 --> 00:11:37,900
but if you<font color="#E5E5E5"> remember back what I said</font><font color="#CCCCCC"> for</font>

206
00:11:35,380 --> 00:11:40,270
the very<font color="#E5E5E5"> first attack that this didn't</font>

207
00:11:37,900 --> 00:11:45,339
really<font color="#E5E5E5"> work in practice in TLS because</font>

208
00:11:40,270 --> 00:11:48,000
these errors<font color="#E5E5E5"> are encrypted but</font>

209
00:11:45,339 --> 00:11:51,070
theoretically<font color="#E5E5E5"> you could imagine that</font>

210
00:11:48,000 --> 00:11:53,140
someone creates an implementation<font color="#CCCCCC"> that</font>

211
00:11:51,070 --> 00:11:56,529
sends errors that<font color="#CCCCCC"> are not</font><font color="#E5E5E5"> encrypted</font>

212
00:11:53,140 --> 00:12:03,130
for<font color="#E5E5E5"> example you</font><font color="#CCCCCC"> consented TCP error or</font>

213
00:11:56,529 --> 00:12:05,050
just cut the connection<font color="#CCCCCC"> or have any kind</font>

214
00:12:03,130 --> 00:12:07,000
of different behavior because the whole

215
00:12:05,050 --> 00:12:08,829
<font color="#CCCCCC">attacker</font><font color="#E5E5E5"> just relies on the fact that</font>

216
00:12:07,000 --> 00:12:13,080
you can distinguish these two<font color="#E5E5E5"> kinds of</font>

217
00:12:08,830 --> 00:12:16,900
errors and yeah you can find

218
00:12:13,080 --> 00:12:20,670
implementations out there doing that<font color="#E5E5E5"> so</font>

219
00:12:16,900 --> 00:12:20,670
yeah<font color="#E5E5E5"> padding Oracle is still an issue</font>

220
00:12:23,070 --> 00:12:27,970
then I want to look at<font color="#E5E5E5"> another tank</font>

221
00:12:25,990 --> 00:12:30,430
which<font color="#CCCCCC"> is a so-called black in Baja</font>

222
00:12:27,970 --> 00:12:32,320
attacks and they tragedy<font color="#E5E5E5"> of RSA</font>

223
00:12:30,430 --> 00:12:34,449
encryption<font color="#E5E5E5"> and that is kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

224
00:12:32,320 --> 00:12:36,370
asymmetric encryption which were used at

225
00:12:34,450 --> 00:12:40,620
the beginning<font color="#CCCCCC"> of</font><font color="#E5E5E5"> a connection to</font>

226
00:12:36,370 --> 00:12:40,620
establish a shared key

227
00:12:40,690 --> 00:12:51,500
this attack was found in 99

228
00:12:44,210 --> 00:12:55,220
by<font color="#E5E5E5"> Daniel Blankenburg</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> if you look at</font>

229
00:12:51,500 --> 00:12:58,490
the RSA encryption<font color="#CCCCCC"> before we encrypt</font>

230
00:12:55,220 --> 00:13:02,240
<font color="#CCCCCC">something with RSA oh we do some</font>

231
00:12:58,490 --> 00:13:05,020
preparations<font color="#E5E5E5"> and the way this is done</font>

232
00:13:02,240 --> 00:13:10,370
and in<font color="#CCCCCC"> OTS versions is</font><font color="#E5E5E5"> the so-called</font>

233
00:13:05,020 --> 00:13:14,569
<font color="#CCCCCC">pkcs1 1.5 standard and how this looks</font><font color="#E5E5E5"> is</font>

234
00:13:10,370 --> 00:13:16,790
it<font color="#E5E5E5"> starts with the 0 0 0 2 then we have</font>

235
00:13:14,570 --> 00:13:19,850
<font color="#E5E5E5">some random data which is</font><font color="#CCCCCC"> just again a</font>

236
00:13:16,790 --> 00:13:22,010
padding to fill up space then we have 0

237
00:13:19,850 --> 00:13:25,370
which marks the<font color="#CCCCCC"> end</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> the padding and</font>

238
00:13:22,010 --> 00:13:28,069
then we have version number 0 3 or 3

239
00:13:25,370 --> 00:13:30,920
which stands for TLS 1.2<font color="#E5E5E5"> it's totally</font>

240
00:13:28,070 --> 00:13:33,320
obvious right<font color="#E5E5E5"> I'll get to version</font>

241
00:13:30,920 --> 00:13:35,449
<font color="#E5E5E5">numbers later and then we have the</font>

242
00:13:33,320 --> 00:13:37,940
<font color="#E5E5E5">secret data</font><font color="#CCCCCC"> now the but the relevant</font>

243
00:13:35,450 --> 00:13:40,279
<font color="#E5E5E5">thing for this attack is mostly the 0 0</font>

244
00:13:37,940 --> 00:13:43,610
0<font color="#E5E5E5"> 2 at the beginning so we know each</font>

245
00:13:40,279 --> 00:13:51,260
correct<font color="#CCCCCC"> and encrypted block if we</font>

246
00:13:43,610 --> 00:13:53,540
decrypt it<font color="#CCCCCC"> it starts with 0 0 0 2 so we</font>

247
00:13:51,260 --> 00:13:56,930
may wonder if we implement<font color="#E5E5E5"> the TLS</font>

248
00:13:53,540 --> 00:14:01,130
server and it decrypt some data<font color="#E5E5E5"> from the</font>

249
00:13:56,930 --> 00:14:04,880
client<font color="#CCCCCC"> and then it doesn't</font><font color="#E5E5E5"> start with 0</font>

250
00:14:01,130 --> 00:14:06,529
0 0<font color="#CCCCCC"> 2</font><font color="#E5E5E5"> what shall I do and the naive</font>

251
00:14:04,880 --> 00:14:08,930
thing would be<font color="#E5E5E5"> yeah of course we just</font>

252
00:14:06,529 --> 00:14:13,189
send an error message<font color="#E5E5E5"> because something</font>

253
00:14:08,930 --> 00:14:14,540
is obviously wrong here<font color="#E5E5E5"> now is this</font>

254
00:14:13,190 --> 00:14:17,580
turns out<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be not such a good idea</font>

255
00:14:14,540 --> 00:14:19,949
<font color="#E5E5E5">because if we do this we will tell the</font>

256
00:14:17,580 --> 00:14:22,230
something<font color="#E5E5E5"> we will tell him</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the</font>

257
00:14:19,950 --> 00:14:24,750
decrypted data<font color="#E5E5E5"> does not start with zero</font>

258
00:14:22,230 --> 00:14:26,730
zero<font color="#CCCCCC"> zero two so the attacker learned</font>

259
00:14:24,750 --> 00:14:29,880
something about<font color="#E5E5E5"> the interval in which</font>

260
00:14:26,730 --> 00:14:33,620
<font color="#CCCCCC">the decrypted data</font><font color="#E5E5E5"> is either it starts</font>

261
00:14:29,880 --> 00:14:37,410
with zero zero<font color="#E5E5E5"> two or it doesn't and</font>

262
00:14:33,620 --> 00:14:39,750
<font color="#CCCCCC">this is each other to be enough</font><font color="#E5E5E5"> to if</font>

263
00:14:37,410 --> 00:14:41,579
you send enough queries and modify the

264
00:14:39,750 --> 00:14:44,910
cypher text you can learn<font color="#E5E5E5"> enough</font>

265
00:14:41,580 --> 00:14:46,830
information to<font color="#E5E5E5"> decrypt data the whole</font>

266
00:14:44,910 --> 00:14:49,020
algorithm<font color="#E5E5E5"> is a bit more complicated but</font>

267
00:14:46,830 --> 00:14:51,180
it it's not<font color="#CCCCCC"> that complicated it's it's</font>

268
00:14:49,020 --> 00:14:52,800
relatively straightforward<font color="#CCCCCC"> it's a bit of</font>

269
00:14:51,180 --> 00:14:56,729
math and<font color="#E5E5E5"> they didn't put</font><font color="#CCCCCC"> one to put in</font>

270
00:14:52,800 --> 00:15:01,229
any formulas<font color="#E5E5E5"> but yeah</font><font color="#CCCCCC"> now as I said it</font>

271
00:14:56,730 --> 00:15:03,990
was discovered in 1998 so<font color="#CCCCCC"> TLS 1.0</font>

272
00:15:01,230 --> 00:15:06,600
introduced some countermeasures<font color="#CCCCCC"> and the</font>

273
00:15:03,990 --> 00:15:09,210
<font color="#E5E5E5">ID the general idea here is that if</font><font color="#CCCCCC"> you</font>

274
00:15:06,600 --> 00:15:12,240
decrypt something and it is<font color="#E5E5E5"> wrong then</font>

275
00:15:09,210 --> 00:15:14,940
you're<font color="#CCCCCC"> supposed to</font><font color="#E5E5E5"> replace it with a</font>

276
00:15:12,240 --> 00:15:18,240
<font color="#E5E5E5">random value and use that random value</font>

277
00:15:14,940 --> 00:15:20,130
as your secret and pretend<font color="#E5E5E5"> nothing has</font>

278
00:15:18,240 --> 00:15:22,230
happened and then continue<font color="#CCCCCC"> and then the</font>

279
00:15:20,130 --> 00:15:25,590
handshake will fail later on because you

280
00:15:22,230 --> 00:15:27,270
<font color="#E5E5E5">don't have the same thing this prevents</font>

281
00:15:25,590 --> 00:15:29,390
the attacker from learning whether your

282
00:15:27,270 --> 00:15:33,480
data<font color="#E5E5E5"> is valid or not</font>

283
00:15:29,390 --> 00:15:35,100
<font color="#CCCCCC">in 2003</font><font color="#E5E5E5"> research team figured out that</font>

284
00:15:33,480 --> 00:15:36,810
the<font color="#E5E5E5"> counter measures how they were</font>

285
00:15:35,100 --> 00:15:39,470
described in two years<font color="#CCCCCC"> from when over</font>

286
00:15:36,810 --> 00:15:42,109
incomplete and also not entirely<font color="#E5E5E5"> was</font>

287
00:15:39,470 --> 00:15:43,700
<font color="#E5E5E5">Nakia how to implement them because</font>

288
00:15:42,110 --> 00:15:46,640
there's<font color="#E5E5E5"> this version thing and it was</font>

289
00:15:43,700 --> 00:15:48,380
not<font color="#E5E5E5"> exactly described how to handle that</font>

290
00:15:46,640 --> 00:15:52,000
if<font color="#E5E5E5"> only the version is wrong and other</font>

291
00:15:48,380 --> 00:15:54,439
things so they they<font color="#E5E5E5"> were able to make to</font>

292
00:15:52,000 --> 00:15:58,010
create an attack<font color="#CCCCCC"> that still worked</font>

293
00:15:54,440 --> 00:16:00,620
<font color="#E5E5E5">despite these countermeasures</font>

294
00:15:58,010 --> 00:16:05,390
so more counter measures were proposed

295
00:16:00,620 --> 00:16:07,160
and in 2014<font color="#E5E5E5"> there was a paper that Java</font>

296
00:16:05,390 --> 00:16:10,100
was still vulnerable to blind<font color="#CCCCCC"> both</font>

297
00:16:07,160 --> 00:16:12,380
attacks<font color="#CCCCCC"> in a special</font><font color="#E5E5E5"> way because they</font>

298
00:16:10,100 --> 00:16:15,380
used some kind of decoding they raised

299
00:16:12,380 --> 00:16:17,000
an exception<font color="#CCCCCC"> and the exception was long</font>

300
00:16:15,380 --> 00:16:19,160
<font color="#E5E5E5">enough that you could measure the timing</font>

301
00:16:17,000 --> 00:16:22,010
difference<font color="#E5E5E5"> and there was also still a</font>

302
00:16:19,160 --> 00:16:27,980
small issue in<font color="#E5E5E5"> open</font><font color="#CCCCCC"> SSL although that</font>

303
00:16:22,010 --> 00:16:29,960
was not<font color="#E5E5E5"> practically exploitable in 2016</font>

304
00:16:27,980 --> 00:16:33,650
there was<font color="#E5E5E5"> a</font><font color="#CCCCCC"> so-called</font><font color="#E5E5E5"> drone attack and</font>

305
00:16:29,960 --> 00:16:36,470
the drone<font color="#CCCCCC"> attack was a blanket</font><font color="#E5E5E5"> attack in</font>

306
00:16:33,650 --> 00:16:39,079
SSL version 2 now<font color="#CCCCCC"> you may</font><font color="#E5E5E5"> wonder as ever</font>

307
00:16:36,470 --> 00:16:42,710
who<font color="#CCCCCC"> - is this very</font><font color="#E5E5E5"> very old version from</font>

308
00:16:39,080 --> 00:16:45,710
1995 is this a<font color="#E5E5E5"> problem but it</font><font color="#CCCCCC"> actually</font>

309
00:16:42,710 --> 00:16:48,440
is because you can use encrypted data

310
00:16:45,710 --> 00:16:51,290
from a modern TLS version<font color="#CCCCCC"> ts 1.2 and</font>

311
00:16:48,440 --> 00:16:54,980
<font color="#E5E5E5">decrypted</font><font color="#CCCCCC"> with the server that still</font>

312
00:16:51,290 --> 00:16:59,780
supports<font color="#E5E5E5"> SSL version 2 so that was the</font>

313
00:16:54,980 --> 00:17:02,420
<font color="#E5E5E5">drone attack and then last year I</font>

314
00:16:59,780 --> 00:17:04,069
thought maybe someone<font color="#E5E5E5"> should</font><font color="#CCCCCC"> check if</font>

315
00:17:02,420 --> 00:17:07,069
they<font color="#E5E5E5"> are still service vulnerable to</font>

316
00:17:04,069 --> 00:17:10,040
this blind buffer attacks so<font color="#E5E5E5"> I wrote a</font>

317
00:17:07,069 --> 00:17:13,189
small scan tool and started scanning<font color="#E5E5E5"> and</font>

318
00:17:10,040 --> 00:17:17,379
<font color="#E5E5E5">scanty Alexa top 1 million the first hit</font>

319
00:17:13,190 --> 00:17:20,270
was facebook.com/ was<font color="#E5E5E5"> vulnerable</font><font color="#CCCCCC"> and</font>

320
00:17:17,380 --> 00:17:22,970
turned out from<font color="#E5E5E5"> from the top 100 pages</font>

321
00:17:20,270 --> 00:17:24,920
roughly<font color="#CCCCCC"> a</font><font color="#E5E5E5"> third were vulnerable and in</font>

322
00:17:22,970 --> 00:17:27,130
the end we found<font color="#E5E5E5"> like 15</font><font color="#CCCCCC"> different</font>

323
00:17:24,920 --> 00:17:29,360
implementations that are<font color="#CCCCCC"> vulnerable</font>

324
00:17:27,130 --> 00:17:30,290
probably more<font color="#E5E5E5"> but these are the ones we</font>

325
00:17:29,360 --> 00:17:38,510
know about

326
00:17:30,290 --> 00:17:41,060
<font color="#E5E5E5">yep and just I think a month ago there</font>

327
00:17:38,510 --> 00:17:43,760
was another paper<font color="#E5E5E5"> that</font><font color="#CCCCCC"> there also you</font>

328
00:17:41,060 --> 00:17:46,190
<font color="#E5E5E5">can use cash</font><font color="#CCCCCC"> aside channels which is</font>

329
00:17:43,760 --> 00:17:49,070
mostly interesting if you have<font color="#CCCCCC"> a cloud</font>

330
00:17:46,190 --> 00:17:51,200
infrastructure where multiple servers

331
00:17:49,070 --> 00:17:53,120
are running<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the same hardware which</font>

332
00:17:51,200 --> 00:17:59,060
you can also<font color="#E5E5E5"> use to perform</font><font color="#CCCCCC"> these blind</font>

333
00:17:53,120 --> 00:18:01,010
<font color="#E5E5E5">bhai</font><font color="#CCCCCC"> texts now what I want</font><font color="#E5E5E5"> to show you</font>

334
00:17:59,060 --> 00:18:03,530
here<font color="#CCCCCC"> you cannot read this because it's</font>

335
00:18:01,010 --> 00:18:05,810
too<font color="#E5E5E5"> small but this is the chapters in</font>

336
00:18:03,530 --> 00:18:07,550
<font color="#E5E5E5">the TLS data that describe the</font>

337
00:18:05,810 --> 00:18:10,040
countermeasures<font color="#CCCCCC"> to</font><font color="#E5E5E5"> these black</font><font color="#CCCCCC"> bhava</font>

338
00:18:07,550 --> 00:18:12,200
attacks<font color="#E5E5E5"> so we knew about them since</font>

339
00:18:10,040 --> 00:18:14,690
before kill<font color="#CCCCCC"> at one point</font><font color="#E5E5E5"> also there was</font>

340
00:18:12,200 --> 00:18:16,190
<font color="#E5E5E5">a small chapter what you should do to</font>

341
00:18:14,690 --> 00:18:18,530
<font color="#E5E5E5">prevent these attacks and they may</font>

342
00:18:16,190 --> 00:18:22,040
figure out<font color="#E5E5E5"> ok that's not enough we</font><font color="#CCCCCC"> need</font>

343
00:18:18,530 --> 00:18:24,440
to have more counter<font color="#E5E5E5"> measures and so</font>

344
00:18:22,040 --> 00:18:26,330
what you I mean what you can clearly see

345
00:18:24,440 --> 00:18:30,320
<font color="#E5E5E5">here it's it's getting</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> and more</font>

346
00:18:26,330 --> 00:18:33,230
complicated<font color="#CCCCCC"> to prevent these attacks</font><font color="#E5E5E5"> so</font>

347
00:18:30,320 --> 00:18:36,740
with every new TLS version we had more

348
00:18:33,230 --> 00:18:41,300
complexity<font color="#CCCCCC"> to prevent</font><font color="#E5E5E5"> this like Maha</font>

349
00:18:36,740 --> 00:18:44,510
attacks these<font color="#E5E5E5"> were just two examples</font>

350
00:18:41,300 --> 00:18:46,970
<font color="#E5E5E5">there are</font><font color="#CCCCCC"> a lot more attacks on TLS 1.2</font>

351
00:18:44,510 --> 00:18:50,240
and<font color="#E5E5E5"> earlier that were due to poor design</font>

352
00:18:46,970 --> 00:18:52,760
<font color="#E5E5E5">choices</font><font color="#CCCCCC"> I've named a few here sloth</font>

353
00:18:50,240 --> 00:18:55,990
which was against<font color="#E5E5E5"> weak areas freak which</font>

354
00:18:52,760 --> 00:18:59,140
can<font color="#CCCCCC"> protect</font><font color="#E5E5E5"> issues in the handshake and</font>

355
00:18:55,990 --> 00:19:01,850
<font color="#E5E5E5">compatibility with old versions</font>

356
00:18:59,140 --> 00:19:04,129
<font color="#E5E5E5">332 which</font><font color="#CCCCCC"> attacks</font>

357
00:19:01,850 --> 00:19:06,168
some block<font color="#E5E5E5"> ciphers that have a small</font>

358
00:19:04,129 --> 00:19:08,029
block size<font color="#CCCCCC"> tripl handshake which is a</font>

359
00:19:06,169 --> 00:19:14,359
very complicated interaction of

360
00:19:08,029 --> 00:19:17,690
different<font color="#E5E5E5"> handshakes the general</font>

361
00:19:14,359 --> 00:19:20,539
<font color="#CCCCCC">trencher was that</font><font color="#E5E5E5"> in TLS 1.2 and earlier</font>

362
00:19:17,690 --> 00:19:22,429
if there<font color="#E5E5E5"> was a security bug if there was</font>

363
00:19:20,539 --> 00:19:25,549
a vulnerability<font color="#E5E5E5"> and the cryptography you</font>

364
00:19:22,429 --> 00:19:29,090
what people did was we need a workaround

365
00:19:25,549 --> 00:19:31,190
for<font color="#E5E5E5"> the security issue</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then if this</font>

366
00:19:29,090 --> 00:19:34,539
<font color="#E5E5E5">background doesn't work is not</font>

367
00:19:31,190 --> 00:19:39,590
sufficient<font color="#CCCCCC"> we need more</font><font color="#E5E5E5"> backgrounds and</font>

368
00:19:34,539 --> 00:19:41,629
also we create<font color="#E5E5E5"> more secure modes</font><font color="#CCCCCC"> but we</font>

369
00:19:39,590 --> 00:19:43,428
still keep the<font color="#CCCCCC"> old ones and then people</font>

370
00:19:41,629 --> 00:19:46,009
<font color="#CCCCCC">can choose we have</font><font color="#E5E5E5"> this algorithm</font>

371
00:19:43,429 --> 00:19:48,049
agility you<font color="#CCCCCC"> can choose</font><font color="#E5E5E5"> there's to secure</font>

372
00:19:46,009 --> 00:19:52,309
algorithm<font color="#E5E5E5"> there so let's secure</font>

373
00:19:48,049 --> 00:19:54,168
<font color="#E5E5E5">algorithm take whatever you want which</font>

374
00:19:52,309 --> 00:19:56,269
in practice meant very<font color="#E5E5E5"> often still the</font>

375
00:19:54,169 --> 00:19:58,669
insecure<font color="#E5E5E5"> modes</font><font color="#CCCCCC"> for use</font><font color="#E5E5E5"> because like for</font>

376
00:19:56,269 --> 00:20:00,979
<font color="#E5E5E5">all of these things</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> were moves</font>

377
00:19:58,669 --> 00:20:03,200
<font color="#CCCCCC">available until as 1.2 that didn't have</font>

378
00:20:00,979 --> 00:20:09,830
<font color="#E5E5E5">these vulnerabilities but they were</font>

379
00:20:03,200 --> 00:20:13,190
<font color="#E5E5E5">optional but and I think that is the</font>

380
00:20:09,830 --> 00:20:16,899
<font color="#CCCCCC">major change that came with TOS 1.3</font><font color="#E5E5E5"> was</font>

381
00:20:13,190 --> 00:20:19,669
a mindset change<font color="#E5E5E5"> that people said</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> if</font>

382
00:20:16,899 --> 00:20:21,469
something has vulnerabilities if it's

383
00:20:19,669 --> 00:20:25,070
insecure and<font color="#E5E5E5"> if we have something</font><font color="#CCCCCC"> better</font>

384
00:20:21,470 --> 00:20:29,840
then<font color="#E5E5E5"> we just remove the thing that is</font>

385
00:20:25,070 --> 00:20:33,139
vulnerable<font color="#CCCCCC"> that is problematic</font><font color="#E5E5E5"> so the</font>

386
00:20:29,840 --> 00:20:34,908
main change in<font color="#E5E5E5"> pls 1.3 was that a lot of</font>

387
00:20:33,139 --> 00:20:37,609
<font color="#E5E5E5">things were deprecated so we no longer</font>

388
00:20:34,909 --> 00:20:40,220
have these<font color="#CCCCCC"> CBC modes we no longer have</font>

389
00:20:37,609 --> 00:20:43,309
<font color="#E5E5E5">our C 4</font><font color="#CCCCCC"> which is a another cipher which</font>

390
00:20:40,220 --> 00:20:46,480
was problematic<font color="#E5E5E5"> we no longer have Triple</font>

391
00:20:43,309 --> 00:20:51,200
DES which has<font color="#CCCCCC"> these small</font><font color="#E5E5E5"> block sizes</font>

392
00:20:46,480 --> 00:20:53,600
we still use<font color="#E5E5E5"> GCM what but we no longer</font>

393
00:20:51,200 --> 00:20:55,760
<font color="#E5E5E5">use it with an explicit nonce which also</font>

394
00:20:53,600 --> 00:20:58,399
turned out<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> problematic</font><font color="#CCCCCC"> we</font>

395
00:20:55,760 --> 00:21:01,730
completely remove RSA encryption<font color="#CCCCCC"> we</font>

396
00:20:58,400 --> 00:21:03,740
still use RSA but only<font color="#E5E5E5"> for signatures we</font>

397
00:21:01,730 --> 00:21:06,890
remove hash functions that turned out to

398
00:21:03,740 --> 00:21:11,900
be insecure<font color="#CCCCCC"> we remove diffie-hellman</font>

399
00:21:06,890 --> 00:21:14,179
with custom parameters which was<font color="#E5E5E5"> yeah</font>

400
00:21:11,900 --> 00:21:18,320
what<font color="#E5E5E5"> turned out to be very</font><font color="#CCCCCC"> problematic</font>

401
00:21:14,179 --> 00:21:26,000
and we removed elliptic curves<font color="#E5E5E5"> that kind</font>

402
00:21:18,320 --> 00:21:29,059
of look not so<font color="#E5E5E5"> secure but also there was</font>

403
00:21:26,000 --> 00:21:32,390
something that some academics looked at

404
00:21:29,059 --> 00:21:34,790
TLS and with the more scientific<font color="#E5E5E5"> view</font>

405
00:21:32,390 --> 00:21:37,100
<font color="#E5E5E5">they tried to formally understand the</font>

406
00:21:34,790 --> 00:21:39,620
security<font color="#E5E5E5"> protocol properties of this</font>

407
00:21:37,100 --> 00:21:41,389
protocol and to<font color="#E5E5E5"> analyze and to see if</font>

408
00:21:39,620 --> 00:21:45,860
they can<font color="#E5E5E5"> prove some kind of security</font>

409
00:21:41,390 --> 00:21:48,140
<font color="#E5E5E5">properties of the protocol</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> many</font>

410
00:21:45,860 --> 00:21:50,330
vulnerabilities<font color="#E5E5E5"> that I mentioned</font><font color="#CCCCCC"> earlier</font>

411
00:21:48,140 --> 00:21:53,540
were found by<font color="#CCCCCC"> these researchers trying</font>

412
00:21:50,330 --> 00:21:57,020
to<font color="#E5E5E5"> formally analyze the protocol but</font>

413
00:21:53,540 --> 00:22:00,649
also these<font color="#CCCCCC"> these</font><font color="#E5E5E5"> analysis have</font>

414
00:21:57,020 --> 00:22:04,610
contributed to design<font color="#E5E5E5"> TLS 1.3 to make it</font>

415
00:22:00,650 --> 00:22:06,590
more robust<font color="#CCCCCC"> to attacks so this is</font>

416
00:22:04,610 --> 00:22:08,360
anything<font color="#E5E5E5"> also a big change there was a</font>

417
00:22:06,590 --> 00:22:11,030
much better collaboration<font color="#E5E5E5"> between</font>

418
00:22:08,360 --> 00:22:12,439
scientists who were<font color="#E5E5E5"> looking at the</font>

419
00:22:11,030 --> 00:22:18,379
protocol and<font color="#E5E5E5"> the people who were</font>

420
00:22:12,440 --> 00:22:20,809
actually<font color="#CCCCCC"> writing the</font><font color="#E5E5E5"> protocol but</font><font color="#CCCCCC"> you</font>

421
00:22:18,380 --> 00:22:23,840
may say yeah<font color="#E5E5E5"> all the security is nice</font>

422
00:22:20,809 --> 00:22:25,550
but<font color="#E5E5E5"> what we really care</font><font color="#CCCCCC"> about or maybe</font>

423
00:22:23,840 --> 00:22:27,919
<font color="#E5E5E5">some</font><font color="#CCCCCC"> people really care about</font><font color="#E5E5E5"> the speech</font>

424
00:22:25,550 --> 00:22:30,559
right we want our<font color="#CCCCCC"> internet to be fast we</font>

425
00:22:27,920 --> 00:22:37,370
want<font color="#E5E5E5"> to open our browser and immediately</font>

426
00:22:30,559 --> 00:22:42,920
get the<font color="#E5E5E5"> page loaded and TLS 1.3 also</font>

427
00:22:37,370 --> 00:22:45,580
brings improved speed I've I'm throwing

428
00:22:42,920 --> 00:22:49,330
<font color="#E5E5E5">here the handshake and this is</font>

429
00:22:45,580 --> 00:22:51,790
very simplified<font color="#CCCCCC"> I kind of only added the</font>

430
00:22:49,330 --> 00:22:54,490
things that matter<font color="#CCCCCC"> to make this</font><font color="#E5E5E5"> point</font>

431
00:22:51,790 --> 00:22:57,220
but if you look at on the left<font color="#CCCCCC"> if we do</font>

432
00:22:54,490 --> 00:22:59,260
a handshake<font color="#CCCCCC"> with an</font><font color="#E5E5E5"> old TLS version it</font>

433
00:22:57,220 --> 00:23:01,540
starts that<font color="#E5E5E5"> this client sends a client</font>

434
00:22:59,260 --> 00:23:03,309
hello and some information<font color="#CCCCCC"> what version</font>

435
00:23:01,540 --> 00:23:05,980
it supports<font color="#CCCCCC"> what encryption notes it's</font>

436
00:23:03,309 --> 00:23:08,230
the perks<font color="#E5E5E5"> then the server sends</font><font color="#CCCCCC"> back</font>

437
00:23:05,980 --> 00:23:13,210
which encryption modes it wants to use

438
00:23:08,230 --> 00:23:15,490
<font color="#E5E5E5">and a key exchange and then the client</font>

439
00:23:13,210 --> 00:23:17,500
<font color="#CCCCCC">sense</font><font color="#E5E5E5"> is part</font><font color="#CCCCCC"> of the key exchange</font><font color="#E5E5E5"> and</font>

440
00:23:15,490 --> 00:23:19,210
the<font color="#CCCCCC"> so-called finished message and then</font>

441
00:23:17,500 --> 00:23:21,660
the server sends finished message and

442
00:23:19,210 --> 00:23:25,120
then the client can start sending<font color="#CCCCCC"> data</font>

443
00:23:21,660 --> 00:23:28,510
<font color="#E5E5E5">in TLS 1.3 we have compressed is all a</font>

444
00:23:25,120 --> 00:23:30,550
bit<font color="#CCCCCC"> the client</font><font color="#E5E5E5"> sends his client hello</font>

445
00:23:28,510 --> 00:23:35,200
<font color="#E5E5E5">and immediately sends a key exchange</font>

446
00:23:30,550 --> 00:23:37,120
message and then the server<font color="#E5E5E5"> answers with</font>

447
00:23:35,200 --> 00:23:39,040
his key exchange message<font color="#E5E5E5"> and a few more</font>

448
00:23:37,120 --> 00:23:42,489
things that I left out for simplicity

449
00:23:39,040 --> 00:23:44,440
<font color="#E5E5E5">but the important thing is</font><font color="#CCCCCC"> that with the</font>

450
00:23:42,490 --> 00:23:49,750
second message the client can<font color="#E5E5E5"> already</font>

451
00:23:44,440 --> 00:23:51,700
send data and this<font color="#E5E5E5"> is the situation</font><font color="#CCCCCC"> for</font>

452
00:23:49,750 --> 00:23:54,400
<font color="#E5E5E5">a fresh handshake like we have not</font>

453
00:23:51,700 --> 00:23:58,240
communicated before<font color="#CCCCCC"> I want to make a new</font>

454
00:23:54,400 --> 00:23:59,890
connection<font color="#E5E5E5"> to a server and it goes one</font>

455
00:23:58,240 --> 00:24:03,429
time back and<font color="#E5E5E5"> forth and then I can send</font>

456
00:23:59,890 --> 00:24:06,250
<font color="#E5E5E5">data which and in the earlier version I</font>

457
00:24:03,429 --> 00:24:11,980
had two times back<font color="#CCCCCC"> and</font><font color="#E5E5E5"> forth so I</font><font color="#CCCCCC"> can</font>

458
00:24:06,250 --> 00:24:13,990
<font color="#CCCCCC">think</font><font color="#E5E5E5"> data</font><font color="#CCCCCC"> are much faster so yeah we</font>

459
00:24:11,980 --> 00:24:16,470
remove one<font color="#E5E5E5"> round trip from a fresh</font>

460
00:24:13,990 --> 00:24:16,470
handshake

461
00:24:16,920 --> 00:24:22,000
there's<font color="#E5E5E5"> also security improvements to</font>

462
00:24:19,600 --> 00:24:26,129
this handshake<font color="#CCCCCC"> so this is nice we have</font>

463
00:24:22,000 --> 00:24:29,110
more security<font color="#E5E5E5"> and more</font><font color="#CCCCCC"> speed and</font>

464
00:24:26,130 --> 00:24:30,910
<font color="#E5E5E5">particularly we have better security on</font>

465
00:24:29,110 --> 00:24:34,209
<font color="#E5E5E5">so-called session resumption which means</font>

466
00:24:30,910 --> 00:24:37,870
<font color="#E5E5E5">where we're reconnecting using a key</font>

467
00:24:34,210 --> 00:24:40,390
from a previous section<font color="#CCCCCC"> and we also</font>

468
00:24:37,870 --> 00:24:43,000
protect<font color="#E5E5E5"> more data which may avoid some</font>

469
00:24:40,390 --> 00:24:45,700
attacks where an attacker may fill with

470
00:24:43,000 --> 00:24:46,980
the handshake these were more less

471
00:24:45,700 --> 00:24:53,460
theoretical<font color="#E5E5E5"> texts</font>

472
00:24:46,980 --> 00:24:55,919
these are<font color="#CCCCCC"> also prevented in TLS 1.3 yeah</font>

473
00:24:53,460 --> 00:24:58,110
Sotiris has a more secure<font color="#CCCCCC"> and</font><font color="#E5E5E5"> a faster</font>

474
00:24:55,919 --> 00:25:00,030
handshake and if you want to have more

475
00:24:58,110 --> 00:25:02,040
details about this handshake<font color="#CCCCCC"> there</font><font color="#E5E5E5"> was a</font>

476
00:25:00,030 --> 00:25:04,320
talk<font color="#E5E5E5"> two years ago at this</font><font color="#CCCCCC"> Congress</font>

477
00:25:02,040 --> 00:25:07,020
which goes into this in<font color="#E5E5E5"> much more detail</font>

478
00:25:04,320 --> 00:25:08,879
so if this particularly<font color="#E5E5E5"> interests you</font>

479
00:25:07,020 --> 00:25:10,379
you<font color="#E5E5E5"> should watch that talk I've put a</font>

480
00:25:08,880 --> 00:25:15,900
link<font color="#E5E5E5"> here and I will put the slides</font>

481
00:25:10,380 --> 00:25:20,130
online so there's also something called

482
00:25:15,900 --> 00:25:23,160
<font color="#E5E5E5">the zero</font><font color="#CCCCCC"> role</font><font color="#E5E5E5"> to a</font><font color="#CCCCCC"> pan shake</font><font color="#E5E5E5"> and this is</font>

483
00:25:20,130 --> 00:25:26,730
even<font color="#CCCCCC"> faster we can send data right away</font>

484
00:25:23,160 --> 00:25:29,730
<font color="#CCCCCC">now how can we do that</font><font color="#E5E5E5"> this is kind of</font>

485
00:25:26,730 --> 00:25:31,620
<font color="#E5E5E5">cheating</font><font color="#CCCCCC"> because what we need</font><font color="#E5E5E5"> here is we</font>

486
00:25:29,730 --> 00:25:33,240
need to<font color="#E5E5E5"> have a previous connection and</font>

487
00:25:31,620 --> 00:25:35,549
then we have a key from<font color="#CCCCCC"> a previous</font>

488
00:25:33,240 --> 00:25:37,799
connection can create a new key from

489
00:25:35,549 --> 00:25:41,970
<font color="#E5E5E5">that and use that to send data right</font>

490
00:25:37,799 --> 00:25:44,549
away<font color="#E5E5E5"> so yeah we need a</font><font color="#CCCCCC"> so-called</font>

491
00:25:41,970 --> 00:25:46,890
pre-shared key<font color="#E5E5E5"> which we have from</font>

492
00:25:44,549 --> 00:25:51,090
previous connection and then we can send

493
00:25:46,890 --> 00:25:54,950
<font color="#E5E5E5">data without any round trips so even</font>

494
00:25:51,090 --> 00:25:54,949
<font color="#E5E5E5">more speeds that's nice right</font>

495
00:25:55,490 --> 00:26:04,200
<font color="#E5E5E5">but this</font><font color="#CCCCCC"> 0rt mode does not come for free</font>

496
00:26:01,700 --> 00:26:06,780
there<font color="#E5E5E5"> is a problem here with</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> called</font>

497
00:26:04,200 --> 00:26:10,260
<font color="#E5E5E5">replay attacks which means an attacker</font>

498
00:26:06,780 --> 00:26:13,530
could record the data that we're sending

499
00:26:10,260 --> 00:26:15,960
and then send it<font color="#CCCCCC"> again and the server</font>

500
00:26:13,530 --> 00:26:18,360
may think okay<font color="#CCCCCC"> now</font><font color="#E5E5E5"> this request came</font>

501
00:26:15,960 --> 00:26:23,730
twice<font color="#CCCCCC"> so I'm doing</font><font color="#E5E5E5"> twice what this</font>

502
00:26:18,360 --> 00:26:25,590
request was supposed<font color="#E5E5E5"> to do so there are</font>

503
00:26:23,730 --> 00:26:27,720
some caveats with<font color="#E5E5E5"> zero entity</font>

504
00:26:25,590 --> 00:26:29,909
the standard says yeah you should only

505
00:26:27,720 --> 00:26:31,380
use if it's safe it says something like

506
00:26:29,910 --> 00:26:36,930
<font color="#CCCCCC">you should</font><font color="#E5E5E5"> only use it if you have</font><font color="#CCCCCC"> a</font>

507
00:26:31,380 --> 00:26:40,140
profile<font color="#CCCCCC"> how to use it safely</font><font color="#E5E5E5"> now what</font>

508
00:26:36,930 --> 00:26:43,010
does that mean<font color="#CCCCCC"> there</font><font color="#E5E5E5"> let's look at HTTPS</font>

509
00:26:40,140 --> 00:26:47,250
which<font color="#E5E5E5"> is the protocol we're using</font>

510
00:26:43,010 --> 00:26:49,260
<font color="#E5E5E5">usually if you</font><font color="#CCCCCC"> look into the HTTP</font>

511
00:26:47,250 --> 00:26:52,800
standard it says something<font color="#CCCCCC"> that a get</font>

512
00:26:49,260 --> 00:26:54,780
request has<font color="#CCCCCC"> to be even potent and a</font><font color="#E5E5E5"> post</font>

513
00:26:52,800 --> 00:26:57,180
request<font color="#E5E5E5"> does not have to be it important</font>

514
00:26:54,780 --> 00:26:59,790
<font color="#E5E5E5">now what does that mean it more or less</font>

515
00:26:57,180 --> 00:27:01,320
<font color="#E5E5E5">means if you send a request twice it</font>

516
00:26:59,790 --> 00:27:06,990
shouldn't do anything<font color="#E5E5E5"> different from</font>

517
00:27:01,320 --> 00:27:09,360
just sending it once so in theory we

518
00:27:06,990 --> 00:27:12,660
<font color="#CCCCCC">could say yeah</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> get requests are either</font>

519
00:27:09,360 --> 00:27:18,360
potent that means they<font color="#E5E5E5"> are safe for zero</font>

520
00:27:12,660 --> 00:27:20,690
round-trip connections the question is

521
00:27:18,360 --> 00:27:23,350
do<font color="#CCCCCC"> bad develop</font>

522
00:27:20,690 --> 00:27:23,350
sorry

523
00:27:23,620 --> 00:27:28,489
[Music]

524
00:27:28,580 --> 00:27:32,689
you can do a little<font color="#E5E5E5"> experiment if you</font>

525
00:27:30,860 --> 00:27:34,340
meet<font color="#CCCCCC"> someone who's</font><font color="#E5E5E5"> a web developer ask</font>

526
00:27:32,690 --> 00:27:36,470
them if they know what<font color="#CCCCCC"> it important</font>

527
00:27:34,340 --> 00:27:42,168
means and when they can<font color="#E5E5E5"> use it important</font>

528
00:27:36,470 --> 00:27:44,240
requests and when they cannot yeah<font color="#CCCCCC"> so in</font>

529
00:27:42,169 --> 00:27:46,010
an ideal<font color="#E5E5E5"> situation where web developers</font>

530
00:27:44,240 --> 00:27:52,640
do know that we can<font color="#E5E5E5"> use</font><font color="#CCCCCC"> the arathi</font>

531
00:27:46,010 --> 00:27:55,279
<font color="#E5E5E5">safely with</font><font color="#CCCCCC"> TLS 1.30 at Atia</font><font color="#E5E5E5"> also does</font>

532
00:27:52,640 --> 00:27:57,830
not have a<font color="#E5E5E5"> strong forward secrecy as a</font>

533
00:27:55,279 --> 00:28:00,799
normal handshake<font color="#CCCCCC"> so there's</font><font color="#E5E5E5"> kind of a</font>

534
00:27:57,830 --> 00:28:02,539
trade-off here<font color="#CCCCCC"> because this pre</font><font color="#E5E5E5"> shirt</font>

535
00:28:00,799 --> 00:28:04,639
<font color="#E5E5E5">key is</font><font color="#CCCCCC"> encrypted</font><font color="#E5E5E5"> with a key on</font><font color="#CCCCCC"> the</font>

536
00:28:02,539 --> 00:28:06,830
server and<font color="#E5E5E5"> if that key gets compromised</font>

537
00:28:04,639 --> 00:28:12,500
<font color="#E5E5E5">that might compromise our connection</font>

538
00:28:06,830 --> 00:28:15,110
even if the key<font color="#CCCCCC"> is</font><font color="#E5E5E5"> only leaked data so</font>

539
00:28:12,500 --> 00:28:17,960
this looks a bit problematic<font color="#CCCCCC"> and many</font>

540
00:28:15,110 --> 00:28:19,939
speculate that the future<font color="#E5E5E5"> texts will see</font>

541
00:28:17,960 --> 00:28:22,279
until<font color="#E5E5E5"> at</font><font color="#CCCCCC"> one point 3 that at least some</font>

542
00:28:19,940 --> 00:28:24,500
of them will focus on<font color="#CCCCCC"> the 0 RTT mode</font>

543
00:28:22,279 --> 00:28:27,139
because it looks like<font color="#E5E5E5"> one</font><font color="#CCCCCC"> of the more</font>

544
00:28:24,500 --> 00:28:29,059
fragile parts of the protocol<font color="#E5E5E5"> but it</font>

545
00:28:27,139 --> 00:28:34,850
gives us more speed so<font color="#E5E5E5"> people wanted</font><font color="#CCCCCC"> to</font>

546
00:28:29,059 --> 00:28:37,220
<font color="#E5E5E5">have maybe the good news is this</font><font color="#CCCCCC"> is</font>

547
00:28:34,850 --> 00:28:39,110
entirely<font color="#E5E5E5"> optional</font><font color="#CCCCCC"> we don't have to use</font>

548
00:28:37,220 --> 00:28:42,679
<font color="#CCCCCC">it and</font><font color="#E5E5E5"> if we think this looks too</font>

549
00:28:39,110 --> 00:28:44,149
problematic<font color="#E5E5E5"> we can switch it off so if</font>

550
00:28:42,679 --> 00:28:46,940
it turns<font color="#E5E5E5"> out that there are too many</font>

551
00:28:44,149 --> 00:28:49,039
attacks involving<font color="#CCCCCC"> zero RTT mode</font><font color="#E5E5E5"> we could</font>

552
00:28:46,940 --> 00:28:51,260
disable it again and use it without it

553
00:28:49,039 --> 00:28:57,639
it will still<font color="#CCCCCC"> be</font><font color="#E5E5E5"> faster but not as fast</font>

554
00:28:51,260 --> 00:29:00,799
as<font color="#E5E5E5"> it could be with this yeah</font><font color="#CCCCCC"> ok</font>

555
00:28:57,639 --> 00:29:04,100
deployment<font color="#CCCCCC"> now if we have this nice new</font>

556
00:29:00,799 --> 00:29:06,440
protocol we not only have<font color="#CCCCCC"> to make sure</font>

557
00:29:04,100 --> 00:29:10,668
it's secure and<font color="#E5E5E5"> fast and everything</font><font color="#CCCCCC"> but</font>

558
00:29:06,440 --> 00:29:12,309
we also have to<font color="#E5E5E5"> deploy it and we have to</font>

559
00:29:10,669 --> 00:29:16,789
<font color="#E5E5E5">deploy it on the</font><font color="#CCCCCC"> Internet</font>

560
00:29:12,309 --> 00:29:18,168
<font color="#E5E5E5">and on the real internet like the one we</font>

561
00:29:16,789 --> 00:29:20,179
have out<font color="#CCCCCC"> there not some theoretical</font>

562
00:29:18,169 --> 00:29:21,440
<font color="#CCCCCC">internet where there are no</font><font color="#E5E5E5"> bugs and</font>

563
00:29:20,179 --> 00:29:23,630
everyone knows<font color="#E5E5E5"> how to implement</font>

564
00:29:21,440 --> 00:29:27,230
protocols but the real<font color="#E5E5E5"> internet with</font>

565
00:29:23,630 --> 00:29:30,909
lots of IOT devices and enterprise

566
00:29:27,230 --> 00:29:30,909
firewalls and all<font color="#E5E5E5"> these kinds of things</font>

567
00:29:30,970 --> 00:29:37,850
and now I want<font color="#E5E5E5"> to get back to this</font>

568
00:29:33,620 --> 00:29:42,080
<font color="#E5E5E5">version number this may sound like a</font>

569
00:29:37,850 --> 00:29:43,789
trivial<font color="#E5E5E5"> thing but TLS 1.3 here</font>

570
00:29:42,080 --> 00:29:50,299
the new<font color="#E5E5E5"> version number</font><font color="#CCCCCC"> four the protocol</font>

571
00:29:43,789 --> 00:29:53,720
<font color="#E5E5E5">version here's a by a shark</font><font color="#CCCCCC"> dump from a</font>

572
00:29:50,299 --> 00:29:55,789
TLS 1.3 handshake<font color="#CCCCCC"> and if you're trying</font>

573
00:29:53,720 --> 00:29:59,809
to<font color="#E5E5E5"> look for the version number you will</font>

574
00:29:55,789 --> 00:30:02,210
find<font color="#E5E5E5"> multiple version numbers and in</font>

575
00:29:59,809 --> 00:30:08,090
case you cannot see it I<font color="#CCCCCC"> have made it a</font>

576
00:30:02,210 --> 00:30:14,120
bit larger<font color="#CCCCCC"> so at the top you see version</font>

577
00:30:08,090 --> 00:30:16,939
TLS 1.0<font color="#E5E5E5"> encoded</font><font color="#CCCCCC"> s l 301 okay that</font><font color="#E5E5E5"> that</font>

578
00:30:14,120 --> 00:30:22,939
looks strange then a few lines<font color="#E5E5E5"> later you</font>

579
00:30:16,940 --> 00:30:25,250
have<font color="#E5E5E5"> a version here that's</font><font color="#CCCCCC"> 1.20</font><font color="#E5E5E5"> 303 but</font>

580
00:30:22,940 --> 00:30:28,190
we thought this was<font color="#CCCCCC"> Cirrus 1.3</font><font color="#E5E5E5"> I mean it</font>

581
00:30:25,250 --> 00:30:31,159
says here at the top<font color="#E5E5E5"> but somehow there</font>

582
00:30:28,190 --> 00:30:33,610
<font color="#E5E5E5">are these other versions and then if you</font>

583
00:30:31,159 --> 00:30:36,230
scroll further<font color="#CCCCCC"> down you will see</font>

584
00:30:33,610 --> 00:30:39,529
<font color="#E5E5E5">extension supported versions and then</font>

585
00:30:36,230 --> 00:30:43,909
here it lists TLS 1.3 which is encoded

586
00:30:39,529 --> 00:30:47,450
<font color="#CCCCCC">as 0 3 0 4 so what's going</font><font color="#E5E5E5"> on here this</font>

587
00:30:43,909 --> 00:30:49,610
this<font color="#E5E5E5"> looks strange so the first thing to</font>

588
00:30:47,450 --> 00:30:51,590
<font color="#CCCCCC">realize is why do we encode</font><font color="#E5E5E5"> these</font>

589
00:30:49,610 --> 00:30:56,510
versions<font color="#E5E5E5"> in such a strange way why are</font>

590
00:30:51,590 --> 00:31:01,250
we not<font color="#E5E5E5"> using</font><font color="#CCCCCC"> a 100</font><font color="#E5E5E5"> 40 s 1.0 if TLS 1.0</font>

591
00:30:56,510 --> 00:31:05,299
came after SSL version 3 which kind of

592
00:31:01,250 --> 00:31:08,240
makes it version<font color="#E5E5E5"> 3.1 and that's how we</font>

593
00:31:05,299 --> 00:31:12,918
encode it like tears 1.0<font color="#CCCCCC"> is really just</font>

594
00:31:08,240 --> 00:31:17,559
SSL version 3.1 TLS 1.1 is SSL version

595
00:31:12,919 --> 00:31:23,480
3.2 and so on and for TLS 1.3 it's

596
00:31:17,559 --> 00:31:26,149
complicated<font color="#E5E5E5"> so the very first version</font>

597
00:31:23,480 --> 00:31:28,309
you saw earlier<font color="#CCCCCC"> in this vial öktem was</font>

598
00:31:26,149 --> 00:31:30,529
the<font color="#E5E5E5"> so-called record layer and this is</font>

599
00:31:28,309 --> 00:31:32,149
kind of a protocol inside the TLS

600
00:31:30,529 --> 00:31:34,730
protocol which<font color="#CCCCCC"> has its own version</font>

601
00:31:32,149 --> 00:31:37,370
number which is<font color="#E5E5E5"> totally meaningless but</font>

602
00:31:34,730 --> 00:31:39,169
it's just<font color="#E5E5E5"> there and it turned out for</font>

603
00:31:37,370 --> 00:31:42,918
compatibility reasons<font color="#E5E5E5"> it's best to just</font>

604
00:31:39,169 --> 00:31:45,559
<font color="#E5E5E5">let this on the version</font><font color="#CCCCCC"> of TLS 1.0 and</font>

605
00:31:42,919 --> 00:31:47,570
then we have the least problems and this

606
00:31:45,559 --> 00:31:52,389
is kind of<font color="#E5E5E5"> this record layer protocol is</font>

607
00:31:47,570 --> 00:31:52,389
kind<font color="#CCCCCC"> of the encoding of the</font><font color="#E5E5E5"> TLS packages</font>

608
00:31:53,460 --> 00:31:58,900
now<font color="#E5E5E5"> if we have a new TLS version we</font>

609
00:31:57,279 --> 00:32:01,120
cannot just<font color="#E5E5E5"> tell everyone</font>

610
00:31:58,900 --> 00:32:02,890
tomorrow we<font color="#CCCCCC"> will use TLS 1.3 and</font>

611
00:32:01,120 --> 00:32:03,850
<font color="#E5E5E5">everyone has</font><font color="#CCCCCC"> to update because we</font><font color="#E5E5E5"> know</font>

612
00:32:02,890 --> 00:32:06,880
<font color="#E5E5E5">many people won't</font>

613
00:32:03,850 --> 00:32:08,889
and so we somehow need<font color="#CCCCCC"> to be able</font><font color="#E5E5E5"> to</font>

614
00:32:06,880 --> 00:32:11,470
<font color="#E5E5E5">deploy this new version</font><font color="#CCCCCC"> and still be</font>

615
00:32:08,890 --> 00:32:18,789
compatible<font color="#CCCCCC"> with devices</font><font color="#E5E5E5"> then only speak</font>

616
00:32:11,470 --> 00:32:22,240
the<font color="#E5E5E5"> old version so so let's assume we</font>

617
00:32:18,789 --> 00:32:24,640
<font color="#CCCCCC">have a client that supports TLS 1.2</font><font color="#E5E5E5"> and</font>

618
00:32:22,240 --> 00:32:28,029
we have a server that<font color="#E5E5E5"> only supports TLS</font>

619
00:32:24,640 --> 00:32:30,190
1.0 how does<font color="#E5E5E5"> that work</font>

620
00:32:28,029 --> 00:32:34,809
there is an extremely<font color="#E5E5E5"> complicated</font>

621
00:32:30,190 --> 00:32:36,700
mechanism here so the client connects

622
00:32:34,809 --> 00:32:42,070
<font color="#CCCCCC">and says yeah</font><font color="#E5E5E5"> hello</font>

623
00:32:36,700 --> 00:32:45,370
I speak TLS 1.2 services<font color="#CCCCCC"> ok I don't know</font>

624
00:32:42,070 --> 00:32:48,760
TLS 1.2<font color="#CCCCCC"> but</font><font color="#E5E5E5"> what's the highest version</font><font color="#CCCCCC"> I</font>

625
00:32:45,370 --> 00:32:52,418
support<font color="#E5E5E5"> its TLS 1.0 so he sent that back</font>

626
00:32:48,760 --> 00:32:54,970
<font color="#CCCCCC">and then they can speak here as 1.0 and</font>

627
00:32:52,419 --> 00:33:01,750
in case the client<font color="#E5E5E5"> still supports that</font>

628
00:32:54,970 --> 00:33:05,919
and we have a connection this<font color="#E5E5E5"> is very</font>

629
00:33:01,750 --> 00:33:07,960
simple<font color="#CCCCCC"> I would think</font><font color="#E5E5E5"> so so to</font><font color="#CCCCCC"> illustrate</font>

630
00:33:05,919 --> 00:33:10,720
how you<font color="#E5E5E5"> would program something like</font>

631
00:33:07,960 --> 00:33:12,580
that<font color="#E5E5E5"> you would say yeah if client</font><font color="#CCCCCC"> max</font>

632
00:33:10,720 --> 00:33:15,070
version<font color="#E5E5E5"> is smaller than server max</font>

633
00:33:12,580 --> 00:33:17,470
<font color="#CCCCCC">version then we use the client</font><font color="#E5E5E5"> max</font>

634
00:33:15,070 --> 00:33:22,928
version<font color="#E5E5E5"> otherwise we use the server max</font>

635
00:33:17,470 --> 00:33:25,059
version<font color="#E5E5E5"> so you would think</font><font color="#CCCCCC"> that there's</font>

636
00:33:22,929 --> 00:33:27,130
no way anyone could<font color="#CCCCCC"> possibly not get</font>

637
00:33:25,059 --> 00:33:32,230
that right right<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> it's it's</font><font color="#CCCCCC"> very</font>

638
00:33:27,130 --> 00:33:34,480
simple but I was saying<font color="#CCCCCC"> earlier we were</font>

639
00:33:32,230 --> 00:33:37,450
talking<font color="#CCCCCC"> about the real internet</font><font color="#E5E5E5"> so and</font>

640
00:33:34,480 --> 00:33:40,210
on the real<font color="#E5E5E5"> internet we have</font><font color="#CCCCCC"> Enterprise</font>

641
00:33:37,450 --> 00:33:42,159
<font color="#CCCCCC">Products in case you</font><font color="#E5E5E5"> don't know that an</font>

642
00:33:40,210 --> 00:33:48,809
enterprise product<font color="#E5E5E5"> something that's very</font>

643
00:33:42,159 --> 00:33:48,809
<font color="#CCCCCC">expensive and it's buggy so</font>

644
00:33:52,670 --> 00:33:57,590
so yeah we will<font color="#CCCCCC"> have webpages that run</font>

645
00:33:55,610 --> 00:34:00,979
<font color="#E5E5E5">with firewalls from Cisco or we will</font>

646
00:33:57,590 --> 00:34:04,189
<font color="#E5E5E5">have people using IBM Domino</font><font color="#CCCCCC"> web server</font>

647
00:34:00,980 --> 00:34:06,440
and<font color="#E5E5E5"> all these kinds of things and this</font>

648
00:34:04,190 --> 00:34:11,629
is<font color="#CCCCCC"> the TLS version negotiation in</font><font color="#E5E5E5"> the</font>

649
00:34:06,440 --> 00:34:13,940
<font color="#E5E5E5">Enterprise Edition so a client says yeah</font>

650
00:34:11,629 --> 00:34:16,100
I want to connect with<font color="#E5E5E5"> TLS 1.2 and</font><font color="#CCCCCC"> the</font>

651
00:34:13,940 --> 00:34:18,350
server says<font color="#CCCCCC"> oh i don't support this this</font>

652
00:34:16,100 --> 00:34:20,330
<font color="#E5E5E5">very new version it's from 2008</font><font color="#CCCCCC"> I mean</font>

653
00:34:18,350 --> 00:34:28,850
that's<font color="#E5E5E5"> 10 years in enterprise yes it's</font>

654
00:34:20,330 --> 00:34:31,009
<font color="#E5E5E5">very long</font><font color="#CCCCCC"> so yeah</font><font color="#E5E5E5"> so the server just</font>

655
00:34:28,850 --> 00:34:32,629
<font color="#E5E5E5">sends an error</font><font color="#CCCCCC"> if the client</font><font color="#E5E5E5"> connects</font>

656
00:34:31,010 --> 00:34:34,879
with the TLS version that it doesn't

657
00:34:32,629 --> 00:34:38,000
know it doesn't<font color="#E5E5E5"> implement this version</font>

658
00:34:34,879 --> 00:34:42,560
negotiation correctly and this is called

659
00:34:38,000 --> 00:34:45,440
version intolerance<font color="#E5E5E5"> and this has</font>

660
00:34:42,560 --> 00:34:47,960
happened<font color="#E5E5E5"> every</font><font color="#CCCCCC"> time there was a new TLS</font>

661
00:34:45,440 --> 00:34:49,970
version<font color="#E5E5E5"> every time we had devices that</font>

662
00:34:47,960 --> 00:34:52,340
had<font color="#E5E5E5"> this</font><font color="#CCCCCC"> problem if you try to connect</font>

663
00:34:49,969 --> 00:34:54,080
<font color="#E5E5E5">with a new TLS version they would just</font>

664
00:34:52,340 --> 00:34:56,060
fail they would send an error<font color="#E5E5E5"> or they</font>

665
00:34:54,080 --> 00:35:02,270
would<font color="#E5E5E5"> just cut the connection</font><font color="#CCCCCC"> or have a</font>

666
00:34:56,060 --> 00:35:04,279
timeout or<font color="#CCCCCC"> crash so browsers needed</font><font color="#E5E5E5"> to</font>

667
00:35:02,270 --> 00:35:06,560
handle<font color="#E5E5E5"> this somehow</font><font color="#CCCCCC"> because the problem</font>

668
00:35:04,280 --> 00:35:08,810
here is when a prowler introduces a new

669
00:35:06,560 --> 00:35:11,060
TLS version and everything breaks<font color="#E5E5E5"> then</font>

670
00:35:08,810 --> 00:35:12,500
users will blame the<font color="#CCCCCC"> browser</font><font color="#E5E5E5"> and then</font>

671
00:35:11,060 --> 00:35:14,270
you will say yeah I will no<font color="#CCCCCC"> longer use</font>

672
00:35:12,500 --> 00:35:16,720
this browser<font color="#CCCCCC"> I'll now switch back to</font>

673
00:35:14,270 --> 00:35:20,740
Internet<font color="#E5E5E5"> Explorer</font><font color="#CCCCCC"> or something like</font><font color="#E5E5E5"> that</font>

674
00:35:16,720 --> 00:35:24,980
so browsers need to<font color="#CCCCCC"> trial</font><font color="#E5E5E5"> this somehow</font>

675
00:35:20,740 --> 00:35:26,930
<font color="#CCCCCC">so what the process did is okay we try</font>

676
00:35:24,980 --> 00:35:30,410
it with the latest TLS version we

677
00:35:26,930 --> 00:35:33,680
support<font color="#E5E5E5"> and if we get an error</font><font color="#CCCCCC"> we try it</font>

678
00:35:30,410 --> 00:35:35,750
again with one version lower and again

679
00:35:33,680 --> 00:35:38,779
<font color="#E5E5E5">one were low and eventually we may</font>

680
00:35:35,750 --> 00:35:41,750
succeed<font color="#E5E5E5"> to connect so here we have a</font>

681
00:35:38,780 --> 00:35:44,600
browser<font color="#E5E5E5"> and we have an enterprise server</font>

682
00:35:41,750 --> 00:35:50,000
that supports TLS 1.0 and we will

683
00:35:44,600 --> 00:35:52,100
eventually<font color="#E5E5E5"> get a connection</font><font color="#CCCCCC"> now do you</font>

684
00:35:50,000 --> 00:35:54,680
<font color="#E5E5E5">remember poodle I mentioned earlier</font>

685
00:35:52,100 --> 00:35:59,290
there was this padding Oracle in SSL

686
00:35:54,680 --> 00:36:01,200
version<font color="#E5E5E5"> 3 which was discovered in 2014</font>

687
00:35:59,290 --> 00:36:04,259
<font color="#E5E5E5">so</font>

688
00:36:01,200 --> 00:36:09,629
you may wonder<font color="#CCCCCC"> ss Everton</font><font color="#E5E5E5"> 3 which</font><font color="#CCCCCC"> is</font>

689
00:36:04,260 --> 00:36:13,980
from 1996<font color="#CCCCCC"> so that's really</font><font color="#E5E5E5"> old</font><font color="#CCCCCC"> who uses</font>

690
00:36:09,630 --> 00:36:18,450
<font color="#E5E5E5">that in 2014 it was deprecated for 16</font>

691
00:36:13,980 --> 00:36:23,070
years I mean<font color="#E5E5E5"> who uses that</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> Windows</font>

692
00:36:18,450 --> 00:36:26,850
<font color="#CCCCCC">Phone 7 used it but on these</font><font color="#E5E5E5"> Nokia</font>

693
00:36:23,070 --> 00:36:30,180
phones they also never<font color="#E5E5E5"> got an update</font><font color="#CCCCCC"> but</font>

694
00:36:26,850 --> 00:36:34,680
<font color="#CCCCCC">okay but like normal browsers and</font>

695
00:36:30,180 --> 00:36:36,899
servers<font color="#E5E5E5"> at least use TLS 1.0</font><font color="#CCCCCC"> I mean they</font>

696
00:36:34,680 --> 00:36:42,060
maybe didn't use<font color="#E5E5E5"> of Kiev 1.2 but they</font>

697
00:36:36,900 --> 00:36:45,690
used here s 1.0<font color="#E5E5E5"> but we have these</font>

698
00:36:42,060 --> 00:36:48,600
browsers<font color="#E5E5E5"> that are trying to reconnect if</font>

699
00:36:45,690 --> 00:36:51,840
there's an error and so what an attacker

700
00:36:48,600 --> 00:36:54,930
could do is that the attacker wants<font color="#E5E5E5"> to</font>

701
00:36:51,840 --> 00:36:57,090
exploit SSL version 3 so he just blocks

702
00:36:54,930 --> 00:37:00,930
our connections<font color="#CCCCCC"> with a newer TLS version</font>

703
00:36:57,090 --> 00:37:04,620
<font color="#E5E5E5">and therefore forces the client to go</font>

704
00:37:00,930 --> 00:37:06,629
into<font color="#E5E5E5"> SSA</font><font color="#CCCCCC"> Worthen</font><font color="#E5E5E5"> free and then he can</font>

705
00:37:04,620 --> 00:37:15,000
exploit this attack that<font color="#E5E5E5"> only works on</font>

706
00:37:06,630 --> 00:37:15,960
<font color="#E5E5E5">SSL version 3 so so browser sir okay</font>

707
00:37:15,000 --> 00:37:18,540
these<font color="#CCCCCC"> downgrades</font>

708
00:37:15,960 --> 00:37:21,240
according security issues what do we do

709
00:37:18,540 --> 00:37:24,259
now we could add another<font color="#E5E5E5"> workaround</font><font color="#CCCCCC"> so</font>

710
00:37:21,240 --> 00:37:28,259
<font color="#E5E5E5">there was a standard called s CSV which</font>

711
00:37:24,260 --> 00:37:31,470
basically gives<font color="#E5E5E5"> the server a way to tell</font>

712
00:37:28,260 --> 00:37:35,220
the<font color="#CCCCCC"> client that it's not broken</font><font color="#E5E5E5"> like it</font>

713
00:37:31,470 --> 00:37:37,319
says hey I have<font color="#CCCCCC"> this this special</font>

714
00:37:35,220 --> 00:37:39,600
extension<font color="#E5E5E5"> it's nothing it's a kind of</font>

715
00:37:37,320 --> 00:37:41,160
special cipher suite which tells the

716
00:37:39,600 --> 00:37:44,580
client hey if you did these strange

717
00:37:41,160 --> 00:37:49,259
<font color="#CCCCCC">downgrades here</font><font color="#E5E5E5"> please don't do that</font><font color="#CCCCCC"> I</font>

718
00:37:44,580 --> 00:37:51,090
am a well behaving server<font color="#E5E5E5"> so yeah we had</font>

719
00:37:49,260 --> 00:37:52,650
a workaround for<font color="#E5E5E5"> broken servers and then</font>

720
00:37:51,090 --> 00:37:54,300
we<font color="#E5E5E5"> needed another workaround for the</font>

721
00:37:52,650 --> 00:37:57,240
security issues caused by<font color="#CCCCCC"> those</font>

722
00:37:54,300 --> 00:37:59,250
workarounds but at some points even

723
00:37:57,240 --> 00:38:01,799
<font color="#E5E5E5">enterprise</font><font color="#CCCCCC"> servers mostly had</font><font color="#E5E5E5"> fixed</font>

724
00:37:59,250 --> 00:38:04,140
these version<font color="#E5E5E5"> intolerance issues and</font>

725
00:38:01,800 --> 00:38:08,480
browser stopped doing these downgrades

726
00:38:04,140 --> 00:38:11,879
so attacks like poodle<font color="#E5E5E5"> no longer</font><font color="#CCCCCC"> worked</font>

727
00:38:08,480 --> 00:38:13,550
oh how I<font color="#CCCCCC"> should just</font><font color="#E5E5E5"> said they fixed it</font>

728
00:38:11,880 --> 00:38:16,220
<font color="#E5E5E5">no of</font><font color="#CCCCCC"> course they have not</font>

729
00:38:13,550 --> 00:38:19,430
fixed it I<font color="#E5E5E5"> mean they fixed it for</font>

730
00:38:16,220 --> 00:38:21,529
tearless 1.2 but of course<font color="#CCCCCC"> they did not</font>

731
00:38:19,430 --> 00:38:27,140
<font color="#E5E5E5">fix it for future TLS versions because</font>

732
00:38:21,530 --> 00:38:29,000
<font color="#E5E5E5">they were not around yet so with TLS 1.3</font>

733
00:38:27,140 --> 00:38:30,799
we would get version<font color="#E5E5E5"> intolerance again</font>

734
00:38:29,000 --> 00:38:33,170
and breaking<font color="#CCCCCC"> Souls and would</font><font color="#E5E5E5"> have to</font>

735
00:38:30,800 --> 00:38:35,720
introduce<font color="#CCCCCC"> downgrades</font><font color="#E5E5E5"> again and all the</font>

736
00:38:33,170 --> 00:38:36,380
nice security would would<font color="#CCCCCC"> not be very</font>

737
00:38:35,720 --> 00:38:41,120
<font color="#CCCCCC">helpful</font>

738
00:38:36,380 --> 00:38:45,500
so the TLS working group realized that

739
00:38:41,120 --> 00:38:47,810
and redesigned the<font color="#E5E5E5"> handshake and it was</font>

740
00:38:45,500 --> 00:38:50,360
redesigned in<font color="#E5E5E5"> a way that the old version</font>

741
00:38:47,810 --> 00:38:53,420
<font color="#CCCCCC">feels still said that we're connecting</font>

742
00:38:50,360 --> 00:38:56,590
with<font color="#E5E5E5"> TLS 1.2 and then we introduced an</font>

743
00:38:53,420 --> 00:38:59,630
extension supported versions which

744
00:38:56,590 --> 00:39:01,730
signals<font color="#E5E5E5"> the support for which for</font><font color="#CCCCCC"> other</font>

745
00:38:59,630 --> 00:39:04,520
<font color="#E5E5E5">TLS versions we</font><font color="#CCCCCC"> can speak and which</font>

746
00:39:01,730 --> 00:39:10,010
<font color="#CCCCCC">signals support for TLS 1.3</font><font color="#E5E5E5"> and possibly</font>

747
00:39:04,520 --> 00:39:11,450
for future<font color="#E5E5E5"> versions now at this point</font>

748
00:39:10,010 --> 00:39:13,370
<font color="#E5E5E5">you may wonder if</font><font color="#CCCCCC"> we'll he'll</font><font color="#E5E5E5"> have</font>

749
00:39:11,450 --> 00:39:16,850
version<font color="#CCCCCC"> intolerance with this new</font>

750
00:39:13,370 --> 00:39:18,770
extension once TLS 1.4 gets out because

751
00:39:16,850 --> 00:39:20,420
the server may be<font color="#E5E5E5"> implemented that it</font>

752
00:39:18,770 --> 00:39:24,130
<font color="#E5E5E5">sends an error if it sees an unknown</font>

753
00:39:20,420 --> 00:39:29,960
version in this new<font color="#E5E5E5"> version extension</font>

754
00:39:24,130 --> 00:39:31,790
and david benjamin from<font color="#E5E5E5"> google thought</font>

755
00:39:29,960 --> 00:39:34,940
about this and<font color="#E5E5E5"> said yeah we have to do</font>

756
00:39:31,790 --> 00:39:37,490
something about that<font color="#E5E5E5"> we have to improve</font>

757
00:39:34,940 --> 00:39:40,010
<font color="#E5E5E5">the future compatibility for future TLS</font>

758
00:39:37,490 --> 00:39:44,660
versions and he invented<font color="#E5E5E5"> this</font><font color="#CCCCCC"> Griese</font>

759
00:39:40,010 --> 00:39:47,120
mechanism and the idea here is<font color="#CCCCCC"> okay a</font>

760
00:39:44,660 --> 00:39:49,339
server should just ignore unknown

761
00:39:47,120 --> 00:39:51,500
versions in this extension<font color="#E5E5E5"> he gets a</font>

762
00:39:49,340 --> 00:39:53,330
list of TLS versions and if there's<font color="#E5E5E5"> one</font>

763
00:39:51,500 --> 00:39:55,700
in there<font color="#E5E5E5"> that</font><font color="#CCCCCC"> he doesn't know about he</font>

764
00:39:53,330 --> 00:39:58,720
should just<font color="#CCCCCC"> ignore it</font><font color="#E5E5E5"> and then connect</font>

765
00:39:55,700 --> 00:40:02,330
<font color="#E5E5E5">with one of the versions</font><font color="#CCCCCC"> he knows about</font>

766
00:39:58,720 --> 00:40:06,919
<font color="#E5E5E5">so we could kind</font><font color="#CCCCCC"> of try to train service</font>

767
00:40:02,330 --> 00:40:09,140
to actually do that<font color="#E5E5E5"> and the idea here</font><font color="#CCCCCC"> is</font>

768
00:40:06,920 --> 00:40:11,900
<font color="#E5E5E5">we're just sending random bogus TLS</font>

769
00:40:09,140 --> 00:40:14,150
versions<font color="#E5E5E5"> that are reserved values</font><font color="#CCCCCC"> that</font>

770
00:40:11,900 --> 00:40:16,400
will never be<font color="#E5E5E5"> used for</font><font color="#CCCCCC"> a real TL as well</font>

771
00:40:14,150 --> 00:40:18,800
<font color="#E5E5E5">but we can just randomly add them to</font>

772
00:40:16,400 --> 00:40:20,660
<font color="#E5E5E5">this extension in order to make</font><font color="#CCCCCC"> sure</font>

773
00:40:18,800 --> 00:40:22,870
<font color="#E5E5E5">that if a server implements is</font>

774
00:40:20,660 --> 00:40:25,640
incorrectly they will hopefully

775
00:40:22,870 --> 00:40:27,078
recognize<font color="#E5E5E5"> that early because</font>

776
00:40:25,640 --> 00:40:35,598
there will be connection failures with

777
00:40:27,079 --> 00:40:39,680
normal process yeah yeah<font color="#E5E5E5"> so so the hope</font>

778
00:40:35,599 --> 00:40:41,960
here is if<font color="#CCCCCC"> enterprise vendors will</font>

779
00:40:39,680 --> 00:40:43,940
implement<font color="#E5E5E5"> a</font><font color="#CCCCCC"> broken version negotiation</font>

780
00:40:41,960 --> 00:40:45,859
<font color="#E5E5E5">they will</font><font color="#CCCCCC"> hopefully notice</font><font color="#E5E5E5"> that before</font>

781
00:40:43,940 --> 00:40:47,599
they ship the product and then it can no

782
00:40:45,859 --> 00:40:52,819
longer<font color="#E5E5E5"> be updated because that's how the</font>

783
00:40:47,599 --> 00:40:55,039
<font color="#E5E5E5">internet works okay so we have this new</font>

784
00:40:52,819 --> 00:40:57,319
version negotiation mechanism we no

785
00:40:55,039 --> 00:40:59,329
longer need these downgrades<font color="#E5E5E5"> and we have</font>

786
00:40:57,319 --> 00:41:01,880
this<font color="#CCCCCC"> greased mechanism to make it</font>

787
00:40:59,329 --> 00:41:07,819
<font color="#CCCCCC">future-proof so now we can ship</font><font color="#E5E5E5"> TLS 1.3</font>

788
00:41:01,880 --> 00:41:17,420
right then there was this middle box

789
00:41:07,819 --> 00:41:20,900
<font color="#CCCCCC">issue so so in oh sorry that's that's</font>

790
00:41:17,420 --> 00:41:25,670
the wrong year it must<font color="#E5E5E5"> be 2016 sorry</font>

791
00:41:20,900 --> 00:41:28,279
in in<font color="#E5E5E5"> 2016 in summer TLS 1.3 was almost</font>

792
00:41:25,670 --> 00:41:33,109
<font color="#E5E5E5">finished but then it took almost another</font>

793
00:41:28,279 --> 00:41:35,329
year till it<font color="#E5E5E5"> guard sorry I mix up the</font>

794
00:41:33,109 --> 00:41:39,529
<font color="#CCCCCC">yes now</font><font color="#E5E5E5"> that's no it's it's correct</font>

795
00:41:35,329 --> 00:41:42,619
<font color="#CCCCCC">sorry in 2017 the 80s 1.3 was almost</font>

796
00:41:39,529 --> 00:41:46,579
<font color="#E5E5E5">finished but it took till 2018 till was</font>

797
00:41:42,619 --> 00:41:49,630
it was<font color="#E5E5E5"> actually finished</font><font color="#CCCCCC"> and the reason</font>

798
00:41:46,579 --> 00:41:52,759
<font color="#CCCCCC">for that was that when browser vendors</font>

799
00:41:49,630 --> 00:41:54,680
implemented a draft version<font color="#CCCCCC"> of TLS 1.3</font>

800
00:41:52,759 --> 00:41:59,390
<font color="#E5E5E5">they noticed a lot of connection</font>

801
00:41:54,680 --> 00:42:00,799
failures<font color="#E5E5E5"> and the reason</font><font color="#CCCCCC"> for this</font>

802
00:41:59,390 --> 00:42:02,839
<font color="#CCCCCC">connection failures turned out where</font>

803
00:42:00,799 --> 00:42:05,150
devices that we're trying to<font color="#CCCCCC"> analyze the</font>

804
00:42:02,839 --> 00:42:06,680
<font color="#CCCCCC">traffic and trying to be smart and</font><font color="#E5E5E5"> they</font>

805
00:42:05,150 --> 00:42:08,210
thought<font color="#E5E5E5"> okay this is something</font><font color="#CCCCCC"> that</font>

806
00:42:06,680 --> 00:42:10,970
<font color="#E5E5E5">looks very strange it doesn't look like</font>

807
00:42:08,210 --> 00:42:12,680
<font color="#CCCCCC">a TLS package how were used to</font><font color="#E5E5E5"> it so</font>

808
00:42:10,970 --> 00:42:16,700
<font color="#E5E5E5">let's just drop it</font>

809
00:42:12,680 --> 00:42:18,558
yeah so yeah<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a strange keyless</font>

810
00:42:16,700 --> 00:42:23,000
package<font color="#CCCCCC"> I don't know what to do with</font>

811
00:42:18,559 --> 00:42:24,740
this<font color="#E5E5E5"> I'll drop it</font><font color="#CCCCCC"> these were largely</font>

812
00:42:23,000 --> 00:42:25,849
passive<font color="#CCCCCC"> middle</font><font color="#E5E5E5"> boxes so we're not</font>

813
00:42:24,740 --> 00:42:27,529
talking<font color="#CCCCCC"> about</font><font color="#E5E5E5"> things like</font>

814
00:42:25,849 --> 00:42:29,329
<font color="#E5E5E5">man-in-the-middle devices that are</font>

815
00:42:27,529 --> 00:42:30,920
intercepting a TLS<font color="#E5E5E5"> connection but just</font>

816
00:42:29,329 --> 00:42:33,380
something<font color="#CCCCCC"> like a router</font><font color="#E5E5E5"> where you would</font>

817
00:42:30,920 --> 00:42:34,910
expect<font color="#E5E5E5"> it just forwards traffic but it</font>

818
00:42:33,380 --> 00:42:36,890
tries to be smart it tries to<font color="#E5E5E5"> do</font>

819
00:42:34,910 --> 00:42:38,749
<font color="#E5E5E5">advanced security enter</font>

820
00:42:36,890 --> 00:42:43,910
I don't know and they were dropping

821
00:42:38,749 --> 00:42:46,999
<font color="#E5E5E5">traffic that looked like years 1.3 and</font>

822
00:42:43,910 --> 00:42:50,058
then the browser<font color="#E5E5E5"> vendors proposed some</font>

823
00:42:46,999 --> 00:42:56,839
changes to a TLS 1.3 so it looks<font color="#CCCCCC"> more</font>

824
00:42:50,059 --> 00:42:59,150
like TLS 1.2<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> main</font><font color="#E5E5E5"> thing was they</font>

825
00:42:56,839 --> 00:43:01,369
introduced some bogus messages from TLS

826
00:42:59,150 --> 00:43:04,910
1.2 that<font color="#E5E5E5"> were</font><font color="#CCCCCC"> sourced just supposed to</font>

827
00:43:01,369 --> 00:43:06,739
<font color="#E5E5E5">be ignored</font><font color="#CCCCCC"> so one such message is the so</font>

828
00:43:04,910 --> 00:43:10,459
<font color="#CCCCCC">called</font><font color="#E5E5E5"> changed cipher spec message</font><font color="#CCCCCC"> until</font>

829
00:43:06,739 --> 00:43:13,390
<font color="#CCCCCC">s 1.2 which originally didn't exist in</font>

830
00:43:10,459 --> 00:43:17,109
1.3 due to this new handshake design and

831
00:43:13,390 --> 00:43:20,719
this message<font color="#E5E5E5"> in 1.2 it signals that</font>

832
00:43:17,109 --> 00:43:23,709
<font color="#E5E5E5">everything from now on is</font><font color="#CCCCCC"> encrypted</font><font color="#E5E5E5"> so</font>

833
00:43:20,719 --> 00:43:26,269
the idea was<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> if we sent a bogus</font>

834
00:43:23,709 --> 00:43:28,788
<font color="#E5E5E5">change cipher spec message early in the</font>

835
00:43:26,269 --> 00:43:31,038
<font color="#E5E5E5">handshake then maybe this will confuse</font>

836
00:43:28,789 --> 00:43:32,569
<font color="#E5E5E5">those devices thinking everything after</font>

837
00:43:31,039 --> 00:43:35,209
that is encrypted<font color="#E5E5E5"> and they cannot</font>

838
00:43:32,569 --> 00:43:38,359
analyze it so yeah and<font color="#E5E5E5"> it turned out</font>

839
00:43:35,209 --> 00:43:41,690
this worked<font color="#E5E5E5"> a lot of this reduced the</font>

840
00:43:38,359 --> 00:43:43,578
connection failures a lot so and there

841
00:43:41,690 --> 00:43:46,489
<font color="#E5E5E5">were a few other things</font><font color="#CCCCCC"> and then</font>

842
00:43:43,579 --> 00:43:48,229
eventually the failure rates<font color="#E5E5E5"> got low</font>

843
00:43:46,489 --> 00:43:52,940
enough that<font color="#CCCCCC"> browser thought okay now we</font>

844
00:43:48,229 --> 00:43:56,629
can<font color="#E5E5E5"> deploy this there were a few more</font>

845
00:43:52,940 --> 00:44:01,279
<font color="#E5E5E5">issues this is</font><font color="#CCCCCC"> a Pixma printer from</font>

846
00:43:56,630 --> 00:44:05,449
<font color="#CCCCCC">canon these things have an HTTP server</font>

847
00:44:01,279 --> 00:44:11,989
they have<font color="#E5E5E5"> network support and we have to</font>

848
00:44:05,449 --> 00:44:15,229
talk about<font color="#E5E5E5"> these</font><font color="#CCCCCC"> people here so if you</font>

849
00:44:11,989 --> 00:44:17,059
remember<font color="#E5E5E5"> the the Snowden relations one</font>

850
00:44:15,229 --> 00:44:18,410
of the things that got highlighted there

851
00:44:17,059 --> 00:44:21,199
was that there's a<font color="#E5E5E5"> random number</font>

852
00:44:18,410 --> 00:44:24,469
<font color="#E5E5E5">generator</font><font color="#CCCCCC"> called</font><font color="#E5E5E5"> dual</font><font color="#CCCCCC"> EC drbg</font>

853
00:44:21,199 --> 00:44:26,119
and that has a<font color="#CCCCCC"> backdoor and basically</font>

854
00:44:24,469 --> 00:44:28,009
these days everyone believes this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font>

855
00:44:26,119 --> 00:44:30,559
vector by the NSA<font color="#CCCCCC"> and they have some</font>

856
00:44:28,009 --> 00:44:32,089
secret key so they can<font color="#E5E5E5"> can predict what</font>

857
00:44:30,559 --> 00:44:38,269
random values this random number

858
00:44:32,089 --> 00:44:40,190
<font color="#E5E5E5">generator will output and also what was</font>

859
00:44:38,269 --> 00:44:42,618
in the Snowden documents was that at

860
00:44:40,190 --> 00:44:44,630
some<font color="#CCCCCC"> point the NSA</font><font color="#E5E5E5"> offer ten million</font>

861
00:44:42,619 --> 00:44:45,530
dollars to RSA security so they

862
00:44:44,630 --> 00:44:50,210
implement this

863
00:44:45,530 --> 00:44:53,720
random number generator<font color="#CCCCCC"> and then there's</font>

864
00:44:50,210 --> 00:44:56,810
the there was a proposal a draft for a

865
00:44:53,720 --> 00:45:00,020
TLS extension called extended random

866
00:44:56,810 --> 00:45:04,940
<font color="#E5E5E5">that add some</font><font color="#CCCCCC"> extra random numbers to</font>

867
00:45:00,020 --> 00:45:06,890
<font color="#E5E5E5">the TLS handshake</font><font color="#CCCCCC"> why</font><font color="#E5E5E5"> it wasn't really</font>

868
00:45:04,940 --> 00:45:09,290
<font color="#CCCCCC">clear</font><font color="#E5E5E5"> like it was just</font><font color="#CCCCCC"> yeah we can do</font>

869
00:45:06,890 --> 00:45:11,029
this<font color="#E5E5E5"> it was just</font><font color="#CCCCCC"> a proposal I mean every</font>

870
00:45:09,290 --> 00:45:13,180
<font color="#E5E5E5">kind of one can write a proposal for a</font>

871
00:45:11,030 --> 00:45:19,280
<font color="#E5E5E5">new extension it was never finalized but</font>

872
00:45:13,180 --> 00:45:21,950
it was out there<font color="#E5E5E5"> and in 2014</font><font color="#CCCCCC"> research</font>

873
00:45:19,280 --> 00:45:23,660
team looked closer at this<font color="#CCCCCC"> rad well EC</font>

874
00:45:21,950 --> 00:45:27,529
random number generator<font color="#E5E5E5"> and figured out</font>

875
00:45:23,660 --> 00:45:29,299
<font color="#E5E5E5">that if you</font><font color="#CCCCCC"> use this extended random</font>

876
00:45:27,530 --> 00:45:32,240
random extension then it's much<font color="#E5E5E5"> easier</font>

877
00:45:29,300 --> 00:45:37,280
<font color="#CCCCCC">to exploit this</font><font color="#E5E5E5"> factor in this random</font>

878
00:45:32,240 --> 00:45:40,640
<font color="#E5E5E5">number generator</font><font color="#CCCCCC"> and coincidentally RS</font>

879
00:45:37,280 --> 00:45:43,190
<font color="#CCCCCC">ace TLS library be safe</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> contains</font>

880
00:45:40,640 --> 00:45:46,190
support for<font color="#E5E5E5"> that extension but it was</font>

881
00:45:43,190 --> 00:45:47,870
switched off<font color="#CCCCCC"> so and they didn't</font><font color="#E5E5E5"> find any</font>

882
00:45:46,190 --> 00:45:49,520
implementations<font color="#CCCCCC"> that actually used it so</font>

883
00:45:47,870 --> 00:45:52,940
it was<font color="#CCCCCC"> thought</font><font color="#E5E5E5"> of okay</font><font color="#CCCCCC"> this was no big</font>

884
00:45:49,520 --> 00:45:55,430
<font color="#CCCCCC">deal</font><font color="#E5E5E5"> right but actually</font><font color="#CCCCCC"> it seems these</font>

885
00:45:52,940 --> 00:45:58,970
these Canon printers<font color="#E5E5E5"> they had enabled</font>

886
00:45:55,430 --> 00:46:01,339
this<font color="#E5E5E5"> extension</font><font color="#CCCCCC"> and they used this are</font>

887
00:45:58,970 --> 00:46:03,439
say be safe library and<font color="#CCCCCC"> enable</font><font color="#E5E5E5"> this</font>

888
00:46:01,340 --> 00:46:07,070
extended random extension which was only

889
00:46:03,440 --> 00:46:08,930
<font color="#E5E5E5">a draft</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so as extended random was</font>

890
00:46:07,070 --> 00:46:11,630
only a draft it had no official

891
00:46:08,930 --> 00:46:14,060
extension number<font color="#E5E5E5"> so such a TLS extension</font>

892
00:46:11,630 --> 00:46:16,900
has a number there<font color="#E5E5E5"> so that the server</font>

893
00:46:14,060 --> 00:46:19,310
knows what kind<font color="#E5E5E5"> of extension this is and</font>

894
00:46:16,900 --> 00:46:22,340
for<font color="#E5E5E5"> this implementation they just use</font>

895
00:46:19,310 --> 00:46:24,110
the next<font color="#E5E5E5"> available</font><font color="#CCCCCC"> number and it turned</font>

896
00:46:22,340 --> 00:46:27,050
out<font color="#E5E5E5"> that this number collided with one</font>

897
00:46:24,110 --> 00:46:33,020
<font color="#CCCCCC">of the mandatory extensions that TLS 1.3</font>

898
00:46:27,050 --> 00:46:34,700
introduced so<font color="#E5E5E5"> so these these Canon</font>

899
00:46:33,020 --> 00:46:36,230
printers could not interpret that<font color="#E5E5E5"> new</font>

900
00:46:34,700 --> 00:46:37,819
extension they thought<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is this</font>

901
00:46:36,230 --> 00:46:39,880
extended random and it didn't make any

902
00:46:37,820 --> 00:46:45,290
<font color="#CCCCCC">sense and so</font><font color="#E5E5E5"> you had connection failures</font>

903
00:46:39,880 --> 00:46:47,060
<font color="#E5E5E5">yeah eventually so they the been the in</font>

904
00:46:45,290 --> 00:46:49,450
the<font color="#E5E5E5"> TLS protocol they just gave this</font>

905
00:46:47,060 --> 00:46:54,369
<font color="#E5E5E5">extension a</font><font color="#CCCCCC"> new</font><font color="#E5E5E5"> number and then</font>

906
00:46:49,450 --> 00:46:56,680
this no<font color="#E5E5E5"> longer happened yeah there were</font>

907
00:46:54,369 --> 00:46:59,380
many more such issues and they<font color="#CCCCCC"> continued</font>

908
00:46:56,680 --> 00:47:01,450
<font color="#CCCCCC">to show up for</font><font color="#E5E5E5"> example recently Java</font>

909
00:46:59,380 --> 00:47:03,310
which<font color="#CCCCCC"> is like</font><font color="#E5E5E5"> also very popular in</font>

910
00:47:01,450 --> 00:47:05,770
enterprise<font color="#CCCCCC"> environments it now ships</font>

911
00:47:03,310 --> 00:47:07,328
with<font color="#E5E5E5"> the TLS 1.3 support but it doesn't</font>

912
00:47:05,770 --> 00:47:12,700
really<font color="#E5E5E5"> work so</font><font color="#CCCCCC"> you have connection</font>

913
00:47:07,329 --> 00:47:16,750
failures there yeah now with<font color="#E5E5E5"> all these</font>

914
00:47:12,700 --> 00:47:18,609
deployment issues what<font color="#E5E5E5"> about future TLS</font>

915
00:47:16,750 --> 00:47:20,619
versions will we have all that again and

916
00:47:18,609 --> 00:47:22,359
we have this Greece mechanism and it

917
00:47:20,619 --> 00:47:24,220
helps a bit like it prevents<font color="#CCCCCC"> these</font>

918
00:47:22,359 --> 00:47:25,869
<font color="#E5E5E5">version intolerance issues but it</font>

919
00:47:24,220 --> 00:47:30,819
doesn't prevent these more complicated

920
00:47:25,869 --> 00:47:33,250
<font color="#CCCCCC">metal box</font><font color="#E5E5E5"> issues</font><font color="#CCCCCC"> there was a proposal</font>

921
00:47:30,820 --> 00:47:35,200
from david benjamin from google who said

922
00:47:33,250 --> 00:47:36,869
yeah<font color="#E5E5E5"> maybe we</font><font color="#CCCCCC"> should just every few</font>

923
00:47:35,200 --> 00:47:40,149
months<font color="#CCCCCC"> like every two or three months</font>

924
00:47:36,869 --> 00:47:42,849
<font color="#E5E5E5">ship a</font><font color="#CCCCCC"> new temporary TLS version which</font>

925
00:47:40,150 --> 00:47:44,890
<font color="#CCCCCC">will use</font><font color="#E5E5E5"> for three months and then we</font>

926
00:47:42,849 --> 00:47:47,619
will deprecated it again to just

927
00:47:44,890 --> 00:47:49,598
<font color="#E5E5E5">constantly change the protocol so that</font>

928
00:47:47,619 --> 00:47:55,030
<font color="#CCCCCC">the internet gets used to the fact that</font>

929
00:47:49,599 --> 00:47:57,430
new protocols get introduced my

930
00:47:55,030 --> 00:47:59,470
prediction here is that<font color="#E5E5E5"> these deployment</font>

931
00:47:57,430 --> 00:48:01,359
issues are<font color="#E5E5E5"> going to get worse</font><font color="#CCCCCC"> I mean we</font>

932
00:47:59,470 --> 00:48:04,410
know now that<font color="#E5E5E5"> they exist and we kind of</font>

933
00:48:01,359 --> 00:48:07,859
have some ideas how<font color="#E5E5E5"> to prevent them but</font>

934
00:48:04,410 --> 00:48:10,328
if you<font color="#CCCCCC"> go to enterprise security</font>

935
00:48:07,859 --> 00:48:13,210
<font color="#E5E5E5">conferences you will know that the</font>

936
00:48:10,329 --> 00:48:14,770
latest<font color="#E5E5E5"> trend in enterprise security is</font>

937
00:48:13,210 --> 00:48:18,280
this thing called<font color="#E5E5E5"> artificial</font>

938
00:48:14,770 --> 00:48:22,140
intelligence<font color="#E5E5E5"> we use machine</font><font color="#CCCCCC"> learning</font><font color="#E5E5E5"> and</font>

939
00:48:18,280 --> 00:48:25,750
fancy algorithms to detect bad stuff<font color="#E5E5E5"> and</font>

940
00:48:22,140 --> 00:48:28,299
that<font color="#CCCCCC"> Voris be and here's a blog post</font>

941
00:48:25,750 --> 00:48:30,760
from Cisco where they they want to use

942
00:48:28,300 --> 00:48:32,500
machine learning<font color="#E5E5E5"> to detect bad TLS</font>

943
00:48:30,760 --> 00:48:34,990
traffic because they see<font color="#E5E5E5"> the all this</font>

944
00:48:32,500 --> 00:48:36,670
traffic is encrypted<font color="#CCCCCC"> and</font><font color="#E5E5E5"> we can no</font>

945
00:48:34,990 --> 00:48:38,859
longer analyze it we<font color="#E5E5E5"> don't know if</font>

946
00:48:36,670 --> 00:48:40,510
<font color="#CCCCCC">members in there</font><font color="#E5E5E5"> so let's</font><font color="#CCCCCC"> use some</font>

947
00:48:38,859 --> 00:48:43,420
machine learning<font color="#CCCCCC"> it will</font><font color="#E5E5E5"> detect that</font>

948
00:48:40,510 --> 00:48:45,790
<font color="#CCCCCC">traffic</font><font color="#E5E5E5"> so what I</font><font color="#CCCCCC"> what I'm</font><font color="#E5E5E5"> very worried</font>

949
00:48:43,420 --> 00:48:48,460
<font color="#CCCCCC">that will happen here is that</font><font color="#E5E5E5"> the next</font>

950
00:48:45,790 --> 00:48:51,339
<font color="#E5E5E5">generation of of TLS deployment issues</font>

951
00:48:48,460 --> 00:48:54,160
will<font color="#CCCCCC"> be</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> I supported TLS</font><font color="#E5E5E5"> intolerance</font>

952
00:48:51,339 --> 00:48:56,849
issues and it may be much harder to<font color="#E5E5E5"> fix</font>

953
00:48:54,160 --> 00:48:56,848
and<font color="#CCCCCC"> analyze</font>

954
00:48:57,630 --> 00:49:06,880
I'm speaking of enterprise environments

955
00:49:02,400 --> 00:49:09,100
<font color="#E5E5E5">one of the very early changes</font><font color="#CCCCCC"> in TLS 1.3</font>

956
00:49:06,880 --> 00:49:12,820
was that it removed the RSA encryption

957
00:49:09,100 --> 00:49:14,620
handshake<font color="#E5E5E5"> one reason was that it</font><font color="#CCCCCC"> doesn't</font>

958
00:49:12,820 --> 00:49:16,480
have forward secrecy the other was these

959
00:49:14,620 --> 00:49:22,390
are<font color="#E5E5E5"> these</font><font color="#CCCCCC"> black Baha'i</font><font color="#E5E5E5"> texts that I</font>

960
00:49:16,480 --> 00:49:24,700
talked about<font color="#E5E5E5"> earlier and then they came</font>

961
00:49:22,390 --> 00:49:29,440
an email to the TLS working group from

962
00:49:24,700 --> 00:49:31,750
the banking industry<font color="#E5E5E5"> and I quote I</font>

963
00:49:29,440 --> 00:49:33,580
recently learned of a proposed change

964
00:49:31,750 --> 00:49:35,650
<font color="#E5E5E5">that would affect many of my</font>

965
00:49:33,580 --> 00:49:38,190
<font color="#E5E5E5">organization's member institutions the</font>

966
00:49:35,650 --> 00:49:40,540
deprecation<font color="#E5E5E5"> of the RSA key exchange</font>

967
00:49:38,190 --> 00:49:42,340
deprecation<font color="#E5E5E5"> of the RSA key exchange in</font>

968
00:49:40,540 --> 00:49:43,680
<font color="#CCCCCC">TS 1</font><font color="#E5E5E5"> by</font><font color="#CCCCCC"> 3 will cause significant</font>

969
00:49:42,340 --> 00:49:46,030
problems<font color="#CCCCCC"> for financial institutions</font>

970
00:49:43,680 --> 00:49:48,640
<font color="#CCCCCC">almost all of whom are running TLS</font>

971
00:49:46,030 --> 00:49:51,040
internally and have significant<font color="#E5E5E5"> security</font>

972
00:49:48,640 --> 00:49:54,730
critical<font color="#E5E5E5"> investments in out-of-band TLS</font>

973
00:49:51,040 --> 00:49:56,920
decryption what it basically<font color="#E5E5E5"> means is</font>

974
00:49:54,730 --> 00:49:58,630
<font color="#E5E5E5">they are using TLS</font><font color="#CCCCCC"> for some connection</font>

975
00:49:56,920 --> 00:50:00,460
they<font color="#CCCCCC"> have something</font><font color="#E5E5E5"> some device in the</font>

976
00:49:58,630 --> 00:50:03,820
middle<font color="#CCCCCC"> that is decrypting the traffic</font>

977
00:50:00,460 --> 00:50:06,700
and analyzing it<font color="#CCCCCC"> somehow</font><font color="#E5E5E5"> which if they</font>

978
00:50:03,820 --> 00:50:09,700
do it internally<font color="#CCCCCC"> it's okay but this no</font>

979
00:50:06,700 --> 00:50:12,279
longer<font color="#CCCCCC"> works with TLS 1.3 because we</font>

980
00:50:09,700 --> 00:50:16,299
always negotiate a new key for<font color="#E5E5E5"> each</font>

981
00:50:12,280 --> 00:50:21,040
connection<font color="#E5E5E5"> and it's no longer possible</font>

982
00:50:16,300 --> 00:50:22,840
<font color="#E5E5E5">to have the static decryption there was</font>

983
00:50:21,040 --> 00:50:26,080
an answer from<font color="#E5E5E5"> Kenny</font><font color="#CCCCCC"> Peterson</font><font color="#E5E5E5"> is a</font>

984
00:50:22,840 --> 00:50:28,390
<font color="#E5E5E5">professor from London said my view</font>

985
00:50:26,080 --> 00:50:29,590
concerning<font color="#E5E5E5"> your request no</font><font color="#CCCCCC"> rational</font>

986
00:50:28,390 --> 00:50:32,160
<font color="#E5E5E5">we're trying to build a more secure</font>

987
00:50:29,590 --> 00:50:32,160
Internet

988
00:50:36,640 --> 00:50:41,180
you're a bit late<font color="#CCCCCC"> to the party we're</font>

989
00:50:39,230 --> 00:50:43,160
metaphorically<font color="#E5E5E5"> speaking at the stage of</font>

990
00:50:41,180 --> 00:50:45,649
emptying the ashtrays and<font color="#E5E5E5"> hunting phone</font>

991
00:50:43,160 --> 00:50:47,930
and not<font color="#E5E5E5"> quite empty</font><font color="#CCCCCC"> beer cans my exactly</font>

992
00:50:45,650 --> 00:50:50,180
<font color="#E5E5E5">where are 15 and ours a key transport</font>

993
00:50:47,930 --> 00:50:53,180
<font color="#E5E5E5">disappeared from the spec on about a</font>

994
00:50:50,180 --> 00:50:54,799
<font color="#E5E5E5">dozen crafts ago</font><font color="#CCCCCC"> I know the</font><font color="#E5E5E5"> banking</font>

995
00:50:53,180 --> 00:50:56,450
industry is usually a bit slow off the

996
00:50:54,800 --> 00:51:02,630
mark but this takes<font color="#E5E5E5"> the biscuit</font>

997
00:50:56,450 --> 00:51:05,919
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> there were several proposals then</font>

998
00:51:02,630 --> 00:51:09,970
to add a visibility mode<font color="#CCCCCC"> two tiers 1.3</font>

999
00:51:05,920 --> 00:51:12,110
which would in another way allow these

1000
00:51:09,970 --> 00:51:14,209
connections<font color="#E5E5E5"> that could be passively</font>

1001
00:51:12,110 --> 00:51:16,850
observed and decrypted but they were all

1002
00:51:14,210 --> 00:51:18,740
rejected<font color="#E5E5E5"> and the general opinion in the</font>

1003
00:51:16,850 --> 00:51:20,810
<font color="#CCCCCC">Tillis working group what that the goal</font>

1004
00:51:18,740 --> 00:51:24,020
of<font color="#E5E5E5"> monitoring traffic content is just</font>

1005
00:51:20,810 --> 00:51:25,580
fundamentally not the goal of<font color="#CCCCCC"> TLS</font><font color="#E5E5E5"> the</font>

1006
00:51:24,020 --> 00:51:31,070
goal of TLS is to have an<font color="#CCCCCC"> encrypted</font>

1007
00:51:25,580 --> 00:51:33,860
<font color="#E5E5E5">channel that no one else can read if the</font>

1008
00:51:31,070 --> 00:51:36,760
industry<font color="#CCCCCC"> eventually went to Etsy which</font>

1009
00:51:33,860 --> 00:51:40,640
is the European technology

1010
00:51:36,760 --> 00:51:42,230
standardization<font color="#CCCCCC"> organisation and they</font>

1011
00:51:40,640 --> 00:51:49,910
recently published something<font color="#E5E5E5"> called</font>

1012
00:51:42,230 --> 00:51:51,770
<font color="#CCCCCC">Enterprise</font><font color="#E5E5E5"> TLS which modify still has</font>

1013
00:51:49,910 --> 00:51:56,359
won three in a way that it would<font color="#E5E5E5"> allow</font>

1014
00:51:51,770 --> 00:51:58,220
these<font color="#E5E5E5"> decryptions the IETF protested</font>

1015
00:51:56,360 --> 00:52:00,950
against that and primarily<font color="#E5E5E5"> because of</font>

1016
00:51:58,220 --> 00:52:04,040
the they used the name TLS because it

1017
00:52:00,950 --> 00:52:06,980
sounds<font color="#E5E5E5"> like this</font><font color="#CCCCCC"> is some addition to TLS</font>

1018
00:52:04,040 --> 00:52:09,050
or<font color="#E5E5E5"> something and apparently Etsy has</font>

1019
00:52:06,980 --> 00:52:11,450
previously promised to<font color="#E5E5E5"> them that they</font>

1020
00:52:09,050 --> 00:52:15,730
would<font color="#E5E5E5"> not</font><font color="#CCCCCC"> use the name TLS</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then they</font>

1021
00:52:11,450 --> 00:52:19,270
named it<font color="#E5E5E5"> Enterprise</font><font color="#CCCCCC"> tearless ok but yeah</font>

1022
00:52:15,730 --> 00:52:22,970
yeah<font color="#E5E5E5"> yeah that's one point three is</font>

1023
00:52:19,270 --> 00:52:24,680
finished you<font color="#E5E5E5"> can start using it you</font>

1024
00:52:22,970 --> 00:52:27,080
should update<font color="#CCCCCC"> your service so that they</font>

1025
00:52:24,680 --> 00:52:29,149
use it your browser probably<font color="#CCCCCC"> already</font>

1026
00:52:27,080 --> 00:52:33,680
supports it yeah

1027
00:52:29,150 --> 00:52:40,030
so in summary<font color="#E5E5E5"> TLS 1.3 deprecates many</font>

1028
00:52:33,680 --> 00:52:42,649
insecure constructions<font color="#E5E5E5"> it's faster and</font>

1029
00:52:40,030 --> 00:52:43,460
deploying new things on the<font color="#CCCCCC"> Internet is</font>

1030
00:52:42,650 --> 00:52:47,540
a mess

1031
00:52:43,460 --> 00:52:50,740
so yeah yeah<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> it and I</font><font color="#CCCCCC"> think we</font>

1032
00:52:47,540 --> 00:52:50,740
have a few minutes<font color="#E5E5E5"> for</font><font color="#CCCCCC"> questions</font>

1033
00:52:51,020 --> 00:52:54,710
[Music]

1034
00:52:58,930 --> 00:53:02,618
<font color="#CCCCCC">all right</font><font color="#E5E5E5"> young as</font><font color="#CCCCCC"> Hana</font><font color="#E5E5E5"> management we</font>

1035
00:53:01,299 --> 00:53:04,960
have<font color="#E5E5E5"> like six</font><font color="#CCCCCC"> minutes</font><font color="#E5E5E5"> or so for</font>

1036
00:53:02,619 --> 00:53:06,579
<font color="#CCCCCC">questions we have five microphones in</font>

1037
00:53:04,960 --> 00:53:06,940
the<font color="#E5E5E5"> room</font><font color="#CCCCCC"> so if you want to</font><font color="#E5E5E5"> ask a</font>

1038
00:53:06,579 --> 00:53:08,589
question

1039
00:53:06,940 --> 00:53:10,930
hurry up<font color="#E5E5E5"> to one of</font><font color="#CCCCCC"> the microphones</font><font color="#E5E5E5"> and</font>

1040
00:53:08,589 --> 00:53:12,849
please make sure<font color="#E5E5E5"> to ask a short concise</font>

1041
00:53:10,930 --> 00:53:15,279
<font color="#E5E5E5">question so we</font><font color="#CCCCCC"> can get as many in this</font>

1042
00:53:12,849 --> 00:53:24,339
we possibly can<font color="#CCCCCC"> now maybe</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> just go</font>

1043
00:53:15,279 --> 00:53:25,809
<font color="#E5E5E5">ahead over there and</font><font color="#CCCCCC"> mic - the question</font>

1044
00:53:24,339 --> 00:53:28,420
is<font color="#E5E5E5"> if there's a way</font><font color="#CCCCCC"> to prevent the use</font>

1045
00:53:25,809 --> 00:53:31,390
of that<font color="#CCCCCC"> enterprise -</font><font color="#E5E5E5"> yes yes there is</font>

1046
00:53:28,420 --> 00:53:33,549
<font color="#E5E5E5">because the basic idea</font><font color="#CCCCCC"> is that</font><font color="#E5E5E5"> they will</font>

1047
00:53:31,390 --> 00:53:37,390
use<font color="#CCCCCC"> a</font><font color="#E5E5E5"> static diffie-hellman key exchange</font>

1048
00:53:33,549 --> 00:53:39,700
<font color="#E5E5E5">and if you just connect twice and see</font>

1049
00:53:37,390 --> 00:53:41,890
that they<font color="#E5E5E5"> are using the same again then</font>

1050
00:53:39,700 --> 00:53:43,919
you might reject it<font color="#E5E5E5"> although</font><font color="#CCCCCC"> the problem</font>

1051
00:53:41,890 --> 00:53:47,890
is some service<font color="#E5E5E5"> may also use it for</font><font color="#CCCCCC"> an</font>

1052
00:53:43,920 --> 00:53:52,270
optimization so there<font color="#E5E5E5"> are longer</font>

1053
00:53:47,890 --> 00:53:54,490
discussions on this<font color="#E5E5E5"> question so yeah</font><font color="#CCCCCC"> I</font>

1054
00:53:52,270 --> 00:53:57,640
cannot fully answer it but they're more

1055
00:53:54,490 --> 00:53:58,990
<font color="#E5E5E5">or less there are options all right</font>

1056
00:53:57,640 --> 00:54:01,118
before<font color="#E5E5E5"> we go to the next</font><font color="#CCCCCC"> question a</font>

1057
00:53:58,990 --> 00:54:02,890
quick<font color="#E5E5E5"> request for all the people</font><font color="#CCCCCC"> leaving</font>

1058
00:54:01,119 --> 00:54:05,529
the room please do so as quietly as

1059
00:54:02,890 --> 00:54:07,240
possible so we<font color="#CCCCCC"> can finish this</font><font color="#E5E5E5"> Q&A in</font>

1060
00:54:05,529 --> 00:54:10,650
peace and don't have all these<font color="#E5E5E5"> noise</font>

1061
00:54:07,240 --> 00:54:13,709
going on<font color="#E5E5E5"> mic</font><font color="#CCCCCC"> 3-piece</font>

1062
00:54:10,650 --> 00:54:13,709
[Music]

1063
00:54:15,830 --> 00:54:20,620
<font color="#E5E5E5">meant something like sequence numbers</font>

1064
00:54:21,070 --> 00:54:25,370
<font color="#CCCCCC">there</font><font color="#E5E5E5"> is something like that in there</font>

1065
00:54:23,360 --> 00:54:28,250
the problem<font color="#E5E5E5"> is you sometimes have a</font>

1066
00:54:25,370 --> 00:54:30,290
situation<font color="#E5E5E5"> where you</font><font color="#CCCCCC"> have multiple</font><font color="#E5E5E5"> TLS</font>

1067
00:54:28,250 --> 00:54:31,730
termination points for<font color="#CCCCCC"> example if you</font>

1068
00:54:30,290 --> 00:54:34,160
have a CDN network that is

1069
00:54:31,730 --> 00:54:36,350
internationally<font color="#CCCCCC"> distributed</font><font color="#E5E5E5"> and you may</font>

1070
00:54:34,160 --> 00:54:38,589
not be<font color="#E5E5E5"> able to keep</font><font color="#CCCCCC"> State across all of</font>

1071
00:54:36,350 --> 00:54:38,589
them

1072
00:54:39,400 --> 00:54:44,450
<font color="#E5E5E5">all right then let's take a question</font>

1073
00:54:41,810 --> 00:54:47,230
<font color="#CCCCCC">from our viewers in the internet</font><font color="#E5E5E5"> the</font>

1074
00:54:44,450 --> 00:54:47,230
signal angel<font color="#E5E5E5"> please</font>

1075
00:54:48,510 --> 00:54:51,579
[Music]

1076
00:54:59,430 --> 00:55:12,940
<font color="#CCCCCC">like</font><font color="#E5E5E5"> so in my</font><font color="#CCCCCC"> opinion yes but there are</font>

1077
00:55:09,820 --> 00:55:14,860
many<font color="#CCCCCC"> people in the enterprise security</font>

1078
00:55:12,940 --> 00:55:18,640
<font color="#E5E5E5">industry who think that this</font><font color="#CCCCCC"> is not</font>

1079
00:55:14,860 --> 00:55:20,290
feasible but<font color="#CCCCCC"> I mean discussion about</font>

1080
00:55:18,640 --> 00:55:24,580
network design that would<font color="#E5E5E5"> be a whole</font>

1081
00:55:20,290 --> 00:55:26,200
<font color="#CCCCCC">other talk yeah</font><font color="#E5E5E5"> all right then let's</font>

1082
00:55:24,580 --> 00:55:30,130
<font color="#E5E5E5">take a question</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> Mike for please</font>

1083
00:55:26,200 --> 00:55:34,060
<font color="#CCCCCC">yeah it's also related to the enterprise</font>

1084
00:55:30,130 --> 00:55:38,590
TLS the browser can connect to

1085
00:55:34,060 --> 00:55:41,590
enterprise<font color="#CCCCCC"> TLS</font><font color="#E5E5E5"> without any problem</font>

1086
00:55:38,590 --> 00:55:44,800
yeah so it's built that it's compatible

1087
00:55:41,590 --> 00:55:47,860
with<font color="#E5E5E5"> the</font><font color="#CCCCCC"> existing TLS protocol</font><font color="#E5E5E5"> Thanks</font>

1088
00:55:44,800 --> 00:55:49,840
Thanks and the reason like whether you

1089
00:55:47,860 --> 00:55:51,490
can avoid<font color="#CCCCCC"> that or</font><font color="#E5E5E5"> not that's really a</font>

1090
00:55:49,840 --> 00:55:54,040
more complicated discussion that would

1091
00:55:51,490 --> 00:55:55,990
kind of be<font color="#CCCCCC"> a</font><font color="#E5E5E5"> whole sub talk so I cannot</font>

1092
00:55:54,040 --> 00:55:57,900
<font color="#E5E5E5">answer this in a minute</font><font color="#CCCCCC"> but come to me</font>

1093
00:55:55,990 --> 00:55:59,649
later if you're interested<font color="#CCCCCC"> in</font><font color="#E5E5E5"> details</font>

1094
00:55:57,900 --> 00:56:02,820
all right<font color="#CCCCCC"> then let's</font><font color="#E5E5E5"> take another</font>

1095
00:55:59,650 --> 00:56:02,820
<font color="#E5E5E5">question from the interwebs</font>

1096
00:56:09,970 --> 00:56:18,490
I mean that that's<font color="#E5E5E5"> what</font><font color="#CCCCCC"> I said the what</font>

1097
00:56:16,570 --> 00:56:20,740
is done that's<font color="#E5E5E5"> actually what browsers</font>

1098
00:56:18,490 --> 00:56:23,319
are doing and I<font color="#E5E5E5"> think this is a good</font>

1099
00:56:20,740 --> 00:56:25,180
<font color="#CCCCCC">idea</font><font color="#E5E5E5"> I just think that this only covers</font>

1100
00:56:23,320 --> 00:56:29,619
a<font color="#E5E5E5"> small fraction of these deployment</font>

1101
00:56:25,180 --> 00:56:32,740
issues<font color="#E5E5E5"> okay we still</font><font color="#CCCCCC"> have plenty</font><font color="#E5E5E5"> of time</font>

1102
00:56:29,619 --> 00:56:35,710
so<font color="#E5E5E5"> let's go to Mike to please yeah</font>

1103
00:56:32,740 --> 00:56:39,609
as you said we<font color="#CCCCCC"> have still a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of dirty</font>

1104
00:56:35,710 --> 00:56:41,440
work<font color="#CCCCCC"> arounds concerning TLS 1.3 and all</font>

1105
00:56:39,609 --> 00:56:46,200
the implementations in the browsers and

1106
00:56:41,440 --> 00:56:51,240
<font color="#CCCCCC">so on is there a way to make like a</font>

1107
00:56:46,200 --> 00:56:57,640
requirement for the TLS 1.3 or 1.4

1108
00:56:51,240 --> 00:57:01,089
compliance to meet some compliance to

1109
00:56:57,640 --> 00:57:03,190
the standard so<font color="#E5E5E5"> you have like a test you</font>

1110
00:57:01,090 --> 00:57:05,080
can<font color="#E5E5E5"> perform a self test or something</font>

1111
00:57:03,190 --> 00:57:08,950
like that<font color="#E5E5E5"> and if you have passed that</font>

1112
00:57:05,080 --> 00:57:15,730
<font color="#E5E5E5">you are allowed to</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> the TLS 1.3 logo</font>

1113
00:57:08,950 --> 00:57:18,669
or one point<font color="#CCCCCC"> although you can do that in</font>

1114
00:57:15,730 --> 00:57:21,010
theory<font color="#E5E5E5"> the problem is you you you</font><font color="#CCCCCC"> don't</font>

1115
00:57:18,670 --> 00:57:23,890
really want to have<font color="#CCCCCC"> a certification</font>

1116
00:57:21,010 --> 00:57:26,890
regime that people like have<font color="#CCCCCC"> to ask for</font>

1117
00:57:23,890 --> 00:57:29,170
a logo for to be able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be allowed to</font>

1118
00:57:26,890 --> 00:57:30,940
<font color="#CCCCCC">implement yes and that's kind of one of</font>

1119
00:57:29,170 --> 00:57:33,130
the downsides<font color="#E5E5E5"> of the open architecture</font>

1120
00:57:30,940 --> 00:57:35,020
of the<font color="#CCCCCC"> Internet</font><font color="#E5E5E5"> right we allow everyone</font>

1121
00:57:33,130 --> 00:57:36,990
to<font color="#E5E5E5"> put devices on the Internet</font>

1122
00:57:35,020 --> 00:57:42,099
so we kind of have to live with that<font color="#E5E5E5"> and</font>

1123
00:57:36,990 --> 00:57:44,169
<font color="#E5E5E5">we there's no TLS police so we kind of</font>

1124
00:57:42,099 --> 00:57:47,380
have<font color="#CCCCCC"> no way of</font><font color="#E5E5E5"> preventing people</font><font color="#CCCCCC"> to use</font>

1125
00:57:44,170 --> 00:57:48,910
broken TLS implementations<font color="#E5E5E5"> even and and</font>

1126
00:57:47,380 --> 00:57:53,500
I mean<font color="#CCCCCC"> people won't</font><font color="#E5E5E5"> care if they have a</font>

1127
00:57:48,910 --> 00:57:54,970
logo<font color="#CCCCCC"> for it</font><font color="#E5E5E5"> or not right</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right let's</font>

1128
00:57:53,500 --> 00:57:58,050
go to a mic<font color="#E5E5E5"> five all the way in the back</font>

1129
00:57:54,970 --> 00:58:02,290
there<font color="#CCCCCC"> okay I have a question about</font>

1130
00:57:58,050 --> 00:58:05,530
<font color="#E5E5E5">source algorithm and</font><font color="#CCCCCC"> tiers</font><font color="#E5E5E5"> 1.3 because</font>

1131
00:58:02,290 --> 00:58:07,240
since quantum computing<font color="#E5E5E5"> is getting very</font>

1132
00:58:05,530 --> 00:58:08,100
<font color="#E5E5E5">popular lately</font><font color="#CCCCCC"> and there are a</font><font color="#E5E5E5"> lot of</font>

1133
00:58:07,240 --> 00:58:11,009
improvement

1134
00:58:08,100 --> 00:58:14,730
in industries<font color="#E5E5E5"> so what's the current</font>

1135
00:58:11,010 --> 00:58:17,630
<font color="#E5E5E5">situation regarding here as 1.3 and all</font>

1136
00:58:14,730 --> 00:58:21,020
those<font color="#E5E5E5"> quantum based algorithm break the</font>

1137
00:58:17,630 --> 00:58:25,200
complex view into polynomial times<font color="#E5E5E5"> yeah</font>

1138
00:58:21,020 --> 00:58:27,810
there's no major<font color="#E5E5E5"> change here</font><font color="#CCCCCC"> so with TS</font>

1139
00:58:25,200 --> 00:58:29,850
1.3 you still are<font color="#E5E5E5"> using algorithms that</font>

1140
00:58:27,810 --> 00:58:31,890
can be broken<font color="#E5E5E5"> with quantum computers if</font>

1141
00:58:29,850 --> 00:58:33,690
you have a quantum computer<font color="#E5E5E5"> which</font>

1142
00:58:31,890 --> 00:58:36,109
currently you don't but you may<font color="#CCCCCC"> have in</font>

1143
00:58:33,690 --> 00:58:38,910
the<font color="#CCCCCC"> future</font><font color="#E5E5E5"> there is work done on</font>

1144
00:58:36,110 --> 00:58:41,910
standardizing future algorithms that<font color="#CCCCCC"> are</font>

1145
00:58:38,910 --> 00:58:43,950
<font color="#CCCCCC">safe</font><font color="#E5E5E5"> from quantum attacks but that's</font>

1146
00:58:41,910 --> 00:58:46,980
kind of<font color="#E5E5E5"> in an early</font><font color="#CCCCCC"> stage and</font><font color="#E5E5E5"> there was</font>

1147
00:58:43,950 --> 00:58:48,899
an experiment by<font color="#E5E5E5"> Google to to introduce</font>

1148
00:58:46,980 --> 00:58:52,800
a quantum safe handshake but<font color="#E5E5E5"> they only</font>

1149
00:58:48,900 --> 00:58:55,200
ran<font color="#E5E5E5"> it for a few months</font><font color="#CCCCCC"> and but</font><font color="#E5E5E5"> I think</font>

1150
00:58:52,800 --> 00:58:57,180
<font color="#CCCCCC">we will</font><font color="#E5E5E5"> see extensions within the next</font>

1151
00:58:55,200 --> 00:59:00,000
<font color="#E5E5E5">few</font><font color="#CCCCCC"> years that</font><font color="#E5E5E5"> will introduce quantum</font>

1152
00:58:57,180 --> 00:59:03,210
safe algorithms but<font color="#E5E5E5"> right now there's no</font>

1153
00:59:00,000 --> 00:59:06,720
change from<font color="#E5E5E5"> TLS 1.2 to 1.3 both are can</font>

1154
00:59:03,210 --> 00:59:08,430
<font color="#E5E5E5">be attacked with quantum computers</font><font color="#CCCCCC"> ok so</font>

1155
00:59:06,720 --> 00:59:09,930
I think<font color="#E5E5E5"> we are</font><font color="#CCCCCC"> getting to our last</font><font color="#E5E5E5"> or</font>

1156
00:59:08,430 --> 00:59:12,060
second to last question<font color="#E5E5E5"> so let's go to</font>

1157
00:59:09,930 --> 00:59:13,759
<font color="#CCCCCC">Mike 3 I think you've been waiting</font><font color="#E5E5E5"> the</font>

1158
00:59:12,060 --> 00:59:17,430
<font color="#E5E5E5">longest</font><font color="#CCCCCC"> okay</font>

1159
00:59:13,760 --> 00:59:21,600
in all the<font color="#E5E5E5"> versions of TLS there was a</font>

1160
00:59:17,430 --> 00:59:23,819
problem<font color="#E5E5E5"> for small devices such as I see</font>

1161
00:59:21,600 --> 00:59:26,970
and the industrial devices<font color="#E5E5E5"> has there</font>

1162
00:59:23,820 --> 00:59:31,080
been a change<font color="#E5E5E5"> in one point free to allow</font>

1163
00:59:26,970 --> 00:59:32,339
them to<font color="#CCCCCC"> participate I mean I'm not sure</font>

1164
00:59:31,080 --> 00:59:34,980
<font color="#CCCCCC">about the entire you mean with the</font>

1165
00:59:32,340 --> 00:59:39,390
problem I<font color="#CCCCCC"> mean</font><font color="#E5E5E5"> our</font><font color="#CCCCCC"> Parliament's TLS</font>

1166
00:59:34,980 --> 00:59:42,390
<font color="#CCCCCC">needs some the performance issues of TLS</font>

1167
00:59:39,390 --> 00:59:46,319
have usually been overstated so even in

1168
00:59:42,390 --> 00:59:49,529
a relatively low<font color="#E5E5E5"> powered device you can</font>

1169
00:59:46,320 --> 00:59:51,630
implement the crypto the I mean the the

1170
00:59:49,530 --> 00:59:54,450
whole protocol is<font color="#E5E5E5"> relatively complex and</font>

1171
00:59:51,630 --> 00:59:56,040
you need to<font color="#CCCCCC"> implement it somehow but I</font>

1172
00:59:54,450 --> 00:59:58,319
don't<font color="#E5E5E5"> think that's such a big issue</font>

1173
00:59:56,040 --> 01:00:02,570
anymore<font color="#E5E5E5"> because even IOT devices have</font>

1174
00:59:58,320 --> 01:00:05,460
<font color="#E5E5E5">relatively powerful processes these days</font>

1175
01:00:02,570 --> 01:00:07,050
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> all right</font><font color="#CCCCCC"> that concludes our Q&A</font>

1176
01:00:05,460 --> 01:00:08,480
<font color="#E5E5E5">unfortunately we are out of time</font><font color="#CCCCCC"> so</font>

1177
01:00:07,050 --> 01:00:10,369
<font color="#CCCCCC">please</font>

1178
01:00:08,480 --> 01:00:10,930
give a huge<font color="#CCCCCC"> round of applause for this</font>

1179
01:00:10,369 --> 01:00:11,110
great talk

1180
01:00:10,930 --> 01:00:39,549
[Applause]

1181
01:00:11,110 --> 01:00:39,550
[Music]

