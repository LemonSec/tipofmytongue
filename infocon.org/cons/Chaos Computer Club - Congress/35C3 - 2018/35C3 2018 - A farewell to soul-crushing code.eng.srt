1
00:00:02,830 --> 00:00:15,470
[Music]

2
00:00:17,779 --> 00:00:24,000
so our first talk is<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to be</font>

3
00:00:21,660 --> 00:00:27,570
presented by two speakers<font color="#CCCCCC"> Michael</font><font color="#E5E5E5"> River</font>

4
00:00:24,000 --> 00:00:29,670
and Nicole well<font color="#CCCCCC"> Michael is the CEO of</font>

5
00:00:27,570 --> 00:00:31,679
active group<font color="#E5E5E5"> he's been developing</font>

6
00:00:29,670 --> 00:00:32,969
<font color="#E5E5E5">software and teaching programming for</font>

7
00:00:31,679 --> 00:00:34,920
over<font color="#E5E5E5"> 30 years</font>

8
00:00:32,969 --> 00:00:37,110
and<font color="#E5E5E5"> Nicole is an independent</font><font color="#CCCCCC"> software</font>

9
00:00:34,920 --> 00:00:40,050
developer focusing<font color="#E5E5E5"> on</font><font color="#CCCCCC"> domain-driven</font>

10
00:00:37,110 --> 00:00:41,910
design<font color="#E5E5E5"> and event streaming and she she's</font>

11
00:00:40,050 --> 00:00:44,250
been organizing software craftsmanship

12
00:00:41,910 --> 00:00:52,739
conferences<font color="#E5E5E5"> so please give them a big</font>

13
00:00:44,250 --> 00:00:53,370
<font color="#CCCCCC">round of applause for</font><font color="#E5E5E5"> this time good</font>

14
00:00:52,739 --> 00:00:56,370
<font color="#CCCCCC">morning everyone</font>

15
00:00:53,370 --> 00:01:00,930
<font color="#CCCCCC">ah this thing is on so hey it works</font>

16
00:00:56,370 --> 00:01:03,030
<font color="#E5E5E5">excellent cool so so</font><font color="#CCCCCC"> crossing code I</font>

17
00:01:00,930 --> 00:01:05,489
think<font color="#CCCCCC"> before</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> say farewell we should</font>

18
00:01:03,030 --> 00:01:09,900
<font color="#E5E5E5">think about</font><font color="#CCCCCC"> what it actually is and so I</font>

19
00:01:05,489 --> 00:01:15,170
thought I'd maybe get a<font color="#E5E5E5"> presentation</font>

20
00:01:09,900 --> 00:01:15,170
first<font color="#E5E5E5"> haha</font>

21
00:01:16,080 --> 00:01:20,939
okay so first maybe<font color="#E5E5E5"> we should talk a</font>

22
00:01:18,479 --> 00:01:24,000
little bit about what soul-crushing code

23
00:01:20,939 --> 00:01:28,320
is and so I brought<font color="#CCCCCC"> something for you</font>

24
00:01:24,000 --> 00:01:31,619
for your entertainment<font color="#CCCCCC"> and here we go</font>

25
00:01:28,320 --> 00:01:33,869
this is<font color="#E5E5E5"> some code I found in an</font><font color="#CCCCCC"> Eclipse</font>

26
00:01:31,619 --> 00:01:36,420
tutorial if you<font color="#E5E5E5"> know a little bit about</font>

27
00:01:33,869 --> 00:01:40,560
<font color="#CCCCCC">eclipse you</font><font color="#E5E5E5"> can see this by looking at</font>

28
00:01:36,420 --> 00:01:43,979
<font color="#E5E5E5">this icing here</font><font color="#CCCCCC"> yeah and this actually</font><font color="#E5E5E5"> I</font>

29
00:01:40,560 --> 00:01:46,439
mean I have no idea<font color="#CCCCCC"> what that this does</font>

30
00:01:43,979 --> 00:01:49,710
you know you have this<font color="#E5E5E5"> adapter</font><font color="#CCCCCC"> Factory</font>

31
00:01:46,439 --> 00:01:53,070
which<font color="#CCCCCC"> is really like okay and then we</font>

32
00:01:49,710 --> 00:01:57,689
get an<font color="#E5E5E5"> adapter and there's lots of stuff</font>

33
00:01:53,070 --> 00:02:00,508
going<font color="#CCCCCC"> on but</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> actually is this doing</font>

34
00:01:57,689 --> 00:02:03,750
so there's<font color="#CCCCCC"> two do okay this</font><font color="#E5E5E5"> gives a</font>

35
00:02:00,509 --> 00:02:07,049
hunch<font color="#E5E5E5"> at this might be this famous to do</font>

36
00:02:03,750 --> 00:02:09,239
example<font color="#E5E5E5"> but then I have no idea what's</font>

37
00:02:07,049 --> 00:02:10,920
happening here but maybe that's just

38
00:02:09,239 --> 00:02:12,209
<font color="#CCCCCC">eclipse right in</font><font color="#E5E5E5"> Eclipse everything as</font>

39
00:02:10,919 --> 00:02:16,929
an adapter for

40
00:02:12,209 --> 00:02:18,700
<font color="#E5E5E5">yeah okay maybe so okay</font><font color="#CCCCCC"> I had expected</font>

41
00:02:16,930 --> 00:02:20,709
you to say something<font color="#E5E5E5"> like this so I</font>

42
00:02:18,700 --> 00:02:23,469
thought I'd bring another example<font color="#E5E5E5"> and</font>

43
00:02:20,709 --> 00:02:27,639
<font color="#E5E5E5">this actually</font><font color="#CCCCCC"> is from an open source</font>

44
00:02:23,469 --> 00:02:31,060
project<font color="#CCCCCC"> and this actually isn't native</font>

45
00:02:27,639 --> 00:02:33,549
query interpreter initiator<font color="#CCCCCC"> I also want</font>

46
00:02:31,060 --> 00:02:35,769
an interpreter initiator<font color="#CCCCCC"> who doesn't</font>

47
00:02:33,549 --> 00:02:39,400
and also it's a session factory service

48
00:02:35,769 --> 00:02:41,650
initiator<font color="#E5E5E5"> wow I'm getting impressed</font><font color="#CCCCCC"> so</font>

49
00:02:39,400 --> 00:02:44,079
and then it also does lots<font color="#E5E5E5"> of stuff and</font>

50
00:02:41,650 --> 00:02:46,030
then okay we have initiate service and

51
00:02:44,079 --> 00:02:49,659
then we have another initiate service

52
00:02:46,030 --> 00:02:56,439
and then at the end<font color="#CCCCCC"> Wow</font><font color="#E5E5E5"> we have this get</font>

53
00:02:49,659 --> 00:02:58,269
service initiated well<font color="#CCCCCC"> okay so fine</font><font color="#E5E5E5"> but</font>

54
00:02:56,439 --> 00:03:00,489
I mean<font color="#E5E5E5"> that's just a bunch of kids doing</font>

55
00:02:58,269 --> 00:03:03,519
<font color="#E5E5E5">open source software right yeah those</font>

56
00:03:00,489 --> 00:03:04,510
are all hobbyists right<font color="#CCCCCC"> so</font><font color="#E5E5E5"> I mean what</font>

57
00:03:03,519 --> 00:03:07,329
would<font color="#E5E5E5"> you expect</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> something like</font>

58
00:03:04,510 --> 00:03:11,230
<font color="#CCCCCC">that</font><font color="#E5E5E5"> right okay I brought I brought a</font>

59
00:03:07,329 --> 00:03:13,329
professional example oh<font color="#E5E5E5"> I so here's a</font>

60
00:03:11,230 --> 00:03:15,159
<font color="#E5E5E5">here's a professional example so this is</font>

61
00:03:13,329 --> 00:03:17,560
from<font color="#CCCCCC"> a</font><font color="#E5E5E5"> system that does queries of some</font>

62
00:03:15,159 --> 00:03:19,418
sort<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> there's a</font><font color="#E5E5E5"> shape and</font>

63
00:03:17,560 --> 00:03:21,280
translation from German to French to

64
00:03:19,419 --> 00:03:23,049
English in here<font color="#E5E5E5"> somewhere</font><font color="#CCCCCC"> so you can see</font>

65
00:03:21,280 --> 00:03:25,120
that<font color="#E5E5E5"> it does either full-text search or</font>

66
00:03:23,049 --> 00:03:27,220
it does<font color="#E5E5E5"> non full-text search or</font>

67
00:03:25,120 --> 00:03:29,620
<font color="#CCCCCC">something like</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so obviously in</font>

68
00:03:27,220 --> 00:03:32,919
the initialization<font color="#E5E5E5"> of some</font><font color="#CCCCCC"> C++ class it</font>

69
00:03:29,620 --> 00:03:35,799
checks<font color="#E5E5E5"> that flag and</font><font color="#CCCCCC"> instantiate some</font>

70
00:03:32,919 --> 00:03:37,989
object either to the<font color="#CCCCCC"> full-text variant</font>

71
00:03:35,799 --> 00:03:39,459
or the non full-text variant<font color="#E5E5E5"> right and</font>

72
00:03:37,989 --> 00:03:41,949
you would<font color="#CCCCCC"> think this is</font><font color="#E5E5E5"> object-oriented</font>

73
00:03:39,459 --> 00:03:43,810
design you just<font color="#E5E5E5"> go and call methods yeah</font>

74
00:03:41,949 --> 00:03:46,180
that one instance variable that you have

75
00:03:43,810 --> 00:03:48,489
there if an else is so<font color="#CCCCCC"> object-oriented</font>

76
00:03:46,180 --> 00:03:50,650
<font color="#CCCCCC">yeah well that's just</font><font color="#E5E5E5"> the constructor</font>

77
00:03:48,489 --> 00:03:52,299
<font color="#CCCCCC">right this is not</font><font color="#E5E5E5"> the bad part the bad</font>

78
00:03:50,650 --> 00:03:53,889
part is that<font color="#CCCCCC"> every single</font><font color="#E5E5E5"> method that</font>

79
00:03:52,299 --> 00:03:55,780
actually<font color="#E5E5E5"> does something like this one</font>

80
00:03:53,889 --> 00:04:00,729
<font color="#E5E5E5">looks like this right it checks that</font>

81
00:03:55,780 --> 00:04:01,530
<font color="#CCCCCC">flag again and it either calls for text</font>

82
00:04:00,729 --> 00:04:04,060
<font color="#E5E5E5">oh sure</font>

83
00:04:01,530 --> 00:04:06,370
<font color="#CCCCCC">which is</font><font color="#E5E5E5"> I guess also has something to</font>

84
00:04:04,060 --> 00:04:07,930
do<font color="#E5E5E5"> with</font><font color="#CCCCCC"> full-text search you</font><font color="#E5E5E5"> can see</font>

85
00:04:06,370 --> 00:04:11,709
that there's lines<font color="#CCCCCC"> commented</font><font color="#E5E5E5"> out and</font>

86
00:04:07,930 --> 00:04:14,349
nobody nobody remember to leave a

87
00:04:11,709 --> 00:04:16,030
comment<font color="#E5E5E5"> as to why it's commented out</font><font color="#CCCCCC"> and</font>

88
00:04:14,349 --> 00:04:18,279
you can see that this code<font color="#CCCCCC"> is really</font>

89
00:04:16,029 --> 00:04:19,839
<font color="#E5E5E5">fragile right if you want to maintain</font>

90
00:04:18,279 --> 00:04:21,940
<font color="#E5E5E5">that kind of code every method looks</font>

91
00:04:19,839 --> 00:04:24,039
like this you<font color="#E5E5E5"> always need to</font><font color="#CCCCCC"> remember to</font>

92
00:04:21,940 --> 00:04:24,920
<font color="#CCCCCC">check that flag</font><font color="#E5E5E5"> before you do anything</font>

93
00:04:24,039 --> 00:04:28,520
<font color="#E5E5E5">to be sure</font>

94
00:04:24,920 --> 00:04:31,880
that<font color="#E5E5E5"> oh I'm here or I'm there okay yeah</font>

95
00:04:28,520 --> 00:04:33,680
so I mean okay so the fact that somebody

96
00:04:31,880 --> 00:04:37,010
<font color="#E5E5E5">uses an object oriented programming</font>

97
00:04:33,680 --> 00:04:38,720
<font color="#CCCCCC">language does not necessarily imply they</font>

98
00:04:37,010 --> 00:04:41,480
actually understand what object

99
00:04:38,720 --> 00:04:44,000
orientation is all about right<font color="#CCCCCC"> so maybe</font>

100
00:04:41,480 --> 00:04:46,990
they are<font color="#CCCCCC"> just</font><font color="#E5E5E5"> crappy programmers okay</font>

101
00:04:44,000 --> 00:04:50,300
so<font color="#CCCCCC"> k happen to use this and</font><font color="#E5E5E5"> then they</font>

102
00:04:46,990 --> 00:04:51,650
messed it up on the way<font color="#E5E5E5"> you know many</font>

103
00:04:50,300 --> 00:04:55,400
non crappy programmers can produce

104
00:04:51,650 --> 00:05:01,310
crappy code<font color="#E5E5E5"> and now you're getting me</font>

105
00:04:55,400 --> 00:05:03,049
confused<font color="#CCCCCC"> I think you I have you have</font>

106
00:05:01,310 --> 00:05:06,470
another<font color="#E5E5E5"> example yes I have a much better</font>

107
00:05:03,050 --> 00:05:10,060
<font color="#CCCCCC">example here</font><font color="#E5E5E5"> a real</font><font color="#CCCCCC"> object-oriented</font>

108
00:05:06,470 --> 00:05:13,550
example so this is<font color="#CCCCCC"> finance finance</font><font color="#E5E5E5"> right</font>

109
00:05:10,060 --> 00:05:18,320
so here we<font color="#E5E5E5"> have options</font><font color="#CCCCCC"> in this case</font>

110
00:05:13,550 --> 00:05:20,690
just call options<font color="#E5E5E5"> and so the the</font>

111
00:05:18,320 --> 00:05:22,580
financial<font color="#CCCCCC"> guys want to talk about those</font>

112
00:05:20,690 --> 00:05:24,590
<font color="#E5E5E5">options but there are so</font><font color="#CCCCCC"> many different</font>

113
00:05:22,580 --> 00:05:26,539
kinds<font color="#CCCCCC"> of options so they cannot talk</font>

114
00:05:24,590 --> 00:05:28,190
about<font color="#E5E5E5"> each of them individually and so</font>

115
00:05:26,540 --> 00:05:31,190
they want to group<font color="#E5E5E5"> them together in</font>

116
00:05:28,190 --> 00:05:34,340
something<font color="#E5E5E5"> they call a basket so up here</font>

117
00:05:31,190 --> 00:05:36,590
<font color="#CCCCCC">you can see this basket</font><font color="#E5E5E5"> and it contains</font>

118
00:05:34,340 --> 00:05:39,289
Google and Facebook because they are

119
00:05:36,590 --> 00:05:40,849
sort<font color="#E5E5E5"> of like the</font><font color="#CCCCCC"> same you know so they</font>

120
00:05:39,290 --> 00:05:42,760
<font color="#E5E5E5">just</font><font color="#CCCCCC"> grouped</font><font color="#E5E5E5"> them together in this</font>

121
00:05:40,850 --> 00:05:45,920
basket and<font color="#E5E5E5"> then they want to talk about</font>

122
00:05:42,760 --> 00:05:49,520
<font color="#E5E5E5">properties of this basket of all those</font>

123
00:05:45,920 --> 00:05:52,010
options<font color="#CCCCCC"> that are contained in it and for</font>

124
00:05:49,520 --> 00:05:54,799
<font color="#E5E5E5">example here they implement this market</font>

125
00:05:52,010 --> 00:05:56,840
data and<font color="#E5E5E5"> so this is standard</font><font color="#CCCCCC"> object</font>

126
00:05:54,800 --> 00:05:59,960
<font color="#CCCCCC">oriented business like everything is a</font>

127
00:05:56,840 --> 00:06:02,179
class right<font color="#CCCCCC"> and there we</font><font color="#E5E5E5"> have two</font>

128
00:05:59,960 --> 00:06:04,190
methods in there<font color="#E5E5E5"> because that's also</font>

129
00:06:02,180 --> 00:06:06,170
standard object oriented business we

130
00:06:04,190 --> 00:06:08,990
<font color="#E5E5E5">have a class and then we</font><font color="#CCCCCC"> have methods in</font>

131
00:06:06,170 --> 00:06:12,500
there<font color="#E5E5E5"> and one of</font><font color="#CCCCCC"> the first</font><font color="#E5E5E5"> method gets</font>

132
00:06:08,990 --> 00:06:14,390
<font color="#E5E5E5">but just gives us the</font><font color="#CCCCCC"> spot price</font><font color="#E5E5E5"> so all</font>

133
00:06:12,500 --> 00:06:17,060
<font color="#E5E5E5">of these options have a number in the</font>

134
00:06:14,390 --> 00:06:21,469
real world<font color="#CCCCCC"> and that's why they number</font>

135
00:06:17,060 --> 00:06:24,290
<font color="#E5E5E5">this</font><font color="#CCCCCC"> year and for the fun they call this</font>

136
00:06:21,470 --> 00:06:26,540
<font color="#E5E5E5">C column I have no idea why this seems</font>

137
00:06:24,290 --> 00:06:29,150
to<font color="#CCCCCC"> be a French word for</font><font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> know</font>

138
00:06:26,540 --> 00:06:31,280
<font color="#E5E5E5">what it means but yeah just go with this</font>

139
00:06:29,150 --> 00:06:33,020
<font color="#E5E5E5">so so this maturity thing that's the</font>

140
00:06:31,280 --> 00:06:36,469
date at which point the option expires

141
00:06:33,020 --> 00:06:38,248
<font color="#CCCCCC">yeah so</font><font color="#E5E5E5"> that's for the volatility so you</font>

142
00:06:36,470 --> 00:06:41,519
get the volatility

143
00:06:38,249 --> 00:06:45,299
for an option<font color="#E5E5E5"> and option is defined by</font>

144
00:06:41,519 --> 00:06:48,869
the underlying asset and by the date

145
00:06:45,299 --> 00:06:51,349
it's due and<font color="#E5E5E5"> also by the price</font><font color="#CCCCCC"> it's</font>

146
00:06:48,869 --> 00:06:53,999
supposed to have them and that's what is

147
00:06:51,349 --> 00:06:56,069
encoded<font color="#CCCCCC"> here so we have the option with</font>

148
00:06:53,999 --> 00:06:58,679
this long and then we have the maturity

149
00:06:56,069 --> 00:07:01,909
<font color="#E5E5E5">which is a point in time so we can</font>

150
00:06:58,679 --> 00:07:04,469
<font color="#CCCCCC">properly use a double for</font><font color="#E5E5E5"> this I</font><font color="#CCCCCC"> think</font>

151
00:07:01,909 --> 00:07:07,679
<font color="#E5E5E5">and then we have the strike which</font><font color="#CCCCCC"> is a</font>

152
00:07:04,469 --> 00:07:10,199
price<font color="#E5E5E5"> and probably some of</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> know that</font>

153
00:07:07,679 --> 00:07:12,599
it's<font color="#E5E5E5"> not a very good idea to deal with</font>

154
00:07:10,199 --> 00:07:15,059
<font color="#CCCCCC">money in terms</font><font color="#E5E5E5"> of doubles but on the</font>

155
00:07:12,599 --> 00:07:19,589
other<font color="#E5E5E5"> hand it's fairly</font><font color="#CCCCCC"> common in banking</font>

156
00:07:15,059 --> 00:07:20,839
<font color="#E5E5E5">so let's do this here as well okay fine</font>

157
00:07:19,589 --> 00:07:24,779
<font color="#CCCCCC">so yeah that's it</font>

158
00:07:20,839 --> 00:07:26,669
<font color="#E5E5E5">yeah and then what what they</font><font color="#CCCCCC"> actually</font>

159
00:07:24,779 --> 00:07:29,579
want to do so they don't only want<font color="#E5E5E5"> to</font>

160
00:07:26,669 --> 00:07:31,769
look at the world as it is<font color="#E5E5E5"> but</font><font color="#CCCCCC"> you know</font>

161
00:07:29,579 --> 00:07:35,399
those guys with<font color="#E5E5E5"> the suspenders you know</font>

162
00:07:31,769 --> 00:07:37,379
they want to<font color="#E5E5E5"> and I love analyze and see</font>

163
00:07:35,399 --> 00:07:39,509
what what might happen if something

164
00:07:37,379 --> 00:07:42,509
<font color="#E5E5E5">would happen</font><font color="#CCCCCC"> you know</font><font color="#E5E5E5"> so they want to</font>

165
00:07:39,509 --> 00:07:44,429
<font color="#E5E5E5">play what if games and for this</font><font color="#CCCCCC"> what-if</font>

166
00:07:42,509 --> 00:07:47,369
game here and<font color="#E5E5E5"> they take the spot price</font>

167
00:07:44,429 --> 00:07:49,708
<font color="#E5E5E5">and they actually want to shift it so</font>

168
00:07:47,369 --> 00:07:51,449
they want<font color="#E5E5E5"> to say what if the spot price</font>

169
00:07:49,709 --> 00:07:55,469
were different and what would<font color="#E5E5E5"> happen</font>

170
00:07:51,449 --> 00:07:58,349
then with my options<font color="#CCCCCC"> right and here</font><font color="#E5E5E5"> they</font>

171
00:07:55,469 --> 00:08:01,619
just<font color="#CCCCCC"> you know so if you want to modify</font>

172
00:07:58,349 --> 00:08:03,779
something<font color="#E5E5E5"> in object orientation you</font>

173
00:08:01,619 --> 00:08:06,029
write a derived class<font color="#E5E5E5"> and this</font><font color="#CCCCCC"> is the</font>

174
00:08:03,779 --> 00:08:09,119
derived<font color="#E5E5E5"> class spot shifted market data</font>

175
00:08:06,029 --> 00:08:12,179
and<font color="#E5E5E5"> this derived class overrides the get</font>

176
00:08:09,119 --> 00:08:17,339
spot method and it takes the value<font color="#E5E5E5"> of</font>

177
00:08:12,179 --> 00:08:20,549
the of the parent class and multiplies

178
00:08:17,339 --> 00:08:23,519
it<font color="#E5E5E5"> with factor</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> sounds</font>

179
00:08:20,549 --> 00:08:25,258
straightforward so far and then of

180
00:08:23,519 --> 00:08:27,989
<font color="#CCCCCC">course they don't only</font><font color="#E5E5E5"> want to multiply</font>

181
00:08:25,259 --> 00:08:31,199
<font color="#E5E5E5">this with a factor but they also want to</font>

182
00:08:27,989 --> 00:08:34,438
do other modifications<font color="#CCCCCC"> and I want to be</font>

183
00:08:31,199 --> 00:08:36,750
able to<font color="#E5E5E5"> do all these</font><font color="#CCCCCC"> modifications</font>

184
00:08:34,438 --> 00:08:38,370
without recompiling so they want to play

185
00:08:36,750 --> 00:08:41,068
<font color="#E5E5E5">around with these and they don't want to</font>

186
00:08:38,370 --> 00:08:43,110
recompile<font color="#E5E5E5"> their code every</font><font color="#CCCCCC"> time they</font>

187
00:08:41,068 --> 00:08:46,259
change<font color="#E5E5E5"> something</font><font color="#CCCCCC"> so they want</font><font color="#E5E5E5"> to have a</font>

188
00:08:43,110 --> 00:08:48,870
dynamically configurable code base<font color="#CCCCCC"> so to</font>

189
00:08:46,259 --> 00:08:50,910
speak or dynamically<font color="#E5E5E5"> configurable market</font>

190
00:08:48,870 --> 00:08:52,090
data<font color="#CCCCCC"> and if you look this up in the</font>

191
00:08:50,910 --> 00:08:54,990
<font color="#E5E5E5">object-oriented</font>

192
00:08:52,090 --> 00:08:58,000
literature<font color="#E5E5E5"> you come up</font><font color="#CCCCCC"> with the</font>

193
00:08:54,990 --> 00:09:00,220
decorator<font color="#E5E5E5"> pattern and so the decorator</font>

194
00:08:58,000 --> 00:09:03,460
pattern<font color="#E5E5E5"> is something that allows you to</font>

195
00:09:00,220 --> 00:09:05,560
<font color="#E5E5E5">dynamically modify your code</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> you have</font>

196
00:09:03,460 --> 00:09:07,420
a component<font color="#CCCCCC"> and then you derive a</font>

197
00:09:05,560 --> 00:09:09,939
decorator<font color="#E5E5E5"> and the decorator as a</font>

198
00:09:07,420 --> 00:09:13,449
delegate<font color="#CCCCCC"> to something else you want to</font>

199
00:09:09,940 --> 00:09:16,900
plug in<font color="#E5E5E5"> basically and this</font><font color="#CCCCCC"> is how they</font>

200
00:09:13,450 --> 00:09:19,120
implemented<font color="#E5E5E5"> the delegate so they wrote</font>

201
00:09:16,900 --> 00:09:23,470
the decorator as a derived class<font color="#E5E5E5"> and</font>

202
00:09:19,120 --> 00:09:26,500
then they have<font color="#CCCCCC"> their there they have the</font>

203
00:09:23,470 --> 00:09:30,610
the real object in there and for the<font color="#E5E5E5"> get</font>

204
00:09:26,500 --> 00:09:32,470
spot method<font color="#E5E5E5"> here they</font><font color="#CCCCCC"> just ask the get</font>

205
00:09:30,610 --> 00:09:37,150
spot method of the underlying object

206
00:09:32,470 --> 00:09:40,660
<font color="#CCCCCC">fair</font><font color="#E5E5E5"> enough and now going back to the</font>

207
00:09:37,150 --> 00:09:45,930
baskets where I started<font color="#E5E5E5"> out initially so</font>

208
00:09:40,660 --> 00:09:48,430
what they did<font color="#E5E5E5"> in this one derived</font>

209
00:09:45,930 --> 00:09:52,719
<font color="#E5E5E5">modification here they multiplied with a</font>

210
00:09:48,430 --> 00:09:56,160
factor<font color="#E5E5E5"> and now in the basket they they</font>

211
00:09:52,720 --> 00:09:59,560
get here here they get<font color="#E5E5E5"> a bunch of of</font>

212
00:09:56,160 --> 00:10:01,750
options<font color="#CCCCCC"> say or a bunch of assets</font><font color="#E5E5E5"> and now</font>

213
00:09:59,560 --> 00:10:04,930
that I want<font color="#CCCCCC"> to calculate this for all</font><font color="#E5E5E5"> of</font>

214
00:10:01,750 --> 00:10:07,330
them and they go into<font color="#E5E5E5"> this recursively</font>

215
00:10:04,930 --> 00:10:09,280
and it's very hard to<font color="#E5E5E5"> see here but what</font>

216
00:10:07,330 --> 00:10:10,150
<font color="#E5E5E5">actually happens is they go into this</font>

217
00:10:09,280 --> 00:10:13,959
recursively

218
00:10:10,150 --> 00:10:16,150
and and do this<font color="#E5E5E5"> this modified operation</font>

219
00:10:13,960 --> 00:10:18,370
for all of them and<font color="#E5E5E5"> because of late</font>

220
00:10:16,150 --> 00:10:21,670
<font color="#CCCCCC">binding it happens that they keep</font>

221
00:10:18,370 --> 00:10:24,100
<font color="#E5E5E5">getting through this upper method again</font>

222
00:10:21,670 --> 00:10:27,699
and<font color="#E5E5E5"> again so adding the factor again and</font>

223
00:10:24,100 --> 00:10:29,620
<font color="#E5E5E5">again</font><font color="#CCCCCC"> and of course they did not</font><font color="#E5E5E5"> figure</font>

224
00:10:27,700 --> 00:10:32,230
this out by looking<font color="#E5E5E5"> at</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> code because</font>

225
00:10:29,620 --> 00:10:34,960
like I said<font color="#E5E5E5"> really hard to understand</font>

226
00:10:32,230 --> 00:10:36,820
and of course this is all just small

227
00:10:34,960 --> 00:10:40,630
snippets of<font color="#E5E5E5"> the code but this is the</font>

228
00:10:36,820 --> 00:10:43,060
essence<font color="#CCCCCC"> but</font><font color="#E5E5E5"> they found this because the</font>

229
00:10:40,630 --> 00:10:46,830
values were incorrect<font color="#E5E5E5"> right and so what</font>

230
00:10:43,060 --> 00:10:50,890
they did<font color="#CCCCCC"> is they</font><font color="#E5E5E5"> compensated for this</font>

231
00:10:46,830 --> 00:10:53,200
and for<font color="#E5E5E5"> example here is</font><font color="#CCCCCC"> the most</font>

232
00:10:50,890 --> 00:10:56,310
interesting<font color="#E5E5E5"> part I think does the first</font>

233
00:10:53,200 --> 00:10:59,710
market data derive from the second one

234
00:10:56,310 --> 00:11:01,839
so they check whether they have this

235
00:10:59,710 --> 00:11:07,150
chain going<font color="#E5E5E5"> on and then they do</font>

236
00:11:01,840 --> 00:11:09,220
<font color="#CCCCCC">something differently well I mean this</font>

237
00:11:07,150 --> 00:11:12,250
is production<font color="#E5E5E5"> code right and this is</font>

238
00:11:09,220 --> 00:11:14,530
still in<font color="#CCCCCC"> operation and probably this</font>

239
00:11:12,250 --> 00:11:17,110
method by now is like hundreds of lines

240
00:11:14,530 --> 00:11:24,699
long because they had so many educators

241
00:11:17,110 --> 00:11:26,680
<font color="#E5E5E5">they need to compensate for well yeah so</font>

242
00:11:24,700 --> 00:11:28,120
you can imagine<font color="#E5E5E5"> that</font><font color="#CCCCCC"> but but</font><font color="#E5E5E5"> I mean it's</font>

243
00:11:26,680 --> 00:11:30,520
obvious they just shouldn't<font color="#CCCCCC"> have done</font>

244
00:11:28,120 --> 00:11:36,880
this in<font color="#E5E5E5"> C++</font><font color="#CCCCCC"> or using object-oriented</font>

245
00:11:30,520 --> 00:11:39,370
<font color="#E5E5E5">programming right so absolute lights on</font>

246
00:11:36,880 --> 00:11:40,780
<font color="#E5E5E5">this you have people should have used</font>

247
00:11:39,370 --> 00:11:43,960
functional programming<font color="#CCCCCC"> right</font><font color="#E5E5E5"> which is</font>

248
00:11:40,780 --> 00:11:47,110
<font color="#E5E5E5">great</font><font color="#CCCCCC"> I forget</font><font color="#E5E5E5"> this yeah functional</font>

249
00:11:43,960 --> 00:11:48,790
<font color="#E5E5E5">programming person here</font><font color="#CCCCCC"> on stage</font><font color="#E5E5E5"> so</font>

250
00:11:47,110 --> 00:11:50,800
function programming has all these

251
00:11:48,790 --> 00:11:52,959
<font color="#E5E5E5">advantages</font><font color="#CCCCCC"> right it you can you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> have</font>

252
00:11:50,800 --> 00:11:54,219
<font color="#E5E5E5">an immutable data immutable data means</font>

253
00:11:52,960 --> 00:11:55,960
you have less<font color="#E5E5E5"> coupling you don't have</font>

254
00:11:54,220 --> 00:11:58,630
these complicated effects<font color="#E5E5E5"> going on that</font>

255
00:11:55,960 --> 00:12:00,190
you saw earlier maybe you can function

256
00:11:58,630 --> 00:12:02,350
program he's very close to mathematics

257
00:12:00,190 --> 00:12:04,210
so you can apply formal verification<font color="#CCCCCC"> and</font>

258
00:12:02,350 --> 00:12:05,860
<font color="#CCCCCC">that's carry yeah and you can use all</font>

259
00:12:04,210 --> 00:12:08,050
<font color="#E5E5E5">these great mathematical</font><font color="#CCCCCC"> things in there</font>

260
00:12:05,860 --> 00:12:09,670
you<font color="#CCCCCC"> can have kettle morphisms you can</font>

261
00:12:08,050 --> 00:12:13,540
have<font color="#E5E5E5"> by functors that's my new favorite</font>

262
00:12:09,670 --> 00:12:14,979
thing<font color="#CCCCCC"> monads</font><font color="#E5E5E5"> monadic</font><font color="#CCCCCC"> pro functors is</font>

263
00:12:13,540 --> 00:12:16,120
also something<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we've been using</font>

264
00:12:14,980 --> 00:12:17,710
lately that's great

265
00:12:16,120 --> 00:12:18,790
<font color="#E5E5E5">twice the arrows there's all these</font>

266
00:12:17,710 --> 00:12:20,260
wonderful<font color="#CCCCCC"> things</font><font color="#E5E5E5"> in functional</font>

267
00:12:18,790 --> 00:12:23,530
programming<font color="#CCCCCC"> and</font><font color="#E5E5E5"> they solve all of these</font>

268
00:12:20,260 --> 00:12:25,000
problems<font color="#E5E5E5"> yes I could why are you</font>

269
00:12:23,530 --> 00:12:27,040
laughing<font color="#E5E5E5"> who's laughing</font>

270
00:12:25,000 --> 00:12:30,460
I should have imagined you<font color="#E5E5E5"> saying</font>

271
00:12:27,040 --> 00:12:33,010
something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> this so but have you ever</font>

272
00:12:30,460 --> 00:12:35,800
<font color="#E5E5E5">considered</font><font color="#CCCCCC"> that you're tackling the</font>

273
00:12:33,010 --> 00:12:41,590
problem from the<font color="#CCCCCC"> wrong ankle angle I</font>

274
00:12:35,800 --> 00:12:44,890
mean you and your<font color="#E5E5E5"> horde of IT tech nerds</font>

275
00:12:41,590 --> 00:12:48,400
<font color="#CCCCCC">you're sitting in your cave hacking away</font>

276
00:12:44,890 --> 00:12:52,199
<font color="#E5E5E5">having your hood over your head and</font><font color="#CCCCCC"> just</font>

277
00:12:48,400 --> 00:12:52,199
sitting<font color="#CCCCCC"> there</font><font color="#E5E5E5"> and hacking and hacking</font>

278
00:12:52,999 --> 00:13:02,189
so that problem solved<font color="#E5E5E5"> okay yeah</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I</font>

279
00:12:57,839 --> 00:13:05,220
mean really<font color="#E5E5E5"> just</font><font color="#CCCCCC"> throwing tech up the</font>

280
00:13:02,189 --> 00:13:07,259
problem is not a solution<font color="#CCCCCC"> it's actually</font>

281
00:13:05,220 --> 00:13:08,999
part of<font color="#CCCCCC"> urban</font><font color="#E5E5E5"> Andy</font><font color="#CCCCCC"> call we're a</font>

282
00:13:07,259 --> 00:13:11,399
<font color="#CCCCCC">producing software</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> are producing</font><font color="#E5E5E5"> tech</font>

283
00:13:08,999 --> 00:13:12,120
right have you have you gone<font color="#CCCCCC"> through</font>

284
00:13:11,399 --> 00:13:13,889
this<font color="#E5E5E5"> thing here</font>

285
00:13:12,120 --> 00:13:17,040
there's check outside everywhere<font color="#E5E5E5"> that</font>

286
00:13:13,889 --> 00:13:19,319
<font color="#E5E5E5">how do you make that probably not by</font>

287
00:13:17,040 --> 00:13:23,040
sitting<font color="#CCCCCC"> in the corner and just</font><font color="#E5E5E5"> writing</font>

288
00:13:19,319 --> 00:13:26,189
hacking away<font color="#E5E5E5"> okay so have you considered</font>

289
00:13:23,040 --> 00:13:28,769
<font color="#CCCCCC">that there is more</font><font color="#E5E5E5"> to it that does</font><font color="#CCCCCC"> not</font>

290
00:13:26,189 --> 00:13:29,748
<font color="#E5E5E5">only just tech that you</font><font color="#CCCCCC"> need to talk to</font>

291
00:13:28,769 --> 00:13:33,059
each other

292
00:13:29,749 --> 00:13:35,399
<font color="#CCCCCC">mmm-hmm yesterday I saw this robot</font>

293
00:13:33,059 --> 00:13:38,219
walking<font color="#E5E5E5"> around in a circle and it said I</font>

294
00:13:35,399 --> 00:13:41,459
need new code<font color="#E5E5E5"> please talk to me right</font>

295
00:13:38,220 --> 00:13:43,589
<font color="#E5E5E5">this is something</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> we</font>

296
00:13:41,459 --> 00:13:46,768
need<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> to each other it's</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> only</font>

297
00:13:43,589 --> 00:13:48,420
<font color="#E5E5E5">tech tech it's nice and and everything</font>

298
00:13:46,769 --> 00:13:51,180
is the worst sort do you have like a

299
00:13:48,420 --> 00:13:53,430
pattern manual for that<font color="#CCCCCC"> a pattern</font><font color="#E5E5E5"> manual</font>

300
00:13:51,180 --> 00:13:59,339
yes of course there<font color="#CCCCCC"> are</font><font color="#E5E5E5"> talking patterns</font>

301
00:13:53,430 --> 00:14:03,689
actually<font color="#E5E5E5"> for people like you okay hmm so</font>

302
00:13:59,339 --> 00:14:05,699
go ahead<font color="#E5E5E5"> so educate me okay</font><font color="#CCCCCC"> so I mean</font>

303
00:14:03,689 --> 00:14:09,870
there were many approaches over<font color="#CCCCCC"> the</font>

304
00:14:05,699 --> 00:14:12,359
years<font color="#E5E5E5"> right some approaches were for</font>

305
00:14:09,870 --> 00:14:14,779
example<font color="#CCCCCC"> looking at agile software</font>

306
00:14:12,360 --> 00:14:17,430
development<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> and it says</font>

307
00:14:14,779 --> 00:14:22,860
individuals and interactions over

308
00:14:17,430 --> 00:14:25,469
processes and tools tools<font color="#E5E5E5"> tech okay so</font>

309
00:14:22,860 --> 00:14:27,959
let's talk together<font color="#E5E5E5"> and let's figure out</font>

310
00:14:25,470 --> 00:14:32,490
<font color="#E5E5E5">things okay well then does say</font><font color="#CCCCCC"> working</font>

311
00:14:27,959 --> 00:14:34,589
software<font color="#CCCCCC"> also write one of</font><font color="#E5E5E5"> for you now</font>

312
00:14:32,490 --> 00:14:37,199
says<font color="#CCCCCC"> working software</font><font color="#E5E5E5"> because of course</font>

313
00:14:34,589 --> 00:14:39,929
we also want<font color="#E5E5E5"> working</font><font color="#CCCCCC"> software right yeah</font>

314
00:14:37,199 --> 00:14:42,449
I mean<font color="#CCCCCC"> just talking</font><font color="#E5E5E5"> and no coding is</font>

315
00:14:39,929 --> 00:14:43,889
also not the<font color="#CCCCCC"> answer so anyway so last</font>

316
00:14:42,449 --> 00:14:45,540
year we were at<font color="#CCCCCC"> this</font><font color="#E5E5E5"> conference right</font>

317
00:14:43,889 --> 00:14:47,069
and you were probably talking to

318
00:14:45,540 --> 00:14:50,879
<font color="#E5E5E5">somebody but</font><font color="#CCCCCC"> I actually attended</font><font color="#E5E5E5"> the</font>

319
00:14:47,069 --> 00:14:52,679
<font color="#E5E5E5">keynote and it was by by somebody who</font>

320
00:14:50,879 --> 00:14:54,059
talked about<font color="#E5E5E5"> what worked and what were</font>

321
00:14:52,679 --> 00:14:56,459
the ongoing problems in software

322
00:14:54,059 --> 00:14:58,709
<font color="#E5E5E5">engineering</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> this was an agile</font>

323
00:14:56,459 --> 00:15:00,540
<font color="#E5E5E5">company right they do everything in an</font>

324
00:14:58,709 --> 00:15:03,540
agile manner so supposedly<font color="#E5E5E5"> they</font>

325
00:15:00,540 --> 00:15:04,889
communicate all the<font color="#CCCCCC"> time but</font><font color="#E5E5E5"> still when</font>

326
00:15:03,540 --> 00:15:05,990
they look at where they spend all of

327
00:15:04,889 --> 00:15:08,149
their<font color="#CCCCCC"> time and</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> of their</font>

328
00:15:05,990 --> 00:15:10,850
work and effort<font color="#E5E5E5"> they say that they still</font>

329
00:15:08,149 --> 00:15:13,640
spend<font color="#CCCCCC"> 53% on maintenance and complexity</font>

330
00:15:10,850 --> 00:15:15,080
<font color="#E5E5E5">and not on new features or I have no</font>

331
00:15:13,640 --> 00:15:19,010
idea what that professionalization thing

332
00:15:15,080 --> 00:15:21,050
is actually<font color="#CCCCCC"> but it takes up 1849</font><font color="#E5E5E5"> so so</font>

333
00:15:19,010 --> 00:15:23,750
<font color="#E5E5E5">so let's get back to the technical</font>

334
00:15:21,050 --> 00:15:25,819
<font color="#E5E5E5">problem shall we okay yeah so I mean we</font>

335
00:15:23,750 --> 00:15:29,209
already<font color="#E5E5E5"> saw this right on</font><font color="#CCCCCC"> the market</font>

336
00:15:25,820 --> 00:15:31,910
data<font color="#E5E5E5"> example I think much of this</font>

337
00:15:29,209 --> 00:15:37,819
maintenance<font color="#CCCCCC"> and complexity problems</font><font color="#E5E5E5"> is</font>

338
00:15:31,910 --> 00:15:40,310
caused that we're in<font color="#E5E5E5"> a world consisting</font>

339
00:15:37,820 --> 00:15:42,880
of objects and so everybody jumps on

340
00:15:40,310 --> 00:15:45,800
this object-oriented bandwagon right

341
00:15:42,880 --> 00:15:52,279
what they actually<font color="#CCCCCC"> end up</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> is</font>

342
00:15:45,800 --> 00:15:56,240
<font color="#E5E5E5">something like this okay</font><font color="#CCCCCC"> and this</font><font color="#E5E5E5"> is</font>

343
00:15:52,279 --> 00:15:58,010
<font color="#E5E5E5">sort of not helpful</font>

344
00:15:56,240 --> 00:16:00,640
so maybe but I<font color="#E5E5E5"> I would</font><font color="#CCCCCC"> like to explain</font>

345
00:15:58,010 --> 00:16:04,130
<font color="#E5E5E5">this maybe in a different way</font><font color="#CCCCCC"> so modern</font>

346
00:16:00,640 --> 00:16:05,779
object-oriented programming<font color="#CCCCCC"> well you can</font>

347
00:16:04,130 --> 00:16:06,920
all laugh<font color="#CCCCCC"> of that slide before</font><font color="#E5E5E5"> but we</font>

348
00:16:05,779 --> 00:16:09,380
really need<font color="#E5E5E5"> to understand the problem</font>

349
00:16:06,920 --> 00:16:13,579
<font color="#CCCCCC">right the technical problem is this</font>

350
00:16:09,380 --> 00:16:15,079
right<font color="#E5E5E5"> so so at the at the</font><font color="#CCCCCC"> heart of more</font>

351
00:16:13,579 --> 00:16:17,029
object-oriented programming something

352
00:16:15,079 --> 00:16:18,469
<font color="#E5E5E5">called imperative programming where all</font>

353
00:16:17,029 --> 00:16:20,899
these<font color="#E5E5E5"> objects that you showed on</font><font color="#CCCCCC"> the</font>

354
00:16:18,470 --> 00:16:23,300
<font color="#CCCCCC">previous slides they have what's called</font>

355
00:16:20,899 --> 00:16:25,579
encapsulated<font color="#CCCCCC"> state okay there's</font><font color="#E5E5E5"> some</font>

356
00:16:23,300 --> 00:16:27,410
state in there and what happens is the

357
00:16:25,579 --> 00:16:29,449
world progresses by all these<font color="#E5E5E5"> objects</font>

358
00:16:27,410 --> 00:16:31,459
sending messages to<font color="#CCCCCC"> each other</font><font color="#E5E5E5"> and as a</font>

359
00:16:29,450 --> 00:16:33,829
result of a message<font color="#E5E5E5"> some code gets</font>

360
00:16:31,459 --> 00:16:37,130
executed that modifies that<font color="#E5E5E5"> encapsulated</font>

361
00:16:33,829 --> 00:16:38,599
<font color="#E5E5E5">state now</font><font color="#CCCCCC"> the thing was</font><font color="#E5E5E5"> I mean</font>

362
00:16:37,130 --> 00:16:41,450
object-oriented<font color="#E5E5E5"> anning was originally</font>

363
00:16:38,600 --> 00:16:43,310
developed<font color="#E5E5E5"> to support simulations of the</font>

364
00:16:41,450 --> 00:16:44,959
<font color="#CCCCCC">real world</font><font color="#E5E5E5"> and the problem is that the</font>

365
00:16:43,310 --> 00:16:47,270
real world<font color="#E5E5E5"> just does not work like that</font>

366
00:16:44,959 --> 00:16:49,489
<font color="#E5E5E5">the real world is not a bunch of</font><font color="#CCCCCC"> object</font>

367
00:16:47,270 --> 00:16:50,899
sending messages to<font color="#CCCCCC"> each other so one</font>

368
00:16:49,490 --> 00:16:52,550
simple<font color="#E5E5E5"> example</font><font color="#CCCCCC"> that maybe can help</font>

369
00:16:50,899 --> 00:16:54,410
<font color="#E5E5E5">explain that is there is an elephant</font>

370
00:16:52,550 --> 00:16:57,680
speaking of elephants right yes great

371
00:16:54,410 --> 00:16:58,880
<font color="#E5E5E5">elephant slide so so there's an</font><font color="#CCCCCC"> elephant</font>

372
00:16:57,680 --> 00:17:00,560
and the elephant comes<font color="#E5E5E5"> in from the</font>

373
00:16:58,880 --> 00:17:03,110
jungle<font color="#E5E5E5"> and walks into some kind of room</font>

374
00:17:00,560 --> 00:17:05,809
<font color="#E5E5E5">right and the</font><font color="#CCCCCC"> object-oriented</font><font color="#E5E5E5"> model for</font>

375
00:17:03,110 --> 00:17:08,599
this<font color="#E5E5E5"> as well</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> the entities get models</font>

376
00:17:05,809 --> 00:17:10,490
get<font color="#E5E5E5"> good objects so the the elephant has</font>

377
00:17:08,599 --> 00:17:12,139
an object<font color="#CCCCCC"> the jungle has an object and</font>

378
00:17:10,490 --> 00:17:15,410
the room that<font color="#CCCCCC"> the elephant</font><font color="#E5E5E5"> enters has an</font>

379
00:17:12,140 --> 00:17:17,870
<font color="#E5E5E5">object that represents them and you have</font>

380
00:17:15,410 --> 00:17:19,970
the sequence<font color="#E5E5E5"> of method calls</font><font color="#CCCCCC"> or message</font>

381
00:17:17,869 --> 00:17:22,819
<font color="#CCCCCC">a sense that</font><font color="#E5E5E5"> that</font>

382
00:17:19,970 --> 00:17:24,500
to<font color="#E5E5E5"> reproduce</font><font color="#CCCCCC"> that sequence as well</font><font color="#E5E5E5"> you</font>

383
00:17:22,819 --> 00:17:27,319
know the junk that<font color="#E5E5E5"> the elephant exits</font>

384
00:17:24,500 --> 00:17:29,330
the jungle<font color="#E5E5E5"> and the elephant enters the</font>

385
00:17:27,319 --> 00:17:31,039
room<font color="#E5E5E5"> right the problem is that the</font>

386
00:17:29,330 --> 00:17:33,320
exiting<font color="#E5E5E5"> of the jungle and the entering</font>

387
00:17:31,039 --> 00:17:34,158
<font color="#E5E5E5">of</font><font color="#CCCCCC"> the room are</font><font color="#E5E5E5"> one at the same act so</font>

388
00:17:33,320 --> 00:17:36,639
the real world

389
00:17:34,159 --> 00:17:38,780
has dependencies is not just a bunch of

390
00:17:36,640 --> 00:17:41,480
isolated entities that are sending

391
00:17:38,780 --> 00:17:44,510
messages<font color="#CCCCCC"> to each other things hang</font>

392
00:17:41,480 --> 00:17:46,789
together<font color="#E5E5E5"> in the real world so if so I</font>

393
00:17:44,510 --> 00:17:48,408
think<font color="#E5E5E5"> a more useful model for</font><font color="#CCCCCC"> thinking</font>

394
00:17:46,789 --> 00:17:52,129
about programs and<font color="#E5E5E5"> how programs should</font>

395
00:17:48,409 --> 00:17:53,870
model the real world<font color="#CCCCCC"> has to do with</font><font color="#E5E5E5"> has</font>

396
00:17:52,130 --> 00:17:56,090
<font color="#CCCCCC">to do it should really</font><font color="#E5E5E5"> go through the</font>

397
00:17:53,870 --> 00:17:58,489
way that<font color="#CCCCCC"> we perceive things so if you</font>

398
00:17:56,090 --> 00:18:01,580
watch a<font color="#E5E5E5"> soccer game these days there's</font>

399
00:17:58,490 --> 00:18:04,309
lots of objects<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you see right</font><font color="#CCCCCC"> so</font>

400
00:18:01,580 --> 00:18:05,928
you see 22 players<font color="#E5E5E5"> maybe you see a ball</font>

401
00:18:04,309 --> 00:18:08,049
you see the referees<font color="#E5E5E5"> and you see lots of</font>

402
00:18:05,929 --> 00:18:09,380
<font color="#CCCCCC">people</font><font color="#E5E5E5"> in the audience</font><font color="#CCCCCC"> and they all move</font>

403
00:18:08,049 --> 00:18:11,389
now

404
00:18:09,380 --> 00:18:14,360
so they all changed their internal state

405
00:18:11,390 --> 00:18:15,830
if that's the model<font color="#E5E5E5"> that you</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> now if</font>

406
00:18:14,360 --> 00:18:17,658
you want to know what's going<font color="#CCCCCC"> on in the</font>

407
00:18:15,830 --> 00:18:19,820
football<font color="#E5E5E5"> field you need to observe</font><font color="#CCCCCC"> all</font>

408
00:18:17,659 --> 00:18:22,100
<font color="#CCCCCC">of these changes</font><font color="#E5E5E5"> but do you know what</font>

409
00:18:19,820 --> 00:18:24,049
the object<font color="#E5E5E5"> oriental is for observing</font>

410
00:18:22,100 --> 00:18:26,030
changes<font color="#E5E5E5"> something</font><font color="#CCCCCC"> called the observer</font>

411
00:18:24,049 --> 00:18:27,980
pattern<font color="#CCCCCC"> which</font><font color="#E5E5E5"> means that you register</font>

412
00:18:26,030 --> 00:18:29,120
which<font color="#CCCCCC"> each of these objects and tell</font>

413
00:18:27,980 --> 00:18:31,039
them well<font color="#E5E5E5"> you know if anything changes</font>

414
00:18:29,120 --> 00:18:33,229
with you send me a message<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> your</font>

415
00:18:31,039 --> 00:18:34,340
ball sent me a<font color="#E5E5E5"> message if you move you</font>

416
00:18:33,230 --> 00:18:35,960
know you do that with all<font color="#CCCCCC"> the players</font>

417
00:18:34,340 --> 00:18:40,580
supposedly you do that with<font color="#E5E5E5"> all the</font>

418
00:18:35,960 --> 00:18:42,020
<font color="#CCCCCC">twenty thousand audience members and so</font>

419
00:18:40,580 --> 00:18:43,850
and of course when you leave the stadium

420
00:18:42,020 --> 00:18:45,200
<font color="#CCCCCC">you</font><font color="#E5E5E5"> all sent the messages oh no I'm no</font>

421
00:18:43,850 --> 00:18:47,000
longer interested<font color="#CCCCCC"> in</font><font color="#E5E5E5"> what you're doing</font>

422
00:18:45,200 --> 00:18:49,340
<font color="#CCCCCC">right</font><font color="#E5E5E5"> the odd the world doesn't work</font>

423
00:18:47,000 --> 00:18:51,919
<font color="#CCCCCC">like that it has another problem</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font>

424
00:18:49,340 --> 00:18:54,860
all these meshes<font color="#E5E5E5"> messages will arrive in</font>

425
00:18:51,919 --> 00:18:56,659
some sort of sequential<font color="#E5E5E5"> order and that</font>

426
00:18:54,860 --> 00:18:58,789
also would<font color="#CCCCCC"> mean that with all of these</font>

427
00:18:56,659 --> 00:19:00,919
objects move<font color="#E5E5E5"> around moving around we</font>

428
00:18:58,789 --> 00:19:03,530
would observe inconsistencies all the

429
00:19:00,919 --> 00:19:05,090
time<font color="#E5E5E5"> the same way that we observed it</font>

430
00:19:03,530 --> 00:19:07,879
with the elephants going into the room

431
00:19:05,090 --> 00:19:09,620
<font color="#E5E5E5">right</font><font color="#CCCCCC"> if you</font><font color="#E5E5E5"> remember there</font><font color="#CCCCCC"> was an there</font>

432
00:19:07,880 --> 00:19:15,260
was<font color="#CCCCCC"> an inconsistent</font><font color="#E5E5E5"> state in the middle</font>

433
00:19:09,620 --> 00:19:16,908
here<font color="#E5E5E5"> which was that that after the first</font>

434
00:19:15,260 --> 00:19:19,370
<font color="#E5E5E5">step the elephant is for</font><font color="#CCCCCC"> a brief amount</font>

435
00:19:16,909 --> 00:19:21,230
<font color="#CCCCCC">of</font><font color="#E5E5E5"> time is nowhere</font><font color="#CCCCCC"> right it</font><font color="#E5E5E5"> has exited</font>

436
00:19:19,370 --> 00:19:23,510
<font color="#E5E5E5">the jungle but it has not entered the</font>

437
00:19:21,230 --> 00:19:25,700
<font color="#CCCCCC">room yet and the same is true of course</font>

438
00:19:23,510 --> 00:19:28,309
<font color="#CCCCCC">if we have</font><font color="#E5E5E5"> many moving</font><font color="#CCCCCC"> objects but yet</font>

439
00:19:25,700 --> 00:19:30,230
we<font color="#E5E5E5"> never observe like one person getting</font>

440
00:19:28,309 --> 00:19:32,510
up and<font color="#CCCCCC"> suddenly appearing in another</font>

441
00:19:30,230 --> 00:19:33,710
place or two people<font color="#E5E5E5"> appearing in the</font>

442
00:19:32,510 --> 00:19:36,770
same place at the<font color="#CCCCCC"> same time</font>

443
00:19:33,710 --> 00:19:39,320
and that's because our perceptive<font color="#CCCCCC"> a</font>

444
00:19:36,770 --> 00:19:40,850
<font color="#CCCCCC">brightest creates consistent snapshots</font>

445
00:19:39,320 --> 00:19:42,200
of what<font color="#CCCCCC"> we observe right</font><font color="#E5E5E5"> we look at</font>

446
00:19:40,850 --> 00:19:44,300
<font color="#E5E5E5">something and it gets stored in memory</font>

447
00:19:42,200 --> 00:19:46,610
<font color="#E5E5E5">and we can think about it</font><font color="#CCCCCC"> for a little a</font>

448
00:19:44,300 --> 00:19:50,180
little<font color="#E5E5E5"> amount of</font><font color="#CCCCCC"> time and</font><font color="#E5E5E5"> analyze what's</font>

449
00:19:46,610 --> 00:19:51,560
going<font color="#CCCCCC"> on and so</font><font color="#E5E5E5"> and of course you know</font>

450
00:19:50,180 --> 00:19:52,820
we remember things<font color="#CCCCCC"> that were in the</font><font color="#E5E5E5"> past</font>

451
00:19:51,560 --> 00:19:55,429
which is<font color="#E5E5E5"> also something that an</font>

452
00:19:52,820 --> 00:19:57,350
<font color="#E5E5E5">object-oriented model cannot do so I</font>

453
00:19:55,430 --> 00:19:58,760
think there's fundamental problems<font color="#CCCCCC"> with</font>

454
00:19:57,350 --> 00:20:00,560
this<font color="#CCCCCC"> object oriented model of</font>

455
00:19:58,760 --> 00:20:02,150
programming<font color="#E5E5E5"> and that's one of the</font>

456
00:20:00,560 --> 00:20:03,409
<font color="#E5E5E5">fundamental things that leads to that</font>

457
00:20:02,150 --> 00:20:05,990
soul-crushing code that we've been

458
00:20:03,410 --> 00:20:09,590
talking<font color="#CCCCCC"> about</font><font color="#E5E5E5"> yeah that</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> reminds</font>

459
00:20:05,990 --> 00:20:11,630
me<font color="#E5E5E5"> of</font><font color="#CCCCCC"> a very</font><font color="#E5E5E5"> interesting thing that lots</font>

460
00:20:09,590 --> 00:20:15,199
of<font color="#CCCCCC"> people are using and that's</font><font color="#E5E5E5"> in the UI</font>

461
00:20:11,630 --> 00:20:17,840
<font color="#E5E5E5">and it's called the MVC pattern or Model</font>

462
00:20:15,200 --> 00:20:20,360
<font color="#E5E5E5">View controller and if you have ever</font>

463
00:20:17,840 --> 00:20:22,879
worked<font color="#E5E5E5"> with this you can see here that</font>

464
00:20:20,360 --> 00:20:25,010
this all goes in circles<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you can go</font>

465
00:20:22,880 --> 00:20:27,380
in<font color="#E5E5E5"> any direction and then you end up</font>

466
00:20:25,010 --> 00:20:29,629
here again<font color="#CCCCCC"> or you go this way around</font><font color="#E5E5E5"> or</font>

467
00:20:27,380 --> 00:20:32,780
anything or follow this dashed<font color="#E5E5E5"> line and</font>

468
00:20:29,630 --> 00:20:35,330
<font color="#E5E5E5">and so you can go from anywhere to</font>

469
00:20:32,780 --> 00:20:38,540
everywhere and this leads to<font color="#E5E5E5"> the obvious</font>

470
00:20:35,330 --> 00:20:41,149
<font color="#E5E5E5">problem that if you have changes</font><font color="#CCCCCC"> in the</font>

471
00:20:38,540 --> 00:20:45,500
model<font color="#E5E5E5"> and changes in the view they need</font>

472
00:20:41,150 --> 00:20:48,590
to hopefully be corresponding or maybe

473
00:20:45,500 --> 00:20:51,410
not<font color="#E5E5E5"> and what do you do about this so</font>

474
00:20:48,590 --> 00:20:55,159
what<font color="#CCCCCC"> you end up with if you do this</font>

475
00:20:51,410 --> 00:20:58,690
enough<font color="#CCCCCC"> and if you aren't</font><font color="#E5E5E5"> very very</font>

476
00:20:55,160 --> 00:21:01,040
careful<font color="#E5E5E5"> you end up with this right</font>

477
00:20:58,690 --> 00:21:03,470
certain inbc<font color="#E5E5E5"> fraught programs have</font>

478
00:21:01,040 --> 00:21:05,570
<font color="#CCCCCC">always</font><font color="#E5E5E5"> looked</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> that right yes</font><font color="#CCCCCC"> Wow</font>

479
00:21:03,470 --> 00:21:09,590
repeals really<font color="#CCCCCC"> familiar doesn't it</font><font color="#E5E5E5"> yeah</font>

480
00:21:05,570 --> 00:21:13,340
yes<font color="#E5E5E5"> and I think that's also what Alan</font>

481
00:21:09,590 --> 00:21:16,610
Kay<font color="#E5E5E5"> was talking about back</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the day</font><font color="#CCCCCC"> so</font>

482
00:21:13,340 --> 00:21:19,220
this<font color="#E5E5E5"> is a quote from 1996 but I think</font>

483
00:21:16,610 --> 00:21:24,189
the<font color="#E5E5E5"> the paper just appeared then but the</font>

484
00:21:19,220 --> 00:21:29,780
<font color="#CCCCCC">original quote is</font><font color="#E5E5E5"> as much older and so</font>

485
00:21:24,190 --> 00:21:34,070
<font color="#E5E5E5">he said</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> oh he had those motivations</font>

486
00:21:29,780 --> 00:21:36,470
<font color="#CCCCCC">that we described here but eventually we</font>

487
00:21:34,070 --> 00:21:38,840
need to<font color="#E5E5E5"> overcome this model and</font><font color="#CCCCCC"> we need</font>

488
00:21:36,470 --> 00:21:41,630
to<font color="#E5E5E5"> find something better and eliminate</font>

489
00:21:38,840 --> 00:21:43,699
it<font color="#E5E5E5"> altogether is what he says here okay</font>

490
00:21:41,630 --> 00:21:45,530
but<font color="#E5E5E5"> that never happened right no I don't</font>

491
00:21:43,700 --> 00:21:47,299
<font color="#CCCCCC">think</font><font color="#E5E5E5"> so it never happened</font><font color="#CCCCCC"> so if these</font>

492
00:21:45,530 --> 00:21:48,710
days if you look for exam

493
00:21:47,299 --> 00:21:51,139
bowls of hot object-oriented programming

494
00:21:48,710 --> 00:21:53,539
works it always<font color="#E5E5E5"> is about encapsulated</font>

495
00:21:51,139 --> 00:21:56,209
state that Alan Kay wanted to<font color="#E5E5E5"> to get rid</font>

496
00:21:53,539 --> 00:21:57,590
of<font color="#E5E5E5"> so I think that's the first thing</font>

497
00:21:56,210 --> 00:22:00,649
when I searched for object-oriented

498
00:21:57,590 --> 00:22:02,360
<font color="#E5E5E5">examples was something with students and</font>

499
00:22:00,649 --> 00:22:05,809
you<font color="#E5E5E5"> can immediately see that</font><font color="#CCCCCC"> a lot of</font>

500
00:22:02,360 --> 00:22:07,908
<font color="#CCCCCC">attributes that you have there</font><font color="#E5E5E5"> go</font>

501
00:22:05,809 --> 00:22:09,350
through some kind of some method<font color="#CCCCCC"> that</font>

502
00:22:07,909 --> 00:22:10,700
modifies them my favorite<font color="#CCCCCC"> one is that</font>

503
00:22:09,350 --> 00:22:13,279
you<font color="#E5E5E5"> have the student and you can set the</font>

504
00:22:10,700 --> 00:22:15,499
grade point average<font color="#E5E5E5"> of the student so</font>

505
00:22:13,279 --> 00:22:17,119
<font color="#CCCCCC">you can just yeah so if you're not</font><font color="#E5E5E5"> happy</font>

506
00:22:15,499 --> 00:22:19,399
<font color="#CCCCCC">with</font><font color="#E5E5E5"> the grades that your kid is</font><font color="#CCCCCC"> getting</font>

507
00:22:17,119 --> 00:22:21,230
you just sent the object a message you

508
00:22:19,399 --> 00:22:24,709
<font color="#E5E5E5">know get your get a get a perfect GPA</font>

509
00:22:21,230 --> 00:22:26,509
there<font color="#CCCCCC"> so and and and</font><font color="#E5E5E5"> let me reiterate</font><font color="#CCCCCC"> me</font>

510
00:22:24,710 --> 00:22:27,859
call of course people<font color="#E5E5E5"> should have used</font>

511
00:22:26,509 --> 00:22:29,330
functional programming which has all

512
00:22:27,859 --> 00:22:31,699
these<font color="#E5E5E5"> simple languages</font><font color="#CCCCCC"> less complexity</font>

513
00:22:29,330 --> 00:22:33,350
higher productivity less bugs<font color="#E5E5E5"> you know</font>

514
00:22:31,700 --> 00:22:35,720
<font color="#E5E5E5">we have all these powerful type systems</font>

515
00:22:33,350 --> 00:22:37,699
we can<font color="#E5E5E5"> do property based testing</font><font color="#CCCCCC"> we can</font>

516
00:22:35,720 --> 00:22:39,590
do well goes on and on<font color="#E5E5E5"> we get more</font>

517
00:22:37,700 --> 00:22:41,659
predictable<font color="#E5E5E5"> behavior generally testing</font>

518
00:22:39,590 --> 00:22:43,759
is easier<font color="#E5E5E5"> because we don't need you know</font>

519
00:22:41,659 --> 00:22:45,739
setup and teardown methods<font color="#E5E5E5"> you get lower</font>

520
00:22:43,759 --> 00:22:48,049
couplings you have fewer dependency

521
00:22:45,739 --> 00:22:50,179
cycles<font color="#E5E5E5"> so so I didn't I didn't even say</font>

522
00:22:48,049 --> 00:22:51,619
monad right here in this list<font color="#CCCCCC"> so you get</font>

523
00:22:50,179 --> 00:22:52,759
all<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> agree you get all these</font>

524
00:22:51,619 --> 00:22:54,980
concrete advantages from<font color="#E5E5E5"> doing</font>

525
00:22:52,759 --> 00:22:56,600
<font color="#E5E5E5">functional programming right and so</font>

526
00:22:54,980 --> 00:22:58,580
that's<font color="#E5E5E5"> what</font><font color="#CCCCCC"> people should do to</font><font color="#E5E5E5"> solve</font>

527
00:22:56,600 --> 00:23:04,689
those<font color="#CCCCCC"> problems so do you remember Fred</font>

528
00:22:58,580 --> 00:23:05,869
Brooks he said there<font color="#CCCCCC"> is</font><font color="#E5E5E5"> no silver bullet</font>

529
00:23:04,690 --> 00:23:13,159
<font color="#E5E5E5">okay</font>

530
00:23:05,869 --> 00:23:18,259
so<font color="#CCCCCC"> an old</font><font color="#E5E5E5"> guy right yeah and what about</font>

531
00:23:13,159 --> 00:23:22,070
you yeah I guess I<font color="#CCCCCC"> am</font><font color="#E5E5E5"> too I'm getting</font>

532
00:23:18,259 --> 00:23:25,279
there<font color="#CCCCCC"> yeah well so book said that</font><font color="#E5E5E5"> but</font>

533
00:23:22,070 --> 00:23:27,619
he's an old<font color="#CCCCCC"> guy so let</font><font color="#E5E5E5"> me let me get you</font>

534
00:23:25,279 --> 00:23:30,109
one one<font color="#CCCCCC"> example of why that maybe is not</font>

535
00:23:27,619 --> 00:23:31,789
<font color="#E5E5E5">true so in the early</font><font color="#CCCCCC"> nineties</font><font color="#E5E5E5"> actually</font>

536
00:23:30,109 --> 00:23:33,439
there was a big study conducted by<font color="#E5E5E5"> the</font>

537
00:23:31,789 --> 00:23:34,970
US<font color="#E5E5E5"> Navy on the effectiveness of</font>

538
00:23:33,440 --> 00:23:37,539
<font color="#E5E5E5">different programming languages and they</font>

539
00:23:34,970 --> 00:23:39,679
had one set problem<font color="#E5E5E5"> that was about</font>

540
00:23:37,539 --> 00:23:42,169
<font color="#E5E5E5">determining the regions of influence of</font>

541
00:23:39,679 --> 00:23:44,330
warships and they had<font color="#E5E5E5"> different teams</font>

542
00:23:42,169 --> 00:23:48,049
<font color="#CCCCCC">write solutions for their problem in</font>

543
00:23:44,330 --> 00:23:49,908
different<font color="#E5E5E5"> languages and what they ended</font>

544
00:23:48,049 --> 00:23:51,559
up<font color="#CCCCCC"> doing is</font><font color="#E5E5E5"> also is is they gave that</font>

545
00:23:49,909 --> 00:23:53,480
<font color="#CCCCCC">also</font><font color="#E5E5E5"> to people</font><font color="#CCCCCC"> who were using functional</font>

546
00:23:51,559 --> 00:23:55,639
programming specifically in the Haskell

547
00:23:53,480 --> 00:23:57,590
programming language which<font color="#E5E5E5"> was still</font>

548
00:23:55,639 --> 00:24:00,979
<font color="#E5E5E5">pretty young back then</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you can see</font>

549
00:23:57,590 --> 00:24:03,590
well the solution Haskell

550
00:24:00,980 --> 00:24:05,900
<font color="#E5E5E5">is much</font><font color="#CCCCCC"> shorter than</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> solution you</font>

551
00:24:03,590 --> 00:24:08,418
know C++<font color="#CCCCCC"> definitely you know less than</font>

552
00:24:05,900 --> 00:24:10,610
<font color="#CCCCCC">ten times</font><font color="#E5E5E5"> as short then the C++ solution</font>

553
00:24:08,419 --> 00:24:12,290
I think Java wasn't as big then but I

554
00:24:10,610 --> 00:24:16,309
<font color="#E5E5E5">think the factor would also be around</font>

555
00:24:12,290 --> 00:24:18,710
<font color="#E5E5E5">between three and ten somewhere also</font>

556
00:24:16,309 --> 00:24:20,360
what's<font color="#CCCCCC"> maybe interesting is that</font><font color="#E5E5E5"> there</font>

557
00:24:18,710 --> 00:24:22,970
are two<font color="#CCCCCC"> Haskell solutions one at the top</font>

558
00:24:20,360 --> 00:24:24,889
and<font color="#CCCCCC"> one at the bottom and probably they</font>

559
00:24:22,970 --> 00:24:26,390
just<font color="#CCCCCC"> split the code so the numbers look</font>

560
00:24:24,890 --> 00:24:28,040
nice yeah yeah you<font color="#E5E5E5"> would need a cannot</font>

561
00:24:26,390 --> 00:24:30,320
that would be interesting but<font color="#CCCCCC"> what they</font>

562
00:24:28,040 --> 00:24:32,780
did<font color="#CCCCCC"> is they had</font><font color="#E5E5E5"> they had a Haskell</font>

563
00:24:30,320 --> 00:24:34,639
expert<font color="#E5E5E5"> write a solution and then there</font>

564
00:24:32,780 --> 00:24:35,928
also<font color="#E5E5E5"> gave the</font><font color="#CCCCCC"> solution to a student I</font>

565
00:24:34,640 --> 00:24:39,980
think<font color="#E5E5E5"> will learn Haskell for two or</font>

566
00:24:35,929 --> 00:24:41,750
three weeks<font color="#E5E5E5"> and was will also wrote a</font>

567
00:24:39,980 --> 00:24:43,669
solution and you if you look at

568
00:24:41,750 --> 00:24:45,200
development time<font color="#E5E5E5"> so somebody took</font><font color="#CCCCCC"> ten</font>

569
00:24:43,669 --> 00:24:48,559
<font color="#E5E5E5">hours and somebody took eight hours and</font>

570
00:24:45,200 --> 00:24:50,720
the eight hours is this student<font color="#CCCCCC"> that's</font>

571
00:24:48,559 --> 00:24:52,730
because the the<font color="#E5E5E5"> Haskell expert Haskell</font>

572
00:24:50,720 --> 00:24:54,590
expert<font color="#E5E5E5"> tried to put many interesting</font>

573
00:24:52,730 --> 00:24:56,900
flourishes and super cool programming

574
00:24:54,590 --> 00:24:58,549
techniques into the program but<font color="#CCCCCC"> the</font>

575
00:24:56,900 --> 00:25:01,190
student was actually<font color="#E5E5E5"> doing pretty well</font>

576
00:24:58,549 --> 00:25:02,510
so if that is not<font color="#E5E5E5"> a silver if that's not</font>

577
00:25:01,190 --> 00:25:06,169
what a silver bullet<font color="#E5E5E5"> looks like I don't</font>

578
00:25:02,510 --> 00:25:09,020
<font color="#E5E5E5">know what would okay so the Yale study</font>

579
00:25:06,169 --> 00:25:11,270
right<font color="#E5E5E5"> yeah they got a fixed set</font><font color="#CCCCCC"> of</font>

580
00:25:09,020 --> 00:25:13,639
instructions<font color="#E5E5E5"> and they just had to code</font>

581
00:25:11,270 --> 00:25:17,418
those instructions do I<font color="#E5E5E5"> remember I</font>

582
00:25:13,640 --> 00:25:19,549
<font color="#CCCCCC">remember</font><font color="#E5E5E5"> that yeah yeah okay so do you</font>

583
00:25:17,419 --> 00:25:22,400
ever<font color="#E5E5E5"> experience that in the</font><font color="#CCCCCC"> real world</font>

584
00:25:19,549 --> 00:25:25,760
<font color="#E5E5E5">getting</font><font color="#CCCCCC"> a fixed</font><font color="#E5E5E5"> set of instructions from</font>

585
00:25:22,400 --> 00:25:29,540
your client and then just implementing

586
00:25:25,760 --> 00:25:32,030
this and they never<font color="#CCCCCC"> change</font><font color="#E5E5E5"> their mind</font>

587
00:25:29,540 --> 00:25:38,290
they never come up<font color="#CCCCCC"> with new ideas they</font>

588
00:25:32,030 --> 00:25:38,290
never like say oh<font color="#E5E5E5"> I forgot</font><font color="#CCCCCC"> something</font>

589
00:25:38,830 --> 00:25:47,230
<font color="#E5E5E5">well I actually don't experiment and say</font>

590
00:25:43,900 --> 00:25:50,120
let me<font color="#CCCCCC"> think about it</font><font color="#E5E5E5"> maybe you can</font>

591
00:25:47,230 --> 00:25:52,910
that's what we need to consider<font color="#E5E5E5"> as well</font>

592
00:25:50,120 --> 00:25:55,729
coming<font color="#E5E5E5"> back to the elephant right okay</font>

593
00:25:52,910 --> 00:25:57,679
talking<font color="#CCCCCC"> to</font><font color="#E5E5E5"> each other everybody</font><font color="#CCCCCC"> has</font>

594
00:25:55,730 --> 00:26:03,049
<font color="#E5E5E5">different</font><font color="#CCCCCC"> ideas start with that agile</font>

595
00:25:57,679 --> 00:26:05,809
stuff again everybody has different

596
00:26:03,049 --> 00:26:08,179
<font color="#CCCCCC">ideas when they look at something</font><font color="#E5E5E5"> and</font>

597
00:26:05,809 --> 00:26:10,399
everybody describes things differently

598
00:26:08,179 --> 00:26:11,600
<font color="#CCCCCC">and so what we need to</font><font color="#E5E5E5"> do is to figure</font>

599
00:26:10,400 --> 00:26:14,659
this out together

600
00:26:11,600 --> 00:26:16,488
<font color="#E5E5E5">you know coding a bit talking a bit</font>

601
00:26:14,659 --> 00:26:18,289
looking a bit coding a bit and so this

602
00:26:16,489 --> 00:26:21,409
needs to go hand in hand<font color="#E5E5E5"> and this</font><font color="#CCCCCC"> is</font>

603
00:26:18,289 --> 00:26:24,080
sort of agile you know so that doesn't

604
00:26:21,409 --> 00:26:26,090
mean scrum and you know standing in a

605
00:26:24,080 --> 00:26:29,239
circle<font color="#CCCCCC"> every day as something relaxed</font>

606
00:26:26,090 --> 00:26:32,509
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> so so I I personally I like</font><font color="#E5E5E5"> to</font>

607
00:26:29,239 --> 00:26:35,029
communicate with<font color="#E5E5E5"> code</font><font color="#CCCCCC"> yeah so you think</font>

608
00:26:32,509 --> 00:26:36,529
<font color="#E5E5E5">example that we that we</font><font color="#CCCCCC"> were</font><font color="#E5E5E5"> working on</font>

609
00:26:35,029 --> 00:26:39,649
their project<font color="#CCCCCC"> oh</font><font color="#E5E5E5"> it wasn't a</font>

610
00:26:36,529 --> 00:26:41,599
semiconductor Factory<font color="#CCCCCC"> so this was</font><font color="#E5E5E5"> how so</font>

611
00:26:39,649 --> 00:26:44,209
really<font color="#CCCCCC"> is that serious</font><font color="#E5E5E5"> business</font><font color="#CCCCCC"> I think</font>

612
00:26:41,599 --> 00:26:45,979
<font color="#CCCCCC">anyway so when we started this I don't</font>

613
00:26:44,210 --> 00:26:47,210
know<font color="#E5E5E5"> well you all know this</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> when</font>

614
00:26:45,979 --> 00:26:48,529
we<font color="#CCCCCC"> started this I thought</font><font color="#E5E5E5"> well</font>

615
00:26:47,210 --> 00:26:50,539
semiconductor the way it gets<font color="#CCCCCC"> made</font>

616
00:26:48,529 --> 00:26:54,440
there's a big machine<font color="#CCCCCC"> you put in a piece</font>

617
00:26:50,539 --> 00:26:57,139
<font color="#E5E5E5">of silicon and you go like</font><font color="#CCCCCC"> this and and</font>

618
00:26:54,440 --> 00:26:59,590
<font color="#E5E5E5">junk and out comes a microprocessor</font><font color="#CCCCCC"> and</font>

619
00:26:57,139 --> 00:27:02,149
it doesn't<font color="#E5E5E5"> doesn't really work that way</font>

620
00:26:59,590 --> 00:27:04,509
one<font color="#E5E5E5"> of the reasons is just that a modern</font>

621
00:27:02,149 --> 00:27:06,859
the modern chip consists of many<font color="#E5E5E5"> layers</font>

622
00:27:04,509 --> 00:27:08,119
another one is that<font color="#E5E5E5"> there's just</font><font color="#CCCCCC"> many</font>

623
00:27:06,859 --> 00:27:09,859
different production steps that are

624
00:27:08,119 --> 00:27:11,658
necessary<font color="#CCCCCC"> for making</font><font color="#E5E5E5"> even a single layer</font>

625
00:27:09,859 --> 00:27:13,489
and some<font color="#E5E5E5"> of the machines that make a</font>

626
00:27:11,659 --> 00:27:16,369
layer are so expensive<font color="#CCCCCC"> that you can't</font>

627
00:27:13,489 --> 00:27:18,649
<font color="#E5E5E5">just make</font><font color="#CCCCCC"> an assembly line and also a</font>

628
00:27:16,369 --> 00:27:20,539
lot of<font color="#E5E5E5"> things break tend to all the time</font>

629
00:27:18,649 --> 00:27:22,129
in a semiconductor<font color="#E5E5E5"> factory so it</font><font color="#CCCCCC"> makes</font>

630
00:27:20,539 --> 00:27:24,259
<font color="#E5E5E5">no sense to just have an</font><font color="#CCCCCC"> assembly line</font>

631
00:27:22,129 --> 00:27:26,779
<font color="#CCCCCC">and</font><font color="#E5E5E5"> pushes</font><font color="#CCCCCC"> things through that but</font>

632
00:27:24,259 --> 00:27:27,979
things<font color="#CCCCCC"> just move around</font><font color="#E5E5E5"> among the</font>

633
00:27:26,779 --> 00:27:30,769
<font color="#E5E5E5">different machines</font><font color="#CCCCCC"> in a semiconductor</font>

634
00:27:27,979 --> 00:27:33,109
<font color="#CCCCCC">factory right and so what's important is</font>

635
00:27:30,769 --> 00:27:35,539
that each chip<font color="#CCCCCC"> under or</font><font color="#E5E5E5"> each wafer</font>

636
00:27:33,109 --> 00:27:37,220
<font color="#CCCCCC">undergoes a sequence of steps in the</font>

637
00:27:35,539 --> 00:27:39,499
<font color="#E5E5E5">factory and that needs to</font><font color="#CCCCCC"> be managed</font><font color="#E5E5E5"> and</font>

638
00:27:37,220 --> 00:27:41,119
those steps it's it's typically<font color="#E5E5E5"> for for</font>

639
00:27:39,499 --> 00:27:43,429
big microprocessors<font color="#E5E5E5"> that might be like</font><font color="#CCCCCC"> a</font>

640
00:27:41,119 --> 00:27:45,529
thousand steps<font color="#E5E5E5"> so you need to</font><font color="#CCCCCC"> manage</font>

641
00:27:43,429 --> 00:27:47,629
something<font color="#E5E5E5"> that's that's called a route</font>

642
00:27:45,529 --> 00:27:49,460
which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> well just a sequence of</font>

643
00:27:47,629 --> 00:27:52,039
<font color="#CCCCCC">operations and now here there's a bunch</font>

644
00:27:49,460 --> 00:27:53,599
of Haskell<font color="#E5E5E5"> code</font><font color="#CCCCCC"> atha</font><font color="#E5E5E5"> is great because</font>

645
00:27:52,039 --> 00:27:55,999
<font color="#E5E5E5">the programs are so short that they fit</font>

646
00:27:53,599 --> 00:27:58,309
<font color="#CCCCCC">on slides</font><font color="#E5E5E5"> but if there is something</font>

647
00:27:55,999 --> 00:28:01,729
unclear about that<font color="#E5E5E5"> code</font><font color="#CCCCCC"> then I invite</font>

648
00:27:58,309 --> 00:28:03,259
<font color="#E5E5E5">you to interrupt me and ask so first of</font>

649
00:28:01,729 --> 00:28:07,399
all you can read<font color="#E5E5E5"> that declaration</font><font color="#CCCCCC"> at the</font>

650
00:28:03,259 --> 00:28:10,220
beginning says<font color="#E5E5E5"> data operation and what</font>

651
00:28:07,399 --> 00:28:11,988
that's just<font color="#E5E5E5"> a simplified data type that</font>

652
00:28:10,220 --> 00:28:13,429
<font color="#E5E5E5">describes what an operation would</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> and</font>

653
00:28:11,989 --> 00:28:15,830
it says and<font color="#E5E5E5"> you can read that vertical</font>

654
00:28:13,429 --> 00:28:19,369
bar as or so it says an operation is

655
00:28:15,830 --> 00:28:21,408
either track in or process or track out

656
00:28:19,369 --> 00:28:24,349
and tracking in just means putting<font color="#E5E5E5"> away</font>

657
00:28:21,409 --> 00:28:26,389
<font color="#E5E5E5">for into a machine and</font><font color="#CCCCCC"> processes you do</font>

658
00:28:24,349 --> 00:28:27,530
something inside the<font color="#CCCCCC"> machine</font><font color="#E5E5E5"> and track</font>

659
00:28:26,389 --> 00:28:30,889
out as you do

660
00:28:27,530 --> 00:28:32,720
<font color="#CCCCCC">take it out of the machine okay and then</font>

661
00:28:30,890 --> 00:28:34,460
the<font color="#CCCCCC"> next thing</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that the route is just</font>

662
00:28:32,720 --> 00:28:36,320
a sequence<font color="#CCCCCC"> of operations and</font><font color="#E5E5E5"> these</font>

663
00:28:34,460 --> 00:28:39,530
brackets<font color="#E5E5E5"> that you see there they mean</font>

664
00:28:36,320 --> 00:28:42,980
<font color="#CCCCCC">list off</font><font color="#E5E5E5"> so what it</font><font color="#CCCCCC"> says as a route</font><font color="#E5E5E5"> is a</font>

665
00:28:39,530 --> 00:28:44,660
list of operations<font color="#CCCCCC"> and down here you</font>

666
00:28:42,980 --> 00:28:47,210
<font color="#CCCCCC">have an example for a route</font><font color="#E5E5E5"> for a very</font>

667
00:28:44,660 --> 00:28:49,310
simple<font color="#CCCCCC"> route that says well one route</font>

668
00:28:47,210 --> 00:28:51,020
route number one might be<font color="#CCCCCC"> a list of</font><font color="#E5E5E5"> the</font>

669
00:28:49,310 --> 00:28:52,909
following<font color="#E5E5E5"> operations you put away</font><font color="#CCCCCC"> for</font>

670
00:28:51,020 --> 00:28:54,680
into a machine<font color="#E5E5E5"> you process it you</font>

671
00:28:52,910 --> 00:28:58,870
<font color="#CCCCCC">process it some more</font><font color="#E5E5E5"> and then you take</font>

672
00:28:54,680 --> 00:29:03,040
it<font color="#E5E5E5"> out again there so far everybody nod</font>

673
00:28:58,870 --> 00:29:05,689
<font color="#E5E5E5">everybody was still awake nod okay</font>

674
00:29:03,040 --> 00:29:09,620
so don't don't be don't be afraid to ask

675
00:29:05,690 --> 00:29:12,380
<font color="#CCCCCC">so one thing that</font><font color="#E5E5E5"> you do is is when you</font>

676
00:29:09,620 --> 00:29:14,389
have<font color="#CCCCCC"> data types as you</font><font color="#E5E5E5"> just saw is you</font>

677
00:29:12,380 --> 00:29:17,240
define functions on them that<font color="#E5E5E5"> describe</font>

678
00:29:14,390 --> 00:29:19,550
some aspect<font color="#E5E5E5"> of what happens in a fab and</font>

679
00:29:17,240 --> 00:29:21,500
<font color="#E5E5E5">a semiconductor</font><font color="#CCCCCC"> Factory</font><font color="#E5E5E5"> so in fact what</font>

680
00:29:19,550 --> 00:29:23,600
happens of course<font color="#E5E5E5"> is you need</font><font color="#CCCCCC"> to execute</font>

681
00:29:21,500 --> 00:29:25,730
the<font color="#CCCCCC"> next step the next</font><font color="#E5E5E5"> operation that</font>

682
00:29:23,600 --> 00:29:27,290
<font color="#E5E5E5">happens as part of</font><font color="#CCCCCC"> making a</font>

683
00:29:25,730 --> 00:29:29,900
semiconductor<font color="#E5E5E5"> and for that we're making</font>

684
00:29:27,290 --> 00:29:32,540
<font color="#E5E5E5">a function called route head the head of</font>

685
00:29:29,900 --> 00:29:34,280
the route<font color="#E5E5E5"> and what you do is you write a</font>

686
00:29:32,540 --> 00:29:36,830
type signatures and type signatures are

687
00:29:34,280 --> 00:29:39,379
very good for communication actually<font color="#E5E5E5"> so</font>

688
00:29:36,830 --> 00:29:41,770
you put in a route<font color="#E5E5E5"> and you get out a</font>

689
00:29:39,380 --> 00:29:44,450
single<font color="#E5E5E5"> operation</font><font color="#CCCCCC"> and then you write</font>

690
00:29:41,770 --> 00:29:47,090
equations that describe<font color="#CCCCCC"> what that</font>

691
00:29:44,450 --> 00:29:49,400
<font color="#E5E5E5">function would do on different aspects</font>

692
00:29:47,090 --> 00:29:52,100
<font color="#CCCCCC">or different classes of input so in</font><font color="#E5E5E5"> this</font>

693
00:29:49,400 --> 00:29:54,470
case you<font color="#CCCCCC"> remember a route was a list of</font>

694
00:29:52,100 --> 00:29:56,629
operations<font color="#E5E5E5"> and lists there are two</font>

695
00:29:54,470 --> 00:29:58,190
different kinds of<font color="#E5E5E5"> lists one</font><font color="#CCCCCC"> Kuip of</font>

696
00:29:56,630 --> 00:30:00,200
<font color="#CCCCCC">lists is the empty list and</font><font color="#E5E5E5"> the other</font>

697
00:29:58,190 --> 00:30:01,670
kind<font color="#E5E5E5"> of list is a list that has</font><font color="#CCCCCC"> what's</font>

698
00:30:00,200 --> 00:30:03,650
<font color="#CCCCCC">called a head or a first element</font><font color="#E5E5E5"> and</font>

699
00:30:01,670 --> 00:30:06,380
<font color="#E5E5E5">arrests and because there's two kinds of</font>

700
00:30:03,650 --> 00:30:08,090
<font color="#CCCCCC">Lists you write two equations and so</font>

701
00:30:06,380 --> 00:30:09,710
that's why<font color="#E5E5E5"> you see two things where it</font>

702
00:30:08,090 --> 00:30:13,760
says<font color="#CCCCCC"> round</font><font color="#E5E5E5"> had something equals to</font>

703
00:30:09,710 --> 00:30:15,320
<font color="#E5E5E5">something else</font><font color="#CCCCCC"> and the first</font><font color="#E5E5E5"> equation is</font>

704
00:30:13,760 --> 00:30:16,730
for the empty<font color="#CCCCCC"> list</font><font color="#E5E5E5"> why that's this is</font>

705
00:30:15,320 --> 00:30:18,980
<font color="#E5E5E5">why that you have these</font><font color="#CCCCCC"> two empty</font>

706
00:30:16,730 --> 00:30:20,870
<font color="#E5E5E5">brackets</font><font color="#CCCCCC"> and the second one that</font><font color="#E5E5E5"> says</font>

707
00:30:18,980 --> 00:30:24,230
well it's a<font color="#E5E5E5"> non empty list and the first</font>

708
00:30:20,870 --> 00:30:25,610
thing in<font color="#E5E5E5"> that list is is some operation</font>

709
00:30:24,230 --> 00:30:27,440
<font color="#E5E5E5">up so there's something called pattern</font>

710
00:30:25,610 --> 00:30:30,500
matching you match this<font color="#CCCCCC"> on to the</font><font color="#E5E5E5"> actual</font>

711
00:30:27,440 --> 00:30:32,390
list that you see and<font color="#E5E5E5"> up then gets bound</font>

712
00:30:30,500 --> 00:30:33,680
to<font color="#E5E5E5"> that first operation and we don't</font>

713
00:30:32,390 --> 00:30:35,750
<font color="#E5E5E5">really care about</font><font color="#CCCCCC"> what comes</font><font color="#E5E5E5"> after that</font>

714
00:30:33,680 --> 00:30:37,340
first operation and so the second

715
00:30:35,750 --> 00:30:39,050
<font color="#CCCCCC">equation is pretty</font><font color="#E5E5E5"> clear if you want the</font>

716
00:30:37,340 --> 00:30:41,149
head of a route that<font color="#E5E5E5"> is not empty you</font>

717
00:30:39,050 --> 00:30:45,658
just<font color="#CCCCCC"> take the first element of</font><font color="#E5E5E5"> that</font>

718
00:30:41,150 --> 00:30:46,740
<font color="#E5E5E5">okay so far and the other equation says</font>

719
00:30:45,659 --> 00:30:48,950
well what do we<font color="#CCCCCC"> do with an</font><font color="#E5E5E5"> empty list</font>

720
00:30:46,740 --> 00:30:52,559
<font color="#CCCCCC">right an empty list does not have an</font>

721
00:30:48,950 --> 00:30:54,299
operation<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> saying you're into</font>

722
00:30:52,559 --> 00:30:56,908
the second slide of your<font color="#E5E5E5"> beautiful</font>

723
00:30:54,299 --> 00:31:00,750
<font color="#E5E5E5">Haskell code and you already don't down</font>

724
00:30:56,909 --> 00:31:04,950
our<font color="#E5E5E5"> to write them well so we're</font>

725
00:31:00,750 --> 00:31:06,870
<font color="#CCCCCC">communicating right okay okay so okay</font><font color="#E5E5E5"> so</font>

726
00:31:04,950 --> 00:31:08,279
<font color="#CCCCCC">you're talking</font><font color="#E5E5E5"> you're talking</font><font color="#CCCCCC"> to some of</font>

727
00:31:06,870 --> 00:31:09,330
the expert and you say well<font color="#E5E5E5"> you have got</font>

728
00:31:08,279 --> 00:31:10,710
an empty route what's the first

729
00:31:09,330 --> 00:31:13,289
operation of an empty row and<font color="#E5E5E5"> these days</font>

730
00:31:10,710 --> 00:31:15,570
with empty routes they don't really<font color="#E5E5E5"> have</font>

731
00:31:13,289 --> 00:31:17,850
<font color="#E5E5E5">the first operation</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> only maybe have</font>

732
00:31:15,570 --> 00:31:20,460
an operation sometimes<font color="#CCCCCC"> they don't</font><font color="#E5E5E5"> so for</font>

733
00:31:17,850 --> 00:31:22,049
<font color="#CCCCCC">that we can create a data type that says</font>

734
00:31:20,460 --> 00:31:23,549
that<font color="#E5E5E5"> something might sometimes be there</font>

735
00:31:22,049 --> 00:31:25,408
and<font color="#CCCCCC"> sometimes</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> not and</font><font color="#E5E5E5"> we'll just</font>

736
00:31:23,549 --> 00:31:26,460
call it option<font color="#CCCCCC"> if they're a hat are</font><font color="#E5E5E5"> they</font>

737
00:31:25,409 --> 00:31:30,210
<font color="#E5E5E5">anything</font><font color="#CCCCCC"> Haskell programmers in this</font>

738
00:31:26,460 --> 00:31:32,760
room oh<font color="#E5E5E5"> okay so this is built-in of</font>

739
00:31:30,210 --> 00:31:34,020
course that's the<font color="#CCCCCC"> maybe type</font><font color="#E5E5E5"> but but I'm</font>

740
00:31:32,760 --> 00:31:35,970
just<font color="#E5E5E5"> making a separate type called the</font>

741
00:31:34,020 --> 00:31:38,039
option type and<font color="#E5E5E5"> that says well the a</font>

742
00:31:35,970 --> 00:31:40,710
says it can<font color="#E5E5E5"> be anything</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> anything</font>

743
00:31:38,039 --> 00:31:43,080
an option a means<font color="#E5E5E5"> it can either be there</font>

744
00:31:40,710 --> 00:31:45,090
<font color="#E5E5E5">or</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> that it has two</font>

745
00:31:43,080 --> 00:31:47,399
constructors or two<font color="#E5E5E5"> different classes of</font>

746
00:31:45,090 --> 00:31:48,809
maybe objects and one are<font color="#E5E5E5"> called the</font>

747
00:31:47,399 --> 00:31:50,399
some objects<font color="#CCCCCC"> and the other one are</font>

748
00:31:48,809 --> 00:31:52,529
called<font color="#CCCCCC"> the none objects maybe we'll</font>

749
00:31:50,399 --> 00:31:55,049
start with none so<font color="#E5E5E5"> anything can be a nun</font>

750
00:31:52,529 --> 00:31:57,630
it just says that<font color="#E5E5E5"> anything is not there</font>

751
00:31:55,049 --> 00:31:59,668
<font color="#E5E5E5">right</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> anything can be of type option</font>

752
00:31:57,630 --> 00:32:01,620
of a and it means it's that<font color="#E5E5E5"> something is</font>

753
00:31:59,669 --> 00:32:03,539
<font color="#E5E5E5">not there and</font><font color="#CCCCCC"> that is</font><font color="#E5E5E5"> the type</font><font color="#CCCCCC"> of that</font>

754
00:32:01,620 --> 00:32:04,889
particular constructor<font color="#E5E5E5"> the other</font>

755
00:32:03,539 --> 00:32:06,570
constructor says well that thing

756
00:32:04,890 --> 00:32:09,870
actually<font color="#E5E5E5"> is there and so the constructor</font>

757
00:32:06,570 --> 00:32:12,210
<font color="#CCCCCC">has to accept something</font><font color="#E5E5E5"> of type a and</font>

758
00:32:09,870 --> 00:32:16,020
then give us something<font color="#E5E5E5"> of type option of</font>

759
00:32:12,210 --> 00:32:18,210
a okay<font color="#CCCCCC"> so you're</font><font color="#E5E5E5"> saying it wraps the</font>

760
00:32:16,020 --> 00:32:20,490
subject<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> I wraps the object</font><font color="#E5E5E5"> okay and</font>

761
00:32:18,210 --> 00:32:23,539
so if you're<font color="#E5E5E5"> not that's grammar but</font>

762
00:32:20,490 --> 00:32:26,010
maybe maybe an<font color="#E5E5E5"> f-sharp programmer or</font>

763
00:32:23,539 --> 00:32:27,899
<font color="#E5E5E5">we're an ml programmer then that is what</font>

764
00:32:26,010 --> 00:32:29,520
it looks<font color="#E5E5E5"> like there and</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> believe it's</font>

765
00:32:27,899 --> 00:32:33,719
even built<font color="#E5E5E5"> into a Java these days</font>

766
00:32:29,520 --> 00:32:36,480
something<font color="#CCCCCC"> called</font><font color="#E5E5E5"> optional</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> so and</font>

767
00:32:33,720 --> 00:32:38,190
now that means<font color="#E5E5E5"> we can change our</font><font color="#CCCCCC"> road</font>

768
00:32:36,480 --> 00:32:39,600
<font color="#E5E5E5">head function a little</font><font color="#CCCCCC"> bit because</font><font color="#E5E5E5"> our</font>

769
00:32:38,190 --> 00:32:41,970
<font color="#E5E5E5">first attempt didn't work out</font><font color="#CCCCCC"> and</font>

770
00:32:39,600 --> 00:32:45,090
instead of<font color="#E5E5E5"> saying route arrow operation</font>

771
00:32:41,970 --> 00:32:46,679
rewrite route arrow<font color="#E5E5E5"> option operation may</font>

772
00:32:45,090 --> 00:32:48,120
seem<font color="#E5E5E5"> trivial to</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> but it already</font>

773
00:32:46,679 --> 00:32:51,600
<font color="#E5E5E5">communicates a tiny little bit</font><font color="#CCCCCC"> of</font>

774
00:32:48,120 --> 00:32:53,469
<font color="#E5E5E5">something so and then we can write route</font>

775
00:32:51,600 --> 00:32:56,620
head of the empty<font color="#CCCCCC"> list</font><font color="#E5E5E5"> is none</font>

776
00:32:53,470 --> 00:33:00,009
so there's no there's<font color="#CCCCCC"> no</font><font color="#E5E5E5"> head</font><font color="#CCCCCC"> of the</font>

777
00:32:56,620 --> 00:33:02,110
empty route or<font color="#CCCCCC"> if we have an</font><font color="#E5E5E5"> operation</font>

778
00:33:00,009 --> 00:33:04,330
<font color="#E5E5E5">coming out we just write some in front</font>

779
00:33:02,110 --> 00:33:06,158
<font color="#E5E5E5">and so if we use that example route that</font>

780
00:33:04,330 --> 00:33:08,710
you saw earlier<font color="#CCCCCC"> where</font><font color="#E5E5E5"> our one was</font>

781
00:33:06,159 --> 00:33:13,210
tracking<font color="#E5E5E5"> process process track out what</font>

782
00:33:08,710 --> 00:33:14,799
we get<font color="#E5E5E5"> is is some tracking</font><font color="#CCCCCC"> ok so so that</font>

783
00:33:13,210 --> 00:33:19,509
type communicates a little bit of what

784
00:33:14,799 --> 00:33:21,340
we do<font color="#CCCCCC"> because always it's already</font>

785
00:33:19,509 --> 00:33:22,450
<font color="#E5E5E5">calling the shots very good the next</font>

786
00:33:21,340 --> 00:33:24,428
thing that we might<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to do is we</font>

787
00:33:22,450 --> 00:33:25,659
<font color="#E5E5E5">don't want to</font><font color="#CCCCCC"> always know</font><font color="#E5E5E5"> only</font><font color="#CCCCCC"> the first</font>

788
00:33:24,429 --> 00:33:28,419
operation we also want to know<font color="#E5E5E5"> what</font>

789
00:33:25,659 --> 00:33:30,129
happens<font color="#CCCCCC"> after that</font><font color="#E5E5E5"> so we can use that</font>

790
00:33:28,419 --> 00:33:31,509
<font color="#CCCCCC">option</font><font color="#E5E5E5"> and we already know that of</font>

791
00:33:30,129 --> 00:33:32,949
<font color="#CCCCCC">course an empty route will not have</font>

792
00:33:31,509 --> 00:33:35,230
something<font color="#CCCCCC"> coming after that</font><font color="#E5E5E5"> first</font>

793
00:33:32,950 --> 00:33:36,879
operation<font color="#E5E5E5"> so we could write</font><font color="#CCCCCC"> another</font>

794
00:33:35,230 --> 00:33:39,070
function<font color="#CCCCCC"> called</font><font color="#E5E5E5"> route advance and it</font>

795
00:33:36,879 --> 00:33:41,559
takes a route as input that's to the

796
00:33:39,070 --> 00:33:44,080
left<font color="#CCCCCC"> of the arrow and it</font><font color="#E5E5E5"> gives us both</font>

797
00:33:41,559 --> 00:33:45,970
an operation and a route that's why

798
00:33:44,080 --> 00:33:47,799
there's these<font color="#CCCCCC"> two things in</font><font color="#E5E5E5"> parentheses</font>

799
00:33:45,970 --> 00:33:49,990
with<font color="#CCCCCC"> a comma in between so that's a</font>

800
00:33:47,799 --> 00:33:53,110
tuple<font color="#E5E5E5"> so it gives us an operation in a</font>

801
00:33:49,990 --> 00:33:54,639
route but only<font color="#CCCCCC"> sometimes</font><font color="#E5E5E5"> when that</font>

802
00:33:53,110 --> 00:33:56,590
<font color="#E5E5E5">actually exists which is</font><font color="#CCCCCC"> why there's an</font>

803
00:33:54,639 --> 00:33:58,059
option wrapped around that so what<font color="#E5E5E5"> we</font>

804
00:33:56,590 --> 00:34:00,220
want to<font color="#CCCCCC"> do is if</font><font color="#E5E5E5"> we take our route</font>

805
00:33:58,059 --> 00:34:02,230
number<font color="#E5E5E5"> one we want to split</font><font color="#CCCCCC"> it into</font><font color="#E5E5E5"> that</font>

806
00:34:00,220 --> 00:34:03,850
<font color="#E5E5E5">first operation in a list of the rest so</font>

807
00:34:02,230 --> 00:34:07,269
it should split<font color="#E5E5E5"> out</font><font color="#CCCCCC"> the track in and</font>

808
00:34:03,850 --> 00:34:08,949
then give us a list<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> remaining or</font>

809
00:34:07,269 --> 00:34:12,190
a route of the remaining operations that

810
00:34:08,949 --> 00:34:13,899
are in there<font color="#CCCCCC"> okay so far</font><font color="#E5E5E5"> so it gets</font>

811
00:34:12,190 --> 00:34:19,329
technical don't be does anybody have a

812
00:34:13,899 --> 00:34:22,480
question<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> don't don't hesitate to</font>

813
00:34:19,329 --> 00:34:24,010
<font color="#CCCCCC">ask I'm looking at the</font><font color="#E5E5E5"> clock</font><font color="#CCCCCC"> ah so and</font>

814
00:34:22,480 --> 00:34:25,690
then this is<font color="#E5E5E5"> actually pretty easy to</font>

815
00:34:24,010 --> 00:34:28,030
<font color="#E5E5E5">write now again we need to</font><font color="#CCCCCC"> make two</font>

816
00:34:25,690 --> 00:34:31,000
equations because a route is a<font color="#E5E5E5"> lists and</font>

817
00:34:28,030 --> 00:34:32,710
<font color="#E5E5E5">lists always need two equations</font><font color="#CCCCCC"> so we</font>

818
00:34:31,000 --> 00:34:34,569
<font color="#CCCCCC">can say route advance or</font><font color="#E5E5E5"> the empty list</font>

819
00:34:32,710 --> 00:34:37,750
has none<font color="#CCCCCC"> and route advance of</font><font color="#E5E5E5"> up and the</font>

820
00:34:34,569 --> 00:34:39,779
<font color="#E5E5E5">rest is we just</font><font color="#CCCCCC"> return a</font><font color="#E5E5E5"> sum off</font><font color="#CCCCCC"> op and</font>

821
00:34:37,750 --> 00:34:42,010
the rest because the list<font color="#E5E5E5"> already splits</font>

822
00:34:39,780 --> 00:34:43,869
exactly along<font color="#E5E5E5"> the line that</font><font color="#CCCCCC"> we wanted to</font>

823
00:34:42,010 --> 00:34:46,839
between<font color="#E5E5E5"> the first and the remaining</font>

824
00:34:43,869 --> 00:34:48,609
elements<font color="#E5E5E5"> right so this is just very</font>

825
00:34:46,839 --> 00:34:51,159
<font color="#E5E5E5">simple</font><font color="#CCCCCC"> code or at least a short</font><font color="#E5E5E5"> code</font>

826
00:34:48,609 --> 00:34:54,848
that communicates<font color="#CCCCCC"> what routes are</font><font color="#E5E5E5"> hmm</font>

827
00:34:51,159 --> 00:34:57,280
right<font color="#E5E5E5"> I see and so if I remember</font>

828
00:34:54,849 --> 00:34:58,930
correctly<font color="#CCCCCC"> I mean you said you put</font><font color="#E5E5E5"> the</font>

829
00:34:57,280 --> 00:35:01,990
wafer into<font color="#E5E5E5"> the Machine and</font><font color="#CCCCCC"> then it</font>

830
00:34:58,930 --> 00:35:04,240
processes it<font color="#CCCCCC"> if I</font><font color="#E5E5E5"> remember correctly</font>

831
00:35:01,990 --> 00:35:06,879
some of these processing steps can<font color="#CCCCCC"> be</font>

832
00:35:04,240 --> 00:35:09,750
chemical reactions or something

833
00:35:06,880 --> 00:35:13,300
and so it might<font color="#E5E5E5"> be</font><font color="#CCCCCC"> the case that they</font>

834
00:35:09,750 --> 00:35:15,670
must happen in<font color="#E5E5E5"> a certain</font><font color="#CCCCCC"> amount of time</font>

835
00:35:13,300 --> 00:35:18,250
<font color="#CCCCCC">or something that's</font><font color="#E5E5E5"> not sure yeah okay</font>

836
00:35:15,670 --> 00:35:21,100
so what we could actually do is<font color="#CCCCCC"> we could</font>

837
00:35:18,250 --> 00:35:23,890
model<font color="#E5E5E5"> something like this yeah I sneaked</font>

838
00:35:21,100 --> 00:35:27,220
at<font color="#CCCCCC"> you're part of</font><font color="#E5E5E5"> the slide so I</font><font color="#CCCCCC"> check</font>

839
00:35:23,890 --> 00:35:29,529
<font color="#E5E5E5">the same okay</font><font color="#CCCCCC"> so what we</font><font color="#E5E5E5"> actually could</font>

840
00:35:27,220 --> 00:35:32,770
do is we could model<font color="#CCCCCC"> something like</font>

841
00:35:29,530 --> 00:35:36,910
those<font color="#E5E5E5"> three steps here need</font><font color="#CCCCCC"> to happen</font>

842
00:35:32,770 --> 00:35:38,440
<font color="#CCCCCC">together</font><font color="#E5E5E5"> in a set period of time</font><font color="#CCCCCC"> yeah so</font>

843
00:35:36,910 --> 00:35:40,660
that's<font color="#E5E5E5"> yeah so the chemical reactions</font>

844
00:35:38,440 --> 00:35:42,130
mean that your wafer might go bad<font color="#E5E5E5"> if you</font>

845
00:35:40,660 --> 00:35:43,600
don't<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> know if you start the</font>

846
00:35:42,130 --> 00:35:45,310
sequence of steps and you don't finish

847
00:35:43,600 --> 00:35:48,370
on time then your<font color="#CCCCCC"> wait for those</font><font color="#E5E5E5"> like</font>

848
00:35:45,310 --> 00:35:50,620
<font color="#CCCCCC">acting and</font><font color="#E5E5E5"> watching for example if you H</font>

849
00:35:48,370 --> 00:35:52,210
too much then<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> always</font>

850
00:35:50,620 --> 00:35:57,730
that's<font color="#CCCCCC"> always a problem</font><font color="#E5E5E5"> in existing</font>

851
00:35:52,210 --> 00:35:59,380
systems okay<font color="#E5E5E5"> cool so maybe I can try and</font>

852
00:35:57,730 --> 00:36:03,430
see how I<font color="#E5E5E5"> can model this into your</font>

853
00:35:59,380 --> 00:36:07,150
existing code<font color="#E5E5E5"> okay cool so</font><font color="#CCCCCC"> let's have a</font>

854
00:36:03,430 --> 00:36:09,370
look<font color="#CCCCCC"> so what we</font><font color="#E5E5E5"> first need</font><font color="#CCCCCC"> is we we had</font>

855
00:36:07,150 --> 00:36:12,360
<font color="#CCCCCC">this rod element here with this</font>

856
00:36:09,370 --> 00:36:15,549
operation<font color="#CCCCCC"> right</font><font color="#E5E5E5"> and now we need another</font>

857
00:36:12,360 --> 00:36:19,360
<font color="#E5E5E5">representation for a route element and</font>

858
00:36:15,550 --> 00:36:22,090
let's call this route<font color="#CCCCCC"> QT</font><font color="#E5E5E5"> zone for Q time</font>

859
00:36:19,360 --> 00:36:24,250
<font color="#E5E5E5">zone and there of</font><font color="#CCCCCC"> course we have the</font>

860
00:36:22,090 --> 00:36:27,940
duration that<font color="#CCCCCC"> means the</font><font color="#E5E5E5"> amount of time</font>

861
00:36:24,250 --> 00:36:29,860
this step needs to<font color="#CCCCCC"> be finished</font><font color="#E5E5E5"> in or the</font>

862
00:36:27,940 --> 00:36:32,080
sequence<font color="#CCCCCC"> of steps needs to be finished</font>

863
00:36:29,860 --> 00:36:34,870
<font color="#E5E5E5">in and then we have this list of</font>

864
00:36:32,080 --> 00:36:38,740
<font color="#CCCCCC">operations</font><font color="#E5E5E5"> here we saw this</font><font color="#CCCCCC"> before right</font>

865
00:36:34,870 --> 00:36:41,440
<font color="#E5E5E5">the list of the operations and then what</font>

866
00:36:38,740 --> 00:36:44,229
this gives us is of course again<font color="#E5E5E5"> a route</font>

867
00:36:41,440 --> 00:36:46,900
element<font color="#E5E5E5"> so we can</font><font color="#CCCCCC"> combine like</font><font color="#E5E5E5"> ordinary</font>

868
00:36:44,230 --> 00:36:49,530
steps<font color="#E5E5E5"> like putting the wafer into the</font>

869
00:36:46,900 --> 00:36:52,120
<font color="#E5E5E5">machine doesn't</font><font color="#CCCCCC"> matter how</font><font color="#E5E5E5"> long it takes</font>

870
00:36:49,530 --> 00:36:54,550
<font color="#E5E5E5">maybe it blocks the</font><font color="#CCCCCC"> machine but other</font>

871
00:36:52,120 --> 00:36:56,890
than that<font color="#E5E5E5"> no no issues come from that</font>

872
00:36:54,550 --> 00:36:59,650
<font color="#E5E5E5">but if we do the etching and the washing</font>

873
00:36:56,890 --> 00:37:01,480
for<font color="#E5E5E5"> example we would need to</font><font color="#CCCCCC"> have a few</font>

874
00:36:59,650 --> 00:37:04,810
times around because we need to restrict

875
00:37:01,480 --> 00:37:07,540
<font color="#E5E5E5">the time that that this takes in</font>

876
00:37:04,810 --> 00:37:10,990
conjunction right<font color="#CCCCCC"> it's that</font><font color="#E5E5E5"> correct so</font>

877
00:37:07,540 --> 00:37:13,900
far<font color="#CCCCCC"> yeah good and then if we look</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> our</font>

878
00:37:10,990 --> 00:37:18,640
example<font color="#E5E5E5"> this is the previous example we</font>

879
00:37:13,900 --> 00:37:20,500
had here<font color="#CCCCCC"> we could create another example</font>

880
00:37:18,640 --> 00:37:22,960
<font color="#E5E5E5">where is my there are</font>

881
00:37:20,500 --> 00:37:26,020
- and here<font color="#E5E5E5"> we have a route</font><font color="#CCCCCC"> queue</font><font color="#E5E5E5"> time</font>

882
00:37:22,960 --> 00:37:29,080
<font color="#E5E5E5">zone say it may only take five</font>

883
00:37:26,020 --> 00:37:31,180
<font color="#E5E5E5">whatever seconds say and then we have</font>

884
00:37:29,080 --> 00:37:34,840
<font color="#E5E5E5">two processes here that need to be</font>

885
00:37:31,180 --> 00:37:38,319
<font color="#E5E5E5">finished within five seconds and</font><font color="#CCCCCC"> then we</font>

886
00:37:34,840 --> 00:37:47,230
do the<font color="#E5E5E5"> track out again</font><font color="#CCCCCC"> okay so far so</font>

887
00:37:38,320 --> 00:37:50,859
<font color="#CCCCCC">clear good</font><font color="#E5E5E5"> and then if we look at this</font>

888
00:37:47,230 --> 00:37:53,260
<font color="#E5E5E5">and we</font><font color="#CCCCCC"> discover that</font><font color="#E5E5E5"> here we have</font><font color="#CCCCCC"> this</font>

889
00:37:50,859 --> 00:37:57,490
route element list<font color="#CCCCCC"> and here we have this</font>

890
00:37:53,260 --> 00:38:01,480
operation list<font color="#E5E5E5"> this is actually sort of</font>

891
00:37:57,490 --> 00:38:03,910
similar<font color="#CCCCCC"> isn't it so maybe we can make</font>

892
00:38:01,480 --> 00:38:07,720
something<font color="#E5E5E5"> out of this and maybe we can</font>

893
00:38:03,910 --> 00:38:10,450
actually<font color="#E5E5E5"> turn this down here into route</font>

894
00:38:07,720 --> 00:38:11,830
elements as well<font color="#CCCCCC"> oh</font><font color="#E5E5E5"> so that's what you</font>

895
00:38:10,450 --> 00:38:13,540
were<font color="#CCCCCC"> doing before right before they are</font>

896
00:38:11,830 --> 00:38:17,140
<font color="#E5E5E5">it said up</font><font color="#CCCCCC"> there it also said list of</font>

897
00:38:13,540 --> 00:38:19,090
operation<font color="#E5E5E5"> up there</font><font color="#CCCCCC"> yeah up there</font><font color="#E5E5E5"> when</font>

898
00:38:17,140 --> 00:38:21,819
it's a type route<font color="#E5E5E5"> when you start at my</font>

899
00:38:19,090 --> 00:38:24,130
code my code had route equals list of

900
00:38:21,820 --> 00:38:25,390
operation right<font color="#E5E5E5"> and now you did the same</font>

901
00:38:24,130 --> 00:38:28,300
<font color="#CCCCCC">thing oh yes</font>

902
00:38:25,390 --> 00:38:31,118
<font color="#E5E5E5">yeah right so now it's now it's</font><font color="#CCCCCC"> the same</font>

903
00:38:28,300 --> 00:38:33,609
okay<font color="#E5E5E5"> again right</font><font color="#CCCCCC"> so it's both route</font>

904
00:38:31,119 --> 00:38:38,050
route elements yeah good point

905
00:38:33,609 --> 00:38:40,569
and now if<font color="#CCCCCC"> we look at</font><font color="#E5E5E5"> this again so</font>

906
00:38:38,050 --> 00:38:44,800
maybe this actually means that<font color="#E5E5E5"> this year</font>

907
00:38:40,570 --> 00:38:49,530
is not just a list of<font color="#E5E5E5"> route elements but</font>

908
00:38:44,800 --> 00:38:52,119
maybe this is actually<font color="#CCCCCC"> a list</font><font color="#E5E5E5"> of routes</font>

909
00:38:49,530 --> 00:38:56,470
<font color="#CCCCCC">it's actually a route down there</font>

910
00:38:52,119 --> 00:38:59,320
so<font color="#CCCCCC"> I actually derive some some</font>

911
00:38:56,470 --> 00:39:02,109
information here<font color="#E5E5E5"> from the code so we</font>

912
00:38:59,320 --> 00:39:06,430
<font color="#E5E5E5">discover that our</font><font color="#CCCCCC"> out queue time zone</font>

913
00:39:02,109 --> 00:39:12,250
actually<font color="#E5E5E5"> contains a route so what oh</font><font color="#CCCCCC"> all</font>

914
00:39:06,430 --> 00:39:17,919
right<font color="#E5E5E5"> so if</font><font color="#CCCCCC"> we look at</font><font color="#E5E5E5"> this here</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> we</font>

915
00:39:12,250 --> 00:39:21,190
<font color="#E5E5E5">then can do here with this route element</font>

916
00:39:17,920 --> 00:39:24,430
so here we could plug in any route

917
00:39:21,190 --> 00:39:27,430
element<font color="#E5E5E5"> right for example we could plug</font>

918
00:39:24,430 --> 00:39:31,180
in a route<font color="#CCCCCC"> queue time zone which is also</font>

919
00:39:27,430 --> 00:39:33,279
a route element so coming from<font color="#E5E5E5"> this</font>

920
00:39:31,180 --> 00:39:36,549
example here where we have

921
00:39:33,280 --> 00:39:38,740
just a flat list that<font color="#CCCCCC"> just contains some</font>

922
00:39:36,550 --> 00:39:42,130
route operations<font color="#E5E5E5"> and a route queue time</font>

923
00:39:38,740 --> 00:39:47,109
<font color="#E5E5E5">zone and then a route operation we could</font>

924
00:39:42,130 --> 00:39:49,150
also stack them into each other so a

925
00:39:47,110 --> 00:39:52,540
route queue time zone<font color="#E5E5E5"> could again</font>

926
00:39:49,150 --> 00:39:55,720
<font color="#E5E5E5">contain a route that contains the route</font>

927
00:39:52,540 --> 00:39:58,480
queue time zone<font color="#E5E5E5"> that's for you know what</font>

928
00:39:55,720 --> 00:39:59,770
happened<font color="#CCCCCC"> because know we can nest queue</font>

929
00:39:58,480 --> 00:40:01,960
time zones and<font color="#E5E5E5"> that's something that</font>

930
00:39:59,770 --> 00:40:03,700
occurs in reality<font color="#CCCCCC"> oh really does it</font><font color="#E5E5E5"> and</font>

931
00:40:01,960 --> 00:40:06,100
so you're<font color="#CCCCCC"> on your</font><font color="#E5E5E5"> model has suggested</font>

932
00:40:03,700 --> 00:40:07,960
that<font color="#E5E5E5"> but now something</font><font color="#CCCCCC"> that our</font><font color="#E5E5E5"> old IT</font>

933
00:40:06,100 --> 00:40:11,319
systems based on object oriented

934
00:40:07,960 --> 00:40:13,750
programming couldn't model from its pre

935
00:40:11,320 --> 00:40:16,660
<font color="#CCCCCC">8 so now I understand why you're aiming</font>

936
00:40:13,750 --> 00:40:19,180
at<font color="#CCCCCC"> function approach that you can model</font>

937
00:40:16,660 --> 00:40:22,000
<font color="#E5E5E5">exact better with</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> yeah and this</font><font color="#CCCCCC"> is</font>

938
00:40:19,180 --> 00:40:24,490
pretty cool so we discovered this in the

939
00:40:22,000 --> 00:40:28,360
code and<font color="#E5E5E5"> then we were able</font><font color="#CCCCCC"> to get back</font>

940
00:40:24,490 --> 00:40:30,250
<font color="#E5E5E5">to the to the business people and check</font>

941
00:40:28,360 --> 00:40:33,430
back<font color="#E5E5E5"> with them whether they would</font>

942
00:40:30,250 --> 00:40:35,260
<font color="#CCCCCC">actually see this in</font><font color="#E5E5E5"> practice</font><font color="#CCCCCC"> and</font>

943
00:40:33,430 --> 00:40:37,120
whether it's a valuable addition here

944
00:40:35,260 --> 00:40:40,860
<font color="#E5E5E5">and we</font><font color="#CCCCCC"> just covered that</font><font color="#E5E5E5"> just from</font>

945
00:40:37,120 --> 00:40:44,310
<font color="#CCCCCC">looking at</font><font color="#E5E5E5"> the type</font><font color="#CCCCCC"> information we had</font>

946
00:40:40,860 --> 00:40:46,780
yeah and then we can continue<font color="#E5E5E5"> this and</font>

947
00:40:44,310 --> 00:40:49,120
because now we have this list of route

948
00:40:46,780 --> 00:40:51,850
elements down<font color="#E5E5E5"> there we could actually</font>

949
00:40:49,120 --> 00:40:53,560
say oh yeah a list of route elements we

950
00:40:51,850 --> 00:41:00,520
know what that<font color="#E5E5E5"> is this is actually a</font>

951
00:40:53,560 --> 00:41:03,850
route and now we like go one level<font color="#E5E5E5"> up so</font>

952
00:41:00,520 --> 00:41:06,610
whenever we we learn more about routes

953
00:41:03,850 --> 00:41:10,360
<font color="#E5E5E5">or whenever we change this here this</font>

954
00:41:06,610 --> 00:41:14,350
route thing<font color="#E5E5E5"> it will automatically be</font>

955
00:41:10,360 --> 00:41:16,720
reflected<font color="#E5E5E5"> in here because</font><font color="#CCCCCC"> we we</font>

956
00:41:14,350 --> 00:41:18,600
abstracted it right and that's what

957
00:41:16,720 --> 00:41:21,879
functional programming is all about

958
00:41:18,600 --> 00:41:24,580
abstracting things and<font color="#E5E5E5"> figuring out what</font>

959
00:41:21,880 --> 00:41:26,970
<font color="#E5E5E5">the common common parts are right</font>

960
00:41:24,580 --> 00:41:32,470
I<font color="#E5E5E5"> noticed</font><font color="#CCCCCC"> you bring with me very</font><font color="#E5E5E5"> good</font>

961
00:41:26,970 --> 00:41:36,450
excellent<font color="#E5E5E5"> so and now we can also of</font>

962
00:41:32,470 --> 00:41:40,450
course<font color="#E5E5E5"> check how our functions will be</font>

963
00:41:36,450 --> 00:41:42,640
<font color="#E5E5E5">modified because now we need to go to</font>

964
00:41:40,450 --> 00:41:46,808
all of<font color="#CCCCCC"> our functions</font><font color="#E5E5E5"> and see you or that</font>

965
00:41:42,640 --> 00:41:50,319
I still work<font color="#CCCCCC"> and here we have this</font>

966
00:41:46,809 --> 00:41:52,989
<font color="#E5E5E5">route head and also route element head</font>

967
00:41:50,319 --> 00:41:55,269
and now we need to extend this because

968
00:41:52,989 --> 00:41:56,979
the route element had works on the route

969
00:41:55,269 --> 00:41:58,779
element and now we have a new route

970
00:41:56,979 --> 00:42:01,419
element which is<font color="#CCCCCC"> the route queue</font>

971
00:41:58,779 --> 00:42:03,489
<font color="#CCCCCC">timezone</font><font color="#E5E5E5"> and of course if we</font><font color="#CCCCCC"> want the</font>

972
00:42:01,420 --> 00:42:06,849
route element head of the queue<font color="#CCCCCC"> timezone</font>

973
00:42:03,489 --> 00:42:10,269
<font color="#E5E5E5">this is of course the head of the</font>

974
00:42:06,849 --> 00:42:12,849
containing<font color="#E5E5E5"> route and we have this neat</font>

975
00:42:10,269 --> 00:42:14,828
function<font color="#E5E5E5"> up here already</font><font color="#CCCCCC"> routed which</font>

976
00:42:12,849 --> 00:42:17,650
gives us the head of the route<font color="#E5E5E5"> and so we</font>

977
00:42:14,829 --> 00:42:21,400
can<font color="#E5E5E5"> just reuse this year so even this</font>

978
00:42:17,650 --> 00:42:24,039
has become simpler for<font color="#CCCCCC"> us to implement</font>

979
00:42:21,400 --> 00:42:27,269
because<font color="#E5E5E5"> we have discovered</font><font color="#CCCCCC"> that there is</font>

980
00:42:24,039 --> 00:42:30,160
<font color="#E5E5E5">a route in there instead</font><font color="#CCCCCC"> of just a list</font>

981
00:42:27,269 --> 00:42:32,410
<font color="#E5E5E5">so</font><font color="#CCCCCC"> no special handling we can just</font>

982
00:42:30,160 --> 00:42:36,069
revert to the standard<font color="#E5E5E5"> function we</font>

983
00:42:32,410 --> 00:42:40,328
already<font color="#CCCCCC"> have and if we look at the route</font>

984
00:42:36,069 --> 00:42:43,869
<font color="#CCCCCC">advanced</font><font color="#E5E5E5"> so if we want</font><font color="#CCCCCC"> to proceed our</font>

985
00:42:40,329 --> 00:42:47,979
route to the next<font color="#E5E5E5"> operation and</font><font color="#CCCCCC"> and you</font>

986
00:42:43,869 --> 00:42:50,259
know<font color="#CCCCCC"> proceed to the next step</font><font color="#E5E5E5"> then of</font>

987
00:42:47,979 --> 00:42:52,629
<font color="#CCCCCC">course we also need to add this year the</font>

988
00:42:50,259 --> 00:42:58,660
queue<font color="#CCCCCC"> timezone</font><font color="#E5E5E5"> and now the question is</font>

989
00:42:52,630 --> 00:43:01,569
what happens if we if we<font color="#CCCCCC"> advanced into a</font>

990
00:42:58,660 --> 00:43:04,479
queue<font color="#CCCCCC"> timezone process because somehow</font>

991
00:43:01,569 --> 00:43:07,299
we need<font color="#E5E5E5"> to</font><font color="#CCCCCC"> keep track of when does it</font>

992
00:43:04,479 --> 00:43:11,140
<font color="#E5E5E5">need</font><font color="#CCCCCC"> to be finished</font><font color="#E5E5E5"> so we initially we</font>

993
00:43:07,299 --> 00:43:16,150
said<font color="#CCCCCC"> ok it may only take like X time or</font>

994
00:43:11,140 --> 00:43:19,390
D time and now we need<font color="#CCCCCC"> to keep track of</font>

995
00:43:16,150 --> 00:43:25,239
whether this time is already taken up or

996
00:43:19,390 --> 00:43:29,410
<font color="#E5E5E5">not and so in this case what we</font><font color="#CCCCCC"> actually</font>

997
00:43:25,239 --> 00:43:32,019
do is we<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to add another route</font>

998
00:43:29,410 --> 00:43:37,868
element<font color="#E5E5E5"> and that's a route queue time</font>

999
00:43:32,019 --> 00:43:40,538
limit which which defines when a started

1000
00:43:37,869 --> 00:43:42,999
operation needs<font color="#CCCCCC"> to be finished so it</font><font color="#E5E5E5"> has</font>

1001
00:43:40,539 --> 00:43:46,569
an actual<font color="#E5E5E5"> time which is the point in</font>

1002
00:43:42,999 --> 00:43:49,209
time<font color="#CCCCCC"> like now duration or something just</font>

1003
00:43:46,569 --> 00:43:51,430
the<font color="#E5E5E5"> finishing point in time and then</font>

1004
00:43:49,210 --> 00:43:55,210
it's just the<font color="#CCCCCC"> same as the route queue</font>

1005
00:43:51,430 --> 00:43:59,680
time zone so this limits our process up

1006
00:43:55,210 --> 00:44:00,460
<font color="#CCCCCC">to this</font><font color="#E5E5E5"> end point of time and now we can</font>

1007
00:43:59,680 --> 00:44:03,339
we can<font color="#CCCCCC"> imply</font>

1008
00:44:00,460 --> 00:44:05,500
and our<font color="#E5E5E5"> route</font><font color="#CCCCCC"> advance</font><font color="#E5E5E5"> because whenever</font>

1009
00:44:03,339 --> 00:44:07,900
<font color="#E5E5E5">we have a queue time zone that's where</font>

1010
00:44:05,500 --> 00:44:11,800
we didn't<font color="#E5E5E5"> know what to write</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> so</font>

1011
00:44:07,900 --> 00:44:14,440
whenever we<font color="#E5E5E5"> advance this route then we</font>

1012
00:44:11,800 --> 00:44:19,349
know that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> need</font><font color="#CCCCCC"> to come up with a</font>

1013
00:44:14,440 --> 00:44:22,660
route queue time limit here<font color="#CCCCCC"> and whenever</font>

1014
00:44:19,349 --> 00:44:25,750
we have<font color="#CCCCCC"> this queue time limit</font><font color="#E5E5E5"> and we</font>

1015
00:44:22,660 --> 00:44:29,140
<font color="#E5E5E5">advance over that one then we know</font><font color="#CCCCCC"> that</font>

1016
00:44:25,750 --> 00:44:32,320
we just<font color="#CCCCCC"> need to basically behave like</font>

1017
00:44:29,140 --> 00:44:36,009
before we need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> split this up and also</font>

1018
00:44:32,320 --> 00:44:38,470
keep our time limit<font color="#E5E5E5"> of course</font><font color="#CCCCCC"> and then</font>

1019
00:44:36,010 --> 00:44:41,520
just proceed<font color="#E5E5E5"> into this this limited</font>

1020
00:44:38,470 --> 00:44:45,368
while while keeping the time limit<font color="#E5E5E5"> and</font>

1021
00:44:41,520 --> 00:44:48,400
here if<font color="#CCCCCC"> we if we start</font><font color="#E5E5E5"> this out then we</font>

1022
00:44:45,369 --> 00:44:50,410
need to determine<font color="#CCCCCC"> the the end point so</font>

1023
00:44:48,400 --> 00:44:53,170
we take the<font color="#E5E5E5"> current time which we now</font>

1024
00:44:50,410 --> 00:44:56,109
need to<font color="#E5E5E5"> pass in here at the top so</font><font color="#CCCCCC"> we</font>

1025
00:44:53,170 --> 00:44:58,390
take the<font color="#E5E5E5"> current time add the duration</font>

1026
00:44:56,109 --> 00:45:01,119
and then we know when we<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be</font>

1027
00:44:58,390 --> 00:45:06,040
<font color="#E5E5E5">finished with this process and then in</font>

1028
00:45:01,119 --> 00:45:08,670
here yeah we<font color="#E5E5E5"> just we just work on on</font>

1029
00:45:06,040 --> 00:45:11,650
every step while keeping the time limit

1030
00:45:08,670 --> 00:45:13,119
so the your code suggested that there

1031
00:45:11,650 --> 00:45:15,430
was a gap<font color="#CCCCCC"> in your understanding of</font><font color="#E5E5E5"> what</font>

1032
00:45:13,119 --> 00:45:18,130
<font color="#CCCCCC">needs to be represented right</font><font color="#E5E5E5"> yes so I</font>

1033
00:45:15,430 --> 00:45:20,529
didn't know what<font color="#E5E5E5"> to put to the what to</font>

1034
00:45:18,130 --> 00:45:24,490
implement<font color="#E5E5E5"> for</font><font color="#CCCCCC"> the year out advance</font><font color="#E5E5E5"> yeah</font>

1035
00:45:20,530 --> 00:45:26,320
<font color="#CCCCCC">and now I know that</font><font color="#E5E5E5"> yeah watching this</font>

1036
00:45:24,490 --> 00:45:28,839
I'm<font color="#CCCCCC"> thinking that there's still</font><font color="#E5E5E5"> a little</font>

1037
00:45:26,320 --> 00:45:31,450
if I look at it<font color="#E5E5E5"> with the eye</font><font color="#CCCCCC"> of a domain</font>

1038
00:45:28,839 --> 00:45:33,970
person I think there's<font color="#E5E5E5"> still a little</font>

1039
00:45:31,450 --> 00:45:35,560
problem<font color="#E5E5E5"> in there</font><font color="#CCCCCC"> Oh</font><font color="#E5E5E5"> which is yeah if you</font>

1040
00:45:33,970 --> 00:45:37,029
look<font color="#E5E5E5"> at this right</font><font color="#CCCCCC"> remember a route</font>

1041
00:45:35,560 --> 00:45:39,220
element is<font color="#E5E5E5"> something that can occur</font>

1042
00:45:37,030 --> 00:45:42,010
anywhere in<font color="#E5E5E5"> the middle</font><font color="#CCCCCC"> beginning at the</font>

1043
00:45:39,220 --> 00:45:43,450
<font color="#E5E5E5">end of a route so it has these three</font>

1044
00:45:42,010 --> 00:45:45,160
things<font color="#CCCCCC"> obviously we can have queue time</font>

1045
00:45:43,450 --> 00:45:47,379
zones anywhere we<font color="#E5E5E5"> can have operations</font>

1046
00:45:45,160 --> 00:45:49,060
anywhere but the thing is we can<font color="#E5E5E5"> only</font>

1047
00:45:47,380 --> 00:45:52,210
enter a queue time zone when it's at<font color="#E5E5E5"> the</font>

1048
00:45:49,060 --> 00:45:54,700
beginning<font color="#CCCCCC"> right</font><font color="#E5E5E5"> oh I see so so you know</font>

1049
00:45:52,210 --> 00:45:57,700
here we<font color="#CCCCCC"> could have a random list in a</font>

1050
00:45:54,700 --> 00:45:59,649
random order<font color="#CCCCCC"> yeah that's right it points</font>

1051
00:45:57,700 --> 00:46:01,419
<font color="#CCCCCC">oh so you can't so this suggests that</font>

1052
00:45:59,650 --> 00:46:02,619
the queue time zone has been<font color="#E5E5E5"> entered</font>

1053
00:46:01,420 --> 00:46:04,210
<font color="#E5E5E5">because there's your out queue time</font>

1054
00:46:02,619 --> 00:46:05,790
limit but<font color="#CCCCCC"> there is</font><font color="#E5E5E5"> even though there's</font>

1055
00:46:04,210 --> 00:46:07,990
still<font color="#CCCCCC"> an operation there in front</font><font color="#E5E5E5"> of it</font>

1056
00:46:05,790 --> 00:46:10,810
okay that<font color="#E5E5E5"> doesn't make sense</font>

1057
00:46:07,990 --> 00:46:12,609
yeah that<font color="#E5E5E5"> makes no sense so we if we</font>

1058
00:46:10,810 --> 00:46:14,920
could go<font color="#E5E5E5"> back from the domain knowledge</font>

1059
00:46:12,609 --> 00:46:18,279
to the code now

1060
00:46:14,920 --> 00:46:19,930
we could refine that type further and we

1061
00:46:18,280 --> 00:46:21,310
could pull out<font color="#E5E5E5"> the</font><font color="#CCCCCC"> queue time limit from</font>

1062
00:46:19,930 --> 00:46:22,629
that type down<font color="#E5E5E5"> there because</font><font color="#CCCCCC"> these are</font>

1063
00:46:21,310 --> 00:46:25,390
all<font color="#E5E5E5"> the things that occur in the middle</font>

1064
00:46:22,630 --> 00:46:27,460
<font color="#E5E5E5">of a route and and pull it up to</font><font color="#CCCCCC"> a top</font>

1065
00:46:25,390 --> 00:46:29,020
level type and introduce an immediate

1066
00:46:27,460 --> 00:46:30,790
intermediate type that distinguishes

1067
00:46:29,020 --> 00:46:33,280
<font color="#E5E5E5">between what's in the middle and what's</font>

1068
00:46:30,790 --> 00:46:35,590
at the beginning<font color="#CCCCCC"> oh is he</font>

1069
00:46:33,280 --> 00:46:37,540
that's neat so that's what we now have

1070
00:46:35,590 --> 00:46:40,330
<font color="#CCCCCC">is we have</font><font color="#E5E5E5"> this back and forth between</font>

1071
00:46:37,540 --> 00:46:42,220
the code<font color="#E5E5E5"> which yields insights about the</font>

1072
00:46:40,330 --> 00:46:43,360
domain and the domain and from the

1073
00:46:42,220 --> 00:46:45,100
domain back to<font color="#E5E5E5"> their code</font><font color="#CCCCCC"> and we can</font>

1074
00:46:43,360 --> 00:46:48,160
<font color="#CCCCCC">play that game we can use the code</font><font color="#E5E5E5"> for</font>

1075
00:46:45,100 --> 00:46:50,620
communication<font color="#E5E5E5"> yeah so that's what I</font>

1076
00:46:48,160 --> 00:46:53,109
intended<font color="#E5E5E5"> so that you can understand this</font>

1077
00:46:50,620 --> 00:46:55,359
<font color="#E5E5E5">yeah</font><font color="#CCCCCC"> so that code no longer crushes my</font>

1078
00:46:53,110 --> 00:47:00,070
soul<font color="#CCCCCC"> actually I can say that yeah</font><font color="#E5E5E5"> right</font>

1079
00:46:55,360 --> 00:47:02,650
<font color="#E5E5E5">same here</font><font color="#CCCCCC"> so cool</font><font color="#E5E5E5"> okay so that's what</font>

1080
00:47:00,070 --> 00:47:05,410
the point we wanted<font color="#E5E5E5"> to</font><font color="#CCCCCC"> make</font><font color="#E5E5E5"> so if you</font>

1081
00:47:02,650 --> 00:47:08,890
take functional program<font color="#E5E5E5"> programming and</font>

1082
00:47:05,410 --> 00:47:10,930
if you add communication and discussions

1083
00:47:08,890 --> 00:47:13,390
<font color="#E5E5E5">and this going</font><font color="#CCCCCC"> back and forth</font><font color="#E5E5E5"> and</font>

1084
00:47:10,930 --> 00:47:17,200
learning<font color="#E5E5E5"> from both sides and enriching</font>

1085
00:47:13,390 --> 00:47:19,270
both sides with the information<font color="#E5E5E5"> coming</font>

1086
00:47:17,200 --> 00:47:22,859
from from the other<font color="#E5E5E5"> part then you</font>

1087
00:47:19,270 --> 00:47:24,910
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> end up at a silver</font><font color="#CCCCCC"> bullet</font>

1088
00:47:22,860 --> 00:47:26,740
everybody's looking confused<font color="#E5E5E5"> that's a so</font>

1089
00:47:24,910 --> 00:47:30,779
<font color="#E5E5E5">that's a bullet train a silver bullet</font>

1090
00:47:26,740 --> 00:47:34,928
train<font color="#E5E5E5"> okay we're done</font>

1091
00:47:30,780 --> 00:47:34,929
[Applause]

1092
00:47:36,160 --> 00:47:39,359
[Music]

1093
00:47:39,400 --> 00:47:45,140
<font color="#CCCCCC">for a</font><font color="#E5E5E5"> very entertaining talk we have</font>

1094
00:47:42,499 --> 00:47:47,180
some time<font color="#CCCCCC"> for questions Q&A so if you</font>

1095
00:47:45,140 --> 00:47:49,160
have any questions please<font color="#E5E5E5"> line up next</font>

1096
00:47:47,180 --> 00:47:50,629
<font color="#CCCCCC">to the microphones we have</font><font color="#E5E5E5"> four</font>

1097
00:47:49,160 --> 00:47:51,890
<font color="#E5E5E5">microphones but across the room and</font>

1098
00:47:50,630 --> 00:48:03,890
<font color="#E5E5E5">we'll start from a question from the</font>

1099
00:47:51,890 --> 00:48:07,460
internet from<font color="#CCCCCC"> the</font><font color="#E5E5E5"> internet as an FP big</font>

1100
00:48:03,890 --> 00:48:09,589
nerve with a weak<font color="#CCCCCC"> pékerman</font><font color="#E5E5E5"> MF would it</font>

1101
00:48:07,460 --> 00:48:11,299
be preferable<font color="#CCCCCC"> to learn functional</font>

1102
00:48:09,589 --> 00:48:14,920
programming in a pure functional

1103
00:48:11,299 --> 00:48:20,720
<font color="#E5E5E5">language over languages they are</font>

1104
00:48:14,920 --> 00:48:24,019
<font color="#E5E5E5">multi-paradigm so I'll take that one</font>

1105
00:48:20,720 --> 00:48:25,879
<font color="#CCCCCC">okay so so I think</font><font color="#E5E5E5"> the point is that</font>

1106
00:48:24,019 --> 00:48:26,839
<font color="#CCCCCC">there I mean there's many there's many</font>

1107
00:48:25,880 --> 00:48:28,249
different functional<font color="#E5E5E5"> programming</font>

1108
00:48:26,839 --> 00:48:30,109
<font color="#E5E5E5">languages and Haskell happens to be</font>

1109
00:48:28,249 --> 00:48:32,779
what's called<font color="#CCCCCC"> a pure one but there are</font>

1110
00:48:30,109 --> 00:48:34,460
<font color="#E5E5E5">also languages that are hybrid between</font>

1111
00:48:32,779 --> 00:48:35,900
object-oriented and functional

1112
00:48:34,460 --> 00:48:38,960
<font color="#CCCCCC">programming Scala I think is a prime</font>

1113
00:48:35,900 --> 00:48:41,569
example<font color="#CCCCCC"> right now and I</font><font color="#E5E5E5"> mean these are</font>

1114
00:48:38,960 --> 00:48:42,920
Scala is a fine language<font color="#E5E5E5"> the problem is</font>

1115
00:48:41,569 --> 00:48:44,630
if<font color="#E5E5E5"> you want to</font><font color="#CCCCCC"> combine these two</font>

1116
00:48:42,920 --> 00:48:46,309
<font color="#E5E5E5">paradigms you typically get something</font>

1117
00:48:44,630 --> 00:48:49,969
that's pretty<font color="#E5E5E5"> complicated so Scala is a</font>

1118
00:48:46,309 --> 00:48:52,819
complicated language<font color="#E5E5E5"> that takes more</font>

1119
00:48:49,969 --> 00:48:54,859
time<font color="#CCCCCC"> to</font><font color="#E5E5E5"> master also because you have</font><font color="#CCCCCC"> all</font>

1120
00:48:52,819 --> 00:48:57,170
<font color="#CCCCCC">of you have both paradigms available to</font>

1121
00:48:54,859 --> 00:48:58,969
you at both times<font color="#CCCCCC"> at all times it's</font>

1122
00:48:57,170 --> 00:49:00,890
sometimes it you often<font color="#E5E5E5"> get confused</font>

1123
00:48:58,969 --> 00:49:04,519
<font color="#E5E5E5">about what paradigm you should use in a</font>

1124
00:49:00,890 --> 00:49:07,368
in a given situation<font color="#E5E5E5"> so I think both of</font>

1125
00:49:04,519 --> 00:49:08,689
<font color="#E5E5E5">us</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> haven't really seen the</font><font color="#CCCCCC"> great</font>

1126
00:49:07,369 --> 00:49:11,960
advantages you get from<font color="#CCCCCC"> that hybrid</font>

1127
00:49:08,690 --> 00:49:15,200
model<font color="#CCCCCC"> also the</font><font color="#E5E5E5"> problem is if you're a</font>

1128
00:49:11,960 --> 00:49:16,969
learner in<font color="#E5E5E5"> FP and you try to tackle this</font>

1129
00:49:15,200 --> 00:49:19,968
with something<font color="#CCCCCC"> like</font><font color="#E5E5E5"> Scala you will</font>

1130
00:49:16,969 --> 00:49:22,369
inevitably fall back to what you<font color="#E5E5E5"> know if</font>

1131
00:49:19,969 --> 00:49:25,519
you run<font color="#E5E5E5"> into problems and so maybe just</font>

1132
00:49:22,369 --> 00:49:28,579
<font color="#E5E5E5">jump into the deep end and try to swim</font>

1133
00:49:25,519 --> 00:49:34,089
and see where you<font color="#E5E5E5"> get</font><font color="#CCCCCC"> at and get help on</font>

1134
00:49:28,579 --> 00:49:36,950
the<font color="#E5E5E5"> Internet yep number two</font>

1135
00:49:34,090 --> 00:49:40,559
[Music]

1136
00:49:36,950 --> 00:49:42,930
yeah<font color="#CCCCCC"> I was a good</font><font color="#E5E5E5"> presentation thank you</font>

1137
00:49:40,559 --> 00:49:46,380
every<font color="#E5E5E5"> time I see some functional</font>

1138
00:49:42,930 --> 00:49:48,868
programming it it<font color="#E5E5E5"> it's refreshing and</font>

1139
00:49:46,380 --> 00:49:50,069
it's interesting but the description<font color="#CCCCCC"> of</font>

1140
00:49:48,869 --> 00:49:53,849
your presentation was talking about

1141
00:49:50,069 --> 00:49:57,960
<font color="#CCCCCC">using</font><font color="#E5E5E5"> functional programming in IOT so</font>

1142
00:49:53,849 --> 00:49:59,250
there was<font color="#E5E5E5"> nothing specific</font><font color="#CCCCCC"> to IOT</font><font color="#E5E5E5"> in</font>

1143
00:49:57,960 --> 00:50:01,140
this presentation there<font color="#E5E5E5"> was no</font>

1144
00:49:59,250 --> 00:50:05,130
<font color="#CCCCCC">interaction with the hardware no</font>

1145
00:50:01,140 --> 00:50:08,368
interrupt handling<font color="#E5E5E5"> no nothing</font><font color="#CCCCCC"> how do you</font>

1146
00:50:05,130 --> 00:50:09,779
<font color="#E5E5E5">handle that</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> example</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> point I</font>

1147
00:50:08,369 --> 00:50:11,460
think<font color="#E5E5E5"> we drew I think</font><font color="#CCCCCC"> we had a bunch of</font>

1148
00:50:09,779 --> 00:50:16,619
<font color="#E5E5E5">slides of that that we ended ended up</font>

1149
00:50:11,460 --> 00:50:18,960
dropping because<font color="#CCCCCC"> of time but so my</font>

1150
00:50:16,619 --> 00:50:20,880
argument<font color="#CCCCCC"> would</font><font color="#E5E5E5"> be that IOT is the</font><font color="#CCCCCC"> LTS</font>

1151
00:50:18,960 --> 00:50:22,819
the software is the same software<font color="#CCCCCC"> is the</font>

1152
00:50:20,880 --> 00:50:25,079
same software as any other software

1153
00:50:22,819 --> 00:50:29,670
<font color="#CCCCCC">what's special about IOT</font><font color="#E5E5E5"> is the risk</font>

1154
00:50:25,079 --> 00:50:32,160
<font color="#CCCCCC">that emanates from IOT obviously</font><font color="#E5E5E5"> so if</font>

1155
00:50:29,670 --> 00:50:34,410
you do things like so if you want<font color="#E5E5E5"> to do</font>

1156
00:50:32,160 --> 00:50:36,240
things like interrupt handling<font color="#CCCCCC"> I think</font>

1157
00:50:34,410 --> 00:50:39,230
my response<font color="#CCCCCC"> to that would be to convert</font>

1158
00:50:36,240 --> 00:50:41,758
<font color="#E5E5E5">it into into functional data structures</font>

1159
00:50:39,230 --> 00:50:43,140
and this gives you a deterministic model

1160
00:50:41,759 --> 00:50:46,230
for handling<font color="#E5E5E5"> that kind</font><font color="#CCCCCC"> of stuff</font>

1161
00:50:43,140 --> 00:50:47,460
<font color="#E5E5E5">so so we talked about that I think</font><font color="#CCCCCC"> we</font>

1162
00:50:46,230 --> 00:50:49,170
talked a little bit about<font color="#E5E5E5"> the observer</font>

1163
00:50:47,460 --> 00:50:50,490
<font color="#E5E5E5">pattern which is analogous to what</font>

1164
00:50:49,170 --> 00:50:51,930
usually happens with interrupt handling

1165
00:50:50,490 --> 00:50:54,479
which is<font color="#E5E5E5"> what you were</font><font color="#CCCCCC"> talking about</font><font color="#E5E5E5"> and</font>

1166
00:50:51,930 --> 00:50:55,980
and<font color="#E5E5E5"> the way to do that</font><font color="#CCCCCC"> really is to have</font>

1167
00:50:54,480 --> 00:50:57,390
of<font color="#E5E5E5"> course</font><font color="#CCCCCC"> we have a tiny bit of</font>

1168
00:50:55,980 --> 00:50:59,039
imperative<font color="#E5E5E5"> code that hooks your</font>

1169
00:50:57,390 --> 00:51:01,558
functional<font color="#E5E5E5"> code to the hardware or</font>

1170
00:50:59,039 --> 00:51:03,960
whatever it<font color="#E5E5E5"> is but to convert your</font>

1171
00:51:01,559 --> 00:51:05,190
interrupts into a list and<font color="#CCCCCC"> you can ask</font>

1172
00:51:03,960 --> 00:51:06,839
<font color="#CCCCCC">Lashley's pretty good at that</font>

1173
00:51:05,190 --> 00:51:08,309
and that then gives<font color="#E5E5E5"> you all the</font>

1174
00:51:06,839 --> 00:51:11,038
advantages of functional programming<font color="#CCCCCC"> the</font>

1175
00:51:08,309 --> 00:51:12,960
<font color="#E5E5E5">testability</font><font color="#CCCCCC"> the funny</font><font color="#E5E5E5"> the the funky</font>

1176
00:51:11,039 --> 00:51:14,339
abstractions<font color="#E5E5E5"> and you can use that even</font>

1177
00:51:12,960 --> 00:51:16,319
<font color="#CCCCCC">on the</font><font color="#E5E5E5"> interrupts and it turns into</font>

1178
00:51:14,339 --> 00:51:21,299
<font color="#E5E5E5">software just like any other functional</font>

1179
00:51:16,319 --> 00:51:24,390
software microphone<font color="#E5E5E5"> number one hi thank</font>

1180
00:51:21,299 --> 00:51:27,690
you<font color="#E5E5E5"> for your talk</font><font color="#CCCCCC"> I have to write code</font>

1181
00:51:24,390 --> 00:51:30,328
for microprocessors<font color="#E5E5E5"> and most of the time</font>

1182
00:51:27,690 --> 00:51:33,509
I<font color="#E5E5E5"> only have a C compiler and if I'm</font>

1183
00:51:30,329 --> 00:51:36,289
<font color="#CCCCCC">lucky I get a C++ compiler where can</font><font color="#E5E5E5"> I</font>

1184
00:51:33,509 --> 00:51:36,289
get a<font color="#E5E5E5"> silver bullet</font>

1185
00:51:37,430 --> 00:51:44,819
the<font color="#E5E5E5"> the old Haskell compiler used to</font>

1186
00:51:41,220 --> 00:51:47,549
compile to see nowadays<font color="#E5E5E5"> it doesn't</font><font color="#CCCCCC"> do</font>

1187
00:51:44,819 --> 00:51:51,150
that<font color="#CCCCCC"> anymore by default but</font><font color="#E5E5E5"> probably you</font>

1188
00:51:47,549 --> 00:51:53,009
can make it<font color="#E5E5E5"> to that still yeah there's a</font>

1189
00:51:51,150 --> 00:51:55,529
number<font color="#CCCCCC"> there's a number</font><font color="#E5E5E5"> of function</font>

1190
00:51:53,009 --> 00:51:57,359
languages that compile to<font color="#CCCCCC"> C so it's kind</font>

1191
00:51:55,529 --> 00:51:59,999
of difficult<font color="#CCCCCC"> to give one a</font><font color="#E5E5E5"> one-shot</font>

1192
00:51:57,359 --> 00:52:01,890
<font color="#E5E5E5">answer we've also done a project for</font>

1193
00:51:59,999 --> 00:52:03,118
<font color="#E5E5E5">example where we get a lot</font><font color="#CCCCCC"> of the</font>

1194
00:52:01,890 --> 00:52:05,670
advantages<font color="#CCCCCC"> from functional programming</font>

1195
00:52:03,119 --> 00:52:08,999
<font color="#E5E5E5">by writing code in Haskell that</font>

1196
00:52:05,670 --> 00:52:10,410
generates the C code<font color="#E5E5E5"> right</font><font color="#CCCCCC"> and so</font>

1197
00:52:08,999 --> 00:52:13,200
there's a whole space difficult to give

1198
00:52:10,410 --> 00:52:14,489
you like one one answer without<font color="#CCCCCC"> knowing</font>

1199
00:52:13,200 --> 00:52:16,348
more details about what<font color="#CCCCCC"> it is that</font>

1200
00:52:14,489 --> 00:52:19,170
you're doing<font color="#E5E5E5"> but there's certainly a lot</font>

1201
00:52:16,349 --> 00:52:24,539
<font color="#CCCCCC">of spectrum of options available in that</font>

1202
00:52:19,170 --> 00:52:27,690
context<font color="#CCCCCC"> so functional programming is</font>

1203
00:52:24,539 --> 00:52:30,269
pretty concise and pretty compact<font color="#E5E5E5"> so no</font>

1204
00:52:27,690 --> 00:52:34,289
one<font color="#CCCCCC"> really wants to use large variable</font>

1205
00:52:30,269 --> 00:52:38,368
names<font color="#CCCCCC"> and I saw in your examples like</font><font color="#E5E5E5"> a</font>

1206
00:52:34,289 --> 00:52:40,319
D and TTL or T's and I don't<font color="#E5E5E5"> think</font><font color="#CCCCCC"> that</font>

1207
00:52:38,369 --> 00:52:43,019
<font color="#CCCCCC">there's so much better</font><font color="#E5E5E5"> than the long</font>

1208
00:52:40,319 --> 00:52:47,519
versions you showed<font color="#E5E5E5"> earlier like what is</font>

1209
00:52:43,019 --> 00:52:49,319
<font color="#E5E5E5">your take on that</font><font color="#CCCCCC"> yes so the general so</font>

1210
00:52:47,519 --> 00:52:53,549
I'm also struggling a little bit with

1211
00:52:49,319 --> 00:52:56,308
this<font color="#CCCCCC"> one thing is that this was was</font>

1212
00:52:53,549 --> 00:52:59,549
<font color="#E5E5E5">fairly concrete code right but often you</font>

1213
00:52:56,309 --> 00:53:03,269
you go into the abstractions and and in

1214
00:52:59,549 --> 00:53:06,839
the abstraction<font color="#CCCCCC"> there it's it's</font>

1215
00:53:03,269 --> 00:53:09,328
arbitrary what you have so<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can use</font>

1216
00:53:06,839 --> 00:53:12,210
short names because because you're not

1217
00:53:09,329 --> 00:53:16,950
<font color="#CCCCCC">talking about</font><font color="#E5E5E5"> concrete things anyway so</font>

1218
00:53:12,210 --> 00:53:19,440
<font color="#CCCCCC">that's why it's easier to</font><font color="#E5E5E5"> use also</font><font color="#CCCCCC"> more</font>

1219
00:53:16,950 --> 00:53:21,930
like abstract variable names but what I

1220
00:53:19,440 --> 00:53:25,019
actually do<font color="#CCCCCC"> is I also use longer names</font>

1221
00:53:21,930 --> 00:53:26,038
<font color="#E5E5E5">so I would not always use D and RT and</font>

1222
00:53:25,019 --> 00:53:29,220
something like that

1223
00:53:26,039 --> 00:53:31,470
to<font color="#E5E5E5"> get a better grip on this but one one</font>

1224
00:53:29,220 --> 00:53:34,439
important thing<font color="#E5E5E5"> you</font><font color="#CCCCCC"> must</font><font color="#E5E5E5"> not forget is</font>

1225
00:53:31,470 --> 00:53:37,109
<font color="#CCCCCC">that this you have a function right and</font>

1226
00:53:34,440 --> 00:53:40,019
it's two lines three lines and so if you

1227
00:53:37,109 --> 00:53:41,999
start<font color="#CCCCCC"> out and</font><font color="#E5E5E5"> you understand D and RT</font>

1228
00:53:40,019 --> 00:53:45,299
for example from the from the signature

1229
00:53:41,999 --> 00:53:48,509
<font color="#E5E5E5">and reading three lines of</font><font color="#CCCCCC"> code with a D</font>

1230
00:53:45,299 --> 00:53:49,509
and<font color="#CCCCCC"> RT in it it's</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> bad right and</font>

1231
00:53:48,509 --> 00:53:51,459
<font color="#E5E5E5">in in</font>

1232
00:53:49,509 --> 00:53:53,229
<font color="#E5E5E5">object-oriented or Java or</font><font color="#CCCCCC"> whatever you</font>

1233
00:53:51,459 --> 00:53:55,209
sometimes have hundreds of<font color="#E5E5E5"> lines and</font>

1234
00:53:53,229 --> 00:53:57,308
<font color="#E5E5E5">then you have a</font><font color="#CCCCCC"> DNA arty</font><font color="#E5E5E5"> and you read</font>

1235
00:53:55,209 --> 00:54:01,178
this for<font color="#CCCCCC"> half an</font><font color="#E5E5E5"> hour and then of</font><font color="#CCCCCC"> course</font>

1236
00:53:57,309 --> 00:54:03,429
you forget what it means and so you know

1237
00:54:01,179 --> 00:54:05,979
it's a it's a bit of a balance so I

1238
00:54:03,429 --> 00:54:08,679
would use longer<font color="#E5E5E5"> names as well probably</font>

1239
00:54:05,979 --> 00:54:12,759
<font color="#E5E5E5">but sometimes also shorter because yeah</font>

1240
00:54:08,679 --> 00:54:14,380
just the code is so so so short<font color="#E5E5E5"> okay if</font>

1241
00:54:12,759 --> 00:54:15,789
I<font color="#E5E5E5"> could add one one</font><font color="#CCCCCC"> details I find</font>

1242
00:54:14,380 --> 00:54:17,709
myself<font color="#E5E5E5"> using longer names and</font>

1243
00:54:15,789 --> 00:54:18,999
dynamically<font color="#E5E5E5"> typed languages right</font>

1244
00:54:17,709 --> 00:54:19,989
<font color="#E5E5E5">they're dynamically</font><font color="#CCCCCC"> type functioning</font>

1245
00:54:18,999 --> 00:54:21,339
which isn't<font color="#E5E5E5"> there you don't have the</font>

1246
00:54:19,989 --> 00:54:22,809
type that spells out what<font color="#E5E5E5"> that thing</font><font color="#CCCCCC"> is</font>

1247
00:54:21,339 --> 00:54:25,149
<font color="#E5E5E5">all right</font><font color="#CCCCCC"> and then you need</font><font color="#E5E5E5"> to put it in</font>

1248
00:54:22,809 --> 00:54:28,059
the variable<font color="#CCCCCC"> name microphone number</font><font color="#E5E5E5"> one</font>

1249
00:54:25,149 --> 00:54:29,769
yeah in one of the<font color="#E5E5E5"> slides you made the</font>

1250
00:54:28,059 --> 00:54:32,409
claim that<font color="#E5E5E5"> a functional programming</font>

1251
00:54:29,769 --> 00:54:37,209
lends itself to proving how would you

1252
00:54:32,409 --> 00:54:39,699
<font color="#CCCCCC">actually do this good</font><font color="#E5E5E5"> question so that's</font>

1253
00:54:37,209 --> 00:54:41,049
<font color="#E5E5E5">another talk right we in practice so</font>

1254
00:54:39,699 --> 00:54:44,409
there's various<font color="#CCCCCC"> ways of</font><font color="#E5E5E5"> doing that</font><font color="#CCCCCC"> so</font>

1255
00:54:41,049 --> 00:54:45,999
<font color="#CCCCCC">first of all as</font><font color="#E5E5E5"> you saw right</font><font color="#CCCCCC"> a Hasker</font>

1256
00:54:44,409 --> 00:54:48,399
program is a bunch of<font color="#CCCCCC"> equations</font><font color="#E5E5E5"> so you</font>

1257
00:54:45,999 --> 00:54:51,038
can use algebra as a mathematical

1258
00:54:48,399 --> 00:54:52,509
<font color="#CCCCCC">technique</font><font color="#E5E5E5"> to reason about functional</font>

1259
00:54:51,039 --> 00:54:54,279
programs so first of<font color="#CCCCCC"> all going</font><font color="#E5E5E5"> from</font>

1260
00:54:52,509 --> 00:54:57,639
going to the<font color="#E5E5E5"> abstract aspect of that</font>

1261
00:54:54,279 --> 00:54:59,079
<font color="#E5E5E5">question which is something well</font><font color="#CCCCCC"> you can</font>

1262
00:54:57,639 --> 00:55:01,419
sort of do<font color="#CCCCCC"> it with your</font><font color="#E5E5E5"> java program but</font>

1263
00:54:59,079 --> 00:55:03,249
it is<font color="#E5E5E5"> much</font><font color="#CCCCCC"> harder to establish</font><font color="#E5E5E5"> an</font>

1264
00:55:01,419 --> 00:55:06,129
algebraic<font color="#CCCCCC"> way of talking</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> Java</font>

1265
00:55:03,249 --> 00:55:09,218
programs<font color="#CCCCCC"> there's also plenty</font><font color="#E5E5E5"> of tooling</font>

1266
00:55:06,130 --> 00:55:10,299
available to to write to prove<font color="#E5E5E5"> aspects</font>

1267
00:55:09,219 --> 00:55:12,639
of<font color="#E5E5E5"> your programs</font><font color="#CCCCCC"> and functional</font>

1268
00:55:10,299 --> 00:55:16,239
<font color="#E5E5E5">languages starting</font><font color="#CCCCCC"> with a classic tool</font>

1269
00:55:12,639 --> 00:55:18,069
called<font color="#E5E5E5"> AC l2 we can talks on something</font>

1270
00:55:16,239 --> 00:55:19,329
called<font color="#E5E5E5"> Idris so there's a newer breed of</font>

1271
00:55:18,069 --> 00:55:21,699
functional languages where<font color="#E5E5E5"> you can put</font>

1272
00:55:19,329 --> 00:55:24,279
more proofs<font color="#CCCCCC"> into the types of your of</font>

1273
00:55:21,699 --> 00:55:26,219
<font color="#E5E5E5">your languages so it just turn it turns</font>

1274
00:55:24,279 --> 00:55:28,659
out and tends<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be just a magnitude of</font>

1275
00:55:26,219 --> 00:55:30,969
an order of<font color="#E5E5E5"> magnitude</font><font color="#CCCCCC"> easier</font><font color="#E5E5E5"> to prove</font>

1276
00:55:28,659 --> 00:55:32,289
properties of functional<font color="#CCCCCC"> programming</font>

1277
00:55:30,969 --> 00:55:34,599
because you can use algebra and

1278
00:55:32,289 --> 00:55:36,849
equational reasoning as you would<font color="#E5E5E5"> about</font>

1279
00:55:34,599 --> 00:55:41,319
<font color="#E5E5E5">Java programs</font><font color="#CCCCCC"> does</font><font color="#E5E5E5"> that answer your</font>

1280
00:55:36,849 --> 00:55:43,569
<font color="#CCCCCC">question a</font><font color="#E5E5E5"> little bit a bit but I think</font>

1281
00:55:41,319 --> 00:55:45,999
<font color="#E5E5E5">it rests uses like dependent types</font><font color="#CCCCCC"> and</font>

1282
00:55:43,569 --> 00:55:48,339
doesn't<font color="#E5E5E5"> isn't it</font><font color="#CCCCCC"> possible to use it in</font>

1283
00:55:45,999 --> 00:55:52,479
<font color="#E5E5E5">imperative</font><font color="#CCCCCC"> programming as well maybe I</font>

1284
00:55:48,339 --> 00:55:53,979
don't<font color="#E5E5E5"> know so</font><font color="#CCCCCC"> is that specific to a</font>

1285
00:55:52,479 --> 00:55:56,569
functional<font color="#E5E5E5"> programming dependent types</font>

1286
00:55:53,979 --> 00:55:58,419
<font color="#E5E5E5">or could</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> be used in</font>

1287
00:55:56,569 --> 00:56:00,349
even the way<font color="#CCCCCC"> that it has talked about</font>

1288
00:55:58,419 --> 00:56:01,029
imperative programming is functional

1289
00:56:00,349 --> 00:56:05,599
<font color="#E5E5E5">right</font>

1290
00:56:01,029 --> 00:56:08,509
using monads<font color="#E5E5E5"> by the way</font><font color="#CCCCCC"> so so</font><font color="#E5E5E5"> there's</font>

1291
00:56:05,599 --> 00:56:10,969
that<font color="#E5E5E5"> and there's this whole spiel about</font>

1292
00:56:08,509 --> 00:56:12,739
reasoning about effects but but the

1293
00:56:10,969 --> 00:56:13,999
<font color="#CCCCCC">thing is effect</font><font color="#E5E5E5"> side effects it you have</font>

1294
00:56:12,739 --> 00:56:15,439
an imperative programming right they

1295
00:56:13,999 --> 00:56:17,149
don't<font color="#E5E5E5"> make it impossible to reason</font><font color="#CCCCCC"> about</font>

1296
00:56:15,439 --> 00:56:20,089
programs<font color="#E5E5E5"> but they make it</font><font color="#CCCCCC"> much much</font>

1297
00:56:17,150 --> 00:56:21,799
<font color="#E5E5E5">harder and so in a functional program</font>

1298
00:56:20,089 --> 00:56:24,259
you<font color="#CCCCCC"> tent you in a proper functional</font>

1299
00:56:21,799 --> 00:56:25,640
program that doesn't<font color="#E5E5E5"> crush your soul</font><font color="#CCCCCC"> you</font>

1300
00:56:24,259 --> 00:56:27,410
tend to<font color="#E5E5E5"> have large parts that are purely</font>

1301
00:56:25,640 --> 00:56:29,598
functional and<font color="#E5E5E5"> that allow functional</font>

1302
00:56:27,410 --> 00:56:30,859
that allow equation or easing and and

1303
00:56:29,599 --> 00:56:32,630
you have smaller parts that may be

1304
00:56:30,859 --> 00:56:34,098
making<font color="#E5E5E5"> that might be a</font><font color="#CCCCCC"> little bit more</font>

1305
00:56:32,630 --> 00:56:38,719
difficult that<font color="#E5E5E5"> are about the interaction</font>

1306
00:56:34,099 --> 00:56:40,939
with<font color="#CCCCCC"> the imperative environment</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> the</font>

1307
00:56:38,719 --> 00:56:43,489
thing<font color="#CCCCCC"> that we did</font><font color="#E5E5E5"> was a type system you</font>

1308
00:56:40,939 --> 00:56:46,578
know you<font color="#CCCCCC"> remember first we had the list</font>

1309
00:56:43,489 --> 00:56:49,099
and<font color="#E5E5E5"> we had the the</font><font color="#CCCCCC"> RTR the the</font><font color="#E5E5E5"> queue</font>

1310
00:56:46,579 --> 00:56:51,589
time limit in the middle and<font color="#E5E5E5"> that was an</font>

1311
00:56:49,099 --> 00:56:55,459
illegal<font color="#E5E5E5"> state and so we changed the type</font>

1312
00:56:51,589 --> 00:56:57,679
system<font color="#E5E5E5"> to disallow this and so actually</font>

1313
00:56:55,459 --> 00:57:00,859
already the compiler tells us hey<font color="#CCCCCC"> this</font>

1314
00:56:57,679 --> 00:57:02,619
is forbidden code right<font color="#E5E5E5"> and and it's not</font>

1315
00:57:00,859 --> 00:57:05,029
syntactically<font color="#E5E5E5"> wrong but it's</font>

1316
00:57:02,619 --> 00:57:08,709
semantically wrong and that's<font color="#CCCCCC"> what what</font>

1317
00:57:05,029 --> 00:57:13,249
it's also a like a<font color="#CCCCCC"> weak kind of</font>

1318
00:57:08,709 --> 00:57:15,198
validation<font color="#E5E5E5"> or</font><font color="#CCCCCC"> verification in my</font><font color="#E5E5E5"> opinion</font>

1319
00:57:13,249 --> 00:57:18,558
yeah<font color="#E5E5E5"> so we could talk about all this</font>

1320
00:57:15,199 --> 00:57:21,499
about<font color="#CCCCCC"> this all day sorry another</font>

1321
00:57:18,559 --> 00:57:23,299
question from microphone<font color="#CCCCCC"> number</font><font color="#E5E5E5"> two</font><font color="#CCCCCC"> I I</font>

1322
00:57:21,499 --> 00:57:26,538
noticed that you didn't present any

1323
00:57:23,299 --> 00:57:28,969
mechanism<font color="#CCCCCC"> to hide your implementation or</font>

1324
00:57:26,539 --> 00:57:32,869
to make things private<font color="#E5E5E5"> but things that</font>

1325
00:57:28,969 --> 00:57:35,329
<font color="#E5E5E5">you can do in C++ and</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't miss those</font>

1326
00:57:32,869 --> 00:57:38,419
mechanism but I would<font color="#E5E5E5"> like to know your</font>

1327
00:57:35,329 --> 00:57:40,579
<font color="#E5E5E5">take on why I</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> you don't miss them</font>

1328
00:57:38,419 --> 00:57:42,499
<font color="#CCCCCC">so</font><font color="#E5E5E5"> why do you you</font><font color="#CCCCCC"> don't miss</font><font color="#E5E5E5"> them either</font>

1329
00:57:40,579 --> 00:57:43,579
<font color="#CCCCCC">no they exist in functional languages</font><font color="#E5E5E5"> as</font>

1330
00:57:42,499 --> 00:57:44,779
<font color="#CCCCCC">well right</font>

1331
00:57:43,579 --> 00:57:47,439
and so the mechanisms that<font color="#E5E5E5"> you're</font>

1332
00:57:44,779 --> 00:57:49,130
familiar with private things modules

1333
00:57:47,439 --> 00:57:51,678
<font color="#E5E5E5">partially I</font><font color="#CCCCCC"> would just tend to not use</font>

1334
00:57:49,130 --> 00:57:54,079
objects and classes for<font color="#E5E5E5"> modularization</font><font color="#CCCCCC"> I</font>

1335
00:57:51,679 --> 00:57:56,239
think that's the primary<font color="#E5E5E5"> difference but</font>

1336
00:57:54,079 --> 00:57:57,499
<font color="#CCCCCC">function languages tend</font><font color="#E5E5E5"> to always have</font>

1337
00:57:56,239 --> 00:57:59,809
mechanisms<font color="#CCCCCC"> for</font><font color="#E5E5E5"> doing that they're just</font>

1338
00:57:57,499 --> 00:58:01,249
<font color="#CCCCCC">differed between languages so it's it's</font>

1339
00:57:59,809 --> 00:58:02,599
<font color="#CCCCCC">difficult</font><font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about this in a talk</font>

1340
00:58:01,249 --> 00:58:04,249
we could<font color="#E5E5E5"> have told you how to do this in</font>

1341
00:58:02,599 --> 00:58:07,130
Haskell<font color="#E5E5E5"> and write a module and hide</font>

1342
00:58:04,249 --> 00:58:08,359
things<font color="#E5E5E5"> but what if</font><font color="#CCCCCC"> mate would</font><font color="#E5E5E5"> have put</font>

1343
00:58:07,130 --> 00:58:11,570
<font color="#E5E5E5">more quotes on the coat</font><font color="#CCCCCC"> on</font>

1344
00:58:08,360 --> 00:58:13,580
and the other<font color="#E5E5E5"> aspect is that you don't</font>

1345
00:58:11,570 --> 00:58:16,310
really<font color="#E5E5E5"> have to hide things because</font>

1346
00:58:13,580 --> 00:58:19,640
<font color="#E5E5E5">everything is pure so if you call this</font>

1347
00:58:16,310 --> 00:58:21,140
function<font color="#E5E5E5"> I don't care you know</font><font color="#CCCCCC"> you can't</font>

1348
00:58:19,640 --> 00:58:23,960
<font color="#E5E5E5">destroy anything</font>

1349
00:58:21,140 --> 00:58:27,350
whereas in object-oriented<font color="#CCCCCC"> programming</font>

1350
00:58:23,960 --> 00:58:29,270
you have<font color="#CCCCCC"> this change my object</font><font color="#E5E5E5"> to really</font>

1351
00:58:27,350 --> 00:58:31,339
bad something you know and you<font color="#E5E5E5"> don't</font>

1352
00:58:29,270 --> 00:58:32,990
want<font color="#E5E5E5"> anybody</font><font color="#CCCCCC"> else to</font><font color="#E5E5E5"> call this because</font>

1353
00:58:31,340 --> 00:58:35,660
it will really break things and<font color="#CCCCCC"> in</font>

1354
00:58:32,990 --> 00:58:39,229
functional programming<font color="#CCCCCC"> checking some</font>

1355
00:58:35,660 --> 00:58:41,690
<font color="#E5E5E5">variables get something out do this as</font>

1356
00:58:39,230 --> 00:58:43,820
much<font color="#CCCCCC"> as you want</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> don't care that last</font>

1357
00:58:41,690 --> 00:58:48,620
one is they take<font color="#CCCCCC"> I love and I endorse</font>

1358
00:58:43,820 --> 00:58:50,180
fully<font color="#E5E5E5"> microphone</font><font color="#CCCCCC"> number three you had</font>

1359
00:58:48,620 --> 00:58:52,730
some slides on<font color="#E5E5E5"> the importance of</font>

1360
00:58:50,180 --> 00:58:54,169
<font color="#E5E5E5">communication I have a hard</font><font color="#CCCCCC"> time to see</font>

1361
00:58:52,730 --> 00:59:02,000
myself communicating with business

1362
00:58:54,170 --> 00:59:03,560
people<font color="#E5E5E5"> using Haskell code how would you</font>

1363
00:59:02,000 --> 00:59:07,730
do the communication<font color="#E5E5E5"> was like normal</font>

1364
00:59:03,560 --> 00:59:08,990
people<font color="#CCCCCC"> this actually I mean</font><font color="#E5E5E5"> we we we</font>

1365
00:59:07,730 --> 00:59:13,760
clean<font color="#CCCCCC"> it up somewhat but this actually</font>

1366
00:59:08,990 --> 00:59:15,470
happened<font color="#CCCCCC"> so it's sometimes</font><font color="#E5E5E5"> a device</font>

1367
00:59:13,760 --> 00:59:18,080
sometimes<font color="#E5E5E5"> a little bit of a</font><font color="#CCCCCC"> process to</font>

1368
00:59:15,470 --> 00:59:19,910
get there<font color="#E5E5E5"> and sometimes but what you</font>

1369
00:59:18,080 --> 00:59:22,100
could all<font color="#E5E5E5"> I mean what you notice</font><font color="#CCCCCC"> may be</font>

1370
00:59:19,910 --> 00:59:26,509
in the<font color="#CCCCCC"> inner coat with the routes was</font>

1371
00:59:22,100 --> 00:59:28,670
that<font color="#E5E5E5"> playing with</font><font color="#CCCCCC"> the Haskell code</font>

1372
00:59:26,510 --> 00:59:30,560
<font color="#E5E5E5">yielded domain insights that you could</font>

1373
00:59:28,670 --> 00:59:33,590
have also explained to somebody in a

1374
00:59:30,560 --> 00:59:35,720
<font color="#CCCCCC">meeting right without</font><font color="#E5E5E5"> enjoying the code</font>

1375
00:59:33,590 --> 00:59:37,820
yeah and so that's so the communication

1376
00:59:35,720 --> 00:59:40,040
<font color="#CCCCCC">goes through the Haskell code maybe it</font>

1377
00:59:37,820 --> 00:59:43,820
<font color="#E5E5E5">not it doesn't happen you know by the</font>

1378
00:59:40,040 --> 00:59:45,710
Haskell code<font color="#E5E5E5"> but all I can tell you is</font>

1379
00:59:43,820 --> 00:59:47,110
that that<font color="#CCCCCC"> actually happens is we</font>

1380
00:59:45,710 --> 00:59:50,690
sometimes communicate with clients

1381
00:59:47,110 --> 00:59:52,460
<font color="#CCCCCC">showing them code and talking to them</font>

1382
00:59:50,690 --> 00:59:54,260
about is this<font color="#E5E5E5"> really what you're doing</font>

1383
00:59:52,460 --> 00:59:56,060
is this what your domain is like that

1384
00:59:54,260 --> 00:59:58,070
<font color="#E5E5E5">happens something to me as well yeah so</font>

1385
00:59:56,060 --> 01:00:01,190
<font color="#CCCCCC">it depends on</font><font color="#E5E5E5"> your clients you know they</font>

1386
00:59:58,070 --> 01:00:06,050
need<font color="#E5E5E5"> a bit have a bit of resilience so</font>

1387
01:00:01,190 --> 01:00:07,880
they can you<font color="#E5E5E5"> know and they can accept</font>

1388
01:00:06,050 --> 01:00:10,160
that<font color="#E5E5E5"> they wouldn't understand everything</font>

1389
01:00:07,880 --> 01:00:12,140
but if you like<font color="#E5E5E5"> to talk them through and</font>

1390
01:00:10,160 --> 01:00:13,879
say look here<font color="#E5E5E5"> is this and this goes in</font>

1391
01:00:12,140 --> 01:00:16,730
and that comes out and what<font color="#E5E5E5"> do you think</font>

1392
01:00:13,880 --> 01:00:19,030
<font color="#CCCCCC">about this</font><font color="#E5E5E5"> and then so</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> just not</font>

1393
01:00:16,730 --> 01:00:21,740
throw the code at them but<font color="#E5E5E5"> you have a</font>

1394
01:00:19,030 --> 01:00:23,660
informed communication say

1395
01:00:21,740 --> 01:00:25,250
<font color="#E5E5E5">this can also be contractually enforced</font>

1396
01:00:23,660 --> 01:00:31,910
<font color="#E5E5E5">and I remember one</font><font color="#CCCCCC"> instance where we did</font>

1397
01:00:25,250 --> 01:00:36,560
that big round of applause<font color="#CCCCCC"> for</font><font color="#E5E5E5"> this</font>

1398
01:00:31,910 --> 01:00:36,560
[Applause]

1399
01:00:36,760 --> 01:00:43,929
[Music]

1400
01:00:46,000 --> 01:00:58,670
[Music]

