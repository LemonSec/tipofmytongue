1
00:00:00,920 --> 00:00:05,290
[Music]

2
00:00:02,280 --> 00:00:11,689
[Laughter]

3
00:00:05,290 --> 00:00:11,689
[Music]

4
00:00:18,240 --> 00:00:22,640
hello

5
00:00:18,800 --> 00:00:25,199
and welcome to this first talk

6
00:00:22,640 --> 00:00:27,119
today i'm going to get into

7
00:00:25,199 --> 00:00:30,880
cross-platform development

8
00:00:27,119 --> 00:00:34,160
using flutter what is flutter

9
00:00:30,880 --> 00:00:36,399
flutter is a cross-platform development

10
00:00:34,160 --> 00:00:36,398
kit

11
00:00:40,320 --> 00:00:48,160
here a fancy logo you can see over there

12
00:00:45,039 --> 00:00:51,199
okay we will talk about uh

13
00:00:48,160 --> 00:00:54,559
how to install flutter we will talk

14
00:00:51,199 --> 00:00:57,120
about the special features of flutter

15
00:00:54,559 --> 00:00:58,879
hans widgets and we'll have a look on

16
00:00:57,120 --> 00:01:02,078
their plug-ins

17
00:00:58,879 --> 00:01:04,878
um we will have a look on two different

18
00:01:02,079 --> 00:01:05,600
kinds of these widgets stateful and

19
00:01:04,879 --> 00:01:08,960
stateless

20
00:01:05,600 --> 00:01:12,559
widgets um and at the end we will

21
00:01:08,960 --> 00:01:15,679
talk about the main feature of

22
00:01:12,560 --> 00:01:18,159
flat is part of the code of the code

23
00:01:15,680 --> 00:01:19,759
so you do not have separate uh style

24
00:01:18,159 --> 00:01:23,439
files or

25
00:01:19,759 --> 00:01:23,439
separate layout files

26
00:01:23,759 --> 00:01:27,680
okay how would you install flutter well

27
00:01:26,880 --> 00:01:30,880
if you are

28
00:01:27,680 --> 00:01:31,439
used to git it's actually quite easy you

29
00:01:30,880 --> 00:01:34,560
simply

30
00:01:31,439 --> 00:01:37,279
clone their git repository uh

31
00:01:34,560 --> 00:01:39,280
update the path and you have the flatter

32
00:01:37,280 --> 00:01:42,560
tool installed

33
00:01:39,280 --> 00:01:44,000
that installs two things the library

34
00:01:42,560 --> 00:01:47,119
flutter

35
00:01:44,000 --> 00:01:49,840
and the programming language dart

36
00:01:47,119 --> 00:01:51,119
dart is the programming language you use

37
00:01:49,840 --> 00:01:53,680
with flutter

38
00:01:51,119 --> 00:01:54,640
of course you could use dart without

39
00:01:53,680 --> 00:01:57,920
flutter but

40
00:01:54,640 --> 00:02:01,440
dart is usually used with flutter

41
00:01:57,920 --> 00:02:02,719
and flutter only works with dart

42
00:02:01,440 --> 00:02:06,158
[Music]

43
00:02:02,719 --> 00:02:08,560
okay well

44
00:02:06,159 --> 00:02:11,120
if you are not interested in cloning git

45
00:02:08,560 --> 00:02:15,040
repositories if you are not that used to

46
00:02:11,120 --> 00:02:18,160
comment prompts uh you could easily uh

47
00:02:15,040 --> 00:02:20,959
install flutter using the plug-in of

48
00:02:18,160 --> 00:02:22,079
uh your development environment for

49
00:02:20,959 --> 00:02:26,080
example visual studio

50
00:02:22,080 --> 00:02:29,200
code or android studio so intellij

51
00:02:26,080 --> 00:02:31,840
they offer very user-friendly plug-ins

52
00:02:29,200 --> 00:02:32,480
within a quick installation guide for

53
00:02:31,840 --> 00:02:36,480
flutter

54
00:02:32,480 --> 00:02:40,079
automating all these uh steps

55
00:02:36,480 --> 00:02:42,399
okay what is flutter like

56
00:02:40,080 --> 00:02:43,599
um if we have a look on flutter we talk

57
00:02:42,400 --> 00:02:45,840
about different things

58
00:02:43,599 --> 00:02:47,040
we have the framework written and dart

59
00:02:45,840 --> 00:02:50,080
we have the engine

60
00:02:47,040 --> 00:02:54,239
and we have platform specific uh

61
00:02:50,080 --> 00:02:56,160
code vladio consists of something called

62
00:02:54,239 --> 00:02:58,800
the flutter tool that's not listed in

63
00:02:56,160 --> 00:03:01,840
the graphic you can see there

64
00:02:58,800 --> 00:03:04,480
that's what you use to create an

65
00:03:01,840 --> 00:03:05,040
application for example if you type

66
00:03:04,480 --> 00:03:07,679
flatter

67
00:03:05,040 --> 00:03:09,519
create my new application in the comment

68
00:03:07,680 --> 00:03:12,560
prompt that's the flatter2

69
00:03:09,519 --> 00:03:14,000
tool you use um but as soon as you run

70
00:03:12,560 --> 00:03:17,599
an application

71
00:03:14,000 --> 00:03:20,720
you have this it works

72
00:03:17,599 --> 00:03:22,480
the way the graphic presents it um you

73
00:03:20,720 --> 00:03:23,200
have this framework consisting of

74
00:03:22,480 --> 00:03:26,879
everything

75
00:03:23,200 --> 00:03:30,839
you can see and everything you can do

76
00:03:26,879 --> 00:03:34,560
so you have buttons for example

77
00:03:30,840 --> 00:03:37,920
material buttons these are the two

78
00:03:34,560 --> 00:03:40,480
um main theme styles so material is the

79
00:03:37,920 --> 00:03:41,440
the android or chrome os style and

80
00:03:40,480 --> 00:03:46,000
capatino

81
00:03:41,440 --> 00:03:49,519
is the ios style user interface

82
00:03:46,000 --> 00:03:52,720
um the framework takes also care of

83
00:03:49,519 --> 00:03:54,879
the rendering animations interactions

84
00:03:52,720 --> 00:03:55,840
with users so gestures if you tap a

85
00:03:54,879 --> 00:03:58,399
button

86
00:03:55,840 --> 00:03:59,360
uh or if you move around something on

87
00:03:58,400 --> 00:04:02,560
the

88
00:03:59,360 --> 00:04:06,879
ui that's something

89
00:04:02,560 --> 00:04:09,840
the frame the framework takes care of

90
00:04:06,879 --> 00:04:10,480
um and under the framework there's the

91
00:04:09,840 --> 00:04:14,080
engine

92
00:04:10,480 --> 00:04:16,959
the engine operates everything

93
00:04:14,080 --> 00:04:18,320
which is not specific to your

94
00:04:16,959 --> 00:04:22,079
application so

95
00:04:18,320 --> 00:04:22,560
the general stuff of flutter takes care

96
00:04:22,079 --> 00:04:25,440
of

97
00:04:22,560 --> 00:04:26,479
the interaction with the dart virtual

98
00:04:25,440 --> 00:04:28,800
machine

99
00:04:26,479 --> 00:04:29,840
it takes care of platform channels for

100
00:04:28,800 --> 00:04:34,240
example if you want to

101
00:04:29,840 --> 00:04:37,919
uh access native code uh takes care

102
00:04:34,240 --> 00:04:39,600
of accessibility it interacts with the

103
00:04:37,919 --> 00:04:42,639
operating system

104
00:04:39,600 --> 00:04:46,000
and so on um and

105
00:04:42,639 --> 00:04:46,639
beside of those two there's still the am

106
00:04:46,000 --> 00:04:50,400
better

107
00:04:46,639 --> 00:04:53,440
the embedder is um what is

108
00:04:50,400 --> 00:04:55,520
yeah typic for one kind of device for

109
00:04:53,440 --> 00:04:58,400
example for one platform

110
00:04:55,520 --> 00:04:58,960
um for example for android um the

111
00:04:58,400 --> 00:05:01,919
embedder

112
00:04:58,960 --> 00:05:02,960
takes care of threads of process

113
00:05:01,919 --> 00:05:05,840
management

114
00:05:02,960 --> 00:05:08,159
takes care of the even loop of the

115
00:05:05,840 --> 00:05:09,198
operating system and it takes care of

116
00:05:08,160 --> 00:05:12,479
interaction

117
00:05:09,199 --> 00:05:16,000
of with native uh plugins

118
00:05:12,479 --> 00:05:17,919
and most important it's responsible for

119
00:05:16,000 --> 00:05:20,160
packing the application for example if

120
00:05:17,919 --> 00:05:22,159
you have raw dart code now a device

121
00:05:20,160 --> 00:05:25,039
would be able to execute it

122
00:05:22,160 --> 00:05:25,680
so the amateur is uh responsible for

123
00:05:25,039 --> 00:05:30,560
packing

124
00:05:25,680 --> 00:05:33,600
this code into an uh

125
00:05:30,560 --> 00:05:37,199
executable on windows into a

126
00:05:33,600 --> 00:05:40,639
javascript file on uh on the web

127
00:05:37,199 --> 00:05:45,520
or into an apk file on

128
00:05:40,639 --> 00:05:50,080
android okay

129
00:05:45,520 --> 00:05:52,479
well now i already introduced these uh

130
00:05:50,080 --> 00:05:53,680
widgets i talked about material and

131
00:05:52,479 --> 00:05:57,120
cupertino widgets

132
00:05:53,680 --> 00:05:59,600
um but what is a widget

133
00:05:57,120 --> 00:06:01,039
um yeah a widget is pretty much

134
00:05:59,600 --> 00:06:04,960
everything you can see

135
00:06:01,039 --> 00:06:08,560
in a flutter app um

136
00:06:04,960 --> 00:06:10,799
a widget is any user interface element

137
00:06:08,560 --> 00:06:12,560
uh sometimes allowing interaction

138
00:06:10,800 --> 00:06:14,000
sometimes not but everything you can see

139
00:06:12,560 --> 00:06:16,639
in an application

140
00:06:14,000 --> 00:06:17,680
is called widget you can imagine a

141
00:06:16,639 --> 00:06:20,800
widget

142
00:06:17,680 --> 00:06:25,759
um like for example

143
00:06:20,800 --> 00:06:28,720
html elements um you simply put them

144
00:06:25,759 --> 00:06:29,759
into each other and create a document

145
00:06:28,720 --> 00:06:33,440
tree

146
00:06:29,759 --> 00:06:36,960
um but unlike if you use html

147
00:06:33,440 --> 00:06:39,919
um you do not have html for

148
00:06:36,960 --> 00:06:42,479
for the lay for the layout css for the

149
00:06:39,919 --> 00:06:45,120
style and javascript for the interaction

150
00:06:42,479 --> 00:06:46,318
um if you have flutter these widgets

151
00:06:45,120 --> 00:06:50,639
provide all these

152
00:06:46,319 --> 00:06:50,639
three parts

153
00:06:50,720 --> 00:06:56,960
so the widget performed the layout

154
00:06:54,240 --> 00:06:59,680
the widget offers style and offers

155
00:06:56,960 --> 00:07:01,599
interaction with the user

156
00:06:59,680 --> 00:07:02,960
and you do not have any separation

157
00:07:01,599 --> 00:07:06,800
between style

158
00:07:02,960 --> 00:07:09,039
and content of the application

159
00:07:06,800 --> 00:07:10,319
that's a very good feature for

160
00:07:09,039 --> 00:07:12,400
development

161
00:07:10,319 --> 00:07:15,039
and makes many things such as

162
00:07:12,400 --> 00:07:19,359
refactoring code

163
00:07:15,039 --> 00:07:22,800
but there are uh different

164
00:07:19,360 --> 00:07:25,039
types of less widgets without

165
00:07:22,800 --> 00:07:26,160
any kind of feedback they can provide

166
00:07:25,039 --> 00:07:28,639
their once

167
00:07:26,160 --> 00:07:30,080
rendered and afterwards they are present

168
00:07:28,639 --> 00:07:32,880
or if

169
00:07:30,080 --> 00:07:34,719
the parenting witcher decides well i no

170
00:07:32,880 --> 00:07:36,240
longer want to show this for example

171
00:07:34,720 --> 00:07:38,319
text

172
00:07:36,240 --> 00:07:39,840
that is just being removed without any

173
00:07:38,319 --> 00:07:43,440
interaction of this

174
00:07:39,840 --> 00:07:44,159
widget another point are stateful

175
00:07:43,440 --> 00:07:47,599
widgets

176
00:07:44,160 --> 00:07:51,199
they allow interaction um

177
00:07:47,599 --> 00:07:52,878
so for example if you have a text as a

178
00:07:51,199 --> 00:07:56,080
state full widget

179
00:07:52,879 --> 00:07:59,039
uh it can tell

180
00:07:56,080 --> 00:08:00,159
it is able to tell the application after

181
00:07:59,039 --> 00:08:04,000
a couple of seconds

182
00:08:00,160 --> 00:08:07,360
okay now i want to change my own color

183
00:08:04,000 --> 00:08:07,840
or i want to change my font size so it

184
00:08:07,360 --> 00:08:10,720
can

185
00:08:07,840 --> 00:08:12,400
uh it has an own event loop and can

186
00:08:10,720 --> 00:08:15,120
decide based on

187
00:08:12,400 --> 00:08:16,799
things happening inside this widget um

188
00:08:15,120 --> 00:08:20,240
that's usually

189
00:08:16,800 --> 00:08:22,800
uh a bit yeah

190
00:08:20,240 --> 00:08:24,720
not these law level with which it's like

191
00:08:22,800 --> 00:08:27,840
tax but all these high level

192
00:08:24,720 --> 00:08:32,959
which it's like list views consisting of

193
00:08:27,840 --> 00:08:36,958
several children and so on

194
00:08:32,958 --> 00:08:40,079
menus they consist of a menu button

195
00:08:36,958 --> 00:08:41,679
and drop down menu and whatever or even

196
00:08:40,080 --> 00:08:46,399
the whole page of an application

197
00:08:41,679 --> 00:08:49,760
all these are widgets stateful widgets

198
00:08:46,399 --> 00:08:51,440
okay um time to provide some code

199
00:08:49,760 --> 00:08:54,880
samples um that was a

200
00:08:51,440 --> 00:08:56,080
bit uh introduction into the

201
00:08:54,880 --> 00:08:59,360
architecture and

202
00:08:56,080 --> 00:09:02,640
let's have a look on code

203
00:08:59,360 --> 00:09:05,440
well um congratulations

204
00:09:02,640 --> 00:09:06,720
that's a simple flutter program if you

205
00:09:05,440 --> 00:09:09,440
write it and you provide

206
00:09:06,720 --> 00:09:11,200
a declaration of home page um you should

207
00:09:09,440 --> 00:09:12,399
be able to run an application on your

208
00:09:11,200 --> 00:09:16,320
mobile phone

209
00:09:12,399 --> 00:09:19,600
um yeah what does it it executes a

210
00:09:16,320 --> 00:09:23,040
main function calling a method call

211
00:09:19,600 --> 00:09:25,600
calling a function called run app

212
00:09:23,040 --> 00:09:26,880
which runs a material app so following

213
00:09:25,600 --> 00:09:29,279
the material

214
00:09:26,880 --> 00:09:31,600
design you know from android or chrome

215
00:09:29,279 --> 00:09:33,920
os

216
00:09:31,600 --> 00:09:37,839
okay but of course we need to implement

217
00:09:33,920 --> 00:09:37,839
a home page

218
00:09:38,800 --> 00:09:47,359
well let's have a look at um and a

219
00:09:42,480 --> 00:09:47,360
bit more difficult uh widget

220
00:09:48,839 --> 00:09:51,839
um

221
00:10:24,240 --> 00:10:28,160
thing uh it or tell the widget

222
00:10:27,440 --> 00:10:31,279
everything

223
00:10:28,160 --> 00:10:32,160
it needs to know for building in our

224
00:10:31,279 --> 00:10:35,839
case we

225
00:10:32,160 --> 00:10:38,959
simply return a list tile containing

226
00:10:35,839 --> 00:10:39,920
uh consisting of an icon and an outline

227
00:10:38,959 --> 00:10:43,599
button

228
00:10:39,920 --> 00:10:46,560
and the outline button can do any

229
00:10:43,600 --> 00:10:47,920
thing it can share a text so you would

230
00:10:46,560 --> 00:10:51,119
see a share prompt

231
00:10:47,920 --> 00:10:51,920
on your mobile phone uh on the web it

232
00:10:51,120 --> 00:10:55,440
would download

233
00:10:51,920 --> 00:10:58,880
the text okay

234
00:10:55,440 --> 00:11:02,399
but why is it stateless and not stateful

235
00:10:58,880 --> 00:11:03,040
um simply because it cannot interact

236
00:11:02,399 --> 00:11:06,959
with is

237
00:11:03,040 --> 00:11:07,839
itself uh the widget is unable to change

238
00:11:06,959 --> 00:11:11,199
one of its

239
00:11:07,839 --> 00:11:14,800
variables uh the widget can

240
00:11:11,200 --> 00:11:17,680
not set a timer it simply could not

241
00:11:14,800 --> 00:11:18,800
uh if you would tell the widget well

242
00:11:17,680 --> 00:11:21,519
wait five seconds

243
00:11:18,800 --> 00:11:22,959
and do whatever it would not change the

244
00:11:21,519 --> 00:11:26,399
appearance of the widget

245
00:11:22,959 --> 00:11:29,439
um because it is once built

246
00:11:26,399 --> 00:11:32,640
and afterwards it has no more

247
00:11:29,440 --> 00:11:33,279
uh it no longer has the ability to

248
00:11:32,640 --> 00:11:36,640
change its

249
00:11:33,279 --> 00:11:38,079
uh appearance or behavior only the

250
00:11:36,640 --> 00:11:41,600
parenting widget

251
00:11:38,079 --> 00:11:45,120
so for example the list we put this uh

252
00:11:41,600 --> 00:11:47,040
score detail inside it could trigger a

253
00:11:45,120 --> 00:11:49,680
rebuild of this widget but not the

254
00:11:47,040 --> 00:11:53,199
widget itself

255
00:11:49,680 --> 00:11:56,239
um to clarify this point

256
00:11:53,200 --> 00:11:59,680
uh we will have a look at the state full

257
00:11:56,240 --> 00:12:02,399
widget um it's a bit shorter because the

258
00:11:59,680 --> 00:12:04,560
stateful widget consists of two classes

259
00:12:02,399 --> 00:12:05,680
um state class that's what you can see

260
00:12:04,560 --> 00:12:09,439
over there

261
00:12:05,680 --> 00:12:12,560
um and well the actual declaration that

262
00:12:09,440 --> 00:12:15,200
is a widget um but the

263
00:12:12,560 --> 00:12:15,920
state is much more interesting um if we

264
00:12:15,200 --> 00:12:19,200
look

265
00:12:15,920 --> 00:12:22,479
at it um okay you

266
00:12:19,200 --> 00:12:24,800
first see there are

267
00:12:22,480 --> 00:12:27,120
we first initialize some variables

268
00:12:24,800 --> 00:12:29,519
afterwards we have a method called

269
00:12:27,120 --> 00:12:31,279
init state that's something which is

270
00:12:29,519 --> 00:12:32,240
being triggered the first time the

271
00:12:31,279 --> 00:12:35,360
widget is

272
00:12:32,240 --> 00:12:36,000
built um afterwards we declare another

273
00:12:35,360 --> 00:12:39,519
method

274
00:12:36,000 --> 00:12:40,480
and at the end we have uh our build

275
00:12:39,519 --> 00:12:43,519
method

276
00:12:40,480 --> 00:12:44,560
um yeah what does or what's the

277
00:12:43,519 --> 00:12:47,680
difference from this

278
00:12:44,560 --> 00:12:49,920
build method to the build method we had

279
00:12:47,680 --> 00:12:53,920
in our stateless widget

280
00:12:49,920 --> 00:12:57,199
um i hope you can see my pointer here

281
00:12:53,920 --> 00:12:59,519
um we have here we have an if statement

282
00:12:57,200 --> 00:13:03,600
here a shortened if statement

283
00:12:59,519 --> 00:13:06,160
um so the build method checks

284
00:13:03,600 --> 00:13:06,800
whether a variable called test order

285
00:13:06,160 --> 00:13:10,160
that's

286
00:13:06,800 --> 00:13:13,760
being declared at the top here um

287
00:13:10,160 --> 00:13:17,279
whether it is uh false or true

288
00:13:13,760 --> 00:13:20,480
uh and because it correspondingly

289
00:13:17,279 --> 00:13:23,680
reacts so if it's true

290
00:13:20,480 --> 00:13:24,720
uh a list view is uh being displayed and

291
00:13:23,680 --> 00:13:28,239
otherwise

292
00:13:24,720 --> 00:13:31,360
a progress into indicator is being shown

293
00:13:28,240 --> 00:13:33,120
um okay but

294
00:13:31,360 --> 00:13:35,120
well that's something we could still

295
00:13:33,120 --> 00:13:37,760
implement in a stateless

296
00:13:35,120 --> 00:13:38,800
widget but there's another big

297
00:13:37,760 --> 00:13:42,000
difference

298
00:13:38,800 --> 00:13:44,639
here um we have something

299
00:13:42,000 --> 00:13:46,000
which change something as soon as

300
00:13:44,639 --> 00:13:49,279
something happens well

301
00:13:46,000 --> 00:13:52,160
maybe some things um it's an

302
00:13:49,279 --> 00:13:53,040
expansion tile so a list tile which can

303
00:13:52,160 --> 00:13:57,519
be expanded

304
00:13:53,040 --> 00:14:00,880
it's a built-in widget of flutter um

305
00:13:57,519 --> 00:14:04,000
and as soon as it is being opened

306
00:14:00,880 --> 00:14:04,480
uh a local method is triggered here we

307
00:14:04,000 --> 00:14:07,760
have this

308
00:14:04,480 --> 00:14:08,880
lord score method and that is uh being

309
00:14:07,760 --> 00:14:12,160
triggered

310
00:14:08,880 --> 00:14:14,720
um we do not know what it does but

311
00:14:12,160 --> 00:14:16,480
i can tell you well it will load some

312
00:14:14,720 --> 00:14:19,040
data from where

313
00:14:16,480 --> 00:14:20,880
where so ever and it will change this

314
00:14:19,040 --> 00:14:24,560
variable so afterwards after

315
00:14:20,880 --> 00:14:28,079
this method is being triggered um

316
00:14:24,560 --> 00:14:29,040
the test data here will be something

317
00:14:28,079 --> 00:14:31,279
different

318
00:14:29,040 --> 00:14:32,560
it will no longer show the progress but

319
00:14:31,279 --> 00:14:35,279
it will show this

320
00:14:32,560 --> 00:14:38,079
inside a single widget without any

321
00:14:35,279 --> 00:14:41,279
communication without any external stuff

322
00:14:38,079 --> 00:14:44,880
without any javascript

323
00:14:41,279 --> 00:14:46,959
get get element by id or something like

324
00:14:44,880 --> 00:14:49,920
that the widget simply decides

325
00:14:46,959 --> 00:14:53,119
uh on its own behavior that's very

326
00:14:49,920 --> 00:14:53,120
comfortable believe me

327
00:14:53,199 --> 00:15:02,240
okay um now i already uh talked a bit on

328
00:14:59,199 --> 00:15:04,880
javascript um it's somehow different

329
00:15:02,240 --> 00:15:06,000
um well flutter is often being compared

330
00:15:04,880 --> 00:15:09,439
to javascript

331
00:15:06,000 --> 00:15:13,120
uh using react native on and electron

332
00:15:09,440 --> 00:15:16,320
so what's the different difference um

333
00:15:13,120 --> 00:15:18,560
well let's first look on javascript

334
00:15:16,320 --> 00:15:20,800
if you write an application in

335
00:15:18,560 --> 00:15:23,920
javascript

336
00:15:20,800 --> 00:15:26,639
you actually have javascript and

337
00:15:23,920 --> 00:15:28,719
javascript is a web language

338
00:15:26,639 --> 00:15:29,920
hence you need a web view or something

339
00:15:28,720 --> 00:15:33,440
similar

340
00:15:29,920 --> 00:15:36,880
to render anything in of your app

341
00:15:33,440 --> 00:15:40,160
um that means it consumes an

342
00:15:36,880 --> 00:15:43,199
immense amount of memory uh

343
00:15:40,160 --> 00:15:44,000
and cpu power because well if you ever

344
00:15:43,199 --> 00:15:46,719
used

345
00:15:44,000 --> 00:15:48,639
chromium or firefox on the low end

346
00:15:46,720 --> 00:15:52,800
device you know that javascript

347
00:15:48,639 --> 00:15:54,959
can be well quite painful and

348
00:15:52,800 --> 00:15:57,199
well there are high-end mobile devices

349
00:15:54,959 --> 00:15:58,079
but if you develop an app you should

350
00:15:57,199 --> 00:16:01,040
always

351
00:15:58,079 --> 00:16:02,000
uh keep in mind that there are mobile

352
00:16:01,040 --> 00:16:05,199
devices with

353
00:16:02,000 --> 00:16:08,560
much less power and less than two giga

354
00:16:05,199 --> 00:16:11,680
gigabyte of ram um

355
00:16:08,560 --> 00:16:14,800
okay and if you

356
00:16:11,680 --> 00:16:15,519
have flutter and opposite you create a

357
00:16:14,800 --> 00:16:18,479
native

358
00:16:15,519 --> 00:16:20,160
app um you have native code which is

359
00:16:18,480 --> 00:16:23,279
being executed

360
00:16:20,160 --> 00:16:27,920
beside the dart virtual machine uh

361
00:16:23,279 --> 00:16:29,519
with almost uh the same look and feel

362
00:16:27,920 --> 00:16:31,040
you know from your platform if you have

363
00:16:29,519 --> 00:16:34,160
javascript and opposite

364
00:16:31,040 --> 00:16:35,759
um you usually have a fancy design you

365
00:16:34,160 --> 00:16:36,719
made which is actually good for web

366
00:16:35,759 --> 00:16:38,639
development

367
00:16:36,720 --> 00:16:40,000
uh but it's usually not exactly the

368
00:16:38,639 --> 00:16:43,040
design

369
00:16:40,000 --> 00:16:45,440
packed from a mobile device um there are

370
00:16:43,040 --> 00:16:47,599
very strict guidelines if you ask apple

371
00:16:45,440 --> 00:16:48,560
or if you ever published an app to the

372
00:16:47,600 --> 00:16:50,880
app store you know

373
00:16:48,560 --> 00:16:52,399
they're very strict guidelines at apple

374
00:16:50,880 --> 00:16:55,519
and

375
00:16:52,399 --> 00:16:57,759
at google these uh their guidelines as

376
00:16:55,519 --> 00:16:59,680
well but they're not that strict

377
00:16:57,759 --> 00:17:01,120
um but if you use flutter you

378
00:16:59,680 --> 00:17:04,319
automatically obey

379
00:17:01,120 --> 00:17:04,880
these guidelines and produce apps with a

380
00:17:04,319 --> 00:17:07,678
native

381
00:17:04,880 --> 00:17:07,679
look and feel

382
00:17:08,000 --> 00:17:14,480
and another advantage of flatter

383
00:17:11,280 --> 00:17:18,079
it's more an advantage in comparison to

384
00:17:14,480 --> 00:17:19,199
native native native apps um you have

385
00:17:18,079 --> 00:17:21,599
the same layout and

386
00:17:19,199 --> 00:17:22,799
the same code on the same on all your

387
00:17:21,599 --> 00:17:25,918
platforms

388
00:17:22,799 --> 00:17:27,918
um yeah because

389
00:17:25,919 --> 00:17:29,280
if you write native applications well

390
00:17:27,919 --> 00:17:31,200
you have two code bases and the

391
00:17:29,280 --> 00:17:33,120
applications behave differently on

392
00:17:31,200 --> 00:17:34,880
all platforms and if you have flutter

393
00:17:33,120 --> 00:17:35,678
you have one code base for all your

394
00:17:34,880 --> 00:17:38,000
platforms and

395
00:17:35,679 --> 00:17:39,039
of obviously it behaves the same way on

396
00:17:38,000 --> 00:17:41,840
all platforms

397
00:17:39,039 --> 00:17:42,960
uh that's much easier for your users if

398
00:17:41,840 --> 00:17:46,320
she should ever

399
00:17:42,960 --> 00:17:48,799
change their device um

400
00:17:46,320 --> 00:17:49,360
yeah and the major point i already

401
00:17:48,799 --> 00:17:52,799
mentioned

402
00:17:49,360 --> 00:17:56,000
at uh the first point uh there's

403
00:17:52,799 --> 00:18:00,080
almost no loss of performance

404
00:17:56,000 --> 00:18:03,200
um yeah so flutter is actually a

405
00:18:00,080 --> 00:18:08,480
very good framework for creating apps

406
00:18:03,200 --> 00:18:11,120
for android ios desktops such as windows

407
00:18:08,480 --> 00:18:12,160
mac os or linux free bsd is

408
00:18:11,120 --> 00:18:16,959
unfortunately not

409
00:18:12,160 --> 00:18:20,880
supported or even web pages

410
00:18:16,960 --> 00:18:23,440
okay yeah

411
00:18:20,880 --> 00:18:24,080
yeah uh at that point i want to thank

412
00:18:23,440 --> 00:18:26,400
you

413
00:18:24,080 --> 00:18:28,559
for your at for the attention of this

414
00:18:26,400 --> 00:18:31,120
talk

415
00:18:28,559 --> 00:18:33,440
feel free to attend my next talk on

416
00:18:31,120 --> 00:18:34,639
flatter tomorrow i will give an advanced

417
00:18:33,440 --> 00:18:36,720
view on

418
00:18:34,640 --> 00:18:37,919
cross-platform development using flutter

419
00:18:36,720 --> 00:18:41,200
we will focus on

420
00:18:37,919 --> 00:18:42,960
animations and the way flutter works

421
00:18:41,200 --> 00:18:46,240
under the hood

422
00:18:42,960 --> 00:18:57,840
now there should be an online q and a

423
00:18:46,240 --> 00:18:57,840
thank you for your attention

424
00:18:59,760 --> 00:19:04,000
hello this this was the this was the

425
00:19:02,160 --> 00:19:06,240
lecture by the one with the braid about

426
00:19:04,000 --> 00:19:08,880
flutter and we are now switching to a

427
00:19:06,240 --> 00:19:11,200
small q and a session here

428
00:19:08,880 --> 00:19:13,039
there's been exactly one question in the

429
00:19:11,200 --> 00:19:16,559
irc you can ask questions

430
00:19:13,039 --> 00:19:20,240
by the hashtag um rc3 ricky parker and

431
00:19:16,559 --> 00:19:20,799
in the rc3 wikipaka iot channel on

432
00:19:20,240 --> 00:19:23,280
hackend

433
00:19:20,799 --> 00:19:25,600
there's been one question which is what

434
00:19:23,280 --> 00:19:28,320
is the main feature of flutter with

435
00:19:25,600 --> 00:19:30,480
which lets me decide for it instead of

436
00:19:28,320 --> 00:19:39,840
example for example react native

437
00:19:30,480 --> 00:19:39,840
could you answer that question

438
00:19:50,840 --> 00:19:53,840
um

439
00:20:01,440 --> 00:20:05,200
uh the one with the braid we've got

440
00:20:03,760 --> 00:20:08,960
problems with your

441
00:20:05,200 --> 00:20:13,520
sound we can't receive you by a ninja

442
00:20:08,960 --> 00:20:13,520
only by our back hour only by our back

443
00:20:18,840 --> 00:20:21,840
channel

444
00:20:24,960 --> 00:20:31,520
and now they're gone here we are again

445
00:20:29,039 --> 00:20:32,799
yeah we can hear you know okay perfect

446
00:20:31,520 --> 00:20:35,918
well the question was what

447
00:20:32,799 --> 00:20:37,200
uh the yeah what should convince someone

448
00:20:35,919 --> 00:20:40,159
to use flutter um

449
00:20:37,200 --> 00:20:42,320
i would say the my main advantage to the

450
00:20:40,159 --> 00:20:45,039
principal advantage of flutter is

451
00:20:42,320 --> 00:20:46,559
uh the performance and uh the native

452
00:20:45,039 --> 00:20:48,720
like uh

453
00:20:46,559 --> 00:20:51,039
applications you get um if you use

454
00:20:48,720 --> 00:20:54,400
flutter you get native design of

455
00:20:51,039 --> 00:20:56,720
the operating system you run on uh and

456
00:20:54,400 --> 00:20:58,080
you have no lack of performance that's

457
00:20:56,720 --> 00:21:02,000
the main difference

458
00:20:58,080 --> 00:21:04,639
to uh um javascript for example so uh

459
00:21:02,000 --> 00:21:04,640
react native

460
00:21:04,880 --> 00:21:09,120
would you consider yourself to be a

461
00:21:06,159 --> 00:21:12,960
flutter fan or aficionado

462
00:21:09,120 --> 00:21:15,760
oh yeah i'm a huge fan of flutter

463
00:21:12,960 --> 00:21:16,720
okay we can tell that you do have other

464
00:21:15,760 --> 00:21:19,679
talks about

465
00:21:16,720 --> 00:21:20,400
flutter the coming days don't you yes

466
00:21:19,679 --> 00:21:23,840
tomorrow

467
00:21:20,400 --> 00:21:27,120
um at i think 12 o'clock

468
00:21:23,840 --> 00:21:29,918
uh there's a second talk on flutter

469
00:21:27,120 --> 00:21:30,879
advanced cross-platform development

470
00:21:29,919 --> 00:21:34,080
using flutter

471
00:21:30,880 --> 00:21:36,880
um we will focus on animations uh

472
00:21:34,080 --> 00:21:37,678
and on the way the engine to the

473
00:21:36,880 --> 00:21:41,280
underlying

474
00:21:37,679 --> 00:21:41,280
uh engine of flutter works

475
00:21:41,760 --> 00:21:44,879
alrighty there's been another question

476
00:21:43,360 --> 00:21:46,240
in the meantime here again by

477
00:21:44,880 --> 00:21:48,159
huntsville's 10

478
00:21:46,240 --> 00:21:49,360
rec native also gives you native

479
00:21:48,159 --> 00:21:52,480
components and design

480
00:21:49,360 --> 00:21:54,959
etc isn't that true yeah it's true but

481
00:21:52,480 --> 00:21:55,600
um well i would call the flatter

482
00:21:54,960 --> 00:21:58,880
components

483
00:21:55,600 --> 00:22:00,240
more native they are built a hundred

484
00:21:58,880 --> 00:22:03,280
percent according to

485
00:22:00,240 --> 00:22:05,200
the style style guidelines of uh the

486
00:22:03,280 --> 00:22:08,639
operating systems if you use

487
00:22:05,200 --> 00:22:09,600
um material buttons uh they are 100

488
00:22:08,640 --> 00:22:13,360
percent

489
00:22:09,600 --> 00:22:16,559
uh material so as you know them from

490
00:22:13,360 --> 00:22:18,799
your android phone for example um and

491
00:22:16,559 --> 00:22:19,760
i noticed in react native you sometimes

492
00:22:18,799 --> 00:22:22,559
have issues

493
00:22:19,760 --> 00:22:23,360
uh with or not issues but uh some

494
00:22:22,559 --> 00:22:26,480
components

495
00:22:23,360 --> 00:22:29,840
do not properly look exactly the way

496
00:22:26,480 --> 00:22:33,440
they should look and they

497
00:22:29,840 --> 00:22:36,639
often do not look the way the users

498
00:22:33,440 --> 00:22:36,640
expect them to look

499
00:22:36,799 --> 00:22:40,080
alrighty thanks for the answer to the

500
00:22:38,640 --> 00:22:42,400
questions there have been some

501
00:22:40,080 --> 00:22:44,000
more detailed questions uh as a

502
00:22:42,400 --> 00:22:47,360
follow-up on the irc

503
00:22:44,000 --> 00:22:49,919
but i've posted in the irc um

504
00:22:47,360 --> 00:22:51,199
a link where you can all join into for a

505
00:22:49,919 --> 00:22:52,159
little bit blue button session where you

506
00:22:51,200 --> 00:22:54,480
can go into

507
00:22:52,159 --> 00:22:56,400
more detailed exchange the one with the

508
00:22:54,480 --> 00:22:58,799
bridge thank you so much for your input

509
00:22:56,400 --> 00:23:00,799
this has been the first broadcast of the

510
00:22:58,799 --> 00:23:03,360
day end of rc3

511
00:23:00,799 --> 00:23:04,960
and uh we will uh continue to follow up

512
00:23:03,360 --> 00:23:07,039
with a little break and continue our

513
00:23:04,960 --> 00:23:10,320
program at 1600

514
00:23:07,039 --> 00:23:23,840
central european time thank you okay

515
00:23:10,320 --> 00:23:23,840
see you bye bye

