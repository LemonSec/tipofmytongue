1
00:00:00,920 --> 00:00:05,290
[Music]

2
00:00:02,280 --> 00:00:11,709
[Laughter]

3
00:00:05,290 --> 00:00:11,710
[Music]

4
00:00:15,519 --> 00:00:20,240
hello and welcome to

5
00:00:17,039 --> 00:00:22,960
my talk on remixing linux

6
00:00:20,240 --> 00:00:24,560
my name is the one with the braid and

7
00:00:22,960 --> 00:00:28,320
today i'm going to

8
00:00:24,560 --> 00:00:30,000
introduce uh your own creation of the

9
00:00:28,320 --> 00:00:33,360
linux distribution

10
00:00:30,000 --> 00:00:36,399
we will talk on remixing

11
00:00:33,360 --> 00:00:37,280
linux on the architecture you require to

12
00:00:36,399 --> 00:00:40,559
run an own

13
00:00:37,280 --> 00:00:45,520
linux distribution and some of

14
00:00:40,559 --> 00:00:49,199
the usual use cases

15
00:00:45,520 --> 00:00:49,200
okay let's start

16
00:00:49,840 --> 00:00:52,960
well what are use cases what are

17
00:00:52,239 --> 00:00:56,480
purposes

18
00:00:52,960 --> 00:00:59,920
of your own linux distribution of course

19
00:00:56,480 --> 00:01:01,680
you could customize a linux distribution

20
00:00:59,920 --> 00:01:03,680
for your enterprise environment for

21
00:01:01,680 --> 00:01:06,159
example if you require

22
00:01:03,680 --> 00:01:07,840
special network settings your own

23
00:01:06,159 --> 00:01:10,240
services to be installed

24
00:01:07,840 --> 00:01:11,280
uh it's sometimes easier to create an

25
00:01:10,240 --> 00:01:14,479
own distribution

26
00:01:11,280 --> 00:01:15,759
then using a

27
00:01:14,479 --> 00:01:17,759
ready-to-use distribution and

28
00:01:15,759 --> 00:01:20,080
customizing it

29
00:01:17,759 --> 00:01:21,040
another option is that you discovered

30
00:01:20,080 --> 00:01:24,240
something

31
00:01:21,040 --> 00:01:27,280
fully new and decide

32
00:01:24,240 --> 00:01:28,479
to create your own linux distribution uh

33
00:01:27,280 --> 00:01:30,799
that's what we call

34
00:01:28,479 --> 00:01:32,320
yet another linux distribution please

35
00:01:30,799 --> 00:01:35,360
please do not do this

36
00:01:32,320 --> 00:01:37,279
we already have uh enough different

37
00:01:35,360 --> 00:01:41,039
flavors of

38
00:01:37,280 --> 00:01:44,159
linux okay another uh valid uh reason

39
00:01:41,040 --> 00:01:46,320
is it's missing software if you require

40
00:01:44,159 --> 00:01:47,759
special software for a use case and you

41
00:01:46,320 --> 00:01:50,960
want to bundle it into your

42
00:01:47,759 --> 00:01:51,920
operating system um that's a usual use

43
00:01:50,960 --> 00:01:55,360
case

44
00:01:51,920 --> 00:01:58,320
um moreover embedding

45
00:01:55,360 --> 00:01:59,439
for microcontrollers is a common use

46
00:01:58,320 --> 00:02:02,559
case for

47
00:01:59,439 --> 00:02:05,839
linux remixing as well as uh

48
00:02:02,560 --> 00:02:06,719
om hardware support uh for computer

49
00:02:05,840 --> 00:02:10,000
vendors

50
00:02:06,719 --> 00:02:13,280
to bundle linux

51
00:02:10,000 --> 00:02:16,560
some known when vendors do this um

52
00:02:13,280 --> 00:02:18,160
yeah and of course another desktop or in

53
00:02:16,560 --> 00:02:19,120
general different pre-installed

54
00:02:18,160 --> 00:02:21,520
applications

55
00:02:19,120 --> 00:02:24,160
um very good reason to create your own

56
00:02:21,520 --> 00:02:26,160
distribution

57
00:02:24,160 --> 00:02:27,760
okay now what are we going to have a

58
00:02:26,160 --> 00:02:30,160
look on today

59
00:02:27,760 --> 00:02:31,040
uh we'll look on live systems because

60
00:02:30,160 --> 00:02:33,200
that's the most

61
00:02:31,040 --> 00:02:36,239
common use case afterwards we will go

62
00:02:33,200 --> 00:02:36,879
through step by step instructions for uh

63
00:02:36,239 --> 00:02:40,000
an ex

64
00:02:36,879 --> 00:02:42,399
yeah we take an example of ubuntu we

65
00:02:40,000 --> 00:02:45,680
talk on making your system installable

66
00:02:42,400 --> 00:02:48,800
and uh talk we will talk about

67
00:02:45,680 --> 00:02:51,200
uh a simple tool simplifying some of

68
00:02:48,800 --> 00:02:52,560
these steps we will have a look on linux

69
00:02:51,200 --> 00:02:55,359
from scratch meaning

70
00:02:52,560 --> 00:02:57,680
compiling everything yourself uh without

71
00:02:55,360 --> 00:03:00,239
using any templates or anything

72
00:02:57,680 --> 00:03:01,920
and we'll look at the architecture you

73
00:03:00,239 --> 00:03:04,480
require to run

74
00:03:01,920 --> 00:03:05,920
your own linux attribution aka package

75
00:03:04,480 --> 00:03:09,359
mirrors

76
00:03:05,920 --> 00:03:12,159
okay let's start with a live system um

77
00:03:09,360 --> 00:03:13,519
what are properties of the live system

78
00:03:12,159 --> 00:03:16,879
of course it needs

79
00:03:13,519 --> 00:03:19,599
to fulfill some requirements um

80
00:03:16,879 --> 00:03:20,399
if you use a tiny pen drive here i don't

81
00:03:19,599 --> 00:03:23,839
know

82
00:03:20,400 --> 00:03:26,959
eight gigabyte or 16 gigabyte

83
00:03:23,840 --> 00:03:30,159
um it's obvious you need to compress

84
00:03:26,959 --> 00:03:32,239
your whole system um

85
00:03:30,159 --> 00:03:33,679
mario it must be writable at runtime

86
00:03:32,239 --> 00:03:36,000
just uh

87
00:03:33,680 --> 00:03:38,080
try to mount your root file system in

88
00:03:36,000 --> 00:03:39,040
read only and run a web browser you will

89
00:03:38,080 --> 00:03:42,239
run into

90
00:03:39,040 --> 00:03:44,159
a big trouble uh same for network

91
00:03:42,239 --> 00:03:44,959
connections if you connect to wi-fi

92
00:03:44,159 --> 00:03:48,079
without

93
00:03:44,959 --> 00:03:51,599
a writable root system you will

94
00:03:48,080 --> 00:03:52,640
run into big trouble uh and another

95
00:03:51,599 --> 00:03:54,238
requirement well

96
00:03:52,640 --> 00:03:56,238
it's not really a requirement but it's

97
00:03:54,239 --> 00:03:59,439
recommended is an accessible

98
00:03:56,239 --> 00:04:01,920
live media so if we have our pen drive

99
00:03:59,439 --> 00:04:04,000
containing our live linux distribution

100
00:04:01,920 --> 00:04:04,480
we sometimes need to access the pen

101
00:04:04,000 --> 00:04:07,280
drive

102
00:04:04,480 --> 00:04:09,040
itself in our live environment for

103
00:04:07,280 --> 00:04:12,400
example if we have packages

104
00:04:09,040 --> 00:04:15,760
of our distribution inside or on

105
00:04:12,400 --> 00:04:16,959
our pen drive we may want to install

106
00:04:15,760 --> 00:04:19,680
them later

107
00:04:16,959 --> 00:04:22,000
um then it's quite good to have your

108
00:04:19,680 --> 00:04:24,400
live media accessible

109
00:04:22,000 --> 00:04:26,080
well of course we could script

110
00:04:24,400 --> 00:04:29,599
everything on our own but

111
00:04:26,080 --> 00:04:30,240
um someone already did all these steps

112
00:04:29,600 --> 00:04:33,600
and

113
00:04:30,240 --> 00:04:36,800
has put them into a tiny software called

114
00:04:33,600 --> 00:04:39,919
casper um cancer does exactly what we

115
00:04:36,800 --> 00:04:40,400
want uh it creates a union file system

116
00:04:39,919 --> 00:04:44,560
meaning

117
00:04:40,400 --> 00:04:47,520
an overlay on the existing file system

118
00:04:44,560 --> 00:04:49,280
and creates a kind of fake writable

119
00:04:47,520 --> 00:04:51,840
system in memory

120
00:04:49,280 --> 00:04:53,840
file system and memory so it allows

121
00:04:51,840 --> 00:04:54,960
modification of files creation of new

122
00:04:53,840 --> 00:04:57,280
files

123
00:04:54,960 --> 00:04:58,960
while they're actually being stored in

124
00:04:57,280 --> 00:05:02,320
the memory instead of on the

125
00:04:58,960 --> 00:05:03,440
on our physical disk it mounts the live

126
00:05:02,320 --> 00:05:06,000
media

127
00:05:03,440 --> 00:05:06,960
and it shows up a pretty display manager

128
00:05:06,000 --> 00:05:09,919
you can see

129
00:05:06,960 --> 00:05:10,479
uh over here that's ubuntu made it ask

130
00:05:09,919 --> 00:05:13,520
whether we

131
00:05:10,479 --> 00:05:17,280
want to try our system or

132
00:05:13,520 --> 00:05:17,280
whether we want to install our system

133
00:05:17,360 --> 00:05:21,360
okay um let's talk about the compression

134
00:05:19,600 --> 00:05:25,120
because uh the compression we

135
00:05:21,360 --> 00:05:27,680
require is tremendous if we have a

136
00:05:25,120 --> 00:05:29,600
normal desktop distribution uh believe

137
00:05:27,680 --> 00:05:32,800
me it consists of about 30

138
00:05:29,600 --> 00:05:34,880
gigabyte of uh data

139
00:05:32,800 --> 00:05:36,960
our applications as soon as you install

140
00:05:34,880 --> 00:05:39,440
some more applications like

141
00:05:36,960 --> 00:05:41,359
library office of web browser and some

142
00:05:39,440 --> 00:05:44,320
tools

143
00:05:41,360 --> 00:05:47,280
yeah you will reach the 30 gigabyte or

144
00:05:44,320 --> 00:05:49,520
20 gigabytes but

145
00:05:47,280 --> 00:05:51,440
if you ever downloaded a live

146
00:05:49,520 --> 00:05:54,159
distribution

147
00:05:51,440 --> 00:05:55,199
you will realize it's not 30 gigabyte

148
00:05:54,160 --> 00:05:58,880
it's about

149
00:05:55,199 --> 00:06:02,479
2 gigabyte um or 1.5 i

150
00:05:58,880 --> 00:06:06,479
noted in my slides um

151
00:06:02,479 --> 00:06:07,840
yeah means we need to compress our file

152
00:06:06,479 --> 00:06:11,440
system on about

153
00:06:07,840 --> 00:06:14,560
five or ten percent of the actual size

154
00:06:11,440 --> 00:06:18,080
um that's not difficult there are

155
00:06:14,560 --> 00:06:21,600
many compression algorithms we may use

156
00:06:18,080 --> 00:06:25,440
but we have another requirement

157
00:06:21,600 --> 00:06:27,520
we need performant readability

158
00:06:25,440 --> 00:06:29,680
uh as soon as we boot a system our

159
00:06:27,520 --> 00:06:32,000
kernel will uh

160
00:06:29,680 --> 00:06:33,280
won't stop accessing any files reading

161
00:06:32,000 --> 00:06:36,639
files writing files

162
00:06:33,280 --> 00:06:38,400
so we need a performant readability um

163
00:06:36,639 --> 00:06:39,919
because no one wants to wait five

164
00:06:38,400 --> 00:06:43,280
minutes to view

165
00:06:39,919 --> 00:06:45,840
to see the web browser and that's what

166
00:06:43,280 --> 00:06:47,198
the squash file system is made for the

167
00:06:45,840 --> 00:06:50,318
squash file system

168
00:06:47,199 --> 00:06:53,120
is a compressed file system it's

169
00:06:50,319 --> 00:06:54,560
kind of a disk image but more advanced

170
00:06:53,120 --> 00:06:58,319
uh it's used around

171
00:06:54,560 --> 00:07:00,800
uh diverse linuxes uh it's using in the

172
00:06:58,319 --> 00:07:03,520
operating system of chromecasts

173
00:07:00,800 --> 00:07:04,479
and in the linux user land it's used by

174
00:07:03,520 --> 00:07:07,359
app images

175
00:07:04,479 --> 00:07:08,318
these are these um click to run linux

176
00:07:07,360 --> 00:07:10,960
binary

177
00:07:08,319 --> 00:07:11,360
binaries you can download and it's used

178
00:07:10,960 --> 00:07:14,840
by

179
00:07:11,360 --> 00:07:18,319
snap packages from canonicals

180
00:07:14,840 --> 00:07:20,239
proprietary snap package manager

181
00:07:18,319 --> 00:07:21,360
which is unfortunately very widely

182
00:07:20,240 --> 00:07:24,400
spread

183
00:07:21,360 --> 00:07:26,479
um yeah now we know

184
00:07:24,400 --> 00:07:28,479
something about compression let's talk

185
00:07:26,479 --> 00:07:32,159
about how the customization

186
00:07:28,479 --> 00:07:34,880
works well first of all we download

187
00:07:32,160 --> 00:07:36,800
a template we create a base system from

188
00:07:34,880 --> 00:07:38,800
which out we start our customization

189
00:07:36,800 --> 00:07:40,960
process

190
00:07:38,800 --> 00:07:43,120
afterwards well we start the

191
00:07:40,960 --> 00:07:46,638
customization itself

192
00:07:43,120 --> 00:07:50,240
we prepare a cd environment so

193
00:07:46,639 --> 00:07:52,800
we put it put a bootloader on a cd

194
00:07:50,240 --> 00:07:53,840
we pack our root file system we just

195
00:07:52,800 --> 00:07:56,960
created

196
00:07:53,840 --> 00:08:00,239
uh put it on a cd put a kernel there

197
00:07:56,960 --> 00:08:01,198
make it uh yeah harden it a bit and at

198
00:08:00,240 --> 00:08:05,280
the end

199
00:08:01,199 --> 00:08:09,840
we will pack it okay

200
00:08:05,280 --> 00:08:12,799
um let's go uh through it step by step

201
00:08:09,840 --> 00:08:13,440
um in this case we will have a look at

202
00:08:12,800 --> 00:08:17,199
uh

203
00:08:13,440 --> 00:08:19,199
ubuntu um we'll go step to step by step

204
00:08:17,199 --> 00:08:20,800
through the customization process of

205
00:08:19,199 --> 00:08:23,440
ubuntu

206
00:08:20,800 --> 00:08:24,479
um how do you start the customization

207
00:08:23,440 --> 00:08:28,960
process well

208
00:08:24,479 --> 00:08:32,718
yeah you need a an existing iso file

209
00:08:28,960 --> 00:08:36,718
um from a live environment of ubuntu

210
00:08:32,719 --> 00:08:40,230
uh because it contains the bootloader um

211
00:08:36,719 --> 00:08:41,440
the directory structure and everything

212
00:08:40,230 --> 00:08:44,000
[Music]

213
00:08:41,440 --> 00:08:45,040
all the assets um of course you could

214
00:08:44,000 --> 00:08:48,640
create them on your

215
00:08:45,040 --> 00:08:51,760
own but um well it's more work

216
00:08:48,640 --> 00:08:53,760
than you have to do um

217
00:08:51,760 --> 00:08:54,959
you can easily use the existing

218
00:08:53,760 --> 00:08:56,640
bootloaders and

219
00:08:54,959 --> 00:08:58,880
the existing files and directory

220
00:08:56,640 --> 00:09:02,080
structure from an existing

221
00:08:58,880 --> 00:09:04,959
iso file well let's extract it

222
00:09:02,080 --> 00:09:05,760
and we're fine we're done with it

223
00:09:04,959 --> 00:09:08,959
afterwards

224
00:09:05,760 --> 00:09:11,760
we need to create a base system

225
00:09:08,959 --> 00:09:14,160
a base system is well the base of linux

226
00:09:11,760 --> 00:09:17,040
we need uh have the base you

227
00:09:14,160 --> 00:09:19,439
tools uh the base files the directory

228
00:09:17,040 --> 00:09:22,560
structure the kernel

229
00:09:19,440 --> 00:09:25,680
um a shell

230
00:09:22,560 --> 00:09:28,000
uh the package manager of our

231
00:09:25,680 --> 00:09:29,599
operating system we have it's without

232
00:09:28,000 --> 00:09:33,120
any unnecessary

233
00:09:29,600 --> 00:09:34,399
tools uh without just the base of

234
00:09:33,120 --> 00:09:36,800
everything

235
00:09:34,399 --> 00:09:37,839
uh you can now either download the

236
00:09:36,800 --> 00:09:41,199
prepared

237
00:09:37,839 --> 00:09:42,160
basis distribution based system for

238
00:09:41,200 --> 00:09:45,279
download

239
00:09:42,160 --> 00:09:48,640
uh but you could uh create one on your

240
00:09:45,279 --> 00:09:50,240
own using tools like the debian tool to

241
00:09:48,640 --> 00:09:52,640
create base systems

242
00:09:50,240 --> 00:09:54,880
uh are the corresponding tools from

243
00:09:52,640 --> 00:09:57,199
other distribution

244
00:09:54,880 --> 00:09:58,080
yeah as soon as you have your base

245
00:09:57,200 --> 00:10:00,240
system

246
00:09:58,080 --> 00:10:02,079
you need to change your route inside

247
00:10:00,240 --> 00:10:05,440
this base system

248
00:10:02,079 --> 00:10:08,160
um yeah and then you

249
00:10:05,440 --> 00:10:10,320
start the customization process by

250
00:10:08,160 --> 00:10:12,959
installing the necessary drivers

251
00:10:10,320 --> 00:10:14,800
we already talked about casper casper is

252
00:10:12,959 --> 00:10:18,399
this tool providing uh

253
00:10:14,800 --> 00:10:18,880
the live software and the live scripts

254
00:10:18,399 --> 00:10:22,800
the

255
00:10:18,880 --> 00:10:25,920
the overlay file system in ubuntu-based

256
00:10:22,800 --> 00:10:28,800
uh systems um yeah

257
00:10:25,920 --> 00:10:30,319
and it creates an initial ram file

258
00:10:28,800 --> 00:10:33,839
system and installs

259
00:10:30,320 --> 00:10:37,200
the required kernel modules to load

260
00:10:33,839 --> 00:10:37,760
or to boot a squash file system so let's

261
00:10:37,200 --> 00:10:40,720
install

262
00:10:37,760 --> 00:10:43,680
this these three packages casper

263
00:10:40,720 --> 00:10:46,640
ubiquity casper and lupin casper

264
00:10:43,680 --> 00:10:48,239
um and afterwards we can install

265
00:10:46,640 --> 00:10:52,319
whatever we want we can install

266
00:10:48,240 --> 00:10:55,600
our loved vim we can install our

267
00:10:52,320 --> 00:10:56,560
uh loved alpaca software and we can

268
00:10:55,600 --> 00:10:59,200
install

269
00:10:56,560 --> 00:11:00,160
an alternative shell the packages we

270
00:10:59,200 --> 00:11:02,640
want

271
00:11:00,160 --> 00:11:03,839
uh in the example code here i provided

272
00:11:02,640 --> 00:11:06,880
here um

273
00:11:03,839 --> 00:11:09,440
we look uh on providing on changing

274
00:11:06,880 --> 00:11:11,040
the plymouth screen that's the startup

275
00:11:09,440 --> 00:11:13,440
screen which shows up when you

276
00:11:11,040 --> 00:11:14,240
boot the distribution i don't know you

277
00:11:13,440 --> 00:11:17,839
could put

278
00:11:14,240 --> 00:11:20,880
an alpaca in there on the logo of rc3

279
00:11:17,839 --> 00:11:23,360
um yeah that's what we do

280
00:11:20,880 --> 00:11:26,000
in customization or in modification of

281
00:11:23,360 --> 00:11:29,279
the system afterwards we continue

282
00:11:26,000 --> 00:11:32,959
uh packing everything we created

283
00:11:29,279 --> 00:11:33,519
um first of all we need a kernel to boot

284
00:11:32,959 --> 00:11:36,079
because

285
00:11:33,519 --> 00:11:37,920
well before um our base system can be

286
00:11:36,079 --> 00:11:39,120
extracted we need to load a kernel by

287
00:11:37,920 --> 00:11:43,040
the bootloader

288
00:11:39,120 --> 00:11:46,000
uh and the kernel must con contain

289
00:11:43,040 --> 00:11:48,240
the corresponding kernel modules to load

290
00:11:46,000 --> 00:11:51,600
uh to boot a squash file system

291
00:11:48,240 --> 00:11:51,920
um that's what casper already prepared

292
00:11:51,600 --> 00:11:55,040
for

293
00:11:51,920 --> 00:11:55,360
us we only need to um create the initial

294
00:11:55,040 --> 00:11:57,880
run

295
00:11:55,360 --> 00:11:59,040
file system and if you um

296
00:11:57,880 --> 00:12:02,079
[Music]

297
00:11:59,040 --> 00:12:05,680
read the code i provided you will see i

298
00:12:02,079 --> 00:12:08,719
was missing um miners between

299
00:12:05,680 --> 00:12:10,800
um update and in the dram file system um

300
00:12:08,720 --> 00:12:14,240
yeah let's create our inner children

301
00:12:10,800 --> 00:12:17,839
file system and copy them

302
00:12:14,240 --> 00:12:20,959
or copy it uh together with our kernel

303
00:12:17,839 --> 00:12:24,720
to our extracted live environment

304
00:12:20,959 --> 00:12:27,119
and um we can delete the prior

305
00:12:24,720 --> 00:12:29,279
kernels and so on we don't need them we

306
00:12:27,120 --> 00:12:31,839
have our own kernels now

307
00:12:29,279 --> 00:12:33,200
uh afterwards we pack our base system of

308
00:12:31,839 --> 00:12:36,079
course we need to unmount

309
00:12:33,200 --> 00:12:37,120
any mount points in the base system we

310
00:12:36,079 --> 00:12:39,680
created

311
00:12:37,120 --> 00:12:40,160
and create a squash file system from it

312
00:12:39,680 --> 00:12:43,839
and

313
00:12:40,160 --> 00:12:47,040
these three files the vm linux uh

314
00:12:43,839 --> 00:12:47,760
the initial ram disk and the squash file

315
00:12:47,040 --> 00:12:50,719
system

316
00:12:47,760 --> 00:12:52,000
they are the major pill pillows of our

317
00:12:50,720 --> 00:12:54,800
live environment if we have

318
00:12:52,000 --> 00:12:55,519
those three we are actually ready to go

319
00:12:54,800 --> 00:12:57,920
now we can

320
00:12:55,519 --> 00:12:59,279
um either use our existing bootloader

321
00:12:57,920 --> 00:13:02,319
from our extracted

322
00:12:59,279 --> 00:13:03,680
iso file or we of course we can install

323
00:13:02,320 --> 00:13:06,240
your own bootloader in

324
00:13:03,680 --> 00:13:08,638
this directory but well it's easier to

325
00:13:06,240 --> 00:13:11,040
use the existing one

326
00:13:08,639 --> 00:13:12,880
for security purpose and for hardening

327
00:13:11,040 --> 00:13:16,399
your live environment

328
00:13:12,880 --> 00:13:17,040
um i would recommend to put only five

329
00:13:16,399 --> 00:13:20,880
sums

330
00:13:17,040 --> 00:13:24,079
of all files in your iso file

331
00:13:20,880 --> 00:13:26,959
in this uh environment

332
00:13:24,079 --> 00:13:27,920
because as soon as you for example copy

333
00:13:26,959 --> 00:13:29,359
your

334
00:13:27,920 --> 00:13:32,719
distribution for example on the pen

335
00:13:29,360 --> 00:13:35,920
drive on which is fat or

336
00:13:32,720 --> 00:13:38,560
x4 formatted uh could be

337
00:13:35,920 --> 00:13:39,360
modified by anyone and that's why it's

338
00:13:38,560 --> 00:13:42,880
much better

339
00:13:39,360 --> 00:13:43,600
to verify the md5 sums in at the boot

340
00:13:42,880 --> 00:13:45,519
process

341
00:13:43,600 --> 00:13:47,600
casper will automatically detect whether

342
00:13:45,519 --> 00:13:51,519
the md5sum

343
00:13:47,600 --> 00:13:53,279
the txt file exists and if it exists it

344
00:13:51,519 --> 00:13:56,720
will automatically verify

345
00:13:53,279 --> 00:13:58,399
these md57s okay now we are actually

346
00:13:56,720 --> 00:14:02,639
ready to go ready to pack

347
00:13:58,399 --> 00:14:03,120
up our iso file um there's a famous tool

348
00:14:02,639 --> 00:14:06,480
called

349
00:14:03,120 --> 00:14:07,120
called gen iso uh image so generate an

350
00:14:06,480 --> 00:14:10,320
iso

351
00:14:07,120 --> 00:14:13,440
image um that's a comment you could use

352
00:14:10,320 --> 00:14:16,480
um the comment um takes care

353
00:14:13,440 --> 00:14:20,079
of legacy booting um

354
00:14:16,480 --> 00:14:23,120
except of output file the disk and the

355
00:14:20,079 --> 00:14:25,920
disk disk image and the minus r

356
00:14:23,120 --> 00:14:27,760
parameter um you could leave out

357
00:14:25,920 --> 00:14:31,040
everything if you do not

358
00:14:27,760 --> 00:14:34,959
require legacy bootloaders

359
00:14:31,040 --> 00:14:38,480
but if you want to obey um

360
00:14:34,959 --> 00:14:42,880
legacy bootloaders you should also

361
00:14:38,480 --> 00:14:44,959
hybridize your iso file to be able to dd

362
00:14:42,880 --> 00:14:46,959
the iso file to a pen drive otherwise

363
00:14:44,959 --> 00:14:50,000
without the iso hybrid

364
00:14:46,959 --> 00:14:52,560
command um it won't boot from it will it

365
00:14:50,000 --> 00:14:53,760
would boot from a cd but not from a pen

366
00:14:52,560 --> 00:14:56,959
drive

367
00:14:53,760 --> 00:14:59,199
um yeah okay

368
00:14:56,959 --> 00:15:00,160
now we created our own linux

369
00:14:59,199 --> 00:15:03,199
distribution

370
00:15:00,160 --> 00:15:05,040
um well not that much um it's actually

371
00:15:03,199 --> 00:15:06,479
just a repacked linux distribution now

372
00:15:05,040 --> 00:15:10,079
we talk about making it a

373
00:15:06,480 --> 00:15:12,399
real distribution um that's why we talk

374
00:15:10,079 --> 00:15:15,680
about making it installable

375
00:15:12,399 --> 00:15:18,720
um why should we make it installable

376
00:15:15,680 --> 00:15:21,839
of course we could uh manually install

377
00:15:18,720 --> 00:15:23,680
our system we could manually format our

378
00:15:21,839 --> 00:15:24,399
hard drive you could manually extract

379
00:15:23,680 --> 00:15:26,560
our

380
00:15:24,399 --> 00:15:27,440
file system we could manually create

381
00:15:26,560 --> 00:15:30,638
users and

382
00:15:27,440 --> 00:15:34,480
so on etc etc but

383
00:15:30,639 --> 00:15:36,880
most of users prefer graphical way

384
00:15:34,480 --> 00:15:37,759
except of these geeks taking apart at

385
00:15:36,880 --> 00:15:41,360
the rc

386
00:15:37,759 --> 00:15:45,120
3 that's why an installer may be

387
00:15:41,360 --> 00:15:49,120
useful um an installer does

388
00:15:45,120 --> 00:15:53,199
exactly what we need creates partitions

389
00:15:49,120 --> 00:15:55,759
creates users uh installs language packs

390
00:15:53,199 --> 00:15:56,240
offers installation of extra software

391
00:15:55,759 --> 00:15:58,720
and

392
00:15:56,240 --> 00:16:01,600
does everything the user may want yeah

393
00:15:58,720 --> 00:16:04,320
creates users connects to wifi whatever

394
00:16:01,600 --> 00:16:05,759
and there are three very common

395
00:16:04,320 --> 00:16:09,759
installer frameworks

396
00:16:05,759 --> 00:16:11,440
ubiquity calamaris and anaconda

397
00:16:09,759 --> 00:16:12,959
now we'll have a look at these

398
00:16:11,440 --> 00:16:16,160
frameworks um

399
00:16:12,959 --> 00:16:19,199
ubiquity is known from ubuntu

400
00:16:16,160 --> 00:16:21,920
um it's ready to use if ansi

401
00:16:19,199 --> 00:16:22,240
uns installed but it's actually not at

402
00:16:21,920 --> 00:16:25,519
all

403
00:16:22,240 --> 00:16:28,000
customizable um anyway

404
00:16:25,519 --> 00:16:29,199
some hackers at github uh found some

405
00:16:28,000 --> 00:16:32,000
ways to

406
00:16:29,199 --> 00:16:33,439
uh customize it uh and provided some

407
00:16:32,000 --> 00:16:36,320
good information some helpful

408
00:16:33,440 --> 00:16:39,440
information in their repositories um

409
00:16:36,320 --> 00:16:42,880
the next one is calamarius calamaris is

410
00:16:39,440 --> 00:16:44,000
highly customizable um is used by many

411
00:16:42,880 --> 00:16:47,199
distributions

412
00:16:44,000 --> 00:16:50,240
including sue's linux um i think

413
00:16:47,199 --> 00:16:51,439
subuntu so the xfce you're going to

414
00:16:50,240 --> 00:16:54,880
flavor

415
00:16:51,440 --> 00:16:57,759
deep in os um i think

416
00:16:54,880 --> 00:16:58,480
i'm not sure i think elementary as well

417
00:16:57,759 --> 00:17:00,959
um

418
00:16:58,480 --> 00:17:02,839
but if you only install it it won't work

419
00:17:00,959 --> 00:17:05,760
you need to customize it

420
00:17:02,839 --> 00:17:07,120
um the third one is known from the

421
00:17:05,760 --> 00:17:10,480
fedora project

422
00:17:07,119 --> 00:17:13,839
um it's called anaconda uh it's

423
00:17:10,480 --> 00:17:16,160
a very advanced tool uh it's able to

424
00:17:13,839 --> 00:17:17,520
update existing systems if we have an

425
00:17:16,160 --> 00:17:20,240
old fedora

426
00:17:17,520 --> 00:17:22,400
installation we can boot our live cd and

427
00:17:20,240 --> 00:17:26,079
update the existing installation

428
00:17:22,400 --> 00:17:29,440
and moreover very useful for admins

429
00:17:26,079 --> 00:17:31,039
is the remote functionality uh it can be

430
00:17:29,440 --> 00:17:33,280
started via ssh

431
00:17:31,039 --> 00:17:35,360
and automatically update everything and

432
00:17:33,280 --> 00:17:40,240
automatically install and deploy

433
00:17:35,360 --> 00:17:43,439
the software we need um yeah

434
00:17:40,240 --> 00:17:46,480
well i already mentioned for everything

435
00:17:43,440 --> 00:17:48,960
you can manually do and customize

436
00:17:46,480 --> 00:17:50,480
there is a graphical tool um if you

437
00:17:48,960 --> 00:17:53,440
prefer the graphical way

438
00:17:50,480 --> 00:17:53,840
uh you could use the tool remaster says

439
00:17:53,440 --> 00:17:56,720
uh

440
00:17:53,840 --> 00:17:57,600
aka linux wristband that's the the older

441
00:17:56,720 --> 00:18:01,280
name

442
00:17:57,600 --> 00:18:02,080
um it offers a simple graphical user

443
00:18:01,280 --> 00:18:04,559
interface

444
00:18:02,080 --> 00:18:05,600
for packing your currently installed

445
00:18:04,559 --> 00:18:08,799
system

446
00:18:05,600 --> 00:18:09,678
into a live distribution allowing to

447
00:18:08,799 --> 00:18:13,039
install it

448
00:18:09,679 --> 00:18:15,039
um it does not allow a high amount of

449
00:18:13,039 --> 00:18:16,799
customization in the graphical way of

450
00:18:15,039 --> 00:18:18,400
course you can manually perform it on

451
00:18:16,799 --> 00:18:20,879
the command prompt

452
00:18:18,400 --> 00:18:21,440
but it's an easy way to for example

453
00:18:20,880 --> 00:18:24,960
backup

454
00:18:21,440 --> 00:18:27,919
your just installed system or

455
00:18:24,960 --> 00:18:30,480
you could readily configured system to a

456
00:18:27,919 --> 00:18:34,160
pen drive to make it installable later

457
00:18:30,480 --> 00:18:37,280
um yeah

458
00:18:34,160 --> 00:18:39,200
and now linux from scratch um

459
00:18:37,280 --> 00:18:41,200
i guess most of you already heard of

460
00:18:39,200 --> 00:18:42,080
linux from scratch linux from scratch

461
00:18:41,200 --> 00:18:44,720
means

462
00:18:42,080 --> 00:18:46,879
um yeah pretty much linux from scratch

463
00:18:44,720 --> 00:18:47,600
um you start without anything you start

464
00:18:46,880 --> 00:18:50,960
on your

465
00:18:47,600 --> 00:18:52,639
host system and create an own system

466
00:18:50,960 --> 00:18:56,080
from scratch

467
00:18:52,640 --> 00:18:59,120
um what does it mean it means you should

468
00:18:56,080 --> 00:19:00,720
have lots of time lots of ram and many

469
00:18:59,120 --> 00:19:02,159
process occurs

470
00:19:00,720 --> 00:19:04,480
um because you need to compile

471
00:19:02,160 --> 00:19:07,280
everything yourself um

472
00:19:04,480 --> 00:19:09,280
beside the kernel uh you need to compile

473
00:19:07,280 --> 00:19:10,879
the whole user land

474
00:19:09,280 --> 00:19:12,320
if you want you can include a package

475
00:19:10,880 --> 00:19:15,120
manager or whatever but

476
00:19:12,320 --> 00:19:16,879
um if you make real linux from scratch

477
00:19:15,120 --> 00:19:19,039
uh you do not take any binaries but

478
00:19:16,880 --> 00:19:22,799
compile everything yourself

479
00:19:19,039 --> 00:19:25,919
uh everything on your own um currently

480
00:19:22,799 --> 00:19:27,280
minimally you need to compile 226

481
00:19:25,919 --> 00:19:29,840
dependencies

482
00:19:27,280 --> 00:19:30,879
um but in some years it will be some

483
00:19:29,840 --> 00:19:34,000
more dependencies

484
00:19:30,880 --> 00:19:37,840
the amount of dependencies required

485
00:19:34,000 --> 00:19:39,120
uh increases yeah after you compile

486
00:19:37,840 --> 00:19:39,840
everything of course you need to

487
00:19:39,120 --> 00:19:42,719
configure

488
00:19:39,840 --> 00:19:43,120
everything need to provide a bootloader

489
00:19:42,720 --> 00:19:45,520
uh

490
00:19:43,120 --> 00:19:46,239
but as soon as this is done as soon as

491
00:19:45,520 --> 00:19:49,679
you as

492
00:19:46,240 --> 00:19:50,799
you created um your own base system your

493
00:19:49,679 --> 00:19:53,039
own

494
00:19:50,799 --> 00:19:55,679
system from scratch inside of fakeroot

495
00:19:53,039 --> 00:19:59,120
it's the same as we already

496
00:19:55,679 --> 00:20:01,679
talked on uh during the live

497
00:19:59,120 --> 00:20:03,520
system customization um as soon as you

498
00:20:01,679 --> 00:20:06,640
as you have have this fake route

499
00:20:03,520 --> 00:20:08,559
you simply pack it to an image to a

500
00:20:06,640 --> 00:20:11,679
squash file system write it on a disk

501
00:20:08,559 --> 00:20:14,158
provide a bootloader and that's it okay

502
00:20:11,679 --> 00:20:16,799
one more word uh i will talk about

503
00:20:14,159 --> 00:20:18,559
uh maintaining architecture for

504
00:20:16,799 --> 00:20:20,400
distributions or i will talk about

505
00:20:18,559 --> 00:20:22,720
package servers um

506
00:20:20,400 --> 00:20:25,360
if you have a distribution you usually

507
00:20:22,720 --> 00:20:28,400
provide update security fixes

508
00:20:25,360 --> 00:20:31,918
uh and whatsoever maybe a software

509
00:20:28,400 --> 00:20:35,760
the users may install later um yeah

510
00:20:31,919 --> 00:20:38,799
that's a package mirror or packet server

511
00:20:35,760 --> 00:20:41,280
from debian you can simply mirror

512
00:20:38,799 --> 00:20:42,720
existing servers for example the debian

513
00:20:41,280 --> 00:20:46,240
or ubuntu or

514
00:20:42,720 --> 00:20:49,120
the linux mint servers by

515
00:20:46,240 --> 00:20:50,000
using the tool apt mirror it simply

516
00:20:49,120 --> 00:20:53,039
mirrors means

517
00:20:50,000 --> 00:20:55,600
it does not allow any customization

518
00:20:53,039 --> 00:20:57,120
for arc linux for example it's uh easy

519
00:20:55,600 --> 00:21:00,240
as well you can simply use

520
00:20:57,120 --> 00:21:02,080
uh vfdp and chrome tab to

521
00:21:00,240 --> 00:21:03,280
download the packages and provide them

522
00:21:02,080 --> 00:21:06,799
on your uh

523
00:21:03,280 --> 00:21:09,678
host system or in your server and

524
00:21:06,799 --> 00:21:10,720
yeah synchronize from them that's much

525
00:21:09,679 --> 00:21:13,840
easier than

526
00:21:10,720 --> 00:21:16,240
uh in the debian environment um

527
00:21:13,840 --> 00:21:18,639
but usually if you have a distribution

528
00:21:16,240 --> 00:21:21,520
you want to customize it

529
00:21:18,640 --> 00:21:23,600
debian the tool aptly is very widely

530
00:21:21,520 --> 00:21:24,879
spread because it allows very advanced

531
00:21:23,600 --> 00:21:26,480
management of

532
00:21:24,880 --> 00:21:28,840
different snapshots from different

533
00:21:26,480 --> 00:21:31,200
repositories mirrors local

534
00:21:28,840 --> 00:21:33,039
repositories single packages allows

535
00:21:31,200 --> 00:21:34,720
diffs and so on but it does not allow

536
00:21:33,039 --> 00:21:37,679
any optimization

537
00:21:34,720 --> 00:21:38,480
um so good luck at scripting on your own

538
00:21:37,679 --> 00:21:42,880
if you look at

539
00:21:38,480 --> 00:21:45,919
arc linux for example you would usually

540
00:21:42,880 --> 00:21:47,120
write your own package build files as

541
00:21:45,919 --> 00:21:50,240
you know them from the arch

542
00:21:47,120 --> 00:21:53,439
user repository um and include

543
00:21:50,240 --> 00:21:56,640
the readily built packages into your

544
00:21:53,440 --> 00:21:57,679
um directory from which you serve your

545
00:21:56,640 --> 00:21:59,600
updates um

546
00:21:57,679 --> 00:22:02,080
that's much easier than in the debian

547
00:21:59,600 --> 00:22:04,000
environment uh i still found one more

548
00:22:02,080 --> 00:22:07,360
graphic explaining apply

549
00:22:04,000 --> 00:22:08,159
um that's what apply can do it can do

550
00:22:07,360 --> 00:22:10,240
everything

551
00:22:08,159 --> 00:22:12,400
well you have mirrors you have local

552
00:22:10,240 --> 00:22:13,840
repositories you can take snapshots take

553
00:22:12,400 --> 00:22:16,320
differences from snapchats

554
00:22:13,840 --> 00:22:17,600
publish these differences publish merged

555
00:22:16,320 --> 00:22:20,799
snapshots of them

556
00:22:17,600 --> 00:22:21,120
publish single snapshots div everything

557
00:22:20,799 --> 00:22:24,240
and

558
00:22:21,120 --> 00:22:27,678
do whatever you want it's very

559
00:22:24,240 --> 00:22:29,840
performant the tool and um yeah but

560
00:22:27,679 --> 00:22:31,919
it's hard to use it's uh it requires

561
00:22:29,840 --> 00:22:34,959
some time to be learned

562
00:22:31,919 --> 00:22:38,080
um yeah that's it already on

563
00:22:34,960 --> 00:22:38,720
uh mixing linux uh now there should be

564
00:22:38,080 --> 00:22:42,080
an

565
00:22:38,720 --> 00:22:44,080
q and a thank you very much for your

566
00:22:42,080 --> 00:22:47,439
attention of this talk i hope i

567
00:22:44,080 --> 00:22:48,399
uh could give you a a good introduction

568
00:22:47,440 --> 00:22:52,000
into remixing

569
00:22:48,400 --> 00:23:07,600
linux uh and good luck at coding

570
00:22:52,000 --> 00:23:07,600
and enjoy your remote chaos experience

