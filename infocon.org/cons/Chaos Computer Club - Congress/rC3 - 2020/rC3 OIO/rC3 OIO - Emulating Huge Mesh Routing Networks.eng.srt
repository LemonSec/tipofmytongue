1
00:00:01,040 --> 00:00:15,309
[Music]

2
00:00:17,279 --> 00:00:21,520
is an open source enthusiast

3
00:00:19,439 --> 00:00:22,880
and networking mesh networking

4
00:00:21,520 --> 00:00:24,720
enthusiast

5
00:00:22,880 --> 00:00:26,799
he's he was working in the fly phone

6
00:00:24,720 --> 00:00:29,198
community when he realized that

7
00:00:26,800 --> 00:00:30,800
mesh networking protocols are not as

8
00:00:29,199 --> 00:00:33,280
efficient as they could be

9
00:00:30,800 --> 00:00:33,840
and that they limit how many nodes can

10
00:00:33,280 --> 00:00:37,360
be

11
00:00:33,840 --> 00:00:40,719
part of the network therefore he

12
00:00:37,360 --> 00:00:41,680
started to simulate mesh networking

13
00:00:40,719 --> 00:00:44,800
protocols

14
00:00:41,680 --> 00:00:45,680
and today he will talk about that if

15
00:00:44,800 --> 00:00:48,399
you're listening

16
00:00:45,680 --> 00:00:49,680
to this and think maybe i can be more

17
00:00:48,399 --> 00:00:51,920
part of the audience

18
00:00:49,680 --> 00:00:53,840
we invite you to our virtual audience we

19
00:00:51,920 --> 00:00:56,399
have a beamer here so you can

20
00:00:53,840 --> 00:00:57,199
watch the talk and the speaker can see

21
00:00:56,399 --> 00:00:59,600
your face

22
00:00:57,199 --> 00:01:00,239
and your reactions to that that is

23
00:00:59,600 --> 00:01:03,840
available

24
00:01:00,239 --> 00:01:03,839
in a jittery room under

25
00:01:05,880 --> 00:01:11,280
audience.rc3.orio.social

26
00:01:07,760 --> 00:01:11,600
please join there and there's nothing

27
00:01:11,280 --> 00:01:13,760
more

28
00:01:11,600 --> 00:01:14,720
to say for me we're really glad to have

29
00:01:13,760 --> 00:01:17,680
you here

30
00:01:14,720 --> 00:01:19,439
thank you victor okay hello everyone

31
00:01:17,680 --> 00:01:22,960
this is my talk about

32
00:01:19,439 --> 00:01:25,520
how i try to emulate huge mesh networks

33
00:01:22,960 --> 00:01:26,240
for the purpose of like making better

34
00:01:25,520 --> 00:01:28,320
ones

35
00:01:26,240 --> 00:01:30,798
and well of course you start without

36
00:01:28,320 --> 00:01:33,199
with taking what's already there

37
00:01:30,799 --> 00:01:34,079
putting it into some tests and testing

38
00:01:33,200 --> 00:01:37,680
it

39
00:01:34,079 --> 00:01:41,520
and um yeah so let's start i mean

40
00:01:37,680 --> 00:01:44,240
okay um yeah my name is moritz

41
00:01:41,520 --> 00:01:44,720
as have been already told my family name

42
00:01:44,240 --> 00:01:46,720
is

43
00:01:44,720 --> 00:01:50,000
very funny and very confusing which is

44
00:01:46,720 --> 00:01:52,479
awesome and i'm a long time

45
00:01:50,000 --> 00:01:54,399
free and liberal open source programmer

46
00:01:52,479 --> 00:01:58,158
so i do a lot of software

47
00:01:54,399 --> 00:02:01,280
related to distributed networks

48
00:01:58,159 --> 00:02:04,000
meshing security even and most of you

49
00:02:01,280 --> 00:02:05,680
my stuff you can find on github and i've

50
00:02:04,000 --> 00:02:09,199
been with the fry from community

51
00:02:05,680 --> 00:02:12,400
since 2011 2012 around that time

52
00:02:09,199 --> 00:02:15,359
and i found it awesome to flash

53
00:02:12,400 --> 00:02:16,160
wi-fi routers put them out there let's

54
00:02:15,360 --> 00:02:18,640
create a big

55
00:02:16,160 --> 00:02:19,599
huge mesh network at least that was my

56
00:02:18,640 --> 00:02:22,079
my dream

57
00:02:19,599 --> 00:02:24,160
and of course to connect people so they

58
00:02:22,080 --> 00:02:24,879
can talk to each other without relying

59
00:02:24,160 --> 00:02:28,079
on

60
00:02:24,879 --> 00:02:30,239
other proprietary infrastructure from

61
00:02:28,080 --> 00:02:32,560
vodafone telecom and the likes

62
00:02:30,239 --> 00:02:34,840
or even to get even internet to to

63
00:02:32,560 --> 00:02:38,000
refugee homes stuff like that

64
00:02:34,840 --> 00:02:41,280
so yeah so that was my my idea

65
00:02:38,000 --> 00:02:44,400
i'm mostly with this uh

66
00:02:41,280 --> 00:02:45,760
idea of making big huge networks that

67
00:02:44,400 --> 00:02:47,840
connect everyone but are still

68
00:02:45,760 --> 00:02:50,879
distributed and not centralized

69
00:02:47,840 --> 00:02:53,200
and over time i learned that well

70
00:02:50,879 --> 00:02:54,720
we can get to a few hundred nodes in our

71
00:02:53,200 --> 00:02:58,159
community

72
00:02:54,720 --> 00:03:01,440
um but then it gets problematic

73
00:02:58,159 --> 00:03:03,840
since we are using wi-fi a lot

74
00:03:01,440 --> 00:03:05,359
and we also these mesh networking

75
00:03:03,840 --> 00:03:08,400
protocols that we use

76
00:03:05,360 --> 00:03:09,680
they're quite uh well they're okay that

77
00:03:08,400 --> 00:03:12,159
we're

78
00:03:09,680 --> 00:03:13,920
good in comparison but they're still a

79
00:03:12,159 --> 00:03:15,200
bit inefficient for what we try to

80
00:03:13,920 --> 00:03:17,839
achieve which is

81
00:03:15,200 --> 00:03:18,640
much much harder than compared to what

82
00:03:17,840 --> 00:03:20,480
you want

83
00:03:18,640 --> 00:03:22,159
to achieve when you have a data center

84
00:03:20,480 --> 00:03:23,280
or stuff like that where you have

85
00:03:22,159 --> 00:03:26,879
gigabit links

86
00:03:23,280 --> 00:03:27,360
and not like pesky horrible wi-fi links

87
00:03:26,879 --> 00:03:29,440
that

88
00:03:27,360 --> 00:03:31,519
break down every three minute few

89
00:03:29,440 --> 00:03:33,840
minutes if you're really unlucky

90
00:03:31,519 --> 00:03:34,640
so yeah in general i'm a mesh routing

91
00:03:33,840 --> 00:03:37,040
enthusiast

92
00:03:34,640 --> 00:03:38,958
and i think we need better protocols so

93
00:03:37,040 --> 00:03:41,760
i set out on this journey

94
00:03:38,959 --> 00:03:43,200
journey to create better ones to test

95
00:03:41,760 --> 00:03:47,040
test the protocols so

96
00:03:43,200 --> 00:03:49,280
of course this got me drawn to um

97
00:03:47,040 --> 00:03:50,400
other people with similar golf and this

98
00:03:49,280 --> 00:03:52,640
brought me to the

99
00:03:50,400 --> 00:03:54,319
to the battle mesh for those who don't

100
00:03:52,640 --> 00:03:55,760
know the battle mesh is a yearly

101
00:03:54,319 --> 00:03:59,439
conference in europe

102
00:03:55,760 --> 00:03:59,840
sometimes it's in it was in leipzig it

103
00:03:59,439 --> 00:04:03,680
was

104
00:03:59,840 --> 00:04:05,920
in vienna it was in um

105
00:04:03,680 --> 00:04:07,519
well different european countries

106
00:04:05,920 --> 00:04:11,439
slovenia i remember

107
00:04:07,519 --> 00:04:13,760
and a lot of like 40 50 people maybe

108
00:04:11,439 --> 00:04:14,480
and they bring a few routers and then

109
00:04:13,760 --> 00:04:17,519
they do

110
00:04:14,480 --> 00:04:19,759
the battle where they put their favorite

111
00:04:17,519 --> 00:04:21,519
mesh shorting protocol on these routers

112
00:04:19,759 --> 00:04:24,479
and then they do tests

113
00:04:21,519 --> 00:04:26,160
throughput and stuff and well yeah then

114
00:04:24,479 --> 00:04:28,240
they see in the end after

115
00:04:26,160 --> 00:04:30,320
some luck they have some graphics they

116
00:04:28,240 --> 00:04:32,080
can say yeah this one's a bit better

117
00:04:30,320 --> 00:04:34,639
than the other one

118
00:04:32,080 --> 00:04:35,840
but that's it and of course it takes a

119
00:04:34,639 --> 00:04:38,960
lot of time to set this

120
00:04:35,840 --> 00:04:41,198
up then of course of when you change

121
00:04:38,960 --> 00:04:43,198
the different wretching protocol then

122
00:04:41,199 --> 00:04:45,919
you

123
00:04:43,199 --> 00:04:46,960
might be unlucky and somebody is using a

124
00:04:45,919 --> 00:04:49,758
microwave

125
00:04:46,960 --> 00:04:50,320
and this influences the results very

126
00:04:49,759 --> 00:04:53,680
badly

127
00:04:50,320 --> 00:04:55,040
and also my personal perspective is that

128
00:04:53,680 --> 00:04:56,960
i really want to have like something

129
00:04:55,040 --> 00:05:00,080
that is more efficient and more scalable

130
00:04:56,960 --> 00:05:03,840
so throughput is maybe not the the most

131
00:05:00,080 --> 00:05:05,280
important concern but it's connected

132
00:05:03,840 --> 00:05:07,440
since uh if you don't have much

133
00:05:05,280 --> 00:05:08,840
throughput then scalability will be a

134
00:05:07,440 --> 00:05:13,039
bit harder

135
00:05:08,840 --> 00:05:15,119
um so yeah um

136
00:05:13,039 --> 00:05:17,199
so this is not really what i wanted to

137
00:05:15,120 --> 00:05:20,720
test i mean it's still interesting

138
00:05:17,199 --> 00:05:22,720
but um yeah and um

139
00:05:20,720 --> 00:05:24,000
but scalability it's a bit hard to get a

140
00:05:22,720 --> 00:05:26,080
few thousand routers to

141
00:05:24,000 --> 00:05:28,080
this event and i mean it's just too

142
00:05:26,080 --> 00:05:30,880
costly just too much work

143
00:05:28,080 --> 00:05:32,080
so with the corona of course everything

144
00:05:30,880 --> 00:05:34,159
became virtual

145
00:05:32,080 --> 00:05:36,159
and i thought okay let's do a virtual

146
00:05:34,160 --> 00:05:38,960
battle um

147
00:05:36,160 --> 00:05:40,800
i mean it fits i mean i was already

148
00:05:38,960 --> 00:05:43,039
creating some software to do that

149
00:05:40,800 --> 00:05:44,000
uh for myself and i thought okay let's

150
00:05:43,039 --> 00:05:46,240
do a virtual battle

151
00:05:44,000 --> 00:05:48,240
this has of course the drawbacks that

152
00:05:46,240 --> 00:05:51,680
you don't really have real hardware

153
00:05:48,240 --> 00:05:53,680
real wifi interference patterns that

154
00:05:51,680 --> 00:05:56,160
and and stuff like that but of course i

155
00:05:53,680 --> 00:05:59,199
thought okay let's keep it simple

156
00:05:56,160 --> 00:06:02,240
um what i can achieve right now

157
00:05:59,199 --> 00:06:03,759
um at least throw everything

158
00:06:02,240 --> 00:06:05,360
out like if you're in a balloon and

159
00:06:03,759 --> 00:06:06,160
you're going down then you throw

160
00:06:05,360 --> 00:06:08,639
everything out

161
00:06:06,160 --> 00:06:10,639
until the balloon flies so that was

162
00:06:08,639 --> 00:06:14,000
basically what i was doing

163
00:06:10,639 --> 00:06:17,600
so i wrote myself a tool first

164
00:06:14,000 --> 00:06:20,880
to do this virtual measure

165
00:06:17,600 --> 00:06:22,240
virtual networks where i can run like

166
00:06:20,880 --> 00:06:24,159
wifi protocols

167
00:06:22,240 --> 00:06:26,160
on each node it's like you have a fritz

168
00:06:24,160 --> 00:06:28,720
box or some rifle router

169
00:06:26,160 --> 00:06:29,919
you put some software in it and it has

170
00:06:28,720 --> 00:06:32,000
ability to throw

171
00:06:29,919 --> 00:06:33,359
to send some packets and then the

172
00:06:32,000 --> 00:06:35,919
packets will be transmit

173
00:06:33,360 --> 00:06:36,800
received transmitted and received by

174
00:06:35,919 --> 00:06:40,479
other nodes

175
00:06:36,800 --> 00:06:43,440
in you know in reach and

176
00:06:40,479 --> 00:06:45,120
then processed and in this way they need

177
00:06:43,440 --> 00:06:48,080
to organize themselves so

178
00:06:45,120 --> 00:06:49,280
you can reach everybody without much

179
00:06:48,080 --> 00:06:51,840
delay without

180
00:06:49,280 --> 00:06:52,559
dropping too much package and packages

181
00:06:51,840 --> 00:06:55,599
and stuff

182
00:06:52,560 --> 00:06:58,720
so what i did was uh

183
00:06:55,599 --> 00:07:01,919
yeah let me yeah

184
00:06:58,720 --> 00:07:02,800
i did a yeah some tool it is called

185
00:07:01,919 --> 00:07:04,560
meshnet lab

186
00:07:02,800 --> 00:07:06,800
it doesn't really matter i mean there's

187
00:07:04,560 --> 00:07:10,319
some other software out there

188
00:07:06,800 --> 00:07:11,039
some is very similar um but mostly they

189
00:07:10,319 --> 00:07:13,919
do like

190
00:07:11,039 --> 00:07:15,680
containers uh thinking when you think of

191
00:07:13,919 --> 00:07:18,960
kubernetes and stuff

192
00:07:15,680 --> 00:07:21,039
since i only had a very small laptop

193
00:07:18,960 --> 00:07:22,560
i don't much much resources but still

194
00:07:21,039 --> 00:07:25,360
this plan to have like

195
00:07:22,560 --> 00:07:26,080
emulating like at least a few hundred

196
00:07:25,360 --> 00:07:27,759
nodes

197
00:07:26,080 --> 00:07:30,400
this was not an option i don't have that

198
00:07:27,759 --> 00:07:32,000
much ram or cpus or servers

199
00:07:30,400 --> 00:07:34,960
so i thought okay let's throw everything

200
00:07:32,000 --> 00:07:38,400
out um especially containers

201
00:07:34,960 --> 00:07:40,239
so um what i did i was using a

202
00:07:38,400 --> 00:07:41,758
linux network namespaces which is really

203
00:07:40,240 --> 00:07:42,960
awesome it's like one of the building

204
00:07:41,759 --> 00:07:46,400
blocks of

205
00:07:42,960 --> 00:07:48,400
of containers on linux

206
00:07:46,400 --> 00:07:50,239
but if i am willing to throw a lot of

207
00:07:48,400 --> 00:07:52,318
stuff i can only use this one

208
00:07:50,240 --> 00:07:53,360
and script everything with python and

209
00:07:52,319 --> 00:07:56,319
use ip

210
00:07:53,360 --> 00:07:57,199
commands ping ssh stuff like that i mean

211
00:07:56,319 --> 00:07:59,440
ssh for

212
00:07:57,199 --> 00:08:00,400
running it maybe on two laptops or even

213
00:07:59,440 --> 00:08:02,560
more

214
00:08:00,400 --> 00:08:03,840
and yeah it's it's on the internet uh

215
00:08:02,560 --> 00:08:05,680
the link will be

216
00:08:03,840 --> 00:08:07,440
in in the end uh but i think it's

217
00:08:05,680 --> 00:08:09,759
important that it's a cc

218
00:08:07,440 --> 00:08:11,120
zero license you can do everything you

219
00:08:09,759 --> 00:08:14,160
like with it

220
00:08:11,120 --> 00:08:15,680
so just give me maybe a little bit of an

221
00:08:14,160 --> 00:08:19,199
introduction to linux network name

222
00:08:15,680 --> 00:08:21,599
spaces which is the core of what i do

223
00:08:19,199 --> 00:08:23,840
um yes i told you it's a building block

224
00:08:21,599 --> 00:08:25,520
for lxc docker and the likes

225
00:08:23,840 --> 00:08:28,318
and of course on linux you have other

226
00:08:25,520 --> 00:08:29,758
namespaces like file name spaces

227
00:08:28,319 --> 00:08:31,520
stuff like that to do some kind of

228
00:08:29,759 --> 00:08:33,440
virtualization but i

229
00:08:31,520 --> 00:08:35,039
threw everything out and just use the

230
00:08:33,440 --> 00:08:37,279
network namespaces

231
00:08:35,039 --> 00:08:39,519
so you can already do that if you have

232
00:08:37,279 --> 00:08:42,880
recent

233
00:08:39,519 --> 00:08:43,599
linux kernel uh with this ip command you

234
00:08:42,880 --> 00:08:46,880
can i

235
00:08:43,599 --> 00:08:49,760
use this ipnet nf which stands for

236
00:08:46,880 --> 00:08:51,839
network namespaces namespace and you can

237
00:08:49,760 --> 00:08:54,240
add some namespace give it a name like

238
00:08:51,839 --> 00:08:56,000
like in the slide here we create a

239
00:08:54,240 --> 00:08:57,519
namespace called foo which has its own

240
00:08:56,000 --> 00:09:00,160
network namespace

241
00:08:57,519 --> 00:09:01,120
and then you can like list it and then

242
00:09:00,160 --> 00:09:03,920
you can

243
00:09:01,120 --> 00:09:05,839
execute arbitrary commands in there of

244
00:09:03,920 --> 00:09:06,800
course if you do something like ls to

245
00:09:05,839 --> 00:09:08,640
list all the files

246
00:09:06,800 --> 00:09:11,040
since this is a network namespace you

247
00:09:08,640 --> 00:09:12,080
only see like yeah you see what you have

248
00:09:11,040 --> 00:09:14,079
in on your disk

249
00:09:12,080 --> 00:09:16,240
so it's not encapsulated on this file

250
00:09:14,080 --> 00:09:16,880
system level but just different networks

251
00:09:16,240 --> 00:09:20,320
there

252
00:09:16,880 --> 00:09:23,200
so if i do like in this namespaces ipa

253
00:09:20,320 --> 00:09:25,040
like list all interfaces and addresses i

254
00:09:23,200 --> 00:09:27,680
will see only this localhost

255
00:09:25,040 --> 00:09:30,560
interface which isn't the one i usually

256
00:09:27,680 --> 00:09:34,160
see so this is a different one

257
00:09:30,560 --> 00:09:37,518
so and then you can go next step you can

258
00:09:34,160 --> 00:09:40,719
create virtual cables which you see by

259
00:09:37,519 --> 00:09:42,560
having two interfaces so if you stick

260
00:09:40,720 --> 00:09:43,760
in one interface one packet it just

261
00:09:42,560 --> 00:09:46,800
comes out of

262
00:09:43,760 --> 00:09:49,200
on the other end of the of this cable

263
00:09:46,800 --> 00:09:51,199
on the on the other interface and then

264
00:09:49,200 --> 00:09:52,560
you can put these interfaces into these

265
00:09:51,200 --> 00:09:56,480
namespaces

266
00:09:52,560 --> 00:10:01,199
and connect these uh yeah

267
00:09:56,480 --> 00:10:03,360
virtual nodes basically okay

268
00:10:01,200 --> 00:10:05,120
so yeah okay here are some some commands

269
00:10:03,360 --> 00:10:07,839
if you want to try it at home

270
00:10:05,120 --> 00:10:09,279
it's not dangerous dangerous dangerous

271
00:10:07,839 --> 00:10:11,839
it's fun

272
00:10:09,279 --> 00:10:13,439
where you create a cable and then you

273
00:10:11,839 --> 00:10:13,839
can stick it in different name spaces

274
00:10:13,440 --> 00:10:15,920
and

275
00:10:13,839 --> 00:10:17,600
then you see okay we have this interface

276
00:10:15,920 --> 00:10:18,560
in this namespace and the other

277
00:10:17,600 --> 00:10:21,760
namespace

278
00:10:18,560 --> 00:10:24,000
and of course you can start net

279
00:10:21,760 --> 00:10:25,760
some arbitrary network program on the

280
00:10:24,000 --> 00:10:26,079
links in this network namespace with

281
00:10:25,760 --> 00:10:29,519
this

282
00:10:26,079 --> 00:10:30,880
ipnet ns exec and send the name of the

283
00:10:29,519 --> 00:10:34,000
namespace and then adjust

284
00:10:30,880 --> 00:10:36,160
the command where you start your program

285
00:10:34,000 --> 00:10:37,360
and it will just see these interfaces

286
00:10:36,160 --> 00:10:40,959
and have this

287
00:10:37,360 --> 00:10:44,000
different tcp this network stack

288
00:10:40,959 --> 00:10:47,040
so so this is

289
00:10:44,000 --> 00:10:48,480
this is just the building block of what

290
00:10:47,040 --> 00:10:52,000
i've used

291
00:10:48,480 --> 00:10:55,279
so and this is like very efficient

292
00:10:52,000 --> 00:10:59,200
so i was able to emulate a lot of notes

293
00:10:55,279 --> 00:11:02,640
and how much we will see soon um

294
00:10:59,200 --> 00:11:06,160
yeah and this whole um

295
00:11:02,640 --> 00:11:08,240
meshnet lab um my little program

296
00:11:06,160 --> 00:11:10,160
consists just of a few python scripts

297
00:11:08,240 --> 00:11:13,680
one that takes a json file

298
00:11:10,160 --> 00:11:15,839
and sets everything up in a way so

299
00:11:13,680 --> 00:11:17,920
i have like this network namespace every

300
00:11:15,839 --> 00:11:20,399
network namespace is one node

301
00:11:17,920 --> 00:11:22,160
and these are connected by table and i

302
00:11:20,399 --> 00:11:24,399
can have json file where i

303
00:11:22,160 --> 00:11:25,199
define okay this is a cable with hundred

304
00:11:24,399 --> 00:11:28,399
embed

305
00:11:25,200 --> 00:11:31,279
some packet laws stuff like that and

306
00:11:28,399 --> 00:11:31,920
connect these and then i have some magic

307
00:11:31,279 --> 00:11:34,079
there

308
00:11:31,920 --> 00:11:35,120
which i will slow you show you on the

309
00:11:34,079 --> 00:11:38,479
next side

310
00:11:35,120 --> 00:11:40,959
slide uh that will show you a bit

311
00:11:38,480 --> 00:11:42,560
how i managed to make it more wi-fi like

312
00:11:40,959 --> 00:11:45,920
so thing is

313
00:11:42,560 --> 00:11:48,319
i every node will have one interface

314
00:11:45,920 --> 00:11:49,839
you send some some ping some packets

315
00:11:48,320 --> 00:11:53,760
there and it

316
00:11:49,839 --> 00:11:56,399
will arrive in other name spaces

317
00:11:53,760 --> 00:11:57,920
not just one but multiple it just

318
00:11:56,399 --> 00:12:01,279
depends how i define

319
00:11:57,920 --> 00:12:03,519
my network via this json file and

320
00:12:01,279 --> 00:12:04,800
then then i can start like for example

321
00:12:03,519 --> 00:12:06,800
batman advanced

322
00:12:04,800 --> 00:12:08,880
which is a common routing protocol for

323
00:12:06,800 --> 00:12:12,560
freifen networks

324
00:12:08,880 --> 00:12:15,040
in there in everyone um and

325
00:12:12,560 --> 00:12:16,079
yeah they will see each other and do

326
00:12:15,040 --> 00:12:19,439
meshing and then

327
00:12:16,079 --> 00:12:22,319
i can do pings and stuff like that and

328
00:12:19,440 --> 00:12:22,800
uh something that is i should note is

329
00:12:22,320 --> 00:12:26,480
that

330
00:12:22,800 --> 00:12:28,399
this is an emulation it's a

331
00:12:26,480 --> 00:12:30,480
it's not a discrete event simulation so

332
00:12:28,399 --> 00:12:33,680
that means just by throwing

333
00:12:30,480 --> 00:12:37,200
more cpu power on it at it

334
00:12:33,680 --> 00:12:38,239
it won't like run faster also i have

335
00:12:37,200 --> 00:12:40,160
this problem

336
00:12:38,240 --> 00:12:42,320
where when i present a lot of packets

337
00:12:40,160 --> 00:12:44,639
then it might influence influence

338
00:12:42,320 --> 00:12:45,920
random things in other parts of my

339
00:12:44,639 --> 00:12:49,040
virtual network

340
00:12:45,920 --> 00:12:52,240
so this is really my bad for

341
00:12:49,040 --> 00:12:55,199
is emulating or for testing uh

342
00:12:52,240 --> 00:12:56,480
through protocol but if you keep your

343
00:12:55,200 --> 00:13:00,000
your traffic

344
00:12:56,480 --> 00:13:04,320
low um to a certain

345
00:13:00,000 --> 00:13:07,200
amount then you can get very very big

346
00:13:04,320 --> 00:13:10,000
setups so a bit of the internals before

347
00:13:07,200 --> 00:13:12,959
we go to the results

348
00:13:10,000 --> 00:13:14,480
um yeah basically you have this

349
00:13:12,959 --> 00:13:17,279
namespace

350
00:13:14,480 --> 00:13:18,320
so let's say you have like a network

351
00:13:17,279 --> 00:13:21,600
with node a

352
00:13:18,320 --> 00:13:24,000
b and c and b is connected to a and c

353
00:13:21,600 --> 00:13:25,440
and then internally i have this set up

354
00:13:24,000 --> 00:13:28,560
this way where we have

355
00:13:25,440 --> 00:13:29,600
like three name spaces every name spaces

356
00:13:28,560 --> 00:13:33,199
have has an

357
00:13:29,600 --> 00:13:35,519
interface in it so every application you

358
00:13:33,200 --> 00:13:38,720
start in this network name spaces

359
00:13:35,519 --> 00:13:39,199
will only see its own interface and this

360
00:13:38,720 --> 00:13:41,839
is one

361
00:13:39,199 --> 00:13:43,599
connected the other end to the to a

362
00:13:41,839 --> 00:13:44,240
different name space which is basically

363
00:13:43,600 --> 00:13:47,360
my

364
00:13:44,240 --> 00:13:47,600
my web drop for all the cables uh which

365
00:13:47,360 --> 00:13:50,160
i

366
00:13:47,600 --> 00:13:51,199
just called switch which i've stuffed

367
00:13:50,160 --> 00:13:53,680
full of

368
00:13:51,199 --> 00:13:55,279
bridges and bridges that are connected

369
00:13:53,680 --> 00:13:57,279
to each other

370
00:13:55,279 --> 00:13:59,360
according to the json file i mean or

371
00:13:57,279 --> 00:14:00,560
according to how i want these notes to

372
00:13:59,360 --> 00:14:03,120
be connected

373
00:14:00,560 --> 00:14:04,560
and which what i did is that i dumped

374
00:14:03,120 --> 00:14:08,000
down those bridges

375
00:14:04,560 --> 00:14:09,920
to be uh hubs so hubs are like

376
00:14:08,000 --> 00:14:11,519
well as a network engineer you might

377
00:14:09,920 --> 00:14:14,079
still have a hub somewhere

378
00:14:11,519 --> 00:14:16,399
for well probably not anymore but like

379
00:14:14,079 --> 00:14:18,160
10 years ago it was still valuable

380
00:14:16,399 --> 00:14:19,680
if you wanted to do like packet

381
00:14:18,160 --> 00:14:21,920
inspection because the hub

382
00:14:19,680 --> 00:14:24,079
when you send a packet i mean it's like

383
00:14:21,920 --> 00:14:24,560
a switch but if you send a packet on one

384
00:14:24,079 --> 00:14:26,638
port

385
00:14:24,560 --> 00:14:27,680
it will come out on every other port so

386
00:14:26,639 --> 00:14:29,920
this is like a dump

387
00:14:27,680 --> 00:14:31,839
switch that doesn't really remember

388
00:14:29,920 --> 00:14:35,360
where to send a packet to

389
00:14:31,839 --> 00:14:38,160
if it arrived so so you can like

390
00:14:35,360 --> 00:14:40,240
put in two devices and they can interact

391
00:14:38,160 --> 00:14:42,480
and on all the other ports you can

392
00:14:40,240 --> 00:14:44,480
like listen in on all the packets but

393
00:14:42,480 --> 00:14:44,959
nowadays you have switches where you can

394
00:14:44,480 --> 00:14:47,199
just

395
00:14:44,959 --> 00:14:49,518
configure them so they will do the same

396
00:14:47,199 --> 00:14:52,079
thing but like 10 years ago these

397
00:14:49,519 --> 00:14:52,560
like old devices were still gold if you

398
00:14:52,079 --> 00:14:56,000
had

399
00:14:52,560 --> 00:14:58,000
wanted to listen in on on traffic so

400
00:14:56,000 --> 00:15:00,320
this is what i did so since i wanted to

401
00:14:58,000 --> 00:15:02,399
have something like a broadcast domain

402
00:15:00,320 --> 00:15:03,839
where you just send sign some package

403
00:15:02,399 --> 00:15:06,079
that might not even be a broadcast

404
00:15:03,839 --> 00:15:08,800
packet but maybe just a ping or so

405
00:15:06,079 --> 00:15:10,000
but so but this packet will still be

406
00:15:08,800 --> 00:15:12,399
received on

407
00:15:10,000 --> 00:15:13,040
on all neighboring nodes i mean in the

408
00:15:12,399 --> 00:15:16,079
in this

409
00:15:13,040 --> 00:15:19,439
topology so if c sorry b

410
00:15:16,079 --> 00:15:21,120
sends out ping on its uplink interface

411
00:15:19,440 --> 00:15:22,880
it will be received on the uplink

412
00:15:21,120 --> 00:15:26,160
interface on a

413
00:15:22,880 --> 00:15:28,480
network name spaces a and c so this is

414
00:15:26,160 --> 00:15:29,120
basically the magic source i i've used

415
00:15:28,480 --> 00:15:31,440
here

416
00:15:29,120 --> 00:15:33,600
and the switch namespace yeah i've used

417
00:15:31,440 --> 00:15:37,680
this one so i don't pollute my

418
00:15:33,600 --> 00:15:40,720
usual network primary namespace so

419
00:15:37,680 --> 00:15:41,279
if i do on my console just ipa i don't

420
00:15:40,720 --> 00:15:44,000
have like

421
00:15:41,279 --> 00:15:46,480
thousands of of bridges listed there

422
00:15:44,000 --> 00:15:51,519
which could be really messy

423
00:15:46,480 --> 00:15:55,040
okay so let's get started with the tests

424
00:15:51,519 --> 00:15:56,560
and so i've already told you that

425
00:15:55,040 --> 00:15:59,199
measuring throughput isn't a really good

426
00:15:56,560 --> 00:16:01,439
idea with these kinds of tests

427
00:15:59,199 --> 00:16:03,439
but what i wanted to do first of course

428
00:16:01,440 --> 00:16:04,320
is to benchmark how many packets can i

429
00:16:03,440 --> 00:16:06,880
get through

430
00:16:04,320 --> 00:16:08,000
until everything gets screwed so maybe

431
00:16:06,880 --> 00:16:11,199
packets getting dropped

432
00:16:08,000 --> 00:16:13,360
for no apparent reason and of course con

433
00:16:11,199 --> 00:16:15,199
convergence is something that i can't

434
00:16:13,360 --> 00:16:17,440
test which means that

435
00:16:15,199 --> 00:16:19,040
uh the network every in the network

436
00:16:17,440 --> 00:16:22,560
every node every state of this

437
00:16:19,040 --> 00:16:22,560
routing protocol instances

438
00:16:23,040 --> 00:16:28,240
they know about all other nodes if they

439
00:16:26,160 --> 00:16:30,480
don't do anything stupid i mean

440
00:16:28,240 --> 00:16:31,440
and so if i change something then it

441
00:16:30,480 --> 00:16:34,079
needs to converge

442
00:16:31,440 --> 00:16:35,680
again so every node has like there's a

443
00:16:34,079 --> 00:16:37,519
coherent

444
00:16:35,680 --> 00:16:40,239
view on the network and can route

445
00:16:37,519 --> 00:16:43,360
according to its routing protocol

446
00:16:40,240 --> 00:16:44,639
also if i change a lot this is called

447
00:16:43,360 --> 00:16:48,399
mobility

448
00:16:44,639 --> 00:16:48,839
um so you can think of like wifi routers

449
00:16:48,399 --> 00:16:52,079
on

450
00:16:48,839 --> 00:16:54,240
on cars i don't know or

451
00:16:52,079 --> 00:16:56,880
just they get turned on and off and

452
00:16:54,240 --> 00:16:59,199
connect or connect to other devices

453
00:16:56,880 --> 00:17:01,279
and of course my favorite topic is

454
00:16:59,199 --> 00:17:04,319
scalability

455
00:17:01,279 --> 00:17:05,280
so this is really what i want to test

456
00:17:04,319 --> 00:17:08,639
here

457
00:17:05,280 --> 00:17:11,599
um and also tried to test

458
00:17:08,640 --> 00:17:14,319
usually ipv6 not all routing protocols

459
00:17:11,599 --> 00:17:17,678
have a working implementation for ipv6

460
00:17:14,319 --> 00:17:19,678
but well i tried and of course the

461
00:17:17,679 --> 00:17:20,880
limitations i've already told you is

462
00:17:19,679 --> 00:17:23,439
yeah real time

463
00:17:20,880 --> 00:17:24,240
so it might take some time uh i can't

464
00:17:23,439 --> 00:17:26,720
just throw

465
00:17:24,240 --> 00:17:28,079
uh faster processes on it but it's of

466
00:17:26,720 --> 00:17:32,000
course helpful

467
00:17:28,079 --> 00:17:32,399
um and i have to be very careful for i

468
00:17:32,000 --> 00:17:36,080
mean

469
00:17:32,400 --> 00:17:38,559
performance issues like i hope in i owe

470
00:17:36,080 --> 00:17:40,000
limitations to influence the results

471
00:17:38,559 --> 00:17:43,760
that's something i want to avoid

472
00:17:40,000 --> 00:17:47,039
of course and i also can't really

473
00:17:43,760 --> 00:17:49,120
emulate wifi interference patterns where

474
00:17:47,039 --> 00:17:52,400
you have a wifi router it

475
00:17:49,120 --> 00:17:54,719
sends something but some other node

476
00:17:52,400 --> 00:17:56,000
that was previously unseen sends at the

477
00:17:54,720 --> 00:17:59,120
same time and then it

478
00:17:56,000 --> 00:18:01,520
both trashes through the packet in air

479
00:17:59,120 --> 00:18:03,360
stuff like that i i don't have that but

480
00:18:01,520 --> 00:18:05,039
well it's not impossible to do

481
00:18:03,360 --> 00:18:06,639
let's let's see there are other projects

482
00:18:05,039 --> 00:18:10,000
out there that might

483
00:18:06,640 --> 00:18:12,240
do that very well i will have a look and

484
00:18:10,000 --> 00:18:14,400
uh of course since it's not real time

485
00:18:12,240 --> 00:18:14,880
the testing duration can be quite long

486
00:18:14,400 --> 00:18:18,240
so

487
00:18:14,880 --> 00:18:20,880
i have some tests that run under an hour

488
00:18:18,240 --> 00:18:21,440
but also tests that i mean some of the

489
00:18:20,880 --> 00:18:24,320
slides

490
00:18:21,440 --> 00:18:25,360
i will show you they took like two one

491
00:18:24,320 --> 00:18:29,439
two weeks to

492
00:18:25,360 --> 00:18:32,719
to to produce so it was around the clock

493
00:18:29,440 --> 00:18:33,280
the cpu was like on mostly on like five

494
00:18:32,720 --> 00:18:36,320
percent

495
00:18:33,280 --> 00:18:36,960
idling and then the networks got bigger

496
00:18:36,320 --> 00:18:40,080
and bigger

497
00:18:36,960 --> 00:18:40,720
and new tests and uh and then the cpu

498
00:18:40,080 --> 00:18:42,720
got uh

499
00:18:40,720 --> 00:18:43,919
quite stressed at the end and that's

500
00:18:42,720 --> 00:18:46,240
where of course

501
00:18:43,919 --> 00:18:47,840
you have to be very very with your

502
00:18:46,240 --> 00:18:51,039
results if they're really

503
00:18:47,840 --> 00:18:51,439
like you're showing what you what you

504
00:18:51,039 --> 00:18:54,000
hope

505
00:18:51,440 --> 00:18:55,600
and not some interference with the cpu

506
00:18:54,000 --> 00:18:58,640
or io controller

507
00:18:55,600 --> 00:18:59,360
so the first thing i do is benchmarking

508
00:18:58,640 --> 00:19:02,000
of course

509
00:18:59,360 --> 00:19:03,678
but i will have a slide there in a few

510
00:19:02,000 --> 00:19:06,559
minutes

511
00:19:03,679 --> 00:19:07,840
and um one of the tests i have to had to

512
00:19:06,559 --> 00:19:10,240
do in like

513
00:19:07,840 --> 00:19:12,879
yeah this is a bit was a bit annoying

514
00:19:10,240 --> 00:19:14,559
because batman advanced for those

515
00:19:12,880 --> 00:19:16,799
who come from the fryphone community

516
00:19:14,559 --> 00:19:17,840
it's a routing protocol that's used a

517
00:19:16,799 --> 00:19:20,000
lot there

518
00:19:17,840 --> 00:19:21,039
but it's also implemented as a kernel

519
00:19:20,000 --> 00:19:23,039
module

520
00:19:21,039 --> 00:19:24,240
and they use like a single threaded

521
00:19:23,039 --> 00:19:26,720
primitive there

522
00:19:24,240 --> 00:19:27,600
that i couldn't get rid of so what i had

523
00:19:26,720 --> 00:19:31,120
to do for

524
00:19:27,600 --> 00:19:32,719
for this was to get a server with like a

525
00:19:31,120 --> 00:19:36,000
lot of cpus

526
00:19:32,720 --> 00:19:38,640
and for every cpu or two cpus i

527
00:19:36,000 --> 00:19:39,760
used the virtual machine and run my

528
00:19:38,640 --> 00:19:42,960
simulations there

529
00:19:39,760 --> 00:19:46,320
and connected all these virtual machines

530
00:19:42,960 --> 00:19:47,919
um over tunnels and yeah but i got it

531
00:19:46,320 --> 00:19:49,678
working it was a bit

532
00:19:47,919 --> 00:19:51,280
bit hard to do it was and i had a lot of

533
00:19:49,679 --> 00:19:54,000
help so thank you

534
00:19:51,280 --> 00:19:56,399
for that um so i have some results there

535
00:19:54,000 --> 00:19:59,200
as well that are comparable

536
00:19:56,400 --> 00:20:00,880
and okay um now of course to the routing

537
00:19:59,200 --> 00:20:04,000
process i actually uh

538
00:20:00,880 --> 00:20:07,280
tried to or test it successfully

539
00:20:04,000 --> 00:20:10,080
where for example xtrazil which is

540
00:20:07,280 --> 00:20:11,678
mostly um a spanning tree protocol with

541
00:20:10,080 --> 00:20:15,199
cryptography

542
00:20:11,679 --> 00:20:16,240
um so all ip addresses there are like

543
00:20:15,200 --> 00:20:19,520
derived forms

544
00:20:16,240 --> 00:20:21,520
from a from a secret key or public key

545
00:20:19,520 --> 00:20:23,280
at least a cryptographic key

546
00:20:21,520 --> 00:20:25,280
so you can't really choose your ip

547
00:20:23,280 --> 00:20:27,918
address and it has

548
00:20:25,280 --> 00:20:29,600
spanning tree architecture which tries

549
00:20:27,919 --> 00:20:32,080
to make a spanning tree out of

550
00:20:29,600 --> 00:20:34,719
everything like ospf maybe

551
00:20:32,080 --> 00:20:36,000
but it's more mesh-like but it's mostly

552
00:20:34,720 --> 00:20:38,799
used for

553
00:20:36,000 --> 00:20:40,000
um over the internet connections it's

554
00:20:38,799 --> 00:20:42,480
interesting

555
00:20:40,000 --> 00:20:43,440
and batman wants uh i've already told

556
00:20:42,480 --> 00:20:46,320
you it's used

557
00:20:43,440 --> 00:20:48,400
mostly very funk communities as far as i

558
00:20:46,320 --> 00:20:50,480
know

559
00:20:48,400 --> 00:20:51,440
yeah it's for really mobile mesh

560
00:20:50,480 --> 00:20:54,640
networks

561
00:20:51,440 --> 00:20:58,880
and then there is babel which is

562
00:20:54,640 --> 00:21:01,679
um also for for these cases but

563
00:20:58,880 --> 00:21:03,120
also focused on over the internet and

564
00:21:01,679 --> 00:21:03,679
you couldn't push out routes so it's

565
00:21:03,120 --> 00:21:06,320
more

566
00:21:03,679 --> 00:21:07,840
you can integrate it very well in

567
00:21:06,320 --> 00:21:10,960
professional

568
00:21:07,840 --> 00:21:14,799
setups when you're a network engineer

569
00:21:10,960 --> 00:21:18,000
stuff like that and working on a isp

570
00:21:14,799 --> 00:21:19,840
and then there's always r1 which is also

571
00:21:18,000 --> 00:21:21,200
previously used heavily used by the

572
00:21:19,840 --> 00:21:24,399
freiphone community

573
00:21:21,200 --> 00:21:27,200
which only really supports ipv4 i tried

574
00:21:24,400 --> 00:21:30,320
ipv6 support but it was broken

575
00:21:27,200 --> 00:21:33,039
but there's a newer version of r2

576
00:21:30,320 --> 00:21:34,320
which worked quite well in that regard

577
00:21:33,039 --> 00:21:37,360
and then there's of course

578
00:21:34,320 --> 00:21:40,720
b x x b mix 6

579
00:21:37,360 --> 00:21:44,719
and b and x 7 which are like

580
00:21:40,720 --> 00:21:47,760
descendants of batman advanced

581
00:21:44,720 --> 00:21:49,360
but this is in user space and they have

582
00:21:47,760 --> 00:21:52,400
a different

583
00:21:49,360 --> 00:21:53,360
protocol and then there's cg dns which

584
00:21:52,400 --> 00:21:56,159
is a bit old

585
00:21:53,360 --> 00:21:56,799
uh also like a bit comparable comparable

586
00:21:56,159 --> 00:21:59,679
to

587
00:21:56,799 --> 00:22:00,799
it drizzle cg dns is like the kind of a

588
00:21:59,679 --> 00:22:03,919
predecessor

589
00:22:00,799 --> 00:22:06,480
of igrazil i would say and then i tried

590
00:22:03,919 --> 00:22:09,200
also ospf

591
00:22:06,480 --> 00:22:10,960
which i didn't get to work honestly

592
00:22:09,200 --> 00:22:14,480
maybe someone can help me with that

593
00:22:10,960 --> 00:22:17,760
uh because it's a bit tricky uh because

594
00:22:14,480 --> 00:22:20,799
we i don't have like uh um

595
00:22:17,760 --> 00:22:22,080
i can't can't manually configure the all

596
00:22:20,799 --> 00:22:24,080
the notes i mean then

597
00:22:22,080 --> 00:22:25,120
it's meant to be as an ad hoc mesh

598
00:22:24,080 --> 00:22:28,720
network

599
00:22:25,120 --> 00:22:31,280
so every node node node wakes up

600
00:22:28,720 --> 00:22:33,200
starts up and sees packets and coming

601
00:22:31,280 --> 00:22:34,799
and needs to figure out where it is

602
00:22:33,200 --> 00:22:37,520
who are the neighbors and stuff like

603
00:22:34,799 --> 00:22:39,760
that and ospf is mostly

604
00:22:37,520 --> 00:22:40,720
uh well it's a bit hard to configure

605
00:22:39,760 --> 00:22:42,720
that way

606
00:22:40,720 --> 00:22:44,000
so if somebody can drop me a hint that

607
00:22:42,720 --> 00:22:46,960
would be awesome

608
00:22:44,000 --> 00:22:47,440
so let's get to add some actual results

609
00:22:46,960 --> 00:22:49,679
so

610
00:22:47,440 --> 00:22:51,360
i've told you uh first we need to do

611
00:22:49,679 --> 00:22:54,000
some benchmarking to see

612
00:22:51,360 --> 00:22:57,439
how much notes can we run before we get

613
00:22:54,000 --> 00:22:59,600
into trouble so i said okay

614
00:22:57,440 --> 00:23:01,280
i tried an old laptop on the server and

615
00:22:59,600 --> 00:23:04,240
what i did was

616
00:23:01,280 --> 00:23:06,240
i created some network i think this is

617
00:23:04,240 --> 00:23:09,840
like a grid

618
00:23:06,240 --> 00:23:12,320
of notes and i trade with tried with

619
00:23:09,840 --> 00:23:12,959
for yeah with different kinds of notes

620
00:23:12,320 --> 00:23:16,240
and

621
00:23:12,960 --> 00:23:18,320
they did some pings and then i saw okay

622
00:23:16,240 --> 00:23:19,360
how many packets do of these pings

623
00:23:18,320 --> 00:23:23,840
arrive at

624
00:23:19,360 --> 00:23:26,000
randomly selected pairs of nodes

625
00:23:23,840 --> 00:23:27,760
so i'd select some random pair of nodes

626
00:23:26,000 --> 00:23:30,880
that are not neighbors

627
00:23:27,760 --> 00:23:33,280
and of course not itself and then i sent

628
00:23:30,880 --> 00:23:36,400
a ping and said okay if it arrives

629
00:23:33,280 --> 00:23:39,440
then all is good and of course

630
00:23:36,400 --> 00:23:41,520
some of them doesn't don't arrive so

631
00:23:39,440 --> 00:23:42,799
then i get some some percentage of the

632
00:23:41,520 --> 00:23:45,200
arrival there

633
00:23:42,799 --> 00:23:46,240
and you can see that when i get to my

634
00:23:45,200 --> 00:23:48,480
laptop

635
00:23:46,240 --> 00:23:50,559
uh this one was my old one when i get to

636
00:23:48,480 --> 00:23:52,720
like 120

637
00:23:50,559 --> 00:23:54,639
notes then one of the routing protocols

638
00:23:52,720 --> 00:23:57,760
in this case better advanced

639
00:23:54,640 --> 00:24:01,520
um experienced packets to be dropped

640
00:23:57,760 --> 00:24:04,640
so i i knew okay so much i can

641
00:24:01,520 --> 00:24:05,440
go so far if i don't do much traffic and

642
00:24:04,640 --> 00:24:07,600
to be safe

643
00:24:05,440 --> 00:24:08,480
on the laptop i would go maybe with a

644
00:24:07,600 --> 00:24:11,520
hundred nodes

645
00:24:08,480 --> 00:24:13,919
tops and for the server it has a more

646
00:24:11,520 --> 00:24:15,600
beefier cpu it was the old one i think

647
00:24:13,919 --> 00:24:18,799
from 2012

648
00:24:15,600 --> 00:24:22,399
quite old but back then top notch

649
00:24:18,799 --> 00:24:26,000
i got up to 250 notes

650
00:24:22,400 --> 00:24:26,000
so i had a good like

651
00:24:27,600 --> 00:24:34,399
ballpark where i can scale this up

652
00:24:31,440 --> 00:24:35,039
so my my setup also i can distribute

653
00:24:34,400 --> 00:24:38,320
over

654
00:24:35,039 --> 00:24:41,440
different uh computers

655
00:24:38,320 --> 00:24:42,240
so that was very helpful and a bit to my

656
00:24:41,440 --> 00:24:44,320
measurements

657
00:24:42,240 --> 00:24:45,840
i mean i've already told you how i

658
00:24:44,320 --> 00:24:47,200
measure this package arrival in

659
00:24:45,840 --> 00:24:50,720
potential so 100

660
00:24:47,200 --> 00:24:53,440
means every no every every uh ping

661
00:24:50,720 --> 00:24:53,760
arrived usually i do like uh i don't

662
00:24:53,440 --> 00:24:57,360
know

663
00:24:53,760 --> 00:24:58,960
200 pings and when half of them arrives

664
00:24:57,360 --> 00:25:02,879
and i say okay it's 50

665
00:24:58,960 --> 00:25:03,919
arrival um and of course i pick random

666
00:25:02,880 --> 00:25:06,320
pairs

667
00:25:03,919 --> 00:25:07,600
and these are not meant to be neighbors

668
00:25:06,320 --> 00:25:10,879
and of course a path

669
00:25:07,600 --> 00:25:14,719
has to in theory exist and

670
00:25:10,880 --> 00:25:15,440
um yeah but i didn't measure throughput

671
00:25:14,720 --> 00:25:18,000
and i didn't

672
00:25:15,440 --> 00:25:20,400
try to press that because that would

673
00:25:18,000 --> 00:25:24,240
harm my results

674
00:25:20,400 --> 00:25:26,799
okay and yeah i also didn't do much

675
00:25:24,240 --> 00:25:27,440
packet loss because yeah i started with

676
00:25:26,799 --> 00:25:30,080
this

677
00:25:27,440 --> 00:25:32,080
setup and maybe at a later time i want

678
00:25:30,080 --> 00:25:35,039
to introduce something like jitter

679
00:25:32,080 --> 00:25:36,879
that you usually see with wi-fi uh

680
00:25:35,039 --> 00:25:37,360
packet loss and stuff like that but for

681
00:25:36,880 --> 00:25:40,320
now

682
00:25:37,360 --> 00:25:42,399
every test you will see here a result is

683
00:25:40,320 --> 00:25:45,678
based on an assumption that i have like

684
00:25:42,400 --> 00:25:48,640
100 megabit links between the nodes

685
00:25:45,679 --> 00:25:50,880
with one millisecond delay um of course

686
00:25:48,640 --> 00:25:54,400
unless stated otherwise

687
00:25:50,880 --> 00:25:57,360
okay so for convergence

688
00:25:54,400 --> 00:25:58,000
so i've already told you conversions is

689
00:25:57,360 --> 00:26:01,600
measured

690
00:25:58,000 --> 00:26:05,760
um when i well in this case uh

691
00:26:01,600 --> 00:26:07,918
when i um change when something changes

692
00:26:05,760 --> 00:26:10,000
and then i measure how the the

693
00:26:07,919 --> 00:26:12,159
connectivity changes i mean how many

694
00:26:10,000 --> 00:26:13,520
of these pings arrive and in this case

695
00:26:12,159 --> 00:26:15,440
what i did was

696
00:26:13,520 --> 00:26:16,639
um i set up this whole structure with

697
00:26:15,440 --> 00:26:20,080
this namespaces

698
00:26:16,640 --> 00:26:23,120
then i started like at time 0 here

699
00:26:20,080 --> 00:26:24,399
on the x-axis all the nodes also all the

700
00:26:23,120 --> 00:26:26,719
protocol

701
00:26:24,400 --> 00:26:28,000
software i mean the same one of course

702
00:26:26,720 --> 00:26:31,039
in every namespace

703
00:26:28,000 --> 00:26:32,320
and then i did in after two seconds wait

704
00:26:31,039 --> 00:26:34,559
i did pings

705
00:26:32,320 --> 00:26:36,559
and i saw for example here let's let's

706
00:26:34,559 --> 00:26:39,600
say use batman here

707
00:26:36,559 --> 00:26:42,879
which is this light blue line uh so

708
00:26:39,600 --> 00:26:46,559
i did this every two seconds i think um

709
00:26:42,880 --> 00:26:48,400
and we see up until maybe 27 seconds

710
00:26:46,559 --> 00:26:52,080
after start

711
00:26:48,400 --> 00:26:55,440
none of these pinks arrived but then

712
00:26:52,080 --> 00:26:57,520
it got to 100 percent very quickly

713
00:26:55,440 --> 00:26:58,640
so and this this could be explained

714
00:26:57,520 --> 00:27:01,600
someone from the

715
00:26:58,640 --> 00:27:02,480
developer team explained it to me so i

716
00:27:01,600 --> 00:27:05,600
mean this is not

717
00:27:02,480 --> 00:27:08,720
something like badgers so it's just

718
00:27:05,600 --> 00:27:09,279
yeah timings and this is just starting

719
00:27:08,720 --> 00:27:12,320
up this

720
00:27:09,279 --> 00:27:14,080
is a the batman advance instance and of

721
00:27:12,320 --> 00:27:16,720
course all the instances here

722
00:27:14,080 --> 00:27:17,439
so and testing was basically i started

723
00:27:16,720 --> 00:27:20,159
the

724
00:27:17,440 --> 00:27:21,600
so uh created this network then i

725
00:27:20,159 --> 00:27:22,480
started all the clients waited two

726
00:27:21,600 --> 00:27:25,600
seconds

727
00:27:22,480 --> 00:27:26,720
uh measured the pings and then draw the

728
00:27:25,600 --> 00:27:28,959
point and then

729
00:27:26,720 --> 00:27:31,279
i did everything all over again with the

730
00:27:28,960 --> 00:27:34,480
exception that i now waited four seconds

731
00:27:31,279 --> 00:27:37,120
then i teared down everything again

732
00:27:34,480 --> 00:27:39,039
then started up everything again then

733
00:27:37,120 --> 00:27:39,760
waited six seconds so that takes a long

734
00:27:39,039 --> 00:27:43,039
time

735
00:27:39,760 --> 00:27:45,440
but in the end i got this graph and um

736
00:27:43,039 --> 00:27:46,840
it's not really that important how fast

737
00:27:45,440 --> 00:27:49,520
these

738
00:27:46,840 --> 00:27:52,158
protocols go up here but it's still

739
00:27:49,520 --> 00:27:52,799
some interesting thing that shows you

740
00:27:52,159 --> 00:27:55,919
some

741
00:27:52,799 --> 00:27:57,360
implementation um some timings that are

742
00:27:55,919 --> 00:28:00,559
part of the source code so

743
00:27:57,360 --> 00:28:02,879
part of the default configuration so

744
00:28:00,559 --> 00:28:04,000
this is not like saying okay this bad

745
00:28:02,880 --> 00:28:07,039
protocol is very

746
00:28:04,000 --> 00:28:09,120
lazy or very bad or slow

747
00:28:07,039 --> 00:28:10,320
um of course you could maybe do it

748
00:28:09,120 --> 00:28:12,639
better but

749
00:28:10,320 --> 00:28:13,918
in practice it doesn't really matter

750
00:28:12,640 --> 00:28:17,919
because this is just

751
00:28:13,919 --> 00:28:19,760
like startup time of course

752
00:28:17,919 --> 00:28:21,200
at point zero all the instances were

753
00:28:19,760 --> 00:28:25,039
already started

754
00:28:21,200 --> 00:28:25,520
or just started but then at this point i

755
00:28:25,039 --> 00:28:28,559
got

756
00:28:25,520 --> 00:28:30,480
like counting the seconds and one

757
00:28:28,559 --> 00:28:32,080
oddity that i found here and that was

758
00:28:30,480 --> 00:28:34,480
also reproducible

759
00:28:32,080 --> 00:28:35,840
uh was the cg dns i don't know what they

760
00:28:34,480 --> 00:28:39,039
do at 30 seconds

761
00:28:35,840 --> 00:28:42,639
but the convergence

762
00:28:39,039 --> 00:28:45,120
goes down so not many pings arrived here

763
00:28:42,640 --> 00:28:47,039
i don't know why but this is

764
00:28:45,120 --> 00:28:49,600
well it's interesting to see and of

765
00:28:47,039 --> 00:28:50,799
course all this is what i test was on a

766
00:28:49,600 --> 00:28:53,840
glitch structure

767
00:28:50,799 --> 00:28:54,639
so i have had like notes like yeah on a

768
00:28:53,840 --> 00:28:58,240
chessboard

769
00:28:54,640 --> 00:29:00,080
and they have like four neighbors yeah

770
00:28:58,240 --> 00:29:01,440
okay but of course i did the same test

771
00:29:00,080 --> 00:29:04,000
not only on the grid

772
00:29:01,440 --> 00:29:05,760
but also and on a what i call a random

773
00:29:04,000 --> 00:29:06,399
tree it's like a tree structure but it's

774
00:29:05,760 --> 00:29:09,840
not

775
00:29:06,399 --> 00:29:12,879
balanced um i have a picture of it

776
00:29:09,840 --> 00:29:14,720
in later slides but it's still i think

777
00:29:12,880 --> 00:29:16,799
interesting

778
00:29:14,720 --> 00:29:19,039
okay so we have this on it on a random

779
00:29:16,799 --> 00:29:22,399
tree which is basically the same

780
00:29:19,039 --> 00:29:23,840
result um then

781
00:29:22,399 --> 00:29:26,320
i did it on the line which is

782
00:29:23,840 --> 00:29:28,879
pathological pathological

783
00:29:26,320 --> 00:29:30,320
because usually in in reality you don't

784
00:29:28,880 --> 00:29:33,520
see like mesh networks

785
00:29:30,320 --> 00:29:35,760
that are just like a like a line

786
00:29:33,520 --> 00:29:37,440
one note and the next line and it only

787
00:29:35,760 --> 00:29:39,679
sees it two neighbors and then you have

788
00:29:37,440 --> 00:29:39,679
like

789
00:29:39,760 --> 00:29:44,559
got up to like 60 notes

790
00:29:43,039 --> 00:29:46,879
so usually you don't have that in

791
00:29:44,559 --> 00:29:50,000
reality but it was still fun to try out

792
00:29:46,880 --> 00:29:51,679
and you see for example bad advanced and

793
00:29:50,000 --> 00:29:52,480
other protocols have a lot of problems

794
00:29:51,679 --> 00:29:56,559
there

795
00:29:52,480 --> 00:30:00,159
even after like uh 60 seconds

796
00:29:56,559 --> 00:30:01,760
um oh no i said 60 notes but it's 50

797
00:30:00,159 --> 00:30:03,760
notes

798
00:30:01,760 --> 00:30:04,799
that's what it says here in the small

799
00:30:03,760 --> 00:30:07,919
font

800
00:30:04,799 --> 00:30:10,639
uh so that must be true and

801
00:30:07,919 --> 00:30:11,279
yeah and you see that barbell for

802
00:30:10,640 --> 00:30:14,320
example

803
00:30:11,279 --> 00:30:16,640
sorry advanced doesn't go up to 100

804
00:30:14,320 --> 00:30:17,760
which is understandable standable when

805
00:30:16,640 --> 00:30:20,880
you see that

806
00:30:17,760 --> 00:30:22,960
um the matrix that bubble use at batman

807
00:30:20,880 --> 00:30:26,559
advanced uses

808
00:30:22,960 --> 00:30:30,880
doesn't allow so much hops anyway

809
00:30:26,559 --> 00:30:34,080
so it can't get up to 100 percent so

810
00:30:30,880 --> 00:30:35,520
it's just some interesting fact but in

811
00:30:34,080 --> 00:30:38,080
reality you don't have that

812
00:30:35,520 --> 00:30:39,840
many hops in your network's network so

813
00:30:38,080 --> 00:30:42,879
if you have like 50 nodes

814
00:30:39,840 --> 00:30:43,199
i think this on a on a grid i think this

815
00:30:42,880 --> 00:30:46,799
is

816
00:30:43,200 --> 00:30:49,600
actually 49 like seven times seven

817
00:30:46,799 --> 00:30:50,960
and then you have like seven yeah square

818
00:30:49,600 --> 00:30:54,639
root

819
00:30:50,960 --> 00:30:58,240
yeah around maybe seven hops

820
00:30:54,640 --> 00:31:00,720
and uh so but some of these can

821
00:30:58,240 --> 00:31:02,799
take a longer distance and yeah that's

822
00:31:00,720 --> 00:31:05,039
where they get dropped

823
00:31:02,799 --> 00:31:06,480
okay so yeah this is basically some

824
00:31:05,039 --> 00:31:09,519
results here

825
00:31:06,480 --> 00:31:10,320
um nothing really interesting now i

826
00:31:09,519 --> 00:31:12,559
think it hope

827
00:31:10,320 --> 00:31:14,960
it will get interesting more interesting

828
00:31:12,559 --> 00:31:19,279
and there i have to change actually

829
00:31:14,960 --> 00:31:22,480
because uh it doesn't show the animation

830
00:31:19,279 --> 00:31:24,960
in the presentation mode and um here i

831
00:31:22,480 --> 00:31:26,240
tested the mobility and you see this

832
00:31:24,960 --> 00:31:29,440
graph i have

833
00:31:26,240 --> 00:31:32,640
slides like this coming next

834
00:31:29,440 --> 00:31:34,240
and what you have to if you don't if

835
00:31:32,640 --> 00:31:35,039
you're too lazy to look at all this

836
00:31:34,240 --> 00:31:38,240
graph

837
00:31:35,039 --> 00:31:40,720
then look at this bar chart so

838
00:31:38,240 --> 00:31:41,519
this is just like the the simulation of

839
00:31:40,720 --> 00:31:44,559
what you see

840
00:31:41,519 --> 00:31:45,360
in in the in the graph above and what we

841
00:31:44,559 --> 00:31:47,519
see here

842
00:31:45,360 --> 00:31:48,959
is on the right the animation how the

843
00:31:47,519 --> 00:31:51,919
network like moves

844
00:31:48,960 --> 00:31:52,559
what i did here was in the station json

845
00:31:51,919 --> 00:31:56,080
file

846
00:31:52,559 --> 00:31:57,120
i gave every code in it like a gps

847
00:31:56,080 --> 00:32:00,000
coordinate

848
00:31:57,120 --> 00:32:01,518
a random one and then i said okay aft

849
00:32:00,000 --> 00:32:03,679
when two notes are

850
00:32:01,519 --> 00:32:05,679
in a distance of a few hundred meter or

851
00:32:03,679 --> 00:32:09,360
150 meter i don't really know

852
00:32:05,679 --> 00:32:12,480
um then i make connection

853
00:32:09,360 --> 00:32:16,559
and then every like two seconds

854
00:32:12,480 --> 00:32:19,120
um i move these notes into this

855
00:32:16,559 --> 00:32:19,918
virtual space randomly and then i see

856
00:32:19,120 --> 00:32:22,080
which

857
00:32:19,919 --> 00:32:23,200
nodes are near each other and if they're

858
00:32:22,080 --> 00:32:26,559
in in range

859
00:32:23,200 --> 00:32:28,240
then i make this connection so is this

860
00:32:26,559 --> 00:32:29,600
so it's just a connection or no

861
00:32:28,240 --> 00:32:32,320
connection

862
00:32:29,600 --> 00:32:34,000
and uh what i see here is okay there's

863
00:32:32,320 --> 00:32:36,639
not much mobility not much

864
00:32:34,000 --> 00:32:37,360
changes here but we can see that uh at

865
00:32:36,640 --> 00:32:39,760
least

866
00:32:37,360 --> 00:32:41,918
three protocols have a few problems here

867
00:32:39,760 --> 00:32:42,240
because they're well they're not really

868
00:32:41,919 --> 00:32:44,240
like

869
00:32:42,240 --> 00:32:45,279
optimized for mobility but everything

870
00:32:44,240 --> 00:32:48,720
else is like

871
00:32:45,279 --> 00:32:52,880
yeah 100 of all pings arrived

872
00:32:48,720 --> 00:32:56,000
and now let's get to the next

873
00:32:52,880 --> 00:32:59,600
slide maybe we can do it that way no

874
00:32:56,000 --> 00:33:03,440
didn't work um

875
00:32:59,600 --> 00:33:03,439
nope oh that was new slide

876
00:33:04,640 --> 00:33:09,679
and i think

877
00:33:07,840 --> 00:33:11,678
i need to start the presentation in new

878
00:33:09,679 --> 00:33:15,840
because it has created a new

879
00:33:11,679 --> 00:33:15,840
presentation okay why not

880
00:33:16,320 --> 00:33:24,879
that is something i can do yeah recover

881
00:33:19,760 --> 00:33:28,960
why not okay

882
00:33:24,880 --> 00:33:32,399
i can do it i think i want to go there

883
00:33:28,960 --> 00:33:34,720
because here we have much more mobility

884
00:33:32,399 --> 00:33:37,518
and you see the all other protocols

885
00:33:34,720 --> 00:33:39,760
except these three

886
00:33:37,519 --> 00:33:41,360
are also having pro a lot of lots more

887
00:33:39,760 --> 00:33:42,559
problems you can see where it's very

888
00:33:41,360 --> 00:33:44,320
chaotic here

889
00:33:42,559 --> 00:33:46,720
but still most of the mesh writing

890
00:33:44,320 --> 00:33:49,039
protocols that are meant for

891
00:33:46,720 --> 00:33:50,240
well optimized for mobility are holding

892
00:33:49,039 --> 00:33:52,640
out very well

893
00:33:50,240 --> 00:33:54,399
and every well nearly every packet

894
00:33:52,640 --> 00:33:57,600
arrives except for

895
00:33:54,399 --> 00:34:01,439
these three protocols um

896
00:33:57,600 --> 00:34:05,039
let me uh how can i show this

897
00:34:01,440 --> 00:34:09,519
from first slides yeah okay

898
00:34:05,039 --> 00:34:09,518
yeah see it doesn't show here okay

899
00:34:10,159 --> 00:34:15,440
so next slide so what are the results

900
00:34:13,520 --> 00:34:19,520
here i mean uh these three were

901
00:34:15,440 --> 00:34:23,119
cgds ictrazil and bmx7 which are having

902
00:34:19,520 --> 00:34:25,839
some problems here um well it's not

903
00:34:23,119 --> 00:34:26,639
that surprising except maybe for bmx

904
00:34:25,839 --> 00:34:29,839
seven

905
00:34:26,639 --> 00:34:32,079
but um yeah maybe there can be dues

906
00:34:29,839 --> 00:34:34,239
done something via the configuration but

907
00:34:32,079 --> 00:34:36,800
i've also always used like default

908
00:34:34,239 --> 00:34:41,199
configurations

909
00:34:36,800 --> 00:34:44,480
okay so this is just a different

910
00:34:41,199 --> 00:34:47,040
mobility scenario where i've also

911
00:34:44,480 --> 00:34:48,340
measured the traffic and what you see

912
00:34:47,040 --> 00:34:50,000
here is um

913
00:34:48,340 --> 00:34:52,960
[Music]

914
00:34:50,000 --> 00:34:53,520
i can't really see it on my screen is

915
00:34:52,960 --> 00:34:57,200
that

916
00:34:53,520 --> 00:35:00,800
um maybe that way

917
00:34:57,200 --> 00:35:03,839
it's just too small on my screen um

918
00:35:00,800 --> 00:35:05,680
yeah but um

919
00:35:03,839 --> 00:35:07,359
yeah this is like a different high

920
00:35:05,680 --> 00:35:10,319
mobility scenario

921
00:35:07,359 --> 00:35:11,839
and you see that igdrazil for example

922
00:35:10,320 --> 00:35:15,839
creates a lot of traffic

923
00:35:11,839 --> 00:35:17,680
but for routing it doesn't do so well

924
00:35:15,839 --> 00:35:18,960
very badly but i've been told by the

925
00:35:17,680 --> 00:35:20,799
developers that they're improving on

926
00:35:18,960 --> 00:35:23,599
that situation

927
00:35:20,800 --> 00:35:24,880
and all the other protocols here use a

928
00:35:23,599 --> 00:35:28,160
lot of

929
00:35:24,880 --> 00:35:31,839
low overhead low traffic

930
00:35:28,160 --> 00:35:34,240
and yeah and batman advanced and

931
00:35:31,839 --> 00:35:36,078
bmx six and seven are doing quite well

932
00:35:34,240 --> 00:35:41,040
here

933
00:35:36,079 --> 00:35:44,480
okay yeah these are just the results

934
00:35:41,040 --> 00:35:47,839
so um yeah i guess it's no surprise so

935
00:35:44,480 --> 00:35:51,280
now to my my most favorite

936
00:35:47,839 --> 00:35:53,759
result is uh scalability so

937
00:35:51,280 --> 00:35:55,040
i got hold of uh of a server with a lot

938
00:35:53,760 --> 00:35:58,000
of power

939
00:35:55,040 --> 00:36:00,000
and so i was able to simulate up to two

940
00:35:58,000 --> 00:36:03,119
thousand notes for this one i did

941
00:36:00,000 --> 00:36:04,640
a thousand just because two one thousand

942
00:36:03,119 --> 00:36:07,119
notes in one line

943
00:36:04,640 --> 00:36:07,839
is like horrible for for your routing

944
00:36:07,119 --> 00:36:11,359
protocols

945
00:36:07,839 --> 00:36:14,480
because in reality it doesn't happen um

946
00:36:11,359 --> 00:36:16,799
but what you can see here is uh that

947
00:36:14,480 --> 00:36:18,160
if you go up with the number of notes

948
00:36:16,800 --> 00:36:21,200
that um

949
00:36:18,160 --> 00:36:26,960
yeah what we have here that uh

950
00:36:21,200 --> 00:36:29,359
we reach something like uh yeah um

951
00:36:26,960 --> 00:36:30,800
yeah well what we can see is that the

952
00:36:29,359 --> 00:36:33,598
traffic goes up

953
00:36:30,800 --> 00:36:36,240
linear for most protocols for some for

954
00:36:33,599 --> 00:36:38,960
batman for example it stays the same

955
00:36:36,240 --> 00:36:40,000
but also we also see like this dotted

956
00:36:38,960 --> 00:36:42,560
lines here

957
00:36:40,000 --> 00:36:43,520
they go down very quickly i mean we can

958
00:36:42,560 --> 00:36:46,000
see it here

959
00:36:43,520 --> 00:36:46,880
which basically means that this is on

960
00:36:46,000 --> 00:36:50,160
the right side

961
00:36:46,880 --> 00:36:52,560
that most of the pinks don't arrive so

962
00:36:50,160 --> 00:36:54,399
basically our result here is it does

963
00:36:52,560 --> 00:36:58,640
this doesn't really say uh

964
00:36:54,400 --> 00:37:00,560
much to us so since the traffic

965
00:36:58,640 --> 00:37:02,640
doesn't really arrive the pings the

966
00:37:00,560 --> 00:37:04,720
packet less is too high

967
00:37:02,640 --> 00:37:06,400
um we can't really say something is

968
00:37:04,720 --> 00:37:08,319
better than a different one they're all

969
00:37:06,400 --> 00:37:09,839
like bad on in this scenario but in

970
00:37:08,320 --> 00:37:11,839
reality of course you don't have like a

971
00:37:09,839 --> 00:37:14,720
thousand notes in one line

972
00:37:11,839 --> 00:37:15,440
okay now on the grid it gets more

973
00:37:14,720 --> 00:37:17,680
interesting

974
00:37:15,440 --> 00:37:19,760
so uh you see most of the routing

975
00:37:17,680 --> 00:37:22,960
protocols they're doing quite well

976
00:37:19,760 --> 00:37:24,320
with with this scenario i got up to 2000

977
00:37:22,960 --> 00:37:26,880
notes

978
00:37:24,320 --> 00:37:28,000
in on a grid and most of the pings

979
00:37:26,880 --> 00:37:30,720
arrived

980
00:37:28,000 --> 00:37:32,400
and what is most interesting here i mean

981
00:37:30,720 --> 00:37:36,000
is that for batman it goes

982
00:37:32,400 --> 00:37:37,920
up and down and that means that the

983
00:37:36,000 --> 00:37:41,680
amount of traffic that goes

984
00:37:37,920 --> 00:37:43,920
in in on one single node on on average

985
00:37:41,680 --> 00:37:45,200
is going down and actually i don't know

986
00:37:43,920 --> 00:37:48,160
why but

987
00:37:45,200 --> 00:37:50,000
um i hope to find out at some point but

988
00:37:48,160 --> 00:37:52,240
you can also see that here the

989
00:37:50,000 --> 00:37:53,359
amount of packets that arrive this is a

990
00:37:52,240 --> 00:37:56,640
bit cramped

991
00:37:53,359 --> 00:38:00,560
but it's also going down after this uh

992
00:37:56,640 --> 00:38:04,480
this high point so this is um

993
00:38:00,560 --> 00:38:06,720
well basically means that yeah batman

994
00:38:04,480 --> 00:38:08,880
has some problems here i don't know what

995
00:38:06,720 --> 00:38:10,799
it is maybe it's the cpu

996
00:38:08,880 --> 00:38:12,240
uh since i had to do some special things

997
00:38:10,800 --> 00:38:15,440
with batman here

998
00:38:12,240 --> 00:38:18,560
but in uh in general i can't say that

999
00:38:15,440 --> 00:38:21,599
our traffic look on a link in in

1000
00:38:18,560 --> 00:38:25,359
on average with the size of the network

1001
00:38:21,599 --> 00:38:28,000
on the on the grid grows linear

1002
00:38:25,359 --> 00:38:29,359
and for some cases well i don't know

1003
00:38:28,000 --> 00:38:32,640
what's really happening here

1004
00:38:29,359 --> 00:38:35,680
so there's a lot of questions here but

1005
00:38:32,640 --> 00:38:38,078
well i tried to push it by throwing out

1006
00:38:35,680 --> 00:38:41,680
a lot of stuff

1007
00:38:38,079 --> 00:38:44,560
and sees us like some average

1008
00:38:41,680 --> 00:38:44,560
traffic results

1009
00:38:45,200 --> 00:38:49,680
that are measured there so you can say

1010
00:38:47,839 --> 00:38:52,799
that old r1 is quite

1011
00:38:49,680 --> 00:38:54,879
doing quite well um i've omitted

1012
00:38:52,800 --> 00:38:56,160
batman here because the packet loss was

1013
00:38:54,880 --> 00:38:57,680
just too high

1014
00:38:56,160 --> 00:39:00,960
so i couldn't really get a like

1015
00:38:57,680 --> 00:39:03,839
meaningful result

1016
00:39:00,960 --> 00:39:05,359
and also did this on a random tree but

1017
00:39:03,839 --> 00:39:07,440
we also see here a lot of

1018
00:39:05,359 --> 00:39:09,759
traffic packet laws for a lot of

1019
00:39:07,440 --> 00:39:12,640
protocols which don't really scale

1020
00:39:09,760 --> 00:39:14,000
apparently to this size to these sizes

1021
00:39:12,640 --> 00:39:16,720
and we also got like this

1022
00:39:14,000 --> 00:39:17,760
hill structure for batman advanced which

1023
00:39:16,720 --> 00:39:21,118
is probably having

1024
00:39:17,760 --> 00:39:24,160
some problems with the metric

1025
00:39:21,119 --> 00:39:25,359
yeah and um yeah that's basically how

1026
00:39:24,160 --> 00:39:28,960
this random tree

1027
00:39:25,359 --> 00:39:32,000
looks like um yeah it's just

1028
00:39:28,960 --> 00:39:35,040
not a balanced tree but yeah like a tree

1029
00:39:32,000 --> 00:39:37,359
but the thing is we don't have any loops

1030
00:39:35,040 --> 00:39:38,320
uh which of course in reality you never

1031
00:39:37,359 --> 00:39:41,920
have

1032
00:39:38,320 --> 00:39:43,200
um usually mesh rotting protocols try to

1033
00:39:41,920 --> 00:39:45,839
avoid loops and in

1034
00:39:43,200 --> 00:39:47,200
this case they don't have to so i was

1035
00:39:45,839 --> 00:39:49,599
expecting that they might

1036
00:39:47,200 --> 00:39:51,118
do well um but of course there are a lot

1037
00:39:49,599 --> 00:39:53,119
of other factors that you have to take

1038
00:39:51,119 --> 00:39:55,920
into account

1039
00:39:53,119 --> 00:39:56,960
and also try this on fifo networks

1040
00:39:55,920 --> 00:39:58,480
topologies i

1041
00:39:56,960 --> 00:40:00,720
downloaded from the fryphone community

1042
00:39:58,480 --> 00:40:03,119
sites um

1043
00:40:00,720 --> 00:40:04,240
yeah i mean this i've included this

1044
00:40:03,119 --> 00:40:06,720
slide but

1045
00:40:04,240 --> 00:40:08,319
the results are not very conclusive so

1046
00:40:06,720 --> 00:40:09,520
you can't really say that one is better

1047
00:40:08,319 --> 00:40:13,040
than the others

1048
00:40:09,520 --> 00:40:14,800
and yeah and i hope to get my hands on

1049
00:40:13,040 --> 00:40:17,040
on more hardware so i can do more

1050
00:40:14,800 --> 00:40:19,920
extensive tests that are more meaningful

1051
00:40:17,040 --> 00:40:20,400
but these at least are interesting and

1052
00:40:19,920 --> 00:40:24,000
with this

1053
00:40:20,400 --> 00:40:27,599
i would like to conclude my talk and um

1054
00:40:24,000 --> 00:40:29,920
as i've told you um all the results

1055
00:40:27,599 --> 00:40:30,640
while the project is on github also the

1056
00:40:29,920 --> 00:40:32,720
results

1057
00:40:30,640 --> 00:40:33,920
um and there are also scripts you can

1058
00:40:32,720 --> 00:40:36,000
run like

1059
00:40:33,920 --> 00:40:37,520
there's a test ordna there's there's a

1060
00:40:36,000 --> 00:40:39,760
python script for each test

1061
00:40:37,520 --> 00:40:41,359
you can run it and then there's a

1062
00:40:39,760 --> 00:40:42,319
different one that uses glue plot to

1063
00:40:41,359 --> 00:40:45,040
produce the exact

1064
00:40:42,319 --> 00:40:46,800
images as i have and you can just try it

1065
00:40:45,040 --> 00:40:49,839
for yourself and have fun

1066
00:40:46,800 --> 00:40:52,800
and i hope you can to use this pro

1067
00:40:49,839 --> 00:40:54,560
this tool to compare other routing

1068
00:40:52,800 --> 00:40:57,839
protocols maybe to create my own

1069
00:40:54,560 --> 00:40:58,880
and see how it goes with other ones

1070
00:40:57,839 --> 00:41:01,359
before i go to

1071
00:40:58,880 --> 00:41:03,040
actual hardware and of course i've told

1072
00:41:01,359 --> 00:41:04,078
you i'm more interested in scalability

1073
00:41:03,040 --> 00:41:06,000
for now

1074
00:41:04,079 --> 00:41:07,520
and with this this i would like to

1075
00:41:06,000 --> 00:41:08,720
conclude my talk and thank you for

1076
00:41:07,520 --> 00:41:11,440
watching

1077
00:41:08,720 --> 00:41:14,160
and if you have questions now's the time

1078
00:41:11,440 --> 00:41:14,160
thank you very much

1079
00:41:16,880 --> 00:41:21,040
okay hey thanks for the presentation we

1080
00:41:19,839 --> 00:41:23,359
have some questions

1081
00:41:21,040 --> 00:41:25,520
okay i brought my laptop okay questions

1082
00:41:23,359 --> 00:41:28,480
are arriving from the internet

1083
00:41:25,520 --> 00:41:30,079
so one question is question about all

1084
00:41:28,480 --> 00:41:32,560
these nice graphs

1085
00:41:30,079 --> 00:41:34,480
do you have error bars as well i guess

1086
00:41:32,560 --> 00:41:35,200
you repeated the measurements more than

1087
00:41:34,480 --> 00:41:37,520
once

1088
00:41:35,200 --> 00:41:39,200
is this worth looking at that without

1089
00:41:37,520 --> 00:41:42,400
liars etc

1090
00:41:39,200 --> 00:41:46,000
yes i did error bars in the beginning

1091
00:41:42,400 --> 00:41:49,760
but since one run of the entire graph

1092
00:41:46,000 --> 00:41:52,240
took like hours it was very tiresome in

1093
00:41:49,760 --> 00:41:55,280
the beginning i did like 10

1094
00:41:52,240 --> 00:41:57,919
iterations of each graph

1095
00:41:55,280 --> 00:41:58,560
then i noticed some bug then i had to

1096
00:41:57,920 --> 00:42:01,119
fix it

1097
00:41:58,560 --> 00:42:02,720
then i tried again and that's how the

1098
00:42:01,119 --> 00:42:05,040
the weeks pass

1099
00:42:02,720 --> 00:42:06,560
and now it works but still some tests

1100
00:42:05,040 --> 00:42:09,200
like scalability tests

1101
00:42:06,560 --> 00:42:09,839
it takes like a week maybe i can try of

1102
00:42:09,200 --> 00:42:11,598
course for

1103
00:42:09,839 --> 00:42:14,078
one routing protocol which is much much

1104
00:42:11,599 --> 00:42:14,400
quicker but if you do 10 iterations for

1105
00:42:14,079 --> 00:42:16,560
you

1106
00:42:14,400 --> 00:42:17,599
for example for your aerograph it's just

1107
00:42:16,560 --> 00:42:19,920
too tedious

1108
00:42:17,599 --> 00:42:21,440
uh i would like to have one and what i

1109
00:42:19,920 --> 00:42:25,119
can say is that

1110
00:42:21,440 --> 00:42:28,319
the air graphs show like

1111
00:42:25,119 --> 00:42:30,880
not much that much variability so most

1112
00:42:28,319 --> 00:42:34,000
of these results are

1113
00:42:30,880 --> 00:42:35,040
if you see them they're from the quality

1114
00:42:34,000 --> 00:42:38,319
wise

1115
00:42:35,040 --> 00:42:40,960
they're the same if you repeat them

1116
00:42:38,319 --> 00:42:42,400
cool thank you another question from the

1117
00:42:40,960 --> 00:42:44,960
internet that just arrived

1118
00:42:42,400 --> 00:42:46,319
is why did you choose to cook your own

1119
00:42:44,960 --> 00:42:48,160
protocol test bed

1120
00:42:46,319 --> 00:42:50,640
thank you that's a good question the

1121
00:42:48,160 --> 00:42:53,598
thing is that as i

1122
00:42:50,640 --> 00:42:54,319
said in the beginning is that most test

1123
00:42:53,599 --> 00:42:57,280
beds i

1124
00:42:54,319 --> 00:42:59,119
i've found on the internet i have a list

1125
00:42:57,280 --> 00:43:02,640
on my meshnet

1126
00:42:59,119 --> 00:43:04,640
meshnet lab project page in the

1127
00:43:02,640 --> 00:43:06,000
in the bottom on the bottom i have a

1128
00:43:04,640 --> 00:43:08,960
list of other projects that

1129
00:43:06,000 --> 00:43:10,880
are doing similar stuff and also i'm

1130
00:43:08,960 --> 00:43:13,280
using like

1131
00:43:10,880 --> 00:43:14,160
images docker images running like that

1132
00:43:13,280 --> 00:43:17,040
or

1133
00:43:14,160 --> 00:43:17,359
kubernetes and stuff and then i got in

1134
00:43:17,040 --> 00:43:18,960
the

1135
00:43:17,359 --> 00:43:21,200
problem that i don't have the resources

1136
00:43:18,960 --> 00:43:22,480
to run all these like multiple linux

1137
00:43:21,200 --> 00:43:25,680
kernels

1138
00:43:22,480 --> 00:43:26,400
um and since i well i use this analogy

1139
00:43:25,680 --> 00:43:29,759
where i

1140
00:43:26,400 --> 00:43:31,920
are in an airship or a balloon and

1141
00:43:29,760 --> 00:43:33,040
going down so i throw everything out

1142
00:43:31,920 --> 00:43:34,960
just to get

1143
00:43:33,040 --> 00:43:36,160
to this amount of notes and i still hope

1144
00:43:34,960 --> 00:43:39,520
to get like

1145
00:43:36,160 --> 00:43:42,960
useful results so that's what i did

1146
00:43:39,520 --> 00:43:43,520
and a few weeks ago i found actually a

1147
00:43:42,960 --> 00:43:46,640
project

1148
00:43:43,520 --> 00:43:49,359
a mininet lab wi-fi

1149
00:43:46,640 --> 00:43:50,000
that i have to look further into i

1150
00:43:49,359 --> 00:43:52,240
thought they

1151
00:43:50,000 --> 00:43:53,440
they do also like containers which would

1152
00:43:52,240 --> 00:43:55,359
be too heavy white

1153
00:43:53,440 --> 00:43:56,480
but somebody else told me no they don't

1154
00:43:55,359 --> 00:43:59,119
use containers

1155
00:43:56,480 --> 00:43:59,760
so i might have a looker there i think

1156
00:43:59,119 --> 00:44:02,720
it's

1157
00:43:59,760 --> 00:44:04,079
all already listed on my project page so

1158
00:44:02,720 --> 00:44:06,319
yes

1159
00:44:04,079 --> 00:44:08,480
i would like to use other ones for me of

1160
00:44:06,319 --> 00:44:11,520
course now i've written my own

1161
00:44:08,480 --> 00:44:13,200
uh yeah let's reinvent the wheel but of

1162
00:44:11,520 --> 00:44:17,440
course you learn a lot

1163
00:44:13,200 --> 00:44:21,118
um and yes so i tried

1164
00:44:17,440 --> 00:44:22,720
but i figured out that it's way

1165
00:44:21,119 --> 00:44:24,560
over my head with the resource i don't

1166
00:44:22,720 --> 00:44:28,480
have that much okay

1167
00:44:24,560 --> 00:44:30,400
thank you um from the internet i don't

1168
00:44:28,480 --> 00:44:33,119
see anything else right now but i

1169
00:44:30,400 --> 00:44:33,520
also wrote down questions so one thing i

1170
00:44:33,119 --> 00:44:37,839
i

1171
00:44:33,520 --> 00:44:40,240
really i saw is that the cj dns protocol

1172
00:44:37,839 --> 00:44:40,880
and all the build-up graphs breaks down

1173
00:44:40,240 --> 00:44:43,598
again

1174
00:44:40,880 --> 00:44:44,560
around 20 seconds why is that did you

1175
00:44:43,599 --> 00:44:48,599
look into that

1176
00:44:44,560 --> 00:44:53,040
uh actually no i only knew that it was

1177
00:44:48,599 --> 00:44:56,560
reproducible and that i

1178
00:44:53,040 --> 00:44:57,440
could rule out cpu effects which i was

1179
00:44:56,560 --> 00:44:59,680
very uh

1180
00:44:57,440 --> 00:45:01,040
cautious about that it might ruin my

1181
00:44:59,680 --> 00:45:03,359
results or

1182
00:45:01,040 --> 00:45:04,319
then i see layer basically measure how

1183
00:45:03,359 --> 00:45:06,078
big

1184
00:45:04,319 --> 00:45:07,599
good my cpu is and then it depends of

1185
00:45:06,079 --> 00:45:08,800
course on the watching protocol

1186
00:45:07,599 --> 00:45:11,040
implementation

1187
00:45:08,800 --> 00:45:12,160
so that's something i like to like to

1188
00:45:11,040 --> 00:45:16,400
avoid

1189
00:45:12,160 --> 00:45:20,000
and with cgdns and other protocols

1190
00:45:16,400 --> 00:45:22,960
i sometimes i've asked people that know

1191
00:45:20,000 --> 00:45:24,160
much more about these protocols and uh

1192
00:45:22,960 --> 00:45:26,720
why they think this

1193
00:45:24,160 --> 00:45:27,200
might happen and i got some replies like

1194
00:45:26,720 --> 00:45:30,319
uh

1195
00:45:27,200 --> 00:45:32,000
yeah this there's some timer or this

1196
00:45:30,319 --> 00:45:34,000
this is some feature you can turn it off

1197
00:45:32,000 --> 00:45:36,640
and then you won't see it or it

1198
00:45:34,000 --> 00:45:38,240
will have a different outcome or you can

1199
00:45:36,640 --> 00:45:40,319
adjust the metric

1200
00:45:38,240 --> 00:45:41,359
and then of course if you have really

1201
00:45:40,319 --> 00:45:43,359
big nash network

1202
00:45:41,359 --> 00:45:44,880
then of course the matrix will be able

1203
00:45:43,359 --> 00:45:46,640
to to cover

1204
00:45:44,880 --> 00:45:48,720
this distances and because routing

1205
00:45:46,640 --> 00:45:51,359
protocols is the metric like cop metric

1206
00:45:48,720 --> 00:45:53,040
celsius maximum hub count is 30 then of

1207
00:45:51,359 --> 00:45:56,160
course after 30 hops

1208
00:45:53,040 --> 00:45:56,480
uh the packet is is dropped beautifully

1209
00:45:56,160 --> 00:45:58,399
and

1210
00:45:56,480 --> 00:46:02,000
um yeah that's that's it's because in

1211
00:45:58,400 --> 00:46:06,000
reality you don't have that crazy people

1212
00:46:02,000 --> 00:46:06,640
maybe um yes so i hope that answers your

1213
00:46:06,000 --> 00:46:09,839
question

1214
00:46:06,640 --> 00:46:12,000
okay cool yeah thanks um another thing

1215
00:46:09,839 --> 00:46:13,040
i i thought it was interesting that i

1216
00:46:12,000 --> 00:46:15,920
think you

1217
00:46:13,040 --> 00:46:17,839
in the mobility graphs you just drop the

1218
00:46:15,920 --> 00:46:19,359
connections right so when when the

1219
00:46:17,839 --> 00:46:22,078
connection when the distance is

1220
00:46:19,359 --> 00:46:22,799
longer than i think 60 meters so so

1221
00:46:22,079 --> 00:46:26,000
there's no

1222
00:46:22,800 --> 00:46:28,560
degradation of the wi-fi quality and

1223
00:46:26,000 --> 00:46:30,319
more and more packet loss um do you

1224
00:46:28,560 --> 00:46:30,640
think that might change something if you

1225
00:46:30,319 --> 00:46:33,599
had

1226
00:46:30,640 --> 00:46:35,200
these abilities to calculate that into

1227
00:46:33,599 --> 00:46:37,599
your simulation

1228
00:46:35,200 --> 00:46:38,560
i don't know i would like to to check

1229
00:46:37,599 --> 00:46:40,880
that um

1230
00:46:38,560 --> 00:46:42,160
i have it already prepared not the graph

1231
00:46:40,880 --> 00:46:45,359
but this is the test

1232
00:46:42,160 --> 00:46:47,520
i just have to run it but of course the

1233
00:46:45,359 --> 00:46:50,560
christmas time is a busy time

1234
00:46:47,520 --> 00:46:52,800
and yeah i didn't get

1235
00:46:50,560 --> 00:46:53,920
didn't have time yet to test that but

1236
00:46:52,800 --> 00:46:56,640
yes i have this

1237
00:46:53,920 --> 00:46:57,359
prepared i just have to run it of course

1238
00:46:56,640 --> 00:47:00,078
people can't

1239
00:46:57,359 --> 00:47:01,119
can run it themselves uh but i have to

1240
00:47:00,079 --> 00:47:04,560
point out where to

1241
00:47:01,119 --> 00:47:06,640
like enable it okay yeah and

1242
00:47:04,560 --> 00:47:09,040
another question that i thought about is

1243
00:47:06,640 --> 00:47:12,160
so you you talked about

1244
00:47:09,040 --> 00:47:14,000
um these that's that for big networks

1245
00:47:12,160 --> 00:47:14,640
it's not clear how these protocols

1246
00:47:14,000 --> 00:47:17,200
perform

1247
00:47:14,640 --> 00:47:18,879
yes uh what are applications you could

1248
00:47:17,200 --> 00:47:20,799
imagine or in your dreams if you

1249
00:47:18,880 --> 00:47:22,079
think like you do this next round of

1250
00:47:20,800 --> 00:47:24,240
simulations and everything

1251
00:47:22,079 --> 00:47:25,280
works really well and how you want to

1252
00:47:24,240 --> 00:47:28,078
okay let's simulate it

1253
00:47:25,280 --> 00:47:30,559
crazy what in what scenario could you

1254
00:47:28,079 --> 00:47:32,960
help the fryphone community and

1255
00:47:30,559 --> 00:47:33,920
build a really big network that was not

1256
00:47:32,960 --> 00:47:35,599
possible before

1257
00:47:33,920 --> 00:47:37,920
how could that look like yeah i know i

1258
00:47:35,599 --> 00:47:40,240
know most iphone communities for example

1259
00:47:37,920 --> 00:47:41,839
in in germany use batman advanced which

1260
00:47:40,240 --> 00:47:45,040
is very good

1261
00:47:41,839 --> 00:47:48,799
but they max out at 500 to

1262
00:47:45,040 --> 00:47:49,440
1000 nodes at that point you can't scale

1263
00:47:48,800 --> 00:47:52,079
it up more

1264
00:47:49,440 --> 00:47:53,680
because then the management traffic just

1265
00:47:52,079 --> 00:47:57,119
for the notes to keep

1266
00:47:53,680 --> 00:47:59,118
say yeah i'm still there it's still like

1267
00:47:57,119 --> 00:48:01,280
it's gross too much it's gross in linear

1268
00:47:59,119 --> 00:48:03,440
which i saw in the graph

1269
00:48:01,280 --> 00:48:04,960
but at some point you just saturate your

1270
00:48:03,440 --> 00:48:08,480
wifi connection

1271
00:48:04,960 --> 00:48:10,160
with and um that's of course

1272
00:48:08,480 --> 00:48:12,000
bad that's something i would like to

1273
00:48:10,160 --> 00:48:13,520
solve for example okay this is more like

1274
00:48:12,000 --> 00:48:16,559
a smaller dream maybe

1275
00:48:13,520 --> 00:48:18,640
um where we have

1276
00:48:16,559 --> 00:48:20,319
we can connect entire city and everybody

1277
00:48:18,640 --> 00:48:23,759
in the city

1278
00:48:20,319 --> 00:48:26,880
and uh you can also put in like low

1279
00:48:23,760 --> 00:48:27,440
uh bandwidth notes uh sorry connections

1280
00:48:26,880 --> 00:48:30,800
there

1281
00:48:27,440 --> 00:48:32,880
that would be awesome i mean um

1282
00:48:30,800 --> 00:48:36,160
but you you don't really want to for

1283
00:48:32,880 --> 00:48:39,200
example watch a youtube video over lora

1284
00:48:36,160 --> 00:48:41,040
which basically is one of a few words

1285
00:48:39,200 --> 00:48:42,319
every second you're allowed to seem to

1286
00:48:41,040 --> 00:48:43,920
send so

1287
00:48:42,319 --> 00:48:45,920
probably nice to have a routing protocol

1288
00:48:43,920 --> 00:48:48,960
that

1289
00:48:45,920 --> 00:48:50,960
not only scales uh to this size but it's

1290
00:48:48,960 --> 00:48:54,079
very efficient and

1291
00:48:50,960 --> 00:48:56,960
doesn't it prevents from misusing like

1292
00:48:54,079 --> 00:48:59,119
low uh bandwidth connections with

1293
00:48:56,960 --> 00:49:01,440
youtube videos or stuff like that

1294
00:48:59,119 --> 00:49:02,400
um that would be awesome and maybe more

1295
00:49:01,440 --> 00:49:04,000
crazy a dream

1296
00:49:02,400 --> 00:49:06,400
would be of course to connect everyone

1297
00:49:04,000 --> 00:49:09,200
in a city with a decentralized network

1298
00:49:06,400 --> 00:49:10,800
that doesn't have a centralized

1299
00:49:09,200 --> 00:49:14,160
authority or so

1300
00:49:10,800 --> 00:49:16,240
something like that and so

1301
00:49:14,160 --> 00:49:17,920
traffic that is sent local is meant for

1302
00:49:16,240 --> 00:49:20,240
my neighbor only stays

1303
00:49:17,920 --> 00:49:21,760
local in the center locals so if for

1304
00:49:20,240 --> 00:49:23,279
example if some three-letter agency

1305
00:49:21,760 --> 00:49:25,920
wants to spawn us

1306
00:49:23,280 --> 00:49:27,680
help they should get on a rain and drive

1307
00:49:25,920 --> 00:49:30,319
to your home and get out

1308
00:49:27,680 --> 00:49:31,919
this buying equipment but i think it's

1309
00:49:30,319 --> 00:49:35,359
atrocious that's

1310
00:49:31,920 --> 00:49:35,680
it's very bad that every traffic goes

1311
00:49:35,359 --> 00:49:38,640
through

1312
00:49:35,680 --> 00:49:40,480
some big box in in germany maybe or a

1313
00:49:38,640 --> 00:49:42,720
few of them and you can just

1314
00:49:40,480 --> 00:49:44,480
do math surveillance there so this is

1315
00:49:42,720 --> 00:49:46,720
something i would like to uh

1316
00:49:44,480 --> 00:49:47,599
to to prevent to give power back to the

1317
00:49:46,720 --> 00:49:50,240
people

1318
00:49:47,599 --> 00:49:51,680
uh so they communicate uh which is with

1319
00:49:50,240 --> 00:49:53,919
each other with their neighbors

1320
00:49:51,680 --> 00:49:55,200
without being like dependent on other

1321
00:49:53,920 --> 00:49:56,480
things of course you can think of

1322
00:49:55,200 --> 00:49:58,558
disaster areas

1323
00:49:56,480 --> 00:49:59,520
where you can apply this or if you get

1324
00:49:58,559 --> 00:50:00,800
crazy you want to

1325
00:49:59,520 --> 00:50:02,559
replace the internet with something

1326
00:50:00,800 --> 00:50:04,480
better i mean since 10 years

1327
00:50:02,559 --> 00:50:05,839
we got this saying that the internet

1328
00:50:04,480 --> 00:50:08,720
doesn't scale anymore

1329
00:50:05,839 --> 00:50:09,119
which is kind of true but also we got a

1330
00:50:08,720 --> 00:50:12,078
lot of

1331
00:50:09,119 --> 00:50:12,400
more like cpu and ram which helps a lot

1332
00:50:12,079 --> 00:50:15,680
and

1333
00:50:12,400 --> 00:50:16,640
digger pipes so we can just uh say yeah

1334
00:50:15,680 --> 00:50:18,720
the bandwidth

1335
00:50:16,640 --> 00:50:21,118
the overhead is really low compared to

1336
00:50:18,720 --> 00:50:25,200
all the traffic youtube videos and

1337
00:50:21,119 --> 00:50:28,240
facebook status messages we send there

1338
00:50:25,200 --> 00:50:31,279
but um yeah for wi-fi or for

1339
00:50:28,240 --> 00:50:33,200
for local uh for cheap devices

1340
00:50:31,280 --> 00:50:34,960
that don't have that much bandwidth you

1341
00:50:33,200 --> 00:50:37,439
need a much better protocol

1342
00:50:34,960 --> 00:50:38,800
so having like a protocol that scales to

1343
00:50:37,440 --> 00:50:42,240
these big sizes

1344
00:50:38,800 --> 00:50:44,640
is like really really hard

1345
00:50:42,240 --> 00:50:46,078
like actually it's exceptionally hard so

1346
00:50:44,640 --> 00:50:48,400
i don't make um

1347
00:50:46,079 --> 00:50:50,079
say that yeah i will be done like next

1348
00:50:48,400 --> 00:50:52,319
year probably not but

1349
00:50:50,079 --> 00:50:54,640
i guess it will be fun right and maybe i

1350
00:50:52,319 --> 00:50:56,319
can push the binary a bit so that would

1351
00:50:54,640 --> 00:51:00,078
be something i dream about

1352
00:50:56,319 --> 00:51:02,079
cool what a nice outlook um i think

1353
00:51:00,079 --> 00:51:03,599
this this talks we're done here and we

1354
00:51:02,079 --> 00:51:06,400
were over the time

1355
00:51:03,599 --> 00:51:07,040
um usually we would have a discussion

1356
00:51:06,400 --> 00:51:10,319
round

1357
00:51:07,040 --> 00:51:12,640
in in a i think big low button room

1358
00:51:10,319 --> 00:51:13,599
where you could uh discuss with morris

1359
00:51:12,640 --> 00:51:16,240
but in this case

1360
00:51:13,599 --> 00:51:17,680
he's also doing two workshops today in

1361
00:51:16,240 --> 00:51:19,919
our workshop area

1362
00:51:17,680 --> 00:51:20,879
so after a short break you will just

1363
00:51:19,920 --> 00:51:23,680
find him there

1364
00:51:20,880 --> 00:51:24,559
and he's available this workshop area is

1365
00:51:23,680 --> 00:51:27,759
available

1366
00:51:24,559 --> 00:51:31,200
under workshops.rc3.org.social

1367
00:51:27,760 --> 00:51:33,599
so you can just join there the

1368
00:51:31,200 --> 00:51:34,240
times for the workshops is something you

1369
00:51:33,599 --> 00:51:37,599
can find

1370
00:51:34,240 --> 00:51:51,839
on the schedule which is also online

1371
00:51:37,599 --> 00:51:51,839
and with that thank you mobile thank you

1372
00:51:55,910 --> 00:52:01,920
[Music]

1373
00:51:59,839 --> 00:52:01,920
you

