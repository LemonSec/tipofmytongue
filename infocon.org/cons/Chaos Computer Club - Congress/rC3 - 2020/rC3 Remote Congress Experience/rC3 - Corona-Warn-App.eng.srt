1
00:00:01,500 --> 00:00:10,520
[Music]

2
00:00:07,350 --> 00:00:10,520
[Applause]

3
00:00:13,360 --> 00:00:18,720
all right

4
00:00:15,120 --> 00:00:20,720
c w a three simple letters

5
00:00:18,720 --> 00:00:21,840
but what stands behind them is not

6
00:00:20,720 --> 00:00:24,160
simple at all

7
00:00:21,840 --> 00:00:25,359
for various reasons the corona one app

8
00:00:24,160 --> 00:00:27,279
has been one of the most

9
00:00:25,359 --> 00:00:29,439
talked about digital projects of the

10
00:00:27,279 --> 00:00:31,519
year behind it's rather simplistic

11
00:00:29,439 --> 00:00:33,520
facade there are many considerations

12
00:00:31,519 --> 00:00:36,000
that went into the app's design

13
00:00:33,520 --> 00:00:37,840
to protect its users and their data

14
00:00:36,000 --> 00:00:40,160
while they might not be visible for most

15
00:00:37,840 --> 00:00:41,120
users these goals had a direct influence

16
00:00:40,160 --> 00:00:43,279
on the software

17
00:00:41,120 --> 00:00:44,399
architecture for instance the risk

18
00:00:43,280 --> 00:00:46,399
calculation

19
00:00:44,399 --> 00:00:48,559
here today to talk about some of these

20
00:00:46,399 --> 00:00:50,399
backend elements is one of the solution

21
00:00:48,559 --> 00:00:53,440
architects of the corona one app

22
00:00:50,399 --> 00:00:55,600
thomas klingbae and i'm probably not the

23
00:00:53,440 --> 00:00:58,399
only one here at ic3

24
00:00:55,600 --> 00:01:00,239
rc3 who's an active user and i'm pretty

25
00:00:58,399 --> 00:01:03,039
curious to hear more about what's

26
00:01:00,239 --> 00:01:04,239
going on behind the scenes of the app so

27
00:01:03,039 --> 00:01:06,880
without further ado

28
00:01:04,239 --> 00:01:08,320
let's give a warm virtual welcome to

29
00:01:06,880 --> 00:01:13,839
thomas clingbai

30
00:01:08,320 --> 00:01:13,839
thomas this stream is yours

31
00:01:15,119 --> 00:01:19,680
hello everybody i'm thomas klingball and

32
00:01:18,400 --> 00:01:21,680
today in the session

33
00:01:19,680 --> 00:01:22,799
i would like to talk about the german

34
00:01:21,680 --> 00:01:24,400
corona one app

35
00:01:22,799 --> 00:01:26,320
and give you a little tour behind the

36
00:01:24,400 --> 00:01:29,439
scenes of the app development

37
00:01:26,320 --> 00:01:31,839
the underlying technologies and which

38
00:01:29,439 --> 00:01:35,039
things are invisible to the end user but

39
00:01:31,840 --> 00:01:36,560
still very important for the app itself

40
00:01:35,040 --> 00:01:38,720
first i would like to give you a short

41
00:01:36,560 --> 00:01:40,720
introduction to the app the underlying

42
00:01:38,720 --> 00:01:42,240
architecture and to use technologies for

43
00:01:40,720 --> 00:01:43,360
example the exposure notification

44
00:01:42,240 --> 00:01:44,960
framework

45
00:01:43,360 --> 00:01:46,479
then i would like to have a look on the

46
00:01:44,960 --> 00:01:49,679
communication between

47
00:01:46,479 --> 00:01:51,679
the app and the back end and

48
00:01:49,680 --> 00:01:53,200
looking at which possible privacy

49
00:01:51,680 --> 00:01:55,680
threads could be found there

50
00:01:53,200 --> 00:01:56,880
and how we mitigated them of course and

51
00:01:55,680 --> 00:01:58,320
then i would like to

52
00:01:56,880 --> 00:02:00,719
dive a little bit into the risk

53
00:01:58,320 --> 00:02:03,039
calculation of the app to show you

54
00:02:00,719 --> 00:02:04,960
what it actually means if there's a red

55
00:02:03,040 --> 00:02:06,479
or a green screen visible to the end

56
00:02:04,960 --> 00:02:08,799
user

57
00:02:06,479 --> 00:02:10,239
first of all we can ask ourselves the

58
00:02:08,800 --> 00:02:14,160
question

59
00:02:10,239 --> 00:02:16,640
what is the corona warn app actually so

60
00:02:14,160 --> 00:02:17,359
here it is this is the german corona

61
00:02:16,640 --> 00:02:20,480
warnip

62
00:02:17,360 --> 00:02:22,640
you can download it from the app stores

63
00:02:20,480 --> 00:02:23,840
and once you have onboarded onto the app

64
00:02:22,640 --> 00:02:25,599
you will see the following

65
00:02:23,840 --> 00:02:27,520
up here it shows you that the exposure

66
00:02:25,599 --> 00:02:30,160
logging is active which means

67
00:02:27,520 --> 00:02:31,440
this is the currently active app then

68
00:02:30,160 --> 00:02:34,079
you have this green card

69
00:02:31,440 --> 00:02:36,079
green means it's lowest because there

70
00:02:34,080 --> 00:02:38,480
have been no exposures so far

71
00:02:36,080 --> 00:02:39,519
the logging has to be permanently active

72
00:02:38,480 --> 00:02:42,319
and it has just

73
00:02:39,519 --> 00:02:44,080
updated this afternoon so everything is

74
00:02:42,319 --> 00:02:46,480
all right

75
00:02:44,080 --> 00:02:47,680
let's say you've just been tested at a

76
00:02:46,480 --> 00:02:50,399
doctor's

77
00:02:47,680 --> 00:02:51,760
then you could click this button here

78
00:02:50,400 --> 00:02:53,360
and you get to this screen

79
00:02:51,760 --> 00:02:55,599
where you're able to retrieve your test

80
00:02:53,360 --> 00:02:58,319
result digitally

81
00:02:55,599 --> 00:02:59,760
to do this you can scan a qr code which

82
00:02:58,319 --> 00:03:00,640
is on the form you receive from your

83
00:02:59,760 --> 00:03:04,079
doctor

84
00:03:00,640 --> 00:03:07,599
and then you will get an update as soon

85
00:03:04,080 --> 00:03:07,599
as the test result is available

86
00:03:07,840 --> 00:03:10,879
of course you can also get more

87
00:03:09,120 --> 00:03:11,760
information about the active exposure

88
00:03:10,879 --> 00:03:13,840
logging

89
00:03:11,760 --> 00:03:15,200
when you click the button up here then

90
00:03:13,840 --> 00:03:16,800
you get to this screen

91
00:03:15,200 --> 00:03:18,799
and there you can learn more about the

92
00:03:16,800 --> 00:03:20,800
transnational exposure logging

93
00:03:18,800 --> 00:03:23,519
because the german corona one app is not

94
00:03:20,800 --> 00:03:24,000
alone it is connected to other corona

95
00:03:23,519 --> 00:03:26,720
apps

96
00:03:24,000 --> 00:03:28,799
of other countries within europe so

97
00:03:26,720 --> 00:03:31,040
users from other countries

98
00:03:28,799 --> 00:03:35,280
can meet and they will be informed

99
00:03:31,040 --> 00:03:38,319
mutually about possible encounters

100
00:03:35,280 --> 00:03:41,440
so just to be sure i would like to

101
00:03:38,319 --> 00:03:43,679
quickly dive into the terminology of the

102
00:03:41,440 --> 00:03:45,280
exposure notification framework

103
00:03:43,680 --> 00:03:48,239
so you know what i'm talking about

104
00:03:45,280 --> 00:03:50,879
during this session

105
00:03:48,239 --> 00:03:51,440
it all starts with a temporary exposure

106
00:03:50,879 --> 00:03:53,599
key

107
00:03:51,440 --> 00:03:56,560
which is generated on the phone and

108
00:03:53,599 --> 00:03:59,679
which is welded for 24 hours

109
00:03:56,560 --> 00:04:00,000
from this temporary exposure key several

110
00:03:59,680 --> 00:04:02,080
things

111
00:04:00,000 --> 00:04:04,720
are derived first for example there's

112
00:04:02,080 --> 00:04:06,879
the rolling proximity identifier key

113
00:04:04,720 --> 00:04:08,239
and the associated encrypted metadata

114
00:04:06,879 --> 00:04:10,239
key

115
00:04:08,239 --> 00:04:11,519
this part down here we can skip for the

116
00:04:10,239 --> 00:04:12,959
moment being

117
00:04:11,519 --> 00:04:15,280
and look at the generation of the

118
00:04:12,959 --> 00:04:17,759
rolling proximity identifiers

119
00:04:15,280 --> 00:04:19,680
those rolling proximity identifiers are

120
00:04:17,759 --> 00:04:21,519
only welded for 10 minutes each

121
00:04:19,680 --> 00:04:24,160
because they are when they are regularly

122
00:04:21,519 --> 00:04:25,840
exchanged once the bluetooth mac address

123
00:04:24,160 --> 00:04:28,479
change takes place

124
00:04:25,840 --> 00:04:30,239
so the rolling proximity identifier is

125
00:04:28,479 --> 00:04:32,159
basically the bluetooth payload

126
00:04:30,240 --> 00:04:33,919
your phone uses when the exposure

127
00:04:32,160 --> 00:04:36,720
notification framework is active

128
00:04:33,919 --> 00:04:37,758
and broadcasting when i say broadcasting

129
00:04:36,720 --> 00:04:40,880
i mean

130
00:04:37,759 --> 00:04:43,600
every 250 milliseconds your phone

131
00:04:40,880 --> 00:04:44,639
sends out its own rolling proximity

132
00:04:43,600 --> 00:04:47,120
identifiers

133
00:04:44,639 --> 00:04:48,479
so other phones around which are

134
00:04:47,120 --> 00:04:51,600
scanning for signal

135
00:04:48,479 --> 00:04:54,800
in the air basically can catch them

136
00:04:51,600 --> 00:04:57,840
and store them locally so look

137
00:04:54,800 --> 00:04:59,440
let's look at the receiving side this is

138
00:04:57,840 --> 00:05:01,440
what we see down here

139
00:04:59,440 --> 00:05:02,880
and now as i already mentioned we've got

140
00:05:01,440 --> 00:05:03,919
those bluetooth low energy beacon

141
00:05:02,880 --> 00:05:05,759
mechanics

142
00:05:03,919 --> 00:05:07,919
sending out those rolling proximity

143
00:05:05,759 --> 00:05:08,560
identifiers and they are received down

144
00:05:07,919 --> 00:05:11,758
here

145
00:05:08,560 --> 00:05:13,919
this is all a very simplified schematic

146
00:05:11,759 --> 00:05:15,600
just to give you an impression of what's

147
00:05:13,919 --> 00:05:17,758
going on there

148
00:05:15,600 --> 00:05:19,520
so now we've got those rolling proximity

149
00:05:17,759 --> 00:05:20,400
identifiers stored on the receiving

150
00:05:19,520 --> 00:05:23,599
phone

151
00:05:20,400 --> 00:05:24,000
and now somehow this other phone needs

152
00:05:23,600 --> 00:05:26,160
to find

153
00:05:24,000 --> 00:05:28,000
out that there has been a match this

154
00:05:26,160 --> 00:05:29,919
happens by

155
00:05:28,000 --> 00:05:32,320
transforming those temporary exposure

156
00:05:29,919 --> 00:05:34,719
keys into diagnosis keys

157
00:05:32,320 --> 00:05:36,320
which is just renaming but as soon as

158
00:05:34,720 --> 00:05:37,759
someone has tested positive and a

159
00:05:36,320 --> 00:05:40,000
temporary exposure key

160
00:05:37,759 --> 00:05:41,680
is linked to a positive diagnosis it is

161
00:05:40,000 --> 00:05:44,479
called diagnosis key

162
00:05:41,680 --> 00:05:46,080
and they are uploaded to a server and

163
00:05:44,479 --> 00:05:49,120
i'm

164
00:05:46,080 --> 00:05:51,198
drastically simplifying here so they

165
00:05:49,120 --> 00:05:53,680
receive the other phone

166
00:05:51,199 --> 00:05:56,240
here they are downloaded all those

167
00:05:53,680 --> 00:05:59,360
diagnosis keys are extracted again

168
00:05:56,240 --> 00:06:00,479
and as you can see the same functions

169
00:05:59,360 --> 00:06:03,919
are applied

170
00:06:00,479 --> 00:06:06,080
again hkdf then aes

171
00:06:03,919 --> 00:06:07,359
and we get a lot of rolling proximity

172
00:06:06,080 --> 00:06:10,400
identifiers

173
00:06:07,360 --> 00:06:12,400
for matching here down here and there

174
00:06:10,400 --> 00:06:14,159
those are the ones we have stored and

175
00:06:12,400 --> 00:06:16,400
now we can match them and find out which

176
00:06:14,160 --> 00:06:19,759
of those rolling proximity identifiers

177
00:06:16,400 --> 00:06:22,400
we have seen so far and of course

178
00:06:19,759 --> 00:06:23,280
the receiving phone can also make sure

179
00:06:22,400 --> 00:06:25,679
that

180
00:06:23,280 --> 00:06:28,080
the rolling proximity identifiers

181
00:06:25,680 --> 00:06:30,479
belonging to a single diagnosis key

182
00:06:28,080 --> 00:06:31,359
which means they belong to one single

183
00:06:30,479 --> 00:06:33,359
other phone

184
00:06:31,360 --> 00:06:34,800
are connected to each other so we can

185
00:06:33,360 --> 00:06:37,120
also track exposures

186
00:06:34,800 --> 00:06:38,720
which have lasted longer than 10 minutes

187
00:06:37,120 --> 00:06:42,080
so for example if you are having

188
00:06:38,720 --> 00:06:44,319
a meeting of 90 minutes this would allow

189
00:06:42,080 --> 00:06:46,479
the exposure notification framework

190
00:06:44,319 --> 00:06:48,160
to get together those up to nine rolling

191
00:06:46,479 --> 00:06:49,840
proximity identifiers

192
00:06:48,160 --> 00:06:52,080
and transform them into a single

193
00:06:49,840 --> 00:06:54,479
encounter which you then

194
00:06:52,080 --> 00:06:55,758
get enriched with those associated

195
00:06:54,479 --> 00:06:57,758
encrypted metadata

196
00:06:55,759 --> 00:06:59,520
which is basically just the transmit

197
00:06:57,759 --> 00:07:02,639
power

198
00:06:59,520 --> 00:07:04,560
as a summary down here

199
00:07:02,639 --> 00:07:05,680
so now that we know which data are being

200
00:07:04,560 --> 00:07:08,080
transferred

201
00:07:05,680 --> 00:07:08,800
from phone to phone we can have a look

202
00:07:08,080 --> 00:07:12,240
at the

203
00:07:08,800 --> 00:07:14,960
actual architecture of the app itself

204
00:07:12,240 --> 00:07:15,280
this grey box here is the mobile phone

205
00:07:14,960 --> 00:07:18,479
and

206
00:07:15,280 --> 00:07:21,758
down here is the german corona one app

207
00:07:18,479 --> 00:07:23,758
it's a dashed line which means there's

208
00:07:21,759 --> 00:07:25,440
more documentation available online so i

209
00:07:23,759 --> 00:07:27,919
can only invite you to go to the

210
00:07:25,440 --> 00:07:28,560
github repository have a look at our

211
00:07:27,919 --> 00:07:31,198
code

212
00:07:28,560 --> 00:07:33,280
and of course our documentation so there

213
00:07:31,199 --> 00:07:35,840
are more diagrams available

214
00:07:33,280 --> 00:07:38,000
and as you can see the app itself does

215
00:07:35,840 --> 00:07:40,479
not store a lot of data so those

216
00:07:38,000 --> 00:07:42,400
boxes here are storages so it only

217
00:07:40,479 --> 00:07:43,199
stores something called a registration

218
00:07:42,400 --> 00:07:45,679
token

219
00:07:43,199 --> 00:07:47,440
and the contact journal entries for our

220
00:07:45,680 --> 00:07:50,560
most recent version

221
00:07:47,440 --> 00:07:52,240
which means that's all the app stores

222
00:07:50,560 --> 00:07:54,160
itself

223
00:07:52,240 --> 00:07:56,160
what you can see here is that it's

224
00:07:54,160 --> 00:07:58,800
connected to the operating system

225
00:07:56,160 --> 00:08:00,400
api sdk for the exposure notifications

226
00:07:58,800 --> 00:08:02,240
so that's the exposure notification

227
00:08:00,400 --> 00:08:04,318
framework to which we interface

228
00:08:02,240 --> 00:08:05,919
which takes care of all the key

229
00:08:04,319 --> 00:08:08,800
connecting broadcasting

230
00:08:05,919 --> 00:08:10,240
and key matching as well then there's a

231
00:08:08,800 --> 00:08:13,199
protocol buffer library

232
00:08:10,240 --> 00:08:14,400
which we need for the data transfer and

233
00:08:13,199 --> 00:08:17,599
we use the

234
00:08:14,400 --> 00:08:20,638
operating system cryptography libraries

235
00:08:17,599 --> 00:08:24,080
or basically the sdk so we don't need to

236
00:08:20,639 --> 00:08:27,280
include external libraries for that

237
00:08:24,080 --> 00:08:30,719
what you can see here is the os

238
00:08:27,280 --> 00:08:33,279
api sdk for push messages but

239
00:08:30,720 --> 00:08:34,399
this is not remote push messaging but

240
00:08:33,279 --> 00:08:36,399
only locally

241
00:08:34,399 --> 00:08:37,519
so the app triggers loaded local

242
00:08:36,399 --> 00:08:40,240
notifications

243
00:08:37,519 --> 00:08:42,320
and to the user it appears as if the

244
00:08:40,240 --> 00:08:44,720
notifications the push message

245
00:08:42,320 --> 00:08:46,000
came in remotely but actually it only

246
00:08:44,720 --> 00:08:48,959
uses remote

247
00:08:46,000 --> 00:08:48,959
local messages

248
00:08:49,440 --> 00:08:54,320
but what would the app be without the

249
00:08:51,680 --> 00:08:57,199
actual backend infrastructure

250
00:08:54,320 --> 00:08:58,160
so you can see here that's the corona

251
00:08:57,200 --> 00:09:01,120
one app server

252
00:08:58,160 --> 00:09:02,640
that's the actual backhand for managing

253
00:09:01,120 --> 00:09:05,440
all the keys

254
00:09:02,640 --> 00:09:06,880
and you see the upload path here it's

255
00:09:05,440 --> 00:09:08,480
aggregated there

256
00:09:06,880 --> 00:09:10,720
then provided through the content

257
00:09:08,480 --> 00:09:12,000
delivery network and downloaded by the

258
00:09:10,720 --> 00:09:13,600
app here

259
00:09:12,000 --> 00:09:15,040
but we've got more we've got the

260
00:09:13,600 --> 00:09:17,839
verification server

261
00:09:15,040 --> 00:09:19,519
which has the job of verifying a

262
00:09:17,839 --> 00:09:21,680
positive test result

263
00:09:19,519 --> 00:09:23,600
and how does it do that there's

264
00:09:21,680 --> 00:09:27,359
basically two ways

265
00:09:23,600 --> 00:09:28,880
um it can even get the information that

266
00:09:27,360 --> 00:09:31,440
a positive test

267
00:09:28,880 --> 00:09:32,160
is true through a so-called tale ton

268
00:09:31,440 --> 00:09:34,320
which is the

269
00:09:32,160 --> 00:09:36,800
most basic way because people call up

270
00:09:34,320 --> 00:09:40,240
the hotline get one of those taylor time

271
00:09:36,800 --> 00:09:43,279
entered into the app and then they are

272
00:09:40,240 --> 00:09:46,720
able to upload the diagnosis keys

273
00:09:43,279 --> 00:09:48,640
or if people use the fully digital way

274
00:09:46,720 --> 00:09:50,160
they get their test result through the

275
00:09:48,640 --> 00:09:52,080
app and that's why we have the test

276
00:09:50,160 --> 00:09:53,920
result server up here

277
00:09:52,080 --> 00:09:55,920
which can be queried by the verification

278
00:09:53,920 --> 00:09:56,640
server so users can get their test

279
00:09:55,920 --> 00:10:00,160
result

280
00:09:56,640 --> 00:10:00,160
through the infrastructure

281
00:10:00,240 --> 00:10:04,240
but that's not all because as i have

282
00:10:03,040 --> 00:10:06,160
promised earlier

283
00:10:04,240 --> 00:10:07,360
we've also got the connection to other

284
00:10:06,160 --> 00:10:09,360
european countries

285
00:10:07,360 --> 00:10:10,560
so down here is the european federation

286
00:10:09,360 --> 00:10:13,519
gateway service

287
00:10:10,560 --> 00:10:16,399
which gives us the possibility to a

288
00:10:13,519 --> 00:10:18,240
upload our own national keys to this

289
00:10:16,399 --> 00:10:19,680
european federation gateway service so

290
00:10:18,240 --> 00:10:21,680
other countries can download them and

291
00:10:19,680 --> 00:10:24,560
distribute them to their users

292
00:10:21,680 --> 00:10:25,680
but we can also request foreign keys and

293
00:10:24,560 --> 00:10:28,399
gets even better

294
00:10:25,680 --> 00:10:29,760
we can be informed if new foreign keys

295
00:10:28,399 --> 00:10:32,000
are available for download

296
00:10:29,760 --> 00:10:33,519
through a callback mechanism which is

297
00:10:32,000 --> 00:10:36,320
just here

298
00:10:33,519 --> 00:10:36,320
on the right side

299
00:10:37,360 --> 00:10:41,839
so once the app is communicating with

300
00:10:40,480 --> 00:10:44,880
the backend

301
00:10:41,839 --> 00:10:47,040
what would actually happen if someone is

302
00:10:44,880 --> 00:10:50,880
listening

303
00:10:47,040 --> 00:10:55,519
so we've got our data flow here

304
00:10:50,880 --> 00:10:59,040
and let's have a look at it

305
00:10:55,519 --> 00:11:00,800
so in step one we are actually scanning

306
00:10:59,040 --> 00:11:03,120
the qr code

307
00:11:00,800 --> 00:11:05,120
with the camera of the phone and

308
00:11:03,120 --> 00:11:06,560
extracted from the qr code would be a

309
00:11:05,120 --> 00:11:08,560
guid

310
00:11:06,560 --> 00:11:11,359
which is then fed into the corona one

311
00:11:08,560 --> 00:11:13,359
app you can see here it is never stored

312
00:11:11,360 --> 00:11:15,680
within the app that's very important

313
00:11:13,360 --> 00:11:17,440
because we wanted to make sure that as

314
00:11:15,680 --> 00:11:18,800
few information as possible needs to be

315
00:11:17,440 --> 00:11:20,720
stored within the app

316
00:11:18,800 --> 00:11:22,240
and also that it's not possible to

317
00:11:20,720 --> 00:11:22,959
connect information from different

318
00:11:22,240 --> 00:11:26,560
sources

319
00:11:22,959 --> 00:11:31,040
for example to trace back diagnosis key

320
00:11:26,560 --> 00:11:33,359
to a guid uh to allow personification

321
00:11:31,040 --> 00:11:34,480
it was very important that this step is

322
00:11:33,360 --> 00:11:37,519
not possible

323
00:11:34,480 --> 00:11:40,800
so um we had to take care

324
00:11:37,519 --> 00:11:42,880
that no data is stored together and data

325
00:11:40,800 --> 00:11:46,319
cannot be connected again

326
00:11:42,880 --> 00:11:48,640
so in step one we get this guid

327
00:11:46,320 --> 00:11:50,880
and this is then hashed on the phone

328
00:11:48,640 --> 00:11:52,560
being sent to the verification server

329
00:11:50,880 --> 00:11:54,720
which in step three generates a

330
00:11:52,560 --> 00:11:57,359
so-called registration token

331
00:11:54,720 --> 00:11:58,480
and stores it together so it stores the

332
00:11:57,360 --> 00:12:00,880
hash gid

333
00:11:58,480 --> 00:12:03,519
and the hashtag registration token

334
00:12:00,880 --> 00:12:04,720
making sure that a guid can only be used

335
00:12:03,519 --> 00:12:07,200
once

336
00:12:04,720 --> 00:12:08,160
and returns the unhatch registration

337
00:12:07,200 --> 00:12:11,440
token

338
00:12:08,160 --> 00:12:14,480
to the app

339
00:12:11,440 --> 00:12:16,480
here now the app

340
00:12:14,480 --> 00:12:17,839
can store the registration token and use

341
00:12:16,480 --> 00:12:20,560
it in step 5

342
00:12:17,839 --> 00:12:22,240
for polling for test results but the

343
00:12:20,560 --> 00:12:24,000
test results are not available directly

344
00:12:22,240 --> 00:12:25,760
on the verification server because

345
00:12:24,000 --> 00:12:27,440
we do not start here but the

346
00:12:25,760 --> 00:12:30,000
verification server

347
00:12:27,440 --> 00:12:32,399
connects to the test result server by

348
00:12:30,000 --> 00:12:35,120
using the hash gid which can get from

349
00:12:32,399 --> 00:12:38,320
the hash registration token here

350
00:12:35,120 --> 00:12:40,079
and then it can ask the test result

351
00:12:38,320 --> 00:12:41,360
server and the test result server might

352
00:12:40,079 --> 00:12:44,719
have a data set

353
00:12:41,360 --> 00:12:48,800
connecting the hash gid to a test result

354
00:12:44,720 --> 00:12:51,360
and this check needs to be done

355
00:12:48,800 --> 00:12:52,079
because the test results server might

356
00:12:51,360 --> 00:12:55,040
also have no

357
00:12:52,079 --> 00:12:56,560
information for this guid and this only

358
00:12:55,040 --> 00:12:57,760
means that no test result has been

359
00:12:56,560 --> 00:13:00,800
received yet

360
00:12:57,760 --> 00:13:03,600
this is what happens here in step a the

361
00:13:00,800 --> 00:13:05,519
lab information system the lis can

362
00:13:03,600 --> 00:13:08,800
supply the test result server

363
00:13:05,519 --> 00:13:10,639
with a package of hash gid and the test

364
00:13:08,800 --> 00:13:12,160
result so it's stored there

365
00:13:10,639 --> 00:13:14,160
and if it's available already on a

366
00:13:12,160 --> 00:13:16,880
testosterone server it is returned to

367
00:13:14,160 --> 00:13:20,639
the verification server here in step 7

368
00:13:16,880 --> 00:13:23,920
and accordingly in step 8 to do

369
00:13:20,639 --> 00:13:26,320
app you might have noted

370
00:13:23,920 --> 00:13:27,920
the test result is also neither cached

371
00:13:26,320 --> 00:13:28,720
nor stored here on the verification

372
00:13:27,920 --> 00:13:30,800
server

373
00:13:28,720 --> 00:13:32,399
which means if the user then decides to

374
00:13:30,800 --> 00:13:35,920
upload the keys

375
00:13:32,399 --> 00:13:37,360
a ton is required to pass on to the

376
00:13:35,920 --> 00:13:39,599
back end for verification of the

377
00:13:37,360 --> 00:13:41,760
positive test

378
00:13:39,600 --> 00:13:42,720
an equal flow needs to be followed so in

379
00:13:41,760 --> 00:13:46,000
step 9

380
00:13:42,720 --> 00:13:48,079
again the

381
00:13:46,000 --> 00:13:50,240
registration token is passed to the ton

382
00:13:48,079 --> 00:13:51,920
endpoint the verification server once

383
00:13:50,240 --> 00:13:53,440
more needs to check with the test result

384
00:13:51,920 --> 00:13:54,560
server that it's actually a positive

385
00:13:53,440 --> 00:13:56,959
test result

386
00:13:54,560 --> 00:13:58,638
gets back here in step 11. the time is

387
00:13:56,959 --> 00:14:00,719
generated in step 12.

388
00:13:58,639 --> 00:14:03,519
you can see the time is not stored in

389
00:14:00,720 --> 00:14:06,639
plain text but it's stored as a hash

390
00:14:03,519 --> 00:14:09,519
but the plain text is this return

391
00:14:06,639 --> 00:14:11,360
to the app which can then bundle it with

392
00:14:09,519 --> 00:14:13,279
the diagnosis keys extracted from the

393
00:14:11,360 --> 00:14:15,279
exposure notification framework

394
00:14:13,279 --> 00:14:17,040
and upload it to the corona one app

395
00:14:15,279 --> 00:14:20,320
server or more specifically

396
00:14:17,040 --> 00:14:22,480
the submission service but

397
00:14:20,320 --> 00:14:23,600
this also needs to verify that it's

398
00:14:22,480 --> 00:14:25,760
authentic

399
00:14:23,600 --> 00:14:27,519
so it takes it in step 15 to the

400
00:14:25,760 --> 00:14:29,199
verification server on the verify

401
00:14:27,519 --> 00:14:32,560
endpoint

402
00:14:29,199 --> 00:14:35,359
where the time is validated and

403
00:14:32,560 --> 00:14:36,000
validation means it is marked as used

404
00:14:35,360 --> 00:14:38,480
already

405
00:14:36,000 --> 00:14:40,639
so the same time cannot be used twice

406
00:14:38,480 --> 00:14:43,199
and then the response is given to the

407
00:14:40,639 --> 00:14:44,079
back end here which can then if it's

408
00:14:43,199 --> 00:14:47,599
positive so

409
00:14:44,079 --> 00:14:50,319
uh which means if it's an authentic time

410
00:14:47,600 --> 00:14:51,760
can store the diagnosis keys in its own

411
00:14:50,320 --> 00:14:53,839
storage

412
00:14:51,760 --> 00:14:55,040
and as you can see only the diagnosis

413
00:14:53,839 --> 00:14:57,680
keys are stored here

414
00:14:55,040 --> 00:14:58,399
nothing else so there's no correlation

415
00:14:57,680 --> 00:15:01,040
possible

416
00:14:58,399 --> 00:15:02,639
between diagnosis keys registration

417
00:15:01,040 --> 00:15:06,160
token or even guid

418
00:15:02,639 --> 00:15:06,160
because it's completely separate

419
00:15:06,639 --> 00:15:11,199
but still what could be found out about

420
00:15:09,920 --> 00:15:13,360
users

421
00:15:11,199 --> 00:15:15,519
if someone were to observe the network

422
00:15:13,360 --> 00:15:18,160
traffic going on there

423
00:15:15,519 --> 00:15:20,079
an important assumption in the beginning

424
00:15:18,160 --> 00:15:22,079
the content of all the messages

425
00:15:20,079 --> 00:15:24,239
is secure because only secure

426
00:15:22,079 --> 00:15:27,279
connections are being used

427
00:15:24,240 --> 00:15:30,560
and only the size of the transfer is

428
00:15:27,279 --> 00:15:33,680
observable so we can from

429
00:15:30,560 --> 00:15:36,319
a network sniffing perspective observe

430
00:15:33,680 --> 00:15:38,079
that a connection is created we can

431
00:15:36,320 --> 00:15:39,680
observe how many bytes are being

432
00:15:38,079 --> 00:15:41,839
transferred back and forth

433
00:15:39,680 --> 00:15:44,319
but we cannot learn about the content of

434
00:15:41,839 --> 00:15:47,440
the message

435
00:15:44,320 --> 00:15:48,800
so here we are we've got the first

436
00:15:47,440 --> 00:15:51,040
communication between app

437
00:15:48,800 --> 00:15:52,959
and server in step two because we can

438
00:15:51,040 --> 00:15:55,120
see okay

439
00:15:52,959 --> 00:15:57,040
if someone is requesting something from

440
00:15:55,120 --> 00:16:00,000
the registration token endpoint

441
00:15:57,040 --> 00:16:02,959
this person has been tested maybe on

442
00:16:00,000 --> 00:16:02,959
that specific day

443
00:16:03,199 --> 00:16:09,279
then there's next communication going on

444
00:16:06,399 --> 00:16:10,639
in step 5 because this means that the

445
00:16:09,279 --> 00:16:12,320
person has been tested

446
00:16:10,639 --> 00:16:13,680
i mean we might know that from step 2

447
00:16:12,320 --> 00:16:16,079
already

448
00:16:13,680 --> 00:16:16,959
but this person has still not received a

449
00:16:16,079 --> 00:16:18,479
test result

450
00:16:16,959 --> 00:16:20,399
so it might still be positive or

451
00:16:18,480 --> 00:16:23,519
negative

452
00:16:20,399 --> 00:16:24,000
if we can observe that the request to

453
00:16:23,519 --> 00:16:28,160
the ton

454
00:16:24,000 --> 00:16:30,079
endpoint takes place in step nine

455
00:16:28,160 --> 00:16:31,839
then we know the person has been tested

456
00:16:30,079 --> 00:16:35,120
positive

457
00:16:31,839 --> 00:16:36,800
so okay we're using https so we cannot

458
00:16:35,120 --> 00:16:38,000
actually learn which endpoint is being

459
00:16:36,800 --> 00:16:40,800
queried

460
00:16:38,000 --> 00:16:42,480
but there might be specific sizes to

461
00:16:40,800 --> 00:16:45,599
those individual requests

462
00:16:42,480 --> 00:16:48,839
which might allow us to learn

463
00:16:45,600 --> 00:16:50,720
about the direction the request is going

464
00:16:48,839 --> 00:16:54,000
into

465
00:16:50,720 --> 00:16:56,399
just as a thought okay and then

466
00:16:54,000 --> 00:16:58,160
of course we've got also the submission

467
00:16:56,399 --> 00:17:00,240
service in step 14

468
00:16:58,160 --> 00:17:01,279
where users upload their diagnosis keys

469
00:17:00,240 --> 00:17:04,319
and their time

470
00:17:01,279 --> 00:17:07,439
and this is really really

471
00:17:04,319 --> 00:17:07,918
without any possibility for discussion

472
00:17:07,439 --> 00:17:10,799
because

473
00:17:07,919 --> 00:17:11,679
if a app contacts the corner one app

474
00:17:10,799 --> 00:17:14,959
server

475
00:17:11,679 --> 00:17:17,839
and builds up a connection there

476
00:17:14,959 --> 00:17:18,959
this must mean that the user has been

477
00:17:17,839 --> 00:17:22,000
tested positive

478
00:17:18,959 --> 00:17:23,039
and is submitting diagnosis keys apart

479
00:17:22,000 --> 00:17:25,359
from that

480
00:17:23,039 --> 00:17:27,919
once the user submits diagnosis keys and

481
00:17:25,359 --> 00:17:31,039
talks the app talks to the

482
00:17:27,919 --> 00:17:35,120
corona one at backend it could

483
00:17:31,039 --> 00:17:39,039
also be possible to relate those keys

484
00:17:35,120 --> 00:17:42,159
to an origin ip address for example

485
00:17:39,039 --> 00:17:44,400
or could there be a way around that so

486
00:17:42,160 --> 00:17:45,600
what we need to do in this scenario and

487
00:17:44,400 --> 00:17:48,080
what we did

488
00:17:45,600 --> 00:17:49,678
is to establish plausible deniability

489
00:17:48,080 --> 00:17:52,720
which basically means

490
00:17:49,679 --> 00:17:55,440
we generate so much noise with the

491
00:17:52,720 --> 00:17:57,760
connections we build up that it's not

492
00:17:55,440 --> 00:18:00,240
possible to identify individuals

493
00:17:57,760 --> 00:18:02,080
which actually use those connections to

494
00:18:00,240 --> 00:18:05,200
query their test results

495
00:18:02,080 --> 00:18:07,678
to receive the test result

496
00:18:05,200 --> 00:18:08,960
if it's positive to retrieve a ton or to

497
00:18:07,679 --> 00:18:13,039
upload their keys

498
00:18:08,960 --> 00:18:16,080
so generating noise is the key

499
00:18:13,039 --> 00:18:18,480
so what the app actually does is

500
00:18:16,080 --> 00:18:20,559
simulate the backend traffic by sending

501
00:18:18,480 --> 00:18:22,880
those fake or dummy requests

502
00:18:20,559 --> 00:18:24,080
according to a so-called playbook so

503
00:18:22,880 --> 00:18:26,720
we've got a

504
00:18:24,080 --> 00:18:27,199
we call it playbook from which the app

505
00:18:26,720 --> 00:18:29,600
takes

506
00:18:27,200 --> 00:18:31,280
which requests to do how long to wait

507
00:18:29,600 --> 00:18:32,320
how often to repeat those requests and

508
00:18:31,280 --> 00:18:35,039
so on

509
00:18:32,320 --> 00:18:35,678
and it's also interesting that those

510
00:18:35,039 --> 00:18:37,280
requests

511
00:18:35,679 --> 00:18:39,600
might either be triggered by a real

512
00:18:37,280 --> 00:18:42,639
event or they might be triggered by

513
00:18:39,600 --> 00:18:43,520
just some random trigger so scanning a

514
00:18:42,640 --> 00:18:46,000
qr code

515
00:18:43,520 --> 00:18:46,879
or entering a taylor ton also triggers

516
00:18:46,000 --> 00:18:48,240
this flow

517
00:18:46,880 --> 00:18:50,080
a little bit different but it still

518
00:18:48,240 --> 00:18:51,840
triggers it because if you then

519
00:18:50,080 --> 00:18:54,080
get your registration token which with

520
00:18:51,840 --> 00:18:56,720
your test results

521
00:18:54,080 --> 00:18:58,320
and the retrieval of your test results

522
00:18:56,720 --> 00:19:00,880
stops at some point

523
00:18:58,320 --> 00:19:03,280
this must mean okay there has been a

524
00:19:00,880 --> 00:19:04,880
test result negative or positive

525
00:19:03,280 --> 00:19:06,720
if it's then observable that you

526
00:19:04,880 --> 00:19:08,960
communicate to the submission service

527
00:19:06,720 --> 00:19:09,760
this would mean that it has been

528
00:19:08,960 --> 00:19:12,960
positive

529
00:19:09,760 --> 00:19:16,480
so what the app actually does is even

530
00:19:12,960 --> 00:19:17,840
even if it is negative it continues

531
00:19:16,480 --> 00:19:19,840
sending out dummy requests to the

532
00:19:17,840 --> 00:19:23,439
verification server

533
00:19:19,840 --> 00:19:26,080
and it might also so that's all based on

534
00:19:23,440 --> 00:19:27,520
random decisions within the app it might

535
00:19:26,080 --> 00:19:30,559
also

536
00:19:27,520 --> 00:19:32,559
then retrieve a fake time

537
00:19:30,559 --> 00:19:33,678
and it might do a fake upload of

538
00:19:32,559 --> 00:19:35,120
diagnosis keys

539
00:19:33,679 --> 00:19:37,039
so in the end you're not able to

540
00:19:35,120 --> 00:19:38,479
distinguish between nap actually

541
00:19:37,039 --> 00:19:41,840
uploading real data

542
00:19:38,480 --> 00:19:45,120
or an app just doing playbook stuff

543
00:19:41,840 --> 00:19:48,159
and creating noise so users

544
00:19:45,120 --> 00:19:51,678
really uploading their diagnosis keys

545
00:19:48,160 --> 00:19:54,160
cannot be picked out from all the noise

546
00:19:51,679 --> 00:19:55,120
and to make sure that our back end is

547
00:19:54,160 --> 00:19:57,039
not just

548
00:19:55,120 --> 00:19:59,439
swamped with all those fake and dummy

549
00:19:57,039 --> 00:20:01,039
requests there's a special header field

550
00:19:59,440 --> 00:20:04,240
which informs the back end

551
00:20:01,039 --> 00:20:04,879
to actually ignore those requests but if

552
00:20:04,240 --> 00:20:08,240
you would just

553
00:20:04,880 --> 00:20:10,080
ignore them and not send a response it

554
00:20:08,240 --> 00:20:11,919
could be implemented on the client but

555
00:20:10,080 --> 00:20:13,600
then it would be observable again that

556
00:20:11,919 --> 00:20:17,440
it's just a fake request

557
00:20:13,600 --> 00:20:19,120
so what we do is we let the backend skip

558
00:20:17,440 --> 00:20:20,880
all the interaction with the underlying

559
00:20:19,120 --> 00:20:24,080
database infrastructure

560
00:20:20,880 --> 00:20:26,640
do not modify any data and so on but

561
00:20:24,080 --> 00:20:28,080
there will be a delay in the response

562
00:20:26,640 --> 00:20:30,080
and the response will look

563
00:20:28,080 --> 00:20:32,799
exactly the same as if it was the

564
00:20:30,080 --> 00:20:36,320
response to a real request

565
00:20:32,799 --> 00:20:38,559
also on the data both directions

566
00:20:36,320 --> 00:20:40,480
from the client to the server and from

567
00:20:38,559 --> 00:20:43,120
the server to the client

568
00:20:40,480 --> 00:20:43,760
get some padding so it's always the same

569
00:20:43,120 --> 00:20:46,879
size

570
00:20:43,760 --> 00:20:49,919
no matter what information is contained

571
00:20:46,880 --> 00:20:52,720
in this data packages so

572
00:20:49,919 --> 00:20:53,520
observing the data packages so their

573
00:20:52,720 --> 00:20:55,280
size

574
00:20:53,520 --> 00:20:57,760
does not help in finding out what's

575
00:20:55,280 --> 00:21:00,080
actually going on

576
00:20:57,760 --> 00:21:01,919
now you could say okay if there's so

577
00:21:00,080 --> 00:21:03,439
much additional traffic because there

578
00:21:01,919 --> 00:21:06,960
are fake requests being sent

579
00:21:03,440 --> 00:21:07,840
out and fake uploads being done and so

580
00:21:06,960 --> 00:21:10,400
on

581
00:21:07,840 --> 00:21:11,360
this must cost a lot of data traffic to

582
00:21:10,400 --> 00:21:13,760
the users

583
00:21:11,360 --> 00:21:14,959
that's the good point it is all zero

584
00:21:13,760 --> 00:21:16,799
rating

585
00:21:14,960 --> 00:21:18,640
zero rated with the german mobile

586
00:21:16,799 --> 00:21:21,200
operators which means

587
00:21:18,640 --> 00:21:22,640
it's not charged to the end customers

588
00:21:21,200 --> 00:21:25,840
but

589
00:21:22,640 --> 00:21:25,840
it's just being paid for

590
00:21:27,600 --> 00:21:32,240
now there's still a thing with the

591
00:21:30,799 --> 00:21:34,559
extraction of information from the

592
00:21:32,240 --> 00:21:35,760
metadata while uploading the diagnosis

593
00:21:34,559 --> 00:21:39,039
keys

594
00:21:35,760 --> 00:21:39,679
and this metadata might be the source ip

595
00:21:39,039 --> 00:21:42,158
address

596
00:21:39,679 --> 00:21:44,240
it might be the user agent being used so

597
00:21:42,159 --> 00:21:47,360
then you can distinguish android

598
00:21:44,240 --> 00:21:49,679
from ios and possibly you could also

599
00:21:47,360 --> 00:21:51,678
find out about the os version

600
00:21:49,679 --> 00:21:53,120
and to prevent it we have introduced an

601
00:21:51,679 --> 00:21:54,799
intermediary server

602
00:21:53,120 --> 00:21:56,719
which removes the metadata from the

603
00:21:54,799 --> 00:21:59,120
requests and

604
00:21:56,720 --> 00:22:00,480
just forwards the plain content of the

605
00:21:59,120 --> 00:22:03,918
packages basically

606
00:22:00,480 --> 00:22:06,000
to the backend service so the backend

607
00:22:03,919 --> 00:22:08,320
service the submission service is not

608
00:22:06,000 --> 00:22:13,840
able to tell from where this package

609
00:22:08,320 --> 00:22:13,840
came from

610
00:22:17,520 --> 00:22:23,039
now for the risk calculation

611
00:22:20,559 --> 00:22:24,799
we can have a look at which information

612
00:22:23,039 --> 00:22:26,720
is available here

613
00:22:24,799 --> 00:22:28,000
so we've got the information about

614
00:22:26,720 --> 00:22:30,480
encounters

615
00:22:28,000 --> 00:22:31,840
which are calculated at the device

616
00:22:30,480 --> 00:22:33,039
receiving the rolling proximity

617
00:22:31,840 --> 00:22:34,959
identifiers

618
00:22:33,039 --> 00:22:36,480
as mentioned earlier and those

619
00:22:34,960 --> 00:22:39,280
information come in to us

620
00:22:36,480 --> 00:22:40,080
in 30 minute exposure windows so i

621
00:22:39,280 --> 00:22:41,678
mentioned earlier

622
00:22:40,080 --> 00:22:43,439
that all the rolling proximity

623
00:22:41,679 --> 00:22:44,480
identifies belonging to a single

624
00:22:43,440 --> 00:22:48,159
diagnosis key

625
00:22:44,480 --> 00:22:50,320
so a single day utc basically that is

626
00:22:48,159 --> 00:22:52,400
can be related to each other but what

627
00:22:50,320 --> 00:22:53,200
the exposure notification framework then

628
00:22:52,400 --> 00:22:56,320
does

629
00:22:53,200 --> 00:22:57,520
split up those encounters in 30 minute

630
00:22:56,320 --> 00:23:02,320
windows

631
00:22:57,520 --> 00:23:05,120
so the first scan instance where a

632
00:23:02,320 --> 00:23:06,960
another device has been identified

633
00:23:05,120 --> 00:23:08,799
starts the exposure window

634
00:23:06,960 --> 00:23:11,039
and then it's filled up until 30 minutes

635
00:23:08,799 --> 00:23:13,280
are full and if there's more encounters

636
00:23:11,039 --> 00:23:16,080
with the same diagnosis key basically

637
00:23:13,280 --> 00:23:18,158
a new window started and so on a single

638
00:23:16,080 --> 00:23:19,439
exposure window only contains a single

639
00:23:18,159 --> 00:23:22,480
device so it's a one

640
00:23:19,440 --> 00:23:24,720
to one mapping and within that window

641
00:23:22,480 --> 00:23:25,600
we can find the number of the scan

642
00:23:24,720 --> 00:23:28,960
instances

643
00:23:25,600 --> 00:23:30,240
so scans take place every three to five

644
00:23:28,960 --> 00:23:33,440
minutes

645
00:23:30,240 --> 00:23:35,039
and within those scan instances there

646
00:23:33,440 --> 00:23:37,360
are also multiple scans

647
00:23:35,039 --> 00:23:40,000
and we get the minimum and the average

648
00:23:37,360 --> 00:23:42,719
attenuation per instance

649
00:23:40,000 --> 00:23:44,960
and the attenuation is actually the

650
00:23:42,720 --> 00:23:46,720
reported transmit power of the device

651
00:23:44,960 --> 00:23:48,640
minus the signal strength when receiving

652
00:23:46,720 --> 00:23:51,679
the signal so

653
00:23:48,640 --> 00:23:54,799
it basically tells us how much

654
00:23:51,679 --> 00:23:56,640
signal strength got lost on the way if

655
00:23:54,799 --> 00:23:58,000
we talk about a low attenuation this

656
00:23:56,640 --> 00:24:00,559
means the other device

657
00:23:58,000 --> 00:24:01,360
has been very close if the attenuation

658
00:24:00,559 --> 00:24:03,039
is higher

659
00:24:01,360 --> 00:24:06,000
it means the other device is farther

660
00:24:03,039 --> 00:24:08,720
away and

661
00:24:06,000 --> 00:24:10,480
from the other way around so through the

662
00:24:08,720 --> 00:24:11,679
diagnosis keys which have been uploaded

663
00:24:10,480 --> 00:24:14,320
to the server

664
00:24:11,679 --> 00:24:14,880
processed on the back end provided on

665
00:24:14,320 --> 00:24:17,120
cdn

666
00:24:14,880 --> 00:24:18,159
and came to us through that way we can

667
00:24:17,120 --> 00:24:20,158
also get information

668
00:24:18,159 --> 00:24:22,400
about the infectiousness of the user

669
00:24:20,159 --> 00:24:25,679
which is encoded in something we call

670
00:24:22,400 --> 00:24:25,679
transmission risk level

671
00:24:25,919 --> 00:24:30,960
which tells us how big the risk of

672
00:24:29,440 --> 00:24:34,320
infection from that person on that

673
00:24:30,960 --> 00:24:34,320
specific day has been

674
00:24:34,960 --> 00:24:40,400
so the transmission risk level is based

675
00:24:38,080 --> 00:24:42,639
on the symptom status of a person

676
00:24:40,400 --> 00:24:45,679
and the symptoms status means is the

677
00:24:42,640 --> 00:24:47,279
person symptomatic

678
00:24:45,679 --> 00:24:49,360
the person want to tell about the

679
00:24:47,279 --> 00:24:51,279
symptoms or

680
00:24:49,360 --> 00:24:53,678
maybe do they not want to tell about the

681
00:24:51,279 --> 00:24:55,919
symptoms and in addition to that

682
00:24:53,679 --> 00:24:56,799
if there have been symptoms it can also

683
00:24:55,919 --> 00:24:58,640
be clarified

684
00:24:56,799 --> 00:25:01,120
whether the symptoms start was on a

685
00:24:58,640 --> 00:25:02,720
specific day whether it has been a range

686
00:25:01,120 --> 00:25:03,520
of multiple days when the symptoms

687
00:25:02,720 --> 00:25:06,640
started

688
00:25:03,520 --> 00:25:08,400
or people could also say i'm not sure

689
00:25:06,640 --> 00:25:11,600
about when the symptoms started

690
00:25:08,400 --> 00:25:14,880
but there have been symptoms definitely

691
00:25:11,600 --> 00:25:16,959
so this is the first case people can

692
00:25:14,880 --> 00:25:19,039
specify when their symptoms started

693
00:25:16,960 --> 00:25:20,159
we can say that's the symptom start down

694
00:25:19,039 --> 00:25:22,960
here

695
00:25:20,159 --> 00:25:25,120
and around that date of symptom begin of

696
00:25:22,960 --> 00:25:28,400
the onset of symptoms

697
00:25:25,120 --> 00:25:30,000
it's basically evenly spread the risk of

698
00:25:28,400 --> 00:25:32,400
infection

699
00:25:30,000 --> 00:25:34,720
red means a high risk blue means a low

700
00:25:32,400 --> 00:25:34,720
risk

701
00:25:35,200 --> 00:25:38,400
see when you move around that symptom

702
00:25:37,360 --> 00:25:42,719
start day

703
00:25:38,400 --> 00:25:45,520
also the infectiousness moves around

704
00:25:42,720 --> 00:25:47,120
and there's basically a matrix from

705
00:25:45,520 --> 00:25:51,279
where this information is derived

706
00:25:47,120 --> 00:25:53,918
again you can find that all in the code

707
00:25:51,279 --> 00:25:55,840
and there's also the possibility to say

708
00:25:53,919 --> 00:25:58,000
okay the symptoms started somewhere

709
00:25:55,840 --> 00:26:01,039
within the last seven days

710
00:25:58,000 --> 00:26:03,840
that's the case up here see it's

711
00:26:01,039 --> 00:26:06,640
spread a little bit differently users

712
00:26:03,840 --> 00:26:09,600
could also specify it started somewhere

713
00:26:06,640 --> 00:26:10,000
from one to two weeks ago you can see

714
00:26:09,600 --> 00:26:12,240
that here

715
00:26:10,000 --> 00:26:13,600
in the second chart and the third chart

716
00:26:12,240 --> 00:26:15,520
is the case

717
00:26:13,600 --> 00:26:18,240
for when the symptoms started more than

718
00:26:15,520 --> 00:26:18,240
two weeks ago

719
00:26:18,559 --> 00:26:23,760
now here's the case that users specify

720
00:26:21,919 --> 00:26:25,600
that they just received a positive test

721
00:26:23,760 --> 00:26:28,240
result so they're definitely

722
00:26:25,600 --> 00:26:28,879
corona positive but they have never had

723
00:26:28,240 --> 00:26:30,640
symptoms

724
00:26:28,880 --> 00:26:32,400
which might mean they are asymptomatic

725
00:26:30,640 --> 00:26:35,760
or presymptomatic

726
00:26:32,400 --> 00:26:38,799
and again you see around the submission

727
00:26:35,760 --> 00:26:42,559
there is a increased risk

728
00:26:38,799 --> 00:26:45,120
but all the time before he

729
00:26:42,559 --> 00:26:47,600
only has a low transmission risk level

730
00:26:45,120 --> 00:26:50,000
assigned

731
00:26:47,600 --> 00:26:51,678
if users want to specify that they can't

732
00:26:50,000 --> 00:26:53,600
remember when the symptoms started but

733
00:26:51,679 --> 00:26:55,840
they definitely had symptoms

734
00:26:53,600 --> 00:26:58,399
then it's all spread a little bit

735
00:26:55,840 --> 00:27:00,559
differently

736
00:26:58,400 --> 00:27:01,760
and equally if users do not want to

737
00:27:00,559 --> 00:27:05,200
share the information

738
00:27:01,760 --> 00:27:07,840
whether they had symptoms at all

739
00:27:05,200 --> 00:27:09,600
so now we've got this big risk

740
00:27:07,840 --> 00:27:11,039
calculation chart here

741
00:27:09,600 --> 00:27:12,799
and i would like to walk you quickly

742
00:27:11,039 --> 00:27:13,919
through it so on the left we've got the

743
00:27:12,799 --> 00:27:15,918
configuration

744
00:27:13,919 --> 00:27:18,240
which is being fed into the exposure

745
00:27:15,919 --> 00:27:21,360
notification framework by apple google

746
00:27:18,240 --> 00:27:23,279
because there's also some mappings which

747
00:27:21,360 --> 00:27:25,840
the framework needs from us

748
00:27:23,279 --> 00:27:27,440
there is some internal configuration

749
00:27:25,840 --> 00:27:29,439
because we have decided

750
00:27:27,440 --> 00:27:30,960
to do a lot of the risk calculation

751
00:27:29,440 --> 00:27:32,480
within the app instead of doing it in

752
00:27:30,960 --> 00:27:34,960
the framework

753
00:27:32,480 --> 00:27:37,120
mainly because we have decided we want a

754
00:27:34,960 --> 00:27:40,240
eight level transmission risk level

755
00:27:37,120 --> 00:27:43,279
instead of the um only

756
00:27:40,240 --> 00:27:46,559
three levels so low standard and high

757
00:27:43,279 --> 00:27:48,880
which apple and google provide to us

758
00:27:46,559 --> 00:27:49,678
for the sake of having those eight

759
00:27:48,880 --> 00:27:52,159
levels

760
00:27:49,679 --> 00:27:54,640
we actually sacrifice the parameters of

761
00:27:52,159 --> 00:27:57,600
infectiousness which is derived from the

762
00:27:54,640 --> 00:27:58,720
parameter adjacent onset of symptoms and

763
00:27:57,600 --> 00:28:01,039
the report type

764
00:27:58,720 --> 00:28:02,880
which is always confirmed test here in

765
00:28:01,039 --> 00:28:06,000
europe

766
00:28:02,880 --> 00:28:07,679
so we got those three bits actually

767
00:28:06,000 --> 00:28:09,520
which we can now use as the transmission

768
00:28:07,679 --> 00:28:11,600
risk level which is

769
00:28:09,520 --> 00:28:14,000
encoded on the server in those two

770
00:28:11,600 --> 00:28:16,399
fields added to the keys on the

771
00:28:14,000 --> 00:28:17,679
content delivery network downloaded by

772
00:28:16,399 --> 00:28:20,799
the app

773
00:28:17,679 --> 00:28:22,559
and then passed through the calculation

774
00:28:20,799 --> 00:28:24,000
here so it comes in here

775
00:28:22,559 --> 00:28:25,279
it is assembled from those two

776
00:28:24,000 --> 00:28:27,279
parameters report type and

777
00:28:25,279 --> 00:28:30,320
infectiousness

778
00:28:27,279 --> 00:28:30,960
and now it goes along so first we need

779
00:28:30,320 --> 00:28:33,840
to look

780
00:28:30,960 --> 00:28:34,399
whether the sum of the durations at

781
00:28:33,840 --> 00:28:36,879
below

782
00:28:34,399 --> 00:28:37,760
73 dc bills so that's our first

783
00:28:36,880 --> 00:28:40,480
threshold

784
00:28:37,760 --> 00:28:42,320
has been less than 10 minutes if it has

785
00:28:40,480 --> 00:28:42,640
been less than 10 minutes we just drop

786
00:28:42,320 --> 00:28:45,678
the

787
00:28:42,640 --> 00:28:46,000
whole exposure window if it has been

788
00:28:45,679 --> 00:28:49,120
more

789
00:28:46,000 --> 00:28:51,360
or equal 10 minutes we might use it

790
00:28:49,120 --> 00:28:52,239
depending on whether the transmission

791
00:28:51,360 --> 00:28:55,360
risk level

792
00:28:52,240 --> 00:28:57,919
is larger or equal 3 and

793
00:28:55,360 --> 00:29:00,080
we use it and now we actually calculate

794
00:28:57,919 --> 00:29:03,360
the relevant time

795
00:29:00,080 --> 00:29:08,639
and times between

796
00:29:03,360 --> 00:29:10,719
60 between 55 and 63 dc bills

797
00:29:08,640 --> 00:29:12,799
are only counted half because that's a

798
00:29:10,720 --> 00:29:16,080
medium distance

799
00:29:12,799 --> 00:29:16,720
and times at below 55 decibels that's up

800
00:29:16,080 --> 00:29:19,840
here

801
00:29:16,720 --> 00:29:22,159
are counted full those are added up and

802
00:29:19,840 --> 00:29:23,760
then we've got the weight exposure time

803
00:29:22,159 --> 00:29:26,000
and now we've got this transmission risk

804
00:29:23,760 --> 00:29:28,960
level which leads us to a normalization

805
00:29:26,000 --> 00:29:30,559
factor basically and this is multiplied

806
00:29:28,960 --> 00:29:32,240
with the weight exposure time

807
00:29:30,559 --> 00:29:35,039
what we get here is the normalized

808
00:29:32,240 --> 00:29:38,000
exposure time per exposure window

809
00:29:35,039 --> 00:29:38,559
and those times for each window are

810
00:29:38,000 --> 00:29:40,960
added up

811
00:29:38,559 --> 00:29:42,399
for the whole day and then there's the

812
00:29:40,960 --> 00:29:44,720
threshold of 15 minutes

813
00:29:42,399 --> 00:29:46,158
which decides whether the day had a high

814
00:29:44,720 --> 00:29:49,039
risk of infection

815
00:29:46,159 --> 00:29:49,039
or a low risk

816
00:29:50,559 --> 00:29:57,039
so now that you all know how to do those

817
00:29:54,000 --> 00:30:00,720
calculation we can walk through it

818
00:29:57,039 --> 00:30:02,480
for three examples so the first example

819
00:30:00,720 --> 00:30:03,200
is here it's a transmission risk level

820
00:30:02,480 --> 00:30:05,440
of seven

821
00:30:03,200 --> 00:30:07,679
you can see those all are pretty close

822
00:30:05,440 --> 00:30:10,399
so our magic thresholds are here

823
00:30:07,679 --> 00:30:11,200
at 73 that's for whether it's counted or

824
00:30:10,399 --> 00:30:15,840
not

825
00:30:11,200 --> 00:30:17,679
then at 63 it's this line and at 55

826
00:30:15,840 --> 00:30:19,279
so we see okay there's been a lot of

827
00:30:17,679 --> 00:30:22,640
close contact going on

828
00:30:19,279 --> 00:30:24,159
and some medium range contact as well

829
00:30:22,640 --> 00:30:26,000
so let's do the pre-filtering even

830
00:30:24,159 --> 00:30:29,360
though we already see it

831
00:30:26,000 --> 00:30:30,480
has been at least 10 minutes below 73

832
00:30:29,360 --> 00:30:32,719
decibels

833
00:30:30,480 --> 00:30:33,919
yes definitely because each of those

834
00:30:32,720 --> 00:30:36,480
dots represents

835
00:30:33,919 --> 00:30:38,320
3 minutes so for this example

836
00:30:36,480 --> 00:30:42,720
calculation i just assumed

837
00:30:38,320 --> 00:30:44,480
the scan windows are three minutes apart

838
00:30:42,720 --> 00:30:45,840
is it at least transmission risk level

839
00:30:44,480 --> 00:30:48,240
three yes

840
00:30:45,840 --> 00:30:49,678
it's even seven so now we do the

841
00:30:48,240 --> 00:30:51,440
calculation

842
00:30:49,679 --> 00:30:52,960
it has been 18 minutes at a low

843
00:30:51,440 --> 00:30:56,159
attenuation

844
00:30:52,960 --> 00:30:56,960
so at a close proximity so that's 18

845
00:30:56,159 --> 00:30:58,880
minutes

846
00:30:56,960 --> 00:31:01,840
and nine minutes those are those three

847
00:30:58,880 --> 00:31:03,519
dots here at a medium attenuation

848
00:31:01,840 --> 00:31:05,519
so a little bit further apart they count

849
00:31:03,519 --> 00:31:07,919
as four and a half minutes

850
00:31:05,519 --> 00:31:11,360
we've got a factor here adding it up it

851
00:31:07,919 --> 00:31:15,760
gets us to 25 minutes multiplied by 1.4

852
00:31:11,360 --> 00:31:19,199
giving us 33 31.5 minutes

853
00:31:15,760 --> 00:31:22,640
which means a red status

854
00:31:19,200 --> 00:31:22,640
already with a single window

855
00:31:23,120 --> 00:31:27,120
now in this example we can already see

856
00:31:25,039 --> 00:31:29,279
that's pretty far away and there's been

857
00:31:27,120 --> 00:31:31,760
one close encounter here

858
00:31:29,279 --> 00:31:33,440
a transmission risk level 8 even

859
00:31:31,760 --> 00:31:35,679
pre-filtering

860
00:31:33,440 --> 00:31:36,960
has it been at least 10 minutes below 73

861
00:31:35,679 --> 00:31:40,480
decibels

862
00:31:36,960 --> 00:31:42,320
no okay then we already drop it

863
00:31:40,480 --> 00:31:45,279
and now there's the third one

864
00:31:42,320 --> 00:31:48,799
transmission risk level 8 again

865
00:31:45,279 --> 00:31:51,440
it has been a little bit uh

866
00:31:48,799 --> 00:31:52,240
away but there's also been some close

867
00:31:51,440 --> 00:31:54,240
contact

868
00:31:52,240 --> 00:31:56,880
so we do the pre-filtering has it been

869
00:31:54,240 --> 00:31:58,840
at least 10 minutes below 73

870
00:31:56,880 --> 00:32:00,159
now we already have to look closely so

871
00:31:58,840 --> 00:32:03,199
yes

872
00:32:00,159 --> 00:32:05,200
it is below 73 this one as well okay so

873
00:32:03,200 --> 00:32:08,480
we've got four dots

874
00:32:05,200 --> 00:32:09,360
below 73 decibels gives us 12 minutes

875
00:32:08,480 --> 00:32:11,039
yes

876
00:32:09,360 --> 00:32:12,719
transmission risk level three okay

877
00:32:11,039 --> 00:32:14,879
that's easy yes

878
00:32:12,720 --> 00:32:16,480
and now we can do the calculation it has

879
00:32:14,880 --> 00:32:19,200
been six minutes at the

880
00:32:16,480 --> 00:32:20,559
low attenuation those two dots here okay

881
00:32:19,200 --> 00:32:22,159
they count full

882
00:32:20,559 --> 00:32:23,600
and zero minutes at the medium

883
00:32:22,159 --> 00:32:26,559
attenuation you see

884
00:32:23,600 --> 00:32:28,080
this part here is empty and the

885
00:32:26,559 --> 00:32:31,039
transmission risk level 8

886
00:32:28,080 --> 00:32:33,840
gives us a factor of 1.6 if we now

887
00:32:31,039 --> 00:32:36,399
multiply those six minutes by 1.6

888
00:32:33,840 --> 00:32:38,320
we get 9.6 minutes so if this has been

889
00:32:36,399 --> 00:32:41,039
the only encounter for that day

890
00:32:38,320 --> 00:32:41,678
that's still green but if for example

891
00:32:41,039 --> 00:32:45,200
you had two

892
00:32:41,679 --> 00:32:47,360
encounters of this kind so with the same

893
00:32:45,200 --> 00:32:49,519
person or with different people

894
00:32:47,360 --> 00:32:51,840
then it would already turn into red

895
00:32:49,519 --> 00:32:57,519
because then it's close to 20 minutes

896
00:32:51,840 --> 00:32:58,959
which is above the 15 minute threshold

897
00:32:57,519 --> 00:33:00,640
now i would like to thank you for

898
00:32:58,960 --> 00:33:11,840
listening to my session

899
00:33:00,640 --> 00:33:11,840
and i am available for q a shortly

900
00:33:13,120 --> 00:33:16,959
okay so thank you thomas this was a

901
00:33:15,679 --> 00:33:19,440
pre-recorded talk

902
00:33:16,960 --> 00:33:20,559
and the discussion was very lively in

903
00:33:19,440 --> 00:33:23,440
the irc

904
00:33:20,559 --> 00:33:24,799
during the talk and i'm glad that thomas

905
00:33:23,440 --> 00:33:27,039
will be here for the q

906
00:33:24,799 --> 00:33:27,039
a

907
00:33:27,919 --> 00:33:30,880
maybe to start

908
00:33:31,679 --> 00:33:36,840
maybe to start with the first question

909
00:33:33,519 --> 00:33:39,840
by amhar in irc on security and replay

910
00:33:36,840 --> 00:33:42,959
attacks

911
00:33:39,840 --> 00:33:46,559
italy and netherlands published a tak

912
00:33:42,960 --> 00:33:48,320
sdk so early that they are still valid

913
00:33:46,559 --> 00:33:49,918
we learned that yesterday in the time

914
00:33:48,320 --> 00:33:51,678
machine presentation

915
00:33:49,919 --> 00:33:53,840
how is this handled in the european

916
00:33:51,679 --> 00:33:55,679
corporation and can you make them adhere

917
00:33:53,840 --> 00:33:58,799
to the security requirements

918
00:33:55,679 --> 00:34:01,120
this is the first question for you

919
00:33:58,799 --> 00:34:01,120
thomas

920
00:34:03,039 --> 00:34:08,800
okay so thank you for this question

921
00:34:06,640 --> 00:34:10,480
the way we handle keys coming in from

922
00:34:08,800 --> 00:34:13,440
other european countries that's through

923
00:34:10,480 --> 00:34:15,679
the european federation gateway service

924
00:34:13,440 --> 00:34:16,960
is that they are handled as if they were

925
00:34:15,679 --> 00:34:18,800
national keys

926
00:34:16,960 --> 00:34:20,800
which means they are putting some kind

927
00:34:18,800 --> 00:34:23,919
of embargo

928
00:34:20,800 --> 00:34:25,679
for two hours until so two hours after

929
00:34:23,918 --> 00:34:29,440
the end of their validity

930
00:34:25,679 --> 00:34:31,839
to make sure that replay attacks are not

931
00:34:29,440 --> 00:34:31,839
possible

932
00:34:32,399 --> 00:34:35,759
all right i hope that answers that

933
00:34:36,000 --> 00:34:40,480
okay and then that was another one on

934
00:34:38,320 --> 00:34:43,760
international interoperability

935
00:34:40,480 --> 00:34:45,199
um is it only or is there also

936
00:34:43,760 --> 00:34:49,839
cooperation between

937
00:34:45,199 --> 00:34:49,839
you and for example switzerland

938
00:34:50,239 --> 00:34:57,200
so so far we've got the cooperation with

939
00:34:53,520 --> 00:34:57,200
other eu countries there's

940
00:34:58,480 --> 00:35:02,400
from the european union which app

941
00:35:01,200 --> 00:35:06,879
interoperates

942
00:35:02,400 --> 00:35:09,280
already and regarding the integration of

943
00:35:06,880 --> 00:35:12,320
non-eu countries that's basically a

944
00:35:09,280 --> 00:35:15,680
political decision

945
00:35:12,320 --> 00:35:16,400
which has to be made from this place as

946
00:35:15,680 --> 00:35:19,040
well then

947
00:35:16,400 --> 00:35:21,520
so that's nothing i as an architect can

948
00:35:19,040 --> 00:35:25,200
drive or control

949
00:35:21,520 --> 00:35:27,839
so so far it's only eu countries

950
00:35:25,200 --> 00:35:30,078
all right and then they have some

951
00:35:27,839 --> 00:35:32,640
comments and also questions on community

952
00:35:30,079 --> 00:35:33,920
interaction and implementation of new

953
00:35:32,640 --> 00:35:36,879
features

954
00:35:33,920 --> 00:35:38,640
which seems a little slow for some there

955
00:35:36,880 --> 00:35:41,119
was for example a proposal for

956
00:35:38,640 --> 00:35:43,118
functionality called crowd notifier for

957
00:35:41,119 --> 00:35:45,599
events and restaurants to check in by

958
00:35:43,119 --> 00:35:48,240
scanning a qr code

959
00:35:45,599 --> 00:35:49,359
can you tell us a bit more about this or

960
00:35:48,240 --> 00:35:52,399
was there

961
00:35:49,359 --> 00:35:52,400
are you aware of this

962
00:35:52,480 --> 00:35:59,359
so i've

963
00:35:55,680 --> 00:36:00,160
i we have seen that there are proposals

964
00:35:59,359 --> 00:36:01,598
online

965
00:36:00,160 --> 00:36:03,598
and that there's also a lively

966
00:36:01,599 --> 00:36:05,200
discussion on those issues

967
00:36:03,599 --> 00:36:08,400
but what you need to keep in mind is

968
00:36:05,200 --> 00:36:08,399
that we are also

969
00:36:08,560 --> 00:36:14,880
we have the task of developing this app

970
00:36:11,760 --> 00:36:16,160
for the federal ministry of health and

971
00:36:14,880 --> 00:36:18,480
they are basically the ones

972
00:36:16,160 --> 00:36:20,480
requesting features and then there's

973
00:36:18,480 --> 00:36:24,320
some scoping going on

974
00:36:20,480 --> 00:36:26,000
so i'm personally md

975
00:36:24,320 --> 00:36:28,480
so i had to say that again and the

976
00:36:26,000 --> 00:36:30,400
architect so i can't decide

977
00:36:28,480 --> 00:36:32,560
which feature is going to be implemented

978
00:36:30,400 --> 00:36:33,280
it's just a as soon as the decision has

979
00:36:32,560 --> 00:36:36,560
been made

980
00:36:33,280 --> 00:36:38,720
that we need a new feature so we've been

981
00:36:36,560 --> 00:36:40,160
after we've been given the task then i

982
00:36:38,720 --> 00:36:43,439
come in and

983
00:36:40,160 --> 00:36:45,920
prepare the architecture for that so um

984
00:36:43,440 --> 00:36:47,520
i'm not aware of the current state of

985
00:36:45,920 --> 00:36:51,119
those developments to be honest

986
00:36:47,520 --> 00:36:52,960
because that's out of my personal scope

987
00:36:51,119 --> 00:36:55,119
all right i mean that's often the case i

988
00:36:52,960 --> 00:36:56,079
suppose with great projects to do the

989
00:36:55,119 --> 00:36:59,280
projects

990
00:36:56,079 --> 00:37:01,520
um yeah but overall people seem to be

991
00:36:59,280 --> 00:37:02,720
liking the fact that everything is uh

992
00:37:01,520 --> 00:37:06,400
available on

993
00:37:02,720 --> 00:37:08,000
github um but some people are really

994
00:37:06,400 --> 00:37:09,440
dedicated and seem to be a bit

995
00:37:08,000 --> 00:37:11,920
disappointed that

996
00:37:09,440 --> 00:37:13,599
uh interaction with the community on

997
00:37:11,920 --> 00:37:16,240
github seems a bit

998
00:37:13,599 --> 00:37:17,839
slow because some issues are not

999
00:37:16,240 --> 00:37:21,040
answered as people would hope

1000
00:37:17,839 --> 00:37:23,759
it would be do you know that

1001
00:37:21,040 --> 00:37:25,440
about some ideas on adding dedicated

1002
00:37:23,760 --> 00:37:28,079
community managers

1003
00:37:25,440 --> 00:37:29,839
to the github community around the app

1004
00:37:28,079 --> 00:37:32,640
so the people

1005
00:37:29,839 --> 00:37:35,119
we speak with that was one note in the

1006
00:37:32,640 --> 00:37:36,879
isd seem to be changing every month

1007
00:37:35,119 --> 00:37:40,079
so are you aware of this kind of

1008
00:37:36,880 --> 00:37:42,000
position of community management

1009
00:37:40,079 --> 00:37:44,000
so there's people definitely working on

1010
00:37:42,000 --> 00:37:45,599
the community management

1011
00:37:44,000 --> 00:37:47,920
there's also a lot of feedback and

1012
00:37:45,599 --> 00:37:50,960
comments coming in from the community

1013
00:37:47,920 --> 00:37:53,119
and i'm definitely aware that um

1014
00:37:50,960 --> 00:37:54,640
that there are people working on that

1015
00:37:53,119 --> 00:37:57,920
and for example

1016
00:37:54,640 --> 00:38:00,240
uh i get asked to them by them

1017
00:37:57,920 --> 00:38:01,920
to jump in on certain questions where

1018
00:38:00,240 --> 00:38:04,560
clarification is needed from an

1019
00:38:01,920 --> 00:38:06,640
architecture point of view and that's

1020
00:38:04,560 --> 00:38:08,400
if you look at github there's also some

1021
00:38:06,640 --> 00:38:10,640
issues i've been answering

1022
00:38:08,400 --> 00:38:12,800
and that's because our community team

1023
00:38:10,640 --> 00:38:16,160
has asked me to jump in there

1024
00:38:12,800 --> 00:38:19,200
so um but the feedback that

1025
00:38:16,160 --> 00:38:20,799
people are not fully satisfied with the

1026
00:38:19,200 --> 00:38:22,799
way how the community is handled is

1027
00:38:20,800 --> 00:38:24,560
something i would definitely take

1028
00:38:22,800 --> 00:38:26,240
back to our team internally and let them

1029
00:38:24,560 --> 00:38:29,359
know about it

1030
00:38:26,240 --> 00:38:31,200
yeah that's great to know actually um so

1031
00:38:29,359 --> 00:38:33,598
people have some answers on that

1032
00:38:31,200 --> 00:38:34,240
maybe one last very concrete question by

1033
00:38:33,599 --> 00:38:38,079
duffman

1034
00:38:34,240 --> 00:38:40,078
in the iec um is the inability of the

1035
00:38:38,079 --> 00:38:41,599
app to show the time day of exposure the

1036
00:38:40,079 --> 00:38:43,599
limitation of the framework

1037
00:38:41,599 --> 00:38:45,599
or is it an implementation choice and

1038
00:38:43,599 --> 00:38:45,839
what would be the privacy implications

1039
00:38:45,599 --> 00:38:47,920
of

1040
00:38:45,839 --> 00:38:49,759
introducing such a feature actually a

1041
00:38:47,920 --> 00:38:51,119
big question but maybe you can cut it

1042
00:38:49,760 --> 00:38:54,720
short

1043
00:38:51,119 --> 00:38:56,480
yep okay so uh the only information the

1044
00:38:54,720 --> 00:38:58,160
explosion notification framework by

1045
00:38:56,480 --> 00:39:00,880
google apple can give us

1046
00:38:58,160 --> 00:39:03,118
is the date of the exposure and date

1047
00:39:00,880 --> 00:39:06,640
always relates to utc there

1048
00:39:03,119 --> 00:39:07,839
and so we never get the time of the

1049
00:39:06,640 --> 00:39:10,240
actual exposure back

1050
00:39:07,839 --> 00:39:10,880
and when moving to the exposure windows

1051
00:39:10,240 --> 00:39:13,520
we also

1052
00:39:10,880 --> 00:39:14,640
do not get the time back of the exposure

1053
00:39:13,520 --> 00:39:17,359
window

1054
00:39:14,640 --> 00:39:18,720
and the implications if you were able to

1055
00:39:17,359 --> 00:39:21,839
tell the exact time

1056
00:39:18,720 --> 00:39:23,598
of the encounter would be that people

1057
00:39:21,839 --> 00:39:25,440
are often aware where they've been at a

1058
00:39:23,599 --> 00:39:28,560
certain time and let's say

1059
00:39:25,440 --> 00:39:30,320
at 11 15 you were meeting

1060
00:39:28,560 --> 00:39:32,960
with a friend and you get the

1061
00:39:30,320 --> 00:39:35,119
notification that at 11 15 you had that

1062
00:39:32,960 --> 00:39:37,680
exact encounter

1063
00:39:35,119 --> 00:39:39,440
it would be easy to tell whom you've met

1064
00:39:37,680 --> 00:39:42,720
who's been infected and

1065
00:39:39,440 --> 00:39:44,800
that something not

1066
00:39:42,720 --> 00:39:47,520
not desired that you can trace it back

1067
00:39:44,800 --> 00:39:49,839
to a certain person

1068
00:39:47,520 --> 00:39:52,320
so reaper sonification would basically

1069
00:39:49,839 --> 00:39:53,839
then be the thing

1070
00:39:52,320 --> 00:39:55,440
all right and i hope we have time for

1071
00:39:53,839 --> 00:39:57,680
this last question to

1072
00:39:55,440 --> 00:39:59,520
ask an irc have you considered training

1073
00:39:57,680 --> 00:40:01,680
a machine learning method to classify

1074
00:39:59,520 --> 00:40:06,720
the risk levels instead of the used

1075
00:40:01,680 --> 00:40:06,720
rule-based method so

1076
00:40:07,599 --> 00:40:09,839
i mean

1077
00:40:11,280 --> 00:40:15,280
classifying the risk levels through

1078
00:40:14,240 --> 00:40:18,879
machine learning

1079
00:40:15,280 --> 00:40:22,880
um is something i'm not aware of

1080
00:40:18,880 --> 00:40:23,520
yet um so the thing is it's all based on

1081
00:40:22,880 --> 00:40:25,119
basically

1082
00:40:23,520 --> 00:40:27,040
a cooperation with the fraunhofer

1083
00:40:25,119 --> 00:40:29,119
institute where they

1084
00:40:27,040 --> 00:40:31,119
have basically re-enacted certain

1085
00:40:29,119 --> 00:40:31,680
situations did some measurements and

1086
00:40:31,119 --> 00:40:34,160
that's

1087
00:40:31,680 --> 00:40:34,799
what has been transferred into the risk

1088
00:40:34,160 --> 00:40:38,000
model

1089
00:40:34,800 --> 00:40:41,119
so all those thresholds are derived from

1090
00:40:38,000 --> 00:40:44,800
basically practical tests

1091
00:40:41,119 --> 00:40:44,800
so no ml at the moment

1092
00:40:44,960 --> 00:40:48,720
all right so i suppose this was our last

1093
00:40:47,839 --> 00:40:51,920
question

1094
00:40:48,720 --> 00:40:55,040
and again um

1095
00:40:51,920 --> 00:40:55,520
thomas a warm round of virtual applause

1096
00:40:55,040 --> 00:40:57,839
to you

1097
00:40:55,520 --> 00:40:59,839
and thank you again for thomas for

1098
00:40:57,839 --> 00:41:02,240
giving this talk for being part

1099
00:40:59,839 --> 00:41:03,279
of this first remote case experience and

1100
00:41:02,240 --> 00:41:05,839
for giving

1101
00:41:03,280 --> 00:41:06,880
us some insight into the back end of the

1102
00:41:05,839 --> 00:41:09,839
corona

1103
00:41:06,880 --> 00:41:21,839
one app thank you i was happy to do so

1104
00:41:09,839 --> 00:41:21,839
thank you for having me here

1105
00:41:32,839 --> 00:41:35,839
wow

