1
00:00:01,700 --> 00:00:15,120
[Music]

2
00:00:10,950 --> 00:00:17,939
<font color="#E5E5E5">so the last speaker for this morning is</font>

3
00:00:15,120 --> 00:00:20,669
<font color="#E5E5E5">trouble is doing</font><font color="#CCCCCC"> awesome research</font><font color="#E5E5E5"> on</font>

4
00:00:17,939 --> 00:00:23,250
<font color="#CCCCCC">with trapping more secure</font><font color="#E5E5E5"> laptops or</font>

5
00:00:20,669 --> 00:00:26,099
servers and is doing<font color="#E5E5E5"> bad that basically</font>

6
00:00:23,250 --> 00:00:28,619
by moving the<font color="#CCCCCC"> roots</font><font color="#E5E5E5"> trust into the right</font>

7
00:00:26,099 --> 00:00:31,320
protected room is building an

8
00:00:28,619 --> 00:00:33,540
<font color="#E5E5E5">open-source</font><font color="#CCCCCC"> custom-fit were</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> big ups</font>

9
00:00:31,320 --> 00:00:35,370
for<font color="#E5E5E5"> that and also encouraging the</font>

10
00:00:33,540 --> 00:00:44,079
research on this field which I believe

11
00:00:35,370 --> 00:00:48,550
it's super interesting<font color="#CCCCCC"> thanks</font>

12
00:00:44,079 --> 00:00:50,260
<font color="#CCCCCC">some travel</font><font color="#E5E5E5"> Hudson with</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> two sigma</font>

13
00:00:48,550 --> 00:00:52,839
investments<font color="#E5E5E5"> and</font><font color="#CCCCCC"> for the past</font><font color="#E5E5E5"> several</font>

14
00:00:50,260 --> 00:00:55,269
years<font color="#CCCCCC"> I've been researching firmware</font>

15
00:00:52,839 --> 00:00:58,059
security vulnerabilities and look<font color="#E5E5E5"> at how</font>

16
00:00:55,269 --> 00:01:00,760
they<font color="#E5E5E5"> affect systems</font><font color="#CCCCCC"> two years ago i</font>

17
00:00:58,059 --> 00:01:03,519
<font color="#E5E5E5">presented my work on</font><font color="#CCCCCC"> Thunderstrike here</font>

18
00:01:00,760 --> 00:01:05,530
at<font color="#CCCCCC"> CC this was the first firmware attack</font>

19
00:01:03,519 --> 00:01:07,030
against<font color="#CCCCCC"> macbooks</font><font color="#E5E5E5"> that allowed</font><font color="#CCCCCC"> an</font>

20
00:01:05,530 --> 00:01:10,420
<font color="#CCCCCC">attacker to overwrite</font><font color="#E5E5E5"> the motherboard</font>

21
00:01:07,030 --> 00:01:13,689
<font color="#E5E5E5">bootrom the year after that</font><font color="#CCCCCC"> I</font>

22
00:01:10,420 --> 00:01:16,000
<font color="#E5E5E5">collaborated with</font><font color="#CCCCCC"> Zino cova inquiry</font>

23
00:01:13,689 --> 00:01:19,479
kallenberg from redbook<font color="#CCCCCC"> war</font><font color="#E5E5E5"> both of them</font>

24
00:01:16,000 --> 00:01:22,840
are now at<font color="#CCCCCC"> Apple to inform our work</font><font color="#E5E5E5"> and</font>

25
00:01:19,479 --> 00:01:25,179
we<font color="#CCCCCC"> ported a bunch of</font><font color="#E5E5E5"> windows</font><font color="#CCCCCC"> UEFI</font>

26
00:01:22,840 --> 00:01:28,030
vulnerabilities<font color="#CCCCCC"> of to the</font><font color="#E5E5E5"> mac and</font><font color="#CCCCCC"> show</font>

27
00:01:25,179 --> 00:01:30,190
<font color="#CCCCCC">that</font><font color="#E5E5E5"> this offer platform</font><font color="#CCCCCC"> the ufs offer</font>

28
00:01:28,030 --> 00:01:33,429
platform you<font color="#E5E5E5"> allowed very portable</font>

29
00:01:30,190 --> 00:01:36,100
attacks to be done<font color="#CCCCCC"> this</font><font color="#E5E5E5"> also allowed a</font>

30
00:01:33,429 --> 00:01:38,229
remote attacker with that code execution

31
00:01:36,100 --> 00:01:41,678
on<font color="#E5E5E5"> on your machine to overwrite the</font>

32
00:01:38,229 --> 00:01:43,569
motherboard bootrom<font color="#E5E5E5"> but more than just</font>

33
00:01:41,679 --> 00:01:45,580
breaking things<font color="#E5E5E5"> and whatever you'd like</font>

34
00:01:43,569 --> 00:01:48,009
<font color="#E5E5E5">to do is take things apart and</font>

35
00:01:45,580 --> 00:01:49,840
understand how they work and document

36
00:01:48,009 --> 00:01:52,090
them so that other people can build

37
00:01:49,840 --> 00:01:54,039
systems on top of them<font color="#CCCCCC"> and that's what</font>

38
00:01:52,090 --> 00:01:57,580
<font color="#CCCCCC">I'm</font><font color="#E5E5E5"> really excited to be talking to you</font>

39
00:01:54,039 --> 00:02:01,030
all about my project heads which is at a

40
00:01:57,580 --> 00:02:06,099
open source firmware and<font color="#E5E5E5"> bootloader for</font>

41
00:02:01,030 --> 00:02:07,599
laptops and servers the the name is kind

42
00:02:06,099 --> 00:02:11,140
of a play on the popular<font color="#CCCCCC"> tales</font>

43
00:02:07,599 --> 00:02:12,280
distribution which is a<font color="#CCCCCC"> state list winix</font>

44
00:02:11,140 --> 00:02:14,109
<font color="#CCCCCC">for when you don't want to leave any</font>

45
00:02:12,280 --> 00:02:16,629
traces of what you're doing on your

46
00:02:14,110 --> 00:02:17,950
machine<font color="#CCCCCC"> head's is for the opposite case</font>

47
00:02:16,629 --> 00:02:19,569
<font color="#CCCCCC">is where you want to</font><font color="#E5E5E5"> be able to trust</font>

48
00:02:17,950 --> 00:02:21,970
the<font color="#CCCCCC"> Machine and</font><font color="#E5E5E5"> want to be able to trust</font>

49
00:02:19,569 --> 00:02:27,099
that the data you store on the machine

50
00:02:21,970 --> 00:02:28,390
that is is safe and unmodified<font color="#E5E5E5"> and let's</font>

51
00:02:27,099 --> 00:02:31,030
back up for a quick<font color="#CCCCCC"> minute</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> talk</font>

52
00:02:28,390 --> 00:02:34,390
<font color="#E5E5E5">about why</font><font color="#CCCCCC"> from our security it is so</font>

53
00:02:31,030 --> 00:02:37,360
important that this is the code that is

54
00:02:34,390 --> 00:02:39,549
executed by the cpu<font color="#E5E5E5"> when it comes out of</font>

55
00:02:37,360 --> 00:02:41,709
reset this is the first instruction that

56
00:02:39,550 --> 00:02:43,900
the<font color="#CCCCCC"> CPU</font><font color="#E5E5E5"> execute and so it's in a really</font>

57
00:02:41,709 --> 00:02:46,390
privileged position to be able to

58
00:02:43,900 --> 00:02:50,049
circumvent any sort of<font color="#E5E5E5"> os or other</font>

59
00:02:46,390 --> 00:02:52,119
policies and there's no shortage of

60
00:02:50,049 --> 00:02:55,440
<font color="#E5E5E5">talks that you can you can watch on</font>

61
00:02:52,120 --> 00:02:57,330
<font color="#E5E5E5">interesting attack vectors using</font>

62
00:02:55,440 --> 00:03:01,740
<font color="#CCCCCC">are more</font><font color="#E5E5E5"> based</font><font color="#CCCCCC"> malware</font><font color="#E5E5E5"> one that I really</font>

63
00:02:57,330 --> 00:03:03,960
liked was last year at<font color="#E5E5E5"> Def Con the</font><font color="#CCCCCC"> Intel</font>

64
00:03:01,740 --> 00:03:07,140
advanced threat research presented<font color="#CCCCCC"> an</font>

65
00:03:03,960 --> 00:03:08,970
attack<font color="#E5E5E5"> that</font><font color="#CCCCCC"> should help from where could</font>

66
00:03:07,140 --> 00:03:12,989
<font color="#CCCCCC">i</font><font color="#E5E5E5"> was just from where</font><font color="#CCCCCC"> could circumvent</font>

67
00:03:08,970 --> 00:03:16,290
the hypervisors<font color="#E5E5E5"> they then went further</font>

68
00:03:12,990 --> 00:03:18,900
and showed<font color="#CCCCCC"> how buggy firmware</font><font color="#E5E5E5"> allowed a</font>

69
00:03:16,290 --> 00:03:22,620
<font color="#E5E5E5">unprivileged guests inside a virtual</font>

70
00:03:18,900 --> 00:03:25,470
machine to escalate into<font color="#E5E5E5"> privileges</font>

71
00:03:22,620 --> 00:03:27,630
inside the hypervisor and for that

72
00:03:25,470 --> 00:03:30,270
reason<font color="#E5E5E5"> it's really important that</font><font color="#CCCCCC"> former</font>

73
00:03:27,630 --> 00:03:33,930
vulnerabilities and from<font color="#E5E5E5"> our bugs have a</font>

74
00:03:30,270 --> 00:03:36,090
way to get patched<font color="#E5E5E5"> these aren't just</font>

75
00:03:33,930 --> 00:03:38,730
theoretical research vulnerabilities

76
00:03:36,090 --> 00:03:41,040
either<font color="#CCCCCC"> we know that there are</font><font color="#E5E5E5"> religious</font>

77
00:03:38,730 --> 00:03:44,790
<font color="#E5E5E5">organizations and hacking groups that</font>

78
00:03:41,040 --> 00:03:47,040
are selling<font color="#E5E5E5"> firmware rootkits to whoever</font>

79
00:03:44,790 --> 00:03:49,679
will pay including<font color="#E5E5E5"> nation-state</font>

80
00:03:47,040 --> 00:03:51,420
adversaries that are using them for

81
00:03:49,680 --> 00:03:54,450
<font color="#CCCCCC">they're pretty they're</font><font color="#E5E5E5"> persistent</font>

82
00:03:51,420 --> 00:03:57,720
<font color="#E5E5E5">threats and they are very persistent</font>

83
00:03:54,450 --> 00:04:00,570
<font color="#CCCCCC">because they are in the motherboard</font>

84
00:03:57,720 --> 00:04:02,880
<font color="#E5E5E5">bootrom so you reinstall the OS</font><font color="#CCCCCC"> they're</font>

85
00:04:00,570 --> 00:04:08,070
still there<font color="#CCCCCC"> you swap out the hard drive</font>

86
00:04:02,880 --> 00:04:10,769
<font color="#E5E5E5">they're still there and some vendors or</font>

87
00:04:08,070 --> 00:04:14,250
even<font color="#E5E5E5"> bundling</font><font color="#CCCCCC"> at these rootkits into</font>

88
00:04:10,770 --> 00:04:18,780
their official<font color="#E5E5E5"> roms</font><font color="#CCCCCC"> now that they are</font>

89
00:04:14,250 --> 00:04:21,690
using them to install the bloatware<font color="#E5E5E5"> or</font>

90
00:04:18,779 --> 00:04:24,869
whatever<font color="#CCCCCC"> ad where they want to put into</font>

91
00:04:21,690 --> 00:04:27,480
the OS<font color="#CCCCCC"> so even after you</font><font color="#E5E5E5"> reinstall a</font>

92
00:04:24,870 --> 00:04:30,750
clean version of the OS<font color="#E5E5E5"> this particular</font>

93
00:04:27,480 --> 00:04:34,290
vendors system would install install its

94
00:04:30,750 --> 00:04:35,910
own<font color="#CCCCCC"> editions</font><font color="#E5E5E5"> some of those</font><font color="#CCCCCC"> headphone</font><font color="#E5E5E5"> our</font>

95
00:04:34,290 --> 00:04:39,690
abilities that<font color="#E5E5E5"> can be exploited by</font>

96
00:04:35,910 --> 00:04:42,780
attackers<font color="#E5E5E5"> this particular case the</font>

97
00:04:39,690 --> 00:04:44,610
vendor was received<font color="#CCCCCC"> enough bad press</font>

98
00:04:42,780 --> 00:04:48,510
<font color="#E5E5E5">that they released a firmware update</font>

99
00:04:44,610 --> 00:04:49,950
that patch this vulnerability<font color="#E5E5E5"> and they</font>

100
00:04:48,510 --> 00:04:51,690
had to do that<font color="#E5E5E5"> this wasn't something</font>

101
00:04:49,950 --> 00:04:53,969
that the users could do on their own

102
00:04:51,690 --> 00:04:55,919
they couldn't update the<font color="#CCCCCC"> software the</font>

103
00:04:53,970 --> 00:04:58,830
firmware in their machine<font color="#CCCCCC"> the way they</font>

104
00:04:55,919 --> 00:05:02,400
do with<font color="#CCCCCC"> their operating system or an</font>

105
00:04:58,830 --> 00:05:04,469
application and in fact most<font color="#E5E5E5"> firmware</font>

106
00:05:02,400 --> 00:05:06,960
vulnerabilities<font color="#E5E5E5"> never see</font>

107
00:05:04,470 --> 00:05:11,130
<font color="#CCCCCC">patches get deployed</font><font color="#E5E5E5"> out to the</font><font color="#CCCCCC"> end-user</font>

108
00:05:06,960 --> 00:05:15,299
<font color="#E5E5E5">part of the reason for that is that the</font>

109
00:05:11,130 --> 00:05:19,830
the firmware is usually four or five

110
00:05:15,300 --> 00:05:21,720
companies<font color="#E5E5E5"> removed from the</font><font color="#CCCCCC"> end-user</font><font color="#E5E5E5"> that</font>

111
00:05:19,830 --> 00:05:24,810
there's the<font color="#CCCCCC"> open-source reference</font>

112
00:05:21,720 --> 00:05:28,140
implementation from<font color="#CCCCCC"> Intel</font><font color="#E5E5E5"> called</font><font color="#CCCCCC"> a Tino</font>

113
00:05:24,810 --> 00:05:30,120
<font color="#CCCCCC">Coury dk2</font><font color="#E5E5E5"> when vulnerabilities are</font>

114
00:05:28,140 --> 00:05:33,599
patched in there they have to get pulled

115
00:05:30,120 --> 00:05:37,560
by the<font color="#CCCCCC"> independent bios fender and</font>

116
00:05:33,600 --> 00:05:39,510
merged into the<font color="#CCCCCC"> IPV</font><font color="#E5E5E5"> tree and then the</font>

117
00:05:37,560 --> 00:05:42,600
<font color="#E5E5E5">bios vendor sells that to the device</font>

118
00:05:39,510 --> 00:05:44,400
manufacturers so they have to package up

119
00:05:42,600 --> 00:05:47,220
release that<font color="#CCCCCC"> think it's called</font><font color="#E5E5E5"> by the</font>

120
00:05:44,400 --> 00:05:49,560
device manufacture<font color="#E5E5E5"> it has to get</font><font color="#CCCCCC"> q8</font>

121
00:05:47,220 --> 00:05:51,660
<font color="#E5E5E5">against</font><font color="#CCCCCC"> how many</font><font color="#E5E5E5"> motherboards</font><font color="#CCCCCC"> they want</font>

122
00:05:49,560 --> 00:05:55,380
to test it on and then it has to get

123
00:05:51,660 --> 00:05:57,990
<font color="#E5E5E5">again pulled by the original equipment</font>

124
00:05:55,380 --> 00:06:00,330
manufacturer to get rebranded and

125
00:05:57,990 --> 00:06:01,770
whatever value they want to add<font color="#E5E5E5"> and then</font>

126
00:06:00,330 --> 00:06:04,140
sometimes it has to go through the

127
00:06:01,770 --> 00:06:06,780
operating system vendor to even make it

128
00:06:04,140 --> 00:06:09,450
out to the end user<font color="#E5E5E5"> and as a result of</font>

129
00:06:06,780 --> 00:06:10,979
this<font color="#E5E5E5"> most of the time products do not</font>

130
00:06:09,450 --> 00:06:11,940
receive any updates after they've been

131
00:06:10,980 --> 00:06:14,070
sold

132
00:06:11,940 --> 00:06:17,370
there's one exception in this chart you

133
00:06:14,070 --> 00:06:20,190
can see that<font color="#E5E5E5"> Apple it builds their own</font>

134
00:06:17,370 --> 00:06:21,660
firmware and in my work with<font color="#CCCCCC"> them</font><font color="#E5E5E5"> I've</font>

135
00:06:20,190 --> 00:06:23,880
<font color="#E5E5E5">been really pleased that they've rolled</font>

136
00:06:21,660 --> 00:06:27,570
out<font color="#CCCCCC"> patches for</font><font color="#E5E5E5"> eight years of hardware</font>

137
00:06:23,880 --> 00:06:32,430
<font color="#CCCCCC">which</font><font color="#E5E5E5"> is above and beyond what any other</font>

138
00:06:27,570 --> 00:06:35,610
firm or vendor is doing right now when

139
00:06:32,430 --> 00:06:40,770
<font color="#CCCCCC">efi was introduced</font><font color="#E5E5E5"> it brought a lot of</font>

140
00:06:35,610 --> 00:06:43,830
complexity and that that the<font color="#E5E5E5"> Linux</font>

141
00:06:40,770 --> 00:06:46,710
community was very skeptical as to what

142
00:06:43,830 --> 00:06:48,210
the value was going to be provided by

143
00:06:46,710 --> 00:06:50,340
all this complexity it's basically an

144
00:06:48,210 --> 00:06:54,150
entire operating systems worth of code

145
00:06:50,340 --> 00:06:57,119
and it's not that the 16-bit<font color="#CCCCCC"> real-mode</font>

146
00:06:54,150 --> 00:07:01,140
<font color="#CCCCCC">bios</font><font color="#E5E5E5"> was all that much better in fact it</font>

147
00:06:57,120 --> 00:07:03,630
had its own set of issues but it was

148
00:07:01,140 --> 00:07:07,560
small it was simple it did one thing it

149
00:07:03,630 --> 00:07:10,710
did<font color="#E5E5E5"> it</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> now and it took a long time</font>

150
00:07:07,560 --> 00:07:14,700
for unified even become widely supported

151
00:07:10,710 --> 00:07:17,520
<font color="#E5E5E5">but even now</font><font color="#CCCCCC"> most</font><font color="#E5E5E5"> systems ship with</font>

152
00:07:14,700 --> 00:07:20,010
both the UEFI<font color="#E5E5E5"> and a</font><font color="#CCCCCC"> bios</font><font color="#E5E5E5"> compatibility</font>

153
00:07:17,520 --> 00:07:22,229
module<font color="#E5E5E5"> so basically doubled their attack</font>

154
00:07:20,010 --> 00:07:25,260
surface for potential bugs and

155
00:07:22,230 --> 00:07:28,530
vulnerabilities<font color="#CCCCCC"> so the state of the</font>

156
00:07:25,260 --> 00:07:32,460
firmware world today is that that the

157
00:07:28,530 --> 00:07:34,080
updates are rare<font color="#E5E5E5"> patches</font><font color="#CCCCCC"> if they ever</font>

158
00:07:32,460 --> 00:07:36,239
come out take a long time to make it

159
00:07:34,080 --> 00:07:40,050
through the process<font color="#E5E5E5"> users can't fix</font>

160
00:07:36,240 --> 00:07:41,460
things on their own and we can't see

161
00:07:40,050 --> 00:07:43,620
what's inside since most of them are

162
00:07:41,460 --> 00:07:45,750
built with<font color="#CCCCCC"> closed source components</font><font color="#E5E5E5"> and</font>

163
00:07:43,620 --> 00:07:49,740
that's not a great<font color="#E5E5E5"> state for something</font>

164
00:07:45,750 --> 00:07:53,070
that is as privileged as<font color="#E5E5E5"> firmware so</font>

165
00:07:49,740 --> 00:07:55,080
it's my belief that firmware<font color="#E5E5E5"> needs to be</font>

166
00:07:53,070 --> 00:07:57,690
built with<font color="#CCCCCC"> open-source it must be</font>

167
00:07:55,080 --> 00:07:59,880
flexible so we can adapt it to our needs

168
00:07:57,690 --> 00:08:02,670
for our systems<font color="#CCCCCC"> it needs to be built</font>

169
00:07:59,880 --> 00:08:06,750
with software that we understand<font color="#E5E5E5"> and we</font>

170
00:08:02,670 --> 00:08:09,780
use<font color="#E5E5E5"> for in other applications so that it</font>

171
00:08:06,750 --> 00:08:11,280
can get<font color="#E5E5E5"> widely tested and well tested it</font>

172
00:08:09,780 --> 00:08:13,559
needs to be built in a reproducible

173
00:08:11,280 --> 00:08:17,520
manner so that we can be secure against

174
00:08:13,560 --> 00:08:19,410
<font color="#E5E5E5">not build</font><font color="#CCCCCC"> chain attacks and it needs to</font>

175
00:08:17,520 --> 00:08:22,049
be cryptographically measured<font color="#CCCCCC"> so that we</font>

176
00:08:19,410 --> 00:08:23,910
can be sure that this what we<font color="#CCCCCC"> flashed on</font>

177
00:08:22,050 --> 00:08:28,140
the system is what is actually running

178
00:08:23,910 --> 00:08:31,860
on the system and that's the philosophy

179
00:08:28,140 --> 00:08:34,559
behind heads<font color="#CCCCCC"> it's built on</font><font color="#E5E5E5"> now the</font><font color="#CCCCCC"> free</font>

180
00:08:31,860 --> 00:08:36,810
<font color="#CCCCCC">software</font><font color="#E5E5E5"> coreboot firmware that plus a</font>

181
00:08:34,559 --> 00:08:39,780
<font color="#E5E5E5">linux kernel and rom that acts as a</font>

182
00:08:36,809 --> 00:08:45,329
<font color="#E5E5E5">bootloader and then a lot of security</font>

183
00:08:39,780 --> 00:08:47,339
research and tools that help us try to

184
00:08:45,330 --> 00:08:52,020
build a slightly more secure systems

185
00:08:47,340 --> 00:08:54,660
using<font color="#E5E5E5"> linux as a bootloader is not a</font>

186
00:08:52,020 --> 00:08:57,180
particularly new idea<font color="#CCCCCC"> got back in the</font>

187
00:08:54,660 --> 00:08:59,760
nineteen nineties<font color="#CCCCCC"> that when we started</font>

188
00:08:57,180 --> 00:09:02,969
building<font color="#E5E5E5"> large-scale</font><font color="#CCCCCC"> linux clusters</font><font color="#E5E5E5"> we</font>

189
00:08:59,760 --> 00:09:07,110
were<font color="#E5E5E5"> very frustrated with the the the</font>

190
00:09:02,970 --> 00:09:10,020
inflexibility of<font color="#CCCCCC"> dhcp</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> pixie booting</font>

191
00:09:07,110 --> 00:09:12,930
<font color="#E5E5E5">about large machines now even with</font><font color="#CCCCCC"> those</font>

192
00:09:10,020 --> 00:09:15,449
frustrations<font color="#CCCCCC"> we built one knows about</font>

193
00:09:12,930 --> 00:09:17,130
the<font color="#CCCCCC"> 30th fastest in the</font><font color="#E5E5E5"> world on the top</font>

194
00:09:15,450 --> 00:09:21,240
<font color="#E5E5E5">500</font>

195
00:09:17,130 --> 00:09:23,670
meanwhile my<font color="#CCCCCC"> colleague Ron minik</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> Los</font>

196
00:09:21,240 --> 00:09:26,870
<font color="#CCCCCC">Alamos</font><font color="#E5E5E5"> was also built in large clusters</font>

197
00:09:23,670 --> 00:09:30,260
and had the observation that the<font color="#E5E5E5"> bios</font>

198
00:09:26,870 --> 00:09:32,779
<font color="#E5E5E5">enumerates all the buses initialize the</font>

199
00:09:30,260 --> 00:09:34,939
bunch of devices<font color="#E5E5E5"> finds the linux kernel</font>

200
00:09:32,779 --> 00:09:37,910
<font color="#E5E5E5">and then and</font><font color="#CCCCCC"> then the linux kernel</font>

201
00:09:34,940 --> 00:09:39,710
<font color="#E5E5E5">enumerates all the buses initializes all</font>

202
00:09:37,910 --> 00:09:43,939
the devices and he thought this is

203
00:09:39,710 --> 00:09:46,700
vasily<font color="#CCCCCC"> why are</font><font color="#E5E5E5"> we doing this twice</font><font color="#CCCCCC"> so he</font>

204
00:09:43,940 --> 00:09:49,670
had the idea to build a version of<font color="#CCCCCC"> linux</font>

205
00:09:46,700 --> 00:09:53,150
that ran in<font color="#E5E5E5"> in the rom he called this</font>

206
00:09:49,670 --> 00:09:55,640
project lips<font color="#E5E5E5"> that</font><font color="#CCCCCC"> linux bios</font><font color="#E5E5E5"> and it went</font>

207
00:09:53,150 --> 00:09:58,010
on to power the MRC cluster which was

208
00:09:55,640 --> 00:10:04,550
the<font color="#E5E5E5"> third fastest machine in the world</font>

209
00:09:58,010 --> 00:10:06,770
in a 2003<font color="#E5E5E5"> in 2008</font><font color="#CCCCCC"> linux bios underwent a</font>

210
00:10:04,550 --> 00:10:10,640
major refactoring<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it was renamed to</font>

211
00:10:06,770 --> 00:10:13,250
<font color="#CCCCCC">corbeau</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> Google chose to use coreboot</font>

212
00:10:10,640 --> 00:10:16,850
as the firmware on<font color="#E5E5E5"> their</font><font color="#CCCCCC"> Chromebooks now</font>

213
00:10:13,250 --> 00:10:21,140
which are at this point the only<font color="#E5E5E5"> not</font><font color="#CCCCCC"> non</font>

214
00:10:16,850 --> 00:10:24,440
<font color="#E5E5E5">UEFI x86-based laptops that you can buy</font>

215
00:10:21,140 --> 00:10:26,720
and they've done<font color="#CCCCCC"> a</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> some great</font>

216
00:10:24,440 --> 00:10:28,250
work<font color="#CCCCCC"> in</font><font color="#E5E5E5"> trying to lock down the</font>

217
00:10:26,720 --> 00:10:33,500
configuration and the firmware on the

218
00:10:28,250 --> 00:10:36,740
Chromebooks<font color="#CCCCCC"> run recently moved to google</font>

219
00:10:33,500 --> 00:10:43,790
in 2011 and is continuing to work on the

220
00:10:36,740 --> 00:10:46,640
<font color="#CCCCCC">core group project their</font><font color="#E5E5E5"> the area so</font>

221
00:10:43,790 --> 00:10:48,740
<font color="#CCCCCC">coreboot has three stages that it goes</font>

222
00:10:46,640 --> 00:10:51,860
through as it starts up the machine

223
00:10:48,740 --> 00:10:54,830
the first one is a very small amount of

224
00:10:51,860 --> 00:10:57,680
real<font color="#E5E5E5"> motor assembly that because your</font>

225
00:10:54,830 --> 00:11:00,980
modern<font color="#E5E5E5"> 64 laptop still</font><font color="#CCCCCC"> boots up in that</font>

226
00:10:57,680 --> 00:11:04,160
in real mode with 16-bit just like<font color="#CCCCCC"> it's</font>

227
00:11:00,980 --> 00:11:05,720
nineteen<font color="#E5E5E5"> seventies</font><font color="#CCCCCC"> so it's a very</font><font color="#E5E5E5"> small</font>

228
00:11:04,160 --> 00:11:09,860
<font color="#CCCCCC">amount of code about one-and-a-half k</font>

229
00:11:05,720 --> 00:11:12,589
<font color="#E5E5E5">that</font><font color="#CCCCCC"> in turn sets up</font><font color="#E5E5E5"> AC</font><font color="#CCCCCC"> runtime</font>

230
00:11:09,860 --> 00:11:15,470
<font color="#E5E5E5">environment with what's called</font><font color="#CCCCCC"> caches</font>

231
00:11:12,589 --> 00:11:19,220
<font color="#CCCCCC">ram mode and it calls into the rom stage</font>

232
00:11:15,470 --> 00:11:22,580
which is about<font color="#E5E5E5"> 70k heads has moved the</font>

233
00:11:19,220 --> 00:11:25,130
<font color="#E5E5E5">the TPM initialization early in the rom</font>

234
00:11:22,580 --> 00:11:29,029
stage before<font color="#CCCCCC"> DRAM</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> set up to help</font>

235
00:11:25,130 --> 00:11:32,390
measure the boot block and provide a

236
00:11:29,029 --> 00:11:35,089
<font color="#E5E5E5">static route of trust</font><font color="#CCCCCC"> is hopefully a</font>

237
00:11:32,390 --> 00:11:37,370
little bit more secure<font color="#CCCCCC"> again</font><font color="#E5E5E5"> because</font>

238
00:11:35,089 --> 00:11:38,900
that measurement is done early on<font color="#E5E5E5"> our</font>

239
00:11:37,370 --> 00:11:39,590
trusted computing<font color="#E5E5E5"> base is actually quite</font>

240
00:11:38,900 --> 00:11:42,949
small

241
00:11:39,590 --> 00:11:45,890
<font color="#E5E5E5">this is a fraction of one percent of the</font>

242
00:11:42,950 --> 00:11:50,330
size of a UEFI firmware which is usually

243
00:11:45,890 --> 00:11:53,270
about 16 megs<font color="#E5E5E5"> once</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> uncompressed the</font>

244
00:11:50,330 --> 00:11:55,760
<font color="#CCCCCC">rom stage then measures and</font><font color="#E5E5E5"> execute the</font>

245
00:11:53,270 --> 00:11:59,510
<font color="#CCCCCC">ram stage which does the more</font>

246
00:11:55,760 --> 00:12:01,280
traditional<font color="#CCCCCC"> walk the bus find fear</font><font color="#E5E5E5"> what</font>

247
00:11:59,510 --> 00:12:03,080
devices are on there but it<font color="#E5E5E5"> doesn't</font>

248
00:12:01,280 --> 00:12:06,319
initialize them<font color="#CCCCCC"> and just</font><font color="#E5E5E5"> enumerates them</font>

249
00:12:03,080 --> 00:12:09,110
and<font color="#CCCCCC"> generates the descriptors for</font><font color="#E5E5E5"> linux</font>

250
00:12:06,320 --> 00:12:12,770
<font color="#CCCCCC">also installs the SMN handler for system</font>

251
00:12:09,110 --> 00:12:14,900
management mode it<font color="#CCCCCC"> in measures and jumps</font>

252
00:12:12,770 --> 00:12:21,590
into the payload and that whole process

253
00:12:14,900 --> 00:12:23,360
takes less than a second so the is able

254
00:12:21,590 --> 00:12:25,160
to get into the payload<font color="#CCCCCC"> and actually get</font>

255
00:12:23,360 --> 00:12:29,150
to the<font color="#E5E5E5"> the user code very very quickly</font>

256
00:12:25,160 --> 00:12:31,579
on something like<font color="#E5E5E5"> the</font><font color="#CCCCCC"> x230</font><font color="#E5E5E5"> that it's</font>

257
00:12:29,150 --> 00:12:33,860
able to go from power on to a

258
00:12:31,580 --> 00:12:36,680
interactive recovery<font color="#E5E5E5"> shell in less than</font>

259
00:12:33,860 --> 00:12:38,930
two seconds and then includes bring<font color="#E5E5E5"> up</font>

260
00:12:36,680 --> 00:12:40,910
the TPM<font color="#E5E5E5"> doing cryptographic measurements</font>

261
00:12:38,930 --> 00:12:44,900
and assessing the state of the system

262
00:12:40,910 --> 00:12:46,819
because we now have<font color="#E5E5E5"> linux</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> this point</font>

263
00:12:44,900 --> 00:12:50,060
we have all the flexibility that comes

264
00:12:46,820 --> 00:12:53,210
with that we can implement<font color="#CCCCCC"> which scripts</font>

265
00:12:50,060 --> 00:12:55,609
<font color="#E5E5E5">as with the full power of the shell or</font>

266
00:12:53,210 --> 00:12:59,900
the<font color="#CCCCCC"> C language</font><font color="#E5E5E5"> runtime</font><font color="#CCCCCC"> we're not stuck</font>

267
00:12:55,610 --> 00:13:01,880
with the limited functions of<font color="#E5E5E5"> UEFI</font><font color="#CCCCCC"> linux</font>

268
00:12:59,900 --> 00:13:03,740
<font color="#CCCCCC">supports</font><font color="#E5E5E5"> lots of different file systems</font>

269
00:13:01,880 --> 00:13:05,600
<font color="#CCCCCC">it supports lots of different devices</font>

270
00:13:03,740 --> 00:13:08,120
<font color="#E5E5E5">supports lots of different encryption</font>

271
00:13:05,600 --> 00:13:10,280
methods and this gives us the ability to

272
00:13:08,120 --> 00:13:14,900
use any of them for your specific

273
00:13:10,280 --> 00:13:18,680
application<font color="#E5E5E5"> in contrast to a UEFI which</font>

274
00:13:14,900 --> 00:13:20,780
supports unencrypted<font color="#E5E5E5"> fat file systems on</font>

275
00:13:18,680 --> 00:13:22,699
the first drive that have to be in the

276
00:13:20,780 --> 00:13:25,310
first one gig or something it's really

277
00:13:22,700 --> 00:13:31,340
really limited as to how it can find its

278
00:13:25,310 --> 00:13:32,930
boot device<font color="#E5E5E5"> there's a saying in the in</font>

279
00:13:31,340 --> 00:13:34,970
the open source community that with

280
00:13:32,930 --> 00:13:38,660
enough up with enough<font color="#CCCCCC"> eyes all bugs are</font>

281
00:13:34,970 --> 00:13:41,300
shallow and<font color="#CCCCCC"> linux</font><font color="#E5E5E5"> has a lot more eyes</font>

282
00:13:38,660 --> 00:13:43,280
looking at it that<font color="#CCCCCC"> you have the device</font>

283
00:13:41,300 --> 00:13:47,150
drivers and the file systems<font color="#CCCCCC"> and the</font>

284
00:13:43,280 --> 00:13:50,180
encryption<font color="#E5E5E5"> have been reviewed by</font><font color="#CCCCCC"> both</font>

285
00:13:47,150 --> 00:13:53,569
<font color="#E5E5E5">white hat and black hat</font>

286
00:13:50,180 --> 00:13:56,420
<font color="#E5E5E5">people around the world the the UEFI</font>

287
00:13:53,570 --> 00:13:59,450
<font color="#E5E5E5">versions of these do not have that same</font>

288
00:13:56,420 --> 00:14:02,660
level of scrutiny<font color="#CCCCCC"> so</font><font color="#E5E5E5"> we're using both</font>

289
00:13:59,450 --> 00:14:04,940
the UEFI drivers and then having to run

290
00:14:02,660 --> 00:14:07,310
<font color="#E5E5E5">whatever on top of it increases the</font>

291
00:14:04,940 --> 00:14:09,800
attack surface<font color="#CCCCCC"> but by putting linux in</font>

292
00:14:07,310 --> 00:14:12,079
the<font color="#E5E5E5"> rom</font><font color="#CCCCCC"> independent on its drivers we've</font>

293
00:14:09,800 --> 00:14:16,099
reduced our tax surface<font color="#E5E5E5"> very</font>

294
00:14:12,080 --> 00:14:19,250
dramatically more importantly<font color="#E5E5E5"> though</font>

295
00:14:16,100 --> 00:14:22,190
<font color="#CCCCCC">coreboot and clinics</font><font color="#E5E5E5"> are open</font><font color="#CCCCCC"> source so</font>

296
00:14:19,250 --> 00:14:24,529
it is possible to build custom versions

297
00:14:22,190 --> 00:14:26,450
for the device drivers that you need for

298
00:14:24,529 --> 00:14:28,760
the file systems that you need<font color="#CCCCCC"> is</font>

299
00:14:26,450 --> 00:14:31,459
<font color="#E5E5E5">possible to fix bugs when they come out</font>

300
00:14:28,760 --> 00:14:33,770
and sign and install your own<font color="#CCCCCC"> Colonel's</font>

301
00:14:31,459 --> 00:14:37,579
<font color="#CCCCCC">you don't have to wait for the add the</font>

302
00:14:33,770 --> 00:14:42,170
vendor to get around to doing<font color="#CCCCCC"> that and</font>

303
00:14:37,580 --> 00:14:44,899
<font color="#E5E5E5">the third</font><font color="#CCCCCC"> major component of</font><font color="#E5E5E5"> of heads is</font>

304
00:14:42,170 --> 00:14:46,760
a tool called<font color="#CCCCCC"> k exact which is a system</font>

305
00:14:44,899 --> 00:14:49,339
call that was added for the<font color="#CCCCCC"> linux bios</font>

306
00:14:46,760 --> 00:14:52,790
<font color="#E5E5E5">project back in 2003</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> Erik Biedermann</font>

307
00:14:49,339 --> 00:14:55,610
<font color="#E5E5E5">that allows a running kernel to do a</font>

308
00:14:52,790 --> 00:14:57,890
graceful shutdown and start a new kernel

309
00:14:55,610 --> 00:15:01,279
<font color="#E5E5E5">without having to go through the for the</font>

310
00:14:57,890 --> 00:15:02,569
<font color="#CCCCCC">every</font><font color="#E5E5E5"> boot</font><font color="#CCCCCC"> process</font><font color="#E5E5E5"> so this allowed it on</font>

311
00:15:01,279 --> 00:15:05,270
their application that allows them to

312
00:15:02,570 --> 00:15:08,330
very fast reboots<font color="#E5E5E5"> of the cluster nodes</font>

313
00:15:05,270 --> 00:15:10,400
and in the heads case<font color="#CCCCCC"> it allows us to</font>

314
00:15:08,330 --> 00:15:13,459
act as a<font color="#E5E5E5"> bootloader</font><font color="#CCCCCC"> where we can find</font>

315
00:15:10,400 --> 00:15:15,500
the real<font color="#CCCCCC"> Colonel that you want to run</font><font color="#E5E5E5"> an</font>

316
00:15:13,459 --> 00:15:17,449
<font color="#CCCCCC">exact it because</font><font color="#E5E5E5"> heads is quite small</font>

317
00:15:15,500 --> 00:15:21,080
<font color="#CCCCCC">and it</font><font color="#E5E5E5"> has to fit in</font><font color="#CCCCCC"> four megabytes of</font>

318
00:15:17,450 --> 00:15:23,029
<font color="#CCCCCC">ROM so</font><font color="#E5E5E5"> it's not something that you're</font>

319
00:15:21,080 --> 00:15:31,279
going to run as a day-to-day sort<font color="#E5E5E5"> of</font><font color="#CCCCCC"> us</font>

320
00:15:23,029 --> 00:15:39,019
<font color="#E5E5E5">hopefully this won't explode on me again</font>

321
00:15:31,279 --> 00:15:40,939
<font color="#E5E5E5">because we have the bourne shell most of</font>

322
00:15:39,019 --> 00:15:43,759
the policies<font color="#CCCCCC"> in the startup</font><font color="#E5E5E5"> scripts in</font>

323
00:15:40,939 --> 00:15:48,769
heads are implemented as<font color="#CCCCCC"> shell scripts</font>

324
00:15:43,759 --> 00:15:50,449
in<font color="#E5E5E5"> this case</font><font color="#CCCCCC"> we're able to pass in a new</font>

325
00:15:48,769 --> 00:15:52,939
set of command line parameters<font color="#CCCCCC"> a new</font>

326
00:15:50,449 --> 00:15:56,719
<font color="#E5E5E5">initial</font><font color="#CCCCCC"> ramdisk</font><font color="#E5E5E5"> and in this case we can</font>

327
00:15:52,939 --> 00:15:59,449
even start a hypervisor<font color="#E5E5E5"> and all that can</font>

328
00:15:56,720 --> 00:16:05,120
happen very<font color="#CCCCCC"> very quickly as well as with</font>

329
00:15:59,449 --> 00:16:07,459
that with a good degree of security<font color="#E5E5E5"> so</font>

330
00:16:05,120 --> 00:16:09,980
those<font color="#E5E5E5"> are the building blocks that</font><font color="#CCCCCC"> has</font>

331
00:16:07,459 --> 00:16:13,309
built on<font color="#CCCCCC"> Corps boot</font><font color="#E5E5E5"> linux and tools like</font>

332
00:16:09,980 --> 00:16:15,800
a exact but it<font color="#E5E5E5"> it now gives us</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> nice</font>

333
00:16:13,309 --> 00:16:20,089
platform to begin experimenting with

334
00:16:15,800 --> 00:16:21,769
additional security features<font color="#E5E5E5"> and before</font>

335
00:16:20,089 --> 00:16:24,259
we go too deep down the rabbit hole of

336
00:16:21,769 --> 00:16:26,209
you know security<font color="#CCCCCC"> threat models i want</font>

337
00:16:24,259 --> 00:16:28,550
to quote my<font color="#E5E5E5"> friend staff who said that</font>

338
00:16:26,209 --> 00:16:30,949
<font color="#E5E5E5">your threat model is not my threat model</font>

339
00:16:28,550 --> 00:16:33,439
but<font color="#CCCCCC"> you know your threat</font><font color="#E5E5E5"> model is ok as</font>

340
00:16:30,949 --> 00:16:35,209
well that we all have different things

341
00:16:33,439 --> 00:16:36,469
we want to protect from different

342
00:16:35,209 --> 00:16:38,268
attackers who are willing to spend

343
00:16:36,470 --> 00:16:40,610
different amounts of effort to go after

344
00:16:38,269 --> 00:16:43,339
them<font color="#E5E5E5"> and the nice thing about having an</font>

345
00:16:40,610 --> 00:16:47,149
open<font color="#E5E5E5"> source is we can build systems</font>

346
00:16:43,339 --> 00:16:48,980
<font color="#E5E5E5">tailored to your individual threat model</font>

347
00:16:47,149 --> 00:16:51,860
<font color="#CCCCCC">to a lot</font><font color="#E5E5E5"> of these things may not</font>

348
00:16:48,980 --> 00:16:54,110
actually apply to your specific threads

349
00:16:51,860 --> 00:16:59,360
<font color="#E5E5E5">but the fact that we can build them is a</font>

350
00:16:54,110 --> 00:17:03,199
great capability<font color="#E5E5E5"> last year</font>

351
00:16:59,360 --> 00:17:06,349
<font color="#CCCCCC">johanna basket reminds</font><font color="#E5E5E5"> us that firmware</font>

352
00:17:03,199 --> 00:17:09,408
is not just in our<font color="#CCCCCC"> cpu</font><font color="#E5E5E5"> firmware is in</font>

353
00:17:06,349 --> 00:17:13,099
our Wi-Fi card<font color="#CCCCCC"> it is in our GPU it is in</font>

354
00:17:09,409 --> 00:17:14,839
our SSD<font color="#CCCCCC"> it is in our keyboards and all</font>

355
00:17:13,099 --> 00:17:19,458
of these devices might be trying to

356
00:17:14,839 --> 00:17:22,280
support the boot process<font color="#E5E5E5"> one way to</font>

357
00:17:19,459 --> 00:17:25,669
handle that is to take<font color="#E5E5E5"> Peter students</font>

358
00:17:22,280 --> 00:17:28,369
device of<font color="#CCCCCC"> just</font><font color="#E5E5E5"> simply machine and</font>

359
00:17:25,669 --> 00:17:30,440
ripping out anything we can't control<font color="#E5E5E5"> if</font>

360
00:17:28,369 --> 00:17:32,600
this is your threat model<font color="#CCCCCC"> he had</font><font color="#E5E5E5"> his</font>

361
00:17:30,440 --> 00:17:34,039
instructions are really worth following

362
00:17:32,600 --> 00:17:38,149
<font color="#CCCCCC">they're really throw about it what</font>

363
00:17:34,039 --> 00:17:40,730
pieces are potentially of concern and

364
00:17:38,149 --> 00:17:42,889
<font color="#E5E5E5">you're going right now you'll have to</font>

365
00:17:40,730 --> 00:17:43,850
open up your laptop to install heads

366
00:17:42,890 --> 00:17:46,010
it's a

367
00:17:43,850 --> 00:17:48,289
<font color="#E5E5E5">it's not quite as easy to install as</font>

368
00:17:46,010 --> 00:17:50,539
most<font color="#CCCCCC"> linux distributions</font><font color="#E5E5E5"> because we have</font>

369
00:17:48,289 --> 00:17:54,260
to flash it into the motherboard bootrom

370
00:17:50,539 --> 00:17:56,660
while we're in there<font color="#E5E5E5"> now we take</font>

371
00:17:54,260 --> 00:17:59,059
advantage of some features that<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

372
00:17:56,660 --> 00:18:02,240
best<font color="#CCCCCC"> of my</font><font color="#E5E5E5"> knowledge no</font><font color="#CCCCCC"> you fi</font><font color="#E5E5E5"> systems</font>

373
00:17:59,059 --> 00:18:05,090
using these flash<font color="#E5E5E5"> chips have a hardware</font>

374
00:18:02,240 --> 00:18:09,740
<font color="#CCCCCC">right</font><font color="#E5E5E5"> protect mode where you can specify</font>

375
00:18:05,090 --> 00:18:13,100
<font color="#E5E5E5">part of the chip is is right only</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> is</font>

376
00:18:09,740 --> 00:18:15,530
<font color="#E5E5E5">read-only now</font><font color="#CCCCCC"> right once and this gives</font>

377
00:18:13,100 --> 00:18:18,379
us<font color="#E5E5E5"> are</font><font color="#CCCCCC"> immutable</font><font color="#E5E5E5"> boot block in which to</font>

378
00:18:15,530 --> 00:18:20,330
store the<font color="#E5E5E5"> trusted computing</font><font color="#CCCCCC"> base the TCB</font>

379
00:18:18,380 --> 00:18:23,299
<font color="#CCCCCC">so that we can measure the rest of the</font>

380
00:18:20,330 --> 00:18:26,090
system<font color="#CCCCCC"> we also then suggest</font>

381
00:18:23,299 --> 00:18:28,490
disconnecting the right protect pin from

382
00:18:26,090 --> 00:18:32,658
the motherboard which protects against

383
00:18:28,490 --> 00:18:34,400
certain<font color="#E5E5E5"> classes attacks like the the</font>

384
00:18:32,659 --> 00:18:39,440
<font color="#CCCCCC">until close</font><font color="#E5E5E5"> chassis adapter that allows</font>

385
00:18:34,400 --> 00:18:40,640
external<font color="#E5E5E5"> jtag of the</font><font color="#CCCCCC"> cpu depend on your</font>

386
00:18:39,440 --> 00:18:43,220
<font color="#CCCCCC">threat more you might want to cover that</font>

387
00:18:40,640 --> 00:18:45,500
<font color="#CCCCCC">chip</font><font color="#E5E5E5"> in epoxy as well to frustrate that</font>

388
00:18:43,220 --> 00:18:47,270
<font color="#CCCCCC">you've made attacks that want</font><font color="#E5E5E5"> to do a</font>

389
00:18:45,500 --> 00:18:50,150
physical<font color="#E5E5E5"> programming on it</font>

390
00:18:47,270 --> 00:18:53,418
disconnecting the<font color="#E5E5E5"> right protect</font><font color="#CCCCCC"> pin</font><font color="#E5E5E5"> also</font>

391
00:18:50,150 --> 00:18:55,429
serves to protect from other devices on

392
00:18:53,419 --> 00:18:58,580
the machine that have access to those

393
00:18:55,429 --> 00:19:04,610
pens<font color="#E5E5E5"> devices like the management engine</font>

394
00:18:58,580 --> 00:19:08,629
which is a really scary<font color="#CCCCCC"> cpu inside the</font>

395
00:19:04,610 --> 00:19:14,000
<font color="#E5E5E5">CPU</font><font color="#CCCCCC"> and rid of America two years</font><font color="#E5E5E5"> ago</font><font color="#CCCCCC"> DC</font>

396
00:19:08,630 --> 00:19:17,630
called at the<font color="#E5E5E5"> matroska</font><font color="#CCCCCC"> cpu and I were</font>

397
00:19:14,000 --> 00:19:19,460
<font color="#CCCCCC">description</font><font color="#E5E5E5"> ski detailed</font><font color="#CCCCCC"> what are the</font>

398
00:19:17,630 --> 00:19:21,650
capabilities of the management engine

399
00:19:19,460 --> 00:19:26,360
and<font color="#E5E5E5"> they're really worrisome that it</font>

400
00:19:21,650 --> 00:19:29,059
runs a<font color="#E5E5E5"> opaque obfuscating blob of code</font>

401
00:19:26,360 --> 00:19:32,090
about<font color="#E5E5E5"> five megabytes that the CPU can</font>

402
00:19:29,059 --> 00:19:35,030
see the management engine can read and

403
00:19:32,090 --> 00:19:37,428
write all of main memory<font color="#E5E5E5"> it can read</font>

404
00:19:35,030 --> 00:19:40,399
from the keyboard<font color="#CCCCCC"> and</font><font color="#E5E5E5"> video it can</font>

405
00:19:37,429 --> 00:19:42,260
<font color="#E5E5E5">receive java bytecodes over the network</font>

406
00:19:40,400 --> 00:19:44,960
and execute them on behalf of someone

407
00:19:42,260 --> 00:19:46,820
outside the<font color="#CCCCCC"> Machine and</font><font color="#E5E5E5"> it's listening</font>

408
00:19:44,960 --> 00:19:50,419
on the network even when<font color="#CCCCCC"> systems powered</font>

409
00:19:46,820 --> 00:19:53,000
<font color="#CCCCCC">off so this is basically a rootkit</font>

410
00:19:50,419 --> 00:19:55,340
inside the<font color="#E5E5E5"> chipset as some folks have</font>

411
00:19:53,000 --> 00:19:58,460
called it so

412
00:19:55,340 --> 00:20:00,740
<font color="#E5E5E5">that</font><font color="#CCCCCC"> concerned me a</font><font color="#E5E5E5"> lot and</font><font color="#CCCCCC"> I spent some</font>

413
00:19:58,460 --> 00:20:03,230
<font color="#E5E5E5">time looking at how</font><font color="#CCCCCC"> its firmware images</font>

414
00:20:00,740 --> 00:20:06,980
are built and<font color="#CCCCCC"> realized that we can build</font>

415
00:20:03,230 --> 00:20:09,950
modified<font color="#E5E5E5"> reduced functionality firmware</font>

416
00:20:06,980 --> 00:20:13,520
for it<font color="#CCCCCC"> that</font><font color="#E5E5E5"> removes all of the rootkit</font>

417
00:20:09,950 --> 00:20:15,890
functions and just leaves the<font color="#CCCCCC"> cpu bring</font>

418
00:20:13,520 --> 00:20:18,650
up module<font color="#E5E5E5"> this takes that five megabytes</font>

419
00:20:15,890 --> 00:20:23,570
and<font color="#CCCCCC"> shrinks it</font><font color="#E5E5E5"> down to about about 40k</font>

420
00:20:18,650 --> 00:20:26,240
<font color="#E5E5E5">of space so we don't know exactly what</font>

421
00:20:23,570 --> 00:20:28,159
<font color="#E5E5E5">it's doing in that 40k</font><font color="#CCCCCC"> but we at least</font>

422
00:20:26,240 --> 00:20:30,200
know it doesn't have a device driver or

423
00:20:28,160 --> 00:20:32,990
java virtual machine or a lot of the

424
00:20:30,200 --> 00:20:36,110
other functions and<font color="#E5E5E5"> we've successfully</font>

425
00:20:32,990 --> 00:20:39,170
done this on both<font color="#CCCCCC"> sandy</font><font color="#E5E5E5"> bridge and</font><font color="#CCCCCC"> ivy</font>

426
00:20:36,110 --> 00:20:42,139
<font color="#CCCCCC">bridge with</font><font color="#E5E5E5"> x230</font><font color="#CCCCCC"> thinkpads</font><font color="#E5E5E5"> as well as</font>

427
00:20:39,170 --> 00:20:43,910
modern<font color="#CCCCCC"> a</font><font color="#E5E5E5"> skylake</font><font color="#CCCCCC"> cpus</font><font color="#E5E5E5"> like the</font><font color="#CCCCCC"> Chelle</font>

428
00:20:42,140 --> 00:20:46,400
Chromebook<font color="#CCCCCC"> and that's really encouraging</font>

429
00:20:43,910 --> 00:20:49,790
<font color="#CCCCCC">that if we can apply this to more modern</font>

430
00:20:46,400 --> 00:20:52,070
hardware that allows us to you know move

431
00:20:49,790 --> 00:20:53,930
away from<font color="#CCCCCC"> our our five-year-old I and I</font>

432
00:20:52,070 --> 00:20:58,909
think pads to something<font color="#E5E5E5"> a little shinier</font>

433
00:20:53,930 --> 00:21:01,190
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> like the management engine isn't</font>

434
00:20:58,910 --> 00:21:03,350
the only device that might be trying to

435
00:21:01,190 --> 00:21:05,030
<font color="#E5E5E5">spread the boot process you again</font>

436
00:21:03,350 --> 00:21:08,240
<font color="#CCCCCC">Johanna showed us there are lots of</font>

437
00:21:05,030 --> 00:21:10,610
things to be worried about<font color="#CCCCCC"> Intel's</font><font color="#E5E5E5"> UEFI</font>

438
00:21:08,240 --> 00:21:13,760
<font color="#E5E5E5">architects</font><font color="#CCCCCC"> yeah and Zimmer recommend</font>

439
00:21:10,610 --> 00:21:16,850
that firmware turn on the<font color="#E5E5E5"> iommu</font><font color="#CCCCCC"> now</font>

440
00:21:13,760 --> 00:21:20,570
called<font color="#E5E5E5"> v TD to protect against</font><font color="#CCCCCC"> road</font>

441
00:21:16,850 --> 00:21:23,120
devices to the best of my knowledge<font color="#E5E5E5"> as</font>

442
00:21:20,570 --> 00:21:25,040
<font color="#E5E5E5">they've written this guide and no UEFI</font>

443
00:21:23,120 --> 00:21:28,070
firmware is taking advantage of the

444
00:21:25,040 --> 00:21:29,930
<font color="#CCCCCC">iommu so it's a great piece of hardware</font>

445
00:21:28,070 --> 00:21:33,800
to have but it doesn't help if you don't

446
00:21:29,930 --> 00:21:36,620
turn it on<font color="#E5E5E5"> that</font><font color="#CCCCCC"> linux</font><font color="#E5E5E5"> that meanwhile has</font>

447
00:21:33,800 --> 00:21:38,780
no problem taking advantage of it<font color="#CCCCCC"> so we</font>

448
00:21:36,620 --> 00:21:41,179
<font color="#E5E5E5">use it</font><font color="#CCCCCC"> to have</font><font color="#E5E5E5"> what we get essentially</font>

449
00:21:38,780 --> 00:21:43,580
we get that DNA protection for free by

450
00:21:41,180 --> 00:21:48,770
using<font color="#CCCCCC"> linux is our bootloader</font><font color="#E5E5E5"> in the rom</font>

451
00:21:43,580 --> 00:21:49,760
another way<font color="#E5E5E5"> devices</font><font color="#CCCCCC"> wrote devices can</font>

452
00:21:48,770 --> 00:21:52,730
try to interfere with the boot process

453
00:21:49,760 --> 00:21:55,160
is by providing option roms<font color="#CCCCCC"> which are</font>

454
00:21:52,730 --> 00:21:57,110
executable code<font color="#E5E5E5"> that to be run by the</font>

455
00:21:55,160 --> 00:22:01,550
<font color="#E5E5E5">bios that have a sort of a device driver</font>

456
00:21:57,110 --> 00:22:03,409
and this code can do things like that

457
00:22:01,550 --> 00:22:05,639
log keystrokes and then try to export

458
00:22:03,410 --> 00:22:08,579
<font color="#E5E5E5">trade passwords as we see here</font>

459
00:22:05,639 --> 00:22:12,389
<font color="#E5E5E5">that problem was initially reported</font><font color="#CCCCCC"> in</font>

460
00:22:08,579 --> 00:22:15,928
2007 by<font color="#CCCCCC"> John he's minh</font><font color="#E5E5E5"> at black hat</font>

461
00:22:12,389 --> 00:22:19,228
again by snare in 2012 and again by my

462
00:22:15,929 --> 00:22:22,229
work on<font color="#CCCCCC"> Thunderstrike</font><font color="#E5E5E5"> and as of last</font>

463
00:22:19,229 --> 00:22:24,149
week a official<font color="#E5E5E5"> fix has finally rolled</font>

464
00:22:22,229 --> 00:22:28,799
out for it to close that particular

465
00:22:24,149 --> 00:22:31,320
vulnerability<font color="#CCCCCC"> now folks who are using</font>

466
00:22:28,799 --> 00:22:34,019
<font color="#E5E5E5">coreboot have this</font><font color="#CCCCCC"> as a option that they</font>

467
00:22:31,320 --> 00:22:34,829
can say this<font color="#CCCCCC"> might i'm concerned about</font>

468
00:22:34,019 --> 00:22:36,719
this threat

469
00:22:34,829 --> 00:22:39,959
let me let me fix this let me disable

470
00:22:36,719 --> 00:22:42,089
<font color="#E5E5E5">this function and they point out that it</font>

471
00:22:39,959 --> 00:22:44,309
might cause degraded functionality<font color="#E5E5E5"> but</font>

472
00:22:42,089 --> 00:22:48,149
that's something you can QA on your own

473
00:22:44,309 --> 00:22:50,849
system and it in practice with<font color="#E5E5E5"> linux as</font>

474
00:22:48,149 --> 00:22:53,488
your bootloader in the<font color="#E5E5E5"> rom you don't use</font>

475
00:22:50,849 --> 00:22:55,529
the options for anything everything is

476
00:22:53,489 --> 00:22:58,379
done with<font color="#E5E5E5"> with</font><font color="#CCCCCC"> linux his own device</font>

477
00:22:55,529 --> 00:23:02,039
drivers<font color="#CCCCCC"> so you're not dependent on the</font>

478
00:22:58,379 --> 00:23:06,359
whatever limited functionality<font color="#CCCCCC"> the</font>

479
00:23:02,039 --> 00:23:08,700
option<font color="#CCCCCC"> around</font><font color="#E5E5E5"> provided so now that we</font>

480
00:23:06,359 --> 00:23:10,379
have<font color="#E5E5E5"> we</font><font color="#CCCCCC"> take our building blocks and we</font>

481
00:23:08,700 --> 00:23:12,629
hopefully have protected the boot

482
00:23:10,379 --> 00:23:14,728
process and hopefully that the code

483
00:23:12,629 --> 00:23:16,769
that's running is what we think it is<font color="#CCCCCC"> we</font>

484
00:23:14,729 --> 00:23:20,519
need<font color="#E5E5E5"> to turn to how do we secure the</font>

485
00:23:16,769 --> 00:23:22,619
secrets on the<font color="#E5E5E5"> machine and</font><font color="#CCCCCC"> I'm a huge</font>

486
00:23:20,519 --> 00:23:24,719
fan<font color="#E5E5E5"> of the TPM</font><font color="#CCCCCC"> the trusted platform</font>

487
00:23:22,619 --> 00:23:28,769
module<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I know in the free software</font>

488
00:23:24,719 --> 00:23:30,809
community<font color="#E5E5E5"> it's been largely unwelcome it</font>

489
00:23:28,769 --> 00:23:33,749
has not received a very welcome

490
00:23:30,809 --> 00:23:37,139
reception<font color="#CCCCCC"> because of the way it's been</font>

491
00:23:33,749 --> 00:23:40,739
used<font color="#CCCCCC"> for drm and other other user</font>

492
00:23:37,139 --> 00:23:43,529
<font color="#CCCCCC">hostile things since we control the TPM</font>

493
00:23:40,739 --> 00:23:46,529
<font color="#E5E5E5">from the first instruction in the in the</font>

494
00:23:43,529 --> 00:23:49,739
boot<font color="#E5E5E5"> block</font><font color="#CCCCCC"> were able to use it in ways</font>

495
00:23:46,529 --> 00:23:51,389
that we want<font color="#CCCCCC"> to so we don't have to</font>

496
00:23:49,739 --> 00:23:55,769
enable drm<font color="#CCCCCC"> but we can use it to protect</font>

497
00:23:51,389 --> 00:23:58,289
our secrets and the the way that it does

498
00:23:55,769 --> 00:24:01,200
that is it keeps track of what code is

499
00:23:58,289 --> 00:24:03,929
executed as the system boots and it

500
00:24:01,200 --> 00:24:06,629
hashes<font color="#E5E5E5"> that code and special</font><font color="#CCCCCC"> register is</font>

501
00:24:03,929 --> 00:24:09,749
called<font color="#CCCCCC"> pc ours and the idea is that you</font>

502
00:24:06,629 --> 00:24:10,800
can extend the<font color="#CCCCCC"> pcr by hashing the next</font>

503
00:24:09,749 --> 00:24:12,870
module of code

504
00:24:10,800 --> 00:24:15,780
<font color="#E5E5E5">and then hashing that with the previous</font>

505
00:24:12,870 --> 00:24:19,469
hash and this creates a chain of trust

506
00:24:15,780 --> 00:24:23,430
that<font color="#E5E5E5"> last say if these hashes match</font>

507
00:24:19,470 --> 00:24:28,530
<font color="#E5E5E5">expected values only the code that we</font>

508
00:24:23,430 --> 00:24:32,880
<font color="#E5E5E5">but want to have run has run and then</font>

509
00:24:28,530 --> 00:24:36,300
the TPM<font color="#E5E5E5"> will only decrypt the</font><font color="#CCCCCC"> disk</font>

510
00:24:32,880 --> 00:24:38,640
encryption key<font color="#E5E5E5"> if those</font><font color="#CCCCCC"> pcrs match which</font>

511
00:24:36,300 --> 00:24:41,490
means that the code that we want to run

512
00:24:38,640 --> 00:24:46,350
<font color="#CCCCCC">the</font><font color="#E5E5E5"> head is what has executed</font><font color="#CCCCCC"> this means</font>

513
00:24:41,490 --> 00:24:48,570
if someone manages to overwrite the the

514
00:24:46,350 --> 00:24:51,000
<font color="#E5E5E5">non</font><font color="#CCCCCC"> write-protected</font><font color="#E5E5E5"> part of the</font><font color="#CCCCCC"> rom</font><font color="#E5E5E5"> that</font>

515
00:24:48,570 --> 00:24:55,050
will change those measurements and the

516
00:24:51,000 --> 00:24:58,380
TPM won't reveal the key to them<font color="#E5E5E5"> it also</font>

517
00:24:55,050 --> 00:25:00,600
<font color="#E5E5E5">takes it as user password and that</font>

518
00:24:58,380 --> 00:25:03,870
password is validated by the TPM

519
00:25:00,600 --> 00:25:06,090
hardware itself which gives us<font color="#CCCCCC"> hardware</font>

520
00:25:03,870 --> 00:25:08,280
<font color="#CCCCCC">rate-limiting on how often attacker can</font>

521
00:25:06,090 --> 00:25:12,300
try<font color="#CCCCCC"> it</font><font color="#E5E5E5"> also gives us the ability to do</font>

522
00:25:08,280 --> 00:25:14,970
<font color="#CCCCCC">hardware-based that</font><font color="#E5E5E5"> retry limits so that</font>

523
00:25:12,300 --> 00:25:16,560
the<font color="#CCCCCC"> TPM</font><font color="#E5E5E5"> will flush the key if age</font><font color="#CCCCCC"> if an</font>

524
00:25:14,970 --> 00:25:21,150
attacker in possession of your machine

525
00:25:16,560 --> 00:25:23,669
tries<font color="#CCCCCC"> to long</font><font color="#E5E5E5"> that does mean there's now</font>

526
00:25:21,150 --> 00:25:26,580
another way to lose your<font color="#E5E5E5"> you're a disk</font>

527
00:25:23,670 --> 00:25:28,440
encryption<font color="#CCCCCC"> k</font><font color="#E5E5E5"> and there's the field joke</font>

528
00:25:26,580 --> 00:25:30,060
about<font color="#CCCCCC"> there are two</font><font color="#E5E5E5"> types of people with</font>

529
00:25:28,440 --> 00:25:32,220
encrypted drives those who have lost

530
00:25:30,060 --> 00:25:36,450
data<font color="#CCCCCC"> to</font><font color="#E5E5E5"> to forget in</font><font color="#CCCCCC"> Turkey</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> and</font>

531
00:25:32,220 --> 00:25:38,910
those who will<font color="#CCCCCC"> so what</font><font color="#E5E5E5"> heads does when</font>

532
00:25:36,450 --> 00:25:41,790
you generate your key is<font color="#CCCCCC"> its</font><font color="#E5E5E5"> it takes</font>

533
00:25:38,910 --> 00:25:44,370
that can split into multiple pieces that

534
00:25:41,790 --> 00:25:46,470
you can then share either<font color="#CCCCCC"> to friends or</font>

535
00:25:44,370 --> 00:25:48,239
<font color="#CCCCCC">the backup services</font><font color="#E5E5E5"> for each piece</font>

536
00:25:46,470 --> 00:25:50,820
doesn't let you decrypt it but you can

537
00:25:48,240 --> 00:25:54,060
combine them with<font color="#CCCCCC"> shimmer see for</font>

538
00:25:50,820 --> 00:25:58,169
sharing<font color="#E5E5E5"> to regenerate the</font><font color="#CCCCCC"> at the</font>

539
00:25:54,060 --> 00:25:59,970
cryptographic disk encryption game<font color="#E5E5E5"> we're</font>

540
00:25:58,170 --> 00:26:05,070
also able to take advantage of best

541
00:25:59,970 --> 00:26:08,730
practices like using the including the

542
00:26:05,070 --> 00:26:10,770
disk encryption key<font color="#E5E5E5"> headers in the</font><font color="#CCCCCC"> PCR</font>

543
00:26:08,730 --> 00:26:13,140
is that we<font color="#CCCCCC"> used to seal the discs</font>

544
00:26:10,770 --> 00:26:14,970
this avoids<font color="#CCCCCC"> a certain class of evil</font><font color="#E5E5E5"> made</font>

545
00:26:13,140 --> 00:26:16,950
attack<font color="#E5E5E5"> or someone</font><font color="#CCCCCC"> swapped</font><font color="#E5E5E5"> out your</font><font color="#CCCCCC"> drive</font>

546
00:26:14,970 --> 00:26:18,900
<font color="#E5E5E5">may not be in your threat model but</font><font color="#CCCCCC"> it</font>

547
00:26:16,950 --> 00:26:19,870
<font color="#CCCCCC">is easy to</font><font color="#E5E5E5"> do with just a few lines of</font>

548
00:26:18,900 --> 00:26:26,230
shell script

549
00:26:19,870 --> 00:26:28,270
<font color="#E5E5E5">so we hopefully we now trust that the</font>

550
00:26:26,230 --> 00:26:31,360
system is running the code we think it

551
00:26:28,270 --> 00:26:33,430
is<font color="#CCCCCC"> but how does it prove to us that it</font>

552
00:26:31,360 --> 00:26:35,500
is actually our machine that someone

553
00:26:33,430 --> 00:26:38,110
hasn't<font color="#E5E5E5"> stuck into our hotel room and</font>

554
00:26:35,500 --> 00:26:39,309
swapped out everything and left left<font color="#E5E5E5"> me</font>

555
00:26:38,110 --> 00:26:41,439
over pretty carefully<font color="#E5E5E5"> replaced our</font>

556
00:26:39,309 --> 00:26:43,210
stickers to make us believe<font color="#E5E5E5"> we're</font><font color="#CCCCCC"> type</font>

557
00:26:41,440 --> 00:26:48,790
<font color="#CCCCCC">in your</font><font color="#E5E5E5"> password</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> to our own</font>

558
00:26:43,210 --> 00:26:51,610
computer<font color="#E5E5E5"> some and evil made</font><font color="#CCCCCC"> two kids</font>

559
00:26:48,790 --> 00:26:53,559
will encrypt a secret<font color="#CCCCCC"> a secret</font><font color="#E5E5E5"> phrase</font>

560
00:26:51,610 --> 00:26:55,928
and then display it to you if and only

561
00:26:53,559 --> 00:26:58,780
if the<font color="#CCCCCC"> pcrs match but that's subject to</font>

562
00:26:55,929 --> 00:27:02,080
replay attack<font color="#CCCCCC"> what Matthew Garrett</font>

563
00:26:58,780 --> 00:27:05,710
<font color="#E5E5E5">demonstrated last year at a</font><font color="#CCCCCC"> 32c three</font>

564
00:27:02,080 --> 00:27:08,080
was using the time<font color="#E5E5E5"> that time-based</font>

565
00:27:05,710 --> 00:27:11,410
one-time password<font color="#E5E5E5"> used by</font><font color="#CCCCCC"> Google</font>

566
00:27:08,080 --> 00:27:14,409
<font color="#CCCCCC">Authenticator</font><font color="#E5E5E5"> to protect the firmware</font>

567
00:27:11,410 --> 00:27:18,640
and having a test to the user that it is

568
00:27:14,410 --> 00:27:20,920
unmodified<font color="#E5E5E5"> so when the system boots</font><font color="#CCCCCC"> and</font>

569
00:27:18,640 --> 00:27:24,160
<font color="#CCCCCC">there goes</font><font color="#E5E5E5"> through measuring all of the</font>

570
00:27:20,920 --> 00:27:28,030
various components that<font color="#CCCCCC"> at the</font><font color="#E5E5E5"> TPM will</font>

571
00:27:24,160 --> 00:27:30,370
only release the secret<font color="#E5E5E5"> if those pieces</font>

572
00:27:28,030 --> 00:27:32,080
match the firmware then hashes that

573
00:27:30,370 --> 00:27:33,550
along with the current time and

574
00:27:32,080 --> 00:27:35,889
generates a<font color="#CCCCCC"> six-digit value that it</font>

575
00:27:33,550 --> 00:27:38,020
<font color="#E5E5E5">prints on screen you compare that to</font>

576
00:27:35,890 --> 00:27:40,929
<font color="#E5E5E5">what's on your phone and that tells you</font>

577
00:27:38,020 --> 00:27:46,600
whether or not you can trust that<font color="#CCCCCC"> that</font>

578
00:27:40,929 --> 00:27:48,520
the<font color="#E5E5E5"> machine</font><font color="#CCCCCC"> it's a it's a great idea and</font>

579
00:27:46,600 --> 00:27:51,580
<font color="#CCCCCC">it's implemented</font><font color="#E5E5E5"> again as a very small</font>

580
00:27:48,520 --> 00:27:54,250
shell script had to read read the value

581
00:27:51,580 --> 00:27:56,290
from the TPM<font color="#E5E5E5"> unseal it and then compute</font>

582
00:27:54,250 --> 00:28:00,460
the hash of it

583
00:27:56,290 --> 00:28:04,389
<font color="#E5E5E5">this also allows us to start making</font><font color="#CCCCCC"> a</font>

584
00:28:00,460 --> 00:28:07,179
transition<font color="#E5E5E5"> from the TPM rooted</font><font color="#CCCCCC"> a TPM</font>

585
00:28:04,390 --> 00:28:09,640
static<font color="#CCCCCC"> route of</font><font color="#E5E5E5"> trust to a pgp based</font>

586
00:28:07,179 --> 00:28:12,190
trust<font color="#E5E5E5"> where most importantly this is a</font>

587
00:28:09,640 --> 00:28:14,590
TPM<font color="#E5E5E5"> key</font><font color="#CCCCCC"> community this is the pgp key</font>

588
00:28:12,190 --> 00:28:17,890
that you<font color="#E5E5E5"> the owner of the computer</font>

589
00:28:14,590 --> 00:28:19,780
control<font color="#E5E5E5"> not some random vendor or some</font>

590
00:28:17,890 --> 00:28:22,750
random<font color="#E5E5E5"> hardware device</font><font color="#CCCCCC"> manufacturers</font>

591
00:28:19,780 --> 00:28:25,270
<font color="#E5E5E5">going to lose the key and allow</font><font color="#CCCCCC"> malabar</font>

592
00:28:22,750 --> 00:28:30,490
like Stuxnet to use it to circumvent

593
00:28:25,270 --> 00:28:32,980
security<font color="#E5E5E5"> the boots</font><font color="#CCCCCC"> Krypton heads again</font>

594
00:28:30,490 --> 00:28:36,610
<font color="#E5E5E5">it's a small shell script is able to use</font>

595
00:28:32,980 --> 00:28:39,070
<font color="#CCCCCC">gpg to verify the next stages of the</font>

596
00:28:36,610 --> 00:28:43,659
<font color="#E5E5E5">hypervisor at the initial</font><font color="#CCCCCC"> ramdisk and</font>

597
00:28:39,070 --> 00:28:47,320
the colonel<font color="#E5E5E5"> now and it's also then uses</font>

598
00:28:43,660 --> 00:28:49,600
the<font color="#E5E5E5"> at the tpms counters to help put</font>

599
00:28:47,320 --> 00:28:51,879
<font color="#E5E5E5">prevent against</font><font color="#CCCCCC"> rollback or someone</font>

600
00:28:49,600 --> 00:28:53,379
takes your drive and rolls it back to a

601
00:28:51,880 --> 00:28:56,230
previous version perhaps with<font color="#E5E5E5"> a</font>

602
00:28:53,380 --> 00:28:59,410
vulnerability<font color="#CCCCCC"> that they can exploit so</font>

603
00:28:56,230 --> 00:29:01,120
this<font color="#E5E5E5"> this</font><font color="#CCCCCC"> allows</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> God allows us to be</font>

604
00:28:59,410 --> 00:29:03,520
sure that not only are we running the

605
00:29:01,120 --> 00:29:06,790
firmer<font color="#CCCCCC"> me that the OS that we think we</font>

606
00:29:03,520 --> 00:29:08,620
should be running it<font color="#CCCCCC"> ensures us that</font>

607
00:29:06,790 --> 00:29:14,889
someone hasn't been able to substitute

608
00:29:08,620 --> 00:29:16,928
<font color="#E5E5E5">one that vulnerable version having the</font>

609
00:29:14,890 --> 00:29:20,110
pgp key also allows us to take advantage

610
00:29:16,929 --> 00:29:24,670
of an idea from Android and<font color="#CCCCCC"> Chrome OS</font>

611
00:29:20,110 --> 00:29:28,060
<font color="#E5E5E5">which is the the DM</font><font color="#CCCCCC"> Verity read-only</font>

612
00:29:24,670 --> 00:29:30,760
root<font color="#E5E5E5"> filesystem this hash is all of the</font>

613
00:29:28,060 --> 00:29:33,820
blocks and<font color="#CCCCCC"> the hashes all of the</font><font color="#E5E5E5"> the</font>

614
00:29:30,760 --> 00:29:36,730
hashes and<font color="#E5E5E5"> so on up until it gets to a</font>

615
00:29:33,820 --> 00:29:39,939
<font color="#CCCCCC">not to a route hash in the tree that has</font>

616
00:29:36,730 --> 00:29:42,910
been signed<font color="#CCCCCC"> this allows the</font><font color="#E5E5E5"> colonel on</font>

617
00:29:39,940 --> 00:29:46,419
every read access in logarithmic time to

618
00:29:42,910 --> 00:29:49,720
verify the essentially a signature on

619
00:29:46,419 --> 00:29:52,060
that data<font color="#E5E5E5"> this does require a read-only</font>

620
00:29:49,720 --> 00:29:55,480
<font color="#CCCCCC">that root file system</font><font color="#E5E5E5"> but it gives us</font>

621
00:29:52,060 --> 00:30:00,010
even more confidence that the system has

622
00:29:55,480 --> 00:30:03,730
been untampered with once you're running

623
00:30:00,010 --> 00:30:05,919
your OS<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> good to have</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> semis</font>

624
00:30:03,730 --> 00:30:08,590
<font color="#E5E5E5">security conscious thoughts as well now</font>

625
00:30:05,919 --> 00:30:11,290
you have<font color="#CCCCCC"> heads</font><font color="#E5E5E5"> is mostly focused on how</font>

626
00:30:08,590 --> 00:30:14,260
do we<font color="#CCCCCC"> securely transition to an OS and</font>

627
00:30:11,290 --> 00:30:17,440
<font color="#CCCCCC">that's osu runs up to</font><font color="#E5E5E5"> you</font>

628
00:30:14,260 --> 00:30:20,230
<font color="#CCCCCC">I I like cubes is reasonably secure its</font>

629
00:30:17,440 --> 00:30:23,470
highly<font color="#CCCCCC"> recommended by people who know</font>

630
00:30:20,230 --> 00:30:25,960
about endpoint security and the<font color="#E5E5E5"> cubes</font>

631
00:30:23,470 --> 00:30:28,900
team<font color="#E5E5E5"> that recognizes that firmware</font>

632
00:30:25,960 --> 00:30:30,760
security is a vital piece of<font color="#CCCCCC"> system</font>

633
00:30:28,900 --> 00:30:32,950
<font color="#E5E5E5">security for their new for their next</font>

634
00:30:30,760 --> 00:30:35,710
release<font color="#E5E5E5"> cubes are</font><font color="#CCCCCC"> for they're going to</font>

635
00:30:32,950 --> 00:30:38,320
require the machines have open source

636
00:30:35,710 --> 00:30:39,520
firmware<font color="#CCCCCC"> such as coreboot</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> hope</font>

637
00:30:38,320 --> 00:30:44,379
that head is going to be a piece of that

638
00:30:39,520 --> 00:30:45,460
i've also been<font color="#E5E5E5"> not working with with the</font>

639
00:30:44,380 --> 00:30:47,620
<font color="#E5E5E5">cube software</font>

640
00:30:45,460 --> 00:30:49,330
and have modified it to work with things

641
00:30:47,620 --> 00:30:53,469
like the DM<font color="#CCCCCC"> Verity really root</font>

642
00:30:49,330 --> 00:30:55,990
<font color="#E5E5E5">filesystem this now allows the user to</font>

643
00:30:53,470 --> 00:30:58,929
<font color="#CCCCCC">lock down the configuration</font><font color="#E5E5E5"> so that</font>

644
00:30:55,990 --> 00:31:02,770
someone<font color="#CCCCCC"> can</font><font color="#E5E5E5"> tamper with their their</font>

645
00:30:58,929 --> 00:31:05,860
<font color="#E5E5E5">setup</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> also gives you a recovery mode</font>

646
00:31:02,770 --> 00:31:10,539
that allows you to fix things up and

647
00:31:05,860 --> 00:31:12,580
<font color="#CCCCCC">resign</font><font color="#E5E5E5"> the OS reproducible builds</font><font color="#CCCCCC"> really</font>

648
00:31:10,539 --> 00:31:15,730
important so that<font color="#CCCCCC"> everyone</font><font color="#E5E5E5"> can verify</font>

649
00:31:12,580 --> 00:31:19,600
what<font color="#E5E5E5"> that the bills match what they</font>

650
00:31:15,730 --> 00:31:20,950
should<font color="#CCCCCC"> in the case of heads we have a</font>

651
00:31:19,600 --> 00:31:22,658
lot of upstream dependencies that<font color="#E5E5E5"> are</font>

652
00:31:20,950 --> 00:31:24,700
<font color="#CCCCCC">reproducible so we're working with them</font>

653
00:31:22,659 --> 00:31:28,029
to try to patch them that we've patched

654
00:31:24,700 --> 00:31:29,529
as in<font color="#E5E5E5"> they've accepted that</font><font color="#CCCCCC"> commits we</font>

655
00:31:28,029 --> 00:31:33,580
also<font color="#CCCCCC"> built some tools to let you build</font>

656
00:31:29,529 --> 00:31:35,770
and<font color="#E5E5E5"> SRAM</font><font color="#CCCCCC"> discs in a reducible way that</font>

657
00:31:33,580 --> 00:31:37,389
this works with<font color="#CCCCCC"> the cubes with heads and</font>

658
00:31:35,770 --> 00:31:41,168
we're hoping other<font color="#CCCCCC"> linux distributions</font>

659
00:31:37,390 --> 00:31:43,690
picking up as well all of our<font color="#E5E5E5"> trees</font>

660
00:31:41,169 --> 00:31:46,149
cryptographically<font color="#CCCCCC"> signs hopefully that</font>

661
00:31:43,690 --> 00:31:48,880
<font color="#CCCCCC">github is not trying to slip in any</font>

662
00:31:46,149 --> 00:31:51,010
patches<font color="#CCCCCC"> and it is</font><font color="#E5E5E5"> open source that we</font>

663
00:31:48,880 --> 00:31:52,390
encourage everyone to read through it<font color="#CCCCCC"> no</font>

664
00:31:51,010 --> 00:31:56,529
<font color="#CCCCCC">india is required</font>

665
00:31:52,390 --> 00:31:58,480
unlike most of<font color="#E5E5E5"> that the UEFI sources so</font>

666
00:31:56,529 --> 00:31:59,049
that's sort of the state of where things

667
00:31:58,480 --> 00:32:01,419
are

668
00:31:59,049 --> 00:32:04,029
<font color="#E5E5E5">it's pretty much in very beta but is it</font>

669
00:32:01,419 --> 00:32:05,950
is usable<font color="#E5E5E5"> but there's a lot of areas</font>

670
00:32:04,029 --> 00:32:08,080
where we can continue<font color="#E5E5E5"> to</font><font color="#CCCCCC"> research things</font>

671
00:32:05,950 --> 00:32:10,120
like the embedded controllers on

672
00:32:08,080 --> 00:32:11,980
Chromebooks are<font color="#CCCCCC"> open source</font><font color="#E5E5E5"> we can</font><font color="#CCCCCC"> use</font>

673
00:32:10,120 --> 00:32:14,949
those to help<font color="#CCCCCC"> derivative trust as well</font>

674
00:32:11,980 --> 00:32:16,659
<font color="#CCCCCC">i'm porting Corbett to more modern</font>

675
00:32:14,950 --> 00:32:18,760
<font color="#E5E5E5">platforms</font><font color="#CCCCCC"> we let's take advantage of</font>

676
00:32:16,659 --> 00:32:22,570
things like tamper switches and<font color="#CCCCCC"> Intel</font>

677
00:32:18,760 --> 00:32:24,850
<font color="#E5E5E5">boot</font><font color="#CCCCCC"> guard i'm also working on porting</font>

678
00:32:22,570 --> 00:32:28,029
<font color="#E5E5E5">coreboot over to server platforms so</font>

679
00:32:24,850 --> 00:32:30,309
that we can use it for more secure cloud

680
00:32:28,029 --> 00:32:34,899
hosting servers have a very different

681
00:32:30,309 --> 00:32:36,789
threat model from<font color="#E5E5E5"> from laptops and a lot</font>

682
00:32:34,899 --> 00:32:40,270
of things have firmware that we have to

683
00:32:36,789 --> 00:32:41,860
be concerned about<font color="#CCCCCC"> one</font><font color="#E5E5E5"> collaboration</font>

684
00:32:40,270 --> 00:32:43,960
looking at<font color="#CCCCCC"> there's with the</font><font color="#E5E5E5"> open BMC</font>

685
00:32:41,860 --> 00:32:46,270
project to be able to take advantage

686
00:32:43,960 --> 00:32:50,320
<font color="#CCCCCC">that the</font><font color="#E5E5E5"> open source in the management</font>

687
00:32:46,270 --> 00:32:54,158
controller for the<font color="#E5E5E5"> servers and i'm also</font>

688
00:32:50,320 --> 00:32:56,110
not collaborating with the<font color="#CCCCCC"> mass</font><font color="#E5E5E5"> open</font>

689
00:32:54,159 --> 00:32:57,070
cloud project that's trying to build

690
00:32:56,110 --> 00:33:00,668
secure

691
00:32:57,070 --> 00:33:03,340
a<font color="#E5E5E5"> bare-metal clouds I'm cautiously</font>

692
00:33:00,669 --> 00:33:06,730
optimistic<font color="#CCCCCC"> about</font><font color="#E5E5E5"> enclaves and how they</font>

693
00:33:03,340 --> 00:33:08,408
will help us<font color="#E5E5E5"> with security especially in</font>

694
00:33:06,730 --> 00:33:10,240
a environment where we control the

695
00:33:08,409 --> 00:33:14,080
firmware and we can ensure that the

696
00:33:10,240 --> 00:33:16,990
<font color="#E5E5E5">enclaves are set up in</font><font color="#CCCCCC"> a safe way there</font>

697
00:33:14,080 --> 00:33:20,168
are<font color="#CCCCCC"> a lot of issues on github</font><font color="#E5E5E5"> again</font>

698
00:33:16,990 --> 00:33:24,100
please<font color="#E5E5E5"> add welcome contributions</font><font color="#CCCCCC"> i hope</font>

699
00:33:20,169 --> 00:33:26,080
everyone<font color="#E5E5E5"> that gets inspired</font><font color="#CCCCCC"> to to to</font>

700
00:33:24,100 --> 00:33:30,129
work on installing this on their laptop

701
00:33:26,080 --> 00:33:32,320
and if<font color="#E5E5E5"> if you are interested</font><font color="#CCCCCC"> i'll be</font>

702
00:33:30,129 --> 00:33:36,219
hanging out at the<font color="#CCCCCC"> Corps</font><font color="#E5E5E5"> boot</font><font color="#CCCCCC"> assembly</font>

703
00:33:32,320 --> 00:33:38,950
later today and<font color="#CCCCCC"> vacation this week on</font>

704
00:33:36,220 --> 00:33:41,529
the<font color="#CCCCCC"> Corps boot</font><font color="#E5E5E5"> team has much people here</font>

705
00:33:38,950 --> 00:33:43,809
they have flash programmers and can help

706
00:33:41,529 --> 00:33:48,580
you install<font color="#CCCCCC"> Corps boot</font><font color="#E5E5E5"> on your laptop</font>

707
00:33:43,809 --> 00:33:52,240
<font color="#E5E5E5">source code for heads is available on</font>

708
00:33:48,580 --> 00:33:54,970
github and a annotated version<font color="#E5E5E5"> this talk</font>

709
00:33:52,240 --> 00:33:58,419
is is up on my website and welcome

710
00:33:54,970 --> 00:34:00,279
comments and feedback on it<font color="#E5E5E5"> so thank you</font>

711
00:33:58,419 --> 00:34:02,470
all for coming to hear about this

712
00:34:00,279 --> 00:34:04,990
project i hope that everyone is<font color="#CCCCCC"> you as</font>

713
00:34:02,470 --> 00:34:05,679
excited about open source firmware<font color="#CCCCCC"> as I</font>

714
00:34:04,990 --> 00:34:07,960
am

715
00:34:05,679 --> 00:34:19,790
<font color="#E5E5E5">I'd love to take any questions that you</font>

716
00:34:07,960 --> 00:34:30,050
all have

717
00:34:19,790 --> 00:34:31,040
<font color="#E5E5E5">thanks for your great talk this is very</font>

718
00:34:30,050 --> 00:34:32,660
interesting

719
00:34:31,040 --> 00:34:34,370
do you have any advice for<font color="#CCCCCC"> the</font>

720
00:34:32,659 --> 00:34:39,199
<font color="#E5E5E5">ninety-five percent of us who are stuck</font>

721
00:34:34,370 --> 00:34:46,040
on<font color="#CCCCCC"> non-core boot compatible</font><font color="#E5E5E5"> laptops by a</font>

722
00:34:39,199 --> 00:34:48,980
<font color="#E5E5E5">Chromebook</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> it's hard to trust the</font>

723
00:34:46,040 --> 00:34:53,449
<font color="#CCCCCC">closer's</font><font color="#E5E5E5"> firmware and</font><font color="#CCCCCC"> you would</font>

724
00:34:48,980 --> 00:34:55,130
certainly<font color="#CCCCCC"> I would there are people we</font>

725
00:34:53,449 --> 00:34:56,600
have to trust<font color="#CCCCCC"> our</font><font color="#E5E5E5"> institutions we have</font>

726
00:34:55,130 --> 00:34:59,510
to trust we have to trust<font color="#E5E5E5"> in town to</font>

727
00:34:56,600 --> 00:35:02,360
some extent and<font color="#CCCCCC"> Intel is responsible for</font>

728
00:34:59,510 --> 00:35:07,850
you both<font color="#E5E5E5"> are</font><font color="#CCCCCC"> cpus and a lot of the</font>

729
00:35:02,360 --> 00:35:10,550
firmware the<font color="#CCCCCC"> depending on your threat</font>

730
00:35:07,850 --> 00:35:13,670
model<font color="#E5E5E5"> for more attacks may not be a huge</font>

731
00:35:10,550 --> 00:35:15,650
concern for<font color="#E5E5E5"> for your</font><font color="#CCCCCC"> picture</font><font color="#E5E5E5"> machine</font>

732
00:35:13,670 --> 00:35:17,660
where they might be<font color="#CCCCCC"> of great concern in</font>

733
00:35:15,650 --> 00:35:20,960
which case<font color="#CCCCCC"> i even just doing some of the</font>

734
00:35:17,660 --> 00:35:25,640
things<font color="#CCCCCC"> appear suture</font><font color="#E5E5E5"> suggested</font><font color="#CCCCCC"> you just</font>

735
00:35:20,960 --> 00:35:29,690
suggested<font color="#CCCCCC"> of clipping the right protect</font>

736
00:35:25,640 --> 00:35:31,520
<font color="#CCCCCC">pin on the</font><font color="#E5E5E5"> on the chip</font><font color="#CCCCCC"> you're removing</font>

737
00:35:29,690 --> 00:35:34,580
things that might be hostile attacking

738
00:35:31,520 --> 00:35:36,620
your system<font color="#CCCCCC"> it is</font><font color="#E5E5E5"> his</font><font color="#CCCCCC"> guides his guys a</font>

739
00:35:34,580 --> 00:35:37,730
<font color="#E5E5E5">really good one to follow for off the</font>

740
00:35:36,620 --> 00:35:43,580
hardware security

741
00:35:37,730 --> 00:35:47,120
<font color="#CCCCCC">I'm i was</font><font color="#E5E5E5"> wondering if you also support</font>

742
00:35:43,580 --> 00:35:51,590
arm<font color="#E5E5E5"> on</font><font color="#CCCCCC"> that I'd</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> so into laptop</font>

743
00:35:47,120 --> 00:35:55,310
<font color="#CCCCCC">since 10</font><font color="#E5E5E5"> arm it has a lot of advantages</font>

744
00:35:51,590 --> 00:35:58,370
<font color="#CCCCCC">is a cpu</font><font color="#E5E5E5"> it only has</font><font color="#CCCCCC"> a 20</font><font color="#E5E5E5"> years of</font>

745
00:35:55,310 --> 00:36:00,680
legacy baggage rather than 40 and the

746
00:35:58,370 --> 00:36:03,319
boot process on it is much much simpler

747
00:36:00,680 --> 00:36:06,470
since it doesn't have to go through<font color="#CCCCCC"> real</font>

748
00:36:03,320 --> 00:36:10,700
<font color="#CCCCCC">mode too long mode to that paging and</font>

749
00:36:06,470 --> 00:36:13,819
all the other steps the<font color="#E5E5E5"> the downside to</font>

750
00:36:10,700 --> 00:36:17,060
a lot of arms is that they<font color="#E5E5E5"> their boot</font>

751
00:36:13,820 --> 00:36:21,290
code is<font color="#CCCCCC"> a few is on die</font><font color="#E5E5E5"> and outside of</font>

752
00:36:17,060 --> 00:36:27,230
the control of<font color="#E5E5E5"> of the user luckily</font><font color="#CCCCCC"> most</font>

753
00:36:21,290 --> 00:36:28,910
<font color="#CCCCCC">Luke is really simple and can establish</font>

754
00:36:27,230 --> 00:36:30,250
and some of them will establish a

755
00:36:28,910 --> 00:36:35,230
hardware<font color="#CCCCCC"> root</font><font color="#E5E5E5"> of trust</font>

756
00:36:30,250 --> 00:36:37,780
<font color="#E5E5E5">but in general</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> get the arm to you boot</font>

757
00:36:35,230 --> 00:36:41,320
<font color="#E5E5E5">to whatever that seems to work out</font>

758
00:36:37,780 --> 00:36:44,350
pretty well<font color="#E5E5E5"> I know there's been some</font>

759
00:36:41,320 --> 00:36:48,010
interest in<font color="#E5E5E5"> can can you be replaced with</font>

760
00:36:44,350 --> 00:36:50,020
<font color="#E5E5E5">with</font><font color="#CCCCCC"> expires</font><font color="#E5E5E5"> record like thing and</font><font color="#CCCCCC"> i</font>

761
00:36:48,010 --> 00:36:52,360
<font color="#E5E5E5">suspect the folks at the boots would be</font>

762
00:36:50,020 --> 00:36:55,270
able to talk more about that and then

763
00:36:52,360 --> 00:36:58,210
just<font color="#E5E5E5"> follow</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> if you</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> the computer</font>

764
00:36:55,270 --> 00:37:01,030
<font color="#CCCCCC">labor boots parts the platform</font><font color="#E5E5E5"> it had</font>

765
00:36:58,210 --> 00:37:01,570
<font color="#CCCCCC">some</font><font color="#E5E5E5"> about to write this is essentially</font>

766
00:37:01,030 --> 00:37:04,330
yes

767
00:37:01,570 --> 00:37:10,960
<font color="#E5E5E5">yeah it has</font><font color="#CCCCCC"> eight hedges a payload for</font>

768
00:37:04,330 --> 00:37:14,259
<font color="#CCCCCC">Corbin okay</font><font color="#E5E5E5"> um it's there on the left</font>

769
00:37:10,960 --> 00:37:17,800
<font color="#E5E5E5">yeah</font><font color="#CCCCCC"> thank you</font><font color="#E5E5E5"> that's a question from</font>

770
00:37:14,260 --> 00:37:21,520
from the internet about<font color="#CCCCCC"> Corps boot</font><font color="#E5E5E5"> code</font>

771
00:37:17,800 --> 00:37:23,530
<font color="#E5E5E5">has</font><font color="#CCCCCC"> blobs included</font><font color="#E5E5E5"> and for example</font>

772
00:37:21,520 --> 00:37:26,290
binary blobs from mental with all the

773
00:37:23,530 --> 00:37:26,830
<font color="#CCCCCC">members</font><font color="#E5E5E5"> support package and all that</font>

774
00:37:26,290 --> 00:37:28,990
stuff

775
00:37:26,830 --> 00:37:33,190
how<font color="#E5E5E5"> can we call</font><font color="#CCCCCC"> kabu</font><font color="#E5E5E5"> to kill them in the</font>

776
00:37:28,990 --> 00:37:36,729
light of this let alone<font color="#E5E5E5"> open</font><font color="#CCCCCC"> sauce</font><font color="#E5E5E5"> so</font>

777
00:37:33,190 --> 00:37:38,470
the<font color="#CCCCCC"> Intel fsp is a significant concern</font>

778
00:37:36,730 --> 00:37:40,870
this is the<font color="#E5E5E5"> firmware support package</font>

779
00:37:38,470 --> 00:37:43,359
that is required to initialize the

780
00:37:40,870 --> 00:37:45,880
memory controllers on on modern<font color="#CCCCCC"> intel</font>

781
00:37:43,360 --> 00:37:49,600
<font color="#CCCCCC">cpus or not</font>

782
00:37:45,880 --> 00:37:52,900
on order<font color="#CCCCCC"> cpus</font><font color="#E5E5E5"> such as the</font><font color="#CCCCCC"> at the Sandy</font>

783
00:37:49,600 --> 00:37:56,020
<font color="#CCCCCC">Bridge and Ivy Bridge</font><font color="#E5E5E5"> the Corps boot and</font>

784
00:37:52,900 --> 00:37:57,400
liberal<font color="#CCCCCC"> group are able to initialize the</font>

785
00:37:56,020 --> 00:38:02,470
memory natively without having to go

786
00:37:57,400 --> 00:38:05,740
into the<font color="#CCCCCC"> FSP however if you look at what</font>

787
00:38:02,470 --> 00:38:08,200
what<font color="#E5E5E5"> Corbett is doing in the MRC on</font>

788
00:38:05,740 --> 00:38:10,930
those platforms<font color="#CCCCCC"> it tends to just be</font>

789
00:38:08,200 --> 00:38:16,689
poking a bunch of registers with values

790
00:38:10,930 --> 00:38:18,910
that<font color="#E5E5E5"> seemed to work</font><font color="#CCCCCC"> and that</font><font color="#E5E5E5"> its modern</font>

791
00:38:16,690 --> 00:38:21,970
<font color="#E5E5E5">memory controllers are so complex that</font>

792
00:38:18,910 --> 00:38:26,440
<font color="#E5E5E5">an</font><font color="#CCCCCC"> intel is unwilling to document them</font>

793
00:38:21,970 --> 00:38:28,660
that without extensive<font color="#CCCCCC"> NDA's</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> it's</font>

794
00:38:26,440 --> 00:38:32,380
very<font color="#E5E5E5"> hard to build any sort of memory</font>

795
00:38:28,660 --> 00:38:34,839
initialization<font color="#CCCCCC"> so what we can say it's a</font>

796
00:38:32,380 --> 00:38:36,120
hundred percent free software<font color="#E5E5E5"> week at</font>

797
00:38:34,840 --> 00:38:38,730
<font color="#CCCCCC">least</font>

798
00:38:36,120 --> 00:38:43,170
<font color="#E5E5E5">we can ensure that the</font><font color="#CCCCCC"> FSP</font><font color="#E5E5E5"> is measured</font>

799
00:38:38,730 --> 00:38:47,670
and<font color="#CCCCCC"> it's unchanging we can also look at</font>

800
00:38:43,170 --> 00:38:50,400
the state of things that it sets<font color="#E5E5E5"> up</font><font color="#CCCCCC"> and</font>

801
00:38:47,670 --> 00:38:52,680
include those in our measurements<font color="#CCCCCC"> so</font>

802
00:38:50,400 --> 00:38:56,010
even if it doesn't<font color="#E5E5E5"> give us one percent</font>

803
00:38:52,680 --> 00:38:58,770
<font color="#CCCCCC">open source</font><font color="#E5E5E5"> as far as I know the only</font>

804
00:38:56,010 --> 00:39:03,540
system that<font color="#E5E5E5"> is that right now is a that</font>

805
00:38:58,770 --> 00:39:04,980
<font color="#CCCCCC">bunnies and novinha laptop</font><font color="#E5E5E5"> at least we</font>

806
00:39:03,540 --> 00:39:06,240
can measure it and<font color="#E5E5E5"> we know that it</font>

807
00:39:04,980 --> 00:39:10,980
<font color="#CCCCCC">hadn't been tampered</font><font color="#E5E5E5"> with</font>

808
00:39:06,240 --> 00:39:15,419
from what we initially installed<font color="#CCCCCC"> before</font>

809
00:39:10,980 --> 00:39:17,820
<font color="#CCCCCC">I so this is a great project</font><font color="#E5E5E5"> and I'd</font>

810
00:39:15,420 --> 00:39:21,420
like to ask<font color="#CCCCCC"> why</font><font color="#E5E5E5"> oh dude certain</font>

811
00:39:17,820 --> 00:39:24,240
architectural decisions<font color="#CCCCCC"> the specific</font>

812
00:39:21,420 --> 00:39:27,000
combination of<font color="#CCCCCC"> linux</font><font color="#E5E5E5"> answer</font><font color="#CCCCCC"> so why</font>

813
00:39:24,240 --> 00:39:30,270
didn't you choose a<font color="#CCCCCC"> PSD Connor</font><font color="#E5E5E5"> which are</font>

814
00:39:27,000 --> 00:39:32,850
usually<font color="#CCCCCC"> receive to be more secure and</font><font color="#E5E5E5"> of</font>

815
00:39:30,270 --> 00:39:36,030
<font color="#CCCCCC">a higher quality and</font><font color="#E5E5E5"> by the</font><font color="#CCCCCC"> juices shall</font>

816
00:39:32,850 --> 00:39:40,740
but let's say<font color="#CCCCCC"> pythonesque it's also</font>

817
00:39:36,030 --> 00:39:42,660
often<font color="#CCCCCC"> perceived of high-quality</font><font color="#E5E5E5"> sit</font>

818
00:39:40,740 --> 00:39:45,390
<font color="#E5E5E5">there is a lot of desire to support</font>

819
00:39:42,660 --> 00:39:48,480
<font color="#CCCCCC">Python in heads</font><font color="#E5E5E5"> the downside is that</font>

820
00:39:45,390 --> 00:39:52,020
there's very limited space the<font color="#CCCCCC"> x230</font>

821
00:39:48,480 --> 00:39:56,730
<font color="#CCCCCC">bootrom for instance has a 4 megabytes</font>

822
00:39:52,020 --> 00:40:02,310
<font color="#E5E5E5">available space the Python interpreter a</font>

823
00:39:56,730 --> 00:40:06,630
<font color="#E5E5E5">couple niggas already the god in terms</font>

824
00:40:02,310 --> 00:40:09,330
of why linux<font color="#E5E5E5"> /</font><font color="#CCCCCC"> bsd at the KX</font><font color="#E5E5E5"> system call</font>

825
00:40:06,630 --> 00:40:12,420
is a core component of this to be able

826
00:40:09,330 --> 00:40:14,640
to not do<font color="#CCCCCC"> increase</font><font color="#E5E5E5"> will shut down and</font>

827
00:40:12,420 --> 00:40:17,100
transfer from the<font color="#CCCCCC"> linux kernel to</font>

828
00:40:14,640 --> 00:40:20,730
another<font color="#CCCCCC"> kernel or two to</font><font color="#E5E5E5"> any</font><font color="#CCCCCC"> multiboot</font>

829
00:40:17,100 --> 00:40:26,940
compliant<font color="#CCCCCC"> Colonel's which includes bsd</font>

830
00:40:20,730 --> 00:40:29,130
<font color="#CCCCCC">is a necessary feature</font><font color="#E5E5E5"> if it if</font><font color="#CCCCCC"> bsd</font><font color="#E5E5E5"> had</font>

831
00:40:26,940 --> 00:40:33,420
such functionality that that<font color="#E5E5E5"> it would be</font>

832
00:40:29,130 --> 00:40:44,610
a fine<font color="#E5E5E5"> just on the choice for the at the</font>

833
00:40:33,420 --> 00:40:49,410
<font color="#E5E5E5">internal bootrom</font><font color="#CCCCCC"> bootloader</font>

834
00:40:44,610 --> 00:40:53,610
<font color="#CCCCCC">thanks for</font><font color="#E5E5E5"> great</font><font color="#CCCCCC"> board and how how to</font>

835
00:40:49,410 --> 00:40:56,549
perform at<font color="#E5E5E5"> updates of</font><font color="#CCCCCC"> core water and its</font>

836
00:40:53,610 --> 00:41:00,240
payload<font color="#CCCCCC"> when its</font><font color="#E5E5E5"> binary is used for</font>

837
00:40:56,550 --> 00:41:03,990
<font color="#E5E5E5">measurement for the release encryption</font>

838
00:41:00,240 --> 00:41:04,589
key<font color="#E5E5E5"> then when you update to the carpet</font>

839
00:41:03,990 --> 00:41:06,509
<font color="#E5E5E5">bit</font>

840
00:41:04,590 --> 00:41:08,760
this measurement<font color="#CCCCCC"> will change and you</font>

841
00:41:06,510 --> 00:41:10,770
will no longer<font color="#E5E5E5"> we'll be able to</font><font color="#CCCCCC"> build</font>

842
00:41:08,760 --> 00:41:13,920
the system and<font color="#CCCCCC"> have to</font><font color="#E5E5E5"> solve that</font>

843
00:41:10,770 --> 00:41:17,820
problem<font color="#E5E5E5"> so</font><font color="#CCCCCC"> migrated encryption keys with</font>

844
00:41:13,920 --> 00:41:21,210
TPM requires a<font color="#E5E5E5"> explicit step of</font>

845
00:41:17,820 --> 00:41:24,090
retrieving the key from the TPM<font color="#E5E5E5"> with the</font>

846
00:41:21,210 --> 00:41:27,570
current configuration and then resealing

847
00:41:24,090 --> 00:41:30,270
it with the new configuration<font color="#E5E5E5"> one</font>

848
00:41:27,570 --> 00:41:33,630
advantage of a reproducible build is the

849
00:41:30,270 --> 00:41:37,200
hashes of the of all the<font color="#CCCCCC"> firmware stages</font>

850
00:41:33,630 --> 00:41:39,510
can be published<font color="#E5E5E5"> can be</font><font color="#CCCCCC"> pre computed and</font>

851
00:41:37,200 --> 00:41:41,910
<font color="#E5E5E5">then the</font><font color="#CCCCCC"> pcr values can be precomputed</font>

852
00:41:39,510 --> 00:41:45,420
<font color="#CCCCCC">so you can read you can seal the keys</font>

853
00:41:41,910 --> 00:41:50,730
for the new values in terms of the

854
00:41:45,420 --> 00:41:53,160
update process<font color="#E5E5E5"> for</font><font color="#CCCCCC"> for for</font><font color="#E5E5E5"> the heads</font>

855
00:41:50,730 --> 00:41:55,950
payload<font color="#CCCCCC"> one of</font><font color="#E5E5E5"> things that were working</font>

856
00:41:53,160 --> 00:41:58,740
on is<font color="#CCCCCC"> being able to have</font><font color="#E5E5E5"> a even more</font>

857
00:41:55,950 --> 00:42:01,740
minimal<font color="#E5E5E5"> heads that has just a USB device</font>

858
00:41:58,740 --> 00:42:05,129
driver that you can boot<font color="#CCCCCC"> into</font><font color="#E5E5E5"> copy the</font>

859
00:42:01,740 --> 00:42:08,100
<font color="#E5E5E5">your new payload and then install that</font>

860
00:42:05,130 --> 00:42:11,610
elsewhere on<font color="#E5E5E5"> on the chip and part of</font>

861
00:42:08,100 --> 00:42:15,299
that process would involve<font color="#E5E5E5"> resealing any</font>

862
00:42:11,610 --> 00:42:17,160
of the keys that you need to transfer as

863
00:42:15,300 --> 00:42:19,920
<font color="#CCCCCC">other questions</font><font color="#E5E5E5"> on the</font><font color="#CCCCCC"> internet Thank</font>

864
00:42:17,160 --> 00:42:22,319
<font color="#CCCCCC">You</font><font color="#E5E5E5"> on your</font><font color="#CCCCCC"> webpage you implemented arm</font>

865
00:42:19,920 --> 00:42:25,080
<font color="#E5E5E5">think that's only how much breakfast</font><font color="#CCCCCC"> to</font>

866
00:42:22,320 --> 00:42:28,920
needed to translate this to<font color="#E5E5E5"> let's say</font>

867
00:42:25,080 --> 00:42:32,250
<font color="#E5E5E5">non think that's</font><font color="#CCCCCC"> thinkpads are really</font>

868
00:42:28,920 --> 00:42:33,720
popular with the security community<font color="#CCCCCC"> it</font>

869
00:42:32,250 --> 00:42:36,000
is<font color="#E5E5E5"> quite interesting to look out at</font>

870
00:42:33,720 --> 00:42:39,330
<font color="#CCCCCC">uhaul</font><font color="#E5E5E5"> here and see how many</font><font color="#CCCCCC"> thinkpads</font>

871
00:42:36,000 --> 00:42:41,220
there are and as a result the<font color="#E5E5E5"> corbu</font>

872
00:42:39,330 --> 00:42:45,660
<font color="#E5E5E5">community has been very</font><font color="#CCCCCC"> a sport of the</font>

873
00:42:41,220 --> 00:42:48,689
<font color="#E5E5E5">thinkpads there's other than the</font>

874
00:42:45,660 --> 00:42:51,359
thinkpads and<font color="#CCCCCC"> now the Chromebooks</font><font color="#E5E5E5"> there</font>

875
00:42:48,690 --> 00:42:53,400
are a lot of devices that<font color="#CCCCCC"> support Corps</font>

876
00:42:51,360 --> 00:42:55,830
<font color="#CCCCCC">boot out-of-the-box</font><font color="#E5E5E5"> and that's something</font>

877
00:42:53,400 --> 00:42:58,160
that<font color="#CCCCCC"> I hope will change</font><font color="#E5E5E5"> i hope that some</font>

878
00:42:55,830 --> 00:43:00,080
om's<font color="#E5E5E5"> would</font><font color="#CCCCCC"> realize there</font>

879
00:42:58,160 --> 00:43:03,920
value in<font color="#E5E5E5"> providing an open source</font>

880
00:43:00,080 --> 00:43:06,110
firmware and<font color="#CCCCCC"> my move</font><font color="#E5E5E5"> to move to use it</font>

881
00:43:03,920 --> 00:43:10,220
<font color="#E5E5E5">both as a cost-saving measure as well as</font>

882
00:43:06,110 --> 00:43:11,690
a<font color="#E5E5E5"> freedom measure in terms of the</font>

883
00:43:10,220 --> 00:43:14,720
difficulty important<font color="#CCCCCC"> corporate</font><font color="#E5E5E5"> to a</font>

884
00:43:11,690 --> 00:43:16,640
platform<font color="#CCCCCC"> i</font><font color="#E5E5E5"> haven't successfully done</font>

885
00:43:14,720 --> 00:43:19,939
that yet but<font color="#CCCCCC"> i</font><font color="#E5E5E5"> suspect the people at the</font>

886
00:43:16,640 --> 00:43:26,629
Assembly would be happy to discuss that

887
00:43:19,940 --> 00:43:28,520
further<font color="#E5E5E5"> would</font><font color="#CCCCCC"> blend</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> rework and</font><font color="#E5E5E5"> the</font>

888
00:43:26,630 --> 00:43:31,280
<font color="#CCCCCC">metal</font><font color="#E5E5E5"> embedded control four</font><font color="#CCCCCC"> barrel and</font>

889
00:43:28,520 --> 00:43:34,430
<font color="#CCCCCC">since that's</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> it's remained</font>

890
00:43:31,280 --> 00:43:37,280
<font color="#CCCCCC">closed at</font><font color="#E5E5E5"> bear which has</font><font color="#CCCCCC"> which</font><font color="#E5E5E5"> to which</font>

891
00:43:34,430 --> 00:43:41,540
still has an active<font color="#E5E5E5"> still</font><font color="#CCCCCC"> busy bus</font><font color="#E5E5E5"> and</font>

892
00:43:37,280 --> 00:43:44,060
probably couldn't be trusted<font color="#E5E5E5"> so your</font>

893
00:43:41,540 --> 00:43:48,110
question is how do we how do we replace

894
00:43:44,060 --> 00:43:52,759
the<font color="#CCCCCC"> ec yes do plan to replace</font><font color="#E5E5E5"> me she is</font>

895
00:43:48,110 --> 00:43:55,520
open<font color="#E5E5E5"> software us in</font><font color="#CCCCCC"> chrome books to the</font>

896
00:43:52,760 --> 00:43:58,220
<font color="#E5E5E5">Chromebook has</font><font color="#CCCCCC"> opened for CC</font><font color="#E5E5E5"> and the</font>

897
00:43:55,520 --> 00:44:00,770
part of building<font color="#E5E5E5"> coreboot for</font><font color="#CCCCCC"> Chromebook</font>

898
00:43:58,220 --> 00:44:03,439
involves installing the arm cross

899
00:44:00,770 --> 00:44:04,520
compiler to build<font color="#CCCCCC"> pc</font><font color="#E5E5E5"> firmware</font><font color="#CCCCCC"> and the</font>

900
00:44:03,440 --> 00:44:08,720
<font color="#E5E5E5">Chromebooks actually have a really</font>

901
00:44:04,520 --> 00:44:10,970
elegant protocol for the<font color="#CCCCCC"> ec2</font><font color="#E5E5E5"> attest to</font>

902
00:44:08,720 --> 00:44:14,209
the<font color="#CCCCCC"> CPU</font><font color="#E5E5E5"> that is running the firmware</font>

903
00:44:10,970 --> 00:44:17,089
that you think it is running on other

904
00:44:14,210 --> 00:44:21,200
platforms<font color="#CCCCCC"> this would</font><font color="#E5E5E5"> require a lot more</font>

905
00:44:17,090 --> 00:44:25,280
research the<font color="#E5E5E5"> at the</font><font color="#CCCCCC"> dot most of many of</font>

906
00:44:21,200 --> 00:44:27,049
the<font color="#CCCCCC"> ec chipsets</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> a data sheets</font>

907
00:44:25,280 --> 00:44:29,570
available<font color="#CCCCCC"> so it's possible to read</font>

908
00:44:27,050 --> 00:44:31,880
through and see how they work and<font color="#CCCCCC"> Muslim</font>

909
00:44:29,570 --> 00:44:33,950
have<font color="#CCCCCC"> updatable firmware</font><font color="#E5E5E5"> in the case of</font>

910
00:44:31,880 --> 00:44:35,600
the thinkpads<font color="#E5E5E5"> there's a module and think</font>

911
00:44:33,950 --> 00:44:38,060
that<font color="#CCCCCC"> bias that</font><font color="#E5E5E5"> will do that update</font>

912
00:44:35,600 --> 00:44:42,920
<font color="#E5E5E5">there's we would need to figure out what</font>

913
00:44:38,060 --> 00:44:46,640
that<font color="#CCCCCC"> particle looks like uh</font><font color="#E5E5E5"> yes</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> mean</font>

914
00:44:42,920 --> 00:44:50,840
<font color="#E5E5E5">if you have a working prototype on since</font>

915
00:44:46,640 --> 00:44:53,540
<font color="#E5E5E5">that's probably want to add</font><font color="#CCCCCC"> remain</font>

916
00:44:50,840 --> 00:44:56,390
<font color="#CCCCCC">business open source e shields in pets</font>

917
00:44:53,540 --> 00:44:59,930
as well<font color="#E5E5E5"> I</font>

918
00:44:56,390 --> 00:45:02,390
<font color="#E5E5E5">the first place</font><font color="#CCCCCC"> haven't</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> didn't</font>

919
00:44:59,930 --> 00:45:09,890
<font color="#E5E5E5">actually understood your follow-up</font>

920
00:45:02,390 --> 00:45:12,049
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> so if you have if you have a working</font>

921
00:45:09,890 --> 00:45:16,460
prototype on<font color="#CCCCCC"> sink parts</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> all the</font>

922
00:45:12,049 --> 00:45:21,470
<font color="#CCCCCC">awesome that</font><font color="#E5E5E5"> will you finish someone</font>

923
00:45:16,460 --> 00:45:25,250
soon<font color="#E5E5E5"> current position of apple pie</font>

924
00:45:21,470 --> 00:45:29,750
performance source<font color="#CCCCCC"> she exists in called</font>

925
00:45:25,250 --> 00:45:35,119
shade<font color="#E5E5E5"> my necklace or</font><font color="#CCCCCC"> your plank to</font>

926
00:45:29,750 --> 00:45:39,079
<font color="#CCCCCC">extend your work on other platforms and</font>

927
00:45:35,119 --> 00:45:41,089
<font color="#CCCCCC">finishes his bits later</font><font color="#E5E5E5"> yet</font><font color="#CCCCCC"> right now</font>

928
00:45:39,079 --> 00:45:45,740
<font color="#CCCCCC">i'm not personally in progress on the</font>

929
00:45:41,089 --> 00:45:48,288
<font color="#E5E5E5">thinkpad</font><font color="#CCCCCC"> bc</font><font color="#E5E5E5"> i was looking into it</font>

930
00:45:45,740 --> 00:45:50,839
because i have a modified keyboard on my

931
00:45:48,289 --> 00:45:52,490
<font color="#E5E5E5">think that that needs a updated</font><font color="#CCCCCC"> easy</font>

932
00:45:50,839 --> 00:45:56,630
firmware<font color="#CCCCCC"> but i</font><font color="#E5E5E5"> haven't actually gotten</font>

933
00:45:52,490 --> 00:45:58,729
into into that this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> area of of open</font>

934
00:45:56,630 --> 00:46:02,180
research

935
00:45:58,730 --> 00:46:05,240
thank you<font color="#E5E5E5"> two quick questions from the</font>

936
00:46:02,180 --> 00:46:07,578
<font color="#CCCCCC">IOC</font><font color="#E5E5E5"> are you planning to use</font><font color="#CCCCCC"> systemd</font><font color="#E5E5E5"> and</font>

937
00:46:05,240 --> 00:46:07,970
the boot process the process<font color="#CCCCCC"> the first</font>

938
00:46:07,579 --> 00:46:10,880
one

939
00:46:07,970 --> 00:46:12,500
yeah<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the second one let's say</font><font color="#E5E5E5"> you've</font>

940
00:46:10,880 --> 00:46:15,230
<font color="#CCCCCC">lost</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> number</font><font color="#E5E5E5"> and the</font>

941
00:46:12,500 --> 00:46:17,180
<font color="#E5E5E5">at the</font><font color="#CCCCCC"> congress right here</font><font color="#E5E5E5"> with the help</font>

942
00:46:15,230 --> 00:46:21,050
of a hardware programmer can you update

943
00:46:17,180 --> 00:46:23,990
<font color="#CCCCCC">been this and you welcomed</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> do you</font>

944
00:46:21,050 --> 00:46:28,550
have<font color="#E5E5E5"> to</font><font color="#CCCCCC"> currently need</font><font color="#E5E5E5"> the the hardware</font>

945
00:46:23,990 --> 00:46:34,220
access to update right now<font color="#E5E5E5"> you can</font>

946
00:46:28,550 --> 00:46:38,570
update<font color="#E5E5E5"> afterwards wet great risk because</font>

947
00:46:34,220 --> 00:46:40,310
you can leave the flash<font color="#E5E5E5"> right</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> ball and</font>

948
00:46:38,570 --> 00:46:43,520
then you can<font color="#CCCCCC"> flat which would allow you</font>

949
00:46:40,310 --> 00:46:45,740
to flash after the fact<font color="#CCCCCC"> that we are</font>

950
00:46:43,520 --> 00:46:47,690
still<font color="#E5E5E5"> working on a good procedure for</font>

951
00:46:45,740 --> 00:46:50,000
doing<font color="#CCCCCC"> that for</font><font color="#E5E5E5"> software only for more</font>

952
00:46:47,690 --> 00:46:53,810
updates once the boot<font color="#CCCCCC"> the immutable</font><font color="#E5E5E5"> boot</font>

953
00:46:50,000 --> 00:46:56,420
block is installed into the other

954
00:46:53,810 --> 00:46:59,270
question<font color="#E5E5E5"> did</font><font color="#CCCCCC"> i mention</font><font color="#E5E5E5"> that we're really</font>

955
00:46:56,420 --> 00:47:03,200
short on space<font color="#E5E5E5"> and we don't want to put</font>

956
00:46:59,270 --> 00:47:11,280
any large applications like a<font color="#CCCCCC"> mic</font><font color="#E5E5E5"> system</font>

957
00:47:03,200 --> 00:47:20,450
<font color="#CCCCCC">beyond</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> was like</font><font color="#E5E5E5"> we're good thanks</font>

958
00:47:11,280 --> 00:47:47,550
[Applause]

959
00:47:20,450 --> 00:47:47,549
[Music]

