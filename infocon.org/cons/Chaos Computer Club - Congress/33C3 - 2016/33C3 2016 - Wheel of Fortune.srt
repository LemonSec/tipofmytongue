1
00:00:01,700 --> 00:00:16,780
[Music]

2
00:00:14,380 --> 00:00:21,160
<font color="#E5E5E5">we are here for the talk wheel of</font>

3
00:00:16,780 --> 00:00:24,400
fortune<font color="#CCCCCC"> analyzing</font><font color="#E5E5E5"> embedded OS number</font>

4
00:00:21,160 --> 00:00:27,310
generators with<font color="#CCCCCC"> no sweat suits and</font><font color="#E5E5E5"> alia</font>

5
00:00:24,400 --> 00:00:30,880
<font color="#CCCCCC">bazi</font><font color="#E5E5E5"> short introduction they're both</font>

6
00:00:27,310 --> 00:00:33,160
researchers<font color="#E5E5E5"> they work with distributed</font>

7
00:00:30,880 --> 00:00:38,950
and embedded systems groups at the

8
00:00:33,160 --> 00:00:41,949
<font color="#CCCCCC">University of tent</font><font color="#E5E5E5"> your sweat</font><font color="#CCCCCC"> suits is</font>

9
00:00:38,950 --> 00:00:45,399
<font color="#CCCCCC">hardening systems and hands-on</font><font color="#E5E5E5"> teacher</font>

10
00:00:41,950 --> 00:00:50,650
for offensive security<font color="#CCCCCC"> Ali Baba's IAM</font>

11
00:00:45,399 --> 00:00:53,830
<font color="#E5E5E5">comes as a researcher from what</font><font color="#CCCCCC"> we mean</font>

12
00:00:50,650 --> 00:00:58,000
<font color="#E5E5E5">go home have</font><font color="#CCCCCC"> a chair at</font><font color="#E5E5E5"> system security</font>

13
00:00:53,830 --> 00:01:00,280
<font color="#E5E5E5">before that he was</font><font color="#CCCCCC"> a head of</font>

14
00:00:58,000 --> 00:01:01,870
vulnerability analysis and penetration

15
00:01:00,280 --> 00:01:06,460
testing group at the<font color="#E5E5E5"> sharif university</font>

16
00:01:01,870 --> 00:01:09,369
of technology and<font color="#CCCCCC"> iran iran</font><font color="#E5E5E5"> starting</font>

17
00:01:06,460 --> 00:01:11,139
with that all just<font color="#CCCCCC"> gave over</font><font color="#E5E5E5"> to both of</font>

18
00:01:09,369 --> 00:01:13,659
them and we'll have a great talk and

19
00:01:11,140 --> 00:01:19,890
questions answers later

20
00:01:13,659 --> 00:01:29,850
yes<font color="#CCCCCC"> thank you</font>

21
00:01:19,890 --> 00:01:34,530
<font color="#CCCCCC">ok thanks</font>

22
00:01:29,850 --> 00:01:36,419
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> welcome everybody to our talk</font>

23
00:01:34,530 --> 00:01:39,900
<font color="#E5E5E5">with</font><font color="#CCCCCC"> our fortune</font><font color="#E5E5E5"> analyzing</font><font color="#CCCCCC"> a minute or</font>

24
00:01:36,420 --> 00:01:42,030
<font color="#CCCCCC">strangle number generations to start</font>

25
00:01:39,900 --> 00:01:43,740
with us you want to<font color="#E5E5E5"> introduce</font><font color="#CCCCCC"> yourself</font>

26
00:01:42,030 --> 00:01:45,420
<font color="#CCCCCC">I'm Yours Wetzel's</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> I already</font><font color="#E5E5E5"> was</font>

27
00:01:43,740 --> 00:01:47,220
introduced and I'm a researcher at the

28
00:01:45,420 --> 00:01:48,420
distributed<font color="#CCCCCC"> in embedded systems security</font>

29
00:01:47,220 --> 00:01:51,690
<font color="#E5E5E5">group in 20</font>

30
00:01:48,420 --> 00:01:54,539
this is ali abbasi<font color="#CCCCCC"> yeah I am alia porci</font>

31
00:01:51,690 --> 00:01:56,160
<font color="#CCCCCC">a PhD student at distributed an</font>

32
00:01:54,539 --> 00:01:57,840
<font color="#CCCCCC">ambulance is</font><font color="#E5E5E5"> some security group of</font>

33
00:01:56,160 --> 00:01:59,460
university of to enter and visiting

34
00:01:57,840 --> 00:02:02,759
researcher<font color="#E5E5E5"> at</font><font color="#CCCCCC"> chair of system</font><font color="#E5E5E5"> security</font>

35
00:01:59,460 --> 00:02:04,559
of<font color="#CCCCCC"> law university home in</font><font color="#E5E5E5"> German so we</font>

36
00:02:02,759 --> 00:02:06,420
<font color="#E5E5E5">start with the introduction to emulate</font>

37
00:02:04,560 --> 00:02:08,640
<font color="#E5E5E5">or</font><font color="#CCCCCC"> stranded normal generator</font><font color="#E5E5E5"> today and</font>

38
00:02:06,420 --> 00:02:12,630
then we<font color="#E5E5E5"> overview</font><font color="#CCCCCC"> someone better</font>

39
00:02:08,639 --> 00:02:14,609
<font color="#CCCCCC">challenges for</font><font color="#E5E5E5"> generally and for</font>

40
00:02:12,630 --> 00:02:16,470
specifically for<font color="#CCCCCC"> a number of</font><font color="#E5E5E5"> post random</font>

41
00:02:14,610 --> 00:02:18,959
number generators<font color="#E5E5E5"> we would have some</font>

42
00:02:16,470 --> 00:02:20,700
cases studies<font color="#CCCCCC"> showing these challenges</font>

43
00:02:18,959 --> 00:02:23,970
how it's affecting already existing

44
00:02:20,700 --> 00:02:26,880
<font color="#CCCCCC">sources all real-time operating systems</font>

45
00:02:23,970 --> 00:02:30,120
and<font color="#E5E5E5"> well this work is actually a ongoing</font>

46
00:02:26,880 --> 00:02:36,239
research is part of your<font color="#E5E5E5"> thesis which is</font>

47
00:02:30,120 --> 00:02:38,760
surprising and yeah so<font color="#E5E5E5"> so first of all</font>

48
00:02:36,239 --> 00:02:43,170
<font color="#CCCCCC">msn</font><font color="#E5E5E5"> are actually now a river from</font>

49
00:02:38,760 --> 00:02:46,260
consumer electronics<font color="#CCCCCC"> are medical devices</font>

50
00:02:43,170 --> 00:02:48,298
<font color="#E5E5E5">critical infrastructures military</font>

51
00:02:46,260 --> 00:02:51,359
equipment or aviation so actually you

52
00:02:48,299 --> 00:02:53,940
see them everywhere and<font color="#CCCCCC"> decide that</font>

53
00:02:51,360 --> 00:02:57,510
there is a drive for connecting<font color="#CCCCCC"> assembly</font>

54
00:02:53,940 --> 00:02:59,880
systems<font color="#CCCCCC"> as an internal sings</font><font color="#E5E5E5"> wireless</font>

55
00:02:57,510 --> 00:03:02,340
<font color="#E5E5E5">original use devices was not designed to</font>

56
00:02:59,880 --> 00:03:04,260
be connected to the internet but<font color="#CCCCCC"> right</font>

57
00:03:02,340 --> 00:03:07,650
now there<font color="#E5E5E5"> is a gap which</font><font color="#CCCCCC"> vendors have to</font>

58
00:03:04,260 --> 00:03:09,600
have to fix right and relatives can

59
00:03:07,650 --> 00:03:12,420
cause problems<font color="#CCCCCC"> as you</font><font color="#E5E5E5"> can see for</font>

60
00:03:09,600 --> 00:03:15,120
example<font color="#E5E5E5"> for</font><font color="#CCCCCC"> Durandal majority rules</font>

61
00:03:12,420 --> 00:03:17,070
which<font color="#CCCCCC"> we specifically ward</font><font color="#E5E5E5"> you can see</font>

62
00:03:15,120 --> 00:03:18,630
there are<font color="#E5E5E5"> any problems for example</font>

63
00:03:17,070 --> 00:03:20,820
millions of<font color="#CCCCCC"> remember that devices use</font>

64
00:03:18,630 --> 00:03:25,960
the same<font color="#CCCCCC"> hardware such and TLS</font><font color="#E5E5E5"> keys</font>

65
00:03:20,820 --> 00:03:28,209
which made some<font color="#E5E5E5"> noises in the media so</font>

66
00:03:25,960 --> 00:03:33,490
<font color="#E5E5E5">the worst random numbers</font><font color="#CCCCCC"> and Rachel's</font>

67
00:03:28,210 --> 00:03:34,840
well what is randomness

68
00:03:33,490 --> 00:03:37,120
I don't want to talk about the

69
00:03:34,840 --> 00:03:39,640
philosophically<font color="#E5E5E5"> talk of randomness here</font>

70
00:03:37,120 --> 00:03:42,250
but well it's generally in a stream of

71
00:03:39,640 --> 00:03:44,410
<font color="#E5E5E5">but if you cannot predator next</font><font color="#CCCCCC"> PT</font><font color="#E5E5E5"> the</font>

72
00:03:42,250 --> 00:03:46,390
<font color="#CCCCCC">product will</font><font color="#E5E5E5"> be the probability of more</font>

73
00:03:44,410 --> 00:03:48,910
than fifty percent<font color="#E5E5E5"> then</font><font color="#CCCCCC"> let's call it</font>

74
00:03:46,390 --> 00:03:51,850
<font color="#CCCCCC">ran and</font><font color="#E5E5E5"> another side of it is like</font>

75
00:03:48,910 --> 00:03:53,560
entropy which is<font color="#CCCCCC"> very interesting some</font>

76
00:03:51,850 --> 00:03:56,890
measurement of information on

77
00:03:53,560 --> 00:03:58,510
<font color="#E5E5E5">productivity and how unpredictable order</font>

78
00:03:56,890 --> 00:04:02,230
information and usually high entropy

79
00:03:58,510 --> 00:04:04,690
means very random or higher animals and

80
00:04:02,230 --> 00:04:06,790
of course<font color="#E5E5E5"> why these things are important</font>

81
00:04:04,690 --> 00:04:09,790
because actually<font color="#E5E5E5"> random random random</font>

82
00:04:06,790 --> 00:04:13,359
numbers are actually a fundamental part

83
00:04:09,790 --> 00:04:15,370
of other security ecosystems<font color="#CCCCCC"> we have so</font>

84
00:04:13,360 --> 00:04:18,400
for example<font color="#E5E5E5"> use it for cryptography</font>

85
00:04:15,370 --> 00:04:20,350
<font color="#CCCCCC">stuffs or four</font><font color="#E5E5E5"> keys</font><font color="#CCCCCC"> dances or exploit</font>

86
00:04:18,399 --> 00:04:22,299
mitigations which may be never heard

87
00:04:20,350 --> 00:04:23,950
about it but actually we are using them

88
00:04:22,300 --> 00:04:27,070
for<font color="#CCCCCC"> expert</font><font color="#E5E5E5"> in situations such as a</font>

89
00:04:23,950 --> 00:04:29,349
centaur or<font color="#E5E5E5"> and</font><font color="#CCCCCC"> stack smashing</font>

90
00:04:27,070 --> 00:04:31,480
protections<font color="#CCCCCC"> so random is actually</font>

91
00:04:29,350 --> 00:04:35,560
critical for other other underlying

92
00:04:31,480 --> 00:04:37,420
system which builds upon them<font color="#E5E5E5"> so that's</font>

93
00:04:35,560 --> 00:04:39,790
<font color="#E5E5E5">why</font><font color="#CCCCCC"> they're critical so how we can</font>

94
00:04:37,420 --> 00:04:43,090
generate<font color="#CCCCCC"> a random number so physically</font>

95
00:04:39,790 --> 00:04:45,940
like<font color="#E5E5E5"> true random number generators are</font>

96
00:04:43,090 --> 00:04:48,580
like radioactive radioactive decays or

97
00:04:45,940 --> 00:04:50,380
shot noises<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> generally</font>

98
00:04:48,580 --> 00:04:53,500
<font color="#E5E5E5">implemented</font><font color="#CCCCCC"> in two ways as external</font>

99
00:04:50,380 --> 00:04:55,719
devices such as<font color="#E5E5E5"> TPM</font><font color="#CCCCCC"> or hsm</font><font color="#E5E5E5"> or as</font>

100
00:04:53,500 --> 00:04:58,450
integrated<font color="#CCCCCC"> device fitting for</font><font color="#E5E5E5"> example</font>

101
00:04:55,720 --> 00:05:00,580
until<font color="#CCCCCC"> ivy bridge cpus or certainly</font><font color="#E5E5E5"> smart</font>

102
00:04:58,450 --> 00:05:00,969
<font color="#E5E5E5">cards but there are some downsides for</font>

103
00:05:00,580 --> 00:05:03,400
<font color="#E5E5E5">it</font>

104
00:05:00,970 --> 00:05:05,500
for example<font color="#E5E5E5"> your expensive</font><font color="#CCCCCC"> ordered some</font>

105
00:05:03,400 --> 00:05:08,469
<font color="#CCCCCC">poor stability issues when the</font><font color="#E5E5E5"> command</font>

106
00:05:05,500 --> 00:05:12,730
or<font color="#E5E5E5"> try to move to the next architecture</font>

107
00:05:08,470 --> 00:05:14,290
<font color="#E5E5E5">so that's why because you can't use</font>

108
00:05:12,730 --> 00:05:16,450
those expensive hardware is<font color="#E5E5E5"> you are</font>

109
00:05:14,290 --> 00:05:17,230
<font color="#E5E5E5">using software is random number</font>

110
00:05:16,450 --> 00:05:18,400
generators

111
00:05:17,230 --> 00:05:21,190
<font color="#E5E5E5">well they are like the deterministic</font>

112
00:05:18,400 --> 00:05:24,370
algorithms which you stretch<font color="#CCCCCC"> seats into</font>

113
00:05:21,190 --> 00:05:25,750
sequence of random<font color="#CCCCCC"> looking.its</font><font color="#E5E5E5"> but the</font>

114
00:05:24,370 --> 00:05:28,360
problem is that not all of these random

115
00:05:25,750 --> 00:05:30,190
number generators are designed to be

116
00:05:28,360 --> 00:05:32,860
used for security purposes for example

117
00:05:30,190 --> 00:05:35,260
<font color="#CCCCCC">brand</font><font color="#E5E5E5"> which we are going to show is</font>

118
00:05:32,860 --> 00:05:36,200
<font color="#E5E5E5">complete it will be used later by some</font>

119
00:05:35,260 --> 00:05:37,460
people

120
00:05:36,200 --> 00:05:42,770
it's not designed for<font color="#E5E5E5"> safety purposes</font>

121
00:05:37,460 --> 00:05:46,280
<font color="#E5E5E5">but some people use anyway so because of</font>

122
00:05:42,770 --> 00:05:49,310
that you we have secure<font color="#CCCCCC"> random</font><font color="#E5E5E5"> number</font>

123
00:05:46,280 --> 00:05:52,099
generators and those are usually they

124
00:05:49,310 --> 00:05:54,320
have that tree features or properties

125
00:05:52,100 --> 00:05:57,230
first of all<font color="#E5E5E5"> is that the outfit must be</font>

126
00:05:54,320 --> 00:05:59,420
indistinguishable from the uniform and

127
00:05:57,230 --> 00:06:01,220
their<font color="#CCCCCC"> must-haves forward</font><font color="#E5E5E5"> security which</font>

128
00:05:59,420 --> 00:06:03,590
means that in case<font color="#E5E5E5"> the</font><font color="#CCCCCC"> internist</font>

129
00:06:01,220 --> 00:06:06,110
internal<font color="#E5E5E5"> state of the</font><font color="#CCCCCC"> after system is</font>

130
00:06:03,590 --> 00:06:09,320
compromised<font color="#CCCCCC"> still at the</font><font color="#E5E5E5"> past</font><font color="#CCCCCC"> outputs</font>

131
00:06:06,110 --> 00:06:11,000
<font color="#CCCCCC">must</font><font color="#E5E5E5"> still appear random and again for</font>

132
00:06:09,320 --> 00:06:13,310
<font color="#CCCCCC">backward</font><font color="#E5E5E5"> security as a feature which is</font>

133
00:06:11,000 --> 00:06:16,190
that<font color="#CCCCCC"> safe</font><font color="#E5E5E5"> internal</font><font color="#CCCCCC"> States is compromised</font>

134
00:06:13,310 --> 00:06:18,740
again<font color="#E5E5E5"> the future output still might must</font>

135
00:06:16,190 --> 00:06:21,140
appear<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> random</font><font color="#CCCCCC"> provided</font><font color="#E5E5E5"> that the</font>

136
00:06:18,740 --> 00:06:26,570
receding<font color="#E5E5E5"> is the sufficient or</font><font color="#CCCCCC"> good</font>

137
00:06:21,140 --> 00:06:28,789
<font color="#E5E5E5">quality entropy so</font><font color="#CCCCCC"> of that a</font><font color="#E5E5E5"> designing</font>

138
00:06:26,570 --> 00:06:29,930
<font color="#E5E5E5">random number generators are not easy</font><font color="#CCCCCC"> so</font>

139
00:06:28,790 --> 00:06:32,360
<font color="#E5E5E5">because of that you have for example</font>

140
00:06:29,930 --> 00:06:36,500
some<font color="#E5E5E5"> search and standards for</font><font color="#CCCCCC"> it like</font>

141
00:06:32,360 --> 00:06:38,360
<font color="#E5E5E5">nice</font><font color="#CCCCCC"> Tess p 890 a which has some</font><font color="#E5E5E5"> access</font>

142
00:06:36,500 --> 00:06:40,220
to possibly<font color="#CCCCCC"> buy a source of seed</font><font color="#E5E5E5"> entropy</font>

143
00:06:38,360 --> 00:06:42,380
<font color="#E5E5E5">but the problem is that this is</font><font color="#CCCCCC"> standard</font>

144
00:06:40,220 --> 00:06:45,770
<font color="#E5E5E5">leave some heart problems for example</font>

145
00:06:42,380 --> 00:06:48,830
<font color="#E5E5E5">and</font><font color="#CCCCCC"> schotzie</font><font color="#E5E5E5"> entropy or</font><font color="#CCCCCC"> riesling</font><font color="#E5E5E5"> control</font>

146
00:06:45,770 --> 00:06:53,150
or how<font color="#E5E5E5"> how is the quality after the</font>

147
00:06:48,830 --> 00:06:53,719
source of the entropy is so because of

148
00:06:53,150 --> 00:06:55,400
that

149
00:06:53,720 --> 00:06:56,990
well<font color="#CCCCCC"> somebody's some other people think</font>

150
00:06:55,400 --> 00:07:00,380
about it and<font color="#E5E5E5"> design something else like</font>

151
00:06:56,990 --> 00:07:02,240
such as<font color="#E5E5E5"> your or</font><font color="#CCCCCC"> Fortana</font><font color="#E5E5E5"> which already</font>

152
00:07:00,380 --> 00:07:07,640
implemented in some<font color="#CCCCCC"> advanced sources</font>

153
00:07:02,240 --> 00:07:10,490
such as<font color="#CCCCCC"> always 643 PST or iOS</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> yeah</font>

154
00:07:07,640 --> 00:07:13,880
<font color="#CCCCCC">the problem here is actually</font><font color="#E5E5E5"> it she can</font>

155
00:07:10,490 --> 00:07:15,920
<font color="#CCCCCC">add problem because well to generate</font>

156
00:07:13,880 --> 00:07:18,050
random numbers you need some kind of

157
00:07:15,920 --> 00:07:20,000
sort of entropy<font color="#CCCCCC"> or randomness but these</font>

158
00:07:18,050 --> 00:07:22,670
<font color="#E5E5E5">random</font><font color="#CCCCCC"> noises</font><font color="#E5E5E5"> again needs another source</font>

159
00:07:20,000 --> 00:07:25,940
of<font color="#CCCCCC"> animus so ideally you want to use the</font>

160
00:07:22,670 --> 00:07:27,920
physical<font color="#E5E5E5"> phenomena a lot such as like if</font>

161
00:07:25,940 --> 00:07:30,290
we consider quantum<font color="#E5E5E5"> randomness is like</font>

162
00:07:27,920 --> 00:07:32,330
radioactive decay shot noises or<font color="#E5E5E5"> non</font>

163
00:07:30,290 --> 00:07:34,550
quantum<font color="#CCCCCC"> random as</font><font color="#E5E5E5"> such as</font><font color="#CCCCCC"> turmoil noses</font>

164
00:07:32,330 --> 00:07:36,030
<font color="#CCCCCC">atmospheric noise and</font><font color="#E5E5E5"> sensor values well</font>

165
00:07:34,550 --> 00:07:39,390
this is so

166
00:07:36,030 --> 00:07:41,669
<font color="#E5E5E5">let's say not always available so</font>

167
00:07:39,390 --> 00:07:43,440
practically now and for example

168
00:07:41,670 --> 00:07:45,660
<font color="#E5E5E5">general-purpose computers you can see</font>

169
00:07:43,440 --> 00:07:48,390
that you can use<font color="#CCCCCC"> unpredictable system</font>

170
00:07:45,660 --> 00:07:51,120
events<font color="#E5E5E5"> one good source is the user</font><font color="#CCCCCC"> into</font>

171
00:07:48,390 --> 00:07:53,520
<font color="#E5E5E5">the user itself so</font><font color="#CCCCCC"> Castro timing mouse</font>

172
00:07:51,120 --> 00:07:55,350
movement or<font color="#CCCCCC"> disc axes can use in general</font>

173
00:07:53,520 --> 00:07:58,890
<font color="#E5E5E5">purpose computers at the source of that</font>

174
00:07:55,350 --> 00:08:02,310
sort of<font color="#CCCCCC"> eventually and therefore</font>

175
00:07:58,890 --> 00:08:04,380
actually<font color="#E5E5E5"> we believe that randomness or</font>

176
00:08:02,310 --> 00:08:07,470
like<font color="#CCCCCC"> a secure</font><font color="#E5E5E5"> enormous should be</font>

177
00:08:04,380 --> 00:08:09,780
provided as a system service because

178
00:08:07,470 --> 00:08:11,550
it's hard and hard to<font color="#CCCCCC"> implemented</font><font color="#E5E5E5"> and</font>

179
00:08:09,780 --> 00:08:14,489
<font color="#E5E5E5">well of course people make mistakes</font>

180
00:08:11,550 --> 00:08:16,440
later if you<font color="#E5E5E5"> don't so actually many</font>

181
00:08:14,490 --> 00:08:18,240
horses actually already provide<font color="#CCCCCC"> secure</font>

182
00:08:16,440 --> 00:08:21,330
<font color="#E5E5E5">and</font><font color="#CCCCCC"> honest as a system service for</font>

183
00:08:18,240 --> 00:08:24,660
example do you have<font color="#CCCCCC"> def</font><font color="#E5E5E5"> you random</font><font color="#CCCCCC"> in a</font>

184
00:08:21,330 --> 00:08:27,810
<font color="#CCCCCC">DNA unix-like system or Krypton random</font>

185
00:08:24,660 --> 00:08:30,030
<font color="#E5E5E5">API on</font><font color="#CCCCCC"> windows</font><font color="#E5E5E5"> and another important</font>

186
00:08:27,810 --> 00:08:32,190
thing is that again all of lots of other

187
00:08:30,030 --> 00:08:36,120
security products<font color="#E5E5E5"> are</font><font color="#CCCCCC"> beats</font><font color="#E5E5E5"> on them so</font>

188
00:08:32,190 --> 00:08:38,070
for example<font color="#CCCCCC"> openssl for</font><font color="#E5E5E5"> is assuming that</font>

189
00:08:36,120 --> 00:08:40,320
there is a secure as a service from

190
00:08:38,070 --> 00:08:42,660
operating system as<font color="#CCCCCC"> a random</font><font color="#E5E5E5"> number</font>

191
00:08:40,320 --> 00:08:45,000
<font color="#CCCCCC">generators and again based on open asset</font>

192
00:08:42,659 --> 00:08:48,329
you have<font color="#E5E5E5"> like</font><font color="#CCCCCC"> openssh an openvpn too so</font>

193
00:08:45,000 --> 00:08:49,560
it's very<font color="#E5E5E5"> very important so now</font><font color="#CCCCCC"> I think</font>

194
00:08:48,330 --> 00:08:51,420
you're starting out there

195
00:08:49,560 --> 00:08:53,819
<font color="#E5E5E5">alright so we've taken a look at the</font>

196
00:08:51,420 --> 00:08:55,319
general background of<font color="#E5E5E5"> random number</font>

197
00:08:53,820 --> 00:08:57,030
generators and now we'll take a look at

198
00:08:55,320 --> 00:09:00,150
why it's<font color="#CCCCCC"> so difficult</font><font color="#E5E5E5"> to get this right</font>

199
00:08:57,030 --> 00:09:02,040
in the embedded world<font color="#E5E5E5"> so the common</font>

200
00:09:00,150 --> 00:09:03,840
<font color="#CCCCCC">advice when you need random numbers in</font>

201
00:09:02,040 --> 00:09:06,270
<font color="#E5E5E5">in the</font><font color="#CCCCCC"> general-purpose</font><font color="#E5E5E5"> world is just</font>

202
00:09:03,840 --> 00:09:08,730
used a few random and draw from there

203
00:09:06,270 --> 00:09:10,590
<font color="#E5E5E5">but it's not as easy in the</font><font color="#CCCCCC"> matted</font><font color="#E5E5E5"> world</font>

204
00:09:08,730 --> 00:09:13,260
because of various design issues which

205
00:09:10,590 --> 00:09:15,150
<font color="#E5E5E5">mean that operating system random number</font>

206
00:09:13,260 --> 00:09:17,700
generators in the embedded world are

207
00:09:15,150 --> 00:09:21,060
often absent or broken as<font color="#CCCCCC"> well</font>

208
00:09:17,700 --> 00:09:23,550
<font color="#E5E5E5">exploring this dark so the three main</font>

209
00:09:21,060 --> 00:09:26,130
areas of constraints<font color="#E5E5E5"> are polyculture</font>

210
00:09:23,550 --> 00:09:27,630
<font color="#E5E5E5">resource constraints and low entropy</font>

211
00:09:26,130 --> 00:09:29,970
<font color="#CCCCCC">environments which we'll all discuss</font>

212
00:09:27,630 --> 00:09:32,400
into detail and how these relate<font color="#E5E5E5"> to</font>

213
00:09:29,970 --> 00:09:35,940
particular implementation difficulties

214
00:09:32,400 --> 00:09:37,890
<font color="#E5E5E5">so the first of all is that in the</font>

215
00:09:35,940 --> 00:09:39,660
<font color="#CCCCCC">matted</font><font color="#E5E5E5"> world you have a polyculture of</font>

216
00:09:37,890 --> 00:09:41,970
operating systems where<font color="#E5E5E5"> is in the</font>

217
00:09:39,660 --> 00:09:44,589
<font color="#CCCCCC">general-purpose</font><font color="#E5E5E5"> world you got</font><font color="#CCCCCC"> line-x</font><font color="#E5E5E5"> you</font>

218
00:09:41,970 --> 00:09:46,930
got<font color="#CCCCCC"> windows she got</font><font color="#E5E5E5"> your mac</font><font color="#CCCCCC"> OSX india</font>

219
00:09:44,590 --> 00:09:49,330
<font color="#CCCCCC">and bad world</font><font color="#E5E5E5"> you have various kinds of</font>

220
00:09:46,930 --> 00:09:52,420
different operating systems ranging from

221
00:09:49,330 --> 00:09:54,730
<font color="#CCCCCC">high capability micro kernels to very</font>

222
00:09:52,420 --> 00:09:56,890
small monolithic systems<font color="#CCCCCC"> all</font><font color="#E5E5E5"> with</font>

223
00:09:54,730 --> 00:09:58,240
<font color="#E5E5E5">different constraints</font><font color="#CCCCCC"> in different</font><font color="#E5E5E5"> kinds</font>

224
00:09:56,890 --> 00:10:00,040
of capabilities<font color="#CCCCCC"> and</font><font color="#E5E5E5"> catering</font><font color="#CCCCCC"> to</font>

225
00:09:58,240 --> 00:10:02,200
different<font color="#CCCCCC"> systems so if you design a</font>

226
00:10:00,040 --> 00:10:04,630
general operating system<font color="#E5E5E5"> random number</font>

227
00:10:02,200 --> 00:10:06,220
generator design<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> very hard to have</font>

228
00:10:04,630 --> 00:10:09,250
<font color="#E5E5E5">this standardized all across the board</font>

229
00:10:06,220 --> 00:10:11,500
<font color="#E5E5E5">because of this variety</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the same of</font>

230
00:10:09,250 --> 00:10:13,420
course applies to the hardware spectrum

231
00:10:11,500 --> 00:10:15,520
because you have a wider range of

232
00:10:13,420 --> 00:10:17,530
microcontrollers and micro<font color="#E5E5E5"> protesters</font>

233
00:10:15,520 --> 00:10:19,270
all<font color="#E5E5E5"> the different capabilities and it's</font>

234
00:10:17,530 --> 00:10:21,400
not uncommon to see older or

235
00:10:19,270 --> 00:10:25,360
functionally stripped down versions in<font color="#E5E5E5"> a</font>

236
00:10:21,400 --> 00:10:27,220
<font color="#E5E5E5">newly</font><font color="#CCCCCC"> field devices so if you design a</font>

237
00:10:25,360 --> 00:10:29,290
random number generator based on the

238
00:10:27,220 --> 00:10:31,810
assumption that you have sole source of

239
00:10:29,290 --> 00:10:34,839
hardware<font color="#CCCCCC"> random number generator or</font>

240
00:10:31,810 --> 00:10:36,160
physical physical source of entropy<font color="#E5E5E5"> and</font>

241
00:10:34,840 --> 00:10:38,110
this<font color="#E5E5E5"> means that</font><font color="#CCCCCC"> your operating system</font>

242
00:10:36,160 --> 00:10:40,689
<font color="#E5E5E5">cannot be deployed across a wide range</font>

243
00:10:38,110 --> 00:10:43,960
of chips<font color="#CCCCCC"> so that's that's definitely a</font>

244
00:10:40,690 --> 00:10:45,880
major design issue there and of<font color="#E5E5E5"> course</font><font color="#CCCCCC"> I</font>

245
00:10:43,960 --> 00:10:47,710
<font color="#E5E5E5">am better devices are designed to have a</font>

246
00:10:45,880 --> 00:10:49,780
small footprint<font color="#E5E5E5"> and to be resource</font>

247
00:10:47,710 --> 00:10:51,730
efficient and this translates to various

248
00:10:49,780 --> 00:10:52,720
limitations when designing<font color="#E5E5E5"> random number</font>

249
00:10:51,730 --> 00:10:55,060
generators

250
00:10:52,720 --> 00:10:57,550
so for example<font color="#E5E5E5"> limitations with regards</font>

251
00:10:55,060 --> 00:11:00,250
to<font color="#E5E5E5"> cpu speed</font><font color="#CCCCCC"> translate</font><font color="#E5E5E5"> to lightweight</font>

252
00:10:57,550 --> 00:11:02,380
cryptography requirements<font color="#CCCCCC"> power</font>

253
00:11:00,250 --> 00:11:04,480
consumption limitations especially for

254
00:11:02,380 --> 00:11:06,640
<font color="#E5E5E5">battery-operated devices mean you need</font>

255
00:11:04,480 --> 00:11:09,280
to have a simple design to have limited

256
00:11:06,640 --> 00:11:11,590
<font color="#CCCCCC">and two people and activity and memory</font>

257
00:11:09,280 --> 00:11:13,329
limitations mean you need small entropy

258
00:11:11,590 --> 00:11:15,490
and internal<font color="#E5E5E5"> state in your random number</font>

259
00:11:13,330 --> 00:11:19,060
generator in order to<font color="#CCCCCC"> implemented in</font>

260
00:11:15,490 --> 00:11:21,640
these<font color="#CCCCCC"> constrain devices and of</font><font color="#E5E5E5"> course</font>

261
00:11:19,060 --> 00:11:24,369
there's the issue of the embedded world

262
00:11:21,640 --> 00:11:26,140
just generally<font color="#CCCCCC"> bang</font><font color="#E5E5E5"> being very boring</font>

263
00:11:24,370 --> 00:11:27,910
<font color="#E5E5E5">there is little activity going on and</font>

264
00:11:26,140 --> 00:11:30,250
what activity is going on<font color="#E5E5E5"> is usually</font>

265
00:11:27,910 --> 00:11:32,829
very predictable<font color="#E5E5E5"> and there is a</font>

266
00:11:30,250 --> 00:11:34,750
limitation with<font color="#CCCCCC"> regard</font><font color="#E5E5E5"> to common</font><font color="#CCCCCC"> entropy</font>

267
00:11:32,830 --> 00:11:36,730
<font color="#CCCCCC">sources like Ali discussed in the</font>

268
00:11:34,750 --> 00:11:40,510
<font color="#CCCCCC">general-purpose world you often use disk</font>

269
00:11:36,730 --> 00:11:42,520
activity timings<font color="#E5E5E5"> keyboard events</font><font color="#CCCCCC"> mouse</font>

270
00:11:40,510 --> 00:11:44,530
<font color="#E5E5E5">events but in the embedded world you</font>

271
00:11:42,520 --> 00:11:46,510
often have to deal with diskless<font color="#CCCCCC"> nodes</font>

272
00:11:44,530 --> 00:11:48,069
<font color="#E5E5E5">you don't have para</font><font color="#CCCCCC"> Farrell's</font><font color="#E5E5E5"> you don't</font>

273
00:11:46,510 --> 00:11:49,960
have a user and you don't have<font color="#CCCCCC"> hardware</font>

274
00:11:48,070 --> 00:11:51,640
<font color="#E5E5E5">random number generators and even</font>

275
00:11:49,960 --> 00:11:53,800
commonly available sources like

276
00:11:51,640 --> 00:11:55,670
interrupt<font color="#E5E5E5"> request timings are often not</font>

277
00:11:53,800 --> 00:11:58,819
that good because<font color="#E5E5E5"> they're too</font>

278
00:11:55,670 --> 00:12:00,979
<font color="#E5E5E5">erotic</font><font color="#CCCCCC"> and these</font><font color="#E5E5E5"> conditions are usually</font>

279
00:11:58,820 --> 00:12:02,780
<font color="#CCCCCC">worst</font><font color="#E5E5E5"> during boot</font><font color="#CCCCCC"> dying because you have</font>

280
00:12:00,980 --> 00:12:05,600
predictable<font color="#CCCCCC"> boot sequences there's</font>

281
00:12:02,780 --> 00:12:07,459
little activity going on at boot and so

282
00:12:05,600 --> 00:12:09,230
<font color="#CCCCCC">mental resources you might want to rely</font>

283
00:12:07,460 --> 00:12:10,550
on<font color="#CCCCCC"> are simply not</font><font color="#E5E5E5"> available yet because</font>

284
00:12:09,230 --> 00:12:13,400
they have to be initialized by the

285
00:12:10,550 --> 00:12:15,560
system<font color="#E5E5E5"> after the boot sequence yet</font>

286
00:12:13,400 --> 00:12:17,569
<font color="#E5E5E5">non-blocking interfaces to random number</font>

287
00:12:15,560 --> 00:12:19,520
generators such as the<font color="#CCCCCC"> Deaf your random</font>

288
00:12:17,570 --> 00:12:21,140
interface<font color="#CCCCCC"> allows from drawing from the</font>

289
00:12:19,520 --> 00:12:22,760
random number generator<font color="#E5E5E5"> even when</font>

290
00:12:21,140 --> 00:12:25,189
insufficient entropy is actually

291
00:12:22,760 --> 00:12:26,900
available in the system<font color="#CCCCCC"> and this results</font>

292
00:12:25,190 --> 00:12:30,530
in something called the<font color="#CCCCCC"> food I'm entropy</font>

293
00:12:26,900 --> 00:12:32,689
<font color="#CCCCCC">whole so this is particularly bad</font>

294
00:12:30,530 --> 00:12:34,850
because a lot of embedded devices often

295
00:12:32,690 --> 00:12:36,530
<font color="#E5E5E5">generate cryptographic keys on the first</font>

296
00:12:34,850 --> 00:12:39,020
system<font color="#E5E5E5"> boot so this means that if you</font>

297
00:12:36,530 --> 00:12:40,970
have a system with<font color="#E5E5E5"> general low entropy</font>

298
00:12:39,020 --> 00:12:43,640
conditions and an initial<font color="#CCCCCC"> state</font>

299
00:12:40,970 --> 00:12:46,310
<font color="#E5E5E5">predetermined in the factory combined</font>

300
00:12:43,640 --> 00:12:48,170
with these these low<font color="#CCCCCC"> routan conditions</font>

301
00:12:46,310 --> 00:12:52,069
and then generating<font color="#E5E5E5"> a key</font>

302
00:12:48,170 --> 00:12:54,380
this results in<font color="#E5E5E5"> very very serious</font>

303
00:12:52,070 --> 00:12:56,630
cryptographic issues<font color="#E5E5E5"> a common solution</font>

304
00:12:54,380 --> 00:12:58,820
you<font color="#CCCCCC"> encountered to deal with with boodam</font>

305
00:12:56,630 --> 00:13:00,650
entropy in<font color="#CCCCCC"> the general-purpose</font><font color="#E5E5E5"> world is</font>

306
00:12:58,820 --> 00:13:02,840
using so-called<font color="#E5E5E5"> seed files which is</font>

307
00:13:00,650 --> 00:13:04,939
basically<font color="#E5E5E5"> file with collected randomness</font>

308
00:13:02,840 --> 00:13:08,090
which is drawn from by the random number

309
00:13:04,940 --> 00:13:10,160
generator<font color="#E5E5E5"> put into the system and when</font>

310
00:13:08,090 --> 00:13:11,870
did the<font color="#CCCCCC"> the system shuts down</font>

311
00:13:10,160 --> 00:13:13,310
it writes to the file again but in the

312
00:13:11,870 --> 00:13:15,560
embedded world it's kind of hard to

313
00:13:13,310 --> 00:13:17,060
generally<font color="#CCCCCC"> deploy</font><font color="#E5E5E5"> the solution because</font>

314
00:13:15,560 --> 00:13:19,010
how are you going to deal with<font color="#E5E5E5"> diskless</font>

315
00:13:17,060 --> 00:13:21,140
<font color="#E5E5E5">notes</font><font color="#CCCCCC"> how are</font><font color="#E5E5E5"> you going to draw your</font>

316
00:13:19,010 --> 00:13:23,840
entropy for a<font color="#E5E5E5"> file system is mounted</font>

317
00:13:21,140 --> 00:13:28,040
which is often required and still this

318
00:13:23,840 --> 00:13:29,510
doesn't solve first boot problem so some

319
00:13:28,040 --> 00:13:31,969
common embedded<font color="#CCCCCC"> workarounds you</font>

320
00:13:29,510 --> 00:13:34,160
<font color="#CCCCCC">encounter is including an initial seed</font>

321
00:13:31,970 --> 00:13:36,650
file in the firmware and this initial

322
00:13:34,160 --> 00:13:38,810
seed file<font color="#E5E5E5"> obviously better be unique and</font>

323
00:13:36,650 --> 00:13:41,390
unpredictable<font color="#CCCCCC"> / firmware image</font>

324
00:13:38,810 --> 00:13:43,939
otherwise it doesn't do you much good<font color="#E5E5E5"> or</font>

325
00:13:41,390 --> 00:13:46,610
using<font color="#E5E5E5"> personalization data such as said</font>

326
00:13:43,940 --> 00:13:49,070
the<font color="#CCCCCC"> mac address</font><font color="#E5E5E5"> or serial number of</font><font color="#CCCCCC"> the</font>

327
00:13:46,610 --> 00:13:51,200
router and using<font color="#CCCCCC"> it a seed entropy which</font>

328
00:13:49,070 --> 00:13:53,060
is also a very bad idea shown in the

329
00:13:51,200 --> 00:13:55,370
resource<font color="#E5E5E5"> meant mentioned on the bottom</font>

330
00:13:53,060 --> 00:13:57,979
or using other dubious sources of

331
00:13:55,370 --> 00:14:00,680
entropy such as<font color="#CCCCCC"> clock timings process</font>

332
00:13:57,980 --> 00:14:03,080
<font color="#CCCCCC">ideas foreign mac</font><font color="#E5E5E5"> addresses etc etc or</font>

333
00:14:00,680 --> 00:14:05,599
simply including art code regenerated

334
00:14:03,080 --> 00:14:07,270
keys which is also bad<font color="#CCCCCC"> idea</font><font color="#E5E5E5"> shown in the</font>

335
00:14:05,600 --> 00:14:11,710
little black box project

336
00:14:07,270 --> 00:14:14,680
<font color="#CCCCCC">so now that we have an idea of why it's</font>

337
00:14:11,710 --> 00:14:16,330
hard to to get embedded operating system

338
00:14:14,680 --> 00:14:17,589
<font color="#E5E5E5">random number generators right we're</font>

339
00:14:16,330 --> 00:14:19,600
going to look at a couple of case

340
00:14:17,590 --> 00:14:22,720
studies of operating systems feel that

341
00:14:19,600 --> 00:14:25,720
in various<font color="#CCCCCC"> a meditator yeah because part</font>

342
00:14:22,720 --> 00:14:27,280
<font color="#CCCCCC">of</font><font color="#E5E5E5"> various embedded systems and how they</font>

343
00:14:25,720 --> 00:14:29,920
<font color="#E5E5E5">get this wrong</font>

344
00:14:27,280 --> 00:14:32,380
so the first system will look at is<font color="#E5E5E5"> key</font>

345
00:14:29,920 --> 00:14:34,150
<font color="#CCCCCC">when X which is a unix-like</font><font color="#E5E5E5"> POSIX</font>

346
00:14:32,380 --> 00:14:36,610
compliant real-time operating system

347
00:14:34,150 --> 00:14:39,250
initially released in<font color="#E5E5E5"> 1982 later</font>

348
00:14:36,610 --> 00:14:41,020
acquired<font color="#E5E5E5"> by blackberry</font><font color="#CCCCCC"> it's basically</font>

349
00:14:39,250 --> 00:14:43,240
the underlying operating system for

350
00:14:41,020 --> 00:14:45,790
<font color="#E5E5E5">blackberry OS it's used a lot in our</font>

351
00:14:43,240 --> 00:14:47,830
<font color="#E5E5E5">motive systems as well particularly the</font>

352
00:14:45,790 --> 00:14:50,290
entertainment systems<font color="#E5E5E5"> and you also</font>

353
00:14:47,830 --> 00:14:52,330
encountered in<font color="#E5E5E5"> carrier-grade routers</font>

354
00:14:50,290 --> 00:14:56,199
military radios and some nuclear power

355
00:14:52,330 --> 00:14:57,940
plants and it provides<font color="#CCCCCC"> accustomed a few</font>

356
00:14:56,200 --> 00:14:59,650
random implementation which is always

357
00:14:57,940 --> 00:15:01,390
<font color="#E5E5E5">non-blocking so you don't have this</font><font color="#CCCCCC"> this</font>

358
00:14:59,650 --> 00:15:03,880
blocking<font color="#E5E5E5"> non-blocking distinctions</font><font color="#CCCCCC"> you</font>

359
00:15:01,390 --> 00:15:05,890
<font color="#CCCCCC">have the</font><font color="#E5E5E5"> most unix-like systems and</font><font color="#CCCCCC"> it's</font>

360
00:15:03,880 --> 00:15:07,900
implemented as a user space process

361
00:15:05,890 --> 00:15:10,960
<font color="#CCCCCC">address</font><font color="#E5E5E5"> by a</font><font color="#CCCCCC"> colonel</font><font color="#E5E5E5"> resource manager</font>

362
00:15:07,900 --> 00:15:12,459
because<font color="#CCCCCC"> conexes</font><font color="#E5E5E5"> microkernel an</font>

363
00:15:10,960 --> 00:15:14,530
interesting thing to note is that the

364
00:15:12,460 --> 00:15:17,860
random number<font color="#CCCCCC"> generators always</font><font color="#E5E5E5"> started</font>

365
00:15:14,530 --> 00:15:21,490
after boot by<font color="#E5E5E5"> startup script that's the</font>

366
00:15:17,860 --> 00:15:23,170
thing to keep in mind when designing and

367
00:15:21,490 --> 00:15:24,370
we reverse-engineer the the

368
00:15:23,170 --> 00:15:26,290
implementation of the random number

369
00:15:24,370 --> 00:15:28,330
generator and it turned out to be based

370
00:15:26,290 --> 00:15:30,969
on<font color="#CCCCCC"> yarrow by bruce schneier junk kelsey</font>

371
00:15:28,330 --> 00:15:33,970
<font color="#E5E5E5">and Ferguson but it turned out to be</font>

372
00:15:30,970 --> 00:15:35,560
based on an older and draft

373
00:15:33,970 --> 00:15:38,140
implementation of<font color="#E5E5E5"> euro and not the</font>

374
00:15:35,560 --> 00:15:40,569
reference<font color="#CCCCCC"> yellow 160 document which was</font>

375
00:15:38,140 --> 00:15:43,090
which company to the<font color="#CCCCCC"> the paper release</font>

376
00:15:40,570 --> 00:15:45,280
<font color="#E5E5E5">so it only has a</font><font color="#CCCCCC"> single entry people and</font>

377
00:15:43,090 --> 00:15:47,230
<font color="#E5E5E5">no fast and slow</font><font color="#CCCCCC"> pools and</font><font color="#E5E5E5"> Knobloch</font>

378
00:15:45,280 --> 00:15:49,420
<font color="#CCCCCC">safer</font><font color="#E5E5E5"> is applied to</font><font color="#CCCCCC"> appear in g output</font>

379
00:15:47,230 --> 00:15:53,230
at all it's directly drawn from the

380
00:15:49,420 --> 00:15:55,420
internal state so and q10 and<font color="#CCCCCC"> turn</font>

381
00:15:53,230 --> 00:15:57,790
diverges from this older implementation

382
00:15:55,420 --> 00:15:59,979
as well by mixing<font color="#CCCCCC"> prng</font><font color="#E5E5E5"> output back into</font>

383
00:15:57,790 --> 00:16:02,410
the<font color="#E5E5E5"> entry people and having some recent</font>

384
00:15:59,980 --> 00:16:07,030
<font color="#E5E5E5">control divergences which</font><font color="#CCCCCC"> discovered</font>

385
00:16:02,410 --> 00:16:10,569
discuss later on<font color="#CCCCCC"> so this is</font><font color="#E5E5E5"> the design</font>

386
00:16:07,030 --> 00:16:12,699
of<font color="#CCCCCC"> qh 0</font><font color="#E5E5E5"> which is relatively simple</font><font color="#CCCCCC"> area</font>

387
00:16:10,570 --> 00:16:14,500
of your<font color="#E5E5E5"> boot</font><font color="#CCCCCC"> I'm entropy if</font><font color="#E5E5E5"> your runtime</font>

388
00:16:12,700 --> 00:16:16,720
entropy and<font color="#E5E5E5"> it's drawn into an entry</font>

389
00:16:14,500 --> 00:16:18,280
people<font color="#E5E5E5"> and then you have the output</font>

390
00:16:16,720 --> 00:16:20,590
function which draws from the entropy

391
00:16:18,280 --> 00:16:24,069
people and also<font color="#CCCCCC"> sits back into</font>

392
00:16:20,590 --> 00:16:26,740
kiran-ji<font color="#E5E5E5"> state we first tested the</font>

393
00:16:24,070 --> 00:16:28,690
<font color="#E5E5E5">randomness quality of the device output</font>

394
00:16:26,740 --> 00:16:31,120
using the<font color="#CCCCCC"> die harder and</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> next</font>

395
00:16:28,690 --> 00:16:32,800
<font color="#CCCCCC">statistical test suite of</font><font color="#E5E5E5"> tools it</font>

396
00:16:31,120 --> 00:16:34,360
<font color="#E5E5E5">passed both of these</font><font color="#CCCCCC"> texts tweets</font><font color="#E5E5E5"> but</font>

397
00:16:32,800 --> 00:16:36,969
<font color="#CCCCCC">this</font><font color="#E5E5E5"> only tells us something about the</font>

398
00:16:34,360 --> 00:16:38,950
quality of the<font color="#CCCCCC"> Piron g output</font><font color="#E5E5E5"> the source</font>

399
00:16:36,970 --> 00:16:42,400
<font color="#CCCCCC">entropy can still be heavily biased as</font>

400
00:16:38,950 --> 00:16:44,530
<font color="#E5E5E5">we'll see later on after reverse</font>

401
00:16:42,400 --> 00:16:46,840
engineering the the boot time gathering

402
00:16:44,530 --> 00:16:49,089
routines<font color="#CCCCCC"> we</font><font color="#E5E5E5"> found that it draws from</font>

403
00:16:46,840 --> 00:16:51,280
<font color="#CCCCCC">four sources only and these are static</font>

404
00:16:49,090 --> 00:16:53,560
and<font color="#CCCCCC"> not configurable</font><font color="#E5E5E5"> and that's the</font>

405
00:16:51,280 --> 00:16:55,240
system time the clock cycle count the

406
00:16:53,560 --> 00:16:57,400
currently active<font color="#CCCCCC"> process ideas and</font>

407
00:16:55,240 --> 00:16:59,620
currently active device names and they

408
00:16:57,400 --> 00:17:01,630
<font color="#CCCCCC">concatenated and a Pulitzer the shower</font>

409
00:16:59,620 --> 00:17:04,300
<font color="#CCCCCC">on hash function and the resulting</font>

410
00:17:01,630 --> 00:17:08,140
digest<font color="#E5E5E5"> is used to initialize the</font><font color="#CCCCCC"> q10</font>

411
00:17:04,300 --> 00:17:10,629
initial<font color="#E5E5E5"> state so we decided to because</font>

412
00:17:08,140 --> 00:17:12,880
they sounded kind of dodgy<font color="#CCCCCC"> we decided to</font>

413
00:17:10,630 --> 00:17:15,040
evaluate the<font color="#E5E5E5"> boot entropy because if</font>

414
00:17:12,880 --> 00:17:16,990
this is very biased it might be feasible

415
00:17:15,040 --> 00:17:19,420
for an attacker to replicate<font color="#E5E5E5"> the</font><font color="#CCCCCC"> pier in</font>

416
00:17:16,990 --> 00:17:21,880
<font color="#CCCCCC">gene in internal state after reasonable</font>

417
00:17:19,420 --> 00:17:23,740
number of<font color="#E5E5E5"> gases</font><font color="#CCCCCC"> so our quality measure</font>

418
00:17:21,880 --> 00:17:25,750
is the the<font color="#E5E5E5"> main entropy which basically</font>

419
00:17:23,740 --> 00:17:28,120
means how likely you are to guess a

420
00:17:25,750 --> 00:17:31,030
particular value on the first try and

421
00:17:28,119 --> 00:17:34,929
256 bits of uniformly random data<font color="#E5E5E5"> after</font>

422
00:17:31,030 --> 00:17:36,610
<font color="#E5E5E5">56 bits of entropy</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> their nest</font>

423
00:17:34,930 --> 00:17:40,390
<font color="#E5E5E5">entropy source testing tool to evaluate</font>

424
00:17:36,610 --> 00:17:42,760
this<font color="#CCCCCC"> is data we collected</font><font color="#E5E5E5"> fifty</font><font color="#CCCCCC"> boot</font>

425
00:17:40,390 --> 00:17:44,860
runs by instrumenting the random number

426
00:17:42,760 --> 00:17:46,930
generator and logging the raw data that

427
00:17:44,860 --> 00:17:50,530
was collected during boot<font color="#E5E5E5"> time the</font>

428
00:17:46,930 --> 00:17:52,630
average<font color="#E5E5E5"> men and</font><font color="#CCCCCC"> true p</font><font color="#E5E5E5"> 0.02 76 which</font>

429
00:17:50,530 --> 00:17:54,790
isn't good at all because that means it

430
00:17:52,630 --> 00:17:57,580
has far less than<font color="#E5E5E5"> one bit of men entropy</font>

431
00:17:54,790 --> 00:17:59,350
for a bit of raw data<font color="#E5E5E5"> as you can see in</font>

432
00:17:57,580 --> 00:18:01,629
the visualization on the right where the

433
00:17:59,350 --> 00:18:05,469
dark spots are low entropy spots with<font color="#E5E5E5"> a</font>

434
00:18:01,630 --> 00:18:09,460
particularly low entropy spot left on

435
00:18:05,470 --> 00:18:12,640
the<font color="#CCCCCC"> top left I mean</font><font color="#E5E5E5"> so we also available</font>

436
00:18:09,460 --> 00:18:15,640
evaluated the<font color="#E5E5E5"> cross boot entropy because</font>

437
00:18:12,640 --> 00:18:18,220
even if a system has relatively good and

438
00:18:15,640 --> 00:18:20,920
proper quality during a single boot run

439
00:18:18,220 --> 00:18:22,930
<font color="#E5E5E5">if it's consistent among various boot</font>

440
00:18:20,920 --> 00:18:24,610
runs this is also behavior you don't

441
00:18:22,930 --> 00:18:28,060
want and it turned out that apart from

442
00:18:24,610 --> 00:18:30,699
having<font color="#CCCCCC"> stream less-than-stellar</font>

443
00:18:28,060 --> 00:18:32,110
<font color="#E5E5E5">single</font><font color="#CCCCCC"> but--and to</font><font color="#E5E5E5"> be gathering it also</font>

444
00:18:30,700 --> 00:18:35,020
had a very consistent and predictable

445
00:18:32,110 --> 00:18:37,510
pattern across<font color="#CCCCCC"> 50 boot</font><font color="#E5E5E5"> visualisations as</font>

446
00:18:35,020 --> 00:18:39,129
you can see on the right<font color="#E5E5E5"> and you need to</font>

447
00:18:37,510 --> 00:18:41,080
consider that this<font color="#CCCCCC"> this operating</font>

448
00:18:39,130 --> 00:18:43,300
systems like these are deployed in

449
00:18:41,080 --> 00:18:45,100
firmware images so<font color="#E5E5E5"> processes always</font>

450
00:18:43,300 --> 00:18:47,260
spawn in the same order and<font color="#E5E5E5"> there's the</font>

451
00:18:45,100 --> 00:18:48,850
same number of<font color="#CCCCCC"> processes funny so all</font>

452
00:18:47,260 --> 00:18:51,940
<font color="#CCCCCC">these processes ideas that are fed into</font>

453
00:18:48,850 --> 00:18:53,830
the boot<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> entropy are usually static</font>

454
00:18:51,940 --> 00:18:55,510
<font color="#E5E5E5">and the same goes for the device names</font>

455
00:18:53,830 --> 00:18:57,129
and really the only randomness here

456
00:18:55,510 --> 00:18:59,140
comes from the<font color="#E5E5E5"> clock time</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the clock</font>

457
00:18:57,130 --> 00:19:00,940
cycles and even<font color="#E5E5E5"> there there is less</font>

458
00:18:59,140 --> 00:19:04,420
variation then you would<font color="#E5E5E5"> one because of</font>

459
00:19:00,940 --> 00:19:06,190
the real-time nature of the system<font color="#E5E5E5"> so</font>

460
00:19:04,420 --> 00:19:07,960
this<font color="#E5E5E5"> is what the after reverse</font>

461
00:19:06,190 --> 00:19:10,780
<font color="#E5E5E5">engineering the runtime entropy</font>

462
00:19:07,960 --> 00:19:12,010
collection engine looks like<font color="#E5E5E5"> on the left</font>

463
00:19:10,780 --> 00:19:14,379
you you got your<font color="#E5E5E5"> high-performance</font>

464
00:19:12,010 --> 00:19:16,090
<font color="#CCCCCC">correct measurements on the top you have</font>

465
00:19:14,380 --> 00:19:18,790
system information which is basically

466
00:19:16,090 --> 00:19:21,370
process<font color="#CCCCCC"> ID thread IDs flags all</font><font color="#E5E5E5"> these</font>

467
00:19:18,790 --> 00:19:24,040
kind of process variables which are fed

468
00:19:21,370 --> 00:19:26,469
<font color="#CCCCCC">in duty</font><font color="#E5E5E5"> and threw it shell 1 into the</font>

469
00:19:24,040 --> 00:19:28,330
<font color="#CCCCCC">euro input function and I</font><font color="#E5E5E5"> in the bottom</font>

470
00:19:26,470 --> 00:19:30,280
left you have your<font color="#CCCCCC"> interrupt</font><font color="#E5E5E5"> timing</font>

471
00:19:28,330 --> 00:19:32,530
source in the bottom right there is an

472
00:19:30,280 --> 00:19:34,840
undocumented<font color="#E5E5E5"> function which is a</font>

473
00:19:32,530 --> 00:19:36,820
<font color="#CCCCCC">callback option to a library possibly</font>

474
00:19:34,840 --> 00:19:38,260
<font color="#CCCCCC">for two random number generator support</font>

475
00:19:36,820 --> 00:19:40,300
but there's nothing in the documentation

476
00:19:38,260 --> 00:19:44,290
there and it's not<font color="#E5E5E5"> layer from the code</font>

477
00:19:40,300 --> 00:19:46,180
either<font color="#E5E5E5"> so so some thoughts on this</font>

478
00:19:44,290 --> 00:19:48,159
random entropy and the system

479
00:19:46,180 --> 00:19:49,570
information polling has some problems

480
00:19:48,160 --> 00:19:52,240
because there's lots of static

481
00:19:49,570 --> 00:19:54,970
information things like<font color="#E5E5E5"> user ID flags</font>

482
00:19:52,240 --> 00:19:57,280
and priority are not likely to vary at

483
00:19:54,970 --> 00:19:59,290
all between different runs and second

484
00:19:57,280 --> 00:20:00,430
program<font color="#CCCCCC"> based</font><font color="#E5E5E5"> will only</font><font color="#CCCCCC"> very if you</font>

485
00:19:59,290 --> 00:20:02,409
enable address space layout

486
00:20:00,430 --> 00:20:05,560
randomization which is disabled by

487
00:20:02,410 --> 00:20:07,360
default and<font color="#E5E5E5"> time or</font><font color="#CCCCCC"> program state-based</font>

488
00:20:05,560 --> 00:20:08,620
<font color="#E5E5E5">randomness is really the only run unless</font>

489
00:20:07,360 --> 00:20:10,750
you're<font color="#E5E5E5"> going to get from this source</font>

490
00:20:08,620 --> 00:20:12,550
<font color="#E5E5E5">when it comes to the interim</font><font color="#CCCCCC"> timings the</font>

491
00:20:10,750 --> 00:20:14,770
one of the big problems is that it

492
00:20:12,550 --> 00:20:16,360
really puts the burden on the developer

493
00:20:14,770 --> 00:20:18,550
because the developer has to select

494
00:20:16,360 --> 00:20:20,350
which interrupts to draw the entropy

495
00:20:18,550 --> 00:20:23,230
from<font color="#E5E5E5"> so that means that they have to</font>

496
00:20:20,350 --> 00:20:25,510
decide<font color="#E5E5E5"> are these quality sources are</font>

497
00:20:23,230 --> 00:20:28,060
they not<font color="#CCCCCC"> triggered to periodically etc</font>

498
00:20:25,510 --> 00:20:30,760
etc<font color="#E5E5E5"> but this doesn't really matter</font>

499
00:20:28,060 --> 00:20:32,950
because in almost all<font color="#CCCCCC"> qnx versions</font><font color="#E5E5E5"> there</font>

500
00:20:30,760 --> 00:20:34,420
is no<font color="#E5E5E5"> receipt control</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> actually</font>

501
00:20:32,950 --> 00:20:36,070
asked<font color="#E5E5E5"> to reversing the binary the</font>

502
00:20:34,420 --> 00:20:38,140
<font color="#CCCCCC">implemented the functions but</font><font color="#E5E5E5"> never</font>

503
00:20:36,070 --> 00:20:39,040
actually call them<font color="#E5E5E5"> which means that</font>

504
00:20:38,140 --> 00:20:40,660
<font color="#CCCCCC">runtime enter</font>

505
00:20:39,040 --> 00:20:42,909
<font color="#CCCCCC">he is accumulated but never actually</font>

506
00:20:40,660 --> 00:20:45,100
makes back into the<font color="#E5E5E5"> state and boot</font><font color="#CCCCCC"> I'm</font>

507
00:20:42,910 --> 00:20:47,320
entropy is the only entropy you'll find

508
00:20:45,100 --> 00:20:48,790
in<font color="#E5E5E5"> DeAndre people</font><font color="#CCCCCC"> of Cuba next arrow</font>

509
00:20:47,320 --> 00:20:50,770
implementation and this is very

510
00:20:48,790 --> 00:20:53,740
dangerous especially for<font color="#CCCCCC"> consider</font><font color="#E5E5E5"> the</font>

511
00:20:50,770 --> 00:20:58,060
<font color="#CCCCCC">quality of Buddha</font><font color="#E5E5E5"> mantra peewee earlier</font>

512
00:20:53,740 --> 00:21:00,670
saw in the latest version<font color="#CCCCCC"> unix 6.6 this</font>

513
00:20:58,060 --> 00:21:03,100
is there was an attempt to fix this by

514
00:21:00,670 --> 00:21:04,510
integrating some form of receding into

515
00:21:03,100 --> 00:21:07,120
<font color="#E5E5E5">functions</font><font color="#CCCCCC"> called during initialization</font>

516
00:21:04,510 --> 00:21:09,550
<font color="#E5E5E5">and output so whenever</font><font color="#CCCCCC"> the pier in g</font>

517
00:21:07,120 --> 00:21:11,949
output it recedes from<font color="#CCCCCC"> part of the pool</font>

518
00:21:09,550 --> 00:21:14,350
<font color="#E5E5E5">but an issue is that no one from the</font>

519
00:21:11,950 --> 00:21:16,450
estimation is actually done<font color="#CCCCCC"> but</font><font color="#E5E5E5"> and this</font>

520
00:21:14,350 --> 00:21:18,370
is what euro was initially designed to

521
00:21:16,450 --> 00:21:20,710
do to do entropy estimation on your

522
00:21:18,370 --> 00:21:22,419
entry<font color="#CCCCCC"> people's so you only reseed when</font>

523
00:21:20,710 --> 00:21:24,370
you have proper<font color="#CCCCCC"> entropic</font><font color="#E5E5E5"> quality in</font>

524
00:21:22,420 --> 00:21:26,500
these pools but this isn't what it does

525
00:21:24,370 --> 00:21:29,050
<font color="#E5E5E5">just received all the time</font>

526
00:21:26,500 --> 00:21:30,940
luckily we<font color="#CCCCCC"> disclose</font><font color="#E5E5E5"> some of these issues</font>

527
00:21:29,050 --> 00:21:33,159
<font color="#CCCCCC">to blackberry and based on our</font>

528
00:21:30,940 --> 00:21:35,140
suggestions they drafted a new<font color="#CCCCCC"> fortuna</font>

529
00:21:33,160 --> 00:21:37,150
<font color="#CCCCCC">base beer Angie Fortuna's</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> the</font>

530
00:21:35,140 --> 00:21:39,340
<font color="#E5E5E5">successor of euro for those who don't</font>

531
00:21:37,150 --> 00:21:41,770
know<font color="#CCCCCC"> and it's available in patches for</font>

532
00:21:39,340 --> 00:21:43,810
<font color="#CCCCCC">qx60 six</font><font color="#E5E5E5"> and it will be to default</font>

533
00:21:41,770 --> 00:21:46,000
random<font color="#E5E5E5"> number generator for the upcoming</font>

534
00:21:43,810 --> 00:21:49,210
QX 7 which should be released<font color="#CCCCCC"> i think</font>

535
00:21:46,000 --> 00:21:51,550
january or something like that<font color="#E5E5E5"> so this</font>

536
00:21:49,210 --> 00:21:53,170
brings us to the next<font color="#E5E5E5"> operating system</font>

537
00:21:51,550 --> 00:21:57,220
which we can mention because it was

538
00:21:53,170 --> 00:21:58,900
studied under NDA<font color="#CCCCCC"> it supposes compliant</font>

539
00:21:57,220 --> 00:22:00,820
real-time operating system used in

540
00:21:58,900 --> 00:22:03,340
highly sensitive systems such as the

541
00:22:00,820 --> 00:22:05,139
<font color="#CCCCCC">Joint Strike Fighter the GTRs military</font>

542
00:22:03,340 --> 00:22:08,770
radio system and the<font color="#CCCCCC"> International Space</font>

543
00:22:05,140 --> 00:22:10,720
<font color="#CCCCCC">Station and it</font><font color="#E5E5E5"> has a random number</font>

544
00:22:08,770 --> 00:22:13,600
generator available for<font color="#CCCCCC"> your def your</font>

545
00:22:10,720 --> 00:22:15,460
random interface and<font color="#CCCCCC"> has to</font><font color="#E5E5E5"> associated</font>

546
00:22:13,600 --> 00:22:18,070
<font color="#CCCCCC">functions called your random read which</font>

547
00:22:15,460 --> 00:22:20,500
<font color="#CCCCCC">fills a buffer with and</font><font color="#E5E5E5"> bites from</font>

548
00:22:18,070 --> 00:22:23,080
<font color="#CCCCCC">random function and you random right</font>

549
00:22:20,500 --> 00:22:25,360
which<font color="#E5E5E5"> recedes the PNG using only the</font>

550
00:22:23,080 --> 00:22:26,919
first<font color="#CCCCCC"> d work from</font><font color="#E5E5E5"> from the buffer</font><font color="#CCCCCC"> your</font>

551
00:22:25,360 --> 00:22:31,030
provided so that<font color="#E5E5E5"> that gives you an idea</font>

552
00:22:26,920 --> 00:22:33,220
of the quality of this thing and so we

553
00:22:31,030 --> 00:22:35,260
<font color="#E5E5E5">reverse-engineer this as well and took a</font>

554
00:22:33,220 --> 00:22:37,510
look at what the underlying<font color="#CCCCCC"> PNG</font><font color="#E5E5E5"> actually</font>

555
00:22:35,260 --> 00:22:39,250
was and it turned out to be the<font color="#E5E5E5"> GFC</font><font color="#CCCCCC"> be</font>

556
00:22:37,510 --> 00:22:42,070
is the random function with custom

557
00:22:39,250 --> 00:22:44,680
<font color="#CCCCCC">constants</font><font color="#E5E5E5"> and as the documentation</font>

558
00:22:42,070 --> 00:22:47,200
clearly states this is not a secure<font color="#CCCCCC"> a</font>

559
00:22:44,680 --> 00:22:49,870
<font color="#E5E5E5">number generator so</font><font color="#CCCCCC"> I don't know why</font>

560
00:22:47,200 --> 00:22:53,350
they implemented it there but it's there

561
00:22:49,870 --> 00:22:55,360
<font color="#E5E5E5">that's not the worst thing because we</font>

562
00:22:53,350 --> 00:22:57,129
also discovered a local recent attack

563
00:22:55,360 --> 00:22:59,139
because the<font color="#E5E5E5"> devil you random devices</font>

564
00:22:57,130 --> 00:23:01,059
world<font color="#E5E5E5"> writable which means that anyone</font>

565
00:22:59,140 --> 00:23:02,080
<font color="#E5E5E5">on the system can force appear in</font><font color="#CCCCCC"> g</font>

566
00:23:01,059 --> 00:23:04,899
<font color="#CCCCCC">receipt</font>

567
00:23:02,080 --> 00:23:07,360
regardless of their privileges so a very

568
00:23:04,900 --> 00:23:10,030
low privileged user can simply write<font color="#E5E5E5"> a</font>

569
00:23:07,360 --> 00:23:11,709
seat<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the random number</font><font color="#E5E5E5"> generator and</font>

570
00:23:10,030 --> 00:23:16,680
<font color="#E5E5E5">then all across the board control the</font>

571
00:23:11,710 --> 00:23:21,789
PNG<font color="#CCCCCC"> outputs oh yeah</font><font color="#E5E5E5"> that's nice</font>

572
00:23:16,680 --> 00:23:24,999
[Applause]

573
00:23:21,789 --> 00:23:26,019
<font color="#E5E5E5">but even if</font><font color="#CCCCCC"> that's even</font><font color="#E5E5E5"> if that wasn't</font>

574
00:23:24,999 --> 00:23:28,119
enough

575
00:23:26,019 --> 00:23:29,799
we also discovered<font color="#CCCCCC"> a known</font><font color="#E5E5E5"> seed attack</font>

576
00:23:28,119 --> 00:23:32,228
<font color="#E5E5E5">because if you reverse engineering</font>

577
00:23:29,799 --> 00:23:34,359
initialization routines<font color="#CCCCCC"> you see that</font>

578
00:23:32,229 --> 00:23:37,629
there's no<font color="#E5E5E5"> seating at all there's just a</font>

579
00:23:34,359 --> 00:23:39,879
static<font color="#CCCCCC"> 32-bit seat which is the same</font>

580
00:23:37,629 --> 00:23:41,830
across all these operating system

581
00:23:39,879 --> 00:23:44,529
<font color="#E5E5E5">deployment</font><font color="#CCCCCC"> it doesn't vary from firmer</font>

582
00:23:41,830 --> 00:23:46,178
<font color="#CCCCCC">it's just the same sequence over and</font>

583
00:23:44,529 --> 00:23:52,600
over again<font color="#E5E5E5"> and there's no actual entropy</font>

584
00:23:46,179 --> 00:23:55,330
in the system at all<font color="#CCCCCC"> so an attacker who</font>

585
00:23:52,600 --> 00:23:57,609
knows the<font color="#E5E5E5"> pier in GC also knows because</font>

586
00:23:55,330 --> 00:23:59,408
<font color="#CCCCCC">peering geez</font><font color="#E5E5E5"> are deterministic functions</font>

587
00:23:57,609 --> 00:24:01,779
they also know all corresponding period

588
00:23:59,409 --> 00:24:03,909
<font color="#CCCCCC">g output consumed by crypto applications</font>

589
00:24:01,779 --> 00:24:06,729
<font color="#CCCCCC">so she can see on the slide here at the</font>

590
00:24:03,909 --> 00:24:09,159
<font color="#E5E5E5">ssh key generator simply draws from the</font>

591
00:24:06,729 --> 00:24:12,729
same output we saw earlier produced by

592
00:24:09,159 --> 00:24:15,700
this known seat<font color="#CCCCCC"> so consider a remote</font>

593
00:24:12,729 --> 00:24:17,559
attacker<font color="#CCCCCC"> no no local attacker who has a</font>

594
00:24:15,700 --> 00:24:20,229
<font color="#CCCCCC">public key generated on this target</font>

595
00:24:17,559 --> 00:24:22,599
operating system and<font color="#CCCCCC"> in OT initial fear</font>

596
00:24:20,229 --> 00:24:24,879
in<font color="#CCCCCC"> GC they</font><font color="#E5E5E5"> simply</font><font color="#CCCCCC"> cloned</font><font color="#E5E5E5"> around the</font>

597
00:24:22,599 --> 00:24:27,129
number generator seek the appropriate

598
00:24:24,879 --> 00:24:28,599
state offset<font color="#E5E5E5"> read from the random number</font>

599
00:24:27,129 --> 00:24:30,789
generator<font color="#E5E5E5"> generated a corresponding</font>

600
00:24:28,599 --> 00:24:32,559
<font color="#CCCCCC">public and private</font><font color="#E5E5E5"> keeper and if it</font>

601
00:24:30,789 --> 00:24:34,779
matches the target publicly<font color="#CCCCCC"> while</font>

602
00:24:32,559 --> 00:24:36,729
obviously also the private key matches

603
00:24:34,779 --> 00:24:40,059
and if it doesn't it<font color="#CCCCCC"> ever</font><font color="#E5E5E5"> age to the</font>

604
00:24:36,729 --> 00:24:42,099
next<font color="#CCCCCC"> state offset and because the</font><font color="#E5E5E5"> state</font>

605
00:24:40,059 --> 00:24:43,749
of sets are determined by how many<font color="#E5E5E5"> bytes</font>

606
00:24:42,099 --> 00:24:45,939
<font color="#E5E5E5">have been wrapped from the</font><font color="#CCCCCC"> Deaf your</font>

607
00:24:43,749 --> 00:24:48,340
random device<font color="#E5E5E5"> this is bounded by a very</font>

608
00:24:45,940 --> 00:24:50,080
reasonable<font color="#CCCCCC"> fruit for supper bond because</font>

609
00:24:48,340 --> 00:24:51,279
<font color="#CCCCCC">I don't think</font><font color="#E5E5E5"> more than four gigabytes</font>

610
00:24:50,080 --> 00:24:52,989
<font color="#E5E5E5">will have been read from the random</font>

611
00:24:51,279 --> 00:24:55,570
number generator before generating your

612
00:24:52,989 --> 00:24:58,450
keys so we can even<font color="#CCCCCC"> precompute a lot of</font>

613
00:24:55,570 --> 00:25:01,359
this and we can do a live demo<font color="#E5E5E5"> but this</font>

614
00:24:58,450 --> 00:25:03,580
is a screenshot of an attack on the<font color="#CCCCCC"> ssh</font>

615
00:25:01,359 --> 00:25:05,499
day of the device itself where we

616
00:25:03,580 --> 00:25:08,799
<font color="#E5E5E5">recover the the private key</font>

617
00:25:05,499 --> 00:25:12,429
corresponding to the<font color="#CCCCCC"> SH</font><font color="#E5E5E5"> hoeski within a</font>

618
00:25:08,799 --> 00:25:14,889
couple of tries<font color="#E5E5E5"> and yeah that's</font>

619
00:25:12,429 --> 00:25:17,800
<font color="#CCCCCC">basically it for this operating system</font>

620
00:25:14,889 --> 00:25:24,959
<font color="#CCCCCC">you're right</font>

621
00:25:17,800 --> 00:25:27,750
[Applause]

622
00:25:24,960 --> 00:25:32,159
<font color="#CCCCCC">and the funny thing is as I don't think</font>

623
00:25:27,750 --> 00:25:35,580
<font color="#CCCCCC">they are</font><font color="#E5E5E5"> going to patch it but so the</font>

624
00:25:32,159 --> 00:25:36,899
last<font color="#CCCCCC"> case studies vxworks 6.9 it's</font>

625
00:25:35,580 --> 00:25:39,809
<font color="#CCCCCC">surreal journal</font><font color="#E5E5E5"> pregnancies time</font>

626
00:25:36,899 --> 00:25:42,029
initially releasing<font color="#CCCCCC"> 1987 it's actually</font>

627
00:25:39,809 --> 00:25:45,059
using for example<font color="#CCCCCC"> mars curiosity rover</font>

628
00:25:42,029 --> 00:25:47,490
<font color="#E5E5E5">or</font><font color="#CCCCCC"> watching helicopters or like x-47b</font>

629
00:25:45,059 --> 00:25:49,049
drones or lots of telecommunication

630
00:25:47,490 --> 00:25:53,130
equipment

631
00:25:49,049 --> 00:25:55,799
well<font color="#CCCCCC"> what weeks works actually doesn't</font>

632
00:25:53,130 --> 00:25:57,720
provide any security<font color="#E5E5E5"> number</font><font color="#CCCCCC"> generation</font>

633
00:25:55,799 --> 00:26:00,240
<font color="#E5E5E5">and actually you can see in libraries</font>

634
00:25:57,720 --> 00:26:04,710
such as<font color="#E5E5E5"> openssl officer corps</font><font color="#CCCCCC"> keep there</font>

635
00:26:00,240 --> 00:26:07,110
<font color="#E5E5E5">is no reference for</font><font color="#CCCCCC"> its either</font><font color="#E5E5E5"> and well</font>

636
00:26:04,710 --> 00:26:08,970
it will have<font color="#E5E5E5"> predictable consequences</font><font color="#CCCCCC"> to</font>

637
00:26:07,110 --> 00:26:10,559
so as you can<font color="#E5E5E5"> if you searching the</font>

638
00:26:08,970 --> 00:26:12,600
internet for<font color="#CCCCCC"> the developers who are</font>

639
00:26:10,559 --> 00:26:14,549
asking questions about this stuff about

640
00:26:12,600 --> 00:26:16,889
<font color="#CCCCCC">weeks works</font><font color="#E5E5E5"> you can see that</font><font color="#CCCCCC"> when</font>

641
00:26:14,549 --> 00:26:21,389
somebody<font color="#E5E5E5"> comes and say hey</font><font color="#CCCCCC"> i implemented</font>

642
00:26:16,890 --> 00:26:26,220
<font color="#CCCCCC">i use the ran function as</font><font color="#E5E5E5"> seating source</font>

643
00:26:21,390 --> 00:26:27,899
for I<font color="#E5E5E5"> don't know the</font><font color="#CCCCCC"> openssl which as</font>

644
00:26:26,220 --> 00:26:29,640
you remember the initially say that<font color="#CCCCCC"> is</font>

645
00:26:27,899 --> 00:26:32,039
<font color="#E5E5E5">not secure</font>

646
00:26:29,640 --> 00:26:36,899
<font color="#E5E5E5">it's not</font><font color="#CCCCCC"> it shouldn't be used for</font>

647
00:26:32,039 --> 00:26:39,059
security purposes and well yeah but

648
00:26:36,899 --> 00:26:41,039
and if you are thinking that's a<font color="#E5E5E5"> this</font>

649
00:26:39,059 --> 00:26:42,750
<font color="#CCCCCC">tree operating system</font><font color="#E5E5E5"> where at least</font><font color="#CCCCCC"> the</font>

650
00:26:41,039 --> 00:26:45,270
first<font color="#E5E5E5"> two which had problem and</font><font color="#CCCCCC"> you are</font>

651
00:26:42,750 --> 00:26:46,890
<font color="#E5E5E5">laughing a lot about it is the divorce</font>

652
00:26:45,270 --> 00:26:49,320
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> not actually</font><font color="#CCCCCC"> in the</font><font color="#E5E5E5"> middle</font>

653
00:26:46,890 --> 00:26:51,510
<font color="#CCCCCC">vs</font><font color="#E5E5E5"> and real-time operating systems</font>

654
00:26:49,320 --> 00:26:54,510
actually major<font color="#CCCCCC"> issue of</font><font color="#E5E5E5"> them do not</font>

655
00:26:51,510 --> 00:26:58,140
support any<font color="#E5E5E5"> security</font><font color="#CCCCCC"> manager</font><font color="#E5E5E5"> Israel and</font>

656
00:26:54,510 --> 00:27:00,240
<font color="#E5E5E5">and</font><font color="#CCCCCC"> weeks work is far from the only one</font>

657
00:26:58,140 --> 00:27:01,740
with these problems but<font color="#E5E5E5"> we</font><font color="#CCCCCC"> expose</font><font color="#E5E5E5"> one of</font>

658
00:27:00,240 --> 00:27:04,559
the biggest one and we expect that they

659
00:27:01,740 --> 00:27:07,140
provide something which they<font color="#E5E5E5"> don't and</font>

660
00:27:04,559 --> 00:27:09,210
you want to<font color="#CCCCCC"> you take it</font><font color="#E5E5E5"> yeah yeah so</font>

661
00:27:07,140 --> 00:27:10,919
what<font color="#E5E5E5"> are to take</font><font color="#CCCCCC"> away from the start</font>

662
00:27:09,210 --> 00:27:12,390
well the first one is that the embedded

663
00:27:10,919 --> 00:27:14,820
world is harsh<font color="#E5E5E5"> because</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> are</font>

664
00:27:12,390 --> 00:27:17,220
constraints<font color="#E5E5E5"> everywhere and low entropy</font>

665
00:27:14,820 --> 00:27:18,960
issues are very serious and<font color="#E5E5E5"> it's hard to</font>

666
00:27:17,220 --> 00:27:21,090
deal with these in an operating system

667
00:27:18,960 --> 00:27:22,440
that<font color="#E5E5E5"> seeks deployment across various</font>

668
00:27:21,090 --> 00:27:25,889
kinds of<font color="#CCCCCC"> chips with different</font>

669
00:27:22,440 --> 00:27:27,990
capabilities<font color="#CCCCCC"> CSP Randy design is not a</font>

670
00:27:25,890 --> 00:27:29,669
joke secure<font color="#CCCCCC"> animal should be provided as</font>

671
00:27:27,990 --> 00:27:32,640
an operating system service whenever

672
00:27:29,669 --> 00:27:34,890
possible<font color="#E5E5E5"> please don't put the burden on</font>

673
00:27:32,640 --> 00:27:38,670
developers because they will screw up

674
00:27:34,890 --> 00:27:41,370
<font color="#CCCCCC">these issues from the mailing list shown</font>

675
00:27:38,670 --> 00:27:43,860
and more scrutiny is required because

676
00:27:41,370 --> 00:27:46,110
the advice<font color="#E5E5E5"> just used every random should</font>

677
00:27:43,860 --> 00:27:48,570
not land the developer into trouble as

678
00:27:46,110 --> 00:27:50,520
it would with these previous<font color="#E5E5E5"> operating</font>

679
00:27:48,570 --> 00:27:52,379
systems and<font color="#E5E5E5"> too much of the amount of</font>

680
00:27:50,520 --> 00:27:54,180
security world is still unexplored

681
00:27:52,380 --> 00:27:56,400
terrain so we need more offensive

682
00:27:54,180 --> 00:27:59,430
<font color="#E5E5E5">research into these embedded operating</font>

683
00:27:56,400 --> 00:28:02,760
systems to get them almost up to speed

684
00:27:59,430 --> 00:28:04,350
with a general-purpose<font color="#E5E5E5"> wall</font><font color="#CCCCCC"> so if you're</font>

685
00:28:02,760 --> 00:28:06,300
looking for more technical details<font color="#CCCCCC"> and</font>

686
00:28:04,350 --> 00:28:09,300
embedded security<font color="#E5E5E5"> i recommend</font><font color="#CCCCCC"> our talk</font>

687
00:28:06,300 --> 00:28:12,860
at usenix enigma in 2017<font color="#E5E5E5"> and if</font><font color="#CCCCCC"> you've</font>

688
00:28:09,300 --> 00:28:23,290
got any<font color="#E5E5E5"> questions you can ask</font><font color="#CCCCCC"> them</font>

689
00:28:12,860 --> 00:28:30,490
[Applause]

690
00:28:23,290 --> 00:28:33,879
<font color="#CCCCCC">okay thanks a lot first questions</font><font color="#E5E5E5"> and</font>

691
00:28:30,490 --> 00:28:36,310
answers<font color="#E5E5E5"> please use the microphones</font><font color="#CCCCCC"> just</font>

692
00:28:33,880 --> 00:28:42,940
line up behind microphones and<font color="#E5E5E5"> i'll pick</font>

693
00:28:36,310 --> 00:28:45,280
you for your questions<font color="#CCCCCC"> I'll start with</font>

694
00:28:42,940 --> 00:28:48,220
you<font color="#CCCCCC"> god so this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> not a question this</font>

695
00:28:45,280 --> 00:28:52,960
is a nice story that might be replicated

696
00:28:48,220 --> 00:28:56,650
<font color="#CCCCCC">its only questions at the moment</font><font color="#E5E5E5"> would</font>

697
00:28:52,960 --> 00:28:58,870
be all<font color="#CCCCCC"> this is about</font><font color="#E5E5E5"> randomness</font><font color="#CCCCCC"> this is</font>

698
00:28:56,650 --> 00:29:02,050
about bringing<font color="#E5E5E5"> us</font>

699
00:28:58,870 --> 00:29:03,909
<font color="#CCCCCC">I talked to</font><font color="#E5E5E5"> an HP left engineer from</font>

700
00:29:02,050 --> 00:29:07,060
<font color="#CCCCCC">Bristol and</font><font color="#E5E5E5"> he told me the following</font>

701
00:29:03,910 --> 00:29:08,800
story because they had so much<font color="#E5E5E5"> banquet</font>

702
00:29:07,060 --> 00:29:11,620
on the internet they<font color="#E5E5E5"> were</font><font color="#CCCCCC"> they then</font>

703
00:29:08,800 --> 00:29:15,129
decided<font color="#E5E5E5"> well let's see what happens if</font>

704
00:29:11,620 --> 00:29:16,689
we sent a random<font color="#CCCCCC"> bitstream</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> death 0</font>

705
00:29:15,130 --> 00:29:19,870
<font color="#CCCCCC">into foreign country</font>

706
00:29:16,690 --> 00:29:23,530
it just took two weeks for the<font color="#CCCCCC"> Jeep's</font>

707
00:29:19,870 --> 00:29:26,050
<font color="#CCCCCC">GCHQ to knock on the door and</font><font color="#E5E5E5"> ask them</font>

708
00:29:23,530 --> 00:29:27,850
what the heck they are doing there and

709
00:29:26,050 --> 00:29:30,159
the random number generator they used

710
00:29:27,850 --> 00:29:33,969
was<font color="#E5E5E5"> was a noise diet</font>

711
00:29:30,160 --> 00:29:35,980
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> thank you a question from the</font>

712
00:29:33,970 --> 00:29:37,690
<font color="#E5E5E5">internet is</font><font color="#CCCCCC"> a radiant eyes</font><font color="#E5E5E5"> from a</font>

713
00:29:35,980 --> 00:29:40,180
software-defined radio a good<font color="#E5E5E5"> source of</font>

714
00:29:37,690 --> 00:29:42,940
entropy for random number generator

715
00:29:40,180 --> 00:29:45,280
<font color="#CCCCCC">I'm sorry can you repeat the question is</font>

716
00:29:42,940 --> 00:29:46,750
<font color="#E5E5E5">radio</font><font color="#CCCCCC"> noise that you get from a</font>

717
00:29:45,280 --> 00:29:50,170
software-defined radio chip with<font color="#E5E5E5"> that</font>

718
00:29:46,750 --> 00:29:52,480
<font color="#CCCCCC">beard source of entropy is</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> non quiet</font>

719
00:29:50,170 --> 00:29:55,900
yeah<font color="#CCCCCC"> i mean i-i guess it depends on your</font>

720
00:29:52,480 --> 00:29:57,790
threat model because<font color="#CCCCCC"> it is it</font><font color="#E5E5E5"> possible</font>

721
00:29:55,900 --> 00:30:00,490
that the attacker<font color="#CCCCCC"> controlled</font><font color="#E5E5E5"> radio</font>

722
00:29:57,790 --> 00:30:04,780
signals around<font color="#CCCCCC"> the device that that</font>

723
00:30:00,490 --> 00:30:06,880
draws solemnly from the<font color="#CCCCCC"> DRF</font><font color="#E5E5E5"> chip</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I</font>

724
00:30:04,780 --> 00:30:08,889
mean specific frequency ranges yeah<font color="#CCCCCC"> i</font>

725
00:30:06,880 --> 00:30:10,300
<font color="#E5E5E5">mean if we can control a specific</font>

726
00:30:08,890 --> 00:30:12,400
frequency then

727
00:30:10,300 --> 00:30:14,590
well it's not<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> really dependent</font>

728
00:30:12,400 --> 00:30:16,330
<font color="#CCCCCC">on the</font><font color="#E5E5E5"> yeah it could be good but it</font>

729
00:30:14,590 --> 00:30:17,860
really depends on your threat model is

730
00:30:16,330 --> 00:30:24,519
<font color="#E5E5E5">it a remote attacker you're dealing with</font>

731
00:30:17,860 --> 00:30:27,939
an attacker physical access etc<font color="#E5E5E5"> teller</font>

732
00:30:24,519 --> 00:30:31,570
<font color="#E5E5E5">and one of these lights</font><font color="#CCCCCC"> you mentioned</font>

733
00:30:27,940 --> 00:30:34,239
the closer to the microphone<font color="#CCCCCC"> waterslides</font>

734
00:30:31,570 --> 00:30:36,489
you mentioned<font color="#CCCCCC"> only boot and with</font><font color="#E5E5E5"> people</font>

735
00:30:34,239 --> 00:30:39,129
<font color="#CCCCCC">who enter</font><font color="#E5E5E5"> if he attacks and do</font><font color="#CCCCCC"> you have</font>

736
00:30:36,489 --> 00:30:42,549
<font color="#E5E5E5">any best practices recommendations for</font>

737
00:30:39,129 --> 00:30:46,599
<font color="#E5E5E5">application levels because</font><font color="#CCCCCC"> on linux</font>

738
00:30:42,549 --> 00:30:48,908
<font color="#E5E5E5">different blocks for example on the</font><font color="#CCCCCC"> bsd</font>

739
00:30:46,599 --> 00:30:52,089
<font color="#CCCCCC">of</font><font color="#E5E5E5"> random does not block unless it has</font>

740
00:30:48,909 --> 00:30:54,369
<font color="#E5E5E5">been seated yet and</font><font color="#CCCCCC"> openbsd seat sit in</font>

741
00:30:52,089 --> 00:30:57,129
the<font color="#E5E5E5"> bootloader stage before even the</font>

742
00:30:54,369 --> 00:30:59,859
<font color="#E5E5E5">corner</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> main</font><font color="#CCCCCC"> function answer you know</font>

743
00:30:57,129 --> 00:31:01,779
vacation<font color="#E5E5E5"> different</font><font color="#CCCCCC"> pastures</font><font color="#E5E5E5"> supposed to</font>

744
00:30:59,859 --> 00:31:04,119
know every operating system

745
00:31:01,779 --> 00:31:05,559
well the problem with<font color="#CCCCCC"> with the blocking</font>

746
00:31:04,119 --> 00:31:07,449
thing is and this came up<font color="#CCCCCC"> in</font>

747
00:31:05,559 --> 00:31:10,209
communications with blackberry as well

748
00:31:07,450 --> 00:31:13,089
<font color="#E5E5E5">is that if you say</font><font color="#CCCCCC"> I only provide</font>

749
00:31:10,209 --> 00:31:14,769
randomness<font color="#CCCCCC"> when I have sufficient</font><font color="#E5E5E5"> and</font>

750
00:31:13,089 --> 00:31:16,928
<font color="#CCCCCC">repeat in</font><font color="#E5E5E5"> the pool and</font><font color="#CCCCCC"> i'm sure this is</font>

751
00:31:14,769 --> 00:31:19,089
this<font color="#CCCCCC"> is high-quality this</font><font color="#E5E5E5"> is not as easy</font>

752
00:31:16,929 --> 00:31:21,009
to do in the embedded world because that

753
00:31:19,089 --> 00:31:23,289
means that for example if you need some

754
00:31:21,009 --> 00:31:24,940
sort of secure randomness during boot

755
00:31:23,289 --> 00:31:26,829
<font color="#E5E5E5">and you don't have enough entropy</font><font color="#CCCCCC"> than</font>

756
00:31:24,940 --> 00:31:28,839
<font color="#E5E5E5">boot times get really slow and</font>

757
00:31:26,829 --> 00:31:30,399
especially if you have devices under

758
00:31:28,839 --> 00:31:32,859
real time constraints

759
00:31:30,399 --> 00:31:36,189
this is an engineering<font color="#E5E5E5"> hurdle right</font>

760
00:31:32,859 --> 00:31:37,839
there so<font color="#CCCCCC"> I I'd say</font><font color="#E5E5E5"> they're a paper was</font>

761
00:31:36,190 --> 00:31:40,479
published<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> that security and</font>

762
00:31:37,839 --> 00:31:42,820
privacy 2013 i think it was called

763
00:31:40,479 --> 00:31:45,789
something like<font color="#E5E5E5"> welcome to the entropic</font>

764
00:31:42,820 --> 00:31:47,349
<font color="#E5E5E5">or something like that and there were</font>

765
00:31:45,789 --> 00:31:49,899
some good best<font color="#CCCCCC"> practice</font><font color="#E5E5E5"> recommendations</font>

766
00:31:47,349 --> 00:31:52,149
<font color="#E5E5E5">for the embedded world</font><font color="#CCCCCC"> they're mainly in</font>

767
00:31:49,899 --> 00:31:53,678
the form of seed files but as we

768
00:31:52,149 --> 00:31:55,779
mentioned already if you have<font color="#E5E5E5"> diskless</font>

769
00:31:53,679 --> 00:31:58,719
<font color="#CCCCCC">nodes there</font><font color="#E5E5E5"> it's kind of an open problem</font>

770
00:31:55,779 --> 00:32:00,969
to design a real good<font color="#E5E5E5"> embedded</font>

771
00:31:58,719 --> 00:32:08,049
<font color="#CCCCCC">open-source</font><font color="#E5E5E5"> random number generator for</font>

772
00:32:00,969 --> 00:32:10,389
<font color="#CCCCCC">all across the board</font><font color="#E5E5E5"> second micromax</font>

773
00:32:08,049 --> 00:32:12,339
<font color="#E5E5E5">there please and thank you</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you</font>

774
00:32:10,389 --> 00:32:13,988
<font color="#E5E5E5">mentioned the</font><font color="#CCCCCC"> NDA you have with a vendor</font>

775
00:32:12,339 --> 00:32:15,399
<font color="#E5E5E5">and what is the nature of your</font>

776
00:32:13,989 --> 00:32:17,299
relationship with this<font color="#CCCCCC"> vendor how did</font>

777
00:32:15,399 --> 00:32:20,508
you end up with an<font color="#E5E5E5"> NDA with them</font>

778
00:32:17,299 --> 00:32:30,529
<font color="#E5E5E5">and how</font><font color="#CCCCCC"> are you</font><font color="#E5E5E5"> all agree surely come</font>

779
00:32:20,509 --> 00:32:33,619
back<font color="#CCCCCC"> to have just that I</font><font color="#E5E5E5"> can just</font><font color="#CCCCCC"> tell</font>

780
00:32:30,529 --> 00:32:36,139
<font color="#CCCCCC">you that it</font><font color="#E5E5E5"> to one year for us to get to</font>

781
00:32:33,619 --> 00:32:39,379
us because<font color="#E5E5E5"> they're providing</font><font color="#CCCCCC"> la claim</font>

782
00:32:36,139 --> 00:32:41,899
<font color="#E5E5E5">security</font><font color="#CCCCCC"> up security so that's how it is</font>

783
00:32:39,379 --> 00:32:43,908
to be honest<font color="#CCCCCC"> in</font><font color="#E5E5E5"> lots of</font><font color="#CCCCCC"> real time</font>

784
00:32:41,899 --> 00:32:48,168
operating systems<font color="#CCCCCC"> they are living in</font>

785
00:32:43,909 --> 00:32:49,820
1998<font color="#E5E5E5"> was so it's an academic</font><font color="#CCCCCC"> effort</font><font color="#E5E5E5"> not</font>

786
00:32:48,169 --> 00:32:52,999
a consulting assignment

787
00:32:49,820 --> 00:32:57,320
<font color="#CCCCCC">ok thank you</font><font color="#E5E5E5"> Mark</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> then you please</font>

788
00:32:52,999 --> 00:33:06,769
<font color="#E5E5E5">thanks for cool talk first question</font><font color="#CCCCCC"> and</font>

789
00:32:57,320 --> 00:33:08,689
<font color="#CCCCCC">arm</font><font color="#E5E5E5"> v8 relies on</font><font color="#CCCCCC"> you fi</font><font color="#E5E5E5"> random before</font>

790
00:33:06,769 --> 00:33:13,489
<font color="#E5E5E5">for initializing</font><font color="#CCCCCC"> Colonel address</font>

791
00:33:08,690 --> 00:33:17,210
<font color="#E5E5E5">randomization layout randomization do</font>

792
00:33:13,489 --> 00:33:19,820
you think that relying on<font color="#CCCCCC"> bootloader is</font>

793
00:33:17,210 --> 00:33:22,609
better for operating system then trying

794
00:33:19,820 --> 00:33:27,830
to solve friend problem with ugly means

795
00:33:22,609 --> 00:33:30,559
<font color="#CCCCCC">I I</font><font color="#E5E5E5"> mean don't take in into them</font><font color="#CCCCCC"> don't</font>

796
00:33:27,830 --> 00:33:32,869
take<font color="#CCCCCC"> random number generating interest</font>

797
00:33:30,559 --> 00:33:36,139
<font color="#CCCCCC">the responsibility of their operating</font>

798
00:33:32,869 --> 00:33:40,220
system but put it to<font color="#CCCCCC"> bootloader yeah I</font>

799
00:33:36,139 --> 00:33:42,830
<font color="#CCCCCC">mean I guess that depends on going on</font>

800
00:33:40,220 --> 00:33:46,549
<font color="#E5E5E5">your design model for example and that</font>

801
00:33:42,830 --> 00:33:48,649
would require you to have a<font color="#E5E5E5"> bootloader</font>

802
00:33:46,549 --> 00:33:50,299
that standardized<font color="#E5E5E5"> all across the board</font>

803
00:33:48,649 --> 00:33:52,518
where you want to deploy it for example

804
00:33:50,299 --> 00:33:54,200
if there's no<font color="#CCCCCC"> bootloader</font><font color="#E5E5E5"> that's suitable</font>

805
00:33:52,519 --> 00:33:55,850
for the kind of embedded systems you

806
00:33:54,200 --> 00:33:57,830
want but you do want an operating system

807
00:33:55,850 --> 00:33:59,988
and it doesn't have a random number

808
00:33:57,830 --> 00:34:02,509
generator<font color="#E5E5E5"> then you're left without</font>

809
00:33:59,989 --> 00:34:04,369
<font color="#E5E5E5">around the number generator so it's</font><font color="#CCCCCC"> the</font>

810
00:34:02,509 --> 00:34:06,019
one of the biggest problems and as<font color="#E5E5E5"> this</font>

811
00:34:04,369 --> 00:34:08,118
is where<font color="#CCCCCC"> these polyculture argument</font>

812
00:34:06,019 --> 00:34:09,739
comes in<font color="#E5E5E5"> is that in the</font><font color="#CCCCCC"> general purpose</font>

813
00:34:08,119 --> 00:34:12,109
world you can make some assumptions

814
00:34:09,739 --> 00:34:14,209
about<font color="#CCCCCC"> hardware</font><font color="#E5E5E5"> roughly looks like this</font>

815
00:34:12,109 --> 00:34:16,429
roughly as these capabilities software

816
00:34:14,210 --> 00:34:19,099
<font color="#CCCCCC">the same with embedded in the amended</font>

817
00:34:16,429 --> 00:34:22,790
<font color="#CCCCCC">rollers so much diversity that it's</font>

818
00:34:19,099 --> 00:34:26,240
probably better to optionally include

819
00:34:22,790 --> 00:34:28,699
functionality<font color="#CCCCCC"> all across the software</font>

820
00:34:26,239 --> 00:34:30,118
stack in this case<font color="#E5E5E5"> then to simply say</font><font color="#CCCCCC"> oh</font>

821
00:34:28,699 --> 00:34:31,649
<font color="#E5E5E5">we simply assume it's there</font>

822
00:34:30,119 --> 00:34:33,359
<font color="#CCCCCC">in the boot loader and</font><font color="#E5E5E5"> then it turns out</font>

823
00:34:31,649 --> 00:34:34,980
that it's not there in the<font color="#E5E5E5"> bootloader</font>

824
00:34:33,359 --> 00:34:38,219
<font color="#CCCCCC">okay thanks</font>

825
00:34:34,980 --> 00:34:41,490
another idea can<font color="#E5E5E5"> we rely on the</font>

826
00:34:38,219 --> 00:34:47,158
manufacturer which makes a small device

827
00:34:41,489 --> 00:34:50,069
without<font color="#CCCCCC"> random number sources to put to</font>

828
00:34:47,159 --> 00:34:53,429
feed the device by random input during

829
00:34:50,069 --> 00:34:56,009
the manufacturing<font color="#CCCCCC"> I mean attach the</font>

830
00:34:53,429 --> 00:34:59,519
device before selling it to some random

831
00:34:56,009 --> 00:35:01,589
<font color="#E5E5E5">of expensive random number generator get</font>

832
00:34:59,519 --> 00:35:03,390
there and the input and<font color="#CCCCCC"> then</font><font color="#E5E5E5"> go</font>

833
00:35:01,589 --> 00:35:05,249
yeah<font color="#E5E5E5"> it's one of the things I i</font>

834
00:35:03,390 --> 00:35:07,288
mentioned that's essentially a seed file

835
00:35:05,249 --> 00:35:10,078
and it's one of the things<font color="#E5E5E5"> I</font><font color="#CCCCCC"> i mentioned</font>

836
00:35:07,289 --> 00:35:11,579
in<font color="#E5E5E5"> the slides if you include a seed file</font>

837
00:35:10,079 --> 00:35:14,700
with your firmware image and you make

838
00:35:11,579 --> 00:35:17,910
sure<font color="#CCCCCC"> it's random perform or image</font><font color="#E5E5E5"> then</font>

839
00:35:14,700 --> 00:35:19,348
that might be a workaround<font color="#E5E5E5"> but that</font>

840
00:35:17,910 --> 00:35:21,058
depends on how well the vendor

841
00:35:19,349 --> 00:35:22,559
understands what<font color="#E5E5E5"> they're doing because a</font>

842
00:35:21,059 --> 00:35:24,869
case in point would be the western

843
00:35:22,559 --> 00:35:27,029
digital self encrypting drives<font color="#E5E5E5"> thing</font>

844
00:35:24,869 --> 00:35:31,079
where they actually generated<font color="#CCCCCC"> keys based</font>

845
00:35:27,029 --> 00:35:31,890
on their lips ear and function so<font color="#CCCCCC"> for</font>

846
00:35:31,079 --> 00:35:34,289
weeks<font color="#CCCCCC"> once</font>

847
00:35:31,890 --> 00:35:36,779
yeah that kind of stuff so it could be a

848
00:35:34,289 --> 00:35:39,210
solution but<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> that depends on the</font>

849
00:35:36,779 --> 00:35:40,259
vendor or whether they do it well<font color="#E5E5E5"> thanks</font>

850
00:35:39,210 --> 00:35:42,809
you thank you

851
00:35:40,259 --> 00:35:45,029
<font color="#CCCCCC">ok we have time for one short last</font>

852
00:35:42,809 --> 00:35:47,609
question

853
00:35:45,029 --> 00:35:50,369
<font color="#CCCCCC">ok you have</font><font color="#E5E5E5"> three pretty bad examples</font>

854
00:35:47,609 --> 00:35:53,038
here and we have a broader field<font color="#E5E5E5"> a</font>

855
00:35:50,369 --> 00:35:54,960
broader view of the field<font color="#E5E5E5"> are there is</font>

856
00:35:53,039 --> 00:35:57,119
it a general problem that they are all

857
00:35:54,960 --> 00:36:00,089
this<font color="#E5E5E5"> bed or</font><font color="#CCCCCC"> did you</font><font color="#E5E5E5"> just pick the three</font>

858
00:35:57,119 --> 00:36:02,819
worst ones that<font color="#E5E5E5"> you stumbled upon has</font>

859
00:36:00,089 --> 00:36:04,890
some operating systems that do it right

860
00:36:02,819 --> 00:36:07,259
and whatever<font color="#CCCCCC"> I write might be</font><font color="#E5E5E5"> today's</font><font color="#CCCCCC"> no</font>

861
00:36:04,890 --> 00:36:11,440
actually these are about the best

862
00:36:07,260 --> 00:36:15,920
[Music]

863
00:36:11,440 --> 00:36:19,790
[Applause]

864
00:36:15,920 --> 00:36:40,530
<font color="#CCCCCC">okay thank you very</font><font color="#E5E5E5"> much a warm round of</font>

865
00:36:19,790 --> 00:36:53,739
applause for them again please

866
00:36:40,530 --> 00:36:53,739
[Music]

