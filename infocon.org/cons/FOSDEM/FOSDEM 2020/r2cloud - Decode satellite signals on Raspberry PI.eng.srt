1
00:00:06,319 --> 00:00:10,320
okay

2
00:00:07,759 --> 00:00:11,360
our next speaker is andre and he's going

3
00:00:10,320 --> 00:00:15,599
to talk to us about

4
00:00:11,360 --> 00:00:19,359
java satellites and raspberry pi yeah

5
00:00:15,599 --> 00:00:21,039
um hello everyone uh my name is andrei

6
00:00:19,359 --> 00:00:23,199
i'm a software developer i'd like to

7
00:00:21,039 --> 00:00:25,599
talk about autocloud

8
00:00:23,199 --> 00:00:28,320
uh this is software which lets you

9
00:00:25,599 --> 00:00:32,238
download the data from satellites

10
00:00:28,320 --> 00:00:35,360
yet another uh i'd like to talk about

11
00:00:32,238 --> 00:00:38,879
uh the design uh the features

12
00:00:35,360 --> 00:00:42,320
and a bit of future plans and

13
00:00:38,879 --> 00:00:45,440
answer questions so but before

14
00:00:42,320 --> 00:00:47,360
i move a brief history so um several

15
00:00:45,440 --> 00:00:50,718
years ago i decided

16
00:00:47,360 --> 00:00:53,840
uh to contribute to space technology and

17
00:00:50,719 --> 00:00:55,280
improve our space tech somehow with a

18
00:00:53,840 --> 00:00:57,760
software developer it's really hard to

19
00:00:55,280 --> 00:01:00,800
do um

20
00:00:57,760 --> 00:01:02,960
really hard to find the niche and uh and

21
00:01:00,800 --> 00:01:06,240
all stuff so i found a project called

22
00:01:02,960 --> 00:01:07,920
set knox uh this project was

23
00:01:06,240 --> 00:01:09,920
about building a base station for

24
00:01:07,920 --> 00:01:10,159
tracking satellites i was really excited

25
00:01:09,920 --> 00:01:12,799
i

26
00:01:10,159 --> 00:01:13,520
started building it trying to run this

27
00:01:12,799 --> 00:01:16,880
uh

28
00:01:13,520 --> 00:01:19,439
on my macbook compiling oh

29
00:01:16,880 --> 00:01:20,000
um yeah i had a lot of issues with that

30
00:01:19,439 --> 00:01:22,320
um

31
00:01:20,000 --> 00:01:23,920
because of different python versions

32
00:01:22,320 --> 00:01:27,119
different c plus plus

33
00:01:23,920 --> 00:01:30,400
there was a lot of features i had and

34
00:01:27,119 --> 00:01:31,920
i actually opened the setnox ui trying

35
00:01:30,400 --> 00:01:33,600
to find what the data set noise can

36
00:01:31,920 --> 00:01:35,200
provide and how they contribute to them

37
00:01:33,600 --> 00:01:37,919
maybe the web

38
00:01:35,200 --> 00:01:40,799
server and i didn't find any data there

39
00:01:37,920 --> 00:01:44,079
only waterfalls and some audio files

40
00:01:40,799 --> 00:01:45,680
so i was really disappointed at the time

41
00:01:44,079 --> 00:01:48,559
and what a software developer would do

42
00:01:45,680 --> 00:01:50,960
in such case

43
00:01:48,560 --> 00:01:52,880
i decided to build my own station of

44
00:01:50,960 --> 00:01:57,280
course

45
00:01:52,880 --> 00:01:59,360
in my base station should do uh

46
00:01:57,280 --> 00:02:02,000
all these things so it should i should

47
00:01:59,360 --> 00:02:05,520
see some pictures from space

48
00:02:02,000 --> 00:02:08,318
right uh this is super cool it's visible

49
00:02:05,520 --> 00:02:10,000
i would like to see any telemetry uh the

50
00:02:08,318 --> 00:02:13,359
solar panels voltage

51
00:02:10,000 --> 00:02:14,720
uh everything should be stable i should

52
00:02:13,360 --> 00:02:17,440
be able to

53
00:02:14,720 --> 00:02:18,800
run my base station on sono pillars

54
00:02:17,440 --> 00:02:21,440
somewhere in the woods

55
00:02:18,800 --> 00:02:22,959
and leave it for years don't bother with

56
00:02:21,440 --> 00:02:25,440
it uh and you get the data

57
00:02:22,959 --> 00:02:27,040
eventually and my base station should be

58
00:02:25,440 --> 00:02:30,319
stable and

59
00:02:27,040 --> 00:02:32,879
uh and it should be simple uh

60
00:02:30,319 --> 00:02:34,640
and it should do one thing just gather

61
00:02:32,879 --> 00:02:37,920
the data from the satellites

62
00:02:34,640 --> 00:02:40,559
but it should do it well

63
00:02:37,920 --> 00:02:41,200
so i started to to play with the design

64
00:02:40,560 --> 00:02:45,760
a bit

65
00:02:41,200 --> 00:02:49,119
and uh i came with the following

66
00:02:45,760 --> 00:02:51,840
so um it consists of two steps

67
00:02:49,120 --> 00:02:53,200
the first one is a very simple when a

68
00:02:51,840 --> 00:02:56,000
satellite

69
00:02:53,200 --> 00:02:57,518
comes over or horizon my base station

70
00:02:56,000 --> 00:02:59,599
should schedule an observation from

71
00:02:57,519 --> 00:03:02,400
where telstra

72
00:02:59,599 --> 00:03:03,119
it should get the data zip it save to

73
00:03:02,400 --> 00:03:05,920
the disk

74
00:03:03,120 --> 00:03:07,760
for the further processing so nothing

75
00:03:05,920 --> 00:03:10,879
fancy here super simple

76
00:03:07,760 --> 00:03:14,560
just save the data to the disk uh and

77
00:03:10,879 --> 00:03:14,879
execute the next step so when satellite

78
00:03:14,560 --> 00:03:18,239
is

79
00:03:14,879 --> 00:03:19,679
uh left to sky then base station should

80
00:03:18,239 --> 00:03:22,959
stop the stars there

81
00:03:19,680 --> 00:03:22,959
and just execute the next step

82
00:03:23,360 --> 00:03:27,440
next step has the following it reads the

83
00:03:26,720 --> 00:03:30,480
data

84
00:03:27,440 --> 00:03:31,280
from a disk simply demodulate it simply

85
00:03:30,480 --> 00:03:33,518
decode it

86
00:03:31,280 --> 00:03:35,920
and save it onto this result and

87
00:03:33,519 --> 00:03:38,560
optionally maybe save it somewhere

88
00:03:35,920 --> 00:03:39,920
essentially for aggregation purposes and

89
00:03:38,560 --> 00:03:42,159
sharing with the community and the

90
00:03:39,920 --> 00:03:43,518
scientists

91
00:03:42,159 --> 00:03:46,079
and this step could be executed

92
00:03:43,519 --> 00:03:49,440
concurrently with the first one

93
00:03:46,080 --> 00:03:52,480
uh and so that i could optimize the

94
00:03:49,440 --> 00:03:55,680
the load yeah all i have to do is just

95
00:03:52,480 --> 00:04:00,159
simply demodulate and decode the data

96
00:03:55,680 --> 00:04:03,360
right so i have no idea how to do it

97
00:04:00,159 --> 00:04:04,480
um especially three years later a few

98
00:04:03,360 --> 00:04:06,480
years ago um

99
00:04:04,480 --> 00:04:07,518
but i knew that somebody else can do it

100
00:04:06,480 --> 00:04:09,200
better than me

101
00:04:07,519 --> 00:04:11,200
right and i started googling it and

102
00:04:09,200 --> 00:04:12,839
google it and google it

103
00:04:11,200 --> 00:04:15,119
and i found a project called

104
00:04:12,840 --> 00:04:18,478
geosatellites

105
00:04:15,120 --> 00:04:20,720
you may heard about it right so this

106
00:04:18,478 --> 00:04:22,719
project contains a lot of satellites and

107
00:04:20,720 --> 00:04:26,240
a lot of decoders from

108
00:04:22,720 --> 00:04:29,440
from a lot of companies

109
00:04:26,240 --> 00:04:32,400
and it's really good place uh to look at

110
00:04:29,440 --> 00:04:33,600
uh highly recommend uh the work that

111
00:04:32,400 --> 00:04:35,599
daniel did

112
00:04:33,600 --> 00:04:37,280
and this is a special hard work because

113
00:04:35,600 --> 00:04:40,639
uh the satellite

114
00:04:37,280 --> 00:04:41,039
uh owners they do normally do not share

115
00:04:40,639 --> 00:04:43,199
the

116
00:04:41,040 --> 00:04:44,639
protocol details right and it's really

117
00:04:43,199 --> 00:04:48,560
hard to find the

118
00:04:44,639 --> 00:04:51,759
the way to to get the data out of bits

119
00:04:48,560 --> 00:04:52,479
so this project was completely fit my

120
00:04:51,759 --> 00:04:55,680
purpose

121
00:04:52,479 --> 00:04:56,479
right but what the next step steps for

122
00:04:55,680 --> 00:04:59,840
me

123
00:04:56,479 --> 00:05:01,360
to do right the first step i can

124
00:04:59,840 --> 00:05:03,198
use a gnu radio right because the

125
00:05:01,360 --> 00:05:03,680
gesture lights based on glue radio i can

126
00:05:03,199 --> 00:05:06,960
use the

127
00:05:03,680 --> 00:05:11,120
radio i can start building it uh working

128
00:05:06,960 --> 00:05:14,400
with the python versions on my macbook

129
00:05:11,120 --> 00:05:16,080
and feel in pain and

130
00:05:14,400 --> 00:05:17,440
essentially it would be the same what

131
00:05:16,080 --> 00:05:20,000
set knox did

132
00:05:17,440 --> 00:05:21,600
uh and i didn't want to follow that

133
00:05:20,000 --> 00:05:24,800
route

134
00:05:21,600 --> 00:05:28,479
another option i could write my own dsp

135
00:05:24,800 --> 00:05:30,800
framework right and spend my

136
00:05:28,479 --> 00:05:33,360
next five years trying to debug it and

137
00:05:30,800 --> 00:05:35,600
see if it really works

138
00:05:33,360 --> 00:05:36,960
that's too much time consuming i don't

139
00:05:35,600 --> 00:05:39,520
want to do it again

140
00:05:36,960 --> 00:05:42,080
or maybe i can do something in between

141
00:05:39,520 --> 00:05:42,080
and i did it

142
00:05:42,479 --> 00:05:45,199
i used java

143
00:05:46,560 --> 00:05:50,560
i decided to write the geosatellite

144
00:05:49,680 --> 00:05:53,680
piece

145
00:05:50,560 --> 00:05:57,919
in java well of course i had to

146
00:05:53,680 --> 00:06:01,199
write a piece of generator in java

147
00:05:57,919 --> 00:06:04,400
right the first thing

148
00:06:01,199 --> 00:06:06,479
the first white java right the first

149
00:06:04,400 --> 00:06:08,880
the first reason is uh because i need i

150
00:06:06,479 --> 00:06:12,800
know java i'm a java developer

151
00:06:08,880 --> 00:06:16,479
the second thing is uh right ones

152
00:06:12,800 --> 00:06:19,759
run everywhere slogan still works i can

153
00:06:16,479 --> 00:06:20,560
run my java program on my macbook run it

154
00:06:19,759 --> 00:06:23,840
on

155
00:06:20,560 --> 00:06:27,039
raspberry pi in production

156
00:06:23,840 --> 00:06:29,840
and test it in travis cive or some

157
00:06:27,039 --> 00:06:31,680
somewhere else where java can run so

158
00:06:29,840 --> 00:06:35,440
this is very convenient i don't want to

159
00:06:31,680 --> 00:06:36,800
install cononon yeah framework to do the

160
00:06:35,440 --> 00:06:40,800
package management and

161
00:06:36,800 --> 00:06:42,880
build the different options um

162
00:06:40,800 --> 00:06:44,960
yeah and this is single language uh for

163
00:06:42,880 --> 00:06:48,159
the for the whole stack if somebody

164
00:06:44,960 --> 00:06:48,960
tried to uh get the satellite data you

165
00:06:48,160 --> 00:06:50,479
might know that

166
00:06:48,960 --> 00:06:52,799
you need to compile lots of dependencies

167
00:06:50,479 --> 00:06:54,240
for new radio some dependencies for jio

168
00:06:52,800 --> 00:06:56,560
satellites

169
00:06:54,240 --> 00:06:58,400
and hope for the best uh this is a

170
00:06:56,560 --> 00:07:01,440
single language

171
00:06:58,400 --> 00:07:05,599
uh the thing is i had to

172
00:07:01,440 --> 00:07:05,599
rewrite piece of green radio

173
00:07:05,680 --> 00:07:12,160
and i did it as much way

174
00:07:08,720 --> 00:07:15,599
of course i decided to implement

175
00:07:12,160 --> 00:07:18,560
the interfaces and make my blocks binary

176
00:07:15,599 --> 00:07:21,199
compatible with the new radio blocks

177
00:07:18,560 --> 00:07:23,520
so the input parameters in my java

178
00:07:21,199 --> 00:07:26,240
implementation are the same

179
00:07:23,520 --> 00:07:27,520
and the output and input they are the

180
00:07:26,240 --> 00:07:30,479
same

181
00:07:27,520 --> 00:07:31,359
so what i did i created file source run

182
00:07:30,479 --> 00:07:34,000
it through the

183
00:07:31,360 --> 00:07:34,479
interesting minimizer block and save it

184
00:07:34,000 --> 00:07:36,400
somewhere

185
00:07:34,479 --> 00:07:37,758
then i did the same for java and just

186
00:07:36,400 --> 00:07:40,318
compared the result between the new

187
00:07:37,759 --> 00:07:43,360
radio output and my own output

188
00:07:40,319 --> 00:07:45,360
and it actually worked all my blogs are

189
00:07:43,360 --> 00:07:49,039
being incompatible up to five

190
00:07:45,360 --> 00:07:52,319
decimal places so for if it is a flawed

191
00:07:49,039 --> 00:07:56,240
then five decimal places are okay

192
00:07:52,319 --> 00:07:57,919
um so um

193
00:07:56,240 --> 00:08:00,080
there's the differences of course in the

194
00:07:57,919 --> 00:08:01,280
plum between the green radio and my own

195
00:08:00,080 --> 00:08:03,440
implementation

196
00:08:01,280 --> 00:08:05,359
the first one i'm writing in java so in

197
00:08:03,440 --> 00:08:08,400
java we have very

198
00:08:05,360 --> 00:08:08,400
interesting uh

199
00:08:09,120 --> 00:08:13,440
equalities so the first thing is a

200
00:08:12,160 --> 00:08:16,240
garbage collection

201
00:08:13,440 --> 00:08:17,680
and the memory management so you can now

202
00:08:16,240 --> 00:08:19,680
locate buffers and then

203
00:08:17,680 --> 00:08:21,039
allocate them because that would create

204
00:08:19,680 --> 00:08:24,400
a great pressure

205
00:08:21,039 --> 00:08:27,599
on a garbage collector so for that i

206
00:08:24,400 --> 00:08:30,638
um relocate everything

207
00:08:27,599 --> 00:08:31,440
so my garbage collection just did not

208
00:08:30,639 --> 00:08:32,799
work at all

209
00:08:31,440 --> 00:08:35,360
just don't bother with this so these

210
00:08:32,799 --> 00:08:35,919
blue things are actually pre-allocated

211
00:08:35,360 --> 00:08:39,200
stuff

212
00:08:35,919 --> 00:08:40,079
so uh normally as you can see there's no

213
00:08:39,200 --> 00:08:43,360
new operator

214
00:08:40,080 --> 00:08:46,720
and nothing is allocated

215
00:08:43,360 --> 00:08:49,920
uh another thing another

216
00:08:46,720 --> 00:08:52,399
major difference is single threat so i

217
00:08:49,920 --> 00:08:55,839
must admit that the scheduler

218
00:08:52,399 --> 00:08:59,519
concept is too complex for me

219
00:08:55,839 --> 00:09:01,920
so i decided not to implement it at all

220
00:08:59,519 --> 00:09:02,959
um and as the market said previously

221
00:09:01,920 --> 00:09:06,319
that yeah

222
00:09:02,959 --> 00:09:08,479
a single thread might work and

223
00:09:06,320 --> 00:09:10,160
actually it i think it's my even better

224
00:09:08,480 --> 00:09:13,440
than running on par

225
00:09:10,160 --> 00:09:15,360
on multiple cores because

226
00:09:13,440 --> 00:09:17,200
if you have a multiple cores you have to

227
00:09:15,360 --> 00:09:17,760
copy the memory from one core to another

228
00:09:17,200 --> 00:09:20,640
core

229
00:09:17,760 --> 00:09:21,200
do a lot of synchronization between them

230
00:09:20,640 --> 00:09:22,880
and that

231
00:09:21,200 --> 00:09:24,720
could hit uh performance and there was

232
00:09:22,880 --> 00:09:27,360
no it would be a lot of cache misses

233
00:09:24,720 --> 00:09:28,240
as well if i do this on several chords

234
00:09:27,360 --> 00:09:33,120
so i decided to go

235
00:09:28,240 --> 00:09:33,120
single thread and uh write

236
00:09:33,360 --> 00:09:38,959
my flow graph as a sequence of blocks

237
00:09:36,800 --> 00:09:42,479
they just change one after another and

238
00:09:38,959 --> 00:09:42,479
get an input one from another

239
00:09:43,040 --> 00:09:46,399
so from uh from a programmer perspective

240
00:09:45,760 --> 00:09:49,040
for view

241
00:09:46,399 --> 00:09:49,839
they're just blocks one to one for the

242
00:09:49,040 --> 00:09:53,599
gbm

243
00:09:49,839 --> 00:09:56,480
which runs this is just a lot of cycles

244
00:09:53,600 --> 00:09:57,680
if this and jvm can optimize it very

245
00:09:56,480 --> 00:09:59,200
efficiently

246
00:09:57,680 --> 00:10:00,959
and compile it to the native code

247
00:09:59,200 --> 00:10:01,360
because everything is executed on the

248
00:10:00,959 --> 00:10:05,359
same

249
00:10:01,360 --> 00:10:08,560
cpu on the same um

250
00:10:05,360 --> 00:10:09,200
on the same on a single cpu and another

251
00:10:08,560 --> 00:10:10,880
thing why

252
00:10:09,200 --> 00:10:12,240
i chose this because i would like to run

253
00:10:10,880 --> 00:10:16,800
is on raspberry pi

254
00:10:12,240 --> 00:10:19,600
and as we apply we have um four cores

255
00:10:16,800 --> 00:10:21,920
so one core would be allocated for these

256
00:10:19,600 --> 00:10:23,680
hotels there

257
00:10:21,920 --> 00:10:26,079
the second core would be allocated to

258
00:10:23,680 --> 00:10:28,239
demodulate in the codeine

259
00:10:26,079 --> 00:10:30,800
the third core might be allocated to

260
00:10:28,240 --> 00:10:34,560
some system-wide operations

261
00:10:30,800 --> 00:10:37,760
and fourth quarter might be just in case

262
00:10:34,560 --> 00:10:42,079
all right um the third difference is

263
00:10:37,760 --> 00:10:45,120
test so uh my inner enterprise

264
00:10:42,079 --> 00:10:47,359
developer admires this picture

265
00:10:45,120 --> 00:10:50,240
i wrote a lot of tests so that's why i'm

266
00:10:47,360 --> 00:10:54,079
saying my blocks are binary compatible

267
00:10:50,240 --> 00:10:58,240
uh i have proofs uh of course and

268
00:10:54,079 --> 00:11:01,279
i wrote a bit more test um

269
00:10:58,240 --> 00:11:03,120
for the decoders as well so i took some

270
00:11:01,279 --> 00:11:07,200
data from satellite recordings

271
00:11:03,120 --> 00:11:10,240
projects which is run by daniel as well

272
00:11:07,200 --> 00:11:13,680
uh and some data from out to cloud

273
00:11:10,240 --> 00:11:15,440
my own uh project

274
00:11:13,680 --> 00:11:16,959
so what's the difference between the two

275
00:11:15,440 --> 00:11:18,720
so satellite recordings they contain

276
00:11:16,959 --> 00:11:20,719
very strong signal

277
00:11:18,720 --> 00:11:21,760
which is very useful when you want to do

278
00:11:20,720 --> 00:11:24,640
uh

279
00:11:21,760 --> 00:11:25,600
to test for your decoders you want to

280
00:11:24,640 --> 00:11:28,640
make sure that

281
00:11:25,600 --> 00:11:31,680
uh you understand uh practical

282
00:11:28,640 --> 00:11:33,120
uh properly and yeah it's it's

283
00:11:31,680 --> 00:11:35,519
it's easier to do a reference

284
00:11:33,120 --> 00:11:38,720
engineering but if you want to

285
00:11:35,519 --> 00:11:40,720
uh decode signal in wild you have to do

286
00:11:38,720 --> 00:11:42,720
uh to deal with the multi-path with the

287
00:11:40,720 --> 00:11:46,160
doppler with

288
00:11:42,720 --> 00:11:49,040
with a neighborhood antenna and whatever

289
00:11:46,160 --> 00:11:50,560
might comes up so i have two types of

290
00:11:49,040 --> 00:11:52,639
tests for these

291
00:11:50,560 --> 00:11:56,399
one for the protocol and the second one

292
00:11:52,639 --> 00:12:01,360
for the for the real time signal which i

293
00:11:56,399 --> 00:12:04,720
collected from from antenna

294
00:12:01,360 --> 00:12:07,839
and three years later well

295
00:12:04,720 --> 00:12:09,600
nearly i've implemented uh

296
00:12:07,839 --> 00:12:11,279
some satellites the active satellites

297
00:12:09,600 --> 00:12:13,920
from geosatellites

298
00:12:11,279 --> 00:12:15,519
have implemented all transit

299
00:12:13,920 --> 00:12:18,959
repositories

300
00:12:15,519 --> 00:12:21,680
because the satellite owners they

301
00:12:18,959 --> 00:12:23,439
provide some code which is useful but

302
00:12:21,680 --> 00:12:26,319
it's not normally if

303
00:12:23,440 --> 00:12:27,839
doesn't normally fit into other stacks

304
00:12:26,320 --> 00:12:31,519
or ever implements everything

305
00:12:27,839 --> 00:12:31,519
and just run it on a single thing

306
00:12:31,839 --> 00:12:39,360
leapfrog everything and i got dissolved

307
00:12:37,040 --> 00:12:40,319
this is a real telemetry from real

308
00:12:39,360 --> 00:12:43,760
satellite

309
00:12:40,320 --> 00:12:46,959
from real space uh it contains some

310
00:12:43,760 --> 00:12:49,519
boot count some voltages

311
00:12:46,959 --> 00:12:53,839
solar panel thing whatever really cool

312
00:12:49,519 --> 00:12:53,839
thing in json

313
00:12:54,079 --> 00:12:59,519
yeah also

314
00:12:57,760 --> 00:13:01,600
my base station can automatically

315
00:12:59,519 --> 00:13:04,399
schedule the next passes

316
00:13:01,600 --> 00:13:06,000
for the for some some satellites as you

317
00:13:04,399 --> 00:13:09,200
can see the green line is a line

318
00:13:06,000 --> 00:13:11,279
where uh i was able to decode at least

319
00:13:09,200 --> 00:13:14,320
one packet

320
00:13:11,279 --> 00:13:18,480
uh yeah so as you can see some

321
00:13:14,320 --> 00:13:22,560
i was not able to go so i'm working fine

322
00:13:18,480 --> 00:13:25,760
uh then i can aggregate the data

323
00:13:22,560 --> 00:13:26,959
so several base stations i can transmit

324
00:13:25,760 --> 00:13:29,360
the data and i can

325
00:13:26,959 --> 00:13:31,359
analyze it on a central place somewhere

326
00:13:29,360 --> 00:13:34,800
here

327
00:13:31,360 --> 00:13:36,240
um and and and

328
00:13:34,800 --> 00:13:38,479
you can share this data with the set

329
00:13:36,240 --> 00:13:40,000
knox again with some researchers fun

330
00:13:38,480 --> 00:13:44,240
cube warehouse

331
00:13:40,000 --> 00:13:46,839
whatever and and a great bonus

332
00:13:44,240 --> 00:13:49,680
i have a real picture from space here it

333
00:13:46,839 --> 00:13:53,519
is

334
00:13:49,680 --> 00:13:55,839
ah this is a night night night

335
00:13:53,519 --> 00:13:57,440
uh this is a nice sight of further off

336
00:13:55,839 --> 00:13:59,920
as you may see

337
00:13:57,440 --> 00:14:00,880
and this one is a bright one uh this is

338
00:13:59,920 --> 00:14:03,599
a

339
00:14:00,880 --> 00:14:05,600
this is an image from meteor m uh this

340
00:14:03,600 --> 00:14:09,040
is russian satellite

341
00:14:05,600 --> 00:14:11,279
uh protocol lrpt uh yeah and

342
00:14:09,040 --> 00:14:13,120
can transmit the data and i can one day

343
00:14:11,279 --> 00:14:13,680
i can put this image onto the google

344
00:14:13,120 --> 00:14:15,920
maps

345
00:14:13,680 --> 00:14:17,760
and see how the weather changes over

346
00:14:15,920 --> 00:14:21,680
time

347
00:14:17,760 --> 00:14:25,439
but for now it's there

348
00:14:21,680 --> 00:14:28,000
actually it looks much er better on my

349
00:14:25,440 --> 00:14:28,000
laptop

350
00:14:28,959 --> 00:14:34,959
yeah i'm used to discount antenna oh

351
00:14:32,000 --> 00:14:37,839
this is very simple basic and and with

352
00:14:34,959 --> 00:14:37,839
the negative gain

353
00:14:38,000 --> 00:14:41,920
um but it fits my purpose then very

354
00:14:41,199 --> 00:14:47,599
standard

355
00:14:41,920 --> 00:14:47,599
block v3 that was there raspberry pi

356
00:14:48,240 --> 00:14:53,360
right uh i'm talking about

357
00:14:51,680 --> 00:14:55,599
java but never said about performance

358
00:14:53,360 --> 00:14:55,600
right

359
00:14:56,480 --> 00:15:00,320
but as i say the phone's not really

360
00:14:58,079 --> 00:15:03,359
needed here and here's why

361
00:15:00,320 --> 00:15:06,639
um the first thing the satellite that

362
00:15:03,360 --> 00:15:10,160
they transmit the beacons one way only

363
00:15:06,639 --> 00:15:13,440
so you cannot reply it to the signal

364
00:15:10,160 --> 00:15:17,199
so this is one way transmission uh

365
00:15:13,440 --> 00:15:20,399
no need for real time then rtl is there

366
00:15:17,199 --> 00:15:23,519
this is only uh the receiving uh

367
00:15:20,399 --> 00:15:26,320
it can only receive the data so uh even

368
00:15:23,519 --> 00:15:28,959
if i can respond to it

369
00:15:26,320 --> 00:15:30,880
that doesn't allow me to do it so i

370
00:15:28,959 --> 00:15:32,239
don't really real-time response to these

371
00:15:30,880 --> 00:15:34,399
packets

372
00:15:32,240 --> 00:15:36,560
and no one on earth is really interested

373
00:15:34,399 --> 00:15:39,920
in getting real-time beacons

374
00:15:36,560 --> 00:15:40,880
in his university okay give me more data

375
00:15:39,920 --> 00:15:44,079
i can spend

376
00:15:40,880 --> 00:15:47,120
any amount of time doing a decoding

377
00:15:44,079 --> 00:15:49,599
um around some performance metrics so

378
00:15:47,120 --> 00:15:52,240
for cubesat uh this is a very narrow

379
00:15:49,600 --> 00:15:54,480
band signal 10 15 minutes

380
00:15:52,240 --> 00:15:55,759
for the full pass so this is nearly real

381
00:15:54,480 --> 00:15:57,600
time because

382
00:15:55,759 --> 00:15:59,040
it takes nearly 10 minutes to for the

383
00:15:57,600 --> 00:16:02,639
satellite to pass over

384
00:15:59,040 --> 00:16:06,079
and one hour and a half for meteorom

385
00:16:02,639 --> 00:16:07,920
oops but that's not really a java

386
00:16:06,079 --> 00:16:10,719
related this is will be

387
00:16:07,920 --> 00:16:11,360
doing uh anyway performance is not

388
00:16:10,720 --> 00:16:14,800
really used

389
00:16:11,360 --> 00:16:17,600
in in this uh for this kind of software

390
00:16:14,800 --> 00:16:19,359
uh i can optimize it maybe if just to

391
00:16:17,600 --> 00:16:23,040
reduce power consumption

392
00:16:19,360 --> 00:16:26,160
and run on solar panels but for now

393
00:16:23,040 --> 00:16:28,800
it's okay right

394
00:16:26,160 --> 00:16:30,399
what can be improved uh demodulators

395
00:16:28,800 --> 00:16:32,319
they definitely need to be improved i

396
00:16:30,399 --> 00:16:35,920
haven't found any

397
00:16:32,320 --> 00:16:37,519
uh resources which clearly state what

398
00:16:35,920 --> 00:16:38,399
what the parameters for the modulators

399
00:16:37,519 --> 00:16:41,120
are standard

400
00:16:38,399 --> 00:16:44,079
so i have only bps i have only beer

401
00:16:41,120 --> 00:16:47,440
curve for bpsk demodulator

402
00:16:44,079 --> 00:16:49,519
uh and that's it uh maybe i need uh more

403
00:16:47,440 --> 00:16:51,440
parameters like time to lock time to

404
00:16:49,519 --> 00:16:55,199
relock the signal

405
00:16:51,440 --> 00:16:59,600
uh any other parameters for fsk

406
00:16:55,199 --> 00:17:02,800
demodulator we need backup or whatever

407
00:16:59,600 --> 00:17:03,600
multipath propagation uh is not covered

408
00:17:02,800 --> 00:17:06,799
here as well

409
00:17:03,600 --> 00:17:10,559
so this is just avgn

410
00:17:06,799 --> 00:17:13,359
um channel um

411
00:17:10,559 --> 00:17:14,480
yeah and i need more um more

412
00:17:13,359 --> 00:17:18,879
demodulators

413
00:17:14,480 --> 00:17:22,880
fsk qpsk

414
00:17:18,880 --> 00:17:25,520
uh real world signals um the

415
00:17:22,880 --> 00:17:28,160
lack of them but it's getting better

416
00:17:25,520 --> 00:17:31,360
more satellites as daniel pointed out

417
00:17:28,160 --> 00:17:33,280
satellites constantly launching in space

418
00:17:31,360 --> 00:17:34,559
and they're constantly falling on earth

419
00:17:33,280 --> 00:17:36,960
so this never ending

420
00:17:34,559 --> 00:17:38,160
battle between the earth gravity and

421
00:17:36,960 --> 00:17:41,280
satellites

422
00:17:38,160 --> 00:17:44,640
and we started to uh yeah support them

423
00:17:41,280 --> 00:17:46,960
more and more maybe fpga stuff uh

424
00:17:44,640 --> 00:17:48,559
to optimize their modulators and reduce

425
00:17:46,960 --> 00:17:52,240
power consumption

426
00:17:48,559 --> 00:17:53,918
um yeah and this is it i think

427
00:17:52,240 --> 00:18:01,840
uh thank you for your time thanks for

428
00:17:53,919 --> 00:18:01,840
listening i have opened our questions

429
00:18:07,760 --> 00:18:10,799
uh the question was what's up support

430
00:18:10,480 --> 00:18:14,160
for

431
00:18:10,799 --> 00:18:17,440
famous after uh well i support for

432
00:18:14,160 --> 00:18:19,760
nes articles they are compatible sticks

433
00:18:17,440 --> 00:18:23,280
so if they can be run with us they are

434
00:18:19,760 --> 00:18:23,280
programmed then i can support them

435
00:18:24,400 --> 00:18:28,640
no no i'm not a single developer i can

436
00:18:26,640 --> 00:18:38,240
support the variety of hardware so

437
00:18:28,640 --> 00:18:38,240
just only one uh

438
00:18:40,840 --> 00:18:43,840
sorry

439
00:18:49,360 --> 00:18:57,840
uh this is uh so so my demodulator

440
00:18:53,520 --> 00:18:57,840
is is a red one so it's it's

441
00:18:58,720 --> 00:19:06,400
i think that's a classical

442
00:19:02,400 --> 00:19:08,559
vr approximation for um

443
00:19:06,400 --> 00:19:10,640
that's wrong for lowest in ours and

444
00:19:08,559 --> 00:19:12,080
there's about a million papers out there

445
00:19:10,640 --> 00:19:13,919
they use the matlab

446
00:19:12,080 --> 00:19:15,840
er curve and they're all wrong because

447
00:19:13,919 --> 00:19:18,799
the lowest it works

448
00:19:15,840 --> 00:19:19,678
yeah okay so so but this this back of

449
00:19:18,799 --> 00:19:22,639
call this on the

450
00:19:19,679 --> 00:19:24,559
avgn channel if i want to test against

451
00:19:22,640 --> 00:19:26,640
the multipath propagation channel

452
00:19:24,559 --> 00:19:29,360
then the backup will be different and it

453
00:19:26,640 --> 00:19:32,559
might be worse than the theoretical

454
00:19:29,360 --> 00:19:33,439
but even for the highest stars yeah it

455
00:19:32,559 --> 00:19:35,918
looks good

456
00:19:33,440 --> 00:19:36,799
yeah so i tried i spent some time on

457
00:19:35,919 --> 00:19:38,559
tuning it

458
00:19:36,799 --> 00:19:40,480
and actually i took a lot of code from

459
00:19:38,559 --> 00:19:43,360
the jail satellite

460
00:19:40,480 --> 00:19:43,360
to do it yeah

461
00:19:44,000 --> 00:19:46,320
question

462
00:19:50,000 --> 00:19:53,840
so can you

463
00:19:55,679 --> 00:19:59,200
yeah because of a complexity so if if i

464
00:19:58,160 --> 00:20:02,400
want to run

465
00:19:59,200 --> 00:20:04,720
my thing on on a on a macbook

466
00:20:02,400 --> 00:20:06,240
then i need only java dependency if i

467
00:20:04,720 --> 00:20:07,200
need to run gnu radio i need a lot of

468
00:20:06,240 --> 00:20:09,520
dependencies

469
00:20:07,200 --> 00:20:10,400
and dependencies of dependencies and

470
00:20:09,520 --> 00:20:13,760
sometimes it's

471
00:20:10,400 --> 00:20:16,799
not very convenient and sometimes uh

472
00:20:13,760 --> 00:20:19,039
i want to run the tests in cloud so

473
00:20:16,799 --> 00:20:20,879
all the tests that are running in cloud

474
00:20:19,039 --> 00:20:23,679
in trade ci integration

475
00:20:20,880 --> 00:20:27,200
so i'm not sure if i would ever possible

476
00:20:23,679 --> 00:20:27,200
to install all these dependencies there

477
00:20:28,320 --> 00:20:39,039
uh questions as well uh

478
00:20:35,440 --> 00:20:39,039
with your tools sorry

479
00:20:39,520 --> 00:20:43,840
no i i just focused only decoding

480
00:20:45,679 --> 00:20:48,720
sorry did you also plan to put this onto

481
00:20:48,320 --> 00:20:50,960
the

482
00:20:48,720 --> 00:20:53,039
space segment of the satellite or is

483
00:20:50,960 --> 00:20:55,360
just a receiving segment

484
00:20:53,039 --> 00:20:56,879
i mean could this be on a uh yeah the

485
00:20:55,360 --> 00:20:59,840
question was uh

486
00:20:56,880 --> 00:21:00,320
is any plans to put on a space segment

487
00:20:59,840 --> 00:21:03,280
uh

488
00:21:00,320 --> 00:21:04,240
i think it's uh not my choice so if

489
00:21:03,280 --> 00:21:07,840
anyone would like to

490
00:21:04,240 --> 00:21:09,200
use it it's freely open just use it see

491
00:21:07,840 --> 00:21:11,039
the data you can just

492
00:21:09,200 --> 00:21:13,120
open github and see the tests

493
00:21:11,039 --> 00:21:15,919
everything's there

494
00:21:13,120 --> 00:21:17,039
yeah yeah yeah so all decoders yeah it

495
00:21:15,919 --> 00:21:20,559
could be possibly used

496
00:21:17,039 --> 00:21:23,280
yeah all right

497
00:21:20,559 --> 00:21:23,280
i think this is it

498
00:21:24,559 --> 00:21:31,840
thank you thank you very much

499
00:21:32,640 --> 00:21:34,720
you

