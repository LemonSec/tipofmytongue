1
00:00:05,440 --> 00:00:10,160
good morning

2
00:00:08,080 --> 00:00:13,360
i'm today talking about stack spatial

3
00:00:10,160 --> 00:00:13,360
tempo asset catalog

4
00:00:13,440 --> 00:00:17,520
has anybody of you heard about stack

5
00:00:15,759 --> 00:00:20,160
already or

6
00:00:17,520 --> 00:00:22,880
well yeah that's great well do you have

7
00:00:20,160 --> 00:00:22,880
heard about it

8
00:00:23,519 --> 00:00:33,599
where have you heard about it

9
00:00:30,560 --> 00:00:35,280
anyway um so

10
00:00:33,600 --> 00:00:37,440
that's an introductory talk i'm just

11
00:00:35,280 --> 00:00:41,440
giving the basics today

12
00:00:37,440 --> 00:00:44,160
um and the basic for this was what is

13
00:00:41,440 --> 00:00:46,320
annoying about metadata right so if you

14
00:00:44,160 --> 00:00:48,718
have data and want to expose that to

15
00:00:46,320 --> 00:00:49,760
search engines so that users can use it

16
00:00:48,719 --> 00:00:52,559
so you need to

17
00:00:49,760 --> 00:00:54,480
basically know a metadata standard and

18
00:00:52,559 --> 00:00:57,839
expose it or write xml and

19
00:00:54,480 --> 00:00:59,440
stuff like that and

20
00:00:57,840 --> 00:01:02,000
also if you use it you need to

21
00:00:59,440 --> 00:01:03,920
understand the metadata format and

22
00:01:02,000 --> 00:01:05,360
we're trying to tackle that with focus

23
00:01:03,920 --> 00:01:08,640
on search and

24
00:01:05,360 --> 00:01:08,640
discovery of metadata

25
00:01:08,960 --> 00:01:12,880
we may get trapped with this of course

26
00:01:11,040 --> 00:01:15,600
so if there is like

27
00:01:12,880 --> 00:01:16,640
40 metadata standards then we do a new

28
00:01:15,600 --> 00:01:19,360
one and then

29
00:01:16,640 --> 00:01:20,240
there's 15 competing metadata standards

30
00:01:19,360 --> 00:01:23,360
so

31
00:01:20,240 --> 00:01:25,600
that might happen but we tried

32
00:01:23,360 --> 00:01:28,799
to avoid this and of course give good

33
00:01:25,600 --> 00:01:31,759
reasons for why we're doing this

34
00:01:28,799 --> 00:01:33,280
so first of all like at the moment when

35
00:01:31,759 --> 00:01:35,680
you're trying to search for

36
00:01:33,280 --> 00:01:36,560
geospatial data then you're probably

37
00:01:35,680 --> 00:01:39,439
getting

38
00:01:36,560 --> 00:01:40,159
uh to view any of these portals that are

39
00:01:39,439 --> 00:01:42,798
out there

40
00:01:40,159 --> 00:01:44,399
like dozens of portals where you can

41
00:01:42,799 --> 00:01:46,560
download your data like it

42
00:01:44,399 --> 00:01:48,240
copernicus open access up for sentinel

43
00:01:46,560 --> 00:01:52,240
data or the nasa

44
00:01:48,240 --> 00:01:54,079
uh cmr and so on and so on but

45
00:01:52,240 --> 00:01:56,479
of course to find your data you need to

46
00:01:54,079 --> 00:01:58,559
know all these portals right so

47
00:01:56,479 --> 00:02:00,320
otherwise you won't be able to find the

48
00:01:58,560 --> 00:02:03,759
data anyway and

49
00:02:00,320 --> 00:02:06,158
um we could also like go and

50
00:02:03,759 --> 00:02:06,960
see whether there is something like an

51
00:02:06,159 --> 00:02:09,039
uh

52
00:02:06,960 --> 00:02:10,000
dictionary where everybody puts in his

53
00:02:09,038 --> 00:02:13,359
data

54
00:02:10,000 --> 00:02:15,599
but or like in like a person that like

55
00:02:13,360 --> 00:02:17,599
uh views all over the data and puts

56
00:02:15,599 --> 00:02:19,599
together a dictionary about them

57
00:02:17,599 --> 00:02:21,359
but then we already realized that there

58
00:02:19,599 --> 00:02:23,200
is too much data out there like

59
00:02:21,360 --> 00:02:25,680
yahoo is not a thing anymore where

60
00:02:23,200 --> 00:02:28,560
people uh looked at the data and put

61
00:02:25,680 --> 00:02:29,280
into everything into a dictionary so um

62
00:02:28,560 --> 00:02:31,280
we now have

63
00:02:29,280 --> 00:02:32,959
crawlers like for google for example

64
00:02:31,280 --> 00:02:33,680
where everything is in one place and you

65
00:02:32,959 --> 00:02:36,400
can just

66
00:02:33,680 --> 00:02:36,800
visit google and find everything so we

67
00:02:36,400 --> 00:02:38,959
think

68
00:02:36,800 --> 00:02:39,920
finding things via google or any other

69
00:02:38,959 --> 00:02:42,160
search engine

70
00:02:39,920 --> 00:02:45,040
is better than going through all of

71
00:02:42,160 --> 00:02:47,680
these portals to find data

72
00:02:45,040 --> 00:02:48,480
and of course like there is going on so

73
00:02:47,680 --> 00:02:50,800
much

74
00:02:48,480 --> 00:02:52,160
satellites at the moment that there are

75
00:02:50,800 --> 00:02:54,160
petabytes of data and

76
00:02:52,160 --> 00:02:55,519
you just need good tools to find all the

77
00:02:54,160 --> 00:02:58,480
data

78
00:02:55,519 --> 00:03:01,680
so for example if you're going through

79
00:02:58,480 --> 00:03:04,959
looking into sentinel data then you get

80
00:03:01,680 --> 00:03:07,519
this from esa where it says if you just

81
00:03:04,959 --> 00:03:08,879
want a single granule a single tile then

82
00:03:07,519 --> 00:03:11,920
you get all this data

83
00:03:08,879 --> 00:03:14,239
and what you really want in the end is

84
00:03:11,920 --> 00:03:16,958
just maybe the metadata and the actual

85
00:03:14,239 --> 00:03:18,000
data file right so that's just these two

86
00:03:16,959 --> 00:03:21,920
things and this whole

87
00:03:18,000 --> 00:03:21,920
bunch of information that you get

88
00:03:23,440 --> 00:03:28,400
and then you have to look through all

89
00:03:26,799 --> 00:03:30,159
these files like if you have central to

90
00:03:28,400 --> 00:03:32,480
metadata xml files it's

91
00:03:30,159 --> 00:03:33,519
20 megabytes of xml that you need to go

92
00:03:32,480 --> 00:03:37,200
through

93
00:03:33,519 --> 00:03:38,400
um for a stack that's only 22 kilobytes

94
00:03:37,200 --> 00:03:41,119
that you can

95
00:03:38,400 --> 00:03:41,920
as a normal user can really understand

96
00:03:41,120 --> 00:03:43,599
um

97
00:03:41,920 --> 00:03:45,359
like for example for comparison the

98
00:03:43,599 --> 00:03:48,079
plaintext bible is just

99
00:03:45,360 --> 00:03:50,799
000 kilobytes so that's quite a lot to

100
00:03:48,080 --> 00:03:53,200
read if you want to understand the data

101
00:03:50,799 --> 00:03:54,000
um and you even i need to find some kind

102
00:03:53,200 --> 00:03:56,720
of like

103
00:03:54,000 --> 00:03:57,280
documentation how this all works and

104
00:03:56,720 --> 00:03:59,200
what it

105
00:03:57,280 --> 00:04:01,040
actually is the data that you're finding

106
00:03:59,200 --> 00:04:04,640
that is metadata

107
00:04:01,040 --> 00:04:06,480
so while you're doing this now

108
00:04:04,640 --> 00:04:08,399
there are so many standards and proper

109
00:04:06,480 --> 00:04:10,399
solutions also for apis that you can

110
00:04:08,400 --> 00:04:11,760
like the portals

111
00:04:10,400 --> 00:04:14,480
with very similar scopes and

112
00:04:11,760 --> 00:04:15,120
capabilities but it would be a good idea

113
00:04:14,480 --> 00:04:17,599
to

114
00:04:15,120 --> 00:04:19,440
basically unify them and make them

115
00:04:17,600 --> 00:04:21,680
interoperable so that

116
00:04:19,440 --> 00:04:23,680
a client can access all these apis and

117
00:04:21,680 --> 00:04:26,000
all these data

118
00:04:23,680 --> 00:04:27,680
that's a barrier for adoption and so we

119
00:04:26,000 --> 00:04:28,240
thought about stack could be a good idea

120
00:04:27,680 --> 00:04:31,360
to

121
00:04:28,240 --> 00:04:33,199
evolve um so what

122
00:04:31,360 --> 00:04:34,960
is stack actually it's basically

123
00:04:33,199 --> 00:04:37,360
defining a meta data

124
00:04:34,960 --> 00:04:38,000
standard for or specification it's not a

125
00:04:37,360 --> 00:04:39,919
standard

126
00:04:38,000 --> 00:04:43,199
because they're not like working for a

127
00:04:39,919 --> 00:04:45,198
standardization company but it's for

128
00:04:43,199 --> 00:04:46,400
just a specification of what we think is

129
00:04:45,199 --> 00:04:49,680
useful

130
00:04:46,400 --> 00:04:51,919
for geospatial catalogs and assets with

131
00:04:49,680 --> 00:04:53,520
focus on search and discovery so in most

132
00:04:51,919 --> 00:04:54,880
cases you won't find any information how

133
00:04:53,520 --> 00:04:56,799
to process the data

134
00:04:54,880 --> 00:04:59,280
that you can still link from stack to

135
00:04:56,800 --> 00:05:02,800
the original metadata for processing

136
00:04:59,280 --> 00:05:06,719
but to actually first find and

137
00:05:02,800 --> 00:05:10,000
discover the data you can use stack so

138
00:05:06,720 --> 00:05:13,360
it's very simple it's json based so

139
00:05:10,000 --> 00:05:14,320
most people can really read json as it's

140
00:05:13,360 --> 00:05:17,680
just

141
00:05:14,320 --> 00:05:19,919
a very thin layer on top of the metadata

142
00:05:17,680 --> 00:05:20,880
and it's extensible so you don't need to

143
00:05:19,919 --> 00:05:23,120
write any like

144
00:05:20,880 --> 00:05:25,440
for example for previous things when you

145
00:05:23,120 --> 00:05:27,280
had xml you needed to write an xsd

146
00:05:25,440 --> 00:05:28,160
schema and adopt it so you can add

147
00:05:27,280 --> 00:05:30,000
things

148
00:05:28,160 --> 00:05:31,919
but now it's just json where you can put

149
00:05:30,000 --> 00:05:33,919
your own things into that

150
00:05:31,919 --> 00:05:36,080
in addition to what we have standardized

151
00:05:33,919 --> 00:05:38,000
already

152
00:05:36,080 --> 00:05:40,000
also a different thing from other

153
00:05:38,000 --> 00:05:42,720
previous standards is that you have

154
00:05:40,000 --> 00:05:44,000
also a static catalog that you can draw

155
00:05:42,720 --> 00:05:46,479
so

156
00:05:44,000 --> 00:05:47,440
you can basically put your metadata

157
00:05:46,479 --> 00:05:49,840
files

158
00:05:47,440 --> 00:05:51,600
together with your data or put it on top

159
00:05:49,840 --> 00:05:53,280
of that like if you have exposed central

160
00:05:51,600 --> 00:05:55,840
data for example in an

161
00:05:53,280 --> 00:05:56,638
s3 storage bucket you can open another s

162
00:05:55,840 --> 00:06:00,159
restored

163
00:05:56,639 --> 00:06:02,880
storage bucket with your static files

164
00:06:00,160 --> 00:06:04,240
that are conformant to stack and then

165
00:06:02,880 --> 00:06:06,960
you can crawl through all these

166
00:06:04,240 --> 00:06:08,160
metadata files they are linked together

167
00:06:06,960 --> 00:06:10,880
with links

168
00:06:08,160 --> 00:06:12,080
and it's such that you don't need a

169
00:06:10,880 --> 00:06:14,080
server to run it you

170
00:06:12,080 --> 00:06:15,599
just can put it on your like file

171
00:06:14,080 --> 00:06:17,359
storage and then it's there and

172
00:06:15,600 --> 00:06:19,440
google can make use of it you don't need

173
00:06:17,360 --> 00:06:21,360
to write any software for that or

174
00:06:19,440 --> 00:06:23,039
something like that

175
00:06:21,360 --> 00:06:26,000
um that's the static catalogs and then

176
00:06:23,039 --> 00:06:28,400
there is dynamic apis of course as well

177
00:06:26,000 --> 00:06:29,520
because if there is like thousands and

178
00:06:28,400 --> 00:06:31,440
thousands of files

179
00:06:29,520 --> 00:06:33,359
you probably need to put them into the

180
00:06:31,440 --> 00:06:34,639
database and index them so that you can

181
00:06:33,360 --> 00:06:37,600
better search for them

182
00:06:34,639 --> 00:06:38,080
so we also expose an api which is based

183
00:06:37,600 --> 00:06:41,520
on

184
00:06:38,080 --> 00:06:43,840
the recent version of ogc api features

185
00:06:41,520 --> 00:06:46,479
the former wfs web feature servers from

186
00:06:43,840 --> 00:06:46,479
the ogc

187
00:06:46,560 --> 00:06:49,680
and we just put a thin layer on top of

188
00:06:48,720 --> 00:06:53,599
this standard

189
00:06:49,680 --> 00:06:55,120
um to make it uh searchable and

190
00:06:53,599 --> 00:06:56,960
it's an open specification of course

191
00:06:55,120 --> 00:07:00,800
that's why we're here open source um

192
00:06:56,960 --> 00:07:04,159
everybody can contribute um

193
00:07:00,800 --> 00:07:05,360
and so what is it not um it's not a

194
00:07:04,160 --> 00:07:07,280
full-fledged metastatin

195
00:07:05,360 --> 00:07:09,440
as i said it's not for processing stuff

196
00:07:07,280 --> 00:07:10,559
or so it's basically really focusing on

197
00:07:09,440 --> 00:07:12,800
search and discovery

198
00:07:10,560 --> 00:07:14,479
although you can if you want put your

199
00:07:12,800 --> 00:07:17,759
processing information into that

200
00:07:14,479 --> 00:07:19,599
it's extensible so

201
00:07:17,759 --> 00:07:21,599
also it's not a replacement for the data

202
00:07:19,599 --> 00:07:26,400
providers internal metadata

203
00:07:21,599 --> 00:07:29,680
um so you can basically from your

204
00:07:26,400 --> 00:07:31,520
item file you can link to your x

205
00:07:29,680 --> 00:07:34,319
other metadata or other files that you

206
00:07:31,520 --> 00:07:37,520
have previews and stuff like that

207
00:07:34,319 --> 00:07:39,840
um it's not the single source of truth

208
00:07:37,520 --> 00:07:42,080
in this case

209
00:07:39,840 --> 00:07:44,560
and it's also not for all kinds of data

210
00:07:42,080 --> 00:07:47,599
sets so it's just for spatial temporal

211
00:07:44,560 --> 00:07:49,759
um and you don't really can expose

212
00:07:47,599 --> 00:07:51,520
things like additional document like you

213
00:07:49,759 --> 00:07:52,720
can link to additional documents but

214
00:07:51,520 --> 00:07:55,039
it's not meant for

215
00:07:52,720 --> 00:07:58,319
like putting other things in spatial

216
00:07:55,039 --> 00:08:00,000
temporal data into your stack catalog

217
00:07:58,319 --> 00:08:01,680
so and as such it's also not a

218
00:08:00,000 --> 00:08:03,520
replacement for iso standards for

219
00:08:01,680 --> 00:08:04,960
example and stuff like that or you see

220
00:08:03,520 --> 00:08:08,080
csw

221
00:08:04,960 --> 00:08:11,280
there is a recent innovation planned for

222
00:08:08,080 --> 00:08:13,840
ogc catalogs or records

223
00:08:11,280 --> 00:08:14,799
which is also a new api and we try to

224
00:08:13,840 --> 00:08:17,599
align also with

225
00:08:14,800 --> 00:08:17,599
less effort

226
00:08:17,919 --> 00:08:21,599
so what's the state of stack at the

227
00:08:19,280 --> 00:08:24,719
moment um at the moment we're at

228
00:08:21,599 --> 00:08:27,919
version 0.9 just released

229
00:08:24,720 --> 00:08:30,240
some days ago and we're heading towards

230
00:08:27,919 --> 00:08:30,719
releasing the first stable version 1.0

231
00:08:30,240 --> 00:08:34,479
in

232
00:08:30,720 --> 00:08:39,120
mid like third or

233
00:08:34,479 --> 00:08:39,120
fourth quarter of the this year

234
00:08:39,599 --> 00:08:44,320
and there is also plans to separate the

235
00:08:42,320 --> 00:08:48,000
actual specification work for the

236
00:08:44,320 --> 00:08:50,240
metadata and the api in the next weeks

237
00:08:48,000 --> 00:08:53,040
so that they are more streamlined

238
00:08:50,240 --> 00:08:54,880
towards their use cases

239
00:08:53,040 --> 00:08:56,480
um so what is this specification

240
00:08:54,880 --> 00:08:59,040
actually about what do we expose there

241
00:08:56,480 --> 00:09:02,560
so there's first there are catalogs

242
00:08:59,040 --> 00:09:04,319
collections items the api and extensions

243
00:09:02,560 --> 00:09:07,760
and best practices so what

244
00:09:04,320 --> 00:09:11,040
is all this about a catalog

245
00:09:07,760 --> 00:09:13,680
is basically a very rough uh

246
00:09:11,040 --> 00:09:14,240
or very small thing for cataloging you

247
00:09:13,680 --> 00:09:17,439
can

248
00:09:14,240 --> 00:09:19,519
group your collections and items with it

249
00:09:17,440 --> 00:09:21,200
um it's very simple it's like basically

250
00:09:19,519 --> 00:09:23,360
just an id a description and

251
00:09:21,200 --> 00:09:24,560
additional links to whatever you want to

252
00:09:23,360 --> 00:09:26,640
group

253
00:09:24,560 --> 00:09:29,279
and then a collection is basically an

254
00:09:26,640 --> 00:09:32,399
addition of a catalog

255
00:09:29,279 --> 00:09:35,279
it extends it and adds collection level

256
00:09:32,399 --> 00:09:38,800
metadata to it for example the extend

257
00:09:35,279 --> 00:09:41,360
spatial and temporal license

258
00:09:38,800 --> 00:09:41,359
provider

259
00:09:42,320 --> 00:09:46,399
and all these things that you have like

260
00:09:44,160 --> 00:09:49,120
for for example if you want to expose

261
00:09:46,399 --> 00:09:51,279
sentinel data you want to talk that

262
00:09:49,120 --> 00:09:53,120
about what the sentinel data actually is

263
00:09:51,279 --> 00:09:53,439
like that which platform it is using

264
00:09:53,120 --> 00:09:57,120
which

265
00:09:53,440 --> 00:09:58,720
uh um temporal coverage it has a spatial

266
00:09:57,120 --> 00:10:00,320
coverage says which license where you

267
00:09:58,720 --> 00:10:04,640
can find licensing information who's a

268
00:10:00,320 --> 00:10:07,760
provider and so on and so on um

269
00:10:04,640 --> 00:10:09,600
then um

270
00:10:07,760 --> 00:10:11,120
this can be used standalone so if you

271
00:10:09,600 --> 00:10:14,480
don't expose any

272
00:10:11,120 --> 00:10:16,160
assets granules whatever you can only

273
00:10:14,480 --> 00:10:17,519
use it to expose your collections as

274
00:10:16,160 --> 00:10:18,880
well like for example google earth

275
00:10:17,519 --> 00:10:20,800
engine if you know that

276
00:10:18,880 --> 00:10:22,640
um just expose their collections and

277
00:10:20,800 --> 00:10:25,599
then you need to use their tools to

278
00:10:22,640 --> 00:10:27,439
actually use this data so uh you can

279
00:10:25,600 --> 00:10:29,040
find this data as collection then

280
00:10:27,440 --> 00:10:31,760
but then it tells you that you need to

281
00:10:29,040 --> 00:10:32,240
use your tools so if there is data also

282
00:10:31,760 --> 00:10:35,200
which you

283
00:10:32,240 --> 00:10:36,720
can't download in the traditional sense

284
00:10:35,200 --> 00:10:39,120
then you can at least use it in

285
00:10:36,720 --> 00:10:40,240
any cloud provider um that is out there

286
00:10:39,120 --> 00:10:43,440
and just exposes

287
00:10:40,240 --> 00:10:44,959
it as stack collection and collections

288
00:10:43,440 --> 00:10:45,760
are also useful for summarizing the

289
00:10:44,959 --> 00:10:48,959
actual

290
00:10:45,760 --> 00:10:51,279
item data that is exposed and

291
00:10:48,959 --> 00:10:52,479
items itself are the actual granules so

292
00:10:51,279 --> 00:10:55,760
the

293
00:10:52,480 --> 00:10:57,279
individual tiles and items are basically

294
00:10:55,760 --> 00:11:01,519
geojson features

295
00:10:57,279 --> 00:11:04,959
so the feature is basically then the

296
00:11:01,519 --> 00:11:07,519
geometry of the asset that is exposed

297
00:11:04,959 --> 00:11:08,239
and an asset for example in an item

298
00:11:07,519 --> 00:11:10,320
could be

299
00:11:08,240 --> 00:11:13,440
the file for band 1 and then another

300
00:11:10,320 --> 00:11:15,279
asset is band 2 and so on and so on

301
00:11:13,440 --> 00:11:17,040
and all these assets can then be

302
00:11:15,279 --> 00:11:19,200
downloaded

303
00:11:17,040 --> 00:11:20,319
and provided with additional links like

304
00:11:19,200 --> 00:11:24,160
for example the

305
00:11:20,320 --> 00:11:27,519
uh the provider-specific metadata

306
00:11:24,160 --> 00:11:29,600
in iso format or whatever and

307
00:11:27,519 --> 00:11:30,800
this actually is very nice if you um

308
00:11:29,600 --> 00:11:32,560
combine it with

309
00:11:30,800 --> 00:11:35,920
cloud optimized geotiffs so if you can

310
00:11:32,560 --> 00:11:38,239
see here i'm not sure whether yeah that

311
00:11:35,920 --> 00:11:39,839
it's basically just a browser that is

312
00:11:38,240 --> 00:11:42,480
working on a geotiff uh

313
00:11:39,839 --> 00:11:44,800
yeah on the cloud optimized geotiff and

314
00:11:42,480 --> 00:11:47,519
cloud optimized youtube is basically

315
00:11:44,800 --> 00:11:48,479
a geotiff that is bit different uh

316
00:11:47,519 --> 00:11:51,360
structured

317
00:11:48,480 --> 00:11:54,399
and with http get requests range

318
00:11:51,360 --> 00:11:57,279
requests you can basically

319
00:11:54,399 --> 00:11:58,880
without any like server software you can

320
00:11:57,279 --> 00:12:02,000
browse it on a map so

321
00:11:58,880 --> 00:12:05,279
for example this is i think leaflet and

322
00:12:02,000 --> 00:12:06,000
um if you can see it if it zooms out

323
00:12:05,279 --> 00:12:09,040
then

324
00:12:06,000 --> 00:12:09,680
basically if you zoom in now it loads

325
00:12:09,040 --> 00:12:11,279
the data

326
00:12:09,680 --> 00:12:13,519
just the data it needs so that there

327
00:12:11,279 --> 00:12:16,399
could be a 500 megabyte file

328
00:12:13,519 --> 00:12:18,160
um behind that and it just downloads the

329
00:12:16,399 --> 00:12:19,920
things you see here so that's

330
00:12:18,160 --> 00:12:21,360
of course pretty nice if you don't want

331
00:12:19,920 --> 00:12:22,719
to expose the wms

332
00:12:21,360 --> 00:12:24,560
especially for that and you can just

333
00:12:22,720 --> 00:12:26,720
download the data that you need and

334
00:12:24,560 --> 00:12:30,160
ex view it while discovering it whether

335
00:12:26,720 --> 00:12:33,920
it contains the data you need or not

336
00:12:30,160 --> 00:12:35,920
um the api itself is as i said aligned

337
00:12:33,920 --> 00:12:38,000
with ogc api features

338
00:12:35,920 --> 00:12:40,079
it's pretty simple i think there is a

339
00:12:38,000 --> 00:12:42,000
landing page where with capabilities

340
00:12:40,079 --> 00:12:43,279
um there is collections that you can

341
00:12:42,000 --> 00:12:44,880
actually expose

342
00:12:43,279 --> 00:12:47,519
for example that would be second central

343
00:12:44,880 --> 00:12:50,000
too and then the items

344
00:12:47,519 --> 00:12:52,800
would be each granule that you can

345
00:12:50,000 --> 00:12:54,560
download here as data and then there is

346
00:12:52,800 --> 00:12:55,839
uh the stack specific search endpoints

347
00:12:54,560 --> 00:12:57,518
where you can basically search for

348
00:12:55,839 --> 00:13:00,800
whatever is in the files like

349
00:12:57,519 --> 00:13:03,360
whether the cloud cover or um

350
00:13:00,800 --> 00:13:07,359
the extend or the provider or the

351
00:13:03,360 --> 00:13:09,200
license and so on

352
00:13:07,360 --> 00:13:10,959
that's defined as open api documents so

353
00:13:09,200 --> 00:13:13,200
pretty easy to use with the open api

354
00:13:10,959 --> 00:13:16,719
ecosystem as well to implement

355
00:13:13,200 --> 00:13:18,560
um and then we have basically four items

356
00:13:16,720 --> 00:13:23,200
the metadata fields are very slim like

357
00:13:18,560 --> 00:13:25,599
there is title and extends and

358
00:13:23,200 --> 00:13:27,279
there you can specify some things like

359
00:13:25,600 --> 00:13:28,399
when the metadata has been created or

360
00:13:27,279 --> 00:13:31,920
updated

361
00:13:28,399 --> 00:13:33,680
um but then basically this thing

362
00:13:31,920 --> 00:13:35,599
is in the core is very slim and then you

363
00:13:33,680 --> 00:13:36,880
extend it with extensions

364
00:13:35,600 --> 00:13:39,040
so for example for content we have

365
00:13:36,880 --> 00:13:42,160
extensions for um

366
00:13:39,040 --> 00:13:42,480
describing data cubes for eo data which

367
00:13:42,160 --> 00:13:45,439
is

368
00:13:42,480 --> 00:13:46,800
in this case electro optical then for

369
00:13:45,440 --> 00:13:49,760
machine learning

370
00:13:46,800 --> 00:13:50,639
to specify the labels uh point cloud

371
00:13:49,760 --> 00:13:53,439
data for

372
00:13:50,639 --> 00:13:55,199
sar data then we have a specific one for

373
00:13:53,440 --> 00:13:57,839
satellite data which is basically

374
00:13:55,199 --> 00:13:59,439
inherited from eo and sar and for

375
00:13:57,839 --> 00:14:02,320
scientific data like

376
00:13:59,440 --> 00:14:04,160
exposing dois and stuff like that and

377
00:14:02,320 --> 00:14:06,079
then for the api of course this is

378
00:14:04,160 --> 00:14:08,000
also in the core very slim and then you

379
00:14:06,079 --> 00:14:08,638
can extend it via fields for example

380
00:14:08,000 --> 00:14:11,040
that

381
00:14:08,639 --> 00:14:12,880
you can say i don't only want to a

382
00:14:11,040 --> 00:14:13,519
certain set of fields in my response so

383
00:14:12,880 --> 00:14:16,320
that it gets

384
00:14:13,519 --> 00:14:17,839
smaller you can query it via some

385
00:14:16,320 --> 00:14:21,120
specifics

386
00:14:17,839 --> 00:14:22,320
you can sort it um and there is

387
00:14:21,120 --> 00:14:24,240
transaction

388
00:14:22,320 --> 00:14:26,000
extension to basically add and remove

389
00:14:24,240 --> 00:14:28,560
fields and update fields uh

390
00:14:26,000 --> 00:14:30,079
items and stuff like that and of course

391
00:14:28,560 --> 00:14:31,439
also for versioning if there is like

392
00:14:30,079 --> 00:14:31,839
different versions of assets then you

393
00:14:31,440 --> 00:14:34,959
can

394
00:14:31,839 --> 00:14:37,440
version that um

395
00:14:34,959 --> 00:14:39,040
there is a growing ecosystem behind

396
00:14:37,440 --> 00:14:41,040
stack

397
00:14:39,040 --> 00:14:42,959
you have for example already validator

398
00:14:41,040 --> 00:14:44,880
where you can just put your catalog into

399
00:14:42,959 --> 00:14:47,040
it and it validates it whether it's

400
00:14:44,880 --> 00:14:48,800
okay and according to the stack then

401
00:14:47,040 --> 00:14:52,079
there is an extension for intake

402
00:14:48,800 --> 00:14:55,599
i don't know intake but it was said

403
00:14:52,079 --> 00:14:56,479
so it's a big thing oops in the python

404
00:14:55,600 --> 00:14:58,639
world

405
00:14:56,480 --> 00:15:00,480
and then there is pi stack for catalog

406
00:14:58,639 --> 00:15:03,600
creation and all work

407
00:15:00,480 --> 00:15:08,240
with stack catalogs

408
00:15:03,600 --> 00:15:08,240
and similarly works set stack

409
00:15:08,320 --> 00:15:11,680
then there is a number of clients for

410
00:15:10,079 --> 00:15:12,079
example stack browser which you already

411
00:15:11,680 --> 00:15:16,239
saw

412
00:15:12,079 --> 00:15:19,199
when we had this cloud optimized youtube

413
00:15:16,240 --> 00:15:20,560
preview there this is basically a human

414
00:15:19,199 --> 00:15:24,000
readable version

415
00:15:20,560 --> 00:15:26,609
for the catalog for the json files

416
00:15:24,000 --> 00:15:27,839
which also expose for example schema.org

417
00:15:26,610 --> 00:15:30,000
[Music]

418
00:15:27,839 --> 00:15:32,000
translations so that they can be crawled

419
00:15:30,000 --> 00:15:33,199
by google and their new google data set

420
00:15:32,000 --> 00:15:36,000
search

421
00:15:33,199 --> 00:15:37,758
um there is a qgis plugin the set search

422
00:15:36,000 --> 00:15:38,880
for searching data there's set fetch for

423
00:15:37,759 --> 00:15:40,800
fetching the data

424
00:15:38,880 --> 00:15:42,480
or downloading the data and then there

425
00:15:40,800 --> 00:15:44,880
is set api browser which is

426
00:15:42,480 --> 00:15:46,480
basically um so stack browser was more

427
00:15:44,880 --> 00:15:49,199
for the

428
00:15:46,480 --> 00:15:51,360
for the static catalogs and set api

429
00:15:49,199 --> 00:15:53,199
browsers more for the api

430
00:15:51,360 --> 00:15:57,120
part because there you can also search

431
00:15:53,199 --> 00:15:57,120
and stack his browsers just for like

432
00:15:57,360 --> 00:16:00,639
going through the links that are in the

433
00:15:58,639 --> 00:16:02,320
data

434
00:16:00,639 --> 00:16:03,920
then there is a couple of server

435
00:16:02,320 --> 00:16:06,079
implementations which you can use to

436
00:16:03,920 --> 00:16:07,360
expose your data for example staccato in

437
00:16:06,079 --> 00:16:10,160
java

438
00:16:07,360 --> 00:16:11,720
stack api which is i think a node.js

439
00:16:10,160 --> 00:16:13,759
application and set api

440
00:16:11,720 --> 00:16:15,920
postgresql which is basically i think

441
00:16:13,759 --> 00:16:17,199
python with the postgres database behind

442
00:16:15,920 --> 00:16:20,479
it

443
00:16:17,199 --> 00:16:21,279
and this for example is a qgis plugin

444
00:16:20,480 --> 00:16:25,279
where you can

445
00:16:21,279 --> 00:16:28,160
basically just specify your um required

446
00:16:25,279 --> 00:16:28,480
parameters and then it searches for data

447
00:16:28,160 --> 00:16:30,399
and

448
00:16:28,480 --> 00:16:33,360
basically loads the data directly as

449
00:16:30,399 --> 00:16:36,720
cloud optimized durative into your qgis

450
00:16:33,360 --> 00:16:38,560
instance to work with

451
00:16:36,720 --> 00:16:40,639
and then you can as it's a cloud

452
00:16:38,560 --> 00:16:42,560
optimized youtube also directly uh

453
00:16:40,639 --> 00:16:44,560
zoom into that and it loads it properly

454
00:16:42,560 --> 00:16:48,160
data and so on

455
00:16:44,560 --> 00:16:51,680
um it we're working on

456
00:16:48,160 --> 00:16:54,240
basically making several catalogs

457
00:16:51,680 --> 00:16:56,319
available openly available at the moment

458
00:16:54,240 --> 00:16:59,519
there are central one and two

459
00:16:56,320 --> 00:17:02,639
landsat 8 and usgs landsat collection 2

460
00:16:59,519 --> 00:17:05,679
is directly offered as stack and

461
00:17:02,639 --> 00:17:06,799
catalogs from usgs there's cbrs4 which

462
00:17:05,679 --> 00:17:10,880
is a chinese brazil

463
00:17:06,799 --> 00:17:14,400
satellite for earth observation naap

464
00:17:10,880 --> 00:17:16,000
nasa cmr is also translated into stack

465
00:17:14,400 --> 00:17:18,959
and there are a couple of more things

466
00:17:16,000 --> 00:17:20,799
that are coming and are in preparation

467
00:17:18,959 --> 00:17:22,559
and maybe in the future also your data

468
00:17:20,799 --> 00:17:25,599
it's pretty simple to expose such

469
00:17:22,559 --> 00:17:27,359
things so um if you have data that one

470
00:17:25,599 --> 00:17:31,360
you want to be found then it's a good

471
00:17:27,359 --> 00:17:32,719
idea i think to expose the stack catalog

472
00:17:31,360 --> 00:17:34,559
here's an overview who is already

473
00:17:32,720 --> 00:17:35,919
exposing their data a stack and working

474
00:17:34,559 --> 00:17:40,240
with stack

475
00:17:35,919 --> 00:17:40,240
quite a number of entities

476
00:17:40,640 --> 00:17:49,120
and now i maybe just show you a single

477
00:17:45,440 --> 00:17:52,880
example here like for example this one

478
00:17:49,120 --> 00:17:55,918
is the is a catalog so um

479
00:17:52,880 --> 00:17:57,360
it basically just is json you can i

480
00:17:55,919 --> 00:18:00,799
guess most of you can read what

481
00:17:57,360 --> 00:18:02,879
is in there and it's basically uh gives

482
00:18:00,799 --> 00:18:04,480
you an idea it's copernicus two here and

483
00:18:02,880 --> 00:18:07,200
then a title a description

484
00:18:04,480 --> 00:18:08,000
what is it it is about a license

485
00:18:07,200 --> 00:18:10,240
keywords

486
00:18:08,000 --> 00:18:11,760
provider information the extent

487
00:18:10,240 --> 00:18:14,400
information tempo and

488
00:18:11,760 --> 00:18:15,840
in all the other summary data that is

489
00:18:14,400 --> 00:18:18,160
like for example the

490
00:18:15,840 --> 00:18:21,039
how to site what the ground sampling

491
00:18:18,160 --> 00:18:24,480
distance for the individual things is

492
00:18:21,039 --> 00:18:27,360
the constellation platform names um

493
00:18:24,480 --> 00:18:29,200
projection information the bands for

494
00:18:27,360 --> 00:18:30,959
example which bands are in the

495
00:18:29,200 --> 00:18:33,120
actual assets that you can download band

496
00:18:30,960 --> 00:18:36,320
1 band 2 and so on

497
00:18:33,120 --> 00:18:36,959
common names wavelengths and the links

498
00:18:36,320 --> 00:18:40,960
that you can

499
00:18:36,960 --> 00:18:42,559
basically visit to get more information

500
00:18:40,960 --> 00:18:44,080
and that's a collection and now you can

501
00:18:42,559 --> 00:18:46,960
basically also look at the

502
00:18:44,080 --> 00:18:48,320
items which is then an individual

503
00:18:46,960 --> 00:18:51,919
granule

504
00:18:48,320 --> 00:18:54,000
it says for example which id it has

505
00:18:51,919 --> 00:18:55,520
which collection it belongs to and there

506
00:18:54,000 --> 00:18:57,760
is again links

507
00:18:55,520 --> 00:18:59,600
to get additional information the

508
00:18:57,760 --> 00:19:03,600
bounding box of the granule

509
00:18:59,600 --> 00:19:05,199
geometry assets that you can download

510
00:19:03,600 --> 00:19:08,879
basically now

511
00:19:05,200 --> 00:19:12,240
which is json files or the jpeg 2000

512
00:19:08,880 --> 00:19:15,520
either thumbnail or the actual data

513
00:19:12,240 --> 00:19:17,520
and is there anything else in here

514
00:19:15,520 --> 00:19:19,840
yeah some additional properties like

515
00:19:17,520 --> 00:19:24,240
cloud cover values

516
00:19:19,840 --> 00:19:27,120
and so on so that's how it's working

517
00:19:24,240 --> 00:19:29,919
and yeah i'm happy to take your

518
00:19:27,120 --> 00:19:31,600
questions if there are any

519
00:19:29,919 --> 00:19:34,080
thank you very much for listening to

520
00:19:31,600 --> 00:19:34,080
this talk

521
00:19:37,280 --> 00:19:39,840
thank you

