1
00:00:08,160 --> 00:00:12,730
okay guys welcome

2
00:00:11,210 --> 00:00:15,150
to the security

3
00:00:12,730 --> 00:00:17,939
don't talk about application

4
00:00:15,150 --> 00:00:31,640
think in Linux environment by Darwin

5
00:00:17,939 --> 00:00:35,910
Sokka hello my name is software engineer

6
00:00:31,640 --> 00:00:39,480
and I'm very excited to be here as a

7
00:00:35,910 --> 00:00:41,819
speaker and as a developer so let's talk

8
00:00:39,480 --> 00:00:45,199
about application whitelisting what is

9
00:00:41,820 --> 00:00:49,260
an application always think well it is

10
00:00:45,199 --> 00:00:52,190
security practice where the application

11
00:00:49,260 --> 00:00:56,190
for the software software itself it's

12
00:00:52,190 --> 00:01:02,339
able to run according to its presence on

13
00:00:56,190 --> 00:01:04,679
the waste and usually administrative

14
00:01:02,339 --> 00:01:07,830
administrator is responsible for

15
00:01:04,680 --> 00:01:10,380
maintaining maintaining such a list so

16
00:01:07,830 --> 00:01:11,840
it's his choice what will be on this

17
00:01:10,380 --> 00:01:16,890
list

18
00:01:11,840 --> 00:01:19,860
why is it so much so important well it

19
00:01:16,890 --> 00:01:23,670
adds another level of security to the

20
00:01:19,860 --> 00:01:26,480
system and application while distinct

21
00:01:23,670 --> 00:01:29,790
capability is a part of the many

22
00:01:26,480 --> 00:01:35,400
certification schemes such as Common

23
00:01:29,790 --> 00:01:37,170
Criteria and many others this basically

24
00:01:35,400 --> 00:01:41,240
pushes software lenders to implements

25
00:01:37,170 --> 00:01:45,420
some sort of application one distinction

26
00:01:41,240 --> 00:01:50,449
so where is redheads well we introduced

27
00:01:45,420 --> 00:01:56,190
a favor ICD framework in either one

28
00:01:50,450 --> 00:02:00,930
federal twenty nine and it's a viable to

29
00:01:56,190 --> 00:02:03,960
use for everyone I have listed FA policy

30
00:02:00,930 --> 00:02:08,190
framework is very simple a white white

31
00:02:03,960 --> 00:02:10,068
with ocean and it's a benefits from rpm

32
00:02:08,190 --> 00:02:14,720
and DNF integration

33
00:02:10,068 --> 00:02:19,260
it has also audit support and it is

34
00:02:14,720 --> 00:02:21,750
build upon FA notify API a penalty PI

35
00:02:19,260 --> 00:02:24,899
API is it cannot API which is very

36
00:02:21,750 --> 00:02:26,590
similar to identify who knows I notify

37
00:02:24,900 --> 00:02:29,650
can

38
00:02:26,590 --> 00:02:32,819
watch assistant events based on system

39
00:02:29,650 --> 00:02:38,170
calls like open read Pride and closed

40
00:02:32,819 --> 00:02:43,349
but if a notify can also watch exact

41
00:02:38,170 --> 00:02:46,720
system calls and moreover it's a

42
00:02:43,349 --> 00:02:53,018
workable system system pro side that

43
00:02:46,720 --> 00:02:56,590
means that system call will be boss

44
00:02:53,019 --> 00:02:59,530
until decision has been made on the

45
00:02:56,590 --> 00:03:03,790
other side so this is very simple

46
00:02:59,530 --> 00:03:07,900
scenario how FA notified can work so we

47
00:03:03,790 --> 00:03:11,140
have two processes here the first on the

48
00:03:07,900 --> 00:03:14,620
on the left is ver which is being

49
00:03:11,140 --> 00:03:19,450
watched and if it would like to run a PS

50
00:03:14,620 --> 00:03:26,890
command standard Linux utility and this

51
00:03:19,450 --> 00:03:29,560
system pro is they'll be they'll be on

52
00:03:26,890 --> 00:03:32,108
halt execution of the system call will

53
00:03:29,560 --> 00:03:36,480
be on halt and care now they will notify

54
00:03:32,109 --> 00:03:42,190
the v1 which is the watcher in this case

55
00:03:36,480 --> 00:03:49,858
FA poison is email and it sends an event

56
00:03:42,190 --> 00:03:52,660
to this demon and the demon can see that

57
00:03:49,859 --> 00:03:56,680
something is happening on the system and

58
00:03:52,660 --> 00:03:58,989
we can see from the event that bash is

59
00:03:56,680 --> 00:04:05,650
going to execute PS command

60
00:03:58,989 --> 00:04:08,680
with such as ID and this demon has to

61
00:04:05,650 --> 00:04:11,709
decide what to do with it well it can

62
00:04:08,680 --> 00:04:16,289
send allows decision allowed that means

63
00:04:11,709 --> 00:04:22,000
that exact exact v will be eventually

64
00:04:16,289 --> 00:04:24,880
they'll eventually success on the on the

65
00:04:22,000 --> 00:04:28,560
other side it concerns it can now send

66
00:04:24,880 --> 00:04:32,280
denied and that means that exec VP will

67
00:04:28,560 --> 00:04:39,000
fail and this will be

68
00:04:32,280 --> 00:04:41,580
unable to exec PS command this is how a

69
00:04:39,000 --> 00:04:46,100
publicity framework architecture looks

70
00:04:41,580 --> 00:04:49,919
like well it has multiple backends and

71
00:04:46,100 --> 00:04:52,650
the most significant significant part of

72
00:04:49,919 --> 00:04:55,229
the project is the email itself when the

73
00:04:52,650 --> 00:05:00,090
demon it starts with wolves all data

74
00:04:55,230 --> 00:05:06,060
from backends and it saves them into

75
00:05:00,090 --> 00:05:16,710
database and then it can create some

76
00:05:06,060 --> 00:05:19,410
query to verify trust let's say so how

77
00:05:16,710 --> 00:05:22,739
can we configure it as a policy D can be

78
00:05:19,410 --> 00:05:27,830
configured in three ways the first one

79
00:05:22,740 --> 00:05:32,460
is Rose file we can find there the

80
00:05:27,830 --> 00:05:36,479
default sub set of rules like set from

81
00:05:32,460 --> 00:05:40,460
distribution the second way is conf

82
00:05:36,479 --> 00:05:43,760
configuration file for the demon you can

83
00:05:40,460 --> 00:05:50,150
tweak some performance options there

84
00:05:43,760 --> 00:05:54,539
usually and last why how to set it is a

85
00:05:50,150 --> 00:06:01,729
capacity trust file and that we can put

86
00:05:54,539 --> 00:06:01,729
a list of applications we trust actually

87
00:06:02,780 --> 00:06:10,320
so as I said before the multiple option

88
00:06:06,150 --> 00:06:13,530
option or backends right now there are

89
00:06:10,320 --> 00:06:16,440
two possibilities implemented

90
00:06:13,530 --> 00:06:19,919
the first one is RPM DB which is the

91
00:06:16,440 --> 00:06:24,900
background which loads all data all data

92
00:06:19,919 --> 00:06:28,460
from RPM data base and second one is fa

93
00:06:24,900 --> 00:06:31,380
possibly trust file which as I said

94
00:06:28,460 --> 00:06:36,419
contains the list of trusted

95
00:06:31,380 --> 00:06:38,909
applications and then application is

96
00:06:36,419 --> 00:06:41,510
trusted with the default set of rules it

97
00:06:38,910 --> 00:06:41,510
will be allowed

98
00:06:43,149 --> 00:06:51,110
so FA policy D has its own rule language

99
00:06:47,469 --> 00:06:54,349
implemented and it has subject object

100
00:06:51,110 --> 00:06:59,409
notation very similar to ISO anouk's or

101
00:06:54,349 --> 00:07:04,369
odd it and it can be divided into four

102
00:06:59,409 --> 00:07:07,938
parts the first is the decision decision

103
00:07:04,369 --> 00:07:12,259
is the action what will be taken when

104
00:07:07,939 --> 00:07:15,110
romich is and it can be allowed or

105
00:07:12,259 --> 00:07:18,849
denied we can combine it with or it so

106
00:07:15,110 --> 00:07:22,279
it's also the decision will be audited

107
00:07:18,849 --> 00:07:26,719
and we can fight the decision in other

108
00:07:22,279 --> 00:07:30,830
words the second part of the rule is

109
00:07:26,719 --> 00:07:36,430
permission permission can be open or

110
00:07:30,830 --> 00:07:40,490
execute that comes from FA notify API

111
00:07:36,430 --> 00:07:46,159
because there are two two types of

112
00:07:40,490 --> 00:07:50,569
events they're based on system call

113
00:07:46,159 --> 00:07:55,339
system calls and there is also any

114
00:07:50,569 --> 00:07:58,399
keyboard that can match any of them the

115
00:07:55,339 --> 00:08:04,579
third part of the rue is subject it's

116
00:07:58,399 --> 00:08:09,349
started before corn and it is a process

117
00:08:04,579 --> 00:08:13,069
that is running and it wants to call

118
00:08:09,349 --> 00:08:15,860
exact exact or open system call and the

119
00:08:13,069 --> 00:08:22,939
object the part after the column and

120
00:08:15,860 --> 00:08:27,979
slow is usually file that is going to be

121
00:08:22,939 --> 00:08:30,709
executing door opens we can install as a

122
00:08:27,979 --> 00:08:34,779
policy framework very easily on Fedora

123
00:08:30,709 --> 00:08:38,850
or route just this simple is that

124
00:08:34,779 --> 00:08:44,070
so let's try to run it

125
00:08:38,850 --> 00:08:47,340
then we want to let's let's imagine that

126
00:08:44,070 --> 00:08:50,400
we have some applications in home dear

127
00:08:47,340 --> 00:08:55,680
and you would like to run them even if

128
00:08:50,400 --> 00:08:57,840
they are not installed from rpm so for

129
00:08:55,680 --> 00:09:01,620
example I have in my being two

130
00:08:57,840 --> 00:09:09,200
applications for is it first is my

131
00:09:01,620 --> 00:09:13,260
binary which is which is normal usual

132
00:09:09,200 --> 00:09:18,630
compiled binary it is actually copy from

133
00:09:13,260 --> 00:09:21,660
OS command and the second is some Python

134
00:09:18,630 --> 00:09:22,140
scripts so if we run this binary it

135
00:09:21,660 --> 00:09:25,770
works

136
00:09:22,140 --> 00:09:29,340
so what start the demon when we run it

137
00:09:25,770 --> 00:09:33,660
in debug mode as a root of course when

138
00:09:29,340 --> 00:09:36,770
we saved saved our food you can try to

139
00:09:33,660 --> 00:09:41,250
run it again and it is not possible

140
00:09:36,770 --> 00:09:47,189
because this this particular application

141
00:09:41,250 --> 00:09:47,900
is not to trust it so what can we do

142
00:09:47,190 --> 00:09:50,940
about it

143
00:09:47,900 --> 00:09:54,600
now we can investigate the output of the

144
00:09:50,940 --> 00:09:58,200
OECD FAPE CD if we start looking for my

145
00:09:54,600 --> 00:10:08,780
bin we should fund find something like

146
00:09:58,200 --> 00:10:08,780
that which is which says that room line

147
00:10:10,100 --> 00:10:15,690
whose file has matched it is some

148
00:10:14,040 --> 00:10:20,339
default rule that denies everything

149
00:10:15,690 --> 00:10:24,180
let's say and it's denied this this

150
00:10:20,340 --> 00:10:28,710
event which was the chattel type execute

151
00:10:24,180 --> 00:10:37,489
and some metadata and we can see that

152
00:10:28,710 --> 00:10:41,040
the subject is show it it is that SH and

153
00:10:37,490 --> 00:10:43,320
the object is my binary so my shell

154
00:10:41,040 --> 00:10:49,469
would like to execute my binary with

155
00:10:43,320 --> 00:10:51,930
this file type as a executable so let's

156
00:10:49,470 --> 00:10:57,210
try to construct

157
00:10:51,930 --> 00:11:01,130
from that so we want to allow this event

158
00:10:57,210 --> 00:11:08,130
that has permission execute with this

159
00:11:01,130 --> 00:11:11,279
subject which is shell and we would like

160
00:11:08,130 --> 00:11:14,670
to force that shell has to be trusted

161
00:11:11,279 --> 00:11:18,899
okay that means it has to be installed

162
00:11:14,670 --> 00:11:22,949
from the from the it from the standard

163
00:11:18,899 --> 00:11:27,959
repository outside and there is my

164
00:11:22,950 --> 00:11:32,580
binary which is which is which is in

165
00:11:27,959 --> 00:11:36,329
path and it has this file tab and we

166
00:11:32,580 --> 00:11:40,800
know that it is not trusted but this is

167
00:11:36,330 --> 00:11:44,160
optional it doesn't have to be done so

168
00:11:40,800 --> 00:11:48,599
if we put this rule at the beginning of

169
00:11:44,160 --> 00:11:51,600
the raw file then we can try to run our

170
00:11:48,600 --> 00:11:57,420
binary again and we can see that it

171
00:11:51,600 --> 00:12:00,930
works what about the Python script well

172
00:11:57,420 --> 00:12:06,300
we are able to run it right now with I

173
00:12:00,930 --> 00:12:08,660
suppose the example so some words more

174
00:12:06,300 --> 00:12:13,819
off script

175
00:12:08,660 --> 00:12:17,699
if we run again the demo as before we

176
00:12:13,820 --> 00:12:23,640
can see that it is not possible to run

177
00:12:17,700 --> 00:12:26,880
it Python script so we will investigate

178
00:12:23,640 --> 00:12:30,209
again in the same approach we will grab

179
00:12:26,880 --> 00:12:34,529
for my app and we can see that there was

180
00:12:30,209 --> 00:12:37,829
an event that says actually it is very

181
00:12:34,529 --> 00:12:42,630
similar event as before it has the same

182
00:12:37,829 --> 00:12:48,109
subject the shell and but the object is

183
00:12:42,630 --> 00:12:51,660
different is now it's my app and it has

184
00:12:48,110 --> 00:12:56,250
different file tab which is application

185
00:12:51,660 --> 00:13:00,060
Python right now or text Python so if we

186
00:12:56,250 --> 00:13:03,990
construct the rule it is also very

187
00:13:00,060 --> 00:13:09,270
similar rule as before we can

188
00:13:03,990 --> 00:13:12,630
we can set trust one for subject and we

189
00:13:09,270 --> 00:13:18,050
we should be able to run this vital

190
00:13:12,630 --> 00:13:24,170
application from that Sh let's bless

191
00:13:18,050 --> 00:13:29,729
this variable to before but we are not

192
00:13:24,170 --> 00:13:31,160
able to so let's start the second round

193
00:13:29,730 --> 00:13:35,640
of investigation

194
00:13:31,160 --> 00:13:40,589
well if we grab again the output of

195
00:13:35,640 --> 00:13:43,800
Hippo ECD we regret to whines now the

196
00:13:40,590 --> 00:13:47,550
first is allowed permission execute so

197
00:13:43,800 --> 00:13:52,050
the rule we put at the beginning of the

198
00:13:47,550 --> 00:13:56,219
rules file it actually matched but there

199
00:13:52,050 --> 00:13:58,920
are there is second event that says we

200
00:13:56,220 --> 00:14:05,240
need to it needs to open this file

201
00:13:58,920 --> 00:14:05,240
actually from from from so it looks like

202
00:14:05,360 --> 00:14:14,310
shell is first or part of the execution

203
00:14:10,590 --> 00:14:19,080
or exact exact system call is also

204
00:14:14,310 --> 00:14:22,020
called open system all right so this is

205
00:14:19,080 --> 00:14:25,500
the reason why it raised itself so if we

206
00:14:22,020 --> 00:14:29,730
can you can see that these two lines are

207
00:14:25,500 --> 00:14:35,640
very similar we can use any keywords for

208
00:14:29,730 --> 00:14:40,460
permission and we can allow these two

209
00:14:35,640 --> 00:14:45,720
events with one rule if you if we again

210
00:14:40,460 --> 00:14:48,630
update our ROS ROS file and run the

211
00:14:45,720 --> 00:14:55,700
Python script now we can see that we are

212
00:14:48,630 --> 00:14:55,700
able to what's the difference between

213
00:14:55,790 --> 00:15:06,810
these two that this to base of running

214
00:15:00,180 --> 00:15:10,890
Python scripts so the on the website you

215
00:15:06,810 --> 00:15:15,800
can see that shell is opening this final

216
00:15:10,890 --> 00:15:18,750
script on but on the right side

217
00:15:15,800 --> 00:15:21,660
it looks like bitin free interpreter

218
00:15:18,750 --> 00:15:26,750
Python free interpreter is running the

219
00:15:21,660 --> 00:15:33,060
script right so if we grab for my again

220
00:15:26,750 --> 00:15:35,490
we can see that subject is different but

221
00:15:33,060 --> 00:15:41,000
we can fix this with all keywords

222
00:15:35,490 --> 00:15:48,500
instead of exact so we have rule that

223
00:15:41,000 --> 00:15:48,500
will allow any permission and with any

224
00:15:49,130 --> 00:15:57,410
subject they are trusted and again

225
00:15:54,740 --> 00:16:00,750
object is the same as before

226
00:15:57,410 --> 00:16:04,490
the second way I have to enable this

227
00:16:00,750 --> 00:16:09,030
application is to enable whole directory

228
00:16:04,490 --> 00:16:13,260
but this is not very secure right and

229
00:16:09,030 --> 00:16:16,620
the third way is the best from my point

230
00:16:13,260 --> 00:16:21,180
of view is to add these applications to

231
00:16:16,620 --> 00:16:32,160
do a family trust file as we can see on

232
00:16:21,180 --> 00:16:35,400
the image and we are able to run so if

233
00:16:32,160 --> 00:16:39,319
you are okay with our configuration we

234
00:16:35,400 --> 00:16:47,120
can just simply enable the repo CD with

235
00:16:39,320 --> 00:16:47,120
system D that's all thanks

236
00:16:52,730 --> 00:17:08,010
my question how do you prevent race

237
00:17:02,160 --> 00:17:11,549
conditions in the policy handling system

238
00:17:08,010 --> 00:17:13,260
I said especially during booth

239
00:17:11,549 --> 00:17:14,849
it might take some time before the women

240
00:17:13,260 --> 00:17:19,879
that you use in order to set up the

241
00:17:14,849 --> 00:17:23,010
policy is available it depends how you

242
00:17:19,880 --> 00:17:32,360
depends how the units file is written so

243
00:17:23,010 --> 00:17:32,360
you can start this demon very early or

244
00:17:39,080 --> 00:17:43,860
right so two questions hopefully one of

245
00:17:42,390 --> 00:17:45,360
them will be pretty short so I really

246
00:17:43,860 --> 00:17:48,780
wear of any efforts of actually getting

247
00:17:45,360 --> 00:17:51,330
find out if a policy D employed in other

248
00:17:48,780 --> 00:17:52,678
distributions are Red Hat based I mean

249
00:17:51,330 --> 00:17:54,299
it seems that apart from our PMDB

250
00:17:52,679 --> 00:18:01,320
integration it should be there's nothing

251
00:17:54,299 --> 00:18:05,220
in there that should not well I made the

252
00:18:01,320 --> 00:18:09,720
page last week you made we part P and

253
00:18:05,220 --> 00:18:12,330
optional and there is an API that can be

254
00:18:09,720 --> 00:18:17,039
easily extended to some other trust

255
00:18:12,330 --> 00:18:19,770
source so now it it is not possible you

256
00:18:17,039 --> 00:18:23,100
can use it just only with this trust

257
00:18:19,770 --> 00:18:27,570
file but you have too many you have to

258
00:18:23,100 --> 00:18:31,139
maintain it but it's not easy but you

259
00:18:27,570 --> 00:18:34,260
can implement some other source of to

260
00:18:31,140 --> 00:18:37,260
trust very easily there are I think

261
00:18:34,260 --> 00:18:40,730
three functions you have to implement in

262
00:18:37,260 --> 00:18:42,750
the sea okay second question I

263
00:18:40,730 --> 00:18:45,630
understand correctly right now this is

264
00:18:42,750 --> 00:18:48,270
very much limited to identifying files

265
00:18:45,630 --> 00:18:50,549
to allow or deny by their location which

266
00:18:48,270 --> 00:18:52,679
obviously means that if you have got

267
00:18:50,549 --> 00:18:53,490
permissions to executive files from some

268
00:18:52,679 --> 00:18:55,950
directory

269
00:18:53,490 --> 00:18:57,900
like you get from the home directory all

270
00:18:55,950 --> 00:19:00,420
the users custody just copy the file to

271
00:18:57,900 --> 00:19:02,610
a different place I suspect it might be

272
00:19:00,420 --> 00:19:04,140
a limitation of of the faint notify API

273
00:19:02,610 --> 00:19:06,120
but are there any plans to actually

274
00:19:04,140 --> 00:19:13,760
extend this to like I don't know

275
00:19:06,120 --> 00:19:22,290
integrity based based policies oh I

276
00:19:13,760 --> 00:19:25,920
think so yes we are not checking the

277
00:19:22,290 --> 00:19:28,379
integrity like we have all the hashes we

278
00:19:25,920 --> 00:19:32,220
can do that we have hashes from our p.m.

279
00:19:28,380 --> 00:19:34,679
database so theoretically it can work it

280
00:19:32,220 --> 00:19:37,980
can be imported like it's a few lines of

281
00:19:34,679 --> 00:19:43,050
code but we are not doing this right now

282
00:19:37,980 --> 00:19:46,110
because it has some perform that it has

283
00:19:43,050 --> 00:19:53,250
some performance impact right now and we

284
00:19:46,110 --> 00:19:56,939
would like to put it down so but if you

285
00:19:53,250 --> 00:20:00,660
want some real solution for that that

286
00:19:56,940 --> 00:20:04,200
will compute Oh hashes and all files so

287
00:20:00,660 --> 00:20:06,620
there is a ima but that is like so big

288
00:20:04,200 --> 00:20:06,620
overhead

289
00:20:08,150 --> 00:20:12,960
so the adding the trust just confirms

290
00:20:11,790 --> 00:20:13,950
that the package is installed and that's

291
00:20:12,960 --> 00:20:16,950
it that's the only check that's

292
00:20:13,950 --> 00:20:19,140
happening I didn't trust you I didn't

293
00:20:16,950 --> 00:20:20,670
trust one all that does is check if the

294
00:20:19,140 --> 00:20:22,920
package is installed and it's Ryan from

295
00:20:20,670 --> 00:20:25,320
that location it doesn't do any shop

296
00:20:22,920 --> 00:20:29,210
AIDS checks nothing else I just said

297
00:20:25,320 --> 00:20:29,210
that's what I'm okay

298
00:20:29,780 --> 00:20:33,379
any other question

299
00:20:43,580 --> 00:20:49,470
which system calls are you preventing

300
00:20:46,580 --> 00:20:54,899
you're also printing like P open stuff

301
00:20:49,470 --> 00:20:57,840
like that oh we are looking for like

302
00:20:54,900 --> 00:21:01,950
whole family of system calls right so

303
00:20:57,840 --> 00:21:05,189
all exact system calls or all open

304
00:21:01,950 --> 00:21:13,130
system calls like they're watched by

305
00:21:05,190 --> 00:21:13,130
this API so any other questions

306
00:21:21,930 --> 00:21:29,930
I have you considered on implementing

307
00:21:24,750 --> 00:21:33,780
this with with us Linux or epimers

308
00:21:29,930 --> 00:21:37,230
style of settings instead of doing doing

309
00:21:33,780 --> 00:21:39,629
it than you what I want to say is would

310
00:21:37,230 --> 00:21:41,670
it be possible to do exactly this with a

311
00:21:39,630 --> 00:21:43,740
CD Knox in a special setting like you do

312
00:21:41,670 --> 00:21:46,200
not have to disallow everything with

313
00:21:43,740 --> 00:21:47,940
this even it's just like a small portion

314
00:21:46,200 --> 00:21:49,140
and then allow stuff again

315
00:21:47,940 --> 00:21:54,470
or was it Oscar ready because he's

316
00:21:49,140 --> 00:21:59,940
laughing because like a common question

317
00:21:54,470 --> 00:22:02,790
well some limited scope can be

318
00:21:59,940 --> 00:22:05,550
implemented by assuming hooks but there

319
00:22:02,790 --> 00:22:07,860
is a problem with so with these light

320
00:22:05,550 --> 00:22:10,530
poles because you have to you have to

321
00:22:07,860 --> 00:22:12,899
check them like all the time and you

322
00:22:10,530 --> 00:22:19,980
have to realize that these labels are

323
00:22:12,900 --> 00:22:23,730
okay so you would technically like would

324
00:22:19,980 --> 00:22:31,050
need to loop restaurant or something

325
00:22:23,730 --> 00:22:35,220
that like all the time so we would like

326
00:22:31,050 --> 00:22:39,389
to enhance this application like this

327
00:22:35,220 --> 00:22:41,550
thing to really check hashes and content

328
00:22:39,390 --> 00:22:46,790
of the file and this is not possible

329
00:22:41,550 --> 00:22:50,639
Jesse Lewis because so exist label and

330
00:22:46,790 --> 00:22:52,909
but it doesn't it doesn't care really

331
00:22:50,640 --> 00:22:58,410
care about the content of the file or

332
00:22:52,910 --> 00:23:04,290
haechul something so one one last

333
00:22:58,410 --> 00:23:07,760
question anyone so if no thank you for

334
00:23:04,290 --> 00:23:07,760
your presentation

335
00:23:10,870 --> 00:23:12,929
you

