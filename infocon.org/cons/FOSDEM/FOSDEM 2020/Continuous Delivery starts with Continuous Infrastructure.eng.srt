1
00:00:05,200 --> 00:00:10,320
so it's 902

2
00:00:07,600 --> 00:00:11,440
and the room that nobody can find is

3
00:00:10,320 --> 00:00:14,480
full

4
00:00:11,440 --> 00:00:18,160
welcome to fosdem

5
00:00:14,480 --> 00:00:18,160
my name is chris bertat um

6
00:00:18,800 --> 00:00:22,720
i'm one of those weirdos who's been

7
00:00:20,400 --> 00:00:24,959
coming to this event for 20 years

8
00:00:22,720 --> 00:00:26,000
um which means i actually have never

9
00:00:24,960 --> 00:00:27,279
been in this side of the building

10
00:00:26,000 --> 00:00:28,240
because they only started using it this

11
00:00:27,279 --> 00:00:29,920
year

12
00:00:28,240 --> 00:00:32,558
what i do on a daily basis i help

13
00:00:29,920 --> 00:00:35,680
organizations to leverage open source to

14
00:00:32,558 --> 00:00:37,519
deploy software faster uh to actually

15
00:00:35,680 --> 00:00:40,160
achieve their business goals faster

16
00:00:37,520 --> 00:00:41,760
um somewhere about 10 years ago we

17
00:00:40,160 --> 00:00:43,519
figured out a name for that

18
00:00:41,760 --> 00:00:45,199
we called it devops since then people

19
00:00:43,520 --> 00:00:48,719
started abusing that word

20
00:00:45,200 --> 00:00:51,520
for a lot of things and in my spare time

21
00:00:48,719 --> 00:00:54,320
i organized a bunch of other conferences

22
00:00:51,520 --> 00:00:55,520
so if you want more of this fun stuff

23
00:00:54,320 --> 00:00:56,559
this is actually the only pitch i'm

24
00:00:55,520 --> 00:00:58,239
gonna do

25
00:00:56,559 --> 00:01:00,000
monday tuesday wednesday we have this

26
00:00:58,239 --> 00:01:01,199
other small event in ghent which is

27
00:01:00,000 --> 00:01:03,120
conflict management camp

28
00:01:01,199 --> 00:01:04,879
it's basically the same as the only

29
00:01:03,120 --> 00:01:06,880
focusing infrastructure

30
00:01:04,879 --> 00:01:08,560
and you're all welcome we're sold out

31
00:01:06,880 --> 00:01:10,320
but we don't check tickets we basically

32
00:01:08,560 --> 00:01:13,200
do crowd control so just show up if you

33
00:01:10,320 --> 00:01:14,479
care about this stuff

34
00:01:13,200 --> 00:01:17,040
for those who have seen this slide

35
00:01:14,479 --> 00:01:19,600
before they might have noticed this new

36
00:01:17,040 --> 00:01:22,240
thingy here

37
00:01:19,600 --> 00:01:24,080
delivery conf had its first edition last

38
00:01:22,240 --> 00:01:26,560
week in seattle it was awesome

39
00:01:24,080 --> 00:01:28,320
and the id currently is that we might

40
00:01:26,560 --> 00:01:30,000
run one in europe next year

41
00:01:28,320 --> 00:01:31,520
so given that you folks are interested

42
00:01:30,000 --> 00:01:34,720
in continuous delivery and stuff

43
00:01:31,520 --> 00:01:37,600
you might want to show up um

44
00:01:34,720 --> 00:01:38,079
i don't have much time but i want to

45
00:01:37,600 --> 00:01:41,600
focus

46
00:01:38,079 --> 00:01:42,079
on what is this devops thing to me it's

47
00:01:41,600 --> 00:01:44,320
not

48
00:01:42,079 --> 00:01:45,279
the automation part it is mostly the

49
00:01:44,320 --> 00:01:47,839
culture part

50
00:01:45,280 --> 00:01:49,439
uh damon and john have been talking

51
00:01:47,840 --> 00:01:50,399
about cultural automation measurement

52
00:01:49,439 --> 00:01:52,320
and sharing

53
00:01:50,399 --> 00:01:54,000
and there's a couple of things there's

54
00:01:52,320 --> 00:01:55,199
no such thing as a devops engineer if

55
00:01:54,000 --> 00:01:56,560
you're a devops engineer your

56
00:01:55,200 --> 00:01:58,640
organization basically does not

57
00:01:56,560 --> 00:02:00,560
understand devops

58
00:01:58,640 --> 00:02:04,000
if you think you can get certified in

59
00:02:00,560 --> 00:02:06,560
devops you've been scammed

60
00:02:04,000 --> 00:02:10,639
that's not what devops is about it's

61
00:02:06,560 --> 00:02:10,640
also not the same as continuous delivery

62
00:02:10,959 --> 00:02:14,400
i think you need to do

63
00:02:14,560 --> 00:02:17,840
something like devops in order to

64
00:02:16,000 --> 00:02:20,319
achieve continuous delivery

65
00:02:17,840 --> 00:02:21,360
but you could definitely do something

66
00:02:20,319 --> 00:02:23,040
completely different

67
00:02:21,360 --> 00:02:24,879
and have a healthy culture and still

68
00:02:23,040 --> 00:02:26,560
achieve your business value

69
00:02:24,879 --> 00:02:28,720
but if we talk about continuous delivery

70
00:02:26,560 --> 00:02:29,440
and what basically is the topic of this

71
00:02:28,720 --> 00:02:33,599
talk

72
00:02:29,440 --> 00:02:37,280
is this is the idea that we

73
00:02:33,599 --> 00:02:39,518
can constantly deploy software stable

74
00:02:37,280 --> 00:02:40,560
reproducible fastly and we typically

75
00:02:39,519 --> 00:02:42,959
achieve that

76
00:02:40,560 --> 00:02:45,120
through collaboration between all of the

77
00:02:42,959 --> 00:02:48,800
people involved

78
00:02:45,120 --> 00:02:48,800
and that smells a lot like devops

79
00:02:49,040 --> 00:02:57,359
so how do we get there

80
00:02:53,840 --> 00:02:59,040
well i could pull a just humble trick

81
00:02:57,360 --> 00:03:00,560
here and ask who's doing continuous

82
00:02:59,040 --> 00:03:04,560
delivery raise your hand if you're doing

83
00:03:00,560 --> 00:03:07,840
continuous delivery

84
00:03:04,560 --> 00:03:12,000
so who's frequently committing

85
00:03:07,840 --> 00:03:15,440
to master every day

86
00:03:12,000 --> 00:03:15,920
multiple times a day okay the hands that

87
00:03:15,440 --> 00:03:17,519
drop

88
00:03:15,920 --> 00:03:18,159
they are not doing continuous delivery

89
00:03:17,519 --> 00:03:19,440
because they're not even doing

90
00:03:18,159 --> 00:03:22,799
continuous integration they're doing

91
00:03:19,440 --> 00:03:22,800
continuous disintegration

92
00:03:23,120 --> 00:03:26,159
and you need to do continuous

93
00:03:24,319 --> 00:03:27,440
integration before you can achieve

94
00:03:26,159 --> 00:03:30,798
continuous delivery

95
00:03:27,440 --> 00:03:32,560
or continuous deployment and also

96
00:03:30,799 --> 00:03:35,519
there's nothing wrong with

97
00:03:32,560 --> 00:03:38,879
maybe having that manual step in there

98
00:03:35,519 --> 00:03:38,879
if everything else is automated

99
00:03:38,959 --> 00:03:44,400
so what is this thing about what are we

100
00:03:42,080 --> 00:03:47,040
talking about

101
00:03:44,400 --> 00:03:48,560
today i want to talk to you about how to

102
00:03:47,040 --> 00:03:49,440
get there and how i'm not together and

103
00:03:48,560 --> 00:03:53,360
i'm going to

104
00:03:49,440 --> 00:03:56,959
talk both about a couple of use cases um

105
00:03:53,360 --> 00:03:59,760
stories i've had experiences i had with

106
00:03:56,959 --> 00:04:00,959
larger and smaller organizations but

107
00:03:59,760 --> 00:04:04,079
also

108
00:04:00,959 --> 00:04:06,239
a bit of deeper dive into how to do this

109
00:04:04,080 --> 00:04:11,439
technically

110
00:04:06,239 --> 00:04:11,439
so what is the actual goal we want to

111
00:04:12,840 --> 00:04:15,840
achieve

112
00:04:19,358 --> 00:04:25,599
this is part of the release notes

113
00:04:22,560 --> 00:04:30,960
of deployingator which is a tool

114
00:04:25,600 --> 00:04:30,960
etsy wrote 10 years ago

115
00:04:32,000 --> 00:04:35,840
and we're still not there yet but this

116
00:04:34,160 --> 00:04:37,680
is basically the goal we want to achieve

117
00:04:35,840 --> 00:04:38,159
we want to have the ability to deploy

118
00:04:37,680 --> 00:04:41,600
code

119
00:04:38,160 --> 00:04:42,000
quickly and safely and a lot of people

120
00:04:41,600 --> 00:04:43,360
have tried

121
00:04:42,000 --> 00:04:45,360
to achieve that and a lot of people have

122
00:04:43,360 --> 00:04:48,320
succeeded but many more

123
00:04:45,360 --> 00:04:49,680
are failing and i think partly that is

124
00:04:48,320 --> 00:04:51,599
because

125
00:04:49,680 --> 00:04:53,440
they haven't involved the operations

126
00:04:51,600 --> 00:04:56,639
people first

127
00:04:53,440 --> 00:04:58,320
they've basically been trying to do this

128
00:04:56,639 --> 00:05:01,919
as something which is

129
00:04:58,320 --> 00:05:01,919
a developer only story

130
00:05:02,080 --> 00:05:08,560
and i don't get this because if you look

131
00:05:05,440 --> 00:05:10,240
at the operational part for years

132
00:05:08,560 --> 00:05:11,440
we've been telling developers like

133
00:05:10,240 --> 00:05:12,880
you're not going to push this to

134
00:05:11,440 --> 00:05:14,160
production you're not going to deploy

135
00:05:12,880 --> 00:05:15,520
this live you're not going to do all

136
00:05:14,160 --> 00:05:17,360
these things manually

137
00:05:15,520 --> 00:05:19,198
you're going to have testing in place

138
00:05:17,360 --> 00:05:21,039
we're going to have automation in place

139
00:05:19,199 --> 00:05:22,840
and we're going to force you to go

140
00:05:21,039 --> 00:05:26,320
through a pipeline and automate

141
00:05:22,840 --> 00:05:30,320
everything but on the same time

142
00:05:26,320 --> 00:05:33,280
we've tolerated that ops folks were like

143
00:05:30,320 --> 00:05:35,039
i fixed it or let's do this manually or

144
00:05:33,280 --> 00:05:37,280
let's change stuff there or reconfigure

145
00:05:35,039 --> 00:05:39,280
a network switch or add a firewall rule

146
00:05:37,280 --> 00:05:41,599
and we've been tolerating people to just

147
00:05:39,280 --> 00:05:46,719
do that manually

148
00:05:41,600 --> 00:05:46,720
we're still doing that why

149
00:05:48,880 --> 00:05:52,400
the people have worked with me know that

150
00:05:51,120 --> 00:05:55,759
i don't tolerate that and i haven't

151
00:05:52,400 --> 00:05:59,758
tolerated that for the past decade

152
00:05:55,759 --> 00:06:00,479
and it's hard and if you look at the

153
00:05:59,759 --> 00:06:03,039
history

154
00:06:00,479 --> 00:06:04,560
of where this devops movement comes from

155
00:06:03,039 --> 00:06:06,560
if you look at the european part we were

156
00:06:04,560 --> 00:06:08,080
mostly senior ops folks

157
00:06:06,560 --> 00:06:10,080
people who had been i mean i've been

158
00:06:08,080 --> 00:06:11,440
coming to foster for 10 years i did open

159
00:06:10,080 --> 00:06:12,880
source before that and we started devops

160
00:06:11,440 --> 00:06:14,479
days 10 years ago

161
00:06:12,880 --> 00:06:16,479
so we were doing more than 10 years of

162
00:06:14,479 --> 00:06:19,039
open source stuff some of us

163
00:06:16,479 --> 00:06:20,960
15 and more and we were starting out

164
00:06:19,039 --> 00:06:23,280
from an operational point where we were

165
00:06:20,960 --> 00:06:24,799
seeing bad quality artifacts from

166
00:06:23,280 --> 00:06:26,719
developer teams we were

167
00:06:24,800 --> 00:06:28,639
having a lot of pain with stability with

168
00:06:26,720 --> 00:06:31,440
scalability and we were like

169
00:06:28,639 --> 00:06:32,800
nah this is not how it works and on the

170
00:06:31,440 --> 00:06:34,400
same side we had

171
00:06:32,800 --> 00:06:36,080
the american people we were like yeah

172
00:06:34,400 --> 00:06:37,198
but we need faster deployments and the

173
00:06:36,080 --> 00:06:39,599
developers were pushing this and

174
00:06:37,199 --> 00:06:41,680
somewhere in the middle we met

175
00:06:39,600 --> 00:06:42,639
there's also the difference in culture

176
00:06:41,680 --> 00:06:44,319
between

177
00:06:42,639 --> 00:06:46,240
the american startups where there's

178
00:06:44,319 --> 00:06:48,319
vulture capital which basically pushes

179
00:06:46,240 --> 00:06:49,840
companies to go fast and burn

180
00:06:48,319 --> 00:06:51,759
whereas the europeans are more looking

181
00:06:49,840 --> 00:06:53,359
at

182
00:06:51,759 --> 00:06:54,880
we have a sustainable business we're

183
00:06:53,360 --> 00:06:58,319
going to be around in 10 years and

184
00:06:54,880 --> 00:07:00,800
be supporting customers so

185
00:06:58,319 --> 00:07:02,000
the combination of breaking things fast

186
00:07:00,800 --> 00:07:05,599
but still being resilient

187
00:07:02,000 --> 00:07:07,360
and knowing how to run things

188
00:07:05,599 --> 00:07:09,520
that is to me why a lot of people have

189
00:07:07,360 --> 00:07:12,479
been tolerating

190
00:07:09,520 --> 00:07:14,400
ops to do things manually as opposed to

191
00:07:12,479 --> 00:07:17,840
really doing infrastructure's codes

192
00:07:14,400 --> 00:07:17,840
really doing automation

193
00:07:18,240 --> 00:07:23,120
and i have some stories some cases which

194
00:07:21,840 --> 00:07:25,119
basically back

195
00:07:23,120 --> 00:07:27,039
that feeling that you need to start with

196
00:07:25,120 --> 00:07:28,880
the operations part first

197
00:07:27,039 --> 00:07:31,440
they're not as scientifically measured

198
00:07:28,880 --> 00:07:33,039
as nicole forzan's

199
00:07:31,440 --> 00:07:34,960
state of the devops survey where she

200
00:07:33,039 --> 00:07:36,479
actually has good metrics but

201
00:07:34,960 --> 00:07:38,719
i've seen this throughout the journey

202
00:07:36,479 --> 00:07:43,280
with different organizations and i

203
00:07:38,720 --> 00:07:43,280
wrote down like three of them and

204
00:07:43,599 --> 00:07:47,759
i hope that's not somebody on call

205
00:07:46,160 --> 00:07:50,240
because 9am on a sunday morning

206
00:07:47,759 --> 00:07:52,000
that must be painful i'm actually

207
00:07:50,240 --> 00:07:53,840
looking a room to see if there's people

208
00:07:52,000 --> 00:07:55,360
from the customers in the audience i saw

209
00:07:53,840 --> 00:07:56,840
somebody outside but he's not getting in

210
00:07:55,360 --> 00:07:59,759
so that's good

211
00:07:56,840 --> 00:08:01,119
um so yeah let me start with a couple of

212
00:07:59,759 --> 00:08:04,560
those cases and the first one

213
00:08:01,120 --> 00:08:06,240
is a situation where

214
00:08:04,560 --> 00:08:07,919
i walked into an organization and they

215
00:08:06,240 --> 00:08:09,759
were in complete chaos they had about

216
00:08:07,919 --> 00:08:11,198
300 nodes they had no clue on how they

217
00:08:09,759 --> 00:08:12,800
built them they had no clue how they

218
00:08:11,199 --> 00:08:15,039
deployed them

219
00:08:12,800 --> 00:08:17,120
they had a jenkins hiding somewhere

220
00:08:15,039 --> 00:08:21,199
under a developer's desk

221
00:08:17,120 --> 00:08:24,080
who still has that not that many people

222
00:08:21,199 --> 00:08:25,840
that's good the operations people were

223
00:08:24,080 --> 00:08:28,318
mostly fighting fires

224
00:08:25,840 --> 00:08:30,159
there was zero standardization and every

225
00:08:28,319 --> 00:08:31,840
artifact was being deployed

226
00:08:30,160 --> 00:08:33,519
had different naming conventions was

227
00:08:31,840 --> 00:08:37,439
deployed on different location

228
00:08:33,519 --> 00:08:38,959
it was well you know hell as we know it

229
00:08:37,440 --> 00:08:41,440
and their tipping point was the moment

230
00:08:38,958 --> 00:08:42,399
when they had a really really huge

231
00:08:41,440 --> 00:08:45,040
failure

232
00:08:42,399 --> 00:08:47,120
and their senior management realized if

233
00:08:45,040 --> 00:08:51,040
we have this failure again

234
00:08:47,120 --> 00:08:55,279
it's game over so they sought help

235
00:08:51,040 --> 00:08:56,959
and what we started doing there was

236
00:08:55,279 --> 00:08:59,040
the first thing we needed to figure out

237
00:08:56,959 --> 00:09:00,399
is how do you build your software how do

238
00:08:59,040 --> 00:09:01,360
you make sure that your software is

239
00:09:00,399 --> 00:09:03,920
reproducible

240
00:09:01,360 --> 00:09:05,440
and how do you actually achieve being

241
00:09:03,920 --> 00:09:06,560
able to build your build environments

242
00:09:05,440 --> 00:09:08,080
again

243
00:09:06,560 --> 00:09:09,760
so we started teaching those people they

244
00:09:08,080 --> 00:09:11,360
were already using puppet as an

245
00:09:09,760 --> 00:09:12,959
infrastructure as koto

246
00:09:11,360 --> 00:09:14,640
um and we started teaching those people

247
00:09:12,959 --> 00:09:18,160
like how do you build

248
00:09:14,640 --> 00:09:20,560
your own ci stack reproducible so that

249
00:09:18,160 --> 00:09:21,279
if it breaks you can still rebuild it

250
00:09:20,560 --> 00:09:22,800
then you can

251
00:09:21,279 --> 00:09:25,120
guarantee that the next time you spin

252
00:09:22,800 --> 00:09:27,439
something up it's gonna be

253
00:09:25,120 --> 00:09:29,360
similar or extremely similar to what you

254
00:09:27,440 --> 00:09:31,839
built before

255
00:09:29,360 --> 00:09:32,880
and we talked to those folks like

256
00:09:31,839 --> 00:09:34,800
testing

257
00:09:32,880 --> 00:09:36,160
how do you test your things what they

258
00:09:34,800 --> 00:09:37,920
were doing before was they had

259
00:09:36,160 --> 00:09:40,319
300 nodes but had no development

260
00:09:37,920 --> 00:09:42,719
platforms they were just

261
00:09:40,320 --> 00:09:43,920
hacking puppet code in production and

262
00:09:42,720 --> 00:09:48,080
puppet apply and it broke

263
00:09:43,920 --> 00:09:48,800
and oh so the idea there was we start

264
00:09:48,080 --> 00:09:51,760
with

265
00:09:48,800 --> 00:09:53,279
building the infrastructure there in a

266
00:09:51,760 --> 00:09:55,439
development environment

267
00:09:53,279 --> 00:09:58,080
and then teaching them that you can

268
00:09:55,440 --> 00:10:01,360
promote things to a new environment

269
00:09:58,080 --> 00:10:02,959
when things work so we split out the

270
00:10:01,360 --> 00:10:04,800
configuration out of the code

271
00:10:02,959 --> 00:10:06,959
we started to teach them how to use the

272
00:10:04,800 --> 00:10:08,479
pipelines they were actually building

273
00:10:06,959 --> 00:10:11,119
for the developers

274
00:10:08,480 --> 00:10:12,720
and slowly you saw the developers

275
00:10:11,120 --> 00:10:14,880
starting to actually contribute

276
00:10:12,720 --> 00:10:16,240
code to the puppet code base they were

277
00:10:14,880 --> 00:10:17,360
writing tests they were writing their

278
00:10:16,240 --> 00:10:19,279
own modules

279
00:10:17,360 --> 00:10:21,519
and we saw that because they were now

280
00:10:19,279 --> 00:10:23,120
using the same tools

281
00:10:21,519 --> 00:10:24,560
the bridge between those people was

282
00:10:23,120 --> 00:10:26,320
being closed

283
00:10:24,560 --> 00:10:28,479
the gap was closed and the bridge was

284
00:10:26,320 --> 00:10:31,680
made sorry

285
00:10:28,480 --> 00:10:35,600
so we went from a zillion

286
00:10:31,680 --> 00:10:36,640
different gdks to one gdk and one gbos

287
00:10:35,600 --> 00:10:39,360
version

288
00:10:36,640 --> 00:10:40,800
we called this project initially project

289
00:10:39,360 --> 00:10:41,680
dolly because we wanted to be able to

290
00:10:40,800 --> 00:10:44,800
clone the different

291
00:10:41,680 --> 00:10:46,719
environments not as in a physical image

292
00:10:44,800 --> 00:10:49,279
clone but like we wanted to have

293
00:10:46,720 --> 00:10:51,200
the same environment for everybody and

294
00:10:49,279 --> 00:10:52,880
we tried to shoot for like 90

295
00:10:51,200 --> 00:10:54,320
reversibility because that was the

296
00:10:52,880 --> 00:10:56,800
initial go we knew there were going to

297
00:10:54,320 --> 00:10:59,040
be a bunch of edge cases

298
00:10:56,800 --> 00:11:01,120
and like i mentioned eventually we had

299
00:10:59,040 --> 00:11:01,760
java developers we were contributing

300
00:11:01,120 --> 00:11:04,560
back

301
00:11:01,760 --> 00:11:06,480
to the rsp code base to actually having

302
00:11:04,560 --> 00:11:08,479
tests on infrastructure code

303
00:11:06,480 --> 00:11:09,760
so they were much more sure that what

304
00:11:08,480 --> 00:11:11,839
was being delivered was actually what

305
00:11:09,760 --> 00:11:16,399
they wanted

306
00:11:11,839 --> 00:11:19,120
so we started with telling ops folks

307
00:11:16,399 --> 00:11:20,560
automate and they learned the same tools

308
00:11:19,120 --> 00:11:23,200
as developers

309
00:11:20,560 --> 00:11:24,560
and eventually collaboration improved

310
00:11:23,200 --> 00:11:26,640
progress improved and

311
00:11:24,560 --> 00:11:27,680
they were happy they had much less

312
00:11:26,640 --> 00:11:29,680
downtime

313
00:11:27,680 --> 00:11:32,399
much less issues and much better

314
00:11:29,680 --> 00:11:32,399
collaboration

315
00:11:32,800 --> 00:11:37,599
the second case i went in was completely

316
00:11:35,279 --> 00:11:37,600
different

317
00:11:38,320 --> 00:11:45,360
they were already doing ci they claimed

318
00:11:42,640 --> 00:11:47,120
the developers had a bunch of tests they

319
00:11:45,360 --> 00:11:49,920
had

320
00:11:47,120 --> 00:11:51,120
some things under the hood hiding on

321
00:11:49,920 --> 00:11:52,240
their desks

322
00:11:51,120 --> 00:11:54,079
but the people that they called

323
00:11:52,240 --> 00:11:55,360
operations they had like yeah but we

324
00:11:54,079 --> 00:11:57,439
cannot deploy this we don't know where

325
00:11:55,360 --> 00:11:58,959
it's coming from we

326
00:11:57,440 --> 00:12:00,480
but those developers said that we have

327
00:11:58,959 --> 00:12:03,119
good test coverage and we have

328
00:12:00,480 --> 00:12:04,079
everything in place but they still had

329
00:12:03,120 --> 00:12:06,079
no way

330
00:12:04,079 --> 00:12:07,839
into stable deploys they could not

331
00:12:06,079 --> 00:12:11,760
automate their deployment

332
00:12:07,839 --> 00:12:14,320
it was painful it took me about

333
00:12:11,760 --> 00:12:15,519
18 months in an organization to finally

334
00:12:14,320 --> 00:12:18,880
find somebody who

335
00:12:15,519 --> 00:12:19,440
i would consider an ops person i would

336
00:12:18,880 --> 00:12:22,000
actually

337
00:12:19,440 --> 00:12:24,720
say hey if you're looking for a new job

338
00:12:22,000 --> 00:12:27,920
i hire you and all the other people in

339
00:12:24,720 --> 00:12:31,680
that room are basically people who were

340
00:12:27,920 --> 00:12:33,279
they were called ops but they couldn't

341
00:12:31,680 --> 00:12:35,760
figure out the difference between a root

342
00:12:33,279 --> 00:12:40,079
password or

343
00:12:35,760 --> 00:12:40,079
a username it was that bad

344
00:12:43,040 --> 00:12:47,760
it was mostly when we eventually found

345
00:12:46,560 --> 00:12:49,518
people senior enough

346
00:12:47,760 --> 00:12:51,200
to do operations work it worked the

347
00:12:49,519 --> 00:12:53,040
brands if you've read the freeness

348
00:12:51,200 --> 00:12:54,639
project it were the people who were

349
00:12:53,040 --> 00:12:57,680
firefighting

350
00:12:54,639 --> 00:12:59,279
harding knowledge and they were not

351
00:12:57,680 --> 00:13:00,239
being able to move forward so what we

352
00:12:59,279 --> 00:13:03,519
did there

353
00:13:00,240 --> 00:13:04,720
is we found a couple of them and we

354
00:13:03,519 --> 00:13:06,160
moved them

355
00:13:04,720 --> 00:13:08,639
out of their office out of their

356
00:13:06,160 --> 00:13:10,959
day-to-day job we actually moved them to

357
00:13:08,639 --> 00:13:13,120
a different city

358
00:13:10,959 --> 00:13:14,319
and there we started teaching them agile

359
00:13:13,120 --> 00:13:16,240
we started

360
00:13:14,320 --> 00:13:18,560
they were longing to do infrastructure

361
00:13:16,240 --> 00:13:19,519
code for years but they weren't allowed

362
00:13:18,560 --> 00:13:22,560
to

363
00:13:19,519 --> 00:13:24,480
so we started them in their own group

364
00:13:22,560 --> 00:13:25,599
where they couldn't be disturbed by

365
00:13:24,480 --> 00:13:28,000
other people

366
00:13:25,600 --> 00:13:28,800
the side effects was that the other

367
00:13:28,000 --> 00:13:30,880
people

368
00:13:28,800 --> 00:13:32,839
that were trying to get their resources

369
00:13:30,880 --> 00:13:35,120
were finally learning how to fix things

370
00:13:32,839 --> 00:13:36,880
themselves

371
00:13:35,120 --> 00:13:38,800
and they started to build a pipeline

372
00:13:36,880 --> 00:13:42,320
they started to do

373
00:13:38,800 --> 00:13:44,240
ci cd on their own code base um

374
00:13:42,320 --> 00:13:46,240
their own tooling and they started to

375
00:13:44,240 --> 00:13:49,199
think about hey

376
00:13:46,240 --> 00:13:50,560
what is our way to build something that

377
00:13:49,199 --> 00:13:53,120
ends up to production and even

378
00:13:50,560 --> 00:13:55,518
discussions like what is production if

379
00:13:53,120 --> 00:13:57,120
the ops teams deliver production is that

380
00:13:55,519 --> 00:13:59,120
production for them or is that

381
00:13:57,120 --> 00:14:00,959
production for the developers

382
00:13:59,120 --> 00:14:02,160
those kind of discussions started

383
00:14:00,959 --> 00:14:04,638
happening

384
00:14:02,160 --> 00:14:06,319
and after those first successes we

385
00:14:04,639 --> 00:14:09,440
slowly started moving those people

386
00:14:06,320 --> 00:14:11,199
back to their teams

387
00:14:09,440 --> 00:14:12,639
so they could take the practices they

388
00:14:11,199 --> 00:14:14,719
had learned and

389
00:14:12,639 --> 00:14:17,199
they could actually help their own teams

390
00:14:14,720 --> 00:14:19,040
back in adopting them

391
00:14:17,199 --> 00:14:21,040
but that was like 18 months after we

392
00:14:19,040 --> 00:14:24,719
started working with them

393
00:14:21,040 --> 00:14:27,839
so over a period of about six years

394
00:14:24,720 --> 00:14:30,000
six months we ended up having like the

395
00:14:27,839 --> 00:14:31,920
really old-school grey-beard people the

396
00:14:30,000 --> 00:14:33,680
people were just doing aix and said i'm

397
00:14:31,920 --> 00:14:35,439
gonna go retire in six years

398
00:14:33,680 --> 00:14:37,279
and i'm not gonna learn anything new and

399
00:14:35,440 --> 00:14:39,040
we converted those people to

400
00:14:37,279 --> 00:14:40,800
actually being agile evangelists those

401
00:14:39,040 --> 00:14:42,719
were people who now were running in the

402
00:14:40,800 --> 00:14:44,319
organization and saying hey

403
00:14:42,720 --> 00:14:45,920
you should do this kanban thing because

404
00:14:44,320 --> 00:14:46,800
for operations this might be better than

405
00:14:45,920 --> 00:14:48,399
scrum

406
00:14:46,800 --> 00:14:50,079
and those were the people we were

407
00:14:48,399 --> 00:14:53,279
actually writing code

408
00:14:50,079 --> 00:14:56,638
tests tests for the code

409
00:14:53,279 --> 00:14:57,600
so it took the much longer time to have

410
00:14:56,639 --> 00:15:00,160
teams

411
00:14:57,600 --> 00:15:01,279
arrive at continuous delivery because

412
00:15:00,160 --> 00:15:04,800
they didn't get

413
00:15:01,279 --> 00:15:08,480
the ops focusing goals first

414
00:15:04,800 --> 00:15:08,479
it took them more than a year longer

415
00:15:08,800 --> 00:15:15,519
but once they were there

416
00:15:12,079 --> 00:15:18,160
things started moving so you can guess

417
00:15:15,519 --> 00:15:20,160
what the third case is right

418
00:15:18,160 --> 00:15:22,319
an organization that still refuses to

419
00:15:20,160 --> 00:15:24,560
involve the operations people

420
00:15:22,320 --> 00:15:27,199
they claim to do devops they claim to

421
00:15:24,560 --> 00:15:29,199
have been doing it for two years

422
00:15:27,199 --> 00:15:32,319
and they have a devops team in the

423
00:15:29,199 --> 00:15:35,839
middle which is dictating tooling

424
00:15:32,320 --> 00:15:38,399
tooling they never use tooling they

425
00:15:35,839 --> 00:15:38,399
don't know

426
00:15:38,560 --> 00:15:41,599
so the developers they basically

427
00:15:39,839 --> 00:15:42,720
complain about well yeah we have this

428
00:15:41,600 --> 00:15:45,199
tool set here but

429
00:15:42,720 --> 00:15:46,800
we cannot use it because it doesn't fit

430
00:15:45,199 --> 00:15:49,040
our needs at all

431
00:15:46,800 --> 00:15:51,359
um they're broken they don't deliver

432
00:15:49,040 --> 00:15:52,959
what they should deliver

433
00:15:51,360 --> 00:15:54,880
and basically what i achieved is that

434
00:15:52,959 --> 00:15:57,119
everybody is working around the

435
00:15:54,880 --> 00:15:58,959
ecosystem that has been built

436
00:15:57,120 --> 00:16:00,399
and still doing things manually because

437
00:15:58,959 --> 00:16:03,518
the tools that they're given is

438
00:16:00,399 --> 00:16:03,519
completely broken

439
00:16:03,920 --> 00:16:07,519
you're still hiring devops engineers and

440
00:16:05,680 --> 00:16:07,920
the average devops engineer who has a

441
00:16:07,519 --> 00:16:10,399
clue

442
00:16:07,920 --> 00:16:12,560
and accepted the fact that the job title

443
00:16:10,399 --> 00:16:14,720
was wrong that he might be able to help

444
00:16:12,560 --> 00:16:16,079
stays for about two months and then

445
00:16:14,720 --> 00:16:18,240
leaves

446
00:16:16,079 --> 00:16:20,880
your seniority management has left twice

447
00:16:18,240 --> 00:16:22,399
over the past three years

448
00:16:20,880 --> 00:16:24,800
and they have a team where basically

449
00:16:22,399 --> 00:16:26,560
there's only junior in-house analysts

450
00:16:24,800 --> 00:16:28,000
that stay and all this with the crowd is

451
00:16:26,560 --> 00:16:29,680
external people and by the end of the

452
00:16:28,000 --> 00:16:30,800
year by october november they're out of

453
00:16:29,680 --> 00:16:33,359
the budget

454
00:16:30,800 --> 00:16:34,800
so they don't write any codes in the

455
00:16:33,360 --> 00:16:37,839
last quarter because they don't have any

456
00:16:34,800 --> 00:16:37,839
developers anymore

457
00:16:37,920 --> 00:16:42,000
so they're going to fix this by adopting

458
00:16:39,440 --> 00:16:42,000
the cloud

459
00:16:42,480 --> 00:16:46,320
which means they have some cube deployed

460
00:16:44,800 --> 00:16:47,599
somewhere

461
00:16:46,320 --> 00:16:49,199
and they're moving their oracle

462
00:16:47,600 --> 00:16:50,480
databases in there and they're wondering

463
00:16:49,199 --> 00:16:52,240
why things don't work

464
00:16:50,480 --> 00:16:54,079
oh yes you still need to fill in a

465
00:16:52,240 --> 00:16:54,480
four-page word document in order to be

466
00:16:54,079 --> 00:16:57,359
able to

467
00:16:54,480 --> 00:16:57,360
deploy something

468
00:16:59,600 --> 00:17:03,680
and they still haven't involved the ops

469
00:17:01,360 --> 00:17:05,839
folks actually it's worse when i was

470
00:17:03,680 --> 00:17:08,879
working with them i wasn't allowed to

471
00:17:05,839 --> 00:17:08,879
talk to the ops folks

472
00:17:10,640 --> 00:17:15,280
so if i look back at

473
00:17:14,079 --> 00:17:18,079
these journeys and those are just

474
00:17:15,280 --> 00:17:20,319
snapshots the only thing i can conclude

475
00:17:18,079 --> 00:17:21,839
is the earlier you have those ops people

476
00:17:20,319 --> 00:17:23,839
involved

477
00:17:21,839 --> 00:17:26,639
the better your ci cd story is going to

478
00:17:23,839 --> 00:17:27,918
be it's going to have a much higher rate

479
00:17:26,640 --> 00:17:30,080
of success and it's going to be much

480
00:17:27,919 --> 00:17:32,240
smoother

481
00:17:30,080 --> 00:17:33,120
and if you think about it there there is

482
00:17:32,240 --> 00:17:36,720
a reason

483
00:17:33,120 --> 00:17:37,360
because people who run ops need to be

484
00:17:36,720 --> 00:17:40,559
able to

485
00:17:37,360 --> 00:17:42,240
support what the other people do and in

486
00:17:40,559 --> 00:17:43,520
order to be able to support these things

487
00:17:42,240 --> 00:17:45,280
they need to understand

488
00:17:43,520 --> 00:17:47,360
what they do and if you've never done

489
00:17:45,280 --> 00:17:50,879
this before

490
00:17:47,360 --> 00:17:53,280
how can you do this if you've never

491
00:17:50,880 --> 00:17:54,559
driven a car

492
00:17:53,280 --> 00:17:57,760
are you really going to tell people how

493
00:17:54,559 --> 00:17:58,960
to drive a car and help them fix the car

494
00:17:57,760 --> 00:18:01,440
if you don't know what a steering wheel

495
00:17:58,960 --> 00:18:04,720
is if you don't know what a

496
00:18:01,440 --> 00:18:06,559
gas pedal is you won't and you need

497
00:18:04,720 --> 00:18:08,400
those people involved so you can

498
00:18:06,559 --> 00:18:10,000
unblock delivery you can unlock

499
00:18:08,400 --> 00:18:11,280
provisioning and can make sure that

500
00:18:10,000 --> 00:18:15,039
everything you want

501
00:18:11,280 --> 00:18:17,840
is built in

502
00:18:15,039 --> 00:18:18,960
i'm putting up a bunch of tools it's not

503
00:18:17,840 --> 00:18:20,639
going to solve that

504
00:18:18,960 --> 00:18:23,280
shouting that you're doing ci cd is not

505
00:18:20,640 --> 00:18:25,760
going to solve that

506
00:18:23,280 --> 00:18:27,600
so the culture hack i have for this is

507
00:18:25,760 --> 00:18:30,480
well

508
00:18:27,600 --> 00:18:35,120
if you teach your ops folks to set up

509
00:18:30,480 --> 00:18:36,559
cicd for your cicd infrastructure first

510
00:18:35,120 --> 00:18:39,199
they're going to understand how this

511
00:18:36,559 --> 00:18:42,399
work and they're going to be able to

512
00:18:39,200 --> 00:18:44,160
coach and teach your developers into

513
00:18:42,400 --> 00:18:46,480
doing exactly the same thing

514
00:18:44,160 --> 00:18:48,400
and while you do that you give them a

515
00:18:46,480 --> 00:18:49,679
common set of tools a common set of

516
00:18:48,400 --> 00:18:54,840
terminology

517
00:18:49,679 --> 00:18:56,320
a common set of it's broken let's fix it

518
00:18:54,840 --> 00:19:00,720
together

519
00:18:56,320 --> 00:19:00,720
so how do we do this well

520
00:19:01,440 --> 00:19:05,919
if you look at older organizations you

521
00:19:03,840 --> 00:19:08,720
see it in a ci ecosystem there

522
00:19:05,919 --> 00:19:09,280
is tool for version control deployment

523
00:19:08,720 --> 00:19:10,640
tooling

524
00:19:09,280 --> 00:19:12,320
build touring you need artifact

525
00:19:10,640 --> 00:19:13,760
repository you need code coverage still

526
00:19:12,320 --> 00:19:16,559
you know test tools you need

527
00:19:13,760 --> 00:19:19,120
a lot more than is listed here and if

528
00:19:16,559 --> 00:19:21,840
you talk to the average ops person

529
00:19:19,120 --> 00:19:25,840
in a legacy organization how many of

530
00:19:21,840 --> 00:19:25,840
these tools do you think he's been using

531
00:19:26,320 --> 00:19:31,520
two zero all all of them then it's not a

532
00:19:29,280 --> 00:19:34,399
legacy organization

533
00:19:31,520 --> 00:19:34,400
then it's probably an

534
00:19:36,960 --> 00:19:42,000
if organization use version control

535
00:19:39,840 --> 00:19:45,280
testing

536
00:19:42,000 --> 00:19:45,919
and i had a friend who tweeted last week

537
00:19:45,280 --> 00:19:47,918
even that

538
00:19:45,919 --> 00:19:49,520
he was working with an organization and

539
00:19:47,919 --> 00:19:54,960
their version control was

540
00:19:49,520 --> 00:19:54,960
file names on and it is 2020.

541
00:19:57,280 --> 00:20:02,158
so a bunch of these tools those people

542
00:20:00,000 --> 00:20:04,080
have never seen but they are expected to

543
00:20:02,159 --> 00:20:05,600
manage them

544
00:20:04,080 --> 00:20:07,120
expected to run them and they don't know

545
00:20:05,600 --> 00:20:09,039
how they function

546
00:20:07,120 --> 00:20:10,320
and that's already the first challenge

547
00:20:09,039 --> 00:20:12,400
to overcome

548
00:20:10,320 --> 00:20:13,918
we need to have people who understand

549
00:20:12,400 --> 00:20:15,760
how these tools work because they have

550
00:20:13,919 --> 00:20:19,280
been using them

551
00:20:15,760 --> 00:20:20,080
so a lot of people still argue against

552
00:20:19,280 --> 00:20:21,440
doing ci

553
00:20:20,080 --> 00:20:22,879
because of these reasons they don't know

554
00:20:21,440 --> 00:20:24,960
what the tools are about they don't know

555
00:20:22,880 --> 00:20:26,159
how they work

556
00:20:24,960 --> 00:20:28,080
and they're like yeah but this is

557
00:20:26,159 --> 00:20:30,080
costing time and

558
00:20:28,080 --> 00:20:32,559
well we don't have tests anyhow so why

559
00:20:30,080 --> 00:20:35,039
would we spend time on this

560
00:20:32,559 --> 00:20:36,720
and the biggest ones is we don't have

561
00:20:35,039 --> 00:20:38,720
budget for this

562
00:20:36,720 --> 00:20:40,320
we don't have the money for this now

563
00:20:38,720 --> 00:20:42,000
that's because the money is hiding

564
00:20:40,320 --> 00:20:43,360
somewhere you're spending it anyhow but

565
00:20:42,000 --> 00:20:44,720
you're hiding and spending it in

566
00:20:43,360 --> 00:20:47,280
firefighting rather than building

567
00:20:44,720 --> 00:20:50,480
something resilient

568
00:20:47,280 --> 00:20:51,039
or there's a different budget the budget

569
00:20:50,480 --> 00:20:53,679
that the

570
00:20:51,039 --> 00:20:54,960
development teams need to do quality

571
00:20:53,679 --> 00:20:56,000
insurance and to develop these things

572
00:20:54,960 --> 00:20:58,880
are not theirs

573
00:20:56,000 --> 00:21:00,840
so it's a really painful thing and then

574
00:20:58,880 --> 00:21:02,400
there's a fire and forget projects

575
00:21:00,840 --> 00:21:04,320
obviously

576
00:21:02,400 --> 00:21:07,200
so a lot of teams say yeah we we do

577
00:21:04,320 --> 00:21:07,200
continuous delivery

578
00:21:12,559 --> 00:21:17,280
because they don't want to spend time in

579
00:21:15,440 --> 00:21:18,640
building out multiple platforms

580
00:21:17,280 --> 00:21:20,320
yeah for those in the back we cannot

581
00:21:18,640 --> 00:21:21,120
read it it says everybody has a testing

582
00:21:20,320 --> 00:21:23,360
environment

583
00:21:21,120 --> 00:21:24,879
so people are just lucky enough to have

584
00:21:23,360 --> 00:21:30,000
another platform

585
00:21:24,880 --> 00:21:32,000
that's not called production

586
00:21:30,000 --> 00:21:33,440
in order to get there we need to do

587
00:21:32,000 --> 00:21:35,760
automation we need to do

588
00:21:33,440 --> 00:21:38,000
infrastructures code and we need to look

589
00:21:35,760 --> 00:21:41,039
at what we built

590
00:21:38,000 --> 00:21:42,880
and we need to write code and with me

591
00:21:41,039 --> 00:21:44,559
code does not mean i'm going to write

592
00:21:42,880 --> 00:21:46,240
shell script and convert them to yaml i

593
00:21:44,559 --> 00:21:47,120
want to basically define the state of an

594
00:21:46,240 --> 00:21:49,520
infrastructure

595
00:21:47,120 --> 00:21:51,918
and i need multiple components to this i

596
00:21:49,520 --> 00:21:52,720
need tools that do orchestration i need

597
00:21:51,919 --> 00:21:55,919
tools to do

598
00:21:52,720 --> 00:21:58,000
actual desired state configuration so

599
00:21:55,919 --> 00:21:59,120
you're typically looking at modeling

600
00:21:58,000 --> 00:22:00,640
your infrastructure

601
00:21:59,120 --> 00:22:01,918
writing cookbooks or manifests or

602
00:22:00,640 --> 00:22:03,919
whatever you like to call them these

603
00:22:01,919 --> 00:22:07,039
days and have different environments

604
00:22:03,919 --> 00:22:07,919
for your infrastructure so you can also

605
00:22:07,039 --> 00:22:10,158
promote

606
00:22:07,919 --> 00:22:11,600
the artifacts you deliver and ship them

607
00:22:10,159 --> 00:22:13,440
to different stages

608
00:22:11,600 --> 00:22:15,039
and then you eventually end up with a

609
00:22:13,440 --> 00:22:17,280
working service which has the

610
00:22:15,039 --> 00:22:18,400
application code the infrastructure code

611
00:22:17,280 --> 00:22:21,120
and security and monitoring and

612
00:22:18,400 --> 00:22:22,720
everything is built in

613
00:22:21,120 --> 00:22:26,080
this is a traditional one it starts with

614
00:22:22,720 --> 00:22:28,240
this but

615
00:22:26,080 --> 00:22:29,840
of ups folks still need to be taught on

616
00:22:28,240 --> 00:22:31,600
how to do version control

617
00:22:29,840 --> 00:22:33,678
actually lots of developers still need

618
00:22:31,600 --> 00:22:36,480
to be taught on how to do

619
00:22:33,679 --> 00:22:38,159
version control who has multiple

620
00:22:36,480 --> 00:22:41,840
branches here

621
00:22:38,159 --> 00:22:41,840
that live for longer than a day

622
00:22:42,000 --> 00:22:46,159
those are the people who are not doing

623
00:22:43,200 --> 00:22:46,159
continuous integration

624
00:22:47,280 --> 00:22:50,960
who has different tools to do dependency

625
00:22:50,320 --> 00:22:52,840
management

626
00:22:50,960 --> 00:22:54,159
who understands how to do dependency

627
00:22:52,840 --> 00:22:55,600
management

628
00:22:54,159 --> 00:22:58,880
one person understands how to do

629
00:22:55,600 --> 00:23:01,840
dependency management two people

630
00:22:58,880 --> 00:23:03,760
the thing is there's a huge variety of

631
00:23:01,840 --> 00:23:07,199
tools out there

632
00:23:03,760 --> 00:23:09,280
and it's so simple if you understand how

633
00:23:07,200 --> 00:23:12,480
it works

634
00:23:09,280 --> 00:23:14,480
so who knows what's on the screen what's

635
00:23:12,480 --> 00:23:16,480
on the right side

636
00:23:14,480 --> 00:23:18,400
on the right side we have something that

637
00:23:16,480 --> 00:23:20,080
looks like librarian file where there's

638
00:23:18,400 --> 00:23:22,320
basically a module defined with a git

639
00:23:20,080 --> 00:23:24,799
repository a reference

640
00:23:22,320 --> 00:23:26,320
and ruby ecosystem has some things like

641
00:23:24,799 --> 00:23:27,360
that the puppet ecosystem has some

642
00:23:26,320 --> 00:23:29,678
things like that

643
00:23:27,360 --> 00:23:32,080
every single language invents their own

644
00:23:29,679 --> 00:23:33,440
dependency manager

645
00:23:32,080 --> 00:23:37,840
what's the thing on the right side on

646
00:23:33,440 --> 00:23:37,840
the left side

647
00:23:38,320 --> 00:23:41,600
it's exactly the same and i hear

648
00:23:39,679 --> 00:23:44,080
somebody who actually saw what it is but

649
00:23:41,600 --> 00:23:45,120
it's exactly the same it's a list of a

650
00:23:44,080 --> 00:23:47,520
module

651
00:23:45,120 --> 00:23:50,080
with a reference to something in git

652
00:23:47,520 --> 00:23:52,480
these are git sub modules

653
00:23:50,080 --> 00:23:53,840
they do exactly the same as the thing on

654
00:23:52,480 --> 00:23:56,480
the right

655
00:23:53,840 --> 00:23:59,600
with one big difference this is gonna

656
00:23:56,480 --> 00:24:02,559
work for every single language out there

657
00:23:59,600 --> 00:24:04,799
this you're gonna have 35 different

658
00:24:02,559 --> 00:24:06,879
languages doing 35 different things

659
00:24:04,799 --> 00:24:08,320
and each time an ops person needs to

660
00:24:06,880 --> 00:24:09,840
help a tool it's going to be like oh

661
00:24:08,320 --> 00:24:11,039
wait there's a different variant of how

662
00:24:09,840 --> 00:24:12,639
in doing things

663
00:24:11,039 --> 00:24:14,240
because all of those tools all those

664
00:24:12,640 --> 00:24:15,360
people who have been building dependency

665
00:24:14,240 --> 00:24:17,120
management tools

666
00:24:15,360 --> 00:24:19,840
are basically wrapping on top of one

667
00:24:17,120 --> 00:24:21,600
basic simple component

668
00:24:19,840 --> 00:24:23,760
and making it harder for people to

669
00:24:21,600 --> 00:24:25,918
understand

670
00:24:23,760 --> 00:24:27,440
and having those discussions operations

671
00:24:25,919 --> 00:24:30,480
people between developers

672
00:24:27,440 --> 00:24:32,480
and realizing well this is

673
00:24:30,480 --> 00:24:34,159
the same pattern but we're just using

674
00:24:32,480 --> 00:24:37,200
different tools

675
00:24:34,159 --> 00:24:39,600
if you have that discussion you can help

676
00:24:37,200 --> 00:24:41,039
each other understand it

677
00:24:39,600 --> 00:24:43,279
you could use the same pattern and use

678
00:24:41,039 --> 00:24:45,039
this for different languages

679
00:24:43,279 --> 00:24:46,400
or you could understand like oh that's

680
00:24:45,039 --> 00:24:47,840
what you're doing that's what you're

681
00:24:46,400 --> 00:24:50,240
trying to achieve

682
00:24:47,840 --> 00:24:51,840
but in a lot of cases people don't

683
00:24:50,240 --> 00:24:55,279
understand the goal of the tools they're

684
00:24:51,840 --> 00:24:55,279
using because they've never had to

685
00:24:56,640 --> 00:25:00,559
unless you understand github modules

686
00:24:58,840 --> 00:25:02,799
obviously

687
00:25:00,559 --> 00:25:02,799
so

688
00:25:04,320 --> 00:25:10,399
people never done this before people

689
00:25:07,520 --> 00:25:13,918
have seen a zillion branches in their

690
00:25:10,400 --> 00:25:15,200
ecosystem and they've never understood

691
00:25:13,919 --> 00:25:15,840
when you think about it the branching

692
00:25:15,200 --> 00:25:19,600
makes it more

693
00:25:15,840 --> 00:25:22,639
difficult so

694
00:25:19,600 --> 00:25:25,039
anti-patterns started happening i had a

695
00:25:22,640 --> 00:25:27,120
really good discussion at delivery conf

696
00:25:25,039 --> 00:25:28,240
with the folks from puppet lab about

697
00:25:27,120 --> 00:25:29,760
eight nine years ago

698
00:25:28,240 --> 00:25:32,320
they figured out their release

699
00:25:29,760 --> 00:25:35,279
management tool to do deployments

700
00:25:32,320 --> 00:25:36,000
on a puppet master was well we have this

701
00:25:35,279 --> 00:25:38,159
tool card

702
00:25:36,000 --> 00:25:39,679
r10k and you're gonna have a branch for

703
00:25:38,159 --> 00:25:41,279
your development environment a branch

704
00:25:39,679 --> 00:25:43,039
for your

705
00:25:41,279 --> 00:25:45,919
acceptance environment and a branch for

706
00:25:43,039 --> 00:25:47,679
your production environment

707
00:25:45,919 --> 00:25:49,279
and i remember being in the room with

708
00:25:47,679 --> 00:25:51,600
jeff humble when they introduced that

709
00:25:49,279 --> 00:25:53,039
and we were like

710
00:25:51,600 --> 00:25:57,840
we're going to teach the operations

711
00:25:53,039 --> 00:25:57,840
people how to do it the wrong way

712
00:25:58,240 --> 00:26:02,880
but their whole ecosystem was built on

713
00:26:01,200 --> 00:26:04,080
you use r10k and deployments of your

714
00:26:02,880 --> 00:26:06,240
code base are going to be fine it's

715
00:26:04,080 --> 00:26:07,918
going to be smooth

716
00:26:06,240 --> 00:26:09,679
only last week i was talking to the

717
00:26:07,919 --> 00:26:11,279
people who are now rethinking

718
00:26:09,679 --> 00:26:12,960
their new continuous delivery tool for

719
00:26:11,279 --> 00:26:14,320
the puppet code i was like don't use the

720
00:26:12,960 --> 00:26:17,039
tools that already exist don't build

721
00:26:14,320 --> 00:26:17,039
your own tool but

722
00:26:17,440 --> 00:26:21,360
they start to realize that maybe r10k

723
00:26:19,760 --> 00:26:24,960
was not the best choice

724
00:26:21,360 --> 00:26:28,240
maybe there's other tools around

725
00:26:24,960 --> 00:26:28,240
that could do exactly the same

726
00:26:28,880 --> 00:26:34,000
so if you look at a typical

727
00:26:30,159 --> 00:26:34,000
infrastructure pipeline what is in there

728
00:26:36,480 --> 00:26:41,200
configuration why would there be

729
00:26:37,840 --> 00:26:41,199
configuration in a pipeline

730
00:26:41,919 --> 00:26:45,600
because if you have the wrong

731
00:26:42,960 --> 00:26:45,600
configuration

732
00:26:50,720 --> 00:26:54,240
and how are you going to test completely

733
00:26:53,440 --> 00:26:58,080
different

734
00:26:54,240 --> 00:26:58,080
parameters for a stack

735
00:26:58,640 --> 00:27:02,799
that's a good question configuration is

736
00:27:01,200 --> 00:27:05,840
to me actually the only thing which is

737
00:27:02,799 --> 00:27:07,279
not in a pipeline because it's close to

738
00:27:05,840 --> 00:27:08,639
an untestable you can test the syntax

739
00:27:07,279 --> 00:27:10,080
you can test whether the

740
00:27:08,640 --> 00:27:12,159
structure of the configuration is

741
00:27:10,080 --> 00:27:13,678
correct but you're testing the code that

742
00:27:12,159 --> 00:27:14,880
needs to apply the configuration but you

743
00:27:13,679 --> 00:27:18,000
can never

744
00:27:14,880 --> 00:27:20,559
test the sizing

745
00:27:18,000 --> 00:27:21,279
exactly and the ip address is exactly

746
00:27:20,559 --> 00:27:23,520
because if you can

747
00:27:21,279 --> 00:27:25,039
for example have the exact same ip stack

748
00:27:23,520 --> 00:27:26,080
and you're testing everything then it's

749
00:27:25,039 --> 00:27:27,919
actually breaking your production

750
00:27:26,080 --> 00:27:29,199
because now you have duplicate ips

751
00:27:27,919 --> 00:27:31,120
so configuration is one of the most

752
00:27:29,200 --> 00:27:32,159
difficult ones no the thing that's in

753
00:27:31,120 --> 00:27:33,760
your pipeline is

754
00:27:32,159 --> 00:27:35,600
what i was trying to achieve that is

755
00:27:33,760 --> 00:27:37,440
literally the same as what should be an

756
00:27:35,600 --> 00:27:39,120
application pipeline

757
00:27:37,440 --> 00:27:40,960
you should check out your code you

758
00:27:39,120 --> 00:27:43,279
should do some syntax checking some

759
00:27:40,960 --> 00:27:46,559
style checking do code coverage

760
00:27:43,279 --> 00:27:48,080
do tests if depending on the language

761
00:27:46,559 --> 00:27:49,200
you use you need to build it you need to

762
00:27:48,080 --> 00:27:52,639
build it you need to do

763
00:27:49,200 --> 00:27:54,399
more tests on the artifact you need to

764
00:27:52,640 --> 00:27:57,919
package it

765
00:27:54,399 --> 00:28:00,320
you need to upload it to a repository

766
00:27:57,919 --> 00:28:02,240
and then you need to deploy it and

767
00:28:00,320 --> 00:28:04,720
that's literally the same as you need to

768
00:28:02,240 --> 00:28:06,320
do in every other language

769
00:28:04,720 --> 00:28:08,799
hopefully there's more and more testing

770
00:28:06,320 --> 00:28:12,240
but yeah

771
00:28:08,799 --> 00:28:14,399
and every artifact is like that your

772
00:28:12,240 --> 00:28:15,600
application code your infra code your

773
00:28:14,399 --> 00:28:18,399
metadata

774
00:28:15,600 --> 00:28:19,360
and your tests they all are artifacts

775
00:28:18,399 --> 00:28:24,000
that

776
00:28:19,360 --> 00:28:24,000
you want to ship through a pipeline

777
00:28:24,799 --> 00:28:28,320
i want to have patterns where you

778
00:28:26,159 --> 00:28:30,720
basically have

779
00:28:28,320 --> 00:28:31,520
development sorry development acceptance

780
00:28:30,720 --> 00:28:34,399
production

781
00:28:31,520 --> 00:28:35,520
or whatever values you want to pull

782
00:28:34,399 --> 00:28:38,320
things from the internet

783
00:28:35,520 --> 00:28:40,879
you want to have local mirrors for every

784
00:28:38,320 --> 00:28:44,639
single artifact

785
00:28:40,880 --> 00:28:47,120
so upload to repository

786
00:28:44,640 --> 00:28:48,559
test and if you're doing infrastructure

787
00:28:47,120 --> 00:28:50,000
you do things like you

788
00:28:48,559 --> 00:28:51,840
check your puppetrans if you're still

789
00:28:50,000 --> 00:28:53,679
clean you check if your

790
00:28:51,840 --> 00:28:58,000
ansible stuff all still works it's not

791
00:28:53,679 --> 00:28:59,360
breaking you check your monitoring

792
00:28:58,000 --> 00:29:02,080
like your smoke test with the

793
00:28:59,360 --> 00:29:04,799
applications

794
00:29:02,080 --> 00:29:06,720
and your monitoring is crucial you

795
00:29:04,799 --> 00:29:08,480
deploy a host you deploy an application

796
00:29:06,720 --> 00:29:10,799
to a host

797
00:29:08,480 --> 00:29:12,159
you leverage infrastructures code so you

798
00:29:10,799 --> 00:29:14,720
automatically reconfigure your

799
00:29:12,159 --> 00:29:14,720
monitoring

800
00:29:14,799 --> 00:29:18,639
you check your monitoring and it should

801
00:29:16,559 --> 00:29:20,320
stay healthy and if you see that your

802
00:29:18,640 --> 00:29:22,000
monitoring breaks

803
00:29:20,320 --> 00:29:23,600
then are your replication broke or your

804
00:29:22,000 --> 00:29:25,760
complete system broke and you should not

805
00:29:23,600 --> 00:29:29,039
push to the next environment

806
00:29:25,760 --> 00:29:30,320
and all of this is automated

807
00:29:29,039 --> 00:29:32,240
because that's what infrastructure's

808
00:29:30,320 --> 00:29:36,720
code brings you

809
00:29:32,240 --> 00:29:38,240
those are the side effects so

810
00:29:36,720 --> 00:29:40,000
you promote to the next environment when

811
00:29:38,240 --> 00:29:42,320
your monitoring has decided

812
00:29:40,000 --> 00:29:44,000
things have not been broken and you

813
00:29:42,320 --> 00:29:45,439
increase testing

814
00:29:44,000 --> 00:29:48,000
this is what we do for applications

815
00:29:45,440 --> 00:29:50,960
right this is what we've been doing for

816
00:29:48,000 --> 00:29:50,960
applications for years

817
00:29:51,760 --> 00:29:57,600
and then you go to the next target and

818
00:29:54,799 --> 00:29:57,600
the next target

819
00:29:58,000 --> 00:30:01,520
and the more of these environments you

820
00:29:59,840 --> 00:30:04,720
need to build

821
00:30:01,520 --> 00:30:06,639
the more you end up with how do i do

822
00:30:04,720 --> 00:30:09,279
this

823
00:30:06,640 --> 00:30:11,600
the way we do this still and we're still

824
00:30:09,279 --> 00:30:15,039
really happy with this is we have

825
00:30:11,600 --> 00:30:17,439
a large jenkins job dsl code base

826
00:30:15,039 --> 00:30:19,120
where we do pipeliners code for our

827
00:30:17,440 --> 00:30:19,919
infrastructures code we basically have

828
00:30:19,120 --> 00:30:23,199
one large c

829
00:30:19,919 --> 00:30:23,760
job that pulls in a bunch of config

830
00:30:23,200 --> 00:30:26,159
files

831
00:30:23,760 --> 00:30:28,480
for all the projects we have and it

832
00:30:26,159 --> 00:30:30,080
generates our pipelines on demand based

833
00:30:28,480 --> 00:30:31,760
on a config file

834
00:30:30,080 --> 00:30:33,678
but we have a bunch of libraries that we

835
00:30:31,760 --> 00:30:36,960
reuse for every single pattern

836
00:30:33,679 --> 00:30:39,520
a checkout job is a checkout job because

837
00:30:36,960 --> 00:30:40,960
if it's java code or it's php code or if

838
00:30:39,520 --> 00:30:43,520
it's

839
00:30:40,960 --> 00:30:44,240
puppet code or terraform code i don't

840
00:30:43,520 --> 00:30:47,840
care

841
00:30:44,240 --> 00:30:50,159
it is a checkout job

842
00:30:47,840 --> 00:30:51,360
everything we deploy is an rpm whether

843
00:30:50,159 --> 00:30:54,080
it's puppet code

844
00:30:51,360 --> 00:30:55,678
whether it's java code or python code

845
00:30:54,080 --> 00:30:57,678
they're all the same

846
00:30:55,679 --> 00:30:59,440
and the patterns i build in there like

847
00:30:57,679 --> 00:31:00,960
all the metadata i want to know

848
00:30:59,440 --> 00:31:03,200
where it's coming from which build it

849
00:31:00,960 --> 00:31:05,039
was all of that information

850
00:31:03,200 --> 00:31:06,799
is the same it's the same library so

851
00:31:05,039 --> 00:31:10,480
what we created is a library

852
00:31:06,799 --> 00:31:12,639
that's being used by both the developers

853
00:31:10,480 --> 00:31:15,440
and the ops folks to build their whole

854
00:31:12,640 --> 00:31:17,120
ci cd infrastructure

855
00:31:15,440 --> 00:31:20,640
and they have a shared language a common

856
00:31:17,120 --> 00:31:20,639
language that works for everything

857
00:31:20,799 --> 00:31:26,000
there's a mix of pipeline dsl and job

858
00:31:23,120 --> 00:31:28,799
dsl engineering that works

859
00:31:26,000 --> 00:31:30,399
but it's the same for everybody and

860
00:31:28,799 --> 00:31:32,639
that's the strength

861
00:31:30,399 --> 00:31:33,918
it's not one team using one thing and

862
00:31:32,640 --> 00:31:35,440
then the other team going like

863
00:31:33,919 --> 00:31:37,919
oh i cannot help you i don't know how

864
00:31:35,440 --> 00:31:37,919
this works

865
00:31:38,720 --> 00:31:42,320
and we even come to the point where we

866
00:31:40,000 --> 00:31:43,360
can in parallel test multiple versions

867
00:31:42,320 --> 00:31:44,879
of our code base

868
00:31:43,360 --> 00:31:46,479
because we spin them up in containers

869
00:31:44,880 --> 00:31:49,200
and we have different versions

870
00:31:46,480 --> 00:31:50,720
of our php stack but also of our puppet

871
00:31:49,200 --> 00:31:53,760
code base

872
00:31:50,720 --> 00:31:55,200
and their test and we don't look

873
00:31:53,760 --> 00:31:57,200
at the next version because we don't

874
00:31:55,200 --> 00:31:58,880
care yet if it's going to break

875
00:31:57,200 --> 00:32:01,840
but if it doesn't break we know that we

876
00:31:58,880 --> 00:32:01,840
can upgrade

877
00:32:02,960 --> 00:32:06,960
and then people come here but we're in

878
00:32:04,480 --> 00:32:06,960
the cloud

879
00:32:08,960 --> 00:32:13,279
i don't see the difference i mean you're

880
00:32:11,760 --> 00:32:14,320
still going to ride a bunch of things

881
00:32:13,279 --> 00:32:18,000
you're still gonna write

882
00:32:14,320 --> 00:32:20,639
terraform or chef whether you're on-prem

883
00:32:18,000 --> 00:32:22,000
or in the clouds you might be talking to

884
00:32:20,640 --> 00:32:23,600
a different api

885
00:32:22,000 --> 00:32:25,279
might not be talking to the openstack

886
00:32:23,600 --> 00:32:28,480
api but to ec2

887
00:32:25,279 --> 00:32:30,000
and if you need to configure vpns you're

888
00:32:28,480 --> 00:32:32,000
going to need to configure vpcs on the

889
00:32:30,000 --> 00:32:34,080
other side you're going to have

890
00:32:32,000 --> 00:32:35,600
monitoring security in there so all of

891
00:32:34,080 --> 00:32:37,678
those patterns which you've been doing

892
00:32:35,600 --> 00:32:40,719
whether you have a terraform pipeline or

893
00:32:37,679 --> 00:32:41,440
a puppet pipeline doesn't matter it's

894
00:32:40,720 --> 00:32:44,399
the idea

895
00:32:41,440 --> 00:32:47,679
you have to have the same tool base you

896
00:32:44,399 --> 00:32:50,879
have to have the same ecosystem

897
00:32:47,679 --> 00:32:50,880
but we're using containers

898
00:32:50,960 --> 00:32:54,880
there's nothing different you need to

899
00:32:53,440 --> 00:32:56,799
test this

900
00:32:54,880 --> 00:32:58,880
even stronger we need to figure out

901
00:32:56,799 --> 00:33:00,639
better ways how to deploy this these

902
00:32:58,880 --> 00:33:03,679
days because

903
00:33:00,640 --> 00:33:05,360
booker pull yolo and we

904
00:33:03,679 --> 00:33:07,360
still have to ask all of these questions

905
00:33:05,360 --> 00:33:09,279
again

906
00:33:07,360 --> 00:33:11,120
because people who have been just doing

907
00:33:09,279 --> 00:33:11,679
docker on their laptop their container

908
00:33:11,120 --> 00:33:14,080
naive

909
00:33:11,679 --> 00:33:16,880
they haven't figured out that this is

910
00:33:14,080 --> 00:33:20,480
the gap they need to cross

911
00:33:16,880 --> 00:33:22,159
so there is a huge challenge for us out

912
00:33:20,480 --> 00:33:23,519
there

913
00:33:22,159 --> 00:33:25,519
because we're an open source conference

914
00:33:23,519 --> 00:33:28,399
and i'm still struggling

915
00:33:25,519 --> 00:33:30,080
maybe you don't on how to do ci cd on my

916
00:33:28,399 --> 00:33:30,879
whole cube ecosystem i want to be able

917
00:33:30,080 --> 00:33:33,519
to spin up

918
00:33:30,880 --> 00:33:34,399
cube stacks automatically out of the box

919
00:33:33,519 --> 00:33:37,600
hands off

920
00:33:34,399 --> 00:33:38,719
from source code not the cube source

921
00:33:37,600 --> 00:33:42,000
code but

922
00:33:38,720 --> 00:33:42,000
some infrastructure code

923
00:33:42,080 --> 00:33:47,039
it's easy if you do it in a public light

924
00:33:43,840 --> 00:33:47,039
anybody get a solution for me

925
00:33:50,880 --> 00:33:57,039
it's way too early on a sunday morning

926
00:33:53,360 --> 00:33:57,039
or nobody actually has a solution

927
00:33:57,120 --> 00:34:03,199
so how do we do this

928
00:34:01,039 --> 00:34:05,279
how do we do this in a container

929
00:34:03,200 --> 00:34:08,159
ecosystem that is the challenge that i

930
00:34:05,279 --> 00:34:08,159
have for you folks

931
00:34:08,719 --> 00:34:14,319
what i still see is people having

932
00:34:11,760 --> 00:34:16,000
30 000 lines of bash calling cube cuddle

933
00:34:14,320 --> 00:34:19,679
or calling help

934
00:34:16,000 --> 00:34:23,199
that's not how we want to work

935
00:34:19,679 --> 00:34:24,560
that's basically going back 10 years

936
00:34:23,199 --> 00:34:26,399
and not having tests because how do we

937
00:34:24,560 --> 00:34:30,320
test this

938
00:34:26,399 --> 00:34:33,598
so infrastructures code to me

939
00:34:30,320 --> 00:34:34,639
is the first thing you need to do if you

940
00:34:33,599 --> 00:34:38,159
want to achieve

941
00:34:34,639 --> 00:34:40,560
continuous delivery and if you want to

942
00:34:38,159 --> 00:34:44,000
have full control over the whole stack

943
00:34:40,560 --> 00:34:45,359
it just got harder if you add containers

944
00:34:44,000 --> 00:34:48,879
to that

945
00:34:45,359 --> 00:34:50,799
but it still is something

946
00:34:48,879 --> 00:34:53,199
that you need to spend time on because

947
00:34:50,800 --> 00:34:55,599
you want to be able to understand

948
00:34:53,199 --> 00:34:57,520
the same patterns and the same tooling

949
00:34:55,599 --> 00:35:00,240
that the developers that are

950
00:34:57,520 --> 00:35:03,280
building applications on top of it need

951
00:35:00,240 --> 00:35:06,078
to understand

952
00:35:03,280 --> 00:35:07,359
and i hope the three cases kind of prove

953
00:35:06,079 --> 00:35:09,599
that

954
00:35:07,359 --> 00:35:09,598
so

955
00:35:10,400 --> 00:35:13,920
now it's time for the rest of us then

956
00:35:14,839 --> 00:35:17,839
questions

957
00:35:28,640 --> 00:35:31,680
how do you prevent organizational

958
00:35:31,040 --> 00:35:35,279
gravity

959
00:35:31,680 --> 00:35:35,839
from taking over okay so the question

960
00:35:35,280 --> 00:35:37,599
was

961
00:35:35,839 --> 00:35:39,040
in case two it seems to be an

962
00:35:37,599 --> 00:35:41,119
organizational problem

963
00:35:39,040 --> 00:35:43,040
how do you solve the problem that if you

964
00:35:41,119 --> 00:35:44,800
move the people back in the team

965
00:35:43,040 --> 00:35:46,800
that are just get absorbed by the

966
00:35:44,800 --> 00:35:49,920
organization again that's right

967
00:35:46,800 --> 00:35:50,400
um well it always is an organizational

968
00:35:49,920 --> 00:35:52,480
problem

969
00:35:50,400 --> 00:35:53,839
uh it always is a cultural problem and

970
00:35:52,480 --> 00:35:58,240
the way you solve that

971
00:35:53,839 --> 00:35:59,759
is by having c-level buy-in um we

972
00:35:58,240 --> 00:36:02,078
pulled those people out and the only way

973
00:35:59,760 --> 00:36:04,800
we could pull them out was because

974
00:36:02,079 --> 00:36:06,720
sea level was actually pushing this and

975
00:36:04,800 --> 00:36:10,079
agreeing on this

976
00:36:06,720 --> 00:36:13,598
so when they came back to their teams

977
00:36:10,079 --> 00:36:15,599
they were enabled and they were

978
00:36:13,599 --> 00:36:17,040
blocked from doing the old work again

979
00:36:15,599 --> 00:36:20,480
but they were supposed to

980
00:36:17,040 --> 00:36:23,359
help the people and help their teams

981
00:36:20,480 --> 00:36:25,440
and because they have been gone for

982
00:36:23,359 --> 00:36:27,359
close to three months

983
00:36:25,440 --> 00:36:28,720
bit more even there were people who

984
00:36:27,359 --> 00:36:30,640
actually filled in the gaps

985
00:36:28,720 --> 00:36:32,399
of the problems they were solving before

986
00:36:30,640 --> 00:36:33,118
so they weren't being bothered that much

987
00:36:32,400 --> 00:36:34,720
anymore

988
00:36:33,119 --> 00:36:36,560
with their old jobs they were still for

989
00:36:34,720 --> 00:36:37,919
the highly critical things that were

990
00:36:36,560 --> 00:36:38,320
still being consulted and we're still

991
00:36:37,920 --> 00:36:41,200
being

992
00:36:38,320 --> 00:36:42,720
asked to help but it wasn't their daily

993
00:36:41,200 --> 00:36:44,720
job anymore because they

994
00:36:42,720 --> 00:36:46,160
well they were gone for three months so

995
00:36:44,720 --> 00:36:48,720
some other people had taken over a

996
00:36:46,160 --> 00:36:48,720
couple of things

997
00:36:51,839 --> 00:36:55,839
other questions

998
00:36:56,880 --> 00:36:59,280
in the back

999
00:37:06,000 --> 00:37:09,119
so the question is that if he

1000
00:37:07,520 --> 00:37:11,119
understands correctly that i suggest to

1001
00:37:09,119 --> 00:37:15,200
use git submodules for dependency module

1002
00:37:11,119 --> 00:37:15,200
management and the answer is yes

1003
00:37:16,800 --> 00:37:21,920
the main reason to that is because

1004
00:37:20,000 --> 00:37:24,720
all the other tools around basically try

1005
00:37:21,920 --> 00:37:27,280
to reinvent exactly the same thing

1006
00:37:24,720 --> 00:37:28,399
and the second reason to that is because

1007
00:37:27,280 --> 00:37:31,119
if you do that

1008
00:37:28,400 --> 00:37:33,040
you get exactly the same pattern that

1009
00:37:31,119 --> 00:37:33,440
the developers will be using to do the

1010
00:37:33,040 --> 00:37:35,359
same

1011
00:37:33,440 --> 00:37:37,760
i mean i've seen a bunch of user

1012
00:37:35,359 --> 00:37:41,440
interfaces built on top of these things

1013
00:37:37,760 --> 00:37:42,960
which are all horrible and

1014
00:37:41,440 --> 00:37:44,800
what i've seen is once that people start

1015
00:37:42,960 --> 00:37:45,440
doing this doesn't matter which language

1016
00:37:44,800 --> 00:37:47,040
they use

1017
00:37:45,440 --> 00:37:49,359
they start to care about where their

1018
00:37:47,040 --> 00:37:52,079
source code is they start to care about

1019
00:37:49,359 --> 00:37:53,598
oh i'm not pulling in random things from

1020
00:37:52,079 --> 00:37:55,040
the internet that might be disappearing

1021
00:37:53,599 --> 00:37:58,320
when somebody actually

1022
00:37:55,040 --> 00:37:59,680
uh decides to unpublish a node module um

1023
00:37:58,320 --> 00:38:00,480
no they have the code locally they can

1024
00:37:59,680 --> 00:38:04,319
rebuild

1025
00:38:00,480 --> 00:38:06,720
so people start to understand

1026
00:38:04,320 --> 00:38:08,160
what they're building and also they know

1027
00:38:06,720 --> 00:38:09,118
that when they go back in time and check

1028
00:38:08,160 --> 00:38:10,879
out another commit

1029
00:38:09,119 --> 00:38:13,440
they will have close to reproducible

1030
00:38:10,880 --> 00:38:14,960
builds combine that with being able to

1031
00:38:13,440 --> 00:38:16,560
build your infrastructure and your ci

1032
00:38:14,960 --> 00:38:18,000
infrastructure

1033
00:38:16,560 --> 00:38:19,599
the fact that they can do exactly the

1034
00:38:18,000 --> 00:38:19,920
same means that at some point in time i

1035
00:38:19,599 --> 00:38:22,160
can

1036
00:38:19,920 --> 00:38:23,599
actually theoretically because i've

1037
00:38:22,160 --> 00:38:25,440
never been able

1038
00:38:23,599 --> 00:38:27,359
to spend the time on that go back and

1039
00:38:25,440 --> 00:38:28,800
say i want to have the built ecosystem

1040
00:38:27,359 --> 00:38:30,319
we had three months ago because i have

1041
00:38:28,800 --> 00:38:31,599
the versions checked out and i have the

1042
00:38:30,320 --> 00:38:34,000
repositories checked out

1043
00:38:31,599 --> 00:38:35,839
and then i want to be able to build the

1044
00:38:34,000 --> 00:38:37,359
software we built then

1045
00:38:35,839 --> 00:38:39,200
you have everything in place it's not

1046
00:38:37,359 --> 00:38:40,799
going to be trivial because typically

1047
00:38:39,200 --> 00:38:41,439
you don't have enough resources enough

1048
00:38:40,800 --> 00:38:44,720
time

1049
00:38:41,440 --> 00:38:47,200
but in theory that's what you should be

1050
00:38:44,720 --> 00:38:47,200
able to do

1051
00:38:51,839 --> 00:38:55,440
yeah yeah it works very nice with open

1052
00:38:54,320 --> 00:38:57,599
source because you have

1053
00:38:55,440 --> 00:39:01,839
the sourcing keep copy this is an open

1054
00:38:57,599 --> 00:39:01,839
source conference

1055
00:39:08,880 --> 00:39:14,960
do you refer to the infrastructure

1056
00:39:12,320 --> 00:39:14,960
deployment of

1057
00:39:15,280 --> 00:39:19,040
so the question is on this slide the

1058
00:39:17,280 --> 00:39:20,880
container ecosystem is nowhere close to

1059
00:39:19,040 --> 00:39:24,079
the level of automation reproducing

1060
00:39:20,880 --> 00:39:26,640
reproducibility bar used on vms um

1061
00:39:24,079 --> 00:39:27,680
and if i want to talk about application

1062
00:39:26,640 --> 00:39:29,680
deployment or

1063
00:39:27,680 --> 00:39:32,480
the actual ecosystem and to me the

1064
00:39:29,680 --> 00:39:32,480
answer is both

1065
00:39:32,560 --> 00:39:35,599
i'm still looking and i've been looking

1066
00:39:34,079 --> 00:39:39,440
for close to

1067
00:39:35,599 --> 00:39:40,960
four years for a fully reproducible

1068
00:39:39,440 --> 00:39:42,800
automated way to deploy

1069
00:39:40,960 --> 00:39:44,800
a full cube stack with everything in the

1070
00:39:42,800 --> 00:39:47,040
picture

1071
00:39:44,800 --> 00:39:49,920
most of the things that i see just pull

1072
00:39:47,040 --> 00:39:52,560
random things of the internet

1073
00:39:49,920 --> 00:39:53,280
totally not reproducible that's one part

1074
00:39:52,560 --> 00:39:54,960
of the problem

1075
00:39:53,280 --> 00:39:56,960
the ones that do work are really cloud

1076
00:39:54,960 --> 00:39:58,000
focused they only support aws or

1077
00:39:56,960 --> 00:39:59,839
whatever

1078
00:39:58,000 --> 00:40:01,680
and not on-premise deployment and then

1079
00:39:59,839 --> 00:40:04,240
on the other side on the application

1080
00:40:01,680 --> 00:40:05,839
level we have a bunch of package

1081
00:40:04,240 --> 00:40:09,520
management tools that are

1082
00:40:05,839 --> 00:40:10,240
ok ish but configuration of the

1083
00:40:09,520 --> 00:40:14,880
applications

1084
00:40:10,240 --> 00:40:16,720
inside there's nothing

1085
00:40:14,880 --> 00:40:18,319
helm is a package manager it's not a

1086
00:40:16,720 --> 00:40:21,279
conflict management tool and that's the

1087
00:40:18,319 --> 00:40:21,279
closest thing to react

1088
00:40:22,960 --> 00:40:26,560
know if that's reality overall solution

1089
00:40:24,960 --> 00:40:29,680
but with that we can manage

1090
00:40:26,560 --> 00:40:32,319
the uh for the different stages

1091
00:40:29,680 --> 00:40:33,118
uh based on the kit based on the hit

1092
00:40:32,319 --> 00:40:35,599
commit which

1093
00:40:33,119 --> 00:40:36,480
which is a docker docker image and then

1094
00:40:35,599 --> 00:40:39,520
you can

1095
00:40:36,480 --> 00:40:40,800
exactly say same master okay this image

1096
00:40:39,520 --> 00:40:42,160
is there this is which is there with

1097
00:40:40,800 --> 00:40:44,319
this configuration and you can

1098
00:40:42,160 --> 00:40:45,520
tweak not only in harm but in home file

1099
00:40:44,319 --> 00:40:49,440
as well

1100
00:40:45,520 --> 00:40:53,839
for different different environments

1101
00:40:49,440 --> 00:40:53,839
so how long is the comment line you used

1102
00:40:56,400 --> 00:41:07,520
[Applause]

1103
00:41:04,839 --> 00:41:09,599
sorry

1104
00:41:07,520 --> 00:41:09,599
you

