1
00:00:05,279 --> 00:00:09,679
welcome to the fosum 2020 distributions

2
00:00:07,680 --> 00:00:11,440
dev room our next talk is software

3
00:00:09,679 --> 00:00:12,320
distribution new points of failure in a

4
00:00:11,440 --> 00:00:17,920
censored world

5
00:00:12,320 --> 00:00:17,920
with alexander patrickoff thank you

6
00:00:19,039 --> 00:00:22,320
let let me start by talking a bit about

7
00:00:21,600 --> 00:00:24,800
myself

8
00:00:22,320 --> 00:00:26,160
i am a freelancer i work from home

9
00:00:24,800 --> 00:00:28,480
previously i worked

10
00:00:26,160 --> 00:00:30,000
for a certain company as a software

11
00:00:28,480 --> 00:00:33,120
architect and i am giving this

12
00:00:30,000 --> 00:00:36,079
talk as a software architect

13
00:00:33,120 --> 00:00:38,000
so the audience of this talk is people

14
00:00:36,079 --> 00:00:39,120
responsible for any kind of code

15
00:00:38,000 --> 00:00:42,079
ecosystems

16
00:00:39,120 --> 00:00:43,680
it is not a secret anymore that

17
00:00:42,079 --> 00:00:45,760
programming language modules

18
00:00:43,680 --> 00:00:47,120
operating system packages and all the

19
00:00:45,760 --> 00:00:50,960
other source of code

20
00:00:47,120 --> 00:00:55,760
are now distributed from the internet

21
00:00:50,960 --> 00:00:59,600
not from the cd-rom and

22
00:00:55,760 --> 00:01:02,320
people create new such ecosystems

23
00:00:59,600 --> 00:01:04,000
not every day but close to it and the

24
00:01:02,320 --> 00:01:07,439
purpose of this talk is to give

25
00:01:04,000 --> 00:01:08,320
some guidance to avoid a mistake that

26
00:01:07,439 --> 00:01:11,759
would

27
00:01:08,320 --> 00:01:12,479
result in this ecosystem eventually

28
00:01:11,760 --> 00:01:15,520
becoming

29
00:01:12,479 --> 00:01:17,520
only for us and europe

30
00:01:15,520 --> 00:01:19,600
so we also need to clear some legal

31
00:01:17,520 --> 00:01:20,798
stuff technical opinions expressed in

32
00:01:19,600 --> 00:01:24,240
this talk on my own

33
00:01:20,799 --> 00:01:26,320
political opinions ah maybe maybe not

34
00:01:24,240 --> 00:01:27,920
and i don't represent any of the

35
00:01:26,320 --> 00:01:32,079
projects mentioned

36
00:01:27,920 --> 00:01:35,280
in this presentation so let's start with

37
00:01:32,079 --> 00:01:39,520
a good interview question for a

38
00:01:35,280 --> 00:01:42,640
new developer so what happens if you

39
00:01:39,520 --> 00:01:45,920
try to clone a git repository or install

40
00:01:42,640 --> 00:01:46,799
an operating system package or something

41
00:01:45,920 --> 00:01:49,840
from npm

42
00:01:46,799 --> 00:01:52,320
what happens at the network level

43
00:01:49,840 --> 00:01:53,759
the next question what would go wrong

44
00:01:52,320 --> 00:01:55,839
and finally

45
00:01:53,759 --> 00:01:57,280
what actually went wrong during the

46
00:01:55,840 --> 00:02:00,719
recording history

47
00:01:57,280 --> 00:02:02,399
let me also stress uh okay

48
00:02:00,719 --> 00:02:04,640
let me also give let me first give the

49
00:02:02,399 --> 00:02:08,318
answer to the network part so

50
00:02:04,640 --> 00:02:10,639
first the client give creates a dns

51
00:02:08,318 --> 00:02:13,839
request to the isp's

52
00:02:10,639 --> 00:02:15,599
dns server the dns server does the name

53
00:02:13,840 --> 00:02:18,000
resolution magic by sending more packets

54
00:02:15,599 --> 00:02:22,000
to the authoritative name servers

55
00:02:18,000 --> 00:02:24,879
then once the client gets the reply

56
00:02:22,000 --> 00:02:26,239
it initiates a tcp connection then more

57
00:02:24,879 --> 00:02:29,519
high-level protocols

58
00:02:26,239 --> 00:02:32,080
go on the wires such as tls or http

59
00:02:29,520 --> 00:02:33,599
and finally the package is installed you

60
00:02:32,080 --> 00:02:36,080
see lots of moving parts

61
00:02:33,599 --> 00:02:37,280
so obviously lots of places that could

62
00:02:36,080 --> 00:02:41,200
go wrong

63
00:02:37,280 --> 00:02:42,160
and let's first discuss why it is

64
00:02:41,200 --> 00:02:45,040
important

65
00:02:42,160 --> 00:02:46,000
i'll bring an example from china five

66
00:02:45,040 --> 00:02:50,640
years ago

67
00:02:46,000 --> 00:02:53,200
xcode download which is an apple tool

68
00:02:50,640 --> 00:02:55,119
that download was too slow or in some

69
00:02:53,200 --> 00:02:58,319
places even completely broken

70
00:02:55,120 --> 00:03:01,599
and this forced developers in china to

71
00:02:58,319 --> 00:03:04,238
get xcode from unofficial sources

72
00:03:01,599 --> 00:03:07,359
and one of those unofficial sources

73
00:03:04,239 --> 00:03:11,599
replaced the original xcode package

74
00:03:07,360 --> 00:03:14,319
with with a modified one that injected

75
00:03:11,599 --> 00:03:14,959
malware into software that was built

76
00:03:14,319 --> 00:03:18,799
with that

77
00:03:14,959 --> 00:03:20,879
modified version of xcode so that's how

78
00:03:18,800 --> 00:03:24,959
a simple availability problem has

79
00:03:20,879 --> 00:03:24,959
evolved into a bigger security issue

80
00:03:25,120 --> 00:03:31,440
well as i said there are many

81
00:03:28,319 --> 00:03:33,280
moving parts there are many

82
00:03:31,440 --> 00:03:35,640
trailer modes in the network broken

83
00:03:33,280 --> 00:03:39,120
cables overloaded networks

84
00:03:35,640 --> 00:03:42,399
misconfigurations the list is

85
00:03:39,120 --> 00:03:44,560
of course incomplete but as we all know

86
00:03:42,400 --> 00:03:46,720
internet usually works because

87
00:03:44,560 --> 00:03:48,720
resilience and redundancy are built into

88
00:03:46,720 --> 00:03:50,560
its infrastructure

89
00:03:48,720 --> 00:03:52,239
and even more importantly there are

90
00:03:50,560 --> 00:03:55,760
humans responsible

91
00:03:52,239 --> 00:03:55,760
for fixing whatever is broken

92
00:03:56,799 --> 00:04:01,040
so now there is a new kind of network

93
00:04:00,159 --> 00:04:04,560
failure

94
00:04:01,040 --> 00:04:08,640
governments do not want their citizens

95
00:04:04,560 --> 00:04:12,319
to be able to see certain information

96
00:04:08,640 --> 00:04:14,399
so they pass the laws that

97
00:04:12,319 --> 00:04:16,959
say this kind of information should not

98
00:04:14,400 --> 00:04:20,000
be accessible to

99
00:04:16,959 --> 00:04:23,280
citizens and access to websites

100
00:04:20,000 --> 00:04:23,280
containing that information

101
00:04:23,520 --> 00:04:30,560
for example information about drug abuse

102
00:04:28,639 --> 00:04:32,560
should uh so such sites should be

103
00:04:30,560 --> 00:04:35,520
blocked so they

104
00:04:32,560 --> 00:04:36,320
create centralized lists of sites to be

105
00:04:35,520 --> 00:04:38,320
blocked

106
00:04:36,320 --> 00:04:39,759
they distribute the search list to the

107
00:04:38,320 --> 00:04:42,159
internet service providers

108
00:04:39,759 --> 00:04:44,240
the internet service providers block

109
00:04:42,160 --> 00:04:47,600
those sites

110
00:04:44,240 --> 00:04:49,120
the problem is that governments want to

111
00:04:47,600 --> 00:04:52,160
restrict

112
00:04:49,120 --> 00:04:55,199
such information at all costs so

113
00:04:52,160 --> 00:04:58,800
in russia it happens since

114
00:04:55,199 --> 00:05:01,520
2012 let's see which sites

115
00:04:58,800 --> 00:05:02,960
you will not be able to access or if you

116
00:05:01,520 --> 00:05:03,590
travel in the past you will not be able

117
00:05:02,960 --> 00:05:04,719
to access

118
00:05:03,590 --> 00:05:07,679
[Music]

119
00:05:04,720 --> 00:05:07,680
so you see it's

120
00:05:08,160 --> 00:05:12,080
not only sites that contain information

121
00:05:10,880 --> 00:05:16,080
on drug abuse

122
00:05:12,080 --> 00:05:19,440
it's also sites that distribute software

123
00:05:16,080 --> 00:05:20,639
there are blogs there are standards

124
00:05:19,440 --> 00:05:24,639
documents

125
00:05:20,639 --> 00:05:27,840
there are bug backtrackers

126
00:05:24,639 --> 00:05:29,600
there are no laws that prohibit citizens

127
00:05:27,840 --> 00:05:30,960
from seeing such information

128
00:05:29,600 --> 00:05:34,000
nevertheless such

129
00:05:30,960 --> 00:05:37,520
sites are blocked well

130
00:05:34,000 --> 00:05:39,440
on some isps some of the sites

131
00:05:37,520 --> 00:05:40,799
are actually accessible that's because

132
00:05:39,440 --> 00:05:43,919
different isps

133
00:05:40,800 --> 00:05:46,000
use different block technologies

134
00:05:43,919 --> 00:05:47,120
so those sites on the previous slide are

135
00:05:46,000 --> 00:05:50,160
not the targets

136
00:05:47,120 --> 00:05:52,880
of the censorship

137
00:05:50,160 --> 00:05:54,560
they are victims of let me call that

138
00:05:52,880 --> 00:05:57,440
technical overblocking

139
00:05:54,560 --> 00:05:58,000
let me explain this phenomenon why is

140
00:05:57,440 --> 00:06:01,120
this

141
00:05:58,000 --> 00:06:02,960
blocked it is not technically possible

142
00:06:01,120 --> 00:06:04,880
to pass this through without also

143
00:06:02,960 --> 00:06:05,680
blocking that also without also passing

144
00:06:04,880 --> 00:06:08,719
through that

145
00:06:05,680 --> 00:06:11,680
and the government explicitly tells isps

146
00:06:08,720 --> 00:06:14,319
to block that if you don't lock that you

147
00:06:11,680 --> 00:06:17,120
will get your rsp license removed

148
00:06:14,319 --> 00:06:18,319
so this is also unfortunately blocked

149
00:06:17,120 --> 00:06:21,520
the problem is if

150
00:06:18,319 --> 00:06:25,120
this is part of your infrastructure

151
00:06:21,520 --> 00:06:27,919
so how does this happen isps

152
00:06:25,120 --> 00:06:30,080
typically block stuff by ap address

153
00:06:27,919 --> 00:06:33,120
because

154
00:06:30,080 --> 00:06:36,000
in our age when everything is encrypted

155
00:06:33,120 --> 00:06:37,039
when with tls 1.3 there is even

156
00:06:36,000 --> 00:06:40,800
encrypted

157
00:06:37,039 --> 00:06:42,639
s9 they do not actually have much choice

158
00:06:40,800 --> 00:06:43,840
so share the ap addresses how does this

159
00:06:42,639 --> 00:06:47,039
happen

160
00:06:43,840 --> 00:06:47,679
most hosting is for static files some

161
00:06:47,039 --> 00:06:50,318
chips

162
00:06:47,680 --> 00:06:52,000
content delivery networks uh the dos

163
00:06:50,319 --> 00:06:53,039
protection services there are many more

164
00:06:52,000 --> 00:06:56,479
examples

165
00:06:53,039 --> 00:06:56,479
where a shared ap address

166
00:06:57,039 --> 00:07:00,960
is given to a customer finally there is

167
00:06:59,680 --> 00:07:04,160
a telegram war but

168
00:07:00,960 --> 00:07:07,039
well it's a subject for another talk so

169
00:07:04,160 --> 00:07:09,199
i will not go into that this is not

170
00:07:07,039 --> 00:07:10,479
specific to russia and china i can bring

171
00:07:09,199 --> 00:07:13,759
examples from

172
00:07:10,479 --> 00:07:15,840
iron from egypt and

173
00:07:13,759 --> 00:07:18,479
because how politicians work this can

174
00:07:15,840 --> 00:07:21,919
only get worse

175
00:07:18,479 --> 00:07:25,120
so how to deal with this breakage often

176
00:07:21,919 --> 00:07:26,639
an advice is given to use vpn tor

177
00:07:25,120 --> 00:07:28,400
or whatever other circumvention

178
00:07:26,639 --> 00:07:30,560
technology

179
00:07:28,400 --> 00:07:33,120
however i would not say that it is a

180
00:07:30,560 --> 00:07:34,960
politically acceptable answer because

181
00:07:33,120 --> 00:07:36,479
there are people who simply cannot be

182
00:07:34,960 --> 00:07:39,919
convinced to use

183
00:07:36,479 --> 00:07:41,199
any uh censorship circumvention

184
00:07:39,919 --> 00:07:43,120
technology

185
00:07:41,199 --> 00:07:44,400
uh maybe because of propaganda that only

186
00:07:43,120 --> 00:07:46,240
but guys use such tools

187
00:07:44,400 --> 00:07:48,799
maybe because it is actually illegal in

188
00:07:46,240 --> 00:07:51,919
some places

189
00:07:48,800 --> 00:07:56,479
i would also say that it is not a good

190
00:07:51,919 --> 00:07:56,479
a technically good answer if you

191
00:07:56,800 --> 00:08:01,039
have the situation when your servers are

192
00:07:58,479 --> 00:08:02,479
blocked then you have a point of failure

193
00:08:01,039 --> 00:08:05,520
in your infrastructure

194
00:08:02,479 --> 00:08:07,199
and in some cases it is actually easy to

195
00:08:05,520 --> 00:08:11,758
fix

196
00:08:07,199 --> 00:08:14,080
so for technical domains mirrors help

197
00:08:11,759 --> 00:08:14,879
mirrors are used by many linux

198
00:08:14,080 --> 00:08:18,878
distributions

199
00:08:14,879 --> 00:08:21,919
they were not designed for dealing

200
00:08:18,879 --> 00:08:24,720
with the censorship they were created

201
00:08:21,919 --> 00:08:25,758
to distribute the load to move the load

202
00:08:24,720 --> 00:08:29,680
away from the

203
00:08:25,759 --> 00:08:31,120
central server to make sure that the

204
00:08:29,680 --> 00:08:34,320
user downloads packages

205
00:08:31,120 --> 00:08:37,760
from a mirror which is near him

206
00:08:34,320 --> 00:08:41,200
which is usually faster

207
00:08:37,760 --> 00:08:44,159
so they provide the needed redundancy

208
00:08:41,200 --> 00:08:44,959
and how does it look like so in the

209
00:08:44,159 --> 00:08:48,480
installer

210
00:08:44,959 --> 00:08:51,599
of for example debian there are screens

211
00:08:48,480 --> 00:08:52,640
where you can choose the country where

212
00:08:51,600 --> 00:08:54,560
your mirror resides

213
00:08:52,640 --> 00:08:57,120
then you are presented with a list of

214
00:08:54,560 --> 00:09:01,439
mirrors in that country

215
00:08:57,120 --> 00:09:03,680
there is also an option to enter

216
00:09:01,440 --> 00:09:04,959
the address of your own mirror which can

217
00:09:03,680 --> 00:09:08,079
be unofficial

218
00:09:04,959 --> 00:09:09,760
in fedora they went even further they do

219
00:09:08,080 --> 00:09:11,279
auto detection of the fastest mirror by

220
00:09:09,760 --> 00:09:12,880
default which create a

221
00:09:11,279 --> 00:09:14,880
which creates a really great user

222
00:09:12,880 --> 00:09:17,120
experience

223
00:09:14,880 --> 00:09:18,800
so what could go wrong in this setup

224
00:09:17,120 --> 00:09:21,440
with mirrors

225
00:09:18,800 --> 00:09:22,160
so remember the slides where i listed

226
00:09:21,440 --> 00:09:24,959
the moving parts

227
00:09:22,160 --> 00:09:25,760
they are still there still everything

228
00:09:24,959 --> 00:09:29,279
can

229
00:09:25,760 --> 00:09:32,560
go wrong with any of those

230
00:09:29,279 --> 00:09:34,399
parts but it only affects the selected

231
00:09:32,560 --> 00:09:36,560
mirror

232
00:09:34,399 --> 00:09:38,000
this mirror is not the target for the

233
00:09:36,560 --> 00:09:40,319
sensor

234
00:09:38,000 --> 00:09:42,240
so actually there is one official debian

235
00:09:40,320 --> 00:09:44,480
mirror right now blocked in russia the

236
00:09:42,240 --> 00:09:46,720
spanish mirror

237
00:09:44,480 --> 00:09:46,720
so

238
00:09:47,680 --> 00:09:52,800
why here because it i don't know i i can

239
00:09:50,320 --> 00:09:52,800
look it up

240
00:09:52,959 --> 00:09:57,279
so still it is not a problem because

241
00:09:55,440 --> 00:09:59,519
there is more than

242
00:09:57,279 --> 00:10:00,640
there are more than 300 other mirrors

243
00:09:59,519 --> 00:10:03,120
debian instills

244
00:10:00,640 --> 00:10:05,279
debian is still installable in russia so

245
00:10:03,120 --> 00:10:07,360
there is no single point of failure in

246
00:10:05,279 --> 00:10:10,079
the whole ecosystem that's good

247
00:10:07,360 --> 00:10:12,160
that's i would say a perfect solution a

248
00:10:10,079 --> 00:10:15,680
perfect situation

249
00:10:12,160 --> 00:10:19,600
so but recently another

250
00:10:15,680 --> 00:10:23,120
solution to the original task of

251
00:10:19,600 --> 00:10:24,160
making sure that the the load is spread

252
00:10:23,120 --> 00:10:27,279
among

253
00:10:24,160 --> 00:10:28,959
multiple servers and the user downloads

254
00:10:27,279 --> 00:10:32,000
from a nearby server

255
00:10:28,959 --> 00:10:35,199
became popular content delivery networks

256
00:10:32,000 --> 00:10:36,160
it's a network of mirrors run by someone

257
00:10:35,200 --> 00:10:38,800
else

258
00:10:36,160 --> 00:10:40,959
so i will describe how this is different

259
00:10:38,800 --> 00:10:43,680
from the classical setup with mirrors

260
00:10:40,959 --> 00:10:44,640
i will use npm public registry as an

261
00:10:43,680 --> 00:10:46,959
example

262
00:10:44,640 --> 00:10:48,240
so let me first describe the apparent

263
00:10:46,959 --> 00:10:50,079
cdn benefits

264
00:10:48,240 --> 00:10:51,760
there is a single domain name behind the

265
00:10:50,079 --> 00:10:53,359
whole mirror network

266
00:10:51,760 --> 00:10:55,040
so there is no need for the user to

267
00:10:53,360 --> 00:10:58,399
select the mirror manually

268
00:10:55,040 --> 00:11:01,760
which is a great boost in usability

269
00:10:58,399 --> 00:11:03,519
also there is there is no need to uh

270
00:11:01,760 --> 00:11:05,519
to design the security of your system

271
00:11:03,519 --> 00:11:06,959
with untrusted mirror operators in mind

272
00:11:05,519 --> 00:11:09,360
because

273
00:11:06,959 --> 00:11:11,199
all the mirror servers are operated by a

274
00:11:09,360 --> 00:11:13,040
single legal entity

275
00:11:11,200 --> 00:11:15,120
they can even share the same as a cell

276
00:11:13,040 --> 00:11:18,880
certificate which is also

277
00:11:15,120 --> 00:11:22,000
great from the operational viewpoint

278
00:11:18,880 --> 00:11:25,279
so let's see how it works so if

279
00:11:22,000 --> 00:11:26,839
i try to install an npm package then npm

280
00:11:25,279 --> 00:11:28,880
client resolves

281
00:11:26,839 --> 00:11:30,320
registry.pmgs.org which is the default

282
00:11:28,880 --> 00:11:34,000
registry

283
00:11:30,320 --> 00:11:35,519
then it downloads the package metadata

284
00:11:34,000 --> 00:11:37,040
over https

285
00:11:35,519 --> 00:11:39,120
then it downloads the package and

286
00:11:37,040 --> 00:11:42,319
installs and it shows it

287
00:11:39,120 --> 00:11:43,279
done let's see how it looks like in the

288
00:11:42,320 --> 00:11:46,640
network

289
00:11:43,279 --> 00:11:50,560
so registry.npmjs.org

290
00:11:46,640 --> 00:11:53,120
has last time i checked there was 12

291
00:11:50,560 --> 00:11:54,638
a records which are four atv4 addresses

292
00:11:53,120 --> 00:11:58,160
and there are 12

293
00:11:54,639 --> 00:11:59,920
aaa records which are for ipv6 so the ap

294
00:11:58,160 --> 00:12:02,719
addresses belong to cloudflare

295
00:11:59,920 --> 00:12:05,040
which is a major cdn provider

296
00:12:02,720 --> 00:12:06,240
cloudslayer uses anycast so each of

297
00:12:05,040 --> 00:12:09,360
those 12

298
00:12:06,240 --> 00:12:10,480
ip addresses actually are hosted on

299
00:12:09,360 --> 00:12:13,839
multiple servers

300
00:12:10,480 --> 00:12:16,240
geographically distributed and the

301
00:12:13,839 --> 00:12:17,920
normal internet routine such as bgp

302
00:12:16,240 --> 00:12:21,680
mechanism

303
00:12:17,920 --> 00:12:22,959
ensures that ensures that the user

304
00:12:21,680 --> 00:12:26,079
really gets to the

305
00:12:22,959 --> 00:12:29,119
nearest server and downloads

306
00:12:26,079 --> 00:12:33,760
the package from there

307
00:12:29,120 --> 00:12:36,399
so how does this survive censorship

308
00:12:33,760 --> 00:12:38,160
npm is not blocked in russian so i had

309
00:12:36,399 --> 00:12:42,560
to simulate it

310
00:12:38,160 --> 00:12:44,560
by misconfiguring my router to return

311
00:12:42,560 --> 00:12:48,399
tcp reset packets

312
00:12:44,560 --> 00:12:52,160
to half of those mirrors end result

313
00:12:48,399 --> 00:12:54,480
it was possible to install packages

314
00:12:52,160 --> 00:12:56,639
it was slow because of the price because

315
00:12:54,480 --> 00:12:59,360
of the delays between their tries

316
00:12:56,639 --> 00:13:01,120
but nothing broke that's great

317
00:12:59,360 --> 00:13:02,000
especially for a system that was not

318
00:13:01,120 --> 00:13:04,399
designed

319
00:13:02,000 --> 00:13:07,200
for this use case of circumventing

320
00:13:04,399 --> 00:13:10,639
censorship in mind

321
00:13:07,200 --> 00:13:12,399
so why is it slow because it as i said

322
00:13:10,639 --> 00:13:14,560
it was for a different use case

323
00:13:12,399 --> 00:13:16,079
it was for a use case of overloaded

324
00:13:14,560 --> 00:13:19,518
server or overload

325
00:13:16,079 --> 00:13:20,239
network where adding a delay between

326
00:13:19,519 --> 00:13:23,600
requires

327
00:13:20,240 --> 00:13:27,200
does help uh also

328
00:13:23,600 --> 00:13:29,040
it helps that i blocked the servers with

329
00:13:27,200 --> 00:13:32,480
a simple disappear set

330
00:13:29,040 --> 00:13:35,680
not all sensor layer does that

331
00:13:32,480 --> 00:13:38,800
there are also cases when they helpfully

332
00:13:35,680 --> 00:13:40,239
try to present a page which says this

333
00:13:38,800 --> 00:13:43,040
site is blocked

334
00:13:40,240 --> 00:13:44,079
and they present it using an invalid

335
00:13:43,040 --> 00:13:46,719
cell certificate

336
00:13:44,079 --> 00:13:48,000
so if i try to do that with an invalid

337
00:13:46,720 --> 00:13:51,279
cell certificate

338
00:13:48,000 --> 00:13:53,680
then of course npm will fail to download

339
00:13:51,279 --> 00:13:54,639
and install packages uh this isn't

340
00:13:53,680 --> 00:13:57,519
theory fixable

341
00:13:54,639 --> 00:13:58,079
by changing npm code i'm not asking the

342
00:13:57,519 --> 00:14:00,480
npm

343
00:13:58,079 --> 00:14:02,638
maintenance to do that because it is

344
00:14:00,480 --> 00:14:05,710
well for different use case

345
00:14:02,639 --> 00:14:07,120
still this example demonstrates that

346
00:14:05,710 --> 00:14:09,839
[Music]

347
00:14:07,120 --> 00:14:10,720
the client side failover as as

348
00:14:09,839 --> 00:14:14,839
implemented

349
00:14:10,720 --> 00:14:18,079
in npm does a great job of circumventing

350
00:14:14,839 --> 00:14:20,480
censorship but

351
00:14:18,079 --> 00:14:21,839
let's also highlight one more important

352
00:14:20,480 --> 00:14:25,120
difference

353
00:14:21,839 --> 00:14:26,399
between a traditional mirror setup and

354
00:14:25,120 --> 00:14:30,079
the cdn

355
00:14:26,399 --> 00:14:33,760
let's go to china

356
00:14:30,079 --> 00:14:36,479
actually the

357
00:14:33,760 --> 00:14:37,040
inaccessible registry is a common

358
00:14:36,480 --> 00:14:39,920
problem

359
00:14:37,040 --> 00:14:41,120
in china if you go to ping dot p you can

360
00:14:39,920 --> 00:14:45,040
ping

361
00:14:41,120 --> 00:14:45,040
the registry dot

362
00:14:45,199 --> 00:14:49,680
from many places including china and you

363
00:14:48,240 --> 00:14:52,959
will see that

364
00:14:49,680 --> 00:14:53,839
in many cases there are many lost

365
00:14:52,959 --> 00:14:56,839
packets

366
00:14:53,839 --> 00:14:58,639
tcp is not designed to deal with that

367
00:14:56,839 --> 00:15:02,079
and so

368
00:14:58,639 --> 00:15:02,639
the download fails so how do chinese

369
00:15:02,079 --> 00:15:07,439
users

370
00:15:02,639 --> 00:15:10,639
use npm the answer is that they don't

371
00:15:07,440 --> 00:15:13,680
there are alternative npm registries

372
00:15:10,639 --> 00:15:17,279
in china they they claim to mirror

373
00:15:13,680 --> 00:15:18,880
the official one so that two registers

374
00:15:17,279 --> 00:15:21,040
are on the slide

375
00:15:18,880 --> 00:15:22,399
however they are not exact mirrors in

376
00:15:21,040 --> 00:15:27,599
particular they

377
00:15:22,399 --> 00:15:31,360
stripped the whole integrity checking

378
00:15:27,600 --> 00:15:34,880
json elements

379
00:15:31,360 --> 00:15:37,279
that are in the register api

380
00:15:34,880 --> 00:15:38,800
so packages installed from there cannot

381
00:15:37,279 --> 00:15:41,920
be trusted

382
00:15:38,800 --> 00:15:43,599
still chinese users use that so it's an

383
00:15:41,920 --> 00:15:46,719
incident waiting to happen

384
00:15:43,600 --> 00:15:49,600
i hope that somebody from taobao or

385
00:15:46,720 --> 00:15:51,440
people from cnp and jess is listening to

386
00:15:49,600 --> 00:15:55,440
this talk over the internet

387
00:15:51,440 --> 00:15:58,320
could you please fix it thank you

388
00:15:55,440 --> 00:16:00,079
okay so we have looked at npm there is

389
00:15:58,320 --> 00:16:03,519
another

390
00:16:00,079 --> 00:16:04,959
service that uses a content delivery

391
00:16:03,519 --> 00:16:08,000
network

392
00:16:04,959 --> 00:16:09,920
and this is flat pack i will use that

393
00:16:08,000 --> 00:16:11,519
to demonstrate that not all content

394
00:16:09,920 --> 00:16:16,639
delivery network are equal

395
00:16:11,519 --> 00:16:20,399
and you should really evaluate the setup

396
00:16:16,639 --> 00:16:20,880
so flat packs i usually download it from

397
00:16:20,399 --> 00:16:24,320
clutch

398
00:16:20,880 --> 00:16:29,360
or from flat hub flat hub uses

399
00:16:24,320 --> 00:16:29,360
fastly as a cdn and firstly

400
00:16:30,720 --> 00:16:38,000
operates a cdn

401
00:16:34,320 --> 00:16:40,800
using ac name so dl.flathub.org is the

402
00:16:38,000 --> 00:16:44,240
same name for some shared dns name

403
00:16:40,800 --> 00:16:48,719
in the firstly.net namespace

404
00:16:44,240 --> 00:16:51,839
and that loan name results in one ipv4

405
00:16:48,720 --> 00:16:53,519
and one ipv6 address

406
00:16:51,839 --> 00:16:54,959
those addresses are different for

407
00:16:53,519 --> 00:16:57,519
different clients so

408
00:16:54,959 --> 00:16:58,959
that's how they do the geographical

409
00:16:57,519 --> 00:17:02,079
spreading thing

410
00:16:58,959 --> 00:17:03,680
so they are relying on dns not on any

411
00:17:02,079 --> 00:17:06,319
custom routine

412
00:17:03,680 --> 00:17:08,959
so for the original purpose of spreading

413
00:17:06,319 --> 00:17:12,559
the load that's a valid solution

414
00:17:08,959 --> 00:17:15,039
but for the case when

415
00:17:12,559 --> 00:17:15,678
some of the infrastructure can fall

416
00:17:15,039 --> 00:17:19,199
victim

417
00:17:15,679 --> 00:17:22,160
of a sensor there are simply too many

418
00:17:19,199 --> 00:17:23,280
single points of failure here so there

419
00:17:22,160 --> 00:17:26,959
is no possibility for

420
00:17:23,280 --> 00:17:30,200
client side failover if

421
00:17:26,959 --> 00:17:31,520
the government by accident blocks

422
00:17:30,200 --> 00:17:35,280
dl.hub.org

423
00:17:31,520 --> 00:17:38,320
or that long name in fast.net namespace

424
00:17:35,280 --> 00:17:40,160
or that single ipv4 address that is

425
00:17:38,320 --> 00:17:41,918
returned to my client

426
00:17:40,160 --> 00:17:44,240
then i can no longer download packages

427
00:17:41,919 --> 00:17:47,440
from her from flat hub

428
00:17:44,240 --> 00:17:48,160
so don't do that it is easy it is too

429
00:17:47,440 --> 00:17:51,520
easy to block

430
00:17:48,160 --> 00:17:54,559
such setup by accident

431
00:17:51,520 --> 00:17:57,600
and this also applies to failures not

432
00:17:54,559 --> 00:17:59,440
caused by the government so think about

433
00:17:57,600 --> 00:18:04,000
it too

434
00:17:59,440 --> 00:18:05,520
so the takeaway from my talk would be

435
00:18:04,000 --> 00:18:07,520
if you want to implement counter

436
00:18:05,520 --> 00:18:11,679
measures against accidental

437
00:18:07,520 --> 00:18:14,559
blocking in your software ecosystem

438
00:18:11,679 --> 00:18:16,559
then please add proper redundancy please

439
00:18:14,559 --> 00:18:18,240
implement client-side failover because

440
00:18:16,559 --> 00:18:22,720
it is only the client

441
00:18:18,240 --> 00:18:26,080
or who sees their ultimate truth

442
00:18:22,720 --> 00:18:27,679
whether the server works or not then it

443
00:18:26,080 --> 00:18:29,039
would be great if you allow unofficial

444
00:18:27,679 --> 00:18:32,640
mirrors in your ecosystem

445
00:18:29,039 --> 00:18:36,400
because well that's what happened

446
00:18:32,640 --> 00:18:37,010
with npm cnp mjs is an unofficial mirror

447
00:18:36,400 --> 00:18:38,240
even though

448
00:18:37,010 --> 00:18:43,360
[Music]

449
00:18:38,240 --> 00:18:45,200
mpm does not want mirrors and

450
00:18:43,360 --> 00:18:47,520
because you have to allow unofficial

451
00:18:45,200 --> 00:18:50,400
unofficial mirrors you have to design

452
00:18:47,520 --> 00:18:52,240
the security model with them in mind so

453
00:18:50,400 --> 00:18:57,840
that's all for me

454
00:18:52,240 --> 00:18:57,840
are there any questions

455
00:19:04,160 --> 00:19:10,320
as a service provider how can one check

456
00:19:08,080 --> 00:19:11,360
if i am blocked elsewhere there is no

457
00:19:10,320 --> 00:19:16,639
way to do that

458
00:19:11,360 --> 00:19:16,639
you have to rely on reports from users

459
00:19:18,320 --> 00:19:24,240
they can still how can they talk to me

460
00:19:21,360 --> 00:19:25,039
so they can still email you because for

461
00:19:24,240 --> 00:19:26,559
example

462
00:19:25,039 --> 00:19:28,160
the servers distribution packages and

463
00:19:26,559 --> 00:19:30,320
the email servers are usually not the

464
00:19:28,160 --> 00:19:30,320
same

465
00:19:31,200 --> 00:19:39,840
other questions

466
00:19:39,919 --> 00:19:43,280
uh is there any difference in npm

467
00:19:42,640 --> 00:19:46,480
packages

468
00:19:43,280 --> 00:19:50,160
served by uh that chinese apm and the

469
00:19:46,480 --> 00:19:50,160
main npm has anybody checked that

470
00:19:50,240 --> 00:19:54,080
so i haven't checked that chinese users

471
00:19:53,039 --> 00:19:58,559
use it

472
00:19:54,080 --> 00:20:01,199
so i think i think

473
00:19:58,559 --> 00:20:03,840
that it's a good idea to test that but

474
00:20:01,200 --> 00:20:06,240
because of the

475
00:20:03,840 --> 00:20:07,120
quite complex api where each where each

476
00:20:06,240 --> 00:20:09,600
package

477
00:20:07,120 --> 00:20:12,399
has its own api endpoint it would be a

478
00:20:09,600 --> 00:20:12,399
quite difficult task

479
00:20:12,480 --> 00:20:17,039
well my only point when i worked for it

480
00:20:14,960 --> 00:20:19,200
for a chinese company

481
00:20:17,039 --> 00:20:20,400
i told them explicitly not to do that

482
00:20:19,200 --> 00:20:24,400
and installed store

483
00:20:20,400 --> 00:20:28,640
on their server and told them to use

484
00:20:24,400 --> 00:20:28,640
torx npm install something

485
00:20:28,720 --> 00:20:39,280
other questions

486
00:20:35,679 --> 00:20:49,840
no questions so we finished

487
00:20:39,280 --> 00:20:49,840
five minutes early

488
00:20:52,000 --> 00:21:00,880
thank you very much

