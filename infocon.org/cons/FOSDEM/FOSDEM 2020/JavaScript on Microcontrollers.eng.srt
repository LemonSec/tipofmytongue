1
00:00:05,279 --> 00:00:07,439
good

2
00:00:07,919 --> 00:00:16,800
so hi my name is niels

3
00:00:13,440 --> 00:00:19,920
this talk is about javascript on

4
00:00:16,800 --> 00:00:24,480
microcontrollers and

5
00:00:19,920 --> 00:00:24,480
that's yeah all right um

6
00:00:25,359 --> 00:00:35,760
doesn't work no matter

7
00:00:30,480 --> 00:00:35,760
and it doesn't work let's try again

8
00:00:36,960 --> 00:00:40,640
yes all right um today we're going to

9
00:00:39,680 --> 00:00:42,000
talk about javascript on

10
00:00:40,640 --> 00:00:44,320
microcontrollers and

11
00:00:42,000 --> 00:00:45,360
usually this talk is about 45 minutes

12
00:00:44,320 --> 00:00:47,200
long

13
00:00:45,360 --> 00:00:49,280
and we just have 25 minutes so i have to

14
00:00:47,200 --> 00:00:52,559
talk really really really fast

15
00:00:49,280 --> 00:00:53,199
or or cut out some stuff um so i removed

16
00:00:52,559 --> 00:00:56,800
all the jokes

17
00:00:53,199 --> 00:01:00,000
and the funny things i'm sorry

18
00:00:56,800 --> 00:01:01,599
this is just the boring stuff uh

19
00:01:00,000 --> 00:01:02,879
don't don't don't don't worry that is

20
00:01:01,600 --> 00:01:04,400
gonna be fine this is the meat of the

21
00:01:02,879 --> 00:01:08,000
talk it's the good stuff

22
00:01:04,400 --> 00:01:10,640
i i promise um so anyway i'm

23
00:01:08,000 --> 00:01:11,280
a mazda tech speaker and i'm a google

24
00:01:10,640 --> 00:01:14,479
developer

25
00:01:11,280 --> 00:01:18,000
expert i tweeted html5 tests

26
00:01:14,479 --> 00:01:19,840
and i love electronics so

27
00:01:18,000 --> 00:01:21,920
when i was a teenager i had this

28
00:01:19,840 --> 00:01:24,479
cardboard electronic set with all kinds

29
00:01:21,920 --> 00:01:27,600
of different components

30
00:01:24,479 --> 00:01:30,240
there it is and you could

31
00:01:27,600 --> 00:01:31,280
clip wires between springs and you could

32
00:01:30,240 --> 00:01:33,360
build a radio

33
00:01:31,280 --> 00:01:36,000
or a morse code transmitter and it's

34
00:01:33,360 --> 00:01:38,079
just absolutely fantastic

35
00:01:36,000 --> 00:01:40,159
and this is what i have now it's

36
00:01:38,079 --> 00:01:41,600
basically the same thing still

37
00:01:40,159 --> 00:01:43,040
components that you connect together

38
00:01:41,600 --> 00:01:46,079
with some wires

39
00:01:43,040 --> 00:01:48,240
and they have become much more advanced

40
00:01:46,079 --> 00:01:49,559
instead of transistors and diodes and

41
00:01:48,240 --> 00:01:51,119
resistors we now play with

42
00:01:49,560 --> 00:01:53,439
microcontrollers

43
00:01:51,119 --> 00:01:56,000
and all kinds of sensors and everything

44
00:01:53,439 --> 00:01:58,639
still works together

45
00:01:56,000 --> 00:02:01,119
but i am a web developer by trade and i

46
00:01:58,640 --> 00:02:03,040
program in javascript so

47
00:02:01,119 --> 00:02:05,280
programming microcontrollers is usually

48
00:02:03,040 --> 00:02:06,960
done in c and i don't want to

49
00:02:05,280 --> 00:02:09,598
program in c i want programming

50
00:02:06,960 --> 00:02:13,120
javascript because i know javascript

51
00:02:09,598 --> 00:02:14,640
so what if we could leverage javascript

52
00:02:13,120 --> 00:02:16,560
or program microcontrollers in

53
00:02:14,640 --> 00:02:18,559
javascript and leverage the browsers to

54
00:02:16,560 --> 00:02:20,879
connect these microcontrollers

55
00:02:18,560 --> 00:02:22,720
to the web and and let them extend urs

56
00:02:20,879 --> 00:02:26,879
capabilities

57
00:02:22,720 --> 00:02:31,440
now that is all fine and well

58
00:02:26,879 --> 00:02:33,840
but microcontrollers are slow

59
00:02:31,440 --> 00:02:35,920
they are really really slow and when i

60
00:02:33,840 --> 00:02:38,000
stay slow that really does not even

61
00:02:35,920 --> 00:02:38,879
convey the idea of how slow they

62
00:02:38,000 --> 00:02:42,720
actually are

63
00:02:38,879 --> 00:02:44,879
they are slow

64
00:02:42,720 --> 00:02:46,080
so take for example the the the

65
00:02:44,879 --> 00:02:49,040
raspberry pi

66
00:02:46,080 --> 00:02:51,360
this is the the zero w this is not a

67
00:02:49,040 --> 00:02:54,000
microcontroller this is a computer

68
00:02:51,360 --> 00:02:56,800
uh and it runs linux and and node.js and

69
00:02:54,000 --> 00:03:00,239
can run a browser like chrome or firefox

70
00:02:56,800 --> 00:03:03,120
so this is not a microcontroller

71
00:03:00,239 --> 00:03:04,080
this is this is a micro bit uh it's a

72
00:03:03,120 --> 00:03:06,239
little board for for

73
00:03:04,080 --> 00:03:07,200
school children and it runs at just 16

74
00:03:06,239 --> 00:03:10,319
megahertz

75
00:03:07,200 --> 00:03:11,599
has only 16 kilobytes of ram and it is

76
00:03:10,319 --> 00:03:13,599
slow

77
00:03:11,599 --> 00:03:16,319
but it's not even by far the slowest

78
00:03:13,599 --> 00:03:18,000
microcontroller you can buy

79
00:03:16,319 --> 00:03:20,560
but this is fast enough to run

80
00:03:18,000 --> 00:03:22,560
javascript

81
00:03:20,560 --> 00:03:25,360
so to put in context the raspberry pi is

82
00:03:22,560 --> 00:03:28,400
about 60 times faster than the micro bit

83
00:03:25,360 --> 00:03:30,159
and it has way more memory

84
00:03:28,400 --> 00:03:32,720
so the micro bit is on a completely

85
00:03:30,159 --> 00:03:34,399
different level

86
00:03:32,720 --> 00:03:35,760
but but running javascript on

87
00:03:34,400 --> 00:03:37,920
microcontrollers is actually pretty

88
00:03:35,760 --> 00:03:40,239
brilliant

89
00:03:37,920 --> 00:03:41,040
microcontrollers are actually very power

90
00:03:40,239 --> 00:03:43,200
efficient

91
00:03:41,040 --> 00:03:44,640
you can run javascript on a tiny little

92
00:03:43,200 --> 00:03:48,159
bluetooth enabled board

93
00:03:44,640 --> 00:03:51,359
and powered using a coin cell battery

94
00:03:48,159 --> 00:03:52,399
and it can run for months so slow is a

95
00:03:51,360 --> 00:03:54,239
good thing

96
00:03:52,400 --> 00:03:57,200
because when we make things faster they

97
00:03:54,239 --> 00:04:00,799
tend to require more power

98
00:03:57,200 --> 00:04:03,599
and microcontrollers are fast enough

99
00:04:00,799 --> 00:04:04,000
yes they are slow but we only have to

100
00:04:03,599 --> 00:04:07,518
solve

101
00:04:04,000 --> 00:04:09,040
very tiny problems so microcontrollers

102
00:04:07,519 --> 00:04:10,720
are fast enough for everything i'm going

103
00:04:09,040 --> 00:04:14,720
to show you today

104
00:04:10,720 --> 00:04:16,560
yeah you can't run react on it

105
00:04:14,720 --> 00:04:19,120
but yeah i wouldn't run react anywhere

106
00:04:16,560 --> 00:04:19,120
anyway so

107
00:04:21,040 --> 00:04:28,560
so that's the one joke

108
00:04:24,800 --> 00:04:30,639
so let's take a look at how we can get

109
00:04:28,560 --> 00:04:32,880
javascript on our microcontrollers

110
00:04:30,639 --> 00:04:34,720
so there there's actually an open source

111
00:04:32,880 --> 00:04:36,880
project that allows us to do this

112
00:04:34,720 --> 00:04:38,639
it's called espruino it's created by

113
00:04:36,880 --> 00:04:41,120
gordon williams

114
00:04:38,639 --> 00:04:41,919
and you can also buy hardware with

115
00:04:41,120 --> 00:04:45,040
esperino

116
00:04:41,919 --> 00:04:46,560
already installed actually gordon is

117
00:04:45,040 --> 00:04:51,120
here

118
00:04:46,560 --> 00:04:54,960
with a stand in the aw building i think

119
00:04:51,120 --> 00:04:57,680
so check it out but there's also

120
00:04:54,960 --> 00:04:59,599
versions that you can flash yourself on

121
00:04:57,680 --> 00:05:05,120
your own hardware like on

122
00:04:59,600 --> 00:05:08,639
esp32 and esp8266 microcontrollers

123
00:05:05,120 --> 00:05:10,000
now it is an interpreter that supports

124
00:05:08,639 --> 00:05:12,240
most of javascript

125
00:05:10,000 --> 00:05:13,360
even some es6 features like arrow

126
00:05:12,240 --> 00:05:16,400
functions and so

127
00:05:13,360 --> 00:05:19,120
and it has a repel functionality

128
00:05:16,400 --> 00:05:21,520
so you can connect it using to the

129
00:05:19,120 --> 00:05:23,600
computer using a usb cable or bluetooth

130
00:05:21,520 --> 00:05:25,359
and you can execute commands on the

131
00:05:23,600 --> 00:05:27,039
microcontroller

132
00:05:25,360 --> 00:05:29,360
just like you would in the console of a

133
00:05:27,039 --> 00:05:29,360
browser

134
00:05:31,199 --> 00:05:35,520
so now it's time for the demo

135
00:05:36,080 --> 00:05:43,840
i hope because yeah this is

136
00:05:39,759 --> 00:05:45,440
uh well i have some warnings to give

137
00:05:43,840 --> 00:05:47,758
this is cutting-edge stuff hardware

138
00:05:45,440 --> 00:05:50,880
demos with experimental technology

139
00:05:47,759 --> 00:05:52,000
and most of it is using bluetooth which

140
00:05:50,880 --> 00:05:53,280
is a wireless connection

141
00:05:52,000 --> 00:05:55,600
and bluetooth uses the same wide

142
00:05:53,280 --> 00:05:57,679
frequencies wi-fi and this is a room

143
00:05:55,600 --> 00:05:59,759
full of wi-fi devices

144
00:05:57,680 --> 00:06:01,280
so there's a lot of opportunity for

145
00:05:59,759 --> 00:06:03,120
interference

146
00:06:01,280 --> 00:06:05,039
so this is the moment i usually get

147
00:06:03,120 --> 00:06:08,800
nervous

148
00:06:05,039 --> 00:06:11,919
um so

149
00:06:08,800 --> 00:06:16,319
yeah okay um

150
00:06:11,919 --> 00:06:18,240
we're gonna create some some stuff

151
00:06:16,319 --> 00:06:20,880
first of all we're gonna create a

152
00:06:18,240 --> 00:06:22,240
connected light bulb

153
00:06:20,880 --> 00:06:25,520
in javascript running on a

154
00:06:22,240 --> 00:06:28,639
microcontroller um

155
00:06:25,520 --> 00:06:32,000
and to do that we need some hardware

156
00:06:28,639 --> 00:06:35,039
we need a neopixel ring this is

157
00:06:32,000 --> 00:06:37,680
basically just 24 leds

158
00:06:35,039 --> 00:06:38,159
that can change to any color you want

159
00:06:37,680 --> 00:06:39,759
you can

160
00:06:38,160 --> 00:06:42,479
individually address them and change the

161
00:06:39,759 --> 00:06:45,120
color of each of the leds

162
00:06:42,479 --> 00:06:46,400
it's connected with three wires three

163
00:06:45,120 --> 00:06:49,520
wires

164
00:06:46,400 --> 00:06:53,758
and one for power one for ground

165
00:06:49,520 --> 00:06:57,280
and one with the data for

166
00:06:53,759 --> 00:07:02,800
turning on leds and it's connected to

167
00:06:57,280 --> 00:07:05,599
a tiny little microcontroller

168
00:07:02,800 --> 00:07:05,599
it's not that big

169
00:07:05,919 --> 00:07:10,080
this is actually an esp32 and i flashed

170
00:07:08,560 --> 00:07:14,000
it with esperino

171
00:07:10,080 --> 00:07:17,840
and basically that means we now can

172
00:07:14,000 --> 00:07:17,840
make it a connected light bulb

173
00:07:17,919 --> 00:07:32,639
so let's try this

174
00:07:30,319 --> 00:07:32,639
right

175
00:07:33,919 --> 00:07:37,120
let's see if this works

176
00:07:38,319 --> 00:07:40,560
yes

177
00:07:42,639 --> 00:07:48,400
so when i uh apply power to this thing

178
00:07:50,720 --> 00:07:56,639
nothing happens but that's okay because

179
00:07:54,960 --> 00:08:00,799
i haven't programmed it yet so

180
00:07:56,639 --> 00:08:00,800
that's that's actually what i expected

181
00:08:01,199 --> 00:08:06,479
so let's start with

182
00:08:03,960 --> 00:08:09,359
[Music]

183
00:08:06,479 --> 00:08:09,359
let's take a chair

184
00:08:10,479 --> 00:08:15,039
let's start with some code so i'm going

185
00:08:14,319 --> 00:08:20,160
to need

186
00:08:15,039 --> 00:08:23,919
a color um so this is just an uh a hex

187
00:08:20,160 --> 00:08:27,440
representative of any rgb color

188
00:08:23,919 --> 00:08:30,719
in this case ff9900

189
00:08:27,440 --> 00:08:35,039
and we need a buffer

190
00:08:30,720 --> 00:08:38,479
in this case we have 24 leds

191
00:08:35,039 --> 00:08:43,360
um and for every led we're going to

192
00:08:38,479 --> 00:08:46,959
save an rgb value so 24 times 3

193
00:08:43,360 --> 00:08:50,080
and we're going to set

194
00:08:46,959 --> 00:08:51,439
that color into the buffer now the

195
00:08:50,080 --> 00:08:54,880
problem is

196
00:08:51,440 --> 00:08:58,240
these led rings are a little bit weird

197
00:08:54,880 --> 00:09:01,439
they think grb is the right order for

198
00:08:58,240 --> 00:09:04,320
rgb uh well that

199
00:09:01,440 --> 00:09:05,519
actually depends on which ring you buy

200
00:09:04,320 --> 00:09:06,720
sometimes it's also

201
00:09:05,519 --> 00:09:09,839
something completely different it's

202
00:09:06,720 --> 00:09:09,839
never rgb though

203
00:09:10,240 --> 00:09:18,880
yeah so finally

204
00:09:14,800 --> 00:09:23,519
we need to write our buffer

205
00:09:18,880 --> 00:09:27,920
to the data pin

206
00:09:23,519 --> 00:09:27,920
let's connect to the device

207
00:09:29,040 --> 00:09:51,839
do we have it here no

208
00:09:36,880 --> 00:09:51,839
it's not here

209
00:09:56,480 --> 00:10:05,839
try again

210
00:10:08,240 --> 00:10:16,839
and it can't find it so i have a problem

211
00:10:12,079 --> 00:10:19,839
um but i have a backup

212
00:10:16,839 --> 00:10:19,839
fortunately

213
00:10:25,680 --> 00:10:30,640
there it is um so

214
00:10:31,120 --> 00:10:38,880
when uh we write that value

215
00:10:34,959 --> 00:10:42,399
to um the

216
00:10:38,880 --> 00:10:46,480
new pixel ring to the d 15 pin

217
00:10:42,399 --> 00:10:48,480
it will light up um so i

218
00:10:46,480 --> 00:10:49,519
pre-programmed this one so that it's

219
00:10:48,480 --> 00:10:54,160
actually

220
00:10:49,519 --> 00:10:57,279
uh cheating um but we'll continue anyway

221
00:10:54,160 --> 00:11:00,480
um so what we'll do

222
00:10:57,279 --> 00:11:00,480
next is

223
00:11:02,000 --> 00:11:15,839
we're going to skip some stuff

224
00:11:19,040 --> 00:11:26,240
so what i'm doing here i still have

225
00:11:22,480 --> 00:11:29,440
the color i still have the buffer

226
00:11:26,240 --> 00:11:33,040
except i'm using a function called

227
00:11:29,440 --> 00:11:34,800
update and we're gonna fill the buffer

228
00:11:33,040 --> 00:11:38,880
with the color again

229
00:11:34,800 --> 00:11:42,959
and then i'm gonna

230
00:11:38,880 --> 00:11:46,160
write it to the d15 pin and call update

231
00:11:42,959 --> 00:11:49,279
it's the same thing now what

232
00:11:46,160 --> 00:11:52,719
i do then is i use

233
00:11:49,279 --> 00:11:52,720
a special event called

234
00:11:52,880 --> 00:11:56,079
init event and whenever the board turns

235
00:11:55,360 --> 00:11:58,720
on

236
00:11:56,079 --> 00:12:00,638
that callback is called and we're going

237
00:11:58,720 --> 00:12:04,480
to advertise

238
00:12:00,639 --> 00:12:05,760
our light using a special name

239
00:12:04,480 --> 00:12:08,800
an esperino light we're going to

240
00:12:05,760 --> 00:12:10,319
advertise it using bluetooth

241
00:12:08,800 --> 00:12:11,920
after that we're going to offer some

242
00:12:10,320 --> 00:12:15,040
services these are

243
00:12:11,920 --> 00:12:18,319
kind of like ids uh or

244
00:12:15,040 --> 00:12:23,680
are basically the url endpoints

245
00:12:18,320 --> 00:12:28,240
of our bluetooth api service

246
00:12:23,680 --> 00:12:32,399
in this case it's f f a f f b

247
00:12:28,240 --> 00:12:36,000
now when we make

248
00:12:32,399 --> 00:12:39,760
this readable that means

249
00:12:36,000 --> 00:12:42,880
we can use

250
00:12:39,760 --> 00:12:44,800
a different device to read the color and

251
00:12:42,880 --> 00:12:45,760
when we make it writable we can use a

252
00:12:44,800 --> 00:12:49,519
device to

253
00:12:45,760 --> 00:12:53,200
write a color to it the default value

254
00:12:49,519 --> 00:12:56,480
is our rgb color and whenever we

255
00:12:53,200 --> 00:12:59,760
write something to it we're going to

256
00:12:56,480 --> 00:13:00,399
update our color here with the new

257
00:12:59,760 --> 00:13:04,160
values

258
00:13:00,399 --> 00:13:05,920
and call update so this is 29 lines of

259
00:13:04,160 --> 00:13:09,600
code

260
00:13:05,920 --> 00:13:12,959
and with these lines

261
00:13:09,600 --> 00:13:15,360
i can make this light bulb connectable

262
00:13:12,959 --> 00:13:17,680
from a different device from a bluetooth

263
00:13:15,360 --> 00:13:17,680
device

264
00:13:18,839 --> 00:13:26,160
so

265
00:13:21,600 --> 00:13:26,160
let's see i do

266
00:13:32,839 --> 00:13:35,839
quickly

267
00:14:05,120 --> 00:14:09,440
so let's try this

268
00:14:10,320 --> 00:14:14,720
so what we're going to do using the

269
00:14:12,800 --> 00:14:17,839
browser using the web bluetooth api

270
00:14:14,720 --> 00:14:17,839
connect to this device

271
00:14:17,920 --> 00:14:26,000
so we again have this ffa

272
00:14:21,120 --> 00:14:29,120
id and we use the espirino light

273
00:14:26,000 --> 00:14:32,240
name as a filter and

274
00:14:29,120 --> 00:14:32,240
if everything works

275
00:14:32,800 --> 00:14:37,120
we have our light here that is being

276
00:14:35,440 --> 00:14:40,399
advertised

277
00:14:37,120 --> 00:14:43,760
we pair with it we get our device

278
00:14:40,399 --> 00:14:46,959
then we can connect to the ttt server

279
00:14:43,760 --> 00:14:49,360
that's details don't worry about that

280
00:14:46,959 --> 00:14:49,359
and

281
00:14:53,040 --> 00:14:56,480
it takes a bit longer than i'm

282
00:14:55,519 --> 00:15:01,199
comfortable with

283
00:14:56,480 --> 00:15:03,440
but there it is and we get our surface

284
00:15:01,199 --> 00:15:06,319
there it is and then we get a

285
00:15:03,440 --> 00:15:08,480
characteristic that is fffb

286
00:15:06,320 --> 00:15:09,839
and that is the one we're advertising

287
00:15:08,480 --> 00:15:14,320
here

288
00:15:09,839 --> 00:15:17,440
and with that we have

289
00:15:14,320 --> 00:15:21,040
a value that we can write to

290
00:15:17,440 --> 00:15:25,360
so we can write any value to this color

291
00:15:21,040 --> 00:15:28,800
uh or to to this device like ff0080

292
00:15:25,360 --> 00:15:28,800
and it turns big

293
00:15:33,279 --> 00:15:35,850
well we can change it to any color we

294
00:15:34,800 --> 00:15:38,959
want we can change it to

295
00:15:35,850 --> 00:15:38,960
[Music]

296
00:15:43,759 --> 00:15:46,000
blue

297
00:15:49,920 --> 00:15:56,079
green basically any color any rgb value

298
00:15:53,759 --> 00:15:59,600
we want and we did that with just five

299
00:15:56,079 --> 00:16:02,800
lines of javascript in the browser

300
00:15:59,600 --> 00:16:05,440
and 29 lines of

301
00:16:02,800 --> 00:16:06,319
javascript running on a microcontroller

302
00:16:05,440 --> 00:16:10,720
so

303
00:16:06,320 --> 00:16:10,720
i think this is pretty amazing um

304
00:16:10,800 --> 00:16:14,639
but we can do more um

305
00:16:19,120 --> 00:16:24,240
with those five lines i can create a web

306
00:16:21,279 --> 00:16:29,279
app and i can just

307
00:16:24,240 --> 00:16:29,279
make it pretty i can turn it black

308
00:16:33,759 --> 00:16:37,839
and even

309
00:16:45,279 --> 00:16:54,240
i can run css animations on it

310
00:16:50,720 --> 00:16:54,240
uh yeah okay um

311
00:16:54,560 --> 00:16:56,880
anyway

312
00:17:02,160 --> 00:17:07,599
i do have one more demo to give and that

313
00:17:05,280 --> 00:17:11,839
is using a remote controlled car

314
00:17:07,599 --> 00:17:11,839
um this car is

315
00:17:13,439 --> 00:17:18,400
it has a microcontroller it has a motor

316
00:17:16,839 --> 00:17:22,159
board

317
00:17:18,400 --> 00:17:25,600
and there is no soldering involved

318
00:17:22,160 --> 00:17:28,559
uh in in any way uh it just

319
00:17:25,599 --> 00:17:28,959
put together and some added some wires

320
00:17:28,559 --> 00:17:32,000
and

321
00:17:28,960 --> 00:17:35,679
uh that's it um

322
00:17:32,000 --> 00:17:35,679
i'm gonna drive it today

323
00:17:35,760 --> 00:17:40,320
i hope and and it's

324
00:17:42,480 --> 00:17:47,840
yeah it works

325
00:17:51,039 --> 00:17:54,559
so let's get rid of this

326
00:17:56,480 --> 00:18:02,400
connect to the car

327
00:18:00,000 --> 00:18:03,679
and write some code we need a function

328
00:18:02,400 --> 00:18:06,559
to drive the car

329
00:18:03,679 --> 00:18:07,200
uh we have uh we want to turn left we

330
00:18:06,559 --> 00:18:09,520
want to turn

331
00:18:07,200 --> 00:18:11,200
right that has two motors if one go

332
00:18:09,520 --> 00:18:14,240
forward we go

333
00:18:11,200 --> 00:18:18,480
both motors full on

334
00:18:14,240 --> 00:18:21,679
backwards both motors reverse um

335
00:18:18,480 --> 00:18:23,200
so that these these pins here uh

336
00:18:21,679 --> 00:18:25,360
those are determined by the motor part

337
00:18:23,200 --> 00:18:26,799
i'm using and and this is basically

338
00:18:25,360 --> 00:18:28,799
all the lines of code you need to make

339
00:18:26,799 --> 00:18:31,918
it drive

340
00:18:28,799 --> 00:18:34,240
but to make it stop that's also very

341
00:18:31,919 --> 00:18:37,679
useful especially on this table

342
00:18:34,240 --> 00:18:40,320
we need another function and

343
00:18:37,679 --> 00:18:41,360
a little helper functions is also pretty

344
00:18:40,320 --> 00:18:44,639
nice

345
00:18:41,360 --> 00:18:48,000
forward reverse left and right so

346
00:18:44,640 --> 00:18:51,360
with 17 lines of code

347
00:18:48,000 --> 00:18:51,360
i can now make it

348
00:18:51,679 --> 00:18:57,840
go left

349
00:19:00,080 --> 00:19:04,159
and i can make it go right

350
00:19:01,530 --> 00:19:10,480
[Applause]

351
00:19:04,160 --> 00:19:15,039
and i can make it stop all right

352
00:19:10,480 --> 00:19:25,840
this is good this is good so

353
00:19:15,039 --> 00:19:25,840
again we get a prettier demo for this

354
00:19:36,960 --> 00:19:39,840
so

355
00:19:42,320 --> 00:19:55,520
there it is

356
00:19:53,600 --> 00:19:58,080
somehow today we're gonna we're having

357
00:19:55,520 --> 00:20:07,840
some issues but

358
00:19:58,080 --> 00:20:07,840
we'll try again

359
00:20:18,400 --> 00:20:23,679
there is so now i can use the arrow keys

360
00:20:22,159 --> 00:20:26,559
to

361
00:20:23,679 --> 00:20:26,559
drive it around

362
00:20:33,600 --> 00:20:39,439
so but what i haven't told you is that

363
00:20:36,799 --> 00:20:40,240
i can actually drive this table of drive

364
00:20:39,440 --> 00:20:44,000
this car

365
00:20:40,240 --> 00:20:47,760
of the table because

366
00:20:44,000 --> 00:20:50,559
of well

367
00:20:47,760 --> 00:20:52,080
i can drive it off the table i can try

368
00:20:50,559 --> 00:20:55,360
but

369
00:20:52,080 --> 00:20:59,120
it will refuse to do so

370
00:20:55,360 --> 00:21:01,039
because of lasers

371
00:20:59,120 --> 00:21:02,959
well actually a little tiny laser that's

372
00:21:01,039 --> 00:21:04,879
right mounted here on front and it

373
00:21:02,960 --> 00:21:07,360
measures the time of flight

374
00:21:04,880 --> 00:21:08,320
it takes before the the laser to reflect

375
00:21:07,360 --> 00:21:11,360
back

376
00:21:08,320 --> 00:21:14,879
and we can add that to

377
00:21:11,360 --> 00:21:17,840
our code uh well

378
00:21:14,880 --> 00:21:17,840
make it

379
00:21:21,679 --> 00:21:26,640
so we have to measure distances and when

380
00:21:24,000 --> 00:21:27,360
the distance is over a certain threshold

381
00:21:26,640 --> 00:21:29,600
we

382
00:21:27,360 --> 00:21:30,719
and we don't are we are not yet in

383
00:21:29,600 --> 00:21:32,959
emergency mode

384
00:21:30,720 --> 00:21:34,720
we're gonna turn on emergency mode and

385
00:21:32,960 --> 00:21:38,080
reverse

386
00:21:34,720 --> 00:21:40,640
and when we're clear again um

387
00:21:38,080 --> 00:21:42,000
we're gonna cancel emergency mode and

388
00:21:40,640 --> 00:21:45,360
stop

389
00:21:42,000 --> 00:21:49,039
and we must not forget to actually

390
00:21:45,360 --> 00:21:53,678
initialize the sensor because otherwise

391
00:21:49,039 --> 00:21:59,840
um and this should do it

392
00:21:53,679 --> 00:21:59,840
so uh important thing

393
00:22:02,559 --> 00:22:06,960
so i did this talk in in phoenix uh a

394
00:22:05,760 --> 00:22:12,080
week or two ago

395
00:22:06,960 --> 00:22:15,520
in arizona which is uh

396
00:22:12,080 --> 00:22:26,158
well i use the american flag

397
00:22:15,520 --> 00:22:27,679
and it actually drove off the table

398
00:22:26,159 --> 00:22:29,520
they didn't kick me out of the building

399
00:22:27,679 --> 00:22:33,120
immediately fortunately

400
00:22:29,520 --> 00:22:35,200
uh but yeah um i probably won't do that

401
00:22:33,120 --> 00:22:38,080
again but but here in belgium we're safe

402
00:22:35,200 --> 00:22:38,080
this is fine

403
00:22:38,159 --> 00:22:55,840
but yeah to be honest about

404
00:22:41,200 --> 00:22:55,840
eighty percent of the time this works

