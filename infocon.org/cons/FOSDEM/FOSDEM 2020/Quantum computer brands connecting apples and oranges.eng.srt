1
00:00:04,960 --> 00:00:10,160
okay

2
00:00:06,160 --> 00:00:13,519
can you hear me okay my name is peter

3
00:00:10,160 --> 00:00:15,599
corponeich from qantastica

4
00:00:13,519 --> 00:00:16,720
quantastica is a quantum computing

5
00:00:15,599 --> 00:00:19,359
startup from

6
00:00:16,720 --> 00:00:21,520
helsinki finland i'm originally from

7
00:00:19,359 --> 00:00:26,320
serbia

8
00:00:21,520 --> 00:00:28,400
and today we we was

9
00:00:26,320 --> 00:00:30,400
you are listening talks about quantum

10
00:00:28,400 --> 00:00:32,719
computing and now something

11
00:00:30,400 --> 00:00:35,280
refreshing we will talk i will talk

12
00:00:32,719 --> 00:00:38,480
about apples and ranges

13
00:00:35,280 --> 00:00:42,320
okay that's a joke of course so

14
00:00:38,480 --> 00:00:45,680
uh i will talk about two things

15
00:00:42,320 --> 00:00:49,039
first in first part i will talk about uh

16
00:00:45,680 --> 00:00:50,640
path from uh quantum computing start

17
00:00:49,039 --> 00:00:52,640
from open source project to quantum

18
00:00:50,640 --> 00:00:56,160
computing startup that's my

19
00:00:52,640 --> 00:00:56,960
my path the uh the reason why i will

20
00:00:56,160 --> 00:00:58,160
talk about that

21
00:00:56,960 --> 00:01:02,000
is because this is open source

22
00:00:58,160 --> 00:01:06,320
conference and most of you i guess

23
00:01:02,000 --> 00:01:09,520
are programmers like me

24
00:01:06,320 --> 00:01:12,798
and the idea is to

25
00:01:09,520 --> 00:01:16,320
encourage you to uh

26
00:01:12,799 --> 00:01:16,960
to start working in quantum computing

27
00:01:16,320 --> 00:01:19,279
space

28
00:01:16,960 --> 00:01:20,240
start contributing start making your own

29
00:01:19,280 --> 00:01:24,840
projects

30
00:01:20,240 --> 00:01:27,679
because it can lead to two

31
00:01:24,840 --> 00:01:32,159
nice

32
00:01:27,680 --> 00:01:34,720
career this is first part in second part

33
00:01:32,159 --> 00:01:36,799
i will talk about apples and ranges

34
00:01:34,720 --> 00:01:38,400
in second part i will talk about

35
00:01:36,799 --> 00:01:40,960
connecting

36
00:01:38,400 --> 00:01:41,840
running the running the the code on

37
00:01:40,960 --> 00:01:44,399
different

38
00:01:41,840 --> 00:01:46,720
types of quantum computers on different

39
00:01:44,399 --> 00:01:46,720
brands

40
00:01:48,079 --> 00:01:51,279
for example running ibm code on righty

41
00:01:50,880 --> 00:01:54,000
chip

42
00:01:51,280 --> 00:01:55,280
or running righty code on ibm chip and

43
00:01:54,000 --> 00:02:00,320
etc

44
00:01:55,280 --> 00:02:00,320
so this is the plan let's

45
00:02:01,119 --> 00:02:07,360
let's continue so part one

46
00:02:04,560 --> 00:02:08,318
how it started five years ago i read

47
00:02:07,360 --> 00:02:11,520
somewhere a

48
00:02:08,318 --> 00:02:14,879
blog post about quantum computing

49
00:02:11,520 --> 00:02:18,720
that was 2014 or 2015

50
00:02:14,879 --> 00:02:20,879
end of 2014 and i

51
00:02:18,720 --> 00:02:23,120
didn't understand what quantum what what

52
00:02:20,879 --> 00:02:26,160
quantum

53
00:02:23,120 --> 00:02:28,480
quantum computer before and i started

54
00:02:26,160 --> 00:02:32,239
reading

55
00:02:28,480 --> 00:02:35,679
wikipedia article was first i started

56
00:02:32,239 --> 00:02:36,959
learning and uh i found it very

57
00:02:35,680 --> 00:02:39,200
interesting

58
00:02:36,959 --> 00:02:41,040
more than interesting i was i fall in

59
00:02:39,200 --> 00:02:43,440
love with quantum computing

60
00:02:41,040 --> 00:02:44,560
but i'm just a classical software

61
00:02:43,440 --> 00:02:46,879
engineer i'm not

62
00:02:44,560 --> 00:02:48,640
a scientist i'm not mathematician i'm

63
00:02:46,879 --> 00:02:52,239
not a physician

64
00:02:48,640 --> 00:02:55,200
physicist and it was very hard

65
00:02:52,239 --> 00:02:55,760
especially then because now you can find

66
00:02:55,200 --> 00:02:59,359
uh

67
00:02:55,760 --> 00:03:01,920
popular literatu popular books uh

68
00:02:59,360 --> 00:03:04,239
about quantum computing uh explained on

69
00:03:01,920 --> 00:03:04,238
more

70
00:03:04,720 --> 00:03:07,280
how to say

71
00:03:07,920 --> 00:03:16,958
more simplified

72
00:03:11,360 --> 00:03:19,360
simply simply explained in that time

73
00:03:16,959 --> 00:03:20,239
there there was only say uh scientific

74
00:03:19,360 --> 00:03:21,920
papers oh okay

75
00:03:20,239 --> 00:03:24,080
there were there were some books but

76
00:03:21,920 --> 00:03:25,599
most of uh

77
00:03:24,080 --> 00:03:27,280
material you can find on the internet

78
00:03:25,599 --> 00:03:30,839
was uh

79
00:03:27,280 --> 00:03:32,640
scientific papers uh written by

80
00:03:30,840 --> 00:03:34,879
scientists uh

81
00:03:32,640 --> 00:03:36,879
nobel prize winners and when you read

82
00:03:34,879 --> 00:03:40,480
that paper it's it's really hard

83
00:03:36,879 --> 00:03:43,518
uh you need to understand math behind

84
00:03:40,480 --> 00:03:46,720
and so it was not easy but i

85
00:03:43,519 --> 00:03:47,040
uh the passion was strong and i somehow

86
00:03:46,720 --> 00:03:50,959
i

87
00:03:47,040 --> 00:03:54,079
understood at least basics i mean

88
00:03:50,959 --> 00:03:57,439
it's hard to hard to say

89
00:03:54,080 --> 00:04:00,480
i understand i i know quantum computing

90
00:03:57,439 --> 00:04:04,079
because it's very big and challenging

91
00:04:00,480 --> 00:04:07,200
field but i understand some basics

92
00:04:04,080 --> 00:04:07,519
and then i started uh coding uh i made

93
00:04:07,200 --> 00:04:10,720
my

94
00:04:07,519 --> 00:04:14,400
i made first open source first project

95
00:04:10,720 --> 00:04:17,040
was a quantum circuit simulator

96
00:04:14,400 --> 00:04:18,079
implemented in javascript i made it in

97
00:04:17,040 --> 00:04:20,799
javascript because

98
00:04:18,079 --> 00:04:22,000
i simply won't want to run it on in

99
00:04:20,798 --> 00:04:24,239
browser

100
00:04:22,000 --> 00:04:25,840
my mother language is c my primary

101
00:04:24,240 --> 00:04:29,280
language is actually c

102
00:04:25,840 --> 00:04:32,880
but i was coding in javascript

103
00:04:29,280 --> 00:04:36,559
it was public open open source

104
00:04:32,880 --> 00:04:39,919
and after some time i realized

105
00:04:36,560 --> 00:04:42,960
that ibm is using my code

106
00:04:39,919 --> 00:04:44,880
they cloned my code uh

107
00:04:42,960 --> 00:04:46,638
you can see it in case it's included

108
00:04:44,880 --> 00:04:49,040
into kiskit

109
00:04:46,639 --> 00:04:51,360
there is kisky javascript and there is a

110
00:04:49,040 --> 00:04:52,400
line initially forked from my repository

111
00:04:51,360 --> 00:04:54,960
so

112
00:04:52,400 --> 00:04:58,080
and that i then i was really surprised

113
00:04:54,960 --> 00:05:01,280
that the big blue ibm is using my code

114
00:04:58,080 --> 00:05:04,719
that was unbelievable and

115
00:05:01,280 --> 00:05:07,679
that actually tells

116
00:05:04,720 --> 00:05:09,120
tells us that quantum computing is very

117
00:05:07,680 --> 00:05:12,320
very

118
00:05:09,120 --> 00:05:15,759
young field and when you contribute

119
00:05:12,320 --> 00:05:18,240
in quantum computing you are one of the

120
00:05:15,759 --> 00:05:18,880
few people in the world who is doing

121
00:05:18,240 --> 00:05:22,720
that and

122
00:05:18,880 --> 00:05:26,159
you automatically can make attraction

123
00:05:22,720 --> 00:05:26,160
of big companies

124
00:05:26,639 --> 00:05:34,400
so my code is not something magical

125
00:05:31,440 --> 00:05:35,280
my code was maybe only open source

126
00:05:34,400 --> 00:05:38,719
javascript

127
00:05:35,280 --> 00:05:42,400
simulator and this is why ibm is is

128
00:05:38,720 --> 00:05:46,639
cloned now that project their project is

129
00:05:42,400 --> 00:05:48,560
actually stopped it's are heaped

130
00:05:46,639 --> 00:05:51,280
recently they are hyped it but my

131
00:05:48,560 --> 00:05:54,880
project is still still alive

132
00:05:51,280 --> 00:05:57,359
uh in the meantime i was working on more

133
00:05:54,880 --> 00:06:00,319
projects like quantum programming studio

134
00:05:57,360 --> 00:06:02,000
quantum learning studio is a web ui for

135
00:06:00,319 --> 00:06:05,120
uh programming quantum

136
00:06:02,000 --> 00:06:08,560
uh for making quantum circuits something

137
00:06:05,120 --> 00:06:11,120
similar to ibm queue composer

138
00:06:08,560 --> 00:06:12,000
so drag and drop you assemble circuit

139
00:06:11,120 --> 00:06:14,240
and

140
00:06:12,000 --> 00:06:16,160
you can run it on two types of quantum

141
00:06:14,240 --> 00:06:17,919
computers you can run it on righty and

142
00:06:16,160 --> 00:06:22,960
ibm quantum computer directly

143
00:06:17,919 --> 00:06:22,960
from from ui and

144
00:06:23,360 --> 00:06:26,479
cubic toaster i named it qubit toaster

145
00:06:25,680 --> 00:06:29,199
maybe a

146
00:06:26,479 --> 00:06:30,880
funny name that's a simulator high

147
00:06:29,199 --> 00:06:34,720
performance simulator written in c

148
00:06:30,880 --> 00:06:38,000
in c language and i believe

149
00:06:34,720 --> 00:06:41,039
that we we have maybe uh

150
00:06:38,000 --> 00:06:44,080
the fastest simulator in the world

151
00:06:41,039 --> 00:06:46,240
uh on a single node on single machine uh

152
00:06:44,080 --> 00:06:47,120
and soon we will have simulator running

153
00:06:46,240 --> 00:06:52,240
on on

154
00:06:47,120 --> 00:06:55,280
cluster on and on super computers

155
00:06:52,240 --> 00:06:58,240
so those are projects and then

156
00:06:55,280 --> 00:07:00,638
when i started implementing quantum

157
00:06:58,240 --> 00:07:04,720
programming studio

158
00:07:00,639 --> 00:07:07,840
i applied for a unitary fund

159
00:07:04,720 --> 00:07:10,960
micro grant program will

160
00:07:07,840 --> 00:07:14,400
zheng who is present here in the in the

161
00:07:10,960 --> 00:07:18,000
audience he is running this project

162
00:07:14,400 --> 00:07:21,198
and i i won a grant

163
00:07:18,000 --> 00:07:25,120
it was uh now it's uh four

164
00:07:21,199 --> 00:07:26,960
four thousand euros grand

165
00:07:25,120 --> 00:07:28,400
of four thousand euros in that time it

166
00:07:26,960 --> 00:07:31,520
was two thousand

167
00:07:28,400 --> 00:07:32,560
uh in two parts so you need to apply you

168
00:07:31,520 --> 00:07:35,359
apply with your

169
00:07:32,560 --> 00:07:35,840
open source project uh you send what is

170
00:07:35,360 --> 00:07:39,919
your

171
00:07:35,840 --> 00:07:44,479
idea and everything and they decide uh

172
00:07:39,919 --> 00:07:47,840
to give you the grant or not

173
00:07:44,479 --> 00:07:49,758
and i i suggest

174
00:07:47,840 --> 00:07:51,039
to all of you if you have some quantum

175
00:07:49,759 --> 00:07:54,479
computing project

176
00:07:51,039 --> 00:07:55,599
already to apply for unitary phone

177
00:07:54,479 --> 00:07:58,960
because

178
00:07:55,599 --> 00:08:02,319
it works and

179
00:07:58,960 --> 00:08:05,520
this gave me actually confidence

180
00:08:02,319 --> 00:08:08,720
self-confidence that i'm doing something

181
00:08:05,520 --> 00:08:12,400
something valuable and

182
00:08:08,720 --> 00:08:14,639
i continued and launched i launched

183
00:08:12,400 --> 00:08:17,520
quantum programming studio in february

184
00:08:14,639 --> 00:08:17,520
2019

185
00:08:17,599 --> 00:08:22,479
quantum programming studio now have more

186
00:08:20,560 --> 00:08:25,840
than 800 users

187
00:08:22,479 --> 00:08:28,479
which is not bad for quantum computing

188
00:08:25,840 --> 00:08:29,520
if it is naked celebrity we will have 8

189
00:08:28,479 --> 00:08:31,199
million users but

190
00:08:29,520 --> 00:08:34,220
this is quantum programming studio so

191
00:08:31,199 --> 00:08:36,080
800 users is not bad

192
00:08:34,220 --> 00:08:39,279
[Music]

193
00:08:36,080 --> 00:08:42,880
then i decided to

194
00:08:39,279 --> 00:08:43,919
to make a startup first i made it in

195
00:08:42,880 --> 00:08:46,560
estonia

196
00:08:43,919 --> 00:08:48,000
uh because i'm from serbia and it's

197
00:08:46,560 --> 00:08:51,279
serbia is not the best place to

198
00:08:48,000 --> 00:08:54,000
work with quantum computing

199
00:08:51,279 --> 00:08:54,560
so and estonia was easy because they

200
00:08:54,000 --> 00:08:57,760
have that

201
00:08:54,560 --> 00:09:00,560
uh electronic government

202
00:08:57,760 --> 00:09:01,839
and i have residency so i open company

203
00:09:00,560 --> 00:09:05,518
in estonia

204
00:09:01,839 --> 00:09:06,640
and later uh for four months ago

205
00:09:05,519 --> 00:09:09,680
actually i

206
00:09:06,640 --> 00:09:10,399
switched to finland in finland i have

207
00:09:09,680 --> 00:09:15,199
investor

208
00:09:10,399 --> 00:09:19,839
so i but before that to say that

209
00:09:15,200 --> 00:09:22,959
after i funded a startup shortly

210
00:09:19,839 --> 00:09:25,040
i beca fantastica became right

211
00:09:22,959 --> 00:09:26,160
developer partner and quantum

212
00:09:25,040 --> 00:09:29,519
programming studio is

213
00:09:26,160 --> 00:09:33,360
listed in righty

214
00:09:29,519 --> 00:09:34,800
community in we getting qcs as a partner

215
00:09:33,360 --> 00:09:36,480
application

216
00:09:34,800 --> 00:09:38,079
because quantum programming studio

217
00:09:36,480 --> 00:09:40,560
allows you to to

218
00:09:38,080 --> 00:09:41,519
visually design quantum circuit and to

219
00:09:40,560 --> 00:09:44,560
execute it

220
00:09:41,519 --> 00:09:48,000
on right quantum computers so you have

221
00:09:44,560 --> 00:09:48,000
ui for quantum computer

222
00:09:48,959 --> 00:09:51,920
then i uh

223
00:09:52,240 --> 00:09:55,519
investors started

224
00:09:59,120 --> 00:10:05,600
reaching to me and i

225
00:10:02,399 --> 00:10:08,800
found nice investor ice baker

226
00:10:05,600 --> 00:10:12,720
from finland and i

227
00:10:08,800 --> 00:10:12,719
actually moved my company to finland

228
00:10:15,360 --> 00:10:23,680
then i employed my code contributors

229
00:10:18,480 --> 00:10:26,640
so because

230
00:10:23,680 --> 00:10:27,680
the quantum circuit project was open

231
00:10:26,640 --> 00:10:29,920
source

232
00:10:27,680 --> 00:10:30,800
and still is open source my code

233
00:10:29,920 --> 00:10:34,399
contributors

234
00:10:30,800 --> 00:10:36,479
were first choice to when i uh

235
00:10:34,399 --> 00:10:38,800
when i was forming a team and i will

236
00:10:36,480 --> 00:10:42,160
keep that

237
00:10:38,800 --> 00:10:44,319
keep that so uh contributes to our

238
00:10:42,160 --> 00:10:47,839
our open source code and it's possible

239
00:10:44,320 --> 00:10:47,839
that we will employ you

240
00:10:48,399 --> 00:10:56,240
and today we have

241
00:10:51,519 --> 00:10:56,240
quantum programming studio which is

242
00:10:56,320 --> 00:11:02,560
ide then we have language converters

243
00:10:59,360 --> 00:11:04,000
and drivers for popular quantum

244
00:11:02,560 --> 00:11:05,839
computing frameworks

245
00:11:04,000 --> 00:11:07,040
and we have qubit oster simulator so

246
00:11:05,839 --> 00:11:09,600
this is our

247
00:11:07,040 --> 00:11:11,599
ecosystem and today because this is open

248
00:11:09,600 --> 00:11:15,120
source conference i will talk about

249
00:11:11,600 --> 00:11:17,600
language converters and and

250
00:11:15,120 --> 00:11:17,600
drivers

251
00:11:18,399 --> 00:11:23,200
and here we go apples and oranges

252
00:11:24,640 --> 00:11:28,319
so what is the problem today each brand

253
00:11:27,279 --> 00:11:31,439
of quantum computers

254
00:11:28,320 --> 00:11:34,720
has its own language or

255
00:11:31,440 --> 00:11:37,839
framework or usually python framework

256
00:11:34,720 --> 00:11:38,560
for programming their chips ibm have

257
00:11:37,839 --> 00:11:42,240
kisked

258
00:11:38,560 --> 00:11:45,119
and which is python

259
00:11:42,240 --> 00:11:46,880
framework and they have chasm which is

260
00:11:45,120 --> 00:11:50,079
quantum assembler

261
00:11:46,880 --> 00:11:51,439
then google have silk microsoft have q

262
00:11:50,079 --> 00:11:54,638
sharp

263
00:11:51,440 --> 00:11:57,440
righty have pikeville

264
00:11:54,639 --> 00:11:58,000
pipe framework for python and quill

265
00:11:57,440 --> 00:12:01,279
which is

266
00:11:58,000 --> 00:12:05,360
a kind of assembler

267
00:12:01,279 --> 00:12:08,639
for low-level programming

268
00:12:05,360 --> 00:12:11,760
qpu and

269
00:12:08,639 --> 00:12:12,560
so what is the need users are familiar

270
00:12:11,760 --> 00:12:16,000
with their

271
00:12:12,560 --> 00:12:16,000
framework of preference so

272
00:12:16,079 --> 00:12:22,239
more unlike other disciplines

273
00:12:20,079 --> 00:12:24,959
in quantum computing your users are

274
00:12:22,240 --> 00:12:27,760
mostly scientists

275
00:12:24,959 --> 00:12:28,638
mathematicians physicians etc and they

276
00:12:27,760 --> 00:12:31,680
are not

277
00:12:28,639 --> 00:12:34,639
programmers they code of course

278
00:12:31,680 --> 00:12:36,160
but they are not really that skill this

279
00:12:34,639 --> 00:12:39,600
is not their main skill

280
00:12:36,160 --> 00:12:42,319
and for us uh programmers uh

281
00:12:39,600 --> 00:12:43,360
uh the changing the framework is

282
00:12:42,320 --> 00:12:45,360
everyday routine

283
00:12:43,360 --> 00:12:46,560
so there is millions of frameworks and

284
00:12:45,360 --> 00:12:49,279
every day you need to learn

285
00:12:46,560 --> 00:12:50,560
new framework to implement something and

286
00:12:49,279 --> 00:12:53,439
uh it's not

287
00:12:50,560 --> 00:12:55,359
for us users of quantum computing is not

288
00:12:53,440 --> 00:12:59,360
that easy to switch framework

289
00:12:55,360 --> 00:13:02,480
and if they know kiskit

290
00:12:59,360 --> 00:13:07,120
tomorrow you will hard force them

291
00:13:02,480 --> 00:13:11,839
to use pikeville or or vice versa so

292
00:13:07,120 --> 00:13:13,680
and other use case for

293
00:13:11,839 --> 00:13:15,279
converting between quantum programming

294
00:13:13,680 --> 00:13:17,199
languages is

295
00:13:15,279 --> 00:13:18,800
if you want to run and compare the same

296
00:13:17,200 --> 00:13:23,680
code on different chips

297
00:13:18,800 --> 00:13:23,680
or different simulators you need to

298
00:13:23,920 --> 00:13:28,639
manually write the code

299
00:13:28,959 --> 00:13:35,599
and quantum cloud providers

300
00:13:32,480 --> 00:13:37,600
you maybe you know that ibm

301
00:13:35,600 --> 00:13:38,800
already already have a quantum computer

302
00:13:37,600 --> 00:13:41,360
in the cloud uh

303
00:13:38,800 --> 00:13:42,399
righty as well they have regated quantum

304
00:13:41,360 --> 00:13:45,920
cloud service

305
00:13:42,399 --> 00:13:45,920
uh amazon is

306
00:13:46,480 --> 00:13:53,440
soon we will have amazon bracket

307
00:13:49,680 --> 00:13:54,160
microsoft azure quantum so big players

308
00:13:53,440 --> 00:13:56,560
are

309
00:13:54,160 --> 00:13:58,560
will offer very very soon uh more and

310
00:13:56,560 --> 00:14:01,599
more big players are offering

311
00:13:58,560 --> 00:14:04,880
quantum computer in the cloud and those

312
00:14:01,600 --> 00:14:07,920
providers have uh different

313
00:14:04,880 --> 00:14:10,720
chips connected to their uh

314
00:14:07,920 --> 00:14:13,120
and offered in in a cloud for example

315
00:14:10,720 --> 00:14:14,480
amazon is using right quantum computer

316
00:14:13,120 --> 00:14:17,760
as a

317
00:14:14,480 --> 00:14:20,880
as a provider for for a chip

318
00:14:17,760 --> 00:14:24,319
and now question is

319
00:14:20,880 --> 00:14:28,160
how that quantum cloud providers

320
00:14:24,320 --> 00:14:29,199
uh what which framework they will allow

321
00:14:28,160 --> 00:14:32,560
you to use

322
00:14:29,199 --> 00:14:37,439
for example amazon when you

323
00:14:32,560 --> 00:14:40,800
tomorrow register and open your

324
00:14:37,440 --> 00:14:40,800
quantum box

325
00:14:41,199 --> 00:14:44,959
you have multiple quantum computing

326
00:14:43,839 --> 00:14:47,040
chips connected

327
00:14:44,959 --> 00:14:49,119
and what you will use to program that

328
00:14:47,040 --> 00:14:49,760
trips uh if this is the getty you need

329
00:14:49,120 --> 00:14:52,800
to use

330
00:14:49,760 --> 00:14:54,720
python and and what if you are familiar

331
00:14:52,800 --> 00:14:58,079
with kiskit so you need to switch to

332
00:14:54,720 --> 00:15:00,000
new framework which is

333
00:14:58,079 --> 00:15:02,079
for quantum cloud providers i think it's

334
00:15:00,000 --> 00:15:04,560
it's the best if they offer

335
00:15:02,079 --> 00:15:06,399
uh to let users to choose whatever

336
00:15:04,560 --> 00:15:10,839
framework they want to use

337
00:15:06,399 --> 00:15:13,120
with no matter which chip is connected

338
00:15:10,839 --> 00:15:16,160
and we have

339
00:15:13,120 --> 00:15:17,839
open source solutions for that where you

340
00:15:16,160 --> 00:15:20,639
can contribute of course

341
00:15:17,839 --> 00:15:20,639
so we have

342
00:15:21,920 --> 00:15:24,880
we have in

343
00:15:25,040 --> 00:15:30,160
projects in javascript and in python

344
00:15:28,480 --> 00:15:31,680
both both javascript and python why

345
00:15:30,160 --> 00:15:33,920
javascript javascript

346
00:15:31,680 --> 00:15:34,719
is very unusual in quantum computing

347
00:15:33,920 --> 00:15:38,160
space

348
00:15:34,720 --> 00:15:40,399
people mostly use python but why

349
00:15:38,160 --> 00:15:41,199
javascript because it works in browser

350
00:15:40,399 --> 00:15:44,079
and uh

351
00:15:41,199 --> 00:15:44,079
if you have uh

352
00:15:44,320 --> 00:15:48,320
call you you don't you don't have uh you

353
00:15:47,440 --> 00:15:52,000
don't need to

354
00:15:48,320 --> 00:15:54,800
serve your your code server side

355
00:15:52,000 --> 00:15:55,519
you can it executes a client side in a

356
00:15:54,800 --> 00:15:58,880
browser

357
00:15:55,519 --> 00:16:01,519
and it's much more responsive

358
00:15:58,880 --> 00:16:03,519
this is why we have both javascript and

359
00:16:01,519 --> 00:16:06,560
python

360
00:16:03,519 --> 00:16:09,680
projects so this q

361
00:16:06,560 --> 00:16:14,800
convert is a command line tool

362
00:16:09,680 --> 00:16:17,839
there is also web ui and http api

363
00:16:14,800 --> 00:16:20,959
written in javascript there is fantastic

364
00:16:17,839 --> 00:16:22,880
convert this is python package it's

365
00:16:20,959 --> 00:16:25,680
called converter for python

366
00:16:22,880 --> 00:16:26,000
and we have fantastic akiskit forest

367
00:16:25,680 --> 00:16:29,758
this

368
00:16:26,000 --> 00:16:32,480
is uh allows you to run kisket

369
00:16:29,759 --> 00:16:33,440
code on righty quantum computer and

370
00:16:32,480 --> 00:16:36,079
simulator

371
00:16:33,440 --> 00:16:36,959
with chain by replacing only single line

372
00:16:36,079 --> 00:16:41,599
of your

373
00:16:36,959 --> 00:16:41,599
original kisket code and

374
00:16:41,839 --> 00:16:46,399
forest backend it's currently in

375
00:16:45,440 --> 00:16:49,519
prototype

376
00:16:46,399 --> 00:16:52,160
it's not public yet and there is no name

377
00:16:49,519 --> 00:16:53,120
official name so i name it forest back

378
00:16:52,160 --> 00:16:55,680
end

379
00:16:53,120 --> 00:16:57,920
it allows you to run pikeville on ibm

380
00:16:55,680 --> 00:17:00,160
quantum computer and simulator

381
00:16:57,920 --> 00:17:00,160
and

382
00:17:01,199 --> 00:17:09,039
so this is our fantastica quantastica

383
00:17:04,319 --> 00:17:12,240
github those are

384
00:17:09,039 --> 00:17:15,359
projects open source projects

385
00:17:12,240 --> 00:17:15,359
this is connectivity

386
00:17:15,599 --> 00:17:22,000
you can see that we import

387
00:17:19,760 --> 00:17:24,400
we can import queue object queue object

388
00:17:22,000 --> 00:17:27,919
is low level

389
00:17:24,400 --> 00:17:32,320
format json which describes

390
00:17:27,919 --> 00:17:35,919
quantum c quantum circuit and this

391
00:17:32,320 --> 00:17:39,439
this is output from kiskit actually and

392
00:17:35,919 --> 00:17:40,160
that that code we import and convert

393
00:17:39,440 --> 00:17:43,120
into

394
00:17:40,160 --> 00:17:44,320
all formats you see at the right side

395
00:17:43,120 --> 00:17:48,000
then we can import

396
00:17:44,320 --> 00:17:50,799
uh quantum assembler and we import quill

397
00:17:48,000 --> 00:17:51,679
quill is new very new uh queer queer

398
00:17:50,799 --> 00:17:55,360
parser is very

399
00:17:51,679 --> 00:17:58,720
very fresh from last week i couldn't

400
00:17:55,360 --> 00:18:02,639
look into will zhang's eyes without

401
00:17:58,720 --> 00:18:05,120
implementing quill parser so for

402
00:18:02,640 --> 00:18:06,400
before fosdem it was deadline let's make

403
00:18:05,120 --> 00:18:09,199
quill pi

404
00:18:06,400 --> 00:18:10,160
parser and it's very very useful to have

405
00:18:09,200 --> 00:18:13,280
because now we

406
00:18:10,160 --> 00:18:15,440
can import code from from let's say

407
00:18:13,280 --> 00:18:19,039
three formats

408
00:18:15,440 --> 00:18:21,679
and uh output uh is

409
00:18:19,039 --> 00:18:23,440
from our of and yes there is one more

410
00:18:21,679 --> 00:18:28,960
input not

411
00:18:23,440 --> 00:18:31,919
on on the diagram is

412
00:18:28,960 --> 00:18:32,640
input from from our formats and input

413
00:18:31,919 --> 00:18:36,480
from quantum

414
00:18:32,640 --> 00:18:39,600
programming studio drag and drop tool uh

415
00:18:36,480 --> 00:18:40,960
and now from from when you when we have

416
00:18:39,600 --> 00:18:43,120
it in our

417
00:18:40,960 --> 00:18:45,440
internal format we export it to to

418
00:18:43,120 --> 00:18:48,639
custom and you can run it on ibm chip

419
00:18:45,440 --> 00:18:52,240
or simulator we also export it back to

420
00:18:48,640 --> 00:18:56,320
queue object so we intercept kiskit

421
00:18:52,240 --> 00:18:59,679
from kiskit code it produces a

422
00:18:56,320 --> 00:18:59,678
queue object we convert it

423
00:18:59,840 --> 00:19:04,959
to other format and from other formats

424
00:19:03,360 --> 00:19:08,879
we convert to back to

425
00:19:04,960 --> 00:19:12,320
queue object which can be executed

426
00:19:08,880 --> 00:19:14,320
export to quill and pikeville

427
00:19:12,320 --> 00:19:15,520
and we support multiple version versions

428
00:19:14,320 --> 00:19:18,480
of pikeville uh

429
00:19:15,520 --> 00:19:21,679
this is regatta righty formats you

430
00:19:18,480 --> 00:19:25,120
formats us but used by righty

431
00:19:21,679 --> 00:19:26,640
then export to google formats to silk

432
00:19:25,120 --> 00:19:30,080
framework

433
00:19:26,640 --> 00:19:33,280
export to quest quest is a simulator

434
00:19:30,080 --> 00:19:36,399
by oxford it's written in so

435
00:19:33,280 --> 00:19:39,840
the code is c plus plus it's

436
00:19:36,400 --> 00:19:44,320
so it converts to c plus plus

437
00:19:39,840 --> 00:19:44,320
and export to q sharp microsoft q sharp

438
00:19:44,400 --> 00:19:46,640
which

439
00:19:48,160 --> 00:19:52,640
so code can run on microsoft quantum

440
00:19:50,640 --> 00:19:54,880
development kit

441
00:19:52,640 --> 00:19:56,480
they don't have yet quantum computer but

442
00:19:54,880 --> 00:19:59,919
soon they will have

443
00:19:56,480 --> 00:20:02,960
azure quantum in the cloud

444
00:19:59,919 --> 00:20:03,520
export to quirk quirk is drag and drop

445
00:20:02,960 --> 00:20:07,520
tool

446
00:20:03,520 --> 00:20:09,280
very handy it runs up to 16 qubits

447
00:20:07,520 --> 00:20:12,400
so we can export into that format as

448
00:20:09,280 --> 00:20:15,360
well and export to our own formats and

449
00:20:12,400 --> 00:20:16,559
export circuit drawing into into vector

450
00:20:15,360 --> 00:20:19,439
or

451
00:20:16,559 --> 00:20:20,000
or bitmap formats so this is

452
00:20:19,440 --> 00:20:23,280
connectivity

453
00:20:20,000 --> 00:20:23,280
diagram and

454
00:20:23,440 --> 00:20:27,120
this is a queue convert this is common

455
00:20:26,080 --> 00:20:29,760
line tool

456
00:20:27,120 --> 00:20:30,158
uh written in javascript so you install

457
00:20:29,760 --> 00:20:32,559
it from

458
00:20:30,159 --> 00:20:33,919
npm mp and install queue convert and you

459
00:20:32,559 --> 00:20:37,360
can see uh

460
00:20:33,919 --> 00:20:40,960
the usage i will i uh so

461
00:20:37,360 --> 00:20:43,360
q comment input file source format

462
00:20:40,960 --> 00:20:45,039
it doesn't automatically detect source

463
00:20:43,360 --> 00:20:46,799
format so you need to tell this is chasm

464
00:20:45,039 --> 00:20:50,240
or this sql

465
00:20:46,799 --> 00:20:52,400
uh output file and destination format

466
00:20:50,240 --> 00:20:53,360
and it can also generate the jupyter

467
00:20:52,400 --> 00:20:56,000
notebook

468
00:20:53,360 --> 00:20:57,520
which is handy you don't need to copy

469
00:20:56,000 --> 00:21:02,799
paste you can

470
00:20:57,520 --> 00:21:05,039
directly generate jupyter notebook

471
00:21:02,799 --> 00:21:08,400
nothing more to tell about you convert

472
00:21:05,039 --> 00:21:08,400
so there is a

473
00:21:09,120 --> 00:21:17,120
ui uh i can

474
00:21:12,400 --> 00:21:21,360
show you live demonstrate how it works

475
00:21:17,120 --> 00:21:21,360
so let's queue convert

476
00:21:21,600 --> 00:21:26,480
so here you can type you can type the

477
00:21:25,200 --> 00:21:29,200
code

478
00:21:26,480 --> 00:21:30,320
in left side you you choose kazam quill

479
00:21:29,200 --> 00:21:32,799
or

480
00:21:30,320 --> 00:21:35,200
you can also import unitary unitary

481
00:21:32,799 --> 00:21:35,200
matrix

482
00:21:35,440 --> 00:21:44,640
let's say quill and use for example

483
00:21:39,039 --> 00:21:47,280
c naught 2 3

484
00:21:44,640 --> 00:21:48,080
and at the right side it generates code

485
00:21:47,280 --> 00:21:52,000
for example

486
00:21:48,080 --> 00:21:52,639
let's show q sharp so at left side you

487
00:21:52,000 --> 00:21:54,960
type quill

488
00:21:52,640 --> 00:21:55,679
at the right side you have microsoft q

489
00:21:54,960 --> 00:21:59,039
sharp

490
00:21:55,679 --> 00:22:01,760
or you can have a drawing

491
00:21:59,039 --> 00:22:01,760
for example

492
00:22:02,480 --> 00:22:07,120
it automatically updates as you as you

493
00:22:04,880 --> 00:22:07,120
type

494
00:22:09,600 --> 00:22:14,480
and you can download and of course you

495
00:22:11,200 --> 00:22:18,159
can download directly

496
00:22:14,480 --> 00:22:27,840
you can download jupyter notebook

497
00:22:18,159 --> 00:22:27,840
okay let's continue

498
00:22:30,159 --> 00:22:32,799
excuse me

499
00:22:34,640 --> 00:22:40,559
okay so cuconvert is

500
00:22:37,679 --> 00:22:41,919
fresh very fresh and very untested but

501
00:22:40,559 --> 00:22:46,000
it works

502
00:22:41,919 --> 00:22:46,000
and we accept pull requests

503
00:22:46,400 --> 00:22:54,559
so this is usage few lines

504
00:22:49,600 --> 00:22:58,879
so from fantastica import to convert

505
00:22:54,559 --> 00:23:01,280
and then you have converter

506
00:22:58,880 --> 00:23:02,080
so you can use it as you have source

507
00:23:01,280 --> 00:23:05,200
code in some

508
00:23:02,080 --> 00:23:06,399
variable you can you can say cue convert

509
00:23:05,200 --> 00:23:08,720
convert

510
00:23:06,400 --> 00:23:09,840
from which format you give it you give

511
00:23:08,720 --> 00:23:13,039
it

512
00:23:09,840 --> 00:23:16,879
source code into which format and

513
00:23:13,039 --> 00:23:21,520
some options and it you you get the text

514
00:23:16,880 --> 00:23:24,159
converted language easy to use

515
00:23:21,520 --> 00:23:24,720
and then there is a forest back-end for

516
00:23:24,159 --> 00:23:28,320
uh

517
00:23:24,720 --> 00:23:31,120
kiskit it allows you to run

518
00:23:28,320 --> 00:23:32,000
kisket code on right quantum computer or

519
00:23:31,120 --> 00:23:35,360
simulator

520
00:23:32,000 --> 00:23:37,679
by replacing only a single line of code

521
00:23:35,360 --> 00:23:39,120
so how you do it pip install fantastic

522
00:23:37,679 --> 00:23:42,159
akisky forest

523
00:23:39,120 --> 00:23:42,879
and from fantastic you import that

524
00:23:42,159 --> 00:23:45,919
package

525
00:23:42,880 --> 00:23:50,480
and instead writing this

526
00:23:45,919 --> 00:23:53,120
back end air

527
00:23:50,480 --> 00:23:54,799
line you type forest backhand get back

528
00:23:53,120 --> 00:23:58,320
end and

529
00:23:54,799 --> 00:24:03,600
your cascade code will execute on righty

530
00:23:58,320 --> 00:24:06,879
chip now my intention i reserved a block

531
00:24:03,600 --> 00:24:07,439
a reserved quantum computer 15 minutes

532
00:24:06,880 --> 00:24:10,400
of

533
00:24:07,440 --> 00:24:10,400
quantum computer

534
00:24:10,480 --> 00:24:16,720
in right quantum cloud services

535
00:24:14,080 --> 00:24:16,720
let me see

536
00:24:17,600 --> 00:24:20,399
yes so my

537
00:24:21,840 --> 00:24:25,279
my reservation is active now 5 54 yes

538
00:24:24,799 --> 00:24:27,918
next

539
00:24:25,279 --> 00:24:28,880
few minutes next 10 minutes problem is

540
00:24:27,919 --> 00:24:32,159
that

541
00:24:28,880 --> 00:24:36,159
something is not working i think before

542
00:24:32,159 --> 00:24:36,159
because the connection

543
00:24:37,440 --> 00:24:41,200
because the connect connection uh

544
00:24:39,760 --> 00:24:44,559
internet connection

545
00:24:41,200 --> 00:24:48,000
some port is closed on router here

546
00:24:44,559 --> 00:24:51,039
so my intention was to run a kisket code

547
00:24:48,000 --> 00:24:52,480
on right real quantum computer in front

548
00:24:51,039 --> 00:24:55,279
of your eyes

549
00:24:52,480 --> 00:24:56,080
but unfortunately that that it didn't

550
00:24:55,279 --> 00:24:59,760
work but i

551
00:24:56,080 --> 00:25:03,279
will run on simulator so i prepared uh

552
00:24:59,760 --> 00:25:06,559
let me see okay so this

553
00:25:03,279 --> 00:25:10,720
is a kiskit jupiter notebook

554
00:25:06,559 --> 00:25:14,559
kisket from from popular

555
00:25:10,720 --> 00:25:18,980
kisky textbook this is quantum

556
00:25:14,559 --> 00:25:21,039
approximate optimization for solving

557
00:25:18,980 --> 00:25:24,000
[Music]

558
00:25:21,039 --> 00:25:24,000
max cut problem

559
00:25:24,080 --> 00:25:30,399
and i will simply

560
00:25:27,600 --> 00:25:30,879
so this is original code and somewhere

561
00:25:30,400 --> 00:25:35,120
here

562
00:25:30,880 --> 00:25:38,480
is so here is the

563
00:25:35,120 --> 00:25:42,158
the code which executes uh

564
00:25:38,480 --> 00:25:46,799
executes this on on

565
00:25:42,159 --> 00:25:46,799
local simulator now i will run

566
00:25:48,640 --> 00:25:52,400
entire notebook and we have some results

567
00:25:52,000 --> 00:25:56,640
here

568
00:25:52,400 --> 00:25:59,679
okay and now i will switch to

569
00:25:56,640 --> 00:26:02,400
i will switch to righty so this is

570
00:25:59,679 --> 00:26:02,799
key ibm keyskit code which executes on

571
00:26:02,400 --> 00:26:06,480
on

572
00:26:02,799 --> 00:26:10,799
on chasm simulator ships with kiskit

573
00:26:06,480 --> 00:26:14,080
now just comment that line import our

574
00:26:10,799 --> 00:26:17,760
forest back end and say ins

575
00:26:14,080 --> 00:26:21,439
instead this line say this one

576
00:26:17,760 --> 00:26:25,520
so forest back end get back end

577
00:26:21,440 --> 00:26:28,559
five qubit qvm and

578
00:26:25,520 --> 00:26:32,240
run and it

579
00:26:28,559 --> 00:26:35,840
executes and gives the same results

580
00:26:32,240 --> 00:26:39,679
so and it also works

581
00:26:35,840 --> 00:26:41,520
on real on on real quantum computer not

582
00:26:39,679 --> 00:26:44,320
only on simulator

583
00:26:41,520 --> 00:26:45,120
but unfortunately i was not able to show

584
00:26:44,320 --> 00:26:53,279
you

585
00:26:45,120 --> 00:26:56,080
okay let's continue

586
00:26:53,279 --> 00:26:56,799
yes demonstration that was demonstration

587
00:26:56,080 --> 00:26:59,840
uh

588
00:26:56,799 --> 00:27:03,279
and that's all from me

589
00:26:59,840 --> 00:27:03,279
thank you for your attention

590
00:27:03,840 --> 00:27:10,500
now that rotten tomatoes you prepared

591
00:27:07,440 --> 00:27:13,750
you can drop now i'm ready

592
00:27:10,500 --> 00:27:13,750
[Applause]

593
00:27:17,760 --> 00:27:21,679
and if you have any questions please

594
00:27:20,720 --> 00:27:25,039
please ask i'm

595
00:27:21,679 --> 00:27:25,039
ready to answer

596
00:27:27,360 --> 00:27:30,879
so we have a question about this q

597
00:27:29,760 --> 00:27:34,480
converter

598
00:27:30,880 --> 00:27:37,039
so when you transpire various ways of uh

599
00:27:34,480 --> 00:27:38,559
writing down content computing

600
00:27:37,039 --> 00:27:40,799
algorithms

601
00:27:38,559 --> 00:27:42,960
are they always compatible so is it

602
00:27:40,799 --> 00:27:46,399
always easy or possible to

603
00:27:42,960 --> 00:27:48,080
turn one script into into the other

604
00:27:46,399 --> 00:27:49,439
or are there cases when there are some

605
00:27:48,080 --> 00:27:51,439
errors because you cannot

606
00:27:49,440 --> 00:27:54,960
turn it or even worse when something is

607
00:27:51,440 --> 00:27:56,559
almost like but it's not exactly

608
00:27:54,960 --> 00:27:58,720
i'm not sure that i understood the

609
00:27:56,559 --> 00:28:01,918
question so can you please

610
00:27:58,720 --> 00:28:05,679
okay so any other another way in a

611
00:28:01,919 --> 00:28:08,799
q converter it's always possible to turn

612
00:28:05,679 --> 00:28:10,240
one script into the other or sometimes

613
00:28:08,799 --> 00:28:11,679
there are some instructions which are

614
00:28:10,240 --> 00:28:15,679
not supported

615
00:28:11,679 --> 00:28:17,840
by the other language

616
00:28:15,679 --> 00:28:20,159
well it's it converts a low level

617
00:28:17,840 --> 00:28:22,959
quantum uh

618
00:28:20,159 --> 00:28:24,240
so it's it it doesn't convert entire

619
00:28:22,960 --> 00:28:27,039
kisket into

620
00:28:24,240 --> 00:28:28,559
pikeville for example it converts only

621
00:28:27,039 --> 00:28:31,840
quantum circuit

622
00:28:28,559 --> 00:28:34,000
because in uh quantum program you have

623
00:28:31,840 --> 00:28:36,080
classical part and quantum part

624
00:28:34,000 --> 00:28:37,520
classical part is optimization and and

625
00:28:36,080 --> 00:28:40,080
other thing you you

626
00:28:37,520 --> 00:28:40,879
normally do classical program and uh the

627
00:28:40,080 --> 00:28:42,480
quantum part

628
00:28:40,880 --> 00:28:44,880
the quantum circuit which executes on

629
00:28:42,480 --> 00:28:47,120
simulator or on quantum computer

630
00:28:44,880 --> 00:28:48,240
this is what we convert so we don't

631
00:28:47,120 --> 00:28:50,479
convert entire

632
00:28:48,240 --> 00:28:51,919
for example entire jupiter notebook in

633
00:28:50,480 --> 00:28:55,600
into into

634
00:28:51,919 --> 00:28:58,320
another pi uh spice of pikeville of of

635
00:28:55,600 --> 00:28:58,959
python into another framework we just

636
00:28:58,320 --> 00:29:02,559
convert

637
00:28:58,960 --> 00:29:05,840
low level uh quantum circuit

638
00:29:02,559 --> 00:29:08,320
if this is if that that was the question

639
00:29:05,840 --> 00:29:09,199
uh it's hard to convert for example we

640
00:29:08,320 --> 00:29:12,639
tried to

641
00:29:09,200 --> 00:29:16,000
parse python and to convert

642
00:29:12,640 --> 00:29:17,760
kisket into pikeville but it doesn't

643
00:29:16,000 --> 00:29:20,720
doesn't go well simply you cannot do

644
00:29:17,760 --> 00:29:23,919
that because the code

645
00:29:20,720 --> 00:29:25,520
relies on other libraries and packages

646
00:29:23,919 --> 00:29:27,679
from from kiskit so

647
00:29:25,520 --> 00:29:30,320
in that case we will need to convert

648
00:29:27,679 --> 00:29:33,520
entire kisket into pikeville

649
00:29:30,320 --> 00:29:37,120
and i mean it does it doesn't work

650
00:29:33,520 --> 00:29:37,120
it if that was your question

651
00:29:38,840 --> 00:29:42,879
okay

652
00:29:40,320 --> 00:29:42,879
coming up

653
00:29:52,399 --> 00:29:57,520
thank you since you have

654
00:29:55,600 --> 00:29:59,439
such an overview of all the different

655
00:29:57,520 --> 00:30:02,639
frameworks do you think

656
00:29:59,440 --> 00:30:04,320
you can uh comment if there if there's

657
00:30:02,640 --> 00:30:06,320
already like a framework you would

658
00:30:04,320 --> 00:30:08,158
prefer from the standpoint of

659
00:30:06,320 --> 00:30:09,520
of formulating and then using the

660
00:30:08,159 --> 00:30:11,360
converter to to

661
00:30:09,520 --> 00:30:13,360
get into the framework which is actually

662
00:30:11,360 --> 00:30:15,039
used by the by the hardware or the

663
00:30:13,360 --> 00:30:18,559
implementation

664
00:30:15,039 --> 00:30:20,720
yes idea is that uh users

665
00:30:18,559 --> 00:30:22,000
for example of quantum cloud or whatever

666
00:30:20,720 --> 00:30:24,399
you do

667
00:30:22,000 --> 00:30:25,120
with quantum computer or quantum

668
00:30:24,399 --> 00:30:28,639
simulator

669
00:30:25,120 --> 00:30:32,000
even if you are experimenting at home

670
00:30:28,640 --> 00:30:36,000
to use your framework of preference

671
00:30:32,000 --> 00:30:38,240
with any any chip

672
00:30:36,000 --> 00:30:38,240
thanks

673
00:30:42,720 --> 00:30:45,600
any other questions

674
00:30:45,760 --> 00:30:51,840
if not let's thank the speaker

675
00:30:52,170 --> 00:30:55,859
[Applause]

676
00:31:02,840 --> 00:31:07,600
okay

677
00:31:05,519 --> 00:31:07,600
you

