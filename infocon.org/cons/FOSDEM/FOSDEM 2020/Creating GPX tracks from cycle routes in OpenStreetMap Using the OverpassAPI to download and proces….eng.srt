1
00:00:05,600 --> 00:00:10,000
i'm henry and i'm going to

2
00:00:06,640 --> 00:00:10,559
speak about creating gpx tracks from

3
00:00:10,000 --> 00:00:14,400
open

4
00:00:10,559 --> 00:00:16,560
from cycle routes in openstreetmap

5
00:00:14,400 --> 00:00:18,480
so i'll give you a brief introduction to

6
00:00:16,560 --> 00:00:19,198
the me and the problem i'm trying to

7
00:00:18,480 --> 00:00:22,320
solve

8
00:00:19,199 --> 00:00:25,680
um a little bit of an overview on open

9
00:00:22,320 --> 00:00:26,800
street map data and then i'm going to

10
00:00:25,680 --> 00:00:29,679
speak about how

11
00:00:26,800 --> 00:00:30,880
we process cycle routes from that data

12
00:00:29,679 --> 00:00:31,598
then finally i'm going to give some

13
00:00:30,880 --> 00:00:34,559
examples

14
00:00:31,599 --> 00:00:35,760
of completed cycle routes and then speak

15
00:00:34,559 --> 00:00:39,280
about some of the challenges i

16
00:00:35,760 --> 00:00:42,399
encountered and some of the next steps

17
00:00:39,280 --> 00:00:43,440
so as an introduction i'm henry if you

18
00:00:42,399 --> 00:00:45,920
want to contact me

19
00:00:43,440 --> 00:00:46,718
twitter linkedin i actually work for a

20
00:00:45,920 --> 00:00:49,600
company called

21
00:00:46,719 --> 00:00:51,120
saitera which we make a device to grow

22
00:00:49,600 --> 00:00:52,879
human and animal cells

23
00:00:51,120 --> 00:00:54,320
so it's quite far away from what i'm

24
00:00:52,879 --> 00:00:56,000
speaking about today but

25
00:00:54,320 --> 00:00:58,960
something i really really love is

26
00:00:56,000 --> 00:01:00,000
cycling and i use cycling every day as a

27
00:00:58,960 --> 00:01:02,559
way to get to work

28
00:01:00,000 --> 00:01:03,680
but then at other times cycling it's

29
00:01:02,559 --> 00:01:05,600
less of a

30
00:01:03,680 --> 00:01:07,040
to get to a destination it's more about

31
00:01:05,600 --> 00:01:09,439
of a journey

32
00:01:07,040 --> 00:01:11,520
and so here is two examples of some of

33
00:01:09,439 --> 00:01:14,720
the amazing cycle routes in europe

34
00:01:11,520 --> 00:01:17,039
this is the danube cycle path

35
00:01:14,720 --> 00:01:18,479
and this is a very long route in italy

36
00:01:17,040 --> 00:01:20,720
so

37
00:01:18,479 --> 00:01:22,240
an issue that comes when trying to

38
00:01:20,720 --> 00:01:25,600
follow these cycle routes

39
00:01:22,240 --> 00:01:27,679
is often the signage is very poor

40
00:01:25,600 --> 00:01:29,280
in the uk you get these stickers stuck

41
00:01:27,680 --> 00:01:31,360
on lampposts and then people

42
00:01:29,280 --> 00:01:33,360
peel the stickers off sometimes the sign

43
00:01:31,360 --> 00:01:36,000
is 20 meters down the

44
00:01:33,360 --> 00:01:37,520
road that you've meant to turn down and

45
00:01:36,000 --> 00:01:38,880
then once you're off route it's quite

46
00:01:37,520 --> 00:01:41,200
hard to recover

47
00:01:38,880 --> 00:01:42,158
there are some amazing resources out

48
00:01:41,200 --> 00:01:45,040
there that

49
00:01:42,159 --> 00:01:46,799
help with that open cycle map is an

50
00:01:45,040 --> 00:01:49,920
excellent website

51
00:01:46,799 --> 00:01:52,880
where it shows all the regional and

52
00:01:49,920 --> 00:01:54,799
national and international cycle routes

53
00:01:52,880 --> 00:01:56,798
but it's not always the easiest to

54
00:01:54,799 --> 00:01:59,600
follow on your phone

55
00:01:56,799 --> 00:02:00,560
so i'm going to present open cycle

56
00:01:59,600 --> 00:02:03,759
export

57
00:02:00,560 --> 00:02:04,880
where given a country and a cycle route

58
00:02:03,759 --> 00:02:07,759
reference

59
00:02:04,880 --> 00:02:09,598
you can take the data from openstreetmap

60
00:02:07,759 --> 00:02:15,680
and then download it as a

61
00:02:09,598 --> 00:02:18,879
gpx file so why a gpx file

62
00:02:15,680 --> 00:02:19,920
gpx files are portable to many different

63
00:02:18,879 --> 00:02:22,000
devices

64
00:02:19,920 --> 00:02:23,519
so you could follow the route on your

65
00:02:22,000 --> 00:02:26,000
watch on your

66
00:02:23,520 --> 00:02:26,959
cycle computer or there's many many apps

67
00:02:26,000 --> 00:02:30,160
available

68
00:02:26,959 --> 00:02:33,519
that you can use to follow gpx tracks

69
00:02:30,160 --> 00:02:36,000
so the next section is to

70
00:02:33,519 --> 00:02:37,120
a little bit of an overview of open

71
00:02:36,000 --> 00:02:39,920
street map data

72
00:02:37,120 --> 00:02:40,959
with relevance to cycle routes so a lot

73
00:02:39,920 --> 00:02:43,599
of this will be

74
00:02:40,959 --> 00:02:44,640
familiar to people here but as a quick

75
00:02:43,599 --> 00:02:47,518
overview

76
00:02:44,640 --> 00:02:48,160
the openstreetmap data model consists of

77
00:02:47,519 --> 00:02:52,160
nodes

78
00:02:48,160 --> 00:02:55,040
which is coordinate in gps space

79
00:02:52,160 --> 00:02:55,840
waze which is an ordered collection of

80
00:02:55,040 --> 00:02:58,879
nodes

81
00:02:55,840 --> 00:03:02,000
which could represent a road

82
00:02:58,879 --> 00:03:05,120
or a footpath and relations that

83
00:03:02,000 --> 00:03:07,040
are collections of nodes or waves and

84
00:03:05,120 --> 00:03:09,519
that's how a cycle route is stored

85
00:03:07,040 --> 00:03:10,799
so a cycle route is stored as a relation

86
00:03:09,519 --> 00:03:12,480
where they're just stating

87
00:03:10,800 --> 00:03:14,319
all the different ways that make up that

88
00:03:12,480 --> 00:03:16,399
cycle route so all the different roads

89
00:03:14,319 --> 00:03:18,399
involved

90
00:03:16,400 --> 00:03:19,440
so i thought great it would be very very

91
00:03:18,400 --> 00:03:22,480
easy to

92
00:03:19,440 --> 00:03:24,959
take the data from openstreetmap and

93
00:03:22,480 --> 00:03:26,640
download it and make a gpx file so i

94
00:03:24,959 --> 00:03:28,239
used a function called

95
00:03:26,640 --> 00:03:29,839
line merge which is part of the shapley

96
00:03:28,239 --> 00:03:31,599
library in python

97
00:03:29,840 --> 00:03:33,599
that's meant to take lots of different

98
00:03:31,599 --> 00:03:35,920
lines and put them together to one

99
00:03:33,599 --> 00:03:38,238
continuous route

100
00:03:35,920 --> 00:03:39,839
however as you can see the route that

101
00:03:38,239 --> 00:03:42,319
came out is

102
00:03:39,840 --> 00:03:44,560
not one you'd want to follow and that's

103
00:03:42,319 --> 00:03:46,798
because these large inconsistencies

104
00:03:44,560 --> 00:03:47,640
and to drill down have a look at where

105
00:03:46,799 --> 00:03:50,799
these

106
00:03:47,640 --> 00:03:51,679
inconsistencies originate from here is

107
00:03:50,799 --> 00:03:55,280
an example

108
00:03:51,680 --> 00:03:57,360
of one of the issues so this is a

109
00:03:55,280 --> 00:04:00,640
roundabout near peterborough

110
00:03:57,360 --> 00:04:01,120
and obviously if you're trying to can

111
00:04:00,640 --> 00:04:03,760
take

112
00:04:01,120 --> 00:04:05,599
a continuous route the shapely line

113
00:04:03,760 --> 00:04:07,518
merge doesn't know which section of the

114
00:04:05,599 --> 00:04:10,238
roundabout to follow

115
00:04:07,519 --> 00:04:12,879
so that's a issue that needs solving in

116
00:04:10,239 --> 00:04:16,399
openstreetmap data

117
00:04:12,879 --> 00:04:19,519
and also what we can see from

118
00:04:16,399 --> 00:04:21,918
looking at why this occurred is

119
00:04:19,519 --> 00:04:24,160
the colors represent different ways that

120
00:04:21,918 --> 00:04:27,359
make this up

121
00:04:24,160 --> 00:04:29,600
and the green way is the roundabout

122
00:04:27,360 --> 00:04:31,280
and then there's the two joining roads

123
00:04:29,600 --> 00:04:34,240
so actually there's no

124
00:04:31,280 --> 00:04:36,320
point that joins the ways of the joining

125
00:04:34,240 --> 00:04:38,479
road and the roundabout

126
00:04:36,320 --> 00:04:40,320
so there's two problems here one the

127
00:04:38,479 --> 00:04:41,680
line merge doesn't know which track of

128
00:04:40,320 --> 00:04:45,440
the roundabout to choose

129
00:04:41,680 --> 00:04:48,000
and two the ways the roundabout way

130
00:04:45,440 --> 00:04:50,560
doesn't join an end point to the ways

131
00:04:48,000 --> 00:04:52,400
that join the roundabout

132
00:04:50,560 --> 00:04:54,000
there are other issues in some of the

133
00:04:52,400 --> 00:04:56,960
cycle route data

134
00:04:54,000 --> 00:04:58,560
for example here we again get the same

135
00:04:56,960 --> 00:05:00,239
problem where right at the top where the

136
00:04:58,560 --> 00:05:02,479
yellow joins the green

137
00:05:00,240 --> 00:05:04,000
uh this is a joining point of two ways

138
00:05:02,479 --> 00:05:05,599
where that doesn't correspond to an

139
00:05:04,000 --> 00:05:07,600
endpoint of a way

140
00:05:05,600 --> 00:05:09,440
so that's hard to root in addition

141
00:05:07,600 --> 00:05:13,120
there's just a complete gap

142
00:05:09,440 --> 00:05:15,360
so line merge completely falls down

143
00:05:13,120 --> 00:05:18,160
in the scenario where it's trying to

144
00:05:15,360 --> 00:05:18,160
resolve a route

145
00:05:19,199 --> 00:05:22,639
so that was a little bit of an overview

146
00:05:20,960 --> 00:05:23,680
of what the data is stored in

147
00:05:22,639 --> 00:05:25,840
openstreetmap

148
00:05:23,680 --> 00:05:27,759
i'll now talk about how we can process

149
00:05:25,840 --> 00:05:29,440
that data and try and result in

150
00:05:27,759 --> 00:05:32,160
a cycle route that you can then follow

151
00:05:29,440 --> 00:05:35,280
on one of your mobile devices

152
00:05:32,160 --> 00:05:40,320
so as a very basic overview

153
00:05:35,280 --> 00:05:42,320
to the tool it uses the overpass api

154
00:05:40,320 --> 00:05:44,960
which is an excellent way to query

155
00:05:42,320 --> 00:05:46,719
openstreetmap data

156
00:05:44,960 --> 00:05:48,000
and then you don't have to download any

157
00:05:46,720 --> 00:05:50,240
big binary files

158
00:05:48,000 --> 00:05:51,440
so you can download just what's relevant

159
00:05:50,240 --> 00:05:54,000
to your use case

160
00:05:51,440 --> 00:05:55,520
so here we're downloading a particular

161
00:05:54,000 --> 00:05:58,960
relation

162
00:05:55,520 --> 00:06:00,080
for a certain cycle route and this comes

163
00:05:58,960 --> 00:06:02,719
with all the ways

164
00:06:00,080 --> 00:06:03,680
and nodes that make up that cycle route

165
00:06:02,720 --> 00:06:06,560
we then

166
00:06:03,680 --> 00:06:07,520
process the ways as i showed before with

167
00:06:06,560 --> 00:06:09,680
the roundabout

168
00:06:07,520 --> 00:06:13,280
there's places where the ways join but

169
00:06:09,680 --> 00:06:13,280
that doesn't correspond to an end point

170
00:06:13,680 --> 00:06:17,840
so we need to split the ways by the

171
00:06:16,639 --> 00:06:21,120
points that they join

172
00:06:17,840 --> 00:06:22,719
other ways and then

173
00:06:21,120 --> 00:06:24,880
once we have those waypoints where they

174
00:06:22,720 --> 00:06:26,720
all join we need to do some processing

175
00:06:24,880 --> 00:06:27,680
to work out the best way to go between

176
00:06:26,720 --> 00:06:29,199
them

177
00:06:27,680 --> 00:06:30,960
and finally once we've done that

178
00:06:29,199 --> 00:06:34,479
processing we then

179
00:06:30,960 --> 00:06:35,198
create a route from that setup of

180
00:06:34,479 --> 00:06:37,680
waypoints

181
00:06:35,199 --> 00:06:40,319
and finally we can down download a gpx

182
00:06:37,680 --> 00:06:40,319
file from that

183
00:06:40,960 --> 00:06:47,120
so processing ways we find

184
00:06:44,400 --> 00:06:49,039
all the places that ways intersect and

185
00:06:47,120 --> 00:06:50,479
we call that waypoints

186
00:06:49,039 --> 00:06:52,240
then we split the ways at all the

187
00:06:50,479 --> 00:06:55,840
waypoints to

188
00:06:52,240 --> 00:06:58,240
make so that we have subsections of ways

189
00:06:55,840 --> 00:06:59,919
then we create a cost matrix between all

190
00:06:58,240 --> 00:07:01,919
these intersections

191
00:06:59,919 --> 00:07:02,960
and so cost is something that we've

192
00:07:01,919 --> 00:07:06,318
defined

193
00:07:02,960 --> 00:07:06,960
as a distance the distance of the line

194
00:07:06,319 --> 00:07:10,319
between

195
00:07:06,960 --> 00:07:11,520
two points times by coefficient and so a

196
00:07:10,319 --> 00:07:15,440
coefficient

197
00:07:11,520 --> 00:07:17,599
for a way that is primarily for

198
00:07:15,440 --> 00:07:18,560
cycling along the coefficient is very

199
00:07:17,599 --> 00:07:22,159
low we

200
00:07:18,560 --> 00:07:25,520
choose a one coefficient for a way where

201
00:07:22,160 --> 00:07:26,880
cycles are permitted a road with the

202
00:07:25,520 --> 00:07:29,359
specific

203
00:07:26,880 --> 00:07:31,280
segregated component of cycleway we'll

204
00:07:29,360 --> 00:07:32,160
choose a cost such as two so a little

205
00:07:31,280 --> 00:07:34,880
bit more

206
00:07:32,160 --> 00:07:36,639
penalizing that route or for just a

207
00:07:34,880 --> 00:07:40,080
generic road that has no

208
00:07:36,639 --> 00:07:42,800
cycle provision a cost of 10 and finally

209
00:07:40,080 --> 00:07:44,479
for a road that it's maybe you going the

210
00:07:42,800 --> 00:07:46,160
wrong way down a one-way street

211
00:07:44,479 --> 00:07:47,919
so it's an impassable road but there's

212
00:07:46,160 --> 00:07:49,280
still a connection we'll choose a

213
00:07:47,919 --> 00:07:50,479
coefficient of a hundred

214
00:07:49,280 --> 00:07:52,799
so we're really really trying to

215
00:07:50,479 --> 00:07:54,080
penalize but the whole purpose is we

216
00:07:52,800 --> 00:07:56,960
want to

217
00:07:54,080 --> 00:07:58,719
whatever the data holds we want to be

218
00:07:56,960 --> 00:07:59,599
able to get a final cycle route all the

219
00:07:58,720 --> 00:08:02,240
way

220
00:07:59,599 --> 00:08:04,479
and then identify the issues at the end

221
00:08:02,240 --> 00:08:06,720
and finally we have a coefficient where

222
00:08:04,479 --> 00:08:07,680
there's no connection between two

223
00:08:06,720 --> 00:08:09,199
waypoints

224
00:08:07,680 --> 00:08:11,520
and then that's a coefficient of a

225
00:08:09,199 --> 00:08:13,120
thousand so it's very penalized but we

226
00:08:11,520 --> 00:08:14,318
still will make that jump if we need to

227
00:08:13,120 --> 00:08:15,599
make that jump

228
00:08:14,319 --> 00:08:17,360
so that's how we build up the cost

229
00:08:15,599 --> 00:08:18,800
matrix

230
00:08:17,360 --> 00:08:21,599
and to take that back to the example

231
00:08:18,800 --> 00:08:24,240
with the roundabout here

232
00:08:21,599 --> 00:08:25,280
these are two directions between the

233
00:08:24,240 --> 00:08:28,879
different waypoints

234
00:08:25,280 --> 00:08:31,280
because sections can be

235
00:08:28,879 --> 00:08:32,959
can only allow you to pass one way this

236
00:08:31,280 --> 00:08:34,640
is a roundabout in the uk so we have to

237
00:08:32,958 --> 00:08:38,559
go around it clockwise

238
00:08:34,640 --> 00:08:41,679
therefore the join to the roundabout

239
00:08:38,559 --> 00:08:42,159
it's a two coefficient each way to go

240
00:08:41,679 --> 00:08:44,079
around the

241
00:08:42,159 --> 00:08:45,680
roundabout clockwise is a two

242
00:08:44,080 --> 00:08:47,360
coefficient but to go around it and

243
00:08:45,680 --> 00:08:49,120
anti-clockwise the hundred coefficient

244
00:08:47,360 --> 00:08:52,240
to penalize that option

245
00:08:49,120 --> 00:08:53,600
and again the uh way on the other exit

246
00:08:52,240 --> 00:08:54,480
to the roundabout is two both ways

247
00:08:53,600 --> 00:08:56,399
because it's

248
00:08:54,480 --> 00:08:57,600
permitted but it's only it's a road it's

249
00:08:56,399 --> 00:09:01,360
not specifically for

250
00:08:57,600 --> 00:09:02,800
cycling along then we have this cost

251
00:09:01,360 --> 00:09:05,519
matrix

252
00:09:02,800 --> 00:09:07,279
and we want to create a route from it so

253
00:09:05,519 --> 00:09:08,640
we've downloaded a relation

254
00:09:07,279 --> 00:09:10,399
and the first thing we need to do is

255
00:09:08,640 --> 00:09:11,199
work out where the route is going from

256
00:09:10,399 --> 00:09:13,279
and to

257
00:09:11,200 --> 00:09:14,959
initially what we do is we just take the

258
00:09:13,279 --> 00:09:16,800
furthest two points

259
00:09:14,959 --> 00:09:18,719
this falls down in a number of different

260
00:09:16,800 --> 00:09:21,199
scenarios

261
00:09:18,720 --> 00:09:22,880
but initially it works for trying to get

262
00:09:21,200 --> 00:09:24,720
the longest route available

263
00:09:22,880 --> 00:09:27,360
and then we use dixtra's algorithm to

264
00:09:24,720 --> 00:09:29,040
find the shortest path between these two

265
00:09:27,360 --> 00:09:31,680
furthest points

266
00:09:29,040 --> 00:09:33,279
and we create a route in both directions

267
00:09:31,680 --> 00:09:34,239
obviously one way you'd want to go one

268
00:09:33,279 --> 00:09:35,200
way around the roundabout

269
00:09:34,240 --> 00:09:37,440
and the other way you want to go the

270
00:09:35,200 --> 00:09:38,160
other way around the roundabout so some

271
00:09:37,440 --> 00:09:40,320
examples

272
00:09:38,160 --> 00:09:41,360
of the created route you can't see the

273
00:09:40,320 --> 00:09:42,720
blue line when it's

274
00:09:41,360 --> 00:09:45,200
on the entrance and exit to the

275
00:09:42,720 --> 00:09:46,000
roundabout but if you are coming from

276
00:09:45,200 --> 00:09:48,959
this point

277
00:09:46,000 --> 00:09:49,600
to over here you go clockwise around the

278
00:09:48,959 --> 00:09:50,880
roundabout

279
00:09:49,600 --> 00:09:52,320
and if you're coming back you'd

280
00:09:50,880 --> 00:09:53,519
obviously go clockwise but the other way

281
00:09:52,320 --> 00:09:56,560
around the roundabout

282
00:09:53,519 --> 00:09:57,360
so this is how uh in a very low level

283
00:09:56,560 --> 00:10:00,640
example

284
00:09:57,360 --> 00:10:02,839
we choose the correct direction to go

285
00:10:00,640 --> 00:10:04,640
along the different options for the road

286
00:10:02,839 --> 00:10:07,200
segments

287
00:10:04,640 --> 00:10:08,160
for the example where we have a complete

288
00:10:07,200 --> 00:10:12,000
lack of

289
00:10:08,160 --> 00:10:15,360
connection we choose what is

290
00:10:12,000 --> 00:10:17,680
close to being the what looks to be

291
00:10:15,360 --> 00:10:19,040
almost the closest to my eyes actually

292
00:10:17,680 --> 00:10:22,399
this one looks closest

293
00:10:19,040 --> 00:10:23,439
but so this is not actually a way in

294
00:10:22,399 --> 00:10:25,120
openstreetmaps

295
00:10:23,440 --> 00:10:26,640
but the routing algorithm has done the

296
00:10:25,120 --> 00:10:29,200
jump to try and find

297
00:10:26,640 --> 00:10:31,439
the best available option to try and

298
00:10:29,200 --> 00:10:35,040
make up the route

299
00:10:31,440 --> 00:10:38,399
um so that was some

300
00:10:35,040 --> 00:10:41,839
examples of at a very low scale

301
00:10:38,399 --> 00:10:44,320
what root the routing algorithm does to

302
00:10:41,839 --> 00:10:45,519
weather the slight inconsistencies in

303
00:10:44,320 --> 00:10:47,519
the data

304
00:10:45,519 --> 00:10:49,120
here's some examples of some completed

305
00:10:47,519 --> 00:10:52,640
cycle routes

306
00:10:49,120 --> 00:10:54,959
so this is the rv4 in belgium

307
00:10:52,640 --> 00:10:55,680
and you can't see on this image but

308
00:10:54,959 --> 00:10:59,439
maybe if i

309
00:10:55,680 --> 00:11:02,719
zoom in

310
00:10:59,440 --> 00:11:06,160
um there is

311
00:11:02,720 --> 00:11:06,160
a number of different

312
00:11:08,640 --> 00:11:15,199
there will be sections in here that

313
00:11:11,680 --> 00:11:18,239
uh resolve one-way sections

314
00:11:15,200 --> 00:11:18,240
so for example here

315
00:11:18,480 --> 00:11:22,800
uh this root actually has

316
00:11:23,680 --> 00:11:28,800
a version that goes from brussels and a

317
00:11:26,880 --> 00:11:32,560
version that comes to brussels

318
00:11:28,800 --> 00:11:32,560
and resolves the one-way sections in it

319
00:11:34,160 --> 00:11:37,360
so that's an example of a route in

320
00:11:36,560 --> 00:11:39,279
belgium

321
00:11:37,360 --> 00:11:40,399
there's also some fairly long routes

322
00:11:39,279 --> 00:11:44,320
this is one in

323
00:11:40,399 --> 00:11:46,640
france that follows up the lot valley

324
00:11:44,320 --> 00:11:48,560
and another example of a route in the

325
00:11:46,640 --> 00:11:51,199
united kingdom

326
00:11:48,560 --> 00:11:52,479
if you'll notice here what's quite

327
00:11:51,200 --> 00:11:57,560
alarming is these

328
00:11:52,480 --> 00:11:59,920
these completely straight sections

329
00:11:57,560 --> 00:12:02,079
discontinuity of either the root or the

330
00:11:59,920 --> 00:12:05,199
data that represents the root

331
00:12:02,079 --> 00:12:07,279
um so i think the

332
00:12:05,200 --> 00:12:08,880
downloaded gpx files have to come with a

333
00:12:07,279 --> 00:12:10,800
caveat of declaring

334
00:12:08,880 --> 00:12:12,000
what percentage of the route is actually

335
00:12:10,800 --> 00:12:14,719
following ways

336
00:12:12,000 --> 00:12:16,079
because that wouldn't be achievable to

337
00:12:14,720 --> 00:12:18,079
follow

338
00:12:16,079 --> 00:12:19,920
but we're trying to make a very tolerant

339
00:12:18,079 --> 00:12:22,160
routing algorithm so you can

340
00:12:19,920 --> 00:12:24,319
from a particular national cycle route

341
00:12:22,160 --> 00:12:27,600
you can get an overview of the whole

342
00:12:24,320 --> 00:12:29,440
whole journey so

343
00:12:27,600 --> 00:12:31,200
i had a number of challenges that are

344
00:12:29,440 --> 00:12:32,000
still present and got some next steps to

345
00:12:31,200 --> 00:12:34,320
look through

346
00:12:32,000 --> 00:12:35,440
um which i'd really welcome for feedback

347
00:12:34,320 --> 00:12:36,320
and help on because i think there'll be

348
00:12:35,440 --> 00:12:39,839
quite a lot of time for

349
00:12:36,320 --> 00:12:39,839
questions and suggestions

350
00:12:39,920 --> 00:12:44,800
at the moment there is no elevation data

351
00:12:43,279 --> 00:12:46,639
for the points on the route

352
00:12:44,800 --> 00:12:48,000
and if you're trying to plan a route on

353
00:12:46,639 --> 00:12:49,680
your bike

354
00:12:48,000 --> 00:12:52,240
in the apps they have really really

355
00:12:49,680 --> 00:12:54,239
excellent elevation profiles but this

356
00:12:52,240 --> 00:12:57,279
elevation profile would be

357
00:12:54,240 --> 00:13:00,240
entirely zero i've tried to use

358
00:12:57,279 --> 00:13:01,920
open elevation api but haven't been

359
00:13:00,240 --> 00:13:05,360
successful in getting the

360
00:13:01,920 --> 00:13:06,079
responses accurate often it just times

361
00:13:05,360 --> 00:13:09,040
out

362
00:13:06,079 --> 00:13:10,800
so i'd like a way to get elevation data

363
00:13:09,040 --> 00:13:11,839
for these root downloads for the gpx

364
00:13:10,800 --> 00:13:14,959
files

365
00:13:11,839 --> 00:13:16,880
um in addition i'd like to use a correct

366
00:13:14,959 --> 00:13:19,839
spatial reference system

367
00:13:16,880 --> 00:13:21,439
at the moment it does what is a

368
00:13:19,839 --> 00:13:24,880
horrendous thing really it

369
00:13:21,440 --> 00:13:25,760
uses just the gps the latitudes and

370
00:13:24,880 --> 00:13:27,680
longitudes

371
00:13:25,760 --> 00:13:29,360
in order to find distance it doesn't use

372
00:13:27,680 --> 00:13:32,719
the have a sign function

373
00:13:29,360 --> 00:13:35,440
which is a huge limitation but

374
00:13:32,720 --> 00:13:36,160
i wanted to find a nice way to change

375
00:13:35,440 --> 00:13:38,160
between

376
00:13:36,160 --> 00:13:40,319
coordinate reference systems for spatial

377
00:13:38,160 --> 00:13:43,279
reference systems so i'd welcome

378
00:13:40,320 --> 00:13:44,240
thoughts and feedback on that and the

379
00:13:43,279 --> 00:13:46,639
continuity of

380
00:13:44,240 --> 00:13:47,440
cycle routes or route data as we saw in

381
00:13:46,639 --> 00:13:50,240
the example

382
00:13:47,440 --> 00:13:51,680
on route 2 in the united kingdom there

383
00:13:50,240 --> 00:13:52,480
was massive sections where there was

384
00:13:51,680 --> 00:13:55,920
gaps

385
00:13:52,480 --> 00:13:59,839
so this is either a process of trying to

386
00:13:55,920 --> 00:14:02,399
encode that data into open street map or

387
00:13:59,839 --> 00:14:04,320
to see why the root doesn't actually

388
00:14:02,399 --> 00:14:06,000
continue in reality which is also a big

389
00:14:04,320 --> 00:14:07,440
concern

390
00:14:06,000 --> 00:14:09,040
and finally finding the true start and

391
00:14:07,440 --> 00:14:12,639
end points if a root

392
00:14:09,040 --> 00:14:15,040
say did a horseshoe this process

393
00:14:12,639 --> 00:14:16,240
would not result in the whole root

394
00:14:15,040 --> 00:14:19,599
because it would just to

395
00:14:16,240 --> 00:14:21,120
choose the two furthest apart points

396
00:14:19,600 --> 00:14:23,199
and so it would miss almost half the

397
00:14:21,120 --> 00:14:25,279
route in that case so those are some of

398
00:14:23,199 --> 00:14:27,839
the current challenges

399
00:14:25,279 --> 00:14:29,360
next steps i'm thinking that the best

400
00:14:27,839 --> 00:14:32,959
approach to share the

401
00:14:29,360 --> 00:14:34,800
generated gpx files is on github

402
00:14:32,959 --> 00:14:36,319
releases

403
00:14:34,800 --> 00:14:38,719
because that means that they're always

404
00:14:36,320 --> 00:14:40,480
available online and so because they

405
00:14:38,720 --> 00:14:42,000
take a little while to process

406
00:14:40,480 --> 00:14:43,600
it then doesn't require someone to have

407
00:14:42,000 --> 00:14:45,279
to wait for that processing to download

408
00:14:43,600 --> 00:14:47,360
them

409
00:14:45,279 --> 00:14:48,480
i would like to declare which routes are

410
00:14:47,360 --> 00:14:50,160
not continuous

411
00:14:48,480 --> 00:14:52,079
so you have a percentage of the route

412
00:14:50,160 --> 00:14:54,319
that doesn't actually follow ways

413
00:14:52,079 --> 00:14:55,279
so you know that in advance when you're

414
00:14:54,320 --> 00:14:57,519
trying to

415
00:14:55,279 --> 00:14:58,720
use these gpx files to go on a long

416
00:14:57,519 --> 00:15:00,959
adventure

417
00:14:58,720 --> 00:15:03,199
anna additionally because often people

418
00:15:00,959 --> 00:15:05,359
won't necessarily want to follow the 200

419
00:15:03,199 --> 00:15:07,199
miles of route as a continuous section

420
00:15:05,360 --> 00:15:08,800
to split the routes by the towns they

421
00:15:07,199 --> 00:15:11,279
pass through which is a

422
00:15:08,800 --> 00:15:12,639
easily achievable thing with the

423
00:15:11,279 --> 00:15:14,959
overpass api

424
00:15:12,639 --> 00:15:16,560
by looking at whatever towns they pass

425
00:15:14,959 --> 00:15:17,920
through and then working out

426
00:15:16,560 --> 00:15:20,800
little sections that you can then

427
00:15:17,920 --> 00:15:23,199
download so those are some of the next

428
00:15:20,800 --> 00:15:25,439
steps available

429
00:15:23,199 --> 00:15:27,439
and we've got a good period of time for

430
00:15:25,440 --> 00:15:29,120
questions so i'd love any questions or

431
00:15:27,440 --> 00:15:30,079
comments or suggestions on how to solve

432
00:15:29,120 --> 00:15:40,480
some of the challenges

433
00:15:30,079 --> 00:15:44,239
sure i'm sure be easy for others hi um

434
00:15:40,480 --> 00:15:46,240
in order the the question is around uh

435
00:15:44,240 --> 00:15:52,839
incorporating country specific knowledge

436
00:15:46,240 --> 00:15:55,199
about roots are very much different from

437
00:15:52,839 --> 00:15:57,759
germany

438
00:15:55,199 --> 00:15:59,519
so i didn't include any country specific

439
00:15:57,759 --> 00:16:02,560
knowledge about the roots

440
00:15:59,519 --> 00:16:04,880
but i did use the open street map

441
00:16:02,560 --> 00:16:06,399
tags regarding whether something is a

442
00:16:04,880 --> 00:16:09,199
one-way route or

443
00:16:06,399 --> 00:16:13,279
one-way permitted well two-way for

444
00:16:09,199 --> 00:16:13,279
cycles apart from one-way for cars

445
00:16:15,600 --> 00:16:22,720
okay yes do you take in account the more

446
00:16:19,519 --> 00:16:23,600
or less temporary inconvenience

447
00:16:22,720 --> 00:16:26,000
situation

448
00:16:23,600 --> 00:16:26,800
because in brussels i know this example

449
00:16:26,000 --> 00:16:29,600
very good

450
00:16:26,800 --> 00:16:30,240
situation there are private street there

451
00:16:29,600 --> 00:16:33,519
are also

452
00:16:30,240 --> 00:16:35,839
walks in some streets so there

453
00:16:33,519 --> 00:16:37,519
you know the little ring in brussels

454
00:16:35,839 --> 00:16:41,519
they are made bicycles

455
00:16:37,519 --> 00:16:44,800
by bicycle pass in this little ring but

456
00:16:41,519 --> 00:16:47,199
after it will be very nice but now

457
00:16:44,800 --> 00:16:49,680
there is some section it's very not

458
00:16:47,199 --> 00:16:52,959
absolutely not convenient for cyclists

459
00:16:49,680 --> 00:16:53,359
during the wars and so are you taking

460
00:16:52,959 --> 00:16:57,199
this

461
00:16:53,360 --> 00:16:58,079
in account in your so the question is

462
00:16:57,199 --> 00:17:00,000
regarding

463
00:16:58,079 --> 00:17:01,599
the road works on a route and how that's

464
00:17:00,000 --> 00:17:03,759
taken into account

465
00:17:01,600 --> 00:17:05,520
if the if there isn't data in

466
00:17:03,759 --> 00:17:07,199
openstreetmap for it

467
00:17:05,520 --> 00:17:08,559
at the moment i won't take into account

468
00:17:07,199 --> 00:17:10,000
for it but

469
00:17:08,559 --> 00:17:11,439
if you know of some tags in

470
00:17:10,000 --> 00:17:13,280
openstreetmap that encodes that

471
00:17:11,439 --> 00:17:19,839
information that would be very useful to

472
00:17:13,280 --> 00:17:19,839
put into the tool

473
00:17:40,000 --> 00:17:44,840
the same in germany these days they

474
00:17:42,160 --> 00:17:47,280
changed the law a few years ago

475
00:17:44,840 --> 00:17:49,520
okay a lot of not all

476
00:17:47,280 --> 00:17:50,559
but a large quantity of the one-way

477
00:17:49,520 --> 00:17:53,918
roads allow

478
00:17:50,559 --> 00:17:56,240
for bicycles to go the road the google

479
00:17:53,919 --> 00:17:58,880
navigator

480
00:17:56,240 --> 00:18:01,039
i have read on openstreetmap how they

481
00:17:58,880 --> 00:18:02,720
say that if a company a country's

482
00:18:01,039 --> 00:18:06,559
standard is to allow

483
00:18:02,720 --> 00:18:08,960
um opposing flow for cyclists

484
00:18:06,559 --> 00:18:10,639
it then is as opposed to tagging it when

485
00:18:08,960 --> 00:18:12,559
it's allowed

486
00:18:10,640 --> 00:18:14,000
contra flow for cyclists they'll tag it

487
00:18:12,559 --> 00:18:15,039
if it's not allowed country flow for

488
00:18:14,000 --> 00:18:16,320
cyclists

489
00:18:15,039 --> 00:18:18,400
so that's a very good point i need to

490
00:18:16,320 --> 00:18:19,918
incorporate that because it was very

491
00:18:18,400 --> 00:18:21,919
uk focused when i was originally

492
00:18:19,919 --> 00:18:24,160
building out the tool the other issue

493
00:18:21,919 --> 00:18:25,919
is at least going to some of the google

494
00:18:24,160 --> 00:18:27,039
maps and also the street maps is often

495
00:18:25,919 --> 00:18:28,880
they all have

496
00:18:27,039 --> 00:18:30,240
cycle routes which are going through the

497
00:18:28,880 --> 00:18:32,240
needs which are

498
00:18:30,240 --> 00:18:34,160
cycle routes i mean if you want to carry

499
00:18:32,240 --> 00:18:36,720
your bicycle it's okay

500
00:18:34,160 --> 00:18:37,520
so this is sorry i'm going to be a

501
00:18:36,720 --> 00:18:40,559
little bit alone

502
00:18:37,520 --> 00:18:43,120
okay i only want questions

503
00:18:40,559 --> 00:18:44,480
very concise questions so you can answer

504
00:18:43,120 --> 00:18:46,080
in the precise way

505
00:18:44,480 --> 00:18:47,840
this i'm terribly sorry isn't the

506
00:18:46,080 --> 00:18:48,159
question it's a software recommendation

507
00:18:47,840 --> 00:18:50,879
for

508
00:18:48,160 --> 00:18:51,760
projecting um your cartographic

509
00:18:50,880 --> 00:18:53,280
coordinates

510
00:18:51,760 --> 00:18:56,080
there's a thing called lib crotch you

511
00:18:53,280 --> 00:18:56,080
want libraries

512
00:19:05,440 --> 00:19:08,799
i was gonna ask why you don't get back

513
00:19:07,280 --> 00:19:10,960
data from the psychists

514
00:19:08,799 --> 00:19:12,400
about the elevation because almost all

515
00:19:10,960 --> 00:19:15,200
people track their second

516
00:19:12,400 --> 00:19:16,000
so you get from you you can use travel

517
00:19:15,200 --> 00:19:17,440
routes

518
00:19:16,000 --> 00:19:19,760
and get data from there about the

519
00:19:17,440 --> 00:19:22,880
elevation of different roads

520
00:19:19,760 --> 00:19:23,360
and potentially even compare the gpx

521
00:19:22,880 --> 00:19:25,679
track

522
00:19:23,360 --> 00:19:26,799
of their route to the route to see if

523
00:19:25,679 --> 00:19:29,520
there's any

524
00:19:26,799 --> 00:19:31,600
road works on the way yeah well you can

525
00:19:29,520 --> 00:19:34,400
let me mention that strava

526
00:19:31,600 --> 00:19:35,760
altitude information is proprietary okay

527
00:19:34,400 --> 00:19:37,600
okay yeah but it's given

528
00:19:35,760 --> 00:19:39,360
they're using their own digital

529
00:19:37,600 --> 00:19:41,760
evaluation model

530
00:19:39,360 --> 00:19:43,199
that's helpful okay you can take this

531
00:19:41,760 --> 00:19:45,640
offline

532
00:19:43,200 --> 00:19:47,120
there's a template so you come across

533
00:19:45,640 --> 00:19:49,280
cyclestreets.net

534
00:19:47,120 --> 00:19:51,199
i have done right okay because they have

535
00:19:49,280 --> 00:19:53,200
a lot of these questions they have spent

536
00:19:51,200 --> 00:19:55,520
about a decade dealing with all these

537
00:19:53,200 --> 00:19:56,160
problems of cycle routing on the osm

538
00:19:55,520 --> 00:19:57,440
data

539
00:19:56,160 --> 00:19:58,960
so there's probably a lot of good ideas

540
00:19:57,440 --> 00:20:00,000
you can steal out of that to get less

541
00:19:58,960 --> 00:20:02,559
shitty routes okay

542
00:20:00,000 --> 00:20:04,080
great takeaway yeah maybe stay

543
00:20:02,559 --> 00:20:06,158
remarkable there was a new project which

544
00:20:04,080 --> 00:20:09,280
is called secret osm

545
00:20:06,159 --> 00:20:12,400
which replaces the

546
00:20:09,280 --> 00:20:21,840
cycle map and which

547
00:20:12,400 --> 00:20:21,840
cycle ysm

548
00:20:30,159 --> 00:20:33,200
that's something that i think is a

549
00:20:31,840 --> 00:20:35,199
important part of the project

550
00:20:33,200 --> 00:20:36,799
so when i have the website available to

551
00:20:35,200 --> 00:20:38,720
download the gpx files

552
00:20:36,799 --> 00:20:39,918
it's also a case of saying hearing

553
00:20:38,720 --> 00:20:42,640
consistencies

554
00:20:39,919 --> 00:20:43,840
in the map because if you can't root it

555
00:20:42,640 --> 00:20:45,360
from a cycle

556
00:20:43,840 --> 00:20:46,959
if the cycle route is already saying you

557
00:20:45,360 --> 00:20:48,879
can get to these two places

558
00:20:46,960 --> 00:20:50,880
then if you can't root over a certain

559
00:20:48,880 --> 00:20:52,799
point then it's an issue with the ways

560
00:20:50,880 --> 00:20:54,799
which might affect then car routing on

561
00:20:52,799 --> 00:21:00,400
top of open street map

562
00:20:54,799 --> 00:21:02,240
okay the dutchman is back

563
00:21:00,400 --> 00:21:04,240
exactly what you did the whole building

564
00:21:02,240 --> 00:21:07,360
the network and the

565
00:21:04,240 --> 00:21:10,400
reprojections and everything

566
00:21:07,360 --> 00:21:13,360
i i didn't but i'd really like to see it

567
00:21:10,400 --> 00:21:13,360
because that's really

568
00:21:14,840 --> 00:21:17,840
nice

569
00:21:29,360 --> 00:21:32,959
there are lots and lots of things

570
00:21:30,720 --> 00:21:34,960
available to say i want uh

571
00:21:32,960 --> 00:21:36,159
a cycle friendly or a fast route between

572
00:21:34,960 --> 00:21:40,880
two points

573
00:21:36,159 --> 00:21:40,880
but to download just a cycle

574
00:21:43,039 --> 00:21:46,640
modify one of route algorithms and gone

575
00:21:45,200 --> 00:21:47,360
to a lot of trouble to get mostly stuff

576
00:21:46,640 --> 00:21:49,440
right

577
00:21:47,360 --> 00:21:50,479
okay i'm going to cheat yuri could you

578
00:21:49,440 --> 00:21:53,440
come forward

579
00:21:50,480 --> 00:21:56,000
and sort of plug yourself your laptop or

580
00:21:53,440 --> 00:21:56,000
both in

581
00:21:58,960 --> 00:22:02,080
okay next question where was that that

582
00:22:01,039 --> 00:22:04,559
you

583
00:22:02,080 --> 00:22:06,320
uh we got with regards to the elevation

584
00:22:04,559 --> 00:22:08,480
model uh did you look into

585
00:22:06,320 --> 00:22:10,320
governmental or city publications of

586
00:22:08,480 --> 00:22:11,440
open data they often have their

587
00:22:10,320 --> 00:22:13,760
elevation models

588
00:22:11,440 --> 00:22:14,480
published online as open data and that

589
00:22:13,760 --> 00:22:16,080
you could use

590
00:22:14,480 --> 00:22:18,960
and that would be for a city level or

591
00:22:16,080 --> 00:22:18,960
for a country level

592
00:22:22,640 --> 00:22:26,080
thank you for anything so cool you had a

593
00:22:25,520 --> 00:22:27,520
question

594
00:22:26,080 --> 00:22:29,360
have you been thinking about the

595
00:22:27,520 --> 00:22:30,158
incorporating heat maps like you started

596
00:22:29,360 --> 00:22:33,840
to to use

597
00:22:30,159 --> 00:22:35,360
data which effects parts are most used

598
00:22:33,840 --> 00:22:38,639
i haven't thought of that that's a

599
00:22:35,360 --> 00:22:38,639
really nice feature i use it all the

600
00:22:38,840 --> 00:22:41,840
time

601
00:22:52,480 --> 00:22:56,159
i haven't seen psycho.travel before

602
00:22:59,760 --> 00:23:08,799
oh brilliant okay the gentleman in the

603
00:23:04,159 --> 00:23:10,799
one bit last round so um

604
00:23:08,799 --> 00:23:12,240
is it possible to download the

605
00:23:10,799 --> 00:23:15,280
intermediate data that

606
00:23:12,240 --> 00:23:16,559
has like the matrix weights so that you

607
00:23:15,280 --> 00:23:18,720
can perhaps

608
00:23:16,559 --> 00:23:20,960
add preferences that can be taken into

609
00:23:18,720 --> 00:23:23,200
account in that sort of

610
00:23:20,960 --> 00:23:24,320
like uh shortest path such as for

611
00:23:23,200 --> 00:23:28,159
example you prefer

612
00:23:24,320 --> 00:23:31,439
specific types of remotes or extended

613
00:23:28,159 --> 00:23:33,600
things uh currently the

614
00:23:31,440 --> 00:23:35,360
matrix is not available to download but

615
00:23:33,600 --> 00:23:37,600
you'd really want to

616
00:23:35,360 --> 00:23:39,918
get in just before that step before the

617
00:23:37,600 --> 00:23:41,520
coefficients are applied

618
00:23:39,919 --> 00:23:43,120
so then you could provide your

619
00:23:41,520 --> 00:23:45,840
preferences

620
00:23:43,120 --> 00:23:46,559
so perhaps a extensible version where

621
00:23:45,840 --> 00:23:48,080
you can

622
00:23:46,559 --> 00:23:49,520
choose your own coefficients for

623
00:23:48,080 --> 00:23:50,960
different sections of route would be a

624
00:23:49,520 --> 00:23:53,200
good idea

625
00:23:50,960 --> 00:24:04,159
okay that was the last one thank you for

626
00:23:53,200 --> 00:24:06,240
having us

627
00:24:04,159 --> 00:24:06,240
you

