1
00:00:06,399 --> 00:00:09,920
all right hi everyone i will just

2
00:00:08,000 --> 00:00:12,240
skip the introduction because you see my

3
00:00:09,920 --> 00:00:14,320
name and you uh

4
00:00:12,240 --> 00:00:16,079
might have seen me before uh i would

5
00:00:14,320 --> 00:00:18,400
like to start with a bit of a disclaimer

6
00:00:16,079 --> 00:00:19,520
so i will be speaking about a very

7
00:00:18,400 --> 00:00:23,599
specific company

8
00:00:19,520 --> 00:00:25,519
which is intel at this part um

9
00:00:23,600 --> 00:00:27,920
this here is not about blaming anyone

10
00:00:25,519 --> 00:00:30,479
it's not about you know

11
00:00:27,920 --> 00:00:32,160
saying or pointing out that something is

12
00:00:30,480 --> 00:00:34,719
very very bad anywhere

13
00:00:32,159 --> 00:00:35,360
uh this is really just about getting a

14
00:00:34,719 --> 00:00:38,480
clue

15
00:00:35,360 --> 00:00:39,680
of uh what we can understand from

16
00:00:38,480 --> 00:00:42,319
previous work

17
00:00:39,680 --> 00:00:44,559
or what i have personally looked into to

18
00:00:42,320 --> 00:00:47,600
understand what the intel management

19
00:00:44,559 --> 00:00:51,199
engine is and what it's doing

20
00:00:47,600 --> 00:00:52,960
or what it can do um yes now i might

21
00:00:51,199 --> 00:00:54,320
have some errors in here

22
00:00:52,960 --> 00:00:56,160
there will be a link to my github

23
00:00:54,320 --> 00:00:57,520
repository later where you can also find

24
00:00:56,160 --> 00:00:58,480
all the slides so you can just file

25
00:00:57,520 --> 00:01:00,000
issues you know

26
00:00:58,480 --> 00:01:02,319
or make pull requests which is even

27
00:01:00,000 --> 00:01:02,320
easier

28
00:01:02,480 --> 00:01:06,479
so we'll just start with a hopefully

29
00:01:04,879 --> 00:01:08,080
brief introduction this time i already

30
00:01:06,479 --> 00:01:11,200
gave a similar talk at

31
00:01:08,080 --> 00:01:13,039
c3 last year like a month ago with uh

32
00:01:11,200 --> 00:01:14,000
very bad timing actually so i'm very

33
00:01:13,040 --> 00:01:16,640
sorry for that

34
00:01:14,000 --> 00:01:17,280
uh i will therefore skip some of the

35
00:01:16,640 --> 00:01:20,560
parts

36
00:01:17,280 --> 00:01:22,400
ahead in there um then i will uh speak

37
00:01:20,560 --> 00:01:23,520
about the perspective from the open

38
00:01:22,400 --> 00:01:26,560
source size

39
00:01:23,520 --> 00:01:29,759
side about creating firmware and working

40
00:01:26,560 --> 00:01:31,360
uh with what we already have from

41
00:01:29,759 --> 00:01:33,439
vendors

42
00:01:31,360 --> 00:01:34,640
and then i will um give you some

43
00:01:33,439 --> 00:01:37,279
motivation

44
00:01:34,640 --> 00:01:38,240
uh why you should maybe look into what i

45
00:01:37,280 --> 00:01:40,799
looked into

46
00:01:38,240 --> 00:01:42,158
uh i will start with how it actually

47
00:01:40,799 --> 00:01:44,240
started for me

48
00:01:42,159 --> 00:01:46,399
and then i will give you lots of hints

49
00:01:44,240 --> 00:01:49,679
of directions where you could go

50
00:01:46,399 --> 00:01:51,439
um yeah in the end i will also come up

51
00:01:49,680 --> 00:01:52,799
with a brief conclusion hopefully i will

52
00:01:51,439 --> 00:01:56,719
make it there

53
00:01:52,799 --> 00:01:58,560
um so for the introduction part um

54
00:01:56,719 --> 00:02:00,158
you all might have already played around

55
00:01:58,560 --> 00:02:02,240
a bit with microcontrollers like the

56
00:02:00,159 --> 00:02:05,200
arduino stuff and everything

57
00:02:02,240 --> 00:02:06,798
and when people ask me about firmware

58
00:02:05,200 --> 00:02:09,119
they want a very

59
00:02:06,799 --> 00:02:10,879
brief explanation of what it actually is

60
00:02:09,119 --> 00:02:12,959
well i pond them to that

61
00:02:10,878 --> 00:02:14,480
and i tell them that actually what you

62
00:02:12,959 --> 00:02:16,400
have in your laptop today

63
00:02:14,480 --> 00:02:18,480
is very much the very same thing as just

64
00:02:16,400 --> 00:02:20,720
playing with arduino

65
00:02:18,480 --> 00:02:23,280
except that you have like 20 arduinos in

66
00:02:20,720 --> 00:02:24,720
here okay

67
00:02:23,280 --> 00:02:27,920
and of course they all are connected

68
00:02:24,720 --> 00:02:30,239
together so you have kind of

69
00:02:27,920 --> 00:02:31,440
these i know 20 or more chips in your

70
00:02:30,239 --> 00:02:34,080
laptop

71
00:02:31,440 --> 00:02:35,440
or also if you work on servers or

72
00:02:34,080 --> 00:02:37,840
whatever machines

73
00:02:35,440 --> 00:02:38,879
uh it's still the very same thing just

74
00:02:37,840 --> 00:02:42,480
with some minor

75
00:02:38,879 --> 00:02:44,480
differences okay um

76
00:02:42,480 --> 00:02:47,040
there are some components which are

77
00:02:44,480 --> 00:02:50,000
actually critical to the entire thing

78
00:02:47,040 --> 00:02:51,920
uh that starts with what we know

79
00:02:50,000 --> 00:02:54,720
sometimes as the south bridge

80
00:02:51,920 --> 00:02:55,359
or more general the chipset uh which

81
00:02:54,720 --> 00:02:57,840
kind of

82
00:02:55,360 --> 00:03:00,319
connects everything nowadays uh intel

83
00:02:57,840 --> 00:03:02,080
calls it the platform controller hub now

84
00:03:00,319 --> 00:03:04,879
because that's where all the controllers

85
00:03:02,080 --> 00:03:04,879
are coming together

86
00:03:05,200 --> 00:03:08,399
there are two variants actually so

87
00:03:07,120 --> 00:03:10,400
sometimes you have

88
00:03:08,400 --> 00:03:12,400
all the cpu cores also in the very same

89
00:03:10,400 --> 00:03:13,200
sock like in this example here in the

90
00:03:12,400 --> 00:03:15,440
picture

91
00:03:13,200 --> 00:03:18,159
uh sometimes it's two separate chips i

92
00:03:15,440 --> 00:03:20,959
will come to that later

93
00:03:18,159 --> 00:03:21,440
but besides that there is two things

94
00:03:20,959 --> 00:03:24,640
which

95
00:03:21,440 --> 00:03:25,519
actually seem like they have a lot of

96
00:03:24,640 --> 00:03:28,480
power

97
00:03:25,519 --> 00:03:30,319
and probably they shouldn't so that's

98
00:03:28,480 --> 00:03:32,959
why we take a closer look here

99
00:03:30,319 --> 00:03:33,518
one of them is the embedded controller

100
00:03:32,959 --> 00:03:36,140
which

101
00:03:33,519 --> 00:03:37,200
on your laptop is for regulating like

102
00:03:36,140 --> 00:03:39,279
[Music]

103
00:03:37,200 --> 00:03:40,720
battery management for example when you

104
00:03:39,280 --> 00:03:43,200
connect your charger you will see

105
00:03:40,720 --> 00:03:44,720
an led actually light up and that even

106
00:03:43,200 --> 00:03:45,440
works without running an operating

107
00:03:44,720 --> 00:03:46,959
system

108
00:03:45,440 --> 00:03:48,720
why is that because there is an embedded

109
00:03:46,959 --> 00:03:51,920
controller actually doing that

110
00:03:48,720 --> 00:03:54,560
right of course you could also do that

111
00:03:51,920 --> 00:03:54,958
just in hardware directly yeah but there

112
00:03:54,560 --> 00:03:56,959
is

113
00:03:54,959 --> 00:03:58,480
much more to it and this controller can

114
00:03:56,959 --> 00:03:59,040
also be connected to your keyboard and

115
00:03:58,480 --> 00:04:01,119
mouse

116
00:03:59,040 --> 00:04:02,798
sometimes it's even a dedicated chip it

117
00:04:01,120 --> 00:04:05,439
can be connected to your tpm

118
00:04:02,799 --> 00:04:07,840
or a fingerprint sensor or whatever and

119
00:04:05,439 --> 00:04:10,079
also basically to everything else

120
00:04:07,840 --> 00:04:11,439
there is also related work but more on

121
00:04:10,080 --> 00:04:13,519
that later

122
00:04:11,439 --> 00:04:14,879
on servers you have a very similar thing

123
00:04:13,519 --> 00:04:17,280
which is called the bmc

124
00:04:14,879 --> 00:04:20,000
which you can use for like power cycling

125
00:04:17,279 --> 00:04:22,239
or uh you know provisioning from outside

126
00:04:20,000 --> 00:04:24,320
uh but usually that's on a different

127
00:04:22,240 --> 00:04:27,600
network interface

128
00:04:24,320 --> 00:04:30,880
and then there is something which is the

129
00:04:27,600 --> 00:04:32,320
well management engine which is also

130
00:04:30,880 --> 00:04:36,320
kind of similar to that

131
00:04:32,320 --> 00:04:36,320
and that's what we're focusing on today

132
00:04:36,720 --> 00:04:40,479
but first i would like to uh give a very

133
00:04:39,120 --> 00:04:42,479
very brief perspective

134
00:04:40,479 --> 00:04:44,800
on the open source firmware side of

135
00:04:42,479 --> 00:04:44,800
things

136
00:04:44,960 --> 00:04:48,159
starting with the list of projects so we

137
00:04:47,360 --> 00:04:50,479
have

138
00:04:48,160 --> 00:04:51,280
projects you already heard about here

139
00:04:50,479 --> 00:04:53,039
there is the

140
00:04:51,280 --> 00:04:54,320
cardboard project which you can use for

141
00:04:53,040 --> 00:04:56,160
initializing your hardware

142
00:04:54,320 --> 00:04:57,440
for example this laptop here is also

143
00:04:56,160 --> 00:04:59,440
running cardboard now

144
00:04:57,440 --> 00:05:01,759
uh like many other devices you might

145
00:04:59,440 --> 00:05:03,120
find at this event or people also ask us

146
00:05:01,759 --> 00:05:05,759
and they want a flash call boot on their

147
00:05:03,120 --> 00:05:09,199
device so that can already uh

148
00:05:05,759 --> 00:05:11,520
take uh control of a lot of the laptop

149
00:05:09,199 --> 00:05:13,600
okay then there is the linux boot

150
00:05:11,520 --> 00:05:14,400
project which can be used as a payload

151
00:05:13,600 --> 00:05:16,960
we already heard

152
00:05:14,400 --> 00:05:18,479
about the head project which is also a

153
00:05:16,960 --> 00:05:19,758
kind of the linux boot approach so you

154
00:05:18,479 --> 00:05:21,359
have a linux kernel

155
00:05:19,759 --> 00:05:22,960
and then you have some tools which are

156
00:05:21,360 --> 00:05:24,960
running on that kernel

157
00:05:22,960 --> 00:05:26,560
to then actually kick off your operating

158
00:05:24,960 --> 00:05:29,198
system okay

159
00:05:26,560 --> 00:05:29,919
uh there is the url project uh also very

160
00:05:29,199 --> 00:05:33,360
similar

161
00:05:29,919 --> 00:05:35,520
uh it has its own tool right so it's uh

162
00:05:33,360 --> 00:05:37,280
well similar in the approach then we

163
00:05:35,520 --> 00:05:40,479
have four embedded controllers

164
00:05:37,280 --> 00:05:42,239
from google for all the chromebooks open

165
00:05:40,479 --> 00:05:44,159
source firmware actually

166
00:05:42,240 --> 00:05:45,919
and the same thing as currently being

167
00:05:44,160 --> 00:05:47,680
done at system76

168
00:05:45,919 --> 00:05:49,280
uh there is repositories online you can

169
00:05:47,680 --> 00:05:51,840
find them on github

170
00:05:49,280 --> 00:05:52,960
parts are in gitlab.com yeah you will

171
00:05:51,840 --> 00:05:54,880
find it

172
00:05:52,960 --> 00:05:56,719
actually the slides are also online and

173
00:05:54,880 --> 00:05:57,199
you can just click through all the links

174
00:05:56,720 --> 00:05:59,680
so

175
00:05:57,199 --> 00:06:00,720
uh all of uh what i'm listing somewhere

176
00:05:59,680 --> 00:06:02,960
is actually

177
00:06:00,720 --> 00:06:03,759
uh links behind it so yeah just follow

178
00:06:02,960 --> 00:06:05,440
them

179
00:06:03,759 --> 00:06:06,800
for the baseboard management controllers

180
00:06:05,440 --> 00:06:08,400
on servers

181
00:06:06,800 --> 00:06:11,360
we also have open source projects there

182
00:06:08,400 --> 00:06:13,120
is open bmc and there is ubmc

183
00:06:11,360 --> 00:06:14,720
also very similar actually to the links

184
00:06:13,120 --> 00:06:15,520
boot approach so you also have a linux

185
00:06:14,720 --> 00:06:17,600
kernel

186
00:06:15,520 --> 00:06:18,719
and just some tools which are then

187
00:06:17,600 --> 00:06:21,840
running on that kernel

188
00:06:18,720 --> 00:06:21,840
to actually control the system

189
00:06:22,160 --> 00:06:26,000
okay so look let's look at the intel x86

190
00:06:24,880 --> 00:06:29,039
platforms a bit

191
00:06:26,000 --> 00:06:30,720
um so i mentioned sometimes you have

192
00:06:29,039 --> 00:06:32,560
everything in one sock sometimes you

193
00:06:30,720 --> 00:06:36,000
actually have two separate chips

194
00:06:32,560 --> 00:06:38,240
uh people are well if if you look back

195
00:06:36,000 --> 00:06:40,960
some years ago we were used to knowing

196
00:06:38,240 --> 00:06:43,440
something called a cpu

197
00:06:40,960 --> 00:06:44,560
there is something today which is very

198
00:06:43,440 --> 00:06:46,400
very similar to that

199
00:06:44,560 --> 00:06:48,479
which you can see in this picture it's

200
00:06:46,400 --> 00:06:51,679
called the core processor now

201
00:06:48,479 --> 00:06:53,919
um there's slightly more than just a cpu

202
00:06:51,680 --> 00:06:55,520
in that uh you can also see that it's

203
00:06:53,919 --> 00:06:56,639
also connected to other devices like

204
00:06:55,520 --> 00:06:59,359
your graphic card

205
00:06:56,639 --> 00:07:00,960
graphics card for example so that's

206
00:06:59,360 --> 00:07:04,400
where it's actually doing a bit more

207
00:07:00,960 --> 00:07:08,000
than really just processing so yeah

208
00:07:04,400 --> 00:07:08,400
it has relationships and this is really

209
00:07:08,000 --> 00:07:12,560
just

210
00:07:08,400 --> 00:07:12,560
a very very high level overview

211
00:07:12,720 --> 00:07:17,280
let's take a closer look at one platform

212
00:07:14,800 --> 00:07:19,360
which is the denverton platform

213
00:07:17,280 --> 00:07:21,359
that's one of the few images actually

214
00:07:19,360 --> 00:07:22,720
where i could find a direct reference to

215
00:07:21,360 --> 00:07:25,039
the management engine

216
00:07:22,720 --> 00:07:25,919
which is what we're looking at now uh

217
00:07:25,039 --> 00:07:30,240
here in the

218
00:07:25,919 --> 00:07:33,440
upper right corner we have a cursor here

219
00:07:30,240 --> 00:07:34,880
no anyway so in the upper right corner

220
00:07:33,440 --> 00:07:37,680
of this image

221
00:07:34,880 --> 00:07:39,599
you see two engines managed one of them

222
00:07:37,680 --> 00:07:40,479
mentioned one of them is the management

223
00:07:39,599 --> 00:07:43,759
engine

224
00:07:40,479 --> 00:07:47,120
one of them is called innovation engine

225
00:07:43,759 --> 00:07:48,400
so what is it the management engine as

226
00:07:47,120 --> 00:07:50,639
we know it today

227
00:07:48,400 --> 00:07:53,599
is basically just a microcontroller so

228
00:07:50,639 --> 00:07:56,800
you can imagine something like arduino

229
00:07:53,599 --> 00:07:58,560
uh it's an ad51 instruction set

230
00:07:56,800 --> 00:08:00,639
there have been multiple hardware

231
00:07:58,560 --> 00:08:02,720
versions over the time

232
00:08:00,639 --> 00:08:03,759
i think this is now currently the third

233
00:08:02,720 --> 00:08:07,840
generation

234
00:08:03,759 --> 00:08:10,240
so it's not changing very much

235
00:08:07,840 --> 00:08:12,080
but there is still lots of difference

236
00:08:10,240 --> 00:08:15,199
among the implementations around

237
00:08:12,080 --> 00:08:16,159
it it actually started with something

238
00:08:15,199 --> 00:08:18,319
that was called the

239
00:08:16,160 --> 00:08:19,919
active management technology and that

240
00:08:18,319 --> 00:08:22,240
still exists today

241
00:08:19,919 --> 00:08:23,840
so the first idea was to have something

242
00:08:22,240 --> 00:08:25,520
very very similar to a baseboard

243
00:08:23,840 --> 00:08:28,000
management controller

244
00:08:25,520 --> 00:08:30,240
but it's still part of the entire thing

245
00:08:28,000 --> 00:08:33,519
so it's not on a dedicated chip

246
00:08:30,240 --> 00:08:34,399
uh or well it's um actually integrated

247
00:08:33,519 --> 00:08:36,959
into everything

248
00:08:34,399 --> 00:08:38,240
and it doesn't have its own nick you can

249
00:08:36,958 --> 00:08:40,319
still use

250
00:08:38,240 --> 00:08:42,240
the very one nic so the network

251
00:08:40,320 --> 00:08:43,839
interface controller that you also use

252
00:08:42,240 --> 00:08:47,279
for other services

253
00:08:43,839 --> 00:08:47,680
right so um sometimes people ask me like

254
00:08:47,279 --> 00:08:50,080
hey

255
00:08:47,680 --> 00:08:50,880
what is this management actually uh what

256
00:08:50,080 --> 00:08:52,640
is the engine

257
00:08:50,880 --> 00:08:54,399
is it dangerous does it really do

258
00:08:52,640 --> 00:08:58,000
everything that i heard about

259
00:08:54,399 --> 00:09:00,320
uh because there was um references about

260
00:08:58,000 --> 00:09:03,839
web servers running in there

261
00:09:00,320 --> 00:09:06,320
which is not untrue uh and there is

262
00:09:03,839 --> 00:09:08,399
rumors about it being capable of

263
00:09:06,320 --> 00:09:09,120
actually wiping your entire laptop from

264
00:09:08,399 --> 00:09:12,160
outside

265
00:09:09,120 --> 00:09:15,680
which is also not completely untrue

266
00:09:12,160 --> 00:09:18,079
so what's actually the case is there is

267
00:09:15,680 --> 00:09:19,519
multiple versions of it for multiple

268
00:09:18,080 --> 00:09:22,240
purposes

269
00:09:19,519 --> 00:09:23,440
and if you buy like your whatever acer

270
00:09:22,240 --> 00:09:26,000
laptop or something

271
00:09:23,440 --> 00:09:27,600
for like a few hundred euros then it's

272
00:09:26,000 --> 00:09:28,720
not very likely that you have those

273
00:09:27,600 --> 00:09:30,160
features in there

274
00:09:28,720 --> 00:09:32,000
because they are not designed for

275
00:09:30,160 --> 00:09:35,199
consumers okay

276
00:09:32,000 --> 00:09:38,640
more on that later so

277
00:09:35,200 --> 00:09:40,640
um now there's uh a bit

278
00:09:38,640 --> 00:09:41,920
more that was actually put in the

279
00:09:40,640 --> 00:09:43,680
management engine

280
00:09:41,920 --> 00:09:46,160
and that's why today it's actually

281
00:09:43,680 --> 00:09:49,199
called csme

282
00:09:46,160 --> 00:09:53,519
okay so cs for converged

283
00:09:49,200 --> 00:09:55,200
security and management engine

284
00:09:53,519 --> 00:09:57,680
i will briefly mention those security

285
00:09:55,200 --> 00:09:59,360
features as well

286
00:09:57,680 --> 00:10:02,000
but first uh let's look at the

287
00:09:59,360 --> 00:10:04,320
innovation engine i've only found it in

288
00:10:02,000 --> 00:10:06,880
this very one picture i just showed you

289
00:10:04,320 --> 00:10:08,720
uh from what i have been told uh hp

290
00:10:06,880 --> 00:10:09,600
enterprise is actually using it for some

291
00:10:08,720 --> 00:10:11,360
purposes

292
00:10:09,600 --> 00:10:13,440
and it's kind of really just a

293
00:10:11,360 --> 00:10:15,120
one-to-one copy of the management engine

294
00:10:13,440 --> 00:10:17,600
which is why i'm mentioning this so we

295
00:10:15,120 --> 00:10:18,959
can just monitor what's happening over

296
00:10:17,600 --> 00:10:22,320
time and see

297
00:10:18,959 --> 00:10:22,959
you know if they still exist side by

298
00:10:22,320 --> 00:10:26,079
side

299
00:10:22,959 --> 00:10:26,640
or if they diverge over time but yeah

300
00:10:26,079 --> 00:10:29,599
this is

301
00:10:26,640 --> 00:10:29,600
where it's starting now

302
00:10:29,920 --> 00:10:34,319
but first let's look about how let's

303
00:10:32,480 --> 00:10:35,839
look at how the entire platform works

304
00:10:34,320 --> 00:10:38,640
together

305
00:10:35,839 --> 00:10:40,640
so i just explained that we have lots of

306
00:10:38,640 --> 00:10:42,640
chips in our laptops

307
00:10:40,640 --> 00:10:44,160
and one of them is actually the

308
00:10:42,640 --> 00:10:46,720
management engine

309
00:10:44,160 --> 00:10:47,519
so it's actually part of one of your

310
00:10:46,720 --> 00:10:49,920
socks

311
00:10:47,519 --> 00:10:52,560
what is it doing when you power up uh

312
00:10:49,920 --> 00:10:55,680
when you power on your laptop

313
00:10:52,560 --> 00:10:56,800
there is a rom in that chip it's usually

314
00:10:55,680 --> 00:10:59,519
very very tiny

315
00:10:56,800 --> 00:11:01,040
and that's also true for uh yeah many

316
00:10:59,519 --> 00:11:02,640
microcontrollers actually

317
00:11:01,040 --> 00:11:05,040
they have something called a mask chrome

318
00:11:02,640 --> 00:11:06,319
or a bootrom so that's what's running

319
00:11:05,040 --> 00:11:09,279
initially

320
00:11:06,320 --> 00:11:10,240
and it's quite common that you then load

321
00:11:09,279 --> 00:11:13,200
another image

322
00:11:10,240 --> 00:11:13,760
into ram which comes from somewhere else

323
00:11:13,200 --> 00:11:16,240
to then

324
00:11:13,760 --> 00:11:18,319
keep running and do more things than

325
00:11:16,240 --> 00:11:21,680
really just the boot part

326
00:11:18,320 --> 00:11:23,760
that's called rbe here so rbe is the

327
00:11:21,680 --> 00:11:26,640
first phase which is just uh

328
00:11:23,760 --> 00:11:26,640
after boot up

329
00:11:26,959 --> 00:11:30,959
it's like a rom boot extension or

330
00:11:29,760 --> 00:11:34,399
something like that

331
00:11:30,959 --> 00:11:37,839
um then there is bob the bring up phase

332
00:11:34,399 --> 00:11:38,720
which is supposed to launch the entire

333
00:11:37,839 --> 00:11:40,800
platform

334
00:11:38,720 --> 00:11:42,399
so you should know that the management

335
00:11:40,800 --> 00:11:45,760
engine is also

336
00:11:42,399 --> 00:11:47,920
well connected to all the other parts

337
00:11:45,760 --> 00:11:49,200
we just heard about some core boot

338
00:11:47,920 --> 00:11:52,639
information so

339
00:11:49,200 --> 00:11:54,560
or also uh general firmware information

340
00:11:52,639 --> 00:11:56,160
for the host

341
00:11:54,560 --> 00:11:58,319
which is also connected to lots of

342
00:11:56,160 --> 00:12:01,040
devices and needs to initialize stuff

343
00:11:58,320 --> 00:12:01,920
so it's basically like you have multiple

344
00:12:01,040 --> 00:12:04,560
chips

345
00:12:01,920 --> 00:12:06,319
and multiple firmware images which are

346
00:12:04,560 --> 00:12:07,040
all doing some initialization here and

347
00:12:06,320 --> 00:12:10,079
there

348
00:12:07,040 --> 00:12:13,279
and they do not necessarily uh know

349
00:12:10,079 --> 00:12:15,599
about each other okay so that's where

350
00:12:13,279 --> 00:12:17,439
sometimes potentially bugs come from uh

351
00:12:15,600 --> 00:12:19,040
i see some nodding in the room

352
00:12:17,440 --> 00:12:22,000
so yeah if you keep looking into

353
00:12:19,040 --> 00:12:24,959
firmware you might come across this also

354
00:12:22,000 --> 00:12:26,320
um well and then eventually there is uh

355
00:12:24,959 --> 00:12:28,079
an operating system running in the

356
00:12:26,320 --> 00:12:29,360
management engine

357
00:12:28,079 --> 00:12:32,000
but not in every version of the

358
00:12:29,360 --> 00:12:34,240
management engine in some versions of

359
00:12:32,000 --> 00:12:35,920
the firmware of the management engine

360
00:12:34,240 --> 00:12:38,560
this is really not necessary because you

361
00:12:35,920 --> 00:12:41,279
don't really need it like for example uh

362
00:12:38,560 --> 00:12:42,880
i as a consumer i don't provision my

363
00:12:41,279 --> 00:12:45,360
laptop at home from my

364
00:12:42,880 --> 00:12:47,279
whatever server you know i just run my

365
00:12:45,360 --> 00:12:48,160
one operating system there and i'm okay

366
00:12:47,279 --> 00:12:49,600
with that

367
00:12:48,160 --> 00:12:51,600
it's not like i need to wipe it from

368
00:12:49,600 --> 00:12:54,880
outside or you know

369
00:12:51,600 --> 00:12:56,959
have some fresh images coming in i know

370
00:12:54,880 --> 00:13:00,079
i just take some install medium from a

371
00:12:56,959 --> 00:13:00,079
usb stick or something

372
00:13:00,240 --> 00:13:07,279
well if all that is done the cpu reset

373
00:13:04,079 --> 00:13:09,680
vector is actually triggered from

374
00:13:07,279 --> 00:13:12,000
what i know it can be slightly different

375
00:13:09,680 --> 00:13:14,160
on some platforms

376
00:13:12,000 --> 00:13:16,160
some people thought it might be that the

377
00:13:14,160 --> 00:13:20,719
cpu is just on hold all the time and

378
00:13:16,160 --> 00:13:22,240
then released at this point now the cpu

379
00:13:20,720 --> 00:13:24,959
can start it can load uh

380
00:13:22,240 --> 00:13:25,279
microcode updates and it can just keep

381
00:13:24,959 --> 00:13:27,439
uh

382
00:13:25,279 --> 00:13:28,959
running the entire boot process like

383
00:13:27,440 --> 00:13:30,639
what we know from uh

384
00:13:28,959 --> 00:13:32,160
all the other firmware initialization we

385
00:13:30,639 --> 00:13:33,200
just heard about like what core boot is

386
00:13:32,160 --> 00:13:36,240
doing or

387
00:13:33,200 --> 00:13:38,480
what your vendor's uefi is doing

388
00:13:36,240 --> 00:13:39,440
and then side by side with that there is

389
00:13:38,480 --> 00:13:41,519
another chip

390
00:13:39,440 --> 00:13:43,680
which is also somewhere integrated the

391
00:13:41,519 --> 00:13:46,560
power management controller

392
00:13:43,680 --> 00:13:48,560
it also gets for more updates actually

393
00:13:46,560 --> 00:13:51,199
from the management engine part

394
00:13:48,560 --> 00:13:53,199
from what i looked at it can be that it

395
00:13:51,199 --> 00:13:55,760
also differs a bit on platforms but

396
00:13:53,199 --> 00:13:58,399
yeah i mean if you want to look more

397
00:13:55,760 --> 00:13:59,680
into it you might figure out differences

398
00:13:58,399 --> 00:14:01,199
and then there is the embedded

399
00:13:59,680 --> 00:14:02,560
controller which is really just running

400
00:14:01,199 --> 00:14:04,000
side by side in a way

401
00:14:02,560 --> 00:14:06,000
but it's also still connected to

402
00:14:04,000 --> 00:14:08,320
everything so you have to also be able

403
00:14:06,000 --> 00:14:09,839
to talk to the embedded controller chip

404
00:14:08,320 --> 00:14:11,760
so if for example if you look at the

405
00:14:09,839 --> 00:14:13,519
kobrik uh project's

406
00:14:11,760 --> 00:14:15,360
source code then you will also find

407
00:14:13,519 --> 00:14:17,040
references like hey here we're talking

408
00:14:15,360 --> 00:14:20,720
to the embedded controller

409
00:14:17,040 --> 00:14:23,120
for example to read out some sensors

410
00:14:20,720 --> 00:14:25,360
so you know if the laptop is overheating

411
00:14:23,120 --> 00:14:28,240
so maybe you need to scale on the cpu or

412
00:14:25,360 --> 00:14:28,240
something like that

413
00:14:28,839 --> 00:14:31,279
okay

414
00:14:30,000 --> 00:14:33,120
all right and then at some point you

415
00:14:31,279 --> 00:14:34,959
come across this um

416
00:14:33,120 --> 00:14:37,519
you might find this sticker on your

417
00:14:34,959 --> 00:14:39,279
laptop uh it says something about core

418
00:14:37,519 --> 00:14:40,959
i7 that sounds like the regular

419
00:14:39,279 --> 00:14:43,839
marketing stuff you hear

420
00:14:40,959 --> 00:14:44,399
ninth generation so you know a bit like

421
00:14:43,839 --> 00:14:47,920
was

422
00:14:44,399 --> 00:14:49,839
you know made in 2018 17 19 i don't know

423
00:14:47,920 --> 00:14:52,560
which exact year it is

424
00:14:49,839 --> 00:14:54,160
um and then there is this thing called v

425
00:14:52,560 --> 00:14:56,719
pro

426
00:14:54,160 --> 00:14:58,079
and that's where i came across when i

427
00:14:56,720 --> 00:15:01,199
was looking at the management

428
00:14:58,079 --> 00:15:02,560
engine stuff so what is it

429
00:15:01,199 --> 00:15:04,880
it's actually kind of an umbrella

430
00:15:02,560 --> 00:15:06,880
marketing term it does not refer to very

431
00:15:04,880 --> 00:15:07,439
specific features but it may include

432
00:15:06,880 --> 00:15:11,279
like

433
00:15:07,440 --> 00:15:13,360
a lot of features part of that is

434
00:15:11,279 --> 00:15:14,560
today also the active management

435
00:15:13,360 --> 00:15:17,920
technology which

436
00:15:14,560 --> 00:15:21,518
started at some point in time it can

437
00:15:17,920 --> 00:15:25,199
also contain security features

438
00:15:21,519 --> 00:15:27,440
so the problem is just

439
00:15:25,199 --> 00:15:29,359
we don't have very much information on

440
00:15:27,440 --> 00:15:31,839
that there is the ark it's

441
00:15:29,360 --> 00:15:33,759
like an archive on intel's website where

442
00:15:31,839 --> 00:15:34,160
you can read a lot about cpus like what

443
00:15:33,759 --> 00:15:36,240
their

444
00:15:34,160 --> 00:15:37,920
exact features are if they have like

445
00:15:36,240 --> 00:15:41,120
integrated graphics

446
00:15:37,920 --> 00:15:43,920
uh whatever um

447
00:15:41,120 --> 00:15:45,680
i know certain features no so not all

448
00:15:43,920 --> 00:15:48,880
the cpus are the same

449
00:15:45,680 --> 00:15:49,359
uh but when it comes to vpro it does not

450
00:15:48,880 --> 00:15:52,480
speak

451
00:15:49,360 --> 00:15:54,720
about support like hardware support it

452
00:15:52,480 --> 00:15:58,240
speaks about eligibility

453
00:15:54,720 --> 00:16:01,759
so not every chip is actually eligible

454
00:15:58,240 --> 00:16:03,519
for this what does that mean

455
00:16:01,759 --> 00:16:05,759
it does not mean that the hardware is

456
00:16:03,519 --> 00:16:09,040
not able to do this

457
00:16:05,759 --> 00:16:10,320
so we had some discussions very recently

458
00:16:09,040 --> 00:16:13,680
actually so

459
00:16:10,320 --> 00:16:15,839
thank you now sitting here

460
00:16:13,680 --> 00:16:18,160
discovered that this boot guard feature

461
00:16:15,839 --> 00:16:20,720
that you might have heard about

462
00:16:18,160 --> 00:16:21,439
is actually still usable in some of

463
00:16:20,720 --> 00:16:25,040
those chips

464
00:16:21,440 --> 00:16:25,040
which are not officially eligible

465
00:16:26,399 --> 00:16:30,639
okay so boot guard is one of those

466
00:16:28,560 --> 00:16:33,680
security features i just mentioned

467
00:16:30,639 --> 00:16:36,160
uh it's able to lock your firmware down

468
00:16:33,680 --> 00:16:38,638
so that you can only boot images

469
00:16:36,160 --> 00:16:40,240
which uh you know they should have

470
00:16:38,639 --> 00:16:41,360
certain signatures checksums or

471
00:16:40,240 --> 00:16:43,040
something like that

472
00:16:41,360 --> 00:16:45,279
so you know what you're booting is

473
00:16:43,040 --> 00:16:47,519
actually okay now usually that comes

474
00:16:45,279 --> 00:16:49,199
from your vendor not from yourself

475
00:16:47,519 --> 00:16:50,959
so you would have to trust your vendor

476
00:16:49,199 --> 00:16:53,359
now

477
00:16:50,959 --> 00:16:55,199
there's other features like software

478
00:16:53,360 --> 00:16:57,839
software guard extensions

479
00:16:55,199 --> 00:16:58,880
uh and the txt stuff that also nine

480
00:16:57,839 --> 00:17:02,560
elements are

481
00:16:58,880 --> 00:17:02,560
elements cyber security is working on

482
00:17:02,880 --> 00:17:09,199
so here's a long list about um what this

483
00:17:06,480 --> 00:17:11,039
uh all of this management engine

484
00:17:09,199 --> 00:17:14,720
technology is actually about

485
00:17:11,039 --> 00:17:16,879
um and there is interfaces for it so

486
00:17:14,720 --> 00:17:18,640
you also need to have some part in your

487
00:17:16,880 --> 00:17:20,319
firmware and you also have to have some

488
00:17:18,640 --> 00:17:22,160
part in your operating system to

489
00:17:20,319 --> 00:17:23,678
actually talk to this right

490
00:17:22,160 --> 00:17:25,360
so that's implemented in the linux

491
00:17:23,679 --> 00:17:28,000
kernel for example you can look at the

492
00:17:25,359 --> 00:17:28,000
source code

493
00:17:29,520 --> 00:17:32,720
in the firmware there is something

494
00:17:31,440 --> 00:17:34,799
called mebx

495
00:17:32,720 --> 00:17:37,200
so when you boot your laptop you may

496
00:17:34,799 --> 00:17:38,720
also be allowed to talk to it if you

497
00:17:37,200 --> 00:17:41,760
have the corporate version

498
00:17:38,720 --> 00:17:41,760
of the management engine

499
00:17:41,840 --> 00:17:45,439
here's a small timeline it's not

500
00:17:43,600 --> 00:17:48,719
necessarily accurate

501
00:17:45,440 --> 00:17:50,080
but this is uh what i kind of came up

502
00:17:48,720 --> 00:17:53,440
with after i read

503
00:17:50,080 --> 00:17:54,799
from igor koscinski he also spoke a lot

504
00:17:53,440 --> 00:17:58,960
about me and reverse

505
00:17:54,799 --> 00:18:00,160
engineering yeah but i recommend looking

506
00:17:58,960 --> 00:18:03,360
at the slide in detail

507
00:18:00,160 --> 00:18:04,960
when you have some time version 12

508
00:18:03,360 --> 00:18:06,479
of the management engine was released

509
00:18:04,960 --> 00:18:08,799
quite a while ago there is

510
00:18:06,480 --> 00:18:10,880
some public documentation about it not

511
00:18:08,799 --> 00:18:13,440
very much but at least some

512
00:18:10,880 --> 00:18:15,360
but recently well actually just at

513
00:18:13,440 --> 00:18:17,520
curious communication congress

514
00:18:15,360 --> 00:18:18,639
we found a laptop which also has version

515
00:18:17,520 --> 00:18:20,960
14

516
00:18:18,640 --> 00:18:22,480
but that's not in the archives anywhere

517
00:18:20,960 --> 00:18:24,960
so far

518
00:18:22,480 --> 00:18:26,960
at least i haven't found anything so it

519
00:18:24,960 --> 00:18:28,880
kind of stops at version 12

520
00:18:26,960 --> 00:18:31,360
which allows you to deactivate this

521
00:18:28,880 --> 00:18:33,600
management technology

522
00:18:31,360 --> 00:18:35,120
yeah so that's maybe for corporate

523
00:18:33,600 --> 00:18:37,840
versions where you may need

524
00:18:35,120 --> 00:18:40,080
to disable this to secure your platforms

525
00:18:37,840 --> 00:18:40,080
more

526
00:18:40,320 --> 00:18:44,960
so these are the variants i know so far

527
00:18:43,679 --> 00:18:46,240
which i have found

528
00:18:44,960 --> 00:18:48,799
there's the consumer version the

529
00:18:46,240 --> 00:18:50,240
corporate version some people refer to a

530
00:18:48,799 --> 00:18:50,960
slim version i don't really know where

531
00:18:50,240 --> 00:18:53,039
it's found

532
00:18:50,960 --> 00:18:54,559
there is a server platform version and

533
00:18:53,039 --> 00:18:57,120
there is no something

534
00:18:54,559 --> 00:18:58,559
which we're now looking into the

535
00:18:57,120 --> 00:19:00,399
ignition variant

536
00:18:58,559 --> 00:19:02,240
and that was my motivation to actually

537
00:19:00,400 --> 00:19:05,600
look into this whole stuff

538
00:19:02,240 --> 00:19:08,320
so in the edk ii mailing list uh

539
00:19:05,600 --> 00:19:10,399
there was something popping up which is

540
00:19:08,320 --> 00:19:14,000
an ignition firmware binary

541
00:19:10,400 --> 00:19:17,280
and which uh well comes with a brief uh

542
00:19:14,000 --> 00:19:18,960
um variable a brief explanation which

543
00:19:17,280 --> 00:19:19,918
basically says like yeah this is a very

544
00:19:18,960 --> 00:19:22,559
minimal thing

545
00:19:19,919 --> 00:19:24,320
it's designed for this in this chips or

546
00:19:22,559 --> 00:19:28,240
a platform

547
00:19:24,320 --> 00:19:30,159
yeah so if we now take this and the fsp

548
00:19:28,240 --> 00:19:31,360
the firmware support package which we

549
00:19:30,160 --> 00:19:34,640
also heard about

550
00:19:31,360 --> 00:19:37,199
then now we could actually uh kind of

551
00:19:34,640 --> 00:19:38,160
bake a full image to have formula for a

552
00:19:37,200 --> 00:19:40,640
laptop

553
00:19:38,160 --> 00:19:42,240
uh well without all the reverse

554
00:19:40,640 --> 00:19:43,280
engineering which we might not be

555
00:19:42,240 --> 00:19:45,360
allowed to do

556
00:19:43,280 --> 00:19:46,960
uh but you know still all the glue code

557
00:19:45,360 --> 00:19:47,840
around it and then have some other

558
00:19:46,960 --> 00:19:51,600
critical

559
00:19:47,840 --> 00:19:51,600
critical parts actually open source

560
00:19:51,679 --> 00:19:56,559
so let's follow along um here is the

561
00:19:54,559 --> 00:20:00,160
license for it it explicitly

562
00:19:56,559 --> 00:20:02,480
disallows decompilation disassembly

563
00:20:00,160 --> 00:20:06,480
you know everything which would give us

564
00:20:02,480 --> 00:20:10,240
really a direct clue

565
00:20:06,480 --> 00:20:12,880
so uh this is also briefly mentioned

566
00:20:10,240 --> 00:20:13,600
in some other references which i put

567
00:20:12,880 --> 00:20:16,640
here

568
00:20:13,600 --> 00:20:19,439
like for example the fsp training

569
00:20:16,640 --> 00:20:21,280
there is a slide saying well intel knows

570
00:20:19,440 --> 00:20:22,720
there's lots of firmware engineers out

571
00:20:21,280 --> 00:20:24,879
there

572
00:20:22,720 --> 00:20:26,240
it doesn't really directly say that but

573
00:20:24,880 --> 00:20:28,080
it looks like they don't really want to

574
00:20:26,240 --> 00:20:30,159
disclose all the information

575
00:20:28,080 --> 00:20:32,720
so as a workaround they provide the

576
00:20:30,159 --> 00:20:34,480
binaries

577
00:20:32,720 --> 00:20:36,320
in the white paper they are saying that

578
00:20:34,480 --> 00:20:38,000
binaries are actually quite good

579
00:20:36,320 --> 00:20:39,760
because you know that's kind of the

580
00:20:38,000 --> 00:20:44,000
middle ground we can meet

581
00:20:39,760 --> 00:20:46,799
um as long as it works as desired

582
00:20:44,000 --> 00:20:49,039
which is not necessarily always the case

583
00:20:46,799 --> 00:20:51,760
so if you work with core boot you might

584
00:20:49,039 --> 00:20:53,039
sometimes came across issues somewhere

585
00:20:51,760 --> 00:20:55,760
especially if you don't have much

586
00:20:53,039 --> 00:20:55,760
documentation

587
00:20:56,640 --> 00:21:00,880
this is also where dexter's law applies

588
00:20:58,799 --> 00:21:03,520
you might have heard about that one

589
00:21:00,880 --> 00:21:05,280
which says that only proprietary vendors

590
00:21:03,520 --> 00:21:07,200
actually won proprietary firmware

591
00:21:05,280 --> 00:21:08,799
right so i as a consumer i would never

592
00:21:07,200 --> 00:21:09,600
say hey i want some software from you

593
00:21:08,799 --> 00:21:12,080
but please

594
00:21:09,600 --> 00:21:13,360
make it close for us make me never look

595
00:21:12,080 --> 00:21:17,840
into it or something

596
00:21:13,360 --> 00:21:17,840
you know nobody would ever say that

597
00:21:17,919 --> 00:21:21,200
and that's what the issue when we're

598
00:21:19,520 --> 00:21:22,960
talking about security

599
00:21:21,200 --> 00:21:24,880
attackers don't play by those routes

600
00:21:22,960 --> 00:21:27,600
right so if there is some shady people

601
00:21:24,880 --> 00:21:30,159
sitting somewhere in a dark corner and

602
00:21:27,600 --> 00:21:32,639
they want to hack your laptop

603
00:21:30,159 --> 00:21:33,919
they do not care about that right but

604
00:21:32,640 --> 00:21:36,880
we're on the other side we

605
00:21:33,919 --> 00:21:38,480
actually want to secure our laptops and

606
00:21:36,880 --> 00:21:40,400
now we have this problem we can't really

607
00:21:38,480 --> 00:21:44,400
look into it very much

608
00:21:40,400 --> 00:21:47,679
so we cannot really investigate our

609
00:21:44,400 --> 00:21:50,559
attack model here right

610
00:21:47,679 --> 00:21:52,559
but we can take some first steps there

611
00:21:50,559 --> 00:21:53,440
is previous work there is some analysis

612
00:21:52,559 --> 00:21:56,080
tools

613
00:21:53,440 --> 00:21:58,640
there has been some reverse engineering

614
00:21:56,080 --> 00:22:02,320
so i put all the references here

615
00:21:58,640 --> 00:22:04,640
and now we'll tell you a bit about

616
00:22:02,320 --> 00:22:05,360
some attacks which actually resulted

617
00:22:04,640 --> 00:22:08,320
from

618
00:22:05,360 --> 00:22:10,240
some reverse engineering so for example

619
00:22:08,320 --> 00:22:12,240
there was the planner volt attack

620
00:22:10,240 --> 00:22:14,400
this is what some shady people in the

621
00:22:12,240 --> 00:22:15,919
dark corner could have come up with

622
00:22:14,400 --> 00:22:17,679
nobody would have noticed because you

623
00:22:15,919 --> 00:22:20,880
were never allowed to look into the

624
00:22:17,679 --> 00:22:21,919
stuff right i think everybody heard

625
00:22:20,880 --> 00:22:24,880
about this

626
00:22:21,919 --> 00:22:26,080
uh if not look into uh the stuff it's

627
00:22:24,880 --> 00:22:29,280
just plundervault

628
00:22:26,080 --> 00:22:31,840
search for it you will find it

629
00:22:29,280 --> 00:22:33,760
which uh well brings us to this question

630
00:22:31,840 --> 00:22:37,120
can we actually trust the vendors

631
00:22:33,760 --> 00:22:38,879
um i have very uh briefly wanted to come

632
00:22:37,120 --> 00:22:40,000
up with something like a definition of

633
00:22:38,880 --> 00:22:42,960
trust which is

634
00:22:40,000 --> 00:22:44,400
well inherently complicated uh i just

635
00:22:42,960 --> 00:22:46,559
sum it up so there is uh

636
00:22:44,400 --> 00:22:48,000
for me uh two kinds of trust there is

637
00:22:46,559 --> 00:22:49,520
something which is actually earned and

638
00:22:48,000 --> 00:22:50,559
there is something called blind trust so

639
00:22:49,520 --> 00:22:53,918
blind trust is

640
00:22:50,559 --> 00:22:55,360
basically like the uh well this will

641
00:22:53,919 --> 00:22:58,640
this will be our right model

642
00:22:55,360 --> 00:23:00,719
you know um so my question is always

643
00:22:58,640 --> 00:23:02,159
why do i have to disclose what like when

644
00:23:00,720 --> 00:23:03,600
i bake cookies i will have to tell you

645
00:23:02,159 --> 00:23:05,760
if it contains nuts because

646
00:23:03,600 --> 00:23:07,199
some people may be allergic but if i

647
00:23:05,760 --> 00:23:08,640
provide you with hardware

648
00:23:07,200 --> 00:23:10,960
i don't have to disclose anything

649
00:23:08,640 --> 00:23:12,960
basically

650
00:23:10,960 --> 00:23:14,559
yeah so security actually has many

651
00:23:12,960 --> 00:23:17,760
dimensions you know we have heard about

652
00:23:14,559 --> 00:23:17,760
these security issues

653
00:23:18,000 --> 00:23:22,000
there's something which is called this

654
00:23:20,640 --> 00:23:24,159
responsible disclosure

655
00:23:22,000 --> 00:23:25,120
and also coordinate disclosure that's

656
00:23:24,159 --> 00:23:28,880
the model that

657
00:23:25,120 --> 00:23:31,360
the um researchers are using and also

658
00:23:28,880 --> 00:23:32,960
well uh most of the companies are using

659
00:23:31,360 --> 00:23:34,719
so they don't publish information

660
00:23:32,960 --> 00:23:36,400
upfront you know they will

661
00:23:34,720 --> 00:23:38,159
take it offline they will have their

662
00:23:36,400 --> 00:23:38,720
internal discussions at some point there

663
00:23:38,159 --> 00:23:42,480
will

664
00:23:38,720 --> 00:23:42,480
be information released hopefully

665
00:23:42,559 --> 00:23:46,158
now inter researchers actually just

666
00:23:44,559 --> 00:23:48,000
wrote about this

667
00:23:46,159 --> 00:23:50,159
they agreed that we need a common

668
00:23:48,000 --> 00:23:52,960
taxonomy to actually talk about those

669
00:23:50,159 --> 00:23:56,159
things so you know that we don't

670
00:23:52,960 --> 00:23:58,159
misunderstand each other

671
00:23:56,159 --> 00:24:00,480
this is here my security perspective

672
00:23:58,159 --> 00:24:02,400
actually some people also agreed to that

673
00:24:00,480 --> 00:24:04,400
that we need to be able to audit our

674
00:24:02,400 --> 00:24:06,080
stuff if we cannot audit something we

675
00:24:04,400 --> 00:24:09,360
can entrust it and therefore

676
00:24:06,080 --> 00:24:09,360
you know no audit no trust

677
00:24:10,159 --> 00:24:13,840
so here's a brief introduction to

678
00:24:12,320 --> 00:24:16,080
firmware analysis

679
00:24:13,840 --> 00:24:18,080
i like to look at firmware this way it's

680
00:24:16,080 --> 00:24:18,639
a bit like emulating firmware but you

681
00:24:18,080 --> 00:24:21,279
know

682
00:24:18,640 --> 00:24:23,039
uh it's really just uh reading the raw

683
00:24:21,279 --> 00:24:23,600
bytes which you have in your firmware

684
00:24:23,039 --> 00:24:25,760
image

685
00:24:23,600 --> 00:24:27,360
you can do this uh with uh very nice

686
00:24:25,760 --> 00:24:29,919
tools like xsd

687
00:24:27,360 --> 00:24:30,639
xxd and less right so that gives you

688
00:24:29,919 --> 00:24:34,480
this

689
00:24:30,640 --> 00:24:36,720
uh this is uh how the

690
00:24:34,480 --> 00:24:38,400
me firmware is actually partitioned so

691
00:24:36,720 --> 00:24:39,360
it's really just very very simple data

692
00:24:38,400 --> 00:24:41,600
structures

693
00:24:39,360 --> 00:24:43,279
from all the tools i already mentioned

694
00:24:41,600 --> 00:24:46,480
before

695
00:24:43,279 --> 00:24:48,000
you can come to these conclusions

696
00:24:46,480 --> 00:24:49,919
it's very just simple right it's really

697
00:24:48,000 --> 00:24:52,480
just listings like these regions are

698
00:24:49,919 --> 00:24:55,440
here and there

699
00:24:52,480 --> 00:24:56,799
yeah there is different sorts of entries

700
00:24:55,440 --> 00:24:58,480
in the firmware you will

701
00:24:56,799 --> 00:25:00,240
figure it out if you look further into

702
00:24:58,480 --> 00:25:02,159
it so i'm just listing those here for

703
00:25:00,240 --> 00:25:03,760
reference

704
00:25:02,159 --> 00:25:06,720
and unfortunately i'm almost out of time

705
00:25:03,760 --> 00:25:10,480
once again so i will just

706
00:25:06,720 --> 00:25:10,480
skip through some of this stuff

707
00:25:12,720 --> 00:25:16,559
and of course come talk to me because

708
00:25:14,640 --> 00:25:17,520
i'm really interested in exchanging more

709
00:25:16,559 --> 00:25:20,240
about this

710
00:25:17,520 --> 00:25:20,720
if you can read x86 instructions of

711
00:25:20,240 --> 00:25:22,159
course

712
00:25:20,720 --> 00:25:23,600
you can just look at the raw bytes

713
00:25:22,159 --> 00:25:26,840
because this is not decompiling or

714
00:25:23,600 --> 00:25:28,639
disassembly it's really just reading

715
00:25:26,840 --> 00:25:32,720
right

716
00:25:28,640 --> 00:25:34,799
um yeah time's up now

717
00:25:32,720 --> 00:25:37,120
uh so just uh for a very brief

718
00:25:34,799 --> 00:25:39,440
conclusion uh all firmware has to be

719
00:25:37,120 --> 00:25:40,399
open source for security that's what i

720
00:25:39,440 --> 00:25:43,760
propose

721
00:25:40,400 --> 00:25:44,880
uh some people agree and to fully on

722
00:25:43,760 --> 00:25:46,640
your own hardware

723
00:25:44,880 --> 00:25:49,200
we actually have to do something about

724
00:25:46,640 --> 00:25:51,440
this uh here's a lots of projects where

725
00:25:49,200 --> 00:25:55,360
we have open source stuff

726
00:25:51,440 --> 00:25:57,919
yeah and that's where i'm ending here

727
00:25:55,360 --> 00:25:59,760
i would like to uh well actually thank

728
00:25:57,919 --> 00:26:00,640
all those projects uh which are also

729
00:25:59,760 --> 00:26:03,919
present here

730
00:26:00,640 --> 00:26:05,440
and also my hacker spaces unfortunately

731
00:26:03,919 --> 00:26:06,559
there is no time for questions so this

732
00:26:05,440 --> 00:26:08,480
slide is for

733
00:26:06,559 --> 00:26:11,149
uh people watching the recording so you

734
00:26:08,480 --> 00:26:14,449
have the reference thank you

735
00:26:11,150 --> 00:26:14,449
[Applause]

