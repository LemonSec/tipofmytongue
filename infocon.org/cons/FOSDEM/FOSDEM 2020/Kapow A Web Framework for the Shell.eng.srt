1
00:00:06,720 --> 00:00:10,639
okay everybody looks like

2
00:00:08,080 --> 00:00:12,320
roberto martinez is about ready can you

3
00:00:10,639 --> 00:00:14,000
all please take your seats

4
00:00:12,320 --> 00:00:15,599
and uh let him get started he's gonna be

5
00:00:14,000 --> 00:00:18,480
talking about kapow i'm gonna hit the

6
00:00:15,599 --> 00:00:22,000
button right now

7
00:00:18,480 --> 00:00:25,359
all right hello everybody and

8
00:00:22,000 --> 00:00:28,960
i'm here to to speak about capao

9
00:00:25,359 --> 00:00:32,160
let's begin so first of all

10
00:00:28,960 --> 00:00:34,320
there are two separate worlds

11
00:00:32,159 --> 00:00:35,519
on the left we have the the network

12
00:00:34,320 --> 00:00:38,960
world

13
00:00:35,520 --> 00:00:42,079
which inhabitants are web services

14
00:00:38,960 --> 00:00:45,440
browsers iot devices

15
00:00:42,079 --> 00:00:46,239
you name it and they speak with several

16
00:00:45,440 --> 00:00:50,879
languages

17
00:00:46,239 --> 00:00:50,879
but the main one is http

18
00:00:50,960 --> 00:00:59,840
the other word is the command line world

19
00:00:54,879 --> 00:01:03,358
the citizens are the commands files

20
00:00:59,840 --> 00:01:07,760
file descriptors and they communicate

21
00:01:03,359 --> 00:01:07,760
through pipes and redirections

22
00:01:07,920 --> 00:01:13,439
so how we communicate these two words

23
00:01:10,840 --> 00:01:15,040
together

24
00:01:13,439 --> 00:01:17,600
from the command line world to the

25
00:01:15,040 --> 00:01:18,960
network is very easy because we have a

26
00:01:17,600 --> 00:01:23,360
lot of very good tools

27
00:01:18,960 --> 00:01:26,880
like core wk http you name it

28
00:01:23,360 --> 00:01:30,079
those tools can perform http requests

29
00:01:26,880 --> 00:01:33,679
the web services for example and output

30
00:01:30,079 --> 00:01:34,320
responses to the cell and interact with

31
00:01:33,680 --> 00:01:39,200
them

32
00:01:34,320 --> 00:01:41,679
very easily the other way around

33
00:01:39,200 --> 00:01:43,280
is more complicated because we have a

34
00:01:41,680 --> 00:01:46,079
lot of options but

35
00:01:43,280 --> 00:01:46,079
none is very good

36
00:01:47,040 --> 00:01:53,759
we have for example the the cga approach

37
00:01:50,799 --> 00:01:56,880
in which we have a cga server that can

38
00:01:53,759 --> 00:01:59,119
receive an http request

39
00:01:56,880 --> 00:02:00,000
and make some transformation first of

40
00:01:59,119 --> 00:02:03,200
all

41
00:02:00,000 --> 00:02:06,240
the cga server pollutes our

42
00:02:03,200 --> 00:02:07,360
cell environment with http data and

43
00:02:06,240 --> 00:02:10,399
predates

44
00:02:07,360 --> 00:02:15,200
the standard input and standard output

45
00:02:10,399 --> 00:02:18,640
streams with http data also

46
00:02:15,200 --> 00:02:20,399
this is not my favorite approach because

47
00:02:18,640 --> 00:02:22,399
the commands that we are trying to

48
00:02:20,400 --> 00:02:26,640
interface with the network

49
00:02:22,400 --> 00:02:29,040
have to know how to deal with the http

50
00:02:26,640 --> 00:02:29,040
request

51
00:02:29,520 --> 00:02:33,920
another approach is the so-called

52
00:02:31,920 --> 00:02:37,440
genetic adapter approach

53
00:02:33,920 --> 00:02:40,958
in which we receive some

54
00:02:37,440 --> 00:02:43,920
http request and our generic adapter

55
00:02:40,959 --> 00:02:44,239
makes some specific transformation which

56
00:02:43,920 --> 00:02:48,000
is

57
00:02:44,239 --> 00:02:51,440
is particular to to its implementation

58
00:02:48,000 --> 00:02:53,840
and call the command with the data

59
00:02:51,440 --> 00:02:54,480
this is very similar to the cg approach

60
00:02:53,840 --> 00:02:56,720
but is

61
00:02:54,480 --> 00:02:59,200
particular to the to the adapter that we

62
00:02:56,720 --> 00:02:59,200
are using

63
00:03:00,159 --> 00:03:04,640
another approach is to use a a custom

64
00:03:03,280 --> 00:03:08,239
adapter

65
00:03:04,640 --> 00:03:08,958
maybe we are if it's not possible to use

66
00:03:08,239 --> 00:03:10,640
a generic

67
00:03:08,959 --> 00:03:12,239
adapter because it's not suitable for a

68
00:03:10,640 --> 00:03:16,000
command

69
00:03:12,239 --> 00:03:18,080
we can use our favorite primary language

70
00:03:16,000 --> 00:03:21,040
and make a

71
00:03:18,080 --> 00:03:23,040
an http server and when the server

72
00:03:21,040 --> 00:03:27,040
receives an http

73
00:03:23,040 --> 00:03:29,840
request you it can execute your command

74
00:03:27,040 --> 00:03:31,040
passing the data you know everything is

75
00:03:29,840 --> 00:03:33,760
hunky-dory

76
00:03:31,040 --> 00:03:35,280
but this has some limitation because the

77
00:03:33,760 --> 00:03:38,079
command that we are interfacing

78
00:03:35,280 --> 00:03:38,879
is not a part of the cell and it's very

79
00:03:38,080 --> 00:03:42,239
difficult to

80
00:03:38,879 --> 00:03:45,679
interact with other commands without

81
00:03:42,239 --> 00:03:48,959
modifying our custom adapter

82
00:03:45,680 --> 00:03:51,200
the last one and the saddest one is uh

83
00:03:48,959 --> 00:03:53,040
just give up and make a new

84
00:03:51,200 --> 00:03:57,200
implementation of our command

85
00:03:53,040 --> 00:04:00,400
with uh with an http interface

86
00:03:57,200 --> 00:04:03,760
but you know we are we are losing uh

87
00:04:00,400 --> 00:04:06,159
decades of experience in in command line

88
00:04:03,760 --> 00:04:06,159
commands

89
00:04:06,480 --> 00:04:12,399
so isn't there a better way to interface

90
00:04:09,519 --> 00:04:13,040
the network and the command line world

91
00:04:12,400 --> 00:04:16,880
just with

92
00:04:13,040 --> 00:04:20,880
yes there is and i'm going to show you

93
00:04:16,880 --> 00:04:20,880
so let's see some demos

94
00:04:24,000 --> 00:04:29,280
so first consider this scenario

95
00:04:27,440 --> 00:04:31,680
we have an internal host that maybe is

96
00:04:29,280 --> 00:04:33,679
our database or a printer or

97
00:04:31,680 --> 00:04:35,120
something something that that is in an

98
00:04:33,680 --> 00:04:39,199
internal network

99
00:04:35,120 --> 00:04:42,560
and we have uh users on the internet

100
00:04:39,199 --> 00:04:46,240
that needs to know if the device

101
00:04:42,560 --> 00:04:49,040
is up or if the device is down

102
00:04:46,240 --> 00:04:49,040
how we do this

103
00:04:49,360 --> 00:04:52,240
any any clue

104
00:04:53,199 --> 00:04:57,440
so the first that came to mind is ssh

105
00:04:55,360 --> 00:05:02,160
into the external host that we have

106
00:04:57,440 --> 00:05:04,880
and just ping the device no

107
00:05:02,160 --> 00:05:05,840
but this has some problems because we

108
00:05:04,880 --> 00:05:08,320
have to manage

109
00:05:05,840 --> 00:05:12,479
ssh accounts in the external host and

110
00:05:08,320 --> 00:05:12,479
maybe it's not very secure

111
00:05:12,880 --> 00:05:16,800
another way is using kapow

112
00:05:18,080 --> 00:05:22,800
can you see this so the first thing that

113
00:05:21,600 --> 00:05:25,440
we have to do is

114
00:05:22,800 --> 00:05:26,720
start the couple server this enable an

115
00:05:25,440 --> 00:05:31,120
http server in the

116
00:05:26,720 --> 00:05:35,280
in the host and now we have

117
00:05:31,120 --> 00:05:37,840
uh this this file a pin.power that

118
00:05:35,280 --> 00:05:38,960
is not a scary it's just an assault

119
00:05:37,840 --> 00:05:42,799
script

120
00:05:38,960 --> 00:05:44,479
in in which we are using another kapow

121
00:05:42,800 --> 00:05:47,840
subcommand couple root

122
00:05:44,479 --> 00:05:54,000
to instruct the kapow server to add

123
00:05:47,840 --> 00:05:58,159
a http endpoint um that when called

124
00:05:54,000 --> 00:06:00,560
will execute this cell script

125
00:05:58,160 --> 00:06:01,680
in this cell script we are just

126
00:06:00,560 --> 00:06:05,360
executing the ping

127
00:06:01,680 --> 00:06:08,400
command with with just one ping

128
00:06:05,360 --> 00:06:09,840
to our server internal server and we are

129
00:06:08,400 --> 00:06:11,359
redirecting the output of the ping

130
00:06:09,840 --> 00:06:14,479
command

131
00:06:11,360 --> 00:06:16,000
to another couple uh subcommand which is

132
00:06:14,479 --> 00:06:19,199
the kapowsat command

133
00:06:16,000 --> 00:06:22,240
that interacts with the incoming request

134
00:06:19,199 --> 00:06:25,280
and set the response body

135
00:06:22,240 --> 00:06:27,600
to the data that is uh that displays

136
00:06:25,280 --> 00:06:27,599
along

137
00:06:28,880 --> 00:06:34,159
so we execute the the script now capo

138
00:06:32,400 --> 00:06:37,679
knows how to deal with the

139
00:06:34,160 --> 00:06:40,960
with the ping endpoint and if

140
00:06:37,680 --> 00:06:43,680
we execute a cool

141
00:06:40,960 --> 00:06:43,680
it just works

142
00:06:45,360 --> 00:06:49,840
what can we do now

143
00:06:51,599 --> 00:06:55,199
well we have a lot of tools in the in

144
00:06:54,000 --> 00:06:57,360
the system to

145
00:06:55,199 --> 00:07:00,400
give more information to our users so

146
00:06:57,360 --> 00:07:04,720
maybe it's time to make a nice

147
00:07:00,400 --> 00:07:09,039
api to let them inspect things that

148
00:07:04,720 --> 00:07:10,800
they are not uh capable of for example

149
00:07:09,039 --> 00:07:12,560
which processes are running in the in

150
00:07:10,800 --> 00:07:16,880
our server

151
00:07:12,560 --> 00:07:19,360
or maybe what type of cpu we have

152
00:07:16,880 --> 00:07:20,960
you know anything that they need to know

153
00:07:19,360 --> 00:07:24,080
and they don't

154
00:07:20,960 --> 00:07:25,680
they can't know because they are not in

155
00:07:24,080 --> 00:07:31,840
another

156
00:07:25,680 --> 00:07:31,840
host we execute the script again

157
00:07:36,639 --> 00:07:39,199
and that's it

158
00:07:39,919 --> 00:07:42,880
so what just happened

159
00:07:43,039 --> 00:07:50,240
a capable server works like this we have

160
00:07:47,840 --> 00:07:51,039
the capo process which have two

161
00:07:50,240 --> 00:07:53,280
interfaces

162
00:07:51,039 --> 00:07:54,560
a public interface which interact with

163
00:07:53,280 --> 00:07:57,919
the user

164
00:07:54,560 --> 00:07:59,120
and a private interface that interacts

165
00:07:57,919 --> 00:08:02,000
with

166
00:07:59,120 --> 00:08:03,280
with the cell when a request from the

167
00:08:02,000 --> 00:08:06,560
user

168
00:08:03,280 --> 00:08:09,520
arrives to the user interface

169
00:08:06,560 --> 00:08:10,560
a cell process is spawn and in that

170
00:08:09,520 --> 00:08:13,039
serial process

171
00:08:10,560 --> 00:08:14,800
maybe a script is executing some

172
00:08:13,039 --> 00:08:17,520
composite commands

173
00:08:14,800 --> 00:08:19,120
that interact with the internal data

174
00:08:17,520 --> 00:08:21,280
interface

175
00:08:19,120 --> 00:08:22,560
this is interacting in real time with

176
00:08:21,280 --> 00:08:25,280
the

177
00:08:22,560 --> 00:08:26,560
http request that came from the user so

178
00:08:25,280 --> 00:08:29,440
in this example

179
00:08:26,560 --> 00:08:30,160
kapow said response body banana is

180
00:08:29,440 --> 00:08:35,279
setting

181
00:08:30,160 --> 00:08:35,279
a banana in the in the user response

182
00:08:35,440 --> 00:08:38,640
let's see another example

183
00:08:39,279 --> 00:08:42,559
is also very useful for developers i

184
00:08:41,760 --> 00:08:44,800
don't know if you

185
00:08:42,559 --> 00:08:47,439
have to work with windows i don't

186
00:08:44,800 --> 00:08:47,439
recommend it

187
00:08:48,720 --> 00:08:57,120
but capo is also available for windows

188
00:08:53,279 --> 00:08:59,760
and then here using a kapow for windows

189
00:08:57,120 --> 00:09:01,120
uh from sequin which is a pass

190
00:08:59,760 --> 00:09:03,760
implementation but

191
00:09:01,120 --> 00:09:05,120
because a capo interacts with a sal you

192
00:09:03,760 --> 00:09:07,439
don't have to

193
00:09:05,120 --> 00:09:09,600
use it with bus you can use it with the

194
00:09:07,440 --> 00:09:11,680
with the windows

195
00:09:09,600 --> 00:09:14,399
command line if you want to but i don't

196
00:09:11,680 --> 00:09:14,399
recommend either

197
00:09:14,959 --> 00:09:22,079
and here where we are creating a uh

198
00:09:19,360 --> 00:09:23,600
an endpoint in the capo server to use

199
00:09:22,080 --> 00:09:26,320
the

200
00:09:23,600 --> 00:09:27,200
windows and anti-virus software that

201
00:09:26,320 --> 00:09:30,560
came with the

202
00:09:27,200 --> 00:09:33,680
with the operating system to

203
00:09:30,560 --> 00:09:34,479
scan a user the a file that the user is

204
00:09:33,680 --> 00:09:37,599
uploading

205
00:09:34,480 --> 00:09:41,040
through a form

206
00:09:37,600 --> 00:09:43,680
we are storing the use the

207
00:09:41,040 --> 00:09:44,800
sorry the file we are using the

208
00:09:43,680 --> 00:09:48,479
antivirus to

209
00:09:44,800 --> 00:09:51,680
scan it we are formatting the output

210
00:09:48,480 --> 00:09:55,200
and finally giving

211
00:09:51,680 --> 00:09:58,160
the output to the to the http response

212
00:09:55,200 --> 00:09:58,160
so we launched this

213
00:09:58,800 --> 00:10:06,399
noka power is running and now from my

214
00:10:02,959 --> 00:10:09,839
linux environment i can upload

215
00:10:06,399 --> 00:10:09,839
uh you know

216
00:10:10,160 --> 00:10:15,199
a clean executable

217
00:10:13,440 --> 00:10:17,440
and the compose server is using the

218
00:10:15,200 --> 00:10:20,880
antivirus antivirus software to

219
00:10:17,440 --> 00:10:26,079
scan it there's no threads

220
00:10:20,880 --> 00:10:29,519
but if we use a virus upload the virus

221
00:10:26,079 --> 00:10:29,519
yay it works

222
00:10:30,839 --> 00:10:33,839
finally

223
00:10:34,800 --> 00:10:39,279
kapow is very useful for security teams

224
00:10:37,040 --> 00:10:39,279
too

225
00:10:41,440 --> 00:10:45,040
because for example if you have a

226
00:10:44,320 --> 00:10:48,880
network

227
00:10:45,040 --> 00:10:51,120
with sensitive data

228
00:10:48,880 --> 00:10:52,880
you don't want to give access to that

229
00:10:51,120 --> 00:10:55,920
network to

230
00:10:52,880 --> 00:10:59,279
maybe to auditors or pentester

231
00:10:55,920 --> 00:11:00,560
in some situation so capoeira can be

232
00:10:59,279 --> 00:11:04,079
very useful

233
00:11:00,560 --> 00:11:06,880
to convert or transform the

234
00:11:04,079 --> 00:11:08,719
pentester tools to apis that can be

235
00:11:06,880 --> 00:11:12,240
deployed inside that

236
00:11:08,720 --> 00:11:15,839
those sensitive networks and use it from

237
00:11:12,240 --> 00:11:15,839
from the site

238
00:11:16,480 --> 00:11:19,600
in this example i'm using kapow to

239
00:11:18,720 --> 00:11:22,959
create an

240
00:11:19,600 --> 00:11:26,880
api that uses the tcp dom

241
00:11:22,959 --> 00:11:29,680
software to scan the network of my

242
00:11:26,880 --> 00:11:31,279
laptop try to sniff the packets from the

243
00:11:29,680 --> 00:11:34,319
network of my laptop

244
00:11:31,279 --> 00:11:35,920
and create a stream https that can be

245
00:11:34,320 --> 00:11:43,839
used

246
00:11:35,920 --> 00:11:43,839
somewhere else

247
00:11:49,839 --> 00:11:53,200
i'm using sudo here because i'm lazy and

248
00:11:52,480 --> 00:11:57,839
not

249
00:11:53,200 --> 00:12:02,639
is properly configured

250
00:11:57,839 --> 00:12:02,639
okay so now the server is ready

251
00:12:03,040 --> 00:12:11,279
and we can use for another host

252
00:12:07,279 --> 00:12:15,360
a simple cool

253
00:12:11,279 --> 00:12:15,360
and applied with a word shark

254
00:12:21,680 --> 00:12:28,560
you know and if we use something

255
00:12:24,880 --> 00:12:34,320
from the internet here we are making a

256
00:12:28,560 --> 00:12:34,319
a sniffing network through an http api

257
00:12:35,120 --> 00:12:38,720
so finally was take a power approach the

258
00:12:37,839 --> 00:12:41,680
power pro

259
00:12:38,720 --> 00:12:42,720
is sitting in sitting in between those

260
00:12:41,680 --> 00:12:46,079
two worlds

261
00:12:42,720 --> 00:12:47,040
and speaking perfect hdb uh with the

262
00:12:46,079 --> 00:12:49,199
network world

263
00:12:47,040 --> 00:12:50,880
and speaking perfect cell with this with

264
00:12:49,200 --> 00:12:55,440
the command line world

265
00:12:50,880 --> 00:12:55,439
this way we can interact more seamlessly

266
00:12:55,600 --> 00:13:00,320
kapow is distributed first of all is an

267
00:12:58,639 --> 00:13:02,160
open source project it's distributed at

268
00:13:00,320 --> 00:13:06,079
a single study binary

269
00:13:02,160 --> 00:13:08,399
so you can start without any

270
00:13:06,079 --> 00:13:09,839
dependencies is multi-platform we

271
00:13:08,399 --> 00:13:10,880
distribute it for linux mode windows on

272
00:13:09,839 --> 00:13:13,920
mac

273
00:13:10,880 --> 00:13:15,360
and is available for for several

274
00:13:13,920 --> 00:13:20,800
architectures

275
00:13:15,360 --> 00:13:23,920
it's well documented and is tested

276
00:13:20,800 --> 00:13:25,519
but we need your help because we need we

277
00:13:23,920 --> 00:13:28,000
need users

278
00:13:25,519 --> 00:13:30,240
so please if you like what you've seen

279
00:13:28,000 --> 00:13:32,959
try kapow

280
00:13:30,240 --> 00:13:34,480
give us a star on github please share

281
00:13:32,959 --> 00:13:37,920
with a friend or with

282
00:13:34,480 --> 00:13:38,959
somebody that maybe like it and join us

283
00:13:37,920 --> 00:13:42,800
we need

284
00:13:38,959 --> 00:13:49,839
said users developers and so on

285
00:13:42,800 --> 00:13:49,839
and that's it thank you

286
00:13:56,240 --> 00:13:58,320
you

