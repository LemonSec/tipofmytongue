1
00:00:06,399 --> 00:00:09,679
okay i'd like to introduce

2
00:00:07,839 --> 00:00:12,320
our next speaker our next speaker is

3
00:00:09,679 --> 00:00:15,360
john who is currently a phd student

4
00:00:12,320 --> 00:00:17,760
at the rockwood university in niamh

5
00:00:15,360 --> 00:00:19,759
and he spent the first two years of his

6
00:00:17,760 --> 00:00:21,760
phd dabbling with the foundations of

7
00:00:19,760 --> 00:00:23,439
quantum mechanics

8
00:00:21,760 --> 00:00:25,279
which is about the deep question why

9
00:00:23,439 --> 00:00:26,480
nature is described by the laws of

10
00:00:25,279 --> 00:00:28,960
quantum mechanics

11
00:00:26,480 --> 00:00:30,000
and nowadays he's working on optimizing

12
00:00:28,960 --> 00:00:32,239
quantum circuits

13
00:00:30,000 --> 00:00:33,520
using graph theory such as the zx

14
00:00:32,238 --> 00:00:35,120
calculus

15
00:00:33,520 --> 00:00:38,399
and that's what he's going to talk about

16
00:00:35,120 --> 00:00:40,480
today about his project called pi zx

17
00:00:38,399 --> 00:00:41,440
and the talk is about quantum circuit

18
00:00:40,480 --> 00:00:43,360
optimization

19
00:00:41,440 --> 00:00:46,709
verification and simulation with the

20
00:00:43,360 --> 00:00:50,719
software tool so please welcome john

21
00:00:46,710 --> 00:00:52,320
[Applause]

22
00:00:50,719 --> 00:00:53,440
all right well thank you thank you for

23
00:00:52,320 --> 00:00:55,520
the introduction and thank you for

24
00:00:53,440 --> 00:00:59,199
inviting me here to

25
00:00:55,520 --> 00:01:00,879
to give this talk so um in this title it

26
00:00:59,199 --> 00:01:02,000
might be that you don't know what any of

27
00:01:00,879 --> 00:01:04,158
these words mean

28
00:01:02,000 --> 00:01:05,360
like i hope to like make it a bit more

29
00:01:04,159 --> 00:01:06,880
clear towards the end of the talk and

30
00:01:05,360 --> 00:01:08,159
i'll spend most of time

31
00:01:06,880 --> 00:01:10,798
basically explaining what these things

32
00:01:08,159 --> 00:01:12,960
mean and like how we use physics to

33
00:01:10,799 --> 00:01:14,080
use it i know it looks like pi zx but

34
00:01:12,960 --> 00:01:16,720
like it's pronounced physics because

35
00:01:14,080 --> 00:01:19,679
it's more fun like that

36
00:01:16,720 --> 00:01:21,360
all right so physics is a python library

37
00:01:19,680 --> 00:01:23,280
that you can use to manipulate large

38
00:01:21,360 --> 00:01:24,799
zx diagrams and like even if you've

39
00:01:23,280 --> 00:01:26,799
heard of quantum circuits you might not

40
00:01:24,799 --> 00:01:28,720
have heard of the zx diagram so

41
00:01:26,799 --> 00:01:30,320
i will get to explaining to what those

42
00:01:28,720 --> 00:01:32,240
are and why you should care about it if

43
00:01:30,320 --> 00:01:33,679
you care about content computing

44
00:01:32,240 --> 00:01:35,039
yeah the picture the plane just to show

45
00:01:33,680 --> 00:01:36,159
that like our marketing department is

46
00:01:35,040 --> 00:01:40,479
really hard at work trying to get the

47
00:01:36,159 --> 00:01:43,439
word out about our project

48
00:01:40,479 --> 00:01:44,640
all right so just like the basics um a

49
00:01:43,439 --> 00:01:46,479
quantum computation

50
00:01:44,640 --> 00:01:48,320
like there's multiple ways to do it but

51
00:01:46,479 --> 00:01:49,840
like the most general or like the most

52
00:01:48,320 --> 00:01:51,520
straightforward way is to use a quantum

53
00:01:49,840 --> 00:01:53,360
circuit it's basically the quantum

54
00:01:51,520 --> 00:01:55,679
analog of a logic circuit in classical

55
00:01:53,360 --> 00:01:57,439
computing

56
00:01:55,680 --> 00:01:59,439
and a quantum circuit you can build it

57
00:01:57,439 --> 00:01:59,679
out of quantum gates and quantum gates

58
00:01:59,439 --> 00:02:01,360
are

59
00:01:59,680 --> 00:02:02,719
like you can think of like a quantum

60
00:02:01,360 --> 00:02:04,719
circle with quantum gates so the

61
00:02:02,719 --> 00:02:07,679
assembly language of a quantum computer

62
00:02:04,719 --> 00:02:10,000
so they contain sort of abstracted basic

63
00:02:07,680 --> 00:02:13,120
instructions for your computer

64
00:02:10,000 --> 00:02:16,560
um and these gates have names like

65
00:02:13,120 --> 00:02:18,480
not gate skt gate hgate not the gate is

66
00:02:16,560 --> 00:02:21,680
probably familiar to you all

67
00:02:18,480 --> 00:02:23,760
those others maybe not

68
00:02:21,680 --> 00:02:25,200
so the way you should understand these

69
00:02:23,760 --> 00:02:27,760
single qubit gates so they do a

70
00:02:25,200 --> 00:02:30,399
transformation on just a single qubit

71
00:02:27,760 --> 00:02:32,720
and a qubit you can sort of see as a

72
00:02:30,400 --> 00:02:35,840
sphere called the bloch sphere

73
00:02:32,720 --> 00:02:37,040
and if you compare this to like to uh to

74
00:02:35,840 --> 00:02:38,800
classical computing

75
00:02:37,040 --> 00:02:40,319
you would have like a zero and a one

76
00:02:38,800 --> 00:02:42,239
state and the zero and once there you

77
00:02:40,319 --> 00:02:43,599
can see the zero lives up here at the

78
00:02:42,239 --> 00:02:46,239
north pole of the block sphere

79
00:02:43,599 --> 00:02:47,040
the one state lives down here so in not

80
00:02:46,239 --> 00:02:49,280
gate you can see

81
00:02:47,040 --> 00:02:50,400
it's like a 180 degree rotation that

82
00:02:49,280 --> 00:02:52,319
flips the two pulses

83
00:02:50,400 --> 00:02:53,840
like this but the special thing about

84
00:02:52,319 --> 00:02:55,200
content computing is you don't just have

85
00:02:53,840 --> 00:02:57,760
the pulse you can use you can use

86
00:02:55,200 --> 00:02:59,839
any position on the sphere manipulate it

87
00:02:57,760 --> 00:03:02,079
so for representation of what a qubit

88
00:02:59,840 --> 00:03:03,040
like in what state it can be and then

89
00:03:02,080 --> 00:03:05,519
these other gates

90
00:03:03,040 --> 00:03:07,040
like the hademar gate skt gate this

91
00:03:05,519 --> 00:03:07,840
corresponds to different types of

92
00:03:07,040 --> 00:03:09,200
rotations

93
00:03:07,840 --> 00:03:10,800
on this block sphere there are different

94
00:03:09,200 --> 00:03:12,159
types of operations you can do in the

95
00:03:10,800 --> 00:03:14,159
qubit

96
00:03:12,159 --> 00:03:16,799
for instance how the mag8 interchanges

97
00:03:14,159 --> 00:03:19,440
the set and x-axis so like it makes a

98
00:03:16,800 --> 00:03:21,680
a state like a zero state and puts it on

99
00:03:19,440 --> 00:03:24,480
like the equator which is like makes it

100
00:03:21,680 --> 00:03:25,440
a superposition of two states and these

101
00:03:24,480 --> 00:03:27,760
other gates are like

102
00:03:25,440 --> 00:03:29,359
there's also this is a half root a choir

103
00:03:27,760 --> 00:03:32,720
rotation the t gate is like a

104
00:03:29,360 --> 00:03:34,239
one h rotation are i use these specific

105
00:03:32,720 --> 00:03:36,239
gates for a reason which will come in

106
00:03:34,239 --> 00:03:38,720
like a few minutes

107
00:03:36,239 --> 00:03:40,000
and there's basically only one two qubit

108
00:03:38,720 --> 00:03:42,000
gate that you need to know about which

109
00:03:40,000 --> 00:03:43,760
is called the controlled not gate

110
00:03:42,000 --> 00:03:46,000
and what this simply does is it has two

111
00:03:43,760 --> 00:03:47,599
qubits and i look at my first qubit and

112
00:03:46,000 --> 00:03:48,400
if it's in the zero state i don't do

113
00:03:47,599 --> 00:03:50,640
anything

114
00:03:48,400 --> 00:03:52,239
if it's in the one state then i flip the

115
00:03:50,640 --> 00:03:53,839
bits of the second qubit so this is just

116
00:03:52,239 --> 00:03:55,200
a classical operation but then you do

117
00:03:53,840 --> 00:03:58,400
this classical operation

118
00:03:55,200 --> 00:03:58,399
on two qubits

119
00:03:58,879 --> 00:04:02,798
so these are all the gates you need you

120
00:04:00,319 --> 00:04:04,079
can actually do any quantum computation

121
00:04:02,799 --> 00:04:07,200
using just these

122
00:04:04,080 --> 00:04:07,760
um let's see uh one two three four five

123
00:04:07,200 --> 00:04:09,280
gates

124
00:04:07,760 --> 00:04:10,879
so like this is all you need to know for

125
00:04:09,280 --> 00:04:12,400
contributing basically because then you

126
00:04:10,879 --> 00:04:12,640
can do any computation one which is like

127
00:04:12,400 --> 00:04:14,720
it's

128
00:04:12,640 --> 00:04:16,560
hard to show this is actually true but

129
00:04:14,720 --> 00:04:20,000
it does work

130
00:04:16,560 --> 00:04:21,358
um yeah and so the motivation behind the

131
00:04:20,000 --> 00:04:24,080
stock and what i will talk about is

132
00:04:21,358 --> 00:04:26,320
quantum circuit optimization so

133
00:04:24,080 --> 00:04:28,080
taking a sim the same quantum circuit

134
00:04:26,320 --> 00:04:29,520
but like somehow reducing the number of

135
00:04:28,080 --> 00:04:31,440
gates in it while still performing the

136
00:04:29,520 --> 00:04:34,400
same computation which is like

137
00:04:31,440 --> 00:04:36,080
analogous to what what uh what advanced

138
00:04:34,400 --> 00:04:38,799
compilers do for classical computers but

139
00:04:36,080 --> 00:04:42,240
now i want to do it for quantum computer

140
00:04:38,800 --> 00:04:44,080
all right so these

141
00:04:42,240 --> 00:04:45,680
uh quantum circuits you have a special

142
00:04:44,080 --> 00:04:47,520
notation to write them down sort of a

143
00:04:45,680 --> 00:04:49,280
graphical way to see them

144
00:04:47,520 --> 00:04:51,198
and we have a special notation for the

145
00:04:49,280 --> 00:04:51,840
not gate it's just like this like xor

146
00:04:51,199 --> 00:04:53,199
symbol

147
00:04:51,840 --> 00:04:55,280
and then a controlled not gate is like

148
00:04:53,199 --> 00:04:57,199
an xor but now it has a control wire

149
00:04:55,280 --> 00:04:59,119
attached to it

150
00:04:57,199 --> 00:05:01,520
and we just compose them into a quantum

151
00:04:59,120 --> 00:05:03,120
circuit so each line here

152
00:05:01,520 --> 00:05:05,120
represents a qubit so this is three

153
00:05:03,120 --> 00:05:06,639
qubits and it just the time goes from

154
00:05:05,120 --> 00:05:08,720
left to right and it just says

155
00:05:06,639 --> 00:05:10,160
on my first cube i do a t gate my third

156
00:05:08,720 --> 00:05:11,840
qubit do a not gate

157
00:05:10,160 --> 00:05:13,919
then do a c not gate between the first

158
00:05:11,840 --> 00:05:15,679
and the second etc you just do these

159
00:05:13,919 --> 00:05:17,520
operations in a row so it tells you

160
00:05:15,680 --> 00:05:20,240
what instructions do we need to do on my

161
00:05:17,520 --> 00:05:20,240
quantum computer

162
00:05:20,320 --> 00:05:23,759
well quite interestingly you have

163
00:05:22,320 --> 00:05:24,000
different circuits that represent the

164
00:05:23,759 --> 00:05:26,000
same

165
00:05:24,000 --> 00:05:27,440
computation and like you have certain

166
00:05:26,000 --> 00:05:29,280
identities for these things

167
00:05:27,440 --> 00:05:31,199
for instance if i do two control not

168
00:05:29,280 --> 00:05:32,719
gates on the same qubits in a row

169
00:05:31,199 --> 00:05:34,479
it's equivalent to doing nothing because

170
00:05:32,720 --> 00:05:36,000
like these knots cancel each other out

171
00:05:34,479 --> 00:05:38,000
and similarly doing too hard on my gates

172
00:05:36,000 --> 00:05:38,479
cancels each other out these things also

173
00:05:38,000 --> 00:05:40,000
hold

174
00:05:38,479 --> 00:05:42,159
so you have some circuit identities

175
00:05:40,000 --> 00:05:45,840
which you can start to use to simplify

176
00:05:42,160 --> 00:05:47,520
your your quantum circuits you're using

177
00:05:45,840 --> 00:05:49,280
um this is a bit complicated about the

178
00:05:47,520 --> 00:05:50,400
fact that some operations commute past

179
00:05:49,280 --> 00:05:52,719
one another so

180
00:05:50,400 --> 00:05:53,840
if i have to uh see not guys for

181
00:05:52,720 --> 00:05:55,680
instance would like

182
00:05:53,840 --> 00:05:57,039
put a knot on the same qubits like it

183
00:05:55,680 --> 00:05:58,319
doesn't matter in which order i do them

184
00:05:57,039 --> 00:05:59,599
so i can flip them so

185
00:05:58,319 --> 00:06:01,199
combining these two things of

186
00:05:59,600 --> 00:06:01,759
cancellations and commuting you can

187
00:06:01,199 --> 00:06:03,520
already see

188
00:06:01,759 --> 00:06:04,960
like it starts to add up what kind of

189
00:06:03,520 --> 00:06:07,520
simplifications you could do

190
00:06:04,960 --> 00:06:09,198
on your quantum circuits and effects

191
00:06:07,520 --> 00:06:11,280
like you can do like a lot more of these

192
00:06:09,199 --> 00:06:13,680
simplification rules and even more

193
00:06:11,280 --> 00:06:15,198
and like lots more and like this list

194
00:06:13,680 --> 00:06:16,800
just goes on and on and people have been

195
00:06:15,199 --> 00:06:18,960
finding more elaborate lists to do

196
00:06:16,800 --> 00:06:20,880
better quantum circuit simplification

197
00:06:18,960 --> 00:06:22,560
but like this gets really unwieldy very

198
00:06:20,880 --> 00:06:25,039
quickly

199
00:06:22,560 --> 00:06:26,479
and basically the reason why i need so

200
00:06:25,039 --> 00:06:28,159
many rules is because the structure of a

201
00:06:26,479 --> 00:06:29,840
quantum circuit is very rigid it's like

202
00:06:28,160 --> 00:06:31,360
it has a definite time ordering you need

203
00:06:29,840 --> 00:06:32,719
to do this thing in this order

204
00:06:31,360 --> 00:06:34,000
you have a definite amount of qubits

205
00:06:32,720 --> 00:06:34,880
you've got increased amount of cubics or

206
00:06:34,000 --> 00:06:35,759
decreased amount of qubits

207
00:06:34,880 --> 00:06:38,880
intermediately

208
00:06:35,759 --> 00:06:39,680
it's very strict what you can do and

209
00:06:38,880 --> 00:06:44,639
this is where we use

210
00:06:39,680 --> 00:06:47,280
zx diagrams to to come over this problem

211
00:06:44,639 --> 00:06:48,000
so select trigrams what you have you

212
00:06:47,280 --> 00:06:50,479
have circuits

213
00:06:48,000 --> 00:06:51,280
and circuits consist of gates and it's a

214
00:06:50,479 --> 00:06:54,240
dex diagram

215
00:06:51,280 --> 00:06:56,318
consists of what we call spiders and

216
00:06:54,240 --> 00:06:58,319
these spiders come in two flavors which

217
00:06:56,319 --> 00:07:00,240
are called zed spiders and x spiders and

218
00:06:58,319 --> 00:07:01,599
they have these two calls green and red

219
00:07:00,240 --> 00:07:02,960
but if you're colorblind probably be

220
00:07:01,599 --> 00:07:06,719
light gray and

221
00:07:02,960 --> 00:07:08,400
dark gray for the egg spider and

222
00:07:06,720 --> 00:07:09,840
contrary to a quantum circuit we can

223
00:07:08,400 --> 00:07:11,679
wire these things in any

224
00:07:09,840 --> 00:07:13,359
any way or shape you want so it's just

225
00:07:11,680 --> 00:07:15,520
like a graph and i just say i want to

226
00:07:13,360 --> 00:07:18,479
connect all these things together

227
00:07:15,520 --> 00:07:19,120
and there's no like we can we can still

228
00:07:18,479 --> 00:07:20,560
say there's like

229
00:07:19,120 --> 00:07:21,759
that's like a time ordering things go

230
00:07:20,560 --> 00:07:23,599
from left to right but it's no longer

231
00:07:21,759 --> 00:07:25,919
really necessary

232
00:07:23,599 --> 00:07:28,240
and only the connectivity matters so i

233
00:07:25,919 --> 00:07:29,840
can like just move these things and

234
00:07:28,240 --> 00:07:31,440
continuously deform the thing and it

235
00:07:29,840 --> 00:07:32,560
represents the same computation or the

236
00:07:31,440 --> 00:07:34,479
same linear map

237
00:07:32,560 --> 00:07:36,400
so for instance this one has two inputs

238
00:07:34,479 --> 00:07:37,520
and three outputs this would be a linear

239
00:07:36,400 --> 00:07:39,758
map from

240
00:07:37,520 --> 00:07:42,180
two qubits as an input to three qubits

241
00:07:39,759 --> 00:07:43,680
as an output

242
00:07:42,180 --> 00:07:46,080
[Music]

243
00:07:43,680 --> 00:07:47,759
and we can write every quantum gate as a

244
00:07:46,080 --> 00:07:49,520
x diagram so instead of the s gate

245
00:07:47,759 --> 00:07:51,919
just a single spider with a single input

246
00:07:49,520 --> 00:07:53,758
single output and a pi over two phase

247
00:07:51,919 --> 00:07:55,680
so if you remember an s gate was a goes

248
00:07:53,759 --> 00:07:56,240
a quarter rotation among the block

249
00:07:55,680 --> 00:07:58,639
sphere

250
00:07:56,240 --> 00:08:00,160
so pi over two is like a quarter

251
00:07:58,639 --> 00:08:02,800
rotational space so you see it this year

252
00:08:00,160 --> 00:08:05,440
and the t gate was like

253
00:08:02,800 --> 00:08:07,520
was like um like a one eight rotation so

254
00:08:05,440 --> 00:08:09,680
you see a pi over four appearing here

255
00:08:07,520 --> 00:08:11,280
the harder mark gates can be decomposed

256
00:08:09,680 --> 00:08:13,120
into like sort of three

257
00:08:11,280 --> 00:08:14,638
basic rotations so we compose these

258
00:08:13,120 --> 00:08:16,560
three rotations together to get this

259
00:08:14,639 --> 00:08:17,680
more complicated honeymoon gate

260
00:08:16,560 --> 00:08:19,599
and because the harmon gate is so

261
00:08:17,680 --> 00:08:21,680
important we introduce a new symbol for

262
00:08:19,599 --> 00:08:23,360
this yellow square

263
00:08:21,680 --> 00:08:24,960
and then a c naught gate the control not

264
00:08:23,360 --> 00:08:26,160
gate is just a composition of two

265
00:08:24,960 --> 00:08:28,960
spiders in this particular

266
00:08:26,160 --> 00:08:30,319
manner and the reason we write is like

267
00:08:28,960 --> 00:08:31,840
vertical lines because like it doesn't

268
00:08:30,319 --> 00:08:32,479
matter in which direction you do it so

269
00:08:31,840 --> 00:08:34,478
you can

270
00:08:32,479 --> 00:08:36,800
see this in two different causal

271
00:08:34,479 --> 00:08:39,279
orderings basically

272
00:08:36,799 --> 00:08:41,359
and it actually turns out that you can

273
00:08:39,279 --> 00:08:43,599
represent any linear map between any

274
00:08:41,360 --> 00:08:45,760
number of qubits ssdx diagrams this is a

275
00:08:43,599 --> 00:08:48,000
universal language to talk about content

276
00:08:45,760 --> 00:08:49,950
about to talk about quantum computing

277
00:08:48,000 --> 00:08:52,160
all right

278
00:08:49,950 --> 00:08:56,000
[Music]

279
00:08:52,160 --> 00:08:57,199
and the reason we we we we like using zx

280
00:08:56,000 --> 00:08:58,640
diagrams is because

281
00:08:57,200 --> 00:09:00,240
they come with a set of graphical

282
00:08:58,640 --> 00:09:03,439
rewrites

283
00:09:00,240 --> 00:09:05,279
so if i have a zx diagram then i can

284
00:09:03,440 --> 00:09:06,720
change it according to these

285
00:09:05,279 --> 00:09:08,320
this set of graphical rear tools and it

286
00:09:06,720 --> 00:09:09,760
will still represent the same

287
00:09:08,320 --> 00:09:12,080
same linear map the same quantum

288
00:09:09,760 --> 00:09:12,399
computation so for instance the rule

289
00:09:12,080 --> 00:09:14,560
here

290
00:09:12,399 --> 00:09:16,320
at the left at the top it basically

291
00:09:14,560 --> 00:09:18,160
tells me that if i have two spiders of

292
00:09:16,320 --> 00:09:18,880
the same color so the same type that are

293
00:09:18,160 --> 00:09:20,959
connected

294
00:09:18,880 --> 00:09:23,360
i can just fuse them together and like

295
00:09:20,959 --> 00:09:24,800
the phases on it they add up

296
00:09:23,360 --> 00:09:26,399
and like and this one tells me what the

297
00:09:24,800 --> 00:09:28,000
heart of my gate does with a spider so

298
00:09:26,399 --> 00:09:29,600
it says that if i have a hot on my gate

299
00:09:28,000 --> 00:09:31,519
in front of a spider

300
00:09:29,600 --> 00:09:33,360
i can push it through the spider and it

301
00:09:31,519 --> 00:09:35,120
changes the color of the spider

302
00:09:33,360 --> 00:09:36,560
so these kind of rules are just very

303
00:09:35,120 --> 00:09:38,000
like once you get the use

304
00:09:36,560 --> 00:09:39,599
once you get used to them a bit it's

305
00:09:38,000 --> 00:09:40,880
very natural to see what you can do it's

306
00:09:39,600 --> 00:09:41,279
like oh i have a honda gate let's push

307
00:09:40,880 --> 00:09:42,720
it through

308
00:09:41,279 --> 00:09:45,040
oh i have two spars the same color let's

309
00:09:42,720 --> 00:09:46,560
fuse them together

310
00:09:45,040 --> 00:09:48,240
and this is just a small set of rewrite

311
00:09:46,560 --> 00:09:51,518
tools and

312
00:09:48,240 --> 00:09:53,040
it turns out that if you add one more

313
00:09:51,519 --> 00:09:54,880
rule which is a bit complicated to

314
00:09:53,040 --> 00:09:57,519
specify then this

315
00:09:54,880 --> 00:09:59,040
rule set is complete so that means that

316
00:09:57,519 --> 00:10:01,040
if i have two diagrams and they

317
00:09:59,040 --> 00:10:03,040
represent the same quantum computation

318
00:10:01,040 --> 00:10:04,480
i know there is a set of rewrite rules

319
00:10:03,040 --> 00:10:05,120
that will bring me from one thing to the

320
00:10:04,480 --> 00:10:07,360
other

321
00:10:05,120 --> 00:10:08,640
so like the dozens of circuit equalities

322
00:10:07,360 --> 00:10:10,399
as i showed in the beginning

323
00:10:08,640 --> 00:10:12,160
like you can all replace them with just

324
00:10:10,399 --> 00:10:14,720
these rules plus one more and then you

325
00:10:12,160 --> 00:10:16,959
have a complete set of figurations

326
00:10:14,720 --> 00:10:18,160
all right so this is why we're why we're

327
00:10:16,959 --> 00:10:18,800
using sedex called because this is

328
00:10:18,160 --> 00:10:21,199
really

329
00:10:18,800 --> 00:10:23,680
powerful graphical tool to reason about

330
00:10:21,200 --> 00:10:24,959
quantum computation

331
00:10:23,680 --> 00:10:28,319
yeah so instead of dots and circular

332
00:10:24,959 --> 00:10:31,040
qualities just a few simple rules

333
00:10:28,320 --> 00:10:32,560
and this brings me to why i'm here which

334
00:10:31,040 --> 00:10:34,079
is physics

335
00:10:32,560 --> 00:10:36,079
so physics is an open source python

336
00:10:34,079 --> 00:10:37,680
library you can find it on github now if

337
00:10:36,079 --> 00:10:40,880
you want

338
00:10:37,680 --> 00:10:43,120
and the goal is that you can import

339
00:10:40,880 --> 00:10:44,000
uh quantum circuits and like transform

340
00:10:43,120 --> 00:10:46,240
into like large

341
00:10:44,000 --> 00:10:48,079
zx diagrams and simplify these next

342
00:10:46,240 --> 00:10:49,760
diagrams in an automatic manner

343
00:10:48,079 --> 00:10:51,599
and hopefully do interesting stuff with

344
00:10:49,760 --> 00:10:53,519
it particularly

345
00:10:51,600 --> 00:10:54,720
we originally developed it for a quantum

346
00:10:53,519 --> 00:10:56,160
circuit optimization

347
00:10:54,720 --> 00:10:57,279
but then we found out it also works

348
00:10:56,160 --> 00:10:58,959
really good for quantum circuit

349
00:10:57,279 --> 00:11:00,720
verification so

350
00:10:58,959 --> 00:11:02,479
verifying that two quantum circles

351
00:11:00,720 --> 00:11:02,959
actually implement the same unitary with

352
00:11:02,480 --> 00:11:05,920
the same

353
00:11:02,959 --> 00:11:07,518
uh the same computation and something

354
00:11:05,920 --> 00:11:09,120
we're working on right now is doing

355
00:11:07,519 --> 00:11:11,600
quantum circuit simulation

356
00:11:09,120 --> 00:11:12,959
so um basically simulating what a

357
00:11:11,600 --> 00:11:14,000
quantum computer would do with this

358
00:11:12,959 --> 00:11:17,839
thing

359
00:11:14,000 --> 00:11:20,959
on a classical computer which and

360
00:11:17,839 --> 00:11:22,720
yeah so these three things and i'm going

361
00:11:20,959 --> 00:11:23,680
to give a bit of a demo to see to show

362
00:11:22,720 --> 00:11:26,800
you

363
00:11:23,680 --> 00:11:28,560
how this works in physics

364
00:11:26,800 --> 00:11:32,399
let's see how much time do i have left

365
00:11:28,560 --> 00:11:32,399
oh you have a lot of time cool

366
00:11:32,480 --> 00:11:35,760
all right so this is just a jupiter

367
00:11:34,240 --> 00:11:38,959
notebook which i

368
00:11:35,760 --> 00:11:40,720
guess many of you have seen um i'm just

369
00:11:38,959 --> 00:11:42,880
going to start with a few basic imports

370
00:11:40,720 --> 00:11:45,120
the important import here is import

371
00:11:42,880 --> 00:11:47,120
physics sodx

372
00:11:45,120 --> 00:11:49,200
by the way is this large enough for

373
00:11:47,120 --> 00:11:51,519
everyone like can anybody uh see it in

374
00:11:49,200 --> 00:11:51,519
the back

375
00:11:53,120 --> 00:11:58,079
and now i'm just gonna start with uh

376
00:11:56,560 --> 00:12:00,239
with presenting like just a simple

377
00:11:58,079 --> 00:12:01,680
circuit and this uses the chasm

378
00:12:00,240 --> 00:12:03,360
uh notation which is kind of like an

379
00:12:01,680 --> 00:12:05,040
assembly language for uh

380
00:12:03,360 --> 00:12:06,800
for quantum circuits i'm just going to

381
00:12:05,040 --> 00:12:08,560
say i have two qubits

382
00:12:06,800 --> 00:12:10,160
and i'm going to do a cx which is a

383
00:12:08,560 --> 00:12:10,959
controlled not gate between the first

384
00:12:10,160 --> 00:12:12,800
qubit

385
00:12:10,959 --> 00:12:16,399
and between and the second qubit and

386
00:12:12,800 --> 00:12:16,399
then i'm going to draw the circuit

387
00:12:16,480 --> 00:12:20,079
and so and we get this thing out which

388
00:12:18,560 --> 00:12:21,518
like as i said like the c naught gets

389
00:12:20,079 --> 00:12:22,638
represented by these two connected

390
00:12:21,519 --> 00:12:25,200
spiders

391
00:12:22,639 --> 00:12:26,800
and to show you this is actually a a zx

392
00:12:25,200 --> 00:12:27,920
diagram another circuit i can just move

393
00:12:26,800 --> 00:12:30,560
this stuff around so

394
00:12:27,920 --> 00:12:31,279
it's not like a like an actual rigid

395
00:12:30,560 --> 00:12:34,160
thing it's just

396
00:12:31,279 --> 00:12:35,600
i think you can move around um and we

397
00:12:34,160 --> 00:12:36,240
can also convert it to a matrix you see

398
00:12:35,600 --> 00:12:37,920
it actually

399
00:12:36,240 --> 00:12:39,440
is like the linear map it should be and

400
00:12:37,920 --> 00:12:40,479
like if you know anything about

401
00:12:39,440 --> 00:12:41,920
quantum computing you know with a c

402
00:12:40,480 --> 00:12:42,959
naught gate there should be a one here a

403
00:12:41,920 --> 00:12:44,639
one here and a

404
00:12:42,959 --> 00:12:47,760
one here and one there and there's gp

405
00:12:44,639 --> 00:12:50,839
zeros that's great that works

406
00:12:47,760 --> 00:12:52,639
okay so let's do a bit more complicated

407
00:12:50,839 --> 00:12:54,480
circuit

408
00:12:52,639 --> 00:12:56,320
so this is just a few c not gates in a

409
00:12:54,480 --> 00:12:58,399
different orientation it's a

410
00:12:56,320 --> 00:13:00,160
it's an s gate and it's uh the inverse

411
00:12:58,399 --> 00:13:01,360
of an s gate and then some more rotation

412
00:13:00,160 --> 00:13:03,600
gates

413
00:13:01,360 --> 00:13:04,560
um i can just if i want i can just

414
00:13:03,600 --> 00:13:06,959
represent these

415
00:13:04,560 --> 00:13:08,239
uh these gates as like a as just a list

416
00:13:06,959 --> 00:13:11,119
of sort of

417
00:13:08,240 --> 00:13:13,200
simple representations uh and i can

418
00:13:11,120 --> 00:13:14,560
convert it into an actual select diagram

419
00:13:13,200 --> 00:13:17,440
and i see like this is just like a graph

420
00:13:14,560 --> 00:13:20,239
with 14 vertices and 15 edges

421
00:13:17,440 --> 00:13:20,880
and now we can start to simplify it so

422
00:13:20,240 --> 00:13:22,800
if we

423
00:13:20,880 --> 00:13:24,320
look here at this thing we see that we

424
00:13:22,800 --> 00:13:25,599
have these two green spiders that are

425
00:13:24,320 --> 00:13:27,360
connected to one another

426
00:13:25,600 --> 00:13:28,639
so i know the spider fusion rule tells

427
00:13:27,360 --> 00:13:30,079
me that i can fuse these things together

428
00:13:28,639 --> 00:13:31,680
into a single spider

429
00:13:30,079 --> 00:13:32,959
the same way for the red one it's also

430
00:13:31,680 --> 00:13:34,719
connected to this red one so i can sort

431
00:13:32,959 --> 00:13:36,479
of fuse them together

432
00:13:34,720 --> 00:13:38,399
so we have a function that does that

433
00:13:36,480 --> 00:13:39,760
it's called spider simp

434
00:13:38,399 --> 00:13:41,440
and we can fuse them together and we

435
00:13:39,760 --> 00:13:42,560
need to see that this thing is now a

436
00:13:41,440 --> 00:13:44,959
single node

437
00:13:42,560 --> 00:13:45,920
and it's pieced together like this we

438
00:13:44,959 --> 00:13:47,920
have a bit of more

439
00:13:45,920 --> 00:13:49,760
powerful rewrite strategy we call full

440
00:13:47,920 --> 00:13:51,519
reduce which applies like a

441
00:13:49,760 --> 00:13:52,959
certain heuristic set of viewer rules

442
00:13:51,519 --> 00:13:55,120
we've developed

443
00:13:52,959 --> 00:13:56,880
and actually managed to reduce this

444
00:13:55,120 --> 00:13:57,760
complete diagram and just becomes a swap

445
00:13:56,880 --> 00:13:59,680
gate

446
00:13:57,760 --> 00:14:01,439
which if you're a bit familiar with

447
00:13:59,680 --> 00:14:03,199
quantum circuits you see three c notes

448
00:14:01,440 --> 00:14:04,720
in this configuration which should read

449
00:14:03,199 --> 00:14:06,560
as a swap gate and then like

450
00:14:04,720 --> 00:14:07,839
this by four goes through the swap gate

451
00:14:06,560 --> 00:14:08,880
and cancels with this one

452
00:14:07,839 --> 00:14:10,720
and this one goes through the swap game

453
00:14:08,880 --> 00:14:11,920
against with this one so that's kind of

454
00:14:10,720 --> 00:14:15,199
what our simplification is doing

455
00:14:11,920 --> 00:14:17,360
automatically animation to a swap gate

456
00:14:15,199 --> 00:14:19,120
okay so now let's do a bit more

457
00:14:17,360 --> 00:14:22,800
complicated stuff

458
00:14:19,120 --> 00:14:23,920
um so a thing i haven't explained really

459
00:14:22,800 --> 00:14:26,000
is

460
00:14:23,920 --> 00:14:27,199
what are your metrics for optimization

461
00:14:26,000 --> 00:14:28,880
in a quantum circuit

462
00:14:27,199 --> 00:14:30,560
right so like what are the things that

463
00:14:28,880 --> 00:14:32,000
you want to minimize when you want to

464
00:14:30,560 --> 00:14:32,800
implement a quantum circle on a quantum

465
00:14:32,000 --> 00:14:34,399
computer

466
00:14:32,800 --> 00:14:35,839
and this depends heavily on what

467
00:14:34,399 --> 00:14:37,519
architecture you have for your physical

468
00:14:35,839 --> 00:14:39,360
content computer

469
00:14:37,519 --> 00:14:40,720
for near-term contributors the most

470
00:14:39,360 --> 00:14:44,240
obvious metric

471
00:14:40,720 --> 00:14:45,040
is total gate count and two qubit gate

472
00:14:44,240 --> 00:14:47,040
counts

473
00:14:45,040 --> 00:14:48,319
total gate count is obvious right if you

474
00:14:47,040 --> 00:14:50,639
have less gates it's

475
00:14:48,320 --> 00:14:51,760
better and if and two cubic gates

476
00:14:50,639 --> 00:14:53,760
especially because

477
00:14:51,760 --> 00:14:56,000
usually they introduce more noise to

478
00:14:53,760 --> 00:14:56,800
your computation and they take more time

479
00:14:56,000 --> 00:14:58,639
to perform

480
00:14:56,800 --> 00:14:59,760
and also like the far apart maybe you

481
00:14:58,639 --> 00:15:00,480
have to do some extra work to actually

482
00:14:59,760 --> 00:15:02,000
make it happen

483
00:15:00,480 --> 00:15:04,079
so those are the two metrics you really

484
00:15:02,000 --> 00:15:05,680
care about for like neutral content

485
00:15:04,079 --> 00:15:07,279
computing there's also depth but like

486
00:15:05,680 --> 00:15:09,199
don't worry about that but if you're

487
00:15:07,279 --> 00:15:11,120
thinking about like

488
00:15:09,199 --> 00:15:13,279
far ahead fault tolerance bumper

489
00:15:11,120 --> 00:15:15,360
computation

490
00:15:13,279 --> 00:15:16,800
then the metrics sort of change and some

491
00:15:15,360 --> 00:15:18,560
things become easier to do something

492
00:15:16,800 --> 00:15:20,240
harder to do and a thing that becomes

493
00:15:18,560 --> 00:15:21,760
particularly hard to implement in a

494
00:15:20,240 --> 00:15:24,800
fault tolerant manner is the t

495
00:15:21,760 --> 00:15:26,240
gate this is for technical reasons if

496
00:15:24,800 --> 00:15:28,240
you really want to know come to me after

497
00:15:26,240 --> 00:15:30,079
and i'll explain all about it

498
00:15:28,240 --> 00:15:31,279
but so like an important goal for

499
00:15:30,079 --> 00:15:33,199
quantum circuit optimization

500
00:15:31,279 --> 00:15:35,360
for the fault tolerant quantum computers

501
00:15:33,199 --> 00:15:37,758
is minimizing the number of t-counts

502
00:15:35,360 --> 00:15:40,959
of the number of t-gates so you have

503
00:15:37,759 --> 00:15:43,199
this special method that does this

504
00:15:40,959 --> 00:15:44,880
it's going to show one example so we

505
00:15:43,199 --> 00:15:46,639
have this slightly bigger circuit

506
00:15:44,880 --> 00:15:48,800
it's an actual benchmark circuit we've

507
00:15:46,639 --> 00:15:51,440
been using it's

508
00:15:48,800 --> 00:15:52,880
i think it implements a classical

509
00:15:51,440 --> 00:15:56,160
reversible function that

510
00:15:52,880 --> 00:15:59,279
calculates whether

511
00:15:56,160 --> 00:16:02,959
the first four bits

512
00:15:59,279 --> 00:16:04,560
modulo four are zero or something

513
00:16:02,959 --> 00:16:07,279
and then stores the enter in the fifth

514
00:16:04,560 --> 00:16:09,119
qubit but anyway

515
00:16:07,279 --> 00:16:10,880
so this qubit is this circle is a bit

516
00:16:09,120 --> 00:16:14,160
longer

517
00:16:10,880 --> 00:16:16,320
and we see it has it has 28 t gates

518
00:16:14,160 --> 00:16:18,800
so that's like the metric you want to

519
00:16:16,320 --> 00:16:21,680
improve with this method

520
00:16:18,800 --> 00:16:24,399
so i apply this optimizer and i draw the

521
00:16:21,680 --> 00:16:24,399
resulting circuit

522
00:16:24,639 --> 00:16:28,639
and i get something that's indeed

523
00:16:26,800 --> 00:16:30,479
shorter so that looks good

524
00:16:28,639 --> 00:16:32,560
and if i look at the stats it's indeed t

525
00:16:30,480 --> 00:16:34,160
conjugates to eight so we went from 2080

526
00:16:32,560 --> 00:16:35,359
gates to 80 degrees

527
00:16:34,160 --> 00:16:37,519
and this is actually the best known

528
00:16:35,360 --> 00:16:39,360
t-gate for this circuit right now like

529
00:16:37,519 --> 00:16:40,639
before we did this work it was 16 and we

530
00:16:39,360 --> 00:16:41,839
reduced it to eight and like now there's

531
00:16:40,639 --> 00:16:42,560
other people that also get this number

532
00:16:41,839 --> 00:16:46,079
of it

533
00:16:42,560 --> 00:16:47,119
and so um so to get a bit of an idea

534
00:16:46,079 --> 00:16:48,560
because this is right now a bit of a

535
00:16:47,120 --> 00:16:50,320
black box where like i just put in a

536
00:16:48,560 --> 00:16:53,040
circle and get something out like what

537
00:16:50,320 --> 00:16:56,240
is this doing behind the scenes

538
00:16:53,040 --> 00:16:56,240
let me just um

539
00:16:57,440 --> 00:17:02,000
re-run this simplification and i see

540
00:17:00,480 --> 00:17:04,559
like it does in the background it does

541
00:17:02,000 --> 00:17:06,480
like a lot of stuff it fuses on spiders

542
00:17:04,559 --> 00:17:08,079
moves some identities it does this thing

543
00:17:06,480 --> 00:17:08,400
which i haven't talked about at all but

544
00:17:08,079 --> 00:17:10,879
like

545
00:17:08,400 --> 00:17:12,640
it's a bit complicated and in the end

546
00:17:10,880 --> 00:17:14,319
the result that you get is like

547
00:17:12,640 --> 00:17:16,000
something and this exercise looks like

548
00:17:14,319 --> 00:17:16,959
this

549
00:17:16,000 --> 00:17:18,400
and there should be two things you

550
00:17:16,959 --> 00:17:19,919
should notice about this first it does

551
00:17:18,400 --> 00:17:21,120
not do that it does not look like a

552
00:17:19,919 --> 00:17:22,799
circuit at all

553
00:17:21,119 --> 00:17:24,799
right it looks like some weird jumble of

554
00:17:22,799 --> 00:17:26,480
wires and second there's these blue

555
00:17:24,799 --> 00:17:28,879
wires so that's kind of like a

556
00:17:26,480 --> 00:17:29,919
shortcut for a wire with a hodomer gate

557
00:17:28,880 --> 00:17:31,280
on it because otherwise there would be

558
00:17:29,919 --> 00:17:33,039
hot on my gates floating everywhere and

559
00:17:31,280 --> 00:17:36,480
that looks terrible so you just use a

560
00:17:33,039 --> 00:17:37,919
blue wire so we just think there's

561
00:17:36,480 --> 00:17:38,640
basically two problems you have to solve

562
00:17:37,919 --> 00:17:40,160
which is

563
00:17:38,640 --> 00:17:42,160
how do you get from this arbitrary

564
00:17:40,160 --> 00:17:44,160
diagram back into a circle diagram and

565
00:17:42,160 --> 00:17:46,240
we found a few ways to do it which are a

566
00:17:44,160 --> 00:17:47,200
bit much to go into now but if you want

567
00:17:46,240 --> 00:17:50,480
to know more just

568
00:17:47,200 --> 00:17:51,600
ask me later yeah so this is kind of

569
00:17:50,480 --> 00:17:53,520
what's happening in the background and

570
00:17:51,600 --> 00:17:57,120
we use this information to

571
00:17:53,520 --> 00:17:57,120
get an optimized circuit back out

572
00:17:58,080 --> 00:18:01,360
so that's circuit optimization what i

573
00:18:00,000 --> 00:18:02,960
want to talk about

574
00:18:01,360 --> 00:18:04,559
now let's get to circuit's equality

575
00:18:02,960 --> 00:18:06,559
verification so i've

576
00:18:04,559 --> 00:18:08,320
i've i've shown you that like i get this

577
00:18:06,559 --> 00:18:09,200
starting circuit and i've output a new

578
00:18:08,320 --> 00:18:10,879
circuit

579
00:18:09,200 --> 00:18:13,039
but like how do you know that they

580
00:18:10,880 --> 00:18:15,120
represent the same the same computation

581
00:18:13,039 --> 00:18:17,919
right so i can i could do it

582
00:18:15,120 --> 00:18:19,280
like the easy way which is i can just

583
00:18:17,919 --> 00:18:21,039
calculate the matrix

584
00:18:19,280 --> 00:18:22,399
that each each of these computations and

585
00:18:21,039 --> 00:18:23,039
i just compare the matrices and see if

586
00:18:22,400 --> 00:18:24,480
they're equal

587
00:18:23,039 --> 00:18:26,240
and if they're equal then i know i've

588
00:18:24,480 --> 00:18:27,919
done the same computation but of course

589
00:18:26,240 --> 00:18:28,960
the entire reason we care about content

590
00:18:27,919 --> 00:18:31,360
computation is that

591
00:18:28,960 --> 00:18:33,520
these matrices aren't easy aren't easy

592
00:18:31,360 --> 00:18:36,639
to compute they take exponential memory

593
00:18:33,520 --> 00:18:39,440
in a number of qubits so like this

594
00:18:36,640 --> 00:18:39,760
runs into problems quite quickly so what

595
00:18:39,440 --> 00:18:42,160
we

596
00:18:39,760 --> 00:18:43,360
developed instead and only for this case

597
00:18:42,160 --> 00:18:44,400
is five qubits you can just do it

598
00:18:43,360 --> 00:18:46,879
manually but

599
00:18:44,400 --> 00:18:47,520
what we've developed is a method which

600
00:18:46,880 --> 00:18:50,160
is

601
00:18:47,520 --> 00:18:51,760
uh i take in two circuits which of which

602
00:18:50,160 --> 00:18:53,440
i want to know if they're equal

603
00:18:51,760 --> 00:18:55,120
and i take the first circuit and i take

604
00:18:53,440 --> 00:18:56,720
the inverse of the second circuit and

605
00:18:55,120 --> 00:18:58,479
then i compose them

606
00:18:56,720 --> 00:19:00,799
and if the circuits are equal they

607
00:18:58,480 --> 00:19:02,559
should be implementing the identity

608
00:19:00,799 --> 00:19:04,240
operation right because like if they're

609
00:19:02,559 --> 00:19:06,080
equal i do the thing and do the inverse

610
00:19:04,240 --> 00:19:07,520
of the thing nothing happens

611
00:19:06,080 --> 00:19:09,199
so what we've done we we do this and

612
00:19:07,520 --> 00:19:10,400
then we use our simple simplification

613
00:19:09,200 --> 00:19:11,840
strategy from zx

614
00:19:10,400 --> 00:19:14,480
and see if it completely reduces to the

615
00:19:11,840 --> 00:19:17,678
identity and if it does then we have

616
00:19:14,480 --> 00:19:18,960
then then we have a a a a certificate of

617
00:19:17,679 --> 00:19:22,160
a quality that

618
00:19:18,960 --> 00:19:23,760
indeed these things are equal so

619
00:19:22,160 --> 00:19:25,200
for this circuit i can just run it and

620
00:19:23,760 --> 00:19:26,080
in these sets true these things are

621
00:19:25,200 --> 00:19:27,679
equal

622
00:19:26,080 --> 00:19:28,879
which like let me show you a bit more

623
00:19:27,679 --> 00:19:30,240
detail what actually happens in this

624
00:19:28,880 --> 00:19:32,559
function so

625
00:19:30,240 --> 00:19:34,559
first i i copy like the original from

626
00:19:32,559 --> 00:19:38,080
the original circuit

627
00:19:34,559 --> 00:19:41,440
then i add to that the inverse of the

628
00:19:38,080 --> 00:19:44,960
of the other circuit so now c2

629
00:19:41,440 --> 00:19:46,480
should contain an identity circuit

630
00:19:44,960 --> 00:19:49,039
then i make it make it into the next

631
00:19:46,480 --> 00:19:51,200
diagram i reduce it fully

632
00:19:49,039 --> 00:19:53,440
with our simplification strategy and

633
00:19:51,200 --> 00:19:56,080
then just draw it and we indeed see

634
00:19:53,440 --> 00:19:58,000
sorry we indeed see that it's completely

635
00:19:56,080 --> 00:19:59,678
to the identity so nothing happens

636
00:19:58,000 --> 00:20:01,200
all right and to show you that i'm

637
00:19:59,679 --> 00:20:02,000
actually not cheating let me change a

638
00:20:01,200 --> 00:20:05,120
single gate

639
00:20:02,000 --> 00:20:07,120
in the the first the optimized circuit

640
00:20:05,120 --> 00:20:09,039
so now it should contain an error

641
00:20:07,120 --> 00:20:10,399
and if you verify quality and it says

642
00:20:09,039 --> 00:20:13,280
false they're not equal

643
00:20:10,400 --> 00:20:15,120
and if we do it manually we see that

644
00:20:13,280 --> 00:20:17,760
like we have some left over gate so it's

645
00:20:15,120 --> 00:20:21,760
indeed not identity

646
00:20:17,760 --> 00:20:22,320
all right so that's verification for a

647
00:20:21,760 --> 00:20:23,679
bit

648
00:20:22,320 --> 00:20:25,678
and now the last thing i want to talk

649
00:20:23,679 --> 00:20:27,919
about and let's see how much time do i

650
00:20:25,679 --> 00:20:27,919
have

651
00:20:30,960 --> 00:20:36,880
that's a lot all right um

652
00:20:35,120 --> 00:20:38,239
it's the last thing i want to talk about

653
00:20:36,880 --> 00:20:41,679
is simulation

654
00:20:38,240 --> 00:20:44,320
all right so let me just get another

655
00:20:41,679 --> 00:20:45,840
circuit here that's even a bit bigger

656
00:20:44,320 --> 00:20:47,360
and there's a t count of

657
00:20:45,840 --> 00:20:49,199
a one two five so it's a bit more

658
00:20:47,360 --> 00:20:52,080
complicated circuit it's

659
00:20:49,200 --> 00:20:52,880
nine qubits here so if i have a circle

660
00:20:52,080 --> 00:20:54,879
like this

661
00:20:52,880 --> 00:20:56,000
so what i would usually do in a quantum

662
00:20:54,880 --> 00:20:58,559
computer right

663
00:20:56,000 --> 00:21:00,400
is i would have some simple starting

664
00:20:58,559 --> 00:21:02,879
states like usually just always like

665
00:21:00,400 --> 00:21:04,640
all zero state and then i would apply my

666
00:21:02,880 --> 00:21:07,200
chosen quantum circuit to it

667
00:21:04,640 --> 00:21:08,880
and now my quantum system is in some

668
00:21:07,200 --> 00:21:10,240
states that i want to know something

669
00:21:08,880 --> 00:21:11,760
about because i've done this computation

670
00:21:10,240 --> 00:21:14,400
i want to learn something about it

671
00:21:11,760 --> 00:21:15,120
so possibly i will measure a few of the

672
00:21:14,400 --> 00:21:16,720
qubits

673
00:21:15,120 --> 00:21:18,320
i will get some outcomes some zeros and

674
00:21:16,720 --> 00:21:20,400
ones and maybe i need to do the

675
00:21:18,320 --> 00:21:22,000
computation like a few thousand times to

676
00:21:20,400 --> 00:21:23,440
get enough statistics to actually derive

677
00:21:22,000 --> 00:21:25,760
something meaningful from it

678
00:21:23,440 --> 00:21:27,520
like the google experiments that showed

679
00:21:25,760 --> 00:21:29,120
quantum supremacy a while back

680
00:21:27,520 --> 00:21:30,960
like they did the same experiment like

681
00:21:29,120 --> 00:21:33,039
40 000 times or whatever so like you

682
00:21:30,960 --> 00:21:34,480
need to do it a lot of times

683
00:21:33,039 --> 00:21:36,080
and then and then in the end you get

684
00:21:34,480 --> 00:21:38,080
some you get some basically some

685
00:21:36,080 --> 00:21:38,559
probabilities out of some samples and

686
00:21:38,080 --> 00:21:39,678
then

687
00:21:38,559 --> 00:21:41,678
hopefully you can use them to do

688
00:21:39,679 --> 00:21:43,840
something useful right

689
00:21:41,679 --> 00:21:45,520
so what you want to do in classical

690
00:21:43,840 --> 00:21:47,199
simulation is you want to do

691
00:21:45,520 --> 00:21:48,879
this problem this one i just described

692
00:21:47,200 --> 00:21:50,159
then on a classical computer

693
00:21:48,880 --> 00:21:51,840
which of course is going to be hard

694
00:21:50,159 --> 00:21:54,240
because if it was easy we wouldn't care

695
00:21:51,840 --> 00:21:55,760
about quantum computers

696
00:21:54,240 --> 00:21:57,679
so there's like a lot of research being

697
00:21:55,760 --> 00:21:59,919
done in trying to

698
00:21:57,679 --> 00:22:02,320
do this in smart ways and you you

699
00:21:59,919 --> 00:22:04,559
already see this like um

700
00:22:02,320 --> 00:22:06,399
if you heard anything about the the the

701
00:22:04,559 --> 00:22:08,000
google announcement of quantum supremacy

702
00:22:06,400 --> 00:22:08,720
where they claimed to have a computation

703
00:22:08,000 --> 00:22:11,360
that

704
00:22:08,720 --> 00:22:12,480
um that did something that the classical

705
00:22:11,360 --> 00:22:13,678
computer could never do

706
00:22:12,480 --> 00:22:15,520
and they said like a classical period

707
00:22:13,679 --> 00:22:17,200
would take 40 000 years or like

708
00:22:15,520 --> 00:22:18,720
a long amount of time to do it and then

709
00:22:17,200 --> 00:22:20,080
ibm a day later said well actually it

710
00:22:18,720 --> 00:22:20,640
would only take two days if you do them

711
00:22:20,080 --> 00:22:22,000
this way

712
00:22:20,640 --> 00:22:23,679
it's like there's a lot of like

713
00:22:22,000 --> 00:22:26,960
depending on how you do it like

714
00:22:23,679 --> 00:22:28,559
the numbers differ immensely and also

715
00:22:26,960 --> 00:22:30,799
we've gotten a lot better at classically

716
00:22:28,559 --> 00:22:33,840
simulating quantum systems

717
00:22:30,799 --> 00:22:36,000
um so

718
00:22:33,840 --> 00:22:36,959
uh and there's those there's two there's

719
00:22:36,000 --> 00:22:38,559
basically two

720
00:22:36,960 --> 00:22:40,240
methods right now that people use to do

721
00:22:38,559 --> 00:22:41,280
simulation quantum circuits

722
00:22:40,240 --> 00:22:43,520
and the first is relatively

723
00:22:41,280 --> 00:22:44,399
straightforward is i just i prepare my

724
00:22:43,520 --> 00:22:46,158
initial

725
00:22:44,400 --> 00:22:48,159
quantum state and i represent it as some

726
00:22:46,159 --> 00:22:50,240
huge vector like some huge

727
00:22:48,159 --> 00:22:52,159
matrix of elements in my in my classical

728
00:22:50,240 --> 00:22:53,600
computer and then each gate i'll apply

729
00:22:52,159 --> 00:22:54,880
it i just modify this vector a little

730
00:22:53,600 --> 00:22:55,918
bit and i keep track of the entire

731
00:22:54,880 --> 00:22:58,480
directory the whole time

732
00:22:55,919 --> 00:22:59,200
and in the end i just do something with

733
00:22:58,480 --> 00:23:00,720
this vector

734
00:22:59,200 --> 00:23:02,320
and this takes exponential amount of

735
00:23:00,720 --> 00:23:04,960
memory in a number of qubits

736
00:23:02,320 --> 00:23:06,720
which uh yeah makes sense and there's

737
00:23:04,960 --> 00:23:08,000
some smart things you can do to exploit

738
00:23:06,720 --> 00:23:10,159
sort of symmetries in the circuit or

739
00:23:08,000 --> 00:23:12,000
sparsity whatever to make this faster

740
00:23:10,159 --> 00:23:15,919
but like this has sort of a

741
00:23:12,000 --> 00:23:18,400
hard limit around 70 80 90 cubits maybe

742
00:23:15,919 --> 00:23:20,880
in the future if we get better at this

743
00:23:18,400 --> 00:23:22,559
so that's like the first method the

744
00:23:20,880 --> 00:23:24,480
second method uses something called

745
00:23:22,559 --> 00:23:25,918
stabilizer decompositions

746
00:23:24,480 --> 00:23:27,280
and i don't want to go into the details

747
00:23:25,919 --> 00:23:28,480
there because that's really complicated

748
00:23:27,280 --> 00:23:30,399
but

749
00:23:28,480 --> 00:23:33,360
um the interesting thing about that is

750
00:23:30,400 --> 00:23:34,720
it doesn't scale with a number of qubits

751
00:23:33,360 --> 00:23:36,080
so you could have a circle over

752
00:23:34,720 --> 00:23:38,320
thousands of cubes and you could still

753
00:23:36,080 --> 00:23:40,399
simulate and stabilize decompositions

754
00:23:38,320 --> 00:23:42,158
stabilize the decompositions scale with

755
00:23:40,400 --> 00:23:44,240
a number of t gates used

756
00:23:42,159 --> 00:23:46,400
so if i have a circuit with a few t

757
00:23:44,240 --> 00:23:46,960
gates even though it's many qubits i can

758
00:23:46,400 --> 00:23:48,960
still

759
00:23:46,960 --> 00:23:50,000
easily simulate it using the stabilizer

760
00:23:48,960 --> 00:23:51,679
decompositions

761
00:23:50,000 --> 00:23:53,600
and that's the method we've implemented

762
00:23:51,679 --> 00:23:56,799
in physics

763
00:23:53,600 --> 00:23:58,158
so let me just do a bit of

764
00:23:56,799 --> 00:23:59,840
simplification with the circuit and i'll

765
00:23:58,159 --> 00:24:01,360
explain a bit more about this

766
00:23:59,840 --> 00:24:03,039
so first like we have the circuits we

767
00:24:01,360 --> 00:24:04,000
can just simplify the physics and we get

768
00:24:03,039 --> 00:24:05,679
this complicated

769
00:24:04,000 --> 00:24:07,840
looking zx diagram with like lots of

770
00:24:05,679 --> 00:24:09,440
connections here

771
00:24:07,840 --> 00:24:11,120
and now what i want to do is i want to

772
00:24:09,440 --> 00:24:12,559
like i want to know some property about

773
00:24:11,120 --> 00:24:13,439
the circuit so the property i want to

774
00:24:12,559 --> 00:24:15,840
know

775
00:24:13,440 --> 00:24:16,960
is i want to input some states this

776
00:24:15,840 --> 00:24:19,120
tells me just like

777
00:24:16,960 --> 00:24:20,880
apply this state like put the state in

778
00:24:19,120 --> 00:24:22,799
the beginning of the circuit

779
00:24:20,880 --> 00:24:24,559
and this says apply effect so effect

780
00:24:22,799 --> 00:24:26,080
basically tells me i want to know the

781
00:24:24,559 --> 00:24:28,240
probability that

782
00:24:26,080 --> 00:24:29,360
this particular outcome happens so i

783
00:24:28,240 --> 00:24:31,440
just i

784
00:24:29,360 --> 00:24:32,399
basically ask us now like if i were to

785
00:24:31,440 --> 00:24:34,159
run this circuit

786
00:24:32,400 --> 00:24:35,840
on this input state what's the

787
00:24:34,159 --> 00:24:38,960
probability i get this output

788
00:24:35,840 --> 00:24:40,000
right and i just reduce it and the

789
00:24:38,960 --> 00:24:42,480
output i get

790
00:24:40,000 --> 00:24:44,400
is this zx diagram and now we see this

791
00:24:42,480 --> 00:24:46,080
next diagram has no inputs there's no

792
00:24:44,400 --> 00:24:48,400
incoming wires on the left

793
00:24:46,080 --> 00:24:49,600
and if i scroll a bit to the right we

794
00:24:48,400 --> 00:24:51,840
also see that it has

795
00:24:49,600 --> 00:24:52,799
no output wires to the right so this has

796
00:24:51,840 --> 00:24:54,240
no outputs which

797
00:24:52,799 --> 00:24:56,080
makes sense because i expect a number

798
00:24:54,240 --> 00:24:57,200
right i expect a probability to come out

799
00:24:56,080 --> 00:24:59,039
of this

800
00:24:57,200 --> 00:25:01,200
so we have this complicated diagram and

801
00:24:59,039 --> 00:25:04,720
now this thing represents

802
00:25:01,200 --> 00:25:06,240
like the number i want to know and

803
00:25:04,720 --> 00:25:07,679
so what i could do is i could just for

804
00:25:06,240 --> 00:25:09,360
each of these spiders i can represent

805
00:25:07,679 --> 00:25:10,960
this matrix and i can contract all these

806
00:25:09,360 --> 00:25:11,600
matrix like with like tensor network

807
00:25:10,960 --> 00:25:12,880
methods

808
00:25:11,600 --> 00:25:16,158
and i could do that and for a small

809
00:25:12,880 --> 00:25:16,159
circle like this that would work

810
00:25:16,880 --> 00:25:21,440
but the other way i could do is like

811
00:25:18,320 --> 00:25:24,559
each of these individual spiders

812
00:25:21,440 --> 00:25:26,320
i can cut the spider open basically into

813
00:25:24,559 --> 00:25:28,720
two bits

814
00:25:26,320 --> 00:25:30,000
and then this would give me two separate

815
00:25:28,720 --> 00:25:31,520
diagrams

816
00:25:30,000 --> 00:25:33,279
and in each of these diagrams i can

817
00:25:31,520 --> 00:25:35,120
calculate the value and then if i sum

818
00:25:33,279 --> 00:25:36,000
those together i still get the original

819
00:25:35,120 --> 00:25:37,600
outcome

820
00:25:36,000 --> 00:25:39,600
so i can do this with this spider i get

821
00:25:37,600 --> 00:25:41,840
i get two diagrams but if i also split

822
00:25:39,600 --> 00:25:43,678
this one then i get two diagons for each

823
00:25:41,840 --> 00:25:45,199
of those two so f4 diagrams

824
00:25:43,679 --> 00:25:47,279
and i can do it for this one and then i

825
00:25:45,200 --> 00:25:48,640
get two again for those so i get eight

826
00:25:47,279 --> 00:25:50,799
so we see these skills

827
00:25:48,640 --> 00:25:52,080
exponentially with the number of spiders

828
00:25:50,799 --> 00:25:53,279
that are left here

829
00:25:52,080 --> 00:25:55,760
and in particular it scales

830
00:25:53,279 --> 00:25:56,159
exponentially with the spiders that have

831
00:25:55,760 --> 00:25:57,919
an

832
00:25:56,159 --> 00:25:59,760
old multiple of five or four because

833
00:25:57,919 --> 00:26:01,360
those basically correspond to your t

834
00:25:59,760 --> 00:26:03,840
gates which are like the hard part when

835
00:26:01,360 --> 00:26:07,678
doing this method

836
00:26:03,840 --> 00:26:10,799
so um well it turns out that

837
00:26:07,679 --> 00:26:11,279
actually the best way to do it is not to

838
00:26:10,799 --> 00:26:13,440
split

839
00:26:11,279 --> 00:26:14,720
open each individual spider because that

840
00:26:13,440 --> 00:26:17,360
takes two

841
00:26:14,720 --> 00:26:18,640
you get two copies per spider it turns

842
00:26:17,360 --> 00:26:20,158
out for complicated reasons that the

843
00:26:18,640 --> 00:26:21,120
best way to do it is you take six

844
00:26:20,159 --> 00:26:24,000
spiders

845
00:26:21,120 --> 00:26:25,520
and you decompose them with seven terms

846
00:26:24,000 --> 00:26:28,960
like these are just numbers that have

847
00:26:25,520 --> 00:26:28,960
to come out of this research

848
00:26:30,400 --> 00:26:34,799
and um and then so you still get uh like

849
00:26:33,600 --> 00:26:36,559
exponential

850
00:26:34,799 --> 00:26:38,559
uh scaling because like if i have six of

851
00:26:36,559 --> 00:26:41,600
these spiders that i want to split open

852
00:26:38,559 --> 00:26:42,720
i get i got seven terms if i have 12 i

853
00:26:41,600 --> 00:26:44,959
get seven times seven

854
00:26:42,720 --> 00:26:45,840
is 49 if i have 18 i get seven times

855
00:26:44,960 --> 00:26:48,000
seven times seven

856
00:26:45,840 --> 00:26:49,760
so skills exponentially and you can

857
00:26:48,000 --> 00:26:50,720
easily calculate that like the amount of

858
00:26:49,760 --> 00:26:53,200
terms you would need

859
00:26:50,720 --> 00:26:54,880
to simulate this or like to calculate

860
00:26:53,200 --> 00:26:58,320
this value using this method

861
00:26:54,880 --> 00:27:00,880
which require 67 000 diagrams 67 000

862
00:26:58,320 --> 00:27:02,639
certifications

863
00:27:00,880 --> 00:27:04,080
but the interesting thing we can do now

864
00:27:02,640 --> 00:27:07,440
using zx diagrams

865
00:27:04,080 --> 00:27:09,600
is whenever i cut open these spiders

866
00:27:07,440 --> 00:27:11,279
then the resulting diagram i get is

867
00:27:09,600 --> 00:27:13,520
simpler and is smaller

868
00:27:11,279 --> 00:27:14,320
so then i can rerun my simplification

869
00:27:13,520 --> 00:27:16,960
strategy

870
00:27:14,320 --> 00:27:18,480
on this this new diagram and hopefully

871
00:27:16,960 --> 00:27:20,159
this cancels out some of this

872
00:27:18,480 --> 00:27:22,000
some of the additional structure so

873
00:27:20,159 --> 00:27:24,000
instead of replacing

874
00:27:22,000 --> 00:27:25,679
six spiders with seven diagrams and each

875
00:27:24,000 --> 00:27:27,840
of these seven diagrams i can

876
00:27:25,679 --> 00:27:29,279
hopefully find some further reductions

877
00:27:27,840 --> 00:27:31,360
that will make my diagram smaller and

878
00:27:29,279 --> 00:27:32,840
require the next step to be like less

879
00:27:31,360 --> 00:27:35,520
painful

880
00:27:32,840 --> 00:27:37,199
basically so we implemented that and if

881
00:27:35,520 --> 00:27:38,320
you do it on this circuit and it takes a

882
00:27:37,200 --> 00:27:40,000
while to compute

883
00:27:38,320 --> 00:27:41,520
because uh we haven't really thought

884
00:27:40,000 --> 00:27:43,600
about optimizing this yet

885
00:27:41,520 --> 00:27:45,360
but it's now computing like it's

886
00:27:43,600 --> 00:27:46,959
basically doing this thing where like it

887
00:27:45,360 --> 00:27:48,240
replaces six spiders by seven terms in

888
00:27:46,960 --> 00:27:50,000
each of these terms it's going to

889
00:27:48,240 --> 00:27:50,720
simplify and then basis again six by

890
00:27:50,000 --> 00:27:54,240
seven

891
00:27:50,720 --> 00:28:03,840
etc and then in the end

892
00:27:54,240 --> 00:28:03,840
we should see that

893
00:28:04,559 --> 00:28:07,760
some battery saving mode

894
00:28:14,480 --> 00:28:18,480
yeah it's also the way it chooses these

895
00:28:16,640 --> 00:28:20,080
spiders is random so like on different

896
00:28:18,480 --> 00:28:21,279
runs it takes different amount of terms

897
00:28:20,080 --> 00:28:25,199
but

898
00:28:21,279 --> 00:28:28,159
so it took 8 865 terms

899
00:28:25,200 --> 00:28:30,000
so naively i would use 67 000 terms to

900
00:28:28,159 --> 00:28:34,720
do this and with our method you use

901
00:28:30,000 --> 00:28:36,880
like 9000 chances like uh like

902
00:28:34,720 --> 00:28:37,760
nine times less and like in this skills

903
00:28:36,880 --> 00:28:39,120
up right because like this is

904
00:28:37,760 --> 00:28:40,799
exponential behavior so if you want to

905
00:28:39,120 --> 00:28:41,600
simulate bigger diagrams this helps more

906
00:28:40,799 --> 00:28:42,960
and more

907
00:28:41,600 --> 00:28:44,799
it's like now it's actually slower than

908
00:28:42,960 --> 00:28:45,919
doing it directly but yeah like if you

909
00:28:44,799 --> 00:28:46,960
have bigger dragons to hopefully be

910
00:28:45,919 --> 00:28:48,320
better

911
00:28:46,960 --> 00:28:50,080
so this is something we're working on

912
00:28:48,320 --> 00:28:51,439
now to see if this actually is better

913
00:28:50,080 --> 00:28:53,760
than the what's the state of the art

914
00:28:51,440 --> 00:28:55,520
people are using with this method

915
00:28:53,760 --> 00:28:57,360
yeah and this is sure it actually gives

916
00:28:55,520 --> 00:28:59,120
a correct answer so

917
00:28:57,360 --> 00:29:00,879
this way we're decomposing everything we

918
00:28:59,120 --> 00:29:02,479
got the answer that the number we're

919
00:29:00,880 --> 00:29:04,480
calculating was this number

920
00:29:02,480 --> 00:29:06,399
and if we calculate directly but just

921
00:29:04,480 --> 00:29:07,679
doing a simple method we also get the

922
00:29:06,399 --> 00:29:10,840
same answer so

923
00:29:07,679 --> 00:29:12,559
like it is indeed correct so that's nice

924
00:29:10,840 --> 00:29:15,600
um

925
00:29:12,559 --> 00:29:16,399
and yeah that's basically what i wanted

926
00:29:15,600 --> 00:29:19,199
to tell you

927
00:29:16,399 --> 00:29:21,199
um i realize if you've never seen this

928
00:29:19,200 --> 00:29:23,520
stuff before it might be a lot

929
00:29:21,200 --> 00:29:24,880
um if you want to know more like go to

930
00:29:23,520 --> 00:29:26,440
our github we have some links to learn

931
00:29:24,880 --> 00:29:28,159
more about it there's also a website

932
00:29:26,440 --> 00:29:30,000
sedexcalculus.com where there's some

933
00:29:28,159 --> 00:29:32,960
resources in order to

934
00:29:30,000 --> 00:29:34,559
like learn a bit more about zx if you

935
00:29:32,960 --> 00:29:36,240
really think like oh this is awesome and

936
00:29:34,559 --> 00:29:37,918
i want to learn all about it but i know

937
00:29:36,240 --> 00:29:39,440
nothing about quantum computing or

938
00:29:37,919 --> 00:29:41,279
quantum theory or whatever

939
00:29:39,440 --> 00:29:43,279
i can highly recommend this book which

940
00:29:41,279 --> 00:29:45,520
will appear like two years ago

941
00:29:43,279 --> 00:29:46,559
it's built up the entire foundation of

942
00:29:45,520 --> 00:29:48,399
quantum theory

943
00:29:46,559 --> 00:29:49,840
using the language of these diagrams in

944
00:29:48,399 --> 00:29:51,439
the next calculus so it's sort of like a

945
00:29:49,840 --> 00:29:53,699
graphical approach to

946
00:29:51,440 --> 00:29:55,200
like quantum computing basically

947
00:29:53,700 --> 00:29:57,279
[Music]

948
00:29:55,200 --> 00:30:09,120
and with that advertisement i thank you

949
00:29:57,279 --> 00:30:11,200
for your attention

950
00:30:09,120 --> 00:30:12,799
so we have time for one or two questions

951
00:30:11,200 --> 00:30:14,000
if anybody has

952
00:30:12,799 --> 00:30:23,840
something on their mind they would like

953
00:30:14,000 --> 00:30:23,840
to ask the speaker

954
00:30:27,760 --> 00:30:31,279
uh thanks for a great talk very

955
00:30:29,360 --> 00:30:32,559
interesting um i was curious about the

956
00:30:31,279 --> 00:30:34,880
optimization

957
00:30:32,559 --> 00:30:36,799
um maybe you said it but maybe i missed

958
00:30:34,880 --> 00:30:38,320
it so can i choose what i want to

959
00:30:36,799 --> 00:30:40,240
optimize using this

960
00:30:38,320 --> 00:30:41,918
so you can choose what what i want to

961
00:30:40,240 --> 00:30:45,200
optimize like if i want to optimize

962
00:30:41,919 --> 00:30:46,080
t count or total gate count or that's an

963
00:30:45,200 --> 00:30:49,679
interesting question

964
00:30:46,080 --> 00:30:53,600
um so for a long time

965
00:30:49,679 --> 00:30:55,200
we found that so that there's two ways

966
00:30:53,600 --> 00:30:56,639
we can use our optimization there's

967
00:30:55,200 --> 00:30:58,480
the thing i use here which is called

968
00:30:56,640 --> 00:31:01,039
teleport reduce and it's basically

969
00:30:58,480 --> 00:31:02,240
only doing taken to ticket optimization

970
00:31:01,039 --> 00:31:03,120
and then the second thing you can do

971
00:31:02,240 --> 00:31:05,919
which we call

972
00:31:03,120 --> 00:31:06,559
a re-extraction so like i get this very

973
00:31:05,919 --> 00:31:08,720
compact

974
00:31:06,559 --> 00:31:09,760
x diagram and then i need to make it

975
00:31:08,720 --> 00:31:11,600
back into a circuit

976
00:31:09,760 --> 00:31:12,879
and there's a ways to do it which quite

977
00:31:11,600 --> 00:31:13,840
are is quite involved but you can

978
00:31:12,880 --> 00:31:15,600
actually do it

979
00:31:13,840 --> 00:31:16,879
and this results in a new circuit which

980
00:31:15,600 --> 00:31:18,639
usually looks completely different than

981
00:31:16,880 --> 00:31:19,760
the original one and what we found is

982
00:31:18,640 --> 00:31:21,519
that unfortunately

983
00:31:19,760 --> 00:31:22,799
this usually has more c not gates than

984
00:31:21,519 --> 00:31:24,799
what you started out with

985
00:31:22,799 --> 00:31:26,559
although like we've recently done some

986
00:31:24,799 --> 00:31:28,240
some uh improvements to the algorithm

987
00:31:26,559 --> 00:31:29,600
and now it works a lot better although

988
00:31:28,240 --> 00:31:30,799
on some stick it's still worse on the

989
00:31:29,600 --> 00:31:32,158
other circuits we actually get way

990
00:31:30,799 --> 00:31:34,720
better results than other people

991
00:31:32,159 --> 00:31:36,000
so it's kind of dependent on the type of

992
00:31:34,720 --> 00:31:37,440
circuit you're optimizing whether it

993
00:31:36,000 --> 00:31:39,919
helps

994
00:31:37,440 --> 00:31:41,519
there's currently no easy way to see

995
00:31:39,919 --> 00:31:44,080
when you should do this and

996
00:31:41,519 --> 00:31:44,640
like to apply this so the answer to the

997
00:31:44,080 --> 00:31:48,320
question is

998
00:31:44,640 --> 00:31:48,320
not really thanks

999
00:31:49,519 --> 00:31:52,320
any other questions

1000
00:31:57,679 --> 00:32:00,720
i have a question actually on the

1001
00:31:59,600 --> 00:32:03,760
practical

1002
00:32:00,720 --> 00:32:07,840
way of using your algorithm

1003
00:32:03,760 --> 00:32:10,559
so have been did you use that

1004
00:32:07,840 --> 00:32:11,600
for a true implementation like with

1005
00:32:10,559 --> 00:32:14,399
optics

1006
00:32:11,600 --> 00:32:15,120
having a circuit complicated and

1007
00:32:14,399 --> 00:32:19,199
creating

1008
00:32:15,120 --> 00:32:22,080
uh an optimized one

1009
00:32:19,200 --> 00:32:23,760
um i'm sorry i i missed the first bit

1010
00:32:22,080 --> 00:32:26,639
but can you future

1011
00:32:23,760 --> 00:32:29,200
so this is this is a theoretical way of

1012
00:32:26,640 --> 00:32:31,360
optimizing circuits

1013
00:32:29,200 --> 00:32:33,039
i know that there is several uh

1014
00:32:31,360 --> 00:32:36,320
implementation of quantum

1015
00:32:33,039 --> 00:32:39,600
computing and photonics

1016
00:32:36,320 --> 00:32:40,158
is have have you done some experiment

1017
00:32:39,600 --> 00:32:42,000
using

1018
00:32:40,159 --> 00:32:43,919
this technique on optimizing circuits

1019
00:32:42,000 --> 00:32:46,480
using photonics for example

1020
00:32:43,919 --> 00:32:48,640
um no that most of the benchmark

1021
00:32:46,480 --> 00:32:50,480
circuits we've used are these um

1022
00:32:48,640 --> 00:32:51,840
they basically implement like classical

1023
00:32:50,480 --> 00:32:53,679
reversible logic so they implement

1024
00:32:51,840 --> 00:32:54,158
adders or growth or oracles or stuff

1025
00:32:53,679 --> 00:32:56,000
like that

1026
00:32:54,159 --> 00:32:57,840
we haven't looked at things for

1027
00:32:56,000 --> 00:32:59,360
photonics we have implemented a few

1028
00:32:57,840 --> 00:33:01,120
quantum chemistry circuits and those

1029
00:32:59,360 --> 00:33:02,559
seems to work really well as well but

1030
00:33:01,120 --> 00:33:04,239
if you have some suggestions on what we

1031
00:33:02,559 --> 00:33:07,039
should try then you can

1032
00:33:04,240 --> 00:33:07,039
tell me afterwards

1033
00:33:08,399 --> 00:33:11,840
cool last question

1034
00:33:13,360 --> 00:33:25,840
it looks like we're good so let's find

1035
00:33:14,960 --> 00:33:25,840
the speaker

1036
00:33:26,240 --> 00:33:28,320
you

