1
00:00:06,560 --> 00:00:17,919
so

2
00:00:07,120 --> 00:00:17,920
okay few seconds

3
00:00:29,039 --> 00:00:33,280
so before i start i would like to ask

4
00:00:32,159 --> 00:00:37,360
you

5
00:00:33,280 --> 00:00:37,360
how many of you are graphic programmers

6
00:00:38,320 --> 00:00:46,879
cool how many of you are programmers

7
00:00:43,200 --> 00:00:50,239
nice uh i just

8
00:00:46,879 --> 00:00:52,559
prepared my talk and i

9
00:00:50,239 --> 00:00:54,239
expected that there won't be a lot of

10
00:00:52,559 --> 00:00:57,680
gosh programmers so i

11
00:00:54,239 --> 00:01:00,959
think i have done my goal

12
00:00:57,680 --> 00:01:02,160
so i tried to explain how our graphics

13
00:01:00,960 --> 00:01:04,640
pipeline works

14
00:01:02,160 --> 00:01:06,240
without much graphics programming

15
00:01:04,640 --> 00:01:10,320
details

16
00:01:06,240 --> 00:01:14,640
so if you want to hear something about

17
00:01:10,320 --> 00:01:19,199
3d linear math or related algorithms

18
00:01:14,640 --> 00:01:19,200
there won't be that such slides

19
00:01:19,759 --> 00:01:29,360
i have a few seconds before my

20
00:01:24,000 --> 00:01:29,360
team member helps me with the cable

21
00:01:29,439 --> 00:01:33,839
by the way do you know 080 who knows

22
00:01:31,759 --> 00:01:36,159
already

23
00:01:33,840 --> 00:01:36,159
nice

24
00:01:38,079 --> 00:01:43,839
it's the game

25
00:01:41,520 --> 00:01:44,640
you can play if you want there's no

26
00:01:43,840 --> 00:01:46,960
signal

27
00:01:44,640 --> 00:01:49,520
yeah because it's normal because i'm

28
00:01:46,960 --> 00:01:49,520
waiting for

29
00:01:52,840 --> 00:01:55,840
stand

30
00:01:57,920 --> 00:02:04,560
actually i have 45 minute talk

31
00:02:01,360 --> 00:02:05,840
but it won't be 45 because i plan to

32
00:02:04,560 --> 00:02:08,080
have something like

33
00:02:05,840 --> 00:02:09,039
15 delay because of such strange

34
00:02:08,080 --> 00:02:12,319
accident that

35
00:02:09,038 --> 00:02:16,640
usually happens with

36
00:02:12,319 --> 00:02:23,839
presentations like with cables so i hope

37
00:02:16,640 --> 00:02:23,839
you won't be so boring

38
00:02:44,959 --> 00:02:48,000
yeah how many graphics are there

39
00:02:46,480 --> 00:02:51,840
currently in the game

40
00:02:48,000 --> 00:02:51,840
graphics you mean programmers

41
00:02:55,120 --> 00:02:58,239
actually a lot of

42
00:02:59,040 --> 00:03:07,840
0d is 3d game so we

43
00:03:02,319 --> 00:03:10,238
need to have models 3d models we have to

44
00:03:07,840 --> 00:03:11,280
cover them with textures with normal

45
00:03:10,239 --> 00:03:15,280
maps

46
00:03:11,280 --> 00:03:18,480
we have to render ui so we need

47
00:03:15,280 --> 00:03:19,360
some add stuff for ui buttons checkbox

48
00:03:18,480 --> 00:03:22,480
scroll box

49
00:03:19,360 --> 00:03:25,920
and other stuff so

50
00:03:22,480 --> 00:03:29,840
i think our compressed data about art

51
00:03:25,920 --> 00:03:33,280
is about two megabytes

52
00:03:29,840 --> 00:03:35,920
it includes meshes textures

53
00:03:33,280 --> 00:03:35,920
materials

54
00:03:36,720 --> 00:03:42,560
i think i can call shaders art

55
00:03:39,920 --> 00:03:43,040
stuff as well because it's something

56
00:03:42,560 --> 00:03:47,840
like

57
00:03:43,040 --> 00:03:47,840
math art

58
00:04:05,439 --> 00:04:15,840
so yeah

59
00:04:24,560 --> 00:04:31,360
lift yeah

60
00:04:28,000 --> 00:04:32,160
that's nice so i'm going to talk about

61
00:04:31,360 --> 00:04:35,280
zero id

62
00:04:32,160 --> 00:04:37,120
how it graphics pipeline works uh my

63
00:04:35,280 --> 00:04:37,758
name is vladislav i'm a graphic

64
00:04:37,120 --> 00:04:40,880
programmer

65
00:04:37,759 --> 00:04:41,680
at wealthfire games we are open source

66
00:04:40,880 --> 00:04:45,440
community

67
00:04:41,680 --> 00:04:50,160
that developed the game for a long time

68
00:04:45,440 --> 00:04:54,320
about 20 years and

69
00:04:50,160 --> 00:04:57,600
it wasn't open source for the whole time

70
00:04:54,320 --> 00:05:01,680
it became open source only 10 years ago

71
00:04:57,600 --> 00:05:04,240
in 2009 so

72
00:05:01,680 --> 00:05:06,240
what i'm going to tell about what is

73
00:05:04,240 --> 00:05:09,840
already at all

74
00:05:06,240 --> 00:05:11,360
uh what we have behind with all stuff

75
00:05:09,840 --> 00:05:13,840
what players see

76
00:05:11,360 --> 00:05:13,840
and

77
00:05:14,639 --> 00:05:17,919
most of my talk about pipeline so how it

78
00:05:17,039 --> 00:05:20,960
works

79
00:05:17,919 --> 00:05:24,000
uh i will show you how it works

80
00:05:20,960 --> 00:05:27,198
uh how it looks like visually and how it

81
00:05:24,000 --> 00:05:30,240
works for gpu side and

82
00:05:27,199 --> 00:05:33,919
i will talk about debugging what we use

83
00:05:30,240 --> 00:05:37,759
i use our members contributors that

84
00:05:33,919 --> 00:05:39,599
help us to develop our game and

85
00:05:37,759 --> 00:05:41,199
very important topic about artists

86
00:05:39,600 --> 00:05:44,240
because it's

87
00:05:41,199 --> 00:05:48,479
really interesting and i think

88
00:05:44,240 --> 00:05:52,080
artists are really important for

89
00:05:48,479 --> 00:05:53,599
games because it is that how it looks

90
00:05:52,080 --> 00:05:58,000
like for players

91
00:05:53,600 --> 00:06:00,319
so basically 0d is

92
00:05:58,000 --> 00:06:02,160
real-time strategy it's a typical

93
00:06:00,319 --> 00:06:05,440
screenshot from the game

94
00:06:02,160 --> 00:06:09,039
uh like this is one is civil center

95
00:06:05,440 --> 00:06:09,039
where you start with

96
00:06:09,600 --> 00:06:17,039
it's about zero ad from

97
00:06:13,360 --> 00:06:20,479
500 bc to up to

98
00:06:17,039 --> 00:06:23,039
one ac

99
00:06:20,479 --> 00:06:24,560
player can control about 17

100
00:06:23,039 --> 00:06:28,000
civilizations

101
00:06:24,560 --> 00:06:30,000
uh each civilization has different

102
00:06:28,000 --> 00:06:31,280
type of buildings different type of

103
00:06:30,000 --> 00:06:35,680
units uh

104
00:06:31,280 --> 00:06:39,758
all these units are visually different

105
00:06:35,680 --> 00:06:42,000
also each unit each building has

106
00:06:39,759 --> 00:06:43,840
different variation what does it mean it

107
00:06:42,000 --> 00:06:47,039
it means that an artist

108
00:06:43,840 --> 00:06:50,400
can add an option in

109
00:06:47,039 --> 00:06:51,520
object definition we store it in in xml

110
00:06:50,400 --> 00:06:53,679
files

111
00:06:51,520 --> 00:06:54,639
you can switch between different

112
00:06:53,680 --> 00:06:57,120
textures

113
00:06:54,639 --> 00:06:59,919
between different meshes between

114
00:06:57,120 --> 00:06:59,919
different sounds

115
00:07:00,400 --> 00:07:07,120
how does it look like for a player when

116
00:07:03,680 --> 00:07:11,680
he plays a building for example

117
00:07:07,120 --> 00:07:14,479
just a simple house a random generator

118
00:07:11,680 --> 00:07:15,280
generate a seed for new mesh for new

119
00:07:14,479 --> 00:07:18,318
object

120
00:07:15,280 --> 00:07:22,479
and by this seed game will

121
00:07:18,319 --> 00:07:27,759
choose a mesh a texture sound

122
00:07:22,479 --> 00:07:30,800
you might have variation of variations

123
00:07:27,759 --> 00:07:33,199
it helps to artists a lot

124
00:07:30,800 --> 00:07:35,120
but that's the problem for graphics

125
00:07:33,199 --> 00:07:37,680
programmers because you need to

126
00:07:35,120 --> 00:07:39,840
render all this stuff and if you try to

127
00:07:37,680 --> 00:07:40,560
render a lot of objects with different

128
00:07:39,840 --> 00:07:43,039
textures

129
00:07:40,560 --> 00:07:44,160
with different measures for example if

130
00:07:43,039 --> 00:07:46,080
all objects

131
00:07:44,160 --> 00:07:48,400
on visible scene are different it's

132
00:07:46,080 --> 00:07:51,440
pretty hard i mean

133
00:07:48,400 --> 00:07:52,400
it needs to switch textures on gpu you

134
00:07:51,440 --> 00:07:56,400
need to sweat

135
00:07:52,400 --> 00:08:00,239
meshes on gpu and all this stuff

136
00:07:56,400 --> 00:08:03,359
slow down the process ideally

137
00:08:00,240 --> 00:08:06,319
if you need to draw only

138
00:08:03,360 --> 00:08:06,879
for example the same object multiple

139
00:08:06,319 --> 00:08:09,599
times

140
00:08:06,879 --> 00:08:11,039
is the best what can gpu do because it's

141
00:08:09,599 --> 00:08:14,240
mostly about

142
00:08:11,039 --> 00:08:16,800
parallel processes so

143
00:08:14,240 --> 00:08:18,000
a player can learn about each

144
00:08:16,800 --> 00:08:21,360
civilization so

145
00:08:18,000 --> 00:08:22,000
it's absolutely historically based they

146
00:08:21,360 --> 00:08:24,240
don't have

147
00:08:22,000 --> 00:08:24,240
any

148
00:08:25,280 --> 00:08:32,159
at least at the moment we don't have any

149
00:08:28,879 --> 00:08:32,159
imagine um

150
00:08:32,799 --> 00:08:39,039
civilizations or they all

151
00:08:35,919 --> 00:08:40,478
are real and they are all based on real

152
00:08:39,039 --> 00:08:43,760
historic facts

153
00:08:40,479 --> 00:08:47,600
and all this stuff where you can read

154
00:08:43,760 --> 00:08:50,240
in our game so it's a bit

155
00:08:47,600 --> 00:08:50,240
educational

156
00:08:52,000 --> 00:08:59,040
besides main objects

157
00:08:55,360 --> 00:09:01,120
0d has flora and fauna so

158
00:08:59,040 --> 00:09:02,160
different animals different trees

159
00:09:01,120 --> 00:09:05,120
different grass

160
00:09:02,160 --> 00:09:05,839
that you need to render the same

161
00:09:05,120 --> 00:09:09,600
behavior

162
00:09:05,839 --> 00:09:12,880
for variations is applicable for

163
00:09:09,600 --> 00:09:16,720
trees and for grass for example so

164
00:09:12,880 --> 00:09:17,600
when you work in our editor atlas it's

165
00:09:16,720 --> 00:09:20,640
called

166
00:09:17,600 --> 00:09:22,399
uh you place a tree it's on each place

167
00:09:20,640 --> 00:09:26,000
it generates a seed

168
00:09:22,399 --> 00:09:30,160
and you place on each click on

169
00:09:26,000 --> 00:09:30,480
on the terrain you place a new tree i

170
00:09:30,160 --> 00:09:33,120
mean

171
00:09:30,480 --> 00:09:34,959
it looks differently it depends on

172
00:09:33,120 --> 00:09:38,160
random generator

173
00:09:34,959 --> 00:09:39,119
so it also helps to artists to not

174
00:09:38,160 --> 00:09:40,640
switch

175
00:09:39,120 --> 00:09:42,480
between different models between

176
00:09:40,640 --> 00:09:45,920
different measures so

177
00:09:42,480 --> 00:09:49,440
you just put trees for example

178
00:09:45,920 --> 00:09:54,079
you might have one biological

179
00:09:49,440 --> 00:09:56,640
kind of tree uh you select it by mesh

180
00:09:54,080 --> 00:09:57,600
or by list and then you just click on

181
00:09:56,640 --> 00:10:00,000
the terrain

182
00:09:57,600 --> 00:10:02,160
and on each click it will generate for

183
00:10:00,000 --> 00:10:04,320
example

184
00:10:02,160 --> 00:10:05,760
different mesh for example they will be

185
00:10:04,320 --> 00:10:10,240
different by a high

186
00:10:05,760 --> 00:10:13,439
so small or big trees

187
00:10:10,240 --> 00:10:17,040
that helps a lot to artists

188
00:10:13,440 --> 00:10:19,920
but not for programmers so

189
00:10:17,040 --> 00:10:20,959
what's about technical side important

190
00:10:19,920 --> 00:10:24,479
for graphics

191
00:10:20,959 --> 00:10:27,839
uh we have an entity component system uh

192
00:10:24,480 --> 00:10:27,839
who knows what what is it

193
00:10:28,640 --> 00:10:32,880
the main idea of the entity component

194
00:10:30,720 --> 00:10:36,160
system that

195
00:10:32,880 --> 00:10:39,040
you don't use classical approach

196
00:10:36,160 --> 00:10:39,680
when you have a basic object like i

197
00:10:39,040 --> 00:10:43,199
object

198
00:10:39,680 --> 00:10:46,560
and you derive all your objects from it

199
00:10:43,200 --> 00:10:49,760
idea that you have entity

200
00:10:46,560 --> 00:10:52,959
and you can attach

201
00:10:49,760 --> 00:10:53,920
any possible components to that entity

202
00:10:52,959 --> 00:10:57,518
for example

203
00:10:53,920 --> 00:11:00,319
if you want to place

204
00:10:57,519 --> 00:11:01,920
an object the entity on a terrain you

205
00:11:00,320 --> 00:11:04,959
need to know a position so

206
00:11:01,920 --> 00:11:07,760
you have uh i

207
00:11:04,959 --> 00:11:08,640
cmp position component if you want to

208
00:11:07,760 --> 00:11:10,800
render it

209
00:11:08,640 --> 00:11:12,720
for example it would be interactive or

210
00:11:10,800 --> 00:11:15,760
not just a resource stuff

211
00:11:12,720 --> 00:11:18,399
you add a visual actor if you don't need

212
00:11:15,760 --> 00:11:20,720
something you don't just don't add it

213
00:11:18,399 --> 00:11:25,120
for example if you want

214
00:11:20,720 --> 00:11:27,680
to add a sound you just create if it

215
00:11:25,120 --> 00:11:28,320
wasn't present before new components

216
00:11:27,680 --> 00:11:32,560
like

217
00:11:28,320 --> 00:11:36,320
i simply sound and attach to new entity

218
00:11:32,560 --> 00:11:39,199
so if you would try to open

219
00:11:36,320 --> 00:11:39,680
our maps xml maps then you will see a

220
00:11:39,200 --> 00:11:43,760
list of

221
00:11:39,680 --> 00:11:46,880
entities uh beside that

222
00:11:43,760 --> 00:11:49,920
for each entity we store a seed

223
00:11:46,880 --> 00:11:54,560
that was generated when we placed it

224
00:11:49,920 --> 00:11:58,319
to choose the right

225
00:11:54,560 --> 00:11:58,319
what's wrong with scrolling

226
00:12:02,399 --> 00:12:08,959
okay uh variations that's what

227
00:12:05,920 --> 00:12:09,599
i'm talking about so that's you don't

228
00:12:08,959 --> 00:12:12,319
need to

229
00:12:09,600 --> 00:12:14,959
take care about of different types of

230
00:12:12,320 --> 00:12:14,959
the same thing

231
00:12:15,680 --> 00:12:20,079
the engine cares about instead of

232
00:12:18,079 --> 00:12:21,680
yourself

233
00:12:20,079 --> 00:12:25,439
but that's the problem for programmers

234
00:12:21,680 --> 00:12:29,120
because um

235
00:12:25,440 --> 00:12:32,720
let's let's look at

236
00:12:29,120 --> 00:12:35,440
such example you have a box

237
00:12:32,720 --> 00:12:35,839
and you have different textures like

238
00:12:35,440 --> 00:12:39,519
it's

239
00:12:35,839 --> 00:12:42,639
wood box metal box or for example

240
00:12:39,519 --> 00:12:45,760
waterboxx and

241
00:12:42,639 --> 00:12:49,120
to render it properly on old

242
00:12:45,760 --> 00:12:54,000
jail an old api you need to bind

243
00:12:49,120 --> 00:12:57,200
texture wood then draw box you need to

244
00:12:54,000 --> 00:12:57,200
bind texture

245
00:12:57,440 --> 00:13:02,880
metal draw mesh was blended before so we

246
00:13:01,360 --> 00:13:07,600
don't need to rebuild it

247
00:13:02,880 --> 00:13:10,800
and then we need to bend virtual texture

248
00:13:07,600 --> 00:13:11,519
it's not so slow as it can be if we

249
00:13:10,800 --> 00:13:14,639
re-bend

250
00:13:11,519 --> 00:13:17,360
the whole mesh but it slows down the

251
00:13:14,639 --> 00:13:20,959
process the rendering process

252
00:13:17,360 --> 00:13:24,399
so for gpu especially for modern gpu

253
00:13:20,959 --> 00:13:26,719
it's much better to use

254
00:13:24,399 --> 00:13:28,959
things like texture arrays when you

255
00:13:26,720 --> 00:13:31,279
build a lot of textures

256
00:13:28,959 --> 00:13:32,479
for the same object and you will choose

257
00:13:31,279 --> 00:13:35,760
it one time

258
00:13:32,480 --> 00:13:39,040
in shader code but it's

259
00:13:35,760 --> 00:13:41,120
more about modern api i will talk about

260
00:13:39,040 --> 00:13:44,000
a bit later

261
00:13:41,120 --> 00:13:47,120
uh another important thing for our game

262
00:13:44,000 --> 00:13:50,160
that we have a lot of materials

263
00:13:47,120 --> 00:13:52,959
i just can modify different

264
00:13:50,160 --> 00:13:53,920
options of materials so how it works

265
00:13:52,959 --> 00:13:57,279
internally

266
00:13:53,920 --> 00:14:01,040
we have shaders native jll

267
00:13:57,279 --> 00:14:04,639
jlsl or iaib shaders

268
00:14:01,040 --> 00:14:07,760
and they all are combined in materials

269
00:14:04,639 --> 00:14:11,519
uh so

270
00:14:07,760 --> 00:14:13,920
shaders provides api um

271
00:14:11,519 --> 00:14:14,959
api because it's not a real api it's

272
00:14:13,920 --> 00:14:19,120
just a list

273
00:14:14,959 --> 00:14:22,800
of possible options that you can choose

274
00:14:19,120 --> 00:14:25,440
you can select in xml in

275
00:14:22,800 --> 00:14:26,719
shader xml an artist can combine

276
00:14:25,440 --> 00:14:30,399
different shaders

277
00:14:26,720 --> 00:14:33,440
in the same material and then tweak

278
00:14:30,399 --> 00:14:36,800
some options in material that they

279
00:14:33,440 --> 00:14:40,320
will be then then they will be passed in

280
00:14:36,800 --> 00:14:43,279
the code of the shader so uh for you

281
00:14:40,320 --> 00:14:44,160
as for an artist you don't need to care

282
00:14:43,279 --> 00:14:48,000
about

283
00:14:44,160 --> 00:14:51,439
traders you just tweak

284
00:14:48,000 --> 00:14:51,440
values in materials

285
00:14:51,839 --> 00:14:58,399
that's our platform ratio

286
00:14:54,880 --> 00:14:58,399
i think it's pretty expected

287
00:14:59,440 --> 00:15:02,959
that we have a lot of windows i have a

288
00:15:02,399 --> 00:15:06,000
lot of

289
00:15:02,959 --> 00:15:09,439
linux and have some people

290
00:15:06,000 --> 00:15:10,880
on mac for example me just because i

291
00:15:09,440 --> 00:15:14,560
don't have any other

292
00:15:10,880 --> 00:15:16,480
laptop but

293
00:15:14,560 --> 00:15:18,239
yes the game works on all these

294
00:15:16,480 --> 00:15:22,480
platforms also

295
00:15:18,240 --> 00:15:22,480
we can run our game on raspberry pi

296
00:15:23,680 --> 00:15:30,479
and we have tried to run it on

297
00:15:27,040 --> 00:15:34,319
a arm arm process so

298
00:15:30,480 --> 00:15:37,279
so i mean it can

299
00:15:34,320 --> 00:15:39,600
there was time when we have a run on

300
00:15:37,279 --> 00:15:41,920
android but

301
00:15:39,600 --> 00:15:44,560
we haven't tried for a long time like

302
00:15:41,920 --> 00:15:47,519
for a few years

303
00:15:44,560 --> 00:15:48,399
i think mostly because we have we don't

304
00:15:47,519 --> 00:15:51,440
have a lot of

305
00:15:48,399 --> 00:15:54,800
android developers that can

306
00:15:51,440 --> 00:15:58,079
fix stuff that's special for

307
00:15:54,800 --> 00:16:01,279
exactly for android but we support

308
00:15:58,079 --> 00:16:03,920
opengl yes so we can run on it

309
00:16:01,279 --> 00:16:03,920
technically

310
00:16:04,720 --> 00:16:12,240
that's our ratio about

311
00:16:08,560 --> 00:16:15,839
vendors all these statistics

312
00:16:12,240 --> 00:16:18,880
is from our game

313
00:16:15,839 --> 00:16:22,399
so when you click

314
00:16:18,880 --> 00:16:25,759
on the button enable feedback uh it

315
00:16:22,399 --> 00:16:29,120
sends information about your system of

316
00:16:25,759 --> 00:16:33,360
its uh oh it's

317
00:16:29,120 --> 00:16:36,720
it has description in privacy so you can

318
00:16:33,360 --> 00:16:40,639
see what we send and one of values

319
00:16:36,720 --> 00:16:44,079
is your vendor or gpu

320
00:16:40,639 --> 00:16:48,880
it doesn't matter because

321
00:16:44,079 --> 00:16:48,880
usually md and nvidia mostly

322
00:16:49,360 --> 00:16:56,240
don't have a lot of problems amd may be

323
00:16:52,480 --> 00:16:57,519
more strict about shaders and they don't

324
00:16:56,240 --> 00:16:59,600
have a lot of problems

325
00:16:57,519 --> 00:17:01,920
for for example windows but intel

326
00:16:59,600 --> 00:17:04,480
drivers

327
00:17:01,920 --> 00:17:07,039
may if you ask some graphic programmer

328
00:17:04,480 --> 00:17:12,880
and ask for intro driver on windows you

329
00:17:07,039 --> 00:17:12,879
maybe will see an angry person

330
00:17:13,760 --> 00:17:20,799
i can just show an example

331
00:17:17,520 --> 00:17:22,400
um intel driver crash

332
00:17:20,799 --> 00:17:23,839
the eu application i mean our

333
00:17:22,400 --> 00:17:26,880
application just because

334
00:17:23,839 --> 00:17:30,639
of we tried to multiply matrix

335
00:17:26,880 --> 00:17:33,520
by a vector just in special

336
00:17:30,640 --> 00:17:34,480
conditions that happened before so it

337
00:17:33,520 --> 00:17:37,520
just crashed

338
00:17:34,480 --> 00:17:37,520
the application okay

339
00:17:42,080 --> 00:17:46,240
we still have users with really old

340
00:17:45,600 --> 00:17:49,439
stuff

341
00:17:46,240 --> 00:17:53,840
like uh gel one it's not

342
00:17:49,440 --> 00:17:57,200
so many as for example jl3 or dl4

343
00:17:53,840 --> 00:17:57,600
but we still have it so it doesn't mean

344
00:17:57,200 --> 00:18:00,799
that

345
00:17:57,600 --> 00:18:03,120
it works with d1 it means that it's

346
00:18:00,799 --> 00:18:04,799
the maximum possible version that

347
00:18:03,120 --> 00:18:08,000
supports the hardware

348
00:18:04,799 --> 00:18:11,600
so we still have users who has only

349
00:18:08,000 --> 00:18:14,880
jail one it means usually it means

350
00:18:11,600 --> 00:18:18,320
fixed pipeline function fixed

351
00:18:14,880 --> 00:18:23,120
function pipeline if you remember okay

352
00:18:18,320 --> 00:18:26,240
but it's more about statistics so

353
00:18:23,120 --> 00:18:29,280
uh basic stuff we use

354
00:18:26,240 --> 00:18:31,360
our engine our game engine uh

355
00:18:29,280 --> 00:18:33,200
it's also responsible for our graphics

356
00:18:31,360 --> 00:18:36,000
it's called biogenesis

357
00:18:33,200 --> 00:18:36,640
it's written in c plus plus we use

358
00:18:36,000 --> 00:18:39,600
different

359
00:18:36,640 --> 00:18:40,160
libraries but for graphics more

360
00:18:39,600 --> 00:18:44,320
important

361
00:18:40,160 --> 00:18:47,840
are sdl it's responsible for

362
00:18:44,320 --> 00:18:51,120
setting jl context for

363
00:18:47,840 --> 00:18:55,280
managing buffer swap swap buffers

364
00:18:51,120 --> 00:18:59,678
and related to us dependent thing stuff

365
00:18:55,280 --> 00:18:59,678
uh we use opengl

366
00:19:00,000 --> 00:19:04,880
basically we use opengl one on opengl2

367
00:19:03,919 --> 00:19:08,799
functions

368
00:19:04,880 --> 00:19:12,799
but for some cases

369
00:19:08,799 --> 00:19:15,120
when we detect that user has extension

370
00:19:12,799 --> 00:19:18,240
not in core function but extension we

371
00:19:15,120 --> 00:19:18,239
can try to use it

372
00:19:19,840 --> 00:19:28,799
so at the moment we have

373
00:19:24,720 --> 00:19:28,799
three ways to render our game

374
00:19:29,200 --> 00:19:34,480
fixed pipeline it's the first

375
00:19:32,320 --> 00:19:35,918
possible version in the world i mean

376
00:19:34,480 --> 00:19:39,760
it's

377
00:19:35,919 --> 00:19:42,320
earliest possible way to render when you

378
00:19:39,760 --> 00:19:43,840
can tell to your gpu what you have to do

379
00:19:42,320 --> 00:19:47,200
what you want to do with

380
00:19:43,840 --> 00:19:49,439
your data you just tell like

381
00:19:47,200 --> 00:19:51,200
you have such light you have such extra

382
00:19:49,440 --> 00:19:54,320
you have such option

383
00:19:51,200 --> 00:19:55,440
rendering for me please with shaders you

384
00:19:54,320 --> 00:19:58,960
can

385
00:19:55,440 --> 00:20:00,320
write a code that runs completely on gpu

386
00:19:58,960 --> 00:20:02,799
site so

387
00:20:00,320 --> 00:20:03,678
you have already control on some stuff

388
00:20:02,799 --> 00:20:07,120
you

389
00:20:03,679 --> 00:20:10,720
might add some smart things

390
00:20:07,120 --> 00:20:12,158
so for really old stuff like gl1 we used

391
00:20:10,720 --> 00:20:15,679
fixed uh

392
00:20:12,159 --> 00:20:18,960
users we used fixed pipeline or some

393
00:20:15,679 --> 00:20:23,039
really strange

394
00:20:18,960 --> 00:20:24,720
video cards because not all avengers try

395
00:20:23,039 --> 00:20:28,240
to fix the old cards

396
00:20:24,720 --> 00:20:30,480
for example we have a list of

397
00:20:28,240 --> 00:20:31,520
different video cards for example there

398
00:20:30,480 --> 00:20:36,960
was some

399
00:20:31,520 --> 00:20:40,400
g-force from 2006

400
00:20:36,960 --> 00:20:44,640
that have wrong behavior

401
00:20:40,400 --> 00:20:45,600
of shaders so we have to switch to fixed

402
00:20:44,640 --> 00:20:48,640
pipeline for that

403
00:20:45,600 --> 00:20:51,918
cards but actually

404
00:20:48,640 --> 00:20:55,039
in our plans we try to remove this

405
00:20:51,919 --> 00:20:55,360
at all because it's pretty old and we

406
00:20:55,039 --> 00:20:58,799
have

407
00:20:55,360 --> 00:21:02,639
only about one percent fuses so

408
00:20:58,799 --> 00:21:07,520
i think we can for them to update

409
00:21:02,640 --> 00:21:12,159
their computers instead of support our

410
00:21:07,520 --> 00:21:12,158
old stuff gold so

411
00:21:12,400 --> 00:21:16,400
let's talk more about visual stuff how

412
00:21:15,120 --> 00:21:19,439
it looks like

413
00:21:16,400 --> 00:21:22,559
it's a typical frame that user can

414
00:21:19,440 --> 00:21:26,080
see in his game

415
00:21:22,559 --> 00:21:29,200
so pretty nice you have water you have

416
00:21:26,080 --> 00:21:30,158
reflections you have refractions how we

417
00:21:29,200 --> 00:21:35,679
usually

418
00:21:30,159 --> 00:21:35,679
render it first of all we need to

419
00:21:36,640 --> 00:21:41,039
enumerate all objects that you have in

420
00:21:39,200 --> 00:21:43,679
scene

421
00:21:41,039 --> 00:21:45,120
and you need to call them if you call

422
00:21:43,679 --> 00:21:49,520
them

423
00:21:45,120 --> 00:21:53,678
okay why we need to do that

424
00:21:49,520 --> 00:21:55,840
because we don't want to send to gpu

425
00:21:53,679 --> 00:21:56,880
more data than we actually need so for

426
00:21:55,840 --> 00:21:59,678
example if

427
00:21:56,880 --> 00:22:00,880
an object is invisible on any camera i

428
00:21:59,679 --> 00:22:03,440
will talk a bit later

429
00:22:00,880 --> 00:22:04,559
about cameras if it's invisible on some

430
00:22:03,440 --> 00:22:07,039
camera

431
00:22:04,559 --> 00:22:10,399
then we don't need to render it and it

432
00:22:07,039 --> 00:22:13,440
saves time because for example

433
00:22:10,400 --> 00:22:16,720
usually user have

434
00:22:13,440 --> 00:22:20,640
top-down camera so player

435
00:22:16,720 --> 00:22:23,919
doesn't see a lot of stuff like about

436
00:22:20,640 --> 00:22:25,520
only five percent of maps so we can

437
00:22:23,919 --> 00:22:30,480
avoid rendering of

438
00:22:25,520 --> 00:22:30,480
95 percent of all objects on scene

439
00:22:31,840 --> 00:22:36,559
render scene for each camera we have

440
00:22:34,240 --> 00:22:40,640
four cameras

441
00:22:36,559 --> 00:22:43,760
four cameras in max graphic settings

442
00:22:40,640 --> 00:22:44,480
because what we need to render we need

443
00:22:43,760 --> 00:22:47,919
to render

444
00:22:44,480 --> 00:22:51,919
shadow so who knows what

445
00:22:47,919 --> 00:22:51,919
shadow map for how shadow map works

446
00:22:52,720 --> 00:22:59,600
uh usually to render shadows

447
00:22:55,760 --> 00:23:02,720
you just can't use some magic functions

448
00:22:59,600 --> 00:23:03,439
what you do you have a light light

449
00:23:02,720 --> 00:23:06,840
source

450
00:23:03,440 --> 00:23:08,000
usually it's a sun it's directional

451
00:23:06,840 --> 00:23:13,280
white

452
00:23:08,000 --> 00:23:13,280
so you have a vector now you need to

453
00:23:14,240 --> 00:23:21,200
render all objects that are present

454
00:23:17,280 --> 00:23:24,960
in scene invisible scene on

455
00:23:21,200 --> 00:23:27,600
2d texture it's called depth texture

456
00:23:24,960 --> 00:23:28,559
and then you apply this texture on the

457
00:23:27,600 --> 00:23:32,158
final path

458
00:23:28,559 --> 00:23:34,158
to calculate is it your pixel

459
00:23:32,159 --> 00:23:36,000
that you rendering and the moment is

460
00:23:34,159 --> 00:23:39,039
occluded by any object

461
00:23:36,000 --> 00:23:42,320
and it is occluded or not

462
00:23:39,039 --> 00:23:45,360
is calculated from the texture because

463
00:23:42,320 --> 00:23:48,840
you you have a distance

464
00:23:45,360 --> 00:23:50,479
between a light source and nearest

465
00:23:48,840 --> 00:23:53,199
occluded object

466
00:23:50,480 --> 00:23:54,080
in this depth structure reflection and

467
00:23:53,200 --> 00:23:56,720
reflection

468
00:23:54,080 --> 00:23:57,760
camera because reflection and refraction

469
00:23:56,720 --> 00:24:00,320
might be

470
00:23:57,760 --> 00:24:01,520
have might have a different direction so

471
00:24:00,320 --> 00:24:04,639
we need to have to

472
00:24:01,520 --> 00:24:07,039
uh we need to have different angles of

473
00:24:04,640 --> 00:24:07,039
camera

474
00:24:08,240 --> 00:24:12,559
shadow paths calculate without any color

475
00:24:10,640 --> 00:24:18,080
so we just need to know

476
00:24:12,559 --> 00:24:21,520
transparent not transparent object and

477
00:24:18,080 --> 00:24:24,879
reflection reflection they need colors

478
00:24:21,520 --> 00:24:28,879
but they are different from

479
00:24:24,880 --> 00:24:30,159
main camera because when you look at the

480
00:24:28,880 --> 00:24:33,840
water

481
00:24:30,159 --> 00:24:33,840
in usual case you have

482
00:24:34,640 --> 00:24:38,799
a much bigger number of objects that you

483
00:24:38,080 --> 00:24:42,720
receive

484
00:24:38,799 --> 00:24:45,520
by different and

485
00:24:42,720 --> 00:24:48,960
the final pass you combine all textures

486
00:24:45,520 --> 00:24:52,559
rendering in the previous stuff

487
00:24:48,960 --> 00:24:54,960
and now i want to

488
00:24:52,559 --> 00:24:56,158
show you post processing it's not so

489
00:24:54,960 --> 00:25:00,240
interesting

490
00:24:56,159 --> 00:25:03,120
just like effects like we can apply

491
00:25:00,240 --> 00:25:04,720
entire lasting we can apply color

492
00:25:03,120 --> 00:25:08,559
grading we can apply

493
00:25:04,720 --> 00:25:11,039
some brightness or contrast tweaking

494
00:25:08,559 --> 00:25:13,520
but it's post processing so it's not so

495
00:25:11,039 --> 00:25:13,520
important

496
00:25:14,640 --> 00:25:21,039
it how it works in code

497
00:25:17,840 --> 00:25:24,480
we use one interface

498
00:25:21,039 --> 00:25:28,480
shader program and we have three

499
00:25:24,480 --> 00:25:32,159
implementation at the moment

500
00:25:28,480 --> 00:25:36,159
so shader program is responsible for

501
00:25:32,159 --> 00:25:40,559
do all basic dl stuff like bin textures

502
00:25:36,159 --> 00:25:43,440
like bin mesh uh bring any attributes

503
00:25:40,559 --> 00:25:44,720
for your mesh and then each

504
00:25:43,440 --> 00:25:48,000
implementation and each

505
00:25:44,720 --> 00:25:52,000
derived class like 50p imb

506
00:25:48,000 --> 00:25:54,960
jl cell have own

507
00:25:52,000 --> 00:25:56,080
different code based on jail version and

508
00:25:54,960 --> 00:25:59,679
how it should

509
00:25:56,080 --> 00:26:03,600
look like and now

510
00:25:59,679 --> 00:26:07,120
more pictures finally i hope

511
00:26:03,600 --> 00:26:10,320
it would be more interesting

512
00:26:07,120 --> 00:26:12,879
so that's how the frame before

513
00:26:10,320 --> 00:26:14,080
looks like from a side so you have a

514
00:26:12,880 --> 00:26:16,960
camera view

515
00:26:14,080 --> 00:26:18,799
and that all objects on scene not all

516
00:26:16,960 --> 00:26:21,440
but most of

517
00:26:18,799 --> 00:26:22,960
and you need two column so you don't

518
00:26:21,440 --> 00:26:27,120
need to read them

519
00:26:22,960 --> 00:26:27,120
and after that after cooling you have

520
00:26:27,279 --> 00:26:33,679
such objects you might

521
00:26:30,400 --> 00:26:36,480
notice that we have such

522
00:26:33,679 --> 00:26:36,480
trend tile

523
00:26:36,799 --> 00:26:41,039
why we have that because actually there

524
00:26:39,279 --> 00:26:44,960
is a small intersection

525
00:26:41,039 --> 00:26:48,000
here between tile its bounding box

526
00:26:44,960 --> 00:26:51,919
and camera first turn

527
00:26:48,000 --> 00:26:52,720
so that would that's why it's rendered

528
00:26:51,919 --> 00:26:55,840
that's okay

529
00:26:52,720 --> 00:26:58,720
because it's not performance hit and

530
00:26:55,840 --> 00:27:00,399
we can when just render it because it's

531
00:26:58,720 --> 00:27:03,039
pretty cheap

532
00:27:00,400 --> 00:27:03,679
in comparison with other objects like

533
00:27:03,039 --> 00:27:07,120
tree

534
00:27:03,679 --> 00:27:10,320
for example um this

535
00:27:07,120 --> 00:27:12,719
tile the volatile has

536
00:27:10,320 --> 00:27:12,720
about

537
00:27:14,640 --> 00:27:20,960
32 by 32 about 1000

538
00:27:17,840 --> 00:27:24,399
triangles it's pretty equal to

539
00:27:20,960 --> 00:27:27,120
each tree so it's cheap to render

540
00:27:24,399 --> 00:27:27,120
such tile

541
00:27:27,919 --> 00:27:34,960
that's how it looks like from a shadow

542
00:27:31,120 --> 00:27:38,000
from shadow side so you have

543
00:27:34,960 --> 00:27:41,120
code region and now you have to render

544
00:27:38,000 --> 00:27:41,520
all objects that can cast a shadow in

545
00:27:41,120 --> 00:27:44,559
the

546
00:27:41,520 --> 00:27:47,039
top left corner you might see a dev

547
00:27:44,559 --> 00:27:47,039
texture

548
00:27:47,679 --> 00:27:55,919
white color means farthest point

549
00:27:51,600 --> 00:27:55,918
the black house is nearest point and

550
00:27:56,000 --> 00:28:04,000
depends on a color color value

551
00:27:59,440 --> 00:28:07,200
actually it's only gray values but

552
00:28:04,000 --> 00:28:11,360
depending on color value you can

553
00:28:07,200 --> 00:28:14,840
check occluded or not your object

554
00:28:11,360 --> 00:28:16,080
so it's about debugging but now i want

555
00:28:14,840 --> 00:28:19,279
to

556
00:28:16,080 --> 00:28:22,399
show you how it looks like i think

557
00:28:19,279 --> 00:28:25,919
in real time because

558
00:28:22,399 --> 00:28:25,918
it's less boring i think

559
00:28:29,679 --> 00:28:36,080
so in some

560
00:28:33,279 --> 00:28:36,880
steps and current step so how it looks

561
00:28:36,080 --> 00:28:39,279
like

562
00:28:36,880 --> 00:28:41,520
first of all we need to render shadow

563
00:28:39,279 --> 00:28:41,520
map

564
00:28:42,880 --> 00:28:49,120
it's slow down

565
00:28:46,000 --> 00:28:52,159
a lot because actually this time

566
00:28:49,120 --> 00:28:54,639
need only about few milliseconds and

567
00:28:52,159 --> 00:28:57,360
you won't notice if i try to play it in

568
00:28:54,640 --> 00:29:01,120
real time speed

569
00:28:57,360 --> 00:29:01,120
so it how it looks like a

570
00:29:01,279 --> 00:29:07,440
reflection map so it's

571
00:29:04,559 --> 00:29:08,000
actually mirrored about ground water

572
00:29:07,440 --> 00:29:11,760
level

573
00:29:08,000 --> 00:29:15,760
so it has the same position x and z

574
00:29:11,760 --> 00:29:19,520
but y position is inverted around

575
00:29:15,760 --> 00:29:23,520
water position water level

576
00:29:19,520 --> 00:29:27,440
now we render refraction uh we have

577
00:29:23,520 --> 00:29:30,158
red color to detect leaks for example if

578
00:29:27,440 --> 00:29:33,200
shader tried to pick a color from a

579
00:29:30,159 --> 00:29:33,200
wrong coordinates

580
00:29:33,360 --> 00:29:37,039
some of you who played may notice

581
00:29:35,760 --> 00:29:41,200
sometimes

582
00:29:37,039 --> 00:29:43,600
that we're in the terrain

583
00:29:41,200 --> 00:29:43,600
and

584
00:29:46,000 --> 00:29:52,720
just iterate through all objects

585
00:29:49,120 --> 00:29:55,199
important note we just we don't

586
00:29:52,720 --> 00:29:56,960
try to render instant for

587
00:29:55,200 --> 00:29:59,440
straightforward manner

588
00:29:56,960 --> 00:30:01,200
we sort all objects by types by

589
00:29:59,440 --> 00:30:03,679
materials by textures

590
00:30:01,200 --> 00:30:05,200
because as i said before because of

591
00:30:03,679 --> 00:30:08,240
variations we have to

592
00:30:05,200 --> 00:30:12,240
minimize number of context switching of

593
00:30:08,240 --> 00:30:14,640
state switching so it's

594
00:30:12,240 --> 00:30:18,080
much more efficient to render things

595
00:30:14,640 --> 00:30:21,120
when you don't switch

596
00:30:18,080 --> 00:30:22,320
different states frequently that that's

597
00:30:21,120 --> 00:30:26,719
why we combine

598
00:30:22,320 --> 00:30:29,760
them by material by shader by textures

599
00:30:26,720 --> 00:30:31,200
so it's not so visible but they are

600
00:30:29,760 --> 00:30:34,399
combined

601
00:30:31,200 --> 00:30:34,399
so uh

602
00:30:34,840 --> 00:30:42,240
let's first talk about

603
00:30:37,440 --> 00:30:46,559
material about debugging

604
00:30:42,240 --> 00:30:48,880
we use different software

605
00:30:46,559 --> 00:30:49,760
mostly we use ap trace it's awesome

606
00:30:48,880 --> 00:30:52,640
software

607
00:30:49,760 --> 00:30:55,840
it supports most platforms so it works

608
00:30:52,640 --> 00:30:58,880
perfectly on windows not all

609
00:30:55,840 --> 00:31:03,360
uh but most platforms

610
00:30:58,880 --> 00:31:03,360
uh it works on my cars linux and so

611
00:31:03,519 --> 00:31:09,840
it the really good stuff about epitrace

612
00:31:06,799 --> 00:31:12,960
it even support all gel so if you have

613
00:31:09,840 --> 00:31:14,799
old application for example old game

614
00:31:12,960 --> 00:31:16,960
you might try to trace it through

615
00:31:14,799 --> 00:31:19,760
epitrace another one like

616
00:31:16,960 --> 00:31:21,919
render dock or nvidia inside it's

617
00:31:19,760 --> 00:31:24,240
vendor-specific but

618
00:31:21,919 --> 00:31:27,200
they have problem with that for example

619
00:31:24,240 --> 00:31:27,200
render dock can

620
00:31:27,679 --> 00:31:34,720
render dock can't run jl2

621
00:31:31,600 --> 00:31:38,080
dl1 it requires at least

622
00:31:34,720 --> 00:31:38,080
gel 3.3

623
00:31:38,320 --> 00:31:43,760
it's okay for modern but for pretty old

624
00:31:44,399 --> 00:31:50,080
software it's impossible to run but you

625
00:31:47,679 --> 00:31:53,440
might try to debug for example some

626
00:31:50,080 --> 00:31:57,039
some parts uh so basically we use a

627
00:31:53,440 --> 00:32:00,240
trace that looks like epitrace

628
00:31:57,039 --> 00:32:02,240
it's already you

629
00:32:00,240 --> 00:32:03,840
prepared trace usually you have two

630
00:32:02,240 --> 00:32:06,559
steps for ap trace

631
00:32:03,840 --> 00:32:07,279
you trace it you run ap trace like in

632
00:32:06,559 --> 00:32:12,080
command line

633
00:32:07,279 --> 00:32:14,720
and your exit like your application

634
00:32:12,080 --> 00:32:15,600
and then you got a file a trace file

635
00:32:14,720 --> 00:32:18,720
that you open

636
00:32:15,600 --> 00:32:21,918
with qap trace or any other

637
00:32:18,720 --> 00:32:25,039
ui build

638
00:32:21,919 --> 00:32:28,240
for example it's qut based yeah so

639
00:32:25,039 --> 00:32:28,960
you can look at all calls that your

640
00:32:28,240 --> 00:32:32,240
application

641
00:32:28,960 --> 00:32:33,279
has done it's pretty helpful to

642
00:32:32,240 --> 00:32:36,080
understand

643
00:32:33,279 --> 00:32:38,880
what's going on what does the

644
00:32:36,080 --> 00:32:42,000
application really

645
00:32:38,880 --> 00:32:44,960
complete why it's

646
00:32:42,000 --> 00:32:46,000
helpful because you don't want to lock

647
00:32:44,960 --> 00:32:48,480
all your

648
00:32:46,000 --> 00:32:50,080
low-level ap calls in your application

649
00:32:48,480 --> 00:32:53,519
because it's a lot of work

650
00:32:50,080 --> 00:32:57,039
also it's not so fast also it might be

651
00:32:53,519 --> 00:32:57,600
threaded we you might have a lot of

652
00:32:57,039 --> 00:32:59,519
problem

653
00:32:57,600 --> 00:33:01,279
a lot of you might spend a lot of time

654
00:32:59,519 --> 00:33:04,640
to try to implement stuff

655
00:33:01,279 --> 00:33:09,039
so just try to use epitrace and that's

656
00:33:04,640 --> 00:33:12,000
a good application when you talk it's

657
00:33:09,039 --> 00:33:12,640
i think i think it's better i mean in

658
00:33:12,000 --> 00:33:15,840
terms

659
00:33:12,640 --> 00:33:17,519
of runtime usability but it doesn't

660
00:33:15,840 --> 00:33:20,559
support ogl

661
00:33:17,519 --> 00:33:24,000
uh platform vendor specific

662
00:33:20,559 --> 00:33:26,559
is good when you try to debug on

663
00:33:24,000 --> 00:33:28,480
this platform because it has own

664
00:33:26,559 --> 00:33:31,678
information it has

665
00:33:28,480 --> 00:33:34,080
own connection with driver so it might

666
00:33:31,679 --> 00:33:35,120
show you something some additional

667
00:33:34,080 --> 00:33:37,840
information about

668
00:33:35,120 --> 00:33:39,120
your system that you don't know so it

669
00:33:37,840 --> 00:33:43,678
might be useful

670
00:33:39,120 --> 00:33:47,518
for writing graphic application

671
00:33:43,679 --> 00:33:49,760
so the important part

672
00:33:47,519 --> 00:33:53,039
artists why it's important to

673
00:33:49,760 --> 00:33:57,519
communicate with artists because

674
00:33:53,039 --> 00:34:00,799
artists create visual style of your game

675
00:33:57,519 --> 00:34:04,960
so programmers

676
00:34:00,799 --> 00:34:06,720
have to understand what artist

677
00:34:04,960 --> 00:34:09,839
wants to present in your game and

678
00:34:06,720 --> 00:34:13,440
artists have to understand

679
00:34:09,839 --> 00:34:16,879
restrictions for example

680
00:34:13,440 --> 00:34:19,280
you might have on a frame a lot of units

681
00:34:16,879 --> 00:34:20,239
they are pretty small for example few

682
00:34:19,280 --> 00:34:23,760
pixels

683
00:34:20,239 --> 00:34:27,040
but artists can create a texture like

684
00:34:23,760 --> 00:34:30,000
2000 by 2000 and it

685
00:34:27,040 --> 00:34:31,040
won't be noticed by any player because

686
00:34:30,000 --> 00:34:34,320
it's too small

687
00:34:31,040 --> 00:34:37,359
you have really crazy

688
00:34:34,320 --> 00:34:37,760
density of texture but why do we need

689
00:34:37,359 --> 00:34:40,639
that

690
00:34:37,760 --> 00:34:42,560
so you need to talk about that and i

691
00:34:40,639 --> 00:34:46,000
have three problems

692
00:34:42,560 --> 00:34:49,199
that i want to mention about this

693
00:34:46,000 --> 00:34:49,839
first of all transparent object it's

694
00:34:49,199 --> 00:34:52,078
pretty

695
00:34:49,839 --> 00:34:54,000
hard stuff about graphics to render

696
00:34:52,079 --> 00:34:57,599
transparent object

697
00:34:54,000 --> 00:35:00,560
we have modern modern

698
00:34:57,599 --> 00:35:02,480
hardware can allow few tricks for

699
00:35:00,560 --> 00:35:02,880
example order independent transparency

700
00:35:02,480 --> 00:35:07,359
but

701
00:35:02,880 --> 00:35:09,119
it's another story uh if we talk about

702
00:35:07,359 --> 00:35:10,480
usual application that support all

703
00:35:09,119 --> 00:35:13,920
system uh

704
00:35:10,480 --> 00:35:16,240
it's transparent object is a problem

705
00:35:13,920 --> 00:35:18,640
because you can just render it you can

706
00:35:16,240 --> 00:35:21,839
just render it

707
00:35:18,640 --> 00:35:24,319
randomly in different places you need to

708
00:35:21,839 --> 00:35:25,839
save the order because it's important

709
00:35:24,320 --> 00:35:30,320
for example if you have

710
00:35:25,839 --> 00:35:32,078
a red green blue transparent object it's

711
00:35:30,320 --> 00:35:34,480
really important in which order they are

712
00:35:32,079 --> 00:35:37,200
rendered like you try to

713
00:35:34,480 --> 00:35:38,640
you could try to move layers in

714
00:35:37,200 --> 00:35:41,200
photoshop or

715
00:35:38,640 --> 00:35:43,440
and you will notice what's going on

716
00:35:41,200 --> 00:35:43,439
there

717
00:35:43,680 --> 00:35:50,720
then another problem is perlex mapping

718
00:35:48,720 --> 00:35:52,480
it's a simulation of display

719
00:35:50,720 --> 00:35:55,919
displacement

720
00:35:52,480 --> 00:36:00,640
how it works it's

721
00:35:55,920 --> 00:36:02,800
flat just with a normal map and

722
00:36:00,640 --> 00:36:04,160
how it usually likes in the game and if

723
00:36:02,800 --> 00:36:07,280
you want to add

724
00:36:04,160 --> 00:36:10,160
more 3d effect to your

725
00:36:07,280 --> 00:36:10,839
surface then you use products mapping

726
00:36:10,160 --> 00:36:14,319
what it

727
00:36:10,839 --> 00:36:17,359
actually does with your

728
00:36:14,320 --> 00:36:21,440
material it's like a

729
00:36:17,359 --> 00:36:24,960
great choice uh you

730
00:36:21,440 --> 00:36:27,200
do different steps to find

731
00:36:24,960 --> 00:36:28,480
nearest position of intersection with

732
00:36:27,200 --> 00:36:32,480
your height map

733
00:36:28,480 --> 00:36:35,119
and then you take not this one

734
00:36:32,480 --> 00:36:36,720
with texture and normal map but you take

735
00:36:35,119 --> 00:36:40,480
this one

736
00:36:36,720 --> 00:36:40,480
and you get a correct

737
00:36:40,560 --> 00:36:47,200
view of your material so do you see the

738
00:36:44,240 --> 00:36:50,640
difference between them

739
00:36:47,200 --> 00:36:54,560
that one is much more flat i think

740
00:36:50,640 --> 00:36:57,680
so because of correct position of

741
00:36:54,560 --> 00:37:01,119
the the object you will have

742
00:36:57,680 --> 00:37:04,799
a battery result and what's the problem

743
00:37:01,119 --> 00:37:06,480
we have and we have that that's how it

744
00:37:04,800 --> 00:37:10,000
looks like

745
00:37:06,480 --> 00:37:12,240
in our game but with a different mode

746
00:37:10,000 --> 00:37:13,040
specular and products mapping you might

747
00:37:12,240 --> 00:37:16,720
notice

748
00:37:13,040 --> 00:37:19,759
that uh the roof isn't flat

749
00:37:16,720 --> 00:37:23,839
and what's going on when you

750
00:37:19,760 --> 00:37:23,839
have something wrong this one

751
00:37:25,280 --> 00:37:28,960
so the roof should be like this but it's

752
00:37:27,839 --> 00:37:32,078
like this

753
00:37:28,960 --> 00:37:32,880
why it's going on like going on in that

754
00:37:32,079 --> 00:37:36,160
way

755
00:37:32,880 --> 00:37:39,280
and it's not really noticeable but

756
00:37:36,160 --> 00:37:43,040
here another artifact

757
00:37:39,280 --> 00:37:45,839
in the same style so

758
00:37:43,040 --> 00:37:45,839
what's the problem

759
00:37:46,960 --> 00:37:51,839
problem of normals because usually when

760
00:37:49,920 --> 00:37:56,160
you try to trace

761
00:37:51,839 --> 00:37:59,119
you have an assumption that your

762
00:37:56,160 --> 00:38:00,160
triangle where you apply the material is

763
00:37:59,119 --> 00:38:04,720
flat

764
00:38:00,160 --> 00:38:07,598
but in case you have normals

765
00:38:04,720 --> 00:38:08,240
of different vertices in your mesh you

766
00:38:07,599 --> 00:38:12,720
might

767
00:38:08,240 --> 00:38:16,319
get interpolated version of your normal

768
00:38:12,720 --> 00:38:19,680
and for example if you have this pixel

769
00:38:16,320 --> 00:38:23,280
and noble is looking

770
00:38:19,680 --> 00:38:27,118
up but you something like here and you

771
00:38:23,280 --> 00:38:29,760
looking here what's going on

772
00:38:27,119 --> 00:38:30,960
it looks like you try to look at this

773
00:38:29,760 --> 00:38:34,800
point

774
00:38:30,960 --> 00:38:37,040
from under the object it

775
00:38:34,800 --> 00:38:38,560
shouldn't happen because for the

776
00:38:37,040 --> 00:38:41,759
original algorithm

777
00:38:38,560 --> 00:38:44,400
so in this case to fix that

778
00:38:41,760 --> 00:38:44,400
you need to

779
00:38:45,280 --> 00:38:50,000
talk with your artist and say that don't

780
00:38:47,920 --> 00:38:53,760
use products mapping at all

781
00:38:50,000 --> 00:38:56,800
for this mesh or that kind of mesh

782
00:38:53,760 --> 00:39:00,000
or just for example switch divide

783
00:38:56,800 --> 00:39:03,839
your mesh or more triangles to

784
00:39:00,000 --> 00:39:06,800
reduce such effect

785
00:39:03,839 --> 00:39:06,799
and the last one

786
00:39:07,920 --> 00:39:15,839
mipmap who knows what mid-map level

787
00:39:11,040 --> 00:39:15,839
is okay let me explain

788
00:39:17,359 --> 00:39:23,598
to save whistle style

789
00:39:21,200 --> 00:39:23,598
and

790
00:39:25,200 --> 00:39:29,919
when you have an object on the scene

791
00:39:28,320 --> 00:39:32,880
you might render it on a different

792
00:39:29,920 --> 00:39:35,920
distances if you try to render

793
00:39:32,880 --> 00:39:36,400
all objects with the same texture you

794
00:39:35,920 --> 00:39:39,520
might

795
00:39:36,400 --> 00:39:40,240
got a flickering because when you try to

796
00:39:39,520 --> 00:39:43,200
render

797
00:39:40,240 --> 00:39:45,118
a pixel uh the coordinate in the

798
00:39:43,200 --> 00:39:45,919
destruction will be calculated on each

799
00:39:45,119 --> 00:39:48,880
frame

800
00:39:45,920 --> 00:39:50,800
and on each frame depending on the

801
00:39:48,880 --> 00:39:54,000
position

802
00:39:50,800 --> 00:39:56,320
the coordinate of such pixel

803
00:39:54,000 --> 00:39:57,119
on this texture will be different

804
00:39:56,320 --> 00:40:02,000
because of that

805
00:39:57,119 --> 00:40:05,119
we will get flickering to avoid that

806
00:40:02,000 --> 00:40:09,040
we have such technique like mapping

807
00:40:05,119 --> 00:40:12,480
when you have such texture so original

808
00:40:09,040 --> 00:40:15,279
one this one and all

809
00:40:12,480 --> 00:40:17,599
these squares that are smaller are

810
00:40:15,280 --> 00:40:20,880
mid-map levels for example it's

811
00:40:17,599 --> 00:40:24,880
zero level that's one two

812
00:40:20,880 --> 00:40:28,480
three and so on so if you have

813
00:40:24,880 --> 00:40:31,839
a small object then gpu

814
00:40:28,480 --> 00:40:35,280
will choose not this one texture but

815
00:40:31,839 --> 00:40:38,400
this one and you won't have a flickering

816
00:40:35,280 --> 00:40:39,280
why because when you calculate a mipmap

817
00:40:38,400 --> 00:40:42,560
level

818
00:40:39,280 --> 00:40:45,520
you use average

819
00:40:42,560 --> 00:40:46,240
it means that when you try to pick a

820
00:40:45,520 --> 00:40:50,079
color

821
00:40:46,240 --> 00:40:53,359
it will have a smooth transition between

822
00:40:50,079 --> 00:40:56,160
coordinates and you you will have

823
00:40:53,359 --> 00:40:56,160
a stable color

824
00:40:56,400 --> 00:41:02,079
less math check this example

825
00:40:59,440 --> 00:41:03,440
in our game what's going on this one is

826
00:41:02,079 --> 00:41:06,720
near distance

827
00:41:03,440 --> 00:41:10,480
average and very far

828
00:41:06,720 --> 00:41:14,078
what's going on you might notice that

829
00:41:10,480 --> 00:41:17,760
normal tree almost normal

830
00:41:14,079 --> 00:41:19,920
looks strange and what's going on here

831
00:41:17,760 --> 00:41:21,200
so you don't have any leaf on this

832
00:41:19,920 --> 00:41:24,000
picture

833
00:41:21,200 --> 00:41:25,598
why it happens because of algorithm how

834
00:41:24,000 --> 00:41:29,280
mipmap will calculate it

835
00:41:25,599 --> 00:41:32,000
it's just average and

836
00:41:29,280 --> 00:41:32,480
on low level of mid map you will get

837
00:41:32,000 --> 00:41:35,520
just

838
00:41:32,480 --> 00:41:36,480
mostly transparent object transparent

839
00:41:35,520 --> 00:41:41,520
texture

840
00:41:36,480 --> 00:41:44,640
so to fix that you need to calculate

841
00:41:41,520 --> 00:41:48,079
to talk with your artists who calculate

842
00:41:44,640 --> 00:41:51,680
mipmap levels and

843
00:41:48,079 --> 00:41:55,280
at tweak palms

844
00:41:51,680 --> 00:41:58,319
that are responsible for me pop leveling

845
00:41:55,280 --> 00:42:01,760
so it's

846
00:41:58,319 --> 00:42:02,319
we don't have any stable solution for it

847
00:42:01,760 --> 00:42:05,760
because

848
00:42:02,319 --> 00:42:07,359
each mipmap each textures can have

849
00:42:05,760 --> 00:42:08,960
different behaviors in different

850
00:42:07,359 --> 00:42:12,000
situations so

851
00:42:08,960 --> 00:42:12,000
it's important to

852
00:42:12,240 --> 00:42:19,200
know about that case and account that

853
00:42:16,000 --> 00:42:21,760
and tweak numbers for different

854
00:42:19,200 --> 00:42:21,759
textures

855
00:42:23,280 --> 00:42:31,440
that's all for midnight level so

856
00:42:27,520 --> 00:42:35,200
that's all for now

857
00:42:31,440 --> 00:42:35,200
and we are looking for contributions

858
00:42:38,110 --> 00:42:45,839
[Applause]

859
00:42:40,079 --> 00:42:45,839
any question if present

860
00:42:46,800 --> 00:42:51,440
yeah what part of the pipeline are you

861
00:42:49,440 --> 00:42:54,800
currently working on

862
00:42:51,440 --> 00:42:58,319
are you just fixing uh no actually

863
00:42:54,800 --> 00:43:01,599
at the moment um

864
00:42:58,319 --> 00:43:04,960
okay uh the question was about what

865
00:43:01,599 --> 00:43:05,680
i'm working about at the moment working

866
00:43:04,960 --> 00:43:08,800
on

867
00:43:05,680 --> 00:43:11,680
and please actually

868
00:43:08,800 --> 00:43:12,240
at the moment i'm working on sorting

869
00:43:11,680 --> 00:43:16,000
stuff

870
00:43:12,240 --> 00:43:19,520
when i told about

871
00:43:16,000 --> 00:43:22,400
material sorting to minimize switches

872
00:43:19,520 --> 00:43:22,960
so at the moment i try to profile

873
00:43:22,400 --> 00:43:25,359
different

874
00:43:22,960 --> 00:43:26,240
scenes different objects and try to

875
00:43:25,359 --> 00:43:28,240
minimize

876
00:43:26,240 --> 00:43:30,000
time that we spent on this because at

877
00:43:28,240 --> 00:43:33,839
the moment we have

878
00:43:30,000 --> 00:43:36,480
cpu bound not gpu so in our game

879
00:43:33,839 --> 00:43:37,119
in big scene gpu isn't really loaded

880
00:43:36,480 --> 00:43:40,240
about

881
00:43:37,119 --> 00:43:43,680
10 but cpu one core that

882
00:43:40,240 --> 00:43:48,240
you that is used for sorting about

883
00:43:43,680 --> 00:43:51,680
100 so

884
00:43:48,240 --> 00:43:55,118
that's our goal i mean our

885
00:43:51,680 --> 00:43:55,759
graphics goal to reduce the time that we

886
00:43:55,119 --> 00:44:00,240
spend for

887
00:43:55,760 --> 00:44:00,240
sorting and related stuff

888
00:44:06,000 --> 00:44:09,839
sorry i have the same question

889
00:44:17,599 --> 00:44:24,240
do we have plan about mental we

890
00:44:21,040 --> 00:44:27,759
have thoughts about that uh what

891
00:44:24,240 --> 00:44:32,160
we think i think and we think

892
00:44:27,760 --> 00:44:33,440
that it might be more useful for us to

893
00:44:32,160 --> 00:44:36,799
use volcan

894
00:44:33,440 --> 00:44:39,680
and use something like molten vk for

895
00:44:36,800 --> 00:44:40,880
metal because we are open source it

896
00:44:39,680 --> 00:44:43,759
means that we

897
00:44:40,880 --> 00:44:44,319
usually don't have a lot of hardware a

898
00:44:43,760 --> 00:44:47,359
lot of

899
00:44:44,319 --> 00:44:49,440
graphics programmers who can spend time

900
00:44:47,359 --> 00:44:52,480
exactly on this api

901
00:44:49,440 --> 00:44:55,760
so for us it it's

902
00:44:52,480 --> 00:45:04,079
much better to use some

903
00:44:55,760 --> 00:45:19,440
small amount of api set of api

904
00:45:04,079 --> 00:45:19,440
okay thank you

