1
00:00:05,040 --> 00:00:08,400
um

2
00:00:06,319 --> 00:00:10,080
you know if you if you're not super

3
00:00:08,400 --> 00:00:11,040
familiar with an fpc and history you

4
00:00:10,080 --> 00:00:17,920
might ask

5
00:00:11,040 --> 00:00:21,039
what is this um

6
00:00:17,920 --> 00:00:25,920
so the year is 2005

7
00:00:21,039 --> 00:00:28,240
it is linux world 2005

8
00:00:25,920 --> 00:00:29,359
and a company called technologic systems

9
00:00:28,240 --> 00:00:32,960
design presents

10
00:00:29,359 --> 00:00:35,360
a toaster a running netbeast

11
00:00:32,960 --> 00:00:36,800
and that here is a very young jeff rizzo

12
00:00:35,360 --> 00:00:39,600
who is now one of the

13
00:00:36,800 --> 00:00:39,599
release engineers

14
00:00:40,239 --> 00:00:45,599
and it was basically this this toaster

15
00:00:44,079 --> 00:00:47,840
and it actually toasts bread and

16
00:00:45,600 --> 00:00:49,520
whatnot and it has it has a little uh

17
00:00:47,840 --> 00:00:51,360
it's hard to see it has the liquid

18
00:00:49,520 --> 00:00:54,640
crystal display here

19
00:00:51,360 --> 00:00:58,640
um and it and it has an armboard uh

20
00:00:54,640 --> 00:01:00,960
running festive

21
00:00:58,640 --> 00:01:02,000
and so it was kind of a bit of a joke

22
00:01:00,960 --> 00:01:06,080
but it

23
00:01:02,000 --> 00:01:07,840
it uh sort of emphasizes this

24
00:01:06,080 --> 00:01:10,240
you know an fbc runs on all the things

25
00:01:07,840 --> 00:01:10,240
of course

26
00:01:11,360 --> 00:01:16,320
and so that is kind of um

27
00:01:14,479 --> 00:01:17,840
that has prolonged for a long time being

28
00:01:16,320 --> 00:01:19,360
sort of the sales picture that we see

29
00:01:17,840 --> 00:01:22,479
you can run it on whatever you want

30
00:01:19,360 --> 00:01:25,439
right um

31
00:01:22,479 --> 00:01:26,000
i'm gonna ask a mean question here how

32
00:01:25,439 --> 00:01:28,639
relevant

33
00:01:26,000 --> 00:01:29,840
is this slogan today like if you look at

34
00:01:28,640 --> 00:01:32,159
the list of the

35
00:01:29,840 --> 00:01:34,240
it's about 60 different architectures of

36
00:01:32,159 --> 00:01:37,680
course the language

37
00:01:34,240 --> 00:01:39,039
and they're split into uh tier one and

38
00:01:37,680 --> 00:01:40,799
tier two one tier three

39
00:01:39,040 --> 00:01:43,360
tier three is like life support so

40
00:01:40,799 --> 00:01:46,640
they're basically dead

41
00:01:43,360 --> 00:01:46,640
if you look at the tier two

42
00:01:46,799 --> 00:01:51,680
a lot of those are kind of retro

43
00:01:49,520 --> 00:01:55,840
computing

44
00:01:51,680 --> 00:01:55,840
in the year 2020.

45
00:02:14,080 --> 00:02:19,840
right and um

46
00:02:17,520 --> 00:02:21,280
and i'm gonna say this and it's a bit

47
00:02:19,840 --> 00:02:23,360
harsh to say it but

48
00:02:21,280 --> 00:02:24,480
there is no modern hardware that you can

49
00:02:23,360 --> 00:02:28,400
buy today

50
00:02:24,480 --> 00:02:28,399
that runs netbisti but not linux

51
00:02:29,760 --> 00:02:34,840
and so i think like the argument doesn't

52
00:02:31,840 --> 00:02:38,080
hold as much water as it used to

53
00:02:34,840 --> 00:02:39,360
however um that doesn't mean like nps is

54
00:02:38,080 --> 00:02:41,040
dead or anything

55
00:02:39,360 --> 00:02:42,680
so if you look at the list of tier one

56
00:02:41,040 --> 00:02:44,079
ports this is a screenshot from

57
00:02:42,680 --> 00:02:46,319
netbeast.org

58
00:02:44,080 --> 00:02:47,360
it's a it's a fairly reasonable set of

59
00:02:46,319 --> 00:02:49,359
architectures and

60
00:02:47,360 --> 00:02:51,280
the ones that actually count these days

61
00:02:49,360 --> 00:02:54,720
which is probably amd64

62
00:02:51,280 --> 00:02:58,800
and i'm gonna say arm as well um

63
00:02:54,720 --> 00:02:58,800
they're in here and um

64
00:02:58,879 --> 00:03:05,040
and you also have like 30 32-bit 64-bit

65
00:03:02,239 --> 00:03:05,040
variants and there's

66
00:03:05,120 --> 00:03:09,200
10 which i'm going to talk about in a

67
00:03:06,800 --> 00:03:09,200
little bit

68
00:03:09,440 --> 00:03:13,200
and also mips is kind of interesting

69
00:03:11,120 --> 00:03:14,720
there's some like router devices and

70
00:03:13,200 --> 00:03:18,720
things like that

71
00:03:14,720 --> 00:03:21,440
so not bad um

72
00:03:18,720 --> 00:03:22,560
but uh still i wanna i wanna talk a

73
00:03:21,440 --> 00:03:24,640
little bit about the question

74
00:03:22,560 --> 00:03:26,799
why why would you why would you want to

75
00:03:24,640 --> 00:03:30,079
use pc

76
00:03:26,799 --> 00:03:32,480
um and the

77
00:03:30,080 --> 00:03:34,319
what follows now is kind of geared uh

78
00:03:32,480 --> 00:03:35,920
towards like why would you use netflix

79
00:03:34,319 --> 00:03:36,480
instead of linux not so much why would

80
00:03:35,920 --> 00:03:39,518
you use it

81
00:03:36,480 --> 00:03:42,319
instead of another bsd um

82
00:03:39,519 --> 00:03:44,159
but and it's also kind of my personal

83
00:03:42,319 --> 00:03:46,319
opinion it's just sort of a personal

84
00:03:44,159 --> 00:03:48,560
list of things that i think are

85
00:03:46,319 --> 00:03:50,480
relevant and are really nice the first

86
00:03:48,560 --> 00:03:52,959
thing is

87
00:03:50,480 --> 00:03:56,159
i think it is a system that is simple

88
00:03:52,959 --> 00:03:57,840
understandable but also powerful

89
00:03:56,159 --> 00:04:00,640
and it is understandable from top to

90
00:03:57,840 --> 00:04:04,400
bottom i don't know about you but uh

91
00:04:00,640 --> 00:04:06,159
many years ago when i used my first

92
00:04:04,400 --> 00:04:08,640
linux system so that was the first like

93
00:04:06,159 --> 00:04:11,359
non-cross windows that i used i was

94
00:04:08,640 --> 00:04:13,439
kind of overwhelmed by all the things

95
00:04:11,360 --> 00:04:16,239
that were like automatically started

96
00:04:13,439 --> 00:04:17,120
and running in the background and then

97
00:04:16,238 --> 00:04:19,918
there's this

98
00:04:17,120 --> 00:04:21,440
listener that launches something and you

99
00:04:19,918 --> 00:04:25,198
know today you have systemd

100
00:04:21,440 --> 00:04:25,199
like i don't i don't understand systemd

101
00:04:26,400 --> 00:04:30,400
what happens in an npc system is a lot

102
00:04:28,080 --> 00:04:32,479
more bounded

103
00:04:30,400 --> 00:04:34,320
so when you boot it up you see the

104
00:04:32,479 --> 00:04:36,960
kernel messages you have a

105
00:04:34,320 --> 00:04:38,320
really complete inventory of your

106
00:04:36,960 --> 00:04:39,680
hardware everything that the kernel has

107
00:04:38,320 --> 00:04:43,680
found and identified it

108
00:04:39,680 --> 00:04:47,040
it's sort of in tree form really nice

109
00:04:43,680 --> 00:04:48,960
and and then it starts a few demons

110
00:04:47,040 --> 00:04:50,639
that run in the background but there's

111
00:04:48,960 --> 00:04:51,758
not that many of them you can understand

112
00:04:50,639 --> 00:04:55,280
all of it

113
00:04:51,759 --> 00:04:58,960
you have a guide it's a handbook

114
00:04:55,280 --> 00:05:01,599
it's fairly long and complete and uh

115
00:04:58,960 --> 00:05:03,039
explains things from the start we're

116
00:05:01,600 --> 00:05:05,520
here in the itself it's a good learning

117
00:05:03,039 --> 00:05:08,320
opportunity i think to read these things

118
00:05:05,520 --> 00:05:10,000
uh we have man pages for for all of our

119
00:05:08,320 --> 00:05:12,000
programs and also even for things like

120
00:05:10,000 --> 00:05:15,280
kernel interfaces and device drivers

121
00:05:12,000 --> 00:05:18,320
and file formats and whatnot

122
00:05:15,280 --> 00:05:21,520
so some some people

123
00:05:18,320 --> 00:05:25,840
in the linux world

124
00:05:21,520 --> 00:05:25,840
don't really believe in many pages

125
00:05:29,759 --> 00:05:33,280
what i want to emphasize is even if

126
00:05:32,000 --> 00:05:35,520
you're not using

127
00:05:33,280 --> 00:05:38,559
uh net obesity and you're curious about

128
00:05:35,520 --> 00:05:40,240
it and maybe i don't know

129
00:05:38,560 --> 00:05:42,240
if nothing else you can install this as

130
00:05:40,240 --> 00:05:43,120
a learning opportunities find out about

131
00:05:42,240 --> 00:05:44,960
how

132
00:05:43,120 --> 00:05:46,800
about how this system works and

133
00:05:44,960 --> 00:05:47,599
consequently maybe learn a bit more

134
00:05:46,800 --> 00:05:50,960
about how

135
00:05:47,600 --> 00:05:54,479
your lino systems work so i think it's

136
00:05:50,960 --> 00:05:57,120
it's a valuable thing um and also

137
00:05:54,479 --> 00:05:58,800
netbc has a nice compromise between sort

138
00:05:57,120 --> 00:06:01,840
of the old-school unix thing

139
00:05:58,800 --> 00:06:03,039
because it is uh it traces a direct

140
00:06:01,840 --> 00:06:06,400
heritage

141
00:06:03,039 --> 00:06:08,400
to the old bsd

142
00:06:06,400 --> 00:06:09,729
systems if you were at the unix history

143
00:06:08,400 --> 00:06:12,899
from yesterday

144
00:06:09,730 --> 00:06:12,899
[Music]

145
00:06:16,479 --> 00:06:20,560
um they essentially forked

146
00:06:21,919 --> 00:06:29,039
unix in the early 70s about 1973-74

147
00:06:26,560 --> 00:06:30,000
and it the netbeast system today is a

148
00:06:29,039 --> 00:06:35,360
direct

149
00:06:30,000 --> 00:06:35,360
descendant of that line of development

150
00:06:36,000 --> 00:06:39,039
and on the other hand you have modern

151
00:06:37,680 --> 00:06:41,120
features like the first thing you'll

152
00:06:39,039 --> 00:06:43,280
notice if you boot it on say your laptop

153
00:06:41,120 --> 00:06:46,160
is that it'll boot in not into text mode

154
00:06:43,280 --> 00:06:47,840
but into a graphical console

155
00:06:46,160 --> 00:06:51,199
using the full resolution of your

156
00:06:47,840 --> 00:06:54,400
display um and that graphical console

157
00:06:51,199 --> 00:06:57,520
is accelerated

158
00:06:54,400 --> 00:06:59,120
so netbeast these days has uh um

159
00:06:57,520 --> 00:07:01,599
well-working graphics drivers for things

160
00:06:59,120 --> 00:07:04,639
such as nvidia cards

161
00:07:01,599 --> 00:07:06,800
intel integrated graphics whatnot

162
00:07:04,639 --> 00:07:08,319
and so even your text console is has

163
00:07:06,800 --> 00:07:11,680
these

164
00:07:08,319 --> 00:07:12,319
you have zfs which is a big deal it's a

165
00:07:11,680 --> 00:07:15,199
new

166
00:07:12,319 --> 00:07:16,960
new feature in netbeans d9 it has a few

167
00:07:15,199 --> 00:07:18,400
limitations it's not quite as powerful

168
00:07:16,960 --> 00:07:21,520
as in freebsd

169
00:07:18,400 --> 00:07:24,159
but uh but you have zfs

170
00:07:21,520 --> 00:07:25,680
um you can have uh lvm the logical

171
00:07:24,160 --> 00:07:27,759
volume manager

172
00:07:25,680 --> 00:07:29,280
so you have flexible ways of of defining

173
00:07:27,759 --> 00:07:30,560
your storage

174
00:07:29,280 --> 00:07:32,559
and you have a bunch of other server

175
00:07:30,560 --> 00:07:33,360
features if you want to use as a server

176
00:07:32,560 --> 00:07:34,960
that's good

177
00:07:33,360 --> 00:07:36,560
you have support for a lot of

178
00:07:34,960 --> 00:07:40,799
programming languages

179
00:07:36,560 --> 00:07:41,599
um like go for example supports netbc

180
00:07:40,800 --> 00:07:43,440
well

181
00:07:41,599 --> 00:07:45,199
maya just did a talk in the go dev room

182
00:07:43,440 --> 00:07:45,680
about porting it to more architectures

183
00:07:45,199 --> 00:07:49,919
there's

184
00:07:45,680 --> 00:07:53,440
uh cc plus plus obviously

185
00:07:49,919 --> 00:07:59,680
ruby python pearl

186
00:07:53,440 --> 00:08:02,319
raku you name it oh camel it's all there

187
00:07:59,680 --> 00:08:04,560
and then and it also makes a

188
00:08:02,319 --> 00:08:08,560
surprisingly useful desktop os

189
00:08:04,560 --> 00:08:08,560
these days you have a bunch of

190
00:08:09,120 --> 00:08:12,319
desktop environments such as mate and

191
00:08:11,440 --> 00:08:14,800
xfce

192
00:08:12,319 --> 00:08:17,120
available uh you have browsers such as

193
00:08:14,800 --> 00:08:19,039
firefox and and midori

194
00:08:17,120 --> 00:08:21,520
uh you have like and libreoffice

195
00:08:19,039 --> 00:08:23,840
like it's all it's all kind of there

196
00:08:21,520 --> 00:08:25,520
um and with the graphics acceleration

197
00:08:23,840 --> 00:08:26,080
like you can install firefox you can go

198
00:08:25,520 --> 00:08:28,159
to youtube

199
00:08:26,080 --> 00:08:29,120
youtube works that was not the case a

200
00:08:28,160 --> 00:08:32,560
few years ago

201
00:08:29,120 --> 00:08:35,039
here's an example for a uh

202
00:08:32,559 --> 00:08:36,640
for a desktop usage uh somebody from

203
00:08:35,039 --> 00:08:38,640
japan running netbeast

204
00:08:36,640 --> 00:08:40,799
on a laptop with an internal digitizer's

205
00:08:38,640 --> 00:08:43,679
display and just drawing

206
00:08:40,799 --> 00:08:43,679
casually on it

207
00:08:45,279 --> 00:08:50,640
also netbeast is kind of i feel

208
00:08:49,120 --> 00:08:52,160
one of the systems that's most at home

209
00:08:50,640 --> 00:08:53,760
in the cloud

210
00:08:52,160 --> 00:08:55,920
first of all there's at least three

211
00:08:53,760 --> 00:08:59,760
different hypervisors that are now

212
00:08:55,920 --> 00:09:01,439
uh on the system you have xen

213
00:08:59,760 --> 00:09:03,600
which which has been there for a long

214
00:09:01,440 --> 00:09:06,560
time uh and it's really

215
00:09:03,600 --> 00:09:08,399
kind of enterprise grade um you can so

216
00:09:06,560 --> 00:09:11,199
then you run

217
00:09:08,399 --> 00:09:12,240
your your main machine is called the

218
00:09:11,200 --> 00:09:14,160
dom0

219
00:09:12,240 --> 00:09:15,920
and then you can run guest domains in it

220
00:09:14,160 --> 00:09:19,279
and for example running netbc running

221
00:09:15,920 --> 00:09:22,719
windows running whatever you want

222
00:09:19,279 --> 00:09:25,439
that works there is a new hypervisor in

223
00:09:22,720 --> 00:09:28,800
netbeans d9 called nvmm that is very

224
00:09:25,440 --> 00:09:31,440
intriguing uh it's a it's a tiny

225
00:09:28,800 --> 00:09:32,959
library and a tiny kernel module it's

226
00:09:31,440 --> 00:09:34,880
very elegant in how it's

227
00:09:32,959 --> 00:09:36,479
written and it also like was written in

228
00:09:34,880 --> 00:09:38,240
a few weeks time apparently

229
00:09:36,480 --> 00:09:40,560
and it's it's kind of similar to kvm and

230
00:09:38,240 --> 00:09:42,399
linux

231
00:09:40,560 --> 00:09:43,920
essentially it provides you the way it's

232
00:09:42,399 --> 00:09:47,120
implemented now it provides you with an

233
00:09:43,920 --> 00:09:48,000
accelerated kvm accelerated qmo so you

234
00:09:47,120 --> 00:09:51,279
can run

235
00:09:48,000 --> 00:09:52,959
your guest in in regular qmo and set the

236
00:09:51,279 --> 00:09:58,080
accelerator to

237
00:09:52,959 --> 00:10:02,560
to nvm and you get native-like speeds

238
00:09:58,080 --> 00:10:05,839
there's another hypervisor called hexam

239
00:10:02,560 --> 00:10:08,640
it also plugs into a qmo

240
00:10:05,839 --> 00:10:10,160
uh that is that's a sort of

241
00:10:08,640 --> 00:10:12,399
multi-platform thing

242
00:10:10,160 --> 00:10:14,240
uh and it's used for example in android

243
00:10:12,399 --> 00:10:16,240
studio to run to power the android

244
00:10:14,240 --> 00:10:18,640
emulator so that also works on fvsd

245
00:10:16,240 --> 00:10:21,600
these days

246
00:10:18,640 --> 00:10:23,120
then if you want to run netbeasty in the

247
00:10:21,600 --> 00:10:26,480
cloud

248
00:10:23,120 --> 00:10:26,959
we have official images for aws amis for

249
00:10:26,480 --> 00:10:30,320
both

250
00:10:26,959 --> 00:10:31,279
intel platform and arm platform 32-bit

251
00:10:30,320 --> 00:10:33,120
64-bit

252
00:10:31,279 --> 00:10:34,880
the arm ones are fairly intriguing also

253
00:10:33,120 --> 00:10:38,399
because the the arm offerings from

254
00:10:34,880 --> 00:10:40,240
aws are cheaper and

255
00:10:38,399 --> 00:10:41,060
faster so that's something to keep in

256
00:10:40,240 --> 00:10:43,360
mind

257
00:10:41,060 --> 00:10:45,518
[Music]

258
00:10:43,360 --> 00:10:47,120
there's there's other other cloud

259
00:10:45,519 --> 00:10:48,560
providers where it also works there's

260
00:10:47,120 --> 00:10:50,800
some people are using vultures and

261
00:10:48,560 --> 00:10:51,279
people are using scale way which also

262
00:10:50,800 --> 00:10:53,519
has

263
00:10:51,279 --> 00:10:54,480
cheap and high performance arm stuff

264
00:10:53,519 --> 00:10:56,640
it's all there

265
00:10:54,480 --> 00:10:58,800
for google compute engine we have this

266
00:10:56,640 --> 00:11:02,640
staging script here

267
00:10:58,800 --> 00:11:02,640
that works well um

268
00:11:02,880 --> 00:11:07,760
and and finally i think uh what i would

269
00:11:06,079 --> 00:11:08,479
like to emphasize it's also an os that

270
00:11:07,760 --> 00:11:10,560
has a

271
00:11:08,480 --> 00:11:12,399
fairly welcoming community this is a

272
00:11:10,560 --> 00:11:14,399
picture from uh the package source con

273
00:11:12,399 --> 00:11:19,440
2019 in cambridge

274
00:11:14,399 --> 00:11:21,120
um it's sort of the group picture about

275
00:11:19,440 --> 00:11:23,440
half of the people there are developers

276
00:11:21,120 --> 00:11:25,600
i think

277
00:11:23,440 --> 00:11:26,880
and i think there's been some sort of

278
00:11:25,600 --> 00:11:29,120
generational change

279
00:11:26,880 --> 00:11:30,720
in in the netbeast project over the last

280
00:11:29,120 --> 00:11:33,600
few years it used to be

281
00:11:30,720 --> 00:11:35,120
a bunch of sort of gray beards if you

282
00:11:33,600 --> 00:11:35,680
will like a bunch of old school unix

283
00:11:35,120 --> 00:11:37,760
types

284
00:11:35,680 --> 00:11:38,800
and nowadays there's been a strong

285
00:11:37,760 --> 00:11:41,279
influx of

286
00:11:38,800 --> 00:11:43,040
younger people and as a result the

287
00:11:41,279 --> 00:11:46,079
system has modernized quite a bit

288
00:11:43,040 --> 00:11:47,519
which is which is nice uh so it's a

289
00:11:46,079 --> 00:11:50,638
community that

290
00:11:47,519 --> 00:11:54,079
that is living and that renews itself

291
00:11:50,639 --> 00:11:57,360
um and

292
00:11:54,079 --> 00:11:59,120
yeah i like it a lot then i think maybe

293
00:11:57,360 --> 00:12:01,360
my favorite point

294
00:11:59,120 --> 00:12:03,200
uh my favorite thing about an fpc is the

295
00:12:01,360 --> 00:12:03,920
package tree uh it's called package

296
00:12:03,200 --> 00:12:07,440
source

297
00:12:03,920 --> 00:12:09,199
uh written pkg src um

298
00:12:07,440 --> 00:12:11,680
and it has more than twenty thousand

299
00:12:09,200 --> 00:12:13,200
packages plus if you count uh the work

300
00:12:11,680 --> 00:12:14,560
in progress ones that's another four and

301
00:12:13,200 --> 00:12:17,920
a half thousand

302
00:12:14,560 --> 00:12:19,439
um and package source cannot be used

303
00:12:17,920 --> 00:12:22,639
just on net bsd it's

304
00:12:19,440 --> 00:12:22,959
it supports uh about 18 different os's

305
00:12:22,639 --> 00:12:25,839
and

306
00:12:22,959 --> 00:12:27,439
and architecture so whether you run you

307
00:12:25,839 --> 00:12:30,639
know a mac laptop

308
00:12:27,440 --> 00:12:32,880
a chromebook uh

309
00:12:30,639 --> 00:12:35,040
a linux server you can use package

310
00:12:32,880 --> 00:12:38,399
source on on all of these

311
00:12:35,040 --> 00:12:41,040
which is really cool and

312
00:12:38,399 --> 00:12:42,560
the way the way it works for a user is

313
00:12:41,040 --> 00:12:44,480
that there are

314
00:12:42,560 --> 00:12:45,760
quarterly stable branches the last one

315
00:12:44,480 --> 00:12:47,600
is called 2019

316
00:12:45,760 --> 00:12:49,279
q4 because it was released at the end of

317
00:12:47,600 --> 00:12:53,040
the fourth quarter

318
00:12:49,279 --> 00:12:55,839
2019. um and

319
00:12:53,040 --> 00:12:57,199
so so these these remain stable for for

320
00:12:55,839 --> 00:12:57,600
three months and during those three

321
00:12:57,200 --> 00:12:59,600
months

322
00:12:57,600 --> 00:13:01,040
uh when there are security updates or

323
00:12:59,600 --> 00:13:02,959
build fixes or things like that they're

324
00:13:01,040 --> 00:13:05,279
pulled up into the stable tree

325
00:13:02,959 --> 00:13:07,279
um then there are like build bots that

326
00:13:05,279 --> 00:13:10,880
build binary packages

327
00:13:07,279 --> 00:13:13,839
for certain architectures

328
00:13:10,880 --> 00:13:15,200
from from this branch and they they run

329
00:13:13,839 --> 00:13:16,720
in the loop so every time there's like a

330
00:13:15,200 --> 00:13:17,519
security update all the stuff gets

331
00:13:16,720 --> 00:13:20,079
rebuilt

332
00:13:17,519 --> 00:13:20,959
that depends on it and and you have you

333
00:13:20,079 --> 00:13:23,359
can use a

334
00:13:20,959 --> 00:13:24,959
package manager called package in sort

335
00:13:23,360 --> 00:13:27,040
of like apt-get in a way

336
00:13:24,959 --> 00:13:29,439
um to keep your system up to date really

337
00:13:27,040 --> 00:13:29,439
easily

338
00:13:30,959 --> 00:13:34,239
however if there are no binary packages

339
00:13:32,800 --> 00:13:37,199
for example your

340
00:13:34,240 --> 00:13:38,639
i don't know using the latest current or

341
00:13:37,200 --> 00:13:41,040
on a weird architecture

342
00:13:38,639 --> 00:13:43,519
of some sort like on your vex or

343
00:13:41,040 --> 00:13:45,199
whatever um

344
00:13:43,519 --> 00:13:46,880
that's no problem you can easily build

345
00:13:45,199 --> 00:13:48,399
stuff from source here's an example if

346
00:13:46,880 --> 00:13:51,680
you want to build firefox

347
00:13:48,399 --> 00:13:51,680
which might take a while in your vx

348
00:13:53,279 --> 00:13:58,000
you just change into the directory for

349
00:13:56,160 --> 00:14:00,399
this particular

350
00:13:58,000 --> 00:14:01,040
package and and type make package

351
00:14:00,399 --> 00:14:03,920
install

352
00:14:01,040 --> 00:14:05,199
and it'll automatically do whatever is

353
00:14:03,920 --> 00:14:06,639
necessary like

354
00:14:05,199 --> 00:14:08,319
find out what the dependencies are that

355
00:14:06,639 --> 00:14:10,320
need to be installed first

356
00:14:08,320 --> 00:14:12,880
download the source code build it build

357
00:14:10,320 --> 00:14:16,240
a package install the package and so on

358
00:14:12,880 --> 00:14:18,880
until something fails or you have

359
00:14:16,240 --> 00:14:20,320
you know a working firefox um if you're

360
00:14:18,880 --> 00:14:22,160
using that

361
00:14:20,320 --> 00:14:24,079
uh like if you don't if you're not

362
00:14:22,160 --> 00:14:25,439
depending on binary packages but using

363
00:14:24,079 --> 00:14:27,120
building stuff from source there's a

364
00:14:25,440 --> 00:14:28,480
tool called package rolling replace

365
00:14:27,120 --> 00:14:31,040
that's kind of useful

366
00:14:28,480 --> 00:14:32,240
whenever you do an update of your

367
00:14:31,040 --> 00:14:34,480
package source tree

368
00:14:32,240 --> 00:14:37,199
like say updating to a new quarterly

369
00:14:34,480 --> 00:14:38,880
release or something like that

370
00:14:37,199 --> 00:14:40,719
you just run package rolling release

371
00:14:38,880 --> 00:14:43,839
dash u like update

372
00:14:40,720 --> 00:14:44,240
and then it will automatically find out

373
00:14:43,839 --> 00:14:46,639
what

374
00:14:44,240 --> 00:14:47,519
packages you have installed are outdated

375
00:14:46,639 --> 00:14:49,440
compared to

376
00:14:47,519 --> 00:14:51,440
you know what's in the repository and

377
00:14:49,440 --> 00:14:53,839
then rebuild them in the correct order

378
00:14:51,440 --> 00:14:56,800
so like the things that are lower in the

379
00:14:53,839 --> 00:14:59,120
dependency tree come first

380
00:14:56,800 --> 00:15:00,319
so you can do that once it'll also take

381
00:14:59,120 --> 00:15:02,320
a while

382
00:15:00,320 --> 00:15:03,600
and then you have up-to-date packages

383
00:15:02,320 --> 00:15:06,240
it's really nice

384
00:15:03,600 --> 00:15:07,519
uh compared to um if you add zfs in the

385
00:15:06,240 --> 00:15:09,440
mix if you have your

386
00:15:07,519 --> 00:15:12,079
your package directory under zfs you can

387
00:15:09,440 --> 00:15:13,920
do a snapshot before you start and

388
00:15:12,079 --> 00:15:16,638
you know if if you're scared that things

389
00:15:13,920 --> 00:15:18,240
might go horribly wrong

390
00:15:16,639 --> 00:15:21,440
if they do you can just roll back that

391
00:15:18,240 --> 00:15:23,839
snapshot it's really nice

392
00:15:21,440 --> 00:15:24,959
also i found that package source is one

393
00:15:23,839 --> 00:15:26,720
of the easiest

394
00:15:24,959 --> 00:15:29,040
ways of actually creating your own

395
00:15:26,720 --> 00:15:30,800
package um

396
00:15:29,040 --> 00:15:32,399
there's a tool called url to package

397
00:15:30,800 --> 00:15:33,519
where you give it a download url to the

398
00:15:32,399 --> 00:15:35,360
source and it'll

399
00:15:33,519 --> 00:15:36,880
start building a skeleton for you and

400
00:15:35,360 --> 00:15:38,720
then you just fill out stuff

401
00:15:36,880 --> 00:15:40,720
it's really easy and there's sort of a

402
00:15:38,720 --> 00:15:42,639
gateway drug to becoming a

403
00:15:40,720 --> 00:15:44,560
uh package source developer uh which

404
00:15:42,639 --> 00:15:48,240
there's a staging repository called

405
00:15:44,560 --> 00:15:50,399
practices whip work in progress um

406
00:15:48,240 --> 00:15:51,680
and it's it's really easy to get an

407
00:15:50,399 --> 00:15:53,920
account for that uh you don't have to

408
00:15:51,680 --> 00:15:54,880
become like fully a netbc developer or

409
00:15:53,920 --> 00:15:56,800
anything like that

410
00:15:54,880 --> 00:15:58,639
you just send a mail to the owner of

411
00:15:56,800 --> 00:16:02,079
this repository and

412
00:15:58,639 --> 00:16:05,600
attach a public sh key

413
00:16:02,079 --> 00:16:08,560
and then you're in more or less um

414
00:16:05,600 --> 00:16:09,120
and so so packages whip is several

415
00:16:08,560 --> 00:16:11,758
things

416
00:16:09,120 --> 00:16:13,440
uh it's you know it's kind of a test bed

417
00:16:11,759 --> 00:16:16,320
uh

418
00:16:13,440 --> 00:16:17,839
it is if you're a contributor but you

419
00:16:16,320 --> 00:16:18,480
don't you're not a developer it's a way

420
00:16:17,839 --> 00:16:21,040
of

421
00:16:18,480 --> 00:16:22,000
where you can put say a package that you

422
00:16:21,040 --> 00:16:23,759
make changes to you

423
00:16:22,000 --> 00:16:26,240
just commit it into whip and it's a lot

424
00:16:23,759 --> 00:16:27,279
easier than attaching a patch to a mail

425
00:16:26,240 --> 00:16:30,000
or something like that

426
00:16:27,279 --> 00:16:31,120
because you can actually review it uh

427
00:16:30,000 --> 00:16:33,440
some people like

428
00:16:31,120 --> 00:16:35,360
when they start working on a new package

429
00:16:33,440 --> 00:16:36,639
and they realize like i won't finish

430
00:16:35,360 --> 00:16:38,079
this today this is not building

431
00:16:36,639 --> 00:16:39,600
correctly or something they still commit

432
00:16:38,079 --> 00:16:42,800
what they have into whip

433
00:16:39,600 --> 00:16:44,639
and then others can continue on that

434
00:16:42,800 --> 00:16:45,839
it's also like it's it's really it's

435
00:16:44,639 --> 00:16:47,360
really good

436
00:16:45,839 --> 00:16:49,279
as a user you should know the packages

437
00:16:47,360 --> 00:16:52,079
that are in there might be

438
00:16:49,279 --> 00:16:52,079
slightly broken

439
00:16:52,320 --> 00:16:55,920
typically there's a to-do file if there

440
00:16:54,160 --> 00:16:57,279
are and so if there's a to-do file you

441
00:16:55,920 --> 00:16:59,439
should read that before you install it

442
00:16:57,279 --> 00:17:02,320
anyway

443
00:16:59,440 --> 00:17:03,279
and now i want to take a little break

444
00:17:02,320 --> 00:17:05,679
and do a

445
00:17:03,279 --> 00:17:07,359
tiny retrospective on my talk from last

446
00:17:05,679 --> 00:17:10,079
year if you remember that

447
00:17:07,359 --> 00:17:10,559
uh that was called an update on netbsd

448
00:17:10,079 --> 00:17:13,839
it's

449
00:17:10,559 --> 00:17:16,879
kind of similar to this one um

450
00:17:13,839 --> 00:17:18,159
and back then i was actually talking

451
00:17:16,880 --> 00:17:20,559
about netbeast eight

452
00:17:18,160 --> 00:17:21,439
which was the all all new release back

453
00:17:20,559 --> 00:17:25,119
then

454
00:17:21,439 --> 00:17:28,720
um and netbeast eight uh

455
00:17:25,119 --> 00:17:32,159
uh is now you know is now stable and

456
00:17:28,720 --> 00:17:35,679
nine is coming up um

457
00:17:32,160 --> 00:17:38,000
it took over a year uh from

458
00:17:35,679 --> 00:17:38,720
the time when it's the the netbc 8

459
00:17:38,000 --> 00:17:41,360
branch

460
00:17:38,720 --> 00:17:42,240
was cut from the from the development

461
00:17:41,360 --> 00:17:45,120
branch

462
00:17:42,240 --> 00:17:46,720
to the release of netbeans 8.0 and it

463
00:17:45,120 --> 00:17:47,600
was a kind of a long time and a lot of

464
00:17:46,720 --> 00:17:50,640
people were

465
00:17:47,600 --> 00:17:52,879
kind of nervous about it

466
00:17:50,640 --> 00:17:54,559
and i realized when preparing this talk

467
00:17:52,880 --> 00:17:56,400
that it's almost as long already for

468
00:17:54,559 --> 00:17:58,399
netbeans d9 but i think we're really

469
00:17:56,400 --> 00:18:00,080
really close

470
00:17:58,400 --> 00:18:03,200
unfortunately it's not there yet so the

471
00:18:00,080 --> 00:18:06,639
branch from the development tree was

472
00:18:03,200 --> 00:18:09,840
uh on at the end of july 2019

473
00:18:06,640 --> 00:18:13,039
you might remember that the middle of

474
00:18:09,840 --> 00:18:16,080
july 2019 was when eight was released

475
00:18:13,039 --> 00:18:18,000
basically as soon as we were

476
00:18:16,080 --> 00:18:19,199
as we got rid of one better branch we

477
00:18:18,000 --> 00:18:21,280
created another

478
00:18:19,200 --> 00:18:22,559
um and i think the same is going to

479
00:18:21,280 --> 00:18:25,200
happen after

480
00:18:22,559 --> 00:18:25,200
nine is done

481
00:18:26,240 --> 00:18:29,360
and i actually asked uh martin husseiman

482
00:18:28,720 --> 00:18:32,240
who is the

483
00:18:29,360 --> 00:18:33,039
uh release manager for netbeasty uh if

484
00:18:32,240 --> 00:18:35,200
we would have

485
00:18:33,039 --> 00:18:36,960
if i could announce this release at

486
00:18:35,200 --> 00:18:38,559
foster if we would have a release and he

487
00:18:36,960 --> 00:18:39,030
was like

488
00:18:38,559 --> 00:18:42,000
no

489
00:18:39,030 --> 00:18:44,080
[Laughter]

490
00:18:42,000 --> 00:18:45,679
however um there's a release candidate

491
00:18:44,080 --> 00:18:46,799
number two that he promised me would be

492
00:18:45,679 --> 00:18:49,200
released

493
00:18:46,799 --> 00:18:50,720
now it is also not really but it should

494
00:18:49,200 --> 00:18:52,559
be any day now so

495
00:18:50,720 --> 00:18:53,919
there's gonna there's a release candid

496
00:18:52,559 --> 00:18:55,840
one that is from

497
00:18:53,919 --> 00:18:57,840
late november and release canada 2 is

498
00:18:55,840 --> 00:19:03,120
coming because there were

499
00:18:57,840 --> 00:19:03,120
some some no bugs fixed since then

500
00:19:05,200 --> 00:19:09,679
and i think if i were you if i were

501
00:19:07,760 --> 00:19:12,080
starting with netbc i would start with

502
00:19:09,679 --> 00:19:14,320
netbeans d9 whatever state it is in at

503
00:19:12,080 --> 00:19:17,120
that point

504
00:19:14,320 --> 00:19:19,918
as i said zfs and nvm are sort of the

505
00:19:17,120 --> 00:19:22,159
big new headline features

506
00:19:19,919 --> 00:19:23,840
there's i talked about the accelerated

507
00:19:22,160 --> 00:19:25,039
graphics drivers earlier there was a big

508
00:19:23,840 --> 00:19:26,639
update to those

509
00:19:25,039 --> 00:19:28,320
so if your graphics card is you know

510
00:19:26,640 --> 00:19:31,520
less than three years old then you may

511
00:19:28,320 --> 00:19:33,600
want to install this and then in terms

512
00:19:31,520 --> 00:19:37,520
of the hardware support

513
00:19:33,600 --> 00:19:40,879
there's there's a lot of improvements

514
00:19:37,520 --> 00:19:42,879
in the arm architecture

515
00:19:40,880 --> 00:19:45,039
it's called evp arm evaluation boards

516
00:19:42,880 --> 00:19:46,320
with the arm architecture but it's

517
00:19:45,039 --> 00:19:49,679
it's really all sorts of things

518
00:19:46,320 --> 00:19:49,678
including like laptops and stuff

519
00:19:49,760 --> 00:19:53,360
in particular evb arm now has 64 bit

520
00:19:52,799 --> 00:19:55,918
support

521
00:19:53,360 --> 00:19:58,080
so on a raspberry pi for example you can

522
00:19:55,919 --> 00:19:59,039
install in 64 bit mode and you get a bit

523
00:19:58,080 --> 00:20:02,639
more performance

524
00:19:59,039 --> 00:20:04,559
it's really nice for developers you have

525
00:20:02,640 --> 00:20:07,520
a bunch of sanitizers

526
00:20:04,559 --> 00:20:08,799
both in the kernel and in the uh in the

527
00:20:07,520 --> 00:20:13,120
user land so you can run

528
00:20:08,799 --> 00:20:14,720
your your code against uh ubsan and asan

529
00:20:13,120 --> 00:20:16,559
and tsan and whatever their names are

530
00:20:14,720 --> 00:20:18,640
and find bugs there have been a bunch of

531
00:20:16,559 --> 00:20:19,600
bugs found in at beast itself obviously

532
00:20:18,640 --> 00:20:22,000
and fixed

533
00:20:19,600 --> 00:20:24,559
there have been a bunch of security

534
00:20:22,000 --> 00:20:24,559
improvements

535
00:20:24,960 --> 00:20:28,000
our security folks are particularly

536
00:20:26,159 --> 00:20:29,600
proud of this thing called kernel aslr

537
00:20:28,000 --> 00:20:32,159
which does full

538
00:20:29,600 --> 00:20:33,199
randomization of all the kernel

539
00:20:32,159 --> 00:20:35,120
addresses

540
00:20:33,200 --> 00:20:38,880
to make exploit development more

541
00:20:35,120 --> 00:20:40,239
difficult and it does that by

542
00:20:38,880 --> 00:20:41,760
adding another stage between the

543
00:20:40,240 --> 00:20:43,200
bootloader and the kernel so it loads

544
00:20:41,760 --> 00:20:46,240
something called the pre-kernel

545
00:20:43,200 --> 00:20:47,280
that'll load the actual kernel rejigger

546
00:20:46,240 --> 00:20:51,919
all the stuff and then

547
00:20:47,280 --> 00:20:55,120
start it um so that's kind of nice

548
00:20:51,919 --> 00:20:57,039
and now you know maybe i have

549
00:20:55,120 --> 00:20:58,239
convinced you now that netpd is a cool

550
00:20:57,039 --> 00:21:00,158
operating system

551
00:20:58,240 --> 00:21:02,640
so i want to address the the question

552
00:21:00,159 --> 00:21:05,679
like what are you going to run it on

553
00:21:02,640 --> 00:21:07,200
of course you could run it on the laptop

554
00:21:05,679 --> 00:21:08,000
you already have or the desktop you

555
00:21:07,200 --> 00:21:11,039
already have

556
00:21:08,000 --> 00:21:15,440
which is probably an amd64

557
00:21:11,039 --> 00:21:16,640
i guess like a 64-bit intel or amd cpu

558
00:21:15,440 --> 00:21:19,600
but there's also more interesting

559
00:21:16,640 --> 00:21:21,039
machines most of them incidentally

560
00:21:19,600 --> 00:21:24,959
running arm

561
00:21:21,039 --> 00:21:30,240
here's one that you probably all know

562
00:21:24,960 --> 00:21:32,240
the raspberry pi 35 dollars

563
00:21:30,240 --> 00:21:33,840
reasonable performance doesn't blow

564
00:21:32,240 --> 00:21:35,440
anyone away really um

565
00:21:33,840 --> 00:21:37,199
and you have wireless line you have

566
00:21:35,440 --> 00:21:39,039
bluetooth you have a

567
00:21:37,200 --> 00:21:41,679
bunch of like extension thingies you can

568
00:21:39,039 --> 00:21:43,520
install i don't know leds on the i2c

569
00:21:41,679 --> 00:21:46,640
board and on the on the

570
00:21:43,520 --> 00:21:48,400
the bus uh it's a cool hacker toy

571
00:21:46,640 --> 00:21:50,559
uh you know why not why not buy one of

572
00:21:48,400 --> 00:21:52,720
these and use an fpg on it

573
00:21:50,559 --> 00:21:53,678
uh you may wonder why i showed the

574
00:21:52,720 --> 00:21:56,159
raspberry pi

575
00:21:53,679 --> 00:21:58,320
3 and not the 4 which is because the 4

576
00:21:56,159 --> 00:22:00,880
doesn't quite work out of the box

577
00:21:58,320 --> 00:22:02,240
so there is this thing here you have to

578
00:22:00,880 --> 00:22:04,720
download an image and then

579
00:22:02,240 --> 00:22:05,600
untower this file on top of the fat

580
00:22:04,720 --> 00:22:07,520
partition

581
00:22:05,600 --> 00:22:09,360
for people who are looking into like

582
00:22:07,520 --> 00:22:10,840
this is more for reference

583
00:22:09,360 --> 00:22:13,520
if you're looking into how to get it

584
00:22:10,840 --> 00:22:17,280
working but the raspberry pi 4

585
00:22:13,520 --> 00:22:18,879
works with this uh here's another one

586
00:22:17,280 --> 00:22:21,440
that i'm very excited about and a lot of

587
00:22:18,880 --> 00:22:24,000
other people as well i think

588
00:22:21,440 --> 00:22:24,480
the pine book pro i think they might

589
00:22:24,000 --> 00:22:26,159
have

590
00:22:24,480 --> 00:22:29,039
a presence here at fosdem they might

591
00:22:26,159 --> 00:22:32,159
have a stand outside

592
00:22:29,039 --> 00:22:36,960
the pinewook pro is a laptop

593
00:22:32,159 --> 00:22:40,480
running an arm processor

594
00:22:36,960 --> 00:22:42,320
and it is 199 dollars

595
00:22:40,480 --> 00:22:43,760
so it's really cheap but it is really

596
00:22:42,320 --> 00:22:46,240
high quality as well

597
00:22:43,760 --> 00:22:48,320
uh its predecessor the pine book without

598
00:22:46,240 --> 00:22:50,559
the pro was a little bit more sort of

599
00:22:48,320 --> 00:22:52,559
like a net book if you remember those

600
00:22:50,559 --> 00:22:55,678
but this one here is like

601
00:22:52,559 --> 00:22:58,639
superb keyboard uh great build quality

602
00:22:55,679 --> 00:23:00,000
um it's really a notebook that you know

603
00:22:58,640 --> 00:23:02,000
doesn't have to hide between

604
00:23:00,000 --> 00:23:03,039
behind like the apple stuff or whatever

605
00:23:02,000 --> 00:23:06,960
and it's 200

606
00:23:03,039 --> 00:23:10,000
and it will run net pc uh natively

607
00:23:06,960 --> 00:23:11,200
um so here's one of our developers jared

608
00:23:10,000 --> 00:23:14,640
mcneil who are making

609
00:23:11,200 --> 00:23:17,440
uh some publicity for this

610
00:23:14,640 --> 00:23:18,400
so you see display backlight control uh

611
00:23:17,440 --> 00:23:21,679
sd card

612
00:23:18,400 --> 00:23:24,320
nvme usb wi-fi audio and i don't know

613
00:23:21,679 --> 00:23:26,600
what dvfs is are all supported

614
00:23:24,320 --> 00:23:29,280
um so you can download an image there on

615
00:23:26,600 --> 00:23:32,719
armbst.org or on the netbeast's

616
00:23:29,280 --> 00:23:33,440
site and just write it onto a sd card

617
00:23:32,720 --> 00:23:37,360
put it in the

618
00:23:33,440 --> 00:23:40,320
the pinewood pro superb

619
00:23:37,360 --> 00:23:40,799
and that's really all i have thank you

620
00:23:40,320 --> 00:23:43,600
very much

621
00:23:40,799 --> 00:23:43,600
do you have any questions

622
00:23:48,000 --> 00:23:51,520
yes what is the minimum amount of ram

623
00:23:51,200 --> 00:23:55,039
you

624
00:23:51,520 --> 00:23:59,039
need for to run uh decently

625
00:23:55,039 --> 00:24:01,279
the minimum amount of ram for zfs um

626
00:23:59,039 --> 00:24:02,320
i think technically is one gigabyte but

627
00:24:01,279 --> 00:24:04,320
if you have less than

628
00:24:02,320 --> 00:24:06,480
four you might not be super happy with

629
00:24:04,320 --> 00:24:06,480
it

630
00:24:07,520 --> 00:24:09,760
yes

631
00:24:12,320 --> 00:24:18,000
hardware acceleration on the pine book

632
00:24:13,760 --> 00:24:19,840
pro i'm not sure i don't think it does

633
00:24:18,000 --> 00:24:21,520
yes what would you say is the

634
00:24:19,840 --> 00:24:23,678
performance of that new hypervisor

635
00:24:21,520 --> 00:24:26,960
compared to older ones especially

636
00:24:23,679 --> 00:24:28,240
compared to beehives what is the

637
00:24:26,960 --> 00:24:30,400
performance

638
00:24:28,240 --> 00:24:32,240
of nvm compared to beehives maybe the

639
00:24:30,400 --> 00:24:37,039
question should be why didn't you

640
00:24:32,240 --> 00:24:37,039
why did why this is not beehive um

641
00:24:38,080 --> 00:24:41,520
i think the reason why it's not beehive

642
00:24:40,159 --> 00:24:44,799
is that it was easier writing this from

643
00:24:41,520 --> 00:24:44,799
scratch than porting beehives

644
00:24:45,440 --> 00:24:51,120
and it's really very minimal uh

645
00:24:48,960 --> 00:24:53,120
i i don't have i don't have any

646
00:24:51,120 --> 00:24:53,918
performance data compared to beehive i

647
00:24:53,120 --> 00:24:56,879
don't know

648
00:24:53,919 --> 00:24:58,320
um so as far as i know beehive is

649
00:24:56,880 --> 00:25:15,039
freebie's the only is that

650
00:24:58,320 --> 00:25:16,559
correct andy lumos yeah

651
00:25:15,039 --> 00:25:18,400
uh so the question was what is the glue

652
00:25:16,559 --> 00:25:21,200
language of package source um

653
00:25:18,400 --> 00:25:21,679
and um saying open piece has a lot of

654
00:25:21,200 --> 00:25:25,200
pearl

655
00:25:21,679 --> 00:25:28,640
uh uh freebies lua

656
00:25:25,200 --> 00:25:32,240
package sources a lot of make

657
00:25:28,640 --> 00:25:34,400
um like the the the main

658
00:25:32,240 --> 00:25:35,520
control file for uh for a package is a

659
00:25:34,400 --> 00:25:37,919
make file

660
00:25:35,520 --> 00:25:39,200
um behind the scenes there are a bunch

661
00:25:37,919 --> 00:25:42,240
of scripts that are

662
00:25:39,200 --> 00:25:45,360
um that are awk

663
00:25:42,240 --> 00:25:48,240
and z and so on and

664
00:25:45,360 --> 00:25:48,959
a few c programs for example we have

665
00:25:48,240 --> 00:25:54,159
wrappers

666
00:25:48,960 --> 00:25:54,159
around the c compiler and around the

667
00:25:54,640 --> 00:25:57,919
linker and all of that and they're

668
00:25:56,000 --> 00:25:58,559
written in c so you don't lose too much

669
00:25:57,919 --> 00:26:01,440
performance

670
00:25:58,559 --> 00:26:03,360
and that way even if a build system is

671
00:26:01,440 --> 00:26:05,039
behaving badly we can be sure that

672
00:26:03,360 --> 00:26:06,479
the arguments we really want to be there

673
00:26:05,039 --> 00:26:07,039
are sort of injected into the command

674
00:26:06,480 --> 00:26:11,840
line

675
00:26:07,039 --> 00:26:11,840
that's what the wrappers do

676
00:26:13,279 --> 00:26:24,320
anymore yes can i do

677
00:26:16,880 --> 00:26:26,559
gpu pass through to virtual machines

678
00:26:24,320 --> 00:26:29,279
can you do gpo pass-through i don't

679
00:26:26,559 --> 00:26:29,279
think you can

680
00:26:30,000 --> 00:26:34,640
i think the the display is always

681
00:26:31,919 --> 00:26:34,640
emulated

682
00:26:36,480 --> 00:26:40,159
you might be able to do it with zen but

683
00:26:38,240 --> 00:26:43,279
it's a bit

684
00:26:40,159 --> 00:26:43,760
it's it's hard to to to get right i

685
00:26:43,279 --> 00:26:47,840
think

686
00:26:43,760 --> 00:26:47,840
but you might be yes

687
00:26:49,279 --> 00:26:56,080
all of them really um it's uh

688
00:26:52,799 --> 00:26:59,360
it's as generic as as kvm

689
00:26:56,080 --> 00:27:03,199
and because it's because you have um

690
00:26:59,360 --> 00:27:04,479
qmo uh you get emulated devices for

691
00:27:03,200 --> 00:27:07,919
things like network

692
00:27:04,480 --> 00:27:11,750
or if the guest os has

693
00:27:07,919 --> 00:27:13,919
proper guest support you'll get

694
00:27:11,750 --> 00:27:21,840
[Music]

695
00:27:13,919 --> 00:27:21,840
non-emulated devices

696
00:27:22,559 --> 00:27:37,200
all right thank you very much

697
00:27:35,120 --> 00:27:37,199
you

