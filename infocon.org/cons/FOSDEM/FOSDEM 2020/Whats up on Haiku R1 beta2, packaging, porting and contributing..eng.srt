1
00:00:14,960 --> 00:00:20,320
about what's up in haiku at the position

2
00:00:17,119 --> 00:00:20,320
2020 distribution

3
00:00:20,880 --> 00:00:28,000
hello everyone um i'm not sure i would

4
00:00:24,880 --> 00:00:31,119
have the time to make a demo oh well

5
00:00:28,000 --> 00:00:34,239
let's try anyway oh that's

6
00:00:31,119 --> 00:00:37,680
not the one yeah french

7
00:00:34,239 --> 00:00:37,680
yeah i speak english but

8
00:00:37,760 --> 00:00:45,839
yeah um i

9
00:00:40,879 --> 00:00:45,839
already made a position but yeah

10
00:00:46,480 --> 00:00:49,279
install anyway

11
00:00:49,760 --> 00:00:56,839
so what's haiku haifu is a free

12
00:00:53,600 --> 00:00:59,840
software operating system oh it's done

13
00:00:56,840 --> 00:00:59,840
already

14
00:01:01,520 --> 00:01:08,960
you actually have to

15
00:01:04,640 --> 00:01:08,960
put the boot sector and

16
00:01:09,360 --> 00:01:14,720
install the boot manager you can

17
00:01:11,840 --> 00:01:14,720
actually use grub

18
00:01:17,680 --> 00:01:23,040
yes yes it's dangerous i know reboot

19
00:01:23,360 --> 00:01:27,840
so haiku is a free software operating

20
00:01:25,280 --> 00:01:27,840
system

21
00:01:28,240 --> 00:01:34,960
and it's inspired by the bos

22
00:01:32,320 --> 00:01:35,839
which used to be a proprietary operating

23
00:01:34,960 --> 00:01:40,240
system in the

24
00:01:35,840 --> 00:01:43,759
90s late 90s um and

25
00:01:40,240 --> 00:01:46,720
it we have our own kernel and our own

26
00:01:43,759 --> 00:01:49,680
graphical interface and here we are

27
00:01:46,720 --> 00:01:53,360
we're inside haiku

28
00:01:49,680 --> 00:01:56,640
uh i just do something for the demo and

29
00:01:53,360 --> 00:01:58,479
we're done i do have a cd record package

30
00:01:56,640 --> 00:02:02,640
here

31
00:01:58,479 --> 00:02:02,640
and oh yeah

32
00:02:03,680 --> 00:02:12,800
if i search cdr if i remove the package

33
00:02:09,440 --> 00:02:16,160
from the active package directory

34
00:02:12,800 --> 00:02:22,480
yep ah

35
00:02:16,160 --> 00:02:25,280
i could zoom in but

36
00:02:22,480 --> 00:02:25,280
i never tried

37
00:02:31,280 --> 00:02:37,760
oh great it's a bit weird but

38
00:02:34,720 --> 00:02:39,280
so i just removed the cd record package

39
00:02:37,760 --> 00:02:43,760
so

40
00:02:39,280 --> 00:02:46,720
no see the record anymore if i

41
00:02:43,760 --> 00:02:46,720
put the package back

42
00:02:47,200 --> 00:02:51,839
yeah i don't like it but

43
00:02:52,160 --> 00:02:55,280
it's back again and that's for the demo

44
00:02:54,959 --> 00:02:57,519
because

45
00:02:55,280 --> 00:03:00,720
i don't have much time yeah that's still

46
00:02:57,519 --> 00:03:00,720
about to resolve it

47
00:03:02,959 --> 00:03:07,360
so as i said it's a free software

48
00:03:04,879 --> 00:03:10,799
operating system um

49
00:03:07,360 --> 00:03:13,920
we started in just after the

50
00:03:10,800 --> 00:03:17,680
peer inc demise and it took

51
00:03:13,920 --> 00:03:20,879
us like 17 years to get a first beta

52
00:03:17,680 --> 00:03:23,280
because we take our time

53
00:03:20,879 --> 00:03:24,399
there are several recommended platforms

54
00:03:23,280 --> 00:03:28,400
mostly

55
00:03:24,400 --> 00:03:31,440
intel based the first one is the

56
00:03:28,400 --> 00:03:32,400
recommended one if you want to also run

57
00:03:31,440 --> 00:03:35,040
bos

58
00:03:32,400 --> 00:03:36,959
binaries which are getting quite rare

59
00:03:35,040 --> 00:03:39,760
now

60
00:03:36,959 --> 00:03:40,319
but you can use the latest gcc uh if you

61
00:03:39,760 --> 00:03:44,239
don't

62
00:03:40,319 --> 00:03:46,798
don't mind there's also a 64-bit

63
00:03:44,239 --> 00:03:48,239
image which works quite well and some

64
00:03:46,799 --> 00:03:50,879
more exotic platforms

65
00:03:48,239 --> 00:03:52,239
uh which i won't get into detail because

66
00:03:50,879 --> 00:03:55,870
they don't boot anyway

67
00:03:52,239 --> 00:03:57,360
yet we do have nightly builds um

68
00:03:55,870 --> 00:03:59,599
[Music]

69
00:03:57,360 --> 00:04:01,200
it's been going on for quite some time

70
00:03:59,599 --> 00:04:04,640
now

71
00:04:01,200 --> 00:04:06,720
they can be updated live and updates are

72
00:04:04,640 --> 00:04:11,119
transactional i will get into it

73
00:04:06,720 --> 00:04:14,720
later we are getting to beta2

74
00:04:11,120 --> 00:04:17,120
real soon now as we say and we have a

75
00:04:14,720 --> 00:04:17,759
build infrastructure which is uh getting

76
00:04:17,120 --> 00:04:20,000
quite

77
00:04:17,759 --> 00:04:20,880
quite good so uh it's easier now than

78
00:04:20,000 --> 00:04:24,479
for the

79
00:04:20,880 --> 00:04:27,759
the first beta but you still can find um

80
00:04:24,479 --> 00:04:28,159
dvds from the latest beta so you need to

81
00:04:27,759 --> 00:04:32,639
ask

82
00:04:28,160 --> 00:04:34,720
adrian which is uh over there um

83
00:04:32,639 --> 00:04:36,560
we don't have any stickers anymore we

84
00:04:34,720 --> 00:04:38,960
have to make new ones

85
00:04:36,560 --> 00:04:40,160
we started optimizing because a long

86
00:04:38,960 --> 00:04:44,880
time ago we used to

87
00:04:40,160 --> 00:04:48,320
boot with 40 megs of ram um

88
00:04:44,880 --> 00:04:50,560
but yeah it's getting there but the

89
00:04:48,320 --> 00:04:51,520
you can actually boot haiku but you

90
00:04:50,560 --> 00:04:54,639
can't install it

91
00:04:51,520 --> 00:04:58,240
with that that low low ram level but

92
00:04:54,639 --> 00:05:00,000
yeah and some various improvements

93
00:04:58,240 --> 00:05:01,280
and we started to clean up because for

94
00:05:00,000 --> 00:05:05,360
the other platforms

95
00:05:01,280 --> 00:05:08,239
uh the jlpc uh was a mess because we

96
00:05:05,360 --> 00:05:09,360
had to stick to an old glpc for brs

97
00:05:08,240 --> 00:05:11,600
compatibility

98
00:05:09,360 --> 00:05:12,479
so for newer platforms we just imported

99
00:05:11,600 --> 00:05:15,919
some stuff from

100
00:05:12,479 --> 00:05:19,039
the muzzle c library for mathematics

101
00:05:15,919 --> 00:05:20,479
operations at least we did some stuff on

102
00:05:19,039 --> 00:05:22,479
the security side but

103
00:05:20,479 --> 00:05:24,080
if you're a security expert we do need

104
00:05:22,479 --> 00:05:27,039
some help

105
00:05:24,080 --> 00:05:27,680
well we started from a very low level we

106
00:05:27,039 --> 00:05:30,240
still run

107
00:05:27,680 --> 00:05:31,280
apps as roots i know it's bad but well

108
00:05:30,240 --> 00:05:34,080
it works

109
00:05:31,280 --> 00:05:34,799
we have many more drivers this time and

110
00:05:34,080 --> 00:05:39,758
we still

111
00:05:34,800 --> 00:05:43,600
support floppy disks

112
00:05:39,759 --> 00:05:46,560
yeah well um we did have

113
00:05:43,600 --> 00:05:47,759
vector icons for some time now um with a

114
00:05:46,560 --> 00:05:50,080
custom format

115
00:05:47,759 --> 00:05:52,320
which is much smaller than svg so you we

116
00:05:50,080 --> 00:05:56,240
can actually store them

117
00:05:52,320 --> 00:05:59,599
alongside the the inode for some files

118
00:05:56,240 --> 00:06:02,720
um but the gui used to have

119
00:05:59,600 --> 00:06:05,280
like uh eight by eight pixel uh stuff

120
00:06:02,720 --> 00:06:06,479
in some places so now it's case with the

121
00:06:05,280 --> 00:06:08,638
system font size

122
00:06:06,479 --> 00:06:09,520
so you just have to set the font size to

123
00:06:08,639 --> 00:06:12,400
like say

124
00:06:09,520 --> 00:06:14,560
18 18 points and it just scales

125
00:06:12,400 --> 00:06:16,719
everything up

126
00:06:14,560 --> 00:06:18,479
we do support some theming so you can

127
00:06:16,720 --> 00:06:21,520
actually

128
00:06:18,479 --> 00:06:24,400
make haiku look as ugly as cde or

129
00:06:21,520 --> 00:06:24,400
windows 3

130
00:06:25,520 --> 00:06:32,000
for yeah a bit of about packaging

131
00:06:28,560 --> 00:06:35,039
we used to don't really have

132
00:06:32,000 --> 00:06:37,919
a proper packaging format in bos

133
00:06:35,039 --> 00:06:39,120
some use zip files that you unzipped

134
00:06:37,919 --> 00:06:42,000
where you want it

135
00:06:39,120 --> 00:06:42,319
it worked at the time um we did have

136
00:06:42,000 --> 00:06:45,199
some

137
00:06:42,319 --> 00:06:46,240
pkg files with a click click click and

138
00:06:45,199 --> 00:06:49,360
yeah

139
00:06:46,240 --> 00:06:51,360
well uh but they didn't have any uh

140
00:06:49,360 --> 00:06:54,240
dependency management so uh

141
00:06:51,360 --> 00:06:55,280
it was it was a mess uh with haiku we

142
00:06:54,240 --> 00:06:58,080
started with some

143
00:06:55,280 --> 00:06:58,638
scripts that just downloaded zip files

144
00:06:58,080 --> 00:07:01,680
and

145
00:06:58,639 --> 00:07:02,160
then but it's yeah same dependency

146
00:07:01,680 --> 00:07:05,599
package

147
00:07:02,160 --> 00:07:08,400
management uh so now

148
00:07:05,599 --> 00:07:09,520
we have uh had the packaging

149
00:07:08,400 --> 00:07:12,799
infrastructure for

150
00:07:09,520 --> 00:07:14,000
quite some years now well we have a

151
00:07:12,800 --> 00:07:16,400
package folders

152
00:07:14,000 --> 00:07:17,120
with all the packages inside they are

153
00:07:16,400 --> 00:07:21,198
compressed

154
00:07:17,120 --> 00:07:24,639
file with our own format and some other

155
00:07:21,199 --> 00:07:26,720
state files by default

156
00:07:24,639 --> 00:07:28,080
all the packages that are in there are

157
00:07:26,720 --> 00:07:31,599
active but you can actually

158
00:07:28,080 --> 00:07:33,359
change this and when you do an upgrade

159
00:07:31,599 --> 00:07:35,039
you can actually

160
00:07:33,360 --> 00:07:36,479
get go back to the previous states

161
00:07:35,039 --> 00:07:38,719
because they are

162
00:07:36,479 --> 00:07:40,318
saved and the the update is

163
00:07:38,720 --> 00:07:42,560
transactional so the all the

164
00:07:40,319 --> 00:07:43,360
the old files are moved to this folder

165
00:07:42,560 --> 00:07:45,599
and

166
00:07:43,360 --> 00:07:46,479
either it it updates or it doesn't

167
00:07:45,599 --> 00:07:49,919
update but

168
00:07:46,479 --> 00:07:52,000
uh it should work

169
00:07:49,919 --> 00:07:54,240
uh so basically as i showed you

170
00:07:52,000 --> 00:07:56,479
installing haiku is just keeping 400

171
00:07:54,240 --> 00:08:01,280
files and that's it

172
00:07:56,479 --> 00:08:01,280
and updates are also um quite fast

173
00:08:01,360 --> 00:08:06,960
we also have a package file system which

174
00:08:04,720 --> 00:08:10,479
is a virtual file system which mounts

175
00:08:06,960 --> 00:08:14,080
all the active packages content

176
00:08:10,479 --> 00:08:16,400
um in the file system uh there are some

177
00:08:14,080 --> 00:08:17,919
uh shine through directories which you

178
00:08:16,400 --> 00:08:19,758
can actually use to

179
00:08:17,919 --> 00:08:22,240
install manually like dot slash

180
00:08:19,759 --> 00:08:25,520
configure dash dash prefix equals

181
00:08:22,240 --> 00:08:26,000
as it's our user local directory if you

182
00:08:25,520 --> 00:08:29,440
will

183
00:08:26,000 --> 00:08:30,720
if you want there's a tool called haiku

184
00:08:29,440 --> 00:08:33,440
porter which

185
00:08:30,720 --> 00:08:36,560
you can run to build packages from

186
00:08:33,440 --> 00:08:36,880
recipes we have a repository of recipes

187
00:08:36,559 --> 00:08:39,199
with

188
00:08:36,880 --> 00:08:41,838
what is called haiku parts which you can

189
00:08:39,200 --> 00:08:43,839
find on github

190
00:08:41,839 --> 00:08:45,279
we didn't reinvent the wheel we just

191
00:08:43,839 --> 00:08:48,560
took the packaging name

192
00:08:45,279 --> 00:08:50,640
naming from gentoo and

193
00:08:48,560 --> 00:08:53,119
yeah the recipes are basically shelf

194
00:08:50,640 --> 00:08:55,920
shelf scripts

195
00:08:53,120 --> 00:08:56,399
we do have several interfaces to this

196
00:08:55,920 --> 00:08:59,519
there is

197
00:08:56,399 --> 00:09:02,720
a haiku depot to search and install

198
00:08:59,519 --> 00:09:06,080
software there's a software updater

199
00:09:02,720 --> 00:09:09,600
there's also a tool to

200
00:09:06,080 --> 00:09:11,839
get the old brs pkg files and create a

201
00:09:09,600 --> 00:09:13,200
proper haiku package for them and then

202
00:09:11,839 --> 00:09:13,680
there's the command line interface

203
00:09:13,200 --> 00:09:19,600
because

204
00:09:13,680 --> 00:09:19,599
well not everyone knows how to use a gui

205
00:09:19,760 --> 00:09:23,519
the this was a bit challenging because

206
00:09:22,399 --> 00:09:25,279
um

207
00:09:23,519 --> 00:09:27,760
well some people complain when we

208
00:09:25,279 --> 00:09:29,680
introduce the package management

209
00:09:27,760 --> 00:09:31,680
because they say oh no it's not the bos

210
00:09:29,680 --> 00:09:34,399
way well actually it is the

211
00:09:31,680 --> 00:09:35,519
way because it's simpler it is cleaner

212
00:09:34,399 --> 00:09:39,519
it's faster

213
00:09:35,519 --> 00:09:42,160
so well on the bright side

214
00:09:39,519 --> 00:09:44,560
we get almost reproducible builds we

215
00:09:42,160 --> 00:09:48,240
probably have to attach gcc to

216
00:09:44,560 --> 00:09:50,319
make this fully reproducible

217
00:09:48,240 --> 00:09:51,920
but it means that when you create a

218
00:09:50,320 --> 00:09:54,240
package you actually have to

219
00:09:51,920 --> 00:09:56,079
have all the dependencies built already

220
00:09:54,240 --> 00:09:56,800
so you get cyclic dependencies and

221
00:09:56,080 --> 00:09:59,040
everything

222
00:09:56,800 --> 00:09:59,839
and some parts of haiku actually need

223
00:09:59,040 --> 00:10:03,040
haiku to

224
00:09:59,839 --> 00:10:05,839
to build so there are there is a hike

225
00:10:03,040 --> 00:10:05,839
report cross

226
00:10:06,079 --> 00:10:11,120
repository with a few recipes for a

227
00:10:09,279 --> 00:10:14,320
cross build package but

228
00:10:11,120 --> 00:10:17,360
we don't always check it

229
00:10:14,320 --> 00:10:18,640
and also applications tend to put config

230
00:10:17,360 --> 00:10:21,360
files everywhere

231
00:10:18,640 --> 00:10:22,560
and when you use uh language based

232
00:10:21,360 --> 00:10:25,680
package managers like

233
00:10:22,560 --> 00:10:26,319
pip it wants to add the line in the in a

234
00:10:25,680 --> 00:10:28,399
file

235
00:10:26,320 --> 00:10:30,000
telling that there is a directory with

236
00:10:28,399 --> 00:10:34,160
packages inside

237
00:10:30,000 --> 00:10:37,200
so uh yeah but it's doable

238
00:10:34,160 --> 00:10:37,839
uh so as i said updates are fast you can

239
00:10:37,200 --> 00:10:41,120
actually

240
00:10:37,839 --> 00:10:41,839
find uh where a file com a file comes

241
00:10:41,120 --> 00:10:45,279
from

242
00:10:41,839 --> 00:10:47,600
uh by reading an extended attribute

243
00:10:45,279 --> 00:10:50,959
and you are quite sure the binary didn't

244
00:10:47,600 --> 00:10:54,000
change because it's read only anyway

245
00:10:50,959 --> 00:10:56,719
you can also blacklist files like broken

246
00:10:54,000 --> 00:11:00,640
wi-fi drivers from the base package

247
00:10:56,720 --> 00:11:02,560
either at boots or permanently

248
00:11:00,640 --> 00:11:04,319
and as i said you can boot previous

249
00:11:02,560 --> 00:11:07,119
states

250
00:11:04,320 --> 00:11:07,839
if something breaks which sometimes uh

251
00:11:07,120 --> 00:11:09,920
happen

252
00:11:07,839 --> 00:11:11,440
like last week we broke the the

253
00:11:09,920 --> 00:11:13,279
bootloader

254
00:11:11,440 --> 00:11:15,040
which is a bit problematic because the

255
00:11:13,279 --> 00:11:16,399
the stage one the first sector of the

256
00:11:15,040 --> 00:11:18,640
disk uh

257
00:11:16,399 --> 00:11:19,440
only knows how to locate the the primary

258
00:11:18,640 --> 00:11:22,880
one and not the

259
00:11:19,440 --> 00:11:25,120
the previous ones but not that hard to

260
00:11:22,880 --> 00:11:25,120
fix

261
00:11:25,839 --> 00:11:29,839
the transaction directories we cannot

262
00:11:28,320 --> 00:11:31,600
restart from them so you have to

263
00:11:29,839 --> 00:11:33,519
re-download everything when there's a

264
00:11:31,600 --> 00:11:35,920
checksum error or something but

265
00:11:33,519 --> 00:11:36,800
maybe we'll fix this and it uses a bit

266
00:11:35,920 --> 00:11:39,120
more memory

267
00:11:36,800 --> 00:11:40,000
but we are quite conservative so it's

268
00:11:39,120 --> 00:11:42,240
not that bad

269
00:11:40,000 --> 00:11:44,160
and we find out if we catch like two or

270
00:11:42,240 --> 00:11:47,440
three times the package content so

271
00:11:44,160 --> 00:11:48,160
it's better now uh i don't have many

272
00:11:47,440 --> 00:11:50,720
numbers to

273
00:11:48,160 --> 00:11:51,279
show you but uh for now we have more

274
00:11:50,720 --> 00:11:54,000
than

275
00:11:51,279 --> 00:11:56,560
four thousand uh packages recipes and

276
00:11:54,000 --> 00:11:58,560
hyku parts so packages

277
00:11:56,560 --> 00:12:00,560
we have even more recipes in haiku post

278
00:11:58,560 --> 00:12:02,800
none of them are buildable yet

279
00:12:00,560 --> 00:12:03,839
and we have three other smaller

280
00:12:02,800 --> 00:12:07,199
repositories

281
00:12:03,839 --> 00:12:09,920
with uh 1500 packages so

282
00:12:07,200 --> 00:12:12,000
it's not that bad and we don't pretend

283
00:12:09,920 --> 00:12:14,079
to run on servers so we don't have

284
00:12:12,000 --> 00:12:15,200
well we actually have an apache package

285
00:12:14,079 --> 00:12:18,079
for example

286
00:12:15,200 --> 00:12:18,880
and i have more than 600 packages on my

287
00:12:18,079 --> 00:12:21,680
development

288
00:12:18,880 --> 00:12:22,800
virtual machine it works quite well uh i

289
00:12:21,680 --> 00:12:25,920
was scared

290
00:12:22,800 --> 00:12:27,680
a bit when we started it because i

291
00:12:25,920 --> 00:12:30,719
i wasn't sure if it would scale

292
00:12:27,680 --> 00:12:33,359
correctly but it's not that bad

293
00:12:30,720 --> 00:12:34,160
uh so now that i convinced you that you

294
00:12:33,360 --> 00:12:35,920
should port your

295
00:12:34,160 --> 00:12:37,519
application to haiku because it's much

296
00:12:35,920 --> 00:12:40,800
better um

297
00:12:37,519 --> 00:12:42,959
well some people say oh that's not

298
00:12:40,800 --> 00:12:44,560
posix that's not unique yeah well we

299
00:12:42,959 --> 00:12:47,839
don't pretend to be unix

300
00:12:44,560 --> 00:12:50,000
we do have enough supports of posix not

301
00:12:47,839 --> 00:12:53,519
to be bothered with it

302
00:12:50,000 --> 00:12:56,880
but well often when i put

303
00:12:53,519 --> 00:12:58,480
applications i found linux schools

304
00:12:56,880 --> 00:13:01,120
directly inside the code without any

305
00:12:58,480 --> 00:13:02,880
proper checks and the same people who

306
00:13:01,120 --> 00:13:04,639
say we are not posix they don't even

307
00:13:02,880 --> 00:13:07,839
bother to add proper checks for

308
00:13:04,639 --> 00:13:08,639
linux is called so well and well like

309
00:13:07,839 --> 00:13:11,680
the us

310
00:13:08,639 --> 00:13:12,399
did i notify stuff like like 20 years

311
00:13:11,680 --> 00:13:14,880
ago

312
00:13:12,399 --> 00:13:17,120
but just differently besides unnotified

313
00:13:14,880 --> 00:13:20,320
it's not really posix anyway

314
00:13:17,120 --> 00:13:23,839
so it's usually okay to have four bags

315
00:13:20,320 --> 00:13:25,920
you want to modularize your code uh

316
00:13:23,839 --> 00:13:27,920
because if def is not always the proper

317
00:13:25,920 --> 00:13:30,639
way uh sometimes you just

318
00:13:27,920 --> 00:13:32,319
write a base class and subclass this uh

319
00:13:30,639 --> 00:13:34,160
depending on the platform or the feature

320
00:13:32,320 --> 00:13:36,959
you want

321
00:13:34,160 --> 00:13:38,319
and sometimes things can just be an

322
00:13:36,959 --> 00:13:41,119
option you don't

323
00:13:38,320 --> 00:13:41,760
always have to uh make them mandatory so

324
00:13:41,120 --> 00:13:43,920
it's usually

325
00:13:41,760 --> 00:13:45,439
okay to have fallbacks oh yeah i say

326
00:13:43,920 --> 00:13:48,880
this already

327
00:13:45,440 --> 00:13:51,360
just a small example uh putting a cutie

328
00:13:48,880 --> 00:13:52,560
keychain which i needed for something uh

329
00:13:51,360 --> 00:13:55,920
it was

330
00:13:52,560 --> 00:13:58,880
quite easy i just replaced some if this

331
00:13:55,920 --> 00:13:59,279
to uh to make them cleaner and change

332
00:13:58,880 --> 00:14:02,399
like

333
00:13:59,279 --> 00:14:05,839
17 lines and edit the file and that's it

334
00:14:02,399 --> 00:14:08,000
and got merged one big don't you don't

335
00:14:05,839 --> 00:14:08,720
want to return negative negated error

336
00:14:08,000 --> 00:14:12,480
codes

337
00:14:08,720 --> 00:14:16,320
because we already have them negative

338
00:14:12,480 --> 00:14:17,920
and it's bad besides posix changed their

339
00:14:16,320 --> 00:14:21,600
mind at one point

340
00:14:17,920 --> 00:14:24,240
so uh pos wasn't wrong at the time

341
00:14:21,600 --> 00:14:27,839
uh builders are quite okay just make

342
00:14:24,240 --> 00:14:31,519
sure you check for the features you need

343
00:14:27,839 --> 00:14:33,839
um compilers well for system

344
00:14:31,519 --> 00:14:36,399
libraries with gcc2 but otherwise it's

345
00:14:33,839 --> 00:14:40,000
it's quite okay

346
00:14:36,399 --> 00:14:43,360
x11 well what to say you may want to

347
00:14:40,000 --> 00:14:45,360
isolate the x11 code from the logic of

348
00:14:43,360 --> 00:14:49,199
your application

349
00:14:45,360 --> 00:14:49,199
and weyland users will thank you

350
00:14:49,279 --> 00:14:56,399
for qt it's quite okay again

351
00:14:52,399 --> 00:14:59,760
x11 stuff we actually had to clean up

352
00:14:56,399 --> 00:15:03,440
these in some imported apps um

353
00:14:59,760 --> 00:15:06,079
the only problem is opengl for now

354
00:15:03,440 --> 00:15:06,560
as an example i i tried to call the next

355
00:15:06,079 --> 00:15:09,439
cloud

356
00:15:06,560 --> 00:15:11,439
client but then i said oh i need the qt

357
00:15:09,440 --> 00:15:12,320
web engine which is actually a chromium

358
00:15:11,440 --> 00:15:14,720
fork

359
00:15:12,320 --> 00:15:15,360
and chromium is a webkit for fork and it

360
00:15:14,720 --> 00:15:17,199
maintains

361
00:15:15,360 --> 00:15:19,199
uh they are they are maintaining their

362
00:15:17,199 --> 00:15:21,439
own faults of the dependencies

363
00:15:19,199 --> 00:15:22,560
so we had to we would have to maintain

364
00:15:21,440 --> 00:15:24,800
two uh parts of

365
00:15:22,560 --> 00:15:26,079
uh chromium and three parts of the

366
00:15:24,800 --> 00:15:28,560
dependencies so it's

367
00:15:26,079 --> 00:15:29,439
well on the other hand the on cloud

368
00:15:28,560 --> 00:15:31,680
client just

369
00:15:29,440 --> 00:15:32,720
built i just had to implement the

370
00:15:31,680 --> 00:15:37,199
specific

371
00:15:32,720 --> 00:15:37,199
i notify like functions

372
00:15:37,279 --> 00:15:41,040
you may want to fix your toolkit because

373
00:15:39,759 --> 00:15:42,720
sometimes you

374
00:15:41,040 --> 00:15:44,639
you think you need something in the

375
00:15:42,720 --> 00:15:45,199
toolkit but you are afraid of touching

376
00:15:44,639 --> 00:15:47,680
it

377
00:15:45,199 --> 00:15:49,279
so you work around it and that's bad

378
00:15:47,680 --> 00:15:52,800
that's bad there is a great article

379
00:15:49,279 --> 00:15:52,800
about it on linux weekly news

380
00:15:52,880 --> 00:15:56,480
there are many areas where you can

381
00:15:54,560 --> 00:15:59,279
contribute to haiku

382
00:15:56,480 --> 00:16:01,199
uh coding of course either porting or

383
00:15:59,279 --> 00:16:03,439
fixing the base system

384
00:16:01,199 --> 00:16:05,599
uh you can translate uh ads for the

385
00:16:03,440 --> 00:16:09,519
system and

386
00:16:05,600 --> 00:16:12,079
nice vector icons and stuff like that

387
00:16:09,519 --> 00:16:13,360
we already have a nice source of

388
00:16:12,079 --> 00:16:15,599
contributors like

389
00:16:13,360 --> 00:16:16,399
g-slot which we participated several

390
00:16:15,600 --> 00:16:19,759
times

391
00:16:16,399 --> 00:16:21,600
we did gci like

392
00:16:19,759 --> 00:16:23,519
from the beginning and it's it's really

393
00:16:21,600 --> 00:16:25,279
nice it's a

394
00:16:23,519 --> 00:16:26,880
quite a lot of work because you have to

395
00:16:25,279 --> 00:16:28,800
check that students do a

396
00:16:26,880 --> 00:16:30,959
thing correctly but it's it's nice and

397
00:16:28,800 --> 00:16:34,839
we did uh our pretty once

398
00:16:30,959 --> 00:16:38,319
uh and we have the the student here

399
00:16:34,839 --> 00:16:40,240
uh so yeah and some contributors

400
00:16:38,320 --> 00:16:41,600
actually stay with the project so that's

401
00:16:40,240 --> 00:16:44,160
great

402
00:16:41,600 --> 00:16:46,240
so uh well if you want to help uh the

403
00:16:44,160 --> 00:16:48,719
slides have uh clickable links

404
00:16:46,240 --> 00:16:50,399
in the pdf so don't hesitate you can

405
00:16:48,720 --> 00:16:53,120
even donate money if you

406
00:16:50,399 --> 00:16:53,120
if you have some

407
00:16:54,880 --> 00:17:07,839
i think that's it wow that was fast

408
00:17:04,079 --> 00:17:07,839
so if you have any question

409
00:17:07,919 --> 00:17:11,919
yep so for somebody who has never used

410
00:17:10,880 --> 00:17:15,520
bos

411
00:17:11,919 --> 00:17:17,679
what would be the reason to use that

412
00:17:15,520 --> 00:17:19,119
i don't even use a really gooey i'm a

413
00:17:17,679 --> 00:17:21,679
command line user

414
00:17:19,119 --> 00:17:22,799
is there any reason for me to try that

415
00:17:21,679 --> 00:17:25,919
so uh

416
00:17:22,799 --> 00:17:28,000
why use haiku when you never actually

417
00:17:25,919 --> 00:17:31,440
use bos

418
00:17:28,000 --> 00:17:34,240
well unfortunately we

419
00:17:31,440 --> 00:17:35,280
we only had the haiku booth yesterday so

420
00:17:34,240 --> 00:17:37,840
but you can come

421
00:17:35,280 --> 00:17:39,520
and we'll make you a demo there are nice

422
00:17:37,840 --> 00:17:42,639
features like indexable

423
00:17:39,520 --> 00:17:43,440
um extended attributes attributes and

424
00:17:42,640 --> 00:17:45,360
bfs

425
00:17:43,440 --> 00:17:48,160
which you can search very quickly so you

426
00:17:45,360 --> 00:17:51,039
don't have to run like update db

427
00:17:48,160 --> 00:17:52,480
every night and you wonder why your

428
00:17:51,039 --> 00:17:56,320
laptop is swiping and

429
00:17:52,480 --> 00:17:59,120
yeah updatedb um and you can

430
00:17:56,320 --> 00:18:00,000
it's used for emails like subjects and

431
00:17:59,120 --> 00:18:02,000
from too

432
00:18:00,000 --> 00:18:04,080
so you can actually you don't even need

433
00:18:02,000 --> 00:18:07,520
to run your main client to know

434
00:18:04,080 --> 00:18:10,559
that you do have new maze um

435
00:18:07,520 --> 00:18:14,080
and we have uh yeah nice features like

436
00:18:10,559 --> 00:18:16,240
the the file browser we have uh

437
00:18:14,080 --> 00:18:18,320
it's called x-ray navigation so you just

438
00:18:16,240 --> 00:18:20,640
pop a context menu and you can

439
00:18:18,320 --> 00:18:22,240
have the subfolders in sub-menus and you

440
00:18:20,640 --> 00:18:23,840
can even use it for

441
00:18:22,240 --> 00:18:25,679
drag-and-drop so you can just drag and

442
00:18:23,840 --> 00:18:26,399
drop a very folder it opens up context

443
00:18:25,679 --> 00:18:28,720
menu

444
00:18:26,400 --> 00:18:30,960
you don't have to wait for 10 windows to

445
00:18:28,720 --> 00:18:34,640
open and close

446
00:18:30,960 --> 00:18:36,000
so we do things differently we explore

447
00:18:34,640 --> 00:18:39,200
stuff

448
00:18:36,000 --> 00:18:40,480
and yeah we just show how it could be

449
00:18:39,200 --> 00:18:43,039
done

450
00:18:40,480 --> 00:18:43,520
and sometimes the linux people invent

451
00:18:43,039 --> 00:18:47,440
things

452
00:18:43,520 --> 00:18:50,000
the us had 10 years ago like tickles

453
00:18:47,440 --> 00:18:50,000
so yeah

454
00:18:50,880 --> 00:18:56,799
yeah some another question

455
00:18:54,880 --> 00:18:59,840
don't be shy yeah are there any

456
00:18:56,799 --> 00:18:59,840
compatibility layers

457
00:19:00,799 --> 00:19:05,840
so compatibility layers for other binary

458
00:19:03,919 --> 00:19:07,520
formats we do have a compatibility

459
00:19:05,840 --> 00:19:10,159
layers for bsd drivers

460
00:19:07,520 --> 00:19:11,440
so for freebsd drivers we use their

461
00:19:10,160 --> 00:19:14,480
network drivers

462
00:19:11,440 --> 00:19:17,120
for ethernet and wi-fi

463
00:19:14,480 --> 00:19:18,720
so it's a static clip we just compiled a

464
00:19:17,120 --> 00:19:20,639
driver with it and

465
00:19:18,720 --> 00:19:23,039
we get a haiku driver without touching

466
00:19:20,640 --> 00:19:26,320
the code well mostly we do

467
00:19:23,039 --> 00:19:26,320
send some fixes sometimes

468
00:19:26,400 --> 00:19:34,960
we do have qt ports we don't have gtk

469
00:19:31,520 --> 00:19:35,200
we do have sdl and some other stuff we

470
00:19:34,960 --> 00:19:38,320
do

471
00:19:35,200 --> 00:19:40,720
we have many languages we do have rust

472
00:19:38,320 --> 00:19:44,240
and go i think it's maybe not

473
00:19:40,720 --> 00:19:48,480
packaged yet properly but and

474
00:19:44,240 --> 00:19:51,919
java of course it took us some time

475
00:19:48,480 --> 00:19:53,039
we don't have wine yet so if you want to

476
00:19:51,919 --> 00:19:56,720
if you're interested

477
00:19:53,039 --> 00:19:56,720
i mean who uses windows

478
00:19:57,200 --> 00:20:00,240
yep so one of the big selling points of

479
00:19:59,360 --> 00:20:02,080
bos

480
00:20:00,240 --> 00:20:03,760
was the performance of the kernel with

481
00:20:02,080 --> 00:20:06,000
regards to things like multimedia

482
00:20:03,760 --> 00:20:07,679
i was wondering how haiku compares with

483
00:20:06,000 --> 00:20:11,600
vm

484
00:20:07,679 --> 00:20:13,760
so beaus used to be a

485
00:20:11,600 --> 00:20:15,600
great at multimedia because the camera

486
00:20:13,760 --> 00:20:18,879
was fast and

487
00:20:15,600 --> 00:20:21,199
so how does haiku compare actually the

488
00:20:18,880 --> 00:20:24,159
bra scanner wasn't that fast

489
00:20:21,200 --> 00:20:25,039
i did a benchmark like uh 15 years ago

490
00:20:24,159 --> 00:20:27,919
and it was like

491
00:20:25,039 --> 00:20:28,480
10 times slower than linux but the the

492
00:20:27,919 --> 00:20:31,679
way

493
00:20:28,480 --> 00:20:33,280
it it works like it was really

494
00:20:31,679 --> 00:20:35,200
multi-threaded at the time and the

495
00:20:33,280 --> 00:20:38,720
applications were also multi-threaded so

496
00:20:35,200 --> 00:20:39,840
each window has their its own event loop

497
00:20:38,720 --> 00:20:43,039
in a thread

498
00:20:39,840 --> 00:20:45,360
so when a window blocks something

499
00:20:43,039 --> 00:20:46,158
it is like calculations or something it

500
00:20:45,360 --> 00:20:48,479
doesn't

501
00:20:46,159 --> 00:20:49,919
save the whole application so even if

502
00:20:48,480 --> 00:20:51,679
it's slower

503
00:20:49,919 --> 00:20:53,360
you actually feel it's faster because

504
00:20:51,679 --> 00:20:55,360
it's more responsive

505
00:20:53,360 --> 00:20:58,000
so it's not so much of a speedy issue

506
00:20:55,360 --> 00:20:59,199
but uh responsiveness

507
00:20:58,000 --> 00:21:02,320
and it's like you have that

508
00:20:59,200 --> 00:21:02,799
responsibility so yeah haiku does have

509
00:21:02,320 --> 00:21:04,639
this

510
00:21:02,799 --> 00:21:06,240
this responsiveness because we model

511
00:21:04,640 --> 00:21:09,520
everything well mostly

512
00:21:06,240 --> 00:21:11,840
everything uh like bos we do have

513
00:21:09,520 --> 00:21:13,760
threads in uh windows and because it's

514
00:21:11,840 --> 00:21:16,480
written in into the api

515
00:21:13,760 --> 00:21:17,679
just like as if qt when you create a

516
00:21:16,480 --> 00:21:19,600
window

517
00:21:17,679 --> 00:21:21,840
it actually just spawns the thread for

518
00:21:19,600 --> 00:21:21,840
you

519
00:21:24,480 --> 00:21:31,840
three more minutes yep

520
00:21:34,080 --> 00:21:38,639
uh so your wi-fi driver has been broken

521
00:21:37,280 --> 00:21:42,399
for a while so

522
00:21:38,640 --> 00:21:46,880
how can you fix it uh well you can

523
00:21:42,400 --> 00:21:49,200
come to us and we'll see um

524
00:21:46,880 --> 00:21:49,919
yeah you can of course submit a bug

525
00:21:49,200 --> 00:21:54,159
report

526
00:21:49,919 --> 00:21:56,640
uh you can create a ticket and we'll uh

527
00:21:54,159 --> 00:21:57,280
and come to irc because everybody still

528
00:21:56,640 --> 00:22:02,799
use

529
00:21:57,280 --> 00:22:02,799
rsc i hope we can help you there

530
00:22:06,559 --> 00:22:11,039
how many people use like a physical

531
00:22:11,440 --> 00:22:15,360
how many people do you use haiku on a

532
00:22:13,679 --> 00:22:19,039
physical device at least two

533
00:22:15,360 --> 00:22:21,918
or there and three very great yeah

534
00:22:19,039 --> 00:22:22,799
uh well i do have a nvidia card in this

535
00:22:21,919 --> 00:22:26,080
machine so it's

536
00:22:22,799 --> 00:22:28,400
uh i have a full hd panel but only this

537
00:22:26,080 --> 00:22:29,360
display is let's say it's well not

538
00:22:28,400 --> 00:22:31,520
really handy

539
00:22:29,360 --> 00:22:32,639
so i have a vm but uh we don't really

540
00:22:31,520 --> 00:22:36,000
have figures

541
00:22:32,640 --> 00:22:38,000
um i think we might find some download

542
00:22:36,000 --> 00:22:40,720
figures but

543
00:22:38,000 --> 00:22:42,960
real hardware versus resolution i'm not

544
00:22:40,720 --> 00:22:42,960
sure

545
00:22:46,880 --> 00:22:49,919
how many people use haiku at all same

546
00:22:49,039 --> 00:22:54,400
same answer i

547
00:22:49,919 --> 00:22:58,720
don't really know at least two three

548
00:22:54,400 --> 00:22:58,720
and four of course yeah yeah

549
00:23:00,000 --> 00:23:04,880
uh i have really no idea uh

550
00:23:07,200 --> 00:23:11,280
yeah exactly we don't track our users so

551
00:23:09,840 --> 00:23:13,360
we don't know

552
00:23:11,280 --> 00:23:15,280
well we do have bug reports people

553
00:23:13,360 --> 00:23:18,399
telling us crates sometimes people

554
00:23:15,280 --> 00:23:21,440
people complaining on the forum so yeah

555
00:23:18,400 --> 00:23:22,960
at least some people yeah i think we can

556
00:23:21,440 --> 00:23:26,080
wrap it up

557
00:23:22,960 --> 00:23:27,520
any more question next slide have uh

558
00:23:26,080 --> 00:23:28,639
rebuilt our clients for the latest

559
00:23:27,520 --> 00:23:30,559
version next cloud

560
00:23:28,640 --> 00:23:33,280
so uh that might make that work a little

561
00:23:30,559 --> 00:23:35,360
bit easier next cloud

562
00:23:33,280 --> 00:23:36,639
completely uh uh they rewritten their

563
00:23:35,360 --> 00:23:38,959
clients

564
00:23:36,640 --> 00:23:41,840
yeah uh yeah i started the default like

565
00:23:38,960 --> 00:23:45,279
six months ago so uh

566
00:23:41,840 --> 00:23:48,639
well a bit more yeah

567
00:23:45,279 --> 00:23:48,640
what uh web browsers

568
00:23:48,840 --> 00:23:53,279
so what web browsers and haiku we have a

569
00:23:51,919 --> 00:23:55,840
native browser called

570
00:23:53,279 --> 00:23:57,200
web positive which actually uh runs a

571
00:23:55,840 --> 00:24:00,480
webkit inside

572
00:23:57,200 --> 00:24:03,520
uh thanks to adrenia um we do have

573
00:24:00,480 --> 00:24:06,880
um webkit browsers

574
00:24:03,520 --> 00:24:10,158
based using acute

575
00:24:06,880 --> 00:24:11,760
so uh capzilla or whatever we don't have

576
00:24:10,159 --> 00:24:13,600
firefox because firefox they keep

577
00:24:11,760 --> 00:24:16,799
changing their mind so we

578
00:24:13,600 --> 00:24:19,439
stopped following them maybe we'll look

579
00:24:16,799 --> 00:24:22,240
at it again

580
00:24:19,440 --> 00:24:22,240
thank you everyone

581
00:24:24,880 --> 00:24:29,749
[Applause]

582
00:24:30,080 --> 00:24:33,840
thank you

