1
00:00:05,359 --> 00:00:09,840
our next talk will be modernizing

2
00:00:07,440 --> 00:00:11,840
distribution of sdr tools and libraries

3
00:00:09,840 --> 00:00:14,480
with conan

4
00:00:11,840 --> 00:00:16,400
who i know from being a kid reading

5
00:00:14,480 --> 00:00:17,760
about him and

6
00:00:16,400 --> 00:00:19,599
brennan has come all the way from the

7
00:00:17,760 --> 00:00:19,920
u.s to explain how he's going to make

8
00:00:19,600 --> 00:00:22,960
this

9
00:00:19,920 --> 00:00:24,000
all better for us yeah this is uh this

10
00:00:22,960 --> 00:00:28,640
is the back story of

11
00:00:24,000 --> 00:00:31,679
of that barbarian so yeah thank you all

12
00:00:28,640 --> 00:00:33,440
so how many of you actually know

13
00:00:31,679 --> 00:00:36,960
either the conan he was referring to or

14
00:00:33,440 --> 00:00:39,440
the conan that i might be referring to

15
00:00:36,960 --> 00:00:41,200
okay we're getting somewhere um so the

16
00:00:39,440 --> 00:00:45,839
other name for this uh this talk

17
00:00:41,200 --> 00:00:45,840
is what does cmake have to do with snr

18
00:00:46,480 --> 00:00:49,440
it's a question that i find that i ask

19
00:00:48,000 --> 00:00:51,600
myself many times where i'm actually

20
00:00:49,440 --> 00:00:54,320
just trying to

21
00:00:51,600 --> 00:00:55,600
use these tools that we work on we

22
00:00:54,320 --> 00:00:57,440
talked about that hack fest it seems

23
00:00:55,600 --> 00:01:00,239
like cmake was also a topic of the hack

24
00:00:57,440 --> 00:01:01,680
fest in various ways

25
00:01:00,239 --> 00:01:03,760
i think we should make it less of a

26
00:01:01,680 --> 00:01:07,200
topic

27
00:01:03,760 --> 00:01:08,560
so sit down i'm gonna play with some

28
00:01:07,200 --> 00:01:09,520
software-defined radios very exciting

29
00:01:08,560 --> 00:01:11,119
i'm gonna build one of these in my

30
00:01:09,520 --> 00:01:12,399
backyard hook it up see some things

31
00:01:11,119 --> 00:01:14,720
right

32
00:01:12,400 --> 00:01:17,200
um you see i can view images of the

33
00:01:14,720 --> 00:01:20,240
earth from space that's exciting

34
00:01:17,200 --> 00:01:23,360
i just need to put some stuff together

35
00:01:20,240 --> 00:01:24,479
put some stuff together

36
00:01:23,360 --> 00:01:28,159
i just need to download some

37
00:01:24,479 --> 00:01:31,439
applications right well maybe not

38
00:01:28,159 --> 00:01:32,000
so uh so we'll just build it also easy

39
00:01:31,439 --> 00:01:35,839
right you know

40
00:01:32,000 --> 00:01:39,040
clone it cmake and uh

41
00:01:35,840 --> 00:01:40,079
not quite right so i don't think this is

42
00:01:39,040 --> 00:01:41,840
really where we were trying

43
00:01:40,079 --> 00:01:43,279
to go nor the rabbit hole that people

44
00:01:41,840 --> 00:01:46,399
wanted to get to

45
00:01:43,280 --> 00:01:50,880
um so maybe there's an easier way

46
00:01:46,399 --> 00:01:53,920
to solve this problem um and there is

47
00:01:50,880 --> 00:01:57,360
the easier way images of the earth it's

48
00:01:53,920 --> 00:01:57,360
pretty fast no c make required

49
00:01:59,119 --> 00:02:04,159
um but maybe we want to still do this

50
00:02:02,880 --> 00:02:05,439
ourselves a little bit

51
00:02:04,159 --> 00:02:07,360
so i want to talk a little bit about

52
00:02:05,439 --> 00:02:10,639
conan which is an open source c

53
00:02:07,360 --> 00:02:12,640
c plus plus package manager this

54
00:02:10,639 --> 00:02:14,879
isn't replacing c make it's not

55
00:02:12,640 --> 00:02:16,079
replacing any of your favorite tools you

56
00:02:14,879 --> 00:02:19,200
can use ninja

57
00:02:16,080 --> 00:02:20,879
or whatever it is you want to use

58
00:02:19,200 --> 00:02:22,480
but rather than having the tools tell us

59
00:02:20,879 --> 00:02:25,200
what we don't have

60
00:02:22,480 --> 00:02:27,440
what if we let the tools give us those

61
00:02:25,200 --> 00:02:27,440
things

62
00:02:28,000 --> 00:02:30,720
and so when we look at what's going on

63
00:02:29,360 --> 00:02:31,760
here what do we want to do when it comes

64
00:02:30,720 --> 00:02:33,519
to packaging

65
00:02:31,760 --> 00:02:35,599
we want to create explicit dependency

66
00:02:33,519 --> 00:02:37,440
graphs so it's not run cmake have it

67
00:02:35,599 --> 00:02:39,839
tell us what we don't have try again

68
00:02:37,440 --> 00:02:42,000
have it still tell us what we don't have

69
00:02:39,840 --> 00:02:43,920
on and on and on

70
00:02:42,000 --> 00:02:45,680
track what configured features some of

71
00:02:43,920 --> 00:02:47,359
these libraries are very large in terms

72
00:02:45,680 --> 00:02:48,080
of what they can do we don't always want

73
00:02:47,360 --> 00:02:50,400
to configure

74
00:02:48,080 --> 00:02:51,519
every single feature inside of gnu radio

75
00:02:50,400 --> 00:02:54,560
just to

76
00:02:51,519 --> 00:02:57,920
do one simple stream of i don't know fm

77
00:02:54,560 --> 00:03:00,319
signals or something like that

78
00:02:57,920 --> 00:03:02,079
we also don't want to always be building

79
00:03:00,319 --> 00:03:03,839
every single one of our dependencies

80
00:03:02,080 --> 00:03:05,760
over and over and over again just

81
00:03:03,840 --> 00:03:06,319
because we changed one line of code

82
00:03:05,760 --> 00:03:08,640
somewhere

83
00:03:06,319 --> 00:03:10,720
or say we're now using a newer version

84
00:03:08,640 --> 00:03:13,119
of opencv or something like that i don't

85
00:03:10,720 --> 00:03:14,239
know why i need to rebuild opencv for my

86
00:03:13,120 --> 00:03:15,840
windows machine

87
00:03:14,239 --> 00:03:18,400
if anybody's tried that it's a lot of

88
00:03:15,840 --> 00:03:20,480
fun um

89
00:03:18,400 --> 00:03:21,920
i don't know having been part of gnu

90
00:03:20,480 --> 00:03:23,359
radio you see

91
00:03:21,920 --> 00:03:25,518
there's always this question about well

92
00:03:23,360 --> 00:03:27,360
does it build on mac you know what's the

93
00:03:25,519 --> 00:03:28,799
status of this piece here

94
00:03:27,360 --> 00:03:30,560
does it build on windows is bill and

95
00:03:28,799 --> 00:03:31,920
linux all of these pieces

96
00:03:30,560 --> 00:03:33,440
these are not the problems that we

97
00:03:31,920 --> 00:03:34,640
should have to be thinking about so much

98
00:03:33,440 --> 00:03:36,079
we should just be saying these are the

99
00:03:34,640 --> 00:03:38,079
building blocks they come together how

100
00:03:36,080 --> 00:03:40,720
do we package that up

101
00:03:38,080 --> 00:03:42,000
and also we end up in a situation too

102
00:03:40,720 --> 00:03:43,280
where we have people that are using

103
00:03:42,000 --> 00:03:44,879
older systems

104
00:03:43,280 --> 00:03:46,319
they are afraid to upgrade it for

105
00:03:44,879 --> 00:03:47,599
whatever reason

106
00:03:46,319 --> 00:03:49,839
they have too many things that just

107
00:03:47,599 --> 00:03:51,760
barely work glued together

108
00:03:49,840 --> 00:03:53,599
and so we end up being tied to really

109
00:03:51,760 --> 00:03:56,079
old system libraries

110
00:03:53,599 --> 00:03:58,000
we see this with like qt stuff we see it

111
00:03:56,080 --> 00:03:59,360
in other places as well where

112
00:03:58,000 --> 00:04:01,680
we're holding ourselves back in

113
00:03:59,360 --> 00:04:03,040
developing our applications based on

114
00:04:01,680 --> 00:04:05,360
system libraries that we're hoping

115
00:04:03,040 --> 00:04:09,120
people have installed and working in a

116
00:04:05,360 --> 00:04:11,200
in a smart way

117
00:04:09,120 --> 00:04:13,040
so with conan what we do is we actually

118
00:04:11,200 --> 00:04:14,879
start to be more

119
00:04:13,040 --> 00:04:16,478
descriptive about how this whole piece

120
00:04:14,879 --> 00:04:20,000
works so here

121
00:04:16,478 --> 00:04:23,360
uh packaging up something live ac

122
00:04:20,000 --> 00:04:24,639
um and you know we put some information

123
00:04:23,360 --> 00:04:26,000
about what it is

124
00:04:24,639 --> 00:04:28,000
some settings that we want to be able to

125
00:04:26,000 --> 00:04:29,440
configure about this package so the os

126
00:04:28,000 --> 00:04:31,600
the compiler the build type the

127
00:04:29,440 --> 00:04:34,880
architecture we're building out

128
00:04:31,600 --> 00:04:34,880
where we're going to go get data

129
00:04:35,840 --> 00:04:39,679
we're going to use cmake here so we're

130
00:04:38,240 --> 00:04:42,080
going to it's kind of the same you know

131
00:04:39,680 --> 00:04:43,919
we need to configure cmake so we can do

132
00:04:42,080 --> 00:04:46,479
our build

133
00:04:43,919 --> 00:04:47,520
we're going to package it up and then do

134
00:04:46,479 --> 00:04:48,320
a cmake install

135
00:04:47,520 --> 00:04:50,000
and then we're going to collect

136
00:04:48,320 --> 00:04:51,040
information about the libraries that got

137
00:04:50,000 --> 00:04:53,199
installed as part of this

138
00:04:51,040 --> 00:04:54,880
so cmake interfaces really well with

139
00:04:53,199 --> 00:04:57,520
conan so we can extract a lot of this

140
00:04:54,880 --> 00:04:59,520
information you can also manually

141
00:04:57,520 --> 00:05:01,440
describe everything that's in here along

142
00:04:59,520 --> 00:05:03,599
the way you can add additional flags so

143
00:05:01,440 --> 00:05:05,360
options so when you say i want this

144
00:05:03,600 --> 00:05:07,120
library i want it compiled with these

145
00:05:05,360 --> 00:05:09,440
certain feature flags enabled

146
00:05:07,120 --> 00:05:10,800
these become parts of the metadata that

147
00:05:09,440 --> 00:05:13,039
describe the package that you're looking

148
00:05:10,800 --> 00:05:13,039
for

149
00:05:13,440 --> 00:05:18,240
then we want to consume it we have some

150
00:05:16,560 --> 00:05:19,919
kind of boilerplate that we pull up here

151
00:05:18,240 --> 00:05:21,840
to leverage some of the infrastructure

152
00:05:19,919 --> 00:05:24,080
that conan is giving us so in cmake it's

153
00:05:21,840 --> 00:05:26,880
now able to get access to

154
00:05:24,080 --> 00:05:28,479
where all the find package gen we

155
00:05:26,880 --> 00:05:31,199
generate all the fine packages for the

156
00:05:28,479 --> 00:05:32,719
pieces that are needed

157
00:05:31,199 --> 00:05:34,400
it's also going to sandbox a lot of the

158
00:05:32,720 --> 00:05:35,840
stuff off to the side so it needs

159
00:05:34,400 --> 00:05:37,599
special information about the linking so

160
00:05:35,840 --> 00:05:39,359
it takes care of all of that up here

161
00:05:37,600 --> 00:05:41,919
and then when we go to actually do this

162
00:05:39,360 --> 00:05:43,039
linking we say okay i need this libac in

163
00:05:41,919 --> 00:05:44,960
my application

164
00:05:43,039 --> 00:05:46,639
we just say pull in the conan package

165
00:05:44,960 --> 00:05:47,919
for this piece it's not going to pull in

166
00:05:46,639 --> 00:05:48,560
your system one it's going to pull on

167
00:05:47,919 --> 00:05:50,080
the one

168
00:05:48,560 --> 00:05:51,520
that's linked into the the conan

169
00:05:50,080 --> 00:05:53,840
dependencies that you already have over

170
00:05:51,520 --> 00:05:53,840
there

171
00:05:54,320 --> 00:05:58,159
then we go when we build this so we do a

172
00:05:56,000 --> 00:05:59,600
conan create this library at this

173
00:05:58,160 --> 00:06:01,280
version

174
00:05:59,600 --> 00:06:03,039
it spit out a whole bunch of stuff i

175
00:06:01,280 --> 00:06:04,638
didn't think you wanted to see all the

176
00:06:03,039 --> 00:06:06,080
lines of the build happening and at the

177
00:06:04,639 --> 00:06:07,840
end we see that we

178
00:06:06,080 --> 00:06:10,318
package this binary application that

179
00:06:07,840 --> 00:06:12,960
comes with it the license

180
00:06:10,319 --> 00:06:13,840
the header files as well as the library

181
00:06:12,960 --> 00:06:15,599
here

182
00:06:13,840 --> 00:06:17,039
and we created a revision and a package

183
00:06:15,600 --> 00:06:18,240
hash that it's used to be able to

184
00:06:17,039 --> 00:06:19,919
identify

185
00:06:18,240 --> 00:06:21,759
this is exactly the package for those

186
00:06:19,919 --> 00:06:23,198
configurations we wanted to use

187
00:06:21,759 --> 00:06:24,639
and this is now stored in some

188
00:06:23,199 --> 00:06:25,600
mysterious location on your computer

189
00:06:24,639 --> 00:06:28,560
that you don't worry about

190
00:06:25,600 --> 00:06:29,039
off to the side don't touch it it's

191
00:06:28,560 --> 00:06:31,120
there

192
00:06:29,039 --> 00:06:32,840
if you we'll know if you touch it we'll

193
00:06:31,120 --> 00:06:35,600
make you build it again

194
00:06:32,840 --> 00:06:36,960
um but like i was saying so we can go

195
00:06:35,600 --> 00:06:37,440
change some stuff so we talked about

196
00:06:36,960 --> 00:06:39,280
whether

197
00:06:37,440 --> 00:06:41,039
like we had those architecture specific

198
00:06:39,280 --> 00:06:42,400
things but we also say build type

199
00:06:41,039 --> 00:06:44,639
you know we want to build this in debug

200
00:06:42,400 --> 00:06:47,198
mode now too we want to build it

201
00:06:44,639 --> 00:06:49,039
with shared or static libraries these

202
00:06:47,199 --> 00:06:51,039
are all options that can be applied on

203
00:06:49,039 --> 00:06:51,520
here the recipes know how to use these

204
00:06:51,039 --> 00:06:53,440
options

205
00:06:51,520 --> 00:06:55,359
and then build you exactly what you're

206
00:06:53,440 --> 00:06:57,039
looking for and so we do that these are

207
00:06:55,360 --> 00:06:59,360
the settings that came out of it

208
00:06:57,039 --> 00:07:01,120
so we see that i'm building for mac os

209
00:06:59,360 --> 00:07:02,000
this is the you know the compiler

210
00:07:01,120 --> 00:07:05,039
version i'm using

211
00:07:02,000 --> 00:07:07,840
is part of gc or i guess this is a

212
00:07:05,039 --> 00:07:08,880
ceiling apple ceiling but you get all

213
00:07:07,840 --> 00:07:10,880
these different things so if i'm

214
00:07:08,880 --> 00:07:12,639
building on a linux machine

215
00:07:10,880 --> 00:07:15,599
i might have a configuration that's

216
00:07:12,639 --> 00:07:17,759
using gcc or ceiling not apple ceiling

217
00:07:15,599 --> 00:07:19,440
get all these different variations we're

218
00:07:17,759 --> 00:07:21,759
able to keep track of all of that

219
00:07:19,440 --> 00:07:24,639
and make sure we're referencing exactly

220
00:07:21,759 --> 00:07:26,160
what it is that we want

221
00:07:24,639 --> 00:07:27,840
and then we can take this other library

222
00:07:26,160 --> 00:07:30,720
poco i don't know if people

223
00:07:27,840 --> 00:07:32,400
familiar with c c plus poco is kind of a

224
00:07:30,720 --> 00:07:34,160
library that helps do a bunch of

225
00:07:32,400 --> 00:07:36,159
cognitive common tasks but we see this

226
00:07:34,160 --> 00:07:37,919
dependency graph that's being built here

227
00:07:36,160 --> 00:07:39,840
where we have zlib which is required by

228
00:07:37,919 --> 00:07:43,359
openssl and that with ssl

229
00:07:39,840 --> 00:07:45,520
is required by coco and so if i specify

230
00:07:43,360 --> 00:07:46,560
options on poco that i want everything

231
00:07:45,520 --> 00:07:48,960
to be built

232
00:07:46,560 --> 00:07:50,319
in debug mode it's able to go through

233
00:07:48,960 --> 00:07:51,680
and make sure it pulls in the correct

234
00:07:50,319 --> 00:07:53,919
versions of all these

235
00:07:51,680 --> 00:07:56,639
and all of these are actually already

236
00:07:53,919 --> 00:07:59,840
published in a public

237
00:07:56,639 --> 00:08:01,440
kind of registry or center and so i can

238
00:07:59,840 --> 00:08:03,520
change these common flags and

239
00:08:01,440 --> 00:08:05,280
immediately get the packages for all of

240
00:08:03,520 --> 00:08:06,799
these already already pre-built

241
00:08:05,280 --> 00:08:09,359
i don't have to go and rebuild it with

242
00:08:06,800 --> 00:08:09,360
that flag

243
00:08:10,160 --> 00:08:13,919
so now let's do uh a quick little demo

244
00:08:13,599 --> 00:08:18,240
here

245
00:08:13,919 --> 00:08:20,240
uh so what we're gonna do

246
00:08:18,240 --> 00:08:23,039
how many is anybody here familiar with

247
00:08:20,240 --> 00:08:26,080
uh something called goes tools

248
00:08:23,039 --> 00:08:27,759
the goes satellites okay

249
00:08:26,080 --> 00:08:29,599
that was what i was referring to in the

250
00:08:27,759 --> 00:08:31,360
beginning um

251
00:08:29,599 --> 00:08:32,958
it's it started i think out of someone's

252
00:08:31,360 --> 00:08:34,959
just like experimented they were working

253
00:08:32,958 --> 00:08:36,399
on to say hey can i pull down the images

254
00:08:34,958 --> 00:08:38,000
and the data and everything off of these

255
00:08:36,399 --> 00:08:39,440
noaa satellites

256
00:08:38,000 --> 00:08:40,880
it doesn't require very much hardware

257
00:08:39,440 --> 00:08:42,479
it's very accessible and i think it's

258
00:08:40,880 --> 00:08:44,320
actually kind of a fun

259
00:08:42,479 --> 00:08:46,959
piece to do but there are a bunch of

260
00:08:44,320 --> 00:08:48,800
dependencies and their way of solving

261
00:08:46,959 --> 00:08:50,640
the dependency problem is they just

262
00:08:48,800 --> 00:08:52,959
vendored all of the libraries so you

263
00:08:50,640 --> 00:08:56,319
just pull everything down and you know

264
00:08:52,959 --> 00:08:57,680
build off old packages um so instead

265
00:08:56,320 --> 00:08:58,560
what i did is i built the actual

266
00:08:57,680 --> 00:09:01,839
dependencies

267
00:08:58,560 --> 00:09:04,479
for these um and so

268
00:09:01,839 --> 00:09:04,480
let me just

269
00:09:05,200 --> 00:09:10,000
we'll pull up this conan file that i

270
00:09:08,399 --> 00:09:11,279
have here

271
00:09:10,000 --> 00:09:13,279
so we kind of had this stuff we were

272
00:09:11,279 --> 00:09:15,279
talking about before about whether

273
00:09:13,279 --> 00:09:17,040
uh like informate metadata about it

274
00:09:15,279 --> 00:09:20,480
we're gonna be using

275
00:09:17,040 --> 00:09:21,680
cmake generator is this big enough for

276
00:09:20,480 --> 00:09:23,120
people i can make a little bigger if

277
00:09:21,680 --> 00:09:26,160
it's

278
00:09:23,120 --> 00:09:28,000
we're good all right um we're going to

279
00:09:26,160 --> 00:09:30,880
pull in our cmake

280
00:09:28,000 --> 00:09:31,519
wrapper that we need we're going to say

281
00:09:30,880 --> 00:09:33,760
you know

282
00:09:31,519 --> 00:09:35,200
fpic is not valid for windows so that's

283
00:09:33,760 --> 00:09:36,640
not an option that will be available for

284
00:09:35,200 --> 00:09:38,959
that platform

285
00:09:36,640 --> 00:09:40,319
where we're getting our tools we're

286
00:09:38,959 --> 00:09:41,920
going to apply patches you frequently

287
00:09:40,320 --> 00:09:43,120
are going to have to apply packages

288
00:09:41,920 --> 00:09:44,560
patches when you're doing this to make

289
00:09:43,120 --> 00:09:45,120
sure that it's referring to the conan

290
00:09:44,560 --> 00:09:47,680
packages

291
00:09:45,120 --> 00:09:49,600
not the system packages so it'll apply

292
00:09:47,680 --> 00:09:50,800
the patches for all of that

293
00:09:49,600 --> 00:09:54,000
despite how we're going to do the

294
00:09:50,800 --> 00:09:57,439
building the packaging

295
00:09:54,000 --> 00:10:00,880
and the library pieces that are here

296
00:09:57,440 --> 00:10:00,880
um i believe

297
00:10:01,279 --> 00:10:06,000
right here i just realized that i was

298
00:10:04,880 --> 00:10:07,680
not looking at the

299
00:10:06,000 --> 00:10:09,279
one that i meant this was an underlying

300
00:10:07,680 --> 00:10:10,800
library not the actual one i'll just

301
00:10:09,279 --> 00:10:13,120
pull the other one up really quick

302
00:10:10,800 --> 00:10:13,120
um

303
00:10:14,640 --> 00:10:17,120
this is the so that was one of the low

304
00:10:16,000 --> 00:10:18,560
level dependencies this is one of the

305
00:10:17,120 --> 00:10:20,640
higher level dependents so this is the

306
00:10:18,560 --> 00:10:23,279
actual application

307
00:10:20,640 --> 00:10:24,800
what i wanted to point out here is

308
00:10:23,279 --> 00:10:25,920
here's where we're actually specifying

309
00:10:24,800 --> 00:10:27,279
all of the libraries

310
00:10:25,920 --> 00:10:29,120
that are part of this so we make sure

311
00:10:27,279 --> 00:10:30,880
they're all available so we have this

312
00:10:29,120 --> 00:10:34,560
projection library podge 4

313
00:10:30,880 --> 00:10:38,160
proj now i think is what's called rtlsdr

314
00:10:34,560 --> 00:10:41,920
jason a common json parser

315
00:10:38,160 --> 00:10:45,680
this s zip style library

316
00:10:41,920 --> 00:10:49,199
work error correction libraries

317
00:10:45,680 --> 00:10:53,120
a message opencv all of these things

318
00:10:49,200 --> 00:10:57,680
so if we go and build this

319
00:10:53,120 --> 00:11:01,279
um make sure you go into that

320
00:10:57,680 --> 00:11:03,359
ghost tools

321
00:11:01,279 --> 00:11:04,480
make sure i grab the right version

322
00:11:03,360 --> 00:11:07,839
number for this because

323
00:11:04,480 --> 00:11:12,640
it's not version of all conan create

324
00:11:07,839 --> 00:11:12,640
this oops it goes

325
00:11:12,839 --> 00:11:17,600
tools

326
00:11:14,079 --> 00:11:21,439
oops do this

327
00:11:17,600 --> 00:11:25,120
um i believe we do this

328
00:11:21,440 --> 00:11:29,839
all right um so it is what did i do

329
00:11:25,120 --> 00:11:29,839
right now

330
00:11:31,440 --> 00:11:34,640
everything i probably actually didn't

331
00:11:32,880 --> 00:11:36,000
want it it's actually now i just told it

332
00:11:34,640 --> 00:11:37,199
i should tell to do build only the

333
00:11:36,000 --> 00:11:39,279
missing ones

334
00:11:37,200 --> 00:11:40,720
i told to force build everything but

335
00:11:39,279 --> 00:11:42,160
you'll notice i'm actually building

336
00:11:40,720 --> 00:11:44,000
all of the dependencies in that entire

337
00:11:42,160 --> 00:11:46,319
dependency graph including everything

338
00:11:44,000 --> 00:11:47,839
for opencv even right now and this

339
00:11:46,320 --> 00:11:49,200
assuming there's nothing on my machine i

340
00:11:47,839 --> 00:11:50,399
don't have to worry about any of these

341
00:11:49,200 --> 00:11:53,279
things so i'm building that entire

342
00:11:50,399 --> 00:11:55,040
dependency graph

343
00:11:53,279 --> 00:11:56,560
for all these applications so i'm

344
00:11:55,040 --> 00:11:58,480
getting the most recent versions of all

345
00:11:56,560 --> 00:12:00,160
of this stuff

346
00:11:58,480 --> 00:12:01,920
at the end of this it will go through

347
00:12:00,160 --> 00:12:04,800
and

348
00:12:01,920 --> 00:12:04,800
finish this piece up

349
00:12:06,560 --> 00:12:14,239
we'll see how fast this goes

350
00:12:10,480 --> 00:12:16,399
see open cv uh builds here

351
00:12:14,240 --> 00:12:17,680
i might i might change this just do

352
00:12:16,399 --> 00:12:19,600
missing so

353
00:12:17,680 --> 00:12:20,800
you guys don't watch my screen go for

354
00:12:19,600 --> 00:12:25,279
ever

355
00:12:20,800 --> 00:12:27,359
um all right already involved

356
00:12:25,279 --> 00:12:29,600
calling build on ghost tools now we're

357
00:12:27,360 --> 00:12:30,480
just building that one application

358
00:12:29,600 --> 00:12:33,120
which we didn't have a valid

359
00:12:30,480 --> 00:12:38,639
configuration for

360
00:12:33,120 --> 00:12:40,720
it should be done quite soon

361
00:12:38,639 --> 00:12:42,079
yeah so while this building i if you

362
00:12:40,720 --> 00:12:43,920
have multiple recipes

363
00:12:42,079 --> 00:12:45,839
that multiple programs that all depend

364
00:12:43,920 --> 00:12:48,000
on the same library

365
00:12:45,839 --> 00:12:49,040
will it build multiple copies of that

366
00:12:48,000 --> 00:12:52,000
library

367
00:12:49,040 --> 00:12:52,880
no reuse them it will reuse them and i

368
00:12:52,000 --> 00:12:54,959
will show

369
00:12:52,880 --> 00:12:57,120
an example of this okay so this thing

370
00:12:54,959 --> 00:12:58,399
just all went rebuilt ran a couple tests

371
00:12:57,120 --> 00:13:00,959
against the package

372
00:12:58,399 --> 00:13:01,680
so the package is now available and i

373
00:13:00,959 --> 00:13:05,359
can see that

374
00:13:01,680 --> 00:13:08,239
if i go conan search

375
00:13:05,360 --> 00:13:08,240
goes tools

376
00:13:12,720 --> 00:13:16,079
i don't know how to use this keyboard i

377
00:13:14,079 --> 00:13:17,760
apologize

378
00:13:16,079 --> 00:13:19,279
so we see that this recipe does exist

379
00:13:17,760 --> 00:13:23,120
right here

380
00:13:19,279 --> 00:13:28,880
and so you asked so if i do

381
00:13:23,120 --> 00:13:28,880
conan info for this package

382
00:13:29,200 --> 00:13:33,920
graph equals step dot html

383
00:13:32,480 --> 00:13:36,880
so i'm going to generate the dependency

384
00:13:33,920 --> 00:13:36,880
graph for that package

385
00:13:38,880 --> 00:13:42,880
and we see the full dependency graph

386
00:13:40,560 --> 00:13:48,000
real that's

387
00:13:42,880 --> 00:13:51,279
easy to see uh

388
00:13:48,000 --> 00:13:54,240
see here so we see our original this is

389
00:13:51,279 --> 00:13:55,600
our our application actually right here

390
00:13:54,240 --> 00:13:57,120
and all of those dependencies and the

391
00:13:55,600 --> 00:13:59,199
versions of all of those

392
00:13:57,120 --> 00:14:01,199
but you asked about things that require

393
00:13:59,199 --> 00:14:03,760
multiples of the same

394
00:14:01,199 --> 00:14:05,519
so opencv over here we can see a bunch

395
00:14:03,760 --> 00:14:07,279
of things are using libsy

396
00:14:05,519 --> 00:14:08,720
and so in this case they're all

397
00:14:07,279 --> 00:14:12,639
referring to the same

398
00:14:08,720 --> 00:14:14,720
configuration of libsy over here

399
00:14:12,639 --> 00:14:16,399
with this package id that's associated

400
00:14:14,720 --> 00:14:17,760
with it and so

401
00:14:16,399 --> 00:14:19,440
that's where that's where this becomes

402
00:14:17,760 --> 00:14:21,920
more powerful because it'll make sure to

403
00:14:19,440 --> 00:14:24,880
always be pointing at those same

404
00:14:21,920 --> 00:14:24,880
at that same package

405
00:14:25,600 --> 00:14:31,040
so what we did at this point is just

406
00:14:28,560 --> 00:14:35,119
fill up a folder

407
00:14:31,040 --> 00:14:40,000
in your system cone and data

408
00:14:35,120 --> 00:14:40,000
and here's all of the sorry if this is

409
00:14:40,560 --> 00:14:43,119
maybe people can see it these are all

410
00:14:41,760 --> 00:14:44,480
those libraries that got built so these

411
00:14:43,120 --> 00:14:45,920
are like hidden off into your system

412
00:14:44,480 --> 00:14:47,680
with all the revisions and everything

413
00:14:45,920 --> 00:14:50,880
that are

414
00:14:47,680 --> 00:14:54,560
that are there and now

415
00:14:50,880 --> 00:14:57,600
if i go to

416
00:14:54,560 --> 00:14:58,000
a little working directory right here i

417
00:14:57,600 --> 00:15:03,279
can now

418
00:14:58,000 --> 00:15:07,199
do conan install

419
00:15:03,279 --> 00:15:09,600
goes tools oops apparently i copied the

420
00:15:07,199 --> 00:15:12,560
whole thing

421
00:15:09,600 --> 00:15:13,839
here and then i'm going to use a

422
00:15:12,560 --> 00:15:16,638
generator

423
00:15:13,839 --> 00:15:16,639
to deploy

424
00:15:18,720 --> 00:15:23,040
so now what happened is i effectively

425
00:15:21,120 --> 00:15:24,639
just installed all the dependencies that

426
00:15:23,040 --> 00:15:27,199
were already pre-built

427
00:15:24,639 --> 00:15:28,880
in this location for me so here's all of

428
00:15:27,199 --> 00:15:30,319
my libraries that were part of this

429
00:15:28,880 --> 00:15:32,399
all of their libraries everything is

430
00:15:30,320 --> 00:15:33,040
linked to the proper things inside of

431
00:15:32,399 --> 00:15:36,480
here

432
00:15:33,040 --> 00:15:39,360
and so if i look in goes tools

433
00:15:36,480 --> 00:15:40,000
then i see those applications that were

434
00:15:39,360 --> 00:15:44,240
built there

435
00:15:40,000 --> 00:15:44,240
all using the dependencies i wanted um

436
00:15:44,639 --> 00:15:51,120
uh the dash here

437
00:15:48,079 --> 00:15:52,319
let me let me uh pick up the satellite

438
00:15:51,120 --> 00:15:55,839
signal with this

439
00:15:52,320 --> 00:15:55,839
non-existent antenna right here

440
00:15:56,480 --> 00:16:04,720
it will not pick it up i promise that

441
00:16:00,480 --> 00:16:04,720
uh what did i

442
00:16:06,959 --> 00:16:13,119
oh do you it's like i'm guessing at the

443
00:16:11,120 --> 00:16:16,800
uh

444
00:16:13,120 --> 00:16:20,800
arguments here but i thought they were

445
00:16:16,800 --> 00:16:24,079
all right so i found my tuner

446
00:16:20,800 --> 00:16:25,839
and it's now not not finding

447
00:16:24,079 --> 00:16:27,040
the signal that we're looking for but it

448
00:16:25,839 --> 00:16:28,399
is running through there it's using all

449
00:16:27,040 --> 00:16:31,439
those libraries that we just built

450
00:16:28,399 --> 00:16:31,440
through that entire process

451
00:16:33,360 --> 00:16:37,279
so that's that's kind of the core piece

452
00:16:35,600 --> 00:16:39,839
of it we took this thing

453
00:16:37,279 --> 00:16:41,439
built it all i've never built anything

454
00:16:39,839 --> 00:16:45,120
on a mac before with c

455
00:16:41,440 --> 00:16:47,600
up until a week ago so um

456
00:16:45,120 --> 00:16:48,880
it was a it was basically the same i did

457
00:16:47,600 --> 00:16:50,160
i built the libraries on my linux

458
00:16:48,880 --> 00:16:53,360
machine and then i

459
00:16:50,160 --> 00:16:53,920
i did it on the mac and so that's one of

460
00:16:53,360 --> 00:16:55,920
the

461
00:16:53,920 --> 00:16:57,439
the nice features there is that ability

462
00:16:55,920 --> 00:16:58,160
to create your recipes specify all the

463
00:16:57,440 --> 00:16:59,920
platforms

464
00:16:58,160 --> 00:17:01,600
and then kind of make sure you don't get

465
00:16:59,920 --> 00:17:03,199
your let your cmake get into the weeds

466
00:17:01,600 --> 00:17:04,559
about the platforms that it's supporting

467
00:17:03,199 --> 00:17:05,280
you just say these are the packages i

468
00:17:04,559 --> 00:17:09,359
want

469
00:17:05,280 --> 00:17:11,678
go figure out the pieces that we need um

470
00:17:09,359 --> 00:17:13,039
so like i'd also i mean we saw here that

471
00:17:11,679 --> 00:17:15,839
i

472
00:17:13,039 --> 00:17:16,879
it was actually reading off of this rtl

473
00:17:15,839 --> 00:17:20,319
sdr

474
00:17:16,880 --> 00:17:23,039
here but i also

475
00:17:20,319 --> 00:17:23,039
was running

476
00:17:24,160 --> 00:17:28,880
forgive me i'll have to look at my notes

477
00:17:27,520 --> 00:17:32,559
here

478
00:17:28,880 --> 00:17:34,720
we can go scan the the fm bands here so

479
00:17:32,559 --> 00:17:36,639
i'm just using the rtl sdr i installed

480
00:17:34,720 --> 00:17:40,320
the same packages over here

481
00:17:36,640 --> 00:17:40,880
it's gathering uh some data there and we

482
00:17:40,320 --> 00:17:44,480
can go

483
00:17:40,880 --> 00:17:47,840
open um

484
00:17:44,480 --> 00:17:47,840
let's see

485
00:17:48,720 --> 00:17:52,559
and we can see some fm band that we were

486
00:17:51,200 --> 00:17:52,960
able to pick up a little bit better than

487
00:17:52,559 --> 00:17:57,600
that

488
00:17:52,960 --> 00:18:01,360
satellite so it's working it's real

489
00:17:57,600 --> 00:18:04,879
and i can get these same exact things

490
00:18:01,360 --> 00:18:04,879
i'm over here on my this uh

491
00:18:05,600 --> 00:18:08,719
this docker container that i have

492
00:18:07,039 --> 00:18:10,960
running fedora

493
00:18:08,720 --> 00:18:11,840
and i'm gonna pull that same piece for

494
00:18:10,960 --> 00:18:14,080
just for the

495
00:18:11,840 --> 00:18:16,080
rtl sdr it won't find the hardware this

496
00:18:14,080 --> 00:18:18,799
time

497
00:18:16,080 --> 00:18:20,240
but you can see the application is

498
00:18:18,799 --> 00:18:21,520
running and it didn't have to rebuild

499
00:18:20,240 --> 00:18:22,960
anything it pulled all these down from

500
00:18:21,520 --> 00:18:24,559
the existing package feeds

501
00:18:22,960 --> 00:18:28,240
so i didn't have to have a compiler

502
00:18:24,559 --> 00:18:30,320
available to me to use this in this case

503
00:18:28,240 --> 00:18:33,120
so kind of one last thing that i wanted

504
00:18:30,320 --> 00:18:36,159
to mention as part of this

505
00:18:33,120 --> 00:18:39,520
is this comes a little bit

506
00:18:36,160 --> 00:18:42,080
it's my company supports conan conan is

507
00:18:39,520 --> 00:18:45,120
actually part of my company but

508
00:18:42,080 --> 00:18:46,559
we have now

509
00:18:45,120 --> 00:18:49,039
a new service that we're doing for the

510
00:18:46,559 --> 00:18:52,000
open source called conan center we had

511
00:18:49,039 --> 00:18:53,840
conan center before but now we have a

512
00:18:52,000 --> 00:18:56,559
automated build system that's tied to it

513
00:18:53,840 --> 00:18:59,840
so if you publish your recipes into this

514
00:18:56,559 --> 00:19:03,200
into this repository you will then get

515
00:18:59,840 --> 00:19:05,600
your recipes built for mac windows

516
00:19:03,200 --> 00:19:07,280
um and linux in a bunch of different

517
00:19:05,600 --> 00:19:08,320
configurations so if it's a cc plus plus

518
00:19:07,280 --> 00:19:10,480
pro or if it's a c

519
00:19:08,320 --> 00:19:12,000
plus project it'll be built in about 160

520
00:19:10,480 --> 00:19:12,960
different configurations and made all

521
00:19:12,000 --> 00:19:15,600
available

522
00:19:12,960 --> 00:19:17,840
so that's multiple versions of windows

523
00:19:15,600 --> 00:19:20,080
visual studio that's multiple versions

524
00:19:17,840 --> 00:19:23,360
of whatever mac is using

525
00:19:20,080 --> 00:19:26,480
different gcc versions it's not a ci

526
00:19:23,360 --> 00:19:29,439
system for testing your packages um

527
00:19:26,480 --> 00:19:30,960
but it can give you some insight and is

528
00:19:29,440 --> 00:19:33,520
my package actually building

529
00:19:30,960 --> 00:19:34,400
on windows um that's i know for me a

530
00:19:33,520 --> 00:19:38,000
struggle

531
00:19:34,400 --> 00:19:41,039
um so that that's there um and so

532
00:19:38,000 --> 00:19:43,440
we can take one quick look over here

533
00:19:41,039 --> 00:19:45,120
uh at like zlib for instance is

534
00:19:43,440 --> 00:19:46,559
available inside of conan center

535
00:19:45,120 --> 00:19:49,280
and you can see there's 18 different

536
00:19:46,559 --> 00:19:51,360
windows builds 52

537
00:19:49,280 --> 00:19:53,840
linux builds and 12 mac os builds as

538
00:19:51,360 --> 00:19:53,840
well

539
00:19:54,799 --> 00:19:56,960
so

540
00:20:01,120 --> 00:20:04,399
so one of the reasons that i came to

541
00:20:03,360 --> 00:20:05,918
talk about this here

542
00:20:04,400 --> 00:20:07,919
is that i see on the mailing list the

543
00:20:05,919 --> 00:20:10,960
people who are complaining about

544
00:20:07,919 --> 00:20:12,799
uh i just want to build this i don't

545
00:20:10,960 --> 00:20:14,720
care whether it's three seven or three

546
00:20:12,799 --> 00:20:17,200
eight i just want to do my project

547
00:20:14,720 --> 00:20:18,720
why are you making my life hard now

548
00:20:17,200 --> 00:20:20,720
there's a little bit of you know back

549
00:20:18,720 --> 00:20:21,919
and forth on there about you know

550
00:20:20,720 --> 00:20:23,200
everything and i know a bunch of people

551
00:20:21,919 --> 00:20:24,640
been doing some really good work about

552
00:20:23,200 --> 00:20:26,799
especially for gnu radio

553
00:20:24,640 --> 00:20:28,320
packaging up for debian and fedora and

554
00:20:26,799 --> 00:20:30,639
ubuntu

555
00:20:28,320 --> 00:20:31,840
multiple versions of it so that people

556
00:20:30,640 --> 00:20:33,280
can use it

557
00:20:31,840 --> 00:20:34,799
but you're still relying on these system

558
00:20:33,280 --> 00:20:35,678
libraries so still i feel like holding

559
00:20:34,799 --> 00:20:38,960
ourselves back

560
00:20:35,679 --> 00:20:40,960
in certain cases on this and especially

561
00:20:38,960 --> 00:20:41,760
when we look at the out of tree modules

562
00:20:40,960 --> 00:20:43,600
and stuff like that

563
00:20:41,760 --> 00:20:45,600
if we're able to actually package those

564
00:20:43,600 --> 00:20:47,120
things up in a smart way

565
00:20:45,600 --> 00:20:49,199
i think that this is a way that we could

566
00:20:47,120 --> 00:20:52,719
avoid this whole pie bombs

567
00:20:49,200 --> 00:20:54,159
custom system um and save us a bunch of

568
00:20:52,720 --> 00:20:56,400
headache

569
00:20:54,159 --> 00:21:00,159
so i'm interested in exploring down that

570
00:20:56,400 --> 00:21:03,840
path if anybody else is interested

571
00:21:00,159 --> 00:21:06,080
so i love to see that that come together

572
00:21:03,840 --> 00:21:07,120
um and then one last thing if this has

573
00:21:06,080 --> 00:21:08,399
sparked your entrance

574
00:21:07,120 --> 00:21:10,639
independent actually solving

575
00:21:08,400 --> 00:21:15,280
dependencies not just talking about them

576
00:21:10,640 --> 00:21:15,280
um there is a a conference

577
00:21:15,600 --> 00:21:22,320
i note for this called conan days

578
00:21:18,720 --> 00:21:23,600
um so in in madrid in march so if you

579
00:21:22,320 --> 00:21:26,480
want to hang out with the barbarians and

580
00:21:23,600 --> 00:21:28,639
learn about packaging

581
00:21:26,480 --> 00:21:30,240
there's a discount code and i would

582
00:21:28,640 --> 00:21:31,600
happy happy to talk about it more we

583
00:21:30,240 --> 00:21:32,240
have a bunch of people who are using

584
00:21:31,600 --> 00:21:35,600
this

585
00:21:32,240 --> 00:21:38,559
um in industry as well as open source so

586
00:21:35,600 --> 00:21:40,879
what's going on so any questions from

587
00:21:38,559 --> 00:21:40,879
people

588
00:21:41,360 --> 00:21:44,879
lots of questions okay

589
00:22:08,000 --> 00:22:11,600
yes you were talking about flat pack is

590
00:22:09,919 --> 00:22:11,919
that correct so my understanding of flat

591
00:22:11,600 --> 00:22:15,360
pack

592
00:22:11,919 --> 00:22:17,919
is that it it's this kind of yeah

593
00:22:15,360 --> 00:22:20,399
uh he's he's asking about flak pack

594
00:22:17,919 --> 00:22:22,640
versus conan in terms of is it a base

595
00:22:20,400 --> 00:22:24,480
system image that you're layering to

596
00:22:22,640 --> 00:22:25,919
kind of contain

597
00:22:24,480 --> 00:22:27,600
it's not really a container but

598
00:22:25,919 --> 00:22:30,080
containerize

599
00:22:27,600 --> 00:22:31,199
your application your files it's it's

600
00:22:30,080 --> 00:22:32,960
very different

601
00:22:31,200 --> 00:22:34,320
because here all it's doing is just

602
00:22:32,960 --> 00:22:35,520
changing how everything is linked

603
00:22:34,320 --> 00:22:38,799
together and

604
00:22:35,520 --> 00:22:42,639
keeping track of that structure so it's

605
00:22:38,799 --> 00:22:46,158
much lighter in a way

606
00:22:42,640 --> 00:22:51,280
but it also is more complex

607
00:22:46,159 --> 00:22:51,280
because of that so yeah

608
00:22:51,440 --> 00:22:54,480
support statically linking your software

609
00:22:53,840 --> 00:22:59,360
instead of

610
00:22:54,480 --> 00:23:02,000
dynamics yeah so i um

611
00:22:59,360 --> 00:23:02,000
let's see here

612
00:23:03,280 --> 00:23:07,200
where did i put this here right here

613
00:23:05,760 --> 00:23:08,720
[Music]

614
00:23:07,200 --> 00:23:10,400
so these are those options that i was

615
00:23:08,720 --> 00:23:12,159
talking about so see how i have here

616
00:23:10,400 --> 00:23:14,000
shared equals true so this is one of the

617
00:23:12,159 --> 00:23:14,720
most common features is shared versus

618
00:23:14,000 --> 00:23:16,159
static

619
00:23:14,720 --> 00:23:18,080
and being able to flip that flag on you

620
00:23:16,159 --> 00:23:20,000
can change that for

621
00:23:18,080 --> 00:23:22,080
you can either say globally for my build

622
00:23:20,000 --> 00:23:24,159
i want everything static or everything

623
00:23:22,080 --> 00:23:26,399
shared but you can also specify at a

624
00:23:24,159 --> 00:23:28,880
dependency level as well

625
00:23:26,400 --> 00:23:28,880
if you want

626
00:23:32,559 --> 00:23:36,799
do you already have a recipe on your

627
00:23:35,679 --> 00:23:40,159
index

628
00:23:36,799 --> 00:23:42,639
that's one question and the other is

629
00:23:40,159 --> 00:23:45,039
how do those cone package installs

630
00:23:42,640 --> 00:23:47,360
interact with my system installed

631
00:23:45,039 --> 00:23:48,720
can you repeat the first part do you

632
00:23:47,360 --> 00:23:51,199
already have a

633
00:23:48,720 --> 00:23:51,200
recipe

634
00:23:54,000 --> 00:23:57,760
no not yet um this is something that's i

635
00:23:57,039 --> 00:23:59,279
think it's one of the

636
00:23:57,760 --> 00:24:01,360
the first things that i would like to

637
00:23:59,279 --> 00:24:02,880
see so one thing so the question was do

638
00:24:01,360 --> 00:24:05,039
we have lib vulk

639
00:24:02,880 --> 00:24:06,880
inside of conan center we do not right

640
00:24:05,039 --> 00:24:09,360
now

641
00:24:06,880 --> 00:24:11,679
but i think it would be rather trivial

642
00:24:09,360 --> 00:24:14,320
to get in there the one thing i will say

643
00:24:11,679 --> 00:24:16,080
about something like lib bulk is you're

644
00:24:14,320 --> 00:24:17,039
normally targeting as many of your

645
00:24:16,080 --> 00:24:19,678
compilers

646
00:24:17,039 --> 00:24:20,240
or your processor's features as possible

647
00:24:19,679 --> 00:24:23,360
and so

648
00:24:20,240 --> 00:24:23,840
with that you need to specify so there's

649
00:24:23,360 --> 00:24:25,918
some

650
00:24:23,840 --> 00:24:27,439
stuff that's missing here you can create

651
00:24:25,919 --> 00:24:29,440
profiles that represent these with

652
00:24:27,440 --> 00:24:30,799
additional compiler flags that you want

653
00:24:29,440 --> 00:24:33,200
you could just say hey figure out what's

654
00:24:30,799 --> 00:24:36,559
on my machine

655
00:24:33,200 --> 00:24:38,559
but that's where the you may have to

656
00:24:36,559 --> 00:24:40,799
host your own copy of the package in

657
00:24:38,559 --> 00:24:42,240
your registry which you can do

658
00:24:40,799 --> 00:24:43,840
if you want to get all of the support

659
00:24:42,240 --> 00:24:44,880
from all the intrinsics and everything

660
00:24:43,840 --> 00:24:48,158
like that

661
00:24:44,880 --> 00:24:49,919
that are enabled so that was the first

662
00:24:48,159 --> 00:24:52,159
one and then you said there was a second

663
00:24:49,919 --> 00:24:52,159
half

664
00:24:55,679 --> 00:24:59,440
so if you package everything so that

665
00:24:57,520 --> 00:25:01,918
you're pointed at all of the

666
00:24:59,440 --> 00:25:03,360
all of your fines are using the correct

667
00:25:01,919 --> 00:25:04,320
and your target linkings are using the

668
00:25:03,360 --> 00:25:07,039
conan package

669
00:25:04,320 --> 00:25:09,120
feature you will not be using any of

670
00:25:07,039 --> 00:25:10,960
your system libraries

671
00:25:09,120 --> 00:25:13,039
you don't i want to be clear here you

672
00:25:10,960 --> 00:25:13,600
can start doing conan without doing that

673
00:25:13,039 --> 00:25:16,960
if you

674
00:25:13,600 --> 00:25:16,959
you can use your system ones

675
00:25:17,200 --> 00:25:23,120
mr open embedded over here is not happy

676
00:25:20,190 --> 00:25:28,000
[Laughter]

677
00:25:23,120 --> 00:25:33,039
who's doing the security

678
00:25:28,000 --> 00:25:33,039
yeah those people using uh ubuntu 1404

679
00:25:34,080 --> 00:25:39,600
uh okay um

680
00:25:37,840 --> 00:25:41,360
yeah so you can mix and match if you

681
00:25:39,600 --> 00:25:44,399
want um

682
00:25:41,360 --> 00:25:46,000
but the ideal situation is you should be

683
00:25:44,400 --> 00:25:46,720
making it so that all the dependencies

684
00:25:46,000 --> 00:25:50,799
are packaged up

685
00:25:46,720 --> 00:25:50,799
you're running close on time but these

686
00:25:54,840 --> 00:25:58,799
configurations

687
00:25:56,880 --> 00:26:00,000
um so there are defaults it will look at

688
00:25:58,799 --> 00:26:02,158
your local machine

689
00:26:00,000 --> 00:26:04,159
and generate a default uh profile for

690
00:26:02,159 --> 00:26:06,880
you

691
00:26:04,159 --> 00:26:07,919
so you know i'm building on a mac so a

692
00:26:06,880 --> 00:26:09,120
lot of these features have been

693
00:26:07,919 --> 00:26:10,159
established here but you can build

694
00:26:09,120 --> 00:26:14,239
additional

695
00:26:10,159 --> 00:26:14,240
profile or configuration profiles so

696
00:26:19,919 --> 00:26:25,120
should i expect it to work or not

697
00:26:23,120 --> 00:26:26,399
so this is where this is where it's nice

698
00:26:25,120 --> 00:26:28,559
having

699
00:26:26,400 --> 00:26:29,760
the conan center piece because i can see

700
00:26:28,559 --> 00:26:33,279
those configurations

701
00:26:29,760 --> 00:26:39,039
that were built for um and

702
00:26:33,279 --> 00:26:41,919
i'm short on time here so or over so

703
00:26:39,039 --> 00:26:42,640
shuffle out and if anyone wants to get a

704
00:26:41,919 --> 00:26:44,799
seat

705
00:26:42,640 --> 00:26:46,080
quietly shuffle in while we finish

706
00:26:44,799 --> 00:26:47,679
questions yeah

707
00:26:46,080 --> 00:26:50,840
so you can see i just picked one of the

708
00:26:47,679 --> 00:26:53,360
random configurations that was built for

709
00:26:50,840 --> 00:26:55,600
zlib

710
00:26:53,360 --> 00:26:58,000
so this one it was building for gcc

711
00:26:55,600 --> 00:26:59,918
version 8 for linux and some other flags

712
00:26:58,000 --> 00:27:02,000
and stuff so this is one of

713
00:26:59,919 --> 00:27:03,039
conan center has you know like i said

714
00:27:02,000 --> 00:27:05,679
for c plus plus

715
00:27:03,039 --> 00:27:07,200
something like 120 i think different uh

716
00:27:05,679 --> 00:27:08,400
build configurations that it will build

717
00:27:07,200 --> 00:27:11,600
against that cover kind of

718
00:27:08,400 --> 00:27:13,279
the common cases but you can i mean

719
00:27:11,600 --> 00:27:14,559
people use this also for building like

720
00:27:13,279 --> 00:27:16,480
for android ndk

721
00:27:14,559 --> 00:27:17,760
and stuff like that so you can tweak

722
00:27:16,480 --> 00:27:20,320
those things as you wish

723
00:27:17,760 --> 00:27:21,520
to build and not every recipe will build

724
00:27:20,320 --> 00:27:23,039
on all these configurations

725
00:27:21,520 --> 00:27:26,000
like some of them you say this is not

726
00:27:23,039 --> 00:27:27,679
something that builds in windows

727
00:27:26,000 --> 00:27:29,279
maybe the developer just doesn't support

728
00:27:27,679 --> 00:27:32,159
windows as a something they're building

729
00:27:29,279 --> 00:27:32,159
so then you won't have those

730
00:27:32,840 --> 00:27:35,840
configurations

731
00:27:36,399 --> 00:27:38,479
you

